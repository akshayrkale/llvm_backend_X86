; ModuleID = 'expr.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.rtx_def = type { i32, [1 x %union.rtunion_def] }
%union.rtunion_def = type { i64 }
%struct.function = type { %struct.eh_status*, %struct.stmt_status*, %struct.expr_status*, %struct.emit_status*, %struct.varasm_status*, i8*, %union.tree_node*, %struct.function*, i32, i32, i32, i32, %struct.rtx_def*, %struct.ix86_args, %struct.rtx_def*, %struct.rtx_def*, i8*, %struct.initial_value_struct*, i32, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i64, %union.tree_node*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, %struct.rtx_def**, %struct.temp_slot*, i32, i32, i32, %struct.var_refs_queue*, i32, i32, i8*, %union.tree_node*, %struct.rtx_def*, i32, i32, %struct.machine_function*, i32, i32, %struct.language_function*, %struct.rtx_def*, i24 }
%struct.eh_status = type opaque
%struct.stmt_status = type opaque
%struct.expr_status = type { i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def* }
%struct.emit_status = type { i32, i32, %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.sequence_stack*, i32, i32, i8*, i32, i8*, %union.tree_node**, %struct.rtx_def** }
%struct.sequence_stack = type { %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.sequence_stack* }
%struct.varasm_status = type opaque
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.initial_value_struct = type opaque
%struct.temp_slot = type opaque
%struct.var_refs_queue = type { %struct.rtx_def*, i32, i32, %struct.var_refs_queue* }
%union.tree_node = type { %struct.tree_decl }
%struct.tree_decl = type { %struct.tree_common, i8*, i32, i32, %union.tree_node*, i48, %union.anon, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %union.anon.1, %union.tree_node*, %union.tree_node*, %union.tree_node*, i64, %struct.lang_decl* }
%struct.tree_common = type { %union.tree_node*, %union.tree_node*, i32 }
%union.anon = type { i64 }
%union.anon.1 = type { %struct.function* }
%struct.lang_decl = type opaque
%struct.machine_function = type opaque
%struct.language_function = type opaque
%struct.insn_data = type { i8*, i8*, %struct.rtx_def* (%struct.rtx_def*, ...)*, %struct.insn_operand_data*, i8, i8, i8, i8 }
%struct.insn_operand_data = type { i32 (%struct.rtx_def*, i32)*, i8*, i16, i8, i8 }
%struct.optab = type { i32, [59 x %struct.anon.3] }
%struct.anon.3 = type { i32, %struct.rtx_def* }
%struct.processor_costs = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], [3 x i32], i32, [3 x i32], [3 x i32], i32, [2 x i32], [2 x i32], i32, [3 x i32], [3 x i32], i32, i32, i32 }
%struct.lang_hooks = type { i8*, i64, void ()*, i32 (i32, i8**)*, void ()*, i8* (i8*)*, void ()*, void ()*, i64 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i32 (%struct.rtx_def*, %union.tree_node*)*, i32 (%union.tree_node*)*, i8, void ()*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (i32)*, %struct.lang_hooks_for_tree_inlining, %struct.lang_hooks_for_tree_dump }
%struct._IO_FILE = type opaque
%struct.lang_hooks_for_tree_inlining = type { %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, i8*)*, i32 (%union.tree_node**)*, i32 (%union.tree_node*)*, %union.tree_node* (i8*, %union.tree_node*)*, i32 (%union.tree_node*)*, i32 (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*, i8*, i32*, i8*)*, i32 (%union.tree_node*)*, i32 (%union.tree_node*)*, void (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)* }
%struct.lang_hooks_for_tree_dump = type { i32 (i8*, %union.tree_node*)*, i32 (%union.tree_node*)* }
%struct.realvaluetype = type { [3 x i64] }
%struct.rtvec_def = type { i32, [1 x %struct.rtx_def*] }
%struct.mem_attrs = type { i64, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32 }
%struct.tree_type = type { %struct.tree_common, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32, i32, i32, %union.tree_node*, %union.tree_node*, %union.anon.2, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i64, %struct.lang_type* }
%union.anon.2 = type { i8* }
%struct.lang_type = type opaque
%struct.nesting = type opaque
%struct.store_by_pieces = type { %struct.rtx_def*, %struct.rtx_def*, i32, i32, i64, i64, %struct.rtx_def* (i8*, i64, i32)*, i8*, i32 }

@global_rtl = external global [11 x %struct.rtx_def*]
@direct_store = internal unnamed_addr global [59 x i8] zeroinitializer, align 16
@direct_load = internal unnamed_addr global [59 x i8] zeroinitializer, align 16
@cfun = external global %struct.function*
@.str = private unnamed_addr constant [7 x i8] c"expr.c\00", align 1
@__FUNCTION__.finish_expr_for_function = private unnamed_addr constant [25 x i8] c"finish_expr_for_function\00", align 1
@mode_class = external constant [59 x i32]
@__FUNCTION__.convert_move = private unnamed_addr constant [13 x i8] c"convert_move\00", align 1
@mode_size = external constant [59 x i8]
@mode_bitsize = external constant [59 x i16]
@target_flags = external global i32
@libfunc_table = external global [97 x %struct.rtx_def*]
@optimize = external global i32
@word_mode = external global i32
@const_int_rtx = external global [129 x %struct.rtx_def*]
@insn_data = external constant [0 x %struct.insn_data]
@flag_force_mem = external global i32
@mode_wider_mode = external constant [59 x i8]
@class_narrowest_mode = external constant [9 x i32]
@optab_table = external global [49 x %struct.optab*]
@__FUNCTION__.move_by_pieces = private unnamed_addr constant [15 x i8] c"move_by_pieces\00", align 1
@emit_block_move.fn = internal global %union.tree_node* null, align 8
@__FUNCTION__.emit_block_move = private unnamed_addr constant [16 x i8] c"emit_block_move\00", align 1
@optimize_size = external global i32
@ix86_cost = external global %struct.processor_costs*
@volatile_ok = external global i32
@movstr_optab = common global [59 x i32] zeroinitializer, align 16
@mode_mask_array = external constant [59 x i64]
@sizetype_tab = external global [6 x %union.tree_node*]
@.str1 = private unnamed_addr constant [7 x i8] c"memcpy\00", align 1
@global_trees = external global [51 x %union.tree_node*]
@__FUNCTION__.move_block_from_reg = private unnamed_addr constant [20 x i8] c"move_block_from_reg\00", align 1
@__FUNCTION__.emit_group_load = private unnamed_addr constant [16 x i8] c"emit_group_load\00", align 1
@__FUNCTION__.emit_group_store = private unnamed_addr constant [17 x i8] c"emit_group_store\00", align 1
@__FUNCTION__.use_reg = private unnamed_addr constant [8 x i8] c"use_reg\00", align 1
@__FUNCTION__.use_regs = private unnamed_addr constant [9 x i8] c"use_regs\00", align 1
@reg_raw_mode = external global [53 x i32]
@__FUNCTION__.can_store_by_pieces = private unnamed_addr constant [20 x i8] c"can_store_by_pieces\00", align 1
@__FUNCTION__.store_by_pieces = private unnamed_addr constant [16 x i8] c"store_by_pieces\00", align 1
@clear_storage.fn = internal global %union.tree_node* null, align 8
@const_tiny_rtx = external global [3 x [59 x %struct.rtx_def*]]
@clrstr_optab = common global [59 x i32] zeroinitializer, align 16
@.str2 = private unnamed_addr constant [7 x i8] c"memset\00", align 1
@integer_types = external global [11 x %union.tree_node*]
@__FUNCTION__.emit_move_insn = private unnamed_addr constant [15 x i8] c"emit_move_insn\00", align 1
@flag_force_addr = external global i32
@__FUNCTION__.emit_move_insn_1 = private unnamed_addr constant [17 x i8] c"emit_move_insn_1\00", align 1
@mode_unit_size = external constant [59 x i8]
@reload_in_progress = external global i32
@reload_completed = external global i32
@.str3 = private unnamed_addr constant [52 x i8] c"function using short complex types cannot be inline\00", align 1
@ptr_mode = external global i32
@__FUNCTION__.emit_push_insn = private unnamed_addr constant [15 x i8] c"emit_push_insn\00", align 1
@__FUNCTION__.expand_assignment = private unnamed_addr constant [18 x i8] c"expand_assignment\00", align 1
@tree_code_type = external global [256 x i8]
@pic_offset_table_rtx = external global %struct.rtx_def*
@safe_from_p.save_expr_list = internal unnamed_addr global %union.tree_node* null, align 8
@__FUNCTION__.safe_from_p = private unnamed_addr constant [12 x i8] c"safe_from_p\00", align 1
@lang_hooks = external constant %struct.lang_hooks
@placeholder_list = internal unnamed_addr global %union.tree_node* null, align 8
@cse_not_expected = common global i32 0, align 4
@current_function_decl = external global %union.tree_node*
@inline_function_decl = external global %union.tree_node*
@.str4 = private unnamed_addr constant [39 x i8] c"prior parameter's size depends on `%s'\00", align 1
@__FUNCTION__.expand_expr = private unnamed_addr constant [12 x i8] c"expand_expr\00", align 1
@input_filename = external global i8*
@lineno = external global i32
@.str5 = private unnamed_addr constant [34 x i8] c"returned value in block_exit_expr\00", align 1
@rtx_class = external constant [153 x i8]
@byte_mode = external global i32
@lang_expand_expr = external global %struct.rtx_def* (%union.tree_node*, %struct.rtx_def*, i32, i32)*
@flag_trapv = external global i32
@flag_unsafe_math_optimizations = external global i32
@dconst1 = external global %struct.realvaluetype
@ix86_branch_cost = external global i32
@flag_omit_frame_pointer = external global i32
@flag_no_inline = external global i32
@flag_inline_functions = external global i32
@__FUNCTION__.do_jump = private unnamed_addr constant [8 x i8] c"do_jump\00", align 1
@const_true_rtx = external global %struct.rtx_def*
@flag_pic = external global i32
@__FUNCTION__.do_store_flag = private unnamed_addr constant [14 x i8] c"do_store_flag\00", align 1
@setcc_gen_code = external global [153 x i32]
@bcc_gen_fctn = external global [153 x %struct.rtx_def* (%struct.rtx_def*)*]
@__FUNCTION__.store_constructor = private unnamed_addr constant [18 x i8] c"store_constructor\00", align 1
@.str6 = private unnamed_addr constant [10 x i8] c"__setbits\00", align 1
@dconst0 = external global %struct.realvaluetype
@__FUNCTION__.store_field = private unnamed_addr constant [12 x i8] c"store_field\00", align 1
@flag_optimize_sibling_calls = external global i32
@__FUNCTION__.store_by_pieces_1 = private unnamed_addr constant [18 x i8] c"store_by_pieces_1\00", align 1
@__FUNCTION__.move_by_pieces_ninsns = private unnamed_addr constant [22 x i8] c"move_by_pieces_ninsns\00", align 1

; Function Attrs: nounwind uwtable
define void @init_expr_once() #0 {
entry:
  %num_clobbers = alloca i32, align 4
  call void @start_sequence() #5
  %0 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !1
  %call = call %struct.rtx_def* @gen_rtx_MEM(i32 0, %struct.rtx_def* %0) #5
  %1 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 3), align 8, !tbaa !1
  %call1 = call %struct.rtx_def* @gen_rtx_MEM(i32 0, %struct.rtx_def* %1) #5
  %call2 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* null, %struct.rtx_def* null) #5
  %call3 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call2) #5
  %arrayidx = getelementptr inbounds %struct.rtx_def* %call3, i64 0, i32 1, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %3 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 0
  %4 = getelementptr inbounds %struct.rtx_def* %call1, i64 0, i32 0
  %5 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 1, i32 0
  %call.c = ptrtoint %struct.rtx_def* %call to i64
  %6 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 0, i32 0
  %call1.c = ptrtoint %struct.rtx_def* %call1 to i64
  br label %for.body

for.body:                                         ; preds = %for.inc82, %entry
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next, %for.inc82 ]
  %arrayidx4 = getelementptr inbounds [59 x i8]* @direct_store, i64 0, i64 %indvars.iv
  store i8 0, i8* %arrayidx4, align 1, !tbaa !5
  %arrayidx6 = getelementptr inbounds [59 x i8]* @direct_load, i64 0, i64 %indvars.iv
  store i8 0, i8* %arrayidx6, align 1, !tbaa !5
  %bf.load = load i32* %3, align 8
  %7 = shl i64 %indvars.iv, 16
  %bf.clear = and i32 %bf.load, -16711681
  %8 = trunc i64 %7 to i32
  %bf.set = or i32 %bf.clear, %8
  store i32 %bf.set, i32* %3, align 8
  %bf.load7 = load i32* %4, align 8
  %bf.clear10 = and i32 %bf.load7, -16711681
  %bf.set11 = or i32 %bf.clear10, %8
  store i32 %bf.set11, i32* %4, align 8
  %9 = trunc i64 %indvars.iv to i32
  switch i32 %9, label %land.rhs [
    i32 51, label %for.inc82
    i32 0, label %for.inc82
  ]

land.rhs:                                         ; preds = %for.body, %for.inc
  %regno.0129 = phi i32 [ %inc, %for.inc ], [ 0, %for.body ]
  %10 = load i8* %arrayidx6, align 1, !tbaa !5
  %cmp18 = icmp eq i8 %10, 0
  br i1 %cmp18, label %for.body25, label %lor.rhs

lor.rhs:                                          ; preds = %land.rhs
  %11 = load i8* %arrayidx4, align 1, !tbaa !5
  %cmp23 = icmp eq i8 %11, 0
  br i1 %cmp23, label %for.body25, label %for.inc82

for.body25:                                       ; preds = %land.rhs, %lor.rhs
  %call26 = call i32 @ix86_hard_regno_mode_ok(i32 %regno.0129, i32 %9) #5
  %tobool = icmp eq i32 %call26, 0
  br i1 %tobool, label %for.inc, label %if.end

if.end:                                           ; preds = %for.body25
  %call28 = call %struct.rtx_def* @gen_rtx_REG(i32 %9, i32 %regno.0129) #5
  store i64 %call.c, i64* %5, align 8, !tbaa !1
  %call28.c = ptrtoint %struct.rtx_def* %call28 to i64
  store i64 %call28.c, i64* %6, align 8, !tbaa !1
  %call35 = call i32 @recog(%struct.rtx_def* %2, %struct.rtx_def* %call3, i32* %num_clobbers) #5
  %cmp36 = icmp sgt i32 %call35, -1
  br i1 %cmp36, label %if.then38, label %if.end41

if.then38:                                        ; preds = %if.end
  store i8 1, i8* %arrayidx6, align 1, !tbaa !5
  br label %if.end41

if.end41:                                         ; preds = %if.then38, %if.end
  store i64 %call1.c, i64* %5, align 8, !tbaa !1
  store i64 %call28.c, i64* %6, align 8, !tbaa !1
  %call48 = call i32 @recog(%struct.rtx_def* %2, %struct.rtx_def* %call3, i32* %num_clobbers) #5
  %cmp49 = icmp sgt i32 %call48, -1
  br i1 %cmp49, label %if.then51, label %if.end54

if.then51:                                        ; preds = %if.end41
  store i8 1, i8* %arrayidx6, align 1, !tbaa !5
  br label %if.end54

if.end54:                                         ; preds = %if.then51, %if.end41
  store i64 %call28.c, i64* %5, align 8, !tbaa !1
  store i64 %call.c, i64* %6, align 8, !tbaa !1
  %call61 = call i32 @recog(%struct.rtx_def* %2, %struct.rtx_def* %call3, i32* %num_clobbers) #5
  %cmp62 = icmp sgt i32 %call61, -1
  br i1 %cmp62, label %if.then64, label %if.end67

if.then64:                                        ; preds = %if.end54
  store i8 1, i8* %arrayidx4, align 1, !tbaa !5
  br label %if.end67

if.end67:                                         ; preds = %if.then64, %if.end54
  store i64 %call28.c, i64* %5, align 8, !tbaa !1
  store i64 %call1.c, i64* %6, align 8, !tbaa !1
  %call74 = call i32 @recog(%struct.rtx_def* %2, %struct.rtx_def* %call3, i32* %num_clobbers) #5
  %cmp75 = icmp sgt i32 %call74, -1
  br i1 %cmp75, label %if.then77, label %for.inc

if.then77:                                        ; preds = %if.end67
  store i8 1, i8* %arrayidx4, align 1, !tbaa !5
  br label %for.inc

for.inc:                                          ; preds = %for.body25, %if.end67, %if.then77
  %inc = add nsw i32 %regno.0129, 1
  %cmp15 = icmp slt i32 %inc, 53
  br i1 %cmp15, label %land.rhs, label %for.inc82

for.inc82:                                        ; preds = %for.inc, %lor.rhs, %for.body, %for.body
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 59
  br i1 %exitcond, label %for.end83, label %for.body

for.end83:                                        ; preds = %for.inc82
  call void @end_sequence() #5
  ret void
}

declare void @start_sequence() #1

declare %struct.rtx_def* @gen_rtx_MEM(i32, %struct.rtx_def*) #1

declare %struct.rtx_def* @emit_insn(%struct.rtx_def*) #1

declare %struct.rtx_def* @gen_rtx_fmt_ee(i32, i32, %struct.rtx_def*, %struct.rtx_def*) #1

declare i32 @ix86_hard_regno_mode_ok(i32, i32) #1

declare %struct.rtx_def* @gen_rtx_REG(i32, i32) #1

declare i32 @recog(%struct.rtx_def*, %struct.rtx_def*, i32*) #1

declare void @end_sequence() #1

; Function Attrs: nounwind uwtable
define void @init_expr() #0 {
entry:
  %call = tail call noalias i8* @xmalloc(i64 48) #5
  %0 = bitcast i8* %call to %struct.expr_status*
  %1 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr = getelementptr inbounds %struct.function* %1, i64 0, i32 2
  store %struct.expr_status* %0, %struct.expr_status** %expr, align 8, !tbaa !6
  %2 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr1 = getelementptr inbounds %struct.function* %2, i64 0, i32 2
  %3 = load %struct.expr_status** %expr1, align 8, !tbaa !6
  %x_pending_chain = getelementptr inbounds %struct.expr_status* %3, i64 0, i32 6
  store %struct.rtx_def* null, %struct.rtx_def** %x_pending_chain, align 8, !tbaa !11
  %4 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr2 = getelementptr inbounds %struct.function* %4, i64 0, i32 2
  %5 = load %struct.expr_status** %expr2, align 8, !tbaa !6
  %x_pending_stack_adjust = getelementptr inbounds %struct.expr_status* %5, i64 0, i32 0
  store i32 0, i32* %x_pending_stack_adjust, align 4, !tbaa !13
  %x_stack_pointer_delta = getelementptr inbounds %struct.expr_status* %5, i64 0, i32 2
  store i32 0, i32* %x_stack_pointer_delta, align 4, !tbaa !14
  %x_inhibit_defer_pop = getelementptr inbounds %struct.expr_status* %5, i64 0, i32 1
  store i32 0, i32* %x_inhibit_defer_pop, align 4, !tbaa !15
  %x_saveregs_value = getelementptr inbounds %struct.expr_status* %5, i64 0, i32 3
  store %struct.rtx_def* null, %struct.rtx_def** %x_saveregs_value, align 8, !tbaa !16
  %6 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr6 = getelementptr inbounds %struct.function* %6, i64 0, i32 2
  %7 = load %struct.expr_status** %expr6, align 8, !tbaa !6
  %x_apply_args_value = getelementptr inbounds %struct.expr_status* %7, i64 0, i32 4
  store %struct.rtx_def* null, %struct.rtx_def** %x_apply_args_value, align 8, !tbaa !17
  %8 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr7 = getelementptr inbounds %struct.function* %8, i64 0, i32 2
  %9 = load %struct.expr_status** %expr7, align 8, !tbaa !6
  %x_forced_labels = getelementptr inbounds %struct.expr_status* %9, i64 0, i32 5
  store %struct.rtx_def* null, %struct.rtx_def** %x_forced_labels, align 8, !tbaa !18
  ret void
}

declare noalias i8* @xmalloc(i64) #1

; Function Attrs: nounwind uwtable
define void @mark_expr_status(%struct.expr_status* readonly %p) #0 {
entry:
  %cmp = icmp eq %struct.expr_status* %p, null
  br i1 %cmp, label %do.end21, label %do.body

do.body:                                          ; preds = %entry
  %x_saveregs_value = getelementptr inbounds %struct.expr_status* %p, i64 0, i32 3
  %0 = load %struct.rtx_def** %x_saveregs_value, align 8, !tbaa !16
  %cmp1 = icmp eq %struct.rtx_def* %0, null
  br i1 %cmp1, label %do.body4, label %land.lhs.true

land.lhs.true:                                    ; preds = %do.body
  %1 = bitcast %struct.rtx_def* %0 to i8*
  %call = tail call i32 @ggc_set_mark(i8* %1) #5
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.then2, label %do.body4

if.then2:                                         ; preds = %land.lhs.true
  tail call void @ggc_mark_rtx_children(%struct.rtx_def* %0) #5
  br label %do.body4

do.body4:                                         ; preds = %land.lhs.true, %do.body, %if.then2
  %x_apply_args_value = getelementptr inbounds %struct.expr_status* %p, i64 0, i32 4
  %2 = load %struct.rtx_def** %x_apply_args_value, align 8, !tbaa !17
  %cmp6 = icmp eq %struct.rtx_def* %2, null
  br i1 %cmp6, label %do.body13, label %land.lhs.true7

land.lhs.true7:                                   ; preds = %do.body4
  %3 = bitcast %struct.rtx_def* %2 to i8*
  %call8 = tail call i32 @ggc_set_mark(i8* %3) #5
  %tobool9 = icmp eq i32 %call8, 0
  br i1 %tobool9, label %if.then10, label %do.body13

if.then10:                                        ; preds = %land.lhs.true7
  tail call void @ggc_mark_rtx_children(%struct.rtx_def* %2) #5
  br label %do.body13

do.body13:                                        ; preds = %land.lhs.true7, %do.body4, %if.then10
  %x_forced_labels = getelementptr inbounds %struct.expr_status* %p, i64 0, i32 5
  %4 = load %struct.rtx_def** %x_forced_labels, align 8, !tbaa !18
  %cmp15 = icmp eq %struct.rtx_def* %4, null
  br i1 %cmp15, label %do.end21, label %land.lhs.true16

land.lhs.true16:                                  ; preds = %do.body13
  %5 = bitcast %struct.rtx_def* %4 to i8*
  %call17 = tail call i32 @ggc_set_mark(i8* %5) #5
  %tobool18 = icmp eq i32 %call17, 0
  br i1 %tobool18, label %if.then19, label %do.end21

if.then19:                                        ; preds = %land.lhs.true16
  tail call void @ggc_mark_rtx_children(%struct.rtx_def* %4) #5
  br label %do.end21

do.end21:                                         ; preds = %land.lhs.true16, %do.body13, %if.then19, %entry
  ret void
}

declare i32 @ggc_set_mark(i8*) #1

declare void @ggc_mark_rtx_children(%struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define void @free_expr_status(%struct.function* nocapture %f) #0 {
entry:
  %expr = getelementptr inbounds %struct.function* %f, i64 0, i32 2
  %0 = load %struct.expr_status** %expr, align 8, !tbaa !6
  %1 = bitcast %struct.expr_status* %0 to i8*
  tail call void @free(i8* %1)
  store %struct.expr_status* null, %struct.expr_status** %expr, align 8, !tbaa !6
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) #2

; Function Attrs: nounwind uwtable
define void @finish_expr_for_function() #0 {
entry:
  %0 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr = getelementptr inbounds %struct.function* %0, i64 0, i32 2
  %1 = load %struct.expr_status** %expr, align 8, !tbaa !6
  %x_pending_chain = getelementptr inbounds %struct.expr_status* %1, i64 0, i32 6
  %2 = load %struct.rtx_def** %x_pending_chain, align 8, !tbaa !11
  %tobool = icmp eq %struct.rtx_def* %2, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 313, i8* getelementptr inbounds ([25 x i8]* @__FUNCTION__.finish_expr_for_function, i64 0, i64 0)) #8
  unreachable

if.end:                                           ; preds = %entry
  ret void
}

; Function Attrs: noreturn
declare void @fancy_abort(i8*, i32, i8*) #3

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %x, i32 %modify) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 71
  br i1 %cmp, label %if.end84, label %if.then

if.then:                                          ; preds = %entry
  %cmp1 = icmp eq i32 %bf.clear, 66
  %cmp1.not = xor i1 %cmp1, true
  %bf.clear3 = and i32 %bf.load, 16711680
  %cmp4 = icmp eq i32 %bf.clear3, 3342336
  %or.cond166 = or i1 %cmp4, %cmp1.not
  br i1 %or.cond166, label %if.end36, label %land.lhs.true5

land.lhs.true5:                                   ; preds = %if.then
  %arrayidx = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %2 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 0
  %bf.load6 = load i32* %2, align 8
  %bf.clear7 = and i32 %bf.load6, 65535
  %cmp8 = icmp ne i32 %bf.clear7, 71
  %tobool = icmp ne i32 %modify, 0
  %or.cond = or i1 %cmp8, %tobool
  br i1 %or.cond, label %if.end36, label %if.then10

if.then10:                                        ; preds = %land.lhs.true5
  %fld14 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1
  %rtx16 = bitcast [1 x %union.rtunion_def]* %fld14 to %struct.rtx_def**
  %3 = load %struct.rtx_def** %rtx16, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @replace_equiv_address_nv(%struct.rtx_def* %x, %struct.rtx_def* %3) #5
  %arrayidx18 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 1
  %rtx19 = bitcast %union.rtunion_def* %arrayidx18 to %struct.rtx_def**
  %4 = load %struct.rtx_def** %rtx19, align 8, !tbaa !1
  %tobool20 = icmp eq %struct.rtx_def* %4, null
  br i1 %tobool20, label %if.end, label %if.then21

if.then21:                                        ; preds = %if.then10
  %bf.load22 = load i32* %0, align 8
  %bf.lshr23 = lshr i32 %bf.load22, 16
  %bf.clear24 = and i32 %bf.lshr23, 255
  %call25 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear24) #5
  %call26 = tail call %struct.rtx_def* @gen_move_insn(%struct.rtx_def* %call25, %struct.rtx_def* %call) #5
  %5 = load %struct.rtx_def** %rtx19, align 8, !tbaa !1
  %call30 = tail call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %call26, %struct.rtx_def* %5) #5
  br label %return

if.end:                                           ; preds = %if.then10
  %arrayidx32 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 0
  %rtx33 = bitcast %union.rtunion_def* %arrayidx32 to %struct.rtx_def**
  %6 = load %struct.rtx_def** %rtx33, align 8, !tbaa !1
  %call34 = tail call %struct.rtx_def* @copy_to_reg(%struct.rtx_def* %6) #5
  %call35 = tail call %struct.rtx_def* @replace_equiv_address(%struct.rtx_def* %call, %struct.rtx_def* %call34) #5
  br label %return

if.end36:                                         ; preds = %if.then, %land.lhs.true5
  br i1 %cmp1, label %if.then38, label %if.else

if.then38:                                        ; preds = %if.end36
  %arrayidx40 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rtx41 = bitcast %union.rtunion_def* %arrayidx40 to %struct.rtx_def**
  %7 = load %struct.rtx_def** %rtx41, align 8, !tbaa !1
  %call42 = tail call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %7, i32 0)
  %8 = load %struct.rtx_def** %rtx41, align 8, !tbaa !1
  %cmp46 = icmp eq %struct.rtx_def* %call42, %8
  br i1 %cmp46, label %return, label %if.then47

if.then47:                                        ; preds = %if.then38
  %call48 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %x) #5
  %9 = getelementptr inbounds %struct.rtx_def* %call48, i64 0, i32 1, i64 0, i32 0
  %call42.c = ptrtoint %struct.rtx_def* %call42 to i64
  store i64 %call42.c, i64* %9, align 8, !tbaa !1
  br label %return

if.else:                                          ; preds = %if.end36
  switch i32 %bf.clear, label %return [
    i32 78, label %if.then55
    i32 75, label %if.then55
  ]

if.then55:                                        ; preds = %if.else, %if.else
  %.in.in = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1
  %.in = bitcast [1 x %union.rtunion_def]* %.in.in to %struct.rtx_def**
  %10 = load %struct.rtx_def** %.in, align 8
  %fld56 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1
  %rtx58 = bitcast [1 x %union.rtunion_def]* %fld56 to %struct.rtx_def**
  %call59 = tail call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %10, i32 0)
  %arrayidx61 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 1
  %rtx62 = bitcast %union.rtunion_def* %arrayidx61 to %struct.rtx_def**
  %11 = load %struct.rtx_def** %rtx62, align 8, !tbaa !1
  %call63 = tail call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %11, i32 0)
  %12 = load %struct.rtx_def** %rtx58, align 8, !tbaa !1
  %cmp67 = icmp eq %struct.rtx_def* %call59, %12
  br i1 %cmp67, label %lor.lhs.false68, label %if.then73

lor.lhs.false68:                                  ; preds = %if.then55
  %13 = load %struct.rtx_def** %rtx62, align 8, !tbaa !1
  %cmp72 = icmp eq %struct.rtx_def* %call63, %13
  br i1 %cmp72, label %return, label %if.then73

if.then73:                                        ; preds = %lor.lhs.false68, %if.then55
  %call74 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %x) #5
  %14 = getelementptr inbounds %struct.rtx_def* %call74, i64 0, i32 1, i64 0, i32 0
  %call59.c = ptrtoint %struct.rtx_def* %call59 to i64
  store i64 %call59.c, i64* %14, align 8, !tbaa !1
  %15 = getelementptr inbounds %struct.rtx_def* %call74, i64 0, i32 1, i64 1, i32 0
  %call63.c = ptrtoint %struct.rtx_def* %call63 to i64
  store i64 %call63.c, i64* %15, align 8, !tbaa !1
  br label %return

if.end84:                                         ; preds = %entry
  %fld85 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1
  %arrayidx86 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 1
  %rtx87 = bitcast %union.rtunion_def* %arrayidx86 to %struct.rtx_def**
  %16 = load %struct.rtx_def** %rtx87, align 8, !tbaa !1
  %cmp88 = icmp eq %struct.rtx_def* %16, null
  br i1 %cmp88, label %if.then89, label %if.end94

if.then89:                                        ; preds = %if.end84
  %rtx92 = bitcast [1 x %union.rtunion_def]* %fld85 to %struct.rtx_def**
  %17 = load %struct.rtx_def** %rtx92, align 8, !tbaa !1
  %call93 = tail call %struct.rtx_def* @copy_to_reg(%struct.rtx_def* %17) #5
  br label %return

if.end94:                                         ; preds = %if.end84
  %arrayidx96 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 2
  %rtx97 = bitcast %union.rtunion_def* %arrayidx96 to %struct.rtx_def**
  %18 = load %struct.rtx_def** %rtx97, align 8, !tbaa !1
  %cmp98 = icmp eq %struct.rtx_def* %18, null
  br i1 %cmp98, label %if.end103, label %return

if.end103:                                        ; preds = %if.end94
  %rtx106 = bitcast [1 x %union.rtunion_def]* %fld85 to %struct.rtx_def**
  %19 = load %struct.rtx_def** %rtx106, align 8, !tbaa !1
  %20 = getelementptr inbounds %struct.rtx_def* %19, i64 0, i32 0
  %bf.load107 = load i32* %20, align 8
  %bf.lshr108 = lshr i32 %bf.load107, 16
  %bf.clear109 = and i32 %bf.lshr108, 255
  %call110 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear109) #5
  %21 = getelementptr inbounds %union.rtunion_def* %arrayidx96, i64 0, i32 0
  %call110.c = ptrtoint %struct.rtx_def* %call110 to i64
  store i64 %call110.c, i64* %21, align 8, !tbaa !1
  %22 = load %struct.rtx_def** %rtx106, align 8, !tbaa !1
  %call120 = tail call %struct.rtx_def* @gen_move_insn(%struct.rtx_def* %call110, %struct.rtx_def* %22) #5
  %23 = load %struct.rtx_def** %rtx87, align 8, !tbaa !1
  %call124 = tail call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %call120, %struct.rtx_def* %23) #5
  %24 = load %struct.rtx_def** %rtx97, align 8, !tbaa !1
  br label %return

return:                                           ; preds = %if.end94, %if.then47, %if.then73, %lor.lhs.false68, %if.then38, %if.else, %if.end103, %if.then89, %if.end, %if.then21
  %retval.0 = phi %struct.rtx_def* [ %call25, %if.then21 ], [ %call35, %if.end ], [ %call93, %if.then89 ], [ %24, %if.end103 ], [ %call48, %if.then47 ], [ %x, %if.then38 ], [ %call74, %if.then73 ], [ %x, %lor.lhs.false68 ], [ %x, %if.else ], [ %18, %if.end94 ]
  ret %struct.rtx_def* %retval.0
}

declare %struct.rtx_def* @replace_equiv_address_nv(%struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @gen_reg_rtx(i32) #1

declare %struct.rtx_def* @emit_insn_before(%struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @gen_move_insn(%struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @replace_equiv_address(%struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @copy_to_reg(%struct.rtx_def*) #1

declare %struct.rtx_def* @copy_rtx(%struct.rtx_def*) #1

; Function Attrs: nounwind readonly uwtable
define i32 @queued_subexp_p(%struct.rtx_def* nocapture readonly %x) #4 {
entry:
  br label %tailrecurse

tailrecurse:                                      ; preds = %sw.bb1, %entry
  %x.tr = phi %struct.rtx_def* [ %x, %entry ], [ %1, %sw.bb1 ]
  %0 = getelementptr inbounds %struct.rtx_def* %x.tr, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %return.loopexit19 [
    i32 71, label %return
    i32 66, label %sw.bb1
    i32 78, label %sw.bb2
    i32 75, label %sw.bb2
    i32 76, label %sw.bb2
  ]

sw.bb1:                                           ; preds = %tailrecurse
  %arrayidx = getelementptr inbounds %struct.rtx_def* %x.tr, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  br label %tailrecurse

sw.bb2:                                           ; preds = %tailrecurse, %tailrecurse, %tailrecurse
  %fld3 = getelementptr inbounds %struct.rtx_def* %x.tr, i64 0, i32 1
  %rtx5 = bitcast [1 x %union.rtunion_def]* %fld3 to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx5, align 8, !tbaa !1
  %call6 = tail call i32 @queued_subexp_p(%struct.rtx_def* %2)
  %tobool = icmp eq i32 %call6, 0
  br i1 %tobool, label %lor.rhs, label %lor.end

lor.rhs:                                          ; preds = %sw.bb2
  %arrayidx8 = getelementptr inbounds %struct.rtx_def* %x.tr, i64 0, i32 1, i64 1
  %rtx9 = bitcast %union.rtunion_def* %arrayidx8 to %struct.rtx_def**
  %3 = load %struct.rtx_def** %rtx9, align 8, !tbaa !1
  %call10 = tail call i32 @queued_subexp_p(%struct.rtx_def* %3)
  %tobool11 = icmp ne i32 %call10, 0
  br label %lor.end

lor.end:                                          ; preds = %sw.bb2, %lor.rhs
  %4 = phi i1 [ true, %sw.bb2 ], [ %tobool11, %lor.rhs ]
  %lor.ext = zext i1 %4 to i32
  br label %return

return.loopexit19:                                ; preds = %tailrecurse
  br label %return

return:                                           ; preds = %tailrecurse, %return.loopexit19, %lor.end
  %retval.0 = phi i32 [ %lor.ext, %lor.end ], [ 0, %return.loopexit19 ], [ 1, %tailrecurse ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define void @emit_queue() #0 {
entry:
  %0 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr30 = getelementptr inbounds %struct.function* %0, i64 0, i32 2
  %1 = load %struct.expr_status** %expr30, align 8, !tbaa !6
  %x_pending_chain31 = getelementptr inbounds %struct.expr_status* %1, i64 0, i32 6
  %2 = load %struct.rtx_def** %x_pending_chain31, align 8, !tbaa !11
  %tobool32 = icmp eq %struct.rtx_def* %2, null
  br i1 %tobool32, label %while.end, label %while.body

while.body:                                       ; preds = %entry, %if.end
  %3 = phi %struct.rtx_def* [ %15, %if.end ], [ %2, %entry ]
  %arrayidx = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 1, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %4 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %5 = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 0
  %bf.load = load i32* %5, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 24
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %while.body
  %arrayidx5 = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 1, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx5 to %struct.rtvec_def**
  %6 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !1
  %arrayidx6 = getelementptr inbounds %struct.rtvec_def* %6, i64 0, i32 1, i64 0
  %7 = load %struct.rtx_def** %arrayidx6, align 8, !tbaa !1
  %8 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 1, i64 1, i32 0
  %.c = ptrtoint %struct.rtx_def* %7 to i64
  store i64 %.c, i64* %8, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %4) #5
  br label %if.end

if.else:                                          ; preds = %while.body
  %call16 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %4) #5
  %9 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 1, i64 1, i32 0
  %call16.c = ptrtoint %struct.rtx_def* %call16 to i64
  store i64 %call16.c, i64* %9, align 8, !tbaa !1
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %arrayidx21 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 1, i64 4
  %rtx22 = bitcast %union.rtunion_def* %arrayidx21 to %struct.rtx_def**
  %10 = load %struct.rtx_def** %rtx22, align 8, !tbaa !1
  %11 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr23 = getelementptr inbounds %struct.function* %11, i64 0, i32 2
  %12 = load %struct.expr_status** %expr23, align 8, !tbaa !6
  %x_pending_chain24 = getelementptr inbounds %struct.expr_status* %12, i64 0, i32 6
  store %struct.rtx_def* %10, %struct.rtx_def** %x_pending_chain24, align 8, !tbaa !11
  %13 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr = getelementptr inbounds %struct.function* %13, i64 0, i32 2
  %14 = load %struct.expr_status** %expr, align 8, !tbaa !6
  %x_pending_chain = getelementptr inbounds %struct.expr_status* %14, i64 0, i32 6
  %15 = load %struct.rtx_def** %x_pending_chain, align 8, !tbaa !11
  %tobool = icmp eq %struct.rtx_def* %15, null
  br i1 %tobool, label %while.end, label %while.body

while.end:                                        ; preds = %if.end, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define void @convert_move(%struct.rtx_def* %to, %struct.rtx_def* %from, i32 %unsignedp) #0 {
entry:
  br label %tailrecurse

tailrecurse:                                      ; preds = %if.then709, %if.then701, %if.then693, %if.then685, %if.then677, %if.then669, %if.then661, %if.then653, %if.then645, %if.then637, %if.then605, %if.end443, %entry
  %to.tr = phi %struct.rtx_def* [ %to, %entry ], [ %call, %if.end443 ], [ %call, %if.then605 ], [ %call, %if.then637 ], [ %call, %if.then645 ], [ %call, %if.then653 ], [ %call, %if.then661 ], [ %call, %if.then669 ], [ %call, %if.then677 ], [ %call, %if.then685 ], [ %call, %if.then693 ], [ %call, %if.then701 ], [ %call, %if.then709 ]
  %from.tr = phi %struct.rtx_def* [ %from, %entry ], [ %call444, %if.end443 ], [ %call.i1080, %if.then605 ], [ %call638, %if.then637 ], [ %call646, %if.then645 ], [ %call654, %if.then653 ], [ %call662, %if.then661 ], [ %call670, %if.then669 ], [ %call678, %if.then677 ], [ %call686, %if.then685 ], [ %call694, %if.then693 ], [ %call702, %if.then701 ], [ %call710, %if.then709 ]
  %unsignedp.tr = phi i32 [ %unsignedp, %entry ], [ 0, %if.end443 ], [ %unsignedp.tr, %if.then605 ], [ %unsignedp.tr, %if.then637 ], [ %unsignedp.tr, %if.then645 ], [ %unsignedp.tr, %if.then653 ], [ %unsignedp.tr, %if.then661 ], [ %unsignedp.tr, %if.then669 ], [ %unsignedp.tr, %if.then677 ], [ %unsignedp.tr, %if.then685 ], [ %unsignedp.tr, %if.then693 ], [ %unsignedp.tr, %if.then701 ], [ %unsignedp.tr, %if.then709 ]
  %0 = getelementptr inbounds %struct.rtx_def* %to.tr, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %1 = getelementptr inbounds %struct.rtx_def* %from.tr, i64 0, i32 0
  %bf.load1 = load i32* %1, align 8
  %bf.lshr2 = lshr i32 %bf.load1, 16
  %bf.clear3 = and i32 %bf.lshr2, 255
  %idxprom1060 = zext i32 %bf.clear to i64
  %arrayidx = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom1060
  %2 = load i32* %arrayidx, align 4, !tbaa !5
  %cmp = icmp eq i32 %2, 2
  %idxprom41061 = zext i32 %bf.clear3 to i64
  %arrayidx5 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom41061
  %3 = load i32* %arrayidx5, align 4, !tbaa !5
  %cmp6 = icmp eq i32 %3, 2
  %call = tail call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %to.tr, i32 1)
  %call8 = tail call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %from.tr, i32 0)
  %cmp9 = xor i1 %cmp, %cmp6
  br i1 %cmp9, label %if.then, label %if.end

if.then:                                          ; preds = %tailrecurse
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 502, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.convert_move, i64 0, i64 0)) #8
  unreachable

if.end:                                           ; preds = %tailrecurse
  %4 = getelementptr inbounds %struct.rtx_def* %call8, i64 0, i32 0
  %bf.load11 = load i32* %4, align 8
  %5 = and i32 %bf.load11, 268500991
  %6 = icmp eq i32 %5, 268435519
  br i1 %6, label %land.lhs.true19, label %if.end40

land.lhs.true19:                                  ; preds = %if.end
  %arrayidx20 = getelementptr inbounds %struct.rtx_def* %call8, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx20 to %struct.rtx_def**
  %7 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %8 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 0
  %bf.load21 = load i32* %8, align 8
  %bf.lshr22 = lshr i32 %bf.load21, 16
  %bf.clear23 = and i32 %bf.lshr22, 255
  %idxprom241064 = zext i32 %bf.clear23 to i64
  %arrayidx25 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom241064
  %9 = load i8* %arrayidx25, align 1, !tbaa !5
  %arrayidx28 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom1060
  %10 = load i8* %arrayidx28, align 1, !tbaa !5
  %cmp30 = icmp ult i8 %9, %10
  br i1 %cmp30, label %if.end40, label %land.lhs.true32

land.lhs.true32:                                  ; preds = %land.lhs.true19
  %bf.lshr34 = lshr i32 %bf.load11, 26
  %bf.clear35 = and i32 %bf.lshr34, 1
  %cmp36 = icmp eq i32 %bf.clear35, %unsignedp.tr
  br i1 %cmp36, label %if.then38, label %if.end40

if.then38:                                        ; preds = %land.lhs.true32
  %call39 = tail call %struct.rtx_def* @gen_lowpart(i32 %bf.clear, %struct.rtx_def* %call8) #5
  br label %if.end40

if.end40:                                         ; preds = %if.end, %land.lhs.true19, %if.then38, %land.lhs.true32
  %from_mode.0 = phi i32 [ %bf.clear, %if.then38 ], [ %bf.clear3, %land.lhs.true32 ], [ %bf.clear3, %land.lhs.true19 ], [ %bf.clear3, %if.end ]
  %from.addr.0 = phi %struct.rtx_def* [ %call39, %if.then38 ], [ %call8, %land.lhs.true32 ], [ %call8, %land.lhs.true19 ], [ %call8, %if.end ]
  %11 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 0
  %bf.load41 = load i32* %11, align 8
  %12 = and i32 %bf.load41, 268500991
  %13 = icmp eq i32 %12, 268435519
  br i1 %13, label %if.then50, label %if.end51

if.then50:                                        ; preds = %if.end40
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 515, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.convert_move, i64 0, i64 0)) #8
  unreachable

if.end51:                                         ; preds = %if.end40
  %cmp52 = icmp eq i32 %bf.clear, %from_mode.0
  br i1 %cmp52, label %if.then96, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end51
  %cmp54 = icmp eq i32 %from_mode.0, 0
  br i1 %cmp54, label %land.lhs.true56, label %if.end98

land.lhs.true56:                                  ; preds = %lor.lhs.false
  %14 = getelementptr inbounds %struct.rtx_def* %from.addr.0, i64 0, i32 0
  %bf.load57 = load i32* %14, align 8
  %bf.clear58 = and i32 %bf.load57, 65535
  switch i32 %bf.clear58, label %if.end98 [
    i32 67, label %if.then96
    i32 68, label %if.then96
    i32 54, label %if.then96
    i32 55, label %if.then96
    i32 58, label %if.then96
    i32 134, label %if.then96
    i32 56, label %if.then96
    i32 140, label %if.then96
  ]

if.then96:                                        ; preds = %land.lhs.true56, %land.lhs.true56, %land.lhs.true56, %land.lhs.true56, %land.lhs.true56, %land.lhs.true56, %land.lhs.true56, %land.lhs.true56, %if.end51
  %call97 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call, %struct.rtx_def* %from.addr.0)
  br label %return

if.end98:                                         ; preds = %land.lhs.true56, %lor.lhs.false
  %.off = add i32 %2, -7
  %switch = icmp ult i32 %.off, 2
  %idxprom1191063.pre = zext i32 %from_mode.0 to i64
  br i1 %switch, label %if.then118, label %lor.lhs.false108

lor.lhs.false108:                                 ; preds = %if.end98
  %arrayidx110 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom1191063.pre
  %15 = load i32* %arrayidx110, align 4, !tbaa !5
  %.off1069 = add i32 %15, -7
  %switch1070 = icmp ult i32 %.off1069, 2
  br i1 %switch1070, label %if.then118, label %if.end153

if.then118:                                       ; preds = %if.end98, %lor.lhs.false108
  %arrayidx120 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom1191063.pre
  %16 = load i16* %arrayidx120, align 2, !tbaa !19
  %arrayidx123 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom1060
  %17 = load i16* %arrayidx123, align 2, !tbaa !19
  %cmp125 = icmp eq i16 %16, %17
  br i1 %cmp125, label %if.end128, label %if.then127

if.then127:                                       ; preds = %if.then118
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 527, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.convert_move, i64 0, i64 0)) #8
  unreachable

if.end128:                                        ; preds = %if.then118
  br i1 %switch, label %if.then138, label %if.else

if.then138:                                       ; preds = %if.end128
  %18 = getelementptr inbounds %struct.rtx_def* %from.addr.0, i64 0, i32 0
  %bf.load139 = load i32* %18, align 8
  %bf.lshr140 = lshr i32 %bf.load139, 16
  %bf.clear141 = and i32 %bf.lshr140, 255
  %call142 = tail call %struct.rtx_def* @simplify_gen_subreg(i32 %bf.clear, %struct.rtx_def* %from.addr.0, i32 %bf.clear141, i32 0) #5
  br label %if.end147

if.else:                                          ; preds = %if.end128
  %bf.lshr144 = lshr i32 %bf.load41, 16
  %bf.clear145 = and i32 %bf.lshr144, 255
  %call146 = tail call %struct.rtx_def* @simplify_gen_subreg(i32 %from_mode.0, %struct.rtx_def* %call, i32 %bf.clear145, i32 0) #5
  br label %if.end147

if.end147:                                        ; preds = %if.else, %if.then138
  %from.addr.1 = phi %struct.rtx_def* [ %call142, %if.then138 ], [ %from.addr.0, %if.else ]
  %to.addr.0 = phi %struct.rtx_def* [ %call, %if.then138 ], [ %call146, %if.else ]
  %call148 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %to.addr.0, %struct.rtx_def* %from.addr.1)
  br label %return

if.end153:                                        ; preds = %lor.lhs.false108
  %arrayidx157 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom1191063.pre
  %19 = load i16* %arrayidx157, align 2, !tbaa !19
  %arrayidx160 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom1060
  %20 = load i16* %arrayidx160, align 2, !tbaa !19
  %conv161 = zext i16 %20 to i32
  %cmp162 = icmp ult i16 %19, %20
  br i1 %cmp, label %if.then155, label %if.end258

if.then155:                                       ; preds = %if.end153
  br i1 %cmp162, label %if.then164, label %if.end170

if.then164:                                       ; preds = %if.then155
  %call165 = tail call i32 @can_extend_p(i32 %bf.clear, i32 %from_mode.0, i32 0) #5
  %cmp166 = icmp eq i32 %call165, 1317
  br i1 %cmp166, label %if.end170, label %if.then168

if.then168:                                       ; preds = %if.then164
  tail call void @emit_unop_insn(i32 %call165, %struct.rtx_def* %call, %struct.rtx_def* %from.addr.0, i32 0) #5
  br label %return

if.end170:                                        ; preds = %if.then164, %if.then155
  %21 = load i32* @target_flags, align 4, !tbaa !21
  %and = and i32 %21, 1
  %tobool171 = icmp eq i32 %and, 0
  br i1 %tobool171, label %lor.lhs.false172, label %land.lhs.true176

lor.lhs.false172:                                 ; preds = %if.end170
  %and173 = and i32 %21, 262144
  %cmp174 = icmp ne i32 %and173, 0
  %cmp177 = icmp eq i32 %from_mode.0, 16
  %or.cond = and i1 %cmp174, %cmp177
  %cmp180 = icmp eq i32 %bf.clear, 15
  %or.cond727 = and i1 %or.cond, %cmp180
  br i1 %or.cond727, label %if.then182, label %if.end183

land.lhs.true176:                                 ; preds = %if.end170
  %cmp177.old = icmp eq i32 %from_mode.0, 16
  %cmp180.old = icmp eq i32 %bf.clear, 15
  %or.cond729 = and i1 %cmp177.old, %cmp180.old
  br i1 %or.cond729, label %if.then182, label %if.end183

if.then182:                                       ; preds = %land.lhs.true176, %lor.lhs.false172
  tail call void @emit_unop_insn(i32 909, %struct.rtx_def* %call, %struct.rtx_def* %from.addr.0, i32 0) #5
  br label %return

if.end183:                                        ; preds = %land.lhs.true176, %lor.lhs.false172
  %and184 = and i32 %21, 33554432
  %tobool185 = icmp eq i32 %and184, 0
  br i1 %tobool185, label %land.lhs.true186, label %if.end196

land.lhs.true186:                                 ; preds = %if.end183
  %tobool188 = icmp ne i32 %and, 0
  %cmp190 = icmp eq i32 %from_mode.0, 17
  %or.cond731 = and i1 %tobool188, %cmp190
  %cmp193 = icmp eq i32 %bf.clear, 15
  %or.cond733 = and i1 %or.cond731, %cmp193
  br i1 %or.cond733, label %if.then195, label %if.end196

if.then195:                                       ; preds = %land.lhs.true186
  tail call void @emit_unop_insn(i32 913, %struct.rtx_def* %call, %struct.rtx_def* %from.addr.0, i32 0) #5
  br label %return

if.end196:                                        ; preds = %if.end183, %land.lhs.true186
  %tobool198 = icmp ne i32 %and, 0
  %cmp200 = icmp eq i32 %from_mode.0, 18
  %or.cond735 = and i1 %tobool198, %cmp200
  %cmp203 = icmp eq i32 %bf.clear, 15
  %or.cond737 = and i1 %or.cond735, %cmp203
  br i1 %or.cond737, label %if.then205, label %if.end206

if.then205:                                       ; preds = %if.end196
  tail call void @emit_unop_insn(i32 916, %struct.rtx_def* %call, %struct.rtx_def* %from.addr.0, i32 0) #5
  br label %return

if.end206:                                        ; preds = %if.end196
  br i1 %tobool185, label %land.lhs.true209, label %if.end219

land.lhs.true209:                                 ; preds = %if.end206
  %cmp213 = icmp eq i32 %from_mode.0, 17
  %or.cond739 = and i1 %tobool198, %cmp213
  %cmp216 = icmp eq i32 %bf.clear, 16
  %or.cond741 = and i1 %or.cond739, %cmp216
  br i1 %or.cond741, label %if.then218, label %if.end219

if.then218:                                       ; preds = %land.lhs.true209
  tail call void @emit_unop_insn(i32 919, %struct.rtx_def* %call, %struct.rtx_def* %from.addr.0, i32 0) #5
  br label %return

if.end219:                                        ; preds = %if.end206, %land.lhs.true209
  %cmp226 = icmp eq i32 %bf.clear, 16
  %or.cond745 = and i1 %or.cond735, %cmp226
  br i1 %or.cond745, label %if.then228, label %if.end229

if.then228:                                       ; preds = %if.end219
  tail call void @emit_unop_insn(i32 922, %struct.rtx_def* %call, %struct.rtx_def* %from.addr.0, i32 0) #5
  br label %return

if.end229:                                        ; preds = %if.end219
  switch i32 %from_mode.0, label %if.then253 [
    i32 15, label %sw.bb
    i32 16, label %sw.bb233
    i32 17, label %sw.bb239
    i32 18, label %sw.bb244
  ]

sw.bb:                                            ; preds = %if.end229
  switch i32 %bf.clear, label %if.then253 [
    i32 16, label %sw.epilog250
    i32 17, label %sw.bb231
    i32 18, label %sw.bb232
  ]

sw.bb231:                                         ; preds = %sw.bb
  br label %sw.epilog250

sw.bb232:                                         ; preds = %sw.bb
  br label %sw.epilog250

sw.bb233:                                         ; preds = %if.end229
  switch i32 %bf.clear, label %if.then253 [
    i32 15, label %sw.epilog250
    i32 17, label %sw.bb235
    i32 18, label %sw.bb236
  ]

sw.bb235:                                         ; preds = %sw.bb233
  br label %sw.epilog250

sw.bb236:                                         ; preds = %sw.bb233
  br label %sw.epilog250

sw.bb239:                                         ; preds = %if.end229
  switch i32 %bf.clear, label %if.then253 [
    i32 15, label %sw.epilog250
    i32 16, label %sw.bb241
  ]

sw.bb241:                                         ; preds = %sw.bb239
  br label %sw.epilog250

sw.bb244:                                         ; preds = %if.end229
  switch i32 %bf.clear, label %if.then253 [
    i32 15, label %sw.epilog250
    i32 16, label %sw.bb246
  ]

sw.bb246:                                         ; preds = %sw.bb244
  br label %sw.epilog250

sw.epilog250:                                     ; preds = %sw.bb244, %sw.bb239, %sw.bb233, %sw.bb, %sw.bb246, %sw.bb241, %sw.bb235, %sw.bb236, %sw.bb231, %sw.bb232
  %libcall.0.in = phi %struct.rtx_def** [ getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 9), %sw.bb246 ], [ getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 8), %sw.bb241 ], [ getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 4), %sw.bb236 ], [ getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 3), %sw.bb235 ], [ getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 2), %sw.bb232 ], [ getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 1), %sw.bb231 ], [ getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 0), %sw.bb ], [ getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 5), %sw.bb233 ], [ getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 6), %sw.bb239 ], [ getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 7), %sw.bb244 ]
  %libcall.0 = load %struct.rtx_def** %libcall.0.in, align 8
  %cmp251 = icmp eq %struct.rtx_def* %libcall.0, null
  br i1 %cmp251, label %if.then253, label %if.end254

if.then253:                                       ; preds = %sw.bb, %sw.bb233, %sw.bb239, %sw.bb244, %if.end229, %sw.epilog250
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 781, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.convert_move, i64 0, i64 0)) #8
  unreachable

if.end254:                                        ; preds = %sw.epilog250
  tail call void @start_sequence() #5
  %call255 = tail call %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32, i32, i32, ...)* @emit_library_call_value(%struct.rtx_def* %libcall.0, %struct.rtx_def* null, i32 1, i32 %bf.clear, i32 1, %struct.rtx_def* %from.addr.0, i32 %from_mode.0) #5
  %call256 = tail call %struct.rtx_def* @get_insns() #5
  tail call void @end_sequence() #5
  %call257 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 124, i32 %bf.clear, %struct.rtx_def* %from.addr.0) #5
  tail call void @emit_libcall_block(%struct.rtx_def* %call256, %struct.rtx_def* %call, %struct.rtx_def* %call255, %struct.rtx_def* %call257) #5
  br label %return

if.end258:                                        ; preds = %if.end153
  %22 = load i32* @target_flags, align 4, !tbaa !21
  br i1 %cmp162, label %land.lhs.true267, label %if.end392

land.lhs.true267:                                 ; preds = %if.end258
  %and271 = and i32 %22, 33554432
  %23 = lshr exact i32 %and271, 20
  %24 = add i32 %23, 32
  %cmp274 = icmp ugt i32 %conv161, %24
  br i1 %cmp274, label %if.then276, label %if.end392

if.then276:                                       ; preds = %land.lhs.true267
  %tobool.le1332 = icmp eq i32 %unsignedp.tr, 0
  %tobool.le = icmp ne i32 %unsignedp.tr, 0
  %cond.le1328 = select i1 %tobool.le, i32 121, i32 120
  %arrayidx279 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom1060
  %25 = load i8* %arrayidx279, align 1, !tbaa !5
  %conv280 = zext i8 %25 to i32
  %26 = lshr exact i32 %and271, 23
  %27 = add i32 %26, 4
  %add1334 = or i32 %26, 3
  %sub = add i32 %add1334, %conv280
  %div = sdiv i32 %sub, %27
  %call287 = tail call i32 @can_extend_p(i32 %bf.clear, i32 %from_mode.0, i32 %unsignedp.tr) #5
  %cmp288 = icmp eq i32 %call287, 1317
  br i1 %cmp288, label %if.else301, label %if.then290

if.then290:                                       ; preds = %if.then276
  %28 = load i32* @optimize, align 4, !tbaa !21
  %cmp291 = icmp sgt i32 %28, 0
  br i1 %cmp291, label %land.lhs.true293, label %if.end300

land.lhs.true293:                                 ; preds = %if.then290
  %29 = getelementptr inbounds %struct.rtx_def* %from.addr.0, i64 0, i32 0
  %bf.load294 = load i32* %29, align 8
  %bf.clear295 = and i32 %bf.load294, 65535
  %cmp296 = icmp eq i32 %bf.clear295, 63
  br i1 %cmp296, label %if.then298, label %if.end300

if.then298:                                       ; preds = %land.lhs.true293
  %call299 = tail call %struct.rtx_def* @force_reg(i32 %from_mode.0, %struct.rtx_def* %from.addr.0) #5
  br label %if.end300

if.end300:                                        ; preds = %if.then298, %land.lhs.true293, %if.then290
  %from.addr.2 = phi %struct.rtx_def* [ %call299, %if.then298 ], [ %from.addr.0, %land.lhs.true293 ], [ %from.addr.0, %if.then290 ]
  tail call void @emit_unop_insn(i32 %call287, %struct.rtx_def* %call, %struct.rtx_def* %from.addr.2, i32 %cond.le1328) #5
  br label %return

if.else301:                                       ; preds = %if.then276
  %conv304 = zext i16 %19 to i32
  %30 = load i32* @target_flags, align 4, !tbaa !21
  %and305 = lshr i32 %30, 20
  %31 = and i32 %and305, 32
  %32 = add i32 %31, 32
  %cmp308 = icmp ult i32 %conv304, %32
  br i1 %cmp308, label %land.lhs.true310, label %if.end326

land.lhs.true310:                                 ; preds = %if.else301
  %33 = load i32* @word_mode, align 4, !tbaa !5
  %call311 = tail call i32 @can_extend_p(i32 %bf.clear, i32 %33, i32 %unsignedp.tr) #5
  %cmp312 = icmp eq i32 %call311, 1317
  br i1 %cmp312, label %if.end326, label %if.then314

if.then314:                                       ; preds = %land.lhs.true310
  %bf.load315 = load i32* %11, align 8
  %bf.clear316 = and i32 %bf.load315, 65535
  %cmp317 = icmp eq i32 %bf.clear316, 61
  br i1 %cmp317, label %if.then319, label %if.end322

if.then319:                                       ; preds = %if.then314
  %call320 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call) #5
  %call321 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call320) #5
  br label %if.end322

if.end322:                                        ; preds = %if.then319, %if.then314
  %34 = load i32* @word_mode, align 4, !tbaa !5
  %call323 = tail call %struct.rtx_def* @gen_lowpart(i32 %34, %struct.rtx_def* %call) #5
  tail call void @convert_move(%struct.rtx_def* %call323, %struct.rtx_def* %from.addr.0, i32 %unsignedp.tr)
  %35 = load i32* @word_mode, align 4, !tbaa !5
  %call324 = tail call %struct.rtx_def* @gen_lowpart(i32 %35, %struct.rtx_def* %call) #5
  tail call void @emit_unop_insn(i32 %call311, %struct.rtx_def* %call, %struct.rtx_def* %call324, i32 %cond.le1328) #5
  ret void

if.end326:                                        ; preds = %land.lhs.true310, %if.else301
  tail call void @start_sequence() #5
  %call327 = tail call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %call, %struct.rtx_def* %from.addr.0) #5
  %tobool328 = icmp eq i32 %call327, 0
  br i1 %tobool328, label %if.end331, label %if.then329

if.then329:                                       ; preds = %if.end326
  %call330 = tail call %struct.rtx_def* @force_reg(i32 %from_mode.0, %struct.rtx_def* %from.addr.0) #5
  br label %if.end331

if.end331:                                        ; preds = %if.end326, %if.then329
  %from.addr.3 = phi %struct.rtx_def* [ %call330, %if.then329 ], [ %from.addr.0, %if.end326 ]
  %36 = load i32* @target_flags, align 4, !tbaa !21
  %and335 = lshr i32 %36, 20
  %37 = and i32 %and335, 32
  %38 = add i32 %37, 32
  %cmp338 = icmp ult i32 %conv304, %38
  %39 = load i32* @word_mode, align 4, !tbaa !5
  %lowpart_mode.0 = select i1 %cmp338, i32 %39, i32 %from_mode.0
  %call.i1079 = tail call %struct.rtx_def* @convert_modes(i32 %lowpart_mode.0, i32 0, %struct.rtx_def* %from.addr.3, i32 %unsignedp.tr) #5
  %call344 = tail call %struct.rtx_def* @gen_lowpart(i32 %lowpart_mode.0, %struct.rtx_def* %call) #5
  %call345 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call344, %struct.rtx_def* %call.i1079)
  br i1 %tobool.le1332, label %if.else348, label %if.then347

if.then347:                                       ; preds = %if.end331
  %40 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %idxprom369.pre = sext i32 %lowpart_mode.0 to i64
  br label %if.end368

if.else348:                                       ; preds = %if.end331
  %idxprom359 = sext i32 %lowpart_mode.0 to i64
  %arrayidx360 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom359
  %41 = load i16* %arrayidx360, align 2, !tbaa !19
  %conv361 = zext i16 %41 to i64
  %sub362 = add i64 %conv361, -1
  %call364 = tail call %union.tree_node* @size_int_wide(i64 %sub362, i32 0) #5
  %call365 = tail call %struct.rtx_def* @expand_shift(i32 83, i32 %lowpart_mode.0, %struct.rtx_def* %call.i1079, %union.tree_node* %call364, %struct.rtx_def* null, i32 0) #5
  %42 = load i32* @word_mode, align 4, !tbaa !5
  %call.i = tail call %struct.rtx_def* @convert_modes(i32 %42, i32 0, %struct.rtx_def* %call365, i32 1) #5
  br label %if.end368

if.end368:                                        ; preds = %if.else348, %if.then347
  %idxprom369.pre-phi = phi i64 [ %idxprom359, %if.else348 ], [ %idxprom369.pre, %if.then347 ]
  %fill_value.0 = phi %struct.rtx_def* [ %call.i, %if.else348 ], [ %40, %if.then347 ]
  %arrayidx370 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom369.pre-phi
  %43 = load i8* %arrayidx370, align 1, !tbaa !5
  %conv371 = zext i8 %43 to i32
  %44 = load i32* @target_flags, align 4, !tbaa !21
  %and372 = lshr i32 %44, 23
  %45 = and i32 %and372, 4
  %46 = add i32 %45, 4
  %div375 = sdiv i32 %conv371, %46
  %cmp3761310 = icmp slt i32 %div375, %div
  br i1 %cmp3761310, label %for.body, label %for.end

for.body:                                         ; preds = %if.end368, %for.inc
  %i.01311 = phi i32 [ %inc, %for.inc ], [ %div375, %if.end368 ]
  %call378 = tail call %struct.rtx_def* @operand_subword(%struct.rtx_def* %call, i32 %i.01311, i32 1, i32 %bf.clear) #5
  %cmp379 = icmp eq %struct.rtx_def* %call378, null
  br i1 %cmp379, label %if.then381, label %if.end382

if.then381:                                       ; preds = %for.body
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 886, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.convert_move, i64 0, i64 0)) #8
  unreachable

if.end382:                                        ; preds = %for.body
  %cmp383 = icmp eq %struct.rtx_def* %fill_value.0, %call378
  br i1 %cmp383, label %for.inc, label %if.then385

if.then385:                                       ; preds = %if.end382
  %call386 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call378, %struct.rtx_def* %fill_value.0)
  br label %for.inc

for.inc:                                          ; preds = %if.end382, %if.then385
  %inc = add nsw i32 %i.01311, 1
  %cmp376 = icmp slt i32 %inc, %div
  br i1 %cmp376, label %for.body, label %for.end

for.end:                                          ; preds = %for.inc, %if.end368
  %call388 = tail call %struct.rtx_def* @get_insns() #5
  tail call void @end_sequence() #5
  %call389 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %from.addr.3) #5
  %call390 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 %cond.le1328, i32 %bf.clear, %struct.rtx_def* %call389) #5
  %call391 = tail call %struct.rtx_def* @emit_no_conflict_block(%struct.rtx_def* %call388, %struct.rtx_def* %call, %struct.rtx_def* %from.addr.3, %struct.rtx_def* null, %struct.rtx_def* %call390) #5
  br label %return

if.end392:                                        ; preds = %if.end258, %land.lhs.true267
  %conv395 = zext i16 %19 to i32
  %and396 = lshr i32 %22, 20
  %47 = and i32 %and396, 32
  %48 = add i32 %47, 32
  %cmp399 = icmp ule i32 %conv395, %48
  %cmp408 = icmp ugt i32 %conv161, %48
  %or.cond1561 = or i1 %cmp399, %cmp408
  br i1 %or.cond1561, label %if.end445, label %if.then410

if.then410:                                       ; preds = %if.end392
  %49 = getelementptr inbounds %struct.rtx_def* %from.addr.0, i64 0, i32 0
  %bf.load411 = load i32* %49, align 8
  %50 = and i32 %bf.load411, 134283263
  %51 = icmp eq i32 %50, 66
  br i1 %51, label %land.lhs.true420, label %lor.lhs.false431

land.lhs.true420:                                 ; preds = %if.then410
  %arrayidx422 = getelementptr inbounds [59 x i8]* @direct_load, i64 0, i64 %idxprom1060
  %52 = load i8* %arrayidx422, align 1, !tbaa !5
  %tobool424 = icmp eq i8 %52, 0
  br i1 %tobool424, label %lor.lhs.false431, label %land.lhs.true425

land.lhs.true425:                                 ; preds = %land.lhs.true420
  %arrayidx427 = getelementptr inbounds %struct.rtx_def* %from.addr.0, i64 0, i32 1, i64 0
  %rtx428 = bitcast %union.rtunion_def* %arrayidx427 to %struct.rtx_def**
  %53 = load %struct.rtx_def** %rtx428, align 8, !tbaa !1
  %call429 = tail call i32 @mode_dependent_address_p(%struct.rtx_def* %53) #5
  %tobool430 = icmp eq i32 %call429, 0
  br i1 %tobool430, label %if.end443, label %land.lhs.true425.lor.lhs.false431_crit_edge

land.lhs.true425.lor.lhs.false431_crit_edge:      ; preds = %land.lhs.true425
  %bf.load432.pre = load i32* %49, align 8
  br label %lor.lhs.false431

lor.lhs.false431:                                 ; preds = %land.lhs.true425.lor.lhs.false431_crit_edge, %land.lhs.true420, %if.then410
  %bf.load432 = phi i32 [ %bf.load432.pre, %land.lhs.true425.lor.lhs.false431_crit_edge ], [ %bf.load411, %land.lhs.true420 ], [ %bf.load411, %if.then410 ]
  %bf.clear433 = and i32 %bf.load432, 65535
  switch i32 %bf.clear433, label %if.then441 [
    i32 61, label %if.end443
    i32 63, label %if.end443
  ]

if.then441:                                       ; preds = %lor.lhs.false431
  %call442 = tail call %struct.rtx_def* @force_reg(i32 %from_mode.0, %struct.rtx_def* %from.addr.0) #5
  br label %if.end443

if.end443:                                        ; preds = %lor.lhs.false431, %lor.lhs.false431, %land.lhs.true425, %if.then441
  %from.addr.4 = phi %struct.rtx_def* [ %from.addr.0, %lor.lhs.false431 ], [ %call442, %if.then441 ], [ %from.addr.0, %land.lhs.true425 ], [ %from.addr.0, %lor.lhs.false431 ]
  %54 = load i32* @word_mode, align 4, !tbaa !5
  %call444 = tail call %struct.rtx_def* @gen_lowpart(i32 %54, %struct.rtx_def* %from.addr.4) #5
  br label %tailrecurse

if.end445:                                        ; preds = %if.end392
  %cmp446 = icmp eq i32 %bf.clear, 8
  br i1 %cmp446, label %if.then448, label %if.end454

if.then448:                                       ; preds = %if.end445
  %cmp449 = icmp eq i32 %from_mode.0, 2
  br i1 %cmp449, label %if.end453, label %if.then451

if.then451:                                       ; preds = %if.then448
  %call.i1073 = tail call %struct.rtx_def* @convert_modes(i32 2, i32 0, %struct.rtx_def* %from.addr.0, i32 %unsignedp.tr) #5
  br label %if.end453

if.end453:                                        ; preds = %if.then448, %if.then451
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 928, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.convert_move, i64 0, i64 0)) #8
  unreachable

if.end454:                                        ; preds = %if.end445
  %cmp455 = icmp eq i32 %from_mode.0, 8
  br i1 %cmp455, label %if.then457, label %if.end464

if.then457:                                       ; preds = %if.end454
  %cmp458 = icmp eq i32 %bf.clear, 2
  br i1 %cmp458, label %if.else462, label %if.then460

if.then460:                                       ; preds = %if.then457
  %call.i1074 = tail call %struct.rtx_def* @convert_modes(i32 2, i32 0, %struct.rtx_def* %from.addr.0, i32 %unsignedp.tr) #5
  br label %if.end464

if.else462:                                       ; preds = %if.then457
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 947, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.convert_move, i64 0, i64 0)) #8
  unreachable

if.end464:                                        ; preds = %if.then460, %if.end454
  %from_mode.1 = phi i32 [ 2, %if.then460 ], [ %from_mode.0, %if.end454 ]
  %from.addr.5 = phi %struct.rtx_def* [ %call.i1074, %if.then460 ], [ %from.addr.0, %if.end454 ]
  %cmp465 = icmp eq i32 %bf.clear, 10
  br i1 %cmp465, label %if.then467, label %if.end473

if.then467:                                       ; preds = %if.end464
  %cmp468 = icmp eq i32 %from_mode.1, 4
  br i1 %cmp468, label %if.end472, label %if.then470

if.then470:                                       ; preds = %if.then467
  %call.i1075 = tail call %struct.rtx_def* @convert_modes(i32 4, i32 0, %struct.rtx_def* %from.addr.5, i32 %unsignedp.tr) #5
  br label %if.end472

if.end472:                                        ; preds = %if.then467, %if.then470
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 963, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.convert_move, i64 0, i64 0)) #8
  unreachable

if.end473:                                        ; preds = %if.end464
  %cmp474 = icmp eq i32 %from_mode.1, 10
  br i1 %cmp474, label %if.then476, label %if.end483

if.then476:                                       ; preds = %if.end473
  %cmp477 = icmp eq i32 %bf.clear, 4
  br i1 %cmp477, label %if.else481, label %if.then479

if.then479:                                       ; preds = %if.then476
  %call.i1076 = tail call %struct.rtx_def* @convert_modes(i32 4, i32 0, %struct.rtx_def* %from.addr.5, i32 %unsignedp.tr) #5
  br label %if.end483

if.else481:                                       ; preds = %if.then476
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 989, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.convert_move, i64 0, i64 0)) #8
  unreachable

if.end483:                                        ; preds = %if.then479, %if.end473
  %from_mode.2 = phi i32 [ 4, %if.then479 ], [ %from_mode.1, %if.end473 ]
  %from.addr.6 = phi %struct.rtx_def* [ %call.i1076, %if.then479 ], [ %from.addr.5, %if.end473 ]
  %cmp484 = icmp eq i32 %bf.clear, 11
  br i1 %cmp484, label %if.then486, label %if.end492

if.then486:                                       ; preds = %if.end483
  %cmp487 = icmp eq i32 %from_mode.2, 5
  br i1 %cmp487, label %if.end491, label %if.then489

if.then489:                                       ; preds = %if.then486
  %call.i1077 = tail call %struct.rtx_def* @convert_modes(i32 5, i32 0, %struct.rtx_def* %from.addr.6, i32 %unsignedp.tr) #5
  br label %if.end491

if.end491:                                        ; preds = %if.then486, %if.then489
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 1005, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.convert_move, i64 0, i64 0)) #8
  unreachable

if.end492:                                        ; preds = %if.end483
  %cmp493 = icmp eq i32 %from_mode.2, 11
  br i1 %cmp493, label %if.then495, label %if.end502

if.then495:                                       ; preds = %if.end492
  %cmp496 = icmp eq i32 %bf.clear, 5
  br i1 %cmp496, label %if.else500, label %if.then498

if.then498:                                       ; preds = %if.then495
  %call.i1078 = tail call %struct.rtx_def* @convert_modes(i32 5, i32 0, %struct.rtx_def* %from.addr.6, i32 %unsignedp.tr) #5
  br label %if.end502

if.else500:                                       ; preds = %if.then495
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 1024, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.convert_move, i64 0, i64 0)) #8
  unreachable

if.end502:                                        ; preds = %if.then498, %if.end492
  %from_mode.3 = phi i32 [ 5, %if.then498 ], [ %from_mode.2, %if.end492 ]
  %from.addr.7 = phi %struct.rtx_def* [ %call.i1078, %if.then498 ], [ %from.addr.6, %if.end492 ]
  %idxprom506 = sext i32 %from_mode.3 to i64
  %arrayidx507 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom506
  %55 = load i16* %arrayidx507, align 2, !tbaa !19
  %cmp509 = icmp ult i16 %20, %55
  br i1 %cmp509, label %if.then511, label %if.end565

if.then511:                                       ; preds = %if.end502
  %56 = getelementptr inbounds %struct.rtx_def* %from.addr.7, i64 0, i32 0
  %bf.load512 = load i32* %56, align 8
  %57 = and i32 %bf.load512, 134283263
  %58 = icmp eq i32 %57, 66
  br i1 %58, label %land.lhs.true521, label %lor.lhs.false532

land.lhs.true521:                                 ; preds = %if.then511
  %arrayidx523 = getelementptr inbounds [59 x i8]* @direct_load, i64 0, i64 %idxprom1060
  %59 = load i8* %arrayidx523, align 1, !tbaa !5
  %tobool525 = icmp eq i8 %59, 0
  br i1 %tobool525, label %lor.lhs.false532, label %land.lhs.true526

land.lhs.true526:                                 ; preds = %land.lhs.true521
  %arrayidx528 = getelementptr inbounds %struct.rtx_def* %from.addr.7, i64 0, i32 1, i64 0
  %rtx529 = bitcast %union.rtunion_def* %arrayidx528 to %struct.rtx_def**
  %60 = load %struct.rtx_def** %rtx529, align 8, !tbaa !1
  %call530 = tail call i32 @mode_dependent_address_p(%struct.rtx_def* %60) #5
  %tobool531 = icmp eq i32 %call530, 0
  br i1 %tobool531, label %if.end544, label %land.lhs.true526.lor.lhs.false532_crit_edge

land.lhs.true526.lor.lhs.false532_crit_edge:      ; preds = %land.lhs.true526
  %bf.load533.pre = load i32* %56, align 8
  br label %lor.lhs.false532

lor.lhs.false532:                                 ; preds = %land.lhs.true526.lor.lhs.false532_crit_edge, %land.lhs.true521, %if.then511
  %bf.load533 = phi i32 [ %bf.load533.pre, %land.lhs.true526.lor.lhs.false532_crit_edge ], [ %bf.load512, %land.lhs.true521 ], [ %bf.load512, %if.then511 ]
  %bf.clear534 = and i32 %bf.load533, 65535
  switch i32 %bf.clear534, label %if.then542 [
    i32 61, label %if.end544
    i32 63, label %if.end544
  ]

if.then542:                                       ; preds = %lor.lhs.false532
  %call543 = tail call %struct.rtx_def* @force_reg(i32 %from_mode.3, %struct.rtx_def* %from.addr.7) #5
  br label %if.end544

if.end544:                                        ; preds = %lor.lhs.false532, %lor.lhs.false532, %land.lhs.true526, %if.then542
  %from.addr.8 = phi %struct.rtx_def* [ %from.addr.7, %lor.lhs.false532 ], [ %call543, %if.then542 ], [ %from.addr.7, %land.lhs.true526 ], [ %from.addr.7, %lor.lhs.false532 ]
  %61 = getelementptr inbounds %struct.rtx_def* %from.addr.8, i64 0, i32 0
  %bf.load545 = load i32* %61, align 8
  %bf.clear546 = and i32 %bf.load545, 65535
  %cmp547 = icmp eq i32 %bf.clear546, 61
  br i1 %cmp547, label %land.lhs.true549, label %if.end562

land.lhs.true549:                                 ; preds = %if.end544
  %arrayidx551 = getelementptr inbounds %struct.rtx_def* %from.addr.8, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx551 to i32*
  %62 = load i32* %rtuint, align 4, !tbaa !21
  %cmp552 = icmp ult i32 %62, 53
  br i1 %cmp552, label %land.lhs.true554, label %if.end562

land.lhs.true554:                                 ; preds = %land.lhs.true549
  %call558 = tail call i32 @ix86_hard_regno_mode_ok(i32 %62, i32 %bf.clear) #5
  %tobool559 = icmp eq i32 %call558, 0
  br i1 %tobool559, label %if.then560, label %if.end562

if.then560:                                       ; preds = %land.lhs.true554
  %call561 = tail call %struct.rtx_def* @copy_to_reg(%struct.rtx_def* %from.addr.8) #5
  br label %if.end562

if.end562:                                        ; preds = %land.lhs.true554, %if.then560, %land.lhs.true549, %if.end544
  %from.addr.9 = phi %struct.rtx_def* [ %from.addr.8, %land.lhs.true554 ], [ %call561, %if.then560 ], [ %from.addr.8, %land.lhs.true549 ], [ %from.addr.8, %if.end544 ]
  %call563 = tail call %struct.rtx_def* @gen_lowpart(i32 %bf.clear, %struct.rtx_def* %from.addr.9) #5
  %call564 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call, %struct.rtx_def* %call563)
  br label %return

if.end565:                                        ; preds = %if.end502
  %cmp572 = icmp ugt i16 %20, %55
  br i1 %cmp572, label %if.then574, label %if.end631

if.then574:                                       ; preds = %if.end565
  %call575 = tail call i32 @can_extend_p(i32 %bf.clear, i32 %from_mode.3, i32 %unsignedp.tr) #5
  %cmp576 = icmp eq i32 %call575, 1317
  br i1 %cmp576, label %for.cond585.preheader, label %if.then578

for.cond585.preheader:                            ; preds = %if.then574
  %cmp5861312 = icmp eq i32 %from_mode.3, 0
  br i1 %cmp5861312, label %for.end612, label %for.body588.lr.ph

for.body588.lr.ph:                                ; preds = %for.cond585.preheader
  %arrayidx594 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom1060
  br label %for.body588

if.then578:                                       ; preds = %if.then574
  %tobool.le1330 = icmp ne i32 %unsignedp.tr, 0
  %cond.le = select i1 %tobool.le1330, i32 121, i32 120
  %63 = load i32* @flag_force_mem, align 4, !tbaa !21
  %tobool579 = icmp eq i32 %63, 0
  br i1 %tobool579, label %if.end582, label %if.then580

if.then580:                                       ; preds = %if.then578
  %call581 = tail call %struct.rtx_def* @force_not_mem(%struct.rtx_def* %from.addr.7) #5
  br label %if.end582

if.end582:                                        ; preds = %if.then578, %if.then580
  %from.addr.10 = phi %struct.rtx_def* [ %call581, %if.then580 ], [ %from.addr.7, %if.then578 ]
  tail call void @emit_unop_insn(i32 %call575, %struct.rtx_def* %call, %struct.rtx_def* %from.addr.10, i32 %cond.le) #5
  br label %return

for.body588:                                      ; preds = %for.body588.lr.ph, %for.inc608
  %intermediate.01313 = phi i32 [ %from_mode.3, %for.body588.lr.ph ], [ %conv611, %for.inc608 ]
  %call589 = tail call i32 @can_extend_p(i32 %bf.clear, i32 %intermediate.01313, i32 %unsignedp.tr) #5
  %cmp590 = icmp eq i32 %call589, 1317
  br i1 %cmp590, label %lor.lhs.false592, label %land.lhs.true601

lor.lhs.false592:                                 ; preds = %for.body588
  %64 = load i8* %arrayidx594, align 1, !tbaa !5
  %idxprom596 = sext i32 %intermediate.01313 to i64
  %arrayidx597 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom596
  %65 = load i8* %arrayidx597, align 1, !tbaa !5
  %cmp599 = icmp ult i8 %64, %65
  br i1 %cmp599, label %land.lhs.true601, label %for.inc608

land.lhs.true601:                                 ; preds = %for.body588, %lor.lhs.false592
  %call602 = tail call i32 @can_extend_p(i32 %intermediate.01313, i32 %from_mode.3, i32 %unsignedp.tr) #5
  %cmp603 = icmp eq i32 %call602, 1317
  br i1 %cmp603, label %land.lhs.true601.for.inc608_crit_edge, label %if.then605

land.lhs.true601.for.inc608_crit_edge:            ; preds = %land.lhs.true601
  %idxprom609.pre = sext i32 %intermediate.01313 to i64
  br label %for.inc608

if.then605:                                       ; preds = %land.lhs.true601
  %call.i1080 = tail call %struct.rtx_def* @convert_modes(i32 %intermediate.01313, i32 0, %struct.rtx_def* %from.addr.7, i32 %unsignedp.tr) #5
  br label %tailrecurse

for.inc608:                                       ; preds = %land.lhs.true601.for.inc608_crit_edge, %lor.lhs.false592
  %idxprom609.pre-phi = phi i64 [ %idxprom609.pre, %land.lhs.true601.for.inc608_crit_edge ], [ %idxprom596, %lor.lhs.false592 ]
  %arrayidx610 = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom609.pre-phi
  %66 = load i8* %arrayidx610, align 1, !tbaa !5
  %conv611 = zext i8 %66 to i32
  %cmp586 = icmp eq i8 %66, 0
  br i1 %cmp586, label %for.end612, label %for.body588

for.end612:                                       ; preds = %for.cond585.preheader, %for.inc608
  %from_mode.31542 = phi i32 [ %from_mode.3, %for.inc608 ], [ 0, %for.cond585.preheader ]
  %conv615 = zext i16 %20 to i64
  %conv618 = zext i16 %55 to i64
  %sub619 = sub i64 %conv615, %conv618
  %call621 = tail call %union.tree_node* @build_int_2_wide(i64 %sub619, i64 0) #5
  %call622 = tail call %struct.rtx_def* @force_reg(i32 %from_mode.31542, %struct.rtx_def* %from.addr.7) #5
  %call623 = tail call %struct.rtx_def* @gen_lowpart(i32 %bf.clear, %struct.rtx_def* %call622) #5
  %call624 = tail call %struct.rtx_def* @expand_shift(i32 82, i32 %bf.clear, %struct.rtx_def* %call623, %union.tree_node* %call621, %struct.rtx_def* %call, i32 %unsignedp.tr) #5
  %call625 = tail call %struct.rtx_def* @expand_shift(i32 83, i32 %bf.clear, %struct.rtx_def* %call624, %union.tree_node* %call621, %struct.rtx_def* %call, i32 %unsignedp.tr) #5
  %cmp626 = icmp eq %struct.rtx_def* %call625, %call
  br i1 %cmp626, label %return, label %if.then628

if.then628:                                       ; preds = %for.end612
  %call629 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call, %struct.rtx_def* %call625)
  br label %return

if.end631:                                        ; preds = %if.end565
  %cmp632 = icmp eq i32 %from_mode.3, 5
  %cmp635 = icmp eq i32 %bf.clear, 4
  %or.cond747 = and i1 %cmp632, %cmp635
  br i1 %or.cond747, label %if.then637, label %if.end639

if.then637:                                       ; preds = %if.end631
  %call638 = tail call %struct.rtx_def* @force_reg(i32 5, %struct.rtx_def* %from.addr.7) #5
  br label %tailrecurse

if.end639:                                        ; preds = %if.end631
  %cmp643 = icmp eq i32 %bf.clear, 3
  %or.cond749 = and i1 %cmp632, %cmp643
  br i1 %or.cond749, label %if.then645, label %if.end647

if.then645:                                       ; preds = %if.end639
  %call646 = tail call %struct.rtx_def* @force_reg(i32 5, %struct.rtx_def* %from.addr.7) #5
  br label %tailrecurse

if.end647:                                        ; preds = %if.end639
  %cmp651 = icmp eq i32 %bf.clear, 2
  %or.cond751 = and i1 %cmp632, %cmp651
  br i1 %or.cond751, label %if.then653, label %if.end655

if.then653:                                       ; preds = %if.end647
  %call654 = tail call %struct.rtx_def* @force_reg(i32 5, %struct.rtx_def* %from.addr.7) #5
  br label %tailrecurse

if.end655:                                        ; preds = %if.end647
  %cmp656 = icmp eq i32 %from_mode.3, 4
  %or.cond753 = and i1 %cmp656, %cmp643
  br i1 %or.cond753, label %if.then661, label %if.end663

if.then661:                                       ; preds = %if.end655
  %call662 = tail call %struct.rtx_def* @force_reg(i32 4, %struct.rtx_def* %from.addr.7) #5
  br label %tailrecurse

if.end663:                                        ; preds = %if.end655
  %or.cond755 = and i1 %cmp656, %cmp651
  br i1 %or.cond755, label %if.then669, label %if.end671

if.then669:                                       ; preds = %if.end663
  %call670 = tail call %struct.rtx_def* @force_reg(i32 4, %struct.rtx_def* %from.addr.7) #5
  br label %tailrecurse

if.end671:                                        ; preds = %if.end663
  %cmp672 = icmp eq i32 %from_mode.3, 3
  %or.cond757 = and i1 %cmp672, %cmp651
  br i1 %or.cond757, label %if.then677, label %if.end679

if.then677:                                       ; preds = %if.end671
  %call678 = tail call %struct.rtx_def* @force_reg(i32 3, %struct.rtx_def* %from.addr.7) #5
  br label %tailrecurse

if.end679:                                        ; preds = %if.end671
  %cmp680 = icmp eq i32 %from_mode.3, 6
  %cmp683 = icmp eq i32 %bf.clear, 5
  %or.cond759 = and i1 %cmp680, %cmp683
  br i1 %or.cond759, label %if.then685, label %if.end687

if.then685:                                       ; preds = %if.end679
  %call686 = tail call %struct.rtx_def* @force_reg(i32 6, %struct.rtx_def* %from.addr.7) #5
  br label %tailrecurse

if.end687:                                        ; preds = %if.end679
  %or.cond761 = and i1 %cmp680, %cmp635
  br i1 %or.cond761, label %if.then693, label %if.end695

if.then693:                                       ; preds = %if.end687
  %call694 = tail call %struct.rtx_def* @force_reg(i32 6, %struct.rtx_def* %from.addr.7) #5
  br label %tailrecurse

if.end695:                                        ; preds = %if.end687
  %or.cond763 = and i1 %cmp680, %cmp643
  br i1 %or.cond763, label %if.then701, label %if.end703

if.then701:                                       ; preds = %if.end695
  %call702 = tail call %struct.rtx_def* @force_reg(i32 6, %struct.rtx_def* %from.addr.7) #5
  br label %tailrecurse

if.end703:                                        ; preds = %if.end695
  %or.cond765 = and i1 %cmp680, %cmp651
  br i1 %or.cond765, label %if.then709, label %if.end725

if.then709:                                       ; preds = %if.end703
  %call710 = tail call %struct.rtx_def* @force_reg(i32 6, %struct.rtx_def* %from.addr.7) #5
  br label %tailrecurse

if.end725:                                        ; preds = %if.end703
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 1243, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.convert_move, i64 0, i64 0)) #8
  unreachable

return:                                           ; preds = %for.end612, %if.then628, %if.end582, %if.end562, %for.end, %if.end300, %if.end254, %if.then228, %if.then218, %if.then205, %if.then195, %if.then182, %if.then168, %if.end147, %if.then96
  ret void
}

declare %struct.rtx_def* @gen_lowpart(i32, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %x, %struct.rtx_def* %y) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %call = tail call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %x, i32 1)
  %call1 = tail call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %y, i32 0)
  %cmp = icmp eq i32 %bf.clear, 51
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %1 = getelementptr inbounds %struct.rtx_def* %call1, i64 0, i32 0
  %bf.load2 = load i32* %1, align 8
  %bf.lshr3 = lshr i32 %bf.load2, 16
  %bf.clear4 = and i32 %bf.lshr3, 255
  %cmp5 = icmp eq i32 %bf.clear4, %bf.clear
  %cmp9 = icmp eq i32 %bf.clear4, 0
  %or.cond = or i1 %cmp5, %cmp9
  br i1 %or.cond, label %if.end, label %if.then

if.then:                                          ; preds = %lor.lhs.false, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 2769, i8* getelementptr inbounds ([15 x i8]* @__FUNCTION__.emit_move_insn, i64 0, i64 0)) #8
  unreachable

if.end:                                           ; preds = %lor.lhs.false
  %2 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 0
  %bf.load50 = load i32* %2, align 8
  %bf.clear51 = and i32 %bf.load50, 65535
  %cmp52 = icmp eq i32 %bf.clear51, 66
  br i1 %cmp52, label %land.lhs.true53, label %if.end103

land.lhs.true53:                                  ; preds = %if.end
  %bf.lshr55 = lshr i32 %bf.load50, 16
  %bf.clear56 = and i32 %bf.lshr55, 255
  %arrayidx = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %3 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %call57 = tail call i32 @memory_address_p(i32 %bf.clear56, %struct.rtx_def* %3) #5
  %tobool = icmp eq i32 %call57, 0
  br i1 %tobool, label %land.lhs.true58, label %lor.lhs.false64

land.lhs.true58:                                  ; preds = %land.lhs.true53
  %bf.load59 = load i32* %2, align 8
  %bf.lshr60 = lshr i32 %bf.load59, 16
  %bf.clear61 = and i32 %bf.lshr60, 255
  %call62 = tail call i32 @push_operand(%struct.rtx_def* %call, i32 %bf.clear61) #5
  %tobool63 = icmp eq i32 %call62, 0
  br i1 %tobool63, label %if.then101, label %lor.lhs.false64

lor.lhs.false64:                                  ; preds = %land.lhs.true58, %land.lhs.true53
  %4 = load i32* @flag_force_addr, align 4, !tbaa !21
  %tobool65 = icmp eq i32 %4, 0
  br i1 %tobool65, label %if.end103, label %land.lhs.true66

land.lhs.true66:                                  ; preds = %lor.lhs.false64
  %5 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %6 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 0
  %bf.load70 = load i32* %6, align 8
  %bf.clear71 = and i32 %bf.load70, 65535
  switch i32 %bf.clear71, label %if.end103 [
    i32 67, label %if.then101
    i32 68, label %if.then101
    i32 54, label %if.then101
    i32 58, label %if.then101
    i32 55, label %if.then101
  ]

if.then101:                                       ; preds = %land.lhs.true66, %land.lhs.true66, %land.lhs.true66, %land.lhs.true66, %land.lhs.true66, %land.lhs.true58
  %call102 = tail call %struct.rtx_def* @validize_mem(%struct.rtx_def* %call) #5
  br label %if.end103

if.end103:                                        ; preds = %land.lhs.true66, %lor.lhs.false64, %if.then101, %if.end
  %x.addr.0 = phi %struct.rtx_def* [ %call102, %if.then101 ], [ %call, %lor.lhs.false64 ], [ %call, %if.end ], [ %call, %land.lhs.true66 ]
  %bf.load104 = load i32* %1, align 8
  %bf.clear105 = and i32 %bf.load104, 65535
  %cmp106 = icmp eq i32 %bf.clear105, 66
  br i1 %cmp106, label %land.lhs.true107, label %if.end158

land.lhs.true107:                                 ; preds = %if.end103
  %bf.lshr109 = lshr i32 %bf.load104, 16
  %bf.clear110 = and i32 %bf.lshr109, 255
  %arrayidx112 = getelementptr inbounds %struct.rtx_def* %call1, i64 0, i32 1, i64 0
  %rtx113 = bitcast %union.rtunion_def* %arrayidx112 to %struct.rtx_def**
  %7 = load %struct.rtx_def** %rtx113, align 8, !tbaa !1
  %call114 = tail call i32 @memory_address_p(i32 %bf.clear110, %struct.rtx_def* %7) #5
  %tobool115 = icmp eq i32 %call114, 0
  br i1 %tobool115, label %if.then153, label %lor.lhs.false116

lor.lhs.false116:                                 ; preds = %land.lhs.true107
  %8 = load i32* @flag_force_addr, align 4, !tbaa !21
  %tobool117 = icmp eq i32 %8, 0
  br i1 %tobool117, label %if.end158, label %land.lhs.true118

land.lhs.true118:                                 ; preds = %lor.lhs.false116
  %9 = load %struct.rtx_def** %rtx113, align 8, !tbaa !1
  %10 = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 0
  %bf.load122 = load i32* %10, align 8
  %bf.clear123 = and i32 %bf.load122, 65535
  switch i32 %bf.clear123, label %if.end158 [
    i32 67, label %if.then153
    i32 68, label %if.then153
    i32 54, label %if.then153
    i32 58, label %if.then153
    i32 55, label %if.then153
  ]

if.then153:                                       ; preds = %land.lhs.true118, %land.lhs.true118, %land.lhs.true118, %land.lhs.true118, %land.lhs.true118, %land.lhs.true107
  %call154 = tail call %struct.rtx_def* @validize_mem(%struct.rtx_def* %call1) #5
  br label %if.end158

if.end158:                                        ; preds = %if.end103, %if.then153, %lor.lhs.false116, %land.lhs.true118
  %y.addr.0 = phi %struct.rtx_def* [ %call154, %if.then153 ], [ %call1, %lor.lhs.false116 ], [ %call1, %if.end103 ], [ %call1, %land.lhs.true118 ]
  %call159 = tail call %struct.rtx_def* @emit_move_insn_1(%struct.rtx_def* %x.addr.0, %struct.rtx_def* %y.addr.0)
  ret %struct.rtx_def* %call159
}

declare %struct.rtx_def* @simplify_gen_subreg(i32, %struct.rtx_def*, i32, i32) #1

declare i32 @can_extend_p(i32, i32, i32) #1

declare void @emit_unop_insn(i32, %struct.rtx_def*, %struct.rtx_def*, i32) #1

declare %struct.rtx_def* @emit_library_call_value(%struct.rtx_def*, %struct.rtx_def*, i32, i32, i32, ...) #1

declare %struct.rtx_def* @get_insns() #1

declare void @emit_libcall_block(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @gen_rtx_fmt_e(i32, i32, %struct.rtx_def*) #1

declare %struct.rtx_def* @force_reg(i32, %struct.rtx_def*) #1

declare i32 @reg_overlap_mentioned_p(%struct.rtx_def*, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @convert_to_mode(i32 %mode, %struct.rtx_def* %x, i32 %unsignedp) #0 {
entry:
  %call = tail call %struct.rtx_def* @convert_modes(i32 %mode, i32 0, %struct.rtx_def* %x, i32 %unsignedp)
  ret %struct.rtx_def* %call
}

declare void @emit_cmp_insn(%struct.rtx_def*, %struct.rtx_def*, i32, %struct.rtx_def*, i32, i32) #1

declare %struct.rtx_def* @expand_shift(i32, i32, %struct.rtx_def*, %union.tree_node*, %struct.rtx_def*, i32) #1

declare %union.tree_node* @size_int_wide(i64, i32) #1

declare %struct.rtx_def* @operand_subword(%struct.rtx_def*, i32, i32, i32) #1

declare %struct.rtx_def* @emit_no_conflict_block(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #1

declare i32 @mode_dependent_address_p(%struct.rtx_def*) #1

declare %struct.rtx_def* @force_not_mem(%struct.rtx_def*) #1

declare %union.tree_node* @build_int_2_wide(i64, i64) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @convert_modes(i32 %mode, i32 %oldmode, %struct.rtx_def* %x, i32 %unsignedp) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %1 = and i32 %bf.load, 268500991
  %2 = icmp eq i32 %1, 268435519
  br i1 %2, label %land.lhs.true3, label %if.end

land.lhs.true3:                                   ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %3 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %4 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 0
  %bf.load4 = load i32* %4, align 8
  %bf.lshr5 = lshr i32 %bf.load4, 16
  %bf.clear6 = and i32 %bf.lshr5, 255
  %idxprom224 = zext i32 %bf.clear6 to i64
  %arrayidx7 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom224
  %5 = load i8* %arrayidx7, align 1, !tbaa !5
  %idxprom8 = sext i32 %mode to i64
  %arrayidx9 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom8
  %6 = load i8* %arrayidx9, align 1, !tbaa !5
  %cmp11 = icmp ult i8 %5, %6
  br i1 %cmp11, label %if.end, label %land.lhs.true13

land.lhs.true13:                                  ; preds = %land.lhs.true3
  %bf.lshr15 = lshr i32 %bf.load, 26
  %bf.clear16 = and i32 %bf.lshr15, 1
  %cmp17 = icmp eq i32 %bf.clear16, %unsignedp
  br i1 %cmp17, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true13
  %call = tail call %struct.rtx_def* @gen_lowpart(i32 %mode, %struct.rtx_def* %x) #5
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 0
  %bf.load19.pre = load i32* %.phi.trans.insert, align 8
  br label %if.end

if.end:                                           ; preds = %entry, %land.lhs.true3, %if.then, %land.lhs.true13
  %bf.load123 = phi i32 [ %bf.load19.pre, %if.then ], [ %bf.load, %land.lhs.true13 ], [ %bf.load, %land.lhs.true3 ], [ %bf.load, %entry ]
  %x.addr.0 = phi %struct.rtx_def* [ %call, %if.then ], [ %x, %land.lhs.true13 ], [ %x, %land.lhs.true3 ], [ %x, %entry ]
  %bf.lshr20 = lshr i32 %bf.load123, 16
  %bf.clear21 = and i32 %bf.lshr20, 255
  %cmp22 = icmp eq i32 %bf.clear21, 0
  %oldmode.bf.clear21 = select i1 %cmp22, i32 %oldmode, i32 %bf.clear21
  %cmp29 = icmp eq i32 %oldmode.bf.clear21, %mode
  br i1 %cmp29, label %return, label %if.end32

if.end32:                                         ; preds = %if.end
  %tobool33 = icmp ne i32 %unsignedp, 0
  br i1 %tobool33, label %land.lhs.true34, label %if.end73

land.lhs.true34:                                  ; preds = %if.end32
  %idxprom35 = sext i32 %mode to i64
  %arrayidx36 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom35
  %7 = load i32* %arrayidx36, align 4, !tbaa !5
  %cmp37 = icmp eq i32 %7, 1
  br i1 %cmp37, label %land.lhs.true39, label %if.end73

land.lhs.true39:                                  ; preds = %land.lhs.true34
  %arrayidx41 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom35
  %8 = load i16* %arrayidx41, align 2, !tbaa !19
  %cmp43 = icmp eq i16 %8, 128
  %bf.clear47 = and i32 %bf.load123, 65535
  %cmp48 = icmp eq i32 %bf.clear47, 54
  %or.cond227 = and i1 %cmp43, %cmp48
  br i1 %or.cond227, label %land.lhs.true50, label %if.end73

land.lhs.true50:                                  ; preds = %land.lhs.true39
  %rtwint = getelementptr inbounds %struct.rtx_def* %x.addr.0, i64 0, i32 1, i64 0, i32 0
  %9 = load i64* %rtwint, align 8, !tbaa !22
  %cmp53 = icmp slt i64 %9, 0
  br i1 %cmp53, label %if.then55, label %if.end73

if.then55:                                        ; preds = %land.lhs.true50
  %cmp59 = icmp eq i32 %oldmode.bf.clear21, 0
  br i1 %cmp59, label %if.end71, label %land.lhs.true61

land.lhs.true61:                                  ; preds = %if.then55
  %idxprom62 = sext i32 %oldmode.bf.clear21 to i64
  %arrayidx63 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom62
  %10 = load i16* %arrayidx63, align 2, !tbaa !19
  %cmp65 = icmp ult i16 %10, 64
  br i1 %cmp65, label %if.then67, label %if.end71

if.then67:                                        ; preds = %land.lhs.true61
  %sh_prom = zext i16 %10 to i64
  %shl = shl i64 1, %sh_prom
  %sub = add nsw i64 %shl, -1
  %and = and i64 %sub, %9
  br label %if.end71

if.end71:                                         ; preds = %if.then55, %if.then67, %land.lhs.true61
  %val.0 = phi i64 [ %and, %if.then67 ], [ %9, %land.lhs.true61 ], [ %9, %if.then55 ]
  %call72 = tail call %struct.rtx_def* @immed_double_const(i64 %val.0, i64 0, i32 %mode) #5
  br label %return

if.end73:                                         ; preds = %land.lhs.true50, %land.lhs.true39, %land.lhs.true34, %if.end32
  %bf.clear75 = and i32 %bf.load123, 65535
  %cmp76 = icmp eq i32 %bf.clear75, 54
  %idxprom79 = sext i32 %mode to i64
  br i1 %cmp76, label %land.lhs.true78, label %lor.lhs.false

land.lhs.true78:                                  ; preds = %if.end73
  %arrayidx80 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom79
  %11 = load i16* %arrayidx80, align 2, !tbaa !19
  %cmp82 = icmp ult i16 %11, 65
  br i1 %cmp82, label %if.then127, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end73, %land.lhs.true78
  %arrayidx85 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom79
  %12 = load i32* %arrayidx85, align 4, !tbaa !5
  %cmp86 = icmp eq i32 %12, 1
  br i1 %cmp86, label %land.lhs.true88, label %if.end172

land.lhs.true88:                                  ; preds = %lor.lhs.false
  %idxprom89 = sext i32 %oldmode.bf.clear21 to i64
  %arrayidx90 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom89
  %13 = load i32* %arrayidx90, align 4, !tbaa !5
  %cmp91 = icmp eq i32 %13, 1
  br i1 %cmp91, label %land.lhs.true93, label %if.end172

land.lhs.true93:                                  ; preds = %land.lhs.true88
  %cmp96 = icmp eq i32 %bf.clear75, 55
  br i1 %cmp96, label %if.then127, label %lor.lhs.false98

lor.lhs.false98:                                  ; preds = %land.lhs.true93
  %arrayidx100 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom79
  %14 = load i8* %arrayidx100, align 1, !tbaa !5
  %arrayidx103 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom89
  %15 = load i8* %arrayidx103, align 1, !tbaa !5
  %cmp105 = icmp ugt i8 %14, %15
  br i1 %cmp105, label %if.end172, label %land.lhs.true107

land.lhs.true107:                                 ; preds = %lor.lhs.false98
  %16 = and i32 %bf.load123, 134283263
  %17 = icmp eq i32 %16, 66
  br i1 %17, label %land.lhs.true117, label %lor.lhs.false122

land.lhs.true117:                                 ; preds = %land.lhs.true107
  %arrayidx119 = getelementptr inbounds [59 x i8]* @direct_load, i64 0, i64 %idxprom79
  %18 = load i8* %arrayidx119, align 1, !tbaa !5
  %tobool121 = icmp ne i8 %18, 0
  %cmp125 = icmp eq i32 %bf.clear75, 61
  %or.cond230 = or i1 %tobool121, %cmp125
  br i1 %or.cond230, label %if.then127, label %if.end172

lor.lhs.false122:                                 ; preds = %land.lhs.true107
  %cmp125.old = icmp eq i32 %bf.clear75, 61
  br i1 %cmp125.old, label %if.then127, label %if.end172

if.then127:                                       ; preds = %land.lhs.true117, %lor.lhs.false122, %land.lhs.true93, %land.lhs.true78
  %cmp133 = icmp ne i32 %oldmode.bf.clear21, 0
  %or.cond = and i1 %cmp76, %cmp133
  br i1 %or.cond, label %land.lhs.true135, label %if.end170

land.lhs.true135:                                 ; preds = %if.then127
  %idxprom136 = sext i32 %mode to i64
  %arrayidx137 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom136
  %19 = load i8* %arrayidx137, align 1, !tbaa !5
  %idxprom139 = sext i32 %oldmode.bf.clear21 to i64
  %arrayidx140 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom139
  %20 = load i8* %arrayidx140, align 1, !tbaa !5
  %cmp142 = icmp ugt i8 %19, %20
  br i1 %cmp142, label %if.then144, label %if.end170

if.then144:                                       ; preds = %land.lhs.true135
  %rtwint148 = getelementptr inbounds %struct.rtx_def* %x.addr.0, i64 0, i32 1, i64 0, i32 0
  %21 = load i64* %rtwint148, align 8, !tbaa !22
  %arrayidx151 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom139
  %22 = load i16* %arrayidx151, align 2, !tbaa !19
  %sh_prom153 = zext i16 %22 to i64
  %shl154 = shl i64 1, %sh_prom153
  %sub155 = add nsw i64 %shl154, -1
  %and156 = and i64 %sub155, %21
  br i1 %tobool33, label %if.end167, label %land.lhs.true158

land.lhs.true158:                                 ; preds = %if.then144
  %sub159 = add i64 %sh_prom153, 4294967295
  %sh_prom160 = and i64 %sub159, 4294967295
  %shl161 = shl i64 1, %sh_prom160
  %and162 = and i64 %and156, %shl161
  %tobool163 = icmp eq i64 %and162, 0
  br i1 %tobool163, label %if.end167, label %if.then164

if.then164:                                       ; preds = %land.lhs.true158
  %shl166 = shl i64 -1, %sh_prom153
  %or = or i64 %and156, %shl166
  br label %if.end167

if.end167:                                        ; preds = %land.lhs.true158, %if.then164, %if.then144
  %val145.0 = phi i64 [ %and156, %if.then144 ], [ %or, %if.then164 ], [ %and156, %land.lhs.true158 ]
  %call168 = tail call i64 @trunc_int_for_mode(i64 %val145.0, i32 %mode) #5
  %call169 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call168) #5
  br label %return

if.end170:                                        ; preds = %land.lhs.true135, %if.then127
  %call171 = tail call %struct.rtx_def* @gen_lowpart(i32 %mode, %struct.rtx_def* %x.addr.0) #5
  br label %return

if.end172:                                        ; preds = %land.lhs.true117, %lor.lhs.false98, %lor.lhs.false122, %land.lhs.true88, %lor.lhs.false
  %call173 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode) #5
  tail call void @convert_move(%struct.rtx_def* %call173, %struct.rtx_def* %x.addr.0, i32 %unsignedp)
  br label %return

return:                                           ; preds = %if.end, %if.end172, %if.end170, %if.end167, %if.end71
  %retval.0 = phi %struct.rtx_def* [ %call72, %if.end71 ], [ %call169, %if.end167 ], [ %call171, %if.end170 ], [ %call173, %if.end172 ], [ %x.addr.0, %if.end ]
  ret %struct.rtx_def* %retval.0
}

declare %struct.rtx_def* @immed_double_const(i64, i64, i32) #1

declare %struct.rtx_def* @gen_rtx_CONST_INT(i32, i64) #1

declare i64 @trunc_int_for_mode(i64, i32) #1

; Function Attrs: nounwind uwtable
define void @move_by_pieces(%struct.rtx_def* %to, %struct.rtx_def* %from, i64 %len, i32 %align) #0 {
entry:
  %arrayidx = getelementptr inbounds %struct.rtx_def* %from, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %0 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %1 = load i32* @target_flags, align 4, !tbaa !21
  %and = lshr i32 %1, 23
  %2 = and i32 %and, 4
  %add = add i32 %2, 5
  %tobool2 = icmp eq %struct.rtx_def* %to, null
  br i1 %tobool2, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %arrayidx4 = getelementptr inbounds %struct.rtx_def* %to, i64 0, i32 1, i64 0
  %rtx5 = bitcast %union.rtunion_def* %arrayidx4 to %struct.rtx_def**
  %3 = load %struct.rtx_def** %rtx5, align 8, !tbaa !1
  %4 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 0
  %bf.load = load i32* %4, align 8
  %5 = and i32 %bf.load, 65532
  %6 = and i32 %bf.load, 65533
  %phitmp = icmp ne i32 %6, 96
  %phitmp304 = icmp ne i32 %5, 96
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %data.sroa.40.64.303 = phi i1 [ %phitmp, %if.then ], [ false, %entry ]
  %7 = phi i1 [ %phitmp304, %if.then ], [ false, %entry ]
  %data.sroa.0.0.288 = phi %struct.rtx_def* [ %to, %if.then ], [ null, %entry ]
  %to_addr.0 = phi %struct.rtx_def* [ %3, %if.then ], [ null, %entry ]
  %8 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 0
  %bf.load31 = load i32* %8, align 8
  %9 = and i32 %bf.load31, 65532
  %10 = icmp eq i32 %9, 96
  %.len = select i1 %data.sroa.40.64.303, i64 0, i64 %len
  %tobool55 = xor i1 %10, true
  %or.cond = or i1 %7, %tobool55
  br i1 %or.cond, label %land.lhs.true58, label %while.cond.preheader

land.lhs.true58:                                  ; preds = %if.end
  %11 = load i32* getelementptr inbounds ([9 x i32]* @class_narrowest_mode, i64 0, i64 1), align 4, !tbaa !5
  %cmp11.i = icmp eq i32 %11, 0
  br i1 %cmp11.i, label %while.end.i, label %for.body.lr.ph.i

for.body.lr.ph.i:                                 ; preds = %land.lhs.true58, %if.end24.i
  %l.addr.06.i = phi i64 [ %l.addr.1.i, %if.end24.i ], [ %len, %land.lhs.true58 ]
  %max_size.05.i = phi i64 [ %conv27.i, %if.end24.i ], [ 17, %land.lhs.true58 ]
  %n_insns.04.i = phi i64 [ %n_insns.1.i, %if.end24.i ], [ 0, %land.lhs.true58 ]
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i, %for.body.lr.ph.i
  %tmode.03.i = phi i32 [ %11, %for.body.lr.ph.i ], [ %conv6.i, %for.body.i ]
  %mode.02.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %tmode.0.mode.0.i, %for.body.i ]
  %idxprom.i = sext i32 %tmode.03.i to i64
  %arrayidx.i = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom.i
  %12 = load i8* %arrayidx.i, align 1, !tbaa !5
  %conv.i = zext i8 %12 to i64
  %cmp2.i = icmp ult i64 %conv.i, %max_size.05.i
  %tmode.0.mode.0.i = select i1 %cmp2.i, i32 %tmode.03.i, i32 %mode.02.i
  %arrayidx5.i = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom.i
  %13 = load i8* %arrayidx5.i, align 1, !tbaa !5
  %conv6.i = zext i8 %13 to i32
  %cmp1.i = icmp eq i8 %13, 0
  br i1 %cmp1.i, label %for.end.i, label %for.body.i

for.end.i:                                        ; preds = %for.body.i
  %cmp7.i = icmp eq i32 %tmode.0.mode.0.i, 0
  br i1 %cmp7.i, label %while.end.i, label %if.end10.i

if.end10.i:                                       ; preds = %for.end.i
  %idxprom11.i = sext i32 %tmode.0.mode.0.i to i64
  %14 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 30), align 8, !tbaa !1
  %insn_code.i = getelementptr inbounds %struct.optab* %14, i64 0, i32 1, i64 %idxprom11.i, i32 0
  %15 = load i32* %insn_code.i, align 4, !tbaa !23
  %cmp13.i = icmp eq i32 %15, 1317
  br i1 %cmp13.i, label %if.end24.i, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %if.end10.i
  %call.i = tail call i32 @get_mode_alignment(i32 %tmode.0.mode.0.i) #5
  %cmp15.i = icmp ult i32 %call.i, 129
  br i1 %cmp15.i, label %if.then17.i, label %if.end24.i

if.then17.i:                                      ; preds = %land.lhs.true.i
  %arrayidx19.i = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom11.i
  %16 = load i8* %arrayidx19.i, align 1, !tbaa !5
  %conv20.i = zext i8 %16 to i64
  %div.i = udiv i64 %l.addr.06.i, %conv20.i
  %add.i = add i64 %div.i, %n_insns.04.i
  %rem.i = urem i64 %l.addr.06.i, %conv20.i
  br label %if.end24.i

if.end24.i:                                       ; preds = %if.then17.i, %land.lhs.true.i, %if.end10.i
  %n_insns.1.i = phi i64 [ %add.i, %if.then17.i ], [ %n_insns.04.i, %land.lhs.true.i ], [ %n_insns.04.i, %if.end10.i ]
  %l.addr.1.i = phi i64 [ %rem.i, %if.then17.i ], [ %l.addr.06.i, %land.lhs.true.i ], [ %l.addr.06.i, %if.end10.i ]
  %arrayidx26.i = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom11.i
  %17 = load i8* %arrayidx26.i, align 1, !tbaa !5
  %conv27.i = zext i8 %17 to i64
  %cmp.i = icmp ugt i8 %17, 1
  br i1 %cmp.i, label %for.body.lr.ph.i, label %while.end.i

while.end.i:                                      ; preds = %if.end24.i, %for.end.i, %land.lhs.true58
  %l.addr.0.lcssa.i = phi i64 [ %len, %land.lhs.true58 ], [ %l.addr.1.i, %if.end24.i ], [ %l.addr.06.i, %for.end.i ]
  %n_insns.0.lcssa.i = phi i64 [ 0, %land.lhs.true58 ], [ %n_insns.1.i, %if.end24.i ], [ %n_insns.04.i, %for.end.i ]
  %tobool.i = icmp eq i64 %l.addr.0.lcssa.i, 0
  br i1 %tobool.i, label %move_by_pieces_ninsns.exit, label %if.then28.i

if.then28.i:                                      ; preds = %while.end.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 1542, i8* getelementptr inbounds ([22 x i8]* @__FUNCTION__.move_by_pieces_ninsns, i64 0, i64 0)) #8
  unreachable

move_by_pieces_ninsns.exit:                       ; preds = %while.end.i
  %cmp59 = icmp ugt i64 %n_insns.0.lcssa.i, 2
  br i1 %cmp59, label %if.then60, label %while.cond.preheader

if.then60:                                        ; preds = %move_by_pieces_ninsns.exit
  br i1 %cmp11.i, label %for.end, label %for.body

for.body:                                         ; preds = %if.then60, %for.body
  %tmode.0317 = phi i32 [ %conv69, %for.body ], [ %11, %if.then60 ]
  %mode.0316 = phi i32 [ %tmode.0.mode.0, %for.body ], [ 0, %if.then60 ]
  %idxprom = sext i32 %tmode.0317 to i64
  %arrayidx62 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom
  %18 = load i8* %arrayidx62, align 1, !tbaa !5
  %conv = zext i8 %18 to i32
  %cmp63 = icmp ult i32 %conv, %add
  %tmode.0.mode.0 = select i1 %cmp63, i32 %tmode.0317, i32 %mode.0316
  %arrayidx68 = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom
  %19 = load i8* %arrayidx68, align 1, !tbaa !5
  %conv69 = zext i8 %19 to i32
  %cmp61 = icmp eq i8 %19, 0
  br i1 %cmp61, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %if.then60
  %mode.0.lcssa = phi i32 [ 0, %if.then60 ], [ %tmode.0.mode.0, %for.body ]
  br i1 %10, label %if.end115, label %land.lhs.true72

land.lhs.true72:                                  ; preds = %for.end
  %bf.load73 = load i32* %8, align 8
  %bf.clear74 = and i32 %bf.load73, 65535
  switch i32 %bf.clear74, label %if.end115 [
    i32 67, label %if.then112
    i32 68, label %if.then112
    i32 54, label %if.then112
    i32 55, label %if.then112
    i32 58, label %if.then112
    i32 134, label %if.then112
    i32 56, label %if.then112
    i32 140, label %if.then112
  ]

if.then112:                                       ; preds = %land.lhs.true72, %land.lhs.true72, %land.lhs.true72, %land.lhs.true72, %land.lhs.true72, %land.lhs.true72, %land.lhs.true72, %land.lhs.true72
  %call113 = tail call %struct.rtx_def* @copy_addr_to_reg(%struct.rtx_def* %0) #5
  br label %if.end115

if.end115:                                        ; preds = %for.end, %land.lhs.true72, %if.then112
  %20 = phi %struct.rtx_def* [ %0, %land.lhs.true72 ], [ %0, %for.end ], [ %call113, %if.then112 ]
  br i1 %7, label %land.lhs.true118, label %while.cond.preheader

land.lhs.true118:                                 ; preds = %if.end115
  %21 = getelementptr inbounds %struct.rtx_def* %to_addr.0, i64 0, i32 0
  %bf.load119 = load i32* %21, align 8
  %bf.clear120 = and i32 %bf.load119, 65535
  switch i32 %bf.clear120, label %while.cond.preheader [
    i32 67, label %if.then158
    i32 68, label %if.then158
    i32 54, label %if.then158
    i32 55, label %if.then158
    i32 58, label %if.then158
    i32 134, label %if.then158
    i32 56, label %if.then158
    i32 140, label %if.then158
  ]

if.then158:                                       ; preds = %land.lhs.true118, %land.lhs.true118, %land.lhs.true118, %land.lhs.true118, %land.lhs.true118, %land.lhs.true118, %land.lhs.true118, %land.lhs.true118
  %call159 = tail call %struct.rtx_def* @copy_addr_to_reg(%struct.rtx_def* %to_addr.0) #5
  br label %while.cond.preheader

while.cond.preheader:                             ; preds = %land.lhs.true118, %if.end115, %if.then158, %move_by_pieces_ninsns.exit, %if.end
  %.ph = phi %struct.rtx_def* [ %0, %if.end ], [ %0, %move_by_pieces_ninsns.exit ], [ %20, %if.then158 ], [ %20, %if.end115 ], [ %20, %land.lhs.true118 ]
  %data.sroa.6.8.289.ph = phi %struct.rtx_def* [ %to_addr.0, %if.end ], [ %to_addr.0, %move_by_pieces_ninsns.exit ], [ %call159, %if.then158 ], [ %to_addr.0, %if.end115 ], [ %to_addr.0, %land.lhs.true118 ]
  %mode.3.ph = phi i32 [ 0, %if.end ], [ 0, %move_by_pieces_ninsns.exit ], [ %mode.0.lcssa, %if.then158 ], [ %mode.0.lcssa, %if.end115 ], [ %mode.0.lcssa, %land.lhs.true118 ]
  %cmp163308 = icmp eq i32 %add, 1
  br i1 %cmp163308, label %while.end, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %while.cond.preheader
  %22 = load i32* getelementptr inbounds ([9 x i32]* @class_narrowest_mode, i64 0, i64 1), align 4, !tbaa !5
  %cmp166305 = icmp eq i32 %22, 0
  %tobool4.i = icmp eq %struct.rtx_def* %data.sroa.0.0.288, null
  br label %while.body

while.body:                                       ; preds = %while.body.lr.ph, %if.end196
  %mode.3312 = phi i32 [ %mode.3.ph, %while.body.lr.ph ], [ %mode.4.lcssa, %if.end196 ]
  %max_size.0311 = phi i32 [ %add, %while.body.lr.ph ], [ %conv199, %if.end196 ]
  %sub39.i292310 = phi i64 [ %len, %while.body.lr.ph ], [ %sub39.i293, %if.end196 ]
  %sub.i298309 = phi i64 [ %.len, %while.body.lr.ph ], [ %sub.i299, %if.end196 ]
  br i1 %cmp166305, label %for.end180, label %for.body168

for.body168:                                      ; preds = %while.body, %for.body168
  %tmode.1307 = phi i32 [ %conv179, %for.body168 ], [ %22, %while.body ]
  %mode.4306 = phi i32 [ %tmode.1.mode.4, %for.body168 ], [ %mode.3312, %while.body ]
  %idxprom169 = sext i32 %tmode.1307 to i64
  %arrayidx170 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom169
  %23 = load i8* %arrayidx170, align 1, !tbaa !5
  %conv171 = zext i8 %23 to i32
  %cmp172 = icmp ult i32 %conv171, %max_size.0311
  %tmode.1.mode.4 = select i1 %cmp172, i32 %tmode.1307, i32 %mode.4306
  %arrayidx178 = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom169
  %24 = load i8* %arrayidx178, align 1, !tbaa !5
  %conv179 = zext i8 %24 to i32
  %cmp166 = icmp eq i8 %24, 0
  br i1 %cmp166, label %for.end180, label %for.body168

for.end180:                                       ; preds = %for.body168, %while.body
  %mode.4.lcssa = phi i32 [ %mode.3312, %while.body ], [ %tmode.1.mode.4, %for.body168 ]
  %cmp181 = icmp eq i32 %mode.4.lcssa, 0
  br i1 %cmp181, label %while.end, label %if.end184

if.end184:                                        ; preds = %for.end180
  %idxprom185 = sext i32 %mode.4.lcssa to i64
  %25 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 30), align 8, !tbaa !1
  %insn_code = getelementptr inbounds %struct.optab* %25, i64 0, i32 1, i64 %idxprom185, i32 0
  %26 = load i32* %insn_code, align 4, !tbaa !23
  %cmp187 = icmp eq i32 %26, 1317
  br i1 %cmp187, label %if.end196, label %land.lhs.true189

land.lhs.true189:                                 ; preds = %if.end184
  %call190 = tail call i32 @get_mode_alignment(i32 %mode.4.lcssa) #5
  %cmp191 = icmp ult i32 %call190, 129
  br i1 %cmp191, label %if.then193, label %if.end196

if.then193:                                       ; preds = %land.lhs.true189
  %idxprom194 = sext i32 %26 to i64
  %genfun = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom194, i32 2
  %27 = load %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun, align 8, !tbaa !25
  %arrayidx.i257 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom185
  %28 = load i8* %arrayidx.i257, align 1, !tbaa !5
  %conv1.i = zext i8 %28 to i64
  %cmp62.i = icmp ult i64 %sub39.i292310, %conv1.i
  br i1 %cmp62.i, label %if.end196, label %while.body.i.preheader

while.body.i.preheader:                           ; preds = %if.then193
  %sub.i = select i1 %data.sroa.40.64.303, i64 0, i64 %conv1.i
  %add.i260 = select i1 %data.sroa.40.64.303, i64 %conv1.i, i64 0
  br i1 %tobool4.i, label %if.end14.i.us, label %if.then5.i

if.end14.i.us:                                    ; preds = %while.body.i.preheader, %if.end30.i.us
  %sub.i297.us = phi i64 [ %add.i260.sub.i297.sub.i.us, %if.end30.i.us ], [ %sub.i298309, %while.body.i.preheader ]
  %sub39.i291.us = phi i64 [ %sub39.i.us, %if.end30.i.us ], [ %sub39.i292310, %while.body.i.preheader ]
  %sub.i297.sub.i.us = sub nsw i64 %sub.i297.us, %sub.i
  br i1 %10, label %if.then16.i.us, label %if.else19.i.us

if.else19.i.us:                                   ; preds = %if.end14.i.us
  %call22.i.us = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %from, i32 %mode.4.lcssa, i64 %sub.i297.sub.i.us, i32 1, i32 1) #5
  br label %if.end30.i.us

if.then16.i.us:                                   ; preds = %if.end14.i.us
  %call18.i.us = tail call %struct.rtx_def* @adjust_automodify_address_1(%struct.rtx_def* %from, i32 %mode.4.lcssa, %struct.rtx_def* %.ph, i64 %sub.i297.sub.i.us, i32 1) #5
  br label %if.end30.i.us

if.end30.i.us:                                    ; preds = %if.then16.i.us, %if.else19.i.us
  %from1.0.i.us = phi %struct.rtx_def* [ %call18.i.us, %if.then16.i.us ], [ %call22.i.us, %if.else19.i.us ]
  tail call fastcc void @emit_single_push_insn(i32 %mode.4.lcssa, %struct.rtx_def* %from1.0.i.us, %union.tree_node* null) #5
  %add.i260.sub.i297.sub.i.us = add nsw i64 %sub.i297.sub.i.us, %add.i260
  %sub39.i.us = sub i64 %sub39.i291.us, %conv1.i
  %cmp.i261.us = icmp ult i64 %sub39.i.us, %conv1.i
  br i1 %cmp.i261.us, label %if.end196, label %if.end14.i.us

if.then5.i:                                       ; preds = %while.body.i.preheader, %if.end30.i
  %sub.i297 = phi i64 [ %add.i260.sub.i297.sub.i, %if.end30.i ], [ %sub.i298309, %while.body.i.preheader ]
  %sub39.i291 = phi i64 [ %sub39.i, %if.end30.i ], [ %sub39.i292310, %while.body.i.preheader ]
  %sub.i297.sub.i = sub nsw i64 %sub.i297, %sub.i
  br i1 %7, label %if.else.i, label %if.then7.i

if.then7.i:                                       ; preds = %if.then5.i
  %call.i259 = tail call %struct.rtx_def* @adjust_automodify_address_1(%struct.rtx_def* %data.sroa.0.0.288, i32 %mode.4.lcssa, %struct.rtx_def* %data.sroa.6.8.289.ph, i64 %sub.i297.sub.i, i32 1) #5
  br label %if.end14.i

if.else.i:                                        ; preds = %if.then5.i
  %call12.i = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %data.sroa.0.0.288, i32 %mode.4.lcssa, i64 %sub.i297.sub.i, i32 1, i32 1) #5
  br label %if.end14.i

if.end14.i:                                       ; preds = %if.else.i, %if.then7.i
  %to1.1.i = phi %struct.rtx_def* [ %call.i259, %if.then7.i ], [ %call12.i, %if.else.i ]
  br i1 %10, label %if.then16.i, label %if.else19.i

if.then16.i:                                      ; preds = %if.end14.i
  %call18.i = tail call %struct.rtx_def* @adjust_automodify_address_1(%struct.rtx_def* %from, i32 %mode.4.lcssa, %struct.rtx_def* %.ph, i64 %sub.i297.sub.i, i32 1) #5
  br label %if.end30.i

if.else19.i:                                      ; preds = %if.end14.i
  %call22.i = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %from, i32 %mode.4.lcssa, i64 %sub.i297.sub.i, i32 1, i32 1) #5
  br label %if.end30.i

if.end30.i:                                       ; preds = %if.else19.i, %if.then16.i
  %from1.0.i = phi %struct.rtx_def* [ %call18.i, %if.then16.i ], [ %call22.i, %if.else19.i ]
  %call27.i = tail call %struct.rtx_def* (%struct.rtx_def*, ...)* %27(%struct.rtx_def* %to1.1.i, %struct.rtx_def* %from1.0.i) #5
  %call28.i = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call27.i) #5
  %add.i260.sub.i297.sub.i = add nsw i64 %sub.i297.sub.i, %add.i260
  %sub39.i = sub i64 %sub39.i291, %conv1.i
  %cmp.i261 = icmp ult i64 %sub39.i, %conv1.i
  br i1 %cmp.i261, label %if.end196, label %if.then5.i

if.end196:                                        ; preds = %if.end30.i, %if.end30.i.us, %if.then193, %if.end184, %land.lhs.true189
  %sub.i299 = phi i64 [ %sub.i298309, %if.end184 ], [ %sub.i298309, %land.lhs.true189 ], [ %sub.i298309, %if.then193 ], [ %add.i260.sub.i297.sub.i.us, %if.end30.i.us ], [ %add.i260.sub.i297.sub.i, %if.end30.i ]
  %sub39.i293 = phi i64 [ %sub39.i292310, %if.end184 ], [ %sub39.i292310, %land.lhs.true189 ], [ %sub39.i292310, %if.then193 ], [ %sub39.i.us, %if.end30.i.us ], [ %sub39.i, %if.end30.i ]
  %arrayidx198 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom185
  %29 = load i8* %arrayidx198, align 1, !tbaa !5
  %conv199 = zext i8 %29 to i32
  %cmp163 = icmp ugt i8 %29, 1
  br i1 %cmp163, label %while.body, label %while.end

while.end:                                        ; preds = %if.end196, %for.end180, %while.cond.preheader
  %sub39.i292.lcssa = phi i64 [ %len, %while.cond.preheader ], [ %sub39.i293, %if.end196 ], [ %sub39.i292310, %for.end180 ]
  %cmp201 = icmp eq i64 %sub39.i292.lcssa, 0
  br i1 %cmp201, label %if.end204, label %if.then203

if.then203:                                       ; preds = %while.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 1503, i8* getelementptr inbounds ([15 x i8]* @__FUNCTION__.move_by_pieces, i64 0, i64 0)) #8
  unreachable

if.end204:                                        ; preds = %while.end
  ret void
}

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #5

declare %struct.rtx_def* @copy_addr_to_reg(%struct.rtx_def*) #1

declare i32 @get_mode_alignment(i32) #1

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #5

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @emit_block_move(%struct.rtx_def* %x, %struct.rtx_def* %y, %struct.rtx_def* %size) #0 {
entry:
  %arrayidx = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 1
  %rtmem = bitcast %union.rtunion_def* %arrayidx to %struct.mem_attrs**
  %0 = load %struct.mem_attrs** %rtmem, align 8, !tbaa !1
  %cmp = icmp eq %struct.mem_attrs* %0, null
  br i1 %cmp, label %cond.end, label %cond.true

cond.true:                                        ; preds = %entry
  %align5 = getelementptr inbounds %struct.mem_attrs* %0, i64 0, i32 4
  %1 = load i32* %align5, align 4, !tbaa !27
  br label %cond.end

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %1, %cond.true ], [ 8, %entry ]
  %arrayidx7 = getelementptr inbounds %struct.rtx_def* %y, i64 0, i32 1, i64 1
  %rtmem8 = bitcast %union.rtunion_def* %arrayidx7 to %struct.mem_attrs**
  %2 = load %struct.mem_attrs** %rtmem8, align 8, !tbaa !1
  %cmp9 = icmp eq %struct.mem_attrs* %2, null
  br i1 %cmp9, label %cond.end16, label %cond.true10

cond.true10:                                      ; preds = %cond.end
  %align14 = getelementptr inbounds %struct.mem_attrs* %2, i64 0, i32 4
  %3 = load i32* %align14, align 4, !tbaa !27
  br label %cond.end16

cond.end16:                                       ; preds = %cond.end, %cond.true10
  %cond17 = phi i32 [ %3, %cond.true10 ], [ 8, %cond.end ]
  %cmp18 = icmp ult i32 %cond, %cond17
  br i1 %cmp18, label %cond.true19, label %cond.false32

cond.true19:                                      ; preds = %cond.end16
  br i1 %cmp, label %cond.end45, label %cond.true24

cond.true24:                                      ; preds = %cond.true19
  %align28 = getelementptr inbounds %struct.mem_attrs* %0, i64 0, i32 4
  %4 = load i32* %align28, align 4, !tbaa !27
  br label %cond.end45

cond.false32:                                     ; preds = %cond.end16
  br i1 %cmp9, label %cond.end45, label %cond.true37

cond.true37:                                      ; preds = %cond.false32
  %align41 = getelementptr inbounds %struct.mem_attrs* %2, i64 0, i32 4
  %5 = load i32* %align41, align 4, !tbaa !27
  br label %cond.end45

cond.end45:                                       ; preds = %cond.true19, %cond.false32, %cond.true37, %cond.true24
  %cond46 = phi i32 [ %4, %cond.true24 ], [ 8, %cond.true19 ], [ %5, %cond.true37 ], [ 8, %cond.false32 ]
  %6 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 0
  %bf.load = load i32* %6, align 8
  %bf.clear = and i32 %bf.load, 16711680
  %cmp47 = icmp eq i32 %bf.clear, 3342336
  br i1 %cmp47, label %if.end, label %if.then

if.then:                                          ; preds = %cond.end45
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 1634, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.emit_block_move, i64 0, i64 0)) #8
  unreachable

if.end:                                           ; preds = %cond.end45
  %7 = getelementptr inbounds %struct.rtx_def* %y, i64 0, i32 0
  %bf.load48 = load i32* %7, align 8
  %bf.clear50 = and i32 %bf.load48, 16711680
  %cmp51 = icmp eq i32 %bf.clear50, 3342336
  br i1 %cmp51, label %if.end53, label %if.then52

if.then52:                                        ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 1637, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.emit_block_move, i64 0, i64 0)) #8
  unreachable

if.end53:                                         ; preds = %if.end
  %call = tail call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %x, i32 1)
  %call54 = tail call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %y, i32 0)
  %call55 = tail call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %size, i32 0)
  %8 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 0
  %bf.load56 = load i32* %8, align 8
  %bf.clear57 = and i32 %bf.load56, 65535
  %cmp58 = icmp eq i32 %bf.clear57, 66
  br i1 %cmp58, label %if.end60, label %if.then59

if.then59:                                        ; preds = %if.end53
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 1644, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.emit_block_move, i64 0, i64 0)) #8
  unreachable

if.end60:                                         ; preds = %if.end53
  %9 = getelementptr inbounds %struct.rtx_def* %call54, i64 0, i32 0
  %bf.load61 = load i32* %9, align 8
  %bf.clear62 = and i32 %bf.load61, 65535
  %cmp63 = icmp eq i32 %bf.clear62, 66
  br i1 %cmp63, label %if.end65, label %if.then64

if.then64:                                        ; preds = %if.end60
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 1646, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.emit_block_move, i64 0, i64 0)) #8
  unreachable

if.end65:                                         ; preds = %if.end60
  %cmp66 = icmp eq %struct.rtx_def* %call55, null
  br i1 %cmp66, label %if.then67, label %if.end68

if.then67:                                        ; preds = %if.end65
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 1648, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.emit_block_move, i64 0, i64 0)) #8
  unreachable

if.end68:                                         ; preds = %if.end65
  %10 = getelementptr inbounds %struct.rtx_def* %call55, i64 0, i32 0
  %bf.load69 = load i32* %10, align 8
  %bf.clear70 = and i32 %bf.load69, 65535
  %cmp71 = icmp eq i32 %bf.clear70, 54
  br i1 %cmp71, label %land.lhs.true, label %if.end68.if.else_crit_edge

if.end68.if.else_crit_edge:                       ; preds = %if.end68
  %.pre = load i32* getelementptr inbounds ([9 x i32]* @class_narrowest_mode, i64 0, i64 1), align 4, !tbaa !5
  br label %if.else

land.lhs.true:                                    ; preds = %if.end68
  %rtwint = getelementptr inbounds %struct.rtx_def* %call55, i64 0, i32 1, i64 0, i32 0
  %11 = load i64* %rtwint, align 8, !tbaa !22
  %12 = load i32* getelementptr inbounds ([9 x i32]* @class_narrowest_mode, i64 0, i64 1), align 4, !tbaa !5
  %cmp11.i = icmp eq i32 %12, 0
  br i1 %cmp11.i, label %while.end.i, label %for.body.lr.ph.i

for.body.lr.ph.i:                                 ; preds = %land.lhs.true, %if.end24.i
  %l.addr.06.i = phi i64 [ %l.addr.1.i, %if.end24.i ], [ %11, %land.lhs.true ]
  %max_size.05.i = phi i64 [ %conv27.i, %if.end24.i ], [ 17, %land.lhs.true ]
  %n_insns.04.i = phi i64 [ %n_insns.1.i, %if.end24.i ], [ 0, %land.lhs.true ]
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i, %for.body.lr.ph.i
  %tmode.03.i = phi i32 [ %12, %for.body.lr.ph.i ], [ %conv6.i, %for.body.i ]
  %mode.02.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %tmode.0.mode.0.i, %for.body.i ]
  %idxprom.i = sext i32 %tmode.03.i to i64
  %arrayidx.i = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom.i
  %13 = load i8* %arrayidx.i, align 1, !tbaa !5
  %conv.i = zext i8 %13 to i64
  %cmp2.i = icmp ult i64 %conv.i, %max_size.05.i
  %tmode.0.mode.0.i = select i1 %cmp2.i, i32 %tmode.03.i, i32 %mode.02.i
  %arrayidx5.i = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom.i
  %14 = load i8* %arrayidx5.i, align 1, !tbaa !5
  %conv6.i = zext i8 %14 to i32
  %cmp1.i = icmp eq i8 %14, 0
  br i1 %cmp1.i, label %for.end.i, label %for.body.i

for.end.i:                                        ; preds = %for.body.i
  %cmp7.i = icmp eq i32 %tmode.0.mode.0.i, 0
  br i1 %cmp7.i, label %while.end.i, label %if.end10.i

if.end10.i:                                       ; preds = %for.end.i
  %idxprom11.i = sext i32 %tmode.0.mode.0.i to i64
  %15 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 30), align 8, !tbaa !1
  %insn_code.i = getelementptr inbounds %struct.optab* %15, i64 0, i32 1, i64 %idxprom11.i, i32 0
  %16 = load i32* %insn_code.i, align 4, !tbaa !23
  %cmp13.i = icmp eq i32 %16, 1317
  br i1 %cmp13.i, label %if.end24.i, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %if.end10.i
  %call.i313 = tail call i32 @get_mode_alignment(i32 %tmode.0.mode.0.i) #5
  %cmp15.i = icmp ult i32 %call.i313, 129
  br i1 %cmp15.i, label %if.then17.i, label %if.end24.i

if.then17.i:                                      ; preds = %land.lhs.true.i
  %arrayidx19.i = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom11.i
  %17 = load i8* %arrayidx19.i, align 1, !tbaa !5
  %conv20.i = zext i8 %17 to i64
  %div.i = udiv i64 %l.addr.06.i, %conv20.i
  %add.i = add i64 %div.i, %n_insns.04.i
  %rem.i = urem i64 %l.addr.06.i, %conv20.i
  br label %if.end24.i

if.end24.i:                                       ; preds = %if.then17.i, %land.lhs.true.i, %if.end10.i
  %n_insns.1.i = phi i64 [ %add.i, %if.then17.i ], [ %n_insns.04.i, %land.lhs.true.i ], [ %n_insns.04.i, %if.end10.i ]
  %l.addr.1.i = phi i64 [ %rem.i, %if.then17.i ], [ %l.addr.06.i, %land.lhs.true.i ], [ %l.addr.06.i, %if.end10.i ]
  %arrayidx26.i = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom11.i
  %18 = load i8* %arrayidx26.i, align 1, !tbaa !5
  %conv27.i = zext i8 %18 to i64
  %cmp.i = icmp ugt i8 %18, 1
  br i1 %cmp.i, label %for.body.lr.ph.i, label %while.end.i

while.end.i:                                      ; preds = %if.end24.i, %for.end.i, %land.lhs.true
  %l.addr.0.lcssa.i = phi i64 [ %11, %land.lhs.true ], [ %l.addr.1.i, %if.end24.i ], [ %l.addr.06.i, %for.end.i ]
  %n_insns.0.lcssa.i = phi i64 [ 0, %land.lhs.true ], [ %n_insns.1.i, %if.end24.i ], [ %n_insns.04.i, %for.end.i ]
  %tobool.i = icmp eq i64 %l.addr.0.lcssa.i, 0
  br i1 %tobool.i, label %move_by_pieces_ninsns.exit, label %if.then28.i

if.then28.i:                                      ; preds = %while.end.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 1542, i8* getelementptr inbounds ([22 x i8]* @__FUNCTION__.move_by_pieces_ninsns, i64 0, i64 0)) #8
  unreachable

move_by_pieces_ninsns.exit:                       ; preds = %while.end.i
  %19 = load i32* @optimize_size, align 4, !tbaa !21
  %tobool = icmp eq i32 %19, 0
  br i1 %tobool, label %cond.false76, label %cond.end77

cond.false76:                                     ; preds = %move_by_pieces_ninsns.exit
  %20 = load %struct.processor_costs** @ix86_cost, align 8, !tbaa !1
  %move_ratio = getelementptr inbounds %struct.processor_costs* %20, i64 0, i32 10
  %21 = load i32* %move_ratio, align 4, !tbaa !29
  %phitmp = zext i32 %21 to i64
  br label %cond.end77

cond.end77:                                       ; preds = %move_by_pieces_ninsns.exit, %cond.false76
  %cond78 = phi i64 [ %phitmp, %cond.false76 ], [ 3, %move_by_pieces_ninsns.exit ]
  %cmp79 = icmp ult i64 %n_insns.0.lcssa.i, %cond78
  br i1 %cmp79, label %if.then81, label %if.else

if.then81:                                        ; preds = %cond.end77
  %22 = load i64* %rtwint, align 8, !tbaa !22
  tail call void @move_by_pieces(%struct.rtx_def* %call, %struct.rtx_def* %call54, i64 %22, i32 undef)
  br label %return

if.else:                                          ; preds = %if.end68.if.else_crit_edge, %cond.end77
  %23 = phi i32 [ %.pre, %if.end68.if.else_crit_edge ], [ %12, %cond.end77 ]
  %div = lshr i32 %cond46, 3
  %conv85 = zext i32 %div to i64
  %call86 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv85) #5
  store i32 1, i32* @volatile_ok, align 4, !tbaa !21
  %cmp87314 = icmp eq i32 %23, 0
  br i1 %cmp87314, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.else
  %rtwint100 = getelementptr inbounds %struct.rtx_def* %call55, i64 0, i32 1, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %mode.0315 = phi i32 [ %23, %for.body.lr.ph ], [ %conv170, %for.inc ]
  %idxprom = sext i32 %mode.0315 to i64
  %arrayidx89 = getelementptr inbounds [59 x i32]* @movstr_optab, i64 0, i64 %idxprom
  %24 = load i32* %arrayidx89, align 4, !tbaa !5
  %cmp90 = icmp eq i32 %24, 1317
  br i1 %cmp90, label %for.inc, label %land.lhs.true92

land.lhs.true92:                                  ; preds = %for.body
  %bf.load93 = load i32* %10, align 8
  %bf.clear94 = and i32 %bf.load93, 65535
  %cmp95 = icmp eq i32 %bf.clear94, 54
  br i1 %cmp95, label %land.lhs.true97, label %lor.lhs.false

land.lhs.true97:                                  ; preds = %land.lhs.true92
  %25 = load i64* %rtwint100, align 8, !tbaa !22
  %arrayidx102 = getelementptr inbounds [59 x i64]* @mode_mask_array, i64 0, i64 %idxprom
  %26 = load i64* %arrayidx102, align 8, !tbaa !22
  %shr = lshr i64 %26, 1
  %cmp103 = icmp ugt i64 %25, %shr
  br i1 %cmp103, label %lor.lhs.false, label %land.lhs.true112

lor.lhs.false:                                    ; preds = %land.lhs.true97, %land.lhs.true92
  %arrayidx106 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom
  %27 = load i16* %arrayidx106, align 2, !tbaa !19
  %conv107 = zext i16 %27 to i32
  %28 = load i32* @target_flags, align 4, !tbaa !21
  %and = lshr i32 %28, 20
  %29 = and i32 %and, 32
  %30 = add i32 %29, 32
  %cmp110 = icmp ult i32 %conv107, %30
  br i1 %cmp110, label %for.inc, label %land.lhs.true112

land.lhs.true112:                                 ; preds = %land.lhs.true97, %lor.lhs.false
  %idxprom113 = sext i32 %24 to i64
  %operand = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom113, i32 3
  %31 = load %struct.insn_operand_data** %operand, align 8, !tbaa !31
  %predicate = getelementptr inbounds %struct.insn_operand_data* %31, i64 0, i32 0
  %32 = load i32 (%struct.rtx_def*, i32)** %predicate, align 8, !tbaa !32
  %cmp116 = icmp eq i32 (%struct.rtx_def*, i32)* %32, null
  br i1 %cmp116, label %land.lhs.true121, label %lor.lhs.false118

lor.lhs.false118:                                 ; preds = %land.lhs.true112
  %call119 = tail call i32 %32(%struct.rtx_def* %call, i32 51) #5
  %tobool120 = icmp eq i32 %call119, 0
  br i1 %tobool120, label %for.inc, label %land.lhs.true121

land.lhs.true121:                                 ; preds = %lor.lhs.false118, %land.lhs.true112
  %predicate126 = getelementptr inbounds %struct.insn_operand_data* %31, i64 1, i32 0
  %33 = load i32 (%struct.rtx_def*, i32)** %predicate126, align 8, !tbaa !32
  %cmp127 = icmp eq i32 (%struct.rtx_def*, i32)* %33, null
  br i1 %cmp127, label %land.lhs.true132, label %lor.lhs.false129

lor.lhs.false129:                                 ; preds = %land.lhs.true121
  %call130 = tail call i32 %33(%struct.rtx_def* %call54, i32 51) #5
  %tobool131 = icmp eq i32 %call130, 0
  br i1 %tobool131, label %for.inc, label %land.lhs.true132

land.lhs.true132:                                 ; preds = %lor.lhs.false129, %land.lhs.true121
  %predicate137 = getelementptr inbounds %struct.insn_operand_data* %31, i64 3, i32 0
  %34 = load i32 (%struct.rtx_def*, i32)** %predicate137, align 8, !tbaa !32
  %cmp138 = icmp eq i32 (%struct.rtx_def*, i32)* %34, null
  br i1 %cmp138, label %if.then143, label %lor.lhs.false140

lor.lhs.false140:                                 ; preds = %land.lhs.true132
  %call141 = tail call i32 %34(%struct.rtx_def* %call86, i32 0) #5
  %tobool142 = icmp eq i32 %call141, 0
  br i1 %tobool142, label %for.inc, label %if.then143

if.then143:                                       ; preds = %lor.lhs.false140, %land.lhs.true132
  %call144 = tail call %struct.rtx_def* @get_last_insn() #5
  %call.i = tail call %struct.rtx_def* @convert_modes(i32 %mode.0315, i32 0, %struct.rtx_def* %call55, i32 1) #5
  %predicate150 = getelementptr inbounds %struct.insn_operand_data* %31, i64 2, i32 0
  %35 = load i32 (%struct.rtx_def*, i32)** %predicate150, align 8, !tbaa !32
  %cmp151 = icmp eq i32 (%struct.rtx_def*, i32)* %35, null
  br i1 %cmp151, label %if.end158, label %land.lhs.true153

land.lhs.true153:                                 ; preds = %if.then143
  %call154 = tail call i32 %35(%struct.rtx_def* %call.i, i32 %mode.0315) #5
  %tobool155 = icmp eq i32 %call154, 0
  br i1 %tobool155, label %if.then156, label %if.end158

if.then156:                                       ; preds = %land.lhs.true153
  %call157 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %mode.0315, %struct.rtx_def* %call.i) #5
  br label %if.end158

if.end158:                                        ; preds = %land.lhs.true153, %if.then143, %if.then156
  %op2.0 = phi %struct.rtx_def* [ %call.i, %land.lhs.true153 ], [ %call157, %if.then156 ], [ %call.i, %if.then143 ]
  %genfun = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom113, i32 2
  %36 = load %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun, align 8, !tbaa !25
  %call161 = tail call %struct.rtx_def* (%struct.rtx_def*, ...)* %36(%struct.rtx_def* %call, %struct.rtx_def* %call54, %struct.rtx_def* %op2.0, %struct.rtx_def* %call86) #5
  %tobool162 = icmp eq %struct.rtx_def* %call161, null
  br i1 %tobool162, label %if.else165, label %if.then163

if.then163:                                       ; preds = %if.end158
  %call164 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call161) #5
  store i32 0, i32* @volatile_ok, align 4, !tbaa !21
  br label %return

if.else165:                                       ; preds = %if.end158
  tail call void @delete_insns_since(%struct.rtx_def* %call144) #5
  br label %for.inc

for.inc:                                          ; preds = %lor.lhs.false140, %lor.lhs.false129, %lor.lhs.false118, %lor.lhs.false, %for.body, %if.else165
  %arrayidx169 = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom
  %37 = load i8* %arrayidx169, align 1, !tbaa !5
  %conv170 = zext i8 %37 to i32
  %cmp87 = icmp eq i8 %37, 0
  br i1 %cmp87, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc, %if.else
  store i32 0, i32* @volatile_ok, align 4, !tbaa !21
  %38 = load i32* @target_flags, align 4, !tbaa !21
  %and171 = lshr i32 %38, 25
  %39 = and i32 %and171, 1
  %40 = or i32 %39, 4
  %arrayidx175 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx175 to %struct.rtx_def**
  %41 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %call176 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %40, %struct.rtx_def* %41) #5
  %42 = load i32* @target_flags, align 4, !tbaa !21
  %and177 = lshr i32 %42, 25
  %43 = and i32 %and177, 1
  %44 = or i32 %43, 4
  %arrayidx181 = getelementptr inbounds %struct.rtx_def* %call54, i64 0, i32 1, i64 0
  %rtx182 = bitcast %union.rtunion_def* %arrayidx181 to %struct.rtx_def**
  %45 = load %struct.rtx_def** %rtx182, align 8, !tbaa !1
  %call183 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %44, %struct.rtx_def* %45) #5
  %46 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !1
  %type = bitcast %union.tree_node* %46 to %struct.tree_type*
  %mode184 = getelementptr inbounds %struct.tree_type* %type, i64 0, i32 6
  %bf.load185 = load i32* %mode184, align 4
  %bf.lshr186 = lshr i32 %bf.load185, 9
  %bf.clear187 = and i32 %bf.lshr186, 127
  %call188 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.clear187, %struct.rtx_def* %call55) #5
  %47 = load %union.tree_node** @emit_block_move.fn, align 8, !tbaa !1
  %cmp189 = icmp eq %union.tree_node* %47, null
  br i1 %cmp189, label %if.then191, label %if.end209

if.then191:                                       ; preds = %for.end
  %call192 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([7 x i8]* @.str1, i64 0, i64 0)) #5
  store %union.tree_node* %call192, %union.tree_node** @emit_block_move.fn, align 8, !tbaa !1
  %48 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 27), align 8, !tbaa !1
  %call193 = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %48) #5
  %call194 = tail call %union.tree_node* @build_function_type(%union.tree_node* %call193, %union.tree_node* null) #5
  %49 = load %union.tree_node** @emit_block_move.fn, align 8, !tbaa !1
  %call195 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %49, %union.tree_node* %call194) #5
  store %union.tree_node* %call195, %union.tree_node** @emit_block_move.fn, align 8, !tbaa !1
  tail call void @ggc_add_tree_root(%union.tree_node** @emit_block_move.fn, i32 1) #5
  %50 = load %union.tree_node** @emit_block_move.fn, align 8, !tbaa !1
  %external_flag = getelementptr inbounds %union.tree_node* %50, i64 0, i32 0, i32 5
  %51 = bitcast i48* %external_flag to i64*
  %bf.load196 = load i64* %51, align 8
  %bf.set = or i64 %bf.load196, 256
  store i64 %bf.set, i64* %51, align 8
  %52 = load %union.tree_node** @emit_block_move.fn, align 8, !tbaa !1
  %public_flag = getelementptr inbounds %union.tree_node* %52, i64 0, i32 0, i32 0, i32 2
  %bf.load198 = load i32* %public_flag, align 8
  %bf.set200 = or i32 %bf.load198, 524288
  store i32 %bf.set200, i32* %public_flag, align 8
  %53 = load %union.tree_node** @emit_block_move.fn, align 8, !tbaa !1
  %artificial_flag = getelementptr inbounds %union.tree_node* %53, i64 0, i32 0, i32 5
  %54 = bitcast i48* %artificial_flag to i64*
  %bf.load202 = load i64* %54, align 8
  %bf.set204 = or i64 %bf.load202, 4194304
  store i64 %bf.set204, i64* %54, align 8
  %55 = load %union.tree_node** @emit_block_move.fn, align 8, !tbaa !1
  %nothrow_flag = getelementptr inbounds %union.tree_node* %55, i64 0, i32 0, i32 0, i32 2
  %bf.load206 = load i32* %nothrow_flag, align 8
  %bf.set208 = or i32 %bf.load206, 131072
  store i32 %bf.set208, i32* %nothrow_flag, align 8
  %56 = load %union.tree_node** @emit_block_move.fn, align 8, !tbaa !1
  tail call void @make_decl_rtl(%union.tree_node* %56, i8* null) #5
  %57 = load %union.tree_node** @emit_block_move.fn, align 8, !tbaa !1
  tail call void @assemble_external(%union.tree_node* %57) #5
  br label %if.end209

if.end209:                                        ; preds = %if.then191, %for.end
  %58 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 27), align 8, !tbaa !1
  %call210 = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %58) #5
  %call211 = tail call %union.tree_node* @make_tree(%union.tree_node* %call210, %struct.rtx_def* %call176) #5
  %call212 = tail call %union.tree_node* @build_tree_list(%union.tree_node* null, %union.tree_node* %call211) #5
  %59 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 27), align 8, !tbaa !1
  %call213 = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %59) #5
  %call214 = tail call %union.tree_node* @make_tree(%union.tree_node* %call213, %struct.rtx_def* %call183) #5
  %call215 = tail call %union.tree_node* @build_tree_list(%union.tree_node* null, %union.tree_node* %call214) #5
  %chain = getelementptr inbounds %union.tree_node* %call212, i64 0, i32 0, i32 0, i32 0
  store %union.tree_node* %call215, %union.tree_node** %chain, align 8, !tbaa !34
  %60 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !1
  %call217 = tail call %union.tree_node* @make_tree(%union.tree_node* %60, %struct.rtx_def* %call188) #5
  %call218 = tail call %union.tree_node* @build_tree_list(%union.tree_node* null, %union.tree_node* %call217) #5
  %61 = load %union.tree_node** %chain, align 8, !tbaa !34
  %chain222 = getelementptr inbounds %union.tree_node* %61, i64 0, i32 0, i32 0, i32 0
  store %union.tree_node* %call218, %union.tree_node** %chain222, align 8, !tbaa !34
  %62 = load %union.tree_node** %chain, align 8, !tbaa !34
  %chain226 = getelementptr inbounds %union.tree_node* %62, i64 0, i32 0, i32 0, i32 0
  %63 = load %union.tree_node** %chain226, align 8, !tbaa !34
  %chain228 = getelementptr inbounds %union.tree_node* %63, i64 0, i32 0, i32 0, i32 0
  store %union.tree_node* null, %union.tree_node** %chain228, align 8, !tbaa !34
  %64 = load %union.tree_node** @emit_block_move.fn, align 8, !tbaa !1
  %type230 = getelementptr inbounds %union.tree_node* %64, i64 0, i32 0, i32 0, i32 1
  %65 = load %union.tree_node** %type230, align 8, !tbaa !36
  %call231 = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %65) #5
  %66 = load %union.tree_node** @emit_block_move.fn, align 8, !tbaa !1
  %call232 = tail call %union.tree_node* @build1(i32 121, %union.tree_node* %call231, %union.tree_node* %66) #5
  %67 = load %union.tree_node** @emit_block_move.fn, align 8, !tbaa !1
  %type234 = getelementptr inbounds %union.tree_node* %67, i64 0, i32 0, i32 0, i32 1
  %68 = load %union.tree_node** %type234, align 8, !tbaa !36
  %type236 = getelementptr inbounds %union.tree_node* %68, i64 0, i32 0, i32 0, i32 1
  %69 = load %union.tree_node** %type236, align 8, !tbaa !36
  %call237 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 53, %union.tree_node* %69, %union.tree_node* %call232, %union.tree_node* %call212, %union.tree_node* null) #5
  %side_effects_flag = getelementptr inbounds %union.tree_node* %call237, i64 0, i32 0, i32 0, i32 2
  %bf.load239 = load i32* %side_effects_flag, align 8
  %bf.set241 = or i32 %bf.load239, 256
  store i32 %bf.set241, i32* %side_effects_flag, align 8
  %call242 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %call237, %struct.rtx_def* null, i32 0, i32 0)
  %70 = getelementptr inbounds %struct.rtx_def* %call176, i64 0, i32 0
  %bf.load243 = load i32* %70, align 8
  %bf.clear245 = and i32 %bf.load243, 67108864
  %tobool246 = icmp eq i32 %bf.clear245, 0
  br i1 %tobool246, label %return, label %if.then247

if.then247:                                       ; preds = %if.end209
  %call248 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call176) #5
  %call249 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call248) #5
  br label %return

return:                                           ; preds = %if.then81, %if.then247, %if.end209, %if.then163
  %retval.0 = phi %struct.rtx_def* [ null, %if.then163 ], [ null, %if.then81 ], [ %call242, %if.then247 ], [ %call242, %if.end209 ]
  ret %struct.rtx_def* %retval.0
}

declare %struct.rtx_def* @get_last_insn() #1

declare %struct.rtx_def* @copy_to_mode_reg(i32, %struct.rtx_def*) #1

declare void @delete_insns_since(%struct.rtx_def*) #1

declare %union.tree_node* @get_identifier(i8*) #1

declare %union.tree_node* @build_pointer_type(%union.tree_node*) #1

declare %union.tree_node* @build_function_type(%union.tree_node*, %union.tree_node*) #1

declare %union.tree_node* @build_decl(i32, %union.tree_node*, %union.tree_node*) #1

declare void @ggc_add_tree_root(%union.tree_node**, i32) #1

declare void @make_decl_rtl(%union.tree_node*, i8*) #1

declare void @assemble_external(%union.tree_node*) #1

declare %union.tree_node* @build_tree_list(%union.tree_node*, %union.tree_node*) #1

declare %union.tree_node* @make_tree(%union.tree_node*, %struct.rtx_def*) #1

declare %union.tree_node* @build1(i32, %union.tree_node*, %union.tree_node*) #1

declare %union.tree_node* @build(i32, %union.tree_node*, ...) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @expand_expr(%union.tree_node* %exp, %struct.rtx_def* %target, i32 %tmode, i32 %modifier) #0 {
entry:
  %unsignedp = alloca i32, align 4
  %placeholder_expr = alloca %union.tree_node*, align 8
  %index = alloca %union.tree_node*, align 8
  %mode1 = alloca i32, align 4
  %bitsize1917 = alloca i64, align 8
  %bitpos = alloca i64, align 8
  %offset = alloca %union.tree_node*, align 8
  %volatilep = alloca i32, align 4
  %constant_term = alloca %struct.rtx_def*, align 8
  %type1 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 1
  %0 = load %union.tree_node** %type1, align 8, !tbaa !36
  %unsigned_flag = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %unsigned_flag, align 8
  %bf.lshr = lshr i32 %bf.load, 13
  %bf.clear = and i32 %bf.lshr, 1
  store i32 %bf.clear, i32* %unsignedp, align 4, !tbaa !21
  %code4 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 2
  %bf.load5 = load i32* %code4, align 8
  %bf.clear6 = and i32 %bf.load5, 255
  %cmp = icmp eq i32 %bf.clear6, 0
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %bf.load13 = load i32* %unsigned_flag, align 8
  %bf.clear14 = and i32 %bf.load13, 255
  %cmp15 = icmp eq i32 %bf.clear14, 0
  br i1 %cmp15, label %if.then, label %if.end18

if.then:                                          ; preds = %lor.lhs.false, %entry
  %idxprom = sext i32 %tmode to i64
  %arrayidx = getelementptr inbounds [3 x [59 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0, i64 %idxprom
  %1 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %cmp16 = icmp eq %struct.rtx_def* %1, null
  %2 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %.8310 = select i1 %cmp16, %struct.rtx_def* %2, %struct.rtx_def* %1
  ret %struct.rtx_def* %.8310

if.end18:                                         ; preds = %lor.lhs.false
  %type19 = bitcast %union.tree_node* %0 to %struct.tree_type*
  %mode20 = getelementptr inbounds %struct.tree_type* %type19, i64 0, i32 6
  %bf.load21 = load i32* %mode20, align 4
  %bf.lshr22 = lshr i32 %bf.load21, 9
  %bf.clear23 = and i32 %bf.lshr22, 127
  %cmp.i8447 = icmp eq %struct.rtx_def* %target, null
  br i1 %cmp.i8447, label %get_subtarget.exit, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %if.end18
  %3 = getelementptr inbounds %struct.rtx_def* %target, i64 0, i32 0
  %bf.load.i8448 = load i32* %3, align 8
  %4 = and i32 %bf.load.i8448, 67174399
  %5 = icmp eq i32 %4, 61
  br i1 %5, label %lor.lhs.false5.i, label %get_subtarget.exit

lor.lhs.false5.i:                                 ; preds = %lor.lhs.false.i
  %arrayidx.i8449 = getelementptr inbounds %struct.rtx_def* %target, i64 0, i32 1, i64 0
  %rtuint.i = bitcast %union.rtunion_def* %arrayidx.i8449 to i32*
  %6 = load i32* %rtuint.i, align 4, !tbaa !21
  %cmp6.i = icmp ult i32 %6, 53
  br i1 %cmp6.i, label %get_subtarget.exit, label %lor.lhs.false7.i

lor.lhs.false7.i:                                 ; preds = %lor.lhs.false5.i
  %call.i8450 = call i32 @preserve_subexpressions_p() #5
  %tobool8.i = icmp ne i32 %call.i8450, 0
  %..i = select i1 %tobool8.i, %struct.rtx_def* null, %struct.rtx_def* %target
  br label %get_subtarget.exit

get_subtarget.exit:                               ; preds = %if.end18, %lor.lhs.false.i, %lor.lhs.false5.i, %lor.lhs.false7.i
  %call8451 = phi %struct.rtx_def* [ %..i, %lor.lhs.false7.i ], [ null, %lor.lhs.false5.i ], [ null, %lor.lhs.false.i ], [ null, %if.end18 ]
  %7 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %cmp24 = icmp eq %struct.rtx_def* %7, %target
  br i1 %cmp24, label %if.then41, label %lor.rhs

lor.rhs:                                          ; preds = %get_subtarget.exit
  switch i32 %bf.clear6, label %if.end158 [
    i32 122, label %lor.end
    i32 117, label %lor.end
    i32 116, label %lor.end
    i32 115, label %lor.end
    i32 114, label %lor.end
    i32 51, label %lor.end
  ]

lor.end:                                          ; preds = %lor.rhs, %lor.rhs, %lor.rhs, %lor.rhs, %lor.rhs, %lor.rhs
  %bf.load38 = load i32* %unsigned_flag, align 8
  %bf.clear39 = and i32 %bf.load38, 255
  %cmp40 = icmp eq i32 %bf.clear39, 5
  %lor.ext = zext i1 %cmp40 to i32
  br i1 %cmp40, label %if.then41, label %if.end158

if.then41:                                        ; preds = %get_subtarget.exit, %lor.end
  %lor.ext8454 = phi i32 [ %lor.ext, %lor.end ], [ 1, %get_subtarget.exit ]
  %bf.load43 = load i32* %code4, align 8
  %bf.clear45 = and i32 %bf.load43, 256
  %tobool46 = icmp eq i32 %bf.clear45, 0
  br i1 %tobool46, label %return, label %if.end48

if.end48:                                         ; preds = %if.then41
  %bf.clear52 = and i32 %bf.load43, 2048
  %tobool53 = icmp eq i32 %bf.clear52, 0
  br i1 %tobool53, label %if.end73, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end48
  %bf.clear57 = and i32 %bf.load43, 255
  %cmp58 = icmp ne i32 %bf.clear57, 30
  %cmp60 = icmp ne i32 %bf.clear23, 0
  %or.cond6547 = and i1 %cmp58, %cmp60
  %cmp62 = icmp ne i32 %bf.clear23, 51
  %or.cond6548 = and i1 %or.cond6547, %cmp62
  %cmp64 = icmp ne i32 %modifier, 2
  %or.cond6549 = and i1 %or.cond6548, %cmp64
  br i1 %or.cond6549, label %if.then65, label %if.end73

if.then65:                                        ; preds = %land.lhs.true
  %call66 = call %struct.rtx_def* @expand_expr(%union.tree_node* %exp, %struct.rtx_def* null, i32 0, i32 %modifier)
  %8 = getelementptr inbounds %struct.rtx_def* %call66, i64 0, i32 0
  %bf.load67 = load i32* %8, align 8
  %bf.clear68 = and i32 %bf.load67, 65535
  %cmp69 = icmp eq i32 %bf.clear68, 66
  br i1 %cmp69, label %if.then70, label %if.end72

if.then70:                                        ; preds = %if.then65
  %call71 = call %struct.rtx_def* @copy_to_reg(%struct.rtx_def* %call66) #5
  br label %if.end72

if.end72:                                         ; preds = %if.then70, %if.then65
  %9 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  br label %return

if.end73:                                         ; preds = %if.end48, %land.lhs.true
  %idxprom748281 = zext i32 %bf.clear6 to i64
  %arrayidx75 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom748281
  %10 = load i8* %arrayidx75, align 1, !tbaa !5
  %cmp76 = icmp eq i8 %10, 49
  %cmp79 = icmp eq i32 %bf.clear6, 39
  %or.cond6550 = or i1 %cmp76, %cmp79
  %cmp82 = icmp eq i32 %bf.clear6, 41
  %or.cond6551 = or i1 %or.cond6550, %cmp82
  %cmp85 = icmp eq i32 %bf.clear6, 42
  %or.cond6552 = or i1 %or.cond6551, %cmp85
  br i1 %or.cond6552, label %if.then87, label %if.else

if.then87:                                        ; preds = %if.end73
  %operands = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx89 = bitcast i32* %operands to %union.tree_node**
  %11 = load %union.tree_node** %arrayidx89, align 8, !tbaa !1
  %call90 = call %struct.rtx_def* @expand_expr(%union.tree_node* %11, %struct.rtx_def* %7, i32 0, i32 %modifier)
  br label %return

if.else:                                          ; preds = %if.end73
  %cmp94 = icmp eq i8 %10, 50
  br i1 %cmp94, label %if.then108, label %lor.lhs.false96

lor.lhs.false96:                                  ; preds = %if.else
  %cmp100 = icmp eq i8 %10, 60
  %cmp103 = icmp eq i32 %bf.clear6, 43
  %or.cond6553 = or i1 %cmp100, %cmp103
  %cmp106 = icmp eq i32 %bf.clear6, 44
  %or.cond6554 = or i1 %or.cond6553, %cmp106
  br i1 %or.cond6554, label %if.then108, label %if.else117

if.then108:                                       ; preds = %lor.lhs.false96, %if.else
  %operands110 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx111 = bitcast i32* %operands110 to %union.tree_node**
  %12 = load %union.tree_node** %arrayidx111, align 8, !tbaa !1
  %call112 = call %struct.rtx_def* @expand_expr(%union.tree_node* %12, %struct.rtx_def* %7, i32 0, i32 %modifier)
  %arrayidx115 = getelementptr inbounds i32* %operands110, i64 2
  %13 = bitcast i32* %arrayidx115 to %union.tree_node**
  %14 = load %union.tree_node** %13, align 8, !tbaa !1
  %15 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call116 = call %struct.rtx_def* @expand_expr(%union.tree_node* %14, %struct.rtx_def* %15, i32 0, i32 %modifier)
  %16 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  br label %return

if.else117:                                       ; preds = %lor.lhs.false96
  %bf.clear6.off8282 = add i32 %bf.clear6, -91
  %17 = icmp ult i32 %bf.clear6.off8282, 2
  br i1 %17, label %land.lhs.true123, label %if.else138

land.lhs.true123:                                 ; preds = %if.else117
  %operands125 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx126 = getelementptr inbounds i32* %operands125, i64 2
  %18 = bitcast i32* %arrayidx126 to %union.tree_node**
  %19 = load %union.tree_node** %18, align 8, !tbaa !1
  %side_effects_flag128 = getelementptr inbounds %union.tree_node* %19, i64 0, i32 0, i32 0, i32 2
  %bf.load129 = load i32* %side_effects_flag128, align 8
  %bf.clear131 = and i32 %bf.load129, 256
  %tobool132 = icmp eq i32 %bf.clear131, 0
  br i1 %tobool132, label %if.then133, label %if.else138

if.then133:                                       ; preds = %land.lhs.true123
  %arrayidx136 = bitcast i32* %operands125 to %union.tree_node**
  %20 = load %union.tree_node** %arrayidx136, align 8, !tbaa !1
  %call137 = call %struct.rtx_def* @expand_expr(%union.tree_node* %20, %struct.rtx_def* %7, i32 0, i32 %modifier)
  br label %return

if.else138:                                       ; preds = %land.lhs.true123, %if.else117
  %cmp139 = icmp eq i32 %bf.clear6, 40
  br i1 %cmp139, label %if.then141, label %if.end185

if.then141:                                       ; preds = %if.else138
  %operands143 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx144 = bitcast i32* %operands143 to %union.tree_node**
  %21 = load %union.tree_node** %arrayidx144, align 8, !tbaa !1
  %call145 = call %struct.rtx_def* @expand_expr(%union.tree_node* %21, %struct.rtx_def* %7, i32 0, i32 %modifier)
  %arrayidx148 = getelementptr inbounds i32* %operands143, i64 2
  %22 = bitcast i32* %arrayidx148 to %union.tree_node**
  %23 = load %union.tree_node** %22, align 8, !tbaa !1
  %24 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call149 = call %struct.rtx_def* @expand_expr(%union.tree_node* %23, %struct.rtx_def* %24, i32 0, i32 %modifier)
  %arrayidx152 = getelementptr inbounds i32* %operands143, i64 4
  %25 = bitcast i32* %arrayidx152 to %union.tree_node**
  %26 = load %union.tree_node** %25, align 8, !tbaa !1
  %27 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call153 = call %struct.rtx_def* @expand_expr(%union.tree_node* %26, %struct.rtx_def* %27, i32 0, i32 %modifier)
  %28 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  br label %return

if.end158:                                        ; preds = %lor.rhs, %lor.end
  %lor.ext8453 = phi i32 [ %lor.ext, %lor.end ], [ 0, %lor.rhs ]
  %29 = load i32* @cse_not_expected, align 4, !tbaa !21
  %tobool159 = icmp eq i32 %29, 0
  %cmp161 = icmp ne i32 %bf.clear23, 51
  %or.cond6556 = and i1 %tobool159, %cmp161
  %tobool164 = icmp ne %struct.rtx_def* %target, null
  %or.cond6557 = and i1 %or.cond6556, %tobool164
  br i1 %or.cond6557, label %land.lhs.true165, label %if.end185

land.lhs.true165:                                 ; preds = %if.end158
  %30 = getelementptr inbounds %struct.rtx_def* %target, i64 0, i32 0
  %bf.load166 = load i32* %30, align 8
  %bf.clear167 = and i32 %bf.load166, 65535
  %cmp168 = icmp eq i32 %bf.clear167, 61
  br i1 %cmp168, label %lor.lhs.false170, label %land.lhs.true174

lor.lhs.false170:                                 ; preds = %land.lhs.true165
  %arrayidx171 = getelementptr inbounds %struct.rtx_def* %target, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx171 to i32*
  %31 = load i32* %rtuint, align 4, !tbaa !21
  %cmp172 = icmp ult i32 %31, 53
  br i1 %cmp172, label %land.lhs.true174, label %if.end185

land.lhs.true174:                                 ; preds = %land.lhs.true165, %lor.lhs.false170
  %cmp175 = icmp eq i32 %bf.clear6, 46
  br i1 %cmp175, label %land.lhs.true177, label %if.end185

land.lhs.true177:                                 ; preds = %land.lhs.true174
  %idxprom1788280 = zext i32 %bf.clear23 to i64
  %arrayidx179 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom1788280
  %32 = load i8* %arrayidx179, align 1, !tbaa !5
  %conv180 = zext i8 %32 to i32
  %33 = load i32* @target_flags, align 4, !tbaa !21
  %and = lshr i32 %33, 23
  %34 = and i32 %and, 4
  %35 = add i32 %34, 4
  %cmp182 = icmp ugt i32 %conv180, %35
  %target.call8451 = select i1 %cmp182, %struct.rtx_def* %target, %struct.rtx_def* %call8451
  br label %if.else1295

if.end185:                                        ; preds = %land.lhs.true174, %if.else138, %if.end158, %lor.lhs.false170
  %36 = phi i1 [ false, %lor.lhs.false170 ], [ false, %if.end158 ], [ true, %if.else138 ], [ false, %land.lhs.true174 ]
  %lor.ext84538462 = phi i32 [ %lor.ext8453, %lor.lhs.false170 ], [ %lor.ext8453, %if.end158 ], [ %lor.ext8454, %if.else138 ], [ %lor.ext8453, %land.lhs.true174 ]
  %target.addr.1 = phi %struct.rtx_def* [ %target, %lor.lhs.false170 ], [ %target, %if.end158 ], [ null, %if.else138 ], [ %call8451, %land.lhs.true174 ]
  switch i32 %bf.clear6, label %sw.default [
    i32 31, label %sw.bb
    i32 35, label %sw.bb233
    i32 34, label %sw.bb246
    i32 30, label %sw.bb306
    i32 36, label %sw.bb306
    i32 25, label %sw.bb853
    i32 32, label %sw.bb870
    i32 26, label %sw.bb873
    i32 27, label %sw.bb875
    i32 29, label %sw.bb875
    i32 144, label %sw.bb929
    i32 118, label %sw.bb946
    i32 119, label %sw.bb1127
    i32 57, label %sw.bb1140
    i32 58, label %sw.bb1148
    i32 138, label %sw.bb1159
    i32 140, label %sw.bb1178
    i32 142, label %sw.bb1184
    i32 143, label %sw.bb1199
    i32 141, label %sw.bb1212
    i32 52, label %sw.bb1217
    i32 120, label %sw.bb1257
    i32 46, label %sw.bb1284
    i32 41, label %sw.bb1424
    i32 43, label %sw.bb1487
    i32 39, label %sw.bb1785
    i32 40, label %sw.bb1785
    i32 44, label %sw.bb1785
    i32 45, label %sw.bb2538
    i32 42, label %sw.bb2612
    i32 110, label %sw.bb2613
    i32 55, label %sw.bb2788
    i32 56, label %sw.bb2813
    i32 53, label %sw.bb2822
    i32 116, label %sw.bb2880
    i32 115, label %sw.bb2880
    i32 114, label %sw.bb2880
    i32 122, label %sw.bb2880
    i32 117, label %sw.bb3129
    i32 59, label %plus_expr
    i32 60, label %sw.bb3941
    i32 61, label %sw.bb4031
    i32 62, label %if.end185.sw.bb4406_crit_edge
    i32 64, label %if.end185.sw.bb4406_crit_edge8583
    i32 63, label %if.end185.sw.bb4406_crit_edge8584
    i32 65, label %if.end185.sw.bb4406_crit_edge8585
    i32 71, label %if.end185.sw.bb4406_crit_edge8586
    i32 70, label %sw.bb4423
    i32 66, label %if.end185.sw.bb4454_crit_edge
    i32 68, label %if.end185.sw.bb4454_crit_edge8605
    i32 67, label %if.end185.sw.bb4454_crit_edge8606
    i32 69, label %if.end185.sw.bb4454_crit_edge8607
    i32 75, label %sw.bb4471
    i32 74, label %sw.bb4471
    i32 73, label %sw.bb4471
    i32 72, label %sw.bb4472
    i32 76, label %sw.bb4482
    i32 77, label %sw.bb4520
    i32 80, label %sw.bb4542
    i32 79, label %sw.bb4572
    i32 78, label %sw.bb4572
    i32 90, label %sw.bb4700
    i32 81, label %sw.bb4710
    i32 93, label %sw.bb4720
    i32 88, label %sw.bb4720
    i32 94, label %sw.bb4721
    i32 86, label %sw.bb4721
    i32 95, label %sw.bb4722
    i32 87, label %sw.bb4722
    i32 82, label %if.end185.sw.bb4723_crit_edge
    i32 83, label %if.end185.sw.bb4723_crit_edge8622
    i32 84, label %if.end185.sw.bb4723_crit_edge8623
    i32 85, label %if.end185.sw.bb4723_crit_edge8624
    i32 97, label %sw.bb4739
    i32 98, label %sw.bb4739
    i32 99, label %sw.bb4739
    i32 100, label %sw.bb4739
    i32 101, label %sw.bb4739
    i32 102, label %sw.bb4739
    i32 103, label %sw.bb4739
    i32 104, label %sw.bb4739
    i32 105, label %sw.bb4739
    i32 106, label %sw.bb4739
    i32 107, label %sw.bb4739
    i32 108, label %sw.bb4739
    i32 109, label %sw.bb4739
    i32 91, label %sw.bb4829
    i32 92, label %sw.bb4829
    i32 96, label %sw.bb4872
    i32 47, label %sw.bb4882
    i32 51, label %sw.bb4896
    i32 50, label %sw.bb5808
    i32 49, label %sw.bb5930
    i32 48, label %sw.bb5942
    i32 139, label %sw.bb6055
    i32 130, label %sw.bb6066
    i32 129, label %sw.bb6066
    i32 132, label %sw.bb6068
    i32 131, label %sw.bb6068
    i32 121, label %sw.bb6073
    i32 123, label %sw.bb6356
    i32 125, label %sw.bb6357
    i32 127, label %sw.bb6401
    i32 128, label %sw.bb6407
    i32 126, label %sw.bb6413
    i32 134, label %sw.bb6465
    i32 135, label %sw.bb6473
    i32 136, label %sw.bb6499
    i32 133, label %sw.bb6514
    i32 146, label %sw.bb6519
    i32 124, label %sw.bb6521
  ]

if.end185.sw.bb4723_crit_edge8624:                ; preds = %if.end185
  %operands4725.phi.trans.insert8632 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx4726.phi.trans.insert8633 = getelementptr inbounds i32* %operands4725.phi.trans.insert8632, i64 2
  br label %sw.bb4723

if.end185.sw.bb4723_crit_edge8623:                ; preds = %if.end185
  %operands4725.phi.trans.insert8626 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx4726.phi.trans.insert8627 = getelementptr inbounds i32* %operands4725.phi.trans.insert8626, i64 2
  br label %sw.bb4723

if.end185.sw.bb4723_crit_edge8622:                ; preds = %if.end185
  %operands4725.phi.trans.insert = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx4726.phi.trans.insert = getelementptr inbounds i32* %operands4725.phi.trans.insert, i64 2
  br label %sw.bb4723

if.end185.sw.bb4723_crit_edge:                    ; preds = %if.end185
  %operands4725.phi.trans.insert8629 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx4726.phi.trans.insert8630 = getelementptr inbounds i32* %operands4725.phi.trans.insert8629, i64 2
  br label %sw.bb4723

if.end185.sw.bb4454_crit_edge8607:                ; preds = %if.end185
  %operands4456.phi.trans.insert8615 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx4457.phi.trans.insert8616 = getelementptr inbounds i32* %operands4456.phi.trans.insert8615, i64 2
  br label %sw.bb4454

if.end185.sw.bb4454_crit_edge8606:                ; preds = %if.end185
  %operands4456.phi.trans.insert8612 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx4457.phi.trans.insert8613 = getelementptr inbounds i32* %operands4456.phi.trans.insert8612, i64 2
  br label %sw.bb4454

if.end185.sw.bb4454_crit_edge8605:                ; preds = %if.end185
  %operands4456.phi.trans.insert = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx4457.phi.trans.insert = getelementptr inbounds i32* %operands4456.phi.trans.insert, i64 2
  br label %sw.bb4454

if.end185.sw.bb4454_crit_edge:                    ; preds = %if.end185
  %operands4456.phi.trans.insert8609 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx4457.phi.trans.insert8610 = getelementptr inbounds i32* %operands4456.phi.trans.insert8609, i64 2
  br label %sw.bb4454

if.end185.sw.bb4406_crit_edge8586:                ; preds = %if.end185
  %operands4408.phi.trans.insert = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx4409.phi.trans.insert = getelementptr inbounds i32* %operands4408.phi.trans.insert, i64 2
  br label %sw.bb4406

if.end185.sw.bb4406_crit_edge8585:                ; preds = %if.end185
  %operands4408.phi.trans.insert8588 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx4409.phi.trans.insert8589 = getelementptr inbounds i32* %operands4408.phi.trans.insert8588, i64 2
  br label %sw.bb4406

if.end185.sw.bb4406_crit_edge8584:                ; preds = %if.end185
  %operands4408.phi.trans.insert8597 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx4409.phi.trans.insert8598 = getelementptr inbounds i32* %operands4408.phi.trans.insert8597, i64 2
  br label %sw.bb4406

if.end185.sw.bb4406_crit_edge8583:                ; preds = %if.end185
  %operands4408.phi.trans.insert8594 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx4409.phi.trans.insert8595 = getelementptr inbounds i32* %operands4408.phi.trans.insert8594, i64 2
  br label %sw.bb4406

if.end185.sw.bb4406_crit_edge:                    ; preds = %if.end185
  %operands4408.phi.trans.insert8591 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx4409.phi.trans.insert8592 = getelementptr inbounds i32* %operands4408.phi.trans.insert8591, i64 2
  br label %sw.bb4406

sw.bb:                                            ; preds = %if.end185
  %call186 = call %union.tree_node* @decl_function_context(%union.tree_node* %exp) #5
  %37 = load %union.tree_node** @current_function_decl, align 8, !tbaa !1
  %cmp187 = icmp eq %union.tree_node* %call186, %37
  br i1 %cmp187, label %if.else201, label %land.lhs.true189

land.lhs.true189:                                 ; preds = %sw.bb
  %38 = load %union.tree_node** @inline_function_decl, align 8, !tbaa !1
  %cmp190 = icmp ne %union.tree_node* %call186, %38
  %cmp193 = icmp ne %union.tree_node* %call186, null
  %or.cond6558 = and i1 %cmp190, %cmp193
  br i1 %or.cond6558, label %if.then195, label %if.else201

if.then195:                                       ; preds = %land.lhs.true189
  %call196 = call %struct.function* @find_function_data(%union.tree_node* %call186) #5
  %call197 = call %struct.rtx_def* @label_rtx(%union.tree_node* %exp) #5
  %expr = getelementptr inbounds %struct.function* %call196, i64 0, i32 2
  %39 = load %struct.expr_status** %expr, align 8, !tbaa !6
  %x_forced_labels = getelementptr inbounds %struct.expr_status* %39, i64 0, i32 5
  %40 = load %struct.rtx_def** %x_forced_labels, align 8, !tbaa !18
  %call198 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 0, %struct.rtx_def* %call197, %struct.rtx_def* %40) #5
  %41 = load %struct.expr_status** %expr, align 8, !tbaa !6
  %x_forced_labels200 = getelementptr inbounds %struct.expr_status* %41, i64 0, i32 5
  store %struct.rtx_def* %call198, %struct.rtx_def** %x_forced_labels200, align 8, !tbaa !18
  br label %if.end212

if.else201:                                       ; preds = %sw.bb, %land.lhs.true189
  %cmp202 = icmp eq i32 %modifier, 3
  br i1 %cmp202, label %if.then204, label %if.end212

if.then204:                                       ; preds = %if.else201
  %call205 = call %struct.rtx_def* @label_rtx(%union.tree_node* %exp) #5
  %42 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr206 = getelementptr inbounds %struct.function* %42, i64 0, i32 2
  %43 = load %struct.expr_status** %expr206, align 8, !tbaa !6
  %x_forced_labels207 = getelementptr inbounds %struct.expr_status* %43, i64 0, i32 5
  %44 = load %struct.rtx_def** %x_forced_labels207, align 8, !tbaa !18
  %call208 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 0, %struct.rtx_def* %call205, %struct.rtx_def* %44) #5
  %45 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr209 = getelementptr inbounds %struct.function* %45, i64 0, i32 2
  %46 = load %struct.expr_status** %expr209, align 8, !tbaa !6
  %x_forced_labels210 = getelementptr inbounds %struct.expr_status* %46, i64 0, i32 5
  store %struct.rtx_def* %call208, %struct.rtx_def** %x_forced_labels210, align 8, !tbaa !18
  br label %if.end212

if.end212:                                        ; preds = %if.else201, %if.then204, %if.then195
  %47 = load i32* @target_flags, align 4, !tbaa !21
  %and213 = lshr i32 %47, 25
  %48 = and i32 %and213, 1
  %49 = or i32 %48, 4
  %call216 = call %struct.rtx_def* @label_rtx(%union.tree_node* %exp) #5
  %call217 = call %struct.rtx_def* @gen_rtx_fmt_u00(i32 67, i32 %49, %struct.rtx_def* %call216) #5
  %call218 = call %struct.rtx_def* @gen_rtx_MEM(i32 2, %struct.rtx_def* %call217) #5
  %50 = load %union.tree_node** @current_function_decl, align 8, !tbaa !1
  %cmp219 = icmp eq %union.tree_node* %call186, %50
  br i1 %cmp219, label %return, label %land.lhs.true221

land.lhs.true221:                                 ; preds = %if.end212
  %51 = load %union.tree_node** @inline_function_decl, align 8, !tbaa !1
  %cmp222 = icmp ne %union.tree_node* %call186, %51
  %cmp225 = icmp ne %union.tree_node* %call186, null
  %or.cond6559 = and i1 %cmp222, %cmp225
  br i1 %or.cond6559, label %if.then227, label %return

if.then227:                                       ; preds = %land.lhs.true221
  %arrayidx229 = getelementptr inbounds %struct.rtx_def* %call218, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx229 to %struct.rtx_def**
  %52 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %53 = getelementptr inbounds %struct.rtx_def* %52, i64 0, i32 0
  %bf.load230 = load i32* %53, align 8
  %bf.set = or i32 %bf.load230, 134217728
  store i32 %bf.set, i32* %53, align 8
  br label %return

sw.bb233:                                         ; preds = %if.end185
  %rtl = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 17
  %54 = load %struct.rtx_def** %rtl, align 8, !tbaa !37
  %tobool234 = icmp eq %struct.rtx_def* %54, null
  br i1 %tobool234, label %cond.end, label %sw.bb246

cond.end:                                         ; preds = %sw.bb233
  call void @make_decl_rtl(%union.tree_node* %exp, i8* null) #5
  %55 = load %struct.rtx_def** %rtl, align 8, !tbaa !37
  %cmp240 = icmp eq %struct.rtx_def* %55, null
  br i1 %cmp240, label %if.then242, label %sw.bb246

if.then242:                                       ; preds = %cond.end
  call void (%union.tree_node*, i8*, ...)* @error_with_decl(%union.tree_node* %exp, i8* getelementptr inbounds ([39 x i8]* @.str4, i64 0, i64 0)) #5
  %idxprom2438279 = zext i32 %bf.clear23 to i64
  %arrayidx244 = getelementptr inbounds [3 x [59 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0, i64 %idxprom2438279
  %56 = load %struct.rtx_def** %arrayidx244, align 8, !tbaa !1
  br label %return

sw.bb246:                                         ; preds = %sw.bb233, %cond.end, %if.end185
  %size = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 4
  %57 = load %union.tree_node** %size, align 8, !tbaa !39
  %cmp248 = icmp eq %union.tree_node* %57, null
  br i1 %cmp248, label %land.lhs.true250, label %sw.bb306

land.lhs.true250:                                 ; preds = %sw.bb246
  %58 = load %union.tree_node** %type1, align 8, !tbaa !36
  %size254 = getelementptr inbounds %union.tree_node* %58, i64 0, i32 0, i32 2
  %59 = bitcast i32* %size254 to %union.tree_node**
  %60 = load %union.tree_node** %59, align 8, !tbaa !40
  %cmp255 = icmp eq %union.tree_node* %60, null
  br i1 %cmp255, label %sw.bb306, label %land.lhs.true257

land.lhs.true257:                                 ; preds = %land.lhs.true250
  %bf.load259 = load i32* %code4, align 8
  %bf.clear261 = and i32 %bf.load259, 262144
  %tobool262 = icmp eq i32 %bf.clear261, 0
  br i1 %tobool262, label %lor.lhs.false263, label %if.then269

lor.lhs.false263:                                 ; preds = %land.lhs.true257
  %external_flag = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 5
  %61 = bitcast i48* %external_flag to i64*
  %bf.load265 = load i64* %61, align 8
  %bf.cast = and i64 %bf.load265, 256
  %tobool268 = icmp eq i64 %bf.cast, 0
  br i1 %tobool268, label %sw.bb306, label %if.then269

if.then269:                                       ; preds = %lor.lhs.false263, %land.lhs.true257
  %rtl271 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 17
  %62 = load %struct.rtx_def** %rtl271, align 8, !tbaa !37
  call void @layout_decl(%union.tree_node* %exp, i32 0) #5
  %cmp289 = icmp eq %struct.rtx_def* %62, null
  br i1 %cmp289, label %sw.bb306, label %if.then291

if.then291:                                       ; preds = %if.then269
  %mode293 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 5
  %63 = bitcast i48* %mode293 to i64*
  %bf.load294 = load i64* %63, align 8
  %bf.load294.tr = trunc i64 %bf.load294 to i32
  %64 = getelementptr inbounds %struct.rtx_def* %62, i64 0, i32 0
  %bf.load297 = load i32* %64, align 8
  %bf.value = shl i32 %bf.load294.tr, 16
  %bf.shl = and i32 %bf.value, 16711680
  %bf.clear298 = and i32 %bf.load297, -16711681
  %bf.set299 = or i32 %bf.shl, %bf.clear298
  store i32 %bf.set299, i32* %64, align 8
  store %struct.rtx_def* null, %struct.rtx_def** %rtl271, align 8, !tbaa !37
  call void @set_mem_attributes(%struct.rtx_def* %62, %union.tree_node* %exp, i32 1) #5
  store %struct.rtx_def* %62, %struct.rtx_def** %rtl271, align 8, !tbaa !37
  br label %sw.bb306

sw.bb306:                                         ; preds = %if.then269, %lor.lhs.false263, %land.lhs.true250, %sw.bb246, %if.then291, %if.end185, %if.end185
  %rtl308 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 17
  %65 = load %struct.rtx_def** %rtl308, align 8, !tbaa !37
  %tobool309 = icmp eq %struct.rtx_def* %65, null
  br i1 %tobool309, label %cond.end316, label %if.end321

cond.end316:                                      ; preds = %sw.bb306
  call void @make_decl_rtl(%union.tree_node* %exp, i8* null) #5
  %66 = load %struct.rtx_def** %rtl308, align 8, !tbaa !37
  %cmp318 = icmp eq %struct.rtx_def* %66, null
  br i1 %cmp318, label %if.then320, label %if.end321

if.then320:                                       ; preds = %cond.end316
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 6239, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.expand_expr, i64 0, i64 0)) #8
  unreachable

if.end321:                                        ; preds = %sw.bb306, %cond.end316
  %bf.load323 = load i32* %code4, align 8
  %bf.clear325 = and i32 %bf.load323, 65536
  %tobool326 = icmp eq i32 %bf.clear325, 0
  br i1 %tobool326, label %if.then327, label %if.end333

if.then327:                                       ; preds = %if.end321
  call void @assemble_external(%union.tree_node* %exp) #5
  %bf.load330 = load i32* %code4, align 8
  %bf.set332 = or i32 %bf.load330, 65536
  store i32 %bf.set332, i32* %code4, align 8
  br label %if.end333

if.end333:                                        ; preds = %if.end321, %if.then327
  %call334 = call %union.tree_node* @decl_function_context(%union.tree_node* %exp) #5
  %cmp335 = icmp eq %union.tree_node* %call334, null
  %67 = load %union.tree_node** @current_function_decl, align 8
  %cmp338 = icmp eq %union.tree_node* %call334, %67
  %or.cond = or i1 %cmp335, %cmp338
  %68 = load %union.tree_node** @inline_function_decl, align 8
  %cmp341 = icmp eq %union.tree_node* %call334, %68
  %or.cond8286 = or i1 %or.cond, %cmp341
  %.pre = load %struct.rtx_def** %rtl308, align 8, !tbaa !37
  br i1 %or.cond8286, label %if.else581, label %land.lhs.true343

land.lhs.true343:                                 ; preds = %if.end333
  %tobool346 = icmp eq %struct.rtx_def* %.pre, null
  br i1 %tobool346, label %cond.false350, label %cond.end353

cond.false350:                                    ; preds = %land.lhs.true343
  call void @make_decl_rtl(%union.tree_node* %exp, i8* null) #5
  %69 = load %struct.rtx_def** %rtl308, align 8, !tbaa !37
  br label %cond.end353

cond.end353:                                      ; preds = %land.lhs.true343, %cond.false350
  %70 = phi %struct.rtx_def* [ %69, %cond.false350 ], [ %.pre, %land.lhs.true343 ]
  %71 = getelementptr inbounds %struct.rtx_def* %70, i64 0, i32 0
  %bf.load355 = load i32* %71, align 8
  %bf.clear356 = and i32 %bf.load355, 65535
  %cmp357 = icmp eq i32 %bf.clear356, 66
  br i1 %cmp357, label %land.lhs.true359, label %if.then511

land.lhs.true359:                                 ; preds = %cond.end353
  %tobool362 = icmp eq %struct.rtx_def* %70, null
  br i1 %tobool362, label %cond.false366, label %cond.end369

cond.false366:                                    ; preds = %land.lhs.true359
  call void @make_decl_rtl(%union.tree_node* %exp, i8* null) #5
  %72 = load %struct.rtx_def** %rtl308, align 8, !tbaa !37
  br label %cond.end369

cond.end369:                                      ; preds = %land.lhs.true359, %cond.false366
  %73 = phi %struct.rtx_def* [ %72, %cond.false366 ], [ %70, %land.lhs.true359 ]
  %arrayidx372 = getelementptr inbounds %struct.rtx_def* %73, i64 0, i32 1, i64 0
  %rtx373 = bitcast %union.rtunion_def* %arrayidx372 to %struct.rtx_def**
  %74 = load %struct.rtx_def** %rtx373, align 8, !tbaa !1
  %75 = getelementptr inbounds %struct.rtx_def* %74, i64 0, i32 0
  %bf.load374 = load i32* %75, align 8
  %bf.clear375 = and i32 %bf.load374, 65535
  %cmp376 = icmp eq i32 %bf.clear375, 67
  br i1 %cmp376, label %if.else581, label %lor.lhs.false378

lor.lhs.false378:                                 ; preds = %cond.end369
  %tobool381 = icmp eq %struct.rtx_def* %73, null
  br i1 %tobool381, label %cond.false385, label %cond.end388

cond.false385:                                    ; preds = %lor.lhs.false378
  call void @make_decl_rtl(%union.tree_node* %exp, i8* null) #5
  %76 = load %struct.rtx_def** %rtl308, align 8, !tbaa !37
  %arrayidx391.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %76, i64 0, i32 1, i64 0
  %rtx392.phi.trans.insert = bitcast %union.rtunion_def* %arrayidx391.phi.trans.insert to %struct.rtx_def**
  %.pre8538 = load %struct.rtx_def** %rtx392.phi.trans.insert, align 8, !tbaa !1
  %.phi.trans.insert8539 = getelementptr inbounds %struct.rtx_def* %.pre8538, i64 0, i32 0
  %bf.load393.pre = load i32* %.phi.trans.insert8539, align 8
  br label %cond.end388

cond.end388:                                      ; preds = %lor.lhs.false378, %cond.false385
  %bf.load393 = phi i32 [ %bf.load393.pre, %cond.false385 ], [ %bf.load374, %lor.lhs.false378 ]
  %77 = phi %struct.rtx_def* [ %76, %cond.false385 ], [ %73, %lor.lhs.false378 ]
  %bf.clear394 = and i32 %bf.load393, 65535
  %cmp395 = icmp eq i32 %bf.clear394, 68
  br i1 %cmp395, label %if.else581, label %lor.lhs.false397

lor.lhs.false397:                                 ; preds = %cond.end388
  %tobool400 = icmp eq %struct.rtx_def* %77, null
  br i1 %tobool400, label %cond.false404, label %cond.end407

cond.false404:                                    ; preds = %lor.lhs.false397
  call void @make_decl_rtl(%union.tree_node* %exp, i8* null) #5
  %78 = load %struct.rtx_def** %rtl308, align 8, !tbaa !37
  %arrayidx410.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %78, i64 0, i32 1, i64 0
  %rtx411.phi.trans.insert = bitcast %union.rtunion_def* %arrayidx410.phi.trans.insert to %struct.rtx_def**
  %.pre8541 = load %struct.rtx_def** %rtx411.phi.trans.insert, align 8, !tbaa !1
  %.phi.trans.insert8542 = getelementptr inbounds %struct.rtx_def* %.pre8541, i64 0, i32 0
  %bf.load412.pre = load i32* %.phi.trans.insert8542, align 8
  br label %cond.end407

cond.end407:                                      ; preds = %lor.lhs.false397, %cond.false404
  %bf.load412 = phi i32 [ %bf.load412.pre, %cond.false404 ], [ %bf.load393, %lor.lhs.false397 ]
  %79 = phi %struct.rtx_def* [ %78, %cond.false404 ], [ %77, %lor.lhs.false397 ]
  %bf.clear413 = and i32 %bf.load412, 65535
  %cmp414 = icmp eq i32 %bf.clear413, 54
  br i1 %cmp414, label %if.else581, label %lor.lhs.false416

lor.lhs.false416:                                 ; preds = %cond.end407
  %tobool419 = icmp eq %struct.rtx_def* %79, null
  br i1 %tobool419, label %cond.false423, label %cond.end426

cond.false423:                                    ; preds = %lor.lhs.false416
  call void @make_decl_rtl(%union.tree_node* %exp, i8* null) #5
  %80 = load %struct.rtx_def** %rtl308, align 8, !tbaa !37
  %arrayidx429.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %80, i64 0, i32 1, i64 0
  %rtx430.phi.trans.insert = bitcast %union.rtunion_def* %arrayidx429.phi.trans.insert to %struct.rtx_def**
  %.pre8544 = load %struct.rtx_def** %rtx430.phi.trans.insert, align 8, !tbaa !1
  %.phi.trans.insert8545 = getelementptr inbounds %struct.rtx_def* %.pre8544, i64 0, i32 0
  %bf.load431.pre = load i32* %.phi.trans.insert8545, align 8
  br label %cond.end426

cond.end426:                                      ; preds = %lor.lhs.false416, %cond.false423
  %bf.load431 = phi i32 [ %bf.load431.pre, %cond.false423 ], [ %bf.load412, %lor.lhs.false416 ]
  %81 = phi %struct.rtx_def* [ %80, %cond.false423 ], [ %79, %lor.lhs.false416 ]
  %bf.clear432 = and i32 %bf.load431, 65535
  %cmp433 = icmp eq i32 %bf.clear432, 55
  br i1 %cmp433, label %if.else581, label %lor.lhs.false435

lor.lhs.false435:                                 ; preds = %cond.end426
  %tobool438 = icmp eq %struct.rtx_def* %81, null
  br i1 %tobool438, label %cond.false442, label %cond.end445

cond.false442:                                    ; preds = %lor.lhs.false435
  call void @make_decl_rtl(%union.tree_node* %exp, i8* null) #5
  %82 = load %struct.rtx_def** %rtl308, align 8, !tbaa !37
  %arrayidx448.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %82, i64 0, i32 1, i64 0
  %rtx449.phi.trans.insert = bitcast %union.rtunion_def* %arrayidx448.phi.trans.insert to %struct.rtx_def**
  %.pre8547 = load %struct.rtx_def** %rtx449.phi.trans.insert, align 8, !tbaa !1
  %.phi.trans.insert8548 = getelementptr inbounds %struct.rtx_def* %.pre8547, i64 0, i32 0
  %bf.load450.pre = load i32* %.phi.trans.insert8548, align 8
  br label %cond.end445

cond.end445:                                      ; preds = %lor.lhs.false435, %cond.false442
  %bf.load450 = phi i32 [ %bf.load450.pre, %cond.false442 ], [ %bf.load431, %lor.lhs.false435 ]
  %83 = phi %struct.rtx_def* [ %82, %cond.false442 ], [ %81, %lor.lhs.false435 ]
  %bf.clear451 = and i32 %bf.load450, 65535
  %cmp452 = icmp eq i32 %bf.clear451, 58
  br i1 %cmp452, label %if.else581, label %lor.lhs.false454

lor.lhs.false454:                                 ; preds = %cond.end445
  %tobool457 = icmp eq %struct.rtx_def* %83, null
  br i1 %tobool457, label %cond.false461, label %cond.end464

cond.false461:                                    ; preds = %lor.lhs.false454
  call void @make_decl_rtl(%union.tree_node* %exp, i8* null) #5
  %84 = load %struct.rtx_def** %rtl308, align 8, !tbaa !37
  %arrayidx467.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %84, i64 0, i32 1, i64 0
  %rtx468.phi.trans.insert = bitcast %union.rtunion_def* %arrayidx467.phi.trans.insert to %struct.rtx_def**
  %.pre8550 = load %struct.rtx_def** %rtx468.phi.trans.insert, align 8, !tbaa !1
  %.phi.trans.insert8551 = getelementptr inbounds %struct.rtx_def* %.pre8550, i64 0, i32 0
  %bf.load469.pre = load i32* %.phi.trans.insert8551, align 8
  br label %cond.end464

cond.end464:                                      ; preds = %lor.lhs.false454, %cond.false461
  %bf.load469 = phi i32 [ %bf.load469.pre, %cond.false461 ], [ %bf.load450, %lor.lhs.false454 ]
  %85 = phi %struct.rtx_def* [ %84, %cond.false461 ], [ %83, %lor.lhs.false454 ]
  %bf.clear470 = and i32 %bf.load469, 65535
  %cmp471 = icmp eq i32 %bf.clear470, 134
  br i1 %cmp471, label %if.else581, label %lor.lhs.false473

lor.lhs.false473:                                 ; preds = %cond.end464
  %tobool476 = icmp eq %struct.rtx_def* %85, null
  br i1 %tobool476, label %cond.false480, label %cond.end483

cond.false480:                                    ; preds = %lor.lhs.false473
  call void @make_decl_rtl(%union.tree_node* %exp, i8* null) #5
  %86 = load %struct.rtx_def** %rtl308, align 8, !tbaa !37
  %arrayidx486.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %86, i64 0, i32 1, i64 0
  %rtx487.phi.trans.insert = bitcast %union.rtunion_def* %arrayidx486.phi.trans.insert to %struct.rtx_def**
  %.pre8553 = load %struct.rtx_def** %rtx487.phi.trans.insert, align 8, !tbaa !1
  %.phi.trans.insert8554 = getelementptr inbounds %struct.rtx_def* %.pre8553, i64 0, i32 0
  %bf.load488.pre = load i32* %.phi.trans.insert8554, align 8
  br label %cond.end483

cond.end483:                                      ; preds = %lor.lhs.false473, %cond.false480
  %bf.load488 = phi i32 [ %bf.load488.pre, %cond.false480 ], [ %bf.load469, %lor.lhs.false473 ]
  %87 = phi %struct.rtx_def* [ %86, %cond.false480 ], [ %85, %lor.lhs.false473 ]
  %bf.clear489 = and i32 %bf.load488, 65535
  %cmp490 = icmp eq i32 %bf.clear489, 56
  br i1 %cmp490, label %if.else581, label %lor.lhs.false492

lor.lhs.false492:                                 ; preds = %cond.end483
  %tobool495 = icmp eq %struct.rtx_def* %87, null
  br i1 %tobool495, label %cond.false499, label %cond.end502

cond.false499:                                    ; preds = %lor.lhs.false492
  call void @make_decl_rtl(%union.tree_node* %exp, i8* null) #5
  %88 = load %struct.rtx_def** %rtl308, align 8, !tbaa !37
  %arrayidx505.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %88, i64 0, i32 1, i64 0
  %rtx506.phi.trans.insert = bitcast %union.rtunion_def* %arrayidx505.phi.trans.insert to %struct.rtx_def**
  %.pre8556 = load %struct.rtx_def** %rtx506.phi.trans.insert, align 8, !tbaa !1
  %.phi.trans.insert8557 = getelementptr inbounds %struct.rtx_def* %.pre8556, i64 0, i32 0
  %bf.load507.pre = load i32* %.phi.trans.insert8557, align 8
  br label %cond.end502

cond.end502:                                      ; preds = %lor.lhs.false492, %cond.false499
  %bf.load507 = phi i32 [ %bf.load507.pre, %cond.false499 ], [ %bf.load488, %lor.lhs.false492 ]
  %cond503 = phi %struct.rtx_def* [ %88, %cond.false499 ], [ %87, %lor.lhs.false492 ]
  %bf.clear508 = and i32 %bf.load507, 65535
  %cmp509 = icmp eq i32 %bf.clear508, 140
  br i1 %cmp509, label %if.else581, label %if.then511

if.then511:                                       ; preds = %cond.end502, %cond.end353
  %nonlocal_flag = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 5
  %89 = bitcast i48* %nonlocal_flag to i64*
  %bf.load513 = load i64* %89, align 8
  %bf.set515 = or i64 %bf.load513, 512
  store i64 %bf.set515, i64* %89, align 8
  %90 = load %union.tree_node** @current_function_decl, align 8, !tbaa !1
  %regdecl_flag = getelementptr inbounds %union.tree_node* %90, i64 0, i32 0, i32 5
  %91 = bitcast i48* %regdecl_flag to i64*
  %bf.load517 = load i64* %91, align 8
  %bf.cast520 = and i64 %bf.load517, 1024
  %tobool521 = icmp eq i64 %bf.cast520, 0
  br i1 %tobool521, label %if.end523, label %if.then522

if.then522:                                       ; preds = %if.then511
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 6272, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.expand_expr, i64 0, i64 0)) #8
  unreachable

if.end523:                                        ; preds = %if.then511
  %call524 = call i32 @mark_addressable(%union.tree_node* %exp) #5
  %92 = load %struct.rtx_def** %rtl308, align 8, !tbaa !37
  %tobool527 = icmp eq %struct.rtx_def* %92, null
  br i1 %tobool527, label %cond.false531, label %cond.end534

cond.false531:                                    ; preds = %if.end523
  call void @make_decl_rtl(%union.tree_node* %exp, i8* null) #5
  %93 = load %struct.rtx_def** %rtl308, align 8, !tbaa !37
  br label %cond.end534

cond.end534:                                      ; preds = %if.end523, %cond.false531
  %94 = phi %struct.rtx_def* [ %93, %cond.false531 ], [ %92, %if.end523 ]
  %95 = getelementptr inbounds %struct.rtx_def* %94, i64 0, i32 0
  %bf.load536 = load i32* %95, align 8
  %bf.clear537 = and i32 %bf.load536, 65535
  %cmp538 = icmp eq i32 %bf.clear537, 66
  br i1 %cmp538, label %if.end541, label %if.then540

if.then540:                                       ; preds = %cond.end534
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 6275, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.expand_expr, i64 0, i64 0)) #8
  unreachable

if.end541:                                        ; preds = %cond.end534
  %tobool544 = icmp eq %struct.rtx_def* %94, null
  br i1 %tobool544, label %cond.false548, label %cond.end551

cond.false548:                                    ; preds = %if.end541
  call void @make_decl_rtl(%union.tree_node* %exp, i8* null) #5
  %96 = load %struct.rtx_def** %rtl308, align 8, !tbaa !37
  br label %cond.end551

cond.end551:                                      ; preds = %if.end541, %cond.false548
  %cond552 = phi %struct.rtx_def* [ %96, %cond.false548 ], [ %94, %if.end541 ]
  %arrayidx554 = getelementptr inbounds %struct.rtx_def* %cond552, i64 0, i32 1, i64 0
  %rtx555 = bitcast %union.rtunion_def* %arrayidx554 to %struct.rtx_def**
  %97 = load %struct.rtx_def** %rtx555, align 8, !tbaa !1
  %98 = getelementptr inbounds %struct.rtx_def* %97, i64 0, i32 0
  %bf.load556 = load i32* %98, align 8
  %bf.clear557 = and i32 %bf.load556, 65535
  %cmp558 = icmp eq i32 %bf.clear557, 66
  br i1 %cmp558, label %if.then560, label %if.else566

if.then560:                                       ; preds = %cond.end551
  %arrayidx562 = getelementptr inbounds %struct.rtx_def* %97, i64 0, i32 1, i64 0
  %rtx563 = bitcast %union.rtunion_def* %arrayidx562 to %struct.rtx_def**
  %99 = load %struct.rtx_def** %rtx563, align 8, !tbaa !1
  %call564 = call %struct.rtx_def* @fix_lexical_addr(%struct.rtx_def* %99, %union.tree_node* %exp) #5
  %call565 = call %struct.rtx_def* @replace_equiv_address(%struct.rtx_def* %97, %struct.rtx_def* %call564) #5
  br label %if.end568

if.else566:                                       ; preds = %cond.end551
  %call567 = call %struct.rtx_def* @fix_lexical_addr(%struct.rtx_def* %97, %union.tree_node* %exp) #5
  br label %if.end568

if.end568:                                        ; preds = %if.else566, %if.then560
  %addr.0 = phi %struct.rtx_def* [ %call565, %if.then560 ], [ %call567, %if.else566 ]
  %100 = load %struct.rtx_def** %rtl308, align 8, !tbaa !37
  %tobool571 = icmp eq %struct.rtx_def* %100, null
  br i1 %tobool571, label %cond.false575, label %cond.end578

cond.false575:                                    ; preds = %if.end568
  call void @make_decl_rtl(%union.tree_node* %exp, i8* null) #5
  %101 = load %struct.rtx_def** %rtl308, align 8, !tbaa !37
  br label %cond.end578

cond.end578:                                      ; preds = %if.end568, %cond.false575
  %cond579 = phi %struct.rtx_def* [ %101, %cond.false575 ], [ %100, %if.end568 ]
  %call580 = call %struct.rtx_def* @replace_equiv_address(%struct.rtx_def* %cond579, %struct.rtx_def* %addr.0) #5
  br label %if.end727

if.else581:                                       ; preds = %if.end333, %cond.end502, %cond.end483, %cond.end464, %cond.end445, %cond.end426, %cond.end407, %cond.end388, %cond.end369
  %102 = phi %struct.rtx_def* [ %cond503, %cond.end502 ], [ %87, %cond.end483 ], [ %85, %cond.end464 ], [ %83, %cond.end445 ], [ %81, %cond.end426 ], [ %79, %cond.end407 ], [ %77, %cond.end388 ], [ %73, %cond.end369 ], [ %.pre, %if.end333 ]
  %tobool584 = icmp eq %struct.rtx_def* %102, null
  br i1 %tobool584, label %cond.false588, label %cond.end591

cond.false588:                                    ; preds = %if.else581
  call void @make_decl_rtl(%union.tree_node* %exp, i8* null) #5
  %103 = load %struct.rtx_def** %rtl308, align 8, !tbaa !37
  br label %cond.end591

cond.end591:                                      ; preds = %if.else581, %cond.false588
  %104 = phi %struct.rtx_def* [ %103, %cond.false588 ], [ %102, %if.else581 ]
  %105 = getelementptr inbounds %struct.rtx_def* %104, i64 0, i32 0
  %bf.load593 = load i32* %105, align 8
  %bf.clear594 = and i32 %bf.load593, 65535
  %cmp595 = icmp eq i32 %bf.clear594, 66
  br i1 %cmp595, label %land.lhs.true597, label %if.else629

land.lhs.true597:                                 ; preds = %cond.end591
  %tobool600 = icmp eq %struct.rtx_def* %104, null
  br i1 %tobool600, label %cond.false604, label %cond.end607

cond.false604:                                    ; preds = %land.lhs.true597
  call void @make_decl_rtl(%union.tree_node* %exp, i8* null) #5
  %106 = load %struct.rtx_def** %rtl308, align 8, !tbaa !37
  br label %cond.end607

cond.end607:                                      ; preds = %land.lhs.true597, %cond.false604
  %107 = phi %struct.rtx_def* [ %106, %cond.false604 ], [ %104, %land.lhs.true597 ]
  %arrayidx610 = getelementptr inbounds %struct.rtx_def* %107, i64 0, i32 1, i64 0
  %rtx611 = bitcast %union.rtunion_def* %arrayidx610 to %struct.rtx_def**
  %108 = load %struct.rtx_def** %rtx611, align 8, !tbaa !1
  %109 = getelementptr inbounds %struct.rtx_def* %108, i64 0, i32 0
  %bf.load612 = load i32* %109, align 8
  %bf.clear613 = and i32 %bf.load612, 65535
  %cmp614 = icmp eq i32 %bf.clear613, 61
  br i1 %cmp614, label %if.then616, label %if.else629

if.then616:                                       ; preds = %cond.end607
  %tobool619 = icmp eq %struct.rtx_def* %107, null
  br i1 %tobool619, label %cond.false623, label %cond.end626

cond.false623:                                    ; preds = %if.then616
  call void @make_decl_rtl(%union.tree_node* %exp, i8* null) #5
  %110 = load %struct.rtx_def** %rtl308, align 8, !tbaa !37
  br label %cond.end626

cond.end626:                                      ; preds = %if.then616, %cond.false623
  %cond627 = phi %struct.rtx_def* [ %110, %cond.false623 ], [ %107, %if.then616 ]
  %call628 = call %struct.rtx_def* @validize_mem(%struct.rtx_def* %cond627) #5
  br label %if.end727

if.else629:                                       ; preds = %cond.end607, %cond.end591
  %111 = phi %struct.rtx_def* [ %107, %cond.end607 ], [ %104, %cond.end591 ]
  %tobool632 = icmp eq %struct.rtx_def* %111, null
  br i1 %tobool632, label %cond.false636, label %cond.end639

cond.false636:                                    ; preds = %if.else629
  call void @make_decl_rtl(%union.tree_node* %exp, i8* null) #5
  %112 = load %struct.rtx_def** %rtl308, align 8, !tbaa !37
  br label %cond.end639

cond.end639:                                      ; preds = %if.else629, %cond.false636
  %113 = phi %struct.rtx_def* [ %112, %cond.false636 ], [ %111, %if.else629 ]
  %114 = getelementptr inbounds %struct.rtx_def* %113, i64 0, i32 0
  %bf.load641 = load i32* %114, align 8
  %bf.clear642 = and i32 %bf.load641, 65535
  %cmp643 = icmp ne i32 %bf.clear642, 66
  %modifier.off8311 = add i32 %modifier, -1
  %switch = icmp ult i32 %modifier.off8311, 3
  %or.cond8312 = or i1 %cmp643, %switch
  br i1 %or.cond8312, label %if.end751, label %land.lhs.true654

land.lhs.true654:                                 ; preds = %cond.end639
  %mode656 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 5
  %115 = bitcast i48* %mode656 to i64*
  %bf.load657 = load i64* %115, align 8
  %bf.load657.tr = trunc i64 %bf.load657 to i32
  %bf.cast659 = and i32 %bf.load657.tr, 255
  %tobool662 = icmp eq %struct.rtx_def* %113, null
  br i1 %tobool662, label %cond.false666, label %cond.end669

cond.false666:                                    ; preds = %land.lhs.true654
  call void @make_decl_rtl(%union.tree_node* %exp, i8* null) #5
  %116 = load %struct.rtx_def** %rtl308, align 8, !tbaa !37
  br label %cond.end669

cond.end669:                                      ; preds = %land.lhs.true654, %cond.false666
  %cond670 = phi %struct.rtx_def* [ %116, %cond.false666 ], [ %113, %land.lhs.true654 ]
  %arrayidx672 = getelementptr inbounds %struct.rtx_def* %cond670, i64 0, i32 1, i64 0
  %rtx673 = bitcast %union.rtunion_def* %arrayidx672 to %struct.rtx_def**
  %117 = load %struct.rtx_def** %rtx673, align 8, !tbaa !1
  %call674 = call i32 @memory_address_p(i32 %bf.cast659, %struct.rtx_def* %117) #5
  %tobool675 = icmp eq i32 %call674, 0
  br i1 %tobool675, label %cond.end669.if.then697_crit_edge, label %lor.lhs.false676

cond.end669.if.then697_crit_edge:                 ; preds = %cond.end669
  %.pre8533 = load %struct.rtx_def** %rtl308, align 8, !tbaa !37
  br label %if.then697

lor.lhs.false676:                                 ; preds = %cond.end669
  %118 = load i32* @flag_force_addr, align 4, !tbaa !21
  %tobool677 = icmp eq i32 %118, 0
  br i1 %tobool677, label %if.end751, label %land.lhs.true678

land.lhs.true678:                                 ; preds = %lor.lhs.false676
  %119 = load %struct.rtx_def** %rtl308, align 8, !tbaa !37
  %tobool681 = icmp eq %struct.rtx_def* %119, null
  br i1 %tobool681, label %cond.false685, label %cond.end688

cond.false685:                                    ; preds = %land.lhs.true678
  call void @make_decl_rtl(%union.tree_node* %exp, i8* null) #5
  %120 = load %struct.rtx_def** %rtl308, align 8, !tbaa !37
  br label %cond.end688

cond.end688:                                      ; preds = %land.lhs.true678, %cond.false685
  %cond689 = phi %struct.rtx_def* [ %120, %cond.false685 ], [ %119, %land.lhs.true678 ]
  %arrayidx691 = getelementptr inbounds %struct.rtx_def* %cond689, i64 0, i32 1, i64 0
  %rtx692 = bitcast %union.rtunion_def* %arrayidx691 to %struct.rtx_def**
  %121 = load %struct.rtx_def** %rtx692, align 8, !tbaa !1
  %122 = getelementptr inbounds %struct.rtx_def* %121, i64 0, i32 0
  %bf.load693 = load i32* %122, align 8
  %bf.clear694 = and i32 %bf.load693, 65535
  %cmp695 = icmp eq i32 %bf.clear694, 61
  br i1 %cmp695, label %if.end751, label %if.then697

if.then697:                                       ; preds = %cond.end669.if.then697_crit_edge, %cond.end688
  %123 = phi %struct.rtx_def* [ %.pre8533, %cond.end669.if.then697_crit_edge ], [ %cond689, %cond.end688 ]
  %tobool700 = icmp eq %struct.rtx_def* %123, null
  br i1 %tobool700, label %cond.end707, label %cond.end718

cond.end707:                                      ; preds = %if.then697
  call void @make_decl_rtl(%union.tree_node* %exp, i8* null) #5
  %124 = load %struct.rtx_def** %rtl308, align 8, !tbaa !37
  %tobool711 = icmp eq %struct.rtx_def* %124, null
  br i1 %tobool711, label %cond.false715, label %cond.end718

cond.false715:                                    ; preds = %cond.end707
  call void @make_decl_rtl(%union.tree_node* %exp, i8* null) #5
  %125 = load %struct.rtx_def** %rtl308, align 8, !tbaa !37
  br label %cond.end718

cond.end718:                                      ; preds = %if.then697, %cond.end707, %cond.false715
  %cond7088470 = phi %struct.rtx_def* [ null, %cond.false715 ], [ %124, %cond.end707 ], [ %123, %if.then697 ]
  %cond719 = phi %struct.rtx_def* [ %125, %cond.false715 ], [ %124, %cond.end707 ], [ %123, %if.then697 ]
  %arrayidx721 = getelementptr inbounds %struct.rtx_def* %cond719, i64 0, i32 1, i64 0
  %rtx722 = bitcast %union.rtunion_def* %arrayidx721 to %struct.rtx_def**
  %126 = load %struct.rtx_def** %rtx722, align 8, !tbaa !1
  %call723 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %126) #5
  %call724 = call %struct.rtx_def* @replace_equiv_address(%struct.rtx_def* %cond7088470, %struct.rtx_def* %call723) #5
  br label %if.end727

if.end727:                                        ; preds = %cond.end626, %cond.end718, %cond.end578
  %temp.0 = phi %struct.rtx_def* [ %call628, %cond.end626 ], [ %call724, %cond.end718 ], [ %call580, %cond.end578 ]
  %cmp728 = icmp eq %struct.rtx_def* %temp.0, null
  br i1 %cmp728, label %if.end751, label %if.then730

if.then730:                                       ; preds = %if.end727
  %127 = getelementptr inbounds %struct.rtx_def* %temp.0, i64 0, i32 0
  %bf.load731 = load i32* %127, align 8
  %bf.clear732 = and i32 %bf.load731, 65535
  %cmp733 = icmp eq i32 %bf.clear732, 66
  br i1 %cmp733, label %land.lhs.true735, label %return

land.lhs.true735:                                 ; preds = %if.then730
  %arrayidx737 = getelementptr inbounds %struct.rtx_def* %temp.0, i64 0, i32 1, i64 0
  %rtx738 = bitcast %union.rtunion_def* %arrayidx737 to %struct.rtx_def**
  %128 = load %struct.rtx_def** %rtx738, align 8, !tbaa !1
  %129 = getelementptr inbounds %struct.rtx_def* %128, i64 0, i32 0
  %bf.load739 = load i32* %129, align 8
  %bf.clear740 = and i32 %bf.load739, 65535
  %cmp741 = icmp eq i32 %bf.clear740, 61
  br i1 %cmp741, label %if.then743, label %return

if.then743:                                       ; preds = %land.lhs.true735
  %u1 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 6
  %130 = bitcast %union.anon* %u1 to i32*
  %bf.load748 = load i32* %130, align 4
  %bf.clear749 = and i32 %bf.load748, 16777215
  call void @mark_reg_pointer(%struct.rtx_def* %128, i32 %bf.clear749) #5
  br label %return

if.end751:                                        ; preds = %cond.end639, %lor.lhs.false676, %cond.end688, %if.end727
  %131 = load %struct.rtx_def** %rtl308, align 8, !tbaa !37
  %tobool754 = icmp eq %struct.rtx_def* %131, null
  br i1 %tobool754, label %cond.false758, label %cond.end761

cond.false758:                                    ; preds = %if.end751
  call void @make_decl_rtl(%union.tree_node* %exp, i8* null) #5
  %132 = load %struct.rtx_def** %rtl308, align 8, !tbaa !37
  br label %cond.end761

cond.end761:                                      ; preds = %if.end751, %cond.false758
  %133 = phi %struct.rtx_def* [ %132, %cond.false758 ], [ %131, %if.end751 ]
  %134 = getelementptr inbounds %struct.rtx_def* %133, i64 0, i32 0
  %bf.load763 = load i32* %134, align 8
  %bf.clear764 = and i32 %bf.load763, 65535
  %cmp765 = icmp eq i32 %bf.clear764, 61
  br i1 %cmp765, label %land.lhs.true767, label %if.end841

land.lhs.true767:                                 ; preds = %cond.end761
  %tobool770 = icmp eq %struct.rtx_def* %133, null
  br i1 %tobool770, label %cond.false774, label %cond.end777

cond.false774:                                    ; preds = %land.lhs.true767
  call void @make_decl_rtl(%union.tree_node* %exp, i8* null) #5
  %135 = load %struct.rtx_def** %rtl308, align 8, !tbaa !37
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %135, i64 0, i32 0
  %bf.load779.pre = load i32* %.phi.trans.insert, align 8
  br label %cond.end777

cond.end777:                                      ; preds = %land.lhs.true767, %cond.false774
  %bf.load779 = phi i32 [ %bf.load779.pre, %cond.false774 ], [ %bf.load763, %land.lhs.true767 ]
  %136 = phi %struct.rtx_def* [ %135, %cond.false774 ], [ %133, %land.lhs.true767 ]
  %bf.lshr780 = lshr i32 %bf.load779, 16
  %mode783 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 5
  %137 = bitcast i48* %mode783 to i64*
  %bf.load784 = load i64* %137, align 8
  %bf.load784.tr = trunc i64 %bf.load784 to i32
  %138 = xor i32 %bf.load784.tr, %bf.lshr780
  %139 = and i32 %138, 255
  %cmp787 = icmp eq i32 %139, 0
  br i1 %cmp787, label %if.end841, label %if.then789

if.then789:                                       ; preds = %cond.end777
  %tobool792 = icmp eq %struct.rtx_def* %136, null
  br i1 %tobool792, label %cond.false796, label %cond.end799

cond.false796:                                    ; preds = %if.then789
  call void @make_decl_rtl(%union.tree_node* %exp, i8* null) #5
  %140 = load %struct.rtx_def** %rtl308, align 8, !tbaa !37
  %.phi.trans.insert8535 = getelementptr inbounds %struct.rtx_def* %140, i64 0, i32 0
  %bf.load801.pre = load i32* %.phi.trans.insert8535, align 8
  %bf.load806.pre = load i64* %137, align 8
  br label %cond.end799

cond.end799:                                      ; preds = %if.then789, %cond.false796
  %bf.load806 = phi i64 [ %bf.load806.pre, %cond.false796 ], [ %bf.load784, %if.then789 ]
  %bf.load801 = phi i32 [ %bf.load801.pre, %cond.false796 ], [ %bf.load779, %if.then789 ]
  %bf.lshr802 = lshr i32 %bf.load801, 16
  %bf.clear803 = and i32 %bf.lshr802, 255
  %bf.load806.tr = trunc i64 %bf.load806 to i32
  %bf.cast808 = and i32 %bf.load806.tr, 255
  %bf.load811 = load i32* %code4, align 8
  %bf.clear812 = and i32 %bf.load811, 255
  %cmp813 = icmp eq i32 %bf.clear812, 36
  %cond815 = zext i1 %cmp813 to i32
  %call816 = call i32 @promote_mode(%union.tree_node* %0, i32 %bf.cast808, i32* %unsignedp, i32 %cond815) #5
  %cmp817 = icmp eq i32 %bf.clear803, %call816
  br i1 %cmp817, label %if.end820, label %if.then819

if.then819:                                       ; preds = %cond.end799
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 6332, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.expand_expr, i64 0, i64 0)) #8
  unreachable

if.end820:                                        ; preds = %cond.end799
  %141 = load %struct.rtx_def** %rtl308, align 8, !tbaa !37
  %tobool823 = icmp eq %struct.rtx_def* %141, null
  br i1 %tobool823, label %cond.false827, label %cond.end830

cond.false827:                                    ; preds = %if.end820
  call void @make_decl_rtl(%union.tree_node* %exp, i8* null) #5
  %142 = load %struct.rtx_def** %rtl308, align 8, !tbaa !37
  br label %cond.end830

cond.end830:                                      ; preds = %if.end820, %cond.false827
  %cond831 = phi %struct.rtx_def* [ %142, %cond.false827 ], [ %141, %if.end820 ]
  %call832 = call %struct.rtx_def* @gen_lowpart_SUBREG(i32 %bf.clear23, %struct.rtx_def* %cond831) #5
  %143 = getelementptr inbounds %struct.rtx_def* %call832, i64 0, i32 0
  %bf.load833 = load i32* %143, align 8
  %bf.set835 = or i32 %bf.load833, 268435456
  store i32 %bf.set835, i32* %143, align 8
  %144 = load i32* %unsignedp, align 4, !tbaa !21
  %bf.value837 = shl i32 %144, 26
  %bf.shl838 = and i32 %bf.value837, 67108864
  %bf.clear839 = and i32 %bf.set835, -67108865
  %bf.set840 = or i32 %bf.shl838, %bf.clear839
  store i32 %bf.set840, i32* %143, align 8
  br label %return

if.end841:                                        ; preds = %cond.end777, %cond.end761
  %145 = phi %struct.rtx_def* [ %136, %cond.end777 ], [ %133, %cond.end761 ]
  %tobool844 = icmp eq %struct.rtx_def* %145, null
  br i1 %tobool844, label %cond.false848, label %return

cond.false848:                                    ; preds = %if.end841
  call void @make_decl_rtl(%union.tree_node* %exp, i8* null) #5
  %146 = load %struct.rtx_def** %rtl308, align 8, !tbaa !37
  br label %return

sw.bb853:                                         ; preds = %if.end185
  %int_cst854 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %low = bitcast i32* %int_cst854 to i64*
  %147 = load i64* %low, align 8, !tbaa !42
  %high = getelementptr inbounds i32* %int_cst854, i64 2
  %148 = bitcast i32* %high to i64*
  %149 = load i64* %148, align 8, !tbaa !45
  %call857 = call %struct.rtx_def* @immed_double_const(i64 %147, i64 %149, i32 %bf.clear23) #5
  %bf.load860 = load i32* %code4, align 8
  %bf.clear862 = and i32 %bf.load860, 262144
  %tobool863 = icmp ne i32 %bf.clear862, 0
  %cmp865 = icmp ne i32 %modifier, 3
  %or.cond6563 = and i1 %tobool863, %cmp865
  br i1 %or.cond6563, label %if.then867, label %return

if.then867:                                       ; preds = %sw.bb853
  %call868 = call %struct.rtx_def* @force_reg(i32 %bf.clear23, %struct.rtx_def* %call857) #5
  br label %return

sw.bb870:                                         ; preds = %if.end185
  %initial = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 12
  %150 = load %union.tree_node** %initial, align 8, !tbaa !46
  %call872 = call %struct.rtx_def* @expand_expr(%union.tree_node* %150, %struct.rtx_def* %target.addr.1, i32 0, i32 0)
  br label %return

sw.bb873:                                         ; preds = %if.end185
  %call874 = call %struct.rtx_def* @immed_real_const(%union.tree_node* %exp) #5
  br label %return

sw.bb875:                                         ; preds = %if.end185, %if.end185
  %rtl876 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 1
  %151 = load i8** %rtl876, align 8
  %tobool877 = icmp eq i8* %151, null
  br i1 %tobool877, label %if.then878, label %if.end880

if.then878:                                       ; preds = %sw.bb875
  %call879 = call %struct.rtx_def* @output_constant_def(%union.tree_node* %exp, i32 1) #5
  %.pre8559 = load i8** %rtl876, align 8
  br label %if.end880

if.end880:                                        ; preds = %sw.bb875, %if.then878
  %152 = phi i8* [ %151, %sw.bb875 ], [ %.pre8559, %if.then878 ]
  %153 = bitcast i8* %152 to i32*
  %bf.load883 = load i32* %153, align 8
  %bf.clear884 = and i32 %bf.load883, 65535
  %cmp885 = icmp ne i32 %bf.clear884, 66
  %modifier.off8313 = add i32 %modifier, -1
  %switch8314 = icmp ult i32 %modifier.off8313, 3
  %or.cond8315 = or i1 %cmp885, %switch8314
  br i1 %or.cond8315, label %if.end926, label %land.lhs.true896

land.lhs.true896:                                 ; preds = %if.end880
  %fld899 = getelementptr inbounds i8* %152, i64 8
  %rtx901 = bitcast i8* %fld899 to %struct.rtx_def**
  %154 = load %struct.rtx_def** %rtx901, align 8, !tbaa !1
  %call902 = call i32 @memory_address_p(i32 %bf.clear23, %struct.rtx_def* %154) #5
  %tobool903 = icmp eq i32 %call902, 0
  br i1 %tobool903, label %land.lhs.true896.if.then916_crit_edge, label %lor.lhs.false904

land.lhs.true896.if.then916_crit_edge:            ; preds = %land.lhs.true896
  %.pre8561 = load i8** %rtl876, align 8
  %fld921.phi.trans.insert = getelementptr inbounds i8* %.pre8561, i64 8
  %rtx923.phi.trans.insert = bitcast i8* %fld921.phi.trans.insert to %struct.rtx_def**
  %.pre8562 = load %struct.rtx_def** %rtx923.phi.trans.insert, align 8, !tbaa !1
  br label %if.then916

lor.lhs.false904:                                 ; preds = %land.lhs.true896
  %155 = load i32* @flag_force_addr, align 4, !tbaa !21
  %tobool905 = icmp eq i32 %155, 0
  %.pre8560 = load i8** %rtl876, align 8
  br i1 %tobool905, label %if.end926, label %land.lhs.true906

land.lhs.true906:                                 ; preds = %lor.lhs.false904
  %fld909 = getelementptr inbounds i8* %.pre8560, i64 8
  %rtx911 = bitcast i8* %fld909 to %struct.rtx_def**
  %156 = load %struct.rtx_def** %rtx911, align 8, !tbaa !1
  %157 = getelementptr inbounds %struct.rtx_def* %156, i64 0, i32 0
  %bf.load912 = load i32* %157, align 8
  %bf.clear913 = and i32 %bf.load912, 65535
  %cmp914 = icmp eq i32 %bf.clear913, 61
  br i1 %cmp914, label %if.end926, label %if.then916

if.then916:                                       ; preds = %land.lhs.true896.if.then916_crit_edge, %land.lhs.true906
  %158 = phi %struct.rtx_def* [ %.pre8562, %land.lhs.true896.if.then916_crit_edge ], [ %156, %land.lhs.true906 ]
  %159 = phi i8* [ %.pre8561, %land.lhs.true896.if.then916_crit_edge ], [ %.pre8560, %land.lhs.true906 ]
  %160 = bitcast i8* %159 to %struct.rtx_def*
  %call924 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %158) #5
  %call925 = call %struct.rtx_def* @replace_equiv_address(%struct.rtx_def* %160, %struct.rtx_def* %call924) #5
  br label %return

if.end926:                                        ; preds = %lor.lhs.false904, %if.end880, %land.lhs.true906
  %161 = phi i8* [ %152, %if.end880 ], [ %.pre8560, %land.lhs.true906 ], [ %.pre8560, %lor.lhs.false904 ]
  %162 = bitcast i8* %161 to %struct.rtx_def*
  br label %return

sw.bb929:                                         ; preds = %if.end185
  %163 = load i8** @input_filename, align 8, !tbaa !1
  %164 = load i32* @lineno, align 4, !tbaa !21
  %operands931 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx932 = getelementptr inbounds i32* %operands931, i64 2
  %165 = bitcast i32* %arrayidx932 to %union.tree_node**
  %166 = load %union.tree_node** %165, align 8, !tbaa !1
  %id = getelementptr inbounds %union.tree_node* %166, i64 0, i32 0, i32 1
  %167 = getelementptr inbounds i8** %id, i64 1
  %168 = load i8** %167, align 8, !tbaa !47
  store i8* %168, i8** @input_filename, align 8, !tbaa !1
  %complexity = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 1
  %169 = bitcast i8** %complexity to i32*
  %170 = load i32* %169, align 4, !tbaa !50
  %shr = ashr i32 %170, 12
  store i32 %shr, i32* @lineno, align 4, !tbaa !21
  %bf.load935 = load i32* %code4, align 8
  %bf.clear937 = and i32 %bf.load935, 524288
  %tobool938 = icmp eq i32 %bf.clear937, 0
  br i1 %tobool938, label %if.end941, label %if.then939

if.then939:                                       ; preds = %sw.bb929
  %call940 = call %struct.rtx_def* @emit_line_note(i8* %168, i32 %shr) #5
  br label %if.end941

if.end941:                                        ; preds = %sw.bb929, %if.then939
  %arrayidx944 = bitcast i32* %operands931 to %union.tree_node**
  %171 = load %union.tree_node** %arrayidx944, align 8, !tbaa !1
  %call945 = call %struct.rtx_def* @expand_expr(%union.tree_node* %171, %struct.rtx_def* %target.addr.1, i32 %tmode, i32 %modifier)
  store i8* %163, i8** @input_filename, align 8, !tbaa !1
  store i32 %164, i32* @lineno, align 4, !tbaa !21
  br label %return

sw.bb946:                                         ; preds = %if.end185
  %call947 = call %union.tree_node* @decl_function_context(%union.tree_node* %exp) #5
  %cmp948 = icmp eq %union.tree_node* %call947, null
  br i1 %cmp948, label %if.then950, label %if.end954

if.then950:                                       ; preds = %sw.bb946
  %172 = load %union.tree_node** @current_function_decl, align 8, !tbaa !1
  %operands952 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx953 = getelementptr inbounds i32* %operands952, i64 2
  %173 = bitcast i32* %arrayidx953 to %union.tree_node**
  store %union.tree_node* %172, %union.tree_node** %173, align 8, !tbaa !1
  br label %if.end954

if.end954:                                        ; preds = %if.then950, %sw.bb946
  %174 = load %union.tree_node** @current_function_decl, align 8, !tbaa !1
  %cmp955 = icmp eq %union.tree_node* %call947, %174
  %175 = load %union.tree_node** @inline_function_decl, align 8
  %cmp958 = icmp eq %union.tree_node* %call947, %175
  %or.cond8288 = or i1 %cmp955, %cmp958
  %context.0 = select i1 %or.cond8288, %union.tree_node* null, %union.tree_node* %call947
  %tobool962 = icmp eq %union.tree_node* %context.0, null
  br i1 %tobool962, label %if.end993, label %if.then963

if.then963:                                       ; preds = %if.end954
  %call964 = call %struct.function* @find_function_data(%union.tree_node* %context.0) #5
  %operands966 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx967 = getelementptr inbounds i32* %operands966, i64 4
  %176 = bitcast i32* %arrayidx967 to %struct.rtx_def**
  %177 = load %struct.rtx_def** %176, align 8, !tbaa !1
  %tobool968 = icmp eq %struct.rtx_def* %177, null
  br i1 %tobool968, label %if.then986, label %land.lhs.true969

land.lhs.true969:                                 ; preds = %if.then963
  %178 = getelementptr inbounds %struct.rtx_def* %177, i64 0, i32 0
  %bf.load970 = load i32* %178, align 8
  %bf.clear971 = and i32 %bf.load970, 65535
  %cmp972 = icmp eq i32 %bf.clear971, 61
  br i1 %cmp972, label %if.end978, label %lor.lhs.false981

if.end978:                                        ; preds = %land.lhs.true969
  call void @put_var_into_stack(%union.tree_node* %exp) #5
  %179 = load %struct.rtx_def** %176, align 8, !tbaa !1
  %cmp979 = icmp eq %struct.rtx_def* %179, null
  br i1 %cmp979, label %if.then986, label %if.end978.lor.lhs.false981_crit_edge

if.end978.lor.lhs.false981_crit_edge:             ; preds = %if.end978
  %.phi.trans.insert8564 = getelementptr inbounds %struct.rtx_def* %179, i64 0, i32 0
  %bf.load982.pre = load i32* %.phi.trans.insert8564, align 8
  br label %lor.lhs.false981

lor.lhs.false981:                                 ; preds = %if.end978.lor.lhs.false981_crit_edge, %land.lhs.true969
  %bf.load982 = phi i32 [ %bf.load982.pre, %if.end978.lor.lhs.false981_crit_edge ], [ %bf.load970, %land.lhs.true969 ]
  %temp.28475 = phi %struct.rtx_def* [ %179, %if.end978.lor.lhs.false981_crit_edge ], [ %177, %land.lhs.true969 ]
  %bf.clear983 = and i32 %bf.load982, 65535
  %cmp984 = icmp eq i32 %bf.clear983, 66
  br i1 %cmp984, label %if.end987, label %if.then986

if.then986:                                       ; preds = %if.then963, %lor.lhs.false981, %if.end978
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 6437, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.expand_expr, i64 0, i64 0)) #8
  unreachable

if.end987:                                        ; preds = %lor.lhs.false981
  %arrayidx989 = getelementptr inbounds %struct.rtx_def* %temp.28475, i64 0, i32 1, i64 0
  %rtx990 = bitcast %union.rtunion_def* %arrayidx989 to %struct.rtx_def**
  %180 = load %struct.rtx_def** %rtx990, align 8, !tbaa !1
  %call991 = call %struct.rtx_def* @fix_lexical_addr(%struct.rtx_def* %180, %union.tree_node* %exp) #5
  %call992 = call %struct.rtx_def* @replace_equiv_address(%struct.rtx_def* %temp.28475, %struct.rtx_def* %call991) #5
  br label %return

if.end993:                                        ; preds = %if.end954
  %operands995 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx996 = getelementptr inbounds i32* %operands995, i64 4
  %181 = bitcast i32* %arrayidx996 to %struct.rtx_def**
  %182 = load %struct.rtx_def** %181, align 8, !tbaa !1
  %cmp997 = icmp eq %struct.rtx_def* %182, null
  br i1 %cmp997, label %if.then999, label %if.end1092

if.then999:                                       ; preds = %if.end993
  %cmp1000 = icmp eq i32 %bf.clear23, 0
  br i1 %cmp1000, label %if.then1002, label %if.else1003

if.then1002:                                      ; preds = %if.then999
  %183 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  br label %if.end1036

if.else1003:                                      ; preds = %if.then999
  %bf.load1005 = load i32* %unsigned_flag, align 8
  %184 = lshr i32 %bf.load1005, 10
  %mul1013 = and i32 %184, 2
  %bf.load1015 = load i32* %mode20, align 4
  %185 = lshr i32 %bf.load1015, 19
  %mul1018 = and i32 %185, 4
  %bf.clear1023 = and i32 %bf.load1005, 255
  %cmp1024 = icmp eq i32 %bf.clear1023, 20
  br i1 %cmp1024, label %land.rhs1026, label %land.end1030

land.rhs1026:                                     ; preds = %if.else1003
  %type1028 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 1
  %186 = load %union.tree_node** %type1028, align 8, !tbaa !36
  %tobool1029 = icmp ne %union.tree_node* %186, null
  br label %land.end1030

land.end1030:                                     ; preds = %land.rhs1026, %if.else1003
  %187 = phi i1 [ false, %if.else1003 ], [ %tobool1029, %land.rhs1026 ]
  %land.ext = zext i1 %187 to i32
  %mul1031 = shl nuw nsw i32 %land.ext, 3
  %or = or i32 %mul1013, %mul1018
  %or1019 = or i32 %or, %mul1031
  %or1033 = or i32 %or1019, 1
  %call1034 = call %union.tree_node* @build_qualified_type(%union.tree_node* %0, i32 %or1033) #5
  %call1035 = call %struct.rtx_def* @assign_temp(%union.tree_node* %call1034, i32 3, i32 0, i32 0) #5
  br label %if.end1036

if.end1036:                                       ; preds = %land.end1030, %if.then1002
  %temp.3 = phi %struct.rtx_def* [ %183, %if.then1002 ], [ %call1035, %land.end1030 ]
  store %struct.rtx_def* %temp.3, %struct.rtx_def** %181, align 8, !tbaa !1
  %188 = load i32* @optimize, align 4, !tbaa !21
  %tobool1040 = icmp eq i32 %188, 0
  %189 = getelementptr inbounds %struct.rtx_def* %temp.3, i64 0, i32 0
  br i1 %tobool1040, label %land.lhs.true1041, label %if.end1049

land.lhs.true1041:                                ; preds = %if.end1036
  %bf.load1042 = load i32* %189, align 8
  %bf.clear1043 = and i32 %bf.load1042, 65535
  %cmp1044 = icmp eq i32 %bf.clear1043, 61
  br i1 %cmp1044, label %if.then1046, label %if.end1049

if.then1046:                                      ; preds = %land.lhs.true1041
  %190 = load %struct.function** @cfun, align 8, !tbaa !1
  %x_save_expr_regs = getelementptr inbounds %struct.function* %190, i64 0, i32 25
  %191 = load %struct.rtx_def** %x_save_expr_regs, align 8, !tbaa !52
  %call1047 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 0, %struct.rtx_def* %temp.3, %struct.rtx_def* %191) #5
  %192 = load %struct.function** @cfun, align 8, !tbaa !1
  %x_save_expr_regs1048 = getelementptr inbounds %struct.function* %192, i64 0, i32 25
  store %struct.rtx_def* %call1047, %struct.rtx_def** %x_save_expr_regs1048, align 8, !tbaa !52
  br label %if.end1049

if.end1049:                                       ; preds = %if.end1036, %if.then1046, %land.lhs.true1041
  %bf.load1050 = load i32* %189, align 8
  %bf.clear1051 = and i32 %bf.load1050, 65535
  %cmp1052 = icmp eq i32 %bf.clear1051, 61
  br i1 %cmp1052, label %land.lhs.true1054, label %if.end1073

land.lhs.true1054:                                ; preds = %if.end1049
  %bf.lshr1056 = lshr i32 %bf.load1050, 16
  %bf.clear1057 = and i32 %bf.lshr1056, 255
  %cmp1058 = icmp eq i32 %bf.clear1057, %bf.clear23
  br i1 %cmp1058, label %if.end1073, label %if.then1060

if.then1060:                                      ; preds = %land.lhs.true1054
  %193 = load %struct.rtx_def** %181, align 8, !tbaa !1
  %call1064 = call %struct.rtx_def* @gen_lowpart_SUBREG(i32 %bf.clear23, %struct.rtx_def* %193) #5
  %194 = getelementptr inbounds %struct.rtx_def* %call1064, i64 0, i32 0
  %bf.load1065 = load i32* %194, align 8
  %bf.set1067 = or i32 %bf.load1065, 268435456
  store i32 %bf.set1067, i32* %194, align 8
  %195 = load i32* %unsignedp, align 4, !tbaa !21
  %bf.value1069 = shl i32 %195, 26
  %bf.shl1070 = and i32 %bf.value1069, 67108864
  %bf.clear1071 = and i32 %bf.set1067, -67108865
  %bf.set1072 = or i32 %bf.shl1070, %bf.clear1071
  store i32 %bf.set1072, i32* %194, align 8
  br label %if.end1073

if.end1073:                                       ; preds = %land.lhs.true1054, %if.then1060, %if.end1049
  %temp.4 = phi %struct.rtx_def* [ %call1064, %if.then1060 ], [ %temp.3, %land.lhs.true1054 ], [ %temp.3, %if.end1049 ]
  %196 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %cmp1074 = icmp eq %struct.rtx_def* %temp.4, %196
  %arrayidx1079 = bitcast i32* %operands995 to %union.tree_node**
  %197 = load %union.tree_node** %arrayidx1079, align 8, !tbaa !1
  br i1 %cmp1074, label %if.then1076, label %if.else1081

if.then1076:                                      ; preds = %if.end1073
  %call1080 = call %struct.rtx_def* @expand_expr(%union.tree_node* %197, %struct.rtx_def* %temp.4, i32 0, i32 0)
  br label %if.end1086

if.else1081:                                      ; preds = %if.end1073
  %call1085 = call %struct.rtx_def* @store_expr(%union.tree_node* %197, %struct.rtx_def* %temp.4, i32 0)
  br label %if.end1086

if.end1086:                                       ; preds = %if.else1081, %if.then1076
  %bf.load1089 = load i32* %code4, align 8
  %bf.set1091 = or i32 %bf.load1089, 65536
  store i32 %bf.set1091, i32* %code4, align 8
  %.pre8563 = load %struct.rtx_def** %181, align 8, !tbaa !1
  br label %if.end1092

if.end1092:                                       ; preds = %if.end1086, %if.end993
  %198 = phi %struct.rtx_def* [ %.pre8563, %if.end1086 ], [ %182, %if.end993 ]
  %199 = getelementptr inbounds %struct.rtx_def* %198, i64 0, i32 0
  %bf.load1096 = load i32* %199, align 8
  %bf.clear1097 = and i32 %bf.load1096, 65535
  %cmp1098 = icmp eq i32 %bf.clear1097, 61
  br i1 %cmp1098, label %land.lhs.true1100, label %return

land.lhs.true1100:                                ; preds = %if.end1092
  %bf.lshr1105 = lshr i32 %bf.load1096, 16
  %bf.clear1106 = and i32 %bf.lshr1105, 255
  %cmp1107 = icmp eq i32 %bf.clear1106, %bf.clear23
  br i1 %cmp1107, label %return, label %if.then1109

if.then1109:                                      ; preds = %land.lhs.true1100
  %call1110 = call i32 @promote_mode(%union.tree_node* %0, i32 %bf.clear23, i32* %unsignedp, i32 0) #5
  %200 = load %struct.rtx_def** %181, align 8, !tbaa !1
  %call1114 = call %struct.rtx_def* @gen_lowpart_SUBREG(i32 %bf.clear23, %struct.rtx_def* %200) #5
  %201 = getelementptr inbounds %struct.rtx_def* %call1114, i64 0, i32 0
  %bf.load1115 = load i32* %201, align 8
  %bf.set1117 = or i32 %bf.load1115, 268435456
  store i32 %bf.set1117, i32* %201, align 8
  %202 = load i32* %unsignedp, align 4, !tbaa !21
  %bf.value1119 = shl i32 %202, 26
  %bf.shl1120 = and i32 %bf.value1119, 67108864
  %bf.clear1121 = and i32 %bf.set1117, -67108865
  %bf.set1122 = or i32 %bf.shl1120, %bf.clear1121
  store i32 %bf.set1122, i32* %201, align 8
  br label %return

sw.bb1127:                                        ; preds = %if.end185
  %operands1130 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx1131 = bitcast i32* %operands1130 to %union.tree_node**
  %203 = load %union.tree_node** %arrayidx1131, align 8, !tbaa !1
  %call1132 = call %struct.rtx_def* @expand_expr(%union.tree_node* %203, %struct.rtx_def* %target.addr.1, i32 %tmode, i32 %modifier)
  %204 = load %union.tree_node** %arrayidx1131, align 8, !tbaa !1
  %call1136 = call %union.tree_node* @unsave_expr_now(%union.tree_node* %204) #5
  store %union.tree_node* %call1136, %union.tree_node** %arrayidx1131, align 8, !tbaa !1
  br label %return

sw.bb1140:                                        ; preds = %if.end185
  %205 = load %union.tree_node** @placeholder_list, align 8, !tbaa !1
  store %union.tree_node* null, %union.tree_node** %placeholder_expr, align 8, !tbaa !1
  %call1141 = call %union.tree_node* @find_placeholder(%union.tree_node* %exp, %union.tree_node** %placeholder_expr)
  %cmp1142 = icmp eq %union.tree_node* %call1141, null
  br i1 %cmp1142, label %if.then1144, label %if.end1145

if.then1144:                                      ; preds = %sw.bb1140
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 6510, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.expand_expr, i64 0, i64 0)) #8
  unreachable

if.end1145:                                       ; preds = %sw.bb1140
  %206 = load %union.tree_node** %placeholder_expr, align 8, !tbaa !1
  %chain = getelementptr inbounds %union.tree_node* %206, i64 0, i32 0, i32 0, i32 0
  %207 = load %union.tree_node** %chain, align 8, !tbaa !34
  store %union.tree_node* %207, %union.tree_node** @placeholder_list, align 8, !tbaa !1
  %call1147 = call %struct.rtx_def* @expand_expr(%union.tree_node* %call1141, %struct.rtx_def* %target, i32 %tmode, i32 %modifier)
  store %union.tree_node* %205, %union.tree_node** @placeholder_list, align 8, !tbaa !1
  br label %return

sw.bb1148:                                        ; preds = %if.end185
  %operands1150 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx1151 = getelementptr inbounds i32* %operands1150, i64 2
  %208 = bitcast i32* %arrayidx1151 to %union.tree_node**
  %209 = load %union.tree_node** %208, align 8, !tbaa !1
  %210 = load %union.tree_node** @placeholder_list, align 8, !tbaa !1
  %call1152 = call %union.tree_node* @tree_cons(%union.tree_node* %209, %union.tree_node* null, %union.tree_node* %210) #5
  store %union.tree_node* %call1152, %union.tree_node** @placeholder_list, align 8, !tbaa !1
  %arrayidx1155 = bitcast i32* %operands1150 to %union.tree_node**
  %211 = load %union.tree_node** %arrayidx1155, align 8, !tbaa !1
  %call1156 = call %struct.rtx_def* @expand_expr(%union.tree_node* %211, %struct.rtx_def* %target, i32 %tmode, i32 %modifier)
  %212 = load %union.tree_node** @placeholder_list, align 8, !tbaa !1
  %chain1158 = getelementptr inbounds %union.tree_node* %212, i64 0, i32 0, i32 0, i32 0
  %213 = load %union.tree_node** %chain1158, align 8, !tbaa !34
  store %union.tree_node* %213, %union.tree_node** @placeholder_list, align 8, !tbaa !1
  br label %return

sw.bb1159:                                        ; preds = %if.end185
  %operands1161 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx1162 = bitcast i32* %operands1161 to %union.tree_node**
  %214 = load %union.tree_node** %arrayidx1162, align 8, !tbaa !1
  %code1164 = getelementptr inbounds %union.tree_node* %214, i64 0, i32 0, i32 0, i32 2
  %bf.load1165 = load i32* %code1164, align 8
  %bf.clear1166 = and i32 %bf.load1165, 255
  %cmp1167 = icmp eq i32 %bf.clear1166, 31
  br i1 %cmp1167, label %if.then1169, label %if.else1173

if.then1169:                                      ; preds = %sw.bb1159
  call void @expand_goto(%union.tree_node* %214) #5
  br label %if.end1177

if.else1173:                                      ; preds = %sw.bb1159
  call void @expand_computed_goto(%union.tree_node* %214) #5
  br label %if.end1177

if.end1177:                                       ; preds = %if.else1173, %if.then1169
  %215 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  br label %return

sw.bb1178:                                        ; preds = %if.end185
  %operands1180 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx1181 = bitcast i32* %operands1180 to %union.tree_node**
  %216 = load %union.tree_node** %arrayidx1181, align 8, !tbaa !1
  %call1182 = call %union.tree_node* @invert_truthvalue(%union.tree_node* %216) #5
  %call1183 = call i32 @expand_exit_loop_if_false(%struct.nesting* null, %union.tree_node* %call1182) #5
  %217 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  br label %return

sw.bb1184:                                        ; preds = %if.end185
  %operands1186 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx1187 = getelementptr inbounds i32* %operands1186, i64 2
  %218 = bitcast i32* %arrayidx1187 to %union.tree_node**
  %219 = load %union.tree_node** %218, align 8, !tbaa !1
  %tobool1188 = icmp eq %union.tree_node* %219, null
  br i1 %tobool1188, label %if.end1193, label %if.then1189

if.then1189:                                      ; preds = %sw.bb1184
  call void @expand_expr_stmt_value(%union.tree_node* %219, i32 0, i32 1) #5
  br label %if.end1193

if.end1193:                                       ; preds = %sw.bb1184, %if.then1189
  %220 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr.i8432 = getelementptr inbounds %struct.function* %220, i64 0, i32 2
  %221 = load %struct.expr_status** %expr.i8432, align 8, !tbaa !6
  %x_inhibit_defer_pop.i8433 = getelementptr inbounds %struct.expr_status* %221, i64 0, i32 1
  %222 = load i32* %x_inhibit_defer_pop.i8433, align 4, !tbaa !15
  %cmp.i8434 = icmp eq i32 %222, 0
  br i1 %cmp.i8434, label %if.then.i8437, label %do_pending_stack_adjust.exit8446

if.then.i8437:                                    ; preds = %if.end1193
  %x_pending_stack_adjust.i8435 = getelementptr inbounds %struct.expr_status* %221, i64 0, i32 0
  %223 = load i32* %x_pending_stack_adjust.i8435, align 4, !tbaa !13
  %cmp2.i8436 = icmp eq i32 %223, 0
  br i1 %cmp2.i8436, label %if.end.i8445, label %if.then3.i8443

if.then3.i8443:                                   ; preds = %if.then.i8437
  %conv.i8438 = sext i32 %223 to i64
  %call.i8439 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv.i8438) #5
  call void @adjust_stack(%struct.rtx_def* %call.i8439) #5
  %.pre.i8440 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr6.phi.trans.insert.i8441 = getelementptr inbounds %struct.function* %.pre.i8440, i64 0, i32 2
  %.pre9.i8442 = load %struct.expr_status** %expr6.phi.trans.insert.i8441, align 8, !tbaa !6
  br label %if.end.i8445

if.end.i8445:                                     ; preds = %if.then3.i8443, %if.then.i8437
  %224 = phi %struct.expr_status* [ %221, %if.then.i8437 ], [ %.pre9.i8442, %if.then3.i8443 ]
  %x_pending_stack_adjust7.i8444 = getelementptr inbounds %struct.expr_status* %224, i64 0, i32 0
  store i32 0, i32* %x_pending_stack_adjust7.i8444, align 4, !tbaa !13
  br label %do_pending_stack_adjust.exit8446

do_pending_stack_adjust.exit8446:                 ; preds = %if.end1193, %if.end.i8445
  %arrayidx1196 = bitcast i32* %operands1186 to %union.tree_node**
  %225 = load %union.tree_node** %arrayidx1196, align 8, !tbaa !1
  %call1197 = call %struct.rtx_def* @label_rtx(%union.tree_node* %225) #5
  %call1198 = call %struct.rtx_def* @emit_label(%struct.rtx_def* %call1197) #5
  %226 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  br label %return

sw.bb1199:                                        ; preds = %if.end185
  %operands1201 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx1202 = getelementptr inbounds i32* %operands1201, i64 2
  %227 = bitcast i32* %arrayidx1202 to %union.tree_node**
  %228 = load %union.tree_node** %227, align 8, !tbaa !1
  %tobool1203 = icmp eq %union.tree_node* %228, null
  br i1 %tobool1203, label %if.end1205, label %if.then1204

if.then1204:                                      ; preds = %sw.bb1199
  call void (i8*, ...)* @sorry(i8* getelementptr inbounds ([34 x i8]* @.str5, i64 0, i64 0)) #5
  br label %if.end1205

if.end1205:                                       ; preds = %sw.bb1199, %if.then1204
  %arrayidx1208 = bitcast i32* %operands1201 to %union.tree_node**
  %229 = load %union.tree_node** %arrayidx1208, align 8, !tbaa !1
  %operands1210 = getelementptr inbounds %union.tree_node* %229, i64 0, i32 0, i32 2
  %arrayidx1211 = bitcast i32* %operands1210 to %union.tree_node**
  %230 = load %union.tree_node** %arrayidx1211, align 8, !tbaa !1
  call void @expand_goto(%union.tree_node* %230) #5
  %231 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  br label %return

sw.bb1212:                                        ; preds = %if.end185
  call void @push_temp_slots() #5
  %call1213 = call %struct.nesting* @expand_start_loop(i32 1) #5
  %operands1215 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx1216 = bitcast i32* %operands1215 to %union.tree_node**
  %232 = load %union.tree_node** %arrayidx1216, align 8, !tbaa !1
  call void @expand_expr_stmt_value(%union.tree_node* %232, i32 0, i32 1) #5
  call void @expand_end_loop() #5
  call void @pop_temp_slots() #5
  %233 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  br label %return

sw.bb1217:                                        ; preds = %if.end185
  %operands1219 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx1220 = bitcast i32* %operands1219 to %union.tree_node**
  %234 = load %union.tree_node** %arrayidx1220, align 8, !tbaa !1
  call void @expand_start_bindings_and_block(i32 2, %union.tree_node* null) #5
  %arrayidx1223 = getelementptr inbounds i32* %operands1219, i64 4
  %235 = bitcast i32* %arrayidx1223 to %union.tree_node**
  %236 = load %union.tree_node** %235, align 8, !tbaa !1
  %cmp1224 = icmp eq %union.tree_node* %236, null
  br i1 %cmp1224, label %while.cond.preheader, label %land.lhs.true1226

land.lhs.true1226:                                ; preds = %sw.bb1217
  %used_flag1231 = getelementptr inbounds %union.tree_node* %236, i64 0, i32 0, i32 0, i32 2
  %bf.load1232 = load i32* %used_flag1231, align 8
  %bf.clear1234 = and i32 %bf.load1232, 65536
  %tobool1235 = icmp eq i32 %bf.clear1234, 0
  br i1 %tobool1235, label %if.then1236, label %while.cond.preheader

if.then1236:                                      ; preds = %land.lhs.true1226
  call void @insert_block(%union.tree_node* %236) #5
  br label %while.cond.preheader

while.cond.preheader:                             ; preds = %if.then1236, %sw.bb1217, %land.lhs.true1226
  %tobool12418509 = icmp eq %union.tree_node* %234, null
  br i1 %tobool12418509, label %while.end, label %while.body

while.body:                                       ; preds = %while.cond.preheader, %if.end1247
  %vars.08510 = phi %union.tree_node* [ %238, %if.end1247 ], [ %234, %while.cond.preheader ]
  %rtl1243 = getelementptr inbounds %union.tree_node* %vars.08510, i64 0, i32 0, i32 17
  %237 = load %struct.rtx_def** %rtl1243, align 8, !tbaa !37
  %cmp1244 = icmp eq %struct.rtx_def* %237, null
  br i1 %cmp1244, label %if.then1246, label %if.end1247

if.then1246:                                      ; preds = %while.body
  call void @expand_decl(%union.tree_node* %vars.08510) #5
  br label %if.end1247

if.end1247:                                       ; preds = %while.body, %if.then1246
  call void @expand_decl_init(%union.tree_node* %vars.08510) #5
  %chain1249 = getelementptr inbounds %union.tree_node* %vars.08510, i64 0, i32 0, i32 0, i32 0
  %238 = load %union.tree_node** %chain1249, align 8, !tbaa !34
  %tobool1241 = icmp eq %union.tree_node* %238, null
  br i1 %tobool1241, label %while.end, label %while.body

while.end:                                        ; preds = %if.end1247, %while.cond.preheader
  %arrayidx1252 = getelementptr inbounds i32* %operands1219, i64 2
  %239 = bitcast i32* %arrayidx1252 to %union.tree_node**
  %240 = load %union.tree_node** %239, align 8, !tbaa !1
  %call1253 = call %struct.rtx_def* @expand_expr(%union.tree_node* %240, %struct.rtx_def* %target.addr.1, i32 %tmode, i32 %modifier)
  %241 = load %union.tree_node** %arrayidx1220, align 8, !tbaa !1
  call void @expand_end_bindings(%union.tree_node* %241, i32 0, i32 0) #5
  br label %return

sw.bb1257:                                        ; preds = %if.end185
  %operands1259 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %242 = bitcast i32* %operands1259 to %struct.rtx_def**
  %243 = load %struct.rtx_def** %242, align 8, !tbaa !1
  %tobool1261 = icmp eq %struct.rtx_def* %243, null
  br i1 %tobool1261, label %if.end1277, label %if.then1262

if.then1262:                                      ; preds = %sw.bb1257
  %cmp1266 = icmp eq %struct.rtx_def* %243, %7
  br i1 %cmp1266, label %if.then1268, label %if.end1269

if.then1268:                                      ; preds = %if.then1262
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 6603, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.expand_expr, i64 0, i64 0)) #8
  unreachable

if.end1269:                                       ; preds = %if.then1262
  %call1273 = call %struct.rtx_def* @emit_insns(%struct.rtx_def* %243) #5
  %244 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  store %struct.rtx_def* %244, %struct.rtx_def** %242, align 8, !tbaa !1
  br label %if.end1277

if.end1277:                                       ; preds = %sw.bb1257, %if.end1269
  %arrayidx1280 = getelementptr inbounds i32* %operands1259, i64 2
  %245 = bitcast i32* %arrayidx1280 to %struct.rtx_def**
  %246 = load %struct.rtx_def** %245, align 8, !tbaa !1
  call void @preserve_rtl_expr_result(%struct.rtx_def* %246) #5
  call void @free_temps_for_rtl_expr(%union.tree_node* %exp) #5
  %247 = load %struct.rtx_def** %245, align 8, !tbaa !1
  br label %return

sw.bb1284:                                        ; preds = %if.end185
  br i1 %36, label %if.then1286, label %if.else1295

if.then1286:                                      ; preds = %sw.bb1284
  %operands1288 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx1289 = getelementptr inbounds i32* %operands1288, i64 2
  %248 = bitcast i32* %arrayidx1289 to %union.tree_node**
  %elt.08511 = load %union.tree_node** %248, align 8
  %tobool12908512 = icmp eq %union.tree_node* %elt.08511, null
  br i1 %tobool12908512, label %return, label %for.body

for.body:                                         ; preds = %if.then1286, %for.body
  %249 = phi %struct.rtx_def* [ %.pre8566, %for.body ], [ %7, %if.then1286 ]
  %elt.08513 = phi %union.tree_node* [ %elt.0, %for.body ], [ %elt.08511, %if.then1286 ]
  %value1291 = getelementptr inbounds %union.tree_node* %elt.08513, i64 0, i32 0, i32 2
  %250 = bitcast i32* %value1291 to %union.tree_node**
  %251 = load %union.tree_node** %250, align 8, !tbaa !53
  %call1292 = call %struct.rtx_def* @expand_expr(%union.tree_node* %251, %struct.rtx_def* %249, i32 0, i32 0)
  %chain1294 = getelementptr inbounds %union.tree_node* %elt.08513, i64 0, i32 0, i32 0, i32 0
  %elt.0 = load %union.tree_node** %chain1294, align 8
  %tobool1290 = icmp eq %union.tree_node* %elt.0, null
  %.pre8566 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  br i1 %tobool1290, label %return, label %for.body

if.else1295:                                      ; preds = %land.lhs.true177, %sw.bb1284
  %target.addr.184668476 = phi %struct.rtx_def* [ %target.addr.1, %sw.bb1284 ], [ %target.call8451, %land.lhs.true177 ]
  %bf.load1298 = load i32* %code4, align 8
  %bf.clear1300 = and i32 %bf.load1298, 262144
  %tobool1301 = icmp eq i32 %bf.clear1300, 0
  br i1 %tobool1301, label %lor.lhs.false1338, label %land.lhs.true1302

land.lhs.true1302:                                ; preds = %if.else1295
  %cmp1303 = icmp eq i32 %bf.clear23, 51
  br i1 %cmp1303, label %land.lhs.true1305, label %lor.lhs.false1311

land.lhs.true1305:                                ; preds = %land.lhs.true1302
  %cmp1306 = icmp eq %struct.rtx_def* %target.addr.184668476, null
  br i1 %cmp1306, label %if.then1347, label %land.lhs.true1308

land.lhs.true1308:                                ; preds = %land.lhs.true1305
  %call1309 = call i32 @safe_from_p(%struct.rtx_def* %target.addr.184668476, %union.tree_node* %exp, i32 1)
  %tobool1310 = icmp eq i32 %call1309, 0
  br i1 %tobool1310, label %if.then1347, label %land.lhs.true1308.lor.lhs.false1311_crit_edge

land.lhs.true1308.lor.lhs.false1311_crit_edge:    ; preds = %land.lhs.true1308
  %bf.load1313.pre = load i32* %code4, align 8
  br label %lor.lhs.false1311

lor.lhs.false1311:                                ; preds = %land.lhs.true1308.lor.lhs.false1311_crit_edge, %land.lhs.true1302
  %bf.load1313 = phi i32 [ %bf.load1313.pre, %land.lhs.true1308.lor.lhs.false1311_crit_edge ], [ %bf.load1298, %land.lhs.true1302 ]
  %bf.clear1315 = and i32 %bf.load1313, 1024
  %tobool1316 = icmp eq i32 %bf.clear1315, 0
  br i1 %tobool1316, label %lor.lhs.false1317, label %if.then1347

lor.lhs.false1317:                                ; preds = %lor.lhs.false1311
  %252 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 4
  %253 = load %union.tree_node** %252, align 8, !tbaa !55
  %call1319 = call i32 @host_integerp(%union.tree_node* %253, i32 1) #5
  %tobool1320 = icmp eq i32 %call1319, 0
  br i1 %tobool1320, label %lor.lhs.false1338, label %land.lhs.true1321

land.lhs.true1321:                                ; preds = %lor.lhs.false1317
  %254 = load %union.tree_node** %252, align 8, !tbaa !55
  %call1324 = call i64 @tree_low_cst(%union.tree_node* %254, i32 1) #5
  %255 = load i32* getelementptr inbounds ([9 x i32]* @class_narrowest_mode, i64 0, i64 1), align 4, !tbaa !5
  %cmp11.i = icmp eq i32 %255, 0
  br i1 %cmp11.i, label %while.end.i8431, label %for.body.lr.ph.i

for.body.lr.ph.i:                                 ; preds = %land.lhs.true1321, %if.end24.i
  %l.addr.06.i = phi i64 [ %l.addr.1.i, %if.end24.i ], [ %call1324, %land.lhs.true1321 ]
  %max_size.05.i = phi i64 [ %conv27.i, %if.end24.i ], [ 17, %land.lhs.true1321 ]
  %n_insns.04.i = phi i64 [ %n_insns.1.i, %if.end24.i ], [ 0, %land.lhs.true1321 ]
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i, %for.body.lr.ph.i
  %tmode.03.i = phi i32 [ %255, %for.body.lr.ph.i ], [ %conv6.i, %for.body.i ]
  %mode.02.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %tmode.0.mode.0.i, %for.body.i ]
  %idxprom.i = sext i32 %tmode.03.i to i64
  %arrayidx.i8420 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom.i
  %256 = load i8* %arrayidx.i8420, align 1, !tbaa !5
  %conv.i8421 = zext i8 %256 to i64
  %cmp2.i8422 = icmp ult i64 %conv.i8421, %max_size.05.i
  %tmode.0.mode.0.i = select i1 %cmp2.i8422, i32 %tmode.03.i, i32 %mode.02.i
  %arrayidx5.i8423 = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom.i
  %257 = load i8* %arrayidx5.i8423, align 1, !tbaa !5
  %conv6.i = zext i8 %257 to i32
  %cmp1.i = icmp eq i8 %257, 0
  br i1 %cmp1.i, label %for.end.i, label %for.body.i

for.end.i:                                        ; preds = %for.body.i
  %cmp7.i = icmp eq i32 %tmode.0.mode.0.i, 0
  br i1 %cmp7.i, label %while.end.i8431, label %if.end10.i

if.end10.i:                                       ; preds = %for.end.i
  %idxprom11.i = sext i32 %tmode.0.mode.0.i to i64
  %258 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 30), align 8, !tbaa !1
  %insn_code.i = getelementptr inbounds %struct.optab* %258, i64 0, i32 1, i64 %idxprom11.i, i32 0
  %259 = load i32* %insn_code.i, align 4, !tbaa !23
  %cmp13.i8424 = icmp eq i32 %259, 1317
  br i1 %cmp13.i8424, label %if.end24.i, label %land.lhs.true.i8426

land.lhs.true.i8426:                              ; preds = %if.end10.i
  %call.i8425 = call i32 @get_mode_alignment(i32 %tmode.0.mode.0.i) #5
  %cmp15.i = icmp ult i32 %call.i8425, 129
  br i1 %cmp15.i, label %if.then17.i, label %if.end24.i

if.then17.i:                                      ; preds = %land.lhs.true.i8426
  %arrayidx19.i = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom11.i
  %260 = load i8* %arrayidx19.i, align 1, !tbaa !5
  %conv20.i = zext i8 %260 to i64
  %div.i = udiv i64 %l.addr.06.i, %conv20.i
  %add.i8427 = add i64 %div.i, %n_insns.04.i
  %rem.i = urem i64 %l.addr.06.i, %conv20.i
  br label %if.end24.i

if.end24.i:                                       ; preds = %if.then17.i, %land.lhs.true.i8426, %if.end10.i
  %n_insns.1.i = phi i64 [ %add.i8427, %if.then17.i ], [ %n_insns.04.i, %land.lhs.true.i8426 ], [ %n_insns.04.i, %if.end10.i ]
  %l.addr.1.i = phi i64 [ %rem.i, %if.then17.i ], [ %l.addr.06.i, %land.lhs.true.i8426 ], [ %l.addr.06.i, %if.end10.i ]
  %arrayidx26.i8428 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom11.i
  %261 = load i8* %arrayidx26.i8428, align 1, !tbaa !5
  %conv27.i = zext i8 %261 to i64
  %cmp.i8429 = icmp ugt i8 %261, 1
  br i1 %cmp.i8429, label %for.body.lr.ph.i, label %while.end.i8431

while.end.i8431:                                  ; preds = %if.end24.i, %for.end.i, %land.lhs.true1321
  %l.addr.0.lcssa.i = phi i64 [ %call1324, %land.lhs.true1321 ], [ %l.addr.1.i, %if.end24.i ], [ %l.addr.06.i, %for.end.i ]
  %n_insns.0.lcssa.i = phi i64 [ 0, %land.lhs.true1321 ], [ %n_insns.1.i, %if.end24.i ], [ %n_insns.04.i, %for.end.i ]
  %tobool.i8430 = icmp eq i64 %l.addr.0.lcssa.i, 0
  br i1 %tobool.i8430, label %move_by_pieces_ninsns.exit, label %if.then28.i

if.then28.i:                                      ; preds = %while.end.i8431
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 1542, i8* getelementptr inbounds ([22 x i8]* @__FUNCTION__.move_by_pieces_ninsns, i64 0, i64 0)) #8
  unreachable

move_by_pieces_ninsns.exit:                       ; preds = %while.end.i8431
  %262 = load i32* @optimize_size, align 4, !tbaa !21
  %tobool1327 = icmp eq i32 %262, 0
  br i1 %tobool1327, label %cond.false1329, label %cond.end1330

cond.false1329:                                   ; preds = %move_by_pieces_ninsns.exit
  %263 = load %struct.processor_costs** @ix86_cost, align 8, !tbaa !1
  %move_ratio = getelementptr inbounds %struct.processor_costs* %263, i64 0, i32 10
  %264 = load i32* %move_ratio, align 4, !tbaa !29
  %phitmp = zext i32 %264 to i64
  br label %cond.end1330

cond.end1330:                                     ; preds = %move_by_pieces_ninsns.exit, %cond.false1329
  %cond1331 = phi i64 [ %phitmp, %cond.false1329 ], [ 3, %move_by_pieces_ninsns.exit ]
  %cmp1333 = icmp ult i64 %n_insns.0.lcssa.i, %cond1331
  br i1 %cmp1333, label %lor.lhs.false1338, label %land.lhs.true1335

land.lhs.true1335:                                ; preds = %cond.end1330
  %call1336 = call fastcc i32 @mostly_zeros_p(%union.tree_node* %exp)
  %tobool1337 = icmp eq i32 %call1336, 0
  br i1 %tobool1337, label %if.then1347, label %lor.lhs.false1338

lor.lhs.false1338:                                ; preds = %land.lhs.true1335, %lor.lhs.false1317, %if.else1295, %cond.end1330
  %cmp1339 = icmp eq i32 %modifier, 3
  br i1 %cmp1339, label %land.lhs.true1341, label %if.else1360

land.lhs.true1341:                                ; preds = %lor.lhs.false1338
  %bf.load1343 = load i32* %code4, align 8
  %bf.clear1345 = and i32 %bf.load1343, 512
  %tobool1346 = icmp eq i32 %bf.clear1345, 0
  br i1 %tobool1346, label %if.else1360, label %if.then1347.thread

if.then1347.thread:                               ; preds = %land.lhs.true1341
  %call13488477 = call %struct.rtx_def* @output_constant_def(%union.tree_node* %exp, i32 1) #5
  br label %return

if.then1347:                                      ; preds = %land.lhs.true1308, %land.lhs.true1305, %land.lhs.true1335, %lor.lhs.false1311
  %call1348 = call %struct.rtx_def* @output_constant_def(%union.tree_node* %exp, i32 1) #5
  %modifier.off8316 = add i32 %modifier, -1
  %switch8317 = icmp ult i32 %modifier.off8316, 3
  br i1 %switch8317, label %return, label %if.then1357

if.then1357:                                      ; preds = %if.then1347
  %call1358 = call %struct.rtx_def* @validize_mem(%struct.rtx_def* %call1348) #5
  br label %return

if.else1360:                                      ; preds = %land.lhs.true1341, %lor.lhs.false1338
  %cmp1361 = icmp eq %struct.rtx_def* %target.addr.184668476, null
  br i1 %cmp1361, label %if.then1371, label %lor.lhs.false1363

lor.lhs.false1363:                                ; preds = %if.else1360
  %call1364 = call i32 @safe_from_p(%struct.rtx_def* %target.addr.184668476, %union.tree_node* %exp, i32 1)
  %tobool1365 = icmp eq i32 %call1364, 0
  br i1 %tobool1365, label %if.then1371, label %lor.lhs.false1366

lor.lhs.false1366:                                ; preds = %lor.lhs.false1363
  %265 = getelementptr inbounds %struct.rtx_def* %target.addr.184668476, i64 0, i32 0
  %bf.load1367 = load i32* %265, align 8
  %bf.clear1368 = and i32 %bf.load1367, 65535
  %cmp1369 = icmp eq i32 %bf.clear1368, 39
  br i1 %cmp1369, label %if.then1371, label %if.end1420

if.then1371:                                      ; preds = %lor.lhs.false1363, %lor.lhs.false1366, %if.else1360
  %bf.load1374 = load i32* %unsigned_flag, align 8
  %bf.lshr1375 = lshr i32 %bf.load1374, 12
  %bf.clear1376 = and i32 %bf.lshr1375, 1
  %266 = lshr i32 %bf.load1374, 10
  %mul1383 = and i32 %266, 2
  %or1384 = or i32 %bf.clear1376, %mul1383
  %bf.load1387 = load i32* %mode20, align 4
  %267 = lshr i32 %bf.load1387, 19
  %mul1390 = and i32 %267, 4
  %or1391 = or i32 %or1384, %mul1390
  %bf.clear1395 = and i32 %bf.load1374, 255
  %cmp1396 = icmp eq i32 %bf.clear1395, 20
  br i1 %cmp1396, label %land.rhs1398, label %land.end1402

land.rhs1398:                                     ; preds = %if.then1371
  %type1400 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 1
  %268 = load %union.tree_node** %type1400, align 8, !tbaa !36
  %tobool1401 = icmp ne %union.tree_node* %268, null
  br label %land.end1402

land.end1402:                                     ; preds = %land.rhs1398, %if.then1371
  %269 = phi i1 [ false, %if.then1371 ], [ %tobool1401, %land.rhs1398 ]
  %land.ext1403 = zext i1 %269 to i32
  %mul1404 = shl nuw nsw i32 %land.ext1403, 3
  %or1405 = or i32 %or1391, %mul1404
  %bf.load1408 = load i32* %code4, align 8
  %bf.lshr1409 = lshr i32 %bf.load1408, 12
  %bf.clear1410 = and i32 %bf.lshr1409, 1
  %or1412 = or i32 %or1405, %bf.clear1410
  %call1413 = call %union.tree_node* @build_qualified_type(%union.tree_node* %0, i32 %or1412) #5
  %bf.load1416 = load i32* %code4, align 8
  %bf.lshr1417 = lshr i32 %bf.load1416, 10
  %bf.clear1418 = and i32 %bf.lshr1417, 1
  %call1419 = call %struct.rtx_def* @assign_temp(%union.tree_node* %call1413, i32 0, i32 %bf.clear1418, i32 1) #5
  br label %if.end1420

if.end1420:                                       ; preds = %land.end1402, %lor.lhs.false1366
  %target.addr.2 = phi %struct.rtx_def* [ %call1419, %land.end1402 ], [ %target.addr.184668476, %lor.lhs.false1366 ]
  %270 = load %union.tree_node** %type1, align 8, !tbaa !36
  %call1423 = call i64 @int_size_in_bytes(%union.tree_node* %270) #5
  call fastcc void @store_constructor(%union.tree_node* %exp, %struct.rtx_def* %target.addr.2, i32 0, i64 %call1423)
  br label %return

sw.bb1424:                                        ; preds = %if.end185
  %operands1426 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx1427 = bitcast i32* %operands1426 to %union.tree_node**
  %271 = load %union.tree_node** %arrayidx1427, align 8, !tbaa !1
  %call1428 = call %union.tree_node* @string_constant(%union.tree_node* %271, %union.tree_node** %index)
  %tobool1429 = icmp eq %union.tree_node* %call1428, null
  br i1 %tobool1429, label %if.end1473, label %land.lhs.true1430

land.lhs.true1430:                                ; preds = %sw.bb1424
  %code1432 = getelementptr inbounds %union.tree_node* %call1428, i64 0, i32 0, i32 0, i32 2
  %bf.load1433 = load i32* %code1432, align 8
  %bf.clear1434 = and i32 %bf.load1433, 255
  %cmp1435 = icmp eq i32 %bf.clear1434, 29
  br i1 %cmp1435, label %land.lhs.true1437, label %if.end1473

land.lhs.true1437:                                ; preds = %land.lhs.true1430
  %272 = load %union.tree_node** %index, align 8, !tbaa !1
  %code1439 = getelementptr inbounds %union.tree_node* %272, i64 0, i32 0, i32 0, i32 2
  %bf.load1440 = load i32* %code1439, align 8
  %bf.clear1441 = and i32 %bf.load1440, 255
  %cmp1442 = icmp eq i32 %bf.clear1441, 25
  br i1 %cmp1442, label %land.lhs.true1444, label %if.end1473

land.lhs.true1444:                                ; preds = %land.lhs.true1437
  %273 = getelementptr inbounds %union.tree_node* %call1428, i64 0, i32 0, i32 2
  %274 = load i32* %273, align 4, !tbaa !56
  %conv1446 = sext i32 %274 to i64
  %call1447 = call i32 @compare_tree_int(%union.tree_node* %272, i64 %conv1446) #5
  %cmp1448 = icmp slt i32 %call1447, 0
  br i1 %cmp1448, label %land.lhs.true1450, label %if.end1473

land.lhs.true1450:                                ; preds = %land.lhs.true1444
  %idxprom14518276 = zext i32 %bf.clear23 to i64
  %arrayidx1452 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom14518276
  %275 = load i32* %arrayidx1452, align 4, !tbaa !5
  %cmp1453 = icmp eq i32 %275, 1
  br i1 %cmp1453, label %land.lhs.true1455, label %if.end1473

land.lhs.true1455:                                ; preds = %land.lhs.true1450
  %arrayidx1457 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom14518276
  %276 = load i8* %arrayidx1457, align 1, !tbaa !5
  %cmp1459 = icmp eq i8 %276, 1
  %cmp1462 = icmp ne i32 %modifier, 4
  %or.cond6569 = and i1 %cmp1459, %cmp1462
  br i1 %or.cond6569, label %if.then1464, label %if.end1473

if.then1464:                                      ; preds = %land.lhs.true1455
  %int_cst1466 = getelementptr inbounds %union.tree_node* %272, i64 0, i32 0, i32 2
  %low1467 = bitcast i32* %int_cst1466 to i64*
  %277 = load i64* %low1467, align 8, !tbaa !42
  %pointer = getelementptr inbounds %union.tree_node* %call1428, i64 0, i32 0, i32 4
  %278 = load %union.tree_node** %pointer, align 8
  %279 = bitcast %union.tree_node* %278 to i8*
  %arrayidx1469 = getelementptr inbounds i8* %279, i64 %277
  %280 = load i8* %arrayidx1469, align 1, !tbaa !5
  %conv1470 = sext i8 %280 to i64
  %call1471 = call i64 @trunc_int_for_mode(i64 %conv1470, i32 %bf.clear23) #5
  %call1472 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call1471) #5
  br label %return

if.end1473:                                       ; preds = %sw.bb1424, %land.lhs.true1455, %land.lhs.true1450, %land.lhs.true1444, %land.lhs.true1437, %land.lhs.true1430
  %call1474 = call %struct.rtx_def* @expand_expr(%union.tree_node* %271, %struct.rtx_def* null, i32 0, i32 1)
  %call1475 = call %struct.rtx_def* @memory_address(i32 %bf.clear23, %struct.rtx_def* %call1474) #5
  %call1476 = call %struct.rtx_def* @gen_rtx_MEM(i32 %bf.clear23, %struct.rtx_def* %call1475) #5
  call void @set_mem_attributes(%struct.rtx_def* %call1476, %union.tree_node* %exp, i32 0) #5
  %cmp1477 = icmp eq i32 %modifier, 4
  br i1 %cmp1477, label %land.lhs.true1479, label %return

land.lhs.true1479:                                ; preds = %if.end1473
  %call1480 = call i32 @readonly_fields_p(%union.tree_node* %0) #5
  %tobool1481 = icmp eq i32 %call1480, 0
  br i1 %tobool1481, label %return, label %if.then1482

if.then1482:                                      ; preds = %land.lhs.true1479
  %281 = getelementptr inbounds %struct.rtx_def* %call1476, i64 0, i32 0
  %bf.load1483 = load i32* %281, align 8
  %bf.set1485 = or i32 %bf.load1483, 67108864
  store i32 %bf.set1485, i32* %281, align 8
  br label %return

sw.bb1487:                                        ; preds = %if.end185
  %operands1489 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx1490 = bitcast i32* %operands1489 to %union.tree_node**
  %282 = load %union.tree_node** %arrayidx1490, align 8, !tbaa !1
  %type1492 = getelementptr inbounds %union.tree_node* %282, i64 0, i32 0, i32 0, i32 1
  %283 = load %union.tree_node** %type1492, align 8, !tbaa !36
  %code1494 = getelementptr inbounds %union.tree_node* %283, i64 0, i32 0, i32 0, i32 2
  %bf.load1495 = load i32* %code1494, align 8
  %bf.clear1496 = and i32 %bf.load1495, 255
  %cmp1497 = icmp eq i32 %bf.clear1496, 18
  br i1 %cmp1497, label %if.end1500, label %if.then1499

if.then1499:                                      ; preds = %sw.bb1487
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 6703, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.expand_expr, i64 0, i64 0)) #8
  unreachable

if.end1500:                                       ; preds = %sw.bb1487
  %values = getelementptr inbounds %union.tree_node* %283, i64 0, i32 0, i32 1
  %284 = load i8** %values, align 8
  %tobool1507 = icmp eq i8* %284, null
  br i1 %tobool1507, label %cond.end1511, label %cond.true1508

cond.true1508:                                    ; preds = %if.end1500
  %minval = getelementptr inbounds i8* %284, i64 104
  %285 = bitcast i8* %minval to %union.tree_node**
  br label %cond.end1511

cond.end1511:                                     ; preds = %if.end1500, %cond.true1508
  %cond1512.in = phi %union.tree_node** [ %285, %cond.true1508 ], [ getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 11), %if.end1500 ]
  %cond1512 = load %union.tree_node** %cond1512.in, align 8
  %286 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !1
  %arrayidx1516 = getelementptr inbounds i32* %operands1489, i64 2
  %287 = bitcast i32* %arrayidx1516 to %union.tree_node**
  %288 = load %union.tree_node** %287, align 8, !tbaa !1
  %call1517 = call %union.tree_node* @convert(%union.tree_node* %286, %union.tree_node* %288) #5
  %call1518 = call i32 @integer_zerop(%union.tree_node* %cond1512) #5
  %tobool1519 = icmp eq i32 %call1518, 0
  br i1 %tobool1519, label %if.then1520, label %if.end1523

if.then1520:                                      ; preds = %cond.end1511
  %289 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !1
  %call1521 = call %union.tree_node* @convert(%union.tree_node* %289, %union.tree_node* %cond1512) #5
  %call1522 = call %union.tree_node* @size_diffop(%union.tree_node* %call1517, %union.tree_node* %call1521) #5
  br label %if.end1523

if.end1523:                                       ; preds = %cond.end1511, %if.then1520
  %index1513.0 = phi %union.tree_node* [ %call1517, %cond.end1511 ], [ %call1522, %if.then1520 ]
  %290 = and i32 %modifier, -2
  %modifier.cmp = icmp eq i32 %290, 2
  br i1 %modifier.cmp, label %sw.bb1785, label %land.lhs.true1529

land.lhs.true1529:                                ; preds = %if.end1523
  %code1531 = getelementptr inbounds %union.tree_node* %282, i64 0, i32 0, i32 0, i32 2
  %bf.load1532 = load i32* %code1531, align 8
  %bf.clear1533 = and i32 %bf.load1532, 255
  %cmp1534 = icmp eq i32 %bf.clear1533, 29
  br i1 %cmp1534, label %land.lhs.true1536, label %land.lhs.true1577

land.lhs.true1536:                                ; preds = %land.lhs.true1529
  %code1538 = getelementptr inbounds %union.tree_node* %index1513.0, i64 0, i32 0, i32 0, i32 2
  %bf.load1539 = load i32* %code1538, align 8
  %bf.clear1540 = and i32 %bf.load1539, 255
  %cmp1541 = icmp eq i32 %bf.clear1540, 25
  br i1 %cmp1541, label %land.lhs.true1543, label %if.end1571.land.lhs.true1577_crit_edge

land.lhs.true1543:                                ; preds = %land.lhs.true1536
  %291 = getelementptr inbounds %union.tree_node* %282, i64 0, i32 0, i32 2
  %292 = load i32* %291, align 4, !tbaa !56
  %conv1546 = sext i32 %292 to i64
  %call1547 = call i32 @compare_tree_int(%union.tree_node* %index1513.0, i64 %conv1546) #5
  %cmp1548 = icmp slt i32 %call1547, 0
  br i1 %cmp1548, label %land.lhs.true1550, label %if.end1571.land.lhs.true1577_crit_edge

land.lhs.true1550:                                ; preds = %land.lhs.true1543
  %idxprom15518275 = zext i32 %bf.clear23 to i64
  %arrayidx1552 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom15518275
  %293 = load i32* %arrayidx1552, align 4, !tbaa !5
  %cmp1553 = icmp eq i32 %293, 1
  br i1 %cmp1553, label %land.lhs.true1555, label %if.end1571.land.lhs.true1577_crit_edge

land.lhs.true1555:                                ; preds = %land.lhs.true1550
  %arrayidx1557 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom15518275
  %294 = load i8* %arrayidx1557, align 1, !tbaa !5
  %cmp1559 = icmp eq i8 %294, 1
  br i1 %cmp1559, label %if.then1561, label %if.end1571.land.lhs.true1577_crit_edge

if.then1561:                                      ; preds = %land.lhs.true1555
  %int_cst1563 = getelementptr inbounds %union.tree_node* %index1513.0, i64 0, i32 0, i32 2
  %low1564 = bitcast i32* %int_cst1563 to i64*
  %295 = load i64* %low1564, align 8, !tbaa !42
  %pointer1566 = getelementptr inbounds %union.tree_node* %282, i64 0, i32 0, i32 4
  %296 = load %union.tree_node** %pointer1566, align 8
  %297 = bitcast %union.tree_node* %296 to i8*
  %arrayidx1567 = getelementptr inbounds i8* %297, i64 %295
  %298 = load i8* %arrayidx1567, align 1, !tbaa !5
  %conv1568 = sext i8 %298 to i64
  %call1569 = call i64 @trunc_int_for_mode(i64 %conv1568, i32 %bf.clear23) #5
  %call1570 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call1569) #5
  br label %return

if.end1571.land.lhs.true1577_crit_edge:           ; preds = %land.lhs.true1536, %land.lhs.true1543, %land.lhs.true1550, %land.lhs.true1555
  %bf.load1580.pre = load i32* %code1531, align 8
  br label %land.lhs.true1577

land.lhs.true1577:                                ; preds = %if.end1571.land.lhs.true1577_crit_edge, %land.lhs.true1529
  %bf.load1580 = phi i32 [ %bf.load1580.pre, %if.end1571.land.lhs.true1577_crit_edge ], [ %bf.load1532, %land.lhs.true1529 ]
  %299 = and i32 %bf.load1580, 511
  %300 = icmp eq i32 %299, 46
  br i1 %300, label %land.lhs.true1591, label %if.else1640

land.lhs.true1591:                                ; preds = %land.lhs.true1577
  %code1593 = getelementptr inbounds %union.tree_node* %index1513.0, i64 0, i32 0, i32 0, i32 2
  %bf.load1594 = load i32* %code1593, align 8
  %bf.clear1595 = and i32 %bf.load1594, 255
  %cmp1596 = icmp eq i32 %bf.clear1595, 25
  br i1 %cmp1596, label %land.lhs.true1598, label %if.else1640

land.lhs.true1598:                                ; preds = %land.lhs.true1591
  %301 = load %union.tree_node** %arrayidx1490, align 8, !tbaa !1
  %operands1603 = getelementptr inbounds %union.tree_node* %301, i64 0, i32 0, i32 2
  %arrayidx1604 = getelementptr inbounds i32* %operands1603, i64 2
  %302 = bitcast i32* %arrayidx1604 to %union.tree_node**
  %303 = load %union.tree_node** %302, align 8, !tbaa !1
  %call1605 = call i32 @list_length(%union.tree_node* %303) #5
  %conv1606 = sext i32 %call1605 to i64
  %call1607 = call i32 @compare_tree_int(%union.tree_node* %index1513.0, i64 %conv1606) #5
  %cmp1608 = icmp slt i32 %call1607, 0
  br i1 %cmp1608, label %if.then1610, label %if.else1640

if.then1610:                                      ; preds = %land.lhs.true1598
  %304 = load %union.tree_node** %arrayidx1490, align 8, !tbaa !1
  %operands1615 = getelementptr inbounds %union.tree_node* %304, i64 0, i32 0, i32 2
  %arrayidx1616 = getelementptr inbounds i32* %operands1615, i64 2
  %305 = bitcast i32* %arrayidx1616 to %union.tree_node**
  %int_cst1618 = getelementptr inbounds %union.tree_node* %index1513.0, i64 0, i32 0, i32 2
  %low1619 = bitcast i32* %int_cst1618 to i64*
  %306 = load i64* %low1619, align 8, !tbaa !42
  %elem.08517 = load %union.tree_node** %305, align 8
  %cmp16218518 = icmp ne %union.tree_node* %elem.08517, null
  %cmp16248519 = icmp ne i64 %306, 0
  %or.cond66088520 = and i1 %cmp16218518, %cmp16248519
  br i1 %or.cond66088520, label %for.inc1629, label %for.end1632

for.inc1629:                                      ; preds = %if.then1610, %for.inc1629
  %elem.08522 = phi %union.tree_node* [ %elem.0, %for.inc1629 ], [ %elem.08517, %if.then1610 ]
  %i.08521 = phi i64 [ %dec, %for.inc1629 ], [ %306, %if.then1610 ]
  %dec = add nsw i64 %i.08521, -1
  %chain1631 = getelementptr inbounds %union.tree_node* %elem.08522, i64 0, i32 0, i32 0, i32 0
  %elem.0 = load %union.tree_node** %chain1631, align 8
  %cmp1621 = icmp ne %union.tree_node* %elem.0, null
  %cmp1624 = icmp ne i64 %dec, 0
  %or.cond6608 = and i1 %cmp1621, %cmp1624
  br i1 %or.cond6608, label %for.inc1629, label %for.end1632

for.end1632:                                      ; preds = %for.inc1629, %if.then1610
  %cmp1621.lcssa = phi i1 [ %cmp16218518, %if.then1610 ], [ %cmp1621, %for.inc1629 ]
  %elem.0.lcssa = phi %union.tree_node* [ %elem.08517, %if.then1610 ], [ %elem.0, %for.inc1629 ]
  br i1 %cmp1621.lcssa, label %if.then1634, label %sw.bb1785

if.then1634:                                      ; preds = %for.end1632
  %value1636 = getelementptr inbounds %union.tree_node* %elem.0.lcssa, i64 0, i32 0, i32 2
  %307 = bitcast i32* %value1636 to %union.tree_node**
  %308 = load %union.tree_node** %307, align 8, !tbaa !53
  %call1637 = call %union.tree_node* @fold(%union.tree_node* %308) #5
  %call1638 = call %struct.rtx_def* @expand_expr(%union.tree_node* %call1637, %struct.rtx_def* %target.addr.1, i32 %tmode, i32 %modifier)
  br label %return

if.else1640:                                      ; preds = %land.lhs.true1598, %land.lhs.true1591, %land.lhs.true1577
  %309 = load i32* @optimize, align 4, !tbaa !21
  %cmp1641 = icmp slt i32 %309, 1
  %switch8319 = icmp eq i32 %290, 2
  %or.cond8320 = or i1 %cmp1641, %switch8319
  br i1 %or.cond8320, label %sw.bb1785, label %land.lhs.true1649

land.lhs.true1649:                                ; preds = %if.else1640
  %readonly_flag1651 = getelementptr inbounds %union.tree_node* %282, i64 0, i32 0, i32 0, i32 2
  %bf.load1652 = load i32* %readonly_flag1651, align 8
  %310 = and i32 %bf.load1652, 4607
  %311 = icmp eq i32 %310, 4130
  br i1 %311, label %land.lhs.true1670, label %sw.bb1785

land.lhs.true1670:                                ; preds = %land.lhs.true1649
  %initial1672 = getelementptr inbounds %union.tree_node* %282, i64 0, i32 0, i32 12
  %312 = load %union.tree_node** %initial1672, align 8, !tbaa !46
  %tobool1673 = icmp eq %union.tree_node* %312, null
  br i1 %tobool1673, label %sw.bb1785, label %land.lhs.true1674

land.lhs.true1674:                                ; preds = %land.lhs.true1670
  %code1678 = getelementptr inbounds %union.tree_node* %312, i64 0, i32 0, i32 0, i32 2
  %bf.load1679 = load i32* %code1678, align 8
  %bf.clear1680 = and i32 %bf.load1679, 255
  %cmp1681 = icmp eq i32 %bf.clear1680, 0
  br i1 %cmp1681, label %sw.bb1785, label %if.then1683

if.then1683:                                      ; preds = %land.lhs.true1674
  %code1685 = getelementptr inbounds %union.tree_node* %index1513.0, i64 0, i32 0, i32 0, i32 2
  %bf.load1686 = load i32* %code1685, align 8
  %bf.clear1687 = and i32 %bf.load1686, 255
  %cmp1688 = icmp eq i32 %bf.clear1687, 25
  br i1 %cmp1688, label %if.then1690, label %sw.bb1785

if.then1690:                                      ; preds = %if.then1683
  switch i32 %bf.clear1680, label %sw.bb1785 [
    i32 46, label %if.then1699
    i32 29, label %land.lhs.true1740
  ]

if.then1699:                                      ; preds = %if.then1690
  %operands1702 = getelementptr inbounds %union.tree_node* %312, i64 0, i32 0, i32 2
  %arrayidx1703 = getelementptr inbounds i32* %operands1702, i64 2
  %313 = bitcast i32* %arrayidx1703 to %union.tree_node**
  %elem1700.08524 = load %union.tree_node** %313, align 8
  %tobool17058525 = icmp eq %union.tree_node* %elem1700.08524, null
  br i1 %tobool17058525, label %sw.bb1785, label %land.rhs1706

for.cond1704:                                     ; preds = %land.rhs1706
  %chain1715 = getelementptr inbounds %union.tree_node* %elem1700.08526, i64 0, i32 0, i32 0, i32 0
  %elem1700.0 = load %union.tree_node** %chain1715, align 8
  %tobool1705 = icmp eq %union.tree_node* %elem1700.0, null
  br i1 %tobool1705, label %sw.bb1785, label %land.rhs1706

land.rhs1706:                                     ; preds = %if.then1699, %for.cond1704
  %elem1700.08526 = phi %union.tree_node* [ %elem1700.0, %for.cond1704 ], [ %elem1700.08524, %if.then1699 ]
  %purpose = getelementptr inbounds %union.tree_node* %elem1700.08526, i64 0, i32 0, i32 1
  %314 = load i8** %purpose, align 8
  %315 = bitcast i8* %314 to %union.tree_node*
  %call1708 = call i32 @tree_int_cst_equal(%union.tree_node* %315, %union.tree_node* %index1513.0) #5
  %lnot = icmp eq i32 %call1708, 0
  br i1 %lnot, label %for.cond1704, label %land.lhs.true1718

land.lhs.true1718:                                ; preds = %land.rhs1706
  %value1720 = getelementptr inbounds %union.tree_node* %elem1700.08526, i64 0, i32 0, i32 2
  %316 = bitcast i32* %value1720 to %union.tree_node**
  %317 = load %union.tree_node** %316, align 8, !tbaa !53
  %side_effects_flag1722 = getelementptr inbounds %union.tree_node* %317, i64 0, i32 0, i32 0, i32 2
  %bf.load1723 = load i32* %side_effects_flag1722, align 8
  %bf.clear1725 = and i32 %bf.load1723, 256
  %tobool1726 = icmp eq i32 %bf.clear1725, 0
  br i1 %tobool1726, label %if.then1727, label %sw.bb1785

if.then1727:                                      ; preds = %land.lhs.true1718
  %call1730 = call %union.tree_node* @fold(%union.tree_node* %317) #5
  %call1731 = call %struct.rtx_def* @expand_expr(%union.tree_node* %call1730, %struct.rtx_def* %target.addr.1, i32 %tmode, i32 %modifier)
  br label %return

land.lhs.true1740:                                ; preds = %if.then1690
  %318 = getelementptr inbounds %union.tree_node* %312, i64 0, i32 0, i32 2
  %319 = load i32* %318, align 4, !tbaa !56
  %conv1743 = sext i32 %319 to i64
  %call1744 = call i32 @compare_tree_int(%union.tree_node* %index1513.0, i64 %conv1743) #5
  %cmp1745 = icmp slt i32 %call1744, 0
  br i1 %cmp1745, label %if.then1747, label %sw.bb1785

if.then1747:                                      ; preds = %land.lhs.true1740
  %type1750 = getelementptr inbounds %union.tree_node* %312, i64 0, i32 0, i32 0, i32 1
  %320 = load %union.tree_node** %type1750, align 8, !tbaa !36
  %type1752 = getelementptr inbounds %union.tree_node* %320, i64 0, i32 0, i32 0, i32 1
  %321 = load %union.tree_node** %type1752, align 8, !tbaa !36
  %type1754 = bitcast %union.tree_node* %321 to %struct.tree_type*
  %mode1755 = getelementptr inbounds %struct.tree_type* %type1754, i64 0, i32 6
  %bf.load1756 = load i32* %mode1755, align 4
  %bf.lshr1757 = lshr i32 %bf.load1756, 9
  %bf.clear1758 = and i32 %bf.lshr1757, 127
  %idxprom17598274 = zext i32 %bf.clear1758 to i64
  %arrayidx1760 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom17598274
  %322 = load i32* %arrayidx1760, align 4, !tbaa !5
  %cmp1761 = icmp eq i32 %322, 1
  br i1 %cmp1761, label %land.lhs.true1763, label %sw.bb1785

land.lhs.true1763:                                ; preds = %if.then1747
  %arrayidx1765 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom17598274
  %323 = load i8* %arrayidx1765, align 1, !tbaa !5
  %cmp1767 = icmp eq i8 %323, 1
  br i1 %cmp1767, label %if.then1769, label %sw.bb1785

if.then1769:                                      ; preds = %land.lhs.true1763
  %int_cst1771 = getelementptr inbounds %union.tree_node* %index1513.0, i64 0, i32 0, i32 2
  %low1772 = bitcast i32* %int_cst1771 to i64*
  %324 = load i64* %low1772, align 8, !tbaa !42
  %pointer1774 = getelementptr inbounds %union.tree_node* %312, i64 0, i32 0, i32 4
  %325 = load %union.tree_node** %pointer1774, align 8
  %326 = bitcast %union.tree_node* %325 to i8*
  %arrayidx1775 = getelementptr inbounds i8* %326, i64 %324
  %327 = load i8* %arrayidx1775, align 1, !tbaa !5
  %conv1776 = sext i8 %327 to i64
  %call1777 = call i64 @trunc_int_for_mode(i64 %conv1776, i32 %bf.clear1758) #5
  %call1778 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call1777) #5
  br label %return

sw.bb1785:                                        ; preds = %for.cond1704, %if.end1523, %if.then1699, %if.else1640, %if.then1690, %land.lhs.true1649, %land.lhs.true1718, %land.lhs.true1674, %land.lhs.true1670, %for.end1632, %if.then1683, %land.lhs.true1740, %land.lhs.true1763, %if.then1747, %if.end185, %if.end185, %if.end185
  %cmp1786 = icmp eq i32 %bf.clear6, 39
  br i1 %cmp1786, label %land.lhs.true1788, label %if.end1916

land.lhs.true1788:                                ; preds = %sw.bb1785
  %operands1790 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx1791 = bitcast i32* %operands1790 to %union.tree_node**
  %328 = load %union.tree_node** %arrayidx1791, align 8, !tbaa !1
  %code1793 = getelementptr inbounds %union.tree_node* %328, i64 0, i32 0, i32 0, i32 2
  %bf.load1794 = load i32* %code1793, align 8
  %bf.clear1795 = and i32 %bf.load1794, 255
  %cmp1796 = icmp eq i32 %bf.clear1795, 46
  br i1 %cmp1796, label %land.lhs.true1798, label %if.end1916

land.lhs.true1798:                                ; preds = %land.lhs.true1788
  %rtl1803 = getelementptr inbounds %union.tree_node* %328, i64 0, i32 0, i32 1
  %329 = load i8** %rtl1803, align 8
  %cmp1804 = icmp eq i8* %329, null
  br i1 %cmp1804, label %if.then1806, label %if.end1916

if.then1806:                                      ; preds = %land.lhs.true1798
  %operands1812 = getelementptr inbounds %union.tree_node* %328, i64 0, i32 0, i32 2
  %arrayidx1813 = getelementptr inbounds i32* %operands1812, i64 2
  %330 = bitcast i32* %arrayidx1813 to %union.tree_node**
  %elt1807.08514 = load %union.tree_node** %330, align 8
  %tobool18158515 = icmp eq %union.tree_node* %elt1807.08514, null
  br i1 %tobool18158515, label %if.end1916, label %for.body1816.lr.ph

for.body1816.lr.ph:                               ; preds = %if.then1806
  %arrayidx1821 = getelementptr inbounds i32* %operands1790, i64 2
  %331 = bitcast i32* %arrayidx1821 to %union.tree_node**
  %332 = load %union.tree_node** %331, align 8, !tbaa !1
  br label %for.body1816

for.body1816:                                     ; preds = %for.body1816.lr.ph, %for.inc1912
  %elt1807.08516 = phi %union.tree_node* [ %elt1807.08514, %for.body1816.lr.ph ], [ %elt1807.0, %for.inc1912 ]
  %purpose1818 = getelementptr inbounds %union.tree_node* %elt1807.08516, i64 0, i32 0, i32 1
  %333 = load i8** %purpose1818, align 8
  %334 = bitcast i8* %333 to %union.tree_node*
  %cmp1822 = icmp eq %union.tree_node* %334, %332
  br i1 %cmp1822, label %land.lhs.true1824, label %for.inc1912

land.lhs.true1824:                                ; preds = %for.body1816
  %bit_field_flag = getelementptr inbounds i8* %333, i64 48
  %335 = bitcast i8* %bit_field_flag to i64*
  %bf.load1828 = load i64* %335, align 8
  %bf.cast1831 = and i64 %bf.load1828, 4096
  %tobool1832 = icmp eq i64 %bf.cast1831, 0
  br i1 %tobool1832, label %if.then1858, label %lor.lhs.false1833

lor.lhs.false1833:                                ; preds = %land.lhs.true1824
  %bf.cast1840 = and i64 %bf.load1828, 255
  %arrayidx1842 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %bf.cast1840
  %336 = load i32* %arrayidx1842, align 4, !tbaa !5
  %cmp1843 = icmp eq i32 %336, 1
  br i1 %cmp1843, label %land.lhs.true1845, label %for.inc1912

land.lhs.true1845:                                ; preds = %lor.lhs.false1833
  %arrayidx1854 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %bf.cast1840
  %337 = load i16* %arrayidx1854, align 2, !tbaa !19
  %cmp1856 = icmp ult i16 %337, 65
  br i1 %cmp1856, label %if.then1858, label %for.inc1912

if.then1858:                                      ; preds = %land.lhs.true1824, %land.lhs.true1845
  %value1860 = getelementptr inbounds %union.tree_node* %elt1807.08516, i64 0, i32 0, i32 2
  %338 = bitcast i32* %value1860 to %union.tree_node**
  %339 = load %union.tree_node** %338, align 8, !tbaa !53
  %call1861 = call %struct.rtx_def* @expand_expr(%union.tree_node* %339, %struct.rtx_def* %target.addr.1, i32 %tmode, i32 %modifier)
  %340 = load i8** %purpose1818, align 8
  %bit_field_flag1865 = getelementptr inbounds i8* %340, i64 48
  %341 = bitcast i8* %bit_field_flag1865 to i64*
  %bf.load1866 = load i64* %341, align 8
  %bf.cast1869 = and i64 %bf.load1866, 4096
  %tobool1870 = icmp eq i64 %bf.cast1869, 0
  br i1 %tobool1870, label %return, label %if.then1871

if.then1871:                                      ; preds = %if.then1858
  %size1875 = getelementptr inbounds i8* %340, i64 40
  %342 = bitcast i8* %size1875 to %union.tree_node**
  %343 = load %union.tree_node** %342, align 8, !tbaa !39
  %int_cst1877 = getelementptr inbounds %union.tree_node* %343, i64 0, i32 0, i32 2
  %low1878 = bitcast i32* %int_cst1877 to i64*
  %344 = load i64* %low1878, align 8, !tbaa !42
  %type1882 = getelementptr inbounds i8* %340, i64 8
  %345 = bitcast i8* %type1882 to %union.tree_node**
  %346 = load %union.tree_node** %345, align 8, !tbaa !36
  %type1883 = bitcast %union.tree_node* %346 to %struct.tree_type*
  %mode1884 = getelementptr inbounds %struct.tree_type* %type1883, i64 0, i32 6
  %bf.load1885 = load i32* %mode1884, align 4
  %bf.lshr1886 = lshr i32 %bf.load1885, 9
  %bf.clear1887 = and i32 %bf.lshr1886, 127
  %unsigned_flag1893 = getelementptr inbounds %union.tree_node* %346, i64 0, i32 0, i32 0, i32 2
  %bf.load1894 = load i32* %unsigned_flag1893, align 8
  %bf.clear1896 = and i32 %bf.load1894, 8192
  %tobool1897 = icmp eq i32 %bf.clear1896, 0
  br i1 %tobool1897, label %if.else1901, label %if.then1898

if.then1898:                                      ; preds = %if.then1871
  %shl = shl i64 1, %344
  %sub = add nsw i64 %shl, -1
  %call1899 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %sub) #5
  %call1900 = call %struct.rtx_def* @expand_and(i32 %bf.clear1887, %struct.rtx_def* %call1861, %struct.rtx_def* %call1899, %struct.rtx_def* %target.addr.1) #5
  br label %return

if.else1901:                                      ; preds = %if.then1871
  %idxprom19028271 = zext i32 %bf.clear1887 to i64
  %arrayidx1903 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom19028271
  %347 = load i16* %arrayidx1903, align 2, !tbaa !19
  %conv1904 = zext i16 %347 to i64
  %sub1905 = sub nsw i64 %conv1904, %344
  %call1906 = call %union.tree_node* @build_int_2_wide(i64 %sub1905, i64 0) #5
  %call1907 = call %struct.rtx_def* @expand_shift(i32 82, i32 %bf.clear1887, %struct.rtx_def* %call1861, %union.tree_node* %call1906, %struct.rtx_def* %target.addr.1, i32 0) #5
  %call1908 = call %struct.rtx_def* @expand_shift(i32 83, i32 %bf.clear1887, %struct.rtx_def* %call1907, %union.tree_node* %call1906, %struct.rtx_def* %target.addr.1, i32 0) #5
  br label %return

for.inc1912:                                      ; preds = %for.body1816, %lor.lhs.false1833, %land.lhs.true1845
  %chain1914 = getelementptr inbounds %union.tree_node* %elt1807.08516, i64 0, i32 0, i32 0, i32 0
  %elt1807.0 = load %union.tree_node** %chain1914, align 8
  %tobool1815 = icmp eq %union.tree_node* %elt1807.0, null
  br i1 %tobool1815, label %if.end1916, label %for.body1816

if.end1916:                                       ; preds = %for.inc1912, %if.then1806, %land.lhs.true1798, %land.lhs.true1788, %sw.bb1785
  store i32 0, i32* %volatilep, align 4, !tbaa !21
  %call1918 = call %union.tree_node* @get_inner_reference(%union.tree_node* %exp, i64* %bitsize1917, i64* %bitpos, %union.tree_node** %offset, i32* %mode1, i32* %unsignedp, i32* %volatilep)
  %cmp1919 = icmp eq %union.tree_node* %call1918, %exp
  br i1 %cmp1919, label %if.then1921, label %if.end1922

if.then1921:                                      ; preds = %if.end1916
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 6877, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.expand_expr, i64 0, i64 0)) #8
  unreachable

if.end1922:                                       ; preds = %if.end1916
  %type1924 = getelementptr inbounds %union.tree_node* %call1918, i64 0, i32 0, i32 0, i32 1
  %348 = load %union.tree_node** %type1924, align 8, !tbaa !36
  %code1926 = getelementptr inbounds %union.tree_node* %348, i64 0, i32 0, i32 0, i32 2
  %bf.load1927 = load i32* %code1926, align 8
  %bf.clear1928 = and i32 %bf.load1927, 255
  %cmp1929 = icmp eq i32 %bf.clear1928, 21
  br i1 %cmp1929, label %land.lhs.true1931, label %cond.end1944

land.lhs.true1931:                                ; preds = %if.end1922
  %size1935 = getelementptr inbounds %union.tree_node* %348, i64 0, i32 0, i32 2
  %349 = bitcast i32* %size1935 to %union.tree_node**
  %350 = load %union.tree_node** %349, align 8, !tbaa !40
  %code1937 = getelementptr inbounds %union.tree_node* %350, i64 0, i32 0, i32 0, i32 2
  %bf.load1938 = load i32* %code1937, align 8
  %bf.clear1939 = and i32 %bf.load1938, 255
  %cmp1940 = icmp ne i32 %bf.clear1939, 25
  %. = select i1 %cmp1940, %struct.rtx_def* %target.addr.1, %struct.rtx_def* null
  br label %cond.end1944

cond.end1944:                                     ; preds = %land.lhs.true1931, %if.end1922
  %cond1945 = phi %struct.rtx_def* [ null, %if.end1922 ], [ %., %land.lhs.true1931 ]
  %351 = and i32 %modifier, -2
  %352 = icmp eq i32 %351, 2
  %cond1954 = select i1 %352, i32 %modifier, i32 0
  %call1955 = call %struct.rtx_def* @expand_expr(%union.tree_node* %call1918, %struct.rtx_def* %cond1945, i32 0, i32 %cond1954)
  %353 = getelementptr inbounds %struct.rtx_def* %call1955, i64 0, i32 0
  %bf.load1956 = load i32* %353, align 8
  %bf.clear1957 = and i32 %bf.load1956, 65535
  switch i32 %bf.clear1957, label %cond.end1944.if.end2015_crit_edge [
    i32 67, label %if.then1995
    i32 68, label %if.then1995
    i32 54, label %if.then1995
    i32 55, label %if.then1995
    i32 58, label %if.then1995
    i32 134, label %if.then1995
    i32 56, label %if.then1995
    i32 140, label %if.then1995
  ]

cond.end1944.if.end2015_crit_edge:                ; preds = %cond.end1944
  %.pre8569 = load %union.tree_node** %offset, align 8, !tbaa !1
  br label %if.end2015

if.then1995:                                      ; preds = %cond.end1944, %cond.end1944, %cond.end1944, %cond.end1944, %cond.end1944, %cond.end1944, %cond.end1944, %cond.end1944
  %354 = load %union.tree_node** %type1924, align 8, !tbaa !36
  %type1999 = bitcast %union.tree_node* %354 to %struct.tree_type*
  %mode2000 = getelementptr inbounds %struct.tree_type* %type1999, i64 0, i32 6
  %bf.load2001 = load i32* %mode2000, align 4
  %bf.lshr2002 = lshr i32 %bf.load2001, 9
  %bf.clear2003 = and i32 %bf.lshr2002, 127
  %cmp2004 = icmp ne i32 %bf.clear2003, 51
  %355 = load %union.tree_node** %offset, align 8
  %cmp2007 = icmp eq %union.tree_node* %355, null
  %or.cond6575 = and i1 %cmp2004, %cmp2007
  br i1 %or.cond6575, label %if.end2015.thread, label %if.else2011

if.end2015.thread:                                ; preds = %if.then1995
  %call2010 = call %struct.rtx_def* @force_reg(i32 %bf.clear2003, %struct.rtx_def* %call1955) #5
  br label %if.end2178

if.else2011:                                      ; preds = %if.then1995
  %call2012 = call %struct.rtx_def* @force_const_mem(i32 %bf.clear2003, %struct.rtx_def* %call1955) #5
  %call2013 = call %struct.rtx_def* @validize_mem(%struct.rtx_def* %call2012) #5
  br label %if.end2015

if.end2015:                                       ; preds = %cond.end1944.if.end2015_crit_edge, %if.else2011
  %356 = phi %union.tree_node* [ %355, %if.else2011 ], [ %.pre8569, %cond.end1944.if.end2015_crit_edge ]
  %op0.1 = phi %struct.rtx_def* [ %call2013, %if.else2011 ], [ %call1955, %cond.end1944.if.end2015_crit_edge ]
  %cmp2016 = icmp eq %union.tree_node* %356, null
  br i1 %cmp2016, label %if.end2178, label %if.then2018

if.then2018:                                      ; preds = %if.end2015
  %call2019 = call %struct.rtx_def* @expand_expr(%union.tree_node* %356, %struct.rtx_def* null, i32 0, i32 1)
  %357 = getelementptr inbounds %struct.rtx_def* %op0.1, i64 0, i32 0
  %bf.load2020 = load i32* %357, align 8
  %bf.clear2021 = and i32 %bf.load2020, 65535
  switch i32 %bf.clear2021, label %if.end2111 [
    i32 61, label %if.then2039
    i32 63, label %if.then2039
    i32 65, label %if.then2039
    i32 70, label %if.then2039
  ]

if.then2039:                                      ; preds = %if.then2018, %if.then2018, %if.then2018, %if.then2018
  %operands2041 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx2042 = bitcast i32* %operands2041 to %union.tree_node**
  %358 = load %union.tree_node** %arrayidx2042, align 8, !tbaa !1
  %code2044 = getelementptr inbounds %union.tree_node* %358, i64 0, i32 0, i32 0, i32 2
  %bf.load2045 = load i32* %code2044, align 8
  %bf.clear2046 = and i32 %bf.load2045, 255
  %cmp2047 = icmp eq i32 %bf.clear2046, 118
  br i1 %cmp2047, label %if.then2049, label %if.else2059

if.then2049:                                      ; preds = %if.then2039
  call void @put_var_into_stack(%union.tree_node* %358) #5
  %359 = load %union.tree_node** %arrayidx2042, align 8, !tbaa !1
  %operands2057 = getelementptr inbounds %union.tree_node* %359, i64 0, i32 0, i32 2
  %arrayidx2058 = getelementptr inbounds i32* %operands2057, i64 4
  %360 = bitcast i32* %arrayidx2058 to %struct.rtx_def**
  %361 = load %struct.rtx_def** %360, align 8, !tbaa !1
  br label %if.end2111

if.else2059:                                      ; preds = %if.then2039
  %362 = load %union.tree_node** %type1924, align 8, !tbaa !36
  %readonly_flag2065 = getelementptr inbounds %union.tree_node* %362, i64 0, i32 0, i32 0, i32 2
  %bf.load2066 = load i32* %readonly_flag2065, align 8
  %363 = lshr i32 %bf.load2066, 10
  %mul2077 = and i32 %363, 2
  %type2081 = bitcast %union.tree_node* %362 to %struct.tree_type*
  %restrict_flag2082 = getelementptr inbounds %struct.tree_type* %type2081, i64 0, i32 6
  %bf.load2083 = load i32* %restrict_flag2082, align 4
  %364 = lshr i32 %bf.load2083, 19
  %mul2086 = and i32 %364, 4
  %bf.clear2093 = and i32 %bf.load2066, 255
  %cmp2094 = icmp eq i32 %bf.clear2093, 20
  br i1 %cmp2094, label %land.rhs2096, label %land.end2102

land.rhs2096:                                     ; preds = %if.else2059
  %type2100 = getelementptr inbounds %union.tree_node* %362, i64 0, i32 0, i32 0, i32 1
  %365 = load %union.tree_node** %type2100, align 8, !tbaa !36
  %tobool2101 = icmp ne %union.tree_node* %365, null
  br label %land.end2102

land.end2102:                                     ; preds = %land.rhs2096, %if.else2059
  %366 = phi i1 [ false, %if.else2059 ], [ %tobool2101, %land.rhs2096 ]
  %land.ext2103 = zext i1 %366 to i32
  %mul2104 = shl nuw nsw i32 %land.ext2103, 3
  %or2078 = or i32 %mul2077, %mul2086
  %or2087 = or i32 %or2078, %mul2104
  %or2106 = or i32 %or2087, 1
  %call2107 = call %union.tree_node* @build_qualified_type(%union.tree_node* %362, i32 %or2106) #5
  %call2108 = call %struct.rtx_def* @assign_temp(%union.tree_node* %call2107, i32 1, i32 1, i32 1) #5
  %call2109 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call2108, %struct.rtx_def* %op0.1)
  br label %if.end2111

if.end2111:                                       ; preds = %if.then2018, %if.then2049, %land.end2102
  %op0.2 = phi %struct.rtx_def* [ %361, %if.then2049 ], [ %call2108, %land.end2102 ], [ %op0.1, %if.then2018 ]
  %367 = getelementptr inbounds %struct.rtx_def* %op0.2, i64 0, i32 0
  %bf.load2112 = load i32* %367, align 8
  %bf.clear2113 = and i32 %bf.load2112, 65535
  %cmp2114 = icmp eq i32 %bf.clear2113, 66
  br i1 %cmp2114, label %if.end2117, label %if.then2116

if.then2116:                                      ; preds = %if.end2111
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 6938, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.expand_expr, i64 0, i64 0)) #8
  unreachable

if.end2117:                                       ; preds = %if.end2111
  %368 = getelementptr inbounds %struct.rtx_def* %call2019, i64 0, i32 0
  %bf.load2118 = load i32* %368, align 8
  %bf.lshr2119 = lshr i32 %bf.load2118, 16
  %bf.clear2120 = and i32 %bf.lshr2119, 255
  %369 = load i32* @ptr_mode, align 4, !tbaa !5
  %cmp2121 = icmp eq i32 %bf.clear2120, %369
  br i1 %cmp2121, label %if.end2125, label %if.then2123

if.then2123:                                      ; preds = %if.end2117
  %call.i8419 = call %struct.rtx_def* @convert_modes(i32 %369, i32 0, %struct.rtx_def* %call2019, i32 0) #5
  %bf.load2126.pre = load i32* %367, align 8
  br label %if.end2125

if.end2125:                                       ; preds = %if.end2117, %if.then2123
  %bf.load2126 = phi i32 [ %bf.load2126.pre, %if.then2123 ], [ %bf.load2112, %if.end2117 ]
  %offset_rtx.0 = phi %struct.rtx_def* [ %call.i8419, %if.then2123 ], [ %call2019, %if.end2117 ]
  %370 = and i32 %bf.load2126, 16777215
  %371 = icmp eq i32 %370, 3342402
  br i1 %371, label %land.lhs.true2136, label %if.end2175

land.lhs.true2136:                                ; preds = %if.end2125
  %fld2137 = getelementptr inbounds %struct.rtx_def* %op0.2, i64 0, i32 1
  %rtx2139 = bitcast [1 x %union.rtunion_def]* %fld2137 to %struct.rtx_def**
  %372 = load %struct.rtx_def** %rtx2139, align 8, !tbaa !1
  %373 = getelementptr inbounds %struct.rtx_def* %372, i64 0, i32 0
  %bf.load2140 = load i32* %373, align 8
  %bf.clear2142 = and i32 %bf.load2140, 16711680
  %cmp2143 = icmp ne i32 %bf.clear2142, 0
  %374 = load i64* %bitsize1917, align 8
  %cmp2146 = icmp ne i64 %374, 0
  %or.cond6576 = and i1 %cmp2143, %cmp2146
  br i1 %or.cond6576, label %land.lhs.true2148, label %if.end2175

land.lhs.true2148:                                ; preds = %land.lhs.true2136
  %375 = load i64* %bitpos, align 8, !tbaa !22
  %rem = srem i64 %375, %374
  %cmp2149 = icmp eq i64 %rem, 0
  br i1 %cmp2149, label %land.lhs.true2151, label %if.end2175

land.lhs.true2151:                                ; preds = %land.lhs.true2148
  %376 = load i32* %mode1, align 4, !tbaa !5
  %call2152 = call i32 @get_mode_alignment(i32 %376) #5
  %conv2153 = zext i32 %call2152 to i64
  %rem2154 = srem i64 %374, %conv2153
  %cmp2155 = icmp eq i64 %rem2154, 0
  br i1 %cmp2155, label %land.lhs.true2157, label %if.end2175

land.lhs.true2157:                                ; preds = %land.lhs.true2151
  %arrayidx2159 = getelementptr inbounds %struct.rtx_def* %op0.2, i64 0, i32 1, i64 1
  %rtmem = bitcast %union.rtunion_def* %arrayidx2159 to %struct.mem_attrs**
  %377 = load %struct.mem_attrs** %rtmem, align 8, !tbaa !1
  %cmp2160 = icmp eq %struct.mem_attrs* %377, null
  br i1 %cmp2160, label %cond.end2168, label %cond.true2162

cond.true2162:                                    ; preds = %land.lhs.true2157
  %align2166 = getelementptr inbounds %struct.mem_attrs* %377, i64 0, i32 4
  %378 = load i32* %align2166, align 4, !tbaa !27
  br label %cond.end2168

cond.end2168:                                     ; preds = %land.lhs.true2157, %cond.true2162
  %cond2169 = phi i32 [ %378, %cond.true2162 ], [ 8, %land.lhs.true2157 ]
  %call2170 = call i32 @get_mode_alignment(i32 %376) #5
  %cmp2171 = icmp eq i32 %cond2169, %call2170
  br i1 %cmp2171, label %if.then2173, label %if.end2175

if.then2173:                                      ; preds = %cond.end2168
  %div = sdiv i64 %375, 8
  %call2174 = call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %op0.2, i32 %376, i64 %div, i32 1, i32 1) #5
  store i64 0, i64* %bitpos, align 8, !tbaa !22
  br label %if.end2175

if.end2175:                                       ; preds = %if.then2173, %cond.end2168, %land.lhs.true2151, %land.lhs.true2148, %land.lhs.true2136, %if.end2125
  %op0.3 = phi %struct.rtx_def* [ %call2174, %if.then2173 ], [ %op0.2, %cond.end2168 ], [ %op0.2, %land.lhs.true2151 ], [ %op0.2, %land.lhs.true2148 ], [ %op0.2, %land.lhs.true2136 ], [ %op0.2, %if.end2125 ]
  %call2176 = call fastcc i64 @highest_pow2_factor(%union.tree_node* %356)
  %call2177 = call %struct.rtx_def* @offset_address(%struct.rtx_def* %op0.3, %struct.rtx_def* %offset_rtx.0, i64 %call2176) #5
  br label %if.end2178

if.end2178:                                       ; preds = %if.end2015.thread, %if.end2015, %if.end2175
  %379 = phi %union.tree_node* [ %356, %if.end2175 ], [ null, %if.end2015 ], [ null, %if.end2015.thread ]
  %op0.4 = phi %struct.rtx_def* [ %call2177, %if.end2175 ], [ %op0.1, %if.end2015 ], [ %call2010, %if.end2015.thread ]
  %380 = getelementptr inbounds %struct.rtx_def* %op0.4, i64 0, i32 0
  %bf.load2179 = load i32* %380, align 8
  %bf.clear2180 = and i32 %bf.load2179, 65535
  %cmp2181 = icmp eq i32 %bf.clear2180, 66
  %381 = load i64* %bitpos, align 8
  %cmp2184 = icmp eq i64 %381, 0
  %or.cond6577 = and i1 %cmp2181, %cmp2184
  %cmp2187 = icmp ne %union.tree_node* %379, null
  %or.cond6578 = and i1 %or.cond6577, %cmp2187
  br i1 %or.cond6578, label %while.cond.i8409, label %if.end2193

while.cond.i8409:                                 ; preds = %if.end2178, %while.body.i8412
  %offset.addr.0.i = phi %union.tree_node* [ %382, %while.body.i8412 ], [ %379, %if.end2178 ]
  %code.i8406 = getelementptr inbounds %union.tree_node* %offset.addr.0.i, i64 0, i32 0, i32 0, i32 2
  %bf.load.i8407 = load i32* %code.i8406, align 8
  %bf.clear.i8408 = and i32 %bf.load.i8407, 255
  switch i32 %bf.clear.i8408, label %if.end2193 [
    i32 116, label %while.body.i8412
    i32 115, label %while.body.i8412
    i32 114, label %while.body.i8412
    i32 58, label %while.body.i8412
    i32 88, label %lor.lhs.false23.i
  ]

while.body.i8412:                                 ; preds = %while.cond.i8409, %while.cond.i8409, %while.cond.i8409, %while.cond.i8409
  %operands.i8410 = getelementptr inbounds %union.tree_node* %offset.addr.0.i, i64 0, i32 0, i32 2
  %arrayidx.i8411 = bitcast i32* %operands.i8410 to %union.tree_node**
  %382 = load %union.tree_node** %arrayidx.i8411, align 8, !tbaa !1
  br label %while.cond.i8409

lor.lhs.false23.i:                                ; preds = %while.cond.i8409
  %operands25.i = getelementptr inbounds %union.tree_node* %offset.addr.0.i, i64 0, i32 0, i32 2
  %arrayidx26.i = getelementptr inbounds i32* %operands25.i, i64 2
  %383 = bitcast i32* %arrayidx26.i to %union.tree_node**
  %384 = load %union.tree_node** %383, align 8, !tbaa !1
  %call.i8413 = call i32 @host_integerp(%union.tree_node* %384, i32 1) #5
  %tobool.i8414 = icmp eq i32 %call.i8413, 0
  br i1 %tobool.i8414, label %if.end2193, label %lor.lhs.false27.i

lor.lhs.false27.i:                                ; preds = %lor.lhs.false23.i
  %385 = load %union.tree_node** %383, align 8, !tbaa !1
  %call31.i = call i32 @compare_tree_int(%union.tree_node* %385, i64 128) #5
  %cmp32.i = icmp slt i32 %call31.i, 1
  br i1 %cmp32.i, label %if.end2193, label %lor.lhs.false33.i

lor.lhs.false33.i:                                ; preds = %lor.lhs.false27.i
  %386 = load %union.tree_node** %383, align 8, !tbaa !1
  %call37.i = call i64 @tree_low_cst(%union.tree_node* %386, i32 1) #5
  %add.i = add nsw i64 %call37.i, 1
  %call38.i = call i32 @exact_log2_wide(i64 %add.i) #5
  br label %while.cond44.i

while.cond44.i:                                   ; preds = %while.cond44.i, %lor.lhs.false33.i
  %offset.addr.1.in.in.i = phi i32* [ %operands25.i, %lor.lhs.false33.i ], [ %operands65.i, %while.cond44.i ]
  %offset.addr.1.in.i = bitcast i32* %offset.addr.1.in.in.i to %union.tree_node**
  %offset.addr.1.i = load %union.tree_node** %offset.addr.1.in.i, align 8
  %code46.i = getelementptr inbounds %union.tree_node* %offset.addr.1.i, i64 0, i32 0, i32 0, i32 2
  %bf.load47.i = load i32* %code46.i, align 8
  %bf.clear48.i = and i32 %bf.load47.i, 255
  %bf.clear48.off.i = add i32 %bf.clear48.i, -114
  %switch.i8415 = icmp ult i32 %bf.clear48.off.i, 3
  %operands65.i = getelementptr inbounds %union.tree_node* %offset.addr.1.i, i64 0, i32 0, i32 2
  br i1 %switch.i8415, label %while.cond44.i, label %lor.rhs56.i

lor.rhs56.i:                                      ; preds = %while.cond44.i
  %cmp72.i = icmp eq i32 %bf.clear48.i, 77
  br i1 %cmp72.i, label %while.cond78.i, label %if.end2193

while.cond78.i:                                   ; preds = %lor.rhs56.i, %while.cond78.i
  %offset.addr.1.pn.i = phi %union.tree_node* [ %offset.addr.2.i, %while.cond78.i ], [ %offset.addr.1.i, %lor.rhs56.i ]
  %offset.addr.2.in.in.i = getelementptr inbounds %union.tree_node* %offset.addr.1.pn.i, i64 0, i32 0, i32 2
  %offset.addr.2.in.i = bitcast i32* %offset.addr.2.in.in.i to %union.tree_node**
  %offset.addr.2.i = load %union.tree_node** %offset.addr.2.in.i, align 8
  %code80.i = getelementptr inbounds %union.tree_node* %offset.addr.2.i, i64 0, i32 0, i32 0, i32 2
  %bf.load81.i = load i32* %code80.i, align 8
  %bf.clear82.i = and i32 %bf.load81.i, 255
  %bf.clear82.off.i = add i32 %bf.clear82.i, -114
  %switch153.i = icmp ult i32 %bf.clear82.off.i, 3
  br i1 %switch153.i, label %while.cond78.i, label %lor.rhs90.i

lor.rhs90.i:                                      ; preds = %while.cond78.i
  %cmp106.i = icmp eq i32 %bf.clear82.i, 121
  br i1 %cmp106.i, label %land.rhs.i8416, label %if.end2193

land.rhs.i8416:                                   ; preds = %lor.rhs90.i
  %operands108.i = getelementptr inbounds %union.tree_node* %offset.addr.2.i, i64 0, i32 0, i32 2
  %arrayidx109.i = bitcast i32* %operands108.i to %union.tree_node**
  %387 = load %union.tree_node** %arrayidx109.i, align 8, !tbaa !1
  %cmp110.i = icmp eq %union.tree_node* %387, %call1918
  br i1 %cmp110.i, label %if.then2192, label %lor.rhs111.i

lor.rhs111.i:                                     ; preds = %land.rhs.i8416
  %code116.i = getelementptr inbounds %union.tree_node* %387, i64 0, i32 0, i32 0, i32 2
  %bf.load117.i = load i32* %code116.i, align 8
  %bf.clear118.i = and i32 %bf.load117.i, 255
  %cmp119.i = icmp eq i32 %bf.clear118.i, 57
  br i1 %cmp119.i, label %land.rhs120.i, label %if.end2193

land.rhs120.i:                                    ; preds = %lor.rhs111.i
  %type.i8417 = getelementptr inbounds %union.tree_node* %387, i64 0, i32 0, i32 0, i32 1
  %388 = load %union.tree_node** %type.i8417, align 8, !tbaa !36
  %389 = load %union.tree_node** %type1924, align 8, !tbaa !36
  %cmp127.i = icmp eq %union.tree_node* %388, %389
  br i1 %cmp127.i, label %if.then2192, label %if.end2193

if.then2192:                                      ; preds = %land.rhs.i8416, %land.rhs120.i
  call void @set_mem_align(%struct.rtx_def* %op0.4, i32 128) #5
  br label %if.end2193

if.end2193:                                       ; preds = %while.cond.i8409, %lor.rhs111.i, %lor.rhs90.i, %land.rhs120.i, %lor.rhs56.i, %lor.lhs.false27.i, %lor.lhs.false23.i, %if.then2192, %if.end2178
  %bf.load2194 = load i32* %380, align 8
  %bf.clear2195 = and i32 %bf.load2194, 65535
  %cmp2196 = icmp eq i32 %bf.clear2195, 66
  %390 = load i32* %volatilep, align 4
  %tobool2199 = icmp ne i32 %390, 0
  %or.cond6579 = and i1 %cmp2196, %tobool2199
  %bf.clear2203 = and i32 %bf.load2194, 134217728
  %tobool2204 = icmp eq i32 %bf.clear2203, 0
  %or.cond8294 = and i1 %or.cond6579, %tobool2204
  br i1 %or.cond8294, label %if.then2205, label %if.end2214

if.then2205:                                      ; preds = %if.end2193
  %cmp2206 = icmp eq %struct.rtx_def* %op0.4, %call1955
  br i1 %cmp2206, label %if.then2208, label %if.end2210

if.then2208:                                      ; preds = %if.then2205
  %call2209 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %call1955) #5
  %.phi.trans.insert8570 = getelementptr inbounds %struct.rtx_def* %call2209, i64 0, i32 0
  %bf.load2211.pre = load i32* %.phi.trans.insert8570, align 8
  br label %if.end2210

if.end2210:                                       ; preds = %if.then2208, %if.then2205
  %bf.load2211 = phi i32 [ %bf.load2211.pre, %if.then2208 ], [ %bf.load2194, %if.then2205 ]
  %op0.5 = phi %struct.rtx_def* [ %call2209, %if.then2208 ], [ %op0.4, %if.then2205 ]
  %391 = getelementptr inbounds %struct.rtx_def* %op0.5, i64 0, i32 0
  %bf.set2213 = or i32 %bf.load2211, 134217728
  store i32 %bf.set2213, i32* %391, align 8
  br label %if.end2214

if.end2214:                                       ; preds = %if.end2210, %if.end2193
  %bf.load2215 = phi i32 [ %bf.set2213, %if.end2210 ], [ %bf.load2194, %if.end2193 ]
  %op0.6 = phi %struct.rtx_def* [ %op0.5, %if.end2210 ], [ %op0.4, %if.end2193 ]
  %392 = getelementptr inbounds %struct.rtx_def* %op0.6, i64 0, i32 0
  %bf.clear2216 = and i32 %bf.load2215, 65535
  %cmp2217 = icmp eq i32 %bf.clear2216, 65
  br i1 %cmp2217, label %if.then2219, label %if.end2233

if.then2219:                                      ; preds = %if.end2214
  %393 = load i64* %bitpos, align 8, !tbaa !22
  %cmp2220 = icmp eq i64 %393, 0
  br i1 %cmp2220, label %lor.lhs.false2222, label %if.then2231

lor.lhs.false2222:                                ; preds = %if.then2219
  %394 = load i64* %bitsize1917, align 8, !tbaa !22
  %bf.lshr2224 = lshr i32 %bf.load2215, 16
  %bf.clear2225 = and i32 %bf.lshr2224, 255
  %idxprom22268270 = zext i32 %bf.clear2225 to i64
  %arrayidx2227 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom22268270
  %395 = load i16* %arrayidx2227, align 2, !tbaa !19
  %conv2228 = zext i16 %395 to i64
  %cmp2229 = icmp eq i64 %394, %conv2228
  br i1 %cmp2229, label %return, label %if.then2231

if.then2231:                                      ; preds = %lor.lhs.false2222, %if.then2219
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 6987, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.expand_expr, i64 0, i64 0)) #8
  unreachable

if.end2233:                                       ; preds = %if.end2214
  %396 = load i32* %mode1, align 4, !tbaa !5
  %cmp2234 = icmp eq i32 %396, 0
  %cmp2239 = icmp eq i32 %bf.clear2216, 61
  %or.cond8295 = or i1 %cmp2234, %cmp2239
  %cmp2244 = icmp eq i32 %bf.clear2216, 63
  %or.cond8296 = or i1 %or.cond8295, %cmp2244
  br i1 %or.cond8296, label %if.then2309, label %lor.lhs.false2246

lor.lhs.false2246:                                ; preds = %if.end2233
  %cmp2247 = icmp eq i32 %396, 51
  br i1 %cmp2247, label %lor.lhs.false2269, label %land.lhs.true2249

land.lhs.true2249:                                ; preds = %lor.lhs.false2246
  %idxprom2250 = sext i32 %396 to i64
  %arrayidx2251 = getelementptr inbounds [59 x i8]* @direct_load, i64 0, i64 %idxprom2250
  %397 = load i8* %arrayidx2251, align 1, !tbaa !5
  %tobool2252 = icmp eq i8 %397, 0
  br i1 %tobool2252, label %land.lhs.true2253, label %lor.lhs.false2269

land.lhs.true2253:                                ; preds = %land.lhs.true2249
  %idxprom22548269 = zext i32 %bf.clear23 to i64
  %arrayidx2255 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom22548269
  %398 = load i32* %arrayidx2255, align 4, !tbaa !5
  %cmp2256 = icmp eq i32 %398, 5
  br i1 %cmp2256, label %lor.lhs.false2269, label %land.lhs.true2258

land.lhs.true2258:                                ; preds = %land.lhs.true2253
  %cmp2261 = icmp ne i32 %398, 6
  %cmp2264 = icmp ne i32 %modifier, 2
  %or.cond6580 = and i1 %cmp2261, %cmp2264
  %cmp2267 = icmp ne i32 %modifier, 3
  %or.cond6581 = and i1 %or.cond6580, %cmp2267
  br i1 %or.cond6581, label %if.then2309, label %lor.lhs.false2269

lor.lhs.false2269:                                ; preds = %land.lhs.true2253, %land.lhs.true2249, %lor.lhs.false2246, %land.lhs.true2258
  %399 = load i64* %bitsize1917, align 8, !tbaa !22
  %cmp2288 = icmp sgt i64 %399, -1
  br i1 %cmp2288, label %land.lhs.true2290, label %if.end2451

land.lhs.true2290:                                ; preds = %lor.lhs.false2269
  %400 = load %union.tree_node** %type1, align 8, !tbaa !36
  %size2294 = getelementptr inbounds %union.tree_node* %400, i64 0, i32 0, i32 2
  %401 = bitcast i32* %size2294 to %union.tree_node**
  %402 = load %union.tree_node** %401, align 8, !tbaa !40
  %code2296 = getelementptr inbounds %union.tree_node* %402, i64 0, i32 0, i32 0, i32 2
  %bf.load2297 = load i32* %code2296, align 8
  %bf.clear2298 = and i32 %bf.load2297, 255
  %cmp2299 = icmp eq i32 %bf.clear2298, 25
  br i1 %cmp2299, label %land.lhs.true2301, label %if.end2451

land.lhs.true2301:                                ; preds = %land.lhs.true2290
  %call2306 = call i32 @compare_tree_int(%union.tree_node* %402, i64 %399) #5
  %cmp2307 = icmp eq i32 %call2306, 0
  br i1 %cmp2307, label %if.end2451, label %if.then2309

if.then2309:                                      ; preds = %land.lhs.true2301, %land.lhs.true2258, %if.end2233
  %cmp2310 = icmp eq i32 %bf.clear23, 51
  br i1 %cmp2310, label %land.lhs.true2312, label %if.end2365

land.lhs.true2312:                                ; preds = %if.then2309
  %cmp2313 = icmp eq %struct.rtx_def* %target.addr.1, null
  br i1 %cmp2313, label %if.end2332, label %land.lhs.true2315

land.lhs.true2315:                                ; preds = %land.lhs.true2312
  %bf.load2316 = load i32* %392, align 8
  %bf.clear2317 = and i32 %bf.load2316, 65535
  %cmp2318 = icmp eq i32 %bf.clear2317, 66
  br i1 %cmp2318, label %land.lhs.true2320, label %if.end2332

land.lhs.true2320:                                ; preds = %land.lhs.true2315
  %403 = getelementptr inbounds %struct.rtx_def* %target.addr.1, i64 0, i32 0
  %bf.load2321 = load i32* %403, align 8
  %bf.clear2322 = and i32 %bf.load2321, 65535
  %cmp2323 = icmp eq i32 %bf.clear2322, 66
  br i1 %cmp2323, label %land.lhs.true2325, label %if.end2332

land.lhs.true2325:                                ; preds = %land.lhs.true2320
  %404 = load i64* %bitpos, align 8, !tbaa !22
  %rem23268268 = and i64 %404, 7
  %cmp2327 = icmp eq i64 %rem23268268, 0
  br i1 %cmp2327, label %if.then2335, label %if.end2332

if.end2332:                                       ; preds = %land.lhs.true2315, %land.lhs.true2320, %land.lhs.true2325, %land.lhs.true2312
  %405 = load i64* %bitsize1917, align 8, !tbaa !22
  %conv2330 = trunc i64 %405 to i32
  %call2331 = call i32 @mode_for_size(i32 %conv2330, i32 1, i32 1) #5
  %cmp2333 = icmp eq i32 %call2331, 51
  br i1 %cmp2333, label %if.then2335, label %if.end2365

if.then2335:                                      ; preds = %land.lhs.true2325, %if.end2332
  %bf.load2336 = load i32* %392, align 8
  %bf.clear2337 = and i32 %bf.load2336, 65535
  %cmp2338 = icmp eq i32 %bf.clear2337, 66
  br i1 %cmp2338, label %lor.lhs.false2340, label %if.then2352

lor.lhs.false2340:                                ; preds = %if.then2335
  br i1 %cmp2313, label %lor.lhs.false2348, label %land.lhs.true2343

land.lhs.true2343:                                ; preds = %lor.lhs.false2340
  %406 = getelementptr inbounds %struct.rtx_def* %target.addr.1, i64 0, i32 0
  %bf.load2344 = load i32* %406, align 8
  %bf.clear2345 = and i32 %bf.load2344, 65535
  %cmp2346 = icmp eq i32 %bf.clear2345, 66
  br i1 %cmp2346, label %lor.lhs.false2348, label %if.then2352

lor.lhs.false2348:                                ; preds = %land.lhs.true2343, %lor.lhs.false2340
  %407 = load i64* %bitpos, align 8, !tbaa !22
  %rem23498267 = and i64 %407, 7
  %cmp2350 = icmp eq i64 %rem23498267, 0
  br i1 %cmp2350, label %if.end2353, label %if.then2352

if.then2352:                                      ; preds = %land.lhs.true2343, %lor.lhs.false2348, %if.then2335
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 7035, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.expand_expr, i64 0, i64 0)) #8
  unreachable

if.end2353:                                       ; preds = %lor.lhs.false2348
  %div2354 = sdiv i64 %407, 8
  %call2355 = call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %op0.6, i32 0, i64 %div2354, i32 1, i32 1) #5
  br i1 %cmp2313, label %if.then2358, label %if.end2360

if.then2358:                                      ; preds = %if.end2353
  %call2359 = call %struct.rtx_def* @assign_temp(%union.tree_node* %0, i32 0, i32 1, i32 1) #5
  br label %if.end2360

if.end2360:                                       ; preds = %if.then2358, %if.end2353
  %target.addr.3 = phi %struct.rtx_def* [ %call2359, %if.then2358 ], [ %target.addr.1, %if.end2353 ]
  %408 = load i64* %bitsize1917, align 8, !tbaa !22
  %sub2361 = add nsw i64 %408, 7
  %div2362 = sdiv i64 %sub2361, 8
  %call2363 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %div2362) #5
  %call2364 = call %struct.rtx_def* @emit_block_move(%struct.rtx_def* %target.addr.3, %struct.rtx_def* %call2355, %struct.rtx_def* %call2363)
  br label %return

if.end2365:                                       ; preds = %if.then2309, %if.end2332
  %ext_mode.08482 = phi i32 [ %call2331, %if.end2332 ], [ %bf.clear23, %if.then2309 ]
  %call2366 = call %struct.rtx_def* @validize_mem(%struct.rtx_def* %op0.6) #5
  %409 = getelementptr inbounds %struct.rtx_def* %call2366, i64 0, i32 0
  %bf.load2367 = load i32* %409, align 8
  %bf.clear2368 = and i32 %bf.load2367, 65535
  %cmp2369 = icmp eq i32 %bf.clear2368, 66
  br i1 %cmp2369, label %land.lhs.true2371, label %if.end2396

land.lhs.true2371:                                ; preds = %if.end2365
  %fld2372 = getelementptr inbounds %struct.rtx_def* %call2366, i64 0, i32 1
  %rtx2374 = bitcast [1 x %union.rtunion_def]* %fld2372 to %struct.rtx_def**
  %410 = load %struct.rtx_def** %rtx2374, align 8, !tbaa !1
  %411 = getelementptr inbounds %struct.rtx_def* %410, i64 0, i32 0
  %bf.load2375 = load i32* %411, align 8
  %bf.clear2376 = and i32 %bf.load2375, 65535
  %cmp2377 = icmp eq i32 %bf.clear2376, 61
  br i1 %cmp2377, label %if.then2379, label %if.end2396

if.then2379:                                      ; preds = %land.lhs.true2371
  %arrayidx2384 = getelementptr inbounds %struct.rtx_def* %call2366, i64 0, i32 1, i64 1
  %rtmem2385 = bitcast %union.rtunion_def* %arrayidx2384 to %struct.mem_attrs**
  %412 = load %struct.mem_attrs** %rtmem2385, align 8, !tbaa !1
  %cmp2386 = icmp eq %struct.mem_attrs* %412, null
  br i1 %cmp2386, label %cond.end2394, label %cond.true2388

cond.true2388:                                    ; preds = %if.then2379
  %align2392 = getelementptr inbounds %struct.mem_attrs* %412, i64 0, i32 4
  %413 = load i32* %align2392, align 4, !tbaa !27
  br label %cond.end2394

cond.end2394:                                     ; preds = %if.then2379, %cond.true2388
  %cond2395 = phi i32 [ %413, %cond.true2388 ], [ 8, %if.then2379 ]
  call void @mark_reg_pointer(%struct.rtx_def* %410, i32 %cond2395) #5
  br label %if.end2396

if.end2396:                                       ; preds = %cond.end2394, %land.lhs.true2371, %if.end2365
  %414 = load i64* %bitsize1917, align 8, !tbaa !22
  %415 = load i64* %bitpos, align 8, !tbaa !22
  %416 = load i32* %unsignedp, align 4, !tbaa !21
  %417 = load %union.tree_node** %type1924, align 8, !tbaa !36
  %call2399 = call i64 @int_size_in_bytes(%union.tree_node* %417) #5
  %call2400 = call %struct.rtx_def* @extract_bit_field(%struct.rtx_def* %call2366, i64 %414, i64 %415, i32 %416, %struct.rtx_def* %target.addr.1, i32 %ext_mode.08482, i32 %ext_mode.08482, i64 %call2399) #5
  br i1 %cmp2310, label %if.then2441, label %return

if.then2441:                                      ; preds = %if.end2396
  %call2442 = call %union.tree_node* @type_for_mode(i32 %ext_mode.08482, i32 0) #5
  %call2443 = call %union.tree_node* @build_qualified_type(%union.tree_node* %call2442, i32 1) #5
  %call2444 = call %struct.rtx_def* @assign_temp(%union.tree_node* %call2443, i32 0, i32 1, i32 1) #5
  %call2445 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call2444, %struct.rtx_def* %call2400)
  %call2446 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %call2444) #5
  %418 = getelementptr inbounds %struct.rtx_def* %call2446, i64 0, i32 0
  %bf.load2447 = load i32* %418, align 8
  %bf.clear2448 = and i32 %bf.load2447, -16711681
  %bf.set2449 = or i32 %bf.clear2448, 3342336
  store i32 %bf.set2449, i32* %418, align 8
  call void @set_mem_attributes(%struct.rtx_def* %call2446, %union.tree_node* %exp, i32 1) #5
  br label %return

if.end2451:                                       ; preds = %land.lhs.true2301, %land.lhs.true2290, %lor.lhs.false2269
  %cmp2452 = icmp eq i32 %bf.clear23, 51
  br i1 %cmp2452, label %if.then2454, label %if.end2455

if.then2454:                                      ; preds = %if.end2451
  store i32 51, i32* %mode1, align 4, !tbaa !5
  br label %if.end2455

if.end2455:                                       ; preds = %if.then2454, %if.end2451
  %419 = phi i32 [ 51, %if.then2454 ], [ %396, %if.end2451 ]
  %modifier.off = add i32 %modifier, -1
  %420 = icmp ult i32 %modifier.off, 3
  %421 = load i64* %bitpos, align 8, !tbaa !22
  %div2465 = sdiv i64 %421, 8
  br i1 %420, label %if.then2464, label %if.else2467

if.then2464:                                      ; preds = %if.end2455
  %call2466 = call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %op0.6, i32 %419, i64 %div2465, i32 0, i32 1) #5
  br label %if.end2470

if.else2467:                                      ; preds = %if.end2455
  %call2469 = call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %op0.6, i32 %419, i64 %div2465, i32 1, i32 1) #5
  br label %if.end2470

if.end2470:                                       ; preds = %if.else2467, %if.then2464
  %op0.8 = phi %struct.rtx_def* [ %call2466, %if.then2464 ], [ %call2469, %if.else2467 ]
  %cmp2471 = icmp eq %struct.rtx_def* %op0.8, %call1955
  br i1 %cmp2471, label %if.then2473, label %if.end2475

if.then2473:                                      ; preds = %if.end2470
  %call2474 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %call1955) #5
  br label %if.end2475

if.end2475:                                       ; preds = %if.then2473, %if.end2470
  %op0.9 = phi %struct.rtx_def* [ %call2474, %if.then2473 ], [ %op0.8, %if.end2470 ]
  call void @set_mem_attributes(%struct.rtx_def* %op0.9, %union.tree_node* %exp, i32 0) #5
  %fld2476 = getelementptr inbounds %struct.rtx_def* %op0.9, i64 0, i32 1
  %rtx2478 = bitcast [1 x %union.rtunion_def]* %fld2476 to %struct.rtx_def**
  %422 = load %struct.rtx_def** %rtx2478, align 8, !tbaa !1
  %423 = getelementptr inbounds %struct.rtx_def* %422, i64 0, i32 0
  %bf.load2479 = load i32* %423, align 8
  %bf.clear2480 = and i32 %bf.load2479, 65535
  %cmp2481 = icmp eq i32 %bf.clear2480, 61
  br i1 %cmp2481, label %if.then2483, label %if.end2500

if.then2483:                                      ; preds = %if.end2475
  %arrayidx2488 = getelementptr inbounds %struct.rtx_def* %op0.9, i64 0, i32 1, i64 1
  %rtmem2489 = bitcast %union.rtunion_def* %arrayidx2488 to %struct.mem_attrs**
  %424 = load %struct.mem_attrs** %rtmem2489, align 8, !tbaa !1
  %cmp2490 = icmp eq %struct.mem_attrs* %424, null
  br i1 %cmp2490, label %cond.end2498, label %cond.true2492

cond.true2492:                                    ; preds = %if.then2483
  %align2496 = getelementptr inbounds %struct.mem_attrs* %424, i64 0, i32 4
  %425 = load i32* %align2496, align 4, !tbaa !27
  br label %cond.end2498

cond.end2498:                                     ; preds = %if.then2483, %cond.true2492
  %cond2499 = phi i32 [ %425, %cond.true2492 ], [ 8, %if.then2483 ]
  call void @mark_reg_pointer(%struct.rtx_def* %422, i32 %cond2499) #5
  br label %if.end2500

if.end2500:                                       ; preds = %cond.end2498, %if.end2475
  %426 = load i32* %volatilep, align 4, !tbaa !21
  %427 = getelementptr inbounds %struct.rtx_def* %op0.9, i64 0, i32 0
  %bf.load2501 = load i32* %427, align 8
  %or25048284 = shl i32 %426, 27
  %428 = and i32 %or25048284, 134217728
  %bf.set2509 = or i32 %428, %bf.load2501
  store i32 %bf.set2509, i32* %427, align 8
  %429 = load i32* %mode1, align 4, !tbaa !5
  %cmp2510 = icmp eq i32 %bf.clear23, %429
  %cmp2513 = icmp eq i32 %429, 51
  %or.cond6584 = or i1 %cmp2510, %cmp2513
  %cmp2516 = icmp eq i32 %429, %tmode
  %or.cond8321 = or i1 %or.cond6584, %cmp2516
  %or.cond8324 = or i1 %or.cond8321, %352
  br i1 %or.cond8324, label %return, label %if.else2525

if.else2525:                                      ; preds = %if.end2500
  %cmp2526 = icmp eq %struct.rtx_def* %target.addr.1, null
  br i1 %cmp2526, label %if.then2528, label %if.end2537

if.then2528:                                      ; preds = %if.else2525
  %cmp2529 = icmp ne i32 %tmode, 0
  %cond2534 = select i1 %cmp2529, i32 %tmode, i32 %bf.clear23
  %call2535 = call %struct.rtx_def* @gen_reg_rtx(i32 %cond2534) #5
  br label %if.end2537

if.end2537:                                       ; preds = %if.else2525, %if.then2528
  %target.addr.4 = phi %struct.rtx_def* [ %call2535, %if.then2528 ], [ %target.addr.1, %if.else2525 ]
  %430 = load i32* %unsignedp, align 4, !tbaa !21
  call void @convert_move(%struct.rtx_def* %target.addr.4, %struct.rtx_def* %op0.9, i32 %430)
  br label %return

sw.bb2538:                                        ; preds = %if.end185
  %call2539 = call %struct.rtx_def* @get_last_insn() #5
  %operands2541 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx2542 = bitcast i32* %operands2541 to %union.tree_node**
  %431 = load %union.tree_node** %arrayidx2542, align 8, !tbaa !1
  %call2543 = call %struct.rtx_def* @expand_expr(%union.tree_node* %431, %struct.rtx_def* %target.addr.1, i32 %tmode, i32 %modifier)
  %432 = getelementptr inbounds %struct.rtx_def* %call2543, i64 0, i32 0
  %bf.load2544 = load i32* %432, align 8
  %bf.clear2545 = and i32 %bf.load2544, 65535
  %cmp2546 = icmp eq i32 %bf.clear2545, 61
  br i1 %cmp2546, label %if.then2548, label %if.else2564

if.then2548:                                      ; preds = %sw.bb2538
  %call2549 = call %struct.rtx_def* @get_last_insn() #5
  %cmp2550 = icmp eq %struct.rtx_def* %call2549, %call2539
  br i1 %cmp2550, label %if.then2552, label %if.end2553

if.then2552:                                      ; preds = %if.then2548
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 7128, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.expand_expr, i64 0, i64 0)) #8
  unreachable

if.end2553:                                       ; preds = %if.then2548
  %433 = getelementptr inbounds %struct.rtx_def* %call2549, i64 0, i32 0
  %bf.load2554 = load i32* %433, align 8
  %bf.clear2555 = and i32 %bf.load2554, 65535
  %idxprom25568266 = zext i32 %bf.clear2555 to i64
  %arrayidx2557 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom25568266
  %434 = load i8* %arrayidx2557, align 1, !tbaa !5
  %cmp2559 = icmp eq i8 %434, 105
  br i1 %cmp2559, label %if.end2570, label %if.then2561

if.then2561:                                      ; preds = %if.end2553
  %call2562 = call %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def* %call2549) #5
  br label %if.end2570

if.else2564:                                      ; preds = %sw.bb2538
  %bf.lshr2566 = lshr i32 %bf.load2544, 16
  %bf.clear2567 = and i32 %bf.lshr2566, 255
  %call2568 = call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear2567) #5
  %call2569 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call2568, %struct.rtx_def* %call2543)
  br label %if.end2570

if.end2570:                                       ; preds = %if.end2553, %if.then2561, %if.else2564
  %insn.0 = phi %struct.rtx_def* [ %call2549, %if.end2553 ], [ %call2562, %if.then2561 ], [ %call2569, %if.else2564 ]
  %target.addr.5 = phi %struct.rtx_def* [ %call2543, %if.end2553 ], [ %call2543, %if.then2561 ], [ %call2568, %if.else2564 ]
  %arrayidx2573 = getelementptr inbounds i32* %operands2541, i64 2
  %435 = bitcast i32* %arrayidx2573 to %union.tree_node**
  %436 = load %union.tree_node** %435, align 8, !tbaa !1
  %rtl2575 = getelementptr inbounds %union.tree_node* %436, i64 0, i32 0, i32 17
  %437 = load %struct.rtx_def** %rtl2575, align 8, !tbaa !37
  %tobool2576 = icmp eq %struct.rtx_def* %437, null
  br i1 %tobool2576, label %cond.false2583, label %cond.end2592

cond.false2583:                                   ; preds = %if.end2570
  call void @make_decl_rtl(%union.tree_node* %436, i8* null) #5
  %438 = load %union.tree_node** %435, align 8, !tbaa !1
  %rtl2591 = getelementptr inbounds %union.tree_node* %438, i64 0, i32 0, i32 17
  %439 = load %struct.rtx_def** %rtl2591, align 8, !tbaa !37
  br label %cond.end2592

cond.end2592:                                     ; preds = %if.end2570, %cond.false2583
  %cond2593 = phi %struct.rtx_def* [ %439, %cond.false2583 ], [ %437, %if.end2570 ]
  %arrayidx2595 = getelementptr inbounds %struct.rtx_def* %cond2593, i64 0, i32 1, i64 0
  %rtx2596 = bitcast %union.rtunion_def* %arrayidx2595 to %struct.rtx_def**
  %440 = load %struct.rtx_def** %rtx2596, align 8, !tbaa !1
  %arrayidx2599 = getelementptr inbounds i32* %operands2541, i64 4
  %441 = bitcast i32* %arrayidx2599 to %union.tree_node**
  %442 = load %union.tree_node** %441, align 8, !tbaa !1
  %call2600 = call i64 @tree_low_cst(%union.tree_node* %442, i32 0) #5
  %call2601 = call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %440, i64 %call2600) #5
  %arrayidx2603 = getelementptr inbounds %struct.rtx_def* %call2601, i64 0, i32 1, i64 0
  %rtx2604 = bitcast %union.rtunion_def* %arrayidx2603 to %struct.rtx_def**
  %443 = load %struct.rtx_def** %rtx2604, align 8, !tbaa !1
  %arrayidx2606 = getelementptr inbounds %struct.rtx_def* %insn.0, i64 0, i32 1, i64 6
  %rtx2607 = bitcast %union.rtunion_def* %arrayidx2606 to %struct.rtx_def**
  %444 = load %struct.rtx_def** %rtx2607, align 8, !tbaa !1
  %call2608 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 30, %struct.rtx_def* %443, %struct.rtx_def* %444) #5
  %445 = getelementptr inbounds %union.rtunion_def* %arrayidx2606, i64 0, i32 0
  %call2608.c = ptrtoint %struct.rtx_def* %call2608 to i64
  store i64 %call2608.c, i64* %445, align 8, !tbaa !1
  br label %return

sw.bb2612:                                        ; preds = %if.end185
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 7155, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.expand_expr, i64 0, i64 0)) #8
  unreachable

sw.bb2613:                                        ; preds = %if.end185
  %operands2615 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx2616 = bitcast i32* %operands2615 to %union.tree_node**
  %446 = load %union.tree_node** %arrayidx2616, align 8, !tbaa !1
  %arrayidx2620 = getelementptr inbounds i32* %operands2615, i64 2
  %447 = bitcast i32* %arrayidx2620 to %union.tree_node**
  %448 = load %union.tree_node** %447, align 8, !tbaa !1
  %type2622 = getelementptr inbounds %union.tree_node* %448, i64 0, i32 0, i32 0, i32 1
  %449 = load %union.tree_node** %type2622, align 8, !tbaa !36
  %unsigned_flag2624 = getelementptr inbounds %union.tree_node* %449, i64 0, i32 0, i32 0, i32 2
  %bf.load2625 = load i32* %unsigned_flag2624, align 8
  %bf.lshr2626 = lshr i32 %bf.load2625, 13
  %bf.clear2627 = and i32 %bf.lshr2626, 1
  %type2629 = getelementptr inbounds %union.tree_node* %446, i64 0, i32 0, i32 0, i32 1
  %450 = load %union.tree_node** %type2629, align 8, !tbaa !36
  %values2631 = getelementptr inbounds %union.tree_node* %450, i64 0, i32 0, i32 1
  %451 = load i8** %values2631, align 8
  %minval2633 = getelementptr inbounds i8* %451, i64 104
  %452 = bitcast i8* %minval2633 to %union.tree_node**
  %453 = load %union.tree_node** %452, align 8, !tbaa !58
  %maxval = getelementptr inbounds i8* %451, i64 112
  %454 = bitcast i8* %maxval to %union.tree_node**
  %455 = load %union.tree_node** %454, align 8, !tbaa !59
  %call2637 = call %struct.rtx_def* @expand_expr(%union.tree_node* %448, %struct.rtx_def* null, i32 0, i32 0)
  %call2638 = call %struct.rtx_def* @expand_expr(%union.tree_node* %453, %struct.rtx_def* null, i32 0, i32 0)
  %call2639 = call %struct.rtx_def* @expand_expr(%union.tree_node* %455, %struct.rtx_def* null, i32 0, i32 0)
  %call2640 = call %struct.rtx_def* @expand_expr(%union.tree_node* %446, %struct.rtx_def* null, i32 0, i32 0)
  %arrayidx2642 = getelementptr inbounds %struct.rtx_def* %call2640, i64 0, i32 1, i64 0
  %rtx2643 = bitcast %union.rtunion_def* %arrayidx2642 to %struct.rtx_def**
  %456 = load %struct.rtx_def** %rtx2643, align 8, !tbaa !1
  %457 = load %union.tree_node** %type2622, align 8, !tbaa !36
  %type2646 = bitcast %union.tree_node* %457 to %struct.tree_type*
  %mode2647 = getelementptr inbounds %struct.tree_type* %type2646, i64 0, i32 6
  %bf.load2648 = load i32* %mode2647, align 4
  %bf.lshr2649 = lshr i32 %bf.load2648, 9
  %bf.clear2650 = and i32 %bf.lshr2649, 127
  %code2654 = getelementptr inbounds %union.tree_node* %455, i64 0, i32 0, i32 0, i32 2
  %bf.load2655 = load i32* %code2654, align 8
  %bf.clear2656 = and i32 %bf.load2655, 255
  %cmp2657 = icmp eq i32 %bf.clear2656, 25
  br i1 %cmp2657, label %land.lhs.true2659, label %lor.lhs.false2669

land.lhs.true2659:                                ; preds = %sw.bb2613
  %code2661 = getelementptr inbounds %union.tree_node* %453, i64 0, i32 0, i32 0, i32 2
  %bf.load2662 = load i32* %code2661, align 8
  %bf.clear2663 = and i32 %bf.load2662, 255
  %cmp2664 = icmp eq i32 %bf.clear2663, 25
  br i1 %cmp2664, label %land.lhs.true2666, label %lor.lhs.false2669

land.lhs.true2666:                                ; preds = %land.lhs.true2659
  %call2667 = call i32 @tree_int_cst_lt(%union.tree_node* %455, %union.tree_node* %453) #5
  %tobool2668 = icmp eq i32 %call2667, 0
  br i1 %tobool2668, label %lor.lhs.false2669, label %if.then2703

lor.lhs.false2669:                                ; preds = %land.lhs.true2666, %land.lhs.true2659, %sw.bb2613
  %code2671 = getelementptr inbounds %union.tree_node* %448, i64 0, i32 0, i32 0, i32 2
  %bf.load2672 = load i32* %code2671, align 8
  %bf.clear2673 = and i32 %bf.load2672, 255
  %cmp2674 = icmp eq i32 %bf.clear2673, 25
  br i1 %cmp2674, label %land.lhs.true2676, label %lor.lhs.false2686

land.lhs.true2676:                                ; preds = %lor.lhs.false2669
  %code2678 = getelementptr inbounds %union.tree_node* %453, i64 0, i32 0, i32 0, i32 2
  %bf.load2679 = load i32* %code2678, align 8
  %bf.clear2680 = and i32 %bf.load2679, 255
  %cmp2681 = icmp eq i32 %bf.clear2680, 25
  br i1 %cmp2681, label %land.lhs.true2683, label %lor.lhs.false2686

land.lhs.true2683:                                ; preds = %land.lhs.true2676
  %call2684 = call i32 @tree_int_cst_lt(%union.tree_node* %448, %union.tree_node* %453) #5
  %tobool2685 = icmp eq i32 %call2684, 0
  br i1 %tobool2685, label %lor.lhs.false2686, label %if.then2703

lor.lhs.false2686:                                ; preds = %land.lhs.true2683, %land.lhs.true2676, %lor.lhs.false2669
  %bf.load2689 = load i32* %code2654, align 8
  %bf.clear2690 = and i32 %bf.load2689, 255
  %cmp2691 = icmp eq i32 %bf.clear2690, 25
  br i1 %cmp2691, label %land.lhs.true2693, label %if.end2704

land.lhs.true2693:                                ; preds = %lor.lhs.false2686
  %bf.load2696 = load i32* %code2671, align 8
  %bf.clear2697 = and i32 %bf.load2696, 255
  %cmp2698 = icmp eq i32 %bf.clear2697, 25
  br i1 %cmp2698, label %land.lhs.true2700, label %if.end2704

land.lhs.true2700:                                ; preds = %land.lhs.true2693
  %call2701 = call i32 @tree_int_cst_lt(%union.tree_node* %455, %union.tree_node* %448) #5
  %tobool2702 = icmp eq i32 %call2701, 0
  br i1 %tobool2702, label %if.end2704, label %if.then2703

if.then2703:                                      ; preds = %land.lhs.true2666, %land.lhs.true2683, %land.lhs.true2700
  %458 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  br label %return

if.end2704:                                       ; preds = %land.lhs.true2700, %land.lhs.true2693, %lor.lhs.false2686
  %cmp2705 = icmp eq %struct.rtx_def* %target.addr.1, null
  br i1 %cmp2705, label %if.then2707, label %if.end2715

if.then2707:                                      ; preds = %if.end2704
  %cmp2708 = icmp ne i32 %tmode, 0
  %cond2713 = select i1 %cmp2708, i32 %tmode, i32 %bf.clear23
  %call2714 = call %struct.rtx_def* @gen_reg_rtx(i32 %cond2713) #5
  br label %if.end2715

if.end2715:                                       ; preds = %if.then2707, %if.end2704
  %target.addr.6 = phi %struct.rtx_def* [ %call2714, %if.then2707 ], [ %target.addr.1, %if.end2704 ]
  %call2716 = call %struct.rtx_def* @gen_label_rtx() #5
  %call2717 = call %struct.rtx_def* @gen_label_rtx() #5
  %459 = getelementptr inbounds %struct.rtx_def* %call2637, i64 0, i32 0
  %bf.load2718 = load i32* %459, align 8
  %bf.clear2719 = and i32 %bf.load2718, 65535
  %cmp2720 = icmp eq i32 %bf.clear2719, 54
  br i1 %cmp2720, label %land.lhs.true2722, label %if.then2727

land.lhs.true2722:                                ; preds = %if.end2715
  %460 = getelementptr inbounds %struct.rtx_def* %call2638, i64 0, i32 0
  %bf.load2723 = load i32* %460, align 8
  %bf.clear2724 = and i32 %bf.load2723, 65535
  %cmp2725 = icmp eq i32 %bf.clear2724, 54
  br i1 %cmp2725, label %if.end2731, label %if.then2727

if.then2727:                                      ; preds = %land.lhs.true2722, %if.end2715
  %bf.lshr2729 = lshr i32 %bf.load2718, 16
  %bf.clear2730 = and i32 %bf.lshr2729, 255
  call void @emit_cmp_and_jump_insns(%struct.rtx_def* %call2637, %struct.rtx_def* %call2638, i32 107, %struct.rtx_def* null, i32 %bf.clear2730, i32 %bf.clear2627, %struct.rtx_def* %call2717) #5
  %bf.load2732.pre = load i32* %459, align 8
  br label %if.end2731

if.end2731:                                       ; preds = %if.then2727, %land.lhs.true2722
  %bf.load2742 = phi i32 [ %bf.load2732.pre, %if.then2727 ], [ %bf.load2718, %land.lhs.true2722 ]
  %bf.clear2733 = and i32 %bf.load2742, 65535
  %cmp2734 = icmp eq i32 %bf.clear2733, 54
  br i1 %cmp2734, label %land.lhs.true2736, label %if.then2741

land.lhs.true2736:                                ; preds = %if.end2731
  %461 = getelementptr inbounds %struct.rtx_def* %call2639, i64 0, i32 0
  %bf.load2737 = load i32* %461, align 8
  %bf.clear2738 = and i32 %bf.load2737, 65535
  %cmp2739 = icmp eq i32 %bf.clear2738, 54
  br i1 %cmp2739, label %if.end2745, label %if.then2741

if.then2741:                                      ; preds = %land.lhs.true2736, %if.end2731
  %bf.lshr2743 = lshr i32 %bf.load2742, 16
  %bf.clear2744 = and i32 %bf.lshr2743, 255
  call void @emit_cmp_and_jump_insns(%struct.rtx_def* %call2637, %struct.rtx_def* %call2639, i32 105, %struct.rtx_def* null, i32 %bf.clear2744, i32 %bf.clear2627, %struct.rtx_def* %call2717) #5
  br label %if.end2745

if.end2745:                                       ; preds = %if.then2741, %land.lhs.true2736
  %462 = getelementptr inbounds %struct.rtx_def* %call2638, i64 0, i32 0
  %bf.load2746 = load i32* %462, align 8
  %bf.clear2747 = and i32 %bf.load2746, 65535
  %cmp2748 = icmp eq i32 %bf.clear2747, 54
  br i1 %cmp2748, label %if.then2750, label %if.else2755

if.then2750:                                      ; preds = %if.end2745
  %rtwint = getelementptr inbounds %struct.rtx_def* %call2638, i64 0, i32 1, i64 0, i32 0
  %463 = load i64* %rtwint, align 8, !tbaa !22
  %and2753 = and i64 %463, -257
  %call2754 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %and2753) #5
  br label %if.end2758

if.else2755:                                      ; preds = %if.end2745
  %464 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 18), align 8, !tbaa !1
  %call2756 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 -257) #5
  %call2757 = call %struct.rtx_def* @expand_binop(i32 %bf.clear2650, %struct.optab* %464, %struct.rtx_def* %call2638, %struct.rtx_def* %call2756, %struct.rtx_def* null, i32 %bf.clear2627, i32 3) #5
  br label %if.end2758

if.end2758:                                       ; preds = %if.else2755, %if.then2750
  %rlow.0 = phi %struct.rtx_def* [ %call2754, %if.then2750 ], [ %call2757, %if.else2755 ]
  %465 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 2), align 8, !tbaa !1
  %call2759 = call %struct.rtx_def* @expand_binop(i32 %bf.clear2650, %struct.optab* %465, %struct.rtx_def* %call2637, %struct.rtx_def* %rlow.0, %struct.rtx_def* null, i32 %bf.clear2627, i32 3) #5
  %call2760 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 8) #5
  %call2761 = call %struct.rtx_def* @expand_divmod(i32 0, i32 62, i32 %bf.clear2650, %struct.rtx_def* %call2759, %struct.rtx_def* %call2760, %struct.rtx_def* null, i32 %bf.clear2627) #5
  %call2762 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 8) #5
  %call2763 = call %struct.rtx_def* @expand_divmod(i32 1, i32 66, i32 %bf.clear2650, %struct.rtx_def* %call2637, %struct.rtx_def* %call2762, %struct.rtx_def* null, i32 %bf.clear2627) #5
  %466 = load i32* @byte_mode, align 4, !tbaa !5
  %467 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 0), align 8, !tbaa !1
  %call2764 = call %struct.rtx_def* @expand_binop(i32 %bf.clear2650, %struct.optab* %467, %struct.rtx_def* %call2759, %struct.rtx_def* %456, %struct.rtx_def* null, i32 %bf.clear2627, i32 3) #5
  %call2765 = call %struct.rtx_def* @memory_address(i32 %466, %struct.rtx_def* %call2764) #5
  %468 = load i32* @byte_mode, align 4, !tbaa !5
  %call2766 = call %struct.rtx_def* @gen_rtx_MEM(i32 %468, %struct.rtx_def* %call2765) #5
  %469 = load %union.tree_node** %type2622, align 8, !tbaa !36
  %call2769 = call %union.tree_node* @make_tree(%union.tree_node* %469, %struct.rtx_def* %call2763) #5
  %call2770 = call %struct.rtx_def* @expand_shift(i32 83, i32 %468, %struct.rtx_def* %call2766, %union.tree_node* %call2769, %struct.rtx_def* null, i32 1) #5
  %470 = load i32* @byte_mode, align 4, !tbaa !5
  %471 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 18), align 8, !tbaa !1
  %472 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %473 = getelementptr inbounds %struct.rtx_def* %target.addr.6, i64 0, i32 0
  %bf.load2771 = load i32* %473, align 8
  %bf.lshr2772 = lshr i32 %bf.load2771, 16
  %bf.clear2773 = and i32 %bf.lshr2772, 255
  %cmp2774 = icmp eq i32 %bf.clear2773, %470
  %cond2779 = select i1 %cmp2774, %struct.rtx_def* %target.addr.6, %struct.rtx_def* null
  %call2780 = call %struct.rtx_def* @expand_binop(i32 %470, %struct.optab* %471, %struct.rtx_def* %call2770, %struct.rtx_def* %472, %struct.rtx_def* %cond2779, i32 1, i32 3) #5
  %cmp2781 = icmp eq %struct.rtx_def* %call2780, %target.addr.6
  br i1 %cmp2781, label %if.end2784, label %if.then2783

if.then2783:                                      ; preds = %if.end2758
  call void @convert_move(%struct.rtx_def* %target.addr.6, %struct.rtx_def* %call2780, i32 1)
  br label %if.end2784

if.end2784:                                       ; preds = %if.end2758, %if.then2783
  call void @emit_jump(%struct.rtx_def* %call2716) #5
  %call2785 = call %struct.rtx_def* @emit_label(%struct.rtx_def* %call2717) #5
  %474 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call2786 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %target.addr.6, %struct.rtx_def* %474)
  %call2787 = call %struct.rtx_def* @emit_label(%struct.rtx_def* %call2716) #5
  br label %return

sw.bb2788:                                        ; preds = %if.end185
  %operands2790 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx2791 = getelementptr inbounds i32* %operands2790, i64 4
  %475 = bitcast i32* %arrayidx2791 to %struct.rtx_def**
  %476 = load %struct.rtx_def** %475, align 8, !tbaa !1
  %cmp2792 = icmp eq %struct.rtx_def* %476, null
  br i1 %cmp2792, label %if.then2794, label %return

if.then2794:                                      ; preds = %sw.bb2788
  %arrayidx2797 = bitcast i32* %operands2790 to %union.tree_node**
  %477 = load %union.tree_node** %arrayidx2797, align 8, !tbaa !1
  %call2798 = call %struct.rtx_def* @expand_expr(%union.tree_node* %477, %struct.rtx_def* %target.addr.1, i32 %tmode, i32 %modifier)
  store %struct.rtx_def* %call2798, %struct.rtx_def** %475, align 8, !tbaa !1
  %arrayidx2804 = getelementptr inbounds i32* %operands2790, i64 2
  %478 = bitcast i32* %arrayidx2804 to %union.tree_node**
  %479 = load %union.tree_node** %478, align 8, !tbaa !1
  %call2805 = call i32 @expand_decl_cleanup(%union.tree_node* null, %union.tree_node* %479) #5
  store %union.tree_node* null, %union.tree_node** %478, align 8, !tbaa !1
  %.pre8575 = load %struct.rtx_def** %475, align 8, !tbaa !1
  br label %return

sw.bb2813:                                        ; preds = %if.end185
  call void @expand_start_bindings_and_block(i32 2, %union.tree_node* null) #5
  %480 = load %struct.function** @cfun, align 8, !tbaa !1
  %x_temp_slot_level = getelementptr inbounds %struct.function* %480, i64 0, i32 40
  %481 = load i32* %x_temp_slot_level, align 4, !tbaa !60
  %x_target_temp_slot_level = getelementptr inbounds %struct.function* %480, i64 0, i32 42
  store i32 %481, i32* %x_target_temp_slot_level, align 4, !tbaa !61
  %operands2815 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx2816 = bitcast i32* %operands2815 to %union.tree_node**
  %482 = load %union.tree_node** %arrayidx2816, align 8, !tbaa !1
  %call2817 = call %struct.rtx_def* @expand_expr(%union.tree_node* %482, %struct.rtx_def* %target.addr.1, i32 %tmode, i32 %modifier)
  br i1 %36, label %if.end2821, label %if.then2819

if.then2819:                                      ; preds = %sw.bb2813
  %call2820 = call %struct.rtx_def* @force_not_mem(%struct.rtx_def* %call2817) #5
  br label %if.end2821

if.end2821:                                       ; preds = %if.then2819, %sw.bb2813
  %op0.10 = phi %struct.rtx_def* [ %call2817, %sw.bb2813 ], [ %call2820, %if.then2819 ]
  call void @preserve_temp_slots(%struct.rtx_def* %op0.10) #5
  call void @expand_end_bindings(%union.tree_node* null, i32 0, i32 0) #5
  br label %return

sw.bb2822:                                        ; preds = %if.end185
  %operands2824 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx2825 = bitcast i32* %operands2824 to %union.tree_node**
  %483 = load %union.tree_node** %arrayidx2825, align 8, !tbaa !1
  %code2827 = getelementptr inbounds %union.tree_node* %483, i64 0, i32 0, i32 0, i32 2
  %bf.load2828 = load i32* %code2827, align 8
  %bf.clear2829 = and i32 %bf.load2828, 255
  %cmp2830 = icmp eq i32 %bf.clear2829, 121
  br i1 %cmp2830, label %land.lhs.true2832, label %if.end2878

land.lhs.true2832:                                ; preds = %sw.bb2822
  %operands2837 = getelementptr inbounds %union.tree_node* %483, i64 0, i32 0, i32 2
  %arrayidx2838 = bitcast i32* %operands2837 to %union.tree_node**
  %484 = load %union.tree_node** %arrayidx2838, align 8, !tbaa !1
  %code2840 = getelementptr inbounds %union.tree_node* %484, i64 0, i32 0, i32 0, i32 2
  %bf.load2841 = load i32* %code2840, align 8
  %bf.clear2842 = and i32 %bf.load2841, 255
  %cmp2843 = icmp eq i32 %bf.clear2842, 30
  br i1 %cmp2843, label %land.lhs.true2845, label %if.end2878

land.lhs.true2845:                                ; preds = %land.lhs.true2832
  %built_in_class = getelementptr inbounds %union.tree_node* %484, i64 0, i32 0, i32 5
  %485 = bitcast i48* %built_in_class to i64*
  %bf.load2853 = load i64* %485, align 8
  %bf.lshr2854 = lshr i64 %bf.load2853, 29
  %bf.lshr2854.tr = trunc i64 %bf.lshr2854 to i32
  %bf.cast2856 = and i32 %bf.lshr2854.tr, 3
  switch i32 %bf.cast2856, label %if.else2876 [
    i32 0, label %if.end2878
    i32 1, label %if.then2874
  ]

if.then2874:                                      ; preds = %land.lhs.true2845
  %486 = load %struct.rtx_def* (%union.tree_node*, %struct.rtx_def*, i32, i32)** @lang_expand_expr, align 8, !tbaa !1
  %call2875 = call %struct.rtx_def* %486(%union.tree_node* %exp, %struct.rtx_def* %target, i32 %tmode, i32 %modifier) #5
  br label %return

if.else2876:                                      ; preds = %land.lhs.true2845
  %call2877 = call %struct.rtx_def* @expand_builtin(%union.tree_node* %exp, %struct.rtx_def* %target.addr.1, %struct.rtx_def* %call8451, i32 %tmode, i32 %lor.ext84538462) #5
  br label %return

if.end2878:                                       ; preds = %land.lhs.true2845, %land.lhs.true2832, %sw.bb2822
  %call2879 = call %struct.rtx_def* @expand_call(%union.tree_node* %exp, %struct.rtx_def* %target.addr.1, i32 %lor.ext84538462) #5
  br label %return

sw.bb2880:                                        ; preds = %if.end185, %if.end185, %if.end185, %if.end185
  %operands2882 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx2883 = bitcast i32* %operands2882 to %union.tree_node**
  %487 = load %union.tree_node** %arrayidx2883, align 8, !tbaa !1
  %488 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !1
  %cmp2884 = icmp eq %union.tree_node* %487, %488
  br i1 %cmp2884, label %return, label %if.end2887

if.end2887:                                       ; preds = %sw.bb2880
  %bf.load2890 = load i32* %unsigned_flag, align 8
  %bf.clear2891 = and i32 %bf.load2890, 255
  %cmp2892 = icmp eq i32 %bf.clear2891, 21
  %type2899 = getelementptr inbounds %union.tree_node* %487, i64 0, i32 0, i32 0, i32 1
  %489 = load %union.tree_node** %type2899, align 8, !tbaa !36
  br i1 %cmp2892, label %if.then2894, label %if.end2982

if.then2894:                                      ; preds = %if.end2887
  %cmp2900 = icmp eq i32 %bf.clear23, 51
  br i1 %cmp2900, label %land.lhs.true2902, label %if.end2917

land.lhs.true2902:                                ; preds = %if.then2894
  %type2903 = bitcast %union.tree_node* %489 to %struct.tree_type*
  %mode2904 = getelementptr inbounds %struct.tree_type* %type2903, i64 0, i32 6
  %bf.load2905 = load i32* %mode2904, align 4
  %bf.clear2907 = and i32 %bf.load2905, 65024
  %cmp2908 = icmp eq i32 %bf.clear2907, 26112
  br i1 %cmp2908, label %if.then2910, label %if.end2917

if.then2910:                                      ; preds = %land.lhs.true2902
  %call2915 = call %struct.rtx_def* @expand_expr(%union.tree_node* %487, %struct.rtx_def* %target.addr.1, i32 %tmode, i32 %modifier)
  %call2916 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %call2915) #5
  call void @set_mem_attributes(%struct.rtx_def* %call2916, %union.tree_node* %exp, i32 0) #5
  br label %return

if.end2917:                                       ; preds = %land.lhs.true2902, %if.then2894
  %cmp2918 = icmp eq %struct.rtx_def* %target.addr.1, null
  br i1 %cmp2918, label %if.then2920, label %if.end2922

if.then2920:                                      ; preds = %if.end2917
  %call2921 = call %struct.rtx_def* @assign_temp(%union.tree_node* %0, i32 0, i32 1, i32 1) #5
  br label %if.end2922

if.end2922:                                       ; preds = %if.then2920, %if.end2917
  %target.addr.7 = phi %struct.rtx_def* [ %call2921, %if.then2920 ], [ %target.addr.1, %if.end2917 ]
  %490 = getelementptr inbounds %struct.rtx_def* %target.addr.7, i64 0, i32 0
  %bf.load2923 = load i32* %490, align 8
  %bf.clear2924 = and i32 %bf.load2923, 65535
  switch i32 %bf.clear2924, label %if.else2979 [
    i32 66, label %if.then2927
    i32 61, label %if.then2943
  ]

if.then2927:                                      ; preds = %if.end2922
  %491 = load %union.tree_node** %arrayidx2883, align 8, !tbaa !1
  %type2931 = bitcast %union.tree_node* %489 to %struct.tree_type*
  %mode2932 = getelementptr inbounds %struct.tree_type* %type2931, i64 0, i32 6
  %bf.load2933 = load i32* %mode2932, align 4
  %bf.lshr2934 = lshr i32 %bf.load2933, 9
  %bf.clear2935 = and i32 %bf.lshr2934, 127
  %call2936 = call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %target.addr.7, i32 %bf.clear2935, i64 0, i32 1, i32 1) #5
  %call2937 = call %struct.rtx_def* @store_expr(%union.tree_node* %491, %struct.rtx_def* %call2936, i32 0)
  br label %return

if.then2943:                                      ; preds = %if.end2922
  %492 = load %union.tree_node** %arrayidx2883, align 8, !tbaa !1
  %type2948 = getelementptr inbounds %union.tree_node* %492, i64 0, i32 0, i32 0, i32 1
  %493 = load %union.tree_node** %type2948, align 8, !tbaa !36
  %call2949 = call i64 @int_size_in_bytes(%union.tree_node* %493) #5
  %mul2950 = shl nsw i64 %call2949, 3
  %idxprom29518265 = zext i32 %bf.clear23 to i64
  %arrayidx2952 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom29518265
  %494 = load i16* %arrayidx2952, align 2, !tbaa !19
  %conv2953 = zext i16 %494 to i64
  %cmp2954 = icmp slt i64 %mul2950, %conv2953
  br i1 %cmp2954, label %cond.true2956, label %cond.end2968

cond.true2956:                                    ; preds = %if.then2943
  %495 = load %union.tree_node** %arrayidx2883, align 8, !tbaa !1
  %type2961 = getelementptr inbounds %union.tree_node* %495, i64 0, i32 0, i32 0, i32 1
  %496 = load %union.tree_node** %type2961, align 8, !tbaa !36
  %call2962 = call i64 @int_size_in_bytes(%union.tree_node* %496) #5
  %mul2963 = shl nsw i64 %call2962, 3
  br label %cond.end2968

cond.end2968:                                     ; preds = %if.then2943, %cond.true2956
  %cond2969 = phi i64 [ %mul2963, %cond.true2956 ], [ %conv2953, %if.then2943 ]
  %type2970 = bitcast %union.tree_node* %489 to %struct.tree_type*
  %mode2971 = getelementptr inbounds %struct.tree_type* %type2970, i64 0, i32 6
  %bf.load2972 = load i32* %mode2971, align 4
  %bf.lshr2973 = lshr i32 %bf.load2972, 9
  %bf.clear2974 = and i32 %bf.lshr2973, 127
  %497 = load %union.tree_node** %arrayidx2883, align 8, !tbaa !1
  %call2978 = call fastcc %struct.rtx_def* @store_field(%struct.rtx_def* %target.addr.7, i64 %cond2969, i64 0, i32 %bf.clear2974, %union.tree_node* %497, i32 0, i32 0, %union.tree_node* %0, i32 0)
  br label %return

if.else2979:                                      ; preds = %if.end2922
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 7344, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.expand_expr, i64 0, i64 0)) #8
  unreachable

if.end2982:                                       ; preds = %if.end2887
  %type2988 = bitcast %union.tree_node* %489 to %struct.tree_type*
  %mode2989 = getelementptr inbounds %struct.tree_type* %type2988, i64 0, i32 6
  %bf.load2990 = load i32* %mode2989, align 4
  %bf.lshr2991 = lshr i32 %bf.load2990, 9
  %bf.clear2992 = and i32 %bf.lshr2991, 127
  %cmp2993 = icmp eq i32 %bf.clear23, %bf.clear2992
  br i1 %cmp2993, label %if.then2995, label %if.end3021

if.then2995:                                      ; preds = %if.end2982
  %call2999 = call %struct.rtx_def* @expand_expr(%union.tree_node* %487, %struct.rtx_def* %target.addr.1, i32 0, i32 %modifier)
  %498 = load %union.tree_node** %arrayidx2883, align 8, !tbaa !1
  %type3004 = getelementptr inbounds %union.tree_node* %498, i64 0, i32 0, i32 0, i32 1
  %499 = load %union.tree_node** %type3004, align 8, !tbaa !36
  %unsigned_flag3006 = getelementptr inbounds %union.tree_node* %499, i64 0, i32 0, i32 0, i32 2
  %bf.load3007 = load i32* %unsigned_flag3006, align 8
  %bf.lshr3008 = lshr i32 %bf.load3007, 13
  %bf.clear3009 = and i32 %bf.lshr3008, 1
  %500 = load i32* %unsignedp, align 4, !tbaa !21
  %cmp3010 = icmp eq i32 %bf.clear3009, %500
  br i1 %cmp3010, label %return, label %land.lhs.true3012

land.lhs.true3012:                                ; preds = %if.then2995
  %501 = getelementptr inbounds %struct.rtx_def* %call2999, i64 0, i32 0
  %bf.load3013 = load i32* %501, align 8
  %bf.clear3014 = and i32 %bf.load3013, 65535
  %cmp3015 = icmp eq i32 %bf.clear3014, 63
  br i1 %cmp3015, label %if.then3017, label %return

if.then3017:                                      ; preds = %land.lhs.true3012
  %bf.clear3019 = and i32 %bf.load3013, -268435457
  store i32 %bf.clear3019, i32* %501, align 8
  br label %return

if.end3021:                                       ; preds = %if.end2982
  %call3025 = call %struct.rtx_def* @expand_expr(%union.tree_node* %487, %struct.rtx_def* null, i32 %bf.clear23, i32 %modifier)
  %502 = getelementptr inbounds %struct.rtx_def* %call3025, i64 0, i32 0
  %bf.load3026 = load i32* %502, align 8
  %bf.lshr3027 = lshr i32 %bf.load3026, 16
  %bf.clear3028 = and i32 %bf.lshr3027, 255
  %cmp3029 = icmp eq i32 %bf.clear3028, %bf.clear23
  br i1 %cmp3029, label %return, label %if.end3032

if.end3032:                                       ; preds = %if.end3021
  %bf.clear3034 = and i32 %bf.load3026, 65535
  switch i32 %bf.clear3034, label %if.end3095 [
    i32 67, label %if.then3072
    i32 68, label %if.then3072
    i32 54, label %if.then3072
    i32 55, label %if.then3072
    i32 58, label %if.then3072
    i32 134, label %if.then3072
    i32 56, label %if.then3072
    i32 140, label %if.then3072
  ]

if.then3072:                                      ; preds = %if.end3032, %if.end3032, %if.end3032, %if.end3032, %if.end3032, %if.end3032, %if.end3032, %if.end3032
  %503 = load %union.tree_node** %arrayidx2883, align 8, !tbaa !1
  %type3077 = getelementptr inbounds %union.tree_node* %503, i64 0, i32 0, i32 0, i32 1
  %504 = load %union.tree_node** %type3077, align 8, !tbaa !36
  %type3078 = bitcast %union.tree_node* %504 to %struct.tree_type*
  %mode3079 = getelementptr inbounds %struct.tree_type* %type3078, i64 0, i32 6
  %bf.load3080 = load i32* %mode3079, align 4
  %bf.lshr3081 = lshr i32 %bf.load3080, 9
  %bf.clear3082 = and i32 %bf.lshr3081, 127
  %cmp3083 = icmp eq i32 %modifier, 3
  br i1 %cmp3083, label %if.then3085, label %if.else3088

if.then3085:                                      ; preds = %if.then3072
  %call3086 = call i32 @subreg_lowpart_offset(i32 %bf.clear23, i32 %bf.clear3082) #5
  %call3087 = call %struct.rtx_def* @simplify_gen_subreg(i32 %bf.clear23, %struct.rtx_def* %call3025, i32 %bf.clear3082, i32 %call3086) #5
  br label %return

if.else3088:                                      ; preds = %if.then3072
  %unsigned_flag3090 = getelementptr inbounds %union.tree_node* %504, i64 0, i32 0, i32 0, i32 2
  %bf.load3091 = load i32* %unsigned_flag3090, align 8
  %bf.lshr3092 = lshr i32 %bf.load3091, 13
  %bf.clear3093 = and i32 %bf.lshr3092, 1
  %call3094 = call %struct.rtx_def* @convert_modes(i32 %bf.clear23, i32 %bf.clear3082, %struct.rtx_def* %call3025, i32 %bf.clear3093)
  br label %return

if.end3095:                                       ; preds = %if.end3032
  %cmp3096 = icmp eq i32 %modifier, 3
  br i1 %cmp3096, label %if.then3098, label %if.end3102

if.then3098:                                      ; preds = %if.end3095
  %505 = load i32* %unsignedp, align 4, !tbaa !21
  %tobool3099 = icmp ne i32 %505, 0
  %cond3100 = select i1 %tobool3099, i32 121, i32 120
  %call3101 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 %cond3100, i32 %bf.clear23, %struct.rtx_def* %call3025) #5
  br label %return

if.end3102:                                       ; preds = %if.end3095
  %cmp3103 = icmp eq %struct.rtx_def* %target.addr.1, null
  %506 = load %union.tree_node** %arrayidx2883, align 8, !tbaa !1
  %type3110 = getelementptr inbounds %union.tree_node* %506, i64 0, i32 0, i32 0, i32 1
  %507 = load %union.tree_node** %type3110, align 8, !tbaa !36
  %unsigned_flag3112 = getelementptr inbounds %union.tree_node* %507, i64 0, i32 0, i32 0, i32 2
  %bf.load3113 = load i32* %unsigned_flag3112, align 8
  %bf.lshr3114 = lshr i32 %bf.load3113, 13
  %bf.clear3115 = and i32 %bf.lshr3114, 1
  br i1 %cmp3103, label %if.then3105, label %if.else3117

if.then3105:                                      ; preds = %if.end3102
  %call.i8405 = call %struct.rtx_def* @convert_modes(i32 %bf.clear23, i32 0, %struct.rtx_def* %call3025, i32 %bf.clear3115) #5
  br label %return

if.else3117:                                      ; preds = %if.end3102
  call void @convert_move(%struct.rtx_def* %target.addr.1, %struct.rtx_def* %call3025, i32 %bf.clear3115)
  br label %return

sw.bb3129:                                        ; preds = %if.end185
  %operands3131 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx3132 = bitcast i32* %operands3131 to %union.tree_node**
  %508 = load %union.tree_node** %arrayidx3132, align 8, !tbaa !1
  %call3133 = call %struct.rtx_def* @expand_expr(%union.tree_node* %508, %struct.rtx_def* null, i32 %bf.clear23, i32 %modifier)
  %bf.load3136 = load i32* %mode20, align 4
  %bf.lshr3137 = lshr i32 %bf.load3136, 9
  %bf.clear3138 = and i32 %bf.lshr3137, 127
  %509 = getelementptr inbounds %struct.rtx_def* %call3133, i64 0, i32 0
  %bf.load3139 = load i32* %509, align 8
  %bf.lshr3140 = lshr i32 %bf.load3139, 16
  %bf.clear3141 = and i32 %bf.lshr3140, 255
  %cmp3142 = icmp eq i32 %bf.clear3138, %bf.clear3141
  br i1 %cmp3142, label %if.end3244, label %if.else3145

if.else3145:                                      ; preds = %sw.bb3129
  %cmp3151 = icmp eq i32 %bf.clear3138, 51
  %cmp3157 = icmp eq i32 %bf.clear3141, 51
  %or.cond8298 = or i1 %cmp3151, %cmp3157
  br i1 %or.cond8298, label %if.else3192, label %land.lhs.true3159

land.lhs.true3159:                                ; preds = %if.else3145
  %idxprom31658263 = zext i32 %bf.clear3138 to i64
  %arrayidx3166 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom31658263
  %510 = load i8* %arrayidx3166, align 1, !tbaa !5
  %conv3167 = zext i8 %510 to i32
  %511 = load i32* @target_flags, align 4, !tbaa !21
  %and3168 = lshr i32 %511, 23
  %512 = and i32 %and3168, 4
  %513 = add i32 %512, 4
  %cmp3171 = icmp ugt i32 %conv3167, %513
  br i1 %cmp3171, label %if.else3192, label %land.lhs.true3173

land.lhs.true3173:                                ; preds = %land.lhs.true3159
  %idxprom31778264 = zext i32 %bf.clear3141 to i64
  %arrayidx3178 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom31778264
  %514 = load i8* %arrayidx3178, align 1, !tbaa !5
  %conv3179 = zext i8 %514 to i32
  %cmp3183 = icmp ugt i32 %conv3179, %513
  br i1 %cmp3183, label %if.else3192, label %if.then3185

if.then3185:                                      ; preds = %land.lhs.true3173
  %call3191 = call %struct.rtx_def* @gen_lowpart(i32 %bf.clear3138, %struct.rtx_def* %call3133) #5
  br label %if.end3244

if.else3192:                                      ; preds = %land.lhs.true3173, %land.lhs.true3159, %if.else3145
  %bf.clear3194 = and i32 %bf.load3139, 65535
  %cmp3195 = icmp eq i32 %bf.clear3194, 66
  br i1 %cmp3195, label %if.end3244, label %if.then3197

if.then3197:                                      ; preds = %if.else3192
  %515 = load %union.tree_node** %arrayidx3132, align 8, !tbaa !1
  %type3203 = getelementptr inbounds %union.tree_node* %515, i64 0, i32 0, i32 0, i32 1
  %516 = load %union.tree_node** %type3203, align 8, !tbaa !36
  %bf.load3206 = load i32* %code4, align 8
  %bf.clear3208 = and i32 %bf.load3206, 1024
  %tobool3209 = icmp eq i32 %bf.clear3208, 0
  br i1 %tobool3209, label %if.end3211, label %if.then3210

if.then3210:                                      ; preds = %if.then3197
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 7418, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.expand_expr, i64 0, i64 0)) #8
  unreachable

if.end3211:                                       ; preds = %if.then3197
  %cmp3212 = icmp eq %struct.rtx_def* %target.addr.1, null
  br i1 %cmp3212, label %if.end3211.if.then3225_crit_edge, label %lor.lhs.false3214

if.end3211.if.then3225_crit_edge:                 ; preds = %if.end3211
  %type3226.phi.trans.insert = bitcast %union.tree_node* %516 to %struct.tree_type*
  %mode3227.phi.trans.insert = getelementptr inbounds %struct.tree_type* %type3226.phi.trans.insert, i64 0, i32 6
  %bf.load3228.pre = load i32* %mode3227.phi.trans.insert, align 4
  br label %if.then3225

lor.lhs.false3214:                                ; preds = %if.end3211
  %517 = getelementptr inbounds %struct.rtx_def* %target.addr.1, i64 0, i32 0
  %bf.load3215 = load i32* %517, align 8
  %bf.lshr3216 = lshr i32 %bf.load3215, 16
  %bf.clear3217 = and i32 %bf.lshr3216, 255
  %type3218 = bitcast %union.tree_node* %516 to %struct.tree_type*
  %mode3219 = getelementptr inbounds %struct.tree_type* %type3218, i64 0, i32 6
  %bf.load3220 = load i32* %mode3219, align 4
  %bf.lshr3221 = lshr i32 %bf.load3220, 9
  %bf.clear3222 = and i32 %bf.lshr3221, 127
  %cmp3223 = icmp eq i32 %bf.clear3217, %bf.clear3222
  br i1 %cmp3223, label %if.end3240, label %if.then3225

if.then3225:                                      ; preds = %if.end3211.if.then3225_crit_edge, %lor.lhs.false3214
  %bf.load3228 = phi i32 [ %bf.load3228.pre, %if.end3211.if.then3225_crit_edge ], [ %bf.load3220, %lor.lhs.false3214 ]
  %bf.lshr3229 = lshr i32 %bf.load3228, 9
  %bf.clear3230 = and i32 %bf.lshr3229, 127
  %idxprom32368262 = zext i32 %bf.clear3230 to i64
  %arrayidx3237 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom32368262
  %518 = load i8* %arrayidx3237, align 1, !tbaa !5
  %conv3238 = zext i8 %518 to i64
  %call3239 = call %struct.rtx_def* @assign_stack_temp_for_type(i32 %bf.clear3230, i64 %conv3238, i32 0, %union.tree_node* %516) #5
  br label %if.end3240

if.end3240:                                       ; preds = %lor.lhs.false3214, %if.then3225
  %target.addr.8 = phi %struct.rtx_def* [ %call3239, %if.then3225 ], [ %target.addr.1, %lor.lhs.false3214 ]
  %call3241 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %target.addr.8, %struct.rtx_def* %call3133)
  br label %if.end3244

if.end3244:                                       ; preds = %if.else3192, %if.then3185, %if.end3240, %sw.bb3129
  %op0.11 = phi %struct.rtx_def* [ %call3133, %sw.bb3129 ], [ %call3191, %if.then3185 ], [ %target.addr.8, %if.end3240 ], [ %call3133, %if.else3192 ]
  %519 = getelementptr inbounds %struct.rtx_def* %op0.11, i64 0, i32 0
  %bf.load3245 = load i32* %519, align 8
  %bf.clear3246 = and i32 %bf.load3245, 65535
  %cmp3247 = icmp eq i32 %bf.clear3246, 66
  br i1 %cmp3247, label %if.then3249, label %return

if.then3249:                                      ; preds = %if.end3244
  %call3250 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %op0.11) #5
  %bf.load3252 = load i32* %unsigned_flag, align 8
  %bf.clear3254 = and i32 %bf.load3252, 131072
  %tobool3255 = icmp eq i32 %bf.clear3254, 0
  br i1 %tobool3255, label %if.end3394, label %if.then3256

if.then3256:                                      ; preds = %if.then3249
  %arrayidx3258 = getelementptr inbounds %struct.rtx_def* %call3250, i64 0, i32 1, i64 1
  %rtmem3259 = bitcast %union.rtunion_def* %arrayidx3258 to %struct.mem_attrs**
  %520 = load %struct.mem_attrs** %rtmem3259, align 8, !tbaa !1
  %cmp3260 = icmp eq %struct.mem_attrs* %520, null
  br i1 %cmp3260, label %cond.end3268, label %cond.true3262

cond.true3262:                                    ; preds = %if.then3256
  %align3266 = getelementptr inbounds %struct.mem_attrs* %520, i64 0, i32 4
  %521 = load i32* %align3266, align 4, !tbaa !27
  br label %cond.end3268

cond.end3268:                                     ; preds = %if.then3256, %cond.true3262
  %cond3269 = phi i32 [ %521, %cond.true3262 ], [ 8, %if.then3256 ]
  %align3271 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 7
  %522 = bitcast %union.tree_node** %align3271 to i32*
  %523 = load i32* %522, align 4, !tbaa !62
  %cmp3272.not = icmp ule i32 %cond3269, %523
  %brmerge = or i1 %cmp3272.not, %cmp3260
  %.mux = select i1 %cmp3272.not, i32 %523, i32 8
  br i1 %brmerge, label %cond.end3291, label %cond.true3280

cond.true3280:                                    ; preds = %cond.end3268
  %align3284 = getelementptr inbounds %struct.mem_attrs* %520, i64 0, i32 4
  %524 = load i32* %align3284, align 4, !tbaa !27
  br label %cond.end3291

cond.end3291:                                     ; preds = %cond.end3268, %cond.true3280
  %cond3292 = phi i32 [ %524, %cond.true3280 ], [ %.mux, %cond.end3268 ]
  call void @set_mem_align(%struct.rtx_def* %call3250, i32 %cond3292) #5
  br label %if.end3394

if.end3394:                                       ; preds = %if.then3249, %cond.end3291
  %bf.load3397 = load i32* %mode20, align 4
  %bf.lshr3398 = lshr i32 %bf.load3397, 9
  %bf.clear3399 = and i32 %bf.lshr3398, 127
  %call3400 = call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %call3250, i32 %bf.clear3399, i64 0, i32 1, i32 1) #5
  br label %return

plus_expr:                                        ; preds = %if.end185, %if.else4012
  %exp.addr.0 = phi %union.tree_node* [ %call4016, %if.else4012 ], [ %exp, %if.end185 ]
  %525 = load i32* %unsignedp, align 4, !tbaa !21
  %tobool3403 = icmp eq i32 %525, 0
  %526 = load i32* @flag_trapv, align 4
  %tobool3405 = icmp ne i32 %526, 0
  %or.cond6587 = and i1 %tobool3403, %tobool3405
  br i1 %or.cond6587, label %land.lhs.true3406, label %cond.false3412

land.lhs.true3406:                                ; preds = %plus_expr
  %idxprom34078261 = zext i32 %bf.clear23 to i64
  %arrayidx3408 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom34078261
  %527 = load i32* %arrayidx3408, align 4, !tbaa !5
  %cmp3409 = icmp eq i32 %527, 1
  br i1 %cmp3409, label %cond.end3413, label %cond.false3412

cond.false3412:                                   ; preds = %plus_expr, %land.lhs.true3406
  br label %cond.end3413

cond.end3413:                                     ; preds = %land.lhs.true3406, %cond.false3412
  %cond3414.in = phi %struct.optab** [ getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 0), %cond.false3412 ], [ getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 1), %land.lhs.true3406 ]
  %cond3414 = load %struct.optab** %cond3414.in, align 8
  %operands3416 = getelementptr inbounds %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 2
  %arrayidx3417 = bitcast i32* %operands3416 to %union.tree_node**
  %528 = load %union.tree_node** %arrayidx3417, align 8, !tbaa !1
  %code3419 = getelementptr inbounds %union.tree_node* %528, i64 0, i32 0, i32 0, i32 2
  %bf.load3420 = load i32* %code3419, align 8
  %bf.clear3421 = and i32 %bf.load3420, 255
  %cmp3422 = icmp eq i32 %bf.clear3421, 59
  br i1 %cmp3422, label %land.lhs.true3424, label %if.end3493

land.lhs.true3424:                                ; preds = %cond.end3413
  %operands3429 = getelementptr inbounds %union.tree_node* %528, i64 0, i32 0, i32 2
  %arrayidx3430 = getelementptr inbounds i32* %operands3429, i64 2
  %529 = bitcast i32* %arrayidx3430 to %union.tree_node**
  %530 = load %union.tree_node** %529, align 8, !tbaa !1
  %code3432 = getelementptr inbounds %union.tree_node* %530, i64 0, i32 0, i32 0, i32 2
  %bf.load3433 = load i32* %code3432, align 8
  %bf.clear3434 = and i32 %bf.load3433, 255
  %cmp3435 = icmp eq i32 %bf.clear3434, 25
  br i1 %cmp3435, label %land.lhs.true3437, label %if.end3493

land.lhs.true3437:                                ; preds = %land.lhs.true3424
  %arrayidx3440 = getelementptr inbounds i32* %operands3416, i64 2
  %531 = bitcast i32* %arrayidx3440 to %union.tree_node**
  %532 = load %union.tree_node** %531, align 8, !tbaa !1
  %code3442 = getelementptr inbounds %union.tree_node* %532, i64 0, i32 0, i32 0, i32 2
  %bf.load3443 = load i32* %code3442, align 8
  %bf.clear3444 = and i32 %bf.load3443, 255
  %cmp3445 = icmp eq i32 %bf.clear3444, 120
  br i1 %cmp3445, label %land.lhs.true3447, label %if.end3493

land.lhs.true3447:                                ; preds = %land.lhs.true3437
  %operands3452 = getelementptr inbounds %union.tree_node* %532, i64 0, i32 0, i32 2
  %arrayidx3453 = getelementptr inbounds i32* %operands3452, i64 2
  %533 = bitcast i32* %arrayidx3453 to %struct.rtx_def**
  %534 = load %struct.rtx_def** %533, align 8, !tbaa !1
  %535 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 3), align 8, !tbaa !1
  %cmp3454 = icmp eq %struct.rtx_def* %534, %535
  %536 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8
  %cmp3463 = icmp eq %struct.rtx_def* %534, %536
  %or.cond8299 = or i1 %cmp3454, %cmp3463
  %537 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 5), align 8
  %cmp3472 = icmp eq %struct.rtx_def* %534, %537
  %or.cond8300 = or i1 %or.cond8299, %cmp3472
  br i1 %or.cond8300, label %if.then3474, label %if.end3493

if.then3474:                                      ; preds = %land.lhs.true3447
  %arrayidx3483 = bitcast i32* %operands3429 to %union.tree_node**
  %538 = load %union.tree_node** %arrayidx3483, align 8, !tbaa !1
  store %union.tree_node* %538, %union.tree_node** %531, align 8, !tbaa !1
  store %union.tree_node* %532, %union.tree_node** %arrayidx3483, align 8, !tbaa !1
  br label %if.end3493

if.end3493:                                       ; preds = %land.lhs.true3447, %if.then3474, %land.lhs.true3437, %land.lhs.true3424, %cond.end3413
  %cmp3497 = icmp eq i32 %modifier, 3
  %539 = and i32 %modifier, -3
  %540 = icmp eq i32 %539, 1
  br i1 %540, label %if.then3506, label %lor.lhs.false3499

lor.lhs.false3499:                                ; preds = %if.end3493
  %541 = load i32* @ptr_mode, align 4, !tbaa !5
  %cmp3500 = icmp eq i32 %bf.clear23, %541
  br i1 %cmp3500, label %land.lhs.true3502, label %if.end3684

land.lhs.true3502:                                ; preds = %lor.lhs.false3499
  %542 = load i32* @flag_trapv, align 4
  %tobool3505 = icmp ne i32 %542, 0
  %or.cond6589 = and i1 %tobool3403, %tobool3505
  br i1 %or.cond6589, label %if.end3684, label %if.then3506

if.then3506:                                      ; preds = %land.lhs.true3502, %if.end3493
  %543 = load %union.tree_node** %arrayidx3417, align 8, !tbaa !1
  %code3511 = getelementptr inbounds %union.tree_node* %543, i64 0, i32 0, i32 0, i32 2
  %bf.load3512 = load i32* %code3511, align 8
  %bf.clear3513 = and i32 %bf.load3512, 255
  %cmp3514 = icmp eq i32 %bf.clear3513, 25
  br i1 %cmp3514, label %land.lhs.true3516, label %if.else3566

land.lhs.true3516:                                ; preds = %if.then3506
  %idxprom35178260 = zext i32 %bf.clear23 to i64
  %arrayidx3518 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom35178260
  %544 = load i16* %arrayidx3518, align 2, !tbaa !19
  %cmp3520 = icmp ult i16 %544, 65
  br i1 %cmp3520, label %land.lhs.true3522, label %if.else3566

land.lhs.true3522:                                ; preds = %land.lhs.true3516
  %arrayidx3525 = getelementptr inbounds i32* %operands3416, i64 2
  %545 = bitcast i32* %arrayidx3525 to %union.tree_node**
  %546 = load %union.tree_node** %545, align 8, !tbaa !1
  %constant_flag3527 = getelementptr inbounds %union.tree_node* %546, i64 0, i32 0, i32 0, i32 2
  %bf.load3528 = load i32* %constant_flag3527, align 8
  %bf.clear3530 = and i32 %bf.load3528, 512
  %tobool3531 = icmp eq i32 %bf.clear3530, 0
  br i1 %tobool3531, label %if.else3566, label %if.then3532

if.then3532:                                      ; preds = %land.lhs.true3522
  %call3536 = call %struct.rtx_def* @expand_expr(%union.tree_node* %546, %struct.rtx_def* %call8451, i32 0, i32 1)
  %547 = load %union.tree_node** %arrayidx3417, align 8, !tbaa !1
  %int_cst3541 = getelementptr inbounds %union.tree_node* %547, i64 0, i32 0, i32 2
  %low3542 = bitcast i32* %int_cst3541 to i64*
  %548 = load i64* %low3542, align 8, !tbaa !42
  %549 = load %union.tree_node** %545, align 8, !tbaa !1
  %type3547 = getelementptr inbounds %union.tree_node* %549, i64 0, i32 0, i32 0, i32 1
  %550 = load %union.tree_node** %type3547, align 8, !tbaa !36
  %type3548 = bitcast %union.tree_node* %550 to %struct.tree_type*
  %mode3549 = getelementptr inbounds %struct.tree_type* %type3548, i64 0, i32 6
  %bf.load3550 = load i32* %mode3549, align 4
  %bf.lshr3551 = lshr i32 %bf.load3550, 9
  %bf.clear3552 = and i32 %bf.lshr3551, 127
  %call3553 = call %struct.rtx_def* @immed_double_const(i64 %548, i64 0, i32 %bf.clear3552) #5
  %rtwint3556 = getelementptr inbounds %struct.rtx_def* %call3553, i64 0, i32 1, i64 0, i32 0
  %551 = load i64* %rtwint3556, align 8, !tbaa !22
  %call3557 = call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %call3536, i64 %551) #5
  switch i32 %modifier, label %if.then3563 [
    i32 3, label %return
    i32 1, label %return
  ]

if.then3563:                                      ; preds = %if.then3532
  %call3564 = call %struct.rtx_def* @force_operand(%struct.rtx_def* %call3557, %struct.rtx_def* %target.addr.1)
  br label %return

if.else3566:                                      ; preds = %land.lhs.true3522, %land.lhs.true3516, %if.then3506
  %arrayidx3569 = getelementptr inbounds i32* %operands3416, i64 2
  %552 = bitcast i32* %arrayidx3569 to %union.tree_node**
  %553 = load %union.tree_node** %552, align 8, !tbaa !1
  %code3571 = getelementptr inbounds %union.tree_node* %553, i64 0, i32 0, i32 0, i32 2
  %bf.load3572 = load i32* %code3571, align 8
  %bf.clear3573 = and i32 %bf.load3572, 255
  %cmp3574 = icmp eq i32 %bf.clear3573, 25
  br i1 %cmp3574, label %land.lhs.true3576, label %if.end3684

land.lhs.true3576:                                ; preds = %if.else3566
  %idxprom35778259 = zext i32 %bf.clear23 to i64
  %arrayidx3578 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom35778259
  %554 = load i16* %arrayidx3578, align 2, !tbaa !19
  %cmp3580 = icmp ugt i16 %554, 32
  %bf.clear3590 = and i32 %bf.load3512, 512
  %tobool3591 = icmp eq i32 %bf.clear3590, 0
  %or.cond8677 = or i1 %cmp3580, %tobool3591
  br i1 %or.cond8677, label %if.end3684, label %if.then3592

if.then3592:                                      ; preds = %land.lhs.true3576
  %cond3599 = select i1 %cmp3497, i32 3, i32 1
  %call3600 = call %struct.rtx_def* @expand_expr(%union.tree_node* %543, %struct.rtx_def* %call8451, i32 0, i32 %cond3599)
  %555 = getelementptr inbounds %struct.rtx_def* %call3600, i64 0, i32 0
  %bf.load3601 = load i32* %555, align 8
  %bf.clear3602 = and i32 %bf.load3601, 65535
  switch i32 %bf.clear3602, label %if.then3640 [
    i32 67, label %if.end3652
    i32 68, label %if.end3652
    i32 54, label %if.end3652
    i32 55, label %if.end3652
    i32 58, label %if.end3652
    i32 134, label %if.end3652
    i32 56, label %if.end3652
    i32 140, label %if.end3652
  ]

if.then3640:                                      ; preds = %if.then3592
  %556 = load %union.tree_node** %552, align 8, !tbaa !1
  %call3644 = call %struct.rtx_def* @expand_expr(%union.tree_node* %556, %struct.rtx_def* null, i32 0, i32 %modifier)
  switch i32 %modifier, label %binop2 [
    i32 3, label %both_summands
    i32 1, label %both_summands
  ]

if.end3652:                                       ; preds = %if.then3592, %if.then3592, %if.then3592, %if.then3592, %if.then3592, %if.then3592, %if.then3592, %if.then3592
  %557 = load %union.tree_node** %552, align 8, !tbaa !1
  %int_cst3657 = getelementptr inbounds %union.tree_node* %557, i64 0, i32 0, i32 2
  %low3658 = bitcast i32* %int_cst3657 to i64*
  %558 = load i64* %low3658, align 8, !tbaa !42
  %559 = load %union.tree_node** %arrayidx3417, align 8, !tbaa !1
  %type3663 = getelementptr inbounds %union.tree_node* %559, i64 0, i32 0, i32 0, i32 1
  %560 = load %union.tree_node** %type3663, align 8, !tbaa !36
  %type3664 = bitcast %union.tree_node* %560 to %struct.tree_type*
  %mode3665 = getelementptr inbounds %struct.tree_type* %type3664, i64 0, i32 6
  %bf.load3666 = load i32* %mode3665, align 4
  %bf.lshr3667 = lshr i32 %bf.load3666, 9
  %bf.clear3668 = and i32 %bf.lshr3667, 127
  %call3669 = call %struct.rtx_def* @immed_double_const(i64 %558, i64 0, i32 %bf.clear3668) #5
  %rtwint3672 = getelementptr inbounds %struct.rtx_def* %call3669, i64 0, i32 1, i64 0, i32 0
  %561 = load i64* %rtwint3672, align 8, !tbaa !22
  %call3673 = call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %call3600, i64 %561) #5
  switch i32 %modifier, label %if.then3679 [
    i32 3, label %return
    i32 1, label %return
  ]

if.then3679:                                      ; preds = %if.end3652
  %call3680 = call %struct.rtx_def* @force_operand(%struct.rtx_def* %call3673, %struct.rtx_def* %target.addr.1)
  br label %return

if.end3684:                                       ; preds = %land.lhs.true3576, %if.else3566, %land.lhs.true3502, %lor.lhs.false3499
  switch i32 %modifier, label %binop [
    i32 3, label %lor.lhs.false3690
    i32 1, label %lor.lhs.false3690
  ]

lor.lhs.false3690:                                ; preds = %if.end3684, %if.end3684
  %562 = load i32* @ptr_mode, align 4
  %cmp3691 = icmp eq i32 %bf.clear23, %562
  br i1 %cmp3691, label %if.end3694, label %binop

if.end3694:                                       ; preds = %lor.lhs.false3690
  %arrayidx3697 = getelementptr inbounds i32* %operands3416, i64 2
  %563 = bitcast i32* %arrayidx3697 to %union.tree_node**
  %564 = load %union.tree_node** %563, align 8, !tbaa !1
  %call3698 = call i32 @safe_from_p(%struct.rtx_def* %call8451, %union.tree_node* %564, i32 1)
  %tobool3699 = icmp eq i32 %call3698, 0
  %.call = select i1 %tobool3699, %struct.rtx_def* null, %struct.rtx_def* %call8451
  %565 = load %union.tree_node** %arrayidx3417, align 8, !tbaa !1
  %call3705 = call %struct.rtx_def* @expand_expr(%union.tree_node* %565, %struct.rtx_def* %.call, i32 0, i32 %modifier)
  %566 = load %union.tree_node** %563, align 8, !tbaa !1
  %call3709 = call %struct.rtx_def* @expand_expr(%union.tree_node* %566, %struct.rtx_def* null, i32 0, i32 %modifier)
  br label %both_summands

both_summands:                                    ; preds = %if.then3640, %if.then3640, %if.end3694
  %op1.1 = phi %struct.rtx_def* [ %call3644, %if.then3640 ], [ %call3709, %if.end3694 ], [ %call3644, %if.then3640 ]
  %op0.14 = phi %struct.rtx_def* [ %call3600, %if.then3640 ], [ %call3705, %if.end3694 ], [ %call3600, %if.then3640 ]
  %567 = getelementptr inbounds %struct.rtx_def* %op0.14, i64 0, i32 0
  %bf.load3710 = load i32* %567, align 8
  %bf.clear3711 = and i32 %bf.load3710, 65535
  %cmp3712 = icmp eq i32 %bf.clear3711, 75
  br i1 %cmp3712, label %land.lhs.true3714, label %if.end3779

land.lhs.true3714:                                ; preds = %both_summands
  %arrayidx3716 = getelementptr inbounds %struct.rtx_def* %op0.14, i64 0, i32 1, i64 1
  %rtx3717 = bitcast %union.rtunion_def* %arrayidx3716 to %struct.rtx_def**
  %568 = load %struct.rtx_def** %rtx3717, align 8, !tbaa !1
  %569 = getelementptr inbounds %struct.rtx_def* %568, i64 0, i32 0
  %bf.load3718 = load i32* %569, align 8
  %bf.clear3719 = and i32 %bf.load3718, 65535
  switch i32 %bf.clear3719, label %if.end3779 [
    i32 67, label %if.then3778
    i32 68, label %if.then3778
    i32 54, label %if.then3778
    i32 55, label %if.then3778
    i32 58, label %if.then3778
    i32 134, label %if.then3778
    i32 56, label %if.then3778
    i32 140, label %if.then3778
  ]

if.then3778:                                      ; preds = %land.lhs.true3714, %land.lhs.true3714, %land.lhs.true3714, %land.lhs.true3714, %land.lhs.true3714, %land.lhs.true3714, %land.lhs.true3714, %land.lhs.true3714
  br label %if.end3779

if.end3779:                                       ; preds = %land.lhs.true3714, %if.then3778, %both_summands
  %op1.2 = phi %struct.rtx_def* [ %op0.14, %if.then3778 ], [ %op1.1, %both_summands ], [ %op1.1, %land.lhs.true3714 ]
  %op0.15 = phi %struct.rtx_def* [ %op1.1, %if.then3778 ], [ %op0.14, %both_summands ], [ %op0.14, %land.lhs.true3714 ]
  %570 = getelementptr inbounds %struct.rtx_def* %op1.2, i64 0, i32 0
  %bf.load3780 = load i32* %570, align 8
  %bf.clear3781 = and i32 %bf.load3780, 65535
  %cmp3782 = icmp eq i32 %bf.clear3781, 75
  br i1 %cmp3782, label %land.lhs.true3784, label %if.end3887

land.lhs.true3784:                                ; preds = %if.end3779
  %arrayidx3786 = getelementptr inbounds %struct.rtx_def* %op1.2, i64 0, i32 1, i64 1
  %rtx3787 = bitcast %union.rtunion_def* %arrayidx3786 to %struct.rtx_def**
  %571 = load %struct.rtx_def** %rtx3787, align 8, !tbaa !1
  %572 = getelementptr inbounds %struct.rtx_def* %571, i64 0, i32 0
  %bf.load3788 = load i32* %572, align 8
  %bf.clear3789 = and i32 %bf.load3788, 65535
  switch i32 %bf.clear3789, label %if.end3887 [
    i32 67, label %if.then3848
    i32 68, label %if.then3848
    i32 54, label %if.then3848
    i32 55, label %if.then3848
    i32 58, label %if.then3848
    i32 134, label %if.then3848
    i32 56, label %if.then3848
    i32 140, label %if.then3848
  ]

if.then3848:                                      ; preds = %land.lhs.true3784, %land.lhs.true3784, %land.lhs.true3784, %land.lhs.true3784, %land.lhs.true3784, %land.lhs.true3784, %land.lhs.true3784, %land.lhs.true3784
  %573 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  store %struct.rtx_def* %573, %struct.rtx_def** %constant_term, align 8, !tbaa !1
  %arrayidx3850 = getelementptr inbounds %struct.rtx_def* %op1.2, i64 0, i32 1, i64 0
  %rtx3851 = bitcast %union.rtunion_def* %arrayidx3850 to %struct.rtx_def**
  %574 = load %struct.rtx_def** %rtx3851, align 8, !tbaa !1
  %call3852 = call %struct.rtx_def* @simplify_binary_operation(i32 75, i32 %bf.clear23, %struct.rtx_def* %574, %struct.rtx_def* %op0.15) #5
  %cmp3853 = icmp eq %struct.rtx_def* %call3852, null
  br i1 %cmp3853, label %if.else3856, label %if.end3872

if.else3856:                                      ; preds = %if.then3848
  %575 = getelementptr inbounds %struct.rtx_def* %op0.15, i64 0, i32 0
  %bf.load3857 = load i32* %575, align 8
  %bf.clear3858 = and i32 %bf.load3857, 65535
  %cmp3859 = icmp eq i32 %bf.clear3858, 78
  %576 = load %struct.rtx_def** %rtx3851, align 8, !tbaa !1
  br i1 %cmp3859, label %if.then3861, label %if.else3866

if.then3861:                                      ; preds = %if.else3856
  %call3865 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %bf.clear23, %struct.rtx_def* %op0.15, %struct.rtx_def* %576) #5
  br label %if.end3872

if.else3866:                                      ; preds = %if.else3856
  %call3870 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %bf.clear23, %struct.rtx_def* %576, %struct.rtx_def* %op0.15) #5
  br label %if.end3872

if.end3872:                                       ; preds = %if.then3848, %if.then3861, %if.else3866
  %op0.16 = phi %struct.rtx_def* [ %call3865, %if.then3861 ], [ %call3870, %if.else3866 ], [ %call3852, %if.then3848 ]
  %call3873 = call %struct.rtx_def* @eliminate_constant_term(%struct.rtx_def* %op0.16, %struct.rtx_def** %constant_term) #5
  %577 = load %struct.rtx_def** %constant_term, align 8, !tbaa !1
  %578 = load %struct.rtx_def** %rtx3787, align 8, !tbaa !1
  %call3877 = call %struct.rtx_def* @simplify_binary_operation(i32 75, i32 %bf.clear23, %struct.rtx_def* %577, %struct.rtx_def* %578) #5
  %cmp3878 = icmp eq %struct.rtx_def* %call3877, null
  br i1 %cmp3878, label %if.else3881, label %if.end3887

if.else3881:                                      ; preds = %if.end3872
  %579 = load %struct.rtx_def** %constant_term, align 8, !tbaa !1
  %580 = load %struct.rtx_def** %rtx3787, align 8, !tbaa !1
  %call3885 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %bf.clear23, %struct.rtx_def* %579, %struct.rtx_def* %580) #5
  br label %if.end3887

if.end3887:                                       ; preds = %if.end3872, %land.lhs.true3784, %if.else3881, %if.end3779
  %op1.3 = phi %struct.rtx_def* [ %call3885, %if.else3881 ], [ %op1.2, %if.end3779 ], [ %op1.2, %land.lhs.true3784 ], [ %call3877, %if.end3872 ]
  %op0.17 = phi %struct.rtx_def* [ %call3873, %if.else3881 ], [ %op0.15, %if.end3779 ], [ %op0.15, %land.lhs.true3784 ], [ %call3873, %if.end3872 ]
  %581 = getelementptr inbounds %struct.rtx_def* %op0.17, i64 0, i32 0
  %bf.load3888 = load i32* %581, align 8
  %bf.clear3889 = and i32 %bf.load3888, 65535
  switch i32 %bf.clear3889, label %lor.lhs.false3927 [
    i32 67, label %if.then3932
    i32 68, label %if.then3932
    i32 54, label %if.then3932
    i32 55, label %if.then3932
    i32 58, label %if.then3932
    i32 134, label %if.then3932
    i32 56, label %if.then3932
    i32 140, label %if.then3932
  ]

lor.lhs.false3927:                                ; preds = %if.end3887
  %582 = getelementptr inbounds %struct.rtx_def* %op1.3, i64 0, i32 0
  %bf.load3928 = load i32* %582, align 8
  %bf.clear3929 = and i32 %bf.load3928, 65535
  %cmp3930 = icmp eq i32 %bf.clear3929, 78
  br i1 %cmp3930, label %if.then3932, label %if.end3933

if.then3932:                                      ; preds = %if.end3887, %if.end3887, %if.end3887, %if.end3887, %if.end3887, %if.end3887, %if.end3887, %if.end3887, %lor.lhs.false3927
  br label %if.end3933

if.end3933:                                       ; preds = %if.then3932, %lor.lhs.false3927
  %op1.4 = phi %struct.rtx_def* [ %op0.17, %if.then3932 ], [ %op1.3, %lor.lhs.false3927 ]
  %op0.18 = phi %struct.rtx_def* [ %op1.3, %if.then3932 ], [ %op0.17, %lor.lhs.false3927 ]
  %call3934 = call %struct.rtx_def* @simplify_binary_operation(i32 75, i32 %bf.clear23, %struct.rtx_def* %op0.18, %struct.rtx_def* %op1.4) #5
  %tobool3935 = icmp eq %struct.rtx_def* %call3934, null
  br i1 %tobool3935, label %cond.false3937, label %return

cond.false3937:                                   ; preds = %if.end3933
  %call3938 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %bf.clear23, %struct.rtx_def* %op0.18, %struct.rtx_def* %op1.4) #5
  br label %return

sw.bb3941:                                        ; preds = %if.end185
  %583 = and i32 %modifier, -3
  %584 = icmp eq i32 %583, 1
  %operands3949 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  br i1 %584, label %land.lhs.true3947, label %if.end3982

land.lhs.true3947:                                ; preds = %sw.bb3941
  %arrayidx3950 = bitcast i32* %operands3949 to %union.tree_node**
  %585 = load %union.tree_node** %arrayidx3950, align 8, !tbaa !1
  %call3951 = call i32 @really_constant_p(%union.tree_node* %585) #5
  %tobool3952 = icmp eq i32 %call3951, 0
  br i1 %tobool3952, label %if.end3982, label %land.lhs.true3953

land.lhs.true3953:                                ; preds = %land.lhs.true3947
  %arrayidx3956 = getelementptr inbounds i32* %operands3949, i64 2
  %586 = bitcast i32* %arrayidx3956 to %union.tree_node**
  %587 = load %union.tree_node** %586, align 8, !tbaa !1
  %call3957 = call i32 @really_constant_p(%union.tree_node* %587) #5
  %tobool3958 = icmp eq i32 %call3957, 0
  br i1 %tobool3958, label %if.end3982, label %if.then3959

if.then3959:                                      ; preds = %land.lhs.true3953
  %588 = load %union.tree_node** %arrayidx3950, align 8, !tbaa !1
  %call3964 = call %struct.rtx_def* @expand_expr(%union.tree_node* %588, %struct.rtx_def* null, i32 0, i32 %modifier)
  %589 = load %union.tree_node** %586, align 8, !tbaa !1
  %call3969 = call %struct.rtx_def* @expand_expr(%union.tree_node* %589, %struct.rtx_def* null, i32 0, i32 %modifier)
  %590 = getelementptr inbounds %struct.rtx_def* %call3969, i64 0, i32 0
  %bf.load3970 = load i32* %590, align 8
  %bf.clear3971 = and i32 %bf.load3970, 65535
  %cmp3972 = icmp eq i32 %bf.clear3971, 54
  br i1 %cmp3972, label %if.then3974, label %if.else3980

if.then3974:                                      ; preds = %if.then3959
  %rtwint3977 = getelementptr inbounds %struct.rtx_def* %call3969, i64 0, i32 1, i64 0, i32 0
  %591 = load i64* %rtwint3977, align 8, !tbaa !22
  %sub3978 = sub nsw i64 0, %591
  %call3979 = call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %call3964, i64 %sub3978) #5
  br label %return

if.else3980:                                      ; preds = %if.then3959
  %call3981 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 76, i32 %bf.clear23, %struct.rtx_def* %call3964, %struct.rtx_def* %call3969) #5
  br label %return

if.end3982:                                       ; preds = %sw.bb3941, %land.lhs.true3953, %land.lhs.true3947
  %arrayidx3985 = getelementptr inbounds i32* %operands3949, i64 2
  %592 = bitcast i32* %arrayidx3985 to %union.tree_node**
  %593 = load %union.tree_node** %592, align 8, !tbaa !1
  %code3987 = getelementptr inbounds %union.tree_node* %593, i64 0, i32 0, i32 0, i32 2
  %bf.load3988 = load i32* %code3987, align 8
  %bf.clear3989 = and i32 %bf.load3988, 255
  %cmp3990 = icmp eq i32 %bf.clear3989, 25
  br i1 %cmp3990, label %if.then3992, label %if.end4018

if.then3992:                                      ; preds = %if.end3982
  %call3996 = call %union.tree_node* @build1(i32 77, %union.tree_node* %0, %union.tree_node* %593) #5
  %call3997 = call %union.tree_node* @fold(%union.tree_node* %call3996) #5
  %bf.load4000 = load i32* %unsigned_flag, align 8
  %bf.clear4002 = and i32 %bf.load4000, 8192
  %tobool4003 = icmp eq i32 %bf.clear4002, 0
  br i1 %tobool4003, label %lor.lhs.false4004, label %if.end4018

lor.lhs.false4004:                                ; preds = %if.then3992
  %public_flag4006 = getelementptr inbounds %union.tree_node* %call3997, i64 0, i32 0, i32 0, i32 2
  %bf.load4007 = load i32* %public_flag4006, align 8
  %bf.clear4009 = and i32 %bf.load4007, 524288
  %tobool4010 = icmp eq i32 %bf.clear4009, 0
  br i1 %tobool4010, label %if.else4012, label %if.end4018

if.else4012:                                      ; preds = %lor.lhs.false4004
  %arrayidx4015 = bitcast i32* %operands3949 to %union.tree_node**
  %594 = load %union.tree_node** %arrayidx4015, align 8, !tbaa !1
  %call4016 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 59, %union.tree_node* %0, %union.tree_node* %594, %union.tree_node* %call3997) #5
  br label %plus_expr

if.end4018:                                       ; preds = %lor.lhs.false4004, %if.then3992, %if.end3982
  %595 = load i32* %unsignedp, align 4, !tbaa !21
  %tobool4019 = icmp eq i32 %595, 0
  %596 = load i32* @flag_trapv, align 4
  %tobool4021 = icmp ne i32 %596, 0
  %or.cond6595 = and i1 %tobool4019, %tobool4021
  br i1 %or.cond6595, label %land.lhs.true4022, label %cond.false4028

land.lhs.true4022:                                ; preds = %if.end4018
  %idxprom40238258 = zext i32 %bf.clear23 to i64
  %arrayidx4024 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom40238258
  %597 = load i32* %arrayidx4024, align 4, !tbaa !5
  %cmp4025 = icmp eq i32 %597, 1
  br i1 %cmp4025, label %cond.end4029, label %cond.false4028

cond.false4028:                                   ; preds = %if.end4018, %land.lhs.true4022
  br label %cond.end4029

cond.end4029:                                     ; preds = %land.lhs.true4022, %cond.false4028
  %cond4030.in = phi %struct.optab** [ getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 2), %cond.false4028 ], [ getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 3), %land.lhs.true4022 ]
  %cond4030 = load %struct.optab** %cond4030.in, align 8
  br label %binop

sw.bb4031:                                        ; preds = %if.end185
  %operands4033 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx4034 = bitcast i32* %operands4033 to %union.tree_node**
  %598 = load %union.tree_node** %arrayidx4034, align 8, !tbaa !1
  %code4036 = getelementptr inbounds %union.tree_node* %598, i64 0, i32 0, i32 0, i32 2
  %bf.load4037 = load i32* %code4036, align 8
  %bf.clear4038 = and i32 %bf.load4037, 255
  %cmp4039 = icmp eq i32 %bf.clear4038, 25
  br i1 %cmp4039, label %if.then4041, label %if.end4054

if.then4041:                                      ; preds = %sw.bb4031
  %arrayidx4047 = getelementptr inbounds i32* %operands4033, i64 2
  %599 = bitcast i32* %arrayidx4047 to %union.tree_node**
  %600 = load %union.tree_node** %599, align 8, !tbaa !1
  store %union.tree_node* %600, %union.tree_node** %arrayidx4034, align 8, !tbaa !1
  store %union.tree_node* %598, %union.tree_node** %599, align 8, !tbaa !1
  br label %if.end4054

if.end4054:                                       ; preds = %if.then4041, %sw.bb4031
  %cmp4055 = icmp eq i32 %modifier, 1
  %601 = load i32* @ptr_mode, align 4
  %cmp4058 = icmp eq i32 %bf.clear23, %601
  %or.cond8301 = and i1 %cmp4055, %cmp4058
  %arrayidx4063 = getelementptr inbounds i32* %operands4033, i64 2
  %602 = bitcast i32* %arrayidx4063 to %union.tree_node**
  br i1 %or.cond8301, label %land.lhs.true4060, label %if.end4091

land.lhs.true4060:                                ; preds = %if.end4054
  %603 = load %union.tree_node** %602, align 8, !tbaa !1
  %call4064 = call i32 @host_integerp(%union.tree_node* %603, i32 0) #5
  %tobool4065 = icmp eq i32 %call4064, 0
  br i1 %tobool4065, label %if.end4091, label %if.then4066

if.then4066:                                      ; preds = %land.lhs.true4060
  %604 = load %union.tree_node** %arrayidx4034, align 8, !tbaa !1
  %call4070 = call %struct.rtx_def* @expand_expr(%union.tree_node* %604, %struct.rtx_def* %call8451, i32 0, i32 1)
  %605 = getelementptr inbounds %struct.rtx_def* %call4070, i64 0, i32 0
  %bf.load4071 = load i32* %605, align 8
  %bf.clear4072 = and i32 %bf.load4071, 65535
  %cmp4073 = icmp eq i32 %bf.clear4072, 61
  br i1 %cmp4073, label %if.end4077, label %if.then4075

if.then4075:                                      ; preds = %if.then4066
  %call4076 = call %struct.rtx_def* @force_operand(%struct.rtx_def* %call4070, %struct.rtx_def* null)
  %.phi.trans.insert8580 = getelementptr inbounds %struct.rtx_def* %call4076, i64 0, i32 0
  %bf.load4078.pre = load i32* %.phi.trans.insert8580, align 8
  br label %if.end4077

if.end4077:                                       ; preds = %if.then4066, %if.then4075
  %bf.load4078 = phi i32 [ %bf.load4078.pre, %if.then4075 ], [ %bf.load4071, %if.then4066 ]
  %op0.19 = phi %struct.rtx_def* [ %call4076, %if.then4075 ], [ %call4070, %if.then4066 ]
  %bf.clear4079 = and i32 %bf.load4078, 65535
  %cmp4080 = icmp eq i32 %bf.clear4079, 61
  br i1 %cmp4080, label %if.end4084, label %if.then4082

if.then4082:                                      ; preds = %if.end4077
  %call4083 = call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.clear23, %struct.rtx_def* %op0.19) #5
  br label %if.end4084

if.end4084:                                       ; preds = %if.end4077, %if.then4082
  %op0.20 = phi %struct.rtx_def* [ %call4083, %if.then4082 ], [ %op0.19, %if.end4077 ]
  %606 = load %union.tree_node** %602, align 8, !tbaa !1
  %call4088 = call i64 @tree_low_cst(%union.tree_node* %606, i32 0) #5
  %call4089 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call4088) #5
  %call4090 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 78, i32 %bf.clear23, %struct.rtx_def* %op0.20, %struct.rtx_def* %call4089) #5
  br label %return

if.end4091:                                       ; preds = %if.end4054, %land.lhs.true4060
  %607 = load %union.tree_node** %602, align 8, !tbaa !1
  %call4095 = call i32 @safe_from_p(%struct.rtx_def* %call8451, %union.tree_node* %607, i32 1)
  %tobool4096 = icmp eq i32 %call4095, 0
  %.call8302 = select i1 %tobool4096, %struct.rtx_def* null, %struct.rtx_def* %call8451
  %608 = load %union.tree_node** %arrayidx4034, align 8, !tbaa !1
  %code4103 = getelementptr inbounds %union.tree_node* %608, i64 0, i32 0, i32 0, i32 2
  %bf.load4104 = load i32* %code4103, align 8
  %bf.clear4105 = and i32 %bf.load4104, 255
  %cmp4106 = icmp eq i32 %bf.clear4105, 115
  br i1 %cmp4106, label %land.lhs.true4108, label %if.end4396

land.lhs.true4108:                                ; preds = %if.end4091
  %bf.load4111 = load i32* %unsigned_flag, align 8
  %bf.clear4112 = and i32 %bf.load4111, 255
  %cmp4113 = icmp eq i32 %bf.clear4112, 6
  br i1 %cmp4113, label %land.lhs.true4115, label %if.end4396

land.lhs.true4115:                                ; preds = %land.lhs.true4108
  %operands4120 = getelementptr inbounds %union.tree_node* %608, i64 0, i32 0, i32 2
  %arrayidx4121 = bitcast i32* %operands4120 to %union.tree_node**
  %609 = load %union.tree_node** %arrayidx4121, align 8, !tbaa !1
  %type4123 = getelementptr inbounds %union.tree_node* %609, i64 0, i32 0, i32 0, i32 1
  %610 = load %union.tree_node** %type4123, align 8, !tbaa !36
  %type4124 = bitcast %union.tree_node* %610 to %struct.tree_type*
  %precision = getelementptr inbounds %struct.tree_type* %type4124, i64 0, i32 6
  %bf.load4125 = load i32* %precision, align 4
  %bf.clear4126 = and i32 %bf.load4125, 511
  %type4131 = getelementptr inbounds %union.tree_node* %608, i64 0, i32 0, i32 0, i32 1
  %611 = load %union.tree_node** %type4131, align 8, !tbaa !36
  %type4132 = bitcast %union.tree_node* %611 to %struct.tree_type*
  %precision4133 = getelementptr inbounds %struct.tree_type* %type4132, i64 0, i32 6
  %bf.load4134 = load i32* %precision4133, align 4
  %bf.clear4135 = and i32 %bf.load4134, 511
  %cmp4136 = icmp ult i32 %bf.clear4126, %bf.clear4135
  br i1 %cmp4136, label %land.lhs.true4138, label %if.end4396

land.lhs.true4138:                                ; preds = %land.lhs.true4115
  %612 = load %union.tree_node** %602, align 8, !tbaa !1
  %code4143 = getelementptr inbounds %union.tree_node* %612, i64 0, i32 0, i32 0, i32 2
  %bf.load4144 = load i32* %code4143, align 8
  %bf.clear4145 = and i32 %bf.load4144, 255
  %cmp4146 = icmp eq i32 %bf.clear4145, 25
  br i1 %cmp4146, label %land.lhs.true4148, label %lor.lhs.false4188

land.lhs.true4148:                                ; preds = %land.lhs.true4138
  %call4160 = call i32 @int_fits_type_p(%union.tree_node* %612, %union.tree_node* %610) #5
  %tobool4161 = icmp eq i32 %call4160, 0
  br i1 %tobool4161, label %lor.lhs.false4188, label %land.lhs.true4162

land.lhs.true4162:                                ; preds = %land.lhs.true4148
  %613 = load %union.tree_node** %602, align 8, !tbaa !1
  %type4167 = getelementptr inbounds %union.tree_node* %613, i64 0, i32 0, i32 0, i32 1
  %614 = load %union.tree_node** %type4167, align 8, !tbaa !36
  %type4168 = bitcast %union.tree_node* %614 to %struct.tree_type*
  %mode4169 = getelementptr inbounds %struct.tree_type* %type4168, i64 0, i32 6
  %bf.load4170 = load i32* %mode4169, align 4
  %bf.lshr4171 = lshr i32 %bf.load4170, 9
  %bf.clear4172 = and i32 %bf.lshr4171, 127
  %idxprom41738257 = zext i32 %bf.clear4172 to i64
  %arrayidx4174 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom41738257
  %615 = load i16* %arrayidx4174, align 2, !tbaa !19
  %cmp4176 = icmp ugt i16 %615, 64
  br i1 %cmp4176, label %if.then4254, label %lor.lhs.false4178

lor.lhs.false4178:                                ; preds = %land.lhs.true4162
  %int_cst4183 = getelementptr inbounds %union.tree_node* %613, i64 0, i32 0, i32 2
  %low4184 = bitcast i32* %int_cst4183 to i64*
  %616 = load i64* %low4184, align 8, !tbaa !42
  %call4185 = call i32 @exact_log2_wide(i64 %616) #5
  %cmp4186 = icmp slt i32 %call4185, 0
  br i1 %cmp4186, label %if.then4254, label %lor.lhs.false4188

lor.lhs.false4188:                                ; preds = %land.lhs.true4148, %lor.lhs.false4178, %land.lhs.true4138
  %617 = load %union.tree_node** %602, align 8, !tbaa !1
  %code4193 = getelementptr inbounds %union.tree_node* %617, i64 0, i32 0, i32 0, i32 2
  %bf.load4194 = load i32* %code4193, align 8
  %bf.clear4195 = and i32 %bf.load4194, 255
  %cmp4196 = icmp eq i32 %bf.clear4195, 115
  br i1 %cmp4196, label %land.lhs.true4198, label %lor.lhs.false4188.if.end4396_crit_edge

lor.lhs.false4188.if.end4396_crit_edge:           ; preds = %lor.lhs.false4188
  %.pre8582 = load %union.tree_node** %arrayidx4034, align 8, !tbaa !1
  br label %if.end4396

land.lhs.true4198:                                ; preds = %lor.lhs.false4188
  %operands4203 = getelementptr inbounds %union.tree_node* %617, i64 0, i32 0, i32 2
  %arrayidx4204 = bitcast i32* %operands4203 to %union.tree_node**
  %618 = load %union.tree_node** %arrayidx4204, align 8, !tbaa !1
  %type4206 = getelementptr inbounds %union.tree_node* %618, i64 0, i32 0, i32 0, i32 1
  %619 = load %union.tree_node** %type4206, align 8, !tbaa !36
  %type4207 = bitcast %union.tree_node* %619 to %struct.tree_type*
  %precision4208 = getelementptr inbounds %struct.tree_type* %type4207, i64 0, i32 6
  %bf.load4209 = load i32* %precision4208, align 4
  %620 = load %union.tree_node** %arrayidx4034, align 8, !tbaa !1
  %operands4215 = getelementptr inbounds %union.tree_node* %620, i64 0, i32 0, i32 2
  %arrayidx4216 = bitcast i32* %operands4215 to %union.tree_node**
  %621 = load %union.tree_node** %arrayidx4216, align 8, !tbaa !1
  %type4218 = getelementptr inbounds %union.tree_node* %621, i64 0, i32 0, i32 0, i32 1
  %622 = load %union.tree_node** %type4218, align 8, !tbaa !36
  %type4219 = bitcast %union.tree_node* %622 to %struct.tree_type*
  %precision4220 = getelementptr inbounds %struct.tree_type* %type4219, i64 0, i32 6
  %bf.load4221 = load i32* %precision4220, align 4
  %623 = xor i32 %bf.load4221, %bf.load4209
  %624 = and i32 %623, 511
  %cmp4223 = icmp eq i32 %624, 0
  br i1 %cmp4223, label %land.lhs.true4225, label %if.end4396

land.lhs.true4225:                                ; preds = %land.lhs.true4198
  %unsigned_flag4235 = getelementptr inbounds %union.tree_node* %619, i64 0, i32 0, i32 0, i32 2
  %bf.load4236 = load i32* %unsigned_flag4235, align 8
  %unsigned_flag4248 = getelementptr inbounds %union.tree_node* %622, i64 0, i32 0, i32 0, i32 2
  %bf.load4249 = load i32* %unsigned_flag4248, align 8
  %bf.lshr42378283 = xor i32 %bf.load4249, %bf.load4236
  %625 = and i32 %bf.lshr42378283, 8192
  %cmp4252 = icmp eq i32 %625, 0
  br i1 %cmp4252, label %if.then4254, label %if.end4396

if.then4254:                                      ; preds = %land.lhs.true4225, %lor.lhs.false4178, %land.lhs.true4162
  %626 = load %union.tree_node** %arrayidx4034, align 8, !tbaa !1
  %operands4259 = getelementptr inbounds %union.tree_node* %626, i64 0, i32 0, i32 2
  %arrayidx4260 = bitcast i32* %operands4259 to %union.tree_node**
  %627 = load %union.tree_node** %arrayidx4260, align 8, !tbaa !1
  %type4262 = getelementptr inbounds %union.tree_node* %627, i64 0, i32 0, i32 0, i32 1
  %628 = load %union.tree_node** %type4262, align 8, !tbaa !36
  %type4263 = bitcast %union.tree_node* %628 to %struct.tree_type*
  %mode4264 = getelementptr inbounds %struct.tree_type* %type4263, i64 0, i32 6
  %bf.load4265 = load i32* %mode4264, align 4
  %bf.lshr4266 = lshr i32 %bf.load4265, 9
  %bf.clear4267 = and i32 %bf.lshr4266, 127
  %unsigned_flag4277 = getelementptr inbounds %union.tree_node* %628, i64 0, i32 0, i32 0, i32 2
  %bf.load4278 = load i32* %unsigned_flag4277, align 8
  %bf.clear4280 = and i32 %bf.load4278, 8192
  %tobool4281 = icmp ne i32 %bf.clear4280, 0
  %629 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 8), align 8, !tbaa !1
  %630 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 9), align 8, !tbaa !1
  %cond4285 = select i1 %tobool4281, %struct.optab* %629, %struct.optab* %630
  %cond4303 = select i1 %tobool4281, %struct.optab* %630, %struct.optab* %629
  %idxprom43048255 = zext i32 %bf.clear4267 to i64
  %arrayidx4305 = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom43048255
  %631 = load i8* %arrayidx4305, align 1, !tbaa !5
  %conv4306 = zext i8 %631 to i32
  %cmp4307 = icmp eq i32 %bf.clear23, %conv4306
  br i1 %cmp4307, label %if.then4309, label %if.end4396

if.then4309:                                      ; preds = %if.then4254
  %idxprom43108256 = zext i32 %bf.clear23 to i64
  %insn_code = getelementptr inbounds %struct.optab* %cond4303, i64 0, i32 1, i64 %idxprom43108256, i32 0
  %632 = load i32* %insn_code, align 4, !tbaa !23
  %cmp4312 = icmp eq i32 %632, 1317
  br i1 %cmp4312, label %if.else4345, label %if.then4314

if.then4314:                                      ; preds = %if.then4309
  %call4321 = call %struct.rtx_def* @expand_expr(%union.tree_node* %627, %struct.rtx_def* null, i32 0, i32 0)
  %633 = load %union.tree_node** %602, align 8, !tbaa !1
  %code4326 = getelementptr inbounds %union.tree_node* %633, i64 0, i32 0, i32 0, i32 2
  %bf.load4327 = load i32* %code4326, align 8
  %bf.clear4328 = and i32 %bf.load4327, 255
  %cmp4329 = icmp eq i32 %bf.clear4328, 25
  br i1 %cmp4329, label %if.then4331, label %if.else4336

if.then4331:                                      ; preds = %if.then4314
  %call4335 = call %struct.rtx_def* @expand_expr(%union.tree_node* %633, %struct.rtx_def* null, i32 0, i32 0)
  br label %binop2

if.else4336:                                      ; preds = %if.then4314
  %operands4341 = getelementptr inbounds %union.tree_node* %633, i64 0, i32 0, i32 2
  %arrayidx4342 = bitcast i32* %operands4341 to %union.tree_node**
  %634 = load %union.tree_node** %arrayidx4342, align 8, !tbaa !1
  %call4343 = call %struct.rtx_def* @expand_expr(%union.tree_node* %634, %struct.rtx_def* null, i32 0, i32 0)
  br label %binop2

if.else4345:                                      ; preds = %if.then4309
  %insn_code4349 = getelementptr inbounds %struct.optab* %cond4285, i64 0, i32 1, i64 %idxprom43108256, i32 0
  %635 = load i32* %insn_code4349, align 4, !tbaa !23
  %cmp4350 = icmp ne i32 %635, 1317
  %636 = load i32* @word_mode, align 4
  %cmp4353 = icmp eq i32 %bf.clear4267, %636
  %or.cond8303 = and i1 %cmp4350, %cmp4353
  br i1 %or.cond8303, label %if.then4355, label %if.end4396

if.then4355:                                      ; preds = %if.else4345
  %call4362 = call %struct.rtx_def* @expand_expr(%union.tree_node* %627, %struct.rtx_def* null, i32 0, i32 0)
  %637 = load %union.tree_node** %602, align 8, !tbaa !1
  %code4367 = getelementptr inbounds %union.tree_node* %637, i64 0, i32 0, i32 0, i32 2
  %bf.load4368 = load i32* %code4367, align 8
  %bf.clear4369 = and i32 %bf.load4368, 255
  %cmp4370 = icmp eq i32 %bf.clear4369, 25
  br i1 %cmp4370, label %if.then4372, label %if.else4378

if.then4372:                                      ; preds = %if.then4355
  %call4376 = call %struct.rtx_def* @expand_expr(%union.tree_node* %637, %struct.rtx_def* null, i32 0, i32 0)
  %638 = load i32* %unsignedp, align 4, !tbaa !21
  %call4377 = call %struct.rtx_def* @convert_modes(i32 %bf.clear4267, i32 %bf.clear23, %struct.rtx_def* %call4376, i32 %638)
  br label %if.end4386

if.else4378:                                      ; preds = %if.then4355
  %operands4383 = getelementptr inbounds %union.tree_node* %637, i64 0, i32 0, i32 2
  %arrayidx4384 = bitcast i32* %operands4383 to %union.tree_node**
  %639 = load %union.tree_node** %arrayidx4384, align 8, !tbaa !1
  %call4385 = call %struct.rtx_def* @expand_expr(%union.tree_node* %639, %struct.rtx_def* null, i32 0, i32 0)
  br label %if.end4386

if.end4386:                                       ; preds = %if.else4378, %if.then4372
  %op1.5 = phi %struct.rtx_def* [ %call4377, %if.then4372 ], [ %call4385, %if.else4378 ]
  %640 = load i32* %unsignedp, align 4, !tbaa !21
  %call4387 = call %struct.rtx_def* @expand_binop(i32 %bf.clear23, %struct.optab* %cond4285, %struct.rtx_def* %call4362, %struct.rtx_def* %op1.5, %struct.rtx_def* %target.addr.1, i32 %640, i32 3) #5
  %call4388 = call %struct.rtx_def* @gen_highpart(i32 %bf.clear4267, %struct.rtx_def* %call4387) #5
  %call4389 = call %struct.rtx_def* @gen_highpart(i32 %bf.clear4267, %struct.rtx_def* %call4387) #5
  %641 = load i32* %unsignedp, align 4, !tbaa !21
  %call4390 = call %struct.rtx_def* @expand_mult_highpart_adjust(i32 %bf.clear4267, %struct.rtx_def* %call4388, %struct.rtx_def* %call4362, %struct.rtx_def* %op1.5, %struct.rtx_def* %call4389, i32 %641) #5
  %call4391 = call %struct.rtx_def* @gen_highpart(i32 %bf.clear4267, %struct.rtx_def* %call4387) #5
  %call4392 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call4391, %struct.rtx_def* %call4390)
  br label %return

if.end4396:                                       ; preds = %lor.lhs.false4188.if.end4396_crit_edge, %if.else4345, %if.then4254, %land.lhs.true4225, %land.lhs.true4198, %land.lhs.true4115, %land.lhs.true4108, %if.end4091
  %642 = phi %union.tree_node* [ %.pre8582, %lor.lhs.false4188.if.end4396_crit_edge ], [ %626, %if.else4345 ], [ %626, %if.then4254 ], [ %620, %land.lhs.true4225 ], [ %620, %land.lhs.true4198 ], [ %608, %land.lhs.true4115 ], [ %608, %land.lhs.true4108 ], [ %608, %if.end4091 ]
  %call4400 = call %struct.rtx_def* @expand_expr(%union.tree_node* %642, %struct.rtx_def* %.call8302, i32 0, i32 0)
  %643 = load %union.tree_node** %602, align 8, !tbaa !1
  %call4404 = call %struct.rtx_def* @expand_expr(%union.tree_node* %643, %struct.rtx_def* null, i32 0, i32 0)
  %644 = load i32* %unsignedp, align 4, !tbaa !21
  %call4405 = call %struct.rtx_def* @expand_mult(i32 %bf.clear23, %struct.rtx_def* %call4400, %struct.rtx_def* %call4404, %struct.rtx_def* %target.addr.1, i32 %644) #5
  br label %return

sw.bb4406:                                        ; preds = %if.end185.sw.bb4406_crit_edge8586, %if.end185.sw.bb4406_crit_edge8585, %if.end185.sw.bb4406_crit_edge8584, %if.end185.sw.bb4406_crit_edge8583, %if.end185.sw.bb4406_crit_edge
  %.in8671.in = phi i32* [ %arrayidx4409.phi.trans.insert, %if.end185.sw.bb4406_crit_edge8586 ], [ %arrayidx4409.phi.trans.insert8589, %if.end185.sw.bb4406_crit_edge8585 ], [ %arrayidx4409.phi.trans.insert8598, %if.end185.sw.bb4406_crit_edge8584 ], [ %arrayidx4409.phi.trans.insert8595, %if.end185.sw.bb4406_crit_edge8583 ], [ %arrayidx4409.phi.trans.insert8592, %if.end185.sw.bb4406_crit_edge ]
  %.in8671 = bitcast i32* %.in8671.in to %union.tree_node**
  %645 = load %union.tree_node** %.in8671, align 8
  %operands4408 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx4409 = getelementptr inbounds i32* %operands4408, i64 2
  %646 = bitcast i32* %arrayidx4409 to %union.tree_node**
  %call4410 = call i32 @safe_from_p(%struct.rtx_def* %call8451, %union.tree_node* %645, i32 1)
  %tobool4411 = icmp eq i32 %call4410, 0
  %.call8304 = select i1 %tobool4411, %struct.rtx_def* null, %struct.rtx_def* %call8451
  %arrayidx4416 = bitcast i32* %operands4408 to %union.tree_node**
  %647 = load %union.tree_node** %arrayidx4416, align 8, !tbaa !1
  %call4417 = call %struct.rtx_def* @expand_expr(%union.tree_node* %647, %struct.rtx_def* %.call8304, i32 0, i32 0)
  %648 = load %union.tree_node** %646, align 8, !tbaa !1
  %call4421 = call %struct.rtx_def* @expand_expr(%union.tree_node* %648, %struct.rtx_def* null, i32 0, i32 0)
  %649 = load i32* %unsignedp, align 4, !tbaa !21
  %call4422 = call %struct.rtx_def* @expand_divmod(i32 0, i32 %bf.clear6, i32 %bf.clear23, %struct.rtx_def* %call4417, %struct.rtx_def* %call4421, %struct.rtx_def* %target.addr.1, i32 %649) #5
  br label %return

sw.bb4423:                                        ; preds = %if.end185
  %650 = load i32* @flag_unsafe_math_optimizations, align 4, !tbaa !21
  %651 = load i32* @optimize, align 4
  %notlhs = icmp eq i32 %650, 0
  %notrhs = icmp eq i32 %651, 0
  %or.cond6596.not = or i1 %notrhs, %notlhs
  %652 = load i32* @optimize_size, align 4
  %tobool4428 = icmp ne i32 %652, 0
  %or.cond6597 = or i1 %or.cond6596.not, %tobool4428
  br i1 %or.cond6597, label %if.end4453, label %land.lhs.true4429

land.lhs.true4429:                                ; preds = %sw.bb4423
  %bf.load4432 = load i32* %unsigned_flag, align 8
  %bf.clear4433 = and i32 %bf.load4432, 255
  %cmp4434 = icmp eq i32 %bf.clear4433, 7
  br i1 %cmp4434, label %land.lhs.true4436, label %if.end4453

land.lhs.true4436:                                ; preds = %land.lhs.true4429
  %operands4438 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx4439 = bitcast i32* %operands4438 to %union.tree_node**
  %653 = load %union.tree_node** %arrayidx4439, align 8, !tbaa !1
  %call4440 = call i32 @real_onep(%union.tree_node* %653) #5
  %tobool4441 = icmp eq i32 %call4440, 0
  br i1 %tobool4441, label %if.then4442, label %if.end4453

if.then4442:                                      ; preds = %land.lhs.true4436
  %654 = load %union.tree_node** %arrayidx4439, align 8, !tbaa !1
  %call4446 = call %union.tree_node* @build_real(%union.tree_node* %0, %struct.realvaluetype* byval align 8 @dconst1) #5
  %arrayidx4449 = getelementptr inbounds i32* %operands4438, i64 2
  %655 = bitcast i32* %arrayidx4449 to %union.tree_node**
  %656 = load %union.tree_node** %655, align 8, !tbaa !1
  %call4450 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 70, %union.tree_node* %0, %union.tree_node* %call4446, %union.tree_node* %656) #5
  %call4451 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 61, %union.tree_node* %0, %union.tree_node* %654, %union.tree_node* %call4450) #5
  %657 = load i32* %unsignedp, align 4, !tbaa !21
  %call4452 = call %struct.rtx_def* @expand_expr(%union.tree_node* %call4451, %struct.rtx_def* %target.addr.1, i32 %tmode, i32 %657)
  br label %return

if.end4453:                                       ; preds = %land.lhs.true4436, %sw.bb4423, %land.lhs.true4429
  %658 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 10), align 8, !tbaa !1
  br label %binop

sw.bb4454:                                        ; preds = %if.end185.sw.bb4454_crit_edge8607, %if.end185.sw.bb4454_crit_edge8606, %if.end185.sw.bb4454_crit_edge8605, %if.end185.sw.bb4454_crit_edge
  %.in8670.in = phi i32* [ %arrayidx4457.phi.trans.insert8616, %if.end185.sw.bb4454_crit_edge8607 ], [ %arrayidx4457.phi.trans.insert8613, %if.end185.sw.bb4454_crit_edge8606 ], [ %arrayidx4457.phi.trans.insert, %if.end185.sw.bb4454_crit_edge8605 ], [ %arrayidx4457.phi.trans.insert8610, %if.end185.sw.bb4454_crit_edge ]
  %.in8670 = bitcast i32* %.in8670.in to %union.tree_node**
  %659 = load %union.tree_node** %.in8670, align 8
  %operands4456 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx4457 = getelementptr inbounds i32* %operands4456, i64 2
  %660 = bitcast i32* %arrayidx4457 to %union.tree_node**
  %call4458 = call i32 @safe_from_p(%struct.rtx_def* %call8451, %union.tree_node* %659, i32 1)
  %tobool4459 = icmp eq i32 %call4458, 0
  %.call8305 = select i1 %tobool4459, %struct.rtx_def* null, %struct.rtx_def* %call8451
  %arrayidx4464 = bitcast i32* %operands4456 to %union.tree_node**
  %661 = load %union.tree_node** %arrayidx4464, align 8, !tbaa !1
  %call4465 = call %struct.rtx_def* @expand_expr(%union.tree_node* %661, %struct.rtx_def* %.call8305, i32 0, i32 0)
  %662 = load %union.tree_node** %660, align 8, !tbaa !1
  %call4469 = call %struct.rtx_def* @expand_expr(%union.tree_node* %662, %struct.rtx_def* null, i32 0, i32 0)
  %663 = load i32* %unsignedp, align 4, !tbaa !21
  %call4470 = call %struct.rtx_def* @expand_divmod(i32 1, i32 %bf.clear6, i32 %bf.clear23, %struct.rtx_def* %call4465, %struct.rtx_def* %call4469, %struct.rtx_def* %target.addr.1, i32 %663) #5
  br label %return

sw.bb4471:                                        ; preds = %if.end185, %if.end185, %if.end185
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 7833, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.expand_expr, i64 0, i64 0)) #8
  unreachable

sw.bb4472:                                        ; preds = %if.end185
  %operands4474 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx4475 = bitcast i32* %operands4474 to %union.tree_node**
  %664 = load %union.tree_node** %arrayidx4475, align 8, !tbaa !1
  %call4476 = call %struct.rtx_def* @expand_expr(%union.tree_node* %664, %struct.rtx_def* null, i32 0, i32 0)
  %cmp4477 = icmp eq %struct.rtx_def* %target.addr.1, null
  br i1 %cmp4477, label %if.then4479, label %if.end4481

if.then4479:                                      ; preds = %sw.bb4472
  %call4480 = call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear23) #5
  br label %if.end4481

if.end4481:                                       ; preds = %if.then4479, %sw.bb4472
  %target.addr.9 = phi %struct.rtx_def* [ %call4480, %if.then4479 ], [ %target.addr.1, %sw.bb4472 ]
  %665 = load i32* %unsignedp, align 4, !tbaa !21
  call void @expand_fix(%struct.rtx_def* %target.addr.9, %struct.rtx_def* %call4476, i32 %665) #5
  br label %return

sw.bb4482:                                        ; preds = %if.end185
  %operands4484 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx4485 = bitcast i32* %operands4484 to %union.tree_node**
  %666 = load %union.tree_node** %arrayidx4485, align 8, !tbaa !1
  %call4486 = call %struct.rtx_def* @expand_expr(%union.tree_node* %666, %struct.rtx_def* null, i32 0, i32 0)
  %cmp4487 = icmp eq %struct.rtx_def* %target.addr.1, null
  br i1 %cmp4487, label %if.then4489, label %if.end4491

if.then4489:                                      ; preds = %sw.bb4482
  %call4490 = call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear23) #5
  br label %if.end4491

if.end4491:                                       ; preds = %if.then4489, %sw.bb4482
  %target.addr.10 = phi %struct.rtx_def* [ %call4490, %if.then4489 ], [ %target.addr.1, %sw.bb4482 ]
  %667 = getelementptr inbounds %struct.rtx_def* %call4486, i64 0, i32 0
  %bf.load4492 = load i32* %667, align 8
  %bf.clear4494 = and i32 %bf.load4492, 16711680
  %cmp4495 = icmp eq i32 %bf.clear4494, 0
  br i1 %cmp4495, label %if.then4497, label %if.end4509

if.then4497:                                      ; preds = %if.end4491
  %668 = load %union.tree_node** %arrayidx4485, align 8, !tbaa !1
  %type4502 = getelementptr inbounds %union.tree_node* %668, i64 0, i32 0, i32 0, i32 1
  %669 = load %union.tree_node** %type4502, align 8, !tbaa !36
  %type4503 = bitcast %union.tree_node* %669 to %struct.tree_type*
  %mode4504 = getelementptr inbounds %struct.tree_type* %type4503, i64 0, i32 6
  %bf.load4505 = load i32* %mode4504, align 4
  %bf.lshr4506 = lshr i32 %bf.load4505, 9
  %bf.clear4507 = and i32 %bf.lshr4506, 127
  %call4508 = call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.clear4507, %struct.rtx_def* %call4486) #5
  br label %if.end4509

if.end4509:                                       ; preds = %if.then4497, %if.end4491
  %op0.21 = phi %struct.rtx_def* [ %call4508, %if.then4497 ], [ %call4486, %if.end4491 ]
  %670 = load %union.tree_node** %arrayidx4485, align 8, !tbaa !1
  %type4514 = getelementptr inbounds %union.tree_node* %670, i64 0, i32 0, i32 0, i32 1
  %671 = load %union.tree_node** %type4514, align 8, !tbaa !36
  %unsigned_flag4516 = getelementptr inbounds %union.tree_node* %671, i64 0, i32 0, i32 0, i32 2
  %bf.load4517 = load i32* %unsigned_flag4516, align 8
  %bf.lshr4518 = lshr i32 %bf.load4517, 13
  %bf.clear4519 = and i32 %bf.lshr4518, 1
  call void @expand_float(%struct.rtx_def* %target.addr.10, %struct.rtx_def* %op0.21, i32 %bf.clear4519) #5
  br label %return

sw.bb4520:                                        ; preds = %if.end185
  %operands4522 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx4523 = bitcast i32* %operands4522 to %union.tree_node**
  %672 = load %union.tree_node** %arrayidx4523, align 8, !tbaa !1
  %call4524 = call %struct.rtx_def* @expand_expr(%union.tree_node* %672, %struct.rtx_def* %call8451, i32 0, i32 0)
  %673 = load i32* %unsignedp, align 4, !tbaa !21
  %tobool4525 = icmp eq i32 %673, 0
  %674 = load i32* @flag_trapv, align 4
  %tobool4527 = icmp ne i32 %674, 0
  %or.cond6598 = and i1 %tobool4525, %tobool4527
  br i1 %or.cond6598, label %land.lhs.true4528, label %cond.false4534

land.lhs.true4528:                                ; preds = %sw.bb4520
  %idxprom45298254 = zext i32 %bf.clear23 to i64
  %arrayidx4530 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom45298254
  %675 = load i32* %arrayidx4530, align 4, !tbaa !5
  %cmp4531 = icmp eq i32 %675, 1
  br i1 %cmp4531, label %cond.end4535, label %cond.false4534

cond.false4534:                                   ; preds = %sw.bb4520, %land.lhs.true4528
  br label %cond.end4535

cond.end4535:                                     ; preds = %land.lhs.true4528, %cond.false4534
  %cond4536.in = phi %struct.optab** [ getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 32), %cond.false4534 ], [ getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 33), %land.lhs.true4528 ]
  %cond4536 = load %struct.optab** %cond4536.in, align 8
  %call4537 = call %struct.rtx_def* @expand_unop(i32 %bf.clear23, %struct.optab* %cond4536, %struct.rtx_def* %call4524, %struct.rtx_def* %target.addr.1, i32 0) #5
  %cmp4538 = icmp eq %struct.rtx_def* %call4537, null
  br i1 %cmp4538, label %if.then4540, label %return

if.then4540:                                      ; preds = %cond.end4535
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 7862, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.expand_expr, i64 0, i64 0)) #8
  unreachable

sw.bb4542:                                        ; preds = %if.end185
  %operands4544 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx4545 = bitcast i32* %operands4544 to %union.tree_node**
  %676 = load %union.tree_node** %arrayidx4545, align 8, !tbaa !1
  %call4546 = call %struct.rtx_def* @expand_expr(%union.tree_node* %676, %struct.rtx_def* %call8451, i32 0, i32 0)
  %idxprom45478253 = zext i32 %bf.clear23 to i64
  %arrayidx4548 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom45478253
  %677 = load i32* %arrayidx4548, align 4, !tbaa !5
  %.off = add i32 %677, -5
  %switch8325 = icmp ult i32 %.off, 2
  br i1 %switch8325, label %if.then4556, label %if.end4558

if.then4556:                                      ; preds = %sw.bb4542
  %678 = load i32* %unsignedp, align 4, !tbaa !21
  %call4557 = call %struct.rtx_def* @expand_complex_abs(i32 %bf.clear23, %struct.rtx_def* %call4546, %struct.rtx_def* %target.addr.1, i32 %678) #5
  br label %return

if.end4558:                                       ; preds = %sw.bb4542
  %bf.load4561 = load i32* %unsigned_flag, align 8
  %bf.clear4563 = and i32 %bf.load4561, 8192
  %tobool4564 = icmp eq i32 %bf.clear4563, 0
  br i1 %tobool4564, label %if.end4566, label %return

if.end4566:                                       ; preds = %if.end4558
  %679 = load i32* %unsignedp, align 4, !tbaa !21
  %680 = load %union.tree_node** %arrayidx4545, align 8, !tbaa !1
  %call4570 = call i32 @safe_from_p(%struct.rtx_def* %target.addr.1, %union.tree_node* %680, i32 1)
  %call4571 = call %struct.rtx_def* @expand_abs(i32 %bf.clear23, %struct.rtx_def* %call4546, %struct.rtx_def* %target.addr.1, i32 %679, i32 %call4570) #5
  br label %return

sw.bb4572:                                        ; preds = %if.end185, %if.end185
  %operands4612.pre.pre = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx4613.pre.pre = getelementptr inbounds i32* %operands4612.pre.pre, i64 2
  %.pre8661.pre = bitcast i32* %arrayidx4613.pre.pre to %union.tree_node**
  br i1 %cmp.i8447, label %if.then4608, label %lor.lhs.false4575

lor.lhs.false4575:                                ; preds = %sw.bb4572
  %681 = load %union.tree_node** %.pre8661.pre, align 8, !tbaa !1
  %call4579 = call i32 @safe_from_p(%struct.rtx_def* %target, %union.tree_node* %681, i32 1)
  %tobool4580 = icmp eq i32 %call4579, 0
  br i1 %tobool4580, label %if.then4608, label %lor.lhs.false4581

lor.lhs.false4581:                                ; preds = %lor.lhs.false4575
  %682 = getelementptr inbounds %struct.rtx_def* %target, i64 0, i32 0
  %bf.load4582 = load i32* %682, align 8
  %bf.clear4583 = and i32 %bf.load4582, 65535
  %683 = and i32 %bf.load4582, 134283263
  %684 = icmp eq i32 %683, 134217794
  br i1 %684, label %if.then4608, label %lor.lhs.false4591

lor.lhs.false4591:                                ; preds = %lor.lhs.false4581
  %bf.lshr4593 = lshr i32 %bf.load4582, 16
  %bf.clear4594 = and i32 %bf.lshr4593, 255
  %cmp4595 = icmp eq i32 %bf.clear4594, %bf.clear23
  br i1 %cmp4595, label %lor.lhs.false4597, label %if.then4608

lor.lhs.false4597:                                ; preds = %lor.lhs.false4591
  %cmp4600 = icmp eq i32 %bf.clear4583, 61
  br i1 %cmp4600, label %land.lhs.true4602, label %if.end4610

land.lhs.true4602:                                ; preds = %lor.lhs.false4597
  %arrayidx4604 = getelementptr inbounds %struct.rtx_def* %target, i64 0, i32 1, i64 0
  %rtuint4605 = bitcast %union.rtunion_def* %arrayidx4604 to i32*
  %685 = load i32* %rtuint4605, align 4, !tbaa !21
  %cmp4606 = icmp ult i32 %685, 53
  br i1 %cmp4606, label %if.then4608, label %if.end4610

if.then4608:                                      ; preds = %sw.bb4572, %lor.lhs.false4581, %lor.lhs.false4591, %lor.lhs.false4575, %land.lhs.true4602
  %call4609 = call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear23) #5
  br label %if.end4610

if.end4610:                                       ; preds = %if.then4608, %land.lhs.true4602, %lor.lhs.false4597
  %target.addr.11 = phi %struct.rtx_def* [ %call4609, %if.then4608 ], [ %target, %land.lhs.true4602 ], [ %target, %lor.lhs.false4597 ]
  %686 = load %union.tree_node** %.pre8661.pre, align 8, !tbaa !1
  %call4614 = call %struct.rtx_def* @expand_expr(%union.tree_node* %686, %struct.rtx_def* null, i32 0, i32 0)
  %arrayidx4617 = bitcast i32* %operands4612.pre.pre to %union.tree_node**
  %687 = load %union.tree_node** %arrayidx4617, align 8, !tbaa !1
  %call4618 = call %struct.rtx_def* @expand_expr(%union.tree_node* %687, %struct.rtx_def* %target.addr.11, i32 0, i32 0)
  %bf.load4621 = load i32* %unsigned_flag, align 8
  %bf.clear4623 = and i32 %bf.load4621, 8192
  %tobool4624 = icmp eq i32 %bf.clear4623, 0
  %cmp4626 = icmp eq i32 %bf.clear6, 78
  br i1 %tobool4624, label %cond.false4632, label %cond.true4625

cond.true4625:                                    ; preds = %if.end4610
  %688 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 28), align 8, !tbaa !1
  %689 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 29), align 8, !tbaa !1
  %cond4631 = select i1 %cmp4626, %struct.optab* %688, %struct.optab* %689
  br label %cond.end4639

cond.false4632:                                   ; preds = %if.end4610
  %690 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 26), align 8, !tbaa !1
  %691 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 27), align 8, !tbaa !1
  %cond4638 = select i1 %cmp4626, %struct.optab* %690, %struct.optab* %691
  br label %cond.end4639

cond.end4639:                                     ; preds = %cond.false4632, %cond.true4625
  %cond4640 = phi %struct.optab* [ %cond4631, %cond.true4625 ], [ %cond4638, %cond.false4632 ]
  %692 = load i32* %unsignedp, align 4, !tbaa !21
  %call4641 = call %struct.rtx_def* @expand_binop(i32 %bf.clear23, %struct.optab* %cond4640, %struct.rtx_def* %call4618, %struct.rtx_def* %call4614, %struct.rtx_def* %target.addr.11, i32 %692, i32 2) #5
  %cmp4642 = icmp eq %struct.rtx_def* %call4641, null
  br i1 %cmp4642, label %if.end4645, label %return

if.end4645:                                       ; preds = %cond.end4639
  %693 = getelementptr inbounds %struct.rtx_def* %target.addr.11, i64 0, i32 0
  %bf.load4646 = load i32* %693, align 8
  %bf.clear4647 = and i32 %bf.load4646, 65535
  %cmp4648 = icmp eq i32 %bf.clear4647, 66
  br i1 %cmp4648, label %if.then4650, label %if.end4652

if.then4650:                                      ; preds = %if.end4645
  %call4651 = call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear23) #5
  br label %if.end4652

if.end4652:                                       ; preds = %if.then4650, %if.end4645
  %target.addr.12 = phi %struct.rtx_def* [ %call4651, %if.then4650 ], [ %target.addr.11, %if.end4645 ]
  %cmp4653 = icmp eq %struct.rtx_def* %target.addr.12, %call4618
  br i1 %cmp4653, label %if.end4657, label %if.then4655

if.then4655:                                      ; preds = %if.end4652
  %call4656 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %target.addr.12, %struct.rtx_def* %call4618)
  br label %if.end4657

if.end4657:                                       ; preds = %if.end4652, %if.then4655
  %call4658 = call %struct.rtx_def* @gen_label_rtx() #5
  %idxprom46598252 = zext i32 %bf.clear23 to i64
  %arrayidx4660 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom46598252
  %694 = load i32* %arrayidx4660, align 4, !tbaa !5
  %cmp4661 = icmp eq i32 %694, 1
  br i1 %cmp4661, label %land.lhs.true4663, label %if.else4682

land.lhs.true4663:                                ; preds = %if.end4657
  %call4664 = call i32 @can_compare_p(i32 104, i32 %bf.clear23, i32 0) #5
  %tobool4665 = icmp eq i32 %call4664, 0
  br i1 %tobool4665, label %if.then4666, label %if.else4682

if.then4666:                                      ; preds = %land.lhs.true4663
  %cmp4667 = icmp eq i32 %bf.clear6, 79
  %bf.load4672 = load i32* %unsigned_flag, align 8
  %bf.lshr4673 = lshr i32 %bf.load4672, 13
  %bf.clear4674 = and i32 %bf.lshr4673, 1
  br i1 %cmp4667, label %if.then4669, label %if.else4675

if.then4669:                                      ; preds = %if.then4666
  call void @do_jump_by_parts_greater_rtx(i32 %bf.clear23, i32 %bf.clear4674, %struct.rtx_def* %target.addr.12, %struct.rtx_def* %call4614, %struct.rtx_def* null, %struct.rtx_def* %call4658)
  br label %if.end4697

if.else4675:                                      ; preds = %if.then4666
  call void @do_jump_by_parts_greater_rtx(i32 %bf.clear23, i32 %bf.clear4674, %struct.rtx_def* %call4614, %struct.rtx_def* %target.addr.12, %struct.rtx_def* null, %struct.rtx_def* %call4658)
  br label %if.end4697

if.else4682:                                      ; preds = %land.lhs.true4663, %if.end4657
  %695 = load %union.tree_node** %.pre8661.pre, align 8, !tbaa !1
  %type4688 = getelementptr inbounds %union.tree_node* %695, i64 0, i32 0, i32 0, i32 1
  %696 = load %union.tree_node** %type4688, align 8, !tbaa !36
  %unsigned_flag4690 = getelementptr inbounds %union.tree_node* %696, i64 0, i32 0, i32 0, i32 2
  %bf.load4691 = load i32* %unsigned_flag4690, align 8
  %bf.lshr4692 = lshr i32 %bf.load4691, 13
  %bf.clear4693 = and i32 %bf.lshr4692, 1
  %cmp4694 = icmp eq i32 %bf.clear6, 79
  %cond4696 = select i1 %cmp4694, i32 104, i32 106
  call void @do_compare_rtx_and_jump(%struct.rtx_def* %target.addr.12, %struct.rtx_def* %call4614, i32 %cond4696, i32 %bf.clear4693, i32 %bf.clear23, %struct.rtx_def* null, %struct.rtx_def* null, %struct.rtx_def* %call4658)
  br label %if.end4697

if.end4697:                                       ; preds = %if.then4669, %if.else4675, %if.else4682
  %call4698 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %target.addr.12, %struct.rtx_def* %call4614)
  %call4699 = call %struct.rtx_def* @emit_label(%struct.rtx_def* %call4658) #5
  br label %return

sw.bb4700:                                        ; preds = %if.end185
  %operands4702 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx4703 = bitcast i32* %operands4702 to %union.tree_node**
  %697 = load %union.tree_node** %arrayidx4703, align 8, !tbaa !1
  %call4704 = call %struct.rtx_def* @expand_expr(%union.tree_node* %697, %struct.rtx_def* %call8451, i32 0, i32 0)
  %698 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 36), align 8, !tbaa !1
  %call4705 = call %struct.rtx_def* @expand_unop(i32 %bf.clear23, %struct.optab* %698, %struct.rtx_def* %call4704, %struct.rtx_def* %target.addr.1, i32 1) #5
  %cmp4706 = icmp eq %struct.rtx_def* %call4705, null
  br i1 %cmp4706, label %if.then4708, label %return

if.then4708:                                      ; preds = %sw.bb4700
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 7943, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.expand_expr, i64 0, i64 0)) #8
  unreachable

sw.bb4710:                                        ; preds = %if.end185
  %operands4712 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx4713 = bitcast i32* %operands4712 to %union.tree_node**
  %699 = load %union.tree_node** %arrayidx4713, align 8, !tbaa !1
  %call4714 = call %struct.rtx_def* @expand_expr(%union.tree_node* %699, %struct.rtx_def* %call8451, i32 0, i32 0)
  %700 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 37), align 8, !tbaa !1
  %call4715 = call %struct.rtx_def* @expand_unop(i32 %bf.clear23, %struct.optab* %700, %struct.rtx_def* %call4714, %struct.rtx_def* %target.addr.1, i32 1) #5
  %cmp4716 = icmp eq %struct.rtx_def* %call4715, null
  br i1 %cmp4716, label %if.then4718, label %return

if.then4718:                                      ; preds = %sw.bb4710
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 7950, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.expand_expr, i64 0, i64 0)) #8
  unreachable

sw.bb4720:                                        ; preds = %if.end185, %if.end185
  %701 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 18), align 8, !tbaa !1
  br label %binop

sw.bb4721:                                        ; preds = %if.end185, %if.end185
  %702 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 19), align 8, !tbaa !1
  br label %binop

sw.bb4722:                                        ; preds = %if.end185, %if.end185
  %703 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 20), align 8, !tbaa !1
  br label %binop

sw.bb4723:                                        ; preds = %if.end185.sw.bb4723_crit_edge8624, %if.end185.sw.bb4723_crit_edge8623, %if.end185.sw.bb4723_crit_edge8622, %if.end185.sw.bb4723_crit_edge
  %.in.in = phi i32* [ %arrayidx4726.phi.trans.insert8633, %if.end185.sw.bb4723_crit_edge8624 ], [ %arrayidx4726.phi.trans.insert8627, %if.end185.sw.bb4723_crit_edge8623 ], [ %arrayidx4726.phi.trans.insert, %if.end185.sw.bb4723_crit_edge8622 ], [ %arrayidx4726.phi.trans.insert8630, %if.end185.sw.bb4723_crit_edge ]
  %.in = bitcast i32* %.in.in to %union.tree_node**
  %704 = load %union.tree_node** %.in, align 8
  %operands4725 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx4726 = getelementptr inbounds i32* %operands4725, i64 2
  %705 = bitcast i32* %arrayidx4726 to %union.tree_node**
  %call4727 = call i32 @safe_from_p(%struct.rtx_def* %call8451, %union.tree_node* %704, i32 1)
  %tobool4728 = icmp eq i32 %call4727, 0
  %.call8307 = select i1 %tobool4728, %struct.rtx_def* null, %struct.rtx_def* %call8451
  %arrayidx4733 = bitcast i32* %operands4725 to %union.tree_node**
  %706 = load %union.tree_node** %arrayidx4733, align 8, !tbaa !1
  %call4734 = call %struct.rtx_def* @expand_expr(%union.tree_node* %706, %struct.rtx_def* %.call8307, i32 0, i32 0)
  %707 = load %union.tree_node** %705, align 8, !tbaa !1
  %708 = load i32* %unsignedp, align 4, !tbaa !21
  %call4738 = call %struct.rtx_def* @expand_shift(i32 %bf.clear6, i32 %bf.clear23, %struct.rtx_def* %call4734, %union.tree_node* %707, %struct.rtx_def* %target.addr.1, i32 %708) #5
  br label %return

sw.bb4739:                                        ; preds = %if.end185, %if.end185, %if.end185, %if.end185, %if.end185, %if.end185, %if.end185, %if.end185, %if.end185, %if.end185, %if.end185, %if.end185, %if.end185
  %cmp4740 = icmp ne i32 %tmode, 0
  %cond4745 = select i1 %cmp4740, i32 %tmode, i32 %bf.clear23
  %call4746 = call fastcc %struct.rtx_def* @do_store_flag(%union.tree_node* %exp, %struct.rtx_def* %target.addr.1, i32 %cond4745, i32 0)
  %cmp4747 = icmp eq %struct.rtx_def* %call4746, null
  br i1 %cmp4747, label %if.end4750, label %return

if.end4750:                                       ; preds = %sw.bb4739
  %cmp4751 = icmp eq i32 %bf.clear6, 102
  br i1 %cmp4751, label %land.lhs.true4753, label %sw.bb4829

land.lhs.true4753:                                ; preds = %if.end4750
  %operands4755 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx4756 = getelementptr inbounds i32* %operands4755, i64 2
  %709 = bitcast i32* %arrayidx4756 to %union.tree_node**
  %710 = load %union.tree_node** %709, align 8, !tbaa !1
  %call4757 = call i32 @integer_zerop(%union.tree_node* %710) #5
  %tobool4758 = icmp ne i32 %call4757, 0
  %tobool4760 = icmp ne %struct.rtx_def* %target, null
  %or.cond6599 = and i1 %tobool4758, %tobool4760
  br i1 %or.cond6599, label %land.lhs.true4761, label %sw.bb4829

land.lhs.true4761:                                ; preds = %land.lhs.true4753
  %711 = getelementptr inbounds %struct.rtx_def* %target, i64 0, i32 0
  %bf.load4762 = load i32* %711, align 8
  %bf.clear4763 = and i32 %bf.load4762, 65535
  %cmp4764 = icmp eq i32 %bf.clear4763, 61
  br i1 %cmp4764, label %land.lhs.true4766, label %sw.bb4829

land.lhs.true4766:                                ; preds = %land.lhs.true4761
  %bf.lshr4768 = lshr i32 %bf.load4762, 16
  %bf.clear4769 = and i32 %bf.lshr4768, 255
  %arrayidx4772 = bitcast i32* %operands4755 to %union.tree_node**
  %712 = load %union.tree_node** %arrayidx4772, align 8, !tbaa !1
  %type4774 = getelementptr inbounds %union.tree_node* %712, i64 0, i32 0, i32 0, i32 1
  %713 = load %union.tree_node** %type4774, align 8, !tbaa !36
  %type4775 = bitcast %union.tree_node* %713 to %struct.tree_type*
  %mode4776 = getelementptr inbounds %struct.tree_type* %type4775, i64 0, i32 6
  %bf.load4777 = load i32* %mode4776, align 4
  %bf.lshr4778 = lshr i32 %bf.load4777, 9
  %bf.clear4779 = and i32 %bf.lshr4778, 127
  %cmp4780 = icmp eq i32 %bf.clear4769, %bf.clear4779
  br i1 %cmp4780, label %if.then4782, label %sw.bb4829

if.then4782:                                      ; preds = %land.lhs.true4766
  %call4786 = call %struct.rtx_def* @expand_expr(%union.tree_node* %712, %struct.rtx_def* %target, i32 0, i32 0)
  %714 = getelementptr inbounds %struct.rtx_def* %call4786, i64 0, i32 0
  %bf.load4787 = load i32* %714, align 8
  %bf.clear4788 = and i32 %bf.load4787, 65535
  %cmp4789 = icmp eq i32 %bf.clear4788, 54
  br i1 %cmp4789, label %if.then4791, label %if.end4802

if.then4791:                                      ; preds = %if.then4782
  %rtwint4794 = getelementptr inbounds %struct.rtx_def* %call4786, i64 0, i32 1, i64 0, i32 0
  %715 = load i64* %rtwint4794, align 8, !tbaa !22
  %cmp4795 = icmp eq i64 %715, 0
  br i1 %cmp4795, label %if.else4799, label %if.then4797

if.then4797:                                      ; preds = %if.then4791
  %716 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %call4798 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %target.addr.1, %struct.rtx_def* %716)
  br label %return

if.else4799:                                      ; preds = %if.then4791
  %717 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call4800 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %target.addr.1, %struct.rtx_def* %717)
  br label %return

if.end4802:                                       ; preds = %if.then4782
  %cmp4803 = icmp eq %struct.rtx_def* %call4786, %target
  br i1 %cmp4803, label %if.end4821, label %if.then4805

if.then4805:                                      ; preds = %if.end4802
  %bf.lshr4808 = lshr i32 %bf.load4787, 16
  %bf.clear4809 = and i32 %bf.lshr4808, 255
  %cmp4810 = icmp eq i32 %bf.clear4809, 0
  %cond4745.bf.clear4809 = select i1 %cmp4810, i32 %cond4745, i32 %bf.clear4809
  %call4820 = call %struct.rtx_def* @copy_to_mode_reg(i32 %cond4745.bf.clear4809, %struct.rtx_def* %call4786) #5
  br label %if.end4821

if.end4821:                                       ; preds = %if.end4802, %if.then4805
  %temp.5 = phi %struct.rtx_def* [ %call4820, %if.then4805 ], [ %target, %if.end4802 ]
  %call4822 = call %struct.rtx_def* @gen_label_rtx() #5
  %718 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %719 = getelementptr inbounds %struct.rtx_def* %temp.5, i64 0, i32 0
  %bf.load4823 = load i32* %719, align 8
  %bf.lshr4824 = lshr i32 %bf.load4823, 16
  %bf.clear4825 = and i32 %bf.lshr4824, 255
  %720 = load i32* %unsignedp, align 4, !tbaa !21
  call void @emit_cmp_and_jump_insns(%struct.rtx_def* %temp.5, %struct.rtx_def* %718, i32 103, %struct.rtx_def* null, i32 %bf.clear4825, i32 %720, %struct.rtx_def* %call4822) #5
  %721 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %call4826 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %temp.5, %struct.rtx_def* %721)
  %call4827 = call %struct.rtx_def* @emit_label(%struct.rtx_def* %call4822) #5
  br label %return

sw.bb4829:                                        ; preds = %if.end4750, %land.lhs.true4753, %land.lhs.true4761, %land.lhs.true4766, %if.end185, %if.end185
  br i1 %36, label %if.end4858, label %land.lhs.true4831

land.lhs.true4831:                                ; preds = %sw.bb4829
  %cmp4832 = icmp eq %struct.rtx_def* %target.addr.1, null
  br i1 %cmp4832, label %if.then4850, label %lor.lhs.false4834

lor.lhs.false4834:                                ; preds = %land.lhs.true4831
  %call4835 = call i32 @safe_from_p(%struct.rtx_def* %target.addr.1, %union.tree_node* %exp, i32 1)
  %tobool4836 = icmp eq i32 %call4835, 0
  br i1 %tobool4836, label %if.then4850, label %lor.lhs.false4837

lor.lhs.false4837:                                ; preds = %lor.lhs.false4834
  %722 = load i32* @optimize, align 4, !tbaa !21
  %tobool4838 = icmp eq i32 %722, 0
  br i1 %tobool4838, label %land.lhs.true4839, label %if.end4858

land.lhs.true4839:                                ; preds = %lor.lhs.false4837
  %723 = getelementptr inbounds %struct.rtx_def* %target.addr.1, i64 0, i32 0
  %bf.load4840 = load i32* %723, align 8
  %bf.clear4841 = and i32 %bf.load4840, 65535
  %cmp4842 = icmp eq i32 %bf.clear4841, 61
  br i1 %cmp4842, label %land.lhs.true4844, label %if.then4860

land.lhs.true4844:                                ; preds = %land.lhs.true4839
  %arrayidx4846 = getelementptr inbounds %struct.rtx_def* %target.addr.1, i64 0, i32 1, i64 0
  %rtuint4847 = bitcast %union.rtunion_def* %arrayidx4846 to i32*
  %724 = load i32* %rtuint4847, align 4, !tbaa !21
  %cmp4848 = icmp ult i32 %724, 53
  br i1 %cmp4848, label %if.then4850, label %if.end4858

if.then4850:                                      ; preds = %lor.lhs.false4834, %land.lhs.true4844, %land.lhs.true4831
  %cmp4851 = icmp ne i32 %tmode, 0
  %cond4856 = select i1 %cmp4851, i32 %tmode, i32 %bf.clear23
  %call4857 = call %struct.rtx_def* @gen_reg_rtx(i32 %cond4856) #5
  br label %if.end4858

if.end4858:                                       ; preds = %lor.lhs.false4837, %if.then4850, %land.lhs.true4844, %sw.bb4829
  %target.addr.13 = phi %struct.rtx_def* [ %target.addr.1, %sw.bb4829 ], [ %call4857, %if.then4850 ], [ %target.addr.1, %lor.lhs.false4837 ], [ %target.addr.1, %land.lhs.true4844 ]
  %tobool4859 = icmp eq %struct.rtx_def* %target.addr.13, null
  br i1 %tobool4859, label %if.end4861, label %if.then4860

if.then4860:                                      ; preds = %if.end4858, %land.lhs.true4839
  %target.addr.138484 = phi %struct.rtx_def* [ %target.addr.13, %if.end4858 ], [ %target.addr.1, %land.lhs.true4839 ]
  call void @emit_clr_insn(%struct.rtx_def* %target.addr.138484) #5
  br label %if.end4861

if.end4861:                                       ; preds = %if.end4858, %if.then4860
  %tobool48598486 = phi i1 [ true, %if.then4860 ], [ false, %if.end4858 ]
  %target.addr.138485 = phi %struct.rtx_def* [ %target.addr.138484, %if.then4860 ], [ null, %if.end4858 ]
  %call4862 = call %struct.rtx_def* @gen_label_rtx() #5
  call void @do_jump(%union.tree_node* %exp, %struct.rtx_def* %call4862, %struct.rtx_def* null) #5
  br i1 %tobool48598486, label %if.then4864, label %if.end4865

if.then4864:                                      ; preds = %if.end4861
  call void @emit_0_to_1_insn(%struct.rtx_def* %target.addr.138485) #5
  br label %if.end4865

if.end4865:                                       ; preds = %if.then4864, %if.end4861
  %call4866 = call %struct.rtx_def* @emit_label(%struct.rtx_def* %call4862) #5
  %725 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %cond4871 = select i1 %36, %struct.rtx_def* %725, %struct.rtx_def* %target.addr.138485
  br label %return

sw.bb4872:                                        ; preds = %if.end185
  %operands4874 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx4875 = bitcast i32* %operands4874 to %union.tree_node**
  %726 = load %union.tree_node** %arrayidx4875, align 8, !tbaa !1
  %call4876 = call %struct.rtx_def* @expand_expr(%union.tree_node* %726, %struct.rtx_def* %target.addr.1, i32 0, i32 0)
  %727 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 20), align 8, !tbaa !1
  %728 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %call4877 = call %struct.rtx_def* @expand_binop(i32 %bf.clear23, %struct.optab* %727, %struct.rtx_def* %call4876, %struct.rtx_def* %728, %struct.rtx_def* %target.addr.1, i32 1, i32 3) #5
  %cmp4878 = icmp eq %struct.rtx_def* %call4877, null
  br i1 %cmp4878, label %if.then4880, label %return

if.then4880:                                      ; preds = %sw.bb4872
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 8081, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.expand_expr, i64 0, i64 0)) #8
  unreachable

sw.bb4882:                                        ; preds = %if.end185
  %operands4884 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx4885 = bitcast i32* %operands4884 to %union.tree_node**
  %729 = load %union.tree_node** %arrayidx4885, align 8, !tbaa !1
  %call4886 = call %struct.rtx_def* @expand_expr(%union.tree_node* %729, %struct.rtx_def* %7, i32 0, i32 0)
  %730 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr30.i8377 = getelementptr inbounds %struct.function* %730, i64 0, i32 2
  %731 = load %struct.expr_status** %expr30.i8377, align 8, !tbaa !6
  %x_pending_chain31.i8378 = getelementptr inbounds %struct.expr_status* %731, i64 0, i32 6
  %732 = load %struct.rtx_def** %x_pending_chain31.i8378, align 8, !tbaa !11
  %tobool32.i8379 = icmp eq %struct.rtx_def* %732, null
  br i1 %tobool32.i8379, label %emit_queue.exit8404, label %while.body.i8385

while.body.i8385:                                 ; preds = %sw.bb4882, %if.end.i8402
  %733 = phi %struct.rtx_def* [ %745, %if.end.i8402 ], [ %732, %sw.bb4882 ]
  %arrayidx.i8380 = getelementptr inbounds %struct.rtx_def* %733, i64 0, i32 1, i64 3
  %rtx.i8381 = bitcast %union.rtunion_def* %arrayidx.i8380 to %struct.rtx_def**
  %734 = load %struct.rtx_def** %rtx.i8381, align 8, !tbaa !1
  %735 = getelementptr inbounds %struct.rtx_def* %734, i64 0, i32 0
  %bf.load.i8382 = load i32* %735, align 8
  %bf.clear.i8383 = and i32 %bf.load.i8382, 65535
  %cmp.i8384 = icmp eq i32 %bf.clear.i8383, 24
  br i1 %cmp.i8384, label %if.then.i8391, label %if.else.i8394

if.then.i8391:                                    ; preds = %while.body.i8385
  %arrayidx5.i8386 = getelementptr inbounds %struct.rtx_def* %734, i64 0, i32 1, i64 0
  %rtvec.i8387 = bitcast %union.rtunion_def* %arrayidx5.i8386 to %struct.rtvec_def**
  %736 = load %struct.rtvec_def** %rtvec.i8387, align 8, !tbaa !1
  %arrayidx6.i8388 = getelementptr inbounds %struct.rtvec_def* %736, i64 0, i32 1, i64 0
  %737 = load %struct.rtx_def** %arrayidx6.i8388, align 8, !tbaa !1
  %738 = getelementptr inbounds %struct.rtx_def* %733, i64 0, i32 1, i64 1, i32 0
  %.c.i8389 = ptrtoint %struct.rtx_def* %737 to i64
  store i64 %.c.i8389, i64* %738, align 8, !tbaa !1
  %call.i8390 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %734) #5
  br label %if.end.i8402

if.else.i8394:                                    ; preds = %while.body.i8385
  %call16.i8392 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %734) #5
  %739 = getelementptr inbounds %struct.rtx_def* %733, i64 0, i32 1, i64 1, i32 0
  %call16.c.i8393 = ptrtoint %struct.rtx_def* %call16.i8392 to i64
  store i64 %call16.c.i8393, i64* %739, align 8, !tbaa !1
  br label %if.end.i8402

if.end.i8402:                                     ; preds = %if.else.i8394, %if.then.i8391
  %arrayidx21.i8395 = getelementptr inbounds %struct.rtx_def* %733, i64 0, i32 1, i64 4
  %rtx22.i8396 = bitcast %union.rtunion_def* %arrayidx21.i8395 to %struct.rtx_def**
  %740 = load %struct.rtx_def** %rtx22.i8396, align 8, !tbaa !1
  %741 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr23.i8397 = getelementptr inbounds %struct.function* %741, i64 0, i32 2
  %742 = load %struct.expr_status** %expr23.i8397, align 8, !tbaa !6
  %x_pending_chain24.i8398 = getelementptr inbounds %struct.expr_status* %742, i64 0, i32 6
  store %struct.rtx_def* %740, %struct.rtx_def** %x_pending_chain24.i8398, align 8, !tbaa !11
  %743 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr.i8399 = getelementptr inbounds %struct.function* %743, i64 0, i32 2
  %744 = load %struct.expr_status** %expr.i8399, align 8, !tbaa !6
  %x_pending_chain.i8400 = getelementptr inbounds %struct.expr_status* %744, i64 0, i32 6
  %745 = load %struct.rtx_def** %x_pending_chain.i8400, align 8, !tbaa !11
  %tobool.i8401 = icmp eq %struct.rtx_def* %745, null
  br i1 %tobool.i8401, label %emit_queue.exit8404, label %while.body.i8385

emit_queue.exit8404:                              ; preds = %if.end.i8402, %sw.bb4882
  %arrayidx4889 = getelementptr inbounds i32* %operands4884, i64 2
  %746 = bitcast i32* %arrayidx4889 to %union.tree_node**
  %747 = load %union.tree_node** %746, align 8, !tbaa !1
  %748 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %cond4894 = select i1 %36, %struct.rtx_def* %748, %struct.rtx_def* %target.addr.1
  %call4895 = call %struct.rtx_def* @expand_expr(%union.tree_node* %747, %struct.rtx_def* %cond4894, i32 0, i32 0)
  br label %return

sw.bb4896:                                        ; preds = %if.end185
  %operands4898 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx4899 = getelementptr inbounds i32* %operands4898, i64 2
  %749 = bitcast i32* %arrayidx4899 to %union.tree_node**
  %750 = load %union.tree_node** %749, align 8, !tbaa !1
  %code4901 = getelementptr inbounds %union.tree_node* %750, i64 0, i32 0, i32 0, i32 2
  %bf.load4902 = load i32* %code4901, align 8
  %bf.clear4903 = and i32 %bf.load4902, 255
  %cmp4904 = icmp eq i32 %bf.clear4903, 115
  br i1 %cmp4904, label %land.lhs.true4906, label %if.end5021

land.lhs.true4906:                                ; preds = %sw.bb4896
  %arrayidx4909 = getelementptr inbounds i32* %operands4898, i64 4
  %751 = bitcast i32* %arrayidx4909 to %union.tree_node**
  %752 = load %union.tree_node** %751, align 8, !tbaa !1
  %code4911 = getelementptr inbounds %union.tree_node* %752, i64 0, i32 0, i32 0, i32 2
  %bf.load4912 = load i32* %code4911, align 8
  %bf.clear4913 = and i32 %bf.load4912, 255
  %cmp4914 = icmp eq i32 %bf.clear4913, 115
  br i1 %cmp4914, label %land.lhs.true4916, label %if.end5021

land.lhs.true4916:                                ; preds = %land.lhs.true4906
  %operands4921 = getelementptr inbounds %union.tree_node* %750, i64 0, i32 0, i32 2
  %arrayidx4922 = bitcast i32* %operands4921 to %union.tree_node**
  %753 = load %union.tree_node** %arrayidx4922, align 8, !tbaa !1
  %type4924 = getelementptr inbounds %union.tree_node* %753, i64 0, i32 0, i32 0, i32 1
  %754 = load %union.tree_node** %type4924, align 8, !tbaa !36
  %operands4929 = getelementptr inbounds %union.tree_node* %752, i64 0, i32 0, i32 2
  %arrayidx4930 = bitcast i32* %operands4929 to %union.tree_node**
  %755 = load %union.tree_node** %arrayidx4930, align 8, !tbaa !1
  %type4932 = getelementptr inbounds %union.tree_node* %755, i64 0, i32 0, i32 0, i32 1
  %756 = load %union.tree_node** %type4932, align 8, !tbaa !36
  %cmp4933 = icmp eq %union.tree_node* %754, %756
  br i1 %cmp4933, label %if.then4935, label %if.end5021

if.then4935:                                      ; preds = %land.lhs.true4916
  %code4949 = getelementptr inbounds %union.tree_node* %753, i64 0, i32 0, i32 0, i32 2
  %bf.load4950 = load i32* %code4949, align 8
  %bf.clear4951 = and i32 %bf.load4950, 255
  %idxprom49528248 = zext i32 %bf.clear4951 to i64
  %arrayidx4953 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom49528248
  %757 = load i8* %arrayidx4953, align 1, !tbaa !5
  %cmp4955 = icmp eq i8 %757, 50
  br i1 %cmp4955, label %land.lhs.true4957, label %lor.lhs.false4963

land.lhs.true4957:                                ; preds = %if.then4935
  %operands4959 = getelementptr inbounds %union.tree_node* %753, i64 0, i32 0, i32 2
  %arrayidx4960 = bitcast i32* %operands4959 to %union.tree_node**
  %758 = load %union.tree_node** %arrayidx4960, align 8, !tbaa !1
  %call4961 = call i32 @operand_equal_p(%union.tree_node* %755, %union.tree_node* %758, i32 0) #5
  %tobool4962 = icmp eq i32 %call4961, 0
  br i1 %tobool4962, label %lor.lhs.false4963, label %if.then5011

lor.lhs.false4963:                                ; preds = %land.lhs.true4957, %if.then4935
  %code4965 = getelementptr inbounds %union.tree_node* %755, i64 0, i32 0, i32 0, i32 2
  %bf.load4966 = load i32* %code4965, align 8
  %bf.clear4967 = and i32 %bf.load4966, 255
  %idxprom49688249 = zext i32 %bf.clear4967 to i64
  %arrayidx4969 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom49688249
  %759 = load i8* %arrayidx4969, align 1, !tbaa !5
  %cmp4971 = icmp eq i8 %759, 50
  br i1 %cmp4971, label %land.lhs.true4973, label %lor.lhs.false4979

land.lhs.true4973:                                ; preds = %lor.lhs.false4963
  %operands4975 = getelementptr inbounds %union.tree_node* %755, i64 0, i32 0, i32 2
  %arrayidx4976 = bitcast i32* %operands4975 to %union.tree_node**
  %760 = load %union.tree_node** %arrayidx4976, align 8, !tbaa !1
  %call4977 = call i32 @operand_equal_p(%union.tree_node* %753, %union.tree_node* %760, i32 0) #5
  %tobool4978 = icmp eq i32 %call4977, 0
  br i1 %tobool4978, label %lor.lhs.false4979, label %if.then5011

lor.lhs.false4979:                                ; preds = %land.lhs.true4973, %lor.lhs.false4963
  %bf.load4982 = load i32* %code4949, align 8
  %bf.clear4983 = and i32 %bf.load4982, 255
  %idxprom49848250 = zext i32 %bf.clear4983 to i64
  %arrayidx4985 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom49848250
  %761 = load i8* %arrayidx4985, align 1, !tbaa !5
  %cmp4987 = icmp eq i8 %761, 49
  br i1 %cmp4987, label %land.lhs.true4989, label %lor.lhs.false4995

land.lhs.true4989:                                ; preds = %lor.lhs.false4979
  %operands4991 = getelementptr inbounds %union.tree_node* %753, i64 0, i32 0, i32 2
  %arrayidx4992 = bitcast i32* %operands4991 to %union.tree_node**
  %762 = load %union.tree_node** %arrayidx4992, align 8, !tbaa !1
  %call4993 = call i32 @operand_equal_p(%union.tree_node* %755, %union.tree_node* %762, i32 0) #5
  %tobool4994 = icmp eq i32 %call4993, 0
  br i1 %tobool4994, label %lor.lhs.false4995, label %if.then5011

lor.lhs.false4995:                                ; preds = %land.lhs.true4989, %lor.lhs.false4979
  %bf.load4998 = load i32* %code4965, align 8
  %bf.clear4999 = and i32 %bf.load4998, 255
  %idxprom50008251 = zext i32 %bf.clear4999 to i64
  %arrayidx5001 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom50008251
  %763 = load i8* %arrayidx5001, align 1, !tbaa !5
  %cmp5003 = icmp eq i8 %763, 49
  br i1 %cmp5003, label %land.lhs.true5005, label %if.end5021

land.lhs.true5005:                                ; preds = %lor.lhs.false4995
  %operands5007 = getelementptr inbounds %union.tree_node* %755, i64 0, i32 0, i32 2
  %arrayidx5008 = bitcast i32* %operands5007 to %union.tree_node**
  %764 = load %union.tree_node** %arrayidx5008, align 8, !tbaa !1
  %call5009 = call i32 @operand_equal_p(%union.tree_node* %753, %union.tree_node* %764, i32 0) #5
  %tobool5010 = icmp eq i32 %call5009, 0
  br i1 %tobool5010, label %if.end5021, label %if.then5011

if.then5011:                                      ; preds = %land.lhs.true4957, %land.lhs.true4973, %land.lhs.true4989, %land.lhs.true5005
  %765 = load %union.tree_node** %type4924, align 8, !tbaa !36
  %arrayidx5016 = bitcast i32* %operands4898 to %union.tree_node**
  %766 = load %union.tree_node** %arrayidx5016, align 8, !tbaa !1
  %call5017 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 51, %union.tree_node* %765, %union.tree_node* %766, %union.tree_node* %753, %union.tree_node* %755) #5
  %call5018 = call %union.tree_node* @build1(i32 115, %union.tree_node* %0, %union.tree_node* %call5017) #5
  %call5019 = call %struct.rtx_def* @expand_expr(%union.tree_node* %call5018, %struct.rtx_def* %target.addr.1, i32 %tmode, i32 %modifier)
  br label %return

if.end5021:                                       ; preds = %land.lhs.true5005, %lor.lhs.false4995, %land.lhs.true4916, %land.lhs.true4906, %sw.bb4896
  %767 = load %union.tree_node** %749, align 8, !tbaa !1
  %call5025 = call i32 @integer_onep(%union.tree_node* %767) #5
  %tobool5026 = icmp eq i32 %call5025, 0
  br i1 %tobool5026, label %if.end5070, label %land.lhs.true5027

land.lhs.true5027:                                ; preds = %if.end5021
  %arrayidx5030 = getelementptr inbounds i32* %operands4898, i64 4
  %768 = bitcast i32* %arrayidx5030 to %union.tree_node**
  %769 = load %union.tree_node** %768, align 8, !tbaa !1
  %call5031 = call i32 @integer_zerop(%union.tree_node* %769) #5
  %tobool5032 = icmp eq i32 %call5031, 0
  br i1 %tobool5032, label %if.end5070, label %land.lhs.true5033

land.lhs.true5033:                                ; preds = %land.lhs.true5027
  %arrayidx5036 = bitcast i32* %operands4898 to %union.tree_node**
  %770 = load %union.tree_node** %arrayidx5036, align 8, !tbaa !1
  %code5038 = getelementptr inbounds %union.tree_node* %770, i64 0, i32 0, i32 0, i32 2
  %bf.load5039 = load i32* %code5038, align 8
  %bf.clear5040 = and i32 %bf.load5039, 255
  %idxprom50418247 = zext i32 %bf.clear5040 to i64
  %arrayidx5042 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom50418247
  %771 = load i8* %arrayidx5042, align 1, !tbaa !5
  %cmp5044 = icmp eq i8 %771, 60
  br i1 %cmp5044, label %if.then5046, label %if.end5070

if.then5046:                                      ; preds = %land.lhs.true5033
  br i1 %36, label %if.then5048, label %if.end5053

if.then5048:                                      ; preds = %if.then5046
  %772 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call5052 = call %struct.rtx_def* @expand_expr(%union.tree_node* %770, %struct.rtx_def* %772, i32 0, i32 %modifier)
  %773 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  br label %return

if.end5053:                                       ; preds = %if.then5046
  %call5057 = call %struct.rtx_def* @expand_expr(%union.tree_node* %770, %struct.rtx_def* %target.addr.1, i32 %bf.clear23, i32 %modifier)
  %774 = getelementptr inbounds %struct.rtx_def* %call5057, i64 0, i32 0
  %bf.load5058 = load i32* %774, align 8
  %bf.lshr5059 = lshr i32 %bf.load5058, 16
  %bf.clear5060 = and i32 %bf.lshr5059, 255
  %cmp5061 = icmp eq i32 %bf.clear5060, %bf.clear23
  br i1 %cmp5061, label %return, label %if.end5064

if.end5064:                                       ; preds = %if.end5053
  %cmp5065 = icmp eq %struct.rtx_def* %target.addr.1, null
  br i1 %cmp5065, label %if.then5067, label %if.end5069

if.then5067:                                      ; preds = %if.end5064
  %call5068 = call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear23) #5
  br label %if.end5069

if.end5069:                                       ; preds = %if.then5067, %if.end5064
  %target.addr.14 = phi %struct.rtx_def* [ %call5068, %if.then5067 ], [ %target.addr.1, %if.end5064 ]
  %775 = load i32* %unsignedp, align 4, !tbaa !21
  call void @convert_move(%struct.rtx_def* %target.addr.14, %struct.rtx_def* %call5057, i32 %775)
  br label %return

if.end5070:                                       ; preds = %land.lhs.true5027, %if.end5021, %land.lhs.true5033
  %776 = load %union.tree_node** %749, align 8, !tbaa !1
  %code5075 = getelementptr inbounds %union.tree_node* %776, i64 0, i32 0, i32 0, i32 2
  %bf.load5076 = load i32* %code5075, align 8
  %bf.clear5077 = and i32 %bf.load5076, 255
  %idxprom50788240 = zext i32 %bf.clear5077 to i64
  %arrayidx5079 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom50788240
  %777 = load i8* %arrayidx5079, align 1, !tbaa !5
  %cmp5081 = icmp eq i8 %777, 50
  %arrayidx5086 = getelementptr inbounds i32* %operands4898, i64 4
  %778 = bitcast i32* %arrayidx5086 to %union.tree_node**
  br i1 %cmp5081, label %land.lhs.true5083, label %if.else5102

land.lhs.true5083:                                ; preds = %if.end5070
  %779 = load %union.tree_node** %778, align 8, !tbaa !1
  %operands5091 = getelementptr inbounds %union.tree_node* %776, i64 0, i32 0, i32 2
  %arrayidx5092 = bitcast i32* %operands5091 to %union.tree_node**
  %780 = load %union.tree_node** %arrayidx5092, align 8, !tbaa !1
  %call5093 = call i32 @operand_equal_p(%union.tree_node* %779, %union.tree_node* %780, i32 0) #5
  %tobool5094 = icmp eq i32 %call5093, 0
  br i1 %tobool5094, label %if.else5102, label %if.then5095

if.then5095:                                      ; preds = %land.lhs.true5083
  %781 = load %union.tree_node** %778, align 8, !tbaa !1
  %782 = load %union.tree_node** %749, align 8, !tbaa !1
  br label %if.end5201

if.else5102:                                      ; preds = %if.end5070, %land.lhs.true5083
  %783 = load %union.tree_node** %778, align 8, !tbaa !1
  %code5107 = getelementptr inbounds %union.tree_node* %783, i64 0, i32 0, i32 0, i32 2
  %bf.load5108 = load i32* %code5107, align 8
  %bf.clear5109 = and i32 %bf.load5108, 255
  %idxprom51108241 = zext i32 %bf.clear5109 to i64
  %arrayidx5111 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom51108241
  %784 = load i8* %arrayidx5111, align 1, !tbaa !5
  %cmp5113 = icmp eq i8 %784, 50
  br i1 %cmp5113, label %land.lhs.true5115, label %if.else5134

land.lhs.true5115:                                ; preds = %if.else5102
  %785 = load %union.tree_node** %749, align 8, !tbaa !1
  %operands5123 = getelementptr inbounds %union.tree_node* %783, i64 0, i32 0, i32 2
  %arrayidx5124 = bitcast i32* %operands5123 to %union.tree_node**
  %786 = load %union.tree_node** %arrayidx5124, align 8, !tbaa !1
  %call5125 = call i32 @operand_equal_p(%union.tree_node* %785, %union.tree_node* %786, i32 0) #5
  %tobool5126 = icmp eq i32 %call5125, 0
  br i1 %tobool5126, label %if.else5134, label %if.then5127

if.then5127:                                      ; preds = %land.lhs.true5115
  %787 = load %union.tree_node** %749, align 8, !tbaa !1
  %788 = load %union.tree_node** %778, align 8, !tbaa !1
  br label %if.end5201

if.else5134:                                      ; preds = %land.lhs.true5115, %if.else5102
  %789 = load %union.tree_node** %749, align 8, !tbaa !1
  %code5139 = getelementptr inbounds %union.tree_node* %789, i64 0, i32 0, i32 0, i32 2
  %bf.load5140 = load i32* %code5139, align 8
  %bf.clear5141 = and i32 %bf.load5140, 255
  %idxprom51428242 = zext i32 %bf.clear5141 to i64
  %arrayidx5143 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom51428242
  %790 = load i8* %arrayidx5143, align 1, !tbaa !5
  %cmp5145 = icmp eq i8 %790, 49
  br i1 %cmp5145, label %land.lhs.true5147, label %if.else5166

land.lhs.true5147:                                ; preds = %if.else5134
  %791 = load %union.tree_node** %778, align 8, !tbaa !1
  %operands5155 = getelementptr inbounds %union.tree_node* %789, i64 0, i32 0, i32 2
  %arrayidx5156 = bitcast i32* %operands5155 to %union.tree_node**
  %792 = load %union.tree_node** %arrayidx5156, align 8, !tbaa !1
  %call5157 = call i32 @operand_equal_p(%union.tree_node* %791, %union.tree_node* %792, i32 0) #5
  %tobool5158 = icmp eq i32 %call5157, 0
  br i1 %tobool5158, label %if.else5166, label %if.then5159

if.then5159:                                      ; preds = %land.lhs.true5147
  %793 = load %union.tree_node** %778, align 8, !tbaa !1
  %794 = load %union.tree_node** %749, align 8, !tbaa !1
  br label %if.end5201

if.else5166:                                      ; preds = %land.lhs.true5147, %if.else5134
  %795 = load %union.tree_node** %778, align 8, !tbaa !1
  %code5171 = getelementptr inbounds %union.tree_node* %795, i64 0, i32 0, i32 0, i32 2
  %bf.load5172 = load i32* %code5171, align 8
  %bf.clear5173 = and i32 %bf.load5172, 255
  %idxprom51748243 = zext i32 %bf.clear5173 to i64
  %arrayidx5175 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom51748243
  %796 = load i8* %arrayidx5175, align 1, !tbaa !5
  %cmp5177 = icmp eq i8 %796, 49
  br i1 %cmp5177, label %land.lhs.true5179, label %if.end5201

land.lhs.true5179:                                ; preds = %if.else5166
  %797 = load %union.tree_node** %749, align 8, !tbaa !1
  %operands5187 = getelementptr inbounds %union.tree_node* %795, i64 0, i32 0, i32 2
  %arrayidx5188 = bitcast i32* %operands5187 to %union.tree_node**
  %798 = load %union.tree_node** %arrayidx5188, align 8, !tbaa !1
  %call5189 = call i32 @operand_equal_p(%union.tree_node* %797, %union.tree_node* %798, i32 0) #5
  %tobool5190 = icmp eq i32 %call5189, 0
  br i1 %tobool5190, label %if.end5201, label %if.then5191

if.then5191:                                      ; preds = %land.lhs.true5179
  %799 = load %union.tree_node** %749, align 8, !tbaa !1
  %800 = load %union.tree_node** %778, align 8, !tbaa !1
  br label %if.end5201

if.end5201:                                       ; preds = %land.lhs.true5179, %if.then5127, %if.else5166, %if.then5191, %if.then5159, %if.then5095
  %binary_op.0 = phi %union.tree_node* [ %782, %if.then5095 ], [ %788, %if.then5127 ], [ null, %if.then5159 ], [ null, %if.then5191 ], [ null, %land.lhs.true5179 ], [ null, %if.else5166 ]
  %unary_op.0 = phi %union.tree_node* [ null, %if.then5095 ], [ null, %if.then5127 ], [ %794, %if.then5159 ], [ %800, %if.then5191 ], [ null, %land.lhs.true5179 ], [ null, %if.else5166 ]
  %singleton.0 = phi %union.tree_node* [ %781, %if.then5095 ], [ %787, %if.then5127 ], [ %793, %if.then5159 ], [ %799, %if.then5191 ], [ null, %land.lhs.true5179 ], [ null, %if.else5166 ]
  br i1 %36, label %if.end5275.thread, label %if.else5204

if.end5275.thread:                                ; preds = %if.end5201
  %tobool52788489 = icmp ne %union.tree_node* %singleton.0, null
  %tobool52808491 = icmp ne %union.tree_node* %binary_op.0, null
  br label %if.end5466

if.else5204:                                      ; preds = %if.end5201
  br i1 %cmp.i8447, label %if.else5263, label %land.lhs.true5206

land.lhs.true5206:                                ; preds = %if.else5204
  %arrayidx5209 = bitcast i32* %operands4898 to %union.tree_node**
  %801 = load %union.tree_node** %arrayidx5209, align 8, !tbaa !1
  %call5210 = call i32 @safe_from_p(%struct.rtx_def* %target, %union.tree_node* %801, i32 1)
  %tobool5211 = icmp eq i32 %call5210, 0
  br i1 %tobool5211, label %lor.lhs.false5212, label %land.lhs.true5206.land.lhs.true5229_crit_edge

land.lhs.true5206.land.lhs.true5229_crit_edge:    ; preds = %land.lhs.true5206
  %.pre8668 = getelementptr inbounds %struct.rtx_def* %target, i64 0, i32 0
  br label %land.lhs.true5229

lor.lhs.false5212:                                ; preds = %land.lhs.true5206
  %tobool5213 = icmp eq %union.tree_node* %singleton.0, null
  br i1 %tobool5213, label %if.else5263, label %land.lhs.true5214

land.lhs.true5214:                                ; preds = %lor.lhs.false5212
  %802 = getelementptr inbounds %struct.rtx_def* %target, i64 0, i32 0
  %bf.load5215 = load i32* %802, align 8
  %bf.clear5216 = and i32 %bf.load5215, 65535
  %cmp5217 = icmp eq i32 %bf.clear5216, 61
  br i1 %cmp5217, label %land.lhs.true5219, label %if.else5263

land.lhs.true5219:                                ; preds = %land.lhs.true5214
  %arrayidx5221 = getelementptr inbounds %struct.rtx_def* %target, i64 0, i32 1, i64 0
  %rtuint5222 = bitcast %union.rtunion_def* %arrayidx5221 to i32*
  %803 = load i32* %rtuint5222, align 4, !tbaa !21
  %cmp5223 = icmp ugt i32 %803, 52
  br i1 %cmp5223, label %land.lhs.true5225, label %if.else5263

land.lhs.true5225:                                ; preds = %land.lhs.true5219
  %804 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !1
  br label %while.cond.i

while.cond.i:                                     ; preds = %land.rhs.i, %land.lhs.true5225
  %exp.addr.0.i = phi %union.tree_node* [ %singleton.0, %land.lhs.true5225 ], [ %805, %land.rhs.i ]
  %code.i = getelementptr inbounds %union.tree_node* %exp.addr.0.i, i64 0, i32 0, i32 0, i32 2
  %bf.load.i8373 = load i32* %code.i, align 8
  %bf.clear.i8374 = and i32 %bf.load.i8373, 255
  %bf.clear.off.i = add i32 %bf.clear.i8374, -114
  %switch51.i = icmp ult i32 %bf.clear.off.i, 3
  br i1 %switch51.i, label %land.lhs.true.i, label %while.end.i

land.lhs.true.i:                                  ; preds = %while.cond.i
  %operands.i = getelementptr inbounds %union.tree_node* %exp.addr.0.i, i64 0, i32 0, i32 2
  %arrayidx.i8375 = bitcast i32* %operands.i to %union.tree_node**
  %805 = load %union.tree_node** %arrayidx.i8375, align 8, !tbaa !1
  %cmp13.i = icmp eq %union.tree_node* %805, %804
  br i1 %cmp13.i, label %while.end.i, label %land.rhs.i

land.rhs.i:                                       ; preds = %land.lhs.true.i
  %type.i = getelementptr inbounds %union.tree_node* %exp.addr.0.i, i64 0, i32 0, i32 0, i32 1
  %806 = load %union.tree_node** %type.i, align 8, !tbaa !36
  %type15.i = bitcast %union.tree_node* %806 to %struct.tree_type*
  %mode.i = getelementptr inbounds %struct.tree_type* %type15.i, i64 0, i32 6
  %bf.load16.i = load i32* %mode.i, align 4
  %type22.i = getelementptr inbounds %union.tree_node* %805, i64 0, i32 0, i32 0, i32 1
  %807 = load %union.tree_node** %type22.i, align 8, !tbaa !36
  %type23.i = bitcast %union.tree_node* %807 to %struct.tree_type*
  %mode24.i = getelementptr inbounds %struct.tree_type* %type23.i, i64 0, i32 6
  %bf.load25.i = load i32* %mode24.i, align 4
  %bf.lshr49.i = xor i32 %bf.load25.i, %bf.load16.i
  %808 = and i32 %bf.lshr49.i, 65024
  %cmp28.i = icmp eq i32 %808, 0
  br i1 %cmp28.i, label %while.cond.i, label %while.end.i

while.end.i:                                      ; preds = %land.rhs.i, %land.lhs.true.i, %while.cond.i
  %809 = and i32 %bf.load.i8373, 254
  %switch.i = icmp eq i32 %809, 34
  br i1 %switch.i, label %sw.bb.i, label %var_rtx.exit

sw.bb.i:                                          ; preds = %while.end.i
  %rtl.i = getelementptr inbounds %union.tree_node* %exp.addr.0.i, i64 0, i32 0, i32 17
  %810 = load %struct.rtx_def** %rtl.i, align 8, !tbaa !37
  %tobool.i8376 = icmp eq %struct.rtx_def* %810, null
  br i1 %tobool.i8376, label %cond.false.i, label %var_rtx.exit

cond.false.i:                                     ; preds = %sw.bb.i
  call void @make_decl_rtl(%union.tree_node* %exp.addr.0.i, i8* null) #5
  %811 = load %struct.rtx_def** %rtl.i, align 8, !tbaa !37
  br label %var_rtx.exit

var_rtx.exit:                                     ; preds = %while.end.i, %sw.bb.i, %cond.false.i
  %retval.0.i = phi %struct.rtx_def* [ %811, %cond.false.i ], [ %810, %sw.bb.i ], [ null, %while.end.i ]
  %cmp5227 = icmp eq %struct.rtx_def* %retval.0.i, %target
  br i1 %cmp5227, label %land.lhs.true5229, label %if.else5263

land.lhs.true5229:                                ; preds = %land.lhs.true5206.land.lhs.true5229_crit_edge, %var_rtx.exit
  %.pre-phi8669 = phi i32* [ %.pre8668, %land.lhs.true5206.land.lhs.true5229_crit_edge ], [ %802, %var_rtx.exit ]
  %bf.load5230 = load i32* %.pre-phi8669, align 8
  %bf.lshr5231 = lshr i32 %bf.load5230, 16
  %bf.clear5232 = and i32 %bf.lshr5231, 255
  %cmp5233 = icmp eq i32 %bf.clear5232, %bf.clear23
  br i1 %cmp5233, label %land.lhs.true5235, label %if.else5263

land.lhs.true5235:                                ; preds = %land.lhs.true5229
  %call5236 = call i32 @can_conditionally_move_p(i32 %bf.clear23) #5
  %tobool5237 = icmp eq i32 %call5236, 0
  %bf.load5251.pre = load i32* %.pre-phi8669, align 8
  %bf.clear5240 = and i32 %bf.load5251.pre, 65535
  %cmp5241 = icmp eq i32 %bf.clear5240, 61
  %or.cond8678 = or i1 %tobool5237, %cmp5241
  br i1 %or.cond8678, label %land.lhs.true5250, label %lor.lhs.false5243

lor.lhs.false5243:                                ; preds = %land.lhs.true5235
  %bf.load5246 = load i32* %unsigned_flag, align 8
  %bf.clear5248 = and i32 %bf.load5246, 1024
  %tobool5249 = icmp eq i32 %bf.clear5248, 0
  br i1 %tobool5249, label %if.else5263, label %land.lhs.true5250

land.lhs.true5250:                                ; preds = %land.lhs.true5235, %lor.lhs.false5243
  %bf.clear5252 = and i32 %bf.load5251.pre, 65535
  %cmp5253 = icmp eq i32 %bf.clear5252, 66
  br i1 %cmp5253, label %lor.lhs.false5255, label %if.end5275

lor.lhs.false5255:                                ; preds = %land.lhs.true5250
  %bf.load5258 = load i32* %unsigned_flag, align 8
  %bf.clear5260 = and i32 %bf.load5258, 1024
  %tobool5261 = icmp eq i32 %bf.clear5260, 0
  br i1 %tobool5261, label %if.else5263, label %if.end5275

if.else5263:                                      ; preds = %lor.lhs.false5243, %lor.lhs.false5255, %lor.lhs.false5212, %if.else5204, %land.lhs.true5229, %var_rtx.exit, %land.lhs.true5219, %land.lhs.true5214
  %bf.load5266 = load i32* %unsigned_flag, align 8
  %bf.clear5268 = and i32 %bf.load5266, 1024
  %tobool5269 = icmp eq i32 %bf.clear5268, 0
  br i1 %tobool5269, label %if.else5271, label %if.then5270

if.then5270:                                      ; preds = %if.else5263
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 8197, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.expand_expr, i64 0, i64 0)) #8
  unreachable

if.else5271:                                      ; preds = %if.else5263
  %call5272 = call %struct.rtx_def* @assign_temp(%union.tree_node* %0, i32 0, i32 0, i32 1) #5
  br label %if.end5275

if.end5275:                                       ; preds = %land.lhs.true5250, %lor.lhs.false5255, %if.else5271
  %temp.6 = phi %struct.rtx_def* [ %call5272, %if.else5271 ], [ %target, %lor.lhs.false5255 ], [ %target, %land.lhs.true5250 ]
  %tobool5276 = icmp ne %struct.rtx_def* %temp.6, null
  %tobool5278 = icmp ne %union.tree_node* %singleton.0, null
  %or.cond6600 = and i1 %tobool5276, %tobool5278
  %tobool5280 = icmp ne %union.tree_node* %binary_op.0, null
  %or.cond6601 = and i1 %or.cond6600, %tobool5280
  br i1 %or.cond6601, label %land.lhs.true5281, label %if.end5466

land.lhs.true5281:                                ; preds = %if.end5275
  %code5283 = getelementptr inbounds %union.tree_node* %binary_op.0, i64 0, i32 0, i32 0, i32 2
  %bf.load5284 = load i32* %code5283, align 8
  %bf.clear5285 = and i32 %bf.load5284, 255
  switch i32 %bf.clear5285, label %if.end5466 [
    i32 59, label %land.lhs.true5309
    i32 60, label %land.lhs.true5309
    i32 86, label %land.lhs.true5309
    i32 87, label %land.lhs.true5309
  ]

land.lhs.true5309:                                ; preds = %land.lhs.true5281, %land.lhs.true5281, %land.lhs.true5281, %land.lhs.true5281
  %812 = load i32* @ix86_branch_cost, align 4, !tbaa !21
  %cmp5310 = icmp sgt i32 %812, 2
  %operands5314 = getelementptr inbounds %union.tree_node* %binary_op.0, i64 0, i32 0, i32 2
  %arrayidx5315 = getelementptr inbounds i32* %operands5314, i64 2
  %813 = bitcast i32* %arrayidx5315 to %union.tree_node**
  %814 = load %union.tree_node** %813, align 8, !tbaa !1
  br i1 %cmp5310, label %cond.true5312, label %cond.false5318

cond.true5312:                                    ; preds = %land.lhs.true5309
  %call5316 = call i32 @integer_pow2p(%union.tree_node* %814) #5
  %tobool5317 = icmp eq i32 %call5316, 0
  br i1 %tobool5317, label %if.end5466, label %land.lhs.true5324

cond.false5318:                                   ; preds = %land.lhs.true5309
  %call5322 = call i32 @integer_onep(%union.tree_node* %814) #5
  %tobool5323 = icmp eq i32 %call5322, 0
  br i1 %tobool5323, label %if.end5466, label %land.lhs.true5324

land.lhs.true5324:                                ; preds = %cond.true5312, %cond.false5318
  %arrayidx5327 = bitcast i32* %operands4898 to %union.tree_node**
  %815 = load %union.tree_node** %arrayidx5327, align 8, !tbaa !1
  %code5329 = getelementptr inbounds %union.tree_node* %815, i64 0, i32 0, i32 0, i32 2
  %bf.load5330 = load i32* %code5329, align 8
  %bf.clear5331 = and i32 %bf.load5330, 255
  %idxprom53328246 = zext i32 %bf.clear5331 to i64
  %arrayidx5333 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom53328246
  %816 = load i8* %arrayidx5333, align 1, !tbaa !5
  %cmp5335 = icmp eq i8 %816, 60
  br i1 %cmp5335, label %if.then5337, label %if.end5466

if.then5337:                                      ; preds = %land.lhs.true5324
  %bf.load5341 = load i32* %code5283, align 8
  %bf.clear5342 = and i32 %bf.load5341, 255
  switch i32 %bf.clear5342, label %cond.false5382 [
    i32 59, label %cond.true5345
    i32 60, label %cond.true5367
  ]

cond.true5345:                                    ; preds = %if.then5337
  %817 = load i32* @flag_trapv, align 4, !tbaa !21
  %tobool5346 = icmp eq i32 %817, 0
  br i1 %tobool5346, label %cond.false5357, label %land.lhs.true5347

land.lhs.true5347:                                ; preds = %cond.true5345
  %type5349 = getelementptr inbounds %union.tree_node* %binary_op.0, i64 0, i32 0, i32 0, i32 1
  %818 = load %union.tree_node** %type5349, align 8, !tbaa !36
  %unsigned_flag5351 = getelementptr inbounds %union.tree_node* %818, i64 0, i32 0, i32 0, i32 2
  %bf.load5352 = load i32* %unsigned_flag5351, align 8
  %bf.clear5354 = and i32 %bf.load5352, 8192
  %tobool5355 = icmp eq i32 %bf.clear5354, 0
  br i1 %tobool5355, label %cond.true5356, label %cond.false5357

cond.true5356:                                    ; preds = %land.lhs.true5347
  %819 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 1), align 8, !tbaa !1
  br label %cond.end5395

cond.false5357:                                   ; preds = %land.lhs.true5347, %cond.true5345
  %820 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 0), align 8, !tbaa !1
  br label %cond.end5395

cond.true5367:                                    ; preds = %if.then5337
  %821 = load i32* @flag_trapv, align 4, !tbaa !21
  %tobool5368 = icmp eq i32 %821, 0
  br i1 %tobool5368, label %cond.false5379, label %land.lhs.true5369

land.lhs.true5369:                                ; preds = %cond.true5367
  %type5371 = getelementptr inbounds %union.tree_node* %binary_op.0, i64 0, i32 0, i32 0, i32 1
  %822 = load %union.tree_node** %type5371, align 8, !tbaa !36
  %unsigned_flag5373 = getelementptr inbounds %union.tree_node* %822, i64 0, i32 0, i32 0, i32 2
  %bf.load5374 = load i32* %unsigned_flag5373, align 8
  %bf.clear5376 = and i32 %bf.load5374, 8192
  %tobool5377 = icmp eq i32 %bf.clear5376, 0
  br i1 %tobool5377, label %cond.true5378, label %cond.false5379

cond.true5378:                                    ; preds = %land.lhs.true5369
  %823 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 3), align 8, !tbaa !1
  br label %cond.end5395

cond.false5379:                                   ; preds = %land.lhs.true5369, %cond.true5367
  %824 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 2), align 8, !tbaa !1
  br label %cond.end5395

cond.false5382:                                   ; preds = %if.then5337
  %cmp5387 = icmp eq i32 %bf.clear5342, 86
  %825 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 19), align 8, !tbaa !1
  %826 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 20), align 8, !tbaa !1
  %cond5392 = select i1 %cmp5387, %struct.optab* %825, %struct.optab* %826
  br label %cond.end5395

cond.end5395:                                     ; preds = %cond.false5379, %cond.true5378, %cond.false5382, %cond.true5356, %cond.false5357
  %cond5396 = phi %struct.optab* [ %819, %cond.true5356 ], [ %820, %cond.false5357 ], [ %823, %cond.true5378 ], [ %824, %cond.false5379 ], [ %cond5392, %cond.false5382 ]
  %827 = load %union.tree_node** %749, align 8, !tbaa !1
  %cmp5400 = icmp eq %union.tree_node* %singleton.0, %827
  br i1 %cmp5400, label %if.then5402, label %if.end5410

if.then5402:                                      ; preds = %cond.end5395
  %call5406 = call %union.tree_node* @invert_truthvalue(%union.tree_node* %815) #5
  store %union.tree_node* %call5406, %union.tree_node** %arrayidx5327, align 8, !tbaa !1
  br label %if.end5410

if.end5410:                                       ; preds = %if.then5402, %cond.end5395
  %828 = phi %union.tree_node* [ %call5406, %if.then5402 ], [ %815, %cond.end5395 ]
  %call5414 = call i32 @safe_from_p(%struct.rtx_def* %temp.6, %union.tree_node* %singleton.0, i32 1)
  %tobool5415 = icmp ne i32 %call5414, 0
  %cond5419 = select i1 %tobool5415, %struct.rtx_def* %temp.6, %struct.rtx_def* null
  %829 = load i32* @ix86_branch_cost, align 4, !tbaa !21
  %cmp5420 = icmp slt i32 %829, 2
  %conv5421 = zext i1 %cmp5420 to i32
  %call5422 = call fastcc %struct.rtx_def* @do_store_flag(%union.tree_node* %828, %struct.rtx_def* %cond5419, i32 %bf.clear23, i32 %conv5421)
  %cmp5423 = icmp eq %struct.rtx_def* %call5422, null
  br i1 %cmp5423, label %if.else5450, label %land.lhs.true5425

land.lhs.true5425:                                ; preds = %if.end5410
  %830 = load %union.tree_node** %813, align 8, !tbaa !1
  %call5429 = call i32 @integer_onep(%union.tree_node* %830) #5
  %tobool5430 = icmp eq i32 %call5429, 0
  br i1 %tobool5430, label %if.end5445, label %if.then5447

if.end5445:                                       ; preds = %land.lhs.true5425
  %831 = load %union.tree_node** %813, align 8, !tbaa !1
  %call5435 = call i32 @tree_log2(%union.tree_node* %831) #5
  %conv5436 = sext i32 %call5435 to i64
  %call5437 = call %union.tree_node* @build_int_2_wide(i64 %conv5436, i64 0) #5
  %call5438 = call i32 @safe_from_p(%struct.rtx_def* %temp.6, %union.tree_node* %singleton.0, i32 1)
  %tobool5439 = icmp ne i32 %call5438, 0
  %cond5443 = select i1 %tobool5439, %struct.rtx_def* %temp.6, %struct.rtx_def* null
  %call5444 = call %struct.rtx_def* @expand_shift(i32 82, i32 %bf.clear23, %struct.rtx_def* %call5422, %union.tree_node* %call5437, %struct.rtx_def* %cond5443, i32 0) #5
  %tobool5446 = icmp eq %struct.rtx_def* %call5444, null
  br i1 %tobool5446, label %if.else5450, label %if.then5447

if.then5447:                                      ; preds = %land.lhs.true5425, %if.end5445
  %result5338.08502 = phi %struct.rtx_def* [ %call5444, %if.end5445 ], [ %call5422, %land.lhs.true5425 ]
  %call5448 = call %struct.rtx_def* @expand_expr(%union.tree_node* %singleton.0, %struct.rtx_def* null, i32 0, i32 0)
  %832 = load i32* %unsignedp, align 4, !tbaa !21
  %call5449 = call %struct.rtx_def* @expand_binop(i32 %bf.clear23, %struct.optab* %cond5396, %struct.rtx_def* %call5448, %struct.rtx_def* %result5338.08502, %struct.rtx_def* %temp.6, i32 %832, i32 3) #5
  br label %return

if.else5450:                                      ; preds = %if.end5410, %if.end5445
  %833 = load %union.tree_node** %749, align 8, !tbaa !1
  %cmp5454 = icmp eq %union.tree_node* %singleton.0, %833
  br i1 %cmp5454, label %if.then5456, label %if.end5466

if.then5456:                                      ; preds = %if.else5450
  %834 = load %union.tree_node** %arrayidx5327, align 8, !tbaa !1
  %call5460 = call %union.tree_node* @invert_truthvalue(%union.tree_node* %834) #5
  store %union.tree_node* %call5460, %union.tree_node** %arrayidx5327, align 8, !tbaa !1
  br label %if.end5466

if.end5466:                                       ; preds = %if.end5275.thread, %land.lhs.true5281, %cond.true5312, %cond.false5318, %if.then5456, %if.else5450, %land.lhs.true5324, %if.end5275
  %tobool52808498 = phi i1 [ %tobool52808491, %if.end5275.thread ], [ true, %land.lhs.true5281 ], [ true, %cond.true5312 ], [ true, %cond.false5318 ], [ true, %if.then5456 ], [ true, %if.else5450 ], [ true, %land.lhs.true5324 ], [ %tobool5280, %if.end5275 ]
  %tobool52788497 = phi i1 [ %tobool52788489, %if.end5275.thread ], [ true, %land.lhs.true5281 ], [ true, %cond.true5312 ], [ true, %cond.false5318 ], [ true, %if.then5456 ], [ true, %if.else5450 ], [ true, %land.lhs.true5324 ], [ %tobool5278, %if.end5275 ]
  %tobool52768496 = phi i1 [ false, %if.end5275.thread ], [ true, %land.lhs.true5281 ], [ true, %cond.true5312 ], [ true, %cond.false5318 ], [ true, %if.then5456 ], [ true, %if.else5450 ], [ true, %land.lhs.true5324 ], [ %tobool5276, %if.end5275 ]
  %temp.68493 = phi %struct.rtx_def* [ null, %if.end5275.thread ], [ %temp.6, %land.lhs.true5281 ], [ %temp.6, %cond.true5312 ], [ %temp.6, %cond.false5318 ], [ %temp.6, %if.then5456 ], [ %temp.6, %if.else5450 ], [ %temp.6, %land.lhs.true5324 ], [ %temp.6, %if.end5275 ]
  %835 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr.i8358 = getelementptr inbounds %struct.function* %835, i64 0, i32 2
  %836 = load %struct.expr_status** %expr.i8358, align 8, !tbaa !6
  %x_inhibit_defer_pop.i8359 = getelementptr inbounds %struct.expr_status* %836, i64 0, i32 1
  %837 = load i32* %x_inhibit_defer_pop.i8359, align 4, !tbaa !15
  %cmp.i8360 = icmp eq i32 %837, 0
  br i1 %cmp.i8360, label %if.then.i8363, label %do_pending_stack_adjust.exit8372

if.then.i8363:                                    ; preds = %if.end5466
  %x_pending_stack_adjust.i8361 = getelementptr inbounds %struct.expr_status* %836, i64 0, i32 0
  %838 = load i32* %x_pending_stack_adjust.i8361, align 4, !tbaa !13
  %cmp2.i8362 = icmp eq i32 %838, 0
  br i1 %cmp2.i8362, label %if.end.i8371, label %if.then3.i8369

if.then3.i8369:                                   ; preds = %if.then.i8363
  %conv.i8364 = sext i32 %838 to i64
  %call.i8365 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv.i8364) #5
  call void @adjust_stack(%struct.rtx_def* %call.i8365) #5
  %.pre.i8366 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr6.phi.trans.insert.i8367 = getelementptr inbounds %struct.function* %.pre.i8366, i64 0, i32 2
  %.pre9.i8368 = load %struct.expr_status** %expr6.phi.trans.insert.i8367, align 8, !tbaa !6
  %x_inhibit_defer_pop.phi.trans.insert.phi.trans.insert = getelementptr inbounds %struct.expr_status* %.pre9.i8368, i64 0, i32 1
  %.pre8640.pre = load i32* %x_inhibit_defer_pop.phi.trans.insert.phi.trans.insert, align 4, !tbaa !15
  br label %if.end.i8371

if.end.i8371:                                     ; preds = %if.then3.i8369, %if.then.i8363
  %.pre8640 = phi i32 [ 0, %if.then.i8363 ], [ %.pre8640.pre, %if.then3.i8369 ]
  %.pre8639 = phi %struct.expr_status* [ %836, %if.then.i8363 ], [ %.pre9.i8368, %if.then3.i8369 ]
  %x_pending_stack_adjust7.i8370 = getelementptr inbounds %struct.expr_status* %.pre8639, i64 0, i32 0
  store i32 0, i32* %x_pending_stack_adjust7.i8370, align 4, !tbaa !13
  br label %do_pending_stack_adjust.exit8372

do_pending_stack_adjust.exit8372:                 ; preds = %if.end5466, %if.end.i8371
  %839 = phi i32 [ %837, %if.end5466 ], [ %.pre8640, %if.end.i8371 ]
  %840 = phi %struct.expr_status* [ %836, %if.end5466 ], [ %.pre8639, %if.end.i8371 ]
  %x_inhibit_defer_pop = getelementptr inbounds %struct.expr_status* %840, i64 0, i32 1
  %add5468 = add nsw i32 %839, 1
  store i32 %add5468, i32* %x_inhibit_defer_pop, align 4, !tbaa !15
  %call5469 = call %struct.rtx_def* @gen_label_rtx() #5
  br i1 %tobool52788497, label %land.lhs.true5471, label %if.else5566

land.lhs.true5471:                                ; preds = %do_pending_stack_adjust.exit8372
  %arrayidx5474 = bitcast i32* %operands4898 to %union.tree_node**
  %841 = load %union.tree_node** %arrayidx5474, align 8, !tbaa !1
  %side_effects_flag5476 = getelementptr inbounds %union.tree_node* %841, i64 0, i32 0, i32 0, i32 2
  %bf.load5477 = load i32* %side_effects_flag5476, align 8
  %bf.clear5479 = and i32 %bf.load5477, 256
  %tobool5480 = icmp eq i32 %bf.clear5479, 0
  br i1 %tobool5480, label %if.then5481, label %if.else5566

if.then5481:                                      ; preds = %land.lhs.true5471
  br i1 %tobool52768496, label %if.then5484, label %if.else5507

if.then5484:                                      ; preds = %if.then5481
  br i1 %tobool52808498, label %land.lhs.true5486, label %lor.lhs.false5492

land.lhs.true5486:                                ; preds = %if.then5484
  %operands5488 = getelementptr inbounds %union.tree_node* %binary_op.0, i64 0, i32 0, i32 2
  %arrayidx5489 = getelementptr inbounds i32* %operands5488, i64 2
  %842 = bitcast i32* %arrayidx5489 to %union.tree_node**
  %843 = load %union.tree_node** %842, align 8, !tbaa !1
  %call5490 = call i32 @safe_from_p(%struct.rtx_def* %temp.68493, %union.tree_node* %843, i32 1)
  %tobool5491 = icmp eq i32 %call5490, 0
  br i1 %tobool5491, label %if.then5503, label %lor.lhs.false5492

lor.lhs.false5492:                                ; preds = %land.lhs.true5486, %if.then5484
  %844 = getelementptr inbounds %struct.rtx_def* %temp.68493, i64 0, i32 0
  %bf.load5493 = load i32* %844, align 8
  %bf.clear5494 = and i32 %bf.load5493, 65535
  %cmp5495 = icmp eq i32 %bf.clear5494, 61
  br i1 %cmp5495, label %land.lhs.true5497, label %if.end5505

land.lhs.true5497:                                ; preds = %lor.lhs.false5492
  %arrayidx5499 = getelementptr inbounds %struct.rtx_def* %temp.68493, i64 0, i32 1, i64 0
  %rtuint5500 = bitcast %union.rtunion_def* %arrayidx5499 to i32*
  %845 = load i32* %rtuint5500, align 4, !tbaa !21
  %cmp5501 = icmp ult i32 %845, 53
  br i1 %cmp5501, label %if.then5503, label %if.end5505

if.then5503:                                      ; preds = %land.lhs.true5486, %land.lhs.true5497
  %call5504 = call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear23) #5
  br label %if.end5505

if.end5505:                                       ; preds = %if.then5503, %land.lhs.true5497, %lor.lhs.false5492
  %temp.7 = phi %struct.rtx_def* [ %call5504, %if.then5503 ], [ %temp.68493, %land.lhs.true5497 ], [ %temp.68493, %lor.lhs.false5492 ]
  %call5506 = call %struct.rtx_def* @store_expr(%union.tree_node* %singleton.0, %struct.rtx_def* %temp.7, i32 0)
  br label %if.end5514

if.else5507:                                      ; preds = %if.then5481
  %846 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %cond5512 = select i1 %36, %struct.rtx_def* %846, %struct.rtx_def* null
  %call5513 = call %struct.rtx_def* @expand_expr(%union.tree_node* %singleton.0, %struct.rtx_def* %cond5512, i32 0, i32 0)
  br label %if.end5514

if.end5514:                                       ; preds = %if.else5507, %if.end5505
  %temp.8 = phi %struct.rtx_def* [ %temp.7, %if.end5505 ], [ %temp.68493, %if.else5507 ]
  %847 = load %union.tree_node** %749, align 8, !tbaa !1
  %cmp5518 = icmp eq %union.tree_node* %singleton.0, %847
  %848 = load %union.tree_node** %arrayidx5474, align 8, !tbaa !1
  br i1 %cmp5518, label %if.then5520, label %if.else5524

if.then5520:                                      ; preds = %if.end5514
  call void @do_jump(%union.tree_node* %848, %struct.rtx_def* null, %struct.rtx_def* %call5469) #5
  br label %if.end5528

if.else5524:                                      ; preds = %if.end5514
  call void @do_jump(%union.tree_node* %848, %struct.rtx_def* %call5469, %struct.rtx_def* null) #5
  br label %if.end5528

if.end5528:                                       ; preds = %if.else5524, %if.then5520
  call void @start_cleanup_deferral() #5
  %cmp5531 = icmp eq %struct.rtx_def* %temp.8, null
  %or.cond6602 = and i1 %tobool52808498, %cmp5531
  br i1 %or.cond6602, label %if.then5533, label %if.else5543

if.then5533:                                      ; preds = %if.end5528
  %operands5535 = getelementptr inbounds %union.tree_node* %binary_op.0, i64 0, i32 0, i32 2
  %arrayidx5536 = getelementptr inbounds i32* %operands5535, i64 2
  %849 = bitcast i32* %arrayidx5536 to %union.tree_node**
  %850 = load %union.tree_node** %849, align 8, !tbaa !1
  %851 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %cond5541 = select i1 %36, %struct.rtx_def* %851, %struct.rtx_def* null
  %call5542 = call %struct.rtx_def* @expand_expr(%union.tree_node* %850, %struct.rtx_def* %cond5541, i32 0, i32 0)
  br label %if.end5803

if.else5543:                                      ; preds = %if.end5528
  br i1 %tobool52808498, label %if.then5545, label %if.else5556

if.then5545:                                      ; preds = %if.else5543
  %code5547 = getelementptr inbounds %union.tree_node* %binary_op.0, i64 0, i32 0, i32 0, i32 2
  %bf.load5548 = load i32* %code5547, align 8
  %bf.clear5549 = and i32 %bf.load5548, 255
  %call5550 = call %union.tree_node* @make_tree(%union.tree_node* %0, %struct.rtx_def* %temp.8) #5
  %operands5552 = getelementptr inbounds %union.tree_node* %binary_op.0, i64 0, i32 0, i32 2
  %arrayidx5553 = getelementptr inbounds i32* %operands5552, i64 2
  %852 = bitcast i32* %arrayidx5553 to %union.tree_node**
  %853 = load %union.tree_node** %852, align 8, !tbaa !1
  %call5554 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %bf.clear5549, %union.tree_node* %0, %union.tree_node* %call5550, %union.tree_node* %853) #5
  %call5555 = call %struct.rtx_def* @store_expr(%union.tree_node* %call5554, %struct.rtx_def* %temp.8, i32 0)
  br label %if.end5803

if.else5556:                                      ; preds = %if.else5543
  %code5558 = getelementptr inbounds %union.tree_node* %unary_op.0, i64 0, i32 0, i32 0, i32 2
  %bf.load5559 = load i32* %code5558, align 8
  %bf.clear5560 = and i32 %bf.load5559, 255
  %call5561 = call %union.tree_node* @make_tree(%union.tree_node* %0, %struct.rtx_def* %temp.8) #5
  %call5562 = call %union.tree_node* @build1(i32 %bf.clear5560, %union.tree_node* %0, %union.tree_node* %call5561) #5
  %call5563 = call %struct.rtx_def* @store_expr(%union.tree_node* %call5562, %struct.rtx_def* %temp.8, i32 0)
  br label %if.end5803

if.else5566:                                      ; preds = %land.lhs.true5471, %do_pending_stack_adjust.exit8372
  %arrayidx5571 = bitcast i32* %operands4898 to %union.tree_node**
  br i1 %tobool52768496, label %land.lhs.true5568, label %if.else5740

land.lhs.true5568:                                ; preds = %if.else5566
  %854 = load %union.tree_node** %arrayidx5571, align 8, !tbaa !1
  %code5573 = getelementptr inbounds %union.tree_node* %854, i64 0, i32 0, i32 0, i32 2
  %bf.load5574 = load i32* %code5573, align 8
  %bf.clear5575 = and i32 %bf.load5574, 255
  %idxprom55768245 = zext i32 %bf.clear5575 to i64
  %arrayidx5577 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom55768245
  %855 = load i8* %arrayidx5577, align 1, !tbaa !5
  %cmp5579 = icmp eq i8 %855, 60
  br i1 %cmp5579, label %land.lhs.true5581, label %land.lhs.true5655

land.lhs.true5581:                                ; preds = %land.lhs.true5568
  %operands5586 = getelementptr inbounds %union.tree_node* %854, i64 0, i32 0, i32 2
  %arrayidx5587 = getelementptr inbounds i32* %operands5586, i64 2
  %856 = bitcast i32* %arrayidx5587 to %union.tree_node**
  %857 = load %union.tree_node** %856, align 8, !tbaa !1
  %call5588 = call i32 @integer_zerop(%union.tree_node* %857) #5
  %tobool5589 = icmp eq i32 %call5588, 0
  br i1 %tobool5589, label %if.else5653.land.lhs.true5655_crit_edge, label %land.lhs.true5590

land.lhs.true5590:                                ; preds = %land.lhs.true5581
  %858 = load %union.tree_node** %arrayidx5571, align 8, !tbaa !1
  %operands5595 = getelementptr inbounds %union.tree_node* %858, i64 0, i32 0, i32 2
  %arrayidx5596 = bitcast i32* %operands5595 to %union.tree_node**
  %859 = load %union.tree_node** %arrayidx5596, align 8, !tbaa !1
  %860 = load %union.tree_node** %749, align 8, !tbaa !1
  %call5600 = call i32 @operand_equal_p(%union.tree_node* %859, %union.tree_node* %860, i32 0) #5
  %tobool5601 = icmp eq i32 %call5600, 0
  br i1 %tobool5601, label %if.else5653.land.lhs.true5655_crit_edge, label %land.lhs.true5602

land.lhs.true5602:                                ; preds = %land.lhs.true5590
  %861 = load %union.tree_node** %arrayidx5571, align 8, !tbaa !1
  %side_effects_flag5607 = getelementptr inbounds %union.tree_node* %861, i64 0, i32 0, i32 0, i32 2
  %bf.load5608 = load i32* %side_effects_flag5607, align 8
  %bf.clear5610 = and i32 %bf.load5608, 256
  %tobool5611 = icmp eq i32 %bf.clear5610, 0
  br i1 %tobool5611, label %land.lhs.true5622, label %lor.lhs.false5612

lor.lhs.false5612:                                ; preds = %land.lhs.true5602
  %862 = load %union.tree_node** %749, align 8, !tbaa !1
  %code5617 = getelementptr inbounds %union.tree_node* %862, i64 0, i32 0, i32 0, i32 2
  %bf.load5618 = load i32* %code5617, align 8
  %bf.clear5619 = and i32 %bf.load5618, 255
  %cmp5620 = icmp eq i32 %bf.clear5619, 118
  br i1 %cmp5620, label %land.lhs.true5622, label %if.else5653.land.lhs.true5655_crit_edge

land.lhs.true5622:                                ; preds = %land.lhs.true5602, %lor.lhs.false5612
  %arrayidx5625 = getelementptr inbounds i32* %operands4898, i64 4
  %863 = bitcast i32* %arrayidx5625 to %union.tree_node**
  %864 = load %union.tree_node** %863, align 8, !tbaa !1
  %call5626 = call i32 @safe_from_p(%struct.rtx_def* %temp.68493, %union.tree_node* %864, i32 1)
  %tobool5627 = icmp eq i32 %call5626, 0
  br i1 %tobool5627, label %if.else5653.land.lhs.true5655_crit_edge, label %if.then5628

if.then5628:                                      ; preds = %land.lhs.true5622
  %865 = getelementptr inbounds %struct.rtx_def* %temp.68493, i64 0, i32 0
  %bf.load5629 = load i32* %865, align 8
  %bf.clear5630 = and i32 %bf.load5629, 65535
  %cmp5631 = icmp eq i32 %bf.clear5630, 61
  br i1 %cmp5631, label %land.lhs.true5633, label %if.end5641

land.lhs.true5633:                                ; preds = %if.then5628
  %arrayidx5635 = getelementptr inbounds %struct.rtx_def* %temp.68493, i64 0, i32 1, i64 0
  %rtuint5636 = bitcast %union.rtunion_def* %arrayidx5635 to i32*
  %866 = load i32* %rtuint5636, align 4, !tbaa !21
  %cmp5637 = icmp ult i32 %866, 53
  br i1 %cmp5637, label %if.then5639, label %if.end5641

if.then5639:                                      ; preds = %land.lhs.true5633
  %call5640 = call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear23) #5
  br label %if.end5641

if.end5641:                                       ; preds = %if.then5639, %land.lhs.true5633, %if.then5628
  %temp.9 = phi %struct.rtx_def* [ %call5640, %if.then5639 ], [ %temp.68493, %land.lhs.true5633 ], [ %temp.68493, %if.then5628 ]
  %867 = load %union.tree_node** %749, align 8, !tbaa !1
  %call5645 = call %struct.rtx_def* @store_expr(%union.tree_node* %867, %struct.rtx_def* %temp.9, i32 0)
  %868 = load %union.tree_node** %arrayidx5571, align 8, !tbaa !1
  call void @do_jump(%union.tree_node* %868, %struct.rtx_def* null, %struct.rtx_def* %call5469) #5
  call void @start_cleanup_deferral() #5
  %869 = load %union.tree_node** %863, align 8, !tbaa !1
  %call5652 = call %struct.rtx_def* @store_expr(%union.tree_node* %869, %struct.rtx_def* %temp.9, i32 0)
  br label %if.end5803

if.else5653.land.lhs.true5655_crit_edge:          ; preds = %lor.lhs.false5612, %land.lhs.true5581, %land.lhs.true5590, %land.lhs.true5622
  %.pre8641 = load %union.tree_node** %arrayidx5571, align 8, !tbaa !1
  %code5660.phi.trans.insert = getelementptr inbounds %union.tree_node* %.pre8641, i64 0, i32 0, i32 0, i32 2
  %bf.load5661.pre = load i32* %code5660.phi.trans.insert, align 8
  br label %land.lhs.true5655

land.lhs.true5655:                                ; preds = %if.else5653.land.lhs.true5655_crit_edge, %land.lhs.true5568
  %bf.load5661 = phi i32 [ %bf.load5661.pre, %if.else5653.land.lhs.true5655_crit_edge ], [ %bf.load5574, %land.lhs.true5568 ]
  %870 = phi %union.tree_node* [ %.pre8641, %if.else5653.land.lhs.true5655_crit_edge ], [ %854, %land.lhs.true5568 ]
  %bf.clear5662 = and i32 %bf.load5661, 255
  %idxprom56638244 = zext i32 %bf.clear5662 to i64
  %arrayidx5664 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom56638244
  %871 = load i8* %arrayidx5664, align 1, !tbaa !5
  %cmp5666 = icmp eq i8 %871, 60
  br i1 %cmp5666, label %land.lhs.true5668, label %if.else5740

land.lhs.true5668:                                ; preds = %land.lhs.true5655
  %operands5673 = getelementptr inbounds %union.tree_node* %870, i64 0, i32 0, i32 2
  %arrayidx5674 = getelementptr inbounds i32* %operands5673, i64 2
  %872 = bitcast i32* %arrayidx5674 to %union.tree_node**
  %873 = load %union.tree_node** %872, align 8, !tbaa !1
  %call5675 = call i32 @integer_zerop(%union.tree_node* %873) #5
  %tobool5676 = icmp eq i32 %call5675, 0
  br i1 %tobool5676, label %if.else5740, label %land.lhs.true5677

land.lhs.true5677:                                ; preds = %land.lhs.true5668
  %874 = load %union.tree_node** %arrayidx5571, align 8, !tbaa !1
  %operands5682 = getelementptr inbounds %union.tree_node* %874, i64 0, i32 0, i32 2
  %arrayidx5683 = bitcast i32* %operands5682 to %union.tree_node**
  %875 = load %union.tree_node** %arrayidx5683, align 8, !tbaa !1
  %arrayidx5686 = getelementptr inbounds i32* %operands4898, i64 4
  %876 = bitcast i32* %arrayidx5686 to %union.tree_node**
  %877 = load %union.tree_node** %876, align 8, !tbaa !1
  %call5687 = call i32 @operand_equal_p(%union.tree_node* %875, %union.tree_node* %877, i32 0) #5
  %tobool5688 = icmp eq i32 %call5687, 0
  br i1 %tobool5688, label %if.else5740, label %land.lhs.true5689

land.lhs.true5689:                                ; preds = %land.lhs.true5677
  %878 = load %union.tree_node** %arrayidx5571, align 8, !tbaa !1
  %side_effects_flag5694 = getelementptr inbounds %union.tree_node* %878, i64 0, i32 0, i32 0, i32 2
  %bf.load5695 = load i32* %side_effects_flag5694, align 8
  %bf.clear5697 = and i32 %bf.load5695, 256
  %tobool5698 = icmp eq i32 %bf.clear5697, 0
  br i1 %tobool5698, label %land.lhs.true5709, label %lor.lhs.false5699

lor.lhs.false5699:                                ; preds = %land.lhs.true5689
  %879 = load %union.tree_node** %876, align 8, !tbaa !1
  %code5704 = getelementptr inbounds %union.tree_node* %879, i64 0, i32 0, i32 0, i32 2
  %bf.load5705 = load i32* %code5704, align 8
  %bf.clear5706 = and i32 %bf.load5705, 255
  %cmp5707 = icmp eq i32 %bf.clear5706, 118
  br i1 %cmp5707, label %land.lhs.true5709, label %if.else5740

land.lhs.true5709:                                ; preds = %land.lhs.true5689, %lor.lhs.false5699
  %880 = load %union.tree_node** %749, align 8, !tbaa !1
  %call5713 = call i32 @safe_from_p(%struct.rtx_def* %temp.68493, %union.tree_node* %880, i32 1)
  %tobool5714 = icmp eq i32 %call5713, 0
  br i1 %tobool5714, label %if.else5740, label %if.then5715

if.then5715:                                      ; preds = %land.lhs.true5709
  %881 = getelementptr inbounds %struct.rtx_def* %temp.68493, i64 0, i32 0
  %bf.load5716 = load i32* %881, align 8
  %bf.clear5717 = and i32 %bf.load5716, 65535
  %cmp5718 = icmp eq i32 %bf.clear5717, 61
  br i1 %cmp5718, label %land.lhs.true5720, label %if.end5728

land.lhs.true5720:                                ; preds = %if.then5715
  %arrayidx5722 = getelementptr inbounds %struct.rtx_def* %temp.68493, i64 0, i32 1, i64 0
  %rtuint5723 = bitcast %union.rtunion_def* %arrayidx5722 to i32*
  %882 = load i32* %rtuint5723, align 4, !tbaa !21
  %cmp5724 = icmp ult i32 %882, 53
  br i1 %cmp5724, label %if.then5726, label %if.end5728

if.then5726:                                      ; preds = %land.lhs.true5720
  %call5727 = call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear23) #5
  br label %if.end5728

if.end5728:                                       ; preds = %if.then5726, %land.lhs.true5720, %if.then5715
  %temp.10 = phi %struct.rtx_def* [ %call5727, %if.then5726 ], [ %temp.68493, %land.lhs.true5720 ], [ %temp.68493, %if.then5715 ]
  %883 = load %union.tree_node** %876, align 8, !tbaa !1
  %call5732 = call %struct.rtx_def* @store_expr(%union.tree_node* %883, %struct.rtx_def* %temp.10, i32 0)
  %884 = load %union.tree_node** %arrayidx5571, align 8, !tbaa !1
  call void @do_jump(%union.tree_node* %884, %struct.rtx_def* %call5469, %struct.rtx_def* null) #5
  call void @start_cleanup_deferral() #5
  %885 = load %union.tree_node** %749, align 8, !tbaa !1
  %call5739 = call %struct.rtx_def* @store_expr(%union.tree_node* %885, %struct.rtx_def* %temp.10, i32 0)
  br label %if.end5803

if.else5740:                                      ; preds = %if.else5566, %land.lhs.true5709, %land.lhs.true5677, %land.lhs.true5668, %lor.lhs.false5699, %land.lhs.true5655
  %call5741 = call %struct.rtx_def* @gen_label_rtx() #5
  %886 = load %union.tree_node** %arrayidx5571, align 8, !tbaa !1
  call void @do_jump(%union.tree_node* %886, %struct.rtx_def* %call5469, %struct.rtx_def* null) #5
  call void @start_cleanup_deferral() #5
  %887 = load %union.tree_node** %749, align 8, !tbaa !1
  br i1 %tobool52768496, label %land.lhs.true5747, label %if.else5760

land.lhs.true5747:                                ; preds = %if.else5740
  %type5752 = getelementptr inbounds %union.tree_node* %887, i64 0, i32 0, i32 0, i32 1
  %888 = load %union.tree_node** %type5752, align 8, !tbaa !36
  %889 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 27), align 8, !tbaa !1
  %cmp5753 = icmp eq %union.tree_node* %888, %889
  br i1 %cmp5753, label %if.else5760, label %if.then5755

if.then5755:                                      ; preds = %land.lhs.true5747
  %call5759 = call %struct.rtx_def* @store_expr(%union.tree_node* %887, %struct.rtx_def* %temp.68493, i32 0)
  br label %if.end5770

if.else5760:                                      ; preds = %if.else5740, %land.lhs.true5747
  %890 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %cond5768 = select i1 %36, %struct.rtx_def* %890, %struct.rtx_def* null
  %call5769 = call %struct.rtx_def* @expand_expr(%union.tree_node* %887, %struct.rtx_def* %cond5768, i32 0, i32 0)
  br label %if.end5770

if.end5770:                                       ; preds = %if.else5760, %if.then5755
  call void @end_cleanup_deferral() #5
  %891 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr30.i8331 = getelementptr inbounds %struct.function* %891, i64 0, i32 2
  %892 = load %struct.expr_status** %expr30.i8331, align 8, !tbaa !6
  %x_pending_chain31.i8332 = getelementptr inbounds %struct.expr_status* %892, i64 0, i32 6
  %893 = load %struct.rtx_def** %x_pending_chain31.i8332, align 8, !tbaa !11
  %tobool32.i8333 = icmp eq %struct.rtx_def* %893, null
  br i1 %tobool32.i8333, label %emit_queue.exit8357, label %while.body.i8339

while.body.i8339:                                 ; preds = %if.end5770, %if.end.i8356
  %894 = phi %struct.rtx_def* [ %906, %if.end.i8356 ], [ %893, %if.end5770 ]
  %arrayidx.i8334 = getelementptr inbounds %struct.rtx_def* %894, i64 0, i32 1, i64 3
  %rtx.i8335 = bitcast %union.rtunion_def* %arrayidx.i8334 to %struct.rtx_def**
  %895 = load %struct.rtx_def** %rtx.i8335, align 8, !tbaa !1
  %896 = getelementptr inbounds %struct.rtx_def* %895, i64 0, i32 0
  %bf.load.i8336 = load i32* %896, align 8
  %bf.clear.i8337 = and i32 %bf.load.i8336, 65535
  %cmp.i8338 = icmp eq i32 %bf.clear.i8337, 24
  br i1 %cmp.i8338, label %if.then.i8345, label %if.else.i8348

if.then.i8345:                                    ; preds = %while.body.i8339
  %arrayidx5.i8340 = getelementptr inbounds %struct.rtx_def* %895, i64 0, i32 1, i64 0
  %rtvec.i8341 = bitcast %union.rtunion_def* %arrayidx5.i8340 to %struct.rtvec_def**
  %897 = load %struct.rtvec_def** %rtvec.i8341, align 8, !tbaa !1
  %arrayidx6.i8342 = getelementptr inbounds %struct.rtvec_def* %897, i64 0, i32 1, i64 0
  %898 = load %struct.rtx_def** %arrayidx6.i8342, align 8, !tbaa !1
  %899 = getelementptr inbounds %struct.rtx_def* %894, i64 0, i32 1, i64 1, i32 0
  %.c.i8343 = ptrtoint %struct.rtx_def* %898 to i64
  store i64 %.c.i8343, i64* %899, align 8, !tbaa !1
  %call.i8344 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %895) #5
  br label %if.end.i8356

if.else.i8348:                                    ; preds = %while.body.i8339
  %call16.i8346 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %895) #5
  %900 = getelementptr inbounds %struct.rtx_def* %894, i64 0, i32 1, i64 1, i32 0
  %call16.c.i8347 = ptrtoint %struct.rtx_def* %call16.i8346 to i64
  store i64 %call16.c.i8347, i64* %900, align 8, !tbaa !1
  br label %if.end.i8356

if.end.i8356:                                     ; preds = %if.else.i8348, %if.then.i8345
  %arrayidx21.i8349 = getelementptr inbounds %struct.rtx_def* %894, i64 0, i32 1, i64 4
  %rtx22.i8350 = bitcast %union.rtunion_def* %arrayidx21.i8349 to %struct.rtx_def**
  %901 = load %struct.rtx_def** %rtx22.i8350, align 8, !tbaa !1
  %902 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr23.i8351 = getelementptr inbounds %struct.function* %902, i64 0, i32 2
  %903 = load %struct.expr_status** %expr23.i8351, align 8, !tbaa !6
  %x_pending_chain24.i8352 = getelementptr inbounds %struct.expr_status* %903, i64 0, i32 6
  store %struct.rtx_def* %901, %struct.rtx_def** %x_pending_chain24.i8352, align 8, !tbaa !11
  %904 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr.i8353 = getelementptr inbounds %struct.function* %904, i64 0, i32 2
  %905 = load %struct.expr_status** %expr.i8353, align 8, !tbaa !6
  %x_pending_chain.i8354 = getelementptr inbounds %struct.expr_status* %905, i64 0, i32 6
  %906 = load %struct.rtx_def** %x_pending_chain.i8354, align 8, !tbaa !11
  %tobool.i8355 = icmp eq %struct.rtx_def* %906, null
  br i1 %tobool.i8355, label %emit_queue.exit8357, label %while.body.i8339

emit_queue.exit8357:                              ; preds = %if.end.i8356, %if.end5770
  %call5771 = call %struct.rtx_def* @gen_jump(%struct.rtx_def* %call5741) #5
  %call5772 = call %struct.rtx_def* @emit_jump_insn(%struct.rtx_def* %call5771) #5
  %call5773 = call %struct.rtx_def* @emit_barrier() #5
  %call5774 = call %struct.rtx_def* @emit_label(%struct.rtx_def* %call5469) #5
  call void @start_cleanup_deferral() #5
  %arrayidx5780 = getelementptr inbounds i32* %operands4898, i64 4
  %907 = bitcast i32* %arrayidx5780 to %union.tree_node**
  %908 = load %union.tree_node** %907, align 8, !tbaa !1
  br i1 %tobool52768496, label %land.lhs.true5777, label %if.else5790

land.lhs.true5777:                                ; preds = %emit_queue.exit8357
  %type5782 = getelementptr inbounds %union.tree_node* %908, i64 0, i32 0, i32 0, i32 1
  %909 = load %union.tree_node** %type5782, align 8, !tbaa !36
  %910 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 27), align 8, !tbaa !1
  %cmp5783 = icmp eq %union.tree_node* %909, %910
  br i1 %cmp5783, label %if.else5790, label %if.then5785

if.then5785:                                      ; preds = %land.lhs.true5777
  %call5789 = call %struct.rtx_def* @store_expr(%union.tree_node* %908, %struct.rtx_def* %temp.68493, i32 0)
  br label %if.end5803

if.else5790:                                      ; preds = %emit_queue.exit8357, %land.lhs.true5777
  %911 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %cond5798 = select i1 %36, %struct.rtx_def* %911, %struct.rtx_def* null
  %call5799 = call %struct.rtx_def* @expand_expr(%union.tree_node* %908, %struct.rtx_def* %cond5798, i32 0, i32 0)
  br label %if.end5803

if.end5803:                                       ; preds = %if.then5533, %if.else5556, %if.then5545, %if.end5641, %if.then5785, %if.else5790, %if.end5728
  %temp.11 = phi %struct.rtx_def* [ %temp.9, %if.end5641 ], [ %temp.10, %if.end5728 ], [ %temp.68493, %if.then5785 ], [ %temp.68493, %if.else5790 ], [ %temp.8, %if.then5545 ], [ %temp.8, %if.else5556 ], [ null, %if.then5533 ]
  %op1.6 = phi %struct.rtx_def* [ %call5469, %if.end5641 ], [ %call5469, %if.end5728 ], [ %call5741, %if.then5785 ], [ %call5741, %if.else5790 ], [ %call5469, %if.then5545 ], [ %call5469, %if.else5556 ], [ %call5469, %if.then5533 ]
  call void @end_cleanup_deferral() #5
  %912 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr30.i = getelementptr inbounds %struct.function* %912, i64 0, i32 2
  %913 = load %struct.expr_status** %expr30.i, align 8, !tbaa !6
  %x_pending_chain31.i = getelementptr inbounds %struct.expr_status* %913, i64 0, i32 6
  %914 = load %struct.rtx_def** %x_pending_chain31.i, align 8, !tbaa !11
  %tobool32.i = icmp eq %struct.rtx_def* %914, null
  br i1 %tobool32.i, label %emit_queue.exit, label %while.body.i

while.body.i:                                     ; preds = %if.end5803, %if.end.i8330
  %915 = phi %struct.rtx_def* [ %927, %if.end.i8330 ], [ %914, %if.end5803 ]
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %915, i64 0, i32 1, i64 3
  %rtx.i = bitcast %union.rtunion_def* %arrayidx.i to %struct.rtx_def**
  %916 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !1
  %917 = getelementptr inbounds %struct.rtx_def* %916, i64 0, i32 0
  %bf.load.i = load i32* %917, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  %cmp.i8326 = icmp eq i32 %bf.clear.i, 24
  br i1 %cmp.i8326, label %if.then.i8328, label %if.else.i

if.then.i8328:                                    ; preds = %while.body.i
  %arrayidx5.i = getelementptr inbounds %struct.rtx_def* %916, i64 0, i32 1, i64 0
  %rtvec.i = bitcast %union.rtunion_def* %arrayidx5.i to %struct.rtvec_def**
  %918 = load %struct.rtvec_def** %rtvec.i, align 8, !tbaa !1
  %arrayidx6.i = getelementptr inbounds %struct.rtvec_def* %918, i64 0, i32 1, i64 0
  %919 = load %struct.rtx_def** %arrayidx6.i, align 8, !tbaa !1
  %920 = getelementptr inbounds %struct.rtx_def* %915, i64 0, i32 1, i64 1, i32 0
  %.c.i = ptrtoint %struct.rtx_def* %919 to i64
  store i64 %.c.i, i64* %920, align 8, !tbaa !1
  %call.i8327 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %916) #5
  br label %if.end.i8330

if.else.i:                                        ; preds = %while.body.i
  %call16.i = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %916) #5
  %921 = getelementptr inbounds %struct.rtx_def* %915, i64 0, i32 1, i64 1, i32 0
  %call16.c.i = ptrtoint %struct.rtx_def* %call16.i to i64
  store i64 %call16.c.i, i64* %921, align 8, !tbaa !1
  br label %if.end.i8330

if.end.i8330:                                     ; preds = %if.else.i, %if.then.i8328
  %arrayidx21.i = getelementptr inbounds %struct.rtx_def* %915, i64 0, i32 1, i64 4
  %rtx22.i = bitcast %union.rtunion_def* %arrayidx21.i to %struct.rtx_def**
  %922 = load %struct.rtx_def** %rtx22.i, align 8, !tbaa !1
  %923 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr23.i = getelementptr inbounds %struct.function* %923, i64 0, i32 2
  %924 = load %struct.expr_status** %expr23.i, align 8, !tbaa !6
  %x_pending_chain24.i = getelementptr inbounds %struct.expr_status* %924, i64 0, i32 6
  store %struct.rtx_def* %922, %struct.rtx_def** %x_pending_chain24.i, align 8, !tbaa !11
  %925 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr.i8329 = getelementptr inbounds %struct.function* %925, i64 0, i32 2
  %926 = load %struct.expr_status** %expr.i8329, align 8, !tbaa !6
  %x_pending_chain.i = getelementptr inbounds %struct.expr_status* %926, i64 0, i32 6
  %927 = load %struct.rtx_def** %x_pending_chain.i, align 8, !tbaa !11
  %tobool.i = icmp eq %struct.rtx_def* %927, null
  br i1 %tobool.i, label %emit_queue.exit, label %while.body.i

emit_queue.exit:                                  ; preds = %if.end.i8330, %if.end5803
  %call5804 = call %struct.rtx_def* @emit_label(%struct.rtx_def* %op1.6) #5
  %928 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr5805 = getelementptr inbounds %struct.function* %928, i64 0, i32 2
  %929 = load %struct.expr_status** %expr5805, align 8, !tbaa !6
  %x_inhibit_defer_pop5806 = getelementptr inbounds %struct.expr_status* %929, i64 0, i32 1
  %930 = load i32* %x_inhibit_defer_pop5806, align 4, !tbaa !15
  %sub5807 = add nsw i32 %930, -1
  store i32 %sub5807, i32* %x_inhibit_defer_pop5806, align 4, !tbaa !15
  br label %return

sw.bb5808:                                        ; preds = %if.end185
  %operands5810 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx5811 = bitcast i32* %operands5810 to %union.tree_node**
  %931 = load %union.tree_node** %arrayidx5811, align 8, !tbaa !1
  %code5814 = getelementptr inbounds %union.tree_node* %931, i64 0, i32 0, i32 0, i32 2
  %bf.load5815 = load i32* %code5814, align 8
  %bf.clear5816 = and i32 %bf.load5815, 255
  %cmp5817 = icmp eq i32 %bf.clear5816, 34
  br i1 %cmp5817, label %if.end5820, label %if.then5819

if.then5819:                                      ; preds = %sw.bb5808
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 8399, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.expand_expr, i64 0, i64 0)) #8
  unreachable

if.end5820:                                       ; preds = %sw.bb5808
  %target.addr.1.target = select i1 %36, %struct.rtx_def* %target.addr.1, %struct.rtx_def* %target
  %bf.set5828 = or i32 %bf.load5815, 65536
  store i32 %bf.set5828, i32* %code5814, align 8
  %cmp5829 = icmp eq %struct.rtx_def* %target.addr.1.target, null
  %rtl5833 = getelementptr inbounds %union.tree_node* %931, i64 0, i32 0, i32 17
  %932 = load %struct.rtx_def** %rtl5833, align 8, !tbaa !37
  %cmp5834 = icmp ne %struct.rtx_def* %932, null
  br i1 %cmp5829, label %if.then5831, label %if.else5882

if.then5831:                                      ; preds = %if.end5820
  br i1 %cmp5834, label %cond.end5846, label %if.else5855

cond.end5846:                                     ; preds = %if.then5831
  %arrayidx5850 = getelementptr inbounds i32* %operands5810, i64 2
  %933 = bitcast i32* %arrayidx5850 to %union.tree_node**
  %934 = load %union.tree_node** %933, align 8, !tbaa !1
  %cmp5851 = icmp eq %union.tree_node* %934, null
  br i1 %cmp5851, label %return, label %if.end5918

if.else5855:                                      ; preds = %if.then5831
  %call5856 = call %struct.rtx_def* @assign_temp(%union.tree_node* %0, i32 2, i32 0, i32 1) #5
  call void @preserve_temp_slots(%struct.rtx_def* %call5856) #5
  store %struct.rtx_def* %call5856, %struct.rtx_def** %rtl5833, align 8, !tbaa !37
  %bf.load5861 = load i32* %code5814, align 8
  %bf.clear5863 = and i32 %bf.load5861, 1024
  %tobool5864 = icmp eq i32 %bf.clear5863, 0
  br i1 %tobool5864, label %if.end5866, label %if.then5865

if.then5865:                                      ; preds = %if.else5855
  call void @put_var_into_stack(%union.tree_node* %931) #5
  br label %if.end5866

if.end5866:                                       ; preds = %if.else5855, %if.then5865
  %arrayidx5869 = getelementptr inbounds i32* %operands5810, i64 4
  %935 = bitcast i32* %arrayidx5869 to %union.tree_node**
  %936 = load %union.tree_node** %935, align 8, !tbaa !1
  %cmp5870 = icmp eq %union.tree_node* %936, null
  br i1 %cmp5870, label %if.then5872, label %if.end5918

if.then5872:                                      ; preds = %if.end5866
  %call5873 = call %union.tree_node* @maybe_build_cleanup(%union.tree_node* %931) #5
  store %union.tree_node* %call5873, %union.tree_node** %935, align 8, !tbaa !1
  br label %if.end5918

if.else5882:                                      ; preds = %if.end5820
  br i1 %cmp5834, label %cond.end5897, label %if.else5906

cond.end5897:                                     ; preds = %if.else5882
  %arrayidx5901 = getelementptr inbounds i32* %operands5810, i64 2
  %937 = bitcast i32* %arrayidx5901 to %union.tree_node**
  %938 = load %union.tree_node** %937, align 8, !tbaa !1
  %cmp5902 = icmp eq %union.tree_node* %938, null
  br i1 %cmp5902, label %return, label %if.end5918

if.else5906:                                      ; preds = %if.else5882
  store %struct.rtx_def* %target.addr.1.target, %struct.rtx_def** %rtl5833, align 8, !tbaa !37
  %bf.clear5913 = and i32 %bf.load5815, 1024
  %tobool5914 = icmp eq i32 %bf.clear5913, 0
  br i1 %tobool5914, label %if.end5918, label %if.then5915

if.then5915:                                      ; preds = %if.else5906
  call void @put_var_into_stack(%union.tree_node* %931) #5
  br label %if.end5918

if.end5918:                                       ; preds = %if.end5866, %if.then5872, %if.else5906, %cond.end5897, %if.then5915, %cond.end5846
  %cleanups.0 = phi %union.tree_node* [ null, %cond.end5846 ], [ null, %cond.end5897 ], [ null, %if.then5915 ], [ null, %if.else5906 ], [ %call5873, %if.then5872 ], [ %936, %if.end5866 ]
  %target.addr.16 = phi %struct.rtx_def* [ %932, %cond.end5846 ], [ %932, %cond.end5897 ], [ %target.addr.1.target, %if.then5915 ], [ %target.addr.1.target, %if.else5906 ], [ %call5856, %if.then5872 ], [ %call5856, %if.end5866 ]
  %arrayidx5921 = getelementptr inbounds i32* %operands5810, i64 2
  %939 = bitcast i32* %arrayidx5921 to %union.tree_node**
  %940 = load %union.tree_node** %939, align 8, !tbaa !1
  %arrayidx5924 = getelementptr inbounds i32* %operands5810, i64 6
  %941 = bitcast i32* %arrayidx5924 to %union.tree_node**
  store %union.tree_node* %940, %union.tree_node** %941, align 8, !tbaa !1
  store %union.tree_node* null, %union.tree_node** %939, align 8, !tbaa !1
  %call5928 = call %struct.rtx_def* @store_expr(%union.tree_node* %940, %struct.rtx_def* %target.addr.16, i32 0)
  %call5929 = call i32 @expand_decl_cleanup(%union.tree_node* null, %union.tree_node* %cleanups.0) #5
  br label %return

sw.bb5930:                                        ; preds = %if.end185
  %operands5932 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx5933 = bitcast i32* %operands5932 to %union.tree_node**
  %942 = load %union.tree_node** %arrayidx5933, align 8, !tbaa !1
  %arrayidx5936 = getelementptr inbounds i32* %operands5932, i64 2
  %943 = bitcast i32* %arrayidx5936 to %union.tree_node**
  %944 = load %union.tree_node** %943, align 8, !tbaa !1
  %lnot.ext = xor i32 %lor.ext84538462, 1
  %call5941 = call %struct.rtx_def* @expand_assignment(%union.tree_node* %942, %union.tree_node* %944, i32 %lnot.ext, i32 undef)
  br label %return

sw.bb5942:                                        ; preds = %if.end185
  %operands5945 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx5946 = bitcast i32* %operands5945 to %union.tree_node**
  %945 = load %union.tree_node** %arrayidx5946, align 8, !tbaa !1
  %arrayidx5950 = getelementptr inbounds i32* %operands5945, i64 2
  %946 = bitcast i32* %arrayidx5950 to %union.tree_node**
  %947 = load %union.tree_node** %946, align 8, !tbaa !1
  br i1 %36, label %land.lhs.true5952, label %if.end6048

land.lhs.true5952:                                ; preds = %sw.bb5942
  %code5954 = getelementptr inbounds %union.tree_node* %945, i64 0, i32 0, i32 0, i32 2
  %bf.load5955 = load i32* %code5954, align 8
  %bf.clear5956 = and i32 %bf.load5955, 255
  %cmp5957 = icmp eq i32 %bf.clear5956, 39
  br i1 %cmp5957, label %land.lhs.true5959, label %if.end6048

land.lhs.true5959:                                ; preds = %land.lhs.true5952
  %code5961 = getelementptr inbounds %union.tree_node* %947, i64 0, i32 0, i32 0, i32 2
  %bf.load5962 = load i32* %code5961, align 8
  %bf.clear5963 = and i32 %bf.load5962, 255
  switch i32 %bf.clear5963, label %if.end6048 [
    i32 86, label %land.lhs.true5973
    i32 88, label %land.lhs.true5973
  ]

land.lhs.true5973:                                ; preds = %land.lhs.true5959, %land.lhs.true5959
  %operands5975 = getelementptr inbounds %union.tree_node* %947, i64 0, i32 0, i32 2
  %arrayidx5976 = bitcast i32* %operands5975 to %union.tree_node**
  %948 = load %union.tree_node** %arrayidx5976, align 8, !tbaa !1
  %cmp5977 = icmp eq %union.tree_node* %948, %945
  br i1 %cmp5977, label %land.lhs.true5979, label %if.end6048

land.lhs.true5979:                                ; preds = %land.lhs.true5973
  %arrayidx5982 = getelementptr inbounds i32* %operands5975, i64 2
  %949 = bitcast i32* %arrayidx5982 to %union.tree_node**
  %950 = load %union.tree_node** %949, align 8, !tbaa !1
  %code5984 = getelementptr inbounds %union.tree_node* %950, i64 0, i32 0, i32 0, i32 2
  %bf.load5985 = load i32* %code5984, align 8
  %bf.clear5986 = and i32 %bf.load5985, 255
  %cmp5987 = icmp eq i32 %bf.clear5986, 39
  br i1 %cmp5987, label %land.lhs.true5989, label %if.end6048

land.lhs.true5989:                                ; preds = %land.lhs.true5979
  %operands5991 = getelementptr inbounds %union.tree_node* %945, i64 0, i32 0, i32 2
  %arrayidx5992 = getelementptr inbounds i32* %operands5991, i64 2
  %951 = bitcast i32* %arrayidx5992 to %union.tree_node**
  %952 = load %union.tree_node** %951, align 8, !tbaa !1
  %size5994 = getelementptr inbounds %union.tree_node* %952, i64 0, i32 0, i32 4
  %953 = load %union.tree_node** %size5994, align 8, !tbaa !39
  %call5995 = call i32 @integer_onep(%union.tree_node* %953) #5
  %tobool5996 = icmp eq i32 %call5995, 0
  br i1 %tobool5996, label %if.end6048, label %land.lhs.true5997

land.lhs.true5997:                                ; preds = %land.lhs.true5989
  %954 = load %union.tree_node** %949, align 8, !tbaa !1
  %operands6002 = getelementptr inbounds %union.tree_node* %954, i64 0, i32 0, i32 2
  %arrayidx6003 = getelementptr inbounds i32* %operands6002, i64 2
  %955 = bitcast i32* %arrayidx6003 to %union.tree_node**
  %956 = load %union.tree_node** %955, align 8, !tbaa !1
  %size6005 = getelementptr inbounds %union.tree_node* %956, i64 0, i32 0, i32 4
  %957 = load %union.tree_node** %size6005, align 8, !tbaa !39
  %call6006 = call i32 @integer_onep(%union.tree_node* %957) #5
  %tobool6007 = icmp eq i32 %call6006, 0
  br i1 %tobool6007, label %if.end6048, label %if.then6008

if.then6008:                                      ; preds = %land.lhs.true5997
  %call6009 = call %struct.rtx_def* @gen_label_rtx() #5
  %958 = load %union.tree_node** %949, align 8, !tbaa !1
  %bf.load6015 = load i32* %code5961, align 8
  %bf.clear6016 = and i32 %bf.load6015, 255
  %cmp6017 = icmp eq i32 %bf.clear6016, 86
  %cond6022 = select i1 %cmp6017, %struct.rtx_def* %call6009, %struct.rtx_def* null
  %cmp6027 = icmp eq i32 %bf.clear6016, 88
  %cond6032 = select i1 %cmp6027, %struct.rtx_def* %call6009, %struct.rtx_def* null
  call void @do_jump(%union.tree_node* %958, %struct.rtx_def* %cond6022, %struct.rtx_def* %cond6032)
  %type6034 = getelementptr inbounds %union.tree_node* %947, i64 0, i32 0, i32 0, i32 1
  %959 = load %union.tree_node** %type6034, align 8, !tbaa !36
  %bf.load6037 = load i32* %code5961, align 8
  %bf.clear6038 = and i32 %bf.load6037, 255
  %cmp6039 = icmp eq i32 %bf.clear6038, 86
  %960 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 12), align 8, !tbaa !1
  %961 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8, !tbaa !1
  %cond6044 = select i1 %cmp6039, %union.tree_node* %960, %union.tree_node* %961
  %call6045 = call %union.tree_node* @convert(%union.tree_node* %959, %union.tree_node* %cond6044) #5
  %call6046 = call %struct.rtx_def* @expand_assignment(%union.tree_node* %945, %union.tree_node* %call6045, i32 0, i32 undef)
  %962 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr.i = getelementptr inbounds %struct.function* %962, i64 0, i32 2
  %963 = load %struct.expr_status** %expr.i, align 8, !tbaa !6
  %x_inhibit_defer_pop.i = getelementptr inbounds %struct.expr_status* %963, i64 0, i32 1
  %964 = load i32* %x_inhibit_defer_pop.i, align 4, !tbaa !15
  %cmp.i = icmp eq i32 %964, 0
  br i1 %cmp.i, label %if.then.i, label %do_pending_stack_adjust.exit

if.then.i:                                        ; preds = %if.then6008
  %x_pending_stack_adjust.i = getelementptr inbounds %struct.expr_status* %963, i64 0, i32 0
  %965 = load i32* %x_pending_stack_adjust.i, align 4, !tbaa !13
  %cmp2.i = icmp eq i32 %965, 0
  br i1 %cmp2.i, label %if.end.i, label %if.then3.i

if.then3.i:                                       ; preds = %if.then.i
  %conv.i = sext i32 %965 to i64
  %call.i = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv.i) #5
  call void @adjust_stack(%struct.rtx_def* %call.i) #5
  %.pre.i = load %struct.function** @cfun, align 8, !tbaa !1
  %expr6.phi.trans.insert.i = getelementptr inbounds %struct.function* %.pre.i, i64 0, i32 2
  %.pre9.i = load %struct.expr_status** %expr6.phi.trans.insert.i, align 8, !tbaa !6
  br label %if.end.i

if.end.i:                                         ; preds = %if.then3.i, %if.then.i
  %966 = phi %struct.expr_status* [ %963, %if.then.i ], [ %.pre9.i, %if.then3.i ]
  %x_pending_stack_adjust7.i = getelementptr inbounds %struct.expr_status* %966, i64 0, i32 0
  store i32 0, i32* %x_pending_stack_adjust7.i, align 4, !tbaa !13
  br label %do_pending_stack_adjust.exit

do_pending_stack_adjust.exit:                     ; preds = %if.then6008, %if.end.i
  %call6047 = call %struct.rtx_def* @emit_label(%struct.rtx_def* %call6009) #5
  %967 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  br label %return

if.end6048:                                       ; preds = %land.lhs.true5959, %land.lhs.true5997, %land.lhs.true5989, %land.lhs.true5979, %land.lhs.true5973, %land.lhs.true5952, %sw.bb5942
  %lnot.ext6051 = xor i32 %lor.ext84538462, 1
  %call6054 = call %struct.rtx_def* @expand_assignment(%union.tree_node* %945, %union.tree_node* %947, i32 %lnot.ext6051, i32 undef)
  br label %return

sw.bb6055:                                        ; preds = %if.end185
  %operands6057 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx6058 = bitcast i32* %operands6057 to %union.tree_node**
  %968 = load %union.tree_node** %arrayidx6058, align 8, !tbaa !1
  %tobool6059 = icmp eq %union.tree_node* %968, null
  br i1 %tobool6059, label %if.then6060, label %if.else6061

if.then6060:                                      ; preds = %sw.bb6055
  call void @expand_null_return() #5
  br label %if.end6065

if.else6061:                                      ; preds = %sw.bb6055
  call void @expand_return(%union.tree_node* %968) #5
  br label %if.end6065

if.end6065:                                       ; preds = %if.else6061, %if.then6060
  %969 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  br label %return

sw.bb6066:                                        ; preds = %if.end185, %if.end185
  %call6067 = call fastcc %struct.rtx_def* @expand_increment(%union.tree_node* %exp, i32 0, i32 %lor.ext84538462)
  br label %return

sw.bb6068:                                        ; preds = %if.end185, %if.end185
  %lnot.ext6071 = xor i32 %lor.ext84538462, 1
  %call6072 = call fastcc %struct.rtx_def* @expand_increment(%union.tree_node* %exp, i32 %lnot.ext6071, i32 %lor.ext84538462)
  br label %return

sw.bb6073:                                        ; preds = %if.end185
  %operands6075 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx6076 = bitcast i32* %operands6075 to %union.tree_node**
  %970 = load %union.tree_node** %arrayidx6076, align 8, !tbaa !1
  %code6078 = getelementptr inbounds %union.tree_node* %970, i64 0, i32 0, i32 0, i32 2
  %bf.load6079 = load i32* %code6078, align 8
  %bf.clear6080 = and i32 %bf.load6079, 255
  %cmp6081 = icmp eq i32 %bf.clear6080, 30
  br i1 %cmp6081, label %land.lhs.true6083, label %if.else6114

land.lhs.true6083:                                ; preds = %sw.bb6073
  %call6087 = call %union.tree_node* @decl_function_context(%union.tree_node* %970) #5
  %cmp6088 = icmp eq %union.tree_node* %call6087, null
  %.pre8647 = load %union.tree_node** %arrayidx6076, align 8, !tbaa !1
  br i1 %cmp6088, label %if.else6114, label %land.lhs.true6090

land.lhs.true6090:                                ; preds = %land.lhs.true6083
  %regdecl_flag6095 = getelementptr inbounds %union.tree_node* %.pre8647, i64 0, i32 0, i32 5
  %971 = bitcast i48* %regdecl_flag6095 to i64*
  %bf.load6096 = load i64* %971, align 8
  %bf.cast6099 = and i64 %bf.load6096, 1024
  %tobool6100 = icmp eq i64 %bf.cast6099, 0
  br i1 %tobool6100, label %land.lhs.true6101, label %if.else6114

land.lhs.true6101:                                ; preds = %land.lhs.true6090
  %bf.load6104 = load i32* %code4, align 8
  %bf.clear6106 = and i32 %bf.load6104, 262144
  %tobool6107 = icmp eq i32 %bf.clear6106, 0
  br i1 %tobool6107, label %if.then6108, label %if.else6114

if.then6108:                                      ; preds = %land.lhs.true6101
  %call6112 = call %struct.rtx_def* @trampoline_address(%union.tree_node* %.pre8647) #5
  %call6113 = call %struct.rtx_def* @force_operand(%struct.rtx_def* %call6112, %struct.rtx_def* %target.addr.1)
  br label %if.end6319

if.else6114:                                      ; preds = %land.lhs.true6083, %land.lhs.true6101, %land.lhs.true6090, %sw.bb6073
  %972 = phi %union.tree_node* [ %.pre8647, %land.lhs.true6101 ], [ %.pre8647, %land.lhs.true6090 ], [ %970, %sw.bb6073 ], [ %.pre8647, %land.lhs.true6083 ]
  %code6119 = getelementptr inbounds %union.tree_node* %972, i64 0, i32 0, i32 0, i32 2
  %bf.load6120 = load i32* %code6119, align 8
  %bf.clear6121 = and i32 %bf.load6120, 255
  %cmp6122 = icmp eq i32 %bf.clear6121, 0
  br i1 %cmp6122, label %if.then6124, label %if.else6125

if.then6124:                                      ; preds = %if.else6114
  %973 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  br label %return

if.else6125:                                      ; preds = %if.else6114
  %974 = load %struct.function** @cfun, align 8, !tbaa !1
  %cmp6126 = icmp eq %struct.function* %974, null
  br i1 %cmp6126, label %land.lhs.true6128, label %if.else6159

land.lhs.true6128:                                ; preds = %if.else6125
  %cmp6136 = icmp eq i32 %bf.clear6121, 46
  br i1 %cmp6136, label %if.then6151, label %lor.lhs.false6138

lor.lhs.false6138:                                ; preds = %land.lhs.true6128
  %idxprom61468239 = zext i32 %bf.clear6121 to i64
  %arrayidx6147 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom61468239
  %975 = load i8* %arrayidx6147, align 1, !tbaa !5
  %cmp6149 = icmp eq i8 %975, 99
  br i1 %cmp6149, label %if.then6151, label %if.else6159

if.then6151:                                      ; preds = %lor.lhs.false6138, %land.lhs.true6128
  %call6155 = call %struct.rtx_def* @output_constant_def(%union.tree_node* %972, i32 0) #5
  %arrayidx6157 = getelementptr inbounds %struct.rtx_def* %call6155, i64 0, i32 1, i64 0
  %rtx6158 = bitcast %union.rtunion_def* %arrayidx6157 to %struct.rtx_def**
  %976 = load %struct.rtx_def** %rtx6158, align 8, !tbaa !1
  br label %if.end6319

if.else6159:                                      ; preds = %lor.lhs.false6138, %if.else6125
  %977 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %cond6167 = select i1 %36, %struct.rtx_def* %977, %struct.rtx_def* null
  %cmp6168 = icmp eq i32 %modifier, 3
  %cond6173 = select i1 %cmp6168, i32 3, i32 2
  %call6174 = call %struct.rtx_def* @expand_expr(%union.tree_node* %972, %struct.rtx_def* %cond6167, i32 0, i32 %cond6173)
  br i1 %36, label %return, label %if.end6177

if.end6177:                                       ; preds = %if.else6159
  %call6178 = call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %call6174, i32 1)
  %978 = getelementptr inbounds %struct.rtx_def* %call6178, i64 0, i32 0
  %bf.load6179 = load i32* %978, align 8
  %bf.clear6180 = and i32 %bf.load6179, 65535
  switch i32 %bf.clear6180, label %if.end6296 [
    i32 67, label %if.then6218
    i32 68, label %if.then6218
    i32 54, label %if.then6218
    i32 55, label %if.then6218
    i32 58, label %if.then6218
    i32 134, label %if.then6218
    i32 56, label %if.then6218
    i32 140, label %if.then6218
    i32 61, label %if.then6255
    i32 63, label %if.then6255
    i32 65, label %if.then6255
    i32 70, label %if.then6255
    i32 39, label %if.then6255
  ]

if.then6218:                                      ; preds = %if.end6177, %if.end6177, %if.end6177, %if.end6177, %if.end6177, %if.end6177, %if.end6177, %if.end6177
  %979 = load %union.tree_node** %arrayidx6076, align 8, !tbaa !1
  %type6223 = getelementptr inbounds %union.tree_node* %979, i64 0, i32 0, i32 0, i32 1
  %980 = load %union.tree_node** %type6223, align 8, !tbaa !36
  %type6224 = bitcast %union.tree_node* %980 to %struct.tree_type*
  %mode6225 = getelementptr inbounds %struct.tree_type* %type6224, i64 0, i32 6
  %bf.load6226 = load i32* %mode6225, align 4
  %bf.lshr6227 = lshr i32 %bf.load6226, 9
  %bf.clear6228 = and i32 %bf.lshr6227, 127
  %call6229 = call %struct.rtx_def* @force_const_mem(i32 %bf.clear6228, %struct.rtx_def* %call6178) #5
  br label %if.end6296

if.then6255:                                      ; preds = %if.end6177, %if.end6177, %if.end6177, %if.end6177, %if.end6177
  %981 = load %union.tree_node** %arrayidx6076, align 8, !tbaa !1
  %code6260 = getelementptr inbounds %union.tree_node* %981, i64 0, i32 0, i32 0, i32 2
  %bf.load6261 = load i32* %code6260, align 8
  %bf.clear6262 = and i32 %bf.load6261, 255
  %cmp6263 = icmp eq i32 %bf.clear6262, 118
  br i1 %cmp6263, label %if.then6265, label %if.else6275

if.then6265:                                      ; preds = %if.then6255
  call void @put_var_into_stack(%union.tree_node* %981) #5
  %982 = load %union.tree_node** %arrayidx6076, align 8, !tbaa !1
  %operands6273 = getelementptr inbounds %union.tree_node* %982, i64 0, i32 0, i32 2
  %arrayidx6274 = getelementptr inbounds i32* %operands6273, i64 4
  %983 = bitcast i32* %arrayidx6274 to %struct.rtx_def**
  %984 = load %struct.rtx_def** %983, align 8, !tbaa !1
  br label %if.end6296

if.else6275:                                      ; preds = %if.then6255
  %type6281 = getelementptr inbounds %union.tree_node* %981, i64 0, i32 0, i32 0, i32 1
  %985 = load %union.tree_node** %type6281, align 8, !tbaa !36
  %call6283 = call %struct.rtx_def* @assign_temp(%union.tree_node* %985, i32 1, i32 1, i32 1) #5
  %bf.load6284 = load i32* %978, align 8
  %bf.clear6285 = and i32 %bf.load6284, 65535
  %cmp6286 = icmp eq i32 %bf.clear6285, 39
  br i1 %cmp6286, label %if.then6288, label %if.else6291

if.then6288:                                      ; preds = %if.else6275
  %call6289 = call i64 @int_size_in_bytes(%union.tree_node* %985) #5
  %conv6290 = trunc i64 %call6289 to i32
  call void @emit_group_store(%struct.rtx_def* %call6283, %struct.rtx_def* %call6178, i32 %conv6290)
  br label %if.end6296

if.else6291:                                      ; preds = %if.else6275
  %call6292 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call6283, %struct.rtx_def* %call6178)
  br label %if.end6296

if.end6296:                                       ; preds = %if.then6288, %if.else6291, %if.end6177, %if.then6265, %if.then6218
  %op0.22 = phi %struct.rtx_def* [ %call6229, %if.then6218 ], [ %984, %if.then6265 ], [ %call6178, %if.end6177 ], [ %call6283, %if.else6291 ], [ %call6283, %if.then6288 ]
  %986 = getelementptr inbounds %struct.rtx_def* %op0.22, i64 0, i32 0
  %bf.load6297 = load i32* %986, align 8
  %bf.clear6298 = and i32 %bf.load6297, 65535
  %cmp6299 = icmp eq i32 %bf.clear6298, 66
  br i1 %cmp6299, label %if.end6302, label %if.then6301

if.then6301:                                      ; preds = %if.end6296
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 8635, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.expand_expr, i64 0, i64 0)) #8
  unreachable

if.end6302:                                       ; preds = %if.end6296
  call void @mark_temp_addr_taken(%struct.rtx_def* %op0.22) #5
  %987 = and i32 %modifier, -3
  %988 = icmp eq i32 %987, 1
  %arrayidx6310 = getelementptr inbounds %struct.rtx_def* %op0.22, i64 0, i32 1, i64 0
  %rtx6311 = bitcast %union.rtunion_def* %arrayidx6310 to %struct.rtx_def**
  %989 = load %struct.rtx_def** %rtx6311, align 8, !tbaa !1
  br i1 %988, label %return, label %if.end6312

if.end6312:                                       ; preds = %if.end6302
  %call6316 = call %struct.rtx_def* @force_operand(%struct.rtx_def* %989, %struct.rtx_def* %target.addr.1)
  br label %if.end6319

if.end6319:                                       ; preds = %if.end6312, %if.then6151, %if.then6108
  %op0.23 = phi %struct.rtx_def* [ %976, %if.then6151 ], [ %call6316, %if.end6312 ], [ %call6113, %if.then6108 ]
  %990 = load i32* @flag_force_addr, align 4, !tbaa !21
  %tobool6320 = icmp eq i32 %990, 0
  br i1 %tobool6320, label %if.end6340, label %land.lhs.true6321

land.lhs.true6321:                                ; preds = %if.end6319
  %991 = getelementptr inbounds %struct.rtx_def* %op0.23, i64 0, i32 0
  %bf.load6322 = load i32* %991, align 8
  %bf.clear6323 = and i32 %bf.load6322, 65535
  %cmp6324 = icmp ne i32 %bf.clear6323, 61
  %cmp6327 = icmp ne i32 %modifier, 2
  %or.cond6604 = and i1 %cmp6324, %cmp6327
  %cmp6330 = icmp ne i32 %modifier, 3
  %or.cond6605 = and i1 %or.cond6604, %cmp6330
  %cmp6333 = icmp ne i32 %modifier, 1
  %or.cond6606 = and i1 %or.cond6605, %cmp6333
  br i1 %or.cond6606, label %if.then6335, label %if.end6340

if.then6335:                                      ; preds = %land.lhs.true6321
  %992 = load i32* @target_flags, align 4, !tbaa !21
  %and6336 = lshr i32 %992, 25
  %993 = and i32 %and6336, 1
  %994 = or i32 %993, 4
  %call6339 = call %struct.rtx_def* @force_reg(i32 %994, %struct.rtx_def* %op0.23) #5
  br label %if.end6340

if.end6340:                                       ; preds = %if.end6319, %if.then6335, %land.lhs.true6321
  %op0.24 = phi %struct.rtx_def* [ %call6339, %if.then6335 ], [ %op0.23, %land.lhs.true6321 ], [ %op0.23, %if.end6319 ]
  %995 = getelementptr inbounds %struct.rtx_def* %op0.24, i64 0, i32 0
  %bf.load6341 = load i32* %995, align 8
  %996 = and i32 %bf.load6341, 134283263
  %997 = icmp eq i32 %996, 61
  br i1 %997, label %if.then6350, label %return

if.then6350:                                      ; preds = %if.end6340
  %type6352 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 1
  %998 = load %union.tree_node** %type6352, align 8, !tbaa !36
  %align6354 = getelementptr inbounds %union.tree_node* %998, i64 0, i32 0, i32 7
  %999 = bitcast %union.tree_node** %align6354 to i32*
  %1000 = load i32* %999, align 4, !tbaa !62
  call void @mark_reg_pointer(%struct.rtx_def* %op0.24, i32 %1000) #5
  br label %return

sw.bb6356:                                        ; preds = %if.end185
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 8704, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.expand_expr, i64 0, i64 0)) #8
  unreachable

sw.bb6357:                                        ; preds = %if.end185
  %1001 = load %union.tree_node** %type1, align 8, !tbaa !36
  %type6362 = getelementptr inbounds %union.tree_node* %1001, i64 0, i32 0, i32 0, i32 1
  %1002 = load %union.tree_node** %type6362, align 8, !tbaa !36
  %type6363 = bitcast %union.tree_node* %1002 to %struct.tree_type*
  %mode6364 = getelementptr inbounds %struct.tree_type* %type6363, i64 0, i32 6
  %bf.load6365 = load i32* %mode6364, align 4
  %bf.lshr6366 = lshr i32 %bf.load6365, 9
  %bf.clear6367 = and i32 %bf.lshr6366, 127
  %operands6369 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx6370 = bitcast i32* %operands6369 to %union.tree_node**
  %1003 = load %union.tree_node** %arrayidx6370, align 8, !tbaa !1
  %call6371 = call %struct.rtx_def* @expand_expr(%union.tree_node* %1003, %struct.rtx_def* null, i32 0, i32 0)
  %arrayidx6374 = getelementptr inbounds i32* %operands6369, i64 2
  %1004 = bitcast i32* %arrayidx6374 to %union.tree_node**
  %1005 = load %union.tree_node** %1004, align 8, !tbaa !1
  %call6375 = call %struct.rtx_def* @expand_expr(%union.tree_node* %1005, %struct.rtx_def* null, i32 0, i32 0)
  %tobool6376 = icmp eq %struct.rtx_def* %target.addr.1, null
  br i1 %tobool6376, label %if.then6377, label %if.end6386

if.then6377:                                      ; preds = %sw.bb6357
  %1006 = load %union.tree_node** %type1, align 8, !tbaa !36
  %type6380 = bitcast %union.tree_node* %1006 to %struct.tree_type*
  %mode6381 = getelementptr inbounds %struct.tree_type* %type6380, i64 0, i32 6
  %bf.load6382 = load i32* %mode6381, align 4
  %bf.lshr6383 = lshr i32 %bf.load6382, 9
  %bf.clear6384 = and i32 %bf.lshr6383, 127
  %call6385 = call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear6384) #5
  br label %if.end6386

if.end6386:                                       ; preds = %sw.bb6357, %if.then6377
  %target.addr.17 = phi %struct.rtx_def* [ %target.addr.1, %sw.bb6357 ], [ %call6385, %if.then6377 ]
  call void @start_sequence() #5
  %call6387 = call %struct.rtx_def* @gen_realpart(i32 %bf.clear6367, %struct.rtx_def* %target.addr.17) #5
  %call6388 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call6387, %struct.rtx_def* %call6371)
  %call6389 = call %struct.rtx_def* @gen_imagpart(i32 %bf.clear6367, %struct.rtx_def* %target.addr.17) #5
  %call6390 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call6389, %struct.rtx_def* %call6375)
  %call6391 = call %struct.rtx_def* @get_insns() #5
  call void @end_sequence() #5
  %1007 = getelementptr inbounds %struct.rtx_def* %target.addr.17, i64 0, i32 0
  %bf.load6392 = load i32* %1007, align 8
  %bf.clear6393 = and i32 %bf.load6392, 65535
  %cmp6394 = icmp eq i32 %bf.clear6393, 65
  br i1 %cmp6394, label %if.else6398, label %if.then6396

if.then6396:                                      ; preds = %if.end6386
  %call6397 = call %struct.rtx_def* @emit_no_conflict_block(%struct.rtx_def* %call6391, %struct.rtx_def* %target.addr.17, %struct.rtx_def* %call6371, %struct.rtx_def* %call6375, %struct.rtx_def* null) #5
  br label %return

if.else6398:                                      ; preds = %if.end6386
  %call6399 = call %struct.rtx_def* @emit_insns(%struct.rtx_def* %call6391) #5
  br label %return

sw.bb6401:                                        ; preds = %if.end185
  %operands6403 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx6404 = bitcast i32* %operands6403 to %union.tree_node**
  %1008 = load %union.tree_node** %arrayidx6404, align 8, !tbaa !1
  %call6405 = call %struct.rtx_def* @expand_expr(%union.tree_node* %1008, %struct.rtx_def* null, i32 0, i32 0)
  %call6406 = call %struct.rtx_def* @gen_realpart(i32 %bf.clear23, %struct.rtx_def* %call6405) #5
  br label %return

sw.bb6407:                                        ; preds = %if.end185
  %operands6409 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx6410 = bitcast i32* %operands6409 to %union.tree_node**
  %1009 = load %union.tree_node** %arrayidx6410, align 8, !tbaa !1
  %call6411 = call %struct.rtx_def* @expand_expr(%union.tree_node* %1009, %struct.rtx_def* null, i32 0, i32 0)
  %call6412 = call %struct.rtx_def* @gen_imagpart(i32 %bf.clear23, %struct.rtx_def* %call6411) #5
  br label %return

sw.bb6413:                                        ; preds = %if.end185
  %1010 = load %union.tree_node** %type1, align 8, !tbaa !36
  %type6417 = getelementptr inbounds %union.tree_node* %1010, i64 0, i32 0, i32 0, i32 1
  %1011 = load %union.tree_node** %type6417, align 8, !tbaa !36
  %type6418 = bitcast %union.tree_node* %1011 to %struct.tree_type*
  %mode6419 = getelementptr inbounds %struct.tree_type* %type6418, i64 0, i32 6
  %bf.load6420 = load i32* %mode6419, align 4
  %bf.lshr6421 = lshr i32 %bf.load6420, 9
  %bf.clear6422 = and i32 %bf.lshr6421, 127
  %operands6425 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx6426 = bitcast i32* %operands6425 to %union.tree_node**
  %1012 = load %union.tree_node** %arrayidx6426, align 8, !tbaa !1
  %call6427 = call %struct.rtx_def* @expand_expr(%union.tree_node* %1012, %struct.rtx_def* null, i32 0, i32 0)
  %tobool6428 = icmp eq %struct.rtx_def* %target.addr.1, null
  br i1 %tobool6428, label %if.then6429, label %if.end6431

if.then6429:                                      ; preds = %sw.bb6413
  %call6430 = call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear23) #5
  br label %if.end6431

if.end6431:                                       ; preds = %sw.bb6413, %if.then6429
  %target.addr.18 = phi %struct.rtx_def* [ %target.addr.1, %sw.bb6413 ], [ %call6430, %if.then6429 ]
  call void @start_sequence() #5
  %call6432 = call %struct.rtx_def* @gen_realpart(i32 %bf.clear6422, %struct.rtx_def* %target.addr.18) #5
  %call6433 = call %struct.rtx_def* @gen_realpart(i32 %bf.clear6422, %struct.rtx_def* %call6427) #5
  %call6434 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call6432, %struct.rtx_def* %call6433)
  %call6435 = call %struct.rtx_def* @gen_imagpart(i32 %bf.clear6422, %struct.rtx_def* %target.addr.18) #5
  %1013 = load i32* %unsignedp, align 4, !tbaa !21
  %tobool6436 = icmp eq i32 %1013, 0
  %1014 = load i32* @flag_trapv, align 4
  %tobool6438 = icmp ne i32 %1014, 0
  %or.cond6607 = and i1 %tobool6436, %tobool6438
  br i1 %or.cond6607, label %land.lhs.true6439, label %cond.false6445

land.lhs.true6439:                                ; preds = %if.end6431
  %idxprom64408238 = zext i32 %bf.clear6422 to i64
  %arrayidx6441 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom64408238
  %1015 = load i32* %arrayidx6441, align 4, !tbaa !5
  %cmp6442 = icmp eq i32 %1015, 1
  br i1 %cmp6442, label %cond.end6446, label %cond.false6445

cond.false6445:                                   ; preds = %if.end6431, %land.lhs.true6439
  br label %cond.end6446

cond.end6446:                                     ; preds = %land.lhs.true6439, %cond.false6445
  %cond6447.in = phi %struct.optab** [ getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 32), %cond.false6445 ], [ getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 33), %land.lhs.true6439 ]
  %cond6447 = load %struct.optab** %cond6447.in, align 8
  %call6448 = call %struct.rtx_def* @gen_imagpart(i32 %bf.clear6422, %struct.rtx_def* %call6427) #5
  %call6449 = call %struct.rtx_def* @expand_unop(i32 %bf.clear6422, %struct.optab* %cond6447, %struct.rtx_def* %call6448, %struct.rtx_def* %call6435, i32 0) #5
  %cmp6450 = icmp eq %struct.rtx_def* %call6449, %call6435
  br i1 %cmp6450, label %if.end6454, label %if.then6452

if.then6452:                                      ; preds = %cond.end6446
  %call6453 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call6435, %struct.rtx_def* %call6449)
  br label %if.end6454

if.end6454:                                       ; preds = %cond.end6446, %if.then6452
  %call6455 = call %struct.rtx_def* @get_insns() #5
  call void @end_sequence() #5
  %1016 = getelementptr inbounds %struct.rtx_def* %target.addr.18, i64 0, i32 0
  %bf.load6456 = load i32* %1016, align 8
  %bf.clear6457 = and i32 %bf.load6456, 65535
  %cmp6458 = icmp eq i32 %bf.clear6457, 65
  br i1 %cmp6458, label %if.else6462, label %if.then6460

if.then6460:                                      ; preds = %if.end6454
  %call6461 = call %struct.rtx_def* @emit_no_conflict_block(%struct.rtx_def* %call6455, %struct.rtx_def* %target.addr.18, %struct.rtx_def* %call6427, %struct.rtx_def* null, %struct.rtx_def* null) #5
  br label %return

if.else6462:                                      ; preds = %if.end6454
  %call6463 = call %struct.rtx_def* @emit_insns(%struct.rtx_def* %call6455) #5
  br label %return

sw.bb6465:                                        ; preds = %if.end185
  %operands6467 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx6468 = getelementptr inbounds i32* %operands6467, i64 2
  %1017 = bitcast i32* %arrayidx6468 to %union.tree_node**
  %1018 = load %union.tree_node** %1017, align 8, !tbaa !1
  call void @expand_eh_region_start() #5
  %arrayidx6471 = bitcast i32* %operands6467 to %union.tree_node**
  %1019 = load %union.tree_node** %arrayidx6471, align 8, !tbaa !1
  %call6472 = call %struct.rtx_def* @expand_expr(%union.tree_node* %1019, %struct.rtx_def* null, i32 0, i32 0)
  call void @expand_eh_region_end_cleanup(%union.tree_node* %1018) #5
  br label %return

sw.bb6473:                                        ; preds = %if.end185
  %operands6475 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx6476 = bitcast i32* %operands6475 to %union.tree_node**
  %1020 = load %union.tree_node** %arrayidx6476, align 8, !tbaa !1
  %arrayidx6479 = getelementptr inbounds i32* %operands6475, i64 2
  %1021 = bitcast i32* %arrayidx6479 to %union.tree_node**
  %1022 = load %union.tree_node** %1021, align 8, !tbaa !1
  %call6480 = call %struct.rtx_def* @gen_label_rtx() #5
  %call6481 = call %struct.rtx_def* @gen_label_rtx() #5
  %1023 = load i32* @target_flags, align 4, !tbaa !21
  %and6482 = lshr i32 %1023, 25
  %1024 = and i32 %and6482, 1
  %1025 = or i32 %1024, 4
  %call6485 = call %struct.rtx_def* @gen_reg_rtx(i32 %1025) #5
  %1026 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 27), align 8, !tbaa !1
  %call6486 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 136, %union.tree_node* %1026, %struct.rtx_def* %call6480, %struct.rtx_def* %call6485) #5
  %side_effects_flag6488 = getelementptr inbounds %union.tree_node* %call6486, i64 0, i32 0, i32 0, i32 2
  %bf.load6489 = load i32* %side_effects_flag6488, align 8
  %bf.set6491 = or i32 %bf.load6489, 256
  store i32 %bf.set6491, i32* %side_effects_flag6488, align 8
  call void @expand_start_bindings_and_block(i32 2, %union.tree_node* null) #5
  %1027 = load %struct.function** @cfun, align 8, !tbaa !1
  %x_temp_slot_level6492 = getelementptr inbounds %struct.function* %1027, i64 0, i32 40
  %1028 = load i32* %x_temp_slot_level6492, align 4, !tbaa !60
  %x_target_temp_slot_level6493 = getelementptr inbounds %struct.function* %1027, i64 0, i32 42
  store i32 %1028, i32* %x_target_temp_slot_level6493, align 4, !tbaa !61
  %call6494 = call i32 @expand_decl_cleanup(%union.tree_node* null, %union.tree_node* %call6486) #5
  %call6495 = call %struct.rtx_def* @expand_expr(%union.tree_node* %1020, %struct.rtx_def* %target.addr.1, i32 %tmode, i32 %modifier)
  call void @preserve_temp_slots(%struct.rtx_def* %call6495) #5
  call void @expand_end_bindings(%union.tree_node* null, i32 0, i32 0) #5
  call void @emit_jump(%struct.rtx_def* %call6481) #5
  %call6496 = call %struct.rtx_def* @emit_label(%struct.rtx_def* %call6480) #5
  %1029 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call6497 = call %struct.rtx_def* @expand_expr(%union.tree_node* %1022, %struct.rtx_def* %1029, i32 0, i32 0)
  call void @emit_indirect_jump(%struct.rtx_def* %call6485) #5
  %call6498 = call %struct.rtx_def* @emit_label(%struct.rtx_def* %call6481) #5
  br label %return

sw.bb6499:                                        ; preds = %if.end185
  %operands6501 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx6502 = bitcast i32* %operands6501 to %union.tree_node**
  %1030 = load %union.tree_node** %arrayidx6502, align 8, !tbaa !1
  %1031 = bitcast %union.tree_node* %1030 to %struct.rtx_def*
  %arrayidx6506 = getelementptr inbounds i32* %operands6501, i64 2
  %1032 = bitcast i32* %arrayidx6506 to %struct.rtx_def**
  %1033 = load %struct.rtx_def** %1032, align 8, !tbaa !1
  %call6507 = call %struct.rtx_def* @gen_label_rtx() #5
  %1034 = load i32* @target_flags, align 4, !tbaa !21
  %and6508 = lshr i32 %1034, 25
  %1035 = and i32 %and6508, 1
  %1036 = or i32 %1035, 4
  %call6511 = call %struct.rtx_def* @gen_rtx_fmt_u00(i32 67, i32 %1036, %struct.rtx_def* %call6507) #5
  %call6512 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %1033, %struct.rtx_def* %call6511)
  call void @emit_jump(%struct.rtx_def* %1031) #5
  %call6513 = call %struct.rtx_def* @emit_label(%struct.rtx_def* %call6507) #5
  %1037 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  br label %return

sw.bb6514:                                        ; preds = %if.end185
  %operands6516 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx6517 = bitcast i32* %operands6516 to %union.tree_node**
  %1038 = load %union.tree_node** %arrayidx6517, align 8, !tbaa !1
  %call6518 = call %struct.rtx_def* @expand_builtin_va_arg(%union.tree_node* %1038, %union.tree_node* %0) #5
  br label %return

sw.bb6519:                                        ; preds = %if.end185
  %1039 = load %struct.function** @cfun, align 8, !tbaa !1
  %call6520 = call %struct.rtx_def* @get_exception_pointer(%struct.function* %1039) #5
  br label %return

sw.bb6521:                                        ; preds = %if.end185
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 8853, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.expand_expr, i64 0, i64 0)) #8
  unreachable

sw.default:                                       ; preds = %if.end185
  %1040 = load %struct.rtx_def* (%union.tree_node*, %struct.rtx_def*, i32, i32)** @lang_expand_expr, align 8, !tbaa !1
  %call6522 = call %struct.rtx_def* %1040(%union.tree_node* %exp, %struct.rtx_def* %target, i32 %tmode, i32 %modifier) #5
  br label %return

binop:                                            ; preds = %if.end3684, %lor.lhs.false3690, %sw.bb4722, %sw.bb4721, %sw.bb4720, %if.end4453, %cond.end4029
  %this_optab.0 = phi %struct.optab* [ %703, %sw.bb4722 ], [ %702, %sw.bb4721 ], [ %701, %sw.bb4720 ], [ %658, %if.end4453 ], [ %cond4030, %cond.end4029 ], [ %cond3414, %if.end3684 ], [ %cond3414, %lor.lhs.false3690 ]
  %exp.addr.1 = phi %union.tree_node* [ %exp, %sw.bb4722 ], [ %exp, %sw.bb4721 ], [ %exp, %sw.bb4720 ], [ %exp, %if.end4453 ], [ %exp, %cond.end4029 ], [ %exp.addr.0, %if.end3684 ], [ %exp.addr.0, %lor.lhs.false3690 ]
  %operands6524 = getelementptr inbounds %union.tree_node* %exp.addr.1, i64 0, i32 0, i32 2
  %arrayidx6525 = getelementptr inbounds i32* %operands6524, i64 2
  %1041 = bitcast i32* %arrayidx6525 to %union.tree_node**
  %1042 = load %union.tree_node** %1041, align 8, !tbaa !1
  %call6526 = call i32 @safe_from_p(%struct.rtx_def* %call8451, %union.tree_node* %1042, i32 1)
  %tobool6527 = icmp eq i32 %call6526, 0
  %.call8309 = select i1 %tobool6527, %struct.rtx_def* null, %struct.rtx_def* %call8451
  %arrayidx6532 = bitcast i32* %operands6524 to %union.tree_node**
  %1043 = load %union.tree_node** %arrayidx6532, align 8, !tbaa !1
  %call6533 = call %struct.rtx_def* @expand_expr(%union.tree_node* %1043, %struct.rtx_def* %.call8309, i32 0, i32 0)
  %1044 = load %union.tree_node** %1041, align 8, !tbaa !1
  %call6537 = call %struct.rtx_def* @expand_expr(%union.tree_node* %1044, %struct.rtx_def* null, i32 0, i32 0)
  br label %binop2

binop2:                                           ; preds = %if.then3640, %if.then4331, %if.else4336, %binop
  %this_optab.1 = phi %struct.optab* [ %this_optab.0, %binop ], [ %cond4303, %if.then4331 ], [ %cond4303, %if.else4336 ], [ %cond3414, %if.then3640 ]
  %op1.7 = phi %struct.rtx_def* [ %call6537, %binop ], [ %call4335, %if.then4331 ], [ %call4343, %if.else4336 ], [ %call3644, %if.then3640 ]
  %op0.25 = phi %struct.rtx_def* [ %call6533, %binop ], [ %call4321, %if.then4331 ], [ %call4321, %if.else4336 ], [ %call3600, %if.then3640 ]
  %1045 = load i32* %unsignedp, align 4, !tbaa !21
  %call6538 = call %struct.rtx_def* @expand_binop(i32 %bf.clear23, %struct.optab* %this_optab.1, %struct.rtx_def* %op0.25, %struct.rtx_def* %op1.7, %struct.rtx_def* %target.addr.1, i32 %1045, i32 3) #5
  %cmp6539 = icmp eq %struct.rtx_def* %call6538, null
  br i1 %cmp6539, label %if.then6541, label %return

if.then6541:                                      ; preds = %binop2
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 8870, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.expand_expr, i64 0, i64 0)) #8
  unreachable

return:                                           ; preds = %for.body, %sw.bb2880, %sw.bb2788, %if.then2794, %if.then1286, %if.end1092, %land.lhs.true1100, %if.then41, %if.then1347.thread, %if.then1347, %binop2, %if.then6460, %if.else6462, %if.then6396, %if.else6398, %if.end6340, %if.then6350, %if.end6302, %if.else6159, %cond.end5897, %cond.end5846, %if.end5053, %sw.bb4872, %if.then4797, %if.else4799, %sw.bb4739, %sw.bb4710, %sw.bb4700, %cond.end4639, %if.end4558, %cond.end4535, %cond.false3937, %if.end3933, %if.then3679, %if.end3652, %if.end3652, %if.then3563, %if.then3532, %if.then3532, %if.end3244, %if.end3394, %if.end3021, %land.lhs.true3012, %if.then3017, %if.then2995, %if.then2927, %cond.end2968, %if.end2500, %if.end2396, %if.then2441, %lor.lhs.false2222, %if.else1901, %if.then1898, %if.then1858, %if.end1473, %if.then1482, %land.lhs.true1479, %if.then1357, %sw.bb853, %if.then867, %cond.false848, %if.end841, %if.then730, %land.lhs.true735, %if.then743, %land.lhs.true221, %if.then227, %if.end212, %sw.default, %sw.bb6519, %sw.bb6514, %sw.bb6499, %sw.bb6473, %sw.bb6465, %sw.bb6407, %sw.bb6401, %if.then6124, %sw.bb6068, %sw.bb6066, %if.end6065, %if.end6048, %do_pending_stack_adjust.exit, %sw.bb5930, %if.end5918, %emit_queue.exit, %if.then5447, %if.end5069, %if.then5048, %if.then5011, %emit_queue.exit8404, %if.end4865, %if.end4821, %sw.bb4723, %if.end4697, %if.end4566, %if.then4556, %if.end4509, %if.end4481, %sw.bb4454, %if.then4442, %sw.bb4406, %if.end4396, %if.end4386, %if.end4084, %if.else3980, %if.then3974, %if.else3117, %if.then3105, %if.then3098, %if.else3088, %if.then3085, %if.then2910, %if.end2878, %if.else2876, %if.then2874, %if.end2821, %if.end2784, %if.then2703, %cond.end2592, %if.end2537, %if.end2360, %if.then1769, %if.then1727, %if.then1634, %if.then1561, %if.then1464, %if.end1420, %if.end1277, %while.end, %sw.bb1212, %if.end1205, %do_pending_stack_adjust.exit8446, %sw.bb1178, %if.end1177, %sw.bb1148, %if.end1145, %sw.bb1127, %if.then1109, %if.end987, %if.end941, %if.end926, %if.then916, %sw.bb873, %sw.bb870, %cond.end830, %if.then242, %if.then141, %if.then133, %if.then108, %if.then87, %if.end72
  %retval.0 = phi %struct.rtx_def* [ %9, %if.end72 ], [ %call90, %if.then87 ], [ %16, %if.then108 ], [ %28, %if.then141 ], [ %call6522, %sw.default ], [ %call6520, %sw.bb6519 ], [ %call6518, %sw.bb6514 ], [ %1037, %sw.bb6499 ], [ %call6495, %sw.bb6473 ], [ %call6472, %sw.bb6465 ], [ %call6412, %sw.bb6407 ], [ %call6406, %sw.bb6401 ], [ %973, %if.then6124 ], [ %call6072, %sw.bb6068 ], [ %call6067, %sw.bb6066 ], [ %969, %if.end6065 ], [ %967, %do_pending_stack_adjust.exit ], [ %call6054, %if.end6048 ], [ %call5941, %sw.bb5930 ], [ %target.addr.16, %if.end5918 ], [ %call5019, %if.then5011 ], [ %773, %if.then5048 ], [ %target.addr.14, %if.end5069 ], [ %call5449, %if.then5447 ], [ %temp.11, %emit_queue.exit ], [ %call4895, %emit_queue.exit8404 ], [ %cond4871, %if.end4865 ], [ %temp.5, %if.end4821 ], [ %call4738, %sw.bb4723 ], [ %target.addr.12, %if.end4697 ], [ %call4557, %if.then4556 ], [ %call4571, %if.end4566 ], [ %target.addr.10, %if.end4509 ], [ %target.addr.9, %if.end4481 ], [ %call4470, %sw.bb4454 ], [ %call4452, %if.then4442 ], [ %call4422, %sw.bb4406 ], [ %call4090, %if.end4084 ], [ %call4387, %if.end4386 ], [ %call4405, %if.end4396 ], [ %call3979, %if.then3974 ], [ %call3981, %if.else3980 ], [ %call2916, %if.then2910 ], [ %call3087, %if.then3085 ], [ %call3094, %if.else3088 ], [ %call3101, %if.then3098 ], [ %call.i8405, %if.then3105 ], [ %target.addr.1, %if.else3117 ], [ %call2875, %if.then2874 ], [ %call2877, %if.else2876 ], [ %call2879, %if.end2878 ], [ %op0.10, %if.end2821 ], [ %458, %if.then2703 ], [ %target.addr.6, %if.end2784 ], [ %target.addr.5, %cond.end2592 ], [ %target.addr.3, %if.end2360 ], [ %target.addr.4, %if.end2537 ], [ %call1570, %if.then1561 ], [ %call1731, %if.then1727 ], [ %call1778, %if.then1769 ], [ %call1638, %if.then1634 ], [ %call1472, %if.then1464 ], [ %target.addr.2, %if.end1420 ], [ %247, %if.end1277 ], [ %call1253, %while.end ], [ %233, %sw.bb1212 ], [ %231, %if.end1205 ], [ %226, %do_pending_stack_adjust.exit8446 ], [ %217, %sw.bb1178 ], [ %215, %if.end1177 ], [ %call1156, %sw.bb1148 ], [ %call1147, %if.end1145 ], [ %call1132, %sw.bb1127 ], [ %call992, %if.end987 ], [ %call1114, %if.then1109 ], [ %call945, %if.end941 ], [ %call925, %if.then916 ], [ %162, %if.end926 ], [ %call874, %sw.bb873 ], [ %call872, %sw.bb870 ], [ %call832, %cond.end830 ], [ %56, %if.then242 ], [ %call137, %if.then133 ], [ %call218, %if.end212 ], [ %call218, %if.then227 ], [ %call218, %land.lhs.true221 ], [ %temp.0, %if.then743 ], [ %temp.0, %land.lhs.true735 ], [ %temp.0, %if.then730 ], [ %146, %cond.false848 ], [ %145, %if.end841 ], [ %call868, %if.then867 ], [ %call857, %sw.bb853 ], [ %call1358, %if.then1357 ], [ %call1348, %if.then1347 ], [ %call1476, %land.lhs.true1479 ], [ %call1476, %if.then1482 ], [ %call1476, %if.end1473 ], [ %call1900, %if.then1898 ], [ %call1908, %if.else1901 ], [ %call1861, %if.then1858 ], [ %op0.6, %lor.lhs.false2222 ], [ %call2446, %if.then2441 ], [ %call2400, %if.end2396 ], [ %op0.9, %if.end2500 ], [ %target.addr.7, %cond.end2968 ], [ %target.addr.7, %if.then2927 ], [ %call2999, %if.then2995 ], [ %call2999, %if.then3017 ], [ %call2999, %land.lhs.true3012 ], [ %call3025, %if.end3021 ], [ %call3400, %if.end3394 ], [ %op0.11, %if.end3244 ], [ %call3564, %if.then3563 ], [ %call3557, %if.then3532 ], [ %call3557, %if.then3532 ], [ %call3680, %if.then3679 ], [ %call3673, %if.end3652 ], [ %call3673, %if.end3652 ], [ %call3938, %cond.false3937 ], [ %call3934, %if.end3933 ], [ %call4537, %cond.end4535 ], [ %call4546, %if.end4558 ], [ %call4641, %cond.end4639 ], [ %call4705, %sw.bb4700 ], [ %call4715, %sw.bb4710 ], [ %call4746, %sw.bb4739 ], [ %target.addr.1, %if.else4799 ], [ %target.addr.1, %if.then4797 ], [ %call4877, %sw.bb4872 ], [ %call5057, %if.end5053 ], [ %932, %cond.end5846 ], [ %932, %cond.end5897 ], [ %call6174, %if.else6159 ], [ %989, %if.end6302 ], [ %op0.24, %if.then6350 ], [ %op0.24, %if.end6340 ], [ %target.addr.17, %if.else6398 ], [ %target.addr.17, %if.then6396 ], [ %target.addr.18, %if.else6462 ], [ %target.addr.18, %if.then6460 ], [ %call6538, %binop2 ], [ %call13488477, %if.then1347.thread ], [ %7, %if.then41 ], [ %198, %land.lhs.true1100 ], [ %198, %if.end1092 ], [ %7, %if.then1286 ], [ %.pre8575, %if.then2794 ], [ %476, %sw.bb2788 ], [ %7, %sw.bb2880 ], [ %.pre8566, %for.body ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define void @move_block_to_reg(i32 %regno, %struct.rtx_def* %x, i32 %nregs, i32 %mode) #0 {
entry:
  %0 = icmp sgt i32 %nregs, 0
  br i1 %0, label %for.body, label %for.end

for.body:                                         ; preds = %entry, %for.body
  %i.042 = phi i32 [ %inc, %for.body ], [ 0, %entry ]
  %1 = load i32* @word_mode, align 4, !tbaa !5
  %add = add nsw i32 %i.042, %regno
  %call33 = tail call %struct.rtx_def* @gen_rtx_REG(i32 %1, i32 %add) #5
  %call34 = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %x, i32 %i.042, i32 %mode) #5
  %call35 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call33, %struct.rtx_def* %call34)
  %inc = add nsw i32 %i.042, 1
  %exitcond = icmp eq i32 %inc, %nregs
  br i1 %exitcond, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %entry
  ret void
}

declare %struct.rtx_def* @validize_mem(%struct.rtx_def*) #1

declare %struct.rtx_def* @force_const_mem(i32, %struct.rtx_def*) #1

declare %struct.rtx_def* @operand_subword_force(%struct.rtx_def*, i32, i32) #1

; Function Attrs: nounwind uwtable
define void @move_block_from_reg(i32 %regno, %struct.rtx_def* %x, i32 %nregs, i32 %size) #0 {
entry:
  %cmp = icmp eq i32 %nregs, 0
  br i1 %cmp, label %for.end, label %if.end

if.end:                                           ; preds = %entry
  %0 = load i32* @target_flags, align 4, !tbaa !21
  %and = lshr i32 %0, 23
  %1 = and i32 %and, 4
  %2 = add i32 %1, 4
  %cmp1 = icmp slt i32 %2, %size
  br i1 %cmp1, label %for.cond.preheader, label %land.lhs.true

for.cond.preheader:                               ; preds = %land.lhs.true, %if.end
  %cmp2747 = icmp sgt i32 %nregs, 0
  br i1 %cmp2747, label %for.body, label %for.end

land.lhs.true:                                    ; preds = %if.end
  %mul = shl nsw i32 %size, 3
  %call = tail call i32 @mode_for_size(i32 %mul, i32 1, i32 0) #5
  %cmp2 = icmp eq i32 %call, 51
  br i1 %cmp2, label %for.cond.preheader, label %if.then3

if.then3:                                         ; preds = %land.lhs.true
  %call4 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %x, i32 %call, i64 0, i32 1, i32 1) #5
  %call5 = tail call %struct.rtx_def* @gen_rtx_REG(i32 %call, i32 %regno) #5
  %call6 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call4, %struct.rtx_def* %call5)
  br label %for.end

for.body:                                         ; preds = %for.cond.preheader, %if.end34
  %i.048 = phi i32 [ %inc, %if.end34 ], [ 0, %for.cond.preheader ]
  %call30 = tail call %struct.rtx_def* @operand_subword(%struct.rtx_def* %x, i32 %i.048, i32 1, i32 51) #5
  %cmp31 = icmp eq %struct.rtx_def* %call30, null
  br i1 %cmp31, label %if.then33, label %if.end34

if.then33:                                        ; preds = %for.body
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 1928, i8* getelementptr inbounds ([20 x i8]* @__FUNCTION__.move_block_from_reg, i64 0, i64 0)) #8
  unreachable

if.end34:                                         ; preds = %for.body
  %3 = load i32* @word_mode, align 4, !tbaa !5
  %add = add nsw i32 %i.048, %regno
  %call35 = tail call %struct.rtx_def* @gen_rtx_REG(i32 %3, i32 %add) #5
  %call36 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call30, %struct.rtx_def* %call35)
  %inc = add nsw i32 %i.048, 1
  %cmp27 = icmp slt i32 %inc, %nregs
  br i1 %cmp27, label %for.body, label %for.end

for.end:                                          ; preds = %if.end34, %for.cond.preheader, %entry, %if.then3
  ret void
}

declare i32 @mode_for_size(i32, i32, i32) #1

declare %struct.rtx_def* @adjust_address_1(%struct.rtx_def*, i32, i64, i32, i32) #1

; Function Attrs: nounwind uwtable
define void @emit_group_load(%struct.rtx_def* nocapture readonly %dst, %struct.rtx_def* %orig_src, i32 %ssize) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %dst, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 39
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 1953, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.emit_group_load, i64 0, i64 0)) #8
  unreachable

if.end:                                           ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %dst, i64 0, i32 1, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx to %struct.rtvec_def**
  %1 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtvec_def* %1, i64 0, i32 1, i64 0
  %2 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx3 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx3 to %struct.rtx_def**
  %3 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %tobool = icmp eq %struct.rtx_def* %3, null
  %. = zext i1 %tobool to i32
  %num_elem = getelementptr inbounds %struct.rtvec_def* %1, i64 0, i32 0
  %4 = load i32* %num_elem, align 4, !tbaa !63
  %conv = sext i32 %4 to i64
  %5 = alloca %struct.rtx_def*, i64 %conv, align 1
  %cmp13540 = icmp slt i32 %., %4
  br i1 %cmp13540, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %if.end
  %cmp39 = icmp sgt i32 %ssize, -1
  %conv42 = sext i32 %ssize to i64
  %6 = getelementptr inbounds %struct.rtx_def* %orig_src, i64 0, i32 0
  %7 = zext i1 %tobool to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %indvars.iv543 = phi i64 [ %7, %for.body.lr.ph ], [ %indvars.iv.next544, %for.inc ]
  %8 = phi %struct.rtvec_def* [ %1, %for.body.lr.ph ], [ %28, %for.inc ]
  %i.0541 = phi i32 [ %., %for.body.lr.ph ], [ %inc, %for.inc ]
  %arrayidx19 = getelementptr inbounds %struct.rtvec_def* %8, i64 0, i32 1, i64 %indvars.iv543
  %9 = load %struct.rtx_def** %arrayidx19, align 8, !tbaa !1
  %fld20 = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 1
  %rtx22 = bitcast [1 x %union.rtunion_def]* %fld20 to %struct.rtx_def**
  %10 = load %struct.rtx_def** %rtx22, align 8, !tbaa !1
  %11 = getelementptr inbounds %struct.rtx_def* %10, i64 0, i32 0
  %bf.load23 = load i32* %11, align 8
  %bf.lshr = lshr i32 %bf.load23, 16
  %bf.clear24 = and i32 %bf.lshr, 255
  %arrayidx32 = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 1, i64 1
  %rtx33 = bitcast %union.rtunion_def* %arrayidx32 to %struct.rtx_def**
  %12 = load %struct.rtx_def** %rtx33, align 8, !tbaa !1
  %rtwint = getelementptr inbounds %struct.rtx_def* %12, i64 0, i32 1, i64 0, i32 0
  %13 = load i64* %rtwint, align 8, !tbaa !22
  %idxprom36531 = zext i32 %bf.clear24 to i64
  %arrayidx37 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom36531
  %14 = load i8* %arrayidx37, align 1, !tbaa !5
  %conv38 = zext i8 %14 to i32
  br i1 %cmp39, label %land.lhs.true, label %if.end58

land.lhs.true:                                    ; preds = %for.body
  %conv41 = zext i8 %14 to i64
  %add = add nsw i64 %conv41, %13
  %cmp43 = icmp sgt i64 %add, %conv42
  br i1 %cmp43, label %if.then45, label %if.end58

if.then45:                                        ; preds = %land.lhs.true
  %sub = sub nsw i64 %conv42, %13
  %conv53 = trunc i64 %sub to i32
  %cmp54 = icmp eq i32 %conv53, 0
  br i1 %cmp54, label %if.then56, label %if.end58

if.then56:                                        ; preds = %if.then45
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 1978, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.emit_group_load, i64 0, i64 0)) #8
  unreachable

if.end58:                                         ; preds = %if.then45, %land.lhs.true, %for.body
  %bytelen.0 = phi i32 [ %conv53, %if.then45 ], [ %conv38, %land.lhs.true ], [ %conv38, %for.body ]
  %bf.load59 = load i32* %6, align 8
  %bf.clear60 = and i32 %bf.load59, 65535
  switch i32 %bf.clear60, label %if.end58.if.then114_crit_edge [
    i32 66, label %if.end128
    i32 67, label %lor.lhs.false102
    i32 68, label %lor.lhs.false102
    i32 54, label %lor.lhs.false102
    i32 55, label %lor.lhs.false102
    i32 58, label %lor.lhs.false102
    i32 134, label %lor.lhs.false102
    i32 56, label %lor.lhs.false102
    i32 140, label %lor.lhs.false102
  ]

if.end58.if.then114_crit_edge:                    ; preds = %if.end58
  %bf.lshr116.pre = lshr i32 %bf.load59, 16
  %bf.clear117.pre = and i32 %bf.lshr116.pre, 255
  br label %if.then114

lor.lhs.false102:                                 ; preds = %if.end58, %if.end58, %if.end58, %if.end58, %if.end58, %if.end58, %if.end58, %if.end58
  %bf.lshr104 = lshr i32 %bf.load59, 16
  %bf.clear105 = and i32 %bf.lshr104, 255
  %cmp106 = icmp eq i32 %bf.clear105, %bf.clear24
  %cmp112 = icmp eq i32 %bf.clear105, 0
  %or.cond = or i1 %cmp106, %cmp112
  br i1 %or.cond, label %if.end128, label %if.then114

if.then114:                                       ; preds = %if.end58.if.then114_crit_edge, %lor.lhs.false102
  %bf.clear117.pre-phi = phi i32 [ %bf.clear117.pre, %if.end58.if.then114_crit_edge ], [ %bf.clear105, %lor.lhs.false102 ]
  %cmp118 = icmp eq i32 %bf.clear117.pre-phi, 0
  br i1 %cmp118, label %if.then120, label %if.else121

if.then120:                                       ; preds = %if.then114
  %call = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear24) #5
  br label %if.end126

if.else121:                                       ; preds = %if.then114
  %call125 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear117.pre-phi) #5
  br label %if.end126

if.end126:                                        ; preds = %if.else121, %if.then120
  %src.0 = phi %struct.rtx_def* [ %call, %if.then120 ], [ %call125, %if.else121 ]
  %call127 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %src.0, %struct.rtx_def* %orig_src)
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %src.0, i64 0, i32 0
  %bf.load129.pre = load i32* %.phi.trans.insert, align 8
  br label %if.end128

if.end128:                                        ; preds = %if.end58, %lor.lhs.false102, %if.end126
  %bf.load129 = phi i32 [ %bf.load129.pre, %if.end126 ], [ %bf.load59, %lor.lhs.false102 ], [ %bf.load59, %if.end58 ]
  %src.1 = phi %struct.rtx_def* [ %src.0, %if.end126 ], [ %orig_src, %lor.lhs.false102 ], [ %orig_src, %if.end58 ]
  %15 = getelementptr inbounds %struct.rtx_def* %src.1, i64 0, i32 0
  %bf.clear130 = and i32 %bf.load129, 65535
  %cmp131 = icmp eq i32 %bf.clear130, 66
  br i1 %cmp131, label %land.lhs.true133, label %if.else164

land.lhs.true133:                                 ; preds = %if.end128
  %arrayidx135 = getelementptr inbounds %struct.rtx_def* %src.1, i64 0, i32 1, i64 1
  %rtmem = bitcast %union.rtunion_def* %arrayidx135 to %struct.mem_attrs**
  %16 = load %struct.mem_attrs** %rtmem, align 8, !tbaa !1
  %cmp136 = icmp eq %struct.mem_attrs* %16, null
  br i1 %cmp136, label %cond.end, label %cond.true

cond.true:                                        ; preds = %land.lhs.true133
  %align = getelementptr inbounds %struct.mem_attrs* %16, i64 0, i32 4
  %17 = load i32* %align, align 4, !tbaa !27
  br label %cond.end

cond.end:                                         ; preds = %land.lhs.true133, %cond.true
  %cond = phi i32 [ %17, %cond.true ], [ 8, %land.lhs.true133 ]
  %call141 = tail call i32 @get_mode_alignment(i32 %bf.clear24) #5
  %cmp142 = icmp ult i32 %cond, %call141
  br i1 %cmp142, label %if.else164, label %land.lhs.true144

land.lhs.true144:                                 ; preds = %cond.end
  %mul145 = shl nsw i64 %13, 3
  %call146 = tail call i32 @get_mode_alignment(i32 %bf.clear24) #5
  %conv147 = zext i32 %call146 to i64
  %rem = srem i64 %mul145, %conv147
  %cmp148 = icmp eq i64 %rem, 0
  %cmp154 = icmp eq i32 %bytelen.0, %conv38
  %or.cond551 = and i1 %cmp148, %cmp154
  br i1 %or.cond551, label %if.then156, label %if.else164

if.then156:                                       ; preds = %land.lhs.true144
  %call157 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear24) #5
  %arrayidx159 = getelementptr inbounds %struct.rtx_def** %5, i64 %indvars.iv543
  store %struct.rtx_def* %call157, %struct.rtx_def** %arrayidx159, align 8, !tbaa !1
  %call162 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %src.1, i32 %bf.clear24, i64 %13, i32 1, i32 1) #5
  %call163 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call157, %struct.rtx_def* %call162)
  br label %for.inc

if.else164:                                       ; preds = %cond.end, %land.lhs.true144, %if.end128
  %bf.load165 = load i32* %15, align 8
  %bf.clear166 = and i32 %bf.load165, 65535
  switch i32 %bf.clear166, label %if.else372 [
    i32 65, label %if.then169
    i32 67, label %if.then369
    i32 68, label %if.then369
    i32 54, label %if.then369
    i32 55, label %if.then369
    i32 58, label %if.then369
    i32 134, label %if.then369
    i32 56, label %if.then369
    i32 140, label %if.then369
    i32 61, label %land.lhs.true363
  ]

if.then169:                                       ; preds = %if.else164
  %cmp170 = icmp eq i64 %13, 0
  br i1 %cmp170, label %land.lhs.true172, label %if.then169.lor.lhs.false184_crit_edge

if.then169.lor.lhs.false184_crit_edge:            ; preds = %if.then169
  %fld185.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %src.1, i64 0, i32 1
  %rtx187.phi.trans.insert = bitcast [1 x %union.rtunion_def]* %fld185.phi.trans.insert to %struct.rtx_def**
  %.pre548 = load %struct.rtx_def** %rtx187.phi.trans.insert, align 8, !tbaa !1
  %.phi.trans.insert549 = getelementptr inbounds %struct.rtx_def* %.pre548, i64 0, i32 0
  %bf.load188.pre = load i32* %.phi.trans.insert549, align 8
  br label %lor.lhs.false184

land.lhs.true172:                                 ; preds = %if.then169
  %arrayidx174 = getelementptr inbounds %struct.rtx_def* %src.1, i64 0, i32 1, i64 0
  %rtx175 = bitcast %union.rtunion_def* %arrayidx174 to %struct.rtx_def**
  %18 = load %struct.rtx_def** %rtx175, align 8, !tbaa !1
  %19 = getelementptr inbounds %struct.rtx_def* %18, i64 0, i32 0
  %bf.load176 = load i32* %19, align 8
  %bf.lshr177 = lshr i32 %bf.load176, 16
  %bf.clear178 = and i32 %bf.lshr177, 255
  %idxprom179535 = zext i32 %bf.clear178 to i64
  %arrayidx180 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom179535
  %20 = load i8* %arrayidx180, align 1, !tbaa !5
  %conv181 = zext i8 %20 to i32
  %cmp182 = icmp eq i32 %bytelen.0, %conv181
  br i1 %cmp182, label %if.then208, label %lor.lhs.false184

lor.lhs.false184:                                 ; preds = %land.lhs.true172, %if.then169.lor.lhs.false184_crit_edge
  %bf.load188 = phi i32 [ %bf.load188.pre, %if.then169.lor.lhs.false184_crit_edge ], [ %bf.load176, %land.lhs.true172 ]
  %bf.lshr189 = lshr i32 %bf.load188, 16
  %bf.clear190 = and i32 %bf.lshr189, 255
  %idxprom191532 = zext i32 %bf.clear190 to i64
  %arrayidx192 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom191532
  %21 = load i8* %arrayidx192, align 1, !tbaa !5
  %conv193 = zext i8 %21 to i64
  %cmp194 = icmp eq i64 %13, %conv193
  br i1 %cmp194, label %land.lhs.true196, label %if.else297

land.lhs.true196:                                 ; preds = %lor.lhs.false184
  %arrayidx198 = getelementptr inbounds %struct.rtx_def* %src.1, i64 0, i32 1, i64 1
  %rtx199 = bitcast %union.rtunion_def* %arrayidx198 to %struct.rtx_def**
  %22 = load %struct.rtx_def** %rtx199, align 8, !tbaa !1
  %23 = getelementptr inbounds %struct.rtx_def* %22, i64 0, i32 0
  %bf.load200 = load i32* %23, align 8
  %bf.lshr201 = lshr i32 %bf.load200, 16
  %bf.clear202 = and i32 %bf.lshr201, 255
  %idxprom203534 = zext i32 %bf.clear202 to i64
  %arrayidx204 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom203534
  %24 = load i8* %arrayidx204, align 1, !tbaa !5
  %conv205 = zext i8 %24 to i32
  %cmp206 = icmp eq i32 %bytelen.0, %conv205
  br i1 %cmp206, label %if.then208, label %if.else297

if.then208:                                       ; preds = %land.lhs.true196, %land.lhs.true172
  %cmp209 = icmp ne i64 %13, 0
  %idxprom211 = zext i1 %cmp209 to i64
  %arrayidx213 = getelementptr inbounds %struct.rtx_def* %src.1, i64 0, i32 1, i64 %idxprom211
  %rtx214 = bitcast %union.rtunion_def* %arrayidx213 to %struct.rtx_def**
  %25 = load %struct.rtx_def** %rtx214, align 8, !tbaa !1
  %arrayidx216 = getelementptr inbounds %struct.rtx_def** %5, i64 %indvars.iv543
  store %struct.rtx_def* %25, %struct.rtx_def** %arrayidx216, align 8, !tbaa !1
  %26 = getelementptr inbounds %struct.rtx_def* %25, i64 0, i32 0
  %bf.load219 = load i32* %26, align 8
  %bf.clear220 = and i32 %bf.load219, 65535
  switch i32 %bf.clear220, label %if.then287 [
    i32 67, label %for.inc
    i32 68, label %for.inc
    i32 54, label %for.inc
    i32 55, label %for.inc
    i32 58, label %for.inc
    i32 134, label %for.inc
    i32 56, label %for.inc
    i32 140, label %for.inc
    i32 61, label %lor.lhs.false279
  ]

lor.lhs.false279:                                 ; preds = %if.then208
  %bf.lshr283 = lshr i32 %bf.load219, 16
  %bf.clear284 = and i32 %bf.lshr283, 255
  %cmp285 = icmp eq i32 %bf.clear284, %bf.clear24
  br i1 %cmp285, label %for.inc, label %if.then287

if.then287:                                       ; preds = %if.then208, %lor.lhs.false279
  %mul290 = shl i32 %bytelen.0, 3
  %conv291 = zext i32 %mul290 to i64
  %call293 = tail call %struct.rtx_def* @extract_bit_field(%struct.rtx_def* %25, i64 %conv291, i64 0, i32 1, %struct.rtx_def* null, i32 %bf.clear24, i32 %bf.clear24, i64 %conv42) #5
  store %struct.rtx_def* %call293, %struct.rtx_def** %arrayidx216, align 8, !tbaa !1
  br label %for.inc

if.else297:                                       ; preds = %land.lhs.true196, %lor.lhs.false184
  br i1 %cmp170, label %if.then300, label %if.else315

if.then300:                                       ; preds = %if.else297
  %bf.lshr302 = lshr i32 %bf.load165, 16
  %bf.clear303 = and i32 %bf.lshr302, 255
  %idxprom307533 = zext i32 %bf.clear303 to i64
  %arrayidx308 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom307533
  %27 = load i8* %arrayidx308, align 1, !tbaa !5
  %conv309 = zext i8 %27 to i64
  %call310 = tail call %struct.rtx_def* @assign_stack_temp(i32 %bf.clear303, i64 %conv309, i32 0) #5
  %call311 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call310, %struct.rtx_def* %src.1)
  %call312 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %call310, i32 %bf.clear24, i64 0, i32 1, i32 1) #5
  %arrayidx314 = getelementptr inbounds %struct.rtx_def** %5, i64 %indvars.iv543
  store %struct.rtx_def* %call312, %struct.rtx_def** %arrayidx314, align 8, !tbaa !1
  br label %for.inc

if.else315:                                       ; preds = %if.else297
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 2028, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.emit_group_load, i64 0, i64 0)) #8
  unreachable

land.lhs.true363:                                 ; preds = %if.else164
  %bf.lshr365 = lshr i32 %bf.load165, 16
  %bf.clear366 = and i32 %bf.lshr365, 255
  %cmp367 = icmp eq i32 %bf.clear366, %bf.clear24
  br i1 %cmp367, label %if.then369, label %if.else372

if.then369:                                       ; preds = %if.else164, %if.else164, %if.else164, %if.else164, %if.else164, %if.else164, %if.else164, %if.else164, %land.lhs.true363
  %arrayidx371 = getelementptr inbounds %struct.rtx_def** %5, i64 %indvars.iv543
  store %struct.rtx_def* %src.1, %struct.rtx_def** %arrayidx371, align 8, !tbaa !1
  br label %for.inc

if.else372:                                       ; preds = %if.else164, %land.lhs.true363
  %mul373 = shl i32 %bytelen.0, 3
  %conv374 = zext i32 %mul373 to i64
  %mul375 = shl nsw i64 %13, 3
  %call377 = tail call %struct.rtx_def* @extract_bit_field(%struct.rtx_def* %src.1, i64 %conv374, i64 %mul375, i32 1, %struct.rtx_def* null, i32 %bf.clear24, i32 %bf.clear24, i64 %conv42) #5
  %arrayidx379 = getelementptr inbounds %struct.rtx_def** %5, i64 %indvars.iv543
  store %struct.rtx_def* %call377, %struct.rtx_def** %arrayidx379, align 8, !tbaa !1
  br label %for.inc

for.inc:                                          ; preds = %if.then208, %if.then208, %if.then208, %if.then208, %if.then208, %if.then208, %if.then208, %if.then208, %lor.lhs.false279, %if.then156, %if.then369, %if.else372, %if.then300, %if.then287
  %inc = add nsw i32 %i.0541, 1
  %28 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !1
  %num_elem12 = getelementptr inbounds %struct.rtvec_def* %28, i64 0, i32 0
  %29 = load i32* %num_elem12, align 4, !tbaa !63
  %cmp13 = icmp slt i32 %inc, %29
  %indvars.iv.next544 = add nuw nsw i64 %indvars.iv543, 1
  br i1 %cmp13, label %for.body, label %for.end

for.end:                                          ; preds = %for.inc, %if.end
  %30 = phi %struct.rtvec_def* [ %1, %if.end ], [ %28, %for.inc ]
  %31 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr30.i = getelementptr inbounds %struct.function* %31, i64 0, i32 2
  %32 = load %struct.expr_status** %expr30.i, align 8, !tbaa !6
  %x_pending_chain31.i = getelementptr inbounds %struct.expr_status* %32, i64 0, i32 6
  %33 = load %struct.rtx_def** %x_pending_chain31.i, align 8, !tbaa !11
  %tobool32.i = icmp eq %struct.rtx_def* %33, null
  br i1 %tobool32.i, label %for.cond383.preheader, label %while.body.i

while.body.i:                                     ; preds = %for.end, %if.end.i
  %34 = phi %struct.rtx_def* [ %46, %if.end.i ], [ %33, %for.end ]
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %34, i64 0, i32 1, i64 3
  %rtx.i = bitcast %union.rtunion_def* %arrayidx.i to %struct.rtx_def**
  %35 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !1
  %36 = getelementptr inbounds %struct.rtx_def* %35, i64 0, i32 0
  %bf.load.i = load i32* %36, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  %cmp.i = icmp eq i32 %bf.clear.i, 24
  br i1 %cmp.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %while.body.i
  %arrayidx5.i = getelementptr inbounds %struct.rtx_def* %35, i64 0, i32 1, i64 0
  %rtvec.i = bitcast %union.rtunion_def* %arrayidx5.i to %struct.rtvec_def**
  %37 = load %struct.rtvec_def** %rtvec.i, align 8, !tbaa !1
  %arrayidx6.i = getelementptr inbounds %struct.rtvec_def* %37, i64 0, i32 1, i64 0
  %38 = load %struct.rtx_def** %arrayidx6.i, align 8, !tbaa !1
  %39 = getelementptr inbounds %struct.rtx_def* %34, i64 0, i32 1, i64 1, i32 0
  %.c.i = ptrtoint %struct.rtx_def* %38 to i64
  store i64 %.c.i, i64* %39, align 8, !tbaa !1
  %call.i = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %35) #5
  br label %if.end.i

if.else.i:                                        ; preds = %while.body.i
  %call16.i = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %35) #5
  %40 = getelementptr inbounds %struct.rtx_def* %34, i64 0, i32 1, i64 1, i32 0
  %call16.c.i = ptrtoint %struct.rtx_def* %call16.i to i64
  store i64 %call16.c.i, i64* %40, align 8, !tbaa !1
  br label %if.end.i

if.end.i:                                         ; preds = %if.else.i, %if.then.i
  %arrayidx21.i = getelementptr inbounds %struct.rtx_def* %34, i64 0, i32 1, i64 4
  %rtx22.i = bitcast %union.rtunion_def* %arrayidx21.i to %struct.rtx_def**
  %41 = load %struct.rtx_def** %rtx22.i, align 8, !tbaa !1
  %42 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr23.i = getelementptr inbounds %struct.function* %42, i64 0, i32 2
  %43 = load %struct.expr_status** %expr23.i, align 8, !tbaa !6
  %x_pending_chain24.i = getelementptr inbounds %struct.expr_status* %43, i64 0, i32 6
  store %struct.rtx_def* %41, %struct.rtx_def** %x_pending_chain24.i, align 8, !tbaa !11
  %44 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr.i = getelementptr inbounds %struct.function* %44, i64 0, i32 2
  %45 = load %struct.expr_status** %expr.i, align 8, !tbaa !6
  %x_pending_chain.i = getelementptr inbounds %struct.expr_status* %45, i64 0, i32 6
  %46 = load %struct.rtx_def** %x_pending_chain.i, align 8, !tbaa !11
  %tobool.i = icmp eq %struct.rtx_def* %46, null
  br i1 %tobool.i, label %for.cond383.preheader.loopexit, label %while.body.i

for.cond383.preheader.loopexit:                   ; preds = %if.end.i
  %.pre = load %struct.rtvec_def** %rtvec, align 8, !tbaa !1
  br label %for.cond383.preheader

for.cond383.preheader:                            ; preds = %for.cond383.preheader.loopexit, %for.end
  %47 = phi %struct.rtvec_def* [ %.pre, %for.cond383.preheader.loopexit ], [ %30, %for.end ]
  %num_elem387536 = getelementptr inbounds %struct.rtvec_def* %47, i64 0, i32 0
  %48 = load i32* %num_elem387536, align 4, !tbaa !63
  %cmp388537 = icmp slt i32 %., %48
  br i1 %cmp388537, label %for.body390.lr.ph, label %for.end405

for.body390.lr.ph:                                ; preds = %for.cond383.preheader
  %49 = zext i1 %tobool to i64
  br label %for.body390

for.body390:                                      ; preds = %for.body390.lr.ph, %for.body390
  %indvars.iv = phi i64 [ %49, %for.body390.lr.ph ], [ %indvars.iv.next, %for.body390 ]
  %50 = phi %struct.rtvec_def* [ %47, %for.body390.lr.ph ], [ %54, %for.body390 ]
  %i.1538 = phi i32 [ %., %for.body390.lr.ph ], [ %inc404, %for.body390 ]
  %arrayidx396 = getelementptr inbounds %struct.rtvec_def* %50, i64 0, i32 1, i64 %indvars.iv
  %51 = load %struct.rtx_def** %arrayidx396, align 8, !tbaa !1
  %arrayidx398 = getelementptr inbounds %struct.rtx_def* %51, i64 0, i32 1, i64 0
  %rtx399 = bitcast %union.rtunion_def* %arrayidx398 to %struct.rtx_def**
  %52 = load %struct.rtx_def** %rtx399, align 8, !tbaa !1
  %arrayidx401 = getelementptr inbounds %struct.rtx_def** %5, i64 %indvars.iv
  %53 = load %struct.rtx_def** %arrayidx401, align 8, !tbaa !1
  %call402 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %52, %struct.rtx_def* %53)
  %inc404 = add nsw i32 %i.1538, 1
  %54 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !1
  %num_elem387 = getelementptr inbounds %struct.rtvec_def* %54, i64 0, i32 0
  %55 = load i32* %num_elem387, align 4, !tbaa !63
  %cmp388 = icmp slt i32 %inc404, %55
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  br i1 %cmp388, label %for.body390, label %for.end405

for.end405:                                       ; preds = %for.body390, %for.cond383.preheader
  ret void
}

declare %struct.rtx_def* @extract_bit_field(%struct.rtx_def*, i64, i64, i32, %struct.rtx_def*, i32, i32, i64) #1

declare %struct.rtx_def* @assign_stack_temp(i32, i64, i32) #1

; Function Attrs: nounwind uwtable
define void @emit_group_store(%struct.rtx_def* %orig_dst, %struct.rtx_def* %src, i32 %ssize) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %src, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 39
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 2063, i8* getelementptr inbounds ([17 x i8]* @__FUNCTION__.emit_group_store, i64 0, i64 0)) #8
  unreachable

if.end:                                           ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %src, i64 0, i32 1, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx to %struct.rtvec_def**
  %1 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtvec_def* %1, i64 0, i32 1, i64 0
  %2 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx3 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx3 to %struct.rtx_def**
  %3 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %tobool = icmp eq %struct.rtx_def* %3, null
  %. = zext i1 %tobool to i32
  %num_elem = getelementptr inbounds %struct.rtvec_def* %1, i64 0, i32 0
  %4 = load i32* %num_elem, align 4, !tbaa !63
  %conv = sext i32 %4 to i64
  %5 = alloca %struct.rtx_def*, i64 %conv, align 1
  %cmp13301 = icmp slt i32 %., %4
  br i1 %cmp13301, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %if.end
  %6 = zext i1 %tobool to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv304 = phi i64 [ %6, %for.body.lr.ph ], [ %indvars.iv.next305, %for.body ]
  %7 = phi %struct.rtvec_def* [ %1, %for.body.lr.ph ], [ %11, %for.body ]
  %i.0302 = phi i32 [ %., %for.body.lr.ph ], [ %inc, %for.body ]
  %arrayidx19 = getelementptr inbounds %struct.rtvec_def* %7, i64 0, i32 1, i64 %indvars.iv304
  %8 = load %struct.rtx_def** %arrayidx19, align 8, !tbaa !1
  %arrayidx21 = getelementptr inbounds %struct.rtx_def* %8, i64 0, i32 1, i64 0
  %rtx22 = bitcast %union.rtunion_def* %arrayidx21 to %struct.rtx_def**
  %9 = load %struct.rtx_def** %rtx22, align 8, !tbaa !1
  %10 = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 0
  %bf.load23 = load i32* %10, align 8
  %bf.lshr = lshr i32 %bf.load23, 16
  %bf.clear24 = and i32 %bf.lshr, 255
  %call = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear24) #5
  %arrayidx26 = getelementptr inbounds %struct.rtx_def** %5, i64 %indvars.iv304
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx26, align 8, !tbaa !1
  %call29 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call, %struct.rtx_def* %9)
  %inc = add nsw i32 %i.0302, 1
  %11 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !1
  %num_elem12 = getelementptr inbounds %struct.rtvec_def* %11, i64 0, i32 0
  %12 = load i32* %num_elem12, align 4, !tbaa !63
  %cmp13 = icmp slt i32 %inc, %12
  %indvars.iv.next305 = add nuw nsw i64 %indvars.iv304, 1
  br i1 %cmp13, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %if.end
  %13 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr30.i = getelementptr inbounds %struct.function* %13, i64 0, i32 2
  %14 = load %struct.expr_status** %expr30.i, align 8, !tbaa !6
  %x_pending_chain31.i = getelementptr inbounds %struct.expr_status* %14, i64 0, i32 6
  %15 = load %struct.rtx_def** %x_pending_chain31.i, align 8, !tbaa !11
  %tobool32.i = icmp eq %struct.rtx_def* %15, null
  br i1 %tobool32.i, label %emit_queue.exit, label %while.body.i

while.body.i:                                     ; preds = %for.end, %if.end.i
  %16 = phi %struct.rtx_def* [ %28, %if.end.i ], [ %15, %for.end ]
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %16, i64 0, i32 1, i64 3
  %rtx.i = bitcast %union.rtunion_def* %arrayidx.i to %struct.rtx_def**
  %17 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !1
  %18 = getelementptr inbounds %struct.rtx_def* %17, i64 0, i32 0
  %bf.load.i = load i32* %18, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  %cmp.i = icmp eq i32 %bf.clear.i, 24
  br i1 %cmp.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %while.body.i
  %arrayidx5.i = getelementptr inbounds %struct.rtx_def* %17, i64 0, i32 1, i64 0
  %rtvec.i = bitcast %union.rtunion_def* %arrayidx5.i to %struct.rtvec_def**
  %19 = load %struct.rtvec_def** %rtvec.i, align 8, !tbaa !1
  %arrayidx6.i = getelementptr inbounds %struct.rtvec_def* %19, i64 0, i32 1, i64 0
  %20 = load %struct.rtx_def** %arrayidx6.i, align 8, !tbaa !1
  %21 = getelementptr inbounds %struct.rtx_def* %16, i64 0, i32 1, i64 1, i32 0
  %.c.i = ptrtoint %struct.rtx_def* %20 to i64
  store i64 %.c.i, i64* %21, align 8, !tbaa !1
  %call.i = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %17) #5
  br label %if.end.i

if.else.i:                                        ; preds = %while.body.i
  %call16.i = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %17) #5
  %22 = getelementptr inbounds %struct.rtx_def* %16, i64 0, i32 1, i64 1, i32 0
  %call16.c.i = ptrtoint %struct.rtx_def* %call16.i to i64
  store i64 %call16.c.i, i64* %22, align 8, !tbaa !1
  br label %if.end.i

if.end.i:                                         ; preds = %if.else.i, %if.then.i
  %arrayidx21.i = getelementptr inbounds %struct.rtx_def* %16, i64 0, i32 1, i64 4
  %rtx22.i = bitcast %union.rtunion_def* %arrayidx21.i to %struct.rtx_def**
  %23 = load %struct.rtx_def** %rtx22.i, align 8, !tbaa !1
  %24 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr23.i = getelementptr inbounds %struct.function* %24, i64 0, i32 2
  %25 = load %struct.expr_status** %expr23.i, align 8, !tbaa !6
  %x_pending_chain24.i = getelementptr inbounds %struct.expr_status* %25, i64 0, i32 6
  store %struct.rtx_def* %23, %struct.rtx_def** %x_pending_chain24.i, align 8, !tbaa !11
  %26 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr.i = getelementptr inbounds %struct.function* %26, i64 0, i32 2
  %27 = load %struct.expr_status** %expr.i, align 8, !tbaa !6
  %x_pending_chain.i = getelementptr inbounds %struct.expr_status* %27, i64 0, i32 6
  %28 = load %struct.rtx_def** %x_pending_chain.i, align 8, !tbaa !11
  %tobool.i = icmp eq %struct.rtx_def* %28, null
  br i1 %tobool.i, label %emit_queue.exit, label %while.body.i

emit_queue.exit:                                  ; preds = %if.end.i, %for.end
  %29 = getelementptr inbounds %struct.rtx_def* %orig_dst, i64 0, i32 0
  %bf.load30 = load i32* %29, align 8
  %bf.clear31 = and i32 %bf.load30, 65535
  switch i32 %bf.clear31, label %if.then53 [
    i32 39, label %if.then34
    i32 66, label %if.end60
    i32 65, label %if.end60
  ]

if.then34:                                        ; preds = %emit_queue.exit
  %call35 = tail call i32 @rtx_equal_p(%struct.rtx_def* %orig_dst, %struct.rtx_def* %src) #5
  %tobool36 = icmp eq i32 %call35, 0
  br i1 %tobool36, label %if.end38, label %if.end201

if.end38:                                         ; preds = %if.then34
  %bf.load39 = load i32* %29, align 8
  %bf.lshr40 = lshr i32 %bf.load39, 16
  %bf.clear41 = and i32 %bf.lshr40, 255
  %conv42 = sext i32 %ssize to i64
  %call43 = tail call %struct.rtx_def* @assign_stack_temp(i32 %bf.clear41, i64 %conv42, i32 0) #5
  tail call void @emit_group_store(%struct.rtx_def* %call43, %struct.rtx_def* %src, i32 %ssize)
  tail call void @emit_group_load(%struct.rtx_def* %orig_dst, %struct.rtx_def* %call43, i32 %ssize)
  ret void

if.then53:                                        ; preds = %emit_queue.exit
  %bf.lshr55 = lshr i32 %bf.load30, 16
  %bf.clear56 = and i32 %bf.lshr55, 255
  %call57 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear56) #5
  %30 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call58 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call57, %struct.rtx_def* %30)
  br label %if.end60

if.end60:                                         ; preds = %emit_queue.exit, %emit_queue.exit, %if.then53
  %dst.0 = phi %struct.rtx_def* [ %call57, %if.then53 ], [ %orig_dst, %emit_queue.exit ], [ %orig_dst, %emit_queue.exit ]
  %31 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !1
  %num_elem65297 = getelementptr inbounds %struct.rtvec_def* %31, i64 0, i32 0
  %32 = load i32* %num_elem65297, align 4, !tbaa !63
  %cmp66298 = icmp slt i32 %., %32
  br i1 %cmp66298, label %for.body68.lr.ph, label %for.end194

for.body68.lr.ph:                                 ; preds = %if.end60
  %cmp88 = icmp sgt i32 %ssize, -1
  %conv92 = sext i32 %ssize to i64
  %33 = getelementptr inbounds %struct.rtx_def* %dst.0, i64 0, i32 0
  %fld106 = getelementptr inbounds %struct.rtx_def* %dst.0, i64 0, i32 1
  %rtx108 = bitcast [1 x %union.rtunion_def]* %fld106 to %struct.rtx_def**
  %arrayidx145 = getelementptr inbounds %struct.rtx_def* %dst.0, i64 0, i32 1, i64 1
  %rtx146 = bitcast %union.rtunion_def* %arrayidx145 to %struct.rtx_def**
  %34 = zext i1 %tobool to i64
  br label %for.body68

for.body68:                                       ; preds = %for.body68.lr.ph, %for.inc192
  %indvars.iv = phi i64 [ %34, %for.body68.lr.ph ], [ %indvars.iv.next, %for.inc192 ]
  %35 = phi %struct.rtvec_def* [ %31, %for.body68.lr.ph ], [ %48, %for.inc192 ]
  %i.1299 = phi i32 [ %., %for.body68.lr.ph ], [ %inc193, %for.inc192 ]
  %arrayidx74 = getelementptr inbounds %struct.rtvec_def* %35, i64 0, i32 1, i64 %indvars.iv
  %36 = load %struct.rtx_def** %arrayidx74, align 8, !tbaa !1
  %arrayidx76 = getelementptr inbounds %struct.rtx_def* %36, i64 0, i32 1, i64 1
  %rtx77 = bitcast %union.rtunion_def* %arrayidx76 to %struct.rtx_def**
  %37 = load %struct.rtx_def** %rtx77, align 8, !tbaa !1
  %rtwint = getelementptr inbounds %struct.rtx_def* %37, i64 0, i32 1, i64 0, i32 0
  %38 = load i64* %rtwint, align 8, !tbaa !22
  %arrayidx81 = getelementptr inbounds %struct.rtx_def** %5, i64 %indvars.iv
  %39 = load %struct.rtx_def** %arrayidx81, align 8, !tbaa !1
  %40 = getelementptr inbounds %struct.rtx_def* %39, i64 0, i32 0
  %bf.load82 = load i32* %40, align 8
  %bf.lshr83 = lshr i32 %bf.load82, 16
  %bf.clear84 = and i32 %bf.lshr83, 255
  %idxprom85268 = zext i32 %bf.clear84 to i64
  %arrayidx86 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom85268
  %41 = load i8* %arrayidx86, align 1, !tbaa !5
  %conv87 = zext i8 %41 to i32
  br i1 %cmp88, label %land.lhs.true90, label %if.end98

land.lhs.true90:                                  ; preds = %for.body68
  %conv91 = zext i8 %41 to i64
  %add = add nsw i64 %conv91, %38
  %cmp93 = icmp sgt i64 %add, %conv92
  br i1 %cmp93, label %if.then95, label %if.end98

if.then95:                                        ; preds = %land.lhs.true90
  %sub = sub nsw i64 %conv92, %38
  %conv97 = trunc i64 %sub to i32
  br label %if.end98

if.end98:                                         ; preds = %if.then95, %land.lhs.true90, %for.body68
  %bytelen.0 = phi i32 [ %conv97, %if.then95 ], [ %conv87, %land.lhs.true90 ], [ %conv87, %for.body68 ]
  %bf.load99 = load i32* %33, align 8
  %bf.clear100 = and i32 %bf.load99, 65535
  %cmp101 = icmp eq i32 %bf.clear100, 65
  br i1 %cmp101, label %if.then103, label %if.end150

if.then103:                                       ; preds = %if.end98
  %conv104 = zext i32 %bytelen.0 to i64
  %add105 = add nsw i64 %conv104, %38
  %42 = load %struct.rtx_def** %rtx108, align 8, !tbaa !1
  %43 = getelementptr inbounds %struct.rtx_def* %42, i64 0, i32 0
  %bf.load109 = load i32* %43, align 8
  %bf.lshr110 = lshr i32 %bf.load109, 16
  %bf.clear111 = and i32 %bf.lshr110, 255
  %idxprom112269 = zext i32 %bf.clear111 to i64
  %arrayidx113 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom112269
  %44 = load i8* %arrayidx113, align 1, !tbaa !5
  %conv114 = zext i8 %44 to i64
  %cmp115 = icmp sgt i64 %add105, %conv114
  br i1 %cmp115, label %if.else121, label %if.end150

if.else121:                                       ; preds = %if.then103
  %cmp131 = icmp slt i64 %38, %conv114
  br i1 %cmp131, label %if.else147, label %if.then133

if.then133:                                       ; preds = %if.else121
  %sub143 = sub nsw i64 %38, %conv114
  %45 = load %struct.rtx_def** %rtx146, align 8, !tbaa !1
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %45, i64 0, i32 0
  %bf.load151.pre = load i32* %.phi.trans.insert, align 8
  br label %if.end150

if.else147:                                       ; preds = %if.else121
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 2142, i8* getelementptr inbounds ([17 x i8]* @__FUNCTION__.emit_group_store, i64 0, i64 0)) #8
  unreachable

if.end150:                                        ; preds = %if.then103, %if.then133, %if.end98
  %bf.load151 = phi i32 [ %bf.load151.pre, %if.then133 ], [ %bf.load99, %if.end98 ], [ %bf.load109, %if.then103 ]
  %bytepos.0 = phi i64 [ %sub143, %if.then133 ], [ %38, %if.end98 ], [ %38, %if.then103 ]
  %dest.0 = phi %struct.rtx_def* [ %45, %if.then133 ], [ %dst.0, %if.end98 ], [ %42, %if.then103 ]
  %bf.clear152 = and i32 %bf.load151, 65535
  %cmp153 = icmp eq i32 %bf.clear152, 66
  br i1 %cmp153, label %land.lhs.true155, label %if.else183

land.lhs.true155:                                 ; preds = %if.end150
  %arrayidx157 = getelementptr inbounds %struct.rtx_def* %dest.0, i64 0, i32 1, i64 1
  %rtmem = bitcast %union.rtunion_def* %arrayidx157 to %struct.mem_attrs**
  %46 = load %struct.mem_attrs** %rtmem, align 8, !tbaa !1
  %cmp158 = icmp eq %struct.mem_attrs* %46, null
  br i1 %cmp158, label %cond.end, label %cond.true

cond.true:                                        ; preds = %land.lhs.true155
  %align = getelementptr inbounds %struct.mem_attrs* %46, i64 0, i32 4
  %47 = load i32* %align, align 4, !tbaa !27
  br label %cond.end

cond.end:                                         ; preds = %land.lhs.true155, %cond.true
  %cond = phi i32 [ %47, %cond.true ], [ 8, %land.lhs.true155 ]
  %call163 = tail call i32 @get_mode_alignment(i32 %bf.clear84) #5
  %cmp164 = icmp ult i32 %cond, %call163
  br i1 %cmp164, label %if.else183, label %land.lhs.true166

land.lhs.true166:                                 ; preds = %cond.end
  %mul167 = shl nsw i64 %bytepos.0, 3
  %call168 = tail call i32 @get_mode_alignment(i32 %bf.clear84) #5
  %conv169 = zext i32 %call168 to i64
  %rem = srem i64 %mul167, %conv169
  %cmp170 = icmp eq i64 %rem, 0
  %cmp176 = icmp eq i32 %bytelen.0, %conv87
  %or.cond = and i1 %cmp170, %cmp176
  br i1 %or.cond, label %if.then178, label %if.else183

if.then178:                                       ; preds = %land.lhs.true166
  %call179 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %dest.0, i32 %bf.clear84, i64 %bytepos.0, i32 1, i32 1) #5
  %call182 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call179, %struct.rtx_def* %39)
  br label %for.inc192

if.else183:                                       ; preds = %cond.end, %land.lhs.true166, %if.end150
  %mul184 = shl i32 %bytelen.0, 3
  %conv185 = zext i32 %mul184 to i64
  %mul186 = shl nsw i64 %bytepos.0, 3
  %call190 = tail call %struct.rtx_def* @store_bit_field(%struct.rtx_def* %dest.0, i64 %conv185, i64 %mul186, i32 %bf.clear84, %struct.rtx_def* %39, i64 %conv92) #5
  br label %for.inc192

for.inc192:                                       ; preds = %if.then178, %if.else183
  %inc193 = add nsw i32 %i.1299, 1
  %48 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !1
  %num_elem65 = getelementptr inbounds %struct.rtvec_def* %48, i64 0, i32 0
  %49 = load i32* %num_elem65, align 4, !tbaa !63
  %cmp66 = icmp slt i32 %inc193, %49
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  br i1 %cmp66, label %for.body68, label %for.end194

for.end194:                                       ; preds = %for.inc192, %if.end60
  %50 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr30.i270 = getelementptr inbounds %struct.function* %50, i64 0, i32 2
  %51 = load %struct.expr_status** %expr30.i270, align 8, !tbaa !6
  %x_pending_chain31.i271 = getelementptr inbounds %struct.expr_status* %51, i64 0, i32 6
  %52 = load %struct.rtx_def** %x_pending_chain31.i271, align 8, !tbaa !11
  %tobool32.i272 = icmp eq %struct.rtx_def* %52, null
  br i1 %tobool32.i272, label %emit_queue.exit296, label %while.body.i278

while.body.i278:                                  ; preds = %for.end194, %if.end.i295
  %53 = phi %struct.rtx_def* [ %65, %if.end.i295 ], [ %52, %for.end194 ]
  %arrayidx.i273 = getelementptr inbounds %struct.rtx_def* %53, i64 0, i32 1, i64 3
  %rtx.i274 = bitcast %union.rtunion_def* %arrayidx.i273 to %struct.rtx_def**
  %54 = load %struct.rtx_def** %rtx.i274, align 8, !tbaa !1
  %55 = getelementptr inbounds %struct.rtx_def* %54, i64 0, i32 0
  %bf.load.i275 = load i32* %55, align 8
  %bf.clear.i276 = and i32 %bf.load.i275, 65535
  %cmp.i277 = icmp eq i32 %bf.clear.i276, 24
  br i1 %cmp.i277, label %if.then.i284, label %if.else.i287

if.then.i284:                                     ; preds = %while.body.i278
  %arrayidx5.i279 = getelementptr inbounds %struct.rtx_def* %54, i64 0, i32 1, i64 0
  %rtvec.i280 = bitcast %union.rtunion_def* %arrayidx5.i279 to %struct.rtvec_def**
  %56 = load %struct.rtvec_def** %rtvec.i280, align 8, !tbaa !1
  %arrayidx6.i281 = getelementptr inbounds %struct.rtvec_def* %56, i64 0, i32 1, i64 0
  %57 = load %struct.rtx_def** %arrayidx6.i281, align 8, !tbaa !1
  %58 = getelementptr inbounds %struct.rtx_def* %53, i64 0, i32 1, i64 1, i32 0
  %.c.i282 = ptrtoint %struct.rtx_def* %57 to i64
  store i64 %.c.i282, i64* %58, align 8, !tbaa !1
  %call.i283 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %54) #5
  br label %if.end.i295

if.else.i287:                                     ; preds = %while.body.i278
  %call16.i285 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %54) #5
  %59 = getelementptr inbounds %struct.rtx_def* %53, i64 0, i32 1, i64 1, i32 0
  %call16.c.i286 = ptrtoint %struct.rtx_def* %call16.i285 to i64
  store i64 %call16.c.i286, i64* %59, align 8, !tbaa !1
  br label %if.end.i295

if.end.i295:                                      ; preds = %if.else.i287, %if.then.i284
  %arrayidx21.i288 = getelementptr inbounds %struct.rtx_def* %53, i64 0, i32 1, i64 4
  %rtx22.i289 = bitcast %union.rtunion_def* %arrayidx21.i288 to %struct.rtx_def**
  %60 = load %struct.rtx_def** %rtx22.i289, align 8, !tbaa !1
  %61 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr23.i290 = getelementptr inbounds %struct.function* %61, i64 0, i32 2
  %62 = load %struct.expr_status** %expr23.i290, align 8, !tbaa !6
  %x_pending_chain24.i291 = getelementptr inbounds %struct.expr_status* %62, i64 0, i32 6
  store %struct.rtx_def* %60, %struct.rtx_def** %x_pending_chain24.i291, align 8, !tbaa !11
  %63 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr.i292 = getelementptr inbounds %struct.function* %63, i64 0, i32 2
  %64 = load %struct.expr_status** %expr.i292, align 8, !tbaa !6
  %x_pending_chain.i293 = getelementptr inbounds %struct.expr_status* %64, i64 0, i32 6
  %65 = load %struct.rtx_def** %x_pending_chain.i293, align 8, !tbaa !11
  %tobool.i294 = icmp eq %struct.rtx_def* %65, null
  br i1 %tobool.i294, label %emit_queue.exit296, label %while.body.i278

emit_queue.exit296:                               ; preds = %if.end.i295, %for.end194
  %66 = getelementptr inbounds %struct.rtx_def* %dst.0, i64 0, i32 0
  %bf.load195 = load i32* %66, align 8
  %bf.clear196 = and i32 %bf.load195, 65535
  %cmp197 = icmp eq i32 %bf.clear196, 61
  br i1 %cmp197, label %if.then199, label %if.end201

if.then199:                                       ; preds = %emit_queue.exit296
  %call200 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %orig_dst, %struct.rtx_def* %dst.0)
  br label %if.end201

if.end201:                                        ; preds = %if.then34, %if.then199, %emit_queue.exit296
  ret void
}

declare i32 @rtx_equal_p(%struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @store_bit_field(%struct.rtx_def*, i64, i64, i32, %struct.rtx_def*, i64) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @copy_blkmode_from_reg(%struct.rtx_def* %tgtblk, %struct.rtx_def* %srcreg, %union.tree_node* %type) #0 {
entry:
  %call = tail call i64 @int_size_in_bytes(%union.tree_node* %type) #5
  %align = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 7
  %0 = bitcast %union.tree_node** %align to i32*
  %1 = load i32* %0, align 4, !tbaa !62
  %2 = load i32* @target_flags, align 4, !tbaa !21
  %and = lshr i32 %2, 20
  %3 = and i32 %and, 32
  %4 = add i32 %3, 32
  %cmp = icmp ult i32 %1, %4
  %. = select i1 %cmp, i32 %1, i32 %4
  %conv = zext i32 %. to i64
  %cmp8 = icmp eq %struct.rtx_def* %tgtblk, null
  br i1 %cmp8, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %type1 = bitcast %union.tree_node* %type to %struct.tree_type*
  %readonly_flag = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %readonly_flag, align 8
  %5 = lshr i32 %bf.load, 10
  %mul14 = and i32 %5, 2
  %restrict_flag = getelementptr inbounds %struct.tree_type* %type1, i64 0, i32 6
  %bf.load16 = load i32* %restrict_flag, align 4
  %6 = lshr i32 %bf.load16, 19
  %mul19 = and i32 %6, 4
  %bf.clear23 = and i32 %bf.load, 255
  %cmp24 = icmp eq i32 %bf.clear23, 20
  br i1 %cmp24, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.then
  %type27 = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 0, i32 1
  %7 = load %union.tree_node** %type27, align 8, !tbaa !36
  %tobool28 = icmp ne %union.tree_node* %7, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then
  %8 = phi i1 [ false, %if.then ], [ %tobool28, %land.rhs ]
  %land.ext = zext i1 %8 to i32
  %mul29 = shl nuw nsw i32 %land.ext, 3
  %or = or i32 %mul14, %mul19
  %or20 = or i32 %or, %mul29
  %or31 = or i32 %or20, 1
  %call32 = tail call %union.tree_node* @build_qualified_type(%union.tree_node* %type, i32 %or31) #5
  %call33 = tail call %struct.rtx_def* @assign_temp(%union.tree_node* %call32, i32 0, i32 1, i32 1) #5
  tail call void @preserve_temp_slots(%struct.rtx_def* %call33) #5
  br label %if.end

if.end:                                           ; preds = %land.end, %entry
  %tgtblk.addr.0 = phi %struct.rtx_def* [ %call33, %land.end ], [ %tgtblk, %entry ]
  %9 = getelementptr inbounds %struct.rtx_def* %srcreg, i64 0, i32 0
  %bf.load34 = load i32* %9, align 8
  %bf.lshr35 = lshr i32 %bf.load34, 16
  %bf.clear36 = and i32 %bf.lshr35, 255
  %cmp37 = icmp eq i32 %bf.clear36, 51
  br i1 %cmp37, label %if.end54, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end
  %idxprom147 = zext i32 %bf.clear36 to i64
  %arrayidx = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom147
  %10 = load i8* %arrayidx, align 1, !tbaa !5
  %conv42 = zext i8 %10 to i32
  %11 = load i32* @target_flags, align 4, !tbaa !21
  %and43 = lshr i32 %11, 23
  %12 = and i32 %and43, 4
  %13 = add i32 %12, 4
  %cmp46 = icmp ult i32 %conv42, %13
  br i1 %cmp46, label %if.then48, label %if.end54

if.then48:                                        ; preds = %land.lhs.true
  %14 = load i32* @word_mode, align 4, !tbaa !5
  %unsigned_flag = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 0, i32 2
  %bf.load50 = load i32* %unsigned_flag, align 8
  %bf.lshr51 = lshr i32 %bf.load50, 13
  %bf.clear52 = and i32 %bf.lshr51, 1
  %call.i = tail call %struct.rtx_def* @convert_modes(i32 %14, i32 0, %struct.rtx_def* %srcreg, i32 %bf.clear52) #5
  br label %if.end54

if.end54:                                         ; preds = %if.end, %if.then48, %land.lhs.true
  %srcreg.addr.0 = phi %struct.rtx_def* [ %call.i, %if.then48 ], [ %srcreg, %land.lhs.true ], [ %srcreg, %if.end ]
  %mul55 = shl i64 %call, 3
  %cmp56148 = icmp eq i64 %mul55, 0
  br i1 %cmp56148, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.end54
  %15 = getelementptr inbounds %struct.rtx_def* %srcreg.addr.0, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %if.end92
  %xbitpos.0152 = phi i64 [ 0, %for.body.lr.ph ], [ %add113, %if.end92 ]
  %dst.0150 = phi %struct.rtx_def* [ null, %for.body.lr.ph ], [ %dst.1, %if.end92 ]
  %src.0149 = phi %struct.rtx_def* [ null, %for.body.lr.ph ], [ %src.1, %if.end92 ]
  %16 = load i32* @target_flags, align 4, !tbaa !21
  %and58 = lshr i32 %16, 20
  %17 = and i32 %and58, 32
  %18 = add i32 %17, 32
  %conv61142 = zext i32 %18 to i64
  %19 = add i64 %conv61142, -1
  %rem = and i64 %19, %xbitpos.0152
  %cmp62 = icmp eq i64 %rem, 0
  %cmp64 = icmp eq i64 %xbitpos.0152, 0
  %or.cond = or i1 %cmp62, %cmp64
  br i1 %or.cond, label %if.then66, label %if.end76

if.then66:                                        ; preds = %for.body
  %div = udiv i64 %xbitpos.0152, %conv61142
  %conv71 = trunc i64 %div to i32
  %bf.load72 = load i32* %15, align 8
  %bf.lshr73 = lshr i32 %bf.load72, 16
  %bf.clear74 = and i32 %bf.lshr73, 255
  %call75 = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %srcreg.addr.0, i32 %conv71, i32 %bf.clear74) #5
  %.pre = load i32* @target_flags, align 4, !tbaa !21
  br label %if.end76

if.end76:                                         ; preds = %for.body, %if.then66
  %20 = phi i32 [ %.pre, %if.then66 ], [ %16, %for.body ]
  %src.1 = phi %struct.rtx_def* [ %call75, %if.then66 ], [ %src.0149, %for.body ]
  %and77 = lshr i32 %20, 20
  %21 = and i32 %and77, 32
  %22 = add i32 %21, 32
  %conv80143 = zext i32 %22 to i64
  %23 = add i64 %conv80143, -1
  %rem81 = and i64 %23, %xbitpos.0152
  %cmp82 = icmp eq i64 %rem81, 0
  br i1 %cmp82, label %if.then84, label %if.end92

if.then84:                                        ; preds = %if.end76
  %div89 = udiv i64 %xbitpos.0152, %conv80143
  %conv90 = trunc i64 %div89 to i32
  %call91 = tail call %struct.rtx_def* @operand_subword(%struct.rtx_def* %tgtblk.addr.0, i32 %conv90, i32 1, i32 51) #5
  %.pre153 = load i32* @target_flags, align 4, !tbaa !21
  br label %if.end92

if.end92:                                         ; preds = %if.then84, %if.end76
  %24 = phi i32 [ %.pre153, %if.then84 ], [ %20, %if.end76 ]
  %dst.1 = phi %struct.rtx_def* [ %call91, %if.then84 ], [ %dst.0150, %if.end76 ]
  %and93 = lshr i32 %24, 20
  %25 = and i32 %and93, 32
  %26 = add i32 %25, 32
  %conv96144 = zext i32 %26 to i64
  %27 = add i64 %conv96144, -1
  %rem97 = and i64 %27, %xbitpos.0152
  %28 = load i32* @word_mode, align 4, !tbaa !5
  %call107 = tail call %struct.rtx_def* @extract_bit_field(%struct.rtx_def* %src.1, i64 %conv, i64 %rem97, i32 1, %struct.rtx_def* null, i32 %28, i32 %28, i64 %conv96144) #5
  %29 = load i32* @target_flags, align 4, !tbaa !21
  %and108 = lshr i32 %29, 20
  %30 = and i32 %and108, 32
  %31 = add i32 %30, 32
  %conv111145 = zext i32 %31 to i64
  %call112 = tail call %struct.rtx_def* @store_bit_field(%struct.rtx_def* %dst.1, i64 %conv, i64 %rem97, i32 %28, %struct.rtx_def* %call107, i64 %conv111145) #5
  %add113 = add i64 %xbitpos.0152, %conv
  %cmp56 = icmp ult i64 %add113, %mul55
  br i1 %cmp56, label %for.body, label %for.end

for.end:                                          ; preds = %if.end92, %if.end54
  ret %struct.rtx_def* %tgtblk.addr.0
}

declare i64 @int_size_in_bytes(%union.tree_node*) #1

declare %struct.rtx_def* @assign_temp(%union.tree_node*, i32, i32, i32) #1

declare %union.tree_node* @build_qualified_type(%union.tree_node*, i32) #1

declare void @preserve_temp_slots(%struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define void @use_reg(%struct.rtx_def** nocapture %call_fusage, %struct.rtx_def* %reg) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %reg, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 61
  br i1 %cmp, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %reg, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %1 = load i32* %rtuint, align 4, !tbaa !21
  %cmp1 = icmp ugt i32 %1, 52
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %entry, %lor.lhs.false
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 2261, i8* getelementptr inbounds ([8 x i8]* @__FUNCTION__.use_reg, i64 0, i64 0)) #8
  unreachable

if.end:                                           ; preds = %lor.lhs.false
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %reg) #5
  %2 = load %struct.rtx_def** %call_fusage, align 8, !tbaa !1
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %2) #5
  store %struct.rtx_def* %call2, %struct.rtx_def** %call_fusage, align 8, !tbaa !1
  ret void
}

; Function Attrs: nounwind uwtable
define void @use_regs(%struct.rtx_def** nocapture %call_fusage, i32 %regno, i32 %nregs) #0 {
entry:
  %add = add nsw i32 %nregs, %regno
  %cmp = icmp sgt i32 %add, 53
  br i1 %cmp, label %if.then, label %for.cond.preheader

for.cond.preheader:                               ; preds = %entry
  %cmp110 = icmp sgt i32 %nregs, 0
  br i1 %cmp110, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %0 = sext i32 %regno to i64
  br label %for.body

if.then:                                          ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 2280, i8* getelementptr inbounds ([9 x i8]* @__FUNCTION__.use_regs, i64 0, i64 0)) #8
  unreachable

for.body:                                         ; preds = %for.body.lr.ph, %use_reg.exit
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %use_reg.exit ]
  %1 = add nsw i64 %indvars.iv, %0
  %arrayidx = getelementptr inbounds [53 x i32]* @reg_raw_mode, i64 0, i64 %1
  %2 = load i32* %arrayidx, align 4, !tbaa !5
  %3 = trunc i64 %1 to i32
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 %2, i32 %3) #5
  %4 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 0
  %bf.load.i = load i32* %4, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  %cmp.i = icmp eq i32 %bf.clear.i, 61
  br i1 %cmp.i, label %lor.lhs.false.i, label %if.then.i

lor.lhs.false.i:                                  ; preds = %for.body
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 0
  %rtuint.i = bitcast %union.rtunion_def* %arrayidx.i to i32*
  %5 = load i32* %rtuint.i, align 4, !tbaa !21
  %cmp1.i = icmp ugt i32 %5, 52
  br i1 %cmp1.i, label %if.then.i, label %use_reg.exit

if.then.i:                                        ; preds = %lor.lhs.false.i, %for.body
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 2261, i8* getelementptr inbounds ([8 x i8]* @__FUNCTION__.use_reg, i64 0, i64 0)) #8
  unreachable

use_reg.exit:                                     ; preds = %lor.lhs.false.i
  %call.i = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %call) #5
  %6 = load %struct.rtx_def** %call_fusage, align 8, !tbaa !1
  %call2.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 0, %struct.rtx_def* %call.i, %struct.rtx_def* %6) #5
  store %struct.rtx_def* %call2.i, %struct.rtx_def** %call_fusage, align 8, !tbaa !1
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %7 = trunc i64 %indvars.iv.next to i32
  %cmp1 = icmp slt i32 %7, %nregs
  br i1 %cmp1, label %for.body, label %for.end

for.end:                                          ; preds = %use_reg.exit, %for.cond.preheader
  ret void
}

; Function Attrs: nounwind uwtable
define void @use_group_regs(%struct.rtx_def** nocapture %call_fusage, %struct.rtx_def* nocapture readonly %regs) #0 {
entry:
  %arrayidx = getelementptr inbounds %struct.rtx_def* %regs, i64 0, i32 1, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx to %struct.rtvec_def**
  %0 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !1
  %num_elem14 = getelementptr inbounds %struct.rtvec_def* %0, i64 0, i32 0
  %1 = load i32* %num_elem14, align 4, !tbaa !63
  %cmp15 = icmp sgt i32 %1, 0
  br i1 %cmp15, label %for.body, label %for.end

for.body:                                         ; preds = %entry, %for.inc
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %entry ]
  %2 = phi %struct.rtvec_def* [ %8, %for.inc ], [ %0, %entry ]
  %arrayidx4 = getelementptr inbounds %struct.rtvec_def* %2, i64 0, i32 1, i64 %indvars.iv
  %3 = load %struct.rtx_def** %arrayidx4, align 8, !tbaa !1
  %arrayidx6 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx6 to %struct.rtx_def**
  %4 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %cmp7 = icmp eq %struct.rtx_def* %4, null
  br i1 %cmp7, label %for.inc, label %land.lhs.true

land.lhs.true:                                    ; preds = %for.body
  %5 = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 0
  %bf.load = load i32* %5, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp8 = icmp eq i32 %bf.clear, 61
  br i1 %cmp8, label %lor.lhs.false.i, label %for.inc

lor.lhs.false.i:                                  ; preds = %land.lhs.true
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 1, i64 0
  %rtuint.i = bitcast %union.rtunion_def* %arrayidx.i to i32*
  %6 = load i32* %rtuint.i, align 4, !tbaa !21
  %cmp1.i = icmp ugt i32 %6, 52
  br i1 %cmp1.i, label %if.then.i, label %use_reg.exit

if.then.i:                                        ; preds = %lor.lhs.false.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 2261, i8* getelementptr inbounds ([8 x i8]* @__FUNCTION__.use_reg, i64 0, i64 0)) #8
  unreachable

use_reg.exit:                                     ; preds = %lor.lhs.false.i
  %call.i = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %4) #5
  %7 = load %struct.rtx_def** %call_fusage, align 8, !tbaa !1
  %call2.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 0, %struct.rtx_def* %call.i, %struct.rtx_def* %7) #5
  store %struct.rtx_def* %call2.i, %struct.rtx_def** %call_fusage, align 8, !tbaa !1
  %.pre = load %struct.rtvec_def** %rtvec, align 8, !tbaa !1
  br label %for.inc

for.inc:                                          ; preds = %for.body, %land.lhs.true, %use_reg.exit
  %8 = phi %struct.rtvec_def* [ %2, %for.body ], [ %2, %land.lhs.true ], [ %.pre, %use_reg.exit ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %num_elem = getelementptr inbounds %struct.rtvec_def* %8, i64 0, i32 0
  %9 = load i32* %num_elem, align 4, !tbaa !63
  %10 = trunc i64 %indvars.iv.next to i32
  %cmp = icmp slt i32 %10, %9
  br i1 %cmp, label %for.body, label %for.end

for.end:                                          ; preds = %for.inc, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @can_store_by_pieces(i64 %len, %struct.rtx_def* (i8*, i64, i32)* nocapture %constfun, i8* %constfundata, i32 %align) #0 {
entry:
  %0 = load i32* getelementptr inbounds ([9 x i32]* @class_narrowest_mode, i64 0, i64 1), align 4, !tbaa !5
  %cmp11.i = icmp eq i32 %0, 0
  br i1 %cmp11.i, label %while.end.i, label %for.body.lr.ph.i

for.body.lr.ph.i:                                 ; preds = %entry, %if.end24.i
  %l.addr.06.i = phi i64 [ %l.addr.1.i, %if.end24.i ], [ %len, %entry ]
  %max_size.05.i = phi i64 [ %conv27.i, %if.end24.i ], [ 17, %entry ]
  %n_insns.04.i = phi i64 [ %n_insns.1.i, %if.end24.i ], [ 0, %entry ]
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i, %for.body.lr.ph.i
  %tmode.03.i = phi i32 [ %0, %for.body.lr.ph.i ], [ %conv6.i, %for.body.i ]
  %mode.02.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %tmode.0.mode.0.i, %for.body.i ]
  %idxprom.i = sext i32 %tmode.03.i to i64
  %arrayidx.i = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom.i
  %1 = load i8* %arrayidx.i, align 1, !tbaa !5
  %conv.i = zext i8 %1 to i64
  %cmp2.i = icmp ult i64 %conv.i, %max_size.05.i
  %tmode.0.mode.0.i = select i1 %cmp2.i, i32 %tmode.03.i, i32 %mode.02.i
  %arrayidx5.i = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom.i
  %2 = load i8* %arrayidx5.i, align 1, !tbaa !5
  %conv6.i = zext i8 %2 to i32
  %cmp1.i = icmp eq i8 %2, 0
  br i1 %cmp1.i, label %for.end.i, label %for.body.i

for.end.i:                                        ; preds = %for.body.i
  %cmp7.i = icmp eq i32 %tmode.0.mode.0.i, 0
  br i1 %cmp7.i, label %while.end.i, label %if.end10.i

if.end10.i:                                       ; preds = %for.end.i
  %idxprom11.i = sext i32 %tmode.0.mode.0.i to i64
  %3 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 30), align 8, !tbaa !1
  %insn_code.i = getelementptr inbounds %struct.optab* %3, i64 0, i32 1, i64 %idxprom11.i, i32 0
  %4 = load i32* %insn_code.i, align 4, !tbaa !23
  %cmp13.i = icmp eq i32 %4, 1317
  br i1 %cmp13.i, label %if.end24.i, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %if.end10.i
  %call.i = tail call i32 @get_mode_alignment(i32 %tmode.0.mode.0.i) #5
  %cmp15.i = icmp ult i32 %call.i, 129
  br i1 %cmp15.i, label %if.then17.i, label %if.end24.i

if.then17.i:                                      ; preds = %land.lhs.true.i
  %arrayidx19.i = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom11.i
  %5 = load i8* %arrayidx19.i, align 1, !tbaa !5
  %conv20.i = zext i8 %5 to i64
  %div.i = udiv i64 %l.addr.06.i, %conv20.i
  %add.i = add i64 %div.i, %n_insns.04.i
  %rem.i = urem i64 %l.addr.06.i, %conv20.i
  br label %if.end24.i

if.end24.i:                                       ; preds = %if.then17.i, %land.lhs.true.i, %if.end10.i
  %n_insns.1.i = phi i64 [ %add.i, %if.then17.i ], [ %n_insns.04.i, %land.lhs.true.i ], [ %n_insns.04.i, %if.end10.i ]
  %l.addr.1.i = phi i64 [ %rem.i, %if.then17.i ], [ %l.addr.06.i, %land.lhs.true.i ], [ %l.addr.06.i, %if.end10.i ]
  %arrayidx26.i = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom11.i
  %6 = load i8* %arrayidx26.i, align 1, !tbaa !5
  %conv27.i = zext i8 %6 to i64
  %cmp.i = icmp ugt i8 %6, 1
  br i1 %cmp.i, label %for.body.lr.ph.i, label %while.end.i

while.end.i:                                      ; preds = %if.end24.i, %for.end.i, %entry
  %l.addr.0.lcssa.i = phi i64 [ %len, %entry ], [ %l.addr.1.i, %if.end24.i ], [ %l.addr.06.i, %for.end.i ]
  %n_insns.0.lcssa.i = phi i64 [ 0, %entry ], [ %n_insns.1.i, %if.end24.i ], [ %n_insns.04.i, %for.end.i ]
  %tobool.i = icmp eq i64 %l.addr.0.lcssa.i, 0
  br i1 %tobool.i, label %move_by_pieces_ninsns.exit, label %if.then28.i

if.then28.i:                                      ; preds = %while.end.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 1542, i8* getelementptr inbounds ([22 x i8]* @__FUNCTION__.move_by_pieces_ninsns, i64 0, i64 0)) #8
  unreachable

move_by_pieces_ninsns.exit:                       ; preds = %while.end.i
  %7 = load i32* @optimize_size, align 4, !tbaa !21
  %tobool = icmp eq i32 %7, 0
  br i1 %tobool, label %cond.false, label %cond.end

cond.false:                                       ; preds = %move_by_pieces_ninsns.exit
  %8 = load %struct.processor_costs** @ix86_cost, align 8, !tbaa !1
  %move_ratio = getelementptr inbounds %struct.processor_costs* %8, i64 0, i32 10
  %9 = load i32* %move_ratio, align 4, !tbaa !29
  %phitmp = zext i32 %9 to i64
  br label %cond.end

cond.end:                                         ; preds = %move_by_pieces_ninsns.exit, %cond.false
  %cond = phi i64 [ %phitmp, %cond.false ], [ 3, %move_by_pieces_ninsns.exit ]
  %cmp = icmp ult i64 %n_insns.0.lcssa.i, %cond
  br i1 %cmp, label %for.body, label %return

for.body:                                         ; preds = %cond.end
  %10 = load i32* @target_flags, align 4, !tbaa !21
  %and = lshr i32 %10, 23
  %11 = and i32 %and, 4
  %add = add i32 %11, 5
  %cmp794 = icmp eq i32 %add, 1
  br i1 %cmp794, label %while.end57, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %for.body
  %conv685 = zext i32 %add to i64
  br label %while.body

while.body:                                       ; preds = %while.body.lr.ph, %if.end53
  %max_size.098 = phi i64 [ %conv685, %while.body.lr.ph ], [ %conv56, %if.end53 ]
  %mode.097 = phi i32 [ 0, %while.body.lr.ph ], [ %mode.1.lcssa, %if.end53 ]
  %offset.196 = phi i64 [ 0, %while.body.lr.ph ], [ %offset.5, %if.end53 ]
  %l.095 = phi i64 [ %len, %while.body.lr.ph ], [ %l.2, %if.end53 ]
  br i1 %cmp11.i, label %for.end, label %for.body12

for.body12:                                       ; preds = %while.body, %for.body12
  %tmode.088 = phi i32 [ %conv20, %for.body12 ], [ %0, %while.body ]
  %mode.187 = phi i32 [ %tmode.0.mode.1, %for.body12 ], [ %mode.097, %while.body ]
  %idxprom = sext i32 %tmode.088 to i64
  %arrayidx = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom
  %12 = load i8* %arrayidx, align 1, !tbaa !5
  %conv13 = zext i8 %12 to i64
  %cmp14 = icmp ult i64 %conv13, %max_size.098
  %tmode.0.mode.1 = select i1 %cmp14, i32 %tmode.088, i32 %mode.187
  %arrayidx19 = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom
  %13 = load i8* %arrayidx19, align 1, !tbaa !5
  %conv20 = zext i8 %13 to i32
  %cmp10 = icmp eq i8 %13, 0
  br i1 %cmp10, label %for.end, label %for.body12

for.end:                                          ; preds = %for.body12, %while.body
  %mode.1.lcssa = phi i32 [ %mode.097, %while.body ], [ %tmode.0.mode.1, %for.body12 ]
  %cmp21 = icmp eq i32 %mode.1.lcssa, 0
  br i1 %cmp21, label %while.end57, label %if.end24

if.end24:                                         ; preds = %for.end
  %idxprom25 = sext i32 %mode.1.lcssa to i64
  %14 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 30), align 8, !tbaa !1
  %insn_code = getelementptr inbounds %struct.optab* %14, i64 0, i32 1, i64 %idxprom25, i32 0
  %15 = load i32* %insn_code, align 4, !tbaa !23
  %cmp27 = icmp eq i32 %15, 1317
  br i1 %cmp27, label %if.end53, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end24
  %call29 = tail call i32 @get_mode_alignment(i32 %mode.1.lcssa) #5
  %cmp30 = icmp ult i32 %call29, 129
  br i1 %cmp30, label %if.then32, label %if.end53

if.then32:                                        ; preds = %land.lhs.true
  %arrayidx34 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom25
  %16 = load i8* %arrayidx34, align 1, !tbaa !5
  %conv37 = zext i8 %16 to i64
  %cmp3889 = icmp ult i64 %l.095, %conv37
  br i1 %cmp3889, label %if.end53, label %while.body40

while.body40:                                     ; preds = %if.then32, %while.body40
  %offset.291 = phi i64 [ %offset.4, %while.body40 ], [ %offset.196, %if.then32 ]
  %l.190 = phi i64 [ %sub52, %while.body40 ], [ %l.095, %if.then32 ]
  %call45 = tail call %struct.rtx_def* %constfun(i8* %constfundata, i64 %offset.291, i32 %mode.1.lcssa) #5
  %offset.4 = add nsw i64 %offset.291, %conv37
  %sub52 = sub i64 %l.190, %conv37
  %cmp38 = icmp ult i64 %sub52, %conv37
  br i1 %cmp38, label %if.end53, label %while.body40

if.end53:                                         ; preds = %while.body40, %if.then32, %if.end24, %land.lhs.true
  %l.2 = phi i64 [ %l.095, %land.lhs.true ], [ %l.095, %if.end24 ], [ %l.095, %if.then32 ], [ %sub52, %while.body40 ]
  %offset.5 = phi i64 [ %offset.196, %land.lhs.true ], [ %offset.196, %if.end24 ], [ %offset.196, %if.then32 ], [ %offset.4, %while.body40 ]
  %arrayidx55 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom25
  %17 = load i8* %arrayidx55, align 1, !tbaa !5
  %conv56 = zext i8 %17 to i64
  %cmp7 = icmp ugt i8 %17, 1
  br i1 %cmp7, label %while.body, label %while.end57

while.end57:                                      ; preds = %if.end53, %for.end, %for.body
  %l.0.lcssa = phi i64 [ %len, %for.body ], [ %l.2, %if.end53 ], [ %l.095, %for.end ]
  %cmp58 = icmp eq i64 %l.0.lcssa, 0
  br i1 %cmp58, label %return, label %if.then60

if.then60:                                        ; preds = %while.end57
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 2378, i8* getelementptr inbounds ([20 x i8]* @__FUNCTION__.can_store_by_pieces, i64 0, i64 0)) #8
  unreachable

return:                                           ; preds = %while.end57, %cond.end
  %retval.0 = phi i32 [ 0, %cond.end ], [ 1, %while.end57 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define void @store_by_pieces(%struct.rtx_def* %to, i64 %len, %struct.rtx_def* (i8*, i64, i32)* %constfun, i8* %constfundata, i32 %align) #0 {
entry:
  %data = alloca %struct.store_by_pieces, align 8
  %0 = bitcast %struct.store_by_pieces* %data to i8*
  call void @llvm.lifetime.start(i64 64, i8* %0) #5
  %1 = load i32* getelementptr inbounds ([9 x i32]* @class_narrowest_mode, i64 0, i64 1), align 4, !tbaa !5
  %cmp11.i = icmp eq i32 %1, 0
  br i1 %cmp11.i, label %while.end.i, label %for.body.lr.ph.i

for.body.lr.ph.i:                                 ; preds = %entry, %if.end24.i
  %l.addr.06.i = phi i64 [ %l.addr.1.i, %if.end24.i ], [ %len, %entry ]
  %max_size.05.i = phi i64 [ %conv27.i, %if.end24.i ], [ 17, %entry ]
  %n_insns.04.i = phi i64 [ %n_insns.1.i, %if.end24.i ], [ 0, %entry ]
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i, %for.body.lr.ph.i
  %tmode.03.i = phi i32 [ %1, %for.body.lr.ph.i ], [ %conv6.i, %for.body.i ]
  %mode.02.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %tmode.0.mode.0.i, %for.body.i ]
  %idxprom.i = sext i32 %tmode.03.i to i64
  %arrayidx.i = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom.i
  %2 = load i8* %arrayidx.i, align 1, !tbaa !5
  %conv.i = zext i8 %2 to i64
  %cmp2.i = icmp ult i64 %conv.i, %max_size.05.i
  %tmode.0.mode.0.i = select i1 %cmp2.i, i32 %tmode.03.i, i32 %mode.02.i
  %arrayidx5.i = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom.i
  %3 = load i8* %arrayidx5.i, align 1, !tbaa !5
  %conv6.i = zext i8 %3 to i32
  %cmp1.i = icmp eq i8 %3, 0
  br i1 %cmp1.i, label %for.end.i, label %for.body.i

for.end.i:                                        ; preds = %for.body.i
  %cmp7.i = icmp eq i32 %tmode.0.mode.0.i, 0
  br i1 %cmp7.i, label %while.end.i, label %if.end10.i

if.end10.i:                                       ; preds = %for.end.i
  %idxprom11.i = sext i32 %tmode.0.mode.0.i to i64
  %4 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 30), align 8, !tbaa !1
  %insn_code.i = getelementptr inbounds %struct.optab* %4, i64 0, i32 1, i64 %idxprom11.i, i32 0
  %5 = load i32* %insn_code.i, align 4, !tbaa !23
  %cmp13.i = icmp eq i32 %5, 1317
  br i1 %cmp13.i, label %if.end24.i, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %if.end10.i
  %call.i = tail call i32 @get_mode_alignment(i32 %tmode.0.mode.0.i) #5
  %cmp15.i = icmp ult i32 %call.i, 129
  br i1 %cmp15.i, label %if.then17.i, label %if.end24.i

if.then17.i:                                      ; preds = %land.lhs.true.i
  %arrayidx19.i = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom11.i
  %6 = load i8* %arrayidx19.i, align 1, !tbaa !5
  %conv20.i = zext i8 %6 to i64
  %div.i = udiv i64 %l.addr.06.i, %conv20.i
  %add.i = add i64 %div.i, %n_insns.04.i
  %rem.i = urem i64 %l.addr.06.i, %conv20.i
  br label %if.end24.i

if.end24.i:                                       ; preds = %if.then17.i, %land.lhs.true.i, %if.end10.i
  %n_insns.1.i = phi i64 [ %add.i, %if.then17.i ], [ %n_insns.04.i, %land.lhs.true.i ], [ %n_insns.04.i, %if.end10.i ]
  %l.addr.1.i = phi i64 [ %rem.i, %if.then17.i ], [ %l.addr.06.i, %land.lhs.true.i ], [ %l.addr.06.i, %if.end10.i ]
  %arrayidx26.i = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom11.i
  %7 = load i8* %arrayidx26.i, align 1, !tbaa !5
  %conv27.i = zext i8 %7 to i64
  %cmp.i = icmp ugt i8 %7, 1
  br i1 %cmp.i, label %for.body.lr.ph.i, label %while.end.i

while.end.i:                                      ; preds = %if.end24.i, %for.end.i, %entry
  %l.addr.0.lcssa.i = phi i64 [ %len, %entry ], [ %l.addr.1.i, %if.end24.i ], [ %l.addr.06.i, %for.end.i ]
  %n_insns.0.lcssa.i = phi i64 [ 0, %entry ], [ %n_insns.1.i, %if.end24.i ], [ %n_insns.04.i, %for.end.i ]
  %tobool.i = icmp eq i64 %l.addr.0.lcssa.i, 0
  br i1 %tobool.i, label %move_by_pieces_ninsns.exit, label %if.then28.i

if.then28.i:                                      ; preds = %while.end.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 1542, i8* getelementptr inbounds ([22 x i8]* @__FUNCTION__.move_by_pieces_ninsns, i64 0, i64 0)) #8
  unreachable

move_by_pieces_ninsns.exit:                       ; preds = %while.end.i
  %8 = load i32* @optimize_size, align 4, !tbaa !21
  %tobool = icmp eq i32 %8, 0
  br i1 %tobool, label %cond.false, label %cond.end

cond.false:                                       ; preds = %move_by_pieces_ninsns.exit
  %9 = load %struct.processor_costs** @ix86_cost, align 8, !tbaa !1
  %move_ratio = getelementptr inbounds %struct.processor_costs* %9, i64 0, i32 10
  %10 = load i32* %move_ratio, align 4, !tbaa !29
  %phitmp = zext i32 %10 to i64
  br label %cond.end

cond.end:                                         ; preds = %move_by_pieces_ninsns.exit, %cond.false
  %cond = phi i64 [ %phitmp, %cond.false ], [ 3, %move_by_pieces_ninsns.exit ]
  %cmp = icmp ult i64 %n_insns.0.lcssa.i, %cond
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 2400, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.store_by_pieces, i64 0, i64 0)) #8
  unreachable

if.end:                                           ; preds = %cond.end
  %call2 = tail call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %to, i32 1)
  %constfun3 = getelementptr inbounds %struct.store_by_pieces* %data, i64 0, i32 6
  store %struct.rtx_def* (i8*, i64, i32)* %constfun, %struct.rtx_def* (i8*, i64, i32)** %constfun3, align 8, !tbaa !65
  %constfundata4 = getelementptr inbounds %struct.store_by_pieces* %data, i64 0, i32 7
  store i8* %constfundata, i8** %constfundata4, align 8, !tbaa !67
  %len5 = getelementptr inbounds %struct.store_by_pieces* %data, i64 0, i32 4
  store i64 %len, i64* %len5, align 8, !tbaa !68
  %to6 = getelementptr inbounds %struct.store_by_pieces* %data, i64 0, i32 0
  store %struct.rtx_def* %call2, %struct.rtx_def** %to6, align 8, !tbaa !69
  call fastcc void @store_by_pieces_1(%struct.store_by_pieces* %data)
  call void @llvm.lifetime.end(i64 64, i8* %0) #5
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @store_by_pieces_1(%struct.store_by_pieces* nocapture %data) #0 {
entry:
  %to = getelementptr inbounds %struct.store_by_pieces* %data, i64 0, i32 0
  %0 = load %struct.rtx_def** %to, align 8, !tbaa !69
  %arrayidx = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %2 = load i32* @target_flags, align 4, !tbaa !21
  %and = lshr i32 %2, 23
  %3 = and i32 %and, 4
  %add = add i32 %3, 5
  %conv1 = zext i32 %add to i64
  %offset = getelementptr inbounds %struct.store_by_pieces* %data, i64 0, i32 5
  store i64 0, i64* %offset, align 8, !tbaa !70
  %to_addr1 = getelementptr inbounds %struct.store_by_pieces* %data, i64 0, i32 1
  store %struct.rtx_def* %1, %struct.rtx_def** %to_addr1, align 8, !tbaa !71
  %4 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 0
  %bf.load = load i32* %4, align 8
  %5 = and i32 %bf.load, 65532
  %6 = icmp eq i32 %5, 96
  %lor.ext = zext i1 %6 to i32
  %autinc_to = getelementptr inbounds %struct.store_by_pieces* %data, i64 0, i32 2
  store i32 %lor.ext, i32* %autinc_to, align 4, !tbaa !72
  %explicit_inc_to = getelementptr inbounds %struct.store_by_pieces* %data, i64 0, i32 3
  store i32 0, i32* %explicit_inc_to, align 4, !tbaa !73
  %bf.load16 = load i32* %4, align 8
  %7 = and i32 %bf.load16, 65533
  %8 = icmp eq i32 %7, 96
  %lor.ext26 = zext i1 %8 to i32
  %reverse = getelementptr inbounds %struct.store_by_pieces* %data, i64 0, i32 8
  store i32 %lor.ext26, i32* %reverse, align 4, !tbaa !74
  br i1 %8, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %len = getelementptr inbounds %struct.store_by_pieces* %data, i64 0, i32 4
  %9 = load i64* %len, align 8, !tbaa !68
  store i64 %9, i64* %offset, align 8, !tbaa !70
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  br i1 %6, label %while.cond.preheader, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end
  %len32 = getelementptr inbounds %struct.store_by_pieces* %data, i64 0, i32 4
  %10 = load i64* %len32, align 8, !tbaa !68
  %11 = load i32* getelementptr inbounds ([9 x i32]* @class_narrowest_mode, i64 0, i64 1), align 4, !tbaa !5
  %cmp11.i = icmp eq i32 %11, 0
  br i1 %cmp11.i, label %while.end.i, label %for.body.lr.ph.i

for.body.lr.ph.i:                                 ; preds = %land.lhs.true, %if.end24.i
  %l.addr.06.i = phi i64 [ %l.addr.1.i, %if.end24.i ], [ %10, %land.lhs.true ]
  %max_size.05.i = phi i64 [ %conv27.i, %if.end24.i ], [ 17, %land.lhs.true ]
  %n_insns.04.i = phi i64 [ %n_insns.1.i, %if.end24.i ], [ 0, %land.lhs.true ]
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i, %for.body.lr.ph.i
  %tmode.03.i = phi i32 [ %11, %for.body.lr.ph.i ], [ %conv6.i, %for.body.i ]
  %mode.02.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %tmode.0.mode.0.i, %for.body.i ]
  %idxprom.i = sext i32 %tmode.03.i to i64
  %arrayidx.i = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom.i
  %12 = load i8* %arrayidx.i, align 1, !tbaa !5
  %conv.i = zext i8 %12 to i64
  %cmp2.i = icmp ult i64 %conv.i, %max_size.05.i
  %tmode.0.mode.0.i = select i1 %cmp2.i, i32 %tmode.03.i, i32 %mode.02.i
  %arrayidx5.i = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom.i
  %13 = load i8* %arrayidx5.i, align 1, !tbaa !5
  %conv6.i = zext i8 %13 to i32
  %cmp1.i = icmp eq i8 %13, 0
  br i1 %cmp1.i, label %for.end.i, label %for.body.i

for.end.i:                                        ; preds = %for.body.i
  %cmp7.i = icmp eq i32 %tmode.0.mode.0.i, 0
  br i1 %cmp7.i, label %while.end.i, label %if.end10.i

if.end10.i:                                       ; preds = %for.end.i
  %idxprom11.i = sext i32 %tmode.0.mode.0.i to i64
  %14 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 30), align 8, !tbaa !1
  %insn_code.i = getelementptr inbounds %struct.optab* %14, i64 0, i32 1, i64 %idxprom11.i, i32 0
  %15 = load i32* %insn_code.i, align 4, !tbaa !23
  %cmp13.i = icmp eq i32 %15, 1317
  br i1 %cmp13.i, label %if.end24.i, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %if.end10.i
  %call.i = tail call i32 @get_mode_alignment(i32 %tmode.0.mode.0.i) #5
  %cmp15.i = icmp ult i32 %call.i, 129
  br i1 %cmp15.i, label %if.then17.i, label %if.end24.i

if.then17.i:                                      ; preds = %land.lhs.true.i
  %arrayidx19.i = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom11.i
  %16 = load i8* %arrayidx19.i, align 1, !tbaa !5
  %conv20.i = zext i8 %16 to i64
  %div.i = udiv i64 %l.addr.06.i, %conv20.i
  %add.i = add i64 %div.i, %n_insns.04.i
  %rem.i = urem i64 %l.addr.06.i, %conv20.i
  br label %if.end24.i

if.end24.i:                                       ; preds = %if.then17.i, %land.lhs.true.i, %if.end10.i
  %n_insns.1.i = phi i64 [ %add.i, %if.then17.i ], [ %n_insns.04.i, %land.lhs.true.i ], [ %n_insns.04.i, %if.end10.i ]
  %l.addr.1.i = phi i64 [ %rem.i, %if.then17.i ], [ %l.addr.06.i, %land.lhs.true.i ], [ %l.addr.06.i, %if.end10.i ]
  %arrayidx26.i = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom11.i
  %17 = load i8* %arrayidx26.i, align 1, !tbaa !5
  %conv27.i = zext i8 %17 to i64
  %cmp.i = icmp ugt i8 %17, 1
  br i1 %cmp.i, label %for.body.lr.ph.i, label %while.end.i

while.end.i:                                      ; preds = %if.end24.i, %for.end.i, %land.lhs.true
  %l.addr.0.lcssa.i = phi i64 [ %10, %land.lhs.true ], [ %l.addr.1.i, %if.end24.i ], [ %l.addr.06.i, %for.end.i ]
  %n_insns.0.lcssa.i = phi i64 [ 0, %land.lhs.true ], [ %n_insns.1.i, %if.end24.i ], [ %n_insns.04.i, %for.end.i ]
  %tobool.i = icmp eq i64 %l.addr.0.lcssa.i, 0
  br i1 %tobool.i, label %move_by_pieces_ninsns.exit, label %if.then28.i

if.then28.i:                                      ; preds = %while.end.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 1542, i8* getelementptr inbounds ([22 x i8]* @__FUNCTION__.move_by_pieces_ninsns, i64 0, i64 0)) #8
  unreachable

move_by_pieces_ninsns.exit:                       ; preds = %while.end.i
  %cmp33 = icmp ugt i64 %n_insns.0.lcssa.i, 2
  br i1 %cmp33, label %if.then35, label %while.cond.preheader

if.then35:                                        ; preds = %move_by_pieces_ninsns.exit
  br i1 %cmp11.i, label %for.end, label %for.body

for.body:                                         ; preds = %if.then35, %for.body
  %tmode.020 = phi i32 [ %conv46, %for.body ], [ %11, %if.then35 ]
  %mode.019 = phi i32 [ %tmode.0.mode.0, %for.body ], [ 0, %if.then35 ]
  %idxprom = sext i32 %tmode.020 to i64
  %arrayidx38 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom
  %18 = load i8* %arrayidx38, align 1, !tbaa !5
  %conv39 = zext i8 %18 to i64
  %cmp40 = icmp ult i64 %conv39, %conv1
  %tmode.0.mode.0 = select i1 %cmp40, i32 %tmode.020, i32 %mode.019
  %arrayidx45 = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom
  %19 = load i8* %arrayidx45, align 1, !tbaa !5
  %conv46 = zext i8 %19 to i32
  %cmp36 = icmp eq i8 %19, 0
  br i1 %cmp36, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %if.then35
  %mode.0.lcssa = phi i32 [ 0, %if.then35 ], [ %tmode.0.mode.0, %for.body ]
  %20 = load i32* %autinc_to, align 4, !tbaa !72
  %tobool48 = icmp eq i32 %20, 0
  br i1 %tobool48, label %land.lhs.true49, label %while.cond.preheader

land.lhs.true49:                                  ; preds = %for.end
  %bf.load50 = load i32* %4, align 8
  %bf.clear51 = and i32 %bf.load50, 65535
  switch i32 %bf.clear51, label %while.cond.preheader [
    i32 67, label %if.then89
    i32 68, label %if.then89
    i32 54, label %if.then89
    i32 55, label %if.then89
    i32 58, label %if.then89
    i32 134, label %if.then89
    i32 56, label %if.then89
    i32 140, label %if.then89
  ]

if.then89:                                        ; preds = %land.lhs.true49, %land.lhs.true49, %land.lhs.true49, %land.lhs.true49, %land.lhs.true49, %land.lhs.true49, %land.lhs.true49, %land.lhs.true49
  %call90 = tail call %struct.rtx_def* @copy_addr_to_reg(%struct.rtx_def* %1) #5
  store %struct.rtx_def* %call90, %struct.rtx_def** %to_addr1, align 8, !tbaa !71
  br label %while.cond.preheader

while.cond.preheader:                             ; preds = %if.end, %land.lhs.true49, %for.end, %if.then89, %move_by_pieces_ninsns.exit
  %mode.3.ph = phi i32 [ 0, %move_by_pieces_ninsns.exit ], [ %mode.0.lcssa, %if.then89 ], [ 0, %if.end ], [ %mode.0.lcssa, %for.end ], [ %mode.0.lcssa, %land.lhs.true49 ]
  %cmp9415 = icmp eq i32 %add, 1
  br i1 %cmp9415, label %while.cond.preheader.while.end_crit_edge, label %while.body.lr.ph

while.cond.preheader.while.end_crit_edge:         ; preds = %while.cond.preheader
  %len131.pre = getelementptr inbounds %struct.store_by_pieces* %data, i64 0, i32 4
  br label %while.end

while.body.lr.ph:                                 ; preds = %while.cond.preheader
  %21 = load i32* getelementptr inbounds ([9 x i32]* @class_narrowest_mode, i64 0, i64 1), align 4, !tbaa !5
  %cmp9712 = icmp eq i32 %21, 0
  %len.i = getelementptr inbounds %struct.store_by_pieces* %data, i64 0, i32 4
  %constfun.i = getelementptr inbounds %struct.store_by_pieces* %data, i64 0, i32 6
  %constfundata.i = getelementptr inbounds %struct.store_by_pieces* %data, i64 0, i32 7
  br label %while.body

while.body:                                       ; preds = %while.body.lr.ph, %if.end127
  %mode.317 = phi i32 [ %mode.3.ph, %while.body.lr.ph ], [ %mode.4.lcssa, %if.end127 ]
  %max_size.016 = phi i64 [ %conv1, %while.body.lr.ph ], [ %conv130, %if.end127 ]
  br i1 %cmp9712, label %for.end111, label %for.body99

for.body99:                                       ; preds = %while.body, %for.body99
  %tmode.114 = phi i32 [ %conv110, %for.body99 ], [ %21, %while.body ]
  %mode.413 = phi i32 [ %tmode.1.mode.4, %for.body99 ], [ %mode.317, %while.body ]
  %idxprom100 = sext i32 %tmode.114 to i64
  %arrayidx101 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom100
  %22 = load i8* %arrayidx101, align 1, !tbaa !5
  %conv102 = zext i8 %22 to i64
  %cmp103 = icmp ult i64 %conv102, %max_size.016
  %tmode.1.mode.4 = select i1 %cmp103, i32 %tmode.114, i32 %mode.413
  %arrayidx109 = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom100
  %23 = load i8* %arrayidx109, align 1, !tbaa !5
  %conv110 = zext i8 %23 to i32
  %cmp97 = icmp eq i8 %23, 0
  br i1 %cmp97, label %for.end111, label %for.body99

for.end111:                                       ; preds = %for.body99, %while.body
  %mode.4.lcssa = phi i32 [ %mode.317, %while.body ], [ %tmode.1.mode.4, %for.body99 ]
  %cmp112 = icmp eq i32 %mode.4.lcssa, 0
  br i1 %cmp112, label %while.end, label %if.end115

if.end115:                                        ; preds = %for.end111
  %idxprom116 = sext i32 %mode.4.lcssa to i64
  %24 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 30), align 8, !tbaa !1
  %insn_code = getelementptr inbounds %struct.optab* %24, i64 0, i32 1, i64 %idxprom116, i32 0
  %25 = load i32* %insn_code, align 4, !tbaa !23
  %cmp118 = icmp eq i32 %25, 1317
  br i1 %cmp118, label %if.end127, label %land.lhs.true120

land.lhs.true120:                                 ; preds = %if.end115
  %call121 = tail call i32 @get_mode_alignment(i32 %mode.4.lcssa) #5
  %cmp122 = icmp ult i32 %call121, 129
  br i1 %cmp122, label %if.then124, label %if.end127

if.then124:                                       ; preds = %land.lhs.true120
  %idxprom125 = sext i32 %25 to i64
  %genfun = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom125, i32 2
  %26 = load %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun, align 8, !tbaa !25
  %arrayidx.i3 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom116
  %27 = load i8* %arrayidx.i3, align 1, !tbaa !5
  %28 = load i64* %len.i, align 8, !tbaa !68
  %conv1.i = zext i8 %27 to i64
  %cmp41.i = icmp ult i64 %28, %conv1.i
  br i1 %cmp41.i, label %if.end127, label %while.body.lr.ph.i

while.body.lr.ph.i:                               ; preds = %if.then124
  %.pre.i = load i32* %reverse, align 4, !tbaa !74
  br label %while.body.i

while.body.i:                                     ; preds = %if.end20.i, %while.body.lr.ph.i
  %29 = phi i32 [ %.pre.i, %while.body.lr.ph.i ], [ %39, %if.end20.i ]
  %tobool.i4 = icmp eq i32 %29, 0
  br i1 %tobool.i4, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %while.body.i
  %30 = load i64* %offset, align 8, !tbaa !70
  %sub.i = sub nsw i64 %30, %conv1.i
  store i64 %sub.i, i64* %offset, align 8, !tbaa !70
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %while.body.i
  %31 = load i32* %autinc_to, align 4, !tbaa !72
  %tobool4.i = icmp eq i32 %31, 0
  %32 = load %struct.rtx_def** %to, align 8, !tbaa !69
  br i1 %tobool4.i, label %if.else.i, label %if.then5.i

if.then5.i:                                       ; preds = %if.end.i
  %33 = load %struct.rtx_def** %to_addr1, align 8, !tbaa !71
  %34 = load i64* %offset, align 8, !tbaa !70
  %call.i5 = tail call %struct.rtx_def* @adjust_automodify_address_1(%struct.rtx_def* %32, i32 %mode.4.lcssa, %struct.rtx_def* %33, i64 %34, i32 1) #5
  br label %if.end10.i6

if.else.i:                                        ; preds = %if.end.i
  %35 = load i64* %offset, align 8, !tbaa !70
  %call9.i = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %32, i32 %mode.4.lcssa, i64 %35, i32 1, i32 1) #5
  br label %if.end10.i6

if.end10.i6:                                      ; preds = %if.else.i, %if.then5.i
  %to1.0.i = phi %struct.rtx_def* [ %call.i5, %if.then5.i ], [ %call9.i, %if.else.i ]
  %36 = load %struct.rtx_def* (i8*, i64, i32)** %constfun.i, align 8, !tbaa !65
  %37 = load i8** %constfundata.i, align 8, !tbaa !67
  %38 = load i64* %offset, align 8, !tbaa !70
  %call12.i = tail call %struct.rtx_def* %36(i8* %37, i64 %38, i32 %mode.4.lcssa) #5
  %call13.i = tail call %struct.rtx_def* (%struct.rtx_def*, ...)* %26(%struct.rtx_def* %to1.0.i, %struct.rtx_def* %call12.i) #5
  %call14.i = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call13.i) #5
  %39 = load i32* %reverse, align 4, !tbaa !74
  %tobool16.i = icmp eq i32 %39, 0
  br i1 %tobool16.i, label %if.then17.i8, label %if.end20.i

if.then17.i8:                                     ; preds = %if.end10.i6
  %40 = load i64* %offset, align 8, !tbaa !70
  %add.i7 = add nsw i64 %40, %conv1.i
  store i64 %add.i7, i64* %offset, align 8, !tbaa !70
  br label %if.end20.i

if.end20.i:                                       ; preds = %if.then17.i8, %if.end10.i6
  %41 = load i64* %len.i, align 8, !tbaa !68
  %sub23.i = sub i64 %41, %conv1.i
  store i64 %sub23.i, i64* %len.i, align 8, !tbaa !68
  %cmp.i9 = icmp ult i64 %sub23.i, %conv1.i
  br i1 %cmp.i9, label %if.end127, label %while.body.i

if.end127:                                        ; preds = %if.end20.i, %if.then124, %if.end115, %land.lhs.true120
  %arrayidx129 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom116
  %42 = load i8* %arrayidx129, align 1, !tbaa !5
  %conv130 = zext i8 %42 to i64
  %cmp94 = icmp ugt i8 %42, 1
  br i1 %cmp94, label %while.body, label %while.end

while.end:                                        ; preds = %if.end127, %for.end111, %while.cond.preheader.while.end_crit_edge
  %len131.pre-phi = phi i64* [ %len131.pre, %while.cond.preheader.while.end_crit_edge ], [ %len.i, %for.end111 ], [ %len.i, %if.end127 ]
  %43 = load i64* %len131.pre-phi, align 8, !tbaa !68
  %cmp132 = icmp eq i64 %43, 0
  br i1 %cmp132, label %if.end135, label %if.then134

if.then134:                                       ; preds = %while.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 2524, i8* getelementptr inbounds ([18 x i8]* @__FUNCTION__.store_by_pieces_1, i64 0, i64 0)) #8
  unreachable

if.end135:                                        ; preds = %while.end
  ret void
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @clear_storage(%struct.rtx_def* %object, %struct.rtx_def* %size) #0 {
entry:
  %data.i = alloca %struct.store_by_pieces, align 8
  %0 = getelementptr inbounds %struct.rtx_def* %object, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 66
  br i1 %cmp, label %cond.true, label %cond.false8

cond.true:                                        ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %object, i64 0, i32 1, i64 1
  %rtmem = bitcast %union.rtunion_def* %arrayidx to %struct.mem_attrs**
  %1 = load %struct.mem_attrs** %rtmem, align 8, !tbaa !1
  %cmp2 = icmp eq %struct.mem_attrs* %1, null
  br i1 %cmp2, label %cond.end11, label %cond.true3

cond.true3:                                       ; preds = %cond.true
  %align7 = getelementptr inbounds %struct.mem_attrs* %1, i64 0, i32 4
  %2 = load i32* %align7, align 4, !tbaa !27
  br label %cond.end11

cond.false8:                                      ; preds = %entry
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear10 = and i32 %bf.lshr, 255
  %call = tail call i32 @get_mode_alignment(i32 %bf.clear10) #5
  %bf.load13.pre = load i32* %0, align 8
  br label %cond.end11

cond.end11:                                       ; preds = %cond.true, %cond.true3, %cond.false8
  %bf.load13 = phi i32 [ %bf.load13.pre, %cond.false8 ], [ %bf.load, %cond.true3 ], [ %bf.load, %cond.true ]
  %cond12 = phi i32 [ %call, %cond.false8 ], [ %2, %cond.true3 ], [ 8, %cond.true ]
  %bf.lshr14 = lshr i32 %bf.load13, 16
  %bf.clear15 = and i32 %bf.lshr14, 255
  %cmp16 = icmp eq i32 %bf.clear15, 51
  br i1 %cmp16, label %if.else, label %land.lhs.true

land.lhs.true:                                    ; preds = %cond.end11
  %3 = getelementptr inbounds %struct.rtx_def* %size, i64 0, i32 0
  %bf.load17 = load i32* %3, align 8
  %bf.clear18 = and i32 %bf.load17, 65535
  %cmp19 = icmp eq i32 %bf.clear18, 54
  br i1 %cmp19, label %land.lhs.true20, label %if.else

land.lhs.true20:                                  ; preds = %land.lhs.true
  %idxprom258 = zext i32 %bf.clear15 to i64
  %arrayidx24 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom258
  %4 = load i8* %arrayidx24, align 1, !tbaa !5
  %conv = zext i8 %4 to i32
  %rtwint = getelementptr inbounds %struct.rtx_def* %size, i64 0, i32 1, i64 0, i32 0
  %5 = load i64* %rtwint, align 8, !tbaa !22
  %conv27 = trunc i64 %5 to i32
  %cmp28 = icmp eq i32 %conv, %conv27
  br i1 %cmp28, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true20
  %arrayidx34 = getelementptr inbounds [3 x [59 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0, i64 %idxprom258
  %6 = load %struct.rtx_def** %arrayidx34, align 8, !tbaa !1
  %call35 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %object, %struct.rtx_def* %6)
  br label %return

if.else:                                          ; preds = %cond.end11, %land.lhs.true20, %land.lhs.true
  %call36 = tail call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %object, i32 1)
  %call37 = tail call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %size, i32 0)
  %7 = getelementptr inbounds %struct.rtx_def* %call37, i64 0, i32 0
  %bf.load38 = load i32* %7, align 8
  %bf.clear39 = and i32 %bf.load38, 65535
  %cmp40 = icmp eq i32 %bf.clear39, 54
  br i1 %cmp40, label %land.lhs.true42, label %if.else.if.else58_crit_edge

if.else.if.else58_crit_edge:                      ; preds = %if.else
  %.pre = load i32* getelementptr inbounds ([9 x i32]* @class_narrowest_mode, i64 0, i64 1), align 4, !tbaa !5
  br label %if.else58

land.lhs.true42:                                  ; preds = %if.else
  %rtwint45 = getelementptr inbounds %struct.rtx_def* %call37, i64 0, i32 1, i64 0, i32 0
  %8 = load i64* %rtwint45, align 8, !tbaa !22
  %9 = load i32* getelementptr inbounds ([9 x i32]* @class_narrowest_mode, i64 0, i64 1), align 4, !tbaa !5
  %cmp11.i = icmp eq i32 %9, 0
  br i1 %cmp11.i, label %while.end.i, label %for.body.lr.ph.i

for.body.lr.ph.i:                                 ; preds = %land.lhs.true42, %if.end24.i
  %l.addr.06.i = phi i64 [ %l.addr.1.i, %if.end24.i ], [ %8, %land.lhs.true42 ]
  %max_size.05.i = phi i64 [ %conv27.i, %if.end24.i ], [ 17, %land.lhs.true42 ]
  %n_insns.04.i = phi i64 [ %n_insns.1.i, %if.end24.i ], [ 0, %land.lhs.true42 ]
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i, %for.body.lr.ph.i
  %tmode.03.i = phi i32 [ %9, %for.body.lr.ph.i ], [ %conv6.i, %for.body.i ]
  %mode.02.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %tmode.0.mode.0.i, %for.body.i ]
  %idxprom.i = sext i32 %tmode.03.i to i64
  %arrayidx.i = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom.i
  %10 = load i8* %arrayidx.i, align 1, !tbaa !5
  %conv.i = zext i8 %10 to i64
  %cmp2.i = icmp ult i64 %conv.i, %max_size.05.i
  %tmode.0.mode.0.i = select i1 %cmp2.i, i32 %tmode.03.i, i32 %mode.02.i
  %arrayidx5.i = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom.i
  %11 = load i8* %arrayidx5.i, align 1, !tbaa !5
  %conv6.i = zext i8 %11 to i32
  %cmp1.i = icmp eq i8 %11, 0
  br i1 %cmp1.i, label %for.end.i, label %for.body.i

for.end.i:                                        ; preds = %for.body.i
  %cmp7.i = icmp eq i32 %tmode.0.mode.0.i, 0
  br i1 %cmp7.i, label %while.end.i, label %if.end10.i

if.end10.i:                                       ; preds = %for.end.i
  %idxprom11.i = sext i32 %tmode.0.mode.0.i to i64
  %12 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 30), align 8, !tbaa !1
  %insn_code.i = getelementptr inbounds %struct.optab* %12, i64 0, i32 1, i64 %idxprom11.i, i32 0
  %13 = load i32* %insn_code.i, align 4, !tbaa !23
  %cmp13.i = icmp eq i32 %13, 1317
  br i1 %cmp13.i, label %if.end24.i, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %if.end10.i
  %call.i = tail call i32 @get_mode_alignment(i32 %tmode.0.mode.0.i) #5
  %cmp15.i = icmp ult i32 %call.i, 129
  br i1 %cmp15.i, label %if.then17.i, label %if.end24.i

if.then17.i:                                      ; preds = %land.lhs.true.i
  %arrayidx19.i = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom11.i
  %14 = load i8* %arrayidx19.i, align 1, !tbaa !5
  %conv20.i = zext i8 %14 to i64
  %div.i = udiv i64 %l.addr.06.i, %conv20.i
  %add.i = add i64 %div.i, %n_insns.04.i
  %rem.i = urem i64 %l.addr.06.i, %conv20.i
  br label %if.end24.i

if.end24.i:                                       ; preds = %if.then17.i, %land.lhs.true.i, %if.end10.i
  %n_insns.1.i = phi i64 [ %add.i, %if.then17.i ], [ %n_insns.04.i, %land.lhs.true.i ], [ %n_insns.04.i, %if.end10.i ]
  %l.addr.1.i = phi i64 [ %rem.i, %if.then17.i ], [ %l.addr.06.i, %land.lhs.true.i ], [ %l.addr.06.i, %if.end10.i ]
  %arrayidx26.i = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom11.i
  %15 = load i8* %arrayidx26.i, align 1, !tbaa !5
  %conv27.i = zext i8 %15 to i64
  %cmp.i = icmp ugt i8 %15, 1
  br i1 %cmp.i, label %for.body.lr.ph.i, label %while.end.i

while.end.i:                                      ; preds = %if.end24.i, %for.end.i, %land.lhs.true42
  %l.addr.0.lcssa.i = phi i64 [ %8, %land.lhs.true42 ], [ %l.addr.1.i, %if.end24.i ], [ %l.addr.06.i, %for.end.i ]
  %n_insns.0.lcssa.i = phi i64 [ 0, %land.lhs.true42 ], [ %n_insns.1.i, %if.end24.i ], [ %n_insns.04.i, %for.end.i ]
  %tobool.i = icmp eq i64 %l.addr.0.lcssa.i, 0
  br i1 %tobool.i, label %move_by_pieces_ninsns.exit, label %if.then28.i

if.then28.i:                                      ; preds = %while.end.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 1542, i8* getelementptr inbounds ([22 x i8]* @__FUNCTION__.move_by_pieces_ninsns, i64 0, i64 0)) #8
  unreachable

move_by_pieces_ninsns.exit:                       ; preds = %while.end.i
  %16 = load i32* @optimize_size, align 4, !tbaa !21
  %tobool = icmp eq i32 %16, 0
  br i1 %tobool, label %cond.false48, label %cond.end49

cond.false48:                                     ; preds = %move_by_pieces_ninsns.exit
  %17 = load %struct.processor_costs** @ix86_cost, align 8, !tbaa !1
  %move_ratio = getelementptr inbounds %struct.processor_costs* %17, i64 0, i32 10
  %18 = load i32* %move_ratio, align 4, !tbaa !29
  %phitmp = zext i32 %18 to i64
  br label %cond.end49

cond.end49:                                       ; preds = %move_by_pieces_ninsns.exit, %cond.false48
  %cond50 = phi i64 [ %phitmp, %cond.false48 ], [ 3, %move_by_pieces_ninsns.exit ]
  %cmp52 = icmp ult i64 %n_insns.0.lcssa.i, %cond50
  br i1 %cmp52, label %if.then54, label %if.else58

if.then54:                                        ; preds = %cond.end49
  %19 = load i64* %rtwint45, align 8, !tbaa !22
  %20 = bitcast %struct.store_by_pieces* %data.i to i8*
  call void @llvm.lifetime.start(i64 64, i8* %20) #5
  %constfun.i = getelementptr inbounds %struct.store_by_pieces* %data.i, i64 0, i32 6
  store %struct.rtx_def* (i8*, i64, i32)* @clear_by_pieces_1, %struct.rtx_def* (i8*, i64, i32)** %constfun.i, align 8, !tbaa !65
  %constfundata.i = getelementptr inbounds %struct.store_by_pieces* %data.i, i64 0, i32 7
  store i8* null, i8** %constfundata.i, align 8, !tbaa !67
  %len1.i = getelementptr inbounds %struct.store_by_pieces* %data.i, i64 0, i32 4
  store i64 %19, i64* %len1.i, align 8, !tbaa !68
  %to2.i = getelementptr inbounds %struct.store_by_pieces* %data.i, i64 0, i32 0
  store %struct.rtx_def* %call36, %struct.rtx_def** %to2.i, align 8, !tbaa !69
  call fastcc void @store_by_pieces_1(%struct.store_by_pieces* %data.i) #5
  call void @llvm.lifetime.end(i64 64, i8* %20) #5
  br label %return

if.else58:                                        ; preds = %if.else.if.else58_crit_edge, %cond.end49
  %21 = phi i32 [ %.pre, %if.else.if.else58_crit_edge ], [ %9, %cond.end49 ]
  %div = lshr i32 %cond12, 3
  %conv59 = zext i32 %div to i64
  %call60 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv59) #5
  %cmp61260 = icmp eq i32 %21, 0
  br i1 %cmp61260, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.else58
  %rtwint75 = getelementptr inbounds %struct.rtx_def* %call37, i64 0, i32 1, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %mode.0261 = phi i32 [ %21, %for.body.lr.ph ], [ %conv133, %for.inc ]
  %idxprom63 = sext i32 %mode.0261 to i64
  %arrayidx64 = getelementptr inbounds [59 x i32]* @clrstr_optab, i64 0, i64 %idxprom63
  %22 = load i32* %arrayidx64, align 4, !tbaa !5
  %cmp65 = icmp eq i32 %22, 1317
  br i1 %cmp65, label %for.inc, label %land.lhs.true67

land.lhs.true67:                                  ; preds = %for.body
  %bf.load68 = load i32* %7, align 8
  %bf.clear69 = and i32 %bf.load68, 65535
  %cmp70 = icmp eq i32 %bf.clear69, 54
  br i1 %cmp70, label %land.lhs.true72, label %lor.lhs.false

land.lhs.true72:                                  ; preds = %land.lhs.true67
  %23 = load i64* %rtwint75, align 8, !tbaa !22
  %arrayidx77 = getelementptr inbounds [59 x i64]* @mode_mask_array, i64 0, i64 %idxprom63
  %24 = load i64* %arrayidx77, align 8, !tbaa !22
  %shr = lshr i64 %24, 1
  %cmp78 = icmp ugt i64 %23, %shr
  br i1 %cmp78, label %lor.lhs.false, label %land.lhs.true87

lor.lhs.false:                                    ; preds = %land.lhs.true72, %land.lhs.true67
  %arrayidx81 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom63
  %25 = load i16* %arrayidx81, align 2, !tbaa !19
  %conv82 = zext i16 %25 to i32
  %26 = load i32* @target_flags, align 4, !tbaa !21
  %and = lshr i32 %26, 20
  %27 = and i32 %and, 32
  %28 = add i32 %27, 32
  %cmp85 = icmp ult i32 %conv82, %28
  br i1 %cmp85, label %for.inc, label %land.lhs.true87

land.lhs.true87:                                  ; preds = %land.lhs.true72, %lor.lhs.false
  %idxprom88 = sext i32 %22 to i64
  %operand = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom88, i32 3
  %29 = load %struct.insn_operand_data** %operand, align 8, !tbaa !31
  %predicate = getelementptr inbounds %struct.insn_operand_data* %29, i64 0, i32 0
  %30 = load i32 (%struct.rtx_def*, i32)** %predicate, align 8, !tbaa !32
  %cmp91 = icmp eq i32 (%struct.rtx_def*, i32)* %30, null
  br i1 %cmp91, label %land.lhs.true96, label %lor.lhs.false93

lor.lhs.false93:                                  ; preds = %land.lhs.true87
  %call94 = tail call i32 %30(%struct.rtx_def* %call36, i32 51) #5
  %tobool95 = icmp eq i32 %call94, 0
  br i1 %tobool95, label %for.inc, label %land.lhs.true96

land.lhs.true96:                                  ; preds = %lor.lhs.false93, %land.lhs.true87
  %predicate101 = getelementptr inbounds %struct.insn_operand_data* %29, i64 2, i32 0
  %31 = load i32 (%struct.rtx_def*, i32)** %predicate101, align 8, !tbaa !32
  %cmp102 = icmp eq i32 (%struct.rtx_def*, i32)* %31, null
  br i1 %cmp102, label %if.then107, label %lor.lhs.false104

lor.lhs.false104:                                 ; preds = %land.lhs.true96
  %call105 = tail call i32 %31(%struct.rtx_def* %call60, i32 0) #5
  %tobool106 = icmp eq i32 %call105, 0
  br i1 %tobool106, label %for.inc, label %if.then107

if.then107:                                       ; preds = %lor.lhs.false104, %land.lhs.true96
  %call108 = tail call %struct.rtx_def* @get_last_insn() #5
  %call.i259 = tail call %struct.rtx_def* @convert_modes(i32 %mode.0261, i32 0, %struct.rtx_def* %call37, i32 1) #5
  %predicate114 = getelementptr inbounds %struct.insn_operand_data* %29, i64 1, i32 0
  %32 = load i32 (%struct.rtx_def*, i32)** %predicate114, align 8, !tbaa !32
  %cmp115 = icmp eq i32 (%struct.rtx_def*, i32)* %32, null
  br i1 %cmp115, label %if.end, label %land.lhs.true117

land.lhs.true117:                                 ; preds = %if.then107
  %call118 = tail call i32 %32(%struct.rtx_def* %call.i259, i32 %mode.0261) #5
  %tobool119 = icmp eq i32 %call118, 0
  br i1 %tobool119, label %if.then120, label %if.end

if.then120:                                       ; preds = %land.lhs.true117
  %call121 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %mode.0261, %struct.rtx_def* %call.i259) #5
  br label %if.end

if.end:                                           ; preds = %land.lhs.true117, %if.then107, %if.then120
  %op1.0 = phi %struct.rtx_def* [ %call.i259, %land.lhs.true117 ], [ %call121, %if.then120 ], [ %call.i259, %if.then107 ]
  %genfun = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom88, i32 2
  %33 = load %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun, align 8, !tbaa !25
  %call124 = tail call %struct.rtx_def* (%struct.rtx_def*, ...)* %33(%struct.rtx_def* %call36, %struct.rtx_def* %op1.0, %struct.rtx_def* %call60) #5
  %tobool125 = icmp eq %struct.rtx_def* %call124, null
  br i1 %tobool125, label %if.else128, label %if.then126

if.then126:                                       ; preds = %if.end
  %call127 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call124) #5
  br label %return

if.else128:                                       ; preds = %if.end
  tail call void @delete_insns_since(%struct.rtx_def* %call108) #5
  br label %for.inc

for.inc:                                          ; preds = %lor.lhs.false104, %lor.lhs.false93, %lor.lhs.false, %for.body, %if.else128
  %arrayidx132 = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom63
  %34 = load i8* %arrayidx132, align 1, !tbaa !5
  %conv133 = zext i8 %34 to i32
  %cmp61 = icmp eq i8 %34, 0
  br i1 %cmp61, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc, %if.else58
  %35 = load i32* @target_flags, align 4, !tbaa !21
  %and134 = lshr i32 %35, 25
  %36 = and i32 %and134, 1
  %37 = or i32 %36, 4
  %arrayidx138 = getelementptr inbounds %struct.rtx_def* %call36, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx138 to %struct.rtx_def**
  %38 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %call139 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %37, %struct.rtx_def* %38) #5
  %39 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !1
  %type = bitcast %union.tree_node* %39 to %struct.tree_type*
  %mode140 = getelementptr inbounds %struct.tree_type* %type, i64 0, i32 6
  %bf.load141 = load i32* %mode140, align 4
  %bf.lshr142 = lshr i32 %bf.load141, 9
  %bf.clear143 = and i32 %bf.lshr142, 127
  %call144 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.clear143, %struct.rtx_def* %call37) #5
  %40 = load %union.tree_node** @clear_storage.fn, align 8, !tbaa !1
  %cmp145 = icmp eq %union.tree_node* %40, null
  br i1 %cmp145, label %if.then147, label %if.end165

if.then147:                                       ; preds = %for.end
  %call148 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([7 x i8]* @.str2, i64 0, i64 0)) #5
  store %union.tree_node* %call148, %union.tree_node** @clear_storage.fn, align 8, !tbaa !1
  %41 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 27), align 8, !tbaa !1
  %call149 = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %41) #5
  %call150 = tail call %union.tree_node* @build_function_type(%union.tree_node* %call149, %union.tree_node* null) #5
  %42 = load %union.tree_node** @clear_storage.fn, align 8, !tbaa !1
  %call151 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %42, %union.tree_node* %call150) #5
  store %union.tree_node* %call151, %union.tree_node** @clear_storage.fn, align 8, !tbaa !1
  tail call void @ggc_add_tree_root(%union.tree_node** @clear_storage.fn, i32 1) #5
  %43 = load %union.tree_node** @clear_storage.fn, align 8, !tbaa !1
  %external_flag = getelementptr inbounds %union.tree_node* %43, i64 0, i32 0, i32 5
  %44 = bitcast i48* %external_flag to i64*
  %bf.load152 = load i64* %44, align 8
  %bf.set = or i64 %bf.load152, 256
  store i64 %bf.set, i64* %44, align 8
  %45 = load %union.tree_node** @clear_storage.fn, align 8, !tbaa !1
  %public_flag = getelementptr inbounds %union.tree_node* %45, i64 0, i32 0, i32 0, i32 2
  %bf.load154 = load i32* %public_flag, align 8
  %bf.set156 = or i32 %bf.load154, 524288
  store i32 %bf.set156, i32* %public_flag, align 8
  %46 = load %union.tree_node** @clear_storage.fn, align 8, !tbaa !1
  %artificial_flag = getelementptr inbounds %union.tree_node* %46, i64 0, i32 0, i32 5
  %47 = bitcast i48* %artificial_flag to i64*
  %bf.load158 = load i64* %47, align 8
  %bf.set160 = or i64 %bf.load158, 4194304
  store i64 %bf.set160, i64* %47, align 8
  %48 = load %union.tree_node** @clear_storage.fn, align 8, !tbaa !1
  %nothrow_flag = getelementptr inbounds %union.tree_node* %48, i64 0, i32 0, i32 0, i32 2
  %bf.load162 = load i32* %nothrow_flag, align 8
  %bf.set164 = or i32 %bf.load162, 131072
  store i32 %bf.set164, i32* %nothrow_flag, align 8
  %49 = load %union.tree_node** @clear_storage.fn, align 8, !tbaa !1
  tail call void @make_decl_rtl(%union.tree_node* %49, i8* null) #5
  %50 = load %union.tree_node** @clear_storage.fn, align 8, !tbaa !1
  tail call void @assemble_external(%union.tree_node* %50) #5
  br label %if.end165

if.end165:                                        ; preds = %if.then147, %for.end
  %51 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 27), align 8, !tbaa !1
  %call166 = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %51) #5
  %call167 = tail call %union.tree_node* @make_tree(%union.tree_node* %call166, %struct.rtx_def* %call139) #5
  %call168 = tail call %union.tree_node* @build_tree_list(%union.tree_node* null, %union.tree_node* %call167) #5
  %52 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %53 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call169 = tail call %union.tree_node* @make_tree(%union.tree_node* %52, %struct.rtx_def* %53) #5
  %call170 = tail call %union.tree_node* @build_tree_list(%union.tree_node* null, %union.tree_node* %call169) #5
  %chain = getelementptr inbounds %union.tree_node* %call168, i64 0, i32 0, i32 0, i32 0
  store %union.tree_node* %call170, %union.tree_node** %chain, align 8, !tbaa !34
  %54 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !1
  %call172 = tail call %union.tree_node* @make_tree(%union.tree_node* %54, %struct.rtx_def* %call144) #5
  %call173 = tail call %union.tree_node* @build_tree_list(%union.tree_node* null, %union.tree_node* %call172) #5
  %55 = load %union.tree_node** %chain, align 8, !tbaa !34
  %chain177 = getelementptr inbounds %union.tree_node* %55, i64 0, i32 0, i32 0, i32 0
  store %union.tree_node* %call173, %union.tree_node** %chain177, align 8, !tbaa !34
  %56 = load %union.tree_node** %chain, align 8, !tbaa !34
  %chain181 = getelementptr inbounds %union.tree_node* %56, i64 0, i32 0, i32 0, i32 0
  %57 = load %union.tree_node** %chain181, align 8, !tbaa !34
  %chain183 = getelementptr inbounds %union.tree_node* %57, i64 0, i32 0, i32 0, i32 0
  store %union.tree_node* null, %union.tree_node** %chain183, align 8, !tbaa !34
  %58 = load %union.tree_node** @clear_storage.fn, align 8, !tbaa !1
  %type185 = getelementptr inbounds %union.tree_node* %58, i64 0, i32 0, i32 0, i32 1
  %59 = load %union.tree_node** %type185, align 8, !tbaa !36
  %call186 = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %59) #5
  %60 = load %union.tree_node** @clear_storage.fn, align 8, !tbaa !1
  %call187 = tail call %union.tree_node* @build1(i32 121, %union.tree_node* %call186, %union.tree_node* %60) #5
  %61 = load %union.tree_node** @clear_storage.fn, align 8, !tbaa !1
  %type189 = getelementptr inbounds %union.tree_node* %61, i64 0, i32 0, i32 0, i32 1
  %62 = load %union.tree_node** %type189, align 8, !tbaa !36
  %type191 = getelementptr inbounds %union.tree_node* %62, i64 0, i32 0, i32 0, i32 1
  %63 = load %union.tree_node** %type191, align 8, !tbaa !36
  %call192 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 53, %union.tree_node* %63, %union.tree_node* %call187, %union.tree_node* %call168, %union.tree_node* null) #5
  %side_effects_flag = getelementptr inbounds %union.tree_node* %call192, i64 0, i32 0, i32 0, i32 2
  %bf.load194 = load i32* %side_effects_flag, align 8
  %bf.set196 = or i32 %bf.load194, 256
  store i32 %bf.set196, i32* %side_effects_flag, align 8
  %call197 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %call192, %struct.rtx_def* null, i32 0, i32 0)
  %64 = getelementptr inbounds %struct.rtx_def* %call139, i64 0, i32 0
  %bf.load198 = load i32* %64, align 8
  %bf.clear200 = and i32 %bf.load198, 67108864
  %tobool201 = icmp eq i32 %bf.clear200, 0
  br i1 %tobool201, label %return, label %if.then202

if.then202:                                       ; preds = %if.end165
  %call203 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call139) #5
  %call204 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call203) #5
  br label %return

return:                                           ; preds = %if.then, %if.then202, %if.then54, %if.end165, %if.then126
  %retval.0 = phi %struct.rtx_def* [ null, %if.then126 ], [ null, %if.then ], [ null, %if.then54 ], [ %call197, %if.then202 ], [ %call197, %if.end165 ]
  ret %struct.rtx_def* %retval.0
}

declare i32 @memory_address_p(i32, %struct.rtx_def*) #1

declare i32 @push_operand(%struct.rtx_def*, i32) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @emit_move_insn_1(%struct.rtx_def* %x, %struct.rtx_def* %y) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 0
  %bf.load658667 = load i32* %0, align 8
  %bf.lshr659668 = lshr i32 %bf.load658667, 16
  %bf.clear660669 = and i32 %bf.lshr659668, 255
  %cmp663672 = icmp ugt i32 %bf.clear660669, 58
  br i1 %cmp663672, label %if.then, label %if.end.lr.ph

if.end.lr.ph:                                     ; preds = %entry, %if.then186
  %idxprom593661670.pn.in = phi i32 [ %bf.clear660, %if.then186 ], [ %bf.clear660669, %entry ]
  %1 = phi i32* [ %46, %if.then186 ], [ %0, %entry ]
  %y.tr.ph674 = phi %struct.rtx_def* [ %call183, %if.then186 ], [ %y, %entry ]
  %x.tr.ph673 = phi %struct.rtx_def* [ %call187, %if.then186 ], [ %x, %entry ]
  %arrayidx151 = getelementptr inbounds %struct.rtx_def* %x.tr.ph673, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx151 to i32*
  br label %if.end

if.then:                                          ; preds = %if.then186, %if.else190, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 2819, i8* getelementptr inbounds ([17 x i8]* @__FUNCTION__.emit_move_insn_1, i64 0, i64 0)) #8
  unreachable

if.end:                                           ; preds = %if.end.lr.ph, %if.else190
  %idxprom593661670.pn.pn.in = phi i32 [ %idxprom593661670.pn.in, %if.end.lr.ph ], [ %bf.clear, %if.else190 ]
  %y.tr664 = phi %struct.rtx_def* [ %y.tr.ph674, %if.end.lr.ph ], [ %call184, %if.else190 ]
  %idxprom593661670.pn.pn = zext i32 %idxprom593661670.pn.pn.in to i64
  %.in677 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom593661670.pn.pn
  %2 = load i32* %.in677, align 4
  %3 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 30), align 8, !tbaa !1
  %insn_code = getelementptr inbounds %struct.optab* %3, i64 0, i32 1, i64 %idxprom593661670.pn.pn, i32 0
  %4 = load i32* %insn_code, align 4, !tbaa !23
  %cmp3 = icmp eq i32 %4, 1317
  br i1 %cmp3, label %if.else, label %if.then4

if.then4:                                         ; preds = %if.end
  %idxprom9 = sext i32 %4 to i64
  %genfun = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom9, i32 2
  %5 = load %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun, align 8, !tbaa !25
  %call = tail call %struct.rtx_def* (%struct.rtx_def*, ...)* %5(%struct.rtx_def* %x.tr.ph673, %struct.rtx_def* %y.tr664) #5
  %call11 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call) #5
  br label %return

if.else:                                          ; preds = %if.end
  %cmp12 = icmp eq i32 %2, 6
  %.off = add i32 %2, -5
  %6 = icmp ult i32 %.off, 2
  br i1 %6, label %land.lhs.true, label %if.else243

land.lhs.true:                                    ; preds = %if.else
  %cmp13 = icmp eq i32 %2, 5
  %arrayidx15 = getelementptr inbounds [59 x i8]* @mode_unit_size, i64 0, i64 %idxprom593661670.pn.pn
  %7 = load i8* %arrayidx15, align 1, !tbaa !5
  %conv = zext i8 %7 to i32
  %mul = shl nuw nsw i32 %conv, 3
  %cond = select i1 %cmp13, i32 1, i32 2
  %call18 = tail call i32 @mode_for_size(i32 %mul, i32 %cond, i32 0) #5
  %cmp19 = icmp eq i32 %call18, 51
  br i1 %cmp19, label %if.else243, label %land.lhs.true21

land.lhs.true21:                                  ; preds = %land.lhs.true
  %idxprom22 = sext i32 %call18 to i64
  %8 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 30), align 8, !tbaa !1
  %insn_code25 = getelementptr inbounds %struct.optab* %8, i64 0, i32 1, i64 %idxprom22, i32 0
  %9 = load i32* %insn_code25, align 4, !tbaa !23
  %cmp26 = icmp eq i32 %9, 1317
  br i1 %cmp26, label %if.else243, label %if.then28

if.then28:                                        ; preds = %land.lhs.true21
  %bf.load29 = load i32* %1, align 8
  %bf.lshr30 = lshr i32 %bf.load29, 16
  %bf.clear31 = and i32 %bf.lshr30, 255
  %call32 = tail call i32 @push_operand(%struct.rtx_def* %x.tr.ph673, i32 %bf.clear31) #5
  %tobool = icmp eq i32 %call32, 0
  %.pre728 = load i32* @target_flags, align 4, !tbaa !21
  br i1 %tobool, label %if.else132, label %land.lhs.true33

land.lhs.true33:                                  ; preds = %if.then28
  %and = and i32 %.pre728, 33554432
  %tobool34 = icmp eq i32 %and, 0
  %arrayidx36 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom22
  %10 = load i8* %arrayidx36, align 1, !tbaa !5
  %conv37 = zext i8 %10 to i32
  br i1 %tobool34, label %cond.false, label %cond.true

cond.true:                                        ; preds = %land.lhs.true33
  %add = add nsw i32 %conv37, 7
  %and38 = and i32 %add, 504
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true33
  %add42 = add nsw i32 %conv37, 1
  %and43 = and i32 %add42, 510
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond44 = phi i32 [ %and38, %cond.true ], [ %and43, %cond.false ]
  %cmp48 = icmp eq i32 %cond44, %conv37
  br i1 %cmp48, label %if.then105, label %if.then50

if.then50:                                        ; preds = %cond.end
  %11 = lshr exact i32 %and, 25
  %12 = or i32 %11, 4
  %13 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 2), align 8, !tbaa !1
  %14 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !1
  %bf.load57 = load i32* %1, align 8
  %bf.lshr58 = lshr i32 %bf.load57, 16
  %bf.clear59 = and i32 %bf.lshr58, 255
  %idxprom60598 = zext i32 %bf.clear59 to i64
  %arrayidx61 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom60598
  %15 = load i8* %arrayidx61, align 1, !tbaa !5
  %conv62 = zext i8 %15 to i32
  br i1 %tobool34, label %cond.false65, label %cond.true56

cond.true56:                                      ; preds = %if.then50
  %add63 = add nsw i32 %conv62, 7
  %and64 = and i32 %add63, 504
  br label %cond.end74

cond.false65:                                     ; preds = %if.then50
  %add72 = add nsw i32 %conv62, 1
  %and73 = and i32 %add72, 510
  br label %cond.end74

cond.end74:                                       ; preds = %cond.false65, %cond.true56
  %cond75 = phi i32 [ %and64, %cond.true56 ], [ %and73, %cond.false65 ]
  %conv76600 = zext i32 %cond75 to i64
  %call77 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv76600) #5
  %16 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !1
  %call78 = tail call %struct.rtx_def* @expand_binop(i32 %12, %struct.optab* %13, %struct.rtx_def* %14, %struct.rtx_def* %call77, %struct.rtx_def* %16, i32 0, i32 3) #5
  %17 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !1
  %cmp79 = icmp eq %struct.rtx_def* %call78, %17
  br i1 %cmp79, label %if.end83, label %if.then81

if.then81:                                        ; preds = %cond.end74
  %call82 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %17, %struct.rtx_def* %call78)
  %.pre = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !1
  br label %if.end83

if.end83:                                         ; preds = %cond.end74, %if.then81
  %18 = phi %struct.rtx_def* [ %call78, %cond.end74 ], [ %.pre, %if.then81 ]
  %conv86 = zext i8 %10 to i64
  %19 = load i32* @target_flags, align 4, !tbaa !21
  %and87 = lshr i32 %19, 25
  %20 = and i32 %and87, 1
  %21 = or i32 %20, 4
  %call90 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 0) #5
  %call91 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %21, %struct.rtx_def* %18, %struct.rtx_def* %call90) #5
  %call92 = tail call %struct.rtx_def* @change_address(%struct.rtx_def* %x.tr.ph673, i32 %call18, %struct.rtx_def* %call91) #5
  %call93 = tail call %struct.rtx_def* @gen_realpart(i32 %call18, %struct.rtx_def* %y.tr664) #5
  %call94 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call92, %struct.rtx_def* %call93)
  %22 = load i32* @target_flags, align 4, !tbaa !21
  %and95 = lshr i32 %22, 25
  %23 = and i32 %and95, 1
  %24 = or i32 %23, 4
  %25 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !1
  %call98 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv86) #5
  %call99 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %24, %struct.rtx_def* %25, %struct.rtx_def* %call98) #5
  %call100 = tail call %struct.rtx_def* @change_address(%struct.rtx_def* %x.tr.ph673, i32 %call18, %struct.rtx_def* %call99) #5
  %call101 = tail call %struct.rtx_def* @gen_imagpart(i32 %call18, %struct.rtx_def* %y.tr664) #5
  %call102 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call100, %struct.rtx_def* %call101)
  br label %if.end241

if.then105:                                       ; preds = %cond.end
  %26 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 30), align 8, !tbaa !1
  %insn_code109 = getelementptr inbounds %struct.optab* %26, i64 0, i32 1, i64 %idxprom22, i32 0
  %27 = load i32* %insn_code109, align 4, !tbaa !23
  %idxprom110 = sext i32 %27 to i64
  %genfun112 = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom110, i32 2
  %28 = load %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun112, align 8, !tbaa !25
  %rtx = bitcast %union.rtunion_def* %arrayidx151 to %struct.rtx_def**
  %29 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %call114 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %call18, %struct.rtx_def* %29) #5
  %call115 = tail call %struct.rtx_def* @gen_imagpart(i32 %call18, %struct.rtx_def* %y.tr664) #5
  %call116 = tail call %struct.rtx_def* (%struct.rtx_def*, ...)* %28(%struct.rtx_def* %call114, %struct.rtx_def* %call115) #5
  %call117 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call116) #5
  %30 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 30), align 8, !tbaa !1
  %insn_code121 = getelementptr inbounds %struct.optab* %30, i64 0, i32 1, i64 %idxprom22, i32 0
  %31 = load i32* %insn_code121, align 4, !tbaa !23
  %idxprom122 = sext i32 %31 to i64
  %genfun124 = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom122, i32 2
  %32 = load %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun124, align 8, !tbaa !25
  %33 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %call128 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %call18, %struct.rtx_def* %33) #5
  %call129 = tail call %struct.rtx_def* @gen_realpart(i32 %call18, %struct.rtx_def* %y.tr664) #5
  %call130 = tail call %struct.rtx_def* (%struct.rtx_def*, ...)* %32(%struct.rtx_def* %call128, %struct.rtx_def* %call129) #5
  %call131 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call130) #5
  br label %if.end241

if.else132:                                       ; preds = %if.then28
  %arrayidx134 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom593661670.pn.pn
  %34 = load i16* %arrayidx134, align 2, !tbaa !19
  %conv135 = zext i16 %34 to i32
  %35 = lshr i32 %.pre728, 19
  %36 = and i32 %35, 64
  %mul139 = add i32 %36, 64
  %cmp140 = icmp ult i32 %conv135, %mul139
  br i1 %cmp140, label %land.lhs.true142, label %if.end197

land.lhs.true142:                                 ; preds = %if.else132
  %37 = load i32* @reload_in_progress, align 4, !tbaa !21
  %38 = load i32* @reload_completed, align 4, !tbaa !21
  %or = or i32 %38, %37
  %cmp143 = icmp eq i32 %or, 0
  br i1 %cmp143, label %if.then145, label %if.end197

if.then145:                                       ; preds = %land.lhs.true142
  %bf.load146 = load i32* %1, align 8
  %bf.clear147 = and i32 %bf.load146, 65535
  %cmp148 = icmp eq i32 %bf.clear147, 61
  br i1 %cmp148, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.then145
  %39 = load i32* %rtuint, align 4, !tbaa !21
  %cmp152 = icmp ult i32 %39, 53
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then145
  %40 = phi i1 [ false, %if.then145 ], [ %cmp152, %land.rhs ]
  %41 = getelementptr inbounds %struct.rtx_def* %y.tr664, i64 0, i32 0
  %bf.load154 = load i32* %41, align 8
  %bf.clear155 = and i32 %bf.load154, 65535
  %cmp156 = icmp eq i32 %bf.clear155, 61
  br i1 %cmp156, label %land.rhs158, label %land.end164

land.rhs158:                                      ; preds = %land.end
  %arrayidx160 = getelementptr inbounds %struct.rtx_def* %y.tr664, i64 0, i32 1, i64 0
  %rtuint161 = bitcast %union.rtunion_def* %arrayidx160 to i32*
  %42 = load i32* %rtuint161, align 4, !tbaa !21
  %cmp162 = icmp ult i32 %42, 53
  br label %land.end164

land.end164:                                      ; preds = %land.rhs158, %land.end
  %43 = phi i1 [ false, %land.end ], [ %cmp162, %land.rhs158 ]
  %or.cond466 = or i1 %40, %43
  br i1 %or.cond466, label %if.then169, label %if.end197

if.then169:                                       ; preds = %land.end164
  %cond172 = select i1 %cmp12, i32 2, i32 1
  %call176 = tail call i32 @mode_for_size(i32 %conv135, i32 %cond172, i32 1) #5
  %cmp177 = icmp eq i32 %call176, 51
  br i1 %cmp177, label %if.end197, label %if.then179

if.then179:                                       ; preds = %if.then169
  %arrayidx181 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom593661670.pn.pn
  %44 = load i8* %arrayidx181, align 1, !tbaa !5
  %conv182 = zext i8 %44 to i64
  %call183 = tail call %struct.rtx_def* @assign_stack_temp(i32 %call176, i64 %conv182, i32 0) #5
  %call184 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %call183, i32 %idxprom593661670.pn.pn.in, i64 0, i32 1, i32 1) #5
  %45 = load %struct.function** @cfun, align 8, !tbaa !1
  %cannot_inline = getelementptr inbounds %struct.function* %45, i64 0, i32 16
  store i8* getelementptr inbounds ([52 x i8]* @.str3, i64 0, i64 0), i8** %cannot_inline, align 8, !tbaa !75
  br i1 %40, label %if.then186, label %if.else190

if.then186:                                       ; preds = %if.then179
  %call187 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 %call176, %struct.rtx_def* %x.tr.ph673, i32 0) #5
  %call188 = tail call %struct.rtx_def* @emit_move_insn_1(%struct.rtx_def* %call184, %struct.rtx_def* %y.tr664)
  %46 = getelementptr inbounds %struct.rtx_def* %call187, i64 0, i32 0
  %bf.load658 = load i32* %46, align 8
  %bf.lshr659 = lshr i32 %bf.load658, 16
  %bf.clear660 = and i32 %bf.lshr659, 255
  %cmp663 = icmp ugt i32 %bf.clear660, 58
  br i1 %cmp663, label %if.then, label %if.end.lr.ph

if.else190:                                       ; preds = %if.then179
  %call192 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 %call176, %struct.rtx_def* %y.tr664, i32 0) #5
  %call193 = tail call %struct.rtx_def* @emit_move_insn_1(%struct.rtx_def* %call183, %struct.rtx_def* %call192)
  %bf.load = load i32* %1, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %cmp = icmp ugt i32 %bf.clear, 58
  br i1 %cmp, label %if.then, label %if.end

if.end197:                                        ; preds = %if.then169, %land.end164, %land.lhs.true142, %if.else132
  %call198 = tail call %struct.rtx_def* @gen_realpart(i32 %call18, %struct.rtx_def* %x.tr.ph673) #5
  %call199 = tail call %struct.rtx_def* @gen_realpart(i32 %call18, %struct.rtx_def* %y.tr664) #5
  %call200 = tail call %struct.rtx_def* @gen_imagpart(i32 %call18, %struct.rtx_def* %x.tr.ph673) #5
  %call201 = tail call %struct.rtx_def* @gen_imagpart(i32 %call18, %struct.rtx_def* %y.tr664) #5
  %cmp202 = icmp eq %struct.rtx_def* %x.tr.ph673, %y.tr664
  %47 = load i32* @reload_in_progress, align 4
  %tobool205 = icmp ne i32 %47, 0
  %or.cond467 = or i1 %cmp202, %tobool205
  %48 = load i32* @reload_completed, align 4
  %tobool207 = icmp ne i32 %48, 0
  %or.cond468 = or i1 %or.cond467, %tobool207
  br i1 %or.cond468, label %if.end221, label %land.lhs.true208

land.lhs.true208:                                 ; preds = %if.end197
  %49 = getelementptr inbounds %struct.rtx_def* %call198, i64 0, i32 0
  %bf.load209 = load i32* %49, align 8
  %bf.clear210 = and i32 %bf.load209, 65535
  %cmp211 = icmp eq i32 %bf.clear210, 63
  br i1 %cmp211, label %if.then218, label %lor.lhs.false213

lor.lhs.false213:                                 ; preds = %land.lhs.true208
  %50 = getelementptr inbounds %struct.rtx_def* %call200, i64 0, i32 0
  %bf.load214 = load i32* %50, align 8
  %bf.clear215 = and i32 %bf.load214, 65535
  %cmp216 = icmp eq i32 %bf.clear215, 63
  br i1 %cmp216, label %if.then218, label %if.end221

if.then218:                                       ; preds = %lor.lhs.false213, %land.lhs.true208
  %call219 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %x.tr.ph673) #5
  %call220 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call219) #5
  br label %if.end221

if.end221:                                        ; preds = %if.end197, %if.then218, %lor.lhs.false213
  %51 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 30), align 8, !tbaa !1
  %insn_code225 = getelementptr inbounds %struct.optab* %51, i64 0, i32 1, i64 %idxprom22, i32 0
  %52 = load i32* %insn_code225, align 4, !tbaa !23
  %idxprom226 = sext i32 %52 to i64
  %genfun228 = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom226, i32 2
  %53 = load %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun228, align 8, !tbaa !25
  %call229 = tail call %struct.rtx_def* (%struct.rtx_def*, ...)* %53(%struct.rtx_def* %call198, %struct.rtx_def* %call199) #5
  %call230 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call229) #5
  %54 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 30), align 8, !tbaa !1
  %insn_code234 = getelementptr inbounds %struct.optab* %54, i64 0, i32 1, i64 %idxprom22, i32 0
  %55 = load i32* %insn_code234, align 4, !tbaa !23
  %idxprom235 = sext i32 %55 to i64
  %genfun237 = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom235, i32 2
  %56 = load %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun237, align 8, !tbaa !25
  %call238 = tail call %struct.rtx_def* (%struct.rtx_def*, ...)* %56(%struct.rtx_def* %call200, %struct.rtx_def* %call201) #5
  %call239 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call238) #5
  br label %if.end241

if.end241:                                        ; preds = %if.then105, %if.end221, %if.end83
  %call242 = tail call %struct.rtx_def* @get_last_insn() #5
  br label %return

if.else243:                                       ; preds = %land.lhs.true21, %land.lhs.true, %if.else
  %arrayidx245 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom593661670.pn.pn
  %57 = load i8* %arrayidx245, align 1, !tbaa !5
  %conv246 = zext i8 %57 to i32
  %58 = load i32* @target_flags, align 4, !tbaa !21
  %and247 = lshr i32 %58, 23
  %59 = and i32 %and247, 4
  %60 = add i32 %59, 4
  %cmp250 = icmp ugt i32 %conv246, %60
  br i1 %cmp250, label %if.then252, label %if.else465

if.then252:                                       ; preds = %if.else243
  %bf.load253 = load i32* %1, align 8
  %bf.lshr254 = lshr i32 %bf.load253, 16
  %bf.clear255 = and i32 %bf.lshr254, 255
  %call256 = tail call i32 @push_operand(%struct.rtx_def* %x.tr.ph673, i32 %bf.clear255) #5
  %tobool257 = icmp eq i32 %call256, 0
  br i1 %tobool257, label %if.end331, label %if.then258

if.then258:                                       ; preds = %if.then252
  %61 = load i32* @target_flags, align 4, !tbaa !21
  %and260 = and i32 %61, 33554432
  %tobool261 = icmp eq i32 %and260, 0
  %62 = lshr exact i32 %and260, 25
  %63 = or i32 %62, 4
  %64 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 2), align 8, !tbaa !1
  %65 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !1
  %bf.load266 = load i32* %1, align 8
  %bf.lshr267 = lshr i32 %bf.load266, 16
  %bf.clear268 = and i32 %bf.lshr267, 255
  %idxprom269595 = zext i32 %bf.clear268 to i64
  %arrayidx270 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom269595
  %66 = load i8* %arrayidx270, align 1, !tbaa !5
  %conv271 = zext i8 %66 to i32
  br i1 %tobool261, label %cond.false274, label %cond.true265

cond.true265:                                     ; preds = %if.then258
  %add272 = add nsw i32 %conv271, 7
  %and273 = and i32 %add272, 504
  br label %cond.end283

cond.false274:                                    ; preds = %if.then258
  %add281 = add nsw i32 %conv271, 1
  %and282 = and i32 %add281, 510
  br label %cond.end283

cond.end283:                                      ; preds = %cond.false274, %cond.true265
  %cond284 = phi i32 [ %and273, %cond.true265 ], [ %and282, %cond.false274 ]
  %conv285599 = zext i32 %cond284 to i64
  %call286 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv285599) #5
  %67 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !1
  %call287 = tail call %struct.rtx_def* @expand_binop(i32 %63, %struct.optab* %64, %struct.rtx_def* %65, %struct.rtx_def* %call286, %struct.rtx_def* %67, i32 0, i32 3) #5
  %68 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !1
  %cmp288 = icmp eq %struct.rtx_def* %call287, %68
  br i1 %cmp288, label %if.end292, label %if.then290

if.then290:                                       ; preds = %cond.end283
  %call291 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %68, %struct.rtx_def* %call287)
  br label %if.end292

if.end292:                                        ; preds = %cond.end283, %if.then290
  %rtx295 = bitcast %union.rtunion_def* %arrayidx151 to %struct.rtx_def**
  %69 = load %struct.rtx_def** %rtx295, align 8, !tbaa !1
  %70 = getelementptr inbounds %struct.rtx_def* %69, i64 0, i32 0
  %bf.load296 = load i32* %70, align 8
  %bf.clear297 = and i32 %bf.load296, 65535
  switch i32 %bf.clear297, label %if.else327 [
    i32 99, label %if.then300
    i32 98, label %if.then315
  ]

if.then300:                                       ; preds = %if.end292
  %71 = load i32* @target_flags, align 4, !tbaa !21
  %and301 = lshr i32 %71, 25
  %72 = and i32 %and301, 1
  %73 = or i32 %72, 4
  %74 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !1
  %bf.load304 = load i32* %1, align 8
  %bf.lshr305 = lshr i32 %bf.load304, 16
  %bf.clear306 = and i32 %bf.lshr305, 255
  %idxprom307597 = zext i32 %bf.clear306 to i64
  %arrayidx308 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom307597
  %75 = load i8* %arrayidx308, align 1, !tbaa !5
  %conv309 = zext i8 %75 to i64
  %sub = sub nsw i64 0, %conv309
  %call310 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %sub) #5
  %call311 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %73, %struct.rtx_def* %74, %struct.rtx_def* %call310) #5
  br label %if.end329

if.then315:                                       ; preds = %if.end292
  %76 = load i32* @target_flags, align 4, !tbaa !21
  %and316 = lshr i32 %76, 25
  %77 = and i32 %and316, 1
  %78 = or i32 %77, 4
  %79 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !1
  %bf.load319 = load i32* %1, align 8
  %bf.lshr320 = lshr i32 %bf.load319, 16
  %bf.clear321 = and i32 %bf.lshr320, 255
  %idxprom322596 = zext i32 %bf.clear321 to i64
  %arrayidx323 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom322596
  %80 = load i8* %arrayidx323, align 1, !tbaa !5
  %conv324 = zext i8 %80 to i64
  %call325 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv324) #5
  %call326 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %78, %struct.rtx_def* %79, %struct.rtx_def* %call325) #5
  br label %if.end329

if.else327:                                       ; preds = %if.end292
  %81 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !1
  br label %if.end329

if.end329:                                        ; preds = %if.then315, %if.else327, %if.then300
  %temp259.0 = phi %struct.rtx_def* [ %call311, %if.then300 ], [ %call326, %if.then315 ], [ %81, %if.else327 ]
  %call330 = tail call %struct.rtx_def* @change_address(%struct.rtx_def* %x.tr.ph673, i32 0, %struct.rtx_def* %temp259.0) #5
  br label %if.end331

if.end331:                                        ; preds = %if.then252, %if.end329
  %x.addr.0 = phi %struct.rtx_def* [ %call330, %if.end329 ], [ %x.tr.ph673, %if.then252 ]
  %82 = load i32* @reload_in_progress, align 4, !tbaa !21
  %tobool332 = icmp eq i32 %82, 0
  br i1 %tobool332, label %if.end369, label %land.lhs.true333

land.lhs.true333:                                 ; preds = %if.end331
  %83 = getelementptr inbounds %struct.rtx_def* %x.addr.0, i64 0, i32 0
  %bf.load334 = load i32* %83, align 8
  %bf.clear335 = and i32 %bf.load334, 65535
  %cmp336 = icmp eq i32 %bf.clear335, 66
  br i1 %cmp336, label %land.lhs.true338, label %if.end350

land.lhs.true338:                                 ; preds = %land.lhs.true333
  %arrayidx340 = getelementptr inbounds %struct.rtx_def* %x.addr.0, i64 0, i32 1, i64 0
  %rtx341 = bitcast %union.rtunion_def* %arrayidx340 to %struct.rtx_def**
  %call342 = tail call %struct.rtx_def* @find_replacement(%struct.rtx_def** %rtx341) #5
  %84 = load %struct.rtx_def** %rtx341, align 8, !tbaa !1
  %cmp346 = icmp eq %struct.rtx_def* %call342, %84
  br i1 %cmp346, label %if.end350, label %if.then348

if.then348:                                       ; preds = %land.lhs.true338
  %call349 = tail call %struct.rtx_def* @replace_equiv_address_nv(%struct.rtx_def* %x.addr.0, %struct.rtx_def* %call342) #5
  br label %if.end350

if.end350:                                        ; preds = %land.lhs.true338, %if.then348, %land.lhs.true333
  %x.addr.1.ph = phi %struct.rtx_def* [ %x.addr.0, %land.lhs.true338 ], [ %call349, %if.then348 ], [ %x.addr.0, %land.lhs.true333 ]
  %.pr = load i32* @reload_in_progress, align 4, !tbaa !21
  %tobool351 = icmp eq i32 %.pr, 0
  br i1 %tobool351, label %if.end369, label %land.lhs.true352

land.lhs.true352:                                 ; preds = %if.end350
  %85 = getelementptr inbounds %struct.rtx_def* %y.tr664, i64 0, i32 0
  %bf.load353 = load i32* %85, align 8
  %bf.clear354 = and i32 %bf.load353, 65535
  %cmp355 = icmp eq i32 %bf.clear354, 66
  br i1 %cmp355, label %land.lhs.true357, label %if.end369

land.lhs.true357:                                 ; preds = %land.lhs.true352
  %arrayidx359 = getelementptr inbounds %struct.rtx_def* %y.tr664, i64 0, i32 1, i64 0
  %rtx360 = bitcast %union.rtunion_def* %arrayidx359 to %struct.rtx_def**
  %call361 = tail call %struct.rtx_def* @find_replacement(%struct.rtx_def** %rtx360) #5
  %86 = load %struct.rtx_def** %rtx360, align 8, !tbaa !1
  %cmp365 = icmp eq %struct.rtx_def* %call361, %86
  br i1 %cmp365, label %if.end369, label %if.then367

if.then367:                                       ; preds = %land.lhs.true357
  %call368 = tail call %struct.rtx_def* @replace_equiv_address_nv(%struct.rtx_def* %y.tr664, %struct.rtx_def* %call361) #5
  br label %if.end369

if.end369:                                        ; preds = %if.end331, %land.lhs.true357, %if.end350, %if.then367, %land.lhs.true352
  %x.addr.1602 = phi %struct.rtx_def* [ %x.addr.1.ph, %if.then367 ], [ %x.addr.1.ph, %land.lhs.true357 ], [ %x.addr.1.ph, %land.lhs.true352 ], [ %x.addr.1.ph, %if.end350 ], [ %x.addr.0, %if.end331 ]
  %y.addr.0 = phi %struct.rtx_def* [ %call368, %if.then367 ], [ %y.tr664, %land.lhs.true357 ], [ %y.tr664, %land.lhs.true352 ], [ %y.tr664, %if.end350 ], [ %y.tr664, %if.end331 ]
  tail call void @start_sequence() #5
  %87 = load i32* @target_flags, align 4, !tbaa !21
  %and373648 = lshr i32 %87, 23
  %88 = and i32 %and373648, 4
  %89 = add i32 %88, 4
  %sub376594649 = or i32 %88, 3
  %add377650 = add nsw i32 %sub376594649, %conv246
  %div651 = sdiv i32 %add377650, %89
  %cmp381652 = icmp sgt i32 %div651, 0
  br i1 %cmp381652, label %for.body, label %for.end

for.body:                                         ; preds = %if.end369, %if.end443
  %i.0655 = phi i32 [ %inc, %if.end443 ], [ 0, %if.end369 ]
  %need_clobber.0654 = phi i32 [ %or448, %if.end443 ], [ 0, %if.end369 ]
  %y.addr.1653 = phi %struct.rtx_def* [ %y.addr.2, %if.end443 ], [ %y.addr.0, %if.end369 ]
  %call383 = tail call %struct.rtx_def* @operand_subword(%struct.rtx_def* %x.addr.1602, i32 %i.0655, i32 1, i32 %idxprom593661670.pn.pn.in) #5
  %call384 = tail call %struct.rtx_def* @operand_subword(%struct.rtx_def* %y.addr.1653, i32 %i.0655, i32 1, i32 %idxprom593661670.pn.pn.in) #5
  %cmp385 = icmp eq %struct.rtx_def* %call384, null
  br i1 %cmp385, label %land.lhs.true387, label %if.end436

land.lhs.true387:                                 ; preds = %for.body
  %90 = getelementptr inbounds %struct.rtx_def* %y.addr.1653, i64 0, i32 0
  %bf.load388 = load i32* %90, align 8
  %bf.clear389 = and i32 %bf.load388, 65535
  switch i32 %bf.clear389, label %if.then433 [
    i32 67, label %if.then427
    i32 68, label %if.then427
    i32 54, label %if.then427
    i32 55, label %if.then427
    i32 58, label %if.then427
    i32 134, label %if.then427
    i32 56, label %if.then427
    i32 140, label %if.then427
  ]

if.then427:                                       ; preds = %land.lhs.true387, %land.lhs.true387, %land.lhs.true387, %land.lhs.true387, %land.lhs.true387, %land.lhs.true387, %land.lhs.true387, %land.lhs.true387
  %call428 = tail call %struct.rtx_def* @force_const_mem(i32 %idxprom593661670.pn.pn.in, %struct.rtx_def* %y.addr.1653) #5
  %call429 = tail call %struct.rtx_def* @operand_subword(%struct.rtx_def* %call428, i32 %i.0655, i32 1, i32 %idxprom593661670.pn.pn.in) #5
  br label %if.end436

if.then433:                                       ; preds = %land.lhs.true387
  %call434 = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %y.addr.1653, i32 %i.0655, i32 %idxprom593661670.pn.pn.in) #5
  br label %if.end436

if.end436:                                        ; preds = %for.body, %if.then433, %if.then427
  %y.addr.2 = phi %struct.rtx_def* [ %call428, %if.then427 ], [ %y.addr.1653, %if.then433 ], [ %y.addr.1653, %for.body ]
  %ypart.0 = phi %struct.rtx_def* [ %call429, %if.then427 ], [ %call434, %if.then433 ], [ %call384, %for.body ]
  %cmp437 = icmp eq %struct.rtx_def* %call383, null
  %cmp440 = icmp eq %struct.rtx_def* %ypart.0, null
  %or.cond469 = or i1 %cmp437, %cmp440
  br i1 %or.cond469, label %if.then442, label %if.end443

if.then442:                                       ; preds = %if.end436
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 3077, i8* getelementptr inbounds ([17 x i8]* @__FUNCTION__.emit_move_insn_1, i64 0, i64 0)) #8
  unreachable

if.end443:                                        ; preds = %if.end436
  %91 = getelementptr inbounds %struct.rtx_def* %call383, i64 0, i32 0
  %bf.load444 = load i32* %91, align 8
  %bf.clear445 = and i32 %bf.load444, 65535
  %cmp446 = icmp eq i32 %bf.clear445, 63
  %conv447 = zext i1 %cmp446 to i32
  %or448 = or i32 %conv447, %need_clobber.0654
  %call449 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call383, %struct.rtx_def* %ypart.0)
  %inc = add nsw i32 %i.0655, 1
  %92 = load i32* @target_flags, align 4, !tbaa !21
  %and373 = lshr i32 %92, 23
  %93 = and i32 %and373, 4
  %94 = add i32 %93, 4
  %sub376594 = or i32 %93, 3
  %add377 = add nsw i32 %sub376594, %conv246
  %div = sdiv i32 %add377, %94
  %cmp381 = icmp slt i32 %inc, %div
  br i1 %cmp381, label %for.body, label %for.cond.for.end_crit_edge

for.cond.for.end_crit_edge:                       ; preds = %if.end443
  %phitmp = icmp ne i32 %or448, 0
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %if.end369
  %need_clobber.0.lcssa = phi i1 [ %phitmp, %for.cond.for.end_crit_edge ], [ false, %if.end369 ]
  %y.addr.1.lcssa = phi %struct.rtx_def* [ %y.addr.2, %for.cond.for.end_crit_edge ], [ %y.addr.0, %if.end369 ]
  %last_insn.0.lcssa = phi %struct.rtx_def* [ %call449, %for.cond.for.end_crit_edge ], [ null, %if.end369 ]
  %call450 = tail call %struct.rtx_def* @gen_sequence() #5
  tail call void @end_sequence() #5
  %cmp451 = icmp eq %struct.rtx_def* %x.addr.1602, %y.addr.1.lcssa
  %95 = load i32* @reload_in_progress, align 4
  %tobool454 = icmp ne i32 %95, 0
  %or.cond470 = or i1 %cmp451, %tobool454
  %96 = load i32* @reload_completed, align 4
  %tobool456 = icmp ne i32 %96, 0
  %or.cond471 = or i1 %or.cond470, %tobool456
  %or.cond471.not = xor i1 %or.cond471, true
  %or.cond472 = and i1 %need_clobber.0.lcssa, %or.cond471.not
  br i1 %or.cond472, label %if.then460, label %if.end463

if.then460:                                       ; preds = %for.end
  %call461 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %x.addr.1602) #5
  %call462 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call461) #5
  br label %if.end463

if.end463:                                        ; preds = %for.end, %if.then460
  %call464 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call450) #5
  br label %return

if.else465:                                       ; preds = %if.else243
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 3101, i8* getelementptr inbounds ([17 x i8]* @__FUNCTION__.emit_move_insn_1, i64 0, i64 0)) #8
  unreachable

return:                                           ; preds = %if.end463, %if.end241, %if.then4
  %retval.0 = phi %struct.rtx_def* [ %call11, %if.then4 ], [ %call242, %if.end241 ], [ %last_insn.0.lcssa, %if.end463 ]
  ret %struct.rtx_def* %retval.0
}

declare %struct.rtx_def* @expand_binop(i32, %struct.optab*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32, i32) #1

declare %struct.rtx_def* @change_address(%struct.rtx_def*, i32, %struct.rtx_def*) #1

declare %struct.rtx_def* @gen_realpart(i32, %struct.rtx_def*) #1

declare %struct.rtx_def* @gen_imagpart(i32, %struct.rtx_def*) #1

declare %struct.rtx_def* @gen_rtx_SUBREG(i32, %struct.rtx_def*, i32) #1

declare %struct.rtx_def* @find_replacement(%struct.rtx_def**) #1

declare %struct.rtx_def* @gen_sequence() #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @push_block(%struct.rtx_def* %size, i32 %extra, i32 %below) #0 {
entry:
  %0 = load i32* @target_flags, align 4, !tbaa !21
  %and = lshr i32 %0, 25
  %1 = and i32 %and, 1
  %2 = or i32 %1, 4
  %3 = load i32* @ptr_mode, align 4, !tbaa !5
  %call = tail call %struct.rtx_def* @convert_modes(i32 %2, i32 %3, %struct.rtx_def* %size, i32 1)
  %4 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 0
  %bf.load = load i32* %4, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %if.else [
    i32 67, label %if.then
    i32 68, label %if.then
    i32 54, label %if.then
    i32 55, label %if.then
    i32 58, label %if.then
    i32 134, label %if.then
    i32 56, label %if.then
    i32 140, label %if.then
  ]

if.then:                                          ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  %conv = sext i32 %extra to i64
  %call28 = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %call, i64 %conv) #5
  tail call void @anti_adjust_stack(%struct.rtx_def* %call28) #5
  br label %if.end51

if.else:                                          ; preds = %entry
  %cmp31 = icmp eq i32 %bf.clear, 61
  %cmp33 = icmp eq i32 %extra, 0
  %or.cond = and i1 %cmp31, %cmp33
  br i1 %or.cond, label %if.then35, label %if.else36

if.then35:                                        ; preds = %if.else
  tail call void @anti_adjust_stack(%struct.rtx_def* %call) #5
  br label %if.end51

if.else36:                                        ; preds = %if.else
  %5 = load i32* @target_flags, align 4, !tbaa !21
  %and37 = lshr i32 %5, 25
  %6 = and i32 %and37, 1
  %7 = or i32 %6, 4
  %call40 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %7, %struct.rtx_def* %call) #5
  br i1 %cmp33, label %if.end, label %if.then43

if.then43:                                        ; preds = %if.else36
  %8 = load i32* @target_flags, align 4, !tbaa !21
  %and44 = lshr i32 %8, 25
  %9 = and i32 %and44, 1
  %10 = or i32 %9, 4
  %11 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 0), align 8, !tbaa !1
  %conv47 = sext i32 %extra to i64
  %call48 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv47) #5
  %call49 = tail call %struct.rtx_def* @expand_binop(i32 %10, %struct.optab* %11, %struct.rtx_def* %call40, %struct.rtx_def* %call48, %struct.rtx_def* %call40, i32 0, i32 3) #5
  br label %if.end

if.end:                                           ; preds = %if.else36, %if.then43
  %temp.0 = phi %struct.rtx_def* [ %call49, %if.then43 ], [ %call40, %if.else36 ]
  tail call void @anti_adjust_stack(%struct.rtx_def* %temp.0) #5
  br label %if.end51

if.end51:                                         ; preds = %if.then35, %if.end, %if.then
  %12 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 9), align 8, !tbaa !1
  %cmp52 = icmp ne i32 %extra, 0
  %tobool55 = icmp ne i32 %below, 0
  %or.cond61 = and i1 %cmp52, %tobool55
  br i1 %or.cond61, label %if.then56, label %if.end59

if.then56:                                        ; preds = %if.end51
  %conv57 = sext i32 %extra to i64
  %call58 = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %12, i64 %conv57) #5
  br label %if.end59

if.end59:                                         ; preds = %if.then56, %if.end51
  %temp.1 = phi %struct.rtx_def* [ %call58, %if.then56 ], [ %12, %if.end51 ]
  %13 = load i32* getelementptr inbounds ([9 x i32]* @class_narrowest_mode, i64 0, i64 1), align 4, !tbaa !5
  %call60 = tail call %struct.rtx_def* @memory_address(i32 %13, %struct.rtx_def* %temp.1) #5
  ret %struct.rtx_def* %call60
}

declare void @anti_adjust_stack(%struct.rtx_def*) #1

declare %struct.rtx_def* @plus_constant_wide(%struct.rtx_def*, i64) #1

declare %struct.rtx_def* @memory_address(i32, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define void @emit_push_insn(%struct.rtx_def* %x, i32 %mode, %union.tree_node* %type, %struct.rtx_def* %size, i32 %align, i32 %partial, %struct.rtx_def* readonly %reg, i32 %extra, %struct.rtx_def* %args_addr, %struct.rtx_def* %args_so_far, i32 %reg_parm_stack_space, %struct.rtx_def* %alignment_pad) #0 {
entry:
  %call = tail call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %x, i32 0)
  %cmp = icmp eq i32 %mode, 51
  br i1 %cmp, label %if.then, label %if.else287

if.then:                                          ; preds = %entry
  %0 = load i32* @target_flags, align 4, !tbaa !21
  %and = and i32 %0, 33554432
  %1 = lshr exact i32 %and, 23
  %2 = add i32 %1, 4
  %mul = mul nsw i32 %2, %partial
  %cmp4 = icmp eq %struct.rtx_def* %size, null
  br i1 %cmp4, label %if.then5, label %if.end

if.then5:                                         ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 3301, i8* getelementptr inbounds ([15 x i8]* @__FUNCTION__.emit_push_insn, i64 0, i64 0)) #8
  unreachable

if.end:                                           ; preds = %if.then
  %3 = lshr exact i32 %and, 20
  %4 = add i32 %3, 32
  %div = sdiv i32 %4, 8
  %rem = srem i32 %mul, %div
  %sub = sub nsw i32 %mul, %rem
  %cmp6 = icmp ne i32 %partial, 0
  br i1 %cmp6, label %if.then7, label %if.end9

if.then7:                                         ; preds = %if.end
  %conv = sext i32 %sub to i64
  %call8 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %call, i32 51, i64 %conv, i32 1, i32 1) #5
  br label %if.end9

if.end9:                                          ; preds = %if.then7, %if.end
  %xinner.0 = phi %struct.rtx_def* [ %call8, %if.then7 ], [ %call, %if.end ]
  %cmp10 = icmp eq i32 %reg_parm_stack_space, 0
  %cond12 = select i1 %cmp10, i32 0, i32 %sub
  %cmp13 = icmp eq %struct.rtx_def* %args_addr, null
  br i1 %cmp13, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %if.end9
  %5 = load i32* @target_flags, align 4, !tbaa !21
  %6 = and i32 %5, 6144
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %land.lhs.true20, label %if.else

land.lhs.true20:                                  ; preds = %land.lhs.true
  %8 = getelementptr inbounds %struct.rtx_def* %size, i64 0, i32 0
  %bf.load = load i32* %8, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp21 = icmp eq i32 %bf.clear, 54
  %cmp24 = icmp eq i32 %cond12, 0
  %or.cond = and i1 %cmp21, %cmp24
  br i1 %or.cond, label %land.lhs.true26, label %if.else

land.lhs.true26:                                  ; preds = %land.lhs.true20
  %rtwint = getelementptr inbounds %struct.rtx_def* %size, i64 0, i32 1, i64 0, i32 0
  %9 = load i64* %rtwint, align 8, !tbaa !22
  %conv27 = trunc i64 %9 to i32
  %sub28 = sub i32 %conv27, %sub
  %conv29 = zext i32 %sub28 to i64
  %10 = load i32* getelementptr inbounds ([9 x i32]* @class_narrowest_mode, i64 0, i64 1), align 4, !tbaa !5
  %cmp11.i = icmp eq i32 %10, 0
  br i1 %cmp11.i, label %while.end.i, label %for.body.lr.ph.i

for.body.lr.ph.i:                                 ; preds = %land.lhs.true26, %if.end24.i
  %l.addr.06.i = phi i64 [ %l.addr.1.i, %if.end24.i ], [ %conv29, %land.lhs.true26 ]
  %max_size.05.i = phi i64 [ %conv27.i, %if.end24.i ], [ 17, %land.lhs.true26 ]
  %n_insns.04.i = phi i64 [ %n_insns.1.i, %if.end24.i ], [ 0, %land.lhs.true26 ]
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i, %for.body.lr.ph.i
  %tmode.03.i = phi i32 [ %10, %for.body.lr.ph.i ], [ %conv6.i, %for.body.i ]
  %mode.02.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %tmode.0.mode.0.i, %for.body.i ]
  %idxprom.i = sext i32 %tmode.03.i to i64
  %arrayidx.i = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom.i
  %11 = load i8* %arrayidx.i, align 1, !tbaa !5
  %conv.i = zext i8 %11 to i64
  %cmp2.i = icmp ult i64 %conv.i, %max_size.05.i
  %tmode.0.mode.0.i = select i1 %cmp2.i, i32 %tmode.03.i, i32 %mode.02.i
  %arrayidx5.i = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom.i
  %12 = load i8* %arrayidx5.i, align 1, !tbaa !5
  %conv6.i = zext i8 %12 to i32
  %cmp1.i = icmp eq i8 %12, 0
  br i1 %cmp1.i, label %for.end.i, label %for.body.i

for.end.i:                                        ; preds = %for.body.i
  %cmp7.i = icmp eq i32 %tmode.0.mode.0.i, 0
  br i1 %cmp7.i, label %while.end.i, label %if.end10.i

if.end10.i:                                       ; preds = %for.end.i
  %idxprom11.i = sext i32 %tmode.0.mode.0.i to i64
  %13 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 30), align 8, !tbaa !1
  %insn_code.i = getelementptr inbounds %struct.optab* %13, i64 0, i32 1, i64 %idxprom11.i, i32 0
  %14 = load i32* %insn_code.i, align 4, !tbaa !23
  %cmp13.i = icmp eq i32 %14, 1317
  br i1 %cmp13.i, label %if.end24.i, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %if.end10.i
  %call.i = tail call i32 @get_mode_alignment(i32 %tmode.0.mode.0.i) #5
  %cmp15.i = icmp ult i32 %call.i, 129
  br i1 %cmp15.i, label %if.then17.i, label %if.end24.i

if.then17.i:                                      ; preds = %land.lhs.true.i
  %arrayidx19.i = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom11.i
  %15 = load i8* %arrayidx19.i, align 1, !tbaa !5
  %conv20.i = zext i8 %15 to i64
  %div.i = udiv i64 %l.addr.06.i, %conv20.i
  %add.i = add i64 %div.i, %n_insns.04.i
  %rem.i = urem i64 %l.addr.06.i, %conv20.i
  br label %if.end24.i

if.end24.i:                                       ; preds = %if.then17.i, %land.lhs.true.i, %if.end10.i
  %n_insns.1.i = phi i64 [ %add.i, %if.then17.i ], [ %n_insns.04.i, %land.lhs.true.i ], [ %n_insns.04.i, %if.end10.i ]
  %l.addr.1.i = phi i64 [ %rem.i, %if.then17.i ], [ %l.addr.06.i, %land.lhs.true.i ], [ %l.addr.06.i, %if.end10.i ]
  %arrayidx26.i = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom11.i
  %16 = load i8* %arrayidx26.i, align 1, !tbaa !5
  %conv27.i = zext i8 %16 to i64
  %cmp.i = icmp ugt i8 %16, 1
  br i1 %cmp.i, label %for.body.lr.ph.i, label %while.end.i

while.end.i:                                      ; preds = %if.end24.i, %for.end.i, %land.lhs.true26
  %l.addr.0.lcssa.i = phi i64 [ %conv29, %land.lhs.true26 ], [ %l.addr.1.i, %if.end24.i ], [ %l.addr.06.i, %for.end.i ]
  %n_insns.0.lcssa.i = phi i64 [ 0, %land.lhs.true26 ], [ %n_insns.1.i, %if.end24.i ], [ %n_insns.04.i, %for.end.i ]
  %tobool.i = icmp eq i64 %l.addr.0.lcssa.i, 0
  br i1 %tobool.i, label %move_by_pieces_ninsns.exit, label %if.then28.i

if.then28.i:                                      ; preds = %while.end.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 1542, i8* getelementptr inbounds ([22 x i8]* @__FUNCTION__.move_by_pieces_ninsns, i64 0, i64 0)) #8
  unreachable

move_by_pieces_ninsns.exit:                       ; preds = %while.end.i
  %17 = load i32* @optimize_size, align 4, !tbaa !21
  %tobool31 = icmp eq i32 %17, 0
  br i1 %tobool31, label %cond.false33, label %cond.end34

cond.false33:                                     ; preds = %move_by_pieces_ninsns.exit
  %18 = load %struct.processor_costs** @ix86_cost, align 8, !tbaa !1
  %move_ratio = getelementptr inbounds %struct.processor_costs* %18, i64 0, i32 10
  %19 = load i32* %move_ratio, align 4, !tbaa !29
  %phitmp664 = zext i32 %19 to i64
  br label %cond.end34

cond.end34:                                       ; preds = %move_by_pieces_ninsns.exit, %cond.false33
  %cond35 = phi i64 [ %phitmp664, %cond.false33 ], [ 3, %move_by_pieces_ninsns.exit ]
  %cmp37 = icmp ult i64 %n_insns.0.lcssa.i, %cond35
  br i1 %cmp37, label %land.lhs.true39, label %if.else

land.lhs.true39:                                  ; preds = %cond.end34
  %20 = load i32* @target_flags, align 4, !tbaa !21
  %and40 = and i32 %20, 33554432
  %tobool41 = icmp eq i32 %and40, 0
  %21 = load i64* %rtwint, align 8, !tbaa !22
  br i1 %tobool41, label %cond.false47, label %cond.true42

cond.true42:                                      ; preds = %land.lhs.true39
  %add = add nsw i64 %21, 7
  %and46 = and i64 %add, -8
  br label %cond.end53

cond.false47:                                     ; preds = %land.lhs.true39
  %add51 = add nsw i64 %21, 1
  %and52 = and i64 %add51, -2
  br label %cond.end53

cond.end53:                                       ; preds = %cond.false47, %cond.true42
  %cond54 = phi i64 [ %and46, %cond.true42 ], [ %and52, %cond.false47 ]
  %cmp58 = icmp eq i64 %cond54, %21
  br i1 %cmp58, label %if.then60, label %if.else

if.then60:                                        ; preds = %cond.end53
  %tobool61 = icmp eq i32 %extra, 0
  br i1 %tobool61, label %if.end74, label %if.then71

if.then71:                                        ; preds = %if.then60
  %conv72 = sext i32 %extra to i64
  %call73 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv72) #5
  tail call void @anti_adjust_stack(%struct.rtx_def* %call73) #5
  %.pre = load i64* %rtwint, align 8, !tbaa !22
  br label %if.end74

if.end74:                                         ; preds = %if.then60, %if.then71
  %22 = phi i64 [ %.pre, %if.then71 ], [ %21, %if.then60 ]
  %conv78 = sext i32 %sub to i64
  %sub79 = sub nsw i64 %22, %conv78
  tail call void @move_by_pieces(%struct.rtx_def* null, %struct.rtx_def* %xinner.0, i64 %sub79, i32 undef)
  br label %ret

if.else:                                          ; preds = %land.lhs.true, %cond.end53, %cond.end34, %land.lhs.true20, %if.end9
  br i1 %cmp6, label %if.then82, label %if.end101

if.then82:                                        ; preds = %if.else
  %23 = getelementptr inbounds %struct.rtx_def* %size, i64 0, i32 0
  %bf.load83 = load i32* %23, align 8
  %bf.clear84 = and i32 %bf.load83, 65535
  %cmp85 = icmp eq i32 %bf.clear84, 54
  br i1 %cmp85, label %if.then87, label %if.else94

if.then87:                                        ; preds = %if.then82
  %rtwint90 = getelementptr inbounds %struct.rtx_def* %size, i64 0, i32 1, i64 0, i32 0
  %24 = load i64* %rtwint90, align 8, !tbaa !22
  %conv91 = sext i32 %sub to i64
  %sub92 = sub nsw i64 %24, %conv91
  %call93 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %sub92) #5
  br label %if.end101

if.else94:                                        ; preds = %if.then82
  %bf.lshr = lshr i32 %bf.load83, 16
  %bf.clear96 = and i32 %bf.lshr, 255
  %25 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 2), align 8, !tbaa !1
  %conv97 = sext i32 %sub to i64
  %call98 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv97) #5
  %call99 = tail call %struct.rtx_def* @expand_binop(i32 %bf.clear96, %struct.optab* %25, %struct.rtx_def* %size, %struct.rtx_def* %call98, %struct.rtx_def* null, i32 0, i32 3) #5
  br label %if.end101

if.end101:                                        ; preds = %if.then87, %if.else94, %if.else
  %size.addr.0 = phi %struct.rtx_def* [ %call93, %if.then87 ], [ %call99, %if.else94 ], [ %size, %if.else ]
  br i1 %cmp13, label %if.then103, label %if.else107

if.then103:                                       ; preds = %if.end101
  %call106 = tail call %struct.rtx_def* @push_block(%struct.rtx_def* %size.addr.0, i32 %extra, i32 0)
  br label %if.end129

if.else107:                                       ; preds = %if.end101
  %26 = getelementptr inbounds %struct.rtx_def* %args_so_far, i64 0, i32 0
  %bf.load108 = load i32* %26, align 8
  %bf.clear109 = and i32 %bf.load108, 65535
  %cmp110 = icmp eq i32 %bf.clear109, 54
  br i1 %cmp110, label %if.then112, label %if.else120

if.then112:                                       ; preds = %if.else107
  %conv113 = sext i32 %cond12 to i64
  %rtwint116 = getelementptr inbounds %struct.rtx_def* %args_so_far, i64 0, i32 1, i64 0, i32 0
  %27 = load i64* %rtwint116, align 8, !tbaa !22
  %add117 = add nsw i64 %27, %conv113
  %call118 = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %args_addr, i64 %add117) #5
  %call119 = tail call %struct.rtx_def* @memory_address(i32 51, %struct.rtx_def* %call118) #5
  br label %if.end129

if.else120:                                       ; preds = %if.else107
  %28 = load i32* @target_flags, align 4, !tbaa !21
  %and121 = lshr i32 %28, 25
  %29 = and i32 %and121, 1
  %30 = or i32 %29, 4
  %call124 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %30, %struct.rtx_def* %args_addr, %struct.rtx_def* %args_so_far) #5
  %conv125 = sext i32 %cond12 to i64
  %call126 = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %call124, i64 %conv125) #5
  %call127 = tail call %struct.rtx_def* @memory_address(i32 51, %struct.rtx_def* %call126) #5
  br label %if.end129

if.end129:                                        ; preds = %if.then112, %if.else120, %if.then103
  %temp.0 = phi %struct.rtx_def* [ %call119, %if.then112 ], [ %call127, %if.else120 ], [ %call106, %if.then103 ]
  %call130 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %temp.0) #5
  %cmp131 = icmp eq %union.tree_node* %type, null
  br i1 %cmp131, label %if.else134, label %if.then133

if.then133:                                       ; preds = %if.end129
  tail call void @set_mem_attributes(%struct.rtx_def* %call130, %union.tree_node* %type, i32 1) #5
  tail call void @set_mem_alias_set(%struct.rtx_def* %call130, i64 0) #5
  br label %if.end135

if.else134:                                       ; preds = %if.end129
  tail call void @set_mem_align(%struct.rtx_def* %call130, i32 %align) #5
  br label %if.end135

if.end135:                                        ; preds = %if.else134, %if.then133
  %31 = getelementptr inbounds %struct.rtx_def* %size.addr.0, i64 0, i32 0
  %bf.load136 = load i32* %31, align 8
  %bf.clear137 = and i32 %bf.load136, 65535
  %cmp138 = icmp eq i32 %bf.clear137, 54
  br i1 %cmp138, label %land.lhs.true140, label %if.end135.if.else160_crit_edge

if.end135.if.else160_crit_edge:                   ; preds = %if.end135
  %.pre720 = load i32* getelementptr inbounds ([9 x i32]* @class_narrowest_mode, i64 0, i64 1), align 4, !tbaa !5
  br label %if.else160

land.lhs.true140:                                 ; preds = %if.end135
  %rtwint143 = getelementptr inbounds %struct.rtx_def* %size.addr.0, i64 0, i32 1, i64 0, i32 0
  %32 = load i64* %rtwint143, align 8, !tbaa !22
  %conv145 = and i64 %32, 4294967295
  %33 = load i32* getelementptr inbounds ([9 x i32]* @class_narrowest_mode, i64 0, i64 1), align 4, !tbaa !5
  %cmp11.i667 = icmp eq i32 %33, 0
  br i1 %cmp11.i667, label %while.end.i707, label %for.body.lr.ph.i671

for.body.lr.ph.i671:                              ; preds = %land.lhs.true140, %if.end24.i703
  %l.addr.06.i668 = phi i64 [ %l.addr.1.i699, %if.end24.i703 ], [ %conv145, %land.lhs.true140 ]
  %max_size.05.i669 = phi i64 [ %conv27.i701, %if.end24.i703 ], [ 17, %land.lhs.true140 ]
  %n_insns.04.i670 = phi i64 [ %n_insns.1.i698, %if.end24.i703 ], [ 0, %land.lhs.true140 ]
  br label %for.body.i682

for.body.i682:                                    ; preds = %for.body.i682, %for.body.lr.ph.i671
  %tmode.03.i672 = phi i32 [ %33, %for.body.lr.ph.i671 ], [ %conv6.i680, %for.body.i682 ]
  %mode.02.i673 = phi i32 [ 0, %for.body.lr.ph.i671 ], [ %tmode.0.mode.0.i678, %for.body.i682 ]
  %idxprom.i674 = sext i32 %tmode.03.i672 to i64
  %arrayidx.i675 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom.i674
  %34 = load i8* %arrayidx.i675, align 1, !tbaa !5
  %conv.i676 = zext i8 %34 to i64
  %cmp2.i677 = icmp ult i64 %conv.i676, %max_size.05.i669
  %tmode.0.mode.0.i678 = select i1 %cmp2.i677, i32 %tmode.03.i672, i32 %mode.02.i673
  %arrayidx5.i679 = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom.i674
  %35 = load i8* %arrayidx5.i679, align 1, !tbaa !5
  %conv6.i680 = zext i8 %35 to i32
  %cmp1.i681 = icmp eq i8 %35, 0
  br i1 %cmp1.i681, label %for.end.i684, label %for.body.i682

for.end.i684:                                     ; preds = %for.body.i682
  %cmp7.i683 = icmp eq i32 %tmode.0.mode.0.i678, 0
  br i1 %cmp7.i683, label %while.end.i707, label %if.end10.i688

if.end10.i688:                                    ; preds = %for.end.i684
  %idxprom11.i685 = sext i32 %tmode.0.mode.0.i678 to i64
  %36 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 30), align 8, !tbaa !1
  %insn_code.i686 = getelementptr inbounds %struct.optab* %36, i64 0, i32 1, i64 %idxprom11.i685, i32 0
  %37 = load i32* %insn_code.i686, align 4, !tbaa !23
  %cmp13.i687 = icmp eq i32 %37, 1317
  br i1 %cmp13.i687, label %if.end24.i703, label %land.lhs.true.i691

land.lhs.true.i691:                               ; preds = %if.end10.i688
  %call.i689 = tail call i32 @get_mode_alignment(i32 %tmode.0.mode.0.i678) #5
  %cmp15.i690 = icmp ult i32 %call.i689, 129
  br i1 %cmp15.i690, label %if.then17.i697, label %if.end24.i703

if.then17.i697:                                   ; preds = %land.lhs.true.i691
  %arrayidx19.i692 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom11.i685
  %38 = load i8* %arrayidx19.i692, align 1, !tbaa !5
  %conv20.i693 = zext i8 %38 to i64
  %div.i694 = udiv i64 %l.addr.06.i668, %conv20.i693
  %add.i695 = add i64 %div.i694, %n_insns.04.i670
  %rem.i696 = urem i64 %l.addr.06.i668, %conv20.i693
  br label %if.end24.i703

if.end24.i703:                                    ; preds = %if.then17.i697, %land.lhs.true.i691, %if.end10.i688
  %n_insns.1.i698 = phi i64 [ %add.i695, %if.then17.i697 ], [ %n_insns.04.i670, %land.lhs.true.i691 ], [ %n_insns.04.i670, %if.end10.i688 ]
  %l.addr.1.i699 = phi i64 [ %rem.i696, %if.then17.i697 ], [ %l.addr.06.i668, %land.lhs.true.i691 ], [ %l.addr.06.i668, %if.end10.i688 ]
  %arrayidx26.i700 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom11.i685
  %39 = load i8* %arrayidx26.i700, align 1, !tbaa !5
  %conv27.i701 = zext i8 %39 to i64
  %cmp.i702 = icmp ugt i8 %39, 1
  br i1 %cmp.i702, label %for.body.lr.ph.i671, label %while.end.i707

while.end.i707:                                   ; preds = %if.end24.i703, %for.end.i684, %land.lhs.true140
  %l.addr.0.lcssa.i704 = phi i64 [ %conv145, %land.lhs.true140 ], [ %l.addr.1.i699, %if.end24.i703 ], [ %l.addr.06.i668, %for.end.i684 ]
  %n_insns.0.lcssa.i705 = phi i64 [ 0, %land.lhs.true140 ], [ %n_insns.1.i698, %if.end24.i703 ], [ %n_insns.04.i670, %for.end.i684 ]
  %tobool.i706 = icmp eq i64 %l.addr.0.lcssa.i704, 0
  br i1 %tobool.i706, label %move_by_pieces_ninsns.exit709, label %if.then28.i708

if.then28.i708:                                   ; preds = %while.end.i707
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 1542, i8* getelementptr inbounds ([22 x i8]* @__FUNCTION__.move_by_pieces_ninsns, i64 0, i64 0)) #8
  unreachable

move_by_pieces_ninsns.exit709:                    ; preds = %while.end.i707
  %40 = load i32* @optimize_size, align 4, !tbaa !21
  %tobool147 = icmp eq i32 %40, 0
  br i1 %tobool147, label %cond.false149, label %cond.end151

cond.false149:                                    ; preds = %move_by_pieces_ninsns.exit709
  %41 = load %struct.processor_costs** @ix86_cost, align 8, !tbaa !1
  %move_ratio150 = getelementptr inbounds %struct.processor_costs* %41, i64 0, i32 10
  %42 = load i32* %move_ratio150, align 4, !tbaa !29
  %phitmp = zext i32 %42 to i64
  br label %cond.end151

cond.end151:                                      ; preds = %move_by_pieces_ninsns.exit709, %cond.false149
  %cond152 = phi i64 [ %phitmp, %cond.false149 ], [ 3, %move_by_pieces_ninsns.exit709 ]
  %cmp154 = icmp ult i64 %n_insns.0.lcssa.i705, %cond152
  br i1 %cmp154, label %if.then156, label %if.else160

if.then156:                                       ; preds = %cond.end151
  %43 = load i64* %rtwint143, align 8, !tbaa !22
  tail call void @move_by_pieces(%struct.rtx_def* %call130, %struct.rtx_def* %xinner.0, i64 %43, i32 undef)
  br label %ret

if.else160:                                       ; preds = %if.end135.if.else160_crit_edge, %cond.end151
  %44 = phi i32 [ %.pre720, %if.end135.if.else160_crit_edge ], [ %33, %cond.end151 ]
  %div161 = lshr i32 %align, 3
  %conv162 = zext i32 %div161 to i64
  %call163 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv162) #5
  %cmp165715 = icmp eq i32 %44, 0
  br i1 %cmp165715, label %if.end247, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.else160
  %rtwint178 = getelementptr inbounds %struct.rtx_def* %size.addr.0, i64 0, i32 1, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %mode164.0716 = phi i32 [ %44, %for.body.lr.ph ], [ %conv246, %for.inc ]
  %idxprom = sext i32 %mode164.0716 to i64
  %arrayidx167 = getelementptr inbounds [59 x i32]* @movstr_optab, i64 0, i64 %idxprom
  %45 = load i32* %arrayidx167, align 4, !tbaa !5
  %cmp168 = icmp eq i32 %45, 1317
  br i1 %cmp168, label %for.inc, label %land.lhs.true170

land.lhs.true170:                                 ; preds = %for.body
  %bf.load171 = load i32* %31, align 8
  %bf.clear172 = and i32 %bf.load171, 65535
  %cmp173 = icmp eq i32 %bf.clear172, 54
  br i1 %cmp173, label %land.lhs.true175, label %lor.lhs.false

land.lhs.true175:                                 ; preds = %land.lhs.true170
  %46 = load i64* %rtwint178, align 8, !tbaa !22
  %arrayidx180 = getelementptr inbounds [59 x i64]* @mode_mask_array, i64 0, i64 %idxprom
  %47 = load i64* %arrayidx180, align 8, !tbaa !22
  %shr = lshr i64 %47, 1
  %cmp181 = icmp ugt i64 %46, %shr
  br i1 %cmp181, label %lor.lhs.false, label %land.lhs.true191

lor.lhs.false:                                    ; preds = %land.lhs.true175, %land.lhs.true170
  %arrayidx184 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom
  %48 = load i16* %arrayidx184, align 2, !tbaa !19
  %conv185 = zext i16 %48 to i32
  %49 = load i32* @target_flags, align 4, !tbaa !21
  %and186 = lshr i32 %49, 20
  %50 = and i32 %and186, 32
  %51 = add i32 %50, 32
  %cmp189 = icmp ult i32 %conv185, %51
  br i1 %cmp189, label %for.inc, label %land.lhs.true191

land.lhs.true191:                                 ; preds = %land.lhs.true175, %lor.lhs.false
  %idxprom192 = sext i32 %45 to i64
  %operand = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom192, i32 3
  %52 = load %struct.insn_operand_data** %operand, align 8, !tbaa !31
  %predicate = getelementptr inbounds %struct.insn_operand_data* %52, i64 0, i32 0
  %53 = load i32 (%struct.rtx_def*, i32)** %predicate, align 8, !tbaa !32
  %tobool195 = icmp eq i32 (%struct.rtx_def*, i32)* %53, null
  br i1 %tobool195, label %land.lhs.true199, label %lor.lhs.false196

lor.lhs.false196:                                 ; preds = %land.lhs.true191
  %call197 = tail call i32 %53(%struct.rtx_def* %call130, i32 51) #5
  %tobool198 = icmp eq i32 %call197, 0
  br i1 %tobool198, label %for.inc, label %land.lhs.true199

land.lhs.true199:                                 ; preds = %lor.lhs.false196, %land.lhs.true191
  %predicate204 = getelementptr inbounds %struct.insn_operand_data* %52, i64 1, i32 0
  %54 = load i32 (%struct.rtx_def*, i32)** %predicate204, align 8, !tbaa !32
  %tobool205 = icmp eq i32 (%struct.rtx_def*, i32)* %54, null
  br i1 %tobool205, label %land.lhs.true209, label %lor.lhs.false206

lor.lhs.false206:                                 ; preds = %land.lhs.true199
  %call207 = tail call i32 %54(%struct.rtx_def* %xinner.0, i32 51) #5
  %tobool208 = icmp eq i32 %call207, 0
  br i1 %tobool208, label %for.inc, label %land.lhs.true209

land.lhs.true209:                                 ; preds = %lor.lhs.false206, %land.lhs.true199
  %predicate214 = getelementptr inbounds %struct.insn_operand_data* %52, i64 3, i32 0
  %55 = load i32 (%struct.rtx_def*, i32)** %predicate214, align 8, !tbaa !32
  %tobool215 = icmp eq i32 (%struct.rtx_def*, i32)* %55, null
  br i1 %tobool215, label %if.then219, label %lor.lhs.false216

lor.lhs.false216:                                 ; preds = %land.lhs.true209
  %call217 = tail call i32 %55(%struct.rtx_def* %call163, i32 0) #5
  %tobool218 = icmp eq i32 %call217, 0
  br i1 %tobool218, label %for.inc, label %if.then219

if.then219:                                       ; preds = %lor.lhs.false216, %land.lhs.true209
  %call.i710 = tail call %struct.rtx_def* @convert_modes(i32 %mode164.0716, i32 0, %struct.rtx_def* %size.addr.0, i32 1) #5
  %call221 = tail call %struct.rtx_def* @get_last_insn() #5
  %predicate226 = getelementptr inbounds %struct.insn_operand_data* %52, i64 2, i32 0
  %56 = load i32 (%struct.rtx_def*, i32)** %predicate226, align 8, !tbaa !32
  %cmp227 = icmp eq i32 (%struct.rtx_def*, i32)* %56, null
  br i1 %cmp227, label %if.end234, label %land.lhs.true229

land.lhs.true229:                                 ; preds = %if.then219
  %call230 = tail call i32 %56(%struct.rtx_def* %call.i710, i32 %mode164.0716) #5
  %tobool231 = icmp eq i32 %call230, 0
  br i1 %tobool231, label %if.then232, label %if.end234

if.then232:                                       ; preds = %land.lhs.true229
  %call233 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %mode164.0716, %struct.rtx_def* %call.i710) #5
  br label %if.end234

if.end234:                                        ; preds = %land.lhs.true229, %if.then219, %if.then232
  %op2.0 = phi %struct.rtx_def* [ %call.i710, %land.lhs.true229 ], [ %call233, %if.then232 ], [ %call.i710, %if.then219 ]
  %genfun = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom192, i32 2
  %57 = load %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun, align 8, !tbaa !25
  %call237 = tail call %struct.rtx_def* (%struct.rtx_def*, ...)* %57(%struct.rtx_def* %call130, %struct.rtx_def* %xinner.0, %struct.rtx_def* %op2.0, %struct.rtx_def* %call163) #5
  %tobool238 = icmp eq %struct.rtx_def* %call237, null
  br i1 %tobool238, label %if.else241, label %if.then239

if.then239:                                       ; preds = %if.end234
  %call240 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call237) #5
  br label %ret

if.else241:                                       ; preds = %if.end234
  tail call void @delete_insns_since(%struct.rtx_def* %call221) #5
  br label %for.inc

for.inc:                                          ; preds = %lor.lhs.false196, %lor.lhs.false206, %lor.lhs.false216, %lor.lhs.false, %for.body, %if.else241
  %arrayidx245 = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom
  %58 = load i8* %arrayidx245, align 1, !tbaa !5
  %conv246 = zext i8 %58 to i32
  %cmp165 = icmp eq i8 %58, 0
  br i1 %cmp165, label %if.end247, label %for.body

if.end247:                                        ; preds = %for.inc, %if.else160
  %59 = load i32* @target_flags, align 4, !tbaa !21
  %and248 = and i32 %59, 4096
  %tobool249 = icmp eq i32 %and248, 0
  br i1 %tobool249, label %if.then250, label %if.end259

if.then250:                                       ; preds = %if.end247
  %60 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 8), align 8, !tbaa !1
  %call251 = tail call i32 @reg_mentioned_p(%struct.rtx_def* %60, %struct.rtx_def* %temp.0) #5
  %tobool252 = icmp eq i32 %call251, 0
  br i1 %tobool252, label %lor.lhs.false253, label %if.then256

lor.lhs.false253:                                 ; preds = %if.then250
  %61 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 9), align 8, !tbaa !1
  %call254 = tail call i32 @reg_mentioned_p(%struct.rtx_def* %61, %struct.rtx_def* %temp.0) #5
  %tobool255 = icmp eq i32 %call254, 0
  br i1 %tobool255, label %if.end259, label %if.then256

if.then256:                                       ; preds = %lor.lhs.false253, %if.then250
  %call257 = tail call %struct.rtx_def* @copy_to_reg(%struct.rtx_def* %temp.0) #5
  br label %if.end259

if.end259:                                        ; preds = %lor.lhs.false253, %if.end247, %if.then256
  %temp.1 = phi %struct.rtx_def* [ %temp.0, %if.end247 ], [ %call257, %if.then256 ], [ %temp.0, %lor.lhs.false253 ]
  %62 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr = getelementptr inbounds %struct.function* %62, i64 0, i32 2
  %63 = load %struct.expr_status** %expr, align 8, !tbaa !6
  %x_inhibit_defer_pop = getelementptr inbounds %struct.expr_status* %63, i64 0, i32 1
  %64 = load i32* %x_inhibit_defer_pop, align 4, !tbaa !15
  %add260 = add nsw i32 %64, 1
  store i32 %add260, i32* %x_inhibit_defer_pop, align 4, !tbaa !15
  %65 = load %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 11), align 8, !tbaa !1
  %66 = load i32* @target_flags, align 4, !tbaa !21
  %and261 = lshr i32 %66, 25
  %67 = and i32 %and261, 1
  %68 = or i32 %67, 4
  %arrayidx265 = getelementptr inbounds %struct.rtx_def* %xinner.0, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx265 to %struct.rtx_def**
  %69 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %70 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !1
  %type269 = bitcast %union.tree_node* %70 to %struct.tree_type*
  %mode270 = getelementptr inbounds %struct.tree_type* %type269, i64 0, i32 6
  %bf.load271 = load i32* %mode270, align 4
  %bf.lshr272 = lshr i32 %bf.load271, 9
  %bf.clear273 = and i32 %bf.lshr272, 127
  %unsigned_flag = getelementptr inbounds %union.tree_node* %70, i64 0, i32 0, i32 0, i32 2
  %bf.load274 = load i32* %unsigned_flag, align 8
  %bf.lshr275 = lshr i32 %bf.load274, 13
  %bf.clear276 = and i32 %bf.lshr275, 1
  %call.i711 = tail call %struct.rtx_def* @convert_modes(i32 %bf.clear273, i32 0, %struct.rtx_def* %size.addr.0, i32 %bf.clear276) #5
  %71 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !1
  %type278 = bitcast %union.tree_node* %71 to %struct.tree_type*
  %mode279 = getelementptr inbounds %struct.tree_type* %type278, i64 0, i32 6
  %bf.load280 = load i32* %mode279, align 4
  %bf.lshr281 = lshr i32 %bf.load280, 9
  %bf.clear282 = and i32 %bf.lshr281, 127
  tail call void (%struct.rtx_def*, i32, i32, i32, ...)* @emit_library_call(%struct.rtx_def* %65, i32 0, i32 0, i32 3, %struct.rtx_def* %temp.1, i32 %68, %struct.rtx_def* %69, i32 %68, %struct.rtx_def* %call.i711, i32 %bf.clear282) #5
  %72 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr283 = getelementptr inbounds %struct.function* %72, i64 0, i32 2
  %73 = load %struct.expr_status** %expr283, align 8, !tbaa !6
  %x_inhibit_defer_pop284 = getelementptr inbounds %struct.expr_status* %73, i64 0, i32 1
  %74 = load i32* %x_inhibit_defer_pop284, align 4, !tbaa !15
  %sub285 = add nsw i32 %74, -1
  store i32 %sub285, i32* %x_inhibit_defer_pop284, align 4, !tbaa !15
  br label %ret

if.else287:                                       ; preds = %entry
  %cmp288 = icmp sgt i32 %partial, 0
  br i1 %cmp288, label %if.then290, label %if.else424

if.then290:                                       ; preds = %if.else287
  %idxprom292 = sext i32 %mode to i64
  %arrayidx293 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom292
  %75 = load i8* %arrayidx293, align 1, !tbaa !5
  %conv294 = zext i8 %75 to i32
  %76 = load i32* @target_flags, align 4, !tbaa !21
  %and295 = lshr i32 %76, 23
  %77 = and i32 %and295, 4
  %78 = add i32 %77, 4
  %div298 = sdiv i32 %conv294, %78
  %rtwint310 = getelementptr inbounds %struct.rtx_def* %args_so_far, i64 0, i32 1, i64 0, i32 0
  %79 = load i64* %rtwint310, align 8, !tbaa !22
  %conv311 = trunc i64 %79 to i32
  %tobool313 = icmp ne i32 %extra, 0
  %cmp315 = icmp eq %struct.rtx_def* %args_addr, null
  %or.cond512 = and i1 %tobool313, %cmp315
  br i1 %or.cond512, label %if.then323, label %if.end326

if.then323:                                       ; preds = %if.then290
  %conv324 = sext i32 %extra to i64
  %call325 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv324) #5
  tail call void @anti_adjust_stack(%struct.rtx_def* %call325) #5
  br label %if.end326

if.end326:                                        ; preds = %if.then323, %if.then290
  %cmp332 = icmp eq i32 %reg_parm_stack_space, 0
  %cond337 = select i1 %cmp332, i32 0, i32 %partial
  %80 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 0
  %bf.load338 = load i32* %80, align 8
  %bf.clear339 = and i32 %bf.load338, 65535
  %cmp384 = icmp eq i32 %bf.clear339, 61
  br i1 %cmp384, label %land.lhs.true386, label %if.end401

land.lhs.true386:                                 ; preds = %if.end326
  %arrayidx388 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx388 to i32*
  %81 = load i32* %rtuint, align 4, !tbaa !21
  %cmp389 = icmp ult i32 %81, 53
  br i1 %cmp389, label %land.lhs.true391, label %if.end401

land.lhs.true391:                                 ; preds = %land.lhs.true386
  %bf.lshr393 = lshr i32 %bf.load338, 16
  %bf.clear394 = and i32 %bf.lshr393, 255
  %idxprom395663 = zext i32 %bf.clear394 to i64
  %arrayidx396 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom395663
  %82 = load i32* %arrayidx396, align 4, !tbaa !5
  %cmp397 = icmp eq i32 %82, 1
  br i1 %cmp397, label %if.end401, label %if.then399

if.then399:                                       ; preds = %land.lhs.true391
  %call400 = tail call %struct.rtx_def* @copy_to_reg(%struct.rtx_def* %call) #5
  br label %if.end401

if.end401:                                        ; preds = %land.lhs.true391, %if.then399, %land.lhs.true386, %if.end326
  %x.addr.0 = phi %struct.rtx_def* [ %call400, %if.then399 ], [ %call, %land.lhs.true391 ], [ %call, %land.lhs.true386 ], [ %call, %if.end326 ]
  %cmp404718 = icmp sgt i32 %div298, %partial
  br i1 %cmp404718, label %if.then410.lr.ph, label %ret

if.then410.lr.ph:                                 ; preds = %if.end401
  %sub412 = sub i32 %cond337, %partial
  br label %if.then410

if.then410:                                       ; preds = %if.then410.lr.ph, %if.then410
  %i.0719.in = phi i32 [ %div298, %if.then410.lr.ph ], [ %i.0719, %if.then410 ]
  %i.0719 = add nsw i32 %i.0719.in, -1
  %call411 = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %x.addr.0, i32 %i.0719, i32 %mode) #5
  %83 = load i32* @word_mode, align 4, !tbaa !5
  %add413 = add i32 %sub412, %i.0719
  %84 = load i32* @target_flags, align 4, !tbaa !21
  %and414 = lshr i32 %84, 23
  %85 = and i32 %and414, 4
  %86 = add i32 %85, 4
  %mul417 = mul nsw i32 %86, %add413
  %add418 = add nsw i32 %mul417, %conv311
  %conv419 = sext i32 %add418 to i64
  %call420 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv419) #5
  tail call void @emit_push_insn(%struct.rtx_def* %call411, i32 %83, %union.tree_node* null, %struct.rtx_def* null, i32 %align, i32 0, %struct.rtx_def* null, i32 0, %struct.rtx_def* %args_addr, %struct.rtx_def* %call420, i32 %reg_parm_stack_space, %struct.rtx_def* %alignment_pad)
  %cmp404 = icmp sgt i32 %i.0719, %partial
  br i1 %cmp404, label %if.then410, label %ret

if.else424:                                       ; preds = %if.else287
  %tobool426 = icmp ne i32 %extra, 0
  %cmp428 = icmp eq %struct.rtx_def* %args_addr, null
  %or.cond514 = and i1 %tobool426, %cmp428
  br i1 %or.cond514, label %if.then436, label %if.end439

if.then436:                                       ; preds = %if.else424
  %conv437 = sext i32 %extra to i64
  %call438 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv437) #5
  tail call void @anti_adjust_stack(%struct.rtx_def* %call438) #5
  br label %if.end439

if.end439:                                        ; preds = %if.then436, %if.else424
  br i1 %cmp428, label %land.lhs.true442, label %if.else449

land.lhs.true442:                                 ; preds = %if.end439
  %87 = load i32* @target_flags, align 4, !tbaa !21
  %88 = and i32 %87, 6144
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %if.then448, label %if.else449

if.then448:                                       ; preds = %land.lhs.true442
  tail call fastcc void @emit_single_push_insn(i32 %mode, %struct.rtx_def* %call, %union.tree_node* %type)
  br label %ret

if.else449:                                       ; preds = %land.lhs.true442, %if.end439
  %90 = getelementptr inbounds %struct.rtx_def* %args_so_far, i64 0, i32 0
  %bf.load450 = load i32* %90, align 8
  %bf.clear451 = and i32 %bf.load450, 65535
  %cmp452 = icmp eq i32 %bf.clear451, 54
  br i1 %cmp452, label %if.then454, label %if.else460

if.then454:                                       ; preds = %if.else449
  %rtwint457 = getelementptr inbounds %struct.rtx_def* %args_so_far, i64 0, i32 1, i64 0, i32 0
  %91 = load i64* %rtwint457, align 8, !tbaa !22
  %call458 = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %args_addr, i64 %91) #5
  %call459 = tail call %struct.rtx_def* @memory_address(i32 %mode, %struct.rtx_def* %call458) #5
  br label %if.end466

if.else460:                                       ; preds = %if.else449
  %92 = load i32* @target_flags, align 4, !tbaa !21
  %and461 = lshr i32 %92, 25
  %93 = and i32 %and461, 1
  %94 = or i32 %93, 4
  %call464 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %94, %struct.rtx_def* %args_addr, %struct.rtx_def* %args_so_far) #5
  %call465 = tail call %struct.rtx_def* @memory_address(i32 %mode, %struct.rtx_def* %call464) #5
  br label %if.end466

if.end466:                                        ; preds = %if.else460, %if.then454
  %addr.0 = phi %struct.rtx_def* [ %call459, %if.then454 ], [ %call465, %if.else460 ]
  %call467 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %mode, %struct.rtx_def* %addr.0) #5
  %cmp468 = icmp eq %union.tree_node* %type, null
  br i1 %cmp468, label %if.end471, label %if.then470

if.then470:                                       ; preds = %if.end466
  tail call void @set_mem_attributes(%struct.rtx_def* %call467, %union.tree_node* %type, i32 1) #5
  tail call void @set_mem_alias_set(%struct.rtx_def* %call467, i64 0) #5
  br label %if.end471

if.end471:                                        ; preds = %if.end466, %if.then470
  %call472 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call467, %struct.rtx_def* %call)
  br label %ret

ret:                                              ; preds = %if.then410, %if.end401, %if.end259, %if.end74, %if.then448, %if.end471, %if.then239, %if.then156
  %x.addr.1 = phi %struct.rtx_def* [ %call, %if.then156 ], [ %call, %if.then239 ], [ %call, %if.end259 ], [ %call, %if.end74 ], [ %call, %if.end471 ], [ %call, %if.then448 ], [ %x.addr.0, %if.end401 ], [ %x.addr.0, %if.then410 ]
  %cmp476 = icmp sgt i32 %partial, 0
  %cmp479 = icmp ne %struct.rtx_def* %reg, null
  %or.cond516 = and i1 %cmp476, %cmp479
  br i1 %or.cond516, label %if.then481, label %if.end492

if.then481:                                       ; preds = %ret
  %95 = getelementptr inbounds %struct.rtx_def* %reg, i64 0, i32 0
  %bf.load482 = load i32* %95, align 8
  %bf.clear483 = and i32 %bf.load482, 65535
  %cmp484 = icmp eq i32 %bf.clear483, 39
  br i1 %cmp484, label %if.then486, label %for.body.i713.preheader

if.then486:                                       ; preds = %if.then481
  tail call void @emit_group_load(%struct.rtx_def* %reg, %struct.rtx_def* %x.addr.1, i32 -1)
  br label %if.end492

for.body.i713.preheader:                          ; preds = %if.then481
  %arrayidx489 = getelementptr inbounds %struct.rtx_def* %reg, i64 0, i32 1, i64 0
  %rtuint490 = bitcast %union.rtunion_def* %arrayidx489 to i32*
  %96 = load i32* %rtuint490, align 4, !tbaa !21
  br label %for.body.i713

for.body.i713:                                    ; preds = %for.body.i713.preheader, %for.body.i713
  %i.042.i = phi i32 [ %inc.i, %for.body.i713 ], [ 0, %for.body.i713.preheader ]
  %97 = load i32* @word_mode, align 4, !tbaa !5
  %add.i712 = add nsw i32 %i.042.i, %96
  %call33.i = tail call %struct.rtx_def* @gen_rtx_REG(i32 %97, i32 %add.i712) #5
  %call34.i = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %x.addr.1, i32 %i.042.i, i32 %mode) #5
  %call35.i = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call33.i, %struct.rtx_def* %call34.i) #5
  %inc.i = add nsw i32 %i.042.i, 1
  %exitcond.i = icmp eq i32 %inc.i, %partial
  br i1 %exitcond.i, label %if.end492, label %for.body.i713

if.end492:                                        ; preds = %for.body.i713, %if.then486, %ret
  %cmp495 = icmp eq %struct.rtx_def* %args_addr, null
  %tobool504 = icmp ne %struct.rtx_def* %alignment_pad, null
  %or.cond518 = and i1 %tobool504, %cmp495
  br i1 %or.cond518, label %if.then508, label %if.end509

if.then508:                                       ; preds = %if.end492
  tail call void @anti_adjust_stack(%struct.rtx_def* %alignment_pad) #5
  br label %if.end509

if.end509:                                        ; preds = %if.then508, %if.end492
  ret void
}

declare void @set_mem_attributes(%struct.rtx_def*, %union.tree_node*, i32) #1

declare void @set_mem_alias_set(%struct.rtx_def*, i64) #1

declare void @set_mem_align(%struct.rtx_def*, i32) #1

declare i32 @reg_mentioned_p(%struct.rtx_def*, %struct.rtx_def*) #1

declare void @emit_library_call(%struct.rtx_def*, i32, i32, i32, ...) #1

; Function Attrs: nounwind uwtable
define internal fastcc void @emit_single_push_insn(i32 %mode, %struct.rtx_def* %x, %union.tree_node* %type) #0 {
entry:
  %0 = load i32* @target_flags, align 4, !tbaa !21
  %and = and i32 %0, 33554432
  %tobool = icmp eq i32 %and, 0
  %idxprom = sext i32 %mode to i64
  %arrayidx = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom
  %1 = load i8* %arrayidx, align 1, !tbaa !5
  %conv = zext i8 %1 to i32
  br i1 %tobool, label %cond.false15, label %cond.true9

cond.true9:                                       ; preds = %entry
  %add = add nsw i32 %conv, 7
  %and1 = and i32 %add, 504
  %add13 = add nsw i32 %conv, 7
  %and14 = and i32 %add13, 504
  br label %cond.end21

cond.false15:                                     ; preds = %entry
  %add5 = add nsw i32 %conv, 1
  %and6 = and i32 %add5, 510
  %add19 = add nsw i32 %conv, 1
  %and20 = and i32 %add19, 510
  br label %cond.end21

cond.end21:                                       ; preds = %cond.false15, %cond.true9
  %cond85 = phi i32 [ %and1, %cond.true9 ], [ %and6, %cond.false15 ]
  %cond22 = phi i32 [ %and14, %cond.true9 ], [ %and20, %cond.false15 ]
  %2 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr = getelementptr inbounds %struct.function* %2, i64 0, i32 2
  %3 = load %struct.expr_status** %expr, align 8, !tbaa !6
  %x_stack_pointer_delta = getelementptr inbounds %struct.expr_status* %3, i64 0, i32 2
  %4 = load i32* %x_stack_pointer_delta, align 4, !tbaa !14
  %add23 = add nsw i32 %4, %cond22
  store i32 %add23, i32* %x_stack_pointer_delta, align 4, !tbaa !14
  %5 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 48), align 8, !tbaa !1
  %insn_code = getelementptr inbounds %struct.optab* %5, i64 0, i32 1, i64 %idxprom, i32 0
  %6 = load i32* %insn_code, align 4, !tbaa !23
  %cmp = icmp eq i32 %6, 1317
  br i1 %cmp, label %if.end38, label %if.then

if.then:                                          ; preds = %cond.end21
  %idxprom27 = sext i32 %6 to i64
  %operand = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom27, i32 3
  %7 = load %struct.insn_operand_data** %operand, align 8, !tbaa !31
  %predicate = getelementptr inbounds %struct.insn_operand_data* %7, i64 0, i32 0
  %8 = load i32 (%struct.rtx_def*, i32)** %predicate, align 8, !tbaa !32
  %tobool30 = icmp eq i32 (%struct.rtx_def*, i32)* %8, null
  br i1 %tobool30, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.then
  %call = tail call i32 %8(%struct.rtx_def* %x, i32 %mode) #5
  %tobool31 = icmp eq i32 %call, 0
  br i1 %tobool31, label %if.then32, label %if.end

if.then32:                                        ; preds = %land.lhs.true
  %call33 = tail call %struct.rtx_def* @force_reg(i32 %mode, %struct.rtx_def* %x) #5
  br label %if.end

if.end:                                           ; preds = %land.lhs.true, %if.then, %if.then32
  %x.addr.0 = phi %struct.rtx_def* [ %x, %land.lhs.true ], [ %call33, %if.then32 ], [ %x, %if.then ]
  %genfun = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom27, i32 2
  %9 = load %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun, align 8, !tbaa !25
  %call36 = tail call %struct.rtx_def* (%struct.rtx_def*, ...)* %9(%struct.rtx_def* %x.addr.0) #5
  %call37 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call36) #5
  br label %return

if.end38:                                         ; preds = %cond.end21
  %cmp42 = icmp eq i32 %conv, %cond85
  %10 = load i32* @target_flags, align 4, !tbaa !21
  %and45 = lshr i32 %10, 25
  %11 = and i32 %and45, 1
  %12 = or i32 %11, 4
  %13 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !1
  br i1 %cmp42, label %if.then44, label %if.else

if.then44:                                        ; preds = %if.end38
  %call48 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 96, i32 %12, %struct.rtx_def* %13) #5
  br label %if.end59

if.else:                                          ; preds = %if.end38
  %conv52 = zext i32 %cond85 to i64
  %sub = sub nsw i64 0, %conv52
  %call53 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %sub) #5
  %call54 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %12, %struct.rtx_def* %13, %struct.rtx_def* %call53) #5
  %14 = load i32* @target_flags, align 4, !tbaa !21
  %and55 = lshr i32 %14, 25
  %15 = and i32 %and55, 1
  %16 = or i32 %15, 4
  %17 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !1
  %call58 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 100, i32 %16, %struct.rtx_def* %17, %struct.rtx_def* %call54) #5
  br label %if.end59

if.end59:                                         ; preds = %if.else, %if.then44
  %dest_addr.0 = phi %struct.rtx_def* [ %call48, %if.then44 ], [ %call58, %if.else ]
  %call60 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %mode, %struct.rtx_def* %dest_addr.0) #5
  %cmp61 = icmp eq %union.tree_node* %type, null
  br i1 %cmp61, label %if.end67, label %if.then63

if.then63:                                        ; preds = %if.end59
  tail call void @set_mem_attributes(%struct.rtx_def* %call60, %union.tree_node* %type, i32 1) #5
  %18 = load i32* @flag_optimize_sibling_calls, align 4, !tbaa !21
  %tobool64 = icmp eq i32 %18, 0
  br i1 %tobool64, label %if.end67, label %if.then65

if.then65:                                        ; preds = %if.then63
  tail call void @set_mem_alias_set(%struct.rtx_def* %call60, i64 0) #5
  br label %if.end67

if.end67:                                         ; preds = %if.then63, %if.end59, %if.then65
  %call68 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call60, %struct.rtx_def* %x)
  br label %return

return:                                           ; preds = %if.end67, %if.end
  ret void
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @expand_assignment(%union.tree_node* %to, %union.tree_node* %from, i32 %want_value, i32 %suggest_reg) #0 {
entry:
  %mode1 = alloca i32, align 4
  %bitsize = alloca i64, align 8
  %bitpos = alloca i64, align 8
  %offset = alloca %union.tree_node*, align 8
  %unsignedp = alloca i32, align 4
  %volatilep = alloca i32, align 4
  %code = getelementptr inbounds %union.tree_node* %to, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  switch i32 %bf.clear, label %if.end256 [
    i32 0, label %if.then
    i32 39, label %if.then23
    i32 40, label %if.then23
    i32 43, label %if.then23
    i32 44, label %if.then23
  ]

if.then:                                          ; preds = %entry
  %call = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %from, %struct.rtx_def* null, i32 0, i32 0)
  %tobool = icmp ne i32 %want_value, 0
  %cond = select i1 %tobool, %struct.rtx_def* %call, %struct.rtx_def* null
  br label %return

if.then23:                                        ; preds = %entry, %entry, %entry, %entry
  store i32 0, i32* %volatilep, align 4, !tbaa !21
  tail call void @push_temp_slots() #5
  %call24 = call %union.tree_node* @get_inner_reference(%union.tree_node* %to, i64* %bitsize, i64* %bitpos, %union.tree_node** %offset, i32* %mode1, i32* %unsignedp, i32* %volatilep)
  %0 = load i32* %mode1, align 4, !tbaa !5
  %cmp25 = icmp eq i32 %0, 0
  %tobool26 = icmp ne i32 %want_value, 0
  %or.cond = and i1 %cmp25, %tobool26
  br i1 %or.cond, label %if.then27, label %if.end29

if.then27:                                        ; preds = %if.then23
  %call28 = tail call %union.tree_node* @stabilize_reference(%union.tree_node* %call24) #5
  br label %if.end29

if.end29:                                         ; preds = %if.then27, %if.then23
  %tem.0 = phi %union.tree_node* [ %call28, %if.then27 ], [ %call24, %if.then23 ]
  %call30 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %tem.0, %struct.rtx_def* null, i32 0, i32 0)
  %1 = load %union.tree_node** %offset, align 8, !tbaa !1
  %cmp31 = icmp eq %union.tree_node* %1, null
  br i1 %cmp31, label %if.end88, label %if.then32

if.then32:                                        ; preds = %if.end29
  %call33 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %1, %struct.rtx_def* null, i32 0, i32 1)
  %2 = getelementptr inbounds %struct.rtx_def* %call30, i64 0, i32 0
  %bf.load34 = load i32* %2, align 8
  %bf.clear35 = and i32 %bf.load34, 65535
  %cmp36 = icmp eq i32 %bf.clear35, 66
  br i1 %cmp36, label %if.end38, label %if.then37

if.then37:                                        ; preds = %if.then32
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 3686, i8* getelementptr inbounds ([18 x i8]* @__FUNCTION__.expand_assignment, i64 0, i64 0)) #8
  unreachable

if.end38:                                         ; preds = %if.then32
  %3 = getelementptr inbounds %struct.rtx_def* %call33, i64 0, i32 0
  %bf.load39 = load i32* %3, align 8
  %bf.lshr = lshr i32 %bf.load39, 16
  %bf.clear40 = and i32 %bf.lshr, 255
  %4 = load i32* @ptr_mode, align 4, !tbaa !5
  %cmp41 = icmp eq i32 %bf.clear40, %4
  br i1 %cmp41, label %if.end44, label %if.then42

if.then42:                                        ; preds = %if.end38
  %call.i = tail call %struct.rtx_def* @convert_modes(i32 %4, i32 0, %struct.rtx_def* %call33, i32 0) #5
  %bf.load45.pre = load i32* %2, align 8
  br label %if.end44

if.end44:                                         ; preds = %if.end38, %if.then42
  %bf.load45 = phi i32 [ %bf.load45.pre, %if.then42 ], [ %bf.load34, %if.end38 ]
  %offset_rtx.0 = phi %struct.rtx_def* [ %call.i, %if.then42 ], [ %call33, %if.end38 ]
  %5 = and i32 %bf.load45, 16777215
  %6 = icmp eq i32 %5, 3342402
  br i1 %6, label %land.lhs.true53, label %if.end84

land.lhs.true53:                                  ; preds = %if.end44
  %fld = getelementptr inbounds %struct.rtx_def* %call30, i64 0, i32 1
  %rtx = bitcast [1 x %union.rtunion_def]* %fld to %struct.rtx_def**
  %7 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %8 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 0
  %bf.load54 = load i32* %8, align 8
  %bf.clear56 = and i32 %bf.load54, 16711680
  %cmp57 = icmp ne i32 %bf.clear56, 0
  %9 = load i64* %bitsize, align 8
  %cmp59 = icmp sgt i64 %9, 0
  %or.cond447 = and i1 %cmp57, %cmp59
  br i1 %or.cond447, label %land.lhs.true60, label %if.end84

land.lhs.true60:                                  ; preds = %land.lhs.true53
  %10 = load i64* %bitpos, align 8, !tbaa !22
  %rem = srem i64 %10, %9
  %cmp61 = icmp eq i64 %rem, 0
  br i1 %cmp61, label %land.lhs.true62, label %if.end84

land.lhs.true62:                                  ; preds = %land.lhs.true60
  %call63 = tail call i32 @get_mode_alignment(i32 %0) #5
  %conv = zext i32 %call63 to i64
  %rem64 = srem i64 %9, %conv
  %cmp65 = icmp eq i64 %rem64, 0
  br i1 %cmp65, label %land.lhs.true67, label %if.end84

land.lhs.true67:                                  ; preds = %land.lhs.true62
  %arrayidx69 = getelementptr inbounds %struct.rtx_def* %call30, i64 0, i32 1, i64 1
  %rtmem = bitcast %union.rtunion_def* %arrayidx69 to %struct.mem_attrs**
  %11 = load %struct.mem_attrs** %rtmem, align 8, !tbaa !1
  %cmp70 = icmp eq %struct.mem_attrs* %11, null
  br i1 %cmp70, label %cond.end77, label %cond.true72

cond.true72:                                      ; preds = %land.lhs.true67
  %align = getelementptr inbounds %struct.mem_attrs* %11, i64 0, i32 4
  %12 = load i32* %align, align 4, !tbaa !27
  br label %cond.end77

cond.end77:                                       ; preds = %land.lhs.true67, %cond.true72
  %cond78 = phi i32 [ %12, %cond.true72 ], [ 8, %land.lhs.true67 ]
  %call79 = tail call i32 @get_mode_alignment(i32 %0) #5
  %cmp80 = icmp eq i32 %cond78, %call79
  br i1 %cmp80, label %if.then82, label %if.end84

if.then82:                                        ; preds = %cond.end77
  %div = sdiv i64 %10, 8
  %call83 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %call30, i32 %0, i64 %div, i32 1, i32 1) #5
  store i64 0, i64* %bitpos, align 8, !tbaa !22
  br label %if.end84

if.end84:                                         ; preds = %if.then82, %cond.end77, %land.lhs.true62, %land.lhs.true60, %land.lhs.true53, %if.end44
  %to_rtx.0 = phi %struct.rtx_def* [ %call83, %if.then82 ], [ %call30, %cond.end77 ], [ %call30, %land.lhs.true62 ], [ %call30, %land.lhs.true60 ], [ %call30, %land.lhs.true53 ], [ %call30, %if.end44 ]
  %type = getelementptr inbounds %union.tree_node* %to, i64 0, i32 0, i32 0, i32 1
  %13 = load %union.tree_node** %type, align 8, !tbaa !36
  %call.i555 = tail call fastcc i64 @highest_pow2_factor(%union.tree_node* %1) #5
  %align.i = getelementptr inbounds %union.tree_node* %13, i64 0, i32 0, i32 7
  %14 = bitcast %union.tree_node** %align.i to i32*
  %15 = load i32* %14, align 4, !tbaa !62
  %div.i = lshr i32 %15, 3
  %conv.i = zext i32 %div.i to i64
  %cmp.i = icmp sgt i64 %call.i555, %conv.i
  %cond.i = select i1 %cmp.i, i64 %call.i555, i64 %conv.i
  %call87 = tail call %struct.rtx_def* @offset_address(%struct.rtx_def* %to_rtx.0, %struct.rtx_def* %offset_rtx.0, i64 %cond.i) #5
  br label %if.end88

if.end88:                                         ; preds = %if.end29, %if.end84
  %to_rtx.1 = phi %struct.rtx_def* [ %call87, %if.end84 ], [ %call30, %if.end29 ]
  %16 = getelementptr inbounds %struct.rtx_def* %to_rtx.1, i64 0, i32 0
  %bf.load89 = load i32* %16, align 8
  %bf.clear90 = and i32 %bf.load89, 65535
  %cmp91 = icmp eq i32 %bf.clear90, 66
  br i1 %cmp91, label %if.then93, label %if.end158

if.then93:                                        ; preds = %if.end88
  %arrayidx95 = getelementptr inbounds %struct.rtx_def* %to_rtx.1, i64 0, i32 1, i64 1
  %rtmem96 = bitcast %union.rtunion_def* %arrayidx95 to %struct.mem_attrs**
  %17 = load %struct.mem_attrs** %rtmem96, align 8, !tbaa !1
  %cmp97 = icmp eq %struct.mem_attrs* %17, null
  br i1 %cmp97, label %cond.end104, label %cond.false100

cond.false100:                                    ; preds = %if.then93
  %expr = getelementptr inbounds %struct.mem_attrs* %17, i64 0, i32 1
  %18 = load %union.tree_node** %expr, align 8, !tbaa !76
  br label %cond.end104

cond.end104:                                      ; preds = %if.then93, %cond.false100
  %cond105 = phi %union.tree_node* [ %18, %cond.false100 ], [ null, %if.then93 ]
  %call106 = tail call %struct.rtx_def* @shallow_copy_rtx(%struct.rtx_def* %to_rtx.1) #5
  tail call void @set_mem_attributes(%struct.rtx_def* %call106, %union.tree_node* %to, i32 0) #5
  %arrayidx108 = getelementptr inbounds %struct.rtx_def* %call106, i64 0, i32 1, i64 1
  %rtmem109 = bitcast %union.rtunion_def* %arrayidx108 to %struct.mem_attrs**
  %19 = load %struct.mem_attrs** %rtmem109, align 8, !tbaa !1
  %cmp110 = icmp eq %struct.mem_attrs* %19, null
  br i1 %cmp110, label %cond.end118, label %cond.false113

cond.false113:                                    ; preds = %cond.end104
  %expr117 = getelementptr inbounds %struct.mem_attrs* %19, i64 0, i32 1
  %20 = load %union.tree_node** %expr117, align 8, !tbaa !76
  br label %cond.end118

cond.end118:                                      ; preds = %cond.end104, %cond.false113
  %cond119 = phi %union.tree_node* [ %20, %cond.false113 ], [ null, %cond.end104 ]
  %cmp120 = icmp eq %union.tree_node* %cond119, %cond105
  %brmerge = or i1 %cmp120, %cmp110
  br i1 %brmerge, label %if.end158, label %cond.false129

cond.false129:                                    ; preds = %cond.end118
  %offset133 = getelementptr inbounds %struct.mem_attrs* %19, i64 0, i32 2
  %21 = load %struct.rtx_def** %offset133, align 8, !tbaa !77
  %tobool134 = icmp eq %struct.rtx_def* %21, null
  br i1 %tobool134, label %if.end158, label %land.lhs.true135

land.lhs.true135:                                 ; preds = %cond.false129
  %22 = load i64* %bitpos, align 8, !tbaa !22
  %.off = add i64 %22, 7
  %23 = icmp ugt i64 %.off, 14
  br i1 %23, label %if.then139, label %if.end158

if.then139:                                       ; preds = %land.lhs.true135
  %div136 = sdiv i64 %22, 8
  %rtwint = getelementptr inbounds %struct.rtx_def* %21, i64 0, i32 1, i64 0, i32 0
  %24 = load i64* %rtwint, align 8, !tbaa !22
  %sub = sub nsw i64 %24, %div136
  %call156 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %sub) #5
  tail call void @set_mem_offset(%struct.rtx_def* %call106, %struct.rtx_def* %call156) #5
  br label %if.end158

if.end158:                                        ; preds = %cond.end118, %cond.false129, %land.lhs.true135, %if.then139, %if.end88
  %to_rtx.2 = phi %struct.rtx_def* [ %call106, %if.then139 ], [ %call106, %land.lhs.true135 ], [ %call106, %cond.false129 ], [ %call106, %cond.end118 ], [ %to_rtx.1, %if.end88 ]
  %25 = load i32* %volatilep, align 4, !tbaa !21
  %tobool159 = icmp eq i32 %25, 0
  br i1 %tobool159, label %if.end173, label %land.lhs.true160

land.lhs.true160:                                 ; preds = %if.end158
  %26 = getelementptr inbounds %struct.rtx_def* %to_rtx.2, i64 0, i32 0
  %bf.load161 = load i32* %26, align 8
  %bf.clear162 = and i32 %bf.load161, 65535
  %cmp163 = icmp eq i32 %bf.clear162, 66
  br i1 %cmp163, label %if.then165, label %if.end173

if.then165:                                       ; preds = %land.lhs.true160
  %cmp166 = icmp eq %struct.rtx_def* %to_rtx.2, %call30
  br i1 %cmp166, label %if.then168, label %if.end170

if.then168:                                       ; preds = %if.then165
  %call169 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %call30) #5
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %call169, i64 0, i32 0
  %bf.load171.pre = load i32* %.phi.trans.insert, align 8
  br label %if.end170

if.end170:                                        ; preds = %if.then168, %if.then165
  %bf.load171 = phi i32 [ %bf.load171.pre, %if.then168 ], [ %bf.load161, %if.then165 ]
  %to_rtx.3 = phi %struct.rtx_def* [ %call169, %if.then168 ], [ %to_rtx.2, %if.then165 ]
  %27 = getelementptr inbounds %struct.rtx_def* %to_rtx.3, i64 0, i32 0
  %bf.set = or i32 %bf.load171, 134217728
  store i32 %bf.set, i32* %27, align 8
  br label %if.end173

if.end173:                                        ; preds = %if.end158, %if.end170, %land.lhs.true160
  %to_rtx.4 = phi %struct.rtx_def* [ %to_rtx.3, %if.end170 ], [ %to_rtx.2, %land.lhs.true160 ], [ %to_rtx.2, %if.end158 ]
  %bf.load176 = load i32* %code, align 8
  %bf.clear177 = and i32 %bf.load176, 255
  %cmp178 = icmp eq i32 %bf.clear177, 39
  br i1 %cmp178, label %land.lhs.true180, label %if.end196

land.lhs.true180:                                 ; preds = %if.end173
  %operands = getelementptr inbounds %union.tree_node* %to, i64 0, i32 0, i32 2
  %arrayidx181 = getelementptr inbounds i32* %operands, i64 2
  %28 = bitcast i32* %arrayidx181 to %union.tree_node**
  %29 = load %union.tree_node** %28, align 8, !tbaa !1
  %readonly_flag = getelementptr inbounds %union.tree_node* %29, i64 0, i32 0, i32 0, i32 2
  %bf.load183 = load i32* %readonly_flag, align 8
  %bf.clear185 = and i32 %bf.load183, 4096
  %tobool186 = icmp eq i32 %bf.clear185, 0
  br i1 %tobool186, label %if.end196, label %if.then187

if.then187:                                       ; preds = %land.lhs.true180
  %cmp188 = icmp eq %struct.rtx_def* %to_rtx.4, %call30
  br i1 %cmp188, label %if.then190, label %if.end192

if.then190:                                       ; preds = %if.then187
  %call191 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %call30) #5
  br label %if.end192

if.end192:                                        ; preds = %if.then190, %if.then187
  %to_rtx.5 = phi %struct.rtx_def* [ %call191, %if.then190 ], [ %to_rtx.4, %if.then187 ]
  %30 = getelementptr inbounds %struct.rtx_def* %to_rtx.5, i64 0, i32 0
  %bf.load193 = load i32* %30, align 8
  %bf.set195 = or i32 %bf.load193, 67108864
  store i32 %bf.set195, i32* %30, align 8
  br label %if.end196

if.end196:                                        ; preds = %land.lhs.true180, %if.end192, %if.end173
  %to_rtx.6 = phi %struct.rtx_def* [ %to_rtx.5, %if.end192 ], [ %to_rtx.4, %land.lhs.true180 ], [ %to_rtx.4, %if.end173 ]
  %31 = getelementptr inbounds %struct.rtx_def* %to_rtx.6, i64 0, i32 0
  %bf.load197 = load i32* %31, align 8
  %bf.clear198 = and i32 %bf.load197, 65535
  %cmp199 = icmp eq i32 %bf.clear198, 66
  br i1 %cmp199, label %land.lhs.true201, label %if.end213

land.lhs.true201:                                 ; preds = %if.end196
  %call202 = tail call i32 @can_address_p(%union.tree_node* %to) #5
  %tobool203 = icmp eq i32 %call202, 0
  br i1 %tobool203, label %if.then204, label %if.end213

if.then204:                                       ; preds = %land.lhs.true201
  %cmp205 = icmp eq %struct.rtx_def* %to_rtx.6, %call30
  br i1 %cmp205, label %if.then207, label %if.end209

if.then207:                                       ; preds = %if.then204
  %call208 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %call30) #5
  br label %if.end209

if.end209:                                        ; preds = %if.then207, %if.then204
  %to_rtx.7 = phi %struct.rtx_def* [ %call208, %if.then207 ], [ %to_rtx.6, %if.then204 ]
  %32 = getelementptr inbounds %struct.rtx_def* %to_rtx.7, i64 0, i32 0
  %bf.load210 = load i32* %32, align 8
  %bf.set212 = or i32 %bf.load210, 16777216
  store i32 %bf.set212, i32* %32, align 8
  br label %if.end213

if.end213:                                        ; preds = %land.lhs.true201, %if.end209, %if.end196
  %to_rtx.8 = phi %struct.rtx_def* [ %to_rtx.6, %land.lhs.true201 ], [ %to_rtx.7, %if.end209 ], [ %to_rtx.6, %if.end196 ]
  %33 = load i64* %bitsize, align 8, !tbaa !22
  %34 = load i64* %bitpos, align 8, !tbaa !22
  %35 = load i32* %mode1, align 4, !tbaa !5
  br i1 %tobool26, label %cond.true215, label %cond.end223

cond.true215:                                     ; preds = %if.end213
  %type217 = getelementptr inbounds %union.tree_node* %to, i64 0, i32 0, i32 0, i32 1
  %36 = load %union.tree_node** %type217, align 8, !tbaa !36
  %type218 = bitcast %union.tree_node* %36 to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type* %type218, i64 0, i32 6
  %bf.load219 = load i32* %mode, align 4
  %bf.lshr220 = lshr i32 %bf.load219, 9
  %bf.clear221 = and i32 %bf.lshr220, 127
  br label %cond.end223

cond.end223:                                      ; preds = %if.end213, %cond.true215
  %cond224 = phi i32 [ %bf.clear221, %cond.true215 ], [ 0, %if.end213 ]
  %37 = load i32* %unsignedp, align 4, !tbaa !21
  %type226 = getelementptr inbounds %union.tree_node* %tem.0, i64 0, i32 0, i32 0, i32 1
  %38 = load %union.tree_node** %type226, align 8, !tbaa !36
  %call227 = tail call i64 @get_alias_set(%union.tree_node* %to) #5
  %conv228 = trunc i64 %call227 to i32
  %call229 = tail call fastcc %struct.rtx_def* @store_field(%struct.rtx_def* %to_rtx.8, i64 %33, i64 %34, i32 %35, %union.tree_node* %from, i32 %cond224, i32 %37, %union.tree_node* %38, i32 %conv228)
  tail call void @preserve_temp_slots(%struct.rtx_def* %call229) #5
  tail call void @free_temp_slots() #5
  tail call void @pop_temp_slots() #5
  br i1 %tobool26, label %cond.true231, label %return

cond.true231:                                     ; preds = %cond.end223
  %type233 = getelementptr inbounds %union.tree_node* %to, i64 0, i32 0, i32 0, i32 1
  %39 = load %union.tree_node** %type233, align 8, !tbaa !36
  %type234 = bitcast %union.tree_node* %39 to %struct.tree_type*
  %mode235 = getelementptr inbounds %struct.tree_type* %type234, i64 0, i32 6
  %bf.load236 = load i32* %mode235, align 4
  %bf.lshr237 = lshr i32 %bf.load236, 9
  %bf.clear238 = and i32 %bf.lshr237, 127
  %type240 = getelementptr inbounds %union.tree_node* %from, i64 0, i32 0, i32 0, i32 1
  %40 = load %union.tree_node** %type240, align 8, !tbaa !36
  %type241 = bitcast %union.tree_node* %40 to %struct.tree_type*
  %mode242 = getelementptr inbounds %struct.tree_type* %type241, i64 0, i32 6
  %bf.load243 = load i32* %mode242, align 4
  %bf.lshr244 = lshr i32 %bf.load243, 9
  %bf.clear245 = and i32 %bf.lshr244, 127
  %unsigned_flag = getelementptr inbounds %union.tree_node* %39, i64 0, i32 0, i32 0, i32 2
  %bf.load249 = load i32* %unsigned_flag, align 8
  %bf.lshr250 = lshr i32 %bf.load249, 13
  %bf.clear251 = and i32 %bf.lshr250, 1
  %call252 = tail call %struct.rtx_def* @convert_modes(i32 %bf.clear238, i32 %bf.clear245, %struct.rtx_def* %call229, i32 %bf.clear251)
  br label %return

if.end256:                                        ; preds = %entry
  %code258 = getelementptr inbounds %union.tree_node* %from, i64 0, i32 0, i32 0, i32 2
  %bf.load259 = load i32* %code258, align 8
  %bf.clear260 = and i32 %bf.load259, 255
  %cmp261 = icmp eq i32 %bf.clear260, 53
  br i1 %cmp261, label %land.lhs.true263, label %if.then340

land.lhs.true263:                                 ; preds = %if.end256
  %call264 = tail call i32 @aggregate_value_p(%union.tree_node* %from) #5
  %tobool265 = icmp eq i32 %call264, 0
  br i1 %tobool265, label %land.lhs.true266, label %if.then340

land.lhs.true266:                                 ; preds = %land.lhs.true263
  %type268 = getelementptr inbounds %union.tree_node* %from, i64 0, i32 0, i32 0, i32 1
  %41 = load %union.tree_node** %type268, align 8, !tbaa !36
  %size = getelementptr inbounds %union.tree_node* %41, i64 0, i32 0, i32 2
  %42 = bitcast i32* %size to %union.tree_node**
  %43 = load %union.tree_node** %42, align 8, !tbaa !40
  %code271 = getelementptr inbounds %union.tree_node* %43, i64 0, i32 0, i32 0, i32 2
  %bf.load272 = load i32* %code271, align 8
  %bf.clear273 = and i32 %bf.load272, 255
  %cmp274 = icmp eq i32 %bf.clear273, 25
  br i1 %cmp274, label %land.lhs.true276, label %if.then340

land.lhs.true276:                                 ; preds = %land.lhs.true266
  %bf.load279 = load i32* %code, align 8
  %44 = and i32 %bf.load279, 254
  %switch = icmp eq i32 %44, 34
  br i1 %switch, label %land.lhs.true290, label %if.then304

land.lhs.true290:                                 ; preds = %land.lhs.true276
  %rtl = getelementptr inbounds %union.tree_node* %to, i64 0, i32 0, i32 17
  %45 = load %struct.rtx_def** %rtl, align 8, !tbaa !37
  %tobool291 = icmp eq %struct.rtx_def* %45, null
  br i1 %tobool291, label %cond.false295, label %cond.end298

cond.false295:                                    ; preds = %land.lhs.true290
  tail call void @make_decl_rtl(%union.tree_node* %to, i8* null) #5
  %46 = load %struct.rtx_def** %rtl, align 8, !tbaa !37
  br label %cond.end298

cond.end298:                                      ; preds = %land.lhs.true290, %cond.false295
  %cond299 = phi %struct.rtx_def* [ %46, %cond.false295 ], [ %45, %land.lhs.true290 ]
  %47 = getelementptr inbounds %struct.rtx_def* %cond299, i64 0, i32 0
  %bf.load300 = load i32* %47, align 8
  %bf.clear301 = and i32 %bf.load300, 65535
  %cmp302 = icmp eq i32 %bf.clear301, 61
  br i1 %cmp302, label %if.then340, label %if.then304

if.then304:                                       ; preds = %land.lhs.true276, %cond.end298
  tail call void @push_temp_slots() #5
  %call305 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %from, %struct.rtx_def* null, i32 0, i32 0)
  %call309 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %to, %struct.rtx_def* null, i32 0, i32 4)
  %48 = getelementptr inbounds %struct.rtx_def* %call309, i64 0, i32 0
  %bf.load311 = load i32* %48, align 8
  %bf.clear312 = and i32 %bf.load311, 65535
  %cmp313 = icmp eq i32 %bf.clear312, 39
  br i1 %cmp313, label %if.then315, label %if.else

if.then315:                                       ; preds = %if.then304
  %49 = load %union.tree_node** %type268, align 8, !tbaa !36
  %call318 = tail call i64 @int_size_in_bytes(%union.tree_node* %49) #5
  %conv319 = trunc i64 %call318 to i32
  tail call void @emit_group_load(%struct.rtx_def* %call309, %struct.rtx_def* %call305, i32 %conv319)
  br label %if.end331

if.else:                                          ; preds = %if.then304
  %bf.clear322 = and i32 %bf.load311, 16711680
  %cmp323 = icmp eq i32 %bf.clear322, 3342336
  br i1 %cmp323, label %if.then325, label %if.else328

if.then325:                                       ; preds = %if.else
  %call326 = tail call %struct.rtx_def* @expr_size(%union.tree_node* %from) #5
  %call327 = tail call %struct.rtx_def* @emit_block_move(%struct.rtx_def* %call309, %struct.rtx_def* %call305, %struct.rtx_def* %call326)
  br label %if.end331

if.else328:                                       ; preds = %if.else
  %call329 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call309, %struct.rtx_def* %call305)
  br label %if.end331

if.end331:                                        ; preds = %if.then325, %if.else328, %if.then315
  tail call void @preserve_temp_slots(%struct.rtx_def* %call309) #5
  tail call void @free_temp_slots() #5
  tail call void @pop_temp_slots() #5
  %tobool332 = icmp ne i32 %want_value, 0
  %cond336 = select i1 %tobool332, %struct.rtx_def* %call309, %struct.rtx_def* null
  br label %return

if.then340:                                       ; preds = %if.end256, %land.lhs.true266, %cond.end298, %land.lhs.true263
  %call341 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %to, %struct.rtx_def* null, i32 0, i32 4)
  %bf.load345 = load i32* %code, align 8
  %bf.clear346 = and i32 %bf.load345, 255
  %cmp347 = icmp eq i32 %bf.clear346, 36
  br i1 %cmp347, label %land.lhs.true349, label %if.end440

land.lhs.true349:                                 ; preds = %if.then340
  %50 = getelementptr inbounds %struct.rtx_def* %call341, i64 0, i32 0
  %bf.load350 = load i32* %50, align 8
  %bf.clear351 = and i32 %bf.load350, 65535
  switch i32 %bf.clear351, label %land.lhs.true388 [
    i32 61, label %if.then359
    i32 39, label %if.then359
  ]

if.then359:                                       ; preds = %land.lhs.true349, %land.lhs.true349
  tail call void @push_temp_slots() #5
  %bf.load360 = load i32* %50, align 8
  %bf.lshr361 = lshr i32 %bf.load360, 16
  %bf.clear362 = and i32 %bf.lshr361, 255
  %call363 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %from, %struct.rtx_def* null, i32 %bf.clear362, i32 0)
  %bf.load364 = load i32* %50, align 8
  %bf.clear365 = and i32 %bf.load364, 65535
  %cmp366 = icmp eq i32 %bf.clear365, 39
  br i1 %cmp366, label %if.then368, label %if.else373

if.then368:                                       ; preds = %if.then359
  %type370 = getelementptr inbounds %union.tree_node* %from, i64 0, i32 0, i32 0, i32 1
  %51 = load %union.tree_node** %type370, align 8, !tbaa !36
  %call371 = tail call i64 @int_size_in_bytes(%union.tree_node* %51) #5
  %conv372 = trunc i64 %call371 to i32
  tail call void @emit_group_load(%struct.rtx_def* %call341, %struct.rtx_def* %call363, i32 %conv372)
  br label %if.end375

if.else373:                                       ; preds = %if.then359
  %call374 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call341, %struct.rtx_def* %call363)
  br label %if.end375

if.end375:                                        ; preds = %if.else373, %if.then368
  tail call void @preserve_temp_slots(%struct.rtx_def* %call341) #5
  tail call void @free_temp_slots() #5
  tail call void @pop_temp_slots() #5
  %tobool376 = icmp ne i32 %want_value, 0
  %cond380 = select i1 %tobool376, %struct.rtx_def* %call341, %struct.rtx_def* null
  br label %return

land.lhs.true388:                                 ; preds = %land.lhs.true349
  %bf.load391 = load i32* %code258, align 8
  %bf.clear392 = and i32 %bf.load391, 255
  %cmp393 = icmp eq i32 %bf.clear392, 41
  br i1 %cmp393, label %land.lhs.true395, label %if.end440

land.lhs.true395:                                 ; preds = %land.lhs.true388
  %52 = load %struct.function** @cfun, align 8, !tbaa !1
  %returns_struct = getelementptr inbounds %struct.function* %52, i64 0, i32 56
  %53 = bitcast i24* %returns_struct to i32*
  %bf.load396 = load i32* %53, align 8
  %54 = and i32 %bf.load396, 3
  %55 = icmp eq i32 %54, 1
  br i1 %55, label %if.then404, label %if.end440

if.then404:                                       ; preds = %land.lhs.true395
  tail call void @push_temp_slots() #5
  %call406 = tail call %struct.rtx_def* @expr_size(%union.tree_node* %from) #5
  %call407 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %from, %struct.rtx_def* null, i32 0, i32 0)
  %56 = load %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 12), align 8, !tbaa !1
  %arrayidx409 = getelementptr inbounds %struct.rtx_def* %call341, i64 0, i32 1, i64 0
  %rtx410 = bitcast %union.rtunion_def* %arrayidx409 to %struct.rtx_def**
  %57 = load %struct.rtx_def** %rtx410, align 8, !tbaa !1
  %58 = load i32* @target_flags, align 4, !tbaa !21
  %and = lshr i32 %58, 25
  %59 = and i32 %and, 1
  %60 = or i32 %59, 4
  %arrayidx414 = getelementptr inbounds %struct.rtx_def* %call407, i64 0, i32 1, i64 0
  %rtx415 = bitcast %union.rtunion_def* %arrayidx414 to %struct.rtx_def**
  %61 = load %struct.rtx_def** %rtx415, align 8, !tbaa !1
  %62 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !1
  %type419 = bitcast %union.tree_node* %62 to %struct.tree_type*
  %mode420 = getelementptr inbounds %struct.tree_type* %type419, i64 0, i32 6
  %bf.load421 = load i32* %mode420, align 4
  %bf.lshr422 = lshr i32 %bf.load421, 9
  %bf.clear423 = and i32 %bf.lshr422, 127
  %unsigned_flag425 = getelementptr inbounds %union.tree_node* %62, i64 0, i32 0, i32 0, i32 2
  %bf.load426 = load i32* %unsigned_flag425, align 8
  %bf.lshr427 = lshr i32 %bf.load426, 13
  %bf.clear428 = and i32 %bf.lshr427, 1
  %call.i556 = tail call %struct.rtx_def* @convert_modes(i32 %bf.clear423, i32 0, %struct.rtx_def* %call406, i32 %bf.clear428) #5
  %63 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !1
  %type430 = bitcast %union.tree_node* %63 to %struct.tree_type*
  %mode431 = getelementptr inbounds %struct.tree_type* %type430, i64 0, i32 6
  %bf.load432 = load i32* %mode431, align 4
  %bf.lshr433 = lshr i32 %bf.load432, 9
  %bf.clear434 = and i32 %bf.lshr433, 127
  tail call void (%struct.rtx_def*, i32, i32, i32, ...)* @emit_library_call(%struct.rtx_def* %56, i32 0, i32 0, i32 3, %struct.rtx_def* %57, i32 %60, %struct.rtx_def* %61, i32 %60, %struct.rtx_def* %call.i556, i32 %bf.clear434) #5
  tail call void @preserve_temp_slots(%struct.rtx_def* %call341) #5
  tail call void @free_temp_slots() #5
  tail call void @pop_temp_slots() #5
  %tobool435 = icmp ne i32 %want_value, 0
  %cond439 = select i1 %tobool435, %struct.rtx_def* %call341, %struct.rtx_def* null
  br label %return

if.end440:                                        ; preds = %if.then340, %land.lhs.true395, %land.lhs.true388
  tail call void @push_temp_slots() #5
  %call441 = tail call %struct.rtx_def* @store_expr(%union.tree_node* %from, %struct.rtx_def* %call341, i32 %want_value)
  tail call void @preserve_temp_slots(%struct.rtx_def* %call441) #5
  tail call void @free_temp_slots() #5
  tail call void @pop_temp_slots() #5
  %tobool442 = icmp ne i32 %want_value, 0
  %cond446 = select i1 %tobool442, %struct.rtx_def* %call441, %struct.rtx_def* null
  br label %return

return:                                           ; preds = %cond.true231, %cond.end223, %if.end440, %if.then404, %if.end375, %if.end331, %if.then
  %retval.0 = phi %struct.rtx_def* [ %cond, %if.then ], [ %cond380, %if.end375 ], [ %cond446, %if.end440 ], [ %cond439, %if.then404 ], [ %cond336, %if.end331 ], [ %call252, %cond.true231 ], [ null, %cond.end223 ]
  ret %struct.rtx_def* %retval.0
}

declare void @push_temp_slots() #1

; Function Attrs: nounwind uwtable
define %union.tree_node* @get_inner_reference(%union.tree_node* %exp, i64* nocapture %pbitsize, i64* nocapture %pbitpos, %union.tree_node** nocapture %poffset, i32* nocapture %pmode, i32* nocapture %punsignedp, i32* nocapture %pvolatilep) #0 {
entry:
  %placeholder_ptr = alloca %union.tree_node*, align 8
  %0 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 15), align 8, !tbaa !1
  %1 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 17), align 8, !tbaa !1
  store %union.tree_node* null, %union.tree_node** %placeholder_ptr, align 8, !tbaa !1
  %code = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  switch i32 %bf.clear, label %if.else38 [
    i32 39, label %if.then
    i32 40, label %if.then29
  ]

if.then:                                          ; preds = %entry
  %operands = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx = getelementptr inbounds i32* %operands, i64 2
  %2 = bitcast i32* %arrayidx to %union.tree_node**
  %3 = load %union.tree_node** %2, align 8, !tbaa !1
  %size = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 4
  %4 = load %union.tree_node** %size, align 8, !tbaa !39
  %bit_field_flag = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 5
  %5 = bitcast i48* %bit_field_flag to i64*
  %bf.load6 = load i64* %5, align 8
  %bf.cast = and i64 %bf.load6, 4096
  %tobool = icmp eq i64 %bf.cast, 0
  br i1 %tobool, label %if.then8, label %if.end

if.then8:                                         ; preds = %if.then
  %bf.load6.tr = trunc i64 %bf.load6 to i32
  %bf.cast16 = and i32 %bf.load6.tr, 255
  br label %if.end

if.end:                                           ; preds = %if.then, %if.then8
  %mode.0 = phi i32 [ 0, %if.then ], [ %bf.cast16, %if.then8 ]
  %unsigned_flag = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 0, i32 2
  %bf.load21 = load i32* %unsigned_flag, align 8
  %bf.lshr22 = lshr i32 %bf.load21, 13
  %bf.clear23 = and i32 %bf.lshr22, 1
  store i32 %bf.clear23, i32* %punsignedp, align 4, !tbaa !21
  br label %if.end62

if.then29:                                        ; preds = %entry
  %operands31 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx32 = getelementptr inbounds i32* %operands31, i64 2
  %6 = bitcast i32* %arrayidx32 to %union.tree_node**
  %7 = load %union.tree_node** %6, align 8, !tbaa !1
  %bf.lshr36 = lshr i32 %bf.load, 13
  %bf.clear37 = and i32 %bf.lshr36, 1
  store i32 %bf.clear37, i32* %punsignedp, align 4, !tbaa !21
  br label %if.end62

if.else38:                                        ; preds = %entry
  %type = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 1
  %8 = load %union.tree_node** %type, align 8, !tbaa !36
  %type40 = bitcast %union.tree_node* %8 to %struct.tree_type*
  %mode41 = getelementptr inbounds %struct.tree_type* %type40, i64 0, i32 6
  %bf.load42 = load i32* %mode41, align 4
  %bf.lshr43 = lshr i32 %bf.load42, 9
  %bf.clear44 = and i32 %bf.lshr43, 127
  %unsigned_flag48 = getelementptr inbounds %union.tree_node* %8, i64 0, i32 0, i32 0, i32 2
  %bf.load49 = load i32* %unsigned_flag48, align 8
  %bf.lshr50 = lshr i32 %bf.load49, 13
  %bf.clear51 = and i32 %bf.lshr50, 1
  store i32 %bf.clear51, i32* %punsignedp, align 4, !tbaa !21
  %cmp52 = icmp eq i32 %bf.clear44, 51
  br i1 %cmp52, label %if.then53, label %if.end62.thread

if.then53:                                        ; preds = %if.else38
  %size57 = getelementptr inbounds %union.tree_node* %8, i64 0, i32 0, i32 2
  %9 = bitcast i32* %size57 to %union.tree_node**
  %10 = load %union.tree_node** %9, align 8, !tbaa !40
  br label %if.end62

if.end62.thread:                                  ; preds = %if.else38
  %idxprom346 = zext i32 %bf.clear44 to i64
  %arrayidx59 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom346
  %11 = load i16* %arrayidx59, align 2, !tbaa !19
  %conv = zext i16 %11 to i64
  store i64 %conv, i64* %pbitsize, align 8, !tbaa !22
  br label %while.body.preheader

if.end62:                                         ; preds = %if.then29, %if.then53, %if.end
  %mode.1 = phi i32 [ %mode.0, %if.end ], [ 0, %if.then29 ], [ 51, %if.then53 ]
  %size_tree.0 = phi %union.tree_node* [ %4, %if.end ], [ %7, %if.then29 ], [ %10, %if.then53 ]
  %cmp63 = icmp eq %union.tree_node* %size_tree.0, null
  br i1 %cmp63, label %while.body.preheader, label %if.then65

if.then65:                                        ; preds = %if.end62
  %call = call i32 @host_integerp(%union.tree_node* %size_tree.0, i32 1) #5
  %tobool66 = icmp eq i32 %call, 0
  br i1 %tobool66, label %if.then67, label %if.else68

if.then67:                                        ; preds = %if.then65
  store i64 -1, i64* %pbitsize, align 8, !tbaa !22
  br label %while.body.preheader

if.else68:                                        ; preds = %if.then65
  %call69 = call i64 @tree_low_cst(%union.tree_node* %size_tree.0, i32 1) #5
  store i64 %call69, i64* %pbitsize, align 8, !tbaa !22
  br label %while.body.preheader

while.body.preheader:                             ; preds = %if.then67, %if.else68, %if.end62, %if.end62.thread
  %mode.2.ph = phi i32 [ %bf.clear44, %if.end62.thread ], [ %mode.1, %if.end62 ], [ %mode.1, %if.else68 ], [ 51, %if.then67 ]
  br label %while.body.outer

while.body.outer:                                 ; preds = %while.body.preheader, %if.end257
  %bit_offset.0.ph = phi %union.tree_node* [ %bit_offset.1, %if.end257 ], [ %1, %while.body.preheader ]
  %offset.0.ph = phi %union.tree_node* [ %offset.1, %if.end257 ], [ %0, %while.body.preheader ]
  %exp.addr.0.ph = phi %union.tree_node* [ %41, %if.end257 ], [ %exp, %while.body.preheader ]
  br label %while.body

while.body:                                       ; preds = %while.body.outer, %if.then190
  %exp.addr.0 = phi %union.tree_node* [ %call191, %if.then190 ], [ %exp.addr.0.ph, %while.body.outer ]
  %code73 = getelementptr inbounds %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 0, i32 2
  %bf.load74 = load i32* %code73, align 8
  %bf.clear75 = and i32 %bf.load74, 255
  switch i32 %bf.clear75, label %while.end [
    i32 40, label %if.then78
    i32 39, label %if.then90
    i32 43, label %if.then126
    i32 44, label %if.then126
    i32 57, label %if.then190
    i32 116, label %if.end250
    i32 117, label %if.end250
    i32 115, label %land.lhs.true225
    i32 114, label %land.lhs.true225
  ]

if.then78:                                        ; preds = %while.body
  %operands80 = getelementptr inbounds %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 2
  %arrayidx81 = getelementptr inbounds i32* %operands80, i64 4
  %12 = bitcast i32* %arrayidx81 to %union.tree_node**
  %13 = load %union.tree_node** %12, align 8, !tbaa !1
  %call82 = call %union.tree_node* @size_binop(i32 59, %union.tree_node* %bit_offset.0.ph, %union.tree_node* %13) #5
  br label %if.end250

if.then90:                                        ; preds = %while.body
  %operands92 = getelementptr inbounds %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 2
  %arrayidx93 = getelementptr inbounds i32* %operands92, i64 2
  %14 = bitcast i32* %arrayidx93 to %union.tree_node**
  %15 = load %union.tree_node** %14, align 8, !tbaa !1
  %arguments = getelementptr inbounds %union.tree_node* %15, i64 0, i32 0, i32 10
  %16 = load %union.tree_node** %arguments, align 8, !tbaa !78
  %cmp95 = icmp eq %union.tree_node* %16, null
  br i1 %cmp95, label %while.end, label %if.else98

if.else98:                                        ; preds = %if.then90
  %constant_flag = getelementptr inbounds %union.tree_node* %16, i64 0, i32 0, i32 0, i32 2
  %bf.load100 = load i32* %constant_flag, align 8
  %bf.clear102 = and i32 %bf.load100, 512
  %tobool103 = icmp eq i32 %bf.clear102, 0
  br i1 %tobool103, label %land.lhs.true, label %if.end109

land.lhs.true:                                    ; preds = %if.else98
  %call104 = call i32 @contains_placeholder_p(%union.tree_node* %16) #5
  %tobool105 = icmp eq i32 %call104, 0
  br i1 %tobool105, label %if.end109, label %if.then106

if.then106:                                       ; preds = %land.lhs.true
  %17 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !1
  %call107 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 58, %union.tree_node* %17, %union.tree_node* %16, %union.tree_node* %exp.addr.0) #5
  br label %if.end109

if.end109:                                        ; preds = %land.lhs.true, %if.else98, %if.then106
  %this_offset.0 = phi %union.tree_node* [ %16, %if.else98 ], [ %call107, %if.then106 ], [ %16, %land.lhs.true ]
  %call110 = call %union.tree_node* @size_binop(i32 59, %union.tree_node* %offset.0.ph, %union.tree_node* %this_offset.0) #5
  %u2 = getelementptr inbounds %union.tree_node* %15, i64 0, i32 0, i32 19
  %t = bitcast %union.anon.1* %u2 to %union.tree_node**
  %18 = load %union.tree_node** %t, align 8, !tbaa !1
  %call112 = call %union.tree_node* @size_binop(i32 59, %union.tree_node* %bit_offset.0.ph, %union.tree_node* %18) #5
  br label %if.end250

if.then126:                                       ; preds = %while.body, %while.body
  %operands128 = getelementptr inbounds %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 2
  %arrayidx129 = getelementptr inbounds i32* %operands128, i64 2
  %19 = bitcast i32* %arrayidx129 to %union.tree_node**
  %20 = load %union.tree_node** %19, align 8, !tbaa !1
  %arrayidx132 = bitcast i32* %operands128 to %union.tree_node**
  %21 = load %union.tree_node** %arrayidx132, align 8, !tbaa !1
  %type134 = getelementptr inbounds %union.tree_node* %21, i64 0, i32 0, i32 0, i32 1
  %22 = load %union.tree_node** %type134, align 8, !tbaa !36
  %values = getelementptr inbounds %union.tree_node* %22, i64 0, i32 0, i32 1
  %23 = load i8** %values, align 8
  %tobool136 = icmp eq i8* %23, null
  br i1 %tobool136, label %cond.end.thread, label %cond.end

cond.end.thread:                                  ; preds = %if.then126
  %type141350 = getelementptr inbounds %union.tree_node* %22, i64 0, i32 0, i32 0, i32 1
  %24 = load %union.tree_node** %type141350, align 8, !tbaa !36
  %25 = getelementptr inbounds %union.tree_node* %24, i64 0, i32 0, i32 4
  %26 = load %union.tree_node** %25, align 8, !tbaa !55
  br label %if.end153

cond.end:                                         ; preds = %if.then126
  %minval = getelementptr inbounds i8* %23, i64 104
  %27 = bitcast i8* %minval to %union.tree_node**
  %28 = load %union.tree_node** %27, align 8, !tbaa !58
  %type141 = getelementptr inbounds %union.tree_node* %22, i64 0, i32 0, i32 0, i32 1
  %29 = load %union.tree_node** %type141, align 8, !tbaa !36
  %30 = getelementptr inbounds %union.tree_node* %29, i64 0, i32 0, i32 4
  %31 = load %union.tree_node** %30, align 8, !tbaa !55
  %cmp143 = icmp eq %union.tree_node* %28, null
  br i1 %cmp143, label %if.end153, label %land.lhs.true145

land.lhs.true145:                                 ; preds = %cond.end
  %call146 = call i32 @integer_zerop(%union.tree_node* %28) #5
  %tobool147 = icmp eq i32 %call146, 0
  br i1 %tobool147, label %if.then148, label %if.end153

if.then148:                                       ; preds = %land.lhs.true145
  %type150 = getelementptr inbounds %union.tree_node* %20, i64 0, i32 0, i32 0, i32 1
  %32 = load %union.tree_node** %type150, align 8, !tbaa !36
  %call151 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 60, %union.tree_node* %32, %union.tree_node* %20, %union.tree_node* %28) #5
  %call152 = call %union.tree_node* @fold(%union.tree_node* %call151) #5
  br label %if.end153

if.end153:                                        ; preds = %cond.end.thread, %land.lhs.true145, %cond.end, %if.then148
  %33 = phi %union.tree_node* [ %31, %land.lhs.true145 ], [ %31, %if.then148 ], [ %31, %cond.end ], [ %26, %cond.end.thread ]
  %index.0 = phi %union.tree_node* [ %20, %land.lhs.true145 ], [ %call152, %if.then148 ], [ %20, %cond.end ], [ %20, %cond.end.thread ]
  %constant_flag155 = getelementptr inbounds %union.tree_node* %index.0, i64 0, i32 0, i32 0, i32 2
  %bf.load156 = load i32* %constant_flag155, align 8
  %bf.clear158 = and i32 %bf.load156, 512
  %tobool159 = icmp eq i32 %bf.clear158, 0
  br i1 %tobool159, label %land.lhs.true160, label %if.end167

land.lhs.true160:                                 ; preds = %if.end153
  %call161 = call i32 @contains_placeholder_p(%union.tree_node* %index.0) #5
  %tobool162 = icmp eq i32 %call161, 0
  br i1 %tobool162, label %if.end167, label %if.then163

if.then163:                                       ; preds = %land.lhs.true160
  %type165 = getelementptr inbounds %union.tree_node* %index.0, i64 0, i32 0, i32 0, i32 1
  %34 = load %union.tree_node** %type165, align 8, !tbaa !36
  %call166 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 58, %union.tree_node* %34, %union.tree_node* %index.0, %union.tree_node* %exp.addr.0) #5
  br label %if.end167

if.end167:                                        ; preds = %land.lhs.true160, %if.end153, %if.then163
  %index.1 = phi %union.tree_node* [ %index.0, %if.end153 ], [ %call166, %if.then163 ], [ %index.0, %land.lhs.true160 ]
  %constant_flag169 = getelementptr inbounds %union.tree_node* %33, i64 0, i32 0, i32 0, i32 2
  %bf.load170 = load i32* %constant_flag169, align 8
  %bf.clear172 = and i32 %bf.load170, 512
  %tobool173 = icmp eq i32 %bf.clear172, 0
  br i1 %tobool173, label %land.lhs.true174, label %if.end179

land.lhs.true174:                                 ; preds = %if.end167
  %call175 = call i32 @contains_placeholder_p(%union.tree_node* %33) #5
  %tobool176 = icmp eq i32 %call175, 0
  br i1 %tobool176, label %if.end179, label %if.then177

if.then177:                                       ; preds = %land.lhs.true174
  %35 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !1
  %call178 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 58, %union.tree_node* %35, %union.tree_node* %33, %union.tree_node* %21) #5
  br label %if.end179

if.end179:                                        ; preds = %land.lhs.true174, %if.end167, %if.then177
  %unit_size.0 = phi %union.tree_node* [ %33, %if.end167 ], [ %call178, %if.then177 ], [ %33, %land.lhs.true174 ]
  %36 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !1
  %call180 = call %union.tree_node* @convert(%union.tree_node* %36, %union.tree_node* %index.1) #5
  %call181 = call %union.tree_node* @size_binop(i32 61, %union.tree_node* %call180, %union.tree_node* %unit_size.0) #5
  %call182 = call %union.tree_node* @size_binop(i32 59, %union.tree_node* %offset.0.ph, %union.tree_node* %call181) #5
  br label %if.end250

if.then190:                                       ; preds = %while.body
  %call191 = call %union.tree_node* @find_placeholder(%union.tree_node* %exp.addr.0, %union.tree_node** %placeholder_ptr)
  %cmp192 = icmp eq %union.tree_node* %call191, null
  br i1 %cmp192, label %while.end, label %while.body

land.lhs.true225:                                 ; preds = %while.body, %while.body
  %type227 = getelementptr inbounds %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 0, i32 1
  %37 = load %union.tree_node** %type227, align 8, !tbaa !36
  %type228 = bitcast %union.tree_node* %37 to %struct.tree_type*
  %mode229 = getelementptr inbounds %struct.tree_type* %type228, i64 0, i32 6
  %bf.load230 = load i32* %mode229, align 4
  %operands234 = getelementptr inbounds %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 2
  %arrayidx235 = bitcast i32* %operands234 to %union.tree_node**
  %38 = load %union.tree_node** %arrayidx235, align 8, !tbaa !1
  %type237 = getelementptr inbounds %union.tree_node* %38, i64 0, i32 0, i32 0, i32 1
  %39 = load %union.tree_node** %type237, align 8, !tbaa !36
  %type238 = bitcast %union.tree_node* %39 to %struct.tree_type*
  %mode239 = getelementptr inbounds %struct.tree_type* %type238, i64 0, i32 6
  %bf.load240 = load i32* %mode239, align 4
  %bf.lshr231348 = xor i32 %bf.load240, %bf.load230
  %40 = and i32 %bf.lshr231348, 65024
  %cmp243 = icmp eq i32 %40, 0
  br i1 %cmp243, label %if.end250, label %while.end

if.end250:                                        ; preds = %while.body, %while.body, %if.end109, %land.lhs.true225, %if.end179, %if.then78
  %bit_offset.1 = phi %union.tree_node* [ %call82, %if.then78 ], [ %call112, %if.end109 ], [ %bit_offset.0.ph, %if.end179 ], [ %bit_offset.0.ph, %land.lhs.true225 ], [ %bit_offset.0.ph, %while.body ], [ %bit_offset.0.ph, %while.body ]
  %offset.1 = phi %union.tree_node* [ %offset.0.ph, %if.then78 ], [ %call110, %if.end109 ], [ %call182, %if.end179 ], [ %offset.0.ph, %land.lhs.true225 ], [ %offset.0.ph, %while.body ], [ %offset.0.ph, %while.body ]
  %bf.load252 = load i32* %code73, align 8
  %bf.clear254 = and i32 %bf.load252, 2048
  %tobool255 = icmp eq i32 %bf.clear254, 0
  br i1 %tobool255, label %if.end257, label %if.then256

if.then256:                                       ; preds = %if.end250
  store i32 1, i32* %pvolatilep, align 4, !tbaa !21
  br label %if.end257

if.end257:                                        ; preds = %if.end250, %if.then256
  %operands259 = getelementptr inbounds %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 2
  %arrayidx260 = bitcast i32* %operands259 to %union.tree_node**
  %41 = load %union.tree_node** %arrayidx260, align 8, !tbaa !1
  br label %while.body.outer

while.end:                                        ; preds = %land.lhs.true225, %if.then90, %while.body, %if.then190
  %call261 = call i32 @host_integerp(%union.tree_node* %offset.0.ph, i32 0) #5
  %tobool262 = icmp eq i32 %call261, 0
  br i1 %tobool262, label %if.else277, label %land.lhs.true263

land.lhs.true263:                                 ; preds = %while.end
  %42 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 3), align 8, !tbaa !1
  %call264 = call %union.tree_node* @convert(%union.tree_node* %42, %union.tree_node* %offset.0.ph) #5
  %43 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 19), align 8, !tbaa !1
  %call265 = call %union.tree_node* @size_binop(i32 61, %union.tree_node* %call264, %union.tree_node* %43) #5
  %cmp266 = icmp eq %union.tree_node* %call265, null
  br i1 %cmp266, label %if.else277, label %land.lhs.true268

land.lhs.true268:                                 ; preds = %land.lhs.true263
  %call269 = call %union.tree_node* @size_binop(i32 59, %union.tree_node* %call265, %union.tree_node* %bit_offset.0.ph) #5
  %cmp270 = icmp eq %union.tree_node* %call269, null
  br i1 %cmp270, label %if.else277, label %land.lhs.true272

land.lhs.true272:                                 ; preds = %land.lhs.true268
  %call273 = call i32 @host_integerp(%union.tree_node* %call269, i32 0) #5
  %tobool274 = icmp eq i32 %call273, 0
  br i1 %tobool274, label %if.else277, label %if.then275

if.then275:                                       ; preds = %land.lhs.true272
  %call276 = call i64 @tree_low_cst(%union.tree_node* %call269, i32 0) #5
  br label %if.end279

if.else277:                                       ; preds = %land.lhs.true272, %land.lhs.true268, %land.lhs.true263, %while.end
  %call278 = call i64 @tree_low_cst(%union.tree_node* %bit_offset.0.ph, i32 0) #5
  br label %if.end279

if.end279:                                        ; preds = %if.else277, %if.then275
  %storemerge347 = phi i64 [ %call276, %if.then275 ], [ %call278, %if.else277 ]
  %storemerge = phi %union.tree_node* [ null, %if.then275 ], [ %offset.0.ph, %if.else277 ]
  store i64 %storemerge347, i64* %pbitpos, align 8, !tbaa !22
  store %union.tree_node* %storemerge, %union.tree_node** %poffset, align 8, !tbaa !1
  store i32 %mode.2.ph, i32* %pmode, align 4, !tbaa !5
  ret %union.tree_node* %exp.addr.0
}

declare %union.tree_node* @stabilize_reference(%union.tree_node*) #1

declare %struct.rtx_def* @offset_address(%struct.rtx_def*, %struct.rtx_def*, i64) #1

declare %struct.rtx_def* @shallow_copy_rtx(%struct.rtx_def*) #1

declare void @set_mem_offset(%struct.rtx_def*, %struct.rtx_def*) #1

declare i32 @can_address_p(%union.tree_node*) #1

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @store_field(%struct.rtx_def* %target, i64 %bitsize, i64 %bitpos, i32 %mode, %union.tree_node* %exp, i32 %value_mode, i32 %unsignedp, %union.tree_node* %type, i32 %alias_set) #0 {
entry:
  %code = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  br label %return

if.end:                                           ; preds = %entry
  %cmp1 = icmp eq i64 %bitsize, 0
  br i1 %cmp1, label %if.then2, label %if.else

if.then2:                                         ; preds = %if.end
  %1 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %exp, %struct.rtx_def* %1, i32 0, i32 0)
  br label %return

if.else:                                          ; preds = %if.end
  %cmp3 = icmp sgt i64 %bitsize, -1
  %2 = icmp ult i64 %bitsize, 64
  br i1 %2, label %if.then5, label %if.end7

if.then5:                                         ; preds = %if.else
  %shl = shl i64 1, %bitsize
  %sub = add nsw i64 %shl, -1
  br label %if.end7

if.end7:                                          ; preds = %if.else, %if.then5
  %width_mask.0 = phi i64 [ %sub, %if.then5 ], [ 0, %if.else ]
  %cmp8 = icmp eq i32 %mode, 51
  %3 = getelementptr inbounds %struct.rtx_def* %target, i64 0, i32 0
  %bf.load10 = load i32* %3, align 8
  br i1 %cmp8, label %land.lhs.true9, label %if.end54

land.lhs.true9:                                   ; preds = %if.end7
  %bf.clear11 = and i32 %bf.load10, 65535
  switch i32 %bf.clear11, label %if.end54 [
    i32 61, label %if.then16
    i32 63, label %if.then16
  ]

if.then16:                                        ; preds = %land.lhs.true9, %land.lhs.true9
  %readonly_flag = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 0, i32 2
  %bf.load18 = load i32* %readonly_flag, align 8
  %4 = lshr i32 %bf.load18, 10
  %mul24 = and i32 %4, 2
  %type25 = bitcast %union.tree_node* %type to %struct.tree_type*
  %restrict_flag = getelementptr inbounds %struct.tree_type* %type25, i64 0, i32 6
  %bf.load26 = load i32* %restrict_flag, align 4
  %5 = lshr i32 %bf.load26, 19
  %mul29 = and i32 %5, 4
  %bf.clear34 = and i32 %bf.load18, 255
  %cmp35 = icmp eq i32 %bf.clear34, 20
  br i1 %cmp35, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.then16
  %type37 = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 0, i32 1
  %6 = load %union.tree_node** %type37, align 8, !tbaa !36
  %tobool = icmp ne %union.tree_node* %6, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then16
  %7 = phi i1 [ false, %if.then16 ], [ %tobool, %land.rhs ]
  %land.ext = zext i1 %7 to i32
  %mul38 = shl nuw nsw i32 %land.ext, 3
  %or = or i32 %mul24, %mul29
  %or30 = or i32 %or, %mul38
  %or40 = or i32 %or30, 1
  %call41 = tail call %union.tree_node* @build_qualified_type(%union.tree_node* %type, i32 %or40) #5
  %call42 = tail call %struct.rtx_def* @assign_temp(%union.tree_node* %call41, i32 0, i32 1, i32 1) #5
  %call43 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %call42, i32 51, i64 0, i32 1, i32 1) #5
  %bf.load44 = load i32* %3, align 8
  %bf.lshr45 = lshr i32 %bf.load44, 16
  %bf.clear46 = and i32 %bf.lshr45, 255
  %idxprom455 = zext i32 %bf.clear46 to i64
  %arrayidx = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom455
  %8 = load i16* %arrayidx, align 2, !tbaa !19
  %conv = zext i16 %8 to i64
  %cmp47 = icmp eq i64 %conv, %bitsize
  br i1 %cmp47, label %if.end51, label %if.then49

if.then49:                                        ; preds = %land.end
  %call50 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call42, %struct.rtx_def* %target)
  br label %if.end51

if.end51:                                         ; preds = %land.end, %if.then49
  %call52 = tail call fastcc %struct.rtx_def* @store_field(%struct.rtx_def* %call43, i64 %bitsize, i64 %bitpos, i32 51, %union.tree_node* %exp, i32 0, i32 0, %union.tree_node* %type, i32 %alias_set)
  %call53 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %target, %struct.rtx_def* %call42)
  ret %struct.rtx_def* %call43

if.end54:                                         ; preds = %if.end7, %land.lhs.true9
  %9 = getelementptr inbounds %struct.rtx_def* %target, i64 0, i32 0
  %bf.clear56 = and i32 %bf.load10, 65535
  %cmp57 = icmp eq i32 %bf.clear56, 65
  br i1 %cmp57, label %if.then59, label %if.end65

if.then59:                                        ; preds = %if.end54
  %cmp60 = icmp eq i64 %bitpos, 0
  br i1 %cmp60, label %if.end63, label %if.then62

if.then62:                                        ; preds = %if.then59
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 5092, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.store_field, i64 0, i64 0)) #8
  unreachable

if.end63:                                         ; preds = %if.then59
  %call64 = tail call %struct.rtx_def* @store_expr(%union.tree_node* %exp, %struct.rtx_def* %target, i32 0)
  br label %return

if.end65:                                         ; preds = %if.end54
  switch i32 %mode, label %land.lhs.true71 [
    i32 0, label %if.then134.thread
    i32 51, label %lor.lhs.false85
  ]

if.then134.thread:                                ; preds = %if.end65
  %call135459 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %exp, %struct.rtx_def* null, i32 0, i32 0)
  br label %if.end160

land.lhs.true71:                                  ; preds = %if.end65
  %idxprom72 = sext i32 %mode to i64
  %arrayidx73 = getelementptr inbounds [59 x i8]* @direct_store, i64 0, i64 %idxprom72
  %10 = load i8* %arrayidx73, align 1, !tbaa !5
  %tobool74 = icmp eq i8 %10, 0
  br i1 %tobool74, label %land.lhs.true75, label %lor.lhs.false85

land.lhs.true75:                                  ; preds = %land.lhs.true71
  %arrayidx77 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom72
  %11 = load i32* %arrayidx77, align 4, !tbaa !5
  %.off = add i32 %11, -5
  %switch = icmp ult i32 %.off, 2
  br i1 %switch, label %lor.lhs.false85, label %if.then134

lor.lhs.false85:                                  ; preds = %land.lhs.true75, %if.end65, %land.lhs.true71
  switch i32 %bf.clear56, label %lor.lhs.false95 [
    i32 61, label %if.then134
    i32 63, label %if.then134
  ]

lor.lhs.false95:                                  ; preds = %lor.lhs.false85
  br i1 %cmp3, label %land.lhs.true116, label %if.else242

land.lhs.true116:                                 ; preds = %lor.lhs.false95
  %type118 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 1
  %12 = load %union.tree_node** %type118, align 8, !tbaa !36
  %size = getelementptr inbounds %union.tree_node* %12, i64 0, i32 0, i32 2
  %13 = bitcast i32* %size to %union.tree_node**
  %14 = load %union.tree_node** %13, align 8, !tbaa !40
  %code121 = getelementptr inbounds %union.tree_node* %14, i64 0, i32 0, i32 0, i32 2
  %bf.load122 = load i32* %code121, align 8
  %bf.clear123 = and i32 %bf.load122, 255
  %cmp124 = icmp eq i32 %bf.clear123, 25
  br i1 %cmp124, label %land.lhs.true126, label %if.else242

land.lhs.true126:                                 ; preds = %land.lhs.true116
  %call131 = tail call i32 @compare_tree_int(%union.tree_node* %14, i64 %bitsize) #5
  %cmp132 = icmp eq i32 %call131, 0
  br i1 %cmp132, label %if.else242, label %if.then134

if.then134:                                       ; preds = %land.lhs.true75, %lor.lhs.false85, %lor.lhs.false85, %land.lhs.true126
  %call135 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %exp, %struct.rtx_def* null, i32 0, i32 0)
  switch i32 %mode, label %land.lhs.true141 [
    i32 51, label %if.end160
    i32 0, label %if.end160
  ]

land.lhs.true141:                                 ; preds = %if.then134
  %type143 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 1
  %15 = load %union.tree_node** %type143, align 8, !tbaa !36
  %type144 = bitcast %union.tree_node* %15 to %struct.tree_type*
  %mode145 = getelementptr inbounds %struct.tree_type* %type144, i64 0, i32 6
  %bf.load146 = load i32* %mode145, align 4
  %bf.lshr147 = lshr i32 %bf.load146, 9
  %bf.clear148 = and i32 %bf.lshr147, 127
  %cmp149 = icmp eq i32 %bf.clear148, %mode
  br i1 %cmp149, label %if.end160, label %if.then151

if.then151:                                       ; preds = %land.lhs.true141
  %call159 = tail call %struct.rtx_def* @convert_modes(i32 %mode, i32 %bf.clear148, %struct.rtx_def* %call135, i32 1)
  br label %if.end160

if.end160:                                        ; preds = %if.then134.thread, %if.then134, %if.then134, %land.lhs.true141, %if.then151
  %temp.0 = phi %struct.rtx_def* [ %call159, %if.then151 ], [ %call135, %land.lhs.true141 ], [ %call135, %if.then134 ], [ %call135, %if.then134 ], [ %call135459, %if.then134.thread ]
  %bf.load161 = load i32* %9, align 8
  %bf.clear163 = and i32 %bf.load161, 16711680
  %cmp164 = icmp eq i32 %bf.clear163, 3342336
  br i1 %cmp164, label %land.lhs.true166, label %if.end199

land.lhs.true166:                                 ; preds = %if.end160
  %16 = getelementptr inbounds %struct.rtx_def* %temp.0, i64 0, i32 0
  %bf.load167 = load i32* %16, align 8
  %bf.clear169 = and i32 %bf.load167, 16711680
  %cmp170 = icmp eq i32 %bf.clear169, 3342336
  br i1 %cmp170, label %if.then172, label %if.end199

if.then172:                                       ; preds = %land.lhs.true166
  %bf.clear174 = and i32 %bf.load161, 65535
  %cmp175 = icmp eq i32 %bf.clear174, 66
  %bf.clear179 = and i32 %bf.load167, 65535
  %cmp180 = icmp eq i32 %bf.clear179, 66
  %or.cond = and i1 %cmp175, %cmp180
  %rem183454 = and i64 %bitpos, 7
  %cmp184 = icmp eq i64 %rem183454, 0
  %or.cond456 = and i1 %or.cond, %cmp184
  br i1 %or.cond456, label %if.end187, label %if.then186

if.then186:                                       ; preds = %if.then172
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 5145, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.store_field, i64 0, i64 0)) #8
  unreachable

if.end187:                                        ; preds = %if.then172
  %div = sdiv i64 %bitpos, 8
  %call188 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %target, i32 0, i64 %div, i32 1, i32 1) #5
  %sub189 = add nsw i64 %bitsize, 7
  %div190 = sdiv i64 %sub189, 8
  %call191 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %div190) #5
  %call192 = tail call %struct.rtx_def* @emit_block_move(%struct.rtx_def* %call188, %struct.rtx_def* %temp.0, %struct.rtx_def* %call191)
  %cmp193 = icmp eq i32 %value_mode, 0
  %17 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %cond198 = select i1 %cmp193, %struct.rtx_def* %17, %struct.rtx_def* %call188
  br label %return

if.end199:                                        ; preds = %land.lhs.true166, %if.end160
  %call200 = tail call i64 @int_size_in_bytes(%union.tree_node* %type) #5
  %call201 = tail call %struct.rtx_def* @store_bit_field(%struct.rtx_def* %target, i64 %bitsize, i64 %bitpos, i32 %mode, %struct.rtx_def* %temp.0, i64 %call200) #5
  %cmp202 = icmp eq i32 %value_mode, 0
  br i1 %cmp202, label %if.end241, label %if.then204

if.then204:                                       ; preds = %if.end199
  %cmp205 = icmp eq i64 %width_mask.0, 0
  br i1 %cmp205, label %if.end238, label %land.lhs.true207

land.lhs.true207:                                 ; preds = %if.then204
  %bf.load208 = load i32* %9, align 8
  %18 = and i32 %bf.load208, 134283263
  %19 = icmp eq i32 %18, 134217794
  br i1 %19, label %if.end238, label %if.then217

if.then217:                                       ; preds = %land.lhs.true207
  %20 = getelementptr inbounds %struct.rtx_def* %temp.0, i64 0, i32 0
  %bf.load218 = load i32* %20, align 8
  %bf.lshr219 = lshr i32 %bf.load218, 16
  %bf.clear220 = and i32 %bf.lshr219, 255
  %cmp221 = icmp eq i32 %bf.clear220, 0
  %value_mode.bf.clear220 = select i1 %cmp221, i32 %value_mode, i32 %bf.clear220
  %tobool225 = icmp eq i32 %unsignedp, 0
  br i1 %tobool225, label %if.end230, label %if.then226

if.then226:                                       ; preds = %if.then217
  %call227 = tail call i64 @trunc_int_for_mode(i64 %width_mask.0, i32 %value_mode.bf.clear220) #5
  %call228 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call227) #5
  %call229 = tail call %struct.rtx_def* @expand_and(i32 %value_mode.bf.clear220, %struct.rtx_def* %temp.0, %struct.rtx_def* %call228, %struct.rtx_def* null) #5
  br label %return

if.end230:                                        ; preds = %if.then217
  %idxprom231 = sext i32 %value_mode.bf.clear220 to i64
  %arrayidx232 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom231
  %21 = load i16* %arrayidx232, align 2, !tbaa !19
  %conv233 = zext i16 %21 to i64
  %sub234 = sub nsw i64 %conv233, %bitsize
  %call235 = tail call %union.tree_node* @build_int_2_wide(i64 %sub234, i64 0) #5
  %call236 = tail call %struct.rtx_def* @expand_shift(i32 82, i32 %value_mode.bf.clear220, %struct.rtx_def* %temp.0, %union.tree_node* %call235, %struct.rtx_def* null, i32 0) #5
  %call237 = tail call %struct.rtx_def* @expand_shift(i32 83, i32 %value_mode.bf.clear220, %struct.rtx_def* %call236, %union.tree_node* %call235, %struct.rtx_def* null, i32 0) #5
  br label %return

if.end238:                                        ; preds = %land.lhs.true207, %if.then204
  %call239 = tail call i64 @int_size_in_bytes(%union.tree_node* %type) #5
  %call240 = tail call %struct.rtx_def* @extract_bit_field(%struct.rtx_def* %target, i64 %bitsize, i64 %bitpos, i32 %unsignedp, %struct.rtx_def* null, i32 %value_mode, i32 0, i64 %call239) #5
  br label %return

if.end241:                                        ; preds = %if.end199
  %22 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  br label %return

if.else242:                                       ; preds = %land.lhs.true126, %land.lhs.true116, %lor.lhs.false95
  %arrayidx244 = getelementptr inbounds %struct.rtx_def* %target, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx244 to %struct.rtx_def**
  %23 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %cmp245 = icmp ne i32 %value_mode, 0
  br i1 %cmp245, label %land.lhs.true247, label %if.end305

land.lhs.true247:                                 ; preds = %if.else242
  %24 = getelementptr inbounds %struct.rtx_def* %23, i64 0, i32 0
  %bf.load248 = load i32* %24, align 8
  %bf.clear249 = and i32 %bf.load248, 65535
  switch i32 %bf.clear249, label %if.then302 [
    i32 61, label %if.end305
    i32 67, label %if.end305
    i32 68, label %if.end305
    i32 54, label %if.end305
    i32 58, label %if.end305
    i32 55, label %if.end305
    i32 75, label %land.lhs.true282
  ]

land.lhs.true282:                                 ; preds = %land.lhs.true247
  %arrayidx284 = getelementptr inbounds %struct.rtx_def* %23, i64 0, i32 1, i64 1
  %rtx285 = bitcast %union.rtunion_def* %arrayidx284 to %struct.rtx_def**
  %25 = load %struct.rtx_def** %rtx285, align 8, !tbaa !1
  %26 = getelementptr inbounds %struct.rtx_def* %25, i64 0, i32 0
  %bf.load286 = load i32* %26, align 8
  %bf.clear287 = and i32 %bf.load286, 65535
  %cmp288 = icmp eq i32 %bf.clear287, 54
  br i1 %cmp288, label %land.lhs.true290, label %if.then302

land.lhs.true290:                                 ; preds = %land.lhs.true282
  %arrayidx292 = getelementptr inbounds %struct.rtx_def* %23, i64 0, i32 1, i64 0
  %rtx293 = bitcast %union.rtunion_def* %arrayidx292 to %struct.rtx_def**
  %27 = load %struct.rtx_def** %rtx293, align 8, !tbaa !1
  %28 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 6), align 8, !tbaa !1
  %cmp294 = icmp eq %struct.rtx_def* %27, %28
  %29 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 7), align 8
  %cmp300 = icmp eq %struct.rtx_def* %27, %29
  %or.cond458 = or i1 %cmp294, %cmp300
  br i1 %or.cond458, label %if.end305, label %if.then302

if.then302:                                       ; preds = %land.lhs.true290, %land.lhs.true247, %land.lhs.true282
  %call303 = tail call %struct.rtx_def* @copy_to_reg(%struct.rtx_def* %23) #5
  %call304 = tail call %struct.rtx_def* @replace_equiv_address(%struct.rtx_def* %target, %struct.rtx_def* %call303) #5
  br label %if.end305

if.end305:                                        ; preds = %land.lhs.true247, %land.lhs.true247, %land.lhs.true247, %land.lhs.true247, %land.lhs.true247, %land.lhs.true247, %if.then302, %land.lhs.true290, %if.else242
  %div306 = sdiv i64 %bitpos, 8
  %call307 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %target, i32 %mode, i64 %div306, i32 1, i32 1) #5
  %cmp308 = icmp eq %struct.rtx_def* %call307, %target
  br i1 %cmp308, label %if.then310, label %do.body

if.then310:                                       ; preds = %if.end305
  %call311 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %target) #5
  br label %do.body

do.body:                                          ; preds = %if.end305, %if.then310
  %to_rtx.0 = phi %struct.rtx_def* [ %call311, %if.then310 ], [ %call307, %if.end305 ]
  %30 = getelementptr inbounds %struct.rtx_def* %to_rtx.0, i64 0, i32 0
  %bf.load313 = load i32* %30, align 8
  %bf.set = and i32 %bf.load313, 1879048191
  %bf.clear316 = or i32 %bf.set, 268435456
  store i32 %bf.clear316, i32* %30, align 8
  %bf.clear319 = and i32 %bf.load313, 16777216
  %tobool320 = icmp eq i32 %bf.clear319, 0
  br i1 %tobool320, label %land.lhs.true321, label %if.end338

land.lhs.true321:                                 ; preds = %do.body
  %arrayidx323 = getelementptr inbounds %struct.rtx_def* %to_rtx.0, i64 0, i32 1, i64 1
  %rtmem324 = bitcast %union.rtunion_def* %arrayidx323 to %struct.mem_attrs**
  %31 = load %struct.mem_attrs** %rtmem324, align 8, !tbaa !1
  %cmp325 = icmp eq %struct.mem_attrs* %31, null
  br i1 %cmp325, label %if.end338, label %cond.false328

cond.false328:                                    ; preds = %land.lhs.true321
  %alias = getelementptr inbounds %struct.mem_attrs* %31, i64 0, i32 0
  %32 = load i64* %alias, align 8, !tbaa !79
  %phitmp = icmp eq i64 %32, 0
  br i1 %phitmp, label %if.end338, label %if.then336

if.then336:                                       ; preds = %cond.false328
  %conv337 = sext i32 %alias_set to i64
  tail call void @set_mem_alias_set(%struct.rtx_def* %to_rtx.0, i64 %conv337) #5
  br label %if.end338

if.end338:                                        ; preds = %cond.false328, %land.lhs.true321, %do.body, %if.then336
  %conv340 = zext i1 %cmp245 to i32
  %call341 = tail call %struct.rtx_def* @store_expr(%union.tree_node* %exp, %struct.rtx_def* %to_rtx.0, i32 %conv340)
  br label %return

return:                                           ; preds = %if.end338, %if.end241, %if.end238, %if.end230, %if.then226, %if.end187, %if.end63, %if.then2, %if.then
  %retval.0 = phi %struct.rtx_def* [ %0, %if.then ], [ %call, %if.then2 ], [ %call64, %if.end63 ], [ %cond198, %if.end187 ], [ %call240, %if.end238 ], [ %call229, %if.then226 ], [ %call237, %if.end230 ], [ %22, %if.end241 ], [ %call341, %if.end338 ]
  ret %struct.rtx_def* %retval.0
}

declare i64 @get_alias_set(%union.tree_node*) #1

declare void @free_temp_slots() #1

declare void @pop_temp_slots() #1

declare i32 @aggregate_value_p(%union.tree_node*) #1

declare %struct.rtx_def* @expr_size(%union.tree_node*) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @store_expr(%union.tree_node* %exp, %struct.rtx_def* %target, i32 %want_value) #0 {
entry:
  br label %tailrecurse

tailrecurse:                                      ; preds = %emit_queue.exit, %entry
  %exp.tr = phi %union.tree_node* [ %exp, %entry ], [ %19, %emit_queue.exit ]
  %code = getelementptr inbounds %union.tree_node* %exp.tr, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  switch i32 %bf.clear, label %if.else36 [
    i32 47, label %if.then
    i32 51, label %land.lhs.true
  ]

if.then:                                          ; preds = %tailrecurse
  %operands = getelementptr inbounds %union.tree_node* %exp.tr, i64 0, i32 0, i32 2
  %arrayidx = bitcast i32* %operands to %union.tree_node**
  %0 = load %union.tree_node** %arrayidx, align 8, !tbaa !1
  %1 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %0, %struct.rtx_def* %1, i32 0, i32 0)
  %2 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr30.i = getelementptr inbounds %struct.function* %2, i64 0, i32 2
  %3 = load %struct.expr_status** %expr30.i, align 8, !tbaa !6
  %x_pending_chain31.i = getelementptr inbounds %struct.expr_status* %3, i64 0, i32 6
  %4 = load %struct.rtx_def** %x_pending_chain31.i, align 8, !tbaa !11
  %tobool32.i = icmp eq %struct.rtx_def* %4, null
  br i1 %tobool32.i, label %emit_queue.exit, label %while.body.i

while.body.i:                                     ; preds = %if.then, %if.end.i
  %5 = phi %struct.rtx_def* [ %17, %if.end.i ], [ %4, %if.then ]
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 1, i64 3
  %rtx.i = bitcast %union.rtunion_def* %arrayidx.i to %struct.rtx_def**
  %6 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !1
  %7 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 0
  %bf.load.i = load i32* %7, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  %cmp.i = icmp eq i32 %bf.clear.i, 24
  br i1 %cmp.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %while.body.i
  %arrayidx5.i = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1, i64 0
  %rtvec.i = bitcast %union.rtunion_def* %arrayidx5.i to %struct.rtvec_def**
  %8 = load %struct.rtvec_def** %rtvec.i, align 8, !tbaa !1
  %arrayidx6.i = getelementptr inbounds %struct.rtvec_def* %8, i64 0, i32 1, i64 0
  %9 = load %struct.rtx_def** %arrayidx6.i, align 8, !tbaa !1
  %10 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 1, i64 1, i32 0
  %.c.i = ptrtoint %struct.rtx_def* %9 to i64
  store i64 %.c.i, i64* %10, align 8, !tbaa !1
  %call.i903 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %6) #5
  br label %if.end.i

if.else.i:                                        ; preds = %while.body.i
  %call16.i = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %6) #5
  %11 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 1, i64 1, i32 0
  %call16.c.i = ptrtoint %struct.rtx_def* %call16.i to i64
  store i64 %call16.c.i, i64* %11, align 8, !tbaa !1
  br label %if.end.i

if.end.i:                                         ; preds = %if.else.i, %if.then.i
  %arrayidx21.i = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 1, i64 4
  %rtx22.i = bitcast %union.rtunion_def* %arrayidx21.i to %struct.rtx_def**
  %12 = load %struct.rtx_def** %rtx22.i, align 8, !tbaa !1
  %13 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr23.i = getelementptr inbounds %struct.function* %13, i64 0, i32 2
  %14 = load %struct.expr_status** %expr23.i, align 8, !tbaa !6
  %x_pending_chain24.i = getelementptr inbounds %struct.expr_status* %14, i64 0, i32 6
  store %struct.rtx_def* %12, %struct.rtx_def** %x_pending_chain24.i, align 8, !tbaa !11
  %15 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr.i = getelementptr inbounds %struct.function* %15, i64 0, i32 2
  %16 = load %struct.expr_status** %expr.i, align 8, !tbaa !6
  %x_pending_chain.i = getelementptr inbounds %struct.expr_status* %16, i64 0, i32 6
  %17 = load %struct.rtx_def** %x_pending_chain.i, align 8, !tbaa !11
  %tobool.i = icmp eq %struct.rtx_def* %17, null
  br i1 %tobool.i, label %emit_queue.exit, label %while.body.i

emit_queue.exit:                                  ; preds = %if.end.i, %if.then
  %arrayidx4 = getelementptr inbounds i32* %operands, i64 2
  %18 = bitcast i32* %arrayidx4 to %union.tree_node**
  %19 = load %union.tree_node** %18, align 8, !tbaa !1
  br label %tailrecurse

land.lhs.true:                                    ; preds = %tailrecurse
  %20 = getelementptr inbounds %struct.rtx_def* %target, i64 0, i32 0
  %bf.load11 = load i32* %20, align 8
  %bf.clear12 = and i32 %bf.load11, 16711680
  %cmp13 = icmp eq i32 %bf.clear12, 3342336
  br i1 %cmp13, label %if.then14, label %if.else36

if.then14:                                        ; preds = %land.lhs.true
  %call15 = tail call %struct.rtx_def* @gen_label_rtx() #5
  %call16 = tail call %struct.rtx_def* @gen_label_rtx() #5
  %21 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr30.i931 = getelementptr inbounds %struct.function* %21, i64 0, i32 2
  %22 = load %struct.expr_status** %expr30.i931, align 8, !tbaa !6
  %x_pending_chain31.i932 = getelementptr inbounds %struct.expr_status* %22, i64 0, i32 6
  %23 = load %struct.rtx_def** %x_pending_chain31.i932, align 8, !tbaa !11
  %tobool32.i933 = icmp eq %struct.rtx_def* %23, null
  br i1 %tobool32.i933, label %emit_queue.exit957, label %while.body.i939

while.body.i939:                                  ; preds = %if.then14, %if.end.i956
  %24 = phi %struct.rtx_def* [ %36, %if.end.i956 ], [ %23, %if.then14 ]
  %arrayidx.i934 = getelementptr inbounds %struct.rtx_def* %24, i64 0, i32 1, i64 3
  %rtx.i935 = bitcast %union.rtunion_def* %arrayidx.i934 to %struct.rtx_def**
  %25 = load %struct.rtx_def** %rtx.i935, align 8, !tbaa !1
  %26 = getelementptr inbounds %struct.rtx_def* %25, i64 0, i32 0
  %bf.load.i936 = load i32* %26, align 8
  %bf.clear.i937 = and i32 %bf.load.i936, 65535
  %cmp.i938 = icmp eq i32 %bf.clear.i937, 24
  br i1 %cmp.i938, label %if.then.i945, label %if.else.i948

if.then.i945:                                     ; preds = %while.body.i939
  %arrayidx5.i940 = getelementptr inbounds %struct.rtx_def* %25, i64 0, i32 1, i64 0
  %rtvec.i941 = bitcast %union.rtunion_def* %arrayidx5.i940 to %struct.rtvec_def**
  %27 = load %struct.rtvec_def** %rtvec.i941, align 8, !tbaa !1
  %arrayidx6.i942 = getelementptr inbounds %struct.rtvec_def* %27, i64 0, i32 1, i64 0
  %28 = load %struct.rtx_def** %arrayidx6.i942, align 8, !tbaa !1
  %29 = getelementptr inbounds %struct.rtx_def* %24, i64 0, i32 1, i64 1, i32 0
  %.c.i943 = ptrtoint %struct.rtx_def* %28 to i64
  store i64 %.c.i943, i64* %29, align 8, !tbaa !1
  %call.i944 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %25) #5
  br label %if.end.i956

if.else.i948:                                     ; preds = %while.body.i939
  %call16.i946 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %25) #5
  %30 = getelementptr inbounds %struct.rtx_def* %24, i64 0, i32 1, i64 1, i32 0
  %call16.c.i947 = ptrtoint %struct.rtx_def* %call16.i946 to i64
  store i64 %call16.c.i947, i64* %30, align 8, !tbaa !1
  br label %if.end.i956

if.end.i956:                                      ; preds = %if.else.i948, %if.then.i945
  %arrayidx21.i949 = getelementptr inbounds %struct.rtx_def* %24, i64 0, i32 1, i64 4
  %rtx22.i950 = bitcast %union.rtunion_def* %arrayidx21.i949 to %struct.rtx_def**
  %31 = load %struct.rtx_def** %rtx22.i950, align 8, !tbaa !1
  %32 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr23.i951 = getelementptr inbounds %struct.function* %32, i64 0, i32 2
  %33 = load %struct.expr_status** %expr23.i951, align 8, !tbaa !6
  %x_pending_chain24.i952 = getelementptr inbounds %struct.expr_status* %33, i64 0, i32 6
  store %struct.rtx_def* %31, %struct.rtx_def** %x_pending_chain24.i952, align 8, !tbaa !11
  %34 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr.i953 = getelementptr inbounds %struct.function* %34, i64 0, i32 2
  %35 = load %struct.expr_status** %expr.i953, align 8, !tbaa !6
  %x_pending_chain.i954 = getelementptr inbounds %struct.expr_status* %35, i64 0, i32 6
  %36 = load %struct.rtx_def** %x_pending_chain.i954, align 8, !tbaa !11
  %tobool.i955 = icmp eq %struct.rtx_def* %36, null
  br i1 %tobool.i955, label %emit_queue.exit957, label %while.body.i939

emit_queue.exit957:                               ; preds = %if.end.i956, %if.then14
  %call17 = tail call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %target, i32 1)
  %37 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr.i958 = getelementptr inbounds %struct.function* %37, i64 0, i32 2
  %38 = load %struct.expr_status** %expr.i958, align 8, !tbaa !6
  %x_inhibit_defer_pop.i = getelementptr inbounds %struct.expr_status* %38, i64 0, i32 1
  %39 = load i32* %x_inhibit_defer_pop.i, align 4, !tbaa !15
  %cmp.i959 = icmp eq i32 %39, 0
  br i1 %cmp.i959, label %if.then.i960, label %do_pending_stack_adjust.exit

if.then.i960:                                     ; preds = %emit_queue.exit957
  %x_pending_stack_adjust.i = getelementptr inbounds %struct.expr_status* %38, i64 0, i32 0
  %40 = load i32* %x_pending_stack_adjust.i, align 4, !tbaa !13
  %cmp2.i = icmp eq i32 %40, 0
  br i1 %cmp2.i, label %if.end.i962, label %if.then3.i

if.then3.i:                                       ; preds = %if.then.i960
  %conv.i = sext i32 %40 to i64
  %call.i961 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv.i) #5
  tail call void @adjust_stack(%struct.rtx_def* %call.i961) #5
  %.pre.i = load %struct.function** @cfun, align 8, !tbaa !1
  %expr6.phi.trans.insert.i = getelementptr inbounds %struct.function* %.pre.i, i64 0, i32 2
  %.pre9.i = load %struct.expr_status** %expr6.phi.trans.insert.i, align 8, !tbaa !6
  %x_inhibit_defer_pop.phi.trans.insert.phi.trans.insert = getelementptr inbounds %struct.expr_status* %.pre9.i, i64 0, i32 1
  %.pre1002.pre = load i32* %x_inhibit_defer_pop.phi.trans.insert.phi.trans.insert, align 4, !tbaa !15
  br label %if.end.i962

if.end.i962:                                      ; preds = %if.then3.i, %if.then.i960
  %.pre1002 = phi i32 [ 0, %if.then.i960 ], [ %.pre1002.pre, %if.then3.i ]
  %.pre = phi %struct.expr_status* [ %38, %if.then.i960 ], [ %.pre9.i, %if.then3.i ]
  %x_pending_stack_adjust7.i = getelementptr inbounds %struct.expr_status* %.pre, i64 0, i32 0
  store i32 0, i32* %x_pending_stack_adjust7.i, align 4, !tbaa !13
  br label %do_pending_stack_adjust.exit

do_pending_stack_adjust.exit:                     ; preds = %emit_queue.exit957, %if.end.i962
  %41 = phi i32 [ %39, %emit_queue.exit957 ], [ %.pre1002, %if.end.i962 ]
  %42 = phi %struct.expr_status* [ %38, %emit_queue.exit957 ], [ %.pre, %if.end.i962 ]
  %x_inhibit_defer_pop = getelementptr inbounds %struct.expr_status* %42, i64 0, i32 1
  %add = add nsw i32 %41, 1
  store i32 %add, i32* %x_inhibit_defer_pop, align 4, !tbaa !15
  %operands19 = getelementptr inbounds %union.tree_node* %exp.tr, i64 0, i32 0, i32 2
  %arrayidx20 = bitcast i32* %operands19 to %union.tree_node**
  %43 = load %union.tree_node** %arrayidx20, align 8, !tbaa !1
  tail call void @do_jump(%union.tree_node* %43, %struct.rtx_def* %call15, %struct.rtx_def* null) #5
  tail call void @start_cleanup_deferral() #5
  %arrayidx23 = getelementptr inbounds i32* %operands19, i64 2
  %44 = bitcast i32* %arrayidx23 to %union.tree_node**
  %45 = load %union.tree_node** %44, align 8, !tbaa !1
  %call24 = tail call %struct.rtx_def* @store_expr(%union.tree_node* %45, %struct.rtx_def* %call17, i32 0)
  tail call void @end_cleanup_deferral() #5
  %46 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr30.i963 = getelementptr inbounds %struct.function* %46, i64 0, i32 2
  %47 = load %struct.expr_status** %expr30.i963, align 8, !tbaa !6
  %x_pending_chain31.i964 = getelementptr inbounds %struct.expr_status* %47, i64 0, i32 6
  %48 = load %struct.rtx_def** %x_pending_chain31.i964, align 8, !tbaa !11
  %tobool32.i965 = icmp eq %struct.rtx_def* %48, null
  br i1 %tobool32.i965, label %emit_queue.exit989, label %while.body.i971

while.body.i971:                                  ; preds = %do_pending_stack_adjust.exit, %if.end.i988
  %49 = phi %struct.rtx_def* [ %61, %if.end.i988 ], [ %48, %do_pending_stack_adjust.exit ]
  %arrayidx.i966 = getelementptr inbounds %struct.rtx_def* %49, i64 0, i32 1, i64 3
  %rtx.i967 = bitcast %union.rtunion_def* %arrayidx.i966 to %struct.rtx_def**
  %50 = load %struct.rtx_def** %rtx.i967, align 8, !tbaa !1
  %51 = getelementptr inbounds %struct.rtx_def* %50, i64 0, i32 0
  %bf.load.i968 = load i32* %51, align 8
  %bf.clear.i969 = and i32 %bf.load.i968, 65535
  %cmp.i970 = icmp eq i32 %bf.clear.i969, 24
  br i1 %cmp.i970, label %if.then.i977, label %if.else.i980

if.then.i977:                                     ; preds = %while.body.i971
  %arrayidx5.i972 = getelementptr inbounds %struct.rtx_def* %50, i64 0, i32 1, i64 0
  %rtvec.i973 = bitcast %union.rtunion_def* %arrayidx5.i972 to %struct.rtvec_def**
  %52 = load %struct.rtvec_def** %rtvec.i973, align 8, !tbaa !1
  %arrayidx6.i974 = getelementptr inbounds %struct.rtvec_def* %52, i64 0, i32 1, i64 0
  %53 = load %struct.rtx_def** %arrayidx6.i974, align 8, !tbaa !1
  %54 = getelementptr inbounds %struct.rtx_def* %49, i64 0, i32 1, i64 1, i32 0
  %.c.i975 = ptrtoint %struct.rtx_def* %53 to i64
  store i64 %.c.i975, i64* %54, align 8, !tbaa !1
  %call.i976 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %50) #5
  br label %if.end.i988

if.else.i980:                                     ; preds = %while.body.i971
  %call16.i978 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %50) #5
  %55 = getelementptr inbounds %struct.rtx_def* %49, i64 0, i32 1, i64 1, i32 0
  %call16.c.i979 = ptrtoint %struct.rtx_def* %call16.i978 to i64
  store i64 %call16.c.i979, i64* %55, align 8, !tbaa !1
  br label %if.end.i988

if.end.i988:                                      ; preds = %if.else.i980, %if.then.i977
  %arrayidx21.i981 = getelementptr inbounds %struct.rtx_def* %49, i64 0, i32 1, i64 4
  %rtx22.i982 = bitcast %union.rtunion_def* %arrayidx21.i981 to %struct.rtx_def**
  %56 = load %struct.rtx_def** %rtx22.i982, align 8, !tbaa !1
  %57 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr23.i983 = getelementptr inbounds %struct.function* %57, i64 0, i32 2
  %58 = load %struct.expr_status** %expr23.i983, align 8, !tbaa !6
  %x_pending_chain24.i984 = getelementptr inbounds %struct.expr_status* %58, i64 0, i32 6
  store %struct.rtx_def* %56, %struct.rtx_def** %x_pending_chain24.i984, align 8, !tbaa !11
  %59 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr.i985 = getelementptr inbounds %struct.function* %59, i64 0, i32 2
  %60 = load %struct.expr_status** %expr.i985, align 8, !tbaa !6
  %x_pending_chain.i986 = getelementptr inbounds %struct.expr_status* %60, i64 0, i32 6
  %61 = load %struct.rtx_def** %x_pending_chain.i986, align 8, !tbaa !11
  %tobool.i987 = icmp eq %struct.rtx_def* %61, null
  br i1 %tobool.i987, label %emit_queue.exit989, label %while.body.i971

emit_queue.exit989:                               ; preds = %if.end.i988, %do_pending_stack_adjust.exit
  %call25 = tail call %struct.rtx_def* @gen_jump(%struct.rtx_def* %call16) #5
  %call26 = tail call %struct.rtx_def* @emit_jump_insn(%struct.rtx_def* %call25) #5
  %call27 = tail call %struct.rtx_def* @emit_barrier() #5
  %call28 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call15) #5
  tail call void @start_cleanup_deferral() #5
  %arrayidx31 = getelementptr inbounds i32* %operands19, i64 4
  %62 = bitcast i32* %arrayidx31 to %union.tree_node**
  %63 = load %union.tree_node** %62, align 8, !tbaa !1
  %call32 = tail call %struct.rtx_def* @store_expr(%union.tree_node* %63, %struct.rtx_def* %call17, i32 0)
  tail call void @end_cleanup_deferral() #5
  %64 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr30.i904 = getelementptr inbounds %struct.function* %64, i64 0, i32 2
  %65 = load %struct.expr_status** %expr30.i904, align 8, !tbaa !6
  %x_pending_chain31.i905 = getelementptr inbounds %struct.expr_status* %65, i64 0, i32 6
  %66 = load %struct.rtx_def** %x_pending_chain31.i905, align 8, !tbaa !11
  %tobool32.i906 = icmp eq %struct.rtx_def* %66, null
  br i1 %tobool32.i906, label %emit_queue.exit930, label %while.body.i912

while.body.i912:                                  ; preds = %emit_queue.exit989, %if.end.i929
  %67 = phi %struct.rtx_def* [ %79, %if.end.i929 ], [ %66, %emit_queue.exit989 ]
  %arrayidx.i907 = getelementptr inbounds %struct.rtx_def* %67, i64 0, i32 1, i64 3
  %rtx.i908 = bitcast %union.rtunion_def* %arrayidx.i907 to %struct.rtx_def**
  %68 = load %struct.rtx_def** %rtx.i908, align 8, !tbaa !1
  %69 = getelementptr inbounds %struct.rtx_def* %68, i64 0, i32 0
  %bf.load.i909 = load i32* %69, align 8
  %bf.clear.i910 = and i32 %bf.load.i909, 65535
  %cmp.i911 = icmp eq i32 %bf.clear.i910, 24
  br i1 %cmp.i911, label %if.then.i918, label %if.else.i921

if.then.i918:                                     ; preds = %while.body.i912
  %arrayidx5.i913 = getelementptr inbounds %struct.rtx_def* %68, i64 0, i32 1, i64 0
  %rtvec.i914 = bitcast %union.rtunion_def* %arrayidx5.i913 to %struct.rtvec_def**
  %70 = load %struct.rtvec_def** %rtvec.i914, align 8, !tbaa !1
  %arrayidx6.i915 = getelementptr inbounds %struct.rtvec_def* %70, i64 0, i32 1, i64 0
  %71 = load %struct.rtx_def** %arrayidx6.i915, align 8, !tbaa !1
  %72 = getelementptr inbounds %struct.rtx_def* %67, i64 0, i32 1, i64 1, i32 0
  %.c.i916 = ptrtoint %struct.rtx_def* %71 to i64
  store i64 %.c.i916, i64* %72, align 8, !tbaa !1
  %call.i917 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %68) #5
  br label %if.end.i929

if.else.i921:                                     ; preds = %while.body.i912
  %call16.i919 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %68) #5
  %73 = getelementptr inbounds %struct.rtx_def* %67, i64 0, i32 1, i64 1, i32 0
  %call16.c.i920 = ptrtoint %struct.rtx_def* %call16.i919 to i64
  store i64 %call16.c.i920, i64* %73, align 8, !tbaa !1
  br label %if.end.i929

if.end.i929:                                      ; preds = %if.else.i921, %if.then.i918
  %arrayidx21.i922 = getelementptr inbounds %struct.rtx_def* %67, i64 0, i32 1, i64 4
  %rtx22.i923 = bitcast %union.rtunion_def* %arrayidx21.i922 to %struct.rtx_def**
  %74 = load %struct.rtx_def** %rtx22.i923, align 8, !tbaa !1
  %75 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr23.i924 = getelementptr inbounds %struct.function* %75, i64 0, i32 2
  %76 = load %struct.expr_status** %expr23.i924, align 8, !tbaa !6
  %x_pending_chain24.i925 = getelementptr inbounds %struct.expr_status* %76, i64 0, i32 6
  store %struct.rtx_def* %74, %struct.rtx_def** %x_pending_chain24.i925, align 8, !tbaa !11
  %77 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr.i926 = getelementptr inbounds %struct.function* %77, i64 0, i32 2
  %78 = load %struct.expr_status** %expr.i926, align 8, !tbaa !6
  %x_pending_chain.i927 = getelementptr inbounds %struct.expr_status* %78, i64 0, i32 6
  %79 = load %struct.rtx_def** %x_pending_chain.i927, align 8, !tbaa !11
  %tobool.i928 = icmp eq %struct.rtx_def* %79, null
  br i1 %tobool.i928, label %emit_queue.exit930, label %while.body.i912

emit_queue.exit930:                               ; preds = %if.end.i929, %emit_queue.exit989
  %call33 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call16) #5
  %80 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr34 = getelementptr inbounds %struct.function* %80, i64 0, i32 2
  %81 = load %struct.expr_status** %expr34, align 8, !tbaa !6
  %x_inhibit_defer_pop35 = getelementptr inbounds %struct.expr_status* %81, i64 0, i32 1
  %82 = load i32* %x_inhibit_defer_pop35, align 4, !tbaa !15
  %sub = add nsw i32 %82, -1
  store i32 %sub, i32* %x_inhibit_defer_pop35, align 4, !tbaa !15
  %tobool = icmp ne i32 %want_value, 0
  %cond = select i1 %tobool, %struct.rtx_def* %call17, %struct.rtx_def* null
  br label %return

if.else36:                                        ; preds = %tailrecurse, %land.lhs.true
  %call37 = tail call i32 @queued_subexp_p(%struct.rtx_def* %target)
  %tobool38 = icmp eq i32 %call37, 0
  br i1 %tobool38, label %if.else71, label %if.then39

if.then39:                                        ; preds = %if.else36
  %83 = getelementptr inbounds %struct.rtx_def* %target, i64 0, i32 0
  %bf.load40 = load i32* %83, align 8
  %bf.lshr41 = lshr i32 %bf.load40, 16
  %bf.clear42 = and i32 %bf.lshr41, 255
  switch i32 %bf.clear42, label %if.then49 [
    i32 51, label %if.else58
    i32 0, label %if.else58
  ]

if.then49:                                        ; preds = %if.then39
  %call53 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear42) #5
  %bf.load54 = load i32* %83, align 8
  %bf.lshr55 = lshr i32 %bf.load54, 16
  %bf.clear56 = and i32 %bf.lshr55, 255
  %call57 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %exp.tr, %struct.rtx_def* %call53, i32 %bf.clear56, i32 0)
  br label %if.end

if.else58:                                        ; preds = %if.then39, %if.then39
  %call62 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %exp.tr, %struct.rtx_def* null, i32 %bf.clear42, i32 0)
  br label %if.end

if.end:                                           ; preds = %if.else58, %if.then49
  %temp.0 = phi %struct.rtx_def* [ %call57, %if.then49 ], [ %call62, %if.else58 ]
  %bf.load63 = load i32* %83, align 8
  %bf.clear65 = and i32 %bf.load63, 134217728
  %tobool66 = icmp eq i32 %bf.clear65, 0
  %tobool68 = icmp ne i32 %want_value, 0
  %or.cond = and i1 %tobool66, %tobool68
  %. = zext i1 %or.cond to i32
  br label %if.end403

if.else71:                                        ; preds = %if.else36
  %tobool72 = icmp ne i32 %want_value, 0
  %84 = getelementptr inbounds %struct.rtx_def* %target, i64 0, i32 0
  %bf.load74 = load i32* %84, align 8
  %85 = and i32 %bf.load74, 134283263
  %86 = icmp eq i32 %85, 66
  %or.cond1006 = and i1 %tobool72, %86
  br i1 %or.cond1006, label %land.lhs.true82, label %if.else115

land.lhs.true82:                                  ; preds = %if.else71
  %bf.lshr84 = lshr i32 %bf.load74, 16
  %bf.clear85 = and i32 %bf.lshr84, 255
  %cmp86 = icmp eq i32 %bf.clear85, 51
  br i1 %cmp86, label %if.else115, label %if.then87

if.then87:                                        ; preds = %land.lhs.true82
  %call91 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %exp.tr, %struct.rtx_def* %target, i32 %bf.clear85, i32 0)
  %87 = getelementptr inbounds %struct.rtx_def* %call91, i64 0, i32 0
  %bf.load92 = load i32* %87, align 8
  %bf.lshr93 = lshr i32 %bf.load92, 16
  %bf.clear94 = and i32 %bf.lshr93, 255
  switch i32 %bf.clear94, label %if.then101 [
    i32 51, label %if.end403
    i32 0, label %if.end403
  ]

if.then101:                                       ; preds = %if.then87
  %cmp102 = icmp eq %struct.rtx_def* %call91, %target
  br i1 %cmp102, label %if.then111, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then101
  %call103 = tail call i32 @rtx_equal_p(%struct.rtx_def* %call91, %struct.rtx_def* %target) #5
  %tobool104 = icmp eq i32 %call103, 0
  br i1 %tobool104, label %if.end112, label %land.lhs.true105

land.lhs.true105:                                 ; preds = %lor.lhs.false
  %call106 = tail call i32 @side_effects_p(%struct.rtx_def* %call91) #5
  %tobool107 = icmp eq i32 %call106, 0
  br i1 %tobool107, label %land.lhs.true108, label %if.end112

land.lhs.true108:                                 ; preds = %land.lhs.true105
  %call109 = tail call i32 @side_effects_p(%struct.rtx_def* %target) #5
  %tobool110 = icmp eq i32 %call109, 0
  br i1 %tobool110, label %if.then111, label %if.end112

if.then111:                                       ; preds = %land.lhs.true108, %if.then101
  br label %if.end112

if.end112:                                        ; preds = %land.lhs.true108, %land.lhs.true105, %lor.lhs.false, %if.then111
  %dont_store_target.0 = phi i32 [ 1, %if.then111 ], [ 0, %land.lhs.true105 ], [ 0, %land.lhs.true108 ], [ 0, %lor.lhs.false ]
  %call113 = tail call %struct.rtx_def* @copy_to_reg(%struct.rtx_def* %call91) #5
  br label %if.end403

if.else115:                                       ; preds = %if.else71, %land.lhs.true82
  %88 = getelementptr inbounds %struct.rtx_def* %target, i64 0, i32 0
  %89 = and i32 %bf.load74, 268500991
  %90 = icmp eq i32 %89, 268435519
  br i1 %90, label %if.then124, label %if.else337

if.then124:                                       ; preds = %if.else115
  br i1 %tobool72, label %if.end195, label %land.lhs.true126

land.lhs.true126:                                 ; preds = %if.then124
  %type = getelementptr inbounds %union.tree_node* %exp.tr, i64 0, i32 0, i32 0, i32 1
  %91 = load %union.tree_node** %type, align 8, !tbaa !36
  %code129 = getelementptr inbounds %union.tree_node* %91, i64 0, i32 0, i32 0, i32 2
  %bf.load130 = load i32* %code129, align 8
  %bf.clear131 = and i32 %bf.load130, 255
  switch i32 %bf.clear131, label %if.end195 [
    i32 6, label %land.lhs.true157
    i32 10, label %land.lhs.true157
    i32 11, label %land.lhs.true157
    i32 12, label %land.lhs.true157
  ]

land.lhs.true157:                                 ; preds = %land.lhs.true126, %land.lhs.true126, %land.lhs.true126, %land.lhs.true126
  %type161 = getelementptr inbounds %union.tree_node* %91, i64 0, i32 0, i32 0, i32 1
  %92 = load %union.tree_node** %type161, align 8, !tbaa !36
  %cmp162 = icmp eq %union.tree_node* %92, null
  br i1 %cmp162, label %if.then163, label %if.end195

if.then163:                                       ; preds = %land.lhs.true157
  %bf.lshr168 = lshr i32 %bf.load130, 13
  %bf.clear169 = and i32 %bf.lshr168, 1
  %bf.lshr171 = lshr i32 %bf.load74, 26
  %bf.clear172 = and i32 %bf.lshr171, 1
  %cmp173 = icmp eq i32 %bf.clear169, %bf.clear172
  br i1 %cmp173, label %if.end182, label %if.then174

if.then174:                                       ; preds = %if.then163
  %call180 = tail call %union.tree_node* @signed_or_unsigned_type(i32 %bf.clear172, %union.tree_node* %91) #5
  %call181 = tail call %union.tree_node* @convert(%union.tree_node* %call180, %union.tree_node* %exp.tr) #5
  %bf.load187.pre = load i32* %88, align 8
  br label %if.end182

if.end182:                                        ; preds = %if.then163, %if.then174
  %bf.load187 = phi i32 [ %bf.load187.pre, %if.then174 ], [ %bf.load74, %if.then163 ]
  %exp.addr.0 = phi %union.tree_node* [ %call181, %if.then174 ], [ %exp.tr, %if.then163 ]
  %arrayidx183 = getelementptr inbounds %struct.rtx_def* %target, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx183 to %struct.rtx_def**
  %93 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %94 = getelementptr inbounds %struct.rtx_def* %93, i64 0, i32 0
  %bf.load184 = load i32* %94, align 8
  %bf.lshr185 = lshr i32 %bf.load184, 16
  %bf.clear186 = and i32 %bf.lshr185, 255
  %bf.lshr188 = lshr i32 %bf.load187, 26
  %bf.clear189 = and i32 %bf.lshr188, 1
  %call190 = tail call %union.tree_node* @type_for_mode(i32 %bf.clear186, i32 %bf.clear189) #5
  %call191 = tail call %union.tree_node* @convert(%union.tree_node* %call190, %union.tree_node* %exp.addr.0) #5
  %95 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  br label %if.end195

if.end195:                                        ; preds = %land.lhs.true126, %if.end182, %land.lhs.true157, %if.then124
  %inner_target.0 = phi %struct.rtx_def* [ null, %if.then124 ], [ %95, %if.end182 ], [ null, %land.lhs.true157 ], [ null, %land.lhs.true126 ]
  %exp.addr.1 = phi %union.tree_node* [ %exp.tr, %if.then124 ], [ %call191, %if.end182 ], [ %exp.tr, %land.lhs.true157 ], [ %exp.tr, %land.lhs.true126 ]
  %call196 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %exp.addr.1, %struct.rtx_def* %inner_target.0, i32 0, i32 0)
  %96 = getelementptr inbounds %struct.rtx_def* %call196, i64 0, i32 0
  %bf.load197 = load i32* %96, align 8
  %bf.clear198 = and i32 %bf.load197, 65535
  %cmp199 = icmp eq i32 %bf.clear198, 66
  %or.cond690 = and i1 %cmp199, %tobool72
  br i1 %or.cond690, label %land.lhs.true202, label %if.end218

land.lhs.true202:                                 ; preds = %if.end195
  %bf.clear205 = and i32 %bf.load197, 134217728
  %tobool206 = icmp eq i32 %bf.clear205, 0
  br i1 %tobool206, label %lor.lhs.false207, label %if.then216

lor.lhs.false207:                                 ; preds = %land.lhs.true202
  %arrayidx209 = getelementptr inbounds %struct.rtx_def* %target, i64 0, i32 1, i64 0
  %rtx210 = bitcast %union.rtunion_def* %arrayidx209 to %struct.rtx_def**
  %97 = load %struct.rtx_def** %rtx210, align 8, !tbaa !1
  %arrayidx212 = getelementptr inbounds %struct.rtx_def* %call196, i64 0, i32 1, i64 0
  %rtx213 = bitcast %union.rtunion_def* %arrayidx212 to %struct.rtx_def**
  %98 = load %struct.rtx_def** %rtx213, align 8, !tbaa !1
  %call214 = tail call i32 @reg_mentioned_p(%struct.rtx_def* %97, %struct.rtx_def* %98) #5
  %tobool215 = icmp eq i32 %call214, 0
  br i1 %tobool215, label %if.end218, label %if.then216

if.then216:                                       ; preds = %lor.lhs.false207, %land.lhs.true202
  %call217 = tail call %struct.rtx_def* @copy_to_reg(%struct.rtx_def* %call196) #5
  br label %if.end218

if.end218:                                        ; preds = %lor.lhs.false207, %if.then216, %if.end195
  %temp.2 = phi %struct.rtx_def* [ %call217, %if.then216 ], [ %call196, %lor.lhs.false207 ], [ %call196, %if.end195 ]
  %99 = getelementptr inbounds %struct.rtx_def* %temp.2, i64 0, i32 0
  %bf.load219 = load i32* %99, align 8
  %bf.clear220 = and i32 %bf.load219, 65535
  switch i32 %bf.clear220, label %if.end282 [
    i32 67, label %land.lhs.true250
    i32 68, label %land.lhs.true250
    i32 54, label %land.lhs.true250
    i32 55, label %land.lhs.true250
    i32 58, label %land.lhs.true250
    i32 134, label %land.lhs.true250
    i32 56, label %land.lhs.true250
    i32 140, label %land.lhs.true250
  ]

land.lhs.true250:                                 ; preds = %if.end218, %if.end218, %if.end218, %if.end218, %if.end218, %if.end218, %if.end218, %if.end218
  %bf.clear253 = and i32 %bf.load219, 16711680
  %cmp254 = icmp eq i32 %bf.clear253, 0
  br i1 %cmp254, label %if.then255, label %if.end282

if.then255:                                       ; preds = %land.lhs.true250
  %bf.load256 = load i32* %88, align 8
  %bf.lshr257 = lshr i32 %bf.load256, 16
  %bf.clear258 = and i32 %bf.lshr257, 255
  %type260 = getelementptr inbounds %union.tree_node* %exp.addr.1, i64 0, i32 0, i32 0, i32 1
  %100 = load %union.tree_node** %type260, align 8, !tbaa !36
  %type261 = bitcast %union.tree_node* %100 to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type* %type261, i64 0, i32 6
  %bf.load262 = load i32* %mode, align 4
  %bf.lshr263 = lshr i32 %bf.load262, 9
  %bf.clear264 = and i32 %bf.lshr263, 127
  %bf.lshr266 = lshr i32 %bf.load256, 26
  %bf.clear267 = and i32 %bf.lshr266, 1
  %call268 = tail call %struct.rtx_def* @convert_modes(i32 %bf.clear258, i32 %bf.clear264, %struct.rtx_def* %temp.2, i32 %bf.clear267)
  %arrayidx270 = getelementptr inbounds %struct.rtx_def* %target, i64 0, i32 1, i64 0
  %rtx271 = bitcast %union.rtunion_def* %arrayidx270 to %struct.rtx_def**
  %101 = load %struct.rtx_def** %rtx271, align 8, !tbaa !1
  %102 = getelementptr inbounds %struct.rtx_def* %101, i64 0, i32 0
  %bf.load272 = load i32* %102, align 8
  %bf.lshr273 = lshr i32 %bf.load272, 16
  %bf.clear274 = and i32 %bf.lshr273, 255
  %bf.load275 = load i32* %88, align 8
  %bf.lshr276 = lshr i32 %bf.load275, 16
  %bf.clear277 = and i32 %bf.lshr276, 255
  %bf.lshr279 = lshr i32 %bf.load275, 26
  %bf.clear280 = and i32 %bf.lshr279, 1
  %call281 = tail call %struct.rtx_def* @convert_modes(i32 %bf.clear274, i32 %bf.clear277, %struct.rtx_def* %call268, i32 %bf.clear280)
  br label %if.end282

if.end282:                                        ; preds = %if.end218, %if.then255, %land.lhs.true250
  %temp.3 = phi %struct.rtx_def* [ %call281, %if.then255 ], [ %temp.2, %land.lhs.true250 ], [ %temp.2, %if.end218 ]
  %arrayidx284 = getelementptr inbounds %struct.rtx_def* %target, i64 0, i32 1, i64 0
  %rtx285 = bitcast %union.rtunion_def* %arrayidx284 to %struct.rtx_def**
  %103 = load %struct.rtx_def** %rtx285, align 8, !tbaa !1
  %bf.load286 = load i32* %88, align 8
  %bf.lshr287 = lshr i32 %bf.load286, 26
  %bf.clear288 = and i32 %bf.lshr287, 1
  tail call void @convert_move(%struct.rtx_def* %103, %struct.rtx_def* %temp.3, i32 %bf.clear288)
  br i1 %tobool72, label %land.lhs.true290, label %if.end331

land.lhs.true290:                                 ; preds = %if.end282
  %104 = getelementptr inbounds %struct.rtx_def* %temp.3, i64 0, i32 0
  %bf.load291 = load i32* %104, align 8
  %bf.lshr292 = lshr i32 %bf.load291, 16
  %bf.clear293 = and i32 %bf.lshr292, 255
  %bf.load294 = load i32* %88, align 8
  %bf.lshr295 = lshr i32 %bf.load294, 16
  %bf.clear296 = and i32 %bf.lshr295, 255
  %cmp297 = icmp eq i32 %bf.clear293, %bf.clear296
  br i1 %cmp297, label %if.end331, label %if.then298

if.then298:                                       ; preds = %land.lhs.true290
  %cmp302 = icmp eq i32 %bf.clear293, 0
  br i1 %cmp302, label %if.else316, label %if.then303

if.then303:                                       ; preds = %if.then298
  %call307 = tail call %struct.rtx_def* @gen_lowpart_SUBREG(i32 %bf.clear296, %struct.rtx_def* %temp.3) #5
  %105 = getelementptr inbounds %struct.rtx_def* %call307, i64 0, i32 0
  %bf.load308 = load i32* %105, align 8
  %bf.set = or i32 %bf.load308, 268435456
  store i32 %bf.set, i32* %105, align 8
  %bf.load310 = load i32* %88, align 8
  %bf.clear312 = and i32 %bf.load310, 67108864
  %bf.clear314 = and i32 %bf.set, -67108865
  %bf.set315 = or i32 %bf.clear314, %bf.clear312
  store i32 %bf.set315, i32* %105, align 8
  br label %if.end331

if.else316:                                       ; preds = %if.then298
  %106 = load %struct.rtx_def** %rtx285, align 8, !tbaa !1
  %107 = getelementptr inbounds %struct.rtx_def* %106, i64 0, i32 0
  %bf.load323 = load i32* %107, align 8
  %bf.lshr324 = lshr i32 %bf.load323, 16
  %bf.clear325 = and i32 %bf.lshr324, 255
  %bf.lshr327 = lshr i32 %bf.load294, 26
  %bf.clear328 = and i32 %bf.lshr327, 1
  %call329 = tail call %struct.rtx_def* @convert_modes(i32 %bf.clear296, i32 %bf.clear325, %struct.rtx_def* %temp.3, i32 %bf.clear328)
  br label %if.end331

if.end331:                                        ; preds = %land.lhs.true290, %if.then303, %if.else316, %if.end282
  %temp.4 = phi %struct.rtx_def* [ %call307, %if.then303 ], [ %call329, %if.else316 ], [ %temp.3, %land.lhs.true290 ], [ %temp.3, %if.end282 ]
  %cond336 = select i1 %tobool72, %struct.rtx_def* %temp.4, %struct.rtx_def* null
  br label %return

if.else337:                                       ; preds = %if.else115
  %bf.lshr339 = lshr i32 %bf.load74, 16
  %bf.clear340 = and i32 %bf.lshr339, 255
  %call341 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %exp.tr, %struct.rtx_def* %target, i32 %bf.clear340, i32 0)
  %tobool342 = icmp ne %struct.rtx_def* %target, null
  %bf.load352.pre = load i32* %88, align 8
  %bf.clear345 = and i32 %bf.load352.pre, 65535
  %cmp346 = icmp eq i32 %bf.clear345, 61
  %or.cond1007 = and i1 %tobool342, %cmp346
  br i1 %or.cond1007, label %land.lhs.true347, label %land.lhs.true351

land.lhs.true347:                                 ; preds = %if.else337
  %arrayidx349 = getelementptr inbounds %struct.rtx_def* %target, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx349 to i32*
  %108 = load i32* %rtuint, align 4, !tbaa !21
  %cmp350 = icmp ult i32 %108, 53
  %109 = and i32 %bf.load352.pre, 134283263
  %110 = icmp eq i32 %109, 134217794
  %or.cond1009 = or i1 %cmp350, %110
  br i1 %or.cond1009, label %if.end403, label %land.lhs.true360

land.lhs.true351:                                 ; preds = %if.else337
  %.old = and i32 %bf.load352.pre, 134283263
  %.old1008 = icmp eq i32 %.old, 134217794
  br i1 %.old1008, label %if.end403, label %land.lhs.true360

land.lhs.true360:                                 ; preds = %land.lhs.true347, %land.lhs.true351
  %call361 = tail call i32 @rtx_equal_p(%struct.rtx_def* %call341, %struct.rtx_def* %target) #5
  %tobool362 = icmp eq i32 %call361, 0
  br i1 %tobool362, label %land.lhs.true363, label %if.end403

land.lhs.true363:                                 ; preds = %land.lhs.true360
  %111 = getelementptr inbounds %struct.rtx_def* %call341, i64 0, i32 0
  %bf.load364 = load i32* %111, align 8
  %bf.clear365 = and i32 %bf.load364, 65535
  switch i32 %bf.clear365, label %lor.lhs.false391 [
    i32 67, label %if.then397
    i32 68, label %if.then397
    i32 54, label %if.then397
    i32 55, label %if.then397
    i32 58, label %if.then397
    i32 134, label %if.then397
    i32 56, label %if.then397
  ]

lor.lhs.false391:                                 ; preds = %land.lhs.true363
  %cmp394 = icmp eq i32 %bf.clear365, 140
  %or.cond691 = or i1 %cmp394, %tobool72
  br i1 %or.cond691, label %if.then397, label %if.end403

if.then397:                                       ; preds = %land.lhs.true363, %land.lhs.true363, %land.lhs.true363, %land.lhs.true363, %land.lhs.true363, %land.lhs.true363, %land.lhs.true363, %lor.lhs.false391
  br label %if.end403

if.end403:                                        ; preds = %land.lhs.true351, %if.end, %if.end112, %if.then87, %if.then87, %land.lhs.true360, %land.lhs.true347, %if.then397, %lor.lhs.false391
  %dont_return_target.0 = phi i32 [ 0, %land.lhs.true347 ], [ 0, %land.lhs.true360 ], [ 1, %if.then397 ], [ 0, %lor.lhs.false391 ], [ %., %if.end ], [ 1, %if.then87 ], [ 1, %if.then87 ], [ 1, %if.end112 ], [ 0, %land.lhs.true351 ]
  %dont_store_target.2 = phi i32 [ 0, %land.lhs.true347 ], [ 0, %land.lhs.true360 ], [ 0, %if.then397 ], [ 0, %lor.lhs.false391 ], [ 0, %if.end ], [ 0, %if.then87 ], [ 0, %if.then87 ], [ %dont_store_target.0, %if.end112 ], [ 0, %land.lhs.true351 ]
  %temp.5 = phi %struct.rtx_def* [ %call341, %land.lhs.true347 ], [ %call341, %land.lhs.true360 ], [ %call341, %if.then397 ], [ %call341, %lor.lhs.false391 ], [ %temp.0, %if.end ], [ %call91, %if.then87 ], [ %call91, %if.then87 ], [ %call113, %if.end112 ], [ %call341, %land.lhs.true351 ]
  %112 = getelementptr inbounds %struct.rtx_def* %temp.5, i64 0, i32 0
  %bf.load404 = load i32* %112, align 8
  %bf.clear405 = and i32 %bf.load404, 65535
  switch i32 %bf.clear405, label %if.end477 [
    i32 67, label %land.lhs.true435
    i32 68, label %land.lhs.true435
    i32 54, label %land.lhs.true435
    i32 55, label %land.lhs.true435
    i32 58, label %land.lhs.true435
    i32 134, label %land.lhs.true435
    i32 56, label %land.lhs.true435
    i32 140, label %land.lhs.true435
  ]

land.lhs.true435:                                 ; preds = %if.end403, %if.end403, %if.end403, %if.end403, %if.end403, %if.end403, %if.end403, %if.end403
  %bf.clear438 = and i32 %bf.load404, 16711680
  %cmp439 = icmp eq i32 %bf.clear438, 0
  br i1 %cmp439, label %land.lhs.true440, label %if.end477

land.lhs.true440:                                 ; preds = %land.lhs.true435
  %bf.load443 = load i32* %code, align 8
  %bf.clear444 = and i32 %bf.load443, 255
  %cmp445 = icmp eq i32 %bf.clear444, 0
  br i1 %cmp445, label %if.end477, label %land.lhs.true446

land.lhs.true446:                                 ; preds = %land.lhs.true440
  %113 = getelementptr inbounds %struct.rtx_def* %target, i64 0, i32 0
  %bf.load447 = load i32* %113, align 8
  %bf.lshr448 = lshr i32 %bf.load447, 16
  %bf.clear449 = and i32 %bf.lshr448, 255
  %type451 = getelementptr inbounds %union.tree_node* %exp.tr, i64 0, i32 0, i32 0, i32 1
  %114 = load %union.tree_node** %type451, align 8, !tbaa !36
  %type452 = bitcast %union.tree_node* %114 to %struct.tree_type*
  %mode453 = getelementptr inbounds %struct.tree_type* %type452, i64 0, i32 6
  %bf.load454 = load i32* %mode453, align 4
  %bf.lshr455 = lshr i32 %bf.load454, 9
  %bf.clear456 = and i32 %bf.lshr455, 127
  %cmp457 = icmp eq i32 %bf.clear449, %bf.clear456
  br i1 %cmp457, label %if.end477, label %if.then458

if.then458:                                       ; preds = %land.lhs.true446
  %unsigned_flag472 = getelementptr inbounds %union.tree_node* %114, i64 0, i32 0, i32 0, i32 2
  %bf.load473 = load i32* %unsigned_flag472, align 8
  %bf.lshr474 = lshr i32 %bf.load473, 13
  %bf.clear475 = and i32 %bf.lshr474, 1
  %call476 = tail call %struct.rtx_def* @convert_modes(i32 %bf.clear449, i32 %bf.clear456, %struct.rtx_def* %temp.5, i32 %bf.clear475)
  br label %if.end477

if.end477:                                        ; preds = %if.end403, %land.lhs.true446, %land.lhs.true440, %if.then458, %land.lhs.true435
  %temp.6 = phi %struct.rtx_def* [ %call476, %if.then458 ], [ %temp.5, %land.lhs.true446 ], [ %temp.5, %land.lhs.true440 ], [ %temp.5, %land.lhs.true435 ], [ %temp.5, %if.end403 ]
  %call478 = tail call i32 @rtx_equal_p(%struct.rtx_def* %temp.6, %struct.rtx_def* %target) #5
  %tobool479 = icmp eq i32 %call478, 0
  br i1 %tobool479, label %land.lhs.true488, label %lor.lhs.false480

lor.lhs.false480:                                 ; preds = %if.end477
  %cmp481 = icmp eq %struct.rtx_def* %temp.6, %target
  br i1 %cmp481, label %if.end657, label %land.lhs.true482

land.lhs.true482:                                 ; preds = %lor.lhs.false480
  %call483 = tail call i32 @side_effects_p(%struct.rtx_def* %temp.6) #5
  %tobool484 = icmp eq i32 %call483, 0
  br i1 %tobool484, label %lor.lhs.false485, label %land.lhs.true488

lor.lhs.false485:                                 ; preds = %land.lhs.true482
  %call486 = tail call i32 @side_effects_p(%struct.rtx_def* %target) #5
  %tobool487 = icmp eq i32 %call486, 0
  br i1 %tobool487, label %if.end657, label %land.lhs.true488

land.lhs.true488:                                 ; preds = %lor.lhs.false485, %land.lhs.true482, %if.end477
  %bf.load491 = load i32* %code, align 8
  %bf.clear492 = and i32 %bf.load491, 255
  %cmp493 = icmp eq i32 %bf.clear492, 0
  %tobool495 = icmp ne i32 %dont_store_target.2, 0
  %or.cond692 = or i1 %cmp493, %tobool495
  br i1 %or.cond692, label %if.end657, label %land.lhs.true496

land.lhs.true496:                                 ; preds = %land.lhs.true488
  %idxprom897 = zext i32 %bf.clear492 to i64
  %arrayidx501 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom897
  %115 = load i8* %arrayidx501, align 1, !tbaa !5
  %cmp502 = icmp eq i8 %115, 100
  br i1 %cmp502, label %lor.lhs.false504, label %if.then524

lor.lhs.false504:                                 ; preds = %land.lhs.true496
  %rtl = getelementptr inbounds %union.tree_node* %exp.tr, i64 0, i32 0, i32 17
  %116 = load %struct.rtx_def** %rtl, align 8, !tbaa !37
  %cmp522 = icmp eq %struct.rtx_def* %116, %target
  br i1 %cmp522, label %if.end657, label %if.then524

if.then524:                                       ; preds = %lor.lhs.false504, %land.lhs.true496
  %call525 = tail call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %target, i32 1)
  %117 = getelementptr inbounds %struct.rtx_def* %temp.6, i64 0, i32 0
  %bf.load526 = load i32* %117, align 8
  %bf.lshr527 = lshr i32 %bf.load526, 16
  %bf.clear528 = and i32 %bf.lshr527, 255
  %118 = getelementptr inbounds %struct.rtx_def* %call525, i64 0, i32 0
  %bf.load529 = load i32* %118, align 8
  %bf.lshr530 = lshr i32 %bf.load529, 16
  %bf.clear531 = and i32 %bf.lshr530, 255
  %cmp532 = icmp eq i32 %bf.clear528, %bf.clear531
  %cmp538 = icmp eq i32 %bf.clear528, 0
  %or.cond901 = or i1 %cmp532, %cmp538
  br i1 %or.cond901, label %if.else557, label %if.then540

if.then540:                                       ; preds = %if.then524
  %type542 = getelementptr inbounds %union.tree_node* %exp.tr, i64 0, i32 0, i32 0, i32 1
  %119 = load %union.tree_node** %type542, align 8, !tbaa !36
  %unsigned_flag544 = getelementptr inbounds %union.tree_node* %119, i64 0, i32 0, i32 0, i32 2
  %bf.load545 = load i32* %unsigned_flag544, align 8
  %bf.lshr546 = lshr i32 %bf.load545, 13
  %bf.clear547 = and i32 %bf.lshr546, 1
  %tobool548 = icmp eq i32 %dont_return_target.0, 0
  br i1 %tobool548, label %if.else555, label %if.then549

if.then549:                                       ; preds = %if.then540
  %call.i902 = tail call %struct.rtx_def* @convert_modes(i32 %bf.clear531, i32 0, %struct.rtx_def* %temp.6, i32 %bf.clear547) #5
  %call554 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call525, %struct.rtx_def* %call.i902)
  br label %if.end657

if.else555:                                       ; preds = %if.then540
  tail call void @convert_move(%struct.rtx_def* %call525, %struct.rtx_def* %temp.6, i32 %bf.clear547)
  br label %if.end657

if.else557:                                       ; preds = %if.then524
  %bf.clear560 = and i32 %bf.load526, 16711680
  %cmp561 = icmp eq i32 %bf.clear560, 3342336
  br i1 %cmp561, label %land.lhs.true563, label %if.else632

land.lhs.true563:                                 ; preds = %if.else557
  %bf.load566 = load i32* %code, align 8
  %bf.clear567 = and i32 %bf.load566, 255
  %cmp568 = icmp eq i32 %bf.clear567, 29
  br i1 %cmp568, label %if.then570, label %if.else632

if.then570:                                       ; preds = %land.lhs.true563
  %call571 = tail call %struct.rtx_def* @expr_size(%union.tree_node* %exp.tr) #5
  %120 = getelementptr inbounds %struct.rtx_def* %call571, i64 0, i32 0
  %bf.load572 = load i32* %120, align 8
  %bf.clear573 = and i32 %bf.load572, 65535
  %cmp574 = icmp eq i32 %bf.clear573, 54
  br i1 %cmp574, label %land.lhs.true576, label %if.then570.if.else584_crit_edge

if.then570.if.else584_crit_edge:                  ; preds = %if.then570
  %.pre1004 = getelementptr inbounds %union.tree_node* %exp.tr, i64 0, i32 0, i32 2
  br label %if.else584

land.lhs.true576:                                 ; preds = %if.then570
  %rtwint = getelementptr inbounds %struct.rtx_def* %call571, i64 0, i32 1, i64 0, i32 0
  %121 = load i64* %rtwint, align 8, !tbaa !22
  %122 = getelementptr inbounds %union.tree_node* %exp.tr, i64 0, i32 0, i32 2
  %123 = load i32* %122, align 4, !tbaa !56
  %conv579 = sext i32 %123 to i64
  %cmp580 = icmp slt i64 %121, %conv579
  br i1 %cmp580, label %if.then582, label %if.else584

if.then582:                                       ; preds = %land.lhs.true576
  %call583 = tail call %struct.rtx_def* @emit_block_move(%struct.rtx_def* %call525, %struct.rtx_def* %temp.6, %struct.rtx_def* %call571)
  br label %if.end657

if.else584:                                       ; preds = %if.then570.if.else584_crit_edge, %land.lhs.true576
  %.pre-phi = phi i32* [ %.pre1004, %if.then570.if.else584_crit_edge ], [ %122, %land.lhs.true576 ]
  %124 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !1
  %call585 = tail call %union.tree_node* @make_tree(%union.tree_node* %124, %struct.rtx_def* %call571) #5
  %125 = load i32* %.pre-phi, align 4, !tbaa !56
  %conv588 = sext i32 %125 to i64
  %call589 = tail call %union.tree_node* @size_int_wide(i64 %conv588, i32 0) #5
  %call590 = tail call %union.tree_node* @size_binop(i32 78, %union.tree_node* %call585, %union.tree_node* %call589) #5
  %call591 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %call590, %struct.rtx_def* null, i32 0, i32 0)
  %126 = load i32* @ptr_mode, align 4, !tbaa !5
  %call.i = tail call %struct.rtx_def* @convert_modes(i32 %126, i32 0, %struct.rtx_def* %call591, i32 0) #5
  %call593 = tail call %struct.rtx_def* @emit_block_move(%struct.rtx_def* %call525, %struct.rtx_def* %temp.6, %struct.rtx_def* %call.i)
  %127 = getelementptr inbounds %struct.rtx_def* %call.i, i64 0, i32 0
  %bf.load594 = load i32* %127, align 8
  %bf.clear595 = and i32 %bf.load594, 65535
  %cmp596 = icmp eq i32 %bf.clear595, 54
  br i1 %cmp596, label %if.then598, label %if.else608

if.then598:                                       ; preds = %if.else584
  %rtwint601 = getelementptr inbounds %struct.rtx_def* %call.i, i64 0, i32 1, i64 0, i32 0
  %128 = load i64* %rtwint601, align 8, !tbaa !22
  %sub602 = sub nsw i64 0, %128
  %call603 = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %call571, i64 %sub602) #5
  %129 = load i64* %rtwint601, align 8, !tbaa !22
  %call607 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %call525, i32 51, i64 %129, i32 1, i32 1) #5
  br label %if.end621

if.else608:                                       ; preds = %if.else584
  %130 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !1
  %type609 = bitcast %union.tree_node* %130 to %struct.tree_type*
  %mode610 = getelementptr inbounds %struct.tree_type* %type609, i64 0, i32 6
  %bf.load611 = load i32* %mode610, align 4
  %bf.lshr612 = lshr i32 %bf.load611, 9
  %bf.clear613 = and i32 %bf.lshr612, 127
  %131 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 2), align 8, !tbaa !1
  %call614 = tail call %struct.rtx_def* @expand_binop(i32 %bf.clear613, %struct.optab* %131, %struct.rtx_def* %call571, %struct.rtx_def* %call.i, %struct.rtx_def* null, i32 0, i32 3) #5
  %call615 = tail call fastcc i64 @highest_pow2_factor(%union.tree_node* %call590)
  %call616 = tail call %struct.rtx_def* @offset_address(%struct.rtx_def* %call525, %struct.rtx_def* %call.i, i64 %call615) #5
  %call617 = tail call %struct.rtx_def* @gen_label_rtx() #5
  %132 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %133 = getelementptr inbounds %struct.rtx_def* %call614, i64 0, i32 0
  %bf.load618 = load i32* %133, align 8
  %bf.lshr619 = lshr i32 %bf.load618, 16
  %bf.clear620 = and i32 %bf.lshr619, 255
  tail call void @emit_cmp_and_jump_insns(%struct.rtx_def* %call614, %struct.rtx_def* %132, i32 107, %struct.rtx_def* null, i32 %bf.clear620, i32 0, %struct.rtx_def* %call617) #5
  br label %if.end621

if.end621:                                        ; preds = %if.else608, %if.then598
  %target.addr.0 = phi %struct.rtx_def* [ %call607, %if.then598 ], [ %call616, %if.else608 ]
  %size.0 = phi %struct.rtx_def* [ %call603, %if.then598 ], [ %call614, %if.else608 ]
  %label.0 = phi %struct.rtx_def* [ null, %if.then598 ], [ %call617, %if.else608 ]
  %134 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %cmp622 = icmp eq %struct.rtx_def* %size.0, %134
  br i1 %cmp622, label %if.end626, label %if.then624

if.then624:                                       ; preds = %if.end621
  %call625 = tail call %struct.rtx_def* @clear_storage(%struct.rtx_def* %target.addr.0, %struct.rtx_def* %size.0)
  br label %if.end626

if.end626:                                        ; preds = %if.end621, %if.then624
  %tobool627 = icmp eq %struct.rtx_def* %label.0, null
  br i1 %tobool627, label %if.end657, label %if.then628

if.then628:                                       ; preds = %if.end626
  %call629 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %label.0) #5
  br label %if.end657

if.else632:                                       ; preds = %land.lhs.true563, %if.else557
  %bf.clear634 = and i32 %bf.load529, 65535
  %cmp635 = icmp eq i32 %bf.clear634, 39
  br i1 %cmp635, label %if.then637, label %if.else642

if.then637:                                       ; preds = %if.else632
  %type639 = getelementptr inbounds %union.tree_node* %exp.tr, i64 0, i32 0, i32 0, i32 1
  %135 = load %union.tree_node** %type639, align 8, !tbaa !36
  %call640 = tail call i64 @int_size_in_bytes(%union.tree_node* %135) #5
  %conv641 = trunc i64 %call640 to i32
  tail call void @emit_group_load(%struct.rtx_def* %call525, %struct.rtx_def* %temp.6, i32 %conv641)
  br label %if.end657

if.else642:                                       ; preds = %if.else632
  br i1 %cmp561, label %if.then648, label %if.else651

if.then648:                                       ; preds = %if.else642
  %call649 = tail call %struct.rtx_def* @expr_size(%union.tree_node* %exp.tr) #5
  %call650 = tail call %struct.rtx_def* @emit_block_move(%struct.rtx_def* %call525, %struct.rtx_def* %temp.6, %struct.rtx_def* %call649)
  br label %if.end657

if.else651:                                       ; preds = %if.else642
  %call652 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call525, %struct.rtx_def* %temp.6)
  br label %if.end657

if.end657:                                        ; preds = %lor.lhs.false485, %lor.lhs.false480, %if.end626, %lor.lhs.false504, %if.else555, %if.then549, %if.then637, %if.else651, %if.then648, %if.then582, %if.then628, %land.lhs.true488
  %temp.7 = phi %struct.rtx_def* [ %temp.6, %land.lhs.true488 ], [ %call.i902, %if.then549 ], [ %temp.6, %if.else555 ], [ %temp.6, %if.then582 ], [ %temp.6, %if.then628 ], [ %temp.6, %if.end626 ], [ %temp.6, %if.then637 ], [ %temp.6, %if.then648 ], [ %temp.6, %if.else651 ], [ %temp.6, %lor.lhs.false504 ], [ %temp.6, %lor.lhs.false485 ], [ %target, %lor.lhs.false480 ]
  %target.addr.1 = phi %struct.rtx_def* [ %target, %land.lhs.true488 ], [ %call525, %if.then549 ], [ %call525, %if.else555 ], [ %call525, %if.then582 ], [ %target.addr.0, %if.then628 ], [ %target.addr.0, %if.end626 ], [ %call525, %if.then637 ], [ %call525, %if.then648 ], [ %call525, %if.else651 ], [ %target, %lor.lhs.false504 ], [ %target, %lor.lhs.false485 ], [ %target, %lor.lhs.false480 ]
  %tobool658 = icmp eq i32 %want_value, 0
  br i1 %tobool658, label %return, label %if.else660

if.else660:                                       ; preds = %if.end657
  %tobool661 = icmp eq i32 %dont_return_target.0, 0
  br i1 %tobool661, label %land.lhs.true670, label %land.lhs.true662

land.lhs.true662:                                 ; preds = %if.else660
  %136 = getelementptr inbounds %struct.rtx_def* %temp.7, i64 0, i32 0
  %bf.load663 = load i32* %136, align 8
  %bf.clear664 = and i32 %bf.load663, 65535
  %cmp665.not = icmp ne i32 %bf.clear664, 66
  %temp.7.mux = select i1 %cmp665.not, %struct.rtx_def* %temp.7, %struct.rtx_def* %target.addr.1
  br i1 %cmp665.not, label %return, label %land.lhs.true670

land.lhs.true670:                                 ; preds = %if.else660, %land.lhs.true662
  %137 = getelementptr inbounds %struct.rtx_def* %target.addr.1, i64 0, i32 0
  %bf.load671 = load i32* %137, align 8
  %bf.clear673 = and i32 %bf.load671, 16711680
  %cmp674 = icmp eq i32 %bf.clear673, 3342336
  br i1 %cmp674, label %return, label %land.lhs.true676

land.lhs.true676:                                 ; preds = %land.lhs.true670
  %bf.clear678 = and i32 %bf.load671, 65535
  %cmp679 = icmp eq i32 %bf.clear678, 61
  br i1 %cmp679, label %land.lhs.true681, label %if.then687

land.lhs.true681:                                 ; preds = %land.lhs.true676
  %arrayidx683 = getelementptr inbounds %struct.rtx_def* %target.addr.1, i64 0, i32 1, i64 0
  %rtuint684 = bitcast %union.rtunion_def* %arrayidx683 to i32*
  %138 = load i32* %rtuint684, align 4, !tbaa !21
  %cmp685 = icmp ult i32 %138, 53
  br i1 %cmp685, label %return, label %if.then687

if.then687:                                       ; preds = %land.lhs.true681, %land.lhs.true676
  %call688 = tail call %struct.rtx_def* @copy_to_reg(%struct.rtx_def* %target.addr.1) #5
  br label %return

return:                                           ; preds = %if.end657, %land.lhs.true662, %land.lhs.true681, %land.lhs.true670, %if.then687, %if.end331, %emit_queue.exit930
  %retval.0 = phi %struct.rtx_def* [ %cond, %emit_queue.exit930 ], [ %call688, %if.then687 ], [ %cond336, %if.end331 ], [ null, %if.end657 ], [ %temp.7.mux, %land.lhs.true662 ], [ %target.addr.1, %land.lhs.true670 ], [ %target.addr.1, %land.lhs.true681 ]
  ret %struct.rtx_def* %retval.0
}

declare %struct.rtx_def* @gen_label_rtx() #1

; Function Attrs: nounwind uwtable
define void @do_pending_stack_adjust() #0 {
entry:
  %0 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr = getelementptr inbounds %struct.function* %0, i64 0, i32 2
  %1 = load %struct.expr_status** %expr, align 8, !tbaa !6
  %x_inhibit_defer_pop = getelementptr inbounds %struct.expr_status* %1, i64 0, i32 1
  %2 = load i32* %x_inhibit_defer_pop, align 4, !tbaa !15
  %cmp = icmp eq i32 %2, 0
  br i1 %cmp, label %if.then, label %if.end8

if.then:                                          ; preds = %entry
  %x_pending_stack_adjust = getelementptr inbounds %struct.expr_status* %1, i64 0, i32 0
  %3 = load i32* %x_pending_stack_adjust, align 4, !tbaa !13
  %cmp2 = icmp eq i32 %3, 0
  br i1 %cmp2, label %if.end, label %if.then3

if.then3:                                         ; preds = %if.then
  %conv = sext i32 %3 to i64
  %call = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv) #5
  tail call void @adjust_stack(%struct.rtx_def* %call) #5
  %.pre = load %struct.function** @cfun, align 8, !tbaa !1
  %expr6.phi.trans.insert = getelementptr inbounds %struct.function* %.pre, i64 0, i32 2
  %.pre9 = load %struct.expr_status** %expr6.phi.trans.insert, align 8, !tbaa !6
  br label %if.end

if.end:                                           ; preds = %if.then, %if.then3
  %4 = phi %struct.expr_status* [ %1, %if.then ], [ %.pre9, %if.then3 ]
  %x_pending_stack_adjust7 = getelementptr inbounds %struct.expr_status* %4, i64 0, i32 0
  store i32 0, i32* %x_pending_stack_adjust7, align 4, !tbaa !13
  br label %if.end8

if.end8:                                          ; preds = %if.end, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define void @jumpifnot(%union.tree_node* %exp, %struct.rtx_def* %label) #0 {
entry:
  tail call void @do_jump(%union.tree_node* %exp, %struct.rtx_def* %label, %struct.rtx_def* null)
  ret void
}

declare void @start_cleanup_deferral() #1

declare void @end_cleanup_deferral() #1

declare %struct.rtx_def* @emit_jump_insn(%struct.rtx_def*) #1

declare %struct.rtx_def* @gen_jump(%struct.rtx_def*) #1

declare %struct.rtx_def* @emit_barrier() #1

declare %struct.rtx_def* @emit_label(%struct.rtx_def*) #1

declare i32 @side_effects_p(%struct.rtx_def*) #1

declare %union.tree_node* @convert(%union.tree_node*, %union.tree_node*) #1

declare %union.tree_node* @signed_or_unsigned_type(i32, %union.tree_node*) #1

declare %union.tree_node* @type_for_mode(i32, i32) #1

declare %struct.rtx_def* @gen_lowpart_SUBREG(i32, %struct.rtx_def*) #1

declare %union.tree_node* @size_binop(i32, %union.tree_node*, %union.tree_node*) #1

; Function Attrs: nounwind uwtable
define internal fastcc i64 @highest_pow2_factor(%union.tree_node* nocapture readonly %exp) #0 {
entry:
  br label %tailrecurse

tailrecurse:                                      ; preds = %tailrecurse.backedge, %entry
  %exp.tr = phi %union.tree_node* [ %exp, %entry ], [ %exp.tr.be, %tailrecurse.backedge ]
  %code = getelementptr inbounds %union.tree_node* %exp.tr, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  switch i32 %bf.clear, label %return [
    i32 25, label %sw.bb
    i32 59, label %sw.bb6
    i32 60, label %sw.bb6
    i32 78, label %sw.bb6
    i32 79, label %sw.bb6
    i32 61, label %sw.bb16
    i32 65, label %sw.bb25
    i32 62, label %sw.bb25
    i32 64, label %sw.bb25
    i32 63, label %sw.bb25
    i32 116, label %sw.bb51
    i32 115, label %sw.bb51
    i32 114, label %sw.bb51
    i32 118, label %sw.bb51
    i32 58, label %sw.bb51
    i32 47, label %sw.bb56
    i32 51, label %sw.bb61
  ]

sw.bb:                                            ; preds = %tailrecurse
  %bf.clear3 = and i32 %bf.load, 262144
  %tobool = icmp eq i32 %bf.clear3, 0
  br i1 %tobool, label %if.else, label %return

if.else:                                          ; preds = %sw.bb
  %int_cst4 = getelementptr inbounds %union.tree_node* %exp.tr, i64 0, i32 0, i32 2
  %low = bitcast i32* %int_cst4 to i64*
  %0 = load i64* %low, align 8, !tbaa !42
  %sub = sub nsw i64 0, %0
  %and = and i64 %0, %sub
  %tobool5 = icmp ne i64 %and, 0
  %cond = select i1 %tobool5, i64 %and, i64 128
  br label %return

sw.bb6:                                           ; preds = %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse
  %operands = getelementptr inbounds %union.tree_node* %exp.tr, i64 0, i32 0, i32 2
  %arrayidx = bitcast i32* %operands to %union.tree_node**
  %1 = load %union.tree_node** %arrayidx, align 8, !tbaa !1
  %call = tail call fastcc i64 @highest_pow2_factor(%union.tree_node* %1)
  %arrayidx10 = getelementptr inbounds i32* %operands, i64 2
  %2 = bitcast i32* %arrayidx10 to %union.tree_node**
  %3 = load %union.tree_node** %2, align 8, !tbaa !1
  %call11 = tail call fastcc i64 @highest_pow2_factor(%union.tree_node* %3)
  %cmp = icmp slt i64 %call, %call11
  %cond15 = select i1 %cmp, i64 %call, i64 %call11
  ret i64 %cond15

sw.bb16:                                          ; preds = %tailrecurse
  %operands18 = getelementptr inbounds %union.tree_node* %exp.tr, i64 0, i32 0, i32 2
  %arrayidx19 = bitcast i32* %operands18 to %union.tree_node**
  %4 = load %union.tree_node** %arrayidx19, align 8, !tbaa !1
  %call20 = tail call fastcc i64 @highest_pow2_factor(%union.tree_node* %4)
  %arrayidx23 = getelementptr inbounds i32* %operands18, i64 2
  %5 = bitcast i32* %arrayidx23 to %union.tree_node**
  %6 = load %union.tree_node** %5, align 8, !tbaa !1
  %call24 = tail call fastcc i64 @highest_pow2_factor(%union.tree_node* %6)
  %mul = mul nsw i64 %call24, %call20
  ret i64 %mul

sw.bb25:                                          ; preds = %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse
  %operands27 = getelementptr inbounds %union.tree_node* %exp.tr, i64 0, i32 0, i32 2
  %arrayidx28 = getelementptr inbounds i32* %operands27, i64 2
  %7 = bitcast i32* %arrayidx28 to %union.tree_node**
  %8 = load %union.tree_node** %7, align 8, !tbaa !1
  %call29 = tail call i32 @integer_pow2p(%union.tree_node* %8) #5
  %tobool30 = icmp eq i32 %call29, 0
  br i1 %tobool30, label %return, label %land.lhs.true

land.lhs.true:                                    ; preds = %sw.bb25
  %9 = load %union.tree_node** %7, align 8, !tbaa !1
  %call34 = tail call i32 @host_integerp(%union.tree_node* %9, i32 1) #5
  %tobool35 = icmp eq i32 %call34, 0
  br i1 %tobool35, label %return, label %if.then36

if.then36:                                        ; preds = %land.lhs.true
  %arrayidx39 = bitcast i32* %operands27 to %union.tree_node**
  %10 = load %union.tree_node** %arrayidx39, align 8, !tbaa !1
  %call40 = tail call fastcc i64 @highest_pow2_factor(%union.tree_node* %10)
  %11 = load %union.tree_node** %7, align 8, !tbaa !1
  %call44 = tail call i64 @tree_low_cst(%union.tree_node* %11, i32 1) #5
  %div = sdiv i64 %call40, %call44
  %cmp45 = icmp slt i64 %div, 1
  %.div = select i1 %cmp45, i64 1, i64 %div
  ret i64 %.div

sw.bb51:                                          ; preds = %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse
  %operands53 = getelementptr inbounds %union.tree_node* %exp.tr, i64 0, i32 0, i32 2
  br label %tailrecurse.backedge

tailrecurse.backedge:                             ; preds = %sw.bb51, %sw.bb56
  %exp.tr.be.in.in = phi i32* [ %operands53, %sw.bb51 ], [ %arrayidx59, %sw.bb56 ]
  %exp.tr.be.in = bitcast i32* %exp.tr.be.in.in to %union.tree_node**
  %exp.tr.be = load %union.tree_node** %exp.tr.be.in, align 8
  br label %tailrecurse

sw.bb56:                                          ; preds = %tailrecurse
  %operands58 = getelementptr inbounds %union.tree_node* %exp.tr, i64 0, i32 0, i32 2
  %arrayidx59 = getelementptr inbounds i32* %operands58, i64 2
  br label %tailrecurse.backedge

sw.bb61:                                          ; preds = %tailrecurse
  %operands63 = getelementptr inbounds %union.tree_node* %exp.tr, i64 0, i32 0, i32 2
  %arrayidx64 = getelementptr inbounds i32* %operands63, i64 2
  %12 = bitcast i32* %arrayidx64 to %union.tree_node**
  %13 = load %union.tree_node** %12, align 8, !tbaa !1
  %call65 = tail call fastcc i64 @highest_pow2_factor(%union.tree_node* %13)
  %arrayidx68 = getelementptr inbounds i32* %operands63, i64 4
  %14 = bitcast i32* %arrayidx68 to %union.tree_node**
  %15 = load %union.tree_node** %14, align 8, !tbaa !1
  %call69 = tail call fastcc i64 @highest_pow2_factor(%union.tree_node* %15)
  %cmp70 = icmp slt i64 %call65, %call69
  %cond74 = select i1 %cmp70, i64 %call65, i64 %call69
  ret i64 %cond74

return:                                           ; preds = %tailrecurse, %sw.bb25, %land.lhs.true, %sw.bb, %if.else
  %retval.0 = phi i64 [ %cond, %if.else ], [ 128, %sw.bb ], [ 1, %land.lhs.true ], [ 1, %sw.bb25 ], [ 1, %tailrecurse ]
  ret i64 %retval.0
}

declare void @emit_cmp_and_jump_insns(%struct.rtx_def*, %struct.rtx_def*, i32, %struct.rtx_def*, i32, i32, %struct.rtx_def*) #1

declare i32 @host_integerp(%union.tree_node*, i32) #1

declare i64 @tree_low_cst(%union.tree_node*, i32) #1

declare i32 @contains_placeholder_p(%union.tree_node*) #1

declare i32 @integer_zerop(%union.tree_node*) #1

declare %union.tree_node* @fold(%union.tree_node*) #1

; Function Attrs: nounwind uwtable
define %union.tree_node* @find_placeholder(%union.tree_node* nocapture readonly %exp, %union.tree_node** %plist) #0 {
entry:
  %type1 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 1
  %0 = load %union.tree_node** %type1, align 8, !tbaa !36
  %tobool = icmp ne %union.tree_node** %plist, null
  br i1 %tobool, label %land.lhs.true, label %for.cond.preheader

land.lhs.true:                                    ; preds = %entry
  %1 = load %union.tree_node** %plist, align 8, !tbaa !1
  %tobool2 = icmp eq %union.tree_node* %1, null
  %chain = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0
  %placeholder_list.chain = select i1 %tobool2, %union.tree_node** @placeholder_list, %union.tree_node** %chain
  br label %for.cond.preheader

for.cond.preheader:                               ; preds = %entry, %land.lhs.true
  %placeholder_expr.0.in.ph = phi %union.tree_node** [ %placeholder_list.chain, %land.lhs.true ], [ @placeholder_list, %entry ]
  %placeholder_expr.0229 = load %union.tree_node** %placeholder_expr.0.in.ph, align 8
  %cmp230 = icmp eq %union.tree_node* %placeholder_expr.0229, null
  br i1 %cmp230, label %return, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %2 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 15
  %3 = load %union.tree_node** %2, align 8, !tbaa !80
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc177
  %placeholder_expr.0231 = phi %union.tree_node* [ %placeholder_expr.0229, %for.body.lr.ph ], [ %placeholder_expr.0, %for.inc177 ]
  %purpose = getelementptr inbounds %union.tree_node* %placeholder_expr.0231, i64 0, i32 0, i32 1
  %4 = load i8** %purpose, align 8
  %cmp6224 = icmp eq i8* %4, null
  br i1 %cmp6224, label %for.inc177, label %for.body7.lr.ph

for.body7.lr.ph:                                  ; preds = %for.body
  %5 = bitcast i8* %4 to %union.tree_node*
  br label %for.body7

for.body7:                                        ; preds = %for.body7.lr.ph, %for.cond5.backedge
  %elt.0225 = phi %union.tree_node* [ %5, %for.body7.lr.ph ], [ %elt.0.be, %for.cond5.backedge ]
  %type9 = getelementptr inbounds %union.tree_node* %elt.0225, i64 0, i32 0, i32 0, i32 1
  %6 = load %union.tree_node** %type9, align 8, !tbaa !36
  %7 = getelementptr inbounds %union.tree_node* %6, i64 0, i32 0, i32 15
  %8 = load %union.tree_node** %7, align 8, !tbaa !80
  %cmp12 = icmp eq %union.tree_node* %8, %3
  br i1 %cmp12, label %if.then, label %for.inc

if.then:                                          ; preds = %for.body7
  br i1 %tobool, label %if.then14, label %return

if.then14:                                        ; preds = %if.then
  store %union.tree_node* %placeholder_expr.0231, %union.tree_node** %plist, align 8, !tbaa !1
  br label %return

for.inc:                                          ; preds = %for.body7
  %code = getelementptr inbounds %union.tree_node* %elt.0225, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  switch i32 %bf.clear, label %cond.false25 [
    i32 47, label %cond.true23
    i32 51, label %cond.true23
  ]

cond.true23:                                      ; preds = %for.inc, %for.inc
  %operands = getelementptr inbounds %union.tree_node* %elt.0225, i64 0, i32 0, i32 2
  %arrayidx = getelementptr inbounds i32* %operands, i64 2
  br label %for.cond5.backedge

cond.false25:                                     ; preds = %for.inc
  %idxprom218 = zext i32 %bf.clear to i64
  %arrayidx30 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom218
  %9 = load i8* %arrayidx30, align 1, !tbaa !5
  switch i8 %9, label %for.end [
    i8 114, label %cond.true63
    i8 49, label %cond.true63
    i8 50, label %cond.true63
    i8 101, label %cond.true63
  ]

for.cond5.backedge:                               ; preds = %cond.true63, %cond.true23
  %elt.0.be.in.in = phi i32* [ %arrayidx, %cond.true23 ], [ %operands65, %cond.true63 ]
  %elt.0.be.in = bitcast i32* %elt.0.be.in.in to %union.tree_node**
  %elt.0.be = load %union.tree_node** %elt.0.be.in, align 8
  %cmp6 = icmp eq %union.tree_node* %elt.0.be, null
  br i1 %cmp6, label %for.end, label %for.body7

cond.true63:                                      ; preds = %cond.false25, %cond.false25, %cond.false25, %cond.false25
  %operands65 = getelementptr inbounds %union.tree_node* %elt.0225, i64 0, i32 0, i32 2
  br label %for.cond5.backedge

for.end:                                          ; preds = %cond.false25, %for.cond5.backedge
  br i1 %cmp6224, label %for.inc177, label %for.body77.lr.ph

for.body77.lr.ph:                                 ; preds = %for.end
  %10 = bitcast i8* %4 to %union.tree_node*
  br label %for.body77

for.body77:                                       ; preds = %for.body77.lr.ph, %for.cond74.backedge
  %elt.1227 = phi %union.tree_node* [ %10, %for.body77.lr.ph ], [ %elt.1.be, %for.cond74.backedge ]
  %type79 = getelementptr inbounds %union.tree_node* %elt.1227, i64 0, i32 0, i32 0, i32 1
  %11 = load %union.tree_node** %type79, align 8, !tbaa !36
  %code81 = getelementptr inbounds %union.tree_node* %11, i64 0, i32 0, i32 0, i32 2
  %bf.load82 = load i32* %code81, align 8
  %bf.clear83 = and i32 %bf.load82, 255
  switch i32 %bf.clear83, label %for.inc109 [
    i32 13, label %land.lhs.true95
    i32 15, label %land.lhs.true95
  ]

land.lhs.true95:                                  ; preds = %for.body77, %for.body77
  %type99 = getelementptr inbounds %union.tree_node* %11, i64 0, i32 0, i32 0, i32 1
  %12 = load %union.tree_node** %type99, align 8, !tbaa !36
  %13 = getelementptr inbounds %union.tree_node* %12, i64 0, i32 0, i32 15
  %14 = load %union.tree_node** %13, align 8, !tbaa !80
  %cmp102 = icmp eq %union.tree_node* %14, %3
  br i1 %cmp102, label %if.then104, label %for.inc109

if.then104:                                       ; preds = %land.lhs.true95
  br i1 %tobool, label %if.then106, label %if.end107

if.then106:                                       ; preds = %if.then104
  store %union.tree_node* %placeholder_expr.0231, %union.tree_node** %plist, align 8, !tbaa !1
  br label %if.end107

if.end107:                                        ; preds = %if.then106, %if.then104
  %call = tail call %union.tree_node* @build1(i32 41, %union.tree_node* %3, %union.tree_node* %elt.1227) #5
  br label %return

for.inc109:                                       ; preds = %for.body77, %land.lhs.true95
  %code111 = getelementptr inbounds %union.tree_node* %elt.1227, i64 0, i32 0, i32 0, i32 2
  %bf.load112 = load i32* %code111, align 8
  %bf.clear113 = and i32 %bf.load112, 255
  switch i32 %bf.clear113, label %cond.false127 [
    i32 47, label %cond.true123
    i32 51, label %cond.true123
  ]

cond.true123:                                     ; preds = %for.inc109, %for.inc109
  %operands125 = getelementptr inbounds %union.tree_node* %elt.1227, i64 0, i32 0, i32 2
  %arrayidx126 = getelementptr inbounds i32* %operands125, i64 2
  br label %for.cond74.backedge

cond.false127:                                    ; preds = %for.inc109
  %idxprom132217 = zext i32 %bf.clear113 to i64
  %arrayidx133 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom132217
  %15 = load i8* %arrayidx133, align 1, !tbaa !5
  switch i8 %15, label %for.inc177 [
    i8 114, label %cond.true167
    i8 49, label %cond.true167
    i8 50, label %cond.true167
    i8 101, label %cond.true167
  ]

for.cond74.backedge:                              ; preds = %cond.true167, %cond.true123
  %elt.1.be.in.in = phi i32* [ %arrayidx126, %cond.true123 ], [ %operands169, %cond.true167 ]
  %elt.1.be.in = bitcast i32* %elt.1.be.in.in to %union.tree_node**
  %elt.1.be = load %union.tree_node** %elt.1.be.in, align 8
  %cmp75 = icmp eq %union.tree_node* %elt.1.be, null
  br i1 %cmp75, label %for.inc177, label %for.body77

cond.true167:                                     ; preds = %cond.false127, %cond.false127, %cond.false127, %cond.false127
  %operands169 = getelementptr inbounds %union.tree_node* %elt.1227, i64 0, i32 0, i32 2
  br label %for.cond74.backedge

for.inc177:                                       ; preds = %cond.false127, %for.cond74.backedge, %for.body, %for.end
  %chain179 = getelementptr inbounds %union.tree_node* %placeholder_expr.0231, i64 0, i32 0, i32 0, i32 0
  %placeholder_expr.0 = load %union.tree_node** %chain179, align 8
  %cmp = icmp eq %union.tree_node* %placeholder_expr.0, null
  br i1 %cmp, label %return, label %for.body

return:                                           ; preds = %for.inc177, %for.cond.preheader, %if.then, %if.then14, %if.end107
  %retval.0 = phi %union.tree_node* [ %call, %if.end107 ], [ %elt.0225, %if.then14 ], [ %elt.0225, %if.then ], [ null, %for.cond.preheader ], [ null, %for.inc177 ]
  ret %union.tree_node* %retval.0
}

; Function Attrs: nounwind readonly uwtable
define i32 @handled_component_p(%union.tree_node* nocapture readonly %t) #4 {
entry:
  %code = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  switch i32 %bf.clear, label %sw.default [
    i32 40, label %return
    i32 39, label %return
    i32 43, label %return
    i32 44, label %return
    i32 116, label %return
    i32 117, label %return
    i32 115, label %sw.bb1
    i32 114, label %sw.bb1
  ]

sw.bb1:                                           ; preds = %entry, %entry
  %type = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 0, i32 1
  %0 = load %union.tree_node** %type, align 8, !tbaa !36
  %type3 = bitcast %union.tree_node* %0 to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type* %type3, i64 0, i32 6
  %bf.load4 = load i32* %mode, align 4
  %operands = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 2
  %arrayidx = bitcast i32* %operands to %union.tree_node**
  %1 = load %union.tree_node** %arrayidx, align 8, !tbaa !1
  %type7 = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 0, i32 1
  %2 = load %union.tree_node** %type7, align 8, !tbaa !36
  %type8 = bitcast %union.tree_node* %2 to %struct.tree_type*
  %mode9 = getelementptr inbounds %struct.tree_type* %type8, i64 0, i32 6
  %bf.load10 = load i32* %mode9, align 4
  %bf.lshr15 = xor i32 %bf.load10, %bf.load4
  %3 = and i32 %bf.lshr15, 65024
  %cmp = icmp eq i32 %3, 0
  %conv = zext i1 %cmp to i32
  br label %return

sw.default:                                       ; preds = %entry
  br label %return

return:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %sw.default, %sw.bb1
  %retval.0 = phi i32 [ 0, %sw.default ], [ %conv, %sw.bb1 ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @force_operand(%struct.rtx_def* %value, %struct.rtx_def* %target) #0 {
entry:
  %cmp.i = icmp eq %struct.rtx_def* %target, null
  br i1 %cmp.i, label %get_subtarget.exit, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %entry
  %0 = getelementptr inbounds %struct.rtx_def* %target, i64 0, i32 0
  %bf.load.i = load i32* %0, align 8
  %1 = and i32 %bf.load.i, 67174399
  %2 = icmp eq i32 %1, 61
  br i1 %2, label %lor.lhs.false5.i, label %get_subtarget.exit

lor.lhs.false5.i:                                 ; preds = %lor.lhs.false.i
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %target, i64 0, i32 1, i64 0
  %rtuint.i = bitcast %union.rtunion_def* %arrayidx.i to i32*
  %3 = load i32* %rtuint.i, align 4, !tbaa !21
  %cmp6.i = icmp ult i32 %3, 53
  br i1 %cmp6.i, label %get_subtarget.exit, label %lor.lhs.false7.i

lor.lhs.false7.i:                                 ; preds = %lor.lhs.false5.i
  %call.i = tail call i32 @preserve_subexpressions_p() #5
  %tobool8.i = icmp ne i32 %call.i, 0
  %..i = select i1 %tobool8.i, %struct.rtx_def* null, %struct.rtx_def* %target
  br label %get_subtarget.exit

get_subtarget.exit:                               ; preds = %entry, %lor.lhs.false.i, %lor.lhs.false5.i, %lor.lhs.false7.i
  %call362 = phi %struct.rtx_def* [ %..i, %lor.lhs.false7.i ], [ null, %lor.lhs.false5.i ], [ null, %lor.lhs.false.i ], [ null, %entry ]
  %4 = getelementptr inbounds %struct.rtx_def* %value, i64 0, i32 0
  %bf.load = load i32* %4, align 8
  %bf.clear = and i32 %bf.load, 65535
  %bf.clear.off = add i32 %bf.clear, -75
  %switch = icmp ult i32 %bf.clear.off, 2
  br i1 %switch, label %land.lhs.true, label %if.end33

land.lhs.true:                                    ; preds = %get_subtarget.exit
  %fld = getelementptr inbounds %struct.rtx_def* %value, i64 0, i32 1
  %rtx = bitcast [1 x %union.rtunion_def]* %fld to %struct.rtx_def**
  %5 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %6 = load %struct.rtx_def** @pic_offset_table_rtx, align 8, !tbaa !1
  %cmp6 = icmp eq %struct.rtx_def* %5, %6
  br i1 %cmp6, label %land.lhs.true7, label %if.end33

land.lhs.true7:                                   ; preds = %land.lhs.true
  %arrayidx9 = getelementptr inbounds %struct.rtx_def* %value, i64 0, i32 1, i64 1
  %rtx10 = bitcast %union.rtunion_def* %arrayidx9 to %struct.rtx_def**
  %7 = load %struct.rtx_def** %rtx10, align 8, !tbaa !1
  %8 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 0
  %bf.load11 = load i32* %8, align 8
  %bf.clear12 = and i32 %bf.load11, 65535
  switch i32 %bf.clear12, label %if.end33 [
    i32 68, label %if.then
    i32 67, label %if.then
    i32 58, label %if.then
  ]

if.then:                                          ; preds = %land.lhs.true7, %land.lhs.true7, %land.lhs.true7
  %tobool = icmp eq %struct.rtx_def* %call362, null
  br i1 %tobool, label %if.then28, label %if.end

if.then28:                                        ; preds = %if.then
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear30 = and i32 %bf.lshr, 255
  %call31 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear30) #5
  br label %if.end

if.end:                                           ; preds = %if.then, %if.then28
  %subtarget.0 = phi %struct.rtx_def* [ %call362, %if.then ], [ %call31, %if.then28 ]
  %call32 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %subtarget.0, %struct.rtx_def* %value)
  br label %return

if.end33:                                         ; preds = %get_subtarget.exit, %land.lhs.true7, %land.lhs.true
  switch i32 %bf.clear, label %return [
    i32 75, label %if.end100
    i32 76, label %if.then41
    i32 78, label %if.then46
    i32 63, label %land.lhs.true236
  ]

if.then41:                                        ; preds = %if.end33
  br label %if.end100

if.then46:                                        ; preds = %if.end33
  %arrayidx48 = getelementptr inbounds %struct.rtx_def* %value, i64 0, i32 1, i64 1
  %rtx49 = bitcast %union.rtunion_def* %arrayidx48 to %struct.rtx_def**
  %9 = load %struct.rtx_def** %rtx49, align 8, !tbaa !1
  %10 = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 0
  %bf.load50 = load i32* %10, align 8
  %bf.clear51 = and i32 %bf.load50, 65535
  switch i32 %bf.clear51, label %if.then87 [
    i32 67, label %if.end88
    i32 68, label %if.end88
    i32 54, label %if.end88
    i32 55, label %if.end88
    i32 58, label %if.end88
    i32 134, label %if.end88
    i32 56, label %if.end88
    i32 140, label %if.end88
    i32 61, label %land.lhs.true85
  ]

land.lhs.true85:                                  ; preds = %if.then46
  %cmp86 = icmp eq %struct.rtx_def* %9, %call362
  br i1 %cmp86, label %if.then87, label %if.end88

if.then87:                                        ; preds = %if.then46, %land.lhs.true85
  br label %if.end88

if.end88:                                         ; preds = %if.then46, %if.then46, %if.then46, %if.then46, %if.then46, %if.then46, %if.then46, %if.then46, %land.lhs.true85, %if.then87
  %subtarget.1 = phi %struct.rtx_def* [ %call362, %if.then46 ], [ %call362, %land.lhs.true85 ], [ null, %if.then87 ], [ %call362, %if.then46 ], [ %call362, %if.then46 ], [ %call362, %if.then46 ], [ %call362, %if.then46 ], [ %call362, %if.then46 ], [ %call362, %if.then46 ], [ %call362, %if.then46 ]
  %arrayidx90 = getelementptr inbounds %struct.rtx_def* %value, i64 0, i32 1, i64 0
  %rtx91 = bitcast %union.rtunion_def* %arrayidx90 to %struct.rtx_def**
  %11 = load %struct.rtx_def** %rtx91, align 8, !tbaa !1
  %call92 = tail call %struct.rtx_def* @force_operand(%struct.rtx_def* %11, %struct.rtx_def* %subtarget.1)
  %bf.load93 = load i32* %4, align 8
  %bf.lshr94 = lshr i32 %bf.load93, 16
  %bf.clear95 = and i32 %bf.lshr94, 255
  %call96 = tail call %struct.rtx_def* @force_operand(%struct.rtx_def* %9, %struct.rtx_def* null)
  %call97 = tail call %struct.rtx_def* @expand_mult(i32 %bf.clear95, %struct.rtx_def* %call92, %struct.rtx_def* %call96, %struct.rtx_def* %target, i32 1) #5
  ret %struct.rtx_def* %call97

if.end100:                                        ; preds = %if.end33, %if.then41
  %binoptab.0.in = phi %struct.optab** [ getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 2), %if.then41 ], [ getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 0), %if.end33 ]
  %binoptab.0 = load %struct.optab** %binoptab.0.in, align 8
  %tobool101 = icmp eq %struct.optab* %binoptab.0, null
  br i1 %tobool101, label %if.end232, label %if.then102

if.then102:                                       ; preds = %if.end100
  %fld103 = getelementptr inbounds %struct.rtx_def* %value, i64 0, i32 1
  %arrayidx104 = getelementptr inbounds %struct.rtx_def* %value, i64 0, i32 1, i64 1
  %rtx105 = bitcast %union.rtunion_def* %arrayidx104 to %struct.rtx_def**
  %12 = load %struct.rtx_def** %rtx105, align 8, !tbaa !1
  %13 = getelementptr inbounds %struct.rtx_def* %12, i64 0, i32 0
  %bf.load106 = load i32* %13, align 8
  %bf.clear107 = and i32 %bf.load106, 65535
  switch i32 %bf.clear107, label %if.then143 [
    i32 67, label %if.end144
    i32 68, label %if.end144
    i32 54, label %if.end144
    i32 55, label %if.end144
    i32 58, label %if.end144
    i32 134, label %if.end144
    i32 56, label %if.end144
    i32 140, label %if.end144
    i32 61, label %land.lhs.true141
  ]

land.lhs.true141:                                 ; preds = %if.then102
  %cmp142 = icmp eq %struct.rtx_def* %12, %call362
  br i1 %cmp142, label %if.then143, label %if.end144

if.then143:                                       ; preds = %if.then102, %land.lhs.true141
  br label %if.end144

if.end144:                                        ; preds = %if.then102, %if.then102, %if.then102, %if.then102, %if.then102, %if.then102, %if.then102, %if.then102, %land.lhs.true141, %if.then143
  %subtarget.2 = phi %struct.rtx_def* [ %call362, %if.then102 ], [ %call362, %land.lhs.true141 ], [ null, %if.then143 ], [ %call362, %if.then102 ], [ %call362, %if.then102 ], [ %call362, %if.then102 ], [ %call362, %if.then102 ], [ %call362, %if.then102 ], [ %call362, %if.then102 ], [ %call362, %if.then102 ]
  %14 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 2), align 8, !tbaa !1
  %cmp145 = icmp eq %struct.optab* %binoptab.0, %14
  %cmp149 = icmp eq i32 %bf.clear107, 54
  %or.cond = and i1 %cmp145, %cmp149
  br i1 %or.cond, label %if.then150, label %if.end155

if.then150:                                       ; preds = %if.end144
  %15 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 0), align 8, !tbaa !1
  %bf.lshr152 = lshr i32 %bf.load, 16
  %bf.clear153 = and i32 %bf.lshr152, 255
  %call154 = tail call %struct.rtx_def* @negate_rtx(i32 %bf.clear153, %struct.rtx_def* %12) #5
  br label %if.end155

if.end155:                                        ; preds = %if.then150, %if.end144
  %binoptab.1 = phi %struct.optab* [ %15, %if.then150 ], [ %binoptab.0, %if.end144 ]
  %op2.0 = phi %struct.rtx_def* [ %call154, %if.then150 ], [ %12, %if.end144 ]
  %16 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 0), align 8, !tbaa !1
  %cmp156 = icmp eq %struct.optab* %binoptab.1, %16
  br i1 %cmp156, label %land.lhs.true157, label %if.end222

land.lhs.true157:                                 ; preds = %if.end155
  %17 = getelementptr inbounds %struct.rtx_def* %op2.0, i64 0, i32 0
  %bf.load158 = load i32* %17, align 8
  %bf.clear159 = and i32 %bf.load158, 65535
  %cmp160 = icmp eq i32 %bf.clear159, 54
  br i1 %cmp160, label %land.lhs.true161, label %if.end222

land.lhs.true161:                                 ; preds = %land.lhs.true157
  %rtx164 = bitcast [1 x %union.rtunion_def]* %fld103 to %struct.rtx_def**
  %18 = load %struct.rtx_def** %rtx164, align 8, !tbaa !1
  %19 = getelementptr inbounds %struct.rtx_def* %18, i64 0, i32 0
  %bf.load165 = load i32* %19, align 8
  %bf.clear166 = and i32 %bf.load165, 65535
  %cmp167 = icmp eq i32 %bf.clear166, 75
  br i1 %cmp167, label %land.lhs.true168, label %if.end222

land.lhs.true168:                                 ; preds = %land.lhs.true161
  %arrayidx173 = getelementptr inbounds %struct.rtx_def* %18, i64 0, i32 1, i64 0
  %rtx174 = bitcast %union.rtunion_def* %arrayidx173 to %struct.rtx_def**
  %20 = load %struct.rtx_def** %rtx174, align 8, !tbaa !1
  %21 = getelementptr inbounds %struct.rtx_def* %20, i64 0, i32 0
  %bf.load175 = load i32* %21, align 8
  %bf.clear176 = and i32 %bf.load175, 65535
  %cmp177 = icmp eq i32 %bf.clear176, 61
  br i1 %cmp177, label %land.lhs.true178, label %if.end222

land.lhs.true178:                                 ; preds = %land.lhs.true168
  %arrayidx186 = getelementptr inbounds %struct.rtx_def* %20, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx186 to i32*
  %22 = load i32* %rtuint, align 4, !tbaa !21
  %.off = add i32 %22, -53
  %23 = icmp ult i32 %.off, 5
  br i1 %23, label %if.then199, label %if.end222

if.then199:                                       ; preds = %land.lhs.true178
  %bf.load201 = load i32* %4, align 8
  %bf.lshr202 = lshr i32 %bf.load201, 16
  %bf.clear203 = and i32 %bf.lshr202, 255
  %call210 = tail call %struct.rtx_def* @expand_binop(i32 %bf.clear203, %struct.optab* %binoptab.1, %struct.rtx_def* %20, %struct.rtx_def* %op2.0, %struct.rtx_def* %subtarget.2, i32 0, i32 3) #5
  %bf.load211 = load i32* %4, align 8
  %bf.lshr212 = lshr i32 %bf.load211, 16
  %bf.clear213 = and i32 %bf.lshr212, 255
  %24 = load %struct.rtx_def** %rtx164, align 8, !tbaa !1
  %arrayidx218 = getelementptr inbounds %struct.rtx_def* %24, i64 0, i32 1, i64 1
  %rtx219 = bitcast %union.rtunion_def* %arrayidx218 to %struct.rtx_def**
  %25 = load %struct.rtx_def** %rtx219, align 8, !tbaa !1
  %call220 = tail call %struct.rtx_def* @force_operand(%struct.rtx_def* %25, %struct.rtx_def* null)
  %call221 = tail call %struct.rtx_def* @expand_binop(i32 %bf.clear213, %struct.optab* %binoptab.1, %struct.rtx_def* %call210, %struct.rtx_def* %call220, %struct.rtx_def* %target, i32 0, i32 3) #5
  ret %struct.rtx_def* %call221

if.end222:                                        ; preds = %land.lhs.true178, %land.lhs.true168, %land.lhs.true161, %land.lhs.true157, %if.end155
  %rtx225 = bitcast [1 x %union.rtunion_def]* %fld103 to %struct.rtx_def**
  %26 = load %struct.rtx_def** %rtx225, align 8, !tbaa !1
  %call226 = tail call %struct.rtx_def* @force_operand(%struct.rtx_def* %26, %struct.rtx_def* %subtarget.2)
  %bf.load227 = load i32* %4, align 8
  %bf.lshr228 = lshr i32 %bf.load227, 16
  %bf.clear229 = and i32 %bf.lshr228, 255
  %call230 = tail call %struct.rtx_def* @force_operand(%struct.rtx_def* %op2.0, %struct.rtx_def* null)
  %call231 = tail call %struct.rtx_def* @expand_binop(i32 %bf.clear229, %struct.optab* %binoptab.1, %struct.rtx_def* %call226, %struct.rtx_def* %call230, %struct.rtx_def* %target, i32 0, i32 3) #5
  ret %struct.rtx_def* %call231

if.end232:                                        ; preds = %if.end100
  %cmp235 = icmp eq i32 %bf.clear, 63
  br i1 %cmp235, label %land.lhs.true236, label %return

land.lhs.true236:                                 ; preds = %if.end33, %if.end232
  %fld237 = getelementptr inbounds %struct.rtx_def* %value, i64 0, i32 1
  %rtx239 = bitcast [1 x %union.rtunion_def]* %fld237 to %struct.rtx_def**
  %27 = load %struct.rtx_def** %rtx239, align 8, !tbaa !1
  %28 = getelementptr inbounds %struct.rtx_def* %27, i64 0, i32 0
  %bf.load240 = load i32* %28, align 8
  %bf.clear241 = and i32 %bf.load240, 65535
  %cmp242 = icmp eq i32 %bf.clear241, 66
  br i1 %cmp242, label %land.lhs.true243, label %return

land.lhs.true243:                                 ; preds = %land.lhs.true236
  %bf.lshr245 = lshr i32 %bf.load, 16
  %bf.clear246 = and i32 %bf.lshr245, 255
  %idxprom360 = zext i32 %bf.clear246 to i64
  %arrayidx247 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom360
  %29 = load i8* %arrayidx247, align 1, !tbaa !5
  %bf.lshr252 = lshr i32 %bf.load240, 16
  %bf.clear253 = and i32 %bf.lshr252, 255
  %idxprom254361 = zext i32 %bf.clear253 to i64
  %arrayidx255 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom254361
  %30 = load i8* %arrayidx255, align 1, !tbaa !5
  %cmp257 = icmp ugt i8 %29, %30
  br i1 %cmp257, label %if.then259, label %return

if.then259:                                       ; preds = %land.lhs.true243
  %call272 = tail call %struct.rtx_def* @force_operand(%struct.rtx_def* %27, %struct.rtx_def* null)
  %call273 = tail call %struct.rtx_def* @force_reg(i32 %bf.clear253, %struct.rtx_def* %call272) #5
  %31 = load %struct.rtx_def** %rtx239, align 8, !tbaa !1
  %32 = getelementptr inbounds %struct.rtx_def* %31, i64 0, i32 0
  %bf.load277 = load i32* %32, align 8
  %bf.lshr278 = lshr i32 %bf.load277, 16
  %bf.clear279 = and i32 %bf.lshr278, 255
  %arrayidx281 = getelementptr inbounds %struct.rtx_def* %value, i64 0, i32 1, i64 1
  %rtuint282 = bitcast %union.rtunion_def* %arrayidx281 to i32*
  %33 = load i32* %rtuint282, align 4, !tbaa !21
  %call283 = tail call %struct.rtx_def* @simplify_gen_subreg(i32 %bf.clear246, %struct.rtx_def* %call273, i32 %bf.clear279, i32 %33) #5
  ret %struct.rtx_def* %call283

return:                                           ; preds = %if.end33, %if.end232, %land.lhs.true236, %land.lhs.true243, %if.end
  %retval.0 = phi %struct.rtx_def* [ %subtarget.0, %if.end ], [ %value, %land.lhs.true243 ], [ %value, %land.lhs.true236 ], [ %value, %if.end232 ], [ %value, %if.end33 ]
  ret %struct.rtx_def* %retval.0
}

declare %struct.rtx_def* @expand_mult(i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32) #1

declare %struct.rtx_def* @negate_rtx(i32, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define i32 @safe_from_p(%struct.rtx_def* %x, %union.tree_node* %exp, i32 %top_p) #0 {
entry:
  %cmp576 = icmp eq %struct.rtx_def* %x, null
  br i1 %cmp576, label %return, label %lor.lhs.false.lr.ph

lor.lhs.false.lr.ph:                              ; preds = %entry
  %0 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 9), align 8, !tbaa !1
  %phitmp585 = icmp ne i32 %top_p, 0
  br label %lor.lhs.false

lor.lhs.false:                                    ; preds = %lor.lhs.false.lr.ph, %tailrecurse.backedge
  %top_p.tr579 = phi i1 [ %phitmp585, %lor.lhs.false.lr.ph ], [ false, %tailrecurse.backedge ]
  %exp.tr578 = phi %union.tree_node* [ %exp, %lor.lhs.false.lr.ph ], [ %exp.tr.be, %tailrecurse.backedge ]
  %x.tr577 = phi %struct.rtx_def* [ %x, %lor.lhs.false.lr.ph ], [ %x.addr.0, %tailrecurse.backedge ]
  br i1 %top_p.tr579, label %land.lhs.true, label %lor.lhs.false41

land.lhs.true:                                    ; preds = %lor.lhs.false
  %type = getelementptr inbounds %union.tree_node* %exp.tr578, i64 0, i32 0, i32 0, i32 1
  %1 = load %union.tree_node** %type, align 8, !tbaa !36
  %cmp1 = icmp eq %union.tree_node* %1, null
  br i1 %cmp1, label %lor.lhs.false41, label %land.lhs.true2

land.lhs.true2:                                   ; preds = %land.lhs.true
  %size = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 2
  %2 = bitcast i32* %size to %union.tree_node**
  %3 = load %union.tree_node** %2, align 8, !tbaa !40
  %cmp6 = icmp eq %union.tree_node* %3, null
  br i1 %cmp6, label %lor.lhs.false41, label %land.lhs.true7

land.lhs.true7:                                   ; preds = %land.lhs.true2
  %code = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp13 = icmp eq i32 %bf.clear, 25
  br i1 %cmp13, label %lor.lhs.false41, label %land.lhs.true14

land.lhs.true14:                                  ; preds = %land.lhs.true7
  %code18 = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 0, i32 2
  %bf.load19 = load i32* %code18, align 8
  %bf.clear20 = and i32 %bf.load19, 255
  %cmp21 = icmp eq i32 %bf.clear20, 18
  br i1 %cmp21, label %lor.lhs.false22, label %land.lhs.true37

lor.lhs.false22:                                  ; preds = %land.lhs.true14
  %4 = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 13
  %5 = load %union.tree_node** %4, align 8, !tbaa !59
  %cmp26 = icmp eq %union.tree_node* %5, null
  br i1 %cmp26, label %land.lhs.true37, label %lor.lhs.false27

lor.lhs.false27:                                  ; preds = %lor.lhs.false22
  %code33 = getelementptr inbounds %union.tree_node* %5, i64 0, i32 0, i32 0, i32 2
  %bf.load34 = load i32* %code33, align 8
  %bf.clear35 = and i32 %bf.load34, 255
  %cmp36 = icmp eq i32 %bf.clear35, 25
  br i1 %cmp36, label %lor.lhs.false41, label %land.lhs.true37

land.lhs.true37:                                  ; preds = %lor.lhs.false27, %land.lhs.true14, %lor.lhs.false22
  %6 = getelementptr inbounds %struct.rtx_def* %x.tr577, i64 0, i32 0
  %bf.load38 = load i32* %6, align 8
  %bf.clear39 = and i32 %bf.load38, 16711680
  %cmp40 = icmp eq i32 %bf.clear39, 3342336
  br i1 %cmp40, label %return, label %lor.lhs.false41

lor.lhs.false41:                                  ; preds = %lor.lhs.false27, %land.lhs.true7, %land.lhs.true2, %land.lhs.true, %land.lhs.true37, %lor.lhs.false
  %7 = getelementptr inbounds %struct.rtx_def* %x.tr577, i64 0, i32 0
  %bf.load42 = load i32* %7, align 8
  %bf.clear43 = and i32 %bf.load42, 65535
  switch i32 %bf.clear43, label %if.end78 [
    i32 66, label %land.lhs.true45
    i32 63, label %if.then65
  ]

land.lhs.true45:                                  ; preds = %lor.lhs.false41
  %arrayidx = getelementptr inbounds %struct.rtx_def* %x.tr577, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %8 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %cmp46 = icmp eq %struct.rtx_def* %8, %0
  br i1 %cmp46, label %return, label %lor.lhs.false47

lor.lhs.false47:                                  ; preds = %land.lhs.true45
  %9 = getelementptr inbounds %struct.rtx_def* %8, i64 0, i32 0
  %bf.load51 = load i32* %9, align 8
  %bf.clear52 = and i32 %bf.load51, 65535
  %cmp53 = icmp eq i32 %bf.clear52, 75
  br i1 %cmp53, label %land.lhs.true54, label %if.end

land.lhs.true54:                                  ; preds = %lor.lhs.false47
  %arrayidx59 = getelementptr inbounds %struct.rtx_def* %8, i64 0, i32 1, i64 0
  %rtx60 = bitcast %union.rtunion_def* %arrayidx59 to %struct.rtx_def**
  %10 = load %struct.rtx_def** %rtx60, align 8, !tbaa !1
  %cmp61 = icmp eq %struct.rtx_def* %10, %0
  br i1 %cmp61, label %return, label %if.end

if.end:                                           ; preds = %land.lhs.true54, %lor.lhs.false47
  %cmp64 = icmp eq i32 %bf.clear43, 63
  br i1 %cmp64, label %if.then65, label %if.end78

if.then65:                                        ; preds = %lor.lhs.false41, %if.end
  %arrayidx67 = getelementptr inbounds %struct.rtx_def* %x.tr577, i64 0, i32 1, i64 0
  %rtx68 = bitcast %union.rtunion_def* %arrayidx67 to %struct.rtx_def**
  %11 = load %struct.rtx_def** %rtx68, align 8, !tbaa !1
  %12 = getelementptr inbounds %struct.rtx_def* %11, i64 0, i32 0
  %bf.load69 = load i32* %12, align 8
  %bf.clear70 = and i32 %bf.load69, 65535
  %cmp71 = icmp eq i32 %bf.clear70, 61
  br i1 %cmp71, label %land.lhs.true72, label %if.end78

land.lhs.true72:                                  ; preds = %if.then65
  %arrayidx74 = getelementptr inbounds %struct.rtx_def* %11, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx74 to i32*
  %13 = load i32* %rtuint, align 4, !tbaa !21
  %cmp75 = icmp ult i32 %13, 53
  br i1 %cmp75, label %return, label %if.end78

if.end78:                                         ; preds = %lor.lhs.false41, %if.then65, %land.lhs.true72, %if.end
  %bf.load266 = phi i32 [ %bf.load69, %land.lhs.true72 ], [ %bf.load69, %if.then65 ], [ %bf.load42, %if.end ], [ %bf.load42, %lor.lhs.false41 ]
  %x.addr.0 = phi %struct.rtx_def* [ %11, %land.lhs.true72 ], [ %11, %if.then65 ], [ %x.tr577, %if.end ], [ %x.tr577, %lor.lhs.false41 ]
  br i1 %top_p.tr579, label %if.then80, label %if.end86

if.then80:                                        ; preds = %if.end78
  store %union.tree_node* null, %union.tree_node** @safe_from_p.save_expr_list, align 8, !tbaa !1
  %call = tail call i32 @safe_from_p(%struct.rtx_def* %x.addr.0, %union.tree_node* %exp.tr578, i32 0)
  %t.0571 = load %union.tree_node** @safe_from_p.save_expr_list, align 8
  %cmp81572 = icmp eq %union.tree_node* %t.0571, null
  br i1 %cmp81572, label %return, label %for.body

for.body:                                         ; preds = %if.then80, %for.body
  %t.0573 = phi %union.tree_node* [ %t.0, %for.body ], [ %t.0571, %if.then80 ]
  %purpose = getelementptr inbounds %union.tree_node* %t.0573, i64 0, i32 0, i32 1
  %14 = load i8** %purpose, align 8
  %private_flag = getelementptr inbounds i8* %14, i64 16
  %15 = bitcast i8* %private_flag to i32*
  %bf.load83 = load i32* %15, align 8
  %bf.clear84 = and i32 %bf.load83, -1048577
  store i32 %bf.clear84, i32* %15, align 8
  %chain = getelementptr inbounds %union.tree_node* %t.0573, i64 0, i32 0, i32 0, i32 0
  %t.0 = load %union.tree_node** %chain, align 8
  %cmp81 = icmp eq %union.tree_node* %t.0, null
  br i1 %cmp81, label %return, label %for.body

if.end86:                                         ; preds = %if.end78
  %code88 = getelementptr inbounds %union.tree_node* %exp.tr578, i64 0, i32 0, i32 0, i32 2
  %bf.load89 = load i32* %code88, align 8
  %bf.clear90 = and i32 %bf.load89, 255
  %idxprom504 = zext i32 %bf.clear90 to i64
  %arrayidx91 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom504
  %16 = load i8* %arrayidx91, align 1, !tbaa !5
  %conv = sext i8 %16 to i32
  switch i32 %conv, label %return [
    i32 100, label %sw.bb
    i32 114, label %sw.bb156
    i32 120, label %sw.bb106
    i32 49, label %sw.bb138
    i32 50, label %sw.bb142
    i32 60, label %sw.bb142
    i32 101, label %sw.bb156
  ]

sw.bb:                                            ; preds = %if.end86
  %rtl = getelementptr inbounds %union.tree_node* %exp.tr578, i64 0, i32 0, i32 17
  %17 = load %struct.rtx_def** %rtl, align 8, !tbaa !37
  %cmp92 = icmp eq %struct.rtx_def* %17, null
  br i1 %cmp92, label %return, label %if.then370

sw.bb106:                                         ; preds = %if.end86
  switch i32 %bf.clear90, label %if.else137 [
    i32 2, label %if.then113
    i32 0, label %return
  ]

if.then113:                                       ; preds = %sw.bb106
  %value = getelementptr inbounds %union.tree_node* %exp.tr578, i64 0, i32 0, i32 2
  %18 = bitcast i32* %value to %union.tree_node**
  %19 = load %union.tree_node** %18, align 8, !tbaa !53
  %cmp115 = icmp eq %union.tree_node* %19, null
  br i1 %cmp115, label %land.rhs, label %lor.lhs.false117

lor.lhs.false117:                                 ; preds = %if.then113
  %call120 = tail call i32 @safe_from_p(%struct.rtx_def* %x.addr.0, %union.tree_node* %19, i32 0)
  %tobool121 = icmp eq i32 %call120, 0
  br i1 %tobool121, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %lor.lhs.false117, %if.then113
  %chain123 = getelementptr inbounds %union.tree_node* %exp.tr578, i64 0, i32 0, i32 0, i32 0
  %20 = load %union.tree_node** %chain123, align 8, !tbaa !34
  %cmp124 = icmp eq %union.tree_node* %20, null
  br i1 %cmp124, label %land.end, label %lor.rhs

lor.rhs:                                          ; preds = %land.rhs
  %call128 = tail call i32 @safe_from_p(%struct.rtx_def* %x.addr.0, %union.tree_node* %20, i32 0)
  %tobool129 = icmp ne i32 %call128, 0
  br label %land.end

land.end:                                         ; preds = %lor.lhs.false117, %land.rhs, %lor.rhs
  %21 = phi i1 [ false, %lor.lhs.false117 ], [ true, %land.rhs ], [ %tobool129, %lor.rhs ]
  %land.ext = zext i1 %21 to i32
  br label %return

if.else137:                                       ; preds = %sw.bb106
  br label %return

sw.bb138:                                         ; preds = %if.end86
  %operands = getelementptr inbounds %union.tree_node* %exp.tr578, i64 0, i32 0, i32 2
  br label %tailrecurse.backedge

tailrecurse.backedge:                             ; preds = %sw.bb138, %sw.bb286, %sw.bb322
  %exp.tr.be.in.in = phi i32* [ %operands, %sw.bb138 ], [ %operands288, %sw.bb286 ], [ %arrayidx325, %sw.bb322 ]
  %exp.tr.be.in = bitcast i32* %exp.tr.be.in.in to %union.tree_node**
  %exp.tr.be = load %union.tree_node** %exp.tr.be.in, align 8
  %cmp = icmp eq %struct.rtx_def* %x.addr.0, null
  br i1 %cmp, label %return, label %lor.lhs.false

sw.bb142:                                         ; preds = %if.end86, %if.end86
  %operands144 = getelementptr inbounds %union.tree_node* %exp.tr578, i64 0, i32 0, i32 2
  %arrayidx145 = bitcast i32* %operands144 to %union.tree_node**
  %22 = load %union.tree_node** %arrayidx145, align 8, !tbaa !1
  %call146 = tail call i32 @safe_from_p(%struct.rtx_def* %x.addr.0, %union.tree_node* %22, i32 0)
  %tobool147 = icmp eq i32 %call146, 0
  br i1 %tobool147, label %land.end154, label %land.rhs148

land.rhs148:                                      ; preds = %sw.bb142
  %arrayidx151 = getelementptr inbounds i32* %operands144, i64 2
  %23 = bitcast i32* %arrayidx151 to %union.tree_node**
  %24 = load %union.tree_node** %23, align 8, !tbaa !1
  %call152 = tail call i32 @safe_from_p(%struct.rtx_def* %x.addr.0, %union.tree_node* %24, i32 0)
  %tobool153 = icmp ne i32 %call152, 0
  br label %land.end154

land.end154:                                      ; preds = %sw.bb142, %land.rhs148
  %25 = phi i1 [ false, %sw.bb142 ], [ %tobool153, %land.rhs148 ]
  %land.ext155 = zext i1 %25 to i32
  br label %return

sw.bb156:                                         ; preds = %if.end86, %if.end86
  switch i32 %bf.clear90, label %if.end330 [
    i32 121, label %sw.bb161
    i32 41, label %sw.bb232
    i32 53, label %sw.bb254
    i32 120, label %sw.bb272
    i32 55, label %sw.bb282
    i32 56, label %sw.bb286
    i32 118, label %sw.bb291
    i32 52, label %sw.bb322
    i32 54, label %sw.bb327
  ]

sw.bb161:                                         ; preds = %sw.bb156
  %operands163 = getelementptr inbounds %union.tree_node* %exp.tr578, i64 0, i32 0, i32 2
  %arrayidx164 = bitcast i32* %operands163 to %union.tree_node**
  %26 = load %union.tree_node** %arrayidx164, align 8, !tbaa !1
  %call165 = tail call i32 @staticp(%union.tree_node* %26) #5
  %tobool166 = icmp eq i32 %call165, 0
  br i1 %tobool166, label %lor.lhs.false167, label %return

lor.lhs.false167:                                 ; preds = %sw.bb161
  %bf.load169 = load i32* %code88, align 8
  %bf.clear171 = and i32 %bf.load169, 262144
  %tobool172 = icmp eq i32 %bf.clear171, 0
  br i1 %tobool172, label %lor.lhs.false173, label %return

lor.lhs.false173:                                 ; preds = %lor.lhs.false167
  %27 = load %union.tree_node** %arrayidx164, align 8, !tbaa !1
  %call177 = tail call i32 @safe_from_p(%struct.rtx_def* %x.addr.0, %union.tree_node* %27, i32 0)
  %tobool178 = icmp eq i32 %call177, 0
  br i1 %tobool178, label %if.end180, label %return

if.end180:                                        ; preds = %lor.lhs.false173
  %28 = load %union.tree_node** %arrayidx164, align 8, !tbaa !1
  %code185 = getelementptr inbounds %union.tree_node* %28, i64 0, i32 0, i32 0, i32 2
  %bf.load186 = load i32* %code185, align 8
  %bf.clear187 = and i32 %bf.load186, 255
  %idxprom188505 = zext i32 %bf.clear187 to i64
  %arrayidx189 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom188505
  %29 = load i8* %arrayidx189, align 1, !tbaa !5
  %cmp191 = icmp eq i8 %29, 100
  br i1 %cmp191, label %if.then193, label %if.end330

if.then193:                                       ; preds = %if.end180
  %rtl195 = getelementptr inbounds %union.tree_node* %28, i64 0, i32 0, i32 17
  %30 = load %struct.rtx_def** %rtl195, align 8, !tbaa !37
  %cmp196 = icmp eq %struct.rtx_def* %30, null
  br i1 %cmp196, label %return, label %cond.end208

cond.end208:                                      ; preds = %if.then193
  %31 = getelementptr inbounds %struct.rtx_def* %30, i64 0, i32 0
  %bf.load210 = load i32* %31, align 8
  %bf.clear211 = and i32 %bf.load210, 65535
  %cmp212 = icmp eq i32 %bf.clear211, 66
  br i1 %cmp212, label %cond.end225, label %return

cond.end225:                                      ; preds = %cond.end208
  %arrayidx228 = getelementptr inbounds %struct.rtx_def* %30, i64 0, i32 1, i64 0
  %rtx229 = bitcast %union.rtunion_def* %arrayidx228 to %struct.rtx_def**
  br label %sw.epilog

sw.bb232:                                         ; preds = %sw.bb156
  %bf.clear234 = and i32 %bf.load266, 65535
  %cmp235 = icmp eq i32 %bf.clear234, 66
  br i1 %cmp235, label %land.lhs.true237, label %if.end330

land.lhs.true237:                                 ; preds = %sw.bb232
  %arrayidx239 = getelementptr inbounds %struct.rtx_def* %x.addr.0, i64 0, i32 1, i64 1
  %rtmem = bitcast %union.rtunion_def* %arrayidx239 to %struct.mem_attrs**
  %32 = load %struct.mem_attrs** %rtmem, align 8, !tbaa !1
  %cmp240 = icmp eq %struct.mem_attrs* %32, null
  br i1 %cmp240, label %cond.end247, label %cond.false243

cond.false243:                                    ; preds = %land.lhs.true237
  %alias = getelementptr inbounds %struct.mem_attrs* %32, i64 0, i32 0
  %33 = load i64* %alias, align 8, !tbaa !79
  br label %cond.end247

cond.end247:                                      ; preds = %land.lhs.true237, %cond.false243
  %cond248 = phi i64 [ %33, %cond.false243 ], [ 0, %land.lhs.true237 ]
  %call249 = tail call i64 @get_alias_set(%union.tree_node* %exp.tr578) #5
  %call250 = tail call i32 @alias_sets_conflict_p(i64 %cond248, i64 %call249) #5
  %tobool251 = icmp eq i32 %call250, 0
  br i1 %tobool251, label %if.end330, label %return

sw.bb254:                                         ; preds = %sw.bb156
  %bf.clear256 = and i32 %bf.load266, 65535
  switch i32 %bf.clear256, label %if.end330 [
    i32 61, label %land.lhs.true259
    i32 66, label %return
  ]

land.lhs.true259:                                 ; preds = %sw.bb254
  %arrayidx261 = getelementptr inbounds %struct.rtx_def* %x.addr.0, i64 0, i32 1, i64 0
  %rtuint262 = bitcast %union.rtunion_def* %arrayidx261 to i32*
  %34 = load i32* %rtuint262, align 4, !tbaa !21
  %cmp263 = icmp ult i32 %34, 53
  br i1 %cmp263, label %return, label %if.end330

sw.bb272:                                         ; preds = %sw.bb156
  %operands274 = getelementptr inbounds %union.tree_node* %exp.tr578, i64 0, i32 0, i32 2
  %35 = bitcast i32* %operands274 to %struct.rtx_def**
  %36 = load %struct.rtx_def** %35, align 8, !tbaa !1
  %tobool276 = icmp eq %struct.rtx_def* %36, null
  br i1 %tobool276, label %if.end278, label %return

if.end278:                                        ; preds = %sw.bb272
  %arrayidx281 = getelementptr inbounds i32* %operands274, i64 2
  %37 = bitcast i32* %arrayidx281 to %struct.rtx_def**
  br label %sw.epilog

sw.bb282:                                         ; preds = %sw.bb156
  %operands284 = getelementptr inbounds %union.tree_node* %exp.tr578, i64 0, i32 0, i32 2
  %arrayidx285 = getelementptr inbounds i32* %operands284, i64 4
  %38 = bitcast i32* %arrayidx285 to %struct.rtx_def**
  br label %sw.epilog

sw.bb286:                                         ; preds = %sw.bb156
  %operands288 = getelementptr inbounds %union.tree_node* %exp.tr578, i64 0, i32 0, i32 2
  br label %tailrecurse.backedge

sw.bb291:                                         ; preds = %sw.bb156
  %operands293 = getelementptr inbounds %union.tree_node* %exp.tr578, i64 0, i32 0, i32 2
  %arrayidx294 = getelementptr inbounds i32* %operands293, i64 4
  %39 = bitcast i32* %arrayidx294 to %struct.rtx_def**
  %40 = load %struct.rtx_def** %39, align 8, !tbaa !1
  %tobool295 = icmp eq %struct.rtx_def* %40, null
  br i1 %tobool295, label %if.end297, label %if.then370

if.end297:                                        ; preds = %sw.bb291
  %bf.clear302 = and i32 %bf.load89, 1048576
  %tobool303 = icmp eq i32 %bf.clear302, 0
  br i1 %tobool303, label %if.end305, label %return

if.end305:                                        ; preds = %if.end297
  %bf.set = or i32 %bf.load89, 1048576
  store i32 %bf.set, i32* %code88, align 8
  %arrayidx312 = bitcast i32* %operands293 to %union.tree_node**
  %41 = load %union.tree_node** %arrayidx312, align 8, !tbaa !1
  %call313 = tail call i32 @safe_from_p(%struct.rtx_def* %x.addr.0, %union.tree_node* %41, i32 0)
  %tobool314 = icmp eq i32 %call313, 0
  br i1 %tobool314, label %if.then315, label %if.end320

if.then315:                                       ; preds = %if.end305
  %bf.load318 = load i32* %code88, align 8
  %bf.clear319 = and i32 %bf.load318, -1048577
  store i32 %bf.clear319, i32* %code88, align 8
  br label %return

if.end320:                                        ; preds = %if.end305
  %42 = load %union.tree_node** @safe_from_p.save_expr_list, align 8, !tbaa !1
  %call321 = tail call %union.tree_node* @tree_cons(%union.tree_node* %exp.tr578, %union.tree_node* null, %union.tree_node* %42) #5
  store %union.tree_node* %call321, %union.tree_node** @safe_from_p.save_expr_list, align 8, !tbaa !1
  br label %return

sw.bb322:                                         ; preds = %sw.bb156
  %operands324 = getelementptr inbounds %union.tree_node* %exp.tr578, i64 0, i32 0, i32 2
  %arrayidx325 = getelementptr inbounds i32* %operands324, i64 2
  br label %tailrecurse.backedge

sw.bb327:                                         ; preds = %sw.bb156
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 5724, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.safe_from_p, i64 0, i64 0)) #8
  unreachable

sw.epilog:                                        ; preds = %cond.end225, %sw.bb282, %if.end278
  %exp.addr.0 = phi %union.tree_node* [ %exp.tr578, %sw.bb282 ], [ %exp.tr578, %if.end278 ], [ %28, %cond.end225 ]
  %exp_rtl.0.in = phi %struct.rtx_def** [ %38, %sw.bb282 ], [ %37, %if.end278 ], [ %rtx229, %cond.end225 ]
  %exp_rtl.0 = load %struct.rtx_def** %exp_rtl.0.in, align 8
  %tobool328 = icmp eq %struct.rtx_def* %exp_rtl.0, null
  br i1 %tobool328, label %if.end330, label %if.then370

if.end330:                                        ; preds = %sw.bb156, %sw.bb254, %land.lhs.true259, %if.end180, %sw.bb232, %cond.end247, %sw.epilog
  %exp.addr.0507 = phi %union.tree_node* [ %exp.addr.0, %sw.epilog ], [ %exp.tr578, %cond.end247 ], [ %exp.tr578, %sw.bb232 ], [ %28, %if.end180 ], [ %exp.tr578, %land.lhs.true259 ], [ %exp.tr578, %sw.bb254 ], [ %exp.tr578, %sw.bb156 ]
  %code332 = getelementptr inbounds %union.tree_node* %exp.addr.0507, i64 0, i32 0, i32 0, i32 2
  %bf.load333 = load i32* %code332, align 8
  %bf.clear334 = and i32 %bf.load333, 255
  %call335 = tail call i32 @first_rtl_op(i32 %bf.clear334) #5
  %cmp337574 = icmp sgt i32 %call335, 0
  br i1 %cmp337574, label %for.body339.lr.ph, label %for.end356

for.body339.lr.ph:                                ; preds = %if.end330
  %operands342 = getelementptr inbounds %union.tree_node* %exp.addr.0507, i64 0, i32 0, i32 2
  %43 = bitcast i32* %operands342 to [1 x %union.tree_node*]*
  br label %for.body339

for.body339:                                      ; preds = %for.body339.lr.ph, %for.inc355
  %indvars.iv = phi i64 [ 0, %for.body339.lr.ph ], [ %indvars.iv.next, %for.inc355 ]
  %arrayidx343 = getelementptr inbounds [1 x %union.tree_node*]* %43, i64 0, i64 %indvars.iv
  %44 = load %union.tree_node** %arrayidx343, align 8, !tbaa !1
  %cmp344 = icmp eq %union.tree_node* %44, null
  br i1 %cmp344, label %for.inc355, label %land.lhs.true346

land.lhs.true346:                                 ; preds = %for.body339
  %call351 = tail call i32 @safe_from_p(%struct.rtx_def* %x.addr.0, %union.tree_node* %44, i32 0)
  %tobool352 = icmp eq i32 %call351, 0
  br i1 %tobool352, label %return, label %for.inc355

for.inc355:                                       ; preds = %land.lhs.true346, %for.body339
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %45 = trunc i64 %indvars.iv.next to i32
  %cmp337 = icmp slt i32 %45, %call335
  br i1 %cmp337, label %for.body339, label %for.end356

for.end356:                                       ; preds = %for.inc355, %if.end330
  %bf.load359 = load i32* %code332, align 8
  %bf.clear360 = and i32 %bf.load359, 255
  %cmp361 = icmp ugt i32 %bf.clear360, 146
  br i1 %cmp361, label %land.lhs.true363, label %sw.epilog368

land.lhs.true363:                                 ; preds = %for.end356
  %46 = load i32 (%struct.rtx_def*, %union.tree_node*)** getelementptr inbounds (%struct.lang_hooks* @lang_hooks, i64 0, i32 10), align 8, !tbaa !81
  %call364 = tail call i32 %46(%struct.rtx_def* %x.addr.0, %union.tree_node* %exp.addr.0507) #5
  %tobool365 = icmp eq i32 %call364, 0
  br i1 %tobool365, label %return, label %sw.epilog368

sw.epilog368:                                     ; preds = %land.lhs.true363, %for.end356
  br label %return

if.then370:                                       ; preds = %sw.bb, %sw.bb291, %sw.epilog
  %exp_rtl.1512 = phi %struct.rtx_def* [ %exp_rtl.0, %sw.epilog ], [ %40, %sw.bb291 ], [ %17, %sw.bb ]
  %47 = getelementptr inbounds %struct.rtx_def* %exp_rtl.1512, i64 0, i32 0
  %bf.load371 = load i32* %47, align 8
  %bf.clear372 = and i32 %bf.load371, 65535
  %cmp373 = icmp eq i32 %bf.clear372, 63
  br i1 %cmp373, label %if.then375, label %if.end391

if.then375:                                       ; preds = %if.then370
  %arrayidx377 = getelementptr inbounds %struct.rtx_def* %exp_rtl.1512, i64 0, i32 1, i64 0
  %rtx378 = bitcast %union.rtunion_def* %arrayidx377 to %struct.rtx_def**
  %48 = load %struct.rtx_def** %rtx378, align 8, !tbaa !1
  %49 = getelementptr inbounds %struct.rtx_def* %48, i64 0, i32 0
  %bf.load379 = load i32* %49, align 8
  %bf.clear380 = and i32 %bf.load379, 65535
  %cmp381 = icmp eq i32 %bf.clear380, 61
  br i1 %cmp381, label %land.lhs.true383, label %if.end391

land.lhs.true383:                                 ; preds = %if.then375
  %arrayidx385 = getelementptr inbounds %struct.rtx_def* %48, i64 0, i32 1, i64 0
  %rtuint386 = bitcast %union.rtunion_def* %arrayidx385 to i32*
  %50 = load i32* %rtuint386, align 4, !tbaa !21
  %cmp387 = icmp ult i32 %50, 53
  br i1 %cmp387, label %return, label %if.end391

if.end391:                                        ; preds = %if.then375, %land.lhs.true383, %if.then370
  %exp_rtl.2 = phi %struct.rtx_def* [ %48, %land.lhs.true383 ], [ %48, %if.then375 ], [ %exp_rtl.1512, %if.then370 ]
  %call392 = tail call i32 @rtx_equal_p(%struct.rtx_def* %x.addr.0, %struct.rtx_def* %exp_rtl.2) #5
  %tobool393 = icmp eq i32 %call392, 0
  br i1 %tobool393, label %lor.rhs394, label %lor.end409

lor.rhs394:                                       ; preds = %if.end391
  %51 = getelementptr inbounds %struct.rtx_def* %x.addr.0, i64 0, i32 0
  %bf.load395 = load i32* %51, align 8
  %bf.clear396 = and i32 %bf.load395, 65535
  %cmp397 = icmp eq i32 %bf.clear396, 66
  br i1 %cmp397, label %land.lhs.true399, label %lor.end409

land.lhs.true399:                                 ; preds = %lor.rhs394
  %52 = getelementptr inbounds %struct.rtx_def* %exp_rtl.2, i64 0, i32 0
  %bf.load400 = load i32* %52, align 8
  %bf.clear401 = and i32 %bf.load400, 65535
  %cmp402 = icmp eq i32 %bf.clear401, 66
  br i1 %cmp402, label %land.rhs404, label %lor.end409

land.rhs404:                                      ; preds = %land.lhs.true399
  %call405 = tail call i32 @true_dependence(%struct.rtx_def* %exp_rtl.2, i32 0, %struct.rtx_def* %x.addr.0, i32 (%struct.rtx_def*, i32)* @rtx_addr_varies_p) #5
  %phitmp = icmp eq i32 %call405, 0
  br label %lor.end409

lor.end409:                                       ; preds = %if.end391, %lor.rhs394, %land.lhs.true399, %land.rhs404
  %53 = phi i1 [ false, %if.end391 ], [ true, %land.lhs.true399 ], [ true, %lor.rhs394 ], [ %phitmp, %land.rhs404 ]
  %lnot.ext = zext i1 %53 to i32
  br label %return

return:                                           ; preds = %land.lhs.true54, %land.lhs.true45, %land.lhs.true37, %tailrecurse.backedge, %land.lhs.true72, %if.end86, %land.lhs.true346, %for.body, %sw.bb254, %entry, %if.then80, %sw.bb, %if.then193, %sw.epilog368, %land.lhs.true383, %land.lhs.true363, %if.end297, %sw.bb272, %land.lhs.true259, %cond.end247, %cond.end208, %sw.bb161, %lor.lhs.false167, %lor.lhs.false173, %sw.bb106, %lor.end409, %if.end320, %if.then315, %land.end154, %if.else137, %land.end
  %retval.0 = phi i32 [ %lnot.ext, %lor.end409 ], [ 1, %if.end320 ], [ 0, %if.then315 ], [ %land.ext155, %land.end154 ], [ %land.ext, %land.end ], [ 0, %if.else137 ], [ 1, %sw.bb106 ], [ 1, %lor.lhs.false173 ], [ 1, %lor.lhs.false167 ], [ 1, %sw.bb161 ], [ 0, %cond.end208 ], [ 0, %if.then193 ], [ 0, %cond.end247 ], [ 0, %land.lhs.true259 ], [ 0, %sw.bb272 ], [ 1, %if.end297 ], [ 0, %land.lhs.true363 ], [ 0, %land.lhs.true383 ], [ 1, %sw.epilog368 ], [ 1, %sw.bb ], [ %call, %if.then80 ], [ 1, %entry ], [ 0, %sw.bb254 ], [ %call, %for.body ], [ 0, %land.lhs.true346 ], [ 1, %land.lhs.true54 ], [ 1, %land.lhs.true45 ], [ 1, %land.lhs.true37 ], [ 1, %tailrecurse.backedge ], [ 0, %land.lhs.true72 ], [ 1, %if.end86 ]
  ret i32 %retval.0
}

declare i32 @staticp(%union.tree_node*) #1

declare i32 @alias_sets_conflict_p(i64, i64) #1

declare %union.tree_node* @tree_cons(%union.tree_node*, %union.tree_node*, %union.tree_node*) #1

declare i32 @first_rtl_op(i32) #1

declare i32 @true_dependence(%struct.rtx_def*, i32, %struct.rtx_def*, i32 (%struct.rtx_def*, i32)*) #1

declare i32 @rtx_addr_varies_p(%struct.rtx_def*, i32) #1

declare %union.tree_node* @decl_function_context(%union.tree_node*) #1

declare %struct.function* @find_function_data(%union.tree_node*) #1

declare %struct.rtx_def* @label_rtx(%union.tree_node*) #1

declare %struct.rtx_def* @gen_rtx_fmt_u00(i32, i32, %struct.rtx_def*) #1

declare void @error_with_decl(%union.tree_node*, i8*, ...) #1

declare void @layout_decl(%union.tree_node*, i32) #1

declare i32 @mark_addressable(%union.tree_node*) #1

declare %struct.rtx_def* @fix_lexical_addr(%struct.rtx_def*, %union.tree_node*) #1

declare void @mark_reg_pointer(%struct.rtx_def*, i32) #1

declare i32 @promote_mode(%union.tree_node*, i32, i32*, i32) #1

declare %struct.rtx_def* @immed_real_const(%union.tree_node*) #1

declare %struct.rtx_def* @output_constant_def(%union.tree_node*, i32) #1

declare %struct.rtx_def* @emit_line_note(i8*, i32) #1

declare void @put_var_into_stack(%union.tree_node*) #1

declare %union.tree_node* @unsave_expr_now(%union.tree_node*) #1

declare void @expand_goto(%union.tree_node*) #1

declare void @expand_computed_goto(%union.tree_node*) #1

declare i32 @expand_exit_loop_if_false(%struct.nesting*, %union.tree_node*) #1

declare %union.tree_node* @invert_truthvalue(%union.tree_node*) #1

declare void @expand_expr_stmt_value(%union.tree_node*, i32, i32) #1

declare void @sorry(i8*, ...) #1

declare %struct.nesting* @expand_start_loop(i32) #1

declare void @expand_end_loop() #1

declare void @expand_start_bindings_and_block(i32, %union.tree_node*) #1

declare void @insert_block(%union.tree_node*) #1

declare void @expand_decl(%union.tree_node*) #1

declare void @expand_decl_init(%union.tree_node*) #1

declare void @expand_end_bindings(%union.tree_node*, i32, i32) #1

declare %struct.rtx_def* @emit_insns(%struct.rtx_def*) #1

declare void @preserve_rtl_expr_result(%struct.rtx_def*) #1

declare void @free_temps_for_rtl_expr(%union.tree_node*) #1

; Function Attrs: nounwind uwtable
define internal fastcc i32 @mostly_zeros_p(%union.tree_node* %exp) #0 {
entry:
  %code = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 46
  br i1 %cmp, label %if.then, label %if.end21

if.then:                                          ; preds = %entry
  %operands = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx = getelementptr inbounds i32* %operands, i64 2
  %0 = bitcast i32* %arrayidx to %union.tree_node**
  %1 = load %union.tree_node** %0, align 8, !tbaa !1
  %type = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 1
  %2 = load %union.tree_node** %type, align 8, !tbaa !36
  %tobool = icmp eq %union.tree_node* %2, null
  br i1 %tobool, label %for.cond.preheader, label %land.lhs.true

for.cond.preheader:                               ; preds = %land.lhs.true, %if.then
  %tobool1232 = icmp eq %union.tree_node* %1, null
  br i1 %tobool1232, label %for.end, label %for.body

land.lhs.true:                                    ; preds = %if.then
  %code6 = getelementptr inbounds %union.tree_node* %2, i64 0, i32 0, i32 0, i32 2
  %bf.load7 = load i32* %code6, align 8
  %bf.clear8 = and i32 %bf.load7, 255
  %cmp9 = icmp eq i32 %bf.clear8, 19
  br i1 %cmp9, label %if.then10, label %for.cond.preheader

if.then10:                                        ; preds = %land.lhs.true
  %cmp11 = icmp eq %union.tree_node* %1, null
  %conv = zext i1 %cmp11 to i32
  br label %return

for.body:                                         ; preds = %for.cond.preheader, %for.body
  %elt.035 = phi %union.tree_node* [ %5, %for.body ], [ %1, %for.cond.preheader ]
  %zeros.034 = phi i32 [ %zeros.0.inc, %for.body ], [ 0, %for.cond.preheader ]
  %elts.033 = phi i32 [ %inc16, %for.body ], [ 0, %for.cond.preheader ]
  %value = getelementptr inbounds %union.tree_node* %elt.035, i64 0, i32 0, i32 2
  %3 = bitcast i32* %value to %union.tree_node**
  %4 = load %union.tree_node** %3, align 8, !tbaa !53
  %call = tail call fastcc i32 @mostly_zeros_p(%union.tree_node* %4)
  %not.tobool13 = icmp ne i32 %call, 0
  %inc = zext i1 %not.tobool13 to i32
  %zeros.0.inc = add nsw i32 %inc, %zeros.034
  %inc16 = add nsw i32 %elts.033, 1
  %chain = getelementptr inbounds %union.tree_node* %elt.035, i64 0, i32 0, i32 0, i32 0
  %5 = load %union.tree_node** %chain, align 8, !tbaa !34
  %tobool12 = icmp eq %union.tree_node* %5, null
  br i1 %tobool12, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %phitmp = shl i32 %zeros.0.inc, 2
  %phitmp37 = mul i32 %inc16, 3
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %for.cond.preheader
  %zeros.0.lcssa = phi i32 [ %phitmp, %for.cond.for.end_crit_edge ], [ 0, %for.cond.preheader ]
  %elts.0.lcssa = phi i32 [ %phitmp37, %for.cond.for.end_crit_edge ], [ 0, %for.cond.preheader ]
  %cmp19 = icmp sge i32 %zeros.0.lcssa, %elts.0.lcssa
  %conv20 = zext i1 %cmp19 to i32
  br label %return

if.end21:                                         ; preds = %entry
  %call22 = tail call fastcc i32 @is_zeros_p(%union.tree_node* %exp)
  br label %return

return:                                           ; preds = %if.end21, %for.end, %if.then10
  %retval.0 = phi i32 [ %conv, %if.then10 ], [ %conv20, %for.end ], [ %call22, %if.end21 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal fastcc void @store_constructor(%union.tree_node* %exp, %struct.rtx_def* %target, i32 %cleared, i64 %size) #0 {
entry:
  %unsignedp403 = alloca i32, align 4
  %type1 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 1
  %0 = load %union.tree_node** %type1, align 8, !tbaa !36
  %code = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  switch i32 %bf.clear, label %if.else979 [
    i32 19, label %if.then700
    i32 9, label %if.then234
    i32 18, label %if.then234
    i32 21, label %land.lhs.true
    i32 20, label %lor.lhs.false19
    i32 22, label %lor.lhs.false19
  ]

lor.lhs.false19:                                  ; preds = %entry, %entry
  %cmp24 = icmp ne i32 %bf.clear, 22
  %tobool = icmp ne i32 %cleared, 0
  %or.cond = or i1 %cmp24, %tobool
  br i1 %or.cond, label %if.else, label %land.lhs.true25

land.lhs.true:                                    ; preds = %entry
  %cond = icmp eq i32 %cleared, 0
  br i1 %cond, label %land.lhs.true25, label %if.end94

land.lhs.true25:                                  ; preds = %land.lhs.true, %lor.lhs.false19
  %operands = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx = getelementptr inbounds i32* %operands, i64 2
  %1 = bitcast i32* %arrayidx to %union.tree_node**
  %2 = load %union.tree_node** %1, align 8, !tbaa !1
  %tobool27 = icmp eq %union.tree_node* %2, null
  br i1 %tobool27, label %if.then28, label %if.else

if.then28:                                        ; preds = %land.lhs.true25
  %call = call %struct.rtx_def* @expr_size(%union.tree_node* %exp) #5
  %call29 = call %struct.rtx_def* @clear_storage(%struct.rtx_def* %target, %struct.rtx_def* %call)
  br label %if.end94

if.else:                                          ; preds = %land.lhs.true25, %lor.lhs.false19
  %tobool30 = icmp eq i32 %cleared, 0
  br i1 %tobool30, label %land.lhs.true31, label %if.end94

land.lhs.true31:                                  ; preds = %if.else
  %3 = getelementptr inbounds %struct.rtx_def* %target, i64 0, i32 0
  %bf.load32 = load i32* %3, align 8
  %bf.clear33 = and i32 %bf.load32, 65535
  %cmp34 = icmp eq i32 %bf.clear33, 61
  br i1 %cmp34, label %land.lhs.true35, label %if.else55

land.lhs.true35:                                  ; preds = %land.lhs.true31
  %static_flag = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 2
  %bf.load37 = load i32* %static_flag, align 8
  %bf.clear38 = and i32 %bf.load37, 262144
  %tobool39 = icmp eq i32 %bf.clear38, 0
  br i1 %tobool39, label %if.else55, label %land.lhs.true40

land.lhs.true40:                                  ; preds = %land.lhs.true35
  %bf.lshr42 = lshr i32 %bf.load32, 16
  %bf.clear43 = and i32 %bf.lshr42, 255
  %idxprom1279 = zext i32 %bf.clear43 to i64
  %arrayidx44 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom1279
  %4 = load i8* %arrayidx44, align 1, !tbaa !5
  %conv = zext i8 %4 to i32
  %5 = load i32* @target_flags, align 4, !tbaa !21
  %and = lshr i32 %5, 23
  %6 = and i32 %and, 4
  %7 = add i32 %6, 4
  %cmp46 = icmp ugt i32 %conv, %7
  br i1 %cmp46, label %if.else55, label %if.then48

if.then48:                                        ; preds = %land.lhs.true40
  %arrayidx53 = getelementptr inbounds [3 x [59 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0, i64 %idxprom1279
  %8 = load %struct.rtx_def** %arrayidx53, align 8, !tbaa !1
  %call54 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %target, %struct.rtx_def* %8)
  br label %if.end94

if.else55:                                        ; preds = %land.lhs.true40, %land.lhs.true35, %land.lhs.true31
  %cmp58 = icmp sgt i64 %size, 0
  br i1 %cmp58, label %land.lhs.true60, label %if.then91

land.lhs.true60:                                  ; preds = %if.else55
  %operands62 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx63 = getelementptr inbounds i32* %operands62, i64 2
  %9 = bitcast i32* %arrayidx63 to %union.tree_node**
  %10 = load %union.tree_node** %9, align 8, !tbaa !1
  %call64 = call i32 @list_length(%union.tree_node* %10) #5
  %call65 = call i32 @fields_length(%union.tree_node* %0) #5
  %cmp66 = icmp eq i32 %call64, %call65
  br i1 %cmp66, label %lor.lhs.false68, label %land.lhs.true71

lor.lhs.false68:                                  ; preds = %land.lhs.true60
  %call69 = call fastcc i32 @mostly_zeros_p(%union.tree_node* %exp)
  %tobool70 = icmp eq i32 %call69, 0
  br i1 %tobool70, label %if.then91, label %land.lhs.true71

land.lhs.true71:                                  ; preds = %lor.lhs.false68, %land.lhs.true60
  %bf.load72 = load i32* %3, align 8
  %bf.clear73 = and i32 %bf.load72, 65535
  %cmp74 = icmp eq i32 %bf.clear73, 61
  br i1 %cmp74, label %lor.lhs.false76, label %if.then85

lor.lhs.false76:                                  ; preds = %land.lhs.true71
  %bf.lshr78 = lshr i32 %bf.load72, 16
  %bf.clear79 = and i32 %bf.lshr78, 255
  %idxprom801278 = zext i32 %bf.clear79 to i64
  %arrayidx81 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom801278
  %11 = load i8* %arrayidx81, align 1, !tbaa !5
  %conv82 = zext i8 %11 to i64
  %cmp83 = icmp eq i64 %conv82, %size
  br i1 %cmp83, label %if.then85, label %if.then91

if.then85:                                        ; preds = %land.lhs.true71, %lor.lhs.false76
  %call86 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %size) #5
  %call87 = call %struct.rtx_def* @clear_storage(%struct.rtx_def* %target, %struct.rtx_def* %call86)
  br label %if.end94

if.then91:                                        ; preds = %lor.lhs.false76, %if.else55, %lor.lhs.false68
  %call92 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %target) #5
  %call93 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call92) #5
  br label %if.end94

if.end94:                                         ; preds = %if.else, %land.lhs.true, %if.then28, %if.then48, %if.then85, %if.then91
  %tobool901290 = phi i1 [ false, %if.then91 ], [ true, %if.then85 ], [ true, %if.then48 ], [ true, %if.then28 ], [ true, %land.lhs.true ], [ true, %if.else ]
  %cleared.addr.01289 = phi i32 [ 0, %if.then91 ], [ 1, %if.then85 ], [ 1, %if.then48 ], [ 1, %if.then28 ], [ %cleared, %land.lhs.true ], [ %cleared, %if.else ]
  %operands96 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx97 = getelementptr inbounds i32* %operands96, i64 2
  %12 = bitcast i32* %arrayidx97 to %union.tree_node**
  %elt.01300 = load %union.tree_node** %12, align 8
  %tobool981301 = icmp eq %union.tree_node* %elt.01300, null
  br i1 %tobool981301, label %if.end982, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.end94
  %13 = getelementptr inbounds %struct.rtx_def* %target, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %elt.01302 = phi %union.tree_node* [ %elt.01300, %for.body.lr.ph ], [ %elt.0, %for.inc ]
  %purpose = getelementptr inbounds %union.tree_node* %elt.01302, i64 0, i32 0, i32 1
  %14 = load i8** %purpose, align 8
  %15 = bitcast i8* %14 to %union.tree_node*
  %value100 = getelementptr inbounds %union.tree_node* %elt.01302, i64 0, i32 0, i32 2
  %16 = bitcast i32* %value100 to %union.tree_node**
  %17 = load %union.tree_node** %16, align 8, !tbaa !53
  %cmp101 = icmp eq i8* %14, null
  br i1 %cmp101, label %for.inc, label %if.end104

if.end104:                                        ; preds = %for.body
  br i1 %tobool901290, label %land.lhs.true106, label %if.end110

land.lhs.true106:                                 ; preds = %if.end104
  %call107 = call fastcc i32 @is_zeros_p(%union.tree_node* %17)
  %tobool108 = icmp eq i32 %call107, 0
  br i1 %tobool108, label %if.end110, label %for.inc

if.end110:                                        ; preds = %land.lhs.true106, %if.end104
  %size111 = getelementptr inbounds i8* %14, i64 40
  %18 = bitcast i8* %size111 to %union.tree_node**
  %19 = load %union.tree_node** %18, align 8, !tbaa !39
  %call112 = call i32 @host_integerp(%union.tree_node* %19, i32 1) #5
  %tobool113 = icmp eq i32 %call112, 0
  br i1 %tobool113, label %if.end119, label %if.then114

if.then114:                                       ; preds = %if.end110
  %20 = load %union.tree_node** %18, align 8, !tbaa !39
  %call117 = call i64 @tree_low_cst(%union.tree_node* %20, i32 1) #5
  br label %if.end119

if.end119:                                        ; preds = %if.end110, %if.then114
  %bitsize.0 = phi i64 [ %call117, %if.then114 ], [ -1, %if.end110 ]
  %unsigned_flag = getelementptr inbounds i8* %14, i64 16
  %21 = bitcast i8* %unsigned_flag to i32*
  %mode125 = getelementptr inbounds i8* %14, i64 48
  %22 = bitcast i8* %mode125 to i64*
  %bf.load126 = load i64* %22, align 8
  %bf.load126.tr = trunc i64 %bf.load126 to i32
  %bf.cast = and i32 %bf.load126.tr, 255
  %bf.cast132 = and i64 %bf.load126, 4096
  %tobool133 = icmp eq i64 %bf.cast132, 0
  %bf.cast. = select i1 %tobool133, i32 %bf.cast, i32 0
  %arguments = getelementptr inbounds i8* %14, i64 88
  %23 = bitcast i8* %arguments to %union.tree_node**
  %24 = load %union.tree_node** %23, align 8, !tbaa !78
  %call137 = call i32 @host_integerp(%union.tree_node* %24, i32 0) #5
  %tobool138 = icmp eq i32 %call137, 0
  br i1 %tobool138, label %if.end148, label %land.lhs.true139

land.lhs.true139:                                 ; preds = %if.end119
  %call140 = call %union.tree_node* @bit_position(%union.tree_node* %15) #5
  %call141 = call i32 @host_integerp(%union.tree_node* %call140, i32 0) #5
  %tobool142 = icmp eq i32 %call141, 0
  br i1 %tobool142, label %if.end148, label %if.end148.thread

if.end148.thread:                                 ; preds = %land.lhs.true139
  %call144 = call i64 @int_bit_position(%union.tree_node* %15) #5
  br label %if.end176

if.end148:                                        ; preds = %if.end119, %land.lhs.true139
  %u2 = getelementptr inbounds i8* %14, i64 160
  %t = bitcast i8* %u2 to %union.tree_node**
  %25 = load %union.tree_node** %t, align 8, !tbaa !1
  %call147 = call i64 @tree_low_cst(%union.tree_node* %25, i32 0) #5
  %tobool149 = icmp eq %union.tree_node* %24, null
  br i1 %tobool149, label %if.end176, label %if.then150

if.then150:                                       ; preds = %if.end148
  %call151 = call i32 @contains_placeholder_p(%union.tree_node* %24) #5
  %tobool152 = icmp eq i32 %call151, 0
  br i1 %tobool152, label %if.end158, label %if.then153

if.then153:                                       ; preds = %if.then150
  %26 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !1
  %27 = load %union.tree_node** %type1, align 8, !tbaa !36
  %call156 = call %union.tree_node* @make_tree(%union.tree_node* %27, %struct.rtx_def* %target) #5
  %call157 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 58, %union.tree_node* %26, %union.tree_node* %24, %union.tree_node* %call156) #5
  br label %if.end158

if.end158:                                        ; preds = %if.then150, %if.then153
  %offset.1 = phi %union.tree_node* [ %call157, %if.then153 ], [ %24, %if.then150 ]
  %call159 = call %struct.rtx_def* @expand_expr(%union.tree_node* %offset.1, %struct.rtx_def* null, i32 0, i32 0)
  %bf.load160 = load i32* %13, align 8
  %bf.clear161 = and i32 %bf.load160, 65535
  %cmp162 = icmp eq i32 %bf.clear161, 66
  br i1 %cmp162, label %if.end165, label %if.then164

if.then164:                                       ; preds = %if.end158
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 4498, i8* getelementptr inbounds ([18 x i8]* @__FUNCTION__.store_constructor, i64 0, i64 0)) #8
  unreachable

if.end165:                                        ; preds = %if.end158
  %28 = getelementptr inbounds %struct.rtx_def* %call159, i64 0, i32 0
  %bf.load166 = load i32* %28, align 8
  %bf.lshr167 = lshr i32 %bf.load166, 16
  %bf.clear168 = and i32 %bf.lshr167, 255
  %29 = load i32* @ptr_mode, align 4, !tbaa !5
  %cmp169 = icmp eq i32 %bf.clear168, %29
  br i1 %cmp169, label %if.end173, label %if.then171

if.then171:                                       ; preds = %if.end165
  %call.i = call %struct.rtx_def* @convert_modes(i32 %29, i32 0, %struct.rtx_def* %call159, i32 0) #5
  br label %if.end173

if.end173:                                        ; preds = %if.end165, %if.then171
  %offset_rtx.0 = phi %struct.rtx_def* [ %call.i, %if.then171 ], [ %call159, %if.end165 ]
  %call174 = call fastcc i64 @highest_pow2_factor(%union.tree_node* %offset.1)
  %call175 = call %struct.rtx_def* @offset_address(%struct.rtx_def* %target, %struct.rtx_def* %offset_rtx.0, i64 %call174) #5
  br label %if.end176

if.end176:                                        ; preds = %if.end148.thread, %if.end148, %if.end173
  %bitpos.01292 = phi i64 [ %call147, %if.end173 ], [ %call147, %if.end148 ], [ %call144, %if.end148.thread ]
  %to_rtx.0 = phi %struct.rtx_def* [ %call175, %if.end173 ], [ %target, %if.end148 ], [ %target, %if.end148.thread ]
  %bf.load178 = load i32* %21, align 8
  %bf.clear180 = and i32 %bf.load178, 4096
  %tobool181 = icmp eq i32 %bf.clear180, 0
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %to_rtx.0, i64 0, i32 0
  %bf.load193.pre = load i32* %.phi.trans.insert, align 8
  br i1 %tobool181, label %if.end192, label %if.then182

if.then182:                                       ; preds = %if.end176
  %bf.clear184 = and i32 %bf.load193.pre, 65535
  %cmp185 = icmp eq i32 %bf.clear184, 66
  br i1 %cmp185, label %if.then187, label %if.end189

if.then187:                                       ; preds = %if.then182
  %call188 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %to_rtx.0) #5
  %.phi.trans.insert1325 = getelementptr inbounds %struct.rtx_def* %call188, i64 0, i32 0
  %bf.load190.pre = load i32* %.phi.trans.insert1325, align 8
  br label %if.end189

if.end189:                                        ; preds = %if.then187, %if.then182
  %bf.load190 = phi i32 [ %bf.load190.pre, %if.then187 ], [ %bf.load193.pre, %if.then182 ]
  %to_rtx.1 = phi %struct.rtx_def* [ %call188, %if.then187 ], [ %to_rtx.0, %if.then182 ]
  %30 = getelementptr inbounds %struct.rtx_def* %to_rtx.1, i64 0, i32 0
  %bf.set = or i32 %bf.load190, 67108864
  store i32 %bf.set, i32* %30, align 8
  br label %if.end192

if.end192:                                        ; preds = %if.end176, %if.end189
  %bf.load193 = phi i32 [ %bf.set, %if.end189 ], [ %bf.load193.pre, %if.end176 ]
  %to_rtx.2 = phi %struct.rtx_def* [ %to_rtx.1, %if.end189 ], [ %to_rtx.0, %if.end176 ]
  %31 = and i32 %bf.load193, 16842751
  %32 = icmp eq i32 %31, 66
  br i1 %32, label %land.lhs.true202, label %if.end214

land.lhs.true202:                                 ; preds = %if.end192
  %bf.load204 = load i64* %22, align 8
  %bf.cast207 = and i64 %bf.load204, 17179869184
  %tobool208 = icmp eq i64 %bf.cast207, 0
  br i1 %tobool208, label %if.end214, label %if.then209

if.then209:                                       ; preds = %land.lhs.true202
  %call210 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %to_rtx.2) #5
  %33 = getelementptr inbounds %struct.rtx_def* %call210, i64 0, i32 0
  %bf.load211 = load i32* %33, align 8
  %bf.set213 = or i32 %bf.load211, 16777216
  store i32 %bf.set213, i32* %33, align 8
  br label %if.end214

if.end214:                                        ; preds = %land.lhs.true202, %if.then209, %if.end192
  %to_rtx.3 = phi %struct.rtx_def* [ %call210, %if.then209 ], [ %to_rtx.2, %land.lhs.true202 ], [ %to_rtx.2, %if.end192 ]
  %type216 = getelementptr inbounds i8* %14, i64 8
  %34 = bitcast i8* %type216 to %union.tree_node**
  %35 = load %union.tree_node** %34, align 8, !tbaa !36
  %call217 = call i64 @get_alias_set(%union.tree_node* %35) #5
  %conv218 = trunc i64 %call217 to i32
  call fastcc void @store_constructor_field(%struct.rtx_def* %to_rtx.3, i64 %bitsize.0, i64 %bitpos.01292, i32 %bf.cast., %union.tree_node* %17, %union.tree_node* %0, i32 %cleared.addr.01289, i32 %conv218)
  br label %for.inc

for.inc:                                          ; preds = %land.lhs.true106, %for.body, %if.end214
  %chain = getelementptr inbounds %union.tree_node* %elt.01302, i64 0, i32 0, i32 0, i32 0
  %elt.0 = load %union.tree_node** %chain, align 8
  %tobool98 = icmp eq %union.tree_node* %elt.0, null
  br i1 %tobool98, label %if.end982, label %for.body

if.then234:                                       ; preds = %entry, %entry
  %type236 = bitcast %union.tree_node* %0 to %struct.tree_type*
  %values = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 1
  %36 = load i8** %values, align 8
  %type238 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 1
  %37 = load %union.tree_node** %type238, align 8, !tbaa !36
  %cmp243 = icmp eq i32 %bf.clear, 9
  br i1 %cmp243, label %if.then245, label %if.end254

if.then245:                                       ; preds = %if.then234
  %values249 = getelementptr inbounds i8* %36, i64 24
  %38 = bitcast i8* %values249 to %union.tree_node**
  %39 = load %union.tree_node** %38, align 8, !tbaa !87
  %type251 = getelementptr inbounds %union.tree_node* %39, i64 0, i32 0, i32 0, i32 1
  %40 = load %union.tree_node** %type251, align 8, !tbaa !36
  %values253 = getelementptr inbounds %union.tree_node* %40, i64 0, i32 0, i32 1
  %41 = load i8** %values253, align 8
  br label %if.end254

if.end254:                                        ; preds = %if.then245, %if.then234
  %domain.0.in = phi i8* [ %41, %if.then245 ], [ %36, %if.then234 ]
  %domain.0 = bitcast i8* %domain.0.in to %union.tree_node*
  %42 = getelementptr inbounds i8* %domain.0.in, i64 104
  %43 = bitcast i8* %42 to %union.tree_node**
  %44 = load %union.tree_node** %43, align 8, !tbaa !58
  %tobool256 = icmp eq %union.tree_node* %44, null
  br i1 %tobool256, label %if.end277, label %land.lhs.true257

land.lhs.true257:                                 ; preds = %if.end254
  %45 = getelementptr inbounds i8* %domain.0.in, i64 112
  %46 = bitcast i8* %45 to %union.tree_node**
  %47 = load %union.tree_node** %46, align 8, !tbaa !59
  %tobool259 = icmp eq %union.tree_node* %47, null
  br i1 %tobool259, label %if.end277, label %land.lhs.true260

land.lhs.true260:                                 ; preds = %land.lhs.true257
  %call263 = call i32 @host_integerp(%union.tree_node* %44, i32 0) #5
  %tobool264 = icmp eq i32 %call263, 0
  br i1 %tobool264, label %if.end277, label %land.end

land.end:                                         ; preds = %land.lhs.true260
  %48 = load %union.tree_node** %46, align 8, !tbaa !59
  %call267 = call i32 @host_integerp(%union.tree_node* %48, i32 0) #5
  %tobool268 = icmp eq i32 %call267, 0
  br i1 %tobool268, label %if.end277, label %if.then270

if.then270:                                       ; preds = %land.end
  %49 = load %union.tree_node** %43, align 8, !tbaa !58
  %call273 = call i64 @tree_low_cst(%union.tree_node* %49, i32 0) #5
  %50 = load %union.tree_node** %46, align 8, !tbaa !59
  %call276 = call i64 @tree_low_cst(%union.tree_node* %50, i32 0) #5
  %phitmp = add i64 %call276, 1
  br label %if.end277

if.end277:                                        ; preds = %land.end, %if.end254, %land.lhs.true257, %land.lhs.true260, %if.then270
  %51 = phi i1 [ true, %if.then270 ], [ false, %land.end ], [ false, %land.lhs.true260 ], [ false, %land.lhs.true257 ], [ false, %if.end254 ]
  %maxelt.0 = phi i64 [ %phitmp, %if.then270 ], [ 1, %land.end ], [ 1, %land.lhs.true260 ], [ 1, %land.lhs.true257 ], [ 1, %if.end254 ]
  %minelt.0 = phi i64 [ %call273, %if.then270 ], [ 0, %land.end ], [ 0, %land.lhs.true260 ], [ 0, %land.lhs.true257 ], [ 0, %if.end254 ]
  %tobool278 = icmp ne i32 %cleared, 0
  br i1 %tobool278, label %if.end360, label %lor.lhs.false279

lor.lhs.false279:                                 ; preds = %if.end277
  %52 = getelementptr inbounds %struct.rtx_def* %target, i64 0, i32 0
  %bf.load280 = load i32* %52, align 8
  %bf.clear281 = and i32 %bf.load280, 65535
  %cmp282 = icmp eq i32 %bf.clear281, 61
  br i1 %cmp282, label %land.lhs.true284, label %if.else292

land.lhs.true284:                                 ; preds = %lor.lhs.false279
  %static_flag286 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 2
  %bf.load287 = load i32* %static_flag286, align 8
  %bf.clear289 = and i32 %bf.load287, 262144
  %tobool290 = icmp eq i32 %bf.clear289, 0
  br i1 %tobool290, label %if.else292, label %if.end360

if.else292:                                       ; preds = %land.lhs.true284, %lor.lhs.false279
  %53 = zext i1 %51 to i32
  %lnot.ext = xor i32 %53, 1
  %operands295 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx296 = getelementptr inbounds i32* %operands295, i64 2
  %54 = bitcast i32* %arrayidx296 to %union.tree_node**
  %elt235.01313 = load %union.tree_node** %54, align 8
  %cmp2981314 = icmp eq %union.tree_node* %elt235.01313, null
  %.not = xor i1 %51, true
  %brmerge1315 = or i1 %cmp2981314, %.not
  br i1 %brmerge1315, label %for.end347, label %for.body306

for.body306:                                      ; preds = %if.else292, %if.end335
  %elt235.01318 = phi %union.tree_node* [ %elt235.0, %if.end335 ], [ %elt235.01313, %if.else292 ]
  %count.01317 = phi i64 [ %add336, %if.end335 ], [ 0, %if.else292 ]
  %zero_count.01316 = phi i64 [ %zero_count.0.add342, %if.end335 ], [ 0, %if.else292 ]
  %purpose308 = getelementptr inbounds %union.tree_node* %elt235.01318, i64 0, i32 0, i32 1
  %55 = load i8** %purpose308, align 8
  %cmp309 = icmp eq i8* %55, null
  br i1 %cmp309, label %if.end335, label %land.lhs.true311

land.lhs.true311:                                 ; preds = %for.body306
  %code313 = getelementptr inbounds i8* %55, i64 16
  %56 = bitcast i8* %code313 to i32*
  %bf.load314 = load i32* %56, align 8
  %bf.clear315 = and i32 %bf.load314, 255
  %cmp316 = icmp eq i32 %bf.clear315, 113
  br i1 %cmp316, label %if.then318, label %if.end335

if.then318:                                       ; preds = %land.lhs.true311
  %operands320 = getelementptr inbounds i8* %55, i64 32
  %arrayidx321 = bitcast i8* %operands320 to %union.tree_node**
  %57 = load %union.tree_node** %arrayidx321, align 8, !tbaa !1
  %arrayidx324 = getelementptr inbounds i8* %55, i64 40
  %58 = bitcast i8* %arrayidx324 to %union.tree_node**
  %59 = load %union.tree_node** %58, align 8, !tbaa !1
  %call325 = call i32 @host_integerp(%union.tree_node* %57, i32 1) #5
  %tobool326 = icmp eq i32 %call325, 0
  br i1 %tobool326, label %if.end360, label %lor.lhs.false327

lor.lhs.false327:                                 ; preds = %if.then318
  %call328 = call i32 @host_integerp(%union.tree_node* %59, i32 1) #5
  %tobool329 = icmp eq i32 %call328, 0
  br i1 %tobool329, label %if.end360, label %if.end331

if.end331:                                        ; preds = %lor.lhs.false327
  %call332 = call i64 @tree_low_cst(%union.tree_node* %59, i32 1) #5
  %call333 = call i64 @tree_low_cst(%union.tree_node* %57, i32 1) #5
  %sub = add i64 %call332, 1
  %add = sub i64 %sub, %call333
  br label %if.end335

if.end335:                                        ; preds = %land.lhs.true311, %for.body306, %if.end331
  %this_node_count.0 = phi i64 [ %add, %if.end331 ], [ 1, %for.body306 ], [ 1, %land.lhs.true311 ]
  %add336 = add nsw i64 %this_node_count.0, %count.01317
  %value338 = getelementptr inbounds %union.tree_node* %elt235.01318, i64 0, i32 0, i32 2
  %60 = bitcast i32* %value338 to %union.tree_node**
  %61 = load %union.tree_node** %60, align 8, !tbaa !53
  %call339 = call fastcc i32 @mostly_zeros_p(%union.tree_node* %61)
  %tobool340 = icmp eq i32 %call339, 0
  %add342 = select i1 %tobool340, i64 0, i64 %this_node_count.0
  %zero_count.0.add342 = add nsw i64 %add342, %zero_count.01316
  %chain346 = getelementptr inbounds %union.tree_node* %elt235.01318, i64 0, i32 0, i32 0, i32 0
  %elt235.0 = load %union.tree_node** %chain346, align 8
  %cmp298 = icmp eq %union.tree_node* %elt235.0, null
  br i1 %cmp298, label %for.cond297.for.end347_crit_edge, label %for.body306

for.cond297.for.end347_crit_edge:                 ; preds = %if.end335
  %phitmp1323 = shl i64 %zero_count.0.add342, 2
  br label %for.end347

for.end347:                                       ; preds = %for.cond297.for.end347_crit_edge, %if.else292
  %count.0.lcssa = phi i64 [ %add336, %for.cond297.for.end347_crit_edge ], [ 0, %if.else292 ]
  %zero_count.0.lcssa = phi i64 [ %phitmp1323, %for.cond297.for.end347_crit_edge ], [ 0, %if.else292 ]
  br i1 %51, label %land.lhs.true349, label %if.end360

land.lhs.true349:                                 ; preds = %for.end347
  %add351 = sub i64 %maxelt.0, %minelt.0
  %cmp352 = icmp sge i64 %count.0.lcssa, %add351
  %mul355 = mul nsw i64 %count.0.lcssa, 3
  %cmp356 = icmp slt i64 %zero_count.0.lcssa, %mul355
  %or.cond1327 = and i1 %cmp352, %cmp356
  %lnot.ext. = select i1 %or.cond1327, i32 %lnot.ext, i32 1
  br label %if.end360

if.end360:                                        ; preds = %if.then318, %lor.lhs.false327, %land.lhs.true349, %if.end277, %land.lhs.true284, %for.end347
  %need_to_clear.1 = phi i32 [ %lnot.ext, %for.end347 ], [ 1, %land.lhs.true284 ], [ 1, %if.end277 ], [ %lnot.ext., %land.lhs.true349 ], [ 1, %lor.lhs.false327 ], [ 1, %if.then318 ]
  %tobool361 = icmp ne i32 %need_to_clear.1, 0
  %cmp363 = icmp sgt i64 %size, 0
  %or.cond986 = and i1 %tobool361, %cmp363
  br i1 %or.cond986, label %if.then365, label %if.else384

if.then365:                                       ; preds = %if.end360
  br i1 %tobool278, label %if.end393, label %if.then367

if.then367:                                       ; preds = %if.then365
  %62 = getelementptr inbounds %struct.rtx_def* %target, i64 0, i32 0
  %bf.load368 = load i32* %62, align 8
  %bf.clear369 = and i32 %bf.load368, 65535
  %cmp370 = icmp eq i32 %bf.clear369, 61
  br i1 %cmp370, label %if.then372, label %if.else379

if.then372:                                       ; preds = %if.then367
  %bf.lshr374 = lshr i32 %bf.load368, 16
  %bf.clear375 = and i32 %bf.lshr374, 255
  %idxprom3761277 = zext i32 %bf.clear375 to i64
  %arrayidx377 = getelementptr inbounds [3 x [59 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0, i64 %idxprom3761277
  %63 = load %struct.rtx_def** %arrayidx377, align 8, !tbaa !1
  %call378 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %target, %struct.rtx_def* %63)
  br label %if.end393

if.else379:                                       ; preds = %if.then367
  %call380 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %size) #5
  %call381 = call %struct.rtx_def* @clear_storage(%struct.rtx_def* %target, %struct.rtx_def* %call380)
  br label %if.end393

if.else384:                                       ; preds = %if.end360
  %64 = getelementptr inbounds %struct.rtx_def* %target, i64 0, i32 0
  %bf.load385 = load i32* %64, align 8
  %bf.clear386 = and i32 %bf.load385, 65535
  %cmp387 = icmp eq i32 %bf.clear386, 61
  br i1 %cmp387, label %if.then389, label %if.end393

if.then389:                                       ; preds = %if.else384
  %call390 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %target) #5
  %call391 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call390) #5
  br label %if.end393

if.end393:                                        ; preds = %if.then365, %if.else379, %if.then372, %if.else384, %if.then389
  %cleared.addr.1 = phi i32 [ %cleared, %if.then389 ], [ %cleared, %if.else384 ], [ 1, %if.then372 ], [ 1, %if.else379 ], [ 1, %if.then365 ]
  %operands395 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx396 = getelementptr inbounds i32* %operands395, i64 2
  %65 = bitcast i32* %arrayidx396 to %union.tree_node**
  %elt235.11306 = load %union.tree_node** %65, align 8
  %tobool3981307 = icmp eq %union.tree_node* %elt235.11306, null
  br i1 %tobool3981307, label %if.end982, label %for.body399.lr.ph

for.body399.lr.ph:                                ; preds = %if.end393
  %tobool410 = icmp eq i32 %cleared.addr.1, 0
  %unsigned_flag417 = getelementptr inbounds %union.tree_node* %37, i64 0, i32 0, i32 0, i32 2
  %type421 = bitcast %union.tree_node* %37 to %struct.tree_type*
  %mode422 = getelementptr inbounds %struct.tree_type* %type421, i64 0, i32 6
  %size430 = getelementptr inbounds %union.tree_node* %37, i64 0, i32 0, i32 2
  %66 = bitcast i32* %size430 to %union.tree_node**
  %transparent_union_flag = getelementptr inbounds %struct.tree_type* %type236, i64 0, i32 6
  %unsigned_flag541 = getelementptr inbounds i8* %domain.0.in, i64 16
  %67 = bitcast i8* %unsigned_flag541 to i32*
  %68 = getelementptr inbounds %union.tree_node* %37, i64 0, i32 0, i32 4
  %tobool621 = icmp eq i64 %minelt.0, 0
  br label %for.body399

for.body399:                                      ; preds = %for.body399.lr.ph, %for.inc688
  %indvars.iv = phi i64 [ 0, %for.body399.lr.ph ], [ %indvars.iv.next, %for.inc688 ]
  %elt235.11312 = phi %union.tree_node* [ %elt235.11306, %for.body399.lr.ph ], [ %elt235.1, %for.inc688 ]
  %target.addr.01311 = phi %struct.rtx_def* [ %target, %for.body399.lr.ph ], [ %target.addr.4, %for.inc688 ]
  %value406 = getelementptr inbounds %union.tree_node* %elt235.11312, i64 0, i32 0, i32 2
  %69 = bitcast i32* %value406 to %union.tree_node**
  %70 = load %union.tree_node** %69, align 8, !tbaa !53
  %purpose409 = getelementptr inbounds %union.tree_node* %elt235.11312, i64 0, i32 0, i32 1
  %71 = load i8** %purpose409, align 8
  %72 = bitcast i8* %71 to %union.tree_node*
  br i1 %tobool410, label %if.end415, label %land.lhs.true411

land.lhs.true411:                                 ; preds = %for.body399
  %call412 = call fastcc i32 @is_zeros_p(%union.tree_node* %70)
  %tobool413 = icmp eq i32 %call412, 0
  br i1 %tobool413, label %if.end415, label %for.inc688

if.end415:                                        ; preds = %land.lhs.true411, %for.body399
  %bf.load418 = load i32* %unsigned_flag417, align 8
  %bf.lshr419 = lshr i32 %bf.load418, 13
  %bf.clear420 = and i32 %bf.lshr419, 1
  store i32 %bf.clear420, i32* %unsignedp403, align 4, !tbaa !21
  %bf.load423 = load i32* %mode422, align 4
  %bf.lshr424 = lshr i32 %bf.load423, 9
  %bf.clear425 = and i32 %bf.lshr424, 127
  %cmp426 = icmp eq i32 %bf.clear425, 51
  br i1 %cmp426, label %if.then428, label %if.else437

if.then428:                                       ; preds = %if.end415
  %73 = load %union.tree_node** %66, align 8, !tbaa !40
  %call431 = call i32 @host_integerp(%union.tree_node* %73, i32 1) #5
  %tobool432 = icmp eq i32 %call431, 0
  br i1 %tobool432, label %if.end441, label %cond.true

cond.true:                                        ; preds = %if.then428
  %74 = load %union.tree_node** %66, align 8, !tbaa !40
  %call435 = call i64 @tree_low_cst(%union.tree_node* %74, i32 1) #5
  br label %if.end441

if.else437:                                       ; preds = %if.end415
  %idxprom4381276 = zext i32 %bf.clear425 to i64
  %arrayidx439 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom4381276
  %75 = load i16* %arrayidx439, align 2, !tbaa !19
  %conv440 = zext i16 %75 to i64
  br label %if.end441

if.end441:                                        ; preds = %cond.true, %if.then428, %if.else437
  %bitsize401.0 = phi i64 [ %conv440, %if.else437 ], [ %call435, %cond.true ], [ -1, %if.then428 ]
  %cmp442 = icmp ne i8* %71, null
  br i1 %cmp442, label %land.lhs.true444, label %lor.lhs.false609

land.lhs.true444:                                 ; preds = %if.end441
  %code446 = getelementptr inbounds i8* %71, i64 16
  %76 = bitcast i8* %code446 to i32*
  %bf.load447 = load i32* %76, align 8
  %bf.clear448 = and i32 %bf.load447, 255
  %cmp449 = icmp eq i32 %bf.clear448, 113
  br i1 %cmp449, label %if.then451, label %land.lhs.true606

if.then451:                                       ; preds = %land.lhs.true444
  %operands454 = getelementptr inbounds i8* %71, i64 32
  %arrayidx455 = bitcast i8* %operands454 to %union.tree_node**
  %77 = load %union.tree_node** %arrayidx455, align 8, !tbaa !1
  %arrayidx459 = getelementptr inbounds i8* %71, i64 40
  %78 = bitcast i8* %arrayidx459 to %union.tree_node**
  %79 = load %union.tree_node** %78, align 8, !tbaa !1
  br i1 %51, label %land.lhs.true462, label %if.else536

land.lhs.true462:                                 ; preds = %if.then451
  %call463 = call i32 @host_integerp(%union.tree_node* %77, i32 0) #5
  %tobool464 = icmp eq i32 %call463, 0
  br i1 %tobool464, label %if.else536, label %land.lhs.true465

land.lhs.true465:                                 ; preds = %land.lhs.true462
  %call466 = call i32 @host_integerp(%union.tree_node* %79, i32 0) #5
  %tobool467 = icmp eq i32 %call466, 0
  br i1 %tobool467, label %if.else536, label %land.lhs.true468

land.lhs.true468:                                 ; preds = %land.lhs.true465
  %call469 = call i64 @tree_low_cst(%union.tree_node* %77, i32 0) #5
  %call470 = call i64 @tree_low_cst(%union.tree_node* %79, i32 0) #5
  %sub471 = sub nsw i64 %call470, %call469
  %add472 = add nsw i64 %sub471, 1
  %80 = getelementptr inbounds %struct.rtx_def* %target.addr.01311, i64 0, i32 0
  %bf.load473 = load i32* %80, align 8
  %bf.clear474 = and i32 %bf.load473, 65535
  %cmp475 = icmp ne i32 %bf.clear474, 66
  %cmp478 = icmp slt i64 %add472, 3
  %or.cond988 = or i1 %cmp475, %cmp478
  br i1 %or.cond988, label %if.then493, label %lor.rhs

lor.rhs:                                          ; preds = %land.lhs.true468
  %81 = load %union.tree_node** %66, align 8, !tbaa !40
  %call482 = call i32 @host_integerp(%union.tree_node* %81, i32 1) #5
  %tobool483 = icmp eq i32 %call482, 0
  br i1 %tobool483, label %if.else536, label %land.rhs484

land.rhs484:                                      ; preds = %lor.rhs
  %82 = load %union.tree_node** %66, align 8, !tbaa !40
  %call487 = call i64 @tree_low_cst(%union.tree_node* %82, i32 1) #5
  %mul488 = mul nsw i64 %call487, %add472
  %cmp489 = icmp slt i64 %mul488, 321
  br i1 %cmp489, label %if.then493, label %if.else536

if.then493:                                       ; preds = %land.lhs.true468, %land.rhs484
  %sub494 = sub nsw i64 %call469, %minelt.0
  %sub495 = sub nsw i64 %call470, %minelt.0
  %cmp4971303 = icmp sgt i64 %sub494, %sub495
  br i1 %cmp4971303, label %for.inc688, label %for.body499

for.body499:                                      ; preds = %if.then493, %if.end531
  %target.addr.11305 = phi %struct.rtx_def* [ %target.addr.2, %if.end531 ], [ %target.addr.01311, %if.then493 ]
  %lo.01304 = phi i64 [ %inc, %if.end531 ], [ %sub494, %if.then493 ]
  %83 = load %union.tree_node** %66, align 8, !tbaa !40
  %call502 = call i64 @tree_low_cst(%union.tree_node* %83, i32 0) #5
  %mul503 = mul nsw i64 %call502, %lo.01304
  %84 = getelementptr inbounds %struct.rtx_def* %target.addr.11305, i64 0, i32 0
  %bf.load504 = load i32* %84, align 8
  %85 = and i32 %bf.load504, 16842751
  %86 = icmp eq i32 %85, 66
  br i1 %86, label %land.lhs.true513, label %if.end531

land.lhs.true513:                                 ; preds = %for.body499
  %bf.load516 = load i32* %code, align 8
  %bf.clear517 = and i32 %bf.load516, 255
  %cmp518 = icmp eq i32 %bf.clear517, 18
  br i1 %cmp518, label %land.lhs.true520, label %if.end531

land.lhs.true520:                                 ; preds = %land.lhs.true513
  %bf.load522 = load i32* %transparent_union_flag, align 4
  %bf.clear524 = and i32 %bf.load522, 524288
  %tobool525 = icmp eq i32 %bf.clear524, 0
  br i1 %tobool525, label %if.end531, label %if.then526

if.then526:                                       ; preds = %land.lhs.true520
  %call527 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %target.addr.11305) #5
  %87 = getelementptr inbounds %struct.rtx_def* %call527, i64 0, i32 0
  %bf.load528 = load i32* %87, align 8
  %bf.set530 = or i32 %bf.load528, 16777216
  store i32 %bf.set530, i32* %87, align 8
  br label %if.end531

if.end531:                                        ; preds = %land.lhs.true520, %if.then526, %land.lhs.true513, %for.body499
  %target.addr.2 = phi %struct.rtx_def* [ %call527, %if.then526 ], [ %target.addr.11305, %land.lhs.true520 ], [ %target.addr.11305, %land.lhs.true513 ], [ %target.addr.11305, %for.body499 ]
  %call532 = call i64 @get_alias_set(%union.tree_node* %37) #5
  %conv533 = trunc i64 %call532 to i32
  call fastcc void @store_constructor_field(%struct.rtx_def* %target.addr.2, i64 %bitsize401.0, i64 %mul503, i32 %bf.clear425, %union.tree_node* %70, %union.tree_node* %0, i32 %cleared.addr.1, i32 %conv533)
  %inc = add nsw i64 %lo.01304, 1
  %cmp497 = icmp slt i64 %lo.01304, %sub495
  br i1 %cmp497, label %for.body499, label %for.inc688

if.else536:                                       ; preds = %lor.rhs, %land.lhs.true465, %land.lhs.true462, %land.rhs484, %if.then451
  %call537 = call %struct.rtx_def* @expand_expr(%union.tree_node* %79, %struct.rtx_def* null, i32 0, i32 0)
  %call538 = call %struct.rtx_def* @gen_label_rtx() #5
  %call539 = call %struct.rtx_def* @gen_label_rtx() #5
  %bf.load542 = load i32* %67, align 8
  %bf.lshr543 = lshr i32 %bf.load542, 13
  %bf.clear544 = and i32 %bf.lshr543, 1
  store i32 %bf.clear544, i32* %unsignedp403, align 4, !tbaa !21
  %call545 = call %union.tree_node* @build_decl(i32 34, %union.tree_node* null, %union.tree_node* %domain.0) #5
  %mode547 = getelementptr inbounds %union.tree_node* %call545, i64 0, i32 0, i32 5
  %88 = bitcast i48* %mode547 to i64*
  %bf.load548 = load i64* %88, align 8
  %bf.load548.tr = trunc i64 %bf.load548 to i32
  %bf.cast550 = and i32 %bf.load548.tr, 255
  %call551 = call i32 @promote_mode(%union.tree_node* %domain.0, i32 %bf.cast550, i32* %unsignedp403, i32 0) #5
  %call552 = call %struct.rtx_def* @gen_reg_rtx(i32 %call551) #5
  %rtl = getelementptr inbounds %union.tree_node* %call545, i64 0, i32 0, i32 17
  store %struct.rtx_def* %call552, %struct.rtx_def** %rtl, align 8, !tbaa !37
  %code555 = getelementptr inbounds %union.tree_node* %70, i64 0, i32 0, i32 0, i32 2
  %bf.load556 = load i32* %code555, align 8
  %bf.clear557 = and i32 %bf.load556, 255
  %cmp558 = icmp eq i32 %bf.clear557, 118
  br i1 %cmp558, label %land.lhs.true560, label %if.end568

land.lhs.true560:                                 ; preds = %if.else536
  %operands562 = getelementptr inbounds %union.tree_node* %70, i64 0, i32 0, i32 2
  %arrayidx563 = getelementptr inbounds i32* %operands562, i64 4
  %89 = bitcast i32* %arrayidx563 to %struct.rtx_def**
  %90 = load %struct.rtx_def** %89, align 8, !tbaa !1
  %cmp564 = icmp eq %struct.rtx_def* %90, null
  br i1 %cmp564, label %if.then566, label %if.end568

if.then566:                                       ; preds = %land.lhs.true560
  %91 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call567 = call %struct.rtx_def* @expand_expr(%union.tree_node* %70, %struct.rtx_def* %91, i32 0, i32 0)
  %92 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr30.i = getelementptr inbounds %struct.function* %92, i64 0, i32 2
  %93 = load %struct.expr_status** %expr30.i, align 8, !tbaa !6
  %x_pending_chain31.i = getelementptr inbounds %struct.expr_status* %93, i64 0, i32 6
  %94 = load %struct.rtx_def** %x_pending_chain31.i, align 8, !tbaa !11
  %tobool32.i = icmp eq %struct.rtx_def* %94, null
  br i1 %tobool32.i, label %if.end568, label %while.body.i

while.body.i:                                     ; preds = %if.then566, %if.end.i
  %95 = phi %struct.rtx_def* [ %107, %if.end.i ], [ %94, %if.then566 ]
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %95, i64 0, i32 1, i64 3
  %rtx.i = bitcast %union.rtunion_def* %arrayidx.i to %struct.rtx_def**
  %96 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !1
  %97 = getelementptr inbounds %struct.rtx_def* %96, i64 0, i32 0
  %bf.load.i = load i32* %97, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  %cmp.i = icmp eq i32 %bf.clear.i, 24
  br i1 %cmp.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %while.body.i
  %arrayidx5.i = getelementptr inbounds %struct.rtx_def* %96, i64 0, i32 1, i64 0
  %rtvec.i = bitcast %union.rtunion_def* %arrayidx5.i to %struct.rtvec_def**
  %98 = load %struct.rtvec_def** %rtvec.i, align 8, !tbaa !1
  %arrayidx6.i = getelementptr inbounds %struct.rtvec_def* %98, i64 0, i32 1, i64 0
  %99 = load %struct.rtx_def** %arrayidx6.i, align 8, !tbaa !1
  %100 = getelementptr inbounds %struct.rtx_def* %95, i64 0, i32 1, i64 1, i32 0
  %.c.i = ptrtoint %struct.rtx_def* %99 to i64
  store i64 %.c.i, i64* %100, align 8, !tbaa !1
  %call.i1284 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %96) #5
  br label %if.end.i

if.else.i:                                        ; preds = %while.body.i
  %call16.i = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %96) #5
  %101 = getelementptr inbounds %struct.rtx_def* %95, i64 0, i32 1, i64 1, i32 0
  %call16.c.i = ptrtoint %struct.rtx_def* %call16.i to i64
  store i64 %call16.c.i, i64* %101, align 8, !tbaa !1
  br label %if.end.i

if.end.i:                                         ; preds = %if.else.i, %if.then.i
  %arrayidx21.i = getelementptr inbounds %struct.rtx_def* %95, i64 0, i32 1, i64 4
  %rtx22.i = bitcast %union.rtunion_def* %arrayidx21.i to %struct.rtx_def**
  %102 = load %struct.rtx_def** %rtx22.i, align 8, !tbaa !1
  %103 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr23.i = getelementptr inbounds %struct.function* %103, i64 0, i32 2
  %104 = load %struct.expr_status** %expr23.i, align 8, !tbaa !6
  %x_pending_chain24.i = getelementptr inbounds %struct.expr_status* %104, i64 0, i32 6
  store %struct.rtx_def* %102, %struct.rtx_def** %x_pending_chain24.i, align 8, !tbaa !11
  %105 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr.i = getelementptr inbounds %struct.function* %105, i64 0, i32 2
  %106 = load %struct.expr_status** %expr.i, align 8, !tbaa !6
  %x_pending_chain.i = getelementptr inbounds %struct.expr_status* %106, i64 0, i32 6
  %107 = load %struct.rtx_def** %x_pending_chain.i, align 8, !tbaa !11
  %tobool.i = icmp eq %struct.rtx_def* %107, null
  br i1 %tobool.i, label %if.end568, label %while.body.i

if.end568:                                        ; preds = %if.end.i, %if.then566, %land.lhs.true560, %if.else536
  %call569 = call %struct.rtx_def* @store_expr(%union.tree_node* %77, %struct.rtx_def* %call552, i32 0)
  %call570 = call %struct.nesting* @expand_start_loop(i32 0) #5
  %108 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 1), align 8, !tbaa !1
  %type572 = getelementptr inbounds %union.tree_node* %call545, i64 0, i32 0, i32 0, i32 1
  %109 = load %union.tree_node** %type572, align 8, !tbaa !36
  %110 = load %union.tree_node** %43, align 8, !tbaa !58
  %call575 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 60, %union.tree_node* %109, %union.tree_node* %call545, %union.tree_node* %110) #5
  %call576 = call %union.tree_node* @fold(%union.tree_node* %call575) #5
  %call577 = call %union.tree_node* @convert(%union.tree_node* %108, %union.tree_node* %call576) #5
  %111 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 1), align 8, !tbaa !1
  %112 = load %union.tree_node** %68, align 8, !tbaa !55
  %call579 = call %union.tree_node* @convert(%union.tree_node* %111, %union.tree_node* %112) #5
  %call580 = call %union.tree_node* @size_binop(i32 61, %union.tree_node* %call577, %union.tree_node* %call579) #5
  %call581 = call %struct.rtx_def* @expand_expr(%union.tree_node* %call580, %struct.rtx_def* null, i32 0, i32 0)
  %call582 = call fastcc i64 @highest_pow2_factor(%union.tree_node* %call580)
  %call583 = call %struct.rtx_def* @offset_address(%struct.rtx_def* %target.addr.01311, %struct.rtx_def* %call581, i64 %call582) #5
  %call584 = call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %call583, i32 %bf.clear425, i64 0, i32 1, i32 1) #5
  %bf.load587 = load i32* %code555, align 8
  %bf.clear588 = and i32 %bf.load587, 255
  %cmp589 = icmp eq i32 %bf.clear588, 46
  br i1 %cmp589, label %if.then591, label %if.else592

if.then591:                                       ; preds = %if.end568
  %div = sdiv i64 %bitsize401.0, 8
  call fastcc void @store_constructor(%union.tree_node* %70, %struct.rtx_def* %call584, i32 %cleared.addr.1, i64 %div)
  br label %if.end594

if.else592:                                       ; preds = %if.end568
  %call593 = call %struct.rtx_def* @store_expr(%union.tree_node* %70, %struct.rtx_def* %call584, i32 0)
  br label %if.end594

if.end594:                                        ; preds = %if.else592, %if.then591
  %113 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call595 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 97, %union.tree_node* %113, %union.tree_node* %call545, %union.tree_node* %79) #5
  %call596 = call i32 @expand_exit_loop_if_false(%struct.nesting* %call570, %union.tree_node* %call595) #5
  %114 = load %union.tree_node** %type572, align 8, !tbaa !36
  %115 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 12), align 8, !tbaa !1
  %call599 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 130, %union.tree_node* %114, %union.tree_node* %call545, %union.tree_node* %115) #5
  %call600 = call fastcc %struct.rtx_def* @expand_increment(%union.tree_node* %call599, i32 0, i32 0)
  call void @expand_end_loop() #5
  %call601 = call %struct.rtx_def* @emit_label(%struct.rtx_def* %call539) #5
  br label %for.inc688

land.lhs.true606:                                 ; preds = %land.lhs.true444
  %call607 = call i32 @host_integerp(%union.tree_node* %72, i32 0) #5
  %tobool608 = icmp eq i32 %call607, 0
  br i1 %tobool608, label %if.end620, label %lor.lhs.false609

lor.lhs.false609:                                 ; preds = %if.end441, %land.lhs.true606
  %116 = load %union.tree_node** %66, align 8, !tbaa !40
  %call612 = call i32 @host_integerp(%union.tree_node* %116, i32 1) #5
  %tobool613 = icmp eq i32 %call612, 0
  br i1 %tobool613, label %if.then614, label %if.else638

if.then614:                                       ; preds = %lor.lhs.false609
  %cmp616 = icmp eq i8* %71, null
  br i1 %cmp616, label %if.then618, label %if.end620

if.then618:                                       ; preds = %if.then614
  %call619 = call %union.tree_node* @size_int_wide(i64 1, i32 1) #5
  br label %if.end620

if.end620:                                        ; preds = %land.lhs.true606, %if.then618, %if.then614
  %index407.0 = phi %union.tree_node* [ %call619, %if.then618 ], [ %72, %if.then614 ], [ %72, %land.lhs.true606 ]
  br i1 %tobool621, label %if.end628, label %if.then622

if.then622:                                       ; preds = %if.end620
  %117 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 1), align 8, !tbaa !1
  %118 = load %union.tree_node** %43, align 8, !tbaa !58
  %call625 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 60, %union.tree_node* %index407.0, %union.tree_node* %118) #5
  %call626 = call %union.tree_node* @fold(%union.tree_node* %call625) #5
  %call627 = call %union.tree_node* @convert(%union.tree_node* %117, %union.tree_node* %call626) #5
  br label %if.end628

if.end628:                                        ; preds = %if.end620, %if.then622
  %index407.1 = phi %union.tree_node* [ %call627, %if.then622 ], [ %index407.0, %if.end620 ]
  %119 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 1), align 8, !tbaa !1
  %120 = load %union.tree_node** %68, align 8, !tbaa !55
  %call631 = call %union.tree_node* @convert(%union.tree_node* %119, %union.tree_node* %120) #5
  %call632 = call %union.tree_node* @size_binop(i32 61, %union.tree_node* %index407.1, %union.tree_node* %call631) #5
  %call633 = call %struct.rtx_def* @expand_expr(%union.tree_node* %call632, %struct.rtx_def* null, i32 0, i32 0)
  %call634 = call fastcc i64 @highest_pow2_factor(%union.tree_node* %call632)
  %call635 = call %struct.rtx_def* @offset_address(%struct.rtx_def* %target.addr.01311, %struct.rtx_def* %call633, i64 %call634) #5
  %call636 = call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %call635, i32 %bf.clear425, i64 0, i32 1, i32 1) #5
  %call637 = call %struct.rtx_def* @store_expr(%union.tree_node* %70, %struct.rtx_def* %call636, i32 0)
  br label %for.inc688

if.else638:                                       ; preds = %lor.lhs.false609
  br i1 %cmp442, label %if.then641, label %if.else648

if.then641:                                       ; preds = %if.else638
  %call642 = call i64 @tree_low_cst(%union.tree_node* %72, i32 0) #5
  %sub643 = sub nsw i64 %call642, %minelt.0
  %121 = load %union.tree_node** %66, align 8, !tbaa !40
  %call646 = call i64 @tree_low_cst(%union.tree_node* %121, i32 1) #5
  %mul647 = mul nsw i64 %call646, %sub643
  br label %if.end654

if.else648:                                       ; preds = %if.else638
  %122 = load %union.tree_node** %66, align 8, !tbaa !40
  %call652 = call i64 @tree_low_cst(%union.tree_node* %122, i32 1) #5
  %mul653 = mul nsw i64 %call652, %indvars.iv
  br label %if.end654

if.end654:                                        ; preds = %if.else648, %if.then641
  %bitpos402.0 = phi i64 [ %mul647, %if.then641 ], [ %mul653, %if.else648 ]
  %123 = getelementptr inbounds %struct.rtx_def* %target.addr.01311, i64 0, i32 0
  %bf.load655 = load i32* %123, align 8
  %124 = and i32 %bf.load655, 16842751
  %125 = icmp eq i32 %124, 66
  br i1 %125, label %land.lhs.true664, label %if.end683

land.lhs.true664:                                 ; preds = %if.end654
  %bf.load667 = load i32* %code, align 8
  %bf.clear668 = and i32 %bf.load667, 255
  %cmp669 = icmp eq i32 %bf.clear668, 18
  br i1 %cmp669, label %land.lhs.true671, label %if.end683

land.lhs.true671:                                 ; preds = %land.lhs.true664
  %bf.load674 = load i32* %transparent_union_flag, align 4
  %bf.clear676 = and i32 %bf.load674, 524288
  %tobool677 = icmp eq i32 %bf.clear676, 0
  br i1 %tobool677, label %if.end683, label %if.then678

if.then678:                                       ; preds = %land.lhs.true671
  %call679 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %target.addr.01311) #5
  %126 = getelementptr inbounds %struct.rtx_def* %call679, i64 0, i32 0
  %bf.load680 = load i32* %126, align 8
  %bf.set682 = or i32 %bf.load680, 16777216
  store i32 %bf.set682, i32* %126, align 8
  br label %if.end683

if.end683:                                        ; preds = %land.lhs.true671, %if.then678, %land.lhs.true664, %if.end654
  %target.addr.3 = phi %struct.rtx_def* [ %call679, %if.then678 ], [ %target.addr.01311, %land.lhs.true671 ], [ %target.addr.01311, %land.lhs.true664 ], [ %target.addr.01311, %if.end654 ]
  %call684 = call i64 @get_alias_set(%union.tree_node* %37) #5
  %conv685 = trunc i64 %call684 to i32
  call fastcc void @store_constructor_field(%struct.rtx_def* %target.addr.3, i64 %bitsize401.0, i64 %bitpos402.0, i32 %bf.clear425, %union.tree_node* %70, %union.tree_node* %0, i32 %cleared.addr.1, i32 %conv685)
  br label %for.inc688

for.inc688:                                       ; preds = %if.end531, %if.then493, %land.lhs.true411, %if.end594, %if.end683, %if.end628
  %target.addr.4 = phi %struct.rtx_def* [ %target.addr.01311, %land.lhs.true411 ], [ %target.addr.01311, %if.end594 ], [ %target.addr.3, %if.end683 ], [ %target.addr.01311, %if.end628 ], [ %target.addr.01311, %if.then493 ], [ %target.addr.2, %if.end531 ]
  %chain690 = getelementptr inbounds %union.tree_node* %elt235.11312, i64 0, i32 0, i32 0, i32 0
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %elt235.1 = load %union.tree_node** %chain690, align 8
  %tobool398 = icmp eq %union.tree_node* %elt235.1, null
  br i1 %tobool398, label %if.end982, label %for.body399

if.then700:                                       ; preds = %entry
  %operands703 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx704 = getelementptr inbounds i32* %operands703, i64 2
  %127 = bitcast i32* %arrayidx704 to %union.tree_node**
  %128 = load %union.tree_node** %127, align 8, !tbaa !1
  %call705 = call i64 @int_size_in_bytes(%union.tree_node* %0) #5
  %cmp709 = icmp eq %union.tree_node* %128, null
  %cmp712 = icmp sgt i64 %size, 0
  %or.cond990 = and i1 %cmp709, %cmp712
  br i1 %or.cond990, label %if.then714, label %if.end720

if.then714:                                       ; preds = %if.then700
  %tobool715 = icmp eq i32 %cleared, 0
  br i1 %tobool715, label %if.then716, label %if.end982

if.then716:                                       ; preds = %if.then714
  %call717 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %size) #5
  %call718 = call %struct.rtx_def* @clear_storage(%struct.rtx_def* %target, %struct.rtx_def* %call717)
  br label %if.end982

if.end720:                                        ; preds = %if.then700
  %values708 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 1
  %129 = load i8** %values708, align 8
  %130 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !1
  %minval722 = getelementptr inbounds i8* %129, i64 104
  %131 = bitcast i8* %minval722 to %union.tree_node**
  %132 = load %union.tree_node** %131, align 8, !tbaa !58
  %call723 = call %union.tree_node* @convert(%union.tree_node* %130, %union.tree_node* %132) #5
  %133 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !1
  %maxval725 = getelementptr inbounds i8* %129, i64 112
  %134 = bitcast i8* %maxval725 to %union.tree_node**
  %135 = load %union.tree_node** %134, align 8, !tbaa !59
  %call726 = call %union.tree_node* @convert(%union.tree_node* %133, %union.tree_node* %135) #5
  %call727 = call %union.tree_node* @size_diffop(%union.tree_node* %call726, %union.tree_node* %call723) #5
  %call728 = call %union.tree_node* @size_int_wide(i64 1, i32 1) #5
  %call729 = call %union.tree_node* @size_binop(i32 59, %union.tree_node* %call727, %union.tree_node* %call728) #5
  %call730 = call i64 @tree_low_cst(%union.tree_node* %call729, i32 1) #5
  %136 = getelementptr inbounds %struct.rtx_def* %target, i64 0, i32 0
  %bf.load731 = load i32* %136, align 8
  %bf.clear733 = and i32 %bf.load731, 16711680
  %cmp734 = icmp eq i32 %bf.clear733, 3342336
  br i1 %cmp734, label %lor.lhs.false736, label %if.then752

lor.lhs.false736:                                 ; preds = %if.end720
  %137 = load i32* @target_flags, align 4, !tbaa !21
  %138 = lshr i32 %137, 19
  %139 = and i32 %138, 64
  %mul740 = add i32 %139, 64
  %conv7411273 = zext i32 %mul740 to i64
  %cmp742 = icmp ugt i64 %call730, %conv7411273
  br i1 %cmp742, label %lor.lhs.false744, label %if.then752

lor.lhs.false744:                                 ; preds = %lor.lhs.false736
  %cmp745 = icmp ult i64 %call705, 33
  br i1 %cmp745, label %land.lhs.true747, label %if.else809

land.lhs.true747:                                 ; preds = %lor.lhs.false744
  %chain749 = getelementptr inbounds %union.tree_node* %128, i64 0, i32 0, i32 0, i32 0
  %140 = load %union.tree_node** %chain749, align 8, !tbaa !34
  %cmp750 = icmp eq %union.tree_node* %140, null
  br i1 %cmp750, label %if.else809, label %if.then752

if.then752:                                       ; preds = %land.lhs.true747, %lor.lhs.false736, %if.end720
  %141 = load %union.tree_node** %type1, align 8, !tbaa !36
  %align = getelementptr inbounds %union.tree_node* %141, i64 0, i32 0, i32 7
  %142 = bitcast %union.tree_node** %align to i32*
  %143 = load i32* %142, align 4, !tbaa !62
  %call757 = call i32 @mode_for_size(i32 %143, i32 1, i32 1) #5
  %144 = alloca i8, i64 %call730, align 1
  %conv759 = trunc i64 %call730 to i32
  %call760 = call %union.tree_node* @get_set_constructor_bits(%union.tree_node* %exp, i8* %144, i32 %conv759) #5
  %tobool780 = icmp ne i32 %cleared, 0
  %div805 = lshr i32 %143, 3
  br label %for.cond761.outer

for.cond761.outer:                                ; preds = %if.end804, %if.then752
  %ibit.0.ph = phi i32 [ 0, %if.then752 ], [ %inc769, %if.end804 ]
  %offset758.0.ph = phi i32 [ 0, %if.then752 ], [ %add806, %if.end804 ]
  br label %for.cond761

for.cond761:                                      ; preds = %for.cond761.outer, %if.end767
  %word.0 = phi i64 [ %word.1, %if.end767 ], [ 0, %for.cond761.outer ]
  %bit_pos.0 = phi i32 [ %inc768, %if.end767 ], [ 0, %for.cond761.outer ]
  %ibit.0 = phi i32 [ %inc769, %if.end767 ], [ %ibit.0.ph, %for.cond761.outer ]
  %idxprom762 = zext i32 %ibit.0 to i64
  %arrayidx763 = getelementptr inbounds i8* %144, i64 %idxprom762
  %145 = load i8* %arrayidx763, align 1, !tbaa !5
  %tobool764 = icmp eq i8 %145, 0
  br i1 %tobool764, label %if.end767, label %if.then765

if.then765:                                       ; preds = %for.cond761
  %shl = shl i32 1, %bit_pos.0
  %conv766 = sext i32 %shl to i64
  %or = or i64 %conv766, %word.0
  br label %if.end767

if.end767:                                        ; preds = %for.cond761, %if.then765
  %word.1 = phi i64 [ %or, %if.then765 ], [ %word.0, %for.cond761 ]
  %inc768 = add i32 %bit_pos.0, 1
  %inc769 = add i32 %ibit.0, 1
  %cmp770 = icmp uge i32 %inc768, %143
  %conv773 = zext i32 %inc769 to i64
  %cmp774 = icmp eq i64 %conv773, %call730
  %or.cond1283 = or i1 %cmp770, %cmp774
  br i1 %or.cond1283, label %if.then776, label %for.cond761

if.then776:                                       ; preds = %if.end767
  %cmp777 = icmp eq i64 %word.1, 0
  %or.cond992 = and i1 %cmp777, %tobool780
  br i1 %or.cond992, label %if.end799, label %if.then781

if.then781:                                       ; preds = %if.then776
  %call782 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %word.1) #5
  %bf.load784 = load i32* %136, align 8
  %bf.clear785 = and i32 %bf.load784, 65535
  %cmp786 = icmp eq i32 %bf.clear785, 66
  br i1 %cmp786, label %if.then788, label %if.else791

if.then788:                                       ; preds = %if.then781
  %conv789 = zext i32 %offset758.0.ph to i64
  %call790 = call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %target, i32 %call757, i64 %conv789, i32 1, i32 1) #5
  br label %if.end797

if.else791:                                       ; preds = %if.then781
  %cmp792 = icmp eq i32 %offset758.0.ph, 0
  br i1 %cmp792, label %if.end797, label %if.else795

if.else795:                                       ; preds = %if.else791
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 4905, i8* getelementptr inbounds ([18 x i8]* @__FUNCTION__.store_constructor, i64 0, i64 0)) #8
  unreachable

if.end797:                                        ; preds = %if.else791, %if.then788
  %to_rtx783.0 = phi %struct.rtx_def* [ %call790, %if.then788 ], [ %target, %if.else791 ]
  %call798 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %to_rtx783.0, %struct.rtx_def* %call782)
  br label %if.end799

if.end799:                                        ; preds = %if.then776, %if.end797
  br i1 %cmp774, label %for.cond851.preheader, label %if.end804

if.end804:                                        ; preds = %if.end799
  %add806 = add i32 %offset758.0.ph, %div805
  br label %for.cond761.outer

if.else809:                                       ; preds = %land.lhs.true747, %lor.lhs.false744
  %tobool810 = icmp eq i32 %cleared, 0
  br i1 %tobool810, label %if.then811, label %for.cond851.preheader

if.then811:                                       ; preds = %if.else809
  %chain813 = getelementptr inbounds %union.tree_node* %128, i64 0, i32 0, i32 0, i32 0
  %146 = load %union.tree_node** %chain813, align 8, !tbaa !34
  %cmp814 = icmp eq %union.tree_node* %146, null
  br i1 %cmp814, label %lor.lhs.false816, label %if.then845

lor.lhs.false816:                                 ; preds = %if.then811
  %purpose818 = getelementptr inbounds %union.tree_node* %128, i64 0, i32 0, i32 1
  %147 = load i8** %purpose818, align 8
  %cmp819 = icmp eq i8* %147, null
  br i1 %cmp819, label %cond.true821, label %cond.false824

cond.true821:                                     ; preds = %lor.lhs.false816
  %cmp822 = icmp eq i64 %call730, 1
  br i1 %cmp822, label %for.cond851.preheader, label %if.then845

cond.false824:                                    ; preds = %lor.lhs.false816
  %value826 = getelementptr inbounds %union.tree_node* %128, i64 0, i32 0, i32 2
  %148 = bitcast i32* %value826 to %union.tree_node**
  %149 = load %union.tree_node** %148, align 8, !tbaa !53
  %call827 = call i32 @host_integerp(%union.tree_node* %149, i32 0) #5
  %tobool828 = icmp eq i32 %call827, 0
  br i1 %tobool828, label %if.then845, label %lor.lhs.false829

lor.lhs.false829:                                 ; preds = %cond.false824
  %150 = load i8** %purpose818, align 8
  %151 = bitcast i8* %150 to %union.tree_node*
  %call832 = call i32 @host_integerp(%union.tree_node* %151, i32 0) #5
  %tobool833 = icmp eq i32 %call832, 0
  br i1 %tobool833, label %if.then845, label %lor.lhs.false834

lor.lhs.false834:                                 ; preds = %lor.lhs.false829
  %152 = load %union.tree_node** %148, align 8, !tbaa !53
  %call837 = call i64 @tree_low_cst(%union.tree_node* %152, i32 0) #5
  %153 = load i8** %purpose818, align 8
  %154 = bitcast i8* %153 to %union.tree_node*
  %call840 = call i64 @tree_low_cst(%union.tree_node* %154, i32 0) #5
  %sub841 = add i64 %call837, 1
  %add842 = sub i64 %sub841, %call840
  %cmp843 = icmp eq i64 %add842, %call730
  br i1 %cmp843, label %for.cond851.preheader, label %if.then845

if.then845:                                       ; preds = %cond.true821, %lor.lhs.false834, %lor.lhs.false829, %cond.false824, %if.then811
  %call846 = call %struct.rtx_def* @expr_size(%union.tree_node* %exp) #5
  %call847 = call %struct.rtx_def* @clear_storage(%struct.rtx_def* %target, %struct.rtx_def* %call846)
  br label %for.cond851.preheader

for.cond851.preheader:                            ; preds = %if.end799, %if.then845, %if.else809, %lor.lhs.false834, %cond.true821
  %elt701.0.ph = phi %union.tree_node* [ %128, %cond.true821 ], [ %128, %lor.lhs.false834 ], [ %128, %if.else809 ], [ %128, %if.then845 ], [ %call760, %if.end799 ]
  %cmp8521321 = icmp eq %union.tree_node* %elt701.0.ph, null
  br i1 %cmp8521321, label %if.end982, label %for.body854

for.body854:                                      ; preds = %for.cond851.preheader, %for.inc975
  %elt701.01322 = phi %union.tree_node* [ %179, %for.inc975 ], [ %elt701.0.ph, %for.cond851.preheader ]
  %purpose856 = getelementptr inbounds %union.tree_node* %elt701.01322, i64 0, i32 0, i32 1
  %155 = load i8** %purpose856, align 8
  %156 = bitcast i8* %155 to %union.tree_node*
  %value858 = getelementptr inbounds %union.tree_node* %elt701.01322, i64 0, i32 0, i32 2
  %157 = bitcast i32* %value858 to %union.tree_node**
  %158 = load %union.tree_node** %157, align 8, !tbaa !53
  %call859 = call %struct.rtx_def* @expand_expr(%union.tree_node* %call729, %struct.rtx_def* null, i32 66, i32 2)
  %cmp860 = icmp eq i8* %155, null
  br i1 %cmp860, label %if.then862, label %if.end864

if.then862:                                       ; preds = %for.body854
  %call863 = call %union.tree_node* @save_expr(%union.tree_node* %158) #5
  br label %if.end864

if.end864:                                        ; preds = %if.then862, %for.body854
  %startbit.0 = phi %union.tree_node* [ %call863, %if.then862 ], [ %156, %for.body854 ]
  %endbit.0 = phi %union.tree_node* [ %call863, %if.then862 ], [ %158, %for.body854 ]
  %159 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !1
  %call865 = call %union.tree_node* @convert(%union.tree_node* %159, %union.tree_node* %startbit.0) #5
  %160 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !1
  %call866 = call %union.tree_node* @convert(%union.tree_node* %160, %union.tree_node* %endbit.0) #5
  %call867 = call i32 @integer_zerop(%union.tree_node* %call723) #5
  %tobool868 = icmp eq i32 %call867, 0
  br i1 %tobool868, label %if.then869, label %if.end872

if.then869:                                       ; preds = %if.end864
  %call870 = call %union.tree_node* @size_binop(i32 60, %union.tree_node* %call865, %union.tree_node* %call723) #5
  %call871 = call %union.tree_node* @size_binop(i32 60, %union.tree_node* %call866, %union.tree_node* %call723) #5
  br label %if.end872

if.end872:                                        ; preds = %if.end864, %if.then869
  %startbit.1 = phi %union.tree_node* [ %call865, %if.end864 ], [ %call870, %if.then869 ]
  %endbit.1 = phi %union.tree_node* [ %call866, %if.end864 ], [ %call871, %if.then869 ]
  %call873 = call %struct.rtx_def* @expand_expr(%union.tree_node* %startbit.1, %struct.rtx_def* null, i32 66, i32 2)
  %call874 = call %struct.rtx_def* @expand_expr(%union.tree_node* %endbit.1, %struct.rtx_def* null, i32 66, i32 2)
  %bf.load875 = load i32* %136, align 8
  %bf.clear876 = and i32 %bf.load875, 65535
  switch i32 %bf.clear876, label %if.else893 [
    i32 61, label %if.then879
    i32 66, label %if.end895
  ]

if.then879:                                       ; preds = %if.end872
  %bf.lshr881 = lshr i32 %bf.load875, 16
  %bf.clear882 = and i32 %bf.lshr881, 255
  %call883 = call %union.tree_node* @type_for_mode(i32 %bf.clear882, i32 0) #5
  %call884 = call %union.tree_node* @build_qualified_type(%union.tree_node* %call883, i32 1) #5
  %call885 = call %struct.rtx_def* @assign_temp(%union.tree_node* %call884, i32 0, i32 1, i32 1) #5
  %call886 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call885, %struct.rtx_def* %target)
  br label %if.end895

if.else893:                                       ; preds = %if.end872
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 4975, i8* getelementptr inbounds ([18 x i8]* @__FUNCTION__.store_constructor, i64 0, i64 0)) #8
  unreachable

if.end895:                                        ; preds = %if.end872, %if.then879
  %targetx.0 = phi %struct.rtx_def* [ %call885, %if.then879 ], [ %target, %if.end872 ]
  %code897 = getelementptr inbounds %union.tree_node* %startbit.1, i64 0, i32 0, i32 0, i32 2
  %bf.load898 = load i32* %code897, align 8
  %bf.clear899 = and i32 %bf.load898, 255
  %cmp900 = icmp eq i32 %bf.clear899, 25
  br i1 %cmp900, label %land.lhs.true902, label %if.else941

land.lhs.true902:                                 ; preds = %if.end895
  %code904 = getelementptr inbounds %union.tree_node* %endbit.1, i64 0, i32 0, i32 0, i32 2
  %bf.load905 = load i32* %code904, align 8
  %bf.clear906 = and i32 %bf.load905, 255
  %cmp907 = icmp eq i32 %bf.clear906, 25
  br i1 %cmp907, label %land.lhs.true909, label %if.else941

land.lhs.true909:                                 ; preds = %land.lhs.true902
  %int_cst910 = getelementptr inbounds %union.tree_node* %startbit.1, i64 0, i32 0, i32 2
  %low = bitcast i32* %int_cst910 to i64*
  %161 = load i64* %low, align 8, !tbaa !42
  %rem1274 = and i64 %161, 7
  %cmp911 = icmp eq i64 %rem1274, 0
  br i1 %cmp911, label %land.lhs.true913, label %if.else941

land.lhs.true913:                                 ; preds = %land.lhs.true909
  %int_cst915 = getelementptr inbounds %union.tree_node* %endbit.1, i64 0, i32 0, i32 2
  %low916 = bitcast i32* %int_cst915 to i64*
  %162 = load i64* %low916, align 8, !tbaa !42
  %add917 = add i64 %162, 1
  %rem9181275 = and i64 %add917, 7
  %cmp919 = icmp eq i64 %rem9181275, 0
  br i1 %cmp919, label %if.then921, label %if.else941

if.then921:                                       ; preds = %land.lhs.true913
  %163 = load %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 16), align 8, !tbaa !1
  %arrayidx922 = getelementptr inbounds %struct.rtx_def* %targetx.0, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx922 to %struct.rtx_def**
  %164 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %div923 = sdiv i64 %161, 8
  %call924 = call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %164, i64 %div923) #5
  %165 = load i32* @target_flags, align 4, !tbaa !21
  %and925 = lshr i32 %165, 25
  %166 = and i32 %and925, 1
  %167 = or i32 %166, 4
  %168 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !tbaa !1
  %169 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %type928 = bitcast %union.tree_node* %169 to %struct.tree_type*
  %mode929 = getelementptr inbounds %struct.tree_type* %type928, i64 0, i32 6
  %bf.load930 = load i32* %mode929, align 4
  %bf.lshr931 = lshr i32 %bf.load930, 9
  %bf.clear932 = and i32 %bf.lshr931, 127
  %sub933 = sub nsw i64 %add917, %161
  %div934 = sdiv i64 %sub933, 8
  %call935 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %div934) #5
  %170 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !1
  %type936 = bitcast %union.tree_node* %170 to %struct.tree_type*
  %mode937 = getelementptr inbounds %struct.tree_type* %type936, i64 0, i32 6
  %bf.load938 = load i32* %mode937, align 4
  %bf.lshr939 = lshr i32 %bf.load938, 9
  %bf.clear940 = and i32 %bf.lshr939, 127
  call void (%struct.rtx_def*, i32, i32, i32, ...)* @emit_library_call(%struct.rtx_def* %163, i32 0, i32 0, i32 3, %struct.rtx_def* %call924, i32 %167, %struct.rtx_def* %168, i32 %bf.clear932, %struct.rtx_def* %call935, i32 %bf.clear940) #5
  br label %if.end967

if.else941:                                       ; preds = %land.lhs.true913, %land.lhs.true909, %land.lhs.true902, %if.end895
  %171 = load i32* @target_flags, align 4, !tbaa !21
  %and942 = lshr i32 %171, 25
  %172 = and i32 %and942, 1
  %173 = or i32 %172, 4
  %call945 = call %struct.rtx_def* @gen_rtx_fmt_s(i32 68, i32 %173, i8* getelementptr inbounds ([10 x i8]* @.str6, i64 0, i64 0)) #5
  %arrayidx947 = getelementptr inbounds %struct.rtx_def* %targetx.0, i64 0, i32 1, i64 0
  %rtx948 = bitcast %union.rtunion_def* %arrayidx947 to %struct.rtx_def**
  %174 = load %struct.rtx_def** %rtx948, align 8, !tbaa !1
  %175 = load i32* @target_flags, align 4, !tbaa !21
  %and949 = lshr i32 %175, 25
  %176 = and i32 %and949, 1
  %177 = or i32 %176, 4
  %178 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !1
  %type952 = bitcast %union.tree_node* %178 to %struct.tree_type*
  %mode953 = getelementptr inbounds %struct.tree_type* %type952, i64 0, i32 6
  %bf.load954 = load i32* %mode953, align 4
  %bf.lshr955 = lshr i32 %bf.load954, 9
  %bf.clear956 = and i32 %bf.lshr955, 127
  call void (%struct.rtx_def*, i32, i32, i32, ...)* @emit_library_call(%struct.rtx_def* %call945, i32 0, i32 0, i32 4, %struct.rtx_def* %174, i32 %177, %struct.rtx_def* %call859, i32 %bf.clear956, %struct.rtx_def* %call873, i32 %bf.clear956, %struct.rtx_def* %call874, i32 %bf.clear956) #5
  br label %if.end967

if.end967:                                        ; preds = %if.else941, %if.then921
  %bf.load968 = load i32* %136, align 8
  %bf.clear969 = and i32 %bf.load968, 65535
  %cmp970 = icmp eq i32 %bf.clear969, 61
  br i1 %cmp970, label %if.then972, label %for.inc975

if.then972:                                       ; preds = %if.end967
  %call973 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %target, %struct.rtx_def* %targetx.0)
  br label %for.inc975

for.inc975:                                       ; preds = %if.end967, %if.then972
  %chain977 = getelementptr inbounds %union.tree_node* %elt701.01322, i64 0, i32 0, i32 0, i32 0
  %179 = load %union.tree_node** %chain977, align 8, !tbaa !34
  %cmp852 = icmp eq %union.tree_node* %179, null
  br i1 %cmp852, label %if.end982, label %for.body854

if.else979:                                       ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 5009, i8* getelementptr inbounds ([18 x i8]* @__FUNCTION__.store_constructor, i64 0, i64 0)) #8
  unreachable

if.end982:                                        ; preds = %for.inc, %for.inc688, %for.inc975, %for.cond851.preheader, %if.end393, %if.end94, %if.then714, %if.then716
  ret void
}

; Function Attrs: nounwind uwtable
define %union.tree_node* @string_constant(%union.tree_node* nocapture readonly %arg, %union.tree_node** nocapture %ptr_offset) #0 {
entry:
  %0 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !1
  br label %while.cond

while.cond:                                       ; preds = %land.rhs, %entry
  %arg.addr.0 = phi %union.tree_node* [ %arg, %entry ], [ %1, %land.rhs ]
  %code = getelementptr inbounds %union.tree_node* %arg.addr.0, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %bf.clear.off = add i32 %bf.clear, -114
  %switch = icmp ult i32 %bf.clear.off, 3
  br i1 %switch, label %land.lhs.true, label %while.end

land.lhs.true:                                    ; preds = %while.cond
  %operands = getelementptr inbounds %union.tree_node* %arg.addr.0, i64 0, i32 0, i32 2
  %arrayidx = bitcast i32* %operands to %union.tree_node**
  %1 = load %union.tree_node** %arrayidx, align 8, !tbaa !1
  %cmp12 = icmp eq %union.tree_node* %1, %0
  br i1 %cmp12, label %return, label %land.rhs

land.rhs:                                         ; preds = %land.lhs.true
  %type = getelementptr inbounds %union.tree_node* %arg.addr.0, i64 0, i32 0, i32 0, i32 1
  %2 = load %union.tree_node** %type, align 8, !tbaa !36
  %type14 = bitcast %union.tree_node* %2 to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type* %type14, i64 0, i32 6
  %bf.load15 = load i32* %mode, align 4
  %type21 = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 0, i32 1
  %3 = load %union.tree_node** %type21, align 8, !tbaa !36
  %type22 = bitcast %union.tree_node* %3 to %struct.tree_type*
  %mode23 = getelementptr inbounds %struct.tree_type* %type22, i64 0, i32 6
  %bf.load24 = load i32* %mode23, align 4
  %bf.lshr234 = xor i32 %bf.load24, %bf.load15
  %4 = and i32 %bf.lshr234, 65024
  %cmp27 = icmp eq i32 %4, 0
  br i1 %cmp27, label %while.cond, label %return

while.end:                                        ; preds = %while.cond
  switch i32 %bf.clear, label %return [
    i32 121, label %land.lhs.true36
    i32 59, label %if.then53
  ]

land.lhs.true36:                                  ; preds = %while.end
  %operands38 = getelementptr inbounds %union.tree_node* %arg.addr.0, i64 0, i32 0, i32 2
  %arrayidx39 = bitcast i32* %operands38 to %union.tree_node**
  %5 = load %union.tree_node** %arrayidx39, align 8, !tbaa !1
  %code41 = getelementptr inbounds %union.tree_node* %5, i64 0, i32 0, i32 0, i32 2
  %bf.load42 = load i32* %code41, align 8
  %bf.clear43 = and i32 %bf.load42, 255
  %cmp44 = icmp eq i32 %bf.clear43, 29
  br i1 %cmp44, label %if.then, label %return

if.then:                                          ; preds = %land.lhs.true36
  %6 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 15), align 8, !tbaa !1
  store %union.tree_node* %6, %union.tree_node** %ptr_offset, align 8, !tbaa !1
  %7 = load %union.tree_node** %arrayidx39, align 8, !tbaa !1
  br label %return

if.then53:                                        ; preds = %while.end
  %operands55 = getelementptr inbounds %union.tree_node* %arg.addr.0, i64 0, i32 0, i32 2
  %arrayidx56 = bitcast i32* %operands55 to %union.tree_node**
  %8 = load %union.tree_node** %arrayidx56, align 8, !tbaa !1
  %arrayidx59 = getelementptr inbounds i32* %operands55, i64 2
  %9 = bitcast i32* %arrayidx59 to %union.tree_node**
  %10 = load %union.tree_node** %9, align 8, !tbaa !1
  br label %while.cond60

while.cond60:                                     ; preds = %land.rhs83, %if.then53
  %arg0.0 = phi %union.tree_node* [ %8, %if.then53 ], [ %11, %land.rhs83 ]
  %code62 = getelementptr inbounds %union.tree_node* %arg0.0, i64 0, i32 0, i32 0, i32 2
  %bf.load63 = load i32* %code62, align 8
  %bf.clear64 = and i32 %bf.load63, 255
  %bf.clear64.off = add i32 %bf.clear64, -114
  %switch236 = icmp ult i32 %bf.clear64.off, 3
  br i1 %switch236, label %land.lhs.true78, label %while.cond108

land.lhs.true78:                                  ; preds = %while.cond60
  %operands80 = getelementptr inbounds %union.tree_node* %arg0.0, i64 0, i32 0, i32 2
  %arrayidx81 = bitcast i32* %operands80 to %union.tree_node**
  %11 = load %union.tree_node** %arrayidx81, align 8, !tbaa !1
  %cmp82 = icmp eq %union.tree_node* %11, %0
  br i1 %cmp82, label %while.cond108, label %land.rhs83

land.rhs83:                                       ; preds = %land.lhs.true78
  %type85 = getelementptr inbounds %union.tree_node* %arg0.0, i64 0, i32 0, i32 0, i32 1
  %12 = load %union.tree_node** %type85, align 8, !tbaa !36
  %type86 = bitcast %union.tree_node* %12 to %struct.tree_type*
  %mode87 = getelementptr inbounds %struct.tree_type* %type86, i64 0, i32 6
  %bf.load88 = load i32* %mode87, align 4
  %type95 = getelementptr inbounds %union.tree_node* %11, i64 0, i32 0, i32 0, i32 1
  %13 = load %union.tree_node** %type95, align 8, !tbaa !36
  %type96 = bitcast %union.tree_node* %13 to %struct.tree_type*
  %mode97 = getelementptr inbounds %struct.tree_type* %type96, i64 0, i32 6
  %bf.load98 = load i32* %mode97, align 4
  %bf.lshr89233 = xor i32 %bf.load98, %bf.load88
  %14 = and i32 %bf.lshr89233, 65024
  %cmp101 = icmp eq i32 %14, 0
  br i1 %cmp101, label %while.cond60, label %while.cond108

while.cond108:                                    ; preds = %while.cond60, %land.lhs.true78, %land.rhs83, %land.rhs131
  %arg1.0 = phi %union.tree_node* [ %15, %land.rhs131 ], [ %10, %land.rhs83 ], [ %10, %land.lhs.true78 ], [ %10, %while.cond60 ]
  %code110 = getelementptr inbounds %union.tree_node* %arg1.0, i64 0, i32 0, i32 0, i32 2
  %bf.load111 = load i32* %code110, align 8
  %bf.clear112 = and i32 %bf.load111, 255
  %bf.clear112.off = add i32 %bf.clear112, -114
  %switch237 = icmp ult i32 %bf.clear112.off, 3
  br i1 %switch237, label %land.lhs.true126, label %while.end155

land.lhs.true126:                                 ; preds = %while.cond108
  %operands128 = getelementptr inbounds %union.tree_node* %arg1.0, i64 0, i32 0, i32 2
  %arrayidx129 = bitcast i32* %operands128 to %union.tree_node**
  %15 = load %union.tree_node** %arrayidx129, align 8, !tbaa !1
  %cmp130 = icmp eq %union.tree_node* %15, %0
  br i1 %cmp130, label %while.end155, label %land.rhs131

land.rhs131:                                      ; preds = %land.lhs.true126
  %type133 = getelementptr inbounds %union.tree_node* %arg1.0, i64 0, i32 0, i32 0, i32 1
  %16 = load %union.tree_node** %type133, align 8, !tbaa !36
  %type134 = bitcast %union.tree_node* %16 to %struct.tree_type*
  %mode135 = getelementptr inbounds %struct.tree_type* %type134, i64 0, i32 6
  %bf.load136 = load i32* %mode135, align 4
  %type143 = getelementptr inbounds %union.tree_node* %15, i64 0, i32 0, i32 0, i32 1
  %17 = load %union.tree_node** %type143, align 8, !tbaa !36
  %type144 = bitcast %union.tree_node* %17 to %struct.tree_type*
  %mode145 = getelementptr inbounds %struct.tree_type* %type144, i64 0, i32 6
  %bf.load146 = load i32* %mode145, align 4
  %bf.lshr137232 = xor i32 %bf.load146, %bf.load136
  %18 = and i32 %bf.lshr137232, 65024
  %cmp149 = icmp eq i32 %18, 0
  br i1 %cmp149, label %while.cond108, label %while.end155

while.end155:                                     ; preds = %while.cond108, %land.lhs.true126, %land.rhs131
  %cmp160 = icmp eq i32 %bf.clear64, 121
  br i1 %cmp160, label %land.lhs.true161, label %if.else174

land.lhs.true161:                                 ; preds = %while.end155
  %operands163 = getelementptr inbounds %union.tree_node* %arg0.0, i64 0, i32 0, i32 2
  %arrayidx164 = bitcast i32* %operands163 to %union.tree_node**
  %19 = load %union.tree_node** %arrayidx164, align 8, !tbaa !1
  %code166 = getelementptr inbounds %union.tree_node* %19, i64 0, i32 0, i32 0, i32 2
  %bf.load167 = load i32* %code166, align 8
  %bf.clear168 = and i32 %bf.load167, 255
  %cmp169 = icmp eq i32 %bf.clear168, 29
  br i1 %cmp169, label %if.then170, label %if.else174

if.then170:                                       ; preds = %land.lhs.true161
  %20 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !1
  %call = tail call %union.tree_node* @convert(%union.tree_node* %20, %union.tree_node* %arg1.0) #5
  store %union.tree_node* %call, %union.tree_node** %ptr_offset, align 8, !tbaa !1
  %21 = load %union.tree_node** %arrayidx164, align 8, !tbaa !1
  br label %return

if.else174:                                       ; preds = %land.lhs.true161, %while.end155
  %cmp179 = icmp eq i32 %bf.clear112, 121
  br i1 %cmp179, label %land.lhs.true180, label %return

land.lhs.true180:                                 ; preds = %if.else174
  %operands182 = getelementptr inbounds %union.tree_node* %arg1.0, i64 0, i32 0, i32 2
  %arrayidx183 = bitcast i32* %operands182 to %union.tree_node**
  %22 = load %union.tree_node** %arrayidx183, align 8, !tbaa !1
  %code185 = getelementptr inbounds %union.tree_node* %22, i64 0, i32 0, i32 0, i32 2
  %bf.load186 = load i32* %code185, align 8
  %bf.clear187 = and i32 %bf.load186, 255
  %cmp188 = icmp eq i32 %bf.clear187, 29
  br i1 %cmp188, label %if.then189, label %return

if.then189:                                       ; preds = %land.lhs.true180
  %23 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !1
  %call190 = tail call %union.tree_node* @convert(%union.tree_node* %23, %union.tree_node* %arg0.0) #5
  store %union.tree_node* %call190, %union.tree_node** %ptr_offset, align 8, !tbaa !1
  %24 = load %union.tree_node** %arrayidx183, align 8, !tbaa !1
  br label %return

return:                                           ; preds = %land.lhs.true, %land.rhs, %while.end, %land.lhs.true36, %land.lhs.true180, %if.else174, %if.then189, %if.then170, %if.then
  %retval.0 = phi %union.tree_node* [ %7, %if.then ], [ %21, %if.then170 ], [ %24, %if.then189 ], [ null, %if.else174 ], [ null, %land.lhs.true180 ], [ null, %land.lhs.true36 ], [ null, %while.end ], [ null, %land.rhs ], [ null, %land.lhs.true ]
  ret %union.tree_node* %retval.0
}

declare i32 @compare_tree_int(%union.tree_node*, i64) #1

declare i32 @readonly_fields_p(%union.tree_node*) #1

declare %union.tree_node* @size_diffop(%union.tree_node*, %union.tree_node*) #1

declare i32 @list_length(%union.tree_node*) #1

declare i32 @tree_int_cst_equal(%union.tree_node*, %union.tree_node*) #1

declare %struct.rtx_def* @expand_and(i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def*) #1

declare i32 @tree_int_cst_lt(%union.tree_node*, %union.tree_node*) #1

declare %struct.rtx_def* @expand_divmod(i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32) #1

declare void @emit_jump(%struct.rtx_def*) #1

declare i32 @expand_decl_cleanup(%union.tree_node*, %union.tree_node*) #1

declare %struct.rtx_def* @expand_builtin(%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32) #1

declare %struct.rtx_def* @expand_call(%union.tree_node*, %struct.rtx_def*, i32) #1

declare i32 @subreg_lowpart_offset(i32, i32) #1

declare %struct.rtx_def* @assign_stack_temp_for_type(i32, i64, i32, %union.tree_node*) #1

declare %struct.rtx_def* @simplify_binary_operation(i32, i32, %struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @eliminate_constant_term(%struct.rtx_def*, %struct.rtx_def**) #1

declare i32 @really_constant_p(%union.tree_node*) #1

declare i32 @int_fits_type_p(%union.tree_node*, %union.tree_node*) #1

declare i32 @exact_log2_wide(i64) #1

declare %struct.rtx_def* @expand_mult_highpart_adjust(i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32) #1

declare %struct.rtx_def* @gen_highpart(i32, %struct.rtx_def*) #1

declare i32 @real_onep(%union.tree_node*) #1

declare %union.tree_node* @build_real(%union.tree_node*, %struct.realvaluetype* byval align 8) #1

declare void @expand_fix(%struct.rtx_def*, %struct.rtx_def*, i32) #1

declare void @expand_float(%struct.rtx_def*, %struct.rtx_def*, i32) #1

declare %struct.rtx_def* @expand_unop(i32, %struct.optab*, %struct.rtx_def*, %struct.rtx_def*, i32) #1

declare %struct.rtx_def* @expand_complex_abs(i32, %struct.rtx_def*, %struct.rtx_def*, i32) #1

declare %struct.rtx_def* @expand_abs(i32, %struct.rtx_def*, %struct.rtx_def*, i32, i32) #1

declare i32 @can_compare_p(i32, i32, i32) #1

; Function Attrs: nounwind uwtable
define void @do_jump_by_parts_greater_rtx(i32 %mode, i32 %unsignedp, %struct.rtx_def* %op0, %struct.rtx_def* %op1, %struct.rtx_def* %if_false_label, %struct.rtx_def* %if_true_label) #0 {
entry:
  %idxprom = sext i32 %mode to i64
  %arrayidx = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom
  %0 = load i8* %arrayidx, align 1, !tbaa !5
  %conv = zext i8 %0 to i32
  %1 = load i32* @target_flags, align 4, !tbaa !21
  %and = lshr i32 %1, 23
  %2 = and i32 %and, 4
  %3 = add i32 %2, 4
  %div = sdiv i32 %conv, %3
  %tobool1 = icmp ne %struct.rtx_def* %if_true_label, null
  %tobool2 = icmp ne %struct.rtx_def* %if_false_label, null
  %or.cond = and i1 %tobool1, %tobool2
  br i1 %or.cond, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %call = tail call %struct.rtx_def* @gen_label_rtx() #5
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %drop_through_label.0 = phi %struct.rtx_def* [ null, %entry ], [ %call, %if.then ]
  %if_true_label.drop_through_label.0 = select i1 %tobool1, %struct.rtx_def* %if_true_label, %struct.rtx_def* %drop_through_label.0
  %if_false_label.addr.0 = select i1 %tobool2, %struct.rtx_def* %if_false_label, %struct.rtx_def* %drop_through_label.0
  %cmp45 = icmp sgt i32 %div, 0
  br i1 %cmp45, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %if.end
  %sub = add nsw i32 %div, -1
  %not.tobool15 = icmp ne i32 %unsignedp, 0
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %i.046 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.body ]
  %sub10 = sub i32 %sub, %i.046
  %call11 = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %op0, i32 %sub10, i32 %mode) #5
  %call14 = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %op1, i32 %sub10, i32 %mode) #5
  %cmp16 = icmp sgt i32 %i.046, 0
  %cmp16. = or i1 %cmp16, %not.tobool15
  %lor.ext = zext i1 %cmp16. to i32
  %4 = load i32* @word_mode, align 4, !tbaa !5
  tail call void @do_compare_rtx_and_jump(%struct.rtx_def* %call11, %struct.rtx_def* %call14, i32 105, i32 %lor.ext, i32 %4, %struct.rtx_def* null, %struct.rtx_def* null, %struct.rtx_def* %if_true_label.drop_through_label.0)
  %5 = load i32* @word_mode, align 4, !tbaa !5
  tail call void @do_compare_rtx_and_jump(%struct.rtx_def* %call11, %struct.rtx_def* %call14, i32 102, i32 %unsignedp, i32 %5, %struct.rtx_def* null, %struct.rtx_def* null, %struct.rtx_def* %if_false_label.addr.0)
  %inc = add nsw i32 %i.046, 1
  %exitcond = icmp eq i32 %inc, %div
  br i1 %exitcond, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %if.end
  %tobool18 = icmp eq %struct.rtx_def* %if_false_label.addr.0, null
  br i1 %tobool18, label %if.end20, label %if.then19

if.then19:                                        ; preds = %for.end
  tail call void @emit_jump(%struct.rtx_def* %if_false_label.addr.0) #5
  br label %if.end20

if.end20:                                         ; preds = %for.end, %if.then19
  %tobool21 = icmp eq %struct.rtx_def* %drop_through_label.0, null
  br i1 %tobool21, label %if.end24, label %if.then22

if.then22:                                        ; preds = %if.end20
  %call23 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %drop_through_label.0) #5
  br label %if.end24

if.end24:                                         ; preds = %if.end20, %if.then22
  ret void
}

; Function Attrs: nounwind uwtable
define void @do_compare_rtx_and_jump(%struct.rtx_def* %op0, %struct.rtx_def* %op1, i32 %code, i32 %unsignedp, i32 %mode, %struct.rtx_def* %size, %struct.rtx_def* %if_false_label, %struct.rtx_def* %if_true_label) #0 {
entry:
  %tobool = icmp eq %struct.rtx_def* %if_true_label, null
  br i1 %tobool, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %idxprom = sext i32 %mode to i64
  %arrayidx = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom
  %0 = load i32* %arrayidx, align 4, !tbaa !5
  switch i32 %0, label %if.then [
    i32 2, label %if.end
    i32 6, label %if.end
    i32 8, label %if.end
  ]

if.then:                                          ; preds = %land.lhs.true
  %call = tail call i32 @reverse_condition(i32 %code) #5
  br label %if.end

if.end:                                           ; preds = %land.lhs.true, %land.lhs.true, %land.lhs.true, %entry, %if.then
  %code.addr.0 = phi i32 [ %code, %entry ], [ %code, %land.lhs.true ], [ %call, %if.then ], [ %code, %land.lhs.true ], [ %code, %land.lhs.true ]
  %if_false_label.addr.0 = phi %struct.rtx_def* [ %if_false_label, %entry ], [ %if_false_label, %land.lhs.true ], [ null, %if.then ], [ %if_false_label, %land.lhs.true ], [ %if_false_label, %land.lhs.true ]
  %if_true_label.addr.0 = phi %struct.rtx_def* [ %if_true_label, %entry ], [ null, %land.lhs.true ], [ %if_false_label, %if.then ], [ null, %land.lhs.true ], [ null, %land.lhs.true ]
  %call8 = tail call i32 @swap_commutative_operands_p(%struct.rtx_def* %op0, %struct.rtx_def* %op1) #5
  %tobool9 = icmp eq i32 %call8, 0
  br i1 %tobool9, label %if.end12, label %if.then10

if.then10:                                        ; preds = %if.end
  %call11 = tail call i32 @swap_condition(i32 %code.addr.0) #5
  br label %if.end12

if.end12:                                         ; preds = %if.end, %if.then10
  %code.addr.1 = phi i32 [ %call11, %if.then10 ], [ %code.addr.0, %if.end ]
  %op1.addr.0 = phi %struct.rtx_def* [ %op0, %if.then10 ], [ %op1, %if.end ]
  %op0.addr.0 = phi %struct.rtx_def* [ %op1, %if.then10 ], [ %op0, %if.end ]
  %1 = load i32* @flag_force_mem, align 4, !tbaa !21
  %tobool13 = icmp eq i32 %1, 0
  br i1 %tobool13, label %if.end17, label %if.then14

if.then14:                                        ; preds = %if.end12
  %call15 = tail call %struct.rtx_def* @force_not_mem(%struct.rtx_def* %op0.addr.0) #5
  %call16 = tail call %struct.rtx_def* @force_not_mem(%struct.rtx_def* %op1.addr.0) #5
  br label %if.end17

if.end17:                                         ; preds = %if.end12, %if.then14
  %op1.addr.1 = phi %struct.rtx_def* [ %call16, %if.then14 ], [ %op1.addr.0, %if.end12 ]
  %op0.addr.1 = phi %struct.rtx_def* [ %call15, %if.then14 ], [ %op0.addr.0, %if.end12 ]
  %2 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr.i = getelementptr inbounds %struct.function* %2, i64 0, i32 2
  %3 = load %struct.expr_status** %expr.i, align 8, !tbaa !6
  %x_inhibit_defer_pop.i = getelementptr inbounds %struct.expr_status* %3, i64 0, i32 1
  %4 = load i32* %x_inhibit_defer_pop.i, align 4, !tbaa !15
  %cmp.i = icmp eq i32 %4, 0
  br i1 %cmp.i, label %if.then.i, label %do_pending_stack_adjust.exit

if.then.i:                                        ; preds = %if.end17
  %x_pending_stack_adjust.i = getelementptr inbounds %struct.expr_status* %3, i64 0, i32 0
  %5 = load i32* %x_pending_stack_adjust.i, align 4, !tbaa !13
  %cmp2.i = icmp eq i32 %5, 0
  br i1 %cmp2.i, label %if.end.i, label %if.then3.i

if.then3.i:                                       ; preds = %if.then.i
  %conv.i = sext i32 %5 to i64
  %call.i = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv.i) #5
  tail call void @adjust_stack(%struct.rtx_def* %call.i) #5
  %.pre.i = load %struct.function** @cfun, align 8, !tbaa !1
  %expr6.phi.trans.insert.i = getelementptr inbounds %struct.function* %.pre.i, i64 0, i32 2
  %.pre9.i = load %struct.expr_status** %expr6.phi.trans.insert.i, align 8, !tbaa !6
  br label %if.end.i

if.end.i:                                         ; preds = %if.then3.i, %if.then.i
  %6 = phi %struct.expr_status* [ %3, %if.then.i ], [ %.pre9.i, %if.then3.i ]
  %x_pending_stack_adjust7.i = getelementptr inbounds %struct.expr_status* %6, i64 0, i32 0
  store i32 0, i32* %x_pending_stack_adjust7.i, align 4, !tbaa !13
  br label %do_pending_stack_adjust.exit

do_pending_stack_adjust.exit:                     ; preds = %if.end17, %if.end.i
  %7 = getelementptr inbounds %struct.rtx_def* %op0.addr.1, i64 0, i32 0
  %bf.load = load i32* %7, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp18 = icmp eq i32 %bf.clear, 54
  br i1 %cmp18, label %land.lhs.true19, label %if.end36

land.lhs.true19:                                  ; preds = %do_pending_stack_adjust.exit
  %8 = getelementptr inbounds %struct.rtx_def* %op1.addr.1, i64 0, i32 0
  %bf.load20 = load i32* %8, align 8
  %bf.clear21 = and i32 %bf.load20, 65535
  %cmp22 = icmp eq i32 %bf.clear21, 54
  br i1 %cmp22, label %land.lhs.true23, label %if.end36

land.lhs.true23:                                  ; preds = %land.lhs.true19
  %call24 = tail call %struct.rtx_def* @simplify_relational_operation(i32 %code.addr.1, i32 %mode, %struct.rtx_def* %op0.addr.1, %struct.rtx_def* %op1.addr.1) #5
  %cmp25 = icmp eq %struct.rtx_def* %call24, null
  br i1 %cmp25, label %if.end36, label %if.then26

if.then26:                                        ; preds = %land.lhs.true23
  %9 = load %struct.rtx_def** @const_true_rtx, align 8, !tbaa !1
  %cmp27 = icmp eq %struct.rtx_def* %call24, %9
  br i1 %cmp27, label %if.then28, label %if.else

if.then28:                                        ; preds = %if.then26
  %tobool29 = icmp eq %struct.rtx_def* %if_true_label.addr.0, null
  br i1 %tobool29, label %if.end47, label %if.then30

if.then30:                                        ; preds = %if.then28
  tail call void @emit_jump(%struct.rtx_def* %if_true_label.addr.0) #5
  br label %if.end47

if.else:                                          ; preds = %if.then26
  %tobool32 = icmp eq %struct.rtx_def* %if_false_label.addr.0, null
  br i1 %tobool32, label %if.end47, label %if.then33

if.then33:                                        ; preds = %if.else
  tail call void @emit_jump(%struct.rtx_def* %if_false_label.addr.0) #5
  br label %if.end47

if.end36:                                         ; preds = %land.lhs.true23, %land.lhs.true19, %do_pending_stack_adjust.exit
  %tobool37 = icmp eq %struct.rtx_def* %if_true_label.addr.0, null
  br i1 %tobool37, label %if.then38, label %if.end40

if.then38:                                        ; preds = %if.end36
  %call39 = tail call %struct.rtx_def* @gen_label_rtx() #5
  br label %if.end40

if.end40:                                         ; preds = %if.end36, %if.then38
  %if_true_label.addr.1 = phi %struct.rtx_def* [ %if_true_label.addr.0, %if.end36 ], [ %call39, %if.then38 ]
  %dummy_true_label.0 = phi i32 [ 0, %if.end36 ], [ 1, %if.then38 ]
  tail call void @emit_cmp_and_jump_insns(%struct.rtx_def* %op0.addr.1, %struct.rtx_def* %op1.addr.1, i32 %code.addr.1, %struct.rtx_def* %size, i32 %mode, i32 %unsignedp, %struct.rtx_def* %if_true_label.addr.1) #5
  %tobool41 = icmp eq %struct.rtx_def* %if_false_label.addr.0, null
  br i1 %tobool41, label %if.end43, label %if.then42

if.then42:                                        ; preds = %if.end40
  tail call void @emit_jump(%struct.rtx_def* %if_false_label.addr.0) #5
  br label %if.end43

if.end43:                                         ; preds = %if.end40, %if.then42
  %tobool44 = icmp eq i32 %dummy_true_label.0, 0
  br i1 %tobool44, label %if.end47, label %if.then45

if.then45:                                        ; preds = %if.end43
  %call46 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %if_true_label.addr.1) #5
  br label %if.end47

if.end47:                                         ; preds = %if.then28, %if.else, %if.end43, %if.then30, %if.then33, %if.then45
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @do_store_flag(%union.tree_node* nocapture readonly %exp, %struct.rtx_def* %target, i32 %mode, i32 %only_cheap) #0 {
entry:
  %code1 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code1, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 96
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %operands = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx = bitcast i32* %operands to %union.tree_node**
  %0 = load %union.tree_node** %arrayidx, align 8, !tbaa !1
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %invert.0 = phi i32 [ 1, %if.then ], [ 0, %entry ]
  %exp.addr.0 = phi %union.tree_node* [ %0, %if.then ], [ %exp, %entry ]
  %operands4 = getelementptr inbounds %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 2
  %arrayidx5 = bitcast i32* %operands4 to %union.tree_node**
  %1 = load %union.tree_node** %arrayidx5, align 8, !tbaa !1
  %arrayidx8 = getelementptr inbounds i32* %operands4, i64 2
  %2 = bitcast i32* %arrayidx8 to %union.tree_node**
  %3 = load %union.tree_node** %2, align 8, !tbaa !1
  %4 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !1
  %cmp9 = icmp eq %union.tree_node* %1, %4
  %cmp10 = icmp eq %union.tree_node* %3, %4
  %or.cond = or i1 %cmp9, %cmp10
  br i1 %or.cond, label %if.then11, label %if.end12

if.then11:                                        ; preds = %if.end
  %5 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  br label %return

if.end12:                                         ; preds = %if.end
  %type14 = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 0, i32 1
  %6 = load %union.tree_node** %type14, align 8, !tbaa !36
  %type15 = bitcast %union.tree_node* %6 to %struct.tree_type*
  %mode16 = getelementptr inbounds %struct.tree_type* %type15, i64 0, i32 6
  %bf.load17 = load i32* %mode16, align 4
  %bf.lshr = lshr i32 %bf.load17, 9
  %bf.clear18 = and i32 %bf.lshr, 127
  %unsigned_flag = getelementptr inbounds %union.tree_node* %6, i64 0, i32 0, i32 0, i32 2
  %bf.load20 = load i32* %unsigned_flag, align 8
  %bf.lshr21 = lshr i32 %bf.load20, 13
  %bf.clear22 = and i32 %bf.lshr21, 1
  %cmp23 = icmp eq i32 %bf.clear18, 51
  br i1 %cmp23, label %return, label %while.cond

while.cond:                                       ; preds = %if.end12, %land.rhs
  %bf.load51 = phi i32 [ %bf.load61, %land.rhs ], [ %bf.load17, %if.end12 ]
  %arg0.0 = phi %union.tree_node* [ %7, %land.rhs ], [ %1, %if.end12 ]
  %code27 = getelementptr inbounds %union.tree_node* %arg0.0, i64 0, i32 0, i32 0, i32 2
  %bf.load28 = load i32* %code27, align 8
  %bf.clear29 = and i32 %bf.load28, 255
  %bf.clear29.off = add i32 %bf.clear29, -114
  %switch = icmp ult i32 %bf.clear29.off, 3
  br i1 %switch, label %land.lhs.true, label %while.cond68

land.lhs.true:                                    ; preds = %while.cond
  %operands44 = getelementptr inbounds %union.tree_node* %arg0.0, i64 0, i32 0, i32 2
  %arrayidx45 = bitcast i32* %operands44 to %union.tree_node**
  %7 = load %union.tree_node** %arrayidx45, align 8, !tbaa !1
  %cmp46 = icmp eq %union.tree_node* %7, %4
  br i1 %cmp46, label %while.cond68, label %land.rhs

land.rhs:                                         ; preds = %land.lhs.true
  %type58 = getelementptr inbounds %union.tree_node* %7, i64 0, i32 0, i32 0, i32 1
  %8 = load %union.tree_node** %type58, align 8, !tbaa !36
  %type59 = bitcast %union.tree_node* %8 to %struct.tree_type*
  %mode60 = getelementptr inbounds %struct.tree_type* %type59, i64 0, i32 6
  %bf.load61 = load i32* %mode60, align 4
  %bf.lshr52635 = xor i32 %bf.load61, %bf.load51
  %9 = and i32 %bf.lshr52635, 65024
  %cmp64 = icmp eq i32 %9, 0
  br i1 %cmp64, label %while.cond, label %while.cond68

while.cond68:                                     ; preds = %while.cond, %land.lhs.true, %land.rhs, %land.rhs91
  %arg1.0 = phi %union.tree_node* [ %10, %land.rhs91 ], [ %3, %land.rhs ], [ %3, %land.lhs.true ], [ %3, %while.cond ]
  %code70 = getelementptr inbounds %union.tree_node* %arg1.0, i64 0, i32 0, i32 0, i32 2
  %bf.load71 = load i32* %code70, align 8
  %bf.clear72 = and i32 %bf.load71, 255
  %bf.clear72.off = add i32 %bf.clear72, -114
  %switch638 = icmp ult i32 %bf.clear72.off, 3
  br i1 %switch638, label %land.lhs.true86, label %while.end115

land.lhs.true86:                                  ; preds = %while.cond68
  %operands88 = getelementptr inbounds %union.tree_node* %arg1.0, i64 0, i32 0, i32 2
  %arrayidx89 = bitcast i32* %operands88 to %union.tree_node**
  %10 = load %union.tree_node** %arrayidx89, align 8, !tbaa !1
  %cmp90 = icmp eq %union.tree_node* %10, %4
  br i1 %cmp90, label %while.end115, label %land.rhs91

land.rhs91:                                       ; preds = %land.lhs.true86
  %type93 = getelementptr inbounds %union.tree_node* %arg1.0, i64 0, i32 0, i32 0, i32 1
  %11 = load %union.tree_node** %type93, align 8, !tbaa !36
  %type94 = bitcast %union.tree_node* %11 to %struct.tree_type*
  %mode95 = getelementptr inbounds %struct.tree_type* %type94, i64 0, i32 6
  %bf.load96 = load i32* %mode95, align 4
  %type103 = getelementptr inbounds %union.tree_node* %10, i64 0, i32 0, i32 0, i32 1
  %12 = load %union.tree_node** %type103, align 8, !tbaa !36
  %type104 = bitcast %union.tree_node* %12 to %struct.tree_type*
  %mode105 = getelementptr inbounds %struct.tree_type* %type104, i64 0, i32 6
  %bf.load106 = load i32* %mode105, align 4
  %bf.lshr97634 = xor i32 %bf.load106, %bf.load96
  %13 = and i32 %bf.lshr97634, 65024
  %cmp109 = icmp eq i32 %13, 0
  br i1 %cmp109, label %while.cond68, label %while.end115

while.end115:                                     ; preds = %while.cond68, %land.lhs.true86, %land.rhs91
  %code117 = getelementptr inbounds %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 0, i32 2
  %bf.load118 = load i32* %code117, align 8
  %bf.clear119 = and i32 %bf.load118, 255
  switch i32 %bf.clear119, label %sw.default [
    i32 101, label %sw.epilog
    i32 102, label %sw.bb120
    i32 97, label %sw.bb121
    i32 98, label %sw.bb127
    i32 99, label %sw.bb137
    i32 100, label %sw.bb147
    i32 103, label %sw.bb157
    i32 104, label %sw.bb158
    i32 105, label %sw.bb159
    i32 106, label %sw.bb160
    i32 107, label %sw.bb161
    i32 108, label %sw.bb162
    i32 109, label %sw.bb163
  ]

sw.bb120:                                         ; preds = %while.end115
  br label %sw.epilog

sw.bb121:                                         ; preds = %while.end115
  %call = tail call i32 @integer_onep(%union.tree_node* %arg1.0) #5
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.else, label %if.then122

if.then122:                                       ; preds = %sw.bb121
  %14 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8, !tbaa !1
  %15 = shl nuw nsw i32 %bf.clear22, 2
  %16 = or i32 %15, 106
  br label %sw.epilog

if.else:                                          ; preds = %sw.bb121
  %17 = shl nuw nsw i32 %bf.clear22, 2
  %18 = or i32 %17, 107
  br label %sw.epilog

sw.bb127:                                         ; preds = %while.end115
  %tobool128 = icmp eq i32 %bf.clear22, 0
  br i1 %tobool128, label %land.lhs.true129, label %if.else133

land.lhs.true129:                                 ; preds = %sw.bb127
  %call130 = tail call i32 @integer_all_onesp(%union.tree_node* %arg1.0) #5
  %tobool131 = icmp eq i32 %call130, 0
  br i1 %tobool131, label %if.else133, label %if.then132

if.then132:                                       ; preds = %land.lhs.true129
  %19 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8, !tbaa !1
  br label %sw.epilog

if.else133:                                       ; preds = %sw.bb127, %land.lhs.true129
  %20 = shl nuw nsw i32 %bf.clear22, 2
  %21 = or i32 %20, 106
  br label %sw.epilog

sw.bb137:                                         ; preds = %while.end115
  %tobool138 = icmp eq i32 %bf.clear22, 0
  br i1 %tobool138, label %land.lhs.true139, label %if.else143

land.lhs.true139:                                 ; preds = %sw.bb137
  %call140 = tail call i32 @integer_all_onesp(%union.tree_node* %arg1.0) #5
  %tobool141 = icmp eq i32 %call140, 0
  br i1 %tobool141, label %if.else143, label %if.then142

if.then142:                                       ; preds = %land.lhs.true139
  %22 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8, !tbaa !1
  br label %sw.epilog

if.else143:                                       ; preds = %sw.bb137, %land.lhs.true139
  %23 = shl nuw nsw i32 %bf.clear22, 2
  %24 = or i32 %23, 105
  br label %sw.epilog

sw.bb147:                                         ; preds = %while.end115
  %call148 = tail call i32 @integer_onep(%union.tree_node* %arg1.0) #5
  %tobool149 = icmp eq i32 %call148, 0
  br i1 %tobool149, label %if.else153, label %if.then150

if.then150:                                       ; preds = %sw.bb147
  %25 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8, !tbaa !1
  %26 = shl nuw nsw i32 %bf.clear22, 2
  %27 = or i32 %26, 105
  br label %sw.epilog

if.else153:                                       ; preds = %sw.bb147
  %28 = shl nuw nsw i32 %bf.clear22, 2
  %29 = or i32 %28, 104
  br label %sw.epilog

sw.bb157:                                         ; preds = %while.end115
  br label %sw.epilog

sw.bb158:                                         ; preds = %while.end115
  br label %sw.epilog

sw.bb159:                                         ; preds = %while.end115
  br label %sw.epilog

sw.bb160:                                         ; preds = %while.end115
  br label %sw.epilog

sw.bb161:                                         ; preds = %while.end115
  br label %sw.epilog

sw.bb162:                                         ; preds = %while.end115
  br label %sw.epilog

sw.bb163:                                         ; preds = %while.end115
  br label %sw.epilog

sw.default:                                       ; preds = %while.end115
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 10281, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.do_store_flag, i64 0, i64 0)) #8
  unreachable

sw.epilog:                                        ; preds = %while.end115, %if.then150, %if.else153, %if.then142, %if.else143, %if.then132, %if.else133, %if.then122, %if.else, %sw.bb163, %sw.bb162, %sw.bb161, %sw.bb160, %sw.bb159, %sw.bb158, %sw.bb157, %sw.bb120
  %arg1.1 = phi %union.tree_node* [ %arg1.0, %sw.bb163 ], [ %arg1.0, %sw.bb162 ], [ %arg1.0, %sw.bb161 ], [ %arg1.0, %sw.bb160 ], [ %arg1.0, %sw.bb159 ], [ %arg1.0, %sw.bb158 ], [ %arg1.0, %sw.bb157 ], [ %25, %if.then150 ], [ %arg1.0, %if.else153 ], [ %arg1.0, %if.else143 ], [ %22, %if.then142 ], [ %arg1.0, %if.else133 ], [ %19, %if.then132 ], [ %14, %if.then122 ], [ %arg1.0, %if.else ], [ %arg1.0, %sw.bb120 ], [ %arg1.0, %while.end115 ]
  %code.0 = phi i32 [ 114, %sw.bb163 ], [ 115, %sw.bb162 ], [ 116, %sw.bb161 ], [ 117, %sw.bb160 ], [ 118, %sw.bb159 ], [ 113, %sw.bb158 ], [ 112, %sw.bb157 ], [ %27, %if.then150 ], [ %29, %if.else153 ], [ %24, %if.else143 ], [ 104, %if.then142 ], [ %21, %if.else133 ], [ 107, %if.then132 ], [ %16, %if.then122 ], [ %18, %if.else ], [ 102, %sw.bb120 ], [ 103, %while.end115 ]
  %bf.load166 = load i32* %code27, align 8
  %bf.clear167 = and i32 %bf.load166, 255
  %bf.clear167.off = add i32 %bf.clear167, -25
  %switch639 = icmp ult i32 %bf.clear167.off, 2
  br i1 %switch639, label %if.then175, label %if.end177

if.then175:                                       ; preds = %sw.epilog
  %call176 = tail call i32 @swap_condition(i32 %code.0) #5
  br label %if.end177

if.end177:                                        ; preds = %sw.epilog, %if.then175
  %arg1.2 = phi %union.tree_node* [ %arg0.0, %if.then175 ], [ %arg1.1, %sw.epilog ]
  %arg0.1 = phi %union.tree_node* [ %arg1.1, %if.then175 ], [ %arg0.0, %sw.epilog ]
  %code.1 = phi i32 [ %call176, %if.then175 ], [ %code.0, %sw.epilog ]
  %cmp178 = icmp eq i32 %code.1, 102
  %30 = and i32 %code.1, -2
  %31 = icmp eq i32 %30, 102
  br i1 %31, label %land.lhs.true181, label %if.end311

land.lhs.true181:                                 ; preds = %if.end177
  %code183 = getelementptr inbounds %union.tree_node* %arg0.1, i64 0, i32 0, i32 0, i32 2
  %bf.load184 = load i32* %code183, align 8
  %bf.clear185 = and i32 %bf.load184, 255
  %cmp186 = icmp eq i32 %bf.clear185, 88
  br i1 %cmp186, label %land.lhs.true187, label %if.end311

land.lhs.true187:                                 ; preds = %land.lhs.true181
  %call188 = tail call i32 @integer_zerop(%union.tree_node* %arg1.2) #5
  %tobool189 = icmp eq i32 %call188, 0
  br i1 %tobool189, label %if.end311, label %land.lhs.true190

land.lhs.true190:                                 ; preds = %land.lhs.true187
  %operands192 = getelementptr inbounds %union.tree_node* %arg0.1, i64 0, i32 0, i32 2
  %arrayidx193 = getelementptr inbounds i32* %operands192, i64 2
  %32 = bitcast i32* %arrayidx193 to %union.tree_node**
  %33 = load %union.tree_node** %32, align 8, !tbaa !1
  %call194 = tail call i32 @integer_pow2p(%union.tree_node* %33) #5
  %tobool195 = icmp eq i32 %call194, 0
  br i1 %tobool195, label %if.end311, label %if.then196

if.then196:                                       ; preds = %land.lhs.true190
  %arrayidx199 = bitcast i32* %operands192 to %union.tree_node**
  %34 = load %union.tree_node** %arrayidx199, align 8, !tbaa !1
  %35 = load %union.tree_node** %32, align 8, !tbaa !1
  %call203 = tail call i32 @tree_log2(%union.tree_node* %35) #5
  %code205 = getelementptr inbounds %union.tree_node* %34, i64 0, i32 0, i32 0, i32 2
  %bf.load206 = load i32* %code205, align 8
  %bf.clear207 = and i32 %bf.load206, 255
  %cmp208 = icmp eq i32 %bf.clear207, 83
  br i1 %cmp208, label %land.lhs.true209, label %if.end251

land.lhs.true209:                                 ; preds = %if.then196
  %operands211 = getelementptr inbounds %union.tree_node* %34, i64 0, i32 0, i32 2
  %arrayidx212 = getelementptr inbounds i32* %operands211, i64 2
  %36 = bitcast i32* %arrayidx212 to %union.tree_node**
  %37 = load %union.tree_node** %36, align 8, !tbaa !1
  %code214 = getelementptr inbounds %union.tree_node* %37, i64 0, i32 0, i32 0, i32 2
  %bf.load215 = load i32* %code214, align 8
  %bf.clear216 = and i32 %bf.load215, 255
  %cmp217 = icmp eq i32 %bf.clear216, 25
  br i1 %cmp217, label %land.lhs.true218, label %if.end251

land.lhs.true218:                                 ; preds = %land.lhs.true209
  %int_cst222 = getelementptr inbounds %union.tree_node* %37, i64 0, i32 0, i32 2
  %high = getelementptr inbounds i32* %int_cst222, i64 2
  %38 = bitcast i32* %high to i64*
  %39 = load i64* %38, align 8, !tbaa !45
  %cmp223 = icmp eq i64 %39, 0
  br i1 %cmp223, label %land.lhs.true224, label %if.end251

land.lhs.true224:                                 ; preds = %land.lhs.true218
  %bf.load226 = load i32* %mode16, align 4
  %bf.clear227 = and i32 %bf.load226, 511
  %cmp228 = icmp slt i32 %call203, %bf.clear227
  br i1 %cmp228, label %land.lhs.true229, label %if.end251

land.lhs.true229:                                 ; preds = %land.lhs.true224
  %sub = sub nsw i32 %call203, %bf.clear227
  %conv = sext i32 %sub to i64
  %call237 = tail call i32 @compare_tree_int(%union.tree_node* %37, i64 %conv) #5
  %cmp238 = icmp slt i32 %call237, 0
  br i1 %cmp238, label %if.then240, label %if.end251

if.then240:                                       ; preds = %land.lhs.true229
  %40 = load %union.tree_node** %36, align 8, !tbaa !1
  %int_cst245 = getelementptr inbounds %union.tree_node* %40, i64 0, i32 0, i32 2
  %low = bitcast i32* %int_cst245 to i64*
  %41 = load i64* %low, align 8, !tbaa !42
  %conv246633 = zext i32 %call203 to i64
  %add = add i64 %41, %conv246633
  %conv247 = trunc i64 %add to i32
  %arrayidx250 = bitcast i32* %operands211 to %union.tree_node**
  %42 = load %union.tree_node** %arrayidx250, align 8, !tbaa !1
  br label %if.end251

if.end251:                                        ; preds = %if.then240, %land.lhs.true229, %land.lhs.true224, %land.lhs.true218, %land.lhs.true209, %if.then196
  %inner.0 = phi %union.tree_node* [ %42, %if.then240 ], [ %34, %land.lhs.true229 ], [ %34, %land.lhs.true224 ], [ %34, %land.lhs.true218 ], [ %34, %land.lhs.true209 ], [ %34, %if.then196 ]
  %bitnum.0 = phi i32 [ %conv247, %if.then240 ], [ %call203, %land.lhs.true229 ], [ %call203, %land.lhs.true224 ], [ %call203, %land.lhs.true218 ], [ %call203, %land.lhs.true209 ], [ %call203, %if.then196 ]
  %cmp.i = icmp eq %struct.rtx_def* %target, null
  br i1 %cmp.i, label %if.then271, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %if.end251
  %43 = getelementptr inbounds %struct.rtx_def* %target, i64 0, i32 0
  %bf.load.i = load i32* %43, align 8
  %44 = and i32 %bf.load.i, 67174399
  %45 = icmp eq i32 %44, 61
  br i1 %45, label %lor.lhs.false5.i, label %if.then271

lor.lhs.false5.i:                                 ; preds = %lor.lhs.false.i
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %target, i64 0, i32 1, i64 0
  %rtuint.i = bitcast %union.rtunion_def* %arrayidx.i to i32*
  %46 = load i32* %rtuint.i, align 4, !tbaa !21
  %cmp6.i = icmp ult i32 %46, 53
  br i1 %cmp6.i, label %if.then271, label %lor.lhs.false7.i

lor.lhs.false7.i:                                 ; preds = %lor.lhs.false5.i
  %call.i = tail call i32 @preserve_subexpressions_p() #5
  %tobool8.i = icmp eq i32 %call.i, 0
  br i1 %tobool8.i, label %lor.lhs.false262, label %if.then271

lor.lhs.false262:                                 ; preds = %lor.lhs.false7.i
  %bf.load263 = load i32* %43, align 8
  %bf.lshr264 = lshr i32 %bf.load263, 16
  %bf.clear265 = and i32 %bf.lshr264, 255
  %cmp266 = icmp eq i32 %bf.clear265, %bf.clear18
  br i1 %cmp266, label %lor.lhs.false268, label %if.then271

lor.lhs.false268:                                 ; preds = %lor.lhs.false262
  %call269 = tail call i32 @safe_from_p(%struct.rtx_def* %target, %union.tree_node* %inner.0, i32 1)
  %tobool270 = icmp eq i32 %call269, 0
  br i1 %tobool270, label %if.then271, label %if.end272

if.then271:                                       ; preds = %lor.lhs.false7.i, %if.end251, %lor.lhs.false.i, %lor.lhs.false5.i, %lor.lhs.false268, %lor.lhs.false262
  br label %if.end272

if.end272:                                        ; preds = %lor.lhs.false268, %if.then271
  %subtarget.0 = phi %struct.rtx_def* [ null, %if.then271 ], [ %target, %lor.lhs.false268 ]
  %call273 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %inner.0, %struct.rtx_def* %subtarget.0, i32 0, i32 0)
  %cmp274 = icmp eq i32 %bitnum.0, 0
  br i1 %cmp274, label %if.end280, label %if.then276

if.then276:                                       ; preds = %if.end272
  %conv277 = sext i32 %bitnum.0 to i64
  %call278 = tail call %union.tree_node* @size_int_wide(i64 %conv277, i32 0) #5
  %call279 = tail call %struct.rtx_def* @expand_shift(i32 83, i32 %bf.clear18, %struct.rtx_def* %call273, %union.tree_node* %call278, %struct.rtx_def* %subtarget.0, i32 1) #5
  br label %if.end280

if.end280:                                        ; preds = %if.end272, %if.then276
  %op0.0 = phi %struct.rtx_def* [ %call279, %if.then276 ], [ %call273, %if.end272 ]
  %47 = getelementptr inbounds %struct.rtx_def* %op0.0, i64 0, i32 0
  %bf.load281 = load i32* %47, align 8
  %bf.lshr282 = lshr i32 %bf.load281, 16
  %bf.clear283 = and i32 %bf.lshr282, 255
  %cmp284 = icmp eq i32 %bf.clear283, %mode
  br i1 %cmp284, label %if.end288, label %if.then286

if.then286:                                       ; preds = %if.end280
  %call.i641 = tail call %struct.rtx_def* @convert_modes(i32 %mode, i32 0, %struct.rtx_def* %op0.0, i32 1) #5
  br label %if.end288

if.end288:                                        ; preds = %if.end280, %if.then286
  %op0.1 = phi %struct.rtx_def* [ %call.i641, %if.then286 ], [ %op0.0, %if.end280 ]
  %cmp289 = icmp ne i32 %code.1, 103
  %tobool292 = icmp ne i32 %invert.0, 0
  %or.cond482 = or i1 %cmp289, %tobool292
  %or.cond482.not = xor i1 %or.cond482, true
  %or.cond483 = and i1 %cmp178, %tobool292
  %or.cond636 = or i1 %or.cond483, %or.cond482.not
  br i1 %or.cond636, label %if.then298, label %if.end300

if.then298:                                       ; preds = %if.end288
  %48 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 20), align 8, !tbaa !1
  %49 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %call299 = tail call %struct.rtx_def* @expand_binop(i32 %mode, %struct.optab* %48, %struct.rtx_def* %op0.1, %struct.rtx_def* %49, %struct.rtx_def* %subtarget.0, i32 1, i32 3) #5
  br label %if.end300

if.end300:                                        ; preds = %if.end288, %if.then298
  %op0.2 = phi %struct.rtx_def* [ %call299, %if.then298 ], [ %op0.1, %if.end288 ]
  %bf.load303 = load i32* %mode16, align 4
  %bf.clear304 = and i32 %bf.load303, 511
  %sub305 = add nsw i32 %bf.clear304, -1
  %cmp306 = icmp eq i32 %bitnum.0, %sub305
  br i1 %cmp306, label %return, label %if.then308

if.then308:                                       ; preds = %if.end300
  %50 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %call309 = tail call %struct.rtx_def* @expand_and(i32 %mode, %struct.rtx_def* %op0.2, %struct.rtx_def* %50, %struct.rtx_def* %subtarget.0) #5
  br label %return

if.end311:                                        ; preds = %land.lhs.true190, %land.lhs.true187, %if.end177, %land.lhs.true181
  %call312 = tail call i32 @can_compare_p(i32 %code.1, i32 %bf.clear18, i32 2) #5
  %tobool313 = icmp eq i32 %call312, 0
  br i1 %tobool313, label %return, label %if.end315

if.end315:                                        ; preds = %if.end311
  %idxprom = sext i32 %code.1 to i64
  %arrayidx316 = getelementptr inbounds [153 x i32]* @setcc_gen_code, i64 0, i64 %idxprom
  %51 = load i32* %arrayidx316, align 4, !tbaa !5
  %cmp317 = icmp eq i32 %51, 1317
  br i1 %cmp317, label %if.then329, label %lor.lhs.false319

lor.lhs.false319:                                 ; preds = %if.end315
  %tobool320 = icmp eq i32 %only_cheap, 0
  br i1 %tobool320, label %if.end378, label %land.lhs.true321

land.lhs.true321:                                 ; preds = %lor.lhs.false319
  %idxprom322 = sext i32 %51 to i64
  %operand = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom322, i32 3
  %52 = load %struct.insn_operand_data** %operand, align 8, !tbaa !31
  %mode325 = getelementptr inbounds %struct.insn_operand_data* %52, i64 0, i32 2
  %bf.load326 = load i16* %mode325, align 8
  %bf.cast = zext i16 %bf.load326 to i32
  %cmp327 = icmp eq i32 %bf.cast, %mode
  br i1 %cmp327, label %if.end378, label %if.then329

if.then329:                                       ; preds = %land.lhs.true321, %if.end315
  %cmp330 = icmp eq i32 %code.1, 107
  br i1 %cmp330, label %land.lhs.true332, label %lor.lhs.false335

land.lhs.true332:                                 ; preds = %if.then329
  %call333 = tail call i32 @integer_zerop(%union.tree_node* %arg1.2) #5
  %tobool334 = icmp eq i32 %call333, 0
  br i1 %tobool334, label %if.else344, label %if.end378

lor.lhs.false335:                                 ; preds = %if.then329
  %tobool336 = icmp eq i32 %only_cheap, 0
  %cmp338 = icmp eq i32 %code.1, 104
  %or.cond484 = and i1 %tobool336, %cmp338
  br i1 %or.cond484, label %land.lhs.true340, label %if.else344

land.lhs.true340:                                 ; preds = %lor.lhs.false335
  %call341 = tail call i32 @integer_zerop(%union.tree_node* %arg1.2) #5
  %tobool342 = icmp eq i32 %call341, 0
  br i1 %tobool342, label %if.else344, label %if.end378

if.else344:                                       ; preds = %land.lhs.true332, %land.lhs.true340, %lor.lhs.false335
  %53 = load i32* @ix86_branch_cost, align 4, !tbaa !21
  %cmp345 = icmp slt i32 %53, 0
  %tobool348 = icmp ne i32 %only_cheap, 0
  %or.cond485 = or i1 %cmp345, %tobool348
  %.not = xor i1 %31, true
  %brmerge = or i1 %or.cond485, %.not
  br i1 %brmerge, label %return, label %land.lhs.true355

land.lhs.true355:                                 ; preds = %if.else344
  %bf.load358 = load i32* %unsigned_flag, align 8
  %bf.clear359 = and i32 %bf.load358, 255
  %cmp360 = icmp eq i32 %bf.clear359, 7
  br i1 %cmp360, label %return, label %land.lhs.true362

land.lhs.true362:                                 ; preds = %land.lhs.true355
  %idxprom363632 = zext i32 %bf.clear18 to i64
  %54 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 34), align 8, !tbaa !1
  %insn_code = getelementptr inbounds %struct.optab* %54, i64 0, i32 1, i64 %idxprom363632, i32 0
  %55 = load i32* %insn_code, align 4, !tbaa !23
  %cmp365 = icmp eq i32 %55, 1317
  br i1 %cmp365, label %lor.lhs.false367, label %if.end378

lor.lhs.false367:                                 ; preds = %land.lhs.true362
  %56 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 37), align 8, !tbaa !1
  %insn_code371 = getelementptr inbounds %struct.optab* %56, i64 0, i32 1, i64 %idxprom363632, i32 0
  %57 = load i32* %insn_code371, align 4, !tbaa !23
  %cmp372 = icmp eq i32 %57, 1317
  br i1 %cmp372, label %return, label %if.end378

if.end378:                                        ; preds = %land.lhs.true332, %land.lhs.true340, %lor.lhs.false367, %land.lhs.true362, %land.lhs.true321, %lor.lhs.false319
  %cmp.i642 = icmp eq %struct.rtx_def* %target, null
  br i1 %cmp.i642, label %if.then390, label %lor.lhs.false.i644

lor.lhs.false.i644:                               ; preds = %if.end378
  %58 = getelementptr inbounds %struct.rtx_def* %target, i64 0, i32 0
  %bf.load.i643 = load i32* %58, align 8
  %59 = and i32 %bf.load.i643, 67174399
  %60 = icmp eq i32 %59, 61
  br i1 %60, label %lor.lhs.false5.i648, label %if.then390

lor.lhs.false5.i648:                              ; preds = %lor.lhs.false.i644
  %arrayidx.i645 = getelementptr inbounds %struct.rtx_def* %target, i64 0, i32 1, i64 0
  %rtuint.i646 = bitcast %union.rtunion_def* %arrayidx.i645 to i32*
  %61 = load i32* %rtuint.i646, align 4, !tbaa !21
  %cmp6.i647 = icmp ult i32 %61, 53
  br i1 %cmp6.i647, label %if.then390, label %lor.lhs.false7.i652

lor.lhs.false7.i652:                              ; preds = %lor.lhs.false5.i648
  %call.i649 = tail call i32 @preserve_subexpressions_p() #5
  %tobool8.i650 = icmp eq i32 %call.i649, 0
  br i1 %tobool8.i650, label %lor.lhs.false381, label %if.then390

lor.lhs.false381:                                 ; preds = %lor.lhs.false7.i652
  %bf.load382 = load i32* %58, align 8
  %bf.lshr383 = lshr i32 %bf.load382, 16
  %bf.clear384 = and i32 %bf.lshr383, 255
  %cmp385 = icmp eq i32 %bf.clear384, %bf.clear18
  br i1 %cmp385, label %lor.lhs.false387, label %if.then390

lor.lhs.false387:                                 ; preds = %lor.lhs.false381
  %call388 = tail call i32 @safe_from_p(%struct.rtx_def* %target, %union.tree_node* %arg1.2, i32 1)
  %tobool389 = icmp eq i32 %call388, 0
  br i1 %tobool389, label %if.then390, label %if.end391

if.then390:                                       ; preds = %lor.lhs.false7.i652, %if.end378, %lor.lhs.false.i644, %lor.lhs.false5.i648, %lor.lhs.false387, %lor.lhs.false381
  br label %if.end391

if.end391:                                        ; preds = %lor.lhs.false387, %if.then390
  %subtarget.1 = phi %struct.rtx_def* [ null, %if.then390 ], [ %target, %lor.lhs.false387 ]
  %call392 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %arg0.1, %struct.rtx_def* %subtarget.1, i32 0, i32 0)
  %call393 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %arg1.2, %struct.rtx_def* null, i32 0, i32 0)
  br i1 %cmp.i642, label %if.then396, label %if.end398

if.then396:                                       ; preds = %if.end391
  %call397 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode) #5
  br label %if.end398

if.end398:                                        ; preds = %if.then396, %if.end391
  %target.addr.0 = phi %struct.rtx_def* [ %call397, %if.then396 ], [ %target, %if.end391 ]
  %call399 = tail call i32 @queued_subexp_p(%struct.rtx_def* %call392)
  %tobool400 = icmp eq i32 %call399, 0
  br i1 %tobool400, label %cond.end, label %cond.true

cond.true:                                        ; preds = %if.end398
  %call401 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %call392) #5
  br label %cond.end

cond.end:                                         ; preds = %if.end398, %cond.true
  %cond402 = phi %struct.rtx_def* [ %call401, %cond.true ], [ %call392, %if.end398 ]
  %call403 = tail call i32 @queued_subexp_p(%struct.rtx_def* %call393)
  %tobool404 = icmp eq i32 %call403, 0
  br i1 %tobool404, label %cond.end408, label %cond.true405

cond.true405:                                     ; preds = %cond.end
  %call406 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %call393) #5
  br label %cond.end408

cond.end408:                                      ; preds = %cond.end, %cond.true405
  %cond409 = phi %struct.rtx_def* [ %call406, %cond.true405 ], [ %call393, %cond.end ]
  %call410 = tail call %struct.rtx_def* @emit_store_flag(%struct.rtx_def* %target.addr.0, i32 %code.1, %struct.rtx_def* %cond402, %struct.rtx_def* %cond409, i32 %bf.clear18, i32 %bf.clear22, i32 1) #5
  %tobool411 = icmp eq %struct.rtx_def* %call410, null
  br i1 %tobool411, label %if.end417, label %if.then412

if.then412:                                       ; preds = %cond.end408
  %tobool413 = icmp eq i32 %invert.0, 0
  br i1 %tobool413, label %return, label %if.then414

if.then414:                                       ; preds = %if.then412
  %62 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 20), align 8, !tbaa !1
  %63 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %call415 = tail call %struct.rtx_def* @expand_binop(i32 %mode, %struct.optab* %62, %struct.rtx_def* %call410, %struct.rtx_def* %63, %struct.rtx_def* %call410, i32 0, i32 3) #5
  br label %return

if.end417:                                        ; preds = %cond.end408
  %64 = getelementptr inbounds %struct.rtx_def* %target.addr.0, i64 0, i32 0
  %bf.load418 = load i32* %64, align 8
  %bf.clear419 = and i32 %bf.load418, 65535
  %cmp420 = icmp eq i32 %bf.clear419, 61
  br i1 %cmp420, label %lor.lhs.false422, label %if.then428

lor.lhs.false422:                                 ; preds = %if.end417
  %call423 = tail call i32 @reg_mentioned_p(%struct.rtx_def* %target.addr.0, %struct.rtx_def* %call392) #5
  %tobool424 = icmp eq i32 %call423, 0
  br i1 %tobool424, label %lor.lhs.false425, label %if.then428

lor.lhs.false425:                                 ; preds = %lor.lhs.false422
  %call426 = tail call i32 @reg_mentioned_p(%struct.rtx_def* %target.addr.0, %struct.rtx_def* %call393) #5
  %tobool427 = icmp eq i32 %call426, 0
  br i1 %tobool427, label %if.end433, label %if.then428

if.then428:                                       ; preds = %lor.lhs.false425, %lor.lhs.false422, %if.end417
  %bf.load429 = load i32* %64, align 8
  %bf.lshr430 = lshr i32 %bf.load429, 16
  %bf.clear431 = and i32 %bf.lshr430, 255
  %call432 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear431) #5
  br label %if.end433

if.end433:                                        ; preds = %lor.lhs.false425, %if.then428
  %target.addr.1 = phi %struct.rtx_def* [ %call432, %if.then428 ], [ %target.addr.0, %lor.lhs.false425 ]
  %tobool434 = icmp ne i32 %invert.0, 0
  %65 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %66 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %cond438 = select i1 %tobool434, %struct.rtx_def* %65, %struct.rtx_def* %66
  %call439 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %target.addr.1, %struct.rtx_def* %cond438)
  %call440 = tail call %struct.rtx_def* @compare_from_rtx(%struct.rtx_def* %call392, %struct.rtx_def* %call393, i32 %code.1, i32 %bf.clear22, i32 %bf.clear18, %struct.rtx_def* null)
  %67 = getelementptr inbounds %struct.rtx_def* %call440, i64 0, i32 0
  %bf.load441 = load i32* %67, align 8
  %bf.clear442 = and i32 %bf.load441, 65535
  %cmp443 = icmp eq i32 %bf.clear442, 54
  br i1 %cmp443, label %if.then445, label %if.end459

if.then445:                                       ; preds = %if.end433
  %68 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %cmp446 = icmp ne %struct.rtx_def* %call440, %68
  %or.cond487 = or i1 %cmp446, %tobool434
  %or.cond487.not = xor i1 %or.cond487, true
  %or.cond488 = and i1 %cmp446, %tobool434
  %or.cond637 = or i1 %or.cond488, %or.cond487.not
  %.val664 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8
  %cond458 = select i1 %or.cond637, %struct.rtx_def* %68, %struct.rtx_def* %.val664
  br label %return

if.end459:                                        ; preds = %if.end433
  %call462 = tail call %struct.rtx_def* @gen_label_rtx() #5
  %idxprom463631 = zext i32 %bf.clear442 to i64
  %arrayidx464 = getelementptr inbounds [153 x %struct.rtx_def* (%struct.rtx_def*)*]* @bcc_gen_fctn, i64 0, i64 %idxprom463631
  %69 = load %struct.rtx_def* (%struct.rtx_def*)** %arrayidx464, align 8, !tbaa !1
  %cmp465 = icmp eq %struct.rtx_def* (%struct.rtx_def*)* %69, null
  br i1 %cmp465, label %if.then467, label %if.end468

if.then467:                                       ; preds = %if.end459
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 10431, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.do_store_flag, i64 0, i64 0)) #8
  unreachable

if.end468:                                        ; preds = %if.end459
  %call471 = tail call %struct.rtx_def* %69(%struct.rtx_def* %call462) #5
  %call472 = tail call %struct.rtx_def* @emit_jump_insn(%struct.rtx_def* %call471) #5
  %70 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %71 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %cond477 = select i1 %tobool434, %struct.rtx_def* %70, %struct.rtx_def* %71
  %call478 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %target.addr.1, %struct.rtx_def* %cond477)
  %call479 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call462) #5
  br label %return

return:                                           ; preds = %if.then414, %if.then412, %land.lhs.true355, %lor.lhs.false367, %if.else344, %if.end311, %if.then308, %if.end300, %if.end12, %if.end468, %if.then445, %if.then11
  %retval.0 = phi %struct.rtx_def* [ %5, %if.then11 ], [ %cond458, %if.then445 ], [ %target.addr.1, %if.end468 ], [ null, %if.end12 ], [ %call309, %if.then308 ], [ %op0.2, %if.end300 ], [ null, %if.end311 ], [ null, %if.else344 ], [ null, %lor.lhs.false367 ], [ null, %land.lhs.true355 ], [ %call415, %if.then414 ], [ %call410, %if.then412 ]
  ret %struct.rtx_def* %retval.0
}

declare void @emit_clr_insn(%struct.rtx_def*) #1

declare void @emit_0_to_1_insn(%struct.rtx_def*) #1

declare i32 @operand_equal_p(%union.tree_node*, %union.tree_node*, i32) #1

declare i32 @integer_onep(%union.tree_node*) #1

declare i32 @can_conditionally_move_p(i32) #1

declare i32 @integer_pow2p(%union.tree_node*) #1

declare i32 @tree_log2(%union.tree_node*) #1

; Function Attrs: nounwind uwtable
define void @jumpif(%union.tree_node* %exp, %struct.rtx_def* %label) #0 {
entry:
  tail call void @do_jump(%union.tree_node* %exp, %struct.rtx_def* null, %struct.rtx_def* %label)
  ret void
}

declare %union.tree_node* @maybe_build_cleanup(%union.tree_node*) #1

; Function Attrs: nounwind uwtable
define void @do_jump(%union.tree_node* %exp, %struct.rtx_def* %if_false_label, %struct.rtx_def* %if_true_label) #0 {
entry:
  %bitsize = alloca i64, align 8
  %bitpos = alloca i64, align 8
  %unsignedp = alloca i32, align 4
  %mode163 = alloca i32, align 4
  %offset = alloca %union.tree_node*, align 8
  %volatilep = alloca i32, align 4
  %code1 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code1, align 8
  %bf.clear = and i32 %bf.load, 255
  %0 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr30.i = getelementptr inbounds %struct.function* %0, i64 0, i32 2
  %1 = load %struct.expr_status** %expr30.i, align 8, !tbaa !6
  %x_pending_chain31.i = getelementptr inbounds %struct.expr_status* %1, i64 0, i32 6
  %2 = load %struct.rtx_def** %x_pending_chain31.i, align 8, !tbaa !11
  %tobool32.i = icmp eq %struct.rtx_def* %2, null
  br i1 %tobool32.i, label %emit_queue.exit, label %while.body.i

while.body.i:                                     ; preds = %entry, %if.end.i
  %3 = phi %struct.rtx_def* [ %15, %if.end.i ], [ %2, %entry ]
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 1, i64 3
  %rtx.i = bitcast %union.rtunion_def* %arrayidx.i to %struct.rtx_def**
  %4 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !1
  %5 = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 0
  %bf.load.i = load i32* %5, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  %cmp.i = icmp eq i32 %bf.clear.i, 24
  br i1 %cmp.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %while.body.i
  %arrayidx5.i = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 1, i64 0
  %rtvec.i = bitcast %union.rtunion_def* %arrayidx5.i to %struct.rtvec_def**
  %6 = load %struct.rtvec_def** %rtvec.i, align 8, !tbaa !1
  %arrayidx6.i = getelementptr inbounds %struct.rtvec_def* %6, i64 0, i32 1, i64 0
  %7 = load %struct.rtx_def** %arrayidx6.i, align 8, !tbaa !1
  %8 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 1, i64 1, i32 0
  %.c.i = ptrtoint %struct.rtx_def* %7 to i64
  store i64 %.c.i, i64* %8, align 8, !tbaa !1
  %call.i = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %4) #5
  br label %if.end.i

if.else.i:                                        ; preds = %while.body.i
  %call16.i = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %4) #5
  %9 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 1, i64 1, i32 0
  %call16.c.i = ptrtoint %struct.rtx_def* %call16.i to i64
  store i64 %call16.c.i, i64* %9, align 8, !tbaa !1
  br label %if.end.i

if.end.i:                                         ; preds = %if.else.i, %if.then.i
  %arrayidx21.i = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 1, i64 4
  %rtx22.i = bitcast %union.rtunion_def* %arrayidx21.i to %struct.rtx_def**
  %10 = load %struct.rtx_def** %rtx22.i, align 8, !tbaa !1
  %11 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr23.i = getelementptr inbounds %struct.function* %11, i64 0, i32 2
  %12 = load %struct.expr_status** %expr23.i, align 8, !tbaa !6
  %x_pending_chain24.i = getelementptr inbounds %struct.expr_status* %12, i64 0, i32 6
  store %struct.rtx_def* %10, %struct.rtx_def** %x_pending_chain24.i, align 8, !tbaa !11
  %13 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr.i = getelementptr inbounds %struct.function* %13, i64 0, i32 2
  %14 = load %struct.expr_status** %expr.i, align 8, !tbaa !6
  %x_pending_chain.i = getelementptr inbounds %struct.expr_status* %14, i64 0, i32 6
  %15 = load %struct.rtx_def** %x_pending_chain.i, align 8, !tbaa !11
  %tobool.i = icmp eq %struct.rtx_def* %15, null
  br i1 %tobool.i, label %emit_queue.exit, label %while.body.i

emit_queue.exit:                                  ; preds = %if.end.i, %entry
  switch i32 %bf.clear, label %normal [
    i32 0, label %if.end740
    i32 25, label %sw.bb
    i32 115, label %sw.bb3
    i32 114, label %emit_queue.exit.sw.bb37_crit_edge
    i32 116, label %emit_queue.exit.sw.bb55_crit_edge
    i32 122, label %emit_queue.exit.sw.bb55_crit_edge1151
    i32 80, label %emit_queue.exit.sw.bb55_crit_edge1152
    i32 77, label %emit_queue.exit.sw.bb55_crit_edge1153
    i32 84, label %emit_queue.exit.sw.bb55_crit_edge1154
    i32 85, label %emit_queue.exit.sw.bb55_crit_edge1155
    i32 58, label %sw.bb59
    i32 60, label %sw.bb68
    i32 88, label %sw.bb78
    i32 96, label %sw.bb128
    i32 91, label %sw.bb132
    i32 92, label %sw.bb143
    i32 47, label %sw.bb154
    i32 39, label %sw.bb162
    i32 40, label %sw.bb162
    i32 43, label %sw.bb162
    i32 44, label %sw.bb162
    i32 51, label %sw.bb200
    i32 101, label %sw.bb266
    i32 102, label %sw.bb361
    i32 97, label %sw.bb459
    i32 98, label %sw.bb480
    i32 99, label %sw.bb501
    i32 100, label %sw.bb522
    i32 53, label %sw.bb613
    i32 109, label %sw.bb578
    i32 105, label %unordered_bcc
    i32 106, label %sw.bb575
    i32 107, label %sw.bb576
    i32 108, label %sw.bb577
    i32 103, label %if.end549
    i32 104, label %if.else548
  ]

emit_queue.exit.sw.bb55_crit_edge1155:            ; preds = %emit_queue.exit
  %operands57.phi.trans.insert = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx58.phi.trans.insert = bitcast i32* %operands57.phi.trans.insert to %union.tree_node**
  %.pre1166 = load %union.tree_node** %arrayidx58.phi.trans.insert, align 8, !tbaa !1
  br label %sw.bb55

emit_queue.exit.sw.bb55_crit_edge1154:            ; preds = %emit_queue.exit
  %operands57.phi.trans.insert1158 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx58.phi.trans.insert1159 = bitcast i32* %operands57.phi.trans.insert1158 to %union.tree_node**
  %.pre1168 = load %union.tree_node** %arrayidx58.phi.trans.insert1159, align 8, !tbaa !1
  br label %sw.bb55

emit_queue.exit.sw.bb55_crit_edge1153:            ; preds = %emit_queue.exit
  %operands57.phi.trans.insert1162 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx58.phi.trans.insert1163 = bitcast i32* %operands57.phi.trans.insert1162 to %union.tree_node**
  %.pre1170 = load %union.tree_node** %arrayidx58.phi.trans.insert1163, align 8, !tbaa !1
  br label %sw.bb55

emit_queue.exit.sw.bb55_crit_edge1152:            ; preds = %emit_queue.exit
  %operands57.phi.trans.insert1156 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx58.phi.trans.insert1157 = bitcast i32* %operands57.phi.trans.insert1156 to %union.tree_node**
  %.pre1167 = load %union.tree_node** %arrayidx58.phi.trans.insert1157, align 8, !tbaa !1
  br label %sw.bb55

emit_queue.exit.sw.bb55_crit_edge1151:            ; preds = %emit_queue.exit
  %operands57.phi.trans.insert1164 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx58.phi.trans.insert1165 = bitcast i32* %operands57.phi.trans.insert1164 to %union.tree_node**
  %.pre1171 = load %union.tree_node** %arrayidx58.phi.trans.insert1165, align 8, !tbaa !1
  br label %sw.bb55

emit_queue.exit.sw.bb55_crit_edge:                ; preds = %emit_queue.exit
  %operands57.phi.trans.insert1160 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx58.phi.trans.insert1161 = bitcast i32* %operands57.phi.trans.insert1160 to %union.tree_node**
  %.pre1169 = load %union.tree_node** %arrayidx58.phi.trans.insert1161, align 8, !tbaa !1
  br label %sw.bb55

emit_queue.exit.sw.bb37_crit_edge:                ; preds = %emit_queue.exit
  %operands44.phi.trans.insert = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx45.phi.trans.insert = bitcast i32* %operands44.phi.trans.insert to %union.tree_node**
  %.pre1150 = load %union.tree_node** %arrayidx45.phi.trans.insert, align 8, !tbaa !1
  br label %sw.bb37

sw.bb:                                            ; preds = %emit_queue.exit
  %call = tail call i32 @integer_zerop(%union.tree_node* %exp) #5
  %tobool = icmp ne i32 %call, 0
  %cond = select i1 %tobool, %struct.rtx_def* %if_false_label, %struct.rtx_def* %if_true_label
  %tobool2 = icmp eq %struct.rtx_def* %cond, null
  br i1 %tobool2, label %if.end740, label %if.then

if.then:                                          ; preds = %sw.bb
  tail call void @emit_jump(%struct.rtx_def* %cond) #5
  br label %if.end740

sw.bb3:                                           ; preds = %emit_queue.exit
  %operands = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx = bitcast i32* %operands to %union.tree_node**
  %16 = load %union.tree_node** %arrayidx, align 8, !tbaa !1
  %code6 = getelementptr inbounds %union.tree_node* %16, i64 0, i32 0, i32 0, i32 2
  %bf.load7 = load i32* %code6, align 8
  %bf.clear8 = and i32 %bf.load7, 255
  switch i32 %bf.clear8, label %sw.bb37 [
    i32 39, label %normal
    i32 40, label %normal
    i32 43, label %normal
    i32 44, label %normal
  ]

sw.bb37:                                          ; preds = %emit_queue.exit.sw.bb37_crit_edge, %sw.bb3
  %17 = phi %union.tree_node* [ %.pre1150, %emit_queue.exit.sw.bb37_crit_edge ], [ %16, %sw.bb3 ]
  %type39 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 1
  %18 = load %union.tree_node** %type39, align 8, !tbaa !36
  %type40 = bitcast %union.tree_node* %18 to %struct.tree_type*
  %precision = getelementptr inbounds %struct.tree_type* %type40, i64 0, i32 6
  %bf.load41 = load i32* %precision, align 4
  %bf.clear42 = and i32 %bf.load41, 511
  %type47 = getelementptr inbounds %union.tree_node* %17, i64 0, i32 0, i32 0, i32 1
  %19 = load %union.tree_node** %type47, align 8, !tbaa !36
  %type48 = bitcast %union.tree_node* %19 to %struct.tree_type*
  %precision49 = getelementptr inbounds %struct.tree_type* %type48, i64 0, i32 6
  %bf.load50 = load i32* %precision49, align 4
  %bf.clear51 = and i32 %bf.load50, 511
  %cmp52 = icmp ult i32 %bf.clear42, %bf.clear51
  br i1 %cmp52, label %normal, label %sw.bb55

sw.bb55:                                          ; preds = %emit_queue.exit.sw.bb55_crit_edge1155, %emit_queue.exit.sw.bb55_crit_edge1154, %emit_queue.exit.sw.bb55_crit_edge1153, %emit_queue.exit.sw.bb55_crit_edge1152, %emit_queue.exit.sw.bb55_crit_edge1151, %emit_queue.exit.sw.bb55_crit_edge, %sw.bb37
  %20 = phi %union.tree_node* [ %.pre1166, %emit_queue.exit.sw.bb55_crit_edge1155 ], [ %.pre1168, %emit_queue.exit.sw.bb55_crit_edge1154 ], [ %.pre1170, %emit_queue.exit.sw.bb55_crit_edge1153 ], [ %.pre1167, %emit_queue.exit.sw.bb55_crit_edge1152 ], [ %.pre1171, %emit_queue.exit.sw.bb55_crit_edge1151 ], [ %.pre1169, %emit_queue.exit.sw.bb55_crit_edge ], [ %17, %sw.bb37 ]
  tail call void @do_jump(%union.tree_node* %20, %struct.rtx_def* %if_false_label, %struct.rtx_def* %if_true_label)
  br label %if.end740

sw.bb59:                                          ; preds = %emit_queue.exit
  %operands61 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx62 = getelementptr inbounds i32* %operands61, i64 2
  %21 = bitcast i32* %arrayidx62 to %union.tree_node**
  %22 = load %union.tree_node** %21, align 8, !tbaa !1
  %23 = load %union.tree_node** @placeholder_list, align 8, !tbaa !1
  %call63 = tail call %union.tree_node* @tree_cons(%union.tree_node* %22, %union.tree_node* null, %union.tree_node* %23) #5
  store %union.tree_node* %call63, %union.tree_node** @placeholder_list, align 8, !tbaa !1
  %arrayidx66 = bitcast i32* %operands61 to %union.tree_node**
  %24 = load %union.tree_node** %arrayidx66, align 8, !tbaa !1
  tail call void @do_jump(%union.tree_node* %24, %struct.rtx_def* %if_false_label, %struct.rtx_def* %if_true_label)
  %25 = load %union.tree_node** @placeholder_list, align 8, !tbaa !1
  %chain = getelementptr inbounds %union.tree_node* %25, i64 0, i32 0, i32 0, i32 0
  %26 = load %union.tree_node** %chain, align 8, !tbaa !34
  store %union.tree_node* %26, %union.tree_node** @placeholder_list, align 8, !tbaa !1
  br label %if.end740

sw.bb68:                                          ; preds = %emit_queue.exit
  %type70 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 1
  %27 = load %union.tree_node** %type70, align 8, !tbaa !36
  %operands72 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx73 = bitcast i32* %operands72 to %union.tree_node**
  %28 = load %union.tree_node** %arrayidx73, align 8, !tbaa !1
  %arrayidx76 = getelementptr inbounds i32* %operands72, i64 2
  %29 = bitcast i32* %arrayidx76 to %union.tree_node**
  %30 = load %union.tree_node** %29, align 8, !tbaa !1
  %call77 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 102, %union.tree_node* %27, %union.tree_node* %28, %union.tree_node* %30) #5
  tail call fastcc void @do_compare_and_jump(%union.tree_node* %call77, i32 102, i32 102, %struct.rtx_def* %if_false_label, %struct.rtx_def* %if_true_label)
  br label %if.end740

sw.bb78:                                          ; preds = %emit_queue.exit
  %operands80 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx81 = getelementptr inbounds i32* %operands80, i64 2
  %31 = bitcast i32* %arrayidx81 to %union.tree_node**
  %32 = load %union.tree_node** %31, align 8, !tbaa !1
  %code83 = getelementptr inbounds %union.tree_node* %32, i64 0, i32 0, i32 0, i32 2
  %bf.load84 = load i32* %code83, align 8
  %bf.clear85 = and i32 %bf.load84, 255
  %cmp86 = icmp eq i32 %bf.clear85, 25
  br i1 %cmp86, label %land.lhs.true, label %normal

land.lhs.true:                                    ; preds = %sw.bb78
  %type88 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 1
  %33 = load %union.tree_node** %type88, align 8, !tbaa !36
  %type89 = bitcast %union.tree_node* %33 to %struct.tree_type*
  %precision90 = getelementptr inbounds %struct.tree_type* %type89, i64 0, i32 6
  %bf.load91 = load i32* %precision90, align 4
  %bf.clear92 = and i32 %bf.load91, 511
  %cmp93 = icmp ult i32 %bf.clear92, 65
  br i1 %cmp93, label %land.lhs.true94, label %normal

land.lhs.true94:                                  ; preds = %land.lhs.true
  %call98 = tail call i32 @tree_floor_log2(%union.tree_node* %32) #5
  %cmp99 = icmp sgt i32 %call98, -1
  br i1 %cmp99, label %land.lhs.true100, label %normal

land.lhs.true100:                                 ; preds = %land.lhs.true94
  %add = add nsw i32 %call98, 1
  %call101 = tail call i32 @mode_for_size(i32 %add, i32 1, i32 0) #5
  %cmp102 = icmp eq i32 %call101, 51
  br i1 %cmp102, label %normal, label %land.lhs.true103

land.lhs.true103:                                 ; preds = %land.lhs.true100
  %call104 = tail call %union.tree_node* @type_for_mode(i32 %call101, i32 1) #5
  %cmp105 = icmp eq %union.tree_node* %call104, null
  br i1 %cmp105, label %normal, label %land.lhs.true106

land.lhs.true106:                                 ; preds = %land.lhs.true103
  %type107 = bitcast %union.tree_node* %call104 to %struct.tree_type*
  %precision108 = getelementptr inbounds %struct.tree_type* %type107, i64 0, i32 6
  %bf.load109 = load i32* %precision108, align 4
  %bf.clear110 = and i32 %bf.load109, 511
  %34 = load %union.tree_node** %type88, align 8, !tbaa !36
  %type113 = bitcast %union.tree_node* %34 to %struct.tree_type*
  %precision114 = getelementptr inbounds %struct.tree_type* %type113, i64 0, i32 6
  %bf.load115 = load i32* %precision114, align 4
  %bf.clear116 = and i32 %bf.load115, 511
  %cmp117 = icmp ult i32 %bf.clear110, %bf.clear116
  br i1 %cmp117, label %land.lhs.true118, label %normal

land.lhs.true118:                                 ; preds = %land.lhs.true106
  %bf.lshr = lshr i32 %bf.load109, 9
  %bf.clear122 = and i32 %bf.lshr, 127
  %idxprom988 = zext i32 %bf.clear122 to i64
  %35 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 41), align 8, !tbaa !1
  %insn_code = getelementptr inbounds %struct.optab* %35, i64 0, i32 1, i64 %idxprom988, i32 0
  %36 = load i32* %insn_code, align 4, !tbaa !23
  %cmp124 = icmp eq i32 %36, 1317
  br i1 %cmp124, label %normal, label %if.then125

if.then125:                                       ; preds = %land.lhs.true118
  %call126 = tail call %union.tree_node* @convert(%union.tree_node* %call104, %union.tree_node* %exp) #5
  tail call void @do_jump(%union.tree_node* %call126, %struct.rtx_def* %if_false_label, %struct.rtx_def* %if_true_label)
  br label %if.end740

sw.bb128:                                         ; preds = %emit_queue.exit
  %operands130 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx131 = bitcast i32* %operands130 to %union.tree_node**
  %37 = load %union.tree_node** %arrayidx131, align 8, !tbaa !1
  tail call void @do_jump(%union.tree_node* %37, %struct.rtx_def* %if_true_label, %struct.rtx_def* %if_false_label)
  br label %if.end740

sw.bb132:                                         ; preds = %emit_queue.exit
  %cmp133 = icmp eq %struct.rtx_def* %if_false_label, null
  br i1 %cmp133, label %if.then134, label %if.end136

if.then134:                                       ; preds = %sw.bb132
  %call135 = tail call %struct.rtx_def* @gen_label_rtx() #5
  br label %if.end136

if.end136:                                        ; preds = %if.then134, %sw.bb132
  %drop_through_label.0 = phi %struct.rtx_def* [ %call135, %if.then134 ], [ null, %sw.bb132 ]
  %if_false_label.addr.0 = phi %struct.rtx_def* [ %call135, %if.then134 ], [ %if_false_label, %sw.bb132 ]
  %operands138 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx139 = bitcast i32* %operands138 to %union.tree_node**
  %38 = load %union.tree_node** %arrayidx139, align 8, !tbaa !1
  tail call void @do_jump(%union.tree_node* %38, %struct.rtx_def* %if_false_label.addr.0, %struct.rtx_def* null)
  tail call void @start_cleanup_deferral() #5
  %arrayidx142 = getelementptr inbounds i32* %operands138, i64 2
  %39 = bitcast i32* %arrayidx142 to %union.tree_node**
  %40 = load %union.tree_node** %39, align 8, !tbaa !1
  tail call void @do_jump(%union.tree_node* %40, %struct.rtx_def* %if_false_label.addr.0, %struct.rtx_def* %if_true_label)
  tail call void @end_cleanup_deferral() #5
  br label %sw.epilog

sw.bb143:                                         ; preds = %emit_queue.exit
  %cmp144 = icmp eq %struct.rtx_def* %if_true_label, null
  br i1 %cmp144, label %if.then145, label %if.end147

if.then145:                                       ; preds = %sw.bb143
  %call146 = tail call %struct.rtx_def* @gen_label_rtx() #5
  br label %if.end147

if.end147:                                        ; preds = %if.then145, %sw.bb143
  %drop_through_label.1 = phi %struct.rtx_def* [ %call146, %if.then145 ], [ null, %sw.bb143 ]
  %if_true_label.addr.0 = phi %struct.rtx_def* [ %call146, %if.then145 ], [ %if_true_label, %sw.bb143 ]
  %operands149 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx150 = bitcast i32* %operands149 to %union.tree_node**
  %41 = load %union.tree_node** %arrayidx150, align 8, !tbaa !1
  tail call void @do_jump(%union.tree_node* %41, %struct.rtx_def* null, %struct.rtx_def* %if_true_label.addr.0)
  tail call void @start_cleanup_deferral() #5
  %arrayidx153 = getelementptr inbounds i32* %operands149, i64 2
  %42 = bitcast i32* %arrayidx153 to %union.tree_node**
  %43 = load %union.tree_node** %42, align 8, !tbaa !1
  tail call void @do_jump(%union.tree_node* %43, %struct.rtx_def* %if_false_label, %struct.rtx_def* %if_true_label.addr.0)
  tail call void @end_cleanup_deferral() #5
  br label %sw.epilog

sw.bb154:                                         ; preds = %emit_queue.exit
  tail call void @push_temp_slots() #5
  %operands156 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx157 = bitcast i32* %operands156 to %union.tree_node**
  %44 = load %union.tree_node** %arrayidx157, align 8, !tbaa !1
  %45 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call158 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %44, %struct.rtx_def* %45, i32 0, i32 0)
  tail call void @preserve_temp_slots(%struct.rtx_def* null) #5
  tail call void @free_temp_slots() #5
  tail call void @pop_temp_slots() #5
  %46 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr30.i991 = getelementptr inbounds %struct.function* %46, i64 0, i32 2
  %47 = load %struct.expr_status** %expr30.i991, align 8, !tbaa !6
  %x_pending_chain31.i992 = getelementptr inbounds %struct.expr_status* %47, i64 0, i32 6
  %48 = load %struct.rtx_def** %x_pending_chain31.i992, align 8, !tbaa !11
  %tobool32.i993 = icmp eq %struct.rtx_def* %48, null
  br i1 %tobool32.i993, label %emit_queue.exit1017, label %while.body.i999

while.body.i999:                                  ; preds = %sw.bb154, %if.end.i1016
  %49 = phi %struct.rtx_def* [ %61, %if.end.i1016 ], [ %48, %sw.bb154 ]
  %arrayidx.i994 = getelementptr inbounds %struct.rtx_def* %49, i64 0, i32 1, i64 3
  %rtx.i995 = bitcast %union.rtunion_def* %arrayidx.i994 to %struct.rtx_def**
  %50 = load %struct.rtx_def** %rtx.i995, align 8, !tbaa !1
  %51 = getelementptr inbounds %struct.rtx_def* %50, i64 0, i32 0
  %bf.load.i996 = load i32* %51, align 8
  %bf.clear.i997 = and i32 %bf.load.i996, 65535
  %cmp.i998 = icmp eq i32 %bf.clear.i997, 24
  br i1 %cmp.i998, label %if.then.i1005, label %if.else.i1008

if.then.i1005:                                    ; preds = %while.body.i999
  %arrayidx5.i1000 = getelementptr inbounds %struct.rtx_def* %50, i64 0, i32 1, i64 0
  %rtvec.i1001 = bitcast %union.rtunion_def* %arrayidx5.i1000 to %struct.rtvec_def**
  %52 = load %struct.rtvec_def** %rtvec.i1001, align 8, !tbaa !1
  %arrayidx6.i1002 = getelementptr inbounds %struct.rtvec_def* %52, i64 0, i32 1, i64 0
  %53 = load %struct.rtx_def** %arrayidx6.i1002, align 8, !tbaa !1
  %54 = getelementptr inbounds %struct.rtx_def* %49, i64 0, i32 1, i64 1, i32 0
  %.c.i1003 = ptrtoint %struct.rtx_def* %53 to i64
  store i64 %.c.i1003, i64* %54, align 8, !tbaa !1
  %call.i1004 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %50) #5
  br label %if.end.i1016

if.else.i1008:                                    ; preds = %while.body.i999
  %call16.i1006 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %50) #5
  %55 = getelementptr inbounds %struct.rtx_def* %49, i64 0, i32 1, i64 1, i32 0
  %call16.c.i1007 = ptrtoint %struct.rtx_def* %call16.i1006 to i64
  store i64 %call16.c.i1007, i64* %55, align 8, !tbaa !1
  br label %if.end.i1016

if.end.i1016:                                     ; preds = %if.else.i1008, %if.then.i1005
  %arrayidx21.i1009 = getelementptr inbounds %struct.rtx_def* %49, i64 0, i32 1, i64 4
  %rtx22.i1010 = bitcast %union.rtunion_def* %arrayidx21.i1009 to %struct.rtx_def**
  %56 = load %struct.rtx_def** %rtx22.i1010, align 8, !tbaa !1
  %57 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr23.i1011 = getelementptr inbounds %struct.function* %57, i64 0, i32 2
  %58 = load %struct.expr_status** %expr23.i1011, align 8, !tbaa !6
  %x_pending_chain24.i1012 = getelementptr inbounds %struct.expr_status* %58, i64 0, i32 6
  store %struct.rtx_def* %56, %struct.rtx_def** %x_pending_chain24.i1012, align 8, !tbaa !11
  %59 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr.i1013 = getelementptr inbounds %struct.function* %59, i64 0, i32 2
  %60 = load %struct.expr_status** %expr.i1013, align 8, !tbaa !6
  %x_pending_chain.i1014 = getelementptr inbounds %struct.expr_status* %60, i64 0, i32 6
  %61 = load %struct.rtx_def** %x_pending_chain.i1014, align 8, !tbaa !11
  %tobool.i1015 = icmp eq %struct.rtx_def* %61, null
  br i1 %tobool.i1015, label %emit_queue.exit1017, label %while.body.i999

emit_queue.exit1017:                              ; preds = %if.end.i1016, %sw.bb154
  %62 = phi %struct.expr_status* [ %47, %sw.bb154 ], [ %60, %if.end.i1016 ]
  %x_inhibit_defer_pop.i = getelementptr inbounds %struct.expr_status* %62, i64 0, i32 1
  %63 = load i32* %x_inhibit_defer_pop.i, align 4, !tbaa !15
  %cmp.i1019 = icmp eq i32 %63, 0
  br i1 %cmp.i1019, label %if.then.i1020, label %do_pending_stack_adjust.exit

if.then.i1020:                                    ; preds = %emit_queue.exit1017
  %x_pending_stack_adjust.i = getelementptr inbounds %struct.expr_status* %62, i64 0, i32 0
  %64 = load i32* %x_pending_stack_adjust.i, align 4, !tbaa !13
  %cmp2.i = icmp eq i32 %64, 0
  br i1 %cmp2.i, label %if.end.i1022, label %if.then3.i

if.then3.i:                                       ; preds = %if.then.i1020
  %conv.i = sext i32 %64 to i64
  %call.i1021 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv.i) #5
  tail call void @adjust_stack(%struct.rtx_def* %call.i1021) #5
  %.pre.i = load %struct.function** @cfun, align 8, !tbaa !1
  %expr6.phi.trans.insert.i = getelementptr inbounds %struct.function* %.pre.i, i64 0, i32 2
  %.pre9.i = load %struct.expr_status** %expr6.phi.trans.insert.i, align 8, !tbaa !6
  br label %if.end.i1022

if.end.i1022:                                     ; preds = %if.then3.i, %if.then.i1020
  %65 = phi %struct.expr_status* [ %62, %if.then.i1020 ], [ %.pre9.i, %if.then3.i ]
  %x_pending_stack_adjust7.i = getelementptr inbounds %struct.expr_status* %65, i64 0, i32 0
  store i32 0, i32* %x_pending_stack_adjust7.i, align 4, !tbaa !13
  br label %do_pending_stack_adjust.exit

do_pending_stack_adjust.exit:                     ; preds = %emit_queue.exit1017, %if.end.i1022
  %arrayidx161 = getelementptr inbounds i32* %operands156, i64 2
  %66 = bitcast i32* %arrayidx161 to %union.tree_node**
  %67 = load %union.tree_node** %66, align 8, !tbaa !1
  tail call void @do_jump(%union.tree_node* %67, %struct.rtx_def* %if_false_label, %struct.rtx_def* %if_true_label)
  br label %if.end740

sw.bb162:                                         ; preds = %emit_queue.exit, %emit_queue.exit, %emit_queue.exit, %emit_queue.exit
  store i32 0, i32* %volatilep, align 4, !tbaa !21
  %call165 = call %union.tree_node* @get_inner_reference(%union.tree_node* %exp, i64* %bitsize, i64* %bitpos, %union.tree_node** %offset, i32* %mode163, i32* %unsignedp, i32* %volatilep)
  %68 = load i64* %bitsize, align 8
  %conv = trunc i64 %68 to i32
  %69 = load i32* %unsignedp, align 4, !tbaa !21
  %call166 = tail call %union.tree_node* @type_for_size(i32 %conv, i32 %69) #5
  %cmp167 = icmp ne %union.tree_node* %call166, null
  %cmp170 = icmp sgt i64 %68, -1
  %or.cond = and i1 %cmp167, %cmp170
  br i1 %or.cond, label %land.lhs.true172, label %normal

land.lhs.true172:                                 ; preds = %sw.bb162
  %type173 = bitcast %union.tree_node* %call166 to %struct.tree_type*
  %precision174 = getelementptr inbounds %struct.tree_type* %type173, i64 0, i32 6
  %bf.load175 = load i32* %precision174, align 4
  %bf.clear176 = and i32 %bf.load175, 511
  %type178 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 1
  %70 = load %union.tree_node** %type178, align 8, !tbaa !36
  %type179 = bitcast %union.tree_node* %70 to %struct.tree_type*
  %precision180 = getelementptr inbounds %struct.tree_type* %type179, i64 0, i32 6
  %bf.load181 = load i32* %precision180, align 4
  %bf.clear182 = and i32 %bf.load181, 511
  %cmp183 = icmp ult i32 %bf.clear176, %bf.clear182
  br i1 %cmp183, label %land.lhs.true185, label %normal

land.lhs.true185:                                 ; preds = %land.lhs.true172
  %bf.lshr189 = lshr i32 %bf.load175, 9
  %bf.clear190 = and i32 %bf.lshr189, 127
  %idxprom191987 = zext i32 %bf.clear190 to i64
  %71 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 41), align 8, !tbaa !1
  %insn_code194 = getelementptr inbounds %struct.optab* %71, i64 0, i32 1, i64 %idxprom191987, i32 0
  %72 = load i32* %insn_code194, align 4, !tbaa !23
  %cmp195 = icmp eq i32 %72, 1317
  br i1 %cmp195, label %normal, label %if.then197

if.then197:                                       ; preds = %land.lhs.true185
  %call198 = tail call %union.tree_node* @convert(%union.tree_node* %call166, %union.tree_node* %exp) #5
  tail call void @do_jump(%union.tree_node* %call198, %struct.rtx_def* %if_false_label, %struct.rtx_def* %if_true_label)
  br label %if.end740

sw.bb200:                                         ; preds = %emit_queue.exit
  %operands202 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx203 = getelementptr inbounds i32* %operands202, i64 2
  %73 = bitcast i32* %arrayidx203 to %union.tree_node**
  %74 = load %union.tree_node** %73, align 8, !tbaa !1
  %call204 = tail call i32 @integer_onep(%union.tree_node* %74) #5
  %tobool205 = icmp eq i32 %call204, 0
  br i1 %tobool205, label %if.else, label %land.lhs.true206

land.lhs.true206:                                 ; preds = %sw.bb200
  %arrayidx209 = getelementptr inbounds i32* %operands202, i64 4
  %75 = bitcast i32* %arrayidx209 to %union.tree_node**
  %76 = load %union.tree_node** %75, align 8, !tbaa !1
  %call210 = tail call i32 @integer_zerop(%union.tree_node* %76) #5
  %tobool211 = icmp eq i32 %call210, 0
  br i1 %tobool211, label %if.else, label %if.then212

if.then212:                                       ; preds = %land.lhs.true206
  %arrayidx215 = bitcast i32* %operands202 to %union.tree_node**
  %77 = load %union.tree_node** %arrayidx215, align 8, !tbaa !1
  tail call void @do_jump(%union.tree_node* %77, %struct.rtx_def* %if_false_label, %struct.rtx_def* %if_true_label)
  br label %if.end740

if.else:                                          ; preds = %land.lhs.true206, %sw.bb200
  %78 = load %union.tree_node** %73, align 8, !tbaa !1
  %call219 = tail call i32 @integer_zerop(%union.tree_node* %78) #5
  %tobool220 = icmp eq i32 %call219, 0
  br i1 %tobool220, label %if.else231, label %land.lhs.true221

land.lhs.true221:                                 ; preds = %if.else
  %arrayidx224 = getelementptr inbounds i32* %operands202, i64 4
  %79 = bitcast i32* %arrayidx224 to %union.tree_node**
  %80 = load %union.tree_node** %79, align 8, !tbaa !1
  %call225 = tail call i32 @integer_onep(%union.tree_node* %80) #5
  %tobool226 = icmp eq i32 %call225, 0
  br i1 %tobool226, label %if.else231, label %if.then227

if.then227:                                       ; preds = %land.lhs.true221
  %arrayidx230 = bitcast i32* %operands202 to %union.tree_node**
  %81 = load %union.tree_node** %arrayidx230, align 8, !tbaa !1
  tail call void @do_jump(%union.tree_node* %81, %struct.rtx_def* %if_true_label, %struct.rtx_def* %if_false_label)
  br label %if.end740

if.else231:                                       ; preds = %land.lhs.true221, %if.else
  %call232 = tail call %struct.rtx_def* @gen_label_rtx() #5
  %call233 = tail call %struct.rtx_def* @gen_label_rtx() #5
  %arrayidx236 = bitcast i32* %operands202 to %union.tree_node**
  %82 = load %union.tree_node** %arrayidx236, align 8, !tbaa !1
  tail call void @do_jump(%union.tree_node* %82, %struct.rtx_def* %call232, %struct.rtx_def* null)
  tail call void @start_cleanup_deferral() #5
  %83 = load %union.tree_node** %73, align 8, !tbaa !1
  %tobool240 = icmp ne %struct.rtx_def* %if_false_label, null
  %cond244 = select i1 %tobool240, %struct.rtx_def* %if_false_label, %struct.rtx_def* %call233
  %tobool245 = icmp ne %struct.rtx_def* %if_true_label, null
  %cond249 = select i1 %tobool245, %struct.rtx_def* %if_true_label, %struct.rtx_def* %call233
  tail call void @do_jump(%union.tree_node* %83, %struct.rtx_def* %cond244, %struct.rtx_def* %cond249)
  %84 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr.i1023 = getelementptr inbounds %struct.function* %84, i64 0, i32 2
  %85 = load %struct.expr_status** %expr.i1023, align 8, !tbaa !6
  %x_inhibit_defer_pop.i1024 = getelementptr inbounds %struct.expr_status* %85, i64 0, i32 1
  %86 = load i32* %x_inhibit_defer_pop.i1024, align 4, !tbaa !15
  %cmp.i1025 = icmp eq i32 %86, 0
  br i1 %cmp.i1025, label %if.then.i1028, label %do_pending_stack_adjust.exit1037

if.then.i1028:                                    ; preds = %if.else231
  %x_pending_stack_adjust.i1026 = getelementptr inbounds %struct.expr_status* %85, i64 0, i32 0
  %87 = load i32* %x_pending_stack_adjust.i1026, align 4, !tbaa !13
  %cmp2.i1027 = icmp eq i32 %87, 0
  br i1 %cmp2.i1027, label %if.end.i1036, label %if.then3.i1034

if.then3.i1034:                                   ; preds = %if.then.i1028
  %conv.i1029 = sext i32 %87 to i64
  %call.i1030 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv.i1029) #5
  tail call void @adjust_stack(%struct.rtx_def* %call.i1030) #5
  %.pre.i1031 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr6.phi.trans.insert.i1032 = getelementptr inbounds %struct.function* %.pre.i1031, i64 0, i32 2
  %.pre9.i1033 = load %struct.expr_status** %expr6.phi.trans.insert.i1032, align 8, !tbaa !6
  br label %if.end.i1036

if.end.i1036:                                     ; preds = %if.then3.i1034, %if.then.i1028
  %88 = phi %struct.expr_status* [ %85, %if.then.i1028 ], [ %.pre9.i1033, %if.then3.i1034 ]
  %x_pending_stack_adjust7.i1035 = getelementptr inbounds %struct.expr_status* %88, i64 0, i32 0
  store i32 0, i32* %x_pending_stack_adjust7.i1035, align 4, !tbaa !13
  br label %do_pending_stack_adjust.exit1037

do_pending_stack_adjust.exit1037:                 ; preds = %if.else231, %if.end.i1036
  %call250 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call232) #5
  %arrayidx253 = getelementptr inbounds i32* %operands202, i64 4
  %89 = bitcast i32* %arrayidx253 to %union.tree_node**
  %90 = load %union.tree_node** %89, align 8, !tbaa !1
  tail call void @do_jump(%union.tree_node* %90, %struct.rtx_def* %cond244, %struct.rtx_def* %cond249)
  tail call void @end_cleanup_deferral() #5
  br label %sw.epilog

sw.bb266:                                         ; preds = %emit_queue.exit
  %operands268 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx269 = bitcast i32* %operands268 to %union.tree_node**
  %91 = load %union.tree_node** %arrayidx269, align 8, !tbaa !1
  %type271 = getelementptr inbounds %union.tree_node* %91, i64 0, i32 0, i32 0, i32 1
  %92 = load %union.tree_node** %type271, align 8, !tbaa !36
  %type272 = bitcast %union.tree_node* %92 to %struct.tree_type*
  %mode273 = getelementptr inbounds %struct.tree_type* %type272, i64 0, i32 6
  %bf.load274 = load i32* %mode273, align 4
  %bf.lshr275 = lshr i32 %bf.load274, 9
  %bf.clear276 = and i32 %bf.lshr275, 127
  %idxprom277985 = zext i32 %bf.clear276 to i64
  %arrayidx278 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom277985
  %93 = load i32* %arrayidx278, align 4, !tbaa !5
  %.off = add i32 %93, -5
  %switch = icmp ult i32 %.off, 2
  br i1 %switch, label %if.then291, label %if.else328

if.then291:                                       ; preds = %sw.bb266
  %call295 = tail call %union.tree_node* @save_expr(%union.tree_node* %91) #5
  %arrayidx298 = getelementptr inbounds i32* %operands268, i64 2
  %94 = bitcast i32* %arrayidx298 to %union.tree_node**
  %95 = load %union.tree_node** %94, align 8, !tbaa !1
  %call299 = tail call %union.tree_node* @save_expr(%union.tree_node* %95) #5
  %type301 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 1
  %96 = load %union.tree_node** %type301, align 8, !tbaa !36
  %type305 = getelementptr inbounds %union.tree_node* %92, i64 0, i32 0, i32 0, i32 1
  %97 = load %union.tree_node** %type305, align 8, !tbaa !36
  %call306 = tail call %union.tree_node* @build1(i32 127, %union.tree_node* %97, %union.tree_node* %call295) #5
  %call307 = tail call %union.tree_node* @fold(%union.tree_node* %call306) #5
  %98 = load %union.tree_node** %type305, align 8, !tbaa !36
  %call310 = tail call %union.tree_node* @build1(i32 127, %union.tree_node* %98, %union.tree_node* %call299) #5
  %call311 = tail call %union.tree_node* @fold(%union.tree_node* %call310) #5
  %call312 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 101, %union.tree_node* %96, %union.tree_node* %call307, %union.tree_node* %call311) #5
  %call313 = tail call %union.tree_node* @fold(%union.tree_node* %call312) #5
  %99 = load %union.tree_node** %type301, align 8, !tbaa !36
  %100 = load %union.tree_node** %type305, align 8, !tbaa !36
  %call318 = tail call %union.tree_node* @build1(i32 128, %union.tree_node* %100, %union.tree_node* %call295) #5
  %call319 = tail call %union.tree_node* @fold(%union.tree_node* %call318) #5
  %101 = load %union.tree_node** %type305, align 8, !tbaa !36
  %call322 = tail call %union.tree_node* @build1(i32 128, %union.tree_node* %101, %union.tree_node* %call299) #5
  %call323 = tail call %union.tree_node* @fold(%union.tree_node* %call322) #5
  %call324 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 101, %union.tree_node* %99, %union.tree_node* %call319, %union.tree_node* %call323) #5
  %call325 = tail call %union.tree_node* @fold(%union.tree_node* %call324) #5
  %call326 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 91, %union.tree_node* %96, %union.tree_node* %call313, %union.tree_node* %call325) #5
  %call327 = tail call %union.tree_node* @fold(%union.tree_node* %call326) #5
  tail call void @do_jump(%union.tree_node* %call327, %struct.rtx_def* %if_false_label, %struct.rtx_def* %if_true_label)
  br label %if.end740

if.else328:                                       ; preds = %sw.bb266
  %arrayidx331 = getelementptr inbounds i32* %operands268, i64 2
  %102 = bitcast i32* %arrayidx331 to %union.tree_node**
  %103 = load %union.tree_node** %102, align 8, !tbaa !1
  %call332 = tail call i32 @integer_zerop(%union.tree_node* %103) #5
  %tobool333 = icmp eq i32 %call332, 0
  br i1 %tobool333, label %if.else338, label %if.then334

if.then334:                                       ; preds = %if.else328
  %104 = load %union.tree_node** %arrayidx269, align 8, !tbaa !1
  tail call void @do_jump(%union.tree_node* %104, %struct.rtx_def* %if_true_label, %struct.rtx_def* %if_false_label)
  br label %if.end740

if.else338:                                       ; preds = %if.else328
  %bf.load341 = load i32* %mode273, align 4
  %bf.lshr342 = lshr i32 %bf.load341, 9
  %bf.clear343 = and i32 %bf.lshr342, 127
  %idxprom344986 = zext i32 %bf.clear343 to i64
  %arrayidx345 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom344986
  %105 = load i32* %arrayidx345, align 4, !tbaa !5
  %cmp346 = icmp eq i32 %105, 1
  br i1 %cmp346, label %land.lhs.true348, label %if.else357

land.lhs.true348:                                 ; preds = %if.else338
  %call354 = tail call i32 @can_compare_p(i32 103, i32 %bf.clear343, i32 0) #5
  %tobool355 = icmp eq i32 %call354, 0
  br i1 %tobool355, label %if.then356, label %if.else357

if.then356:                                       ; preds = %land.lhs.true348
  tail call fastcc void @do_jump_by_parts_equality(%union.tree_node* %exp, %struct.rtx_def* %if_false_label, %struct.rtx_def* %if_true_label)
  br label %if.end740

if.else357:                                       ; preds = %land.lhs.true348, %if.else338
  tail call fastcc void @do_compare_and_jump(%union.tree_node* %exp, i32 103, i32 103, %struct.rtx_def* %if_false_label, %struct.rtx_def* %if_true_label)
  br label %if.end740

sw.bb361:                                         ; preds = %emit_queue.exit
  %operands364 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx365 = bitcast i32* %operands364 to %union.tree_node**
  %106 = load %union.tree_node** %arrayidx365, align 8, !tbaa !1
  %type367 = getelementptr inbounds %union.tree_node* %106, i64 0, i32 0, i32 0, i32 1
  %107 = load %union.tree_node** %type367, align 8, !tbaa !36
  %type368 = bitcast %union.tree_node* %107 to %struct.tree_type*
  %mode369 = getelementptr inbounds %struct.tree_type* %type368, i64 0, i32 6
  %bf.load370 = load i32* %mode369, align 4
  %bf.lshr371 = lshr i32 %bf.load370, 9
  %bf.clear372 = and i32 %bf.lshr371, 127
  %idxprom373983 = zext i32 %bf.clear372 to i64
  %arrayidx374 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom373983
  %108 = load i32* %arrayidx374, align 4, !tbaa !5
  %.off989 = add i32 %108, -5
  %switch990 = icmp ult i32 %.off989, 2
  br i1 %switch990, label %if.then387, label %if.else426

if.then387:                                       ; preds = %sw.bb361
  %call392 = tail call %union.tree_node* @save_expr(%union.tree_node* %106) #5
  %arrayidx396 = getelementptr inbounds i32* %operands364, i64 2
  %109 = bitcast i32* %arrayidx396 to %union.tree_node**
  %110 = load %union.tree_node** %109, align 8, !tbaa !1
  %call397 = tail call %union.tree_node* @save_expr(%union.tree_node* %110) #5
  %type399 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 1
  %111 = load %union.tree_node** %type399, align 8, !tbaa !36
  %type403 = getelementptr inbounds %union.tree_node* %107, i64 0, i32 0, i32 0, i32 1
  %112 = load %union.tree_node** %type403, align 8, !tbaa !36
  %call404 = tail call %union.tree_node* @build1(i32 127, %union.tree_node* %112, %union.tree_node* %call392) #5
  %call405 = tail call %union.tree_node* @fold(%union.tree_node* %call404) #5
  %113 = load %union.tree_node** %type403, align 8, !tbaa !36
  %call408 = tail call %union.tree_node* @build1(i32 127, %union.tree_node* %113, %union.tree_node* %call397) #5
  %call409 = tail call %union.tree_node* @fold(%union.tree_node* %call408) #5
  %call410 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 102, %union.tree_node* %111, %union.tree_node* %call405, %union.tree_node* %call409) #5
  %call411 = tail call %union.tree_node* @fold(%union.tree_node* %call410) #5
  %114 = load %union.tree_node** %type399, align 8, !tbaa !36
  %115 = load %union.tree_node** %type403, align 8, !tbaa !36
  %call416 = tail call %union.tree_node* @build1(i32 128, %union.tree_node* %115, %union.tree_node* %call392) #5
  %call417 = tail call %union.tree_node* @fold(%union.tree_node* %call416) #5
  %116 = load %union.tree_node** %type403, align 8, !tbaa !36
  %call420 = tail call %union.tree_node* @build1(i32 128, %union.tree_node* %116, %union.tree_node* %call397) #5
  %call421 = tail call %union.tree_node* @fold(%union.tree_node* %call420) #5
  %call422 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 102, %union.tree_node* %114, %union.tree_node* %call417, %union.tree_node* %call421) #5
  %call423 = tail call %union.tree_node* @fold(%union.tree_node* %call422) #5
  %call424 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 92, %union.tree_node* %111, %union.tree_node* %call411, %union.tree_node* %call423) #5
  %call425 = tail call %union.tree_node* @fold(%union.tree_node* %call424) #5
  tail call void @do_jump(%union.tree_node* %call425, %struct.rtx_def* %if_false_label, %struct.rtx_def* %if_true_label)
  br label %if.end740

if.else426:                                       ; preds = %sw.bb361
  %arrayidx429 = getelementptr inbounds i32* %operands364, i64 2
  %117 = bitcast i32* %arrayidx429 to %union.tree_node**
  %118 = load %union.tree_node** %117, align 8, !tbaa !1
  %call430 = tail call i32 @integer_zerop(%union.tree_node* %118) #5
  %tobool431 = icmp eq i32 %call430, 0
  br i1 %tobool431, label %if.else436, label %if.then432

if.then432:                                       ; preds = %if.else426
  %119 = load %union.tree_node** %arrayidx365, align 8, !tbaa !1
  tail call void @do_jump(%union.tree_node* %119, %struct.rtx_def* %if_false_label, %struct.rtx_def* %if_true_label)
  br label %if.end740

if.else436:                                       ; preds = %if.else426
  %bf.load439 = load i32* %mode369, align 4
  %bf.lshr440 = lshr i32 %bf.load439, 9
  %bf.clear441 = and i32 %bf.lshr440, 127
  %idxprom442984 = zext i32 %bf.clear441 to i64
  %arrayidx443 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom442984
  %120 = load i32* %arrayidx443, align 4, !tbaa !5
  %cmp444 = icmp eq i32 %120, 1
  br i1 %cmp444, label %land.lhs.true446, label %if.else455

land.lhs.true446:                                 ; preds = %if.else436
  %call452 = tail call i32 @can_compare_p(i32 102, i32 %bf.clear441, i32 0) #5
  %tobool453 = icmp eq i32 %call452, 0
  br i1 %tobool453, label %if.then454, label %if.else455

if.then454:                                       ; preds = %land.lhs.true446
  tail call fastcc void @do_jump_by_parts_equality(%union.tree_node* %exp, %struct.rtx_def* %if_true_label, %struct.rtx_def* %if_false_label)
  br label %if.end740

if.else455:                                       ; preds = %land.lhs.true446, %if.else436
  tail call fastcc void @do_compare_and_jump(%union.tree_node* %exp, i32 102, i32 102, %struct.rtx_def* %if_false_label, %struct.rtx_def* %if_true_label)
  br label %if.end740

sw.bb459:                                         ; preds = %emit_queue.exit
  %operands461 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx462 = bitcast i32* %operands461 to %union.tree_node**
  %121 = load %union.tree_node** %arrayidx462, align 8, !tbaa !1
  %type464 = getelementptr inbounds %union.tree_node* %121, i64 0, i32 0, i32 0, i32 1
  %122 = load %union.tree_node** %type464, align 8, !tbaa !36
  %type465 = bitcast %union.tree_node* %122 to %struct.tree_type*
  %mode466 = getelementptr inbounds %struct.tree_type* %type465, i64 0, i32 6
  %bf.load467 = load i32* %mode466, align 4
  %bf.lshr468 = lshr i32 %bf.load467, 9
  %bf.clear469 = and i32 %bf.lshr468, 127
  %idxprom470982 = zext i32 %bf.clear469 to i64
  %arrayidx471 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom470982
  %123 = load i32* %arrayidx471, align 4, !tbaa !5
  %cmp472 = icmp eq i32 %123, 1
  br i1 %cmp472, label %land.lhs.true474, label %if.else478

land.lhs.true474:                                 ; preds = %sw.bb459
  %call475 = tail call i32 @can_compare_p(i32 107, i32 %bf.clear469, i32 0) #5
  %tobool476 = icmp eq i32 %call475, 0
  br i1 %tobool476, label %if.then477, label %if.else478

if.then477:                                       ; preds = %land.lhs.true474
  %arrayidx.i1133 = getelementptr inbounds i32* %operands461, i64 2
  %124 = bitcast i32* %arrayidx.i1133 to %union.tree_node**
  %125 = load %union.tree_node** %124, align 8, !tbaa !1
  %call.i1134 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %125, %struct.rtx_def* null, i32 0, i32 0) #5
  %126 = load %union.tree_node** %arrayidx462, align 8, !tbaa !1
  %call6.i1136 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %126, %struct.rtx_def* null, i32 0, i32 0) #5
  %127 = load %union.tree_node** %arrayidx462, align 8, !tbaa !1
  %type.i1138 = getelementptr inbounds %union.tree_node* %127, i64 0, i32 0, i32 0, i32 1
  %128 = load %union.tree_node** %type.i1138, align 8, !tbaa !36
  %type10.i1139 = bitcast %union.tree_node* %128 to %struct.tree_type*
  %mode11.i1140 = getelementptr inbounds %struct.tree_type* %type10.i1139, i64 0, i32 6
  %bf.load.i1141 = load i32* %mode11.i1140, align 4
  %bf.lshr.i1142 = lshr i32 %bf.load.i1141, 9
  %bf.clear.i1143 = and i32 %bf.lshr.i1142, 127
  %unsigned_flag.i1144 = getelementptr inbounds %union.tree_node* %128, i64 0, i32 0, i32 0, i32 2
  %bf.load18.i1145 = load i32* %unsigned_flag.i1144, align 8
  %bf.lshr19.i1146 = lshr i32 %bf.load18.i1145, 13
  %bf.clear20.i1147 = and i32 %bf.lshr19.i1146, 1
  tail call void @do_jump_by_parts_greater_rtx(i32 %bf.clear.i1143, i32 %bf.clear20.i1147, %struct.rtx_def* %call.i1134, %struct.rtx_def* %call6.i1136, %struct.rtx_def* %if_false_label, %struct.rtx_def* %if_true_label) #5
  br label %if.end740

if.else478:                                       ; preds = %land.lhs.true474, %sw.bb459
  tail call fastcc void @do_compare_and_jump(%union.tree_node* %exp, i32 107, i32 111, %struct.rtx_def* %if_false_label, %struct.rtx_def* %if_true_label)
  br label %if.end740

sw.bb480:                                         ; preds = %emit_queue.exit
  %operands482 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx483 = bitcast i32* %operands482 to %union.tree_node**
  %129 = load %union.tree_node** %arrayidx483, align 8, !tbaa !1
  %type485 = getelementptr inbounds %union.tree_node* %129, i64 0, i32 0, i32 0, i32 1
  %130 = load %union.tree_node** %type485, align 8, !tbaa !36
  %type486 = bitcast %union.tree_node* %130 to %struct.tree_type*
  %mode487 = getelementptr inbounds %struct.tree_type* %type486, i64 0, i32 6
  %bf.load488 = load i32* %mode487, align 4
  %bf.lshr489 = lshr i32 %bf.load488, 9
  %bf.clear490 = and i32 %bf.lshr489, 127
  %idxprom491981 = zext i32 %bf.clear490 to i64
  %arrayidx492 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom491981
  %131 = load i32* %arrayidx492, align 4, !tbaa !5
  %cmp493 = icmp eq i32 %131, 1
  br i1 %cmp493, label %land.lhs.true495, label %if.else499

land.lhs.true495:                                 ; preds = %sw.bb480
  %call496 = tail call i32 @can_compare_p(i32 106, i32 %bf.clear490, i32 0) #5
  %tobool497 = icmp eq i32 %call496, 0
  br i1 %tobool497, label %if.then498, label %if.else499

if.then498:                                       ; preds = %land.lhs.true495
  %132 = load %union.tree_node** %arrayidx483, align 8, !tbaa !1
  %call.i1118 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %132, %struct.rtx_def* null, i32 0, i32 0) #5
  %arrayidx5.i1119 = getelementptr inbounds i32* %operands482, i64 2
  %133 = bitcast i32* %arrayidx5.i1119 to %union.tree_node**
  %134 = load %union.tree_node** %133, align 8, !tbaa !1
  %call6.i1120 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %134, %struct.rtx_def* null, i32 0, i32 0) #5
  %135 = load %union.tree_node** %arrayidx483, align 8, !tbaa !1
  %type.i1122 = getelementptr inbounds %union.tree_node* %135, i64 0, i32 0, i32 0, i32 1
  %136 = load %union.tree_node** %type.i1122, align 8, !tbaa !36
  %type10.i1123 = bitcast %union.tree_node* %136 to %struct.tree_type*
  %mode11.i1124 = getelementptr inbounds %struct.tree_type* %type10.i1123, i64 0, i32 6
  %bf.load.i1125 = load i32* %mode11.i1124, align 4
  %bf.lshr.i1126 = lshr i32 %bf.load.i1125, 9
  %bf.clear.i1127 = and i32 %bf.lshr.i1126, 127
  %unsigned_flag.i1128 = getelementptr inbounds %union.tree_node* %136, i64 0, i32 0, i32 0, i32 2
  %bf.load18.i1129 = load i32* %unsigned_flag.i1128, align 8
  %bf.lshr19.i1130 = lshr i32 %bf.load18.i1129, 13
  %bf.clear20.i1131 = and i32 %bf.lshr19.i1130, 1
  tail call void @do_jump_by_parts_greater_rtx(i32 %bf.clear.i1127, i32 %bf.clear20.i1131, %struct.rtx_def* %call.i1118, %struct.rtx_def* %call6.i1120, %struct.rtx_def* %if_true_label, %struct.rtx_def* %if_false_label) #5
  br label %if.end740

if.else499:                                       ; preds = %land.lhs.true495, %sw.bb480
  tail call fastcc void @do_compare_and_jump(%union.tree_node* %exp, i32 106, i32 110, %struct.rtx_def* %if_false_label, %struct.rtx_def* %if_true_label)
  br label %if.end740

sw.bb501:                                         ; preds = %emit_queue.exit
  %operands503 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx504 = bitcast i32* %operands503 to %union.tree_node**
  %137 = load %union.tree_node** %arrayidx504, align 8, !tbaa !1
  %type506 = getelementptr inbounds %union.tree_node* %137, i64 0, i32 0, i32 0, i32 1
  %138 = load %union.tree_node** %type506, align 8, !tbaa !36
  %type507 = bitcast %union.tree_node* %138 to %struct.tree_type*
  %mode508 = getelementptr inbounds %struct.tree_type* %type507, i64 0, i32 6
  %bf.load509 = load i32* %mode508, align 4
  %bf.lshr510 = lshr i32 %bf.load509, 9
  %bf.clear511 = and i32 %bf.lshr510, 127
  %idxprom512980 = zext i32 %bf.clear511 to i64
  %arrayidx513 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom512980
  %139 = load i32* %arrayidx513, align 4, !tbaa !5
  %cmp514 = icmp eq i32 %139, 1
  br i1 %cmp514, label %land.lhs.true516, label %if.else520

land.lhs.true516:                                 ; preds = %sw.bb501
  %call517 = tail call i32 @can_compare_p(i32 105, i32 %bf.clear511, i32 0) #5
  %tobool518 = icmp eq i32 %call517, 0
  br i1 %tobool518, label %if.then519, label %if.else520

if.then519:                                       ; preds = %land.lhs.true516
  %140 = load %union.tree_node** %arrayidx504, align 8, !tbaa !1
  %call.i1102 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %140, %struct.rtx_def* null, i32 0, i32 0) #5
  %arrayidx5.i1103 = getelementptr inbounds i32* %operands503, i64 2
  %141 = bitcast i32* %arrayidx5.i1103 to %union.tree_node**
  %142 = load %union.tree_node** %141, align 8, !tbaa !1
  %call6.i1104 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %142, %struct.rtx_def* null, i32 0, i32 0) #5
  %143 = load %union.tree_node** %arrayidx504, align 8, !tbaa !1
  %type.i1106 = getelementptr inbounds %union.tree_node* %143, i64 0, i32 0, i32 0, i32 1
  %144 = load %union.tree_node** %type.i1106, align 8, !tbaa !36
  %type10.i1107 = bitcast %union.tree_node* %144 to %struct.tree_type*
  %mode11.i1108 = getelementptr inbounds %struct.tree_type* %type10.i1107, i64 0, i32 6
  %bf.load.i1109 = load i32* %mode11.i1108, align 4
  %bf.lshr.i1110 = lshr i32 %bf.load.i1109, 9
  %bf.clear.i1111 = and i32 %bf.lshr.i1110, 127
  %unsigned_flag.i1112 = getelementptr inbounds %union.tree_node* %144, i64 0, i32 0, i32 0, i32 2
  %bf.load18.i1113 = load i32* %unsigned_flag.i1112, align 8
  %bf.lshr19.i1114 = lshr i32 %bf.load18.i1113, 13
  %bf.clear20.i1115 = and i32 %bf.lshr19.i1114, 1
  tail call void @do_jump_by_parts_greater_rtx(i32 %bf.clear.i1111, i32 %bf.clear20.i1115, %struct.rtx_def* %call.i1102, %struct.rtx_def* %call6.i1104, %struct.rtx_def* %if_false_label, %struct.rtx_def* %if_true_label) #5
  br label %if.end740

if.else520:                                       ; preds = %land.lhs.true516, %sw.bb501
  tail call fastcc void @do_compare_and_jump(%union.tree_node* %exp, i32 105, i32 109, %struct.rtx_def* %if_false_label, %struct.rtx_def* %if_true_label)
  br label %if.end740

sw.bb522:                                         ; preds = %emit_queue.exit
  %operands524 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx525 = bitcast i32* %operands524 to %union.tree_node**
  %145 = load %union.tree_node** %arrayidx525, align 8, !tbaa !1
  %type527 = getelementptr inbounds %union.tree_node* %145, i64 0, i32 0, i32 0, i32 1
  %146 = load %union.tree_node** %type527, align 8, !tbaa !36
  %type528 = bitcast %union.tree_node* %146 to %struct.tree_type*
  %mode529 = getelementptr inbounds %struct.tree_type* %type528, i64 0, i32 6
  %bf.load530 = load i32* %mode529, align 4
  %bf.lshr531 = lshr i32 %bf.load530, 9
  %bf.clear532 = and i32 %bf.lshr531, 127
  %idxprom533979 = zext i32 %bf.clear532 to i64
  %arrayidx534 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom533979
  %147 = load i32* %arrayidx534, align 4, !tbaa !5
  %cmp535 = icmp eq i32 %147, 1
  br i1 %cmp535, label %land.lhs.true537, label %if.else541

land.lhs.true537:                                 ; preds = %sw.bb522
  %call538 = tail call i32 @can_compare_p(i32 104, i32 %bf.clear532, i32 0) #5
  %tobool539 = icmp eq i32 %call538, 0
  br i1 %tobool539, label %if.then540, label %if.else541

if.then540:                                       ; preds = %land.lhs.true537
  %arrayidx.i1095 = getelementptr inbounds i32* %operands524, i64 2
  %148 = bitcast i32* %arrayidx.i1095 to %union.tree_node**
  %149 = load %union.tree_node** %148, align 8, !tbaa !1
  %call.i1096 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %149, %struct.rtx_def* null, i32 0, i32 0) #5
  %150 = load %union.tree_node** %arrayidx525, align 8, !tbaa !1
  %call6.i = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %150, %struct.rtx_def* null, i32 0, i32 0) #5
  %151 = load %union.tree_node** %arrayidx525, align 8, !tbaa !1
  %type.i = getelementptr inbounds %union.tree_node* %151, i64 0, i32 0, i32 0, i32 1
  %152 = load %union.tree_node** %type.i, align 8, !tbaa !36
  %type10.i = bitcast %union.tree_node* %152 to %struct.tree_type*
  %mode11.i = getelementptr inbounds %struct.tree_type* %type10.i, i64 0, i32 6
  %bf.load.i1098 = load i32* %mode11.i, align 4
  %bf.lshr.i = lshr i32 %bf.load.i1098, 9
  %bf.clear.i1099 = and i32 %bf.lshr.i, 127
  %unsigned_flag.i = getelementptr inbounds %union.tree_node* %152, i64 0, i32 0, i32 0, i32 2
  %bf.load18.i = load i32* %unsigned_flag.i, align 8
  %bf.lshr19.i = lshr i32 %bf.load18.i, 13
  %bf.clear20.i = and i32 %bf.lshr19.i, 1
  tail call void @do_jump_by_parts_greater_rtx(i32 %bf.clear.i1099, i32 %bf.clear20.i, %struct.rtx_def* %call.i1096, %struct.rtx_def* %call6.i, %struct.rtx_def* %if_true_label, %struct.rtx_def* %if_false_label) #5
  br label %if.end740

if.else541:                                       ; preds = %land.lhs.true537, %sw.bb522
  tail call fastcc void @do_compare_and_jump(%union.tree_node* %exp, i32 104, i32 108, %struct.rtx_def* %if_false_label, %struct.rtx_def* %if_true_label)
  br label %if.end740

if.else548:                                       ; preds = %emit_queue.exit
  br label %if.end549

if.end549:                                        ; preds = %emit_queue.exit, %if.else548
  %rcmp.0 = phi i32 [ 112, %if.else548 ], [ 113, %emit_queue.exit ]
  %cmp544.0 = phi i32 [ 113, %if.else548 ], [ 112, %emit_queue.exit ]
  %operands551 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx552 = bitcast i32* %operands551 to %union.tree_node**
  %153 = load %union.tree_node** %arrayidx552, align 8, !tbaa !1
  %type554 = getelementptr inbounds %union.tree_node* %153, i64 0, i32 0, i32 0, i32 1
  %154 = load %union.tree_node** %type554, align 8, !tbaa !36
  %type555 = bitcast %union.tree_node* %154 to %struct.tree_type*
  %mode556 = getelementptr inbounds %struct.tree_type* %type555, i64 0, i32 6
  %bf.load557 = load i32* %mode556, align 4
  %bf.lshr558 = lshr i32 %bf.load557, 9
  %bf.clear559 = and i32 %bf.lshr558, 127
  %call560 = tail call i32 @can_compare_p(i32 %cmp544.0, i32 %bf.clear559, i32 0) #5
  %tobool561 = icmp eq i32 %call560, 0
  br i1 %tobool561, label %land.lhs.true562, label %if.then571

land.lhs.true562:                                 ; preds = %if.end549
  %call563 = tail call i32 @can_compare_p(i32 %rcmp.0, i32 %bf.clear559, i32 0) #5
  %tobool564 = icmp ne i32 %call563, 0
  %cmp566 = icmp eq i32 %rcmp.0, 112
  %. = or i1 %tobool564, %cmp566
  br i1 %., label %if.else572, label %if.then571

if.then571:                                       ; preds = %if.end549, %land.lhs.true562
  tail call fastcc void @do_compare_and_jump(%union.tree_node* %exp, i32 %cmp544.0, i32 %cmp544.0, %struct.rtx_def* %if_false_label, %struct.rtx_def* %if_true_label)
  br label %if.end740

if.else572:                                       ; preds = %land.lhs.true562
  tail call fastcc void @do_compare_and_jump(%union.tree_node* %exp, i32 %rcmp.0, i32 %rcmp.0, %struct.rtx_def* %if_true_label, %struct.rtx_def* %if_false_label)
  br label %if.end740

sw.bb575:                                         ; preds = %emit_queue.exit
  br label %unordered_bcc

sw.bb576:                                         ; preds = %emit_queue.exit
  br label %unordered_bcc

sw.bb577:                                         ; preds = %emit_queue.exit
  br label %unordered_bcc

sw.bb578:                                         ; preds = %emit_queue.exit
  br label %unordered_bcc

unordered_bcc:                                    ; preds = %emit_queue.exit, %sw.bb578, %sw.bb577, %sw.bb576, %sw.bb575
  %rcode1.0 = phi i32 [ 114, %sw.bb578 ], [ 115, %sw.bb577 ], [ 116, %sw.bb576 ], [ 117, %sw.bb575 ], [ 118, %emit_queue.exit ]
  %tcode2.0 = phi i32 [ 101, %sw.bb578 ], [ 100, %sw.bb577 ], [ 99, %sw.bb576 ], [ 98, %sw.bb575 ], [ 97, %emit_queue.exit ]
  %operands580 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx581 = bitcast i32* %operands580 to %union.tree_node**
  %155 = load %union.tree_node** %arrayidx581, align 8, !tbaa !1
  %type583 = getelementptr inbounds %union.tree_node* %155, i64 0, i32 0, i32 0, i32 1
  %156 = load %union.tree_node** %type583, align 8, !tbaa !36
  %type584 = bitcast %union.tree_node* %156 to %struct.tree_type*
  %mode585 = getelementptr inbounds %struct.tree_type* %type584, i64 0, i32 6
  %bf.load586 = load i32* %mode585, align 4
  %bf.lshr587 = lshr i32 %bf.load586, 9
  %bf.clear588 = and i32 %bf.lshr587, 127
  %call589 = tail call i32 @can_compare_p(i32 %rcode1.0, i32 %bf.clear588, i32 0) #5
  %tobool590 = icmp eq i32 %call589, 0
  br i1 %tobool590, label %if.else592, label %if.then591

if.then591:                                       ; preds = %unordered_bcc
  tail call fastcc void @do_compare_and_jump(%union.tree_node* %exp, i32 %rcode1.0, i32 %rcode1.0, %struct.rtx_def* %if_false_label, %struct.rtx_def* %if_true_label)
  br label %if.end740

if.else592:                                       ; preds = %unordered_bcc
  %157 = load %union.tree_node** %arrayidx581, align 8, !tbaa !1
  %call596 = tail call %union.tree_node* @save_expr(%union.tree_node* %157) #5
  %arrayidx599 = getelementptr inbounds i32* %operands580, i64 2
  %158 = bitcast i32* %arrayidx599 to %union.tree_node**
  %159 = load %union.tree_node** %158, align 8, !tbaa !1
  %call600 = tail call %union.tree_node* @save_expr(%union.tree_node* %159) #5
  %type602 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 1
  %160 = load %union.tree_node** %type602, align 8, !tbaa !36
  %call603 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 103, %union.tree_node* %160, %union.tree_node* %call596, %union.tree_node* %call600) #5
  %call604 = tail call %union.tree_node* @fold(%union.tree_node* %call603) #5
  %161 = load %union.tree_node** %type602, align 8, !tbaa !36
  %call607 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %tcode2.0, %union.tree_node* %161, %union.tree_node* %call596, %union.tree_node* %call600) #5
  %call608 = tail call %union.tree_node* @fold(%union.tree_node* %call607) #5
  %162 = load %union.tree_node** %type602, align 8, !tbaa !36
  %call611 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 92, %union.tree_node* %162, %union.tree_node* %call604, %union.tree_node* %call608) #5
  tail call void @do_jump(%union.tree_node* %call611, %struct.rtx_def* %if_false_label, %struct.rtx_def* %if_true_label)
  br label %if.end740

sw.bb613:                                         ; preds = %emit_queue.exit
  %operands615 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx616 = bitcast i32* %operands615 to %union.tree_node**
  %163 = load %union.tree_node** %arrayidx616, align 8, !tbaa !1
  %code618 = getelementptr inbounds %union.tree_node* %163, i64 0, i32 0, i32 0, i32 2
  %bf.load619 = load i32* %code618, align 8
  %bf.clear620 = and i32 %bf.load619, 255
  %cmp621 = icmp eq i32 %bf.clear620, 121
  br i1 %cmp621, label %if.then623, label %normal

if.then623:                                       ; preds = %sw.bb613
  %operands628 = getelementptr inbounds %union.tree_node* %163, i64 0, i32 0, i32 2
  %arrayidx629 = bitcast i32* %operands628 to %union.tree_node**
  %164 = load %union.tree_node** %arrayidx629, align 8, !tbaa !1
  %arrayidx632 = getelementptr inbounds i32* %operands615, i64 2
  %165 = bitcast i32* %arrayidx632 to %union.tree_node**
  %166 = load %union.tree_node** %165, align 8, !tbaa !1
  %code634 = getelementptr inbounds %union.tree_node* %164, i64 0, i32 0, i32 0, i32 2
  %bf.load635 = load i32* %code634, align 8
  %bf.clear636 = and i32 %bf.load635, 255
  %cmp637 = icmp eq i32 %bf.clear636, 30
  br i1 %cmp637, label %land.lhs.true639, label %normal

land.lhs.true639:                                 ; preds = %if.then623
  %built_in_class = getelementptr inbounds %union.tree_node* %164, i64 0, i32 0, i32 5
  %167 = bitcast i48* %built_in_class to i64*
  %bf.load640 = load i64* %167, align 8
  %bf.cast = and i64 %bf.load640, 1610612736
  %cmp643 = icmp eq i64 %bf.cast, 0
  br i1 %cmp643, label %normal, label %land.lhs.true645

land.lhs.true645:                                 ; preds = %land.lhs.true639
  %u1 = getelementptr inbounds %union.tree_node* %164, i64 0, i32 0, i32 6
  %f = bitcast %union.anon* %u1 to i32*
  %168 = load i32* %f, align 4, !tbaa !5
  %cmp647 = icmp eq i32 %168, 94
  %cmp650 = icmp ne %union.tree_node* %166, null
  %or.cond742 = and i1 %cmp647, %cmp650
  br i1 %or.cond742, label %land.lhs.true652, label %normal

land.lhs.true652:                                 ; preds = %land.lhs.true645
  %chain654 = getelementptr inbounds %union.tree_node* %166, i64 0, i32 0, i32 0, i32 0
  %169 = load %union.tree_node** %chain654, align 8, !tbaa !34
  %cmp655 = icmp eq %union.tree_node* %169, null
  br i1 %cmp655, label %normal, label %if.then657

if.then657:                                       ; preds = %land.lhs.true652
  %call658 = tail call %struct.rtx_def* @expand_builtin_expect_jump(%union.tree_node* %exp, %struct.rtx_def* %if_false_label, %struct.rtx_def* %if_true_label) #5
  %cmp659 = icmp eq %struct.rtx_def* %call658, null
  br i1 %cmp659, label %normal, label %if.then661

if.then661:                                       ; preds = %if.then657
  %call662 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call658) #5
  br label %if.end740

normal:                                           ; preds = %emit_queue.exit, %sw.bb3, %sw.bb3, %sw.bb3, %sw.bb3, %land.lhs.true118, %land.lhs.true103, %land.lhs.true100, %land.lhs.true185, %if.then657, %land.lhs.true652, %land.lhs.true639, %if.then623, %land.lhs.true645, %sw.bb613, %sw.bb162, %land.lhs.true172, %sw.bb78, %land.lhs.true, %land.lhs.true94, %land.lhs.true106, %sw.bb37
  %call666 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %exp, %struct.rtx_def* null, i32 0, i32 0)
  %170 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr.i1038 = getelementptr inbounds %struct.function* %170, i64 0, i32 2
  %171 = load %struct.expr_status** %expr.i1038, align 8, !tbaa !6
  %x_inhibit_defer_pop.i1039 = getelementptr inbounds %struct.expr_status* %171, i64 0, i32 1
  %172 = load i32* %x_inhibit_defer_pop.i1039, align 4, !tbaa !15
  %cmp.i1040 = icmp eq i32 %172, 0
  br i1 %cmp.i1040, label %if.then.i1043, label %do_pending_stack_adjust.exit1052

if.then.i1043:                                    ; preds = %normal
  %x_pending_stack_adjust.i1041 = getelementptr inbounds %struct.expr_status* %171, i64 0, i32 0
  %173 = load i32* %x_pending_stack_adjust.i1041, align 4, !tbaa !13
  %cmp2.i1042 = icmp eq i32 %173, 0
  br i1 %cmp2.i1042, label %if.end.i1051, label %if.then3.i1049

if.then3.i1049:                                   ; preds = %if.then.i1043
  %conv.i1044 = sext i32 %173 to i64
  %call.i1045 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv.i1044) #5
  tail call void @adjust_stack(%struct.rtx_def* %call.i1045) #5
  %.pre.i1046 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr6.phi.trans.insert.i1047 = getelementptr inbounds %struct.function* %.pre.i1046, i64 0, i32 2
  %.pre9.i1048 = load %struct.expr_status** %expr6.phi.trans.insert.i1047, align 8, !tbaa !6
  br label %if.end.i1051

if.end.i1051:                                     ; preds = %if.then3.i1049, %if.then.i1043
  %.pre = phi %struct.expr_status* [ %171, %if.then.i1043 ], [ %.pre9.i1048, %if.then3.i1049 ]
  %x_pending_stack_adjust7.i1050 = getelementptr inbounds %struct.expr_status* %.pre, i64 0, i32 0
  store i32 0, i32* %x_pending_stack_adjust7.i1050, align 4, !tbaa !13
  br label %do_pending_stack_adjust.exit1052

do_pending_stack_adjust.exit1052:                 ; preds = %normal, %if.end.i1051
  %174 = phi %struct.expr_status* [ %171, %normal ], [ %.pre, %if.end.i1051 ]
  %x_pending_chain31.i1054 = getelementptr inbounds %struct.expr_status* %174, i64 0, i32 6
  %175 = load %struct.rtx_def** %x_pending_chain31.i1054, align 8, !tbaa !11
  %tobool32.i1055 = icmp eq %struct.rtx_def* %175, null
  br i1 %tobool32.i1055, label %emit_queue.exit1079, label %while.body.i1061

while.body.i1061:                                 ; preds = %do_pending_stack_adjust.exit1052, %if.end.i1078
  %176 = phi %struct.rtx_def* [ %188, %if.end.i1078 ], [ %175, %do_pending_stack_adjust.exit1052 ]
  %arrayidx.i1056 = getelementptr inbounds %struct.rtx_def* %176, i64 0, i32 1, i64 3
  %rtx.i1057 = bitcast %union.rtunion_def* %arrayidx.i1056 to %struct.rtx_def**
  %177 = load %struct.rtx_def** %rtx.i1057, align 8, !tbaa !1
  %178 = getelementptr inbounds %struct.rtx_def* %177, i64 0, i32 0
  %bf.load.i1058 = load i32* %178, align 8
  %bf.clear.i1059 = and i32 %bf.load.i1058, 65535
  %cmp.i1060 = icmp eq i32 %bf.clear.i1059, 24
  br i1 %cmp.i1060, label %if.then.i1067, label %if.else.i1070

if.then.i1067:                                    ; preds = %while.body.i1061
  %arrayidx5.i1062 = getelementptr inbounds %struct.rtx_def* %177, i64 0, i32 1, i64 0
  %rtvec.i1063 = bitcast %union.rtunion_def* %arrayidx5.i1062 to %struct.rtvec_def**
  %179 = load %struct.rtvec_def** %rtvec.i1063, align 8, !tbaa !1
  %arrayidx6.i1064 = getelementptr inbounds %struct.rtvec_def* %179, i64 0, i32 1, i64 0
  %180 = load %struct.rtx_def** %arrayidx6.i1064, align 8, !tbaa !1
  %181 = getelementptr inbounds %struct.rtx_def* %176, i64 0, i32 1, i64 1, i32 0
  %.c.i1065 = ptrtoint %struct.rtx_def* %180 to i64
  store i64 %.c.i1065, i64* %181, align 8, !tbaa !1
  %call.i1066 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %177) #5
  br label %if.end.i1078

if.else.i1070:                                    ; preds = %while.body.i1061
  %call16.i1068 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %177) #5
  %182 = getelementptr inbounds %struct.rtx_def* %176, i64 0, i32 1, i64 1, i32 0
  %call16.c.i1069 = ptrtoint %struct.rtx_def* %call16.i1068 to i64
  store i64 %call16.c.i1069, i64* %182, align 8, !tbaa !1
  br label %if.end.i1078

if.end.i1078:                                     ; preds = %if.else.i1070, %if.then.i1067
  %arrayidx21.i1071 = getelementptr inbounds %struct.rtx_def* %176, i64 0, i32 1, i64 4
  %rtx22.i1072 = bitcast %union.rtunion_def* %arrayidx21.i1071 to %struct.rtx_def**
  %183 = load %struct.rtx_def** %rtx22.i1072, align 8, !tbaa !1
  %184 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr23.i1073 = getelementptr inbounds %struct.function* %184, i64 0, i32 2
  %185 = load %struct.expr_status** %expr23.i1073, align 8, !tbaa !6
  %x_pending_chain24.i1074 = getelementptr inbounds %struct.expr_status* %185, i64 0, i32 6
  store %struct.rtx_def* %183, %struct.rtx_def** %x_pending_chain24.i1074, align 8, !tbaa !11
  %186 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr.i1075 = getelementptr inbounds %struct.function* %186, i64 0, i32 2
  %187 = load %struct.expr_status** %expr.i1075, align 8, !tbaa !6
  %x_pending_chain.i1076 = getelementptr inbounds %struct.expr_status* %187, i64 0, i32 6
  %188 = load %struct.rtx_def** %x_pending_chain.i1076, align 8, !tbaa !11
  %tobool.i1077 = icmp eq %struct.rtx_def* %188, null
  br i1 %tobool.i1077, label %emit_queue.exit1079, label %while.body.i1061

emit_queue.exit1079:                              ; preds = %if.end.i1078, %do_pending_stack_adjust.exit1052
  %189 = getelementptr inbounds %struct.rtx_def* %call666, i64 0, i32 0
  %bf.load667 = load i32* %189, align 8
  %bf.clear668 = and i32 %bf.load667, 65535
  switch i32 %bf.clear668, label %if.else697 [
    i32 54, label %if.then687
    i32 55, label %land.lhs.true676
    i32 67, label %if.then687
  ]

land.lhs.true676:                                 ; preds = %emit_queue.exit1079
  %bf.clear679 = and i32 %bf.load667, 16711680
  %cmp680 = icmp eq i32 %bf.clear679, 0
  br i1 %cmp680, label %if.then687, label %if.else697

if.then687:                                       ; preds = %emit_queue.exit1079, %emit_queue.exit1079, %land.lhs.true676
  %190 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %cmp688 = icmp eq %struct.rtx_def* %call666, %190
  %cond693 = select i1 %cmp688, %struct.rtx_def* %if_false_label, %struct.rtx_def* %if_true_label
  %tobool694 = icmp eq %struct.rtx_def* %cond693, null
  br i1 %tobool694, label %if.end740, label %if.then695

if.then695:                                       ; preds = %if.then687
  tail call void @emit_jump(%struct.rtx_def* %cond693) #5
  br label %if.end740

if.else697:                                       ; preds = %emit_queue.exit1079, %land.lhs.true676
  %bf.lshr699 = lshr i32 %bf.load667, 16
  %bf.clear700 = and i32 %bf.lshr699, 255
  %idxprom701977 = zext i32 %bf.clear700 to i64
  %arrayidx702 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom701977
  %191 = load i32* %arrayidx702, align 4, !tbaa !5
  %cmp703 = icmp eq i32 %191, 1
  br i1 %cmp703, label %land.lhs.true705, label %if.else712

land.lhs.true705:                                 ; preds = %if.else697
  %call709 = tail call i32 @can_compare_p(i32 102, i32 %bf.clear700, i32 0) #5
  %tobool710 = icmp eq i32 %call709, 0
  br i1 %tobool710, label %if.then711, label %land.lhs.true705.if.else712_crit_edge

land.lhs.true705.if.else712_crit_edge:            ; preds = %land.lhs.true705
  %bf.load713.pre = load i32* %189, align 8
  br label %if.else712

if.then711:                                       ; preds = %land.lhs.true705
  tail call void @do_jump_by_parts_equality_rtx(%struct.rtx_def* %call666, %struct.rtx_def* %if_true_label, %struct.rtx_def* %if_false_label)
  br label %if.end740

if.else712:                                       ; preds = %land.lhs.true705.if.else712_crit_edge, %if.else697
  %bf.load713 = phi i32 [ %bf.load713.pre, %land.lhs.true705.if.else712_crit_edge ], [ %bf.load667, %if.else697 ]
  %bf.lshr714 = lshr i32 %bf.load713, 16
  %bf.clear715 = and i32 %bf.lshr714, 255
  %cmp716 = icmp eq i32 %bf.clear715, 0
  br i1 %cmp716, label %if.else733, label %if.then718

if.then718:                                       ; preds = %if.else712
  %idxprom722978 = zext i32 %bf.clear715 to i64
  %arrayidx723 = getelementptr inbounds [3 x [59 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0, i64 %idxprom722978
  %192 = load %struct.rtx_def** %arrayidx723, align 8, !tbaa !1
  %type725 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 1
  %193 = load %union.tree_node** %type725, align 8, !tbaa !36
  %unsigned_flag = getelementptr inbounds %union.tree_node* %193, i64 0, i32 0, i32 0, i32 2
  %bf.load727 = load i32* %unsigned_flag, align 8
  %bf.lshr728 = lshr i32 %bf.load727, 13
  %bf.clear729 = and i32 %bf.lshr728, 1
  tail call void @do_compare_rtx_and_jump(%struct.rtx_def* %call666, %struct.rtx_def* %192, i32 102, i32 %bf.clear729, i32 %bf.clear715, %struct.rtx_def* null, %struct.rtx_def* %if_false_label, %struct.rtx_def* %if_true_label)
  br label %if.end740

if.else733:                                       ; preds = %if.else712
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 9720, i8* getelementptr inbounds ([8 x i8]* @__FUNCTION__.do_jump, i64 0, i64 0)) #8
  unreachable

sw.epilog:                                        ; preds = %do_pending_stack_adjust.exit1037, %if.end147, %if.end136
  %drop_through_label.2 = phi %struct.rtx_def* [ %call233, %do_pending_stack_adjust.exit1037 ], [ %drop_through_label.1, %if.end147 ], [ %drop_through_label.0, %if.end136 ]
  %tobool737 = icmp eq %struct.rtx_def* %drop_through_label.2, null
  br i1 %tobool737, label %if.end740, label %if.then738

if.then738:                                       ; preds = %sw.epilog
  %194 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr.i1080 = getelementptr inbounds %struct.function* %194, i64 0, i32 2
  %195 = load %struct.expr_status** %expr.i1080, align 8, !tbaa !6
  %x_inhibit_defer_pop.i1081 = getelementptr inbounds %struct.expr_status* %195, i64 0, i32 1
  %196 = load i32* %x_inhibit_defer_pop.i1081, align 4, !tbaa !15
  %cmp.i1082 = icmp eq i32 %196, 0
  br i1 %cmp.i1082, label %if.then.i1085, label %do_pending_stack_adjust.exit1094

if.then.i1085:                                    ; preds = %if.then738
  %x_pending_stack_adjust.i1083 = getelementptr inbounds %struct.expr_status* %195, i64 0, i32 0
  %197 = load i32* %x_pending_stack_adjust.i1083, align 4, !tbaa !13
  %cmp2.i1084 = icmp eq i32 %197, 0
  br i1 %cmp2.i1084, label %if.end.i1093, label %if.then3.i1091

if.then3.i1091:                                   ; preds = %if.then.i1085
  %conv.i1086 = sext i32 %197 to i64
  %call.i1087 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv.i1086) #5
  tail call void @adjust_stack(%struct.rtx_def* %call.i1087) #5
  %.pre.i1088 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr6.phi.trans.insert.i1089 = getelementptr inbounds %struct.function* %.pre.i1088, i64 0, i32 2
  %.pre9.i1090 = load %struct.expr_status** %expr6.phi.trans.insert.i1089, align 8, !tbaa !6
  br label %if.end.i1093

if.end.i1093:                                     ; preds = %if.then3.i1091, %if.then.i1085
  %198 = phi %struct.expr_status* [ %195, %if.then.i1085 ], [ %.pre9.i1090, %if.then3.i1091 ]
  %x_pending_stack_adjust7.i1092 = getelementptr inbounds %struct.expr_status* %198, i64 0, i32 0
  store i32 0, i32* %x_pending_stack_adjust7.i1092, align 4, !tbaa !13
  br label %do_pending_stack_adjust.exit1094

do_pending_stack_adjust.exit1094:                 ; preds = %if.then738, %if.end.i1093
  %call739 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %drop_through_label.2) #5
  br label %if.end740

if.end740:                                        ; preds = %emit_queue.exit, %sw.bb, %if.then, %sw.bb55, %sw.bb59, %sw.bb68, %if.then125, %sw.bb128, %do_pending_stack_adjust.exit, %if.then197, %if.then227, %if.then212, %if.then356, %if.else357, %if.then334, %if.then291, %if.then454, %if.else455, %if.then432, %if.then387, %if.then477, %if.else478, %if.then498, %if.else499, %if.then519, %if.else520, %if.then540, %if.else541, %if.then571, %if.else572, %if.else592, %if.then591, %if.then711, %if.then718, %if.then687, %if.then695, %sw.epilog, %if.then661, %do_pending_stack_adjust.exit1094
  ret void
}

declare void @expand_null_return() #1

declare void @expand_return(%union.tree_node*) #1

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @expand_increment(%union.tree_node* nocapture readonly %exp, i32 %post, i32 %ignore) #0 {
entry:
  %operands = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx = bitcast i32* %operands to %union.tree_node**
  %0 = load %union.tree_node** %arrayidx, align 8, !tbaa !1
  %1 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 0), align 8, !tbaa !1
  %type = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 1
  %2 = load %union.tree_node** %type, align 8, !tbaa !36
  %type2 = bitcast %union.tree_node* %2 to %struct.tree_type*
  %mode3 = getelementptr inbounds %struct.tree_type* %type2, i64 0, i32 6
  %bf.load = load i32* %mode3, align 4
  %bf.lshr = lshr i32 %bf.load, 9
  %bf.clear = and i32 %bf.lshr, 127
  %tobool = icmp ne i32 %post, 0
  br i1 %tobool, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %entry
  %code = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2
  %bf.load5 = load i32* %code, align 8
  %bf.clear6 = and i32 %bf.load5, 255
  switch i32 %bf.clear6, label %if.end [
    i32 40, label %if.then
    i32 39, label %land.lhs.true
  ]

land.lhs.true:                                    ; preds = %lor.lhs.false
  %operands14 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 2
  %arrayidx15 = bitcast i32* %operands14 to %union.tree_node**
  %3 = load %union.tree_node** %arrayidx15, align 8, !tbaa !1
  %code17 = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 0, i32 2
  %bf.load18 = load i32* %code17, align 8
  %bf.clear19 = and i32 %bf.load18, 255
  %cmp20 = icmp eq i32 %bf.clear19, 41
  br i1 %cmp20, label %lor.lhs.false21, label %if.then

lor.lhs.false21:                                  ; preds = %land.lhs.true
  %arrayidx24 = getelementptr inbounds i32* %operands14, i64 2
  %4 = bitcast i32* %arrayidx24 to %union.tree_node**
  %5 = load %union.tree_node** %4, align 8, !tbaa !1
  %bit_field_flag = getelementptr inbounds %union.tree_node* %5, i64 0, i32 0, i32 5
  %6 = bitcast i48* %bit_field_flag to i64*
  %bf.load25 = load i64* %6, align 8
  %bf.cast = and i64 %bf.load25, 4096
  %tobool28 = icmp eq i64 %bf.cast, 0
  br i1 %tobool28, label %if.end, label %if.then

if.then:                                          ; preds = %lor.lhs.false, %lor.lhs.false21, %land.lhs.true, %entry
  %call = tail call %union.tree_node* @stabilize_reference(%union.tree_node* %0) #5
  %code30.phi.trans.insert = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 0, i32 2
  %bf.load31.pre = load i32* %code30.phi.trans.insert, align 8
  br label %if.end

if.end:                                           ; preds = %lor.lhs.false, %lor.lhs.false21, %if.then
  %bf.load31 = phi i32 [ %bf.load31.pre, %if.then ], [ %bf.load5, %lor.lhs.false21 ], [ %bf.load5, %lor.lhs.false ]
  %incremented.0 = phi %union.tree_node* [ %call, %if.then ], [ %0, %lor.lhs.false21 ], [ %0, %lor.lhs.false ]
  %bf.clear32 = and i32 %bf.load31, 255
  %bf.clear32.off = add i32 %bf.clear32, -129
  %switch = icmp ult i32 %bf.clear32.off, 2
  br i1 %switch, label %if.then40, label %if.end42

if.then40:                                        ; preds = %if.end
  %call41 = tail call %union.tree_node* @save_expr(%union.tree_node* %incremented.0) #5
  br label %if.end42

if.end42:                                         ; preds = %if.end, %if.then40
  %incremented.1 = phi %union.tree_node* [ %call41, %if.then40 ], [ %incremented.0, %if.end ]
  %call43 = tail call %struct.rtx_def* @get_last_insn() #5
  %call44 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %incremented.1, %struct.rtx_def* null, i32 0, i32 0)
  %7 = getelementptr inbounds %struct.rtx_def* %call44, i64 0, i32 0
  %bf.load45 = load i32* %7, align 8
  %8 = and i32 %bf.load45, 268500991
  %9 = icmp eq i32 %8, 268435519
  br i1 %9, label %if.then53, label %if.else62

if.then53:                                        ; preds = %if.end42
  br i1 %tobool, label %if.then55, label %if.end81

if.then55:                                        ; preds = %if.then53
  %arrayidx56 = getelementptr inbounds %struct.rtx_def* %call44, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx56 to %struct.rtx_def**
  %10 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %call57 = tail call %struct.rtx_def* @copy_to_reg(%struct.rtx_def* %10) #5
  %11 = getelementptr inbounds %union.rtunion_def* %arrayidx56, i64 0, i32 0
  %call57.c = ptrtoint %struct.rtx_def* %call57 to i64
  store i64 %call57.c, i64* %11, align 8, !tbaa !1
  br label %if.end81

if.else62:                                        ; preds = %if.end42
  %bf.clear46 = and i32 %bf.load45, 65535
  %cmp65 = icmp eq i32 %bf.clear46, 63
  br i1 %cmp65, label %land.lhs.true66, label %if.end81

land.lhs.true66:                                  ; preds = %if.else62
  %bf.lshr68 = lshr i32 %bf.load45, 16
  %bf.clear69 = and i32 %bf.lshr68, 255
  %idxprom448 = zext i32 %bf.clear69 to i64
  %arrayidx70 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom448
  %12 = load i16* %arrayidx70, align 2, !tbaa !19
  %conv = zext i16 %12 to i32
  %13 = load i32* @target_flags, align 4, !tbaa !21
  %and = lshr i32 %13, 20
  %14 = and i32 %and, 32
  %15 = add i32 %14, 32
  %cmp72.not = icmp uge i32 %conv, %15
  %tobool.not = xor i1 %tobool, true
  %brmerge = or i1 %cmp72.not, %tobool.not
  %16 = zext i1 %cmp72.not to i32
  %.mux = xor i32 %16, 1
  br i1 %brmerge, label %if.end81, label %if.then76

if.then76:                                        ; preds = %land.lhs.true66
  %call77 = tail call %struct.rtx_def* @copy_to_reg(%struct.rtx_def* %call44) #5
  br label %if.end81

if.end81:                                         ; preds = %land.lhs.true66, %if.then53, %if.else62, %if.then76, %if.then55
  %bad_subreg.0 = phi i32 [ 0, %if.then55 ], [ 0, %if.then76 ], [ %.mux, %land.lhs.true66 ], [ 0, %if.else62 ], [ 1, %if.then53 ]
  %op0.0 = phi %struct.rtx_def* [ %call44, %if.then55 ], [ %call77, %if.then76 ], [ %call44, %land.lhs.true66 ], [ %call44, %if.else62 ], [ %call44, %if.then53 ]
  %17 = getelementptr inbounds %struct.rtx_def* %op0.0, i64 0, i32 0
  %bf.load82 = load i32* %17, align 8
  %bf.clear83 = and i32 %bf.load82, 65535
  switch i32 %bf.clear83, label %land.end [
    i32 63, label %land.rhs
    i32 61, label %land.rhs
  ]

land.rhs:                                         ; preds = %if.end81, %if.end81
  %call91 = tail call %struct.rtx_def* @get_last_insn() #5
  %cmp92 = icmp ne %struct.rtx_def* %call43, %call91
  br label %land.end

land.end:                                         ; preds = %if.end81, %land.rhs
  %18 = phi i1 [ %cmp92, %land.rhs ], [ false, %if.end81 ]
  %arrayidx96 = getelementptr inbounds i32* %operands, i64 2
  %19 = bitcast i32* %arrayidx96 to %union.tree_node**
  %20 = load %union.tree_node** %19, align 8, !tbaa !1
  %call97 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %20, %struct.rtx_def* null, i32 0, i32 0)
  %code99 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 2
  %bf.load100 = load i32* %code99, align 8
  %bf.clear101 = and i32 %bf.load100, 255
  switch i32 %bf.clear101, label %if.end112 [
    i32 131, label %if.end112.thread
    i32 129, label %if.end112.thread
  ]

if.end112.thread:                                 ; preds = %land.end, %land.end
  %21 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 2), align 8, !tbaa !1
  br label %land.lhs.true115

if.end112:                                        ; preds = %land.end
  %.pre = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 2), align 8, !tbaa !1
  %cmp113 = icmp eq %struct.optab* %1, %.pre
  br i1 %cmp113, label %land.lhs.true115, label %if.end124

land.lhs.true115:                                 ; preds = %if.end112.thread, %if.end112
  %22 = phi %struct.optab* [ %21, %if.end112.thread ], [ %.pre, %if.end112 ]
  %23 = getelementptr inbounds %struct.rtx_def* %call97, i64 0, i32 0
  %bf.load116 = load i32* %23, align 8
  %bf.clear117 = and i32 %bf.load116, 65535
  %cmp118 = icmp eq i32 %bf.clear117, 54
  br i1 %cmp118, label %if.then120, label %if.end124

if.then120:                                       ; preds = %land.lhs.true115
  %rtwint = getelementptr inbounds %struct.rtx_def* %call97, i64 0, i32 1, i64 0, i32 0
  %24 = load i64* %rtwint, align 8, !tbaa !22
  %sub = sub nsw i64 0, %24
  %call123 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %sub) #5
  %25 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 0), align 8, !tbaa !1
  br label %if.end124

if.end124:                                        ; preds = %if.then120, %land.lhs.true115, %if.end112
  %this_optab.1 = phi %struct.optab* [ %25, %if.then120 ], [ %22, %land.lhs.true115 ], [ %1, %if.end112 ]
  %op1.0 = phi %struct.rtx_def* [ %call123, %if.then120 ], [ %call97, %land.lhs.true115 ], [ %call97, %if.end112 ]
  %26 = load i32* @flag_trapv, align 4, !tbaa !21
  %tobool125 = icmp eq i32 %26, 0
  br i1 %tobool125, label %if.end138, label %land.lhs.true126

land.lhs.true126:                                 ; preds = %if.end124
  %27 = load %union.tree_node** %type, align 8, !tbaa !36
  %unsigned_flag = getelementptr inbounds %union.tree_node* %27, i64 0, i32 0, i32 0, i32 2
  %bf.load130 = load i32* %unsigned_flag, align 8
  %bf.clear132 = and i32 %bf.load130, 8192
  %tobool133 = icmp eq i32 %bf.clear132, 0
  br i1 %tobool133, label %if.then134, label %if.end138

if.then134:                                       ; preds = %land.lhs.true126
  %28 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 0), align 8, !tbaa !1
  %cmp135 = icmp eq %struct.optab* %this_optab.1, %28
  %29 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 1), align 8, !tbaa !1
  %30 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 3), align 8, !tbaa !1
  %cond137 = select i1 %cmp135, %struct.optab* %29, %struct.optab* %30
  br label %if.end138

if.end138:                                        ; preds = %land.lhs.true126, %if.end124, %if.then134
  %this_optab.2 = phi %struct.optab* [ %this_optab.1, %land.lhs.true126 ], [ %cond137, %if.then134 ], [ %this_optab.1, %if.end124 ]
  br i1 %tobool, label %if.end169, label %if.then140

if.then140:                                       ; preds = %if.end138
  %idxprom141446 = zext i32 %bf.clear to i64
  %insn_code = getelementptr inbounds %struct.optab* %this_optab.2, i64 0, i32 1, i64 %idxprom141446, i32 0
  %31 = load i32* %insn_code, align 4, !tbaa !23
  %cmp143 = icmp eq i32 %31, 1317
  br i1 %cmp143, label %if.end169, label %land.lhs.true145

land.lhs.true145:                                 ; preds = %if.then140
  %idxprom146 = sext i32 %31 to i64
  %operand = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom146, i32 3
  %32 = load %struct.insn_operand_data** %operand, align 8, !tbaa !31
  %predicate = getelementptr inbounds %struct.insn_operand_data* %32, i64 0, i32 0
  %33 = load i32 (%struct.rtx_def*, i32)** %predicate, align 8, !tbaa !32
  %call149 = tail call i32 %33(%struct.rtx_def* %op0.0, i32 %bf.clear) #5
  %tobool150 = icmp eq i32 %call149, 0
  br i1 %tobool150, label %if.end169, label %land.lhs.true151

land.lhs.true151:                                 ; preds = %land.lhs.true145
  %predicate156 = getelementptr inbounds %struct.insn_operand_data* %32, i64 1, i32 0
  %34 = load i32 (%struct.rtx_def*, i32)** %predicate156, align 8, !tbaa !32
  %call157 = tail call i32 %34(%struct.rtx_def* %op0.0, i32 %bf.clear) #5
  %tobool158 = icmp eq i32 %call157, 0
  br i1 %tobool158, label %if.end169, label %land.lhs.true159

land.lhs.true159:                                 ; preds = %land.lhs.true151
  %predicate164 = getelementptr inbounds %struct.insn_operand_data* %32, i64 2, i32 0
  %35 = load i32 (%struct.rtx_def*, i32)** %predicate164, align 8, !tbaa !32
  %call165 = tail call i32 %35(%struct.rtx_def* %op1.0, i32 %bf.clear) #5
  %not.tobool166 = icmp ne i32 %call165, 0
  %. = zext i1 %not.tobool166 to i32
  br label %if.end169

if.end169:                                        ; preds = %land.lhs.true159, %land.lhs.true151, %land.lhs.true145, %if.then140, %if.end138
  %single_insn.0 = phi i32 [ 0, %if.end138 ], [ 0, %land.lhs.true151 ], [ 0, %land.lhs.true145 ], [ 0, %if.then140 ], [ %., %land.lhs.true159 ]
  br i1 %18, label %if.then177, label %lor.lhs.false171

lor.lhs.false171:                                 ; preds = %if.end169
  %36 = or i32 %single_insn.0, %post
  %or.cond.not = icmp eq i32 %36, 0
  %tobool176 = icmp ne i32 %bad_subreg.0, 0
  %or.cond341 = or i1 %or.cond.not, %tobool176
  br i1 %or.cond341, label %if.then177, label %if.end228

if.then177:                                       ; preds = %lor.lhs.false171, %if.end169
  %bf.load180 = load i32* %code99, align 8
  %bf.clear181 = and i32 %bf.load180, 255
  %cmp182 = icmp eq i32 %bf.clear181, 131
  br i1 %cmp182, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %if.then177
  %cmp188 = icmp eq i32 %bf.clear181, 129
  %phitmp = select i1 %cmp188, i32 60, i32 59
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %if.then177
  %37 = phi i32 [ 60, %if.then177 ], [ %phitmp, %lor.rhs ]
  %38 = load %union.tree_node** %type, align 8, !tbaa !36
  %39 = load %union.tree_node** %19, align 8, !tbaa !1
  %call196 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %37, %union.tree_node* %38, %union.tree_node* %incremented.1, %union.tree_node* %39) #5
  %code198469 = getelementptr inbounds %union.tree_node* %incremented.1, i64 0, i32 0, i32 0, i32 2
  %bf.load199470 = load i32* %code198469, align 8
  %40 = and i32 %bf.load199470, 254
  %41 = icmp eq i32 %40, 114
  br i1 %41, label %while.body, label %while.end

while.body:                                       ; preds = %lor.end, %while.body
  %newexp.0472 = phi %union.tree_node* [ %call213, %while.body ], [ %call196, %lor.end ]
  %incremented.2471 = phi %union.tree_node* [ %43, %while.body ], [ %incremented.1, %lor.end ]
  %type212 = getelementptr inbounds %union.tree_node* %incremented.2471, i64 0, i32 0, i32 0, i32 1
  %42 = load %union.tree_node** %type212, align 8, !tbaa !36
  %call213 = tail call %union.tree_node* @convert(%union.tree_node* %42, %union.tree_node* %newexp.0472) #5
  %operands215 = getelementptr inbounds %union.tree_node* %incremented.2471, i64 0, i32 0, i32 2
  %arrayidx216 = bitcast i32* %operands215 to %union.tree_node**
  %43 = load %union.tree_node** %arrayidx216, align 8, !tbaa !1
  %code198 = getelementptr inbounds %union.tree_node* %43, i64 0, i32 0, i32 0, i32 2
  %bf.load199 = load i32* %code198, align 8
  %44 = and i32 %bf.load199, 254
  %45 = icmp eq i32 %44, 114
  br i1 %45, label %while.body, label %while.end

while.end:                                        ; preds = %while.body, %lor.end
  %newexp.0.lcssa = phi %union.tree_node* [ %call196, %lor.end ], [ %call213, %while.body ]
  %incremented.2.lcssa = phi %union.tree_node* [ %incremented.1, %lor.end ], [ %43, %while.body ]
  %lnot = icmp eq i32 %ignore, 0
  %not.tobool = xor i1 %tobool, true
  %.lnot = and i1 %lnot, %not.tobool
  %land.ext221 = zext i1 %.lnot to i32
  %call222 = tail call %struct.rtx_def* @expand_assignment(%union.tree_node* %incremented.2.lcssa, %union.tree_node* %newexp.0.lcssa, i32 %land.ext221, i32 undef)
  %cond227 = select i1 %tobool, %struct.rtx_def* %op0.0, %struct.rtx_def* %call222
  br label %return

if.end228:                                        ; preds = %lor.lhs.false171
  br i1 %tobool, label %if.then230, label %if.else325

if.then230:                                       ; preds = %if.end228
  %idxprom231447 = zext i32 %bf.clear to i64
  %insn_code234 = getelementptr inbounds %struct.optab* %this_optab.2, i64 0, i32 1, i64 %idxprom231447, i32 0
  %46 = load i32* %insn_code234, align 4, !tbaa !23
  %cmp235 = icmp eq i32 %46, 1317
  br i1 %cmp235, label %if.then323, label %land.lhs.true237

land.lhs.true237:                                 ; preds = %if.then230
  %idxprom238 = sext i32 %46 to i64
  %operand240 = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom238, i32 3
  %47 = load %struct.insn_operand_data** %operand240, align 8, !tbaa !31
  %predicate242 = getelementptr inbounds %struct.insn_operand_data* %47, i64 0, i32 0
  %48 = load i32 (%struct.rtx_def*, i32)** %predicate242, align 8, !tbaa !32
  %call243 = tail call i32 %48(%struct.rtx_def* %op0.0, i32 %bf.clear) #5
  %tobool244 = icmp eq i32 %call243, 0
  br i1 %tobool244, label %land.lhs.true271, label %land.lhs.true245

land.lhs.true245:                                 ; preds = %land.lhs.true237
  %predicate250 = getelementptr inbounds %struct.insn_operand_data* %47, i64 1, i32 0
  %49 = load i32 (%struct.rtx_def*, i32)** %predicate250, align 8, !tbaa !32
  %call251 = tail call i32 %49(%struct.rtx_def* %op0.0, i32 %bf.clear) #5
  %tobool252 = icmp eq i32 %call251, 0
  br i1 %tobool252, label %land.lhs.true271, label %if.then253

if.then253:                                       ; preds = %land.lhs.true245
  %predicate258 = getelementptr inbounds %struct.insn_operand_data* %47, i64 2, i32 0
  %50 = load i32 (%struct.rtx_def*, i32)** %predicate258, align 8, !tbaa !32
  %call259 = tail call i32 %50(%struct.rtx_def* %op1.0, i32 %bf.clear) #5
  %tobool260 = icmp eq i32 %call259, 0
  br i1 %tobool260, label %if.then261, label %if.end263

if.then261:                                       ; preds = %if.then253
  %call262 = tail call %struct.rtx_def* @force_reg(i32 %bf.clear, %struct.rtx_def* %op1.0) #5
  br label %if.end263

if.end263:                                        ; preds = %if.then253, %if.then261
  %op1.1 = phi %struct.rtx_def* [ %op1.0, %if.then253 ], [ %call262, %if.then261 ]
  %genfun = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom238, i32 2
  %51 = load %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun, align 8, !tbaa !25
  %call266 = tail call %struct.rtx_def* (%struct.rtx_def*, ...)* %51(%struct.rtx_def* %op0.0, %struct.rtx_def* %op0.0, %struct.rtx_def* %op1.1) #5
  %bf.load.i = load i32* %17, align 8
  %bf.lshr.i = lshr i32 %bf.load.i, 16
  %bf.clear.i = and i32 %bf.lshr.i, 255
  %52 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr.i = getelementptr inbounds %struct.function* %52, i64 0, i32 2
  %53 = load %struct.expr_status** %expr.i, align 8, !tbaa !6
  %x_pending_chain.i = getelementptr inbounds %struct.expr_status* %53, i64 0, i32 6
  %54 = load %struct.rtx_def** %x_pending_chain.i, align 8, !tbaa !11
  %call.i = tail call %struct.rtx_def* @gen_rtx_fmt_eeeee(i32 71, i32 %bf.clear.i, %struct.rtx_def* %op0.0, %struct.rtx_def* null, %struct.rtx_def* null, %struct.rtx_def* %call266, %struct.rtx_def* %54) #5
  %55 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr1.i = getelementptr inbounds %struct.function* %55, i64 0, i32 2
  %56 = load %struct.expr_status** %expr1.i, align 8, !tbaa !6
  %x_pending_chain2.i = getelementptr inbounds %struct.expr_status* %56, i64 0, i32 6
  store %struct.rtx_def* %call.i, %struct.rtx_def** %x_pending_chain2.i, align 8, !tbaa !11
  %57 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr3.i = getelementptr inbounds %struct.function* %57, i64 0, i32 2
  %58 = load %struct.expr_status** %expr3.i, align 8, !tbaa !6
  %x_pending_chain4.i = getelementptr inbounds %struct.expr_status* %58, i64 0, i32 6
  %59 = load %struct.rtx_def** %x_pending_chain4.i, align 8, !tbaa !11
  br label %return

land.lhs.true271:                                 ; preds = %land.lhs.true245, %land.lhs.true237
  %bf.load272 = load i32* %17, align 8
  %bf.clear273 = and i32 %bf.load272, 65535
  %cmp274 = icmp eq i32 %bf.clear273, 66
  br i1 %cmp274, label %if.then276, label %if.then323

if.then276:                                       ; preds = %land.lhs.true271
  %arrayidx278 = getelementptr inbounds %struct.rtx_def* %op0.0, i64 0, i32 1, i64 0
  %rtx279 = bitcast %union.rtunion_def* %arrayidx278 to %struct.rtx_def**
  %60 = load %struct.rtx_def** %rtx279, align 8, !tbaa !1
  %call280 = tail call i32 @general_operand(%struct.rtx_def* %60, i32 %bf.clear) #5
  %tobool281 = icmp eq i32 %call280, 0
  br i1 %tobool281, label %cond.false290, label %cond.true282

cond.true282:                                     ; preds = %if.then276
  %61 = load i32* @target_flags, align 4, !tbaa !21
  %and283 = lshr i32 %61, 25
  %62 = and i32 %and283, 1
  %63 = or i32 %62, 4
  %64 = load %struct.rtx_def** %rtx279, align 8, !tbaa !1
  %call289 = tail call %struct.rtx_def* @force_reg(i32 %63, %struct.rtx_def* %64) #5
  br label %cond.end295

cond.false290:                                    ; preds = %if.then276
  %65 = load %struct.rtx_def** %rtx279, align 8, !tbaa !1
  %call294 = tail call %struct.rtx_def* @copy_to_reg(%struct.rtx_def* %65) #5
  br label %cond.end295

cond.end295:                                      ; preds = %cond.false290, %cond.true282
  %cond296 = phi %struct.rtx_def* [ %call289, %cond.true282 ], [ %call294, %cond.false290 ]
  %call298 = tail call %struct.rtx_def* @replace_equiv_address(%struct.rtx_def* %op0.0, %struct.rtx_def* %cond296) #5
  %66 = getelementptr inbounds %struct.rtx_def* %call298, i64 0, i32 0
  %bf.load299 = load i32* %66, align 8
  %bf.lshr300 = lshr i32 %bf.load299, 16
  %bf.clear301 = and i32 %bf.lshr300, 255
  %call302 = tail call %struct.rtx_def* @force_reg(i32 %bf.clear301, %struct.rtx_def* %call298) #5
  %predicate307 = getelementptr inbounds %struct.insn_operand_data* %47, i64 2, i32 0
  %67 = load i32 (%struct.rtx_def*, i32)** %predicate307, align 8, !tbaa !32
  %call308 = tail call i32 %67(%struct.rtx_def* %op1.0, i32 %bf.clear) #5
  %tobool309 = icmp eq i32 %call308, 0
  br i1 %tobool309, label %if.then310, label %if.end312

if.then310:                                       ; preds = %cond.end295
  %call311 = tail call %struct.rtx_def* @force_reg(i32 %bf.clear, %struct.rtx_def* %op1.0) #5
  br label %if.end312

if.end312:                                        ; preds = %cond.end295, %if.then310
  %op1.2 = phi %struct.rtx_def* [ %op1.0, %cond.end295 ], [ %call311, %if.then310 ]
  %call313 = tail call %struct.rtx_def* @gen_move_insn(%struct.rtx_def* %call298, %struct.rtx_def* %call302) #5
  %bf.load.i449 = load i32* %66, align 8
  %bf.lshr.i450 = lshr i32 %bf.load.i449, 16
  %bf.clear.i451 = and i32 %bf.lshr.i450, 255
  %68 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr.i452 = getelementptr inbounds %struct.function* %68, i64 0, i32 2
  %69 = load %struct.expr_status** %expr.i452, align 8, !tbaa !6
  %x_pending_chain.i453 = getelementptr inbounds %struct.expr_status* %69, i64 0, i32 6
  %70 = load %struct.rtx_def** %x_pending_chain.i453, align 8, !tbaa !11
  %call.i454 = tail call %struct.rtx_def* @gen_rtx_fmt_eeeee(i32 71, i32 %bf.clear.i451, %struct.rtx_def* %call298, %struct.rtx_def* null, %struct.rtx_def* null, %struct.rtx_def* %call313, %struct.rtx_def* %70) #5
  %71 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr1.i455 = getelementptr inbounds %struct.function* %71, i64 0, i32 2
  %72 = load %struct.expr_status** %expr1.i455, align 8, !tbaa !6
  %x_pending_chain2.i456 = getelementptr inbounds %struct.expr_status* %72, i64 0, i32 6
  store %struct.rtx_def* %call.i454, %struct.rtx_def** %x_pending_chain2.i456, align 8, !tbaa !11
  %genfun317 = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom238, i32 2
  %73 = load %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun317, align 8, !tbaa !25
  %call318 = tail call %struct.rtx_def* (%struct.rtx_def*, ...)* %73(%struct.rtx_def* %call302, %struct.rtx_def* %call302, %struct.rtx_def* %op1.2) #5
  %74 = getelementptr inbounds %struct.rtx_def* %call302, i64 0, i32 0
  %bf.load.i459 = load i32* %74, align 8
  %bf.lshr.i460 = lshr i32 %bf.load.i459, 16
  %bf.clear.i461 = and i32 %bf.lshr.i460, 255
  %75 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr.i462 = getelementptr inbounds %struct.function* %75, i64 0, i32 2
  %76 = load %struct.expr_status** %expr.i462, align 8, !tbaa !6
  %x_pending_chain.i463 = getelementptr inbounds %struct.expr_status* %76, i64 0, i32 6
  %77 = load %struct.rtx_def** %x_pending_chain.i463, align 8, !tbaa !11
  %call.i464 = tail call %struct.rtx_def* @gen_rtx_fmt_eeeee(i32 71, i32 %bf.clear.i461, %struct.rtx_def* %call302, %struct.rtx_def* null, %struct.rtx_def* null, %struct.rtx_def* %call318, %struct.rtx_def* %77) #5
  %78 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr1.i465 = getelementptr inbounds %struct.function* %78, i64 0, i32 2
  %79 = load %struct.expr_status** %expr1.i465, align 8, !tbaa !6
  %x_pending_chain2.i466 = getelementptr inbounds %struct.expr_status* %79, i64 0, i32 6
  store %struct.rtx_def* %call.i464, %struct.rtx_def** %x_pending_chain2.i466, align 8, !tbaa !11
  %80 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr3.i467 = getelementptr inbounds %struct.function* %80, i64 0, i32 2
  %81 = load %struct.expr_status** %expr3.i467, align 8, !tbaa !6
  %x_pending_chain4.i468 = getelementptr inbounds %struct.expr_status* %81, i64 0, i32 6
  %82 = load %struct.rtx_def** %x_pending_chain4.i468, align 8, !tbaa !11
  br label %return

if.then323:                                       ; preds = %land.lhs.true271, %if.then230
  %call324 = tail call %struct.rtx_def* @copy_to_reg(%struct.rtx_def* %op0.0) #5
  br label %if.end327

if.else325:                                       ; preds = %if.end228
  %call326 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %op0.0) #5
  br label %if.end327

if.end327:                                        ; preds = %if.else325, %if.then323
  %value.0 = phi %struct.rtx_def* [ %call324, %if.then323 ], [ %op0.0, %if.else325 ]
  %temp.0 = phi %struct.rtx_def* [ %call324, %if.then323 ], [ %call326, %if.else325 ]
  %83 = load %union.tree_node** %type, align 8, !tbaa !36
  %unsigned_flag331 = getelementptr inbounds %union.tree_node* %83, i64 0, i32 0, i32 0, i32 2
  %bf.load332 = load i32* %unsigned_flag331, align 8
  %bf.lshr333 = lshr i32 %bf.load332, 13
  %bf.clear334 = and i32 %bf.lshr333, 1
  %call335 = tail call %struct.rtx_def* @expand_binop(i32 %bf.clear, %struct.optab* %this_optab.2, %struct.rtx_def* %value.0, %struct.rtx_def* %op1.0, %struct.rtx_def* %op0.0, i32 %bf.clear334, i32 3) #5
  %cmp336 = icmp eq %struct.rtx_def* %call335, %op0.0
  br i1 %cmp336, label %return, label %if.then338

if.then338:                                       ; preds = %if.end327
  %call339 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %op0.0, %struct.rtx_def* %call335)
  br label %return

return:                                           ; preds = %if.then338, %if.end327, %if.end312, %if.end263, %while.end
  %retval.0 = phi %struct.rtx_def* [ %cond227, %while.end ], [ %59, %if.end263 ], [ %82, %if.end312 ], [ %temp.0, %if.end327 ], [ %temp.0, %if.then338 ]
  ret %struct.rtx_def* %retval.0
}

declare %struct.rtx_def* @trampoline_address(%union.tree_node*) #1

declare void @mark_temp_addr_taken(%struct.rtx_def*) #1

declare void @expand_eh_region_start() #1

declare void @expand_eh_region_end_cleanup(%union.tree_node*) #1

declare void @emit_indirect_jump(%struct.rtx_def*) #1

declare %struct.rtx_def* @expand_builtin_va_arg(%union.tree_node*, %union.tree_node*) #1

declare %struct.rtx_def* @get_exception_pointer(%struct.function*) #1

; Function Attrs: nounwind uwtable
define void @init_pending_stack_adjust() #0 {
entry:
  %0 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr = getelementptr inbounds %struct.function* %0, i64 0, i32 2
  %1 = load %struct.expr_status** %expr, align 8, !tbaa !6
  %x_pending_stack_adjust = getelementptr inbounds %struct.expr_status* %1, i64 0, i32 0
  store i32 0, i32* %x_pending_stack_adjust, align 4, !tbaa !13
  ret void
}

; Function Attrs: nounwind uwtable
define void @clear_pending_stack_adjust() #0 {
entry:
  %0 = load i32* @optimize, align 4, !tbaa !21
  %cmp = icmp sgt i32 %0, 0
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %1 = load i32* @flag_omit_frame_pointer, align 4, !tbaa !21
  %tobool = icmp eq i32 %1, 0
  br i1 %tobool, label %land.lhs.true2, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true
  %2 = load %struct.function** @cfun, align 8, !tbaa !1
  %calls_alloca = getelementptr inbounds %struct.function* %2, i64 0, i32 56
  %3 = bitcast i24* %calls_alloca to i32*
  %bf.load = load i32* %3, align 8
  %bf.clear = and i32 %bf.load, 64
  %tobool1 = icmp eq i32 %bf.clear, 0
  br i1 %tobool1, label %if.end, label %land.lhs.true2

land.lhs.true2:                                   ; preds = %lor.lhs.false, %land.lhs.true
  %4 = load %union.tree_node** @current_function_decl, align 8, !tbaa !1
  %inline_flag = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 5
  %5 = bitcast i48* %inline_flag to i64*
  %bf.load3 = load i64* %5, align 8
  %bf.cast = and i64 %bf.load3, 2048
  %6 = load i32* @flag_no_inline, align 4
  %notlhs = icmp ne i64 %bf.cast, 0
  %notrhs = icmp eq i32 %6, 0
  %or.cond.not = and i1 %notrhs, %notlhs
  %7 = load i32* @flag_inline_functions, align 4
  %tobool10 = icmp ne i32 %7, 0
  %or.cond14 = or i1 %or.cond.not, %tobool10
  br i1 %or.cond14, label %if.end, label %if.then

if.then:                                          ; preds = %land.lhs.true2
  %8 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr = getelementptr inbounds %struct.function* %8, i64 0, i32 2
  %9 = load %struct.expr_status** %expr, align 8, !tbaa !6
  %x_pending_stack_adjust = getelementptr inbounds %struct.expr_status* %9, i64 0, i32 0
  %10 = load i32* %x_pending_stack_adjust, align 4, !tbaa !13
  %x_stack_pointer_delta = getelementptr inbounds %struct.expr_status* %9, i64 0, i32 2
  %11 = load i32* %x_stack_pointer_delta, align 4, !tbaa !14
  %sub = sub nsw i32 %11, %10
  store i32 %sub, i32* %x_stack_pointer_delta, align 4, !tbaa !14
  store i32 0, i32* %x_pending_stack_adjust, align 4, !tbaa !13
  br label %if.end

if.end:                                           ; preds = %lor.lhs.false, %land.lhs.true2, %if.then, %entry
  ret void
}

declare void @adjust_stack(%struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define internal fastcc void @do_compare_and_jump(%union.tree_node* nocapture readonly %exp, i32 %signed_code, i32 %unsigned_code, %struct.rtx_def* %if_false_label, %struct.rtx_def* %if_true_label) #0 {
entry:
  %operands = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx = bitcast i32* %operands to %union.tree_node**
  %0 = load %union.tree_node** %arrayidx, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %0, %struct.rtx_def* null, i32 0, i32 0)
  %1 = load %union.tree_node** %arrayidx, align 8, !tbaa !1
  %code5 = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code5, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 0
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %arrayidx8 = getelementptr inbounds i32* %operands, i64 2
  %2 = bitcast i32* %arrayidx8 to %union.tree_node**
  %3 = load %union.tree_node** %2, align 8, !tbaa !1
  %call9 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %3, %struct.rtx_def* null, i32 0, i32 0)
  %4 = load %union.tree_node** %2, align 8, !tbaa !1
  %code14 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 0, i32 2
  %bf.load15 = load i32* %code14, align 8
  %bf.clear16 = and i32 %bf.load15, 255
  %cmp17 = icmp eq i32 %bf.clear16, 0
  br i1 %cmp17, label %return, label %if.end19

if.end19:                                         ; preds = %if.end
  %5 = load %union.tree_node** %arrayidx, align 8, !tbaa !1
  %type24 = getelementptr inbounds %union.tree_node* %5, i64 0, i32 0, i32 0, i32 1
  %6 = load %union.tree_node** %type24, align 8, !tbaa !36
  %type25 = bitcast %union.tree_node* %6 to %struct.tree_type*
  %mode26 = getelementptr inbounds %struct.tree_type* %type25, i64 0, i32 6
  %bf.load27 = load i32* %mode26, align 4
  %bf.lshr = lshr i32 %bf.load27, 9
  %bf.clear28 = and i32 %bf.lshr, 127
  %code33 = getelementptr inbounds %union.tree_node* %5, i64 0, i32 0, i32 0, i32 2
  %bf.load34 = load i32* %code33, align 8
  %bf.clear35 = and i32 %bf.load34, 255
  %cmp36 = icmp eq i32 %bf.clear35, 25
  br i1 %cmp36, label %land.lhs.true, label %if.end72

land.lhs.true:                                    ; preds = %if.end19
  %cmp44 = icmp eq i32 %bf.clear16, 25
  br i1 %cmp44, label %lor.lhs.false, label %land.lhs.true.if.then61_crit_edge

land.lhs.true.if.then61_crit_edge:                ; preds = %land.lhs.true
  %type66.phi.trans.insert = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 0, i32 1
  %.pre = load %union.tree_node** %type66.phi.trans.insert, align 8, !tbaa !36
  %type67.phi.trans.insert = bitcast %union.tree_node* %.pre to %struct.tree_type*
  %mode68.phi.trans.insert = getelementptr inbounds %struct.tree_type* %type67.phi.trans.insert, i64 0, i32 6
  %bf.load69.pre = load i32* %mode68.phi.trans.insert, align 4
  br label %if.then61

lor.lhs.false:                                    ; preds = %land.lhs.true
  %idxprom101 = zext i32 %bf.clear28 to i64
  %arrayidx45 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom101
  %7 = load i16* %arrayidx45, align 2, !tbaa !19
  %type50 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 0, i32 1
  %8 = load %union.tree_node** %type50, align 8, !tbaa !36
  %type51 = bitcast %union.tree_node* %8 to %struct.tree_type*
  %mode52 = getelementptr inbounds %struct.tree_type* %type51, i64 0, i32 6
  %bf.load53 = load i32* %mode52, align 4
  %bf.lshr54 = lshr i32 %bf.load53, 9
  %bf.clear55 = and i32 %bf.lshr54, 127
  %idxprom56102 = zext i32 %bf.clear55 to i64
  %arrayidx57 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom56102
  %9 = load i16* %arrayidx57, align 2, !tbaa !19
  %cmp59 = icmp ugt i16 %7, %9
  br i1 %cmp59, label %if.then61, label %if.end72

if.then61:                                        ; preds = %land.lhs.true.if.then61_crit_edge, %lor.lhs.false
  %bf.load69 = phi i32 [ %bf.load69.pre, %land.lhs.true.if.then61_crit_edge ], [ %bf.load53, %lor.lhs.false ]
  %10 = phi %union.tree_node* [ %.pre, %land.lhs.true.if.then61_crit_edge ], [ %8, %lor.lhs.false ]
  %bf.lshr70 = lshr i32 %bf.load69, 9
  %bf.clear71 = and i32 %bf.lshr70, 127
  br label %if.end72

if.end72:                                         ; preds = %if.then61, %lor.lhs.false, %if.end19
  %mode.0 = phi i32 [ %bf.clear71, %if.then61 ], [ %bf.clear28, %lor.lhs.false ], [ %bf.clear28, %if.end19 ]
  %type.0 = phi %union.tree_node* [ %10, %if.then61 ], [ %6, %lor.lhs.false ], [ %6, %if.end19 ]
  %unsigned_flag = getelementptr inbounds %union.tree_node* %type.0, i64 0, i32 0, i32 0, i32 2
  %bf.load74 = load i32* %unsigned_flag, align 8
  %bf.lshr75 = lshr i32 %bf.load74, 13
  %bf.clear76 = and i32 %bf.lshr75, 1
  %tobool = icmp ne i32 %bf.clear76, 0
  %cond = select i1 %tobool, i32 %unsigned_code, i32 %signed_code
  %11 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr30.i = getelementptr inbounds %struct.function* %11, i64 0, i32 2
  %12 = load %struct.expr_status** %expr30.i, align 8, !tbaa !6
  %x_pending_chain31.i = getelementptr inbounds %struct.expr_status* %12, i64 0, i32 6
  %13 = load %struct.rtx_def** %x_pending_chain31.i, align 8, !tbaa !11
  %tobool32.i = icmp eq %struct.rtx_def* %13, null
  br i1 %tobool32.i, label %emit_queue.exit, label %while.body.i

while.body.i:                                     ; preds = %if.end72, %if.end.i
  %14 = phi %struct.rtx_def* [ %26, %if.end.i ], [ %13, %if.end72 ]
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %14, i64 0, i32 1, i64 3
  %rtx.i = bitcast %union.rtunion_def* %arrayidx.i to %struct.rtx_def**
  %15 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !1
  %16 = getelementptr inbounds %struct.rtx_def* %15, i64 0, i32 0
  %bf.load.i = load i32* %16, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  %cmp.i = icmp eq i32 %bf.clear.i, 24
  br i1 %cmp.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %while.body.i
  %arrayidx5.i = getelementptr inbounds %struct.rtx_def* %15, i64 0, i32 1, i64 0
  %rtvec.i = bitcast %union.rtunion_def* %arrayidx5.i to %struct.rtvec_def**
  %17 = load %struct.rtvec_def** %rtvec.i, align 8, !tbaa !1
  %arrayidx6.i = getelementptr inbounds %struct.rtvec_def* %17, i64 0, i32 1, i64 0
  %18 = load %struct.rtx_def** %arrayidx6.i, align 8, !tbaa !1
  %19 = getelementptr inbounds %struct.rtx_def* %14, i64 0, i32 1, i64 1, i32 0
  %.c.i = ptrtoint %struct.rtx_def* %18 to i64
  store i64 %.c.i, i64* %19, align 8, !tbaa !1
  %call.i = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %15) #5
  br label %if.end.i

if.else.i:                                        ; preds = %while.body.i
  %call16.i = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %15) #5
  %20 = getelementptr inbounds %struct.rtx_def* %14, i64 0, i32 1, i64 1, i32 0
  %call16.c.i = ptrtoint %struct.rtx_def* %call16.i to i64
  store i64 %call16.c.i, i64* %20, align 8, !tbaa !1
  br label %if.end.i

if.end.i:                                         ; preds = %if.else.i, %if.then.i
  %arrayidx21.i = getelementptr inbounds %struct.rtx_def* %14, i64 0, i32 1, i64 4
  %rtx22.i = bitcast %union.rtunion_def* %arrayidx21.i to %struct.rtx_def**
  %21 = load %struct.rtx_def** %rtx22.i, align 8, !tbaa !1
  %22 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr23.i = getelementptr inbounds %struct.function* %22, i64 0, i32 2
  %23 = load %struct.expr_status** %expr23.i, align 8, !tbaa !6
  %x_pending_chain24.i = getelementptr inbounds %struct.expr_status* %23, i64 0, i32 6
  store %struct.rtx_def* %21, %struct.rtx_def** %x_pending_chain24.i, align 8, !tbaa !11
  %24 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr.i = getelementptr inbounds %struct.function* %24, i64 0, i32 2
  %25 = load %struct.expr_status** %expr.i, align 8, !tbaa !6
  %x_pending_chain.i = getelementptr inbounds %struct.expr_status* %25, i64 0, i32 6
  %26 = load %struct.rtx_def** %x_pending_chain.i, align 8, !tbaa !11
  %tobool.i = icmp eq %struct.rtx_def* %26, null
  br i1 %tobool.i, label %emit_queue.exit, label %while.body.i

emit_queue.exit:                                  ; preds = %if.end.i, %if.end72
  %cmp77 = icmp eq i32 %mode.0, 51
  br i1 %cmp77, label %cond.true79, label %cond.end85

cond.true79:                                      ; preds = %emit_queue.exit
  %27 = load %union.tree_node** %arrayidx, align 8, !tbaa !1
  %call83 = tail call %struct.rtx_def* @expr_size(%union.tree_node* %27) #5
  br label %cond.end85

cond.end85:                                       ; preds = %emit_queue.exit, %cond.true79
  %cond86 = phi %struct.rtx_def* [ %call83, %cond.true79 ], [ null, %emit_queue.exit ]
  tail call void @do_compare_rtx_and_jump(%struct.rtx_def* %call, %struct.rtx_def* %call9, i32 %cond, i32 %bf.clear76, i32 %mode.0, %struct.rtx_def* %cond86, %struct.rtx_def* %if_false_label, %struct.rtx_def* %if_true_label)
  br label %return

return:                                           ; preds = %if.end, %entry, %cond.end85
  ret void
}

declare i32 @tree_floor_log2(%union.tree_node*) #1

declare %union.tree_node* @type_for_size(i32, i32) #1

declare %union.tree_node* @save_expr(%union.tree_node*) #1

; Function Attrs: nounwind uwtable
define internal fastcc void @do_jump_by_parts_equality(%union.tree_node* nocapture readonly %exp, %struct.rtx_def* %if_false_label, %struct.rtx_def* %if_true_label) #0 {
entry:
  %operands = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx = bitcast i32* %operands to %union.tree_node**
  %0 = load %union.tree_node** %arrayidx, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %0, %struct.rtx_def* null, i32 0, i32 0)
  %arrayidx4 = getelementptr inbounds i32* %operands, i64 2
  %1 = bitcast i32* %arrayidx4 to %union.tree_node**
  %2 = load %union.tree_node** %1, align 8, !tbaa !1
  %call5 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %2, %struct.rtx_def* null, i32 0, i32 0)
  %3 = load %union.tree_node** %arrayidx, align 8, !tbaa !1
  %type = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 0, i32 1
  %4 = load %union.tree_node** %type, align 8, !tbaa !36
  %type9 = bitcast %union.tree_node* %4 to %struct.tree_type*
  %mode10 = getelementptr inbounds %struct.tree_type* %type9, i64 0, i32 6
  %bf.load = load i32* %mode10, align 4
  %bf.lshr = lshr i32 %bf.load, 9
  %bf.clear = and i32 %bf.lshr, 127
  %idxprom41 = zext i32 %bf.clear to i64
  %arrayidx11 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom41
  %5 = load i8* %arrayidx11, align 1, !tbaa !5
  %conv = zext i8 %5 to i32
  %6 = load i32* @target_flags, align 4, !tbaa !21
  %and = lshr i32 %6, 23
  %7 = and i32 %and, 4
  %8 = add i32 %7, 4
  %div = sdiv i32 %conv, %8
  %tobool12 = icmp eq %struct.rtx_def* %if_false_label, null
  br i1 %tobool12, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call13 = tail call %struct.rtx_def* @gen_label_rtx() #5
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %if_false_label.addr.0 = phi %struct.rtx_def* [ %if_false_label, %entry ], [ %call13, %if.then ]
  %drop_through_label.0 = phi %struct.rtx_def* [ null, %entry ], [ %call13, %if.then ]
  %cmp42 = icmp sgt i32 %div, 0
  br i1 %cmp42, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %if.end
  %type18 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %i.043 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.body ]
  %call15 = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %call, i32 %i.043, i32 %bf.clear) #5
  %call16 = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %call5, i32 %i.043, i32 %bf.clear) #5
  %9 = load %union.tree_node** %type18, align 8, !tbaa !36
  %unsigned_flag = getelementptr inbounds %union.tree_node* %9, i64 0, i32 0, i32 0, i32 2
  %bf.load20 = load i32* %unsigned_flag, align 8
  %bf.lshr21 = lshr i32 %bf.load20, 13
  %bf.clear22 = and i32 %bf.lshr21, 1
  %10 = load i32* @word_mode, align 4, !tbaa !5
  tail call void @do_compare_rtx_and_jump(%struct.rtx_def* %call15, %struct.rtx_def* %call16, i32 103, i32 %bf.clear22, i32 %10, %struct.rtx_def* null, %struct.rtx_def* %if_false_label.addr.0, %struct.rtx_def* null)
  %inc = add nsw i32 %i.043, 1
  %exitcond = icmp eq i32 %inc, %div
  br i1 %exitcond, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %if.end
  %tobool23 = icmp eq %struct.rtx_def* %if_true_label, null
  br i1 %tobool23, label %if.end25, label %if.then24

if.then24:                                        ; preds = %for.end
  tail call void @emit_jump(%struct.rtx_def* %if_true_label) #5
  br label %if.end25

if.end25:                                         ; preds = %for.end, %if.then24
  %tobool26 = icmp eq %struct.rtx_def* %drop_through_label.0, null
  br i1 %tobool26, label %if.end29, label %if.then27

if.then27:                                        ; preds = %if.end25
  %call28 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %drop_through_label.0) #5
  br label %if.end29

if.end29:                                         ; preds = %if.end25, %if.then27
  ret void
}

declare %struct.rtx_def* @expand_builtin_expect_jump(%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define void @do_jump_by_parts_equality_rtx(%struct.rtx_def* %op0, %struct.rtx_def* %if_false_label, %struct.rtx_def* %if_true_label) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %op0, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %idxprom60 = zext i32 %bf.clear to i64
  %arrayidx = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom60
  %1 = load i8* %arrayidx, align 1, !tbaa !5
  %conv = zext i8 %1 to i32
  %2 = load i32* @target_flags, align 4, !tbaa !21
  %and = lshr i32 %2, 23
  %3 = and i32 %and, 4
  %4 = add i32 %3, 4
  %div = sdiv i32 %conv, %4
  %5 = load i32* @word_mode, align 4, !tbaa !5
  %call = tail call %struct.rtx_def* @gen_reg_rtx(i32 %5) #5
  %bf.load1 = load i32* %0, align 8
  %bf.lshr2 = lshr i32 %bf.load1, 16
  %bf.clear3 = and i32 %bf.lshr2, 255
  %call4 = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %op0, i32 0, i32 %bf.clear3) #5
  %call5 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call, %struct.rtx_def* %call4)
  %cmp63 = icmp sgt i32 %div, 1
  %cmp764 = icmp ne %struct.rtx_def* %call, null
  %or.cond65 = and i1 %cmp63, %cmp764
  br i1 %or.cond65, label %for.body, label %for.end

for.body:                                         ; preds = %entry, %for.body
  %i.067 = phi i32 [ %inc, %for.body ], [ 1, %entry ]
  %part.066 = phi %struct.rtx_def* [ %call13, %for.body ], [ %call, %entry ]
  %6 = load i32* @word_mode, align 4, !tbaa !5
  %7 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 19), align 8, !tbaa !1
  %bf.load9 = load i32* %0, align 8
  %bf.lshr10 = lshr i32 %bf.load9, 16
  %bf.clear11 = and i32 %bf.lshr10, 255
  %call12 = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %op0, i32 %i.067, i32 %bf.clear11) #5
  %call13 = tail call %struct.rtx_def* @expand_binop(i32 %6, %struct.optab* %7, %struct.rtx_def* %part.066, %struct.rtx_def* %call12, %struct.rtx_def* %part.066, i32 1, i32 2) #5
  %inc = add nsw i32 %i.067, 1
  %cmp = icmp slt i32 %inc, %div
  %cmp7 = icmp ne %struct.rtx_def* %call13, null
  %or.cond = and i1 %cmp, %cmp7
  br i1 %or.cond, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %entry
  %cmp7.lcssa = phi i1 [ %cmp764, %entry ], [ %cmp7, %for.body ]
  %part.0.lcssa = phi %struct.rtx_def* [ %call, %entry ], [ %call13, %for.body ]
  br i1 %cmp7.lcssa, label %if.then, label %if.end

if.then:                                          ; preds = %for.end
  %8 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %9 = load i32* @word_mode, align 4, !tbaa !5
  tail call void @do_compare_rtx_and_jump(%struct.rtx_def* %part.0.lcssa, %struct.rtx_def* %8, i32 103, i32 1, i32 %9, %struct.rtx_def* null, %struct.rtx_def* %if_false_label, %struct.rtx_def* %if_true_label)
  br label %if.end37

if.end:                                           ; preds = %for.end
  %tobool16 = icmp eq %struct.rtx_def* %if_false_label, null
  br i1 %tobool16, label %if.then17, label %if.end19

if.then17:                                        ; preds = %if.end
  %call18 = tail call %struct.rtx_def* @gen_label_rtx() #5
  br label %if.end19

if.end19:                                         ; preds = %if.end, %if.then17
  %if_false_label.addr.0 = phi %struct.rtx_def* [ %if_false_label, %if.end ], [ %call18, %if.then17 ]
  %drop_through_label.0 = phi %struct.rtx_def* [ null, %if.end ], [ %call18, %if.then17 ]
  %cmp2161 = icmp sgt i32 %div, 0
  br i1 %cmp2161, label %for.body23, label %for.end30

for.body23:                                       ; preds = %if.end19, %for.body23
  %i.162 = phi i32 [ %inc29, %for.body23 ], [ 0, %if.end19 ]
  %bf.load24 = load i32* %0, align 8
  %bf.lshr25 = lshr i32 %bf.load24, 16
  %bf.clear26 = and i32 %bf.lshr25, 255
  %call27 = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %op0, i32 %i.162, i32 %bf.clear26) #5
  %10 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %11 = load i32* @word_mode, align 4, !tbaa !5
  tail call void @do_compare_rtx_and_jump(%struct.rtx_def* %call27, %struct.rtx_def* %10, i32 103, i32 1, i32 %11, %struct.rtx_def* null, %struct.rtx_def* %if_false_label.addr.0, %struct.rtx_def* null)
  %inc29 = add nsw i32 %i.162, 1
  %exitcond = icmp eq i32 %inc29, %div
  br i1 %exitcond, label %for.end30, label %for.body23

for.end30:                                        ; preds = %for.body23, %if.end19
  %tobool31 = icmp eq %struct.rtx_def* %if_true_label, null
  br i1 %tobool31, label %if.end33, label %if.then32

if.then32:                                        ; preds = %for.end30
  tail call void @emit_jump(%struct.rtx_def* %if_true_label) #5
  br label %if.end33

if.end33:                                         ; preds = %for.end30, %if.then32
  %tobool34 = icmp eq %struct.rtx_def* %drop_through_label.0, null
  br i1 %tobool34, label %if.end37, label %if.then35

if.then35:                                        ; preds = %if.end33
  %call36 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %drop_through_label.0) #5
  br label %if.end37

if.end37:                                         ; preds = %if.end33, %if.then, %if.then35
  ret void
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @compare_from_rtx(%struct.rtx_def* %op0, %struct.rtx_def* %op1, i32 %code, i32 %unsignedp, i32 %mode, %struct.rtx_def* %size) #0 {
entry:
  %call = tail call i32 @swap_commutative_operands_p(%struct.rtx_def* %op0, %struct.rtx_def* %op1) #5
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %call1 = tail call i32 @swap_condition(i32 %code) #5
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %code.addr.0 = phi i32 [ %call1, %if.then ], [ %code, %entry ]
  %op1.addr.0 = phi %struct.rtx_def* [ %op0, %if.then ], [ %op1, %entry ]
  %op0.addr.0 = phi %struct.rtx_def* [ %op1, %if.then ], [ %op0, %entry ]
  %0 = load i32* @flag_force_mem, align 4, !tbaa !21
  %tobool2 = icmp eq i32 %0, 0
  br i1 %tobool2, label %if.end6, label %if.then3

if.then3:                                         ; preds = %if.end
  %call4 = tail call %struct.rtx_def* @force_not_mem(%struct.rtx_def* %op0.addr.0) #5
  %call5 = tail call %struct.rtx_def* @force_not_mem(%struct.rtx_def* %op1.addr.0) #5
  br label %if.end6

if.end6:                                          ; preds = %if.end, %if.then3
  %op1.addr.1 = phi %struct.rtx_def* [ %call5, %if.then3 ], [ %op1.addr.0, %if.end ]
  %op0.addr.1 = phi %struct.rtx_def* [ %call4, %if.then3 ], [ %op0.addr.0, %if.end ]
  %1 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr.i = getelementptr inbounds %struct.function* %1, i64 0, i32 2
  %2 = load %struct.expr_status** %expr.i, align 8, !tbaa !6
  %x_inhibit_defer_pop.i = getelementptr inbounds %struct.expr_status* %2, i64 0, i32 1
  %3 = load i32* %x_inhibit_defer_pop.i, align 4, !tbaa !15
  %cmp.i = icmp eq i32 %3, 0
  br i1 %cmp.i, label %if.then.i, label %do_pending_stack_adjust.exit

if.then.i:                                        ; preds = %if.end6
  %x_pending_stack_adjust.i = getelementptr inbounds %struct.expr_status* %2, i64 0, i32 0
  %4 = load i32* %x_pending_stack_adjust.i, align 4, !tbaa !13
  %cmp2.i = icmp eq i32 %4, 0
  br i1 %cmp2.i, label %if.end.i, label %if.then3.i

if.then3.i:                                       ; preds = %if.then.i
  %conv.i = sext i32 %4 to i64
  %call.i = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv.i) #5
  tail call void @adjust_stack(%struct.rtx_def* %call.i) #5
  %.pre.i = load %struct.function** @cfun, align 8, !tbaa !1
  %expr6.phi.trans.insert.i = getelementptr inbounds %struct.function* %.pre.i, i64 0, i32 2
  %.pre9.i = load %struct.expr_status** %expr6.phi.trans.insert.i, align 8, !tbaa !6
  br label %if.end.i

if.end.i:                                         ; preds = %if.then3.i, %if.then.i
  %5 = phi %struct.expr_status* [ %2, %if.then.i ], [ %.pre9.i, %if.then3.i ]
  %x_pending_stack_adjust7.i = getelementptr inbounds %struct.expr_status* %5, i64 0, i32 0
  store i32 0, i32* %x_pending_stack_adjust7.i, align 4, !tbaa !13
  br label %do_pending_stack_adjust.exit

do_pending_stack_adjust.exit:                     ; preds = %if.end6, %if.end.i
  %6 = getelementptr inbounds %struct.rtx_def* %op0.addr.1, i64 0, i32 0
  %bf.load = load i32* %6, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 54
  br i1 %cmp, label %land.lhs.true, label %if.end14

land.lhs.true:                                    ; preds = %do_pending_stack_adjust.exit
  %7 = getelementptr inbounds %struct.rtx_def* %op1.addr.1, i64 0, i32 0
  %bf.load7 = load i32* %7, align 8
  %bf.clear8 = and i32 %bf.load7, 65535
  %cmp9 = icmp eq i32 %bf.clear8, 54
  br i1 %cmp9, label %land.lhs.true10, label %if.end14

land.lhs.true10:                                  ; preds = %land.lhs.true
  %call11 = tail call %struct.rtx_def* @simplify_relational_operation(i32 %code.addr.0, i32 %mode, %struct.rtx_def* %op0.addr.1, %struct.rtx_def* %op1.addr.1) #5
  %cmp12 = icmp eq %struct.rtx_def* %call11, null
  br i1 %cmp12, label %if.end14, label %return

if.end14:                                         ; preds = %land.lhs.true10, %land.lhs.true, %do_pending_stack_adjust.exit
  tail call void @emit_cmp_insn(%struct.rtx_def* %op0.addr.1, %struct.rtx_def* %op1.addr.1, i32 %code.addr.0, %struct.rtx_def* %size, i32 %mode, i32 %unsignedp) #5
  %8 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 1), align 8, !tbaa !1
  %9 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call15 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 %code.addr.0, i32 0, %struct.rtx_def* %8, %struct.rtx_def* %9) #5
  br label %return

return:                                           ; preds = %land.lhs.true10, %if.end14
  %retval.0 = phi %struct.rtx_def* [ %call15, %if.end14 ], [ %call11, %land.lhs.true10 ]
  ret %struct.rtx_def* %retval.0
}

declare i32 @swap_commutative_operands_p(%struct.rtx_def*, %struct.rtx_def*) #1

declare i32 @swap_condition(i32) #1

declare %struct.rtx_def* @simplify_relational_operation(i32, i32, %struct.rtx_def*, %struct.rtx_def*) #1

declare i32 @reverse_condition(i32) #1

; Function Attrs: nounwind readnone uwtable
define i32 @case_values_threshold() #6 {
entry:
  ret i32 5
}

; Function Attrs: nounwind readnone uwtable
define i32 @try_casesi(%union.tree_node* nocapture readnone %index_type, %union.tree_node* nocapture readnone %index_expr, %union.tree_node* nocapture readnone %minval, %union.tree_node* nocapture readnone %range, %struct.rtx_def* nocapture readnone %table_label, %struct.rtx_def* nocapture readnone %default_label) #6 {
entry:
  ret i32 0
}

; Function Attrs: nounwind uwtable
define i32 @try_tablejump(%union.tree_node* %index_type, %union.tree_node* %index_expr, %union.tree_node* %minval, %union.tree_node* %range, %struct.rtx_def* %table_label, %struct.rtx_def* %default_label) #0 {
entry:
  %call = tail call %union.tree_node* @convert(%union.tree_node* %index_type, %union.tree_node* %index_expr) #5
  %call1 = tail call %union.tree_node* @convert(%union.tree_node* %index_type, %union.tree_node* %minval) #5
  %call2 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 60, %union.tree_node* %index_type, %union.tree_node* %call, %union.tree_node* %call1) #5
  %call3 = tail call %union.tree_node* @fold(%union.tree_node* %call2) #5
  %call4 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %call3, %struct.rtx_def* null, i32 0, i32 0)
  %0 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr30.i = getelementptr inbounds %struct.function* %0, i64 0, i32 2
  %1 = load %struct.expr_status** %expr30.i, align 8, !tbaa !6
  %x_pending_chain31.i = getelementptr inbounds %struct.expr_status* %1, i64 0, i32 6
  %2 = load %struct.rtx_def** %x_pending_chain31.i, align 8, !tbaa !11
  %tobool32.i = icmp eq %struct.rtx_def* %2, null
  br i1 %tobool32.i, label %emit_queue.exit, label %while.body.i

while.body.i:                                     ; preds = %entry, %if.end.i
  %3 = phi %struct.rtx_def* [ %15, %if.end.i ], [ %2, %entry ]
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 1, i64 3
  %rtx.i = bitcast %union.rtunion_def* %arrayidx.i to %struct.rtx_def**
  %4 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !1
  %5 = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 0
  %bf.load.i = load i32* %5, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  %cmp.i = icmp eq i32 %bf.clear.i, 24
  br i1 %cmp.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %while.body.i
  %arrayidx5.i = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 1, i64 0
  %rtvec.i = bitcast %union.rtunion_def* %arrayidx5.i to %struct.rtvec_def**
  %6 = load %struct.rtvec_def** %rtvec.i, align 8, !tbaa !1
  %arrayidx6.i = getelementptr inbounds %struct.rtvec_def* %6, i64 0, i32 1, i64 0
  %7 = load %struct.rtx_def** %arrayidx6.i, align 8, !tbaa !1
  %8 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 1, i64 1, i32 0
  %.c.i = ptrtoint %struct.rtx_def* %7 to i64
  store i64 %.c.i, i64* %8, align 8, !tbaa !1
  %call.i = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %4) #5
  br label %if.end.i

if.else.i:                                        ; preds = %while.body.i
  %call16.i = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %4) #5
  %9 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 1, i64 1, i32 0
  %call16.c.i = ptrtoint %struct.rtx_def* %call16.i to i64
  store i64 %call16.c.i, i64* %9, align 8, !tbaa !1
  br label %if.end.i

if.end.i:                                         ; preds = %if.else.i, %if.then.i
  %arrayidx21.i = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 1, i64 4
  %rtx22.i = bitcast %union.rtunion_def* %arrayidx21.i to %struct.rtx_def**
  %10 = load %struct.rtx_def** %rtx22.i, align 8, !tbaa !1
  %11 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr23.i = getelementptr inbounds %struct.function* %11, i64 0, i32 2
  %12 = load %struct.expr_status** %expr23.i, align 8, !tbaa !6
  %x_pending_chain24.i = getelementptr inbounds %struct.expr_status* %12, i64 0, i32 6
  store %struct.rtx_def* %10, %struct.rtx_def** %x_pending_chain24.i, align 8, !tbaa !11
  %13 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr.i = getelementptr inbounds %struct.function* %13, i64 0, i32 2
  %14 = load %struct.expr_status** %expr.i, align 8, !tbaa !6
  %x_pending_chain.i = getelementptr inbounds %struct.expr_status* %14, i64 0, i32 6
  %15 = load %struct.rtx_def** %x_pending_chain.i, align 8, !tbaa !11
  %tobool.i = icmp eq %struct.rtx_def* %15, null
  br i1 %tobool.i, label %emit_queue.exit, label %while.body.i

emit_queue.exit:                                  ; preds = %if.end.i, %entry
  %call5 = tail call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %call4, i32 0)
  %16 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr.i33 = getelementptr inbounds %struct.function* %16, i64 0, i32 2
  %17 = load %struct.expr_status** %expr.i33, align 8, !tbaa !6
  %x_inhibit_defer_pop.i = getelementptr inbounds %struct.expr_status* %17, i64 0, i32 1
  %18 = load i32* %x_inhibit_defer_pop.i, align 4, !tbaa !15
  %cmp.i34 = icmp eq i32 %18, 0
  br i1 %cmp.i34, label %if.then.i35, label %do_pending_stack_adjust.exit

if.then.i35:                                      ; preds = %emit_queue.exit
  %x_pending_stack_adjust.i = getelementptr inbounds %struct.expr_status* %17, i64 0, i32 0
  %19 = load i32* %x_pending_stack_adjust.i, align 4, !tbaa !13
  %cmp2.i = icmp eq i32 %19, 0
  br i1 %cmp2.i, label %if.end.i37, label %if.then3.i

if.then3.i:                                       ; preds = %if.then.i35
  %conv.i = sext i32 %19 to i64
  %call.i36 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv.i) #5
  tail call void @adjust_stack(%struct.rtx_def* %call.i36) #5
  %.pre.i = load %struct.function** @cfun, align 8, !tbaa !1
  %expr6.phi.trans.insert.i = getelementptr inbounds %struct.function* %.pre.i, i64 0, i32 2
  %.pre9.i = load %struct.expr_status** %expr6.phi.trans.insert.i, align 8, !tbaa !6
  br label %if.end.i37

if.end.i37:                                       ; preds = %if.then3.i, %if.then.i35
  %20 = phi %struct.expr_status* [ %17, %if.then.i35 ], [ %.pre9.i, %if.then3.i ]
  %x_pending_stack_adjust7.i = getelementptr inbounds %struct.expr_status* %20, i64 0, i32 0
  store i32 0, i32* %x_pending_stack_adjust7.i, align 4, !tbaa !13
  br label %do_pending_stack_adjust.exit

do_pending_stack_adjust.exit:                     ; preds = %emit_queue.exit, %if.end.i37
  %type = bitcast %union.tree_node* %index_type to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type* %type, i64 0, i32 6
  %bf.load = load i32* %mode, align 4
  %bf.lshr = lshr i32 %bf.load, 9
  %bf.clear = and i32 %bf.lshr, 127
  %type11 = getelementptr inbounds %union.tree_node* %range, i64 0, i32 0, i32 0, i32 1
  %21 = load %union.tree_node** %type11, align 8, !tbaa !36
  %type12 = bitcast %union.tree_node* %21 to %struct.tree_type*
  %mode13 = getelementptr inbounds %struct.tree_type* %type12, i64 0, i32 6
  %bf.load14 = load i32* %mode13, align 4
  %bf.lshr15 = lshr i32 %bf.load14, 9
  %bf.clear16 = and i32 %bf.lshr15, 127
  %call17 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %range, %struct.rtx_def* null, i32 0, i32 0)
  %22 = load %union.tree_node** %type11, align 8, !tbaa !36
  %unsigned_flag = getelementptr inbounds %union.tree_node* %22, i64 0, i32 0, i32 0, i32 2
  %bf.load21 = load i32* %unsigned_flag, align 8
  %bf.lshr22 = lshr i32 %bf.load21, 13
  %bf.clear23 = and i32 %bf.lshr22, 1
  %call24 = tail call %struct.rtx_def* @convert_modes(i32 %bf.clear, i32 %bf.clear16, %struct.rtx_def* %call17, i32 %bf.clear23)
  tail call void @emit_cmp_and_jump_insns(%struct.rtx_def* %call5, %struct.rtx_def* %call24, i32 109, %struct.rtx_def* null, i32 %bf.clear, i32 1, %struct.rtx_def* %default_label) #5
  %23 = load i32* @target_flags, align 4, !tbaa !21
  %and.i = lshr i32 %23, 25
  %24 = and i32 %and.i, 1
  %25 = or i32 %24, 4
  %cmp.i38 = icmp eq i32 %25, %bf.clear
  br i1 %cmp.i38, label %if.end.i41, label %if.then.i40

if.then.i40:                                      ; preds = %do_pending_stack_adjust.exit
  %call.i.i = tail call %struct.rtx_def* @convert_modes(i32 %25, i32 0, %struct.rtx_def* %call5, i32 1) #5
  %.pre.i39 = load i32* @target_flags, align 4, !tbaa !21
  br label %if.end.i41

if.end.i41:                                       ; preds = %if.then.i40, %do_pending_stack_adjust.exit
  %26 = phi i32 [ %.pre.i39, %if.then.i40 ], [ %23, %do_pending_stack_adjust.exit ]
  %index.addr.0.i = phi %struct.rtx_def* [ %call.i.i, %if.then.i40 ], [ %call5, %do_pending_stack_adjust.exit ]
  %and4.i = and i32 %26, 33554432
  %tobool5.i = icmp eq i32 %and4.i, 0
  %27 = lshr exact i32 %and4.i, 25
  %28 = or i32 %27, 4
  br i1 %tobool5.i, label %lor.end.i, label %lor.rhs.i

lor.rhs.i:                                        ; preds = %if.end.i41
  %29 = load i32* @flag_pic, align 4, !tbaa !21
  %tobool12.i = icmp ne i32 %29, 0
  %phitmp56.i = select i1 %tobool12.i, i64 4, i64 5
  br label %lor.end.i

lor.end.i:                                        ; preds = %lor.rhs.i, %if.end.i41
  %30 = phi i64 [ 4, %if.end.i41 ], [ %phitmp56.i, %lor.rhs.i ]
  %arrayidx.i42 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %30
  %31 = load i8* %arrayidx.i42, align 1, !tbaa !5
  %conv.i43 = zext i8 %31 to i64
  %call14.i = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv.i43) #5
  %call15.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 78, i32 %28, %struct.rtx_def* %index.addr.0.i, %struct.rtx_def* %call14.i) #5
  %32 = load i32* @target_flags, align 4, !tbaa !21
  %and16.i = lshr i32 %32, 25
  %33 = and i32 %and16.i, 1
  %34 = or i32 %33, 4
  %call19.i = tail call %struct.rtx_def* @gen_rtx_fmt_u00(i32 67, i32 %34, %struct.rtx_def* %table_label) #5
  %call20.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %28, %struct.rtx_def* %call15.i, %struct.rtx_def* %call19.i) #5
  %35 = load i32* @target_flags, align 4, !tbaa !21
  %and21.i = and i32 %35, 33554432
  %tobool22.i = icmp eq i32 %and21.i, 0
  br i1 %tobool22.i, label %lor.end25.i, label %lor.rhs23.i

lor.rhs23.i:                                      ; preds = %lor.end.i
  %36 = load i32* @flag_pic, align 4, !tbaa !21
  %tobool24.i = icmp ne i32 %36, 0
  %phitmp.i = select i1 %tobool24.i, i32 4, i32 5
  br label %lor.end25.i

lor.end25.i:                                      ; preds = %lor.rhs23.i, %lor.end.i
  %37 = phi i32 [ 4, %lor.end.i ], [ %phitmp.i, %lor.rhs23.i ]
  %call27.i = tail call %struct.rtx_def* @memory_address_noforce(i32 %37, %struct.rtx_def* %call20.i) #5
  %38 = load i32* @target_flags, align 4, !tbaa !21
  %and28.i = and i32 %38, 33554432
  %tobool29.i = icmp eq i32 %and28.i, 0
  br i1 %tobool29.i, label %lor.end32.i, label %lor.rhs30.i

lor.rhs30.i:                                      ; preds = %lor.end25.i
  %39 = load i32* @flag_pic, align 4, !tbaa !21
  %tobool31.i = icmp ne i32 %39, 0
  %phitmp57.i = select i1 %tobool31.i, i32 4, i32 5
  br label %lor.end32.i

lor.end32.i:                                      ; preds = %lor.rhs30.i, %lor.end25.i
  %40 = phi i32 [ 4, %lor.end25.i ], [ %phitmp57.i, %lor.rhs30.i ]
  %call34.i = tail call %struct.rtx_def* @gen_reg_rtx(i32 %40) #5
  %41 = load i32* @target_flags, align 4, !tbaa !21
  %and35.i = and i32 %41, 33554432
  %tobool36.i = icmp eq i32 %and35.i, 0
  br i1 %tobool36.i, label %lor.end39.i, label %lor.rhs37.i

lor.rhs37.i:                                      ; preds = %lor.end32.i
  %42 = load i32* @flag_pic, align 4, !tbaa !21
  %tobool38.i = icmp ne i32 %42, 0
  %phitmp58.i = select i1 %tobool38.i, i32 4, i32 5
  br label %lor.end39.i

lor.end39.i:                                      ; preds = %lor.rhs37.i, %lor.end32.i
  %43 = phi i32 [ 4, %lor.end32.i ], [ %phitmp58.i, %lor.rhs37.i ]
  %call41.i = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %43, %struct.rtx_def* %call27.i) #5
  %44 = getelementptr inbounds %struct.rtx_def* %call41.i, i64 0, i32 0
  %bf.load.i44 = load i32* %44, align 8
  %bf.set.i = or i32 %bf.load.i44, 67108864
  store i32 %bf.set.i, i32* %44, align 8
  tail call void @convert_move(%struct.rtx_def* %call34.i, %struct.rtx_def* %call41.i, i32 0) #5
  %call42.i = tail call %struct.rtx_def* @gen_tablejump(%struct.rtx_def* %call34.i, %struct.rtx_def* %table_label) #5
  %call43.i = tail call %struct.rtx_def* @emit_jump_insn(%struct.rtx_def* %call42.i) #5
  %45 = load i32* @flag_pic, align 4, !tbaa !21
  %tobool44.i = icmp eq i32 %45, 0
  br i1 %tobool44.i, label %if.then45.i, label %do_tablejump.exit

if.then45.i:                                      ; preds = %lor.end39.i
  %call46.i = tail call %struct.rtx_def* @emit_barrier() #5
  br label %do_tablejump.exit

do_tablejump.exit:                                ; preds = %lor.end39.i, %if.then45.i
  ret i32 1
}

declare %struct.rtx_def* @memory_address_noforce(i32, %struct.rtx_def*) #1

declare %struct.rtx_def* @gen_tablejump(%struct.rtx_def*, %struct.rtx_def*) #1

declare i32 @integer_all_onesp(%union.tree_node*) #1

declare %struct.rtx_def* @emit_store_flag(%struct.rtx_def*, i32, %struct.rtx_def*, %struct.rtx_def*, i32, i32, i32) #1

declare i32 @general_operand(%struct.rtx_def*, i32) #1

declare %struct.rtx_def* @gen_rtx_fmt_eeeee(i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #1

declare i32 @fields_length(%union.tree_node*) #1

; Function Attrs: nounwind uwtable
define internal fastcc i32 @is_zeros_p(%union.tree_node* %exp) #0 {
entry:
  br label %tailrecurse

tailrecurse:                                      ; preds = %sw.bb, %entry
  %exp.tr = phi %union.tree_node* [ %exp, %entry ], [ %0, %sw.bb ]
  %code = getelementptr inbounds %union.tree_node* %exp.tr, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  switch i32 %bf.clear, label %return [
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 25, label %sw.bb2
    i32 27, label %sw.bb4
    i32 26, label %sw.bb9
    i32 28, label %sw.bb13
    i32 46, label %sw.bb18
  ]

sw.bb:                                            ; preds = %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse
  %operands = getelementptr inbounds %union.tree_node* %exp.tr, i64 0, i32 0, i32 2
  %arrayidx = bitcast i32* %operands to %union.tree_node**
  %0 = load %union.tree_node** %arrayidx, align 8, !tbaa !1
  br label %tailrecurse

sw.bb2:                                           ; preds = %tailrecurse
  %call3 = tail call i32 @integer_zerop(%union.tree_node* %exp.tr) #5
  br label %return

sw.bb4:                                           ; preds = %tailrecurse
  %real = getelementptr inbounds %union.tree_node* %exp.tr, i64 0, i32 0, i32 2
  %1 = bitcast i32* %real to %union.tree_node**
  %2 = load %union.tree_node** %1, align 8, !tbaa !88
  %call5 = tail call fastcc i32 @is_zeros_p(%union.tree_node* %2)
  %tobool = icmp eq i32 %call5, 0
  br i1 %tobool, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %sw.bb4
  %3 = getelementptr inbounds %union.tree_node* %exp.tr, i64 0, i32 0, i32 4
  %4 = load %union.tree_node** %3, align 8, !tbaa !90
  %call7 = tail call fastcc i32 @is_zeros_p(%union.tree_node* %4)
  %tobool8 = icmp ne i32 %call7, 0
  br label %land.end

land.end:                                         ; preds = %sw.bb4, %land.rhs
  %5 = phi i1 [ false, %sw.bb4 ], [ %tobool8, %land.rhs ]
  %land.ext = zext i1 %5 to i32
  br label %return

sw.bb9:                                           ; preds = %tailrecurse
  %real_cst10 = getelementptr inbounds %union.tree_node* %exp.tr, i64 0, i32 0, i32 2
  %6 = bitcast i32* %real_cst10 to i8*
  %call11 = tail call i32 @memcmp(i8* %6, i8* bitcast (%struct.realvaluetype* @dconst0 to i8*), i64 24) #5
  %lnot = icmp eq i32 %call11, 0
  %lnot.ext = zext i1 %lnot to i32
  br label %return

sw.bb13:                                          ; preds = %tailrecurse
  %elements = getelementptr inbounds %union.tree_node* %exp.tr, i64 0, i32 0, i32 2
  %7 = bitcast i32* %elements to %union.tree_node**
  %elt.072 = load %union.tree_node** %7, align 8
  %tobool1473 = icmp eq %union.tree_node* %elt.072, null
  br i1 %tobool1473, label %return, label %for.body

for.cond:                                         ; preds = %for.body
  %chain = getelementptr inbounds %union.tree_node* %elt.074, i64 0, i32 0, i32 0, i32 0
  %elt.0 = load %union.tree_node** %chain, align 8
  %tobool14 = icmp eq %union.tree_node* %elt.0, null
  br i1 %tobool14, label %return, label %for.body

for.body:                                         ; preds = %sw.bb13, %for.cond
  %elt.074 = phi %union.tree_node* [ %elt.0, %for.cond ], [ %elt.072, %sw.bb13 ]
  %value = getelementptr inbounds %union.tree_node* %elt.074, i64 0, i32 0, i32 2
  %8 = bitcast i32* %value to %union.tree_node**
  %9 = load %union.tree_node** %8, align 8, !tbaa !53
  %call15 = tail call fastcc i32 @is_zeros_p(%union.tree_node* %9)
  %tobool16 = icmp eq i32 %call15, 0
  br i1 %tobool16, label %return, label %for.cond

sw.bb18:                                          ; preds = %tailrecurse
  %type = getelementptr inbounds %union.tree_node* %exp.tr, i64 0, i32 0, i32 0, i32 1
  %10 = load %union.tree_node** %type, align 8, !tbaa !36
  %tobool20 = icmp eq %union.tree_node* %10, null
  br i1 %tobool20, label %if.end32, label %land.lhs.true

land.lhs.true:                                    ; preds = %sw.bb18
  %code24 = getelementptr inbounds %union.tree_node* %10, i64 0, i32 0, i32 0, i32 2
  %bf.load25 = load i32* %code24, align 8
  %bf.clear26 = and i32 %bf.load25, 255
  %cmp = icmp eq i32 %bf.clear26, 19
  br i1 %cmp, label %if.then27, label %if.end32

if.then27:                                        ; preds = %land.lhs.true
  %operands29 = getelementptr inbounds %union.tree_node* %exp.tr, i64 0, i32 0, i32 2
  %arrayidx30 = getelementptr inbounds i32* %operands29, i64 2
  %11 = bitcast i32* %arrayidx30 to %union.tree_node**
  %12 = load %union.tree_node** %11, align 8, !tbaa !1
  %cmp31 = icmp eq %union.tree_node* %12, null
  %conv = zext i1 %cmp31 to i32
  br label %return

if.end32:                                         ; preds = %sw.bb18, %land.lhs.true
  %operands34 = getelementptr inbounds %union.tree_node* %exp.tr, i64 0, i32 0, i32 2
  %arrayidx35 = getelementptr inbounds i32* %operands34, i64 2
  %13 = bitcast i32* %arrayidx35 to %union.tree_node**
  %elt.176 = load %union.tree_node** %13, align 8
  %tobool3777 = icmp eq %union.tree_node* %elt.176, null
  br i1 %tobool3777, label %return, label %for.body38

for.cond36:                                       ; preds = %for.body38
  %chain47 = getelementptr inbounds %union.tree_node* %elt.178, i64 0, i32 0, i32 0, i32 0
  %elt.1 = load %union.tree_node** %chain47, align 8
  %tobool37 = icmp eq %union.tree_node* %elt.1, null
  br i1 %tobool37, label %return, label %for.body38

for.body38:                                       ; preds = %if.end32, %for.cond36
  %elt.178 = phi %union.tree_node* [ %elt.1, %for.cond36 ], [ %elt.176, %if.end32 ]
  %value40 = getelementptr inbounds %union.tree_node* %elt.178, i64 0, i32 0, i32 2
  %14 = bitcast i32* %value40 to %union.tree_node**
  %15 = load %union.tree_node** %14, align 8, !tbaa !53
  %call41 = tail call fastcc i32 @is_zeros_p(%union.tree_node* %15)
  %tobool42 = icmp eq i32 %call41, 0
  br i1 %tobool42, label %return, label %for.cond36

return:                                           ; preds = %tailrecurse, %for.body38, %for.cond36, %for.body, %for.cond, %if.end32, %sw.bb13, %if.then27, %sw.bb9, %land.end, %sw.bb2
  %retval.0 = phi i32 [ %conv, %if.then27 ], [ %lnot.ext, %sw.bb9 ], [ %land.ext, %land.end ], [ %call3, %sw.bb2 ], [ 1, %sw.bb13 ], [ 1, %if.end32 ], [ 0, %for.body ], [ 1, %for.cond ], [ 0, %for.body38 ], [ 1, %for.cond36 ], [ 0, %tailrecurse ]
  ret i32 %retval.0
}

declare %union.tree_node* @bit_position(%union.tree_node*) #1

declare i64 @int_bit_position(%union.tree_node*) #1

; Function Attrs: nounwind uwtable
define internal fastcc void @store_constructor_field(%struct.rtx_def* %target, i64 %bitsize, i64 %bitpos, i32 %mode, %union.tree_node* %exp, %union.tree_node* %type, i32 %cleared, i32 %alias_set) #0 {
entry:
  %code = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 46
  %rem65 = and i64 %bitpos, 7
  %cmp1 = icmp eq i64 %rem65, 0
  %or.cond = and i1 %cmp, %cmp1
  br i1 %or.cond, label %land.lhs.true2, label %if.else

land.lhs.true2:                                   ; preds = %entry
  %cmp3 = icmp eq i64 %bitpos, 0
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %target, i64 0, i32 0
  %bf.load7.pre = load i32* %.phi.trans.insert, align 8
  %bf.clear5 = and i32 %bf.load7.pre, 65535
  %cmp6 = icmp eq i32 %bf.clear5, 66
  %or.cond71 = or i1 %cmp3, %cmp6
  br i1 %or.cond71, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true2
  %bf.clear8 = and i32 %bf.load7.pre, 65535
  %cmp9 = icmp eq i32 %bf.clear8, 66
  br i1 %cmp9, label %if.then10, label %if.end

if.then10:                                        ; preds = %if.then
  %bf.lshr = lshr i32 %bf.load7.pre, 16
  %bf.clear12 = and i32 %bf.lshr, 255
  %cmp13 = icmp eq i32 %bf.clear12, 51
  br i1 %cmp13, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %if.then10
  %call = tail call i32 @get_mode_alignment(i32 %bf.clear12) #5
  %conv = zext i32 %call to i64
  %rem17 = srem i64 %bitpos, %conv
  %cmp18 = icmp ne i64 %rem17, 0
  %phitmp66 = select i1 %cmp18, i32 51, i32 0
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %if.then10
  %0 = phi i32 [ 51, %if.then10 ], [ %phitmp66, %lor.rhs ]
  %div = sdiv i64 %bitpos, 8
  %call20 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %target, i32 %0, i64 %div, i32 1, i32 1) #5
  %.phi.trans.insert69 = getelementptr inbounds %struct.rtx_def* %call20, i64 0, i32 0
  %bf.load21.pre = load i32* %.phi.trans.insert69, align 8
  br label %if.end

if.end:                                           ; preds = %lor.end, %if.then
  %bf.load21 = phi i32 [ %bf.load21.pre, %lor.end ], [ %bf.load7.pre, %if.then ]
  %target.addr.0 = phi %struct.rtx_def* [ %call20, %lor.end ], [ %target, %if.then ]
  %1 = and i32 %bf.load21, 16842751
  %2 = icmp eq i32 %1, 66
  br i1 %2, label %land.lhs.true29, label %if.end41

land.lhs.true29:                                  ; preds = %if.end
  %arrayidx = getelementptr inbounds %struct.rtx_def* %target.addr.0, i64 0, i32 1, i64 1
  %rtmem = bitcast %union.rtunion_def* %arrayidx to %struct.mem_attrs**
  %3 = load %struct.mem_attrs** %rtmem, align 8, !tbaa !1
  %cmp30 = icmp eq %struct.mem_attrs* %3, null
  br i1 %cmp30, label %if.end41, label %cond.false

cond.false:                                       ; preds = %land.lhs.true29
  %alias = getelementptr inbounds %struct.mem_attrs* %3, i64 0, i32 0
  %4 = load i64* %alias, align 8, !tbaa !79
  %phitmp = icmp eq i64 %4, 0
  br i1 %phitmp, label %if.end41, label %if.then38

if.then38:                                        ; preds = %cond.false
  %call39 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %target.addr.0) #5
  %conv40 = sext i32 %alias_set to i64
  tail call void @set_mem_alias_set(%struct.rtx_def* %call39, i64 %conv40) #5
  br label %if.end41

if.end41:                                         ; preds = %cond.false, %land.lhs.true29, %if.then38, %if.end
  %target.addr.1 = phi %struct.rtx_def* [ %call39, %if.then38 ], [ %target.addr.0, %cond.false ], [ %target.addr.0, %if.end ], [ %target.addr.0, %land.lhs.true29 ]
  %div42 = lshr i64 %bitsize, 3
  tail call fastcc void @store_constructor(%union.tree_node* %exp, %struct.rtx_def* %target.addr.1, i32 %cleared, i64 %div42)
  br label %if.end44

if.else:                                          ; preds = %land.lhs.true2, %entry
  %call43 = tail call fastcc %struct.rtx_def* @store_field(%struct.rtx_def* %target, i64 %bitsize, i64 %bitpos, i32 %mode, %union.tree_node* %exp, i32 0, i32 0, %union.tree_node* %type, i32 %alias_set)
  br label %if.end44

if.end44:                                         ; preds = %if.else, %if.end41
  ret void
}

declare %union.tree_node* @get_set_constructor_bits(%union.tree_node*, i8*, i32) #1

declare %struct.rtx_def* @gen_rtx_fmt_s(i32, i32, i8*) #1

; Function Attrs: nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) #7

declare i32 @preserve_subexpressions_p() #1

; Function Attrs: nounwind readonly uwtable
define internal %struct.rtx_def* @clear_by_pieces_1(i8* nocapture readnone %data, i64 %offset, i32 %mode) #4 {
entry:
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  ret %struct.rtx_def* %0
}

declare %struct.rtx_def* @adjust_automodify_address_1(%struct.rtx_def*, i32, %struct.rtx_def*, i64, i32) #1

attributes #0 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { nounwind readnone uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readonly "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind }

!llvm.ident = !{!0}

!0 = metadata !{metadata !"clang version 3.5 (trunk)"}
!1 = metadata !{metadata !2, metadata !2, i64 0}
!2 = metadata !{metadata !"any pointer", metadata !3, i64 0}
!3 = metadata !{metadata !"omnipotent char", metadata !4, i64 0}
!4 = metadata !{metadata !"Simple C/C++ TBAA"}
!5 = metadata !{metadata !3, metadata !3, i64 0}
!6 = metadata !{metadata !7, metadata !2, i64 16}
!7 = metadata !{metadata !"function", metadata !2, i64 0, metadata !2, i64 8, metadata !2, i64 16, metadata !2, i64 24, metadata !2, i64 32, metadata !2, i64 40, metadata !2, i64 48, metadata !2, i64 56, metadata !8, i64 64, metadata !8, i64 68, metadata !8, i64 72, metadata !8, i64 76, metadata !2, i64 80, metadata !9, i64 88, metadata !2, i64 120, metadata !2, i64 128, metadata !2, i64 136, metadata !2, i64 144, metadata !8, i64 152, metadata !2, i64 160, metadata !2, i64 168, metadata !2, i64 176, metadata !2, i64 184, metadata !2, i64 192, metadata !2, i64 200, metadata !2, i64 208, metadata !2, i64 216, metadata !2, i64 224, metadata !2, i64 232, metadata !2, i64 240, metadata !2, i64 248, metadata !2, i64 256, metadata !10, i64 264, metadata !2, i64 272, metadata !2, i64 280, metadata !2, i64 288, metadata !2, i64 296, metadata !8, i64 304, metadata !2, i64 312, metadata !2, i64 320, metadata !8, i64 328, metadata !8, i64 332, metadata !8, i64 336, metadata !2, i64 344, metadata !8, i64 352, metadata !8, i64 356, metadata !2, i64 360, metadata !2, i64 368, metadata !2, i64 376, metadata !8, i64 384, metadata !8, i64 388, metadata !2, i64 392, metadata !8, i64 400, metadata !8, i64 404, metadata !2, i64 408, metadata !2, i64 416, metadata !8, i64 424, metadata !8, i64 424, metadata !8, i64 424, metadata !8, i64 424, metadata !8, i64 424, metadata !8, i64 424, metadata !8, i64 424, metadata !8, i64 424, metadata !8, i64 425, metadata !8, i64 425, metadata !8, i64 425, metadata !8, i64 425, metadata !8, i64 425, metadata !8, i64 425, metadata !8, i64 425, metadata !8, i64 425, metadata !8, i64 426, metadata !8, i64 426, metadata !8, i64 426, metadata !8, i64 426, metadata !8, i64 426, metadata !8, i64 426, metadata !8, i64 426, metadata !8, i64 426}
!8 = metadata !{metadata !"int", metadata !3, i64 0}
!9 = metadata !{metadata !"ix86_args", metadata !8, i64 0, metadata !8, i64 4, metadata !8, i64 8, metadata !8, i64 12, metadata !8, i64 16, metadata !8, i64 20, metadata !8, i64 24}
!10 = metadata !{metadata !"long long", metadata !3, i64 0}
!11 = metadata !{metadata !12, metadata !2, i64 40}
!12 = metadata !{metadata !"expr_status", metadata !8, i64 0, metadata !8, i64 4, metadata !8, i64 8, metadata !2, i64 16, metadata !2, i64 24, metadata !2, i64 32, metadata !2, i64 40}
!13 = metadata !{metadata !12, metadata !8, i64 0}
!14 = metadata !{metadata !12, metadata !8, i64 8}
!15 = metadata !{metadata !12, metadata !8, i64 4}
!16 = metadata !{metadata !12, metadata !2, i64 16}
!17 = metadata !{metadata !12, metadata !2, i64 24}
!18 = metadata !{metadata !12, metadata !2, i64 32}
!19 = metadata !{metadata !20, metadata !20, i64 0}
!20 = metadata !{metadata !"short", metadata !3, i64 0}
!21 = metadata !{metadata !8, metadata !8, i64 0}
!22 = metadata !{metadata !10, metadata !10, i64 0}
!23 = metadata !{metadata !24, metadata !3, i64 0}
!24 = metadata !{metadata !"", metadata !3, i64 0, metadata !2, i64 8}
!25 = metadata !{metadata !26, metadata !2, i64 16}
!26 = metadata !{metadata !"insn_data", metadata !2, i64 0, metadata !2, i64 8, metadata !2, i64 16, metadata !2, i64 24, metadata !3, i64 32, metadata !3, i64 33, metadata !3, i64 34, metadata !3, i64 35}
!27 = metadata !{metadata !28, metadata !8, i64 32}
!28 = metadata !{metadata !"", metadata !10, i64 0, metadata !2, i64 8, metadata !2, i64 16, metadata !2, i64 24, metadata !8, i64 32}
!29 = metadata !{metadata !30, metadata !8, i64 40}
!30 = metadata !{metadata !"processor_costs", metadata !8, i64 0, metadata !8, i64 4, metadata !8, i64 8, metadata !8, i64 12, metadata !8, i64 16, metadata !8, i64 20, metadata !8, i64 24, metadata !8, i64 28, metadata !8, i64 32, metadata !8, i64 36, metadata !8, i64 40, metadata !8, i64 44, metadata !3, i64 48, metadata !3, i64 60, metadata !8, i64 72, metadata !3, i64 76, metadata !3, i64 88, metadata !8, i64 100, metadata !3, i64 104, metadata !3, i64 112, metadata !8, i64 120, metadata !3, i64 124, metadata !3, i64 136, metadata !8, i64 148, metadata !8, i64 152, metadata !8, i64 156}
!31 = metadata !{metadata !26, metadata !2, i64 24}
!32 = metadata !{metadata !33, metadata !2, i64 0}
!33 = metadata !{metadata !"insn_operand_data", metadata !2, i64 0, metadata !2, i64 8, metadata !3, i64 16, metadata !3, i64 18, metadata !3, i64 19}
!34 = metadata !{metadata !35, metadata !2, i64 0}
!35 = metadata !{metadata !"tree_common", metadata !2, i64 0, metadata !2, i64 8, metadata !3, i64 16, metadata !8, i64 17, metadata !8, i64 17, metadata !8, i64 17, metadata !8, i64 17, metadata !8, i64 17, metadata !8, i64 17, metadata !8, i64 17, metadata !8, i64 17, metadata !8, i64 18, metadata !8, i64 18, metadata !8, i64 18, metadata !8, i64 18, metadata !8, i64 18, metadata !8, i64 18, metadata !8, i64 18, metadata !8, i64 18, metadata !8, i64 19, metadata !8, i64 19, metadata !8, i64 19, metadata !8, i64 19, metadata !8, i64 19, metadata !8, i64 19, metadata !8, i64 19, metadata !8, i64 19}
!36 = metadata !{metadata !35, metadata !2, i64 8}
!37 = metadata !{metadata !38, metadata !2, i64 144}
!38 = metadata !{metadata !"tree_decl", metadata !35, i64 0, metadata !2, i64 24, metadata !8, i64 32, metadata !8, i64 36, metadata !2, i64 40, metadata !3, i64 48, metadata !8, i64 49, metadata !8, i64 49, metadata !8, i64 49, metadata !8, i64 49, metadata !8, i64 49, metadata !8, i64 49, metadata !8, i64 49, metadata !8, i64 49, metadata !8, i64 50, metadata !8, i64 50, metadata !8, i64 50, metadata !8, i64 50, metadata !8, i64 50, metadata !8, i64 50, metadata !8, i64 50, metadata !8, i64 50, metadata !8, i64 51, metadata !8, i64 51, metadata !8, i64 51, metadata !8, i64 51, metadata !8, i64 51, metadata !3, i64 51, metadata !8, i64 51, metadata !8, i64 52, metadata !8, i64 52, metadata !8, i64 52, metadata !8, i64 52, metadata !8, i64 52, metadata !8, i64 52, metadata !8, i64 52, metadata !8, i64 53, metadata !8, i64 53, metadata !8, i64 53, metadata !8, i64 53, metadata !8, i64 53, metadata !3, i64 56, metadata !2, i64 64, metadata !2, i64 72, metadata !2, i64 80, metadata !2, i64 88, metadata !2, i64 96, metadata !2, i64 104, metadata !2, i64 112, metadata !2, i64 120, metadata !2, i64 128, metadata !2, i64 136, metadata !2, i64 144, metadata !2, i64 152, metadata !3, i64 160, metadata !2, i64 168, metadata !2, i64 176, metadata !2, i64 184, metadata !10, i64 192, metadata !2, i64 200}
!39 = metadata !{metadata !38, metadata !2, i64 40}
!40 = metadata !{metadata !41, metadata !2, i64 32}
!41 = metadata !{metadata !"tree_type", metadata !35, i64 0, metadata !2, i64 24, metadata !2, i64 32, metadata !2, i64 40, metadata !2, i64 48, metadata !8, i64 56, metadata !8, i64 60, metadata !3, i64 61, metadata !8, i64 62, metadata !8, i64 62, metadata !8, i64 62, metadata !8, i64 62, metadata !8, i64 62, metadata !8, i64 62, metadata !8, i64 62, metadata !8, i64 63, metadata !8, i64 63, metadata !8, i64 63, metadata !8, i64 63, metadata !8, i64 63, metadata !8, i64 63, metadata !8, i64 63, metadata !8, i64 63, metadata !8, i64 64, metadata !2, i64 72, metadata !2, i64 80, metadata !3, i64 88, metadata !2, i64 96, metadata !2, i64 104, metadata !2, i64 112, metadata !2, i64 120, metadata !2, i64 128, metadata !2, i64 136, metadata !2, i64 144, metadata !10, i64 152, metadata !2, i64 160}
!42 = metadata !{metadata !43, metadata !10, i64 32}
!43 = metadata !{metadata !"tree_int_cst", metadata !35, i64 0, metadata !2, i64 24, metadata !44, i64 32}
!44 = metadata !{metadata !"", metadata !10, i64 0, metadata !10, i64 8}
!45 = metadata !{metadata !43, metadata !10, i64 40}
!46 = metadata !{metadata !38, metadata !2, i64 104}
!47 = metadata !{metadata !48, metadata !2, i64 32}
!48 = metadata !{metadata !"tree_identifier", metadata !35, i64 0, metadata !49, i64 24}
!49 = metadata !{metadata !"ht_identifier", metadata !8, i64 0, metadata !2, i64 8}
!50 = metadata !{metadata !51, metadata !8, i64 24}
!51 = metadata !{metadata !"tree_exp", metadata !35, i64 0, metadata !8, i64 24, metadata !3, i64 32}
!52 = metadata !{metadata !7, metadata !2, i64 208}
!53 = metadata !{metadata !54, metadata !2, i64 32}
!54 = metadata !{metadata !"tree_list", metadata !35, i64 0, metadata !2, i64 24, metadata !2, i64 32}
!55 = metadata !{metadata !41, metadata !2, i64 40}
!56 = metadata !{metadata !57, metadata !8, i64 32}
!57 = metadata !{metadata !"tree_string", metadata !35, i64 0, metadata !2, i64 24, metadata !8, i64 32, metadata !2, i64 40}
!58 = metadata !{metadata !41, metadata !2, i64 104}
!59 = metadata !{metadata !41, metadata !2, i64 112}
!60 = metadata !{metadata !7, metadata !8, i64 328}
!61 = metadata !{metadata !7, metadata !8, i64 336}
!62 = metadata !{metadata !41, metadata !8, i64 64}
!63 = metadata !{metadata !64, metadata !8, i64 0}
!64 = metadata !{metadata !"rtvec_def", metadata !8, i64 0, metadata !3, i64 8}
!65 = metadata !{metadata !66, metadata !2, i64 40}
!66 = metadata !{metadata !"store_by_pieces", metadata !2, i64 0, metadata !2, i64 8, metadata !8, i64 16, metadata !8, i64 20, metadata !10, i64 24, metadata !10, i64 32, metadata !2, i64 40, metadata !2, i64 48, metadata !8, i64 56}
!67 = metadata !{metadata !66, metadata !2, i64 48}
!68 = metadata !{metadata !66, metadata !10, i64 24}
!69 = metadata !{metadata !66, metadata !2, i64 0}
!70 = metadata !{metadata !66, metadata !10, i64 32}
!71 = metadata !{metadata !66, metadata !2, i64 8}
!72 = metadata !{metadata !66, metadata !8, i64 16}
!73 = metadata !{metadata !66, metadata !8, i64 20}
!74 = metadata !{metadata !66, metadata !8, i64 56}
!75 = metadata !{metadata !7, metadata !2, i64 136}
!76 = metadata !{metadata !28, metadata !2, i64 8}
!77 = metadata !{metadata !28, metadata !2, i64 16}
!78 = metadata !{metadata !38, metadata !2, i64 88}
!79 = metadata !{metadata !28, metadata !10, i64 0}
!80 = metadata !{metadata !41, metadata !2, i64 128}
!81 = metadata !{metadata !82, metadata !2, i64 80}
!82 = metadata !{metadata !"lang_hooks", metadata !2, i64 0, metadata !83, i64 8, metadata !2, i64 16, metadata !2, i64 24, metadata !2, i64 32, metadata !2, i64 40, metadata !2, i64 48, metadata !2, i64 56, metadata !2, i64 64, metadata !2, i64 72, metadata !2, i64 80, metadata !2, i64 88, metadata !84, i64 96, metadata !2, i64 104, metadata !2, i64 112, metadata !2, i64 120, metadata !2, i64 128, metadata !2, i64 136, metadata !2, i64 144, metadata !85, i64 152, metadata !86, i64 240}
!83 = metadata !{metadata !"long", metadata !3, i64 0}
!84 = metadata !{metadata !"_Bool", metadata !3, i64 0}
!85 = metadata !{metadata !"lang_hooks_for_tree_inlining", metadata !2, i64 0, metadata !2, i64 8, metadata !2, i64 16, metadata !2, i64 24, metadata !2, i64 32, metadata !2, i64 40, metadata !2, i64 48, metadata !2, i64 56, metadata !2, i64 64, metadata !2, i64 72, metadata !2, i64 80}
!86 = metadata !{metadata !"lang_hooks_for_tree_dump", metadata !2, i64 0, metadata !2, i64 8}
!87 = metadata !{metadata !41, metadata !2, i64 24}
!88 = metadata !{metadata !89, metadata !2, i64 32}
!89 = metadata !{metadata !"tree_complex", metadata !35, i64 0, metadata !2, i64 24, metadata !2, i64 32, metadata !2, i64 40}
!90 = metadata !{metadata !89, metadata !2, i64 40}
