; ModuleID = 'cppfiles.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type opaque
%struct.cpp_reader = type { %struct.cpp_buffer*, %struct.lexer_state, %struct.line_maps, %struct.line_map*, i32, i32, %struct._cpp_buff*, %struct._cpp_buff*, %struct._cpp_buff*, %struct.cpp_context, %struct.cpp_context*, %struct.directive*, %struct.cpp_hashnode*, %struct.cpp_hashnode*, i8, %struct.cpp_token*, %struct.tokenrun, %struct.tokenrun*, i32, i32, i32, i32, i32, i8*, i32, %struct.splay_tree_s*, i32, %struct.cpp_token, %struct.cpp_token, %struct.cpp_token, %struct.cpp_token, %struct.deps*, %struct.obstack, %struct.obstack, %struct.pragma_entry*, %struct.cpp_callbacks, %struct.ht*, %struct.cpp_options, %struct.spec_nodes, i8, i8 }
%struct.cpp_buffer = type { i8*, i8*, i8*, i8*, %struct.cpp_buffer*, i8*, %struct.include_file*, %struct.if_stack*, i32, i8, i8*, i8, i8, i8, i8, %struct.search_path }
%struct.include_file = type { i8*, %struct.cpp_hashnode*, %struct.search_path*, i8*, %struct.stat, i32, i32, i16, i16, i8 }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.if_stack = type opaque
%struct.search_path = type { %struct.search_path*, i8*, i32, i64, i64, i32, %struct.file_name_map* }
%struct.file_name_map = type { %struct.file_name_map*, i8*, i8* }
%struct.lexer_state = type { i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.line_maps = type { %struct.line_map*, i32, i32, i32, i32, i8 }
%struct.line_map = type { i8*, i32, i32, i32, i8, i8 }
%struct._cpp_buff = type { %struct._cpp_buff*, i8*, i8*, i8* }
%struct.cpp_context = type { %struct.cpp_context*, %struct.cpp_context*, %union.utoken, %union.utoken, %struct._cpp_buff*, %struct.cpp_hashnode*, i8 }
%union.utoken = type { %struct.cpp_token* }
%struct.directive = type opaque
%struct.cpp_hashnode = type { %struct.ht_identifier, i16, i8, i8, i8, i8, %union.anon }
%struct.ht_identifier = type { i32, i8* }
%union.anon = type { %struct.cpp_macro* }
%struct.cpp_macro = type opaque
%struct.tokenrun = type { %struct.tokenrun*, %struct.tokenrun*, %struct.cpp_token*, %struct.cpp_token* }
%struct.splay_tree_s = type { %struct.splay_tree_node_s*, i32 (i64, i64)*, void (i64)*, void (i64)*, i8* (i32, i8*)*, void (i8*, i8*)*, i8* }
%struct.splay_tree_node_s = type { i64, i64, %struct.splay_tree_node_s*, %struct.splay_tree_node_s* }
%struct.cpp_token = type { i32, i16, i8, i8, %union.anon.0 }
%union.anon.0 = type { %struct.cpp_string }
%struct.cpp_string = type { i32, i8* }
%struct.deps = type opaque
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.pragma_entry = type opaque
%struct.cpp_callbacks = type { void (%struct.cpp_reader*, %struct.cpp_token*, i32)*, void (%struct.cpp_reader*, %struct.line_map*)*, void (%struct.cpp_reader*, i32, i8*, %struct.cpp_token*)*, void (%struct.cpp_reader*, i32, %struct.cpp_hashnode*)*, void (%struct.cpp_reader*, i32, %struct.cpp_hashnode*)*, void (%struct.cpp_reader*, i32, %struct.cpp_string*)*, void (%struct.cpp_reader*, i32)* }
%struct.ht = type { %struct.obstack, %struct.ht_identifier**, %struct.ht_identifier* (%struct.ht*)*, i32, i32, %struct.cpp_reader*, i32, i32 }
%struct.cpp_options = type { i8*, i8*, i32, %struct.cpp_pending*, i8*, %struct.search_path*, %struct.search_path*, %struct.file_name_map_list*, i8*, i32, i8*, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.cpp_pending = type opaque
%struct.file_name_map_list = type { %struct.file_name_map_list*, i8*, %struct.file_name_map* }
%struct.spec_nodes = type { %struct.cpp_hashnode*, %struct.cpp_hashnode*, %struct.cpp_hashnode*, %struct.cpp_hashnode*, %struct.cpp_hashnode* }

@.str = private unnamed_addr constant [37 x i8] c"absolute file name in remap_filename\00", align 1
@.str2 = private unnamed_addr constant [11 x i8] c"header.gcc\00", align 1
@.str3 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@_sch_istable = external constant [256 x i16]
@.str4 = private unnamed_addr constant [8 x i8] c"<stdin>\00", align 1
@.str6 = private unnamed_addr constant [28 x i8] c"%s is shorter than expected\00", align 1
@.str7 = private unnamed_addr constant [21 x i8] c"%s is a block device\00", align 1
@.str8 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str9 = private unnamed_addr constant [36 x i8] c"no include path in which to find %s\00", align 1
@.str10 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str11 = private unnamed_addr constant [44 x i8] c"Multiple include guards may be useful for:\0A\00", align 1
@stderr = external constant %struct._IO_FILE*

; Function Attrs: nounwind uwtable
define void @_cpp_init_includes(%struct.cpp_reader* nocapture %pfile) #0 {
entry:
  %call = tail call %struct.splay_tree_s* @splay_tree_new(i32 (i64, i64)* bitcast (i32 (i8*, i8*)* @strcmp to i32 (i64, i64)*), void (i64)* bitcast (void (i8*)* @free to void (i64)*), void (i64)* @destroy_node) #4
  %all_include_files = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 25
  store %struct.splay_tree_s* %call, %struct.splay_tree_s** %all_include_files, align 8, !tbaa !1
  ret void
}

declare %struct.splay_tree_s* @splay_tree_new(i32 (i64, i64)*, void (i64)*, void (i64)*) #1

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) #3

; Function Attrs: nounwind uwtable
define internal void @destroy_node(i64 %v) #0 {
entry:
  %tobool = icmp eq i64 %v, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %0 = inttoptr i64 %v to %struct.include_file*
  %buffer.i = getelementptr inbounds %struct.include_file* %0, i64 0, i32 3
  %1 = load i8** %buffer.i, align 8, !tbaa !19
  %tobool.i = icmp eq i8* %1, null
  br i1 %tobool.i, label %purge_cache.exit, label %if.then.i

if.then.i:                                        ; preds = %if.then
  tail call void @free(i8* %1) #4
  store i8* null, i8** %buffer.i, align 8, !tbaa !19
  br label %purge_cache.exit

purge_cache.exit:                                 ; preds = %if.then, %if.then.i
  %2 = inttoptr i64 %v to i8*
  tail call void @free(i8* %2)
  br label %if.end

if.end:                                           ; preds = %entry, %purge_cache.exit
  ret void
}

; Function Attrs: nounwind uwtable
define void @_cpp_cleanup_includes(%struct.cpp_reader* nocapture readonly %pfile) #0 {
entry:
  %all_include_files = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 25
  %0 = load %struct.splay_tree_s** %all_include_files, align 8, !tbaa !1
  tail call void @splay_tree_delete(%struct.splay_tree_s* %0) #4
  ret void
}

declare void @splay_tree_delete(%struct.splay_tree_s*) #1

; Function Attrs: nounwind uwtable
define void @_cpp_never_reread(%struct.include_file* nocapture %file) #0 {
entry:
  %cmacro = getelementptr inbounds %struct.include_file* %file, i64 0, i32 1
  store %struct.cpp_hashnode* inttoptr (i64 -1 to %struct.cpp_hashnode*), %struct.cpp_hashnode** %cmacro, align 8, !tbaa !23
  ret void
}

; Function Attrs: nounwind uwtable
define void @_cpp_fake_include(%struct.cpp_reader* nocapture readonly %pfile, i8* %fname) #0 {
entry:
  %call = tail call fastcc %struct.splay_tree_node_s* @find_or_create_entry(%struct.cpp_reader* %pfile, i8* %fname)
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.splay_tree_node_s* @find_or_create_entry(%struct.cpp_reader* nocapture readonly %pfile, i8* %fname) #0 {
entry:
  %call = tail call noalias i8* @xstrdup(i8* %fname) #4
  %call1 = tail call i8* @_cpp_simplify_pathname(i8* %call)
  %all_include_files = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 25
  %0 = load %struct.splay_tree_s** %all_include_files, align 8, !tbaa !1
  %1 = ptrtoint i8* %call to i64
  %call2 = tail call %struct.splay_tree_node_s* @splay_tree_lookup(%struct.splay_tree_s* %0, i64 %1) #4
  %tobool = icmp eq %struct.splay_tree_node_s* %call2, null
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  tail call void @free(i8* %call)
  br label %if.end

if.else:                                          ; preds = %entry
  %call3 = tail call noalias i8* @xcalloc(i64 1, i64 192) #4
  %name4 = bitcast i8* %call3 to i8**
  store i8* %call, i8** %name4, align 8, !tbaa !24
  %call5 = tail call i32* @__errno_location() #6
  %2 = load i32* %call5, align 4, !tbaa !25
  %err_no = getelementptr inbounds i8* %call3, i64 180
  %3 = bitcast i8* %err_no to i32*
  store i32 %2, i32* %3, align 4, !tbaa !26
  %4 = load %struct.splay_tree_s** %all_include_files, align 8, !tbaa !1
  %5 = ptrtoint i8* %call3 to i64
  %call8 = tail call %struct.splay_tree_node_s* @splay_tree_insert(%struct.splay_tree_s* %4, i64 %1, i64 %5) #4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %node.0 = phi %struct.splay_tree_node_s* [ %call2, %if.then ], [ %call8, %if.else ]
  ret %struct.splay_tree_node_s* %node.0
}

; Function Attrs: nounwind uwtable
define i32 @cpp_included(%struct.cpp_reader* %pfile, i8* %fname) #0 {
entry:
  %0 = load i8* %fname, align 1, !tbaa !27
  switch i8 %0, label %if.end [
    i8 47, label %if.then
    i8 36, label %if.then
  ]

if.then:                                          ; preds = %entry, %entry
  %all_include_files = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 25
  %1 = load %struct.splay_tree_s** %all_include_files, align 8, !tbaa !1
  %2 = ptrtoint i8* %fname to i64
  %call = call %struct.splay_tree_node_s* @splay_tree_lookup(%struct.splay_tree_s* %1, i64 %2) #4
  %tobool = icmp eq %struct.splay_tree_node_s* %call, null
  br i1 %tobool, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %if.then
  %value = getelementptr inbounds %struct.splay_tree_node_s* %call, i64 0, i32 1
  %3 = load i64* %value, align 8, !tbaa !28
  %tobool6 = icmp ne i64 %3, 0
  br label %land.end

land.end:                                         ; preds = %if.then, %land.rhs
  %4 = phi i1 [ false, %if.then ], [ %tobool6, %land.rhs ]
  %land.ext = zext i1 %4 to i32
  br label %return

if.end:                                           ; preds = %entry
  %call7 = call i64 @strlen(i8* %fname) #4
  %max_include_len = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 26
  %5 = load i32* %max_include_len, align 4, !tbaa !30
  %conv8 = zext i32 %5 to i64
  %add = add i64 %call7, 2
  %add9 = add i64 %add, %conv8
  %6 = alloca i8, i64 %add9, align 1
  %quote_include = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 5
  %path.054 = load %struct.search_path** %quote_include, align 8
  %tobool1055 = icmp eq %struct.search_path* %path.054, null
  br i1 %tobool1055, label %return, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.end
  %remap = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 36
  %all_include_files25 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 25
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %path.056 = phi %struct.search_path* [ %path.054, %for.body.lr.ph ], [ %path.0, %for.inc ]
  %name11 = getelementptr inbounds %struct.search_path* %path.056, i64 0, i32 1
  %7 = load i8** %name11, align 8, !tbaa !31
  %len = getelementptr inbounds %struct.search_path* %path.056, i64 0, i32 2
  %8 = load i32* %len, align 4, !tbaa !33
  %conv12 = zext i32 %8 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6, i8* %7, i64 %conv12, i32 1, i1 false)
  %9 = load i32* %len, align 4, !tbaa !33
  %idxprom = zext i32 %9 to i64
  %arrayidx14 = getelementptr inbounds i8* %6, i64 %idxprom
  store i8 47, i8* %arrayidx14, align 1, !tbaa !27
  %10 = load i32* %len, align 4, !tbaa !33
  %add16 = add i32 %10, 1
  %idxprom17 = zext i32 %add16 to i64
  %arrayidx18 = getelementptr inbounds i8* %6, i64 %idxprom17
  %call19 = call i8* @strcpy(i8* %arrayidx18, i8* %fname) #4
  %11 = load i8* %remap, align 1, !tbaa !34
  %tobool21 = icmp eq i8 %11, 0
  br i1 %tobool21, label %if.end24, label %if.then22

if.then22:                                        ; preds = %for.body
  %call23 = call fastcc i8* @remap_filename(%struct.cpp_reader* %pfile, i8* %6, %struct.search_path* %path.056)
  br label %if.end24

if.end24:                                         ; preds = %for.body, %if.then22
  %n.0 = phi i8* [ %call23, %if.then22 ], [ %6, %for.body ]
  %12 = load %struct.splay_tree_s** %all_include_files25, align 8, !tbaa !1
  %13 = ptrtoint i8* %n.0 to i64
  %call26 = call %struct.splay_tree_node_s* @splay_tree_lookup(%struct.splay_tree_s* %12, i64 %13) #4
  %tobool27 = icmp eq %struct.splay_tree_node_s* %call26, null
  br i1 %tobool27, label %for.inc, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end24
  %value28 = getelementptr inbounds %struct.splay_tree_node_s* %call26, i64 0, i32 1
  %14 = load i64* %value28, align 8, !tbaa !28
  %tobool29 = icmp eq i64 %14, 0
  br i1 %tobool29, label %for.inc, label %return

for.inc:                                          ; preds = %land.lhs.true, %if.end24
  %next = getelementptr inbounds %struct.search_path* %path.056, i64 0, i32 0
  %path.0 = load %struct.search_path** %next, align 8
  %tobool10 = icmp eq %struct.search_path* %path.0, null
  br i1 %tobool10, label %return, label %for.body

return:                                           ; preds = %land.lhs.true, %for.inc, %if.end, %land.end
  %retval.0 = phi i32 [ %land.ext, %land.end ], [ 0, %if.end ], [ 1, %land.lhs.true ], [ 0, %for.inc ]
  ret i32 %retval.0
}

declare %struct.splay_tree_node_s* @splay_tree_lookup(%struct.splay_tree_s*, i64) #1

; Function Attrs: nounwind readonly
declare i64 @strlen(i8* nocapture) #2

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #4

; Function Attrs: nounwind
declare i8* @strcpy(i8*, i8* nocapture readonly) #3

; Function Attrs: nounwind uwtable
define internal fastcc i8* @remap_filename(%struct.cpp_reader* %pfile, i8* %name, %struct.search_path* nocapture %loc) #0 {
entry:
  %name_map = getelementptr inbounds %struct.search_path* %loc, i64 0, i32 6
  %0 = load %struct.file_name_map** %name_map, align 8, !tbaa !35
  %tobool = icmp eq %struct.file_name_map* %0, null
  %len = getelementptr inbounds %struct.search_path* %loc, i64 0, i32 2
  br i1 %tobool, label %if.then, label %for.body.lr.ph

if.then:                                          ; preds = %entry
  %1 = load i32* %len, align 4, !tbaa !33
  %add = add i32 %1, 1
  %conv = zext i32 %add to i64
  %2 = alloca i8, i64 %conv, align 1
  %name1 = getelementptr inbounds %struct.search_path* %loc, i64 0, i32 1
  %3 = load i8** %name1, align 8, !tbaa !31
  %conv3 = zext i32 %1 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %2, i8* %3, i64 %conv3, i32 1, i1 false)
  %arrayidx = getelementptr inbounds i8* %2, i64 %conv3
  store i8 0, i8* %arrayidx, align 1, !tbaa !27
  %call = call fastcc %struct.file_name_map* @read_name_map(%struct.cpp_reader* %pfile, i8* %2)
  store %struct.file_name_map* %call, %struct.file_name_map** %name_map, align 8, !tbaa !35
  %tobool7 = icmp eq %struct.file_name_map* %call, null
  br i1 %tobool7, label %return, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry, %if.then
  %map.085.ph = phi %struct.file_name_map* [ %call, %if.then ], [ %0, %entry ]
  %4 = load i32* %len, align 4, !tbaa !33
  %idx.ext91 = zext i32 %4 to i64
  %add.ptr.sum92 = add i64 %idx.ext91, 1
  %add.ptr1193 = getelementptr inbounds i8* %name, i64 %add.ptr.sum92
  br label %for.body

for.cond:                                         ; preds = %for.body
  %map_next = getelementptr inbounds %struct.file_name_map* %map.087, i64 0, i32 0
  %map.0 = load %struct.file_name_map** %map_next, align 8
  %tobool13 = icmp eq %struct.file_name_map* %map.0, null
  br i1 %tobool13, label %for.end, label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %map.087 = phi %struct.file_name_map* [ %map.085.ph, %for.body.lr.ph ], [ %map.0, %for.cond ]
  %map_from = getelementptr inbounds %struct.file_name_map* %map.087, i64 0, i32 1
  %5 = load i8** %map_from, align 8, !tbaa !36
  %call14 = call i32 @strcmp(i8* %5, i8* %add.ptr1193) #4
  %tobool15 = icmp eq i32 %call14, 0
  br i1 %tobool15, label %if.then16, label %for.cond

if.then16:                                        ; preds = %for.body
  %map_to = getelementptr inbounds %struct.file_name_map* %map.087, i64 0, i32 2
  %6 = load i8** %map_to, align 8, !tbaa !38
  br label %return

for.end:                                          ; preds = %for.cond
  %call18 = call i8* @strrchr(i8* %name, i32 47) #4
  %tobool19 = icmp eq i8* %call18, null
  br i1 %tobool19, label %return, label %if.end21

if.end21:                                         ; preds = %for.end
  %cmp = icmp eq i8* %call18, %name
  br i1 %cmp, label %if.then23, label %if.end24

if.then23:                                        ; preds = %if.end21
  call void (%struct.cpp_reader*, i8*, ...)* @cpp_ice(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([37 x i8]* @.str, i64 0, i64 0)) #4
  br label %if.end24

if.end24:                                         ; preds = %if.then23, %if.end21
  %sub.ptr.lhs.cast = ptrtoint i8* %call18 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %name to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %add25 = add nsw i64 %sub.ptr.sub, 1
  %7 = alloca i8, i64 %add25, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %7, i8* %name, i64 %sub.ptr.sub, i32 1, i1 false)
  %arrayidx32 = getelementptr inbounds i8* %7, i64 %sub.ptr.sub
  store i8 0, i8* %arrayidx32, align 1, !tbaa !27
  %add.ptr33 = getelementptr inbounds i8* %call18, i64 1
  %call34 = call fastcc %struct.file_name_map* @read_name_map(%struct.cpp_reader* %pfile, i8* %7)
  %tobool3683 = icmp eq %struct.file_name_map* %call34, null
  br i1 %tobool3683, label %return, label %for.body37

for.body37:                                       ; preds = %if.end24, %for.inc44
  %map.184 = phi %struct.file_name_map* [ %10, %for.inc44 ], [ %call34, %if.end24 ]
  %map_from38 = getelementptr inbounds %struct.file_name_map* %map.184, i64 0, i32 1
  %8 = load i8** %map_from38, align 8, !tbaa !36
  %call39 = call i32 @strcmp(i8* %8, i8* %add.ptr33) #4
  %tobool40 = icmp eq i32 %call39, 0
  br i1 %tobool40, label %if.then41, label %for.inc44

if.then41:                                        ; preds = %for.body37
  %map_to42 = getelementptr inbounds %struct.file_name_map* %map.184, i64 0, i32 2
  %9 = load i8** %map_to42, align 8, !tbaa !38
  br label %return

for.inc44:                                        ; preds = %for.body37
  %map_next45 = getelementptr inbounds %struct.file_name_map* %map.184, i64 0, i32 0
  %10 = load %struct.file_name_map** %map_next45, align 8, !tbaa !39
  %tobool36 = icmp eq %struct.file_name_map* %10, null
  br i1 %tobool36, label %return, label %for.body37

return:                                           ; preds = %for.inc44, %if.end24, %for.end, %if.then, %if.then41, %if.then16
  %retval.0 = phi i8* [ %6, %if.then16 ], [ %9, %if.then41 ], [ %name, %if.then ], [ %name, %for.end ], [ %name, %if.end24 ], [ %name, %for.inc44 ]
  ret i8* %retval.0
}

; Function Attrs: nounwind uwtable
define void @cpp_make_system_header(%struct.cpp_reader* %pfile, i32 %syshdr, i32 %externc) #0 {
entry:
  %tobool = icmp eq i32 %syshdr, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %cmp = icmp ne i32 %externc, 0
  %add = select i1 %cmp, i32 2, i32 1
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %flags.0 = phi i32 [ %add, %if.then ], [ 0, %entry ]
  %map = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 3
  %0 = load %struct.line_map** %map, align 8, !tbaa !40
  %to_file = getelementptr inbounds %struct.line_map* %0, i64 0, i32 0
  %1 = load i8** %to_file, align 8, !tbaa !41
  %line = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 4
  %2 = load i32* %line, align 4, !tbaa !43
  %to_line = getelementptr inbounds %struct.line_map* %0, i64 0, i32 1
  %3 = load i32* %to_line, align 4, !tbaa !44
  %add2 = add i32 %3, %2
  %from_line = getelementptr inbounds %struct.line_map* %0, i64 0, i32 2
  %4 = load i32* %from_line, align 4, !tbaa !45
  %sub = sub i32 %add2, %4
  tail call void @_cpp_do_file_change(%struct.cpp_reader* %pfile, i32 2, i8* %1, i32 %sub, i32 %flags.0) #4
  ret void
}

declare void @_cpp_do_file_change(%struct.cpp_reader*, i32, i8*, i32, i32) #1

; Function Attrs: nounwind uwtable
define void @_cpp_report_missing_guards(%struct.cpp_reader* nocapture readonly %pfile) #0 {
entry:
  %banner = alloca i32, align 4
  store i32 0, i32* %banner, align 4, !tbaa !25
  %all_include_files = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 25
  %0 = load %struct.splay_tree_s** %all_include_files, align 8, !tbaa !1
  %1 = bitcast i32* %banner to i8*
  %call = call i32 @splay_tree_foreach(%struct.splay_tree_s* %0, i32 (%struct.splay_tree_node_s*, i8*)* @report_missing_guard, i8* %1) #4
  ret void
}

declare i32 @splay_tree_foreach(%struct.splay_tree_s*, i32 (%struct.splay_tree_node_s*, i8*)*, i8*) #1

; Function Attrs: nounwind uwtable
define internal i32 @report_missing_guard(%struct.splay_tree_node_s* nocapture readonly %n, i8* nocapture %b) #0 {
entry:
  %value = getelementptr inbounds %struct.splay_tree_node_s* %n, i64 0, i32 1
  %0 = load i64* %value, align 8, !tbaa !28
  %1 = inttoptr i64 %0 to %struct.include_file*
  %2 = bitcast i8* %b to i32*
  %tobool = icmp eq i64 %0, 0
  br i1 %tobool, label %if.end9, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %cmacro = getelementptr inbounds %struct.include_file* %1, i64 0, i32 1
  %3 = load %struct.cpp_hashnode** %cmacro, align 8, !tbaa !23
  %cmp = icmp eq %struct.cpp_hashnode* %3, null
  br i1 %cmp, label %land.lhs.true1, label %if.end9

land.lhs.true1:                                   ; preds = %land.lhs.true
  %include_count = getelementptr inbounds %struct.include_file* %1, i64 0, i32 7
  %4 = load i16* %include_count, align 2, !tbaa !46
  %cmp2 = icmp eq i16 %4, 1
  br i1 %cmp2, label %if.then, label %if.end9

if.then:                                          ; preds = %land.lhs.true1
  %5 = load i32* %2, align 4, !tbaa !25
  %cmp4 = icmp eq i32 %5, 0
  %6 = load %struct._IO_FILE** @stderr, align 8, !tbaa !47
  br i1 %cmp4, label %if.then6, label %if.end

if.then6:                                         ; preds = %if.then
  %7 = tail call i64 @fwrite(i8* getelementptr inbounds ([44 x i8]* @.str11, i64 0, i64 0), i64 43, i64 1, %struct._IO_FILE* %6) #7
  store i32 1, i32* %2, align 4, !tbaa !25
  br label %if.end

if.end:                                           ; preds = %if.then, %if.then6
  %name = getelementptr inbounds %struct.include_file* %1, i64 0, i32 0
  %8 = load i8** %name, align 8, !tbaa !24
  %call7 = tail call i32 @fputs(i8* %8, %struct._IO_FILE* %6) #8
  %call8 = tail call i32 @putc(i32 10, %struct._IO_FILE* %6) #4
  br label %if.end9

if.end9:                                          ; preds = %entry, %if.end, %land.lhs.true1, %land.lhs.true
  ret i32 0
}

; Function Attrs: nounwind uwtable
define zeroext i1 @_cpp_execute_include(%struct.cpp_reader* %pfile, %struct.cpp_token* nocapture readonly %header, i32 %type) #0 {
entry:
  %call = tail call fastcc %struct.include_file* @find_include_file(%struct.cpp_reader* %pfile, %struct.cpp_token* %header, i32 %type)
  %magicptr = ptrtoint %struct.include_file* %call to i64
  switch i64 %magicptr, label %if.then5 [
    i64 0, label %if.then
    i64 -1, label %if.end11
  ]

if.then:                                          ; preds = %entry
  %text = getelementptr inbounds %struct.cpp_token* %header, i64 0, i32 4, i32 0, i32 1
  %0 = load i8** %text, align 8, !tbaa !48
  %type1 = getelementptr inbounds %struct.cpp_token* %header, i64 0, i32 2
  %bf.load = load i8* %type1, align 2
  %cmp2 = icmp eq i8 %bf.load, 63
  %conv = zext i1 %cmp2 to i32
  tail call fastcc void @handle_missing_header(%struct.cpp_reader* %pfile, i8* %0, i32 %conv)
  br label %if.end11

if.then5:                                         ; preds = %entry
  %call6 = tail call fastcc zeroext i1 @stack_include_file(%struct.cpp_reader* %pfile, %struct.include_file* %call)
  %frombool = zext i1 %call6 to i8
  %cmp7 = icmp eq i32 %type, 2
  br i1 %cmp7, label %if.then9, label %if.end11

if.then9:                                         ; preds = %if.then5
  %cmacro.i = getelementptr inbounds %struct.include_file* %call, i64 0, i32 1
  store %struct.cpp_hashnode* inttoptr (i64 -1 to %struct.cpp_hashnode*), %struct.cpp_hashnode** %cmacro.i, align 8, !tbaa !23
  br label %if.end11

if.end11:                                         ; preds = %entry, %if.then9, %if.then5, %if.then
  %stacked.0 = phi i8 [ 0, %if.then ], [ %frombool, %if.then9 ], [ %frombool, %if.then5 ], [ 0, %entry ]
  %tobool = icmp ne i8 %stacked.0, 0
  ret i1 %tobool
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.include_file* @find_include_file(%struct.cpp_reader* %pfile, %struct.cpp_token* nocapture readonly %header, i32 %type) #0 {
entry:
  %text = getelementptr inbounds %struct.cpp_token* %header, i64 0, i32 4, i32 0, i32 1
  %0 = load i8** %text, align 8, !tbaa !48
  %1 = load i8* %0, align 1, !tbaa !27
  switch i8 %1, label %if.end [
    i8 47, label %if.then
    i8 36, label %if.then
  ]

if.then:                                          ; preds = %entry, %entry
  %call = call fastcc %struct.include_file* @open_file(%struct.cpp_reader* %pfile, i8* %0)
  br label %return

if.end:                                           ; preds = %entry
  %cmp6 = icmp eq i32 %type, 1
  br i1 %cmp6, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %if.end
  %buffer = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 0
  %2 = load %struct.cpp_buffer** %buffer, align 8, !tbaa !50
  %inc = getelementptr inbounds %struct.cpp_buffer* %2, i64 0, i32 6
  %3 = load %struct.include_file** %inc, align 8, !tbaa !51
  %foundhere = getelementptr inbounds %struct.include_file* %3, i64 0, i32 2
  %4 = load %struct.search_path** %foundhere, align 8, !tbaa !53
  %tobool = icmp eq %struct.search_path* %4, null
  br i1 %tobool, label %if.else, label %if.then8

if.then8:                                         ; preds = %land.lhs.true
  %next = getelementptr inbounds %struct.search_path* %4, i64 0, i32 0
  br label %if.end19

if.else:                                          ; preds = %land.lhs.true, %if.end
  %type12 = getelementptr inbounds %struct.cpp_token* %header, i64 0, i32 2
  %bf.load = load i8* %type12, align 2
  %cmp13 = icmp eq i8 %bf.load, 63
  br i1 %cmp13, label %if.then15, label %if.else16

if.then15:                                        ; preds = %if.else
  %bracket_include = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 6
  br label %if.end19

if.else16:                                        ; preds = %if.else
  %buffer1.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 0
  %5 = load %struct.cpp_buffer** %buffer1.i, align 8, !tbaa !50
  %cmp.i = icmp eq i32 %type, 3
  br i1 %cmp.i, label %use_cwd.i, label %if.end.i

if.end.i:                                         ; preds = %if.else16
  %ignore_srcdir.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 38
  %6 = load i8* %ignore_srcdir.i, align 1, !tbaa !54
  %tobool.i = icmp eq i8 %6, 0
  br i1 %tobool.i, label %if.end4.i, label %if.then2.i

if.then2.i:                                       ; preds = %if.end.i
  %quote_include.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 5
  br label %if.end19

if.end4.i:                                        ; preds = %if.end.i
  %search_cached.i = getelementptr inbounds %struct.cpp_buffer* %5, i64 0, i32 13
  %7 = load i8* %search_cached.i, align 1, !tbaa !55
  %tobool5.i = icmp eq i8 %7, 0
  br i1 %tobool5.i, label %if.then6.i, label %if.end19.thread

if.then6.i:                                       ; preds = %if.end4.i
  store i8 1, i8* %search_cached.i, align 1, !tbaa !55
  %inc.i = getelementptr inbounds %struct.cpp_buffer* %5, i64 0, i32 6
  %8 = load %struct.include_file** %inc.i, align 8, !tbaa !51
  %name.i = getelementptr inbounds %struct.include_file* %8, i64 0, i32 0
  %9 = load i8** %name.i, align 8, !tbaa !24
  %call.i = call i8* @lbasename(i8* %9) #4
  %10 = load %struct.include_file** %inc.i, align 8, !tbaa !51
  %name9.i = getelementptr inbounds %struct.include_file* %10, i64 0, i32 0
  %11 = load i8** %name9.i, align 8, !tbaa !24
  %sub.ptr.lhs.cast.i = ptrtoint i8* %call.i to i64
  %sub.ptr.rhs.cast.i = ptrtoint i8* %11 to i64
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %conv.i = trunc i64 %sub.ptr.sub.i to i32
  %tobool10.i = icmp eq i32 %conv.i, 0
  br i1 %tobool10.i, label %use_cwd.i, label %if.then11.i

if.then11.i:                                      ; preds = %if.then6.i
  %name14.i = getelementptr inbounds %struct.cpp_buffer* %5, i64 0, i32 15, i32 1
  store i8* %11, i8** %name14.i, align 8, !tbaa !56
  %cmp15.i = icmp ugt i32 %conv.i, 1
  %dec.i = sext i1 %cmp15.i to i32
  %dec.conv.i = add i32 %dec.i, %conv.i
  br label %if.end21.i

use_cwd.i:                                        ; preds = %if.then6.i, %if.else16
  %name20.i = getelementptr inbounds %struct.cpp_buffer* %5, i64 0, i32 15, i32 1
  store i8* getelementptr inbounds ([2 x i8]* @.str10, i64 0, i64 0), i8** %name20.i, align 8, !tbaa !56
  br label %if.end21.i

if.end21.i:                                       ; preds = %use_cwd.i, %if.then11.i
  %dlen.0.i = phi i32 [ 1, %use_cwd.i ], [ %dec.conv.i, %if.then11.i ]
  %max_include_len.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 26
  %12 = load i32* %max_include_len.i, align 4, !tbaa !30
  %cmp22.i = icmp ugt i32 %dlen.0.i, %12
  br i1 %cmp22.i, label %if.then24.i, label %if.end26.i

if.then24.i:                                      ; preds = %if.end21.i
  store i32 %dlen.0.i, i32* %max_include_len.i, align 4, !tbaa !30
  br label %if.end26.i

if.end26.i:                                       ; preds = %if.then24.i, %if.end21.i
  %len.i = getelementptr inbounds %struct.cpp_buffer* %5, i64 0, i32 15, i32 2
  store i32 %dlen.0.i, i32* %len.i, align 4, !tbaa !57
  %quote_include29.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 5
  %13 = load %struct.search_path** %quote_include29.i, align 8, !tbaa !58
  %next.i = getelementptr inbounds %struct.cpp_buffer* %5, i64 0, i32 15, i32 0
  store %struct.search_path* %13, %struct.search_path** %next.i, align 8, !tbaa !59
  %map.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 3
  %14 = load %struct.line_map** %map.i, align 8, !tbaa !40
  %sysp.i = getelementptr inbounds %struct.line_map* %14, i64 0, i32 5
  %15 = load i8* %sysp.i, align 1, !tbaa !60
  %conv31.i = zext i8 %15 to i32
  %sysp33.i = getelementptr inbounds %struct.cpp_buffer* %5, i64 0, i32 15, i32 5
  store i32 %conv31.i, i32* %sysp33.i, align 4, !tbaa !61
  br label %if.end19.thread

if.end19.thread:                                  ; preds = %if.end4.i, %if.end26.i
  %dir35.i = getelementptr inbounds %struct.cpp_buffer* %5, i64 0, i32 15
  br label %if.end23

if.end19:                                         ; preds = %if.then2.i, %if.then15, %if.then8
  %path.0.in = phi %struct.search_path** [ %next, %if.then8 ], [ %bracket_include, %if.then15 ], [ %quote_include.i, %if.then2.i ]
  %path.0 = load %struct.search_path** %path.0.in, align 8
  %cmp20 = icmp eq %struct.search_path* %path.0, null
  br i1 %cmp20, label %if.then22, label %if.end23

if.then22:                                        ; preds = %if.end19
  call void (%struct.cpp_reader*, i8*, ...)* @cpp_error(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([36 x i8]* @.str9, i64 0, i64 0), i8* %0) #4
  br label %return

if.end23:                                         ; preds = %if.end19.thread, %if.end19
  %path.087 = phi %struct.search_path* [ %dir35.i, %if.end19.thread ], [ %path.0, %if.end19 ]
  %call24 = call i64 @strlen(i8* %0) #4
  %max_include_len = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 26
  %16 = load i32* %max_include_len, align 4, !tbaa !30
  %conv25 = zext i32 %16 to i64
  %add = add i64 %call24, 2
  %add26 = add i64 %add, %conv25
  %17 = alloca i8, i64 %add26, align 1
  %tobool2789 = icmp eq %struct.search_path* %path.087, null
  br i1 %tobool2789, label %return, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.end23
  %remap = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 36
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %path.190 = phi %struct.search_path* [ %path.087, %for.body.lr.ph ], [ %22, %for.inc ]
  %len28 = getelementptr inbounds %struct.search_path* %path.190, i64 0, i32 2
  %18 = load i32* %len28, align 4, !tbaa !33
  %name29 = getelementptr inbounds %struct.search_path* %path.190, i64 0, i32 1
  %19 = load i8** %name29, align 8, !tbaa !31
  %conv30 = sext i32 %18 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %17, i8* %19, i64 %conv30, i32 1, i1 false)
  %sub = add nsw i32 %18, -1
  %idxprom = sext i32 %sub to i64
  %arrayidx31 = getelementptr inbounds i8* %17, i64 %idxprom
  %20 = load i8* %arrayidx31, align 1, !tbaa !27
  %cmp33 = icmp eq i8 %20, 47
  %dec. = select i1 %cmp33, i32 %sub, i32 %18
  %idxprom37 = sext i32 %dec. to i64
  %arrayidx38 = getelementptr inbounds i8* %17, i64 %idxprom37
  store i8 47, i8* %arrayidx38, align 1, !tbaa !27
  %add39 = add nsw i32 %dec., 1
  %idxprom40 = sext i32 %add39 to i64
  %arrayidx41 = getelementptr inbounds i8* %17, i64 %idxprom40
  %call42 = call i8* @strcpy(i8* %arrayidx41, i8* %0) #4
  %21 = load i8* %remap, align 1, !tbaa !34
  %tobool44 = icmp eq i8 %21, 0
  br i1 %tobool44, label %if.end48, label %if.then45

if.then45:                                        ; preds = %for.body
  %call46 = call fastcc i8* @remap_filename(%struct.cpp_reader* %pfile, i8* %17, %struct.search_path* %path.190)
  br label %if.end48

if.end48:                                         ; preds = %for.body, %if.then45
  %n.0 = phi i8* [ %call46, %if.then45 ], [ %17, %for.body ]
  %call49 = call fastcc %struct.include_file* @open_file(%struct.cpp_reader* %pfile, i8* %n.0)
  %tobool50 = icmp eq %struct.include_file* %call49, null
  br i1 %tobool50, label %for.inc, label %if.then51

if.then51:                                        ; preds = %if.end48
  %foundhere52 = getelementptr inbounds %struct.include_file* %call49, i64 0, i32 2
  store %struct.search_path* %path.190, %struct.search_path** %foundhere52, align 8, !tbaa !53
  br label %return

for.inc:                                          ; preds = %if.end48
  %next54 = getelementptr inbounds %struct.search_path* %path.190, i64 0, i32 0
  %22 = load %struct.search_path** %next54, align 8, !tbaa !62
  %tobool27 = icmp eq %struct.search_path* %22, null
  br i1 %tobool27, label %return, label %for.body

return:                                           ; preds = %for.inc, %if.end23, %if.then51, %if.then22, %if.then
  %retval.0 = phi %struct.include_file* [ %call, %if.then ], [ inttoptr (i64 -1 to %struct.include_file*), %if.then22 ], [ %call49, %if.then51 ], [ null, %if.end23 ], [ null, %for.inc ]
  ret %struct.include_file* %retval.0
}

; Function Attrs: nounwind uwtable
define internal fastcc void @handle_missing_header(%struct.cpp_reader* %pfile, i8* %fname, i32 %angle_brackets) #0 {
entry:
  %print_deps = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 21
  %0 = load i8* %print_deps, align 1, !tbaa !63
  %conv = zext i8 %0 to i32
  %tobool = icmp ne i32 %angle_brackets, 0
  br i1 %tobool, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %entry
  %map = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 3
  %1 = load %struct.line_map** %map, align 8, !tbaa !40
  %sysp = getelementptr inbounds %struct.line_map* %1, i64 0, i32 5
  %2 = load i8* %sysp, align 1, !tbaa !60
  %tobool2 = icmp ne i8 %2, 0
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %entry
  %3 = phi i1 [ true, %entry ], [ %tobool2, %lor.rhs ]
  %lor.ext = zext i1 %3 to i32
  %cmp = icmp ugt i32 %conv, %lor.ext
  %print_deps_missing_files = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 23
  %4 = load i8* %print_deps_missing_files, align 1, !tbaa !64
  %tobool6 = icmp ne i8 %4, 0
  %or.cond = and i1 %tobool6, %cmp
  br i1 %or.cond, label %if.then, label %if.else34

if.then:                                          ; preds = %lor.end
  br i1 %tobool, label %lor.lhs.false, label %if.then17

lor.lhs.false:                                    ; preds = %if.then
  %5 = load i8* %fname, align 1, !tbaa !27
  switch i8 %5, label %if.else [
    i8 47, label %if.then17
    i8 36, label %if.then17
  ]

if.then17:                                        ; preds = %lor.lhs.false, %lor.lhs.false, %if.then
  %deps = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 31
  %6 = load %struct.deps** %deps, align 8, !tbaa !65
  call void @deps_add_dep(%struct.deps* %6, i8* %fname) #4
  br label %if.end46

if.else:                                          ; preds = %lor.lhs.false
  %bracket_include = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 6
  %7 = load %struct.search_path** %bracket_include, align 8, !tbaa !66
  %call = call i64 @strlen(i8* %fname) #4
  %tobool20 = icmp eq %struct.search_path* %7, null
  br i1 %tobool20, label %if.end.thread, label %if.end

if.end.thread:                                    ; preds = %if.else
  %add2373 = shl i64 %call, 32
  %sext76 = add i64 %add2373, 8589934592
  %conv2474 = ashr exact i64 %sext76, 32
  %8 = alloca i8, i64 %conv2474, align 1
  br label %if.end29

if.end:                                           ; preds = %if.else
  %conv19 = trunc i64 %call to i32
  %len22 = getelementptr inbounds %struct.search_path* %7, i64 0, i32 2
  %9 = load i32* %len22, align 4, !tbaa !33
  %add = add i32 %conv19, 2
  %add23 = add i32 %add, %9
  %conv24 = sext i32 %add23 to i64
  %10 = alloca i8, i64 %conv24, align 1
  %tobool25 = icmp eq i32 %9, 0
  br i1 %tobool25, label %if.end29, label %if.then26

if.then26:                                        ; preds = %if.end
  %name = getelementptr inbounds %struct.search_path* %7, i64 0, i32 1
  %11 = load i8** %name, align 8, !tbaa !31
  %conv27 = sext i32 %9 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10, i8* %11, i64 %conv27, i32 1, i1 false)
  %inc = add nsw i32 %9, 1
  %arrayidx28 = getelementptr inbounds i8* %10, i64 %conv27
  store i8 47, i8* %arrayidx28, align 1, !tbaa !27
  %phitmp = sext i32 %inc to i64
  br label %if.end29

if.end29:                                         ; preds = %if.end.thread, %if.end, %if.then26
  %12 = phi i8* [ %10, %if.then26 ], [ %10, %if.end ], [ %8, %if.end.thread ]
  %len.1 = phi i64 [ %phitmp, %if.then26 ], [ 0, %if.end ], [ 0, %if.end.thread ]
  %add.ptr = getelementptr inbounds i8* %12, i64 %len.1
  %add30 = shl i64 %call, 32
  %sext = add i64 %add30, 4294967296
  %conv31 = ashr exact i64 %sext, 32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr, i8* %fname, i64 %conv31, i32 1, i1 false)
  %deps32 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 31
  %13 = load %struct.deps** %deps32, align 8, !tbaa !65
  call void @deps_add_dep(%struct.deps* %13, i8* %12) #4
  br label %if.end46

if.else34:                                        ; preds = %lor.end
  %tobool38 = icmp eq i8 %0, 0
  %or.cond47 = or i1 %tobool38, %cmp
  br i1 %or.cond47, label %if.else44, label %if.then41

if.then41:                                        ; preds = %if.else34
  %call42 = call i32* @__errno_location() #6
  %14 = load i32* %call42, align 4, !tbaa !25
  %call43 = call i8* @xstrerror(i32 %14) #4
  call void (%struct.cpp_reader*, i8*, ...)* @cpp_warning(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([7 x i8]* @.str8, i64 0, i64 0), i8* %fname, i8* %call43) #4
  br label %if.end46

if.else44:                                        ; preds = %if.else34
  call void @cpp_error_from_errno(%struct.cpp_reader* %pfile, i8* %fname) #4
  br label %if.end46

if.end46:                                         ; preds = %if.then41, %if.else44, %if.then17, %if.end29
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i1 @stack_include_file(%struct.cpp_reader* %pfile, %struct.include_file* %inc) #0 {
entry:
  %cmacro = getelementptr inbounds %struct.include_file* %inc, i64 0, i32 1
  %0 = load %struct.cpp_hashnode** %cmacro, align 8, !tbaa !23
  %magicptr = ptrtoint %struct.cpp_hashnode* %0 to i64
  switch i64 %magicptr, label %lor.lhs.false [
    i64 0, label %if.end
    i64 -1, label %return
  ]

lor.lhs.false:                                    ; preds = %entry
  %type = getelementptr inbounds %struct.cpp_hashnode* %0, i64 0, i32 4
  %bf.load = load i8* %type, align 4
  %cmp3 = icmp eq i8 %bf.load, 1
  br i1 %cmp3, label %return, label %if.end

if.end:                                           ; preds = %entry, %lor.lhs.false
  %map = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 3
  %1 = load %struct.line_map** %map, align 8, !tbaa !40
  %tobool4 = icmp eq %struct.line_map* %1, null
  br i1 %tobool4, label %cond.end, label %cond.true

cond.true:                                        ; preds = %if.end
  %sysp6 = getelementptr inbounds %struct.line_map* %1, i64 0, i32 5
  %2 = load i8* %sysp6, align 1, !tbaa !60
  %conv = zext i8 %2 to i32
  br label %cond.end

cond.end:                                         ; preds = %if.end, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ 0, %if.end ]
  %foundhere = getelementptr inbounds %struct.include_file* %inc, i64 0, i32 2
  %3 = load %struct.search_path** %foundhere, align 8, !tbaa !53
  %tobool7 = icmp eq %struct.search_path* %3, null
  br i1 %tobool7, label %cond.end12, label %cond.true8

cond.true8:                                       ; preds = %cond.end
  %sysp10 = getelementptr inbounds %struct.search_path* %3, i64 0, i32 5
  %4 = load i32* %sysp10, align 4, !tbaa !67
  br label %cond.end12

cond.end12:                                       ; preds = %cond.end, %cond.true8
  %cond13 = phi i32 [ %4, %cond.true8 ], [ 0, %cond.end ]
  %cmp14 = icmp sgt i32 %cond, %cond13
  br i1 %cmp14, label %cond.true16, label %cond.false26

cond.true16:                                      ; preds = %cond.end12
  br i1 %tobool4, label %cond.end35, label %cond.true19

cond.true19:                                      ; preds = %cond.true16
  %sysp21 = getelementptr inbounds %struct.line_map* %1, i64 0, i32 5
  %5 = load i8* %sysp21, align 1, !tbaa !60
  %conv22 = zext i8 %5 to i32
  br label %cond.end35

cond.false26:                                     ; preds = %cond.end12
  br i1 %tobool7, label %cond.end35, label %cond.true29

cond.true29:                                      ; preds = %cond.false26
  %sysp31 = getelementptr inbounds %struct.search_path* %3, i64 0, i32 5
  %6 = load i32* %sysp31, align 4, !tbaa !67
  br label %cond.end35

cond.end35:                                       ; preds = %cond.true16, %cond.false26, %cond.true29, %cond.true19
  %cond36 = phi i32 [ %conv22, %cond.true19 ], [ 0, %cond.true16 ], [ %6, %cond.true29 ], [ 0, %cond.false26 ]
  %print_deps = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 21
  %7 = load i8* %print_deps, align 1, !tbaa !63
  %conv37 = zext i8 %7 to i32
  %cmp38 = icmp sgt i32 %conv37, %cond36
  br i1 %cmp38, label %land.lhs.true40, label %if.end43

land.lhs.true40:                                  ; preds = %cond.end35
  %include_count = getelementptr inbounds %struct.include_file* %inc, i64 0, i32 7
  %8 = load i16* %include_count, align 2, !tbaa !46
  %tobool41 = icmp eq i16 %8, 0
  br i1 %tobool41, label %if.then42, label %if.end43

if.then42:                                        ; preds = %land.lhs.true40
  %deps = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 31
  %9 = load %struct.deps** %deps, align 8, !tbaa !65
  %name = getelementptr inbounds %struct.include_file* %inc, i64 0, i32 0
  %10 = load i8** %name, align 8, !tbaa !24
  tail call void @deps_add_dep(%struct.deps* %9, i8* %10) #4
  br label %if.end43

if.end43:                                         ; preds = %land.lhs.true40, %if.then42, %cond.end35
  %buffer = getelementptr inbounds %struct.include_file* %inc, i64 0, i32 3
  %11 = load i8** %buffer, align 8, !tbaa !19
  %tobool44 = icmp eq i8* %11, null
  br i1 %tobool44, label %if.then45, label %if.end59

if.then45:                                        ; preds = %if.end43
  %st_mode.i = getelementptr inbounds %struct.include_file* %inc, i64 0, i32 4, i32 3
  %12 = load i32* %st_mode.i, align 4, !tbaa !68
  %and.i = and i32 %12, 61440
  switch i32 %and.i, label %if.else26.i [
    i32 32768, label %if.then.i
    i32 24576, label %if.then24.i
  ]

if.then.i:                                        ; preds = %if.then45
  %st_size.i = getelementptr inbounds %struct.include_file* %inc, i64 0, i32 4, i32 8
  %13 = load i64* %st_size.i, align 8, !tbaa !69
  %mapped.i = getelementptr inbounds %struct.include_file* %inc, i64 0, i32 9
  store i8 0, i8* %mapped.i, align 1, !tbaa !70
  %add.i = add nsw i64 %13, 1
  %call.i = tail call noalias i8* @xmalloc(i64 %add.i) #4
  %cmp6111.i = icmp sgt i64 %13, 0
  br i1 %cmp6111.i, label %while.body.lr.ph.i, label %while.end.i

while.body.lr.ph.i:                               ; preds = %if.then.i
  %fd.i = getelementptr inbounds %struct.include_file* %inc, i64 0, i32 5
  br label %while.body.i

while.cond.i:                                     ; preds = %if.end10.i
  %cmp6.i = icmp sgt i64 %13, %add19.i
  br i1 %cmp6.i, label %while.body.i, label %while.end.i

while.body.i:                                     ; preds = %while.cond.i, %while.body.lr.ph.i
  %offset.0112.i = phi i64 [ 0, %while.body.lr.ph.i ], [ %add19.i, %while.cond.i ]
  %14 = load i32* %fd.i, align 4, !tbaa !71
  %add.ptr.i = getelementptr inbounds i8* %call.i, i64 %offset.0112.i
  %sub.i = sub nsw i64 %13, %offset.0112.i
  %call7.i = tail call i64 @read(i32 %14, i8* %add.ptr.i, i64 %sub.i) #4
  %cmp8.i = icmp slt i64 %call7.i, 0
  br i1 %cmp8.i, label %perror_fail.i, label %if.end10.i

if.end10.i:                                       ; preds = %while.body.i
  %cmp11.i = icmp eq i64 %call7.i, 0
  %add19.i = add nsw i64 %call7.i, %offset.0112.i
  br i1 %cmp11.i, label %if.then12.i, label %while.cond.i

if.then12.i:                                      ; preds = %if.end10.i
  %name13.i = getelementptr inbounds %struct.include_file* %inc, i64 0, i32 0
  %15 = load i8** %name13.i, align 8, !tbaa !24
  tail call void (%struct.cpp_reader*, i8*, ...)* @cpp_warning(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([28 x i8]* @.str6, i64 0, i64 0), i8* %15) #4
  %add14.i = add nsw i64 %offset.0112.i, 1
  %call15.i = tail call i8* @xrealloc(i8* %call.i, i64 %add14.i) #4
  store i64 %offset.0112.i, i64* %st_size.i, align 8, !tbaa !69
  br label %while.end.i

while.end.i:                                      ; preds = %while.cond.i, %if.then12.i, %if.then.i
  %size.0.i = phi i64 [ %offset.0112.i, %if.then12.i ], [ %13, %if.then.i ], [ %13, %while.cond.i ]
  %buf.0.i = phi i8* [ %call15.i, %if.then12.i ], [ %call.i, %if.then.i ], [ %call.i, %while.cond.i ]
  %arrayidx.i = getelementptr inbounds i8* %buf.0.i, i64 %size.0.i
  store i8 0, i8* %arrayidx.i, align 1, !tbaa !27
  br label %if.end48

if.then24.i:                                      ; preds = %if.then45
  %name25.i = getelementptr inbounds %struct.include_file* %inc, i64 0, i32 0
  %16 = load i8** %name25.i, align 8, !tbaa !24
  tail call void (%struct.cpp_reader*, i8*, ...)* @cpp_error(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([21 x i8]* @.str7, i64 0, i64 0), i8* %16) #4
  br label %if.then47

if.else26.i:                                      ; preds = %if.then45
  %call28.i = tail call noalias i8* @xmalloc(i64 8193) #4
  %fd30.i = getelementptr inbounds %struct.include_file* %inc, i64 0, i32 5
  br label %while.cond29.outer.i

while.cond29.outer.i:                             ; preds = %if.then38.i, %if.else26.i
  %size.1.ph.i = phi i64 [ 8192, %if.else26.i ], [ %mul.i, %if.then38.i ]
  %offset.1.ph.i = phi i64 [ 0, %if.else26.i ], [ %size.1.ph.i, %if.then38.i ]
  %buf.1.ph.i = phi i8* [ %call28.i, %if.else26.i ], [ %call40.i, %if.then38.i ]
  br label %while.cond29.i

while.cond29.i:                                   ; preds = %while.body35.i, %while.cond29.outer.i
  %offset.1.i = phi i64 [ %add36.i, %while.body35.i ], [ %offset.1.ph.i, %while.cond29.outer.i ]
  %17 = load i32* %fd30.i, align 4, !tbaa !71
  %add.ptr31.i = getelementptr inbounds i8* %buf.1.ph.i, i64 %offset.1.i
  %sub32.i = sub nsw i64 %size.1.ph.i, %offset.1.i
  %call33.i = tail call i64 @read(i32 %17, i8* %add.ptr31.i, i64 %sub32.i) #4
  %cmp34.i = icmp sgt i64 %call33.i, 0
  br i1 %cmp34.i, label %while.body35.i, label %while.end42.i

while.body35.i:                                   ; preds = %while.cond29.i
  %add36.i = add nsw i64 %call33.i, %offset.1.i
  %cmp37.i = icmp eq i64 %add36.i, %size.1.ph.i
  br i1 %cmp37.i, label %if.then38.i, label %while.cond29.i

if.then38.i:                                      ; preds = %while.body35.i
  %mul.i = shl nsw i64 %size.1.ph.i, 1
  %add39106.i = or i64 %mul.i, 1
  %call40.i = tail call i8* @xrealloc(i8* %buf.1.ph.i, i64 %add39106.i) #4
  br label %while.cond29.outer.i

while.end42.i:                                    ; preds = %while.cond29.i
  %cmp43.i = icmp slt i64 %call33.i, 0
  br i1 %cmp43.i, label %perror_fail.i, label %if.end45.i

if.end45.i:                                       ; preds = %while.end42.i
  %add46.i = add nsw i64 %offset.1.i, 1
  %cmp47.i = icmp slt i64 %add46.i, %size.1.ph.i
  br i1 %cmp47.i, label %if.then48.i, label %if.end51.i

if.then48.i:                                      ; preds = %if.end45.i
  %call50.i = tail call i8* @xrealloc(i8* %buf.1.ph.i, i64 %add46.i) #4
  br label %if.end51.i

if.end51.i:                                       ; preds = %if.then48.i, %if.end45.i
  %buf.2.i = phi i8* [ %call50.i, %if.then48.i ], [ %buf.1.ph.i, %if.end45.i ]
  %arrayidx52.i = getelementptr inbounds i8* %buf.2.i, i64 %offset.1.i
  store i8 0, i8* %arrayidx52.i, align 1, !tbaa !27
  %st_size54.i = getelementptr inbounds %struct.include_file* %inc, i64 0, i32 4, i32 8
  store i64 %offset.1.i, i64* %st_size54.i, align 8, !tbaa !69
  br label %if.end48

perror_fail.i:                                    ; preds = %while.body.i, %while.end42.i
  %name57.i = getelementptr inbounds %struct.include_file* %inc, i64 0, i32 0
  %18 = load i8** %name57.i, align 8, !tbaa !24
  tail call void @cpp_error_from_errno(%struct.cpp_reader* %pfile, i8* %18) #4
  br label %if.then47

if.then47:                                        ; preds = %perror_fail.i, %if.then24.i
  store %struct.cpp_hashnode* inttoptr (i64 -1 to %struct.cpp_hashnode*), %struct.cpp_hashnode** %cmacro, align 8, !tbaa !23
  br label %return

if.end48:                                         ; preds = %if.end51.i, %while.end.i
  %buf.3.i = phi i8* [ %buf.0.i, %while.end.i ], [ %buf.2.i, %if.end51.i ]
  store i8* %buf.3.i, i8** %buffer, align 8, !tbaa !19
  %19 = load i32* %st_mode.i, align 4, !tbaa !68
  %and = and i32 %19, 61440
  %cmp49 = icmp eq i32 %and, 32768
  br i1 %cmp49, label %land.lhs.true51, label %if.end56

land.lhs.true51:                                  ; preds = %if.end48
  %st_size = getelementptr inbounds %struct.include_file* %inc, i64 0, i32 4, i32 8
  %20 = load i64* %st_size, align 8, !tbaa !69
  %cmp53 = icmp eq i64 %20, 0
  br i1 %cmp53, label %if.then55, label %if.end56

if.then55:                                        ; preds = %land.lhs.true51
  store %struct.cpp_hashnode* inttoptr (i64 -1 to %struct.cpp_hashnode*), %struct.cpp_hashnode** %cmacro, align 8, !tbaa !23
  br label %if.end56

if.end56:                                         ; preds = %if.then55, %land.lhs.true51, %if.end48
  %fd = getelementptr inbounds %struct.include_file* %inc, i64 0, i32 5
  %21 = load i32* %fd, align 4, !tbaa !71
  %call57 = tail call i32 @close(i32 %21) #4
  store i32 -1, i32* %fd, align 4, !tbaa !71
  br label %if.end59

if.end59:                                         ; preds = %if.end43, %if.end56
  %buffer60 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 0
  %22 = load %struct.cpp_buffer** %buffer60, align 8, !tbaa !50
  %tobool61 = icmp eq %struct.cpp_buffer* %22, null
  br i1 %tobool61, label %if.end65, label %if.then62

if.then62:                                        ; preds = %if.end59
  %include_count63 = getelementptr inbounds %struct.include_file* %inc, i64 0, i32 7
  %23 = load i16* %include_count63, align 2, !tbaa !46
  %inc64 = add i16 %23, 1
  store i16 %inc64, i16* %include_count63, align 2, !tbaa !46
  br label %if.end65

if.end65:                                         ; preds = %if.end59, %if.then62
  %24 = load i8** %buffer, align 8, !tbaa !19
  %st_size68 = getelementptr inbounds %struct.include_file* %inc, i64 0, i32 4, i32 8
  %25 = load i64* %st_size68, align 8, !tbaa !69
  %preprocessed = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 43
  %26 = load i8* %preprocessed, align 1, !tbaa !72
  %conv70 = zext i8 %26 to i32
  %call71 = tail call %struct.cpp_buffer* @cpp_push_buffer(%struct.cpp_reader* %pfile, i8* %24, i64 %25, i32 %conv70, i32 0) #4
  %inc72 = getelementptr inbounds %struct.cpp_buffer* %call71, i64 0, i32 6
  store %struct.include_file* %inc, %struct.include_file** %inc72, align 8, !tbaa !51
  %refcnt = getelementptr inbounds %struct.include_file* %inc, i64 0, i32 8
  %27 = load i16* %refcnt, align 2, !tbaa !73
  %inc74 = add i16 %27, 1
  store i16 %inc74, i16* %refcnt, align 2, !tbaa !73
  %mi_valid = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 14
  store i8 1, i8* %mi_valid, align 1, !tbaa !74
  %mi_cmacro = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 12
  store %struct.cpp_hashnode* null, %struct.cpp_hashnode** %mi_cmacro, align 8, !tbaa !75
  %name75 = getelementptr inbounds %struct.include_file* %inc, i64 0, i32 0
  %28 = load i8** %name75, align 8, !tbaa !24
  %29 = load i8* %28, align 1, !tbaa !27
  %cmp77 = icmp eq i8 %29, 0
  %. = select i1 %cmp77, i8* getelementptr inbounds ([8 x i8]* @.str4, i64 0, i64 0), i8* %28
  tail call void @_cpp_do_file_change(%struct.cpp_reader* %pfile, i32 0, i8* %., i32 1, i32 %cond36) #4
  br label %return

return:                                           ; preds = %lor.lhs.false, %entry, %if.end65, %if.then47
  %retval.0 = phi i1 [ true, %if.end65 ], [ false, %if.then47 ], [ false, %entry ], [ false, %lor.lhs.false ]
  ret i1 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @_cpp_compare_file_date(%struct.cpp_reader* %pfile, %struct.cpp_token* nocapture readonly %header) #0 {
entry:
  %call = tail call fastcc %struct.include_file* @find_include_file(%struct.cpp_reader* %pfile, %struct.cpp_token* %header, i32 0)
  %magicptr = ptrtoint %struct.include_file* %call to i64
  switch i64 %magicptr, label %if.end [
    i64 -1, label %return
    i64 0, label %return
  ]

if.end:                                           ; preds = %entry
  %fd = getelementptr inbounds %struct.include_file* %call, i64 0, i32 5
  %0 = load i32* %fd, align 4, !tbaa !71
  %cmp2 = icmp sgt i32 %0, 0
  br i1 %cmp2, label %if.then3, label %if.end7

if.then3:                                         ; preds = %if.end
  %call5 = tail call i32 @close(i32 %0) #4
  store i32 -1, i32* %fd, align 4, !tbaa !71
  br label %if.end7

if.end7:                                          ; preds = %if.then3, %if.end
  %tv_sec = getelementptr inbounds %struct.include_file* %call, i64 0, i32 4, i32 12, i32 0
  %1 = load i64* %tv_sec, align 8, !tbaa !76
  %buffer = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 0
  %2 = load %struct.cpp_buffer** %buffer, align 8, !tbaa !50
  %inc8 = getelementptr inbounds %struct.cpp_buffer* %2, i64 0, i32 6
  %3 = load %struct.include_file** %inc8, align 8, !tbaa !51
  %tv_sec11 = getelementptr inbounds %struct.include_file* %3, i64 0, i32 4, i32 12, i32 0
  %4 = load i64* %tv_sec11, align 8, !tbaa !76
  %cmp12 = icmp sgt i64 %1, %4
  %conv = zext i1 %cmp12 to i32
  br label %return

return:                                           ; preds = %entry, %entry, %if.end7
  %retval.0 = phi i32 [ %conv, %if.end7 ], [ -1, %entry ], [ -1, %entry ]
  ret i32 %retval.0
}

declare i32 @close(i32) #1

; Function Attrs: nounwind uwtable
define zeroext i1 @_cpp_read_file(%struct.cpp_reader* %pfile, i8* %fname) #0 {
entry:
  %call = tail call fastcc %struct.include_file* @open_file(%struct.cpp_reader* %pfile, i8* %fname)
  %cmp = icmp eq %struct.include_file* %call, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @cpp_error_from_errno(%struct.cpp_reader* %pfile, i8* %fname) #4
  br label %return

if.end:                                           ; preds = %entry
  %call1 = tail call fastcc zeroext i1 @stack_include_file(%struct.cpp_reader* %pfile, %struct.include_file* %call)
  br label %return

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi i1 [ false, %if.then ], [ %call1, %if.end ]
  ret i1 %retval.0
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.include_file* @open_file(%struct.cpp_reader* nocapture readonly %pfile, i8* %filename) #0 {
entry:
  %call = tail call fastcc %struct.splay_tree_node_s* @find_or_create_entry(%struct.cpp_reader* %pfile, i8* %filename)
  %value = getelementptr inbounds %struct.splay_tree_node_s* %call, i64 0, i32 1
  %0 = load i64* %value, align 8, !tbaa !28
  %1 = inttoptr i64 %0 to %struct.include_file*
  %err_no = getelementptr inbounds %struct.include_file* %1, i64 0, i32 6
  %2 = load i32* %err_no, align 4, !tbaa !26
  %tobool = icmp eq i32 %2, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %call2 = tail call i32* @__errno_location() #6
  store i32 %2, i32* %call2, align 4, !tbaa !25
  br label %return

if.end:                                           ; preds = %entry
  %cmacro = getelementptr inbounds %struct.include_file* %1, i64 0, i32 1
  %3 = load %struct.cpp_hashnode** %cmacro, align 8, !tbaa !23
  %magicptr = ptrtoint %struct.cpp_hashnode* %3 to i64
  switch i64 %magicptr, label %lor.lhs.false [
    i64 0, label %if.end8
    i64 -1, label %return
  ]

lor.lhs.false:                                    ; preds = %if.end
  %type = getelementptr inbounds %struct.cpp_hashnode* %3, i64 0, i32 4
  %bf.load = load i8* %type, align 4
  %cmp6 = icmp eq i8 %bf.load, 1
  br i1 %cmp6, label %return, label %if.end8

if.end8:                                          ; preds = %if.end, %lor.lhs.false
  %buffer = getelementptr inbounds %struct.include_file* %1, i64 0, i32 3
  %4 = load i8** %buffer, align 8, !tbaa !19
  %cmp9 = icmp eq i8* %4, null
  br i1 %cmp9, label %if.end11, label %return

if.end11:                                         ; preds = %if.end8
  %5 = load i8* %filename, align 1, !tbaa !27
  %cmp12 = icmp eq i8 %5, 0
  br i1 %cmp12, label %if.end17.thread, label %if.end17

if.end17.thread:                                  ; preds = %if.end11
  %fd = getelementptr inbounds %struct.include_file* %1, i64 0, i32 5
  store i32 0, i32* %fd, align 4, !tbaa !71
  br label %land.lhs.true21

if.end17:                                         ; preds = %if.end11
  %name = getelementptr inbounds %struct.include_file* %1, i64 0, i32 0
  %6 = load i8** %name, align 8, !tbaa !24
  %call15 = tail call i32 (i8*, i32, ...)* @open(i8* %6, i32 256, i32 438) #4
  %fd16 = getelementptr inbounds %struct.include_file* %1, i64 0, i32 5
  store i32 %call15, i32* %fd16, align 4, !tbaa !71
  %cmp19 = icmp eq i32 %call15, -1
  br i1 %cmp19, label %if.end36, label %land.lhs.true21

land.lhs.true21:                                  ; preds = %if.end17.thread, %if.end17
  %7 = phi i32 [ 0, %if.end17.thread ], [ %call15, %if.end17 ]
  %fd1858 = getelementptr inbounds %struct.include_file* %1, i64 0, i32 5
  %st = getelementptr inbounds %struct.include_file* %1, i64 0, i32 4
  %call23 = tail call i32 @fstat(i32 %7, %struct.stat* %st) #4
  %cmp24 = icmp eq i32 %call23, 0
  br i1 %cmp24, label %if.then26, label %if.end36

if.then26:                                        ; preds = %land.lhs.true21
  %st_mode = getelementptr inbounds %struct.include_file* %1, i64 0, i32 4, i32 3
  %8 = load i32* %st_mode, align 4, !tbaa !68
  %and = and i32 %8, 61440
  %cmp28 = icmp eq i32 %and, 16384
  br i1 %cmp28, label %if.end31, label %return

if.end31:                                         ; preds = %if.then26
  %call32 = tail call i32* @__errno_location() #6
  store i32 2, i32* %call32, align 4, !tbaa !25
  %9 = load i32* %fd1858, align 4, !tbaa !71
  %call34 = tail call i32 @close(i32 %9) #4
  store i32 -1, i32* %fd1858, align 4, !tbaa !71
  br label %if.end36

if.end36:                                         ; preds = %if.end17, %if.end31, %land.lhs.true21
  %call37 = tail call i32* @__errno_location() #6
  %10 = load i32* %call37, align 4, !tbaa !25
  store i32 %10, i32* %err_no, align 4, !tbaa !26
  br label %return

return:                                           ; preds = %if.then26, %if.end8, %lor.lhs.false, %if.end, %if.end36, %if.then
  %retval.0 = phi %struct.include_file* [ null, %if.then ], [ null, %if.end36 ], [ %1, %if.end ], [ %1, %lor.lhs.false ], [ %1, %if.end8 ], [ %1, %if.then26 ]
  ret %struct.include_file* %retval.0
}

declare void @cpp_error_from_errno(%struct.cpp_reader*, i8*) #1

; Function Attrs: nounwind uwtable
define zeroext i1 @_cpp_pop_file_buffer(%struct.cpp_reader* %pfile, %struct.include_file* nocapture %inc) #0 {
entry:
  %mi_valid = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 14
  %0 = load i8* %mi_valid, align 1, !tbaa !74, !range !77
  %tobool = icmp eq i8 %0, 0
  br i1 %tobool, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %cmacro = getelementptr inbounds %struct.include_file* %inc, i64 0, i32 1
  %1 = load %struct.cpp_hashnode** %cmacro, align 8, !tbaa !23
  %cmp = icmp eq %struct.cpp_hashnode* %1, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %mi_cmacro = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 12
  %2 = load %struct.cpp_hashnode** %mi_cmacro, align 8, !tbaa !75
  store %struct.cpp_hashnode* %2, %struct.cpp_hashnode** %cmacro, align 8, !tbaa !23
  br label %if.end

if.end:                                           ; preds = %entry, %if.then, %land.lhs.true
  store i8 0, i8* %mi_valid, align 1, !tbaa !74
  %refcnt = getelementptr inbounds %struct.include_file* %inc, i64 0, i32 8
  %3 = load i16* %refcnt, align 2, !tbaa !73
  %dec = add i16 %3, -1
  store i16 %dec, i16* %refcnt, align 2, !tbaa !73
  %cmp4 = icmp eq i16 %dec, 0
  br i1 %cmp4, label %land.lhs.true6, label %if.end17

land.lhs.true6:                                   ; preds = %if.end
  %cmacro7 = getelementptr inbounds %struct.include_file* %inc, i64 0, i32 1
  %4 = load %struct.cpp_hashnode** %cmacro7, align 8, !tbaa !23
  %magicptr = ptrtoint %struct.cpp_hashnode* %4 to i64
  switch i64 %magicptr, label %lor.lhs.false [
    i64 0, label %if.end17
    i64 -1, label %if.then16
  ]

lor.lhs.false:                                    ; preds = %land.lhs.true6
  %type = getelementptr inbounds %struct.cpp_hashnode* %4, i64 0, i32 4
  %bf.load = load i8* %type, align 4
  %cmp14 = icmp eq i8 %bf.load, 1
  br i1 %cmp14, label %if.then16, label %if.end17

if.then16:                                        ; preds = %land.lhs.true6, %lor.lhs.false
  %buffer.i = getelementptr inbounds %struct.include_file* %inc, i64 0, i32 3
  %5 = load i8** %buffer.i, align 8, !tbaa !19
  %tobool.i = icmp eq i8* %5, null
  br i1 %tobool.i, label %if.end17, label %if.then.i

if.then.i:                                        ; preds = %if.then16
  tail call void @free(i8* %5) #4
  store i8* null, i8** %buffer.i, align 8, !tbaa !19
  br label %if.end17

if.end17:                                         ; preds = %if.then.i, %if.then16, %land.lhs.true6, %lor.lhs.false, %if.end
  %buffer = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 0
  %6 = load %struct.cpp_buffer** %buffer, align 8, !tbaa !50
  %tobool18 = icmp eq %struct.cpp_buffer* %6, null
  br i1 %tobool18, label %if.end24, label %if.then19

if.then19:                                        ; preds = %if.end17
  tail call void @_cpp_do_file_change(%struct.cpp_reader* %pfile, i32 1, i8* null, i32 0, i32 0) #4
  %7 = load %struct.cpp_buffer** %buffer, align 8, !tbaa !50
  %prev = getelementptr inbounds %struct.cpp_buffer* %7, i64 0, i32 4
  %8 = load %struct.cpp_buffer** %prev, align 8, !tbaa !78
  %tobool21 = icmp eq %struct.cpp_buffer* %8, null
  br i1 %tobool21, label %if.then22, label %if.end24

if.then22:                                        ; preds = %if.then19
  %call = tail call zeroext i1 @_cpp_push_next_buffer(%struct.cpp_reader* %pfile) #4
  br label %if.end24

if.end24:                                         ; preds = %if.then19, %if.end17, %if.then22
  %pushed.0 = phi i1 [ false, %if.then19 ], [ %call, %if.then22 ], [ false, %if.end17 ]
  ret i1 %pushed.0
}

declare zeroext i1 @_cpp_push_next_buffer(%struct.cpp_reader*) #1

; Function Attrs: nounwind uwtable
define i8* @_cpp_simplify_pathname(i8* %path) #0 {
entry:
  %s.i = alloca %struct.stat, align 8
  %call = tail call i32* @__errno_location() #6
  store i32 0, i32* %call, align 4, !tbaa !25
  %0 = load i8* %path, align 1, !tbaa !27
  switch i8 %0, label %if.end23 [
    i8 0, label %return
    i8 47, label %if.then5
  ]

if.then5:                                         ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8* %path, i64 1
  %1 = load i8* %incdec.ptr, align 1, !tbaa !27
  %cmp8 = icmp eq i8 %1, 47
  br i1 %cmp8, label %if.then10, label %if.end23

if.then10:                                        ; preds = %if.then5
  %incdec.ptr11 = getelementptr inbounds i8* %path, i64 2
  %2 = load i8* %incdec.ptr11, align 1, !tbaa !27
  %cmp13 = icmp eq i8 %2, 47
  br i1 %cmp13, label %while.cond, label %if.end23

while.cond:                                       ; preds = %if.then10, %while.cond
  %from.0 = phi i8* [ %incdec.ptr16, %while.cond ], [ %incdec.ptr11, %if.then10 ]
  %incdec.ptr16 = getelementptr inbounds i8* %from.0, i64 1
  %3 = load i8* %incdec.ptr16, align 1, !tbaa !27
  %cmp18 = icmp eq i8 %3, 47
  br i1 %cmp18, label %while.cond, label %if.end23

if.end23:                                         ; preds = %while.cond, %if.then10, %entry, %if.then5
  %from.1 = phi i8* [ %incdec.ptr, %if.then5 ], [ %path, %entry ], [ %incdec.ptr11, %if.then10 ], [ %incdec.ptr16, %while.cond ]
  %to.0 = phi i8* [ %incdec.ptr, %if.then5 ], [ %path, %entry ], [ %incdec.ptr11, %if.then10 ], [ %incdec.ptr, %while.cond ]
  %absolute.0 = phi i1 [ true, %if.then5 ], [ false, %entry ], [ true, %if.then10 ], [ true, %while.cond ]
  %4 = bitcast %struct.stat* %s.i to i8*
  %st_mode.i = getelementptr inbounds %struct.stat* %s.i, i64 0, i32 3
  br label %for.cond.outer.outer

for.cond.outer.outer:                             ; preds = %while.end112, %if.end23
  %from.2.ph.ph = phi i8* [ %from.1, %if.end23 ], [ %from.4, %while.end112 ]
  %to.1.ph.ph = phi i8* [ %to.0, %if.end23 ], [ %to.3, %while.end112 ]
  %base.0.ph.ph = phi i8* [ %to.0, %if.end23 ], [ %base.0.to.3, %while.end112 ]
  br i1 %absolute.0, label %for.cond.outer.us.outer, label %for.cond.outer.for.cond.outer.split_crit_edge.outer

for.cond.outer.us.outer:                          ; preds = %while.cond80.us, %land.rhs.us, %for.cond.outer.outer
  %from.2.ph.us.ph = phi i8* [ %from.2.ph.ph, %for.cond.outer.outer ], [ %arrayidx55.us182, %land.rhs.us ], [ %arrayidx55.us182, %while.cond80.us ]
  %to.1.ph.us.ph240 = phi i8* [ %to.1.ph.ph, %for.cond.outer.outer ], [ %incdec.ptr87.us, %while.cond80.us ], [ %to.2174.us, %land.rhs.us ]
  br label %for.cond.outer.us

for.cond.outer.us:                                ; preds = %for.cond.outer.us.outer, %while.cond80.preheader.us
  %from.2.ph.us = phi i8* [ %arrayidx55.us182, %while.cond80.preheader.us ], [ %from.2.ph.us.ph, %for.cond.outer.us.outer ]
  %cmp65.us = icmp eq i8* %to.0, %to.1.ph.us.ph240
  br i1 %cmp65.us, label %while.cond24.us.us, label %while.cond24.us176

while.cond24.us176:                               ; preds = %for.cond.backedge.us190, %while.body28.us186, %for.cond.outer.us
  %from.3.us177 = phi i8* [ %from.2.ph.us, %for.cond.outer.us ], [ %incdec.ptr29.us187, %while.body28.us186 ], [ %add.ptr.us185, %for.cond.backedge.us190 ]
  %5 = load i8* %from.3.us177, align 1, !tbaa !27
  switch i8 %5, label %if.end94 [
    i8 47, label %while.body28.us186
    i8 0, label %for.end
    i8 46, label %if.then39.us178
  ]

if.then39.us178:                                  ; preds = %while.cond24.us176
  %arrayidx.us180 = getelementptr inbounds i8* %from.3.us177, i64 1
  %6 = load i8* %arrayidx.us180, align 1, !tbaa !27
  switch i8 %6, label %if.end94 [
    i8 0, label %for.end
    i8 47, label %for.cond.backedge.us190
    i8 46, label %land.lhs.true.us181
  ]

land.lhs.true.us181:                              ; preds = %if.then39.us178
  %arrayidx55.us182 = getelementptr inbounds i8* %from.3.us177, i64 2
  %7 = load i8* %arrayidx55.us182, align 1, !tbaa !27
  switch i8 %7, label %if.end94 [
    i8 47, label %if.end69.us
    i8 0, label %if.end69.us
  ]

if.end69.us:                                      ; preds = %land.lhs.true.us181, %land.lhs.true.us181
  %cmp70.us = icmp eq i8* %base.0.ph.ph, %to.1.ph.us.ph240
  br i1 %cmp70.us, label %if.end94, label %land.lhs.true72.us

land.lhs.true72.us:                               ; preds = %if.end69.us
  %8 = load i32* %call, align 4, !tbaa !25
  %cmp74.us = icmp eq i32 %8, 0
  br i1 %cmp74.us, label %if.then76.us, label %if.end94

if.then76.us:                                     ; preds = %land.lhs.true72.us
  store i8 0, i8* %to.1.ph.us.ph240, align 1, !tbaa !27
  call void @llvm.lifetime.start(i64 144, i8* %4) #4
  %call.i.us = call i32 @stat(i8* %path, %struct.stat* %s.i) #4
  %cmp.i.us = icmp eq i32 %call.i.us, 0
  br i1 %cmp.i.us, label %if.then.i.us, label %if.end94

if.then.i.us:                                     ; preds = %if.then76.us
  store i32 0, i32* %call, align 4, !tbaa !25
  %9 = load i32* %st_mode.i, align 8, !tbaa !79
  %and.i.us = and i32 %9, 61440
  %cmp3.i.us = icmp eq i32 %and.i.us, 16384
  call void @llvm.lifetime.end(i64 144, i8* %4) #4
  br i1 %cmp3.i.us, label %while.cond80.preheader.us, label %if.end94

while.cond80.us:                                  ; preds = %land.rhs.us
  %cmp81.us = icmp ugt i8* %incdec.ptr87.us, %base.0.ph.ph
  br i1 %cmp81.us, label %land.rhs.us, label %for.cond.outer.us.outer

land.rhs.us:                                      ; preds = %while.cond80.preheader.us, %while.cond80.us
  %to.2174.us = phi i8* [ %incdec.ptr87.us, %while.cond80.us ], [ %to.1.ph.us.ph240, %while.cond80.preheader.us ]
  %10 = load i8* %to.2174.us, align 1, !tbaa !27
  %cmp84.us = icmp eq i8 %10, 47
  %incdec.ptr87.us = getelementptr inbounds i8* %to.2174.us, i64 -1
  br i1 %cmp84.us, label %for.cond.outer.us.outer, label %while.cond80.us

while.body28.us186:                               ; preds = %while.cond24.us176
  %incdec.ptr29.us187 = getelementptr inbounds i8* %from.3.us177, i64 1
  br label %while.cond24.us176

while.cond80.preheader.us:                        ; preds = %if.then.i.us
  %cmp81173.us = icmp ugt i8* %to.1.ph.us.ph240, %base.0.ph.ph
  br i1 %cmp81173.us, label %land.rhs.us, label %for.cond.outer.us

for.cond.backedge.us190:                          ; preds = %if.then39.us178
  %add.ptr.us185 = getelementptr inbounds i8* %from.3.us177, i64 2
  br label %while.cond24.us176

if.then39.us.us:                                  ; preds = %while.cond24.us.us
  %arrayidx.us.us = getelementptr inbounds i8* %from.3.us.us, i64 1
  %11 = load i8* %arrayidx.us.us, align 1, !tbaa !27
  switch i8 %11, label %while.cond100.preheader [
    i8 0, label %for.end
    i8 47, label %if.then49.us.us
    i8 46, label %land.lhs.true.us.us
  ]

land.lhs.true.us.us:                              ; preds = %if.then39.us.us
  %arrayidx55.us.us = getelementptr inbounds i8* %from.3.us.us, i64 2
  %12 = load i8* %arrayidx55.us.us, align 1, !tbaa !27
  switch i8 %12, label %while.cond100.preheader [
    i8 47, label %while.cond24.us.us
    i8 0, label %while.cond24.us.us
  ]

if.then49.us.us:                                  ; preds = %if.then39.us.us
  %add.ptr.us.us = getelementptr inbounds i8* %from.3.us.us, i64 2
  br label %while.cond24.us.us

while.cond24.us.us:                               ; preds = %if.then49.us.us, %land.lhs.true.us.us, %land.lhs.true.us.us, %while.body28.us.us, %for.cond.outer.us
  %from.3.us.us = phi i8* [ %from.2.ph.us, %for.cond.outer.us ], [ %incdec.ptr29.us.us, %while.body28.us.us ], [ %add.ptr.us.us, %if.then49.us.us ], [ %arrayidx55.us.us, %land.lhs.true.us.us ], [ %arrayidx55.us.us, %land.lhs.true.us.us ]
  %13 = load i8* %from.3.us.us, align 1, !tbaa !27
  switch i8 %13, label %while.cond100.preheader [
    i8 47, label %while.body28.us.us
    i8 0, label %for.end
    i8 46, label %if.then39.us.us
  ]

while.body28.us.us:                               ; preds = %while.cond24.us.us
  %incdec.ptr29.us.us = getelementptr inbounds i8* %from.3.us.us, i64 1
  br label %while.cond24.us.us

for.cond.outer.for.cond.outer.split_crit_edge.outer: ; preds = %while.cond80, %land.rhs, %for.cond.outer.outer
  %from.2.ph.ph244 = phi i8* [ %from.2.ph.ph, %for.cond.outer.outer ], [ %arrayidx55, %land.rhs ], [ %arrayidx55, %while.cond80 ]
  %to.1.ph.ph245 = phi i8* [ %to.1.ph.ph, %for.cond.outer.outer ], [ %incdec.ptr87, %while.cond80 ], [ %to.2174, %land.rhs ]
  br label %while.cond24

while.cond24:                                     ; preds = %if.then49, %while.body28, %while.cond80.preheader, %for.cond.outer.for.cond.outer.split_crit_edge.outer
  %from.3 = phi i8* [ %arrayidx55, %while.cond80.preheader ], [ %from.2.ph.ph244, %for.cond.outer.for.cond.outer.split_crit_edge.outer ], [ %incdec.ptr29, %while.body28 ], [ %add.ptr, %if.then49 ]
  %14 = load i8* %from.3, align 1, !tbaa !27
  switch i8 %14, label %if.end94 [
    i8 47, label %while.body28
    i8 0, label %for.end
    i8 46, label %if.then39
  ]

while.body28:                                     ; preds = %while.cond24
  %incdec.ptr29 = getelementptr inbounds i8* %from.3, i64 1
  br label %while.cond24

if.then39:                                        ; preds = %while.cond24
  %arrayidx = getelementptr inbounds i8* %from.3, i64 1
  %15 = load i8* %arrayidx, align 1, !tbaa !27
  switch i8 %15, label %if.end94 [
    i8 0, label %for.end
    i8 47, label %if.then49
    i8 46, label %land.lhs.true
  ]

if.then49:                                        ; preds = %if.then39
  %add.ptr = getelementptr inbounds i8* %from.3, i64 2
  br label %while.cond24

land.lhs.true:                                    ; preds = %if.then39
  %arrayidx55 = getelementptr inbounds i8* %from.3, i64 2
  %16 = load i8* %arrayidx55, align 1, !tbaa !27
  switch i8 %16, label %if.end94 [
    i8 47, label %if.end69
    i8 0, label %if.end69
  ]

if.end69:                                         ; preds = %land.lhs.true, %land.lhs.true
  %cmp70 = icmp eq i8* %base.0.ph.ph, %to.1.ph.ph245
  br i1 %cmp70, label %if.end94, label %land.lhs.true72

land.lhs.true72:                                  ; preds = %if.end69
  %17 = load i32* %call, align 4, !tbaa !25
  %cmp74 = icmp eq i32 %17, 0
  br i1 %cmp74, label %if.then76, label %if.end94

if.then76:                                        ; preds = %land.lhs.true72
  store i8 0, i8* %to.1.ph.ph245, align 1, !tbaa !27
  call void @llvm.lifetime.start(i64 144, i8* %4) #4
  %call.i = call i32 @stat(i8* %path, %struct.stat* %s.i) #4
  %cmp.i = icmp eq i32 %call.i, 0
  br i1 %cmp.i, label %if.then.i, label %if.end94

if.then.i:                                        ; preds = %if.then76
  store i32 0, i32* %call, align 4, !tbaa !25
  %18 = load i32* %st_mode.i, align 8, !tbaa !79
  %and.i = and i32 %18, 61440
  %cmp3.i = icmp eq i32 %and.i, 16384
  call void @llvm.lifetime.end(i64 144, i8* %4) #4
  br i1 %cmp3.i, label %while.cond80.preheader, label %if.end94

while.cond80.preheader:                           ; preds = %if.then.i
  %cmp81173 = icmp ugt i8* %to.1.ph.ph245, %base.0.ph.ph
  br i1 %cmp81173, label %land.rhs, label %while.cond24

while.cond80:                                     ; preds = %land.rhs
  %cmp81 = icmp ugt i8* %incdec.ptr87, %base.0.ph.ph
  br i1 %cmp81, label %land.rhs, label %for.cond.outer.for.cond.outer.split_crit_edge.outer

land.rhs:                                         ; preds = %while.cond80.preheader, %while.cond80
  %to.2174 = phi i8* [ %incdec.ptr87, %while.cond80 ], [ %to.1.ph.ph245, %while.cond80.preheader ]
  %19 = load i8* %to.2174, align 1, !tbaa !27
  %cmp84 = icmp eq i8 %19, 47
  %incdec.ptr87 = getelementptr inbounds i8* %to.2174, i64 -1
  br i1 %cmp84, label %for.cond.outer.for.cond.outer.split_crit_edge.outer, label %while.cond80

if.end94:                                         ; preds = %if.then76, %if.then.i, %land.lhs.true72, %if.end69, %land.lhs.true, %if.then.i.us, %if.then76.us, %land.lhs.true72.us, %if.end69.us, %land.lhs.true.us181, %if.then39, %while.cond24, %if.then39.us178, %while.cond24.us176
  %to.1.ph172 = phi i8* [ %to.1.ph.us.ph240, %while.cond24.us176 ], [ %to.1.ph.us.ph240, %if.then39.us178 ], [ %to.1.ph.ph245, %while.cond24 ], [ %to.1.ph.ph245, %if.then39 ], [ %to.1.ph.us.ph240, %if.then.i.us ], [ %to.1.ph.us.ph240, %if.then76.us ], [ %to.1.ph.us.ph240, %land.lhs.true72.us ], [ %base.0.ph.ph, %if.end69.us ], [ %to.1.ph.us.ph240, %land.lhs.true.us181 ], [ %to.1.ph.ph245, %if.then76 ], [ %to.1.ph.ph245, %if.then.i ], [ %to.1.ph.ph245, %land.lhs.true72 ], [ %base.0.ph.ph, %if.end69 ], [ %to.1.ph.ph245, %land.lhs.true ]
  %from.3164 = phi i8* [ %from.3.us177, %while.cond24.us176 ], [ %from.3.us177, %if.then39.us178 ], [ %from.3, %while.cond24 ], [ %from.3, %if.then39 ], [ %from.3.us177, %land.lhs.true.us181 ], [ %from.3.us177, %if.end69.us ], [ %from.3.us177, %land.lhs.true72.us ], [ %from.3.us177, %if.then76.us ], [ %from.3.us177, %if.then.i.us ], [ %from.3, %land.lhs.true ], [ %from.3, %if.end69 ], [ %from.3, %land.lhs.true72 ], [ %from.3, %if.then.i ], [ %from.3, %if.then76 ]
  %move_base.0 = phi i32 [ 0, %while.cond24.us176 ], [ 0, %if.then39.us178 ], [ 0, %while.cond24 ], [ 0, %if.then39 ], [ 1, %if.then.i.us ], [ 1, %if.then76.us ], [ 1, %land.lhs.true72.us ], [ 1, %if.end69.us ], [ 0, %land.lhs.true.us181 ], [ 1, %if.then76 ], [ 1, %if.then.i ], [ 1, %land.lhs.true72 ], [ 1, %if.end69 ], [ 0, %land.lhs.true ]
  %cmp95 = icmp ugt i8* %to.1.ph172, %to.0
  br i1 %cmp95, label %if.then97, label %while.cond100.preheader

if.then97:                                        ; preds = %if.end94
  %incdec.ptr98 = getelementptr inbounds i8* %to.1.ph172, i64 1
  store i8 47, i8* %to.1.ph172, align 1, !tbaa !27
  br label %while.cond100.preheader

while.cond100.preheader:                          ; preds = %land.lhs.true.us.us, %if.then39.us.us, %while.cond24.us.us, %if.then97, %if.end94
  %move_base.0234 = phi i32 [ %move_base.0, %if.end94 ], [ %move_base.0, %if.then97 ], [ 0, %while.cond24.us.us ], [ 0, %if.then39.us.us ], [ 0, %land.lhs.true.us.us ]
  %from.3164233 = phi i8* [ %from.3164, %if.end94 ], [ %from.3164, %if.then97 ], [ %from.3.us.us, %while.cond24.us.us ], [ %from.3.us.us, %if.then39.us.us ], [ %from.3.us.us, %land.lhs.true.us.us ]
  %to.3.ph = phi i8* [ %to.1.ph172, %if.end94 ], [ %incdec.ptr98, %if.then97 ], [ %to.0, %while.cond24.us.us ], [ %to.0, %if.then39.us.us ], [ %to.0, %land.lhs.true.us.us ]
  br label %while.cond100

while.cond100:                                    ; preds = %while.cond100.preheader, %while.body109
  %from.4 = phi i8* [ %incdec.ptr110, %while.body109 ], [ %from.3164233, %while.cond100.preheader ]
  %to.3 = phi i8* [ %incdec.ptr111, %while.body109 ], [ %to.3.ph, %while.cond100.preheader ]
  %20 = load i8* %from.4, align 1, !tbaa !27
  switch i8 %20, label %while.body109 [
    i8 0, label %while.end112
    i8 47, label %while.end112
  ]

while.body109:                                    ; preds = %while.cond100
  %incdec.ptr110 = getelementptr inbounds i8* %from.4, i64 1
  %incdec.ptr111 = getelementptr inbounds i8* %to.3, i64 1
  store i8 %20, i8* %to.3, align 1, !tbaa !27
  br label %while.cond100

while.end112:                                     ; preds = %while.cond100, %while.cond100
  %tobool113 = icmp eq i32 %move_base.0234, 0
  %base.0.to.3 = select i1 %tobool113, i8* %base.0.ph.ph, i8* %to.3
  br label %for.cond.outer.outer

for.end:                                          ; preds = %if.then39.us.us, %while.cond24.us.us, %if.then39, %while.cond24, %if.then39.us178, %while.cond24.us176
  %to.1.ph171 = phi i8* [ %to.1.ph.us.ph240, %while.cond24.us176 ], [ %to.1.ph.us.ph240, %if.then39.us178 ], [ %to.1.ph.ph245, %while.cond24 ], [ %to.1.ph.ph245, %if.then39 ], [ %to.0, %while.cond24.us.us ], [ %to.0, %if.then39.us.us ]
  %cmp116 = icmp eq i8* %to.1.ph171, %path
  br i1 %cmp116, label %if.then118, label %if.end120

if.then118:                                       ; preds = %for.end
  %incdec.ptr119 = getelementptr inbounds i8* %path, i64 1
  store i8 46, i8* %path, align 1, !tbaa !27
  br label %if.end120

if.end120:                                        ; preds = %if.then118, %for.end
  %to.4 = phi i8* [ %incdec.ptr119, %if.then118 ], [ %to.1.ph171, %for.end ]
  store i8 0, i8* %to.4, align 1, !tbaa !27
  br label %return

return:                                           ; preds = %entry, %if.end120
  ret i8* %path
}

; Function Attrs: nounwind readnone
declare i32* @__errno_location() #5

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #4

; Function Attrs: nounwind
declare i32 @stat(i8* nocapture readonly, %struct.stat* nocapture) #3

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #4

; Function Attrs: nounwind uwtable
define internal fastcc %struct.file_name_map* @read_name_map(%struct.cpp_reader* nocapture %pfile, i8* %dirname) #0 {
entry:
  %map_list = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 7
  %map_list_ptr.0136 = load %struct.file_name_map_list** %map_list, align 8
  %tobool137 = icmp eq %struct.file_name_map_list* %map_list_ptr.0136, null
  br i1 %tobool137, label %for.end, label %for.body

for.cond:                                         ; preds = %for.body
  %map_list_next = getelementptr inbounds %struct.file_name_map_list* %map_list_ptr.0138, i64 0, i32 0
  %map_list_ptr.0 = load %struct.file_name_map_list** %map_list_next, align 8
  %tobool = icmp eq %struct.file_name_map_list* %map_list_ptr.0, null
  br i1 %tobool, label %for.end, label %for.body

for.body:                                         ; preds = %entry, %for.cond
  %map_list_ptr.0138 = phi %struct.file_name_map_list* [ %map_list_ptr.0, %for.cond ], [ %map_list_ptr.0136, %entry ]
  %map_list_name = getelementptr inbounds %struct.file_name_map_list* %map_list_ptr.0138, i64 0, i32 1
  %0 = load i8** %map_list_name, align 8, !tbaa !80
  %call = call i32 @strcmp(i8* %0, i8* %dirname) #4
  %tobool1 = icmp eq i32 %call, 0
  br i1 %tobool1, label %if.then, label %for.cond

if.then:                                          ; preds = %for.body
  %map_list_map = getelementptr inbounds %struct.file_name_map_list* %map_list_ptr.0138, i64 0, i32 2
  br label %return

for.end:                                          ; preds = %for.cond, %entry
  %call2 = call noalias i8* @xmalloc(i64 24) #4
  %1 = bitcast i8* %call2 to %struct.file_name_map_list*
  %call3 = call noalias i8* @xstrdup(i8* %dirname) #4
  %map_list_name4 = getelementptr inbounds i8* %call2, i64 8
  %2 = bitcast i8* %map_list_name4 to i8**
  store i8* %call3, i8** %2, align 8, !tbaa !80
  %map_list_map5 = getelementptr inbounds i8* %call2, i64 16
  %3 = bitcast i8* %map_list_map5 to %struct.file_name_map**
  store %struct.file_name_map* null, %struct.file_name_map** %3, align 8, !tbaa !82
  %call6 = call i64 @strlen(i8* %dirname) #4
  %add7 = add i64 %call6, 12
  %4 = alloca i8, i64 %add7, align 1
  %call8 = call i8* @strcpy(i8* %4, i8* %dirname) #4
  %5 = load i8* %dirname, align 1, !tbaa !27
  %tobool9 = icmp eq i8 %5, 0
  br i1 %tobool9, label %if.end12, label %if.then10

if.then10:                                        ; preds = %for.end
  %strlen130 = call i64 @strlen(i8* %4) #4
  %endptr131 = getelementptr i8* %4, i64 %strlen130
  %6 = bitcast i8* %endptr131 to i16*
  store i16 47, i16* %6, align 1
  br label %if.end12

if.end12:                                         ; preds = %for.end, %if.then10
  %strlen = call i64 @strlen(i8* %4) #4
  %endptr = getelementptr i8* %4, i64 %strlen
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %endptr, i8* getelementptr inbounds ([11 x i8]* @.str2, i64 0, i64 0), i64 11, i32 1, i1 false)
  %call14 = call %struct._IO_FILE* @fopen(i8* %4, i8* getelementptr inbounds ([2 x i8]* @.str3, i64 0, i64 0)) #4
  %tobool15 = icmp eq %struct._IO_FILE* %call14, null
  br i1 %tobool15, label %if.end77, label %if.then16

if.then16:                                        ; preds = %if.end12
  %call17 = call i64 @strlen(i8* %dirname) #4
  %call18133 = call i32 @getc(%struct._IO_FILE* %call14) #4
  %cmp134 = icmp eq i32 %call18133, -1
  br i1 %cmp134, label %while.end75, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %if.then16
  %sext = shl i64 %call17, 32
  %conv48 = ashr exact i64 %sext, 32
  %add50 = add i64 %conv48, 2
  %add.ptr.sum = add i64 %conv48, 1
  br label %while.body

while.body:                                       ; preds = %while.body.lr.ph, %while.cond.backedge
  %call18135 = phi i32 [ %call18133, %while.body.lr.ph ], [ %call18, %while.cond.backedge ]
  %and = and i32 %call18135, 255
  %idxprom128 = zext i32 %and to i64
  %arrayidx = getelementptr inbounds [256 x i16]* @_sch_istable, i64 0, i64 %idxprom128
  %7 = load i16* %arrayidx, align 2, !tbaa !83
  %and21 = and i16 %7, 3072
  %tobool22 = icmp eq i16 %and21, 0
  br i1 %tobool22, label %if.end24, label %while.cond.backedge

while.cond.backedge:                              ; preds = %while.cond65, %while.cond65, %while.body
  %call18 = call i32 @getc(%struct._IO_FILE* %call14) #4
  %cmp = icmp eq i32 %call18, -1
  br i1 %cmp, label %while.end75, label %while.body

if.end24:                                         ; preds = %while.body
  %call25 = call fastcc i8* @read_filename_string(i32 %call18135, %struct._IO_FILE* %call14)
  br label %while.cond26

while.cond26:                                     ; preds = %land.rhs, %if.end24
  %call27 = call i32 @getc(%struct._IO_FILE* %call14) #4
  %cmp28 = icmp eq i32 %call27, -1
  br i1 %cmp28, label %while.end, label %land.rhs

land.rhs:                                         ; preds = %while.cond26
  %and30 = and i32 %call27, 255
  %idxprom31129 = zext i32 %and30 to i64
  %arrayidx32 = getelementptr inbounds [256 x i16]* @_sch_istable, i64 0, i64 %idxprom31129
  %8 = load i16* %arrayidx32, align 2, !tbaa !83
  %and34 = and i16 %8, 1
  %tobool35 = icmp eq i16 %and34, 0
  br i1 %tobool35, label %while.end, label %while.cond26

while.end:                                        ; preds = %land.rhs, %while.cond26
  %call27.lcssa = phi i32 [ %call27, %land.rhs ], [ -1, %while.cond26 ]
  %call37 = call fastcc i8* @read_filename_string(i32 %call27.lcssa, %struct._IO_FILE* %call14)
  %call38 = call noalias i8* @xmalloc(i64 24) #4
  %9 = bitcast i8* %call38 to %struct.file_name_map*
  %map_from = getelementptr inbounds i8* %call38, i64 8
  %10 = bitcast i8* %map_from to i8**
  store i8* %call25, i8** %10, align 8, !tbaa !36
  %11 = load i8* %call37, align 1, !tbaa !27
  switch i8 %11, label %if.else [
    i8 47, label %if.then47
    i8 36, label %if.then47
  ]

if.then47:                                        ; preds = %while.end, %while.end
  %map_to = getelementptr inbounds i8* %call38, i64 16
  %12 = bitcast i8* %map_to to i8**
  store i8* %call37, i8** %12, align 8, !tbaa !38
  br label %if.end62

if.else:                                          ; preds = %while.end
  %call49 = call i64 @strlen(i8* %call37) #4
  %add51 = add i64 %add50, %call49
  %call52 = call noalias i8* @xmalloc(i64 %add51) #4
  %map_to53 = getelementptr inbounds i8* %call38, i64 16
  %13 = bitcast i8* %map_to53 to i8**
  store i8* %call52, i8** %13, align 8, !tbaa !38
  %call55 = call i8* @strcpy(i8* %call52, i8* %dirname) #4
  %14 = load i8** %13, align 8, !tbaa !38
  %arrayidx58 = getelementptr inbounds i8* %14, i64 %conv48
  store i8 47, i8* %arrayidx58, align 1, !tbaa !27
  %15 = load i8** %13, align 8, !tbaa !38
  %add.ptr60 = getelementptr inbounds i8* %15, i64 %add.ptr.sum
  %call61 = call i8* @strcpy(i8* %add.ptr60, i8* %call37) #4
  call void @free(i8* %call37)
  br label %if.end62

if.end62:                                         ; preds = %if.else, %if.then47
  %16 = load %struct.file_name_map** %3, align 8, !tbaa !82
  %map_next = bitcast i8* %call38 to %struct.file_name_map**
  store %struct.file_name_map* %16, %struct.file_name_map** %map_next, align 8, !tbaa !39
  store %struct.file_name_map* %9, %struct.file_name_map** %3, align 8, !tbaa !82
  br label %while.cond65

while.cond65:                                     ; preds = %while.cond65, %if.end62
  %call66 = call i32 @getc(%struct._IO_FILE* %call14) #4
  switch i32 %call66, label %while.cond65 [
    i32 -1, label %while.cond.backedge
    i32 10, label %while.cond.backedge
  ]

while.end75:                                      ; preds = %while.cond.backedge, %if.then16
  %call76 = call i32 @fclose(%struct._IO_FILE* %call14) #4
  br label %if.end77

if.end77:                                         ; preds = %if.end12, %while.end75
  %17 = load %struct.file_name_map_list** %map_list, align 8, !tbaa !84
  %map_list_next80 = bitcast i8* %call2 to %struct.file_name_map_list**
  store %struct.file_name_map_list* %17, %struct.file_name_map_list** %map_list_next80, align 8, !tbaa !85
  store %struct.file_name_map_list* %1, %struct.file_name_map_list** %map_list, align 8, !tbaa !84
  br label %return

return:                                           ; preds = %if.end77, %if.then
  %retval.0.in = phi %struct.file_name_map** [ %map_list_map, %if.then ], [ %3, %if.end77 ]
  %retval.0 = load %struct.file_name_map** %retval.0.in, align 8
  ret %struct.file_name_map* %retval.0
}

; Function Attrs: nounwind readonly
declare i8* @strrchr(i8*, i32) #2

declare void @cpp_ice(%struct.cpp_reader*, i8*, ...) #1

declare noalias i8* @xmalloc(i64) #1

declare noalias i8* @xstrdup(i8*) #1

; Function Attrs: nounwind
declare noalias %struct._IO_FILE* @fopen(i8* nocapture readonly, i8* nocapture readonly) #3

; Function Attrs: nounwind
declare i32 @getc(%struct._IO_FILE* nocapture) #3

; Function Attrs: nounwind uwtable
define internal fastcc i8* @read_filename_string(i32 %ch, %struct._IO_FILE* nocapture %f) #0 {
entry:
  %call = tail call noalias i8* @xmalloc(i64 21) #4
  %and = and i32 %ch, 255
  %idxprom38 = zext i32 %and to i64
  %arrayidx = getelementptr inbounds [256 x i16]* @_sch_istable, i64 0, i64 %idxprom38
  %0 = load i16* %arrayidx, align 2, !tbaa !83
  %and2 = and i16 %0, 3072
  %tobool = icmp eq i16 %and2, 0
  br i1 %tobool, label %if.then, label %if.end21

if.then:                                          ; preds = %entry
  %conv3 = trunc i32 %ch to i8
  store i8 %conv3, i8* %call, align 1, !tbaa !27
  %set.041 = getelementptr inbounds i8* %call, i64 1
  %call442 = tail call i32 @getc(%struct._IO_FILE* %f) #4
  %cmp43 = icmp eq i32 %call442, -1
  br i1 %cmp43, label %if.end21, label %land.rhs

land.rhs:                                         ; preds = %if.then, %if.end
  %call447 = phi i32 [ %call4, %if.end ], [ %call442, %if.then ]
  %set.046 = phi i8* [ %set.0, %if.end ], [ %set.041, %if.then ]
  %len.045 = phi i32 [ %len.1, %if.end ], [ 20, %if.then ]
  %alloc.044 = phi i8* [ %alloc.1, %if.end ], [ %call, %if.then ]
  %and6 = and i32 %call447, 255
  %idxprom739 = zext i32 %and6 to i64
  %arrayidx8 = getelementptr inbounds [256 x i16]* @_sch_istable, i64 0, i64 %idxprom739
  %1 = load i16* %arrayidx8, align 2, !tbaa !83
  %and10 = and i16 %1, 3072
  %lnot = icmp eq i16 %and10, 0
  br i1 %lnot, label %while.body, label %if.end21

while.body:                                       ; preds = %land.rhs
  %sub.ptr.lhs.cast = ptrtoint i8* %set.046 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %alloc.044 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv12 = sext i32 %len.045 to i64
  %cmp13 = icmp eq i64 %sub.ptr.sub, %conv12
  br i1 %cmp13, label %if.then15, label %if.end

if.then15:                                        ; preds = %while.body
  %mul = shl nsw i32 %len.045, 1
  %add1640 = or i32 %mul, 1
  %conv17 = sext i32 %add1640 to i64
  %call18 = tail call i8* @xrealloc(i8* %alloc.044, i64 %conv17) #4
  %add.ptr = getelementptr inbounds i8* %call18, i64 %sub.ptr.sub
  br label %if.end

if.end:                                           ; preds = %if.then15, %while.body
  %alloc.1 = phi i8* [ %call18, %if.then15 ], [ %alloc.044, %while.body ]
  %set.1 = phi i8* [ %add.ptr, %if.then15 ], [ %set.046, %while.body ]
  %len.1 = phi i32 [ %mul, %if.then15 ], [ %len.045, %while.body ]
  %conv19 = trunc i32 %call447 to i8
  store i8 %conv19, i8* %set.1, align 1, !tbaa !27
  %set.0 = getelementptr inbounds i8* %set.1, i64 1
  %call4 = tail call i32 @getc(%struct._IO_FILE* %f) #4
  %cmp = icmp eq i32 %call4, -1
  br i1 %cmp, label %if.end21, label %land.rhs

if.end21:                                         ; preds = %land.rhs, %if.end, %if.then, %entry
  %ch.addr.0 = phi i32 [ %ch, %entry ], [ -1, %if.then ], [ %call447, %land.rhs ], [ -1, %if.end ]
  %alloc.2 = phi i8* [ %call, %entry ], [ %call, %if.then ], [ %alloc.044, %land.rhs ], [ %alloc.1, %if.end ]
  %set.2 = phi i8* [ %call, %entry ], [ %set.041, %if.then ], [ %set.046, %land.rhs ], [ %set.0, %if.end ]
  store i8 0, i8* %set.2, align 1, !tbaa !27
  %call22 = tail call i32 @ungetc(i32 %ch.addr.0, %struct._IO_FILE* %f) #4
  ret i8* %alloc.2
}

; Function Attrs: nounwind
declare i32 @fclose(%struct._IO_FILE* nocapture) #3

declare i8* @xrealloc(i8*, i64) #1

; Function Attrs: nounwind
declare i32 @ungetc(i32, %struct._IO_FILE* nocapture) #3

declare i32 @open(i8* nocapture readonly, i32, ...) #1

; Function Attrs: nounwind
declare i32 @fstat(i32, %struct.stat* nocapture) #3

declare void @deps_add_dep(%struct.deps*, i8*) #1

declare %struct.cpp_buffer* @cpp_push_buffer(%struct.cpp_reader*, i8*, i64, i32, i32) #1

declare void @cpp_error(%struct.cpp_reader*, i8*, ...) #1

declare i64 @read(i32, i8* nocapture, i64) #1

declare void @cpp_warning(%struct.cpp_reader*, i8*, ...) #1

declare i8* @xstrerror(i32) #1

declare i8* @lbasename(i8*) #1

; Function Attrs: nounwind
declare i32 @fputs(i8* nocapture readonly, %struct._IO_FILE* nocapture) #3

; Function Attrs: nounwind
declare i32 @putc(i32, %struct._IO_FILE* nocapture) #3

declare noalias i8* @xcalloc(i64, i64) #1

declare %struct.splay_tree_node_s* @splay_tree_insert(%struct.splay_tree_s*, i64, i64) #1

; Function Attrs: nounwind
declare i64 @fwrite(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) #4

attributes #0 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readonly "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { nounwind readnone "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone }
attributes #7 = { cold }
attributes #8 = { cold nounwind }

!llvm.ident = !{!0}

!0 = metadata !{metadata !"clang version 3.5 (trunk)"}
!1 = metadata !{metadata !2, metadata !3, i64 280}
!2 = metadata !{metadata !"cpp_reader", metadata !3, i64 0, metadata !6, i64 8, metadata !7, i64 24, metadata !3, i64 56, metadata !8, i64 64, metadata !8, i64 68, metadata !3, i64 72, metadata !3, i64 80, metadata !3, i64 88, metadata !10, i64 96, metadata !3, i64 152, metadata !3, i64 160, metadata !3, i64 168, metadata !3, i64 176, metadata !9, i64 184, metadata !3, i64 192, metadata !11, i64 200, metadata !3, i64 232, metadata !8, i64 240, metadata !8, i64 244, metadata !8, i64 248, metadata !8, i64 252, metadata !8, i64 256, metadata !3, i64 264, metadata !8, i64 272, metadata !3, i64 280, metadata !8, i64 288, metadata !12, i64 296, metadata !12, i64 320, metadata !12, i64 344, metadata !12, i64 368, metadata !3, i64 392, metadata !14, i64 400, metadata !14, i64 488, metadata !3, i64 576, metadata !16, i64 584, metadata !3, i64 640, metadata !17, i64 648, metadata !18, i64 784, metadata !4, i64 824, metadata !4, i64 825}
!3 = metadata !{metadata !"any pointer", metadata !4, i64 0}
!4 = metadata !{metadata !"omnipotent char", metadata !5, i64 0}
!5 = metadata !{metadata !"Simple C/C++ TBAA"}
!6 = metadata !{metadata !"lexer_state", metadata !4, i64 0, metadata !4, i64 1, metadata !4, i64 2, metadata !4, i64 3, metadata !4, i64 4, metadata !4, i64 5, metadata !4, i64 6, metadata !4, i64 7, metadata !4, i64 8}
!7 = metadata !{metadata !"line_maps", metadata !3, i64 0, metadata !8, i64 8, metadata !8, i64 12, metadata !8, i64 16, metadata !8, i64 20, metadata !9, i64 24}
!8 = metadata !{metadata !"int", metadata !4, i64 0}
!9 = metadata !{metadata !"_Bool", metadata !4, i64 0}
!10 = metadata !{metadata !"cpp_context", metadata !3, i64 0, metadata !3, i64 8, metadata !4, i64 16, metadata !4, i64 24, metadata !3, i64 32, metadata !3, i64 40, metadata !9, i64 48}
!11 = metadata !{metadata !"tokenrun", metadata !3, i64 0, metadata !3, i64 8, metadata !3, i64 16, metadata !3, i64 24}
!12 = metadata !{metadata !"cpp_token", metadata !8, i64 0, metadata !13, i64 4, metadata !4, i64 6, metadata !4, i64 7, metadata !4, i64 8}
!13 = metadata !{metadata !"short", metadata !4, i64 0}
!14 = metadata !{metadata !"obstack", metadata !15, i64 0, metadata !3, i64 8, metadata !3, i64 16, metadata !3, i64 24, metadata !3, i64 32, metadata !15, i64 40, metadata !8, i64 48, metadata !3, i64 56, metadata !3, i64 64, metadata !3, i64 72, metadata !8, i64 80, metadata !8, i64 80, metadata !8, i64 80}
!15 = metadata !{metadata !"long", metadata !4, i64 0}
!16 = metadata !{metadata !"cpp_callbacks", metadata !3, i64 0, metadata !3, i64 8, metadata !3, i64 16, metadata !3, i64 24, metadata !3, i64 32, metadata !3, i64 40, metadata !3, i64 48}
!17 = metadata !{metadata !"cpp_options", metadata !3, i64 0, metadata !3, i64 8, metadata !8, i64 16, metadata !3, i64 24, metadata !3, i64 32, metadata !3, i64 40, metadata !3, i64 48, metadata !3, i64 56, metadata !3, i64 64, metadata !8, i64 72, metadata !3, i64 80, metadata !4, i64 88, metadata !4, i64 92, metadata !4, i64 93, metadata !4, i64 94, metadata !4, i64 95, metadata !4, i64 96, metadata !4, i64 97, metadata !4, i64 98, metadata !4, i64 99, metadata !4, i64 100, metadata !4, i64 101, metadata !4, i64 102, metadata !4, i64 103, metadata !4, i64 104, metadata !4, i64 105, metadata !4, i64 106, metadata !4, i64 107, metadata !4, i64 108, metadata !4, i64 109, metadata !4, i64 110, metadata !4, i64 111, metadata !4, i64 112, metadata !4, i64 113, metadata !4, i64 114, metadata !4, i64 115, metadata !4, i64 116, metadata !4, i64 117, metadata !4, i64 118, metadata !4, i64 119, metadata !4, i64 120, metadata !4, i64 121, metadata !4, i64 122, metadata !4, i64 123, metadata !4, i64 124, metadata !4, i64 125, metadata !4, i64 126, metadata !4, i64 127, metadata !4, i64 128, metadata !4, i64 129, metadata !4, i64 130}
!18 = metadata !{metadata !"spec_nodes", metadata !3, i64 0, metadata !3, i64 8, metadata !3, i64 16, metadata !3, i64 24, metadata !3, i64 32}
!19 = metadata !{metadata !20, metadata !3, i64 24}
!20 = metadata !{metadata !"include_file", metadata !3, i64 0, metadata !3, i64 8, metadata !3, i64 16, metadata !3, i64 24, metadata !21, i64 32, metadata !8, i64 176, metadata !8, i64 180, metadata !13, i64 184, metadata !13, i64 186, metadata !4, i64 188}
!21 = metadata !{metadata !"stat", metadata !15, i64 0, metadata !15, i64 8, metadata !15, i64 16, metadata !8, i64 24, metadata !8, i64 28, metadata !8, i64 32, metadata !8, i64 36, metadata !15, i64 40, metadata !15, i64 48, metadata !15, i64 56, metadata !15, i64 64, metadata !22, i64 72, metadata !22, i64 88, metadata !22, i64 104, metadata !4, i64 120}
!22 = metadata !{metadata !"timespec", metadata !15, i64 0, metadata !15, i64 8}
!23 = metadata !{metadata !20, metadata !3, i64 8}
!24 = metadata !{metadata !20, metadata !3, i64 0}
!25 = metadata !{metadata !8, metadata !8, i64 0}
!26 = metadata !{metadata !20, metadata !8, i64 180}
!27 = metadata !{metadata !4, metadata !4, i64 0}
!28 = metadata !{metadata !29, metadata !15, i64 8}
!29 = metadata !{metadata !"splay_tree_node_s", metadata !15, i64 0, metadata !15, i64 8, metadata !3, i64 16, metadata !3, i64 24}
!30 = metadata !{metadata !2, metadata !8, i64 288}
!31 = metadata !{metadata !32, metadata !3, i64 8}
!32 = metadata !{metadata !"search_path", metadata !3, i64 0, metadata !3, i64 8, metadata !8, i64 16, metadata !15, i64 24, metadata !15, i64 32, metadata !8, i64 40, metadata !3, i64 48}
!33 = metadata !{metadata !32, metadata !8, i64 16}
!34 = metadata !{metadata !2, metadata !4, i64 764}
!35 = metadata !{metadata !32, metadata !3, i64 48}
!36 = metadata !{metadata !37, metadata !3, i64 8}
!37 = metadata !{metadata !"file_name_map", metadata !3, i64 0, metadata !3, i64 8, metadata !3, i64 16}
!38 = metadata !{metadata !37, metadata !3, i64 16}
!39 = metadata !{metadata !37, metadata !3, i64 0}
!40 = metadata !{metadata !2, metadata !3, i64 56}
!41 = metadata !{metadata !42, metadata !3, i64 0}
!42 = metadata !{metadata !"line_map", metadata !3, i64 0, metadata !8, i64 8, metadata !8, i64 12, metadata !8, i64 16, metadata !4, i64 20, metadata !4, i64 21}
!43 = metadata !{metadata !2, metadata !8, i64 64}
!44 = metadata !{metadata !42, metadata !8, i64 8}
!45 = metadata !{metadata !42, metadata !8, i64 12}
!46 = metadata !{metadata !20, metadata !13, i64 184}
!47 = metadata !{metadata !3, metadata !3, i64 0}
!48 = metadata !{metadata !49, metadata !3, i64 8}
!49 = metadata !{metadata !"cpp_string", metadata !8, i64 0, metadata !3, i64 8}
!50 = metadata !{metadata !2, metadata !3, i64 0}
!51 = metadata !{metadata !52, metadata !3, i64 48}
!52 = metadata !{metadata !"cpp_buffer", metadata !3, i64 0, metadata !3, i64 8, metadata !3, i64 16, metadata !3, i64 24, metadata !3, i64 32, metadata !3, i64 40, metadata !3, i64 48, metadata !3, i64 56, metadata !8, i64 64, metadata !4, i64 68, metadata !3, i64 72, metadata !4, i64 80, metadata !4, i64 81, metadata !4, i64 82, metadata !9, i64 83, metadata !32, i64 88}
!53 = metadata !{metadata !20, metadata !3, i64 16}
!54 = metadata !{metadata !2, metadata !4, i64 766}
!55 = metadata !{metadata !52, metadata !4, i64 82}
!56 = metadata !{metadata !52, metadata !3, i64 96}
!57 = metadata !{metadata !52, metadata !8, i64 104}
!58 = metadata !{metadata !2, metadata !3, i64 688}
!59 = metadata !{metadata !52, metadata !3, i64 88}
!60 = metadata !{metadata !42, metadata !4, i64 21}
!61 = metadata !{metadata !52, metadata !8, i64 128}
!62 = metadata !{metadata !32, metadata !3, i64 0}
!63 = metadata !{metadata !2, metadata !4, i64 749}
!64 = metadata !{metadata !2, metadata !4, i64 751}
!65 = metadata !{metadata !2, metadata !3, i64 392}
!66 = metadata !{metadata !2, metadata !3, i64 696}
!67 = metadata !{metadata !32, metadata !8, i64 40}
!68 = metadata !{metadata !20, metadata !8, i64 56}
!69 = metadata !{metadata !20, metadata !15, i64 80}
!70 = metadata !{metadata !20, metadata !4, i64 188}
!71 = metadata !{metadata !20, metadata !8, i64 176}
!72 = metadata !{metadata !2, metadata !4, i64 771}
!73 = metadata !{metadata !20, metadata !13, i64 186}
!74 = metadata !{metadata !2, metadata !9, i64 184}
!75 = metadata !{metadata !2, metadata !3, i64 168}
!76 = metadata !{metadata !20, metadata !15, i64 120}
!77 = metadata !{i8 0, i8 2}
!78 = metadata !{metadata !52, metadata !3, i64 32}
!79 = metadata !{metadata !21, metadata !8, i64 24}
!80 = metadata !{metadata !81, metadata !3, i64 8}
!81 = metadata !{metadata !"file_name_map_list", metadata !3, i64 0, metadata !3, i64 8, metadata !3, i64 16}
!82 = metadata !{metadata !81, metadata !3, i64 16}
!83 = metadata !{metadata !13, metadata !13, i64 0}
!84 = metadata !{metadata !2, metadata !3, i64 704}
!85 = metadata !{metadata !81, metadata !3, i64 0}
