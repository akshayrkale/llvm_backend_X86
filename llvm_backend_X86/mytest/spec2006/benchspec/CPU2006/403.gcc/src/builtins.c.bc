; ModuleID = 'builtins.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.rtx_def = type { i32, [1 x %union.rtunion_def] }
%union.rtunion_def = type { i64 }
%struct.function = type { %struct.eh_status*, %struct.stmt_status*, %struct.expr_status*, %struct.emit_status*, %struct.varasm_status*, i8*, %union.tree_node*, %struct.function*, i32, i32, i32, i32, %struct.rtx_def*, %struct.ix86_args, %struct.rtx_def*, %struct.rtx_def*, i8*, %struct.initial_value_struct*, i32, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i64, %union.tree_node*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, %struct.rtx_def**, %struct.temp_slot*, i32, i32, i32, %struct.var_refs_queue*, i32, i32, i8*, %union.tree_node*, %struct.rtx_def*, i32, i32, %struct.machine_function*, i32, i32, %struct.language_function*, %struct.rtx_def*, i24 }
%struct.eh_status = type opaque
%struct.stmt_status = type opaque
%struct.expr_status = type { i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def* }
%struct.emit_status = type { i32, i32, %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.sequence_stack*, i32, i32, i8*, i32, i8*, %union.tree_node**, %struct.rtx_def** }
%struct.sequence_stack = type { %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.sequence_stack* }
%struct.varasm_status = type opaque
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.initial_value_struct = type opaque
%struct.temp_slot = type opaque
%struct.var_refs_queue = type { %struct.rtx_def*, i32, i32, %struct.var_refs_queue* }
%union.tree_node = type { %struct.tree_decl }
%struct.tree_decl = type { %struct.tree_common, i8*, i32, i32, %union.tree_node*, i48, %union.anon, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %union.anon.1, %union.tree_node*, %union.tree_node*, %union.tree_node*, i64, %struct.lang_decl* }
%struct.tree_common = type { %union.tree_node*, %union.tree_node*, i32 }
%union.anon = type { i64 }
%union.anon.1 = type { %struct.function* }
%struct.lang_decl = type opaque
%struct.machine_function = type opaque
%struct.language_function = type opaque
%struct.gcc_target = type { %struct.asm_out, %struct.sched, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %struct.attribute_spec*, i32 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*, %union.tree_node**)*, i1 (%union.tree_node*)*, i1 (%union.tree_node*)*, void ()*, %struct.rtx_def* (%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32)*, i32 (%union.tree_node*, i8*, i32)*, i8, i8, i1 ()* }
%struct.asm_out = type { i8*, i8*, i8*, %struct.asm_int_op, %struct.asm_int_op, i1 (%struct.rtx_def*, i32, i32)*, void (%struct._IO_FILE*, i64)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, i64)*, void (i8*, i32)*, void ()*, void ()*, void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, i32)* }
%struct.asm_int_op = type { i8*, i8*, i8*, i8* }
%struct._IO_FILE = type opaque
%struct.sched = type { i32 (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)*, i32 ()*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, %struct.rtx_def* (i32, %struct.rtx_def*)* }
%struct.attribute_spec = type { i8*, i32, i32, i8, i8, i8, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* }
%struct.insn_data = type { i8*, i8*, %struct.rtx_def* (%struct.rtx_def*, ...)*, %struct.insn_operand_data*, i8, i8, i8, i8 }
%struct.insn_operand_data = type { i32 (%struct.rtx_def*, i32)*, i8*, i16, i8, i8 }
%struct.optab = type { i32, [59 x %struct.anon.3] }
%struct.anon.3 = type { i32, %struct.rtx_def* }
%struct.tree_type = type { %struct.tree_common, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32, i32, i32, %union.tree_node*, %union.tree_node*, %union.anon.2, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i64, %struct.lang_type* }
%union.anon.2 = type { i8* }
%struct.lang_type = type opaque
%struct.rtvec_def = type { i32, [1 x %struct.rtx_def*] }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

@.str = private unnamed_addr constant [13 x i8] c"NOT_BUILT_IN\00", align 1
@.str1 = private unnamed_addr constant [18 x i8] c"BUILT_IN_FRONTEND\00", align 1
@.str2 = private unnamed_addr constant [12 x i8] c"BUILT_IN_MD\00", align 1
@.str3 = private unnamed_addr constant [16 x i8] c"BUILT_IN_NORMAL\00", align 1
@built_in_class_names = constant [4 x i8*] [i8* getelementptr inbounds ([13 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8]* @.str1, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8]* @.str2, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8]* @.str3, i32 0, i32 0)], align 16
@.str4 = private unnamed_addr constant [16 x i8] c"BUILT_IN_ALLOCA\00", align 1
@.str5 = private unnamed_addr constant [13 x i8] c"BUILT_IN_ABS\00", align 1
@.str6 = private unnamed_addr constant [14 x i8] c"BUILT_IN_LABS\00", align 1
@.str7 = private unnamed_addr constant [14 x i8] c"BUILT_IN_FABS\00", align 1
@.str8 = private unnamed_addr constant [15 x i8] c"BUILT_IN_FABSF\00", align 1
@.str9 = private unnamed_addr constant [15 x i8] c"BUILT_IN_FABSL\00", align 1
@.str10 = private unnamed_addr constant [15 x i8] c"BUILT_IN_LLABS\00", align 1
@.str11 = private unnamed_addr constant [17 x i8] c"BUILT_IN_IMAXABS\00", align 1
@.str12 = private unnamed_addr constant [14 x i8] c"BUILT_IN_CONJ\00", align 1
@.str13 = private unnamed_addr constant [15 x i8] c"BUILT_IN_CONJF\00", align 1
@.str14 = private unnamed_addr constant [15 x i8] c"BUILT_IN_CONJL\00", align 1
@.str15 = private unnamed_addr constant [15 x i8] c"BUILT_IN_CREAL\00", align 1
@.str16 = private unnamed_addr constant [16 x i8] c"BUILT_IN_CREALF\00", align 1
@.str17 = private unnamed_addr constant [16 x i8] c"BUILT_IN_CREALL\00", align 1
@.str18 = private unnamed_addr constant [15 x i8] c"BUILT_IN_CIMAG\00", align 1
@.str19 = private unnamed_addr constant [16 x i8] c"BUILT_IN_CIMAGF\00", align 1
@.str20 = private unnamed_addr constant [16 x i8] c"BUILT_IN_CIMAGL\00", align 1
@.str21 = private unnamed_addr constant [15 x i8] c"BUILT_IN_BZERO\00", align 1
@.str22 = private unnamed_addr constant [14 x i8] c"BUILT_IN_BCMP\00", align 1
@.str23 = private unnamed_addr constant [13 x i8] c"BUILT_IN_FFS\00", align 1
@.str24 = private unnamed_addr constant [15 x i8] c"BUILT_IN_INDEX\00", align 1
@.str25 = private unnamed_addr constant [16 x i8] c"BUILT_IN_RINDEX\00", align 1
@.str26 = private unnamed_addr constant [16 x i8] c"BUILT_IN_MEMCPY\00", align 1
@.str27 = private unnamed_addr constant [16 x i8] c"BUILT_IN_MEMCMP\00", align 1
@.str28 = private unnamed_addr constant [16 x i8] c"BUILT_IN_MEMSET\00", align 1
@.str29 = private unnamed_addr constant [16 x i8] c"BUILT_IN_STRCAT\00", align 1
@.str30 = private unnamed_addr constant [17 x i8] c"BUILT_IN_STRNCAT\00", align 1
@.str31 = private unnamed_addr constant [16 x i8] c"BUILT_IN_STRCPY\00", align 1
@.str32 = private unnamed_addr constant [17 x i8] c"BUILT_IN_STRNCPY\00", align 1
@.str33 = private unnamed_addr constant [16 x i8] c"BUILT_IN_STRCMP\00", align 1
@.str34 = private unnamed_addr constant [17 x i8] c"BUILT_IN_STRNCMP\00", align 1
@.str35 = private unnamed_addr constant [16 x i8] c"BUILT_IN_STRLEN\00", align 1
@.str36 = private unnamed_addr constant [16 x i8] c"BUILT_IN_STRSTR\00", align 1
@.str37 = private unnamed_addr constant [17 x i8] c"BUILT_IN_STRPBRK\00", align 1
@.str38 = private unnamed_addr constant [16 x i8] c"BUILT_IN_STRSPN\00", align 1
@.str39 = private unnamed_addr constant [17 x i8] c"BUILT_IN_STRCSPN\00", align 1
@.str40 = private unnamed_addr constant [16 x i8] c"BUILT_IN_STRCHR\00", align 1
@.str41 = private unnamed_addr constant [17 x i8] c"BUILT_IN_STRRCHR\00", align 1
@.str42 = private unnamed_addr constant [14 x i8] c"BUILT_IN_SQRT\00", align 1
@.str43 = private unnamed_addr constant [13 x i8] c"BUILT_IN_SIN\00", align 1
@.str44 = private unnamed_addr constant [13 x i8] c"BUILT_IN_COS\00", align 1
@.str45 = private unnamed_addr constant [15 x i8] c"BUILT_IN_SQRTF\00", align 1
@.str46 = private unnamed_addr constant [14 x i8] c"BUILT_IN_SINF\00", align 1
@.str47 = private unnamed_addr constant [14 x i8] c"BUILT_IN_COSF\00", align 1
@.str48 = private unnamed_addr constant [15 x i8] c"BUILT_IN_SQRTL\00", align 1
@.str49 = private unnamed_addr constant [14 x i8] c"BUILT_IN_SINL\00", align 1
@.str50 = private unnamed_addr constant [14 x i8] c"BUILT_IN_COSL\00", align 1
@.str51 = private unnamed_addr constant [18 x i8] c"BUILT_IN_SAVEREGS\00", align 1
@.str52 = private unnamed_addr constant [23 x i8] c"BUILT_IN_CLASSIFY_TYPE\00", align 1
@.str53 = private unnamed_addr constant [18 x i8] c"BUILT_IN_NEXT_ARG\00", align 1
@.str54 = private unnamed_addr constant [19 x i8] c"BUILT_IN_ARGS_INFO\00", align 1
@.str55 = private unnamed_addr constant [20 x i8] c"BUILT_IN_CONSTANT_P\00", align 1
@.str56 = private unnamed_addr constant [23 x i8] c"BUILT_IN_FRAME_ADDRESS\00", align 1
@.str57 = private unnamed_addr constant [24 x i8] c"BUILT_IN_RETURN_ADDRESS\00", align 1
@.str58 = private unnamed_addr constant [36 x i8] c"BUILT_IN_AGGREGATE_INCOMING_ADDRESS\00", align 1
@.str59 = private unnamed_addr constant [20 x i8] c"BUILT_IN_APPLY_ARGS\00", align 1
@.str60 = private unnamed_addr constant [15 x i8] c"BUILT_IN_APPLY\00", align 1
@.str61 = private unnamed_addr constant [16 x i8] c"BUILT_IN_RETURN\00", align 1
@.str62 = private unnamed_addr constant [16 x i8] c"BUILT_IN_SETJMP\00", align 1
@.str63 = private unnamed_addr constant [17 x i8] c"BUILT_IN_LONGJMP\00", align 1
@.str64 = private unnamed_addr constant [14 x i8] c"BUILT_IN_TRAP\00", align 1
@.str65 = private unnamed_addr constant [18 x i8] c"BUILT_IN_PREFETCH\00", align 1
@.str66 = private unnamed_addr constant [17 x i8] c"BUILT_IN_PUTCHAR\00", align 1
@.str67 = private unnamed_addr constant [14 x i8] c"BUILT_IN_PUTS\00", align 1
@.str68 = private unnamed_addr constant [16 x i8] c"BUILT_IN_PRINTF\00", align 1
@.str69 = private unnamed_addr constant [15 x i8] c"BUILT_IN_FPUTC\00", align 1
@.str70 = private unnamed_addr constant [15 x i8] c"BUILT_IN_FPUTS\00", align 1
@.str71 = private unnamed_addr constant [16 x i8] c"BUILT_IN_FWRITE\00", align 1
@.str72 = private unnamed_addr constant [17 x i8] c"BUILT_IN_FPRINTF\00", align 1
@.str73 = private unnamed_addr constant [26 x i8] c"BUILT_IN_PUTCHAR_UNLOCKED\00", align 1
@.str74 = private unnamed_addr constant [23 x i8] c"BUILT_IN_PUTS_UNLOCKED\00", align 1
@.str75 = private unnamed_addr constant [25 x i8] c"BUILT_IN_PRINTF_UNLOCKED\00", align 1
@.str76 = private unnamed_addr constant [24 x i8] c"BUILT_IN_FPUTC_UNLOCKED\00", align 1
@.str77 = private unnamed_addr constant [24 x i8] c"BUILT_IN_FPUTS_UNLOCKED\00", align 1
@.str78 = private unnamed_addr constant [25 x i8] c"BUILT_IN_FWRITE_UNLOCKED\00", align 1
@.str79 = private unnamed_addr constant [26 x i8] c"BUILT_IN_FPRINTF_UNLOCKED\00", align 1
@.str80 = private unnamed_addr constant [19 x i8] c"BUILT_IN_ISGREATER\00", align 1
@.str81 = private unnamed_addr constant [24 x i8] c"BUILT_IN_ISGREATEREQUAL\00", align 1
@.str82 = private unnamed_addr constant [16 x i8] c"BUILT_IN_ISLESS\00", align 1
@.str83 = private unnamed_addr constant [21 x i8] c"BUILT_IN_ISLESSEQUAL\00", align 1
@.str84 = private unnamed_addr constant [23 x i8] c"BUILT_IN_ISLESSGREATER\00", align 1
@.str85 = private unnamed_addr constant [21 x i8] c"BUILT_IN_ISUNORDERED\00", align 1
@.str86 = private unnamed_addr constant [21 x i8] c"BUILT_IN_UNWIND_INIT\00", align 1
@.str87 = private unnamed_addr constant [19 x i8] c"BUILT_IN_DWARF_CFA\00", align 1
@.str88 = private unnamed_addr constant [25 x i8] c"BUILT_IN_DWARF_FP_REGNUM\00", align 1
@.str89 = private unnamed_addr constant [30 x i8] c"BUILT_IN_INIT_DWARF_REG_SIZES\00", align 1
@.str90 = private unnamed_addr constant [26 x i8] c"BUILT_IN_FROB_RETURN_ADDR\00", align 1
@.str91 = private unnamed_addr constant [29 x i8] c"BUILT_IN_EXTRACT_RETURN_ADDR\00", align 1
@.str92 = private unnamed_addr constant [19 x i8] c"BUILT_IN_EH_RETURN\00", align 1
@.str93 = private unnamed_addr constant [30 x i8] c"BUILT_IN_EH_RETURN_DATA_REGNO\00", align 1
@.str94 = private unnamed_addr constant [23 x i8] c"BUILT_IN_VARARGS_START\00", align 1
@.str95 = private unnamed_addr constant [22 x i8] c"BUILT_IN_STDARG_START\00", align 1
@.str96 = private unnamed_addr constant [16 x i8] c"BUILT_IN_VA_END\00", align 1
@.str97 = private unnamed_addr constant [17 x i8] c"BUILT_IN_VA_COPY\00", align 1
@.str98 = private unnamed_addr constant [16 x i8] c"BUILT_IN_EXPECT\00", align 1
@built_in_names = constant [95 x i8*] [i8* getelementptr inbounds ([16 x i8]* @.str4, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8]* @.str5, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8]* @.str6, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8]* @.str7, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8]* @.str8, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8]* @.str9, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8]* @.str10, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8]* @.str11, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8]* @.str12, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8]* @.str13, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8]* @.str14, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8]* @.str15, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8]* @.str16, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8]* @.str17, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8]* @.str18, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8]* @.str20, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8]* @.str21, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8]* @.str22, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8]* @.str23, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8]* @.str24, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8]* @.str25, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8]* @.str26, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8]* @.str27, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8]* @.str28, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8]* @.str29, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8]* @.str30, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8]* @.str31, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8]* @.str32, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8]* @.str33, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8]* @.str34, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8]* @.str35, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8]* @.str36, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8]* @.str37, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8]* @.str38, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8]* @.str39, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8]* @.str40, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8]* @.str41, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8]* @.str42, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8]* @.str43, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8]* @.str44, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8]* @.str45, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8]* @.str46, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8]* @.str47, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8]* @.str48, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8]* @.str49, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8]* @.str50, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8]* @.str51, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8]* @.str52, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8]* @.str53, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8]* @.str54, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8]* @.str55, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8]* @.str56, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8]* @.str57, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8]* @.str58, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8]* @.str59, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8]* @.str60, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8]* @.str61, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8]* @.str62, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8]* @.str63, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8]* @.str64, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8]* @.str65, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8]* @.str66, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8]* @.str67, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8]* @.str68, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8]* @.str69, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8]* @.str70, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8]* @.str71, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8]* @.str72, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8]* @.str73, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8]* @.str74, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8]* @.str75, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8]* @.str76, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8]* @.str77, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8]* @.str78, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8]* @.str79, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8]* @.str80, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8]* @.str81, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8]* @.str82, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8]* @.str83, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8]* @.str84, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8]* @.str85, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8]* @.str86, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8]* @.str87, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8]* @.str88, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8]* @.str89, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8]* @.str90, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8]* @.str91, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8]* @.str92, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8]* @.str93, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8]* @.str94, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8]* @.str95, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8]* @.str96, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8]* @.str97, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8]* @.str98, i32 0, i32 0)], align 16
@target_flags = external global i32
@global_rtl = external global [11 x %struct.rtx_def*]
@setjmp_alias_set = internal unnamed_addr global i64 -1, align 8
@mode_size = external constant [59 x i8]
@cfun = external global %struct.function*
@static_chain_rtx = external global %struct.rtx_def*
@fixed_regs = external global [53 x i8]
@flag_pic = external global i32
@.str99 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@const_int_rtx = external global [129 x %struct.rtx_def*]
@.str100 = private unnamed_addr constant [11 x i8] c"builtins.c\00", align 1
@__FUNCTION__.expand_builtin_longjmp = private unnamed_addr constant [23 x i8] c"expand_builtin_longjmp\00", align 1
@apply_args_reg_offset = internal unnamed_addr global [53 x i32] zeroinitializer, align 16
@.str101 = private unnamed_addr constant [48 x i8] c"__builtin_saveregs not supported by this target\00", align 1
@integer_types = external global [11 x %union.tree_node*]
@global_trees = external global [51 x %union.tree_node*]
@sizetype_tab = external global [6 x %union.tree_node*]
@.str102 = private unnamed_addr constant [49 x i8] c"first argument to `va_arg' not of type `va_list'\00", align 1
@lang_type_promotes_to = common global %union.tree_node* (%union.tree_node*)* null, align 8
@.str103 = private unnamed_addr constant [17 x i8] c"<anonymous type>\00", align 1
@expand_builtin_va_arg.gave_help = internal unnamed_addr global i1 false
@.str104 = private unnamed_addr constant [51 x i8] c"`%s' is promoted to `%s' when passed through `...'\00", align 1
@.str105 = private unnamed_addr constant [47 x i8] c"(so you should pass `%s' not `%s' to `va_arg')\00", align 1
@targetm = external global %struct.gcc_target
@optimize = external global i32
@.str106 = private unnamed_addr constant [11 x i8] c"__builtin_\00", align 1
@__FUNCTION__.expand_builtin = private unnamed_addr constant [15 x i8] c"expand_builtin\00", align 1
@flag_unsafe_math_optimizations = external global i32
@current_function_decl = external global %union.tree_node*
@.str107 = private unnamed_addr constant [44 x i8] c"__builtin_longjmp second argument must be 1\00", align 1
@.str108 = private unnamed_addr constant [47 x i8] c"built-in function `%s' not currently supported\00", align 1
@built_in_decls = common global [95 x %union.tree_node*] zeroinitializer, align 16
@.str109 = private unnamed_addr constant [41 x i8] c"offset outside bounds of constant string\00", align 1
@tree_code_type = external global [256 x i8]
@cse_not_expected = external global i32
@.str110 = private unnamed_addr constant [54 x i8] c"second arg to `__builtin_prefetch' must be a constant\00", align 1
@.str111 = private unnamed_addr constant [53 x i8] c"invalid second arg to __builtin_prefetch; using zero\00", align 1
@.str112 = private unnamed_addr constant [53 x i8] c"third arg to `__builtin_prefetch' must be a constant\00", align 1
@.str113 = private unnamed_addr constant [52 x i8] c"invalid third arg to __builtin_prefetch; using zero\00", align 1
@x86_prefetch_sse = external global i32
@insn_data = external constant [0 x %struct.insn_data]
@.str114 = private unnamed_addr constant [52 x i8] c"second arg to `__builtin_expect' must be a constant\00", align 1
@.str115 = private unnamed_addr constant [42 x i8] c"too many arguments to function `va_start'\00", align 1
@__FUNCTION__.expand_builtin_fputs = private unnamed_addr constant [21 x i8] c"expand_builtin_fputs\00", align 1
@libfunc_table = external global [97 x %struct.rtx_def*]
@ptr_mode = external global i32
@mode_class = external constant [59 x i32]
@__FUNCTION__.c_readstr = private unnamed_addr constant [10 x i8] c"c_readstr\00", align 1
@__FUNCTION__.builtin_memcpy_read_str = private unnamed_addr constant [24 x i8] c"builtin_memcpy_read_str\00", align 1
@optab_table = external global [49 x %struct.optab*]
@mode_wider_mode = external constant [59 x i8]
@__FUNCTION__.expand_builtin_ffs = private unnamed_addr constant [19 x i8] c"expand_builtin_ffs\00", align 1
@.str116 = private unnamed_addr constant [41 x i8] c"invalid arg to `__builtin_frame_address'\00", align 1
@.str117 = private unnamed_addr constant [42 x i8] c"invalid arg to `__builtin_return_address'\00", align 1
@.str118 = private unnamed_addr constant [45 x i8] c"unsupported arg to `__builtin_frame_address'\00", align 1
@.str119 = private unnamed_addr constant [46 x i8] c"unsupported arg to `__builtin_return_address'\00", align 1
@.str120 = private unnamed_addr constant [44 x i8] c"`va_start' used in function with fixed args\00", align 1
@.str121 = private unnamed_addr constant [55 x i8] c"second parameter of `va_start' not last named argument\00", align 1
@.str122 = private unnamed_addr constant [48 x i8] c"`__builtin_next_arg' called without an argument\00", align 1
@.str123 = private unnamed_addr constant [51 x i8] c"argument of `__builtin_args_info' must be constant\00", align 1
@.str124 = private unnamed_addr constant [47 x i8] c"argument of `__builtin_args_info' out of range\00", align 1
@.str125 = private unnamed_addr constant [42 x i8] c"missing argument in `__builtin_args_info'\00", align 1
@apply_result_mode = internal unnamed_addr global [53 x i32] zeroinitializer, align 16
@apply_result_size.size = internal unnamed_addr global i32 -1, align 4
@class_narrowest_mode = external constant [9 x i32]
@__FUNCTION__.apply_result_size = private unnamed_addr constant [18 x i8] c"apply_result_size\00", align 1
@struct_value_rtx = external global %struct.rtx_def*
@apply_args_mode = internal unnamed_addr global [53 x i32] zeroinitializer, align 16
@__FUNCTION__.expand_builtin_apply = private unnamed_addr constant [21 x i8] c"expand_builtin_apply\00", align 1
@struct_value_incoming_rtx = external global %struct.rtx_def*
@__FUNCTION__.expand_builtin_mathfn = private unnamed_addr constant [22 x i8] c"expand_builtin_mathfn\00", align 1
@flag_errno_math = external global i32
@apply_args_size.size = internal unnamed_addr global i32 -1, align 4
@__FUNCTION__.apply_args_size = private unnamed_addr constant [16 x i8] c"apply_args_size\00", align 1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @expand_builtin_return_addr(i32 %fndecl_code, i32 %count, %struct.rtx_def* %tem) #0 {
entry:
  %cmp = icmp sgt i32 %count, 0
  br i1 %cmp, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %entry
  tail call void @ix86_setup_frame_addresses() #5
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %i.042 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.body ]
  %tem.addr.041 = phi %struct.rtx_def* [ %tem, %for.body.lr.ph ], [ %call7, %for.body ]
  %0 = load i32* @target_flags, align 4, !tbaa !1
  %and = lshr i32 %0, 25
  %1 = and i32 %and, 1
  %2 = or i32 %1, 4
  %call = tail call %struct.rtx_def* @memory_address(i32 %2, %struct.rtx_def* %tem.addr.041) #5
  %3 = load i32* @target_flags, align 4, !tbaa !1
  %and2 = lshr i32 %3, 25
  %4 = and i32 %and2, 1
  %5 = or i32 %4, 4
  %call5 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %5, %struct.rtx_def* %call) #5
  %call6 = tail call i64 @get_frame_alias_set() #5
  tail call void @set_mem_alias_set(%struct.rtx_def* %call5, i64 %call6) #5
  %call7 = tail call %struct.rtx_def* @copy_to_reg(%struct.rtx_def* %call5) #5
  %inc = add nsw i32 %i.042, 1
  %exitcond = icmp eq i32 %inc, %count
  br i1 %exitcond, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %entry
  %tem.addr.0.lcssa = phi %struct.rtx_def* [ %tem, %entry ], [ %call7, %for.body ]
  %cmp8 = icmp eq i32 %fndecl_code, 52
  br i1 %cmp8, label %return, label %if.end10

if.end10:                                         ; preds = %for.end
  %cmp11 = icmp eq i32 %count, 0
  %6 = load i32* @target_flags, align 4, !tbaa !1
  %and12 = and i32 %6, 33554432
  %7 = lshr exact i32 %and12, 25
  %8 = or i32 %7, 4
  br i1 %cmp11, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end10
  %9 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 5), align 8, !tbaa !5
  %10 = lshr exact i32 %and12, 23
  %sub = sub i32 -4, %10
  %conv = sext i32 %sub to i64
  %call18 = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %9, i64 %conv) #5
  %call19 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %8, %struct.rtx_def* %call18) #5
  br label %return

cond.false:                                       ; preds = %if.end10
  %11 = lshr exact i32 %and12, 23
  %12 = add i32 %11, 4
  %conv2639 = zext i32 %12 to i64
  %call27 = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %tem.addr.0.lcssa, i64 %conv2639) #5
  %call28 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %8, %struct.rtx_def* %call27) #5
  br label %return

return:                                           ; preds = %cond.true, %cond.false, %for.end
  %retval.0 = phi %struct.rtx_def* [ %tem.addr.0.lcssa, %for.end ], [ %call19, %cond.true ], [ %call28, %cond.false ]
  ret %struct.rtx_def* %retval.0
}

declare void @ix86_setup_frame_addresses() #1

declare %struct.rtx_def* @memory_address(i32, %struct.rtx_def*) #1

declare %struct.rtx_def* @gen_rtx_MEM(i32, %struct.rtx_def*) #1

declare void @set_mem_alias_set(%struct.rtx_def*, i64) #1

declare i64 @get_frame_alias_set() #1

declare %struct.rtx_def* @copy_to_reg(%struct.rtx_def*) #1

declare %struct.rtx_def* @plus_constant_wide(%struct.rtx_def*, i64) #1

; Function Attrs: nounwind uwtable
define void @expand_builtin_setjmp_setup(%struct.rtx_def* %buf_addr, %struct.rtx_def* %receiver_label) #0 {
entry:
  %stack_save = alloca %struct.rtx_def*, align 8
  %0 = load i32* @target_flags, align 4, !tbaa !1
  %and = lshr i32 %0, 25
  %1 = and i32 %and, 1
  %2 = or i32 %1, 4
  %3 = load i64* @setjmp_alias_set, align 8, !tbaa !7
  %cmp = icmp eq i64 %3, -1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = call i64 @new_alias_set() #5
  store i64 %call, i64* @setjmp_alias_set, align 8, !tbaa !7
  %.pre = load i32* @target_flags, align 4, !tbaa !1
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %4 = phi i32 [ %.pre, %if.then ], [ %0, %entry ]
  %and1 = lshr i32 %4, 25
  %5 = and i32 %and1, 1
  %6 = or i32 %5, 4
  %call4 = call %struct.rtx_def* @force_operand(%struct.rtx_def* %buf_addr, %struct.rtx_def* null) #5
  %call5 = call %struct.rtx_def* @force_reg(i32 %6, %struct.rtx_def* %call4) #5
  call void @emit_queue() #5
  %7 = load i32* @target_flags, align 4, !tbaa !1
  %and6 = lshr i32 %7, 25
  %8 = and i32 %and6, 1
  %9 = or i32 %8, 4
  %call9 = call %struct.rtx_def* @gen_rtx_MEM(i32 %9, %struct.rtx_def* %call5) #5
  %10 = load i64* @setjmp_alias_set, align 8, !tbaa !7
  call void @set_mem_alias_set(%struct.rtx_def* %call9, i64 %10) #5
  %11 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 7), align 8, !tbaa !5
  %call10 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call9, %struct.rtx_def* %11) #5
  %12 = load i32* @target_flags, align 4, !tbaa !1
  %and11 = lshr i32 %12, 25
  %13 = and i32 %and11, 1
  %14 = or i32 %13, 4
  %idxprom47 = zext i32 %14 to i64
  %arrayidx = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom47
  %15 = load i8* %arrayidx, align 1, !tbaa !9
  %conv = zext i8 %15 to i64
  %call17 = call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %call5, i64 %conv) #5
  %call18 = call %struct.rtx_def* @gen_rtx_MEM(i32 %14, %struct.rtx_def* %call17) #5
  %16 = load i64* @setjmp_alias_set, align 8, !tbaa !7
  call void @set_mem_alias_set(%struct.rtx_def* %call18, i64 %16) #5
  %call19 = call %struct.rtx_def* @validize_mem(%struct.rtx_def* %call18) #5
  %17 = load i32* @target_flags, align 4, !tbaa !1
  %and20 = lshr i32 %17, 25
  %18 = and i32 %and20, 1
  %19 = or i32 %18, 4
  %call26 = call %struct.rtx_def* @gen_rtx_fmt_u00(i32 67, i32 %19, %struct.rtx_def* %receiver_label) #5
  %call27 = call %struct.rtx_def* @force_reg(i32 %19, %struct.rtx_def* %call26) #5
  %call28 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call19, %struct.rtx_def* %call27) #5
  %20 = load i32* @target_flags, align 4, !tbaa !1
  %and29 = lshr i32 %20, 25
  %21 = and i32 %and29, 1
  %22 = or i32 %21, 4
  %idxprom3248 = zext i32 %22 to i64
  %arrayidx33 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom3248
  %23 = load i8* %arrayidx33, align 1, !tbaa !9
  %conv34 = zext i8 %23 to i64
  %mul = shl nuw nsw i64 %conv34, 1
  %call36 = call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %call5, i64 %mul) #5
  %call37 = call %struct.rtx_def* @gen_rtx_MEM(i32 %2, %struct.rtx_def* %call36) #5
  store %struct.rtx_def* %call37, %struct.rtx_def** %stack_save, align 8, !tbaa !5
  %24 = load i64* @setjmp_alias_set, align 8, !tbaa !7
  call void @set_mem_alias_set(%struct.rtx_def* %call37, i64 %24) #5
  call void @emit_stack_save(i32 2, %struct.rtx_def** %stack_save, %struct.rtx_def* null) #5
  %25 = load %struct.function** @cfun, align 8, !tbaa !5
  %calls_setjmp = getelementptr inbounds %struct.function* %25, i64 0, i32 56
  %26 = bitcast i24* %calls_setjmp to i32*
  %bf.load = load i32* %26, align 8
  %bf.set = or i32 %bf.load, 16
  store i32 %bf.set, i32* %26, align 8
  %27 = load %struct.function** @cfun, align 8, !tbaa !5
  %has_nonlocal_label = getelementptr inbounds %struct.function* %27, i64 0, i32 56
  %28 = bitcast i24* %has_nonlocal_label to i32*
  %bf.load38 = load i32* %28, align 8
  %bf.set40 = or i32 %bf.load38, 256
  store i32 %bf.set40, i32* %28, align 8
  ret void
}

declare i64 @new_alias_set() #1

declare %struct.rtx_def* @force_reg(i32, %struct.rtx_def*) #1

declare %struct.rtx_def* @force_operand(%struct.rtx_def*, %struct.rtx_def*) #1

declare void @emit_queue() #1

declare %struct.rtx_def* @emit_move_insn(%struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @validize_mem(%struct.rtx_def*) #1

declare %struct.rtx_def* @gen_rtx_fmt_u00(i32, i32, %struct.rtx_def*) #1

declare void @emit_stack_save(i32, %struct.rtx_def**, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define void @expand_builtin_setjmp_receiver(%struct.rtx_def* %receiver_label) #0 {
entry:
  %0 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 4), align 8, !tbaa !5
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %0) #5
  %call1 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call) #5
  %1 = load %struct.rtx_def** @static_chain_rtx, align 8, !tbaa !5
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %1) #5
  %call3 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call2) #5
  %2 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 7), align 8, !tbaa !5
  %3 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 4), align 8, !tbaa !5
  %call4 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %2, %struct.rtx_def* %3) #5
  %4 = load i8* getelementptr inbounds ([53 x i8]* @fixed_regs, i64 0, i64 16), align 1, !tbaa !9
  %tobool = icmp eq i8 %4, 0
  br i1 %tobool, label %if.end15, label %for.body

for.cond:                                         ; preds = %for.body
  %inc = add i64 %i.033, 1
  br label %for.body

for.body:                                         ; preds = %entry, %for.cond
  %i.033 = phi i64 [ %inc, %for.cond ], [ 0, %entry ]
  %5 = icmp eq i64 %i.033, 1
  br i1 %5, label %if.end15, label %for.cond

if.end15:                                         ; preds = %for.body, %entry
  %6 = load i32* @target_flags, align 4, !tbaa !1
  %and = and i32 %6, 33554432
  %tobool16 = icmp eq i32 %and, 0
  %7 = load i32* @flag_pic, align 4
  %tobool18 = icmp ne i32 %7, 0
  %or.cond = and i1 %tobool16, %tobool18
  br i1 %or.cond, label %if.then19, label %if.end22

if.then19:                                        ; preds = %if.end15
  %call20 = tail call %struct.rtx_def* @gen_builtin_setjmp_receiver(%struct.rtx_def* %receiver_label) #5
  %call21 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call20) #5
  br label %if.end22

if.end22:                                         ; preds = %if.end15, %if.then19
  %call23 = tail call %struct.rtx_def* @gen_rtx_fmt_s(i32 40, i32 0, i8* getelementptr inbounds ([1 x i8]* @.str99, i64 0, i64 0)) #5
  %call24 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call23) #5
  ret void
}

declare %struct.rtx_def* @emit_insn(%struct.rtx_def*) #1

declare %struct.rtx_def* @gen_rtx_fmt_e(i32, i32, %struct.rtx_def*) #1

declare %struct.rtx_def* @gen_builtin_setjmp_receiver(%struct.rtx_def*) #1

declare %struct.rtx_def* @gen_rtx_fmt_s(i32, i32, i8*) #1

; Function Attrs: nounwind uwtable
define void @expand_builtin_longjmp(%struct.rtx_def* %buf_addr, %struct.rtx_def* readnone %value) #0 {
entry:
  %0 = load i32* @target_flags, align 4, !tbaa !1
  %and = lshr i32 %0, 25
  %1 = and i32 %and, 1
  %2 = or i32 %1, 4
  %3 = load i64* @setjmp_alias_set, align 8, !tbaa !7
  %cmp = icmp eq i64 %3, -1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = tail call i64 @new_alias_set() #5
  store i64 %call, i64* @setjmp_alias_set, align 8, !tbaa !7
  %.pre = load i32* @target_flags, align 4, !tbaa !1
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %4 = phi i32 [ %.pre, %if.then ], [ %0, %entry ]
  %and1 = lshr i32 %4, 25
  %5 = and i32 %and1, 1
  %6 = or i32 %5, 4
  %call4 = tail call %struct.rtx_def* @force_reg(i32 %6, %struct.rtx_def* %buf_addr) #5
  %7 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !5
  %cmp5 = icmp eq %struct.rtx_def* %7, %value
  br i1 %cmp5, label %if.end7, label %if.then6

if.then6:                                         ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8]* @.str100, i64 0, i64 0), i32 661, i8* getelementptr inbounds ([23 x i8]* @__FUNCTION__.expand_builtin_longjmp, i64 0, i64 0)) #6
  unreachable

if.end7:                                          ; preds = %if.end
  %8 = load %struct.function** @cfun, align 8, !tbaa !5
  %calls_longjmp = getelementptr inbounds %struct.function* %8, i64 0, i32 56
  %9 = bitcast i24* %calls_longjmp to i32*
  %bf.load = load i32* %9, align 8
  %bf.set = or i32 %bf.load, 32
  store i32 %bf.set, i32* %9, align 8
  %10 = load i32* @target_flags, align 4, !tbaa !1
  %and8 = lshr i32 %10, 25
  %11 = and i32 %and8, 1
  %12 = or i32 %11, 4
  %call11 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %12, %struct.rtx_def* %call4) #5
  %13 = load i32* @target_flags, align 4, !tbaa !1
  %and12 = lshr i32 %13, 25
  %14 = and i32 %and12, 1
  %15 = or i32 %14, 4
  %idxprom69 = zext i32 %15 to i64
  %arrayidx = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom69
  %16 = load i8* %arrayidx, align 1, !tbaa !9
  %conv = zext i8 %16 to i64
  %call18 = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %call4, i64 %conv) #5
  %call19 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %15, %struct.rtx_def* %call18) #5
  %17 = load i32* @target_flags, align 4, !tbaa !1
  %and20 = lshr i32 %17, 25
  %18 = and i32 %and20, 1
  %19 = or i32 %18, 4
  %idxprom2370 = zext i32 %19 to i64
  %arrayidx24 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom2370
  %20 = load i8* %arrayidx24, align 1, !tbaa !9
  %conv25 = zext i8 %20 to i64
  %mul = shl nuw nsw i64 %conv25, 1
  %call27 = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %call4, i64 %mul) #5
  %call28 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %2, %struct.rtx_def* %call27) #5
  %21 = load i64* @setjmp_alias_set, align 8, !tbaa !7
  tail call void @set_mem_alias_set(%struct.rtx_def* %call11, i64 %21) #5
  %22 = load i64* @setjmp_alias_set, align 8, !tbaa !7
  tail call void @set_mem_alias_set(%struct.rtx_def* %call19, i64 %22) #5
  %23 = load i64* @setjmp_alias_set, align 8, !tbaa !7
  tail call void @set_mem_alias_set(%struct.rtx_def* %call28, i64 %23) #5
  %call29 = tail call %struct.rtx_def* @copy_to_reg(%struct.rtx_def* %call19) #5
  %24 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 4), align 8, !tbaa !5
  %call30 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %24, %struct.rtx_def* %call11) #5
  tail call void @emit_stack_restore(i32 2, %struct.rtx_def* %call28, %struct.rtx_def* null) #5
  %25 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 4), align 8, !tbaa !5
  %call31 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %25) #5
  %call32 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call31) #5
  %26 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !5
  %call33 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %26) #5
  %call34 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call33) #5
  tail call void @emit_indirect_jump(%struct.rtx_def* %call29) #5
  %call35 = tail call %struct.rtx_def* @get_last_insn() #5
  %tobool3673 = icmp eq %struct.rtx_def* %call35, null
  br i1 %tobool3673, label %for.end, label %for.body

for.body:                                         ; preds = %if.end7, %for.inc
  %insn.074 = phi %struct.rtx_def* [ %31, %for.inc ], [ %call35, %if.end7 ]
  %27 = getelementptr inbounds %struct.rtx_def* %insn.074, i64 0, i32 0
  %bf.load37 = load i32* %27, align 8
  %bf.clear38 = and i32 %bf.load37, 65535
  switch i32 %bf.clear38, label %for.inc [
    i32 33, label %if.then41
    i32 34, label %for.end
  ]

if.then41:                                        ; preds = %for.body
  %28 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !5
  %arrayidx42 = getelementptr inbounds %struct.rtx_def* %insn.074, i64 0, i32 1, i64 6
  %rtx = bitcast %union.rtunion_def* %arrayidx42 to %struct.rtx_def**
  %29 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %call43 = tail call %struct.rtx_def* @alloc_EXPR_LIST(i32 27, %struct.rtx_def* %28, %struct.rtx_def* %29) #5
  %30 = getelementptr inbounds %union.rtunion_def* %arrayidx42, i64 0, i32 0
  %call43.c = ptrtoint %struct.rtx_def* %call43 to i64
  store i64 %call43.c, i64* %30, align 8, !tbaa !5
  br label %for.end

for.inc:                                          ; preds = %for.body
  %arrayidx55 = getelementptr inbounds %struct.rtx_def* %insn.074, i64 0, i32 1, i64 1
  %rtx56 = bitcast %union.rtunion_def* %arrayidx55 to %struct.rtx_def**
  %31 = load %struct.rtx_def** %rtx56, align 8, !tbaa !5
  %tobool36 = icmp eq %struct.rtx_def* %31, null
  br i1 %tobool36, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc, %for.body, %if.end7, %if.then41
  ret void
}

; Function Attrs: noreturn
declare void @fancy_abort(i8*, i32, i8*) #2

declare void @emit_stack_restore(i32, %struct.rtx_def*, %struct.rtx_def*) #1

declare void @emit_indirect_jump(%struct.rtx_def*) #1

declare %struct.rtx_def* @get_last_insn() #1

declare %struct.rtx_def* @alloc_EXPR_LIST(i32, %struct.rtx_def*, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define i32 @apply_args_register_offset(i32 %regno) #0 {
entry:
  %call = tail call fastcc i32 @apply_args_size()
  %idxprom = sext i32 %regno to i64
  %arrayidx = getelementptr inbounds [53 x i32]* @apply_args_reg_offset, i64 0, i64 %idxprom
  %0 = load i32* %arrayidx, align 4, !tbaa !1
  ret i32 %0
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @apply_args_size() #0 {
entry:
  %0 = load i32* @apply_args_size.size, align 4, !tbaa !1
  %cmp = icmp slt i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end173

if.then:                                          ; preds = %entry
  %1 = load i32* @target_flags, align 4, !tbaa !1
  %and = lshr i32 %1, 25
  %2 = and i32 %and, 1
  %3 = or i32 %2, 4
  %idxprom228 = zext i32 %3 to i64
  %arrayidx = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom228
  %4 = load i8* %arrayidx, align 1, !tbaa !9
  %conv = zext i8 %4 to i32
  store i32 %conv, i32* @apply_args_size.size, align 4, !tbaa !1
  %5 = load %struct.rtx_def** @struct_value_rtx, align 8, !tbaa !5
  %tobool1 = icmp eq %struct.rtx_def* %5, null
  br i1 %tobool1, label %for.cond.preheader, label %if.then2

if.then2:                                         ; preds = %if.then
  %add = shl nuw nsw i32 %conv, 1
  store i32 %add, i32* @apply_args_size.size, align 4, !tbaa !1
  br label %for.cond.preheader

for.cond.preheader:                               ; preds = %if.then, %if.then2
  %6 = load i32* getelementptr inbounds ([9 x i32]* @class_narrowest_mode, i64 0, i64 1), align 4, !tbaa !9
  %cmp13242 = icmp eq i32 %6, 0
  %7 = load i32* getelementptr inbounds ([9 x i32]* @class_narrowest_mode, i64 0, i64 2), align 4, !tbaa !9
  %cmp89246 = icmp eq i32 %7, 0
  %8 = load i32* getelementptr inbounds ([9 x i32]* @class_narrowest_mode, i64 0, i64 8), align 4, !tbaa !9
  %cmp109250 = icmp eq i32 %8, 0
  %9 = load i32* getelementptr inbounds ([9 x i32]* @class_narrowest_mode, i64 0, i64 7), align 4, !tbaa !9
  %cmp129254 = icmp eq i32 %9, 0
  br label %for.body

for.body:                                         ; preds = %for.cond.preheader, %for.inc171
  %indvars.iv = phi i64 [ 0, %for.cond.preheader ], [ %indvars.iv.next, %for.inc171 ]
  %10 = trunc i64 %indvars.iv to i32
  %call = tail call zeroext i1 @ix86_function_arg_regno_p(i32 %10) #5
  br i1 %call, label %if.then11, label %if.else

if.then11:                                        ; preds = %for.body
  br i1 %cmp13242, label %if.then87, label %for.body15.lr.ph

for.body15.lr.ph:                                 ; preds = %if.then11
  %11 = and i32 %10, -8
  %12 = icmp eq i32 %11, 8
  %regno.0.off = add i32 %10, -21
  %13 = icmp ult i32 %regno.0.off, 8
  %or.cond = or i1 %12, %13
  %regno.0.off229 = add i32 %10, -45
  %14 = icmp ult i32 %regno.0.off229, 8
  %or.cond234 = or i1 %or.cond, %14
  %regno.0.off230 = add i32 %10, -29
  %15 = icmp ult i32 %regno.0.off230, 8
  %or.cond236 = or i1 %or.cond234, %15
  br i1 %or.cond236, label %for.body15.us, label %for.body15

for.body15.us:                                    ; preds = %for.body15.lr.ph, %for.inc.us
  %best_mode.0245.us = phi i32 [ %best_mode.1.us, %for.inc.us ], [ 0, %for.body15.lr.ph ]
  %mode.0243.us = phi i32 [ %conv84.us, %for.inc.us ], [ %6, %for.body15.lr.ph ]
  %call16.us = tail call i32 @ix86_hard_regno_mode_ok(i32 %10, i32 %mode.0243.us) #5
  %tobool17.us = icmp eq i32 %call16.us, 0
  br i1 %tobool17.us, label %for.inc.us, label %cond.true.us

cond.true.us:                                     ; preds = %for.body15.us
  %idxprom40.us = sext i32 %mode.0243.us to i64
  %arrayidx41.us = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom40.us
  %16 = load i32* %arrayidx41.us, align 4, !tbaa !9
  %cmp42.us = icmp eq i32 %16, 5
  br i1 %cmp42.us, label %for.inc.us, label %lor.rhs.us

lor.rhs.us:                                       ; preds = %cond.true.us
  %not.cmp46.us = icmp ne i32 %16, 6
  %phitmp = select i1 %not.cmp46.us, i32 %mode.0243.us, i32 %best_mode.0245.us
  br label %for.inc.us

for.inc.us:                                       ; preds = %cond.true.us, %lor.rhs.us, %for.body15.us
  %best_mode.1.us = phi i32 [ %best_mode.0245.us, %for.body15.us ], [ %best_mode.0245.us, %cond.true.us ], [ %phitmp, %lor.rhs.us ]
  %idxprom82.us = sext i32 %mode.0243.us to i64
  %arrayidx83.us = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom82.us
  %17 = load i8* %arrayidx83.us, align 1, !tbaa !9
  %conv84.us = zext i8 %17 to i32
  %cmp13.us = icmp eq i8 %17, 0
  br i1 %cmp13.us, label %for.end, label %for.body15.us

for.body15:                                       ; preds = %for.body15.lr.ph, %for.inc
  %best_mode.0245 = phi i32 [ %best_mode.1, %for.inc ], [ 0, %for.body15.lr.ph ]
  %mode.0243 = phi i32 [ %conv84, %for.inc ], [ %6, %for.body15.lr.ph ]
  %call16 = tail call i32 @ix86_hard_regno_mode_ok(i32 %10, i32 %mode.0243) #5
  %tobool17 = icmp eq i32 %call16, 0
  br i1 %tobool17, label %for.inc, label %cond.false

cond.false:                                       ; preds = %for.body15
  switch i32 %mode.0243, label %cond.false62 [
    i32 18, label %cond.true51
    i32 24, label %cond.true58
  ]

cond.true51:                                      ; preds = %cond.false
  %18 = load i32* @target_flags, align 4, !tbaa !1
  %and52 = lshr i32 %18, 25
  %19 = and i32 %and52, 1
  %20 = xor i32 %19, 3
  br label %cond.end76

cond.true58:                                      ; preds = %cond.false
  %21 = load i32* @target_flags, align 4, !tbaa !1
  %and59 = lshr i32 %21, 24
  %22 = and i32 %and59, 2
  %23 = xor i32 %22, 6
  br label %cond.end76

cond.false62:                                     ; preds = %cond.false
  %idxprom63 = sext i32 %mode.0243 to i64
  %arrayidx64 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom63
  %24 = load i8* %arrayidx64, align 1, !tbaa !9
  %conv65 = zext i8 %24 to i32
  %25 = load i32* @target_flags, align 4, !tbaa !1
  %and66 = lshr i32 %25, 23
  %26 = and i32 %and66, 4
  %27 = add i32 %26, 4
  %add69 = add i32 %conv65, -1
  %sub = add i32 %add69, %27
  %div = sdiv i32 %sub, %27
  br label %cond.end76

cond.end76:                                       ; preds = %cond.true51, %cond.false62, %cond.true58
  %cond77 = phi i32 [ %20, %cond.true51 ], [ %23, %cond.true58 ], [ %div, %cond.false62 ]
  %cmp78 = icmp eq i32 %cond77, 1
  %mode.0.best_mode.0 = select i1 %cmp78, i32 %mode.0243, i32 %best_mode.0245
  br label %for.inc

for.inc:                                          ; preds = %cond.end76, %for.body15
  %best_mode.1 = phi i32 [ %best_mode.0245, %for.body15 ], [ %mode.0.best_mode.0, %cond.end76 ]
  %idxprom82 = sext i32 %mode.0243 to i64
  %arrayidx83 = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom82
  %28 = load i8* %arrayidx83, align 1, !tbaa !9
  %conv84 = zext i8 %28 to i32
  %cmp13 = icmp eq i8 %28, 0
  br i1 %cmp13, label %for.end, label %for.body15

for.end:                                          ; preds = %for.inc, %for.inc.us
  %best_mode.0.lcssa = phi i32 [ %best_mode.1.us, %for.inc.us ], [ %best_mode.1, %for.inc ]
  %cmp85 = icmp eq i32 %best_mode.0.lcssa, 0
  br i1 %cmp85, label %if.then87, label %if.end148

if.then87:                                        ; preds = %if.then11, %for.end
  br i1 %cmp89246, label %if.then107, label %for.body91

for.body91:                                       ; preds = %if.then87, %for.inc99
  %best_mode.2248 = phi i32 [ %best_mode.3, %for.inc99 ], [ 0, %if.then87 ]
  %mode.1247 = phi i32 [ %conv102, %for.inc99 ], [ %7, %if.then87 ]
  %call92 = tail call i32 @ix86_hard_regno_mode_ok(i32 %10, i32 %mode.1247) #5
  %tobool93 = icmp eq i32 %call92, 0
  br i1 %tobool93, label %for.inc99, label %land.lhs.true94

land.lhs.true94:                                  ; preds = %for.body91
  %call95 = tail call i32 @have_insn_for(i32 47, i32 %mode.1247) #5
  %tobool96 = icmp eq i32 %call95, 0
  %best_mode.2.mode.1 = select i1 %tobool96, i32 %best_mode.2248, i32 %mode.1247
  br label %for.inc99

for.inc99:                                        ; preds = %land.lhs.true94, %for.body91
  %best_mode.3 = phi i32 [ %best_mode.2248, %for.body91 ], [ %best_mode.2.mode.1, %land.lhs.true94 ]
  %idxprom100 = sext i32 %mode.1247 to i64
  %arrayidx101 = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom100
  %29 = load i8* %arrayidx101, align 1, !tbaa !9
  %conv102 = zext i8 %29 to i32
  %cmp89 = icmp eq i8 %29, 0
  br i1 %cmp89, label %if.end104, label %for.body91

if.end104:                                        ; preds = %for.inc99
  %cmp105 = icmp eq i32 %best_mode.3, 0
  br i1 %cmp105, label %if.then107, label %if.end148

if.then107:                                       ; preds = %if.then87, %if.end104
  br i1 %cmp109250, label %if.then127, label %for.body111

for.body111:                                      ; preds = %if.then107, %for.inc119
  %best_mode.5252 = phi i32 [ %best_mode.6, %for.inc119 ], [ 0, %if.then107 ]
  %mode.2251 = phi i32 [ %conv122, %for.inc119 ], [ %8, %if.then107 ]
  %call112 = tail call i32 @ix86_hard_regno_mode_ok(i32 %10, i32 %mode.2251) #5
  %tobool113 = icmp eq i32 %call112, 0
  br i1 %tobool113, label %for.inc119, label %land.lhs.true114

land.lhs.true114:                                 ; preds = %for.body111
  %call115 = tail call i32 @have_insn_for(i32 47, i32 %mode.2251) #5
  %tobool116 = icmp eq i32 %call115, 0
  %best_mode.5.mode.2 = select i1 %tobool116, i32 %best_mode.5252, i32 %mode.2251
  br label %for.inc119

for.inc119:                                       ; preds = %land.lhs.true114, %for.body111
  %best_mode.6 = phi i32 [ %best_mode.5252, %for.body111 ], [ %best_mode.5.mode.2, %land.lhs.true114 ]
  %idxprom120 = sext i32 %mode.2251 to i64
  %arrayidx121 = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom120
  %30 = load i8* %arrayidx121, align 1, !tbaa !9
  %conv122 = zext i8 %30 to i32
  %cmp109 = icmp eq i8 %30, 0
  br i1 %cmp109, label %if.end124, label %for.body111

if.end124:                                        ; preds = %for.inc119
  %cmp125 = icmp eq i32 %best_mode.6, 0
  br i1 %cmp125, label %if.then127, label %if.end148

if.then127:                                       ; preds = %if.then107, %if.end124
  br i1 %cmp129254, label %if.then147, label %for.body131

for.body131:                                      ; preds = %if.then127, %for.inc139
  %best_mode.8256 = phi i32 [ %best_mode.9, %for.inc139 ], [ 0, %if.then127 ]
  %mode.3255 = phi i32 [ %conv142, %for.inc139 ], [ %9, %if.then127 ]
  %call132 = tail call i32 @ix86_hard_regno_mode_ok(i32 %10, i32 %mode.3255) #5
  %tobool133 = icmp eq i32 %call132, 0
  br i1 %tobool133, label %for.inc139, label %land.lhs.true134

land.lhs.true134:                                 ; preds = %for.body131
  %call135 = tail call i32 @have_insn_for(i32 47, i32 %mode.3255) #5
  %tobool136 = icmp eq i32 %call135, 0
  %best_mode.8.mode.3 = select i1 %tobool136, i32 %best_mode.8256, i32 %mode.3255
  br label %for.inc139

for.inc139:                                       ; preds = %land.lhs.true134, %for.body131
  %best_mode.9 = phi i32 [ %best_mode.8256, %for.body131 ], [ %best_mode.8.mode.3, %land.lhs.true134 ]
  %idxprom140 = sext i32 %mode.3255 to i64
  %arrayidx141 = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom140
  %31 = load i8* %arrayidx141, align 1, !tbaa !9
  %conv142 = zext i8 %31 to i32
  %cmp129 = icmp eq i8 %31, 0
  br i1 %cmp129, label %if.end144, label %for.body131

if.end144:                                        ; preds = %for.inc139
  %cmp145 = icmp eq i32 %best_mode.9, 0
  br i1 %cmp145, label %if.then147, label %if.end148

if.then147:                                       ; preds = %if.then127, %if.end144
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8]* @.str100, i64 0, i64 0), i32 944, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.apply_args_size, i64 0, i64 0)) #6
  unreachable

if.end148:                                        ; preds = %for.end, %if.end104, %if.end124, %if.end144
  %best_mode.10240 = phi i32 [ %best_mode.9, %if.end144 ], [ %best_mode.6, %if.end124 ], [ %best_mode.3, %if.end104 ], [ %best_mode.0.lcssa, %for.end ]
  %call149 = tail call i32 @get_mode_alignment(i32 %best_mode.10240) #5
  %div150 = lshr i32 %call149, 3
  %32 = load i32* @apply_args_size.size, align 4, !tbaa !1
  %rem = srem i32 %32, %div150
  %cmp151 = icmp eq i32 %rem, 0
  br i1 %cmp151, label %if.end157, label %if.then153

if.then153:                                       ; preds = %if.end148
  %add154 = add i32 %div150, -1
  %sub155 = add i32 %add154, %32
  %div156 = srem i32 %sub155, %div150
  %mul = sub i32 %sub155, %div156
  store i32 %mul, i32* @apply_args_size.size, align 4, !tbaa !1
  br label %if.end157

if.end157:                                        ; preds = %if.end148, %if.then153
  %33 = phi i32 [ %32, %if.end148 ], [ %mul, %if.then153 ]
  %arrayidx159 = getelementptr inbounds [53 x i32]* @apply_args_reg_offset, i64 0, i64 %indvars.iv
  store i32 %33, i32* %arrayidx159, align 4, !tbaa !1
  %idxprom160 = sext i32 %best_mode.10240 to i64
  %arrayidx161 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom160
  %34 = load i8* %arrayidx161, align 1, !tbaa !9
  %conv162 = zext i8 %34 to i32
  %add163 = add nsw i32 %33, %conv162
  store i32 %add163, i32* @apply_args_size.size, align 4, !tbaa !1
  %arrayidx165 = getelementptr inbounds [53 x i32]* @apply_args_mode, i64 0, i64 %indvars.iv
  store i32 %best_mode.10240, i32* %arrayidx165, align 4, !tbaa !9
  br label %for.inc171

if.else:                                          ; preds = %for.body
  %arrayidx167 = getelementptr inbounds [53 x i32]* @apply_args_mode, i64 0, i64 %indvars.iv
  store i32 0, i32* %arrayidx167, align 4, !tbaa !9
  %arrayidx169 = getelementptr inbounds [53 x i32]* @apply_args_reg_offset, i64 0, i64 %indvars.iv
  store i32 0, i32* %arrayidx169, align 4, !tbaa !1
  br label %for.inc171

for.inc171:                                       ; preds = %if.end157, %if.else
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %35 = trunc i64 %indvars.iv.next to i32
  %cmp9 = icmp ult i32 %35, 53
  br i1 %cmp9, label %for.body, label %if.end173.loopexit

if.end173.loopexit:                               ; preds = %for.inc171
  %.pre = load i32* @apply_args_size.size, align 4, !tbaa !1
  br label %if.end173

if.end173:                                        ; preds = %if.end173.loopexit, %entry
  %36 = phi i32 [ %.pre, %if.end173.loopexit ], [ %0, %entry ]
  ret i32 %36
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @expand_builtin_saveregs() #0 {
entry:
  %0 = load %struct.function** @cfun, align 8, !tbaa !5
  %expr = getelementptr inbounds %struct.function* %0, i64 0, i32 2
  %1 = load %struct.expr_status** %expr, align 8, !tbaa !10
  %x_saveregs_value = getelementptr inbounds %struct.expr_status* %1, i64 0, i32 3
  %2 = load %struct.rtx_def** %x_saveregs_value, align 8, !tbaa !13
  %cmp = icmp eq %struct.rtx_def* %2, null
  br i1 %cmp, label %if.end, label %return

if.end:                                           ; preds = %entry
  tail call void @start_sequence() #5
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([48 x i8]* @.str101, i64 0, i64 0)) #5
  %3 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !5
  %call = tail call %struct.rtx_def* @get_insns() #5
  tail call void @end_sequence() #5
  %4 = load %struct.function** @cfun, align 8, !tbaa !5
  %expr3 = getelementptr inbounds %struct.function* %4, i64 0, i32 2
  %5 = load %struct.expr_status** %expr3, align 8, !tbaa !10
  %x_saveregs_value4 = getelementptr inbounds %struct.expr_status* %5, i64 0, i32 3
  store %struct.rtx_def* %3, %struct.rtx_def** %x_saveregs_value4, align 8, !tbaa !13
  tail call void @push_topmost_sequence() #5
  %call5 = tail call %struct.rtx_def* @get_insns() #5
  %call6 = tail call %struct.rtx_def* @emit_insns_after(%struct.rtx_def* %call, %struct.rtx_def* %call5) #5
  tail call void @pop_topmost_sequence() #5
  br label %return

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.rtx_def* [ %3, %if.end ], [ %2, %entry ]
  ret %struct.rtx_def* %retval.0
}

declare void @start_sequence() #1

declare void @error(i8*, ...) #1

declare %struct.rtx_def* @get_insns() #1

declare void @end_sequence() #1

declare void @push_topmost_sequence() #1

declare %struct.rtx_def* @emit_insns_after(%struct.rtx_def*, %struct.rtx_def*) #1

declare void @pop_topmost_sequence() #1

; Function Attrs: nounwind uwtable
define void @std_expand_builtin_va_start(i32 %stdarg_p, %union.tree_node* %valist, %struct.rtx_def* %nextarg) #0 {
entry:
  %tobool = icmp eq i32 %stdarg_p, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %0 = load i32* @target_flags, align 4, !tbaa !1
  %and = and i32 %0, 33554432
  %1 = lshr exact i32 %and, 20
  %2 = add i32 %1, 32
  %div = sdiv i32 %2, 8
  %3 = lshr exact i32 %and, 23
  %4 = add i32 %3, 4
  %5 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !5
  %type = bitcast %union.tree_node* %5 to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type* %type, i64 0, i32 6
  %bf.load = load i32* %mode, align 4
  %bf.lshr = lshr i32 %bf.load, 9
  %bf.clear = and i32 %bf.lshr, 127
  %idxprom33 = zext i32 %bf.clear to i64
  %arrayidx = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom33
  %6 = load i8* %arrayidx, align 1, !tbaa !9
  %conv = zext i8 %6 to i32
  %cmp = icmp ugt i32 %4, %conv
  %.conv = select i1 %cmp, i32 %4, i32 %conv
  %add = add i32 %div, -1
  %sub = add i32 %add, %.conv
  %div18 = srem i32 %sub, %div
  %mul34 = sub i32 %div18, %sub
  %conv20 = sext i32 %mul34 to i64
  %call = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %nextarg, i64 %conv20) #5
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %nextarg.addr.0 = phi %struct.rtx_def* [ %nextarg, %entry ], [ %call, %if.then ]
  %type21 = getelementptr inbounds %union.tree_node* %valist, i64 0, i32 0, i32 0, i32 1
  %7 = load %union.tree_node** %type21, align 8, !tbaa !15
  %8 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 28), align 8, !tbaa !5
  %call22 = tail call %union.tree_node* @make_tree(%union.tree_node* %8, %struct.rtx_def* %nextarg.addr.0) #5
  %call23 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 48, %union.tree_node* %7, %union.tree_node* %valist, %union.tree_node* %call22) #5
  %side_effects_flag = getelementptr inbounds %union.tree_node* %call23, i64 0, i32 0, i32 0, i32 2
  %bf.load25 = load i32* %side_effects_flag, align 8
  %bf.set = or i32 %bf.load25, 256
  store i32 %bf.set, i32* %side_effects_flag, align 8
  %9 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !5
  %call27 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %call23, %struct.rtx_def* %9, i32 0, i32 0) #5
  ret void
}

declare %union.tree_node* @build(i32, %union.tree_node*, ...) #1

declare %union.tree_node* @make_tree(%union.tree_node*, %struct.rtx_def*) #1

declare %struct.rtx_def* @expand_expr(%union.tree_node*, %struct.rtx_def*, i32, i32) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @std_expand_builtin_va_arg(%union.tree_node* %valist, %union.tree_node* readonly %type) #0 {
entry:
  %0 = load i32* @target_flags, align 4, !tbaa !1
  %and = lshr i32 %0, 20
  %1 = and i32 %and, 32
  %2 = add i32 %1, 32
  %div = sdiv i32 %2, 8
  %conv = sext i32 %div to i64
  %call = tail call %union.tree_node* @size_int_wide(i64 %conv, i32 0) #5
  %3 = load i32* @target_flags, align 4, !tbaa !1
  %and1 = lshr i32 %3, 20
  %4 = and i32 %and1, 32
  %5 = add i32 %4, 32
  %div4 = sdiv i32 %5, 8
  %sub = add nsw i32 %div4, -1
  %conv5 = sext i32 %sub to i64
  %call6 = tail call %union.tree_node* @size_int_wide(i64 %conv5, i32 0) #5
  %6 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !5
  %cmp = icmp eq %union.tree_node* %6, %type
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %7 = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 15
  %8 = load %union.tree_node** %7, align 8, !tbaa !17
  %9 = getelementptr inbounds %union.tree_node* %8, i64 0, i32 0, i32 4
  %10 = load %union.tree_node** %9, align 8, !tbaa !19
  %cmp10 = icmp eq %union.tree_node* %10, null
  br i1 %cmp10, label %if.then, label %lor.lhs.false12

lor.lhs.false12:                                  ; preds = %lor.lhs.false
  %public_flag = getelementptr inbounds %union.tree_node* %10, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %public_flag, align 8
  %bf.clear = and i32 %bf.load, 524288
  %tobool13 = icmp eq i32 %bf.clear, 0
  br i1 %tobool13, label %if.else, label %if.then

if.then:                                          ; preds = %lor.lhs.false12, %lor.lhs.false, %entry
  %11 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 15), align 8, !tbaa !5
  br label %if.end

if.else:                                          ; preds = %lor.lhs.false12
  %12 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !5
  %call14 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 59, %union.tree_node* %12, %union.tree_node* %10, %union.tree_node* %call6) #5
  %call15 = tail call %union.tree_node* @fold(%union.tree_node* %call14) #5
  %call16 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 62, %union.tree_node* %12, %union.tree_node* %call15, %union.tree_node* %call) #5
  %call17 = tail call %union.tree_node* @fold(%union.tree_node* %call16) #5
  %call18 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 61, %union.tree_node* %12, %union.tree_node* %call17, %union.tree_node* %call) #5
  %call19 = tail call %union.tree_node* @fold(%union.tree_node* %call18) #5
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %rounded_size.0 = phi %union.tree_node* [ %11, %if.then ], [ %call19, %if.else ]
  %13 = load i32* @target_flags, align 4, !tbaa !1
  %and20 = lshr i32 %13, 25
  %14 = and i32 %and20, 1
  %15 = or i32 %14, 4
  %call23 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %valist, %struct.rtx_def* null, i32 %15, i32 0) #5
  %call24 = tail call %struct.rtx_def* @copy_to_reg(%struct.rtx_def* %call23) #5
  %call25 = tail call i32 @integer_zerop(%union.tree_node* %rounded_size.0) #5
  %tobool26 = icmp eq i32 %call25, 0
  br i1 %tobool26, label %if.then27, label %if.end38

if.then27:                                        ; preds = %if.end
  %type29 = getelementptr inbounds %union.tree_node* %valist, i64 0, i32 0, i32 0, i32 1
  %16 = load %union.tree_node** %type29, align 8, !tbaa !15
  %call32 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 59, %union.tree_node* %16, %union.tree_node* %valist, %union.tree_node* %rounded_size.0) #5
  %call33 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 48, %union.tree_node* %16, %union.tree_node* %valist, %union.tree_node* %call32) #5
  %side_effects_flag = getelementptr inbounds %union.tree_node* %call33, i64 0, i32 0, i32 0, i32 2
  %bf.load35 = load i32* %side_effects_flag, align 8
  %bf.set = or i32 %bf.load35, 256
  store i32 %bf.set, i32* %side_effects_flag, align 8
  %17 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !5
  %call37 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %call33, %struct.rtx_def* %17, i32 0, i32 0) #5
  br label %if.end38

if.end38:                                         ; preds = %if.end, %if.then27
  ret %struct.rtx_def* %call24
}

declare %union.tree_node* @size_int_wide(i64, i32) #1

declare %union.tree_node* @fold(%union.tree_node*) #1

declare i32 @integer_zerop(%union.tree_node*) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @expand_builtin_va_arg(%union.tree_node* %valist, %union.tree_node* %type) #0 {
entry:
  %0 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 31), align 8, !tbaa !5
  %type1 = getelementptr inbounds %union.tree_node* %valist, i64 0, i32 0, i32 0, i32 1
  %1 = load %union.tree_node** %type1, align 8, !tbaa !15
  %code = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 18
  br i1 %cmp, label %if.then, label %if.end18

if.then:                                          ; preds = %entry
  %code4 = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 0, i32 2
  %bf.load5 = load i32* %code4, align 8
  %bf.clear6 = and i32 %bf.load5, 255
  switch i32 %bf.clear6, label %if.end18 [
    i32 18, label %if.then13
    i32 13, label %if.then13
  ]

if.then13:                                        ; preds = %if.then, %if.then
  %type15 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 1
  %2 = load %union.tree_node** %type15, align 8, !tbaa !15
  %type17 = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 0, i32 1
  %3 = load %union.tree_node** %type17, align 8, !tbaa !15
  br label %if.end18

if.end18:                                         ; preds = %if.then, %if.then13, %entry
  %want_va_type.0 = phi %union.tree_node* [ %2, %if.then13 ], [ %0, %entry ], [ %0, %if.then ]
  %have_va_type.0 = phi %union.tree_node* [ %3, %if.then13 ], [ %1, %entry ], [ %1, %if.then ]
  %4 = getelementptr inbounds %union.tree_node* %want_va_type.0, i64 0, i32 0, i32 15
  %5 = load %union.tree_node** %4, align 8, !tbaa !17
  %6 = getelementptr inbounds %union.tree_node* %have_va_type.0, i64 0, i32 0, i32 15
  %7 = load %union.tree_node** %6, align 8, !tbaa !17
  %cmp22 = icmp eq %union.tree_node* %5, %7
  br i1 %cmp22, label %if.else, label %if.then23

if.then23:                                        ; preds = %if.end18
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([49 x i8]* @.str102, i64 0, i64 0)) #5
  %8 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !5
  br label %if.end111

if.else:                                          ; preds = %if.end18
  %9 = load %union.tree_node* (%union.tree_node*)** @lang_type_promotes_to, align 8, !tbaa !5
  %call = tail call %union.tree_node* %9(%union.tree_node* %type) #5
  %cmp24 = icmp eq %union.tree_node* %call, null
  br i1 %cmp24, label %if.else107, label %if.then25

if.then25:                                        ; preds = %if.else
  %10 = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 11
  %11 = load %union.tree_node** %10, align 8, !tbaa !20
  %tobool = icmp eq %union.tree_node* %11, null
  br i1 %tobool, label %if.end61, label %if.then28

if.then28:                                        ; preds = %if.then25
  %code32 = getelementptr inbounds %union.tree_node* %11, i64 0, i32 0, i32 0, i32 2
  %bf.load33 = load i32* %code32, align 8
  %bf.clear34 = and i32 %bf.load33, 255
  switch i32 %bf.clear34, label %if.end61 [
    i32 1, label %if.then36
    i32 33, label %land.lhs.true
  ]

if.then36:                                        ; preds = %if.then28
  %id = getelementptr inbounds %union.tree_node* %11, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds i8** %id, i64 1
  %13 = load i8** %12, align 8, !tbaa !21
  br label %if.end61

land.lhs.true:                                    ; preds = %if.then28
  %name49 = getelementptr inbounds %union.tree_node* %11, i64 0, i32 0, i32 8
  %14 = load %union.tree_node** %name49, align 8, !tbaa !24
  %tobool50 = icmp eq %union.tree_node* %14, null
  br i1 %tobool50, label %if.end61, label %if.then51

if.then51:                                        ; preds = %land.lhs.true
  %id57 = getelementptr inbounds %union.tree_node* %14, i64 0, i32 0, i32 1
  %15 = getelementptr inbounds i8** %id57, i64 1
  %16 = load i8** %15, align 8, !tbaa !21
  br label %if.end61

if.end61:                                         ; preds = %if.then28, %land.lhs.true, %if.then25, %if.then36, %if.then51
  %name.0 = phi i8* [ %13, %if.then36 ], [ %16, %if.then51 ], [ getelementptr inbounds ([17 x i8]* @.str103, i64 0, i64 0), %land.lhs.true ], [ getelementptr inbounds ([17 x i8]* @.str103, i64 0, i64 0), %if.then25 ], [ getelementptr inbounds ([17 x i8]* @.str103, i64 0, i64 0), %if.then28 ]
  %17 = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 11
  %18 = load %union.tree_node** %17, align 8, !tbaa !20
  %tobool64 = icmp eq %union.tree_node* %18, null
  br i1 %tobool64, label %if.end103, label %if.then65

if.then65:                                        ; preds = %if.end61
  %code69 = getelementptr inbounds %union.tree_node* %18, i64 0, i32 0, i32 0, i32 2
  %bf.load70 = load i32* %code69, align 8
  %bf.clear71 = and i32 %bf.load70, 255
  switch i32 %bf.clear71, label %if.end103 [
    i32 1, label %if.then73
    i32 33, label %land.lhs.true87
  ]

if.then73:                                        ; preds = %if.then65
  %id77 = getelementptr inbounds %union.tree_node* %18, i64 0, i32 0, i32 1
  %19 = getelementptr inbounds i8** %id77, i64 1
  %20 = load i8** %19, align 8, !tbaa !21
  br label %if.end103

land.lhs.true87:                                  ; preds = %if.then65
  %name91 = getelementptr inbounds %union.tree_node* %18, i64 0, i32 0, i32 8
  %21 = load %union.tree_node** %name91, align 8, !tbaa !24
  %tobool92 = icmp eq %union.tree_node* %21, null
  br i1 %tobool92, label %if.end103, label %if.then93

if.then93:                                        ; preds = %land.lhs.true87
  %id99 = getelementptr inbounds %union.tree_node* %21, i64 0, i32 0, i32 1
  %22 = getelementptr inbounds i8** %id99, i64 1
  %23 = load i8** %22, align 8, !tbaa !21
  br label %if.end103

if.end103:                                        ; preds = %if.then65, %land.lhs.true87, %if.end61, %if.then73, %if.then93
  %pname.0 = phi i8* [ %20, %if.then73 ], [ %23, %if.then93 ], [ null, %land.lhs.true87 ], [ null, %if.end61 ], [ null, %if.then65 ]
  tail call void (i8*, ...)* @warning(i8* getelementptr inbounds ([51 x i8]* @.str104, i64 0, i64 0), i8* %name.0, i8* %pname.0) #5
  %.b = load i1* @expand_builtin_va_arg.gave_help, align 1
  br i1 %.b, label %if.end106, label %if.then105

if.then105:                                       ; preds = %if.end103
  store i1 true, i1* @expand_builtin_va_arg.gave_help, align 1
  tail call void (i8*, ...)* @warning(i8* getelementptr inbounds ([47 x i8]* @.str105, i64 0, i64 0), i8* %pname.0, i8* %name.0) #5
  br label %if.end106

if.end106:                                        ; preds = %if.then105, %if.end103
  %call.i = tail call %struct.rtx_def* @gen_trap() #5
  %call1.i = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call.i) #5
  %call2.i = tail call %struct.rtx_def* @emit_barrier() #5
  %24 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !5
  br label %if.end111

if.else107:                                       ; preds = %if.else
  %call108 = tail call fastcc %union.tree_node* @stabilize_va_list(%union.tree_node* %valist, i32 0)
  %call109 = tail call %struct.rtx_def* @ix86_va_arg(%union.tree_node* %call108, %union.tree_node* %type) #5
  br label %if.end111

if.end111:                                        ; preds = %if.end106, %if.else107, %if.then23
  %addr.0 = phi %struct.rtx_def* [ %8, %if.then23 ], [ %24, %if.end106 ], [ %call109, %if.else107 ]
  %type112 = bitcast %union.tree_node* %type to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type* %type112, i64 0, i32 6
  %bf.load113 = load i32* %mode, align 4
  %bf.lshr = lshr i32 %bf.load113, 9
  %bf.clear114 = and i32 %bf.lshr, 127
  %call115 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %bf.clear114, %struct.rtx_def* %addr.0) #5
  %call116 = tail call i64 @get_varargs_alias_set() #5
  tail call void @set_mem_alias_set(%struct.rtx_def* %call115, i64 %call116) #5
  ret %struct.rtx_def* %call115
}

declare void @warning(i8*, ...) #1

; Function Attrs: nounwind uwtable
define void @expand_builtin_trap() #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_trap() #5
  %call1 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call) #5
  %call2 = tail call %struct.rtx_def* @emit_barrier() #5
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @stabilize_va_list(%union.tree_node* %valist, i32 %needs_lvalue) #0 {
entry:
  %0 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 31), align 8, !tbaa !5
  %code = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 18
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %side_effects_flag = getelementptr inbounds %union.tree_node* %valist, i64 0, i32 0, i32 0, i32 2
  %bf.load2 = load i32* %side_effects_flag, align 8
  %bf.clear3 = and i32 %bf.load2, 256
  %tobool = icmp eq i32 %bf.clear3, 0
  br i1 %tobool, label %if.end, label %if.then4

if.then4:                                         ; preds = %if.then
  %call = tail call %union.tree_node* @save_expr(%union.tree_node* %valist) #5
  br label %if.end

if.end:                                           ; preds = %if.then, %if.then4
  %valist.addr.0 = phi %union.tree_node* [ %call, %if.then4 ], [ %valist, %if.then ]
  %type = getelementptr inbounds %union.tree_node* %valist.addr.0, i64 0, i32 0, i32 0, i32 1
  %1 = load %union.tree_node** %type, align 8, !tbaa !15
  %code7 = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 0, i32 2
  %bf.load8 = load i32* %code7, align 8
  %bf.clear9 = and i32 %bf.load8, 255
  %cmp10 = icmp eq i32 %bf.clear9, 18
  br i1 %cmp10, label %if.then11, label %return

if.then11:                                        ; preds = %if.end
  %2 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 31), align 8, !tbaa !5
  %type13 = getelementptr inbounds %union.tree_node* %2, i64 0, i32 0, i32 0, i32 1
  %3 = load %union.tree_node** %type13, align 8, !tbaa !15
  %call14 = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %3) #5
  %4 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 31), align 8, !tbaa !5
  %call15 = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %4) #5
  %call16 = tail call %union.tree_node* @build1(i32 121, %union.tree_node* %call15, %union.tree_node* %valist.addr.0) #5
  %call17 = tail call %union.tree_node* @build1(i32 115, %union.tree_node* %call14, %union.tree_node* %call16) #5
  %call18 = tail call %union.tree_node* @fold(%union.tree_node* %call17) #5
  br label %return

if.else:                                          ; preds = %entry
  %tobool20 = icmp eq i32 %needs_lvalue, 0
  %side_effects_flag23 = getelementptr inbounds %union.tree_node* %valist, i64 0, i32 0, i32 0, i32 2
  %bf.load24 = load i32* %side_effects_flag23, align 8
  br i1 %tobool20, label %if.then21, label %if.end37

if.then21:                                        ; preds = %if.else
  %bf.clear26 = and i32 %bf.load24, 256
  %tobool27 = icmp eq i32 %bf.clear26, 0
  br i1 %tobool27, label %return, label %if.end29

if.end29:                                         ; preds = %if.then21
  %call30 = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %0) #5
  %call31 = tail call %union.tree_node* @build1(i32 121, %union.tree_node* %call30, %union.tree_node* %valist) #5
  %call32 = tail call %union.tree_node* @fold(%union.tree_node* %call31) #5
  %side_effects_flag34 = getelementptr inbounds %union.tree_node* %call32, i64 0, i32 0, i32 0, i32 2
  %bf.load35 = load i32* %side_effects_flag34, align 8
  %bf.set = or i32 %bf.load35, 256
  store i32 %bf.set, i32* %side_effects_flag34, align 8
  br label %if.end37

if.end37:                                         ; preds = %if.else, %if.end29
  %bf.load40 = phi i32 [ %bf.set, %if.end29 ], [ %bf.load24, %if.else ]
  %valist.addr.1 = phi %union.tree_node* [ %call32, %if.end29 ], [ %valist, %if.else ]
  %bf.clear42 = and i32 %bf.load40, 256
  %tobool43 = icmp eq i32 %bf.clear42, 0
  br i1 %tobool43, label %if.end46, label %if.then44

if.then44:                                        ; preds = %if.end37
  %call45 = tail call %union.tree_node* @save_expr(%union.tree_node* %valist.addr.1) #5
  br label %if.end46

if.end46:                                         ; preds = %if.end37, %if.then44
  %valist.addr.2 = phi %union.tree_node* [ %call45, %if.then44 ], [ %valist.addr.1, %if.end37 ]
  %type48 = getelementptr inbounds %union.tree_node* %valist.addr.2, i64 0, i32 0, i32 0, i32 1
  %5 = load %union.tree_node** %type48, align 8, !tbaa !15
  %type50 = getelementptr inbounds %union.tree_node* %5, i64 0, i32 0, i32 0, i32 1
  %6 = load %union.tree_node** %type50, align 8, !tbaa !15
  %call51 = tail call %union.tree_node* @build1(i32 41, %union.tree_node* %6, %union.tree_node* %valist.addr.2) #5
  %call52 = tail call %union.tree_node* @fold(%union.tree_node* %call51) #5
  br label %return

return:                                           ; preds = %if.end46, %if.then11, %if.end, %if.then21
  %retval.0 = phi %union.tree_node* [ %valist, %if.then21 ], [ %call18, %if.then11 ], [ %valist.addr.0, %if.end ], [ %call52, %if.end46 ]
  ret %union.tree_node* %retval.0
}

declare %struct.rtx_def* @ix86_va_arg(%union.tree_node*, %union.tree_node*) #1

declare i64 @get_varargs_alias_set() #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @expand_builtin_expect_jump(%union.tree_node* nocapture readonly %exp, %struct.rtx_def* %if_false_label, %struct.rtx_def* %if_true_label) #0 {
entry:
  %operands = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx = getelementptr inbounds i32* %operands, i64 2
  %0 = bitcast i32* %arrayidx to %union.tree_node**
  %1 = load %union.tree_node** %0, align 8, !tbaa !5
  %value = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 2
  %2 = bitcast i32* %value to %union.tree_node**
  %3 = load %union.tree_node** %2, align 8, !tbaa !26
  %chain = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load %union.tree_node** %chain, align 8, !tbaa !28
  %value3 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 2
  %5 = bitcast i32* %value3 to %union.tree_node**
  %6 = load %union.tree_node** %5, align 8, !tbaa !26
  %type = getelementptr inbounds %union.tree_node* %6, i64 0, i32 0, i32 0, i32 1
  %7 = load %union.tree_node** %type, align 8, !tbaa !15
  %code = getelementptr inbounds %union.tree_node* %7, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 6
  br i1 %cmp, label %land.lhs.true, label %return

land.lhs.true:                                    ; preds = %entry
  %call = tail call i32 @integer_zerop(%union.tree_node* %6) #5
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %land.lhs.true
  %call6 = tail call i32 @integer_onep(%union.tree_node* %6) #5
  %tobool7 = icmp eq i32 %call6, 0
  br i1 %tobool7, label %return, label %if.then

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  %call8 = tail call i32 @unsafe_for_reeval(%union.tree_node* %3) #5
  switch i32 %call8, label %sw.epilog [
    i32 2, label %return
    i32 1, label %sw.bb
  ]

sw.bb:                                            ; preds = %if.then
  %call9 = tail call %union.tree_node* @unsave_expr(%union.tree_node* %3) #5
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.then, %sw.bb
  %arg0.0 = phi %union.tree_node* [ %3, %if.then ], [ %call9, %sw.bb ]
  tail call void @start_sequence() #5
  tail call void @do_jump(%union.tree_node* %arg0.0, %struct.rtx_def* %if_false_label, %struct.rtx_def* %if_true_label) #5
  %call11 = tail call %struct.rtx_def* @gen_sequence() #5
  tail call void @end_sequence() #5
  %arrayidx12 = getelementptr inbounds %struct.rtx_def* %call11, i64 0, i32 1, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx12 to %struct.rtvec_def**
  %8 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !5
  %num_elem129 = getelementptr inbounds %struct.rtvec_def* %8, i64 0, i32 0
  %9 = load i32* %num_elem129, align 4, !tbaa !29
  %cmp13130 = icmp sgt i32 %9, 0
  br i1 %cmp13130, label %for.body, label %for.end

for.body:                                         ; preds = %sw.epilog, %for.inc
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %sw.epilog ]
  %10 = phi %struct.rtvec_def* [ %23, %for.inc ], [ %8, %sw.epilog ]
  %num_jumps.0132 = phi i32 [ %num_jumps.1, %for.inc ], [ 0, %sw.epilog ]
  %arrayidx17 = getelementptr inbounds %struct.rtvec_def* %10, i64 0, i32 1, i64 %indvars.iv
  %11 = load %struct.rtx_def** %arrayidx17, align 8, !tbaa !5
  %12 = getelementptr inbounds %struct.rtx_def* %11, i64 0, i32 0
  %bf.load18 = load i32* %12, align 8
  %bf.clear19 = and i32 %bf.load18, 65535
  %cmp20 = icmp eq i32 %bf.clear19, 33
  br i1 %cmp20, label %land.lhs.true21, label %for.inc

land.lhs.true21:                                  ; preds = %for.body
  %call22 = tail call i32 @any_condjump_p(%struct.rtx_def* %11) #5
  %tobool23 = icmp eq i32 %call22, 0
  br i1 %tobool23, label %for.inc, label %land.lhs.true24

land.lhs.true24:                                  ; preds = %land.lhs.true21
  %call25 = tail call %struct.rtx_def* @pc_set(%struct.rtx_def* %11) #5
  %cmp26 = icmp eq %struct.rtx_def* %call25, null
  br i1 %cmp26, label %for.inc, label %if.then27

if.then27:                                        ; preds = %land.lhs.true24
  %arrayidx29 = getelementptr inbounds %struct.rtx_def* %call25, i64 0, i32 1, i64 1
  %rtx = bitcast %union.rtunion_def* %arrayidx29 to %struct.rtx_def**
  %13 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %14 = getelementptr inbounds %struct.rtx_def* %13, i64 0, i32 0
  %bf.load30 = load i32* %14, align 8
  %bf.clear31 = and i32 %bf.load30, 65535
  %cmp32 = icmp eq i32 %bf.clear31, 72
  br i1 %cmp32, label %if.end, label %for.inc

if.end:                                           ; preds = %if.then27
  %arrayidx35 = getelementptr inbounds %struct.rtx_def* %13, i64 0, i32 1, i64 1
  %rtx36 = bitcast %union.rtunion_def* %arrayidx35 to %struct.rtx_def**
  %15 = load %struct.rtx_def** %rtx36, align 8, !tbaa !5
  %16 = getelementptr inbounds %struct.rtx_def* %15, i64 0, i32 0
  %bf.load37 = load i32* %16, align 8
  %bf.clear38 = and i32 %bf.load37, 65535
  %cmp39 = icmp eq i32 %bf.clear38, 67
  br i1 %cmp39, label %if.then40, label %if.else

if.then40:                                        ; preds = %if.end
  %arrayidx45 = getelementptr inbounds %struct.rtx_def* %15, i64 0, i32 1, i64 0
  %rtx46 = bitcast %union.rtunion_def* %arrayidx45 to %struct.rtx_def**
  %17 = load %struct.rtx_def** %rtx46, align 8, !tbaa !5
  br label %if.end80

if.else:                                          ; preds = %if.end
  %arrayidx48 = getelementptr inbounds %struct.rtx_def* %13, i64 0, i32 1, i64 2
  %rtx49 = bitcast %union.rtunion_def* %arrayidx48 to %struct.rtx_def**
  %18 = load %struct.rtx_def** %rtx49, align 8, !tbaa !5
  %19 = getelementptr inbounds %struct.rtx_def* %18, i64 0, i32 0
  %bf.load50 = load i32* %19, align 8
  %bf.clear51 = and i32 %bf.load50, 65535
  %cmp52 = icmp eq i32 %bf.clear51, 67
  br i1 %cmp52, label %if.then53, label %if.else60

if.then53:                                        ; preds = %if.else
  %arrayidx58 = getelementptr inbounds %struct.rtx_def* %18, i64 0, i32 1, i64 0
  %rtx59 = bitcast %union.rtunion_def* %arrayidx58 to %struct.rtx_def**
  %20 = load %struct.rtx_def** %rtx59, align 8, !tbaa !5
  br label %if.end80

if.else60:                                        ; preds = %if.else
  %cmp66 = icmp eq i32 %bf.clear38, 51
  br i1 %cmp66, label %if.end80, label %if.else68

if.else68:                                        ; preds = %if.else60
  %cmp74 = icmp eq i32 %bf.clear51, 51
  br i1 %cmp74, label %if.end80, label %for.inc

if.end80:                                         ; preds = %if.else68, %if.else60, %if.then53, %if.then40
  %label.0 = phi %struct.rtx_def* [ %17, %if.then40 ], [ %20, %if.then53 ], [ null, %if.else60 ], [ null, %if.else68 ]
  %taken.0 = phi i32 [ 1, %if.then40 ], [ 0, %if.then53 ], [ 1, %if.else60 ], [ 0, %if.else68 ]
  %call81 = tail call i32 @integer_zerop(%union.tree_node* %6) #5
  %not.tobool82 = icmp ne i32 %call81, 0
  %21 = zext i1 %not.tobool82 to i32
  %taken.0. = xor i32 %21, %taken.0
  %cmp85 = icmp eq %struct.rtx_def* %label.0, null
  br i1 %cmp85, label %if.end96, label %if.else87

if.else87:                                        ; preds = %if.end80
  %cmp88 = icmp eq %struct.rtx_def* %label.0, %if_false_label
  br i1 %cmp88, label %if.then89, label %if.else91

if.then89:                                        ; preds = %if.else87
  %22 = xor i32 %taken.0., 1
  br label %if.end96

if.else91:                                        ; preds = %if.else87
  %cmp92 = icmp eq %struct.rtx_def* %label.0, %if_true_label
  br i1 %cmp92, label %if.end96, label %for.inc

if.end96:                                         ; preds = %if.else91, %if.then89, %if.end80
  %taken.2 = phi i32 [ %taken.0., %if.end80 ], [ %22, %if.then89 ], [ %taken.0., %if.else91 ]
  %inc = add nsw i32 %num_jumps.0132, 1
  tail call void @predict_insn_def(%struct.rtx_def* %11, i32 6, i32 %taken.2) #5
  br label %for.inc

for.inc:                                          ; preds = %if.else91, %if.then27, %land.lhs.true24, %land.lhs.true21, %for.body, %if.end96, %if.else68
  %num_jumps.1 = phi i32 [ %num_jumps.0132, %if.then27 ], [ %inc, %if.end96 ], [ %num_jumps.0132, %if.else91 ], [ %num_jumps.0132, %if.else68 ], [ %num_jumps.0132, %land.lhs.true24 ], [ %num_jumps.0132, %land.lhs.true21 ], [ %num_jumps.0132, %for.body ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %23 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !5
  %num_elem = getelementptr inbounds %struct.rtvec_def* %23, i64 0, i32 0
  %24 = load i32* %num_elem, align 4, !tbaa !29
  %25 = trunc i64 %indvars.iv.next to i32
  %cmp13 = icmp slt i32 %25, %24
  br i1 %cmp13, label %for.body, label %for.end

for.end:                                          ; preds = %for.inc, %sw.epilog
  %num_jumps.0.lcssa = phi i32 [ 0, %sw.epilog ], [ %num_jumps.1, %for.inc ]
  %cmp99 = icmp eq i32 %num_jumps.0.lcssa, 0
  %.call11 = select i1 %cmp99, %struct.rtx_def* null, %struct.rtx_def* %call11
  ret %struct.rtx_def* %.call11

return:                                           ; preds = %entry, %lor.lhs.false, %if.then
  ret %struct.rtx_def* null
}

declare i32 @integer_onep(%union.tree_node*) #1

declare i32 @unsafe_for_reeval(%union.tree_node*) #1

declare %union.tree_node* @unsave_expr(%union.tree_node*) #1

declare void @do_jump(%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @gen_sequence() #1

declare i32 @any_condjump_p(%struct.rtx_def*) #1

declare %struct.rtx_def* @pc_set(%struct.rtx_def*) #1

declare void @predict_insn_def(%struct.rtx_def*, i32, i32) #1

declare %struct.rtx_def* @gen_trap() #1

declare %struct.rtx_def* @emit_barrier() #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @expand_builtin(%union.tree_node* %exp, %struct.rtx_def* %target, %struct.rtx_def* %subtarget, i32 %mode, i32 %ignore) #0 {
entry:
  %offset_node.i202.i = alloca %union.tree_node*, align 8
  %offset_node.i.i1306 = alloca %union.tree_node*, align 8
  %offset_node.i157.i = alloca %union.tree_node*, align 8
  %offset_node.i.i1221 = alloca %union.tree_node*, align 8
  %offset_node.i135.i = alloca %union.tree_node*, align 8
  %offset_node.i.i1149 = alloca %union.tree_node*, align 8
  %offset_node.i.i1085 = alloca %union.tree_node*, align 8
  %offset_node.i.i1021 = alloca %union.tree_node*, align 8
  %offset_node.i.i972 = alloca %union.tree_node*, align 8
  %offset_node.i57.i = alloca %union.tree_node*, align 8
  %offset_node.i.i905 = alloca %union.tree_node*, align 8
  %offset_node.i59.i = alloca %union.tree_node*, align 8
  %offset_node.i.i854 = alloca %union.tree_node*, align 8
  %offset_node.i42.i = alloca %union.tree_node*, align 8
  %offset_node.i.i802 = alloca %union.tree_node*, align 8
  %offset_node.i32.i = alloca %union.tree_node*, align 8
  %offset_node.i.i766 = alloca %union.tree_node*, align 8
  %offset_node.i.i714 = alloca %union.tree_node*, align 8
  %offset_node.i.i683 = alloca %union.tree_node*, align 8
  %offset_node.i.i = alloca %union.tree_node*, align 8
  %0 = alloca [53 x %struct.rtx_def*], align 1
  %old_stack_level.i = alloca %struct.rtx_def*, align 8
  %call_fusage.i = alloca %struct.rtx_def*, align 8
  %ops = alloca [3 x %struct.rtx_def*], align 16
  %operands = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx = bitcast i32* %operands to %union.tree_node**
  %1 = load %union.tree_node** %arrayidx, align 8, !tbaa !5
  %operands3 = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 2
  %arrayidx4 = bitcast i32* %operands3 to %union.tree_node**
  %2 = load %union.tree_node** %arrayidx4, align 8, !tbaa !5
  %arrayidx7 = getelementptr inbounds i32* %operands, i64 2
  %3 = bitcast i32* %arrayidx7 to %union.tree_node**
  %4 = load %union.tree_node** %3, align 8, !tbaa !5
  %u1 = getelementptr inbounds %union.tree_node* %2, i64 0, i32 0, i32 6
  %f = bitcast %union.anon* %u1 to i32*
  %5 = load i32* %f, align 4, !tbaa !9
  %built_in_class = getelementptr inbounds %union.tree_node* %2, i64 0, i32 0, i32 5
  %6 = bitcast i48* %built_in_class to i64*
  %bf.load = load i64* %6, align 8
  %bf.cast = and i64 %bf.load, 1610612736
  %cmp = icmp eq i64 %bf.cast, 1073741824
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %7 = load %struct.rtx_def* (%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32)** getelementptr inbounds (%struct.gcc_target* @targetm, i64 0, i32 11), align 8, !tbaa !31
  %call = call %struct.rtx_def* %7(%union.tree_node* %exp, %struct.rtx_def* %target, %struct.rtx_def* %subtarget, i32 %mode, i32 %ignore) #5
  br label %return

if.end:                                           ; preds = %entry
  %8 = load i32* @optimize, align 4, !tbaa !1
  %tobool = icmp eq i32 %8, 0
  br i1 %tobool, label %land.lhs.true, label %if.end14

land.lhs.true:                                    ; preds = %if.end
  %name = getelementptr inbounds %union.tree_node* %2, i64 0, i32 0, i32 8
  %9 = load %union.tree_node** %name, align 8, !tbaa !24
  %id = getelementptr inbounds %union.tree_node* %9, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds i8** %id, i64 1
  %11 = load i8** %10, align 8, !tbaa !21
  %call10 = call i32 @strncmp(i8* %11, i8* getelementptr inbounds ([11 x i8]* @.str106, i64 0, i64 0), i64 10) #5
  %tobool11 = icmp eq i32 %call10, 0
  br i1 %tobool11, label %if.end14, label %if.then12

if.then12:                                        ; preds = %land.lhs.true
  switch i32 %5, label %if.end14 [
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 38, label %sw.bb
    i32 41, label %sw.bb
    i32 44, label %sw.bb
    i32 24, label %sw.bb
    i32 22, label %sw.bb
    i32 23, label %sw.bb
    i32 18, label %sw.bb
    i32 17, label %sw.bb
    i32 20, label %sw.bb
    i32 21, label %sw.bb
    i32 36, label %sw.bb
    i32 37, label %sw.bb
    i32 31, label %sw.bb
    i32 27, label %sw.bb
    i32 28, label %sw.bb
    i32 30, label %sw.bb
    i32 32, label %sw.bb
    i32 33, label %sw.bb
    i32 25, label %sw.bb
    i32 26, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 29, label %sw.bb
    i32 19, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 64, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
  ]

sw.bb:                                            ; preds = %if.then12, %if.then12, %if.then12, %if.then12, %if.then12, %if.then12, %if.then12, %if.then12, %if.then12, %if.then12, %if.then12, %if.then12, %if.then12, %if.then12, %if.then12, %if.then12, %if.then12, %if.then12, %if.then12, %if.then12, %if.then12, %if.then12, %if.then12, %if.then12, %if.then12, %if.then12, %if.then12, %if.then12, %if.then12, %if.then12, %if.then12, %if.then12, %if.then12, %if.then12, %if.then12, %if.then12, %if.then12, %if.then12
  %call13 = call %struct.rtx_def* @expand_call(%union.tree_node* %exp, %struct.rtx_def* %target, i32 %ignore) #5
  br label %return

if.end14:                                         ; preds = %land.lhs.true, %if.end, %if.then12
  switch i32 %5, label %sw.default314 [
    i32 1, label %sw.bb15
    i32 2, label %sw.bb15
    i32 6, label %sw.bb15
    i32 7, label %sw.bb15
    i32 3, label %sw.bb15
    i32 4, label %sw.bb15
    i32 5, label %sw.bb15
    i32 8, label %sw.bb16
    i32 9, label %sw.bb16
    i32 10, label %sw.bb16
    i32 11, label %sw.bb16
    i32 12, label %sw.bb16
    i32 13, label %sw.bb16
    i32 14, label %sw.bb16
    i32 15, label %sw.bb16
    i32 16, label %sw.bb16
    i32 39, label %sw.bb17
    i32 42, label %sw.bb17
    i32 45, label %sw.bb17
    i32 40, label %sw.bb17
    i32 43, label %sw.bb17
    i32 46, label %sw.bb17
    i32 38, label %sw.bb21
    i32 41, label %sw.bb21
    i32 44, label %sw.bb21
    i32 55, label %sw.bb26
    i32 56, label %sw.bb28
    i32 57, label %sw.bb42
    i32 47, label %sw.bb50
    i32 50, label %sw.bb52
    i32 49, label %sw.bb54
    i32 48, label %sw.bb56
    i32 51, label %sw.bb58
    i32 52, label %sw.bb60
    i32 53, label %sw.bb60
    i32 54, label %sw.bb62
    i32 0, label %sw.bb150
    i32 19, label %sw.bb155
    i32 31, label %sw.bb160
    i32 27, label %sw.bb165
    i32 28, label %sw.bb170
    i32 25, label %sw.bb175
    i32 26, label %sw.bb180
    i32 34, label %sw.bb185
    i32 35, label %sw.bb190
    i32 32, label %sw.bb195
    i32 33, label %sw.bb200
    i32 20, label %sw.bb205
    i32 36, label %sw.bb205
    i32 21, label %sw.bb210
    i32 37, label %sw.bb210
    i32 22, label %sw.bb215
    i32 24, label %sw.bb220
    i32 17, label %sw.bb225
    i32 29, label %sw.bb230
    i32 30, label %sw.bb235
    i32 18, label %sw.bb240
    i32 23, label %sw.bb240
    i32 58, label %sw.bb245
    i32 59, label %sw.bb250
    i32 60, label %sw.bb267
    i32 62, label %sw.epilog320
    i32 63, label %sw.epilog320
    i32 65, label %sw.epilog320
    i32 67, label %sw.epilog320
    i32 69, label %sw.epilog320
    i32 70, label %sw.epilog320
    i32 72, label %sw.epilog320
    i32 74, label %sw.epilog320
    i32 66, label %sw.bb269
    i32 73, label %sw.bb274
    i32 82, label %sw.bb279
    i32 83, label %sw.bb280
    i32 84, label %sw.bb281
    i32 85, label %sw.bb283
    i32 86, label %sw.bb286
    i32 87, label %sw.bb290
    i32 88, label %sw.bb294
    i32 89, label %sw.bb301
    i32 90, label %sw.bb303
    i32 91, label %sw.bb305
    i32 92, label %sw.bb307
    i32 93, label %sw.bb309
    i32 94, label %sw.bb311
    i32 61, label %sw.bb313
  ]

sw.bb15:                                          ; preds = %if.end14, %if.end14, %if.end14, %if.end14, %if.end14, %if.end14, %if.end14
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8]* @.str100, i64 0, i64 0), i32 3665, i8* getelementptr inbounds ([15 x i8]* @__FUNCTION__.expand_builtin, i64 0, i64 0)) #6
  unreachable

sw.bb16:                                          ; preds = %if.end14, %if.end14, %if.end14, %if.end14, %if.end14, %if.end14, %if.end14, %if.end14, %if.end14
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8]* @.str100, i64 0, i64 0), i32 3678, i8* getelementptr inbounds ([15 x i8]* @__FUNCTION__.expand_builtin, i64 0, i64 0)) #6
  unreachable

sw.bb17:                                          ; preds = %if.end14, %if.end14, %if.end14, %if.end14, %if.end14, %if.end14
  %12 = load i32* @flag_unsafe_math_optimizations, align 4, !tbaa !1
  %tobool18 = icmp eq i32 %12, 0
  br i1 %tobool18, label %sw.epilog320, label %sw.bb21

sw.bb21:                                          ; preds = %sw.bb17, %if.end14, %if.end14, %if.end14
  %call.i = call i32 (%union.tree_node*, ...)* @validate_arglist(%union.tree_node* %4, i32 7, i32 5) #5
  %tobool.i = icmp eq i32 %call.i, 0
  br i1 %tobool.i, label %sw.epilog320, label %if.end.i

if.end.i:                                         ; preds = %sw.bb21
  %value.i = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 2
  %13 = bitcast i32* %value.i to %union.tree_node**
  %14 = load %union.tree_node** %13, align 8, !tbaa !26
  %code.i = getelementptr inbounds %union.tree_node* %14, i64 0, i32 0, i32 0, i32 2
  %bf.load.i = load i32* %code.i, align 8
  %15 = and i32 %bf.load.i, 254
  %switch.i = icmp eq i32 %15, 34
  br i1 %switch.i, label %if.end26.i, label %if.then15.i

if.then15.i:                                      ; preds = %if.end.i
  %call16.i = call %union.tree_node* @copy_node(%union.tree_node* %exp) #5
  %operands18.i = getelementptr inbounds %union.tree_node* %call16.i, i64 0, i32 0, i32 2
  %arrayidx19.i = getelementptr inbounds i32* %operands18.i, i64 2
  %16 = bitcast i32* %arrayidx19.i to %union.tree_node**
  store %union.tree_node* %4, %union.tree_node** %16, align 8, !tbaa !5
  %17 = load %union.tree_node** %13, align 8, !tbaa !26
  %call22.i = call %union.tree_node* @save_expr(%union.tree_node* %17) #5
  store %union.tree_node* %call22.i, %union.tree_node** %13, align 8, !tbaa !26
  %call25.i = call %union.tree_node* @copy_node(%union.tree_node* %4) #5
  %value28.phi.trans.insert.i = getelementptr inbounds %union.tree_node* %call25.i, i64 0, i32 0, i32 2
  %.phi.trans.insert.i = bitcast i32* %value28.phi.trans.insert.i to %union.tree_node**
  %.pre.i = load %union.tree_node** %.phi.trans.insert.i, align 8, !tbaa !26
  br label %if.end26.i

if.end26.i:                                       ; preds = %if.then15.i, %if.end.i
  %18 = phi %union.tree_node* [ %.pre.i, %if.then15.i ], [ %14, %if.end.i ]
  %exp.addr.0.i = phi %union.tree_node* [ %call16.i, %if.then15.i ], [ %exp, %if.end.i ]
  %arglist.0.i = phi %union.tree_node* [ %call25.i, %if.then15.i ], [ %4, %if.end.i ]
  %value28.i = getelementptr inbounds %union.tree_node* %arglist.0.i, i64 0, i32 0, i32 2
  %19 = bitcast i32* %value28.i to %union.tree_node**
  %call29.i = call %struct.rtx_def* @expand_expr(%union.tree_node* %18, %struct.rtx_def* %subtarget, i32 0, i32 0) #5
  %type.i = getelementptr inbounds %union.tree_node* %exp.addr.0.i, i64 0, i32 0, i32 0, i32 1
  %20 = load %union.tree_node** %type.i, align 8, !tbaa !15
  %type31.i = bitcast %union.tree_node* %20 to %struct.tree_type*
  %mode.i = getelementptr inbounds %struct.tree_type* %type31.i, i64 0, i32 6
  %bf.load32.i = load i32* %mode.i, align 4
  %bf.lshr.i = lshr i32 %bf.load32.i, 9
  %bf.clear33.i = and i32 %bf.lshr.i, 127
  %call34.i = call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear33.i) #5
  call void @emit_queue() #5
  call void @start_sequence() #5
  %21 = load i32* %f, align 4, !tbaa !9
  switch i32 %21, label %sw.default.i [
    i32 39, label %sw.epilog.i
    i32 42, label %sw.epilog.i
    i32 45, label %sw.epilog.i
    i32 40, label %sw.bb35.i
    i32 43, label %sw.bb35.i
    i32 46, label %sw.bb35.i
    i32 38, label %sw.bb36.i
    i32 41, label %sw.bb36.i
    i32 44, label %sw.bb36.i
  ]

sw.bb35.i:                                        ; preds = %if.end26.i, %if.end26.i, %if.end26.i
  br label %sw.epilog.i

sw.bb36.i:                                        ; preds = %if.end26.i, %if.end26.i, %if.end26.i
  br label %sw.epilog.i

sw.default.i:                                     ; preds = %if.end26.i
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8]* @.str100, i64 0, i64 0), i32 1516, i8* getelementptr inbounds ([22 x i8]* @__FUNCTION__.expand_builtin_mathfn, i64 0, i64 0)) #6
  unreachable

sw.epilog.i:                                      ; preds = %sw.bb36.i, %sw.bb35.i, %if.end26.i, %if.end26.i, %if.end26.i
  %builtin_optab.0.in.i = phi %struct.optab** [ getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 38), %sw.bb36.i ], [ getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 40), %sw.bb35.i ], [ getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 39), %if.end26.i ], [ getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 39), %if.end26.i ], [ getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 39), %if.end26.i ]
  %builtin_optab.0.i = load %struct.optab** %builtin_optab.0.in.i, align 8
  %22 = load %union.tree_node** %19, align 8, !tbaa !26
  %type40.i = getelementptr inbounds %union.tree_node* %22, i64 0, i32 0, i32 0, i32 1
  %23 = load %union.tree_node** %type40.i, align 8, !tbaa !15
  %type41.i = bitcast %union.tree_node* %23 to %struct.tree_type*
  %mode42.i = getelementptr inbounds %struct.tree_type* %type41.i, i64 0, i32 6
  %bf.load43.i = load i32* %mode42.i, align 4
  %bf.lshr44.i = lshr i32 %bf.load43.i, 9
  %bf.clear45.i = and i32 %bf.lshr44.i, 127
  %call46.i = call %struct.rtx_def* @expand_unop(i32 %bf.clear45.i, %struct.optab* %builtin_optab.0.i, %struct.rtx_def* %call29.i, %struct.rtx_def* %call34.i, i32 0) #5
  %cmp47.i = icmp eq %struct.rtx_def* %call46.i, null
  br i1 %cmp47.i, label %if.then48.i, label %if.end49.i

if.then48.i:                                      ; preds = %sw.epilog.i
  call void @end_sequence() #5
  br label %sw.epilog320

if.end49.i:                                       ; preds = %sw.epilog.i
  %24 = load i32* @flag_errno_math, align 4, !tbaa !1
  %tobool50.i = icmp eq i32 %24, 0
  %25 = load i32* @flag_unsafe_math_optimizations, align 4
  %tobool52.i = icmp ne i32 %25, 0
  %or.cond.i = or i1 %tobool50.i, %tobool52.i
  br i1 %or.cond.i, label %expand_builtin_mathfn.exit, label %if.then53.i

if.then53.i:                                      ; preds = %if.end49.i
  %call54.i = call %struct.rtx_def* @gen_label_rtx() #5
  %26 = getelementptr inbounds %struct.rtx_def* %call46.i, i64 0, i32 0
  %bf.load55.i = load i32* %26, align 8
  %bf.lshr56.i = lshr i32 %bf.load55.i, 16
  %bf.clear57.i = and i32 %bf.lshr56.i, 255
  call void @emit_cmp_and_jump_insns(%struct.rtx_def* %call46.i, %struct.rtx_def* %call46.i, i32 103, %struct.rtx_def* null, i32 %bf.clear57.i, i32 0, %struct.rtx_def* %call54.i) #5
  %27 = load %struct.function** @cfun, align 8, !tbaa !5
  %expr.i = getelementptr inbounds %struct.function* %27, i64 0, i32 2
  %28 = load %struct.expr_status** %expr.i, align 8, !tbaa !10
  %x_inhibit_defer_pop.i = getelementptr inbounds %struct.expr_status* %28, i64 0, i32 1
  %29 = load i32* %x_inhibit_defer_pop.i, align 4, !tbaa !37
  %add.i = add nsw i32 %29, 1
  store i32 %add.i, i32* %x_inhibit_defer_pop.i, align 4, !tbaa !37
  %call58.i = call %struct.rtx_def* @expand_call(%union.tree_node* %exp.addr.0.i, %struct.rtx_def* %call46.i, i32 0) #5
  %30 = load %struct.function** @cfun, align 8, !tbaa !5
  %expr59.i = getelementptr inbounds %struct.function* %30, i64 0, i32 2
  %31 = load %struct.expr_status** %expr59.i, align 8, !tbaa !10
  %x_inhibit_defer_pop60.i = getelementptr inbounds %struct.expr_status* %31, i64 0, i32 1
  %32 = load i32* %x_inhibit_defer_pop60.i, align 4, !tbaa !37
  %sub.i = add nsw i32 %32, -1
  store i32 %sub.i, i32* %x_inhibit_defer_pop60.i, align 4, !tbaa !37
  %call61.i = call %struct.rtx_def* @emit_label(%struct.rtx_def* %call54.i) #5
  br label %expand_builtin_mathfn.exit

expand_builtin_mathfn.exit:                       ; preds = %if.end49.i, %if.then53.i
  %call63.i = call %struct.rtx_def* @get_insns() #5
  call void @end_sequence() #5
  %call64.i = call %struct.rtx_def* @emit_insns(%struct.rtx_def* %call63.i) #5
  br label %return

sw.bb26:                                          ; preds = %if.end14
  %33 = load %struct.function** @cfun, align 8, !tbaa !5
  %expr.i474 = getelementptr inbounds %struct.function* %33, i64 0, i32 2
  %34 = load %struct.expr_status** %expr.i474, align 8, !tbaa !10
  %x_apply_args_value.i = getelementptr inbounds %struct.expr_status* %34, i64 0, i32 4
  %35 = load %struct.rtx_def** %x_apply_args_value.i, align 8, !tbaa !38
  %cmp.i = icmp eq %struct.rtx_def* %35, null
  br i1 %cmp.i, label %if.end.i475, label %return

if.end.i475:                                      ; preds = %sw.bb26
  call void @start_sequence() #5
  %call.i.i = call fastcc i32 @apply_args_size() #5
  %conv.i.i = sext i32 %call.i.i to i64
  %call1.i.i = call %struct.rtx_def* @assign_stack_local(i32 51, i64 %conv.i.i, i32 -1) #5
  %36 = load i32* @target_flags, align 4, !tbaa !1
  %and.i.i = lshr i32 %36, 25
  %37 = and i32 %and.i.i, 1
  %38 = or i32 %37, 4
  %idxprom81.i.i = zext i32 %38 to i64
  %arrayidx.i.i = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom81.i.i
  %39 = load i8* %arrayidx.i.i, align 1, !tbaa !9
  %conv2.i.i = zext i8 %39 to i32
  %40 = load %struct.rtx_def** @struct_value_rtx, align 8, !tbaa !5
  %not.tobool3.i.i = icmp ne %struct.rtx_def* %40, null
  %add.i.i = zext i1 %not.tobool3.i.i to i32
  %conv2.add.i.i = shl nuw nsw i32 %conv2.i.i, %add.i.i
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.inc.i.i, %if.end.i475
  %indvars.iv.i.i = phi i64 [ 0, %if.end.i475 ], [ %indvars.iv.next.i.i, %for.inc.i.i ]
  %size.185.i.i = phi i32 [ %conv2.add.i.i, %if.end.i475 ], [ %size.3.i.i, %for.inc.i.i ]
  %arrayidx12.i.i = getelementptr inbounds [53 x i32]* @apply_args_mode, i64 0, i64 %indvars.iv.i.i
  %41 = load i32* %arrayidx12.i.i, align 4, !tbaa !9
  %cmp13.i.i = icmp eq i32 %41, 0
  br i1 %cmp13.i.i, label %for.inc.i.i, label %if.then15.i.i

if.then15.i.i:                                    ; preds = %for.body.i.i
  %call16.i.i = call i32 @get_mode_alignment(i32 %41) #5
  %div.i.i = lshr i32 %call16.i.i, 3
  %rem.i.i = srem i32 %size.185.i.i, %div.i.i
  %cmp17.i.i = icmp eq i32 %rem.i.i, 0
  br i1 %cmp17.i.i, label %if.end22.i.i, label %if.then19.i.i

if.then19.i.i:                                    ; preds = %if.then15.i.i
  %add20.i.i = add i32 %size.185.i.i, -1
  %sub.i.i = add i32 %add20.i.i, %div.i.i
  %div21.i.i = srem i32 %sub.i.i, %div.i.i
  %mul.i.i = sub i32 %sub.i.i, %div21.i.i
  br label %if.end22.i.i

if.end22.i.i:                                     ; preds = %if.then19.i.i, %if.then15.i.i
  %size.2.i.i = phi i32 [ %mul.i.i, %if.then19.i.i ], [ %size.185.i.i, %if.then15.i.i ]
  %42 = trunc i64 %indvars.iv.i.i to i32
  %call23.i.i = call %struct.rtx_def* @gen_rtx_REG(i32 %41, i32 %42) #5
  %conv24.i.i = sext i32 %size.2.i.i to i64
  %call25.i.i = call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %call1.i.i, i32 %41, i64 %conv24.i.i, i32 1, i32 1) #5
  %call26.i.i = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call25.i.i, %struct.rtx_def* %call23.i.i) #5
  %idxprom27.i.i = sext i32 %41 to i64
  %arrayidx28.i.i = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom27.i.i
  %43 = load i8* %arrayidx28.i.i, align 1, !tbaa !9
  %conv29.i.i = zext i8 %43 to i32
  %add30.i.i = add nsw i32 %conv29.i.i, %size.2.i.i
  br label %for.inc.i.i

for.inc.i.i:                                      ; preds = %if.end22.i.i, %for.body.i.i
  %size.3.i.i = phi i32 [ %add30.i.i, %if.end22.i.i ], [ %size.185.i.i, %for.body.i.i ]
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.i.i = icmp eq i64 %indvars.iv.next.i.i, 53
  br i1 %exitcond.i.i, label %for.end.i.i, label %for.body.i.i

for.end.i.i:                                      ; preds = %for.inc.i.i
  %44 = load i32* @target_flags, align 4, !tbaa !1
  %and32.i.i = lshr i32 %44, 25
  %45 = and i32 %and32.i.i, 1
  %46 = or i32 %45, 4
  %call35.i.i = call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %call1.i.i, i32 %46, i64 0, i32 1, i32 1) #5
  %47 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 6), align 8, !tbaa !5
  %call36.i.i = call %struct.rtx_def* @copy_to_reg(%struct.rtx_def* %47) #5
  %call37.i.i = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call35.i.i, %struct.rtx_def* %call36.i.i) #5
  %48 = load i32* @target_flags, align 4, !tbaa !1
  %and38.i.i = lshr i32 %48, 25
  %49 = and i32 %and38.i.i, 1
  %50 = or i32 %49, 4
  %51 = load %struct.rtx_def** @struct_value_incoming_rtx, align 8, !tbaa !5
  %tobool44.i.i = icmp eq %struct.rtx_def* %51, null
  br i1 %tobool44.i.i, label %expand_builtin_apply_args_1.exit.i, label %if.then45.i.i

if.then45.i.i:                                    ; preds = %for.end.i.i
  %idxprom4182.i.i = zext i32 %50 to i64
  %arrayidx42.i.i = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom4182.i.i
  %52 = load i8* %arrayidx42.i.i, align 1, !tbaa !9
  %conv49.i.i = zext i8 %52 to i64
  %call50.i.i = call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %call1.i.i, i32 %50, i64 %conv49.i.i, i32 1, i32 1) #5
  %53 = load %struct.rtx_def** @struct_value_incoming_rtx, align 8, !tbaa !5
  %call51.i.i = call %struct.rtx_def* @copy_to_reg(%struct.rtx_def* %53) #5
  %call52.i.i = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call50.i.i, %struct.rtx_def* %call51.i.i) #5
  br label %expand_builtin_apply_args_1.exit.i

expand_builtin_apply_args_1.exit.i:               ; preds = %if.then45.i.i, %for.end.i.i
  %arrayidx61.i.i = getelementptr inbounds %struct.rtx_def* %call1.i.i, i64 0, i32 1, i64 0
  %rtx.i.i = bitcast %union.rtunion_def* %arrayidx61.i.i to %struct.rtx_def**
  %54 = load %struct.rtx_def** %rtx.i.i, align 8, !tbaa !5
  %call62.i.i = call %struct.rtx_def* @copy_addr_to_reg(%struct.rtx_def* %54) #5
  %call3.i = call %struct.rtx_def* @get_insns() #5
  call void @end_sequence() #5
  %55 = load %struct.function** @cfun, align 8, !tbaa !5
  %expr4.i = getelementptr inbounds %struct.function* %55, i64 0, i32 2
  %56 = load %struct.expr_status** %expr4.i, align 8, !tbaa !10
  %x_apply_args_value5.i = getelementptr inbounds %struct.expr_status* %56, i64 0, i32 4
  store %struct.rtx_def* %call62.i.i, %struct.rtx_def** %x_apply_args_value5.i, align 8, !tbaa !38
  call void @push_topmost_sequence() #5
  %call6.i = call %struct.rtx_def* @get_insns() #5
  %arrayidx.i476 = getelementptr inbounds %struct.rtx_def* %call6.i, i64 0, i32 1, i64 2
  %rtx.i = bitcast %union.rtunion_def* %arrayidx.i476 to %struct.rtx_def**
  %57 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !5
  %call7.i = call %struct.rtx_def* @emit_insns_before(%struct.rtx_def* %call3.i, %struct.rtx_def* %57) #5
  call void @pop_topmost_sequence() #5
  br label %return

sw.bb28:                                          ; preds = %if.end14
  %call29 = call i32 (%union.tree_node*, ...)* @validate_arglist(%union.tree_node* %4, i32 13, i32 13, i32 6, i32 5)
  %tobool30 = icmp eq i32 %call29, 0
  br i1 %tobool30, label %land.lhs.true31, label %for.cond.preheader

for.cond.preheader:                               ; preds = %land.lhs.true31, %sw.bb28
  %tobool351562 = icmp eq %union.tree_node* %4, null
  br i1 %tobool351562, label %for.end, label %for.body

land.lhs.true31:                                  ; preds = %sw.bb28
  %call32 = call i32 (%union.tree_node*, ...)* @validate_arglist(%union.tree_node* %4, i32 15, i32 13, i32 6, i32 5)
  %tobool33 = icmp eq i32 %call32, 0
  br i1 %tobool33, label %if.then34, label %for.cond.preheader

if.then34:                                        ; preds = %land.lhs.true31
  %58 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !5
  br label %return

for.body:                                         ; preds = %for.cond.preheader, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %for.cond.preheader ]
  %t.01564 = phi %union.tree_node* [ %61, %for.body ], [ %4, %for.cond.preheader ]
  %value = getelementptr inbounds %union.tree_node* %t.01564, i64 0, i32 0, i32 2
  %59 = bitcast i32* %value to %union.tree_node**
  %60 = load %union.tree_node** %59, align 8, !tbaa !26
  %call36 = call %struct.rtx_def* @expand_expr(%union.tree_node* %60, %struct.rtx_def* null, i32 0, i32 0) #5
  %arrayidx37 = getelementptr inbounds [3 x %struct.rtx_def*]* %ops, i64 0, i64 %indvars.iv
  store %struct.rtx_def* %call36, %struct.rtx_def** %arrayidx37, align 8, !tbaa !5
  %chain = getelementptr inbounds %union.tree_node* %t.01564, i64 0, i32 0, i32 0, i32 0
  %61 = load %union.tree_node** %chain, align 8, !tbaa !28
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %tobool35 = icmp eq %union.tree_node* %61, null
  br i1 %tobool35, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %arrayidx38.phi.trans.insert = getelementptr inbounds [3 x %struct.rtx_def*]* %ops, i64 0, i64 0
  %.pre = load %struct.rtx_def** %arrayidx38.phi.trans.insert, align 16, !tbaa !5
  %arrayidx39.phi.trans.insert = getelementptr inbounds [3 x %struct.rtx_def*]* %ops, i64 0, i64 1
  %.pre1568 = load %struct.rtx_def** %arrayidx39.phi.trans.insert, align 8, !tbaa !5
  %arrayidx40.phi.trans.insert = getelementptr inbounds [3 x %struct.rtx_def*]* %ops, i64 0, i64 2
  %.pre1569 = load %struct.rtx_def** %arrayidx40.phi.trans.insert, align 16, !tbaa !5
  br label %for.end

for.end:                                          ; preds = %for.cond.preheader, %for.cond.for.end_crit_edge
  %62 = phi %struct.rtx_def* [ %.pre1569, %for.cond.for.end_crit_edge ], [ undef, %for.cond.preheader ]
  %63 = phi %struct.rtx_def* [ %.pre1568, %for.cond.for.end_crit_edge ], [ undef, %for.cond.preheader ]
  %64 = phi %struct.rtx_def* [ %.pre, %for.cond.for.end_crit_edge ], [ undef, %for.cond.preheader ]
  %65 = bitcast %struct.rtx_def** %old_stack_level.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %65) #5
  %66 = bitcast %struct.rtx_def** %call_fusage.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %66) #5
  store %struct.rtx_def* null, %struct.rtx_def** %old_stack_level.i, align 8, !tbaa !5
  store %struct.rtx_def* null, %struct.rtx_def** %call_fusage.i, align 8, !tbaa !5
  %call.i478 = call fastcc i32 @apply_result_size() #5
  %conv.i = sext i32 %call.i478 to i64
  %call1.i = call %struct.rtx_def* @assign_stack_local(i32 51, i64 %conv.i, i32 -1) #5
  %67 = load i32* @target_flags, align 4, !tbaa !1
  %and.i = lshr i32 %67, 25
  %68 = and i32 %and.i, 1
  %69 = or i32 %68, 4
  %call2.i = call %struct.rtx_def* @gen_reg_rtx(i32 %69) #5
  %70 = load i32* @target_flags, align 4, !tbaa !1
  %and3.i = lshr i32 %70, 25
  %71 = and i32 %and3.i, 1
  %72 = or i32 %71, 4
  %call6.i479 = call %struct.rtx_def* @gen_rtx_MEM(i32 %72, %struct.rtx_def* %63) #5
  %call7.i480 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call2.i, %struct.rtx_def* %call6.i479) #5
  call void @emit_queue() #5
  call void @do_pending_stack_adjust() #5
  %73 = load %struct.function** @cfun, align 8, !tbaa !5
  %expr.i481 = getelementptr inbounds %struct.function* %73, i64 0, i32 2
  %74 = load %struct.expr_status** %expr.i481, align 8, !tbaa !10
  %x_inhibit_defer_pop.i482 = getelementptr inbounds %struct.expr_status* %74, i64 0, i32 1
  %75 = load i32* %x_inhibit_defer_pop.i482, align 4, !tbaa !37
  %add.i483 = add nsw i32 %75, 1
  store i32 %add.i483, i32* %x_inhibit_defer_pop.i482, align 4, !tbaa !37
  call void @emit_stack_save(i32 0, %struct.rtx_def** %old_stack_level.i, %struct.rtx_def* null) #5
  %call8.i = call %struct.rtx_def* @allocate_dynamic_stack_space(%struct.rtx_def* %62, %struct.rtx_def* null, i32 8) #5
  %call9.i = call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %call8.i) #5
  %76 = load i32* @target_flags, align 4, !tbaa !1
  %and10.i = lshr i32 %76, 20
  %77 = and i32 %and10.i, 32
  %78 = add i32 %77, 32
  call void @set_mem_align(%struct.rtx_def* %call9.i, i32 %78) #5
  %call13.i = call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %call2.i) #5
  %79 = load i32* @target_flags, align 4, !tbaa !1
  %and14.i = lshr i32 %79, 20
  %80 = and i32 %and14.i, 32
  %81 = add i32 %80, 32
  call void @set_mem_align(%struct.rtx_def* %call13.i, i32 %81) #5
  %call17.i = call %struct.rtx_def* @emit_block_move(%struct.rtx_def* %call9.i, %struct.rtx_def* %call13.i, %struct.rtx_def* %62) #5
  %call18.i = call fastcc i32 @apply_args_size() #5
  %call19.i = call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %63) #5
  %82 = load i32* @target_flags, align 4, !tbaa !1
  %and20.i = lshr i32 %82, 20
  %83 = and i32 %and20.i, 32
  %84 = add i32 %83, 32
  call void @set_mem_align(%struct.rtx_def* %call19.i, i32 %84) #5
  %85 = load i32* @target_flags, align 4, !tbaa !1
  %and23.i = lshr i32 %85, 25
  %86 = and i32 %and23.i, 1
  %87 = or i32 %86, 4
  %idxprom187.i = zext i32 %87 to i64
  %arrayidx.i484 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom187.i
  %88 = load i8* %arrayidx.i484, align 1, !tbaa !9
  %conv26.i = zext i8 %88 to i32
  %89 = load %struct.rtx_def** @struct_value_rtx, align 8, !tbaa !5
  %not.tobool27.i = icmp ne %struct.rtx_def* %89, null
  %add34.i = zext i1 %not.tobool27.i to i32
  %conv26.add34.i = shl nuw nsw i32 %conv26.i, %add34.i
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i, %for.end
  %indvars.iv.i = phi i64 [ 0, %for.end ], [ %indvars.iv.next.i, %for.inc.i ]
  %size.1195.i = phi i32 [ %conv26.add34.i, %for.end ], [ %size.3.i, %for.inc.i ]
  %arrayidx37.i = getelementptr inbounds [53 x i32]* @apply_args_mode, i64 0, i64 %indvars.iv.i
  %90 = load i32* %arrayidx37.i, align 4, !tbaa !9
  %cmp38.i = icmp eq i32 %90, 0
  br i1 %cmp38.i, label %for.inc.i, label %if.then40.i

if.then40.i:                                      ; preds = %for.body.i
  %call41.i = call i32 @get_mode_alignment(i32 %90) #5
  %div.i = lshr i32 %call41.i, 3
  %rem.i = srem i32 %size.1195.i, %div.i
  %cmp42.i = icmp eq i32 %rem.i, 0
  br i1 %cmp42.i, label %if.end47.i, label %if.then44.i

if.then44.i:                                      ; preds = %if.then40.i
  %add45.i = add i32 %size.1195.i, -1
  %sub.i485 = add i32 %add45.i, %div.i
  %div46.i = srem i32 %sub.i485, %div.i
  %mul.i = sub i32 %sub.i485, %div46.i
  br label %if.end47.i

if.end47.i:                                       ; preds = %if.then44.i, %if.then40.i
  %size.2.i = phi i32 [ %mul.i, %if.then44.i ], [ %size.1195.i, %if.then40.i ]
  %91 = trunc i64 %indvars.iv.i to i32
  %call48.i = call %struct.rtx_def* @gen_rtx_REG(i32 %90, i32 %91) #5
  %conv49.i = sext i32 %size.2.i to i64
  %call50.i = call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %call19.i, i32 %90, i64 %conv49.i, i32 1, i32 1) #5
  %call51.i = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call48.i, %struct.rtx_def* %call50.i) #5
  call void @use_reg(%struct.rtx_def** %call_fusage.i, %struct.rtx_def* %call48.i) #5
  %idxprom52.i = sext i32 %90 to i64
  %arrayidx53.i = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom52.i
  %92 = load i8* %arrayidx53.i, align 1, !tbaa !9
  %conv54.i = zext i8 %92 to i32
  %add55.i = add nsw i32 %conv54.i, %size.2.i
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.end47.i, %for.body.i
  %size.3.i = phi i32 [ %add55.i, %if.end47.i ], [ %size.1195.i, %for.body.i ]
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %exitcond.i = icmp eq i64 %indvars.iv.next.i, 53
  br i1 %exitcond.i, label %for.end.i, label %for.body.i

for.end.i:                                        ; preds = %for.inc.i
  %93 = load i32* @target_flags, align 4, !tbaa !1
  %and57.i = lshr i32 %93, 25
  %94 = and i32 %and57.i, 1
  %95 = or i32 %94, 4
  %96 = load %struct.rtx_def** @struct_value_rtx, align 8, !tbaa !5
  %tobool63.i = icmp eq %struct.rtx_def* %96, null
  br i1 %tobool63.i, label %if.end87.i, label %if.then64.i

if.then64.i:                                      ; preds = %for.end.i
  %idxprom60188.i = zext i32 %95 to i64
  %arrayidx61.i = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom60188.i
  %97 = load i8* %arrayidx61.i, align 1, !tbaa !9
  %call68.i = call %struct.rtx_def* @gen_reg_rtx(i32 %95) #5
  %98 = load i32* @target_flags, align 4, !tbaa !1
  %and69.i = lshr i32 %98, 25
  %99 = and i32 %and69.i, 1
  %100 = or i32 %99, 4
  %conv72.i = zext i8 %97 to i64
  %call73.i = call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %call19.i, i32 %100, i64 %conv72.i, i32 1, i32 1) #5
  %call74.i = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call68.i, %struct.rtx_def* %call73.i) #5
  %101 = load %struct.rtx_def** @struct_value_rtx, align 8, !tbaa !5
  %call75.i = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %101, %struct.rtx_def* %call68.i) #5
  %102 = load %struct.rtx_def** @struct_value_rtx, align 8, !tbaa !5
  %103 = getelementptr inbounds %struct.rtx_def* %102, i64 0, i32 0
  %bf.load.i486 = load i32* %103, align 8
  %bf.clear.i = and i32 %bf.load.i486, 65535
  %cmp76.i = icmp eq i32 %bf.clear.i, 61
  br i1 %cmp76.i, label %if.then78.i, label %if.end87.i

if.then78.i:                                      ; preds = %if.then64.i
  call void @use_reg(%struct.rtx_def** %call_fusage.i, %struct.rtx_def* %102) #5
  br label %if.end87.i

if.end87.i:                                       ; preds = %if.then78.i, %if.then64.i, %for.end.i
  %call88.i = call %struct.rtx_def* @prepare_call_address(%struct.rtx_def* %64, %union.tree_node* null, %struct.rtx_def** %call_fusage.i, i32 0, i32 0) #5
  %104 = getelementptr inbounds %struct.rtx_def* %call88.i, i64 0, i32 0
  %bf.load89.i = load i32* %104, align 8
  %bf.clear90.i = and i32 %bf.load89.i, 65535
  %cmp91.i = icmp eq i32 %bf.clear90.i, 68
  br i1 %cmp91.i, label %if.end95.i, label %if.then93.i

if.then93.i:                                      ; preds = %if.end87.i
  %call94.i = call %struct.rtx_def* @memory_address(i32 2, %struct.rtx_def* %call88.i) #5
  br label %if.end95.i

if.end95.i:                                       ; preds = %if.then93.i, %if.end87.i
  %function.addr.0.i = phi %struct.rtx_def* [ %call94.i, %if.then93.i ], [ %call88.i, %if.end87.i ]
  %call96.i = call %struct.rtx_def* @gen_rtx_MEM(i32 2, %struct.rtx_def* %function.addr.0.i) #5
  %105 = bitcast [53 x %struct.rtx_def*]* %0 to i8*
  call void @llvm.lifetime.start(i64 424, i8* %105) #5
  br label %for.body.i.i489

for.body.i.i489:                                  ; preds = %for.inc.i.i500, %if.end95.i
  %indvars.iv.i.i487 = phi i64 [ 0, %if.end95.i ], [ %indvars.iv.next.i.i498, %for.inc.i.i500 ]
  %size.02.i.i = phi i32 [ 0, %if.end95.i ], [ %size.2.i.i497, %for.inc.i.i500 ]
  %nelts.01.i.i = phi i32 [ 0, %if.end95.i ], [ %nelts.1.i.i, %for.inc.i.i500 ]
  %arrayidx.i.i488 = getelementptr inbounds [53 x i32]* @apply_result_mode, i64 0, i64 %indvars.iv.i.i487
  %106 = load i32* %arrayidx.i.i488, align 4, !tbaa !9
  %cmp1.i.i = icmp eq i32 %106, 0
  br i1 %cmp1.i.i, label %for.inc.i.i500, label %if.then.i.i

if.then.i.i:                                      ; preds = %for.body.i.i489
  %call.i.i490 = call i32 @get_mode_alignment(i32 %106) #5
  %div.i.i491 = lshr i32 %call.i.i490, 3
  %rem.i.i492 = srem i32 %size.02.i.i, %div.i.i491
  %cmp2.i.i = icmp eq i32 %rem.i.i492, 0
  br i1 %cmp2.i.i, label %if.end.i.i, label %if.then3.i.i

if.then3.i.i:                                     ; preds = %if.then.i.i
  %add.i.i493 = add i32 %size.02.i.i, -1
  %sub.i.i494 = add i32 %add.i.i493, %div.i.i491
  %div4.i.i = srem i32 %sub.i.i494, %div.i.i491
  %mul.i.i495 = sub i32 %sub.i.i494, %div4.i.i
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then3.i.i, %if.then.i.i
  %size.1.i.i = phi i32 [ %mul.i.i495, %if.then3.i.i ], [ %size.02.i.i, %if.then.i.i ]
  %107 = trunc i64 %indvars.iv.i.i487 to i32
  %call5.i.i = call %struct.rtx_def* @gen_rtx_REG(i32 %106, i32 %107) #5
  %conv.i.i496 = sext i32 %size.1.i.i to i64
  %call6.i.i = call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %call1.i, i32 %106, i64 %conv.i.i496, i32 1, i32 1) #5
  %call9.i.i = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call6.i.i, %struct.rtx_def* %call5.i.i) #5
  %inc.i.i = add nsw i32 %nelts.01.i.i, 1
  %idxprom14.i.i = sext i32 %nelts.01.i.i to i64
  %arrayidx15.i.i = getelementptr inbounds [53 x %struct.rtx_def*]* %0, i64 0, i64 %idxprom14.i.i
  store %struct.rtx_def* %call9.i.i, %struct.rtx_def** %arrayidx15.i.i, align 8, !tbaa !5
  %idxprom16.i.i = sext i32 %106 to i64
  %arrayidx17.i.i = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom16.i.i
  %108 = load i8* %arrayidx17.i.i, align 1, !tbaa !9
  %conv18.i.i = zext i8 %108 to i32
  %add19.i.i = add nsw i32 %conv18.i.i, %size.1.i.i
  br label %for.inc.i.i500

for.inc.i.i500:                                   ; preds = %if.end.i.i, %for.body.i.i489
  %nelts.1.i.i = phi i32 [ %inc.i.i, %if.end.i.i ], [ %nelts.01.i.i, %for.body.i.i489 ]
  %size.2.i.i497 = phi i32 [ %add19.i.i, %if.end.i.i ], [ %size.02.i.i, %for.body.i.i489 ]
  %indvars.iv.next.i.i498 = add nuw nsw i64 %indvars.iv.i.i487, 1
  %exitcond.i.i499 = icmp eq i64 %indvars.iv.next.i.i498, 53
  br i1 %exitcond.i.i499, label %result_vector.exit.i, label %for.body.i.i489

result_vector.exit.i:                             ; preds = %for.inc.i.i500
  %.sub.i.i = getelementptr inbounds [53 x %struct.rtx_def*]* %0, i64 0, i64 0
  %call22.i.i = call %struct.rtvec_def* @gen_rtvec_v(i32 %nelts.1.i.i, %struct.rtx_def** %.sub.i.i) #5
  %call23.i.i501 = call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call22.i.i) #5
  call void @llvm.lifetime.end(i64 424, i8* %105) #5
  %call98.i = call %struct.rtx_def* @gen_untyped_call(%struct.rtx_def* %call96.i, %struct.rtx_def* %call1.i, %struct.rtx_def* %call23.i.i501) #5
  %call99.i = call %struct.rtx_def* @emit_call_insn(%struct.rtx_def* %call98.i) #5
  %call100.i = call %struct.rtx_def* @get_last_insn() #5
  %tobool102192.i = icmp eq %struct.rtx_def* %call100.i, null
  br i1 %tobool102192.i, label %if.then112.i, label %land.rhs.i

land.rhs.i:                                       ; preds = %result_vector.exit.i, %for.inc108.i
  %call_insn.0193.i = phi %struct.rtx_def* [ %110, %for.inc108.i ], [ %call100.i, %result_vector.exit.i ]
  %109 = getelementptr inbounds %struct.rtx_def* %call_insn.0193.i, i64 0, i32 0
  %bf.load103.i = load i32* %109, align 8
  %bf.clear104.i = and i32 %bf.load103.i, 65535
  %cmp105.i = icmp eq i32 %bf.clear104.i, 34
  br i1 %cmp105.i, label %if.end113.i, label %for.inc108.i

for.inc108.i:                                     ; preds = %land.rhs.i
  %arrayidx109.i = getelementptr inbounds %struct.rtx_def* %call_insn.0193.i, i64 0, i32 1, i64 1
  %rtx.i502 = bitcast %union.rtunion_def* %arrayidx109.i to %struct.rtx_def**
  %110 = load %struct.rtx_def** %rtx.i502, align 8, !tbaa !5
  %tobool102.i = icmp eq %struct.rtx_def* %110, null
  br i1 %tobool102.i, label %if.then112.i, label %land.rhs.i

if.then112.i:                                     ; preds = %for.inc108.i, %result_vector.exit.i
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8]* @.str100, i64 0, i64 0), i32 1306, i8* getelementptr inbounds ([21 x i8]* @__FUNCTION__.expand_builtin_apply, i64 0, i64 0)) #6
  unreachable

if.end113.i:                                      ; preds = %land.rhs.i
  %arrayidx115.i = getelementptr inbounds %struct.rtx_def* %call_insn.0193.i, i64 0, i32 1, i64 7
  %rtx116.i = bitcast %union.rtunion_def* %arrayidx115.i to %struct.rtx_def**
  %111 = load %struct.rtx_def** %rtx116.i, align 8, !tbaa !5
  %tobool117.i = icmp eq %struct.rtx_def* %111, null
  br i1 %tobool117.i, label %if.else.i, label %for.cond122.i

for.cond122.i:                                    ; preds = %if.end113.i, %for.cond122.i
  %link.0.i = phi %struct.rtx_def* [ %112, %for.cond122.i ], [ %111, %if.end113.i ]
  %arrayidx124.i = getelementptr inbounds %struct.rtx_def* %link.0.i, i64 0, i32 1, i64 1
  %rtx125.i = bitcast %union.rtunion_def* %arrayidx124.i to %struct.rtx_def**
  %112 = load %struct.rtx_def** %rtx125.i, align 8, !tbaa !5
  %cmp126.i = icmp eq %struct.rtx_def* %112, null
  br i1 %cmp126.i, label %for.end133.i, label %for.cond122.i

for.end133.i:                                     ; preds = %for.cond122.i
  %113 = load %struct.rtx_def** %call_fusage.i, align 8, !tbaa !5
  %114 = getelementptr inbounds %union.rtunion_def* %arrayidx124.i, i64 0, i32 0
  %.c189.i = ptrtoint %struct.rtx_def* %113 to i64
  store i64 %.c189.i, i64* %114, align 8, !tbaa !5
  br label %expand_builtin_apply.exit

if.else.i:                                        ; preds = %if.end113.i
  %115 = load %struct.rtx_def** %call_fusage.i, align 8, !tbaa !5
  %116 = getelementptr inbounds %union.rtunion_def* %arrayidx115.i, i64 0, i32 0
  %.c.i = ptrtoint %struct.rtx_def* %115 to i64
  store i64 %.c.i, i64* %116, align 8, !tbaa !5
  br label %expand_builtin_apply.exit

expand_builtin_apply.exit:                        ; preds = %for.end133.i, %if.else.i
  %117 = load %struct.rtx_def** %old_stack_level.i, align 8, !tbaa !5
  call void @emit_stack_restore(i32 0, %struct.rtx_def* %117, %struct.rtx_def* null) #5
  %118 = load %struct.function** @cfun, align 8, !tbaa !5
  %expr141.i = getelementptr inbounds %struct.function* %118, i64 0, i32 2
  %119 = load %struct.expr_status** %expr141.i, align 8, !tbaa !10
  %x_inhibit_defer_pop142.i = getelementptr inbounds %struct.expr_status* %119, i64 0, i32 1
  %120 = load i32* %x_inhibit_defer_pop142.i, align 4, !tbaa !37
  %sub143.i = add nsw i32 %120, -1
  store i32 %sub143.i, i32* %x_inhibit_defer_pop142.i, align 4, !tbaa !37
  %arrayidx145.i = getelementptr inbounds %struct.rtx_def* %call1.i, i64 0, i32 1, i64 0
  %rtx146.i = bitcast %union.rtunion_def* %arrayidx145.i to %struct.rtx_def**
  %121 = load %struct.rtx_def** %rtx146.i, align 8, !tbaa !5
  %call147.i = call %struct.rtx_def* @copy_addr_to_reg(%struct.rtx_def* %121) #5
  call void @llvm.lifetime.end(i64 8, i8* %65) #5
  call void @llvm.lifetime.end(i64 8, i8* %66) #5
  br label %return

sw.bb42:                                          ; preds = %if.end14
  %call43 = call i32 (%union.tree_node*, ...)* @validate_arglist(%union.tree_node* %4, i32 13, i32 5)
  %tobool44 = icmp eq i32 %call43, 0
  br i1 %tobool44, label %if.end49, label %if.then45

if.then45:                                        ; preds = %sw.bb42
  %value47 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 2
  %122 = bitcast i32* %value47 to %union.tree_node**
  %123 = load %union.tree_node** %122, align 8, !tbaa !26
  %call48 = call %struct.rtx_def* @expand_expr(%union.tree_node* %123, %struct.rtx_def* null, i32 0, i32 0) #5
  %call.i503 = call fastcc i32 @apply_result_size() #5
  %call1.i504 = call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %call48) #5
  br label %for.body.i507

for.body.i507:                                    ; preds = %for.inc.i522, %if.then45
  %indvars.iv.i505 = phi i64 [ 0, %if.then45 ], [ %indvars.iv.next.i520, %for.inc.i522 ]
  %call_fusage.036.i = phi %struct.rtx_def* [ null, %if.then45 ], [ %call_fusage.1.i, %for.inc.i522 ]
  %size.035.i = phi i32 [ 0, %if.then45 ], [ %size.2.i519, %for.inc.i522 ]
  %arrayidx.i506 = getelementptr inbounds [53 x i32]* @apply_result_mode, i64 0, i64 %indvars.iv.i505
  %124 = load i32* %arrayidx.i506, align 4, !tbaa !9
  %cmp2.i = icmp eq i32 %124, 0
  br i1 %cmp2.i, label %for.inc.i522, label %if.then.i

if.then.i:                                        ; preds = %for.body.i507
  %call3.i508 = call i32 @get_mode_alignment(i32 %124) #5
  %div.i509 = lshr i32 %call3.i508, 3
  %rem.i510 = srem i32 %size.035.i, %div.i509
  %cmp4.i = icmp eq i32 %rem.i510, 0
  br i1 %cmp4.i, label %if.end.i518, label %if.then5.i

if.then5.i:                                       ; preds = %if.then.i
  %add.i511 = add i32 %size.035.i, -1
  %sub.i512 = add i32 %add.i511, %div.i509
  %div6.i = srem i32 %sub.i512, %div.i509
  %mul.i513 = sub i32 %sub.i512, %div6.i
  br label %if.end.i518

if.end.i518:                                      ; preds = %if.then5.i, %if.then.i
  %size.1.i = phi i32 [ %mul.i513, %if.then5.i ], [ %size.035.i, %if.then.i ]
  %125 = trunc i64 %indvars.iv.i505 to i32
  %call7.i514 = call %struct.rtx_def* @gen_rtx_REG(i32 %124, i32 %125) #5
  %conv.i515 = sext i32 %size.1.i to i64
  %call8.i516 = call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %call1.i504, i32 %124, i64 %conv.i515, i32 1, i32 1) #5
  %call9.i517 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call7.i514, %struct.rtx_def* %call8.i516) #5
  call void @push_to_sequence(%struct.rtx_def* %call_fusage.036.i) #5
  %call10.i = call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %call7.i514) #5
  %call11.i = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call10.i) #5
  %call12.i = call %struct.rtx_def* @get_insns() #5
  call void @end_sequence() #5
  %idxprom13.i = sext i32 %124 to i64
  %arrayidx14.i = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom13.i
  %126 = load i8* %arrayidx14.i, align 1, !tbaa !9
  %conv15.i = zext i8 %126 to i32
  %add16.i = add nsw i32 %conv15.i, %size.1.i
  br label %for.inc.i522

for.inc.i522:                                     ; preds = %if.end.i518, %for.body.i507
  %size.2.i519 = phi i32 [ %add16.i, %if.end.i518 ], [ %size.035.i, %for.body.i507 ]
  %call_fusage.1.i = phi %struct.rtx_def* [ %call12.i, %if.end.i518 ], [ %call_fusage.036.i, %for.body.i507 ]
  %indvars.iv.next.i520 = add nuw nsw i64 %indvars.iv.i505, 1
  %exitcond.i521 = icmp eq i64 %indvars.iv.next.i520, 53
  br i1 %exitcond.i521, label %expand_builtin_return.exit, label %for.body.i507

expand_builtin_return.exit:                       ; preds = %for.inc.i522
  %call18.i523 = call %struct.rtx_def* @emit_insns(%struct.rtx_def* %call_fusage.1.i) #5
  call void @expand_null_return() #5
  br label %if.end49

if.end49:                                         ; preds = %sw.bb42, %expand_builtin_return.exit
  %127 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !5
  br label %return

sw.bb50:                                          ; preds = %if.end14
  %call51 = call %struct.rtx_def* @expand_builtin_saveregs()
  br label %return

sw.bb52:                                          ; preds = %if.end14
  %128 = load %struct.function** @cfun, align 8, !tbaa !5
  %129 = getelementptr inbounds %struct.function* %128, i64 0, i32 13, i32 0
  %cmp.i527 = icmp eq %union.tree_node* %4, null
  br i1 %cmp.i527, label %if.else15.i, label %if.then.i531

if.then.i531:                                     ; preds = %sw.bb52
  %value.i528 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 2
  %130 = bitcast i32* %value.i528 to %union.tree_node**
  %131 = load %union.tree_node** %130, align 8, !tbaa !26
  %call.i529 = call i32 @host_integerp(%union.tree_node* %131, i32 0) #5
  %tobool.i530 = icmp eq i32 %call.i529, 0
  br i1 %tobool.i530, label %if.then2.i, label %if.else.i532

if.then2.i:                                       ; preds = %if.then.i531
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([51 x i8]* @.str123, i64 0, i64 0)) #5
  br label %if.end16.i

if.else.i532:                                     ; preds = %if.then.i531
  %132 = load %union.tree_node** %130, align 8, !tbaa !26
  %call5.i = call i64 @tree_low_cst(%union.tree_node* %132, i32 0) #5
  %133 = icmp ugt i64 %call5.i, 6
  br i1 %133, label %if.then9.i, label %if.else10.i

if.then9.i:                                       ; preds = %if.else.i532
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([47 x i8]* @.str124, i64 0, i64 0)) #5
  br label %if.end16.i

if.else10.i:                                      ; preds = %if.else.i532
  %arrayidx11.i = getelementptr inbounds i32* %129, i64 %call5.i
  %134 = load i32* %arrayidx11.i, align 4, !tbaa !1
  %conv12.i = sext i32 %134 to i64
  %call13.i533 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv12.i) #5
  br label %return

if.else15.i:                                      ; preds = %sw.bb52
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([42 x i8]* @.str125, i64 0, i64 0)) #5
  br label %if.end16.i

if.end16.i:                                       ; preds = %if.else15.i, %if.then9.i, %if.then2.i
  %135 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !5
  br label %return

sw.bb54:                                          ; preds = %if.end14
  %call55 = call fastcc %struct.rtx_def* @expand_builtin_next_arg(%union.tree_node* %4)
  br label %return

sw.bb56:                                          ; preds = %if.end14
  %cmp.i535 = icmp eq %union.tree_node* %4, null
  br i1 %cmp.i535, label %if.end.i541, label %if.then.i538

if.then.i538:                                     ; preds = %sw.bb56
  %value.i536 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 2
  %136 = bitcast i32* %value.i536 to %union.tree_node**
  %137 = load %union.tree_node** %136, align 8, !tbaa !26
  %type.i537 = getelementptr inbounds %union.tree_node* %137, i64 0, i32 0, i32 0, i32 1
  %138 = load %union.tree_node** %type.i537, align 8, !tbaa !15
  %code.i.i = getelementptr inbounds %union.tree_node* %138, i64 0, i32 0, i32 0, i32 2
  %bf.load.i.i = load i32* %code.i.i, align 8
  %bf.clear.i.i = and i32 %bf.load.i.i, 255
  switch i32 %bf.clear.i.i, label %sw.default.i.i [
    i32 5, label %type_to_class.exit.i
    i32 6, label %sw.bb1.i.i
    i32 12, label %sw.bb2.i.i
    i32 10, label %sw.bb3.i.i
    i32 11, label %sw.bb4.i.i
    i32 13, label %sw.bb5.i.i
    i32 15, label %sw.bb6.i.i
    i32 14, label %sw.bb7.i.i
    i32 7, label %sw.bb8.i.i
    i32 8, label %sw.bb9.i.i
    i32 23, label %sw.bb10.i.i
    i32 16, label %sw.bb11.i.i
    i32 20, label %sw.bb12.i.i
    i32 21, label %sw.bb13.i.i
    i32 22, label %sw.bb13.i.i
    i32 18, label %sw.bb14.i.i
    i32 19, label %sw.bb18.i.i
    i32 17, label %sw.bb19.i.i
    i32 24, label %sw.bb20.i.i
  ]

sw.bb1.i.i:                                       ; preds = %if.then.i538
  br label %type_to_class.exit.i

sw.bb2.i.i:                                       ; preds = %if.then.i538
  br label %type_to_class.exit.i

sw.bb3.i.i:                                       ; preds = %if.then.i538
  br label %type_to_class.exit.i

sw.bb4.i.i:                                       ; preds = %if.then.i538
  br label %type_to_class.exit.i

sw.bb5.i.i:                                       ; preds = %if.then.i538
  br label %type_to_class.exit.i

sw.bb6.i.i:                                       ; preds = %if.then.i538
  br label %type_to_class.exit.i

sw.bb7.i.i:                                       ; preds = %if.then.i538
  br label %type_to_class.exit.i

sw.bb8.i.i:                                       ; preds = %if.then.i538
  br label %type_to_class.exit.i

sw.bb9.i.i:                                       ; preds = %if.then.i538
  br label %type_to_class.exit.i

sw.bb10.i.i:                                      ; preds = %if.then.i538
  br label %type_to_class.exit.i

sw.bb11.i.i:                                      ; preds = %if.then.i538
  br label %type_to_class.exit.i

sw.bb12.i.i:                                      ; preds = %if.then.i538
  br label %type_to_class.exit.i

sw.bb13.i.i:                                      ; preds = %if.then.i538, %if.then.i538
  br label %type_to_class.exit.i

sw.bb14.i.i:                                      ; preds = %if.then.i538
  %type15.i.i = bitcast %union.tree_node* %138 to %struct.tree_type*
  %string_flag.i.i = getelementptr inbounds %struct.tree_type* %type15.i.i, i64 0, i32 6
  %bf.load16.i.i = load i32* %string_flag.i.i, align 4
  %bf.clear17.i.i = lshr i32 %bf.load16.i.i, 16
  %139 = and i32 %bf.clear17.i.i, 1
  %140 = or i32 %139, 14
  %phitmp4.i = zext i32 %140 to i64
  br label %type_to_class.exit.i

sw.bb18.i.i:                                      ; preds = %if.then.i538
  br label %type_to_class.exit.i

sw.bb19.i.i:                                      ; preds = %if.then.i538
  br label %type_to_class.exit.i

sw.bb20.i.i:                                      ; preds = %if.then.i538
  br label %type_to_class.exit.i

sw.default.i.i:                                   ; preds = %if.then.i538
  br label %type_to_class.exit.i

type_to_class.exit.i:                             ; preds = %sw.default.i.i, %sw.bb20.i.i, %sw.bb19.i.i, %sw.bb18.i.i, %sw.bb14.i.i, %sw.bb13.i.i, %sw.bb12.i.i, %sw.bb11.i.i, %sw.bb10.i.i, %sw.bb9.i.i, %sw.bb8.i.i, %sw.bb7.i.i, %sw.bb6.i.i, %sw.bb5.i.i, %sw.bb4.i.i, %sw.bb3.i.i, %sw.bb2.i.i, %sw.bb1.i.i, %if.then.i538
  %retval.0.i.i = phi i64 [ -1, %sw.default.i.i ], [ 18, %sw.bb20.i.i ], [ 17, %sw.bb19.i.i ], [ 16, %sw.bb18.i.i ], [ %phitmp4.i, %sw.bb14.i.i ], [ 13, %sw.bb13.i.i ], [ 12, %sw.bb12.i.i ], [ 11, %sw.bb11.i.i ], [ 10, %sw.bb10.i.i ], [ 9, %sw.bb9.i.i ], [ 8, %sw.bb8.i.i ], [ 7, %sw.bb7.i.i ], [ 6, %sw.bb6.i.i ], [ 5, %sw.bb5.i.i ], [ 4, %sw.bb4.i.i ], [ 3, %sw.bb3.i.i ], [ 2, %sw.bb2.i.i ], [ 1, %sw.bb1.i.i ], [ 0, %if.then.i538 ]
  %call1.i539 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %retval.0.i.i) #5
  br label %return

if.end.i541:                                      ; preds = %sw.bb56
  %call2.i540 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 -1) #5
  br label %return

sw.bb58:                                          ; preds = %if.end14
  %cmp.i545 = icmp eq %union.tree_node* %4, null
  br i1 %cmp.i545, label %if.then.i546, label %if.end.i555

if.then.i546:                                     ; preds = %sw.bb58
  %141 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !5
  br label %return

if.end.i555:                                      ; preds = %sw.bb58
  %type.i547 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 1
  %142 = load %union.tree_node** %type.i547, align 8, !tbaa !15
  %type2.i = bitcast %union.tree_node* %142 to %struct.tree_type*
  %mode.i548 = getelementptr inbounds %struct.tree_type* %type2.i, i64 0, i32 6
  %bf.load.i549 = load i32* %mode.i548, align 4
  %bf.lshr.i550 = lshr i32 %bf.load.i549, 9
  %bf.clear.i551 = and i32 %bf.lshr.i550, 127
  %value.i552 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 2
  %143 = bitcast i32* %value.i552 to %union.tree_node**
  %144 = load %union.tree_node** %143, align 8, !tbaa !26
  %call.i553 = call %struct.rtx_def* @expand_expr(%union.tree_node* %144, %struct.rtx_def* null, i32 0, i32 0) #5
  %call3.i554 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 140, i32 %bf.clear.i551, %struct.rtx_def* %call.i553) #5
  br label %return

sw.bb60:                                          ; preds = %if.end14, %if.end14
  %cmp.i559 = icmp eq %union.tree_node* %4, null
  br i1 %cmp.i559, label %if.then.i560, label %if.else.i567

if.then.i560:                                     ; preds = %sw.bb60
  %145 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !5
  br label %return

if.else.i567:                                     ; preds = %sw.bb60
  %value.i564 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 2
  %146 = bitcast i32* %value.i564 to %union.tree_node**
  %147 = load %union.tree_node** %146, align 8, !tbaa !26
  %call.i565 = call i32 @host_integerp(%union.tree_node* %147, i32 1) #5
  %tobool.i566 = icmp eq i32 %call.i565, 0
  %148 = load i32* %f, align 4, !tbaa !9
  br i1 %tobool.i566, label %if.then8.i, label %if.else12.i

if.then8.i:                                       ; preds = %if.else.i567
  %cmp9.i = icmp eq i32 %148, 52
  br i1 %cmp9.i, label %if.then10.i, label %if.else11.i

if.then10.i:                                      ; preds = %if.then8.i
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([41 x i8]* @.str116, i64 0, i64 0)) #5
  br label %if.end.i568

if.else11.i:                                      ; preds = %if.then8.i
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([42 x i8]* @.str117, i64 0, i64 0)) #5
  br label %if.end.i568

if.end.i568:                                      ; preds = %if.else11.i, %if.then10.i
  %149 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !5
  br label %return

if.else12.i:                                      ; preds = %if.else.i567
  %150 = load %union.tree_node** %146, align 8, !tbaa !26
  %call18.i569 = call i64 @tree_low_cst(%union.tree_node* %150, i32 1) #5
  %conv.i570 = trunc i64 %call18.i569 to i32
  %151 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 4), align 8, !tbaa !5
  %call19.i571 = call %struct.rtx_def* @expand_builtin_return_addr(i32 %148, i32 %conv.i570, %struct.rtx_def* %151) #5
  %cmp20.i = icmp eq %struct.rtx_def* %call19.i571, null
  %152 = load i32* %f, align 4, !tbaa !9
  %cmp26.i = icmp eq i32 %152, 52
  br i1 %cmp20.i, label %if.then22.i, label %if.end31.i

if.then22.i:                                      ; preds = %if.else12.i
  br i1 %cmp26.i, label %if.then28.i, label %if.else29.i

if.then28.i:                                      ; preds = %if.then22.i
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([45 x i8]* @.str118, i64 0, i64 0)) #5
  br label %if.end30.i

if.else29.i:                                      ; preds = %if.then22.i
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([46 x i8]* @.str119, i64 0, i64 0)) #5
  br label %if.end30.i

if.end30.i:                                       ; preds = %if.else29.i, %if.then28.i
  %153 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !5
  br label %return

if.end31.i:                                       ; preds = %if.else12.i
  br i1 %cmp26.i, label %return, label %if.end38.i

if.end38.i:                                       ; preds = %if.end31.i
  %154 = getelementptr inbounds %struct.rtx_def* %call19.i571, i64 0, i32 0
  %bf.load.i572 = load i32* %154, align 8
  %bf.clear.i573 = and i32 %bf.load.i572, 65535
  switch i32 %bf.clear.i573, label %if.then79.i [
    i32 61, label %return
    i32 67, label %return
    i32 68, label %return
    i32 54, label %return
    i32 55, label %return
    i32 58, label %return
    i32 134, label %return
    i32 56, label %return
    i32 140, label %return
  ]

if.then79.i:                                      ; preds = %if.end38.i
  %155 = load i32* @target_flags, align 4, !tbaa !1
  %and.i574 = lshr i32 %155, 25
  %156 = and i32 %and.i574, 1
  %157 = or i32 %156, 4
  %call81.i = call %struct.rtx_def* @copy_to_mode_reg(i32 %157, %struct.rtx_def* %call19.i571) #5
  br label %return

sw.bb62:                                          ; preds = %if.end14
  %cmp63 = icmp eq %union.tree_node* %4, null
  br i1 %cmp63, label %lor.lhs.false, label %if.then128

lor.lhs.false:                                    ; preds = %sw.bb62
  %158 = load %union.tree_node** @current_function_decl, align 8, !tbaa !5
  %type = getelementptr inbounds %union.tree_node* %158, i64 0, i32 0, i32 0, i32 1
  %159 = load %union.tree_node** %type, align 8, !tbaa !15
  %type66 = getelementptr inbounds %union.tree_node* %159, i64 0, i32 0, i32 0, i32 1
  %160 = load %union.tree_node** %type66, align 8, !tbaa !15
  %code = getelementptr inbounds %union.tree_node* %160, i64 0, i32 0, i32 0, i32 2
  %bf.load68 = load i32* %code, align 8
  %bf.clear69 = and i32 %bf.load68, 255
  %bf.clear69.off = add i32 %bf.clear69, -18
  %switch = icmp ult i32 %bf.clear69.off, 5
  br i1 %switch, label %lor.lhs.false111, label %if.then128

lor.lhs.false111:                                 ; preds = %lor.lhs.false
  %result = getelementptr inbounds %union.tree_node* %158, i64 0, i32 0, i32 11
  %161 = load %union.tree_node** %result, align 8, !tbaa !39
  %rtl = getelementptr inbounds %union.tree_node* %161, i64 0, i32 0, i32 17
  %162 = load %struct.rtx_def** %rtl, align 8, !tbaa !40
  %tobool114 = icmp eq %struct.rtx_def* %162, null
  br i1 %tobool114, label %cond.false, label %cond.end

cond.false:                                       ; preds = %lor.lhs.false111
  call void @make_decl_rtl(%union.tree_node* %161, i8* null) #5
  %163 = load %union.tree_node** @current_function_decl, align 8, !tbaa !5
  %result122 = getelementptr inbounds %union.tree_node* %163, i64 0, i32 0, i32 11
  %164 = load %union.tree_node** %result122, align 8, !tbaa !39
  %rtl124 = getelementptr inbounds %union.tree_node* %164, i64 0, i32 0, i32 17
  %165 = load %struct.rtx_def** %rtl124, align 8, !tbaa !40
  br label %cond.end

cond.end:                                         ; preds = %lor.lhs.false111, %cond.false
  %166 = phi %union.tree_node* [ %164, %cond.false ], [ %161, %lor.lhs.false111 ]
  %167 = phi %struct.rtx_def* [ %165, %cond.false ], [ %162, %lor.lhs.false111 ]
  %168 = getelementptr inbounds %struct.rtx_def* %167, i64 0, i32 0
  %bf.load125 = load i32* %168, align 8
  %bf.clear126 = and i32 %bf.load125, 65535
  %cmp127 = icmp eq i32 %bf.clear126, 66
  br i1 %cmp127, label %if.else129, label %if.then128

if.then128:                                       ; preds = %lor.lhs.false, %cond.end, %sw.bb62
  %169 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !5
  br label %return

if.else129:                                       ; preds = %cond.end
  %tobool134 = icmp eq %struct.rtx_def* %167, null
  br i1 %tobool134, label %cond.false140, label %cond.end147

cond.false140:                                    ; preds = %if.else129
  call void @make_decl_rtl(%union.tree_node* %166, i8* null) #5
  %170 = load %union.tree_node** @current_function_decl, align 8, !tbaa !5
  %result144 = getelementptr inbounds %union.tree_node* %170, i64 0, i32 0, i32 11
  %171 = load %union.tree_node** %result144, align 8, !tbaa !39
  %rtl146 = getelementptr inbounds %union.tree_node* %171, i64 0, i32 0, i32 17
  %172 = load %struct.rtx_def** %rtl146, align 8, !tbaa !40
  br label %cond.end147

cond.end147:                                      ; preds = %if.else129, %cond.false140
  %cond148 = phi %struct.rtx_def* [ %172, %cond.false140 ], [ %167, %if.else129 ]
  %arrayidx149 = getelementptr inbounds %struct.rtx_def* %cond148, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx149 to %struct.rtx_def**
  %173 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  br label %return

sw.bb150:                                         ; preds = %if.end14
  %call.i576 = call i32 (%union.tree_node*, ...)* @validate_arglist(%union.tree_node* %4, i32 6, i32 5) #5
  %tobool.i577 = icmp eq i32 %call.i576, 0
  br i1 %tobool.i577, label %sw.epilog320, label %expand_builtin_alloca.exit

expand_builtin_alloca.exit:                       ; preds = %sw.bb150
  %value.i578 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 2
  %174 = bitcast i32* %value.i578 to %union.tree_node**
  %175 = load %union.tree_node** %174, align 8, !tbaa !26
  %call1.i579 = call %struct.rtx_def* @expand_expr(%union.tree_node* %175, %struct.rtx_def* null, i32 0, i32 0) #5
  %call2.i580 = call %struct.rtx_def* @allocate_dynamic_stack_space(%struct.rtx_def* %call1.i579, %struct.rtx_def* %target, i32 8) #5
  %tobool152 = icmp eq %struct.rtx_def* %call2.i580, null
  br i1 %tobool152, label %sw.epilog320, label %return

sw.bb155:                                         ; preds = %if.end14
  %call.i583 = call i32 (%union.tree_node*, ...)* @validate_arglist(%union.tree_node* %4, i32 6, i32 5) #5
  %tobool.i584 = icmp eq i32 %call.i583, 0
  br i1 %tobool.i584, label %sw.epilog320, label %if.end.i594

if.end.i594:                                      ; preds = %sw.bb155
  %value.i585 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 2
  %176 = bitcast i32* %value.i585 to %union.tree_node**
  %177 = load %union.tree_node** %176, align 8, !tbaa !26
  %call1.i586 = call %struct.rtx_def* @expand_expr(%union.tree_node* %177, %struct.rtx_def* %subtarget, i32 0, i32 0) #5
  %178 = load %union.tree_node** %176, align 8, !tbaa !26
  %type.i587 = getelementptr inbounds %union.tree_node* %178, i64 0, i32 0, i32 0, i32 1
  %179 = load %union.tree_node** %type.i587, align 8, !tbaa !15
  %type4.i = bitcast %union.tree_node* %179 to %struct.tree_type*
  %mode.i588 = getelementptr inbounds %struct.tree_type* %type4.i, i64 0, i32 6
  %bf.load.i589 = load i32* %mode.i588, align 4
  %bf.lshr.i590 = lshr i32 %bf.load.i589, 9
  %bf.clear.i591 = and i32 %bf.lshr.i590, 127
  %180 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 37), align 8, !tbaa !5
  %call5.i592 = call %struct.rtx_def* @expand_unop(i32 %bf.clear.i591, %struct.optab* %180, %struct.rtx_def* %call1.i586, %struct.rtx_def* %target, i32 1) #5
  %cmp.i593 = icmp eq %struct.rtx_def* %call5.i592, null
  br i1 %cmp.i593, label %if.then6.i, label %return

if.then6.i:                                       ; preds = %if.end.i594
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8]* @.str100, i64 0, i64 0), i32 3325, i8* getelementptr inbounds ([19 x i8]* @__FUNCTION__.expand_builtin_ffs, i64 0, i64 0)) #6
  unreachable

sw.bb160:                                         ; preds = %if.end14
  %type.i598 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 1
  %181 = load %union.tree_node** %type.i598, align 8, !tbaa !15
  %type2.i599 = bitcast %union.tree_node* %181 to %struct.tree_type*
  %mode.i600 = getelementptr inbounds %struct.tree_type* %type2.i599, i64 0, i32 6
  %bf.load.i601 = load i32* %mode.i600, align 4
  %bf.lshr.i602 = lshr i32 %bf.load.i601, 9
  %bf.clear.i603 = and i32 %bf.lshr.i602, 127
  %call.i604 = call i32 (%union.tree_node*, ...)* @validate_arglist(%union.tree_node* %4, i32 13, i32 5) #5
  %tobool.i605 = icmp eq i32 %call.i604, 0
  br i1 %tobool.i605, label %sw.epilog320, label %if.else.i610

if.else.i610:                                     ; preds = %sw.bb160
  %value.i606 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 2
  %182 = bitcast i32* %value.i606 to %union.tree_node**
  %183 = load %union.tree_node** %182, align 8, !tbaa !26
  %call3.i607 = call fastcc i32 @get_pointer_alignment(%union.tree_node* %183) #5
  %div.i608 = sdiv i32 %call3.i607, 8
  %call3.off.i = add i32 %call3.i607, 7
  %184 = icmp ult i32 %call3.off.i, 15
  %cmp5131.i = icmp eq i32 %bf.clear.i603, 0
  %or.cond.i609 = or i1 %184, %cmp5131.i
  br i1 %or.cond.i609, label %sw.epilog320, label %while.body.lr.ph.i

while.body.lr.ph.i:                               ; preds = %if.else.i610
  %185 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 44), align 8, !tbaa !5
  br label %while.body.i

while.body.i:                                     ; preds = %if.end9.i, %while.body.lr.ph.i
  %insn_mode.0132.i = phi i32 [ %bf.clear.i603, %while.body.lr.ph.i ], [ %conv.i612, %if.end9.i ]
  %idxprom127.i = zext i32 %insn_mode.0132.i to i64
  %insn_code.i = getelementptr inbounds %struct.optab* %185, i64 0, i32 1, i64 %idxprom127.i, i32 0
  %186 = load i32* %insn_code.i, align 4, !tbaa !41
  %cmp7.i = icmp eq i32 %186, 1317
  br i1 %cmp7.i, label %if.end9.i, label %if.end15.i

if.end9.i:                                        ; preds = %while.body.i
  %arrayidx11.i611 = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom127.i
  %187 = load i8* %arrayidx11.i611, align 1, !tbaa !9
  %conv.i612 = zext i8 %187 to i32
  %cmp5.i = icmp eq i8 %187, 0
  br i1 %cmp5.i, label %sw.epilog320, label %while.body.i

if.end15.i:                                       ; preds = %while.body.i
  %cmp16.i = icmp ne %struct.rtx_def* %target, null
  br i1 %cmp16.i, label %land.lhs.true.i, label %if.then32.i

land.lhs.true.i:                                  ; preds = %if.end15.i
  %188 = getelementptr inbounds %struct.rtx_def* %target, i64 0, i32 0
  %bf.load18.i = load i32* %188, align 8
  %bf.clear19.i = and i32 %bf.load18.i, 65535
  %cmp20.i613 = icmp eq i32 %bf.clear19.i, 61
  br i1 %cmp20.i613, label %land.lhs.true22.i, label %if.then32.i

land.lhs.true22.i:                                ; preds = %land.lhs.true.i
  %bf.lshr24.i = lshr i32 %bf.load18.i, 16
  %bf.clear25.i = and i32 %bf.lshr24.i, 255
  %cmp26.i614 = icmp eq i32 %bf.clear25.i, %insn_mode.0132.i
  br i1 %cmp26.i614, label %land.lhs.true28.i, label %if.then32.i

land.lhs.true28.i:                                ; preds = %land.lhs.true22.i
  %arrayidx29.i = getelementptr inbounds %struct.rtx_def* %target, i64 0, i32 1, i64 0
  %rtuint.i = bitcast %union.rtunion_def* %arrayidx29.i to i32*
  %189 = load i32* %rtuint.i, align 4, !tbaa !1
  %cmp30.i = icmp ugt i32 %189, 52
  br i1 %cmp30.i, label %if.end34.i, label %if.then32.i

if.then32.i:                                      ; preds = %land.lhs.true28.i, %land.lhs.true22.i, %land.lhs.true.i, %if.end15.i
  %call33.i = call %struct.rtx_def* @gen_reg_rtx(i32 %insn_mode.0132.i) #5
  br label %if.end34.i

if.end34.i:                                       ; preds = %if.then32.i, %land.lhs.true28.i
  %result.0.i = phi %struct.rtx_def* [ %target, %land.lhs.true28.i ], [ %call33.i, %if.then32.i ]
  %190 = load i32* @target_flags, align 4, !tbaa !1
  %and.i615 = lshr i32 %190, 25
  %191 = and i32 %and.i615, 1
  %192 = or i32 %191, 4
  %call36.i = call %struct.rtx_def* @gen_reg_rtx(i32 %192) #5
  %call37.i = call %struct.rtx_def* @get_last_insn() #5
  %193 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !5
  %idxprom38.i = sext i32 %186 to i64
  %operand.i = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom38.i, i32 3
  %194 = load %struct.insn_operand_data** %operand.i, align 8, !tbaa !43
  %mode41.i = getelementptr inbounds %struct.insn_operand_data* %194, i64 2, i32 2
  %bf.load42.i = load i16* %mode41.i, align 8
  %bf.cast.i = zext i16 %bf.load42.i to i32
  %predicate.i = getelementptr inbounds %struct.insn_operand_data* %194, i64 2, i32 0
  %195 = load i32 (%struct.rtx_def*, i32)** %predicate.i, align 8, !tbaa !45
  %call47.i = call i32 %195(%struct.rtx_def* %193, i32 %bf.cast.i) #5
  %tobool48.i = icmp eq i32 %call47.i, 0
  br i1 %tobool48.i, label %if.then49.i, label %if.end51.i

if.then49.i:                                      ; preds = %if.end34.i
  %call50.i616 = call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast.i, %struct.rtx_def* %193) #5
  br label %if.end51.i

if.end51.i:                                       ; preds = %if.then49.i, %if.end34.i
  %char_rtx.0.i = phi %struct.rtx_def* [ %193, %if.end34.i ], [ %call50.i616, %if.then49.i ]
  %genfun.i = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom38.i, i32 2
  %196 = load %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun.i, align 8, !tbaa !47
  %call54.i617 = call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %call36.i) #5
  %conv55.i = sext i32 %div.i608 to i64
  %call56.i = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv55.i) #5
  %call57.i = call %struct.rtx_def* (%struct.rtx_def*, ...)* %196(%struct.rtx_def* %result.0.i, %struct.rtx_def* %call54.i617, %struct.rtx_def* %char_rtx.0.i, %struct.rtx_def* %call56.i) #5
  %tobool58.i = icmp eq %struct.rtx_def* %call57.i, null
  br i1 %tobool58.i, label %sw.epilog320, label %if.end60.i

if.end60.i:                                       ; preds = %if.end51.i
  %call61.i618 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call57.i) #5
  call void @start_sequence() #5
  %197 = load i32* @ptr_mode, align 4, !tbaa !9
  %call62.i = call %struct.rtx_def* @expand_expr(%union.tree_node* %183, %struct.rtx_def* %call36.i, i32 %197, i32 1) #5
  %call63.i619 = call %struct.rtx_def* @memory_address(i32 51, %struct.rtx_def* %call62.i) #5
  %cmp64.i = icmp eq %struct.rtx_def* %call63.i619, %call36.i
  br i1 %cmp64.i, label %if.end68.i, label %if.then66.i

if.then66.i:                                      ; preds = %if.end60.i
  %call67.i = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call36.i, %struct.rtx_def* %call63.i619) #5
  br label %if.end68.i

if.end68.i:                                       ; preds = %if.then66.i, %if.end60.i
  %call69.i = call %struct.rtx_def* @gen_sequence() #5
  call void @end_sequence() #5
  %tobool70.i = icmp eq %struct.rtx_def* %call37.i, null
  br i1 %tobool70.i, label %if.else73.i, label %if.then71.i

if.then71.i:                                      ; preds = %if.end68.i
  %call72.i = call %struct.rtx_def* @emit_insn_after(%struct.rtx_def* %call69.i, %struct.rtx_def* %call37.i) #5
  br label %if.end76.i

if.else73.i:                                      ; preds = %if.end68.i
  %call74.i620 = call %struct.rtx_def* @get_insns() #5
  %call75.i621 = call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %call69.i, %struct.rtx_def* %call74.i620) #5
  br label %if.end76.i

if.end76.i:                                       ; preds = %if.else73.i, %if.then71.i
  %198 = getelementptr inbounds %struct.rtx_def* %result.0.i, i64 0, i32 0
  %bf.load77.i = load i32* %198, align 8
  %bf.lshr78.i = lshr i32 %bf.load77.i, 16
  %bf.clear79.i = and i32 %bf.lshr78.i, 255
  %cmp80.i = icmp eq i32 %bf.clear79.i, %bf.clear.i603
  br i1 %cmp80.i, label %expand_builtin_strlen.exit, label %if.else83.i

if.else83.i:                                      ; preds = %if.end76.i
  br i1 %cmp16.i, label %expand_builtin_strlen.exit.thread1537, label %if.else87.i

expand_builtin_strlen.exit.thread1537:            ; preds = %if.else83.i
  call void @convert_move(%struct.rtx_def* %target, %struct.rtx_def* %result.0.i, i32 0) #5
  br label %return

if.else87.i:                                      ; preds = %if.else83.i
  %call88.i622 = call %struct.rtx_def* @convert_to_mode(i32 %bf.clear.i603, %struct.rtx_def* %result.0.i, i32 0) #5
  br label %expand_builtin_strlen.exit

expand_builtin_strlen.exit:                       ; preds = %if.end76.i, %if.else87.i
  %retval.0.i623 = phi %struct.rtx_def* [ %call88.i622, %if.else87.i ], [ %result.0.i, %if.end76.i ]
  %tobool162 = icmp eq %struct.rtx_def* %retval.0.i623, null
  br i1 %tobool162, label %sw.epilog320, label %return

sw.bb165:                                         ; preds = %if.end14
  %call.i626 = call i32 (%union.tree_node*, ...)* @validate_arglist(%union.tree_node* %4, i32 13, i32 13, i32 5) #5
  %tobool.i627 = icmp eq i32 %call.i626, 0
  br i1 %tobool.i627, label %sw.epilog320, label %if.end.i628

if.end.i628:                                      ; preds = %sw.bb165
  %199 = load %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*]* @built_in_decls, i64 0, i64 22), align 16, !tbaa !5
  %tobool2.i = icmp eq %union.tree_node* %199, null
  br i1 %tobool2.i, label %sw.epilog320, label %if.end4.i

if.end4.i:                                        ; preds = %if.end.i628
  %chain.i = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0
  %200 = load %union.tree_node** %chain.i, align 8, !tbaa !28
  %value.i629 = getelementptr inbounds %union.tree_node* %200, i64 0, i32 0, i32 2
  %201 = bitcast i32* %value.i629 to %union.tree_node**
  %202 = load %union.tree_node** %201, align 8, !tbaa !26
  %call5.i630 = call fastcc %union.tree_node* @c_strlen(%union.tree_node* %202) #5
  %cmp.i631 = icmp eq %union.tree_node* %call5.i630, null
  br i1 %cmp.i631, label %sw.epilog320, label %expand_builtin_strcpy.exit

expand_builtin_strcpy.exit:                       ; preds = %if.end4.i
  %call8.i632 = call %union.tree_node* @size_int_wide(i64 1, i32 1) #5
  %call9.i633 = call %union.tree_node* @size_binop(i32 59, %union.tree_node* %call5.i630, %union.tree_node* %call8.i632) #5
  %call10.i634 = call %union.tree_node* @build_tree_list(%union.tree_node* null, %union.tree_node* %call9.i633) #5
  %call11.i635 = call %union.tree_node* @chainon(%union.tree_node* %4, %union.tree_node* %call10.i634) #5
  %type.i.i = getelementptr inbounds %union.tree_node* %199, i64 0, i32 0, i32 0, i32 1
  %203 = load %union.tree_node** %type.i.i, align 8, !tbaa !15
  %call.i.i636 = call %union.tree_node* @build_pointer_type(%union.tree_node* %203) #5
  %call1.i.i637 = call %union.tree_node* @build1(i32 121, %union.tree_node* %call.i.i636, %union.tree_node* %199) #5
  %204 = load %union.tree_node** %type.i.i, align 8, !tbaa !15
  %type5.i.i = getelementptr inbounds %union.tree_node* %204, i64 0, i32 0, i32 0, i32 1
  %205 = load %union.tree_node** %type5.i.i, align 8, !tbaa !15
  %call6.i.i638 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 53, %union.tree_node* %205, %union.tree_node* %call1.i.i637, %union.tree_node* %4) #5
  %side_effects_flag.i.i = getelementptr inbounds %union.tree_node* %call6.i.i638, i64 0, i32 0, i32 0, i32 2
  %bf.load.i.i639 = load i32* %side_effects_flag.i.i, align 8
  %bf.set.i.i = or i32 %bf.load.i.i639, 256
  store i32 %bf.set.i.i, i32* %side_effects_flag.i.i, align 8
  %call8.i.i = call %union.tree_node* @fold(%union.tree_node* %call6.i.i638) #5
  %call13.i640 = call %struct.rtx_def* @expand_expr(%union.tree_node* %call8.i.i, %struct.rtx_def* %target, i32 %mode, i32 0) #5
  %tobool167 = icmp eq %struct.rtx_def* %call13.i640, null
  br i1 %tobool167, label %sw.epilog320, label %return

sw.bb170:                                         ; preds = %if.end14
  %call.i642 = call i32 (%union.tree_node*, ...)* @validate_arglist(%union.tree_node* %4, i32 13, i32 13, i32 6, i32 5) #5
  %tobool.i643 = icmp eq i32 %call.i642, 0
  br i1 %tobool.i643, label %sw.epilog320, label %if.else.i651

if.else.i651:                                     ; preds = %sw.bb170
  %chain.i644 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0
  %206 = load %union.tree_node** %chain.i644, align 8, !tbaa !28
  %value.i645 = getelementptr inbounds %union.tree_node* %206, i64 0, i32 0, i32 2
  %207 = bitcast i32* %value.i645 to %union.tree_node**
  %208 = load %union.tree_node** %207, align 8, !tbaa !26
  %call1.i646 = call fastcc %union.tree_node* @c_strlen(%union.tree_node* %208) #5
  %209 = load %union.tree_node** %chain.i644, align 8, !tbaa !28
  %chain5.i = getelementptr inbounds %union.tree_node* %209, i64 0, i32 0, i32 0, i32 0
  %210 = load %union.tree_node** %chain5.i, align 8, !tbaa !28
  %value7.i = getelementptr inbounds %union.tree_node* %210, i64 0, i32 0, i32 2
  %211 = bitcast i32* %value7.i to %union.tree_node**
  %212 = load %union.tree_node** %211, align 8, !tbaa !26
  %code.i647 = getelementptr inbounds %union.tree_node* %212, i64 0, i32 0, i32 0, i32 2
  %bf.load.i648 = load i32* %code.i647, align 8
  %bf.clear.i649 = and i32 %bf.load.i648, 255
  %cmp.i650 = icmp eq i32 %bf.clear.i649, 25
  br i1 %cmp.i650, label %if.end.i653, label %sw.epilog320

if.end.i653:                                      ; preds = %if.else.i651
  %call10.i652 = call i32 @integer_zerop(%union.tree_node* %212) #5
  %tobool11.i = icmp eq i32 %call10.i652, 0
  br i1 %tobool11.i, label %if.end21.i, label %if.then12.i

if.then12.i:                                      ; preds = %if.end.i653
  %213 = load %union.tree_node** %chain.i644, align 8, !tbaa !28
  %value16.i = getelementptr inbounds %union.tree_node* %213, i64 0, i32 0, i32 2
  %214 = bitcast i32* %value16.i to %union.tree_node**
  %215 = load %union.tree_node** %214, align 8, !tbaa !26
  %216 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !5
  %call17.i654 = call %struct.rtx_def* @expand_expr(%union.tree_node* %215, %struct.rtx_def* %216, i32 0, i32 0) #5
  %value19.i = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 2
  %217 = bitcast i32* %value19.i to %union.tree_node**
  %218 = load %union.tree_node** %217, align 8, !tbaa !26
  %call20.i = call %struct.rtx_def* @expand_expr(%union.tree_node* %218, %struct.rtx_def* %target, i32 %mode, i32 0) #5
  br label %expand_builtin_strncpy.exit

if.end21.i:                                       ; preds = %if.end.i653
  %cmp22.i = icmp eq %union.tree_node* %call1.i646, null
  br i1 %cmp22.i, label %sw.epilog320, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %if.end21.i
  %code24.i = getelementptr inbounds %union.tree_node* %call1.i646, i64 0, i32 0, i32 0, i32 2
  %bf.load25.i = load i32* %code24.i, align 8
  %bf.clear26.i = and i32 %bf.load25.i, 255
  %cmp27.i = icmp eq i32 %bf.clear26.i, 25
  br i1 %cmp27.i, label %if.end29.i, label %sw.epilog320

if.end29.i:                                       ; preds = %lor.lhs.false.i
  %call30.i = call %union.tree_node* @size_int_wide(i64 1, i32 1) #5
  %call31.i = call %union.tree_node* @size_binop(i32 59, %union.tree_node* %call1.i646, %union.tree_node* %call30.i) #5
  %call32.i = call i32 @tree_int_cst_lt(%union.tree_node* %call31.i, %union.tree_node* %212) #5
  %tobool33.i = icmp eq i32 %call32.i, 0
  br i1 %tobool33.i, label %if.end58.i, label %if.then34.i

if.then34.i:                                      ; preds = %if.end29.i
  %value36.i = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 2
  %219 = bitcast i32* %value36.i to %union.tree_node**
  %220 = load %union.tree_node** %219, align 8, !tbaa !26
  %call37.i655 = call fastcc i32 @get_pointer_alignment(%union.tree_node* %220) #5
  %221 = load %union.tree_node** %chain.i644, align 8, !tbaa !28
  %value41.i = getelementptr inbounds %union.tree_node* %221, i64 0, i32 0, i32 2
  %222 = bitcast i32* %value41.i to %union.tree_node**
  %223 = load %union.tree_node** %222, align 8, !tbaa !26
  %224 = bitcast %union.tree_node** %offset_node.i.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %224) #5
  %call.i.i656 = call %union.tree_node* @string_constant(%union.tree_node* %223, %union.tree_node** %offset_node.i.i) #5
  %cmp.i.i = icmp eq %union.tree_node* %call.i.i656, null
  br i1 %cmp.i.i, label %sw.epilog320, label %if.end.i.i658

if.end.i.i658:                                    ; preds = %if.then34.i
  %225 = load %union.tree_node** %offset_node.i.i, align 8, !tbaa !5
  %cmp1.i.i657 = icmp eq %union.tree_node* %225, null
  br i1 %cmp1.i.i657, label %if.then2.i.i, label %if.else.i.i

if.then2.i.i:                                     ; preds = %if.end.i.i658
  %pointer.i.i = getelementptr inbounds %union.tree_node* %call.i.i656, i64 0, i32 0, i32 4
  %226 = load %union.tree_node** %pointer.i.i, align 8
  %227 = bitcast %union.tree_node* %226 to i8*
  br label %c_getstr.exit.i

if.else.i.i:                                      ; preds = %if.end.i.i658
  %call3.i.i = call i32 @host_integerp(%union.tree_node* %225, i32 1) #5
  %tobool.i.i = icmp eq i32 %call3.i.i, 0
  br i1 %tobool.i.i, label %sw.epilog320, label %lor.lhs.false.i.i

lor.lhs.false.i.i:                                ; preds = %if.else.i.i
  %228 = load %union.tree_node** %offset_node.i.i, align 8, !tbaa !5
  %229 = getelementptr inbounds %union.tree_node* %call.i.i656, i64 0, i32 0, i32 2
  %230 = load i32* %229, align 4, !tbaa !48
  %sub.i.i659 = add nsw i32 %230, -1
  %conv.i.i660 = sext i32 %sub.i.i659 to i64
  %call5.i.i661 = call i32 @compare_tree_int(%union.tree_node* %228, i64 %conv.i.i660) #5
  %cmp6.i.i = icmp sgt i32 %call5.i.i661, 0
  br i1 %cmp6.i.i, label %sw.epilog320, label %if.end10.i.i

if.end10.i.i:                                     ; preds = %lor.lhs.false.i.i
  %pointer12.i.i = getelementptr inbounds %union.tree_node* %call.i.i656, i64 0, i32 0, i32 4
  %231 = load %union.tree_node** %pointer12.i.i, align 8
  %232 = bitcast %union.tree_node* %231 to i8*
  %233 = load %union.tree_node** %offset_node.i.i, align 8, !tbaa !5
  %call13.i.i = call i64 @tree_low_cst(%union.tree_node* %233, i32 1) #5
  %add.ptr.i.i = getelementptr inbounds i8* %232, i64 %call13.i.i
  br label %c_getstr.exit.i

c_getstr.exit.i:                                  ; preds = %if.end10.i.i, %if.then2.i.i
  %retval.0.i.i662 = phi i8* [ %227, %if.then2.i.i ], [ %add.ptr.i.i, %if.end10.i.i ]
  call void @llvm.lifetime.end(i64 8, i8* %224) #5
  %tobool43.i = icmp eq i8* %retval.0.i.i662, null
  %cmp45.i = icmp eq i32 %call37.i655, 0
  %or.cond.i663 = or i1 %tobool43.i, %cmp45.i
  br i1 %or.cond.i663, label %sw.epilog320, label %lor.lhs.false46.i

lor.lhs.false46.i:                                ; preds = %c_getstr.exit.i
  %call47.i664 = call i32 @host_integerp(%union.tree_node* %212, i32 1) #5
  %tobool48.i665 = icmp eq i32 %call47.i664, 0
  br i1 %tobool48.i665, label %sw.epilog320, label %lor.lhs.false49.i

lor.lhs.false49.i:                                ; preds = %lor.lhs.false46.i
  %call50.i666 = call i64 @tree_low_cst(%union.tree_node* %212, i32 1) #5
  %call51.i667 = call i32 @can_store_by_pieces(i64 %call50.i666, %struct.rtx_def* (i8*, i64, i32)* @builtin_strncpy_read_str, i8* %retval.0.i.i662, i32 %call37.i655) #5
  %tobool52.i668 = icmp eq i32 %call51.i667, 0
  br i1 %tobool52.i668, label %sw.epilog320, label %if.end54.i

if.end54.i:                                       ; preds = %lor.lhs.false49.i
  %call55.i = call fastcc %struct.rtx_def* @get_memory_rtx(%union.tree_node* %220) #5
  %call56.i669 = call i64 @tree_low_cst(%union.tree_node* %212, i32 1) #5
  call void @store_by_pieces(%struct.rtx_def* %call55.i, i64 %call56.i669, %struct.rtx_def* (i8*, i64, i32)* @builtin_strncpy_read_str, i8* %retval.0.i.i662, i32 %call37.i655) #5
  %arrayidx.i670 = getelementptr inbounds %struct.rtx_def* %call55.i, i64 0, i32 1, i64 0
  %rtx.i671 = bitcast %union.rtunion_def* %arrayidx.i670 to %struct.rtx_def**
  %234 = load %struct.rtx_def** %rtx.i671, align 8, !tbaa !5
  %call57.i672 = call %struct.rtx_def* @force_operand(%struct.rtx_def* %234, %struct.rtx_def* null) #5
  br label %expand_builtin_strncpy.exit

if.end58.i:                                       ; preds = %if.end29.i
  %235 = load %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*]* @built_in_decls, i64 0, i64 22), align 16, !tbaa !5
  %tobool59.i = icmp eq %union.tree_node* %235, null
  br i1 %tobool59.i, label %sw.epilog320, label %if.end61.i

if.end61.i:                                       ; preds = %if.end58.i
  %type.i.i673 = getelementptr inbounds %union.tree_node* %235, i64 0, i32 0, i32 0, i32 1
  %236 = load %union.tree_node** %type.i.i673, align 8, !tbaa !15
  %call.i88.i = call %union.tree_node* @build_pointer_type(%union.tree_node* %236) #5
  %call1.i.i674 = call %union.tree_node* @build1(i32 121, %union.tree_node* %call.i88.i, %union.tree_node* %235) #5
  %237 = load %union.tree_node** %type.i.i673, align 8, !tbaa !15
  %type5.i.i675 = getelementptr inbounds %union.tree_node* %237, i64 0, i32 0, i32 0, i32 1
  %238 = load %union.tree_node** %type5.i.i675, align 8, !tbaa !15
  %call6.i.i676 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 53, %union.tree_node* %238, %union.tree_node* %call1.i.i674, %union.tree_node* %4) #5
  %side_effects_flag.i.i677 = getelementptr inbounds %union.tree_node* %call6.i.i676, i64 0, i32 0, i32 0, i32 2
  %bf.load.i.i678 = load i32* %side_effects_flag.i.i677, align 8
  %bf.set.i.i679 = or i32 %bf.load.i.i678, 256
  store i32 %bf.set.i.i679, i32* %side_effects_flag.i.i677, align 8
  %call8.i.i680 = call %union.tree_node* @fold(%union.tree_node* %call6.i.i676) #5
  %call63.i681 = call %struct.rtx_def* @expand_expr(%union.tree_node* %call8.i.i680, %struct.rtx_def* %target, i32 %mode, i32 0) #5
  br label %expand_builtin_strncpy.exit

expand_builtin_strncpy.exit:                      ; preds = %if.then12.i, %if.end54.i, %if.end61.i
  %retval.0.i682 = phi %struct.rtx_def* [ %call20.i, %if.then12.i ], [ %call57.i672, %if.end54.i ], [ %call63.i681, %if.end61.i ]
  %tobool172 = icmp eq %struct.rtx_def* %retval.0.i682, null
  br i1 %tobool172, label %sw.epilog320, label %return

sw.bb175:                                         ; preds = %if.end14
  %call.i684 = call i32 (%union.tree_node*, ...)* @validate_arglist(%union.tree_node* %4, i32 13, i32 13, i32 5) #5
  %tobool.i685 = icmp eq i32 %call.i684, 0
  br i1 %tobool.i685, label %sw.epilog320, label %if.else.i690

if.else.i690:                                     ; preds = %sw.bb175
  %value.i686 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 2
  %239 = bitcast i32* %value.i686 to %union.tree_node**
  %240 = load %union.tree_node** %239, align 8, !tbaa !26
  %chain.i687 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0
  %241 = load %union.tree_node** %chain.i687, align 8, !tbaa !28
  %value2.i = getelementptr inbounds %union.tree_node* %241, i64 0, i32 0, i32 2
  %242 = bitcast i32* %value2.i to %union.tree_node**
  %243 = load %union.tree_node** %242, align 8, !tbaa !26
  %244 = bitcast %union.tree_node** %offset_node.i.i683 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %244) #5
  %call.i.i688 = call %union.tree_node* @string_constant(%union.tree_node* %243, %union.tree_node** %offset_node.i.i683) #5
  %cmp.i.i689 = icmp eq %union.tree_node* %call.i.i688, null
  br i1 %cmp.i.i689, label %sw.epilog320, label %if.end.i.i692

if.end.i.i692:                                    ; preds = %if.else.i690
  %245 = load %union.tree_node** %offset_node.i.i683, align 8, !tbaa !5
  %cmp1.i.i691 = icmp eq %union.tree_node* %245, null
  br i1 %cmp1.i.i691, label %if.then2.i.i694, label %if.else.i.i697

if.then2.i.i694:                                  ; preds = %if.end.i.i692
  %pointer.i.i693 = getelementptr inbounds %union.tree_node* %call.i.i688, i64 0, i32 0, i32 4
  %246 = load %union.tree_node** %pointer.i.i693, align 8
  %247 = bitcast %union.tree_node* %246 to i8*
  br label %c_getstr.exit.i708

if.else.i.i697:                                   ; preds = %if.end.i.i692
  %call3.i.i695 = call i32 @host_integerp(%union.tree_node* %245, i32 1) #5
  %tobool.i.i696 = icmp eq i32 %call3.i.i695, 0
  br i1 %tobool.i.i696, label %sw.epilog320, label %lor.lhs.false.i.i702

lor.lhs.false.i.i702:                             ; preds = %if.else.i.i697
  %248 = load %union.tree_node** %offset_node.i.i683, align 8, !tbaa !5
  %249 = getelementptr inbounds %union.tree_node* %call.i.i688, i64 0, i32 0, i32 2
  %250 = load i32* %249, align 4, !tbaa !48
  %sub.i.i698 = add nsw i32 %250, -1
  %conv.i.i699 = sext i32 %sub.i.i698 to i64
  %call5.i.i700 = call i32 @compare_tree_int(%union.tree_node* %248, i64 %conv.i.i699) #5
  %cmp6.i.i701 = icmp sgt i32 %call5.i.i700, 0
  br i1 %cmp6.i.i701, label %sw.epilog320, label %if.end10.i.i706

if.end10.i.i706:                                  ; preds = %lor.lhs.false.i.i702
  %pointer12.i.i703 = getelementptr inbounds %union.tree_node* %call.i.i688, i64 0, i32 0, i32 4
  %251 = load %union.tree_node** %pointer12.i.i703, align 8
  %252 = bitcast %union.tree_node* %251 to i8*
  %253 = load %union.tree_node** %offset_node.i.i683, align 8, !tbaa !5
  %call13.i.i704 = call i64 @tree_low_cst(%union.tree_node* %253, i32 1) #5
  %add.ptr.i.i705 = getelementptr inbounds i8* %252, i64 %call13.i.i704
  br label %c_getstr.exit.i708

c_getstr.exit.i708:                               ; preds = %if.end10.i.i706, %if.then2.i.i694
  %retval.0.i.i707 = phi i8* [ %247, %if.then2.i.i694 ], [ %add.ptr.i.i705, %if.end10.i.i706 ]
  call void @llvm.lifetime.end(i64 8, i8* %244) #5
  %tobool4.i = icmp eq i8* %retval.0.i.i707, null
  br i1 %tobool4.i, label %sw.epilog320, label %land.lhs.true.i710

land.lhs.true.i710:                               ; preds = %c_getstr.exit.i708
  %254 = load i8* %retval.0.i.i707, align 1, !tbaa !9
  %cmp.i709 = icmp eq i8 %254, 0
  br i1 %cmp.i709, label %expand_builtin_strcat.exit, label %sw.epilog320

expand_builtin_strcat.exit:                       ; preds = %land.lhs.true.i710
  %call7.i711 = call %struct.rtx_def* @expand_expr(%union.tree_node* %240, %struct.rtx_def* %target, i32 %mode, i32 0) #5
  %tobool177 = icmp eq %struct.rtx_def* %call7.i711, null
  br i1 %tobool177, label %sw.epilog320, label %return

sw.bb180:                                         ; preds = %if.end14
  %call.i715 = call i32 (%union.tree_node*, ...)* @validate_arglist(%union.tree_node* %4, i32 13, i32 13, i32 6, i32 5) #5
  %tobool.i716 = icmp eq i32 %call.i715, 0
  br i1 %tobool.i716, label %sw.epilog320, label %if.else.i722

if.else.i722:                                     ; preds = %sw.bb180
  %value.i717 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 2
  %255 = bitcast i32* %value.i717 to %union.tree_node**
  %256 = load %union.tree_node** %255, align 8, !tbaa !26
  %chain.i718 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0
  %257 = load %union.tree_node** %chain.i718, align 8, !tbaa !28
  %value2.i719 = getelementptr inbounds %union.tree_node* %257, i64 0, i32 0, i32 2
  %258 = bitcast i32* %value2.i719 to %union.tree_node**
  %259 = load %union.tree_node** %258, align 8, !tbaa !26
  %chain6.i = getelementptr inbounds %union.tree_node* %257, i64 0, i32 0, i32 0, i32 0
  %260 = load %union.tree_node** %chain6.i, align 8, !tbaa !28
  %value8.i = getelementptr inbounds %union.tree_node* %260, i64 0, i32 0, i32 2
  %261 = bitcast i32* %value8.i to %union.tree_node**
  %262 = load %union.tree_node** %261, align 8, !tbaa !26
  %263 = bitcast %union.tree_node** %offset_node.i.i714 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %263) #5
  %call.i.i720 = call %union.tree_node* @string_constant(%union.tree_node* %259, %union.tree_node** %offset_node.i.i714) #5
  %cmp.i.i721 = icmp eq %union.tree_node* %call.i.i720, null
  br i1 %cmp.i.i721, label %c_getstr.exit.i742, label %if.end.i.i724

if.end.i.i724:                                    ; preds = %if.else.i722
  %264 = load %union.tree_node** %offset_node.i.i714, align 8, !tbaa !5
  %cmp1.i.i723 = icmp eq %union.tree_node* %264, null
  br i1 %cmp1.i.i723, label %if.then2.i.i726, label %if.else.i.i729

if.then2.i.i726:                                  ; preds = %if.end.i.i724
  %pointer.i.i725 = getelementptr inbounds %union.tree_node* %call.i.i720, i64 0, i32 0, i32 4
  %265 = load %union.tree_node** %pointer.i.i725, align 8
  %266 = bitcast %union.tree_node* %265 to i8*
  br label %c_getstr.exit.i742

if.else.i.i729:                                   ; preds = %if.end.i.i724
  %call3.i.i727 = call i32 @host_integerp(%union.tree_node* %264, i32 1) #5
  %tobool.i.i728 = icmp eq i32 %call3.i.i727, 0
  br i1 %tobool.i.i728, label %c_getstr.exit.i742, label %lor.lhs.false.i.i734

lor.lhs.false.i.i734:                             ; preds = %if.else.i.i729
  %267 = load %union.tree_node** %offset_node.i.i714, align 8, !tbaa !5
  %268 = getelementptr inbounds %union.tree_node* %call.i.i720, i64 0, i32 0, i32 2
  %269 = load i32* %268, align 4, !tbaa !48
  %sub.i.i730 = add nsw i32 %269, -1
  %conv.i.i731 = sext i32 %sub.i.i730 to i64
  %call5.i.i732 = call i32 @compare_tree_int(%union.tree_node* %267, i64 %conv.i.i731) #5
  %cmp6.i.i733 = icmp sgt i32 %call5.i.i732, 0
  br i1 %cmp6.i.i733, label %c_getstr.exit.i742, label %if.end10.i.i738

if.end10.i.i738:                                  ; preds = %lor.lhs.false.i.i734
  %pointer12.i.i735 = getelementptr inbounds %union.tree_node* %call.i.i720, i64 0, i32 0, i32 4
  %270 = load %union.tree_node** %pointer12.i.i735, align 8
  %271 = bitcast %union.tree_node* %270 to i8*
  %272 = load %union.tree_node** %offset_node.i.i714, align 8, !tbaa !5
  %call13.i.i736 = call i64 @tree_low_cst(%union.tree_node* %272, i32 1) #5
  %add.ptr.i.i737 = getelementptr inbounds i8* %271, i64 %call13.i.i736
  br label %c_getstr.exit.i742

c_getstr.exit.i742:                               ; preds = %if.end10.i.i738, %lor.lhs.false.i.i734, %if.else.i.i729, %if.then2.i.i726, %if.else.i722
  %retval.0.i.i739 = phi i8* [ %266, %if.then2.i.i726 ], [ %add.ptr.i.i737, %if.end10.i.i738 ], [ null, %if.else.i722 ], [ null, %if.else.i.i729 ], [ null, %lor.lhs.false.i.i734 ]
  call void @llvm.lifetime.end(i64 8, i8* %263) #5
  %call10.i740 = call i32 @integer_zerop(%union.tree_node* %262) #5
  %tobool11.i741 = icmp eq i32 %call10.i740, 0
  br i1 %tobool11.i741, label %lor.lhs.false.i743, label %if.then14.i

lor.lhs.false.i743:                               ; preds = %c_getstr.exit.i742
  %tobool12.i = icmp eq i8* %retval.0.i.i739, null
  br i1 %tobool12.i, label %sw.epilog320, label %land.lhs.true.i745

land.lhs.true.i745:                               ; preds = %lor.lhs.false.i743
  %273 = load i8* %retval.0.i.i739, align 1, !tbaa !9
  %cmp.i744 = icmp eq i8 %273, 0
  br i1 %cmp.i744, label %if.then14.i, label %if.end.i751

if.then14.i:                                      ; preds = %land.lhs.true.i745, %c_getstr.exit.i742
  %274 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !5
  %call15.i = call %struct.rtx_def* @expand_expr(%union.tree_node* %259, %struct.rtx_def* %274, i32 0, i32 0) #5
  %275 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !5
  %call16.i746 = call %struct.rtx_def* @expand_expr(%union.tree_node* %262, %struct.rtx_def* %275, i32 0, i32 0) #5
  %call17.i747 = call %struct.rtx_def* @expand_expr(%union.tree_node* %256, %struct.rtx_def* %target, i32 %mode, i32 0) #5
  br label %expand_builtin_strncat.exit

if.end.i751:                                      ; preds = %land.lhs.true.i745
  %code.i748 = getelementptr inbounds %union.tree_node* %262, i64 0, i32 0, i32 0, i32 2
  %bf.load.i749 = load i32* %code.i748, align 8
  %bf.clear.i750 = and i32 %bf.load.i749, 255
  %cmp19.i = icmp eq i32 %bf.clear.i750, 25
  br i1 %cmp19.i, label %land.lhs.true23.i, label %sw.epilog320

land.lhs.true23.i:                                ; preds = %if.end.i751
  %call24.i = call i64 @strlen(i8* %retval.0.i.i739) #5
  %call25.i752 = call i32 @compare_tree_int(%union.tree_node* %262, i64 %call24.i) #5
  %cmp26.i753 = icmp sgt i32 %call25.i752, -1
  br i1 %cmp26.i753, label %if.then28.i756, label %sw.epilog320

if.then28.i756:                                   ; preds = %land.lhs.true23.i
  %call29.i754 = call %union.tree_node* @build_tree_list(%union.tree_node* null, %union.tree_node* %259) #5
  %call30.i755 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %256, %union.tree_node* %call29.i754) #5
  %276 = load %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*]* @built_in_decls, i64 0, i64 25), align 8, !tbaa !5
  %tobool31.i = icmp eq %union.tree_node* %276, null
  br i1 %tobool31.i, label %sw.epilog320, label %if.end33.i

if.end33.i:                                       ; preds = %if.then28.i756
  %type.i.i757 = getelementptr inbounds %union.tree_node* %276, i64 0, i32 0, i32 0, i32 1
  %277 = load %union.tree_node** %type.i.i757, align 8, !tbaa !15
  %call.i52.i = call %union.tree_node* @build_pointer_type(%union.tree_node* %277) #5
  %call1.i.i758 = call %union.tree_node* @build1(i32 121, %union.tree_node* %call.i52.i, %union.tree_node* %276) #5
  %278 = load %union.tree_node** %type.i.i757, align 8, !tbaa !15
  %type5.i.i759 = getelementptr inbounds %union.tree_node* %278, i64 0, i32 0, i32 0, i32 1
  %279 = load %union.tree_node** %type5.i.i759, align 8, !tbaa !15
  %call6.i.i760 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 53, %union.tree_node* %279, %union.tree_node* %call1.i.i758, %union.tree_node* %call30.i755) #5
  %side_effects_flag.i.i761 = getelementptr inbounds %union.tree_node* %call6.i.i760, i64 0, i32 0, i32 0, i32 2
  %bf.load.i.i762 = load i32* %side_effects_flag.i.i761, align 8
  %bf.set.i.i763 = or i32 %bf.load.i.i762, 256
  store i32 %bf.set.i.i763, i32* %side_effects_flag.i.i761, align 8
  %call8.i.i764 = call %union.tree_node* @fold(%union.tree_node* %call6.i.i760) #5
  %call35.i = call %struct.rtx_def* @expand_expr(%union.tree_node* %call8.i.i764, %struct.rtx_def* %target, i32 %mode, i32 0) #5
  br label %expand_builtin_strncat.exit

expand_builtin_strncat.exit:                      ; preds = %if.then14.i, %if.end33.i
  %retval.0.i765 = phi %struct.rtx_def* [ %call17.i747, %if.then14.i ], [ %call35.i, %if.end33.i ]
  %tobool182 = icmp eq %struct.rtx_def* %retval.0.i765, null
  br i1 %tobool182, label %sw.epilog320, label %return

sw.bb185:                                         ; preds = %if.end14
  %call.i767 = call i32 (%union.tree_node*, ...)* @validate_arglist(%union.tree_node* %4, i32 13, i32 13, i32 5) #5
  %tobool.i768 = icmp eq i32 %call.i767, 0
  br i1 %tobool.i768, label %sw.epilog320, label %if.else.i774

if.else.i774:                                     ; preds = %sw.bb185
  %value.i769 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 2
  %280 = bitcast i32* %value.i769 to %union.tree_node**
  %281 = load %union.tree_node** %280, align 8, !tbaa !26
  %chain.i770 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0
  %282 = load %union.tree_node** %chain.i770, align 8, !tbaa !28
  %value2.i771 = getelementptr inbounds %union.tree_node* %282, i64 0, i32 0, i32 2
  %283 = bitcast i32* %value2.i771 to %union.tree_node**
  %284 = load %union.tree_node** %283, align 8, !tbaa !26
  %285 = bitcast %union.tree_node** %offset_node.i.i766 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %285) #5
  %call.i.i772 = call %union.tree_node* @string_constant(%union.tree_node* %281, %union.tree_node** %offset_node.i.i766) #5
  %cmp.i.i773 = icmp eq %union.tree_node* %call.i.i772, null
  br i1 %cmp.i.i773, label %c_getstr.exit.i792, label %if.end.i.i776

if.end.i.i776:                                    ; preds = %if.else.i774
  %286 = load %union.tree_node** %offset_node.i.i766, align 8, !tbaa !5
  %cmp1.i.i775 = icmp eq %union.tree_node* %286, null
  br i1 %cmp1.i.i775, label %if.then2.i.i778, label %if.else.i.i781

if.then2.i.i778:                                  ; preds = %if.end.i.i776
  %pointer.i.i777 = getelementptr inbounds %union.tree_node* %call.i.i772, i64 0, i32 0, i32 4
  %287 = load %union.tree_node** %pointer.i.i777, align 8
  %288 = bitcast %union.tree_node* %287 to i8*
  br label %c_getstr.exit.i792

if.else.i.i781:                                   ; preds = %if.end.i.i776
  %call3.i.i779 = call i32 @host_integerp(%union.tree_node* %286, i32 1) #5
  %tobool.i.i780 = icmp eq i32 %call3.i.i779, 0
  br i1 %tobool.i.i780, label %c_getstr.exit.i792, label %lor.lhs.false.i.i786

lor.lhs.false.i.i786:                             ; preds = %if.else.i.i781
  %289 = load %union.tree_node** %offset_node.i.i766, align 8, !tbaa !5
  %290 = getelementptr inbounds %union.tree_node* %call.i.i772, i64 0, i32 0, i32 2
  %291 = load i32* %290, align 4, !tbaa !48
  %sub.i.i782 = add nsw i32 %291, -1
  %conv.i.i783 = sext i32 %sub.i.i782 to i64
  %call5.i.i784 = call i32 @compare_tree_int(%union.tree_node* %289, i64 %conv.i.i783) #5
  %cmp6.i.i785 = icmp sgt i32 %call5.i.i784, 0
  br i1 %cmp6.i.i785, label %c_getstr.exit.i792, label %if.end10.i.i790

if.end10.i.i790:                                  ; preds = %lor.lhs.false.i.i786
  %pointer12.i.i787 = getelementptr inbounds %union.tree_node* %call.i.i772, i64 0, i32 0, i32 4
  %292 = load %union.tree_node** %pointer12.i.i787, align 8
  %293 = bitcast %union.tree_node* %292 to i8*
  %294 = load %union.tree_node** %offset_node.i.i766, align 8, !tbaa !5
  %call13.i.i788 = call i64 @tree_low_cst(%union.tree_node* %294, i32 1) #5
  %add.ptr.i.i789 = getelementptr inbounds i8* %293, i64 %call13.i.i788
  br label %c_getstr.exit.i792

c_getstr.exit.i792:                               ; preds = %if.end10.i.i790, %lor.lhs.false.i.i786, %if.else.i.i781, %if.then2.i.i778, %if.else.i774
  %retval.0.i.i791 = phi i8* [ %288, %if.then2.i.i778 ], [ %add.ptr.i.i789, %if.end10.i.i790 ], [ null, %if.else.i774 ], [ null, %if.else.i.i781 ], [ null, %lor.lhs.false.i.i786 ]
  call void @llvm.lifetime.end(i64 8, i8* %285) #5
  %295 = bitcast %union.tree_node** %offset_node.i32.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %295) #5
  %call.i33.i = call %union.tree_node* @string_constant(%union.tree_node* %284, %union.tree_node** %offset_node.i32.i) #5
  %cmp.i34.i = icmp eq %union.tree_node* %call.i33.i, null
  br i1 %cmp.i34.i, label %c_getstr.exit52.thread.i, label %if.end.i36.i

if.end.i36.i:                                     ; preds = %c_getstr.exit.i792
  %296 = load %union.tree_node** %offset_node.i32.i, align 8, !tbaa !5
  %cmp1.i35.i = icmp eq %union.tree_node* %296, null
  br i1 %cmp1.i35.i, label %if.then2.i38.i, label %if.else.i41.i

if.then2.i38.i:                                   ; preds = %if.end.i36.i
  %pointer.i37.i = getelementptr inbounds %union.tree_node* %call.i33.i, i64 0, i32 0, i32 4
  %297 = load %union.tree_node** %pointer.i37.i, align 8
  %298 = bitcast %union.tree_node* %297 to i8*
  br label %c_getstr.exit52.i

if.else.i41.i:                                    ; preds = %if.end.i36.i
  %call3.i39.i = call i32 @host_integerp(%union.tree_node* %296, i32 1) #5
  %tobool.i40.i = icmp eq i32 %call3.i39.i, 0
  br i1 %tobool.i40.i, label %c_getstr.exit52.thread.i, label %lor.lhs.false.i46.i

lor.lhs.false.i46.i:                              ; preds = %if.else.i41.i
  %299 = load %union.tree_node** %offset_node.i32.i, align 8, !tbaa !5
  %300 = getelementptr inbounds %union.tree_node* %call.i33.i, i64 0, i32 0, i32 2
  %301 = load i32* %300, align 4, !tbaa !48
  %sub.i42.i = add nsw i32 %301, -1
  %conv.i43.i = sext i32 %sub.i42.i to i64
  %call5.i44.i = call i32 @compare_tree_int(%union.tree_node* %299, i64 %conv.i43.i) #5
  %cmp6.i45.i = icmp sgt i32 %call5.i44.i, 0
  br i1 %cmp6.i45.i, label %c_getstr.exit52.thread.i, label %if.end10.i50.i

if.end10.i50.i:                                   ; preds = %lor.lhs.false.i46.i
  %pointer12.i47.i = getelementptr inbounds %union.tree_node* %call.i33.i, i64 0, i32 0, i32 4
  %302 = load %union.tree_node** %pointer12.i47.i, align 8
  %303 = bitcast %union.tree_node* %302 to i8*
  %304 = load %union.tree_node** %offset_node.i32.i, align 8, !tbaa !5
  %call13.i48.i = call i64 @tree_low_cst(%union.tree_node* %304, i32 1) #5
  %add.ptr.i49.i = getelementptr inbounds i8* %303, i64 %call13.i48.i
  br label %c_getstr.exit52.i

c_getstr.exit52.thread.i:                         ; preds = %lor.lhs.false.i46.i, %if.else.i41.i, %c_getstr.exit.i792
  call void @llvm.lifetime.end(i64 8, i8* %295) #5
  %tobool553.i = icmp eq i8* %retval.0.i.i791, null
  br i1 %tobool553.i, label %sw.epilog320, label %land.lhs.true12.i

c_getstr.exit52.i:                                ; preds = %if.end10.i50.i, %if.then2.i38.i
  %retval.0.i51.i = phi i8* [ %298, %if.then2.i38.i ], [ %add.ptr.i49.i, %if.end10.i50.i ]
  call void @llvm.lifetime.end(i64 8, i8* %295) #5
  %tobool5.i = icmp ne i8* %retval.0.i.i791, null
  %tobool6.i = icmp ne i8* %retval.0.i51.i, null
  %or.cond.i793 = and i1 %tobool5.i, %tobool6.i
  br i1 %or.cond.i793, label %if.then7.i, label %if.end.i797

if.then7.i:                                       ; preds = %c_getstr.exit52.i
  %call8.i794 = call i64 @strspn(i8* %retval.0.i.i791, i8* %retval.0.i51.i) #5
  %call9.i795 = call %union.tree_node* @size_int_wide(i64 %call8.i794, i32 0) #5
  %call10.i796 = call %struct.rtx_def* @expand_expr(%union.tree_node* %call9.i795, %struct.rtx_def* %target, i32 %mode, i32 0) #5
  br label %expand_builtin_strspn.exit

if.end.i797:                                      ; preds = %c_getstr.exit52.i
  br i1 %tobool5.i, label %land.lhs.true12.i, label %lor.lhs.false.i799

land.lhs.true12.i:                                ; preds = %if.end.i797, %c_getstr.exit52.thread.i
  %retval.0.i515662.i = phi i8* [ null, %c_getstr.exit52.thread.i ], [ %retval.0.i51.i, %if.end.i797 ]
  %tobool65860.i = phi i1 [ false, %c_getstr.exit52.thread.i ], [ %tobool6.i, %if.end.i797 ]
  %305 = load i8* %retval.0.i.i791, align 1, !tbaa !9
  %cmp.i798 = icmp eq i8 %305, 0
  br i1 %cmp.i798, label %if.then19.i, label %lor.lhs.false.i799

lor.lhs.false.i799:                               ; preds = %land.lhs.true12.i, %if.end.i797
  %retval.0.i515661.i = phi i8* [ %retval.0.i515662.i, %land.lhs.true12.i ], [ %retval.0.i51.i, %if.end.i797 ]
  %tobool65859.i = phi i1 [ %tobool65860.i, %land.lhs.true12.i ], [ %tobool6.i, %if.end.i797 ]
  br i1 %tobool65859.i, label %land.lhs.true15.i, label %sw.epilog320

land.lhs.true15.i:                                ; preds = %lor.lhs.false.i799
  %306 = load i8* %retval.0.i515661.i, align 1, !tbaa !9
  %cmp17.i = icmp eq i8 %306, 0
  br i1 %cmp17.i, label %if.then19.i, label %sw.epilog320

if.then19.i:                                      ; preds = %land.lhs.true15.i, %land.lhs.true12.i
  %307 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !5
  %call20.i800 = call %struct.rtx_def* @expand_expr(%union.tree_node* %281, %struct.rtx_def* %307, i32 0, i32 0) #5
  %308 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !5
  %call21.i = call %struct.rtx_def* @expand_expr(%union.tree_node* %284, %struct.rtx_def* %308, i32 0, i32 0) #5
  %309 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !5
  br label %expand_builtin_strspn.exit

expand_builtin_strspn.exit:                       ; preds = %if.then7.i, %if.then19.i
  %retval.0.i801 = phi %struct.rtx_def* [ %call10.i796, %if.then7.i ], [ %309, %if.then19.i ]
  %tobool187 = icmp eq %struct.rtx_def* %retval.0.i801, null
  br i1 %tobool187, label %sw.epilog320, label %return

sw.bb190:                                         ; preds = %if.end14
  %call.i803 = call i32 (%union.tree_node*, ...)* @validate_arglist(%union.tree_node* %4, i32 13, i32 13, i32 5) #5
  %tobool.i804 = icmp eq i32 %call.i803, 0
  br i1 %tobool.i804, label %sw.epilog320, label %if.else.i810

if.else.i810:                                     ; preds = %sw.bb190
  %value.i805 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 2
  %310 = bitcast i32* %value.i805 to %union.tree_node**
  %311 = load %union.tree_node** %310, align 8, !tbaa !26
  %chain.i806 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0
  %312 = load %union.tree_node** %chain.i806, align 8, !tbaa !28
  %value2.i807 = getelementptr inbounds %union.tree_node* %312, i64 0, i32 0, i32 2
  %313 = bitcast i32* %value2.i807 to %union.tree_node**
  %314 = load %union.tree_node** %313, align 8, !tbaa !26
  %315 = bitcast %union.tree_node** %offset_node.i.i802 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %315) #5
  %call.i.i808 = call %union.tree_node* @string_constant(%union.tree_node* %311, %union.tree_node** %offset_node.i.i802) #5
  %cmp.i.i809 = icmp eq %union.tree_node* %call.i.i808, null
  br i1 %cmp.i.i809, label %c_getstr.exit.i828, label %if.end.i.i812

if.end.i.i812:                                    ; preds = %if.else.i810
  %316 = load %union.tree_node** %offset_node.i.i802, align 8, !tbaa !5
  %cmp1.i.i811 = icmp eq %union.tree_node* %316, null
  br i1 %cmp1.i.i811, label %if.then2.i.i814, label %if.else.i.i817

if.then2.i.i814:                                  ; preds = %if.end.i.i812
  %pointer.i.i813 = getelementptr inbounds %union.tree_node* %call.i.i808, i64 0, i32 0, i32 4
  %317 = load %union.tree_node** %pointer.i.i813, align 8
  %318 = bitcast %union.tree_node* %317 to i8*
  br label %c_getstr.exit.i828

if.else.i.i817:                                   ; preds = %if.end.i.i812
  %call3.i.i815 = call i32 @host_integerp(%union.tree_node* %316, i32 1) #5
  %tobool.i.i816 = icmp eq i32 %call3.i.i815, 0
  br i1 %tobool.i.i816, label %c_getstr.exit.i828, label %lor.lhs.false.i.i822

lor.lhs.false.i.i822:                             ; preds = %if.else.i.i817
  %319 = load %union.tree_node** %offset_node.i.i802, align 8, !tbaa !5
  %320 = getelementptr inbounds %union.tree_node* %call.i.i808, i64 0, i32 0, i32 2
  %321 = load i32* %320, align 4, !tbaa !48
  %sub.i.i818 = add nsw i32 %321, -1
  %conv.i.i819 = sext i32 %sub.i.i818 to i64
  %call5.i.i820 = call i32 @compare_tree_int(%union.tree_node* %319, i64 %conv.i.i819) #5
  %cmp6.i.i821 = icmp sgt i32 %call5.i.i820, 0
  br i1 %cmp6.i.i821, label %c_getstr.exit.i828, label %if.end10.i.i826

if.end10.i.i826:                                  ; preds = %lor.lhs.false.i.i822
  %pointer12.i.i823 = getelementptr inbounds %union.tree_node* %call.i.i808, i64 0, i32 0, i32 4
  %322 = load %union.tree_node** %pointer12.i.i823, align 8
  %323 = bitcast %union.tree_node* %322 to i8*
  %324 = load %union.tree_node** %offset_node.i.i802, align 8, !tbaa !5
  %call13.i.i824 = call i64 @tree_low_cst(%union.tree_node* %324, i32 1) #5
  %add.ptr.i.i825 = getelementptr inbounds i8* %323, i64 %call13.i.i824
  br label %c_getstr.exit.i828

c_getstr.exit.i828:                               ; preds = %if.end10.i.i826, %lor.lhs.false.i.i822, %if.else.i.i817, %if.then2.i.i814, %if.else.i810
  %retval.0.i.i827 = phi i8* [ %318, %if.then2.i.i814 ], [ %add.ptr.i.i825, %if.end10.i.i826 ], [ null, %if.else.i810 ], [ null, %if.else.i.i817 ], [ null, %lor.lhs.false.i.i822 ]
  call void @llvm.lifetime.end(i64 8, i8* %315) #5
  %325 = bitcast %union.tree_node** %offset_node.i42.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %325) #5
  %call.i43.i = call %union.tree_node* @string_constant(%union.tree_node* %314, %union.tree_node** %offset_node.i42.i) #5
  %cmp.i44.i = icmp eq %union.tree_node* %call.i43.i, null
  br i1 %cmp.i44.i, label %c_getstr.exit62.thread.i, label %if.end.i46.i

if.end.i46.i:                                     ; preds = %c_getstr.exit.i828
  %326 = load %union.tree_node** %offset_node.i42.i, align 8, !tbaa !5
  %cmp1.i45.i = icmp eq %union.tree_node* %326, null
  br i1 %cmp1.i45.i, label %if.then2.i48.i, label %if.else.i51.i

if.then2.i48.i:                                   ; preds = %if.end.i46.i
  %pointer.i47.i = getelementptr inbounds %union.tree_node* %call.i43.i, i64 0, i32 0, i32 4
  %327 = load %union.tree_node** %pointer.i47.i, align 8
  %328 = bitcast %union.tree_node* %327 to i8*
  br label %c_getstr.exit62.i

if.else.i51.i:                                    ; preds = %if.end.i46.i
  %call3.i49.i = call i32 @host_integerp(%union.tree_node* %326, i32 1) #5
  %tobool.i50.i = icmp eq i32 %call3.i49.i, 0
  br i1 %tobool.i50.i, label %c_getstr.exit62.thread.i, label %lor.lhs.false.i56.i

lor.lhs.false.i56.i:                              ; preds = %if.else.i51.i
  %329 = load %union.tree_node** %offset_node.i42.i, align 8, !tbaa !5
  %330 = getelementptr inbounds %union.tree_node* %call.i43.i, i64 0, i32 0, i32 2
  %331 = load i32* %330, align 4, !tbaa !48
  %sub.i52.i = add nsw i32 %331, -1
  %conv.i53.i = sext i32 %sub.i52.i to i64
  %call5.i54.i = call i32 @compare_tree_int(%union.tree_node* %329, i64 %conv.i53.i) #5
  %cmp6.i55.i = icmp sgt i32 %call5.i54.i, 0
  br i1 %cmp6.i55.i, label %c_getstr.exit62.thread.i, label %if.end10.i60.i

if.end10.i60.i:                                   ; preds = %lor.lhs.false.i56.i
  %pointer12.i57.i = getelementptr inbounds %union.tree_node* %call.i43.i, i64 0, i32 0, i32 4
  %332 = load %union.tree_node** %pointer12.i57.i, align 8
  %333 = bitcast %union.tree_node* %332 to i8*
  %334 = load %union.tree_node** %offset_node.i42.i, align 8, !tbaa !5
  %call13.i58.i = call i64 @tree_low_cst(%union.tree_node* %334, i32 1) #5
  %add.ptr.i59.i = getelementptr inbounds i8* %333, i64 %call13.i58.i
  br label %c_getstr.exit62.i

c_getstr.exit62.thread.i:                         ; preds = %lor.lhs.false.i56.i, %if.else.i51.i, %c_getstr.exit.i828
  call void @llvm.lifetime.end(i64 8, i8* %325) #5
  %tobool564.i = icmp eq i8* %retval.0.i.i827, null
  br i1 %tobool564.i, label %sw.epilog320, label %land.lhs.true12.i838

c_getstr.exit62.i:                                ; preds = %if.end10.i60.i, %if.then2.i48.i
  %retval.0.i61.i = phi i8* [ %328, %if.then2.i48.i ], [ %add.ptr.i59.i, %if.end10.i60.i ]
  call void @llvm.lifetime.end(i64 8, i8* %325) #5
  %tobool5.i829 = icmp ne i8* %retval.0.i.i827, null
  %tobool6.i830 = icmp ne i8* %retval.0.i61.i, null
  %or.cond.i831 = and i1 %tobool5.i829, %tobool6.i830
  br i1 %or.cond.i831, label %if.then7.i835, label %if.end.i836

if.then7.i835:                                    ; preds = %c_getstr.exit62.i
  %call8.i832 = call i64 @strcspn(i8* %retval.0.i.i827, i8* %retval.0.i61.i) #5
  %call9.i833 = call %union.tree_node* @size_int_wide(i64 %call8.i832, i32 0) #5
  %call10.i834 = call %struct.rtx_def* @expand_expr(%union.tree_node* %call9.i833, %struct.rtx_def* %target, i32 %mode, i32 0) #5
  br label %expand_builtin_strcspn.exit

if.end.i836:                                      ; preds = %c_getstr.exit62.i
  br i1 %tobool5.i829, label %land.lhs.true12.i838, label %if.end16.i841

land.lhs.true12.i838:                             ; preds = %if.end.i836, %c_getstr.exit62.thread.i
  %retval.0.i616773.i = phi i8* [ null, %c_getstr.exit62.thread.i ], [ %retval.0.i61.i, %if.end.i836 ]
  %tobool66971.i = phi i1 [ false, %c_getstr.exit62.thread.i ], [ %tobool6.i830, %if.end.i836 ]
  %335 = load i8* %retval.0.i.i827, align 1, !tbaa !9
  %cmp.i837 = icmp eq i8 %335, 0
  br i1 %cmp.i837, label %if.then14.i840, label %if.end16.i841

if.then14.i840:                                   ; preds = %land.lhs.true12.i838
  %336 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !5
  %call15.i839 = call %struct.rtx_def* @expand_expr(%union.tree_node* %314, %struct.rtx_def* %336, i32 0, i32 0) #5
  %337 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !5
  br label %expand_builtin_strcspn.exit

if.end16.i841:                                    ; preds = %land.lhs.true12.i838, %if.end.i836
  %retval.0.i616772.i = phi i8* [ %retval.0.i616773.i, %land.lhs.true12.i838 ], [ %retval.0.i61.i, %if.end.i836 ]
  %tobool66970.i = phi i1 [ %tobool66971.i, %land.lhs.true12.i838 ], [ %tobool6.i830, %if.end.i836 ]
  br i1 %tobool66970.i, label %land.lhs.true18.i, label %sw.epilog320

land.lhs.true18.i:                                ; preds = %if.end16.i841
  %338 = load i8* %retval.0.i616772.i, align 1, !tbaa !9
  %cmp20.i842 = icmp eq i8 %338, 0
  br i1 %cmp20.i842, label %if.then22.i843, label %sw.epilog320

if.then22.i843:                                   ; preds = %land.lhs.true18.i
  %call23.i = call %union.tree_node* @build_tree_list(%union.tree_node* null, %union.tree_node* %311) #5
  %339 = load %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*]* @built_in_decls, i64 0, i64 31), align 8, !tbaa !5
  %tobool24.i = icmp eq %union.tree_node* %339, null
  br i1 %tobool24.i, label %sw.epilog320, label %if.end26.i852

if.end26.i852:                                    ; preds = %if.then22.i843
  %type.i.i844 = getelementptr inbounds %union.tree_node* %339, i64 0, i32 0, i32 0, i32 1
  %340 = load %union.tree_node** %type.i.i844, align 8, !tbaa !15
  %call.i63.i = call %union.tree_node* @build_pointer_type(%union.tree_node* %340) #5
  %call1.i.i845 = call %union.tree_node* @build1(i32 121, %union.tree_node* %call.i63.i, %union.tree_node* %339) #5
  %341 = load %union.tree_node** %type.i.i844, align 8, !tbaa !15
  %type5.i.i846 = getelementptr inbounds %union.tree_node* %341, i64 0, i32 0, i32 0, i32 1
  %342 = load %union.tree_node** %type5.i.i846, align 8, !tbaa !15
  %call6.i.i847 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 53, %union.tree_node* %342, %union.tree_node* %call1.i.i845, %union.tree_node* %call23.i) #5
  %side_effects_flag.i.i848 = getelementptr inbounds %union.tree_node* %call6.i.i847, i64 0, i32 0, i32 0, i32 2
  %bf.load.i.i849 = load i32* %side_effects_flag.i.i848, align 8
  %bf.set.i.i850 = or i32 %bf.load.i.i849, 256
  store i32 %bf.set.i.i850, i32* %side_effects_flag.i.i848, align 8
  %call8.i.i851 = call %union.tree_node* @fold(%union.tree_node* %call6.i.i847) #5
  %call28.i = call %struct.rtx_def* @expand_expr(%union.tree_node* %call8.i.i851, %struct.rtx_def* %target, i32 %mode, i32 0) #5
  br label %expand_builtin_strcspn.exit

expand_builtin_strcspn.exit:                      ; preds = %if.then7.i835, %if.then14.i840, %if.end26.i852
  %retval.0.i853 = phi %struct.rtx_def* [ %call10.i834, %if.then7.i835 ], [ %337, %if.then14.i840 ], [ %call28.i, %if.end26.i852 ]
  %tobool192 = icmp eq %struct.rtx_def* %retval.0.i853, null
  br i1 %tobool192, label %sw.epilog320, label %return

sw.bb195:                                         ; preds = %if.end14
  %call.i855 = call i32 (%union.tree_node*, ...)* @validate_arglist(%union.tree_node* %4, i32 13, i32 13, i32 5) #5
  %tobool.i856 = icmp eq i32 %call.i855, 0
  br i1 %tobool.i856, label %sw.epilog320, label %if.else.i862

if.else.i862:                                     ; preds = %sw.bb195
  %value.i857 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 2
  %343 = bitcast i32* %value.i857 to %union.tree_node**
  %344 = load %union.tree_node** %343, align 8, !tbaa !26
  %chain.i858 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0
  %345 = load %union.tree_node** %chain.i858, align 8, !tbaa !28
  %value2.i859 = getelementptr inbounds %union.tree_node* %345, i64 0, i32 0, i32 2
  %346 = bitcast i32* %value2.i859 to %union.tree_node**
  %347 = load %union.tree_node** %346, align 8, !tbaa !26
  %348 = bitcast %union.tree_node** %offset_node.i.i854 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %348) #5
  %call.i.i860 = call %union.tree_node* @string_constant(%union.tree_node* %347, %union.tree_node** %offset_node.i.i854) #5
  %cmp.i.i861 = icmp eq %union.tree_node* %call.i.i860, null
  br i1 %cmp.i.i861, label %sw.epilog320, label %if.end.i.i864

if.end.i.i864:                                    ; preds = %if.else.i862
  %349 = load %union.tree_node** %offset_node.i.i854, align 8, !tbaa !5
  %cmp1.i.i863 = icmp eq %union.tree_node* %349, null
  br i1 %cmp1.i.i863, label %if.then2.i.i866, label %if.else.i.i869

if.then2.i.i866:                                  ; preds = %if.end.i.i864
  %pointer.i.i865 = getelementptr inbounds %union.tree_node* %call.i.i860, i64 0, i32 0, i32 4
  %350 = load %union.tree_node** %pointer.i.i865, align 8
  %351 = bitcast %union.tree_node* %350 to i8*
  br label %c_getstr.exit.i881

if.else.i.i869:                                   ; preds = %if.end.i.i864
  %call3.i.i867 = call i32 @host_integerp(%union.tree_node* %349, i32 1) #5
  %tobool.i.i868 = icmp eq i32 %call3.i.i867, 0
  br i1 %tobool.i.i868, label %sw.epilog320, label %lor.lhs.false.i.i874

lor.lhs.false.i.i874:                             ; preds = %if.else.i.i869
  %352 = load %union.tree_node** %offset_node.i.i854, align 8, !tbaa !5
  %353 = getelementptr inbounds %union.tree_node* %call.i.i860, i64 0, i32 0, i32 2
  %354 = load i32* %353, align 4, !tbaa !48
  %sub.i.i870 = add nsw i32 %354, -1
  %conv.i.i871 = sext i32 %sub.i.i870 to i64
  %call5.i.i872 = call i32 @compare_tree_int(%union.tree_node* %352, i64 %conv.i.i871) #5
  %cmp6.i.i873 = icmp sgt i32 %call5.i.i872, 0
  br i1 %cmp6.i.i873, label %sw.epilog320, label %if.end10.i.i878

if.end10.i.i878:                                  ; preds = %lor.lhs.false.i.i874
  %pointer12.i.i875 = getelementptr inbounds %union.tree_node* %call.i.i860, i64 0, i32 0, i32 4
  %355 = load %union.tree_node** %pointer12.i.i875, align 8
  %356 = bitcast %union.tree_node* %355 to i8*
  %357 = load %union.tree_node** %offset_node.i.i854, align 8, !tbaa !5
  %call13.i.i876 = call i64 @tree_low_cst(%union.tree_node* %357, i32 1) #5
  %add.ptr.i.i877 = getelementptr inbounds i8* %356, i64 %call13.i.i876
  br label %c_getstr.exit.i881

c_getstr.exit.i881:                               ; preds = %if.end10.i.i878, %if.then2.i.i866
  %retval.0.i.i879 = phi i8* [ %351, %if.then2.i.i866 ], [ %add.ptr.i.i877, %if.end10.i.i878 ]
  call void @llvm.lifetime.end(i64 8, i8* %348) #5
  %cmp.i880 = icmp eq i8* %retval.0.i.i879, null
  br i1 %cmp.i880, label %sw.epilog320, label %if.end.i882

if.end.i882:                                      ; preds = %c_getstr.exit.i881
  %358 = bitcast %union.tree_node** %offset_node.i59.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %358) #5
  %call.i60.i = call %union.tree_node* @string_constant(%union.tree_node* %344, %union.tree_node** %offset_node.i59.i) #5
  %cmp.i61.i = icmp eq %union.tree_node* %call.i60.i, null
  br i1 %cmp.i61.i, label %if.end17.i, label %if.end.i63.i

if.end.i63.i:                                     ; preds = %if.end.i882
  %359 = load %union.tree_node** %offset_node.i59.i, align 8, !tbaa !5
  %cmp1.i62.i = icmp eq %union.tree_node* %359, null
  br i1 %cmp1.i62.i, label %if.then2.i65.i, label %if.else.i68.i

if.then2.i65.i:                                   ; preds = %if.end.i63.i
  %pointer.i64.i = getelementptr inbounds %union.tree_node* %call.i60.i, i64 0, i32 0, i32 4
  %360 = load %union.tree_node** %pointer.i64.i, align 8
  %361 = bitcast %union.tree_node* %360 to i8*
  br label %c_getstr.exit79.i

if.else.i68.i:                                    ; preds = %if.end.i63.i
  %call3.i66.i = call i32 @host_integerp(%union.tree_node* %359, i32 1) #5
  %tobool.i67.i = icmp eq i32 %call3.i66.i, 0
  br i1 %tobool.i67.i, label %if.end17.i, label %lor.lhs.false.i73.i

lor.lhs.false.i73.i:                              ; preds = %if.else.i68.i
  %362 = load %union.tree_node** %offset_node.i59.i, align 8, !tbaa !5
  %363 = getelementptr inbounds %union.tree_node* %call.i60.i, i64 0, i32 0, i32 2
  %364 = load i32* %363, align 4, !tbaa !48
  %sub.i69.i = add nsw i32 %364, -1
  %conv.i70.i = sext i32 %sub.i69.i to i64
  %call5.i71.i = call i32 @compare_tree_int(%union.tree_node* %362, i64 %conv.i70.i) #5
  %cmp6.i72.i = icmp sgt i32 %call5.i71.i, 0
  br i1 %cmp6.i72.i, label %if.end17.i, label %if.end10.i77.i

if.end10.i77.i:                                   ; preds = %lor.lhs.false.i73.i
  %pointer12.i74.i = getelementptr inbounds %union.tree_node* %call.i60.i, i64 0, i32 0, i32 4
  %365 = load %union.tree_node** %pointer12.i74.i, align 8
  %366 = bitcast %union.tree_node* %365 to i8*
  %367 = load %union.tree_node** %offset_node.i59.i, align 8, !tbaa !5
  %call13.i75.i = call i64 @tree_low_cst(%union.tree_node* %367, i32 1) #5
  %add.ptr.i76.i = getelementptr inbounds i8* %366, i64 %call13.i75.i
  br label %c_getstr.exit79.i

c_getstr.exit79.i:                                ; preds = %if.end10.i77.i, %if.then2.i65.i
  %retval.0.i78.i = phi i8* [ %361, %if.then2.i65.i ], [ %add.ptr.i76.i, %if.end10.i77.i ]
  call void @llvm.lifetime.end(i64 8, i8* %358) #5
  %cmp6.i = icmp eq i8* %retval.0.i78.i, null
  br i1 %cmp6.i, label %if.end17.i, label %if.then7.i885

if.then7.i885:                                    ; preds = %c_getstr.exit79.i
  %call8.i883 = call i8* @strstr(i8* %retval.0.i78.i, i8* %retval.0.i.i879) #5
  %cmp9.i884 = icmp eq i8* %call8.i883, null
  br i1 %cmp9.i884, label %if.then10.i886, label %if.end11.i

if.then10.i886:                                   ; preds = %if.then7.i885
  %368 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !5
  br label %expand_builtin_strstr.exit

if.end11.i:                                       ; preds = %if.then7.i885
  %type.i887 = getelementptr inbounds %union.tree_node* %344, i64 0, i32 0, i32 0, i32 1
  %369 = load %union.tree_node** %type.i887, align 8, !tbaa !15
  %sub.ptr.lhs.cast.i = ptrtoint i8* %call8.i883 to i64
  %sub.ptr.rhs.cast.i = ptrtoint i8* %retval.0.i78.i to i64
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %call13.i888 = call %union.tree_node* @size_int_wide(i64 %sub.ptr.sub.i, i32 1) #5
  %call14.i = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 59, %union.tree_node* %369, %union.tree_node* %344, %union.tree_node* %call13.i888) #5
  %call15.i889 = call %union.tree_node* @fold(%union.tree_node* %call14.i) #5
  %call16.i890 = call %struct.rtx_def* @expand_expr(%union.tree_node* %call15.i889, %struct.rtx_def* %target, i32 %mode, i32 0) #5
  br label %expand_builtin_strstr.exit

if.end17.i:                                       ; preds = %c_getstr.exit79.i, %lor.lhs.false.i73.i, %if.else.i68.i, %if.end.i882
  %370 = load i8* %retval.0.i.i879, align 1, !tbaa !9
  %cmp18.i = icmp eq i8 %370, 0
  br i1 %cmp18.i, label %if.then20.i, label %if.end22.i

if.then20.i:                                      ; preds = %if.end17.i
  %call21.i891 = call %struct.rtx_def* @expand_expr(%union.tree_node* %344, %struct.rtx_def* %target, i32 %mode, i32 0) #5
  br label %expand_builtin_strstr.exit

if.end22.i:                                       ; preds = %if.end17.i
  %arrayidx23.i = getelementptr inbounds i8* %retval.0.i.i879, i64 1
  %371 = load i8* %arrayidx23.i, align 1, !tbaa !9
  %cmp25.i = icmp eq i8 %371, 0
  br i1 %cmp25.i, label %if.end28.i, label %sw.epilog320

if.end28.i:                                       ; preds = %if.end22.i
  %372 = load %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*]* @built_in_decls, i64 0, i64 36), align 16, !tbaa !5
  %tobool29.i = icmp eq %union.tree_node* %372, null
  br i1 %tobool29.i, label %sw.epilog320, label %if.end31.i903

if.end31.i903:                                    ; preds = %if.end28.i
  %conv33.i = sext i8 %370 to i64
  %call34.i892 = call %union.tree_node* @build_int_2_wide(i64 %conv33.i, i64 0) #5
  %call35.i893 = call %union.tree_node* @build_tree_list(%union.tree_node* null, %union.tree_node* %call34.i892) #5
  %call36.i894 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %344, %union.tree_node* %call35.i893) #5
  %type.i.i895 = getelementptr inbounds %union.tree_node* %372, i64 0, i32 0, i32 0, i32 1
  %373 = load %union.tree_node** %type.i.i895, align 8, !tbaa !15
  %call.i80.i = call %union.tree_node* @build_pointer_type(%union.tree_node* %373) #5
  %call1.i.i896 = call %union.tree_node* @build1(i32 121, %union.tree_node* %call.i80.i, %union.tree_node* %372) #5
  %374 = load %union.tree_node** %type.i.i895, align 8, !tbaa !15
  %type5.i.i897 = getelementptr inbounds %union.tree_node* %374, i64 0, i32 0, i32 0, i32 1
  %375 = load %union.tree_node** %type5.i.i897, align 8, !tbaa !15
  %call6.i.i898 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 53, %union.tree_node* %375, %union.tree_node* %call1.i.i896, %union.tree_node* %call36.i894) #5
  %side_effects_flag.i.i899 = getelementptr inbounds %union.tree_node* %call6.i.i898, i64 0, i32 0, i32 0, i32 2
  %bf.load.i.i900 = load i32* %side_effects_flag.i.i899, align 8
  %bf.set.i.i901 = or i32 %bf.load.i.i900, 256
  store i32 %bf.set.i.i901, i32* %side_effects_flag.i.i899, align 8
  %call8.i.i902 = call %union.tree_node* @fold(%union.tree_node* %call6.i.i898) #5
  %call38.i = call %struct.rtx_def* @expand_expr(%union.tree_node* %call8.i.i902, %struct.rtx_def* %target, i32 %mode, i32 0) #5
  br label %expand_builtin_strstr.exit

expand_builtin_strstr.exit:                       ; preds = %if.then10.i886, %if.end11.i, %if.then20.i, %if.end31.i903
  %retval.0.i904 = phi %struct.rtx_def* [ %368, %if.then10.i886 ], [ %call16.i890, %if.end11.i ], [ %call21.i891, %if.then20.i ], [ %call38.i, %if.end31.i903 ]
  %tobool197 = icmp eq %struct.rtx_def* %retval.0.i904, null
  br i1 %tobool197, label %sw.epilog320, label %return

sw.bb200:                                         ; preds = %if.end14
  %call.i906 = call i32 (%union.tree_node*, ...)* @validate_arglist(%union.tree_node* %4, i32 13, i32 13, i32 5) #5
  %tobool.i907 = icmp eq i32 %call.i906, 0
  br i1 %tobool.i907, label %sw.epilog320, label %if.else.i913

if.else.i913:                                     ; preds = %sw.bb200
  %value.i908 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 2
  %376 = bitcast i32* %value.i908 to %union.tree_node**
  %377 = load %union.tree_node** %376, align 8, !tbaa !26
  %chain.i909 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0
  %378 = load %union.tree_node** %chain.i909, align 8, !tbaa !28
  %value2.i910 = getelementptr inbounds %union.tree_node* %378, i64 0, i32 0, i32 2
  %379 = bitcast i32* %value2.i910 to %union.tree_node**
  %380 = load %union.tree_node** %379, align 8, !tbaa !26
  %381 = bitcast %union.tree_node** %offset_node.i.i905 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %381) #5
  %call.i.i911 = call %union.tree_node* @string_constant(%union.tree_node* %380, %union.tree_node** %offset_node.i.i905) #5
  %cmp.i.i912 = icmp eq %union.tree_node* %call.i.i911, null
  br i1 %cmp.i.i912, label %sw.epilog320, label %if.end.i.i915

if.end.i.i915:                                    ; preds = %if.else.i913
  %382 = load %union.tree_node** %offset_node.i.i905, align 8, !tbaa !5
  %cmp1.i.i914 = icmp eq %union.tree_node* %382, null
  br i1 %cmp1.i.i914, label %if.then2.i.i917, label %if.else.i.i920

if.then2.i.i917:                                  ; preds = %if.end.i.i915
  %pointer.i.i916 = getelementptr inbounds %union.tree_node* %call.i.i911, i64 0, i32 0, i32 4
  %383 = load %union.tree_node** %pointer.i.i916, align 8
  %384 = bitcast %union.tree_node* %383 to i8*
  br label %c_getstr.exit.i932

if.else.i.i920:                                   ; preds = %if.end.i.i915
  %call3.i.i918 = call i32 @host_integerp(%union.tree_node* %382, i32 1) #5
  %tobool.i.i919 = icmp eq i32 %call3.i.i918, 0
  br i1 %tobool.i.i919, label %sw.epilog320, label %lor.lhs.false.i.i925

lor.lhs.false.i.i925:                             ; preds = %if.else.i.i920
  %385 = load %union.tree_node** %offset_node.i.i905, align 8, !tbaa !5
  %386 = getelementptr inbounds %union.tree_node* %call.i.i911, i64 0, i32 0, i32 2
  %387 = load i32* %386, align 4, !tbaa !48
  %sub.i.i921 = add nsw i32 %387, -1
  %conv.i.i922 = sext i32 %sub.i.i921 to i64
  %call5.i.i923 = call i32 @compare_tree_int(%union.tree_node* %385, i64 %conv.i.i922) #5
  %cmp6.i.i924 = icmp sgt i32 %call5.i.i923, 0
  br i1 %cmp6.i.i924, label %sw.epilog320, label %if.end10.i.i929

if.end10.i.i929:                                  ; preds = %lor.lhs.false.i.i925
  %pointer12.i.i926 = getelementptr inbounds %union.tree_node* %call.i.i911, i64 0, i32 0, i32 4
  %388 = load %union.tree_node** %pointer12.i.i926, align 8
  %389 = bitcast %union.tree_node* %388 to i8*
  %390 = load %union.tree_node** %offset_node.i.i905, align 8, !tbaa !5
  %call13.i.i927 = call i64 @tree_low_cst(%union.tree_node* %390, i32 1) #5
  %add.ptr.i.i928 = getelementptr inbounds i8* %389, i64 %call13.i.i927
  br label %c_getstr.exit.i932

c_getstr.exit.i932:                               ; preds = %if.end10.i.i929, %if.then2.i.i917
  %retval.0.i.i930 = phi i8* [ %384, %if.then2.i.i917 ], [ %add.ptr.i.i928, %if.end10.i.i929 ]
  call void @llvm.lifetime.end(i64 8, i8* %381) #5
  %cmp.i931 = icmp eq i8* %retval.0.i.i930, null
  br i1 %cmp.i931, label %sw.epilog320, label %if.end.i933

if.end.i933:                                      ; preds = %c_getstr.exit.i932
  %391 = bitcast %union.tree_node** %offset_node.i57.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %391) #5
  %call.i58.i = call %union.tree_node* @string_constant(%union.tree_node* %377, %union.tree_node** %offset_node.i57.i) #5
  %cmp.i59.i = icmp eq %union.tree_node* %call.i58.i, null
  br i1 %cmp.i59.i, label %if.end17.i949, label %if.end.i61.i

if.end.i61.i:                                     ; preds = %if.end.i933
  %392 = load %union.tree_node** %offset_node.i57.i, align 8, !tbaa !5
  %cmp1.i60.i = icmp eq %union.tree_node* %392, null
  br i1 %cmp1.i60.i, label %if.then2.i63.i, label %if.else.i66.i

if.then2.i63.i:                                   ; preds = %if.end.i61.i
  %pointer.i62.i = getelementptr inbounds %union.tree_node* %call.i58.i, i64 0, i32 0, i32 4
  %393 = load %union.tree_node** %pointer.i62.i, align 8
  %394 = bitcast %union.tree_node* %393 to i8*
  br label %c_getstr.exit77.i

if.else.i66.i:                                    ; preds = %if.end.i61.i
  %call3.i64.i = call i32 @host_integerp(%union.tree_node* %392, i32 1) #5
  %tobool.i65.i = icmp eq i32 %call3.i64.i, 0
  br i1 %tobool.i65.i, label %if.end17.i949, label %lor.lhs.false.i71.i

lor.lhs.false.i71.i:                              ; preds = %if.else.i66.i
  %395 = load %union.tree_node** %offset_node.i57.i, align 8, !tbaa !5
  %396 = getelementptr inbounds %union.tree_node* %call.i58.i, i64 0, i32 0, i32 2
  %397 = load i32* %396, align 4, !tbaa !48
  %sub.i67.i = add nsw i32 %397, -1
  %conv.i68.i = sext i32 %sub.i67.i to i64
  %call5.i69.i = call i32 @compare_tree_int(%union.tree_node* %395, i64 %conv.i68.i) #5
  %cmp6.i70.i = icmp sgt i32 %call5.i69.i, 0
  br i1 %cmp6.i70.i, label %if.end17.i949, label %if.end10.i75.i

if.end10.i75.i:                                   ; preds = %lor.lhs.false.i71.i
  %pointer12.i72.i = getelementptr inbounds %union.tree_node* %call.i58.i, i64 0, i32 0, i32 4
  %398 = load %union.tree_node** %pointer12.i72.i, align 8
  %399 = bitcast %union.tree_node* %398 to i8*
  %400 = load %union.tree_node** %offset_node.i57.i, align 8, !tbaa !5
  %call13.i73.i = call i64 @tree_low_cst(%union.tree_node* %400, i32 1) #5
  %add.ptr.i74.i = getelementptr inbounds i8* %399, i64 %call13.i73.i
  br label %c_getstr.exit77.i

c_getstr.exit77.i:                                ; preds = %if.end10.i75.i, %if.then2.i63.i
  %retval.0.i76.i = phi i8* [ %394, %if.then2.i63.i ], [ %add.ptr.i74.i, %if.end10.i75.i ]
  call void @llvm.lifetime.end(i64 8, i8* %391) #5
  %cmp6.i934 = icmp eq i8* %retval.0.i76.i, null
  br i1 %cmp6.i934, label %if.end17.i949, label %if.then7.i937

if.then7.i937:                                    ; preds = %c_getstr.exit77.i
  %call8.i935 = call i8* @strpbrk(i8* %retval.0.i76.i, i8* %retval.0.i.i930) #5
  %cmp9.i936 = icmp eq i8* %call8.i935, null
  br i1 %cmp9.i936, label %if.then10.i938, label %if.end11.i947

if.then10.i938:                                   ; preds = %if.then7.i937
  %401 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !5
  br label %expand_builtin_strpbrk.exit

if.end11.i947:                                    ; preds = %if.then7.i937
  %type.i939 = getelementptr inbounds %union.tree_node* %377, i64 0, i32 0, i32 0, i32 1
  %402 = load %union.tree_node** %type.i939, align 8, !tbaa !15
  %sub.ptr.lhs.cast.i940 = ptrtoint i8* %call8.i935 to i64
  %sub.ptr.rhs.cast.i941 = ptrtoint i8* %retval.0.i76.i to i64
  %sub.ptr.sub.i942 = sub i64 %sub.ptr.lhs.cast.i940, %sub.ptr.rhs.cast.i941
  %call13.i943 = call %union.tree_node* @size_int_wide(i64 %sub.ptr.sub.i942, i32 1) #5
  %call14.i944 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 59, %union.tree_node* %402, %union.tree_node* %377, %union.tree_node* %call13.i943) #5
  %call15.i945 = call %union.tree_node* @fold(%union.tree_node* %call14.i944) #5
  %call16.i946 = call %struct.rtx_def* @expand_expr(%union.tree_node* %call15.i945, %struct.rtx_def* %target, i32 %mode, i32 0) #5
  br label %expand_builtin_strpbrk.exit

if.end17.i949:                                    ; preds = %c_getstr.exit77.i, %lor.lhs.false.i71.i, %if.else.i66.i, %if.end.i933
  %403 = load i8* %retval.0.i.i930, align 1, !tbaa !9
  %cmp18.i948 = icmp eq i8 %403, 0
  br i1 %cmp18.i948, label %if.then20.i951, label %if.end22.i954

if.then20.i951:                                   ; preds = %if.end17.i949
  %404 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !5
  %call21.i950 = call %struct.rtx_def* @expand_expr(%union.tree_node* %377, %struct.rtx_def* %404, i32 0, i32 0) #5
  %405 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !5
  br label %expand_builtin_strpbrk.exit

if.end22.i954:                                    ; preds = %if.end17.i949
  %arrayidx23.i952 = getelementptr inbounds i8* %retval.0.i.i930, i64 1
  %406 = load i8* %arrayidx23.i952, align 1, !tbaa !9
  %cmp25.i953 = icmp eq i8 %406, 0
  br i1 %cmp25.i953, label %if.end28.i956, label %sw.epilog320

if.end28.i956:                                    ; preds = %if.end22.i954
  %407 = load %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*]* @built_in_decls, i64 0, i64 36), align 16, !tbaa !5
  %tobool29.i955 = icmp eq %union.tree_node* %407, null
  br i1 %tobool29.i955, label %sw.epilog320, label %if.end31.i970

if.end31.i970:                                    ; preds = %if.end28.i956
  %conv33.i957 = sext i8 %403 to i64
  %call34.i958 = call %union.tree_node* @build_int_2_wide(i64 %conv33.i957, i64 0) #5
  %call35.i959 = call %union.tree_node* @build_tree_list(%union.tree_node* null, %union.tree_node* %call34.i958) #5
  %call36.i960 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %377, %union.tree_node* %call35.i959) #5
  %type.i.i961 = getelementptr inbounds %union.tree_node* %407, i64 0, i32 0, i32 0, i32 1
  %408 = load %union.tree_node** %type.i.i961, align 8, !tbaa !15
  %call.i78.i = call %union.tree_node* @build_pointer_type(%union.tree_node* %408) #5
  %call1.i.i962 = call %union.tree_node* @build1(i32 121, %union.tree_node* %call.i78.i, %union.tree_node* %407) #5
  %409 = load %union.tree_node** %type.i.i961, align 8, !tbaa !15
  %type5.i.i963 = getelementptr inbounds %union.tree_node* %409, i64 0, i32 0, i32 0, i32 1
  %410 = load %union.tree_node** %type5.i.i963, align 8, !tbaa !15
  %call6.i.i964 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 53, %union.tree_node* %410, %union.tree_node* %call1.i.i962, %union.tree_node* %call36.i960) #5
  %side_effects_flag.i.i965 = getelementptr inbounds %union.tree_node* %call6.i.i964, i64 0, i32 0, i32 0, i32 2
  %bf.load.i.i966 = load i32* %side_effects_flag.i.i965, align 8
  %bf.set.i.i967 = or i32 %bf.load.i.i966, 256
  store i32 %bf.set.i.i967, i32* %side_effects_flag.i.i965, align 8
  %call8.i.i968 = call %union.tree_node* @fold(%union.tree_node* %call6.i.i964) #5
  %call38.i969 = call %struct.rtx_def* @expand_expr(%union.tree_node* %call8.i.i968, %struct.rtx_def* %target, i32 %mode, i32 0) #5
  br label %expand_builtin_strpbrk.exit

expand_builtin_strpbrk.exit:                      ; preds = %if.then10.i938, %if.end11.i947, %if.then20.i951, %if.end31.i970
  %retval.0.i971 = phi %struct.rtx_def* [ %401, %if.then10.i938 ], [ %call16.i946, %if.end11.i947 ], [ %405, %if.then20.i951 ], [ %call38.i969, %if.end31.i970 ]
  %tobool202 = icmp eq %struct.rtx_def* %retval.0.i971, null
  br i1 %tobool202, label %sw.epilog320, label %return

sw.bb205:                                         ; preds = %if.end14, %if.end14
  %call.i973 = call i32 (%union.tree_node*, ...)* @validate_arglist(%union.tree_node* %4, i32 13, i32 6, i32 5) #5
  %tobool.i974 = icmp eq i32 %call.i973, 0
  br i1 %tobool.i974, label %sw.epilog320, label %if.else.i982

if.else.i982:                                     ; preds = %sw.bb205
  %value.i975 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 2
  %411 = bitcast i32* %value.i975 to %union.tree_node**
  %412 = load %union.tree_node** %411, align 8, !tbaa !26
  %chain.i976 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0
  %413 = load %union.tree_node** %chain.i976, align 8, !tbaa !28
  %value2.i977 = getelementptr inbounds %union.tree_node* %413, i64 0, i32 0, i32 2
  %414 = bitcast i32* %value2.i977 to %union.tree_node**
  %415 = load %union.tree_node** %414, align 8, !tbaa !26
  %code.i978 = getelementptr inbounds %union.tree_node* %415, i64 0, i32 0, i32 0, i32 2
  %bf.load.i979 = load i32* %code.i978, align 8
  %bf.clear.i980 = and i32 %bf.load.i979, 255
  %cmp.i981 = icmp eq i32 %bf.clear.i980, 25
  br i1 %cmp.i981, label %if.end.i985, label %sw.epilog320

if.end.i985:                                      ; preds = %if.else.i982
  %416 = bitcast %union.tree_node** %offset_node.i.i972 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %416) #5
  %call.i.i983 = call %union.tree_node* @string_constant(%union.tree_node* %412, %union.tree_node** %offset_node.i.i972) #5
  %cmp.i.i984 = icmp eq %union.tree_node* %call.i.i983, null
  br i1 %cmp.i.i984, label %sw.epilog320, label %if.end.i.i987

if.end.i.i987:                                    ; preds = %if.end.i985
  %417 = load %union.tree_node** %offset_node.i.i972, align 8, !tbaa !5
  %cmp1.i.i986 = icmp eq %union.tree_node* %417, null
  br i1 %cmp1.i.i986, label %if.then2.i.i989, label %if.else.i.i992

if.then2.i.i989:                                  ; preds = %if.end.i.i987
  %pointer.i.i988 = getelementptr inbounds %union.tree_node* %call.i.i983, i64 0, i32 0, i32 4
  %418 = load %union.tree_node** %pointer.i.i988, align 8
  %419 = bitcast %union.tree_node* %418 to i8*
  br label %c_getstr.exit.i1004

if.else.i.i992:                                   ; preds = %if.end.i.i987
  %call3.i.i990 = call i32 @host_integerp(%union.tree_node* %417, i32 1) #5
  %tobool.i.i991 = icmp eq i32 %call3.i.i990, 0
  br i1 %tobool.i.i991, label %sw.epilog320, label %lor.lhs.false.i.i997

lor.lhs.false.i.i997:                             ; preds = %if.else.i.i992
  %420 = load %union.tree_node** %offset_node.i.i972, align 8, !tbaa !5
  %421 = getelementptr inbounds %union.tree_node* %call.i.i983, i64 0, i32 0, i32 2
  %422 = load i32* %421, align 4, !tbaa !48
  %sub.i.i993 = add nsw i32 %422, -1
  %conv.i.i994 = sext i32 %sub.i.i993 to i64
  %call5.i.i995 = call i32 @compare_tree_int(%union.tree_node* %420, i64 %conv.i.i994) #5
  %cmp6.i.i996 = icmp sgt i32 %call5.i.i995, 0
  br i1 %cmp6.i.i996, label %sw.epilog320, label %if.end10.i.i1001

if.end10.i.i1001:                                 ; preds = %lor.lhs.false.i.i997
  %pointer12.i.i998 = getelementptr inbounds %union.tree_node* %call.i.i983, i64 0, i32 0, i32 4
  %423 = load %union.tree_node** %pointer12.i.i998, align 8
  %424 = bitcast %union.tree_node* %423 to i8*
  %425 = load %union.tree_node** %offset_node.i.i972, align 8, !tbaa !5
  %call13.i.i999 = call i64 @tree_low_cst(%union.tree_node* %425, i32 1) #5
  %add.ptr.i.i1000 = getelementptr inbounds i8* %424, i64 %call13.i.i999
  br label %c_getstr.exit.i1004

c_getstr.exit.i1004:                              ; preds = %if.end10.i.i1001, %if.then2.i.i989
  %retval.0.i.i1002 = phi i8* [ %419, %if.then2.i.i989 ], [ %add.ptr.i.i1000, %if.end10.i.i1001 ]
  call void @llvm.lifetime.end(i64 8, i8* %416) #5
  %cmp6.i1003 = icmp eq i8* %retval.0.i.i1002, null
  br i1 %cmp6.i1003, label %sw.epilog320, label %if.then7.i1005

if.then7.i1005:                                   ; preds = %c_getstr.exit.i1004
  %call.i31.i = call i32 @host_integerp(%union.tree_node* %415, i32 1) #5
  %tobool.i32.i = icmp eq i32 %call.i31.i, 0
  br i1 %tobool.i32.i, label %sw.epilog320, label %if.end11.i1009

if.end11.i1009:                                   ; preds = %if.then7.i1005
  %call1.i.i1006 = call i64 @tree_low_cst(%union.tree_node* %415, i32 1) #5
  %conv.i33.i = trunc i64 %call1.i.i1006 to i32
  %sext.i = shl i32 %conv.i33.i, 24
  %conv.i1007 = ashr exact i32 %sext.i, 24
  %call12.i1008 = call i8* @strchr(i8* %retval.0.i.i1002, i32 %conv.i1007) #5
  %cmp13.i = icmp eq i8* %call12.i1008, null
  br i1 %cmp13.i, label %if.then15.i1010, label %if.end16.i1019

if.then15.i1010:                                  ; preds = %if.end11.i1009
  %426 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !5
  br label %expand_builtin_strchr.exit

if.end16.i1019:                                   ; preds = %if.end11.i1009
  %type.i1011 = getelementptr inbounds %union.tree_node* %412, i64 0, i32 0, i32 0, i32 1
  %427 = load %union.tree_node** %type.i1011, align 8, !tbaa !15
  %sub.ptr.lhs.cast.i1012 = ptrtoint i8* %call12.i1008 to i64
  %sub.ptr.rhs.cast.i1013 = ptrtoint i8* %retval.0.i.i1002 to i64
  %sub.ptr.sub.i1014 = sub i64 %sub.ptr.lhs.cast.i1012, %sub.ptr.rhs.cast.i1013
  %call18.i1015 = call %union.tree_node* @size_int_wide(i64 %sub.ptr.sub.i1014, i32 1) #5
  %call19.i1016 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 59, %union.tree_node* %427, %union.tree_node* %412, %union.tree_node* %call18.i1015) #5
  %call20.i1017 = call %union.tree_node* @fold(%union.tree_node* %call19.i1016) #5
  %call21.i1018 = call %struct.rtx_def* @expand_expr(%union.tree_node* %call20.i1017, %struct.rtx_def* %target, i32 %mode, i32 0) #5
  br label %expand_builtin_strchr.exit

expand_builtin_strchr.exit:                       ; preds = %if.then15.i1010, %if.end16.i1019
  %retval.0.i1020 = phi %struct.rtx_def* [ %426, %if.then15.i1010 ], [ %call21.i1018, %if.end16.i1019 ]
  %tobool207 = icmp eq %struct.rtx_def* %retval.0.i1020, null
  br i1 %tobool207, label %sw.epilog320, label %return

sw.bb210:                                         ; preds = %if.end14, %if.end14
  %call.i1022 = call i32 (%union.tree_node*, ...)* @validate_arglist(%union.tree_node* %4, i32 13, i32 6, i32 5) #5
  %tobool.i1023 = icmp eq i32 %call.i1022, 0
  br i1 %tobool.i1023, label %sw.epilog320, label %if.else.i1031

if.else.i1031:                                    ; preds = %sw.bb210
  %value.i1024 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 2
  %428 = bitcast i32* %value.i1024 to %union.tree_node**
  %429 = load %union.tree_node** %428, align 8, !tbaa !26
  %chain.i1025 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0
  %430 = load %union.tree_node** %chain.i1025, align 8, !tbaa !28
  %value2.i1026 = getelementptr inbounds %union.tree_node* %430, i64 0, i32 0, i32 2
  %431 = bitcast i32* %value2.i1026 to %union.tree_node**
  %432 = load %union.tree_node** %431, align 8, !tbaa !26
  %code.i1027 = getelementptr inbounds %union.tree_node* %432, i64 0, i32 0, i32 0, i32 2
  %bf.load.i1028 = load i32* %code.i1027, align 8
  %bf.clear.i1029 = and i32 %bf.load.i1028, 255
  %cmp.i1030 = icmp eq i32 %bf.clear.i1029, 25
  br i1 %cmp.i1030, label %if.end.i1034, label %sw.epilog320

if.end.i1034:                                     ; preds = %if.else.i1031
  %433 = bitcast %union.tree_node** %offset_node.i.i1021 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %433) #5
  %call.i.i1032 = call %union.tree_node* @string_constant(%union.tree_node* %429, %union.tree_node** %offset_node.i.i1021) #5
  %cmp.i.i1033 = icmp eq %union.tree_node* %call.i.i1032, null
  br i1 %cmp.i.i1033, label %if.end22.i1073, label %if.end.i.i1036

if.end.i.i1036:                                   ; preds = %if.end.i1034
  %434 = load %union.tree_node** %offset_node.i.i1021, align 8, !tbaa !5
  %cmp1.i.i1035 = icmp eq %union.tree_node* %434, null
  br i1 %cmp1.i.i1035, label %if.then2.i.i1038, label %if.else.i.i1041

if.then2.i.i1038:                                 ; preds = %if.end.i.i1036
  %pointer.i.i1037 = getelementptr inbounds %union.tree_node* %call.i.i1032, i64 0, i32 0, i32 4
  %435 = load %union.tree_node** %pointer.i.i1037, align 8
  %436 = bitcast %union.tree_node* %435 to i8*
  br label %c_getstr.exit.i1053

if.else.i.i1041:                                  ; preds = %if.end.i.i1036
  %call3.i.i1039 = call i32 @host_integerp(%union.tree_node* %434, i32 1) #5
  %tobool.i.i1040 = icmp eq i32 %call3.i.i1039, 0
  br i1 %tobool.i.i1040, label %if.end22.i1073, label %lor.lhs.false.i.i1046

lor.lhs.false.i.i1046:                            ; preds = %if.else.i.i1041
  %437 = load %union.tree_node** %offset_node.i.i1021, align 8, !tbaa !5
  %438 = getelementptr inbounds %union.tree_node* %call.i.i1032, i64 0, i32 0, i32 2
  %439 = load i32* %438, align 4, !tbaa !48
  %sub.i.i1042 = add nsw i32 %439, -1
  %conv.i.i1043 = sext i32 %sub.i.i1042 to i64
  %call5.i.i1044 = call i32 @compare_tree_int(%union.tree_node* %437, i64 %conv.i.i1043) #5
  %cmp6.i.i1045 = icmp sgt i32 %call5.i.i1044, 0
  br i1 %cmp6.i.i1045, label %if.end22.i1073, label %if.end10.i.i1050

if.end10.i.i1050:                                 ; preds = %lor.lhs.false.i.i1046
  %pointer12.i.i1047 = getelementptr inbounds %union.tree_node* %call.i.i1032, i64 0, i32 0, i32 4
  %440 = load %union.tree_node** %pointer12.i.i1047, align 8
  %441 = bitcast %union.tree_node* %440 to i8*
  %442 = load %union.tree_node** %offset_node.i.i1021, align 8, !tbaa !5
  %call13.i.i1048 = call i64 @tree_low_cst(%union.tree_node* %442, i32 1) #5
  %add.ptr.i.i1049 = getelementptr inbounds i8* %441, i64 %call13.i.i1048
  br label %c_getstr.exit.i1053

c_getstr.exit.i1053:                              ; preds = %if.end10.i.i1050, %if.then2.i.i1038
  %retval.0.i.i1051 = phi i8* [ %436, %if.then2.i.i1038 ], [ %add.ptr.i.i1049, %if.end10.i.i1050 ]
  call void @llvm.lifetime.end(i64 8, i8* %433) #5
  %cmp6.i1052 = icmp eq i8* %retval.0.i.i1051, null
  br i1 %cmp6.i1052, label %if.end22.i1073, label %if.then7.i1054

if.then7.i1054:                                   ; preds = %c_getstr.exit.i1053
  %call.i44.i = call i32 @host_integerp(%union.tree_node* %432, i32 1) #5
  %tobool.i45.i = icmp eq i32 %call.i44.i, 0
  br i1 %tobool.i45.i, label %sw.epilog320, label %if.end11.i1060

if.end11.i1060:                                   ; preds = %if.then7.i1054
  %call1.i.i1055 = call i64 @tree_low_cst(%union.tree_node* %432, i32 1) #5
  %conv.i46.i = trunc i64 %call1.i.i1055 to i32
  %sext.i1056 = shl i32 %conv.i46.i, 24
  %conv.i1057 = ashr exact i32 %sext.i1056, 24
  %call12.i1058 = call i8* @strrchr(i8* %retval.0.i.i1051, i32 %conv.i1057) #5
  %cmp13.i1059 = icmp eq i8* %call12.i1058, null
  br i1 %cmp13.i1059, label %if.then15.i1061, label %if.end16.i1070

if.then15.i1061:                                  ; preds = %if.end11.i1060
  %443 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !5
  br label %expand_builtin_strrchr.exit

if.end16.i1070:                                   ; preds = %if.end11.i1060
  %type.i1062 = getelementptr inbounds %union.tree_node* %429, i64 0, i32 0, i32 0, i32 1
  %444 = load %union.tree_node** %type.i1062, align 8, !tbaa !15
  %sub.ptr.lhs.cast.i1063 = ptrtoint i8* %call12.i1058 to i64
  %sub.ptr.rhs.cast.i1064 = ptrtoint i8* %retval.0.i.i1051 to i64
  %sub.ptr.sub.i1065 = sub i64 %sub.ptr.lhs.cast.i1063, %sub.ptr.rhs.cast.i1064
  %call18.i1066 = call %union.tree_node* @size_int_wide(i64 %sub.ptr.sub.i1065, i32 1) #5
  %call19.i1067 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 59, %union.tree_node* %444, %union.tree_node* %429, %union.tree_node* %call18.i1066) #5
  %call20.i1068 = call %union.tree_node* @fold(%union.tree_node* %call19.i1067) #5
  %call21.i1069 = call %struct.rtx_def* @expand_expr(%union.tree_node* %call20.i1068, %struct.rtx_def* %target, i32 %mode, i32 0) #5
  br label %expand_builtin_strrchr.exit

if.end22.i1073:                                   ; preds = %c_getstr.exit.i1053, %lor.lhs.false.i.i1046, %if.else.i.i1041, %if.end.i1034
  %call23.i1071 = call i32 @integer_zerop(%union.tree_node* %432) #5
  %tobool24.i1072 = icmp eq i32 %call23.i1071, 0
  br i1 %tobool24.i1072, label %sw.epilog320, label %if.end26.i1074

if.end26.i1074:                                   ; preds = %if.end22.i1073
  %445 = load %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*]* @built_in_decls, i64 0, i64 36), align 16, !tbaa !5
  %tobool27.i = icmp eq %union.tree_node* %445, null
  br i1 %tobool27.i, label %sw.epilog320, label %if.end29.i1083

if.end29.i1083:                                   ; preds = %if.end26.i1074
  %type.i.i1075 = getelementptr inbounds %union.tree_node* %445, i64 0, i32 0, i32 0, i32 1
  %446 = load %union.tree_node** %type.i.i1075, align 8, !tbaa !15
  %call.i49.i = call %union.tree_node* @build_pointer_type(%union.tree_node* %446) #5
  %call1.i50.i = call %union.tree_node* @build1(i32 121, %union.tree_node* %call.i49.i, %union.tree_node* %445) #5
  %447 = load %union.tree_node** %type.i.i1075, align 8, !tbaa !15
  %type5.i.i1076 = getelementptr inbounds %union.tree_node* %447, i64 0, i32 0, i32 0, i32 1
  %448 = load %union.tree_node** %type5.i.i1076, align 8, !tbaa !15
  %call6.i.i1077 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 53, %union.tree_node* %448, %union.tree_node* %call1.i50.i, %union.tree_node* %4) #5
  %side_effects_flag.i.i1078 = getelementptr inbounds %union.tree_node* %call6.i.i1077, i64 0, i32 0, i32 0, i32 2
  %bf.load.i.i1079 = load i32* %side_effects_flag.i.i1078, align 8
  %bf.set.i.i1080 = or i32 %bf.load.i.i1079, 256
  store i32 %bf.set.i.i1080, i32* %side_effects_flag.i.i1078, align 8
  %call8.i.i1081 = call %union.tree_node* @fold(%union.tree_node* %call6.i.i1077) #5
  %call31.i1082 = call %struct.rtx_def* @expand_expr(%union.tree_node* %call8.i.i1081, %struct.rtx_def* %target, i32 %mode, i32 0) #5
  br label %expand_builtin_strrchr.exit

expand_builtin_strrchr.exit:                      ; preds = %if.then15.i1061, %if.end16.i1070, %if.end29.i1083
  %retval.0.i1084 = phi %struct.rtx_def* [ %443, %if.then15.i1061 ], [ %call21.i1069, %if.end16.i1070 ], [ %call31.i1082, %if.end29.i1083 ]
  %tobool212 = icmp eq %struct.rtx_def* %retval.0.i1084, null
  br i1 %tobool212, label %sw.epilog320, label %return

sw.bb215:                                         ; preds = %if.end14
  %call.i1086 = call i32 (%union.tree_node*, ...)* @validate_arglist(%union.tree_node* %4, i32 13, i32 13, i32 6, i32 5) #5
  %tobool.i1087 = icmp eq i32 %call.i1086, 0
  br i1 %tobool.i1087, label %sw.epilog320, label %if.else.i1096

if.else.i1096:                                    ; preds = %sw.bb215
  %value.i1088 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 2
  %449 = bitcast i32* %value.i1088 to %union.tree_node**
  %450 = load %union.tree_node** %449, align 8, !tbaa !26
  %chain.i1089 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0
  %451 = load %union.tree_node** %chain.i1089, align 8, !tbaa !28
  %value2.i1090 = getelementptr inbounds %union.tree_node* %451, i64 0, i32 0, i32 2
  %452 = bitcast i32* %value2.i1090 to %union.tree_node**
  %453 = load %union.tree_node** %452, align 8, !tbaa !26
  %chain6.i1091 = getelementptr inbounds %union.tree_node* %451, i64 0, i32 0, i32 0, i32 0
  %454 = load %union.tree_node** %chain6.i1091, align 8, !tbaa !28
  %value8.i1092 = getelementptr inbounds %union.tree_node* %454, i64 0, i32 0, i32 2
  %455 = bitcast i32* %value8.i1092 to %union.tree_node**
  %456 = load %union.tree_node** %455, align 8, !tbaa !26
  %call9.i1093 = call fastcc i32 @get_pointer_alignment(%union.tree_node* %453) #5
  %call10.i1094 = call fastcc i32 @get_pointer_alignment(%union.tree_node* %450) #5
  %cmp.i1095 = icmp eq i32 %call10.i1094, 0
  br i1 %cmp.i1095, label %sw.epilog320, label %if.end.i1098

if.end.i1098:                                     ; preds = %if.else.i1096
  %call12.i1097 = call i32 @host_integerp(%union.tree_node* %456, i32 1) #5
  %tobool13.i = icmp eq i32 %call12.i1097, 0
  br i1 %tobool13.i, label %if.end19.i, label %land.lhs.true.i1100

land.lhs.true.i1100:                              ; preds = %if.end.i1098
  %call14.i1099 = call i64 @tree_low_cst(%union.tree_node* %456, i32 1) #5
  %cmp15.i = icmp eq i64 %call14.i1099, 0
  br i1 %cmp15.i, label %if.then16.i, label %if.end19.i

if.then16.i:                                      ; preds = %land.lhs.true.i1100
  %457 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !5
  %call17.i1101 = call %struct.rtx_def* @expand_expr(%union.tree_node* %453, %struct.rtx_def* %457, i32 0, i32 0) #5
  %call18.i1102 = call %struct.rtx_def* @expand_expr(%union.tree_node* %450, %struct.rtx_def* %target, i32 %mode, i32 0) #5
  br label %expand_builtin_memcpy.exit

if.end19.i:                                       ; preds = %land.lhs.true.i1100, %if.end.i1098
  %cmp20.i1103 = icmp eq i32 %call9.i1093, 0
  br i1 %cmp20.i1103, label %sw.epilog320, label %if.end22.i1108

if.end22.i1108:                                   ; preds = %if.end19.i
  %call23.i1104 = call fastcc %struct.rtx_def* @get_memory_rtx(%union.tree_node* %450) #5
  call void @set_mem_align(%struct.rtx_def* %call23.i1104, i32 %call10.i1094) #5
  %call24.i1105 = call %struct.rtx_def* @expand_expr(%union.tree_node* %456, %struct.rtx_def* null, i32 0, i32 0) #5
  %458 = bitcast %union.tree_node** %offset_node.i.i1085 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %458) #5
  %call.i.i1106 = call %union.tree_node* @string_constant(%union.tree_node* %453, %union.tree_node** %offset_node.i.i1085) #5
  %cmp.i.i1107 = icmp eq %union.tree_node* %call.i.i1106, null
  br i1 %cmp.i.i1107, label %if.end45.i, label %if.end.i.i1110

if.end.i.i1110:                                   ; preds = %if.end22.i1108
  %459 = load %union.tree_node** %offset_node.i.i1085, align 8, !tbaa !5
  %cmp1.i.i1109 = icmp eq %union.tree_node* %459, null
  br i1 %cmp1.i.i1109, label %if.then2.i.i1112, label %if.else.i.i1115

if.then2.i.i1112:                                 ; preds = %if.end.i.i1110
  %pointer.i.i1111 = getelementptr inbounds %union.tree_node* %call.i.i1106, i64 0, i32 0, i32 4
  %460 = load %union.tree_node** %pointer.i.i1111, align 8
  %461 = bitcast %union.tree_node* %460 to i8*
  br label %c_getstr.exit.i1126

if.else.i.i1115:                                  ; preds = %if.end.i.i1110
  %call3.i.i1113 = call i32 @host_integerp(%union.tree_node* %459, i32 1) #5
  %tobool.i.i1114 = icmp eq i32 %call3.i.i1113, 0
  br i1 %tobool.i.i1114, label %if.end45.i, label %lor.lhs.false.i.i1120

lor.lhs.false.i.i1120:                            ; preds = %if.else.i.i1115
  %462 = load %union.tree_node** %offset_node.i.i1085, align 8, !tbaa !5
  %463 = getelementptr inbounds %union.tree_node* %call.i.i1106, i64 0, i32 0, i32 2
  %464 = load i32* %463, align 4, !tbaa !48
  %sub.i.i1116 = add nsw i32 %464, -1
  %conv.i.i1117 = sext i32 %sub.i.i1116 to i64
  %call5.i.i1118 = call i32 @compare_tree_int(%union.tree_node* %462, i64 %conv.i.i1117) #5
  %cmp6.i.i1119 = icmp sgt i32 %call5.i.i1118, 0
  br i1 %cmp6.i.i1119, label %if.end45.i, label %if.end10.i.i1124

if.end10.i.i1124:                                 ; preds = %lor.lhs.false.i.i1120
  %pointer12.i.i1121 = getelementptr inbounds %union.tree_node* %call.i.i1106, i64 0, i32 0, i32 4
  %465 = load %union.tree_node** %pointer12.i.i1121, align 8
  %466 = bitcast %union.tree_node* %465 to i8*
  %467 = load %union.tree_node** %offset_node.i.i1085, align 8, !tbaa !5
  %call13.i.i1122 = call i64 @tree_low_cst(%union.tree_node* %467, i32 1) #5
  %add.ptr.i.i1123 = getelementptr inbounds i8* %466, i64 %call13.i.i1122
  br label %c_getstr.exit.i1126

c_getstr.exit.i1126:                              ; preds = %if.end10.i.i1124, %if.then2.i.i1112
  %retval.0.i.i1125 = phi i8* [ %461, %if.then2.i.i1112 ], [ %add.ptr.i.i1123, %if.end10.i.i1124 ]
  call void @llvm.lifetime.end(i64 8, i8* %458) #5
  %tobool26.i = icmp eq i8* %retval.0.i.i1125, null
  br i1 %tobool26.i, label %if.end45.i, label %land.lhs.true27.i

land.lhs.true27.i:                                ; preds = %c_getstr.exit.i1126
  %468 = getelementptr inbounds %struct.rtx_def* %call24.i1105, i64 0, i32 0
  %bf.load.i1127 = load i32* %468, align 8
  %bf.clear.i1128 = and i32 %bf.load.i1127, 65535
  %cmp28.i = icmp eq i32 %bf.clear.i1128, 54
  br i1 %cmp28.i, label %land.lhs.true29.i, label %if.end45.i

land.lhs.true29.i:                                ; preds = %land.lhs.true27.i
  %rtwint.i = getelementptr inbounds %struct.rtx_def* %call24.i1105, i64 0, i32 1, i64 0, i32 0
  %469 = load i64* %rtwint.i, align 8, !tbaa !7
  %call30.i1129 = call i64 @strlen(i8* %retval.0.i.i1125) #5
  %add.i1130 = add i64 %call30.i1129, 1
  %cmp31.i = icmp ugt i64 %469, %add.i1130
  br i1 %cmp31.i, label %if.end45.i, label %land.lhs.true32.i

land.lhs.true32.i:                                ; preds = %land.lhs.true29.i
  %call36.i1131 = call i32 @can_store_by_pieces(i64 %469, %struct.rtx_def* (i8*, i64, i32)* @builtin_memcpy_read_str, i8* %retval.0.i.i1125, i32 %call10.i1094) #5
  %tobool37.i = icmp eq i32 %call36.i1131, 0
  br i1 %tobool37.i, label %if.end45.i, label %if.then38.i

if.then38.i:                                      ; preds = %land.lhs.true32.i
  %470 = load i64* %rtwint.i, align 8, !tbaa !7
  call void @store_by_pieces(%struct.rtx_def* %call23.i1104, i64 %470, %struct.rtx_def* (i8*, i64, i32)* @builtin_memcpy_read_str, i8* %retval.0.i.i1125, i32 %call10.i1094) #5
  %arrayidx43.i = getelementptr inbounds %struct.rtx_def* %call23.i1104, i64 0, i32 1, i64 0
  %rtx.i1132 = bitcast %union.rtunion_def* %arrayidx43.i to %struct.rtx_def**
  %471 = load %struct.rtx_def** %rtx.i1132, align 8, !tbaa !5
  %call44.i = call %struct.rtx_def* @force_operand(%struct.rtx_def* %471, %struct.rtx_def* null) #5
  br label %expand_builtin_memcpy.exit

if.end45.i:                                       ; preds = %land.lhs.true32.i, %land.lhs.true29.i, %land.lhs.true27.i, %c_getstr.exit.i1126, %lor.lhs.false.i.i1120, %if.else.i.i1115, %if.end22.i1108
  %call46.i1133 = call fastcc %struct.rtx_def* @get_memory_rtx(%union.tree_node* %453) #5
  call void @set_mem_align(%struct.rtx_def* %call46.i1133, i32 %call9.i1093) #5
  %call47.i1134 = call %struct.rtx_def* @emit_block_move(%struct.rtx_def* %call23.i1104, %struct.rtx_def* %call46.i1133, %struct.rtx_def* %call24.i1105) #5
  %cmp48.i = icmp eq %struct.rtx_def* %call47.i1134, null
  br i1 %cmp48.i, label %if.then49.i1135, label %return

if.then49.i1135:                                  ; preds = %if.end45.i
  %arrayidx51.i = getelementptr inbounds %struct.rtx_def* %call23.i1104, i64 0, i32 1, i64 0
  %rtx52.i = bitcast %union.rtunion_def* %arrayidx51.i to %struct.rtx_def**
  %472 = load %struct.rtx_def** %rtx52.i, align 8, !tbaa !5
  %call53.i = call %struct.rtx_def* @force_operand(%struct.rtx_def* %472, %struct.rtx_def* null) #5
  br label %expand_builtin_memcpy.exit

expand_builtin_memcpy.exit:                       ; preds = %if.then16.i, %if.then38.i, %if.then49.i1135
  %retval.0.i1136 = phi %struct.rtx_def* [ %call18.i1102, %if.then16.i ], [ %call44.i, %if.then38.i ], [ %call53.i, %if.then49.i1135 ]
  %tobool217 = icmp eq %struct.rtx_def* %retval.0.i1136, null
  br i1 %tobool217, label %sw.epilog320, label %return

sw.bb220:                                         ; preds = %if.end14
  %call221 = call fastcc %struct.rtx_def* @expand_builtin_memset(%union.tree_node* %exp, %struct.rtx_def* %target, i32 %mode)
  %tobool222 = icmp eq %struct.rtx_def* %call221, null
  br i1 %tobool222, label %sw.epilog320, label %return

sw.bb225:                                         ; preds = %if.end14
  %call.i1139 = call i32 (%union.tree_node*, ...)* @validate_arglist(%union.tree_node* %4, i32 13, i32 6, i32 5) #5
  %tobool.i1140 = icmp eq i32 %call.i1139, 0
  br i1 %tobool.i1140, label %sw.epilog320, label %expand_builtin_bzero.exit

expand_builtin_bzero.exit:                        ; preds = %sw.bb225
  %value.i1141 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 2
  %473 = bitcast i32* %value.i1141 to %union.tree_node**
  %474 = load %union.tree_node** %473, align 8, !tbaa !26
  %chain.i1142 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0
  %475 = load %union.tree_node** %chain.i1142, align 8, !tbaa !28
  %value3.i = getelementptr inbounds %union.tree_node* %475, i64 0, i32 0, i32 2
  %476 = bitcast i32* %value3.i to %union.tree_node**
  %477 = load %union.tree_node** %476, align 8, !tbaa !26
  %478 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !5
  %call4.i = call %union.tree_node* @convert(%union.tree_node* %478, %union.tree_node* %477) #5
  %call5.i1143 = call %union.tree_node* @build_tree_list(%union.tree_node* null, %union.tree_node* %call4.i) #5
  %479 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8, !tbaa !5
  %call6.i1144 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %479, %union.tree_node* %call5.i1143) #5
  %call7.i1145 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %474, %union.tree_node* %call6.i1144) #5
  store %union.tree_node* %call7.i1145, %union.tree_node** %3, align 8, !tbaa !5
  %480 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !5
  %call11.i1146 = call fastcc %struct.rtx_def* @expand_builtin_memset(%union.tree_node* %exp, %struct.rtx_def* %480, i32 0) #5
  store %union.tree_node* %4, %union.tree_node** %3, align 8, !tbaa !5
  %tobool227 = icmp eq %struct.rtx_def* %call11.i1146, null
  br i1 %tobool227, label %sw.epilog320, label %return

sw.bb230:                                         ; preds = %if.end14
  %call.i1152 = call i32 (%union.tree_node*, ...)* @validate_arglist(%union.tree_node* %4, i32 13, i32 13, i32 5) #5
  %tobool.i1153 = icmp eq i32 %call.i1152, 0
  br i1 %tobool.i1153, label %sw.epilog320, label %if.end.i1159

if.end.i1159:                                     ; preds = %sw.bb230
  %value.i1154 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 2
  %481 = bitcast i32* %value.i1154 to %union.tree_node**
  %482 = load %union.tree_node** %481, align 8, !tbaa !26
  %chain.i1155 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0
  %483 = load %union.tree_node** %chain.i1155, align 8, !tbaa !28
  %value3.i1156 = getelementptr inbounds %union.tree_node* %483, i64 0, i32 0, i32 2
  %484 = bitcast i32* %value3.i1156 to %union.tree_node**
  %485 = load %union.tree_node** %484, align 8, !tbaa !26
  %486 = bitcast %union.tree_node** %offset_node.i.i1149 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %486) #5
  %call.i.i1157 = call %union.tree_node* @string_constant(%union.tree_node* %482, %union.tree_node** %offset_node.i.i1149) #5
  %cmp.i.i1158 = icmp eq %union.tree_node* %call.i.i1157, null
  br i1 %cmp.i.i1158, label %c_getstr.exit.i1177, label %if.end.i.i1161

if.end.i.i1161:                                   ; preds = %if.end.i1159
  %487 = load %union.tree_node** %offset_node.i.i1149, align 8, !tbaa !5
  %cmp1.i.i1160 = icmp eq %union.tree_node* %487, null
  br i1 %cmp1.i.i1160, label %if.then2.i.i1163, label %if.else.i.i1166

if.then2.i.i1163:                                 ; preds = %if.end.i.i1161
  %pointer.i.i1162 = getelementptr inbounds %union.tree_node* %call.i.i1157, i64 0, i32 0, i32 4
  %488 = load %union.tree_node** %pointer.i.i1162, align 8
  %489 = bitcast %union.tree_node* %488 to i8*
  br label %c_getstr.exit.i1177

if.else.i.i1166:                                  ; preds = %if.end.i.i1161
  %call3.i.i1164 = call i32 @host_integerp(%union.tree_node* %487, i32 1) #5
  %tobool.i.i1165 = icmp eq i32 %call3.i.i1164, 0
  br i1 %tobool.i.i1165, label %c_getstr.exit.i1177, label %lor.lhs.false.i.i1171

lor.lhs.false.i.i1171:                            ; preds = %if.else.i.i1166
  %490 = load %union.tree_node** %offset_node.i.i1149, align 8, !tbaa !5
  %491 = getelementptr inbounds %union.tree_node* %call.i.i1157, i64 0, i32 0, i32 2
  %492 = load i32* %491, align 4, !tbaa !48
  %sub.i.i1167 = add nsw i32 %492, -1
  %conv.i.i1168 = sext i32 %sub.i.i1167 to i64
  %call5.i.i1169 = call i32 @compare_tree_int(%union.tree_node* %490, i64 %conv.i.i1168) #5
  %cmp6.i.i1170 = icmp sgt i32 %call5.i.i1169, 0
  br i1 %cmp6.i.i1170, label %c_getstr.exit.i1177, label %if.end10.i.i1175

if.end10.i.i1175:                                 ; preds = %lor.lhs.false.i.i1171
  %pointer12.i.i1172 = getelementptr inbounds %union.tree_node* %call.i.i1157, i64 0, i32 0, i32 4
  %493 = load %union.tree_node** %pointer12.i.i1172, align 8
  %494 = bitcast %union.tree_node* %493 to i8*
  %495 = load %union.tree_node** %offset_node.i.i1149, align 8, !tbaa !5
  %call13.i.i1173 = call i64 @tree_low_cst(%union.tree_node* %495, i32 1) #5
  %add.ptr.i.i1174 = getelementptr inbounds i8* %494, i64 %call13.i.i1173
  br label %c_getstr.exit.i1177

c_getstr.exit.i1177:                              ; preds = %if.end10.i.i1175, %lor.lhs.false.i.i1171, %if.else.i.i1166, %if.then2.i.i1163, %if.end.i1159
  %retval.0.i.i1176 = phi i8* [ %489, %if.then2.i.i1163 ], [ %add.ptr.i.i1174, %if.end10.i.i1175 ], [ null, %if.end.i1159 ], [ null, %if.else.i.i1166 ], [ null, %lor.lhs.false.i.i1171 ]
  call void @llvm.lifetime.end(i64 8, i8* %486) #5
  %496 = bitcast %union.tree_node** %offset_node.i135.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %496) #5
  %call.i136.i = call %union.tree_node* @string_constant(%union.tree_node* %485, %union.tree_node** %offset_node.i135.i) #5
  %cmp.i137.i = icmp eq %union.tree_node* %call.i136.i, null
  br i1 %cmp.i137.i, label %c_getstr.exit155.thread.i, label %if.end.i139.i

if.end.i139.i:                                    ; preds = %c_getstr.exit.i1177
  %497 = load %union.tree_node** %offset_node.i135.i, align 8, !tbaa !5
  %cmp1.i138.i = icmp eq %union.tree_node* %497, null
  br i1 %cmp1.i138.i, label %if.then2.i141.i, label %if.else.i144.i

if.then2.i141.i:                                  ; preds = %if.end.i139.i
  %pointer.i140.i = getelementptr inbounds %union.tree_node* %call.i136.i, i64 0, i32 0, i32 4
  %498 = load %union.tree_node** %pointer.i140.i, align 8
  %499 = bitcast %union.tree_node* %498 to i8*
  br label %c_getstr.exit155.i

if.else.i144.i:                                   ; preds = %if.end.i139.i
  %call3.i142.i = call i32 @host_integerp(%union.tree_node* %497, i32 1) #5
  %tobool.i143.i = icmp eq i32 %call3.i142.i, 0
  br i1 %tobool.i143.i, label %c_getstr.exit155.thread.i, label %lor.lhs.false.i149.i

lor.lhs.false.i149.i:                             ; preds = %if.else.i144.i
  %500 = load %union.tree_node** %offset_node.i135.i, align 8, !tbaa !5
  %501 = getelementptr inbounds %union.tree_node* %call.i136.i, i64 0, i32 0, i32 2
  %502 = load i32* %501, align 4, !tbaa !48
  %sub.i145.i = add nsw i32 %502, -1
  %conv.i146.i = sext i32 %sub.i145.i to i64
  %call5.i147.i = call i32 @compare_tree_int(%union.tree_node* %500, i64 %conv.i146.i) #5
  %cmp6.i148.i = icmp sgt i32 %call5.i147.i, 0
  br i1 %cmp6.i148.i, label %c_getstr.exit155.thread.i, label %if.end10.i153.i

if.end10.i153.i:                                  ; preds = %lor.lhs.false.i149.i
  %pointer12.i150.i = getelementptr inbounds %union.tree_node* %call.i136.i, i64 0, i32 0, i32 4
  %503 = load %union.tree_node** %pointer12.i150.i, align 8
  %504 = bitcast %union.tree_node* %503 to i8*
  %505 = load %union.tree_node** %offset_node.i135.i, align 8, !tbaa !5
  %call13.i151.i = call i64 @tree_low_cst(%union.tree_node* %505, i32 1) #5
  %add.ptr.i152.i = getelementptr inbounds i8* %504, i64 %call13.i151.i
  br label %c_getstr.exit155.i

c_getstr.exit155.thread.i:                        ; preds = %lor.lhs.false.i149.i, %if.else.i144.i, %c_getstr.exit.i1177
  call void @llvm.lifetime.end(i64 8, i8* %496) #5
  %tobool6157.i = icmp eq i8* %retval.0.i.i1176, null
  br i1 %tobool6157.i, label %if.end39.i, label %land.lhs.true17.i

c_getstr.exit155.i:                               ; preds = %if.end10.i153.i, %if.then2.i141.i
  %retval.0.i154.i = phi i8* [ %499, %if.then2.i141.i ], [ %add.ptr.i152.i, %if.end10.i153.i ]
  call void @llvm.lifetime.end(i64 8, i8* %496) #5
  %tobool6.i1178 = icmp ne i8* %retval.0.i.i1176, null
  %tobool7.i = icmp ne i8* %retval.0.i154.i, null
  %or.cond.i1179 = and i1 %tobool6.i1178, %tobool7.i
  br i1 %or.cond.i1179, label %if.then8.i1182, label %if.end15.i1183

if.then8.i1182:                                   ; preds = %c_getstr.exit155.i
  %call9.i1180 = call i32 @strcmp(i8* %retval.0.i.i1176, i8* %retval.0.i154.i) #5
  %cmp.i1181 = icmp slt i32 %call9.i1180, 0
  br i1 %cmp.i1181, label %cond.true.i, label %cond.false.i

cond.true.i:                                      ; preds = %if.then8.i1182
  %506 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !tbaa !5
  br label %expand_builtin_strcmp.exit

cond.false.i:                                     ; preds = %if.then8.i1182
  %cmp10.i = icmp sgt i32 %call9.i1180, 0
  %507 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !5
  %508 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !5
  %cond.i = select i1 %cmp10.i, %struct.rtx_def* %507, %struct.rtx_def* %508
  br label %expand_builtin_strcmp.exit

if.end15.i1183:                                   ; preds = %c_getstr.exit155.i
  br i1 %tobool6.i1178, label %land.lhs.true17.i, label %lor.lhs.false.i1185

land.lhs.true17.i:                                ; preds = %if.end15.i1183, %c_getstr.exit155.thread.i
  %retval.0.i154160166.i = phi i8* [ null, %c_getstr.exit155.thread.i ], [ %retval.0.i154.i, %if.end15.i1183 ]
  %tobool7162164.i = phi i1 [ false, %c_getstr.exit155.thread.i ], [ %tobool7.i, %if.end15.i1183 ]
  %509 = load i8* %retval.0.i.i1176, align 1, !tbaa !9
  %cmp18.i1184 = icmp eq i8 %509, 0
  br i1 %cmp18.i1184, label %if.then25.i, label %lor.lhs.false.i1185

lor.lhs.false.i1185:                              ; preds = %land.lhs.true17.i, %if.end15.i1183
  %retval.0.i154160165.i = phi i8* [ %retval.0.i154160166.i, %land.lhs.true17.i ], [ %retval.0.i154.i, %if.end15.i1183 ]
  %tobool7162163.i = phi i1 [ %tobool7162164.i, %land.lhs.true17.i ], [ %tobool7.i, %if.end15.i1183 ]
  br i1 %tobool7162163.i, label %land.lhs.true21.i, label %if.end39.i

land.lhs.true21.i:                                ; preds = %lor.lhs.false.i1185
  %510 = load i8* %retval.0.i154160165.i, align 1, !tbaa !9
  %cmp23.i = icmp eq i8 %510, 0
  br i1 %cmp23.i, label %if.then25.i, label %if.end39.i

if.then25.i:                                      ; preds = %land.lhs.true21.i, %land.lhs.true17.i
  %511 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 2), align 8, !tbaa !5
  %call26.i = call %union.tree_node* @build_qualified_type(%union.tree_node* %511, i32 1) #5
  %call27.i = call %union.tree_node* @build_pointer_type(%union.tree_node* %call26.i) #5
  %512 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !5
  %call28.i1186 = call %union.tree_node* @build1(i32 115, %union.tree_node* %call27.i, %union.tree_node* %482) #5
  %call29.i1187 = call %union.tree_node* @build1(i32 41, %union.tree_node* %call26.i, %union.tree_node* %call28.i1186) #5
  %call30.i1188 = call %union.tree_node* @build1(i32 114, %union.tree_node* %512, %union.tree_node* %call29.i1187) #5
  %call31.i1189 = call %union.tree_node* @fold(%union.tree_node* %call30.i1188) #5
  %513 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !5
  %call32.i1190 = call %union.tree_node* @build1(i32 115, %union.tree_node* %call27.i, %union.tree_node* %485) #5
  %call33.i1191 = call %union.tree_node* @build1(i32 41, %union.tree_node* %call26.i, %union.tree_node* %call32.i1190) #5
  %call34.i1192 = call %union.tree_node* @build1(i32 114, %union.tree_node* %513, %union.tree_node* %call33.i1191) #5
  %call35.i1193 = call %union.tree_node* @fold(%union.tree_node* %call34.i1192) #5
  %514 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !5
  %call36.i1194 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 60, %union.tree_node* %514, %union.tree_node* %call31.i1189, %union.tree_node* %call35.i1193) #5
  %call37.i1195 = call %union.tree_node* @fold(%union.tree_node* %call36.i1194) #5
  %call38.i1196 = call %struct.rtx_def* @expand_expr(%union.tree_node* %call37.i1195, %struct.rtx_def* %target, i32 %mode, i32 0) #5
  br label %expand_builtin_strcmp.exit

if.end39.i:                                       ; preds = %land.lhs.true21.i, %lor.lhs.false.i1185, %c_getstr.exit155.thread.i
  %call40.i = call fastcc %union.tree_node* @c_strlen(%union.tree_node* %482) #5
  %call41.i1197 = call fastcc %union.tree_node* @c_strlen(%union.tree_node* %485) #5
  %tobool42.i = icmp eq %union.tree_node* %call40.i, null
  br i1 %tobool42.i, label %if.end46.i, label %if.then43.i

if.then43.i:                                      ; preds = %if.end39.i
  %call44.i1198 = call %union.tree_node* @size_int_wide(i64 1, i32 1) #5
  %call45.i = call %union.tree_node* @size_binop(i32 59, %union.tree_node* %call44.i1198, %union.tree_node* %call40.i) #5
  br label %if.end46.i

if.end46.i:                                       ; preds = %if.then43.i, %if.end39.i
  %len.0.i = phi %union.tree_node* [ %call45.i, %if.then43.i ], [ null, %if.end39.i ]
  %tobool47.i = icmp eq %union.tree_node* %call41.i1197, null
  br i1 %tobool47.i, label %if.end51.i1202, label %if.then48.i1200

if.then48.i1200:                                  ; preds = %if.end46.i
  %call49.i = call %union.tree_node* @size_int_wide(i64 1, i32 1) #5
  %call50.i1199 = call %union.tree_node* @size_binop(i32 59, %union.tree_node* %call49.i, %union.tree_node* %call41.i1197) #5
  br label %if.end51.i1202

if.end51.i1202:                                   ; preds = %if.then48.i1200, %if.end46.i
  %len2.0.i = phi %union.tree_node* [ %call50.i1199, %if.then48.i1200 ], [ null, %if.end46.i ]
  %tobool52.i1201 = icmp eq %union.tree_node* %len.0.i, null
  br i1 %tobool52.i1201, label %if.then57.i, label %lor.lhs.false53.i

lor.lhs.false53.i:                                ; preds = %if.end51.i1202
  %code.i1203 = getelementptr inbounds %union.tree_node* %len.0.i, i64 0, i32 0, i32 0, i32 2
  %bf.load.i1204 = load i32* %code.i1203, align 8
  %bf.clear.i1205 = and i32 %bf.load.i1204, 255
  %cmp55.i = icmp eq i32 %bf.clear.i1205, 25
  br i1 %cmp55.i, label %if.else70.i, label %if.then57.i

if.then57.i:                                      ; preds = %lor.lhs.false53.i, %if.end51.i1202
  %tobool58.i1206 = icmp eq %union.tree_node* %len2.0.i, null
  br i1 %tobool58.i1206, label %if.else.i1208, label %land.lhs.true59.i

land.lhs.true59.i:                                ; preds = %if.then57.i
  %side_effects_flag.i = getelementptr inbounds %union.tree_node* %len2.0.i, i64 0, i32 0, i32 0, i32 2
  %bf.load61.i = load i32* %side_effects_flag.i, align 8
  %bf.clear62.i = and i32 %bf.load61.i, 256
  %tobool63.i1207 = icmp eq i32 %bf.clear62.i, 0
  %tobool52.not.i = xor i1 %tobool52.i1201, true
  %brmerge.i = or i1 %tobool63.i1207, %tobool52.not.i
  %len2.0.mux.i = select i1 %tobool63.i1207, %union.tree_node* %len2.0.i, %union.tree_node* %len.0.i
  br i1 %brmerge.i, label %if.end84.i, label %sw.epilog320

if.else.i1208:                                    ; preds = %if.then57.i
  br i1 %tobool52.i1201, label %sw.epilog320, label %if.end84.i

if.else70.i:                                      ; preds = %lor.lhs.false53.i
  %tobool71.i = icmp eq %union.tree_node* %len2.0.i, null
  br i1 %tobool71.i, label %if.end84.i, label %land.lhs.true72.i

land.lhs.true72.i:                                ; preds = %if.else70.i
  %code74.i = getelementptr inbounds %union.tree_node* %len2.0.i, i64 0, i32 0, i32 0, i32 2
  %bf.load75.i = load i32* %code74.i, align 8
  %bf.clear76.i = and i32 %bf.load75.i, 255
  %cmp77.i = icmp eq i32 %bf.clear76.i, 25
  br i1 %cmp77.i, label %land.lhs.true79.i, label %if.end84.i

land.lhs.true79.i:                                ; preds = %land.lhs.true72.i
  %call80.i = call i32 @tree_int_cst_lt(%union.tree_node* %len2.0.i, %union.tree_node* %len.0.i) #5
  %tobool81.i = icmp eq i32 %call80.i, 0
  %len.0.len2.0.i = select i1 %tobool81.i, %union.tree_node* %len.0.i, %union.tree_node* %len2.0.i
  br label %if.end84.i

if.end84.i:                                       ; preds = %land.lhs.true79.i, %land.lhs.true72.i, %if.else70.i, %if.else.i1208, %land.lhs.true59.i
  %len.1.i = phi %union.tree_node* [ %len.0.i, %if.else.i1208 ], [ %len.0.i, %land.lhs.true72.i ], [ %len.0.i, %if.else70.i ], [ %len2.0.mux.i, %land.lhs.true59.i ], [ %len.0.len2.0.i, %land.lhs.true79.i ]
  %side_effects_flag86.i = getelementptr inbounds %union.tree_node* %len.1.i, i64 0, i32 0, i32 0, i32 2
  %bf.load87.i = load i32* %side_effects_flag86.i, align 8
  %bf.clear89.i = and i32 %bf.load87.i, 256
  %tobool90.i = icmp eq i32 %bf.clear89.i, 0
  br i1 %tobool90.i, label %if.end92.i, label %sw.epilog320

if.end92.i:                                       ; preds = %if.end84.i
  %515 = load %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*]* @built_in_decls, i64 0, i64 23), align 8, !tbaa !5
  %tobool93.i = icmp eq %union.tree_node* %515, null
  br i1 %tobool93.i, label %sw.epilog320, label %if.end95.i1219

if.end95.i1219:                                   ; preds = %if.end92.i
  %call96.i1209 = call %union.tree_node* @build_tree_list(%union.tree_node* null, %union.tree_node* %len.1.i) #5
  %call97.i = call %union.tree_node* @chainon(%union.tree_node* %4, %union.tree_node* %call96.i1209) #5
  %type.i.i1210 = getelementptr inbounds %union.tree_node* %515, i64 0, i32 0, i32 0, i32 1
  %516 = load %union.tree_node** %type.i.i1210, align 8, !tbaa !15
  %call.i156.i = call %union.tree_node* @build_pointer_type(%union.tree_node* %516) #5
  %call1.i.i1211 = call %union.tree_node* @build1(i32 121, %union.tree_node* %call.i156.i, %union.tree_node* %515) #5
  %517 = load %union.tree_node** %type.i.i1210, align 8, !tbaa !15
  %type5.i.i1212 = getelementptr inbounds %union.tree_node* %517, i64 0, i32 0, i32 0, i32 1
  %518 = load %union.tree_node** %type5.i.i1212, align 8, !tbaa !15
  %call6.i.i1213 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 53, %union.tree_node* %518, %union.tree_node* %call1.i.i1211, %union.tree_node* %4) #5
  %side_effects_flag.i.i1214 = getelementptr inbounds %union.tree_node* %call6.i.i1213, i64 0, i32 0, i32 0, i32 2
  %bf.load.i.i1215 = load i32* %side_effects_flag.i.i1214, align 8
  %bf.set.i.i1216 = or i32 %bf.load.i.i1215, 256
  store i32 %bf.set.i.i1216, i32* %side_effects_flag.i.i1214, align 8
  %call8.i.i1217 = call %union.tree_node* @fold(%union.tree_node* %call6.i.i1213) #5
  %call99.i1218 = call %struct.rtx_def* @expand_expr(%union.tree_node* %call8.i.i1217, %struct.rtx_def* %target, i32 %mode, i32 0) #5
  br label %expand_builtin_strcmp.exit

expand_builtin_strcmp.exit:                       ; preds = %cond.true.i, %cond.false.i, %if.then25.i, %if.end95.i1219
  %retval.0.i1220 = phi %struct.rtx_def* [ %call38.i1196, %if.then25.i ], [ %call99.i1218, %if.end95.i1219 ], [ %506, %cond.true.i ], [ %cond.i, %cond.false.i ]
  %tobool232 = icmp eq %struct.rtx_def* %retval.0.i1220, null
  br i1 %tobool232, label %sw.epilog320, label %return

sw.bb235:                                         ; preds = %if.end14
  %call.i1224 = call i32 (%union.tree_node*, ...)* @validate_arglist(%union.tree_node* %4, i32 13, i32 13, i32 6, i32 5) #5
  %tobool.i1225 = icmp eq i32 %call.i1224, 0
  br i1 %tobool.i1225, label %sw.epilog320, label %if.end.i1231

if.end.i1231:                                     ; preds = %sw.bb235
  %value.i1226 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 2
  %519 = bitcast i32* %value.i1226 to %union.tree_node**
  %520 = load %union.tree_node** %519, align 8, !tbaa !26
  %chain.i1227 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0
  %521 = load %union.tree_node** %chain.i1227, align 8, !tbaa !28
  %value3.i1228 = getelementptr inbounds %union.tree_node* %521, i64 0, i32 0, i32 2
  %522 = bitcast i32* %value3.i1228 to %union.tree_node**
  %523 = load %union.tree_node** %522, align 8, !tbaa !26
  %chain7.i = getelementptr inbounds %union.tree_node* %521, i64 0, i32 0, i32 0, i32 0
  %524 = load %union.tree_node** %chain7.i, align 8, !tbaa !28
  %value9.i = getelementptr inbounds %union.tree_node* %524, i64 0, i32 0, i32 2
  %525 = bitcast i32* %value9.i to %union.tree_node**
  %526 = load %union.tree_node** %525, align 8, !tbaa !26
  %call10.i1229 = call i32 @host_integerp(%union.tree_node* %526, i32 1) #5
  %tobool11.i1230 = icmp eq i32 %call10.i1229, 0
  br i1 %tobool11.i1230, label %if.end16.i1239, label %land.lhs.true.i1234

land.lhs.true.i1234:                              ; preds = %if.end.i1231
  %call12.i1232 = call i64 @tree_low_cst(%union.tree_node* %526, i32 1) #5
  %cmp.i1233 = icmp eq i64 %call12.i1232, 0
  br i1 %cmp.i1233, label %if.then13.i, label %if.end16.i1239

if.then13.i:                                      ; preds = %land.lhs.true.i1234
  %527 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !5
  %call14.i1235 = call %struct.rtx_def* @expand_expr(%union.tree_node* %520, %struct.rtx_def* %527, i32 0, i32 0) #5
  %528 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !5
  %call15.i1236 = call %struct.rtx_def* @expand_expr(%union.tree_node* %523, %struct.rtx_def* %528, i32 0, i32 0) #5
  %529 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !5
  br label %expand_builtin_strncmp.exit

if.end16.i1239:                                   ; preds = %land.lhs.true.i1234, %if.end.i1231
  %530 = bitcast %union.tree_node** %offset_node.i.i1221 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %530) #5
  %call.i.i1237 = call %union.tree_node* @string_constant(%union.tree_node* %520, %union.tree_node** %offset_node.i.i1221) #5
  %cmp.i.i1238 = icmp eq %union.tree_node* %call.i.i1237, null
  br i1 %cmp.i.i1238, label %c_getstr.exit.i1257, label %if.end.i.i1241

if.end.i.i1241:                                   ; preds = %if.end16.i1239
  %531 = load %union.tree_node** %offset_node.i.i1221, align 8, !tbaa !5
  %cmp1.i.i1240 = icmp eq %union.tree_node* %531, null
  br i1 %cmp1.i.i1240, label %if.then2.i.i1243, label %if.else.i.i1246

if.then2.i.i1243:                                 ; preds = %if.end.i.i1241
  %pointer.i.i1242 = getelementptr inbounds %union.tree_node* %call.i.i1237, i64 0, i32 0, i32 4
  %532 = load %union.tree_node** %pointer.i.i1242, align 8
  %533 = bitcast %union.tree_node* %532 to i8*
  br label %c_getstr.exit.i1257

if.else.i.i1246:                                  ; preds = %if.end.i.i1241
  %call3.i.i1244 = call i32 @host_integerp(%union.tree_node* %531, i32 1) #5
  %tobool.i.i1245 = icmp eq i32 %call3.i.i1244, 0
  br i1 %tobool.i.i1245, label %c_getstr.exit.i1257, label %lor.lhs.false.i.i1251

lor.lhs.false.i.i1251:                            ; preds = %if.else.i.i1246
  %534 = load %union.tree_node** %offset_node.i.i1221, align 8, !tbaa !5
  %535 = getelementptr inbounds %union.tree_node* %call.i.i1237, i64 0, i32 0, i32 2
  %536 = load i32* %535, align 4, !tbaa !48
  %sub.i.i1247 = add nsw i32 %536, -1
  %conv.i.i1248 = sext i32 %sub.i.i1247 to i64
  %call5.i.i1249 = call i32 @compare_tree_int(%union.tree_node* %534, i64 %conv.i.i1248) #5
  %cmp6.i.i1250 = icmp sgt i32 %call5.i.i1249, 0
  br i1 %cmp6.i.i1250, label %c_getstr.exit.i1257, label %if.end10.i.i1255

if.end10.i.i1255:                                 ; preds = %lor.lhs.false.i.i1251
  %pointer12.i.i1252 = getelementptr inbounds %union.tree_node* %call.i.i1237, i64 0, i32 0, i32 4
  %537 = load %union.tree_node** %pointer12.i.i1252, align 8
  %538 = bitcast %union.tree_node* %537 to i8*
  %539 = load %union.tree_node** %offset_node.i.i1221, align 8, !tbaa !5
  %call13.i.i1253 = call i64 @tree_low_cst(%union.tree_node* %539, i32 1) #5
  %add.ptr.i.i1254 = getelementptr inbounds i8* %538, i64 %call13.i.i1253
  br label %c_getstr.exit.i1257

c_getstr.exit.i1257:                              ; preds = %if.end10.i.i1255, %lor.lhs.false.i.i1251, %if.else.i.i1246, %if.then2.i.i1243, %if.end16.i1239
  %retval.0.i.i1256 = phi i8* [ %533, %if.then2.i.i1243 ], [ %add.ptr.i.i1254, %if.end10.i.i1255 ], [ null, %if.end16.i1239 ], [ null, %if.else.i.i1246 ], [ null, %lor.lhs.false.i.i1251 ]
  call void @llvm.lifetime.end(i64 8, i8* %530) #5
  %540 = bitcast %union.tree_node** %offset_node.i157.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %540) #5
  %call.i158.i = call %union.tree_node* @string_constant(%union.tree_node* %523, %union.tree_node** %offset_node.i157.i) #5
  %cmp.i159.i = icmp eq %union.tree_node* %call.i158.i, null
  br i1 %cmp.i159.i, label %c_getstr.exit177.i, label %if.end.i161.i

if.end.i161.i:                                    ; preds = %c_getstr.exit.i1257
  %541 = load %union.tree_node** %offset_node.i157.i, align 8, !tbaa !5
  %cmp1.i160.i = icmp eq %union.tree_node* %541, null
  br i1 %cmp1.i160.i, label %if.then2.i163.i, label %if.else.i166.i

if.then2.i163.i:                                  ; preds = %if.end.i161.i
  %pointer.i162.i = getelementptr inbounds %union.tree_node* %call.i158.i, i64 0, i32 0, i32 4
  %542 = load %union.tree_node** %pointer.i162.i, align 8
  %543 = bitcast %union.tree_node* %542 to i8*
  br label %c_getstr.exit177.i

if.else.i166.i:                                   ; preds = %if.end.i161.i
  %call3.i164.i = call i32 @host_integerp(%union.tree_node* %541, i32 1) #5
  %tobool.i165.i = icmp eq i32 %call3.i164.i, 0
  br i1 %tobool.i165.i, label %c_getstr.exit177.i, label %lor.lhs.false.i171.i

lor.lhs.false.i171.i:                             ; preds = %if.else.i166.i
  %544 = load %union.tree_node** %offset_node.i157.i, align 8, !tbaa !5
  %545 = getelementptr inbounds %union.tree_node* %call.i158.i, i64 0, i32 0, i32 2
  %546 = load i32* %545, align 4, !tbaa !48
  %sub.i167.i = add nsw i32 %546, -1
  %conv.i168.i = sext i32 %sub.i167.i to i64
  %call5.i169.i = call i32 @compare_tree_int(%union.tree_node* %544, i64 %conv.i168.i) #5
  %cmp6.i170.i = icmp sgt i32 %call5.i169.i, 0
  br i1 %cmp6.i170.i, label %c_getstr.exit177.i, label %if.end10.i175.i

if.end10.i175.i:                                  ; preds = %lor.lhs.false.i171.i
  %pointer12.i172.i = getelementptr inbounds %union.tree_node* %call.i158.i, i64 0, i32 0, i32 4
  %547 = load %union.tree_node** %pointer12.i172.i, align 8
  %548 = bitcast %union.tree_node* %547 to i8*
  %549 = load %union.tree_node** %offset_node.i157.i, align 8, !tbaa !5
  %call13.i173.i = call i64 @tree_low_cst(%union.tree_node* %549, i32 1) #5
  %add.ptr.i174.i = getelementptr inbounds i8* %548, i64 %call13.i173.i
  br label %c_getstr.exit177.i

c_getstr.exit177.i:                               ; preds = %if.end10.i175.i, %lor.lhs.false.i171.i, %if.else.i166.i, %if.then2.i163.i, %c_getstr.exit.i1257
  %retval.0.i176.i = phi i8* [ %543, %if.then2.i163.i ], [ %add.ptr.i174.i, %if.end10.i175.i ], [ null, %c_getstr.exit.i1257 ], [ null, %if.else.i166.i ], [ null, %lor.lhs.false.i171.i ]
  call void @llvm.lifetime.end(i64 8, i8* %540) #5
  %call19.i1258 = call i32 @host_integerp(%union.tree_node* %526, i32 1) #5
  %tobool20.i = icmp ne i32 %call19.i1258, 0
  %tobool22.i = icmp ne i8* %retval.0.i.i1256, null
  %or.cond.i1259 = and i1 %tobool20.i, %tobool22.i
  %tobool24.i1260 = icmp ne i8* %retval.0.i176.i, null
  %or.cond111.i = and i1 %or.cond.i1259, %tobool24.i1260
  br i1 %or.cond111.i, label %if.then25.i1264, label %if.end34.i1269

if.then25.i1264:                                  ; preds = %c_getstr.exit177.i
  %call26.i1261 = call i64 @tree_low_cst(%union.tree_node* %526, i32 1) #5
  %call27.i1262 = call i32 @strncmp(i8* %retval.0.i.i1256, i8* %retval.0.i176.i, i64 %call26.i1261) #5
  %cmp28.i1263 = icmp slt i32 %call27.i1262, 0
  br i1 %cmp28.i1263, label %cond.true.i1265, label %cond.false.i1267

cond.true.i1265:                                  ; preds = %if.then25.i1264
  %550 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !tbaa !5
  br label %expand_builtin_strncmp.exit

cond.false.i1267:                                 ; preds = %if.then25.i1264
  %cmp29.i = icmp sgt i32 %call27.i1262, 0
  %551 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !5
  %552 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !5
  %cond.i1266 = select i1 %cmp29.i, %struct.rtx_def* %551, %struct.rtx_def* %552
  br label %expand_builtin_strncmp.exit

if.end34.i1269:                                   ; preds = %c_getstr.exit177.i
  %call35.i1268 = call i32 @host_integerp(%union.tree_node* %526, i32 1) #5
  %tobool36.i = icmp eq i32 %call35.i1268, 0
  br i1 %tobool36.i, label %if.end67.i, label %land.lhs.true37.i

land.lhs.true37.i:                                ; preds = %if.end34.i1269
  %call38.i1270 = call i64 @tree_low_cst(%union.tree_node* %526, i32 1) #5
  %cmp39.i = icmp eq i64 %call38.i1270, 1
  br i1 %cmp39.i, label %if.then53.i1283, label %lor.lhs.false.i1272

lor.lhs.false.i1272:                              ; preds = %land.lhs.true37.i
  %call40.i1271 = call i64 @tree_low_cst(%union.tree_node* %526, i32 1) #5
  %cmp41.i = icmp sgt i64 %call40.i1271, 1
  br i1 %cmp41.i, label %land.lhs.true42.i, label %if.end67.i

land.lhs.true42.i:                                ; preds = %lor.lhs.false.i1272
  br i1 %tobool22.i, label %land.lhs.true44.i, label %lor.lhs.false47.i

land.lhs.true44.i:                                ; preds = %land.lhs.true42.i
  %553 = load i8* %retval.0.i.i1256, align 1, !tbaa !9
  %cmp45.i1273 = icmp eq i8 %553, 0
  br i1 %cmp45.i1273, label %if.then53.i1283, label %lor.lhs.false47.i

lor.lhs.false47.i:                                ; preds = %land.lhs.true44.i, %land.lhs.true42.i
  br i1 %tobool24.i1260, label %land.lhs.true49.i, label %if.end67.i

land.lhs.true49.i:                                ; preds = %lor.lhs.false47.i
  %554 = load i8* %retval.0.i176.i, align 1, !tbaa !9
  %cmp51.i = icmp eq i8 %554, 0
  br i1 %cmp51.i, label %if.then53.i1283, label %if.end67.i

if.then53.i1283:                                  ; preds = %land.lhs.true49.i, %land.lhs.true44.i, %land.lhs.true37.i
  %555 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 2), align 8, !tbaa !5
  %call54.i1274 = call %union.tree_node* @build_qualified_type(%union.tree_node* %555, i32 1) #5
  %call55.i1275 = call %union.tree_node* @build_pointer_type(%union.tree_node* %call54.i1274) #5
  %556 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !5
  %call56.i1276 = call %union.tree_node* @build1(i32 115, %union.tree_node* %call55.i1275, %union.tree_node* %520) #5
  %call57.i1277 = call %union.tree_node* @build1(i32 41, %union.tree_node* %call54.i1274, %union.tree_node* %call56.i1276) #5
  %call58.i1278 = call %union.tree_node* @build1(i32 114, %union.tree_node* %556, %union.tree_node* %call57.i1277) #5
  %call59.i = call %union.tree_node* @fold(%union.tree_node* %call58.i1278) #5
  %557 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !5
  %call60.i = call %union.tree_node* @build1(i32 115, %union.tree_node* %call55.i1275, %union.tree_node* %523) #5
  %call61.i1279 = call %union.tree_node* @build1(i32 41, %union.tree_node* %call54.i1274, %union.tree_node* %call60.i) #5
  %call62.i1280 = call %union.tree_node* @build1(i32 114, %union.tree_node* %557, %union.tree_node* %call61.i1279) #5
  %call63.i1281 = call %union.tree_node* @fold(%union.tree_node* %call62.i1280) #5
  %558 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !5
  %call64.i1282 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 60, %union.tree_node* %558, %union.tree_node* %call59.i, %union.tree_node* %call63.i1281) #5
  %call65.i = call %union.tree_node* @fold(%union.tree_node* %call64.i1282) #5
  %call66.i = call %struct.rtx_def* @expand_expr(%union.tree_node* %call65.i, %struct.rtx_def* %target, i32 %mode, i32 0) #5
  br label %expand_builtin_strncmp.exit

if.end67.i:                                       ; preds = %land.lhs.true49.i, %lor.lhs.false47.i, %lor.lhs.false.i1272, %if.end34.i1269
  br i1 %tobool22.i, label %if.then69.i, label %if.else.i1284

if.then69.i:                                      ; preds = %if.end67.i
  %call70.i = call fastcc %union.tree_node* @c_strlen(%union.tree_node* %520) #5
  br label %if.end75.i

if.else.i1284:                                    ; preds = %if.end67.i
  br i1 %tobool24.i1260, label %if.then72.i, label %land.lhs.true77.i

if.then72.i:                                      ; preds = %if.else.i1284
  %call73.i1285 = call fastcc %union.tree_node* @c_strlen(%union.tree_node* %523) #5
  br label %if.end75.i

if.end75.i:                                       ; preds = %if.then72.i, %if.then69.i
  %len.0.i1286 = phi %union.tree_node* [ %call70.i, %if.then69.i ], [ %call73.i1285, %if.then72.i ]
  %tobool76.i = icmp eq %union.tree_node* %len.0.i1286, null
  br i1 %tobool76.i, label %land.lhs.true77.i, label %if.end96.i

land.lhs.true77.i:                                ; preds = %if.end75.i, %if.else.i1284
  %side_effects_flag.i1287 = getelementptr inbounds %union.tree_node* %520, i64 0, i32 0, i32 0, i32 2
  %bf.load.i1288 = load i32* %side_effects_flag.i1287, align 8
  %bf.clear.i1289 = and i32 %bf.load.i1288, 256
  %tobool79.i = icmp eq i32 %bf.clear.i1289, 0
  br i1 %tobool79.i, label %if.end82.i, label %land.lhs.true84.i

if.end82.i:                                       ; preds = %land.lhs.true77.i
  %call81.i1290 = call fastcc %union.tree_node* @c_strlen(%union.tree_node* %520) #5
  %tobool83.i = icmp eq %union.tree_node* %call81.i1290, null
  br i1 %tobool83.i, label %land.lhs.true84.i, label %if.end96.i

land.lhs.true84.i:                                ; preds = %if.end82.i, %land.lhs.true77.i
  %side_effects_flag86.i1291 = getelementptr inbounds %union.tree_node* %523, i64 0, i32 0, i32 0, i32 2
  %bf.load87.i1292 = load i32* %side_effects_flag86.i1291, align 8
  %bf.clear89.i1293 = and i32 %bf.load87.i1292, 256
  %tobool90.i1294 = icmp eq i32 %bf.clear89.i1293, 0
  br i1 %tobool90.i1294, label %if.end93.i, label %sw.epilog320

if.end93.i:                                       ; preds = %land.lhs.true84.i
  %call92.i = call fastcc %union.tree_node* @c_strlen(%union.tree_node* %523) #5
  %tobool94.i = icmp eq %union.tree_node* %call92.i, null
  br i1 %tobool94.i, label %sw.epilog320, label %if.end96.i

if.end96.i:                                       ; preds = %if.end93.i, %if.end82.i, %if.end75.i
  %len.2186.i = phi %union.tree_node* [ %call92.i, %if.end93.i ], [ %call81.i1290, %if.end82.i ], [ %len.0.i1286, %if.end75.i ]
  %559 = load %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*]* @built_in_decls, i64 0, i64 23), align 8, !tbaa !5
  %tobool97.i = icmp eq %union.tree_node* %559, null
  br i1 %tobool97.i, label %sw.epilog320, label %if.end99.i

if.end99.i:                                       ; preds = %if.end96.i
  %call100.i1295 = call %union.tree_node* @size_int_wide(i64 1, i32 1) #5
  %call101.i = call %union.tree_node* @size_binop(i32 59, %union.tree_node* %len.2186.i, %union.tree_node* %call100.i1295) #5
  %call102.i = call %union.tree_node* @fold(%union.tree_node* %call101.i) #5
  %type.i1296 = getelementptr inbounds %union.tree_node* %call102.i, i64 0, i32 0, i32 0, i32 1
  %560 = load %union.tree_node** %type.i1296, align 8, !tbaa !15
  %call104.i = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 78, %union.tree_node* %560, %union.tree_node* %call102.i, %union.tree_node* %526) #5
  %call105.i = call %union.tree_node* @fold(%union.tree_node* %call104.i) #5
  %call106.i = call %union.tree_node* @build_tree_list(%union.tree_node* null, %union.tree_node* %call105.i) #5
  %call107.i = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %523, %union.tree_node* %call106.i) #5
  %call108.i = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %520, %union.tree_node* %call107.i) #5
  %type.i.i1297 = getelementptr inbounds %union.tree_node* %559, i64 0, i32 0, i32 0, i32 1
  %561 = load %union.tree_node** %type.i.i1297, align 8, !tbaa !15
  %call.i178.i = call %union.tree_node* @build_pointer_type(%union.tree_node* %561) #5
  %call1.i.i1298 = call %union.tree_node* @build1(i32 121, %union.tree_node* %call.i178.i, %union.tree_node* %559) #5
  %562 = load %union.tree_node** %type.i.i1297, align 8, !tbaa !15
  %type5.i.i1299 = getelementptr inbounds %union.tree_node* %562, i64 0, i32 0, i32 0, i32 1
  %563 = load %union.tree_node** %type5.i.i1299, align 8, !tbaa !15
  %call6.i.i1300 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 53, %union.tree_node* %563, %union.tree_node* %call1.i.i1298, %union.tree_node* %call108.i) #5
  %side_effects_flag.i.i1301 = getelementptr inbounds %union.tree_node* %call6.i.i1300, i64 0, i32 0, i32 0, i32 2
  %bf.load.i.i1302 = load i32* %side_effects_flag.i.i1301, align 8
  %bf.set.i.i1303 = or i32 %bf.load.i.i1302, 256
  store i32 %bf.set.i.i1303, i32* %side_effects_flag.i.i1301, align 8
  %call8.i.i1304 = call %union.tree_node* @fold(%union.tree_node* %call6.i.i1300) #5
  %call110.i = call %struct.rtx_def* @expand_expr(%union.tree_node* %call8.i.i1304, %struct.rtx_def* %target, i32 %mode, i32 0) #5
  br label %expand_builtin_strncmp.exit

expand_builtin_strncmp.exit:                      ; preds = %if.then13.i, %cond.true.i1265, %cond.false.i1267, %if.then53.i1283, %if.end99.i
  %retval.0.i1305 = phi %struct.rtx_def* [ %529, %if.then13.i ], [ %call66.i, %if.then53.i1283 ], [ %call110.i, %if.end99.i ], [ %550, %cond.true.i1265 ], [ %cond.i1266, %cond.false.i1267 ]
  %tobool237 = icmp eq %struct.rtx_def* %retval.0.i1305, null
  br i1 %tobool237, label %sw.epilog320, label %return

sw.bb240:                                         ; preds = %if.end14, %if.end14
  %call.i1307 = call i32 (%union.tree_node*, ...)* @validate_arglist(%union.tree_node* %4, i32 13, i32 13, i32 6, i32 5) #5
  %tobool.i1308 = icmp eq i32 %call.i1307, 0
  br i1 %tobool.i1308, label %sw.epilog320, label %if.end.i1315

if.end.i1315:                                     ; preds = %sw.bb240
  %value.i1309 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 2
  %564 = bitcast i32* %value.i1309 to %union.tree_node**
  %565 = load %union.tree_node** %564, align 8, !tbaa !26
  %chain.i1310 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0
  %566 = load %union.tree_node** %chain.i1310, align 8, !tbaa !28
  %value2.i1311 = getelementptr inbounds %union.tree_node* %566, i64 0, i32 0, i32 2
  %567 = bitcast i32* %value2.i1311 to %union.tree_node**
  %568 = load %union.tree_node** %567, align 8, !tbaa !26
  %chain6.i1312 = getelementptr inbounds %union.tree_node* %566, i64 0, i32 0, i32 0, i32 0
  %569 = load %union.tree_node** %chain6.i1312, align 8, !tbaa !28
  %value8.i1313 = getelementptr inbounds %union.tree_node* %569, i64 0, i32 0, i32 2
  %570 = bitcast i32* %value8.i1313 to %union.tree_node**
  %571 = load %union.tree_node** %570, align 8, !tbaa !26
  %call9.i1314 = call i32 @host_integerp(%union.tree_node* %571, i32 1) #5
  %tobool10.i = icmp eq i32 %call9.i1314, 0
  br i1 %tobool10.i, label %if.end15.i1324, label %land.lhs.true.i1318

land.lhs.true.i1318:                              ; preds = %if.end.i1315
  %call11.i1316 = call i64 @tree_low_cst(%union.tree_node* %571, i32 1) #5
  %cmp.i1317 = icmp eq i64 %call11.i1316, 0
  br i1 %cmp.i1317, label %if.then12.i1321, label %if.end15.i1324

if.then12.i1321:                                  ; preds = %land.lhs.true.i1318
  %572 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !5
  %call13.i1319 = call %struct.rtx_def* @expand_expr(%union.tree_node* %565, %struct.rtx_def* %572, i32 0, i32 0) #5
  %573 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !5
  %call14.i1320 = call %struct.rtx_def* @expand_expr(%union.tree_node* %568, %struct.rtx_def* %573, i32 0, i32 0) #5
  %574 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !5
  br label %expand_builtin_memcmp.exit

if.end15.i1324:                                   ; preds = %land.lhs.true.i1318, %if.end.i1315
  %575 = bitcast %union.tree_node** %offset_node.i.i1306 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %575) #5
  %call.i.i1322 = call %union.tree_node* @string_constant(%union.tree_node* %565, %union.tree_node** %offset_node.i.i1306) #5
  %cmp.i.i1323 = icmp eq %union.tree_node* %call.i.i1322, null
  br i1 %cmp.i.i1323, label %c_getstr.exit.i1342, label %if.end.i.i1326

if.end.i.i1326:                                   ; preds = %if.end15.i1324
  %576 = load %union.tree_node** %offset_node.i.i1306, align 8, !tbaa !5
  %cmp1.i.i1325 = icmp eq %union.tree_node* %576, null
  br i1 %cmp1.i.i1325, label %if.then2.i.i1328, label %if.else.i.i1331

if.then2.i.i1328:                                 ; preds = %if.end.i.i1326
  %pointer.i.i1327 = getelementptr inbounds %union.tree_node* %call.i.i1322, i64 0, i32 0, i32 4
  %577 = load %union.tree_node** %pointer.i.i1327, align 8
  %578 = bitcast %union.tree_node* %577 to i8*
  br label %c_getstr.exit.i1342

if.else.i.i1331:                                  ; preds = %if.end.i.i1326
  %call3.i.i1329 = call i32 @host_integerp(%union.tree_node* %576, i32 1) #5
  %tobool.i.i1330 = icmp eq i32 %call3.i.i1329, 0
  br i1 %tobool.i.i1330, label %c_getstr.exit.i1342, label %lor.lhs.false.i.i1336

lor.lhs.false.i.i1336:                            ; preds = %if.else.i.i1331
  %579 = load %union.tree_node** %offset_node.i.i1306, align 8, !tbaa !5
  %580 = getelementptr inbounds %union.tree_node* %call.i.i1322, i64 0, i32 0, i32 2
  %581 = load i32* %580, align 4, !tbaa !48
  %sub.i.i1332 = add nsw i32 %581, -1
  %conv.i.i1333 = sext i32 %sub.i.i1332 to i64
  %call5.i.i1334 = call i32 @compare_tree_int(%union.tree_node* %579, i64 %conv.i.i1333) #5
  %cmp6.i.i1335 = icmp sgt i32 %call5.i.i1334, 0
  br i1 %cmp6.i.i1335, label %c_getstr.exit.i1342, label %if.end10.i.i1340

if.end10.i.i1340:                                 ; preds = %lor.lhs.false.i.i1336
  %pointer12.i.i1337 = getelementptr inbounds %union.tree_node* %call.i.i1322, i64 0, i32 0, i32 4
  %582 = load %union.tree_node** %pointer12.i.i1337, align 8
  %583 = bitcast %union.tree_node* %582 to i8*
  %584 = load %union.tree_node** %offset_node.i.i1306, align 8, !tbaa !5
  %call13.i.i1338 = call i64 @tree_low_cst(%union.tree_node* %584, i32 1) #5
  %add.ptr.i.i1339 = getelementptr inbounds i8* %583, i64 %call13.i.i1338
  br label %c_getstr.exit.i1342

c_getstr.exit.i1342:                              ; preds = %if.end10.i.i1340, %lor.lhs.false.i.i1336, %if.else.i.i1331, %if.then2.i.i1328, %if.end15.i1324
  %retval.0.i.i1341 = phi i8* [ %578, %if.then2.i.i1328 ], [ %add.ptr.i.i1339, %if.end10.i.i1340 ], [ null, %if.end15.i1324 ], [ null, %if.else.i.i1331 ], [ null, %lor.lhs.false.i.i1336 ]
  call void @llvm.lifetime.end(i64 8, i8* %575) #5
  %585 = bitcast %union.tree_node** %offset_node.i202.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %585) #5
  %call.i203.i = call %union.tree_node* @string_constant(%union.tree_node* %568, %union.tree_node** %offset_node.i202.i) #5
  %cmp.i204.i = icmp eq %union.tree_node* %call.i203.i, null
  br i1 %cmp.i204.i, label %c_getstr.exit222.i, label %if.end.i206.i

if.end.i206.i:                                    ; preds = %c_getstr.exit.i1342
  %586 = load %union.tree_node** %offset_node.i202.i, align 8, !tbaa !5
  %cmp1.i205.i = icmp eq %union.tree_node* %586, null
  br i1 %cmp1.i205.i, label %if.then2.i208.i, label %if.else.i211.i

if.then2.i208.i:                                  ; preds = %if.end.i206.i
  %pointer.i207.i = getelementptr inbounds %union.tree_node* %call.i203.i, i64 0, i32 0, i32 4
  %587 = load %union.tree_node** %pointer.i207.i, align 8
  %588 = bitcast %union.tree_node* %587 to i8*
  br label %c_getstr.exit222.i

if.else.i211.i:                                   ; preds = %if.end.i206.i
  %call3.i209.i = call i32 @host_integerp(%union.tree_node* %586, i32 1) #5
  %tobool.i210.i = icmp eq i32 %call3.i209.i, 0
  br i1 %tobool.i210.i, label %c_getstr.exit222.i, label %lor.lhs.false.i216.i

lor.lhs.false.i216.i:                             ; preds = %if.else.i211.i
  %589 = load %union.tree_node** %offset_node.i202.i, align 8, !tbaa !5
  %590 = getelementptr inbounds %union.tree_node* %call.i203.i, i64 0, i32 0, i32 2
  %591 = load i32* %590, align 4, !tbaa !48
  %sub.i212.i = add nsw i32 %591, -1
  %conv.i213.i = sext i32 %sub.i212.i to i64
  %call5.i214.i = call i32 @compare_tree_int(%union.tree_node* %589, i64 %conv.i213.i) #5
  %cmp6.i215.i = icmp sgt i32 %call5.i214.i, 0
  br i1 %cmp6.i215.i, label %c_getstr.exit222.i, label %if.end10.i220.i

if.end10.i220.i:                                  ; preds = %lor.lhs.false.i216.i
  %pointer12.i217.i = getelementptr inbounds %union.tree_node* %call.i203.i, i64 0, i32 0, i32 4
  %592 = load %union.tree_node** %pointer12.i217.i, align 8
  %593 = bitcast %union.tree_node* %592 to i8*
  %594 = load %union.tree_node** %offset_node.i202.i, align 8, !tbaa !5
  %call13.i218.i = call i64 @tree_low_cst(%union.tree_node* %594, i32 1) #5
  %add.ptr.i219.i = getelementptr inbounds i8* %593, i64 %call13.i218.i
  br label %c_getstr.exit222.i

c_getstr.exit222.i:                               ; preds = %if.end10.i220.i, %lor.lhs.false.i216.i, %if.else.i211.i, %if.then2.i208.i, %c_getstr.exit.i1342
  %retval.0.i221.i = phi i8* [ %588, %if.then2.i208.i ], [ %add.ptr.i219.i, %if.end10.i220.i ], [ null, %c_getstr.exit.i1342 ], [ null, %if.else.i211.i ], [ null, %lor.lhs.false.i216.i ]
  call void @llvm.lifetime.end(i64 8, i8* %585) #5
  %call18.i1343 = call i32 @host_integerp(%union.tree_node* %571, i32 1) #5
  %tobool19.i = icmp ne i32 %call18.i1343, 0
  %tobool21.i = icmp ne i8* %retval.0.i.i1341, null
  %or.cond.i1344 = and i1 %tobool19.i, %tobool21.i
  %tobool23.i = icmp ne i8* %retval.0.i221.i, null
  %or.cond149.i = and i1 %or.cond.i1344, %tobool23.i
  br i1 %or.cond149.i, label %land.lhs.true24.i, label %if.end42.i

land.lhs.true24.i:                                ; preds = %c_getstr.exit222.i
  %call25.i1345 = call i64 @strlen(i8* %retval.0.i.i1341) #5
  %add.i1346 = add i64 %call25.i1345, 1
  %call26.i1347 = call i32 @compare_tree_int(%union.tree_node* %571, i64 %add.i1346) #5
  %cmp27.i1348 = icmp slt i32 %call26.i1347, 1
  br i1 %cmp27.i1348, label %land.lhs.true28.i1351, label %if.end42.i

land.lhs.true28.i1351:                            ; preds = %land.lhs.true24.i
  %call29.i1349 = call i64 @strlen(i8* %retval.0.i221.i) #5
  %add30.i = add i64 %call29.i1349, 1
  %call31.i1350 = call i32 @compare_tree_int(%union.tree_node* %571, i64 %add30.i) #5
  %cmp32.i = icmp slt i32 %call31.i1350, 1
  br i1 %cmp32.i, label %if.then33.i, label %if.end42.i

if.then33.i:                                      ; preds = %land.lhs.true28.i1351
  %call34.i1352 = call i64 @tree_low_cst(%union.tree_node* %571, i32 1) #5
  %call35.i1353 = call i32 @memcmp(i8* %retval.0.i.i1341, i8* %retval.0.i221.i, i64 %call34.i1352) #5
  %cmp36.i = icmp slt i32 %call35.i1353, 0
  br i1 %cmp36.i, label %cond.true.i1354, label %cond.false.i1356

cond.true.i1354:                                  ; preds = %if.then33.i
  %595 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !tbaa !5
  br label %expand_builtin_memcmp.exit

cond.false.i1356:                                 ; preds = %if.then33.i
  %cmp37.i = icmp sgt i32 %call35.i1353, 0
  %596 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !5
  %597 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !5
  %cond.i1355 = select i1 %cmp37.i, %struct.rtx_def* %596, %struct.rtx_def* %597
  br label %expand_builtin_memcmp.exit

if.end42.i:                                       ; preds = %land.lhs.true28.i1351, %land.lhs.true24.i, %c_getstr.exit222.i
  %call43.i = call i32 @host_integerp(%union.tree_node* %571, i32 1) #5
  %tobool44.i = icmp eq i32 %call43.i, 0
  br i1 %tobool44.i, label %if.end62.i1377, label %land.lhs.true45.i

land.lhs.true45.i:                                ; preds = %if.end42.i
  %call46.i1357 = call i64 @tree_low_cst(%union.tree_node* %571, i32 1) #5
  %cmp47.i1358 = icmp eq i64 %call46.i1357, 1
  br i1 %cmp47.i1358, label %if.then48.i1371, label %if.end62.i1377

if.then48.i1371:                                  ; preds = %land.lhs.true45.i
  %598 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 2), align 8, !tbaa !5
  %call49.i1359 = call %union.tree_node* @build_qualified_type(%union.tree_node* %598, i32 1) #5
  %call50.i1360 = call %union.tree_node* @build_pointer_type(%union.tree_node* %call49.i1359) #5
  %599 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !5
  %call51.i1361 = call %union.tree_node* @build1(i32 115, %union.tree_node* %call50.i1360, %union.tree_node* %565) #5
  %call52.i = call %union.tree_node* @build1(i32 41, %union.tree_node* %call49.i1359, %union.tree_node* %call51.i1361) #5
  %call53.i1362 = call %union.tree_node* @build1(i32 114, %union.tree_node* %599, %union.tree_node* %call52.i) #5
  %call54.i1363 = call %union.tree_node* @fold(%union.tree_node* %call53.i1362) #5
  %600 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !5
  %call55.i1364 = call %union.tree_node* @build1(i32 115, %union.tree_node* %call50.i1360, %union.tree_node* %568) #5
  %call56.i1365 = call %union.tree_node* @build1(i32 41, %union.tree_node* %call49.i1359, %union.tree_node* %call55.i1364) #5
  %call57.i1366 = call %union.tree_node* @build1(i32 114, %union.tree_node* %600, %union.tree_node* %call56.i1365) #5
  %call58.i1367 = call %union.tree_node* @fold(%union.tree_node* %call57.i1366) #5
  %601 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !5
  %call59.i1368 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 60, %union.tree_node* %601, %union.tree_node* %call54.i1363, %union.tree_node* %call58.i1367) #5
  %call60.i1369 = call %union.tree_node* @fold(%union.tree_node* %call59.i1368) #5
  %call61.i1370 = call %struct.rtx_def* @expand_expr(%union.tree_node* %call60.i1369, %struct.rtx_def* %target, i32 %mode, i32 0) #5
  br label %expand_builtin_memcmp.exit

if.end62.i1377:                                   ; preds = %land.lhs.true45.i, %if.end42.i
  %call64.i1372 = call fastcc i32 @get_pointer_alignment(%union.tree_node* %565) #5
  %div.i1373 = sdiv i32 %call64.i1372, 8
  %call65.i1374 = call fastcc i32 @get_pointer_alignment(%union.tree_node* %568) #5
  %div66.i = sdiv i32 %call65.i1374, 8
  %602 = load %struct.insn_operand_data** getelementptr inbounds ([0 x %struct.insn_data]* @insn_data, i64 0, i64 1203, i32 3), align 8, !tbaa !43
  %mode67.i = getelementptr inbounds %struct.insn_operand_data* %602, i64 0, i32 2
  %bf.load.i1375 = load i16* %mode67.i, align 8
  %bf.cast.i1376 = zext i16 %bf.load.i1375 to i32
  %call64.off.i = add i32 %call64.i1372, 7
  %603 = icmp ult i32 %call64.off.i, 15
  %call65.off.i = add i32 %call65.i1374, 7
  %604 = icmp ult i32 %call65.off.i, 15
  %or.cond150.i = or i1 %603, %604
  br i1 %or.cond150.i, label %sw.epilog320, label %if.end71.i

if.end71.i:                                       ; preds = %if.end62.i1377
  %cmp72.i = icmp ne %struct.rtx_def* %target, null
  br i1 %cmp72.i, label %land.lhs.true73.i, label %if.then83.i

land.lhs.true73.i:                                ; preds = %if.end71.i
  %605 = getelementptr inbounds %struct.rtx_def* %target, i64 0, i32 0
  %bf.load74.i = load i32* %605, align 8
  %bf.clear.i1378 = and i32 %bf.load74.i, 65535
  %cmp75.i = icmp eq i32 %bf.clear.i1378, 61
  br i1 %cmp75.i, label %land.lhs.true76.i, label %if.then83.i

land.lhs.true76.i:                                ; preds = %land.lhs.true73.i
  %bf.lshr.i1379 = lshr i32 %bf.load74.i, 16
  %bf.clear78.i = and i32 %bf.lshr.i1379, 255
  %cmp79.i = icmp eq i32 %bf.clear78.i, %bf.cast.i1376
  br i1 %cmp79.i, label %land.lhs.true80.i, label %if.then83.i

land.lhs.true80.i:                                ; preds = %land.lhs.true76.i
  %arrayidx81.i = getelementptr inbounds %struct.rtx_def* %target, i64 0, i32 1, i64 0
  %rtuint.i1380 = bitcast %union.rtunion_def* %arrayidx81.i to i32*
  %606 = load i32* %rtuint.i1380, align 4, !tbaa !1
  %cmp82.i = icmp ugt i32 %606, 52
  br i1 %cmp82.i, label %if.end85.i, label %if.then83.i

if.then83.i:                                      ; preds = %land.lhs.true80.i, %land.lhs.true76.i, %land.lhs.true73.i, %if.end71.i
  %call84.i = call %struct.rtx_def* @gen_reg_rtx(i32 %bf.cast.i1376) #5
  br label %if.end85.i

if.end85.i:                                       ; preds = %if.then83.i, %land.lhs.true80.i
  %result63.0.i = phi %struct.rtx_def* [ %target, %land.lhs.true80.i ], [ %call84.i, %if.then83.i ]
  %call86.i = call fastcc %struct.rtx_def* @get_memory_rtx(%union.tree_node* %565) #5
  %call87.i = call fastcc %struct.rtx_def* @get_memory_rtx(%union.tree_node* %568) #5
  %call88.i1381 = call %struct.rtx_def* @expand_expr(%union.tree_node* %571, %struct.rtx_def* null, i32 0, i32 0) #5
  %cmp89.i = icmp slt i32 %div.i1373, %div66.i
  %cond93.i = select i1 %cmp89.i, i32 %div.i1373, i32 %div66.i
  %conv.i1382 = sext i32 %cond93.i to i64
  %call94.i1383 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv.i1382) #5
  %call95.i = call %struct.rtx_def* @gen_cmpstrsi(%struct.rtx_def* %result63.0.i, %struct.rtx_def* %call86.i, %struct.rtx_def* %call87.i, %struct.rtx_def* %call88.i1381, %struct.rtx_def* %call94.i1383) #5
  %tobool96.i = icmp eq %struct.rtx_def* %call95.i, null
  br i1 %tobool96.i, label %if.else.i1388, label %if.then97.i

if.then97.i:                                      ; preds = %if.end85.i
  %call98.i1384 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call95.i) #5
  br label %if.end129.i

if.else.i1388:                                    ; preds = %if.end85.i
  %607 = load %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 14), align 8, !tbaa !5
  %608 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !5
  %type.i1385 = bitcast %union.tree_node* %608 to %struct.tree_type*
  %mode99.i = getelementptr inbounds %struct.tree_type* %type.i1385, i64 0, i32 6
  %bf.load100.i = load i32* %mode99.i, align 4
  %bf.lshr101.i = lshr i32 %bf.load100.i, 9
  %bf.clear102.i = and i32 %bf.lshr101.i, 127
  %arrayidx104.i = getelementptr inbounds %struct.rtx_def* %call86.i, i64 0, i32 1, i64 0
  %rtx.i1386 = bitcast %union.rtunion_def* %arrayidx104.i to %struct.rtx_def**
  %609 = load %struct.rtx_def** %rtx.i1386, align 8, !tbaa !5
  %610 = load i32* @target_flags, align 4, !tbaa !1
  %and.i1387 = lshr i32 %610, 25
  %611 = and i32 %and.i1387, 1
  %612 = or i32 %611, 4
  %arrayidx108.i = getelementptr inbounds %struct.rtx_def* %call87.i, i64 0, i32 1, i64 0
  %rtx109.i = bitcast %union.rtunion_def* %arrayidx108.i to %struct.rtx_def**
  %613 = load %struct.rtx_def** %rtx109.i, align 8, !tbaa !5
  %614 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !5
  %type113.i = bitcast %union.tree_node* %614 to %struct.tree_type*
  %mode114.i = getelementptr inbounds %struct.tree_type* %type113.i, i64 0, i32 6
  %bf.load115.i = load i32* %mode114.i, align 4
  %bf.lshr116.i = lshr i32 %bf.load115.i, 9
  %bf.clear117.i = and i32 %bf.lshr116.i, 127
  %unsigned_flag.i = getelementptr inbounds %union.tree_node* %614, i64 0, i32 0, i32 0, i32 2
  %bf.load119.i = load i32* %unsigned_flag.i, align 8
  %bf.lshr120.i = lshr i32 %bf.load119.i, 13
  %bf.clear121.i = and i32 %bf.lshr120.i, 1
  %call122.i = call %struct.rtx_def* @convert_to_mode(i32 %bf.clear117.i, %struct.rtx_def* %call88.i1381, i32 %bf.clear121.i) #5
  %615 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !5
  %type123.i = bitcast %union.tree_node* %615 to %struct.tree_type*
  %mode124.i = getelementptr inbounds %struct.tree_type* %type123.i, i64 0, i32 6
  %bf.load125.i = load i32* %mode124.i, align 4
  %bf.lshr126.i = lshr i32 %bf.load125.i, 9
  %bf.clear127.i = and i32 %bf.lshr126.i, 127
  %call128.i = call %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32, i32, i32, ...)* @emit_library_call_value(%struct.rtx_def* %607, %struct.rtx_def* %result63.0.i, i32 4, i32 %bf.clear102.i, i32 3, %struct.rtx_def* %609, i32 %612, %struct.rtx_def* %613, i32 %612, %struct.rtx_def* %call122.i, i32 %bf.clear127.i) #5
  br label %if.end129.i

if.end129.i:                                      ; preds = %if.else.i1388, %if.then97.i
  %type131.i = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 1
  %616 = load %union.tree_node** %type131.i, align 8, !tbaa !15
  %type132.i = bitcast %union.tree_node* %616 to %struct.tree_type*
  %mode133.i = getelementptr inbounds %struct.tree_type* %type132.i, i64 0, i32 6
  %bf.load134.i = load i32* %mode133.i, align 4
  %bf.lshr135.i = lshr i32 %bf.load134.i, 9
  %bf.clear136.i = and i32 %bf.lshr135.i, 127
  %617 = getelementptr inbounds %struct.rtx_def* %result63.0.i, i64 0, i32 0
  %bf.load137.i = load i32* %617, align 8
  %bf.lshr138.i = lshr i32 %bf.load137.i, 16
  %bf.clear139.i = and i32 %bf.lshr138.i, 255
  %cmp140.i = icmp eq i32 %bf.clear139.i, %bf.clear136.i
  br i1 %cmp140.i, label %expand_builtin_memcmp.exit, label %if.else143.i

if.else143.i:                                     ; preds = %if.end129.i
  br i1 %cmp72.i, label %expand_builtin_memcmp.exit.thread1556, label %if.else147.i

expand_builtin_memcmp.exit.thread1556:            ; preds = %if.else143.i
  call void @convert_move(%struct.rtx_def* %target, %struct.rtx_def* %result63.0.i, i32 0) #5
  br label %return

if.else147.i:                                     ; preds = %if.else143.i
  %call148.i = call %struct.rtx_def* @convert_to_mode(i32 %bf.clear136.i, %struct.rtx_def* %result63.0.i, i32 0) #5
  br label %expand_builtin_memcmp.exit

expand_builtin_memcmp.exit:                       ; preds = %if.then12.i1321, %cond.true.i1354, %cond.false.i1356, %if.then48.i1371, %if.end129.i, %if.else147.i
  %retval.0.i1389 = phi %struct.rtx_def* [ %574, %if.then12.i1321 ], [ %call61.i1370, %if.then48.i1371 ], [ %call148.i, %if.else147.i ], [ %595, %cond.true.i1354 ], [ %cond.i1355, %cond.false.i1356 ], [ %result63.0.i, %if.end129.i ]
  %tobool242 = icmp eq %struct.rtx_def* %retval.0.i1389, null
  br i1 %tobool242, label %sw.epilog320, label %return

sw.bb245:                                         ; preds = %if.end14
  %call.i1390 = call i32 (%union.tree_node*, ...)* @validate_arglist(%union.tree_node* %4, i32 13, i32 5) #5
  %tobool.i1391 = icmp eq i32 %call.i1390, 0
  br i1 %tobool.i1391, label %sw.epilog320, label %if.end.i1393

if.end.i1393:                                     ; preds = %sw.bb245
  %cmp.i1392 = icmp eq %struct.rtx_def* %target, null
  br i1 %cmp.i1392, label %if.then4.i, label %lor.lhs.false.i1396

lor.lhs.false.i1396:                              ; preds = %if.end.i1393
  %618 = getelementptr inbounds %struct.rtx_def* %target, i64 0, i32 0
  %bf.load.i1394 = load i32* %618, align 8
  %bf.clear.i1395 = and i32 %bf.load.i1394, 65535
  %cmp1.i = icmp eq i32 %bf.clear.i1395, 61
  br i1 %cmp1.i, label %lor.lhs.false2.i, label %if.then4.i

lor.lhs.false2.i:                                 ; preds = %lor.lhs.false.i1396
  %arrayidx.i1397 = getelementptr inbounds %struct.rtx_def* %target, i64 0, i32 1, i64 0
  %rtuint.i1398 = bitcast %union.rtunion_def* %arrayidx.i1397 to i32*
  %619 = load i32* %rtuint.i1398, align 4, !tbaa !1
  %cmp3.i = icmp ult i32 %619, 53
  br i1 %cmp3.i, label %if.then4.i, label %expand_builtin_setjmp.exit

if.then4.i:                                       ; preds = %lor.lhs.false2.i, %lor.lhs.false.i1396, %if.end.i1393
  %620 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !5
  %type.i1399 = bitcast %union.tree_node* %620 to %struct.tree_type*
  %mode.i1400 = getelementptr inbounds %struct.tree_type* %type.i1399, i64 0, i32 6
  %bf.load5.i = load i32* %mode.i1400, align 4
  %bf.lshr.i1401 = lshr i32 %bf.load5.i, 9
  %bf.clear6.i = and i32 %bf.lshr.i1401, 127
  %call7.i1402 = call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear6.i) #5
  br label %expand_builtin_setjmp.exit

expand_builtin_setjmp.exit:                       ; preds = %lor.lhs.false2.i, %if.then4.i
  %target.addr.0.i = phi %struct.rtx_def* [ %call7.i1402, %if.then4.i ], [ %target, %lor.lhs.false2.i ]
  %value.i1403 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 2
  %621 = bitcast i32* %value.i1403 to %union.tree_node**
  %622 = load %union.tree_node** %621, align 8, !tbaa !26
  %call9.i1404 = call %struct.rtx_def* @expand_expr(%union.tree_node* %622, %struct.rtx_def* null, i32 0, i32 0) #5
  %call10.i1405 = call %struct.rtx_def* @gen_label_rtx() #5
  %call11.i1406 = call %struct.rtx_def* @gen_label_rtx() #5
  call void @expand_builtin_setjmp_setup(%struct.rtx_def* %call9.i1404, %struct.rtx_def* %call10.i1405) #5
  %623 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !5
  %call12.i1407 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %target.addr.0.i, %struct.rtx_def* %623) #5
  %call13.i1408 = call %struct.rtx_def* @gen_jump(%struct.rtx_def* %call11.i1406) #5
  %call14.i1409 = call %struct.rtx_def* @emit_jump_insn(%struct.rtx_def* %call13.i1408) #5
  %call15.i1410 = call %struct.rtx_def* @emit_barrier() #5
  %call16.i1411 = call %struct.rtx_def* @emit_label(%struct.rtx_def* %call10.i1405) #5
  call void @expand_builtin_setjmp_receiver(%struct.rtx_def* %call10.i1405) #5
  %624 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !5
  %call17.i1412 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %target.addr.0.i, %struct.rtx_def* %624) #5
  %call18.i1413 = call %struct.rtx_def* @emit_label(%struct.rtx_def* %call11.i1406) #5
  %625 = load %struct.function** @cfun, align 8, !tbaa !5
  %has_nonlocal_label.i = getelementptr inbounds %struct.function* %625, i64 0, i32 56
  %626 = bitcast i24* %has_nonlocal_label.i to i32*
  %bf.load19.i = load i32* %626, align 8
  %bf.set.i = or i32 %bf.load19.i, 256
  store i32 %bf.set.i, i32* %626, align 8
  %627 = load %struct.function** @cfun, align 8, !tbaa !5
  %x_nonlocal_goto_handler_labels.i = getelementptr inbounds %struct.function* %627, i64 0, i32 21
  %628 = load %struct.rtx_def** %x_nonlocal_goto_handler_labels.i, align 8, !tbaa !50
  %call21.i1414 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 0, %struct.rtx_def* %call10.i1405, %struct.rtx_def* %628) #5
  %629 = load %struct.function** @cfun, align 8, !tbaa !5
  %x_nonlocal_goto_handler_labels22.i = getelementptr inbounds %struct.function* %629, i64 0, i32 21
  store %struct.rtx_def* %call21.i1414, %struct.rtx_def** %x_nonlocal_goto_handler_labels22.i, align 8, !tbaa !50
  %tobool247 = icmp eq %struct.rtx_def* %target.addr.0.i, null
  br i1 %tobool247, label %sw.epilog320, label %return

sw.bb250:                                         ; preds = %if.end14
  %call251 = call i32 (%union.tree_node*, ...)* @validate_arglist(%union.tree_node* %4, i32 13, i32 6, i32 5)
  %tobool252 = icmp eq i32 %call251, 0
  br i1 %tobool252, label %sw.epilog320, label %if.else254

if.else254:                                       ; preds = %sw.bb250
  %value256 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 2
  %630 = bitcast i32* %value256 to %union.tree_node**
  %631 = load %union.tree_node** %630, align 8, !tbaa !26
  %call257 = call %struct.rtx_def* @expand_expr(%union.tree_node* %631, %struct.rtx_def* %subtarget, i32 0, i32 0) #5
  %chain260 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0
  %632 = load %union.tree_node** %chain260, align 8, !tbaa !28
  %value262 = getelementptr inbounds %union.tree_node* %632, i64 0, i32 0, i32 2
  %633 = bitcast i32* %value262 to %union.tree_node**
  %634 = load %union.tree_node** %633, align 8, !tbaa !26
  %call263 = call %struct.rtx_def* @expand_expr(%union.tree_node* %634, %struct.rtx_def* null, i32 0, i32 0) #5
  %635 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !5
  %cmp264 = icmp eq %struct.rtx_def* %call263, %635
  br i1 %cmp264, label %if.end266, label %if.then265

if.then265:                                       ; preds = %if.else254
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([44 x i8]* @.str107, i64 0, i64 0)) #5
  %636 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !5
  br label %return

if.end266:                                        ; preds = %if.else254
  call void @expand_builtin_longjmp(%struct.rtx_def* %call257, %struct.rtx_def* %call263)
  %637 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !5
  br label %return

sw.bb267:                                         ; preds = %if.end14
  %call.i1416 = call %struct.rtx_def* @gen_trap() #5
  %call1.i1417 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call.i1416) #5
  %call2.i1418 = call %struct.rtx_def* @emit_barrier() #5
  %638 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !5
  br label %return

sw.bb269:                                         ; preds = %if.end14
  %call270 = call fastcc %struct.rtx_def* @expand_builtin_fputs(%union.tree_node* %4, i32 %ignore, i32 0)
  %tobool271 = icmp eq %struct.rtx_def* %call270, null
  br i1 %tobool271, label %sw.epilog320, label %return

sw.bb274:                                         ; preds = %if.end14
  %call275 = call fastcc %struct.rtx_def* @expand_builtin_fputs(%union.tree_node* %4, i32 %ignore, i32 1)
  %tobool276 = icmp eq %struct.rtx_def* %call275, null
  br i1 %tobool276, label %sw.epilog320, label %return

sw.bb279:                                         ; preds = %if.end14
  call void @expand_builtin_unwind_init() #5
  %639 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !5
  br label %return

sw.bb280:                                         ; preds = %if.end14
  %640 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 10), align 8, !tbaa !5
  br label %return

sw.bb281:                                         ; preds = %if.end14
  %call282 = call %struct.rtx_def* @expand_builtin_dwarf_fp_regnum() #5
  br label %return

sw.bb283:                                         ; preds = %if.end14
  %value285 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 2
  %641 = bitcast i32* %value285 to %union.tree_node**
  %642 = load %union.tree_node** %641, align 8, !tbaa !26
  call void @expand_builtin_init_dwarf_reg_sizes(%union.tree_node* %642) #5
  %643 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !5
  br label %return

sw.bb286:                                         ; preds = %if.end14
  %value288 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 2
  %644 = bitcast i32* %value288 to %union.tree_node**
  %645 = load %union.tree_node** %644, align 8, !tbaa !26
  %call289 = call %struct.rtx_def* @expand_builtin_frob_return_addr(%union.tree_node* %645) #5
  br label %return

sw.bb290:                                         ; preds = %if.end14
  %value292 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 2
  %646 = bitcast i32* %value292 to %union.tree_node**
  %647 = load %union.tree_node** %646, align 8, !tbaa !26
  %call293 = call %struct.rtx_def* @expand_builtin_extract_return_addr(%union.tree_node* %647) #5
  br label %return

sw.bb294:                                         ; preds = %if.end14
  %value296 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 2
  %648 = bitcast i32* %value296 to %union.tree_node**
  %649 = load %union.tree_node** %648, align 8, !tbaa !26
  %chain298 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0
  %650 = load %union.tree_node** %chain298, align 8, !tbaa !28
  %value300 = getelementptr inbounds %union.tree_node* %650, i64 0, i32 0, i32 2
  %651 = bitcast i32* %value300 to %union.tree_node**
  %652 = load %union.tree_node** %651, align 8, !tbaa !26
  call void @expand_builtin_eh_return(%union.tree_node* %649, %union.tree_node* %652) #5
  %653 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !5
  br label %return

sw.bb301:                                         ; preds = %if.end14
  %call302 = call %struct.rtx_def* @expand_builtin_eh_return_data_regno(%union.tree_node* %4) #5
  br label %return

sw.bb303:                                         ; preds = %if.end14
  %call2.i1419 = call fastcc %struct.rtx_def* @expand_builtin_next_arg(%union.tree_node* null) #5
  %chain4.i = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0
  %654 = load %union.tree_node** %chain4.i, align 8, !tbaa !28
  %tobool5.i1421 = icmp eq %union.tree_node* %654, null
  br i1 %tobool5.i1421, label %expand_builtin_va_start.exit, label %if.then6.i1423

if.then6.i1423:                                   ; preds = %sw.bb303
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([42 x i8]* @.str115, i64 0, i64 0)) #5
  br label %expand_builtin_va_start.exit

expand_builtin_va_start.exit:                     ; preds = %sw.bb303, %if.then6.i1423
  %value.i1424 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 2
  %655 = bitcast i32* %value.i1424 to %union.tree_node**
  %656 = load %union.tree_node** %655, align 8, !tbaa !26
  %call8.i1425 = call fastcc %union.tree_node* @stabilize_va_list(%union.tree_node* %656, i32 1) #5
  call void @ix86_va_start(i32 0, %union.tree_node* %call8.i1425, %struct.rtx_def* %call2.i1419) #5
  %657 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !5
  br label %return

sw.bb305:                                         ; preds = %if.end14
  %chain1.i = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0
  %658 = load %union.tree_node** %chain1.i, align 8, !tbaa !28
  %call.i1427 = call fastcc %struct.rtx_def* @expand_builtin_next_arg(%union.tree_node* %658) #5
  %chain4.i1429 = getelementptr inbounds %union.tree_node* %658, i64 0, i32 0, i32 0, i32 0
  %659 = load %union.tree_node** %chain4.i1429, align 8, !tbaa !28
  %tobool5.i1430 = icmp eq %union.tree_node* %659, null
  br i1 %tobool5.i1430, label %expand_builtin_va_start.exit1436, label %if.then6.i1432

if.then6.i1432:                                   ; preds = %sw.bb305
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([42 x i8]* @.str115, i64 0, i64 0)) #5
  br label %expand_builtin_va_start.exit1436

expand_builtin_va_start.exit1436:                 ; preds = %sw.bb305, %if.then6.i1432
  %value.i1433 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 2
  %660 = bitcast i32* %value.i1433 to %union.tree_node**
  %661 = load %union.tree_node** %660, align 8, !tbaa !26
  %call8.i1434 = call fastcc %union.tree_node* @stabilize_va_list(%union.tree_node* %661, i32 1) #5
  call void @ix86_va_start(i32 1, %union.tree_node* %call8.i1434, %struct.rtx_def* %call.i1427) #5
  %662 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !5
  br label %return

sw.bb307:                                         ; preds = %if.end14
  %value.i1437 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 2
  %663 = bitcast i32* %value.i1437 to %union.tree_node**
  %664 = load %union.tree_node** %663, align 8, !tbaa !26
  %side_effects_flag.i1438 = getelementptr inbounds %union.tree_node* %664, i64 0, i32 0, i32 0, i32 2
  %bf.load.i1439 = load i32* %side_effects_flag.i1438, align 8
  %bf.clear.i1440 = and i32 %bf.load.i1439, 256
  %tobool.i1441 = icmp eq i32 %bf.clear.i1440, 0
  br i1 %tobool.i1441, label %expand_builtin_va_end.exit, label %if.then.i1443

if.then.i1443:                                    ; preds = %sw.bb307
  %665 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !5
  %call.i1442 = call %struct.rtx_def* @expand_expr(%union.tree_node* %664, %struct.rtx_def* %665, i32 0, i32 0) #5
  br label %expand_builtin_va_end.exit

expand_builtin_va_end.exit:                       ; preds = %sw.bb307, %if.then.i1443
  %666 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !5
  br label %return

sw.bb309:                                         ; preds = %if.end14
  %value.i1445 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 2
  %667 = bitcast i32* %value.i1445 to %union.tree_node**
  %668 = load %union.tree_node** %667, align 8, !tbaa !26
  %chain.i1446 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0
  %669 = load %union.tree_node** %chain.i1446, align 8, !tbaa !28
  %value2.i1447 = getelementptr inbounds %union.tree_node* %669, i64 0, i32 0, i32 2
  %670 = bitcast i32* %value2.i1447 to %union.tree_node**
  %671 = load %union.tree_node** %670, align 8, !tbaa !26
  %call.i1448 = call fastcc %union.tree_node* @stabilize_va_list(%union.tree_node* %668, i32 1) #5
  %call3.i1449 = call fastcc %union.tree_node* @stabilize_va_list(%union.tree_node* %671, i32 0) #5
  %672 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 31), align 8, !tbaa !5
  %code.i1450 = getelementptr inbounds %union.tree_node* %672, i64 0, i32 0, i32 0, i32 2
  %bf.load.i1451 = load i32* %code.i1450, align 8
  %bf.clear.i1452 = and i32 %bf.load.i1451, 255
  %cmp.i1453 = icmp eq i32 %bf.clear.i1452, 18
  br i1 %cmp.i1453, label %if.else.i1468, label %if.then.i1458

if.then.i1458:                                    ; preds = %sw.bb309
  %call5.i1454 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 48, %union.tree_node* %672, %union.tree_node* %call.i1448, %union.tree_node* %call3.i1449) #5
  %side_effects_flag.i1455 = getelementptr inbounds %union.tree_node* %call5.i1454, i64 0, i32 0, i32 0, i32 2
  %bf.load7.i = load i32* %side_effects_flag.i1455, align 8
  %bf.set.i1456 = or i32 %bf.load7.i, 256
  store i32 %bf.set.i1456, i32* %side_effects_flag.i1455, align 8
  %673 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !5
  %call9.i1457 = call %struct.rtx_def* @expand_expr(%union.tree_node* %call5.i1454, %struct.rtx_def* %673, i32 0, i32 0) #5
  br label %expand_builtin_va_copy.exit

if.else.i1468:                                    ; preds = %sw.bb309
  %674 = load i32* @target_flags, align 4, !tbaa !1
  %and.i1459 = lshr i32 %674, 25
  %675 = and i32 %and.i1459, 1
  %676 = or i32 %675, 4
  %call10.i1460 = call %struct.rtx_def* @expand_expr(%union.tree_node* %call.i1448, %struct.rtx_def* null, i32 %676, i32 0) #5
  %677 = load i32* @target_flags, align 4, !tbaa !1
  %and11.i = lshr i32 %677, 25
  %678 = and i32 %and11.i, 1
  %679 = or i32 %678, 4
  %call14.i1461 = call %struct.rtx_def* @expand_expr(%union.tree_node* %call3.i1449, %struct.rtx_def* null, i32 %679, i32 0) #5
  %680 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 31), align 8, !tbaa !5
  %681 = getelementptr inbounds %union.tree_node* %680, i64 0, i32 0, i32 4
  %682 = load %union.tree_node** %681, align 8, !tbaa !19
  %call15.i1462 = call %struct.rtx_def* @expand_expr(%union.tree_node* %682, %struct.rtx_def* null, i32 0, i32 0) #5
  %call16.i1463 = call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %call10.i1460) #5
  %type18.i = getelementptr inbounds %union.tree_node* %call.i1448, i64 0, i32 0, i32 0, i32 1
  %683 = load %union.tree_node** %type18.i, align 8, !tbaa !15
  %type20.i = getelementptr inbounds %union.tree_node* %683, i64 0, i32 0, i32 0, i32 1
  %684 = load %union.tree_node** %type20.i, align 8, !tbaa !15
  %call21.i1464 = call i64 @get_alias_set(%union.tree_node* %684) #5
  call void @set_mem_alias_set(%struct.rtx_def* %call16.i1463, i64 %call21.i1464) #5
  %685 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 31), align 8, !tbaa !5
  %align.i = getelementptr inbounds %union.tree_node* %685, i64 0, i32 0, i32 7
  %686 = bitcast %union.tree_node** %align.i to i32*
  %687 = load i32* %686, align 4, !tbaa !51
  call void @set_mem_align(%struct.rtx_def* %call16.i1463, i32 %687) #5
  %call23.i1465 = call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %call14.i1461) #5
  %type25.i = getelementptr inbounds %union.tree_node* %call3.i1449, i64 0, i32 0, i32 0, i32 1
  %688 = load %union.tree_node** %type25.i, align 8, !tbaa !15
  %type27.i = getelementptr inbounds %union.tree_node* %688, i64 0, i32 0, i32 0, i32 1
  %689 = load %union.tree_node** %type27.i, align 8, !tbaa !15
  %call28.i1466 = call i64 @get_alias_set(%union.tree_node* %689) #5
  call void @set_mem_alias_set(%struct.rtx_def* %call23.i1465, i64 %call28.i1466) #5
  %690 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 31), align 8, !tbaa !5
  %align30.i = getelementptr inbounds %union.tree_node* %690, i64 0, i32 0, i32 7
  %691 = bitcast %union.tree_node** %align30.i to i32*
  %692 = load i32* %691, align 4, !tbaa !51
  call void @set_mem_align(%struct.rtx_def* %call23.i1465, i32 %692) #5
  %call31.i1467 = call %struct.rtx_def* @emit_block_move(%struct.rtx_def* %call16.i1463, %struct.rtx_def* %call23.i1465, %struct.rtx_def* %call15.i1462) #5
  br label %expand_builtin_va_copy.exit

expand_builtin_va_copy.exit:                      ; preds = %if.then.i1458, %if.else.i1468
  %693 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !5
  br label %return

sw.bb311:                                         ; preds = %if.end14
  %cmp.i1470 = icmp eq %union.tree_node* %4, null
  br i1 %cmp.i1470, label %if.then.i1474, label %lor.lhs.false.i1473

lor.lhs.false.i1473:                              ; preds = %sw.bb311
  %chain.i1471 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0
  %694 = load %union.tree_node** %chain.i1471, align 8, !tbaa !28
  %cmp1.i1472 = icmp eq %union.tree_node* %694, null
  br i1 %cmp1.i1472, label %if.then.i1474, label %if.end.i1480

if.then.i1474:                                    ; preds = %lor.lhs.false.i1473, %sw.bb311
  %695 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !5
  br label %return

if.end.i1480:                                     ; preds = %lor.lhs.false.i1473
  %value.i1475 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 2
  %696 = bitcast i32* %value.i1475 to %union.tree_node**
  %697 = load %union.tree_node** %696, align 8, !tbaa !26
  %value5.i = getelementptr inbounds %union.tree_node* %694, i64 0, i32 0, i32 2
  %698 = bitcast i32* %value5.i to %union.tree_node**
  %699 = load %union.tree_node** %698, align 8, !tbaa !26
  %code.i1476 = getelementptr inbounds %union.tree_node* %699, i64 0, i32 0, i32 0, i32 2
  %bf.load.i1477 = load i32* %code.i1476, align 8
  %bf.clear.i1478 = and i32 %bf.load.i1477, 255
  %cmp7.i1479 = icmp eq i32 %bf.clear.i1478, 25
  br i1 %cmp7.i1479, label %if.end9.i1483, label %if.then8.i1481

if.then8.i1481:                                   ; preds = %if.end.i1480
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([52 x i8]* @.str114, i64 0, i64 0)) #5
  %700 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8, !tbaa !5
  br label %if.end9.i1483

if.end9.i1483:                                    ; preds = %if.then8.i1481, %if.end.i1480
  %c.0.i = phi %union.tree_node* [ %700, %if.then8.i1481 ], [ %699, %if.end.i1480 ]
  %call.i1482 = call %struct.rtx_def* @expand_expr(%union.tree_node* %697, %struct.rtx_def* %target, i32 0, i32 0) #5
  %701 = getelementptr inbounds %struct.rtx_def* %call.i1482, i64 0, i32 0
  %bf.load10.i = load i32* %701, align 8
  %bf.clear11.i = and i32 %bf.load10.i, 65535
  %cmp12.i = icmp eq i32 %bf.clear11.i, 54
  br i1 %cmp12.i, label %return, label %if.then13.i1490

if.then13.i1490:                                  ; preds = %if.end9.i1483
  %bf.lshr.i1484 = lshr i32 %bf.load10.i, 16
  %bf.clear15.i = and i32 %bf.lshr.i1484, 255
  %call16.i1485 = call %struct.rtx_def* @force_reg(i32 %bf.clear15.i, %struct.rtx_def* %call.i1482) #5
  %702 = getelementptr inbounds %struct.rtx_def* %call16.i1485, i64 0, i32 0
  %bf.load17.i = load i32* %702, align 8
  %bf.lshr18.i = lshr i32 %bf.load17.i, 16
  %bf.clear19.i1486 = and i32 %bf.lshr18.i, 255
  %call20.i1487 = call %struct.rtx_def* @expand_expr(%union.tree_node* %c.0.i, %struct.rtx_def* null, i32 %bf.clear19.i1486, i32 0) #5
  %call21.i1488 = call %struct.rtx_def* @emit_note(i8* null, i32 -79) #5
  %call22.i1489 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 103, i32 0, %struct.rtx_def* %call16.i1485, %struct.rtx_def* %call20.i1487) #5
  %703 = getelementptr inbounds %struct.rtx_def* %call21.i1488, i64 0, i32 1, i64 3, i32 0
  %call22.c.i = ptrtoint %struct.rtx_def* %call22.i1489 to i64
  store i64 %call22.c.i, i64* %703, align 8, !tbaa !5
  br label %return

sw.bb313:                                         ; preds = %if.end14
  %call.i1492 = call i32 (%union.tree_node*, ...)* @validate_arglist(%union.tree_node* %4, i32 13, i32 0) #5
  %tobool.i1493 = icmp eq i32 %call.i1492, 0
  br i1 %tobool.i1493, label %expand_builtin_prefetch.exit, label %if.end.i1496

if.end.i1496:                                     ; preds = %sw.bb313
  %value.i1494 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 2
  %704 = bitcast i32* %value.i1494 to %union.tree_node**
  %705 = load %union.tree_node** %704, align 8, !tbaa !26
  %chain.i1495 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0
  %706 = load %union.tree_node** %chain.i1495, align 8, !tbaa !28
  %tobool1.i = icmp eq %union.tree_node* %706, null
  br i1 %tobool1.i, label %if.else21.i, label %if.then2.i1498

if.then2.i1498:                                   ; preds = %if.end.i1496
  %value6.i = getelementptr inbounds %union.tree_node* %706, i64 0, i32 0, i32 2
  %707 = bitcast i32* %value6.i to %union.tree_node**
  %708 = load %union.tree_node** %707, align 8, !tbaa !26
  %chain10.i = getelementptr inbounds %union.tree_node* %706, i64 0, i32 0, i32 0, i32 0
  %709 = load %union.tree_node** %chain10.i, align 8, !tbaa !28
  %tobool11.i1497 = icmp eq %union.tree_node* %709, null
  br i1 %tobool11.i1497, label %if.else.i1501, label %if.then12.i1499

if.then12.i1499:                                  ; preds = %if.then2.i1498
  %value18.i = getelementptr inbounds %union.tree_node* %709, i64 0, i32 0, i32 2
  %710 = bitcast i32* %value18.i to %union.tree_node**
  %711 = load %union.tree_node** %710, align 8, !tbaa !26
  br label %if.end23.i

if.else.i1501:                                    ; preds = %if.then2.i1498
  %call19.i1500 = call %union.tree_node* @build_int_2_wide(i64 3, i64 0) #5
  br label %if.end23.i

if.else21.i:                                      ; preds = %if.end.i1496
  %712 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8, !tbaa !5
  %call22.i1502 = call %union.tree_node* @build_int_2_wide(i64 3, i64 0) #5
  br label %if.end23.i

if.end23.i:                                       ; preds = %if.else21.i, %if.else.i1501, %if.then12.i1499
  %arg1.0.i = phi %union.tree_node* [ %708, %if.then12.i1499 ], [ %708, %if.else.i1501 ], [ %712, %if.else21.i ]
  %arg2.0.i = phi %union.tree_node* [ %711, %if.then12.i1499 ], [ %call19.i1500, %if.else.i1501 ], [ %call22.i1502, %if.else21.i ]
  %713 = load i32* @target_flags, align 4, !tbaa !1
  %and.i1503 = lshr i32 %713, 25
  %714 = and i32 %and.i1503, 1
  %715 = or i32 %714, 4
  %call25.i1504 = call %struct.rtx_def* @expand_expr(%union.tree_node* %705, %struct.rtx_def* null, i32 %715, i32 0) #5
  %code.i1505 = getelementptr inbounds %union.tree_node* %arg1.0.i, i64 0, i32 0, i32 0, i32 2
  %bf.load.i1506 = load i32* %code.i1505, align 8
  %bf.clear.i1507 = and i32 %bf.load.i1506, 255
  %cmp.i1508 = icmp eq i32 %bf.clear.i1507, 25
  br i1 %cmp.i1508, label %if.end28.i1512, label %if.then27.i

if.then27.i:                                      ; preds = %if.end23.i
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([54 x i8]* @.str110, i64 0, i64 0)) #5
  %716 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8, !tbaa !5
  br label %if.end28.i1512

if.end28.i1512:                                   ; preds = %if.then27.i, %if.end23.i
  %arg1.1.i = phi %union.tree_node* [ %716, %if.then27.i ], [ %arg1.0.i, %if.end23.i ]
  %call29.i1509 = call %struct.rtx_def* @expand_expr(%union.tree_node* %arg1.1.i, %struct.rtx_def* null, i32 0, i32 0) #5
  %rtwint.i1510 = getelementptr inbounds %struct.rtx_def* %call29.i1509, i64 0, i32 1, i64 0, i32 0
  %717 = load i64* %rtwint.i1510, align 8, !tbaa !7
  %switch.i1511 = icmp ult i64 %717, 2
  br i1 %switch.i1511, label %if.end36.i, label %if.then35.i

if.then35.i:                                      ; preds = %if.end28.i1512
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([53 x i8]* @.str111, i64 0, i64 0)) #5
  %718 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !5
  br label %if.end36.i

if.end36.i:                                       ; preds = %if.then35.i, %if.end28.i1512
  %op1.0.i = phi %struct.rtx_def* [ %718, %if.then35.i ], [ %call29.i1509, %if.end28.i1512 ]
  %code38.i = getelementptr inbounds %union.tree_node* %arg2.0.i, i64 0, i32 0, i32 0, i32 2
  %bf.load39.i = load i32* %code38.i, align 8
  %bf.clear40.i = and i32 %bf.load39.i, 255
  %cmp41.i1513 = icmp eq i32 %bf.clear40.i, 25
  br i1 %cmp41.i1513, label %if.end43.i, label %if.then42.i

if.then42.i:                                      ; preds = %if.end36.i
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([53 x i8]* @.str112, i64 0, i64 0)) #5
  %719 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8, !tbaa !5
  br label %if.end43.i

if.end43.i:                                       ; preds = %if.then42.i, %if.end36.i
  %arg2.1.i = phi %union.tree_node* [ %719, %if.then42.i ], [ %arg2.0.i, %if.end36.i ]
  %call44.i1514 = call %struct.rtx_def* @expand_expr(%union.tree_node* %arg2.1.i, %struct.rtx_def* null, i32 0, i32 0) #5
  %rtwint47.i = getelementptr inbounds %struct.rtx_def* %call44.i1514, i64 0, i32 1, i64 0, i32 0
  %720 = load i64* %rtwint47.i, align 8, !tbaa !7
  %721 = icmp ugt i64 %720, 3
  br i1 %721, label %if.then53.i1515, label %if.end54.i1516

if.then53.i1515:                                  ; preds = %if.end43.i
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([52 x i8]* @.str113, i64 0, i64 0)) #5
  %722 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !5
  br label %if.end54.i1516

if.end54.i1516:                                   ; preds = %if.then53.i1515, %if.end43.i
  %op2.0.i = phi %struct.rtx_def* [ %722, %if.then53.i1515 ], [ %call44.i1514, %if.end43.i ]
  %723 = load i32* @x86_prefetch_sse, align 4, !tbaa !1
  %tobool55.i = icmp eq i32 %723, 0
  br i1 %tobool55.i, label %lor.lhs.false56.i, label %if.then59.i

lor.lhs.false56.i:                                ; preds = %if.end54.i1516
  %724 = load i32* @target_flags, align 4, !tbaa !1
  %and57.i1517 = and i32 %724, 1048576
  %cmp58.i = icmp eq i32 %and57.i1517, 0
  br i1 %cmp58.i, label %if.else73.i1525, label %if.then59.i

if.then59.i:                                      ; preds = %lor.lhs.false56.i, %if.end54.i1516
  %725 = load %struct.insn_operand_data** getelementptr inbounds ([0 x %struct.insn_data]* @insn_data, i64 0, i64 1316, i32 3), align 8, !tbaa !43
  %predicate.i1518 = getelementptr inbounds %struct.insn_operand_data* %725, i64 0, i32 0
  %726 = load i32 (%struct.rtx_def*, i32)** %predicate.i1518, align 8, !tbaa !45
  %mode.i1519 = getelementptr inbounds %struct.insn_operand_data* %725, i64 0, i32 2
  %bf.load62.i = load i16* %mode.i1519, align 8
  %bf.cast.i1520 = zext i16 %bf.load62.i to i32
  %call63.i1521 = call i32 %726(%struct.rtx_def* %call25.i1504, i32 %bf.cast.i1520) #5
  %tobool64.i = icmp eq i32 %call63.i1521, 0
  br i1 %tobool64.i, label %if.then65.i, label %if.end70.i

if.then65.i:                                      ; preds = %if.then59.i
  %727 = load i32* @target_flags, align 4, !tbaa !1
  %and66.i = lshr i32 %727, 25
  %728 = and i32 %and66.i, 1
  %729 = or i32 %728, 4
  %call69.i1522 = call %struct.rtx_def* @force_reg(i32 %729, %struct.rtx_def* %call25.i1504) #5
  br label %if.end70.i

if.end70.i:                                       ; preds = %if.then65.i, %if.then59.i
  %op0.0.i = phi %struct.rtx_def* [ %call25.i1504, %if.then59.i ], [ %call69.i1522, %if.then65.i ]
  %call71.i = call %struct.rtx_def* @gen_prefetch(%struct.rtx_def* %op0.0.i, %struct.rtx_def* %op1.0.i, %struct.rtx_def* %op2.0.i) #5
  %call72.i1523 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call71.i) #5
  br label %if.end75.i1526

if.else73.i1525:                                  ; preds = %lor.lhs.false56.i
  %call74.i1524 = call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %call25.i1504, i32 0) #5
  br label %if.end75.i1526

if.end75.i1526:                                   ; preds = %if.else73.i1525, %if.end70.i
  %op0.1.i = phi %struct.rtx_def* [ %op0.0.i, %if.end70.i ], [ %call74.i1524, %if.else73.i1525 ]
  %730 = getelementptr inbounds %struct.rtx_def* %op0.1.i, i64 0, i32 0
  %bf.load76.i = load i32* %730, align 8
  %bf.clear77.i = and i32 %bf.load76.i, 65535
  %cmp78.i = icmp eq i32 %bf.clear77.i, 66
  br i1 %cmp78.i, label %expand_builtin_prefetch.exit, label %land.lhs.true79.i1529

land.lhs.true79.i1529:                            ; preds = %if.end75.i1526
  %call80.i1527 = call i32 @side_effects_p(%struct.rtx_def* %op0.1.i) #5
  %tobool81.i1528 = icmp eq i32 %call80.i1527, 0
  br i1 %tobool81.i1528, label %expand_builtin_prefetch.exit, label %if.then82.i

if.then82.i:                                      ; preds = %land.lhs.true79.i1529
  %call83.i = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %op0.1.i) #5
  br label %expand_builtin_prefetch.exit

expand_builtin_prefetch.exit:                     ; preds = %sw.bb313, %if.end75.i1526, %land.lhs.true79.i1529, %if.then82.i
  %731 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !5
  br label %return

sw.default314:                                    ; preds = %if.end14
  %name316 = getelementptr inbounds %union.tree_node* %2, i64 0, i32 0, i32 8
  %732 = load %union.tree_node** %name316, align 8, !tbaa !24
  %id318 = getelementptr inbounds %union.tree_node* %732, i64 0, i32 0, i32 1
  %733 = getelementptr inbounds i8** %id318, i64 1
  %734 = load i8** %733, align 8, !tbaa !21
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([47 x i8]* @.str108, i64 0, i64 0), i8* %734) #5
  br label %sw.epilog320

sw.epilog320:                                     ; preds = %if.end9.i, %sw.bb245, %if.end62.i1377, %sw.bb240, %land.lhs.true84.i, %if.end96.i, %if.end93.i, %sw.bb235, %land.lhs.true59.i, %if.end92.i, %if.end84.i, %if.else.i1208, %sw.bb230, %sw.bb225, %if.end19.i, %if.else.i1096, %sw.bb215, %if.then7.i1054, %if.end26.i1074, %if.end22.i1073, %if.else.i1031, %sw.bb210, %lor.lhs.false.i.i997, %if.else.i.i992, %if.end.i985, %if.then7.i1005, %c_getstr.exit.i1004, %if.else.i982, %sw.bb205, %lor.lhs.false.i.i925, %if.else.i.i920, %if.else.i913, %if.end28.i956, %if.end22.i954, %c_getstr.exit.i932, %sw.bb200, %lor.lhs.false.i.i874, %if.else.i.i869, %if.else.i862, %if.end28.i, %if.end22.i, %c_getstr.exit.i881, %sw.bb195, %c_getstr.exit62.thread.i, %if.end16.i841, %land.lhs.true18.i, %if.then22.i843, %sw.bb190, %c_getstr.exit52.thread.i, %lor.lhs.false.i799, %land.lhs.true15.i, %sw.bb185, %lor.lhs.false.i743, %if.end.i751, %land.lhs.true23.i, %if.then28.i756, %sw.bb180, %lor.lhs.false.i.i702, %if.else.i.i697, %if.else.i690, %land.lhs.true.i710, %c_getstr.exit.i708, %sw.bb175, %lor.lhs.false.i.i, %if.else.i.i, %if.then34.i, %if.end58.i, %c_getstr.exit.i, %lor.lhs.false46.i, %lor.lhs.false49.i, %if.end21.i, %lor.lhs.false.i, %if.else.i651, %sw.bb170, %if.end4.i, %if.end.i628, %sw.bb165, %if.end51.i, %if.else.i610, %sw.bb160, %sw.bb155, %sw.bb150, %sw.bb21, %if.then48.i, %sw.bb17, %expand_builtin_alloca.exit, %expand_builtin_strlen.exit, %expand_builtin_strcpy.exit, %expand_builtin_strncpy.exit, %expand_builtin_strcat.exit, %expand_builtin_strncat.exit, %expand_builtin_strspn.exit, %expand_builtin_strcspn.exit, %expand_builtin_strstr.exit, %expand_builtin_strpbrk.exit, %expand_builtin_strchr.exit, %expand_builtin_strrchr.exit, %expand_builtin_memcpy.exit, %sw.bb220, %expand_builtin_bzero.exit, %expand_builtin_strcmp.exit, %expand_builtin_strncmp.exit, %expand_builtin_memcmp.exit, %expand_builtin_setjmp.exit, %sw.bb250, %sw.bb269, %sw.bb274, %if.end14, %if.end14, %if.end14, %if.end14, %if.end14, %if.end14, %if.end14, %if.end14, %sw.default314
  %target.addr.0 = phi %struct.rtx_def* [ %target, %sw.default314 ], [ null, %sw.bb274 ], [ null, %sw.bb269 ], [ %target, %if.end14 ], [ %target, %if.end14 ], [ %target, %if.end14 ], [ %target, %if.end14 ], [ %target, %if.end14 ], [ %target, %if.end14 ], [ %target, %if.end14 ], [ %target, %if.end14 ], [ %target, %sw.bb250 ], [ null, %expand_builtin_setjmp.exit ], [ null, %expand_builtin_memcmp.exit ], [ null, %expand_builtin_strncmp.exit ], [ null, %expand_builtin_strcmp.exit ], [ null, %expand_builtin_bzero.exit ], [ null, %sw.bb220 ], [ null, %expand_builtin_memcpy.exit ], [ null, %expand_builtin_strrchr.exit ], [ null, %expand_builtin_strchr.exit ], [ null, %expand_builtin_strpbrk.exit ], [ null, %expand_builtin_strstr.exit ], [ null, %expand_builtin_strcspn.exit ], [ null, %expand_builtin_strspn.exit ], [ null, %expand_builtin_strncat.exit ], [ null, %expand_builtin_strcat.exit ], [ null, %expand_builtin_strncpy.exit ], [ null, %expand_builtin_strcpy.exit ], [ null, %expand_builtin_strlen.exit ], [ null, %expand_builtin_alloca.exit ], [ %target, %sw.bb17 ], [ null, %if.then48.i ], [ null, %sw.bb21 ], [ null, %sw.bb150 ], [ null, %sw.bb155 ], [ null, %sw.bb160 ], [ null, %if.else.i610 ], [ null, %if.end51.i ], [ null, %sw.bb165 ], [ null, %if.end.i628 ], [ null, %if.end4.i ], [ null, %sw.bb170 ], [ null, %if.else.i651 ], [ null, %lor.lhs.false.i ], [ null, %if.end21.i ], [ null, %lor.lhs.false49.i ], [ null, %lor.lhs.false46.i ], [ null, %c_getstr.exit.i ], [ null, %if.end58.i ], [ null, %if.then34.i ], [ null, %if.else.i.i ], [ null, %lor.lhs.false.i.i ], [ null, %sw.bb175 ], [ null, %c_getstr.exit.i708 ], [ null, %land.lhs.true.i710 ], [ null, %if.else.i690 ], [ null, %if.else.i.i697 ], [ null, %lor.lhs.false.i.i702 ], [ null, %sw.bb180 ], [ null, %if.then28.i756 ], [ null, %land.lhs.true23.i ], [ null, %if.end.i751 ], [ null, %lor.lhs.false.i743 ], [ null, %sw.bb185 ], [ null, %land.lhs.true15.i ], [ null, %lor.lhs.false.i799 ], [ null, %c_getstr.exit52.thread.i ], [ null, %sw.bb190 ], [ null, %if.then22.i843 ], [ null, %land.lhs.true18.i ], [ null, %if.end16.i841 ], [ null, %c_getstr.exit62.thread.i ], [ null, %sw.bb195 ], [ null, %c_getstr.exit.i881 ], [ null, %if.end22.i ], [ null, %if.end28.i ], [ null, %if.else.i862 ], [ null, %if.else.i.i869 ], [ null, %lor.lhs.false.i.i874 ], [ null, %sw.bb200 ], [ null, %c_getstr.exit.i932 ], [ null, %if.end22.i954 ], [ null, %if.end28.i956 ], [ null, %if.else.i913 ], [ null, %if.else.i.i920 ], [ null, %lor.lhs.false.i.i925 ], [ null, %sw.bb205 ], [ null, %if.else.i982 ], [ null, %c_getstr.exit.i1004 ], [ null, %if.then7.i1005 ], [ null, %if.end.i985 ], [ null, %if.else.i.i992 ], [ null, %lor.lhs.false.i.i997 ], [ null, %sw.bb210 ], [ null, %if.else.i1031 ], [ null, %if.end22.i1073 ], [ null, %if.end26.i1074 ], [ null, %if.then7.i1054 ], [ null, %sw.bb215 ], [ null, %if.else.i1096 ], [ null, %if.end19.i ], [ null, %sw.bb225 ], [ null, %sw.bb230 ], [ null, %if.else.i1208 ], [ null, %if.end84.i ], [ null, %if.end92.i ], [ null, %land.lhs.true59.i ], [ null, %sw.bb235 ], [ null, %if.end93.i ], [ null, %if.end96.i ], [ null, %land.lhs.true84.i ], [ null, %sw.bb240 ], [ null, %if.end62.i1377 ], [ null, %sw.bb245 ], [ null, %if.end9.i ]
  %call321 = call %struct.rtx_def* @expand_call(%union.tree_node* %exp, %struct.rtx_def* %target.addr.0, i32 %ignore) #5
  br label %return

return:                                           ; preds = %if.end45.i, %if.end.i594, %if.then13.i1490, %if.end9.i1483, %if.then.i1474, %expand_builtin_memcmp.exit.thread1556, %expand_builtin_strlen.exit.thread1537, %if.then79.i, %if.end38.i, %if.end38.i, %if.end38.i, %if.end38.i, %if.end38.i, %if.end38.i, %if.end38.i, %if.end38.i, %if.end38.i, %if.end31.i, %if.end30.i, %if.end.i568, %if.then.i560, %if.end.i555, %if.then.i546, %if.end.i541, %type_to_class.exit.i, %if.end16.i, %if.else10.i, %expand_builtin_apply_args_1.exit.i, %sw.bb26, %expand_builtin_mathfn.exit, %sw.bb274, %sw.bb269, %expand_builtin_setjmp.exit, %expand_builtin_memcmp.exit, %expand_builtin_strncmp.exit, %expand_builtin_strcmp.exit, %expand_builtin_bzero.exit, %sw.bb220, %expand_builtin_memcpy.exit, %expand_builtin_strrchr.exit, %expand_builtin_strchr.exit, %expand_builtin_strpbrk.exit, %expand_builtin_strstr.exit, %expand_builtin_strcspn.exit, %expand_builtin_strspn.exit, %expand_builtin_strncat.exit, %expand_builtin_strcat.exit, %expand_builtin_strncpy.exit, %expand_builtin_strcpy.exit, %expand_builtin_strlen.exit, %expand_builtin_alloca.exit, %sw.epilog320, %expand_builtin_prefetch.exit, %expand_builtin_va_copy.exit, %expand_builtin_va_end.exit, %expand_builtin_va_start.exit1436, %expand_builtin_va_start.exit, %sw.bb301, %sw.bb294, %sw.bb290, %sw.bb286, %sw.bb283, %sw.bb281, %sw.bb280, %sw.bb279, %sw.bb267, %if.end266, %if.then265, %cond.end147, %if.then128, %sw.bb54, %sw.bb50, %if.end49, %expand_builtin_apply.exit, %if.then34, %sw.bb, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call, %if.then ], [ %call321, %sw.epilog320 ], [ %731, %expand_builtin_prefetch.exit ], [ %693, %expand_builtin_va_copy.exit ], [ %666, %expand_builtin_va_end.exit ], [ %662, %expand_builtin_va_start.exit1436 ], [ %657, %expand_builtin_va_start.exit ], [ %call302, %sw.bb301 ], [ %653, %sw.bb294 ], [ %call293, %sw.bb290 ], [ %call289, %sw.bb286 ], [ %643, %sw.bb283 ], [ %call282, %sw.bb281 ], [ %640, %sw.bb280 ], [ %639, %sw.bb279 ], [ %638, %sw.bb267 ], [ %636, %if.then265 ], [ %637, %if.end266 ], [ %169, %if.then128 ], [ %173, %cond.end147 ], [ %call55, %sw.bb54 ], [ %call51, %sw.bb50 ], [ %127, %if.end49 ], [ %call147.i, %expand_builtin_apply.exit ], [ %58, %if.then34 ], [ %call13, %sw.bb ], [ %call46.i, %expand_builtin_mathfn.exit ], [ %call2.i580, %expand_builtin_alloca.exit ], [ %retval.0.i623, %expand_builtin_strlen.exit ], [ %call13.i640, %expand_builtin_strcpy.exit ], [ %retval.0.i682, %expand_builtin_strncpy.exit ], [ %call7.i711, %expand_builtin_strcat.exit ], [ %retval.0.i765, %expand_builtin_strncat.exit ], [ %retval.0.i801, %expand_builtin_strspn.exit ], [ %retval.0.i853, %expand_builtin_strcspn.exit ], [ %retval.0.i904, %expand_builtin_strstr.exit ], [ %retval.0.i971, %expand_builtin_strpbrk.exit ], [ %retval.0.i1020, %expand_builtin_strchr.exit ], [ %retval.0.i1084, %expand_builtin_strrchr.exit ], [ %retval.0.i1136, %expand_builtin_memcpy.exit ], [ %call221, %sw.bb220 ], [ %call11.i1146, %expand_builtin_bzero.exit ], [ %retval.0.i1220, %expand_builtin_strcmp.exit ], [ %retval.0.i1305, %expand_builtin_strncmp.exit ], [ %retval.0.i1389, %expand_builtin_memcmp.exit ], [ %target.addr.0.i, %expand_builtin_setjmp.exit ], [ %call270, %sw.bb269 ], [ %call275, %sw.bb274 ], [ %call62.i.i, %expand_builtin_apply_args_1.exit.i ], [ %35, %sw.bb26 ], [ %135, %if.end16.i ], [ %call13.i533, %if.else10.i ], [ %call1.i539, %type_to_class.exit.i ], [ %call2.i540, %if.end.i541 ], [ %141, %if.then.i546 ], [ %call3.i554, %if.end.i555 ], [ %145, %if.then.i560 ], [ %153, %if.end30.i ], [ %149, %if.end.i568 ], [ %call19.i571, %if.end31.i ], [ %call81.i, %if.then79.i ], [ %call19.i571, %if.end38.i ], [ %call19.i571, %if.end38.i ], [ %call19.i571, %if.end38.i ], [ %call19.i571, %if.end38.i ], [ %call19.i571, %if.end38.i ], [ %call19.i571, %if.end38.i ], [ %call19.i571, %if.end38.i ], [ %call19.i571, %if.end38.i ], [ %call19.i571, %if.end38.i ], [ %target, %expand_builtin_strlen.exit.thread1537 ], [ %target, %expand_builtin_memcmp.exit.thread1556 ], [ %695, %if.then.i1474 ], [ %call16.i1485, %if.then13.i1490 ], [ %call.i1482, %if.end9.i1483 ], [ %call5.i592, %if.end.i594 ], [ %call47.i1134, %if.end45.i ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) #3

declare %struct.rtx_def* @expand_call(%union.tree_node*, %struct.rtx_def*, i32) #1

; Function Attrs: nounwind uwtable
define internal i32 @validate_arglist(%union.tree_node* readonly %arglist, ...) #0 {
entry:
  %ap = alloca [1 x %struct.__va_list_tag], align 16
  %arraydecay1 = bitcast [1 x %struct.__va_list_tag]* %ap to i8*
  call void @llvm.va_start(i8* %arraydecay1)
  %gp_offset_p = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 0
  %0 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 3
  %overflow_arg_area_p = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 2
  %gp_offset.pre = load i32* %gp_offset_p, align 16
  br label %do.body

do.body:                                          ; preds = %sw.epilog, %entry
  %gp_offset = phi i32 [ %gp_offset.pre, %entry ], [ %gp_offset19, %sw.epilog ]
  %arglist.addr.0 = phi %union.tree_node* [ %arglist, %entry ], [ %8, %sw.epilog ]
  %fits_in_gp = icmp ult i32 %gp_offset, 41
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem

vaarg.in_reg:                                     ; preds = %do.body
  %reg_save_area = load i8** %0, align 16
  %1 = sext i32 %gp_offset to i64
  %2 = getelementptr i8* %reg_save_area, i64 %1
  %3 = add i32 %gp_offset, 8
  store i32 %3, i32* %gp_offset_p, align 16
  br label %vaarg.end

vaarg.in_mem:                                     ; preds = %do.body
  %overflow_arg_area = load i8** %overflow_arg_area_p, align 8
  %overflow_arg_area.next = getelementptr i8* %overflow_arg_area, i64 8
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8
  br label %vaarg.end

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %gp_offset19 = phi i32 [ %3, %vaarg.in_reg ], [ %gp_offset, %vaarg.in_mem ]
  %vaarg.addr.in = phi i8* [ %2, %vaarg.in_reg ], [ %overflow_arg_area, %vaarg.in_mem ]
  %vaarg.addr = bitcast i8* %vaarg.addr.in to i32*
  %4 = load i32* %vaarg.addr, align 4
  switch i32 %4, label %sw.default [
    i32 0, label %end
    i32 5, label %sw.bb3
  ]

sw.bb3:                                           ; preds = %vaarg.end
  %cmp = icmp eq %union.tree_node* %arglist.addr.0, null
  %conv = zext i1 %cmp to i32
  br label %end

sw.default:                                       ; preds = %vaarg.end
  %cmp4 = icmp eq %union.tree_node* %arglist.addr.0, null
  br i1 %cmp4, label %end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %sw.default
  %value = getelementptr inbounds %union.tree_node* %arglist.addr.0, i64 0, i32 0, i32 2
  %5 = bitcast i32* %value to %union.tree_node**
  %6 = load %union.tree_node** %5, align 8, !tbaa !26
  %type = getelementptr inbounds %union.tree_node* %6, i64 0, i32 0, i32 0, i32 1
  %7 = load %union.tree_node** %type, align 8, !tbaa !15
  %code7 = getelementptr inbounds %union.tree_node* %7, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code7, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp8 = icmp eq i32 %4, %bf.clear
  br i1 %cmp8, label %sw.epilog, label %end

sw.epilog:                                        ; preds = %lor.lhs.false
  %chain = getelementptr inbounds %union.tree_node* %arglist.addr.0, i64 0, i32 0, i32 0, i32 0
  %8 = load %union.tree_node** %chain, align 8, !tbaa !28
  br label %do.body

end:                                              ; preds = %vaarg.end, %lor.lhs.false, %sw.default, %sw.bb3
  %res.0 = phi i32 [ %conv, %sw.bb3 ], [ 1, %vaarg.end ], [ 0, %lor.lhs.false ], [ 0, %sw.default ]
  call void @llvm.va_end(i8* %arraydecay1)
  ret i32 %res.0
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @expand_builtin_next_arg(%union.tree_node* readonly %arglist) #0 {
entry:
  %0 = load %union.tree_node** @current_function_decl, align 8, !tbaa !5
  %type = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 1
  %1 = load %union.tree_node** %type, align 8, !tbaa !15
  %values = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 1
  %2 = load i8** %values, align 8
  %cmp = icmp eq i8* %2, null
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %3 = bitcast i8* %2 to %union.tree_node*
  %call = tail call %union.tree_node* @tree_last(%union.tree_node* %3) #5
  %value = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 2
  %4 = bitcast i32* %value to %union.tree_node**
  %5 = load %union.tree_node** %4, align 8, !tbaa !26
  %6 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 27), align 8, !tbaa !5
  %cmp4 = icmp eq %union.tree_node* %5, %6
  br i1 %cmp4, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %lor.lhs.false, %entry
  %7 = load %struct.function** @cfun, align 8, !tbaa !5
  %varargs = getelementptr inbounds %struct.function* %7, i64 0, i32 56
  %8 = bitcast i24* %varargs to i32*
  %bf.load = load i32* %8, align 8
  %bf.clear = and i32 %bf.load, 65536
  %tobool = icmp eq i32 %bf.clear, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([44 x i8]* @.str120, i64 0, i64 0)) #5
  %9 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !5
  br label %return

if.end:                                           ; preds = %land.lhs.true, %lor.lhs.false
  %tobool5 = icmp eq %union.tree_node* %arglist, null
  br i1 %tobool5, label %if.else, label %if.then6

if.then6:                                         ; preds = %if.end
  %10 = load %union.tree_node** @current_function_decl, align 8, !tbaa !5
  %arguments = getelementptr inbounds %union.tree_node* %10, i64 0, i32 0, i32 10
  %11 = load %union.tree_node** %arguments, align 8, !tbaa !52
  %call7 = tail call %union.tree_node* @tree_last(%union.tree_node* %11) #5
  br label %while.cond

while.cond:                                       ; preds = %while.cond, %while.cond, %while.cond, %while.cond, %if.then6
  %arglist.pn = phi %union.tree_node* [ %arglist, %if.then6 ], [ %arg.0, %while.cond ], [ %arg.0, %while.cond ], [ %arg.0, %while.cond ], [ %arg.0, %while.cond ]
  %arg.0.in.in = getelementptr inbounds %union.tree_node* %arglist.pn, i64 0, i32 0, i32 2
  %arg.0.in = bitcast i32* %arg.0.in.in to %union.tree_node**
  %arg.0 = load %union.tree_node** %arg.0.in, align 8
  %code = getelementptr inbounds %union.tree_node* %arg.0, i64 0, i32 0, i32 0, i32 2
  %bf.load11 = load i32* %code, align 8
  %bf.clear12 = and i32 %bf.load11, 255
  switch i32 %bf.clear12, label %lor.rhs [
    i32 115, label %while.cond
    i32 114, label %while.cond
    i32 116, label %while.cond
    i32 41, label %while.cond
  ]

lor.rhs:                                          ; preds = %while.cond
  %cmp31 = icmp eq %union.tree_node* %arg.0, %call7
  br i1 %cmp31, label %if.end41, label %if.then32

if.then32:                                        ; preds = %lor.rhs
  tail call void (i8*, ...)* @warning(i8* getelementptr inbounds ([55 x i8]* @.str121, i64 0, i64 0)) #5
  br label %if.end41

if.else:                                          ; preds = %if.end
  %12 = load %struct.function** @cfun, align 8, !tbaa !5
  %varargs34 = getelementptr inbounds %struct.function* %12, i64 0, i32 56
  %13 = bitcast i24* %varargs34 to i32*
  %bf.load35 = load i32* %13, align 8
  %bf.clear37 = and i32 %bf.load35, 65536
  %tobool38 = icmp eq i32 %bf.clear37, 0
  br i1 %tobool38, label %if.then39, label %if.end41

if.then39:                                        ; preds = %if.else
  tail call void (i8*, ...)* @warning(i8* getelementptr inbounds ([48 x i8]* @.str122, i64 0, i64 0)) #5
  br label %if.end41

if.end41:                                         ; preds = %lor.rhs, %if.else, %if.then39, %if.then32
  %14 = load i32* @target_flags, align 4, !tbaa !1
  %and = lshr i32 %14, 25
  %15 = and i32 %and, 1
  %16 = or i32 %15, 4
  %17 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 0), align 8, !tbaa !5
  %18 = load %struct.function** @cfun, align 8, !tbaa !5
  %internal_arg_pointer = getelementptr inbounds %struct.function* %18, i64 0, i32 15
  %19 = load %struct.rtx_def** %internal_arg_pointer, align 8, !tbaa !53
  %arg_offset_rtx = getelementptr inbounds %struct.function* %18, i64 0, i32 12
  %20 = load %struct.rtx_def** %arg_offset_rtx, align 8, !tbaa !54
  %call43 = tail call %struct.rtx_def* @expand_binop(i32 %16, %struct.optab* %17, %struct.rtx_def* %19, %struct.rtx_def* %20, %struct.rtx_def* null, i32 0, i32 3) #5
  br label %return

return:                                           ; preds = %if.end41, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call43, %if.end41 ], [ %9, %if.then ]
  ret %struct.rtx_def* %retval.0
}

declare void @make_decl_rtl(%union.tree_node*, i8*) #1

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @expand_builtin_memset(%union.tree_node* nocapture readonly %exp, %struct.rtx_def* %target, i32 %mode) #0 {
entry:
  %c = alloca i8, align 1
  %operands = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx = getelementptr inbounds i32* %operands, i64 2
  %0 = bitcast i32* %arrayidx to %union.tree_node**
  %1 = load %union.tree_node** %0, align 8, !tbaa !5
  %call = call i32 (%union.tree_node*, ...)* @validate_arglist(%union.tree_node* %1, i32 13, i32 6, i32 6, i32 5)
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %return, label %if.else

if.else:                                          ; preds = %entry
  %value = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 2
  %2 = bitcast i32* %value to %union.tree_node**
  %3 = load %union.tree_node** %2, align 8, !tbaa !26
  %chain = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load %union.tree_node** %chain, align 8, !tbaa !28
  %value3 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 2
  %5 = bitcast i32* %value3 to %union.tree_node**
  %6 = load %union.tree_node** %5, align 8, !tbaa !26
  %chain7 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0
  %7 = load %union.tree_node** %chain7, align 8, !tbaa !28
  %value9 = getelementptr inbounds %union.tree_node* %7, i64 0, i32 0, i32 2
  %8 = bitcast i32* %value9 to %union.tree_node**
  %9 = load %union.tree_node** %8, align 8, !tbaa !26
  %call10 = call fastcc i32 @get_pointer_alignment(%union.tree_node* %3)
  %cmp = icmp eq i32 %call10, 0
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %if.else
  %call12 = call i32 @host_integerp(%union.tree_node* %9, i32 1) #5
  %tobool13 = icmp eq i32 %call12, 0
  br i1 %tobool13, label %if.end19, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end
  %call14 = call i64 @tree_low_cst(%union.tree_node* %9, i32 1) #5
  %cmp15 = icmp eq i64 %call14, 0
  br i1 %cmp15, label %if.then16, label %if.end19

if.then16:                                        ; preds = %land.lhs.true
  %10 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !5
  %call17 = call %struct.rtx_def* @expand_expr(%union.tree_node* %6, %struct.rtx_def* %10, i32 0, i32 0) #5
  %call18 = call %struct.rtx_def* @expand_expr(%union.tree_node* %3, %struct.rtx_def* %target, i32 %mode, i32 0) #5
  br label %return

if.end19:                                         ; preds = %if.end, %land.lhs.true
  %code = getelementptr inbounds %union.tree_node* %6, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp21 = icmp eq i32 %bf.clear, 25
  br i1 %cmp21, label %if.end23, label %return

if.end23:                                         ; preds = %if.end19
  %call.i = call i32 @host_integerp(%union.tree_node* %6, i32 1) #5
  %tobool.i = icmp eq i32 %call.i, 0
  br i1 %tobool.i, label %return, label %if.end27

if.end27:                                         ; preds = %if.end23
  %call1.i = call i64 @tree_low_cst(%union.tree_node* %6, i32 1) #5
  %conv.i = trunc i64 %call1.i to i8
  store i8 %conv.i, i8* %c, align 1, !tbaa !9
  %tobool28 = icmp eq i8 %conv.i, 0
  br i1 %tobool28, label %if.end43, label %if.then29

if.then29:                                        ; preds = %if.end27
  %call30 = call i32 @host_integerp(%union.tree_node* %9, i32 1) #5
  %tobool31 = icmp eq i32 %call30, 0
  br i1 %tobool31, label %return, label %if.end33

if.end33:                                         ; preds = %if.then29
  %call34 = call i64 @tree_low_cst(%union.tree_node* %9, i32 1) #5
  %call35 = call i32 @can_store_by_pieces(i64 %call34, %struct.rtx_def* (i8*, i64, i32)* @builtin_memset_read_str, i8* %c, i32 %call10) #5
  %tobool36 = icmp eq i32 %call35, 0
  br i1 %tobool36, label %return, label %if.end38

if.end38:                                         ; preds = %if.end33
  %call39 = call fastcc %struct.rtx_def* @get_memory_rtx(%union.tree_node* %3)
  %call40 = call i64 @tree_low_cst(%union.tree_node* %9, i32 1) #5
  call void @store_by_pieces(%struct.rtx_def* %call39, i64 %call40, %struct.rtx_def* (i8*, i64, i32)* @builtin_memset_read_str, i8* %c, i32 %call10) #5
  %arrayidx41 = getelementptr inbounds %struct.rtx_def* %call39, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx41 to %struct.rtx_def**
  %11 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %call42 = call %struct.rtx_def* @force_operand(%struct.rtx_def* %11, %struct.rtx_def* null) #5
  br label %return

if.end43:                                         ; preds = %if.end27
  %call44 = call %struct.rtx_def* @expand_expr(%union.tree_node* %9, %struct.rtx_def* null, i32 0, i32 0) #5
  %call45 = call fastcc %struct.rtx_def* @get_memory_rtx(%union.tree_node* %3)
  call void @set_mem_align(%struct.rtx_def* %call45, i32 %call10) #5
  %call46 = call %struct.rtx_def* @clear_storage(%struct.rtx_def* %call45, %struct.rtx_def* %call44) #5
  %cmp47 = icmp eq %struct.rtx_def* %call46, null
  br i1 %cmp47, label %if.then48, label %return

if.then48:                                        ; preds = %if.end43
  %arrayidx50 = getelementptr inbounds %struct.rtx_def* %call45, i64 0, i32 1, i64 0
  %rtx51 = bitcast %union.rtunion_def* %arrayidx50 to %struct.rtx_def**
  %12 = load %struct.rtx_def** %rtx51, align 8, !tbaa !5
  %call52 = call %struct.rtx_def* @force_operand(%struct.rtx_def* %12, %struct.rtx_def* null) #5
  br label %return

return:                                           ; preds = %if.end23, %if.end43, %if.then48, %if.end33, %if.then29, %if.end19, %if.else, %entry, %if.end38, %if.then16
  %retval.0 = phi %struct.rtx_def* [ %call18, %if.then16 ], [ %call42, %if.end38 ], [ null, %entry ], [ null, %if.else ], [ null, %if.end19 ], [ null, %if.then29 ], [ null, %if.end33 ], [ %call52, %if.then48 ], [ %call46, %if.end43 ], [ null, %if.end23 ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @expand_builtin_fputs(%union.tree_node* readonly %arglist, i32 %ignore, i32 %unlocked) #0 {
entry:
  %offset_node.i = alloca %union.tree_node*, align 8
  %tobool = icmp ne i32 %unlocked, 0
  %0 = load %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*]* @built_in_decls, i64 0, i64 72), align 16, !tbaa !5
  %1 = load %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*]* @built_in_decls, i64 0, i64 65), align 8, !tbaa !5
  %cond = select i1 %tobool, %union.tree_node* %0, %union.tree_node* %1
  %2 = load %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*]* @built_in_decls, i64 0, i64 74), align 16, !tbaa !5
  %3 = load %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*]* @built_in_decls, i64 0, i64 67), align 8, !tbaa !5
  %cond5 = select i1 %tobool, %union.tree_node* %2, %union.tree_node* %3
  %tobool6 = icmp ne i32 %ignore, 0
  %tobool7 = icmp ne %union.tree_node* %cond, null
  %or.cond = and i1 %tobool6, %tobool7
  %tobool9 = icmp ne %union.tree_node* %cond5, null
  %or.cond55 = and i1 %or.cond, %tobool9
  br i1 %or.cond55, label %if.end, label %return

if.end:                                           ; preds = %entry
  %call = call i32 (%union.tree_node*, ...)* @validate_arglist(%union.tree_node* %arglist, i32 13, i32 13, i32 5)
  %tobool10 = icmp eq i32 %call, 0
  br i1 %tobool10, label %return, label %if.end12

if.end12:                                         ; preds = %if.end
  %value = getelementptr inbounds %union.tree_node* %arglist, i64 0, i32 0, i32 2
  %4 = bitcast i32* %value to %union.tree_node**
  %5 = load %union.tree_node** %4, align 8, !tbaa !26
  %call13 = call fastcc %union.tree_node* @c_strlen(%union.tree_node* %5)
  %tobool14 = icmp eq %union.tree_node* %call13, null
  br i1 %tobool14, label %return, label %lor.lhs.false15

lor.lhs.false15:                                  ; preds = %if.end12
  %code = getelementptr inbounds %union.tree_node* %call13, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 25
  br i1 %cmp, label %if.end17, label %return

if.end17:                                         ; preds = %lor.lhs.false15
  %call18 = call i32 @compare_tree_int(%union.tree_node* %call13, i64 1) #5
  switch i32 %call18, label %sw.default [
    i32 -1, label %sw.bb
    i32 0, label %sw.bb23
    i32 1, label %sw.bb37
  ]

sw.bb:                                            ; preds = %if.end17
  %chain = getelementptr inbounds %union.tree_node* %arglist, i64 0, i32 0, i32 0, i32 0
  %6 = load %union.tree_node** %chain, align 8, !tbaa !28
  %value21 = getelementptr inbounds %union.tree_node* %6, i64 0, i32 0, i32 2
  %7 = bitcast i32* %value21 to %union.tree_node**
  %8 = load %union.tree_node** %7, align 8, !tbaa !26
  %9 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !5
  %call22 = call %struct.rtx_def* @expand_expr(%union.tree_node* %8, %struct.rtx_def* %9, i32 0, i32 0) #5
  %10 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !5
  br label %return

sw.bb23:                                          ; preds = %if.end17
  %11 = load %union.tree_node** %4, align 8, !tbaa !26
  %12 = bitcast %union.tree_node** %offset_node.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %12) #5
  %call.i = call %union.tree_node* @string_constant(%union.tree_node* %11, %union.tree_node** %offset_node.i) #5
  %cmp.i = icmp eq %union.tree_node* %call.i, null
  br i1 %cmp.i, label %sw.bb37, label %if.end.i

if.end.i:                                         ; preds = %sw.bb23
  %13 = load %union.tree_node** %offset_node.i, align 8, !tbaa !5
  %cmp1.i = icmp eq %union.tree_node* %13, null
  br i1 %cmp1.i, label %if.then2.i, label %if.else.i

if.then2.i:                                       ; preds = %if.end.i
  %pointer.i = getelementptr inbounds %union.tree_node* %call.i, i64 0, i32 0, i32 4
  %14 = load %union.tree_node** %pointer.i, align 8
  %15 = bitcast %union.tree_node* %14 to i8*
  br label %c_getstr.exit

if.else.i:                                        ; preds = %if.end.i
  %call3.i = call i32 @host_integerp(%union.tree_node* %13, i32 1) #5
  %tobool.i = icmp eq i32 %call3.i, 0
  br i1 %tobool.i, label %sw.bb37, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %if.else.i
  %16 = load %union.tree_node** %offset_node.i, align 8, !tbaa !5
  %17 = getelementptr inbounds %union.tree_node* %call.i, i64 0, i32 0, i32 2
  %18 = load i32* %17, align 4, !tbaa !48
  %sub.i = add nsw i32 %18, -1
  %conv.i = sext i32 %sub.i to i64
  %call5.i = call i32 @compare_tree_int(%union.tree_node* %16, i64 %conv.i) #5
  %cmp6.i = icmp sgt i32 %call5.i, 0
  br i1 %cmp6.i, label %sw.bb37, label %if.end10.i

if.end10.i:                                       ; preds = %lor.lhs.false.i
  %pointer12.i = getelementptr inbounds %union.tree_node* %call.i, i64 0, i32 0, i32 4
  %19 = load %union.tree_node** %pointer12.i, align 8
  %20 = bitcast %union.tree_node* %19 to i8*
  %21 = load %union.tree_node** %offset_node.i, align 8, !tbaa !5
  %call13.i = call i64 @tree_low_cst(%union.tree_node* %21, i32 1) #5
  %add.ptr.i = getelementptr inbounds i8* %20, i64 %call13.i
  br label %c_getstr.exit

c_getstr.exit:                                    ; preds = %if.then2.i, %if.end10.i
  %retval.0.i = phi i8* [ %15, %if.then2.i ], [ %add.ptr.i, %if.end10.i ]
  call void @llvm.lifetime.end(i64 8, i8* %12) #5
  %cmp27 = icmp eq i8* %retval.0.i, null
  br i1 %cmp27, label %sw.bb37, label %if.then28

if.then28:                                        ; preds = %c_getstr.exit
  %chain30 = getelementptr inbounds %union.tree_node* %arglist, i64 0, i32 0, i32 0, i32 0
  %22 = load %union.tree_node** %chain30, align 8, !tbaa !28
  %value32 = getelementptr inbounds %union.tree_node* %22, i64 0, i32 0, i32 2
  %23 = bitcast i32* %value32 to %union.tree_node**
  %24 = load %union.tree_node** %23, align 8, !tbaa !26
  %call33 = call %union.tree_node* @build_tree_list(%union.tree_node* null, %union.tree_node* %24) #5
  %25 = load i8* %retval.0.i, align 1, !tbaa !9
  %conv = sext i8 %25 to i64
  %call34 = call %union.tree_node* @build_int_2_wide(i64 %conv, i64 0) #5
  %call35 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %call34, %union.tree_node* %call33) #5
  br label %sw.epilog

sw.bb37:                                          ; preds = %lor.lhs.false.i, %if.else.i, %sw.bb23, %c_getstr.exit, %if.end17
  %26 = load %union.tree_node** %4, align 8, !tbaa !26
  %chain41 = getelementptr inbounds %union.tree_node* %arglist, i64 0, i32 0, i32 0, i32 0
  %27 = load %union.tree_node** %chain41, align 8, !tbaa !28
  %value43 = getelementptr inbounds %union.tree_node* %27, i64 0, i32 0, i32 2
  %28 = bitcast i32* %value43 to %union.tree_node**
  %29 = load %union.tree_node** %28, align 8, !tbaa !26
  %call44 = call %union.tree_node* @build_tree_list(%union.tree_node* null, %union.tree_node* %29) #5
  %call45 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %call13, %union.tree_node* %call44) #5
  %30 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 16), align 8, !tbaa !5
  %call46 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %30, %union.tree_node* %call45) #5
  %call47 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %26, %union.tree_node* %call46) #5
  br label %sw.epilog

sw.default:                                       ; preds = %if.end17
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8]* @.str100, i64 0, i64 0), i32 3400, i8* getelementptr inbounds ([21 x i8]* @__FUNCTION__.expand_builtin_fputs, i64 0, i64 0)) #6
  unreachable

sw.epilog:                                        ; preds = %sw.bb37, %if.then28
  %fn.0 = phi %union.tree_node* [ %cond5, %sw.bb37 ], [ %cond, %if.then28 ]
  %arglist.addr.0 = phi %union.tree_node* [ %call47, %sw.bb37 ], [ %call35, %if.then28 ]
  %type.i = getelementptr inbounds %union.tree_node* %fn.0, i64 0, i32 0, i32 0, i32 1
  %31 = load %union.tree_node** %type.i, align 8, !tbaa !15
  %call.i74 = call %union.tree_node* @build_pointer_type(%union.tree_node* %31) #5
  %call1.i = call %union.tree_node* @build1(i32 121, %union.tree_node* %call.i74, %union.tree_node* %fn.0) #5
  %32 = load %union.tree_node** %type.i, align 8, !tbaa !15
  %type5.i = getelementptr inbounds %union.tree_node* %32, i64 0, i32 0, i32 0, i32 1
  %33 = load %union.tree_node** %type5.i, align 8, !tbaa !15
  %call6.i = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 53, %union.tree_node* %33, %union.tree_node* %call1.i, %union.tree_node* %arglist.addr.0) #5
  %side_effects_flag.i = getelementptr inbounds %union.tree_node* %call6.i, i64 0, i32 0, i32 0, i32 2
  %bf.load.i = load i32* %side_effects_flag.i, align 8
  %bf.set.i = or i32 %bf.load.i, 256
  store i32 %bf.set.i, i32* %side_effects_flag.i, align 8
  %call8.i = call %union.tree_node* @fold(%union.tree_node* %call6.i) #5
  %34 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !5
  %call54 = call %struct.rtx_def* @expand_expr(%union.tree_node* %call8.i, %struct.rtx_def* %34, i32 0, i32 0) #5
  br label %return

return:                                           ; preds = %if.end12, %lor.lhs.false15, %if.end, %entry, %sw.epilog, %sw.bb
  %retval.0 = phi %struct.rtx_def* [ %call54, %sw.epilog ], [ %10, %sw.bb ], [ null, %entry ], [ null, %if.end ], [ null, %lor.lhs.false15 ], [ null, %if.end12 ]
  ret %struct.rtx_def* %retval.0
}

declare void @expand_builtin_unwind_init() #1

declare %struct.rtx_def* @expand_builtin_dwarf_fp_regnum() #1

declare void @expand_builtin_init_dwarf_reg_sizes(%union.tree_node*) #1

declare %struct.rtx_def* @expand_builtin_frob_return_addr(%union.tree_node*) #1

declare %struct.rtx_def* @expand_builtin_extract_return_addr(%union.tree_node*) #1

declare void @expand_builtin_eh_return(%union.tree_node*, %union.tree_node*) #1

declare %struct.rtx_def* @expand_builtin_eh_return_data_regno(%union.tree_node*) #1

; Function Attrs: nounwind uwtable
define %union.tree_node* @fold_builtin(%union.tree_node* nocapture readonly %exp) #0 {
entry:
  %operands = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx = bitcast i32* %operands to %union.tree_node**
  %0 = load %union.tree_node** %arrayidx, align 8, !tbaa !5
  %operands3 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 2
  %arrayidx4 = bitcast i32* %operands3 to %union.tree_node**
  %1 = load %union.tree_node** %arrayidx4, align 8, !tbaa !5
  %arrayidx7 = getelementptr inbounds i32* %operands, i64 2
  %2 = bitcast i32* %arrayidx7 to %union.tree_node**
  %3 = load %union.tree_node** %2, align 8, !tbaa !5
  %built_in_class = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 5
  %4 = bitcast i48* %built_in_class to i64*
  %bf.load = load i64* %4, align 8
  %bf.cast = and i64 %bf.load, 1610612736
  %cmp = icmp eq i64 %bf.cast, 1073741824
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %u1 = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 6
  %f = bitcast %union.anon* %u1 to i32*
  %5 = load i32* %f, align 4, !tbaa !9
  switch i32 %5, label %sw.epilog [
    i32 51, label %sw.bb
    i32 48, label %sw.bb9
    i32 31, label %sw.bb11
  ]

sw.bb:                                            ; preds = %if.end
  %cmp.i = icmp eq %union.tree_node* %3, null
  br i1 %cmp.i, label %return, label %while.cond.preheader.i

while.cond.preheader.i:                           ; preds = %sw.bb
  %6 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !5
  %arglist.addr.0.in.in.phi.trans.insert.i = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 2
  %arglist.addr.0.in.phi.trans.insert.i = bitcast i32* %arglist.addr.0.in.in.phi.trans.insert.i to %union.tree_node**
  %arglist.addr.0.pre.i = load %union.tree_node** %arglist.addr.0.in.phi.trans.insert.i, align 8
  br label %while.cond.i

while.cond.i:                                     ; preds = %land.rhs.i, %while.cond.preheader.i
  %arglist.addr.0.i = phi %union.tree_node* [ %7, %land.rhs.i ], [ %arglist.addr.0.pre.i, %while.cond.preheader.i ]
  %code.i = getelementptr inbounds %union.tree_node* %arglist.addr.0.i, i64 0, i32 0, i32 0, i32 2
  %bf.load.i = load i32* %code.i, align 8
  %bf.clear.i = and i32 %bf.load.i, 255
  %bf.clear.off.i = add i32 %bf.clear.i, -114
  %switch.i = icmp ult i32 %bf.clear.off.i, 3
  br i1 %switch.i, label %land.lhs.true.i, label %while.end.i

land.lhs.true.i:                                  ; preds = %while.cond.i
  %operands.i = getelementptr inbounds %union.tree_node* %arglist.addr.0.i, i64 0, i32 0, i32 2
  %arrayidx.i = bitcast i32* %operands.i to %union.tree_node**
  %7 = load %union.tree_node** %arrayidx.i, align 8, !tbaa !5
  %cmp13.i = icmp eq %union.tree_node* %7, %6
  br i1 %cmp13.i, label %while.end.i, label %land.rhs.i

land.rhs.i:                                       ; preds = %land.lhs.true.i
  %type.i = getelementptr inbounds %union.tree_node* %arglist.addr.0.i, i64 0, i32 0, i32 0, i32 1
  %8 = load %union.tree_node** %type.i, align 8, !tbaa !15
  %type15.i = bitcast %union.tree_node* %8 to %struct.tree_type*
  %mode.i = getelementptr inbounds %struct.tree_type* %type15.i, i64 0, i32 6
  %bf.load16.i = load i32* %mode.i, align 4
  %type22.i = getelementptr inbounds %union.tree_node* %7, i64 0, i32 0, i32 0, i32 1
  %9 = load %union.tree_node** %type22.i, align 8, !tbaa !15
  %type23.i = bitcast %union.tree_node* %9 to %struct.tree_type*
  %mode24.i = getelementptr inbounds %struct.tree_type* %type23.i, i64 0, i32 6
  %bf.load25.i = load i32* %mode24.i, align 4
  %bf.lshr167.i = xor i32 %bf.load25.i, %bf.load16.i
  %10 = and i32 %bf.lshr167.i, 65024
  %cmp28.i = icmp eq i32 %10, 0
  br i1 %cmp28.i, label %while.cond.i, label %while.end.i

while.end.i:                                      ; preds = %land.rhs.i, %land.lhs.true.i, %while.cond.i
  %idxprom166.i = zext i32 %bf.clear.i to i64
  %arrayidx36.i = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom166.i
  %11 = load i8* %arrayidx36.i, align 1, !tbaa !9
  %cmp37.i = icmp eq i8 %11, 99
  %12 = and i32 %bf.load.i, 767
  %13 = icmp eq i32 %12, 558
  %or.cond.i = or i1 %cmp37.i, %13
  br i1 %or.cond.i, label %if.then68.i, label %lor.lhs.false51.i

lor.lhs.false51.i:                                ; preds = %while.end.i
  %cmp56.i = icmp eq i32 %bf.clear.i, 121
  br i1 %cmp56.i, label %land.lhs.true58.i, label %if.end69.i

land.lhs.true58.i:                                ; preds = %lor.lhs.false51.i
  %operands60.i = getelementptr inbounds %union.tree_node* %arglist.addr.0.i, i64 0, i32 0, i32 2
  %arrayidx61.i = bitcast i32* %operands60.i to %union.tree_node**
  %14 = load %union.tree_node** %arrayidx61.i, align 8, !tbaa !5
  %code63.i = getelementptr inbounds %union.tree_node* %14, i64 0, i32 0, i32 0, i32 2
  %bf.load64.i = load i32* %code63.i, align 8
  %bf.clear65.i = and i32 %bf.load64.i, 255
  %cmp66.i = icmp eq i32 %bf.clear65.i, 29
  br i1 %cmp66.i, label %if.then68.i, label %if.end69.i

if.then68.i:                                      ; preds = %land.lhs.true58.i, %while.end.i
  %15 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 12), align 8, !tbaa !5
  br label %return

if.end69.i:                                       ; preds = %land.lhs.true58.i, %lor.lhs.false51.i
  %bf.clear73.i = and i32 %bf.load.i, 256
  %16 = load i32* @cse_not_expected, align 4
  %17 = or i32 %16, %bf.clear73.i
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %lor.lhs.false77.i, label %if.then143.i

lor.lhs.false77.i:                                ; preds = %if.end69.i
  %type79.i = getelementptr inbounds %union.tree_node* %arglist.addr.0.i, i64 0, i32 0, i32 0, i32 1
  %19 = load %union.tree_node** %type79.i, align 8, !tbaa !15
  %code81.i = getelementptr inbounds %union.tree_node* %19, i64 0, i32 0, i32 0, i32 2
  %bf.load82.i = load i32* %code81.i, align 8
  %bf.clear83.i = and i32 %bf.load82.i, 255
  switch i32 %bf.clear83.i, label %lor.lhs.false131.i [
    i32 18, label %if.then143.i
    i32 20, label %if.then143.i
    i32 21, label %if.then143.i
    i32 22, label %if.then143.i
    i32 19, label %if.then143.i
    i32 13, label %if.then143.i
  ]

lor.lhs.false131.i:                               ; preds = %lor.lhs.false77.i
  %cmp138.i = icmp eq i32 %bf.clear83.i, 15
  %20 = load %struct.function** @cfun, align 8
  %cmp141.i = icmp eq %struct.function* %20, null
  %or.cond145.i = or i1 %cmp138.i, %cmp141.i
  br i1 %or.cond145.i, label %if.then143.i, label %return

if.then143.i:                                     ; preds = %lor.lhs.false131.i, %lor.lhs.false77.i, %lor.lhs.false77.i, %lor.lhs.false77.i, %lor.lhs.false77.i, %lor.lhs.false77.i, %lor.lhs.false77.i, %if.end69.i
  %21 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8, !tbaa !5
  br label %return

sw.bb9:                                           ; preds = %if.end
  %cmp.i25 = icmp eq %union.tree_node* %3, null
  br i1 %cmp.i25, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %sw.bb9
  %call.i = tail call %union.tree_node* @build_int_2_wide(i64 -1, i64 0) #5
  br label %return

if.end.i:                                         ; preds = %sw.bb9
  %value.i = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 2
  %22 = bitcast i32* %value.i to %union.tree_node**
  %23 = load %union.tree_node** %22, align 8, !tbaa !26
  %type.i26 = getelementptr inbounds %union.tree_node* %23, i64 0, i32 0, i32 0, i32 1
  %24 = load %union.tree_node** %type.i26, align 8, !tbaa !15
  %code.i.i = getelementptr inbounds %union.tree_node* %24, i64 0, i32 0, i32 0, i32 2
  %bf.load.i.i = load i32* %code.i.i, align 8
  %bf.clear.i.i = and i32 %bf.load.i.i, 255
  switch i32 %bf.clear.i.i, label %sw.default.i.i [
    i32 5, label %type_to_class.exit.i
    i32 6, label %sw.bb1.i.i
    i32 12, label %sw.bb2.i.i
    i32 10, label %sw.bb3.i.i
    i32 11, label %sw.bb4.i.i
    i32 13, label %sw.bb5.i.i
    i32 15, label %sw.bb6.i.i
    i32 14, label %sw.bb7.i.i
    i32 7, label %sw.bb8.i.i
    i32 8, label %sw.bb9.i.i
    i32 23, label %sw.bb10.i.i
    i32 16, label %sw.bb11.i.i
    i32 20, label %sw.bb12.i.i
    i32 21, label %sw.bb13.i.i
    i32 22, label %sw.bb13.i.i
    i32 18, label %sw.bb14.i.i
    i32 19, label %sw.bb18.i.i
    i32 17, label %sw.bb19.i.i
    i32 24, label %sw.bb20.i.i
  ]

sw.bb1.i.i:                                       ; preds = %if.end.i
  br label %type_to_class.exit.i

sw.bb2.i.i:                                       ; preds = %if.end.i
  br label %type_to_class.exit.i

sw.bb3.i.i:                                       ; preds = %if.end.i
  br label %type_to_class.exit.i

sw.bb4.i.i:                                       ; preds = %if.end.i
  br label %type_to_class.exit.i

sw.bb5.i.i:                                       ; preds = %if.end.i
  br label %type_to_class.exit.i

sw.bb6.i.i:                                       ; preds = %if.end.i
  br label %type_to_class.exit.i

sw.bb7.i.i:                                       ; preds = %if.end.i
  br label %type_to_class.exit.i

sw.bb8.i.i:                                       ; preds = %if.end.i
  br label %type_to_class.exit.i

sw.bb9.i.i:                                       ; preds = %if.end.i
  br label %type_to_class.exit.i

sw.bb10.i.i:                                      ; preds = %if.end.i
  br label %type_to_class.exit.i

sw.bb11.i.i:                                      ; preds = %if.end.i
  br label %type_to_class.exit.i

sw.bb12.i.i:                                      ; preds = %if.end.i
  br label %type_to_class.exit.i

sw.bb13.i.i:                                      ; preds = %if.end.i, %if.end.i
  br label %type_to_class.exit.i

sw.bb14.i.i:                                      ; preds = %if.end.i
  %type15.i.i = bitcast %union.tree_node* %24 to %struct.tree_type*
  %string_flag.i.i = getelementptr inbounds %struct.tree_type* %type15.i.i, i64 0, i32 6
  %bf.load16.i.i = load i32* %string_flag.i.i, align 4
  %bf.clear17.i.i = lshr i32 %bf.load16.i.i, 16
  %25 = and i32 %bf.clear17.i.i, 1
  %26 = or i32 %25, 14
  %phitmp4.i = zext i32 %26 to i64
  br label %type_to_class.exit.i

sw.bb18.i.i:                                      ; preds = %if.end.i
  br label %type_to_class.exit.i

sw.bb19.i.i:                                      ; preds = %if.end.i
  br label %type_to_class.exit.i

sw.bb20.i.i:                                      ; preds = %if.end.i
  br label %type_to_class.exit.i

sw.default.i.i:                                   ; preds = %if.end.i
  br label %type_to_class.exit.i

type_to_class.exit.i:                             ; preds = %sw.default.i.i, %sw.bb20.i.i, %sw.bb19.i.i, %sw.bb18.i.i, %sw.bb14.i.i, %sw.bb13.i.i, %sw.bb12.i.i, %sw.bb11.i.i, %sw.bb10.i.i, %sw.bb9.i.i, %sw.bb8.i.i, %sw.bb7.i.i, %sw.bb6.i.i, %sw.bb5.i.i, %sw.bb4.i.i, %sw.bb3.i.i, %sw.bb2.i.i, %sw.bb1.i.i, %if.end.i
  %retval.0.i.i = phi i64 [ -1, %sw.default.i.i ], [ 18, %sw.bb20.i.i ], [ 17, %sw.bb19.i.i ], [ 16, %sw.bb18.i.i ], [ %phitmp4.i, %sw.bb14.i.i ], [ 13, %sw.bb13.i.i ], [ 12, %sw.bb12.i.i ], [ 11, %sw.bb11.i.i ], [ 10, %sw.bb10.i.i ], [ 9, %sw.bb9.i.i ], [ 8, %sw.bb8.i.i ], [ 7, %sw.bb7.i.i ], [ 6, %sw.bb6.i.i ], [ 5, %sw.bb5.i.i ], [ 4, %sw.bb4.i.i ], [ 3, %sw.bb3.i.i ], [ 2, %sw.bb2.i.i ], [ 1, %sw.bb1.i.i ], [ 0, %if.end.i ]
  %call2.i = tail call %union.tree_node* @build_int_2_wide(i64 %retval.0.i.i, i64 0) #5
  br label %return

sw.bb11:                                          ; preds = %if.end
  %call12 = tail call i32 (%union.tree_node*, ...)* @validate_arglist(%union.tree_node* %3, i32 13, i32 5)
  %tobool = icmp eq i32 %call12, 0
  br i1 %tobool, label %sw.epilog, label %if.then13

if.then13:                                        ; preds = %sw.bb11
  %value = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 2
  %27 = bitcast i32* %value to %union.tree_node**
  %28 = load %union.tree_node** %27, align 8, !tbaa !26
  %call14 = tail call fastcc %union.tree_node* @c_strlen(%union.tree_node* %28)
  %cmp15 = icmp eq %union.tree_node* %call14, null
  br i1 %cmp15, label %sw.epilog, label %return

sw.epilog:                                        ; preds = %if.then13, %sw.bb11, %if.end
  br label %return

return:                                           ; preds = %type_to_class.exit.i, %if.then.i, %if.then143.i, %lor.lhs.false131.i, %if.then68.i, %sw.bb, %if.then13, %entry, %sw.epilog
  %retval.0 = phi %union.tree_node* [ null, %sw.epilog ], [ null, %entry ], [ %call14, %if.then13 ], [ %15, %if.then68.i ], [ %21, %if.then143.i ], [ null, %sw.bb ], [ null, %lor.lhs.false131.i ], [ %call.i, %if.then.i ], [ %call2.i, %type_to_class.exit.i ]
  ret %union.tree_node* %retval.0
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @c_strlen(%union.tree_node* %src) #0 {
entry:
  %offset_node = alloca %union.tree_node*, align 8
  %call = call %union.tree_node* @string_constant(%union.tree_node* %src, %union.tree_node** %offset_node) #5
  %cmp = icmp eq %union.tree_node* %call, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 2
  %1 = load i32* %0, align 4, !tbaa !48
  %sub = add nsw i32 %1, -1
  %pointer = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 4
  %2 = load %union.tree_node** %pointer, align 8
  %3 = bitcast %union.tree_node* %2 to i8*
  %4 = load %union.tree_node** %offset_node, align 8, !tbaa !5
  %tobool = icmp eq %union.tree_node* %4, null
  br i1 %tobool, label %if.end22, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end
  %code = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp2 = icmp eq i32 %bf.clear, 25
  br i1 %cmp2, label %if.else, label %for.cond.preheader

for.cond.preheader:                               ; preds = %land.lhs.true
  %cmp447 = icmp sgt i32 %sub, 0
  br i1 %cmp447, label %for.body, label %for.end

for.cond:                                         ; preds = %for.body
  %5 = trunc i64 %indvars.iv.next to i32
  %cmp4 = icmp slt i32 %5, %sub
  br i1 %cmp4, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond.preheader, %for.cond
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.cond ], [ 0, %for.cond.preheader ]
  %arrayidx = getelementptr inbounds i8* %3, i64 %indvars.iv
  %6 = load i8* %arrayidx, align 1, !tbaa !9
  %cmp5 = icmp eq i8 %6, 0
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  br i1 %cmp5, label %return, label %for.cond

for.end:                                          ; preds = %for.cond, %for.cond.preheader
  %conv9 = sext i32 %sub to i64
  %call10 = call %union.tree_node* @size_int_wide(i64 %conv9, i32 0) #5
  %7 = load %union.tree_node** %offset_node, align 8, !tbaa !5
  %call11 = call %union.tree_node* @size_diffop(%union.tree_node* %call10, %union.tree_node* %7) #5
  br label %return

if.else:                                          ; preds = %land.lhs.true
  %call16 = call i32 @host_integerp(%union.tree_node* %4, i32 0) #5
  %tobool17 = icmp eq i32 %call16, 0
  br i1 %tobool17, label %if.then28, label %if.else19

if.else19:                                        ; preds = %if.else
  %8 = load %union.tree_node** %offset_node, align 8, !tbaa !5
  %call20 = call i64 @tree_low_cst(%union.tree_node* %8, i32 0) #5
  br label %if.end22

if.end22:                                         ; preds = %if.end, %if.else19
  %offset.0 = phi i64 [ %call20, %if.else19 ], [ 0, %if.end ]
  %cmp23 = icmp slt i64 %offset.0, 0
  %conv25 = sext i32 %sub to i64
  %cmp26 = icmp sgt i64 %offset.0, %conv25
  %or.cond = or i1 %cmp23, %cmp26
  br i1 %or.cond, label %if.then28, label %if.end29

if.then28:                                        ; preds = %if.else, %if.end22
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([41 x i8]* @.str109, i64 0, i64 0)) #5
  br label %return

if.end29:                                         ; preds = %if.end22
  %add.ptr = getelementptr inbounds i8* %3, i64 %offset.0
  %call30 = call i64 @strlen(i8* %add.ptr) #5
  %call31 = call %union.tree_node* @size_int_wide(i64 %call30, i32 1) #5
  br label %return

return:                                           ; preds = %for.body, %entry, %if.end29, %if.then28, %for.end
  %retval.0 = phi %union.tree_node* [ %call11, %for.end ], [ null, %if.then28 ], [ %call31, %if.end29 ], [ null, %entry ], [ null, %for.body ]
  ret %union.tree_node* %retval.0
}

; Function Attrs: nounwind readnone uwtable
define void @default_init_builtins() #4 {
entry:
  ret void
}

; Function Attrs: nounwind readnone uwtable
define noalias %struct.rtx_def* @default_expand_builtin(%union.tree_node* nocapture readnone %exp, %struct.rtx_def* nocapture readnone %target, %struct.rtx_def* nocapture readnone %subtarget, i32 %mode, i32 %ignore) #4 {
entry:
  ret %struct.rtx_def* null
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #5

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #5

declare %union.tree_node* @string_constant(%union.tree_node*, %union.tree_node**) #1

declare %union.tree_node* @size_diffop(%union.tree_node*, %union.tree_node*) #1

declare i32 @host_integerp(%union.tree_node*, i32) #1

declare i64 @tree_low_cst(%union.tree_node*, i32) #1

; Function Attrs: nounwind readonly
declare i64 @strlen(i8* nocapture) #3

declare %union.tree_node* @build_int_2_wide(i64, i64) #1

declare %struct.rtx_def* @gen_prefetch(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @protect_from_queue(%struct.rtx_def*, i32) #1

declare i32 @side_effects_p(%struct.rtx_def*) #1

declare %struct.rtx_def* @emit_note(i8*, i32) #1

declare %struct.rtx_def* @gen_rtx_fmt_ee(i32, i32, %struct.rtx_def*, %struct.rtx_def*) #1

declare i64 @get_alias_set(%union.tree_node*) #1

declare void @set_mem_align(%struct.rtx_def*, i32) #1

declare %struct.rtx_def* @emit_block_move(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #1

declare void @ix86_va_start(i32, %union.tree_node*, %struct.rtx_def*) #1

declare i32 @compare_tree_int(%union.tree_node*, i64) #1

declare %union.tree_node* @build_tree_list(%union.tree_node*, %union.tree_node*) #1

declare %union.tree_node* @tree_cons(%union.tree_node*, %union.tree_node*, %union.tree_node*) #1

declare %union.tree_node* @build1(i32, %union.tree_node*, %union.tree_node*) #1

declare %union.tree_node* @build_pointer_type(%union.tree_node*) #1

declare %struct.rtx_def* @gen_reg_rtx(i32) #1

declare %struct.rtx_def* @gen_label_rtx() #1

declare %struct.rtx_def* @emit_jump_insn(%struct.rtx_def*) #1

declare %struct.rtx_def* @gen_jump(%struct.rtx_def*) #1

declare %struct.rtx_def* @emit_label(%struct.rtx_def*) #1

; Function Attrs: nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) #3

declare %union.tree_node* @build_qualified_type(%union.tree_node*, i32) #1

; Function Attrs: nounwind uwtable
define internal fastcc i32 @get_pointer_alignment(%union.tree_node* nocapture readonly %exp) #0 {
entry:
  %type = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 1
  %0 = load %union.tree_node** %type, align 8, !tbaa !15
  %code = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 13
  br i1 %cmp, label %if.end, label %return

if.end:                                           ; preds = %entry
  %type5 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 1
  %1 = load %union.tree_node** %type5, align 8, !tbaa !15
  %align7 = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 7
  %2 = bitcast %union.tree_node** %align7 to i32*
  %3 = load i32* %2, align 4, !tbaa !51
  %cmp8 = icmp ult i32 %3, 128
  %cond = select i1 %cmp8, i32 %3, i32 128
  br label %while.body.outer

while.body.outer:                                 ; preds = %while.end, %if.end
  %exp.addr.0.ph = phi %union.tree_node* [ %exp, %if.end ], [ %12, %while.end ]
  %max_align.addr.0.ph = phi i32 [ 128, %if.end ], [ %max_align.addr.1, %while.end ]
  %align.0.ph = phi i32 [ %cond, %if.end ], [ %align.0, %while.end ]
  br label %while.body

while.body:                                       ; preds = %while.body.outer, %if.end22
  %exp.addr.0 = phi %union.tree_node* [ %4, %if.end22 ], [ %exp.addr.0.ph, %while.body.outer ]
  %align.0 = phi i32 [ %cond33, %if.end22 ], [ %align.0.ph, %while.body.outer ]
  %code10 = getelementptr inbounds %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 0, i32 2
  %bf.load11 = load i32* %code10, align 8
  %bf.clear12 = and i32 %bf.load11, 255
  switch i32 %bf.clear12, label %return [
    i32 115, label %sw.bb
    i32 114, label %sw.bb
    i32 116, label %sw.bb
    i32 59, label %sw.bb34
    i32 121, label %sw.bb51
  ]

sw.bb:                                            ; preds = %while.body, %while.body, %while.body
  %operands = getelementptr inbounds %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 2
  %arrayidx = bitcast i32* %operands to %union.tree_node**
  %4 = load %union.tree_node** %arrayidx, align 8, !tbaa !5
  %type15 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 0, i32 1
  %5 = load %union.tree_node** %type15, align 8, !tbaa !15
  %code17 = getelementptr inbounds %union.tree_node* %5, i64 0, i32 0, i32 0, i32 2
  %bf.load18 = load i32* %code17, align 8
  %bf.clear19 = and i32 %bf.load18, 255
  %cmp20 = icmp eq i32 %bf.clear19, 13
  br i1 %cmp20, label %if.end22, label %return

if.end22:                                         ; preds = %sw.bb
  %type26 = getelementptr inbounds %union.tree_node* %5, i64 0, i32 0, i32 0, i32 1
  %6 = load %union.tree_node** %type26, align 8, !tbaa !15
  %align28 = getelementptr inbounds %union.tree_node* %6, i64 0, i32 0, i32 7
  %7 = bitcast %union.tree_node** %align28 to i32*
  %8 = load i32* %7, align 4, !tbaa !51
  %cmp29 = icmp ult i32 %8, %max_align.addr.0.ph
  %cond33 = select i1 %cmp29, i32 %8, i32 %max_align.addr.0.ph
  br label %while.body

sw.bb34:                                          ; preds = %while.body
  %operands36 = getelementptr inbounds %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 2
  %arrayidx37 = getelementptr inbounds i32* %operands36, i64 2
  %9 = bitcast i32* %arrayidx37 to %union.tree_node**
  %10 = load %union.tree_node** %9, align 8, !tbaa !5
  %call = tail call i32 @host_integerp(%union.tree_node* %10, i32 1) #5
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %return, label %while.cond40

while.cond40:                                     ; preds = %sw.bb34, %while.cond40
  %max_align.addr.1 = phi i32 [ %shr, %while.cond40 ], [ %max_align.addr.0.ph, %sw.bb34 ]
  %11 = load %union.tree_node** %9, align 8, !tbaa !5
  %call44 = tail call i64 @tree_low_cst(%union.tree_node* %11, i32 1) #5
  %div = lshr i32 %max_align.addr.1, 3
  %sub = add i32 %div, -1
  %conv = zext i32 %sub to i64
  %and = and i64 %conv, %call44
  %cmp45 = icmp eq i64 %and, 0
  %shr = lshr i32 %max_align.addr.1, 1
  br i1 %cmp45, label %while.end, label %while.cond40

while.end:                                        ; preds = %while.cond40
  %arrayidx50 = bitcast i32* %operands36 to %union.tree_node**
  %12 = load %union.tree_node** %arrayidx50, align 8, !tbaa !5
  br label %while.body.outer

sw.bb51:                                          ; preds = %while.body
  %operands53 = getelementptr inbounds %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 2
  %arrayidx54 = bitcast i32* %operands53 to %union.tree_node**
  %13 = load %union.tree_node** %arrayidx54, align 8, !tbaa !5
  %code56 = getelementptr inbounds %union.tree_node* %13, i64 0, i32 0, i32 0, i32 2
  %bf.load57 = load i32* %code56, align 8
  %bf.clear58 = and i32 %bf.load57, 255
  %cmp59 = icmp eq i32 %bf.clear58, 30
  br i1 %cmp59, label %if.end87, label %if.else

if.else:                                          ; preds = %sw.bb51
  %idxprom1 = zext i32 %bf.clear58 to i64
  %arrayidx66 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom1
  %14 = load i8* %arrayidx66, align 1, !tbaa !9
  switch i8 %14, label %if.end87 [
    i8 100, label %if.then70
    i8 99, label %if.then83
  ]

if.then70:                                        ; preds = %if.else
  %u1 = getelementptr inbounds %union.tree_node* %13, i64 0, i32 0, i32 6
  %15 = bitcast %union.anon* %u1 to i32*
  %bf.load71 = load i32* %15, align 4
  %bf.clear72 = and i32 %bf.load71, 16777215
  br label %if.end87

if.then83:                                        ; preds = %if.else
  %call84 = tail call i32 @ix86_constant_alignment(%union.tree_node* %13, i32 %align.0) #5
  br label %if.end87

if.end87:                                         ; preds = %if.else, %sw.bb51, %if.then70, %if.then83
  %align.1 = phi i32 [ %bf.clear72, %if.then70 ], [ %call84, %if.then83 ], [ 16, %sw.bb51 ], [ %align.0, %if.else ]
  %cmp88 = icmp ult i32 %align.1, %max_align.addr.0.ph
  %cond93 = select i1 %cmp88, i32 %align.1, i32 %max_align.addr.0.ph
  br label %return

return:                                           ; preds = %sw.bb34, %while.body, %sw.bb, %entry, %if.end87
  %retval.0 = phi i32 [ %cond93, %if.end87 ], [ 0, %entry ], [ %align.0, %sw.bb ], [ %align.0, %while.body ], [ %align.0, %sw.bb34 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @get_memory_rtx(%union.tree_node* %exp) #0 {
entry:
  %0 = load i32* @ptr_mode, align 4, !tbaa !9
  %call = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %exp, %struct.rtx_def* null, i32 %0, i32 1) #5
  %call1 = tail call %struct.rtx_def* @memory_address(i32 51, %struct.rtx_def* %call) #5
  %call2 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %call1) #5
  br label %while.cond

while.cond:                                       ; preds = %land.rhs, %entry
  %exp.addr.0 = phi %union.tree_node* [ %exp, %entry ], [ %1, %land.rhs ]
  %code = getelementptr inbounds %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %bf.clear.off = add i32 %bf.clear, -114
  %switch = icmp ult i32 %bf.clear.off, 3
  br i1 %switch, label %land.rhs, label %while.end

land.rhs:                                         ; preds = %while.cond
  %operands = getelementptr inbounds %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 2
  %arrayidx = bitcast i32* %operands to %union.tree_node**
  %1 = load %union.tree_node** %arrayidx, align 8, !tbaa !5
  %type = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 0, i32 1
  %2 = load %union.tree_node** %type, align 8, !tbaa !15
  %code17 = getelementptr inbounds %union.tree_node* %2, i64 0, i32 0, i32 0, i32 2
  %bf.load18 = load i32* %code17, align 8
  %3 = and i32 %bf.load18, 253
  %4 = icmp eq i32 %3, 13
  br i1 %4, label %while.cond, label %if.else

while.end:                                        ; preds = %while.cond
  %cmp38 = icmp eq i32 %bf.clear, 121
  br i1 %cmp38, label %if.then, label %if.else

if.then:                                          ; preds = %while.end
  %operands40 = getelementptr inbounds %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 2
  %arrayidx41 = bitcast i32* %operands40 to %union.tree_node**
  %5 = load %union.tree_node** %arrayidx41, align 8, !tbaa !5
  tail call void @set_mem_attributes(%struct.rtx_def* %call2, %union.tree_node* %5, i32 0) #5
  br label %if.end63

if.else:                                          ; preds = %land.rhs, %while.end
  %type43 = getelementptr inbounds %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 0, i32 1
  %6 = load %union.tree_node** %type43, align 8, !tbaa !15
  %code45 = getelementptr inbounds %union.tree_node* %6, i64 0, i32 0, i32 0, i32 2
  %bf.load46 = load i32* %code45, align 8
  %bf.clear47 = and i32 %bf.load46, 255
  switch i32 %bf.clear47, label %if.end63 [
    i32 13, label %if.then57
    i32 15, label %if.then57
  ]

if.then57:                                        ; preds = %if.else, %if.else
  %type61 = getelementptr inbounds %union.tree_node* %6, i64 0, i32 0, i32 0, i32 1
  %7 = load %union.tree_node** %type61, align 8, !tbaa !15
  %call62 = tail call %union.tree_node* @build1(i32 41, %union.tree_node* %7, %union.tree_node* %exp.addr.0) #5
  tail call void @set_mem_alias_set(%struct.rtx_def* %call2, i64 0) #5
  br label %if.end63

if.end63:                                         ; preds = %if.else, %if.then57, %if.then
  ret %struct.rtx_def* %call2
}

declare %struct.rtx_def* @gen_cmpstrsi(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @gen_rtx_CONST_INT(i32, i64) #1

declare %struct.rtx_def* @emit_library_call_value(%struct.rtx_def*, %struct.rtx_def*, i32, i32, i32, ...) #1

declare %struct.rtx_def* @convert_to_mode(i32, %struct.rtx_def*, i32) #1

declare void @convert_move(%struct.rtx_def*, %struct.rtx_def*, i32) #1

declare void @set_mem_attributes(%struct.rtx_def*, %union.tree_node*, i32) #1

declare i32 @ix86_constant_alignment(%union.tree_node*, i32) #1

declare %union.tree_node* @size_binop(i32, %union.tree_node*, %union.tree_node*) #1

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) #3

declare i32 @tree_int_cst_lt(%union.tree_node*, %union.tree_node*) #1

declare %union.tree_node* @chainon(%union.tree_node*, %union.tree_node*) #1

declare %union.tree_node* @convert(%union.tree_node*, %union.tree_node*) #1

declare i32 @can_store_by_pieces(i64, %struct.rtx_def* (i8*, i64, i32)*, i8*, i32) #1

; Function Attrs: nounwind uwtable
define internal %struct.rtx_def* @builtin_memset_read_str(i8* nocapture readonly %data, i64 %offset, i32 %mode) #0 {
entry:
  %idxprom = sext i32 %mode to i64
  %arrayidx = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom
  %0 = load i8* %arrayidx, align 1, !tbaa !9
  %conv = zext i8 %0 to i64
  %1 = alloca i8, i64 %conv, align 1
  %2 = load i8* %data, align 1, !tbaa !9
  call void @llvm.memset.p0i8.i64(i8* %1, i8 %2, i64 %conv, i32 1, i1 false)
  %call = call fastcc %struct.rtx_def* @c_readstr(i8* %1, i32 %mode)
  ret %struct.rtx_def* %call
}

declare void @store_by_pieces(%struct.rtx_def*, i64, %struct.rtx_def* (i8*, i64, i32)*, i8*, i32) #1

declare %struct.rtx_def* @clear_storage(%struct.rtx_def*, %struct.rtx_def*) #1

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #5

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @c_readstr(i8* nocapture readonly %str, i32 %mode) #0 {
entry:
  %c = alloca [2 x i64], align 16
  %idxprom = sext i32 %mode to i64
  %arrayidx = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom
  %0 = load i32* %arrayidx, align 4, !tbaa !9
  %cmp = icmp eq i32 %0, 1
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8]* @.str100, i64 0, i64 0), i32 330, i8* getelementptr inbounds ([10 x i8]* @__FUNCTION__.c_readstr, i64 0, i64 0)) #6
  unreachable

if.end:                                           ; preds = %entry
  %arrayidx1 = getelementptr inbounds [2 x i64]* %c, i64 0, i64 0
  %arrayidx2 = getelementptr inbounds [2 x i64]* %c, i64 0, i64 1
  %arrayidx4 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom
  %1 = bitcast [2 x i64]* %c to i8*
  call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 16, i32 16, i1 false)
  %2 = load i8* %arrayidx4, align 1, !tbaa !9
  %cmp530 = icmp eq i8 %2, 0
  br i1 %cmp530, label %for.end, label %for.body

for.body:                                         ; preds = %if.end, %if.end15
  %indvars.iv = phi i64 [ %indvars.iv.next, %if.end15 ], [ 0, %if.end ]
  %ch.031 = phi i64 [ %ch.1, %if.end15 ], [ 1, %if.end ]
  %3 = shl i64 %indvars.iv, 3
  %4 = trunc i64 %3 to i32
  %cmp7 = icmp ugt i32 %4, 128
  br i1 %cmp7, label %if.then9, label %if.end10

if.then9:                                         ; preds = %for.body
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8]* @.str100, i64 0, i64 0), i32 344, i8* getelementptr inbounds ([10 x i8]* @__FUNCTION__.c_readstr, i64 0, i64 0)) #6
  unreachable

if.end10:                                         ; preds = %for.body
  %tobool = icmp eq i64 %ch.031, 0
  br i1 %tobool, label %if.end15, label %if.then11

if.then11:                                        ; preds = %if.end10
  %arrayidx13 = getelementptr inbounds i8* %str, i64 %indvars.iv
  %5 = load i8* %arrayidx13, align 1, !tbaa !9
  %conv14 = zext i8 %5 to i64
  br label %if.end15

if.end15:                                         ; preds = %if.end10, %if.then11
  %ch.1 = phi i64 [ %conv14, %if.then11 ], [ 0, %if.end10 ]
  %rem = and i64 %3, 56
  %shl = shl i64 %ch.1, %rem
  %6 = lshr i64 %indvars.iv, 3
  %div = and i64 %6, 67108863
  %arrayidx17 = getelementptr inbounds [2 x i64]* %c, i64 0, i64 %div
  %7 = load i64* %arrayidx17, align 8, !tbaa !7
  %or = or i64 %7, %shl
  store i64 %or, i64* %arrayidx17, align 8, !tbaa !7
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %conv = zext i8 %2 to i32
  %8 = trunc i64 %indvars.iv.next to i32
  %cmp5 = icmp ult i32 %8, %conv
  br i1 %cmp5, label %for.body, label %for.cond.for.end_crit_edge

for.cond.for.end_crit_edge:                       ; preds = %if.end15
  %.pre = load i64* %arrayidx1, align 16, !tbaa !7
  %.pre34 = load i64* %arrayidx2, align 8, !tbaa !7
  br label %for.end

for.end:                                          ; preds = %if.end, %for.cond.for.end_crit_edge
  %9 = phi i64 [ 0, %if.end ], [ %.pre34, %for.cond.for.end_crit_edge ]
  %10 = phi i64 [ 0, %if.end ], [ %.pre, %for.cond.for.end_crit_edge ]
  %call = tail call %struct.rtx_def* @immed_double_const(i64 %10, i64 %9, i32 %mode) #5
  ret %struct.rtx_def* %call
}

declare %struct.rtx_def* @immed_double_const(i64, i64, i32) #1

; Function Attrs: nounwind uwtable
define internal %struct.rtx_def* @builtin_memcpy_read_str(i8* nocapture readonly %data, i64 %offset, i32 %mode) #0 {
entry:
  %cmp = icmp slt i64 %offset, 0
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %idxprom = sext i32 %mode to i64
  %arrayidx = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom
  %0 = load i8* %arrayidx, align 1, !tbaa !9
  %conv = zext i8 %0 to i64
  %add = add i64 %conv, %offset
  %call = tail call i64 @strlen(i8* %data) #5
  %add1 = add i64 %call, 1
  %cmp2 = icmp ugt i64 %add, %add1
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8]* @.str100, i64 0, i64 0), i32 1912, i8* getelementptr inbounds ([24 x i8]* @__FUNCTION__.builtin_memcpy_read_str, i64 0, i64 0)) #6
  unreachable

if.end:                                           ; preds = %lor.lhs.false
  %add.ptr = getelementptr inbounds i8* %data, i64 %offset
  %call4 = tail call fastcc %struct.rtx_def* @c_readstr(i8* %add.ptr, i32 %mode)
  ret %struct.rtx_def* %call4
}

; Function Attrs: nounwind readonly
declare i8* @strrchr(i8*, i32) #3

; Function Attrs: nounwind readonly
declare i8* @strchr(i8*, i32) #3

; Function Attrs: nounwind readonly
declare i8* @strpbrk(i8*, i8* nocapture) #3

; Function Attrs: nounwind readonly
declare i8* @strstr(i8*, i8* nocapture) #3

; Function Attrs: nounwind readonly
declare i64 @strcspn(i8* nocapture, i8* nocapture) #3

; Function Attrs: nounwind readonly
declare i64 @strspn(i8* nocapture, i8* nocapture) #3

; Function Attrs: nounwind uwtable
define internal %struct.rtx_def* @builtin_strncpy_read_str(i8* nocapture readonly %data, i64 %offset, i32 %mode) #0 {
entry:
  %call = tail call i64 @strlen(i8* %data) #5
  %cmp = icmp ult i64 %call, %offset
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !5
  br label %return

if.end:                                           ; preds = %entry
  %add.ptr = getelementptr inbounds i8* %data, i64 %offset
  %call1 = tail call fastcc %struct.rtx_def* @c_readstr(i8* %add.ptr, i32 %mode)
  br label %return

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi %struct.rtx_def* [ %0, %if.then ], [ %call1, %if.end ]
  ret %struct.rtx_def* %retval.0
}

declare %struct.rtx_def* @copy_to_mode_reg(i32, %struct.rtx_def*) #1

declare %struct.rtx_def* @emit_insn_after(%struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @emit_insn_before(%struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @expand_unop(i32, %struct.optab*, %struct.rtx_def*, %struct.rtx_def*, i32) #1

declare %struct.rtx_def* @allocate_dynamic_stack_space(%struct.rtx_def*, %struct.rtx_def*, i32) #1

declare %union.tree_node* @tree_last(%union.tree_node*) #1

declare %struct.rtx_def* @expand_binop(i32, %struct.optab*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32, i32) #1

; Function Attrs: nounwind uwtable
define internal fastcc i32 @apply_result_size() #0 {
entry:
  %0 = load i32* @apply_result_size.size, align 4, !tbaa !1
  %cmp = icmp slt i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end88

if.then:                                          ; preds = %entry
  store i32 0, i32* @apply_result_size.size, align 4, !tbaa !1
  %1 = load i32* getelementptr inbounds ([9 x i32]* @class_narrowest_mode, i64 0, i64 1), align 4, !tbaa !9
  %cmp4130 = icmp eq i32 %1, 6
  %2 = load i32* getelementptr inbounds ([9 x i32]* @class_narrowest_mode, i64 0, i64 2), align 4, !tbaa !9
  %cmp12133 = icmp eq i32 %2, 0
  %3 = load i32* getelementptr inbounds ([9 x i32]* @class_narrowest_mode, i64 0, i64 8), align 4, !tbaa !9
  %cmp31137 = icmp eq i32 %3, 0
  %4 = load i32* getelementptr inbounds ([9 x i32]* @class_narrowest_mode, i64 0, i64 7), align 4, !tbaa !9
  %cmp51141 = icmp eq i32 %4, 0
  br label %for.body

for.body:                                         ; preds = %if.then, %for.inc86
  %indvars.iv = phi i64 [ 0, %if.then ], [ %indvars.iv.next, %for.inc86 ]
  %5 = trunc i64 %indvars.iv to i32
  %call = tail call zeroext i1 @ix86_function_value_regno_p(i32 %5) #5
  br i1 %call, label %if.then2, label %if.else

if.then2:                                         ; preds = %for.body
  br i1 %cmp4130, label %if.then10, label %for.body5

for.body5:                                        ; preds = %if.then2, %for.body5
  %best_mode.0132 = phi i32 [ %best_mode.0.mode.0, %for.body5 ], [ 0, %if.then2 ]
  %mode.0131 = phi i32 [ %conv, %for.body5 ], [ %1, %if.then2 ]
  %call6 = tail call i32 @ix86_hard_regno_mode_ok(i32 %5, i32 %mode.0131) #5
  %tobool = icmp eq i32 %call6, 0
  %best_mode.0.mode.0 = select i1 %tobool, i32 %best_mode.0132, i32 %mode.0131
  %idxprom = sext i32 %mode.0131 to i64
  %arrayidx = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom
  %6 = load i8* %arrayidx, align 1, !tbaa !9
  %conv = zext i8 %6 to i32
  %cmp4 = icmp eq i8 %6, 6
  br i1 %cmp4, label %for.end, label %for.body5

for.end:                                          ; preds = %for.body5
  %cmp8 = icmp eq i32 %best_mode.0.mode.0, 0
  br i1 %cmp8, label %if.then10, label %if.end70

if.then10:                                        ; preds = %if.then2, %for.end
  br i1 %cmp12133, label %if.then29, label %for.body14

for.body14:                                       ; preds = %if.then10, %for.inc21
  %best_mode.2135 = phi i32 [ %best_mode.3, %for.inc21 ], [ 0, %if.then10 ]
  %mode.1134 = phi i32 [ %conv24, %for.inc21 ], [ %2, %if.then10 ]
  %call15 = tail call i32 @ix86_hard_regno_mode_ok(i32 %5, i32 %mode.1134) #5
  %tobool16 = icmp eq i32 %call15, 0
  br i1 %tobool16, label %for.inc21, label %land.lhs.true

land.lhs.true:                                    ; preds = %for.body14
  %call17 = tail call i32 @have_insn_for(i32 47, i32 %mode.1134) #5
  %tobool18 = icmp eq i32 %call17, 0
  %best_mode.2.mode.1 = select i1 %tobool18, i32 %best_mode.2135, i32 %mode.1134
  br label %for.inc21

for.inc21:                                        ; preds = %land.lhs.true, %for.body14
  %best_mode.3 = phi i32 [ %best_mode.2135, %for.body14 ], [ %best_mode.2.mode.1, %land.lhs.true ]
  %idxprom22 = sext i32 %mode.1134 to i64
  %arrayidx23 = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom22
  %7 = load i8* %arrayidx23, align 1, !tbaa !9
  %conv24 = zext i8 %7 to i32
  %cmp12 = icmp eq i8 %7, 0
  br i1 %cmp12, label %if.end26, label %for.body14

if.end26:                                         ; preds = %for.inc21
  %cmp27 = icmp eq i32 %best_mode.3, 0
  br i1 %cmp27, label %if.then29, label %if.end70

if.then29:                                        ; preds = %if.then10, %if.end26
  br i1 %cmp31137, label %if.then49, label %for.body33

for.body33:                                       ; preds = %if.then29, %for.inc41
  %best_mode.5139 = phi i32 [ %best_mode.6, %for.inc41 ], [ 0, %if.then29 ]
  %mode.2138 = phi i32 [ %conv44, %for.inc41 ], [ %3, %if.then29 ]
  %call34 = tail call i32 @ix86_hard_regno_mode_ok(i32 %5, i32 %mode.2138) #5
  %tobool35 = icmp eq i32 %call34, 0
  br i1 %tobool35, label %for.inc41, label %land.lhs.true36

land.lhs.true36:                                  ; preds = %for.body33
  %call37 = tail call i32 @have_insn_for(i32 47, i32 %mode.2138) #5
  %tobool38 = icmp eq i32 %call37, 0
  %best_mode.5.mode.2 = select i1 %tobool38, i32 %best_mode.5139, i32 %mode.2138
  br label %for.inc41

for.inc41:                                        ; preds = %land.lhs.true36, %for.body33
  %best_mode.6 = phi i32 [ %best_mode.5139, %for.body33 ], [ %best_mode.5.mode.2, %land.lhs.true36 ]
  %idxprom42 = sext i32 %mode.2138 to i64
  %arrayidx43 = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom42
  %8 = load i8* %arrayidx43, align 1, !tbaa !9
  %conv44 = zext i8 %8 to i32
  %cmp31 = icmp eq i8 %8, 0
  br i1 %cmp31, label %if.end46, label %for.body33

if.end46:                                         ; preds = %for.inc41
  %cmp47 = icmp eq i32 %best_mode.6, 0
  br i1 %cmp47, label %if.then49, label %if.end70

if.then49:                                        ; preds = %if.then29, %if.end46
  br i1 %cmp51141, label %if.then69, label %for.body53

for.body53:                                       ; preds = %if.then49, %for.inc61
  %best_mode.8143 = phi i32 [ %best_mode.9, %for.inc61 ], [ 0, %if.then49 ]
  %mode.3142 = phi i32 [ %conv64, %for.inc61 ], [ %4, %if.then49 ]
  %call54 = tail call i32 @ix86_hard_regno_mode_ok(i32 %5, i32 %mode.3142) #5
  %tobool55 = icmp eq i32 %call54, 0
  br i1 %tobool55, label %for.inc61, label %land.lhs.true56

land.lhs.true56:                                  ; preds = %for.body53
  %call57 = tail call i32 @have_insn_for(i32 47, i32 %mode.3142) #5
  %tobool58 = icmp eq i32 %call57, 0
  %best_mode.8.mode.3 = select i1 %tobool58, i32 %best_mode.8143, i32 %mode.3142
  br label %for.inc61

for.inc61:                                        ; preds = %land.lhs.true56, %for.body53
  %best_mode.9 = phi i32 [ %best_mode.8143, %for.body53 ], [ %best_mode.8.mode.3, %land.lhs.true56 ]
  %idxprom62 = sext i32 %mode.3142 to i64
  %arrayidx63 = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom62
  %9 = load i8* %arrayidx63, align 1, !tbaa !9
  %conv64 = zext i8 %9 to i32
  %cmp51 = icmp eq i8 %9, 0
  br i1 %cmp51, label %if.end66, label %for.body53

if.end66:                                         ; preds = %for.inc61
  %cmp67 = icmp eq i32 %best_mode.9, 0
  br i1 %cmp67, label %if.then69, label %if.end70

if.then69:                                        ; preds = %if.then49, %if.end66
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8]* @.str100, i64 0, i64 0), i32 1016, i8* getelementptr inbounds ([18 x i8]* @__FUNCTION__.apply_result_size, i64 0, i64 0)) #6
  unreachable

if.end70:                                         ; preds = %for.end, %if.end26, %if.end46, %if.end66
  %best_mode.10128 = phi i32 [ %best_mode.9, %if.end66 ], [ %best_mode.6, %if.end46 ], [ %best_mode.3, %if.end26 ], [ %best_mode.0.mode.0, %for.end ]
  %call71 = tail call i32 @get_mode_alignment(i32 %best_mode.10128) #5
  %div = lshr i32 %call71, 3
  %10 = load i32* @apply_result_size.size, align 4, !tbaa !1
  %rem = srem i32 %10, %div
  %cmp72 = icmp eq i32 %rem, 0
  br i1 %cmp72, label %if.end76, label %if.then74

if.then74:                                        ; preds = %if.end70
  %add = add i32 %div, -1
  %sub = add i32 %add, %10
  %div75 = srem i32 %sub, %div
  %mul = sub i32 %sub, %div75
  store i32 %mul, i32* @apply_result_size.size, align 4, !tbaa !1
  br label %if.end76

if.end76:                                         ; preds = %if.end70, %if.then74
  %11 = phi i32 [ %10, %if.end70 ], [ %mul, %if.then74 ]
  %idxprom77 = sext i32 %best_mode.10128 to i64
  %arrayidx78 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom77
  %12 = load i8* %arrayidx78, align 1, !tbaa !9
  %conv79 = zext i8 %12 to i32
  %add80 = add nsw i32 %11, %conv79
  store i32 %add80, i32* @apply_result_size.size, align 4, !tbaa !1
  %arrayidx82 = getelementptr inbounds [53 x i32]* @apply_result_mode, i64 0, i64 %indvars.iv
  store i32 %best_mode.10128, i32* %arrayidx82, align 4, !tbaa !9
  br label %for.inc86

if.else:                                          ; preds = %for.body
  %arrayidx84 = getelementptr inbounds [53 x i32]* @apply_result_mode, i64 0, i64 %indvars.iv
  store i32 0, i32* %arrayidx84, align 4, !tbaa !9
  br label %for.inc86

for.inc86:                                        ; preds = %if.end76, %if.else
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %13 = trunc i64 %indvars.iv.next to i32
  %cmp1 = icmp slt i32 %13, 53
  br i1 %cmp1, label %for.body, label %for.end87

for.end87:                                        ; preds = %for.inc86
  store i32 116, i32* @apply_result_size.size, align 4, !tbaa !1
  br label %if.end88

if.end88:                                         ; preds = %for.end87, %entry
  %14 = phi i32 [ 116, %for.end87 ], [ %0, %entry ]
  ret i32 %14
}

declare i32 @get_mode_alignment(i32) #1

declare %struct.rtx_def* @gen_rtx_REG(i32, i32) #1

declare %struct.rtx_def* @adjust_address_1(%struct.rtx_def*, i32, i64, i32, i32) #1

declare void @push_to_sequence(%struct.rtx_def*) #1

declare %struct.rtx_def* @emit_insns(%struct.rtx_def*) #1

declare void @expand_null_return() #1

declare zeroext i1 @ix86_function_value_regno_p(i32) #1

declare i32 @ix86_hard_regno_mode_ok(i32, i32) #1

declare i32 @have_insn_for(i32, i32) #1

declare %struct.rtx_def* @assign_stack_local(i32, i64, i32) #1

declare void @do_pending_stack_adjust() #1

declare void @use_reg(%struct.rtx_def**, %struct.rtx_def*) #1

declare %struct.rtx_def* @prepare_call_address(%struct.rtx_def*, %union.tree_node*, %struct.rtx_def**, i32, i32) #1

declare %struct.rtx_def* @emit_call_insn(%struct.rtx_def*) #1

declare %struct.rtx_def* @gen_untyped_call(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @copy_addr_to_reg(%struct.rtx_def*) #1

declare %struct.rtx_def* @gen_rtx_fmt_E(i32, i32, %struct.rtvec_def*) #1

declare %struct.rtvec_def* @gen_rtvec_v(i32, %struct.rtx_def**) #1

declare %struct.rtx_def* @emit_insns_before(%struct.rtx_def*, %struct.rtx_def*) #1

declare %union.tree_node* @copy_node(%union.tree_node*) #1

declare %union.tree_node* @save_expr(%union.tree_node*) #1

declare void @emit_cmp_and_jump_insns(%struct.rtx_def*, %struct.rtx_def*, i32, %struct.rtx_def*, i32, i32, %struct.rtx_def*) #1

declare zeroext i1 @ix86_function_arg_regno_p(i32) #1

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #5

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #5

attributes #0 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { noreturn nounwind }

!llvm.ident = !{!0}

!0 = metadata !{metadata !"clang version 3.5 (trunk)"}
!1 = metadata !{metadata !2, metadata !2, i64 0}
!2 = metadata !{metadata !"int", metadata !3, i64 0}
!3 = metadata !{metadata !"omnipotent char", metadata !4, i64 0}
!4 = metadata !{metadata !"Simple C/C++ TBAA"}
!5 = metadata !{metadata !6, metadata !6, i64 0}
!6 = metadata !{metadata !"any pointer", metadata !3, i64 0}
!7 = metadata !{metadata !8, metadata !8, i64 0}
!8 = metadata !{metadata !"long long", metadata !3, i64 0}
!9 = metadata !{metadata !3, metadata !3, i64 0}
!10 = metadata !{metadata !11, metadata !6, i64 16}
!11 = metadata !{metadata !"function", metadata !6, i64 0, metadata !6, i64 8, metadata !6, i64 16, metadata !6, i64 24, metadata !6, i64 32, metadata !6, i64 40, metadata !6, i64 48, metadata !6, i64 56, metadata !2, i64 64, metadata !2, i64 68, metadata !2, i64 72, metadata !2, i64 76, metadata !6, i64 80, metadata !12, i64 88, metadata !6, i64 120, metadata !6, i64 128, metadata !6, i64 136, metadata !6, i64 144, metadata !2, i64 152, metadata !6, i64 160, metadata !6, i64 168, metadata !6, i64 176, metadata !6, i64 184, metadata !6, i64 192, metadata !6, i64 200, metadata !6, i64 208, metadata !6, i64 216, metadata !6, i64 224, metadata !6, i64 232, metadata !6, i64 240, metadata !6, i64 248, metadata !6, i64 256, metadata !8, i64 264, metadata !6, i64 272, metadata !6, i64 280, metadata !6, i64 288, metadata !6, i64 296, metadata !2, i64 304, metadata !6, i64 312, metadata !6, i64 320, metadata !2, i64 328, metadata !2, i64 332, metadata !2, i64 336, metadata !6, i64 344, metadata !2, i64 352, metadata !2, i64 356, metadata !6, i64 360, metadata !6, i64 368, metadata !6, i64 376, metadata !2, i64 384, metadata !2, i64 388, metadata !6, i64 392, metadata !2, i64 400, metadata !2, i64 404, metadata !6, i64 408, metadata !6, i64 416, metadata !2, i64 424, metadata !2, i64 424, metadata !2, i64 424, metadata !2, i64 424, metadata !2, i64 424, metadata !2, i64 424, metadata !2, i64 424, metadata !2, i64 424, metadata !2, i64 425, metadata !2, i64 425, metadata !2, i64 425, metadata !2, i64 425, metadata !2, i64 425, metadata !2, i64 425, metadata !2, i64 425, metadata !2, i64 425, metadata !2, i64 426, metadata !2, i64 426, metadata !2, i64 426, metadata !2, i64 426, metadata !2, i64 426, metadata !2, i64 426, metadata !2, i64 426, metadata !2, i64 426}
!12 = metadata !{metadata !"ix86_args", metadata !2, i64 0, metadata !2, i64 4, metadata !2, i64 8, metadata !2, i64 12, metadata !2, i64 16, metadata !2, i64 20, metadata !2, i64 24}
!13 = metadata !{metadata !14, metadata !6, i64 16}
!14 = metadata !{metadata !"expr_status", metadata !2, i64 0, metadata !2, i64 4, metadata !2, i64 8, metadata !6, i64 16, metadata !6, i64 24, metadata !6, i64 32, metadata !6, i64 40}
!15 = metadata !{metadata !16, metadata !6, i64 8}
!16 = metadata !{metadata !"tree_common", metadata !6, i64 0, metadata !6, i64 8, metadata !3, i64 16, metadata !2, i64 17, metadata !2, i64 17, metadata !2, i64 17, metadata !2, i64 17, metadata !2, i64 17, metadata !2, i64 17, metadata !2, i64 17, metadata !2, i64 17, metadata !2, i64 18, metadata !2, i64 18, metadata !2, i64 18, metadata !2, i64 18, metadata !2, i64 18, metadata !2, i64 18, metadata !2, i64 18, metadata !2, i64 18, metadata !2, i64 19, metadata !2, i64 19, metadata !2, i64 19, metadata !2, i64 19, metadata !2, i64 19, metadata !2, i64 19, metadata !2, i64 19, metadata !2, i64 19}
!17 = metadata !{metadata !18, metadata !6, i64 128}
!18 = metadata !{metadata !"tree_type", metadata !16, i64 0, metadata !6, i64 24, metadata !6, i64 32, metadata !6, i64 40, metadata !6, i64 48, metadata !2, i64 56, metadata !2, i64 60, metadata !3, i64 61, metadata !2, i64 62, metadata !2, i64 62, metadata !2, i64 62, metadata !2, i64 62, metadata !2, i64 62, metadata !2, i64 62, metadata !2, i64 62, metadata !2, i64 63, metadata !2, i64 63, metadata !2, i64 63, metadata !2, i64 63, metadata !2, i64 63, metadata !2, i64 63, metadata !2, i64 63, metadata !2, i64 63, metadata !2, i64 64, metadata !6, i64 72, metadata !6, i64 80, metadata !3, i64 88, metadata !6, i64 96, metadata !6, i64 104, metadata !6, i64 112, metadata !6, i64 120, metadata !6, i64 128, metadata !6, i64 136, metadata !6, i64 144, metadata !8, i64 152, metadata !6, i64 160}
!19 = metadata !{metadata !18, metadata !6, i64 40}
!20 = metadata !{metadata !18, metadata !6, i64 96}
!21 = metadata !{metadata !22, metadata !6, i64 32}
!22 = metadata !{metadata !"tree_identifier", metadata !16, i64 0, metadata !23, i64 24}
!23 = metadata !{metadata !"ht_identifier", metadata !2, i64 0, metadata !6, i64 8}
!24 = metadata !{metadata !25, metadata !6, i64 72}
!25 = metadata !{metadata !"tree_decl", metadata !16, i64 0, metadata !6, i64 24, metadata !2, i64 32, metadata !2, i64 36, metadata !6, i64 40, metadata !3, i64 48, metadata !2, i64 49, metadata !2, i64 49, metadata !2, i64 49, metadata !2, i64 49, metadata !2, i64 49, metadata !2, i64 49, metadata !2, i64 49, metadata !2, i64 49, metadata !2, i64 50, metadata !2, i64 50, metadata !2, i64 50, metadata !2, i64 50, metadata !2, i64 50, metadata !2, i64 50, metadata !2, i64 50, metadata !2, i64 50, metadata !2, i64 51, metadata !2, i64 51, metadata !2, i64 51, metadata !2, i64 51, metadata !2, i64 51, metadata !3, i64 51, metadata !2, i64 51, metadata !2, i64 52, metadata !2, i64 52, metadata !2, i64 52, metadata !2, i64 52, metadata !2, i64 52, metadata !2, i64 52, metadata !2, i64 52, metadata !2, i64 53, metadata !2, i64 53, metadata !2, i64 53, metadata !2, i64 53, metadata !2, i64 53, metadata !3, i64 56, metadata !6, i64 64, metadata !6, i64 72, metadata !6, i64 80, metadata !6, i64 88, metadata !6, i64 96, metadata !6, i64 104, metadata !6, i64 112, metadata !6, i64 120, metadata !6, i64 128, metadata !6, i64 136, metadata !6, i64 144, metadata !6, i64 152, metadata !3, i64 160, metadata !6, i64 168, metadata !6, i64 176, metadata !6, i64 184, metadata !8, i64 192, metadata !6, i64 200}
!26 = metadata !{metadata !27, metadata !6, i64 32}
!27 = metadata !{metadata !"tree_list", metadata !16, i64 0, metadata !6, i64 24, metadata !6, i64 32}
!28 = metadata !{metadata !16, metadata !6, i64 0}
!29 = metadata !{metadata !30, metadata !2, i64 0}
!30 = metadata !{metadata !"rtvec_def", metadata !2, i64 0, metadata !3, i64 8}
!31 = metadata !{metadata !32, metadata !6, i64 312}
!32 = metadata !{metadata !"gcc_target", metadata !33, i64 0, metadata !35, i64 168, metadata !6, i64 240, metadata !6, i64 248, metadata !6, i64 256, metadata !6, i64 264, metadata !6, i64 272, metadata !6, i64 280, metadata !6, i64 288, metadata !6, i64 296, metadata !6, i64 304, metadata !6, i64 312, metadata !6, i64 320, metadata !36, i64 328, metadata !36, i64 329, metadata !6, i64 336}
!33 = metadata !{metadata !"asm_out", metadata !6, i64 0, metadata !6, i64 8, metadata !6, i64 16, metadata !34, i64 24, metadata !34, i64 56, metadata !6, i64 88, metadata !6, i64 96, metadata !6, i64 104, metadata !6, i64 112, metadata !6, i64 120, metadata !6, i64 128, metadata !6, i64 136, metadata !6, i64 144, metadata !6, i64 152, metadata !6, i64 160}
!34 = metadata !{metadata !"asm_int_op", metadata !6, i64 0, metadata !6, i64 8, metadata !6, i64 16, metadata !6, i64 24}
!35 = metadata !{metadata !"sched", metadata !6, i64 0, metadata !6, i64 8, metadata !6, i64 16, metadata !6, i64 24, metadata !6, i64 32, metadata !6, i64 40, metadata !6, i64 48, metadata !6, i64 56, metadata !6, i64 64}
!36 = metadata !{metadata !"_Bool", metadata !3, i64 0}
!37 = metadata !{metadata !14, metadata !2, i64 4}
!38 = metadata !{metadata !14, metadata !6, i64 24}
!39 = metadata !{metadata !25, metadata !6, i64 96}
!40 = metadata !{metadata !25, metadata !6, i64 144}
!41 = metadata !{metadata !42, metadata !3, i64 0}
!42 = metadata !{metadata !"", metadata !3, i64 0, metadata !6, i64 8}
!43 = metadata !{metadata !44, metadata !6, i64 24}
!44 = metadata !{metadata !"insn_data", metadata !6, i64 0, metadata !6, i64 8, metadata !6, i64 16, metadata !6, i64 24, metadata !3, i64 32, metadata !3, i64 33, metadata !3, i64 34, metadata !3, i64 35}
!45 = metadata !{metadata !46, metadata !6, i64 0}
!46 = metadata !{metadata !"insn_operand_data", metadata !6, i64 0, metadata !6, i64 8, metadata !3, i64 16, metadata !3, i64 18, metadata !3, i64 19}
!47 = metadata !{metadata !44, metadata !6, i64 16}
!48 = metadata !{metadata !49, metadata !2, i64 32}
!49 = metadata !{metadata !"tree_string", metadata !16, i64 0, metadata !6, i64 24, metadata !2, i64 32, metadata !6, i64 40}
!50 = metadata !{metadata !11, metadata !6, i64 176}
!51 = metadata !{metadata !18, metadata !2, i64 64}
!52 = metadata !{metadata !25, metadata !6, i64 88}
!53 = metadata !{metadata !11, metadata !6, i64 128}
!54 = metadata !{metadata !11, metadata !6, i64 80}
