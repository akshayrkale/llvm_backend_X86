; ModuleID = 'optabs.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.optab = type { i32, [59 x %struct.anon.3] }
%struct.anon.3 = type { i32, %struct.rtx_def* }
%struct.rtx_def = type { i32, [1 x %union.rtunion_def] }
%union.rtunion_def = type { i64 }
%struct.insn_data = type { i8*, i8*, %struct.rtx_def* (%struct.rtx_def*, ...)*, %struct.insn_operand_data*, i8, i8, i8, i8 }
%struct.insn_operand_data = type { i32 (%struct.rtx_def*, i32)*, i8*, i16, i8, i8 }
%struct.function = type { %struct.eh_status*, %struct.stmt_status*, %struct.expr_status*, %struct.emit_status*, %struct.varasm_status*, i8*, %union.tree_node*, %struct.function*, i32, i32, i32, i32, %struct.rtx_def*, %struct.ix86_args, %struct.rtx_def*, %struct.rtx_def*, i8*, %struct.initial_value_struct*, i32, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i64, %union.tree_node*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, %struct.rtx_def**, %struct.temp_slot*, i32, i32, i32, %struct.var_refs_queue*, i32, i32, i8*, %union.tree_node*, %struct.rtx_def*, i32, i32, %struct.machine_function*, i32, i32, %struct.language_function*, %struct.rtx_def*, i24 }
%struct.eh_status = type opaque
%struct.stmt_status = type opaque
%struct.expr_status = type { i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def* }
%struct.emit_status = type { i32, i32, %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.sequence_stack*, i32, i32, i8*, i32, i8*, %union.tree_node**, %struct.rtx_def** }
%struct.sequence_stack = type { %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.sequence_stack* }
%struct.varasm_status = type opaque
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.initial_value_struct = type opaque
%struct.temp_slot = type opaque
%struct.var_refs_queue = type { %struct.rtx_def*, i32, i32, %struct.var_refs_queue* }
%union.tree_node = type { %struct.tree_decl }
%struct.tree_decl = type { %struct.tree_common, i8*, i32, i32, %union.tree_node*, i48, %union.anon, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %union.anon.1, %union.tree_node*, %union.tree_node*, %union.tree_node*, i64, %struct.lang_decl* }
%struct.tree_common = type { %union.tree_node*, %union.tree_node*, i32 }
%union.anon = type { i64 }
%union.anon.1 = type { %struct.function* }
%struct.lang_decl = type opaque
%struct.machine_function = type opaque
%struct.language_function = type opaque
%struct.realvaluetype = type { [3 x i64] }
%struct.rtvec_def = type { i32, [1 x %struct.rtx_def*] }
%struct.mem_attrs = type { i64, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32 }

@code_to_optab = common global [154 x %struct.optab*] zeroinitializer, align 16
@.str = private unnamed_addr constant [9 x i8] c"optabs.c\00", align 1
@__FUNCTION__.expand_simple_binop = private unnamed_addr constant [20 x i8] c"expand_simple_binop\00", align 1
@mode_class = external constant [59 x i32]
@flag_force_mem = external global i32
@optab_table = common global [49 x %struct.optab*] zeroinitializer, align 16
@rtx_class = external constant [153 x i8]
@insn_data = external constant [0 x %struct.insn_data]
@mode_size = external constant [59 x i8]
@mode_wider_mode = external constant [59 x i8]
@target_flags = external global i32
@word_mode = external global i32
@mode_bitsize = external constant [59 x i16]
@const_tiny_rtx = external global [3 x [59 x %struct.rtx_def*]]
@const_int_rtx = external global [129 x %struct.rtx_def*]
@mode_unit_size = external constant [59 x i8]
@__FUNCTION__.expand_binop = private unnamed_addr constant [13 x i8] c"expand_binop\00", align 1
@flag_complex_divide_method = external global i32
@__FUNCTION__.expand_twoval_binop = private unnamed_addr constant [20 x i8] c"expand_twoval_binop\00", align 1
@__FUNCTION__.expand_simple_unop = private unnamed_addr constant [19 x i8] c"expand_simple_unop\00", align 1
@__FUNCTION__.expand_unop = private unnamed_addr constant [12 x i8] c"expand_unop\00", align 1
@flag_trapv = external global i32
@ix86_branch_cost = external global i32
@cfun = external global %struct.function*
@__FUNCTION__.expand_complex_abs = private unnamed_addr constant [19 x i8] c"expand_complex_abs\00", align 1
@reload_in_progress = external global i32
@__FUNCTION__.emit_no_conflict_block = private unnamed_addr constant [23 x i8] c"emit_no_conflict_block\00", align 1
@flag_non_call_exceptions = external global i32
@bcc_gen_fctn = common global [153 x %struct.rtx_def* (%struct.rtx_def*)*] zeroinitializer, align 16
@setcc_gen_code = common global [153 x i32] zeroinitializer, align 16
@__FUNCTION__.emit_cmp_and_jump_insns = private unnamed_addr constant [24 x i8] c"emit_cmp_and_jump_insns\00", align 1
@movcc_gen_code = common global [59 x i32] zeroinitializer, align 16
@__FUNCTION__.gen_add2_insn = private unnamed_addr constant [14 x i8] c"gen_add2_insn\00", align 1
@__FUNCTION__.have_add2_insn = private unnamed_addr constant [15 x i8] c"have_add2_insn\00", align 1
@__FUNCTION__.gen_sub2_insn = private unnamed_addr constant [14 x i8] c"gen_sub2_insn\00", align 1
@__FUNCTION__.have_sub2_insn = private unnamed_addr constant [15 x i8] c"have_sub2_insn\00", align 1
@__FUNCTION__.gen_move_insn = private unnamed_addr constant [14 x i8] c"gen_move_insn\00", align 1
@extendtab = common global [59 x [59 x [2 x i32]]] zeroinitializer, align 16
@__FUNCTION__.expand_float = private unnamed_addr constant [13 x i8] c"expand_float\00", align 1
@global_trees = external global [51 x %union.tree_node*]
@dconst1 = external global %struct.realvaluetype
@libfunc_table = common global [97 x %struct.rtx_def*] zeroinitializer, align 16
@__FUNCTION__.expand_fix = private unnamed_addr constant [11 x i8] c"expand_fix\00", align 1
@integer_types = external global [11 x %union.tree_node*]
@fixtab = common global [59 x [59 x [2 x i32]]] zeroinitializer, align 16
@fixtrunctab = common global [59 x [59 x [2 x i32]]] zeroinitializer, align 16
@floattab = common global [59 x [59 x [2 x i32]]] zeroinitializer, align 16
@movstr_optab = external global [59 x i32]
@clrstr_optab = external global [59 x i32]
@reload_out_optab = external global [59 x i32]
@reload_in_optab = external global [59 x i32]
@.str1 = private unnamed_addr constant [4 x i8] c"add\00", align 1
@.str2 = private unnamed_addr constant [5 x i8] c"addv\00", align 1
@.str3 = private unnamed_addr constant [4 x i8] c"sub\00", align 1
@.str4 = private unnamed_addr constant [5 x i8] c"subv\00", align 1
@.str5 = private unnamed_addr constant [4 x i8] c"mul\00", align 1
@.str6 = private unnamed_addr constant [5 x i8] c"mulv\00", align 1
@.str7 = private unnamed_addr constant [4 x i8] c"div\00", align 1
@.str8 = private unnamed_addr constant [5 x i8] c"divv\00", align 1
@.str9 = private unnamed_addr constant [5 x i8] c"udiv\00", align 1
@.str10 = private unnamed_addr constant [7 x i8] c"divmod\00", align 1
@.str11 = private unnamed_addr constant [8 x i8] c"udivmod\00", align 1
@.str12 = private unnamed_addr constant [4 x i8] c"mod\00", align 1
@.str13 = private unnamed_addr constant [5 x i8] c"umod\00", align 1
@.str14 = private unnamed_addr constant [7 x i8] c"ftrunc\00", align 1
@.str15 = private unnamed_addr constant [4 x i8] c"and\00", align 1
@.str16 = private unnamed_addr constant [4 x i8] c"ior\00", align 1
@.str17 = private unnamed_addr constant [4 x i8] c"xor\00", align 1
@.str18 = private unnamed_addr constant [5 x i8] c"ashl\00", align 1
@.str19 = private unnamed_addr constant [5 x i8] c"ashr\00", align 1
@.str20 = private unnamed_addr constant [5 x i8] c"lshr\00", align 1
@.str21 = private unnamed_addr constant [4 x i8] c"min\00", align 1
@.str22 = private unnamed_addr constant [4 x i8] c"max\00", align 1
@.str23 = private unnamed_addr constant [5 x i8] c"umin\00", align 1
@.str24 = private unnamed_addr constant [5 x i8] c"umax\00", align 1
@.str25 = private unnamed_addr constant [4 x i8] c"neg\00", align 1
@.str26 = private unnamed_addr constant [5 x i8] c"negv\00", align 1
@.str27 = private unnamed_addr constant [9 x i8] c"one_cmpl\00", align 1
@.str28 = private unnamed_addr constant [4 x i8] c"ffs\00", align 1
@.str29 = private unnamed_addr constant [4 x i8] c"cmp\00", align 1
@.str30 = private unnamed_addr constant [5 x i8] c"ucmp\00", align 1
@.str31 = private unnamed_addr constant [5 x i8] c"cabs\00", align 1
@.str32 = private unnamed_addr constant [14 x i8] c"__extendsfdf2\00", align 1
@.str33 = private unnamed_addr constant [14 x i8] c"__extendsfxf2\00", align 1
@.str34 = private unnamed_addr constant [14 x i8] c"__extendsftf2\00", align 1
@.str35 = private unnamed_addr constant [14 x i8] c"__extenddfxf2\00", align 1
@.str36 = private unnamed_addr constant [14 x i8] c"__extenddftf2\00", align 1
@.str37 = private unnamed_addr constant [13 x i8] c"__truncdfsf2\00", align 1
@.str38 = private unnamed_addr constant [13 x i8] c"__truncxfsf2\00", align 1
@.str39 = private unnamed_addr constant [13 x i8] c"__trunctfsf2\00", align 1
@.str40 = private unnamed_addr constant [13 x i8] c"__truncxfdf2\00", align 1
@.str41 = private unnamed_addr constant [13 x i8] c"__trunctfdf2\00", align 1
@.str42 = private unnamed_addr constant [6 x i8] c"abort\00", align 1
@.str43 = private unnamed_addr constant [7 x i8] c"memcpy\00", align 1
@.str44 = private unnamed_addr constant [8 x i8] c"memmove\00", align 1
@.str45 = private unnamed_addr constant [6 x i8] c"bcopy\00", align 1
@.str46 = private unnamed_addr constant [7 x i8] c"memcmp\00", align 1
@.str47 = private unnamed_addr constant [11 x i8] c"__gcc_bcmp\00", align 1
@.str48 = private unnamed_addr constant [7 x i8] c"memset\00", align 1
@.str49 = private unnamed_addr constant [6 x i8] c"bzero\00", align 1
@.str50 = private unnamed_addr constant [15 x i8] c"_Unwind_Resume\00", align 1
@.str51 = private unnamed_addr constant [17 x i8] c"__builtin_setjmp\00", align 1
@.str52 = private unnamed_addr constant [18 x i8] c"__builtin_longjmp\00", align 1
@.str53 = private unnamed_addr constant [22 x i8] c"_Unwind_SjLj_Register\00", align 1
@.str54 = private unnamed_addr constant [24 x i8] c"_Unwind_SjLj_Unregister\00", align 1
@.str55 = private unnamed_addr constant [8 x i8] c"__eqhf2\00", align 1
@.str56 = private unnamed_addr constant [8 x i8] c"__nehf2\00", align 1
@.str57 = private unnamed_addr constant [8 x i8] c"__gthf2\00", align 1
@.str58 = private unnamed_addr constant [8 x i8] c"__gehf2\00", align 1
@.str59 = private unnamed_addr constant [8 x i8] c"__lthf2\00", align 1
@.str60 = private unnamed_addr constant [8 x i8] c"__lehf2\00", align 1
@.str61 = private unnamed_addr constant [11 x i8] c"__unordhf2\00", align 1
@.str62 = private unnamed_addr constant [8 x i8] c"__eqsf2\00", align 1
@.str63 = private unnamed_addr constant [8 x i8] c"__nesf2\00", align 1
@.str64 = private unnamed_addr constant [8 x i8] c"__gtsf2\00", align 1
@.str65 = private unnamed_addr constant [8 x i8] c"__gesf2\00", align 1
@.str66 = private unnamed_addr constant [8 x i8] c"__ltsf2\00", align 1
@.str67 = private unnamed_addr constant [8 x i8] c"__lesf2\00", align 1
@.str68 = private unnamed_addr constant [11 x i8] c"__unordsf2\00", align 1
@.str69 = private unnamed_addr constant [8 x i8] c"__eqdf2\00", align 1
@.str70 = private unnamed_addr constant [8 x i8] c"__nedf2\00", align 1
@.str71 = private unnamed_addr constant [8 x i8] c"__gtdf2\00", align 1
@.str72 = private unnamed_addr constant [8 x i8] c"__gedf2\00", align 1
@.str73 = private unnamed_addr constant [8 x i8] c"__ltdf2\00", align 1
@.str74 = private unnamed_addr constant [8 x i8] c"__ledf2\00", align 1
@.str75 = private unnamed_addr constant [11 x i8] c"__unorddf2\00", align 1
@.str76 = private unnamed_addr constant [8 x i8] c"__eqxf2\00", align 1
@.str77 = private unnamed_addr constant [8 x i8] c"__nexf2\00", align 1
@.str78 = private unnamed_addr constant [8 x i8] c"__gtxf2\00", align 1
@.str79 = private unnamed_addr constant [8 x i8] c"__gexf2\00", align 1
@.str80 = private unnamed_addr constant [8 x i8] c"__ltxf2\00", align 1
@.str81 = private unnamed_addr constant [8 x i8] c"__lexf2\00", align 1
@.str82 = private unnamed_addr constant [11 x i8] c"__unordxf2\00", align 1
@.str83 = private unnamed_addr constant [8 x i8] c"__eqtf2\00", align 1
@.str84 = private unnamed_addr constant [8 x i8] c"__netf2\00", align 1
@.str85 = private unnamed_addr constant [8 x i8] c"__gttf2\00", align 1
@.str86 = private unnamed_addr constant [8 x i8] c"__getf2\00", align 1
@.str87 = private unnamed_addr constant [8 x i8] c"__lttf2\00", align 1
@.str88 = private unnamed_addr constant [8 x i8] c"__letf2\00", align 1
@.str89 = private unnamed_addr constant [11 x i8] c"__unordtf2\00", align 1
@.str90 = private unnamed_addr constant [12 x i8] c"__floatsisf\00", align 1
@.str91 = private unnamed_addr constant [12 x i8] c"__floatdisf\00", align 1
@.str92 = private unnamed_addr constant [12 x i8] c"__floattisf\00", align 1
@.str93 = private unnamed_addr constant [12 x i8] c"__floatsidf\00", align 1
@.str94 = private unnamed_addr constant [12 x i8] c"__floatdidf\00", align 1
@.str95 = private unnamed_addr constant [12 x i8] c"__floattidf\00", align 1
@.str96 = private unnamed_addr constant [12 x i8] c"__floatsixf\00", align 1
@.str97 = private unnamed_addr constant [12 x i8] c"__floatdixf\00", align 1
@.str98 = private unnamed_addr constant [12 x i8] c"__floattixf\00", align 1
@.str99 = private unnamed_addr constant [12 x i8] c"__floatsitf\00", align 1
@.str100 = private unnamed_addr constant [12 x i8] c"__floatditf\00", align 1
@.str101 = private unnamed_addr constant [12 x i8] c"__floattitf\00", align 1
@.str102 = private unnamed_addr constant [10 x i8] c"__fixsfsi\00", align 1
@.str103 = private unnamed_addr constant [10 x i8] c"__fixsfdi\00", align 1
@.str104 = private unnamed_addr constant [10 x i8] c"__fixsfti\00", align 1
@.str105 = private unnamed_addr constant [10 x i8] c"__fixdfsi\00", align 1
@.str106 = private unnamed_addr constant [10 x i8] c"__fixdfdi\00", align 1
@.str107 = private unnamed_addr constant [10 x i8] c"__fixdfti\00", align 1
@.str108 = private unnamed_addr constant [10 x i8] c"__fixxfsi\00", align 1
@.str109 = private unnamed_addr constant [10 x i8] c"__fixxfdi\00", align 1
@.str110 = private unnamed_addr constant [10 x i8] c"__fixxfti\00", align 1
@.str111 = private unnamed_addr constant [10 x i8] c"__fixtfsi\00", align 1
@.str112 = private unnamed_addr constant [10 x i8] c"__fixtfdi\00", align 1
@.str113 = private unnamed_addr constant [10 x i8] c"__fixtfti\00", align 1
@.str114 = private unnamed_addr constant [13 x i8] c"__fixunssfsi\00", align 1
@.str115 = private unnamed_addr constant [13 x i8] c"__fixunssfdi\00", align 1
@.str116 = private unnamed_addr constant [13 x i8] c"__fixunssfti\00", align 1
@.str117 = private unnamed_addr constant [13 x i8] c"__fixunsdfsi\00", align 1
@.str118 = private unnamed_addr constant [13 x i8] c"__fixunsdfdi\00", align 1
@.str119 = private unnamed_addr constant [13 x i8] c"__fixunsdfti\00", align 1
@.str120 = private unnamed_addr constant [13 x i8] c"__fixunsxfsi\00", align 1
@.str121 = private unnamed_addr constant [13 x i8] c"__fixunsxfdi\00", align 1
@.str122 = private unnamed_addr constant [13 x i8] c"__fixunsxfti\00", align 1
@.str123 = private unnamed_addr constant [13 x i8] c"__fixunstfsi\00", align 1
@.str124 = private unnamed_addr constant [13 x i8] c"__fixunstfdi\00", align 1
@.str125 = private unnamed_addr constant [13 x i8] c"__fixunstfti\00", align 1
@.str126 = private unnamed_addr constant [25 x i8] c"__cyg_profile_func_enter\00", align 1
@.str127 = private unnamed_addr constant [24 x i8] c"__cyg_profile_func_exit\00", align 1
@trap_rtx = internal global %struct.rtx_def* null, align 8
@mode_name = external constant [59 x i8*]
@_sch_tolower = external constant [256 x i8]
@__FUNCTION__.emit_cmp_and_jump_insn_1 = private unnamed_addr constant [25 x i8] c"emit_cmp_and_jump_insn_1\00", align 1
@__FUNCTION__.prepare_cmp_insn = private unnamed_addr constant [17 x i8] c"prepare_cmp_insn\00", align 1
@__FUNCTION__.prepare_float_lib_cmp = private unnamed_addr constant [22 x i8] c"prepare_float_lib_cmp\00", align 1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @expand_simple_binop(i32 %mode, i32 %code, %struct.rtx_def* %op0, %struct.rtx_def* %op1, %struct.rtx_def* %target, i32 %unsignedp, i32 %methods) #0 {
entry:
  %idxprom = sext i32 %code to i64
  %arrayidx = getelementptr inbounds [154 x %struct.optab*]* @code_to_optab, i64 0, i64 %idxprom
  %0 = load %struct.optab** %arrayidx, align 8, !tbaa !1
  %cmp = icmp eq %struct.optab* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 624, i8* getelementptr inbounds ([20 x i8]* @__FUNCTION__.expand_simple_binop, i64 0, i64 0)) #6
  unreachable

if.end:                                           ; preds = %entry
  %call = tail call %struct.rtx_def* @expand_binop(i32 %mode, %struct.optab* %0, %struct.rtx_def* %op0, %struct.rtx_def* %op1, %struct.rtx_def* %target, i32 %unsignedp, i32 %methods)
  ret %struct.rtx_def* %call
}

; Function Attrs: noreturn
declare void @fancy_abort(i8*, i32, i8*) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @expand_binop(i32 %mode, %struct.optab* readonly %binoptab, %struct.rtx_def* %op0, %struct.rtx_def* %op1, %struct.rtx_def* %target, i32 %unsignedp, i32 %methods) #0 {
entry:
  %idxprom = sext i32 %mode to i64
  %cmp161 = icmp eq i32 %methods, 4
  %arrayidx236 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom
  br label %tailrecurse

tailrecurse:                                      ; preds = %if.then336, %entry
  %binoptab.tr = phi %struct.optab* [ %binoptab, %entry ], [ %binoptab.addr.0, %if.then336 ]
  %op0.tr = phi %struct.rtx_def* [ %op0, %entry ], [ %xop0.0, %if.then336 ]
  %op1.tr = phi %struct.rtx_def* [ %op1, %entry ], [ %xop1.0, %if.then336 ]
  %target.tr = phi %struct.rtx_def* [ %target, %entry ], [ null, %if.then336 ]
  %code = getelementptr inbounds %struct.optab* %binoptab.tr, i64 0, i32 0
  %0 = load i32* %code, align 4, !tbaa !5
  %switch.tableidx = add i32 %0, -87
  %1 = icmp ult i32 %switch.tableidx, 5
  %call = tail call %struct.rtx_def* @get_last_insn() #3
  %call14 = tail call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %op0.tr, i32 0) #3
  %call15 = tail call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %op1.tr, i32 0) #3
  %tobool = icmp eq %struct.rtx_def* %target.tr, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %tailrecurse
  %call16 = tail call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %target.tr, i32 1) #3
  br label %if.end

if.end:                                           ; preds = %tailrecurse, %if.then
  %target.addr.0 = phi %struct.rtx_def* [ %call16, %if.then ], [ null, %tailrecurse ]
  %2 = load i32* @flag_force_mem, align 4, !tbaa !7
  %tobool17 = icmp eq i32 %2, 0
  br i1 %tobool17, label %if.end21, label %if.then18

if.then18:                                        ; preds = %if.end
  %call19 = tail call %struct.rtx_def* @force_not_mem(%struct.rtx_def* %call14) #3
  %call20 = tail call %struct.rtx_def* @force_not_mem(%struct.rtx_def* %call15) #3
  br label %if.end21

if.end21:                                         ; preds = %if.end, %if.then18
  %op1.addr.0 = phi %struct.rtx_def* [ %call20, %if.then18 ], [ %call15, %if.end ]
  %op0.addr.0 = phi %struct.rtx_def* [ %call19, %if.then18 ], [ %call14, %if.end ]
  %3 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 2), align 16, !tbaa !1
  %cmp22 = icmp eq %struct.optab* %3, %binoptab.tr
  br i1 %cmp22, label %land.lhs.true, label %if.end26

land.lhs.true:                                    ; preds = %if.end21
  %4 = getelementptr inbounds %struct.rtx_def* %op1.addr.0, i64 0, i32 0
  %bf.load = load i32* %4, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp23 = icmp eq i32 %bf.clear, 54
  br i1 %cmp23, label %if.then24, label %if.end26

if.then24:                                        ; preds = %land.lhs.true
  %call25 = tail call %struct.rtx_def* @negate_rtx(i32 %mode, %struct.rtx_def* %op1.addr.0) #3
  %5 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 0), align 16, !tbaa !1
  br label %if.end26

if.end26:                                         ; preds = %if.then24, %land.lhs.true, %if.end21
  %op1.addr.1 = phi %struct.rtx_def* [ %call25, %if.then24 ], [ %op1.addr.0, %land.lhs.true ], [ %op1.addr.0, %if.end21 ]
  %binoptab.addr.0 = phi %struct.optab* [ %5, %if.then24 ], [ %binoptab.tr, %land.lhs.true ], [ %binoptab.tr, %if.end21 ]
  %6 = getelementptr inbounds %struct.rtx_def* %op0.addr.0, i64 0, i32 0
  %bf.load27 = load i32* %6, align 8
  %bf.clear28 = and i32 %bf.load27, 65535
  switch i32 %bf.clear28, label %if.end67 [
    i32 67, label %land.lhs.true58
    i32 68, label %land.lhs.true58
    i32 54, label %land.lhs.true58
    i32 55, label %land.lhs.true58
    i32 58, label %land.lhs.true58
    i32 134, label %land.lhs.true58
    i32 56, label %land.lhs.true58
    i32 140, label %land.lhs.true58
  ]

land.lhs.true58:                                  ; preds = %if.end26, %if.end26, %if.end26, %if.end26, %if.end26, %if.end26, %if.end26, %if.end26
  %call59 = tail call i32 @preserve_subexpressions_p() #3
  %tobool60 = icmp eq i32 %call59, 0
  br i1 %tobool60, label %if.end67, label %land.lhs.true61

land.lhs.true61:                                  ; preds = %land.lhs.true58
  %code62 = getelementptr inbounds %struct.optab* %binoptab.addr.0, i64 0, i32 0
  %7 = load i32* %code62, align 4, !tbaa !5
  %call63 = tail call i32 @rtx_cost(%struct.rtx_def* %op0.addr.0, i32 %7) #3
  %cmp64 = icmp sgt i32 %call63, 4
  br i1 %cmp64, label %if.then65, label %if.end67

if.then65:                                        ; preds = %land.lhs.true61
  %call66 = tail call %struct.rtx_def* @force_reg(i32 %mode, %struct.rtx_def* %op0.addr.0) #3
  br label %if.end67

if.end67:                                         ; preds = %if.end26, %land.lhs.true58, %if.then65, %land.lhs.true61
  %op0.addr.1 = phi %struct.rtx_def* [ %call66, %if.then65 ], [ %op0.addr.0, %land.lhs.true61 ], [ %op0.addr.0, %land.lhs.true58 ], [ %op0.addr.0, %if.end26 ]
  %8 = getelementptr inbounds %struct.rtx_def* %op1.addr.1, i64 0, i32 0
  %bf.load68 = load i32* %8, align 8
  %bf.clear69 = and i32 %bf.load68, 65535
  switch i32 %bf.clear69, label %if.end110 [
    i32 67, label %land.lhs.true99
    i32 68, label %land.lhs.true99
    i32 54, label %land.lhs.true99
    i32 55, label %land.lhs.true99
    i32 58, label %land.lhs.true99
    i32 134, label %land.lhs.true99
    i32 56, label %land.lhs.true99
    i32 140, label %land.lhs.true99
  ]

land.lhs.true99:                                  ; preds = %if.end67, %if.end67, %if.end67, %if.end67, %if.end67, %if.end67, %if.end67, %if.end67
  %call100 = tail call i32 @preserve_subexpressions_p() #3
  %tobool101 = icmp eq i32 %call100, 0
  %or.cond1778 = or i1 %tobool101, %1
  br i1 %or.cond1778, label %if.end110, label %land.lhs.true104

land.lhs.true104:                                 ; preds = %land.lhs.true99
  %code105 = getelementptr inbounds %struct.optab* %binoptab.addr.0, i64 0, i32 0
  %9 = load i32* %code105, align 4, !tbaa !5
  %call106 = tail call i32 @rtx_cost(%struct.rtx_def* %op1.addr.1, i32 %9) #3
  %cmp107 = icmp sgt i32 %call106, 4
  br i1 %cmp107, label %if.then108, label %if.end110

if.then108:                                       ; preds = %land.lhs.true104
  %call109 = tail call %struct.rtx_def* @force_reg(i32 %mode, %struct.rtx_def* %op1.addr.1) #3
  br label %if.end110

if.end110:                                        ; preds = %if.end67, %land.lhs.true99, %if.then108, %land.lhs.true104
  %op1.addr.2 = phi %struct.rtx_def* [ %op1.addr.1, %land.lhs.true99 ], [ %call109, %if.then108 ], [ %op1.addr.1, %land.lhs.true104 ], [ %op1.addr.1, %if.end67 ]
  %call111 = tail call %struct.rtx_def* @get_last_insn() #3
  %code112 = getelementptr inbounds %struct.optab* %binoptab.addr.0, i64 0, i32 0
  %10 = load i32* %code112, align 4, !tbaa !5
  %idxprom113 = sext i32 %10 to i64
  %arrayidx114 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom113
  %11 = load i8* %arrayidx114, align 1, !tbaa !9
  %cmp115 = icmp eq i8 %11, 99
  %12 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 8), align 16
  %cmp118 = icmp eq %struct.optab* %binoptab.addr.0, %12
  %or.cond = or i1 %cmp115, %cmp118
  %13 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 9), align 8
  %cmp121 = icmp eq %struct.optab* %binoptab.addr.0, %13
  %or.cond2706 = or i1 %or.cond, %cmp121
  %14 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 6), align 16
  %cmp124 = icmp eq %struct.optab* %binoptab.addr.0, %14
  %or.cond2707 = or i1 %or.cond2706, %cmp124
  %15 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 7), align 8
  %cmp127 = icmp eq %struct.optab* %binoptab.addr.0, %15
  %or.cond2708 = or i1 %or.cond2707, %cmp127
  br i1 %or.cond2708, label %if.then129, label %if.end160

if.then129:                                       ; preds = %if.end110
  %cmp130 = icmp eq %struct.rtx_def* %target.addr.0, null
  br i1 %cmp130, label %cond.true137, label %lor.lhs.false132

lor.lhs.false132:                                 ; preds = %if.then129
  %16 = getelementptr inbounds %struct.rtx_def* %target.addr.0, i64 0, i32 0
  %bf.load133 = load i32* %16, align 8
  %bf.clear134 = and i32 %bf.load133, 65535
  %cmp135 = icmp eq i32 %bf.clear134, 61
  br i1 %cmp135, label %cond.true137, label %cond.false150

cond.true137:                                     ; preds = %lor.lhs.false132, %if.then129
  %17 = getelementptr inbounds %struct.rtx_def* %op1.addr.2, i64 0, i32 0
  %bf.load138 = load i32* %17, align 8
  %bf.clear139 = and i32 %bf.load138, 65535
  %cmp140 = icmp eq i32 %bf.clear139, 61
  br i1 %cmp140, label %land.lhs.true142, label %lor.lhs.false147

land.lhs.true142:                                 ; preds = %cond.true137
  %18 = getelementptr inbounds %struct.rtx_def* %op0.addr.1, i64 0, i32 0
  %bf.load143 = load i32* %18, align 8
  %bf.clear144 = and i32 %bf.load143, 65535
  %cmp145 = icmp ne i32 %bf.clear144, 61
  %cmp148 = icmp eq %struct.rtx_def* %target.addr.0, %op1.addr.2
  %or.cond2709 = or i1 %cmp145, %cmp148
  br i1 %or.cond2709, label %if.then158, label %lor.lhs.false153

lor.lhs.false147:                                 ; preds = %cond.true137
  %cmp148.old = icmp eq %struct.rtx_def* %target.addr.0, %op1.addr.2
  br i1 %cmp148.old, label %if.then158, label %lor.lhs.false153

cond.false150:                                    ; preds = %lor.lhs.false132
  %call151 = tail call i32 @rtx_equal_p(%struct.rtx_def* %op1.addr.2, %struct.rtx_def* %target.addr.0) #3
  %tobool152 = icmp eq i32 %call151, 0
  br i1 %tobool152, label %lor.lhs.false153, label %if.then158

lor.lhs.false153:                                 ; preds = %land.lhs.true142, %cond.false150, %lor.lhs.false147
  %19 = getelementptr inbounds %struct.rtx_def* %op0.addr.1, i64 0, i32 0
  %bf.load154 = load i32* %19, align 8
  %bf.clear155 = and i32 %bf.load154, 65535
  %cmp156 = icmp eq i32 %bf.clear155, 54
  br i1 %cmp156, label %if.then158, label %if.end160

if.then158:                                       ; preds = %land.lhs.true142, %cond.false150, %lor.lhs.false153, %lor.lhs.false147
  br label %if.end160

if.end160:                                        ; preds = %if.end110, %lor.lhs.false153, %if.then158
  %commutative_op.0 = phi i32 [ 1, %if.then158 ], [ 1, %lor.lhs.false153 ], [ 0, %if.end110 ]
  %op1.addr.3 = phi %struct.rtx_def* [ %op0.addr.1, %if.then158 ], [ %op1.addr.2, %lor.lhs.false153 ], [ %op1.addr.2, %if.end110 ]
  %op0.addr.2 = phi %struct.rtx_def* [ %op1.addr.2, %if.then158 ], [ %op0.addr.1, %lor.lhs.false153 ], [ %op0.addr.1, %if.end110 ]
  br i1 %cmp161, label %if.end342.loopexit, label %land.lhs.true163

land.lhs.true163:                                 ; preds = %if.end160
  %insn_code = getelementptr inbounds %struct.optab* %binoptab.addr.0, i64 0, i32 1, i64 %idxprom, i32 0
  %20 = load i32* %insn_code, align 4, !tbaa !10
  %cmp166 = icmp eq i32 %20, 1317
  br i1 %cmp166, label %if.end342.loopexit, label %if.then168

if.then168:                                       ; preds = %land.lhs.true163
  %idxprom173 = sext i32 %20 to i64
  %operand = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom173, i32 3
  %21 = load %struct.insn_operand_data** %operand, align 8, !tbaa !12
  %mode176 = getelementptr inbounds %struct.insn_operand_data* %21, i64 1, i32 2
  %bf.load177 = load i16* %mode176, align 8
  %bf.cast = zext i16 %bf.load177 to i32
  %mode182 = getelementptr inbounds %struct.insn_operand_data* %21, i64 2, i32 2
  %bf.load183 = load i16* %mode182, align 8
  %bf.cast184 = zext i16 %bf.load183 to i32
  %tobool185 = icmp eq %struct.rtx_def* %target.addr.0, null
  br i1 %tobool185, label %if.else, label %if.end188

if.else:                                          ; preds = %if.then168
  %call187 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode) #3
  br label %if.end188

if.end188:                                        ; preds = %if.then168, %if.else
  %temp.0 = phi %struct.rtx_def* [ %call187, %if.else ], [ %target.addr.0, %if.then168 ]
  %tobool189 = icmp eq i32 %commutative_op.0, 0
  br i1 %tobool189, label %if.end215, label %if.then190

if.then190:                                       ; preds = %if.end188
  %22 = getelementptr inbounds %struct.rtx_def* %op0.addr.2, i64 0, i32 0
  %bf.load191 = load i32* %22, align 8
  %bf.lshr = lshr i32 %bf.load191, 16
  %bf.clear192 = and i32 %bf.lshr, 255
  %cmp193 = icmp eq i32 %bf.clear192, %bf.cast
  br i1 %cmp193, label %if.end215, label %land.lhs.true195

land.lhs.true195:                                 ; preds = %if.then190
  %23 = getelementptr inbounds %struct.rtx_def* %op1.addr.3, i64 0, i32 0
  %bf.load196 = load i32* %23, align 8
  %bf.lshr197 = lshr i32 %bf.load196, 16
  %bf.clear198 = and i32 %bf.lshr197, 255
  %cmp199 = icmp ne i32 %bf.clear198, %bf.cast184
  %cmp205 = icmp eq i32 %bf.clear192, %bf.cast184
  %or.cond2710 = and i1 %cmp199, %cmp205
  %cmp211 = icmp eq i32 %bf.clear198, %bf.cast
  %or.cond2711 = and i1 %or.cond2710, %cmp211
  %op0.addr.2.op1.addr.3 = select i1 %or.cond2711, %struct.rtx_def* %op0.addr.2, %struct.rtx_def* %op1.addr.3
  %op1.addr.3.op0.addr.2 = select i1 %or.cond2711, %struct.rtx_def* %op1.addr.3, %struct.rtx_def* %op0.addr.2
  br label %if.end215

if.end215:                                        ; preds = %land.lhs.true195, %if.then190, %if.end188
  %xop1.0 = phi %struct.rtx_def* [ %op1.addr.3, %if.then190 ], [ %op1.addr.3, %if.end188 ], [ %op0.addr.2.op1.addr.3, %land.lhs.true195 ]
  %xop0.0 = phi %struct.rtx_def* [ %op0.addr.2, %if.then190 ], [ %op0.addr.2, %if.end188 ], [ %op1.addr.3.op0.addr.2, %land.lhs.true195 ]
  %24 = getelementptr inbounds %struct.rtx_def* %xop0.0, i64 0, i32 0
  %bf.load216 = load i32* %24, align 8
  %bf.lshr217 = lshr i32 %bf.load216, 16
  %bf.clear218 = and i32 %bf.lshr217, 255
  %cmp219 = icmp ne i32 %bf.clear218, %bf.cast
  %cmp222 = icmp ne i16 %bf.load177, 0
  %or.cond1779 = and i1 %cmp219, %cmp222
  br i1 %or.cond1779, label %if.then224, label %if.end250

if.then224:                                       ; preds = %if.end215
  %cmp228 = icmp eq i32 %bf.clear218, 0
  br i1 %cmp228, label %cond.false234, label %cond.end247

cond.false234:                                    ; preds = %if.then224
  %25 = load i8* %arrayidx236, align 1, !tbaa !9
  %idxprom238 = zext i16 %bf.load177 to i64
  %arrayidx239 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom238
  %26 = load i8* %arrayidx239, align 1, !tbaa !9
  %cmp241 = icmp ugt i8 %25, %26
  %cond246 = select i1 %cmp241, i32 %mode, i32 %bf.cast
  br label %cond.end247

cond.end247:                                      ; preds = %if.then224, %cond.false234
  %cond248 = phi i32 [ %cond246, %cond.false234 ], [ %bf.clear218, %if.then224 ]
  %call249 = tail call %struct.rtx_def* @convert_modes(i32 %bf.cast, i32 %cond248, %struct.rtx_def* %xop0.0, i32 %unsignedp) #3
  br label %if.end250

if.end250:                                        ; preds = %cond.end247, %if.end215
  %xop0.1 = phi %struct.rtx_def* [ %call249, %cond.end247 ], [ %xop0.0, %if.end215 ]
  %27 = getelementptr inbounds %struct.rtx_def* %xop1.0, i64 0, i32 0
  %bf.load251 = load i32* %27, align 8
  %bf.lshr252 = lshr i32 %bf.load251, 16
  %bf.clear253 = and i32 %bf.lshr252, 255
  %cmp254 = icmp ne i32 %bf.clear253, %bf.cast184
  %cmp257 = icmp ne i16 %bf.load183, 0
  %or.cond1780 = and i1 %cmp254, %cmp257
  br i1 %or.cond1780, label %if.then259, label %if.end287

if.then259:                                       ; preds = %if.end250
  %cmp263 = icmp eq i32 %bf.clear253, 0
  br i1 %cmp263, label %cond.false269, label %cond.end284

cond.false269:                                    ; preds = %if.then259
  %28 = load i8* %arrayidx236, align 1, !tbaa !9
  %idxprom273 = zext i16 %bf.load183 to i64
  %arrayidx274 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom273
  %29 = load i8* %arrayidx274, align 1, !tbaa !9
  %cmp276 = icmp ule i8 %28, %29
  %or.cond1781 = or i1 %cmp276, %1
  %cond283 = select i1 %or.cond1781, i32 %bf.cast184, i32 %mode
  br label %cond.end284

cond.end284:                                      ; preds = %if.then259, %cond.false269
  %cond285 = phi i32 [ %cond283, %cond.false269 ], [ %bf.clear253, %if.then259 ]
  %call286 = tail call %struct.rtx_def* @convert_modes(i32 %bf.cast184, i32 %cond285, %struct.rtx_def* %xop1.0, i32 %unsignedp) #3
  br label %if.end287

if.end287:                                        ; preds = %cond.end284, %if.end250
  %xop1.1 = phi %struct.rtx_def* [ %call286, %cond.end284 ], [ %xop1.0, %if.end250 ]
  %predicate = getelementptr inbounds %struct.insn_operand_data* %21, i64 1, i32 0
  %30 = load i32 (%struct.rtx_def*, i32)** %predicate, align 8, !tbaa !14
  %call292 = tail call i32 %30(%struct.rtx_def* %xop0.1, i32 %bf.cast) #3
  %tobool293 = icmp eq i32 %call292, 0
  %or.cond1782 = and i1 %tobool293, %cmp222
  br i1 %or.cond1782, label %if.then297, label %if.end299

if.then297:                                       ; preds = %if.end287
  %call298 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast, %struct.rtx_def* %xop0.1) #3
  br label %if.end299

if.end299:                                        ; preds = %if.end287, %if.then297
  %xop0.2 = phi %struct.rtx_def* [ %call298, %if.then297 ], [ %xop0.1, %if.end287 ]
  %predicate304 = getelementptr inbounds %struct.insn_operand_data* %21, i64 2, i32 0
  %31 = load i32 (%struct.rtx_def*, i32)** %predicate304, align 8, !tbaa !14
  %call305 = tail call i32 %31(%struct.rtx_def* %xop1.1, i32 %bf.cast184) #3
  %tobool306 = icmp eq i32 %call305, 0
  %or.cond1783 = and i1 %tobool306, %cmp257
  br i1 %or.cond1783, label %if.then310, label %if.end312

if.then310:                                       ; preds = %if.end299
  %call311 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast184, %struct.rtx_def* %xop1.1) #3
  br label %if.end312

if.end312:                                        ; preds = %if.end299, %if.then310
  %xop1.2 = phi %struct.rtx_def* [ %call311, %if.then310 ], [ %xop1.1, %if.end299 ]
  %predicate317 = getelementptr inbounds %struct.insn_operand_data* %21, i64 0, i32 0
  %32 = load i32 (%struct.rtx_def*, i32)** %predicate317, align 8, !tbaa !14
  %call318 = tail call i32 %32(%struct.rtx_def* %temp.0, i32 %mode) #3
  %tobool319 = icmp eq i32 %call318, 0
  br i1 %tobool319, label %if.then320, label %if.end322

if.then320:                                       ; preds = %if.end312
  %call321 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode) #3
  br label %if.end322

if.end322:                                        ; preds = %if.end312, %if.then320
  %temp.1 = phi %struct.rtx_def* [ %temp.0, %if.end312 ], [ %call321, %if.then320 ]
  %genfun = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom173, i32 2
  %33 = load %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun, align 8, !tbaa !16
  %call325 = tail call %struct.rtx_def* (%struct.rtx_def*, ...)* %33(%struct.rtx_def* %temp.1, %struct.rtx_def* %xop0.2, %struct.rtx_def* %xop1.2) #3
  %tobool326 = icmp eq %struct.rtx_def* %call325, null
  br i1 %tobool326, label %if.else340, label %if.then327

if.then327:                                       ; preds = %if.end322
  %34 = getelementptr inbounds %struct.rtx_def* %call325, i64 0, i32 0
  %bf.load328 = load i32* %34, align 8
  %bf.clear329 = and i32 %bf.load328, 65535
  %cmp330 = icmp eq i32 %bf.clear329, 24
  br i1 %cmp330, label %land.lhs.true332, label %if.end338

land.lhs.true332:                                 ; preds = %if.then327
  %35 = load i32* %code112, align 4, !tbaa !5
  %call334 = tail call fastcc i32 @add_equal_note(%struct.rtx_def* %call325, %struct.rtx_def* %temp.1, i32 %35, %struct.rtx_def* %xop0.2, %struct.rtx_def* %xop1.2)
  %tobool335 = icmp eq i32 %call334, 0
  br i1 %tobool335, label %if.then336, label %if.end338

if.then336:                                       ; preds = %land.lhs.true332
  tail call void @delete_insns_since(%struct.rtx_def* %call111) #3
  br label %tailrecurse

if.end338:                                        ; preds = %land.lhs.true332, %if.then327
  %call339 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call325) #3
  br label %return

if.else340:                                       ; preds = %if.end322
  %36 = and i32 %methods, -3
  %37 = icmp eq i32 %36, 1
  %cond.le = select i1 %37, i32 2, i32 %methods
  %arrayidx.le2929 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom
  %38 = load i32* %arrayidx.le2929, align 4, !tbaa !9
  tail call void @delete_insns_since(%struct.rtx_def* %call111) #3
  br label %if.end342

if.end342.loopexit:                               ; preds = %if.end160, %land.lhs.true163
  %39 = and i32 %methods, -3
  %40 = icmp eq i32 %39, 1
  %cond.le2936 = select i1 %40, i32 2, i32 %methods
  %arrayidx.le = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom
  %41 = load i32* %arrayidx.le, align 4, !tbaa !9
  br label %if.end342

if.end342:                                        ; preds = %if.end342.loopexit, %if.else340
  %42 = phi i32 [ %38, %if.else340 ], [ %41, %if.end342.loopexit ]
  %cond2854 = phi i32 [ %cond.le, %if.else340 ], [ %cond.le2936, %if.end342.loopexit ]
  %op1.addr.5 = phi %struct.rtx_def* [ %xop1.0, %if.else340 ], [ %op1.addr.3, %if.end342.loopexit ]
  %op0.addr.4 = phi %struct.rtx_def* [ %xop0.0, %if.else340 ], [ %op0.addr.2, %if.end342.loopexit ]
  %.in = and i32 %methods, -3
  %cmp12849 = icmp eq i32 %methods, 3
  %43 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 4), align 16, !tbaa !1
  %cmp343 = icmp eq %struct.optab* %binoptab.addr.0, %43
  br i1 %cmp343, label %land.lhs.true345, label %if.end388

land.lhs.true345:                                 ; preds = %if.end342
  %arrayidx347 = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom
  %44 = load i8* %arrayidx347, align 1, !tbaa !9
  %conv348 = zext i8 %44 to i32
  %cmp349 = icmp eq i8 %44, 0
  br i1 %cmp349, label %if.end388, label %land.lhs.true351

land.lhs.true351:                                 ; preds = %land.lhs.true345
  %idxprom355 = zext i8 %44 to i64
  %tobool356 = icmp ne i32 %unsignedp, 0
  %45 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 9), align 8, !tbaa !1
  %46 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 8), align 16, !tbaa !1
  %cond360 = select i1 %tobool356, %struct.optab* %45, %struct.optab* %46
  %insn_code363 = getelementptr inbounds %struct.optab* %cond360, i64 0, i32 1, i64 %idxprom355, i32 0
  %47 = load i32* %insn_code363, align 4, !tbaa !10
  %cmp364 = icmp eq i32 %47, 1317
  br i1 %cmp364, label %if.end388, label %if.then366

if.then366:                                       ; preds = %land.lhs.true351
  %call375 = tail call %struct.rtx_def* @expand_binop(i32 %conv348, %struct.optab* %cond360, %struct.rtx_def* %op0.addr.4, %struct.rtx_def* %op1.addr.5, %struct.rtx_def* null, i32 %unsignedp, i32 0)
  %cmp376 = icmp eq %struct.rtx_def* %call375, null
  br i1 %cmp376, label %if.end388, label %if.then378

if.then378:                                       ; preds = %if.then366
  %cmp381 = icmp eq i32 %42, 1
  br i1 %cmp381, label %if.then383, label %if.else385

if.then383:                                       ; preds = %if.then378
  %call384 = tail call %struct.rtx_def* @gen_lowpart(i32 %mode, %struct.rtx_def* %call375) #3
  br label %return

if.else385:                                       ; preds = %if.then378
  %call386 = tail call %struct.rtx_def* @convert_to_mode(i32 %mode, %struct.rtx_def* %call375, i32 %unsignedp) #3
  br label %return

if.end388:                                        ; preds = %if.then366, %land.lhs.true351, %land.lhs.true345, %if.end342
  %cmp389 = icmp eq i32 %42, 1
  %cmp395 = icmp eq i32 %42, 6
  switch i32 %42, label %if.end494 [
    i32 6, label %switch.early.test
    i32 2, label %switch.early.test
    i32 1, label %switch.early.test
  ]

switch.early.test:                                ; preds = %if.end388, %if.end388, %if.end388
  %switch = icmp ult i32 %methods, 2
  br i1 %switch, label %if.end494, label %for.cond.preheader

for.cond.preheader:                               ; preds = %switch.early.test
  %wider_mode.0.in.in2919 = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom
  %wider_mode.0.in2920 = load i8* %wider_mode.0.in.in2919, align 1
  %cmp4072922 = icmp eq i8 %wider_mode.0.in2920, 0
  br i1 %cmp4072922, label %if.end494, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %tobool429 = icmp ne i32 %unsignedp, 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.cond.backedge
  %wider_mode.02924.in = phi i8 [ %wider_mode.0.in2920, %for.body.lr.ph ], [ %wider_mode.0.in, %for.cond.backedge ]
  %wider_mode.02924 = zext i8 %wider_mode.02924.in to i32
  %idxprom409 = zext i8 %wider_mode.02924.in to i64
  %insn_code412 = getelementptr inbounds %struct.optab* %binoptab.addr.0, i64 0, i32 1, i64 %idxprom409, i32 0
  %48 = load i32* %insn_code412, align 4, !tbaa !10
  %cmp413 = icmp eq i32 %48, 1317
  %49 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 4), align 16, !tbaa !1
  br i1 %cmp413, label %lor.lhs.false415, label %if.then439

lor.lhs.false415:                                 ; preds = %for.body
  %cmp416 = icmp eq %struct.optab* %binoptab.addr.0, %49
  br i1 %cmp416, label %land.lhs.true418, label %for.cond.backedge

land.lhs.true418:                                 ; preds = %lor.lhs.false415
  %arrayidx420 = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom409
  %50 = load i8* %arrayidx420, align 1, !tbaa !9
  %cmp422 = icmp eq i8 %50, 0
  br i1 %cmp422, label %for.cond.backedge, label %land.lhs.true424

land.lhs.true424:                                 ; preds = %land.lhs.true418
  %idxprom428 = zext i8 %50 to i64
  %51 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 9), align 8, !tbaa !1
  %52 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 8), align 16, !tbaa !1
  %cond433 = select i1 %tobool429, %struct.optab* %51, %struct.optab* %52
  %insn_code436 = getelementptr inbounds %struct.optab* %cond433, i64 0, i32 1, i64 %idxprom428, i32 0
  %53 = load i32* %insn_code436, align 4, !tbaa !10
  %cmp437 = icmp eq i32 %53, 1317
  br i1 %cmp437, label %for.cond.backedge, label %if.then439

for.cond.backedge:                                ; preds = %land.lhs.true424, %land.lhs.true418, %lor.lhs.false415, %if.else488
  %wider_mode.0.in.in = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom409
  %wider_mode.0.in = load i8* %wider_mode.0.in.in, align 1
  %cmp407 = icmp eq i8 %wider_mode.0.in, 0
  br i1 %cmp407, label %if.end494, label %for.body

if.then439:                                       ; preds = %for.body, %land.lhs.true424
  %54 = phi %struct.optab* [ %binoptab.addr.0, %land.lhs.true424 ], [ %49, %for.body ]
  %55 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 19), align 8, !tbaa !1
  %cmp445 = icmp eq %struct.optab* %binoptab.addr.0, %55
  %56 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 18), align 16
  %cmp448 = icmp eq %struct.optab* %binoptab.addr.0, %56
  %or.cond2712 = or i1 %cmp445, %cmp448
  %57 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 20), align 16
  %cmp451 = icmp eq %struct.optab* %binoptab.addr.0, %57
  %or.cond2713 = or i1 %or.cond2712, %cmp451
  %58 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 0), align 16
  %cmp454 = icmp eq %struct.optab* %binoptab.addr.0, %58
  %or.cond2714 = or i1 %or.cond2713, %cmp454
  %59 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 2), align 16
  %cmp457 = icmp eq %struct.optab* %binoptab.addr.0, %59
  %or.cond2715 = or i1 %or.cond2714, %cmp457
  %cmp460 = icmp eq %struct.optab* %binoptab.addr.0, %54
  %or.cond2716 = or i1 %or.cond2715, %cmp460
  br i1 %or.cond2716, label %land.lhs.true465, label %lor.lhs.false462

lor.lhs.false462:                                 ; preds = %if.then439
  %60 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 21), align 8, !tbaa !1
  %cmp463 = icmp eq %struct.optab* %binoptab.addr.0, %60
  %or.cond1788 = and i1 %cmp463, %cmp389
  br i1 %or.cond1788, label %land.rhs, label %if.end469.thread

land.lhs.true465:                                 ; preds = %if.then439
  br i1 %cmp389, label %land.rhs, label %if.end469.thread

if.end469.thread:                                 ; preds = %land.lhs.true465, %lor.lhs.false462
  %call4702788 = tail call fastcc %struct.rtx_def* @widen_operand(%struct.rtx_def* %op0.addr.4, i32 %wider_mode.02924, i32 %mode, i32 %unsignedp, i32 0)
  br label %land.end

land.rhs:                                         ; preds = %lor.lhs.false462, %land.lhs.true465
  %call470 = tail call fastcc %struct.rtx_def* @widen_operand(%struct.rtx_def* %op0.addr.4, i32 %wider_mode.02924, i32 %mode, i32 %unsignedp, i32 1)
  %61 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 21), align 8, !tbaa !1
  %cmp472 = icmp ne %struct.optab* %binoptab.addr.0, %61
  br label %land.end

land.end:                                         ; preds = %if.end469.thread, %land.rhs
  %call4702790 = phi %struct.rtx_def* [ %call470, %land.rhs ], [ %call4702788, %if.end469.thread ]
  %62 = phi i1 [ %cmp472, %land.rhs ], [ false, %if.end469.thread ]
  %land.ext = zext i1 %62 to i32
  %call474 = tail call fastcc %struct.rtx_def* @widen_operand(%struct.rtx_def* %op1.addr.5, i32 %wider_mode.02924, i32 %mode, i32 %unsignedp, i32 %land.ext)
  %call475 = tail call %struct.rtx_def* @expand_binop(i32 %wider_mode.02924, %struct.optab* %binoptab.addr.0, %struct.rtx_def* %call4702790, %struct.rtx_def* %call474, %struct.rtx_def* null, i32 %unsignedp, i32 0)
  %tobool476 = icmp eq %struct.rtx_def* %call475, null
  br i1 %tobool476, label %if.else488, label %if.then477

if.then477:                                       ; preds = %land.end
  br i1 %cmp389, label %if.else486, label %if.then480

if.then480:                                       ; preds = %if.then477
  %cmp481 = icmp eq %struct.rtx_def* %target.addr.0, null
  br i1 %cmp481, label %if.then483, label %if.end485

if.then483:                                       ; preds = %if.then480
  %call484 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode) #3
  br label %if.end485

if.end485:                                        ; preds = %if.then483, %if.then480
  %target.addr.1 = phi %struct.rtx_def* [ %call484, %if.then483 ], [ %target.addr.0, %if.then480 ]
  tail call void @convert_move(%struct.rtx_def* %target.addr.1, %struct.rtx_def* %call475, i32 0) #3
  br label %return

if.else486:                                       ; preds = %if.then477
  %call487 = tail call %struct.rtx_def* @gen_lowpart(i32 %mode, %struct.rtx_def* %call475) #3
  br label %return

if.else488:                                       ; preds = %land.end
  tail call void @delete_insns_since(%struct.rtx_def* %call111) #3
  br label %for.cond.backedge

if.end494:                                        ; preds = %for.cond.backedge, %for.cond.preheader, %switch.early.test, %if.end388
  %63 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 18), align 16, !tbaa !1
  %cmp495 = icmp eq %struct.optab* %binoptab.addr.0, %63
  %64 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 19), align 8
  %cmp498 = icmp eq %struct.optab* %binoptab.addr.0, %64
  %or.cond2717 = or i1 %cmp495, %cmp498
  br i1 %or.cond2717, label %land.lhs.true503, label %lor.lhs.false500

lor.lhs.false500:                                 ; preds = %if.end494
  %65 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 20), align 16, !tbaa !1
  %cmp501 = icmp eq %struct.optab* %binoptab.addr.0, %65
  %or.cond1790 = and i1 %cmp501, %cmp389
  br i1 %or.cond1790, label %land.lhs.true506, label %if.end586

land.lhs.true503:                                 ; preds = %if.end494
  br i1 %cmp389, label %land.lhs.true506, label %if.end586

land.lhs.true506:                                 ; preds = %lor.lhs.false500, %land.lhs.true503
  %66 = load i8* %arrayidx236, align 1, !tbaa !9
  %conv509 = zext i8 %66 to i32
  %67 = load i32* @target_flags, align 4, !tbaa !7
  %and = lshr i32 %67, 23
  %68 = and i32 %and, 4
  %69 = add i32 %68, 4
  %cmp512 = icmp ugt i32 %conv509, %69
  br i1 %cmp512, label %land.lhs.true514, label %if.end586

land.lhs.true514:                                 ; preds = %land.lhs.true506
  %70 = load i32* @word_mode, align 4, !tbaa !9
  %idxprom515 = sext i32 %70 to i64
  %insn_code518 = getelementptr inbounds %struct.optab* %binoptab.addr.0, i64 0, i32 1, i64 %idxprom515, i32 0
  %71 = load i32* %insn_code518, align 4, !tbaa !10
  %cmp519 = icmp eq i32 %71, 1317
  br i1 %cmp519, label %if.end586, label %if.then521

if.then521:                                       ; preds = %land.lhs.true514
  %cmp525 = icmp eq %struct.rtx_def* %target.addr.0, null
  %cmp528 = icmp eq %struct.rtx_def* %target.addr.0, %op0.addr.4
  %or.cond2718 = or i1 %cmp525, %cmp528
  %cmp531 = icmp eq %struct.rtx_def* %target.addr.0, %op1.addr.5
  %or.cond2719 = or i1 %or.cond2718, %cmp531
  br i1 %or.cond2719, label %if.then533, label %if.end535

if.then533:                                       ; preds = %if.then521
  %call534 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode) #3
  br label %if.end535

if.end535:                                        ; preds = %if.then521, %if.then533
  %target.addr.2 = phi %struct.rtx_def* [ %call534, %if.then533 ], [ %target.addr.0, %if.then521 ]
  tail call void @start_sequence() #3
  %arrayidx538 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom
  %72 = load i16* %arrayidx538, align 2, !tbaa !17
  %conv5392910 = zext i16 %72 to i32
  %73 = load i32* @target_flags, align 4, !tbaa !7
  %and5402911 = lshr i32 %73, 20
  %74 = and i32 %and5402911, 32
  %75 = add i32 %74, 32
  %div2912 = sdiv i32 %conv5392910, %75
  %cmp5432913 = icmp sgt i32 %div2912, 0
  br i1 %cmp5432913, label %for.body545, label %for.end562

for.body545:                                      ; preds = %if.end535, %for.inc561
  %i.02914 = phi i32 [ %inc, %for.inc561 ], [ 0, %if.end535 ]
  %call547 = tail call %struct.rtx_def* @operand_subword(%struct.rtx_def* %target.addr.2, i32 %i.02914, i32 1, i32 %mode) #3
  %76 = load i32* @word_mode, align 4, !tbaa !9
  %call549 = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %op0.addr.4, i32 %i.02914, i32 %mode) #3
  %call550 = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %op1.addr.5, i32 %i.02914, i32 %mode) #3
  %call551 = tail call %struct.rtx_def* @expand_binop(i32 %76, %struct.optab* %binoptab.addr.0, %struct.rtx_def* %call549, %struct.rtx_def* %call550, %struct.rtx_def* %call547, i32 %unsignedp, i32 %cond2854)
  %cmp552 = icmp eq %struct.rtx_def* %call551, null
  br i1 %cmp552, label %for.end562, label %if.end555

if.end555:                                        ; preds = %for.body545
  %cmp556 = icmp eq %struct.rtx_def* %call547, %call551
  br i1 %cmp556, label %for.inc561, label %if.then558

if.then558:                                       ; preds = %if.end555
  %call559 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call547, %struct.rtx_def* %call551) #3
  br label %for.inc561

for.inc561:                                       ; preds = %if.end555, %if.then558
  %inc = add nsw i32 %i.02914, 1
  %77 = load i32* @target_flags, align 4, !tbaa !7
  %and540 = lshr i32 %77, 20
  %78 = and i32 %and540, 32
  %79 = add i32 %78, 32
  %div = sdiv i32 %conv5392910, %79
  %cmp543 = icmp slt i32 %inc, %div
  br i1 %cmp543, label %for.body545, label %for.end562

for.end562:                                       ; preds = %for.inc561, %for.body545, %if.end535
  %i.0.lcssa = phi i32 [ 0, %if.end535 ], [ %inc, %for.inc561 ], [ %i.02914, %for.body545 ]
  %call563 = tail call %struct.rtx_def* @get_insns() #3
  tail call void @end_sequence() #3
  %80 = load i32* @target_flags, align 4, !tbaa !7
  %and567 = lshr i32 %80, 20
  %81 = and i32 %and567, 32
  %82 = add i32 %81, 32
  %div570 = sdiv i32 %conv5392910, %82
  %cmp571 = icmp eq i32 %i.0.lcssa, %div570
  br i1 %cmp571, label %if.then573, label %if.end586

if.then573:                                       ; preds = %for.end562
  %83 = load i32* %code112, align 4, !tbaa !5
  %cmp575 = icmp eq i32 %83, 0
  br i1 %cmp575, label %if.end583, label %if.then577

if.then577:                                       ; preds = %if.then573
  %call579 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %op0.addr.4) #3
  %call580 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %op1.addr.5) #3
  %call581 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 %83, i32 %mode, %struct.rtx_def* %call579, %struct.rtx_def* %call580) #3
  br label %if.end583

if.end583:                                        ; preds = %if.then573, %if.then577
  %equiv_value.0 = phi %struct.rtx_def* [ %call581, %if.then577 ], [ null, %if.then573 ]
  %call584 = tail call %struct.rtx_def* @emit_no_conflict_block(%struct.rtx_def* %call563, %struct.rtx_def* %target.addr.2, %struct.rtx_def* %op0.addr.4, %struct.rtx_def* %op1.addr.5, %struct.rtx_def* %equiv_value.0)
  br label %return

if.end586:                                        ; preds = %land.lhs.true514, %for.end562, %land.lhs.true506, %land.lhs.true503, %lor.lhs.false500
  %target.addr.3 = phi %struct.rtx_def* [ %target.addr.2, %for.end562 ], [ %target.addr.0, %land.lhs.true514 ], [ %target.addr.0, %land.lhs.true506 ], [ %target.addr.0, %land.lhs.true503 ], [ %target.addr.0, %lor.lhs.false500 ]
  %84 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 22), align 16, !tbaa !1
  %cmp587 = icmp eq %struct.optab* %binoptab.addr.0, %84
  %85 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 21), align 8
  %cmp590 = icmp eq %struct.optab* %binoptab.addr.0, %85
  %or.cond2720 = or i1 %cmp587, %cmp590
  br i1 %or.cond2720, label %land.lhs.true595, label %lor.lhs.false592

lor.lhs.false592:                                 ; preds = %if.end586
  %86 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 23), align 8, !tbaa !1
  %cmp593 = icmp eq %struct.optab* %binoptab.addr.0, %86
  %or.cond1792 = and i1 %cmp593, %cmp389
  br i1 %or.cond1792, label %land.lhs.true598, label %if.end784

land.lhs.true595:                                 ; preds = %if.end586
  br i1 %cmp389, label %land.lhs.true598, label %if.end784

land.lhs.true598:                                 ; preds = %lor.lhs.false592, %land.lhs.true595
  %87 = getelementptr inbounds %struct.rtx_def* %op1.addr.5, i64 0, i32 0
  %bf.load599 = load i32* %87, align 8
  %bf.clear600 = and i32 %bf.load599, 65535
  %cmp601 = icmp eq i32 %bf.clear600, 54
  br i1 %cmp601, label %land.lhs.true603, label %if.end784

land.lhs.true603:                                 ; preds = %land.lhs.true598
  %88 = load i8* %arrayidx236, align 1, !tbaa !9
  %conv606 = zext i8 %88 to i32
  %89 = load i32* @target_flags, align 4, !tbaa !7
  %90 = lshr i32 %89, 22
  %91 = and i32 %90, 8
  %mul = add i32 %91, 8
  %cmp610 = icmp eq i32 %conv606, %mul
  br i1 %cmp610, label %land.lhs.true612, label %if.end784

land.lhs.true612:                                 ; preds = %land.lhs.true603
  %92 = load i32* @word_mode, align 4, !tbaa !9
  %idxprom613 = sext i32 %92 to i64
  %insn_code616 = getelementptr inbounds %struct.optab* %binoptab.addr.0, i64 0, i32 1, i64 %idxprom613, i32 0
  %93 = load i32* %insn_code616, align 4, !tbaa !10
  %cmp617 = icmp eq i32 %93, 1317
  br i1 %cmp617, label %if.end784, label %land.lhs.true619

land.lhs.true619:                                 ; preds = %land.lhs.true612
  %insn_code623 = getelementptr inbounds %struct.optab* %85, i64 0, i32 1, i64 %idxprom613, i32 0
  %94 = load i32* %insn_code623, align 4, !tbaa !10
  %cmp624 = icmp eq i32 %94, 1317
  br i1 %cmp624, label %if.end784, label %land.lhs.true626

land.lhs.true626:                                 ; preds = %land.lhs.true619
  %insn_code630 = getelementptr inbounds %struct.optab* %84, i64 0, i32 1, i64 %idxprom613, i32 0
  %95 = load i32* %insn_code630, align 4, !tbaa !10
  %cmp631 = icmp eq i32 %95, 1317
  br i1 %cmp631, label %if.end784, label %if.then633

if.then633:                                       ; preds = %land.lhs.true626
  %cmp646 = icmp eq %struct.rtx_def* %target.addr.3, null
  %cmp649 = icmp eq %struct.rtx_def* %target.addr.3, %op0.addr.4
  %or.cond2721 = or i1 %cmp646, %cmp649
  %cmp652 = icmp eq %struct.rtx_def* %target.addr.3, %op1.addr.5
  %or.cond2722 = or i1 %or.cond2721, %cmp652
  br i1 %or.cond2722, label %if.then654, label %if.end656

if.then654:                                       ; preds = %if.then633
  %call655 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode) #3
  br label %if.end656

if.end656:                                        ; preds = %if.then633, %if.then654
  %target.addr.4 = phi %struct.rtx_def* [ %call655, %if.then654 ], [ %target.addr.3, %if.then633 ]
  tail call void @start_sequence() #3
  %rtwint = getelementptr inbounds %struct.rtx_def* %op1.addr.5, i64 0, i32 1, i64 0, i32 0
  %96 = load i64* %rtwint, align 8, !tbaa !19
  %conv658 = trunc i64 %96 to i32
  %97 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 21), align 8, !tbaa !1
  %cmp659 = icmp eq %struct.optab* %binoptab.addr.0, %97
  %conv660 = zext i1 %cmp659 to i32
  %xor = xor i32 %conv660, 1
  %call661 = tail call %struct.rtx_def* @operand_subword(%struct.rtx_def* %target.addr.4, i32 %xor, i32 1, i32 %mode) #3
  %call662 = tail call %struct.rtx_def* @operand_subword(%struct.rtx_def* %target.addr.4, i32 %conv660, i32 1, i32 %mode) #3
  %call663 = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %op0.addr.4, i32 %xor, i32 %mode) #3
  %call665 = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %op0.addr.4, i32 %conv660, i32 %mode) #3
  %98 = load i32* @target_flags, align 4, !tbaa !7
  %and666 = lshr i32 %98, 20
  %99 = and i32 %and666, 32
  %100 = add i32 %99, 32
  %cmp669 = icmp slt i32 %conv658, %100
  br i1 %cmp669, label %if.else716, label %if.then671

if.then671:                                       ; preds = %if.end656
  %101 = load i32* @word_mode, align 4, !tbaa !9
  %sub675 = sub nsw i32 %conv658, %100
  %conv676 = sext i32 %sub675 to i64
  %call677 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv676) #3
  %call678 = tail call %struct.rtx_def* @expand_binop(i32 %101, %struct.optab* %binoptab.addr.0, %struct.rtx_def* %call663, %struct.rtx_def* %call677, %struct.rtx_def* %call662, i32 %unsignedp, i32 %cond2854)
  %cmp679 = icmp ne %struct.rtx_def* %call678, null
  %cmp679.not = xor i1 %cmp679, true
  %cmp682 = icmp eq %struct.rtx_def* %call678, %call662
  %or.cond2723 = or i1 %cmp682, %cmp679.not
  br i1 %or.cond2723, label %if.end686, label %if.then684

if.then684:                                       ; preds = %if.then671
  %call685 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call662, %struct.rtx_def* %call678) #3
  br label %if.end686

if.end686:                                        ; preds = %if.then671, %if.then684
  %102 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 23), align 8
  %cmp690 = icmp eq %struct.optab* %binoptab.addr.0, %102
  %or.cond2725 = or i1 %cmp690, %cmp679.not
  br i1 %or.cond2725, label %if.else695, label %if.then692

if.then692:                                       ; preds = %if.end686
  %103 = load i32* @word_mode, align 4, !tbaa !9
  %idxprom693 = sext i32 %103 to i64
  %arrayidx694 = getelementptr inbounds [3 x [59 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0, i64 %idxprom693
  %104 = load %struct.rtx_def** %arrayidx694, align 8, !tbaa !1
  br label %if.end707

if.else695:                                       ; preds = %if.end686
  br i1 %cmp679, label %if.then698, label %if.end769

if.then698:                                       ; preds = %if.else695
  %105 = load i32* @word_mode, align 4, !tbaa !9
  %106 = load i32* @target_flags, align 4, !tbaa !7
  %and699 = lshr i32 %106, 20
  %107 = and i32 %and699, 32
  %sub7022703 = or i32 %107, 31
  %conv7032704 = zext i32 %sub7022703 to i64
  %call704 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv7032704) #3
  %call705 = tail call %struct.rtx_def* @expand_binop(i32 %105, %struct.optab* %binoptab.addr.0, %struct.rtx_def* %call663, %struct.rtx_def* %call704, %struct.rtx_def* %call661, i32 %unsignedp, i32 %cond2854)
  br label %if.end707

if.end707:                                        ; preds = %if.then698, %if.then692
  %inter.0 = phi %struct.rtx_def* [ %104, %if.then692 ], [ %call705, %if.then698 ]
  %cmp708 = icmp eq %struct.rtx_def* %inter.0, null
  %cmp711 = icmp eq %struct.rtx_def* %inter.0, %call661
  %or.cond2726 = or i1 %cmp708, %cmp711
  br i1 %or.cond2726, label %if.end769, label %if.then713

if.then713:                                       ; preds = %if.end707
  %call714 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call661, %struct.rtx_def* %inter.0) #3
  br label %if.end769

if.else716:                                       ; preds = %if.end656
  %108 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 22), align 16, !tbaa !1
  %109 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 21), align 8, !tbaa !1
  %cond724 = select i1 %cmp659, %struct.optab* %108, %struct.optab* %109
  %110 = load i32* @word_mode, align 4, !tbaa !9
  %sub733 = sub nsw i32 %100, %conv658
  %conv734 = sext i32 %sub733 to i64
  %call735 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv734) #3
  %call736 = tail call %struct.rtx_def* @expand_binop(i32 %110, %struct.optab* %cond724, %struct.rtx_def* %call663, %struct.rtx_def* %call735, %struct.rtx_def* null, i32 %unsignedp, i32 %cond2854)
  %cmp737 = icmp eq %struct.rtx_def* %call736, null
  br i1 %cmp737, label %if.end769, label %if.end742

if.end742:                                        ; preds = %if.else716
  %cond729 = select i1 %cmp659, %struct.optab* %109, %struct.optab* %108
  %111 = load i32* @word_mode, align 4, !tbaa !9
  %call741 = tail call %struct.rtx_def* @expand_binop(i32 %111, %struct.optab* %cond729, %struct.rtx_def* %call665, %struct.rtx_def* %op1.addr.5, %struct.rtx_def* null, i32 %unsignedp, i32 %cond2854)
  %cmp743 = icmp eq %struct.rtx_def* %call741, null
  br i1 %cmp743, label %if.end769, label %if.end747

if.end747:                                        ; preds = %if.end742
  %112 = load i32* @word_mode, align 4, !tbaa !9
  %113 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 19), align 8, !tbaa !1
  %call746 = tail call %struct.rtx_def* @expand_binop(i32 %112, %struct.optab* %113, %struct.rtx_def* %call736, %struct.rtx_def* %call741, %struct.rtx_def* %call662, i32 %unsignedp, i32 %cond2854)
  %cmp748 = icmp ne %struct.rtx_def* %call746, null
  %cmp748.not = xor i1 %cmp748, true
  %cmp751 = icmp eq %struct.rtx_def* %call746, %call662
  %or.cond2727 = or i1 %cmp751, %cmp748.not
  br i1 %or.cond2727, label %if.end755, label %if.then753

if.then753:                                       ; preds = %if.end747
  %call754 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call662, %struct.rtx_def* %call746) #3
  br i1 %cmp748, label %if.end760, label %if.end769

if.end755:                                        ; preds = %if.end747
  br i1 %cmp748, label %if.end760, label %if.end769

if.end760:                                        ; preds = %if.end755, %if.then753
  %114 = load i32* @word_mode, align 4, !tbaa !9
  %call759 = tail call %struct.rtx_def* @expand_binop(i32 %114, %struct.optab* %binoptab.addr.0, %struct.rtx_def* %call663, %struct.rtx_def* %op1.addr.5, %struct.rtx_def* %call661, i32 %unsignedp, i32 %cond2854)
  %cmp761 = icmp eq %struct.rtx_def* %call759, null
  %cmp764 = icmp eq %struct.rtx_def* %call759, %call661
  %or.cond2728 = or i1 %cmp761, %cmp764
  br i1 %or.cond2728, label %if.end769, label %if.then766

if.then766:                                       ; preds = %if.end760
  %call767 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call661, %struct.rtx_def* %call759) #3
  br label %if.end769

if.end769:                                        ; preds = %if.end755, %if.else716, %if.end742, %if.then753, %if.else695, %if.end707, %if.end760, %if.then766, %if.then713
  %inter.4 = phi %struct.rtx_def* [ %inter.0, %if.then713 ], [ %inter.0, %if.end707 ], [ %call759, %if.then766 ], [ %call759, %if.end760 ], [ null, %if.else695 ], [ null, %if.then753 ], [ null, %if.end742 ], [ null, %if.else716 ], [ null, %if.end755 ]
  %call770 = tail call %struct.rtx_def* @get_insns() #3
  tail call void @end_sequence() #3
  %cmp771 = icmp eq %struct.rtx_def* %inter.4, null
  br i1 %cmp771, label %if.end784, label %if.then773

if.then773:                                       ; preds = %if.end769
  %115 = load i32* %code112, align 4, !tbaa !5
  %cmp775 = icmp eq i32 %115, 0
  br i1 %cmp775, label %if.end781, label %if.then777

if.then777:                                       ; preds = %if.then773
  %call779 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 %115, i32 %mode, %struct.rtx_def* %op0.addr.4, %struct.rtx_def* %op1.addr.5) #3
  br label %if.end781

if.end781:                                        ; preds = %if.then773, %if.then777
  %equiv_value638.0 = phi %struct.rtx_def* [ %call779, %if.then777 ], [ null, %if.then773 ]
  %call782 = tail call %struct.rtx_def* @emit_no_conflict_block(%struct.rtx_def* %call770, %struct.rtx_def* %target.addr.4, %struct.rtx_def* %op0.addr.4, %struct.rtx_def* %op1.addr.5, %struct.rtx_def* %equiv_value638.0)
  br label %return

if.end784:                                        ; preds = %if.end769, %land.lhs.true626, %land.lhs.true619, %land.lhs.true612, %land.lhs.true603, %land.lhs.true598, %land.lhs.true595, %lor.lhs.false592
  %target.addr.5 = phi %struct.rtx_def* [ %target.addr.4, %if.end769 ], [ %target.addr.3, %land.lhs.true626 ], [ %target.addr.3, %land.lhs.true619 ], [ %target.addr.3, %land.lhs.true612 ], [ %target.addr.3, %land.lhs.true603 ], [ %target.addr.3, %land.lhs.true598 ], [ %target.addr.3, %land.lhs.true595 ], [ %target.addr.3, %lor.lhs.false592 ]
  %116 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 24), align 16, !tbaa !1
  %cmp785 = icmp eq %struct.optab* %binoptab.addr.0, %116
  br i1 %cmp785, label %land.lhs.true790, label %lor.lhs.false787

lor.lhs.false787:                                 ; preds = %if.end784
  %117 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 25), align 8, !tbaa !1
  %cmp788 = icmp eq %struct.optab* %binoptab.addr.0, %117
  %or.cond1794 = and i1 %cmp788, %cmp389
  br i1 %or.cond1794, label %land.lhs.true793, label %if.end1001

land.lhs.true790:                                 ; preds = %if.end784
  br i1 %cmp389, label %land.lhs.true793, label %if.end1001

land.lhs.true793:                                 ; preds = %lor.lhs.false787, %land.lhs.true790
  %118 = getelementptr inbounds %struct.rtx_def* %op1.addr.5, i64 0, i32 0
  %bf.load794 = load i32* %118, align 8
  %bf.clear795 = and i32 %bf.load794, 65535
  %cmp796 = icmp eq i32 %bf.clear795, 54
  br i1 %cmp796, label %land.lhs.true798, label %if.end1001

land.lhs.true798:                                 ; preds = %land.lhs.true793
  %119 = load i8* %arrayidx236, align 1, !tbaa !9
  %conv801 = zext i8 %119 to i32
  %120 = load i32* @target_flags, align 4, !tbaa !7
  %121 = lshr i32 %120, 22
  %122 = and i32 %121, 8
  %mul805 = add i32 %122, 8
  %cmp806 = icmp eq i32 %conv801, %mul805
  br i1 %cmp806, label %land.lhs.true808, label %if.end1001

land.lhs.true808:                                 ; preds = %land.lhs.true798
  %123 = load i32* @word_mode, align 4, !tbaa !9
  %idxprom809 = sext i32 %123 to i64
  %124 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 21), align 8, !tbaa !1
  %insn_code812 = getelementptr inbounds %struct.optab* %124, i64 0, i32 1, i64 %idxprom809, i32 0
  %125 = load i32* %insn_code812, align 4, !tbaa !10
  %cmp813 = icmp eq i32 %125, 1317
  br i1 %cmp813, label %if.end1001, label %land.lhs.true815

land.lhs.true815:                                 ; preds = %land.lhs.true808
  %126 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 22), align 16, !tbaa !1
  %insn_code819 = getelementptr inbounds %struct.optab* %126, i64 0, i32 1, i64 %idxprom809, i32 0
  %127 = load i32* %insn_code819, align 4, !tbaa !10
  %cmp820 = icmp eq i32 %127, 1317
  br i1 %cmp820, label %if.end1001, label %if.then822

if.then822:                                       ; preds = %land.lhs.true815
  %cmp843 = icmp eq %struct.rtx_def* %target.addr.5, null
  %cmp846 = icmp eq %struct.rtx_def* %target.addr.5, %op0.addr.4
  %or.cond2729 = or i1 %cmp843, %cmp846
  %cmp849 = icmp eq %struct.rtx_def* %target.addr.5, %op1.addr.5
  %or.cond2730 = or i1 %or.cond2729, %cmp849
  br i1 %or.cond2730, label %if.then851, label %if.end853

if.then851:                                       ; preds = %if.then822
  %call852 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode) #3
  br label %if.end853

if.end853:                                        ; preds = %if.then822, %if.then851
  %target.addr.6 = phi %struct.rtx_def* [ %call852, %if.then851 ], [ %target.addr.5, %if.then822 ]
  tail call void @start_sequence() #3
  %rtwint856 = getelementptr inbounds %struct.rtx_def* %op1.addr.5, i64 0, i32 1, i64 0, i32 0
  %128 = load i64* %rtwint856, align 8, !tbaa !19
  %conv857 = trunc i64 %128 to i32
  %129 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 24), align 16, !tbaa !1
  %cmp858 = icmp eq %struct.optab* %binoptab.addr.0, %129
  %conv859 = zext i1 %cmp858 to i32
  %xor860 = xor i32 %conv859, 1
  %call861 = tail call %struct.rtx_def* @operand_subword(%struct.rtx_def* %target.addr.6, i32 %xor860, i32 1, i32 %mode) #3
  %call863 = tail call %struct.rtx_def* @operand_subword(%struct.rtx_def* %target.addr.6, i32 %conv859, i32 1, i32 %mode) #3
  %call864 = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %op0.addr.4, i32 %xor860, i32 %mode) #3
  %call866 = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %op0.addr.4, i32 %conv859, i32 %mode) #3
  %130 = load i32* @target_flags, align 4, !tbaa !7
  %and867 = lshr i32 %130, 20
  %131 = and i32 %and867, 32
  %132 = add i32 %131, 32
  %cmp870 = icmp eq i32 %conv857, %132
  br i1 %cmp870, label %if.then872, label %if.else875

if.then872:                                       ; preds = %if.end853
  %call873 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call861, %struct.rtx_def* %call866) #3
  %call874 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call863, %struct.rtx_def* %call864) #3
  %133 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  br label %if.end977

if.else875:                                       ; preds = %if.end853
  %cmp889 = icmp slt i32 %conv857, %132
  %xor8912702 = xor i1 %cmp858, %cmp889
  %134 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 22), align 16, !tbaa !1
  %135 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 21), align 8, !tbaa !1
  %cond896 = select i1 %xor8912702, %struct.optab* %134, %struct.optab* %135
  %cond907 = select i1 %xor8912702, %struct.optab* %135, %struct.optab* %134
  %cmp911 = icmp sgt i32 %conv857, %132
  br i1 %cmp911, label %if.then913, label %if.else927

if.then913:                                       ; preds = %if.else875
  %sub917 = sub nsw i32 %conv857, %132
  %conv918 = sext i32 %sub917 to i64
  %call919 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv918) #3
  %136 = load i32* @target_flags, align 4, !tbaa !7
  %137 = lshr i32 %136, 19
  %138 = and i32 %137, 64
  %mul923 = sub i32 64, %conv857
  %sub924 = add i32 %mul923, %138
  %conv925 = sext i32 %sub924 to i64
  %call926 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv925) #3
  br label %if.end936

if.else927:                                       ; preds = %if.else875
  %sub931 = sub nsw i32 %132, %conv857
  %conv932 = sext i32 %sub931 to i64
  %call933 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv932) #3
  %sext = shl i64 %128, 32
  %conv934 = ashr exact i64 %sext, 32
  %call935 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv934) #3
  br label %if.end936

if.end936:                                        ; preds = %if.else927, %if.then913
  %second_shift_count.0 = phi %struct.rtx_def* [ %call926, %if.then913 ], [ %call935, %if.else927 ]
  %first_shift_count.0 = phi %struct.rtx_def* [ %call919, %if.then913 ], [ %call933, %if.else927 ]
  %139 = load i32* @word_mode, align 4, !tbaa !9
  %call937 = tail call %struct.rtx_def* @expand_binop(i32 %139, %struct.optab* %cond907, %struct.rtx_def* %call864, %struct.rtx_def* %first_shift_count.0, %struct.rtx_def* null, i32 %unsignedp, i32 %cond2854)
  %140 = load i32* @word_mode, align 4, !tbaa !9
  %call938 = tail call %struct.rtx_def* @expand_binop(i32 %140, %struct.optab* %cond896, %struct.rtx_def* %call866, %struct.rtx_def* %second_shift_count.0, %struct.rtx_def* %call863, i32 %unsignedp, i32 %cond2854)
  %cmp939 = icmp ne %struct.rtx_def* %call937, null
  %cmp942 = icmp ne %struct.rtx_def* %call938, null
  %or.cond1796 = and i1 %cmp939, %cmp942
  br i1 %or.cond1796, label %if.end947, label %if.end955

if.end947:                                        ; preds = %if.end936
  %141 = load i32* @word_mode, align 4, !tbaa !9
  %142 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 19), align 8, !tbaa !1
  %call945 = tail call %struct.rtx_def* @expand_binop(i32 %141, %struct.optab* %142, %struct.rtx_def* %call937, %struct.rtx_def* %call938, %struct.rtx_def* %call863, i32 %unsignedp, i32 %cond2854)
  %cmp948 = icmp ne %struct.rtx_def* %call945, null
  %cmp948.not = xor i1 %cmp948, true
  %cmp951 = icmp eq %struct.rtx_def* %call945, %call863
  %or.cond2731 = or i1 %cmp951, %cmp948.not
  br i1 %or.cond2731, label %if.end955, label %if.then953

if.then953:                                       ; preds = %if.end947
  %call954 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call863, %struct.rtx_def* %call945) #3
  br label %if.end955

if.end955:                                        ; preds = %if.end936, %if.end947, %if.then953
  %cmp9482809 = phi i1 [ %cmp948, %if.end947 ], [ %cmp948, %if.then953 ], [ false, %if.end936 ]
  %inter836.02808 = phi %struct.rtx_def* [ %call945, %if.end947 ], [ %call945, %if.then953 ], [ null, %if.end936 ]
  %143 = load i32* @word_mode, align 4, !tbaa !9
  %call956 = tail call %struct.rtx_def* @expand_binop(i32 %143, %struct.optab* %cond907, %struct.rtx_def* %call866, %struct.rtx_def* %first_shift_count.0, %struct.rtx_def* null, i32 %unsignedp, i32 %cond2854)
  %144 = load i32* @word_mode, align 4, !tbaa !9
  %call957 = tail call %struct.rtx_def* @expand_binop(i32 %144, %struct.optab* %cond896, %struct.rtx_def* %call864, %struct.rtx_def* %second_shift_count.0, %struct.rtx_def* %call861, i32 %unsignedp, i32 %cond2854)
  %cmp961 = icmp ne %struct.rtx_def* %call956, null
  %or.cond1798 = and i1 %cmp9482809, %cmp961
  %cmp964 = icmp ne %struct.rtx_def* %call957, null
  %or.cond1800 = and i1 %or.cond1798, %cmp964
  br i1 %or.cond1800, label %if.then966, label %if.end968

if.then966:                                       ; preds = %if.end955
  %145 = load i32* @word_mode, align 4, !tbaa !9
  %146 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 19), align 8, !tbaa !1
  %call967 = tail call %struct.rtx_def* @expand_binop(i32 %145, %struct.optab* %146, %struct.rtx_def* %call956, %struct.rtx_def* %call957, %struct.rtx_def* %call861, i32 %unsignedp, i32 %cond2854)
  br label %if.end968

if.end968:                                        ; preds = %if.then966, %if.end955
  %inter836.1 = phi %struct.rtx_def* [ %call967, %if.then966 ], [ %inter836.02808, %if.end955 ]
  %cmp969 = icmp eq %struct.rtx_def* %inter836.1, null
  %cmp972 = icmp eq %struct.rtx_def* %inter836.1, %call861
  %or.cond2732 = or i1 %cmp969, %cmp972
  br i1 %or.cond2732, label %if.end977, label %if.then974

if.then974:                                       ; preds = %if.end968
  %call975 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call861, %struct.rtx_def* %inter836.1) #3
  br label %if.end977

if.end977:                                        ; preds = %if.end968, %if.then974, %if.then872
  %inter836.2 = phi %struct.rtx_def* [ %133, %if.then872 ], [ %inter836.1, %if.then974 ], [ %inter836.1, %if.end968 ]
  %call978 = tail call %struct.rtx_def* @get_insns() #3
  tail call void @end_sequence() #3
  %cmp979 = icmp eq %struct.rtx_def* %inter836.2, null
  br i1 %cmp979, label %if.end1001, label %if.then981

if.then981:                                       ; preds = %if.end977
  %147 = load i32* %code112, align 4, !tbaa !5
  %cmp983 = icmp eq i32 %147, 0
  br i1 %cmp983, label %if.end989, label %if.then985

if.then985:                                       ; preds = %if.then981
  %call987 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 %147, i32 %mode, %struct.rtx_def* %op0.addr.4, %struct.rtx_def* %op1.addr.5) #3
  br label %if.end989

if.end989:                                        ; preds = %if.then981, %if.then985
  %equiv_value826.0 = phi %struct.rtx_def* [ %call987, %if.then985 ], [ null, %if.then981 ]
  %148 = load i32* @target_flags, align 4, !tbaa !7
  %and990 = lshr i32 %148, 20
  %149 = and i32 %and990, 32
  %150 = add i32 %149, 32
  %cmp993 = icmp eq i32 %conv857, %150
  br i1 %cmp993, label %if.else997, label %if.then995

if.then995:                                       ; preds = %if.end989
  %call996 = tail call %struct.rtx_def* @emit_no_conflict_block(%struct.rtx_def* %call978, %struct.rtx_def* %target.addr.6, %struct.rtx_def* %op0.addr.4, %struct.rtx_def* %op1.addr.5, %struct.rtx_def* %equiv_value826.0)
  br label %return

if.else997:                                       ; preds = %if.end989
  %call998 = tail call %struct.rtx_def* @emit_insns(%struct.rtx_def* %call978) #3
  br label %return

if.end1001:                                       ; preds = %if.end977, %land.lhs.true815, %land.lhs.true808, %land.lhs.true798, %land.lhs.true793, %land.lhs.true790, %lor.lhs.false787
  %target.addr.7 = phi %struct.rtx_def* [ %target.addr.6, %if.end977 ], [ %target.addr.5, %land.lhs.true815 ], [ %target.addr.5, %land.lhs.true808 ], [ %target.addr.5, %land.lhs.true798 ], [ %target.addr.5, %land.lhs.true793 ], [ %target.addr.5, %land.lhs.true790 ], [ %target.addr.5, %lor.lhs.false787 ]
  %151 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 0), align 16, !tbaa !1
  %cmp1002 = icmp eq %struct.optab* %binoptab.addr.0, %151
  br i1 %cmp1002, label %land.lhs.true1007, label %lor.lhs.false1004

lor.lhs.false1004:                                ; preds = %if.end1001
  %152 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 2), align 16, !tbaa !1
  %cmp1005 = icmp eq %struct.optab* %binoptab.addr.0, %152
  %or.cond1802 = and i1 %cmp1005, %cmp389
  br i1 %or.cond1802, label %land.lhs.true1010, label %if.end1166

land.lhs.true1007:                                ; preds = %if.end1001
  br i1 %cmp389, label %land.lhs.true1010, label %if.end1354

land.lhs.true1010:                                ; preds = %lor.lhs.false1004, %land.lhs.true1007
  %153 = load i8* %arrayidx236, align 1, !tbaa !9
  %conv1013 = zext i8 %153 to i32
  %154 = load i32* @target_flags, align 4, !tbaa !7
  %and1014 = and i32 %154, 33554432
  %155 = lshr exact i32 %and1014, 22
  %mul1017 = add i32 %155, 8
  %cmp1018 = icmp ult i32 %conv1013, %mul1017
  br i1 %cmp1018, label %if.end1166, label %land.lhs.true1020

land.lhs.true1020:                                ; preds = %land.lhs.true1010
  %156 = load i32* @word_mode, align 4, !tbaa !9
  %idxprom1021 = sext i32 %156 to i64
  %insn_code1024 = getelementptr inbounds %struct.optab* %binoptab.addr.0, i64 0, i32 1, i64 %idxprom1021, i32 0
  %157 = load i32* %insn_code1024, align 4, !tbaa !10
  %cmp1025 = icmp eq i32 %157, 1317
  br i1 %cmp1025, label %if.end1166, label %if.then1027

if.then1027:                                      ; preds = %land.lhs.true1020
  %arrayidx1039 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom
  %158 = load i16* %arrayidx1039, align 2, !tbaa !17
  %conv1040 = zext i16 %158 to i32
  %159 = lshr exact i32 %and1014, 20
  %160 = add i32 %159, 32
  %div1044 = sdiv i32 %conv1040, %160
  %call1052 = tail call %struct.rtx_def* @force_reg(i32 %mode, %struct.rtx_def* %op0.addr.4) #3
  %call1053 = tail call %struct.rtx_def* @force_reg(i32 %mode, %struct.rtx_def* %op1.addr.5) #3
  %cmp1054 = icmp eq %struct.rtx_def* %target.addr.7, null
  br i1 %cmp1054, label %if.then1067, label %lor.lhs.false1056

lor.lhs.false1056:                                ; preds = %if.then1027
  %161 = getelementptr inbounds %struct.rtx_def* %target.addr.7, i64 0, i32 0
  %bf.load1057 = load i32* %161, align 8
  %bf.clear1058 = and i32 %bf.load1057, 65535
  %cmp1059 = icmp ne i32 %bf.clear1058, 61
  %cmp1062 = icmp eq %struct.rtx_def* %target.addr.7, %call1052
  %or.cond2733 = or i1 %cmp1059, %cmp1062
  %cmp1065 = icmp eq %struct.rtx_def* %target.addr.7, %call1053
  %or.cond2734 = or i1 %or.cond2733, %cmp1065
  br i1 %or.cond2734, label %if.then1067, label %if.end1069

if.then1067:                                      ; preds = %lor.lhs.false1056, %if.then1027
  %call1068 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode) #3
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %call1068, i64 0, i32 0
  %bf.load1070.pre = load i32* %.phi.trans.insert, align 8
  br label %if.end1069

if.end1069:                                       ; preds = %lor.lhs.false1056, %if.then1067
  %bf.load1070 = phi i32 [ %bf.load1070.pre, %if.then1067 ], [ %bf.load1057, %lor.lhs.false1056 ]
  %target.addr.8 = phi %struct.rtx_def* [ %call1068, %if.then1067 ], [ %target.addr.7, %lor.lhs.false1056 ]
  %bf.clear1071 = and i32 %bf.load1070, 65535
  %cmp1072 = icmp eq i32 %bf.clear1071, 61
  br i1 %cmp1072, label %if.then1074, label %for.cond1078.preheader

if.then1074:                                      ; preds = %if.end1069
  %call1075 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %target.addr.8) #3
  %call1076 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call1075) #3
  br label %for.cond1078.preheader

for.cond1078.preheader:                           ; preds = %if.then1074, %if.end1069
  %cmp10792905 = icmp eq i32 %div1044, 0
  br i1 %cmp10792905, label %for.end1137, label %for.body1081

for.body1081:                                     ; preds = %for.cond1078.preheader, %for.cond1078.backedge
  %i1029.02907 = phi i32 [ %add, %for.cond1078.backedge ], [ 0, %for.cond1078.preheader ]
  %carry_out.02906 = phi %struct.rtx_def* [ %carry_out.0.be, %for.cond1078.backedge ], [ null, %for.cond1078.preheader ]
  %call1085 = tail call %struct.rtx_def* @operand_subword(%struct.rtx_def* %target.addr.8, i32 %i1029.02907, i32 1, i32 %mode) #3
  %call1087 = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %call1052, i32 %i1029.02907, i32 %mode) #3
  %call1089 = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %call1053, i32 %i1029.02907, i32 %mode) #3
  %162 = load i32* @word_mode, align 4, !tbaa !9
  %call1092 = tail call %struct.rtx_def* @expand_binop(i32 %162, %struct.optab* %binoptab.addr.0, %struct.rtx_def* %call1087, %struct.rtx_def* %call1089, %struct.rtx_def* %call1085, i32 %unsignedp, i32 %cond2854)
  %cmp1093 = icmp eq %struct.rtx_def* %call1092, null
  br i1 %cmp1093, label %for.end1137, label %if.end1096

if.end1096:                                       ; preds = %for.body1081
  %add = add nsw i32 %i1029.02907, 1
  %cmp1097 = icmp ult i32 %add, %div1044
  br i1 %cmp1097, label %if.then1099, label %if.end1105

if.then1099:                                      ; preds = %if.end1096
  %163 = load i32* @word_mode, align 4, !tbaa !9
  %call1100 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %163) #3
  %164 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 0), align 16, !tbaa !1
  %cmp1101 = icmp eq %struct.optab* %binoptab.addr.0, %164
  %cond1103 = select i1 %cmp1101, i32 107, i32 105
  %165 = load i32* @word_mode, align 4, !tbaa !9
  %call1104 = tail call %struct.rtx_def* @emit_store_flag_force(%struct.rtx_def* %call1100, i32 %cond1103, %struct.rtx_def* %call1092, %struct.rtx_def* %call1087, i32 %165, i32 1, i32 1) #3
  br label %if.end1105

if.end1105:                                       ; preds = %if.then1099, %if.end1096
  %carry_out.1 = phi %struct.rtx_def* [ %call1104, %if.then1099 ], [ %carry_out.02906, %if.end1096 ]
  %cmp1106 = icmp sgt i32 %i1029.02907, 0
  br i1 %cmp1106, label %if.then1108, label %for.cond1078.backedge

if.then1108:                                      ; preds = %if.end1105
  %166 = load i32* @word_mode, align 4, !tbaa !9
  %call1116 = tail call %struct.rtx_def* @expand_binop(i32 %166, %struct.optab* %binoptab.addr.0, %struct.rtx_def* %call1092, %struct.rtx_def* %carry_out.02906, %struct.rtx_def* null, i32 1, i32 %cond2854)
  br i1 %cmp1097, label %if.then1120, label %if.end1132

if.then1120:                                      ; preds = %if.then1108
  %167 = load i32* @word_mode, align 4, !tbaa !9
  %call1122 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %167) #3
  %168 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 0), align 16, !tbaa !1
  %cmp1123 = icmp eq %struct.optab* %binoptab.addr.0, %168
  %cond1125 = select i1 %cmp1123, i32 107, i32 105
  %169 = load i32* @word_mode, align 4, !tbaa !9
  %call1126 = tail call %struct.rtx_def* @emit_store_flag_force(%struct.rtx_def* %call1122, i32 %cond1125, %struct.rtx_def* %call1116, %struct.rtx_def* %call1092, i32 %169, i32 1, i32 1) #3
  %170 = load i32* @word_mode, align 4, !tbaa !9
  %171 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 19), align 8, !tbaa !1
  %call1127 = tail call %struct.rtx_def* @expand_binop(i32 %170, %struct.optab* %171, %struct.rtx_def* %carry_out.1, %struct.rtx_def* %call1126, %struct.rtx_def* %carry_out.1, i32 0, i32 %cond2854)
  %cmp1128 = icmp eq %struct.rtx_def* %call1127, null
  br i1 %cmp1128, label %for.end1137, label %if.end1132

if.end1132:                                       ; preds = %if.then1120, %if.then1108
  %carry_out.2 = phi %struct.rtx_def* [ %call1127, %if.then1120 ], [ %carry_out.1, %if.then1108 ]
  %call1133 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call1085, %struct.rtx_def* %call1116) #3
  br label %for.cond1078.backedge

for.cond1078.backedge:                            ; preds = %if.end1132, %if.end1105
  %carry_out.0.be = phi %struct.rtx_def* [ %carry_out.2, %if.end1132 ], [ %carry_out.1, %if.end1105 ]
  br i1 %cmp1097, label %for.body1081, label %for.end1137

for.end1137:                                      ; preds = %for.cond1078.backedge, %for.body1081, %if.then1120, %for.cond1078.preheader
  %i1029.0.lcssa = phi i32 [ 0, %for.cond1078.preheader ], [ %add, %for.cond1078.backedge ], [ %i1029.02907, %for.body1081 ], [ %i1029.02907, %if.then1120 ]
  %172 = load i32* @target_flags, align 4, !tbaa !7
  %and1141 = lshr i32 %172, 20
  %173 = and i32 %and1141, 32
  %174 = add i32 %173, 32
  %div1144 = sdiv i32 %conv1040, %174
  %cmp1145 = icmp eq i32 %i1029.0.lcssa, %div1144
  br i1 %cmp1145, label %if.then1147, label %if.else1164

if.then1147:                                      ; preds = %for.end1137
  %175 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 30), align 16, !tbaa !1
  %insn_code1151 = getelementptr inbounds %struct.optab* %175, i64 0, i32 1, i64 %idxprom, i32 0
  %176 = load i32* %insn_code1151, align 4, !tbaa !10
  %cmp1152 = icmp eq i32 %176, 1317
  br i1 %cmp1152, label %return, label %if.then1154

if.then1154:                                      ; preds = %if.then1147
  %call1157 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %target.addr.8, %struct.rtx_def* %target.addr.8) #3
  %177 = load i32* %code112, align 4, !tbaa !5
  %call1159 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %call1052) #3
  %call1160 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %call1053) #3
  %call1161 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 %177, i32 %mode, %struct.rtx_def* %call1159, %struct.rtx_def* %call1160) #3
  %call1162 = tail call %struct.rtx_def* @set_unique_reg_note(%struct.rtx_def* %call1157, i32 4, %struct.rtx_def* %call1161) #3
  br label %return

if.else1164:                                      ; preds = %for.end1137
  tail call void @delete_insns_since(%struct.rtx_def* %call111) #3
  br label %if.end1166

if.end1166:                                       ; preds = %land.lhs.true1020, %land.lhs.true1010, %if.else1164, %lor.lhs.false1004
  %target.addr.9 = phi %struct.rtx_def* [ %target.addr.8, %if.else1164 ], [ %target.addr.7, %land.lhs.true1020 ], [ %target.addr.7, %land.lhs.true1010 ], [ %target.addr.7, %lor.lhs.false1004 ]
  %178 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 4), align 16, !tbaa !1
  %cmp1167 = icmp eq %struct.optab* %binoptab.addr.0, %178
  %or.cond1804 = and i1 %cmp1167, %cmp389
  br i1 %or.cond1804, label %land.lhs.true1172, label %if.end1354

land.lhs.true1172:                                ; preds = %if.end1166
  %179 = load i8* %arrayidx236, align 1, !tbaa !9
  %conv1175 = zext i8 %179 to i32
  %180 = load i32* @target_flags, align 4, !tbaa !7
  %181 = lshr i32 %180, 22
  %182 = and i32 %181, 8
  %mul1179 = add i32 %182, 8
  %cmp1180 = icmp eq i32 %conv1175, %mul1179
  br i1 %cmp1180, label %land.lhs.true1182, label %if.end1354

land.lhs.true1182:                                ; preds = %land.lhs.true1172
  %183 = load i32* @word_mode, align 4, !tbaa !9
  %idxprom1183 = sext i32 %183 to i64
  %insn_code1186 = getelementptr inbounds %struct.optab* %binoptab.addr.0, i64 0, i32 1, i64 %idxprom1183, i32 0
  %184 = load i32* %insn_code1186, align 4, !tbaa !10
  %cmp1187 = icmp eq i32 %184, 1317
  br i1 %cmp1187, label %if.end1354, label %land.lhs.true1189

land.lhs.true1189:                                ; preds = %land.lhs.true1182
  %185 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 0), align 16, !tbaa !1
  %insn_code1193 = getelementptr inbounds %struct.optab* %185, i64 0, i32 1, i64 %idxprom1183, i32 0
  %186 = load i32* %insn_code1193, align 4, !tbaa !10
  %cmp1194 = icmp eq i32 %186, 1317
  br i1 %cmp1194, label %if.end1354, label %land.lhs.true1196

land.lhs.true1196:                                ; preds = %land.lhs.true1189
  %187 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 9), align 8, !tbaa !1
  %insn_code1200 = getelementptr inbounds %struct.optab* %187, i64 0, i32 1, i64 %idxprom, i32 0
  %188 = load i32* %insn_code1200, align 4, !tbaa !10
  %cmp1201 = icmp eq i32 %188, 1317
  br i1 %cmp1201, label %lor.lhs.false1203, label %if.then1210

lor.lhs.false1203:                                ; preds = %land.lhs.true1196
  %189 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 8), align 16, !tbaa !1
  %insn_code1207 = getelementptr inbounds %struct.optab* %189, i64 0, i32 1, i64 %idxprom, i32 0
  %190 = load i32* %insn_code1207, align 4, !tbaa !10
  %cmp1208 = icmp eq i32 %190, 1317
  br i1 %cmp1208, label %if.end1354, label %if.then1210

if.then1210:                                      ; preds = %lor.lhs.false1203, %land.lhs.true1196
  %call1214 = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %op0.addr.4, i32 1, i32 %mode) #3
  %call1216 = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %op0.addr.4, i32 0, i32 %mode) #3
  %call1218 = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %op1.addr.5, i32 1, i32 %mode) #3
  %call1220 = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %op1.addr.5, i32 0, i32 %mode) #3
  %cmp1224 = icmp eq %struct.rtx_def* %target.addr.9, %op0.addr.4
  %cmp1227 = icmp eq %struct.rtx_def* %target.addr.9, %op1.addr.5
  %or.cond2735 = or i1 %cmp1224, %cmp1227
  br i1 %or.cond2735, label %if.then1237, label %lor.lhs.false1229

lor.lhs.false1229:                                ; preds = %if.then1210
  %cmp1230 = icmp eq %struct.rtx_def* %target.addr.9, null
  br i1 %cmp1230, label %if.end1238, label %land.lhs.true1232

land.lhs.true1232:                                ; preds = %lor.lhs.false1229
  %191 = getelementptr inbounds %struct.rtx_def* %target.addr.9, i64 0, i32 0
  %bf.load1233 = load i32* %191, align 8
  %bf.clear1234 = and i32 %bf.load1233, 65535
  %cmp1235 = icmp eq i32 %bf.clear1234, 61
  br i1 %cmp1235, label %if.end1238, label %if.then1237

if.then1237:                                      ; preds = %land.lhs.true1232, %if.then1210
  br label %if.end1238

if.end1238:                                       ; preds = %land.lhs.true1232, %lor.lhs.false1229, %if.then1237
  %target.addr.10 = phi %struct.rtx_def* [ null, %if.then1237 ], [ %target.addr.9, %land.lhs.true1232 ], [ null, %lor.lhs.false1229 ]
  %192 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 9), align 8, !tbaa !1
  %insn_code1242 = getelementptr inbounds %struct.optab* %192, i64 0, i32 1, i64 %idxprom, i32 0
  %193 = load i32* %insn_code1242, align 4, !tbaa !10
  %cmp1243 = icmp eq i32 %193, 1317
  br i1 %cmp1243, label %land.lhs.true1255, label %if.then1245

if.then1245:                                      ; preds = %if.end1238
  %call1246 = tail call %struct.rtx_def* @expand_binop(i32 %mode, %struct.optab* %192, %struct.rtx_def* %call1216, %struct.rtx_def* %call1220, %struct.rtx_def* %target.addr.10, i32 1, i32 0)
  %cmp1247 = icmp eq %struct.rtx_def* %call1246, null
  br i1 %cmp1247, label %if.then1249, label %if.end1293

if.then1249:                                      ; preds = %if.then1245
  tail call void @delete_insns_since(%struct.rtx_def* %call111) #3
  br label %land.lhs.true1255

land.lhs.true1255:                                ; preds = %if.then1249, %if.end1238
  %194 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 8), align 16, !tbaa !1
  %insn_code1259 = getelementptr inbounds %struct.optab* %194, i64 0, i32 1, i64 %idxprom, i32 0
  %195 = load i32* %insn_code1259, align 4, !tbaa !10
  %cmp1260 = icmp eq i32 %195, 1317
  br i1 %cmp1260, label %if.end1353, label %if.then1262

if.then1262:                                      ; preds = %land.lhs.true1255
  %196 = load i32* @target_flags, align 4, !tbaa !7
  %and1264 = lshr i32 %196, 20
  %197 = and i32 %and1264, 32
  %sub12672700 = or i32 %197, 31
  %conv12682701 = zext i32 %sub12672700 to i64
  %call1269 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv12682701) #3
  %198 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 8), align 16, !tbaa !1
  %call1270 = tail call %struct.rtx_def* @expand_binop(i32 %mode, %struct.optab* %198, %struct.rtx_def* %call1216, %struct.rtx_def* %call1220, %struct.rtx_def* %target.addr.10, i32 1, i32 0)
  %199 = load i32* @word_mode, align 4, !tbaa !9
  %200 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 22), align 16, !tbaa !1
  %call1271 = tail call %struct.rtx_def* @expand_binop(i32 %199, %struct.optab* %200, %struct.rtx_def* %call1216, %struct.rtx_def* %call1269, %struct.rtx_def* null, i32 1, i32 %cond2854)
  %tobool1272 = icmp eq %struct.rtx_def* %call1271, null
  %201 = load i32* @word_mode, align 4, !tbaa !9
  br i1 %tobool1272, label %if.else1275, label %if.then1273

if.then1273:                                      ; preds = %if.then1262
  %202 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 0), align 16, !tbaa !1
  %call1274 = tail call %struct.rtx_def* @expand_binop(i32 %201, %struct.optab* %202, %struct.rtx_def* %call1214, %struct.rtx_def* %call1271, %struct.rtx_def* %call1271, i32 0, i32 %cond2854)
  br label %if.end1281

if.else1275:                                      ; preds = %if.then1262
  %203 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 23), align 8, !tbaa !1
  %call1276 = tail call %struct.rtx_def* @expand_binop(i32 %201, %struct.optab* %203, %struct.rtx_def* %call1216, %struct.rtx_def* %call1269, %struct.rtx_def* null, i32 0, i32 %cond2854)
  %tobool1277 = icmp eq %struct.rtx_def* %call1276, null
  br i1 %tobool1277, label %if.end1281, label %if.then1278

if.then1278:                                      ; preds = %if.else1275
  %204 = load i32* @word_mode, align 4, !tbaa !9
  %205 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 2), align 16, !tbaa !1
  %call1279 = tail call %struct.rtx_def* @expand_binop(i32 %204, %struct.optab* %205, %struct.rtx_def* %call1214, %struct.rtx_def* %call1276, %struct.rtx_def* %call1276, i32 0, i32 %cond2854)
  br label %if.end1281

if.end1281:                                       ; preds = %if.else1275, %if.then1278, %if.then1273
  %op0_xhigh.1 = phi %struct.rtx_def* [ %call1274, %if.then1273 ], [ %call1279, %if.then1278 ], [ null, %if.else1275 ]
  %206 = load i32* @word_mode, align 4, !tbaa !9
  %207 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 22), align 16, !tbaa !1
  %call1282 = tail call %struct.rtx_def* @expand_binop(i32 %206, %struct.optab* %207, %struct.rtx_def* %call1220, %struct.rtx_def* %call1269, %struct.rtx_def* null, i32 1, i32 %cond2854)
  %tobool1283 = icmp eq %struct.rtx_def* %call1282, null
  %208 = load i32* @word_mode, align 4, !tbaa !9
  br i1 %tobool1283, label %if.else1286, label %if.then1284

if.then1284:                                      ; preds = %if.end1281
  %209 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 0), align 16, !tbaa !1
  %call1285 = tail call %struct.rtx_def* @expand_binop(i32 %208, %struct.optab* %209, %struct.rtx_def* %call1218, %struct.rtx_def* %call1282, %struct.rtx_def* %call1282, i32 0, i32 %cond2854)
  br label %if.end1293

if.else1286:                                      ; preds = %if.end1281
  %210 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 23), align 8, !tbaa !1
  %call1287 = tail call %struct.rtx_def* @expand_binop(i32 %208, %struct.optab* %210, %struct.rtx_def* %call1220, %struct.rtx_def* %call1269, %struct.rtx_def* null, i32 0, i32 %cond2854)
  %tobool1288 = icmp eq %struct.rtx_def* %call1287, null
  br i1 %tobool1288, label %if.end1353, label %if.then1289

if.then1289:                                      ; preds = %if.else1286
  %211 = load i32* @word_mode, align 4, !tbaa !9
  %212 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 2), align 16, !tbaa !1
  %call1290 = tail call %struct.rtx_def* @expand_binop(i32 %211, %struct.optab* %212, %struct.rtx_def* %call1218, %struct.rtx_def* %call1287, %struct.rtx_def* %call1287, i32 0, i32 %cond2854)
  br label %if.end1293

if.end1293:                                       ; preds = %if.then1245, %if.then1284, %if.then1289
  %product.1 = phi %struct.rtx_def* [ %call1270, %if.then1284 ], [ %call1270, %if.then1289 ], [ %call1246, %if.then1245 ]
  %op0_xhigh.2 = phi %struct.rtx_def* [ %op0_xhigh.1, %if.then1284 ], [ %op0_xhigh.1, %if.then1289 ], [ %call1214, %if.then1245 ]
  %op1_xhigh.1 = phi %struct.rtx_def* [ %call1285, %if.then1284 ], [ %call1290, %if.then1289 ], [ %call1218, %if.then1245 ]
  %tobool1294 = icmp ne %struct.rtx_def* %product.1, null
  %tobool1296 = icmp ne %struct.rtx_def* %op0_xhigh.2, null
  %or.cond1806 = and i1 %tobool1294, %tobool1296
  %tobool1298 = icmp ne %struct.rtx_def* %op1_xhigh.1, null
  %or.cond1808 = and i1 %or.cond1806, %tobool1298
  br i1 %or.cond1808, label %if.then1299, label %if.end1353

if.then1299:                                      ; preds = %if.end1293
  %call1301 = tail call %struct.rtx_def* @operand_subword(%struct.rtx_def* %product.1, i32 1, i32 1, i32 %mode) #3
  %213 = load i32* @word_mode, align 4, !tbaa !9
  %call1304 = tail call %struct.rtx_def* @expand_binop(i32 %213, %struct.optab* %binoptab.addr.0, %struct.rtx_def* %call1216, %struct.rtx_def* %op1_xhigh.1, %struct.rtx_def* null, i32 0, i32 0)
  %cmp1305 = icmp eq %struct.rtx_def* %call1304, null
  br i1 %cmp1305, label %if.end1353, label %if.end1309

if.end1309:                                       ; preds = %if.then1299
  %214 = load i32* @word_mode, align 4, !tbaa !9
  %215 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 0), align 16, !tbaa !1
  %call1308 = tail call %struct.rtx_def* @expand_binop(i32 %214, %struct.optab* %215, %struct.rtx_def* %call1304, %struct.rtx_def* %call1301, %struct.rtx_def* %call1301, i32 0, i32 %cond2854)
  %cmp1310 = icmp ne %struct.rtx_def* %call1308, null
  %cmp1310.not = xor i1 %cmp1310, true
  %cmp1313 = icmp eq %struct.rtx_def* %call1308, %call1301
  %or.cond2736 = or i1 %cmp1313, %cmp1310.not
  br i1 %or.cond2736, label %if.end1317, label %if.then1315

if.then1315:                                      ; preds = %if.end1309
  %call1316 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call1301, %struct.rtx_def* %call1308) #3
  br i1 %cmp1310, label %if.end1322, label %if.end1353

if.end1317:                                       ; preds = %if.end1309
  br i1 %cmp1310, label %if.end1322, label %if.end1353

if.end1322:                                       ; preds = %if.end1317, %if.then1315
  %216 = load i32* @word_mode, align 4, !tbaa !9
  %call1321 = tail call %struct.rtx_def* @expand_binop(i32 %216, %struct.optab* %binoptab.addr.0, %struct.rtx_def* %call1220, %struct.rtx_def* %op0_xhigh.2, %struct.rtx_def* null, i32 0, i32 0)
  %cmp1323 = icmp eq %struct.rtx_def* %call1321, null
  br i1 %cmp1323, label %if.end1353, label %if.end1327

if.end1327:                                       ; preds = %if.end1322
  %217 = load i32* @word_mode, align 4, !tbaa !9
  %218 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 0), align 16, !tbaa !1
  %call1326 = tail call %struct.rtx_def* @expand_binop(i32 %217, %struct.optab* %218, %struct.rtx_def* %call1321, %struct.rtx_def* %call1301, %struct.rtx_def* %call1301, i32 0, i32 %cond2854)
  %cmp1328 = icmp ne %struct.rtx_def* %call1326, null
  %cmp1328.not = xor i1 %cmp1328, true
  %cmp1331 = icmp eq %struct.rtx_def* %call1326, %call1301
  %or.cond2737 = or i1 %cmp1331, %cmp1328.not
  br i1 %or.cond2737, label %if.end1335, label %if.then1333

if.then1333:                                      ; preds = %if.end1327
  %call1334 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call1301, %struct.rtx_def* %call1326) #3
  br i1 %cmp1328, label %if.then1338, label %if.end1353

if.end1335:                                       ; preds = %if.end1327
  br i1 %cmp1328, label %if.then1338, label %if.end1353

if.then1338:                                      ; preds = %if.then1333, %if.end1335
  %219 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 30), align 16, !tbaa !1
  %insn_code1342 = getelementptr inbounds %struct.optab* %219, i64 0, i32 1, i64 %idxprom, i32 0
  %220 = load i32* %insn_code1342, align 4, !tbaa !10
  %cmp1343 = icmp eq i32 %220, 1317
  br i1 %cmp1343, label %return, label %if.then1345

if.then1345:                                      ; preds = %if.then1338
  %call1346 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %product.1, %struct.rtx_def* %product.1) #3
  %call1347 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %op0.addr.4) #3
  %call1348 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %op1.addr.5) #3
  %call1349 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 78, i32 %mode, %struct.rtx_def* %call1347, %struct.rtx_def* %call1348) #3
  %call1350 = tail call %struct.rtx_def* @set_unique_reg_note(%struct.rtx_def* %call1346, i32 4, %struct.rtx_def* %call1349) #3
  br label %return

if.end1353:                                       ; preds = %if.end1317, %if.end1322, %if.then1299, %if.then1315, %if.else1286, %land.lhs.true1255, %if.then1333, %if.end1335, %if.end1293
  tail call void @delete_insns_since(%struct.rtx_def* %call111) #3
  br label %if.end1354

if.end1354:                                       ; preds = %land.lhs.true1007, %lor.lhs.false1203, %land.lhs.true1189, %land.lhs.true1182, %if.end1353, %land.lhs.true1172, %if.end1166
  %target.addr.11 = phi %struct.rtx_def* [ %target.addr.10, %if.end1353 ], [ %target.addr.9, %lor.lhs.false1203 ], [ %target.addr.9, %land.lhs.true1189 ], [ %target.addr.9, %land.lhs.true1182 ], [ %target.addr.9, %land.lhs.true1172 ], [ %target.addr.9, %if.end1166 ], [ %target.addr.7, %land.lhs.true1007 ]
  %.off2699 = add i32 %42, -5
  %221 = icmp ult i32 %.off2699, 2
  br i1 %221, label %if.then1360, label %if.end1627

if.then1360:                                      ; preds = %if.end1354
  %cmp1358 = icmp eq i32 %42, 5
  %arrayidx1374 = getelementptr inbounds [59 x i8]* @mode_unit_size, i64 0, i64 %idxprom
  %222 = load i8* %arrayidx1374, align 1, !tbaa !9
  %conv1375 = zext i8 %222 to i32
  %mul1376 = shl nuw nsw i32 %conv1375, 3
  %cond1379 = select i1 %cmp1358, i32 1, i32 2
  %call1380 = tail call i32 @mode_for_size(i32 %mul1376, i32 %cond1379, i32 0) #3
  %cmp1381 = icmp eq i32 %call1380, 51
  br i1 %cmp1381, label %if.then1383, label %if.end1384

if.then1383:                                      ; preds = %if.then1360
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 1512, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.expand_binop, i64 0, i64 0)) #6
  unreachable

if.end1384:                                       ; preds = %if.then1360
  %tobool1385 = icmp eq %struct.rtx_def* %target.addr.11, null
  br i1 %tobool1385, label %if.then1386, label %if.end1388

if.then1386:                                      ; preds = %if.end1384
  %call1387 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode) #3
  br label %if.end1388

if.end1388:                                       ; preds = %if.end1384, %if.then1386
  %target.addr.12 = phi %struct.rtx_def* [ %target.addr.11, %if.end1384 ], [ %call1387, %if.then1386 ]
  tail call void @start_sequence() #3
  %call1389 = tail call %struct.rtx_def* @gen_realpart(i32 %call1380, %struct.rtx_def* %target.addr.12) #3
  %call1390 = tail call %struct.rtx_def* @gen_imagpart(i32 %call1380, %struct.rtx_def* %target.addr.12) #3
  %223 = getelementptr inbounds %struct.rtx_def* %op0.addr.4, i64 0, i32 0
  %bf.load1391 = load i32* %223, align 8
  %bf.lshr1392 = lshr i32 %bf.load1391, 16
  %bf.clear1393 = and i32 %bf.lshr1392, 255
  %cmp1394 = icmp eq i32 %bf.clear1393, %mode
  br i1 %cmp1394, label %if.then1396, label %if.end1400

if.then1396:                                      ; preds = %if.end1388
  %call1397 = tail call %struct.rtx_def* @gen_realpart(i32 %call1380, %struct.rtx_def* %op0.addr.4) #3
  %call1398 = tail call %struct.rtx_def* @gen_imagpart(i32 %call1380, %struct.rtx_def* %op0.addr.4) #3
  br label %if.end1400

if.end1400:                                       ; preds = %if.end1388, %if.then1396
  %real0.0 = phi %struct.rtx_def* [ %call1397, %if.then1396 ], [ %op0.addr.4, %if.end1388 ]
  %imag0.0 = phi %struct.rtx_def* [ %call1398, %if.then1396 ], [ null, %if.end1388 ]
  %224 = getelementptr inbounds %struct.rtx_def* %op1.addr.5, i64 0, i32 0
  %bf.load1401 = load i32* %224, align 8
  %bf.lshr1402 = lshr i32 %bf.load1401, 16
  %bf.clear1403 = and i32 %bf.lshr1402, 255
  %cmp1404 = icmp eq i32 %bf.clear1403, %mode
  br i1 %cmp1404, label %if.then1406, label %if.end1410

if.then1406:                                      ; preds = %if.end1400
  %call1407 = tail call %struct.rtx_def* @gen_realpart(i32 %call1380, %struct.rtx_def* %op1.addr.5) #3
  %call1408 = tail call %struct.rtx_def* @gen_imagpart(i32 %call1380, %struct.rtx_def* %op1.addr.5) #3
  br label %if.end1410

if.end1410:                                       ; preds = %if.end1400, %if.then1406
  %real1.0 = phi %struct.rtx_def* [ %call1407, %if.then1406 ], [ %op1.addr.5, %if.end1400 ]
  %imag1.0 = phi %struct.rtx_def* [ %call1408, %if.then1406 ], [ null, %if.end1400 ]
  %cmp1411 = icmp eq %struct.rtx_def* %real0.0, null
  %cmp1414 = icmp eq %struct.rtx_def* %real1.0, null
  %or.cond1812 = or i1 %cmp1411, %cmp1414
  br i1 %or.cond1812, label %if.then1422, label %lor.lhs.false1416

lor.lhs.false1416:                                ; preds = %if.end1410
  %cmp1417 = icmp ne %struct.rtx_def* %imag0.0, null
  %cmp1420 = icmp ne %struct.rtx_def* %imag1.0, null
  %or.cond1814 = or i1 %cmp1417, %cmp1420
  br i1 %or.cond1814, label %if.end1423, label %if.then1422

if.then1422:                                      ; preds = %lor.lhs.false1416, %if.end1410
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 1539, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.expand_binop, i64 0, i64 0)) #6
  unreachable

if.end1423:                                       ; preds = %lor.lhs.false1416
  %225 = load i32* %code112, align 4, !tbaa !5
  switch i32 %225, label %sw.default1610 [
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 78, label %sw.bb1470
    i32 79, label %sw.bb1565
  ]

sw.bb:                                            ; preds = %if.end1423, %if.end1423
  %call1425 = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %binoptab.addr.0, %struct.rtx_def* %real0.0, %struct.rtx_def* %real1.0, %struct.rtx_def* %call1389, i32 %unsignedp, i32 %methods)
  %cmp1426 = icmp eq %struct.rtx_def* %call1425, null
  br i1 %cmp1426, label %sw.epilog1611, label %if.else1429

if.else1429:                                      ; preds = %sw.bb
  %cmp1430 = icmp eq %struct.rtx_def* %call1425, %call1389
  br i1 %cmp1430, label %if.end1435, label %if.then1432

if.then1432:                                      ; preds = %if.else1429
  %call1433 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call1389, %struct.rtx_def* %call1425) #3
  br label %if.end1435

if.end1435:                                       ; preds = %if.else1429, %if.then1432
  %or.cond1816 = and i1 %cmp1417, %cmp1420
  br i1 %or.cond1816, label %if.then1439, label %if.else1441

if.then1439:                                      ; preds = %if.end1435
  %call1440 = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %binoptab.addr.0, %struct.rtx_def* %imag0.0, %struct.rtx_def* %imag1.0, %struct.rtx_def* %call1390, i32 %unsignedp, i32 %methods)
  br label %if.end1459

if.else1441:                                      ; preds = %if.end1435
  br i1 %cmp1417, label %if.else1463, label %if.else1444

if.else1444:                                      ; preds = %if.else1441
  %226 = load i32* %code112, align 4, !tbaa !5
  %cmp1446 = icmp eq i32 %226, 76
  br i1 %cmp1446, label %if.then1448, label %if.end1459

if.then1448:                                      ; preds = %if.else1444
  %227 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 3), align 8, !tbaa !1
  %cmp1449 = icmp eq %struct.optab* %binoptab.addr.0, %227
  %228 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 33), align 8, !tbaa !1
  %229 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 32), align 16, !tbaa !1
  %cond1454 = select i1 %cmp1449, %struct.optab* %228, %struct.optab* %229
  %call1455 = tail call %struct.rtx_def* @expand_unop(i32 %call1380, %struct.optab* %cond1454, %struct.rtx_def* %imag1.0, %struct.rtx_def* %call1390, i32 %unsignedp)
  br label %if.end1459

if.end1459:                                       ; preds = %if.else1444, %if.then1448, %if.then1439
  %res.0 = phi %struct.rtx_def* [ %call1440, %if.then1439 ], [ %call1455, %if.then1448 ], [ %imag1.0, %if.else1444 ]
  %cmp1460 = icmp eq %struct.rtx_def* %res.0, null
  br i1 %cmp1460, label %sw.epilog1611, label %if.else1463

if.else1463:                                      ; preds = %if.else1441, %if.end1459
  %res.02836 = phi %struct.rtx_def* [ %res.0, %if.end1459 ], [ %imag0.0, %if.else1441 ]
  %cmp1464 = icmp eq %struct.rtx_def* %res.02836, %call1390
  br i1 %cmp1464, label %sw.epilog1611, label %if.then1466

if.then1466:                                      ; preds = %if.else1463
  %call1467 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call1390, %struct.rtx_def* %res.02836) #3
  br label %sw.epilog1611

sw.bb1470:                                        ; preds = %if.end1423
  %or.cond1818 = and i1 %cmp1417, %cmp1420
  %call1477 = tail call %struct.rtx_def* @force_reg(i32 %call1380, %struct.rtx_def* %real0.0) #3
  %call1478 = tail call %struct.rtx_def* @force_reg(i32 %call1380, %struct.rtx_def* %real1.0) #3
  br i1 %or.cond1818, label %if.then1474, label %if.else1533

if.then1474:                                      ; preds = %sw.bb1470
  %call1479 = tail call %struct.rtx_def* @force_reg(i32 %call1380, %struct.rtx_def* %imag0.0) #3
  %call1480 = tail call %struct.rtx_def* @force_reg(i32 %call1380, %struct.rtx_def* %imag1.0) #3
  %call1481 = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %binoptab.addr.0, %struct.rtx_def* %call1477, %struct.rtx_def* %call1478, %struct.rtx_def* null, i32 %unsignedp, i32 %methods)
  %call1482 = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %binoptab.addr.0, %struct.rtx_def* %call1479, %struct.rtx_def* %call1480, %struct.rtx_def* null, i32 %unsignedp, i32 %methods)
  %cmp1483 = icmp eq %struct.rtx_def* %call1481, null
  %cmp1486 = icmp eq %struct.rtx_def* %call1482, null
  %or.cond1820 = or i1 %cmp1483, %cmp1486
  br i1 %or.cond1820, label %sw.epilog1611, label %if.end1489

if.end1489:                                       ; preds = %if.then1474
  %230 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 5), align 8, !tbaa !1
  %cmp1490 = icmp eq %struct.optab* %binoptab.addr.0, %230
  %231 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 3), align 8, !tbaa !1
  %232 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 2), align 16, !tbaa !1
  %cond1495 = select i1 %cmp1490, %struct.optab* %231, %struct.optab* %232
  %call1496 = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %cond1495, %struct.rtx_def* %call1481, %struct.rtx_def* %call1482, %struct.rtx_def* %call1389, i32 %unsignedp, i32 %methods)
  %cmp1497 = icmp eq %struct.rtx_def* %call1496, null
  br i1 %cmp1497, label %sw.epilog1611, label %if.else1500

if.else1500:                                      ; preds = %if.end1489
  %cmp1501 = icmp eq %struct.rtx_def* %call1496, %call1389
  br i1 %cmp1501, label %if.end1506, label %if.then1503

if.then1503:                                      ; preds = %if.else1500
  %call1504 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call1389, %struct.rtx_def* %call1496) #3
  br label %if.end1506

if.end1506:                                       ; preds = %if.else1500, %if.then1503
  %call1507 = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %binoptab.addr.0, %struct.rtx_def* %call1477, %struct.rtx_def* %call1480, %struct.rtx_def* null, i32 %unsignedp, i32 %methods)
  %call1508 = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %binoptab.addr.0, %struct.rtx_def* %call1478, %struct.rtx_def* %call1479, %struct.rtx_def* null, i32 %unsignedp, i32 %methods)
  %cmp1509 = icmp eq %struct.rtx_def* %call1507, null
  %cmp1512 = icmp eq %struct.rtx_def* %call1508, null
  %or.cond1822 = or i1 %cmp1509, %cmp1512
  br i1 %or.cond1822, label %sw.epilog1611, label %if.end1515

if.end1515:                                       ; preds = %if.end1506
  %233 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 5), align 8, !tbaa !1
  %cmp1516 = icmp eq %struct.optab* %binoptab.addr.0, %233
  %234 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 1), align 8, !tbaa !1
  %235 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 0), align 16, !tbaa !1
  %cond1521 = select i1 %cmp1516, %struct.optab* %234, %struct.optab* %235
  %call1522 = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %cond1521, %struct.rtx_def* %call1507, %struct.rtx_def* %call1508, %struct.rtx_def* %call1390, i32 %unsignedp, i32 %methods)
  %cmp1523 = icmp eq %struct.rtx_def* %call1522, null
  br i1 %cmp1523, label %sw.epilog1611, label %if.else1526

if.else1526:                                      ; preds = %if.end1515
  %cmp1527 = icmp eq %struct.rtx_def* %call1522, %call1390
  br i1 %cmp1527, label %sw.epilog1611, label %if.then1529

if.then1529:                                      ; preds = %if.else1526
  %call1530 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call1390, %struct.rtx_def* %call1522) #3
  br label %sw.epilog1611

if.else1533:                                      ; preds = %sw.bb1470
  %call1536 = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %binoptab.addr.0, %struct.rtx_def* %call1477, %struct.rtx_def* %call1478, %struct.rtx_def* %call1389, i32 %unsignedp, i32 %methods)
  %cmp1537 = icmp eq %struct.rtx_def* %call1536, null
  br i1 %cmp1537, label %sw.epilog1611, label %if.else1540

if.else1540:                                      ; preds = %if.else1533
  %cmp1541 = icmp eq %struct.rtx_def* %call1536, %call1389
  br i1 %cmp1541, label %if.end1546, label %if.then1543

if.then1543:                                      ; preds = %if.else1540
  %call1544 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call1389, %struct.rtx_def* %call1536) #3
  br label %if.end1546

if.end1546:                                       ; preds = %if.else1540, %if.then1543
  br i1 %cmp1417, label %if.then1549, label %if.else1551

if.then1549:                                      ; preds = %if.end1546
  %call1550 = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %binoptab.addr.0, %struct.rtx_def* %call1478, %struct.rtx_def* %imag0.0, %struct.rtx_def* %call1390, i32 %unsignedp, i32 %methods)
  br label %if.end1553

if.else1551:                                      ; preds = %if.end1546
  %call1552 = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %binoptab.addr.0, %struct.rtx_def* %call1477, %struct.rtx_def* %imag1.0, %struct.rtx_def* %call1390, i32 %unsignedp, i32 %methods)
  br label %if.end1553

if.end1553:                                       ; preds = %if.else1551, %if.then1549
  %res.1 = phi %struct.rtx_def* [ %call1550, %if.then1549 ], [ %call1552, %if.else1551 ]
  %cmp1554 = icmp eq %struct.rtx_def* %res.1, null
  br i1 %cmp1554, label %sw.epilog1611, label %if.else1557

if.else1557:                                      ; preds = %if.end1553
  %cmp1558 = icmp eq %struct.rtx_def* %res.1, %call1390
  br i1 %cmp1558, label %sw.epilog1611, label %if.then1560

if.then1560:                                      ; preds = %if.else1557
  %call1561 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call1390, %struct.rtx_def* %res.1) #3
  br label %sw.epilog1611

sw.bb1565:                                        ; preds = %if.end1423
  %cmp1566 = icmp eq %struct.rtx_def* %imag1.0, null
  br i1 %cmp1566, label %if.then1568, label %if.else1604

if.then1568:                                      ; preds = %sw.bb1565
  %call1569 = tail call %struct.rtx_def* @force_reg(i32 %call1380, %struct.rtx_def* %real1.0) #3
  br i1 %cmp395, label %if.then1572, label %if.else1574

if.then1572:                                      ; preds = %if.then1568
  %call1573 = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %binoptab.addr.0, %struct.rtx_def* %real0.0, %struct.rtx_def* %call1569, %struct.rtx_def* %call1389, i32 %unsignedp, i32 %methods)
  br label %if.end1576

if.else1574:                                      ; preds = %if.then1568
  %call1575 = tail call %struct.rtx_def* @expand_divmod(i32 0, i32 62, i32 %call1380, %struct.rtx_def* %real0.0, %struct.rtx_def* %call1569, %struct.rtx_def* %call1389, i32 %unsignedp) #3
  br label %if.end1576

if.end1576:                                       ; preds = %if.else1574, %if.then1572
  %res.2 = phi %struct.rtx_def* [ %call1573, %if.then1572 ], [ %call1575, %if.else1574 ]
  %cmp1577 = icmp eq %struct.rtx_def* %res.2, null
  br i1 %cmp1577, label %sw.epilog1611, label %if.else1580

if.else1580:                                      ; preds = %if.end1576
  %cmp1581 = icmp eq %struct.rtx_def* %res.2, %call1389
  br i1 %cmp1581, label %if.end1586, label %if.then1583

if.then1583:                                      ; preds = %if.else1580
  %call1584 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call1389, %struct.rtx_def* %res.2) #3
  br label %if.end1586

if.end1586:                                       ; preds = %if.else1580, %if.then1583
  br i1 %cmp395, label %if.then1589, label %if.else1591

if.then1589:                                      ; preds = %if.end1586
  %call1590 = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %binoptab.addr.0, %struct.rtx_def* %imag0.0, %struct.rtx_def* %call1569, %struct.rtx_def* %call1390, i32 %unsignedp, i32 %methods)
  br label %if.end1593

if.else1591:                                      ; preds = %if.end1586
  %call1592 = tail call %struct.rtx_def* @expand_divmod(i32 0, i32 62, i32 %call1380, %struct.rtx_def* %imag0.0, %struct.rtx_def* %call1569, %struct.rtx_def* %call1390, i32 %unsignedp) #3
  br label %if.end1593

if.end1593:                                       ; preds = %if.else1591, %if.then1589
  %res.3 = phi %struct.rtx_def* [ %call1590, %if.then1589 ], [ %call1592, %if.else1591 ]
  %cmp1594 = icmp eq %struct.rtx_def* %res.3, null
  br i1 %cmp1594, label %sw.epilog1611, label %if.else1597

if.else1597:                                      ; preds = %if.end1593
  %cmp1598 = icmp eq %struct.rtx_def* %res.3, %call1390
  br i1 %cmp1598, label %sw.epilog1611, label %if.then1600

if.then1600:                                      ; preds = %if.else1597
  %call1601 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call1390, %struct.rtx_def* %res.3) #3
  br label %sw.epilog1611

if.else1604:                                      ; preds = %sw.bb1565
  %236 = load i32* @flag_complex_divide_method, align 4, !tbaa !7
  switch i32 %236, label %sw.default [
    i32 0, label %sw.bb1605
    i32 1, label %sw.bb1607
  ]

sw.bb1605:                                        ; preds = %if.else1604
  %237 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 11), align 8, !tbaa !1
  %cmp.i = icmp eq %struct.optab* %237, %binoptab.addr.0
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %sw.bb1605
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %sw.bb1605
  %this_add_optab.0.in.i = phi %struct.optab** [ getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 1), %if.then.i ], [ getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 0), %sw.bb1605 ]
  %this_sub_optab.0.in.i = phi %struct.optab** [ getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 3), %if.then.i ], [ getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 2), %sw.bb1605 ]
  %this_neg_optab.0.in.i = phi %struct.optab** [ getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 33), %if.then.i ], [ getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 32), %sw.bb1605 ]
  %this_mul_optab.0.in.i = phi %struct.optab** [ getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 5), %if.then.i ], [ getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 4), %sw.bb1605 ]
  %this_mul_optab.0.i = load %struct.optab** %this_mul_optab.0.in.i, align 8
  %this_neg_optab.0.i = load %struct.optab** %this_neg_optab.0.in.i, align 8
  %this_sub_optab.0.i = load %struct.optab** %this_sub_optab.0.in.i, align 8
  %this_add_optab.0.i = load %struct.optab** %this_add_optab.0.in.i, align 8
  %call.i = tail call %struct.rtx_def* @force_reg(i32 %call1380, %struct.rtx_def* %real0.0) #3
  %call1.i = tail call %struct.rtx_def* @force_reg(i32 %call1380, %struct.rtx_def* %real1.0) #3
  %cmp2.i = icmp eq %struct.rtx_def* %imag0.0, null
  br i1 %cmp2.i, label %if.end5.i, label %if.then3.i

if.then3.i:                                       ; preds = %if.end.i
  %call4.i = tail call %struct.rtx_def* @force_reg(i32 %call1380, %struct.rtx_def* %imag0.0) #3
  br label %if.end5.i

if.end5.i:                                        ; preds = %if.then3.i, %if.end.i
  %imag0.addr.0.i = phi %struct.rtx_def* [ %call4.i, %if.then3.i ], [ null, %if.end.i ]
  %call6.i = tail call %struct.rtx_def* @force_reg(i32 %call1380, %struct.rtx_def* %imag1.0) #3
  %call7.i = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %this_mul_optab.0.i, %struct.rtx_def* %call1.i, %struct.rtx_def* %call1.i, %struct.rtx_def* null, i32 %unsignedp, i32 %methods) #3
  %call8.i = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %this_mul_optab.0.i, %struct.rtx_def* %call6.i, %struct.rtx_def* %call6.i, %struct.rtx_def* null, i32 %unsignedp, i32 %methods) #3
  %cmp9.i = icmp eq %struct.rtx_def* %call7.i, null
  %cmp10.i = icmp eq %struct.rtx_def* %call8.i, null
  %or.cond.i = or i1 %cmp9.i, %cmp10.i
  br i1 %or.cond.i, label %sw.epilog1611, label %if.end12.i

if.end12.i:                                       ; preds = %if.end5.i
  %call13.i = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %this_add_optab.0.i, %struct.rtx_def* %call7.i, %struct.rtx_def* %call8.i, %struct.rtx_def* null, i32 %unsignedp, i32 %methods) #3
  %cmp14.i = icmp eq %struct.rtx_def* %call13.i, null
  br i1 %cmp14.i, label %sw.epilog1611, label %if.end16.i

if.end16.i:                                       ; preds = %if.end12.i
  %cmp17.i = icmp eq %struct.rtx_def* %imag0.addr.0.i, null
  %call19.i = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %this_mul_optab.0.i, %struct.rtx_def* %call.i, %struct.rtx_def* %call1.i, %struct.rtx_def* null, i32 %unsignedp, i32 %methods) #3
  br i1 %cmp17.i, label %if.then18.i, label %if.else.i

if.then18.i:                                      ; preds = %if.end16.i
  %call20.i = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %this_mul_optab.0.i, %struct.rtx_def* %call.i, %struct.rtx_def* %call6.i, %struct.rtx_def* null, i32 %unsignedp, i32 %methods) #3
  %cmp21.i = icmp eq %struct.rtx_def* %call19.i, null
  %cmp23.i = icmp eq %struct.rtx_def* %call20.i, null
  %or.cond75.i = or i1 %cmp21.i, %cmp23.i
  br i1 %or.cond75.i, label %sw.epilog1611, label %if.end25.i

if.end25.i:                                       ; preds = %if.then18.i
  %call26.i = tail call %struct.rtx_def* @expand_unop(i32 %call1380, %struct.optab* %this_neg_optab.0.i, %struct.rtx_def* %call20.i, %struct.rtx_def* null, i32 %unsignedp) #3
  br label %if.end48.i

if.else.i:                                        ; preds = %if.end16.i
  %call28.i = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %this_mul_optab.0.i, %struct.rtx_def* %imag0.addr.0.i, %struct.rtx_def* %call6.i, %struct.rtx_def* null, i32 %unsignedp, i32 %methods) #3
  %cmp29.i = icmp eq %struct.rtx_def* %call19.i, null
  %cmp31.i = icmp eq %struct.rtx_def* %call28.i, null
  %or.cond76.i = or i1 %cmp29.i, %cmp31.i
  br i1 %or.cond76.i, label %sw.epilog1611, label %if.end33.i

if.end33.i:                                       ; preds = %if.else.i
  %call34.i = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %this_add_optab.0.i, %struct.rtx_def* %call19.i, %struct.rtx_def* %call28.i, %struct.rtx_def* null, i32 %unsignedp, i32 %methods) #3
  %call35.i = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %this_mul_optab.0.i, %struct.rtx_def* %imag0.addr.0.i, %struct.rtx_def* %call1.i, %struct.rtx_def* null, i32 %unsignedp, i32 %methods) #3
  %call36.i = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %this_mul_optab.0.i, %struct.rtx_def* %call.i, %struct.rtx_def* %call6.i, %struct.rtx_def* null, i32 %unsignedp, i32 %methods) #3
  %cmp37.i = icmp eq %struct.rtx_def* %call35.i, null
  %cmp39.i = icmp eq %struct.rtx_def* %call36.i, null
  %or.cond77.i = or i1 %cmp37.i, %cmp39.i
  br i1 %or.cond77.i, label %sw.epilog1611, label %if.end41.i

if.end41.i:                                       ; preds = %if.end33.i
  %call42.i = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %this_sub_optab.0.i, %struct.rtx_def* %call35.i, %struct.rtx_def* %call36.i, %struct.rtx_def* null, i32 %unsignedp, i32 %methods) #3
  %cmp43.i = icmp eq %struct.rtx_def* %call34.i, null
  %cmp45.i = icmp eq %struct.rtx_def* %call42.i, null
  %or.cond78.i = or i1 %cmp43.i, %cmp45.i
  br i1 %or.cond78.i, label %sw.epilog1611, label %if.end48.i

if.end48.i:                                       ; preds = %if.end41.i, %if.end25.i
  %real_t.0.i = phi %struct.rtx_def* [ %call19.i, %if.end25.i ], [ %call34.i, %if.end41.i ]
  %imag_t.0.i = phi %struct.rtx_def* [ %call26.i, %if.end25.i ], [ %call42.i, %if.end41.i ]
  br i1 %cmp395, label %if.then50.i, label %if.else52.i

if.then50.i:                                      ; preds = %if.end48.i
  %call51.i = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %binoptab.addr.0, %struct.rtx_def* %real_t.0.i, %struct.rtx_def* %call13.i, %struct.rtx_def* %call1389, i32 %unsignedp, i32 %methods) #3
  br label %if.end54.i

if.else52.i:                                      ; preds = %if.end48.i
  %call53.i = tail call %struct.rtx_def* @expand_divmod(i32 0, i32 62, i32 %call1380, %struct.rtx_def* %real_t.0.i, %struct.rtx_def* %call13.i, %struct.rtx_def* %call1389, i32 %unsignedp) #3
  br label %if.end54.i

if.end54.i:                                       ; preds = %if.else52.i, %if.then50.i
  %res.0.i = phi %struct.rtx_def* [ %call51.i, %if.then50.i ], [ %call53.i, %if.else52.i ]
  %cmp55.i = icmp eq %struct.rtx_def* %res.0.i, null
  br i1 %cmp55.i, label %sw.epilog1611, label %if.end57.i

if.end57.i:                                       ; preds = %if.end54.i
  %cmp58.i = icmp eq %struct.rtx_def* %res.0.i, %call1389
  br i1 %cmp58.i, label %if.end61.i, label %if.then59.i

if.then59.i:                                      ; preds = %if.end57.i
  %call60.i = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call1389, %struct.rtx_def* %res.0.i) #3
  br label %if.end61.i

if.end61.i:                                       ; preds = %if.then59.i, %if.end57.i
  br i1 %cmp395, label %if.then63.i, label %if.else65.i

if.then63.i:                                      ; preds = %if.end61.i
  %call64.i = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %binoptab.addr.0, %struct.rtx_def* %imag_t.0.i, %struct.rtx_def* %call13.i, %struct.rtx_def* %call1390, i32 %unsignedp, i32 %methods) #3
  br label %if.end67.i

if.else65.i:                                      ; preds = %if.end61.i
  %call66.i = tail call %struct.rtx_def* @expand_divmod(i32 0, i32 62, i32 %call1380, %struct.rtx_def* %imag_t.0.i, %struct.rtx_def* %call13.i, %struct.rtx_def* %call1390, i32 %unsignedp) #3
  br label %if.end67.i

if.end67.i:                                       ; preds = %if.else65.i, %if.then63.i
  %res.1.i = phi %struct.rtx_def* [ %call64.i, %if.then63.i ], [ %call66.i, %if.else65.i ]
  %cmp68.i = icmp eq %struct.rtx_def* %res.1.i, null
  br i1 %cmp68.i, label %sw.epilog1611, label %if.end70.i

if.end70.i:                                       ; preds = %if.end67.i
  %cmp71.i = icmp eq %struct.rtx_def* %res.1.i, %call1390
  br i1 %cmp71.i, label %sw.epilog1611, label %if.then72.i

if.then72.i:                                      ; preds = %if.end70.i
  %call73.i = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call1390, %struct.rtx_def* %res.1.i) #3
  br label %sw.epilog1611

sw.bb1607:                                        ; preds = %if.else1604
  %238 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 11), align 8, !tbaa !1
  %cmp.i2745 = icmp eq %struct.optab* %238, %binoptab.addr.0
  br i1 %cmp.i2745, label %if.then.i2746, label %if.end.i2758

if.then.i2746:                                    ; preds = %sw.bb1607
  br label %if.end.i2758

if.end.i2758:                                     ; preds = %if.then.i2746, %sw.bb1607
  %this_add_optab.0.in.i2747 = phi %struct.optab** [ getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 1), %if.then.i2746 ], [ getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 0), %sw.bb1607 ]
  %this_sub_optab.0.in.i2748 = phi %struct.optab** [ getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 3), %if.then.i2746 ], [ getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 2), %sw.bb1607 ]
  %this_neg_optab.0.in.i2749 = phi %struct.optab** [ getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 33), %if.then.i2746 ], [ getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 32), %sw.bb1607 ]
  %this_mul_optab.0.in.i2750 = phi %struct.optab** [ getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 5), %if.then.i2746 ], [ getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 4), %sw.bb1607 ]
  %this_mul_optab.0.i2751 = load %struct.optab** %this_mul_optab.0.in.i2750, align 8
  %this_neg_optab.0.i2752 = load %struct.optab** %this_neg_optab.0.in.i2749, align 8
  %this_sub_optab.0.i2753 = load %struct.optab** %this_sub_optab.0.in.i2748, align 8
  %this_add_optab.0.i2754 = load %struct.optab** %this_add_optab.0.in.i2747, align 8
  %call.i2755 = tail call %struct.rtx_def* @force_reg(i32 %call1380, %struct.rtx_def* %real0.0) #3
  %call1.i2756 = tail call %struct.rtx_def* @force_reg(i32 %call1380, %struct.rtx_def* %real1.0) #3
  %cmp2.i2757 = icmp eq %struct.rtx_def* %imag0.0, null
  br i1 %cmp2.i2757, label %if.end5.i2763, label %if.then3.i2760

if.then3.i2760:                                   ; preds = %if.end.i2758
  %call4.i2759 = tail call %struct.rtx_def* @force_reg(i32 %call1380, %struct.rtx_def* %imag0.0) #3
  br label %if.end5.i2763

if.end5.i2763:                                    ; preds = %if.then3.i2760, %if.end.i2758
  %imag0.addr.0.i2761 = phi %struct.rtx_def* [ %call4.i2759, %if.then3.i2760 ], [ null, %if.end.i2758 ]
  %call6.i2762 = tail call %struct.rtx_def* @force_reg(i32 %call1380, %struct.rtx_def* %imag1.0) #3
  %tobool.i = icmp eq i32 %unsignedp, 0
  br i1 %tobool.i, label %if.else.i2765, label %if.end10.i

if.else.i2765:                                    ; preds = %if.end5.i2763
  %call8.i2764 = tail call %struct.rtx_def* @expand_abs(i32 %call1380, %struct.rtx_def* %call1.i2756, %struct.rtx_def* null, i32 0, i32 1) #3
  %call9.i = tail call %struct.rtx_def* @expand_abs(i32 %call1380, %struct.rtx_def* %call6.i2762, %struct.rtx_def* null, i32 0, i32 1) #3
  br label %if.end10.i

if.end10.i:                                       ; preds = %if.else.i2765, %if.end5.i2763
  %temp1.0.i = phi %struct.rtx_def* [ %call8.i2764, %if.else.i2765 ], [ %call1.i2756, %if.end5.i2763 ]
  %temp2.0.i = phi %struct.rtx_def* [ %call9.i, %if.else.i2765 ], [ %call6.i2762, %if.end5.i2763 ]
  %cmp11.i = icmp eq %struct.rtx_def* %temp1.0.i, null
  %cmp12.i = icmp eq %struct.rtx_def* %temp2.0.i, null
  %or.cond.i2766 = or i1 %cmp11.i, %cmp12.i
  br i1 %or.cond.i2766, label %sw.epilog1611, label %if.end14.i

if.end14.i:                                       ; preds = %if.end10.i
  %239 = getelementptr inbounds %struct.rtx_def* %temp1.0.i, i64 0, i32 0
  %bf.load.i = load i32* %239, align 8
  %bf.lshr.i = lshr i32 %bf.load.i, 16
  %bf.clear.i = and i32 %bf.lshr.i, 255
  %call15.i = tail call %struct.rtx_def* @gen_label_rtx() #3
  tail call void @emit_cmp_and_jump_insns(%struct.rtx_def* %temp1.0.i, %struct.rtx_def* %temp2.0.i, i32 107, %struct.rtx_def* null, i32 %bf.clear.i, i32 %unsignedp, %struct.rtx_def* %call15.i) #3
  br i1 %cmp395, label %if.then17.i, label %if.else19.i

if.then17.i:                                      ; preds = %if.end14.i
  %call18.i = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %binoptab.addr.0, %struct.rtx_def* %call6.i2762, %struct.rtx_def* %call1.i2756, %struct.rtx_def* null, i32 %unsignedp, i32 %methods) #3
  br label %if.end21.i

if.else19.i:                                      ; preds = %if.end14.i
  %call20.i2767 = tail call %struct.rtx_def* @expand_divmod(i32 0, i32 62, i32 %call1380, %struct.rtx_def* %call6.i2762, %struct.rtx_def* %call1.i2756, %struct.rtx_def* null, i32 %unsignedp) #3
  br label %if.end21.i

if.end21.i:                                       ; preds = %if.else19.i, %if.then17.i
  %ratio.0.i = phi %struct.rtx_def* [ %call18.i, %if.then17.i ], [ %call20.i2767, %if.else19.i ]
  %cmp22.i = icmp eq %struct.rtx_def* %ratio.0.i, null
  br i1 %cmp22.i, label %sw.epilog1611, label %if.end24.i

if.end24.i:                                       ; preds = %if.end21.i
  %call25.i = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %this_mul_optab.0.i2751, %struct.rtx_def* %call6.i2762, %struct.rtx_def* %ratio.0.i, %struct.rtx_def* null, i32 %unsignedp, i32 %methods) #3
  %cmp26.i = icmp eq %struct.rtx_def* %call25.i, null
  br i1 %cmp26.i, label %sw.epilog1611, label %if.end28.i

if.end28.i:                                       ; preds = %if.end24.i
  %call29.i = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %this_add_optab.0.i2754, %struct.rtx_def* %call25.i, %struct.rtx_def* %call1.i2756, %struct.rtx_def* null, i32 %unsignedp, i32 %methods) #3
  %cmp30.i = icmp eq %struct.rtx_def* %call29.i, null
  br i1 %cmp30.i, label %sw.epilog1611, label %if.end32.i

if.end32.i:                                       ; preds = %if.end28.i
  %cmp33.i = icmp eq %struct.rtx_def* %imag0.addr.0.i2761, null
  br i1 %cmp33.i, label %if.then34.i, label %if.else45.i

if.then34.i:                                      ; preds = %if.end32.i
  %call35.i2768 = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %this_mul_optab.0.i2751, %struct.rtx_def* %call.i2755, %struct.rtx_def* %ratio.0.i, %struct.rtx_def* null, i32 %unsignedp, i32 %methods) #3
  %cmp36.i = icmp eq %struct.rtx_def* %call35.i2768, null
  br i1 %cmp36.i, label %sw.epilog1611, label %if.end38.i

if.end38.i:                                       ; preds = %if.then34.i
  %call39.i = tail call %struct.rtx_def* @expand_unop(i32 %call1380, %struct.optab* %this_neg_optab.0.i2752, %struct.rtx_def* %call35.i2768, %struct.rtx_def* null, i32 %unsignedp) #3
  %cmp40.i = icmp eq %struct.rtx_def* %call.i2755, null
  %cmp42.i = icmp eq %struct.rtx_def* %call39.i, null
  %or.cond163.i = or i1 %cmp40.i, %cmp42.i
  br i1 %or.cond163.i, label %sw.epilog1611, label %if.end61.i2774

if.else45.i:                                      ; preds = %if.end32.i
  %call46.i = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %this_mul_optab.0.i2751, %struct.rtx_def* %imag0.addr.0.i2761, %struct.rtx_def* %ratio.0.i, %struct.rtx_def* null, i32 %unsignedp, i32 %methods) #3
  %cmp47.i = icmp eq %struct.rtx_def* %call46.i, null
  br i1 %cmp47.i, label %sw.epilog1611, label %if.end49.i

if.end49.i:                                       ; preds = %if.else45.i
  %call50.i = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %this_add_optab.0.i2754, %struct.rtx_def* %call46.i, %struct.rtx_def* %call.i2755, %struct.rtx_def* null, i32 %unsignedp, i32 %methods) #3
  %call51.i2769 = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %this_mul_optab.0.i2751, %struct.rtx_def* %call.i2755, %struct.rtx_def* %ratio.0.i, %struct.rtx_def* null, i32 %unsignedp, i32 %methods) #3
  %cmp52.i = icmp eq %struct.rtx_def* %call51.i2769, null
  br i1 %cmp52.i, label %sw.epilog1611, label %if.end54.i2771

if.end54.i2771:                                   ; preds = %if.end49.i
  %call55.i = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %this_sub_optab.0.i2753, %struct.rtx_def* %imag0.addr.0.i2761, %struct.rtx_def* %call51.i2769, %struct.rtx_def* null, i32 %unsignedp, i32 %methods) #3
  %cmp56.i = icmp eq %struct.rtx_def* %call50.i, null
  %cmp58.i2770 = icmp eq %struct.rtx_def* %call55.i, null
  %or.cond164.i = or i1 %cmp56.i, %cmp58.i2770
  br i1 %or.cond164.i, label %sw.epilog1611, label %if.end61.i2774

if.end61.i2774:                                   ; preds = %if.end54.i2771, %if.end38.i
  %real_t.0.i2772 = phi %struct.rtx_def* [ %call.i2755, %if.end38.i ], [ %call50.i, %if.end54.i2771 ]
  %imag_t.0.i2773 = phi %struct.rtx_def* [ %call39.i, %if.end38.i ], [ %call55.i, %if.end54.i2771 ]
  br i1 %cmp395, label %if.then63.i2776, label %if.else65.i2778

if.then63.i2776:                                  ; preds = %if.end61.i2774
  %call64.i2775 = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %binoptab.addr.0, %struct.rtx_def* %real_t.0.i2772, %struct.rtx_def* %call29.i, %struct.rtx_def* %call1389, i32 %unsignedp, i32 %methods) #3
  br label %if.end67.i2781

if.else65.i2778:                                  ; preds = %if.end61.i2774
  %call66.i2777 = tail call %struct.rtx_def* @expand_divmod(i32 0, i32 62, i32 %call1380, %struct.rtx_def* %real_t.0.i2772, %struct.rtx_def* %call29.i, %struct.rtx_def* %call1389, i32 %unsignedp) #3
  br label %if.end67.i2781

if.end67.i2781:                                   ; preds = %if.else65.i2778, %if.then63.i2776
  %res.0.i2779 = phi %struct.rtx_def* [ %call64.i2775, %if.then63.i2776 ], [ %call66.i2777, %if.else65.i2778 ]
  %cmp68.i2780 = icmp eq %struct.rtx_def* %res.0.i2779, null
  br i1 %cmp68.i2780, label %sw.epilog1611, label %if.end70.i2783

if.end70.i2783:                                   ; preds = %if.end67.i2781
  %cmp71.i2782 = icmp eq %struct.rtx_def* %res.0.i2779, %call1389
  br i1 %cmp71.i2782, label %if.end74.i, label %if.then72.i2785

if.then72.i2785:                                  ; preds = %if.end70.i2783
  %call73.i2784 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call1389, %struct.rtx_def* %res.0.i2779) #3
  br label %if.end74.i

if.end74.i:                                       ; preds = %if.then72.i2785, %if.end70.i2783
  br i1 %cmp395, label %if.then76.i, label %if.else78.i

if.then76.i:                                      ; preds = %if.end74.i
  %call77.i = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %binoptab.addr.0, %struct.rtx_def* %imag_t.0.i2773, %struct.rtx_def* %call29.i, %struct.rtx_def* %call1390, i32 %unsignedp, i32 %methods) #3
  br label %if.end80.i

if.else78.i:                                      ; preds = %if.end74.i
  %call79.i = tail call %struct.rtx_def* @expand_divmod(i32 0, i32 62, i32 %call1380, %struct.rtx_def* %imag_t.0.i2773, %struct.rtx_def* %call29.i, %struct.rtx_def* %call1390, i32 %unsignedp) #3
  br label %if.end80.i

if.end80.i:                                       ; preds = %if.else78.i, %if.then76.i
  %res.1.i2786 = phi %struct.rtx_def* [ %call77.i, %if.then76.i ], [ %call79.i, %if.else78.i ]
  %cmp81.i = icmp eq %struct.rtx_def* %res.1.i2786, null
  br i1 %cmp81.i, label %sw.epilog1611, label %if.end83.i

if.end83.i:                                       ; preds = %if.end80.i
  %cmp84.i = icmp eq %struct.rtx_def* %res.1.i2786, %call1390
  br i1 %cmp84.i, label %if.end87.i, label %if.then85.i

if.then85.i:                                      ; preds = %if.end83.i
  %call86.i = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call1390, %struct.rtx_def* %res.1.i2786) #3
  br label %if.end87.i

if.end87.i:                                       ; preds = %if.then85.i, %if.end83.i
  %call88.i = tail call %struct.rtx_def* @gen_label_rtx() #3
  %call89.i = tail call %struct.rtx_def* @gen_jump(%struct.rtx_def* %call88.i) #3
  %call90.i = tail call %struct.rtx_def* @emit_jump_insn(%struct.rtx_def* %call89.i) #3
  %call91.i = tail call %struct.rtx_def* @emit_barrier() #3
  %call92.i = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call15.i) #3
  br i1 %cmp395, label %if.then94.i, label %if.else96.i

if.then94.i:                                      ; preds = %if.end87.i
  %call95.i = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %binoptab.addr.0, %struct.rtx_def* %call1.i2756, %struct.rtx_def* %call6.i2762, %struct.rtx_def* null, i32 %unsignedp, i32 %methods) #3
  br label %if.end98.i

if.else96.i:                                      ; preds = %if.end87.i
  %call97.i = tail call %struct.rtx_def* @expand_divmod(i32 0, i32 62, i32 %call1380, %struct.rtx_def* %call1.i2756, %struct.rtx_def* %call6.i2762, %struct.rtx_def* null, i32 %unsignedp) #3
  br label %if.end98.i

if.end98.i:                                       ; preds = %if.else96.i, %if.then94.i
  %ratio.1.i = phi %struct.rtx_def* [ %call95.i, %if.then94.i ], [ %call97.i, %if.else96.i ]
  %cmp99.i = icmp eq %struct.rtx_def* %ratio.1.i, null
  br i1 %cmp99.i, label %sw.epilog1611, label %if.end101.i

if.end101.i:                                      ; preds = %if.end98.i
  %call102.i = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %this_mul_optab.0.i2751, %struct.rtx_def* %call1.i2756, %struct.rtx_def* %ratio.1.i, %struct.rtx_def* null, i32 %unsignedp, i32 %methods) #3
  %cmp103.i = icmp eq %struct.rtx_def* %call102.i, null
  br i1 %cmp103.i, label %sw.epilog1611, label %if.end105.i

if.end105.i:                                      ; preds = %if.end101.i
  %call106.i = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %this_add_optab.0.i2754, %struct.rtx_def* %call102.i, %struct.rtx_def* %call6.i2762, %struct.rtx_def* null, i32 %unsignedp, i32 %methods) #3
  %cmp107.i = icmp eq %struct.rtx_def* %call106.i, null
  br i1 %cmp107.i, label %sw.epilog1611, label %if.end109.i

if.end109.i:                                      ; preds = %if.end105.i
  %call112.i = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %this_mul_optab.0.i2751, %struct.rtx_def* %call.i2755, %struct.rtx_def* %ratio.1.i, %struct.rtx_def* null, i32 %unsignedp, i32 %methods) #3
  br i1 %cmp33.i, label %if.then111.i, label %if.else119.i

if.then111.i:                                     ; preds = %if.end109.i
  %call113.i = tail call %struct.rtx_def* @expand_unop(i32 %call1380, %struct.optab* %this_neg_optab.0.i2752, %struct.rtx_def* %call.i2755, %struct.rtx_def* null, i32 %unsignedp) #3
  %cmp114.i = icmp eq %struct.rtx_def* %call112.i, null
  %cmp116.i = icmp eq %struct.rtx_def* %call113.i, null
  %or.cond165.i = or i1 %cmp114.i, %cmp116.i
  br i1 %or.cond165.i, label %sw.epilog1611, label %if.end135.i

if.else119.i:                                     ; preds = %if.end109.i
  %cmp121.i = icmp eq %struct.rtx_def* %call112.i, null
  br i1 %cmp121.i, label %sw.epilog1611, label %if.end123.i

if.end123.i:                                      ; preds = %if.else119.i
  %call124.i = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %this_add_optab.0.i2754, %struct.rtx_def* %call112.i, %struct.rtx_def* %imag0.addr.0.i2761, %struct.rtx_def* null, i32 %unsignedp, i32 %methods) #3
  %call125.i = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %this_mul_optab.0.i2751, %struct.rtx_def* %imag0.addr.0.i2761, %struct.rtx_def* %ratio.1.i, %struct.rtx_def* null, i32 %unsignedp, i32 %methods) #3
  %cmp126.i = icmp eq %struct.rtx_def* %call125.i, null
  br i1 %cmp126.i, label %sw.epilog1611, label %if.end128.i

if.end128.i:                                      ; preds = %if.end123.i
  %call129.i = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %this_sub_optab.0.i2753, %struct.rtx_def* %call125.i, %struct.rtx_def* %call.i2755, %struct.rtx_def* null, i32 %unsignedp, i32 %methods) #3
  %cmp130.i = icmp eq %struct.rtx_def* %call124.i, null
  %cmp132.i = icmp eq %struct.rtx_def* %call129.i, null
  %or.cond166.i = or i1 %cmp130.i, %cmp132.i
  br i1 %or.cond166.i, label %sw.epilog1611, label %if.end135.i

if.end135.i:                                      ; preds = %if.end128.i, %if.then111.i
  %real_t.1.i = phi %struct.rtx_def* [ %call112.i, %if.then111.i ], [ %call124.i, %if.end128.i ]
  %imag_t.1.i = phi %struct.rtx_def* [ %call113.i, %if.then111.i ], [ %call129.i, %if.end128.i ]
  br i1 %cmp395, label %if.then137.i, label %if.else139.i

if.then137.i:                                     ; preds = %if.end135.i
  %call138.i = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %binoptab.addr.0, %struct.rtx_def* %real_t.1.i, %struct.rtx_def* %call106.i, %struct.rtx_def* %call1389, i32 %unsignedp, i32 %methods) #3
  br label %if.end141.i

if.else139.i:                                     ; preds = %if.end135.i
  %call140.i = tail call %struct.rtx_def* @expand_divmod(i32 0, i32 62, i32 %call1380, %struct.rtx_def* %real_t.1.i, %struct.rtx_def* %call106.i, %struct.rtx_def* %call1389, i32 %unsignedp) #3
  br label %if.end141.i

if.end141.i:                                      ; preds = %if.else139.i, %if.then137.i
  %res.2.i = phi %struct.rtx_def* [ %call138.i, %if.then137.i ], [ %call140.i, %if.else139.i ]
  %cmp142.i = icmp eq %struct.rtx_def* %res.2.i, null
  br i1 %cmp142.i, label %sw.epilog1611, label %if.end144.i

if.end144.i:                                      ; preds = %if.end141.i
  %cmp145.i = icmp eq %struct.rtx_def* %res.2.i, %call1389
  br i1 %cmp145.i, label %if.end148.i, label %if.then146.i

if.then146.i:                                     ; preds = %if.end144.i
  %call147.i = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call1389, %struct.rtx_def* %res.2.i) #3
  br label %if.end148.i

if.end148.i:                                      ; preds = %if.then146.i, %if.end144.i
  br i1 %cmp395, label %if.then150.i, label %if.else152.i

if.then150.i:                                     ; preds = %if.end148.i
  %call151.i = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %binoptab.addr.0, %struct.rtx_def* %imag_t.1.i, %struct.rtx_def* %call106.i, %struct.rtx_def* %call1390, i32 %unsignedp, i32 %methods) #3
  br label %if.end154.i

if.else152.i:                                     ; preds = %if.end148.i
  %call153.i = tail call %struct.rtx_def* @expand_divmod(i32 0, i32 62, i32 %call1380, %struct.rtx_def* %imag_t.1.i, %struct.rtx_def* %call106.i, %struct.rtx_def* %call1390, i32 %unsignedp) #3
  br label %if.end154.i

if.end154.i:                                      ; preds = %if.else152.i, %if.then150.i
  %res.3.i = phi %struct.rtx_def* [ %call151.i, %if.then150.i ], [ %call153.i, %if.else152.i ]
  %cmp155.i = icmp eq %struct.rtx_def* %res.3.i, null
  br i1 %cmp155.i, label %sw.epilog1611, label %if.end157.i

if.end157.i:                                      ; preds = %if.end154.i
  %cmp158.i = icmp eq %struct.rtx_def* %res.3.i, %call1390
  br i1 %cmp158.i, label %if.end161.i, label %if.then159.i

if.then159.i:                                     ; preds = %if.end157.i
  %call160.i = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call1390, %struct.rtx_def* %res.3.i) #3
  br label %if.end161.i

if.end161.i:                                      ; preds = %if.then159.i, %if.end157.i
  %call162.i = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call88.i) #3
  br label %sw.epilog1611

sw.default:                                       ; preds = %if.else1604
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 1713, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.expand_binop, i64 0, i64 0)) #6
  unreachable

sw.default1610:                                   ; preds = %if.end1423
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 1719, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.expand_binop, i64 0, i64 0)) #6
  unreachable

sw.epilog1611:                                    ; preds = %if.end161.i, %if.end154.i, %if.end141.i, %if.end128.i, %if.end123.i, %if.else119.i, %if.then111.i, %if.end105.i, %if.end101.i, %if.end98.i, %if.end80.i, %if.end67.i2781, %if.end54.i2771, %if.end49.i, %if.else45.i, %if.end38.i, %if.then34.i, %if.end28.i, %if.end24.i, %if.end21.i, %if.end10.i, %if.then72.i, %if.end70.i, %if.end67.i, %if.end54.i, %if.end41.i, %if.end33.i, %if.else.i, %if.then18.i, %if.end12.i, %if.end5.i, %if.then1600, %if.else1597, %if.then1560, %if.else1557, %if.then1529, %if.else1526, %if.then1466, %if.else1463, %if.end1593, %if.end1576, %if.end1553, %if.else1533, %if.end1515, %if.end1506, %if.end1489, %if.then1474, %if.end1459, %sw.bb
  %ok.0 = phi i1 [ true, %if.end1576 ], [ true, %if.end1593 ], [ true, %if.then1474 ], [ true, %if.end1489 ], [ true, %if.end1506 ], [ true, %if.end1515 ], [ true, %if.else1533 ], [ true, %if.end1553 ], [ true, %sw.bb ], [ true, %if.end1459 ], [ false, %if.else1463 ], [ false, %if.then1466 ], [ false, %if.else1526 ], [ false, %if.then1529 ], [ false, %if.else1557 ], [ false, %if.then1560 ], [ false, %if.else1597 ], [ false, %if.then1600 ], [ true, %if.end5.i ], [ true, %if.end12.i ], [ true, %if.then18.i ], [ true, %if.else.i ], [ true, %if.end33.i ], [ true, %if.end41.i ], [ true, %if.end54.i ], [ true, %if.end67.i ], [ false, %if.end70.i ], [ false, %if.then72.i ], [ false, %if.end161.i ], [ true, %if.end10.i ], [ true, %if.end21.i ], [ true, %if.end24.i ], [ true, %if.end28.i ], [ true, %if.then34.i ], [ true, %if.end38.i ], [ true, %if.else45.i ], [ true, %if.end49.i ], [ true, %if.end54.i2771 ], [ true, %if.end67.i2781 ], [ true, %if.end80.i ], [ true, %if.end98.i ], [ true, %if.end101.i ], [ true, %if.end105.i ], [ true, %if.then111.i ], [ true, %if.else119.i ], [ true, %if.end123.i ], [ true, %if.end128.i ], [ true, %if.end141.i ], [ true, %if.end154.i ]
  %call1612 = tail call %struct.rtx_def* @get_insns() #3
  tail call void @end_sequence() #3
  br i1 %ok.0, label %if.end1627, label %if.then1614

if.then1614:                                      ; preds = %sw.epilog1611
  %240 = load i32* %code112, align 4, !tbaa !5
  %cmp1616 = icmp eq i32 %240, 0
  br i1 %cmp1616, label %if.end1624, label %if.then1618

if.then1618:                                      ; preds = %if.then1614
  %call1620 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %op0.addr.4) #3
  %call1621 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %op1.addr.5) #3
  %call1622 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 %240, i32 %mode, %struct.rtx_def* %call1620, %struct.rtx_def* %call1621) #3
  br label %if.end1624

if.end1624:                                       ; preds = %if.then1614, %if.then1618
  %equiv_value1370.0 = phi %struct.rtx_def* [ %call1622, %if.then1618 ], [ null, %if.then1614 ]
  %call1625 = tail call %struct.rtx_def* @emit_no_conflict_block(%struct.rtx_def* %call1612, %struct.rtx_def* %target.addr.12, %struct.rtx_def* %op0.addr.4, %struct.rtx_def* %op1.addr.5, %struct.rtx_def* %equiv_value1370.0)
  br label %return

if.end1627:                                       ; preds = %sw.epilog1611, %if.end1354
  %target.addr.13 = phi %struct.rtx_def* [ %target.addr.12, %sw.epilog1611 ], [ %target.addr.11, %if.end1354 ]
  %libfunc = getelementptr inbounds %struct.optab* %binoptab.addr.0, i64 0, i32 1, i64 %idxprom, i32 1
  %241 = load %struct.rtx_def** %libfunc, align 8, !tbaa !21
  %tobool1631 = icmp eq %struct.rtx_def* %241, null
  %.not = icmp ne i32 %.in, 1
  %brmerge = or i1 %tobool1631, %.not
  br i1 %brmerge, label %if.end1671, label %if.then1638

if.then1638:                                      ; preds = %if.end1627
  tail call void @start_sequence() #3
  br i1 %1, label %if.then1645, label %if.end1647

if.then1645:                                      ; preds = %if.then1638
  %242 = load i32* @word_mode, align 4, !tbaa !9
  %call1646 = tail call %struct.rtx_def* @convert_to_mode(i32 %242, %struct.rtx_def* %op1.addr.5, i32 1) #3
  br label %if.end1647

if.end1647:                                       ; preds = %if.then1645, %if.then1638
  %op1x.0 = phi %struct.rtx_def* [ %call1646, %if.then1645 ], [ %op1.addr.5, %if.then1638 ]
  %op1_mode.0 = phi i32 [ %242, %if.then1645 ], [ %mode, %if.then1638 ]
  %243 = getelementptr inbounds %struct.rtx_def* %op0.addr.4, i64 0, i32 0
  %bf.load1648 = load i32* %243, align 8
  %bf.lshr1649 = lshr i32 %bf.load1648, 16
  %bf.clear1650 = and i32 %bf.lshr1649, 255
  %cmp1651 = icmp eq i32 %bf.clear1650, 0
  %cmp1657 = icmp eq i32 %bf.clear1650, %mode
  %or.cond2738 = or i1 %cmp1651, %cmp1657
  br i1 %or.cond2738, label %if.end1661, label %if.then1659

if.then1659:                                      ; preds = %if.end1647
  %call1660 = tail call %struct.rtx_def* @convert_to_mode(i32 %mode, %struct.rtx_def* %op0.addr.4, i32 %unsignedp) #3
  br label %if.end1661

if.end1661:                                       ; preds = %if.end1647, %if.then1659
  %op0.addr.5 = phi %struct.rtx_def* [ %call1660, %if.then1659 ], [ %op0.addr.4, %if.end1647 ]
  %244 = load %struct.rtx_def** %libfunc, align 8, !tbaa !21
  %call1666 = tail call %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32, i32, i32, ...)* @emit_library_call_value(%struct.rtx_def* %244, %struct.rtx_def* null, i32 1, i32 %mode, i32 2, %struct.rtx_def* %op0.addr.5, i32 %mode, %struct.rtx_def* %op1x.0, i32 %op1_mode.0) #3
  %call1667 = tail call %struct.rtx_def* @get_insns() #3
  tail call void @end_sequence() #3
  %call1668 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode) #3
  %245 = load i32* %code112, align 4, !tbaa !5
  %call1670 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 %245, i32 %mode, %struct.rtx_def* %op0.addr.5, %struct.rtx_def* %op1.addr.5) #3
  tail call void @emit_libcall_block(%struct.rtx_def* %call1667, %struct.rtx_def* %call1668, %struct.rtx_def* %call1666, %struct.rtx_def* %call1670)
  br label %return

if.end1671:                                       ; preds = %if.end1627
  tail call void @delete_insns_since(%struct.rtx_def* %call111) #3
  %methods.off = add i32 %methods, -2
  %switch2744 = icmp ult i32 %methods.off, 3
  br i1 %switch2744, label %if.end1681, label %if.then1680

if.then1680:                                      ; preds = %if.end1671
  tail call void @delete_insns_since(%struct.rtx_def* %call) #3
  br label %return

if.end1681:                                       ; preds = %if.end1671
  %cond1684 = zext i1 %cmp12849 to i32
  switch i32 %42, label %if.end1777 [
    i32 6, label %for.cond1697.preheader
    i32 2, label %for.cond1697.preheader
    i32 1, label %for.cond1697.preheader
  ]

for.cond1697.preheader:                           ; preds = %if.end1681, %if.end1681, %if.end1681
  %wider_mode.1.in2899.in = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom
  %wider_mode.1.in2899 = load i8* %wider_mode.1.in2899.in, align 1
  %cmp16982901 = icmp eq i8 %wider_mode.1.in2899, 0
  br i1 %cmp16982901, label %if.end1777, label %for.body1700

for.body1700:                                     ; preds = %for.cond1697.preheader, %for.cond1697.backedge
  %wider_mode.12903.in = phi i8 [ %wider_mode.1.in, %for.cond1697.backedge ], [ %wider_mode.1.in2899, %for.cond1697.preheader ]
  %wider_mode.12903 = zext i8 %wider_mode.12903.in to i32
  %idxprom1701 = zext i8 %wider_mode.12903.in to i64
  %insn_code1704 = getelementptr inbounds %struct.optab* %binoptab.addr.0, i64 0, i32 1, i64 %idxprom1701, i32 0
  %246 = load i32* %insn_code1704, align 4, !tbaa !10
  %cmp1705 = icmp eq i32 %246, 1317
  br i1 %cmp1705, label %lor.lhs.false1707, label %if.then1716

lor.lhs.false1707:                                ; preds = %for.body1700
  br i1 %cmp12849, label %land.lhs.true1710, label %for.cond1697.backedge

land.lhs.true1710:                                ; preds = %lor.lhs.false1707
  %libfunc1714 = getelementptr inbounds %struct.optab* %binoptab.addr.0, i64 0, i32 1, i64 %idxprom1701, i32 1
  %247 = load %struct.rtx_def** %libfunc1714, align 8, !tbaa !21
  %tobool1715 = icmp eq %struct.rtx_def* %247, null
  br i1 %tobool1715, label %for.cond1697.backedge, label %if.then1716

for.cond1697.backedge:                            ; preds = %land.lhs.true1710, %lor.lhs.false1707, %if.else1769
  %wider_mode.1.in.in = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom1701
  %wider_mode.1.in = load i8* %wider_mode.1.in.in, align 1
  %cmp1698 = icmp eq i8 %wider_mode.1.in, 0
  br i1 %cmp1698, label %if.end1777, label %for.body1700

if.then1716:                                      ; preds = %land.lhs.true1710, %for.body1700
  %248 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 19), align 8, !tbaa !1
  %cmp1723 = icmp eq %struct.optab* %binoptab.addr.0, %248
  %249 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 18), align 16
  %cmp1726 = icmp eq %struct.optab* %binoptab.addr.0, %249
  %or.cond2739 = or i1 %cmp1723, %cmp1726
  %250 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 20), align 16
  %cmp1729 = icmp eq %struct.optab* %binoptab.addr.0, %250
  %or.cond2740 = or i1 %or.cond2739, %cmp1729
  %251 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 0), align 16
  %cmp1732 = icmp eq %struct.optab* %binoptab.addr.0, %251
  %or.cond2741 = or i1 %or.cond2740, %cmp1732
  %252 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 2), align 16
  %cmp1735 = icmp eq %struct.optab* %binoptab.addr.0, %252
  %or.cond2742 = or i1 %or.cond2741, %cmp1735
  %253 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 4), align 16
  %cmp1738 = icmp eq %struct.optab* %binoptab.addr.0, %253
  %or.cond2743 = or i1 %or.cond2742, %cmp1738
  br i1 %or.cond2743, label %land.lhs.true1743, label %lor.lhs.false1740

lor.lhs.false1740:                                ; preds = %if.then1716
  %254 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 21), align 8, !tbaa !1
  %cmp1741 = icmp eq %struct.optab* %binoptab.addr.0, %254
  %or.cond1834 = and i1 %cmp1741, %cmp389
  br i1 %or.cond1834, label %land.rhs1750, label %if.end1747.thread

land.lhs.true1743:                                ; preds = %if.then1716
  br i1 %cmp389, label %land.rhs1750, label %if.end1747.thread

if.end1747.thread:                                ; preds = %land.lhs.true1743, %lor.lhs.false1740
  %call17482837 = tail call fastcc %struct.rtx_def* @widen_operand(%struct.rtx_def* %op0.addr.4, i32 %wider_mode.12903, i32 %mode, i32 %unsignedp, i32 0)
  br label %land.end1753

land.rhs1750:                                     ; preds = %lor.lhs.false1740, %land.lhs.true1743
  %call1748 = tail call fastcc %struct.rtx_def* @widen_operand(%struct.rtx_def* %op0.addr.4, i32 %wider_mode.12903, i32 %mode, i32 %unsignedp, i32 1)
  %255 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 21), align 8, !tbaa !1
  %cmp1751 = icmp ne %struct.optab* %binoptab.addr.0, %255
  br label %land.end1753

land.end1753:                                     ; preds = %if.end1747.thread, %land.rhs1750
  %call17482839 = phi %struct.rtx_def* [ %call1748, %land.rhs1750 ], [ %call17482837, %if.end1747.thread ]
  %256 = phi i1 [ %cmp1751, %land.rhs1750 ], [ false, %if.end1747.thread ]
  %land.ext1754 = zext i1 %256 to i32
  %call1755 = tail call fastcc %struct.rtx_def* @widen_operand(%struct.rtx_def* %op1.addr.5, i32 %wider_mode.12903, i32 %mode, i32 %unsignedp, i32 %land.ext1754)
  %call1756 = tail call %struct.rtx_def* @expand_binop(i32 %wider_mode.12903, %struct.optab* %binoptab.addr.0, %struct.rtx_def* %call17482839, %struct.rtx_def* %call1755, %struct.rtx_def* null, i32 %unsignedp, i32 %cond1684)
  %tobool1757 = icmp eq %struct.rtx_def* %call1756, null
  br i1 %tobool1757, label %if.else1769, label %if.then1758

if.then1758:                                      ; preds = %land.end1753
  br i1 %cmp389, label %if.else1767, label %if.then1761

if.then1761:                                      ; preds = %if.then1758
  %cmp1762 = icmp eq %struct.rtx_def* %target.addr.13, null
  br i1 %cmp1762, label %if.then1764, label %if.end1766

if.then1764:                                      ; preds = %if.then1761
  %call1765 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode) #3
  br label %if.end1766

if.end1766:                                       ; preds = %if.then1764, %if.then1761
  %target.addr.14 = phi %struct.rtx_def* [ %call1765, %if.then1764 ], [ %target.addr.13, %if.then1761 ]
  tail call void @convert_move(%struct.rtx_def* %target.addr.14, %struct.rtx_def* %call1756, i32 0) #3
  br label %return

if.else1767:                                      ; preds = %if.then1758
  %call1768 = tail call %struct.rtx_def* @gen_lowpart(i32 %mode, %struct.rtx_def* %call1756) #3
  br label %return

if.else1769:                                      ; preds = %land.end1753
  tail call void @delete_insns_since(%struct.rtx_def* %call111) #3
  br label %for.cond1697.backedge

if.end1777:                                       ; preds = %for.cond1697.backedge, %for.cond1697.preheader, %if.end1681
  tail call void @delete_insns_since(%struct.rtx_def* %call) #3
  br label %return

return:                                           ; preds = %if.then1345, %if.then1338, %if.then1154, %if.then1147, %if.then995, %if.else997, %if.end1777, %if.else1767, %if.end1766, %if.then1680, %if.end1661, %if.end1624, %if.end781, %if.end583, %if.else486, %if.end485, %if.else385, %if.then383, %if.end338
  %retval.0 = phi %struct.rtx_def* [ %temp.1, %if.end338 ], [ %call384, %if.then383 ], [ %call386, %if.else385 ], [ %target.addr.1, %if.end485 ], [ %call487, %if.else486 ], [ %target.addr.2, %if.end583 ], [ %target.addr.4, %if.end781 ], [ %target.addr.12, %if.end1624 ], [ %call1668, %if.end1661 ], [ %target.addr.14, %if.end1766 ], [ %call1768, %if.else1767 ], [ null, %if.end1777 ], [ null, %if.then1680 ], [ %target.addr.6, %if.else997 ], [ %target.addr.6, %if.then995 ], [ %target.addr.8, %if.then1147 ], [ %target.addr.8, %if.then1154 ], [ %product.1, %if.then1338 ], [ %product.1, %if.then1345 ]
  ret %struct.rtx_def* %retval.0
}

declare %struct.rtx_def* @get_last_insn() #2

declare %struct.rtx_def* @protect_from_queue(%struct.rtx_def*, i32) #2

declare %struct.rtx_def* @force_not_mem(%struct.rtx_def*) #2

declare %struct.rtx_def* @negate_rtx(i32, %struct.rtx_def*) #2

declare i32 @preserve_subexpressions_p() #2

declare i32 @rtx_cost(%struct.rtx_def*, i32) #2

declare %struct.rtx_def* @force_reg(i32, %struct.rtx_def*) #2

declare i32 @rtx_equal_p(%struct.rtx_def*, %struct.rtx_def*) #2

declare %struct.rtx_def* @gen_reg_rtx(i32) #2

declare %struct.rtx_def* @convert_modes(i32, i32, %struct.rtx_def*, i32) #2

declare %struct.rtx_def* @copy_to_mode_reg(i32, %struct.rtx_def*) #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @add_equal_note(%struct.rtx_def* nocapture readonly %seq, %struct.rtx_def* %target, i32 %code, %struct.rtx_def* %op0, %struct.rtx_def* %op1) #0 {
entry:
  %idxprom = sext i32 %code to i64
  %arrayidx = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom
  %0 = load i8* %arrayidx, align 1, !tbaa !9
  switch i8 %0, label %return [
    i8 49, label %lor.lhs.false
    i8 50, label %lor.lhs.false
    i8 99, label %lor.lhs.false
    i8 60, label %lor.lhs.false
  ]

lor.lhs.false:                                    ; preds = %entry, %entry, %entry, %entry
  %1 = getelementptr inbounds %struct.rtx_def* %seq, i64 0, i32 0
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp19 = icmp eq i32 %bf.clear, 24
  br i1 %cmp19, label %lor.lhs.false21, label %return

lor.lhs.false21:                                  ; preds = %lor.lhs.false
  %arrayidx22 = getelementptr inbounds %struct.rtx_def* %seq, i64 0, i32 1, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx22 to %struct.rtvec_def**
  %2 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !1
  %num_elem = getelementptr inbounds %struct.rtvec_def* %2, i64 0, i32 0
  %3 = load i32* %num_elem, align 4, !tbaa !22
  %sub = add nsw i32 %3, -1
  %idxprom23 = sext i32 %sub to i64
  %arrayidx27 = getelementptr inbounds %struct.rtvec_def* %2, i64 0, i32 1, i64 %idxprom23
  %4 = load %struct.rtx_def** %arrayidx27, align 8, !tbaa !1
  %5 = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 0
  %bf.load28 = load i32* %5, align 8
  %bf.clear29 = and i32 %bf.load28, 65535
  %idxprom30212 = zext i32 %bf.clear29 to i64
  %arrayidx31 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom30212
  %6 = load i8* %arrayidx31, align 1, !tbaa !9
  %cmp33 = icmp eq i8 %6, 105
  br i1 %cmp33, label %cond.true, label %return

cond.true:                                        ; preds = %lor.lhs.false21
  %arrayidx47 = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 1, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx47 to %struct.rtx_def**
  %7 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %8 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 0
  %bf.load48 = load i32* %8, align 8
  %bf.clear49 = and i32 %bf.load48, 65535
  %cmp50 = icmp eq i32 %bf.clear49, 47
  br i1 %cmp50, label %cond.end93, label %cond.false

cond.false:                                       ; preds = %cond.true
  %call = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* %4, %struct.rtx_def* %7) #3
  br label %cond.end93

cond.end93:                                       ; preds = %cond.true, %cond.false
  %cond94 = phi %struct.rtx_def* [ %call, %cond.false ], [ %7, %cond.true ]
  %cmp95 = icmp eq %struct.rtx_def* %cond94, null
  br i1 %cmp95, label %return, label %lor.lhs.false97

lor.lhs.false97:                                  ; preds = %cond.end93
  %9 = getelementptr inbounds %struct.rtx_def* %target, i64 0, i32 0
  %bf.load98 = load i32* %9, align 8
  %bf.clear99 = and i32 %bf.load98, 65535
  %cmp100 = icmp eq i32 %bf.clear99, 133
  br i1 %cmp100, label %return, label %lor.lhs.false102

lor.lhs.false102:                                 ; preds = %lor.lhs.false97
  %arrayidx104 = getelementptr inbounds %struct.rtx_def* %cond94, i64 0, i32 1, i64 0
  %rtx105 = bitcast %union.rtunion_def* %arrayidx104 to %struct.rtx_def**
  %10 = load %struct.rtx_def** %rtx105, align 8, !tbaa !1
  %call106 = tail call i32 @rtx_equal_p(%struct.rtx_def* %10, %struct.rtx_def* %target) #3
  %tobool = icmp eq i32 %call106, 0
  br i1 %tobool, label %land.lhs.true107, label %if.end

land.lhs.true107:                                 ; preds = %lor.lhs.false102
  %11 = load %struct.rtx_def** %rtx105, align 8, !tbaa !1
  %12 = getelementptr inbounds %struct.rtx_def* %11, i64 0, i32 0
  %bf.load111 = load i32* %12, align 8
  %bf.clear112 = and i32 %bf.load111, 65535
  %cmp113 = icmp eq i32 %bf.clear112, 64
  br i1 %cmp113, label %lor.lhs.false115, label %return

lor.lhs.false115:                                 ; preds = %land.lhs.true107
  %arrayidx120 = getelementptr inbounds %struct.rtx_def* %11, i64 0, i32 1, i64 0
  %rtx121 = bitcast %union.rtunion_def* %arrayidx120 to %struct.rtx_def**
  %13 = load %struct.rtx_def** %rtx121, align 8, !tbaa !1
  %arrayidx123 = getelementptr inbounds %struct.rtx_def* %13, i64 0, i32 1, i64 0
  %rtx124 = bitcast %union.rtunion_def* %arrayidx123 to %struct.rtx_def**
  %14 = load %struct.rtx_def** %rtx124, align 8, !tbaa !1
  %call125 = tail call i32 @rtx_equal_p(%struct.rtx_def* %14, %struct.rtx_def* %target) #3
  %tobool126 = icmp eq i32 %call125, 0
  br i1 %tobool126, label %return, label %if.end

if.end:                                           ; preds = %lor.lhs.false115, %lor.lhs.false102
  %call127 = tail call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %target, %struct.rtx_def* %op0) #3
  %tobool128 = icmp eq i32 %call127, 0
  br i1 %tobool128, label %lor.lhs.false129, label %if.then134

lor.lhs.false129:                                 ; preds = %if.end
  %tobool130 = icmp eq %struct.rtx_def* %op1, null
  br i1 %tobool130, label %if.end152, label %land.lhs.true131

land.lhs.true131:                                 ; preds = %lor.lhs.false129
  %call132 = tail call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %target, %struct.rtx_def* %op1) #3
  %tobool133 = icmp eq i32 %call132, 0
  br i1 %tobool133, label %if.end152, label %if.then134

if.then134:                                       ; preds = %land.lhs.true131, %if.end
  %15 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !1
  %num_elem138 = getelementptr inbounds %struct.rtvec_def* %15, i64 0, i32 0
  %16 = load i32* %num_elem138, align 4, !tbaa !22
  %sub139 = add i32 %16, -2
  %cmp140214 = icmp sgt i32 %sub139, -1
  br i1 %cmp140214, label %for.body.lr.ph, label %if.end152

for.body.lr.ph:                                   ; preds = %if.then134
  %17 = sext i32 %sub139 to i64
  br label %for.body

for.cond:                                         ; preds = %for.body
  %18 = trunc i64 %indvars.iv to i32
  %cmp140 = icmp sgt i32 %18, 0
  br i1 %cmp140, label %for.cond.for.body_crit_edge, label %if.end152

for.cond.for.body_crit_edge:                      ; preds = %for.cond
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  %.pre = load %struct.rtvec_def** %rtvec, align 8, !tbaa !1
  br label %for.body

for.body:                                         ; preds = %for.cond.for.body_crit_edge, %for.body.lr.ph
  %19 = phi %struct.rtvec_def* [ %15, %for.body.lr.ph ], [ %.pre, %for.cond.for.body_crit_edge ]
  %indvars.iv = phi i64 [ %17, %for.body.lr.ph ], [ %indvars.iv.next, %for.cond.for.body_crit_edge ]
  %arrayidx147 = getelementptr inbounds %struct.rtvec_def* %19, i64 0, i32 1, i64 %indvars.iv
  %20 = load %struct.rtx_def** %arrayidx147, align 8, !tbaa !1
  %call148 = tail call i32 @reg_set_p(%struct.rtx_def* %target, %struct.rtx_def* %20) #3
  %tobool149 = icmp eq i32 %call148, 0
  br i1 %tobool149, label %for.cond, label %return

if.end152:                                        ; preds = %for.cond, %if.then134, %land.lhs.true131, %lor.lhs.false129
  %cmp156 = icmp eq i8 %0, 49
  %bf.load159 = load i32* %9, align 8
  %bf.lshr = lshr i32 %bf.load159, 16
  %bf.clear160 = and i32 %bf.lshr, 255
  %call161 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %op0) #3
  br i1 %cmp156, label %if.then158, label %if.else

if.then158:                                       ; preds = %if.end152
  %call162 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 %code, i32 %bf.clear160, %struct.rtx_def* %call161) #3
  br label %if.end169

if.else:                                          ; preds = %if.end152
  %call167 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %op1) #3
  %call168 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 %code, i32 %bf.clear160, %struct.rtx_def* %call161, %struct.rtx_def* %call167) #3
  br label %if.end169

if.end169:                                        ; preds = %if.else, %if.then158
  %note.0 = phi %struct.rtx_def* [ %call162, %if.then158 ], [ %call168, %if.else ]
  %21 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !1
  %num_elem173 = getelementptr inbounds %struct.rtvec_def* %21, i64 0, i32 0
  %22 = load i32* %num_elem173, align 4, !tbaa !22
  %sub174 = add nsw i32 %22, -1
  %idxprom175 = sext i32 %sub174 to i64
  %arrayidx180 = getelementptr inbounds %struct.rtvec_def* %21, i64 0, i32 1, i64 %idxprom175
  %23 = load %struct.rtx_def** %arrayidx180, align 8, !tbaa !1
  %call181 = tail call %struct.rtx_def* @set_unique_reg_note(%struct.rtx_def* %23, i32 4, %struct.rtx_def* %note.0) #3
  br label %return

return:                                           ; preds = %for.body, %lor.lhs.false21, %cond.end93, %lor.lhs.false97, %lor.lhs.false, %land.lhs.true107, %lor.lhs.false115, %entry, %if.end169
  %retval.0 = phi i32 [ 1, %if.end169 ], [ 1, %entry ], [ 1, %lor.lhs.false115 ], [ 1, %land.lhs.true107 ], [ 1, %lor.lhs.false ], [ 1, %lor.lhs.false97 ], [ 1, %cond.end93 ], [ 1, %lor.lhs.false21 ], [ 0, %for.body ]
  ret i32 %retval.0
}

declare void @delete_insns_since(%struct.rtx_def*) #2

declare %struct.rtx_def* @emit_insn(%struct.rtx_def*) #2

declare %struct.rtx_def* @gen_lowpart(i32, %struct.rtx_def*) #2

declare %struct.rtx_def* @convert_to_mode(i32, %struct.rtx_def*, i32) #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @widen_operand(%struct.rtx_def* %op, i32 %mode, i32 %oldmode, i32 %unsignedp, i32 %no_extend) #0 {
entry:
  %tobool = icmp eq i32 %no_extend, 0
  br i1 %tobool, label %if.then15, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %0 = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 16711680
  %cmp = icmp eq i32 %bf.clear, 0
  br i1 %cmp, label %return, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true
  %1 = and i32 %bf.load, 268500991
  %2 = icmp eq i32 %1, 268435519
  br i1 %2, label %land.lhs.true10, label %if.end16

land.lhs.true10:                                  ; preds = %lor.lhs.false
  %bf.lshr12 = lshr i32 %bf.load, 26
  %bf.clear13 = and i32 %bf.lshr12, 1
  %cmp14 = icmp eq i32 %bf.clear13, %unsignedp
  br i1 %cmp14, label %if.then15, label %if.end16

if.then15:                                        ; preds = %entry, %land.lhs.true10
  %call = tail call %struct.rtx_def* @convert_modes(i32 %mode, i32 %oldmode, %struct.rtx_def* %op, i32 %unsignedp) #3
  br label %return

if.end16:                                         ; preds = %lor.lhs.false, %land.lhs.true10
  %idxprom = sext i32 %mode to i64
  %arrayidx = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom
  %3 = load i8* %arrayidx, align 1, !tbaa !9
  %conv = zext i8 %3 to i32
  %4 = load i32* @target_flags, align 4, !tbaa !7
  %and = lshr i32 %4, 23
  %5 = and i32 %and, 4
  %6 = add i32 %5, 4
  %cmp18 = icmp ugt i32 %conv, %6
  br i1 %cmp18, label %if.end26, label %if.then20

if.then20:                                        ; preds = %if.end16
  %bf.lshr22 = lshr i32 %bf.load, 16
  %bf.clear23 = and i32 %bf.lshr22, 255
  %call24 = tail call %struct.rtx_def* @force_reg(i32 %bf.clear23, %struct.rtx_def* %op) #3
  %call25 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 %mode, %struct.rtx_def* %call24, i32 0) #3
  br label %return

if.end26:                                         ; preds = %if.end16
  %call27 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode) #3
  %call28 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call27) #3
  %call29 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call28) #3
  %bf.load30 = load i32* %0, align 8
  %bf.lshr31 = lshr i32 %bf.load30, 16
  %bf.clear32 = and i32 %bf.lshr31, 255
  %call33 = tail call %struct.rtx_def* @gen_lowpart(i32 %bf.clear32, %struct.rtx_def* %call27) #3
  %call34 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call33, %struct.rtx_def* %op) #3
  br label %return

return:                                           ; preds = %land.lhs.true, %if.end26, %if.then20, %if.then15
  %retval.0 = phi %struct.rtx_def* [ %call, %if.then15 ], [ %call25, %if.then20 ], [ %call27, %if.end26 ], [ %op, %land.lhs.true ]
  ret %struct.rtx_def* %retval.0
}

declare void @convert_move(%struct.rtx_def*, %struct.rtx_def*, i32) #2

declare void @start_sequence() #2

declare %struct.rtx_def* @operand_subword(%struct.rtx_def*, i32, i32, i32) #2

declare %struct.rtx_def* @operand_subword_force(%struct.rtx_def*, i32, i32) #2

declare %struct.rtx_def* @emit_move_insn(%struct.rtx_def*, %struct.rtx_def*) #2

declare %struct.rtx_def* @get_insns() #2

declare void @end_sequence() #2

declare %struct.rtx_def* @gen_rtx_fmt_ee(i32, i32, %struct.rtx_def*, %struct.rtx_def*) #2

declare %struct.rtx_def* @copy_rtx(%struct.rtx_def*) #2

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @emit_no_conflict_block(%struct.rtx_def* %insns, %struct.rtx_def* %target, %struct.rtx_def* %op0, %struct.rtx_def* %op1, %struct.rtx_def* %equiv) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %target, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp ne i32 %bf.clear, 61
  %1 = load i32* @reload_in_progress, align 4
  %tobool = icmp ne i32 %1, 0
  %or.cond = or i1 %cmp, %tobool
  br i1 %or.cond, label %if.then, label %for.cond.preheader

for.cond.preheader:                               ; preds = %entry
  %tobool1311 = icmp eq %struct.rtx_def* %insns, null
  br i1 %tobool1311, label %for.cond11.outer, label %for.body

if.then:                                          ; preds = %entry
  %call = tail call %struct.rtx_def* @emit_insns(%struct.rtx_def* %insns) #3
  br label %return

for.body:                                         ; preds = %for.cond.preheader, %for.inc
  %insn.0312 = phi %struct.rtx_def* [ %3, %for.inc ], [ %insns, %for.cond.preheader ]
  %2 = getelementptr inbounds %struct.rtx_def* %insn.0312, i64 0, i32 0
  %bf.load2 = load i32* %2, align 8
  %bf.clear3 = and i32 %bf.load2, 65535
  %cmp4 = icmp eq i32 %bf.clear3, 32
  br i1 %cmp4, label %lor.lhs.false5, label %if.then8

lor.lhs.false5:                                   ; preds = %for.body
  %call6 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn.0312, i32 7, %struct.rtx_def* null) #3
  %tobool7 = icmp eq %struct.rtx_def* %call6, null
  br i1 %tobool7, label %for.inc, label %if.then8

if.then8:                                         ; preds = %lor.lhs.false5, %for.body
  %call9 = tail call %struct.rtx_def* @emit_insns(%struct.rtx_def* %insns) #3
  br label %return

for.inc:                                          ; preds = %lor.lhs.false5
  %arrayidx = getelementptr inbounds %struct.rtx_def* %insn.0312, i64 0, i32 1, i64 2
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %3 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %tobool1 = icmp eq %struct.rtx_def* %3, null
  br i1 %tobool1, label %for.cond11.outer, label %for.body

for.cond11:                                       ; preds = %for.cond11.outer, %if.end92
  %insn.1 = phi %struct.rtx_def* [ %4, %if.end92 ], [ %insn.1.ph, %for.cond11.outer ]
  %tobool12 = icmp eq %struct.rtx_def* %insn.1, null
  br i1 %tobool12, label %for.end123, label %for.body13

for.body13:                                       ; preds = %for.cond11
  %arrayidx15 = getelementptr inbounds %struct.rtx_def* %insn.1, i64 0, i32 1, i64 2
  %rtx16 = bitcast %union.rtunion_def* %arrayidx15 to %struct.rtx_def**
  %4 = load %struct.rtx_def** %rtx16, align 8, !tbaa !1
  %call17 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn.1, i32 7, %struct.rtx_def* null) #3
  %cmp18 = icmp eq %struct.rtx_def* %call17, null
  br i1 %cmp18, label %if.end20, label %if.then19

if.then19:                                        ; preds = %for.body13
  tail call void @remove_note(%struct.rtx_def* %insn.1, %struct.rtx_def* %call17) #3
  br label %if.end20

if.end20:                                         ; preds = %for.body13, %if.then19
  %call21 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn.1, i32 6, %struct.rtx_def* null) #3
  %cmp22 = icmp eq %struct.rtx_def* %call21, null
  br i1 %cmp22, label %if.end24, label %if.then23

if.then23:                                        ; preds = %if.end20
  tail call void @remove_note(%struct.rtx_def* %insn.1, %struct.rtx_def* %call21) #3
  br label %if.end24

if.end24:                                         ; preds = %if.end20, %if.then23
  %arrayidx26 = getelementptr inbounds %struct.rtx_def* %insn.1, i64 0, i32 1, i64 3
  %rtx27 = bitcast %union.rtunion_def* %arrayidx26 to %struct.rtx_def**
  %5 = load %struct.rtx_def** %rtx27, align 8, !tbaa !1
  %6 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 0
  %bf.load28 = load i32* %6, align 8
  %bf.clear29 = and i32 %bf.load28, 65535
  switch i32 %bf.clear29, label %if.then91 [
    i32 47, label %if.end89
    i32 48, label %if.end89
    i32 49, label %if.end89
    i32 39, label %for.cond57.preheader
  ]

for.cond57.preheader:                             ; preds = %if.end24
  %arrayidx62306 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 1, i64 0
  %rtvec307 = bitcast %union.rtunion_def* %arrayidx62306 to %struct.rtvec_def**
  %7 = load %struct.rtvec_def** %rtvec307, align 8, !tbaa !1
  %num_elem308 = getelementptr inbounds %struct.rtvec_def* %7, i64 0, i32 0
  %8 = load i32* %num_elem308, align 4, !tbaa !22
  %cmp63309 = icmp sgt i32 %8, 0
  br i1 %cmp63309, label %for.body64, label %if.then91

for.cond57:                                       ; preds = %for.body64
  %9 = trunc i64 %indvars.iv.next to i32
  %cmp63 = icmp slt i32 %9, %8
  br i1 %cmp63, label %for.body64, label %if.then91

for.body64:                                       ; preds = %for.cond57.preheader, %for.cond57
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.cond57 ], [ 0, %for.cond57.preheader ]
  %arrayidx71 = getelementptr inbounds %struct.rtvec_def* %7, i64 0, i32 1, i64 %indvars.iv
  %10 = load %struct.rtx_def** %arrayidx71, align 8, !tbaa !1
  %11 = getelementptr inbounds %struct.rtx_def* %10, i64 0, i32 0
  %bf.load72 = load i32* %11, align 8
  %bf.clear73 = and i32 %bf.load72, 65535
  %cmp74 = icmp eq i32 %bf.clear73, 47
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  br i1 %cmp74, label %if.end89, label %for.cond57

if.end89:                                         ; preds = %for.body64, %if.end24, %if.end24, %if.end24
  %set.0 = phi %struct.rtx_def* [ %5, %if.end24 ], [ %5, %if.end24 ], [ %5, %if.end24 ], [ %10, %for.body64 ]
  %cmp90 = icmp eq %struct.rtx_def* %set.0, null
  br i1 %cmp90, label %if.then91, label %if.end92

if.then91:                                        ; preds = %if.end24, %if.end89, %for.cond57.preheader, %for.cond57
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 2768, i8* getelementptr inbounds ([23 x i8]* @__FUNCTION__.emit_no_conflict_block, i64 0, i64 0)) #6
  unreachable

if.end92:                                         ; preds = %if.end89
  %arrayidx94 = getelementptr inbounds %struct.rtx_def* %set.0, i64 0, i32 1, i64 0
  %rtx95 = bitcast %union.rtunion_def* %arrayidx94 to %struct.rtx_def**
  %12 = load %struct.rtx_def** %rtx95, align 8, !tbaa !1
  %call96 = tail call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %target, %struct.rtx_def* %12) #3
  %tobool97 = icmp eq i32 %call96, 0
  br i1 %tobool97, label %if.then98, label %for.cond11

if.then98:                                        ; preds = %if.end92
  %arrayidx100 = getelementptr inbounds %struct.rtx_def* %insn.1, i64 0, i32 1, i64 1
  %rtx101 = bitcast %union.rtunion_def* %arrayidx100 to %struct.rtx_def**
  %13 = load %struct.rtx_def** %rtx101, align 8, !tbaa !1
  %tobool102 = icmp eq %struct.rtx_def* %13, null
  br i1 %tobool102, label %if.end111, label %if.then103

if.then103:                                       ; preds = %if.then98
  %14 = getelementptr inbounds %struct.rtx_def* %13, i64 0, i32 1, i64 2, i32 0
  %.c267 = ptrtoint %struct.rtx_def* %4 to i64
  store i64 %.c267, i64* %14, align 8, !tbaa !1
  br label %if.end111

if.end111:                                        ; preds = %if.then98, %if.then103
  %insns.addr.1 = phi %struct.rtx_def* [ %insns.addr.0.ph, %if.then103 ], [ %4, %if.then98 ]
  %tobool112 = icmp eq %struct.rtx_def* %4, null
  br i1 %tobool112, label %if.end120, label %if.then113

if.then113:                                       ; preds = %if.end111
  %15 = load %struct.rtx_def** %rtx101, align 8, !tbaa !1
  %16 = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 1, i64 1, i32 0
  %.c = ptrtoint %struct.rtx_def* %15 to i64
  store i64 %.c, i64* %16, align 8, !tbaa !1
  br label %if.end120

if.end120:                                        ; preds = %if.end111, %if.then113
  tail call void @add_insn(%struct.rtx_def* %insn.1) #3
  br label %for.cond11.outer

for.cond11.outer:                                 ; preds = %for.cond.preheader, %for.inc, %if.end120
  %insns.addr.0.ph = phi %struct.rtx_def* [ %insns.addr.1, %if.end120 ], [ null, %for.cond.preheader ], [ %insns, %for.inc ]
  %insn.1.ph = phi %struct.rtx_def* [ %4, %if.end120 ], [ null, %for.cond.preheader ], [ %insns, %for.inc ]
  br label %for.cond11

for.end123:                                       ; preds = %for.cond11
  %call124 = tail call %struct.rtx_def* @get_last_insn() #3
  %cmp125 = icmp eq %struct.rtx_def* %target, %op0
  %cmp126 = icmp eq %struct.rtx_def* %target, %op1
  %or.cond268 = or i1 %cmp125, %cmp126
  br i1 %or.cond268, label %for.cond131.preheader, label %if.then127

if.then127:                                       ; preds = %for.end123
  %call128 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %target) #3
  %call129 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call128) #3
  br label %for.cond131.preheader

for.cond131.preheader:                            ; preds = %for.end123, %if.then127
  %tobool132279 = icmp eq %struct.rtx_def* %insns.addr.0.ph, null
  br i1 %tobool132279, label %for.end166, label %for.body133.lr.ph

for.body133.lr.ph:                                ; preds = %for.cond131.preheader
  %tobool137 = icmp eq %struct.rtx_def* %op1, null
  %tobool151 = icmp eq %struct.rtx_def* %op0, null
  %17 = getelementptr inbounds %struct.rtx_def* %op0, i64 0, i32 0
  %18 = getelementptr inbounds %struct.rtx_def* %op1, i64 0, i32 0
  br i1 %tobool137, label %for.body133.lr.ph.split.us, label %for.body133.lr.ph.for.body133.lr.ph.split_crit_edge

for.body133.lr.ph.for.body133.lr.ph.split_crit_edge: ; preds = %for.body133.lr.ph
  br i1 %tobool151, label %land.lhs.true138.us285, label %land.lhs.true138

for.body133.lr.ph.split.us:                       ; preds = %for.body133.lr.ph
  br i1 %tobool151, label %for.cond131.backedge.us.us, label %land.lhs.true152.us

for.cond131.backedge.us.us:                       ; preds = %for.body133.lr.ph.split.us, %for.cond131.backedge.us.us
  %insn.2280.us.us = phi %struct.rtx_def* [ %19, %for.cond131.backedge.us.us ], [ %insns.addr.0.ph, %for.body133.lr.ph.split.us ]
  %arrayidx135.us.us = getelementptr inbounds %struct.rtx_def* %insn.2280.us.us, i64 0, i32 1, i64 2
  %rtx136.us.us = bitcast %union.rtunion_def* %arrayidx135.us.us to %struct.rtx_def**
  %19 = load %struct.rtx_def** %rtx136.us.us, align 8, !tbaa !1
  tail call void @add_insn(%struct.rtx_def* %insn.2280.us.us) #3
  %tobool132.us.us = icmp eq %struct.rtx_def* %19, null
  br i1 %tobool132.us.us, label %for.end166, label %for.cond131.backedge.us.us

land.lhs.true152.us:                              ; preds = %for.body133.lr.ph.split.us, %for.cond131.backedge.us
  %insn.2280.us = phi %struct.rtx_def* [ %20, %for.cond131.backedge.us ], [ %insns.addr.0.ph, %for.body133.lr.ph.split.us ]
  %arrayidx135.us = getelementptr inbounds %struct.rtx_def* %insn.2280.us, i64 0, i32 1, i64 2
  %rtx136.us = bitcast %union.rtunion_def* %arrayidx135.us to %struct.rtx_def**
  %20 = load %struct.rtx_def** %rtx136.us, align 8, !tbaa !1
  tail call void @add_insn(%struct.rtx_def* %insn.2280.us) #3
  %bf.load153.us = load i32* %17, align 8
  %bf.clear154.us = and i32 %bf.load153.us, 65535
  %cmp155.us = icmp eq i32 %bf.clear154.us, 61
  br i1 %cmp155.us, label %if.then156.us, label %for.cond131.backedge.us

if.then156.us:                                    ; preds = %land.lhs.true152.us
  %arrayidx158.us = getelementptr inbounds %struct.rtx_def* %insn.2280.us, i64 0, i32 1, i64 6
  %rtx159.us = bitcast %union.rtunion_def* %arrayidx158.us to %struct.rtx_def**
  %21 = load %struct.rtx_def** %rtx159.us, align 8, !tbaa !1
  %call160.us = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 9, %struct.rtx_def* %op0, %struct.rtx_def* %21) #3
  %22 = getelementptr inbounds %union.rtunion_def* %arrayidx158.us, i64 0, i32 0
  %call160.c.us = ptrtoint %struct.rtx_def* %call160.us to i64
  store i64 %call160.c.us, i64* %22, align 8, !tbaa !1
  br label %for.cond131.backedge.us

for.cond131.backedge.us:                          ; preds = %if.then156.us, %land.lhs.true152.us
  %tobool132.us = icmp eq %struct.rtx_def* %20, null
  br i1 %tobool132.us, label %for.end166, label %land.lhs.true152.us

land.lhs.true138.us285:                           ; preds = %for.body133.lr.ph.for.body133.lr.ph.split_crit_edge, %for.cond131.backedge.us304
  %insn.2280.us282 = phi %struct.rtx_def* [ %23, %for.cond131.backedge.us304 ], [ %insns.addr.0.ph, %for.body133.lr.ph.for.body133.lr.ph.split_crit_edge ]
  %arrayidx135.us283 = getelementptr inbounds %struct.rtx_def* %insn.2280.us282, i64 0, i32 1, i64 2
  %rtx136.us284 = bitcast %union.rtunion_def* %arrayidx135.us283 to %struct.rtx_def**
  %23 = load %struct.rtx_def** %rtx136.us284, align 8, !tbaa !1
  tail call void @add_insn(%struct.rtx_def* %insn.2280.us282) #3
  %bf.load139.us286 = load i32* %18, align 8
  %bf.clear140.us287 = and i32 %bf.load139.us286, 65535
  %cmp141.us288 = icmp eq i32 %bf.clear140.us287, 61
  br i1 %cmp141.us288, label %if.then142.us289, label %for.cond131.backedge.us304

if.then142.us289:                                 ; preds = %land.lhs.true138.us285
  %arrayidx144.us290 = getelementptr inbounds %struct.rtx_def* %insn.2280.us282, i64 0, i32 1, i64 6
  %rtx145.us291 = bitcast %union.rtunion_def* %arrayidx144.us290 to %struct.rtx_def**
  %24 = load %struct.rtx_def** %rtx145.us291, align 8, !tbaa !1
  %call146.us292 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 9, %struct.rtx_def* %op1, %struct.rtx_def* %24) #3
  %25 = getelementptr inbounds %union.rtunion_def* %arrayidx144.us290, i64 0, i32 0
  %call146.c.us293 = ptrtoint %struct.rtx_def* %call146.us292 to i64
  store i64 %call146.c.us293, i64* %25, align 8, !tbaa !1
  br label %for.cond131.backedge.us304

for.cond131.backedge.us304:                       ; preds = %land.lhs.true138.us285, %if.then142.us289
  %tobool132.us305 = icmp eq %struct.rtx_def* %23, null
  br i1 %tobool132.us305, label %for.end166, label %land.lhs.true138.us285

land.lhs.true138:                                 ; preds = %for.body133.lr.ph.for.body133.lr.ph.split_crit_edge, %for.cond131.backedge
  %insn.2280 = phi %struct.rtx_def* [ %26, %for.cond131.backedge ], [ %insns.addr.0.ph, %for.body133.lr.ph.for.body133.lr.ph.split_crit_edge ]
  %arrayidx135 = getelementptr inbounds %struct.rtx_def* %insn.2280, i64 0, i32 1, i64 2
  %rtx136 = bitcast %union.rtunion_def* %arrayidx135 to %struct.rtx_def**
  %26 = load %struct.rtx_def** %rtx136, align 8, !tbaa !1
  tail call void @add_insn(%struct.rtx_def* %insn.2280) #3
  %bf.load139 = load i32* %18, align 8
  %bf.clear140 = and i32 %bf.load139, 65535
  %cmp141 = icmp eq i32 %bf.clear140, 61
  br i1 %cmp141, label %if.then142, label %land.lhs.true152

if.then142:                                       ; preds = %land.lhs.true138
  %arrayidx144 = getelementptr inbounds %struct.rtx_def* %insn.2280, i64 0, i32 1, i64 6
  %rtx145 = bitcast %union.rtunion_def* %arrayidx144 to %struct.rtx_def**
  %27 = load %struct.rtx_def** %rtx145, align 8, !tbaa !1
  %call146 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 9, %struct.rtx_def* %op1, %struct.rtx_def* %27) #3
  %28 = getelementptr inbounds %union.rtunion_def* %arrayidx144, i64 0, i32 0
  %call146.c = ptrtoint %struct.rtx_def* %call146 to i64
  store i64 %call146.c, i64* %28, align 8, !tbaa !1
  br label %land.lhs.true152

for.cond131.backedge:                             ; preds = %land.lhs.true152, %if.then156
  %tobool132 = icmp eq %struct.rtx_def* %26, null
  br i1 %tobool132, label %for.end166, label %land.lhs.true138

land.lhs.true152:                                 ; preds = %land.lhs.true138, %if.then142
  %bf.load153 = load i32* %17, align 8
  %bf.clear154 = and i32 %bf.load153, 65535
  %cmp155 = icmp eq i32 %bf.clear154, 61
  br i1 %cmp155, label %if.then156, label %for.cond131.backedge

if.then156:                                       ; preds = %land.lhs.true152
  %arrayidx158 = getelementptr inbounds %struct.rtx_def* %insn.2280, i64 0, i32 1, i64 6
  %rtx159 = bitcast %union.rtunion_def* %arrayidx158 to %struct.rtx_def**
  %29 = load %struct.rtx_def** %rtx159, align 8, !tbaa !1
  %call160 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 9, %struct.rtx_def* %op0, %struct.rtx_def* %29) #3
  %30 = getelementptr inbounds %union.rtunion_def* %arrayidx158, i64 0, i32 0
  %call160.c = ptrtoint %struct.rtx_def* %call160 to i64
  store i64 %call160.c, i64* %30, align 8, !tbaa !1
  br label %for.cond131.backedge

for.end166:                                       ; preds = %for.cond131.backedge, %for.cond131.backedge.us304, %for.cond131.backedge.us, %for.cond131.backedge.us.us, %for.cond131.preheader
  %bf.load167 = load i32* %0, align 8
  %bf.lshr = lshr i32 %bf.load167, 16
  %bf.clear168 = and i32 %bf.lshr, 255
  %idxprom169266 = zext i32 %bf.clear168 to i64
  %31 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 30), align 16, !tbaa !1
  %insn_code = getelementptr inbounds %struct.optab* %31, i64 0, i32 1, i64 %idxprom169266, i32 0
  %32 = load i32* %insn_code, align 4, !tbaa !10
  %cmp171 = icmp eq i32 %32, 1317
  br i1 %cmp171, label %if.else178, label %if.then172

if.then172:                                       ; preds = %for.end166
  %call173 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %target, %struct.rtx_def* %target) #3
  %tobool174 = icmp eq %struct.rtx_def* %equiv, null
  br i1 %tobool174, label %if.end181, label %if.then175

if.then175:                                       ; preds = %if.then172
  %call176 = tail call %struct.rtx_def* @set_unique_reg_note(%struct.rtx_def* %call173, i32 4, %struct.rtx_def* %equiv) #3
  br label %if.end181

if.else178:                                       ; preds = %for.end166
  %call179 = tail call %struct.rtx_def* @get_last_insn() #3
  %call180 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %call179, i32 4, %struct.rtx_def* null) #3
  tail call void @remove_note(%struct.rtx_def* %call179, %struct.rtx_def* %call180) #3
  br label %if.end181

if.end181:                                        ; preds = %if.then172, %if.then175, %if.else178
  %last.0 = phi %struct.rtx_def* [ %call173, %if.then175 ], [ %call173, %if.then172 ], [ %call179, %if.else178 ]
  %cmp182 = icmp eq %struct.rtx_def* %call124, null
  br i1 %cmp182, label %if.then183, label %if.else185

if.then183:                                       ; preds = %if.end181
  %call184 = tail call %struct.rtx_def* @get_insns() #3
  br label %if.end189

if.else185:                                       ; preds = %if.end181
  %arrayidx187 = getelementptr inbounds %struct.rtx_def* %call124, i64 0, i32 1, i64 2
  %rtx188 = bitcast %union.rtunion_def* %arrayidx187 to %struct.rtx_def**
  %33 = load %struct.rtx_def** %rtx188, align 8, !tbaa !1
  br label %if.end189

if.end189:                                        ; preds = %if.else185, %if.then183
  %first.0 = phi %struct.rtx_def* [ %call184, %if.then183 ], [ %33, %if.else185 ]
  %arrayidx191 = getelementptr inbounds %struct.rtx_def* %first.0, i64 0, i32 1, i64 6
  %rtx192 = bitcast %union.rtunion_def* %arrayidx191 to %struct.rtx_def**
  %34 = load %struct.rtx_def** %rtx192, align 8, !tbaa !1
  %call193 = tail call %struct.rtx_def* @gen_rtx_fmt_ue(i32 4, i32 7, %struct.rtx_def* %last.0, %struct.rtx_def* %34) #3
  %35 = getelementptr inbounds %union.rtunion_def* %arrayidx191, i64 0, i32 0
  %call193.c = ptrtoint %struct.rtx_def* %call193 to i64
  store i64 %call193.c, i64* %35, align 8, !tbaa !1
  %arrayidx198 = getelementptr inbounds %struct.rtx_def* %last.0, i64 0, i32 1, i64 6
  %rtx199 = bitcast %union.rtunion_def* %arrayidx198 to %struct.rtx_def**
  %36 = load %struct.rtx_def** %rtx199, align 8, !tbaa !1
  %call200 = tail call %struct.rtx_def* @gen_rtx_fmt_ue(i32 4, i32 6, %struct.rtx_def* %first.0, %struct.rtx_def* %36) #3
  %37 = getelementptr inbounds %union.rtunion_def* %arrayidx198, i64 0, i32 0
  %call200.c = ptrtoint %struct.rtx_def* %call200 to i64
  store i64 %call200.c, i64* %37, align 8, !tbaa !1
  br label %return

return:                                           ; preds = %if.end189, %if.then8, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call, %if.then ], [ %call9, %if.then8 ], [ %last.0, %if.end189 ]
  ret %struct.rtx_def* %retval.0
}

declare %struct.rtx_def* @gen_rtx_CONST_INT(i32, i64) #2

declare %struct.rtx_def* @emit_insns(%struct.rtx_def*) #2

declare %struct.rtx_def* @gen_rtx_fmt_e(i32, i32, %struct.rtx_def*) #2

declare %struct.rtx_def* @emit_store_flag_force(%struct.rtx_def*, i32, %struct.rtx_def*, %struct.rtx_def*, i32, i32, i32) #2

declare %struct.rtx_def* @set_unique_reg_note(%struct.rtx_def*, i32, %struct.rtx_def*) #2

declare i32 @mode_for_size(i32, i32, i32) #2

declare %struct.rtx_def* @gen_realpart(i32, %struct.rtx_def*) #2

declare %struct.rtx_def* @gen_imagpart(i32, %struct.rtx_def*) #2

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @expand_unop(i32 %mode, %struct.optab* %unoptab, %struct.rtx_def* %op0, %struct.rtx_def* %target, i32 %unsignedp) #0 {
entry:
  %idxprom = sext i32 %mode to i64
  %insn_code = getelementptr inbounds %struct.optab* %unoptab, i64 0, i32 1, i64 %idxprom, i32 0
  %code = getelementptr inbounds %struct.optab* %unoptab, i64 0, i32 0
  br label %tailrecurse

tailrecurse:                                      ; preds = %if.then61, %entry
  %op0.tr = phi %struct.rtx_def* [ %op0, %entry ], [ %op0.addr.0, %if.then61 ]
  %target.tr = phi %struct.rtx_def* [ %target, %entry ], [ null, %if.then61 ]
  %call = tail call %struct.rtx_def* @get_last_insn() #3
  %call1 = tail call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %op0.tr, i32 0) #3
  %0 = load i32* @flag_force_mem, align 4, !tbaa !7
  %tobool = icmp eq i32 %0, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %tailrecurse
  %call2 = tail call %struct.rtx_def* @force_not_mem(%struct.rtx_def* %call1) #3
  br label %if.end

if.end:                                           ; preds = %tailrecurse, %if.then
  %op0.addr.0 = phi %struct.rtx_def* [ %call2, %if.then ], [ %call1, %tailrecurse ]
  %tobool3 = icmp eq %struct.rtx_def* %target.tr, null
  br i1 %tobool3, label %if.end6, label %if.then4

if.then4:                                         ; preds = %if.end
  %call5 = tail call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %target.tr, i32 1) #3
  br label %if.end6

if.end6:                                          ; preds = %if.end, %if.then4
  %target.addr.0 = phi %struct.rtx_def* [ %call5, %if.then4 ], [ null, %if.end ]
  %1 = load i32* %insn_code, align 4, !tbaa !10
  %cmp = icmp eq i32 %1, 1317
  br i1 %cmp, label %if.end67.loopexit, label %if.then9

if.then9:                                         ; preds = %if.end6
  %idxprom14 = sext i32 %1 to i64
  %operand = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom14, i32 3
  %2 = load %struct.insn_operand_data** %operand, align 8, !tbaa !12
  %mode17 = getelementptr inbounds %struct.insn_operand_data* %2, i64 1, i32 2
  %bf.load = load i16* %mode17, align 8
  %bf.cast = zext i16 %bf.load to i32
  %tobool18 = icmp eq %struct.rtx_def* %target.addr.0, null
  br i1 %tobool18, label %if.else, label %if.end21

if.else:                                          ; preds = %if.then9
  %call20 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode) #3
  br label %if.end21

if.end21:                                         ; preds = %if.then9, %if.else
  %temp.0 = phi %struct.rtx_def* [ %call20, %if.else ], [ %target.addr.0, %if.then9 ]
  %3 = getelementptr inbounds %struct.rtx_def* %op0.addr.0, i64 0, i32 0
  %bf.load22 = load i32* %3, align 8
  %bf.lshr = lshr i32 %bf.load22, 16
  %bf.clear = and i32 %bf.lshr, 255
  %cmp23 = icmp eq i32 %bf.clear, 0
  %cmp27 = icmp eq i32 %bf.clear, %bf.cast
  %or.cond = or i1 %cmp23, %cmp27
  br i1 %or.cond, label %if.end30, label %if.then28

if.then28:                                        ; preds = %if.end21
  %call29 = tail call %struct.rtx_def* @convert_to_mode(i32 %bf.cast, %struct.rtx_def* %op0.addr.0, i32 %unsignedp) #3
  br label %if.end30

if.end30:                                         ; preds = %if.end21, %if.then28
  %xop0.0 = phi %struct.rtx_def* [ %call29, %if.then28 ], [ %op0.addr.0, %if.end21 ]
  %predicate = getelementptr inbounds %struct.insn_operand_data* %2, i64 1, i32 0
  %4 = load i32 (%struct.rtx_def*, i32)** %predicate, align 8, !tbaa !14
  %call35 = tail call i32 %4(%struct.rtx_def* %xop0.0, i32 %bf.cast) #3
  %tobool36 = icmp eq i32 %call35, 0
  br i1 %tobool36, label %if.then37, label %if.end39

if.then37:                                        ; preds = %if.end30
  %call38 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast, %struct.rtx_def* %xop0.0) #3
  br label %if.end39

if.end39:                                         ; preds = %if.end30, %if.then37
  %xop0.1 = phi %struct.rtx_def* [ %xop0.0, %if.end30 ], [ %call38, %if.then37 ]
  %predicate44 = getelementptr inbounds %struct.insn_operand_data* %2, i64 0, i32 0
  %5 = load i32 (%struct.rtx_def*, i32)** %predicate44, align 8, !tbaa !14
  %call45 = tail call i32 %5(%struct.rtx_def* %temp.0, i32 %mode) #3
  %tobool46 = icmp eq i32 %call45, 0
  br i1 %tobool46, label %if.then47, label %if.end49

if.then47:                                        ; preds = %if.end39
  %call48 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode) #3
  br label %if.end49

if.end49:                                         ; preds = %if.end39, %if.then47
  %temp.1 = phi %struct.rtx_def* [ %temp.0, %if.end39 ], [ %call48, %if.then47 ]
  %genfun = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom14, i32 2
  %6 = load %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun, align 8, !tbaa !16
  %call52 = tail call %struct.rtx_def* (%struct.rtx_def*, ...)* %6(%struct.rtx_def* %temp.1, %struct.rtx_def* %xop0.1) #3
  %tobool53 = icmp eq %struct.rtx_def* %call52, null
  br i1 %tobool53, label %if.else65, label %if.then54

if.then54:                                        ; preds = %if.end49
  %7 = getelementptr inbounds %struct.rtx_def* %call52, i64 0, i32 0
  %bf.load55 = load i32* %7, align 8
  %bf.clear56 = and i32 %bf.load55, 65535
  %cmp57 = icmp eq i32 %bf.clear56, 24
  br i1 %cmp57, label %land.lhs.true58, label %if.end63

land.lhs.true58:                                  ; preds = %if.then54
  %8 = load i32* %code, align 4, !tbaa !5
  %call59 = tail call fastcc i32 @add_equal_note(%struct.rtx_def* %call52, %struct.rtx_def* %temp.1, i32 %8, %struct.rtx_def* %xop0.1, %struct.rtx_def* null)
  %tobool60 = icmp eq i32 %call59, 0
  br i1 %tobool60, label %if.then61, label %if.end63

if.then61:                                        ; preds = %land.lhs.true58
  tail call void @delete_insns_since(%struct.rtx_def* %call) #3
  br label %tailrecurse

if.end63:                                         ; preds = %land.lhs.true58, %if.then54
  %call64 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call52) #3
  br label %return

if.else65:                                        ; preds = %if.end49
  %arrayidx.le539 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom
  %9 = load i32* %arrayidx.le539, align 4, !tbaa !9
  tail call void @delete_insns_since(%struct.rtx_def* %call) #3
  br label %if.end67

if.end67.loopexit:                                ; preds = %if.end6
  %arrayidx.le = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom
  %10 = load i32* %arrayidx.le, align 4, !tbaa !9
  br label %if.end67

if.end67:                                         ; preds = %if.end67.loopexit, %if.else65
  %11 = phi i32 [ %10, %if.end67.loopexit ], [ %9, %if.else65 ]
  %cmp68 = icmp eq i32 %11, 1
  switch i32 %11, label %if.end112 [
    i32 6, label %for.cond.preheader
    i32 2, label %for.cond.preheader
    i32 1, label %for.cond.preheader
  ]

for.cond.preheader:                               ; preds = %if.end67, %if.end67, %if.end67
  %wider_mode.0.in.in531 = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom
  %wider_mode.0.in532 = load i8* %wider_mode.0.in.in531, align 1
  %cmp75534 = icmp eq i8 %wider_mode.0.in532, 0
  br i1 %cmp75534, label %if.end112, label %for.body

for.body:                                         ; preds = %for.cond.preheader, %for.cond.backedge
  %wider_mode.0536.in = phi i8 [ %wider_mode.0.in, %for.cond.backedge ], [ %wider_mode.0.in532, %for.cond.preheader ]
  %wider_mode.0536 = zext i8 %wider_mode.0536.in to i32
  %idxprom77 = zext i8 %wider_mode.0536.in to i64
  %insn_code80 = getelementptr inbounds %struct.optab* %unoptab, i64 0, i32 1, i64 %idxprom77, i32 0
  %12 = load i32* %insn_code80, align 4, !tbaa !10
  %cmp81 = icmp eq i32 %12, 1317
  br i1 %cmp81, label %for.cond.backedge, label %if.then83

for.cond.backedge:                                ; preds = %for.body, %if.else106
  %wider_mode.0.in.in = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom77
  %wider_mode.0.in = load i8* %wider_mode.0.in.in, align 1
  %cmp75 = icmp eq i8 %wider_mode.0.in, 0
  br i1 %cmp75, label %if.end112, label %for.body

if.then83:                                        ; preds = %for.body
  %13 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 32), align 16, !tbaa !1
  %cmp85 = icmp eq %struct.optab* %13, %unoptab
  %14 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 36), align 16
  %cmp88 = icmp eq %struct.optab* %14, %unoptab
  %or.cond495 = or i1 %cmp85, %cmp88
  %cmp68. = and i1 %or.cond495, %cmp68
  %land.ext = zext i1 %cmp68. to i32
  %call92 = tail call fastcc %struct.rtx_def* @widen_operand(%struct.rtx_def* %op0.addr.0, i32 %wider_mode.0536, i32 %mode, i32 %unsignedp, i32 %land.ext)
  %call93 = tail call %struct.rtx_def* @expand_unop(i32 %wider_mode.0536, %struct.optab* %unoptab, %struct.rtx_def* %call92, %struct.rtx_def* null, i32 %unsignedp)
  %tobool94 = icmp eq %struct.rtx_def* %call93, null
  br i1 %tobool94, label %if.else106, label %if.then95

if.then95:                                        ; preds = %if.then83
  br i1 %cmp68, label %if.else104, label %if.then98

if.then98:                                        ; preds = %if.then95
  %cmp99 = icmp eq %struct.rtx_def* %target.addr.0, null
  br i1 %cmp99, label %if.then101, label %if.end103

if.then101:                                       ; preds = %if.then98
  %call102 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode) #3
  br label %if.end103

if.end103:                                        ; preds = %if.then101, %if.then98
  %target.addr.1 = phi %struct.rtx_def* [ %call102, %if.then101 ], [ %target.addr.0, %if.then98 ]
  tail call void @convert_move(%struct.rtx_def* %target.addr.1, %struct.rtx_def* %call93, i32 0) #3
  br label %return

if.else104:                                       ; preds = %if.then95
  %call105 = tail call %struct.rtx_def* @gen_lowpart(i32 %mode, %struct.rtx_def* %call93) #3
  br label %return

if.else106:                                       ; preds = %if.then83
  tail call void @delete_insns_since(%struct.rtx_def* %call) #3
  br label %for.cond.backedge

if.end112:                                        ; preds = %for.cond.backedge, %for.cond.preheader, %if.end67
  %15 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 36), align 16, !tbaa !1
  %cmp113 = icmp eq %struct.optab* %15, %unoptab
  %or.cond313 = and i1 %cmp113, %cmp68
  br i1 %or.cond313, label %land.lhs.true118, label %if.else166

land.lhs.true118:                                 ; preds = %if.end112
  %arrayidx120 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom
  %16 = load i8* %arrayidx120, align 1, !tbaa !9
  %conv121 = zext i8 %16 to i32
  %17 = load i32* @target_flags, align 4, !tbaa !7
  %and = lshr i32 %17, 23
  %18 = and i32 %and, 4
  %19 = add i32 %18, 4
  %cmp123 = icmp ugt i32 %conv121, %19
  br i1 %cmp123, label %land.lhs.true125, label %if.else166

land.lhs.true125:                                 ; preds = %land.lhs.true118
  %20 = load i32* @word_mode, align 4, !tbaa !9
  %idxprom126 = sext i32 %20 to i64
  %insn_code129 = getelementptr inbounds %struct.optab* %unoptab, i64 0, i32 1, i64 %idxprom126, i32 0
  %21 = load i32* %insn_code129, align 4, !tbaa !10
  %cmp130 = icmp eq i32 %21, 1317
  br i1 %cmp130, label %if.else166, label %if.then132

if.then132:                                       ; preds = %land.lhs.true125
  %cmp133 = icmp eq %struct.rtx_def* %target.addr.0, null
  %cmp136 = icmp eq %struct.rtx_def* %target.addr.0, %op0.addr.0
  %or.cond496 = or i1 %cmp133, %cmp136
  br i1 %or.cond496, label %if.then138, label %if.end140

if.then138:                                       ; preds = %if.then132
  %call139 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode) #3
  br label %if.end140

if.end140:                                        ; preds = %if.then132, %if.then138
  %target.addr.2 = phi %struct.rtx_def* [ %call139, %if.then138 ], [ %target.addr.0, %if.then132 ]
  tail call void @start_sequence() #3
  %arrayidx143 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom
  %22 = load i16* %arrayidx143, align 2, !tbaa !17
  %conv144526 = zext i16 %22 to i32
  %23 = load i32* @target_flags, align 4, !tbaa !7
  %and145527 = lshr i32 %23, 20
  %24 = and i32 %and145527, 32
  %25 = add i32 %24, 32
  %div528 = sdiv i32 %conv144526, %25
  %cmp148529 = icmp sgt i32 %div528, 0
  br i1 %cmp148529, label %for.body150, label %for.end160

for.body150:                                      ; preds = %if.end140, %for.inc159
  %i.0530 = phi i32 [ %inc, %for.inc159 ], [ 0, %if.end140 ]
  %call151 = tail call %struct.rtx_def* @operand_subword(%struct.rtx_def* %target.addr.2, i32 %i.0530, i32 1, i32 %mode) #3
  %26 = load i32* @word_mode, align 4, !tbaa !9
  %call152 = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %op0.addr.0, i32 %i.0530, i32 %mode) #3
  %call153 = tail call %struct.rtx_def* @expand_unop(i32 %26, %struct.optab* %unoptab, %struct.rtx_def* %call152, %struct.rtx_def* %call151, i32 %unsignedp)
  %cmp154 = icmp eq %struct.rtx_def* %call151, %call153
  br i1 %cmp154, label %for.inc159, label %if.then156

if.then156:                                       ; preds = %for.body150
  %call157 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call151, %struct.rtx_def* %call153) #3
  br label %for.inc159

for.inc159:                                       ; preds = %for.body150, %if.then156
  %inc = add nsw i32 %i.0530, 1
  %27 = load i32* @target_flags, align 4, !tbaa !7
  %and145 = lshr i32 %27, 20
  %28 = and i32 %and145, 32
  %29 = add i32 %28, 32
  %div = sdiv i32 %conv144526, %29
  %cmp148 = icmp slt i32 %inc, %div
  br i1 %cmp148, label %for.body150, label %for.end160

for.end160:                                       ; preds = %for.inc159, %if.end140
  %call161 = tail call %struct.rtx_def* @get_insns() #3
  tail call void @end_sequence() #3
  %30 = load i32* %code, align 4, !tbaa !5
  %call163 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %op0.addr.0) #3
  %call164 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 %30, i32 %mode, %struct.rtx_def* %call163) #3
  %call165 = tail call %struct.rtx_def* @emit_no_conflict_block(%struct.rtx_def* %call161, %struct.rtx_def* %target.addr.2, %struct.rtx_def* %op0.addr.0, %struct.rtx_def* null, %struct.rtx_def* %call164)
  br label %return

if.else166:                                       ; preds = %land.lhs.true125, %land.lhs.true118, %if.end112
  %31 = load i32* %code, align 4, !tbaa !5
  %cmp168 = icmp eq i32 %31, 77
  %.off493 = add i32 %11, -5
  %32 = icmp ult i32 %.off493, 2
  %or.cond498 = and i1 %cmp168, %32
  br i1 %or.cond498, label %if.then176, label %if.end217

if.then176:                                       ; preds = %if.else166
  %cmp174 = icmp eq i32 %11, 5
  %arrayidx180 = getelementptr inbounds [59 x i8]* @mode_unit_size, i64 0, i64 %idxprom
  %33 = load i8* %arrayidx180, align 1, !tbaa !9
  %conv181 = zext i8 %33 to i32
  %mul = shl nuw nsw i32 %conv181, 3
  %cond184 = select i1 %cmp174, i32 1, i32 2
  %call185 = tail call i32 @mode_for_size(i32 %mul, i32 %cond184, i32 0) #3
  %cmp186 = icmp eq i32 %call185, 51
  br i1 %cmp186, label %if.then188, label %if.end189

if.then188:                                       ; preds = %if.then176
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 2227, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.expand_unop, i64 0, i64 0)) #6
  unreachable

if.end189:                                        ; preds = %if.then176
  %cmp190 = icmp eq %struct.rtx_def* %target.addr.0, null
  br i1 %cmp190, label %if.then192, label %if.end194

if.then192:                                       ; preds = %if.end189
  %call193 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode) #3
  br label %if.end194

if.end194:                                        ; preds = %if.then192, %if.end189
  %target.addr.3 = phi %struct.rtx_def* [ %call193, %if.then192 ], [ %target.addr.0, %if.end189 ]
  tail call void @start_sequence() #3
  %call195 = tail call %struct.rtx_def* @gen_imagpart(i32 %call185, %struct.rtx_def* %target.addr.3) #3
  %call196 = tail call %struct.rtx_def* @gen_imagpart(i32 %call185, %struct.rtx_def* %op0.addr.0) #3
  %call197 = tail call %struct.rtx_def* @expand_unop(i32 %call185, %struct.optab* %unoptab, %struct.rtx_def* %call196, %struct.rtx_def* %call195, i32 %unsignedp)
  %cmp198 = icmp eq %struct.rtx_def* %call195, %call197
  br i1 %cmp198, label %if.end202, label %if.then200

if.then200:                                       ; preds = %if.end194
  %call201 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call195, %struct.rtx_def* %call197) #3
  br label %if.end202

if.end202:                                        ; preds = %if.end194, %if.then200
  %call203 = tail call %struct.rtx_def* @gen_realpart(i32 %call185, %struct.rtx_def* %target.addr.3) #3
  %call204 = tail call %struct.rtx_def* @gen_realpart(i32 %call185, %struct.rtx_def* %op0.addr.0) #3
  %call205 = tail call %struct.rtx_def* @expand_unop(i32 %call185, %struct.optab* %unoptab, %struct.rtx_def* %call204, %struct.rtx_def* %call203, i32 %unsignedp)
  %cmp206 = icmp eq %struct.rtx_def* %call203, %call205
  br i1 %cmp206, label %if.end210, label %if.then208

if.then208:                                       ; preds = %if.end202
  %call209 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call203, %struct.rtx_def* %call205) #3
  br label %if.end210

if.end210:                                        ; preds = %if.end202, %if.then208
  %call211 = tail call %struct.rtx_def* @get_insns() #3
  tail call void @end_sequence() #3
  %34 = load i32* %code, align 4, !tbaa !5
  %call213 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %op0.addr.0) #3
  %call214 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 %34, i32 %mode, %struct.rtx_def* %call213) #3
  %call215 = tail call %struct.rtx_def* @emit_no_conflict_block(%struct.rtx_def* %call211, %struct.rtx_def* %target.addr.3, %struct.rtx_def* %op0.addr.0, %struct.rtx_def* null, %struct.rtx_def* %call214)
  br label %return

if.end217:                                        ; preds = %if.else166
  %libfunc = getelementptr inbounds %struct.optab* %unoptab, i64 0, i32 1, i64 %idxprom, i32 1
  %35 = load %struct.rtx_def** %libfunc, align 8, !tbaa !21
  %tobool221 = icmp eq %struct.rtx_def* %35, null
  br i1 %tobool221, label %if.end233, label %if.then222

if.then222:                                       ; preds = %if.end217
  tail call void @start_sequence() #3
  %36 = load %struct.rtx_def** %libfunc, align 8, !tbaa !21
  %call228 = tail call %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32, i32, i32, ...)* @emit_library_call_value(%struct.rtx_def* %36, %struct.rtx_def* null, i32 1, i32 %mode, i32 1, %struct.rtx_def* %op0.addr.0, i32 %mode) #3
  %call229 = tail call %struct.rtx_def* @get_insns() #3
  tail call void @end_sequence() #3
  %call230 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode) #3
  %37 = load i32* %code, align 4, !tbaa !5
  %call232 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 %37, i32 %mode, %struct.rtx_def* %op0.addr.0) #3
  tail call void @emit_libcall_block(%struct.rtx_def* %call229, %struct.rtx_def* %call230, %struct.rtx_def* %call228, %struct.rtx_def* %call232)
  br label %return

if.end233:                                        ; preds = %if.end217
  switch i32 %11, label %if.end296 [
    i32 6, label %for.cond246.preheader
    i32 2, label %for.cond246.preheader
    i32 1, label %for.cond246.preheader
  ]

for.cond246.preheader:                            ; preds = %if.end233, %if.end233, %if.end233
  %wider_mode.1.in521.in = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom
  %wider_mode.1.in521 = load i8* %wider_mode.1.in521.in, align 1
  %cmp247523 = icmp eq i8 %wider_mode.1.in521, 0
  br i1 %cmp247523, label %if.end296, label %for.body249

for.body249:                                      ; preds = %for.cond246.preheader, %for.cond246.backedge
  %wider_mode.1525.in = phi i8 [ %wider_mode.1.in, %for.cond246.backedge ], [ %wider_mode.1.in521, %for.cond246.preheader ]
  %wider_mode.1525 = zext i8 %wider_mode.1525.in to i32
  %idxprom250 = zext i8 %wider_mode.1525.in to i64
  %insn_code253 = getelementptr inbounds %struct.optab* %unoptab, i64 0, i32 1, i64 %idxprom250, i32 0
  %38 = load i32* %insn_code253, align 4, !tbaa !10
  %cmp254 = icmp eq i32 %38, 1317
  br i1 %cmp254, label %lor.lhs.false256, label %if.then262

lor.lhs.false256:                                 ; preds = %for.body249
  %libfunc260 = getelementptr inbounds %struct.optab* %unoptab, i64 0, i32 1, i64 %idxprom250, i32 1
  %39 = load %struct.rtx_def** %libfunc260, align 8, !tbaa !21
  %tobool261 = icmp eq %struct.rtx_def* %39, null
  br i1 %tobool261, label %for.cond246.backedge, label %if.then262

for.cond246.backedge:                             ; preds = %lor.lhs.false256, %if.else288
  %wider_mode.1.in.in = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom250
  %wider_mode.1.in = load i8* %wider_mode.1.in.in, align 1
  %cmp247 = icmp eq i8 %wider_mode.1.in, 0
  br i1 %cmp247, label %for.cond246.if.end296.loopexit_crit_edge, label %for.body249

if.then262:                                       ; preds = %lor.lhs.false256, %for.body249
  %40 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 32), align 16, !tbaa !1
  %cmp264 = icmp eq %struct.optab* %40, %unoptab
  %41 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 36), align 16
  %cmp267 = icmp eq %struct.optab* %41, %unoptab
  %or.cond499 = or i1 %cmp264, %cmp267
  %cmp68.500 = and i1 %or.cond499, %cmp68
  %land.ext273 = zext i1 %cmp68.500 to i32
  %call274 = tail call fastcc %struct.rtx_def* @widen_operand(%struct.rtx_def* %op0.addr.0, i32 %wider_mode.1525, i32 %mode, i32 %unsignedp, i32 %land.ext273)
  %call275 = tail call %struct.rtx_def* @expand_unop(i32 %wider_mode.1525, %struct.optab* %unoptab, %struct.rtx_def* %call274, %struct.rtx_def* null, i32 %unsignedp)
  %tobool276 = icmp eq %struct.rtx_def* %call275, null
  br i1 %tobool276, label %if.else288, label %if.then277

if.then277:                                       ; preds = %if.then262
  br i1 %cmp68, label %if.else286, label %if.then280

if.then280:                                       ; preds = %if.then277
  %cmp281 = icmp eq %struct.rtx_def* %target.addr.0, null
  br i1 %cmp281, label %if.then283, label %if.end285

if.then283:                                       ; preds = %if.then280
  %call284 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode) #3
  br label %if.end285

if.end285:                                        ; preds = %if.then283, %if.then280
  %target.addr.4 = phi %struct.rtx_def* [ %call284, %if.then283 ], [ %target.addr.0, %if.then280 ]
  tail call void @convert_move(%struct.rtx_def* %target.addr.4, %struct.rtx_def* %call275, i32 0) #3
  br label %return

if.else286:                                       ; preds = %if.then277
  %call287 = tail call %struct.rtx_def* @gen_lowpart(i32 %mode, %struct.rtx_def* %call275) #3
  br label %return

if.else288:                                       ; preds = %if.then262
  tail call void @delete_insns_since(%struct.rtx_def* %call) #3
  br label %for.cond246.backedge

for.cond246.if.end296.loopexit_crit_edge:         ; preds = %for.cond246.backedge
  %.pre.pre = load i32* %code, align 4, !tbaa !5
  br label %if.end296

if.end296:                                        ; preds = %for.cond246.preheader, %for.cond246.if.end296.loopexit_crit_edge, %if.end233
  %42 = phi i32 [ %31, %if.end233 ], [ %.pre.pre, %for.cond246.if.end296.loopexit_crit_edge ], [ %31, %for.cond246.preheader ]
  %cmp298 = icmp eq i32 %42, 77
  br i1 %cmp298, label %if.then300, label %if.end311

if.then300:                                       ; preds = %if.end296
  %43 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 33), align 8, !tbaa !1
  %cmp302 = icmp eq %struct.optab* %43, %unoptab
  %44 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 3), align 8, !tbaa !1
  %45 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 2), align 16, !tbaa !1
  %cond304 = select i1 %cmp302, %struct.optab* %44, %struct.optab* %45
  %arrayidx306 = getelementptr inbounds [3 x [59 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0, i64 %idxprom
  %46 = load %struct.rtx_def** %arrayidx306, align 8, !tbaa !1
  %call307 = tail call %struct.rtx_def* @expand_binop(i32 %mode, %struct.optab* %cond304, %struct.rtx_def* %46, %struct.rtx_def* %op0.addr.0, %struct.rtx_def* %target.addr.0, i32 %unsignedp, i32 3)
  %tobool308 = icmp eq %struct.rtx_def* %call307, null
  br i1 %tobool308, label %if.end311, label %return

if.end311:                                        ; preds = %if.then300, %if.end296
  br label %return

return:                                           ; preds = %if.then300, %if.end311, %if.else286, %if.end285, %if.then222, %if.end210, %for.end160, %if.else104, %if.end103, %if.end63
  %retval.0 = phi %struct.rtx_def* [ %temp.1, %if.end63 ], [ %target.addr.1, %if.end103 ], [ %call105, %if.else104 ], [ %target.addr.2, %for.end160 ], [ %target.addr.3, %if.end210 ], [ %call230, %if.then222 ], [ %target.addr.4, %if.end285 ], [ %call287, %if.else286 ], [ null, %if.end311 ], [ %call307, %if.then300 ]
  ret %struct.rtx_def* %retval.0
}

declare %struct.rtx_def* @expand_divmod(i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32) #2

declare %struct.rtx_def* @emit_library_call_value(%struct.rtx_def*, %struct.rtx_def*, i32, i32, i32, ...) #2

; Function Attrs: nounwind uwtable
define void @emit_libcall_block(%struct.rtx_def* %insns, %struct.rtx_def* %target, %struct.rtx_def* %result, %struct.rtx_def* %equiv) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %target, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %1 = and i32 %bf.load, 134283263
  %2 = icmp eq i32 %1, 61
  br i1 %2, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %bf.lshr4 = lshr i32 %bf.load, 16
  %bf.clear5 = and i32 %bf.lshr4, 255
  %call = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear5) #3
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %target.addr.0 = phi %struct.rtx_def* [ %call, %if.then ], [ %target, %entry ]
  %3 = load i32* @flag_non_call_exceptions, align 4, !tbaa !7
  %tobool6 = icmp eq i32 %3, 0
  br i1 %tobool6, label %for.cond27.preheader, label %land.lhs.true

for.cond27.preheader:                             ; preds = %land.lhs.true, %if.end
  %tobool28319 = icmp eq %struct.rtx_def* %insns, null
  br i1 %tobool28319, label %for.end180.thread, label %for.body29

land.lhs.true:                                    ; preds = %if.end
  %call7 = tail call i32 @may_trap_p(%struct.rtx_def* %equiv) #3
  %tobool8 = icmp eq i32 %call7, 0
  br i1 %tobool8, label %for.cond27.preheader, label %for.cond.preheader

for.cond.preheader:                               ; preds = %land.lhs.true
  %tobool10321 = icmp eq %struct.rtx_def* %insns, null
  br i1 %tobool10321, label %for.end180.thread, label %for.body

for.body:                                         ; preds = %for.cond.preheader, %for.inc
  %insn.0322 = phi %struct.rtx_def* [ %7, %for.inc ], [ %insns, %for.cond.preheader ]
  %4 = getelementptr inbounds %struct.rtx_def* %insn.0322, i64 0, i32 0
  %bf.load11 = load i32* %4, align 8
  %bf.clear12 = and i32 %bf.load11, 65535
  %cmp13 = icmp eq i32 %bf.clear12, 34
  br i1 %cmp13, label %if.then14, label %for.inc

if.then14:                                        ; preds = %for.body
  %call15 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn.0322, i32 23, %struct.rtx_def* null) #3
  %cmp16 = icmp eq %struct.rtx_def* %call15, null
  br i1 %cmp16, label %for.inc, label %land.lhs.true17

land.lhs.true17:                                  ; preds = %if.then14
  %arrayidx = getelementptr inbounds %struct.rtx_def* %call15, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %5 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %rtwint = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 1, i64 0, i32 0
  %6 = load i64* %rtwint, align 8, !tbaa !19
  %cmp20 = icmp slt i64 %6, 1
  br i1 %cmp20, label %if.then21, label %for.inc

if.then21:                                        ; preds = %land.lhs.true17
  tail call void @remove_note(%struct.rtx_def* %insn.0322, %struct.rtx_def* %call15) #3
  br label %for.inc

for.inc:                                          ; preds = %if.then14, %for.body, %if.then21, %land.lhs.true17
  %arrayidx25 = getelementptr inbounds %struct.rtx_def* %insn.0322, i64 0, i32 1, i64 2
  %rtx26 = bitcast %union.rtunion_def* %arrayidx25 to %struct.rtx_def**
  %7 = load %struct.rtx_def** %rtx26, align 8, !tbaa !1
  %tobool10 = icmp eq %struct.rtx_def* %7, null
  br i1 %tobool10, label %for.cond59.preheader, label %for.body

for.cond59.preheader:                             ; preds = %for.inc, %for.inc53
  %tobool60315 = icmp eq %struct.rtx_def* %insns, null
  br i1 %tobool60315, label %for.end180.thread, label %for.body61

for.body29:                                       ; preds = %for.cond27.preheader, %for.inc53
  %insn.1320 = phi %struct.rtx_def* [ %12, %for.inc53 ], [ %insns, %for.cond27.preheader ]
  %8 = getelementptr inbounds %struct.rtx_def* %insn.1320, i64 0, i32 0
  %bf.load30 = load i32* %8, align 8
  %bf.clear31 = and i32 %bf.load30, 65535
  %cmp32 = icmp eq i32 %bf.clear31, 34
  br i1 %cmp32, label %if.then33, label %for.inc53

if.then33:                                        ; preds = %for.body29
  %call35 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn.1320, i32 23, %struct.rtx_def* null) #3
  %cmp36 = icmp eq %struct.rtx_def* %call35, null
  %call38 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 -1) #3
  br i1 %cmp36, label %if.else42, label %if.then37

if.then37:                                        ; preds = %if.then33
  %9 = getelementptr inbounds %struct.rtx_def* %call35, i64 0, i32 1, i64 0, i32 0
  %call38.c = ptrtoint %struct.rtx_def* %call38 to i64
  store i64 %call38.c, i64* %9, align 8, !tbaa !1
  br label %for.inc53

if.else42:                                        ; preds = %if.then33
  %arrayidx45 = getelementptr inbounds %struct.rtx_def* %insn.1320, i64 0, i32 1, i64 6
  %rtx46 = bitcast %union.rtunion_def* %arrayidx45 to %struct.rtx_def**
  %10 = load %struct.rtx_def** %rtx46, align 8, !tbaa !1
  %call47 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 23, %struct.rtx_def* %call38, %struct.rtx_def* %10) #3
  %11 = getelementptr inbounds %union.rtunion_def* %arrayidx45, i64 0, i32 0
  %call47.c = ptrtoint %struct.rtx_def* %call47 to i64
  store i64 %call47.c, i64* %11, align 8, !tbaa !1
  br label %for.inc53

for.inc53:                                        ; preds = %for.body29, %if.else42, %if.then37
  %arrayidx55 = getelementptr inbounds %struct.rtx_def* %insn.1320, i64 0, i32 1, i64 2
  %rtx56 = bitcast %union.rtunion_def* %arrayidx55 to %struct.rtx_def**
  %12 = load %struct.rtx_def** %rtx56, align 8, !tbaa !1
  %tobool28 = icmp eq %struct.rtx_def* %12, null
  br i1 %tobool28, label %for.cond59.preheader, label %for.body29

for.body61:                                       ; preds = %for.cond59.preheader, %for.cond59.backedge
  %insns.addr.0317 = phi %struct.rtx_def* [ %insns.addr.0.be, %for.cond59.backedge ], [ %insns, %for.cond59.preheader ]
  %insn.2316 = phi %struct.rtx_def* [ %17, %for.cond59.backedge ], [ %insns, %for.cond59.preheader ]
  %13 = getelementptr inbounds %struct.rtx_def* %insn.2316, i64 0, i32 0
  %bf.load62 = load i32* %13, align 8
  %bf.clear63 = and i32 %bf.load62, 65535
  %idxprom309 = zext i32 %bf.clear63 to i64
  %arrayidx64 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom309
  %14 = load i8* %arrayidx64, align 1, !tbaa !9
  %cmp65 = icmp eq i8 %14, 105
  br i1 %cmp65, label %cond.true, label %cond.end83

cond.true:                                        ; preds = %for.body61
  %arrayidx68 = getelementptr inbounds %struct.rtx_def* %insn.2316, i64 0, i32 1, i64 3
  %rtx69 = bitcast %union.rtunion_def* %arrayidx68 to %struct.rtx_def**
  %15 = load %struct.rtx_def** %rtx69, align 8, !tbaa !1
  %16 = getelementptr inbounds %struct.rtx_def* %15, i64 0, i32 0
  %bf.load70 = load i32* %16, align 8
  %bf.clear71 = and i32 %bf.load70, 65535
  %cmp72 = icmp eq i32 %bf.clear71, 47
  br i1 %cmp72, label %cond.end83, label %cond.false

cond.false:                                       ; preds = %cond.true
  %call81 = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* %insn.2316, %struct.rtx_def* %15) #3
  br label %cond.end83

cond.end83:                                       ; preds = %cond.true, %for.body61, %cond.false
  %cond84 = phi %struct.rtx_def* [ %call81, %cond.false ], [ null, %for.body61 ], [ %15, %cond.true ]
  %call86 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn.2316, i32 7, %struct.rtx_def* null) #3
  %cmp87 = icmp eq %struct.rtx_def* %call86, null
  br i1 %cmp87, label %if.end90, label %if.then89

if.then89:                                        ; preds = %cond.end83
  tail call void @remove_note(%struct.rtx_def* %insn.2316, %struct.rtx_def* %call86) #3
  br label %if.end90

if.end90:                                         ; preds = %cond.end83, %if.then89
  %call91 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn.2316, i32 6, %struct.rtx_def* null) #3
  %cmp92 = icmp eq %struct.rtx_def* %call91, null
  br i1 %cmp92, label %if.end95, label %if.then94

if.then94:                                        ; preds = %if.end90
  tail call void @remove_note(%struct.rtx_def* %insn.2316, %struct.rtx_def* %call91) #3
  br label %if.end95

if.end95:                                         ; preds = %if.end90, %if.then94
  %arrayidx97 = getelementptr inbounds %struct.rtx_def* %insn.2316, i64 0, i32 1, i64 2
  %rtx98 = bitcast %union.rtunion_def* %arrayidx97 to %struct.rtx_def**
  %17 = load %struct.rtx_def** %rtx98, align 8, !tbaa !1
  %cmp99 = icmp eq %struct.rtx_def* %cond84, null
  br i1 %cmp99, label %for.cond59.backedge, label %land.lhs.true101

land.lhs.true101:                                 ; preds = %if.end95
  %fld102 = getelementptr inbounds %struct.rtx_def* %cond84, i64 0, i32 1
  %rtx104 = bitcast [1 x %union.rtunion_def]* %fld102 to %struct.rtx_def**
  %18 = load %struct.rtx_def** %rtx104, align 8, !tbaa !1
  %19 = getelementptr inbounds %struct.rtx_def* %18, i64 0, i32 0
  %bf.load105 = load i32* %19, align 8
  %bf.clear106 = and i32 %bf.load105, 65535
  %cmp107 = icmp eq i32 %bf.clear106, 61
  br i1 %cmp107, label %land.lhs.true109, label %for.cond59.backedge

land.lhs.true109:                                 ; preds = %land.lhs.true101
  %arrayidx114 = getelementptr inbounds %struct.rtx_def* %18, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx114 to i32*
  %20 = load i32* %rtuint, align 4, !tbaa !7
  %cmp115 = icmp ugt i32 %20, 52
  br i1 %cmp115, label %land.lhs.true117, label %for.cond59.backedge

land.lhs.true117:                                 ; preds = %land.lhs.true109
  %cmp118 = icmp eq %struct.rtx_def* %insn.2316, %insns.addr.0317
  br i1 %cmp118, label %if.then155, label %lor.lhs.false120

lor.lhs.false120:                                 ; preds = %land.lhs.true117
  %21 = getelementptr inbounds %struct.rtx_def* %insns.addr.0317, i64 0, i32 0
  %bf.load121 = load i32* %21, align 8
  %bf.clear122 = and i32 %bf.load121, 65535
  %idxprom123310 = zext i32 %bf.clear122 to i64
  %arrayidx124 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom123310
  %22 = load i8* %arrayidx124, align 1, !tbaa !9
  %cmp126 = icmp eq i8 %22, 105
  br i1 %cmp126, label %lor.lhs.false128, label %land.lhs.true137

lor.lhs.false128:                                 ; preds = %lor.lhs.false120
  %arrayidx133 = getelementptr inbounds %struct.rtx_def* %insns.addr.0317, i64 0, i32 1, i64 3
  %rtx134 = bitcast %union.rtunion_def* %arrayidx133 to %struct.rtx_def**
  %23 = load %struct.rtx_def** %rtx134, align 8, !tbaa !1
  %call135 = tail call i32 @reg_mentioned_p(%struct.rtx_def* %18, %struct.rtx_def* %23) #3
  %tobool136 = icmp eq i32 %call135, 0
  br i1 %tobool136, label %lor.lhs.false128.land.lhs.true137_crit_edge, label %for.cond59.backedge

lor.lhs.false128.land.lhs.true137_crit_edge:      ; preds = %lor.lhs.false128
  %.pre = load %struct.rtx_def** %rtx104, align 8, !tbaa !1
  br label %land.lhs.true137

for.cond59.backedge:                              ; preds = %lor.lhs.false128, %land.lhs.true149, %land.lhs.true143, %land.lhs.true137, %if.end95, %land.lhs.true101, %land.lhs.true109, %if.end177
  %insns.addr.0.be = phi %struct.rtx_def* [ %insns.addr.0317, %lor.lhs.false128 ], [ %insns.addr.0317, %land.lhs.true149 ], [ %insns.addr.0317, %land.lhs.true143 ], [ %insns.addr.0317, %land.lhs.true137 ], [ %insns.addr.0317, %if.end95 ], [ %insns.addr.0317, %land.lhs.true101 ], [ %insns.addr.0317, %land.lhs.true109 ], [ %insns.addr.1, %if.end177 ]
  %tobool60 = icmp eq %struct.rtx_def* %17, null
  br i1 %tobool60, label %for.end180, label %for.body61

land.lhs.true137:                                 ; preds = %lor.lhs.false128.land.lhs.true137_crit_edge, %lor.lhs.false120
  %24 = phi %struct.rtx_def* [ %.pre, %lor.lhs.false128.land.lhs.true137_crit_edge ], [ %18, %lor.lhs.false120 ]
  %call141 = tail call i32 @reg_used_between_p(%struct.rtx_def* %24, %struct.rtx_def* %insns.addr.0317, %struct.rtx_def* %insn.2316) #3
  %tobool142 = icmp eq i32 %call141, 0
  br i1 %tobool142, label %land.lhs.true143, label %for.cond59.backedge

land.lhs.true143:                                 ; preds = %land.lhs.true137
  %arrayidx145 = getelementptr inbounds %struct.rtx_def* %cond84, i64 0, i32 1, i64 1
  %rtx146 = bitcast %union.rtunion_def* %arrayidx145 to %struct.rtx_def**
  %25 = load %struct.rtx_def** %rtx146, align 8, !tbaa !1
  %call147 = tail call i32 @modified_in_p(%struct.rtx_def* %25, %struct.rtx_def* %insns.addr.0317) #3
  %tobool148 = icmp eq i32 %call147, 0
  br i1 %tobool148, label %land.lhs.true149, label %for.cond59.backedge

land.lhs.true149:                                 ; preds = %land.lhs.true143
  %26 = load %struct.rtx_def** %rtx146, align 8, !tbaa !1
  %call153 = tail call i32 @modified_between_p(%struct.rtx_def* %26, %struct.rtx_def* %insns.addr.0317, %struct.rtx_def* %insn.2316) #3
  %tobool154 = icmp eq i32 %call153, 0
  br i1 %tobool154, label %if.then155, label %for.cond59.backedge

if.then155:                                       ; preds = %land.lhs.true149, %land.lhs.true117
  %arrayidx157 = getelementptr inbounds %struct.rtx_def* %insn.2316, i64 0, i32 1, i64 1
  %rtx158 = bitcast %union.rtunion_def* %arrayidx157 to %struct.rtx_def**
  %27 = load %struct.rtx_def** %rtx158, align 8, !tbaa !1
  %tobool159 = icmp eq %struct.rtx_def* %27, null
  br i1 %tobool159, label %if.end168, label %if.then160

if.then160:                                       ; preds = %if.then155
  %28 = getelementptr inbounds %struct.rtx_def* %27, i64 0, i32 1, i64 2, i32 0
  %.c311 = ptrtoint %struct.rtx_def* %17 to i64
  store i64 %.c311, i64* %28, align 8, !tbaa !1
  br label %if.end168

if.end168:                                        ; preds = %if.then155, %if.then160
  %insns.addr.1 = phi %struct.rtx_def* [ %insns.addr.0317, %if.then160 ], [ %17, %if.then155 ]
  %tobool169 = icmp eq %struct.rtx_def* %17, null
  br i1 %tobool169, label %if.end177, label %if.then170

if.then170:                                       ; preds = %if.end168
  %29 = load %struct.rtx_def** %rtx158, align 8, !tbaa !1
  %30 = getelementptr inbounds %struct.rtx_def* %17, i64 0, i32 1, i64 1, i32 0
  %.c = ptrtoint %struct.rtx_def* %29 to i64
  store i64 %.c, i64* %30, align 8, !tbaa !1
  br label %if.end177

if.end177:                                        ; preds = %if.end168, %if.then170
  tail call void @add_insn(%struct.rtx_def* %insn.2316) #3
  br label %for.cond59.backedge

for.end180.thread:                                ; preds = %for.cond59.preheader, %for.cond.preheader, %for.cond27.preheader
  %call181324 = tail call %struct.rtx_def* @get_last_insn() #3
  br label %for.end189

for.end180:                                       ; preds = %for.cond59.backedge
  %call181 = tail call %struct.rtx_def* @get_last_insn() #3
  %tobool183313 = icmp eq %struct.rtx_def* %insns.addr.0.be, null
  br i1 %tobool183313, label %for.end189, label %for.body184

for.body184:                                      ; preds = %for.end180, %for.body184
  %insn.3314 = phi %struct.rtx_def* [ %31, %for.body184 ], [ %insns.addr.0.be, %for.end180 ]
  %arrayidx186 = getelementptr inbounds %struct.rtx_def* %insn.3314, i64 0, i32 1, i64 2
  %rtx187 = bitcast %union.rtunion_def* %arrayidx186 to %struct.rtx_def**
  %31 = load %struct.rtx_def** %rtx187, align 8, !tbaa !1
  tail call void @add_insn(%struct.rtx_def* %insn.3314) #3
  %tobool183 = icmp eq %struct.rtx_def* %31, null
  br i1 %tobool183, label %for.end189, label %for.body184

for.end189:                                       ; preds = %for.body184, %for.end180.thread, %for.end180
  %call181326 = phi %struct.rtx_def* [ %call181324, %for.end180.thread ], [ %call181, %for.end180 ], [ %call181, %for.body184 ]
  %call190 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %target.addr.0, %struct.rtx_def* %result) #3
  %32 = getelementptr inbounds %struct.rtx_def* %target.addr.0, i64 0, i32 0
  %bf.load191 = load i32* %32, align 8
  %bf.lshr192 = lshr i32 %bf.load191, 16
  %bf.clear193 = and i32 %bf.lshr192, 255
  %idxprom194308 = zext i32 %bf.clear193 to i64
  %33 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 30), align 16, !tbaa !1
  %insn_code = getelementptr inbounds %struct.optab* %33, i64 0, i32 1, i64 %idxprom194308, i32 0
  %34 = load i32* %insn_code, align 4, !tbaa !10
  %cmp196 = icmp eq i32 %34, 1317
  br i1 %cmp196, label %if.else201, label %if.then198

if.then198:                                       ; preds = %for.end189
  %call199 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %equiv) #3
  %call200 = tail call %struct.rtx_def* @set_unique_reg_note(%struct.rtx_def* %call190, i32 4, %struct.rtx_def* %call199) #3
  br label %if.end203

if.else201:                                       ; preds = %for.end189
  %call202 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %call190, i32 4, %struct.rtx_def* null) #3
  tail call void @remove_note(%struct.rtx_def* %call190, %struct.rtx_def* %call202) #3
  br label %if.end203

if.end203:                                        ; preds = %if.else201, %if.then198
  %cmp204 = icmp eq %struct.rtx_def* %target.addr.0, %target
  br i1 %cmp204, label %if.end208, label %if.then206

if.then206:                                       ; preds = %if.end203
  %call207 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %target, %struct.rtx_def* %target.addr.0) #3
  br label %if.end208

if.end208:                                        ; preds = %if.end203, %if.then206
  %cmp209 = icmp eq %struct.rtx_def* %call181326, null
  br i1 %cmp209, label %if.then211, label %if.else213

if.then211:                                       ; preds = %if.end208
  %call212 = tail call %struct.rtx_def* @get_insns() #3
  br label %if.end217

if.else213:                                       ; preds = %if.end208
  %arrayidx215 = getelementptr inbounds %struct.rtx_def* %call181326, i64 0, i32 1, i64 2
  %rtx216 = bitcast %union.rtunion_def* %arrayidx215 to %struct.rtx_def**
  %35 = load %struct.rtx_def** %rtx216, align 8, !tbaa !1
  br label %if.end217

if.end217:                                        ; preds = %if.else213, %if.then211
  %first.0 = phi %struct.rtx_def* [ %call212, %if.then211 ], [ %35, %if.else213 ]
  %36 = load i32* @flag_non_call_exceptions, align 4, !tbaa !7
  %tobool218 = icmp eq i32 %36, 0
  br i1 %tobool218, label %if.then222, label %lor.lhs.false219

lor.lhs.false219:                                 ; preds = %if.end217
  %call220 = tail call i32 @may_trap_p(%struct.rtx_def* %equiv) #3
  %tobool221 = icmp eq i32 %call220, 0
  br i1 %tobool221, label %if.then222, label %if.end237

if.then222:                                       ; preds = %lor.lhs.false219, %if.end217
  %arrayidx224 = getelementptr inbounds %struct.rtx_def* %first.0, i64 0, i32 1, i64 6
  %rtx225 = bitcast %union.rtunion_def* %arrayidx224 to %struct.rtx_def**
  %37 = load %struct.rtx_def** %rtx225, align 8, !tbaa !1
  %call226 = tail call %struct.rtx_def* @gen_rtx_fmt_ue(i32 4, i32 7, %struct.rtx_def* %call190, %struct.rtx_def* %37) #3
  %38 = getelementptr inbounds %union.rtunion_def* %arrayidx224, i64 0, i32 0
  %call226.c = ptrtoint %struct.rtx_def* %call226 to i64
  store i64 %call226.c, i64* %38, align 8, !tbaa !1
  %arrayidx231 = getelementptr inbounds %struct.rtx_def* %call190, i64 0, i32 1, i64 6
  %rtx232 = bitcast %union.rtunion_def* %arrayidx231 to %struct.rtx_def**
  %39 = load %struct.rtx_def** %rtx232, align 8, !tbaa !1
  %call233 = tail call %struct.rtx_def* @gen_rtx_fmt_ue(i32 4, i32 6, %struct.rtx_def* %first.0, %struct.rtx_def* %39) #3
  %40 = getelementptr inbounds %union.rtunion_def* %arrayidx231, i64 0, i32 0
  %call233.c = ptrtoint %struct.rtx_def* %call233 to i64
  store i64 %call233.c, i64* %40, align 8, !tbaa !1
  br label %if.end237

if.end237:                                        ; preds = %lor.lhs.false219, %if.then222
  ret void
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @sign_expand_binop(i32 %mode, %struct.optab* readonly %uoptab, %struct.optab* readonly %soptab, %struct.rtx_def* %op0, %struct.rtx_def* %op1, %struct.rtx_def* %target, i32 %unsignedp, i32 %methods) #0 {
entry:
  %wide_soptab = alloca %struct.optab, align 8
  %tobool = icmp ne i32 %unsignedp, 0
  %cond = select i1 %tobool, %struct.optab* %uoptab, %struct.optab* %soptab
  %0 = bitcast %struct.optab* %wide_soptab to i8*
  call void @llvm.lifetime.start(i64 952, i8* %0) #3
  %call = call %struct.rtx_def* @expand_binop(i32 %mode, %struct.optab* %cond, %struct.rtx_def* %op0, %struct.rtx_def* %op1, %struct.rtx_def* %target, i32 %unsignedp, i32 0)
  %tobool1 = icmp ne %struct.rtx_def* %call, null
  %cmp = icmp eq i32 %methods, 0
  %or.cond = or i1 %tobool1, %cmp
  br i1 %or.cond, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %1 = bitcast %struct.optab* %soptab to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %1, i64 952, i32 8, i1 false), !tbaa.struct !24
  %idxprom = sext i32 %mode to i64
  %insn_code = getelementptr inbounds %struct.optab* %wide_soptab, i64 0, i32 1, i64 %idxprom, i32 0
  store i32 1317, i32* %insn_code, align 8, !tbaa !10
  %libfunc = getelementptr inbounds %struct.optab* %wide_soptab, i64 0, i32 1, i64 %idxprom, i32 1
  store %struct.rtx_def* null, %struct.rtx_def** %libfunc, align 8, !tbaa !21
  %call5 = call %struct.rtx_def* @expand_binop(i32 %mode, %struct.optab* %wide_soptab, %struct.rtx_def* %op0, %struct.rtx_def* %op1, %struct.rtx_def* %target, i32 %unsignedp, i32 2)
  %cmp6 = icmp eq %struct.rtx_def* %call5, null
  %or.cond30 = and i1 %cmp6, %tobool
  br i1 %or.cond30, label %if.then8, label %if.end10

if.then8:                                         ; preds = %if.end
  %call9 = call %struct.rtx_def* @expand_binop(i32 %mode, %struct.optab* %uoptab, %struct.rtx_def* %op0, %struct.rtx_def* %op1, %struct.rtx_def* %target, i32 %unsignedp, i32 2)
  br label %if.end10

if.end10:                                         ; preds = %if.then8, %if.end
  %temp.0 = phi %struct.rtx_def* [ %call9, %if.then8 ], [ %call5, %if.end ]
  %tobool11 = icmp ne %struct.rtx_def* %temp.0, null
  %cmp13 = icmp eq i32 %methods, 2
  %or.cond31 = or i1 %tobool11, %cmp13
  br i1 %or.cond31, label %cleanup, label %if.end15

if.end15:                                         ; preds = %if.end10
  %call16 = call %struct.rtx_def* @expand_binop(i32 %mode, %struct.optab* %cond, %struct.rtx_def* %op0, %struct.rtx_def* %op1, %struct.rtx_def* %target, i32 %unsignedp, i32 1)
  %tobool17 = icmp ne %struct.rtx_def* %call16, null
  %cmp19 = icmp eq i32 %methods, 1
  %or.cond32 = or i1 %tobool17, %cmp19
  br i1 %or.cond32, label %cleanup, label %if.end21

if.end21:                                         ; preds = %if.end15
  %call22 = call %struct.rtx_def* @expand_binop(i32 %mode, %struct.optab* %wide_soptab, %struct.rtx_def* %op0, %struct.rtx_def* %op1, %struct.rtx_def* %target, i32 %unsignedp, i32 %methods)
  %cmp23.not = icmp ne %struct.rtx_def* %call22, null
  %tobool.not = xor i1 %tobool, true
  %brmerge = or i1 %cmp23.not, %tobool.not
  br i1 %brmerge, label %cleanup, label %if.then27

if.then27:                                        ; preds = %if.end21
  %call28 = call %struct.rtx_def* @expand_binop(i32 %mode, %struct.optab* %uoptab, %struct.rtx_def* %op0, %struct.rtx_def* %op1, %struct.rtx_def* %target, i32 %unsignedp, i32 %methods)
  br label %cleanup

cleanup:                                          ; preds = %if.end21, %if.end15, %if.end10, %entry, %if.then27
  %retval.0 = phi %struct.rtx_def* [ %call28, %if.then27 ], [ %call, %entry ], [ %temp.0, %if.end10 ], [ %call16, %if.end15 ], [ %call22, %if.end21 ]
  call void @llvm.lifetime.end(i64 952, i8* %0) #3
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #3

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #3

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #3

; Function Attrs: nounwind uwtable
define i32 @expand_twoval_binop(%struct.optab* nocapture readonly %binoptab, %struct.rtx_def* %op0, %struct.rtx_def* %op1, %struct.rtx_def* %targ0, %struct.rtx_def* %targ1, i32 %unsignedp) #0 {
entry:
  %tobool = icmp ne %struct.rtx_def* %targ0, null
  %cond = select i1 %tobool, %struct.rtx_def* %targ0, %struct.rtx_def* %targ1
  %0 = getelementptr inbounds %struct.rtx_def* %cond, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %call = tail call %struct.rtx_def* @get_last_insn() #3
  %idxprom310 = zext i32 %bf.clear to i64
  %arrayidx = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom310
  %1 = load i32* %arrayidx, align 4, !tbaa !9
  %call1 = tail call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %op0, i32 0) #3
  %call2 = tail call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %op1, i32 0) #3
  %2 = load i32* @flag_force_mem, align 4, !tbaa !7
  %tobool3 = icmp eq i32 %2, 0
  br i1 %tobool3, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %call4 = tail call %struct.rtx_def* @force_not_mem(%struct.rtx_def* %call1) #3
  %call5 = tail call %struct.rtx_def* @force_not_mem(%struct.rtx_def* %call2) #3
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %op1.addr.0 = phi %struct.rtx_def* [ %call5, %if.then ], [ %call2, %entry ]
  %op0.addr.0 = phi %struct.rtx_def* [ %call4, %if.then ], [ %call1, %entry ]
  %3 = getelementptr inbounds %struct.rtx_def* %op0.addr.0, i64 0, i32 0
  %bf.load6 = load i32* %3, align 8
  %bf.clear7 = and i32 %bf.load6, 65535
  switch i32 %bf.clear7, label %if.end42 [
    i32 67, label %land.lhs.true
    i32 68, label %land.lhs.true
    i32 54, label %land.lhs.true
    i32 55, label %land.lhs.true
    i32 58, label %land.lhs.true
    i32 134, label %land.lhs.true
    i32 56, label %land.lhs.true
    i32 140, label %land.lhs.true
  ]

land.lhs.true:                                    ; preds = %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end
  %call35 = tail call i32 @preserve_subexpressions_p() #3
  %tobool36 = icmp eq i32 %call35, 0
  br i1 %tobool36, label %if.end42, label %land.lhs.true37

land.lhs.true37:                                  ; preds = %land.lhs.true
  %code = getelementptr inbounds %struct.optab* %binoptab, i64 0, i32 0
  %4 = load i32* %code, align 4, !tbaa !5
  %call38 = tail call i32 @rtx_cost(%struct.rtx_def* %op0.addr.0, i32 %4) #3
  %cmp39 = icmp sgt i32 %call38, 4
  br i1 %cmp39, label %if.then40, label %if.end42

if.then40:                                        ; preds = %land.lhs.true37
  %call41 = tail call %struct.rtx_def* @force_reg(i32 %bf.clear, %struct.rtx_def* %op0.addr.0) #3
  br label %if.end42

if.end42:                                         ; preds = %if.end, %land.lhs.true, %if.then40, %land.lhs.true37
  %op0.addr.1 = phi %struct.rtx_def* [ %call41, %if.then40 ], [ %op0.addr.0, %land.lhs.true37 ], [ %op0.addr.0, %land.lhs.true ], [ %op0.addr.0, %if.end ]
  %5 = getelementptr inbounds %struct.rtx_def* %op1.addr.0, i64 0, i32 0
  %bf.load43 = load i32* %5, align 8
  %bf.clear44 = and i32 %bf.load43, 65535
  switch i32 %bf.clear44, label %if.end83 [
    i32 67, label %land.lhs.true74
    i32 68, label %land.lhs.true74
    i32 54, label %land.lhs.true74
    i32 55, label %land.lhs.true74
    i32 58, label %land.lhs.true74
    i32 134, label %land.lhs.true74
    i32 56, label %land.lhs.true74
    i32 140, label %land.lhs.true74
  ]

land.lhs.true74:                                  ; preds = %if.end42, %if.end42, %if.end42, %if.end42, %if.end42, %if.end42, %if.end42, %if.end42
  %call75 = tail call i32 @preserve_subexpressions_p() #3
  %tobool76 = icmp eq i32 %call75, 0
  br i1 %tobool76, label %if.end83, label %land.lhs.true77

land.lhs.true77:                                  ; preds = %land.lhs.true74
  %code78 = getelementptr inbounds %struct.optab* %binoptab, i64 0, i32 0
  %6 = load i32* %code78, align 4, !tbaa !5
  %call79 = tail call i32 @rtx_cost(%struct.rtx_def* %op1.addr.0, i32 %6) #3
  %cmp80 = icmp sgt i32 %call79, 4
  br i1 %cmp80, label %if.then81, label %if.end83

if.then81:                                        ; preds = %land.lhs.true77
  %call82 = tail call %struct.rtx_def* @force_reg(i32 %bf.clear, %struct.rtx_def* %op1.addr.0) #3
  br label %if.end83

if.end83:                                         ; preds = %if.end42, %land.lhs.true74, %if.then81, %land.lhs.true77
  %op1.addr.1 = phi %struct.rtx_def* [ %call82, %if.then81 ], [ %op1.addr.0, %land.lhs.true77 ], [ %op1.addr.0, %land.lhs.true74 ], [ %op1.addr.0, %if.end42 ]
  br i1 %tobool, label %if.then85, label %if.else

if.then85:                                        ; preds = %if.end83
  %call86 = tail call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %targ0, i32 1) #3
  br label %if.end88

if.else:                                          ; preds = %if.end83
  %call87 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear) #3
  br label %if.end88

if.end88:                                         ; preds = %if.else, %if.then85
  %targ0.addr.0 = phi %struct.rtx_def* [ %call86, %if.then85 ], [ %call87, %if.else ]
  %tobool89 = icmp eq %struct.rtx_def* %targ1, null
  br i1 %tobool89, label %if.else92, label %if.then90

if.then90:                                        ; preds = %if.end88
  %call91 = tail call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %targ1, i32 1) #3
  br label %if.end94

if.else92:                                        ; preds = %if.end88
  %call93 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear) #3
  br label %if.end94

if.end94:                                         ; preds = %if.else92, %if.then90
  %targ1.addr.0 = phi %struct.rtx_def* [ %call91, %if.then90 ], [ %call93, %if.else92 ]
  %call95 = tail call %struct.rtx_def* @get_last_insn() #3
  %insn_code = getelementptr inbounds %struct.optab* %binoptab, i64 0, i32 1, i64 %idxprom310, i32 0
  %7 = load i32* %insn_code, align 4, !tbaa !10
  %cmp98 = icmp eq i32 %7, 1317
  br i1 %cmp98, label %if.end184, label %if.then99

if.then99:                                        ; preds = %if.end94
  %idxprom104 = sext i32 %7 to i64
  %operand = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom104, i32 3
  %8 = load %struct.insn_operand_data** %operand, align 8, !tbaa !12
  %mode107 = getelementptr inbounds %struct.insn_operand_data* %8, i64 1, i32 2
  %bf.load108 = load i16* %mode107, align 8
  %bf.cast = zext i16 %bf.load108 to i32
  %mode113 = getelementptr inbounds %struct.insn_operand_data* %8, i64 2, i32 2
  %bf.load114 = load i16* %mode113, align 8
  %bf.cast115 = zext i16 %bf.load114 to i32
  %9 = getelementptr inbounds %struct.rtx_def* %op0.addr.1, i64 0, i32 0
  %bf.load116 = load i32* %9, align 8
  %bf.lshr117 = lshr i32 %bf.load116, 16
  %bf.clear118 = and i32 %bf.lshr117, 255
  %cmp119 = icmp eq i32 %bf.clear118, 0
  %cmp124 = icmp eq i32 %bf.clear118, %bf.cast
  %or.cond = or i1 %cmp119, %cmp124
  br i1 %or.cond, label %if.end127, label %if.then125

if.then125:                                       ; preds = %if.then99
  %call126 = tail call %struct.rtx_def* @convert_to_mode(i32 %bf.cast, %struct.rtx_def* %op0.addr.1, i32 %unsignedp) #3
  br label %if.end127

if.end127:                                        ; preds = %if.then99, %if.then125
  %xop0.0 = phi %struct.rtx_def* [ %call126, %if.then125 ], [ %op0.addr.1, %if.then99 ]
  %10 = getelementptr inbounds %struct.rtx_def* %op1.addr.1, i64 0, i32 0
  %bf.load128 = load i32* %10, align 8
  %bf.lshr129 = lshr i32 %bf.load128, 16
  %bf.clear130 = and i32 %bf.lshr129, 255
  %cmp131 = icmp eq i32 %bf.clear130, 0
  %cmp136 = icmp eq i32 %bf.clear130, %bf.cast115
  %or.cond311 = or i1 %cmp131, %cmp136
  br i1 %or.cond311, label %if.end139, label %if.then137

if.then137:                                       ; preds = %if.end127
  %call138 = tail call %struct.rtx_def* @convert_to_mode(i32 %bf.cast115, %struct.rtx_def* %op1.addr.1, i32 %unsignedp) #3
  br label %if.end139

if.end139:                                        ; preds = %if.end127, %if.then137
  %xop1.0 = phi %struct.rtx_def* [ %call138, %if.then137 ], [ %op1.addr.1, %if.end127 ]
  %predicate = getelementptr inbounds %struct.insn_operand_data* %8, i64 1, i32 0
  %11 = load i32 (%struct.rtx_def*, i32)** %predicate, align 8, !tbaa !14
  %call144 = tail call i32 %11(%struct.rtx_def* %xop0.0, i32 %bf.cast) #3
  %tobool145 = icmp eq i32 %call144, 0
  br i1 %tobool145, label %if.then146, label %if.end148

if.then146:                                       ; preds = %if.end139
  %call147 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast, %struct.rtx_def* %xop0.0) #3
  br label %if.end148

if.end148:                                        ; preds = %if.end139, %if.then146
  %xop0.1 = phi %struct.rtx_def* [ %xop0.0, %if.end139 ], [ %call147, %if.then146 ]
  %predicate153 = getelementptr inbounds %struct.insn_operand_data* %8, i64 2, i32 0
  %12 = load i32 (%struct.rtx_def*, i32)** %predicate153, align 8, !tbaa !14
  %call154 = tail call i32 %12(%struct.rtx_def* %xop1.0, i32 %bf.cast115) #3
  %tobool155 = icmp eq i32 %call154, 0
  br i1 %tobool155, label %if.then156, label %if.end158

if.then156:                                       ; preds = %if.end148
  %call157 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast115, %struct.rtx_def* %xop1.0) #3
  br label %if.end158

if.end158:                                        ; preds = %if.end148, %if.then156
  %xop1.1 = phi %struct.rtx_def* [ %xop1.0, %if.end148 ], [ %call157, %if.then156 ]
  %predicate163 = getelementptr inbounds %struct.insn_operand_data* %8, i64 0, i32 0
  %13 = load i32 (%struct.rtx_def*, i32)** %predicate163, align 8, !tbaa !14
  %call164 = tail call i32 %13(%struct.rtx_def* %targ0.addr.0, i32 %bf.clear) #3
  %tobool165 = icmp eq i32 %call164, 0
  br i1 %tobool165, label %if.then174, label %lor.lhs.false166

lor.lhs.false166:                                 ; preds = %if.end158
  %predicate171 = getelementptr inbounds %struct.insn_operand_data* %8, i64 3, i32 0
  %14 = load i32 (%struct.rtx_def*, i32)** %predicate171, align 8, !tbaa !14
  %call172 = tail call i32 %14(%struct.rtx_def* %targ1.addr.0, i32 %bf.clear) #3
  %tobool173 = icmp eq i32 %call172, 0
  br i1 %tobool173, label %if.then174, label %if.end175

if.then174:                                       ; preds = %lor.lhs.false166, %if.end158
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 1998, i8* getelementptr inbounds ([20 x i8]* @__FUNCTION__.expand_twoval_binop, i64 0, i64 0)) #6
  unreachable

if.end175:                                        ; preds = %lor.lhs.false166
  %genfun = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom104, i32 2
  %15 = load %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun, align 8, !tbaa !16
  %call178 = tail call %struct.rtx_def* (%struct.rtx_def*, ...)* %15(%struct.rtx_def* %targ0.addr.0, %struct.rtx_def* %xop0.1, %struct.rtx_def* %xop1.1, %struct.rtx_def* %targ1.addr.0) #3
  %tobool179 = icmp eq %struct.rtx_def* %call178, null
  br i1 %tobool179, label %if.else182, label %if.then180

if.then180:                                       ; preds = %if.end175
  %call181 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call178) #3
  br label %return

if.else182:                                       ; preds = %if.end175
  tail call void @delete_insns_since(%struct.rtx_def* %call95) #3
  br label %if.end184

if.end184:                                        ; preds = %if.end94, %if.else182
  switch i32 %1, label %if.end215 [
    i32 6, label %for.cond.preheader
    i32 2, label %for.cond.preheader
    i32 1, label %for.cond.preheader
  ]

for.cond.preheader:                               ; preds = %if.end184, %if.end184, %if.end184
  %wider_mode.0.in.in312 = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom310
  %wider_mode.0.in313 = load i8* %wider_mode.0.in.in312, align 1
  %cmp193315 = icmp eq i8 %wider_mode.0.in313, 0
  br i1 %cmp193315, label %if.end215, label %for.body

for.body:                                         ; preds = %for.cond.preheader, %for.cond.backedge
  %wider_mode.0317.in = phi i8 [ %wider_mode.0.in, %for.cond.backedge ], [ %wider_mode.0.in313, %for.cond.preheader ]
  %wider_mode.0317 = zext i8 %wider_mode.0317.in to i32
  %idxprom195 = zext i8 %wider_mode.0317.in to i64
  %insn_code198 = getelementptr inbounds %struct.optab* %binoptab, i64 0, i32 1, i64 %idxprom195, i32 0
  %16 = load i32* %insn_code198, align 4, !tbaa !10
  %cmp199 = icmp eq i32 %16, 1317
  br i1 %cmp199, label %for.cond.backedge, label %if.then201

for.cond.backedge:                                ; preds = %for.body, %if.else209
  %wider_mode.0.in.in = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom195
  %wider_mode.0.in = load i8* %wider_mode.0.in.in, align 1
  %cmp193 = icmp eq i8 %wider_mode.0.in, 0
  br i1 %cmp193, label %if.end215, label %for.body

if.then201:                                       ; preds = %for.body
  %call202 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %wider_mode.0317) #3
  %call203 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %wider_mode.0317) #3
  %call204 = tail call %struct.rtx_def* @convert_modes(i32 %wider_mode.0317, i32 %bf.clear, %struct.rtx_def* %op0.addr.1, i32 %unsignedp) #3
  %call205 = tail call %struct.rtx_def* @convert_modes(i32 %wider_mode.0317, i32 %bf.clear, %struct.rtx_def* %op1.addr.1, i32 %unsignedp) #3
  %call206 = tail call i32 @expand_twoval_binop(%struct.optab* %binoptab, %struct.rtx_def* %call204, %struct.rtx_def* %call205, %struct.rtx_def* %call202, %struct.rtx_def* %call203, i32 %unsignedp)
  %tobool207 = icmp eq i32 %call206, 0
  br i1 %tobool207, label %if.else209, label %if.then208

if.then208:                                       ; preds = %if.then201
  tail call void @convert_move(%struct.rtx_def* %targ0.addr.0, %struct.rtx_def* %call202, i32 %unsignedp) #3
  tail call void @convert_move(%struct.rtx_def* %targ1.addr.0, %struct.rtx_def* %call203, i32 %unsignedp) #3
  br label %return

if.else209:                                       ; preds = %if.then201
  tail call void @delete_insns_since(%struct.rtx_def* %call95) #3
  br label %for.cond.backedge

if.end215:                                        ; preds = %for.cond.backedge, %for.cond.preheader, %if.end184
  tail call void @delete_insns_since(%struct.rtx_def* %call) #3
  br label %return

return:                                           ; preds = %if.end215, %if.then208, %if.then180
  %retval.0 = phi i32 [ 1, %if.then180 ], [ 1, %if.then208 ], [ 0, %if.end215 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @expand_simple_unop(i32 %mode, i32 %code, %struct.rtx_def* %op0, %struct.rtx_def* %target, i32 %unsignedp) #0 {
entry:
  %idxprom = sext i32 %code to i64
  %arrayidx = getelementptr inbounds [154 x %struct.optab*]* @code_to_optab, i64 0, i64 %idxprom
  %0 = load %struct.optab** %arrayidx, align 8, !tbaa !1
  %cmp = icmp eq %struct.optab* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 2055, i8* getelementptr inbounds ([19 x i8]* @__FUNCTION__.expand_simple_unop, i64 0, i64 0)) #6
  unreachable

if.end:                                           ; preds = %entry
  %call = tail call %struct.rtx_def* @expand_unop(i32 %mode, %struct.optab* %0, %struct.rtx_def* %op0, %struct.rtx_def* %target, i32 %unsignedp)
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @expand_abs(i32 %mode, %struct.rtx_def* %op0, %struct.rtx_def* %target, i32 %result_unsignedp, i32 %safe) #0 {
entry:
  %0 = load i32* @flag_trapv, align 4, !tbaa !7
  %tobool = icmp eq i32 %0, 0
  %tobool1178 = icmp ne i32 %result_unsignedp, 0
  %tobool1 = or i1 %tobool, %tobool1178
  %1 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 34), align 16, !tbaa !1
  %2 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 35), align 8, !tbaa !1
  %cond = select i1 %tobool1, %struct.optab* %1, %struct.optab* %2
  %call = tail call %struct.rtx_def* @expand_unop(i32 %mode, %struct.optab* %cond, %struct.rtx_def* %op0, %struct.rtx_def* %target, i32 0)
  %cmp = icmp eq %struct.rtx_def* %call, null
  br i1 %cmp, label %if.end3, label %return

if.end3:                                          ; preds = %entry
  %idxprom = sext i32 %mode to i64
  %3 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 27), align 8, !tbaa !1
  %insn_code = getelementptr inbounds %struct.optab* %3, i64 0, i32 1, i64 %idxprom, i32 0
  %4 = load i32* %insn_code, align 4, !tbaa !10
  %cmp4 = icmp eq i32 %4, 1317
  br i1 %cmp4, label %if.end15, label %if.then5

if.then5:                                         ; preds = %if.end3
  %call6 = tail call %struct.rtx_def* @get_last_insn() #3
  %5 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 32), align 16, !tbaa !1
  %call7 = tail call %struct.rtx_def* @expand_unop(i32 %mode, %struct.optab* %5, %struct.rtx_def* %op0, %struct.rtx_def* null, i32 0)
  %cmp8 = icmp eq %struct.rtx_def* %call7, null
  br i1 %cmp8, label %if.end14, label %if.end11

if.end11:                                         ; preds = %if.then5
  %6 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 27), align 8, !tbaa !1
  %call10 = tail call %struct.rtx_def* @expand_binop(i32 %mode, %struct.optab* %6, %struct.rtx_def* %op0, %struct.rtx_def* %call7, %struct.rtx_def* %target, i32 0, i32 2)
  %cmp12 = icmp eq %struct.rtx_def* %call10, null
  br i1 %cmp12, label %if.end14, label %return

if.end14:                                         ; preds = %if.then5, %if.end11
  tail call void @delete_insns_since(%struct.rtx_def* %call6) #3
  br label %if.end15

if.end15:                                         ; preds = %if.end3, %if.end14
  %arrayidx17 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom
  %7 = load i32* %arrayidx17, align 4, !tbaa !9
  %cmp18 = icmp eq i32 %7, 1
  %8 = load i32* @ix86_branch_cost, align 4
  %cmp19 = icmp sgt i32 %8, 1
  %or.cond = and i1 %cmp18, %cmp19
  br i1 %or.cond, label %if.then20, label %if.end41

if.then20:                                        ; preds = %if.end15
  %arrayidx22 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom
  %9 = load i16* %arrayidx22, align 2, !tbaa !17
  %conv = zext i16 %9 to i64
  %sub = add i64 %conv, -1
  %call24 = tail call %union.tree_node* @size_int_wide(i64 %sub, i32 0) #3
  %call25 = tail call %struct.rtx_def* @expand_shift(i32 83, i32 %mode, %struct.rtx_def* %op0, %union.tree_node* %call24, %struct.rtx_def* null, i32 0) #3
  %10 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 20), align 16, !tbaa !1
  %call26 = tail call %struct.rtx_def* @expand_binop(i32 %mode, %struct.optab* %10, %struct.rtx_def* %call25, %struct.rtx_def* %op0, %struct.rtx_def* %target, i32 0, i32 3)
  %cmp27 = icmp eq %struct.rtx_def* %call26, null
  br i1 %cmp27, label %if.end41, label %if.end36

if.end36:                                         ; preds = %if.then20
  %11 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 2), align 16, !tbaa !1
  %12 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 3), align 8, !tbaa !1
  %cond34 = select i1 %tobool1, %struct.optab* %11, %struct.optab* %12
  %call35 = tail call %struct.rtx_def* @expand_binop(i32 %mode, %struct.optab* %cond34, %struct.rtx_def* %call26, %struct.rtx_def* %call25, %struct.rtx_def* %target, i32 0, i32 3)
  %cmp37 = icmp eq %struct.rtx_def* %call35, null
  br i1 %cmp37, label %if.end41, label %return

if.end41:                                         ; preds = %if.then20, %if.end36, %if.end15
  %cmp42 = icmp eq %struct.rtx_def* %op0, %target
  br i1 %cmp42, label %land.lhs.true44, label %if.end52

land.lhs.true44:                                  ; preds = %if.end41
  %13 = getelementptr inbounds %struct.rtx_def* %op0, i64 0, i32 0
  %bf.load = load i32* %13, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp45 = icmp eq i32 %bf.clear, 61
  br i1 %cmp45, label %land.lhs.true47, label %if.end52

land.lhs.true47:                                  ; preds = %land.lhs.true44
  %arrayidx48 = getelementptr inbounds %struct.rtx_def* %op0, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx48 to i32*
  %14 = load i32* %rtuint, align 4, !tbaa !7
  %cmp49 = icmp ugt i32 %14, 52
  %.safe = select i1 %cmp49, i32 1, i32 %safe
  br label %if.end52

if.end52:                                         ; preds = %land.lhs.true47, %land.lhs.true44, %if.end41
  %safe.addr.0 = phi i32 [ %safe, %land.lhs.true44 ], [ %safe, %if.end41 ], [ %.safe, %land.lhs.true47 ]
  %call53 = tail call %struct.rtx_def* @gen_label_rtx() #3
  %cmp54 = icmp ne %struct.rtx_def* %target, null
  %tobool56 = icmp ne i32 %safe.addr.0, 0
  %or.cond113 = and i1 %cmp54, %tobool56
  br i1 %or.cond113, label %lor.lhs.false57, label %if.then83

lor.lhs.false57:                                  ; preds = %if.end52
  %15 = getelementptr inbounds %struct.rtx_def* %target, i64 0, i32 0
  %bf.load58 = load i32* %15, align 8
  %bf.lshr = lshr i32 %bf.load58, 16
  %bf.clear59 = and i32 %bf.lshr, 255
  %cmp60 = icmp ne i32 %bf.clear59, %mode
  %16 = and i32 %bf.load58, 134283263
  %17 = icmp eq i32 %16, 134217794
  %or.cond180 = or i1 %cmp60, %17
  br i1 %or.cond180, label %if.then83, label %lor.lhs.false72

lor.lhs.false72:                                  ; preds = %lor.lhs.false57
  %bf.clear64 = and i32 %bf.load58, 65535
  %cmp75 = icmp eq i32 %bf.clear64, 61
  br i1 %cmp75, label %land.lhs.true77, label %if.end85

land.lhs.true77:                                  ; preds = %lor.lhs.false72
  %arrayidx79 = getelementptr inbounds %struct.rtx_def* %target, i64 0, i32 1, i64 0
  %rtuint80 = bitcast %union.rtunion_def* %arrayidx79 to i32*
  %18 = load i32* %rtuint80, align 4, !tbaa !7
  %cmp81 = icmp ult i32 %18, 53
  br i1 %cmp81, label %if.then83, label %if.end85

if.then83:                                        ; preds = %lor.lhs.false57, %if.end52, %land.lhs.true77
  %call84 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode) #3
  br label %if.end85

if.end85:                                         ; preds = %if.then83, %land.lhs.true77, %lor.lhs.false72
  %target.addr.0 = phi %struct.rtx_def* [ %call84, %if.then83 ], [ %target, %land.lhs.true77 ], [ %target, %lor.lhs.false72 ]
  %call86 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %target.addr.0, %struct.rtx_def* %op0) #3
  %19 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr = getelementptr inbounds %struct.function* %19, i64 0, i32 2
  %20 = load %struct.expr_status** %expr, align 8, !tbaa !25
  %x_inhibit_defer_pop = getelementptr inbounds %struct.expr_status* %20, i64 0, i32 1
  %21 = load i32* %x_inhibit_defer_pop, align 4, !tbaa !28
  %add = add nsw i32 %21, 1
  store i32 %add, i32* %x_inhibit_defer_pop, align 4, !tbaa !28
  br i1 %cmp18, label %land.lhs.true91, label %if.else

land.lhs.true91:                                  ; preds = %if.end85
  %22 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 41), align 8, !tbaa !1
  %23 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 45), align 8, !tbaa !1
  br label %do.body.i

do.body.i:                                        ; preds = %if.end45.i, %land.lhs.true91
  %mode.addr.0.i = phi i32 [ %mode, %land.lhs.true91 ], [ %conv48.i, %if.end45.i ]
  %idxprom.i = sext i32 %mode.addr.0.i to i64
  %insn_code.i = getelementptr inbounds %struct.optab* %22, i64 0, i32 1, i64 %idxprom.i, i32 0
  %24 = load i32* %insn_code.i, align 4, !tbaa !10
  %cmp.i = icmp eq i32 %24, 1317
  br i1 %cmp.i, label %if.end.i, label %can_compare_p.exit

if.end.i:                                         ; preds = %do.body.i
  %insn_code19.i = getelementptr inbounds %struct.optab* %23, i64 0, i32 1, i64 %idxprom.i, i32 0
  %25 = load i32* %insn_code19.i, align 4, !tbaa !10
  %cmp20.i = icmp eq i32 %25, 1317
  br i1 %cmp20.i, label %if.end45.i, label %if.else

if.end45.i:                                       ; preds = %if.end.i
  %arrayidx47.i = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom.i
  %26 = load i8* %arrayidx47.i, align 1, !tbaa !9
  %conv48.i = zext i8 %26 to i32
  %cmp49.i = icmp eq i8 %26, 0
  br i1 %cmp49.i, label %if.then94, label %do.body.i

can_compare_p.exit:                               ; preds = %do.body.i
  %27 = load %struct.rtx_def* (%struct.rtx_def*)** getelementptr inbounds ([153 x %struct.rtx_def* (%struct.rtx_def*)*]* @bcc_gen_fctn, i64 0, i64 104), align 16, !tbaa !1
  %cmp5.i = icmp eq %struct.rtx_def* (%struct.rtx_def*)* %27, null
  br i1 %cmp5.i, label %if.then94, label %if.else

if.then94:                                        ; preds = %if.end45.i, %can_compare_p.exit
  %28 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  tail call void @do_jump_by_parts_greater_rtx(i32 %mode, i32 0, %struct.rtx_def* %target.addr.0, %struct.rtx_def* %28, %struct.rtx_def* null, %struct.rtx_def* %call53) #3
  br label %if.end97

if.else:                                          ; preds = %if.end.i, %can_compare_p.exit, %if.end85
  %arrayidx96 = getelementptr inbounds [3 x [59 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0, i64 %idxprom
  %29 = load %struct.rtx_def** %arrayidx96, align 8, !tbaa !1
  tail call void @do_compare_rtx_and_jump(%struct.rtx_def* %target.addr.0, %struct.rtx_def* %29, i32 104, i32 0, i32 %mode, %struct.rtx_def* null, %struct.rtx_def* null, %struct.rtx_def* %call53) #3
  br label %if.end97

if.end97:                                         ; preds = %if.else, %if.then94
  %30 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 32), align 16, !tbaa !1
  %31 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 33), align 8, !tbaa !1
  %cond102 = select i1 %tobool1, %struct.optab* %30, %struct.optab* %31
  %call103 = tail call %struct.rtx_def* @expand_unop(i32 %mode, %struct.optab* %cond102, %struct.rtx_def* %target.addr.0, %struct.rtx_def* %target.addr.0, i32 0)
  %cmp104 = icmp eq %struct.rtx_def* %call103, %target.addr.0
  br i1 %cmp104, label %if.end108, label %if.then106

if.then106:                                       ; preds = %if.end97
  %call107 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %target.addr.0, %struct.rtx_def* %call103) #3
  br label %if.end108

if.end108:                                        ; preds = %if.end97, %if.then106
  %call109 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call53) #3
  %32 = load %struct.function** @cfun, align 8, !tbaa !1
  %expr110 = getelementptr inbounds %struct.function* %32, i64 0, i32 2
  %33 = load %struct.expr_status** %expr110, align 8, !tbaa !25
  %x_inhibit_defer_pop111 = getelementptr inbounds %struct.expr_status* %33, i64 0, i32 1
  %34 = load i32* %x_inhibit_defer_pop111, align 4, !tbaa !28
  %sub112 = add nsw i32 %34, -1
  store i32 %sub112, i32* %x_inhibit_defer_pop111, align 4, !tbaa !28
  br label %return

return:                                           ; preds = %if.end36, %if.end11, %entry, %if.end108
  %retval.0 = phi %struct.rtx_def* [ %target.addr.0, %if.end108 ], [ %call, %entry ], [ %call10, %if.end11 ], [ %call35, %if.end36 ]
  ret %struct.rtx_def* %retval.0
}

declare %struct.rtx_def* @expand_shift(i32, i32, %struct.rtx_def*, %union.tree_node*, %struct.rtx_def*, i32) #2

declare %union.tree_node* @size_int_wide(i64, i32) #2

declare %struct.rtx_def* @gen_label_rtx() #2

; Function Attrs: nounwind readonly uwtable
define i32 @can_compare_p(i32 %code, i32 %mode, i32 %purpose) #4 {
entry:
  %0 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 41), align 8, !tbaa !1
  %cmp1 = icmp eq i32 %purpose, 0
  %1 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 45), align 8, !tbaa !1
  %2 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 46), align 16, !tbaa !1
  %3 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 47), align 8, !tbaa !1
  br label %do.body

do.body:                                          ; preds = %if.end45, %entry
  %mode.addr.0 = phi i32 [ %mode, %entry ], [ %conv48, %if.end45 ]
  %idxprom = sext i32 %mode.addr.0 to i64
  %insn_code = getelementptr inbounds %struct.optab* %0, i64 0, i32 1, i64 %idxprom, i32 0
  %4 = load i32* %insn_code, align 4, !tbaa !10
  %cmp = icmp eq i32 %4, 1317
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %do.body
  br i1 %cmp1, label %if.then2, label %if.else

if.then2:                                         ; preds = %if.then
  %idxprom3 = sext i32 %code to i64
  %arrayidx4 = getelementptr inbounds [153 x %struct.rtx_def* (%struct.rtx_def*)*]* @bcc_gen_fctn, i64 0, i64 %idxprom3
  %5 = load %struct.rtx_def* (%struct.rtx_def*)** %arrayidx4, align 8, !tbaa !1
  %cmp5 = icmp ne %struct.rtx_def* (%struct.rtx_def*)* %5, null
  %conv = zext i1 %cmp5 to i32
  br label %return

if.else:                                          ; preds = %if.then
  %cmp6 = icmp eq i32 %purpose, 2
  br i1 %cmp6, label %if.then8, label %return

if.then8:                                         ; preds = %if.else
  %idxprom9 = sext i32 %code to i64
  %arrayidx10 = getelementptr inbounds [153 x i32]* @setcc_gen_code, i64 0, i64 %idxprom9
  %6 = load i32* %arrayidx10, align 4, !tbaa !9
  %cmp11 = icmp ne i32 %6, 1317
  %conv12 = zext i1 %cmp11 to i32
  br label %return

if.end:                                           ; preds = %do.body
  br i1 %cmp1, label %land.lhs.true, label %if.end23

land.lhs.true:                                    ; preds = %if.end
  %insn_code19 = getelementptr inbounds %struct.optab* %1, i64 0, i32 1, i64 %idxprom, i32 0
  %7 = load i32* %insn_code19, align 4, !tbaa !10
  %cmp20 = icmp eq i32 %7, 1317
  br i1 %cmp20, label %if.end45, label %return

if.end23:                                         ; preds = %if.end
  switch i32 %purpose, label %if.end45 [
    i32 1, label %land.lhs.true26
    i32 2, label %land.lhs.true37
  ]

land.lhs.true26:                                  ; preds = %if.end23
  %insn_code30 = getelementptr inbounds %struct.optab* %2, i64 0, i32 1, i64 %idxprom, i32 0
  %8 = load i32* %insn_code30, align 4, !tbaa !10
  %cmp31 = icmp eq i32 %8, 1317
  br i1 %cmp31, label %if.end45, label %return

land.lhs.true37:                                  ; preds = %if.end23
  %insn_code41 = getelementptr inbounds %struct.optab* %3, i64 0, i32 1, i64 %idxprom, i32 0
  %9 = load i32* %insn_code41, align 4, !tbaa !10
  %cmp42 = icmp eq i32 %9, 1317
  br i1 %cmp42, label %if.end45, label %return

if.end45:                                         ; preds = %land.lhs.true26, %land.lhs.true, %if.end23, %land.lhs.true37
  %arrayidx47 = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom
  %10 = load i8* %arrayidx47, align 1, !tbaa !9
  %conv48 = zext i8 %10 to i32
  %cmp49 = icmp eq i8 %10, 0
  br i1 %cmp49, label %return, label %do.body

return:                                           ; preds = %if.end45, %land.lhs.true37, %land.lhs.true26, %land.lhs.true, %if.else, %if.then8, %if.then2
  %retval.0 = phi i32 [ %conv, %if.then2 ], [ %conv12, %if.then8 ], [ 1, %if.else ], [ 0, %if.end45 ], [ 1, %land.lhs.true37 ], [ 1, %land.lhs.true26 ], [ 1, %land.lhs.true ]
  ret i32 %retval.0
}

declare void @do_jump_by_parts_greater_rtx(i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #2

declare void @do_compare_rtx_and_jump(%struct.rtx_def*, %struct.rtx_def*, i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #2

declare %struct.rtx_def* @emit_label(%struct.rtx_def*) #2

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @expand_complex_abs(i32 %mode, %struct.rtx_def* %op0, %struct.rtx_def* %target, i32 %unsignedp) #0 {
entry:
  %idxprom = sext i32 %mode to i64
  %arrayidx = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom
  %0 = load i32* %arrayidx, align 4, !tbaa !9
  %call = tail call %struct.rtx_def* @get_last_insn() #3
  %arrayidx2 = getelementptr inbounds [59 x i8]* @mode_unit_size, i64 0, i64 %idxprom
  %1 = load i8* %arrayidx2, align 1, !tbaa !9
  %conv = zext i8 %1 to i32
  %mul = shl nuw nsw i32 %conv, 3
  %cmp = icmp eq i32 %0, 5
  %cond = select i1 %cmp, i32 1, i32 2
  %call4 = tail call i32 @mode_for_size(i32 %mul, i32 %cond, i32 0) #3
  %cmp5 = icmp eq i32 %call4, 51
  br i1 %cmp5, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 2471, i8* getelementptr inbounds ([19 x i8]* @__FUNCTION__.expand_complex_abs, i64 0, i64 0)) #6
  unreachable

if.end:                                           ; preds = %entry
  %call7 = tail call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %op0, i32 0) #3
  %2 = load i32* @flag_force_mem, align 4, !tbaa !7
  %tobool = icmp eq i32 %2, 0
  br i1 %tobool, label %if.end10, label %if.then8

if.then8:                                         ; preds = %if.end
  %call9 = tail call %struct.rtx_def* @force_not_mem(%struct.rtx_def* %call7) #3
  br label %if.end10

if.end10:                                         ; preds = %if.end, %if.then8
  %op0.addr.0 = phi %struct.rtx_def* [ %call9, %if.then8 ], [ %call7, %if.end ]
  %call11 = tail call %struct.rtx_def* @get_last_insn() #3
  %tobool12 = icmp eq %struct.rtx_def* %target, null
  br i1 %tobool12, label %if.end15, label %if.then13

if.then13:                                        ; preds = %if.end10
  %call14 = tail call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %target, i32 1) #3
  br label %if.end15

if.end15:                                         ; preds = %if.end10, %if.then13
  %target.addr.0 = phi %struct.rtx_def* [ %call14, %if.then13 ], [ null, %if.end10 ]
  %tobool16 = icmp eq i32 %unsignedp, 0
  %3 = load i32* @flag_trapv, align 4
  %tobool17 = icmp ne i32 %3, 0
  %or.cond = and i1 %tobool16, %tobool17
  %cmp21 = icmp eq i32 %0, 1
  %or.cond326 = and i1 %or.cond, %cmp21
  %cond23.in = select i1 %or.cond326, %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 35), %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 34)
  %cond23 = load %struct.optab** %cond23.in, align 8
  %insn_code = getelementptr inbounds %struct.optab* %cond23, i64 0, i32 1, i64 %idxprom, i32 0
  %4 = load i32* %insn_code, align 4, !tbaa !10
  %cmp26 = icmp eq i32 %4, 1317
  br i1 %cmp26, label %if.end90, label %if.then28

if.then28:                                        ; preds = %if.end15
  %idxprom33 = sext i32 %4 to i64
  %operand = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom33, i32 3
  %5 = load %struct.insn_operand_data** %operand, align 8, !tbaa !12
  %mode36 = getelementptr inbounds %struct.insn_operand_data* %5, i64 1, i32 2
  %bf.load = load i16* %mode36, align 8
  %bf.cast = zext i16 %bf.load to i32
  %tobool37 = icmp eq %struct.rtx_def* %target.addr.0, null
  br i1 %tobool37, label %if.else, label %if.end40

if.else:                                          ; preds = %if.then28
  %call39 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %call4) #3
  br label %if.end40

if.end40:                                         ; preds = %if.then28, %if.else
  %temp.0 = phi %struct.rtx_def* [ %call39, %if.else ], [ %target.addr.0, %if.then28 ]
  %6 = getelementptr inbounds %struct.rtx_def* %op0.addr.0, i64 0, i32 0
  %bf.load41 = load i32* %6, align 8
  %bf.lshr = lshr i32 %bf.load41, 16
  %bf.clear = and i32 %bf.lshr, 255
  %cmp42 = icmp eq i32 %bf.clear, 0
  %cmp48 = icmp eq i32 %bf.clear, %bf.cast
  %or.cond315 = or i1 %cmp42, %cmp48
  br i1 %or.cond315, label %if.end52, label %if.then50

if.then50:                                        ; preds = %if.end40
  %call51 = tail call %struct.rtx_def* @convert_to_mode(i32 %bf.cast, %struct.rtx_def* %op0.addr.0, i32 %unsignedp) #3
  br label %if.end52

if.end52:                                         ; preds = %if.end40, %if.then50
  %xop0.0 = phi %struct.rtx_def* [ %call51, %if.then50 ], [ %op0.addr.0, %if.end40 ]
  %predicate = getelementptr inbounds %struct.insn_operand_data* %5, i64 1, i32 0
  %7 = load i32 (%struct.rtx_def*, i32)** %predicate, align 8, !tbaa !14
  %call57 = tail call i32 %7(%struct.rtx_def* %xop0.0, i32 %bf.cast) #3
  %tobool58 = icmp eq i32 %call57, 0
  br i1 %tobool58, label %if.then59, label %if.end61

if.then59:                                        ; preds = %if.end52
  %call60 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast, %struct.rtx_def* %xop0.0) #3
  br label %if.end61

if.end61:                                         ; preds = %if.end52, %if.then59
  %xop0.1 = phi %struct.rtx_def* [ %xop0.0, %if.end52 ], [ %call60, %if.then59 ]
  %predicate66 = getelementptr inbounds %struct.insn_operand_data* %5, i64 0, i32 0
  %8 = load i32 (%struct.rtx_def*, i32)** %predicate66, align 8, !tbaa !14
  %call67 = tail call i32 %8(%struct.rtx_def* %temp.0, i32 %call4) #3
  %tobool68 = icmp eq i32 %call67, 0
  br i1 %tobool68, label %if.then69, label %if.end71

if.then69:                                        ; preds = %if.end61
  %call70 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %call4) #3
  br label %if.end71

if.end71:                                         ; preds = %if.end61, %if.then69
  %temp.1 = phi %struct.rtx_def* [ %temp.0, %if.end61 ], [ %call70, %if.then69 ]
  %genfun = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom33, i32 2
  %9 = load %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun, align 8, !tbaa !16
  %call74 = tail call %struct.rtx_def* (%struct.rtx_def*, ...)* %9(%struct.rtx_def* %temp.1, %struct.rtx_def* %xop0.1) #3
  %tobool75 = icmp eq %struct.rtx_def* %call74, null
  br i1 %tobool75, label %if.else88, label %if.then76

if.then76:                                        ; preds = %if.end71
  %10 = getelementptr inbounds %struct.rtx_def* %call74, i64 0, i32 0
  %bf.load77 = load i32* %10, align 8
  %bf.clear78 = and i32 %bf.load77, 65535
  %cmp79 = icmp eq i32 %bf.clear78, 24
  br i1 %cmp79, label %land.lhs.true81, label %if.end86

land.lhs.true81:                                  ; preds = %if.then76
  %code = getelementptr inbounds %struct.optab* %cond23, i64 0, i32 0
  %11 = load i32* %code, align 4, !tbaa !5
  %call82 = tail call fastcc i32 @add_equal_note(%struct.rtx_def* %call74, %struct.rtx_def* %temp.1, i32 %11, %struct.rtx_def* %xop0.1, %struct.rtx_def* null)
  %tobool83 = icmp eq i32 %call82, 0
  br i1 %tobool83, label %if.then84, label %if.end86

if.then84:                                        ; preds = %land.lhs.true81
  tail call void @delete_insns_since(%struct.rtx_def* %call11) #3
  %call85 = tail call %struct.rtx_def* @expand_unop(i32 %mode, %struct.optab* %cond23, %struct.rtx_def* %op0.addr.0, %struct.rtx_def* null, i32 %unsignedp)
  br label %return

if.end86:                                         ; preds = %land.lhs.true81, %if.then76
  %call87 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call74) #3
  br label %return

if.else88:                                        ; preds = %if.end71
  tail call void @delete_insns_since(%struct.rtx_def* %call11) #3
  br label %if.end90

if.end90:                                         ; preds = %if.end15, %if.else88
  %arrayidx92 = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom
  %wider_mode.0.in321 = load i8* %arrayidx92, align 1
  %cmp94323 = icmp eq i8 %wider_mode.0.in321, 0
  br i1 %cmp94323, label %for.end, label %for.body

for.body:                                         ; preds = %if.end90, %for.inc
  %wider_mode.0325.in = phi i8 [ %wider_mode.0.in, %for.inc ], [ %wider_mode.0.in321, %if.end90 ]
  %wider_mode.0325 = zext i8 %wider_mode.0325.in to i32
  %idxprom96 = zext i8 %wider_mode.0325.in to i64
  %insn_code99 = getelementptr inbounds %struct.optab* %cond23, i64 0, i32 1, i64 %idxprom96, i32 0
  %12 = load i32* %insn_code99, align 4, !tbaa !10
  %cmp100 = icmp eq i32 %12, 1317
  br i1 %cmp100, label %for.inc, label %if.then102

if.then102:                                       ; preds = %for.body
  %call104 = tail call %struct.rtx_def* @convert_modes(i32 %wider_mode.0325, i32 %mode, %struct.rtx_def* %op0.addr.0, i32 %unsignedp) #3
  %call105 = tail call %struct.rtx_def* @expand_complex_abs(i32 %wider_mode.0325, %struct.rtx_def* %call104, %struct.rtx_def* null, i32 %unsignedp)
  %tobool106 = icmp eq %struct.rtx_def* %call105, null
  br i1 %tobool106, label %if.else118, label %if.then107

if.then107:                                       ; preds = %if.then102
  br i1 %cmp, label %if.else116, label %if.then110

if.then110:                                       ; preds = %if.then107
  %cmp111 = icmp eq %struct.rtx_def* %target.addr.0, null
  br i1 %cmp111, label %if.then113, label %if.end115

if.then113:                                       ; preds = %if.then110
  %call114 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %call4) #3
  br label %if.end115

if.end115:                                        ; preds = %if.then113, %if.then110
  %target.addr.1 = phi %struct.rtx_def* [ %call114, %if.then113 ], [ %target.addr.0, %if.then110 ]
  tail call void @convert_move(%struct.rtx_def* %target.addr.1, %struct.rtx_def* %call105, i32 0) #3
  br label %return

if.else116:                                       ; preds = %if.then107
  %call117 = tail call %struct.rtx_def* @gen_lowpart(i32 %call4, %struct.rtx_def* %call105) #3
  br label %return

if.else118:                                       ; preds = %if.then102
  tail call void @delete_insns_since(%struct.rtx_def* %call11) #3
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.else118
  %arrayidx122 = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom96
  %wider_mode.0.in = load i8* %arrayidx122, align 1
  %cmp94 = icmp eq i8 %wider_mode.0.in, 0
  br i1 %cmp94, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc, %if.end90
  %idxprom124 = sext i32 %call4 to i64
  %13 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 38), align 16, !tbaa !1
  %insn_code127 = getelementptr inbounds %struct.optab* %13, i64 0, i32 1, i64 %idxprom124, i32 0
  %14 = load i32* %insn_code127, align 4, !tbaa !10
  %cmp128 = icmp eq i32 %14, 1317
  %15 = load i32* @flag_trapv, align 4
  %tobool131 = icmp ne i32 %15, 0
  %or.cond202 = or i1 %cmp128, %tobool131
  br i1 %or.cond202, label %if.end144, label %if.then132

if.then132:                                       ; preds = %for.end
  %call133 = tail call %struct.rtx_def* @gen_realpart(i32 %call4, %struct.rtx_def* %op0.addr.0) #3
  %call134 = tail call %struct.rtx_def* @gen_imagpart(i32 %call4, %struct.rtx_def* %op0.addr.0) #3
  %call135 = tail call %struct.rtx_def* @expand_mult(i32 %call4, %struct.rtx_def* %call133, %struct.rtx_def* %call133, %struct.rtx_def* null, i32 0) #3
  %call136 = tail call %struct.rtx_def* @expand_mult(i32 %call4, %struct.rtx_def* %call134, %struct.rtx_def* %call134, %struct.rtx_def* null, i32 0) #3
  %16 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 0), align 16, !tbaa !1
  %call137 = tail call %struct.rtx_def* @expand_binop(i32 %call4, %struct.optab* %16, %struct.rtx_def* %call135, %struct.rtx_def* %call136, %struct.rtx_def* null, i32 0, i32 3)
  %17 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 38), align 16, !tbaa !1
  %call138 = tail call %struct.rtx_def* @expand_unop(i32 %call4, %struct.optab* %17, %struct.rtx_def* %call137, %struct.rtx_def* %target.addr.0, i32 0)
  %cmp139 = icmp eq %struct.rtx_def* %call138, null
  br i1 %cmp139, label %if.then141, label %return

if.then141:                                       ; preds = %if.then132
  tail call void @delete_insns_since(%struct.rtx_def* %call11) #3
  br label %if.end144

if.end144:                                        ; preds = %for.end, %if.then141
  %target.addr.2 = phi %struct.rtx_def* [ %target.addr.0, %for.end ], [ null, %if.then141 ]
  %libfunc = getelementptr inbounds %struct.optab* %cond23, i64 0, i32 1, i64 %idxprom, i32 1
  %18 = load %struct.rtx_def** %libfunc, align 8, !tbaa !21
  %tobool148 = icmp eq %struct.rtx_def* %18, null
  br i1 %tobool148, label %for.cond163.preheader, label %if.then149

for.cond163.preheader:                            ; preds = %if.end144
  br i1 %cmp94323, label %for.end201, label %for.body166

if.then149:                                       ; preds = %if.end144
  tail call void @start_sequence() #3
  %19 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 34), align 16, !tbaa !1
  %libfunc153 = getelementptr inbounds %struct.optab* %19, i64 0, i32 1, i64 %idxprom, i32 1
  %20 = load %struct.rtx_def** %libfunc153, align 8, !tbaa !21
  %call154 = tail call %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32, i32, i32, ...)* @emit_library_call_value(%struct.rtx_def* %20, %struct.rtx_def* null, i32 1, i32 %call4, i32 1, %struct.rtx_def* %op0.addr.0, i32 %mode) #3
  %call155 = tail call %struct.rtx_def* @get_insns() #3
  tail call void @end_sequence() #3
  %call156 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %call4) #3
  %code157 = getelementptr inbounds %struct.optab* %cond23, i64 0, i32 0
  %21 = load i32* %code157, align 4, !tbaa !5
  %call158 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 %21, i32 %mode, %struct.rtx_def* %op0.addr.0) #3
  tail call void @emit_libcall_block(%struct.rtx_def* %call155, %struct.rtx_def* %call156, %struct.rtx_def* %call154, %struct.rtx_def* %call158)
  br label %return

for.body166:                                      ; preds = %for.cond163.preheader, %for.inc197
  %wider_mode.1320.in = phi i8 [ %wider_mode.1.in, %for.inc197 ], [ %wider_mode.0.in321, %for.cond163.preheader ]
  %wider_mode.1320 = zext i8 %wider_mode.1320.in to i32
  %idxprom167 = zext i8 %wider_mode.1320.in to i64
  %insn_code170 = getelementptr inbounds %struct.optab* %cond23, i64 0, i32 1, i64 %idxprom167, i32 0
  %22 = load i32* %insn_code170, align 4, !tbaa !10
  %cmp171 = icmp eq i32 %22, 1317
  br i1 %cmp171, label %lor.lhs.false, label %if.then178

lor.lhs.false:                                    ; preds = %for.body166
  %libfunc176 = getelementptr inbounds %struct.optab* %cond23, i64 0, i32 1, i64 %idxprom167, i32 1
  %23 = load %struct.rtx_def** %libfunc176, align 8, !tbaa !21
  %tobool177 = icmp eq %struct.rtx_def* %23, null
  br i1 %tobool177, label %for.inc197, label %if.then178

if.then178:                                       ; preds = %lor.lhs.false, %for.body166
  %call180 = tail call %struct.rtx_def* @convert_modes(i32 %wider_mode.1320, i32 %mode, %struct.rtx_def* %op0.addr.0, i32 %unsignedp) #3
  %call181 = tail call %struct.rtx_def* @expand_complex_abs(i32 %wider_mode.1320, %struct.rtx_def* %call180, %struct.rtx_def* null, i32 %unsignedp)
  %tobool182 = icmp eq %struct.rtx_def* %call181, null
  br i1 %tobool182, label %if.else194, label %if.then183

if.then183:                                       ; preds = %if.then178
  br i1 %cmp, label %if.else192, label %if.then186

if.then186:                                       ; preds = %if.then183
  %cmp187 = icmp eq %struct.rtx_def* %target.addr.2, null
  br i1 %cmp187, label %if.then189, label %if.end191

if.then189:                                       ; preds = %if.then186
  %call190 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %call4) #3
  br label %if.end191

if.end191:                                        ; preds = %if.then189, %if.then186
  %target.addr.3 = phi %struct.rtx_def* [ %call190, %if.then189 ], [ %target.addr.2, %if.then186 ]
  tail call void @convert_move(%struct.rtx_def* %target.addr.3, %struct.rtx_def* %call181, i32 0) #3
  br label %return

if.else192:                                       ; preds = %if.then183
  %call193 = tail call %struct.rtx_def* @gen_lowpart(i32 %call4, %struct.rtx_def* %call181) #3
  br label %return

if.else194:                                       ; preds = %if.then178
  tail call void @delete_insns_since(%struct.rtx_def* %call11) #3
  br label %for.inc197

for.inc197:                                       ; preds = %lor.lhs.false, %if.else194
  %arrayidx199 = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom167
  %wider_mode.1.in = load i8* %arrayidx199, align 1
  %cmp164 = icmp eq i8 %wider_mode.1.in, 0
  br i1 %cmp164, label %for.end201, label %for.body166

for.end201:                                       ; preds = %for.inc197, %for.cond163.preheader
  tail call void @delete_insns_since(%struct.rtx_def* %call) #3
  br label %return

return:                                           ; preds = %if.then132, %for.end201, %if.else192, %if.end191, %if.then149, %if.else116, %if.end115, %if.end86, %if.then84
  %retval.0 = phi %struct.rtx_def* [ %temp.1, %if.end86 ], [ %call85, %if.then84 ], [ %target.addr.1, %if.end115 ], [ %call117, %if.else116 ], [ %call156, %if.then149 ], [ %target.addr.3, %if.end191 ], [ %call193, %if.else192 ], [ null, %for.end201 ], [ %call138, %if.then132 ]
  ret %struct.rtx_def* %retval.0
}

declare %struct.rtx_def* @expand_mult(i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32) #2

; Function Attrs: nounwind uwtable
define void @emit_unop_insn(i32 %icode, %struct.rtx_def* %target, %struct.rtx_def* %op0, i32 %code) #0 {
entry:
  %idxprom = sext i32 %icode to i64
  %operand = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom, i32 3
  %0 = load %struct.insn_operand_data** %operand, align 8, !tbaa !12
  %mode = getelementptr inbounds %struct.insn_operand_data* %0, i64 1, i32 2
  %bf.load = load i16* %mode, align 8
  %bf.cast = zext i16 %bf.load to i32
  %call = tail call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %target, i32 1) #3
  %call2 = tail call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %op0, i32 0) #3
  %1 = load i32* @flag_force_mem, align 4, !tbaa !7
  %tobool = icmp ne i32 %1, 0
  %cmp = icmp ne i32 %code, 120
  %or.cond = and i1 %tobool, %cmp
  %cmp4 = icmp ne i32 %code, 121
  %or.cond50 = and i1 %or.cond, %cmp4
  br i1 %or.cond50, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call5 = tail call %struct.rtx_def* @force_not_mem(%struct.rtx_def* %call2) #3
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %op0.addr.0 = phi %struct.rtx_def* [ %call5, %if.then ], [ %call2, %entry ]
  %predicate = getelementptr inbounds %struct.insn_operand_data* %0, i64 1, i32 0
  %2 = load i32 (%struct.rtx_def*, i32)** %predicate, align 8, !tbaa !14
  %call10 = tail call i32 %2(%struct.rtx_def* %op0.addr.0, i32 %bf.cast) #3
  %tobool11 = icmp eq i32 %call10, 0
  br i1 %tobool11, label %if.then12, label %if.end14

if.then12:                                        ; preds = %if.end
  %call13 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast, %struct.rtx_def* %op0.addr.0) #3
  br label %if.end14

if.end14:                                         ; preds = %if.end, %if.then12
  %op0.addr.1 = phi %struct.rtx_def* [ %op0.addr.0, %if.end ], [ %call13, %if.then12 ]
  %predicate19 = getelementptr inbounds %struct.insn_operand_data* %0, i64 0, i32 0
  %3 = load i32 (%struct.rtx_def*, i32)** %predicate19, align 8, !tbaa !14
  %4 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 0
  %bf.load20 = load i32* %4, align 8
  %bf.lshr = lshr i32 %bf.load20, 16
  %bf.clear = and i32 %bf.lshr, 255
  %call21 = tail call i32 %3(%struct.rtx_def* %call, i32 %bf.clear) #3
  %tobool22 = icmp eq i32 %call21, 0
  br i1 %tobool22, label %if.end14.if.then28_crit_edge, label %lor.lhs.false

if.end14.if.then28_crit_edge:                     ; preds = %if.end14
  %bf.load29.pre = load i32* %4, align 8
  br label %if.then28

lor.lhs.false:                                    ; preds = %if.end14
  %5 = load i32* @flag_force_mem, align 4, !tbaa !7
  %tobool23 = icmp eq i32 %5, 0
  br i1 %tobool23, label %if.end33, label %land.lhs.true24

land.lhs.true24:                                  ; preds = %lor.lhs.false
  %bf.load25 = load i32* %4, align 8
  %bf.clear26 = and i32 %bf.load25, 65535
  %cmp27 = icmp eq i32 %bf.clear26, 66
  br i1 %cmp27, label %if.then28, label %if.end33

if.then28:                                        ; preds = %if.end14.if.then28_crit_edge, %land.lhs.true24
  %bf.load29 = phi i32 [ %bf.load29.pre, %if.end14.if.then28_crit_edge ], [ %bf.load25, %land.lhs.true24 ]
  %bf.lshr30 = lshr i32 %bf.load29, 16
  %bf.clear31 = and i32 %bf.lshr30, 255
  %call32 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear31) #3
  br label %if.end33

if.end33:                                         ; preds = %lor.lhs.false, %if.then28, %land.lhs.true24
  %temp.0 = phi %struct.rtx_def* [ %call32, %if.then28 ], [ %call, %land.lhs.true24 ], [ %call, %lor.lhs.false ]
  %genfun = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom, i32 2
  %6 = load %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun, align 8, !tbaa !16
  %call36 = tail call %struct.rtx_def* (%struct.rtx_def*, ...)* %6(%struct.rtx_def* %temp.0, %struct.rtx_def* %op0.addr.1) #3
  %7 = getelementptr inbounds %struct.rtx_def* %call36, i64 0, i32 0
  %bf.load37 = load i32* %7, align 8
  %bf.clear38 = and i32 %bf.load37, 65535
  %cmp39 = icmp eq i32 %bf.clear38, 24
  %cmp41 = icmp ne i32 %code, 0
  %or.cond51 = and i1 %cmp39, %cmp41
  br i1 %or.cond51, label %if.then42, label %if.end44

if.then42:                                        ; preds = %if.end33
  %call43 = tail call fastcc i32 @add_equal_note(%struct.rtx_def* %call36, %struct.rtx_def* %temp.0, i32 %code, %struct.rtx_def* %op0.addr.1, %struct.rtx_def* null)
  br label %if.end44

if.end44:                                         ; preds = %if.then42, %if.end33
  %call45 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call36) #3
  %cmp46 = icmp eq %struct.rtx_def* %temp.0, %call
  br i1 %cmp46, label %if.end49, label %if.then47

if.then47:                                        ; preds = %if.end44
  %call48 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call, %struct.rtx_def* %temp.0) #3
  br label %if.end49

if.end49:                                         ; preds = %if.end44, %if.then47
  ret void
}

declare %struct.rtx_def* @find_reg_note(%struct.rtx_def*, i32, %struct.rtx_def*) #2

declare void @remove_note(%struct.rtx_def*, %struct.rtx_def*) #2

declare i32 @reg_overlap_mentioned_p(%struct.rtx_def*, %struct.rtx_def*) #2

declare void @add_insn(%struct.rtx_def*) #2

declare %struct.rtx_def* @gen_rtx_fmt_ue(i32, i32, %struct.rtx_def*, %struct.rtx_def*) #2

declare i32 @may_trap_p(%struct.rtx_def*) #2

declare %struct.rtx_def* @single_set_2(%struct.rtx_def*, %struct.rtx_def*) #2

declare i32 @reg_mentioned_p(%struct.rtx_def*, %struct.rtx_def*) #2

declare i32 @reg_used_between_p(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #2

declare i32 @modified_in_p(%struct.rtx_def*, %struct.rtx_def*) #2

declare i32 @modified_between_p(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #2

; Function Attrs: nounwind uwtable
define void @emit_clr_insn(%struct.rtx_def* %x) #0 {
entry:
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %x, %struct.rtx_def* %0) #3
  ret void
}

; Function Attrs: nounwind uwtable
define void @emit_0_to_1_insn(%struct.rtx_def* %x) #0 {
entry:
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %x, %struct.rtx_def* %0) #3
  ret void
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @prepare_operand(i32 %icode, %struct.rtx_def* %x, i32 %opnum, i32 %mode, i32 %wider_mode, i32 %unsignedp) #0 {
entry:
  %call = tail call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %x, i32 0) #3
  %cmp = icmp eq i32 %mode, %wider_mode
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %call1 = tail call %struct.rtx_def* @convert_modes(i32 %wider_mode, i32 %mode, %struct.rtx_def* %call, i32 %unsignedp) #3
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %x.addr.0 = phi %struct.rtx_def* [ %call1, %if.then ], [ %call, %entry ]
  %idxprom = sext i32 %opnum to i64
  %idxprom2 = sext i32 %icode to i64
  %operand = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom2, i32 3
  %0 = load %struct.insn_operand_data** %operand, align 8, !tbaa !12
  %predicate = getelementptr inbounds %struct.insn_operand_data* %0, i64 %idxprom, i32 0
  %1 = load i32 (%struct.rtx_def*, i32)** %predicate, align 8, !tbaa !14
  %mode9 = getelementptr inbounds %struct.insn_operand_data* %0, i64 %idxprom, i32 2
  %bf.load = load i16* %mode9, align 8
  %bf.cast = zext i16 %bf.load to i32
  %call10 = tail call i32 %1(%struct.rtx_def* %x.addr.0, i32 %bf.cast) #3
  %tobool = icmp eq i32 %call10, 0
  br i1 %tobool, label %if.then11, label %if.end21

if.then11:                                        ; preds = %if.end
  %bf.load18 = load i16* %mode9, align 8
  %bf.cast19 = zext i16 %bf.load18 to i32
  %call20 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast19, %struct.rtx_def* %x.addr.0) #3
  br label %if.end21

if.end21:                                         ; preds = %if.end, %if.then11
  %x.addr.1 = phi %struct.rtx_def* [ %x.addr.0, %if.end ], [ %call20, %if.then11 ]
  ret %struct.rtx_def* %x.addr.1
}

; Function Attrs: nounwind uwtable
define void @emit_cmp_and_jump_insns(%struct.rtx_def* %x, %struct.rtx_def* %y, i32 %comparison, %struct.rtx_def* %size, i32 %mode, i32 %unsignedp, %struct.rtx_def* %label) #0 {
entry:
  %call = tail call i32 @swap_commutative_operands_p(%struct.rtx_def* %x, %struct.rtx_def* %y) #3
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.end4, label %if.then

if.then:                                          ; preds = %entry
  %tobool1 = icmp eq %struct.rtx_def* %label, null
  br i1 %tobool1, label %if.then2, label %if.end

if.then2:                                         ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 3370, i8* getelementptr inbounds ([24 x i8]* @__FUNCTION__.emit_cmp_and_jump_insns, i64 0, i64 0)) #6
  unreachable

if.end:                                           ; preds = %if.then
  %call3 = tail call i32 @swap_condition(i32 %comparison) #3
  br label %if.end4

if.end4:                                          ; preds = %entry, %if.end
  %comparison50 = phi i32 [ %comparison, %entry ], [ %call3, %if.end ]
  %x46 = phi %struct.rtx_def* [ %x, %entry ], [ %y, %if.end ]
  %y43 = phi %struct.rtx_def* [ %y, %entry ], [ %x, %if.end ]
  tail call void @emit_queue() #3
  %tobool5 = icmp eq i32 %unsignedp, 0
  br i1 %tobool5, label %if.end8, label %if.then6

if.then6:                                         ; preds = %if.end4
  %call7 = tail call i32 @unsigned_condition(i32 %comparison50) #3
  br label %if.end8

if.end8:                                          ; preds = %if.end4, %if.then6
  %comparison53 = phi i32 [ %comparison50, %if.end4 ], [ %call7, %if.then6 ]
  %idxprom.i = sext i32 %mode to i64
  %arrayidx.i = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom.i
  %0 = load i32* %arrayidx.i, align 4, !tbaa !9
  %cmp.i = icmp ne i32 %mode, 51
  %1 = load i32* @flag_force_mem, align 4
  %tobool.i = icmp ne i32 %1, 0
  %or.cond.i = and i1 %cmp.i, %tobool.i
  br i1 %or.cond.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %if.end8
  %call.i = tail call %struct.rtx_def* @force_not_mem(%struct.rtx_def* %x46) #3
  %call1.i = tail call %struct.rtx_def* @force_not_mem(%struct.rtx_def* %y43) #3
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %if.end8
  %y.0.i = phi %struct.rtx_def* [ %call1.i, %if.then.i ], [ %y43, %if.end8 ]
  %x.0.i = phi %struct.rtx_def* [ %call.i, %if.then.i ], [ %x46, %if.end8 ]
  %2 = getelementptr inbounds %struct.rtx_def* %x.0.i, i64 0, i32 0
  %bf.load.i = load i32* %2, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  switch i32 %bf.clear.i, label %if.end38.i [
    i32 67, label %land.lhs.true30.i
    i32 68, label %land.lhs.true30.i
    i32 54, label %land.lhs.true30.i
    i32 55, label %land.lhs.true30.i
    i32 58, label %land.lhs.true30.i
    i32 134, label %land.lhs.true30.i
    i32 56, label %land.lhs.true30.i
    i32 140, label %land.lhs.true30.i
  ]

land.lhs.true30.i:                                ; preds = %if.end.i, %if.end.i, %if.end.i, %if.end.i, %if.end.i, %if.end.i, %if.end.i, %if.end.i
  %call31.i = tail call i32 @preserve_subexpressions_p() #3
  %tobool32.i = icmp eq i32 %call31.i, 0
  br i1 %tobool32.i, label %if.end38.i, label %land.lhs.true33.i

land.lhs.true33.i:                                ; preds = %land.lhs.true30.i
  %call34.i = tail call i32 @rtx_cost(%struct.rtx_def* %x.0.i, i32 74) #3
  %cmp35.i = icmp sgt i32 %call34.i, 4
  br i1 %cmp35.i, label %if.then36.i, label %if.end38.i

if.then36.i:                                      ; preds = %land.lhs.true33.i
  %call37.i = tail call %struct.rtx_def* @force_reg(i32 %mode, %struct.rtx_def* %x.0.i) #3
  br label %if.end38.i

if.end38.i:                                       ; preds = %if.then36.i, %land.lhs.true33.i, %land.lhs.true30.i, %if.end.i
  %x.1.i = phi %struct.rtx_def* [ %call37.i, %if.then36.i ], [ %x.0.i, %land.lhs.true33.i ], [ %x.0.i, %land.lhs.true30.i ], [ %x.0.i, %if.end.i ]
  %3 = getelementptr inbounds %struct.rtx_def* %y.0.i, i64 0, i32 0
  %bf.load39.i = load i32* %3, align 8
  %bf.clear40.i = and i32 %bf.load39.i, 65535
  switch i32 %bf.clear40.i, label %if.end78.i [
    i32 67, label %land.lhs.true70.i
    i32 68, label %land.lhs.true70.i
    i32 54, label %land.lhs.true70.i
    i32 55, label %land.lhs.true70.i
    i32 58, label %land.lhs.true70.i
    i32 134, label %land.lhs.true70.i
    i32 56, label %land.lhs.true70.i
    i32 140, label %land.lhs.true70.i
  ]

land.lhs.true70.i:                                ; preds = %if.end38.i, %if.end38.i, %if.end38.i, %if.end38.i, %if.end38.i, %if.end38.i, %if.end38.i, %if.end38.i
  %call71.i = tail call i32 @preserve_subexpressions_p() #3
  %tobool72.i = icmp eq i32 %call71.i, 0
  br i1 %tobool72.i, label %if.end78.i, label %land.lhs.true73.i

land.lhs.true73.i:                                ; preds = %land.lhs.true70.i
  %call74.i = tail call i32 @rtx_cost(%struct.rtx_def* %y.0.i, i32 74) #3
  %cmp75.i = icmp sgt i32 %call74.i, 4
  br i1 %cmp75.i, label %if.then76.i, label %if.end78.i

if.then76.i:                                      ; preds = %land.lhs.true73.i
  %call77.i = tail call %struct.rtx_def* @force_reg(i32 %mode, %struct.rtx_def* %y.0.i) #3
  br label %if.end78.i

if.end78.i:                                       ; preds = %if.then76.i, %land.lhs.true73.i, %land.lhs.true70.i, %if.end38.i
  %y.1.i = phi %struct.rtx_def* [ %call77.i, %if.then76.i ], [ %y.0.i, %land.lhs.true73.i ], [ %y.0.i, %land.lhs.true70.i ], [ %y.0.i, %if.end38.i ]
  %4 = getelementptr inbounds %struct.rtx_def* %x.1.i, i64 0, i32 0
  %bf.load79.i = load i32* %4, align 8
  %bf.clear80.i = and i32 %bf.load79.i, 16711680
  %cmp81.i = icmp eq i32 %bf.clear80.i, 0
  br i1 %cmp81.i, label %land.lhs.true82.i, label %if.end89.i

land.lhs.true82.i:                                ; preds = %if.end78.i
  %5 = getelementptr inbounds %struct.rtx_def* %y.1.i, i64 0, i32 0
  %bf.load83.i = load i32* %5, align 8
  %bf.clear85.i = and i32 %bf.load83.i, 16711680
  %cmp86.i = icmp eq i32 %bf.clear85.i, 0
  br i1 %cmp86.i, label %if.then87.i, label %if.end89.i

if.then87.i:                                      ; preds = %land.lhs.true82.i
  %call88.i = tail call %struct.rtx_def* @force_reg(i32 %mode, %struct.rtx_def* %x.1.i) #3
  br label %if.end89.i

if.end89.i:                                       ; preds = %if.then87.i, %land.lhs.true82.i, %if.end78.i
  %x.2.i = phi %struct.rtx_def* [ %call88.i, %if.then87.i ], [ %x.1.i, %land.lhs.true82.i ], [ %x.1.i, %if.end78.i ]
  %cmp90.i = icmp eq i32 %mode, 51
  br i1 %cmp90.i, label %if.then91.i, label %if.end153.i

if.then91.i:                                      ; preds = %if.end89.i
  %arrayidx92.i = getelementptr inbounds %struct.rtx_def* %x.2.i, i64 0, i32 1, i64 1
  %rtmem.i = bitcast %union.rtunion_def* %arrayidx92.i to %struct.mem_attrs**
  %6 = load %struct.mem_attrs** %rtmem.i, align 8, !tbaa !1
  %cmp93.i = icmp eq %struct.mem_attrs* %6, null
  br i1 %cmp93.i, label %cond.end.i, label %cond.true.i

cond.true.i:                                      ; preds = %if.then91.i
  %align.i = getelementptr inbounds %struct.mem_attrs* %6, i64 0, i32 4
  %7 = load i32* %align.i, align 4, !tbaa !30
  br label %cond.end.i

cond.end.i:                                       ; preds = %cond.true.i, %if.then91.i
  %cond.i = phi i32 [ %7, %cond.true.i ], [ 8, %if.then91.i ]
  %arrayidx98.i = getelementptr inbounds %struct.rtx_def* %y.1.i, i64 0, i32 1, i64 1
  %rtmem99.i = bitcast %union.rtunion_def* %arrayidx98.i to %struct.mem_attrs**
  %8 = load %struct.mem_attrs** %rtmem99.i, align 8, !tbaa !1
  %cmp100.i = icmp eq %struct.mem_attrs* %8, null
  br i1 %cmp100.i, label %cond.end107.i, label %cond.true101.i

cond.true101.i:                                   ; preds = %cond.end.i
  %align105.i = getelementptr inbounds %struct.mem_attrs* %8, i64 0, i32 4
  %9 = load i32* %align105.i, align 4, !tbaa !30
  br label %cond.end107.i

cond.end107.i:                                    ; preds = %cond.true101.i, %cond.end.i
  %cond108.i = phi i32 [ %9, %cond.true101.i ], [ 8, %cond.end.i ]
  %cmp109.i = icmp ult i32 %cond.i, %cond108.i
  br i1 %cmp109.i, label %cond.true110.i, label %cond.false123.i

cond.true110.i:                                   ; preds = %cond.end107.i
  br i1 %cmp93.i, label %cond.end136.i, label %cond.true115.i

cond.true115.i:                                   ; preds = %cond.true110.i
  %align119.i = getelementptr inbounds %struct.mem_attrs* %6, i64 0, i32 4
  %10 = load i32* %align119.i, align 4, !tbaa !30
  br label %cond.end136.i

cond.false123.i:                                  ; preds = %cond.end107.i
  br i1 %cmp100.i, label %cond.end136.i, label %cond.true128.i

cond.true128.i:                                   ; preds = %cond.false123.i
  %align132.i = getelementptr inbounds %struct.mem_attrs* %8, i64 0, i32 4
  %11 = load i32* %align132.i, align 4, !tbaa !30
  br label %cond.end136.i

cond.end136.i:                                    ; preds = %cond.true128.i, %cond.false123.i, %cond.true115.i, %cond.true110.i
  %cond137.i = phi i32 [ %10, %cond.true115.i ], [ 8, %cond.true110.i ], [ %11, %cond.true128.i ], [ 8, %cond.false123.i ]
  %div.i = lshr i32 %cond137.i, 3
  %conv.i = zext i32 %div.i to i64
  %call138.i = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv.i) #3
  tail call void @emit_queue() #3
  %call139.i = tail call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %x.2.i, i32 0) #3
  %call140.i = tail call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %y.1.i, i32 0) #3
  %cmp141.i = icmp eq %struct.rtx_def* %size, null
  br i1 %cmp141.i, label %if.then143.i, label %if.end144.i

if.then143.i:                                     ; preds = %cond.end136.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 3132, i8* getelementptr inbounds ([17 x i8]* @__FUNCTION__.prepare_cmp_insn, i64 0, i64 0)) #6
  unreachable

if.end144.i:                                      ; preds = %cond.end136.i
  %12 = load %struct.insn_operand_data** getelementptr inbounds ([0 x %struct.insn_data]* @insn_data, i64 0, i64 1203, i32 3), align 8, !tbaa !12
  %mode146.i = getelementptr inbounds %struct.insn_operand_data* %12, i64 0, i32 2
  %bf.load147.i = load i16* %mode146.i, align 8
  %bf.cast.i = zext i16 %bf.load147.i to i32
  %call148.i = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.cast.i) #3
  %call149.i = tail call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %size, i32 0) #3
  %call150.i = tail call %struct.rtx_def* @convert_to_mode(i32 4, %struct.rtx_def* %call149.i, i32 1) #3
  %call151.i = tail call %struct.rtx_def* @gen_cmpstrsi(%struct.rtx_def* %call148.i, %struct.rtx_def* %call139.i, %struct.rtx_def* %call140.i, %struct.rtx_def* %call150.i, %struct.rtx_def* %call138.i) #3
  %call152.i = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call151.i) #3
  %13 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  br label %prepare_cmp_insn.exit

if.end153.i:                                      ; preds = %if.end89.i
  %14 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 41), align 8, !tbaa !1
  %15 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 45), align 8, !tbaa !1
  br label %do.body.i.i

do.body.i.i:                                      ; preds = %if.end45.i.i, %if.end153.i
  %mode.addr.0.i.i = phi i32 [ %mode, %if.end153.i ], [ %conv48.i.i, %if.end45.i.i ]
  %idxprom.i.i = sext i32 %mode.addr.0.i.i to i64
  %insn_code.i.i = getelementptr inbounds %struct.optab* %14, i64 0, i32 1, i64 %idxprom.i.i, i32 0
  %16 = load i32* %insn_code.i.i, align 4, !tbaa !10
  %cmp.i.i = icmp eq i32 %16, 1317
  br i1 %cmp.i.i, label %if.end.i.i, label %can_compare_p.exit.i

if.end.i.i:                                       ; preds = %do.body.i.i
  %insn_code19.i.i = getelementptr inbounds %struct.optab* %15, i64 0, i32 1, i64 %idxprom.i.i, i32 0
  %17 = load i32* %insn_code19.i.i, align 4, !tbaa !10
  %cmp20.i.i = icmp eq i32 %17, 1317
  br i1 %cmp20.i.i, label %if.end45.i.i, label %prepare_cmp_insn.exit

if.end45.i.i:                                     ; preds = %if.end.i.i
  %arrayidx47.i.i = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom.i.i
  %18 = load i8* %arrayidx47.i.i, align 1, !tbaa !9
  %conv48.i.i = zext i8 %18 to i32
  %cmp49.i.i = icmp eq i8 %18, 0
  br i1 %cmp49.i.i, label %if.end157.i, label %do.body.i.i

can_compare_p.exit.i:                             ; preds = %do.body.i.i
  %idxprom3.i.i = sext i32 %comparison53 to i64
  %arrayidx4.i.i = getelementptr inbounds [153 x %struct.rtx_def* (%struct.rtx_def*)*]* @bcc_gen_fctn, i64 0, i64 %idxprom3.i.i
  %19 = load %struct.rtx_def* (%struct.rtx_def*)** %arrayidx4.i.i, align 8, !tbaa !1
  %cmp5.i.i = icmp eq %struct.rtx_def* (%struct.rtx_def*)* %19, null
  br i1 %cmp5.i.i, label %if.end157.i, label %prepare_cmp_insn.exit

if.end157.i:                                      ; preds = %if.end45.i.i, %can_compare_p.exit.i
  %libfunc.i = getelementptr inbounds %struct.optab* %14, i64 0, i32 1, i64 %idxprom.i, i32 1
  %20 = load %struct.rtx_def** %libfunc.i, align 8, !tbaa !21
  %tobool160.i = icmp ne %struct.rtx_def* %20, null
  %cmp162.i = icmp ne i32 %0, 2
  %or.cond192.i = and i1 %tobool160.i, %cmp162.i
  br i1 %or.cond192.i, label %if.then164.i, label %if.end187.i

if.then164.i:                                     ; preds = %if.end157.i
  br i1 %tobool5, label %if.end183.i, label %land.lhs.true172.i

land.lhs.true172.i:                               ; preds = %if.then164.i
  %21 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 42), align 16, !tbaa !1
  %libfunc176.i = getelementptr inbounds %struct.optab* %21, i64 0, i32 1, i64 %idxprom.i, i32 1
  %22 = load %struct.rtx_def** %libfunc176.i, align 8, !tbaa !21
  %tobool177.i = icmp eq %struct.rtx_def* %22, null
  %..i = select i1 %tobool177.i, %struct.rtx_def* %20, %struct.rtx_def* %22
  br label %if.end183.i

if.end183.i:                                      ; preds = %land.lhs.true172.i, %if.then164.i
  %libfunc165.0.i = phi %struct.rtx_def* [ %20, %if.then164.i ], [ %..i, %land.lhs.true172.i ]
  %23 = load i32* @word_mode, align 4, !tbaa !9
  tail call void (%struct.rtx_def*, i32, i32, i32, ...)* @emit_library_call(%struct.rtx_def* %libfunc165.0.i, i32 3, i32 %23, i32 2, %struct.rtx_def* %x.2.i, i32 %mode, %struct.rtx_def* %y.1.i, i32 %mode) #3
  %24 = load i32* @word_mode, align 4, !tbaa !9
  %call184.i = tail call %struct.rtx_def* @gen_reg_rtx(i32 %24) #3
  %25 = load i32* @word_mode, align 4, !tbaa !9
  %call185.i = tail call %struct.rtx_def* @hard_libcall_value(i32 %25) #3
  %call186.i = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call184.i, %struct.rtx_def* %call185.i) #3
  %26 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %27 = load i32* @word_mode, align 4, !tbaa !9
  br label %prepare_cmp_insn.exit

if.end187.i:                                      ; preds = %if.end157.i
  %cmp188.i = icmp eq i32 %0, 2
  br i1 %cmp188.i, label %tailrecurse.i.i, label %if.else.i

tailrecurse.i.i:                                  ; preds = %if.end187.i, %if.then68.i.i
  %x47 = phi %struct.rtx_def* [ %call71.i.i, %if.then68.i.i ], [ %x.2.i, %if.end187.i ]
  %y44 = phi %struct.rtx_def* [ %call72.i.i, %if.then68.i.i ], [ %y.1.i, %if.end187.i ]
  %call.i.i = tail call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %x47, i32 0) #3
  %call1.i.i = tail call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %y44, i32 0) #3
  %28 = getelementptr inbounds %struct.rtx_def* %call.i.i, i64 0, i32 0
  %bf.load.i.i = load i32* %28, align 8
  %bf.lshr.i.i = lshr i32 %bf.load.i.i, 16
  %bf.clear.i.i = and i32 %bf.lshr.i.i, 255
  switch i32 %bf.clear.i.i, label %if.else55.i.i [
    i32 13, label %if.then.i1.i
    i32 15, label %if.then9.i.i
    i32 16, label %if.then21.i.i
    i32 17, label %if.then33.i.i
    i32 18, label %if.then45.i.i
  ]

if.then.i1.i:                                     ; preds = %tailrecurse.i.i
  switch i32 %comparison53, label %if.then83.i.i [
    i32 103, label %if.end80.i.i
    i32 102, label %sw.bb2.i.i
    i32 105, label %sw.bb3.i.i
    i32 104, label %sw.bb4.i.i
    i32 107, label %sw.bb5.i.i
    i32 106, label %sw.bb6.i.i
    i32 112, label %sw.bb7.i.i
  ]

sw.bb2.i.i:                                       ; preds = %if.then.i1.i
  br label %if.end80.i.i

sw.bb3.i.i:                                       ; preds = %if.then.i1.i
  br label %if.end80.i.i

sw.bb4.i.i:                                       ; preds = %if.then.i1.i
  br label %if.end80.i.i

sw.bb5.i.i:                                       ; preds = %if.then.i1.i
  br label %if.end80.i.i

sw.bb6.i.i:                                       ; preds = %if.then.i1.i
  br label %if.end80.i.i

sw.bb7.i.i:                                       ; preds = %if.then.i1.i
  br label %if.end80.i.i

if.then9.i.i:                                     ; preds = %tailrecurse.i.i
  switch i32 %comparison53, label %if.then83.i.i [
    i32 103, label %if.end80.i.i
    i32 102, label %sw.bb11.i.i
    i32 105, label %sw.bb12.i.i
    i32 104, label %sw.bb13.i.i
    i32 107, label %sw.bb14.i.i
    i32 106, label %sw.bb15.i.i
    i32 112, label %sw.bb16.i.i
  ]

sw.bb11.i.i:                                      ; preds = %if.then9.i.i
  br label %if.end80.i.i

sw.bb12.i.i:                                      ; preds = %if.then9.i.i
  br label %if.end80.i.i

sw.bb13.i.i:                                      ; preds = %if.then9.i.i
  br label %if.end80.i.i

sw.bb14.i.i:                                      ; preds = %if.then9.i.i
  br label %if.end80.i.i

sw.bb15.i.i:                                      ; preds = %if.then9.i.i
  br label %if.end80.i.i

sw.bb16.i.i:                                      ; preds = %if.then9.i.i
  br label %if.end80.i.i

if.then21.i.i:                                    ; preds = %tailrecurse.i.i
  switch i32 %comparison53, label %if.then83.i.i [
    i32 103, label %if.end80.i.i
    i32 102, label %sw.bb23.i.i
    i32 105, label %sw.bb24.i.i
    i32 104, label %sw.bb25.i.i
    i32 107, label %sw.bb26.i.i
    i32 106, label %sw.bb27.i.i
    i32 112, label %sw.bb28.i.i
  ]

sw.bb23.i.i:                                      ; preds = %if.then21.i.i
  br label %if.end80.i.i

sw.bb24.i.i:                                      ; preds = %if.then21.i.i
  br label %if.end80.i.i

sw.bb25.i.i:                                      ; preds = %if.then21.i.i
  br label %if.end80.i.i

sw.bb26.i.i:                                      ; preds = %if.then21.i.i
  br label %if.end80.i.i

sw.bb27.i.i:                                      ; preds = %if.then21.i.i
  br label %if.end80.i.i

sw.bb28.i.i:                                      ; preds = %if.then21.i.i
  br label %if.end80.i.i

if.then33.i.i:                                    ; preds = %tailrecurse.i.i
  switch i32 %comparison53, label %if.then83.i.i [
    i32 103, label %if.end80.i.i
    i32 102, label %sw.bb35.i.i
    i32 105, label %sw.bb36.i.i
    i32 104, label %sw.bb37.i.i
    i32 107, label %sw.bb38.i.i
    i32 106, label %sw.bb39.i.i
    i32 112, label %sw.bb40.i.i
  ]

sw.bb35.i.i:                                      ; preds = %if.then33.i.i
  br label %if.end80.i.i

sw.bb36.i.i:                                      ; preds = %if.then33.i.i
  br label %if.end80.i.i

sw.bb37.i.i:                                      ; preds = %if.then33.i.i
  br label %if.end80.i.i

sw.bb38.i.i:                                      ; preds = %if.then33.i.i
  br label %if.end80.i.i

sw.bb39.i.i:                                      ; preds = %if.then33.i.i
  br label %if.end80.i.i

sw.bb40.i.i:                                      ; preds = %if.then33.i.i
  br label %if.end80.i.i

if.then45.i.i:                                    ; preds = %tailrecurse.i.i
  switch i32 %comparison53, label %if.then83.i.i [
    i32 103, label %if.end80.i.i
    i32 102, label %sw.bb47.i.i
    i32 105, label %sw.bb48.i.i
    i32 104, label %sw.bb49.i.i
    i32 107, label %sw.bb50.i.i
    i32 106, label %sw.bb51.i.i
    i32 112, label %sw.bb52.i.i
  ]

sw.bb47.i.i:                                      ; preds = %if.then45.i.i
  br label %if.end80.i.i

sw.bb48.i.i:                                      ; preds = %if.then45.i.i
  br label %if.end80.i.i

sw.bb49.i.i:                                      ; preds = %if.then45.i.i
  br label %if.end80.i.i

sw.bb50.i.i:                                      ; preds = %if.then45.i.i
  br label %if.end80.i.i

sw.bb51.i.i:                                      ; preds = %if.then45.i.i
  br label %if.end80.i.i

sw.bb52.i.i:                                      ; preds = %if.then45.i.i
  br label %if.end80.i.i

if.else55.i.i:                                    ; preds = %tailrecurse.i.i
  %idxprom128.i.i = zext i32 %bf.clear.i.i to i64
  %29 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 41), align 8, !tbaa !1
  br label %for.cond.i.i

for.cond.i.i:                                     ; preds = %lor.lhs.false.i.i, %if.else55.i.i
  %idxprom128.pn.i.i = phi i64 [ %idxprom128.i.i, %if.else55.i.i ], [ %idxprom58.i.i, %lor.lhs.false.i.i ]
  %wider_mode.0.in.in.i.i = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom128.pn.i.i
  %wider_mode.0.in.i.i = load i8* %wider_mode.0.in.in.i.i, align 1
  %cmp56.i.i = icmp eq i8 %wider_mode.0.in.i.i, 0
  br i1 %cmp56.i.i, label %for.end.i.i, label %for.body.i.i

for.body.i.i:                                     ; preds = %for.cond.i.i
  %idxprom58.i.i = zext i8 %wider_mode.0.in.i.i to i64
  %insn_code.i2.i = getelementptr inbounds %struct.optab* %29, i64 0, i32 1, i64 %idxprom58.i.i, i32 0
  %30 = load i32* %insn_code.i2.i, align 4, !tbaa !10
  %cmp60.i.i = icmp eq i32 %30, 1317
  br i1 %cmp60.i.i, label %lor.lhs.false.i.i, label %if.then68.i.i

lor.lhs.false.i.i:                                ; preds = %for.body.i.i
  %libfunc65.i.i = getelementptr inbounds %struct.optab* %29, i64 0, i32 1, i64 %idxprom58.i.i, i32 1
  %31 = load %struct.rtx_def** %libfunc65.i.i, align 8, !tbaa !21
  %cmp66.i.i = icmp eq %struct.rtx_def* %31, null
  br i1 %cmp66.i.i, label %for.cond.i.i, label %if.then68.i.i

if.then68.i.i:                                    ; preds = %lor.lhs.false.i.i, %for.body.i.i
  %wider_mode.0.le.i.i = zext i8 %wider_mode.0.in.i.i to i32
  %call69.i.i = tail call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %call.i.i, i32 0) #3
  %call70.i.i = tail call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %call1.i.i, i32 0) #3
  %call71.i.i = tail call %struct.rtx_def* @convert_to_mode(i32 %wider_mode.0.le.i.i, %struct.rtx_def* %call69.i.i, i32 0) #3
  %call72.i.i = tail call %struct.rtx_def* @convert_to_mode(i32 %wider_mode.0.le.i.i, %struct.rtx_def* %call70.i.i, i32 0) #3
  br label %tailrecurse.i.i

for.end.i.i:                                      ; preds = %for.cond.i.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 3612, i8* getelementptr inbounds ([22 x i8]* @__FUNCTION__.prepare_float_lib_cmp, i64 0, i64 0)) #6
  unreachable

if.end80.i.i:                                     ; preds = %sw.bb52.i.i, %sw.bb51.i.i, %sw.bb50.i.i, %sw.bb49.i.i, %sw.bb48.i.i, %sw.bb47.i.i, %if.then45.i.i, %sw.bb40.i.i, %sw.bb39.i.i, %sw.bb38.i.i, %sw.bb37.i.i, %sw.bb36.i.i, %sw.bb35.i.i, %if.then33.i.i, %sw.bb28.i.i, %sw.bb27.i.i, %sw.bb26.i.i, %sw.bb25.i.i, %sw.bb24.i.i, %sw.bb23.i.i, %if.then21.i.i, %sw.bb16.i.i, %sw.bb15.i.i, %sw.bb14.i.i, %sw.bb13.i.i, %sw.bb12.i.i, %sw.bb11.i.i, %if.then9.i.i, %sw.bb7.i.i, %sw.bb6.i.i, %sw.bb5.i.i, %sw.bb4.i.i, %sw.bb3.i.i, %sw.bb2.i.i, %if.then.i1.i
  %bf.clear177.i.i = phi i32 [ 13, %sw.bb7.i.i ], [ 13, %sw.bb6.i.i ], [ 13, %sw.bb5.i.i ], [ 13, %sw.bb4.i.i ], [ 13, %sw.bb3.i.i ], [ 13, %sw.bb2.i.i ], [ 15, %sw.bb16.i.i ], [ 15, %sw.bb15.i.i ], [ 15, %sw.bb14.i.i ], [ 15, %sw.bb13.i.i ], [ 15, %sw.bb12.i.i ], [ 15, %sw.bb11.i.i ], [ 16, %sw.bb28.i.i ], [ 16, %sw.bb27.i.i ], [ 16, %sw.bb26.i.i ], [ 16, %sw.bb25.i.i ], [ 16, %sw.bb24.i.i ], [ 16, %sw.bb23.i.i ], [ 17, %sw.bb40.i.i ], [ 17, %sw.bb39.i.i ], [ 17, %sw.bb38.i.i ], [ 17, %sw.bb37.i.i ], [ 17, %sw.bb36.i.i ], [ 17, %sw.bb35.i.i ], [ 18, %sw.bb52.i.i ], [ 18, %sw.bb51.i.i ], [ 18, %sw.bb50.i.i ], [ 18, %sw.bb49.i.i ], [ 18, %sw.bb48.i.i ], [ 18, %sw.bb47.i.i ], [ 13, %if.then.i1.i ], [ 15, %if.then9.i.i ], [ 16, %if.then21.i.i ], [ 17, %if.then33.i.i ], [ 18, %if.then45.i.i ]
  %32 = phi i32 [ %comparison53, %sw.bb7.i.i ], [ %comparison53, %sw.bb6.i.i ], [ %comparison53, %sw.bb5.i.i ], [ %comparison53, %sw.bb4.i.i ], [ %comparison53, %sw.bb3.i.i ], [ %comparison53, %sw.bb2.i.i ], [ %comparison53, %sw.bb16.i.i ], [ %comparison53, %sw.bb15.i.i ], [ %comparison53, %sw.bb14.i.i ], [ %comparison53, %sw.bb13.i.i ], [ %comparison53, %sw.bb12.i.i ], [ %comparison53, %sw.bb11.i.i ], [ %comparison53, %sw.bb28.i.i ], [ %comparison53, %sw.bb27.i.i ], [ %comparison53, %sw.bb26.i.i ], [ %comparison53, %sw.bb25.i.i ], [ %comparison53, %sw.bb24.i.i ], [ %comparison53, %sw.bb23.i.i ], [ %comparison53, %sw.bb40.i.i ], [ %comparison53, %sw.bb39.i.i ], [ %comparison53, %sw.bb38.i.i ], [ %comparison53, %sw.bb37.i.i ], [ %comparison53, %sw.bb36.i.i ], [ %comparison53, %sw.bb35.i.i ], [ %comparison53, %sw.bb52.i.i ], [ %comparison53, %sw.bb51.i.i ], [ %comparison53, %sw.bb50.i.i ], [ %comparison53, %sw.bb49.i.i ], [ %comparison53, %sw.bb48.i.i ], [ %comparison53, %sw.bb47.i.i ], [ 103, %if.then.i1.i ], [ 103, %if.then9.i.i ], [ 103, %if.then21.i.i ], [ 103, %if.then33.i.i ], [ 103, %if.then45.i.i ]
  %libfunc.0.in.i.i = phi %struct.rtx_def** [ getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 30), %sw.bb7.i.i ], [ getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 29), %sw.bb6.i.i ], [ getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 28), %sw.bb5.i.i ], [ getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 27), %sw.bb4.i.i ], [ getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 26), %sw.bb3.i.i ], [ getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 25), %sw.bb2.i.i ], [ getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 37), %sw.bb16.i.i ], [ getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 36), %sw.bb15.i.i ], [ getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 35), %sw.bb14.i.i ], [ getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 34), %sw.bb13.i.i ], [ getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 33), %sw.bb12.i.i ], [ getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 32), %sw.bb11.i.i ], [ getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 44), %sw.bb28.i.i ], [ getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 43), %sw.bb27.i.i ], [ getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 42), %sw.bb26.i.i ], [ getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 41), %sw.bb25.i.i ], [ getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 40), %sw.bb24.i.i ], [ getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 39), %sw.bb23.i.i ], [ getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 51), %sw.bb40.i.i ], [ getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 50), %sw.bb39.i.i ], [ getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 49), %sw.bb38.i.i ], [ getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 48), %sw.bb37.i.i ], [ getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 47), %sw.bb36.i.i ], [ getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 46), %sw.bb35.i.i ], [ getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 58), %sw.bb52.i.i ], [ getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 57), %sw.bb51.i.i ], [ getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 56), %sw.bb50.i.i ], [ getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 55), %sw.bb49.i.i ], [ getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 54), %sw.bb48.i.i ], [ getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 53), %sw.bb47.i.i ], [ getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 24), %if.then.i1.i ], [ getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 31), %if.then9.i.i ], [ getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 38), %if.then21.i.i ], [ getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 45), %if.then33.i.i ], [ getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 52), %if.then45.i.i ]
  %libfunc.0.i.i = load %struct.rtx_def** %libfunc.0.in.i.i, align 8
  %cmp81.i.i = icmp eq %struct.rtx_def* %libfunc.0.i.i, null
  br i1 %cmp81.i.i, label %if.then83.i.i, label %if.end84.i.i

if.then83.i.i:                                    ; preds = %if.end80.i.i, %if.then45.i.i, %if.then33.i.i, %if.then21.i.i, %if.then9.i.i, %if.then.i1.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 3616, i8* getelementptr inbounds ([22 x i8]* @__FUNCTION__.prepare_float_lib_cmp, i64 0, i64 0)) #6
  unreachable

if.end84.i.i:                                     ; preds = %if.end80.i.i
  %33 = load i32* @word_mode, align 4, !tbaa !9
  tail call void (%struct.rtx_def*, i32, i32, i32, ...)* @emit_library_call(%struct.rtx_def* %libfunc.0.i.i, i32 3, i32 %33, i32 2, %struct.rtx_def* %call.i.i, i32 %bf.clear177.i.i, %struct.rtx_def* %call1.i.i, i32 %bf.clear177.i.i) #3
  %34 = load i32* @word_mode, align 4, !tbaa !9
  %call85.i.i = tail call %struct.rtx_def* @gen_reg_rtx(i32 %34) #3
  %35 = load i32* @word_mode, align 4, !tbaa !9
  %call86.i.i = tail call %struct.rtx_def* @hard_libcall_value(i32 %35) #3
  %call87.i.i = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call85.i.i, %struct.rtx_def* %call86.i.i) #3
  %36 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %37 = load i32* @word_mode, align 4, !tbaa !9
  %cmp88.i.i = icmp eq i32 %32, 112
  %.comparison53 = select i1 %cmp88.i.i, i32 102, i32 %comparison53
  br label %prepare_cmp_insn.exit

if.else.i:                                        ; preds = %if.end187.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 3238, i8* getelementptr inbounds ([17 x i8]* @__FUNCTION__.prepare_cmp_insn, i64 0, i64 0)) #6
  unreachable

prepare_cmp_insn.exit:                            ; preds = %if.end.i.i, %if.end84.i.i, %if.end144.i, %can_compare_p.exit.i, %if.end183.i
  %comparison51 = phi i32 [ %comparison53, %if.end144.i ], [ %comparison53, %can_compare_p.exit.i ], [ %comparison53, %if.end183.i ], [ %.comparison53, %if.end84.i.i ], [ %comparison53, %if.end.i.i ]
  %mode49 = phi i32 [ %bf.cast.i, %if.end144.i ], [ %mode, %can_compare_p.exit.i ], [ %27, %if.end183.i ], [ %37, %if.end84.i.i ], [ %mode, %if.end.i.i ]
  %unsignedp48 = phi i32 [ %unsignedp, %if.end144.i ], [ %unsignedp, %can_compare_p.exit.i ], [ %unsignedp, %if.end183.i ], [ 0, %if.end84.i.i ], [ %unsignedp, %if.end.i.i ]
  %x45 = phi %struct.rtx_def* [ %call148.i, %if.end144.i ], [ %x.2.i, %can_compare_p.exit.i ], [ %call184.i, %if.end183.i ], [ %call85.i.i, %if.end84.i.i ], [ %x.2.i, %if.end.i.i ]
  %y42 = phi %struct.rtx_def* [ %13, %if.end144.i ], [ %y.1.i, %can_compare_p.exit.i ], [ %26, %if.end183.i ], [ %36, %if.end84.i.i ], [ %y.1.i, %if.end.i.i ]
  %call.i14 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 %comparison51, i32 %mode49, %struct.rtx_def* %x45, %struct.rtx_def* %y42) #3
  %idxprom.i15 = sext i32 %mode49 to i64
  %arrayidx.i16 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom.i15
  %38 = load i32* %arrayidx.i16, align 4, !tbaa !9
  %39 = getelementptr inbounds %struct.rtx_def* %call.i14, i64 0, i32 0
  %tobool.i17 = icmp ne %struct.rtx_def* %label, null
  %arrayidx21.i = getelementptr inbounds [3 x [59 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0, i64 %idxprom.i15
  br label %do.body.i

do.body.i:                                        ; preds = %if.end67.i, %prepare_cmp_insn.exit
  %wider_mode.0.i = phi i32 [ %mode49, %prepare_cmp_insn.exit ], [ %conv.i30, %if.end67.i ]
  %bf.load.i18 = load i32* %39, align 8
  %bf.value.i = shl i32 %wider_mode.0.i, 16
  %bf.shl.i = and i32 %bf.value.i, 16711680
  %bf.clear.i19 = and i32 %bf.load.i18, -16711681
  %bf.set.i = or i32 %bf.clear.i19, %bf.shl.i
  store i32 %bf.set.i, i32* %39, align 8
  %idxprom1.i = sext i32 %wider_mode.0.i to i64
  br i1 %tobool.i17, label %if.then.i21, label %if.end15.i

if.then.i21:                                      ; preds = %do.body.i
  %40 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 45), align 8, !tbaa !1
  %insn_code.i = getelementptr inbounds %struct.optab* %40, i64 0, i32 1, i64 %idxprom1.i, i32 0
  %41 = load i32* %insn_code.i, align 4, !tbaa !10
  %cmp.i20 = icmp eq i32 %41, 1317
  br i1 %cmp.i20, label %if.end15.i, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %if.then.i21
  %idxprom3.i = zext i32 %41 to i64
  %operand.i = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom3.i, i32 3
  %42 = load %struct.insn_operand_data** %operand.i, align 8, !tbaa !12
  %predicate.i = getelementptr inbounds %struct.insn_operand_data* %42, i64 0, i32 0
  %43 = load i32 (%struct.rtx_def*, i32)** %predicate.i, align 8, !tbaa !14
  %call6.i = tail call i32 %43(%struct.rtx_def* %call.i14, i32 %wider_mode.0.i) #3
  %tobool7.i = icmp eq i32 %call6.i, 0
  br i1 %tobool7.i, label %if.end15.i, label %if.then8.i

if.then8.i:                                       ; preds = %land.lhs.true.i
  %call.i.i22 = tail call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %x45, i32 0) #3
  %cmp.i.i23 = icmp eq i32 %wider_mode.0.i, %mode49
  br i1 %cmp.i.i23, label %if.end.i.i26, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.then8.i
  %call1.i.i24 = tail call %struct.rtx_def* @convert_modes(i32 %wider_mode.0.i, i32 %mode49, %struct.rtx_def* %call.i.i22, i32 %unsignedp48) #3
  br label %if.end.i.i26

if.end.i.i26:                                     ; preds = %if.then.i.i, %if.then8.i
  %x.addr.0.i.i = phi %struct.rtx_def* [ %call1.i.i24, %if.then.i.i ], [ %call.i.i22, %if.then8.i ]
  %idxprom2.i.i = sext i32 %41 to i64
  %operand.i.i = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom2.i.i, i32 3
  %44 = load %struct.insn_operand_data** %operand.i.i, align 8, !tbaa !12
  %predicate.i.i = getelementptr inbounds %struct.insn_operand_data* %44, i64 1, i32 0
  %45 = load i32 (%struct.rtx_def*, i32)** %predicate.i.i, align 8, !tbaa !14
  %mode9.i.i = getelementptr inbounds %struct.insn_operand_data* %44, i64 1, i32 2
  %bf.load.i.i25 = load i16* %mode9.i.i, align 8
  %bf.cast.i.i = zext i16 %bf.load.i.i25 to i32
  %call10.i.i = tail call i32 %45(%struct.rtx_def* %x.addr.0.i.i, i32 %bf.cast.i.i) #3
  %tobool.i.i = icmp eq i32 %call10.i.i, 0
  br i1 %tobool.i.i, label %if.then11.i.i, label %prepare_operand.exit.i

if.then11.i.i:                                    ; preds = %if.end.i.i26
  %bf.load18.i.i = load i16* %mode9.i.i, align 8
  %bf.cast19.i.i = zext i16 %bf.load18.i.i to i32
  %call20.i.i = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast19.i.i, %struct.rtx_def* %x.addr.0.i.i) #3
  br label %prepare_operand.exit.i

prepare_operand.exit.i:                           ; preds = %if.then11.i.i, %if.end.i.i26
  %x.addr.1.i.i = phi %struct.rtx_def* [ %x.addr.0.i.i, %if.end.i.i26 ], [ %call20.i.i, %if.then11.i.i ]
  %call.i130.i = tail call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %y42, i32 0) #3
  br i1 %cmp.i.i23, label %if.end.i143.i, label %if.then.i133.i

if.then.i133.i:                                   ; preds = %prepare_operand.exit.i
  %call1.i132.i = tail call %struct.rtx_def* @convert_modes(i32 %wider_mode.0.i, i32 %mode49, %struct.rtx_def* %call.i130.i, i32 %unsignedp48) #3
  br label %if.end.i143.i

if.end.i143.i:                                    ; preds = %if.then.i133.i, %prepare_operand.exit.i
  %x.addr.0.i134.i = phi %struct.rtx_def* [ %call1.i132.i, %if.then.i133.i ], [ %call.i130.i, %prepare_operand.exit.i ]
  %predicate.i137.i = getelementptr inbounds %struct.insn_operand_data* %44, i64 2, i32 0
  %46 = load i32 (%struct.rtx_def*, i32)** %predicate.i137.i, align 8, !tbaa !14
  %mode9.i138.i = getelementptr inbounds %struct.insn_operand_data* %44, i64 2, i32 2
  %bf.load.i139.i = load i16* %mode9.i138.i, align 8
  %bf.cast.i140.i = zext i16 %bf.load.i139.i to i32
  %call10.i141.i = tail call i32 %46(%struct.rtx_def* %x.addr.0.i134.i, i32 %bf.cast.i140.i) #3
  %tobool.i142.i = icmp eq i32 %call10.i141.i, 0
  br i1 %tobool.i142.i, label %if.then11.i147.i, label %prepare_operand.exit149.i

if.then11.i147.i:                                 ; preds = %if.end.i143.i
  %bf.load18.i144.i = load i16* %mode9.i138.i, align 8
  %bf.cast19.i145.i = zext i16 %bf.load18.i144.i to i32
  %call20.i146.i = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast19.i145.i, %struct.rtx_def* %x.addr.0.i134.i) #3
  br label %prepare_operand.exit149.i

prepare_operand.exit149.i:                        ; preds = %if.then11.i147.i, %if.end.i143.i
  %x.addr.1.i148.i = phi %struct.rtx_def* [ %x.addr.0.i134.i, %if.end.i143.i ], [ %call20.i146.i, %if.then11.i147.i ]
  %genfun.i = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom2.i.i, i32 2
  %47 = load %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun.i, align 8, !tbaa !16
  %call13.i = tail call %struct.rtx_def* (%struct.rtx_def*, ...)* %47(%struct.rtx_def* %call.i14, %struct.rtx_def* %x.addr.1.i.i, %struct.rtx_def* %x.addr.1.i148.i, %struct.rtx_def* %label) #3
  %call14.i = tail call %struct.rtx_def* @emit_jump_insn(%struct.rtx_def* %call13.i) #3
  br label %emit_cmp_and_jump_insn_1.exit

if.end15.i:                                       ; preds = %land.lhs.true.i, %if.then.i21, %do.body.i
  %48 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 43), align 8, !tbaa !1
  %insn_code19.i = getelementptr inbounds %struct.optab* %48, i64 0, i32 1, i64 %idxprom1.i, i32 0
  %49 = load i32* %insn_code19.i, align 4, !tbaa !10
  %50 = load %struct.rtx_def** %arrayidx21.i, align 8, !tbaa !1
  %cmp22.i = icmp eq %struct.rtx_def* %50, %y42
  %cmp24.i = icmp ne i32 %49, 1317
  %or.cond.i27 = and i1 %cmp22.i, %cmp24.i
  br i1 %or.cond.i27, label %if.then25.i, label %if.end39.i

if.then25.i:                                      ; preds = %if.end15.i
  %call.i150.i = tail call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %x45, i32 0) #3
  %cmp.i151.i = icmp eq i32 %wider_mode.0.i, %mode49
  br i1 %cmp.i151.i, label %if.end.i163.i, label %if.then.i153.i

if.then.i153.i:                                   ; preds = %if.then25.i
  %call1.i152.i = tail call %struct.rtx_def* @convert_modes(i32 %wider_mode.0.i, i32 %mode49, %struct.rtx_def* %call.i150.i, i32 %unsignedp48) #3
  br label %if.end.i163.i

if.end.i163.i:                                    ; preds = %if.then.i153.i, %if.then25.i
  %x.addr.0.i154.i = phi %struct.rtx_def* [ %call1.i152.i, %if.then.i153.i ], [ %call.i150.i, %if.then25.i ]
  %idxprom2.i155.i = sext i32 %49 to i64
  %operand.i156.i = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom2.i155.i, i32 3
  %51 = load %struct.insn_operand_data** %operand.i156.i, align 8, !tbaa !12
  %predicate.i157.i = getelementptr inbounds %struct.insn_operand_data* %51, i64 0, i32 0
  %52 = load i32 (%struct.rtx_def*, i32)** %predicate.i157.i, align 8, !tbaa !14
  %mode9.i158.i = getelementptr inbounds %struct.insn_operand_data* %51, i64 0, i32 2
  %bf.load.i159.i = load i16* %mode9.i158.i, align 8
  %bf.cast.i160.i = zext i16 %bf.load.i159.i to i32
  %call10.i161.i = tail call i32 %52(%struct.rtx_def* %x.addr.0.i154.i, i32 %bf.cast.i160.i) #3
  %tobool.i162.i = icmp eq i32 %call10.i161.i, 0
  br i1 %tobool.i162.i, label %if.then11.i167.i, label %prepare_operand.exit169.i

if.then11.i167.i:                                 ; preds = %if.end.i163.i
  %bf.load18.i164.i = load i16* %mode9.i158.i, align 8
  %bf.cast19.i165.i = zext i16 %bf.load18.i164.i to i32
  %call20.i166.i = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast19.i165.i, %struct.rtx_def* %x.addr.0.i154.i) #3
  br label %prepare_operand.exit169.i

prepare_operand.exit169.i:                        ; preds = %if.then11.i167.i, %if.end.i163.i
  %x.addr.1.i168.i = phi %struct.rtx_def* [ %x.addr.0.i154.i, %if.end.i163.i ], [ %call20.i166.i, %if.then11.i167.i ]
  %genfun29.i = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom2.i155.i, i32 2
  %53 = load %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun29.i, align 8, !tbaa !16
  %call30.i = tail call %struct.rtx_def* (%struct.rtx_def*, ...)* %53(%struct.rtx_def* %x.addr.1.i168.i) #3
  %call31.i28 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call30.i) #3
  br i1 %tobool.i17, label %if.then33.i, label %emit_cmp_and_jump_insn_1.exit

if.then33.i:                                      ; preds = %prepare_operand.exit169.i
  %idxprom34.i = sext i32 %comparison51 to i64
  %arrayidx35.i = getelementptr inbounds [153 x %struct.rtx_def* (%struct.rtx_def*)*]* @bcc_gen_fctn, i64 0, i64 %idxprom34.i
  %54 = load %struct.rtx_def* (%struct.rtx_def*)** %arrayidx35.i, align 8, !tbaa !1
  %call36.i = tail call %struct.rtx_def* %54(%struct.rtx_def* %label) #3
  %call37.i29 = tail call %struct.rtx_def* @emit_jump_insn(%struct.rtx_def* %call36.i) #3
  br label %emit_cmp_and_jump_insn_1.exit

if.end39.i:                                       ; preds = %if.end15.i
  %55 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 41), align 8, !tbaa !1
  %insn_code43.i = getelementptr inbounds %struct.optab* %55, i64 0, i32 1, i64 %idxprom1.i, i32 0
  %56 = load i32* %insn_code43.i, align 4, !tbaa !10
  %cmp44.i = icmp eq i32 %56, 1317
  br i1 %cmp44.i, label %if.end60.i, label %if.then45.i

if.then45.i:                                      ; preds = %if.end39.i
  %call.i170.i = tail call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %x45, i32 0) #3
  %cmp.i171.i = icmp eq i32 %wider_mode.0.i, %mode49
  br i1 %cmp.i171.i, label %if.end.i183.i, label %if.then.i173.i

if.then.i173.i:                                   ; preds = %if.then45.i
  %call1.i172.i = tail call %struct.rtx_def* @convert_modes(i32 %wider_mode.0.i, i32 %mode49, %struct.rtx_def* %call.i170.i, i32 %unsignedp48) #3
  br label %if.end.i183.i

if.end.i183.i:                                    ; preds = %if.then.i173.i, %if.then45.i
  %x.addr.0.i174.i = phi %struct.rtx_def* [ %call1.i172.i, %if.then.i173.i ], [ %call.i170.i, %if.then45.i ]
  %idxprom2.i175.i = sext i32 %56 to i64
  %operand.i176.i = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom2.i175.i, i32 3
  %57 = load %struct.insn_operand_data** %operand.i176.i, align 8, !tbaa !12
  %predicate.i177.i = getelementptr inbounds %struct.insn_operand_data* %57, i64 0, i32 0
  %58 = load i32 (%struct.rtx_def*, i32)** %predicate.i177.i, align 8, !tbaa !14
  %mode9.i178.i = getelementptr inbounds %struct.insn_operand_data* %57, i64 0, i32 2
  %bf.load.i179.i = load i16* %mode9.i178.i, align 8
  %bf.cast.i180.i = zext i16 %bf.load.i179.i to i32
  %call10.i181.i = tail call i32 %58(%struct.rtx_def* %x.addr.0.i174.i, i32 %bf.cast.i180.i) #3
  %tobool.i182.i = icmp eq i32 %call10.i181.i, 0
  br i1 %tobool.i182.i, label %if.then11.i187.i, label %prepare_operand.exit189.i

if.then11.i187.i:                                 ; preds = %if.end.i183.i
  %bf.load18.i184.i = load i16* %mode9.i178.i, align 8
  %bf.cast19.i185.i = zext i16 %bf.load18.i184.i to i32
  %call20.i186.i = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast19.i185.i, %struct.rtx_def* %x.addr.0.i174.i) #3
  br label %prepare_operand.exit189.i

prepare_operand.exit189.i:                        ; preds = %if.then11.i187.i, %if.end.i183.i
  %x.addr.1.i188.i = phi %struct.rtx_def* [ %x.addr.0.i174.i, %if.end.i183.i ], [ %call20.i186.i, %if.then11.i187.i ]
  %call.i190.i = tail call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %y42, i32 0) #3
  br i1 %cmp.i171.i, label %if.end.i203.i, label %if.then.i193.i

if.then.i193.i:                                   ; preds = %prepare_operand.exit189.i
  %call1.i192.i = tail call %struct.rtx_def* @convert_modes(i32 %wider_mode.0.i, i32 %mode49, %struct.rtx_def* %call.i190.i, i32 %unsignedp48) #3
  br label %if.end.i203.i

if.end.i203.i:                                    ; preds = %if.then.i193.i, %prepare_operand.exit189.i
  %x.addr.0.i194.i = phi %struct.rtx_def* [ %call1.i192.i, %if.then.i193.i ], [ %call.i190.i, %prepare_operand.exit189.i ]
  %predicate.i197.i = getelementptr inbounds %struct.insn_operand_data* %57, i64 1, i32 0
  %59 = load i32 (%struct.rtx_def*, i32)** %predicate.i197.i, align 8, !tbaa !14
  %mode9.i198.i = getelementptr inbounds %struct.insn_operand_data* %57, i64 1, i32 2
  %bf.load.i199.i = load i16* %mode9.i198.i, align 8
  %bf.cast.i200.i = zext i16 %bf.load.i199.i to i32
  %call10.i201.i = tail call i32 %59(%struct.rtx_def* %x.addr.0.i194.i, i32 %bf.cast.i200.i) #3
  %tobool.i202.i = icmp eq i32 %call10.i201.i, 0
  br i1 %tobool.i202.i, label %if.then11.i207.i, label %prepare_operand.exit209.i

if.then11.i207.i:                                 ; preds = %if.end.i203.i
  %bf.load18.i204.i = load i16* %mode9.i198.i, align 8
  %bf.cast19.i205.i = zext i16 %bf.load18.i204.i to i32
  %call20.i206.i = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast19.i205.i, %struct.rtx_def* %x.addr.0.i194.i) #3
  br label %prepare_operand.exit209.i

prepare_operand.exit209.i:                        ; preds = %if.then11.i207.i, %if.end.i203.i
  %x.addr.1.i208.i = phi %struct.rtx_def* [ %x.addr.0.i194.i, %if.end.i203.i ], [ %call20.i206.i, %if.then11.i207.i ]
  %genfun50.i = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom2.i175.i, i32 2
  %60 = load %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun50.i, align 8, !tbaa !16
  %call51.i = tail call %struct.rtx_def* (%struct.rtx_def*, ...)* %60(%struct.rtx_def* %x.addr.1.i188.i, %struct.rtx_def* %x.addr.1.i208.i) #3
  %call52.i = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call51.i) #3
  br i1 %tobool.i17, label %if.then54.i, label %emit_cmp_and_jump_insn_1.exit

if.then54.i:                                      ; preds = %prepare_operand.exit209.i
  %idxprom55.i = sext i32 %comparison51 to i64
  %arrayidx56.i = getelementptr inbounds [153 x %struct.rtx_def* (%struct.rtx_def*)*]* @bcc_gen_fctn, i64 0, i64 %idxprom55.i
  %61 = load %struct.rtx_def* (%struct.rtx_def*)** %arrayidx56.i, align 8, !tbaa !1
  %call57.i = tail call %struct.rtx_def* %61(%struct.rtx_def* %label) #3
  %call58.i = tail call %struct.rtx_def* @emit_jump_insn(%struct.rtx_def* %call57.i) #3
  br label %emit_cmp_and_jump_insn_1.exit

if.end60.i:                                       ; preds = %if.end39.i
  switch i32 %38, label %do.end.i [
    i32 6, label %if.end67.i
    i32 2, label %if.end67.i
    i32 1, label %if.end67.i
  ]

if.end67.i:                                       ; preds = %if.end60.i, %if.end60.i, %if.end60.i
  %arrayidx69.i = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom1.i
  %62 = load i8* %arrayidx69.i, align 1, !tbaa !9
  %conv.i30 = zext i8 %62 to i32
  %cmp70.i = icmp eq i8 %62, 0
  br i1 %cmp70.i, label %do.end.i, label %do.body.i

do.end.i:                                         ; preds = %if.end67.i, %if.end60.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 3333, i8* getelementptr inbounds ([25 x i8]* @__FUNCTION__.emit_cmp_and_jump_insn_1, i64 0, i64 0)) #6
  unreachable

emit_cmp_and_jump_insn_1.exit:                    ; preds = %prepare_operand.exit149.i, %prepare_operand.exit169.i, %if.then33.i, %prepare_operand.exit209.i, %if.then54.i
  ret void
}

declare i32 @swap_commutative_operands_p(%struct.rtx_def*, %struct.rtx_def*) #2

declare i32 @swap_condition(i32) #2

declare void @emit_queue() #2

declare i32 @unsigned_condition(i32) #2

; Function Attrs: nounwind uwtable
define void @emit_cmp_insn(%struct.rtx_def* %x, %struct.rtx_def* %y, i32 %comparison, %struct.rtx_def* %size, i32 %mode, i32 %unsignedp) #0 {
entry:
  tail call void @emit_cmp_and_jump_insns(%struct.rtx_def* %x, %struct.rtx_def* %y, i32 %comparison, %struct.rtx_def* %size, i32 %mode, i32 %unsignedp, %struct.rtx_def* null)
  ret void
}

; Function Attrs: nounwind uwtable
define void @emit_indirect_jump(%struct.rtx_def* %loc) #0 {
entry:
  %0 = load %struct.insn_operand_data** getelementptr inbounds ([0 x %struct.insn_data]* @insn_data, i64 0, i64 1159, i32 3), align 8, !tbaa !12
  %predicate = getelementptr inbounds %struct.insn_operand_data* %0, i64 0, i32 0
  %1 = load i32 (%struct.rtx_def*, i32)** %predicate, align 8, !tbaa !14
  %2 = load i32* @target_flags, align 4, !tbaa !7
  %and = lshr i32 %2, 25
  %3 = and i32 %and, 1
  %4 = or i32 %3, 4
  %call = tail call i32 %1(%struct.rtx_def* %loc, i32 %4) #3
  %tobool1 = icmp eq i32 %call, 0
  br i1 %tobool1, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %5 = load i32* @target_flags, align 4, !tbaa !7
  %and2 = lshr i32 %5, 25
  %6 = and i32 %and2, 1
  %7 = or i32 %6, 4
  %call5 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %7, %struct.rtx_def* %loc) #3
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %loc.addr.0 = phi %struct.rtx_def* [ %loc, %entry ], [ %call5, %if.then ]
  %call6 = tail call %struct.rtx_def* @gen_indirect_jump(%struct.rtx_def* %loc.addr.0) #3
  %call7 = tail call %struct.rtx_def* @emit_jump_insn(%struct.rtx_def* %call6) #3
  %call8 = tail call %struct.rtx_def* @emit_barrier() #3
  ret void
}

declare %struct.rtx_def* @emit_jump_insn(%struct.rtx_def*) #2

declare %struct.rtx_def* @gen_indirect_jump(%struct.rtx_def*) #2

declare %struct.rtx_def* @emit_barrier() #2

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @emit_conditional_move(%struct.rtx_def* %target, i32 %code, %struct.rtx_def* %op0, %struct.rtx_def* %op1, i32 %cmode, %struct.rtx_def* %op2, %struct.rtx_def* %op3, i32 %mode, i32 %unsignedp) #0 {
entry:
  %call = tail call i32 @swap_commutative_operands_p(%struct.rtx_def* %op0, %struct.rtx_def* %op1) #3
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %call1 = tail call i32 @swap_condition(i32 %code) #3
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %op1.addr.0 = phi %struct.rtx_def* [ %op0, %if.then ], [ %op1, %entry ]
  %op0.addr.0 = phi %struct.rtx_def* [ %op1, %if.then ], [ %op0, %entry ]
  %code.addr.0 = phi i32 [ %call1, %if.then ], [ %code, %entry ]
  switch i32 %code.addr.0, label %if.end18 [
    i32 107, label %land.lhs.true
    i32 105, label %land.lhs.true7
  ]

land.lhs.true:                                    ; preds = %if.end
  %0 = getelementptr inbounds %struct.rtx_def* %op1.addr.0, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp2 = icmp eq i32 %bf.clear, 54
  br i1 %cmp2, label %land.lhs.true3, label %if.end18

land.lhs.true3:                                   ; preds = %land.lhs.true
  %rtwint = getelementptr inbounds %struct.rtx_def* %op1.addr.0, i64 0, i32 1, i64 0, i32 0
  %1 = load i64* %rtwint, align 8, !tbaa !19
  %cmp4 = icmp eq i64 %1, 1
  %2 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %.op1.addr.0194 = select i1 %cmp4, %struct.rtx_def* %2, %struct.rtx_def* %op1.addr.0
  %. = select i1 %cmp4, i32 106, i32 107
  br label %if.end18

land.lhs.true7:                                   ; preds = %if.end
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %op1.addr.0, i64 0, i32 0
  %bf.load8.pre = load i32* %.phi.trans.insert, align 8
  %bf.clear9 = and i32 %bf.load8.pre, 65535
  %cmp10 = icmp eq i32 %bf.clear9, 54
  br i1 %cmp10, label %land.lhs.true11, label %if.end18

land.lhs.true11:                                  ; preds = %land.lhs.true7
  %rtwint14 = getelementptr inbounds %struct.rtx_def* %op1.addr.0, i64 0, i32 1, i64 0, i32 0
  %3 = load i64* %rtwint14, align 8, !tbaa !19
  %cmp15 = icmp eq i64 %3, -1
  %4 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %.op1.addr.0 = select i1 %cmp15, %struct.rtx_def* %4, %struct.rtx_def* %op1.addr.0
  %.code.addr.0 = select i1 %cmp15, i32 104, i32 %code.addr.0
  br label %if.end18

if.end18:                                         ; preds = %land.lhs.true3, %land.lhs.true, %land.lhs.true11, %if.end, %land.lhs.true7
  %op1.addr.1 = phi %struct.rtx_def* [ %op1.addr.0, %land.lhs.true7 ], [ %op1.addr.0, %if.end ], [ %.op1.addr.0, %land.lhs.true11 ], [ %op1.addr.0, %land.lhs.true ], [ %.op1.addr.0194, %land.lhs.true3 ]
  %code.addr.1 = phi i32 [ 105, %land.lhs.true7 ], [ %code.addr.0, %if.end ], [ %.code.addr.0, %land.lhs.true11 ], [ 107, %land.lhs.true ], [ %., %land.lhs.true3 ]
  %cmp19 = icmp eq i32 %cmode, 0
  br i1 %cmp19, label %if.then20, label %if.end23

if.then20:                                        ; preds = %if.end18
  %5 = getelementptr inbounds %struct.rtx_def* %op0.addr.0, i64 0, i32 0
  %bf.load21 = load i32* %5, align 8
  %bf.lshr = lshr i32 %bf.load21, 16
  %bf.clear22 = and i32 %bf.lshr, 255
  br label %if.end23

if.end23:                                         ; preds = %if.then20, %if.end18
  %cmode.addr.0 = phi i32 [ %bf.clear22, %if.then20 ], [ %cmode, %if.end18 ]
  %call24 = tail call i32 @swap_commutative_operands_p(%struct.rtx_def* %op2, %struct.rtx_def* %op3) #3
  %tobool25 = icmp eq i32 %call24, 0
  br i1 %tobool25, label %if.end30, label %land.lhs.true26

land.lhs.true26:                                  ; preds = %if.end23
  %call27 = tail call i32 @reversed_comparison_code_parts(i32 %code.addr.1, %struct.rtx_def* %op0.addr.0, %struct.rtx_def* %op1.addr.1, %struct.rtx_def* null) #3
  %cmp28 = icmp eq i32 %call27, 0
  %op2.op3 = select i1 %cmp28, %struct.rtx_def* %op2, %struct.rtx_def* %op3
  %op3.op2 = select i1 %cmp28, %struct.rtx_def* %op3, %struct.rtx_def* %op2
  %code.addr.1.call27 = select i1 %cmp28, i32 %code.addr.1, i32 %call27
  br label %if.end30

if.end30:                                         ; preds = %land.lhs.true26, %if.end23
  %op2.addr.0 = phi %struct.rtx_def* [ %op2, %if.end23 ], [ %op2.op3, %land.lhs.true26 ]
  %op3.addr.0 = phi %struct.rtx_def* [ %op3, %if.end23 ], [ %op3.op2, %land.lhs.true26 ]
  %code.addr.2 = phi i32 [ %code.addr.1, %if.end23 ], [ %code.addr.1.call27, %land.lhs.true26 ]
  %cmp31 = icmp eq i32 %mode, 0
  br i1 %cmp31, label %if.then32, label %if.end36

if.then32:                                        ; preds = %if.end30
  %6 = getelementptr inbounds %struct.rtx_def* %op2.addr.0, i64 0, i32 0
  %bf.load33 = load i32* %6, align 8
  %bf.lshr34 = lshr i32 %bf.load33, 16
  %bf.clear35 = and i32 %bf.lshr34, 255
  br label %if.end36

if.end36:                                         ; preds = %if.then32, %if.end30
  %mode.addr.0 = phi i32 [ %bf.clear35, %if.then32 ], [ %mode, %if.end30 ]
  %idxprom = zext i32 %mode.addr.0 to i64
  %arrayidx37 = getelementptr inbounds [59 x i32]* @movcc_gen_code, i64 0, i64 %idxprom
  %7 = load i32* %arrayidx37, align 4, !tbaa !9
  %cmp38 = icmp eq i32 %7, 1317
  br i1 %cmp38, label %return, label %if.end40

if.end40:                                         ; preds = %if.end36
  %8 = load i32* @flag_force_mem, align 4, !tbaa !7
  %tobool41 = icmp eq i32 %8, 0
  br i1 %tobool41, label %if.end45, label %if.then42

if.then42:                                        ; preds = %if.end40
  %call43 = tail call %struct.rtx_def* @force_not_mem(%struct.rtx_def* %op2.addr.0) #3
  %call44 = tail call %struct.rtx_def* @force_not_mem(%struct.rtx_def* %op3.addr.0) #3
  br label %if.end45

if.end45:                                         ; preds = %if.end40, %if.then42
  %op2.addr.1 = phi %struct.rtx_def* [ %call43, %if.then42 ], [ %op2.addr.0, %if.end40 ]
  %op3.addr.1 = phi %struct.rtx_def* [ %call44, %if.then42 ], [ %op3.addr.0, %if.end40 ]
  %tobool46 = icmp eq %struct.rtx_def* %target, null
  br i1 %tobool46, label %if.else49, label %if.then47

if.then47:                                        ; preds = %if.end45
  %call48 = tail call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %target, i32 1) #3
  br label %if.end51

if.else49:                                        ; preds = %if.end45
  %call50 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode.addr.0) #3
  br label %if.end51

if.end51:                                         ; preds = %if.else49, %if.then47
  %target.addr.0 = phi %struct.rtx_def* [ %call48, %if.then47 ], [ %call50, %if.else49 ]
  tail call void @emit_queue() #3
  %call52 = tail call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %op2.addr.1, i32 0) #3
  %call53 = tail call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %op3.addr.1, i32 0) #3
  %idxprom54 = zext i32 %7 to i64
  %operand = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom54, i32 3
  %9 = load %struct.insn_operand_data** %operand, align 8, !tbaa !12
  %predicate = getelementptr inbounds %struct.insn_operand_data* %9, i64 0, i32 0
  %10 = load i32 (%struct.rtx_def*, i32)** %predicate, align 8, !tbaa !14
  %mode61 = getelementptr inbounds %struct.insn_operand_data* %9, i64 0, i32 2
  %bf.load62 = load i16* %mode61, align 8
  %bf.cast = zext i16 %bf.load62 to i32
  %call63 = tail call i32 %10(%struct.rtx_def* %target.addr.0, i32 %bf.cast) #3
  %tobool64 = icmp eq i32 %call63, 0
  br i1 %tobool64, label %if.then65, label %if.end74

if.then65:                                        ; preds = %if.end51
  %bf.load71 = load i16* %mode61, align 8
  %bf.cast72 = zext i16 %bf.load71 to i32
  %call73 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.cast72) #3
  br label %if.end74

if.end74:                                         ; preds = %if.end51, %if.then65
  %subtarget.0 = phi %struct.rtx_def* [ %target.addr.0, %if.end51 ], [ %call73, %if.then65 ]
  %predicate79 = getelementptr inbounds %struct.insn_operand_data* %9, i64 2, i32 0
  %11 = load i32 (%struct.rtx_def*, i32)** %predicate79, align 8, !tbaa !14
  %mode84 = getelementptr inbounds %struct.insn_operand_data* %9, i64 2, i32 2
  %bf.load85 = load i16* %mode84, align 8
  %bf.cast86 = zext i16 %bf.load85 to i32
  %call87 = tail call i32 %11(%struct.rtx_def* %call52, i32 %bf.cast86) #3
  %tobool88 = icmp eq i32 %call87, 0
  br i1 %tobool88, label %if.then89, label %if.end98

if.then89:                                        ; preds = %if.end74
  %bf.load95 = load i16* %mode84, align 8
  %bf.cast96 = zext i16 %bf.load95 to i32
  %call97 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast96, %struct.rtx_def* %call52) #3
  br label %if.end98

if.end98:                                         ; preds = %if.end74, %if.then89
  %op2.addr.2 = phi %struct.rtx_def* [ %call52, %if.end74 ], [ %call97, %if.then89 ]
  %predicate103 = getelementptr inbounds %struct.insn_operand_data* %9, i64 3, i32 0
  %12 = load i32 (%struct.rtx_def*, i32)** %predicate103, align 8, !tbaa !14
  %mode108 = getelementptr inbounds %struct.insn_operand_data* %9, i64 3, i32 2
  %bf.load109 = load i16* %mode108, align 8
  %bf.cast110 = zext i16 %bf.load109 to i32
  %call111 = tail call i32 %12(%struct.rtx_def* %call53, i32 %bf.cast110) #3
  %tobool112 = icmp eq i32 %call111, 0
  br i1 %tobool112, label %if.then113, label %if.end122

if.then113:                                       ; preds = %if.end98
  %bf.load119 = load i16* %mode108, align 8
  %bf.cast120 = zext i16 %bf.load119 to i32
  %call121 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast120, %struct.rtx_def* %call53) #3
  br label %if.end122

if.end122:                                        ; preds = %if.end98, %if.then113
  %op3.addr.2 = phi %struct.rtx_def* [ %call53, %if.end98 ], [ %call121, %if.then113 ]
  %call123 = tail call %struct.rtx_def* @compare_from_rtx(%struct.rtx_def* %op0.addr.0, %struct.rtx_def* %op1.addr.1, i32 %code.addr.2, i32 %unsignedp, i32 %cmode.addr.0, %struct.rtx_def* null) #3
  %13 = getelementptr inbounds %struct.rtx_def* %call123, i64 0, i32 0
  %bf.load124 = load i32* %13, align 8
  %bf.clear125 = and i32 %bf.load124, 65535
  %cmp126 = icmp eq i32 %bf.clear125, %code.addr.2
  br i1 %cmp126, label %if.end128, label %return

if.end128:                                        ; preds = %if.end122
  %idxprom129 = sext i32 %7 to i64
  %genfun = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom129, i32 2
  %14 = load %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun, align 8, !tbaa !16
  %call131 = tail call %struct.rtx_def* (%struct.rtx_def*, ...)* %14(%struct.rtx_def* %subtarget.0, %struct.rtx_def* %call123, %struct.rtx_def* %op2.addr.2, %struct.rtx_def* %op3.addr.2) #3
  %cmp132 = icmp eq %struct.rtx_def* %call131, null
  br i1 %cmp132, label %return, label %if.end134

if.end134:                                        ; preds = %if.end128
  %call135 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call131) #3
  %cmp136 = icmp eq %struct.rtx_def* %subtarget.0, %target.addr.0
  br i1 %cmp136, label %return, label %if.then137

if.then137:                                       ; preds = %if.end134
  tail call void @convert_move(%struct.rtx_def* %target.addr.0, %struct.rtx_def* %subtarget.0, i32 0) #3
  br label %return

return:                                           ; preds = %if.then137, %if.end134, %if.end128, %if.end122, %if.end36
  %retval.0 = phi %struct.rtx_def* [ null, %if.end36 ], [ null, %if.end122 ], [ null, %if.end128 ], [ %target.addr.0, %if.end134 ], [ %target.addr.0, %if.then137 ]
  ret %struct.rtx_def* %retval.0
}

declare i32 @reversed_comparison_code_parts(i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #2

declare %struct.rtx_def* @compare_from_rtx(%struct.rtx_def*, %struct.rtx_def*, i32, i32, i32, %struct.rtx_def*) #2

; Function Attrs: nounwind readonly uwtable
define i32 @can_conditionally_move_p(i32 %mode) #4 {
entry:
  %idxprom = zext i32 %mode to i64
  %arrayidx = getelementptr inbounds [59 x i32]* @movcc_gen_code, i64 0, i64 %idxprom
  %0 = load i32* %arrayidx, align 4, !tbaa !9
  %not.cmp = icmp ne i32 %0, 1317
  %. = zext i1 %not.cmp to i32
  ret i32 %.
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_add2_insn(%struct.rtx_def* %x, %struct.rtx_def* %y) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %idxprom52 = zext i32 %bf.clear to i64
  %1 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 0), align 16, !tbaa !1
  %insn_code = getelementptr inbounds %struct.optab* %1, i64 0, i32 1, i64 %idxprom52, i32 0
  %2 = load i32* %insn_code, align 4, !tbaa !10
  %idxprom1 = sext i32 %2 to i64
  %operand = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom1, i32 3
  %3 = load %struct.insn_operand_data** %operand, align 8, !tbaa !12
  %predicate = getelementptr inbounds %struct.insn_operand_data* %3, i64 0, i32 0
  %4 = load i32 (%struct.rtx_def*, i32)** %predicate, align 8, !tbaa !14
  %mode = getelementptr inbounds %struct.insn_operand_data* %3, i64 0, i32 2
  %bf.load8 = load i16* %mode, align 8
  %bf.cast = zext i16 %bf.load8 to i32
  %call = tail call i32 %4(%struct.rtx_def* %x, i32 %bf.cast) #3
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %predicate13 = getelementptr inbounds %struct.insn_operand_data* %3, i64 1, i32 0
  %5 = load i32 (%struct.rtx_def*, i32)** %predicate13, align 8, !tbaa !14
  %mode18 = getelementptr inbounds %struct.insn_operand_data* %3, i64 1, i32 2
  %bf.load19 = load i16* %mode18, align 8
  %bf.cast20 = zext i16 %bf.load19 to i32
  %call21 = tail call i32 %5(%struct.rtx_def* %x, i32 %bf.cast20) #3
  %tobool22 = icmp eq i32 %call21, 0
  br i1 %tobool22, label %if.then, label %lor.lhs.false23

lor.lhs.false23:                                  ; preds = %lor.lhs.false
  %predicate28 = getelementptr inbounds %struct.insn_operand_data* %3, i64 2, i32 0
  %6 = load i32 (%struct.rtx_def*, i32)** %predicate28, align 8, !tbaa !14
  %mode33 = getelementptr inbounds %struct.insn_operand_data* %3, i64 2, i32 2
  %bf.load34 = load i16* %mode33, align 8
  %bf.cast35 = zext i16 %bf.load34 to i32
  %call36 = tail call i32 %6(%struct.rtx_def* %y, i32 %bf.cast35) #3
  %tobool37 = icmp eq i32 %call36, 0
  br i1 %tobool37, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false23, %lor.lhs.false, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 3823, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.gen_add2_insn, i64 0, i64 0)) #6
  unreachable

if.end:                                           ; preds = %lor.lhs.false23
  %genfun = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom1, i32 2
  %7 = load %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun, align 8, !tbaa !16
  %call40 = tail call %struct.rtx_def* (%struct.rtx_def*, ...)* %7(%struct.rtx_def* %x, %struct.rtx_def* %x, %struct.rtx_def* %y) #3
  ret %struct.rtx_def* %call40
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_add3_insn(%struct.rtx_def* %r0, %struct.rtx_def* %r1, %struct.rtx_def* %c) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %r0, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %idxprom53 = zext i32 %bf.clear to i64
  %1 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 0), align 16, !tbaa !1
  %insn_code = getelementptr inbounds %struct.optab* %1, i64 0, i32 1, i64 %idxprom53, i32 0
  %2 = load i32* %insn_code, align 4, !tbaa !10
  %cmp = icmp eq i32 %2, 1317
  br i1 %cmp, label %return, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %idxprom1 = sext i32 %2 to i64
  %operand = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom1, i32 3
  %3 = load %struct.insn_operand_data** %operand, align 8, !tbaa !12
  %predicate = getelementptr inbounds %struct.insn_operand_data* %3, i64 0, i32 0
  %4 = load i32 (%struct.rtx_def*, i32)** %predicate, align 8, !tbaa !14
  %mode = getelementptr inbounds %struct.insn_operand_data* %3, i64 0, i32 2
  %bf.load8 = load i16* %mode, align 8
  %bf.cast = zext i16 %bf.load8 to i32
  %call = tail call i32 %4(%struct.rtx_def* %r0, i32 %bf.cast) #3
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %return, label %lor.lhs.false9

lor.lhs.false9:                                   ; preds = %lor.lhs.false
  %predicate14 = getelementptr inbounds %struct.insn_operand_data* %3, i64 1, i32 0
  %5 = load i32 (%struct.rtx_def*, i32)** %predicate14, align 8, !tbaa !14
  %mode19 = getelementptr inbounds %struct.insn_operand_data* %3, i64 1, i32 2
  %bf.load20 = load i16* %mode19, align 8
  %bf.cast21 = zext i16 %bf.load20 to i32
  %call22 = tail call i32 %5(%struct.rtx_def* %r1, i32 %bf.cast21) #3
  %tobool23 = icmp eq i32 %call22, 0
  br i1 %tobool23, label %return, label %lor.lhs.false24

lor.lhs.false24:                                  ; preds = %lor.lhs.false9
  %predicate29 = getelementptr inbounds %struct.insn_operand_data* %3, i64 2, i32 0
  %6 = load i32 (%struct.rtx_def*, i32)** %predicate29, align 8, !tbaa !14
  %mode34 = getelementptr inbounds %struct.insn_operand_data* %3, i64 2, i32 2
  %bf.load35 = load i16* %mode34, align 8
  %bf.cast36 = zext i16 %bf.load35 to i32
  %call37 = tail call i32 %6(%struct.rtx_def* %c, i32 %bf.cast36) #3
  %tobool38 = icmp eq i32 %call37, 0
  br i1 %tobool38, label %return, label %if.end

if.end:                                           ; preds = %lor.lhs.false24
  %genfun = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom1, i32 2
  %7 = load %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun, align 8, !tbaa !16
  %call41 = tail call %struct.rtx_def* (%struct.rtx_def*, ...)* %7(%struct.rtx_def* %r0, %struct.rtx_def* %r1, %struct.rtx_def* %c) #3
  br label %return

return:                                           ; preds = %entry, %lor.lhs.false, %lor.lhs.false9, %lor.lhs.false24, %if.end
  %retval.0 = phi %struct.rtx_def* [ %call41, %if.end ], [ null, %lor.lhs.false24 ], [ null, %lor.lhs.false9 ], [ null, %lor.lhs.false ], [ null, %entry ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @have_add2_insn(%struct.rtx_def* %x, %struct.rtx_def* %y) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %cmp = icmp eq i32 %bf.clear, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 3855, i8* getelementptr inbounds ([15 x i8]* @__FUNCTION__.have_add2_insn, i64 0, i64 0)) #6
  unreachable

if.end:                                           ; preds = %entry
  %idxprom55 = zext i32 %bf.clear to i64
  %1 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 0), align 16, !tbaa !1
  %insn_code = getelementptr inbounds %struct.optab* %1, i64 0, i32 1, i64 %idxprom55, i32 0
  %2 = load i32* %insn_code, align 4, !tbaa !10
  %cmp4 = icmp eq i32 %2, 1317
  br i1 %cmp4, label %return, label %if.end6

if.end6:                                          ; preds = %if.end
  %idxprom7 = sext i32 %2 to i64
  %operand = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom7, i32 3
  %3 = load %struct.insn_operand_data** %operand, align 8, !tbaa !12
  %predicate = getelementptr inbounds %struct.insn_operand_data* %3, i64 0, i32 0
  %4 = load i32 (%struct.rtx_def*, i32)** %predicate, align 8, !tbaa !14
  %mode = getelementptr inbounds %struct.insn_operand_data* %3, i64 0, i32 2
  %bf.load14 = load i16* %mode, align 8
  %bf.cast = zext i16 %bf.load14 to i32
  %call = tail call i32 %4(%struct.rtx_def* %x, i32 %bf.cast) #3
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %return, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end6
  %predicate19 = getelementptr inbounds %struct.insn_operand_data* %3, i64 1, i32 0
  %5 = load i32 (%struct.rtx_def*, i32)** %predicate19, align 8, !tbaa !14
  %mode24 = getelementptr inbounds %struct.insn_operand_data* %3, i64 1, i32 2
  %bf.load25 = load i16* %mode24, align 8
  %bf.cast26 = zext i16 %bf.load25 to i32
  %call27 = tail call i32 %5(%struct.rtx_def* %x, i32 %bf.cast26) #3
  %tobool28 = icmp eq i32 %call27, 0
  br i1 %tobool28, label %return, label %lor.lhs.false29

lor.lhs.false29:                                  ; preds = %lor.lhs.false
  %predicate34 = getelementptr inbounds %struct.insn_operand_data* %3, i64 2, i32 0
  %6 = load i32 (%struct.rtx_def*, i32)** %predicate34, align 8, !tbaa !14
  %mode39 = getelementptr inbounds %struct.insn_operand_data* %3, i64 2, i32 2
  %bf.load40 = load i16* %mode39, align 8
  %bf.cast41 = zext i16 %bf.load40 to i32
  %call42 = tail call i32 %6(%struct.rtx_def* %y, i32 %bf.cast41) #3
  %not.tobool43 = icmp ne i32 %call42, 0
  %. = zext i1 %not.tobool43 to i32
  ret i32 %.

return:                                           ; preds = %if.end6, %lor.lhs.false, %if.end
  ret i32 0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_sub2_insn(%struct.rtx_def* %x, %struct.rtx_def* %y) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %idxprom52 = zext i32 %bf.clear to i64
  %1 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 2), align 16, !tbaa !1
  %insn_code = getelementptr inbounds %struct.optab* %1, i64 0, i32 1, i64 %idxprom52, i32 0
  %2 = load i32* %insn_code, align 4, !tbaa !10
  %idxprom1 = sext i32 %2 to i64
  %operand = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom1, i32 3
  %3 = load %struct.insn_operand_data** %operand, align 8, !tbaa !12
  %predicate = getelementptr inbounds %struct.insn_operand_data* %3, i64 0, i32 0
  %4 = load i32 (%struct.rtx_def*, i32)** %predicate, align 8, !tbaa !14
  %mode = getelementptr inbounds %struct.insn_operand_data* %3, i64 0, i32 2
  %bf.load8 = load i16* %mode, align 8
  %bf.cast = zext i16 %bf.load8 to i32
  %call = tail call i32 %4(%struct.rtx_def* %x, i32 %bf.cast) #3
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %predicate13 = getelementptr inbounds %struct.insn_operand_data* %3, i64 1, i32 0
  %5 = load i32 (%struct.rtx_def*, i32)** %predicate13, align 8, !tbaa !14
  %mode18 = getelementptr inbounds %struct.insn_operand_data* %3, i64 1, i32 2
  %bf.load19 = load i16* %mode18, align 8
  %bf.cast20 = zext i16 %bf.load19 to i32
  %call21 = tail call i32 %5(%struct.rtx_def* %x, i32 %bf.cast20) #3
  %tobool22 = icmp eq i32 %call21, 0
  br i1 %tobool22, label %if.then, label %lor.lhs.false23

lor.lhs.false23:                                  ; preds = %lor.lhs.false
  %predicate28 = getelementptr inbounds %struct.insn_operand_data* %3, i64 2, i32 0
  %6 = load i32 (%struct.rtx_def*, i32)** %predicate28, align 8, !tbaa !14
  %mode33 = getelementptr inbounds %struct.insn_operand_data* %3, i64 2, i32 2
  %bf.load34 = load i16* %mode33, align 8
  %bf.cast35 = zext i16 %bf.load34 to i32
  %call36 = tail call i32 %6(%struct.rtx_def* %y, i32 %bf.cast35) #3
  %tobool37 = icmp eq i32 %call36, 0
  br i1 %tobool37, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false23, %lor.lhs.false, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 3887, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.gen_sub2_insn, i64 0, i64 0)) #6
  unreachable

if.end:                                           ; preds = %lor.lhs.false23
  %genfun = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom1, i32 2
  %7 = load %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun, align 8, !tbaa !16
  %call40 = tail call %struct.rtx_def* (%struct.rtx_def*, ...)* %7(%struct.rtx_def* %x, %struct.rtx_def* %x, %struct.rtx_def* %y) #3
  ret %struct.rtx_def* %call40
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_sub3_insn(%struct.rtx_def* %r0, %struct.rtx_def* %r1, %struct.rtx_def* %c) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %r0, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %idxprom53 = zext i32 %bf.clear to i64
  %1 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 2), align 16, !tbaa !1
  %insn_code = getelementptr inbounds %struct.optab* %1, i64 0, i32 1, i64 %idxprom53, i32 0
  %2 = load i32* %insn_code, align 4, !tbaa !10
  %cmp = icmp eq i32 %2, 1317
  br i1 %cmp, label %return, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %idxprom1 = sext i32 %2 to i64
  %operand = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom1, i32 3
  %3 = load %struct.insn_operand_data** %operand, align 8, !tbaa !12
  %predicate = getelementptr inbounds %struct.insn_operand_data* %3, i64 0, i32 0
  %4 = load i32 (%struct.rtx_def*, i32)** %predicate, align 8, !tbaa !14
  %mode = getelementptr inbounds %struct.insn_operand_data* %3, i64 0, i32 2
  %bf.load8 = load i16* %mode, align 8
  %bf.cast = zext i16 %bf.load8 to i32
  %call = tail call i32 %4(%struct.rtx_def* %r0, i32 %bf.cast) #3
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %return, label %lor.lhs.false9

lor.lhs.false9:                                   ; preds = %lor.lhs.false
  %predicate14 = getelementptr inbounds %struct.insn_operand_data* %3, i64 1, i32 0
  %5 = load i32 (%struct.rtx_def*, i32)** %predicate14, align 8, !tbaa !14
  %mode19 = getelementptr inbounds %struct.insn_operand_data* %3, i64 1, i32 2
  %bf.load20 = load i16* %mode19, align 8
  %bf.cast21 = zext i16 %bf.load20 to i32
  %call22 = tail call i32 %5(%struct.rtx_def* %r1, i32 %bf.cast21) #3
  %tobool23 = icmp eq i32 %call22, 0
  br i1 %tobool23, label %return, label %lor.lhs.false24

lor.lhs.false24:                                  ; preds = %lor.lhs.false9
  %predicate29 = getelementptr inbounds %struct.insn_operand_data* %3, i64 2, i32 0
  %6 = load i32 (%struct.rtx_def*, i32)** %predicate29, align 8, !tbaa !14
  %mode34 = getelementptr inbounds %struct.insn_operand_data* %3, i64 2, i32 2
  %bf.load35 = load i16* %mode34, align 8
  %bf.cast36 = zext i16 %bf.load35 to i32
  %call37 = tail call i32 %6(%struct.rtx_def* %c, i32 %bf.cast36) #3
  %tobool38 = icmp eq i32 %call37, 0
  br i1 %tobool38, label %return, label %if.end

if.end:                                           ; preds = %lor.lhs.false24
  %genfun = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom1, i32 2
  %7 = load %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun, align 8, !tbaa !16
  %call41 = tail call %struct.rtx_def* (%struct.rtx_def*, ...)* %7(%struct.rtx_def* %r0, %struct.rtx_def* %r1, %struct.rtx_def* %c) #3
  br label %return

return:                                           ; preds = %entry, %lor.lhs.false, %lor.lhs.false9, %lor.lhs.false24, %if.end
  %retval.0 = phi %struct.rtx_def* [ %call41, %if.end ], [ null, %lor.lhs.false24 ], [ null, %lor.lhs.false9 ], [ null, %lor.lhs.false ], [ null, %entry ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @have_sub2_insn(%struct.rtx_def* %x, %struct.rtx_def* %y) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %cmp = icmp eq i32 %bf.clear, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 3919, i8* getelementptr inbounds ([15 x i8]* @__FUNCTION__.have_sub2_insn, i64 0, i64 0)) #6
  unreachable

if.end:                                           ; preds = %entry
  %idxprom55 = zext i32 %bf.clear to i64
  %1 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 2), align 16, !tbaa !1
  %insn_code = getelementptr inbounds %struct.optab* %1, i64 0, i32 1, i64 %idxprom55, i32 0
  %2 = load i32* %insn_code, align 4, !tbaa !10
  %cmp4 = icmp eq i32 %2, 1317
  br i1 %cmp4, label %return, label %if.end6

if.end6:                                          ; preds = %if.end
  %idxprom7 = sext i32 %2 to i64
  %operand = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom7, i32 3
  %3 = load %struct.insn_operand_data** %operand, align 8, !tbaa !12
  %predicate = getelementptr inbounds %struct.insn_operand_data* %3, i64 0, i32 0
  %4 = load i32 (%struct.rtx_def*, i32)** %predicate, align 8, !tbaa !14
  %mode = getelementptr inbounds %struct.insn_operand_data* %3, i64 0, i32 2
  %bf.load14 = load i16* %mode, align 8
  %bf.cast = zext i16 %bf.load14 to i32
  %call = tail call i32 %4(%struct.rtx_def* %x, i32 %bf.cast) #3
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %return, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end6
  %predicate19 = getelementptr inbounds %struct.insn_operand_data* %3, i64 1, i32 0
  %5 = load i32 (%struct.rtx_def*, i32)** %predicate19, align 8, !tbaa !14
  %mode24 = getelementptr inbounds %struct.insn_operand_data* %3, i64 1, i32 2
  %bf.load25 = load i16* %mode24, align 8
  %bf.cast26 = zext i16 %bf.load25 to i32
  %call27 = tail call i32 %5(%struct.rtx_def* %x, i32 %bf.cast26) #3
  %tobool28 = icmp eq i32 %call27, 0
  br i1 %tobool28, label %return, label %lor.lhs.false29

lor.lhs.false29:                                  ; preds = %lor.lhs.false
  %predicate34 = getelementptr inbounds %struct.insn_operand_data* %3, i64 2, i32 0
  %6 = load i32 (%struct.rtx_def*, i32)** %predicate34, align 8, !tbaa !14
  %mode39 = getelementptr inbounds %struct.insn_operand_data* %3, i64 2, i32 2
  %bf.load40 = load i16* %mode39, align 8
  %bf.cast41 = zext i16 %bf.load40 to i32
  %call42 = tail call i32 %6(%struct.rtx_def* %y, i32 %bf.cast41) #3
  %not.tobool43 = icmp ne i32 %call42, 0
  %. = zext i1 %not.tobool43 to i32
  ret i32 %.

return:                                           ; preds = %if.end6, %lor.lhs.false, %if.end
  ret i32 0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_move_insn(%struct.rtx_def* %x, %struct.rtx_def* %y) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %cmp = icmp eq i32 %bf.clear, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = getelementptr inbounds %struct.rtx_def* %y, i64 0, i32 0
  %bf.load1 = load i32* %1, align 8
  %bf.lshr2 = lshr i32 %bf.load1, 16
  %bf.clear3 = and i32 %bf.lshr2, 255
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %mode.0 = phi i32 [ %bf.clear3, %if.then ], [ %bf.clear, %entry ]
  %idxprom103 = zext i32 %mode.0 to i64
  %2 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 30), align 16, !tbaa !1
  %insn_code4 = getelementptr inbounds %struct.optab* %2, i64 0, i32 1, i64 %idxprom103, i32 0
  %3 = load i32* %insn_code4, align 4, !tbaa !10
  %arrayidx6 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom103
  %4 = load i32* %arrayidx6, align 4, !tbaa !9
  %cmp7 = icmp eq i32 %4, 4
  %cmp8 = icmp eq i32 %3, 1317
  %or.cond = and i1 %cmp7, %cmp8
  br i1 %or.cond, label %if.then9, label %if.end68

if.then9:                                         ; preds = %if.end
  %cmp10 = icmp eq i32 %mode.0, 52
  br i1 %cmp10, label %for.cond.preheader, label %land.lhs.true11

land.lhs.true11:                                  ; preds = %if.then9
  %insn_code14 = getelementptr inbounds %struct.optab* %2, i64 0, i32 1, i64 52, i32 0
  %5 = load i32* %insn_code14, align 4, !tbaa !10
  %cmp15 = icmp eq i32 %5, 1317
  br i1 %cmp15, label %for.cond.preheader, label %if.end34

for.cond.preheader:                               ; preds = %land.lhs.true11, %if.then9
  %arrayidx21 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom103
  %6 = load i8* %arrayidx21, align 1, !tbaa !9
  br label %for.body

for.body:                                         ; preds = %for.cond.preheader, %for.inc
  %tmode.0111 = phi i32 [ 2, %for.cond.preheader ], [ %conv29, %for.inc ]
  %idxprom18104 = zext i32 %tmode.0111 to i64
  %arrayidx19 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom18104
  %7 = load i8* %arrayidx19, align 1, !tbaa !9
  %cmp23 = icmp eq i8 %7, %6
  br i1 %cmp23, label %if.end30, label %for.inc

for.inc:                                          ; preds = %for.body
  %arrayidx28 = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom18104
  %8 = load i8* %arrayidx28, align 1, !tbaa !9
  %conv29 = zext i8 %8 to i32
  %cmp17 = icmp eq i8 %8, 0
  br i1 %cmp17, label %if.then33, label %for.body

if.end30:                                         ; preds = %for.body
  %cmp31 = icmp eq i32 %tmode.0111, 0
  br i1 %cmp31, label %if.then33, label %if.end34

if.then33:                                        ; preds = %for.inc, %if.end30
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 3972, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.gen_move_insn, i64 0, i64 0)) #6
  unreachable

if.end34:                                         ; preds = %land.lhs.true11, %if.end30
  %tmode.1109 = phi i32 [ %tmode.0111, %if.end30 ], [ 52, %land.lhs.true11 ]
  %9 = load i32* @reload_in_progress, align 4, !tbaa !7
  %tobool = icmp eq i32 %9, 0
  br i1 %tobool, label %if.else57, label %if.then35

if.then35:                                        ; preds = %if.end34
  %call = tail call %struct.rtx_def* @gen_lowpart_common(i32 %tmode.1109, %struct.rtx_def* %x) #3
  %cmp36 = icmp eq %struct.rtx_def* %call, null
  br i1 %cmp36, label %land.lhs.true38, label %if.end45

land.lhs.true38:                                  ; preds = %if.then35
  %bf.load39 = load i32* %0, align 8
  %bf.clear40 = and i32 %bf.load39, 65535
  %cmp41 = icmp eq i32 %bf.clear40, 66
  br i1 %cmp41, label %if.then43, label %if.end45

if.then43:                                        ; preds = %land.lhs.true38
  %call44 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %x, i32 %tmode.1109, i64 0, i32 0, i32 1) #3
  tail call void @copy_replacements(%struct.rtx_def* %x, %struct.rtx_def* %call44) #3
  br label %if.end45

if.end45:                                         ; preds = %if.then43, %land.lhs.true38, %if.then35
  %x.addr.0 = phi %struct.rtx_def* [ %call44, %if.then43 ], [ null, %land.lhs.true38 ], [ %call, %if.then35 ]
  %call46 = tail call %struct.rtx_def* @gen_lowpart_common(i32 %tmode.1109, %struct.rtx_def* %y) #3
  %cmp47 = icmp eq %struct.rtx_def* %call46, null
  br i1 %cmp47, label %land.lhs.true49, label %if.end60

land.lhs.true49:                                  ; preds = %if.end45
  %10 = getelementptr inbounds %struct.rtx_def* %y, i64 0, i32 0
  %bf.load50 = load i32* %10, align 8
  %bf.clear51 = and i32 %bf.load50, 65535
  %cmp52 = icmp eq i32 %bf.clear51, 66
  br i1 %cmp52, label %if.then54, label %if.end60

if.then54:                                        ; preds = %land.lhs.true49
  %call55 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %y, i32 %tmode.1109, i64 0, i32 0, i32 1) #3
  tail call void @copy_replacements(%struct.rtx_def* %y, %struct.rtx_def* %call55) #3
  br label %if.end60

if.else57:                                        ; preds = %if.end34
  %call58 = tail call %struct.rtx_def* @gen_lowpart(i32 %tmode.1109, %struct.rtx_def* %x) #3
  %call59 = tail call %struct.rtx_def* @gen_lowpart(i32 %tmode.1109, %struct.rtx_def* %y) #3
  br label %if.end60

if.end60:                                         ; preds = %if.end45, %land.lhs.true49, %if.then54, %if.else57
  %y.addr.0 = phi %struct.rtx_def* [ %call55, %if.then54 ], [ null, %land.lhs.true49 ], [ %call46, %if.end45 ], [ %call59, %if.else57 ]
  %x.addr.1 = phi %struct.rtx_def* [ %x.addr.0, %if.then54 ], [ %x.addr.0, %land.lhs.true49 ], [ %x.addr.0, %if.end45 ], [ %call58, %if.else57 ]
  %idxprom61 = sext i32 %tmode.1109 to i64
  %11 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 30), align 16, !tbaa !1
  %insn_code64 = getelementptr inbounds %struct.optab* %11, i64 0, i32 1, i64 %idxprom61, i32 0
  %12 = load i32* %insn_code64, align 4, !tbaa !10
  %idxprom65 = sext i32 %12 to i64
  %genfun = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom65, i32 2
  %13 = load %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun, align 8, !tbaa !16
  %call67 = tail call %struct.rtx_def* (%struct.rtx_def*, ...)* %13(%struct.rtx_def* %x.addr.1, %struct.rtx_def* %y.addr.0) #3
  br label %return

if.end68:                                         ; preds = %if.end
  tail call void @start_sequence() #3
  %call69 = tail call %struct.rtx_def* @emit_move_insn_1(%struct.rtx_def* %x, %struct.rtx_def* %y) #3
  %call70 = tail call %struct.rtx_def* @gen_sequence() #3
  tail call void @end_sequence() #3
  br label %return

return:                                           ; preds = %if.end68, %if.end60
  %retval.0 = phi %struct.rtx_def* [ %call67, %if.end60 ], [ %call70, %if.end68 ]
  ret %struct.rtx_def* %retval.0
}

declare %struct.rtx_def* @gen_lowpart_common(i32, %struct.rtx_def*) #2

declare %struct.rtx_def* @adjust_address_1(%struct.rtx_def*, i32, i64, i32, i32) #2

declare void @copy_replacements(%struct.rtx_def*, %struct.rtx_def*) #2

declare %struct.rtx_def* @emit_move_insn_1(%struct.rtx_def*, %struct.rtx_def*) #2

declare %struct.rtx_def* @gen_sequence() #2

; Function Attrs: nounwind readonly uwtable
define i32 @can_extend_p(i32 %to_mode, i32 %from_mode, i32 %unsignedp) #4 {
entry:
  %cmp = icmp ne i32 %unsignedp, 0
  %idxprom = zext i1 %cmp to i64
  %idxprom1 = sext i32 %from_mode to i64
  %idxprom2 = sext i32 %to_mode to i64
  %arrayidx4 = getelementptr inbounds [59 x [59 x [2 x i32]]]* @extendtab, i64 0, i64 %idxprom2, i64 %idxprom1, i64 %idxprom
  %0 = load i32* %arrayidx4, align 4, !tbaa !9
  ret i32 %0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_extend_insn(%struct.rtx_def* %x, %struct.rtx_def* %y, i32 %mto, i32 %mfrom, i32 %unsignedp) #0 {
entry:
  %cmp = icmp ne i32 %unsignedp, 0
  %idxprom = zext i1 %cmp to i64
  %idxprom1 = sext i32 %mfrom to i64
  %idxprom2 = sext i32 %mto to i64
  %arrayidx4 = getelementptr inbounds [59 x [59 x [2 x i32]]]* @extendtab, i64 0, i64 %idxprom2, i64 %idxprom1, i64 %idxprom
  %0 = load i32* %arrayidx4, align 4, !tbaa !9
  %idxprom5 = sext i32 %0 to i64
  %genfun = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom5, i32 2
  %1 = load %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun, align 8, !tbaa !16
  %call = tail call %struct.rtx_def* (%struct.rtx_def*, ...)* %1(%struct.rtx_def* %x, %struct.rtx_def* %y) #3
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define void @expand_float(%struct.rtx_def* %to, %struct.rtx_def* %from, i32 %unsignedp) #0 {
entry:
  %offset = alloca %struct.realvaluetype, align 8
  %0 = getelementptr inbounds %struct.rtx_def* %from, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %cmp = icmp eq i32 %bf.clear, 0
  br i1 %cmp, label %if.then, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %1 = getelementptr inbounds %struct.rtx_def* %to, i64 0, i32 0
  %cmp.i = icmp ne i32 %unsignedp, 0
  %idxprom.i = zext i1 %cmp.i to i64
  br label %for.body

if.then:                                          ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 4096, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.expand_float, i64 0, i64 0)) #6
  unreachable

for.body:                                         ; preds = %for.body.lr.ph, %for.inc65
  %bf.load26553 = phi i32 [ %bf.load, %for.body.lr.ph ], [ %bf.load26554, %for.inc65 ]
  %imode.0543 = phi i32 [ %bf.clear, %for.body.lr.ph ], [ %conv68, %for.inc65 ]
  %bf.load5 = load i32* %1, align 8
  %bf.lshr6 = lshr i32 %bf.load5, 16
  %bf.clear7 = and i32 %bf.lshr6, 255
  %cmp9539 = icmp eq i32 %bf.clear7, 0
  %idxprom66511.pre = zext i32 %imode.0543 to i64
  br i1 %cmp9539, label %for.inc65, label %for.body10

for.body10:                                       ; preds = %for.body, %for.inc.for.body10_crit_edge
  %bf.load26552 = phi i32 [ %bf.load26555, %for.inc.for.body10_crit_edge ], [ %bf.load26553, %for.body ]
  %bf.load11 = phi i32 [ %bf.load11.pre, %for.inc.for.body10_crit_edge ], [ %bf.load5, %for.body ]
  %fmode.0540 = phi i32 [ %conv64, %for.inc.for.body10_crit_edge ], [ %bf.clear7, %for.body ]
  %bf.lshr12 = lshr i32 %bf.load11, 16
  %bf.clear13 = and i32 %bf.lshr12, 255
  %cmp14 = icmp eq i32 %fmode.0540, %bf.clear13
  br i1 %cmp14, label %if.end21, label %land.lhs.true

land.lhs.true:                                    ; preds = %for.body10
  %call = call i32 @significand_size(i32 %fmode.0540) #3
  %bf.load15 = load i32* %0, align 8
  %bf.lshr16 = lshr i32 %bf.load15, 16
  %bf.clear17 = and i32 %bf.lshr16, 255
  %idxprom513 = zext i32 %bf.clear17 to i64
  %arrayidx = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom513
  %2 = load i16* %arrayidx, align 2, !tbaa !17
  %conv = zext i16 %2 to i32
  %cmp18 = icmp ult i32 %call, %conv
  br i1 %cmp18, label %land.lhs.true.for.inc_crit_edge, label %if.end21

land.lhs.true.for.inc_crit_edge:                  ; preds = %land.lhs.true
  %idxprom62512.pre = zext i32 %fmode.0540 to i64
  br label %for.inc

if.end21:                                         ; preds = %for.body10, %land.lhs.true
  %bf.load26 = phi i32 [ %bf.load26552, %for.body10 ], [ %bf.load15, %land.lhs.true ]
  %idxprom2.i529 = zext i32 %fmode.0540 to i64
  %arrayidx4.i = getelementptr inbounds [59 x [59 x [2 x i32]]]* @floattab, i64 0, i64 %idxprom2.i529, i64 %idxprom66511.pre, i64 %idxprom.i
  %3 = load i32* %arrayidx4.i, align 4, !tbaa !9
  %cmp23 = icmp eq i32 %3, 1317
  br i1 %cmp23, label %land.lhs.true25, label %if.then37

land.lhs.true25:                                  ; preds = %if.end21
  %bf.lshr27 = lshr i32 %bf.load26, 16
  %bf.clear28 = and i32 %bf.lshr27, 255
  %cmp29 = icmp ne i32 %imode.0543, %bf.clear28
  %or.cond = and i1 %cmp29, %cmp.i
  br i1 %or.cond, label %if.end34, label %for.inc

if.end34:                                         ; preds = %land.lhs.true25
  %arrayidx4.i519 = getelementptr inbounds [59 x [59 x [2 x i32]]]* @floattab, i64 0, i64 %idxprom2.i529, i64 %idxprom66511.pre, i64 0
  %4 = load i32* %arrayidx4.i519, align 8, !tbaa !9
  %cmp35 = icmp eq i32 %4, 1317
  br i1 %cmp35, label %for.inc, label %if.then37

if.then37:                                        ; preds = %if.end21, %if.end34
  %icode.0527 = phi i32 [ %4, %if.end34 ], [ %3, %if.end21 ]
  %doing_unsigned.0526 = phi i32 [ 0, %if.end34 ], [ %unsignedp, %if.end21 ]
  %call38 = call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %to, i32 1) #3
  %call39 = call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %from, i32 0) #3
  %5 = getelementptr inbounds %struct.rtx_def* %call39, i64 0, i32 0
  %bf.load40 = load i32* %5, align 8
  %bf.lshr41 = lshr i32 %bf.load40, 16
  %bf.clear42 = and i32 %bf.lshr41, 255
  %cmp43 = icmp eq i32 %imode.0543, %bf.clear42
  br i1 %cmp43, label %if.end47, label %if.then45

if.then45:                                        ; preds = %if.then37
  %call46 = call %struct.rtx_def* @convert_to_mode(i32 %imode.0543, %struct.rtx_def* %call39, i32 %unsignedp) #3
  br label %if.end47

if.end47:                                         ; preds = %if.then37, %if.then45
  %from.addr.0 = phi %struct.rtx_def* [ %call46, %if.then45 ], [ %call39, %if.then37 ]
  %6 = getelementptr inbounds %struct.rtx_def* %call38, i64 0, i32 0
  %bf.load48 = load i32* %6, align 8
  %bf.lshr49 = lshr i32 %bf.load48, 16
  %bf.clear50 = and i32 %bf.lshr49, 255
  %cmp51 = icmp eq i32 %fmode.0540, %bf.clear50
  br i1 %cmp51, label %if.end55, label %if.then53

if.then53:                                        ; preds = %if.end47
  %call54 = call %struct.rtx_def* @gen_reg_rtx(i32 %fmode.0540) #3
  br label %if.end55

if.end55:                                         ; preds = %if.end47, %if.then53
  %target.0 = phi %struct.rtx_def* [ %call54, %if.then53 ], [ %to, %if.end47 ]
  %tobool56 = icmp ne i32 %doing_unsigned.0526, 0
  %cond = select i1 %tobool56, i32 127, i32 125
  call void @emit_unop_insn(i32 %icode.0527, %struct.rtx_def* %target.0, %struct.rtx_def* %from.addr.0, i32 %cond)
  %cmp57 = icmp eq %struct.rtx_def* %target.0, %call38
  br i1 %cmp57, label %if.end375, label %if.then59

if.then59:                                        ; preds = %if.end55
  call void @convert_move(%struct.rtx_def* %call38, %struct.rtx_def* %target.0, i32 0) #3
  br label %if.end375

for.inc:                                          ; preds = %land.lhs.true.for.inc_crit_edge, %land.lhs.true25, %if.end34
  %idxprom62512.pre-phi = phi i64 [ %idxprom62512.pre, %land.lhs.true.for.inc_crit_edge ], [ %idxprom2.i529, %land.lhs.true25 ], [ %idxprom2.i529, %if.end34 ]
  %bf.load26555 = phi i32 [ %bf.load15, %land.lhs.true.for.inc_crit_edge ], [ %bf.load26, %land.lhs.true25 ], [ %bf.load26, %if.end34 ]
  %arrayidx63 = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom62512.pre-phi
  %7 = load i8* %arrayidx63, align 1, !tbaa !9
  %cmp9 = icmp eq i8 %7, 0
  br i1 %cmp9, label %for.inc65, label %for.inc.for.body10_crit_edge

for.inc.for.body10_crit_edge:                     ; preds = %for.inc
  %conv64 = zext i8 %7 to i32
  %bf.load11.pre = load i32* %1, align 8
  br label %for.body10

for.inc65:                                        ; preds = %for.inc, %for.body
  %bf.load26554 = phi i32 [ %bf.load26553, %for.body ], [ %bf.load26555, %for.inc ]
  %arrayidx67 = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom66511.pre
  %8 = load i8* %arrayidx67, align 1, !tbaa !9
  %conv68 = zext i8 %8 to i32
  %cmp4 = icmp eq i8 %8, 0
  br i1 %cmp4, label %for.end69, label %for.body

for.end69:                                        ; preds = %for.inc65
  %tobool70 = icmp eq i32 %unsignedp, 0
  br i1 %tobool70, label %if.end199, label %if.then71

if.then71:                                        ; preds = %for.end69
  %call72 = call %struct.rtx_def* @gen_label_rtx() #3
  call void @emit_queue() #3
  %call73 = call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %to, i32 1) #3
  %call74 = call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %from, i32 0) #3
  %9 = load i32* @flag_force_mem, align 4, !tbaa !7
  %tobool75 = icmp eq i32 %9, 0
  br i1 %tobool75, label %if.end78, label %if.then76

if.then76:                                        ; preds = %if.then71
  %call77 = call %struct.rtx_def* @force_not_mem(%struct.rtx_def* %call74) #3
  br label %if.end78

if.end78:                                         ; preds = %if.then71, %if.then76
  %from.addr.1 = phi %struct.rtx_def* [ %call77, %if.then76 ], [ %call74, %if.then71 ]
  %10 = getelementptr inbounds %struct.rtx_def* %call73, i64 0, i32 0
  %bf.load79 = load i32* %10, align 8
  %bf.lshr80 = lshr i32 %bf.load79, 16
  %bf.clear81 = and i32 %bf.lshr80, 255
  %cond516536 = icmp eq i32 %bf.clear81, 0
  %.pre.pre = getelementptr inbounds %struct.rtx_def* %from.addr.1, i64 0, i32 0
  br i1 %cond516536, label %if.then113, label %for.body85.lr.ph

for.body85.lr.ph:                                 ; preds = %if.end78
  %bf.load86 = load i32* %.pre.pre, align 8
  %bf.lshr87 = lshr i32 %bf.load86, 16
  %bf.clear88 = and i32 %bf.lshr87, 255
  %idxprom89509 = zext i32 %bf.clear88 to i64
  %arrayidx90 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom89509
  %11 = load i16* %arrayidx90, align 2, !tbaa !17
  br label %for.body85

for.body85:                                       ; preds = %for.body85.lr.ph, %for.inc106
  %fmode.1537 = phi i32 [ %bf.clear81, %for.body85.lr.ph ], [ %conv109, %for.inc106 ]
  %idxprom92510 = zext i32 %fmode.1537 to i64
  %arrayidx93 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom92510
  %12 = load i16* %arrayidx93, align 2, !tbaa !17
  %cmp95 = icmp ult i16 %11, %12
  br i1 %cmp95, label %land.lhs.true97, label %for.inc106

land.lhs.true97:                                  ; preds = %for.body85
  %arrayidx4.i522 = getelementptr inbounds [59 x [59 x [2 x i32]]]* @floattab, i64 0, i64 %idxprom92510, i64 %idxprom89509, i64 0
  %13 = load i32* %arrayidx4.i522, align 8, !tbaa !9
  %cmp102 = icmp eq i32 %13, 1317
  br i1 %cmp102, label %for.inc106, label %if.end162

for.inc106:                                       ; preds = %land.lhs.true97, %for.body85
  %arrayidx108 = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom92510
  %14 = load i8* %arrayidx108, align 1, !tbaa !9
  %conv109 = zext i8 %14 to i32
  %cond516 = icmp eq i8 %14, 0
  br i1 %cond516, label %if.then113, label %for.body85

if.then113:                                       ; preds = %for.inc106, %if.end78
  %call117 = call i32 @significand_size(i32 %bf.clear81) #3
  %add = add i32 %call117, 1
  %bf.load118 = load i32* %.pre.pre, align 8
  %bf.lshr119 = lshr i32 %bf.load118, 16
  %bf.clear120 = and i32 %bf.lshr119, 255
  %idxprom121508 = zext i32 %bf.clear120 to i64
  %arrayidx122 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom121508
  %15 = load i16* %arrayidx122, align 2, !tbaa !17
  %conv123 = zext i16 %15 to i32
  %cmp124 = icmp ult i32 %add, %conv123
  br i1 %cmp124, label %if.then126, label %if.then113.if.end162_crit_edge

if.then113.if.end162_crit_edge:                   ; preds = %if.then113
  %bf.load163.pre = load i32* %10, align 8
  br label %if.end162

if.then126:                                       ; preds = %if.then113
  %call127 = call %struct.rtx_def* @gen_label_rtx() #3
  %16 = getelementptr inbounds %struct.rtx_def* %to, i64 0, i32 0
  %bf.load128 = load i32* %16, align 8
  %bf.clear129 = and i32 %bf.load128, 65535
  %cmp130 = icmp eq i32 %bf.clear129, 61
  br i1 %cmp130, label %lor.lhs.false, label %if.then141

lor.lhs.false:                                    ; preds = %if.then126
  %arrayidx132 = getelementptr inbounds %struct.rtx_def* %to, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx132 to i32*
  %17 = load i32* %rtuint, align 4, !tbaa !7
  %cmp133 = icmp ult i32 %17, 53
  br i1 %cmp133, label %if.then141, label %lor.lhs.false135

lor.lhs.false135:                                 ; preds = %lor.lhs.false
  %bf.lshr137 = lshr i32 %bf.load128, 16
  %bf.clear138 = and i32 %bf.lshr137, 255
  %cmp139 = icmp eq i32 %bf.clear138, %bf.clear81
  br i1 %cmp139, label %if.end143, label %if.then141

if.then141:                                       ; preds = %lor.lhs.false135, %if.then126, %lor.lhs.false
  %call142 = call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear81) #3
  br label %if.end143

if.end143:                                        ; preds = %lor.lhs.false135, %if.then141
  %target.1 = phi %struct.rtx_def* [ %call142, %if.then141 ], [ %to, %lor.lhs.false135 ]
  %bf.load144 = load i32* %.pre.pre, align 8
  %bf.lshr145 = lshr i32 %bf.load144, 16
  %bf.clear146 = and i32 %bf.lshr145, 255
  call void @do_pending_stack_adjust() #3
  %18 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  call void @emit_cmp_and_jump_insns(%struct.rtx_def* %from.addr.1, %struct.rtx_def* %18, i32 107, %struct.rtx_def* null, i32 %bf.clear146, i32 0, %struct.rtx_def* %call127)
  call void @expand_float(%struct.rtx_def* %target.1, %struct.rtx_def* %from.addr.1, i32 0)
  %call147 = call %struct.rtx_def* @gen_jump(%struct.rtx_def* %call72) #3
  %call148 = call %struct.rtx_def* @emit_jump_insn(%struct.rtx_def* %call147) #3
  %call149 = call %struct.rtx_def* @emit_barrier() #3
  %call150 = call %struct.rtx_def* @emit_label(%struct.rtx_def* %call127) #3
  %19 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 18), align 16, !tbaa !1
  %20 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %call151 = call %struct.rtx_def* @expand_binop(i32 %bf.clear146, %struct.optab* %19, %struct.rtx_def* %from.addr.1, %struct.rtx_def* %20, %struct.rtx_def* null, i32 1, i32 3)
  %21 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 12), align 8, !tbaa !1
  %call152 = call %struct.rtx_def* @expand_shift(i32 83, i32 %bf.clear146, %struct.rtx_def* %from.addr.1, %union.tree_node* %21, %struct.rtx_def* null, i32 1) #3
  %22 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 19), align 8, !tbaa !1
  %call153 = call %struct.rtx_def* @expand_binop(i32 %bf.clear146, %struct.optab* %22, %struct.rtx_def* %call151, %struct.rtx_def* %call152, %struct.rtx_def* %call151, i32 1, i32 3)
  call void @expand_float(%struct.rtx_def* %target.1, %struct.rtx_def* %call153, i32 0)
  %23 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 0), align 16, !tbaa !1
  %call154 = call %struct.rtx_def* @expand_binop(i32 %bf.clear81, %struct.optab* %23, %struct.rtx_def* %target.1, %struct.rtx_def* %target.1, %struct.rtx_def* %target.1, i32 0, i32 3)
  %cmp155 = icmp eq %struct.rtx_def* %call154, %target.1
  br i1 %cmp155, label %if.end159, label %if.then157

if.then157:                                       ; preds = %if.end143
  %call158 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %target.1, %struct.rtx_def* %call154) #3
  br label %if.end159

if.end159:                                        ; preds = %if.end143, %if.then157
  call void @do_pending_stack_adjust() #3
  %call160 = call %struct.rtx_def* @emit_label(%struct.rtx_def* %call72) #3
  br label %done

if.end162:                                        ; preds = %land.lhs.true97, %if.then113.if.end162_crit_edge
  %bf.load163 = phi i32 [ %bf.load163.pre, %if.then113.if.end162_crit_edge ], [ %bf.load79, %land.lhs.true97 ]
  %fmode.2 = phi i32 [ %bf.clear81, %if.then113.if.end162_crit_edge ], [ %fmode.1537, %land.lhs.true97 ]
  %bf.lshr164 = lshr i32 %bf.load163, 16
  %bf.clear165 = and i32 %bf.lshr164, 255
  %cmp166 = icmp eq i32 %bf.clear165, %fmode.2
  %bf.clear170 = and i32 %bf.load163, 65535
  %cmp171 = icmp eq i32 %bf.clear170, 61
  %or.cond515 = and i1 %cmp166, %cmp171
  br i1 %or.cond515, label %lor.lhs.false173, label %if.then179

lor.lhs.false173:                                 ; preds = %if.end162
  %arrayidx175 = getelementptr inbounds %struct.rtx_def* %call73, i64 0, i32 1, i64 0
  %rtuint176 = bitcast %union.rtunion_def* %arrayidx175 to i32*
  %24 = load i32* %rtuint176, align 4, !tbaa !7
  %cmp177 = icmp ult i32 %24, 53
  br i1 %cmp177, label %if.then179, label %if.end181

if.then179:                                       ; preds = %if.end162, %lor.lhs.false173
  %call180 = call %struct.rtx_def* @gen_reg_rtx(i32 %fmode.2) #3
  br label %if.end181

if.end181:                                        ; preds = %if.then179, %lor.lhs.false173
  %target.2 = phi %struct.rtx_def* [ %call180, %if.then179 ], [ %to, %lor.lhs.false173 ]
  call void @expand_float(%struct.rtx_def* %target.2, %struct.rtx_def* %from.addr.1, i32 0)
  call void @do_pending_stack_adjust() #3
  %25 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %26 = getelementptr inbounds %struct.rtx_def* %from.addr.1, i64 0, i32 0
  %bf.load182 = load i32* %26, align 8
  %bf.lshr183 = lshr i32 %bf.load182, 16
  %bf.clear184 = and i32 %bf.lshr183, 255
  call void @emit_cmp_and_jump_insns(%struct.rtx_def* %from.addr.1, %struct.rtx_def* %25, i32 104, %struct.rtx_def* null, i32 %bf.clear184, i32 0, %struct.rtx_def* %call72)
  %bf.load185 = load i32* %26, align 8
  %bf.lshr186 = lshr i32 %bf.load185, 16
  %bf.clear187 = and i32 %bf.lshr186, 255
  %idxprom188507 = zext i32 %bf.clear187 to i64
  %arrayidx189 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom188507
  %27 = load i16* %arrayidx189, align 2, !tbaa !17
  %conv190 = zext i16 %27 to i32
  call void @ereal_ldexp(%struct.realvaluetype* sret %offset, %struct.realvaluetype* byval align 8 @dconst1, i32 %conv190) #3
  %28 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 0), align 16, !tbaa !1
  %call191 = call %struct.rtx_def* @immed_real_const_1(%struct.realvaluetype* byval align 8 %offset, i32 %fmode.2) #3
  %call192 = call %struct.rtx_def* @expand_binop(i32 %fmode.2, %struct.optab* %28, %struct.rtx_def* %target.2, %struct.rtx_def* %call191, %struct.rtx_def* %target.2, i32 0, i32 3)
  %cmp193 = icmp eq %struct.rtx_def* %call192, %target.2
  br i1 %cmp193, label %if.end197, label %if.then195

if.then195:                                       ; preds = %if.end181
  %call196 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %target.2, %struct.rtx_def* %call192) #3
  br label %if.end197

if.end197:                                        ; preds = %if.end181, %if.then195
  call void @do_pending_stack_adjust() #3
  %call198 = call %struct.rtx_def* @emit_label(%struct.rtx_def* %call72) #3
  br label %done

if.end199:                                        ; preds = %for.end69
  %call203 = call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %to, i32 1) #3
  %call204 = call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %from, i32 0) #3
  %29 = getelementptr inbounds %struct.rtx_def* %call204, i64 0, i32 0
  %bf.load205 = load i32* %29, align 8
  %bf.lshr206 = lshr i32 %bf.load205, 16
  %bf.clear207 = and i32 %bf.lshr206, 255
  %idxprom208506 = zext i32 %bf.clear207 to i64
  %arrayidx209 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom208506
  %30 = load i8* %arrayidx209, align 1, !tbaa !9
  %31 = load i8* getelementptr inbounds ([59 x i8]* @mode_size, i64 0, i64 4), align 1, !tbaa !9
  %cmp212 = icmp ult i8 %30, %31
  br i1 %cmp212, label %if.then214, label %if.end216

if.then214:                                       ; preds = %if.end199
  %call215 = call %struct.rtx_def* @convert_to_mode(i32 4, %struct.rtx_def* %call204, i32 0) #3
  br label %if.end216

if.end216:                                        ; preds = %if.then214, %if.end199
  %from.addr.2 = phi %struct.rtx_def* [ %call215, %if.then214 ], [ %call204, %if.end199 ]
  %32 = load i32* @flag_force_mem, align 4, !tbaa !7
  %tobool217 = icmp eq i32 %32, 0
  br i1 %tobool217, label %if.end220, label %if.then218

if.then218:                                       ; preds = %if.end216
  %call219 = call %struct.rtx_def* @force_not_mem(%struct.rtx_def* %from.addr.2) #3
  br label %if.end220

if.end220:                                        ; preds = %if.end216, %if.then218
  %from.addr.3 = phi %struct.rtx_def* [ %call219, %if.then218 ], [ %from.addr.2, %if.end216 ]
  %33 = getelementptr inbounds %struct.rtx_def* %call203, i64 0, i32 0
  %bf.load221 = load i32* %33, align 8
  %bf.lshr222 = lshr i32 %bf.load221, 16
  %bf.clear223 = and i32 %bf.lshr222, 255
  switch i32 %bf.clear223, label %if.else343 [
    i32 15, label %if.then226
    i32 16, label %if.then256
    i32 17, label %if.then287
    i32 18, label %if.then318
  ]

if.then226:                                       ; preds = %if.end220
  %34 = getelementptr inbounds %struct.rtx_def* %from.addr.3, i64 0, i32 0
  %bf.load227 = load i32* %34, align 8
  %bf.lshr228 = lshr i32 %bf.load227, 16
  %bf.clear229 = and i32 %bf.lshr228, 255
  switch i32 %bf.clear229, label %if.else246 [
    i32 4, label %if.end347
    i32 5, label %if.then238
    i32 6, label %if.then245
  ]

if.then238:                                       ; preds = %if.then226
  br label %if.end347

if.then245:                                       ; preds = %if.then226
  br label %if.end347

if.else246:                                       ; preds = %if.then226
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 4281, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.expand_float, i64 0, i64 0)) #6
  unreachable

if.then256:                                       ; preds = %if.end220
  %35 = getelementptr inbounds %struct.rtx_def* %from.addr.3, i64 0, i32 0
  %bf.load257 = load i32* %35, align 8
  %bf.lshr258 = lshr i32 %bf.load257, 16
  %bf.clear259 = and i32 %bf.lshr258, 255
  switch i32 %bf.clear259, label %if.else277 [
    i32 4, label %if.end347
    i32 5, label %if.then269
    i32 6, label %if.then276
  ]

if.then269:                                       ; preds = %if.then256
  br label %if.end347

if.then276:                                       ; preds = %if.then256
  br label %if.end347

if.else277:                                       ; preds = %if.then256
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 4292, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.expand_float, i64 0, i64 0)) #6
  unreachable

if.then287:                                       ; preds = %if.end220
  %36 = getelementptr inbounds %struct.rtx_def* %from.addr.3, i64 0, i32 0
  %bf.load288 = load i32* %36, align 8
  %bf.lshr289 = lshr i32 %bf.load288, 16
  %bf.clear290 = and i32 %bf.lshr289, 255
  switch i32 %bf.clear290, label %if.else308 [
    i32 4, label %if.end347
    i32 5, label %if.then300
    i32 6, label %if.then307
  ]

if.then300:                                       ; preds = %if.then287
  br label %if.end347

if.then307:                                       ; preds = %if.then287
  br label %if.end347

if.else308:                                       ; preds = %if.then287
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 4303, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.expand_float, i64 0, i64 0)) #6
  unreachable

if.then318:                                       ; preds = %if.end220
  %37 = getelementptr inbounds %struct.rtx_def* %from.addr.3, i64 0, i32 0
  %bf.load319 = load i32* %37, align 8
  %bf.lshr320 = lshr i32 %bf.load319, 16
  %bf.clear321 = and i32 %bf.lshr320, 255
  switch i32 %bf.clear321, label %if.else339 [
    i32 4, label %if.end347
    i32 5, label %if.then331
    i32 6, label %if.then338
  ]

if.then331:                                       ; preds = %if.then318
  br label %if.end347

if.then338:                                       ; preds = %if.then318
  br label %if.end347

if.else339:                                       ; preds = %if.then318
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 4314, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.expand_float, i64 0, i64 0)) #6
  unreachable

if.else343:                                       ; preds = %if.end220
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 4317, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.expand_float, i64 0, i64 0)) #6
  unreachable

if.end347:                                        ; preds = %if.then318, %if.then287, %if.then256, %if.then226, %if.then269, %if.then276, %if.then331, %if.then338, %if.then307, %if.then300, %if.then245, %if.then238
  %libfcn.0.in = phi %struct.rtx_def** [ getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 60), %if.then238 ], [ getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 61), %if.then245 ], [ getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 63), %if.then269 ], [ getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 64), %if.then276 ], [ getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 66), %if.then300 ], [ getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 67), %if.then307 ], [ getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 69), %if.then331 ], [ getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 70), %if.then338 ], [ getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 59), %if.then226 ], [ getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 62), %if.then256 ], [ getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 65), %if.then287 ], [ getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 68), %if.then318 ]
  %libfcn.0 = load %struct.rtx_def** %libfcn.0.in, align 8
  call void @start_sequence() #3
  %bf.load348 = load i32* %33, align 8
  %bf.lshr349 = lshr i32 %bf.load348, 16
  %bf.clear350 = and i32 %bf.lshr349, 255
  %38 = getelementptr inbounds %struct.rtx_def* %from.addr.3, i64 0, i32 0
  %bf.load351 = load i32* %38, align 8
  %bf.lshr352 = lshr i32 %bf.load351, 16
  %bf.clear353 = and i32 %bf.lshr352, 255
  %call354 = call %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32, i32, i32, ...)* @emit_library_call_value(%struct.rtx_def* %libfcn.0, %struct.rtx_def* null, i32 1, i32 %bf.clear350, i32 1, %struct.rtx_def* %from.addr.3, i32 %bf.clear353) #3
  %call355 = call %struct.rtx_def* @get_insns() #3
  call void @end_sequence() #3
  %bf.load356 = load i32* %33, align 8
  %bf.lshr357 = lshr i32 %bf.load356, 16
  %bf.clear358 = and i32 %bf.lshr357, 255
  %call359 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 125, i32 %bf.clear358, %struct.rtx_def* %from.addr.3) #3
  call void @emit_libcall_block(%struct.rtx_def* %call355, %struct.rtx_def* %to, %struct.rtx_def* %call354, %struct.rtx_def* %call359)
  br label %done

done:                                             ; preds = %if.end347, %if.end197, %if.end159
  %target.3 = phi %struct.rtx_def* [ %target.1, %if.end159 ], [ %target.2, %if.end197 ], [ %to, %if.end347 ]
  %to.addr.0 = phi %struct.rtx_def* [ %call73, %if.end159 ], [ %call73, %if.end197 ], [ %call203, %if.end347 ]
  %cmp360 = icmp eq %struct.rtx_def* %target.3, %to.addr.0
  br i1 %cmp360, label %if.end375, label %if.then362

if.then362:                                       ; preds = %done
  %39 = getelementptr inbounds %struct.rtx_def* %target.3, i64 0, i32 0
  %bf.load363 = load i32* %39, align 8
  %40 = getelementptr inbounds %struct.rtx_def* %to.addr.0, i64 0, i32 0
  %bf.load366 = load i32* %40, align 8
  %bf.lshr364514 = xor i32 %bf.load366, %bf.load363
  %41 = and i32 %bf.lshr364514, 16711680
  %cmp369 = icmp eq i32 %41, 0
  br i1 %cmp369, label %if.then371, label %if.else373

if.then371:                                       ; preds = %if.then362
  %call372 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %to.addr.0, %struct.rtx_def* %target.3) #3
  br label %if.end375

if.else373:                                       ; preds = %if.then362
  call void @convert_move(%struct.rtx_def* %to.addr.0, %struct.rtx_def* %target.3, i32 0) #3
  br label %if.end375

if.end375:                                        ; preds = %if.end55, %done, %if.then371, %if.else373, %if.then59
  ret void
}

declare i32 @significand_size(i32) #2

declare void @do_pending_stack_adjust() #2

declare %struct.rtx_def* @gen_jump(%struct.rtx_def*) #2

declare void @ereal_ldexp(%struct.realvaluetype* sret, %struct.realvaluetype* byval align 8, i32) #2

declare %struct.rtx_def* @immed_real_const_1(%struct.realvaluetype* byval align 8, i32) #2

; Function Attrs: nounwind uwtable
define void @expand_fix(%struct.rtx_def* %to, %struct.rtx_def* %from, i32 %unsignedp) #0 {
entry:
  %offset = alloca %struct.realvaluetype, align 8
  %0 = getelementptr inbounds %struct.rtx_def* %from, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %cmp576 = icmp eq i32 %bf.clear, 0
  br i1 %cmp576, label %for.end45, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %1 = getelementptr inbounds %struct.rtx_def* %to, i64 0, i32 0
  %bf.load1 = load i32* %1, align 8
  %bf.lshr2 = lshr i32 %bf.load1, 16
  %bf.clear3 = and i32 %bf.lshr2, 255
  %cmp5574 = icmp eq i32 %bf.clear3, 0
  %cmp.i = icmp ne i32 %unsignedp, 0
  %idxprom.i = zext i1 %cmp.i to i64
  %2 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 17), align 8, !tbaa !1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc41
  %fmode.0577 = phi i32 [ %bf.clear, %for.body.lr.ph ], [ %conv44, %for.inc41 ]
  %idxprom42521.pre = zext i32 %fmode.0577 to i64
  br i1 %cmp5574, label %for.inc41, label %for.body6.lr.ph

for.body6.lr.ph:                                  ; preds = %for.body
  %insn_code.i = getelementptr inbounds %struct.optab* %2, i64 0, i32 1, i64 %idxprom42521.pre, i32 0
  br label %for.body6

for.body6:                                        ; preds = %for.body6.lr.ph, %for.inc
  %imode.0575 = phi i32 [ %bf.clear3, %for.body6.lr.ph ], [ %conv, %for.inc ]
  %idxprom1.i565 = zext i32 %imode.0575 to i64
  %arrayidx4.i = getelementptr inbounds [59 x [59 x [2 x i32]]]* @fixtrunctab, i64 0, i64 %idxprom42521.pre, i64 %idxprom1.i565, i64 %idxprom.i
  %3 = load i32* %arrayidx4.i, align 4, !tbaa !9
  %cmp5.i = icmp eq i32 %3, 1317
  br i1 %cmp5.i, label %if.end.i, label %if.then15

if.end.i:                                         ; preds = %for.body6
  %4 = load i32* %insn_code.i, align 4, !tbaa !10
  %cmp17.i = icmp eq i32 %4, 1317
  br i1 %cmp17.i, label %land.lhs.true, label %can_fix_p.exit

can_fix_p.exit:                                   ; preds = %if.end.i
  %arrayidx27.i = getelementptr inbounds [59 x [59 x [2 x i32]]]* @fixtab, i64 0, i64 %idxprom42521.pre, i64 %idxprom1.i565, i64 %idxprom.i
  %5 = load i32* %arrayidx27.i, align 4, !tbaa !9
  %cmp7 = icmp eq i32 %5, 1317
  br i1 %cmp7, label %land.lhs.true, label %if.then15

land.lhs.true:                                    ; preds = %if.end.i, %can_fix_p.exit
  %cmp11 = icmp ne i32 %imode.0575, %bf.clear3
  %or.cond = and i1 %cmp11, %cmp.i
  br i1 %or.cond, label %if.then, label %for.inc

if.then:                                          ; preds = %land.lhs.true
  %arrayidx4.i526 = getelementptr inbounds [59 x [59 x [2 x i32]]]* @fixtrunctab, i64 0, i64 %idxprom42521.pre, i64 %idxprom1.i565, i64 0
  %6 = load i32* %arrayidx4.i526, align 8, !tbaa !9
  %cmp5.i527 = icmp eq i32 %6, 1317
  br i1 %cmp5.i527, label %if.end.i530, label %if.then15

if.end.i530:                                      ; preds = %if.then
  br i1 %cmp17.i, label %for.inc, label %if.end

if.end:                                           ; preds = %if.end.i530
  %arrayidx27.i531 = getelementptr inbounds [59 x [59 x [2 x i32]]]* @fixtab, i64 0, i64 %idxprom42521.pre, i64 %idxprom1.i565, i64 0
  %7 = load i32* %arrayidx27.i531, align 8, !tbaa !9
  %cmp14 = icmp eq i32 %7, 1317
  br i1 %cmp14, label %for.inc, label %if.then15

if.then15:                                        ; preds = %for.body6, %if.then, %can_fix_p.exit, %if.end
  %icode.0552 = phi i32 [ %7, %if.end ], [ %5, %can_fix_p.exit ], [ %6, %if.then ], [ %3, %for.body6 ]
  %doing_unsigned.0551 = phi i32 [ 0, %if.end ], [ %unsignedp, %can_fix_p.exit ], [ 0, %if.then ], [ %unsignedp, %for.body6 ]
  %8 = phi i32 [ 1, %if.end ], [ 1, %can_fix_p.exit ], [ 0, %if.then ], [ 0, %for.body6 ]
  %call16 = call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %to, i32 1) #3
  %call17 = call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %from, i32 0) #3
  %9 = getelementptr inbounds %struct.rtx_def* %call17, i64 0, i32 0
  %bf.load18 = load i32* %9, align 8
  %bf.lshr19 = lshr i32 %bf.load18, 16
  %bf.clear20 = and i32 %bf.lshr19, 255
  %cmp21 = icmp eq i32 %fmode.0577, %bf.clear20
  br i1 %cmp21, label %if.end24, label %if.then22

if.then22:                                        ; preds = %if.then15
  %call23 = call %struct.rtx_def* @convert_to_mode(i32 %fmode.0577, %struct.rtx_def* %call17, i32 0) #3
  br label %if.end24

if.end24:                                         ; preds = %if.then15, %if.then22
  %from.addr.0 = phi %struct.rtx_def* [ %call23, %if.then22 ], [ %call17, %if.then15 ]
  %tobool25 = icmp eq i32 %8, 0
  br i1 %tobool25, label %if.end28, label %if.then26

if.then26:                                        ; preds = %if.end24
  %10 = getelementptr inbounds %struct.rtx_def* %from.addr.0, i64 0, i32 0
  %bf.load.i = load i32* %10, align 8
  %bf.lshr.i = lshr i32 %bf.load.i, 16
  %bf.clear.i = and i32 %bf.lshr.i, 255
  %call.i = call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear.i) #3
  %bf.load1.i = load i32* %10, align 8
  %bf.lshr2.i = lshr i32 %bf.load1.i, 16
  %bf.clear3.i = and i32 %bf.lshr2.i, 255
  %11 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 17), align 8, !tbaa !1
  %call4.i = call %struct.rtx_def* @expand_unop(i32 %bf.clear3.i, %struct.optab* %11, %struct.rtx_def* %from.addr.0, %struct.rtx_def* %call.i, i32 0) #3
  br label %if.end28

if.end28:                                         ; preds = %if.end24, %if.then26
  %from.addr.1 = phi %struct.rtx_def* [ %call4.i, %if.then26 ], [ %from.addr.0, %if.end24 ]
  %12 = getelementptr inbounds %struct.rtx_def* %call16, i64 0, i32 0
  %bf.load29 = load i32* %12, align 8
  %bf.lshr30 = lshr i32 %bf.load29, 16
  %bf.clear31 = and i32 %bf.lshr30, 255
  %cmp32 = icmp eq i32 %imode.0575, %bf.clear31
  br i1 %cmp32, label %if.end35, label %if.then33

if.then33:                                        ; preds = %if.end28
  %call34 = call %struct.rtx_def* @gen_reg_rtx(i32 %imode.0575) #3
  br label %if.end35

if.end35:                                         ; preds = %if.end28, %if.then33
  %target.0 = phi %struct.rtx_def* [ %call34, %if.then33 ], [ %to, %if.end28 ]
  %tobool36 = icmp ne i32 %doing_unsigned.0551, 0
  %cond = select i1 %tobool36, i32 128, i32 126
  call void @emit_unop_insn(i32 %icode.0552, %struct.rtx_def* %target.0, %struct.rtx_def* %from.addr.1, i32 %cond)
  %cmp37 = icmp eq %struct.rtx_def* %target.0, %call16
  br i1 %cmp37, label %if.end393, label %if.then38

if.then38:                                        ; preds = %if.end35
  call void @convert_move(%struct.rtx_def* %call16, %struct.rtx_def* %target.0, i32 %unsignedp) #3
  br label %if.end393

for.inc:                                          ; preds = %if.end.i530, %land.lhs.true, %if.end
  %arrayidx = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom1.i565
  %13 = load i8* %arrayidx, align 1, !tbaa !9
  %conv = zext i8 %13 to i32
  %cmp5 = icmp eq i8 %13, 0
  br i1 %cmp5, label %for.inc41, label %for.body6

for.inc41:                                        ; preds = %for.inc, %for.body
  %arrayidx43 = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom42521.pre
  %14 = load i8* %arrayidx43, align 1, !tbaa !9
  %conv44 = zext i8 %14 to i32
  %cmp = icmp eq i8 %14, 0
  br i1 %cmp, label %for.end45, label %for.body

for.end45:                                        ; preds = %for.inc41, %entry
  %tobool46 = icmp ne i32 %unsignedp, 0
  %15 = getelementptr inbounds %struct.rtx_def* %to, i64 0, i32 0
  %bf.load48 = load i32* %15, align 8
  br i1 %tobool46, label %land.lhs.true47, label %if.end155

land.lhs.true47:                                  ; preds = %for.end45
  %bf.lshr49 = lshr i32 %bf.load48, 16
  %bf.clear50 = and i32 %bf.lshr49, 255
  %idxprom51516 = zext i32 %bf.clear50 to i64
  %arrayidx52 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom51516
  %16 = load i16* %arrayidx52, align 2, !tbaa !17
  %cmp54.not = icmp ugt i16 %16, 64
  %brmerge = or i1 %cmp54.not, %cmp576
  br i1 %brmerge, label %if.end155, label %for.body63.lr.ph

for.body63.lr.ph:                                 ; preds = %land.lhs.true47
  %17 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 17), align 8, !tbaa !1
  br label %for.body63

for.body63:                                       ; preds = %for.body63.lr.ph, %for.inc150
  %fmode.1573 = phi i32 [ %bf.clear, %for.body63.lr.ph ], [ %conv153, %for.inc150 ]
  %idxprom64517 = zext i32 %fmode.1573 to i64
  %arrayidx65 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom64517
  %18 = load i16* %arrayidx65, align 2, !tbaa !17
  %cmp73 = icmp ugt i16 %18, %16
  br i1 %cmp73, label %land.lhs.true75, label %for.inc150

land.lhs.true75:                                  ; preds = %for.body63
  %arrayidx4.i537 = getelementptr inbounds [59 x [59 x [2 x i32]]]* @fixtrunctab, i64 0, i64 %idxprom64517, i64 %idxprom51516, i64 0
  %19 = load i32* %arrayidx4.i537, align 8, !tbaa !9
  %cmp5.i538 = icmp eq i32 %19, 1317
  br i1 %cmp5.i538, label %if.end.i541, label %if.then82

if.end.i541:                                      ; preds = %land.lhs.true75
  %insn_code.i539 = getelementptr inbounds %struct.optab* %17, i64 0, i32 1, i64 %idxprom64517, i32 0
  %20 = load i32* %insn_code.i539, align 4, !tbaa !10
  %cmp17.i540 = icmp eq i32 %20, 1317
  br i1 %cmp17.i540, label %for.inc150, label %can_fix_p.exit545

can_fix_p.exit545:                                ; preds = %if.end.i541
  %arrayidx27.i542 = getelementptr inbounds [59 x [59 x [2 x i32]]]* @fixtab, i64 0, i64 %idxprom64517, i64 %idxprom51516, i64 0
  %21 = load i32* %arrayidx27.i542, align 8, !tbaa !9
  %cmp80 = icmp eq i32 %21, 1317
  br i1 %cmp80, label %for.inc150, label %if.then82

if.then82:                                        ; preds = %land.lhs.true75, %can_fix_p.exit545
  %conv88 = zext i16 %16 to i32
  %sub = add nsw i32 %conv88, -1
  call void @ereal_ldexp(%struct.realvaluetype* sret %offset, %struct.realvaluetype* byval align 8 @dconst1, i32 %sub) #3
  %call89 = call %struct.rtx_def* @immed_real_const_1(%struct.realvaluetype* byval align 8 %offset, i32 %fmode.1573) #3
  %call90 = call %struct.rtx_def* @gen_label_rtx() #3
  %call91 = call %struct.rtx_def* @gen_label_rtx() #3
  call void @emit_queue() #3
  %call92 = call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %to, i32 1) #3
  %call93 = call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %from, i32 0) #3
  %22 = load i32* @flag_force_mem, align 4, !tbaa !7
  %tobool94 = icmp eq i32 %22, 0
  br i1 %tobool94, label %if.end97, label %if.then95

if.then95:                                        ; preds = %if.then82
  %call96 = call %struct.rtx_def* @force_not_mem(%struct.rtx_def* %call93) #3
  br label %if.end97

if.end97:                                         ; preds = %if.then82, %if.then95
  %from.addr.2 = phi %struct.rtx_def* [ %call96, %if.then95 ], [ %call93, %if.then82 ]
  %23 = getelementptr inbounds %struct.rtx_def* %from.addr.2, i64 0, i32 0
  %bf.load98 = load i32* %23, align 8
  %bf.lshr99 = lshr i32 %bf.load98, 16
  %bf.clear100 = and i32 %bf.lshr99, 255
  %cmp101 = icmp eq i32 %fmode.1573, %bf.clear100
  br i1 %cmp101, label %if.end105, label %if.then103

if.then103:                                       ; preds = %if.end97
  %call104 = call %struct.rtx_def* @convert_to_mode(i32 %fmode.1573, %struct.rtx_def* %from.addr.2, i32 0) #3
  br label %if.end105

if.end105:                                        ; preds = %if.end97, %if.then103
  %from.addr.3 = phi %struct.rtx_def* [ %call104, %if.then103 ], [ %from.addr.2, %if.end97 ]
  call void @do_pending_stack_adjust() #3
  %24 = getelementptr inbounds %struct.rtx_def* %from.addr.3, i64 0, i32 0
  %bf.load106 = load i32* %24, align 8
  %bf.lshr107 = lshr i32 %bf.load106, 16
  %bf.clear108 = and i32 %bf.lshr107, 255
  call void @emit_cmp_and_jump_insns(%struct.rtx_def* %from.addr.3, %struct.rtx_def* %call89, i32 104, %struct.rtx_def* null, i32 %bf.clear108, i32 0, %struct.rtx_def* %call90)
  call void @expand_fix(%struct.rtx_def* %call92, %struct.rtx_def* %from.addr.3, i32 0)
  %call109 = call %struct.rtx_def* @gen_jump(%struct.rtx_def* %call91) #3
  %call110 = call %struct.rtx_def* @emit_jump_insn(%struct.rtx_def* %call109) #3
  %call111 = call %struct.rtx_def* @emit_barrier() #3
  %call112 = call %struct.rtx_def* @emit_label(%struct.rtx_def* %call90) #3
  %bf.load113 = load i32* %24, align 8
  %bf.lshr114 = lshr i32 %bf.load113, 16
  %bf.clear115 = and i32 %bf.lshr114, 255
  %25 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 2), align 16, !tbaa !1
  %call116 = call %struct.rtx_def* @expand_binop(i32 %bf.clear115, %struct.optab* %25, %struct.rtx_def* %from.addr.3, %struct.rtx_def* %call89, %struct.rtx_def* null, i32 0, i32 3)
  call void @expand_fix(%struct.rtx_def* %call92, %struct.rtx_def* %call116, i32 0)
  %26 = getelementptr inbounds %struct.rtx_def* %call92, i64 0, i32 0
  %bf.load117 = load i32* %26, align 8
  %bf.lshr118 = lshr i32 %bf.load117, 16
  %bf.clear119 = and i32 %bf.lshr118, 255
  %27 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 20), align 16, !tbaa !1
  %sh_prom = zext i32 %sub to i64
  %shl = shl i64 1, %sh_prom
  %call124 = call i64 @trunc_int_for_mode(i64 %shl, i32 %bf.clear119) #3
  %call125 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call124) #3
  %call126 = call %struct.rtx_def* @expand_binop(i32 %bf.clear119, %struct.optab* %27, %struct.rtx_def* %call92, %struct.rtx_def* %call125, %struct.rtx_def* %call92, i32 1, i32 3)
  %cmp127 = icmp eq %struct.rtx_def* %call126, %call92
  br i1 %cmp127, label %if.end131, label %if.then129

if.then129:                                       ; preds = %if.end105
  %call130 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call92, %struct.rtx_def* %call126) #3
  br label %if.end131

if.end131:                                        ; preds = %if.end105, %if.then129
  %call132 = call %struct.rtx_def* @emit_label(%struct.rtx_def* %call91) #3
  %bf.load133 = load i32* %26, align 8
  %bf.lshr134 = lshr i32 %bf.load133, 16
  %bf.clear135 = and i32 %bf.lshr134, 255
  %idxprom136520 = zext i32 %bf.clear135 to i64
  %28 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 30), align 16, !tbaa !1
  %insn_code = getelementptr inbounds %struct.optab* %28, i64 0, i32 1, i64 %idxprom136520, i32 0
  %29 = load i32* %insn_code, align 4, !tbaa !10
  %cmp138 = icmp eq i32 %29, 1317
  br i1 %cmp138, label %if.end393, label %if.then140

if.then140:                                       ; preds = %if.end131
  %call141 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call92, %struct.rtx_def* %call92) #3
  %bf.load142 = load i32* %26, align 8
  %bf.lshr143 = lshr i32 %bf.load142, 16
  %bf.clear144 = and i32 %bf.lshr143, 255
  %call145 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %from.addr.3) #3
  %call146 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 128, i32 %bf.clear144, %struct.rtx_def* %call145) #3
  %call147 = call %struct.rtx_def* @set_unique_reg_note(%struct.rtx_def* %call141, i32 4, %struct.rtx_def* %call146) #3
  br label %if.end393

for.inc150:                                       ; preds = %if.end.i541, %can_fix_p.exit545, %for.body63
  %arrayidx152 = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom64517
  %30 = load i8* %arrayidx152, align 1, !tbaa !9
  %conv153 = zext i8 %30 to i32
  %cmp61 = icmp eq i8 %30, 0
  br i1 %cmp61, label %if.end155, label %for.body63

if.end155:                                        ; preds = %for.inc150, %land.lhs.true47, %for.end45
  %bf.lshr157 = lshr i32 %bf.load48, 16
  %bf.clear158 = and i32 %bf.lshr157, 255
  %idxprom159515 = zext i32 %bf.clear158 to i64
  %arrayidx160 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom159515
  %31 = load i8* %arrayidx160, align 1, !tbaa !9
  %32 = load i8* getelementptr inbounds ([59 x i8]* @mode_size, i64 0, i64 4), align 1, !tbaa !9
  %cmp163 = icmp ult i8 %31, %32
  br i1 %cmp163, label %if.end352.thread, label %if.else

if.end352.thread:                                 ; preds = %if.end155
  %call166 = call %struct.rtx_def* @gen_reg_rtx(i32 4) #3
  call void @expand_fix(%struct.rtx_def* %call166, %struct.rtx_def* %from, i32 %unsignedp)
  br label %if.end377

if.else:                                          ; preds = %if.end155
  switch i32 %bf.clear, label %if.else347 [
    i32 15, label %if.then172
    i32 16, label %if.then215
    i32 17, label %if.then261
    i32 18, label %if.then307
  ]

if.then172:                                       ; preds = %if.else
  switch i32 %bf.clear158, label %if.else205 [
    i32 4, label %if.then178
    i32 5, label %if.then187
    i32 6, label %if.then199
  ]

if.then178:                                       ; preds = %if.then172
  %33 = load %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 83), align 8, !tbaa !1
  %34 = load %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 71), align 8, !tbaa !1
  %cond180 = select i1 %tobool46, %struct.rtx_def* %33, %struct.rtx_def* %34
  br label %if.end352

if.then187:                                       ; preds = %if.then172
  %35 = load %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 84), align 16, !tbaa !1
  %36 = load %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 72), align 16, !tbaa !1
  %cond192 = select i1 %tobool46, %struct.rtx_def* %35, %struct.rtx_def* %36
  br label %if.end352

if.then199:                                       ; preds = %if.then172
  %37 = load %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 85), align 8, !tbaa !1
  %38 = load %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 73), align 8, !tbaa !1
  %cond204 = select i1 %tobool46, %struct.rtx_def* %37, %struct.rtx_def* %38
  br label %if.end352

if.else205:                                       ; preds = %if.then172
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 4506, i8* getelementptr inbounds ([11 x i8]* @__FUNCTION__.expand_fix, i64 0, i64 0)) #6
  unreachable

if.then215:                                       ; preds = %if.else
  switch i32 %bf.clear158, label %if.else251 [
    i32 4, label %if.then221
    i32 5, label %if.then233
    i32 6, label %if.then245
  ]

if.then221:                                       ; preds = %if.then215
  %39 = load %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 86), align 16, !tbaa !1
  %40 = load %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 74), align 16, !tbaa !1
  %cond226 = select i1 %tobool46, %struct.rtx_def* %39, %struct.rtx_def* %40
  br label %if.end352

if.then233:                                       ; preds = %if.then215
  %41 = load %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 87), align 8, !tbaa !1
  %42 = load %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 75), align 8, !tbaa !1
  %cond238 = select i1 %tobool46, %struct.rtx_def* %41, %struct.rtx_def* %42
  br label %if.end352

if.then245:                                       ; preds = %if.then215
  %43 = load %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 88), align 16, !tbaa !1
  %44 = load %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 76), align 16, !tbaa !1
  %cond250 = select i1 %tobool46, %struct.rtx_def* %43, %struct.rtx_def* %44
  br label %if.end352

if.else251:                                       ; preds = %if.then215
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 4517, i8* getelementptr inbounds ([11 x i8]* @__FUNCTION__.expand_fix, i64 0, i64 0)) #6
  unreachable

if.then261:                                       ; preds = %if.else
  switch i32 %bf.clear158, label %if.else297 [
    i32 4, label %if.then267
    i32 5, label %if.then279
    i32 6, label %if.then291
  ]

if.then267:                                       ; preds = %if.then261
  %45 = load %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 89), align 8, !tbaa !1
  %46 = load %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 77), align 8, !tbaa !1
  %cond272 = select i1 %tobool46, %struct.rtx_def* %45, %struct.rtx_def* %46
  br label %if.end352

if.then279:                                       ; preds = %if.then261
  %47 = load %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 90), align 16, !tbaa !1
  %48 = load %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 78), align 16, !tbaa !1
  %cond284 = select i1 %tobool46, %struct.rtx_def* %47, %struct.rtx_def* %48
  br label %if.end352

if.then291:                                       ; preds = %if.then261
  %49 = load %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 91), align 8, !tbaa !1
  %50 = load %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 79), align 8, !tbaa !1
  %cond296 = select i1 %tobool46, %struct.rtx_def* %49, %struct.rtx_def* %50
  br label %if.end352

if.else297:                                       ; preds = %if.then261
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 4528, i8* getelementptr inbounds ([11 x i8]* @__FUNCTION__.expand_fix, i64 0, i64 0)) #6
  unreachable

if.then307:                                       ; preds = %if.else
  switch i32 %bf.clear158, label %if.else343 [
    i32 4, label %if.then313
    i32 5, label %if.then325
    i32 6, label %if.then337
  ]

if.then313:                                       ; preds = %if.then307
  %51 = load %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 92), align 16, !tbaa !1
  %52 = load %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 80), align 16, !tbaa !1
  %cond318 = select i1 %tobool46, %struct.rtx_def* %51, %struct.rtx_def* %52
  br label %if.end352

if.then325:                                       ; preds = %if.then307
  %53 = load %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 93), align 8, !tbaa !1
  %54 = load %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 81), align 8, !tbaa !1
  %cond330 = select i1 %tobool46, %struct.rtx_def* %53, %struct.rtx_def* %54
  br label %if.end352

if.then337:                                       ; preds = %if.then307
  %55 = load %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 94), align 16, !tbaa !1
  %56 = load %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 82), align 16, !tbaa !1
  %cond342 = select i1 %tobool46, %struct.rtx_def* %55, %struct.rtx_def* %56
  br label %if.end352

if.else343:                                       ; preds = %if.then307
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 4539, i8* getelementptr inbounds ([11 x i8]* @__FUNCTION__.expand_fix, i64 0, i64 0)) #6
  unreachable

if.else347:                                       ; preds = %if.else
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 4542, i8* getelementptr inbounds ([11 x i8]* @__FUNCTION__.expand_fix, i64 0, i64 0)) #6
  unreachable

if.end352:                                        ; preds = %if.then187, %if.then199, %if.then178, %if.then279, %if.then291, %if.then267, %if.then313, %if.then337, %if.then325, %if.then221, %if.then245, %if.then233
  %libfcn.0 = phi %struct.rtx_def* [ %cond180, %if.then178 ], [ %cond192, %if.then187 ], [ %cond204, %if.then199 ], [ %cond226, %if.then221 ], [ %cond238, %if.then233 ], [ %cond250, %if.then245 ], [ %cond272, %if.then267 ], [ %cond284, %if.then279 ], [ %cond296, %if.then291 ], [ %cond318, %if.then313 ], [ %cond330, %if.then325 ], [ %cond342, %if.then337 ]
  %tobool353 = icmp eq %struct.rtx_def* %libfcn.0, null
  br i1 %tobool353, label %if.end393, label %if.then354

if.then354:                                       ; preds = %if.end352
  %call357 = call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %to, i32 1) #3
  %call358 = call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %from, i32 0) #3
  %57 = load i32* @flag_force_mem, align 4, !tbaa !7
  %tobool359 = icmp eq i32 %57, 0
  br i1 %tobool359, label %if.end362, label %if.then360

if.then360:                                       ; preds = %if.then354
  %call361 = call %struct.rtx_def* @force_not_mem(%struct.rtx_def* %call358) #3
  br label %if.end362

if.end362:                                        ; preds = %if.then354, %if.then360
  %from.addr.4 = phi %struct.rtx_def* [ %call361, %if.then360 ], [ %call358, %if.then354 ]
  call void @start_sequence() #3
  %58 = getelementptr inbounds %struct.rtx_def* %call357, i64 0, i32 0
  %bf.load363 = load i32* %58, align 8
  %bf.lshr364 = lshr i32 %bf.load363, 16
  %bf.clear365 = and i32 %bf.lshr364, 255
  %59 = getelementptr inbounds %struct.rtx_def* %from.addr.4, i64 0, i32 0
  %bf.load366 = load i32* %59, align 8
  %bf.lshr367 = lshr i32 %bf.load366, 16
  %bf.clear368 = and i32 %bf.lshr367, 255
  %call369 = call %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32, i32, i32, ...)* @emit_library_call_value(%struct.rtx_def* %libfcn.0, %struct.rtx_def* null, i32 1, i32 %bf.clear365, i32 1, %struct.rtx_def* %from.addr.4, i32 %bf.clear368) #3
  %call370 = call %struct.rtx_def* @get_insns() #3
  call void @end_sequence() #3
  %cond372 = select i1 %tobool46, i32 128, i32 126
  %bf.load373 = load i32* %58, align 8
  %bf.lshr374 = lshr i32 %bf.load373, 16
  %bf.clear375 = and i32 %bf.lshr374, 255
  %call376 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 %cond372, i32 %bf.clear375, %struct.rtx_def* %from.addr.4) #3
  call void @emit_libcall_block(%struct.rtx_def* %call370, %struct.rtx_def* %to, %struct.rtx_def* %call369, %struct.rtx_def* %call376)
  br label %if.end377

if.end377:                                        ; preds = %if.end352.thread, %if.end362
  %target.1563 = phi %struct.rtx_def* [ %to, %if.end362 ], [ %call166, %if.end352.thread ]
  %to.addr.0 = phi %struct.rtx_def* [ %call357, %if.end362 ], [ %to, %if.end352.thread ]
  %cmp378 = icmp eq %struct.rtx_def* %target.1563, %to.addr.0
  br i1 %cmp378, label %if.end393, label %if.then380

if.then380:                                       ; preds = %if.end377
  %60 = getelementptr inbounds %struct.rtx_def* %to.addr.0, i64 0, i32 0
  %bf.load381 = load i32* %60, align 8
  %61 = getelementptr inbounds %struct.rtx_def* %target.1563, i64 0, i32 0
  %bf.load384 = load i32* %61, align 8
  %bf.lshr382523 = xor i32 %bf.load384, %bf.load381
  %62 = and i32 %bf.lshr382523, 16711680
  %cmp387 = icmp eq i32 %62, 0
  br i1 %cmp387, label %if.then389, label %if.else391

if.then389:                                       ; preds = %if.then380
  %call390 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %to.addr.0, %struct.rtx_def* %target.1563) #3
  br label %if.end393

if.else391:                                       ; preds = %if.then380
  call void @convert_move(%struct.rtx_def* %to.addr.0, %struct.rtx_def* %target.1563, i32 0) #3
  br label %if.end393

if.end393:                                        ; preds = %if.end352, %if.end35, %if.end131, %if.end377, %if.then389, %if.else391, %if.then140, %if.then38
  ret void
}

declare i64 @trunc_int_for_mode(i64, i32) #2

; Function Attrs: nounwind readonly uwtable
define i32 @have_insn_for(i32 %code, i32 %mode) #4 {
entry:
  %idxprom = sext i32 %code to i64
  %arrayidx = getelementptr inbounds [154 x %struct.optab*]* @code_to_optab, i64 0, i64 %idxprom
  %0 = load %struct.optab** %arrayidx, align 8, !tbaa !1
  %cmp = icmp eq %struct.optab* %0, null
  br i1 %cmp, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %entry
  %idxprom1 = sext i32 %mode to i64
  %insn_code = getelementptr inbounds %struct.optab* %0, i64 0, i32 1, i64 %idxprom1, i32 0
  %1 = load i32* %insn_code, align 4, !tbaa !10
  %cmp5 = icmp ne i32 %1, 1317
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %2 = phi i1 [ false, %entry ], [ %cmp5, %land.rhs ]
  %land.ext = zext i1 %2 to i32
  ret i32 %land.ext
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @init_one_libfunc(i8* %name) #0 {
entry:
  %call = tail call %union.tree_node* @get_identifier(i8* %name) #3
  %0 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1 = tail call %union.tree_node* @build_function_type(%union.tree_node* %0, %union.tree_node* null) #3
  %call2 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call, %union.tree_node* %call1) #3
  %artificial_flag = getelementptr inbounds %union.tree_node* %call2, i64 0, i32 0, i32 5
  %1 = bitcast i48* %artificial_flag to i64*
  %bf.load = load i64* %1, align 8
  %bf.set7 = or i64 %bf.load, 4194560
  store i64 %bf.set7, i64* %1, align 8
  %public_flag = getelementptr inbounds %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 2
  %bf.load8 = load i32* %public_flag, align 8
  %bf.set10 = or i32 %bf.load8, 524288
  store i32 %bf.set10, i32* %public_flag, align 8
  %rtl = getelementptr inbounds %union.tree_node* %call2, i64 0, i32 0, i32 17
  %2 = load %struct.rtx_def** %rtl, align 8, !tbaa !32
  %tobool = icmp eq %struct.rtx_def* %2, null
  br i1 %tobool, label %cond.false, label %cond.end

cond.false:                                       ; preds = %entry
  tail call void @make_decl_rtl(%union.tree_node* %call2, i8* null) #3
  %3 = load %struct.rtx_def** %rtl, align 8, !tbaa !32
  br label %cond.end

cond.end:                                         ; preds = %entry, %cond.false
  %cond = phi %struct.rtx_def* [ %3, %cond.false ], [ %2, %entry ]
  %arrayidx = getelementptr inbounds %struct.rtx_def* %cond, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %4 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  ret %struct.rtx_def* %4
}

declare %union.tree_node* @build_decl(i32, %union.tree_node*, %union.tree_node*) #2

declare %union.tree_node* @get_identifier(i8*) #2

declare %union.tree_node* @build_function_type(%union.tree_node*, %union.tree_node*) #2

declare void @make_decl_rtl(%union.tree_node*, i8*) #2

; Function Attrs: nounwind uwtable
define void @mark_optab(i8* nocapture readonly %arg) #0 {
entry:
  %0 = bitcast i8* %arg to %struct.optab**
  %1 = load %struct.optab** %0, align 8, !tbaa !1
  br label %do.body

do.body:                                          ; preds = %for.inc, %entry
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next, %for.inc ]
  %libfunc = getelementptr inbounds %struct.optab* %1, i64 0, i32 1, i64 %indvars.iv, i32 1
  %2 = load %struct.rtx_def** %libfunc, align 8, !tbaa !21
  %cmp1 = icmp eq %struct.rtx_def* %2, null
  br i1 %cmp1, label %for.inc, label %land.lhs.true

land.lhs.true:                                    ; preds = %do.body
  %3 = bitcast %struct.rtx_def* %2 to i8*
  %call = tail call i32 @ggc_set_mark(i8* %3) #3
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.then, label %for.inc

if.then:                                          ; preds = %land.lhs.true
  tail call void @ggc_mark_rtx_children(%struct.rtx_def* %2) #3
  br label %for.inc

for.inc:                                          ; preds = %land.lhs.true, %do.body, %if.then
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 59
  br i1 %exitcond, label %for.end, label %do.body

for.end:                                          ; preds = %for.inc
  ret void
}

declare i32 @ggc_set_mark(i8*) #2

declare void @ggc_mark_rtx_children(%struct.rtx_def*) #2

; Function Attrs: nounwind uwtable
define void @init_optabs() #0 {
entry:
  br label %for.cond2.preheader

for.cond2.preheader:                              ; preds = %for.inc19, %entry
  %indvars.iv2436 = phi i64 [ 0, %entry ], [ %indvars.iv.next2437, %for.inc19 ]
  br label %for.cond7.preheader

for.cond7.preheader:                              ; preds = %for.cond7.preheader, %for.cond2.preheader
  %indvars.iv2433 = phi i64 [ 0, %for.cond2.preheader ], [ %indvars.iv.next2434, %for.cond7.preheader ]
  %arrayidx15 = getelementptr inbounds [59 x [59 x [2 x i32]]]* @fixtab, i64 0, i64 %indvars.iv2436, i64 %indvars.iv2433, i64 0
  store i32 1317, i32* %arrayidx15, align 8, !tbaa !9
  %arrayidx15.1 = getelementptr inbounds [59 x [59 x [2 x i32]]]* @fixtab, i64 0, i64 %indvars.iv2436, i64 %indvars.iv2433, i64 1
  store i32 1317, i32* %arrayidx15.1, align 4, !tbaa !9
  %indvars.iv.next2434 = add nuw nsw i64 %indvars.iv2433, 1
  %exitcond2435 = icmp eq i64 %indvars.iv.next2434, 59
  br i1 %exitcond2435, label %for.inc19, label %for.cond7.preheader

for.inc19:                                        ; preds = %for.cond7.preheader
  %indvars.iv.next2437 = add nuw nsw i64 %indvars.iv2436, 1
  %exitcond2438 = icmp eq i64 %indvars.iv.next2437, 59
  br i1 %exitcond2438, label %for.cond27.preheader, label %for.cond2.preheader

for.cond27.preheader:                             ; preds = %for.inc19, %for.inc49
  %indvars.iv2427 = phi i64 [ %indvars.iv.next2428, %for.inc49 ], [ 0, %for.inc19 ]
  br label %for.cond32.preheader

for.cond32.preheader:                             ; preds = %for.cond32.preheader, %for.cond27.preheader
  %indvars.iv2424 = phi i64 [ 0, %for.cond27.preheader ], [ %indvars.iv.next2425, %for.cond32.preheader ]
  %arrayidx42 = getelementptr inbounds [59 x [59 x [2 x i32]]]* @fixtrunctab, i64 0, i64 %indvars.iv2427, i64 %indvars.iv2424, i64 0
  store i32 1317, i32* %arrayidx42, align 8, !tbaa !9
  %arrayidx42.1 = getelementptr inbounds [59 x [59 x [2 x i32]]]* @fixtrunctab, i64 0, i64 %indvars.iv2427, i64 %indvars.iv2424, i64 1
  store i32 1317, i32* %arrayidx42.1, align 4, !tbaa !9
  %indvars.iv.next2425 = add nuw nsw i64 %indvars.iv2424, 1
  %exitcond2426 = icmp eq i64 %indvars.iv.next2425, 59
  br i1 %exitcond2426, label %for.inc49, label %for.cond32.preheader

for.inc49:                                        ; preds = %for.cond32.preheader
  %indvars.iv.next2428 = add nuw nsw i64 %indvars.iv2427, 1
  %exitcond2429 = icmp eq i64 %indvars.iv.next2428, 59
  br i1 %exitcond2429, label %for.cond57.preheader, label %for.cond27.preheader

for.cond57.preheader:                             ; preds = %for.inc49, %for.inc79
  %indvars.iv2418 = phi i64 [ %indvars.iv.next2419, %for.inc79 ], [ 0, %for.inc49 ]
  br label %for.cond62.preheader

for.cond62.preheader:                             ; preds = %for.cond62.preheader, %for.cond57.preheader
  %indvars.iv2415 = phi i64 [ 0, %for.cond57.preheader ], [ %indvars.iv.next2416, %for.cond62.preheader ]
  %arrayidx72 = getelementptr inbounds [59 x [59 x [2 x i32]]]* @floattab, i64 0, i64 %indvars.iv2418, i64 %indvars.iv2415, i64 0
  store i32 1317, i32* %arrayidx72, align 8, !tbaa !9
  %arrayidx72.1 = getelementptr inbounds [59 x [59 x [2 x i32]]]* @floattab, i64 0, i64 %indvars.iv2418, i64 %indvars.iv2415, i64 1
  store i32 1317, i32* %arrayidx72.1, align 4, !tbaa !9
  %indvars.iv.next2416 = add nuw nsw i64 %indvars.iv2415, 1
  %exitcond2417 = icmp eq i64 %indvars.iv.next2416, 59
  br i1 %exitcond2417, label %for.inc79, label %for.cond62.preheader

for.inc79:                                        ; preds = %for.cond62.preheader
  %indvars.iv.next2419 = add nuw nsw i64 %indvars.iv2418, 1
  %exitcond2420 = icmp eq i64 %indvars.iv.next2419, 59
  br i1 %exitcond2420, label %for.cond87.preheader, label %for.cond57.preheader

for.cond87.preheader:                             ; preds = %for.inc79, %for.inc109
  %indvars.iv2409 = phi i64 [ %indvars.iv.next2410, %for.inc109 ], [ 0, %for.inc79 ]
  br label %for.cond92.preheader

for.cond92.preheader:                             ; preds = %for.cond92.preheader, %for.cond87.preheader
  %indvars.iv2406 = phi i64 [ 0, %for.cond87.preheader ], [ %indvars.iv.next2407, %for.cond92.preheader ]
  %arrayidx102 = getelementptr inbounds [59 x [59 x [2 x i32]]]* @extendtab, i64 0, i64 %indvars.iv2409, i64 %indvars.iv2406, i64 0
  store i32 1317, i32* %arrayidx102, align 8, !tbaa !9
  %arrayidx102.1 = getelementptr inbounds [59 x [59 x [2 x i32]]]* @extendtab, i64 0, i64 %indvars.iv2409, i64 %indvars.iv2406, i64 1
  store i32 1317, i32* %arrayidx102.1, align 4, !tbaa !9
  %indvars.iv.next2407 = add nuw nsw i64 %indvars.iv2406, 1
  %exitcond2408 = icmp eq i64 %indvars.iv.next2407, 59
  br i1 %exitcond2408, label %for.inc109, label %for.cond92.preheader

for.inc109:                                       ; preds = %for.cond92.preheader
  %indvars.iv.next2410 = add nuw nsw i64 %indvars.iv2409, 1
  %exitcond2411 = icmp eq i64 %indvars.iv.next2410, 59
  br i1 %exitcond2411, label %for.body115, label %for.cond87.preheader

for.body115:                                      ; preds = %for.inc109, %for.body115
  %indvars.iv2400 = phi i64 [ %indvars.iv.next2401, %for.body115 ], [ 0, %for.inc109 ]
  %arrayidx117 = getelementptr inbounds [153 x i32]* @setcc_gen_code, i64 0, i64 %indvars.iv2400
  store i32 1317, i32* %arrayidx117, align 4, !tbaa !9
  %indvars.iv.next2401 = add nuw nsw i64 %indvars.iv2400, 1
  %exitcond2402 = icmp eq i64 %indvars.iv.next2401, 153
  br i1 %exitcond2402, label %for.body124, label %for.body115

for.body124:                                      ; preds = %for.body115, %for.body124
  %indvars.iv2397 = phi i64 [ %indvars.iv.next2398, %for.body124 ], [ 0, %for.body115 ]
  %arrayidx126 = getelementptr inbounds [59 x i32]* @movcc_gen_code, i64 0, i64 %indvars.iv2397
  store i32 1317, i32* %arrayidx126, align 4, !tbaa !9
  %indvars.iv.next2398 = add nuw nsw i64 %indvars.iv2397, 1
  %exitcond2399 = icmp eq i64 %indvars.iv.next2398, 59
  br i1 %exitcond2399, label %for.end129, label %for.body124

for.end129:                                       ; preds = %for.body124
  %call.i.i = tail call noalias i8* @xmalloc(i64 952) #3
  %handlers.i.i = getelementptr inbounds i8* %call.i.i, i64 8
  %0 = bitcast i8* %handlers.i.i to [59 x %struct.anon.3]*
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.body.i.i, %for.end129
  %indvars.iv.i.i = phi i64 [ 0, %for.end129 ], [ %indvars.iv.next.i.i, %for.body.i.i ]
  %insn_code.i.i = getelementptr inbounds [59 x %struct.anon.3]* %0, i64 0, i64 %indvars.iv.i.i, i32 0
  store i32 1317, i32* %insn_code.i.i, align 4, !tbaa !10
  %libfunc.i.i = getelementptr inbounds [59 x %struct.anon.3]* %0, i64 0, i64 %indvars.iv.i.i, i32 1
  store %struct.rtx_def* null, %struct.rtx_def** %libfunc.i.i, align 8, !tbaa !21
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.i.i = icmp eq i64 %indvars.iv.next.i.i, 59
  br i1 %exitcond.i.i, label %init_optab.exit, label %for.body.i.i

init_optab.exit:                                  ; preds = %for.body.i.i
  %1 = bitcast i8* %call.i.i to %struct.optab*
  %code1.i = bitcast i8* %call.i.i to i32*
  store i32 75, i32* %code1.i, align 4, !tbaa !5
  store %struct.optab* %1, %struct.optab** getelementptr inbounds ([154 x %struct.optab*]* @code_to_optab, i64 0, i64 75), align 8, !tbaa !1
  store %struct.optab* %1, %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 0), align 16, !tbaa !1
  %call.i.i342 = tail call noalias i8* @xmalloc(i64 952) #3
  %handlers.i.i343 = getelementptr inbounds i8* %call.i.i342, i64 8
  %2 = bitcast i8* %handlers.i.i343 to [59 x %struct.anon.3]*
  br label %for.body.i.i349

for.body.i.i349:                                  ; preds = %for.body.i.i349, %init_optab.exit
  %indvars.iv.i.i344 = phi i64 [ 0, %init_optab.exit ], [ %indvars.iv.next.i.i347, %for.body.i.i349 ]
  %insn_code.i.i345 = getelementptr inbounds [59 x %struct.anon.3]* %2, i64 0, i64 %indvars.iv.i.i344, i32 0
  store i32 1317, i32* %insn_code.i.i345, align 4, !tbaa !10
  %libfunc.i.i346 = getelementptr inbounds [59 x %struct.anon.3]* %2, i64 0, i64 %indvars.iv.i.i344, i32 1
  store %struct.rtx_def* null, %struct.rtx_def** %libfunc.i.i346, align 8, !tbaa !21
  %indvars.iv.next.i.i347 = add nuw nsw i64 %indvars.iv.i.i344, 1
  %exitcond.i.i348 = icmp eq i64 %indvars.iv.next.i.i347, 59
  br i1 %exitcond.i.i348, label %init_optabv.exit, label %for.body.i.i349

init_optabv.exit:                                 ; preds = %for.body.i.i349
  %3 = bitcast i8* %call.i.i342 to %struct.optab*
  %code1.i350 = bitcast i8* %call.i.i342 to i32*
  store i32 75, i32* %code1.i350, align 4, !tbaa !5
  store %struct.optab* %3, %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 1), align 8, !tbaa !1
  %call.i.i351 = tail call noalias i8* @xmalloc(i64 952) #3
  %handlers.i.i352 = getelementptr inbounds i8* %call.i.i351, i64 8
  %4 = bitcast i8* %handlers.i.i352 to [59 x %struct.anon.3]*
  br label %for.body.i.i358

for.body.i.i358:                                  ; preds = %for.body.i.i358, %init_optabv.exit
  %indvars.iv.i.i353 = phi i64 [ 0, %init_optabv.exit ], [ %indvars.iv.next.i.i356, %for.body.i.i358 ]
  %insn_code.i.i354 = getelementptr inbounds [59 x %struct.anon.3]* %4, i64 0, i64 %indvars.iv.i.i353, i32 0
  store i32 1317, i32* %insn_code.i.i354, align 4, !tbaa !10
  %libfunc.i.i355 = getelementptr inbounds [59 x %struct.anon.3]* %4, i64 0, i64 %indvars.iv.i.i353, i32 1
  store %struct.rtx_def* null, %struct.rtx_def** %libfunc.i.i355, align 8, !tbaa !21
  %indvars.iv.next.i.i356 = add nuw nsw i64 %indvars.iv.i.i353, 1
  %exitcond.i.i357 = icmp eq i64 %indvars.iv.next.i.i356, 59
  br i1 %exitcond.i.i357, label %init_optab.exit360, label %for.body.i.i358

init_optab.exit360:                               ; preds = %for.body.i.i358
  %5 = bitcast i8* %call.i.i351 to %struct.optab*
  %code1.i359 = bitcast i8* %call.i.i351 to i32*
  store i32 76, i32* %code1.i359, align 4, !tbaa !5
  store %struct.optab* %5, %struct.optab** getelementptr inbounds ([154 x %struct.optab*]* @code_to_optab, i64 0, i64 76), align 16, !tbaa !1
  store %struct.optab* %5, %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 2), align 16, !tbaa !1
  %call.i.i361 = tail call noalias i8* @xmalloc(i64 952) #3
  %handlers.i.i362 = getelementptr inbounds i8* %call.i.i361, i64 8
  %6 = bitcast i8* %handlers.i.i362 to [59 x %struct.anon.3]*
  br label %for.body.i.i368

for.body.i.i368:                                  ; preds = %for.body.i.i368, %init_optab.exit360
  %indvars.iv.i.i363 = phi i64 [ 0, %init_optab.exit360 ], [ %indvars.iv.next.i.i366, %for.body.i.i368 ]
  %insn_code.i.i364 = getelementptr inbounds [59 x %struct.anon.3]* %6, i64 0, i64 %indvars.iv.i.i363, i32 0
  store i32 1317, i32* %insn_code.i.i364, align 4, !tbaa !10
  %libfunc.i.i365 = getelementptr inbounds [59 x %struct.anon.3]* %6, i64 0, i64 %indvars.iv.i.i363, i32 1
  store %struct.rtx_def* null, %struct.rtx_def** %libfunc.i.i365, align 8, !tbaa !21
  %indvars.iv.next.i.i366 = add nuw nsw i64 %indvars.iv.i.i363, 1
  %exitcond.i.i367 = icmp eq i64 %indvars.iv.next.i.i366, 59
  br i1 %exitcond.i.i367, label %init_optabv.exit370, label %for.body.i.i368

init_optabv.exit370:                              ; preds = %for.body.i.i368
  %7 = bitcast i8* %call.i.i361 to %struct.optab*
  %code1.i369 = bitcast i8* %call.i.i361 to i32*
  store i32 76, i32* %code1.i369, align 4, !tbaa !5
  store %struct.optab* %7, %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 3), align 8, !tbaa !1
  %call.i.i371 = tail call noalias i8* @xmalloc(i64 952) #3
  %handlers.i.i372 = getelementptr inbounds i8* %call.i.i371, i64 8
  %8 = bitcast i8* %handlers.i.i372 to [59 x %struct.anon.3]*
  br label %for.body.i.i378

for.body.i.i378:                                  ; preds = %for.body.i.i378, %init_optabv.exit370
  %indvars.iv.i.i373 = phi i64 [ 0, %init_optabv.exit370 ], [ %indvars.iv.next.i.i376, %for.body.i.i378 ]
  %insn_code.i.i374 = getelementptr inbounds [59 x %struct.anon.3]* %8, i64 0, i64 %indvars.iv.i.i373, i32 0
  store i32 1317, i32* %insn_code.i.i374, align 4, !tbaa !10
  %libfunc.i.i375 = getelementptr inbounds [59 x %struct.anon.3]* %8, i64 0, i64 %indvars.iv.i.i373, i32 1
  store %struct.rtx_def* null, %struct.rtx_def** %libfunc.i.i375, align 8, !tbaa !21
  %indvars.iv.next.i.i376 = add nuw nsw i64 %indvars.iv.i.i373, 1
  %exitcond.i.i377 = icmp eq i64 %indvars.iv.next.i.i376, 59
  br i1 %exitcond.i.i377, label %init_optab.exit380, label %for.body.i.i378

init_optab.exit380:                               ; preds = %for.body.i.i378
  %9 = bitcast i8* %call.i.i371 to %struct.optab*
  %code1.i379 = bitcast i8* %call.i.i371 to i32*
  store i32 78, i32* %code1.i379, align 4, !tbaa !5
  store %struct.optab* %9, %struct.optab** getelementptr inbounds ([154 x %struct.optab*]* @code_to_optab, i64 0, i64 78), align 16, !tbaa !1
  store %struct.optab* %9, %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 4), align 16, !tbaa !1
  %call.i.i381 = tail call noalias i8* @xmalloc(i64 952) #3
  %handlers.i.i382 = getelementptr inbounds i8* %call.i.i381, i64 8
  %10 = bitcast i8* %handlers.i.i382 to [59 x %struct.anon.3]*
  br label %for.body.i.i388

for.body.i.i388:                                  ; preds = %for.body.i.i388, %init_optab.exit380
  %indvars.iv.i.i383 = phi i64 [ 0, %init_optab.exit380 ], [ %indvars.iv.next.i.i386, %for.body.i.i388 ]
  %insn_code.i.i384 = getelementptr inbounds [59 x %struct.anon.3]* %10, i64 0, i64 %indvars.iv.i.i383, i32 0
  store i32 1317, i32* %insn_code.i.i384, align 4, !tbaa !10
  %libfunc.i.i385 = getelementptr inbounds [59 x %struct.anon.3]* %10, i64 0, i64 %indvars.iv.i.i383, i32 1
  store %struct.rtx_def* null, %struct.rtx_def** %libfunc.i.i385, align 8, !tbaa !21
  %indvars.iv.next.i.i386 = add nuw nsw i64 %indvars.iv.i.i383, 1
  %exitcond.i.i387 = icmp eq i64 %indvars.iv.next.i.i386, 59
  br i1 %exitcond.i.i387, label %init_optabv.exit390, label %for.body.i.i388

init_optabv.exit390:                              ; preds = %for.body.i.i388
  %11 = bitcast i8* %call.i.i381 to %struct.optab*
  %code1.i389 = bitcast i8* %call.i.i381 to i32*
  store i32 78, i32* %code1.i389, align 4, !tbaa !5
  store %struct.optab* %11, %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 5), align 8, !tbaa !1
  %call.i.i391 = tail call noalias i8* @xmalloc(i64 952) #3
  %handlers.i.i392 = getelementptr inbounds i8* %call.i.i391, i64 8
  %12 = bitcast i8* %handlers.i.i392 to [59 x %struct.anon.3]*
  br label %for.body.i.i398

for.body.i.i398:                                  ; preds = %for.body.i.i398, %init_optabv.exit390
  %indvars.iv.i.i393 = phi i64 [ 0, %init_optabv.exit390 ], [ %indvars.iv.next.i.i396, %for.body.i.i398 ]
  %insn_code.i.i394 = getelementptr inbounds [59 x %struct.anon.3]* %12, i64 0, i64 %indvars.iv.i.i393, i32 0
  store i32 1317, i32* %insn_code.i.i394, align 4, !tbaa !10
  %libfunc.i.i395 = getelementptr inbounds [59 x %struct.anon.3]* %12, i64 0, i64 %indvars.iv.i.i393, i32 1
  store %struct.rtx_def* null, %struct.rtx_def** %libfunc.i.i395, align 8, !tbaa !21
  %indvars.iv.next.i.i396 = add nuw nsw i64 %indvars.iv.i.i393, 1
  %exitcond.i.i397 = icmp eq i64 %indvars.iv.next.i.i396, 59
  br i1 %exitcond.i.i397, label %init_optab.exit400, label %for.body.i.i398

init_optab.exit400:                               ; preds = %for.body.i.i398
  %13 = bitcast i8* %call.i.i391 to %struct.optab*
  %code1.i399 = bitcast i8* %call.i.i391 to i32*
  store i32 0, i32* %code1.i399, align 4, !tbaa !5
  store %struct.optab* %13, %struct.optab** getelementptr inbounds ([154 x %struct.optab*]* @code_to_optab, i64 0, i64 0), align 16, !tbaa !1
  store %struct.optab* %13, %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 6), align 16, !tbaa !1
  %call.i.i401 = tail call noalias i8* @xmalloc(i64 952) #3
  %handlers.i.i402 = getelementptr inbounds i8* %call.i.i401, i64 8
  %14 = bitcast i8* %handlers.i.i402 to [59 x %struct.anon.3]*
  br label %for.body.i.i408

for.body.i.i408:                                  ; preds = %for.body.i.i408, %init_optab.exit400
  %indvars.iv.i.i403 = phi i64 [ 0, %init_optab.exit400 ], [ %indvars.iv.next.i.i406, %for.body.i.i408 ]
  %insn_code.i.i404 = getelementptr inbounds [59 x %struct.anon.3]* %14, i64 0, i64 %indvars.iv.i.i403, i32 0
  store i32 1317, i32* %insn_code.i.i404, align 4, !tbaa !10
  %libfunc.i.i405 = getelementptr inbounds [59 x %struct.anon.3]* %14, i64 0, i64 %indvars.iv.i.i403, i32 1
  store %struct.rtx_def* null, %struct.rtx_def** %libfunc.i.i405, align 8, !tbaa !21
  %indvars.iv.next.i.i406 = add nuw nsw i64 %indvars.iv.i.i403, 1
  %exitcond.i.i407 = icmp eq i64 %indvars.iv.next.i.i406, 59
  br i1 %exitcond.i.i407, label %init_optab.exit410, label %for.body.i.i408

init_optab.exit410:                               ; preds = %for.body.i.i408
  %15 = bitcast i8* %call.i.i401 to %struct.optab*
  %code1.i409 = bitcast i8* %call.i.i401 to i32*
  store i32 0, i32* %code1.i409, align 4, !tbaa !5
  store %struct.optab* %15, %struct.optab** getelementptr inbounds ([154 x %struct.optab*]* @code_to_optab, i64 0, i64 0), align 16, !tbaa !1
  store %struct.optab* %15, %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 7), align 8, !tbaa !1
  %call.i.i411 = tail call noalias i8* @xmalloc(i64 952) #3
  %handlers.i.i412 = getelementptr inbounds i8* %call.i.i411, i64 8
  %16 = bitcast i8* %handlers.i.i412 to [59 x %struct.anon.3]*
  br label %for.body.i.i418

for.body.i.i418:                                  ; preds = %for.body.i.i418, %init_optab.exit410
  %indvars.iv.i.i413 = phi i64 [ 0, %init_optab.exit410 ], [ %indvars.iv.next.i.i416, %for.body.i.i418 ]
  %insn_code.i.i414 = getelementptr inbounds [59 x %struct.anon.3]* %16, i64 0, i64 %indvars.iv.i.i413, i32 0
  store i32 1317, i32* %insn_code.i.i414, align 4, !tbaa !10
  %libfunc.i.i415 = getelementptr inbounds [59 x %struct.anon.3]* %16, i64 0, i64 %indvars.iv.i.i413, i32 1
  store %struct.rtx_def* null, %struct.rtx_def** %libfunc.i.i415, align 8, !tbaa !21
  %indvars.iv.next.i.i416 = add nuw nsw i64 %indvars.iv.i.i413, 1
  %exitcond.i.i417 = icmp eq i64 %indvars.iv.next.i.i416, 59
  br i1 %exitcond.i.i417, label %init_optab.exit420, label %for.body.i.i418

init_optab.exit420:                               ; preds = %for.body.i.i418
  %17 = bitcast i8* %call.i.i411 to %struct.optab*
  %code1.i419 = bitcast i8* %call.i.i411 to i32*
  store i32 0, i32* %code1.i419, align 4, !tbaa !5
  store %struct.optab* %17, %struct.optab** getelementptr inbounds ([154 x %struct.optab*]* @code_to_optab, i64 0, i64 0), align 16, !tbaa !1
  store %struct.optab* %17, %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 8), align 16, !tbaa !1
  %call.i.i421 = tail call noalias i8* @xmalloc(i64 952) #3
  %handlers.i.i422 = getelementptr inbounds i8* %call.i.i421, i64 8
  %18 = bitcast i8* %handlers.i.i422 to [59 x %struct.anon.3]*
  br label %for.body.i.i428

for.body.i.i428:                                  ; preds = %for.body.i.i428, %init_optab.exit420
  %indvars.iv.i.i423 = phi i64 [ 0, %init_optab.exit420 ], [ %indvars.iv.next.i.i426, %for.body.i.i428 ]
  %insn_code.i.i424 = getelementptr inbounds [59 x %struct.anon.3]* %18, i64 0, i64 %indvars.iv.i.i423, i32 0
  store i32 1317, i32* %insn_code.i.i424, align 4, !tbaa !10
  %libfunc.i.i425 = getelementptr inbounds [59 x %struct.anon.3]* %18, i64 0, i64 %indvars.iv.i.i423, i32 1
  store %struct.rtx_def* null, %struct.rtx_def** %libfunc.i.i425, align 8, !tbaa !21
  %indvars.iv.next.i.i426 = add nuw nsw i64 %indvars.iv.i.i423, 1
  %exitcond.i.i427 = icmp eq i64 %indvars.iv.next.i.i426, 59
  br i1 %exitcond.i.i427, label %init_optab.exit430, label %for.body.i.i428

init_optab.exit430:                               ; preds = %for.body.i.i428
  %19 = bitcast i8* %call.i.i421 to %struct.optab*
  %code1.i429 = bitcast i8* %call.i.i421 to i32*
  store i32 0, i32* %code1.i429, align 4, !tbaa !5
  store %struct.optab* %19, %struct.optab** getelementptr inbounds ([154 x %struct.optab*]* @code_to_optab, i64 0, i64 0), align 16, !tbaa !1
  store %struct.optab* %19, %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 9), align 8, !tbaa !1
  %call.i.i431 = tail call noalias i8* @xmalloc(i64 952) #3
  %handlers.i.i432 = getelementptr inbounds i8* %call.i.i431, i64 8
  %20 = bitcast i8* %handlers.i.i432 to [59 x %struct.anon.3]*
  br label %for.body.i.i438

for.body.i.i438:                                  ; preds = %for.body.i.i438, %init_optab.exit430
  %indvars.iv.i.i433 = phi i64 [ 0, %init_optab.exit430 ], [ %indvars.iv.next.i.i436, %for.body.i.i438 ]
  %insn_code.i.i434 = getelementptr inbounds [59 x %struct.anon.3]* %20, i64 0, i64 %indvars.iv.i.i433, i32 0
  store i32 1317, i32* %insn_code.i.i434, align 4, !tbaa !10
  %libfunc.i.i435 = getelementptr inbounds [59 x %struct.anon.3]* %20, i64 0, i64 %indvars.iv.i.i433, i32 1
  store %struct.rtx_def* null, %struct.rtx_def** %libfunc.i.i435, align 8, !tbaa !21
  %indvars.iv.next.i.i436 = add nuw nsw i64 %indvars.iv.i.i433, 1
  %exitcond.i.i437 = icmp eq i64 %indvars.iv.next.i.i436, 59
  br i1 %exitcond.i.i437, label %init_optab.exit440, label %for.body.i.i438

init_optab.exit440:                               ; preds = %for.body.i.i438
  %21 = bitcast i8* %call.i.i431 to %struct.optab*
  %code1.i439 = bitcast i8* %call.i.i431 to i32*
  store i32 79, i32* %code1.i439, align 4, !tbaa !5
  store %struct.optab* %21, %struct.optab** getelementptr inbounds ([154 x %struct.optab*]* @code_to_optab, i64 0, i64 79), align 8, !tbaa !1
  store %struct.optab* %21, %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 10), align 16, !tbaa !1
  %call.i.i441 = tail call noalias i8* @xmalloc(i64 952) #3
  %handlers.i.i442 = getelementptr inbounds i8* %call.i.i441, i64 8
  %22 = bitcast i8* %handlers.i.i442 to [59 x %struct.anon.3]*
  br label %for.body.i.i448

for.body.i.i448:                                  ; preds = %for.body.i.i448, %init_optab.exit440
  %indvars.iv.i.i443 = phi i64 [ 0, %init_optab.exit440 ], [ %indvars.iv.next.i.i446, %for.body.i.i448 ]
  %insn_code.i.i444 = getelementptr inbounds [59 x %struct.anon.3]* %22, i64 0, i64 %indvars.iv.i.i443, i32 0
  store i32 1317, i32* %insn_code.i.i444, align 4, !tbaa !10
  %libfunc.i.i445 = getelementptr inbounds [59 x %struct.anon.3]* %22, i64 0, i64 %indvars.iv.i.i443, i32 1
  store %struct.rtx_def* null, %struct.rtx_def** %libfunc.i.i445, align 8, !tbaa !21
  %indvars.iv.next.i.i446 = add nuw nsw i64 %indvars.iv.i.i443, 1
  %exitcond.i.i447 = icmp eq i64 %indvars.iv.next.i.i446, 59
  br i1 %exitcond.i.i447, label %init_optabv.exit450, label %for.body.i.i448

init_optabv.exit450:                              ; preds = %for.body.i.i448
  %23 = bitcast i8* %call.i.i441 to %struct.optab*
  %code1.i449 = bitcast i8* %call.i.i441 to i32*
  store i32 79, i32* %code1.i449, align 4, !tbaa !5
  store %struct.optab* %23, %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 11), align 8, !tbaa !1
  %call.i.i451 = tail call noalias i8* @xmalloc(i64 952) #3
  %handlers.i.i452 = getelementptr inbounds i8* %call.i.i451, i64 8
  %24 = bitcast i8* %handlers.i.i452 to [59 x %struct.anon.3]*
  br label %for.body.i.i458

for.body.i.i458:                                  ; preds = %for.body.i.i458, %init_optabv.exit450
  %indvars.iv.i.i453 = phi i64 [ 0, %init_optabv.exit450 ], [ %indvars.iv.next.i.i456, %for.body.i.i458 ]
  %insn_code.i.i454 = getelementptr inbounds [59 x %struct.anon.3]* %24, i64 0, i64 %indvars.iv.i.i453, i32 0
  store i32 1317, i32* %insn_code.i.i454, align 4, !tbaa !10
  %libfunc.i.i455 = getelementptr inbounds [59 x %struct.anon.3]* %24, i64 0, i64 %indvars.iv.i.i453, i32 1
  store %struct.rtx_def* null, %struct.rtx_def** %libfunc.i.i455, align 8, !tbaa !21
  %indvars.iv.next.i.i456 = add nuw nsw i64 %indvars.iv.i.i453, 1
  %exitcond.i.i457 = icmp eq i64 %indvars.iv.next.i.i456, 59
  br i1 %exitcond.i.i457, label %init_optab.exit460, label %for.body.i.i458

init_optab.exit460:                               ; preds = %for.body.i.i458
  %25 = bitcast i8* %call.i.i451 to %struct.optab*
  %code1.i459 = bitcast i8* %call.i.i451 to i32*
  store i32 0, i32* %code1.i459, align 4, !tbaa !5
  store %struct.optab* %25, %struct.optab** getelementptr inbounds ([154 x %struct.optab*]* @code_to_optab, i64 0, i64 0), align 16, !tbaa !1
  store %struct.optab* %25, %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 12), align 16, !tbaa !1
  %call.i.i461 = tail call noalias i8* @xmalloc(i64 952) #3
  %handlers.i.i462 = getelementptr inbounds i8* %call.i.i461, i64 8
  %26 = bitcast i8* %handlers.i.i462 to [59 x %struct.anon.3]*
  br label %for.body.i.i468

for.body.i.i468:                                  ; preds = %for.body.i.i468, %init_optab.exit460
  %indvars.iv.i.i463 = phi i64 [ 0, %init_optab.exit460 ], [ %indvars.iv.next.i.i466, %for.body.i.i468 ]
  %insn_code.i.i464 = getelementptr inbounds [59 x %struct.anon.3]* %26, i64 0, i64 %indvars.iv.i.i463, i32 0
  store i32 1317, i32* %insn_code.i.i464, align 4, !tbaa !10
  %libfunc.i.i465 = getelementptr inbounds [59 x %struct.anon.3]* %26, i64 0, i64 %indvars.iv.i.i463, i32 1
  store %struct.rtx_def* null, %struct.rtx_def** %libfunc.i.i465, align 8, !tbaa !21
  %indvars.iv.next.i.i466 = add nuw nsw i64 %indvars.iv.i.i463, 1
  %exitcond.i.i467 = icmp eq i64 %indvars.iv.next.i.i466, 59
  br i1 %exitcond.i.i467, label %init_optab.exit470, label %for.body.i.i468

init_optab.exit470:                               ; preds = %for.body.i.i468
  %27 = bitcast i8* %call.i.i461 to %struct.optab*
  %code1.i469 = bitcast i8* %call.i.i461 to i32*
  store i32 81, i32* %code1.i469, align 4, !tbaa !5
  store %struct.optab* %27, %struct.optab** getelementptr inbounds ([154 x %struct.optab*]* @code_to_optab, i64 0, i64 81), align 8, !tbaa !1
  store %struct.optab* %27, %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 13), align 8, !tbaa !1
  %call.i.i471 = tail call noalias i8* @xmalloc(i64 952) #3
  %handlers.i.i472 = getelementptr inbounds i8* %call.i.i471, i64 8
  %28 = bitcast i8* %handlers.i.i472 to [59 x %struct.anon.3]*
  br label %for.body.i.i478

for.body.i.i478:                                  ; preds = %for.body.i.i478, %init_optab.exit470
  %indvars.iv.i.i473 = phi i64 [ 0, %init_optab.exit470 ], [ %indvars.iv.next.i.i476, %for.body.i.i478 ]
  %insn_code.i.i474 = getelementptr inbounds [59 x %struct.anon.3]* %28, i64 0, i64 %indvars.iv.i.i473, i32 0
  store i32 1317, i32* %insn_code.i.i474, align 4, !tbaa !10
  %libfunc.i.i475 = getelementptr inbounds [59 x %struct.anon.3]* %28, i64 0, i64 %indvars.iv.i.i473, i32 1
  store %struct.rtx_def* null, %struct.rtx_def** %libfunc.i.i475, align 8, !tbaa !21
  %indvars.iv.next.i.i476 = add nuw nsw i64 %indvars.iv.i.i473, 1
  %exitcond.i.i477 = icmp eq i64 %indvars.iv.next.i.i476, 59
  br i1 %exitcond.i.i477, label %init_optab.exit480, label %for.body.i.i478

init_optab.exit480:                               ; preds = %for.body.i.i478
  %29 = bitcast i8* %call.i.i471 to %struct.optab*
  %code1.i479 = bitcast i8* %call.i.i471 to i32*
  store i32 0, i32* %code1.i479, align 4, !tbaa !5
  store %struct.optab* %29, %struct.optab** getelementptr inbounds ([154 x %struct.optab*]* @code_to_optab, i64 0, i64 0), align 16, !tbaa !1
  store %struct.optab* %29, %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 14), align 16, !tbaa !1
  %call.i.i481 = tail call noalias i8* @xmalloc(i64 952) #3
  %handlers.i.i482 = getelementptr inbounds i8* %call.i.i481, i64 8
  %30 = bitcast i8* %handlers.i.i482 to [59 x %struct.anon.3]*
  br label %for.body.i.i488

for.body.i.i488:                                  ; preds = %for.body.i.i488, %init_optab.exit480
  %indvars.iv.i.i483 = phi i64 [ 0, %init_optab.exit480 ], [ %indvars.iv.next.i.i486, %for.body.i.i488 ]
  %insn_code.i.i484 = getelementptr inbounds [59 x %struct.anon.3]* %30, i64 0, i64 %indvars.iv.i.i483, i32 0
  store i32 1317, i32* %insn_code.i.i484, align 4, !tbaa !10
  %libfunc.i.i485 = getelementptr inbounds [59 x %struct.anon.3]* %30, i64 0, i64 %indvars.iv.i.i483, i32 1
  store %struct.rtx_def* null, %struct.rtx_def** %libfunc.i.i485, align 8, !tbaa !21
  %indvars.iv.next.i.i486 = add nuw nsw i64 %indvars.iv.i.i483, 1
  %exitcond.i.i487 = icmp eq i64 %indvars.iv.next.i.i486, 59
  br i1 %exitcond.i.i487, label %init_optab.exit490, label %for.body.i.i488

init_optab.exit490:                               ; preds = %for.body.i.i488
  %31 = bitcast i8* %call.i.i481 to %struct.optab*
  %code1.i489 = bitcast i8* %call.i.i481 to i32*
  store i32 80, i32* %code1.i489, align 4, !tbaa !5
  store %struct.optab* %31, %struct.optab** getelementptr inbounds ([154 x %struct.optab*]* @code_to_optab, i64 0, i64 80), align 16, !tbaa !1
  store %struct.optab* %31, %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 15), align 8, !tbaa !1
  %call.i.i491 = tail call noalias i8* @xmalloc(i64 952) #3
  %handlers.i.i492 = getelementptr inbounds i8* %call.i.i491, i64 8
  %32 = bitcast i8* %handlers.i.i492 to [59 x %struct.anon.3]*
  br label %for.body.i.i498

for.body.i.i498:                                  ; preds = %for.body.i.i498, %init_optab.exit490
  %indvars.iv.i.i493 = phi i64 [ 0, %init_optab.exit490 ], [ %indvars.iv.next.i.i496, %for.body.i.i498 ]
  %insn_code.i.i494 = getelementptr inbounds [59 x %struct.anon.3]* %32, i64 0, i64 %indvars.iv.i.i493, i32 0
  store i32 1317, i32* %insn_code.i.i494, align 4, !tbaa !10
  %libfunc.i.i495 = getelementptr inbounds [59 x %struct.anon.3]* %32, i64 0, i64 %indvars.iv.i.i493, i32 1
  store %struct.rtx_def* null, %struct.rtx_def** %libfunc.i.i495, align 8, !tbaa !21
  %indvars.iv.next.i.i496 = add nuw nsw i64 %indvars.iv.i.i493, 1
  %exitcond.i.i497 = icmp eq i64 %indvars.iv.next.i.i496, 59
  br i1 %exitcond.i.i497, label %init_optab.exit500, label %for.body.i.i498

init_optab.exit500:                               ; preds = %for.body.i.i498
  %33 = bitcast i8* %call.i.i491 to %struct.optab*
  %code1.i499 = bitcast i8* %call.i.i491 to i32*
  store i32 82, i32* %code1.i499, align 4, !tbaa !5
  store %struct.optab* %33, %struct.optab** getelementptr inbounds ([154 x %struct.optab*]* @code_to_optab, i64 0, i64 82), align 16, !tbaa !1
  store %struct.optab* %33, %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 16), align 16, !tbaa !1
  %call.i.i501 = tail call noalias i8* @xmalloc(i64 952) #3
  %handlers.i.i502 = getelementptr inbounds i8* %call.i.i501, i64 8
  %34 = bitcast i8* %handlers.i.i502 to [59 x %struct.anon.3]*
  br label %for.body.i.i508

for.body.i.i508:                                  ; preds = %for.body.i.i508, %init_optab.exit500
  %indvars.iv.i.i503 = phi i64 [ 0, %init_optab.exit500 ], [ %indvars.iv.next.i.i506, %for.body.i.i508 ]
  %insn_code.i.i504 = getelementptr inbounds [59 x %struct.anon.3]* %34, i64 0, i64 %indvars.iv.i.i503, i32 0
  store i32 1317, i32* %insn_code.i.i504, align 4, !tbaa !10
  %libfunc.i.i505 = getelementptr inbounds [59 x %struct.anon.3]* %34, i64 0, i64 %indvars.iv.i.i503, i32 1
  store %struct.rtx_def* null, %struct.rtx_def** %libfunc.i.i505, align 8, !tbaa !21
  %indvars.iv.next.i.i506 = add nuw nsw i64 %indvars.iv.i.i503, 1
  %exitcond.i.i507 = icmp eq i64 %indvars.iv.next.i.i506, 59
  br i1 %exitcond.i.i507, label %init_optab.exit510, label %for.body.i.i508

init_optab.exit510:                               ; preds = %for.body.i.i508
  %35 = bitcast i8* %call.i.i501 to %struct.optab*
  %code1.i509 = bitcast i8* %call.i.i501 to i32*
  store i32 0, i32* %code1.i509, align 4, !tbaa !5
  store %struct.optab* %35, %struct.optab** getelementptr inbounds ([154 x %struct.optab*]* @code_to_optab, i64 0, i64 0), align 16, !tbaa !1
  store %struct.optab* %35, %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 17), align 8, !tbaa !1
  %call.i.i511 = tail call noalias i8* @xmalloc(i64 952) #3
  %handlers.i.i512 = getelementptr inbounds i8* %call.i.i511, i64 8
  %36 = bitcast i8* %handlers.i.i512 to [59 x %struct.anon.3]*
  br label %for.body.i.i518

for.body.i.i518:                                  ; preds = %for.body.i.i518, %init_optab.exit510
  %indvars.iv.i.i513 = phi i64 [ 0, %init_optab.exit510 ], [ %indvars.iv.next.i.i516, %for.body.i.i518 ]
  %insn_code.i.i514 = getelementptr inbounds [59 x %struct.anon.3]* %36, i64 0, i64 %indvars.iv.i.i513, i32 0
  store i32 1317, i32* %insn_code.i.i514, align 4, !tbaa !10
  %libfunc.i.i515 = getelementptr inbounds [59 x %struct.anon.3]* %36, i64 0, i64 %indvars.iv.i.i513, i32 1
  store %struct.rtx_def* null, %struct.rtx_def** %libfunc.i.i515, align 8, !tbaa !21
  %indvars.iv.next.i.i516 = add nuw nsw i64 %indvars.iv.i.i513, 1
  %exitcond.i.i517 = icmp eq i64 %indvars.iv.next.i.i516, 59
  br i1 %exitcond.i.i517, label %init_optab.exit520, label %for.body.i.i518

init_optab.exit520:                               ; preds = %for.body.i.i518
  %37 = bitcast i8* %call.i.i511 to %struct.optab*
  %code1.i519 = bitcast i8* %call.i.i511 to i32*
  store i32 83, i32* %code1.i519, align 4, !tbaa !5
  store %struct.optab* %37, %struct.optab** getelementptr inbounds ([154 x %struct.optab*]* @code_to_optab, i64 0, i64 83), align 8, !tbaa !1
  store %struct.optab* %37, %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 18), align 16, !tbaa !1
  %call.i.i521 = tail call noalias i8* @xmalloc(i64 952) #3
  %handlers.i.i522 = getelementptr inbounds i8* %call.i.i521, i64 8
  %38 = bitcast i8* %handlers.i.i522 to [59 x %struct.anon.3]*
  br label %for.body.i.i528

for.body.i.i528:                                  ; preds = %for.body.i.i528, %init_optab.exit520
  %indvars.iv.i.i523 = phi i64 [ 0, %init_optab.exit520 ], [ %indvars.iv.next.i.i526, %for.body.i.i528 ]
  %insn_code.i.i524 = getelementptr inbounds [59 x %struct.anon.3]* %38, i64 0, i64 %indvars.iv.i.i523, i32 0
  store i32 1317, i32* %insn_code.i.i524, align 4, !tbaa !10
  %libfunc.i.i525 = getelementptr inbounds [59 x %struct.anon.3]* %38, i64 0, i64 %indvars.iv.i.i523, i32 1
  store %struct.rtx_def* null, %struct.rtx_def** %libfunc.i.i525, align 8, !tbaa !21
  %indvars.iv.next.i.i526 = add nuw nsw i64 %indvars.iv.i.i523, 1
  %exitcond.i.i527 = icmp eq i64 %indvars.iv.next.i.i526, 59
  br i1 %exitcond.i.i527, label %init_optab.exit530, label %for.body.i.i528

init_optab.exit530:                               ; preds = %for.body.i.i528
  %39 = bitcast i8* %call.i.i521 to %struct.optab*
  %code1.i529 = bitcast i8* %call.i.i521 to i32*
  store i32 84, i32* %code1.i529, align 4, !tbaa !5
  store %struct.optab* %39, %struct.optab** getelementptr inbounds ([154 x %struct.optab*]* @code_to_optab, i64 0, i64 84), align 16, !tbaa !1
  store %struct.optab* %39, %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 19), align 8, !tbaa !1
  %call.i.i531 = tail call noalias i8* @xmalloc(i64 952) #3
  %handlers.i.i532 = getelementptr inbounds i8* %call.i.i531, i64 8
  %40 = bitcast i8* %handlers.i.i532 to [59 x %struct.anon.3]*
  br label %for.body.i.i538

for.body.i.i538:                                  ; preds = %for.body.i.i538, %init_optab.exit530
  %indvars.iv.i.i533 = phi i64 [ 0, %init_optab.exit530 ], [ %indvars.iv.next.i.i536, %for.body.i.i538 ]
  %insn_code.i.i534 = getelementptr inbounds [59 x %struct.anon.3]* %40, i64 0, i64 %indvars.iv.i.i533, i32 0
  store i32 1317, i32* %insn_code.i.i534, align 4, !tbaa !10
  %libfunc.i.i535 = getelementptr inbounds [59 x %struct.anon.3]* %40, i64 0, i64 %indvars.iv.i.i533, i32 1
  store %struct.rtx_def* null, %struct.rtx_def** %libfunc.i.i535, align 8, !tbaa !21
  %indvars.iv.next.i.i536 = add nuw nsw i64 %indvars.iv.i.i533, 1
  %exitcond.i.i537 = icmp eq i64 %indvars.iv.next.i.i536, 59
  br i1 %exitcond.i.i537, label %init_optab.exit540, label %for.body.i.i538

init_optab.exit540:                               ; preds = %for.body.i.i538
  %41 = bitcast i8* %call.i.i531 to %struct.optab*
  %code1.i539 = bitcast i8* %call.i.i531 to i32*
  store i32 85, i32* %code1.i539, align 4, !tbaa !5
  store %struct.optab* %41, %struct.optab** getelementptr inbounds ([154 x %struct.optab*]* @code_to_optab, i64 0, i64 85), align 8, !tbaa !1
  store %struct.optab* %41, %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 20), align 16, !tbaa !1
  %call.i.i541 = tail call noalias i8* @xmalloc(i64 952) #3
  %handlers.i.i542 = getelementptr inbounds i8* %call.i.i541, i64 8
  %42 = bitcast i8* %handlers.i.i542 to [59 x %struct.anon.3]*
  br label %for.body.i.i548

for.body.i.i548:                                  ; preds = %for.body.i.i548, %init_optab.exit540
  %indvars.iv.i.i543 = phi i64 [ 0, %init_optab.exit540 ], [ %indvars.iv.next.i.i546, %for.body.i.i548 ]
  %insn_code.i.i544 = getelementptr inbounds [59 x %struct.anon.3]* %42, i64 0, i64 %indvars.iv.i.i543, i32 0
  store i32 1317, i32* %insn_code.i.i544, align 4, !tbaa !10
  %libfunc.i.i545 = getelementptr inbounds [59 x %struct.anon.3]* %42, i64 0, i64 %indvars.iv.i.i543, i32 1
  store %struct.rtx_def* null, %struct.rtx_def** %libfunc.i.i545, align 8, !tbaa !21
  %indvars.iv.next.i.i546 = add nuw nsw i64 %indvars.iv.i.i543, 1
  %exitcond.i.i547 = icmp eq i64 %indvars.iv.next.i.i546, 59
  br i1 %exitcond.i.i547, label %init_optab.exit550, label %for.body.i.i548

init_optab.exit550:                               ; preds = %for.body.i.i548
  %43 = bitcast i8* %call.i.i541 to %struct.optab*
  %code1.i549 = bitcast i8* %call.i.i541 to i32*
  store i32 87, i32* %code1.i549, align 4, !tbaa !5
  store %struct.optab* %43, %struct.optab** getelementptr inbounds ([154 x %struct.optab*]* @code_to_optab, i64 0, i64 87), align 8, !tbaa !1
  store %struct.optab* %43, %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 21), align 8, !tbaa !1
  %call.i.i551 = tail call noalias i8* @xmalloc(i64 952) #3
  %handlers.i.i552 = getelementptr inbounds i8* %call.i.i551, i64 8
  %44 = bitcast i8* %handlers.i.i552 to [59 x %struct.anon.3]*
  br label %for.body.i.i558

for.body.i.i558:                                  ; preds = %for.body.i.i558, %init_optab.exit550
  %indvars.iv.i.i553 = phi i64 [ 0, %init_optab.exit550 ], [ %indvars.iv.next.i.i556, %for.body.i.i558 ]
  %insn_code.i.i554 = getelementptr inbounds [59 x %struct.anon.3]* %44, i64 0, i64 %indvars.iv.i.i553, i32 0
  store i32 1317, i32* %insn_code.i.i554, align 4, !tbaa !10
  %libfunc.i.i555 = getelementptr inbounds [59 x %struct.anon.3]* %44, i64 0, i64 %indvars.iv.i.i553, i32 1
  store %struct.rtx_def* null, %struct.rtx_def** %libfunc.i.i555, align 8, !tbaa !21
  %indvars.iv.next.i.i556 = add nuw nsw i64 %indvars.iv.i.i553, 1
  %exitcond.i.i557 = icmp eq i64 %indvars.iv.next.i.i556, 59
  br i1 %exitcond.i.i557, label %init_optab.exit560, label %for.body.i.i558

init_optab.exit560:                               ; preds = %for.body.i.i558
  %45 = bitcast i8* %call.i.i551 to %struct.optab*
  %code1.i559 = bitcast i8* %call.i.i551 to i32*
  store i32 89, i32* %code1.i559, align 4, !tbaa !5
  store %struct.optab* %45, %struct.optab** getelementptr inbounds ([154 x %struct.optab*]* @code_to_optab, i64 0, i64 89), align 8, !tbaa !1
  store %struct.optab* %45, %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 23), align 8, !tbaa !1
  %call.i.i561 = tail call noalias i8* @xmalloc(i64 952) #3
  %handlers.i.i562 = getelementptr inbounds i8* %call.i.i561, i64 8
  %46 = bitcast i8* %handlers.i.i562 to [59 x %struct.anon.3]*
  br label %for.body.i.i568

for.body.i.i568:                                  ; preds = %for.body.i.i568, %init_optab.exit560
  %indvars.iv.i.i563 = phi i64 [ 0, %init_optab.exit560 ], [ %indvars.iv.next.i.i566, %for.body.i.i568 ]
  %insn_code.i.i564 = getelementptr inbounds [59 x %struct.anon.3]* %46, i64 0, i64 %indvars.iv.i.i563, i32 0
  store i32 1317, i32* %insn_code.i.i564, align 4, !tbaa !10
  %libfunc.i.i565 = getelementptr inbounds [59 x %struct.anon.3]* %46, i64 0, i64 %indvars.iv.i.i563, i32 1
  store %struct.rtx_def* null, %struct.rtx_def** %libfunc.i.i565, align 8, !tbaa !21
  %indvars.iv.next.i.i566 = add nuw nsw i64 %indvars.iv.i.i563, 1
  %exitcond.i.i567 = icmp eq i64 %indvars.iv.next.i.i566, 59
  br i1 %exitcond.i.i567, label %init_optab.exit570, label %for.body.i.i568

init_optab.exit570:                               ; preds = %for.body.i.i568
  %47 = bitcast i8* %call.i.i561 to %struct.optab*
  %code1.i569 = bitcast i8* %call.i.i561 to i32*
  store i32 90, i32* %code1.i569, align 4, !tbaa !5
  store %struct.optab* %47, %struct.optab** getelementptr inbounds ([154 x %struct.optab*]* @code_to_optab, i64 0, i64 90), align 16, !tbaa !1
  store %struct.optab* %47, %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 22), align 16, !tbaa !1
  %call.i.i571 = tail call noalias i8* @xmalloc(i64 952) #3
  %handlers.i.i572 = getelementptr inbounds i8* %call.i.i571, i64 8
  %48 = bitcast i8* %handlers.i.i572 to [59 x %struct.anon.3]*
  br label %for.body.i.i578

for.body.i.i578:                                  ; preds = %for.body.i.i578, %init_optab.exit570
  %indvars.iv.i.i573 = phi i64 [ 0, %init_optab.exit570 ], [ %indvars.iv.next.i.i576, %for.body.i.i578 ]
  %insn_code.i.i574 = getelementptr inbounds [59 x %struct.anon.3]* %48, i64 0, i64 %indvars.iv.i.i573, i32 0
  store i32 1317, i32* %insn_code.i.i574, align 4, !tbaa !10
  %libfunc.i.i575 = getelementptr inbounds [59 x %struct.anon.3]* %48, i64 0, i64 %indvars.iv.i.i573, i32 1
  store %struct.rtx_def* null, %struct.rtx_def** %libfunc.i.i575, align 8, !tbaa !21
  %indvars.iv.next.i.i576 = add nuw nsw i64 %indvars.iv.i.i573, 1
  %exitcond.i.i577 = icmp eq i64 %indvars.iv.next.i.i576, 59
  br i1 %exitcond.i.i577, label %init_optab.exit580, label %for.body.i.i578

init_optab.exit580:                               ; preds = %for.body.i.i578
  %49 = bitcast i8* %call.i.i571 to %struct.optab*
  %code1.i579 = bitcast i8* %call.i.i571 to i32*
  store i32 88, i32* %code1.i579, align 4, !tbaa !5
  store %struct.optab* %49, %struct.optab** getelementptr inbounds ([154 x %struct.optab*]* @code_to_optab, i64 0, i64 88), align 16, !tbaa !1
  store %struct.optab* %49, %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 24), align 16, !tbaa !1
  %call.i.i581 = tail call noalias i8* @xmalloc(i64 952) #3
  %handlers.i.i582 = getelementptr inbounds i8* %call.i.i581, i64 8
  %50 = bitcast i8* %handlers.i.i582 to [59 x %struct.anon.3]*
  br label %for.body.i.i588

for.body.i.i588:                                  ; preds = %for.body.i.i588, %init_optab.exit580
  %indvars.iv.i.i583 = phi i64 [ 0, %init_optab.exit580 ], [ %indvars.iv.next.i.i586, %for.body.i.i588 ]
  %insn_code.i.i584 = getelementptr inbounds [59 x %struct.anon.3]* %50, i64 0, i64 %indvars.iv.i.i583, i32 0
  store i32 1317, i32* %insn_code.i.i584, align 4, !tbaa !10
  %libfunc.i.i585 = getelementptr inbounds [59 x %struct.anon.3]* %50, i64 0, i64 %indvars.iv.i.i583, i32 1
  store %struct.rtx_def* null, %struct.rtx_def** %libfunc.i.i585, align 8, !tbaa !21
  %indvars.iv.next.i.i586 = add nuw nsw i64 %indvars.iv.i.i583, 1
  %exitcond.i.i587 = icmp eq i64 %indvars.iv.next.i.i586, 59
  br i1 %exitcond.i.i587, label %init_optab.exit590, label %for.body.i.i588

init_optab.exit590:                               ; preds = %for.body.i.i588
  %51 = bitcast i8* %call.i.i581 to %struct.optab*
  %code1.i589 = bitcast i8* %call.i.i581 to i32*
  store i32 91, i32* %code1.i589, align 4, !tbaa !5
  store %struct.optab* %51, %struct.optab** getelementptr inbounds ([154 x %struct.optab*]* @code_to_optab, i64 0, i64 91), align 8, !tbaa !1
  store %struct.optab* %51, %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 25), align 8, !tbaa !1
  %call.i.i591 = tail call noalias i8* @xmalloc(i64 952) #3
  %handlers.i.i592 = getelementptr inbounds i8* %call.i.i591, i64 8
  %52 = bitcast i8* %handlers.i.i592 to [59 x %struct.anon.3]*
  br label %for.body.i.i598

for.body.i.i598:                                  ; preds = %for.body.i.i598, %init_optab.exit590
  %indvars.iv.i.i593 = phi i64 [ 0, %init_optab.exit590 ], [ %indvars.iv.next.i.i596, %for.body.i.i598 ]
  %insn_code.i.i594 = getelementptr inbounds [59 x %struct.anon.3]* %52, i64 0, i64 %indvars.iv.i.i593, i32 0
  store i32 1317, i32* %insn_code.i.i594, align 4, !tbaa !10
  %libfunc.i.i595 = getelementptr inbounds [59 x %struct.anon.3]* %52, i64 0, i64 %indvars.iv.i.i593, i32 1
  store %struct.rtx_def* null, %struct.rtx_def** %libfunc.i.i595, align 8, !tbaa !21
  %indvars.iv.next.i.i596 = add nuw nsw i64 %indvars.iv.i.i593, 1
  %exitcond.i.i597 = icmp eq i64 %indvars.iv.next.i.i596, 59
  br i1 %exitcond.i.i597, label %init_optab.exit600, label %for.body.i.i598

init_optab.exit600:                               ; preds = %for.body.i.i598
  %53 = bitcast i8* %call.i.i591 to %struct.optab*
  %code1.i599 = bitcast i8* %call.i.i591 to i32*
  store i32 92, i32* %code1.i599, align 4, !tbaa !5
  store %struct.optab* %53, %struct.optab** getelementptr inbounds ([154 x %struct.optab*]* @code_to_optab, i64 0, i64 92), align 16, !tbaa !1
  store %struct.optab* %53, %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 26), align 16, !tbaa !1
  %call.i.i601 = tail call noalias i8* @xmalloc(i64 952) #3
  %handlers.i.i602 = getelementptr inbounds i8* %call.i.i601, i64 8
  %54 = bitcast i8* %handlers.i.i602 to [59 x %struct.anon.3]*
  br label %for.body.i.i608

for.body.i.i608:                                  ; preds = %for.body.i.i608, %init_optab.exit600
  %indvars.iv.i.i603 = phi i64 [ 0, %init_optab.exit600 ], [ %indvars.iv.next.i.i606, %for.body.i.i608 ]
  %insn_code.i.i604 = getelementptr inbounds [59 x %struct.anon.3]* %54, i64 0, i64 %indvars.iv.i.i603, i32 0
  store i32 1317, i32* %insn_code.i.i604, align 4, !tbaa !10
  %libfunc.i.i605 = getelementptr inbounds [59 x %struct.anon.3]* %54, i64 0, i64 %indvars.iv.i.i603, i32 1
  store %struct.rtx_def* null, %struct.rtx_def** %libfunc.i.i605, align 8, !tbaa !21
  %indvars.iv.next.i.i606 = add nuw nsw i64 %indvars.iv.i.i603, 1
  %exitcond.i.i607 = icmp eq i64 %indvars.iv.next.i.i606, 59
  br i1 %exitcond.i.i607, label %init_optab.exit610, label %for.body.i.i608

init_optab.exit610:                               ; preds = %for.body.i.i608
  %55 = bitcast i8* %call.i.i601 to %struct.optab*
  %code1.i609 = bitcast i8* %call.i.i601 to i32*
  store i32 93, i32* %code1.i609, align 4, !tbaa !5
  store %struct.optab* %55, %struct.optab** getelementptr inbounds ([154 x %struct.optab*]* @code_to_optab, i64 0, i64 93), align 8, !tbaa !1
  store %struct.optab* %55, %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 27), align 8, !tbaa !1
  %call.i.i611 = tail call noalias i8* @xmalloc(i64 952) #3
  %handlers.i.i612 = getelementptr inbounds i8* %call.i.i611, i64 8
  %56 = bitcast i8* %handlers.i.i612 to [59 x %struct.anon.3]*
  br label %for.body.i.i618

for.body.i.i618:                                  ; preds = %for.body.i.i618, %init_optab.exit610
  %indvars.iv.i.i613 = phi i64 [ 0, %init_optab.exit610 ], [ %indvars.iv.next.i.i616, %for.body.i.i618 ]
  %insn_code.i.i614 = getelementptr inbounds [59 x %struct.anon.3]* %56, i64 0, i64 %indvars.iv.i.i613, i32 0
  store i32 1317, i32* %insn_code.i.i614, align 4, !tbaa !10
  %libfunc.i.i615 = getelementptr inbounds [59 x %struct.anon.3]* %56, i64 0, i64 %indvars.iv.i.i613, i32 1
  store %struct.rtx_def* null, %struct.rtx_def** %libfunc.i.i615, align 8, !tbaa !21
  %indvars.iv.next.i.i616 = add nuw nsw i64 %indvars.iv.i.i613, 1
  %exitcond.i.i617 = icmp eq i64 %indvars.iv.next.i.i616, 59
  br i1 %exitcond.i.i617, label %init_optab.exit620, label %for.body.i.i618

init_optab.exit620:                               ; preds = %for.body.i.i618
  %57 = bitcast i8* %call.i.i611 to %struct.optab*
  %code1.i619 = bitcast i8* %call.i.i611 to i32*
  store i32 94, i32* %code1.i619, align 4, !tbaa !5
  store %struct.optab* %57, %struct.optab** getelementptr inbounds ([154 x %struct.optab*]* @code_to_optab, i64 0, i64 94), align 16, !tbaa !1
  store %struct.optab* %57, %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 28), align 16, !tbaa !1
  %call.i.i621 = tail call noalias i8* @xmalloc(i64 952) #3
  %handlers.i.i622 = getelementptr inbounds i8* %call.i.i621, i64 8
  %58 = bitcast i8* %handlers.i.i622 to [59 x %struct.anon.3]*
  br label %for.body.i.i628

for.body.i.i628:                                  ; preds = %for.body.i.i628, %init_optab.exit620
  %indvars.iv.i.i623 = phi i64 [ 0, %init_optab.exit620 ], [ %indvars.iv.next.i.i626, %for.body.i.i628 ]
  %insn_code.i.i624 = getelementptr inbounds [59 x %struct.anon.3]* %58, i64 0, i64 %indvars.iv.i.i623, i32 0
  store i32 1317, i32* %insn_code.i.i624, align 4, !tbaa !10
  %libfunc.i.i625 = getelementptr inbounds [59 x %struct.anon.3]* %58, i64 0, i64 %indvars.iv.i.i623, i32 1
  store %struct.rtx_def* null, %struct.rtx_def** %libfunc.i.i625, align 8, !tbaa !21
  %indvars.iv.next.i.i626 = add nuw nsw i64 %indvars.iv.i.i623, 1
  %exitcond.i.i627 = icmp eq i64 %indvars.iv.next.i.i626, 59
  br i1 %exitcond.i.i627, label %init_optab.exit630, label %for.body.i.i628

init_optab.exit630:                               ; preds = %for.body.i.i628
  %59 = bitcast i8* %call.i.i621 to %struct.optab*
  %code1.i629 = bitcast i8* %call.i.i621 to i32*
  store i32 95, i32* %code1.i629, align 4, !tbaa !5
  store %struct.optab* %59, %struct.optab** getelementptr inbounds ([154 x %struct.optab*]* @code_to_optab, i64 0, i64 95), align 8, !tbaa !1
  store %struct.optab* %59, %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 29), align 8, !tbaa !1
  %call.i.i631 = tail call noalias i8* @xmalloc(i64 952) #3
  %handlers.i.i632 = getelementptr inbounds i8* %call.i.i631, i64 8
  %60 = bitcast i8* %handlers.i.i632 to [59 x %struct.anon.3]*
  br label %for.body.i.i638

for.body.i.i638:                                  ; preds = %for.body.i.i638, %init_optab.exit630
  %indvars.iv.i.i633 = phi i64 [ 0, %init_optab.exit630 ], [ %indvars.iv.next.i.i636, %for.body.i.i638 ]
  %insn_code.i.i634 = getelementptr inbounds [59 x %struct.anon.3]* %60, i64 0, i64 %indvars.iv.i.i633, i32 0
  store i32 1317, i32* %insn_code.i.i634, align 4, !tbaa !10
  %libfunc.i.i635 = getelementptr inbounds [59 x %struct.anon.3]* %60, i64 0, i64 %indvars.iv.i.i633, i32 1
  store %struct.rtx_def* null, %struct.rtx_def** %libfunc.i.i635, align 8, !tbaa !21
  %indvars.iv.next.i.i636 = add nuw nsw i64 %indvars.iv.i.i633, 1
  %exitcond.i.i637 = icmp eq i64 %indvars.iv.next.i.i636, 59
  br i1 %exitcond.i.i637, label %init_optab.exit640, label %for.body.i.i638

init_optab.exit640:                               ; preds = %for.body.i.i638
  %61 = bitcast i8* %call.i.i631 to %struct.optab*
  %code1.i639 = bitcast i8* %call.i.i631 to i32*
  store i32 47, i32* %code1.i639, align 4, !tbaa !5
  store %struct.optab* %61, %struct.optab** getelementptr inbounds ([154 x %struct.optab*]* @code_to_optab, i64 0, i64 47), align 8, !tbaa !1
  store %struct.optab* %61, %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 30), align 16, !tbaa !1
  %call.i.i641 = tail call noalias i8* @xmalloc(i64 952) #3
  %handlers.i.i642 = getelementptr inbounds i8* %call.i.i641, i64 8
  %62 = bitcast i8* %handlers.i.i642 to [59 x %struct.anon.3]*
  br label %for.body.i.i648

for.body.i.i648:                                  ; preds = %for.body.i.i648, %init_optab.exit640
  %indvars.iv.i.i643 = phi i64 [ 0, %init_optab.exit640 ], [ %indvars.iv.next.i.i646, %for.body.i.i648 ]
  %insn_code.i.i644 = getelementptr inbounds [59 x %struct.anon.3]* %62, i64 0, i64 %indvars.iv.i.i643, i32 0
  store i32 1317, i32* %insn_code.i.i644, align 4, !tbaa !10
  %libfunc.i.i645 = getelementptr inbounds [59 x %struct.anon.3]* %62, i64 0, i64 %indvars.iv.i.i643, i32 1
  store %struct.rtx_def* null, %struct.rtx_def** %libfunc.i.i645, align 8, !tbaa !21
  %indvars.iv.next.i.i646 = add nuw nsw i64 %indvars.iv.i.i643, 1
  %exitcond.i.i647 = icmp eq i64 %indvars.iv.next.i.i646, 59
  br i1 %exitcond.i.i647, label %init_optab.exit650, label %for.body.i.i648

init_optab.exit650:                               ; preds = %for.body.i.i648
  %63 = bitcast i8* %call.i.i641 to %struct.optab*
  %code1.i649 = bitcast i8* %call.i.i641 to i32*
  store i32 64, i32* %code1.i649, align 4, !tbaa !5
  store %struct.optab* %63, %struct.optab** getelementptr inbounds ([154 x %struct.optab*]* @code_to_optab, i64 0, i64 64), align 16, !tbaa !1
  store %struct.optab* %63, %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 31), align 8, !tbaa !1
  %call.i.i651 = tail call noalias i8* @xmalloc(i64 952) #3
  %handlers.i.i652 = getelementptr inbounds i8* %call.i.i651, i64 8
  %64 = bitcast i8* %handlers.i.i652 to [59 x %struct.anon.3]*
  br label %for.body.i.i658

for.body.i.i658:                                  ; preds = %for.body.i.i658, %init_optab.exit650
  %indvars.iv.i.i653 = phi i64 [ 0, %init_optab.exit650 ], [ %indvars.iv.next.i.i656, %for.body.i.i658 ]
  %insn_code.i.i654 = getelementptr inbounds [59 x %struct.anon.3]* %64, i64 0, i64 %indvars.iv.i.i653, i32 0
  store i32 1317, i32* %insn_code.i.i654, align 4, !tbaa !10
  %libfunc.i.i655 = getelementptr inbounds [59 x %struct.anon.3]* %64, i64 0, i64 %indvars.iv.i.i653, i32 1
  store %struct.rtx_def* null, %struct.rtx_def** %libfunc.i.i655, align 8, !tbaa !21
  %indvars.iv.next.i.i656 = add nuw nsw i64 %indvars.iv.i.i653, 1
  %exitcond.i.i657 = icmp eq i64 %indvars.iv.next.i.i656, 59
  br i1 %exitcond.i.i657, label %init_optab.exit660, label %for.body.i.i658

init_optab.exit660:                               ; preds = %for.body.i.i658
  %65 = bitcast i8* %call.i.i651 to %struct.optab*
  %code1.i659 = bitcast i8* %call.i.i651 to i32*
  store i32 74, i32* %code1.i659, align 4, !tbaa !5
  store %struct.optab* %65, %struct.optab** getelementptr inbounds ([154 x %struct.optab*]* @code_to_optab, i64 0, i64 74), align 16, !tbaa !1
  store %struct.optab* %65, %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 41), align 8, !tbaa !1
  %call.i.i661 = tail call noalias i8* @xmalloc(i64 952) #3
  %handlers.i.i662 = getelementptr inbounds i8* %call.i.i661, i64 8
  %66 = bitcast i8* %handlers.i.i662 to [59 x %struct.anon.3]*
  br label %for.body.i.i668

for.body.i.i668:                                  ; preds = %for.body.i.i668, %init_optab.exit660
  %indvars.iv.i.i663 = phi i64 [ 0, %init_optab.exit660 ], [ %indvars.iv.next.i.i666, %for.body.i.i668 ]
  %insn_code.i.i664 = getelementptr inbounds [59 x %struct.anon.3]* %66, i64 0, i64 %indvars.iv.i.i663, i32 0
  store i32 1317, i32* %insn_code.i.i664, align 4, !tbaa !10
  %libfunc.i.i665 = getelementptr inbounds [59 x %struct.anon.3]* %66, i64 0, i64 %indvars.iv.i.i663, i32 1
  store %struct.rtx_def* null, %struct.rtx_def** %libfunc.i.i665, align 8, !tbaa !21
  %indvars.iv.next.i.i666 = add nuw nsw i64 %indvars.iv.i.i663, 1
  %exitcond.i.i667 = icmp eq i64 %indvars.iv.next.i.i666, 59
  br i1 %exitcond.i.i667, label %init_optab.exit670, label %for.body.i.i668

init_optab.exit670:                               ; preds = %for.body.i.i668
  %67 = bitcast i8* %call.i.i661 to %struct.optab*
  %code1.i669 = bitcast i8* %call.i.i661 to i32*
  store i32 0, i32* %code1.i669, align 4, !tbaa !5
  store %struct.optab* %67, %struct.optab** getelementptr inbounds ([154 x %struct.optab*]* @code_to_optab, i64 0, i64 0), align 16, !tbaa !1
  store %struct.optab* %67, %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 42), align 16, !tbaa !1
  %call.i.i671 = tail call noalias i8* @xmalloc(i64 952) #3
  %handlers.i.i672 = getelementptr inbounds i8* %call.i.i671, i64 8
  %68 = bitcast i8* %handlers.i.i672 to [59 x %struct.anon.3]*
  br label %for.body.i.i678

for.body.i.i678:                                  ; preds = %for.body.i.i678, %init_optab.exit670
  %indvars.iv.i.i673 = phi i64 [ 0, %init_optab.exit670 ], [ %indvars.iv.next.i.i676, %for.body.i.i678 ]
  %insn_code.i.i674 = getelementptr inbounds [59 x %struct.anon.3]* %68, i64 0, i64 %indvars.iv.i.i673, i32 0
  store i32 1317, i32* %insn_code.i.i674, align 4, !tbaa !10
  %libfunc.i.i675 = getelementptr inbounds [59 x %struct.anon.3]* %68, i64 0, i64 %indvars.iv.i.i673, i32 1
  store %struct.rtx_def* null, %struct.rtx_def** %libfunc.i.i675, align 8, !tbaa !21
  %indvars.iv.next.i.i676 = add nuw nsw i64 %indvars.iv.i.i673, 1
  %exitcond.i.i677 = icmp eq i64 %indvars.iv.next.i.i676, 59
  br i1 %exitcond.i.i677, label %init_optab.exit680, label %for.body.i.i678

init_optab.exit680:                               ; preds = %for.body.i.i678
  %69 = bitcast i8* %call.i.i671 to %struct.optab*
  %code1.i679 = bitcast i8* %call.i.i671 to i32*
  store i32 0, i32* %code1.i679, align 4, !tbaa !5
  store %struct.optab* %69, %struct.optab** getelementptr inbounds ([154 x %struct.optab*]* @code_to_optab, i64 0, i64 0), align 16, !tbaa !1
  store %struct.optab* %69, %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 43), align 8, !tbaa !1
  %call.i.i681 = tail call noalias i8* @xmalloc(i64 952) #3
  %handlers.i.i682 = getelementptr inbounds i8* %call.i.i681, i64 8
  %70 = bitcast i8* %handlers.i.i682 to [59 x %struct.anon.3]*
  br label %for.body.i.i688

for.body.i.i688:                                  ; preds = %for.body.i.i688, %init_optab.exit680
  %indvars.iv.i.i683 = phi i64 [ 0, %init_optab.exit680 ], [ %indvars.iv.next.i.i686, %for.body.i.i688 ]
  %insn_code.i.i684 = getelementptr inbounds [59 x %struct.anon.3]* %70, i64 0, i64 %indvars.iv.i.i683, i32 0
  store i32 1317, i32* %insn_code.i.i684, align 4, !tbaa !10
  %libfunc.i.i685 = getelementptr inbounds [59 x %struct.anon.3]* %70, i64 0, i64 %indvars.iv.i.i683, i32 1
  store %struct.rtx_def* null, %struct.rtx_def** %libfunc.i.i685, align 8, !tbaa !21
  %indvars.iv.next.i.i686 = add nuw nsw i64 %indvars.iv.i.i683, 1
  %exitcond.i.i687 = icmp eq i64 %indvars.iv.next.i.i686, 59
  br i1 %exitcond.i.i687, label %init_optab.exit690, label %for.body.i.i688

init_optab.exit690:                               ; preds = %for.body.i.i688
  %71 = bitcast i8* %call.i.i681 to %struct.optab*
  %code1.i689 = bitcast i8* %call.i.i681 to i32*
  store i32 77, i32* %code1.i689, align 4, !tbaa !5
  store %struct.optab* %71, %struct.optab** getelementptr inbounds ([154 x %struct.optab*]* @code_to_optab, i64 0, i64 77), align 8, !tbaa !1
  store %struct.optab* %71, %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 32), align 16, !tbaa !1
  %call.i.i691 = tail call noalias i8* @xmalloc(i64 952) #3
  %handlers.i.i692 = getelementptr inbounds i8* %call.i.i691, i64 8
  %72 = bitcast i8* %handlers.i.i692 to [59 x %struct.anon.3]*
  br label %for.body.i.i698

for.body.i.i698:                                  ; preds = %for.body.i.i698, %init_optab.exit690
  %indvars.iv.i.i693 = phi i64 [ 0, %init_optab.exit690 ], [ %indvars.iv.next.i.i696, %for.body.i.i698 ]
  %insn_code.i.i694 = getelementptr inbounds [59 x %struct.anon.3]* %72, i64 0, i64 %indvars.iv.i.i693, i32 0
  store i32 1317, i32* %insn_code.i.i694, align 4, !tbaa !10
  %libfunc.i.i695 = getelementptr inbounds [59 x %struct.anon.3]* %72, i64 0, i64 %indvars.iv.i.i693, i32 1
  store %struct.rtx_def* null, %struct.rtx_def** %libfunc.i.i695, align 8, !tbaa !21
  %indvars.iv.next.i.i696 = add nuw nsw i64 %indvars.iv.i.i693, 1
  %exitcond.i.i697 = icmp eq i64 %indvars.iv.next.i.i696, 59
  br i1 %exitcond.i.i697, label %init_optabv.exit700, label %for.body.i.i698

init_optabv.exit700:                              ; preds = %for.body.i.i698
  %73 = bitcast i8* %call.i.i691 to %struct.optab*
  %code1.i699 = bitcast i8* %call.i.i691 to i32*
  store i32 77, i32* %code1.i699, align 4, !tbaa !5
  store %struct.optab* %73, %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 33), align 8, !tbaa !1
  %call.i.i701 = tail call noalias i8* @xmalloc(i64 952) #3
  %handlers.i.i702 = getelementptr inbounds i8* %call.i.i701, i64 8
  %74 = bitcast i8* %handlers.i.i702 to [59 x %struct.anon.3]*
  br label %for.body.i.i708

for.body.i.i708:                                  ; preds = %for.body.i.i708, %init_optabv.exit700
  %indvars.iv.i.i703 = phi i64 [ 0, %init_optabv.exit700 ], [ %indvars.iv.next.i.i706, %for.body.i.i708 ]
  %insn_code.i.i704 = getelementptr inbounds [59 x %struct.anon.3]* %74, i64 0, i64 %indvars.iv.i.i703, i32 0
  store i32 1317, i32* %insn_code.i.i704, align 4, !tbaa !10
  %libfunc.i.i705 = getelementptr inbounds [59 x %struct.anon.3]* %74, i64 0, i64 %indvars.iv.i.i703, i32 1
  store %struct.rtx_def* null, %struct.rtx_def** %libfunc.i.i705, align 8, !tbaa !21
  %indvars.iv.next.i.i706 = add nuw nsw i64 %indvars.iv.i.i703, 1
  %exitcond.i.i707 = icmp eq i64 %indvars.iv.next.i.i706, 59
  br i1 %exitcond.i.i707, label %init_optab.exit710, label %for.body.i.i708

init_optab.exit710:                               ; preds = %for.body.i.i708
  %75 = bitcast i8* %call.i.i701 to %struct.optab*
  %code1.i709 = bitcast i8* %call.i.i701 to i32*
  store i32 129, i32* %code1.i709, align 4, !tbaa !5
  store %struct.optab* %75, %struct.optab** getelementptr inbounds ([154 x %struct.optab*]* @code_to_optab, i64 0, i64 129), align 8, !tbaa !1
  store %struct.optab* %75, %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 34), align 16, !tbaa !1
  %call.i.i711 = tail call noalias i8* @xmalloc(i64 952) #3
  %handlers.i.i712 = getelementptr inbounds i8* %call.i.i711, i64 8
  %76 = bitcast i8* %handlers.i.i712 to [59 x %struct.anon.3]*
  br label %for.body.i.i718

for.body.i.i718:                                  ; preds = %for.body.i.i718, %init_optab.exit710
  %indvars.iv.i.i713 = phi i64 [ 0, %init_optab.exit710 ], [ %indvars.iv.next.i.i716, %for.body.i.i718 ]
  %insn_code.i.i714 = getelementptr inbounds [59 x %struct.anon.3]* %76, i64 0, i64 %indvars.iv.i.i713, i32 0
  store i32 1317, i32* %insn_code.i.i714, align 4, !tbaa !10
  %libfunc.i.i715 = getelementptr inbounds [59 x %struct.anon.3]* %76, i64 0, i64 %indvars.iv.i.i713, i32 1
  store %struct.rtx_def* null, %struct.rtx_def** %libfunc.i.i715, align 8, !tbaa !21
  %indvars.iv.next.i.i716 = add nuw nsw i64 %indvars.iv.i.i713, 1
  %exitcond.i.i717 = icmp eq i64 %indvars.iv.next.i.i716, 59
  br i1 %exitcond.i.i717, label %init_optabv.exit720, label %for.body.i.i718

init_optabv.exit720:                              ; preds = %for.body.i.i718
  %77 = bitcast i8* %call.i.i711 to %struct.optab*
  %code1.i719 = bitcast i8* %call.i.i711 to i32*
  store i32 129, i32* %code1.i719, align 4, !tbaa !5
  store %struct.optab* %77, %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 35), align 8, !tbaa !1
  %call.i.i721 = tail call noalias i8* @xmalloc(i64 952) #3
  %handlers.i.i722 = getelementptr inbounds i8* %call.i.i721, i64 8
  %78 = bitcast i8* %handlers.i.i722 to [59 x %struct.anon.3]*
  br label %for.body.i.i728

for.body.i.i728:                                  ; preds = %for.body.i.i728, %init_optabv.exit720
  %indvars.iv.i.i723 = phi i64 [ 0, %init_optabv.exit720 ], [ %indvars.iv.next.i.i726, %for.body.i.i728 ]
  %insn_code.i.i724 = getelementptr inbounds [59 x %struct.anon.3]* %78, i64 0, i64 %indvars.iv.i.i723, i32 0
  store i32 1317, i32* %insn_code.i.i724, align 4, !tbaa !10
  %libfunc.i.i725 = getelementptr inbounds [59 x %struct.anon.3]* %78, i64 0, i64 %indvars.iv.i.i723, i32 1
  store %struct.rtx_def* null, %struct.rtx_def** %libfunc.i.i725, align 8, !tbaa !21
  %indvars.iv.next.i.i726 = add nuw nsw i64 %indvars.iv.i.i723, 1
  %exitcond.i.i727 = icmp eq i64 %indvars.iv.next.i.i726, 59
  br i1 %exitcond.i.i727, label %init_optab.exit730, label %for.body.i.i728

init_optab.exit730:                               ; preds = %for.body.i.i728
  %79 = bitcast i8* %call.i.i721 to %struct.optab*
  %code1.i729 = bitcast i8* %call.i.i721 to i32*
  store i32 86, i32* %code1.i729, align 4, !tbaa !5
  store %struct.optab* %79, %struct.optab** getelementptr inbounds ([154 x %struct.optab*]* @code_to_optab, i64 0, i64 86), align 16, !tbaa !1
  store %struct.optab* %79, %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 36), align 16, !tbaa !1
  %call.i.i731 = tail call noalias i8* @xmalloc(i64 952) #3
  %handlers.i.i732 = getelementptr inbounds i8* %call.i.i731, i64 8
  %80 = bitcast i8* %handlers.i.i732 to [59 x %struct.anon.3]*
  br label %for.body.i.i738

for.body.i.i738:                                  ; preds = %for.body.i.i738, %init_optab.exit730
  %indvars.iv.i.i733 = phi i64 [ 0, %init_optab.exit730 ], [ %indvars.iv.next.i.i736, %for.body.i.i738 ]
  %insn_code.i.i734 = getelementptr inbounds [59 x %struct.anon.3]* %80, i64 0, i64 %indvars.iv.i.i733, i32 0
  store i32 1317, i32* %insn_code.i.i734, align 4, !tbaa !10
  %libfunc.i.i735 = getelementptr inbounds [59 x %struct.anon.3]* %80, i64 0, i64 %indvars.iv.i.i733, i32 1
  store %struct.rtx_def* null, %struct.rtx_def** %libfunc.i.i735, align 8, !tbaa !21
  %indvars.iv.next.i.i736 = add nuw nsw i64 %indvars.iv.i.i733, 1
  %exitcond.i.i737 = icmp eq i64 %indvars.iv.next.i.i736, 59
  br i1 %exitcond.i.i737, label %init_optab.exit740, label %for.body.i.i738

init_optab.exit740:                               ; preds = %for.body.i.i738
  %81 = bitcast i8* %call.i.i731 to %struct.optab*
  %code1.i739 = bitcast i8* %call.i.i731 to i32*
  store i32 131, i32* %code1.i739, align 4, !tbaa !5
  store %struct.optab* %81, %struct.optab** getelementptr inbounds ([154 x %struct.optab*]* @code_to_optab, i64 0, i64 131), align 8, !tbaa !1
  store %struct.optab* %81, %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 37), align 8, !tbaa !1
  %call.i.i741 = tail call noalias i8* @xmalloc(i64 952) #3
  %handlers.i.i742 = getelementptr inbounds i8* %call.i.i741, i64 8
  %82 = bitcast i8* %handlers.i.i742 to [59 x %struct.anon.3]*
  br label %for.body.i.i748

for.body.i.i748:                                  ; preds = %for.body.i.i748, %init_optab.exit740
  %indvars.iv.i.i743 = phi i64 [ 0, %init_optab.exit740 ], [ %indvars.iv.next.i.i746, %for.body.i.i748 ]
  %insn_code.i.i744 = getelementptr inbounds [59 x %struct.anon.3]* %82, i64 0, i64 %indvars.iv.i.i743, i32 0
  store i32 1317, i32* %insn_code.i.i744, align 4, !tbaa !10
  %libfunc.i.i745 = getelementptr inbounds [59 x %struct.anon.3]* %82, i64 0, i64 %indvars.iv.i.i743, i32 1
  store %struct.rtx_def* null, %struct.rtx_def** %libfunc.i.i745, align 8, !tbaa !21
  %indvars.iv.next.i.i746 = add nuw nsw i64 %indvars.iv.i.i743, 1
  %exitcond.i.i747 = icmp eq i64 %indvars.iv.next.i.i746, 59
  br i1 %exitcond.i.i747, label %init_optab.exit750, label %for.body.i.i748

init_optab.exit750:                               ; preds = %for.body.i.i748
  %83 = bitcast i8* %call.i.i741 to %struct.optab*
  %code1.i749 = bitcast i8* %call.i.i741 to i32*
  store i32 130, i32* %code1.i749, align 4, !tbaa !5
  store %struct.optab* %83, %struct.optab** getelementptr inbounds ([154 x %struct.optab*]* @code_to_optab, i64 0, i64 130), align 16, !tbaa !1
  store %struct.optab* %83, %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 38), align 16, !tbaa !1
  %call.i.i751 = tail call noalias i8* @xmalloc(i64 952) #3
  %handlers.i.i752 = getelementptr inbounds i8* %call.i.i751, i64 8
  %84 = bitcast i8* %handlers.i.i752 to [59 x %struct.anon.3]*
  br label %for.body.i.i758

for.body.i.i758:                                  ; preds = %for.body.i.i758, %init_optab.exit750
  %indvars.iv.i.i753 = phi i64 [ 0, %init_optab.exit750 ], [ %indvars.iv.next.i.i756, %for.body.i.i758 ]
  %insn_code.i.i754 = getelementptr inbounds [59 x %struct.anon.3]* %84, i64 0, i64 %indvars.iv.i.i753, i32 0
  store i32 1317, i32* %insn_code.i.i754, align 4, !tbaa !10
  %libfunc.i.i755 = getelementptr inbounds [59 x %struct.anon.3]* %84, i64 0, i64 %indvars.iv.i.i753, i32 1
  store %struct.rtx_def* null, %struct.rtx_def** %libfunc.i.i755, align 8, !tbaa !21
  %indvars.iv.next.i.i756 = add nuw nsw i64 %indvars.iv.i.i753, 1
  %exitcond.i.i757 = icmp eq i64 %indvars.iv.next.i.i756, 59
  br i1 %exitcond.i.i757, label %init_optab.exit760, label %for.body.i.i758

init_optab.exit760:                               ; preds = %for.body.i.i758
  %85 = bitcast i8* %call.i.i751 to %struct.optab*
  %code1.i759 = bitcast i8* %call.i.i751 to i32*
  store i32 0, i32* %code1.i759, align 4, !tbaa !5
  store %struct.optab* %85, %struct.optab** getelementptr inbounds ([154 x %struct.optab*]* @code_to_optab, i64 0, i64 0), align 16, !tbaa !1
  store %struct.optab* %85, %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 39), align 8, !tbaa !1
  %call.i.i761 = tail call noalias i8* @xmalloc(i64 952) #3
  %handlers.i.i762 = getelementptr inbounds i8* %call.i.i761, i64 8
  %86 = bitcast i8* %handlers.i.i762 to [59 x %struct.anon.3]*
  br label %for.body.i.i768

for.body.i.i768:                                  ; preds = %for.body.i.i768, %init_optab.exit760
  %indvars.iv.i.i763 = phi i64 [ 0, %init_optab.exit760 ], [ %indvars.iv.next.i.i766, %for.body.i.i768 ]
  %insn_code.i.i764 = getelementptr inbounds [59 x %struct.anon.3]* %86, i64 0, i64 %indvars.iv.i.i763, i32 0
  store i32 1317, i32* %insn_code.i.i764, align 4, !tbaa !10
  %libfunc.i.i765 = getelementptr inbounds [59 x %struct.anon.3]* %86, i64 0, i64 %indvars.iv.i.i763, i32 1
  store %struct.rtx_def* null, %struct.rtx_def** %libfunc.i.i765, align 8, !tbaa !21
  %indvars.iv.next.i.i766 = add nuw nsw i64 %indvars.iv.i.i763, 1
  %exitcond.i.i767 = icmp eq i64 %indvars.iv.next.i.i766, 59
  br i1 %exitcond.i.i767, label %init_optab.exit770, label %for.body.i.i768

init_optab.exit770:                               ; preds = %for.body.i.i768
  %87 = bitcast i8* %call.i.i761 to %struct.optab*
  %code1.i769 = bitcast i8* %call.i.i761 to i32*
  store i32 0, i32* %code1.i769, align 4, !tbaa !5
  store %struct.optab* %87, %struct.optab** getelementptr inbounds ([154 x %struct.optab*]* @code_to_optab, i64 0, i64 0), align 16, !tbaa !1
  store %struct.optab* %87, %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 40), align 16, !tbaa !1
  %call.i.i771 = tail call noalias i8* @xmalloc(i64 952) #3
  %handlers.i.i772 = getelementptr inbounds i8* %call.i.i771, i64 8
  %88 = bitcast i8* %handlers.i.i772 to [59 x %struct.anon.3]*
  br label %for.body.i.i778

for.body.i.i778:                                  ; preds = %for.body.i.i778, %init_optab.exit770
  %indvars.iv.i.i773 = phi i64 [ 0, %init_optab.exit770 ], [ %indvars.iv.next.i.i776, %for.body.i.i778 ]
  %insn_code.i.i774 = getelementptr inbounds [59 x %struct.anon.3]* %88, i64 0, i64 %indvars.iv.i.i773, i32 0
  store i32 1317, i32* %insn_code.i.i774, align 4, !tbaa !10
  %libfunc.i.i775 = getelementptr inbounds [59 x %struct.anon.3]* %88, i64 0, i64 %indvars.iv.i.i773, i32 1
  store %struct.rtx_def* null, %struct.rtx_def** %libfunc.i.i775, align 8, !tbaa !21
  %indvars.iv.next.i.i776 = add nuw nsw i64 %indvars.iv.i.i773, 1
  %exitcond.i.i777 = icmp eq i64 %indvars.iv.next.i.i776, 59
  br i1 %exitcond.i.i777, label %init_optab.exit780, label %for.body.i.i778

init_optab.exit780:                               ; preds = %for.body.i.i778
  %89 = bitcast i8* %call.i.i771 to %struct.optab*
  %code1.i779 = bitcast i8* %call.i.i771 to i32*
  store i32 0, i32* %code1.i779, align 4, !tbaa !5
  store %struct.optab* %89, %struct.optab** getelementptr inbounds ([154 x %struct.optab*]* @code_to_optab, i64 0, i64 0), align 16, !tbaa !1
  store %struct.optab* %89, %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 44), align 16, !tbaa !1
  %call.i.i781 = tail call noalias i8* @xmalloc(i64 952) #3
  %handlers.i.i782 = getelementptr inbounds i8* %call.i.i781, i64 8
  %90 = bitcast i8* %handlers.i.i782 to [59 x %struct.anon.3]*
  br label %for.body.i.i788

for.body.i.i788:                                  ; preds = %for.body.i.i788, %init_optab.exit780
  %indvars.iv.i.i783 = phi i64 [ 0, %init_optab.exit780 ], [ %indvars.iv.next.i.i786, %for.body.i.i788 ]
  %insn_code.i.i784 = getelementptr inbounds [59 x %struct.anon.3]* %90, i64 0, i64 %indvars.iv.i.i783, i32 0
  store i32 1317, i32* %insn_code.i.i784, align 4, !tbaa !10
  %libfunc.i.i785 = getelementptr inbounds [59 x %struct.anon.3]* %90, i64 0, i64 %indvars.iv.i.i783, i32 1
  store %struct.rtx_def* null, %struct.rtx_def** %libfunc.i.i785, align 8, !tbaa !21
  %indvars.iv.next.i.i786 = add nuw nsw i64 %indvars.iv.i.i783, 1
  %exitcond.i.i787 = icmp eq i64 %indvars.iv.next.i.i786, 59
  br i1 %exitcond.i.i787, label %init_optab.exit790, label %for.body.i.i788

init_optab.exit790:                               ; preds = %for.body.i.i788
  %91 = bitcast i8* %call.i.i781 to %struct.optab*
  %code1.i789 = bitcast i8* %call.i.i781 to i32*
  store i32 0, i32* %code1.i789, align 4, !tbaa !5
  store %struct.optab* %91, %struct.optab** getelementptr inbounds ([154 x %struct.optab*]* @code_to_optab, i64 0, i64 0), align 16, !tbaa !1
  store %struct.optab* %91, %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 45), align 8, !tbaa !1
  %call.i.i791 = tail call noalias i8* @xmalloc(i64 952) #3
  %handlers.i.i792 = getelementptr inbounds i8* %call.i.i791, i64 8
  %92 = bitcast i8* %handlers.i.i792 to [59 x %struct.anon.3]*
  br label %for.body.i.i798

for.body.i.i798:                                  ; preds = %for.body.i.i798, %init_optab.exit790
  %indvars.iv.i.i793 = phi i64 [ 0, %init_optab.exit790 ], [ %indvars.iv.next.i.i796, %for.body.i.i798 ]
  %insn_code.i.i794 = getelementptr inbounds [59 x %struct.anon.3]* %92, i64 0, i64 %indvars.iv.i.i793, i32 0
  store i32 1317, i32* %insn_code.i.i794, align 4, !tbaa !10
  %libfunc.i.i795 = getelementptr inbounds [59 x %struct.anon.3]* %92, i64 0, i64 %indvars.iv.i.i793, i32 1
  store %struct.rtx_def* null, %struct.rtx_def** %libfunc.i.i795, align 8, !tbaa !21
  %indvars.iv.next.i.i796 = add nuw nsw i64 %indvars.iv.i.i793, 1
  %exitcond.i.i797 = icmp eq i64 %indvars.iv.next.i.i796, 59
  br i1 %exitcond.i.i797, label %init_optab.exit800, label %for.body.i.i798

init_optab.exit800:                               ; preds = %for.body.i.i798
  %93 = bitcast i8* %call.i.i791 to %struct.optab*
  %code1.i799 = bitcast i8* %call.i.i791 to i32*
  store i32 0, i32* %code1.i799, align 4, !tbaa !5
  store %struct.optab* %93, %struct.optab** getelementptr inbounds ([154 x %struct.optab*]* @code_to_optab, i64 0, i64 0), align 16, !tbaa !1
  store %struct.optab* %93, %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 46), align 16, !tbaa !1
  %call.i.i801 = tail call noalias i8* @xmalloc(i64 952) #3
  %handlers.i.i802 = getelementptr inbounds i8* %call.i.i801, i64 8
  %94 = bitcast i8* %handlers.i.i802 to [59 x %struct.anon.3]*
  br label %for.body.i.i808

for.body.i.i808:                                  ; preds = %for.body.i.i808, %init_optab.exit800
  %indvars.iv.i.i803 = phi i64 [ 0, %init_optab.exit800 ], [ %indvars.iv.next.i.i806, %for.body.i.i808 ]
  %insn_code.i.i804 = getelementptr inbounds [59 x %struct.anon.3]* %94, i64 0, i64 %indvars.iv.i.i803, i32 0
  store i32 1317, i32* %insn_code.i.i804, align 4, !tbaa !10
  %libfunc.i.i805 = getelementptr inbounds [59 x %struct.anon.3]* %94, i64 0, i64 %indvars.iv.i.i803, i32 1
  store %struct.rtx_def* null, %struct.rtx_def** %libfunc.i.i805, align 8, !tbaa !21
  %indvars.iv.next.i.i806 = add nuw nsw i64 %indvars.iv.i.i803, 1
  %exitcond.i.i807 = icmp eq i64 %indvars.iv.next.i.i806, 59
  br i1 %exitcond.i.i807, label %init_optab.exit810, label %for.body.i.i808

init_optab.exit810:                               ; preds = %for.body.i.i808
  %95 = bitcast i8* %call.i.i801 to %struct.optab*
  %code1.i809 = bitcast i8* %call.i.i801 to i32*
  store i32 0, i32* %code1.i809, align 4, !tbaa !5
  store %struct.optab* %95, %struct.optab** getelementptr inbounds ([154 x %struct.optab*]* @code_to_optab, i64 0, i64 0), align 16, !tbaa !1
  store %struct.optab* %95, %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 47), align 8, !tbaa !1
  %call.i.i811 = tail call noalias i8* @xmalloc(i64 952) #3
  %handlers.i.i812 = getelementptr inbounds i8* %call.i.i811, i64 8
  %96 = bitcast i8* %handlers.i.i812 to [59 x %struct.anon.3]*
  br label %for.body.i.i818

for.body.i.i818:                                  ; preds = %for.body.i.i818, %init_optab.exit810
  %indvars.iv.i.i813 = phi i64 [ 0, %init_optab.exit810 ], [ %indvars.iv.next.i.i816, %for.body.i.i818 ]
  %insn_code.i.i814 = getelementptr inbounds [59 x %struct.anon.3]* %96, i64 0, i64 %indvars.iv.i.i813, i32 0
  store i32 1317, i32* %insn_code.i.i814, align 4, !tbaa !10
  %libfunc.i.i815 = getelementptr inbounds [59 x %struct.anon.3]* %96, i64 0, i64 %indvars.iv.i.i813, i32 1
  store %struct.rtx_def* null, %struct.rtx_def** %libfunc.i.i815, align 8, !tbaa !21
  %indvars.iv.next.i.i816 = add nuw nsw i64 %indvars.iv.i.i813, 1
  %exitcond.i.i817 = icmp eq i64 %indvars.iv.next.i.i816, 59
  br i1 %exitcond.i.i817, label %init_optab.exit820, label %for.body.i.i818

init_optab.exit820:                               ; preds = %for.body.i.i818
  %97 = bitcast i8* %call.i.i811 to %struct.optab*
  %code1.i819 = bitcast i8* %call.i.i811 to i32*
  store i32 0, i32* %code1.i819, align 4, !tbaa !5
  store %struct.optab* %97, %struct.optab** getelementptr inbounds ([154 x %struct.optab*]* @code_to_optab, i64 0, i64 0), align 16, !tbaa !1
  store %struct.optab* %97, %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 48), align 16, !tbaa !1
  br label %for.body181

for.body181:                                      ; preds = %for.body181, %init_optab.exit820
  %indvars.iv = phi i64 [ 0, %init_optab.exit820 ], [ %indvars.iv.next, %for.body181 ]
  %arrayidx183 = getelementptr inbounds [59 x i32]* @movstr_optab, i64 0, i64 %indvars.iv
  store i32 1317, i32* %arrayidx183, align 4, !tbaa !9
  %arrayidx185 = getelementptr inbounds [59 x i32]* @clrstr_optab, i64 0, i64 %indvars.iv
  store i32 1317, i32* %arrayidx185, align 4, !tbaa !9
  %arrayidx187 = getelementptr inbounds [59 x i32]* @reload_out_optab, i64 0, i64 %indvars.iv
  store i32 1317, i32* %arrayidx187, align 4, !tbaa !9
  %arrayidx189 = getelementptr inbounds [59 x i32]* @reload_in_optab, i64 0, i64 %indvars.iv
  store i32 1317, i32* %arrayidx189, align 4, !tbaa !9
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 59
  br i1 %exitcond, label %for.end192, label %for.body181

for.end192:                                       ; preds = %for.body181
  tail call void @init_all_optabs() #3
  %98 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 0), align 16, !tbaa !1
  tail call fastcc void @init_libfuncs(%struct.optab* %98, i32 4, i32 6, i8* getelementptr inbounds ([4 x i8]* @.str1, i64 0, i64 0), i32 51) #3
  %99 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 0), align 16, !tbaa !1
  tail call fastcc void @init_libfuncs(%struct.optab* %99, i32 15, i32 18, i8* getelementptr inbounds ([4 x i8]* @.str1, i64 0, i64 0), i32 51) #3
  %100 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 1), align 8, !tbaa !1
  tail call fastcc void @init_libfuncs(%struct.optab* %100, i32 4, i32 6, i8* getelementptr inbounds ([5 x i8]* @.str2, i64 0, i64 0), i32 51) #3
  %101 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 1), align 8, !tbaa !1
  tail call fastcc void @init_libfuncs(%struct.optab* %101, i32 15, i32 18, i8* getelementptr inbounds ([4 x i8]* @.str1, i64 0, i64 0), i32 51) #3
  %102 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 2), align 16, !tbaa !1
  tail call fastcc void @init_libfuncs(%struct.optab* %102, i32 4, i32 6, i8* getelementptr inbounds ([4 x i8]* @.str3, i64 0, i64 0), i32 51) #3
  %103 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 2), align 16, !tbaa !1
  tail call fastcc void @init_libfuncs(%struct.optab* %103, i32 15, i32 18, i8* getelementptr inbounds ([4 x i8]* @.str3, i64 0, i64 0), i32 51) #3
  %104 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 3), align 8, !tbaa !1
  tail call fastcc void @init_libfuncs(%struct.optab* %104, i32 4, i32 6, i8* getelementptr inbounds ([5 x i8]* @.str4, i64 0, i64 0), i32 51) #3
  %105 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 3), align 8, !tbaa !1
  tail call fastcc void @init_libfuncs(%struct.optab* %105, i32 15, i32 18, i8* getelementptr inbounds ([4 x i8]* @.str3, i64 0, i64 0), i32 51) #3
  %106 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 4), align 16, !tbaa !1
  tail call fastcc void @init_libfuncs(%struct.optab* %106, i32 4, i32 6, i8* getelementptr inbounds ([4 x i8]* @.str5, i64 0, i64 0), i32 51) #3
  %107 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 4), align 16, !tbaa !1
  tail call fastcc void @init_libfuncs(%struct.optab* %107, i32 15, i32 18, i8* getelementptr inbounds ([4 x i8]* @.str5, i64 0, i64 0), i32 51) #3
  %108 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 5), align 8, !tbaa !1
  tail call fastcc void @init_libfuncs(%struct.optab* %108, i32 4, i32 6, i8* getelementptr inbounds ([5 x i8]* @.str6, i64 0, i64 0), i32 51) #3
  %109 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 5), align 8, !tbaa !1
  tail call fastcc void @init_libfuncs(%struct.optab* %109, i32 15, i32 18, i8* getelementptr inbounds ([4 x i8]* @.str5, i64 0, i64 0), i32 51) #3
  %110 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 10), align 16, !tbaa !1
  tail call fastcc void @init_libfuncs(%struct.optab* %110, i32 4, i32 6, i8* getelementptr inbounds ([4 x i8]* @.str7, i64 0, i64 0), i32 51) #3
  %111 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 10), align 16, !tbaa !1
  tail call fastcc void @init_libfuncs(%struct.optab* %111, i32 15, i32 18, i8* getelementptr inbounds ([4 x i8]* @.str7, i64 0, i64 0), i32 51) #3
  %112 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 11), align 8, !tbaa !1
  tail call fastcc void @init_libfuncs(%struct.optab* %112, i32 4, i32 6, i8* getelementptr inbounds ([5 x i8]* @.str8, i64 0, i64 0), i32 51) #3
  %113 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 13), align 8, !tbaa !1
  tail call fastcc void @init_libfuncs(%struct.optab* %113, i32 4, i32 6, i8* getelementptr inbounds ([5 x i8]* @.str9, i64 0, i64 0), i32 51) #3
  %114 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 12), align 16, !tbaa !1
  tail call fastcc void @init_libfuncs(%struct.optab* %114, i32 4, i32 6, i8* getelementptr inbounds ([7 x i8]* @.str10, i64 0, i64 0), i32 52) #3
  %115 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 14), align 16, !tbaa !1
  tail call fastcc void @init_libfuncs(%struct.optab* %115, i32 4, i32 6, i8* getelementptr inbounds ([8 x i8]* @.str11, i64 0, i64 0), i32 52) #3
  %116 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 15), align 8, !tbaa !1
  tail call fastcc void @init_libfuncs(%struct.optab* %116, i32 4, i32 6, i8* getelementptr inbounds ([4 x i8]* @.str12, i64 0, i64 0), i32 51) #3
  %117 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 16), align 16, !tbaa !1
  tail call fastcc void @init_libfuncs(%struct.optab* %117, i32 4, i32 6, i8* getelementptr inbounds ([5 x i8]* @.str13, i64 0, i64 0), i32 51) #3
  %118 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 17), align 8, !tbaa !1
  tail call fastcc void @init_libfuncs(%struct.optab* %118, i32 15, i32 18, i8* getelementptr inbounds ([7 x i8]* @.str14, i64 0, i64 0), i32 50) #3
  %119 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 18), align 16, !tbaa !1
  tail call fastcc void @init_libfuncs(%struct.optab* %119, i32 4, i32 6, i8* getelementptr inbounds ([4 x i8]* @.str15, i64 0, i64 0), i32 51) #3
  %120 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 19), align 8, !tbaa !1
  tail call fastcc void @init_libfuncs(%struct.optab* %120, i32 4, i32 6, i8* getelementptr inbounds ([4 x i8]* @.str16, i64 0, i64 0), i32 51) #3
  %121 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 20), align 16, !tbaa !1
  tail call fastcc void @init_libfuncs(%struct.optab* %121, i32 4, i32 6, i8* getelementptr inbounds ([4 x i8]* @.str17, i64 0, i64 0), i32 51) #3
  %122 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 21), align 8, !tbaa !1
  tail call fastcc void @init_libfuncs(%struct.optab* %122, i32 4, i32 6, i8* getelementptr inbounds ([5 x i8]* @.str18, i64 0, i64 0), i32 51) #3
  %123 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 23), align 8, !tbaa !1
  tail call fastcc void @init_libfuncs(%struct.optab* %123, i32 4, i32 6, i8* getelementptr inbounds ([5 x i8]* @.str19, i64 0, i64 0), i32 51) #3
  %124 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 22), align 16, !tbaa !1
  tail call fastcc void @init_libfuncs(%struct.optab* %124, i32 4, i32 6, i8* getelementptr inbounds ([5 x i8]* @.str20, i64 0, i64 0), i32 51) #3
  %125 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 26), align 16, !tbaa !1
  tail call fastcc void @init_libfuncs(%struct.optab* %125, i32 4, i32 6, i8* getelementptr inbounds ([4 x i8]* @.str21, i64 0, i64 0), i32 51) #3
  %126 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 26), align 16, !tbaa !1
  tail call fastcc void @init_libfuncs(%struct.optab* %126, i32 15, i32 18, i8* getelementptr inbounds ([4 x i8]* @.str21, i64 0, i64 0), i32 51) #3
  %127 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 27), align 8, !tbaa !1
  tail call fastcc void @init_libfuncs(%struct.optab* %127, i32 4, i32 6, i8* getelementptr inbounds ([4 x i8]* @.str22, i64 0, i64 0), i32 51) #3
  %128 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 27), align 8, !tbaa !1
  tail call fastcc void @init_libfuncs(%struct.optab* %128, i32 15, i32 18, i8* getelementptr inbounds ([4 x i8]* @.str22, i64 0, i64 0), i32 51) #3
  %129 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 28), align 16, !tbaa !1
  tail call fastcc void @init_libfuncs(%struct.optab* %129, i32 4, i32 6, i8* getelementptr inbounds ([5 x i8]* @.str23, i64 0, i64 0), i32 51) #3
  %130 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 29), align 8, !tbaa !1
  tail call fastcc void @init_libfuncs(%struct.optab* %130, i32 4, i32 6, i8* getelementptr inbounds ([5 x i8]* @.str24, i64 0, i64 0), i32 51) #3
  %131 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 32), align 16, !tbaa !1
  tail call fastcc void @init_libfuncs(%struct.optab* %131, i32 4, i32 6, i8* getelementptr inbounds ([4 x i8]* @.str25, i64 0, i64 0), i32 50) #3
  %132 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 32), align 16, !tbaa !1
  tail call fastcc void @init_libfuncs(%struct.optab* %132, i32 15, i32 18, i8* getelementptr inbounds ([4 x i8]* @.str25, i64 0, i64 0), i32 50) #3
  %133 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 33), align 8, !tbaa !1
  tail call fastcc void @init_libfuncs(%struct.optab* %133, i32 4, i32 6, i8* getelementptr inbounds ([5 x i8]* @.str26, i64 0, i64 0), i32 50) #3
  %134 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 33), align 8, !tbaa !1
  tail call fastcc void @init_libfuncs(%struct.optab* %134, i32 15, i32 18, i8* getelementptr inbounds ([4 x i8]* @.str25, i64 0, i64 0), i32 50) #3
  %135 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 36), align 16, !tbaa !1
  tail call fastcc void @init_libfuncs(%struct.optab* %135, i32 4, i32 6, i8* getelementptr inbounds ([9 x i8]* @.str27, i64 0, i64 0), i32 50) #3
  %136 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 37), align 8, !tbaa !1
  tail call fastcc void @init_libfuncs(%struct.optab* %136, i32 4, i32 6, i8* getelementptr inbounds ([4 x i8]* @.str28, i64 0, i64 0), i32 50) #3
  %137 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 41), align 8, !tbaa !1
  tail call fastcc void @init_libfuncs(%struct.optab* %137, i32 4, i32 6, i8* getelementptr inbounds ([4 x i8]* @.str29, i64 0, i64 0), i32 50) #3
  %138 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 42), align 16, !tbaa !1
  tail call fastcc void @init_libfuncs(%struct.optab* %138, i32 4, i32 6, i8* getelementptr inbounds ([5 x i8]* @.str30, i64 0, i64 0), i32 50) #3
  %139 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 41), align 8, !tbaa !1
  tail call fastcc void @init_libfuncs(%struct.optab* %139, i32 15, i32 18, i8* getelementptr inbounds ([4 x i8]* @.str29, i64 0, i64 0), i32 50) #3
  %call.i = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([5 x i8]* @.str31, i64 0, i64 0)) #3
  %140 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i = tail call %union.tree_node* @build_function_type(%union.tree_node* %140, %union.tree_node* null) #3
  %call2.i = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i, %union.tree_node* %call1.i) #3
  %artificial_flag.i = getelementptr inbounds %union.tree_node* %call2.i, i64 0, i32 0, i32 5
  %141 = bitcast i48* %artificial_flag.i to i64*
  %bf.load.i = load i64* %141, align 8
  %bf.set7.i = or i64 %bf.load.i, 4194560
  store i64 %bf.set7.i, i64* %141, align 8
  %public_flag.i = getelementptr inbounds %union.tree_node* %call2.i, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i = load i32* %public_flag.i, align 8
  %bf.set10.i = or i32 %bf.load8.i, 524288
  store i32 %bf.set10.i, i32* %public_flag.i, align 8
  %rtl.i = getelementptr inbounds %union.tree_node* %call2.i, i64 0, i32 0, i32 17
  %142 = load %struct.rtx_def** %rtl.i, align 8, !tbaa !32
  %tobool.i = icmp eq %struct.rtx_def* %142, null
  br i1 %tobool.i, label %cond.false.i, label %init_one_libfunc.exit

cond.false.i:                                     ; preds = %for.end192
  tail call void @make_decl_rtl(%union.tree_node* %call2.i, i8* null) #3
  %143 = load %struct.rtx_def** %rtl.i, align 8, !tbaa !32
  br label %init_one_libfunc.exit

init_one_libfunc.exit:                            ; preds = %for.end192, %cond.false.i
  %cond.i = phi %struct.rtx_def* [ %143, %cond.false.i ], [ %142, %for.end192 ]
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %cond.i, i64 0, i32 1, i64 0
  %rtx.i = bitcast %union.rtunion_def* %arrayidx.i to %struct.rtx_def**
  %144 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !1
  %145 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 34), align 16, !tbaa !1
  %libfunc = getelementptr inbounds %struct.optab* %145, i64 0, i32 1, i64 22, i32 1
  store %struct.rtx_def* %144, %struct.rtx_def** %libfunc, align 8, !tbaa !21
  %call.i821 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([4 x i8]* @.str28, i64 0, i64 0)) #3
  %146 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i822 = tail call %union.tree_node* @build_function_type(%union.tree_node* %146, %union.tree_node* null) #3
  %call2.i823 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i821, %union.tree_node* %call1.i822) #3
  %artificial_flag.i824 = getelementptr inbounds %union.tree_node* %call2.i823, i64 0, i32 0, i32 5
  %147 = bitcast i48* %artificial_flag.i824 to i64*
  %bf.load.i825 = load i64* %147, align 8
  %bf.set7.i826 = or i64 %bf.load.i825, 4194560
  store i64 %bf.set7.i826, i64* %147, align 8
  %public_flag.i827 = getelementptr inbounds %union.tree_node* %call2.i823, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i828 = load i32* %public_flag.i827, align 8
  %bf.set10.i829 = or i32 %bf.load8.i828, 524288
  store i32 %bf.set10.i829, i32* %public_flag.i827, align 8
  %rtl.i830 = getelementptr inbounds %union.tree_node* %call2.i823, i64 0, i32 0, i32 17
  %148 = load %struct.rtx_def** %rtl.i830, align 8, !tbaa !32
  %tobool.i831 = icmp eq %struct.rtx_def* %148, null
  br i1 %tobool.i831, label %cond.false.i832, label %init_one_libfunc.exit836

cond.false.i832:                                  ; preds = %init_one_libfunc.exit
  tail call void @make_decl_rtl(%union.tree_node* %call2.i823, i8* null) #3
  %149 = load %struct.rtx_def** %rtl.i830, align 8, !tbaa !32
  br label %init_one_libfunc.exit836

init_one_libfunc.exit836:                         ; preds = %init_one_libfunc.exit, %cond.false.i832
  %cond.i833 = phi %struct.rtx_def* [ %149, %cond.false.i832 ], [ %148, %init_one_libfunc.exit ]
  %arrayidx.i834 = getelementptr inbounds %struct.rtx_def* %cond.i833, i64 0, i32 1, i64 0
  %rtx.i835 = bitcast %union.rtunion_def* %arrayidx.i834 to %struct.rtx_def**
  %150 = load %struct.rtx_def** %rtx.i835, align 8, !tbaa !1
  %call196 = tail call i32 @mode_for_size(i32 32, i32 1, i32 0) #3
  %idxprom197 = sext i32 %call196 to i64
  %151 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 37), align 8, !tbaa !1
  %libfunc200 = getelementptr inbounds %struct.optab* %151, i64 0, i32 1, i64 %idxprom197, i32 1
  store %struct.rtx_def* %150, %struct.rtx_def** %libfunc200, align 8, !tbaa !21
  %call.i837 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([14 x i8]* @.str32, i64 0, i64 0)) #3
  %152 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i838 = tail call %union.tree_node* @build_function_type(%union.tree_node* %152, %union.tree_node* null) #3
  %call2.i839 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i837, %union.tree_node* %call1.i838) #3
  %artificial_flag.i840 = getelementptr inbounds %union.tree_node* %call2.i839, i64 0, i32 0, i32 5
  %153 = bitcast i48* %artificial_flag.i840 to i64*
  %bf.load.i841 = load i64* %153, align 8
  %bf.set7.i842 = or i64 %bf.load.i841, 4194560
  store i64 %bf.set7.i842, i64* %153, align 8
  %public_flag.i843 = getelementptr inbounds %union.tree_node* %call2.i839, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i844 = load i32* %public_flag.i843, align 8
  %bf.set10.i845 = or i32 %bf.load8.i844, 524288
  store i32 %bf.set10.i845, i32* %public_flag.i843, align 8
  %rtl.i846 = getelementptr inbounds %union.tree_node* %call2.i839, i64 0, i32 0, i32 17
  %154 = load %struct.rtx_def** %rtl.i846, align 8, !tbaa !32
  %tobool.i847 = icmp eq %struct.rtx_def* %154, null
  br i1 %tobool.i847, label %cond.false.i848, label %init_one_libfunc.exit852

cond.false.i848:                                  ; preds = %init_one_libfunc.exit836
  tail call void @make_decl_rtl(%union.tree_node* %call2.i839, i8* null) #3
  %155 = load %struct.rtx_def** %rtl.i846, align 8, !tbaa !32
  br label %init_one_libfunc.exit852

init_one_libfunc.exit852:                         ; preds = %init_one_libfunc.exit836, %cond.false.i848
  %cond.i849 = phi %struct.rtx_def* [ %155, %cond.false.i848 ], [ %154, %init_one_libfunc.exit836 ]
  %arrayidx.i850 = getelementptr inbounds %struct.rtx_def* %cond.i849, i64 0, i32 1, i64 0
  %rtx.i851 = bitcast %union.rtunion_def* %arrayidx.i850 to %struct.rtx_def**
  %156 = load %struct.rtx_def** %rtx.i851, align 8, !tbaa !1
  store %struct.rtx_def* %156, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 0), align 16, !tbaa !1
  %call.i853 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([14 x i8]* @.str33, i64 0, i64 0)) #3
  %157 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i854 = tail call %union.tree_node* @build_function_type(%union.tree_node* %157, %union.tree_node* null) #3
  %call2.i855 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i853, %union.tree_node* %call1.i854) #3
  %artificial_flag.i856 = getelementptr inbounds %union.tree_node* %call2.i855, i64 0, i32 0, i32 5
  %158 = bitcast i48* %artificial_flag.i856 to i64*
  %bf.load.i857 = load i64* %158, align 8
  %bf.set7.i858 = or i64 %bf.load.i857, 4194560
  store i64 %bf.set7.i858, i64* %158, align 8
  %public_flag.i859 = getelementptr inbounds %union.tree_node* %call2.i855, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i860 = load i32* %public_flag.i859, align 8
  %bf.set10.i861 = or i32 %bf.load8.i860, 524288
  store i32 %bf.set10.i861, i32* %public_flag.i859, align 8
  %rtl.i862 = getelementptr inbounds %union.tree_node* %call2.i855, i64 0, i32 0, i32 17
  %159 = load %struct.rtx_def** %rtl.i862, align 8, !tbaa !32
  %tobool.i863 = icmp eq %struct.rtx_def* %159, null
  br i1 %tobool.i863, label %cond.false.i864, label %init_one_libfunc.exit868

cond.false.i864:                                  ; preds = %init_one_libfunc.exit852
  tail call void @make_decl_rtl(%union.tree_node* %call2.i855, i8* null) #3
  %160 = load %struct.rtx_def** %rtl.i862, align 8, !tbaa !32
  br label %init_one_libfunc.exit868

init_one_libfunc.exit868:                         ; preds = %init_one_libfunc.exit852, %cond.false.i864
  %cond.i865 = phi %struct.rtx_def* [ %160, %cond.false.i864 ], [ %159, %init_one_libfunc.exit852 ]
  %arrayidx.i866 = getelementptr inbounds %struct.rtx_def* %cond.i865, i64 0, i32 1, i64 0
  %rtx.i867 = bitcast %union.rtunion_def* %arrayidx.i866 to %struct.rtx_def**
  %161 = load %struct.rtx_def** %rtx.i867, align 8, !tbaa !1
  store %struct.rtx_def* %161, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 1), align 8, !tbaa !1
  %call.i869 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([14 x i8]* @.str34, i64 0, i64 0)) #3
  %162 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i870 = tail call %union.tree_node* @build_function_type(%union.tree_node* %162, %union.tree_node* null) #3
  %call2.i871 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i869, %union.tree_node* %call1.i870) #3
  %artificial_flag.i872 = getelementptr inbounds %union.tree_node* %call2.i871, i64 0, i32 0, i32 5
  %163 = bitcast i48* %artificial_flag.i872 to i64*
  %bf.load.i873 = load i64* %163, align 8
  %bf.set7.i874 = or i64 %bf.load.i873, 4194560
  store i64 %bf.set7.i874, i64* %163, align 8
  %public_flag.i875 = getelementptr inbounds %union.tree_node* %call2.i871, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i876 = load i32* %public_flag.i875, align 8
  %bf.set10.i877 = or i32 %bf.load8.i876, 524288
  store i32 %bf.set10.i877, i32* %public_flag.i875, align 8
  %rtl.i878 = getelementptr inbounds %union.tree_node* %call2.i871, i64 0, i32 0, i32 17
  %164 = load %struct.rtx_def** %rtl.i878, align 8, !tbaa !32
  %tobool.i879 = icmp eq %struct.rtx_def* %164, null
  br i1 %tobool.i879, label %cond.false.i880, label %init_one_libfunc.exit884

cond.false.i880:                                  ; preds = %init_one_libfunc.exit868
  tail call void @make_decl_rtl(%union.tree_node* %call2.i871, i8* null) #3
  %165 = load %struct.rtx_def** %rtl.i878, align 8, !tbaa !32
  br label %init_one_libfunc.exit884

init_one_libfunc.exit884:                         ; preds = %init_one_libfunc.exit868, %cond.false.i880
  %cond.i881 = phi %struct.rtx_def* [ %165, %cond.false.i880 ], [ %164, %init_one_libfunc.exit868 ]
  %arrayidx.i882 = getelementptr inbounds %struct.rtx_def* %cond.i881, i64 0, i32 1, i64 0
  %rtx.i883 = bitcast %union.rtunion_def* %arrayidx.i882 to %struct.rtx_def**
  %166 = load %struct.rtx_def** %rtx.i883, align 8, !tbaa !1
  store %struct.rtx_def* %166, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 2), align 16, !tbaa !1
  %call.i885 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([14 x i8]* @.str35, i64 0, i64 0)) #3
  %167 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i886 = tail call %union.tree_node* @build_function_type(%union.tree_node* %167, %union.tree_node* null) #3
  %call2.i887 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i885, %union.tree_node* %call1.i886) #3
  %artificial_flag.i888 = getelementptr inbounds %union.tree_node* %call2.i887, i64 0, i32 0, i32 5
  %168 = bitcast i48* %artificial_flag.i888 to i64*
  %bf.load.i889 = load i64* %168, align 8
  %bf.set7.i890 = or i64 %bf.load.i889, 4194560
  store i64 %bf.set7.i890, i64* %168, align 8
  %public_flag.i891 = getelementptr inbounds %union.tree_node* %call2.i887, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i892 = load i32* %public_flag.i891, align 8
  %bf.set10.i893 = or i32 %bf.load8.i892, 524288
  store i32 %bf.set10.i893, i32* %public_flag.i891, align 8
  %rtl.i894 = getelementptr inbounds %union.tree_node* %call2.i887, i64 0, i32 0, i32 17
  %169 = load %struct.rtx_def** %rtl.i894, align 8, !tbaa !32
  %tobool.i895 = icmp eq %struct.rtx_def* %169, null
  br i1 %tobool.i895, label %cond.false.i896, label %init_one_libfunc.exit900

cond.false.i896:                                  ; preds = %init_one_libfunc.exit884
  tail call void @make_decl_rtl(%union.tree_node* %call2.i887, i8* null) #3
  %170 = load %struct.rtx_def** %rtl.i894, align 8, !tbaa !32
  br label %init_one_libfunc.exit900

init_one_libfunc.exit900:                         ; preds = %init_one_libfunc.exit884, %cond.false.i896
  %cond.i897 = phi %struct.rtx_def* [ %170, %cond.false.i896 ], [ %169, %init_one_libfunc.exit884 ]
  %arrayidx.i898 = getelementptr inbounds %struct.rtx_def* %cond.i897, i64 0, i32 1, i64 0
  %rtx.i899 = bitcast %union.rtunion_def* %arrayidx.i898 to %struct.rtx_def**
  %171 = load %struct.rtx_def** %rtx.i899, align 8, !tbaa !1
  store %struct.rtx_def* %171, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 3), align 8, !tbaa !1
  %call.i901 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([14 x i8]* @.str36, i64 0, i64 0)) #3
  %172 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i902 = tail call %union.tree_node* @build_function_type(%union.tree_node* %172, %union.tree_node* null) #3
  %call2.i903 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i901, %union.tree_node* %call1.i902) #3
  %artificial_flag.i904 = getelementptr inbounds %union.tree_node* %call2.i903, i64 0, i32 0, i32 5
  %173 = bitcast i48* %artificial_flag.i904 to i64*
  %bf.load.i905 = load i64* %173, align 8
  %bf.set7.i906 = or i64 %bf.load.i905, 4194560
  store i64 %bf.set7.i906, i64* %173, align 8
  %public_flag.i907 = getelementptr inbounds %union.tree_node* %call2.i903, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i908 = load i32* %public_flag.i907, align 8
  %bf.set10.i909 = or i32 %bf.load8.i908, 524288
  store i32 %bf.set10.i909, i32* %public_flag.i907, align 8
  %rtl.i910 = getelementptr inbounds %union.tree_node* %call2.i903, i64 0, i32 0, i32 17
  %174 = load %struct.rtx_def** %rtl.i910, align 8, !tbaa !32
  %tobool.i911 = icmp eq %struct.rtx_def* %174, null
  br i1 %tobool.i911, label %cond.false.i912, label %init_one_libfunc.exit916

cond.false.i912:                                  ; preds = %init_one_libfunc.exit900
  tail call void @make_decl_rtl(%union.tree_node* %call2.i903, i8* null) #3
  %175 = load %struct.rtx_def** %rtl.i910, align 8, !tbaa !32
  br label %init_one_libfunc.exit916

init_one_libfunc.exit916:                         ; preds = %init_one_libfunc.exit900, %cond.false.i912
  %cond.i913 = phi %struct.rtx_def* [ %175, %cond.false.i912 ], [ %174, %init_one_libfunc.exit900 ]
  %arrayidx.i914 = getelementptr inbounds %struct.rtx_def* %cond.i913, i64 0, i32 1, i64 0
  %rtx.i915 = bitcast %union.rtunion_def* %arrayidx.i914 to %struct.rtx_def**
  %176 = load %struct.rtx_def** %rtx.i915, align 8, !tbaa !1
  store %struct.rtx_def* %176, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 4), align 16, !tbaa !1
  %call.i917 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([13 x i8]* @.str37, i64 0, i64 0)) #3
  %177 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i918 = tail call %union.tree_node* @build_function_type(%union.tree_node* %177, %union.tree_node* null) #3
  %call2.i919 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i917, %union.tree_node* %call1.i918) #3
  %artificial_flag.i920 = getelementptr inbounds %union.tree_node* %call2.i919, i64 0, i32 0, i32 5
  %178 = bitcast i48* %artificial_flag.i920 to i64*
  %bf.load.i921 = load i64* %178, align 8
  %bf.set7.i922 = or i64 %bf.load.i921, 4194560
  store i64 %bf.set7.i922, i64* %178, align 8
  %public_flag.i923 = getelementptr inbounds %union.tree_node* %call2.i919, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i924 = load i32* %public_flag.i923, align 8
  %bf.set10.i925 = or i32 %bf.load8.i924, 524288
  store i32 %bf.set10.i925, i32* %public_flag.i923, align 8
  %rtl.i926 = getelementptr inbounds %union.tree_node* %call2.i919, i64 0, i32 0, i32 17
  %179 = load %struct.rtx_def** %rtl.i926, align 8, !tbaa !32
  %tobool.i927 = icmp eq %struct.rtx_def* %179, null
  br i1 %tobool.i927, label %cond.false.i928, label %init_one_libfunc.exit932

cond.false.i928:                                  ; preds = %init_one_libfunc.exit916
  tail call void @make_decl_rtl(%union.tree_node* %call2.i919, i8* null) #3
  %180 = load %struct.rtx_def** %rtl.i926, align 8, !tbaa !32
  br label %init_one_libfunc.exit932

init_one_libfunc.exit932:                         ; preds = %init_one_libfunc.exit916, %cond.false.i928
  %cond.i929 = phi %struct.rtx_def* [ %180, %cond.false.i928 ], [ %179, %init_one_libfunc.exit916 ]
  %arrayidx.i930 = getelementptr inbounds %struct.rtx_def* %cond.i929, i64 0, i32 1, i64 0
  %rtx.i931 = bitcast %union.rtunion_def* %arrayidx.i930 to %struct.rtx_def**
  %181 = load %struct.rtx_def** %rtx.i931, align 8, !tbaa !1
  store %struct.rtx_def* %181, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 5), align 8, !tbaa !1
  %call.i933 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([13 x i8]* @.str38, i64 0, i64 0)) #3
  %182 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i934 = tail call %union.tree_node* @build_function_type(%union.tree_node* %182, %union.tree_node* null) #3
  %call2.i935 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i933, %union.tree_node* %call1.i934) #3
  %artificial_flag.i936 = getelementptr inbounds %union.tree_node* %call2.i935, i64 0, i32 0, i32 5
  %183 = bitcast i48* %artificial_flag.i936 to i64*
  %bf.load.i937 = load i64* %183, align 8
  %bf.set7.i938 = or i64 %bf.load.i937, 4194560
  store i64 %bf.set7.i938, i64* %183, align 8
  %public_flag.i939 = getelementptr inbounds %union.tree_node* %call2.i935, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i940 = load i32* %public_flag.i939, align 8
  %bf.set10.i941 = or i32 %bf.load8.i940, 524288
  store i32 %bf.set10.i941, i32* %public_flag.i939, align 8
  %rtl.i942 = getelementptr inbounds %union.tree_node* %call2.i935, i64 0, i32 0, i32 17
  %184 = load %struct.rtx_def** %rtl.i942, align 8, !tbaa !32
  %tobool.i943 = icmp eq %struct.rtx_def* %184, null
  br i1 %tobool.i943, label %cond.false.i944, label %init_one_libfunc.exit948

cond.false.i944:                                  ; preds = %init_one_libfunc.exit932
  tail call void @make_decl_rtl(%union.tree_node* %call2.i935, i8* null) #3
  %185 = load %struct.rtx_def** %rtl.i942, align 8, !tbaa !32
  br label %init_one_libfunc.exit948

init_one_libfunc.exit948:                         ; preds = %init_one_libfunc.exit932, %cond.false.i944
  %cond.i945 = phi %struct.rtx_def* [ %185, %cond.false.i944 ], [ %184, %init_one_libfunc.exit932 ]
  %arrayidx.i946 = getelementptr inbounds %struct.rtx_def* %cond.i945, i64 0, i32 1, i64 0
  %rtx.i947 = bitcast %union.rtunion_def* %arrayidx.i946 to %struct.rtx_def**
  %186 = load %struct.rtx_def** %rtx.i947, align 8, !tbaa !1
  store %struct.rtx_def* %186, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 6), align 16, !tbaa !1
  %call.i949 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([13 x i8]* @.str39, i64 0, i64 0)) #3
  %187 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i950 = tail call %union.tree_node* @build_function_type(%union.tree_node* %187, %union.tree_node* null) #3
  %call2.i951 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i949, %union.tree_node* %call1.i950) #3
  %artificial_flag.i952 = getelementptr inbounds %union.tree_node* %call2.i951, i64 0, i32 0, i32 5
  %188 = bitcast i48* %artificial_flag.i952 to i64*
  %bf.load.i953 = load i64* %188, align 8
  %bf.set7.i954 = or i64 %bf.load.i953, 4194560
  store i64 %bf.set7.i954, i64* %188, align 8
  %public_flag.i955 = getelementptr inbounds %union.tree_node* %call2.i951, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i956 = load i32* %public_flag.i955, align 8
  %bf.set10.i957 = or i32 %bf.load8.i956, 524288
  store i32 %bf.set10.i957, i32* %public_flag.i955, align 8
  %rtl.i958 = getelementptr inbounds %union.tree_node* %call2.i951, i64 0, i32 0, i32 17
  %189 = load %struct.rtx_def** %rtl.i958, align 8, !tbaa !32
  %tobool.i959 = icmp eq %struct.rtx_def* %189, null
  br i1 %tobool.i959, label %cond.false.i960, label %init_one_libfunc.exit964

cond.false.i960:                                  ; preds = %init_one_libfunc.exit948
  tail call void @make_decl_rtl(%union.tree_node* %call2.i951, i8* null) #3
  %190 = load %struct.rtx_def** %rtl.i958, align 8, !tbaa !32
  br label %init_one_libfunc.exit964

init_one_libfunc.exit964:                         ; preds = %init_one_libfunc.exit948, %cond.false.i960
  %cond.i961 = phi %struct.rtx_def* [ %190, %cond.false.i960 ], [ %189, %init_one_libfunc.exit948 ]
  %arrayidx.i962 = getelementptr inbounds %struct.rtx_def* %cond.i961, i64 0, i32 1, i64 0
  %rtx.i963 = bitcast %union.rtunion_def* %arrayidx.i962 to %struct.rtx_def**
  %191 = load %struct.rtx_def** %rtx.i963, align 8, !tbaa !1
  store %struct.rtx_def* %191, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 7), align 8, !tbaa !1
  %call.i965 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([13 x i8]* @.str40, i64 0, i64 0)) #3
  %192 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i966 = tail call %union.tree_node* @build_function_type(%union.tree_node* %192, %union.tree_node* null) #3
  %call2.i967 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i965, %union.tree_node* %call1.i966) #3
  %artificial_flag.i968 = getelementptr inbounds %union.tree_node* %call2.i967, i64 0, i32 0, i32 5
  %193 = bitcast i48* %artificial_flag.i968 to i64*
  %bf.load.i969 = load i64* %193, align 8
  %bf.set7.i970 = or i64 %bf.load.i969, 4194560
  store i64 %bf.set7.i970, i64* %193, align 8
  %public_flag.i971 = getelementptr inbounds %union.tree_node* %call2.i967, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i972 = load i32* %public_flag.i971, align 8
  %bf.set10.i973 = or i32 %bf.load8.i972, 524288
  store i32 %bf.set10.i973, i32* %public_flag.i971, align 8
  %rtl.i974 = getelementptr inbounds %union.tree_node* %call2.i967, i64 0, i32 0, i32 17
  %194 = load %struct.rtx_def** %rtl.i974, align 8, !tbaa !32
  %tobool.i975 = icmp eq %struct.rtx_def* %194, null
  br i1 %tobool.i975, label %cond.false.i976, label %init_one_libfunc.exit980

cond.false.i976:                                  ; preds = %init_one_libfunc.exit964
  tail call void @make_decl_rtl(%union.tree_node* %call2.i967, i8* null) #3
  %195 = load %struct.rtx_def** %rtl.i974, align 8, !tbaa !32
  br label %init_one_libfunc.exit980

init_one_libfunc.exit980:                         ; preds = %init_one_libfunc.exit964, %cond.false.i976
  %cond.i977 = phi %struct.rtx_def* [ %195, %cond.false.i976 ], [ %194, %init_one_libfunc.exit964 ]
  %arrayidx.i978 = getelementptr inbounds %struct.rtx_def* %cond.i977, i64 0, i32 1, i64 0
  %rtx.i979 = bitcast %union.rtunion_def* %arrayidx.i978 to %struct.rtx_def**
  %196 = load %struct.rtx_def** %rtx.i979, align 8, !tbaa !1
  store %struct.rtx_def* %196, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 8), align 16, !tbaa !1
  %call.i981 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([13 x i8]* @.str41, i64 0, i64 0)) #3
  %197 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i982 = tail call %union.tree_node* @build_function_type(%union.tree_node* %197, %union.tree_node* null) #3
  %call2.i983 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i981, %union.tree_node* %call1.i982) #3
  %artificial_flag.i984 = getelementptr inbounds %union.tree_node* %call2.i983, i64 0, i32 0, i32 5
  %198 = bitcast i48* %artificial_flag.i984 to i64*
  %bf.load.i985 = load i64* %198, align 8
  %bf.set7.i986 = or i64 %bf.load.i985, 4194560
  store i64 %bf.set7.i986, i64* %198, align 8
  %public_flag.i987 = getelementptr inbounds %union.tree_node* %call2.i983, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i988 = load i32* %public_flag.i987, align 8
  %bf.set10.i989 = or i32 %bf.load8.i988, 524288
  store i32 %bf.set10.i989, i32* %public_flag.i987, align 8
  %rtl.i990 = getelementptr inbounds %union.tree_node* %call2.i983, i64 0, i32 0, i32 17
  %199 = load %struct.rtx_def** %rtl.i990, align 8, !tbaa !32
  %tobool.i991 = icmp eq %struct.rtx_def* %199, null
  br i1 %tobool.i991, label %cond.false.i992, label %init_one_libfunc.exit996

cond.false.i992:                                  ; preds = %init_one_libfunc.exit980
  tail call void @make_decl_rtl(%union.tree_node* %call2.i983, i8* null) #3
  %200 = load %struct.rtx_def** %rtl.i990, align 8, !tbaa !32
  br label %init_one_libfunc.exit996

init_one_libfunc.exit996:                         ; preds = %init_one_libfunc.exit980, %cond.false.i992
  %cond.i993 = phi %struct.rtx_def* [ %200, %cond.false.i992 ], [ %199, %init_one_libfunc.exit980 ]
  %arrayidx.i994 = getelementptr inbounds %struct.rtx_def* %cond.i993, i64 0, i32 1, i64 0
  %rtx.i995 = bitcast %union.rtunion_def* %arrayidx.i994 to %struct.rtx_def**
  %201 = load %struct.rtx_def** %rtx.i995, align 8, !tbaa !1
  store %struct.rtx_def* %201, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 9), align 8, !tbaa !1
  %call.i997 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([6 x i8]* @.str42, i64 0, i64 0)) #3
  %202 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i998 = tail call %union.tree_node* @build_function_type(%union.tree_node* %202, %union.tree_node* null) #3
  %call2.i999 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i997, %union.tree_node* %call1.i998) #3
  %artificial_flag.i1000 = getelementptr inbounds %union.tree_node* %call2.i999, i64 0, i32 0, i32 5
  %203 = bitcast i48* %artificial_flag.i1000 to i64*
  %bf.load.i1001 = load i64* %203, align 8
  %bf.set7.i1002 = or i64 %bf.load.i1001, 4194560
  store i64 %bf.set7.i1002, i64* %203, align 8
  %public_flag.i1003 = getelementptr inbounds %union.tree_node* %call2.i999, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i1004 = load i32* %public_flag.i1003, align 8
  %bf.set10.i1005 = or i32 %bf.load8.i1004, 524288
  store i32 %bf.set10.i1005, i32* %public_flag.i1003, align 8
  %rtl.i1006 = getelementptr inbounds %union.tree_node* %call2.i999, i64 0, i32 0, i32 17
  %204 = load %struct.rtx_def** %rtl.i1006, align 8, !tbaa !32
  %tobool.i1007 = icmp eq %struct.rtx_def* %204, null
  br i1 %tobool.i1007, label %cond.false.i1008, label %init_one_libfunc.exit1012

cond.false.i1008:                                 ; preds = %init_one_libfunc.exit996
  tail call void @make_decl_rtl(%union.tree_node* %call2.i999, i8* null) #3
  %205 = load %struct.rtx_def** %rtl.i1006, align 8, !tbaa !32
  br label %init_one_libfunc.exit1012

init_one_libfunc.exit1012:                        ; preds = %init_one_libfunc.exit996, %cond.false.i1008
  %cond.i1009 = phi %struct.rtx_def* [ %205, %cond.false.i1008 ], [ %204, %init_one_libfunc.exit996 ]
  %arrayidx.i1010 = getelementptr inbounds %struct.rtx_def* %cond.i1009, i64 0, i32 1, i64 0
  %rtx.i1011 = bitcast %union.rtunion_def* %arrayidx.i1010 to %struct.rtx_def**
  %206 = load %struct.rtx_def** %rtx.i1011, align 8, !tbaa !1
  store %struct.rtx_def* %206, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 10), align 16, !tbaa !1
  %call.i1013 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([7 x i8]* @.str43, i64 0, i64 0)) #3
  %207 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i1014 = tail call %union.tree_node* @build_function_type(%union.tree_node* %207, %union.tree_node* null) #3
  %call2.i1015 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i1013, %union.tree_node* %call1.i1014) #3
  %artificial_flag.i1016 = getelementptr inbounds %union.tree_node* %call2.i1015, i64 0, i32 0, i32 5
  %208 = bitcast i48* %artificial_flag.i1016 to i64*
  %bf.load.i1017 = load i64* %208, align 8
  %bf.set7.i1018 = or i64 %bf.load.i1017, 4194560
  store i64 %bf.set7.i1018, i64* %208, align 8
  %public_flag.i1019 = getelementptr inbounds %union.tree_node* %call2.i1015, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i1020 = load i32* %public_flag.i1019, align 8
  %bf.set10.i1021 = or i32 %bf.load8.i1020, 524288
  store i32 %bf.set10.i1021, i32* %public_flag.i1019, align 8
  %rtl.i1022 = getelementptr inbounds %union.tree_node* %call2.i1015, i64 0, i32 0, i32 17
  %209 = load %struct.rtx_def** %rtl.i1022, align 8, !tbaa !32
  %tobool.i1023 = icmp eq %struct.rtx_def* %209, null
  br i1 %tobool.i1023, label %cond.false.i1024, label %init_one_libfunc.exit1028

cond.false.i1024:                                 ; preds = %init_one_libfunc.exit1012
  tail call void @make_decl_rtl(%union.tree_node* %call2.i1015, i8* null) #3
  %210 = load %struct.rtx_def** %rtl.i1022, align 8, !tbaa !32
  br label %init_one_libfunc.exit1028

init_one_libfunc.exit1028:                        ; preds = %init_one_libfunc.exit1012, %cond.false.i1024
  %cond.i1025 = phi %struct.rtx_def* [ %210, %cond.false.i1024 ], [ %209, %init_one_libfunc.exit1012 ]
  %arrayidx.i1026 = getelementptr inbounds %struct.rtx_def* %cond.i1025, i64 0, i32 1, i64 0
  %rtx.i1027 = bitcast %union.rtunion_def* %arrayidx.i1026 to %struct.rtx_def**
  %211 = load %struct.rtx_def** %rtx.i1027, align 8, !tbaa !1
  store %struct.rtx_def* %211, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 11), align 8, !tbaa !1
  %call.i1029 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([8 x i8]* @.str44, i64 0, i64 0)) #3
  %212 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i1030 = tail call %union.tree_node* @build_function_type(%union.tree_node* %212, %union.tree_node* null) #3
  %call2.i1031 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i1029, %union.tree_node* %call1.i1030) #3
  %artificial_flag.i1032 = getelementptr inbounds %union.tree_node* %call2.i1031, i64 0, i32 0, i32 5
  %213 = bitcast i48* %artificial_flag.i1032 to i64*
  %bf.load.i1033 = load i64* %213, align 8
  %bf.set7.i1034 = or i64 %bf.load.i1033, 4194560
  store i64 %bf.set7.i1034, i64* %213, align 8
  %public_flag.i1035 = getelementptr inbounds %union.tree_node* %call2.i1031, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i1036 = load i32* %public_flag.i1035, align 8
  %bf.set10.i1037 = or i32 %bf.load8.i1036, 524288
  store i32 %bf.set10.i1037, i32* %public_flag.i1035, align 8
  %rtl.i1038 = getelementptr inbounds %union.tree_node* %call2.i1031, i64 0, i32 0, i32 17
  %214 = load %struct.rtx_def** %rtl.i1038, align 8, !tbaa !32
  %tobool.i1039 = icmp eq %struct.rtx_def* %214, null
  br i1 %tobool.i1039, label %cond.false.i1040, label %init_one_libfunc.exit1044

cond.false.i1040:                                 ; preds = %init_one_libfunc.exit1028
  tail call void @make_decl_rtl(%union.tree_node* %call2.i1031, i8* null) #3
  %215 = load %struct.rtx_def** %rtl.i1038, align 8, !tbaa !32
  br label %init_one_libfunc.exit1044

init_one_libfunc.exit1044:                        ; preds = %init_one_libfunc.exit1028, %cond.false.i1040
  %cond.i1041 = phi %struct.rtx_def* [ %215, %cond.false.i1040 ], [ %214, %init_one_libfunc.exit1028 ]
  %arrayidx.i1042 = getelementptr inbounds %struct.rtx_def* %cond.i1041, i64 0, i32 1, i64 0
  %rtx.i1043 = bitcast %union.rtunion_def* %arrayidx.i1042 to %struct.rtx_def**
  %216 = load %struct.rtx_def** %rtx.i1043, align 8, !tbaa !1
  store %struct.rtx_def* %216, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 12), align 16, !tbaa !1
  %call.i1045 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([6 x i8]* @.str45, i64 0, i64 0)) #3
  %217 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i1046 = tail call %union.tree_node* @build_function_type(%union.tree_node* %217, %union.tree_node* null) #3
  %call2.i1047 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i1045, %union.tree_node* %call1.i1046) #3
  %artificial_flag.i1048 = getelementptr inbounds %union.tree_node* %call2.i1047, i64 0, i32 0, i32 5
  %218 = bitcast i48* %artificial_flag.i1048 to i64*
  %bf.load.i1049 = load i64* %218, align 8
  %bf.set7.i1050 = or i64 %bf.load.i1049, 4194560
  store i64 %bf.set7.i1050, i64* %218, align 8
  %public_flag.i1051 = getelementptr inbounds %union.tree_node* %call2.i1047, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i1052 = load i32* %public_flag.i1051, align 8
  %bf.set10.i1053 = or i32 %bf.load8.i1052, 524288
  store i32 %bf.set10.i1053, i32* %public_flag.i1051, align 8
  %rtl.i1054 = getelementptr inbounds %union.tree_node* %call2.i1047, i64 0, i32 0, i32 17
  %219 = load %struct.rtx_def** %rtl.i1054, align 8, !tbaa !32
  %tobool.i1055 = icmp eq %struct.rtx_def* %219, null
  br i1 %tobool.i1055, label %cond.false.i1056, label %init_one_libfunc.exit1060

cond.false.i1056:                                 ; preds = %init_one_libfunc.exit1044
  tail call void @make_decl_rtl(%union.tree_node* %call2.i1047, i8* null) #3
  %220 = load %struct.rtx_def** %rtl.i1054, align 8, !tbaa !32
  br label %init_one_libfunc.exit1060

init_one_libfunc.exit1060:                        ; preds = %init_one_libfunc.exit1044, %cond.false.i1056
  %cond.i1057 = phi %struct.rtx_def* [ %220, %cond.false.i1056 ], [ %219, %init_one_libfunc.exit1044 ]
  %arrayidx.i1058 = getelementptr inbounds %struct.rtx_def* %cond.i1057, i64 0, i32 1, i64 0
  %rtx.i1059 = bitcast %union.rtunion_def* %arrayidx.i1058 to %struct.rtx_def**
  %221 = load %struct.rtx_def** %rtx.i1059, align 8, !tbaa !1
  store %struct.rtx_def* %221, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 13), align 8, !tbaa !1
  %call.i1061 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([7 x i8]* @.str46, i64 0, i64 0)) #3
  %222 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i1062 = tail call %union.tree_node* @build_function_type(%union.tree_node* %222, %union.tree_node* null) #3
  %call2.i1063 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i1061, %union.tree_node* %call1.i1062) #3
  %artificial_flag.i1064 = getelementptr inbounds %union.tree_node* %call2.i1063, i64 0, i32 0, i32 5
  %223 = bitcast i48* %artificial_flag.i1064 to i64*
  %bf.load.i1065 = load i64* %223, align 8
  %bf.set7.i1066 = or i64 %bf.load.i1065, 4194560
  store i64 %bf.set7.i1066, i64* %223, align 8
  %public_flag.i1067 = getelementptr inbounds %union.tree_node* %call2.i1063, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i1068 = load i32* %public_flag.i1067, align 8
  %bf.set10.i1069 = or i32 %bf.load8.i1068, 524288
  store i32 %bf.set10.i1069, i32* %public_flag.i1067, align 8
  %rtl.i1070 = getelementptr inbounds %union.tree_node* %call2.i1063, i64 0, i32 0, i32 17
  %224 = load %struct.rtx_def** %rtl.i1070, align 8, !tbaa !32
  %tobool.i1071 = icmp eq %struct.rtx_def* %224, null
  br i1 %tobool.i1071, label %cond.false.i1072, label %init_one_libfunc.exit1076

cond.false.i1072:                                 ; preds = %init_one_libfunc.exit1060
  tail call void @make_decl_rtl(%union.tree_node* %call2.i1063, i8* null) #3
  %225 = load %struct.rtx_def** %rtl.i1070, align 8, !tbaa !32
  br label %init_one_libfunc.exit1076

init_one_libfunc.exit1076:                        ; preds = %init_one_libfunc.exit1060, %cond.false.i1072
  %cond.i1073 = phi %struct.rtx_def* [ %225, %cond.false.i1072 ], [ %224, %init_one_libfunc.exit1060 ]
  %arrayidx.i1074 = getelementptr inbounds %struct.rtx_def* %cond.i1073, i64 0, i32 1, i64 0
  %rtx.i1075 = bitcast %union.rtunion_def* %arrayidx.i1074 to %struct.rtx_def**
  %226 = load %struct.rtx_def** %rtx.i1075, align 8, !tbaa !1
  store %struct.rtx_def* %226, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 14), align 16, !tbaa !1
  %call.i1077 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([11 x i8]* @.str47, i64 0, i64 0)) #3
  %227 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i1078 = tail call %union.tree_node* @build_function_type(%union.tree_node* %227, %union.tree_node* null) #3
  %call2.i1079 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i1077, %union.tree_node* %call1.i1078) #3
  %artificial_flag.i1080 = getelementptr inbounds %union.tree_node* %call2.i1079, i64 0, i32 0, i32 5
  %228 = bitcast i48* %artificial_flag.i1080 to i64*
  %bf.load.i1081 = load i64* %228, align 8
  %bf.set7.i1082 = or i64 %bf.load.i1081, 4194560
  store i64 %bf.set7.i1082, i64* %228, align 8
  %public_flag.i1083 = getelementptr inbounds %union.tree_node* %call2.i1079, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i1084 = load i32* %public_flag.i1083, align 8
  %bf.set10.i1085 = or i32 %bf.load8.i1084, 524288
  store i32 %bf.set10.i1085, i32* %public_flag.i1083, align 8
  %rtl.i1086 = getelementptr inbounds %union.tree_node* %call2.i1079, i64 0, i32 0, i32 17
  %229 = load %struct.rtx_def** %rtl.i1086, align 8, !tbaa !32
  %tobool.i1087 = icmp eq %struct.rtx_def* %229, null
  br i1 %tobool.i1087, label %cond.false.i1088, label %init_one_libfunc.exit1092

cond.false.i1088:                                 ; preds = %init_one_libfunc.exit1076
  tail call void @make_decl_rtl(%union.tree_node* %call2.i1079, i8* null) #3
  %230 = load %struct.rtx_def** %rtl.i1086, align 8, !tbaa !32
  br label %init_one_libfunc.exit1092

init_one_libfunc.exit1092:                        ; preds = %init_one_libfunc.exit1076, %cond.false.i1088
  %cond.i1089 = phi %struct.rtx_def* [ %230, %cond.false.i1088 ], [ %229, %init_one_libfunc.exit1076 ]
  %arrayidx.i1090 = getelementptr inbounds %struct.rtx_def* %cond.i1089, i64 0, i32 1, i64 0
  %rtx.i1091 = bitcast %union.rtunion_def* %arrayidx.i1090 to %struct.rtx_def**
  %231 = load %struct.rtx_def** %rtx.i1091, align 8, !tbaa !1
  store %struct.rtx_def* %231, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 15), align 8, !tbaa !1
  %call.i1093 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([7 x i8]* @.str48, i64 0, i64 0)) #3
  %232 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i1094 = tail call %union.tree_node* @build_function_type(%union.tree_node* %232, %union.tree_node* null) #3
  %call2.i1095 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i1093, %union.tree_node* %call1.i1094) #3
  %artificial_flag.i1096 = getelementptr inbounds %union.tree_node* %call2.i1095, i64 0, i32 0, i32 5
  %233 = bitcast i48* %artificial_flag.i1096 to i64*
  %bf.load.i1097 = load i64* %233, align 8
  %bf.set7.i1098 = or i64 %bf.load.i1097, 4194560
  store i64 %bf.set7.i1098, i64* %233, align 8
  %public_flag.i1099 = getelementptr inbounds %union.tree_node* %call2.i1095, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i1100 = load i32* %public_flag.i1099, align 8
  %bf.set10.i1101 = or i32 %bf.load8.i1100, 524288
  store i32 %bf.set10.i1101, i32* %public_flag.i1099, align 8
  %rtl.i1102 = getelementptr inbounds %union.tree_node* %call2.i1095, i64 0, i32 0, i32 17
  %234 = load %struct.rtx_def** %rtl.i1102, align 8, !tbaa !32
  %tobool.i1103 = icmp eq %struct.rtx_def* %234, null
  br i1 %tobool.i1103, label %cond.false.i1104, label %init_one_libfunc.exit1108

cond.false.i1104:                                 ; preds = %init_one_libfunc.exit1092
  tail call void @make_decl_rtl(%union.tree_node* %call2.i1095, i8* null) #3
  %235 = load %struct.rtx_def** %rtl.i1102, align 8, !tbaa !32
  br label %init_one_libfunc.exit1108

init_one_libfunc.exit1108:                        ; preds = %init_one_libfunc.exit1092, %cond.false.i1104
  %cond.i1105 = phi %struct.rtx_def* [ %235, %cond.false.i1104 ], [ %234, %init_one_libfunc.exit1092 ]
  %arrayidx.i1106 = getelementptr inbounds %struct.rtx_def* %cond.i1105, i64 0, i32 1, i64 0
  %rtx.i1107 = bitcast %union.rtunion_def* %arrayidx.i1106 to %struct.rtx_def**
  %236 = load %struct.rtx_def** %rtx.i1107, align 8, !tbaa !1
  store %struct.rtx_def* %236, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 16), align 16, !tbaa !1
  %call.i1109 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([6 x i8]* @.str49, i64 0, i64 0)) #3
  %237 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i1110 = tail call %union.tree_node* @build_function_type(%union.tree_node* %237, %union.tree_node* null) #3
  %call2.i1111 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i1109, %union.tree_node* %call1.i1110) #3
  %artificial_flag.i1112 = getelementptr inbounds %union.tree_node* %call2.i1111, i64 0, i32 0, i32 5
  %238 = bitcast i48* %artificial_flag.i1112 to i64*
  %bf.load.i1113 = load i64* %238, align 8
  %bf.set7.i1114 = or i64 %bf.load.i1113, 4194560
  store i64 %bf.set7.i1114, i64* %238, align 8
  %public_flag.i1115 = getelementptr inbounds %union.tree_node* %call2.i1111, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i1116 = load i32* %public_flag.i1115, align 8
  %bf.set10.i1117 = or i32 %bf.load8.i1116, 524288
  store i32 %bf.set10.i1117, i32* %public_flag.i1115, align 8
  %rtl.i1118 = getelementptr inbounds %union.tree_node* %call2.i1111, i64 0, i32 0, i32 17
  %239 = load %struct.rtx_def** %rtl.i1118, align 8, !tbaa !32
  %tobool.i1119 = icmp eq %struct.rtx_def* %239, null
  br i1 %tobool.i1119, label %cond.false.i1120, label %init_one_libfunc.exit1124

cond.false.i1120:                                 ; preds = %init_one_libfunc.exit1108
  tail call void @make_decl_rtl(%union.tree_node* %call2.i1111, i8* null) #3
  %240 = load %struct.rtx_def** %rtl.i1118, align 8, !tbaa !32
  br label %init_one_libfunc.exit1124

init_one_libfunc.exit1124:                        ; preds = %init_one_libfunc.exit1108, %cond.false.i1120
  %cond.i1121 = phi %struct.rtx_def* [ %240, %cond.false.i1120 ], [ %239, %init_one_libfunc.exit1108 ]
  %arrayidx.i1122 = getelementptr inbounds %struct.rtx_def* %cond.i1121, i64 0, i32 1, i64 0
  %rtx.i1123 = bitcast %union.rtunion_def* %arrayidx.i1122 to %struct.rtx_def**
  %241 = load %struct.rtx_def** %rtx.i1123, align 8, !tbaa !1
  store %struct.rtx_def* %241, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 17), align 8, !tbaa !1
  %call.i1125 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([15 x i8]* @.str50, i64 0, i64 0)) #3
  %242 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i1126 = tail call %union.tree_node* @build_function_type(%union.tree_node* %242, %union.tree_node* null) #3
  %call2.i1127 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i1125, %union.tree_node* %call1.i1126) #3
  %artificial_flag.i1128 = getelementptr inbounds %union.tree_node* %call2.i1127, i64 0, i32 0, i32 5
  %243 = bitcast i48* %artificial_flag.i1128 to i64*
  %bf.load.i1129 = load i64* %243, align 8
  %bf.set7.i1130 = or i64 %bf.load.i1129, 4194560
  store i64 %bf.set7.i1130, i64* %243, align 8
  %public_flag.i1131 = getelementptr inbounds %union.tree_node* %call2.i1127, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i1132 = load i32* %public_flag.i1131, align 8
  %bf.set10.i1133 = or i32 %bf.load8.i1132, 524288
  store i32 %bf.set10.i1133, i32* %public_flag.i1131, align 8
  %rtl.i1134 = getelementptr inbounds %union.tree_node* %call2.i1127, i64 0, i32 0, i32 17
  %244 = load %struct.rtx_def** %rtl.i1134, align 8, !tbaa !32
  %tobool.i1135 = icmp eq %struct.rtx_def* %244, null
  br i1 %tobool.i1135, label %cond.false.i1136, label %init_one_libfunc.exit1140

cond.false.i1136:                                 ; preds = %init_one_libfunc.exit1124
  tail call void @make_decl_rtl(%union.tree_node* %call2.i1127, i8* null) #3
  %245 = load %struct.rtx_def** %rtl.i1134, align 8, !tbaa !32
  br label %init_one_libfunc.exit1140

init_one_libfunc.exit1140:                        ; preds = %init_one_libfunc.exit1124, %cond.false.i1136
  %cond.i1137 = phi %struct.rtx_def* [ %245, %cond.false.i1136 ], [ %244, %init_one_libfunc.exit1124 ]
  %arrayidx.i1138 = getelementptr inbounds %struct.rtx_def* %cond.i1137, i64 0, i32 1, i64 0
  %rtx.i1139 = bitcast %union.rtunion_def* %arrayidx.i1138 to %struct.rtx_def**
  %246 = load %struct.rtx_def** %rtx.i1139, align 8, !tbaa !1
  store %struct.rtx_def* %246, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 18), align 16, !tbaa !1
  %call.i1141 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([17 x i8]* @.str51, i64 0, i64 0)) #3
  %247 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i1142 = tail call %union.tree_node* @build_function_type(%union.tree_node* %247, %union.tree_node* null) #3
  %call2.i1143 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i1141, %union.tree_node* %call1.i1142) #3
  %artificial_flag.i1144 = getelementptr inbounds %union.tree_node* %call2.i1143, i64 0, i32 0, i32 5
  %248 = bitcast i48* %artificial_flag.i1144 to i64*
  %bf.load.i1145 = load i64* %248, align 8
  %bf.set7.i1146 = or i64 %bf.load.i1145, 4194560
  store i64 %bf.set7.i1146, i64* %248, align 8
  %public_flag.i1147 = getelementptr inbounds %union.tree_node* %call2.i1143, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i1148 = load i32* %public_flag.i1147, align 8
  %bf.set10.i1149 = or i32 %bf.load8.i1148, 524288
  store i32 %bf.set10.i1149, i32* %public_flag.i1147, align 8
  %rtl.i1150 = getelementptr inbounds %union.tree_node* %call2.i1143, i64 0, i32 0, i32 17
  %249 = load %struct.rtx_def** %rtl.i1150, align 8, !tbaa !32
  %tobool.i1151 = icmp eq %struct.rtx_def* %249, null
  br i1 %tobool.i1151, label %cond.false.i1152, label %init_one_libfunc.exit1156

cond.false.i1152:                                 ; preds = %init_one_libfunc.exit1140
  tail call void @make_decl_rtl(%union.tree_node* %call2.i1143, i8* null) #3
  %250 = load %struct.rtx_def** %rtl.i1150, align 8, !tbaa !32
  br label %init_one_libfunc.exit1156

init_one_libfunc.exit1156:                        ; preds = %init_one_libfunc.exit1140, %cond.false.i1152
  %cond.i1153 = phi %struct.rtx_def* [ %250, %cond.false.i1152 ], [ %249, %init_one_libfunc.exit1140 ]
  %arrayidx.i1154 = getelementptr inbounds %struct.rtx_def* %cond.i1153, i64 0, i32 1, i64 0
  %rtx.i1155 = bitcast %union.rtunion_def* %arrayidx.i1154 to %struct.rtx_def**
  %251 = load %struct.rtx_def** %rtx.i1155, align 8, !tbaa !1
  store %struct.rtx_def* %251, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 20), align 16, !tbaa !1
  %call.i1157 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([18 x i8]* @.str52, i64 0, i64 0)) #3
  %252 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i1158 = tail call %union.tree_node* @build_function_type(%union.tree_node* %252, %union.tree_node* null) #3
  %call2.i1159 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i1157, %union.tree_node* %call1.i1158) #3
  %artificial_flag.i1160 = getelementptr inbounds %union.tree_node* %call2.i1159, i64 0, i32 0, i32 5
  %253 = bitcast i48* %artificial_flag.i1160 to i64*
  %bf.load.i1161 = load i64* %253, align 8
  %bf.set7.i1162 = or i64 %bf.load.i1161, 4194560
  store i64 %bf.set7.i1162, i64* %253, align 8
  %public_flag.i1163 = getelementptr inbounds %union.tree_node* %call2.i1159, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i1164 = load i32* %public_flag.i1163, align 8
  %bf.set10.i1165 = or i32 %bf.load8.i1164, 524288
  store i32 %bf.set10.i1165, i32* %public_flag.i1163, align 8
  %rtl.i1166 = getelementptr inbounds %union.tree_node* %call2.i1159, i64 0, i32 0, i32 17
  %254 = load %struct.rtx_def** %rtl.i1166, align 8, !tbaa !32
  %tobool.i1167 = icmp eq %struct.rtx_def* %254, null
  br i1 %tobool.i1167, label %cond.false.i1168, label %init_one_libfunc.exit1172

cond.false.i1168:                                 ; preds = %init_one_libfunc.exit1156
  tail call void @make_decl_rtl(%union.tree_node* %call2.i1159, i8* null) #3
  %255 = load %struct.rtx_def** %rtl.i1166, align 8, !tbaa !32
  br label %init_one_libfunc.exit1172

init_one_libfunc.exit1172:                        ; preds = %init_one_libfunc.exit1156, %cond.false.i1168
  %cond.i1169 = phi %struct.rtx_def* [ %255, %cond.false.i1168 ], [ %254, %init_one_libfunc.exit1156 ]
  %arrayidx.i1170 = getelementptr inbounds %struct.rtx_def* %cond.i1169, i64 0, i32 1, i64 0
  %rtx.i1171 = bitcast %union.rtunion_def* %arrayidx.i1170 to %struct.rtx_def**
  %256 = load %struct.rtx_def** %rtx.i1171, align 8, !tbaa !1
  store %struct.rtx_def* %256, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 21), align 8, !tbaa !1
  %call.i1173 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([22 x i8]* @.str53, i64 0, i64 0)) #3
  %257 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i1174 = tail call %union.tree_node* @build_function_type(%union.tree_node* %257, %union.tree_node* null) #3
  %call2.i1175 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i1173, %union.tree_node* %call1.i1174) #3
  %artificial_flag.i1176 = getelementptr inbounds %union.tree_node* %call2.i1175, i64 0, i32 0, i32 5
  %258 = bitcast i48* %artificial_flag.i1176 to i64*
  %bf.load.i1177 = load i64* %258, align 8
  %bf.set7.i1178 = or i64 %bf.load.i1177, 4194560
  store i64 %bf.set7.i1178, i64* %258, align 8
  %public_flag.i1179 = getelementptr inbounds %union.tree_node* %call2.i1175, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i1180 = load i32* %public_flag.i1179, align 8
  %bf.set10.i1181 = or i32 %bf.load8.i1180, 524288
  store i32 %bf.set10.i1181, i32* %public_flag.i1179, align 8
  %rtl.i1182 = getelementptr inbounds %union.tree_node* %call2.i1175, i64 0, i32 0, i32 17
  %259 = load %struct.rtx_def** %rtl.i1182, align 8, !tbaa !32
  %tobool.i1183 = icmp eq %struct.rtx_def* %259, null
  br i1 %tobool.i1183, label %cond.false.i1184, label %init_one_libfunc.exit1188

cond.false.i1184:                                 ; preds = %init_one_libfunc.exit1172
  tail call void @make_decl_rtl(%union.tree_node* %call2.i1175, i8* null) #3
  %260 = load %struct.rtx_def** %rtl.i1182, align 8, !tbaa !32
  br label %init_one_libfunc.exit1188

init_one_libfunc.exit1188:                        ; preds = %init_one_libfunc.exit1172, %cond.false.i1184
  %cond.i1185 = phi %struct.rtx_def* [ %260, %cond.false.i1184 ], [ %259, %init_one_libfunc.exit1172 ]
  %arrayidx.i1186 = getelementptr inbounds %struct.rtx_def* %cond.i1185, i64 0, i32 1, i64 0
  %rtx.i1187 = bitcast %union.rtunion_def* %arrayidx.i1186 to %struct.rtx_def**
  %261 = load %struct.rtx_def** %rtx.i1187, align 8, !tbaa !1
  store %struct.rtx_def* %261, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 22), align 16, !tbaa !1
  %call.i1189 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([24 x i8]* @.str54, i64 0, i64 0)) #3
  %262 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i1190 = tail call %union.tree_node* @build_function_type(%union.tree_node* %262, %union.tree_node* null) #3
  %call2.i1191 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i1189, %union.tree_node* %call1.i1190) #3
  %artificial_flag.i1192 = getelementptr inbounds %union.tree_node* %call2.i1191, i64 0, i32 0, i32 5
  %263 = bitcast i48* %artificial_flag.i1192 to i64*
  %bf.load.i1193 = load i64* %263, align 8
  %bf.set7.i1194 = or i64 %bf.load.i1193, 4194560
  store i64 %bf.set7.i1194, i64* %263, align 8
  %public_flag.i1195 = getelementptr inbounds %union.tree_node* %call2.i1191, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i1196 = load i32* %public_flag.i1195, align 8
  %bf.set10.i1197 = or i32 %bf.load8.i1196, 524288
  store i32 %bf.set10.i1197, i32* %public_flag.i1195, align 8
  %rtl.i1198 = getelementptr inbounds %union.tree_node* %call2.i1191, i64 0, i32 0, i32 17
  %264 = load %struct.rtx_def** %rtl.i1198, align 8, !tbaa !32
  %tobool.i1199 = icmp eq %struct.rtx_def* %264, null
  br i1 %tobool.i1199, label %cond.false.i1200, label %init_one_libfunc.exit1204

cond.false.i1200:                                 ; preds = %init_one_libfunc.exit1188
  tail call void @make_decl_rtl(%union.tree_node* %call2.i1191, i8* null) #3
  %265 = load %struct.rtx_def** %rtl.i1198, align 8, !tbaa !32
  br label %init_one_libfunc.exit1204

init_one_libfunc.exit1204:                        ; preds = %init_one_libfunc.exit1188, %cond.false.i1200
  %cond.i1201 = phi %struct.rtx_def* [ %265, %cond.false.i1200 ], [ %264, %init_one_libfunc.exit1188 ]
  %arrayidx.i1202 = getelementptr inbounds %struct.rtx_def* %cond.i1201, i64 0, i32 1, i64 0
  %rtx.i1203 = bitcast %union.rtunion_def* %arrayidx.i1202 to %struct.rtx_def**
  %266 = load %struct.rtx_def** %rtx.i1203, align 8, !tbaa !1
  store %struct.rtx_def* %266, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 23), align 8, !tbaa !1
  %call.i1205 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([8 x i8]* @.str55, i64 0, i64 0)) #3
  %267 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i1206 = tail call %union.tree_node* @build_function_type(%union.tree_node* %267, %union.tree_node* null) #3
  %call2.i1207 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i1205, %union.tree_node* %call1.i1206) #3
  %artificial_flag.i1208 = getelementptr inbounds %union.tree_node* %call2.i1207, i64 0, i32 0, i32 5
  %268 = bitcast i48* %artificial_flag.i1208 to i64*
  %bf.load.i1209 = load i64* %268, align 8
  %bf.set7.i1210 = or i64 %bf.load.i1209, 4194560
  store i64 %bf.set7.i1210, i64* %268, align 8
  %public_flag.i1211 = getelementptr inbounds %union.tree_node* %call2.i1207, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i1212 = load i32* %public_flag.i1211, align 8
  %bf.set10.i1213 = or i32 %bf.load8.i1212, 524288
  store i32 %bf.set10.i1213, i32* %public_flag.i1211, align 8
  %rtl.i1214 = getelementptr inbounds %union.tree_node* %call2.i1207, i64 0, i32 0, i32 17
  %269 = load %struct.rtx_def** %rtl.i1214, align 8, !tbaa !32
  %tobool.i1215 = icmp eq %struct.rtx_def* %269, null
  br i1 %tobool.i1215, label %cond.false.i1216, label %init_one_libfunc.exit1220

cond.false.i1216:                                 ; preds = %init_one_libfunc.exit1204
  tail call void @make_decl_rtl(%union.tree_node* %call2.i1207, i8* null) #3
  %270 = load %struct.rtx_def** %rtl.i1214, align 8, !tbaa !32
  br label %init_one_libfunc.exit1220

init_one_libfunc.exit1220:                        ; preds = %init_one_libfunc.exit1204, %cond.false.i1216
  %cond.i1217 = phi %struct.rtx_def* [ %270, %cond.false.i1216 ], [ %269, %init_one_libfunc.exit1204 ]
  %arrayidx.i1218 = getelementptr inbounds %struct.rtx_def* %cond.i1217, i64 0, i32 1, i64 0
  %rtx.i1219 = bitcast %union.rtunion_def* %arrayidx.i1218 to %struct.rtx_def**
  %271 = load %struct.rtx_def** %rtx.i1219, align 8, !tbaa !1
  store %struct.rtx_def* %271, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 24), align 16, !tbaa !1
  %call.i1221 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([8 x i8]* @.str56, i64 0, i64 0)) #3
  %272 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i1222 = tail call %union.tree_node* @build_function_type(%union.tree_node* %272, %union.tree_node* null) #3
  %call2.i1223 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i1221, %union.tree_node* %call1.i1222) #3
  %artificial_flag.i1224 = getelementptr inbounds %union.tree_node* %call2.i1223, i64 0, i32 0, i32 5
  %273 = bitcast i48* %artificial_flag.i1224 to i64*
  %bf.load.i1225 = load i64* %273, align 8
  %bf.set7.i1226 = or i64 %bf.load.i1225, 4194560
  store i64 %bf.set7.i1226, i64* %273, align 8
  %public_flag.i1227 = getelementptr inbounds %union.tree_node* %call2.i1223, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i1228 = load i32* %public_flag.i1227, align 8
  %bf.set10.i1229 = or i32 %bf.load8.i1228, 524288
  store i32 %bf.set10.i1229, i32* %public_flag.i1227, align 8
  %rtl.i1230 = getelementptr inbounds %union.tree_node* %call2.i1223, i64 0, i32 0, i32 17
  %274 = load %struct.rtx_def** %rtl.i1230, align 8, !tbaa !32
  %tobool.i1231 = icmp eq %struct.rtx_def* %274, null
  br i1 %tobool.i1231, label %cond.false.i1232, label %init_one_libfunc.exit1236

cond.false.i1232:                                 ; preds = %init_one_libfunc.exit1220
  tail call void @make_decl_rtl(%union.tree_node* %call2.i1223, i8* null) #3
  %275 = load %struct.rtx_def** %rtl.i1230, align 8, !tbaa !32
  br label %init_one_libfunc.exit1236

init_one_libfunc.exit1236:                        ; preds = %init_one_libfunc.exit1220, %cond.false.i1232
  %cond.i1233 = phi %struct.rtx_def* [ %275, %cond.false.i1232 ], [ %274, %init_one_libfunc.exit1220 ]
  %arrayidx.i1234 = getelementptr inbounds %struct.rtx_def* %cond.i1233, i64 0, i32 1, i64 0
  %rtx.i1235 = bitcast %union.rtunion_def* %arrayidx.i1234 to %struct.rtx_def**
  %276 = load %struct.rtx_def** %rtx.i1235, align 8, !tbaa !1
  store %struct.rtx_def* %276, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 25), align 8, !tbaa !1
  %call.i1237 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([8 x i8]* @.str57, i64 0, i64 0)) #3
  %277 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i1238 = tail call %union.tree_node* @build_function_type(%union.tree_node* %277, %union.tree_node* null) #3
  %call2.i1239 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i1237, %union.tree_node* %call1.i1238) #3
  %artificial_flag.i1240 = getelementptr inbounds %union.tree_node* %call2.i1239, i64 0, i32 0, i32 5
  %278 = bitcast i48* %artificial_flag.i1240 to i64*
  %bf.load.i1241 = load i64* %278, align 8
  %bf.set7.i1242 = or i64 %bf.load.i1241, 4194560
  store i64 %bf.set7.i1242, i64* %278, align 8
  %public_flag.i1243 = getelementptr inbounds %union.tree_node* %call2.i1239, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i1244 = load i32* %public_flag.i1243, align 8
  %bf.set10.i1245 = or i32 %bf.load8.i1244, 524288
  store i32 %bf.set10.i1245, i32* %public_flag.i1243, align 8
  %rtl.i1246 = getelementptr inbounds %union.tree_node* %call2.i1239, i64 0, i32 0, i32 17
  %279 = load %struct.rtx_def** %rtl.i1246, align 8, !tbaa !32
  %tobool.i1247 = icmp eq %struct.rtx_def* %279, null
  br i1 %tobool.i1247, label %cond.false.i1248, label %init_one_libfunc.exit1252

cond.false.i1248:                                 ; preds = %init_one_libfunc.exit1236
  tail call void @make_decl_rtl(%union.tree_node* %call2.i1239, i8* null) #3
  %280 = load %struct.rtx_def** %rtl.i1246, align 8, !tbaa !32
  br label %init_one_libfunc.exit1252

init_one_libfunc.exit1252:                        ; preds = %init_one_libfunc.exit1236, %cond.false.i1248
  %cond.i1249 = phi %struct.rtx_def* [ %280, %cond.false.i1248 ], [ %279, %init_one_libfunc.exit1236 ]
  %arrayidx.i1250 = getelementptr inbounds %struct.rtx_def* %cond.i1249, i64 0, i32 1, i64 0
  %rtx.i1251 = bitcast %union.rtunion_def* %arrayidx.i1250 to %struct.rtx_def**
  %281 = load %struct.rtx_def** %rtx.i1251, align 8, !tbaa !1
  store %struct.rtx_def* %281, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 26), align 16, !tbaa !1
  %call.i1253 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([8 x i8]* @.str58, i64 0, i64 0)) #3
  %282 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i1254 = tail call %union.tree_node* @build_function_type(%union.tree_node* %282, %union.tree_node* null) #3
  %call2.i1255 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i1253, %union.tree_node* %call1.i1254) #3
  %artificial_flag.i1256 = getelementptr inbounds %union.tree_node* %call2.i1255, i64 0, i32 0, i32 5
  %283 = bitcast i48* %artificial_flag.i1256 to i64*
  %bf.load.i1257 = load i64* %283, align 8
  %bf.set7.i1258 = or i64 %bf.load.i1257, 4194560
  store i64 %bf.set7.i1258, i64* %283, align 8
  %public_flag.i1259 = getelementptr inbounds %union.tree_node* %call2.i1255, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i1260 = load i32* %public_flag.i1259, align 8
  %bf.set10.i1261 = or i32 %bf.load8.i1260, 524288
  store i32 %bf.set10.i1261, i32* %public_flag.i1259, align 8
  %rtl.i1262 = getelementptr inbounds %union.tree_node* %call2.i1255, i64 0, i32 0, i32 17
  %284 = load %struct.rtx_def** %rtl.i1262, align 8, !tbaa !32
  %tobool.i1263 = icmp eq %struct.rtx_def* %284, null
  br i1 %tobool.i1263, label %cond.false.i1264, label %init_one_libfunc.exit1268

cond.false.i1264:                                 ; preds = %init_one_libfunc.exit1252
  tail call void @make_decl_rtl(%union.tree_node* %call2.i1255, i8* null) #3
  %285 = load %struct.rtx_def** %rtl.i1262, align 8, !tbaa !32
  br label %init_one_libfunc.exit1268

init_one_libfunc.exit1268:                        ; preds = %init_one_libfunc.exit1252, %cond.false.i1264
  %cond.i1265 = phi %struct.rtx_def* [ %285, %cond.false.i1264 ], [ %284, %init_one_libfunc.exit1252 ]
  %arrayidx.i1266 = getelementptr inbounds %struct.rtx_def* %cond.i1265, i64 0, i32 1, i64 0
  %rtx.i1267 = bitcast %union.rtunion_def* %arrayidx.i1266 to %struct.rtx_def**
  %286 = load %struct.rtx_def** %rtx.i1267, align 8, !tbaa !1
  store %struct.rtx_def* %286, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 27), align 8, !tbaa !1
  %call.i1269 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([8 x i8]* @.str59, i64 0, i64 0)) #3
  %287 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i1270 = tail call %union.tree_node* @build_function_type(%union.tree_node* %287, %union.tree_node* null) #3
  %call2.i1271 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i1269, %union.tree_node* %call1.i1270) #3
  %artificial_flag.i1272 = getelementptr inbounds %union.tree_node* %call2.i1271, i64 0, i32 0, i32 5
  %288 = bitcast i48* %artificial_flag.i1272 to i64*
  %bf.load.i1273 = load i64* %288, align 8
  %bf.set7.i1274 = or i64 %bf.load.i1273, 4194560
  store i64 %bf.set7.i1274, i64* %288, align 8
  %public_flag.i1275 = getelementptr inbounds %union.tree_node* %call2.i1271, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i1276 = load i32* %public_flag.i1275, align 8
  %bf.set10.i1277 = or i32 %bf.load8.i1276, 524288
  store i32 %bf.set10.i1277, i32* %public_flag.i1275, align 8
  %rtl.i1278 = getelementptr inbounds %union.tree_node* %call2.i1271, i64 0, i32 0, i32 17
  %289 = load %struct.rtx_def** %rtl.i1278, align 8, !tbaa !32
  %tobool.i1279 = icmp eq %struct.rtx_def* %289, null
  br i1 %tobool.i1279, label %cond.false.i1280, label %init_one_libfunc.exit1284

cond.false.i1280:                                 ; preds = %init_one_libfunc.exit1268
  tail call void @make_decl_rtl(%union.tree_node* %call2.i1271, i8* null) #3
  %290 = load %struct.rtx_def** %rtl.i1278, align 8, !tbaa !32
  br label %init_one_libfunc.exit1284

init_one_libfunc.exit1284:                        ; preds = %init_one_libfunc.exit1268, %cond.false.i1280
  %cond.i1281 = phi %struct.rtx_def* [ %290, %cond.false.i1280 ], [ %289, %init_one_libfunc.exit1268 ]
  %arrayidx.i1282 = getelementptr inbounds %struct.rtx_def* %cond.i1281, i64 0, i32 1, i64 0
  %rtx.i1283 = bitcast %union.rtunion_def* %arrayidx.i1282 to %struct.rtx_def**
  %291 = load %struct.rtx_def** %rtx.i1283, align 8, !tbaa !1
  store %struct.rtx_def* %291, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 28), align 16, !tbaa !1
  %call.i1285 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([8 x i8]* @.str60, i64 0, i64 0)) #3
  %292 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i1286 = tail call %union.tree_node* @build_function_type(%union.tree_node* %292, %union.tree_node* null) #3
  %call2.i1287 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i1285, %union.tree_node* %call1.i1286) #3
  %artificial_flag.i1288 = getelementptr inbounds %union.tree_node* %call2.i1287, i64 0, i32 0, i32 5
  %293 = bitcast i48* %artificial_flag.i1288 to i64*
  %bf.load.i1289 = load i64* %293, align 8
  %bf.set7.i1290 = or i64 %bf.load.i1289, 4194560
  store i64 %bf.set7.i1290, i64* %293, align 8
  %public_flag.i1291 = getelementptr inbounds %union.tree_node* %call2.i1287, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i1292 = load i32* %public_flag.i1291, align 8
  %bf.set10.i1293 = or i32 %bf.load8.i1292, 524288
  store i32 %bf.set10.i1293, i32* %public_flag.i1291, align 8
  %rtl.i1294 = getelementptr inbounds %union.tree_node* %call2.i1287, i64 0, i32 0, i32 17
  %294 = load %struct.rtx_def** %rtl.i1294, align 8, !tbaa !32
  %tobool.i1295 = icmp eq %struct.rtx_def* %294, null
  br i1 %tobool.i1295, label %cond.false.i1296, label %init_one_libfunc.exit1300

cond.false.i1296:                                 ; preds = %init_one_libfunc.exit1284
  tail call void @make_decl_rtl(%union.tree_node* %call2.i1287, i8* null) #3
  %295 = load %struct.rtx_def** %rtl.i1294, align 8, !tbaa !32
  br label %init_one_libfunc.exit1300

init_one_libfunc.exit1300:                        ; preds = %init_one_libfunc.exit1284, %cond.false.i1296
  %cond.i1297 = phi %struct.rtx_def* [ %295, %cond.false.i1296 ], [ %294, %init_one_libfunc.exit1284 ]
  %arrayidx.i1298 = getelementptr inbounds %struct.rtx_def* %cond.i1297, i64 0, i32 1, i64 0
  %rtx.i1299 = bitcast %union.rtunion_def* %arrayidx.i1298 to %struct.rtx_def**
  %296 = load %struct.rtx_def** %rtx.i1299, align 8, !tbaa !1
  store %struct.rtx_def* %296, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 29), align 8, !tbaa !1
  %call.i1301 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([11 x i8]* @.str61, i64 0, i64 0)) #3
  %297 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i1302 = tail call %union.tree_node* @build_function_type(%union.tree_node* %297, %union.tree_node* null) #3
  %call2.i1303 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i1301, %union.tree_node* %call1.i1302) #3
  %artificial_flag.i1304 = getelementptr inbounds %union.tree_node* %call2.i1303, i64 0, i32 0, i32 5
  %298 = bitcast i48* %artificial_flag.i1304 to i64*
  %bf.load.i1305 = load i64* %298, align 8
  %bf.set7.i1306 = or i64 %bf.load.i1305, 4194560
  store i64 %bf.set7.i1306, i64* %298, align 8
  %public_flag.i1307 = getelementptr inbounds %union.tree_node* %call2.i1303, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i1308 = load i32* %public_flag.i1307, align 8
  %bf.set10.i1309 = or i32 %bf.load8.i1308, 524288
  store i32 %bf.set10.i1309, i32* %public_flag.i1307, align 8
  %rtl.i1310 = getelementptr inbounds %union.tree_node* %call2.i1303, i64 0, i32 0, i32 17
  %299 = load %struct.rtx_def** %rtl.i1310, align 8, !tbaa !32
  %tobool.i1311 = icmp eq %struct.rtx_def* %299, null
  br i1 %tobool.i1311, label %cond.false.i1312, label %init_one_libfunc.exit1316

cond.false.i1312:                                 ; preds = %init_one_libfunc.exit1300
  tail call void @make_decl_rtl(%union.tree_node* %call2.i1303, i8* null) #3
  %300 = load %struct.rtx_def** %rtl.i1310, align 8, !tbaa !32
  br label %init_one_libfunc.exit1316

init_one_libfunc.exit1316:                        ; preds = %init_one_libfunc.exit1300, %cond.false.i1312
  %cond.i1313 = phi %struct.rtx_def* [ %300, %cond.false.i1312 ], [ %299, %init_one_libfunc.exit1300 ]
  %arrayidx.i1314 = getelementptr inbounds %struct.rtx_def* %cond.i1313, i64 0, i32 1, i64 0
  %rtx.i1315 = bitcast %union.rtunion_def* %arrayidx.i1314 to %struct.rtx_def**
  %301 = load %struct.rtx_def** %rtx.i1315, align 8, !tbaa !1
  store %struct.rtx_def* %301, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 30), align 16, !tbaa !1
  %call.i1317 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([8 x i8]* @.str62, i64 0, i64 0)) #3
  %302 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i1318 = tail call %union.tree_node* @build_function_type(%union.tree_node* %302, %union.tree_node* null) #3
  %call2.i1319 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i1317, %union.tree_node* %call1.i1318) #3
  %artificial_flag.i1320 = getelementptr inbounds %union.tree_node* %call2.i1319, i64 0, i32 0, i32 5
  %303 = bitcast i48* %artificial_flag.i1320 to i64*
  %bf.load.i1321 = load i64* %303, align 8
  %bf.set7.i1322 = or i64 %bf.load.i1321, 4194560
  store i64 %bf.set7.i1322, i64* %303, align 8
  %public_flag.i1323 = getelementptr inbounds %union.tree_node* %call2.i1319, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i1324 = load i32* %public_flag.i1323, align 8
  %bf.set10.i1325 = or i32 %bf.load8.i1324, 524288
  store i32 %bf.set10.i1325, i32* %public_flag.i1323, align 8
  %rtl.i1326 = getelementptr inbounds %union.tree_node* %call2.i1319, i64 0, i32 0, i32 17
  %304 = load %struct.rtx_def** %rtl.i1326, align 8, !tbaa !32
  %tobool.i1327 = icmp eq %struct.rtx_def* %304, null
  br i1 %tobool.i1327, label %cond.false.i1328, label %init_one_libfunc.exit1332

cond.false.i1328:                                 ; preds = %init_one_libfunc.exit1316
  tail call void @make_decl_rtl(%union.tree_node* %call2.i1319, i8* null) #3
  %305 = load %struct.rtx_def** %rtl.i1326, align 8, !tbaa !32
  br label %init_one_libfunc.exit1332

init_one_libfunc.exit1332:                        ; preds = %init_one_libfunc.exit1316, %cond.false.i1328
  %cond.i1329 = phi %struct.rtx_def* [ %305, %cond.false.i1328 ], [ %304, %init_one_libfunc.exit1316 ]
  %arrayidx.i1330 = getelementptr inbounds %struct.rtx_def* %cond.i1329, i64 0, i32 1, i64 0
  %rtx.i1331 = bitcast %union.rtunion_def* %arrayidx.i1330 to %struct.rtx_def**
  %306 = load %struct.rtx_def** %rtx.i1331, align 8, !tbaa !1
  store %struct.rtx_def* %306, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 31), align 8, !tbaa !1
  %call.i1333 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([8 x i8]* @.str63, i64 0, i64 0)) #3
  %307 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i1334 = tail call %union.tree_node* @build_function_type(%union.tree_node* %307, %union.tree_node* null) #3
  %call2.i1335 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i1333, %union.tree_node* %call1.i1334) #3
  %artificial_flag.i1336 = getelementptr inbounds %union.tree_node* %call2.i1335, i64 0, i32 0, i32 5
  %308 = bitcast i48* %artificial_flag.i1336 to i64*
  %bf.load.i1337 = load i64* %308, align 8
  %bf.set7.i1338 = or i64 %bf.load.i1337, 4194560
  store i64 %bf.set7.i1338, i64* %308, align 8
  %public_flag.i1339 = getelementptr inbounds %union.tree_node* %call2.i1335, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i1340 = load i32* %public_flag.i1339, align 8
  %bf.set10.i1341 = or i32 %bf.load8.i1340, 524288
  store i32 %bf.set10.i1341, i32* %public_flag.i1339, align 8
  %rtl.i1342 = getelementptr inbounds %union.tree_node* %call2.i1335, i64 0, i32 0, i32 17
  %309 = load %struct.rtx_def** %rtl.i1342, align 8, !tbaa !32
  %tobool.i1343 = icmp eq %struct.rtx_def* %309, null
  br i1 %tobool.i1343, label %cond.false.i1344, label %init_one_libfunc.exit1348

cond.false.i1344:                                 ; preds = %init_one_libfunc.exit1332
  tail call void @make_decl_rtl(%union.tree_node* %call2.i1335, i8* null) #3
  %310 = load %struct.rtx_def** %rtl.i1342, align 8, !tbaa !32
  br label %init_one_libfunc.exit1348

init_one_libfunc.exit1348:                        ; preds = %init_one_libfunc.exit1332, %cond.false.i1344
  %cond.i1345 = phi %struct.rtx_def* [ %310, %cond.false.i1344 ], [ %309, %init_one_libfunc.exit1332 ]
  %arrayidx.i1346 = getelementptr inbounds %struct.rtx_def* %cond.i1345, i64 0, i32 1, i64 0
  %rtx.i1347 = bitcast %union.rtunion_def* %arrayidx.i1346 to %struct.rtx_def**
  %311 = load %struct.rtx_def** %rtx.i1347, align 8, !tbaa !1
  store %struct.rtx_def* %311, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 32), align 16, !tbaa !1
  %call.i1349 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([8 x i8]* @.str64, i64 0, i64 0)) #3
  %312 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i1350 = tail call %union.tree_node* @build_function_type(%union.tree_node* %312, %union.tree_node* null) #3
  %call2.i1351 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i1349, %union.tree_node* %call1.i1350) #3
  %artificial_flag.i1352 = getelementptr inbounds %union.tree_node* %call2.i1351, i64 0, i32 0, i32 5
  %313 = bitcast i48* %artificial_flag.i1352 to i64*
  %bf.load.i1353 = load i64* %313, align 8
  %bf.set7.i1354 = or i64 %bf.load.i1353, 4194560
  store i64 %bf.set7.i1354, i64* %313, align 8
  %public_flag.i1355 = getelementptr inbounds %union.tree_node* %call2.i1351, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i1356 = load i32* %public_flag.i1355, align 8
  %bf.set10.i1357 = or i32 %bf.load8.i1356, 524288
  store i32 %bf.set10.i1357, i32* %public_flag.i1355, align 8
  %rtl.i1358 = getelementptr inbounds %union.tree_node* %call2.i1351, i64 0, i32 0, i32 17
  %314 = load %struct.rtx_def** %rtl.i1358, align 8, !tbaa !32
  %tobool.i1359 = icmp eq %struct.rtx_def* %314, null
  br i1 %tobool.i1359, label %cond.false.i1360, label %init_one_libfunc.exit1364

cond.false.i1360:                                 ; preds = %init_one_libfunc.exit1348
  tail call void @make_decl_rtl(%union.tree_node* %call2.i1351, i8* null) #3
  %315 = load %struct.rtx_def** %rtl.i1358, align 8, !tbaa !32
  br label %init_one_libfunc.exit1364

init_one_libfunc.exit1364:                        ; preds = %init_one_libfunc.exit1348, %cond.false.i1360
  %cond.i1361 = phi %struct.rtx_def* [ %315, %cond.false.i1360 ], [ %314, %init_one_libfunc.exit1348 ]
  %arrayidx.i1362 = getelementptr inbounds %struct.rtx_def* %cond.i1361, i64 0, i32 1, i64 0
  %rtx.i1363 = bitcast %union.rtunion_def* %arrayidx.i1362 to %struct.rtx_def**
  %316 = load %struct.rtx_def** %rtx.i1363, align 8, !tbaa !1
  store %struct.rtx_def* %316, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 33), align 8, !tbaa !1
  %call.i1365 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([8 x i8]* @.str65, i64 0, i64 0)) #3
  %317 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i1366 = tail call %union.tree_node* @build_function_type(%union.tree_node* %317, %union.tree_node* null) #3
  %call2.i1367 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i1365, %union.tree_node* %call1.i1366) #3
  %artificial_flag.i1368 = getelementptr inbounds %union.tree_node* %call2.i1367, i64 0, i32 0, i32 5
  %318 = bitcast i48* %artificial_flag.i1368 to i64*
  %bf.load.i1369 = load i64* %318, align 8
  %bf.set7.i1370 = or i64 %bf.load.i1369, 4194560
  store i64 %bf.set7.i1370, i64* %318, align 8
  %public_flag.i1371 = getelementptr inbounds %union.tree_node* %call2.i1367, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i1372 = load i32* %public_flag.i1371, align 8
  %bf.set10.i1373 = or i32 %bf.load8.i1372, 524288
  store i32 %bf.set10.i1373, i32* %public_flag.i1371, align 8
  %rtl.i1374 = getelementptr inbounds %union.tree_node* %call2.i1367, i64 0, i32 0, i32 17
  %319 = load %struct.rtx_def** %rtl.i1374, align 8, !tbaa !32
  %tobool.i1375 = icmp eq %struct.rtx_def* %319, null
  br i1 %tobool.i1375, label %cond.false.i1376, label %init_one_libfunc.exit1380

cond.false.i1376:                                 ; preds = %init_one_libfunc.exit1364
  tail call void @make_decl_rtl(%union.tree_node* %call2.i1367, i8* null) #3
  %320 = load %struct.rtx_def** %rtl.i1374, align 8, !tbaa !32
  br label %init_one_libfunc.exit1380

init_one_libfunc.exit1380:                        ; preds = %init_one_libfunc.exit1364, %cond.false.i1376
  %cond.i1377 = phi %struct.rtx_def* [ %320, %cond.false.i1376 ], [ %319, %init_one_libfunc.exit1364 ]
  %arrayidx.i1378 = getelementptr inbounds %struct.rtx_def* %cond.i1377, i64 0, i32 1, i64 0
  %rtx.i1379 = bitcast %union.rtunion_def* %arrayidx.i1378 to %struct.rtx_def**
  %321 = load %struct.rtx_def** %rtx.i1379, align 8, !tbaa !1
  store %struct.rtx_def* %321, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 34), align 16, !tbaa !1
  %call.i1381 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([8 x i8]* @.str66, i64 0, i64 0)) #3
  %322 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i1382 = tail call %union.tree_node* @build_function_type(%union.tree_node* %322, %union.tree_node* null) #3
  %call2.i1383 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i1381, %union.tree_node* %call1.i1382) #3
  %artificial_flag.i1384 = getelementptr inbounds %union.tree_node* %call2.i1383, i64 0, i32 0, i32 5
  %323 = bitcast i48* %artificial_flag.i1384 to i64*
  %bf.load.i1385 = load i64* %323, align 8
  %bf.set7.i1386 = or i64 %bf.load.i1385, 4194560
  store i64 %bf.set7.i1386, i64* %323, align 8
  %public_flag.i1387 = getelementptr inbounds %union.tree_node* %call2.i1383, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i1388 = load i32* %public_flag.i1387, align 8
  %bf.set10.i1389 = or i32 %bf.load8.i1388, 524288
  store i32 %bf.set10.i1389, i32* %public_flag.i1387, align 8
  %rtl.i1390 = getelementptr inbounds %union.tree_node* %call2.i1383, i64 0, i32 0, i32 17
  %324 = load %struct.rtx_def** %rtl.i1390, align 8, !tbaa !32
  %tobool.i1391 = icmp eq %struct.rtx_def* %324, null
  br i1 %tobool.i1391, label %cond.false.i1392, label %init_one_libfunc.exit1396

cond.false.i1392:                                 ; preds = %init_one_libfunc.exit1380
  tail call void @make_decl_rtl(%union.tree_node* %call2.i1383, i8* null) #3
  %325 = load %struct.rtx_def** %rtl.i1390, align 8, !tbaa !32
  br label %init_one_libfunc.exit1396

init_one_libfunc.exit1396:                        ; preds = %init_one_libfunc.exit1380, %cond.false.i1392
  %cond.i1393 = phi %struct.rtx_def* [ %325, %cond.false.i1392 ], [ %324, %init_one_libfunc.exit1380 ]
  %arrayidx.i1394 = getelementptr inbounds %struct.rtx_def* %cond.i1393, i64 0, i32 1, i64 0
  %rtx.i1395 = bitcast %union.rtunion_def* %arrayidx.i1394 to %struct.rtx_def**
  %326 = load %struct.rtx_def** %rtx.i1395, align 8, !tbaa !1
  store %struct.rtx_def* %326, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 35), align 8, !tbaa !1
  %call.i1397 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([8 x i8]* @.str67, i64 0, i64 0)) #3
  %327 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i1398 = tail call %union.tree_node* @build_function_type(%union.tree_node* %327, %union.tree_node* null) #3
  %call2.i1399 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i1397, %union.tree_node* %call1.i1398) #3
  %artificial_flag.i1400 = getelementptr inbounds %union.tree_node* %call2.i1399, i64 0, i32 0, i32 5
  %328 = bitcast i48* %artificial_flag.i1400 to i64*
  %bf.load.i1401 = load i64* %328, align 8
  %bf.set7.i1402 = or i64 %bf.load.i1401, 4194560
  store i64 %bf.set7.i1402, i64* %328, align 8
  %public_flag.i1403 = getelementptr inbounds %union.tree_node* %call2.i1399, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i1404 = load i32* %public_flag.i1403, align 8
  %bf.set10.i1405 = or i32 %bf.load8.i1404, 524288
  store i32 %bf.set10.i1405, i32* %public_flag.i1403, align 8
  %rtl.i1406 = getelementptr inbounds %union.tree_node* %call2.i1399, i64 0, i32 0, i32 17
  %329 = load %struct.rtx_def** %rtl.i1406, align 8, !tbaa !32
  %tobool.i1407 = icmp eq %struct.rtx_def* %329, null
  br i1 %tobool.i1407, label %cond.false.i1408, label %init_one_libfunc.exit1412

cond.false.i1408:                                 ; preds = %init_one_libfunc.exit1396
  tail call void @make_decl_rtl(%union.tree_node* %call2.i1399, i8* null) #3
  %330 = load %struct.rtx_def** %rtl.i1406, align 8, !tbaa !32
  br label %init_one_libfunc.exit1412

init_one_libfunc.exit1412:                        ; preds = %init_one_libfunc.exit1396, %cond.false.i1408
  %cond.i1409 = phi %struct.rtx_def* [ %330, %cond.false.i1408 ], [ %329, %init_one_libfunc.exit1396 ]
  %arrayidx.i1410 = getelementptr inbounds %struct.rtx_def* %cond.i1409, i64 0, i32 1, i64 0
  %rtx.i1411 = bitcast %union.rtunion_def* %arrayidx.i1410 to %struct.rtx_def**
  %331 = load %struct.rtx_def** %rtx.i1411, align 8, !tbaa !1
  store %struct.rtx_def* %331, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 36), align 16, !tbaa !1
  %call.i1413 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([11 x i8]* @.str68, i64 0, i64 0)) #3
  %332 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i1414 = tail call %union.tree_node* @build_function_type(%union.tree_node* %332, %union.tree_node* null) #3
  %call2.i1415 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i1413, %union.tree_node* %call1.i1414) #3
  %artificial_flag.i1416 = getelementptr inbounds %union.tree_node* %call2.i1415, i64 0, i32 0, i32 5
  %333 = bitcast i48* %artificial_flag.i1416 to i64*
  %bf.load.i1417 = load i64* %333, align 8
  %bf.set7.i1418 = or i64 %bf.load.i1417, 4194560
  store i64 %bf.set7.i1418, i64* %333, align 8
  %public_flag.i1419 = getelementptr inbounds %union.tree_node* %call2.i1415, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i1420 = load i32* %public_flag.i1419, align 8
  %bf.set10.i1421 = or i32 %bf.load8.i1420, 524288
  store i32 %bf.set10.i1421, i32* %public_flag.i1419, align 8
  %rtl.i1422 = getelementptr inbounds %union.tree_node* %call2.i1415, i64 0, i32 0, i32 17
  %334 = load %struct.rtx_def** %rtl.i1422, align 8, !tbaa !32
  %tobool.i1423 = icmp eq %struct.rtx_def* %334, null
  br i1 %tobool.i1423, label %cond.false.i1424, label %init_one_libfunc.exit1428

cond.false.i1424:                                 ; preds = %init_one_libfunc.exit1412
  tail call void @make_decl_rtl(%union.tree_node* %call2.i1415, i8* null) #3
  %335 = load %struct.rtx_def** %rtl.i1422, align 8, !tbaa !32
  br label %init_one_libfunc.exit1428

init_one_libfunc.exit1428:                        ; preds = %init_one_libfunc.exit1412, %cond.false.i1424
  %cond.i1425 = phi %struct.rtx_def* [ %335, %cond.false.i1424 ], [ %334, %init_one_libfunc.exit1412 ]
  %arrayidx.i1426 = getelementptr inbounds %struct.rtx_def* %cond.i1425, i64 0, i32 1, i64 0
  %rtx.i1427 = bitcast %union.rtunion_def* %arrayidx.i1426 to %struct.rtx_def**
  %336 = load %struct.rtx_def** %rtx.i1427, align 8, !tbaa !1
  store %struct.rtx_def* %336, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 37), align 8, !tbaa !1
  %call.i1429 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([8 x i8]* @.str69, i64 0, i64 0)) #3
  %337 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i1430 = tail call %union.tree_node* @build_function_type(%union.tree_node* %337, %union.tree_node* null) #3
  %call2.i1431 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i1429, %union.tree_node* %call1.i1430) #3
  %artificial_flag.i1432 = getelementptr inbounds %union.tree_node* %call2.i1431, i64 0, i32 0, i32 5
  %338 = bitcast i48* %artificial_flag.i1432 to i64*
  %bf.load.i1433 = load i64* %338, align 8
  %bf.set7.i1434 = or i64 %bf.load.i1433, 4194560
  store i64 %bf.set7.i1434, i64* %338, align 8
  %public_flag.i1435 = getelementptr inbounds %union.tree_node* %call2.i1431, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i1436 = load i32* %public_flag.i1435, align 8
  %bf.set10.i1437 = or i32 %bf.load8.i1436, 524288
  store i32 %bf.set10.i1437, i32* %public_flag.i1435, align 8
  %rtl.i1438 = getelementptr inbounds %union.tree_node* %call2.i1431, i64 0, i32 0, i32 17
  %339 = load %struct.rtx_def** %rtl.i1438, align 8, !tbaa !32
  %tobool.i1439 = icmp eq %struct.rtx_def* %339, null
  br i1 %tobool.i1439, label %cond.false.i1440, label %init_one_libfunc.exit1444

cond.false.i1440:                                 ; preds = %init_one_libfunc.exit1428
  tail call void @make_decl_rtl(%union.tree_node* %call2.i1431, i8* null) #3
  %340 = load %struct.rtx_def** %rtl.i1438, align 8, !tbaa !32
  br label %init_one_libfunc.exit1444

init_one_libfunc.exit1444:                        ; preds = %init_one_libfunc.exit1428, %cond.false.i1440
  %cond.i1441 = phi %struct.rtx_def* [ %340, %cond.false.i1440 ], [ %339, %init_one_libfunc.exit1428 ]
  %arrayidx.i1442 = getelementptr inbounds %struct.rtx_def* %cond.i1441, i64 0, i32 1, i64 0
  %rtx.i1443 = bitcast %union.rtunion_def* %arrayidx.i1442 to %struct.rtx_def**
  %341 = load %struct.rtx_def** %rtx.i1443, align 8, !tbaa !1
  store %struct.rtx_def* %341, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 38), align 16, !tbaa !1
  %call.i1445 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([8 x i8]* @.str70, i64 0, i64 0)) #3
  %342 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i1446 = tail call %union.tree_node* @build_function_type(%union.tree_node* %342, %union.tree_node* null) #3
  %call2.i1447 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i1445, %union.tree_node* %call1.i1446) #3
  %artificial_flag.i1448 = getelementptr inbounds %union.tree_node* %call2.i1447, i64 0, i32 0, i32 5
  %343 = bitcast i48* %artificial_flag.i1448 to i64*
  %bf.load.i1449 = load i64* %343, align 8
  %bf.set7.i1450 = or i64 %bf.load.i1449, 4194560
  store i64 %bf.set7.i1450, i64* %343, align 8
  %public_flag.i1451 = getelementptr inbounds %union.tree_node* %call2.i1447, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i1452 = load i32* %public_flag.i1451, align 8
  %bf.set10.i1453 = or i32 %bf.load8.i1452, 524288
  store i32 %bf.set10.i1453, i32* %public_flag.i1451, align 8
  %rtl.i1454 = getelementptr inbounds %union.tree_node* %call2.i1447, i64 0, i32 0, i32 17
  %344 = load %struct.rtx_def** %rtl.i1454, align 8, !tbaa !32
  %tobool.i1455 = icmp eq %struct.rtx_def* %344, null
  br i1 %tobool.i1455, label %cond.false.i1456, label %init_one_libfunc.exit1460

cond.false.i1456:                                 ; preds = %init_one_libfunc.exit1444
  tail call void @make_decl_rtl(%union.tree_node* %call2.i1447, i8* null) #3
  %345 = load %struct.rtx_def** %rtl.i1454, align 8, !tbaa !32
  br label %init_one_libfunc.exit1460

init_one_libfunc.exit1460:                        ; preds = %init_one_libfunc.exit1444, %cond.false.i1456
  %cond.i1457 = phi %struct.rtx_def* [ %345, %cond.false.i1456 ], [ %344, %init_one_libfunc.exit1444 ]
  %arrayidx.i1458 = getelementptr inbounds %struct.rtx_def* %cond.i1457, i64 0, i32 1, i64 0
  %rtx.i1459 = bitcast %union.rtunion_def* %arrayidx.i1458 to %struct.rtx_def**
  %346 = load %struct.rtx_def** %rtx.i1459, align 8, !tbaa !1
  store %struct.rtx_def* %346, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 39), align 8, !tbaa !1
  %call.i1461 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([8 x i8]* @.str71, i64 0, i64 0)) #3
  %347 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i1462 = tail call %union.tree_node* @build_function_type(%union.tree_node* %347, %union.tree_node* null) #3
  %call2.i1463 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i1461, %union.tree_node* %call1.i1462) #3
  %artificial_flag.i1464 = getelementptr inbounds %union.tree_node* %call2.i1463, i64 0, i32 0, i32 5
  %348 = bitcast i48* %artificial_flag.i1464 to i64*
  %bf.load.i1465 = load i64* %348, align 8
  %bf.set7.i1466 = or i64 %bf.load.i1465, 4194560
  store i64 %bf.set7.i1466, i64* %348, align 8
  %public_flag.i1467 = getelementptr inbounds %union.tree_node* %call2.i1463, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i1468 = load i32* %public_flag.i1467, align 8
  %bf.set10.i1469 = or i32 %bf.load8.i1468, 524288
  store i32 %bf.set10.i1469, i32* %public_flag.i1467, align 8
  %rtl.i1470 = getelementptr inbounds %union.tree_node* %call2.i1463, i64 0, i32 0, i32 17
  %349 = load %struct.rtx_def** %rtl.i1470, align 8, !tbaa !32
  %tobool.i1471 = icmp eq %struct.rtx_def* %349, null
  br i1 %tobool.i1471, label %cond.false.i1472, label %init_one_libfunc.exit1476

cond.false.i1472:                                 ; preds = %init_one_libfunc.exit1460
  tail call void @make_decl_rtl(%union.tree_node* %call2.i1463, i8* null) #3
  %350 = load %struct.rtx_def** %rtl.i1470, align 8, !tbaa !32
  br label %init_one_libfunc.exit1476

init_one_libfunc.exit1476:                        ; preds = %init_one_libfunc.exit1460, %cond.false.i1472
  %cond.i1473 = phi %struct.rtx_def* [ %350, %cond.false.i1472 ], [ %349, %init_one_libfunc.exit1460 ]
  %arrayidx.i1474 = getelementptr inbounds %struct.rtx_def* %cond.i1473, i64 0, i32 1, i64 0
  %rtx.i1475 = bitcast %union.rtunion_def* %arrayidx.i1474 to %struct.rtx_def**
  %351 = load %struct.rtx_def** %rtx.i1475, align 8, !tbaa !1
  store %struct.rtx_def* %351, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 40), align 16, !tbaa !1
  %call.i1477 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([8 x i8]* @.str72, i64 0, i64 0)) #3
  %352 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i1478 = tail call %union.tree_node* @build_function_type(%union.tree_node* %352, %union.tree_node* null) #3
  %call2.i1479 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i1477, %union.tree_node* %call1.i1478) #3
  %artificial_flag.i1480 = getelementptr inbounds %union.tree_node* %call2.i1479, i64 0, i32 0, i32 5
  %353 = bitcast i48* %artificial_flag.i1480 to i64*
  %bf.load.i1481 = load i64* %353, align 8
  %bf.set7.i1482 = or i64 %bf.load.i1481, 4194560
  store i64 %bf.set7.i1482, i64* %353, align 8
  %public_flag.i1483 = getelementptr inbounds %union.tree_node* %call2.i1479, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i1484 = load i32* %public_flag.i1483, align 8
  %bf.set10.i1485 = or i32 %bf.load8.i1484, 524288
  store i32 %bf.set10.i1485, i32* %public_flag.i1483, align 8
  %rtl.i1486 = getelementptr inbounds %union.tree_node* %call2.i1479, i64 0, i32 0, i32 17
  %354 = load %struct.rtx_def** %rtl.i1486, align 8, !tbaa !32
  %tobool.i1487 = icmp eq %struct.rtx_def* %354, null
  br i1 %tobool.i1487, label %cond.false.i1488, label %init_one_libfunc.exit1492

cond.false.i1488:                                 ; preds = %init_one_libfunc.exit1476
  tail call void @make_decl_rtl(%union.tree_node* %call2.i1479, i8* null) #3
  %355 = load %struct.rtx_def** %rtl.i1486, align 8, !tbaa !32
  br label %init_one_libfunc.exit1492

init_one_libfunc.exit1492:                        ; preds = %init_one_libfunc.exit1476, %cond.false.i1488
  %cond.i1489 = phi %struct.rtx_def* [ %355, %cond.false.i1488 ], [ %354, %init_one_libfunc.exit1476 ]
  %arrayidx.i1490 = getelementptr inbounds %struct.rtx_def* %cond.i1489, i64 0, i32 1, i64 0
  %rtx.i1491 = bitcast %union.rtunion_def* %arrayidx.i1490 to %struct.rtx_def**
  %356 = load %struct.rtx_def** %rtx.i1491, align 8, !tbaa !1
  store %struct.rtx_def* %356, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 41), align 8, !tbaa !1
  %call.i1493 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([8 x i8]* @.str73, i64 0, i64 0)) #3
  %357 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i1494 = tail call %union.tree_node* @build_function_type(%union.tree_node* %357, %union.tree_node* null) #3
  %call2.i1495 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i1493, %union.tree_node* %call1.i1494) #3
  %artificial_flag.i1496 = getelementptr inbounds %union.tree_node* %call2.i1495, i64 0, i32 0, i32 5
  %358 = bitcast i48* %artificial_flag.i1496 to i64*
  %bf.load.i1497 = load i64* %358, align 8
  %bf.set7.i1498 = or i64 %bf.load.i1497, 4194560
  store i64 %bf.set7.i1498, i64* %358, align 8
  %public_flag.i1499 = getelementptr inbounds %union.tree_node* %call2.i1495, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i1500 = load i32* %public_flag.i1499, align 8
  %bf.set10.i1501 = or i32 %bf.load8.i1500, 524288
  store i32 %bf.set10.i1501, i32* %public_flag.i1499, align 8
  %rtl.i1502 = getelementptr inbounds %union.tree_node* %call2.i1495, i64 0, i32 0, i32 17
  %359 = load %struct.rtx_def** %rtl.i1502, align 8, !tbaa !32
  %tobool.i1503 = icmp eq %struct.rtx_def* %359, null
  br i1 %tobool.i1503, label %cond.false.i1504, label %init_one_libfunc.exit1508

cond.false.i1504:                                 ; preds = %init_one_libfunc.exit1492
  tail call void @make_decl_rtl(%union.tree_node* %call2.i1495, i8* null) #3
  %360 = load %struct.rtx_def** %rtl.i1502, align 8, !tbaa !32
  br label %init_one_libfunc.exit1508

init_one_libfunc.exit1508:                        ; preds = %init_one_libfunc.exit1492, %cond.false.i1504
  %cond.i1505 = phi %struct.rtx_def* [ %360, %cond.false.i1504 ], [ %359, %init_one_libfunc.exit1492 ]
  %arrayidx.i1506 = getelementptr inbounds %struct.rtx_def* %cond.i1505, i64 0, i32 1, i64 0
  %rtx.i1507 = bitcast %union.rtunion_def* %arrayidx.i1506 to %struct.rtx_def**
  %361 = load %struct.rtx_def** %rtx.i1507, align 8, !tbaa !1
  store %struct.rtx_def* %361, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 42), align 16, !tbaa !1
  %call.i1509 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([8 x i8]* @.str74, i64 0, i64 0)) #3
  %362 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i1510 = tail call %union.tree_node* @build_function_type(%union.tree_node* %362, %union.tree_node* null) #3
  %call2.i1511 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i1509, %union.tree_node* %call1.i1510) #3
  %artificial_flag.i1512 = getelementptr inbounds %union.tree_node* %call2.i1511, i64 0, i32 0, i32 5
  %363 = bitcast i48* %artificial_flag.i1512 to i64*
  %bf.load.i1513 = load i64* %363, align 8
  %bf.set7.i1514 = or i64 %bf.load.i1513, 4194560
  store i64 %bf.set7.i1514, i64* %363, align 8
  %public_flag.i1515 = getelementptr inbounds %union.tree_node* %call2.i1511, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i1516 = load i32* %public_flag.i1515, align 8
  %bf.set10.i1517 = or i32 %bf.load8.i1516, 524288
  store i32 %bf.set10.i1517, i32* %public_flag.i1515, align 8
  %rtl.i1518 = getelementptr inbounds %union.tree_node* %call2.i1511, i64 0, i32 0, i32 17
  %364 = load %struct.rtx_def** %rtl.i1518, align 8, !tbaa !32
  %tobool.i1519 = icmp eq %struct.rtx_def* %364, null
  br i1 %tobool.i1519, label %cond.false.i1520, label %init_one_libfunc.exit1524

cond.false.i1520:                                 ; preds = %init_one_libfunc.exit1508
  tail call void @make_decl_rtl(%union.tree_node* %call2.i1511, i8* null) #3
  %365 = load %struct.rtx_def** %rtl.i1518, align 8, !tbaa !32
  br label %init_one_libfunc.exit1524

init_one_libfunc.exit1524:                        ; preds = %init_one_libfunc.exit1508, %cond.false.i1520
  %cond.i1521 = phi %struct.rtx_def* [ %365, %cond.false.i1520 ], [ %364, %init_one_libfunc.exit1508 ]
  %arrayidx.i1522 = getelementptr inbounds %struct.rtx_def* %cond.i1521, i64 0, i32 1, i64 0
  %rtx.i1523 = bitcast %union.rtunion_def* %arrayidx.i1522 to %struct.rtx_def**
  %366 = load %struct.rtx_def** %rtx.i1523, align 8, !tbaa !1
  store %struct.rtx_def* %366, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 43), align 8, !tbaa !1
  %call.i1525 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([11 x i8]* @.str75, i64 0, i64 0)) #3
  %367 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i1526 = tail call %union.tree_node* @build_function_type(%union.tree_node* %367, %union.tree_node* null) #3
  %call2.i1527 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i1525, %union.tree_node* %call1.i1526) #3
  %artificial_flag.i1528 = getelementptr inbounds %union.tree_node* %call2.i1527, i64 0, i32 0, i32 5
  %368 = bitcast i48* %artificial_flag.i1528 to i64*
  %bf.load.i1529 = load i64* %368, align 8
  %bf.set7.i1530 = or i64 %bf.load.i1529, 4194560
  store i64 %bf.set7.i1530, i64* %368, align 8
  %public_flag.i1531 = getelementptr inbounds %union.tree_node* %call2.i1527, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i1532 = load i32* %public_flag.i1531, align 8
  %bf.set10.i1533 = or i32 %bf.load8.i1532, 524288
  store i32 %bf.set10.i1533, i32* %public_flag.i1531, align 8
  %rtl.i1534 = getelementptr inbounds %union.tree_node* %call2.i1527, i64 0, i32 0, i32 17
  %369 = load %struct.rtx_def** %rtl.i1534, align 8, !tbaa !32
  %tobool.i1535 = icmp eq %struct.rtx_def* %369, null
  br i1 %tobool.i1535, label %cond.false.i1536, label %init_one_libfunc.exit1540

cond.false.i1536:                                 ; preds = %init_one_libfunc.exit1524
  tail call void @make_decl_rtl(%union.tree_node* %call2.i1527, i8* null) #3
  %370 = load %struct.rtx_def** %rtl.i1534, align 8, !tbaa !32
  br label %init_one_libfunc.exit1540

init_one_libfunc.exit1540:                        ; preds = %init_one_libfunc.exit1524, %cond.false.i1536
  %cond.i1537 = phi %struct.rtx_def* [ %370, %cond.false.i1536 ], [ %369, %init_one_libfunc.exit1524 ]
  %arrayidx.i1538 = getelementptr inbounds %struct.rtx_def* %cond.i1537, i64 0, i32 1, i64 0
  %rtx.i1539 = bitcast %union.rtunion_def* %arrayidx.i1538 to %struct.rtx_def**
  %371 = load %struct.rtx_def** %rtx.i1539, align 8, !tbaa !1
  store %struct.rtx_def* %371, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 44), align 16, !tbaa !1
  %call.i1541 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([8 x i8]* @.str76, i64 0, i64 0)) #3
  %372 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i1542 = tail call %union.tree_node* @build_function_type(%union.tree_node* %372, %union.tree_node* null) #3
  %call2.i1543 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i1541, %union.tree_node* %call1.i1542) #3
  %artificial_flag.i1544 = getelementptr inbounds %union.tree_node* %call2.i1543, i64 0, i32 0, i32 5
  %373 = bitcast i48* %artificial_flag.i1544 to i64*
  %bf.load.i1545 = load i64* %373, align 8
  %bf.set7.i1546 = or i64 %bf.load.i1545, 4194560
  store i64 %bf.set7.i1546, i64* %373, align 8
  %public_flag.i1547 = getelementptr inbounds %union.tree_node* %call2.i1543, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i1548 = load i32* %public_flag.i1547, align 8
  %bf.set10.i1549 = or i32 %bf.load8.i1548, 524288
  store i32 %bf.set10.i1549, i32* %public_flag.i1547, align 8
  %rtl.i1550 = getelementptr inbounds %union.tree_node* %call2.i1543, i64 0, i32 0, i32 17
  %374 = load %struct.rtx_def** %rtl.i1550, align 8, !tbaa !32
  %tobool.i1551 = icmp eq %struct.rtx_def* %374, null
  br i1 %tobool.i1551, label %cond.false.i1552, label %init_one_libfunc.exit1556

cond.false.i1552:                                 ; preds = %init_one_libfunc.exit1540
  tail call void @make_decl_rtl(%union.tree_node* %call2.i1543, i8* null) #3
  %375 = load %struct.rtx_def** %rtl.i1550, align 8, !tbaa !32
  br label %init_one_libfunc.exit1556

init_one_libfunc.exit1556:                        ; preds = %init_one_libfunc.exit1540, %cond.false.i1552
  %cond.i1553 = phi %struct.rtx_def* [ %375, %cond.false.i1552 ], [ %374, %init_one_libfunc.exit1540 ]
  %arrayidx.i1554 = getelementptr inbounds %struct.rtx_def* %cond.i1553, i64 0, i32 1, i64 0
  %rtx.i1555 = bitcast %union.rtunion_def* %arrayidx.i1554 to %struct.rtx_def**
  %376 = load %struct.rtx_def** %rtx.i1555, align 8, !tbaa !1
  store %struct.rtx_def* %376, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 45), align 8, !tbaa !1
  %call.i1557 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([8 x i8]* @.str77, i64 0, i64 0)) #3
  %377 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i1558 = tail call %union.tree_node* @build_function_type(%union.tree_node* %377, %union.tree_node* null) #3
  %call2.i1559 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i1557, %union.tree_node* %call1.i1558) #3
  %artificial_flag.i1560 = getelementptr inbounds %union.tree_node* %call2.i1559, i64 0, i32 0, i32 5
  %378 = bitcast i48* %artificial_flag.i1560 to i64*
  %bf.load.i1561 = load i64* %378, align 8
  %bf.set7.i1562 = or i64 %bf.load.i1561, 4194560
  store i64 %bf.set7.i1562, i64* %378, align 8
  %public_flag.i1563 = getelementptr inbounds %union.tree_node* %call2.i1559, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i1564 = load i32* %public_flag.i1563, align 8
  %bf.set10.i1565 = or i32 %bf.load8.i1564, 524288
  store i32 %bf.set10.i1565, i32* %public_flag.i1563, align 8
  %rtl.i1566 = getelementptr inbounds %union.tree_node* %call2.i1559, i64 0, i32 0, i32 17
  %379 = load %struct.rtx_def** %rtl.i1566, align 8, !tbaa !32
  %tobool.i1567 = icmp eq %struct.rtx_def* %379, null
  br i1 %tobool.i1567, label %cond.false.i1568, label %init_one_libfunc.exit1572

cond.false.i1568:                                 ; preds = %init_one_libfunc.exit1556
  tail call void @make_decl_rtl(%union.tree_node* %call2.i1559, i8* null) #3
  %380 = load %struct.rtx_def** %rtl.i1566, align 8, !tbaa !32
  br label %init_one_libfunc.exit1572

init_one_libfunc.exit1572:                        ; preds = %init_one_libfunc.exit1556, %cond.false.i1568
  %cond.i1569 = phi %struct.rtx_def* [ %380, %cond.false.i1568 ], [ %379, %init_one_libfunc.exit1556 ]
  %arrayidx.i1570 = getelementptr inbounds %struct.rtx_def* %cond.i1569, i64 0, i32 1, i64 0
  %rtx.i1571 = bitcast %union.rtunion_def* %arrayidx.i1570 to %struct.rtx_def**
  %381 = load %struct.rtx_def** %rtx.i1571, align 8, !tbaa !1
  store %struct.rtx_def* %381, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 46), align 16, !tbaa !1
  %call.i1573 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([8 x i8]* @.str78, i64 0, i64 0)) #3
  %382 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i1574 = tail call %union.tree_node* @build_function_type(%union.tree_node* %382, %union.tree_node* null) #3
  %call2.i1575 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i1573, %union.tree_node* %call1.i1574) #3
  %artificial_flag.i1576 = getelementptr inbounds %union.tree_node* %call2.i1575, i64 0, i32 0, i32 5
  %383 = bitcast i48* %artificial_flag.i1576 to i64*
  %bf.load.i1577 = load i64* %383, align 8
  %bf.set7.i1578 = or i64 %bf.load.i1577, 4194560
  store i64 %bf.set7.i1578, i64* %383, align 8
  %public_flag.i1579 = getelementptr inbounds %union.tree_node* %call2.i1575, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i1580 = load i32* %public_flag.i1579, align 8
  %bf.set10.i1581 = or i32 %bf.load8.i1580, 524288
  store i32 %bf.set10.i1581, i32* %public_flag.i1579, align 8
  %rtl.i1582 = getelementptr inbounds %union.tree_node* %call2.i1575, i64 0, i32 0, i32 17
  %384 = load %struct.rtx_def** %rtl.i1582, align 8, !tbaa !32
  %tobool.i1583 = icmp eq %struct.rtx_def* %384, null
  br i1 %tobool.i1583, label %cond.false.i1584, label %init_one_libfunc.exit1588

cond.false.i1584:                                 ; preds = %init_one_libfunc.exit1572
  tail call void @make_decl_rtl(%union.tree_node* %call2.i1575, i8* null) #3
  %385 = load %struct.rtx_def** %rtl.i1582, align 8, !tbaa !32
  br label %init_one_libfunc.exit1588

init_one_libfunc.exit1588:                        ; preds = %init_one_libfunc.exit1572, %cond.false.i1584
  %cond.i1585 = phi %struct.rtx_def* [ %385, %cond.false.i1584 ], [ %384, %init_one_libfunc.exit1572 ]
  %arrayidx.i1586 = getelementptr inbounds %struct.rtx_def* %cond.i1585, i64 0, i32 1, i64 0
  %rtx.i1587 = bitcast %union.rtunion_def* %arrayidx.i1586 to %struct.rtx_def**
  %386 = load %struct.rtx_def** %rtx.i1587, align 8, !tbaa !1
  store %struct.rtx_def* %386, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 47), align 8, !tbaa !1
  %call.i1589 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([8 x i8]* @.str79, i64 0, i64 0)) #3
  %387 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i1590 = tail call %union.tree_node* @build_function_type(%union.tree_node* %387, %union.tree_node* null) #3
  %call2.i1591 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i1589, %union.tree_node* %call1.i1590) #3
  %artificial_flag.i1592 = getelementptr inbounds %union.tree_node* %call2.i1591, i64 0, i32 0, i32 5
  %388 = bitcast i48* %artificial_flag.i1592 to i64*
  %bf.load.i1593 = load i64* %388, align 8
  %bf.set7.i1594 = or i64 %bf.load.i1593, 4194560
  store i64 %bf.set7.i1594, i64* %388, align 8
  %public_flag.i1595 = getelementptr inbounds %union.tree_node* %call2.i1591, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i1596 = load i32* %public_flag.i1595, align 8
  %bf.set10.i1597 = or i32 %bf.load8.i1596, 524288
  store i32 %bf.set10.i1597, i32* %public_flag.i1595, align 8
  %rtl.i1598 = getelementptr inbounds %union.tree_node* %call2.i1591, i64 0, i32 0, i32 17
  %389 = load %struct.rtx_def** %rtl.i1598, align 8, !tbaa !32
  %tobool.i1599 = icmp eq %struct.rtx_def* %389, null
  br i1 %tobool.i1599, label %cond.false.i1600, label %init_one_libfunc.exit1604

cond.false.i1600:                                 ; preds = %init_one_libfunc.exit1588
  tail call void @make_decl_rtl(%union.tree_node* %call2.i1591, i8* null) #3
  %390 = load %struct.rtx_def** %rtl.i1598, align 8, !tbaa !32
  br label %init_one_libfunc.exit1604

init_one_libfunc.exit1604:                        ; preds = %init_one_libfunc.exit1588, %cond.false.i1600
  %cond.i1601 = phi %struct.rtx_def* [ %390, %cond.false.i1600 ], [ %389, %init_one_libfunc.exit1588 ]
  %arrayidx.i1602 = getelementptr inbounds %struct.rtx_def* %cond.i1601, i64 0, i32 1, i64 0
  %rtx.i1603 = bitcast %union.rtunion_def* %arrayidx.i1602 to %struct.rtx_def**
  %391 = load %struct.rtx_def** %rtx.i1603, align 8, !tbaa !1
  store %struct.rtx_def* %391, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 48), align 16, !tbaa !1
  %call.i1605 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([8 x i8]* @.str80, i64 0, i64 0)) #3
  %392 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i1606 = tail call %union.tree_node* @build_function_type(%union.tree_node* %392, %union.tree_node* null) #3
  %call2.i1607 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i1605, %union.tree_node* %call1.i1606) #3
  %artificial_flag.i1608 = getelementptr inbounds %union.tree_node* %call2.i1607, i64 0, i32 0, i32 5
  %393 = bitcast i48* %artificial_flag.i1608 to i64*
  %bf.load.i1609 = load i64* %393, align 8
  %bf.set7.i1610 = or i64 %bf.load.i1609, 4194560
  store i64 %bf.set7.i1610, i64* %393, align 8
  %public_flag.i1611 = getelementptr inbounds %union.tree_node* %call2.i1607, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i1612 = load i32* %public_flag.i1611, align 8
  %bf.set10.i1613 = or i32 %bf.load8.i1612, 524288
  store i32 %bf.set10.i1613, i32* %public_flag.i1611, align 8
  %rtl.i1614 = getelementptr inbounds %union.tree_node* %call2.i1607, i64 0, i32 0, i32 17
  %394 = load %struct.rtx_def** %rtl.i1614, align 8, !tbaa !32
  %tobool.i1615 = icmp eq %struct.rtx_def* %394, null
  br i1 %tobool.i1615, label %cond.false.i1616, label %init_one_libfunc.exit1620

cond.false.i1616:                                 ; preds = %init_one_libfunc.exit1604
  tail call void @make_decl_rtl(%union.tree_node* %call2.i1607, i8* null) #3
  %395 = load %struct.rtx_def** %rtl.i1614, align 8, !tbaa !32
  br label %init_one_libfunc.exit1620

init_one_libfunc.exit1620:                        ; preds = %init_one_libfunc.exit1604, %cond.false.i1616
  %cond.i1617 = phi %struct.rtx_def* [ %395, %cond.false.i1616 ], [ %394, %init_one_libfunc.exit1604 ]
  %arrayidx.i1618 = getelementptr inbounds %struct.rtx_def* %cond.i1617, i64 0, i32 1, i64 0
  %rtx.i1619 = bitcast %union.rtunion_def* %arrayidx.i1618 to %struct.rtx_def**
  %396 = load %struct.rtx_def** %rtx.i1619, align 8, !tbaa !1
  store %struct.rtx_def* %396, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 49), align 8, !tbaa !1
  %call.i1621 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([8 x i8]* @.str81, i64 0, i64 0)) #3
  %397 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i1622 = tail call %union.tree_node* @build_function_type(%union.tree_node* %397, %union.tree_node* null) #3
  %call2.i1623 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i1621, %union.tree_node* %call1.i1622) #3
  %artificial_flag.i1624 = getelementptr inbounds %union.tree_node* %call2.i1623, i64 0, i32 0, i32 5
  %398 = bitcast i48* %artificial_flag.i1624 to i64*
  %bf.load.i1625 = load i64* %398, align 8
  %bf.set7.i1626 = or i64 %bf.load.i1625, 4194560
  store i64 %bf.set7.i1626, i64* %398, align 8
  %public_flag.i1627 = getelementptr inbounds %union.tree_node* %call2.i1623, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i1628 = load i32* %public_flag.i1627, align 8
  %bf.set10.i1629 = or i32 %bf.load8.i1628, 524288
  store i32 %bf.set10.i1629, i32* %public_flag.i1627, align 8
  %rtl.i1630 = getelementptr inbounds %union.tree_node* %call2.i1623, i64 0, i32 0, i32 17
  %399 = load %struct.rtx_def** %rtl.i1630, align 8, !tbaa !32
  %tobool.i1631 = icmp eq %struct.rtx_def* %399, null
  br i1 %tobool.i1631, label %cond.false.i1632, label %init_one_libfunc.exit1636

cond.false.i1632:                                 ; preds = %init_one_libfunc.exit1620
  tail call void @make_decl_rtl(%union.tree_node* %call2.i1623, i8* null) #3
  %400 = load %struct.rtx_def** %rtl.i1630, align 8, !tbaa !32
  br label %init_one_libfunc.exit1636

init_one_libfunc.exit1636:                        ; preds = %init_one_libfunc.exit1620, %cond.false.i1632
  %cond.i1633 = phi %struct.rtx_def* [ %400, %cond.false.i1632 ], [ %399, %init_one_libfunc.exit1620 ]
  %arrayidx.i1634 = getelementptr inbounds %struct.rtx_def* %cond.i1633, i64 0, i32 1, i64 0
  %rtx.i1635 = bitcast %union.rtunion_def* %arrayidx.i1634 to %struct.rtx_def**
  %401 = load %struct.rtx_def** %rtx.i1635, align 8, !tbaa !1
  store %struct.rtx_def* %401, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 50), align 16, !tbaa !1
  %call.i1637 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([11 x i8]* @.str82, i64 0, i64 0)) #3
  %402 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i1638 = tail call %union.tree_node* @build_function_type(%union.tree_node* %402, %union.tree_node* null) #3
  %call2.i1639 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i1637, %union.tree_node* %call1.i1638) #3
  %artificial_flag.i1640 = getelementptr inbounds %union.tree_node* %call2.i1639, i64 0, i32 0, i32 5
  %403 = bitcast i48* %artificial_flag.i1640 to i64*
  %bf.load.i1641 = load i64* %403, align 8
  %bf.set7.i1642 = or i64 %bf.load.i1641, 4194560
  store i64 %bf.set7.i1642, i64* %403, align 8
  %public_flag.i1643 = getelementptr inbounds %union.tree_node* %call2.i1639, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i1644 = load i32* %public_flag.i1643, align 8
  %bf.set10.i1645 = or i32 %bf.load8.i1644, 524288
  store i32 %bf.set10.i1645, i32* %public_flag.i1643, align 8
  %rtl.i1646 = getelementptr inbounds %union.tree_node* %call2.i1639, i64 0, i32 0, i32 17
  %404 = load %struct.rtx_def** %rtl.i1646, align 8, !tbaa !32
  %tobool.i1647 = icmp eq %struct.rtx_def* %404, null
  br i1 %tobool.i1647, label %cond.false.i1648, label %init_one_libfunc.exit1652

cond.false.i1648:                                 ; preds = %init_one_libfunc.exit1636
  tail call void @make_decl_rtl(%union.tree_node* %call2.i1639, i8* null) #3
  %405 = load %struct.rtx_def** %rtl.i1646, align 8, !tbaa !32
  br label %init_one_libfunc.exit1652

init_one_libfunc.exit1652:                        ; preds = %init_one_libfunc.exit1636, %cond.false.i1648
  %cond.i1649 = phi %struct.rtx_def* [ %405, %cond.false.i1648 ], [ %404, %init_one_libfunc.exit1636 ]
  %arrayidx.i1650 = getelementptr inbounds %struct.rtx_def* %cond.i1649, i64 0, i32 1, i64 0
  %rtx.i1651 = bitcast %union.rtunion_def* %arrayidx.i1650 to %struct.rtx_def**
  %406 = load %struct.rtx_def** %rtx.i1651, align 8, !tbaa !1
  store %struct.rtx_def* %406, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 51), align 8, !tbaa !1
  %call.i1653 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([8 x i8]* @.str83, i64 0, i64 0)) #3
  %407 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i1654 = tail call %union.tree_node* @build_function_type(%union.tree_node* %407, %union.tree_node* null) #3
  %call2.i1655 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i1653, %union.tree_node* %call1.i1654) #3
  %artificial_flag.i1656 = getelementptr inbounds %union.tree_node* %call2.i1655, i64 0, i32 0, i32 5
  %408 = bitcast i48* %artificial_flag.i1656 to i64*
  %bf.load.i1657 = load i64* %408, align 8
  %bf.set7.i1658 = or i64 %bf.load.i1657, 4194560
  store i64 %bf.set7.i1658, i64* %408, align 8
  %public_flag.i1659 = getelementptr inbounds %union.tree_node* %call2.i1655, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i1660 = load i32* %public_flag.i1659, align 8
  %bf.set10.i1661 = or i32 %bf.load8.i1660, 524288
  store i32 %bf.set10.i1661, i32* %public_flag.i1659, align 8
  %rtl.i1662 = getelementptr inbounds %union.tree_node* %call2.i1655, i64 0, i32 0, i32 17
  %409 = load %struct.rtx_def** %rtl.i1662, align 8, !tbaa !32
  %tobool.i1663 = icmp eq %struct.rtx_def* %409, null
  br i1 %tobool.i1663, label %cond.false.i1664, label %init_one_libfunc.exit1668

cond.false.i1664:                                 ; preds = %init_one_libfunc.exit1652
  tail call void @make_decl_rtl(%union.tree_node* %call2.i1655, i8* null) #3
  %410 = load %struct.rtx_def** %rtl.i1662, align 8, !tbaa !32
  br label %init_one_libfunc.exit1668

init_one_libfunc.exit1668:                        ; preds = %init_one_libfunc.exit1652, %cond.false.i1664
  %cond.i1665 = phi %struct.rtx_def* [ %410, %cond.false.i1664 ], [ %409, %init_one_libfunc.exit1652 ]
  %arrayidx.i1666 = getelementptr inbounds %struct.rtx_def* %cond.i1665, i64 0, i32 1, i64 0
  %rtx.i1667 = bitcast %union.rtunion_def* %arrayidx.i1666 to %struct.rtx_def**
  %411 = load %struct.rtx_def** %rtx.i1667, align 8, !tbaa !1
  store %struct.rtx_def* %411, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 52), align 16, !tbaa !1
  %call.i1669 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([8 x i8]* @.str84, i64 0, i64 0)) #3
  %412 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i1670 = tail call %union.tree_node* @build_function_type(%union.tree_node* %412, %union.tree_node* null) #3
  %call2.i1671 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i1669, %union.tree_node* %call1.i1670) #3
  %artificial_flag.i1672 = getelementptr inbounds %union.tree_node* %call2.i1671, i64 0, i32 0, i32 5
  %413 = bitcast i48* %artificial_flag.i1672 to i64*
  %bf.load.i1673 = load i64* %413, align 8
  %bf.set7.i1674 = or i64 %bf.load.i1673, 4194560
  store i64 %bf.set7.i1674, i64* %413, align 8
  %public_flag.i1675 = getelementptr inbounds %union.tree_node* %call2.i1671, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i1676 = load i32* %public_flag.i1675, align 8
  %bf.set10.i1677 = or i32 %bf.load8.i1676, 524288
  store i32 %bf.set10.i1677, i32* %public_flag.i1675, align 8
  %rtl.i1678 = getelementptr inbounds %union.tree_node* %call2.i1671, i64 0, i32 0, i32 17
  %414 = load %struct.rtx_def** %rtl.i1678, align 8, !tbaa !32
  %tobool.i1679 = icmp eq %struct.rtx_def* %414, null
  br i1 %tobool.i1679, label %cond.false.i1680, label %init_one_libfunc.exit1684

cond.false.i1680:                                 ; preds = %init_one_libfunc.exit1668
  tail call void @make_decl_rtl(%union.tree_node* %call2.i1671, i8* null) #3
  %415 = load %struct.rtx_def** %rtl.i1678, align 8, !tbaa !32
  br label %init_one_libfunc.exit1684

init_one_libfunc.exit1684:                        ; preds = %init_one_libfunc.exit1668, %cond.false.i1680
  %cond.i1681 = phi %struct.rtx_def* [ %415, %cond.false.i1680 ], [ %414, %init_one_libfunc.exit1668 ]
  %arrayidx.i1682 = getelementptr inbounds %struct.rtx_def* %cond.i1681, i64 0, i32 1, i64 0
  %rtx.i1683 = bitcast %union.rtunion_def* %arrayidx.i1682 to %struct.rtx_def**
  %416 = load %struct.rtx_def** %rtx.i1683, align 8, !tbaa !1
  store %struct.rtx_def* %416, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 53), align 8, !tbaa !1
  %call.i1685 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([8 x i8]* @.str85, i64 0, i64 0)) #3
  %417 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i1686 = tail call %union.tree_node* @build_function_type(%union.tree_node* %417, %union.tree_node* null) #3
  %call2.i1687 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i1685, %union.tree_node* %call1.i1686) #3
  %artificial_flag.i1688 = getelementptr inbounds %union.tree_node* %call2.i1687, i64 0, i32 0, i32 5
  %418 = bitcast i48* %artificial_flag.i1688 to i64*
  %bf.load.i1689 = load i64* %418, align 8
  %bf.set7.i1690 = or i64 %bf.load.i1689, 4194560
  store i64 %bf.set7.i1690, i64* %418, align 8
  %public_flag.i1691 = getelementptr inbounds %union.tree_node* %call2.i1687, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i1692 = load i32* %public_flag.i1691, align 8
  %bf.set10.i1693 = or i32 %bf.load8.i1692, 524288
  store i32 %bf.set10.i1693, i32* %public_flag.i1691, align 8
  %rtl.i1694 = getelementptr inbounds %union.tree_node* %call2.i1687, i64 0, i32 0, i32 17
  %419 = load %struct.rtx_def** %rtl.i1694, align 8, !tbaa !32
  %tobool.i1695 = icmp eq %struct.rtx_def* %419, null
  br i1 %tobool.i1695, label %cond.false.i1696, label %init_one_libfunc.exit1700

cond.false.i1696:                                 ; preds = %init_one_libfunc.exit1684
  tail call void @make_decl_rtl(%union.tree_node* %call2.i1687, i8* null) #3
  %420 = load %struct.rtx_def** %rtl.i1694, align 8, !tbaa !32
  br label %init_one_libfunc.exit1700

init_one_libfunc.exit1700:                        ; preds = %init_one_libfunc.exit1684, %cond.false.i1696
  %cond.i1697 = phi %struct.rtx_def* [ %420, %cond.false.i1696 ], [ %419, %init_one_libfunc.exit1684 ]
  %arrayidx.i1698 = getelementptr inbounds %struct.rtx_def* %cond.i1697, i64 0, i32 1, i64 0
  %rtx.i1699 = bitcast %union.rtunion_def* %arrayidx.i1698 to %struct.rtx_def**
  %421 = load %struct.rtx_def** %rtx.i1699, align 8, !tbaa !1
  store %struct.rtx_def* %421, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 54), align 16, !tbaa !1
  %call.i1701 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([8 x i8]* @.str86, i64 0, i64 0)) #3
  %422 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i1702 = tail call %union.tree_node* @build_function_type(%union.tree_node* %422, %union.tree_node* null) #3
  %call2.i1703 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i1701, %union.tree_node* %call1.i1702) #3
  %artificial_flag.i1704 = getelementptr inbounds %union.tree_node* %call2.i1703, i64 0, i32 0, i32 5
  %423 = bitcast i48* %artificial_flag.i1704 to i64*
  %bf.load.i1705 = load i64* %423, align 8
  %bf.set7.i1706 = or i64 %bf.load.i1705, 4194560
  store i64 %bf.set7.i1706, i64* %423, align 8
  %public_flag.i1707 = getelementptr inbounds %union.tree_node* %call2.i1703, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i1708 = load i32* %public_flag.i1707, align 8
  %bf.set10.i1709 = or i32 %bf.load8.i1708, 524288
  store i32 %bf.set10.i1709, i32* %public_flag.i1707, align 8
  %rtl.i1710 = getelementptr inbounds %union.tree_node* %call2.i1703, i64 0, i32 0, i32 17
  %424 = load %struct.rtx_def** %rtl.i1710, align 8, !tbaa !32
  %tobool.i1711 = icmp eq %struct.rtx_def* %424, null
  br i1 %tobool.i1711, label %cond.false.i1712, label %init_one_libfunc.exit1716

cond.false.i1712:                                 ; preds = %init_one_libfunc.exit1700
  tail call void @make_decl_rtl(%union.tree_node* %call2.i1703, i8* null) #3
  %425 = load %struct.rtx_def** %rtl.i1710, align 8, !tbaa !32
  br label %init_one_libfunc.exit1716

init_one_libfunc.exit1716:                        ; preds = %init_one_libfunc.exit1700, %cond.false.i1712
  %cond.i1713 = phi %struct.rtx_def* [ %425, %cond.false.i1712 ], [ %424, %init_one_libfunc.exit1700 ]
  %arrayidx.i1714 = getelementptr inbounds %struct.rtx_def* %cond.i1713, i64 0, i32 1, i64 0
  %rtx.i1715 = bitcast %union.rtunion_def* %arrayidx.i1714 to %struct.rtx_def**
  %426 = load %struct.rtx_def** %rtx.i1715, align 8, !tbaa !1
  store %struct.rtx_def* %426, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 55), align 8, !tbaa !1
  %call.i1717 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([8 x i8]* @.str87, i64 0, i64 0)) #3
  %427 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i1718 = tail call %union.tree_node* @build_function_type(%union.tree_node* %427, %union.tree_node* null) #3
  %call2.i1719 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i1717, %union.tree_node* %call1.i1718) #3
  %artificial_flag.i1720 = getelementptr inbounds %union.tree_node* %call2.i1719, i64 0, i32 0, i32 5
  %428 = bitcast i48* %artificial_flag.i1720 to i64*
  %bf.load.i1721 = load i64* %428, align 8
  %bf.set7.i1722 = or i64 %bf.load.i1721, 4194560
  store i64 %bf.set7.i1722, i64* %428, align 8
  %public_flag.i1723 = getelementptr inbounds %union.tree_node* %call2.i1719, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i1724 = load i32* %public_flag.i1723, align 8
  %bf.set10.i1725 = or i32 %bf.load8.i1724, 524288
  store i32 %bf.set10.i1725, i32* %public_flag.i1723, align 8
  %rtl.i1726 = getelementptr inbounds %union.tree_node* %call2.i1719, i64 0, i32 0, i32 17
  %429 = load %struct.rtx_def** %rtl.i1726, align 8, !tbaa !32
  %tobool.i1727 = icmp eq %struct.rtx_def* %429, null
  br i1 %tobool.i1727, label %cond.false.i1728, label %init_one_libfunc.exit1732

cond.false.i1728:                                 ; preds = %init_one_libfunc.exit1716
  tail call void @make_decl_rtl(%union.tree_node* %call2.i1719, i8* null) #3
  %430 = load %struct.rtx_def** %rtl.i1726, align 8, !tbaa !32
  br label %init_one_libfunc.exit1732

init_one_libfunc.exit1732:                        ; preds = %init_one_libfunc.exit1716, %cond.false.i1728
  %cond.i1729 = phi %struct.rtx_def* [ %430, %cond.false.i1728 ], [ %429, %init_one_libfunc.exit1716 ]
  %arrayidx.i1730 = getelementptr inbounds %struct.rtx_def* %cond.i1729, i64 0, i32 1, i64 0
  %rtx.i1731 = bitcast %union.rtunion_def* %arrayidx.i1730 to %struct.rtx_def**
  %431 = load %struct.rtx_def** %rtx.i1731, align 8, !tbaa !1
  store %struct.rtx_def* %431, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 56), align 16, !tbaa !1
  %call.i1733 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([8 x i8]* @.str88, i64 0, i64 0)) #3
  %432 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i1734 = tail call %union.tree_node* @build_function_type(%union.tree_node* %432, %union.tree_node* null) #3
  %call2.i1735 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i1733, %union.tree_node* %call1.i1734) #3
  %artificial_flag.i1736 = getelementptr inbounds %union.tree_node* %call2.i1735, i64 0, i32 0, i32 5
  %433 = bitcast i48* %artificial_flag.i1736 to i64*
  %bf.load.i1737 = load i64* %433, align 8
  %bf.set7.i1738 = or i64 %bf.load.i1737, 4194560
  store i64 %bf.set7.i1738, i64* %433, align 8
  %public_flag.i1739 = getelementptr inbounds %union.tree_node* %call2.i1735, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i1740 = load i32* %public_flag.i1739, align 8
  %bf.set10.i1741 = or i32 %bf.load8.i1740, 524288
  store i32 %bf.set10.i1741, i32* %public_flag.i1739, align 8
  %rtl.i1742 = getelementptr inbounds %union.tree_node* %call2.i1735, i64 0, i32 0, i32 17
  %434 = load %struct.rtx_def** %rtl.i1742, align 8, !tbaa !32
  %tobool.i1743 = icmp eq %struct.rtx_def* %434, null
  br i1 %tobool.i1743, label %cond.false.i1744, label %init_one_libfunc.exit1748

cond.false.i1744:                                 ; preds = %init_one_libfunc.exit1732
  tail call void @make_decl_rtl(%union.tree_node* %call2.i1735, i8* null) #3
  %435 = load %struct.rtx_def** %rtl.i1742, align 8, !tbaa !32
  br label %init_one_libfunc.exit1748

init_one_libfunc.exit1748:                        ; preds = %init_one_libfunc.exit1732, %cond.false.i1744
  %cond.i1745 = phi %struct.rtx_def* [ %435, %cond.false.i1744 ], [ %434, %init_one_libfunc.exit1732 ]
  %arrayidx.i1746 = getelementptr inbounds %struct.rtx_def* %cond.i1745, i64 0, i32 1, i64 0
  %rtx.i1747 = bitcast %union.rtunion_def* %arrayidx.i1746 to %struct.rtx_def**
  %436 = load %struct.rtx_def** %rtx.i1747, align 8, !tbaa !1
  store %struct.rtx_def* %436, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 57), align 8, !tbaa !1
  %call.i1749 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([11 x i8]* @.str89, i64 0, i64 0)) #3
  %437 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i1750 = tail call %union.tree_node* @build_function_type(%union.tree_node* %437, %union.tree_node* null) #3
  %call2.i1751 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i1749, %union.tree_node* %call1.i1750) #3
  %artificial_flag.i1752 = getelementptr inbounds %union.tree_node* %call2.i1751, i64 0, i32 0, i32 5
  %438 = bitcast i48* %artificial_flag.i1752 to i64*
  %bf.load.i1753 = load i64* %438, align 8
  %bf.set7.i1754 = or i64 %bf.load.i1753, 4194560
  store i64 %bf.set7.i1754, i64* %438, align 8
  %public_flag.i1755 = getelementptr inbounds %union.tree_node* %call2.i1751, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i1756 = load i32* %public_flag.i1755, align 8
  %bf.set10.i1757 = or i32 %bf.load8.i1756, 524288
  store i32 %bf.set10.i1757, i32* %public_flag.i1755, align 8
  %rtl.i1758 = getelementptr inbounds %union.tree_node* %call2.i1751, i64 0, i32 0, i32 17
  %439 = load %struct.rtx_def** %rtl.i1758, align 8, !tbaa !32
  %tobool.i1759 = icmp eq %struct.rtx_def* %439, null
  br i1 %tobool.i1759, label %cond.false.i1760, label %init_one_libfunc.exit1764

cond.false.i1760:                                 ; preds = %init_one_libfunc.exit1748
  tail call void @make_decl_rtl(%union.tree_node* %call2.i1751, i8* null) #3
  %440 = load %struct.rtx_def** %rtl.i1758, align 8, !tbaa !32
  br label %init_one_libfunc.exit1764

init_one_libfunc.exit1764:                        ; preds = %init_one_libfunc.exit1748, %cond.false.i1760
  %cond.i1761 = phi %struct.rtx_def* [ %440, %cond.false.i1760 ], [ %439, %init_one_libfunc.exit1748 ]
  %arrayidx.i1762 = getelementptr inbounds %struct.rtx_def* %cond.i1761, i64 0, i32 1, i64 0
  %rtx.i1763 = bitcast %union.rtunion_def* %arrayidx.i1762 to %struct.rtx_def**
  %441 = load %struct.rtx_def** %rtx.i1763, align 8, !tbaa !1
  store %struct.rtx_def* %441, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 58), align 16, !tbaa !1
  %call.i1765 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([12 x i8]* @.str90, i64 0, i64 0)) #3
  %442 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i1766 = tail call %union.tree_node* @build_function_type(%union.tree_node* %442, %union.tree_node* null) #3
  %call2.i1767 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i1765, %union.tree_node* %call1.i1766) #3
  %artificial_flag.i1768 = getelementptr inbounds %union.tree_node* %call2.i1767, i64 0, i32 0, i32 5
  %443 = bitcast i48* %artificial_flag.i1768 to i64*
  %bf.load.i1769 = load i64* %443, align 8
  %bf.set7.i1770 = or i64 %bf.load.i1769, 4194560
  store i64 %bf.set7.i1770, i64* %443, align 8
  %public_flag.i1771 = getelementptr inbounds %union.tree_node* %call2.i1767, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i1772 = load i32* %public_flag.i1771, align 8
  %bf.set10.i1773 = or i32 %bf.load8.i1772, 524288
  store i32 %bf.set10.i1773, i32* %public_flag.i1771, align 8
  %rtl.i1774 = getelementptr inbounds %union.tree_node* %call2.i1767, i64 0, i32 0, i32 17
  %444 = load %struct.rtx_def** %rtl.i1774, align 8, !tbaa !32
  %tobool.i1775 = icmp eq %struct.rtx_def* %444, null
  br i1 %tobool.i1775, label %cond.false.i1776, label %init_one_libfunc.exit1780

cond.false.i1776:                                 ; preds = %init_one_libfunc.exit1764
  tail call void @make_decl_rtl(%union.tree_node* %call2.i1767, i8* null) #3
  %445 = load %struct.rtx_def** %rtl.i1774, align 8, !tbaa !32
  br label %init_one_libfunc.exit1780

init_one_libfunc.exit1780:                        ; preds = %init_one_libfunc.exit1764, %cond.false.i1776
  %cond.i1777 = phi %struct.rtx_def* [ %445, %cond.false.i1776 ], [ %444, %init_one_libfunc.exit1764 ]
  %arrayidx.i1778 = getelementptr inbounds %struct.rtx_def* %cond.i1777, i64 0, i32 1, i64 0
  %rtx.i1779 = bitcast %union.rtunion_def* %arrayidx.i1778 to %struct.rtx_def**
  %446 = load %struct.rtx_def** %rtx.i1779, align 8, !tbaa !1
  store %struct.rtx_def* %446, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 59), align 8, !tbaa !1
  %call.i1781 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([12 x i8]* @.str91, i64 0, i64 0)) #3
  %447 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i1782 = tail call %union.tree_node* @build_function_type(%union.tree_node* %447, %union.tree_node* null) #3
  %call2.i1783 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i1781, %union.tree_node* %call1.i1782) #3
  %artificial_flag.i1784 = getelementptr inbounds %union.tree_node* %call2.i1783, i64 0, i32 0, i32 5
  %448 = bitcast i48* %artificial_flag.i1784 to i64*
  %bf.load.i1785 = load i64* %448, align 8
  %bf.set7.i1786 = or i64 %bf.load.i1785, 4194560
  store i64 %bf.set7.i1786, i64* %448, align 8
  %public_flag.i1787 = getelementptr inbounds %union.tree_node* %call2.i1783, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i1788 = load i32* %public_flag.i1787, align 8
  %bf.set10.i1789 = or i32 %bf.load8.i1788, 524288
  store i32 %bf.set10.i1789, i32* %public_flag.i1787, align 8
  %rtl.i1790 = getelementptr inbounds %union.tree_node* %call2.i1783, i64 0, i32 0, i32 17
  %449 = load %struct.rtx_def** %rtl.i1790, align 8, !tbaa !32
  %tobool.i1791 = icmp eq %struct.rtx_def* %449, null
  br i1 %tobool.i1791, label %cond.false.i1792, label %init_one_libfunc.exit1796

cond.false.i1792:                                 ; preds = %init_one_libfunc.exit1780
  tail call void @make_decl_rtl(%union.tree_node* %call2.i1783, i8* null) #3
  %450 = load %struct.rtx_def** %rtl.i1790, align 8, !tbaa !32
  br label %init_one_libfunc.exit1796

init_one_libfunc.exit1796:                        ; preds = %init_one_libfunc.exit1780, %cond.false.i1792
  %cond.i1793 = phi %struct.rtx_def* [ %450, %cond.false.i1792 ], [ %449, %init_one_libfunc.exit1780 ]
  %arrayidx.i1794 = getelementptr inbounds %struct.rtx_def* %cond.i1793, i64 0, i32 1, i64 0
  %rtx.i1795 = bitcast %union.rtunion_def* %arrayidx.i1794 to %struct.rtx_def**
  %451 = load %struct.rtx_def** %rtx.i1795, align 8, !tbaa !1
  store %struct.rtx_def* %451, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 60), align 16, !tbaa !1
  %call.i1797 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([12 x i8]* @.str92, i64 0, i64 0)) #3
  %452 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i1798 = tail call %union.tree_node* @build_function_type(%union.tree_node* %452, %union.tree_node* null) #3
  %call2.i1799 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i1797, %union.tree_node* %call1.i1798) #3
  %artificial_flag.i1800 = getelementptr inbounds %union.tree_node* %call2.i1799, i64 0, i32 0, i32 5
  %453 = bitcast i48* %artificial_flag.i1800 to i64*
  %bf.load.i1801 = load i64* %453, align 8
  %bf.set7.i1802 = or i64 %bf.load.i1801, 4194560
  store i64 %bf.set7.i1802, i64* %453, align 8
  %public_flag.i1803 = getelementptr inbounds %union.tree_node* %call2.i1799, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i1804 = load i32* %public_flag.i1803, align 8
  %bf.set10.i1805 = or i32 %bf.load8.i1804, 524288
  store i32 %bf.set10.i1805, i32* %public_flag.i1803, align 8
  %rtl.i1806 = getelementptr inbounds %union.tree_node* %call2.i1799, i64 0, i32 0, i32 17
  %454 = load %struct.rtx_def** %rtl.i1806, align 8, !tbaa !32
  %tobool.i1807 = icmp eq %struct.rtx_def* %454, null
  br i1 %tobool.i1807, label %cond.false.i1808, label %init_one_libfunc.exit1812

cond.false.i1808:                                 ; preds = %init_one_libfunc.exit1796
  tail call void @make_decl_rtl(%union.tree_node* %call2.i1799, i8* null) #3
  %455 = load %struct.rtx_def** %rtl.i1806, align 8, !tbaa !32
  br label %init_one_libfunc.exit1812

init_one_libfunc.exit1812:                        ; preds = %init_one_libfunc.exit1796, %cond.false.i1808
  %cond.i1809 = phi %struct.rtx_def* [ %455, %cond.false.i1808 ], [ %454, %init_one_libfunc.exit1796 ]
  %arrayidx.i1810 = getelementptr inbounds %struct.rtx_def* %cond.i1809, i64 0, i32 1, i64 0
  %rtx.i1811 = bitcast %union.rtunion_def* %arrayidx.i1810 to %struct.rtx_def**
  %456 = load %struct.rtx_def** %rtx.i1811, align 8, !tbaa !1
  store %struct.rtx_def* %456, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 61), align 8, !tbaa !1
  %call.i1813 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([12 x i8]* @.str93, i64 0, i64 0)) #3
  %457 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i1814 = tail call %union.tree_node* @build_function_type(%union.tree_node* %457, %union.tree_node* null) #3
  %call2.i1815 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i1813, %union.tree_node* %call1.i1814) #3
  %artificial_flag.i1816 = getelementptr inbounds %union.tree_node* %call2.i1815, i64 0, i32 0, i32 5
  %458 = bitcast i48* %artificial_flag.i1816 to i64*
  %bf.load.i1817 = load i64* %458, align 8
  %bf.set7.i1818 = or i64 %bf.load.i1817, 4194560
  store i64 %bf.set7.i1818, i64* %458, align 8
  %public_flag.i1819 = getelementptr inbounds %union.tree_node* %call2.i1815, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i1820 = load i32* %public_flag.i1819, align 8
  %bf.set10.i1821 = or i32 %bf.load8.i1820, 524288
  store i32 %bf.set10.i1821, i32* %public_flag.i1819, align 8
  %rtl.i1822 = getelementptr inbounds %union.tree_node* %call2.i1815, i64 0, i32 0, i32 17
  %459 = load %struct.rtx_def** %rtl.i1822, align 8, !tbaa !32
  %tobool.i1823 = icmp eq %struct.rtx_def* %459, null
  br i1 %tobool.i1823, label %cond.false.i1824, label %init_one_libfunc.exit1828

cond.false.i1824:                                 ; preds = %init_one_libfunc.exit1812
  tail call void @make_decl_rtl(%union.tree_node* %call2.i1815, i8* null) #3
  %460 = load %struct.rtx_def** %rtl.i1822, align 8, !tbaa !32
  br label %init_one_libfunc.exit1828

init_one_libfunc.exit1828:                        ; preds = %init_one_libfunc.exit1812, %cond.false.i1824
  %cond.i1825 = phi %struct.rtx_def* [ %460, %cond.false.i1824 ], [ %459, %init_one_libfunc.exit1812 ]
  %arrayidx.i1826 = getelementptr inbounds %struct.rtx_def* %cond.i1825, i64 0, i32 1, i64 0
  %rtx.i1827 = bitcast %union.rtunion_def* %arrayidx.i1826 to %struct.rtx_def**
  %461 = load %struct.rtx_def** %rtx.i1827, align 8, !tbaa !1
  store %struct.rtx_def* %461, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 62), align 16, !tbaa !1
  %call.i1829 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([12 x i8]* @.str94, i64 0, i64 0)) #3
  %462 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i1830 = tail call %union.tree_node* @build_function_type(%union.tree_node* %462, %union.tree_node* null) #3
  %call2.i1831 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i1829, %union.tree_node* %call1.i1830) #3
  %artificial_flag.i1832 = getelementptr inbounds %union.tree_node* %call2.i1831, i64 0, i32 0, i32 5
  %463 = bitcast i48* %artificial_flag.i1832 to i64*
  %bf.load.i1833 = load i64* %463, align 8
  %bf.set7.i1834 = or i64 %bf.load.i1833, 4194560
  store i64 %bf.set7.i1834, i64* %463, align 8
  %public_flag.i1835 = getelementptr inbounds %union.tree_node* %call2.i1831, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i1836 = load i32* %public_flag.i1835, align 8
  %bf.set10.i1837 = or i32 %bf.load8.i1836, 524288
  store i32 %bf.set10.i1837, i32* %public_flag.i1835, align 8
  %rtl.i1838 = getelementptr inbounds %union.tree_node* %call2.i1831, i64 0, i32 0, i32 17
  %464 = load %struct.rtx_def** %rtl.i1838, align 8, !tbaa !32
  %tobool.i1839 = icmp eq %struct.rtx_def* %464, null
  br i1 %tobool.i1839, label %cond.false.i1840, label %init_one_libfunc.exit1844

cond.false.i1840:                                 ; preds = %init_one_libfunc.exit1828
  tail call void @make_decl_rtl(%union.tree_node* %call2.i1831, i8* null) #3
  %465 = load %struct.rtx_def** %rtl.i1838, align 8, !tbaa !32
  br label %init_one_libfunc.exit1844

init_one_libfunc.exit1844:                        ; preds = %init_one_libfunc.exit1828, %cond.false.i1840
  %cond.i1841 = phi %struct.rtx_def* [ %465, %cond.false.i1840 ], [ %464, %init_one_libfunc.exit1828 ]
  %arrayidx.i1842 = getelementptr inbounds %struct.rtx_def* %cond.i1841, i64 0, i32 1, i64 0
  %rtx.i1843 = bitcast %union.rtunion_def* %arrayidx.i1842 to %struct.rtx_def**
  %466 = load %struct.rtx_def** %rtx.i1843, align 8, !tbaa !1
  store %struct.rtx_def* %466, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 63), align 8, !tbaa !1
  %call.i1845 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([12 x i8]* @.str95, i64 0, i64 0)) #3
  %467 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i1846 = tail call %union.tree_node* @build_function_type(%union.tree_node* %467, %union.tree_node* null) #3
  %call2.i1847 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i1845, %union.tree_node* %call1.i1846) #3
  %artificial_flag.i1848 = getelementptr inbounds %union.tree_node* %call2.i1847, i64 0, i32 0, i32 5
  %468 = bitcast i48* %artificial_flag.i1848 to i64*
  %bf.load.i1849 = load i64* %468, align 8
  %bf.set7.i1850 = or i64 %bf.load.i1849, 4194560
  store i64 %bf.set7.i1850, i64* %468, align 8
  %public_flag.i1851 = getelementptr inbounds %union.tree_node* %call2.i1847, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i1852 = load i32* %public_flag.i1851, align 8
  %bf.set10.i1853 = or i32 %bf.load8.i1852, 524288
  store i32 %bf.set10.i1853, i32* %public_flag.i1851, align 8
  %rtl.i1854 = getelementptr inbounds %union.tree_node* %call2.i1847, i64 0, i32 0, i32 17
  %469 = load %struct.rtx_def** %rtl.i1854, align 8, !tbaa !32
  %tobool.i1855 = icmp eq %struct.rtx_def* %469, null
  br i1 %tobool.i1855, label %cond.false.i1856, label %init_one_libfunc.exit1860

cond.false.i1856:                                 ; preds = %init_one_libfunc.exit1844
  tail call void @make_decl_rtl(%union.tree_node* %call2.i1847, i8* null) #3
  %470 = load %struct.rtx_def** %rtl.i1854, align 8, !tbaa !32
  br label %init_one_libfunc.exit1860

init_one_libfunc.exit1860:                        ; preds = %init_one_libfunc.exit1844, %cond.false.i1856
  %cond.i1857 = phi %struct.rtx_def* [ %470, %cond.false.i1856 ], [ %469, %init_one_libfunc.exit1844 ]
  %arrayidx.i1858 = getelementptr inbounds %struct.rtx_def* %cond.i1857, i64 0, i32 1, i64 0
  %rtx.i1859 = bitcast %union.rtunion_def* %arrayidx.i1858 to %struct.rtx_def**
  %471 = load %struct.rtx_def** %rtx.i1859, align 8, !tbaa !1
  store %struct.rtx_def* %471, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 64), align 16, !tbaa !1
  %call.i1861 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([12 x i8]* @.str96, i64 0, i64 0)) #3
  %472 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i1862 = tail call %union.tree_node* @build_function_type(%union.tree_node* %472, %union.tree_node* null) #3
  %call2.i1863 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i1861, %union.tree_node* %call1.i1862) #3
  %artificial_flag.i1864 = getelementptr inbounds %union.tree_node* %call2.i1863, i64 0, i32 0, i32 5
  %473 = bitcast i48* %artificial_flag.i1864 to i64*
  %bf.load.i1865 = load i64* %473, align 8
  %bf.set7.i1866 = or i64 %bf.load.i1865, 4194560
  store i64 %bf.set7.i1866, i64* %473, align 8
  %public_flag.i1867 = getelementptr inbounds %union.tree_node* %call2.i1863, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i1868 = load i32* %public_flag.i1867, align 8
  %bf.set10.i1869 = or i32 %bf.load8.i1868, 524288
  store i32 %bf.set10.i1869, i32* %public_flag.i1867, align 8
  %rtl.i1870 = getelementptr inbounds %union.tree_node* %call2.i1863, i64 0, i32 0, i32 17
  %474 = load %struct.rtx_def** %rtl.i1870, align 8, !tbaa !32
  %tobool.i1871 = icmp eq %struct.rtx_def* %474, null
  br i1 %tobool.i1871, label %cond.false.i1872, label %init_one_libfunc.exit1876

cond.false.i1872:                                 ; preds = %init_one_libfunc.exit1860
  tail call void @make_decl_rtl(%union.tree_node* %call2.i1863, i8* null) #3
  %475 = load %struct.rtx_def** %rtl.i1870, align 8, !tbaa !32
  br label %init_one_libfunc.exit1876

init_one_libfunc.exit1876:                        ; preds = %init_one_libfunc.exit1860, %cond.false.i1872
  %cond.i1873 = phi %struct.rtx_def* [ %475, %cond.false.i1872 ], [ %474, %init_one_libfunc.exit1860 ]
  %arrayidx.i1874 = getelementptr inbounds %struct.rtx_def* %cond.i1873, i64 0, i32 1, i64 0
  %rtx.i1875 = bitcast %union.rtunion_def* %arrayidx.i1874 to %struct.rtx_def**
  %476 = load %struct.rtx_def** %rtx.i1875, align 8, !tbaa !1
  store %struct.rtx_def* %476, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 65), align 8, !tbaa !1
  %call.i1877 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([12 x i8]* @.str97, i64 0, i64 0)) #3
  %477 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i1878 = tail call %union.tree_node* @build_function_type(%union.tree_node* %477, %union.tree_node* null) #3
  %call2.i1879 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i1877, %union.tree_node* %call1.i1878) #3
  %artificial_flag.i1880 = getelementptr inbounds %union.tree_node* %call2.i1879, i64 0, i32 0, i32 5
  %478 = bitcast i48* %artificial_flag.i1880 to i64*
  %bf.load.i1881 = load i64* %478, align 8
  %bf.set7.i1882 = or i64 %bf.load.i1881, 4194560
  store i64 %bf.set7.i1882, i64* %478, align 8
  %public_flag.i1883 = getelementptr inbounds %union.tree_node* %call2.i1879, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i1884 = load i32* %public_flag.i1883, align 8
  %bf.set10.i1885 = or i32 %bf.load8.i1884, 524288
  store i32 %bf.set10.i1885, i32* %public_flag.i1883, align 8
  %rtl.i1886 = getelementptr inbounds %union.tree_node* %call2.i1879, i64 0, i32 0, i32 17
  %479 = load %struct.rtx_def** %rtl.i1886, align 8, !tbaa !32
  %tobool.i1887 = icmp eq %struct.rtx_def* %479, null
  br i1 %tobool.i1887, label %cond.false.i1888, label %init_one_libfunc.exit1892

cond.false.i1888:                                 ; preds = %init_one_libfunc.exit1876
  tail call void @make_decl_rtl(%union.tree_node* %call2.i1879, i8* null) #3
  %480 = load %struct.rtx_def** %rtl.i1886, align 8, !tbaa !32
  br label %init_one_libfunc.exit1892

init_one_libfunc.exit1892:                        ; preds = %init_one_libfunc.exit1876, %cond.false.i1888
  %cond.i1889 = phi %struct.rtx_def* [ %480, %cond.false.i1888 ], [ %479, %init_one_libfunc.exit1876 ]
  %arrayidx.i1890 = getelementptr inbounds %struct.rtx_def* %cond.i1889, i64 0, i32 1, i64 0
  %rtx.i1891 = bitcast %union.rtunion_def* %arrayidx.i1890 to %struct.rtx_def**
  %481 = load %struct.rtx_def** %rtx.i1891, align 8, !tbaa !1
  store %struct.rtx_def* %481, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 66), align 16, !tbaa !1
  %call.i1893 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([12 x i8]* @.str98, i64 0, i64 0)) #3
  %482 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i1894 = tail call %union.tree_node* @build_function_type(%union.tree_node* %482, %union.tree_node* null) #3
  %call2.i1895 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i1893, %union.tree_node* %call1.i1894) #3
  %artificial_flag.i1896 = getelementptr inbounds %union.tree_node* %call2.i1895, i64 0, i32 0, i32 5
  %483 = bitcast i48* %artificial_flag.i1896 to i64*
  %bf.load.i1897 = load i64* %483, align 8
  %bf.set7.i1898 = or i64 %bf.load.i1897, 4194560
  store i64 %bf.set7.i1898, i64* %483, align 8
  %public_flag.i1899 = getelementptr inbounds %union.tree_node* %call2.i1895, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i1900 = load i32* %public_flag.i1899, align 8
  %bf.set10.i1901 = or i32 %bf.load8.i1900, 524288
  store i32 %bf.set10.i1901, i32* %public_flag.i1899, align 8
  %rtl.i1902 = getelementptr inbounds %union.tree_node* %call2.i1895, i64 0, i32 0, i32 17
  %484 = load %struct.rtx_def** %rtl.i1902, align 8, !tbaa !32
  %tobool.i1903 = icmp eq %struct.rtx_def* %484, null
  br i1 %tobool.i1903, label %cond.false.i1904, label %init_one_libfunc.exit1908

cond.false.i1904:                                 ; preds = %init_one_libfunc.exit1892
  tail call void @make_decl_rtl(%union.tree_node* %call2.i1895, i8* null) #3
  %485 = load %struct.rtx_def** %rtl.i1902, align 8, !tbaa !32
  br label %init_one_libfunc.exit1908

init_one_libfunc.exit1908:                        ; preds = %init_one_libfunc.exit1892, %cond.false.i1904
  %cond.i1905 = phi %struct.rtx_def* [ %485, %cond.false.i1904 ], [ %484, %init_one_libfunc.exit1892 ]
  %arrayidx.i1906 = getelementptr inbounds %struct.rtx_def* %cond.i1905, i64 0, i32 1, i64 0
  %rtx.i1907 = bitcast %union.rtunion_def* %arrayidx.i1906 to %struct.rtx_def**
  %486 = load %struct.rtx_def** %rtx.i1907, align 8, !tbaa !1
  store %struct.rtx_def* %486, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 67), align 8, !tbaa !1
  %call.i1909 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([12 x i8]* @.str99, i64 0, i64 0)) #3
  %487 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i1910 = tail call %union.tree_node* @build_function_type(%union.tree_node* %487, %union.tree_node* null) #3
  %call2.i1911 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i1909, %union.tree_node* %call1.i1910) #3
  %artificial_flag.i1912 = getelementptr inbounds %union.tree_node* %call2.i1911, i64 0, i32 0, i32 5
  %488 = bitcast i48* %artificial_flag.i1912 to i64*
  %bf.load.i1913 = load i64* %488, align 8
  %bf.set7.i1914 = or i64 %bf.load.i1913, 4194560
  store i64 %bf.set7.i1914, i64* %488, align 8
  %public_flag.i1915 = getelementptr inbounds %union.tree_node* %call2.i1911, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i1916 = load i32* %public_flag.i1915, align 8
  %bf.set10.i1917 = or i32 %bf.load8.i1916, 524288
  store i32 %bf.set10.i1917, i32* %public_flag.i1915, align 8
  %rtl.i1918 = getelementptr inbounds %union.tree_node* %call2.i1911, i64 0, i32 0, i32 17
  %489 = load %struct.rtx_def** %rtl.i1918, align 8, !tbaa !32
  %tobool.i1919 = icmp eq %struct.rtx_def* %489, null
  br i1 %tobool.i1919, label %cond.false.i1920, label %init_one_libfunc.exit1924

cond.false.i1920:                                 ; preds = %init_one_libfunc.exit1908
  tail call void @make_decl_rtl(%union.tree_node* %call2.i1911, i8* null) #3
  %490 = load %struct.rtx_def** %rtl.i1918, align 8, !tbaa !32
  br label %init_one_libfunc.exit1924

init_one_libfunc.exit1924:                        ; preds = %init_one_libfunc.exit1908, %cond.false.i1920
  %cond.i1921 = phi %struct.rtx_def* [ %490, %cond.false.i1920 ], [ %489, %init_one_libfunc.exit1908 ]
  %arrayidx.i1922 = getelementptr inbounds %struct.rtx_def* %cond.i1921, i64 0, i32 1, i64 0
  %rtx.i1923 = bitcast %union.rtunion_def* %arrayidx.i1922 to %struct.rtx_def**
  %491 = load %struct.rtx_def** %rtx.i1923, align 8, !tbaa !1
  store %struct.rtx_def* %491, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 68), align 16, !tbaa !1
  %call.i1925 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([12 x i8]* @.str100, i64 0, i64 0)) #3
  %492 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i1926 = tail call %union.tree_node* @build_function_type(%union.tree_node* %492, %union.tree_node* null) #3
  %call2.i1927 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i1925, %union.tree_node* %call1.i1926) #3
  %artificial_flag.i1928 = getelementptr inbounds %union.tree_node* %call2.i1927, i64 0, i32 0, i32 5
  %493 = bitcast i48* %artificial_flag.i1928 to i64*
  %bf.load.i1929 = load i64* %493, align 8
  %bf.set7.i1930 = or i64 %bf.load.i1929, 4194560
  store i64 %bf.set7.i1930, i64* %493, align 8
  %public_flag.i1931 = getelementptr inbounds %union.tree_node* %call2.i1927, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i1932 = load i32* %public_flag.i1931, align 8
  %bf.set10.i1933 = or i32 %bf.load8.i1932, 524288
  store i32 %bf.set10.i1933, i32* %public_flag.i1931, align 8
  %rtl.i1934 = getelementptr inbounds %union.tree_node* %call2.i1927, i64 0, i32 0, i32 17
  %494 = load %struct.rtx_def** %rtl.i1934, align 8, !tbaa !32
  %tobool.i1935 = icmp eq %struct.rtx_def* %494, null
  br i1 %tobool.i1935, label %cond.false.i1936, label %init_one_libfunc.exit1940

cond.false.i1936:                                 ; preds = %init_one_libfunc.exit1924
  tail call void @make_decl_rtl(%union.tree_node* %call2.i1927, i8* null) #3
  %495 = load %struct.rtx_def** %rtl.i1934, align 8, !tbaa !32
  br label %init_one_libfunc.exit1940

init_one_libfunc.exit1940:                        ; preds = %init_one_libfunc.exit1924, %cond.false.i1936
  %cond.i1937 = phi %struct.rtx_def* [ %495, %cond.false.i1936 ], [ %494, %init_one_libfunc.exit1924 ]
  %arrayidx.i1938 = getelementptr inbounds %struct.rtx_def* %cond.i1937, i64 0, i32 1, i64 0
  %rtx.i1939 = bitcast %union.rtunion_def* %arrayidx.i1938 to %struct.rtx_def**
  %496 = load %struct.rtx_def** %rtx.i1939, align 8, !tbaa !1
  store %struct.rtx_def* %496, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 69), align 8, !tbaa !1
  %call.i1941 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([12 x i8]* @.str101, i64 0, i64 0)) #3
  %497 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i1942 = tail call %union.tree_node* @build_function_type(%union.tree_node* %497, %union.tree_node* null) #3
  %call2.i1943 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i1941, %union.tree_node* %call1.i1942) #3
  %artificial_flag.i1944 = getelementptr inbounds %union.tree_node* %call2.i1943, i64 0, i32 0, i32 5
  %498 = bitcast i48* %artificial_flag.i1944 to i64*
  %bf.load.i1945 = load i64* %498, align 8
  %bf.set7.i1946 = or i64 %bf.load.i1945, 4194560
  store i64 %bf.set7.i1946, i64* %498, align 8
  %public_flag.i1947 = getelementptr inbounds %union.tree_node* %call2.i1943, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i1948 = load i32* %public_flag.i1947, align 8
  %bf.set10.i1949 = or i32 %bf.load8.i1948, 524288
  store i32 %bf.set10.i1949, i32* %public_flag.i1947, align 8
  %rtl.i1950 = getelementptr inbounds %union.tree_node* %call2.i1943, i64 0, i32 0, i32 17
  %499 = load %struct.rtx_def** %rtl.i1950, align 8, !tbaa !32
  %tobool.i1951 = icmp eq %struct.rtx_def* %499, null
  br i1 %tobool.i1951, label %cond.false.i1952, label %init_one_libfunc.exit1956

cond.false.i1952:                                 ; preds = %init_one_libfunc.exit1940
  tail call void @make_decl_rtl(%union.tree_node* %call2.i1943, i8* null) #3
  %500 = load %struct.rtx_def** %rtl.i1950, align 8, !tbaa !32
  br label %init_one_libfunc.exit1956

init_one_libfunc.exit1956:                        ; preds = %init_one_libfunc.exit1940, %cond.false.i1952
  %cond.i1953 = phi %struct.rtx_def* [ %500, %cond.false.i1952 ], [ %499, %init_one_libfunc.exit1940 ]
  %arrayidx.i1954 = getelementptr inbounds %struct.rtx_def* %cond.i1953, i64 0, i32 1, i64 0
  %rtx.i1955 = bitcast %union.rtunion_def* %arrayidx.i1954 to %struct.rtx_def**
  %501 = load %struct.rtx_def** %rtx.i1955, align 8, !tbaa !1
  store %struct.rtx_def* %501, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 70), align 16, !tbaa !1
  %call.i1957 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([10 x i8]* @.str102, i64 0, i64 0)) #3
  %502 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i1958 = tail call %union.tree_node* @build_function_type(%union.tree_node* %502, %union.tree_node* null) #3
  %call2.i1959 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i1957, %union.tree_node* %call1.i1958) #3
  %artificial_flag.i1960 = getelementptr inbounds %union.tree_node* %call2.i1959, i64 0, i32 0, i32 5
  %503 = bitcast i48* %artificial_flag.i1960 to i64*
  %bf.load.i1961 = load i64* %503, align 8
  %bf.set7.i1962 = or i64 %bf.load.i1961, 4194560
  store i64 %bf.set7.i1962, i64* %503, align 8
  %public_flag.i1963 = getelementptr inbounds %union.tree_node* %call2.i1959, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i1964 = load i32* %public_flag.i1963, align 8
  %bf.set10.i1965 = or i32 %bf.load8.i1964, 524288
  store i32 %bf.set10.i1965, i32* %public_flag.i1963, align 8
  %rtl.i1966 = getelementptr inbounds %union.tree_node* %call2.i1959, i64 0, i32 0, i32 17
  %504 = load %struct.rtx_def** %rtl.i1966, align 8, !tbaa !32
  %tobool.i1967 = icmp eq %struct.rtx_def* %504, null
  br i1 %tobool.i1967, label %cond.false.i1968, label %init_one_libfunc.exit1972

cond.false.i1968:                                 ; preds = %init_one_libfunc.exit1956
  tail call void @make_decl_rtl(%union.tree_node* %call2.i1959, i8* null) #3
  %505 = load %struct.rtx_def** %rtl.i1966, align 8, !tbaa !32
  br label %init_one_libfunc.exit1972

init_one_libfunc.exit1972:                        ; preds = %init_one_libfunc.exit1956, %cond.false.i1968
  %cond.i1969 = phi %struct.rtx_def* [ %505, %cond.false.i1968 ], [ %504, %init_one_libfunc.exit1956 ]
  %arrayidx.i1970 = getelementptr inbounds %struct.rtx_def* %cond.i1969, i64 0, i32 1, i64 0
  %rtx.i1971 = bitcast %union.rtunion_def* %arrayidx.i1970 to %struct.rtx_def**
  %506 = load %struct.rtx_def** %rtx.i1971, align 8, !tbaa !1
  store %struct.rtx_def* %506, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 71), align 8, !tbaa !1
  %call.i1973 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([10 x i8]* @.str103, i64 0, i64 0)) #3
  %507 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i1974 = tail call %union.tree_node* @build_function_type(%union.tree_node* %507, %union.tree_node* null) #3
  %call2.i1975 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i1973, %union.tree_node* %call1.i1974) #3
  %artificial_flag.i1976 = getelementptr inbounds %union.tree_node* %call2.i1975, i64 0, i32 0, i32 5
  %508 = bitcast i48* %artificial_flag.i1976 to i64*
  %bf.load.i1977 = load i64* %508, align 8
  %bf.set7.i1978 = or i64 %bf.load.i1977, 4194560
  store i64 %bf.set7.i1978, i64* %508, align 8
  %public_flag.i1979 = getelementptr inbounds %union.tree_node* %call2.i1975, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i1980 = load i32* %public_flag.i1979, align 8
  %bf.set10.i1981 = or i32 %bf.load8.i1980, 524288
  store i32 %bf.set10.i1981, i32* %public_flag.i1979, align 8
  %rtl.i1982 = getelementptr inbounds %union.tree_node* %call2.i1975, i64 0, i32 0, i32 17
  %509 = load %struct.rtx_def** %rtl.i1982, align 8, !tbaa !32
  %tobool.i1983 = icmp eq %struct.rtx_def* %509, null
  br i1 %tobool.i1983, label %cond.false.i1984, label %init_one_libfunc.exit1988

cond.false.i1984:                                 ; preds = %init_one_libfunc.exit1972
  tail call void @make_decl_rtl(%union.tree_node* %call2.i1975, i8* null) #3
  %510 = load %struct.rtx_def** %rtl.i1982, align 8, !tbaa !32
  br label %init_one_libfunc.exit1988

init_one_libfunc.exit1988:                        ; preds = %init_one_libfunc.exit1972, %cond.false.i1984
  %cond.i1985 = phi %struct.rtx_def* [ %510, %cond.false.i1984 ], [ %509, %init_one_libfunc.exit1972 ]
  %arrayidx.i1986 = getelementptr inbounds %struct.rtx_def* %cond.i1985, i64 0, i32 1, i64 0
  %rtx.i1987 = bitcast %union.rtunion_def* %arrayidx.i1986 to %struct.rtx_def**
  %511 = load %struct.rtx_def** %rtx.i1987, align 8, !tbaa !1
  store %struct.rtx_def* %511, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 72), align 16, !tbaa !1
  %call.i1989 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([10 x i8]* @.str104, i64 0, i64 0)) #3
  %512 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i1990 = tail call %union.tree_node* @build_function_type(%union.tree_node* %512, %union.tree_node* null) #3
  %call2.i1991 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i1989, %union.tree_node* %call1.i1990) #3
  %artificial_flag.i1992 = getelementptr inbounds %union.tree_node* %call2.i1991, i64 0, i32 0, i32 5
  %513 = bitcast i48* %artificial_flag.i1992 to i64*
  %bf.load.i1993 = load i64* %513, align 8
  %bf.set7.i1994 = or i64 %bf.load.i1993, 4194560
  store i64 %bf.set7.i1994, i64* %513, align 8
  %public_flag.i1995 = getelementptr inbounds %union.tree_node* %call2.i1991, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i1996 = load i32* %public_flag.i1995, align 8
  %bf.set10.i1997 = or i32 %bf.load8.i1996, 524288
  store i32 %bf.set10.i1997, i32* %public_flag.i1995, align 8
  %rtl.i1998 = getelementptr inbounds %union.tree_node* %call2.i1991, i64 0, i32 0, i32 17
  %514 = load %struct.rtx_def** %rtl.i1998, align 8, !tbaa !32
  %tobool.i1999 = icmp eq %struct.rtx_def* %514, null
  br i1 %tobool.i1999, label %cond.false.i2000, label %init_one_libfunc.exit2004

cond.false.i2000:                                 ; preds = %init_one_libfunc.exit1988
  tail call void @make_decl_rtl(%union.tree_node* %call2.i1991, i8* null) #3
  %515 = load %struct.rtx_def** %rtl.i1998, align 8, !tbaa !32
  br label %init_one_libfunc.exit2004

init_one_libfunc.exit2004:                        ; preds = %init_one_libfunc.exit1988, %cond.false.i2000
  %cond.i2001 = phi %struct.rtx_def* [ %515, %cond.false.i2000 ], [ %514, %init_one_libfunc.exit1988 ]
  %arrayidx.i2002 = getelementptr inbounds %struct.rtx_def* %cond.i2001, i64 0, i32 1, i64 0
  %rtx.i2003 = bitcast %union.rtunion_def* %arrayidx.i2002 to %struct.rtx_def**
  %516 = load %struct.rtx_def** %rtx.i2003, align 8, !tbaa !1
  store %struct.rtx_def* %516, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 73), align 8, !tbaa !1
  %call.i2005 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([10 x i8]* @.str105, i64 0, i64 0)) #3
  %517 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i2006 = tail call %union.tree_node* @build_function_type(%union.tree_node* %517, %union.tree_node* null) #3
  %call2.i2007 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i2005, %union.tree_node* %call1.i2006) #3
  %artificial_flag.i2008 = getelementptr inbounds %union.tree_node* %call2.i2007, i64 0, i32 0, i32 5
  %518 = bitcast i48* %artificial_flag.i2008 to i64*
  %bf.load.i2009 = load i64* %518, align 8
  %bf.set7.i2010 = or i64 %bf.load.i2009, 4194560
  store i64 %bf.set7.i2010, i64* %518, align 8
  %public_flag.i2011 = getelementptr inbounds %union.tree_node* %call2.i2007, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i2012 = load i32* %public_flag.i2011, align 8
  %bf.set10.i2013 = or i32 %bf.load8.i2012, 524288
  store i32 %bf.set10.i2013, i32* %public_flag.i2011, align 8
  %rtl.i2014 = getelementptr inbounds %union.tree_node* %call2.i2007, i64 0, i32 0, i32 17
  %519 = load %struct.rtx_def** %rtl.i2014, align 8, !tbaa !32
  %tobool.i2015 = icmp eq %struct.rtx_def* %519, null
  br i1 %tobool.i2015, label %cond.false.i2016, label %init_one_libfunc.exit2020

cond.false.i2016:                                 ; preds = %init_one_libfunc.exit2004
  tail call void @make_decl_rtl(%union.tree_node* %call2.i2007, i8* null) #3
  %520 = load %struct.rtx_def** %rtl.i2014, align 8, !tbaa !32
  br label %init_one_libfunc.exit2020

init_one_libfunc.exit2020:                        ; preds = %init_one_libfunc.exit2004, %cond.false.i2016
  %cond.i2017 = phi %struct.rtx_def* [ %520, %cond.false.i2016 ], [ %519, %init_one_libfunc.exit2004 ]
  %arrayidx.i2018 = getelementptr inbounds %struct.rtx_def* %cond.i2017, i64 0, i32 1, i64 0
  %rtx.i2019 = bitcast %union.rtunion_def* %arrayidx.i2018 to %struct.rtx_def**
  %521 = load %struct.rtx_def** %rtx.i2019, align 8, !tbaa !1
  store %struct.rtx_def* %521, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 74), align 16, !tbaa !1
  %call.i2021 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([10 x i8]* @.str106, i64 0, i64 0)) #3
  %522 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i2022 = tail call %union.tree_node* @build_function_type(%union.tree_node* %522, %union.tree_node* null) #3
  %call2.i2023 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i2021, %union.tree_node* %call1.i2022) #3
  %artificial_flag.i2024 = getelementptr inbounds %union.tree_node* %call2.i2023, i64 0, i32 0, i32 5
  %523 = bitcast i48* %artificial_flag.i2024 to i64*
  %bf.load.i2025 = load i64* %523, align 8
  %bf.set7.i2026 = or i64 %bf.load.i2025, 4194560
  store i64 %bf.set7.i2026, i64* %523, align 8
  %public_flag.i2027 = getelementptr inbounds %union.tree_node* %call2.i2023, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i2028 = load i32* %public_flag.i2027, align 8
  %bf.set10.i2029 = or i32 %bf.load8.i2028, 524288
  store i32 %bf.set10.i2029, i32* %public_flag.i2027, align 8
  %rtl.i2030 = getelementptr inbounds %union.tree_node* %call2.i2023, i64 0, i32 0, i32 17
  %524 = load %struct.rtx_def** %rtl.i2030, align 8, !tbaa !32
  %tobool.i2031 = icmp eq %struct.rtx_def* %524, null
  br i1 %tobool.i2031, label %cond.false.i2032, label %init_one_libfunc.exit2036

cond.false.i2032:                                 ; preds = %init_one_libfunc.exit2020
  tail call void @make_decl_rtl(%union.tree_node* %call2.i2023, i8* null) #3
  %525 = load %struct.rtx_def** %rtl.i2030, align 8, !tbaa !32
  br label %init_one_libfunc.exit2036

init_one_libfunc.exit2036:                        ; preds = %init_one_libfunc.exit2020, %cond.false.i2032
  %cond.i2033 = phi %struct.rtx_def* [ %525, %cond.false.i2032 ], [ %524, %init_one_libfunc.exit2020 ]
  %arrayidx.i2034 = getelementptr inbounds %struct.rtx_def* %cond.i2033, i64 0, i32 1, i64 0
  %rtx.i2035 = bitcast %union.rtunion_def* %arrayidx.i2034 to %struct.rtx_def**
  %526 = load %struct.rtx_def** %rtx.i2035, align 8, !tbaa !1
  store %struct.rtx_def* %526, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 75), align 8, !tbaa !1
  %call.i2037 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([10 x i8]* @.str107, i64 0, i64 0)) #3
  %527 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i2038 = tail call %union.tree_node* @build_function_type(%union.tree_node* %527, %union.tree_node* null) #3
  %call2.i2039 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i2037, %union.tree_node* %call1.i2038) #3
  %artificial_flag.i2040 = getelementptr inbounds %union.tree_node* %call2.i2039, i64 0, i32 0, i32 5
  %528 = bitcast i48* %artificial_flag.i2040 to i64*
  %bf.load.i2041 = load i64* %528, align 8
  %bf.set7.i2042 = or i64 %bf.load.i2041, 4194560
  store i64 %bf.set7.i2042, i64* %528, align 8
  %public_flag.i2043 = getelementptr inbounds %union.tree_node* %call2.i2039, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i2044 = load i32* %public_flag.i2043, align 8
  %bf.set10.i2045 = or i32 %bf.load8.i2044, 524288
  store i32 %bf.set10.i2045, i32* %public_flag.i2043, align 8
  %rtl.i2046 = getelementptr inbounds %union.tree_node* %call2.i2039, i64 0, i32 0, i32 17
  %529 = load %struct.rtx_def** %rtl.i2046, align 8, !tbaa !32
  %tobool.i2047 = icmp eq %struct.rtx_def* %529, null
  br i1 %tobool.i2047, label %cond.false.i2048, label %init_one_libfunc.exit2052

cond.false.i2048:                                 ; preds = %init_one_libfunc.exit2036
  tail call void @make_decl_rtl(%union.tree_node* %call2.i2039, i8* null) #3
  %530 = load %struct.rtx_def** %rtl.i2046, align 8, !tbaa !32
  br label %init_one_libfunc.exit2052

init_one_libfunc.exit2052:                        ; preds = %init_one_libfunc.exit2036, %cond.false.i2048
  %cond.i2049 = phi %struct.rtx_def* [ %530, %cond.false.i2048 ], [ %529, %init_one_libfunc.exit2036 ]
  %arrayidx.i2050 = getelementptr inbounds %struct.rtx_def* %cond.i2049, i64 0, i32 1, i64 0
  %rtx.i2051 = bitcast %union.rtunion_def* %arrayidx.i2050 to %struct.rtx_def**
  %531 = load %struct.rtx_def** %rtx.i2051, align 8, !tbaa !1
  store %struct.rtx_def* %531, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 76), align 16, !tbaa !1
  %call.i2053 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([10 x i8]* @.str108, i64 0, i64 0)) #3
  %532 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i2054 = tail call %union.tree_node* @build_function_type(%union.tree_node* %532, %union.tree_node* null) #3
  %call2.i2055 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i2053, %union.tree_node* %call1.i2054) #3
  %artificial_flag.i2056 = getelementptr inbounds %union.tree_node* %call2.i2055, i64 0, i32 0, i32 5
  %533 = bitcast i48* %artificial_flag.i2056 to i64*
  %bf.load.i2057 = load i64* %533, align 8
  %bf.set7.i2058 = or i64 %bf.load.i2057, 4194560
  store i64 %bf.set7.i2058, i64* %533, align 8
  %public_flag.i2059 = getelementptr inbounds %union.tree_node* %call2.i2055, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i2060 = load i32* %public_flag.i2059, align 8
  %bf.set10.i2061 = or i32 %bf.load8.i2060, 524288
  store i32 %bf.set10.i2061, i32* %public_flag.i2059, align 8
  %rtl.i2062 = getelementptr inbounds %union.tree_node* %call2.i2055, i64 0, i32 0, i32 17
  %534 = load %struct.rtx_def** %rtl.i2062, align 8, !tbaa !32
  %tobool.i2063 = icmp eq %struct.rtx_def* %534, null
  br i1 %tobool.i2063, label %cond.false.i2064, label %init_one_libfunc.exit2068

cond.false.i2064:                                 ; preds = %init_one_libfunc.exit2052
  tail call void @make_decl_rtl(%union.tree_node* %call2.i2055, i8* null) #3
  %535 = load %struct.rtx_def** %rtl.i2062, align 8, !tbaa !32
  br label %init_one_libfunc.exit2068

init_one_libfunc.exit2068:                        ; preds = %init_one_libfunc.exit2052, %cond.false.i2064
  %cond.i2065 = phi %struct.rtx_def* [ %535, %cond.false.i2064 ], [ %534, %init_one_libfunc.exit2052 ]
  %arrayidx.i2066 = getelementptr inbounds %struct.rtx_def* %cond.i2065, i64 0, i32 1, i64 0
  %rtx.i2067 = bitcast %union.rtunion_def* %arrayidx.i2066 to %struct.rtx_def**
  %536 = load %struct.rtx_def** %rtx.i2067, align 8, !tbaa !1
  store %struct.rtx_def* %536, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 77), align 8, !tbaa !1
  %call.i2069 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([10 x i8]* @.str109, i64 0, i64 0)) #3
  %537 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i2070 = tail call %union.tree_node* @build_function_type(%union.tree_node* %537, %union.tree_node* null) #3
  %call2.i2071 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i2069, %union.tree_node* %call1.i2070) #3
  %artificial_flag.i2072 = getelementptr inbounds %union.tree_node* %call2.i2071, i64 0, i32 0, i32 5
  %538 = bitcast i48* %artificial_flag.i2072 to i64*
  %bf.load.i2073 = load i64* %538, align 8
  %bf.set7.i2074 = or i64 %bf.load.i2073, 4194560
  store i64 %bf.set7.i2074, i64* %538, align 8
  %public_flag.i2075 = getelementptr inbounds %union.tree_node* %call2.i2071, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i2076 = load i32* %public_flag.i2075, align 8
  %bf.set10.i2077 = or i32 %bf.load8.i2076, 524288
  store i32 %bf.set10.i2077, i32* %public_flag.i2075, align 8
  %rtl.i2078 = getelementptr inbounds %union.tree_node* %call2.i2071, i64 0, i32 0, i32 17
  %539 = load %struct.rtx_def** %rtl.i2078, align 8, !tbaa !32
  %tobool.i2079 = icmp eq %struct.rtx_def* %539, null
  br i1 %tobool.i2079, label %cond.false.i2080, label %init_one_libfunc.exit2084

cond.false.i2080:                                 ; preds = %init_one_libfunc.exit2068
  tail call void @make_decl_rtl(%union.tree_node* %call2.i2071, i8* null) #3
  %540 = load %struct.rtx_def** %rtl.i2078, align 8, !tbaa !32
  br label %init_one_libfunc.exit2084

init_one_libfunc.exit2084:                        ; preds = %init_one_libfunc.exit2068, %cond.false.i2080
  %cond.i2081 = phi %struct.rtx_def* [ %540, %cond.false.i2080 ], [ %539, %init_one_libfunc.exit2068 ]
  %arrayidx.i2082 = getelementptr inbounds %struct.rtx_def* %cond.i2081, i64 0, i32 1, i64 0
  %rtx.i2083 = bitcast %union.rtunion_def* %arrayidx.i2082 to %struct.rtx_def**
  %541 = load %struct.rtx_def** %rtx.i2083, align 8, !tbaa !1
  store %struct.rtx_def* %541, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 78), align 16, !tbaa !1
  %call.i2085 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([10 x i8]* @.str110, i64 0, i64 0)) #3
  %542 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i2086 = tail call %union.tree_node* @build_function_type(%union.tree_node* %542, %union.tree_node* null) #3
  %call2.i2087 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i2085, %union.tree_node* %call1.i2086) #3
  %artificial_flag.i2088 = getelementptr inbounds %union.tree_node* %call2.i2087, i64 0, i32 0, i32 5
  %543 = bitcast i48* %artificial_flag.i2088 to i64*
  %bf.load.i2089 = load i64* %543, align 8
  %bf.set7.i2090 = or i64 %bf.load.i2089, 4194560
  store i64 %bf.set7.i2090, i64* %543, align 8
  %public_flag.i2091 = getelementptr inbounds %union.tree_node* %call2.i2087, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i2092 = load i32* %public_flag.i2091, align 8
  %bf.set10.i2093 = or i32 %bf.load8.i2092, 524288
  store i32 %bf.set10.i2093, i32* %public_flag.i2091, align 8
  %rtl.i2094 = getelementptr inbounds %union.tree_node* %call2.i2087, i64 0, i32 0, i32 17
  %544 = load %struct.rtx_def** %rtl.i2094, align 8, !tbaa !32
  %tobool.i2095 = icmp eq %struct.rtx_def* %544, null
  br i1 %tobool.i2095, label %cond.false.i2096, label %init_one_libfunc.exit2100

cond.false.i2096:                                 ; preds = %init_one_libfunc.exit2084
  tail call void @make_decl_rtl(%union.tree_node* %call2.i2087, i8* null) #3
  %545 = load %struct.rtx_def** %rtl.i2094, align 8, !tbaa !32
  br label %init_one_libfunc.exit2100

init_one_libfunc.exit2100:                        ; preds = %init_one_libfunc.exit2084, %cond.false.i2096
  %cond.i2097 = phi %struct.rtx_def* [ %545, %cond.false.i2096 ], [ %544, %init_one_libfunc.exit2084 ]
  %arrayidx.i2098 = getelementptr inbounds %struct.rtx_def* %cond.i2097, i64 0, i32 1, i64 0
  %rtx.i2099 = bitcast %union.rtunion_def* %arrayidx.i2098 to %struct.rtx_def**
  %546 = load %struct.rtx_def** %rtx.i2099, align 8, !tbaa !1
  store %struct.rtx_def* %546, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 79), align 8, !tbaa !1
  %call.i2101 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([10 x i8]* @.str111, i64 0, i64 0)) #3
  %547 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i2102 = tail call %union.tree_node* @build_function_type(%union.tree_node* %547, %union.tree_node* null) #3
  %call2.i2103 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i2101, %union.tree_node* %call1.i2102) #3
  %artificial_flag.i2104 = getelementptr inbounds %union.tree_node* %call2.i2103, i64 0, i32 0, i32 5
  %548 = bitcast i48* %artificial_flag.i2104 to i64*
  %bf.load.i2105 = load i64* %548, align 8
  %bf.set7.i2106 = or i64 %bf.load.i2105, 4194560
  store i64 %bf.set7.i2106, i64* %548, align 8
  %public_flag.i2107 = getelementptr inbounds %union.tree_node* %call2.i2103, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i2108 = load i32* %public_flag.i2107, align 8
  %bf.set10.i2109 = or i32 %bf.load8.i2108, 524288
  store i32 %bf.set10.i2109, i32* %public_flag.i2107, align 8
  %rtl.i2110 = getelementptr inbounds %union.tree_node* %call2.i2103, i64 0, i32 0, i32 17
  %549 = load %struct.rtx_def** %rtl.i2110, align 8, !tbaa !32
  %tobool.i2111 = icmp eq %struct.rtx_def* %549, null
  br i1 %tobool.i2111, label %cond.false.i2112, label %init_one_libfunc.exit2116

cond.false.i2112:                                 ; preds = %init_one_libfunc.exit2100
  tail call void @make_decl_rtl(%union.tree_node* %call2.i2103, i8* null) #3
  %550 = load %struct.rtx_def** %rtl.i2110, align 8, !tbaa !32
  br label %init_one_libfunc.exit2116

init_one_libfunc.exit2116:                        ; preds = %init_one_libfunc.exit2100, %cond.false.i2112
  %cond.i2113 = phi %struct.rtx_def* [ %550, %cond.false.i2112 ], [ %549, %init_one_libfunc.exit2100 ]
  %arrayidx.i2114 = getelementptr inbounds %struct.rtx_def* %cond.i2113, i64 0, i32 1, i64 0
  %rtx.i2115 = bitcast %union.rtunion_def* %arrayidx.i2114 to %struct.rtx_def**
  %551 = load %struct.rtx_def** %rtx.i2115, align 8, !tbaa !1
  store %struct.rtx_def* %551, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 80), align 16, !tbaa !1
  %call.i2117 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([10 x i8]* @.str112, i64 0, i64 0)) #3
  %552 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i2118 = tail call %union.tree_node* @build_function_type(%union.tree_node* %552, %union.tree_node* null) #3
  %call2.i2119 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i2117, %union.tree_node* %call1.i2118) #3
  %artificial_flag.i2120 = getelementptr inbounds %union.tree_node* %call2.i2119, i64 0, i32 0, i32 5
  %553 = bitcast i48* %artificial_flag.i2120 to i64*
  %bf.load.i2121 = load i64* %553, align 8
  %bf.set7.i2122 = or i64 %bf.load.i2121, 4194560
  store i64 %bf.set7.i2122, i64* %553, align 8
  %public_flag.i2123 = getelementptr inbounds %union.tree_node* %call2.i2119, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i2124 = load i32* %public_flag.i2123, align 8
  %bf.set10.i2125 = or i32 %bf.load8.i2124, 524288
  store i32 %bf.set10.i2125, i32* %public_flag.i2123, align 8
  %rtl.i2126 = getelementptr inbounds %union.tree_node* %call2.i2119, i64 0, i32 0, i32 17
  %554 = load %struct.rtx_def** %rtl.i2126, align 8, !tbaa !32
  %tobool.i2127 = icmp eq %struct.rtx_def* %554, null
  br i1 %tobool.i2127, label %cond.false.i2128, label %init_one_libfunc.exit2132

cond.false.i2128:                                 ; preds = %init_one_libfunc.exit2116
  tail call void @make_decl_rtl(%union.tree_node* %call2.i2119, i8* null) #3
  %555 = load %struct.rtx_def** %rtl.i2126, align 8, !tbaa !32
  br label %init_one_libfunc.exit2132

init_one_libfunc.exit2132:                        ; preds = %init_one_libfunc.exit2116, %cond.false.i2128
  %cond.i2129 = phi %struct.rtx_def* [ %555, %cond.false.i2128 ], [ %554, %init_one_libfunc.exit2116 ]
  %arrayidx.i2130 = getelementptr inbounds %struct.rtx_def* %cond.i2129, i64 0, i32 1, i64 0
  %rtx.i2131 = bitcast %union.rtunion_def* %arrayidx.i2130 to %struct.rtx_def**
  %556 = load %struct.rtx_def** %rtx.i2131, align 8, !tbaa !1
  store %struct.rtx_def* %556, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 81), align 8, !tbaa !1
  %call.i2133 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([10 x i8]* @.str113, i64 0, i64 0)) #3
  %557 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i2134 = tail call %union.tree_node* @build_function_type(%union.tree_node* %557, %union.tree_node* null) #3
  %call2.i2135 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i2133, %union.tree_node* %call1.i2134) #3
  %artificial_flag.i2136 = getelementptr inbounds %union.tree_node* %call2.i2135, i64 0, i32 0, i32 5
  %558 = bitcast i48* %artificial_flag.i2136 to i64*
  %bf.load.i2137 = load i64* %558, align 8
  %bf.set7.i2138 = or i64 %bf.load.i2137, 4194560
  store i64 %bf.set7.i2138, i64* %558, align 8
  %public_flag.i2139 = getelementptr inbounds %union.tree_node* %call2.i2135, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i2140 = load i32* %public_flag.i2139, align 8
  %bf.set10.i2141 = or i32 %bf.load8.i2140, 524288
  store i32 %bf.set10.i2141, i32* %public_flag.i2139, align 8
  %rtl.i2142 = getelementptr inbounds %union.tree_node* %call2.i2135, i64 0, i32 0, i32 17
  %559 = load %struct.rtx_def** %rtl.i2142, align 8, !tbaa !32
  %tobool.i2143 = icmp eq %struct.rtx_def* %559, null
  br i1 %tobool.i2143, label %cond.false.i2144, label %init_one_libfunc.exit2148

cond.false.i2144:                                 ; preds = %init_one_libfunc.exit2132
  tail call void @make_decl_rtl(%union.tree_node* %call2.i2135, i8* null) #3
  %560 = load %struct.rtx_def** %rtl.i2142, align 8, !tbaa !32
  br label %init_one_libfunc.exit2148

init_one_libfunc.exit2148:                        ; preds = %init_one_libfunc.exit2132, %cond.false.i2144
  %cond.i2145 = phi %struct.rtx_def* [ %560, %cond.false.i2144 ], [ %559, %init_one_libfunc.exit2132 ]
  %arrayidx.i2146 = getelementptr inbounds %struct.rtx_def* %cond.i2145, i64 0, i32 1, i64 0
  %rtx.i2147 = bitcast %union.rtunion_def* %arrayidx.i2146 to %struct.rtx_def**
  %561 = load %struct.rtx_def** %rtx.i2147, align 8, !tbaa !1
  store %struct.rtx_def* %561, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 82), align 16, !tbaa !1
  %call.i2149 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([13 x i8]* @.str114, i64 0, i64 0)) #3
  %562 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i2150 = tail call %union.tree_node* @build_function_type(%union.tree_node* %562, %union.tree_node* null) #3
  %call2.i2151 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i2149, %union.tree_node* %call1.i2150) #3
  %artificial_flag.i2152 = getelementptr inbounds %union.tree_node* %call2.i2151, i64 0, i32 0, i32 5
  %563 = bitcast i48* %artificial_flag.i2152 to i64*
  %bf.load.i2153 = load i64* %563, align 8
  %bf.set7.i2154 = or i64 %bf.load.i2153, 4194560
  store i64 %bf.set7.i2154, i64* %563, align 8
  %public_flag.i2155 = getelementptr inbounds %union.tree_node* %call2.i2151, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i2156 = load i32* %public_flag.i2155, align 8
  %bf.set10.i2157 = or i32 %bf.load8.i2156, 524288
  store i32 %bf.set10.i2157, i32* %public_flag.i2155, align 8
  %rtl.i2158 = getelementptr inbounds %union.tree_node* %call2.i2151, i64 0, i32 0, i32 17
  %564 = load %struct.rtx_def** %rtl.i2158, align 8, !tbaa !32
  %tobool.i2159 = icmp eq %struct.rtx_def* %564, null
  br i1 %tobool.i2159, label %cond.false.i2160, label %init_one_libfunc.exit2164

cond.false.i2160:                                 ; preds = %init_one_libfunc.exit2148
  tail call void @make_decl_rtl(%union.tree_node* %call2.i2151, i8* null) #3
  %565 = load %struct.rtx_def** %rtl.i2158, align 8, !tbaa !32
  br label %init_one_libfunc.exit2164

init_one_libfunc.exit2164:                        ; preds = %init_one_libfunc.exit2148, %cond.false.i2160
  %cond.i2161 = phi %struct.rtx_def* [ %565, %cond.false.i2160 ], [ %564, %init_one_libfunc.exit2148 ]
  %arrayidx.i2162 = getelementptr inbounds %struct.rtx_def* %cond.i2161, i64 0, i32 1, i64 0
  %rtx.i2163 = bitcast %union.rtunion_def* %arrayidx.i2162 to %struct.rtx_def**
  %566 = load %struct.rtx_def** %rtx.i2163, align 8, !tbaa !1
  store %struct.rtx_def* %566, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 83), align 8, !tbaa !1
  %call.i2165 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([13 x i8]* @.str115, i64 0, i64 0)) #3
  %567 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i2166 = tail call %union.tree_node* @build_function_type(%union.tree_node* %567, %union.tree_node* null) #3
  %call2.i2167 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i2165, %union.tree_node* %call1.i2166) #3
  %artificial_flag.i2168 = getelementptr inbounds %union.tree_node* %call2.i2167, i64 0, i32 0, i32 5
  %568 = bitcast i48* %artificial_flag.i2168 to i64*
  %bf.load.i2169 = load i64* %568, align 8
  %bf.set7.i2170 = or i64 %bf.load.i2169, 4194560
  store i64 %bf.set7.i2170, i64* %568, align 8
  %public_flag.i2171 = getelementptr inbounds %union.tree_node* %call2.i2167, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i2172 = load i32* %public_flag.i2171, align 8
  %bf.set10.i2173 = or i32 %bf.load8.i2172, 524288
  store i32 %bf.set10.i2173, i32* %public_flag.i2171, align 8
  %rtl.i2174 = getelementptr inbounds %union.tree_node* %call2.i2167, i64 0, i32 0, i32 17
  %569 = load %struct.rtx_def** %rtl.i2174, align 8, !tbaa !32
  %tobool.i2175 = icmp eq %struct.rtx_def* %569, null
  br i1 %tobool.i2175, label %cond.false.i2176, label %init_one_libfunc.exit2180

cond.false.i2176:                                 ; preds = %init_one_libfunc.exit2164
  tail call void @make_decl_rtl(%union.tree_node* %call2.i2167, i8* null) #3
  %570 = load %struct.rtx_def** %rtl.i2174, align 8, !tbaa !32
  br label %init_one_libfunc.exit2180

init_one_libfunc.exit2180:                        ; preds = %init_one_libfunc.exit2164, %cond.false.i2176
  %cond.i2177 = phi %struct.rtx_def* [ %570, %cond.false.i2176 ], [ %569, %init_one_libfunc.exit2164 ]
  %arrayidx.i2178 = getelementptr inbounds %struct.rtx_def* %cond.i2177, i64 0, i32 1, i64 0
  %rtx.i2179 = bitcast %union.rtunion_def* %arrayidx.i2178 to %struct.rtx_def**
  %571 = load %struct.rtx_def** %rtx.i2179, align 8, !tbaa !1
  store %struct.rtx_def* %571, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 84), align 16, !tbaa !1
  %call.i2181 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([13 x i8]* @.str116, i64 0, i64 0)) #3
  %572 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i2182 = tail call %union.tree_node* @build_function_type(%union.tree_node* %572, %union.tree_node* null) #3
  %call2.i2183 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i2181, %union.tree_node* %call1.i2182) #3
  %artificial_flag.i2184 = getelementptr inbounds %union.tree_node* %call2.i2183, i64 0, i32 0, i32 5
  %573 = bitcast i48* %artificial_flag.i2184 to i64*
  %bf.load.i2185 = load i64* %573, align 8
  %bf.set7.i2186 = or i64 %bf.load.i2185, 4194560
  store i64 %bf.set7.i2186, i64* %573, align 8
  %public_flag.i2187 = getelementptr inbounds %union.tree_node* %call2.i2183, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i2188 = load i32* %public_flag.i2187, align 8
  %bf.set10.i2189 = or i32 %bf.load8.i2188, 524288
  store i32 %bf.set10.i2189, i32* %public_flag.i2187, align 8
  %rtl.i2190 = getelementptr inbounds %union.tree_node* %call2.i2183, i64 0, i32 0, i32 17
  %574 = load %struct.rtx_def** %rtl.i2190, align 8, !tbaa !32
  %tobool.i2191 = icmp eq %struct.rtx_def* %574, null
  br i1 %tobool.i2191, label %cond.false.i2192, label %init_one_libfunc.exit2196

cond.false.i2192:                                 ; preds = %init_one_libfunc.exit2180
  tail call void @make_decl_rtl(%union.tree_node* %call2.i2183, i8* null) #3
  %575 = load %struct.rtx_def** %rtl.i2190, align 8, !tbaa !32
  br label %init_one_libfunc.exit2196

init_one_libfunc.exit2196:                        ; preds = %init_one_libfunc.exit2180, %cond.false.i2192
  %cond.i2193 = phi %struct.rtx_def* [ %575, %cond.false.i2192 ], [ %574, %init_one_libfunc.exit2180 ]
  %arrayidx.i2194 = getelementptr inbounds %struct.rtx_def* %cond.i2193, i64 0, i32 1, i64 0
  %rtx.i2195 = bitcast %union.rtunion_def* %arrayidx.i2194 to %struct.rtx_def**
  %576 = load %struct.rtx_def** %rtx.i2195, align 8, !tbaa !1
  store %struct.rtx_def* %576, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 85), align 8, !tbaa !1
  %call.i2197 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([13 x i8]* @.str117, i64 0, i64 0)) #3
  %577 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i2198 = tail call %union.tree_node* @build_function_type(%union.tree_node* %577, %union.tree_node* null) #3
  %call2.i2199 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i2197, %union.tree_node* %call1.i2198) #3
  %artificial_flag.i2200 = getelementptr inbounds %union.tree_node* %call2.i2199, i64 0, i32 0, i32 5
  %578 = bitcast i48* %artificial_flag.i2200 to i64*
  %bf.load.i2201 = load i64* %578, align 8
  %bf.set7.i2202 = or i64 %bf.load.i2201, 4194560
  store i64 %bf.set7.i2202, i64* %578, align 8
  %public_flag.i2203 = getelementptr inbounds %union.tree_node* %call2.i2199, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i2204 = load i32* %public_flag.i2203, align 8
  %bf.set10.i2205 = or i32 %bf.load8.i2204, 524288
  store i32 %bf.set10.i2205, i32* %public_flag.i2203, align 8
  %rtl.i2206 = getelementptr inbounds %union.tree_node* %call2.i2199, i64 0, i32 0, i32 17
  %579 = load %struct.rtx_def** %rtl.i2206, align 8, !tbaa !32
  %tobool.i2207 = icmp eq %struct.rtx_def* %579, null
  br i1 %tobool.i2207, label %cond.false.i2208, label %init_one_libfunc.exit2212

cond.false.i2208:                                 ; preds = %init_one_libfunc.exit2196
  tail call void @make_decl_rtl(%union.tree_node* %call2.i2199, i8* null) #3
  %580 = load %struct.rtx_def** %rtl.i2206, align 8, !tbaa !32
  br label %init_one_libfunc.exit2212

init_one_libfunc.exit2212:                        ; preds = %init_one_libfunc.exit2196, %cond.false.i2208
  %cond.i2209 = phi %struct.rtx_def* [ %580, %cond.false.i2208 ], [ %579, %init_one_libfunc.exit2196 ]
  %arrayidx.i2210 = getelementptr inbounds %struct.rtx_def* %cond.i2209, i64 0, i32 1, i64 0
  %rtx.i2211 = bitcast %union.rtunion_def* %arrayidx.i2210 to %struct.rtx_def**
  %581 = load %struct.rtx_def** %rtx.i2211, align 8, !tbaa !1
  store %struct.rtx_def* %581, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 86), align 16, !tbaa !1
  %call.i2213 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([13 x i8]* @.str118, i64 0, i64 0)) #3
  %582 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i2214 = tail call %union.tree_node* @build_function_type(%union.tree_node* %582, %union.tree_node* null) #3
  %call2.i2215 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i2213, %union.tree_node* %call1.i2214) #3
  %artificial_flag.i2216 = getelementptr inbounds %union.tree_node* %call2.i2215, i64 0, i32 0, i32 5
  %583 = bitcast i48* %artificial_flag.i2216 to i64*
  %bf.load.i2217 = load i64* %583, align 8
  %bf.set7.i2218 = or i64 %bf.load.i2217, 4194560
  store i64 %bf.set7.i2218, i64* %583, align 8
  %public_flag.i2219 = getelementptr inbounds %union.tree_node* %call2.i2215, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i2220 = load i32* %public_flag.i2219, align 8
  %bf.set10.i2221 = or i32 %bf.load8.i2220, 524288
  store i32 %bf.set10.i2221, i32* %public_flag.i2219, align 8
  %rtl.i2222 = getelementptr inbounds %union.tree_node* %call2.i2215, i64 0, i32 0, i32 17
  %584 = load %struct.rtx_def** %rtl.i2222, align 8, !tbaa !32
  %tobool.i2223 = icmp eq %struct.rtx_def* %584, null
  br i1 %tobool.i2223, label %cond.false.i2224, label %init_one_libfunc.exit2228

cond.false.i2224:                                 ; preds = %init_one_libfunc.exit2212
  tail call void @make_decl_rtl(%union.tree_node* %call2.i2215, i8* null) #3
  %585 = load %struct.rtx_def** %rtl.i2222, align 8, !tbaa !32
  br label %init_one_libfunc.exit2228

init_one_libfunc.exit2228:                        ; preds = %init_one_libfunc.exit2212, %cond.false.i2224
  %cond.i2225 = phi %struct.rtx_def* [ %585, %cond.false.i2224 ], [ %584, %init_one_libfunc.exit2212 ]
  %arrayidx.i2226 = getelementptr inbounds %struct.rtx_def* %cond.i2225, i64 0, i32 1, i64 0
  %rtx.i2227 = bitcast %union.rtunion_def* %arrayidx.i2226 to %struct.rtx_def**
  %586 = load %struct.rtx_def** %rtx.i2227, align 8, !tbaa !1
  store %struct.rtx_def* %586, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 87), align 8, !tbaa !1
  %call.i2229 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([13 x i8]* @.str119, i64 0, i64 0)) #3
  %587 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i2230 = tail call %union.tree_node* @build_function_type(%union.tree_node* %587, %union.tree_node* null) #3
  %call2.i2231 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i2229, %union.tree_node* %call1.i2230) #3
  %artificial_flag.i2232 = getelementptr inbounds %union.tree_node* %call2.i2231, i64 0, i32 0, i32 5
  %588 = bitcast i48* %artificial_flag.i2232 to i64*
  %bf.load.i2233 = load i64* %588, align 8
  %bf.set7.i2234 = or i64 %bf.load.i2233, 4194560
  store i64 %bf.set7.i2234, i64* %588, align 8
  %public_flag.i2235 = getelementptr inbounds %union.tree_node* %call2.i2231, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i2236 = load i32* %public_flag.i2235, align 8
  %bf.set10.i2237 = or i32 %bf.load8.i2236, 524288
  store i32 %bf.set10.i2237, i32* %public_flag.i2235, align 8
  %rtl.i2238 = getelementptr inbounds %union.tree_node* %call2.i2231, i64 0, i32 0, i32 17
  %589 = load %struct.rtx_def** %rtl.i2238, align 8, !tbaa !32
  %tobool.i2239 = icmp eq %struct.rtx_def* %589, null
  br i1 %tobool.i2239, label %cond.false.i2240, label %init_one_libfunc.exit2244

cond.false.i2240:                                 ; preds = %init_one_libfunc.exit2228
  tail call void @make_decl_rtl(%union.tree_node* %call2.i2231, i8* null) #3
  %590 = load %struct.rtx_def** %rtl.i2238, align 8, !tbaa !32
  br label %init_one_libfunc.exit2244

init_one_libfunc.exit2244:                        ; preds = %init_one_libfunc.exit2228, %cond.false.i2240
  %cond.i2241 = phi %struct.rtx_def* [ %590, %cond.false.i2240 ], [ %589, %init_one_libfunc.exit2228 ]
  %arrayidx.i2242 = getelementptr inbounds %struct.rtx_def* %cond.i2241, i64 0, i32 1, i64 0
  %rtx.i2243 = bitcast %union.rtunion_def* %arrayidx.i2242 to %struct.rtx_def**
  %591 = load %struct.rtx_def** %rtx.i2243, align 8, !tbaa !1
  store %struct.rtx_def* %591, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 88), align 16, !tbaa !1
  %call.i2245 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([13 x i8]* @.str120, i64 0, i64 0)) #3
  %592 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i2246 = tail call %union.tree_node* @build_function_type(%union.tree_node* %592, %union.tree_node* null) #3
  %call2.i2247 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i2245, %union.tree_node* %call1.i2246) #3
  %artificial_flag.i2248 = getelementptr inbounds %union.tree_node* %call2.i2247, i64 0, i32 0, i32 5
  %593 = bitcast i48* %artificial_flag.i2248 to i64*
  %bf.load.i2249 = load i64* %593, align 8
  %bf.set7.i2250 = or i64 %bf.load.i2249, 4194560
  store i64 %bf.set7.i2250, i64* %593, align 8
  %public_flag.i2251 = getelementptr inbounds %union.tree_node* %call2.i2247, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i2252 = load i32* %public_flag.i2251, align 8
  %bf.set10.i2253 = or i32 %bf.load8.i2252, 524288
  store i32 %bf.set10.i2253, i32* %public_flag.i2251, align 8
  %rtl.i2254 = getelementptr inbounds %union.tree_node* %call2.i2247, i64 0, i32 0, i32 17
  %594 = load %struct.rtx_def** %rtl.i2254, align 8, !tbaa !32
  %tobool.i2255 = icmp eq %struct.rtx_def* %594, null
  br i1 %tobool.i2255, label %cond.false.i2256, label %init_one_libfunc.exit2260

cond.false.i2256:                                 ; preds = %init_one_libfunc.exit2244
  tail call void @make_decl_rtl(%union.tree_node* %call2.i2247, i8* null) #3
  %595 = load %struct.rtx_def** %rtl.i2254, align 8, !tbaa !32
  br label %init_one_libfunc.exit2260

init_one_libfunc.exit2260:                        ; preds = %init_one_libfunc.exit2244, %cond.false.i2256
  %cond.i2257 = phi %struct.rtx_def* [ %595, %cond.false.i2256 ], [ %594, %init_one_libfunc.exit2244 ]
  %arrayidx.i2258 = getelementptr inbounds %struct.rtx_def* %cond.i2257, i64 0, i32 1, i64 0
  %rtx.i2259 = bitcast %union.rtunion_def* %arrayidx.i2258 to %struct.rtx_def**
  %596 = load %struct.rtx_def** %rtx.i2259, align 8, !tbaa !1
  store %struct.rtx_def* %596, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 89), align 8, !tbaa !1
  %call.i2261 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([13 x i8]* @.str121, i64 0, i64 0)) #3
  %597 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i2262 = tail call %union.tree_node* @build_function_type(%union.tree_node* %597, %union.tree_node* null) #3
  %call2.i2263 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i2261, %union.tree_node* %call1.i2262) #3
  %artificial_flag.i2264 = getelementptr inbounds %union.tree_node* %call2.i2263, i64 0, i32 0, i32 5
  %598 = bitcast i48* %artificial_flag.i2264 to i64*
  %bf.load.i2265 = load i64* %598, align 8
  %bf.set7.i2266 = or i64 %bf.load.i2265, 4194560
  store i64 %bf.set7.i2266, i64* %598, align 8
  %public_flag.i2267 = getelementptr inbounds %union.tree_node* %call2.i2263, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i2268 = load i32* %public_flag.i2267, align 8
  %bf.set10.i2269 = or i32 %bf.load8.i2268, 524288
  store i32 %bf.set10.i2269, i32* %public_flag.i2267, align 8
  %rtl.i2270 = getelementptr inbounds %union.tree_node* %call2.i2263, i64 0, i32 0, i32 17
  %599 = load %struct.rtx_def** %rtl.i2270, align 8, !tbaa !32
  %tobool.i2271 = icmp eq %struct.rtx_def* %599, null
  br i1 %tobool.i2271, label %cond.false.i2272, label %init_one_libfunc.exit2276

cond.false.i2272:                                 ; preds = %init_one_libfunc.exit2260
  tail call void @make_decl_rtl(%union.tree_node* %call2.i2263, i8* null) #3
  %600 = load %struct.rtx_def** %rtl.i2270, align 8, !tbaa !32
  br label %init_one_libfunc.exit2276

init_one_libfunc.exit2276:                        ; preds = %init_one_libfunc.exit2260, %cond.false.i2272
  %cond.i2273 = phi %struct.rtx_def* [ %600, %cond.false.i2272 ], [ %599, %init_one_libfunc.exit2260 ]
  %arrayidx.i2274 = getelementptr inbounds %struct.rtx_def* %cond.i2273, i64 0, i32 1, i64 0
  %rtx.i2275 = bitcast %union.rtunion_def* %arrayidx.i2274 to %struct.rtx_def**
  %601 = load %struct.rtx_def** %rtx.i2275, align 8, !tbaa !1
  store %struct.rtx_def* %601, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 90), align 16, !tbaa !1
  %call.i2277 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([13 x i8]* @.str122, i64 0, i64 0)) #3
  %602 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i2278 = tail call %union.tree_node* @build_function_type(%union.tree_node* %602, %union.tree_node* null) #3
  %call2.i2279 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i2277, %union.tree_node* %call1.i2278) #3
  %artificial_flag.i2280 = getelementptr inbounds %union.tree_node* %call2.i2279, i64 0, i32 0, i32 5
  %603 = bitcast i48* %artificial_flag.i2280 to i64*
  %bf.load.i2281 = load i64* %603, align 8
  %bf.set7.i2282 = or i64 %bf.load.i2281, 4194560
  store i64 %bf.set7.i2282, i64* %603, align 8
  %public_flag.i2283 = getelementptr inbounds %union.tree_node* %call2.i2279, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i2284 = load i32* %public_flag.i2283, align 8
  %bf.set10.i2285 = or i32 %bf.load8.i2284, 524288
  store i32 %bf.set10.i2285, i32* %public_flag.i2283, align 8
  %rtl.i2286 = getelementptr inbounds %union.tree_node* %call2.i2279, i64 0, i32 0, i32 17
  %604 = load %struct.rtx_def** %rtl.i2286, align 8, !tbaa !32
  %tobool.i2287 = icmp eq %struct.rtx_def* %604, null
  br i1 %tobool.i2287, label %cond.false.i2288, label %init_one_libfunc.exit2292

cond.false.i2288:                                 ; preds = %init_one_libfunc.exit2276
  tail call void @make_decl_rtl(%union.tree_node* %call2.i2279, i8* null) #3
  %605 = load %struct.rtx_def** %rtl.i2286, align 8, !tbaa !32
  br label %init_one_libfunc.exit2292

init_one_libfunc.exit2292:                        ; preds = %init_one_libfunc.exit2276, %cond.false.i2288
  %cond.i2289 = phi %struct.rtx_def* [ %605, %cond.false.i2288 ], [ %604, %init_one_libfunc.exit2276 ]
  %arrayidx.i2290 = getelementptr inbounds %struct.rtx_def* %cond.i2289, i64 0, i32 1, i64 0
  %rtx.i2291 = bitcast %union.rtunion_def* %arrayidx.i2290 to %struct.rtx_def**
  %606 = load %struct.rtx_def** %rtx.i2291, align 8, !tbaa !1
  store %struct.rtx_def* %606, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 91), align 8, !tbaa !1
  %call.i2293 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([13 x i8]* @.str123, i64 0, i64 0)) #3
  %607 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i2294 = tail call %union.tree_node* @build_function_type(%union.tree_node* %607, %union.tree_node* null) #3
  %call2.i2295 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i2293, %union.tree_node* %call1.i2294) #3
  %artificial_flag.i2296 = getelementptr inbounds %union.tree_node* %call2.i2295, i64 0, i32 0, i32 5
  %608 = bitcast i48* %artificial_flag.i2296 to i64*
  %bf.load.i2297 = load i64* %608, align 8
  %bf.set7.i2298 = or i64 %bf.load.i2297, 4194560
  store i64 %bf.set7.i2298, i64* %608, align 8
  %public_flag.i2299 = getelementptr inbounds %union.tree_node* %call2.i2295, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i2300 = load i32* %public_flag.i2299, align 8
  %bf.set10.i2301 = or i32 %bf.load8.i2300, 524288
  store i32 %bf.set10.i2301, i32* %public_flag.i2299, align 8
  %rtl.i2302 = getelementptr inbounds %union.tree_node* %call2.i2295, i64 0, i32 0, i32 17
  %609 = load %struct.rtx_def** %rtl.i2302, align 8, !tbaa !32
  %tobool.i2303 = icmp eq %struct.rtx_def* %609, null
  br i1 %tobool.i2303, label %cond.false.i2304, label %init_one_libfunc.exit2308

cond.false.i2304:                                 ; preds = %init_one_libfunc.exit2292
  tail call void @make_decl_rtl(%union.tree_node* %call2.i2295, i8* null) #3
  %610 = load %struct.rtx_def** %rtl.i2302, align 8, !tbaa !32
  br label %init_one_libfunc.exit2308

init_one_libfunc.exit2308:                        ; preds = %init_one_libfunc.exit2292, %cond.false.i2304
  %cond.i2305 = phi %struct.rtx_def* [ %610, %cond.false.i2304 ], [ %609, %init_one_libfunc.exit2292 ]
  %arrayidx.i2306 = getelementptr inbounds %struct.rtx_def* %cond.i2305, i64 0, i32 1, i64 0
  %rtx.i2307 = bitcast %union.rtunion_def* %arrayidx.i2306 to %struct.rtx_def**
  %611 = load %struct.rtx_def** %rtx.i2307, align 8, !tbaa !1
  store %struct.rtx_def* %611, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 92), align 16, !tbaa !1
  %call.i2309 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([13 x i8]* @.str124, i64 0, i64 0)) #3
  %612 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i2310 = tail call %union.tree_node* @build_function_type(%union.tree_node* %612, %union.tree_node* null) #3
  %call2.i2311 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i2309, %union.tree_node* %call1.i2310) #3
  %artificial_flag.i2312 = getelementptr inbounds %union.tree_node* %call2.i2311, i64 0, i32 0, i32 5
  %613 = bitcast i48* %artificial_flag.i2312 to i64*
  %bf.load.i2313 = load i64* %613, align 8
  %bf.set7.i2314 = or i64 %bf.load.i2313, 4194560
  store i64 %bf.set7.i2314, i64* %613, align 8
  %public_flag.i2315 = getelementptr inbounds %union.tree_node* %call2.i2311, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i2316 = load i32* %public_flag.i2315, align 8
  %bf.set10.i2317 = or i32 %bf.load8.i2316, 524288
  store i32 %bf.set10.i2317, i32* %public_flag.i2315, align 8
  %rtl.i2318 = getelementptr inbounds %union.tree_node* %call2.i2311, i64 0, i32 0, i32 17
  %614 = load %struct.rtx_def** %rtl.i2318, align 8, !tbaa !32
  %tobool.i2319 = icmp eq %struct.rtx_def* %614, null
  br i1 %tobool.i2319, label %cond.false.i2320, label %init_one_libfunc.exit2324

cond.false.i2320:                                 ; preds = %init_one_libfunc.exit2308
  tail call void @make_decl_rtl(%union.tree_node* %call2.i2311, i8* null) #3
  %615 = load %struct.rtx_def** %rtl.i2318, align 8, !tbaa !32
  br label %init_one_libfunc.exit2324

init_one_libfunc.exit2324:                        ; preds = %init_one_libfunc.exit2308, %cond.false.i2320
  %cond.i2321 = phi %struct.rtx_def* [ %615, %cond.false.i2320 ], [ %614, %init_one_libfunc.exit2308 ]
  %arrayidx.i2322 = getelementptr inbounds %struct.rtx_def* %cond.i2321, i64 0, i32 1, i64 0
  %rtx.i2323 = bitcast %union.rtunion_def* %arrayidx.i2322 to %struct.rtx_def**
  %616 = load %struct.rtx_def** %rtx.i2323, align 8, !tbaa !1
  store %struct.rtx_def* %616, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 93), align 8, !tbaa !1
  %call.i2325 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([13 x i8]* @.str125, i64 0, i64 0)) #3
  %617 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i2326 = tail call %union.tree_node* @build_function_type(%union.tree_node* %617, %union.tree_node* null) #3
  %call2.i2327 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i2325, %union.tree_node* %call1.i2326) #3
  %artificial_flag.i2328 = getelementptr inbounds %union.tree_node* %call2.i2327, i64 0, i32 0, i32 5
  %618 = bitcast i48* %artificial_flag.i2328 to i64*
  %bf.load.i2329 = load i64* %618, align 8
  %bf.set7.i2330 = or i64 %bf.load.i2329, 4194560
  store i64 %bf.set7.i2330, i64* %618, align 8
  %public_flag.i2331 = getelementptr inbounds %union.tree_node* %call2.i2327, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i2332 = load i32* %public_flag.i2331, align 8
  %bf.set10.i2333 = or i32 %bf.load8.i2332, 524288
  store i32 %bf.set10.i2333, i32* %public_flag.i2331, align 8
  %rtl.i2334 = getelementptr inbounds %union.tree_node* %call2.i2327, i64 0, i32 0, i32 17
  %619 = load %struct.rtx_def** %rtl.i2334, align 8, !tbaa !32
  %tobool.i2335 = icmp eq %struct.rtx_def* %619, null
  br i1 %tobool.i2335, label %cond.false.i2336, label %init_one_libfunc.exit2340

cond.false.i2336:                                 ; preds = %init_one_libfunc.exit2324
  tail call void @make_decl_rtl(%union.tree_node* %call2.i2327, i8* null) #3
  %620 = load %struct.rtx_def** %rtl.i2334, align 8, !tbaa !32
  br label %init_one_libfunc.exit2340

init_one_libfunc.exit2340:                        ; preds = %init_one_libfunc.exit2324, %cond.false.i2336
  %cond.i2337 = phi %struct.rtx_def* [ %620, %cond.false.i2336 ], [ %619, %init_one_libfunc.exit2324 ]
  %arrayidx.i2338 = getelementptr inbounds %struct.rtx_def* %cond.i2337, i64 0, i32 1, i64 0
  %rtx.i2339 = bitcast %union.rtunion_def* %arrayidx.i2338 to %struct.rtx_def**
  %621 = load %struct.rtx_def** %rtx.i2339, align 8, !tbaa !1
  store %struct.rtx_def* %621, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 94), align 16, !tbaa !1
  %call.i2341 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([25 x i8]* @.str126, i64 0, i64 0)) #3
  %622 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i2342 = tail call %union.tree_node* @build_function_type(%union.tree_node* %622, %union.tree_node* null) #3
  %call2.i2343 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i2341, %union.tree_node* %call1.i2342) #3
  %artificial_flag.i2344 = getelementptr inbounds %union.tree_node* %call2.i2343, i64 0, i32 0, i32 5
  %623 = bitcast i48* %artificial_flag.i2344 to i64*
  %bf.load.i2345 = load i64* %623, align 8
  %bf.set7.i2346 = or i64 %bf.load.i2345, 4194560
  store i64 %bf.set7.i2346, i64* %623, align 8
  %public_flag.i2347 = getelementptr inbounds %union.tree_node* %call2.i2343, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i2348 = load i32* %public_flag.i2347, align 8
  %bf.set10.i2349 = or i32 %bf.load8.i2348, 524288
  store i32 %bf.set10.i2349, i32* %public_flag.i2347, align 8
  %rtl.i2350 = getelementptr inbounds %union.tree_node* %call2.i2343, i64 0, i32 0, i32 17
  %624 = load %struct.rtx_def** %rtl.i2350, align 8, !tbaa !32
  %tobool.i2351 = icmp eq %struct.rtx_def* %624, null
  br i1 %tobool.i2351, label %cond.false.i2352, label %init_one_libfunc.exit2356

cond.false.i2352:                                 ; preds = %init_one_libfunc.exit2340
  tail call void @make_decl_rtl(%union.tree_node* %call2.i2343, i8* null) #3
  %625 = load %struct.rtx_def** %rtl.i2350, align 8, !tbaa !32
  br label %init_one_libfunc.exit2356

init_one_libfunc.exit2356:                        ; preds = %init_one_libfunc.exit2340, %cond.false.i2352
  %cond.i2353 = phi %struct.rtx_def* [ %625, %cond.false.i2352 ], [ %624, %init_one_libfunc.exit2340 ]
  %arrayidx.i2354 = getelementptr inbounds %struct.rtx_def* %cond.i2353, i64 0, i32 1, i64 0
  %rtx.i2355 = bitcast %union.rtunion_def* %arrayidx.i2354 to %struct.rtx_def**
  %626 = load %struct.rtx_def** %rtx.i2355, align 8, !tbaa !1
  store %struct.rtx_def* %626, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 95), align 8, !tbaa !1
  %call.i2357 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([24 x i8]* @.str127, i64 0, i64 0)) #3
  %627 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call1.i2358 = tail call %union.tree_node* @build_function_type(%union.tree_node* %627, %union.tree_node* null) #3
  %call2.i2359 = tail call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call.i2357, %union.tree_node* %call1.i2358) #3
  %artificial_flag.i2360 = getelementptr inbounds %union.tree_node* %call2.i2359, i64 0, i32 0, i32 5
  %628 = bitcast i48* %artificial_flag.i2360 to i64*
  %bf.load.i2361 = load i64* %628, align 8
  %bf.set7.i2362 = or i64 %bf.load.i2361, 4194560
  store i64 %bf.set7.i2362, i64* %628, align 8
  %public_flag.i2363 = getelementptr inbounds %union.tree_node* %call2.i2359, i64 0, i32 0, i32 0, i32 2
  %bf.load8.i2364 = load i32* %public_flag.i2363, align 8
  %bf.set10.i2365 = or i32 %bf.load8.i2364, 524288
  store i32 %bf.set10.i2365, i32* %public_flag.i2363, align 8
  %rtl.i2366 = getelementptr inbounds %union.tree_node* %call2.i2359, i64 0, i32 0, i32 17
  %629 = load %struct.rtx_def** %rtl.i2366, align 8, !tbaa !32
  %tobool.i2367 = icmp eq %struct.rtx_def* %629, null
  br i1 %tobool.i2367, label %cond.false.i2368, label %init_one_libfunc.exit2372

cond.false.i2368:                                 ; preds = %init_one_libfunc.exit2356
  tail call void @make_decl_rtl(%union.tree_node* %call2.i2359, i8* null) #3
  %630 = load %struct.rtx_def** %rtl.i2366, align 8, !tbaa !32
  br label %init_one_libfunc.exit2372

init_one_libfunc.exit2372:                        ; preds = %init_one_libfunc.exit2356, %cond.false.i2368
  %cond.i2369 = phi %struct.rtx_def* [ %630, %cond.false.i2368 ], [ %629, %init_one_libfunc.exit2356 ]
  %arrayidx.i2370 = getelementptr inbounds %struct.rtx_def* %cond.i2369, i64 0, i32 1, i64 0
  %rtx.i2371 = bitcast %union.rtunion_def* %arrayidx.i2370 to %struct.rtx_def**
  %631 = load %struct.rtx_def** %rtx.i2371, align 8, !tbaa !1
  store %struct.rtx_def* %631, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 96), align 16, !tbaa !1
  %call.i2373 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 103, i32 0, %struct.rtx_def* null, %struct.rtx_def* null) #3
  store %struct.rtx_def* %call.i2373, %struct.rtx_def** @trap_rtx, align 8, !tbaa !1
  tail call void @ggc_add_rtx_root(%struct.rtx_def** @trap_rtx, i32 1) #3
  tail call void @ggc_add_root(i8* bitcast ([49 x %struct.optab*]* @optab_table to i8*), i32 49, i32 8, void (i8*)* @mark_optab) #3
  tail call void @ggc_add_rtx_root(%struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 0), i32 97) #3
  ret void
}

declare void @init_all_optabs() #2

declare void @ggc_add_root(i8*, i32, i32, void (i8*)*) #2

declare void @ggc_add_rtx_root(%struct.rtx_def**, i32) #2

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_cond_trap(i32 %code, %struct.rtx_def* %op1, %struct.rtx_def* %op2, %struct.rtx_def* %tcode) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %op1, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %cmp = icmp eq i32 %bf.clear, 0
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %idxprom23 = zext i32 %bf.clear to i64
  %1 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 41), align 8, !tbaa !1
  %insn_code = getelementptr inbounds %struct.optab* %1, i64 0, i32 1, i64 %idxprom23, i32 0
  %2 = load i32* %insn_code, align 4, !tbaa !10
  %cmp1 = icmp eq i32 %2, 1317
  br i1 %cmp1, label %return, label %if.then2

if.then2:                                         ; preds = %if.end
  tail call void @start_sequence() #3
  %3 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 41), align 8, !tbaa !1
  %insn_code6 = getelementptr inbounds %struct.optab* %3, i64 0, i32 1, i64 %idxprom23, i32 0
  %4 = load i32* %insn_code6, align 4, !tbaa !10
  %idxprom7 = sext i32 %4 to i64
  %genfun = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom7, i32 2
  %5 = load %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun, align 8, !tbaa !16
  %call = tail call %struct.rtx_def* (%struct.rtx_def*, ...)* %5(%struct.rtx_def* %op1, %struct.rtx_def* %op2) #3
  %call9 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call) #3
  %6 = load %struct.rtx_def** @trap_rtx, align 8, !tbaa !1
  %7 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 0
  %bf.load10 = load i32* %7, align 8
  %bf.value = and i32 %code, 65535
  %bf.clear11 = and i32 %bf.load10, -65536
  %bf.set = or i32 %bf.clear11, %bf.value
  store i32 %bf.set, i32* %7, align 8
  %8 = load %struct.rtx_def** @trap_rtx, align 8, !tbaa !1
  %call12 = tail call %struct.rtx_def* @gen_conditional_trap(%struct.rtx_def* %8, %struct.rtx_def* %tcode) #3
  %tobool = icmp eq %struct.rtx_def* %call12, null
  br i1 %tobool, label %if.end16, label %if.then13

if.then13:                                        ; preds = %if.then2
  %call14 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call12) #3
  %call15 = tail call %struct.rtx_def* @gen_sequence() #3
  br label %if.end16

if.end16:                                         ; preds = %if.then2, %if.then13
  %insn.0 = phi %struct.rtx_def* [ %call15, %if.then13 ], [ null, %if.then2 ]
  tail call void @end_sequence() #3
  br label %return

return:                                           ; preds = %if.end, %entry, %if.end16
  %retval.0 = phi %struct.rtx_def* [ %insn.0, %if.end16 ], [ null, %entry ], [ null, %if.end ]
  ret %struct.rtx_def* %retval.0
}

declare %struct.rtx_def* @gen_conditional_trap(%struct.rtx_def*, %struct.rtx_def*) #2

; Function Attrs: nounwind uwtable
define internal fastcc void @init_libfuncs(%struct.optab* nocapture %optable, i32 %first_mode, i32 %last_mode, i8* nocapture readonly %opname, i32 %suffix) #0 {
entry:
  %cmp59 = icmp sgt i32 %first_mode, %last_mode
  br i1 %cmp59, label %for.end33, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %call = call i64 @strlen(i8* %opname) #3
  %add4 = add i64 %call, 4
  %conv22 = trunc i32 %suffix to i8
  %0 = sext i32 %first_mode to i64
  br label %for.body

for.body:                                         ; preds = %for.end21, %for.body.lr.ph
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.end21 ], [ %0, %for.body.lr.ph ]
  %arrayidx = getelementptr inbounds [59 x i8*]* @mode_name, i64 0, i64 %indvars.iv
  %1 = load i8** %arrayidx, align 8, !tbaa !1
  %call2 = call i64 @strlen(i8* %1) #3
  %add6 = add i64 %add4, %call2
  %conv7 = and i64 %add6, 4294967295
  %2 = alloca i8, i64 %conv7, align 1
  %incdec.ptr = getelementptr inbounds i8* %2, i64 1
  store i8 95, i8* %2, align 1, !tbaa !9
  %incdec.ptr8 = getelementptr inbounds i8* %2, i64 2
  store i8 95, i8* %incdec.ptr, align 1, !tbaa !9
  %3 = load i8* %opname, align 1, !tbaa !9
  %tobool52 = icmp eq i8 %3, 0
  br i1 %tobool52, label %for.cond13.preheader, label %for.body10

for.cond13.preheader:                             ; preds = %for.body10, %for.body
  %p.0.lcssa = phi i8* [ %incdec.ptr8, %for.body ], [ %incdec.ptr12, %for.body10 ]
  %4 = load i8* %1, align 1, !tbaa !9
  %tobool1455 = icmp eq i8 %4, 0
  br i1 %tobool1455, label %for.end21, label %for.body15

for.body10:                                       ; preds = %for.body, %for.body10
  %5 = phi i8 [ %6, %for.body10 ], [ %3, %for.body ]
  %q.054 = phi i8* [ %incdec.ptr11, %for.body10 ], [ %opname, %for.body ]
  %p.053 = phi i8* [ %incdec.ptr12, %for.body10 ], [ %incdec.ptr8, %for.body ]
  %incdec.ptr11 = getelementptr inbounds i8* %q.054, i64 1
  %incdec.ptr12 = getelementptr inbounds i8* %p.053, i64 1
  store i8 %5, i8* %p.053, align 1, !tbaa !9
  %6 = load i8* %incdec.ptr11, align 1, !tbaa !9
  %tobool = icmp eq i8 %6, 0
  br i1 %tobool, label %for.cond13.preheader, label %for.body10

for.body15:                                       ; preds = %for.cond13.preheader, %for.body15
  %7 = phi i8 [ %9, %for.body15 ], [ %4, %for.cond13.preheader ]
  %q.157 = phi i8* [ %incdec.ptr20, %for.body15 ], [ %1, %for.cond13.preheader ]
  %p.156 = phi i8* [ %incdec.ptr19, %for.body15 ], [ %p.0.lcssa, %for.cond13.preheader ]
  %idxprom17 = zext i8 %7 to i64
  %arrayidx18 = getelementptr inbounds [256 x i8]* @_sch_tolower, i64 0, i64 %idxprom17
  %8 = load i8* %arrayidx18, align 1, !tbaa !9
  %incdec.ptr19 = getelementptr inbounds i8* %p.156, i64 1
  store i8 %8, i8* %p.156, align 1, !tbaa !9
  %incdec.ptr20 = getelementptr inbounds i8* %q.157, i64 1
  %9 = load i8* %incdec.ptr20, align 1, !tbaa !9
  %tobool14 = icmp eq i8 %9, 0
  br i1 %tobool14, label %for.end21, label %for.body15

for.end21:                                        ; preds = %for.body15, %for.cond13.preheader
  %p.1.lcssa = phi i8* [ %p.0.lcssa, %for.cond13.preheader ], [ %incdec.ptr19, %for.body15 ]
  %incdec.ptr23 = getelementptr inbounds i8* %p.1.lcssa, i64 1
  store i8 %conv22, i8* %p.1.lcssa, align 1, !tbaa !9
  store i8 0, i8* %incdec.ptr23, align 1, !tbaa !9
  %10 = load i32* @target_flags, align 4, !tbaa !7
  %and24 = lshr i32 %10, 25
  %11 = and i32 %and24, 1
  %12 = or i32 %11, 4
  %sub.ptr.lhs.cast = ptrtoint i8* %incdec.ptr23 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %2 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv26 = trunc i64 %sub.ptr.sub to i32
  %call27 = call i8* @ggc_alloc_string(i8* %2, i32 %conv26) #3
  %call28 = call %struct.rtx_def* @gen_rtx_fmt_s(i32 68, i32 %12, i8* %call27) #3
  %libfunc = getelementptr inbounds %struct.optab* %optable, i64 0, i32 1, i64 %indvars.iv, i32 1
  store %struct.rtx_def* %call28, %struct.rtx_def** %libfunc, align 8, !tbaa !21
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %13 = trunc i64 %indvars.iv to i32
  %cmp = icmp slt i32 %13, %last_mode
  br i1 %cmp, label %for.body, label %for.end33

for.end33:                                        ; preds = %for.end21, %entry
  ret void
}

; Function Attrs: nounwind readonly
declare i64 @strlen(i8* nocapture) #5

declare %struct.rtx_def* @gen_rtx_fmt_s(i32, i32, i8*) #2

declare i8* @ggc_alloc_string(i8*, i32) #2

declare noalias i8* @xmalloc(i64) #2

declare %struct.rtx_def* @gen_cmpstrsi(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #2

declare void @emit_library_call(%struct.rtx_def*, i32, i32, i32, ...) #2

declare %struct.rtx_def* @hard_libcall_value(i32) #2

declare %struct.rtx_def* @gen_rtx_SUBREG(i32, %struct.rtx_def*, i32) #2

declare i32 @reg_set_p(%struct.rtx_def*, %struct.rtx_def*) #2

attributes #0 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { nounwind readonly uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind }

!llvm.ident = !{!0}

!0 = metadata !{metadata !"clang version 3.5 (trunk)"}
!1 = metadata !{metadata !2, metadata !2, i64 0}
!2 = metadata !{metadata !"any pointer", metadata !3, i64 0}
!3 = metadata !{metadata !"omnipotent char", metadata !4, i64 0}
!4 = metadata !{metadata !"Simple C/C++ TBAA"}
!5 = metadata !{metadata !6, metadata !3, i64 0}
!6 = metadata !{metadata !"optab", metadata !3, i64 0, metadata !3, i64 8}
!7 = metadata !{metadata !8, metadata !8, i64 0}
!8 = metadata !{metadata !"int", metadata !3, i64 0}
!9 = metadata !{metadata !3, metadata !3, i64 0}
!10 = metadata !{metadata !11, metadata !3, i64 0}
!11 = metadata !{metadata !"", metadata !3, i64 0, metadata !2, i64 8}
!12 = metadata !{metadata !13, metadata !2, i64 24}
!13 = metadata !{metadata !"insn_data", metadata !2, i64 0, metadata !2, i64 8, metadata !2, i64 16, metadata !2, i64 24, metadata !3, i64 32, metadata !3, i64 33, metadata !3, i64 34, metadata !3, i64 35}
!14 = metadata !{metadata !15, metadata !2, i64 0}
!15 = metadata !{metadata !"insn_operand_data", metadata !2, i64 0, metadata !2, i64 8, metadata !3, i64 16, metadata !3, i64 18, metadata !3, i64 19}
!16 = metadata !{metadata !13, metadata !2, i64 16}
!17 = metadata !{metadata !18, metadata !18, i64 0}
!18 = metadata !{metadata !"short", metadata !3, i64 0}
!19 = metadata !{metadata !20, metadata !20, i64 0}
!20 = metadata !{metadata !"long long", metadata !3, i64 0}
!21 = metadata !{metadata !11, metadata !2, i64 8}
!22 = metadata !{metadata !23, metadata !8, i64 0}
!23 = metadata !{metadata !"rtvec_def", metadata !8, i64 0, metadata !3, i64 8}
!24 = metadata !{i64 0, i64 4, metadata !9, i64 8, i64 944, metadata !9}
!25 = metadata !{metadata !26, metadata !2, i64 16}
!26 = metadata !{metadata !"function", metadata !2, i64 0, metadata !2, i64 8, metadata !2, i64 16, metadata !2, i64 24, metadata !2, i64 32, metadata !2, i64 40, metadata !2, i64 48, metadata !2, i64 56, metadata !8, i64 64, metadata !8, i64 68, metadata !8, i64 72, metadata !8, i64 76, metadata !2, i64 80, metadata !27, i64 88, metadata !2, i64 120, metadata !2, i64 128, metadata !2, i64 136, metadata !2, i64 144, metadata !8, i64 152, metadata !2, i64 160, metadata !2, i64 168, metadata !2, i64 176, metadata !2, i64 184, metadata !2, i64 192, metadata !2, i64 200, metadata !2, i64 208, metadata !2, i64 216, metadata !2, i64 224, metadata !2, i64 232, metadata !2, i64 240, metadata !2, i64 248, metadata !2, i64 256, metadata !20, i64 264, metadata !2, i64 272, metadata !2, i64 280, metadata !2, i64 288, metadata !2, i64 296, metadata !8, i64 304, metadata !2, i64 312, metadata !2, i64 320, metadata !8, i64 328, metadata !8, i64 332, metadata !8, i64 336, metadata !2, i64 344, metadata !8, i64 352, metadata !8, i64 356, metadata !2, i64 360, metadata !2, i64 368, metadata !2, i64 376, metadata !8, i64 384, metadata !8, i64 388, metadata !2, i64 392, metadata !8, i64 400, metadata !8, i64 404, metadata !2, i64 408, metadata !2, i64 416, metadata !8, i64 424, metadata !8, i64 424, metadata !8, i64 424, metadata !8, i64 424, metadata !8, i64 424, metadata !8, i64 424, metadata !8, i64 424, metadata !8, i64 424, metadata !8, i64 425, metadata !8, i64 425, metadata !8, i64 425, metadata !8, i64 425, metadata !8, i64 425, metadata !8, i64 425, metadata !8, i64 425, metadata !8, i64 425, metadata !8, i64 426, metadata !8, i64 426, metadata !8, i64 426, metadata !8, i64 426, metadata !8, i64 426, metadata !8, i64 426, metadata !8, i64 426, metadata !8, i64 426}
!27 = metadata !{metadata !"ix86_args", metadata !8, i64 0, metadata !8, i64 4, metadata !8, i64 8, metadata !8, i64 12, metadata !8, i64 16, metadata !8, i64 20, metadata !8, i64 24}
!28 = metadata !{metadata !29, metadata !8, i64 4}
!29 = metadata !{metadata !"expr_status", metadata !8, i64 0, metadata !8, i64 4, metadata !8, i64 8, metadata !2, i64 16, metadata !2, i64 24, metadata !2, i64 32, metadata !2, i64 40}
!30 = metadata !{metadata !31, metadata !8, i64 32}
!31 = metadata !{metadata !"", metadata !20, i64 0, metadata !2, i64 8, metadata !2, i64 16, metadata !2, i64 24, metadata !8, i64 32}
!32 = metadata !{metadata !33, metadata !2, i64 144}
!33 = metadata !{metadata !"tree_decl", metadata !34, i64 0, metadata !2, i64 24, metadata !8, i64 32, metadata !8, i64 36, metadata !2, i64 40, metadata !3, i64 48, metadata !8, i64 49, metadata !8, i64 49, metadata !8, i64 49, metadata !8, i64 49, metadata !8, i64 49, metadata !8, i64 49, metadata !8, i64 49, metadata !8, i64 49, metadata !8, i64 50, metadata !8, i64 50, metadata !8, i64 50, metadata !8, i64 50, metadata !8, i64 50, metadata !8, i64 50, metadata !8, i64 50, metadata !8, i64 50, metadata !8, i64 51, metadata !8, i64 51, metadata !8, i64 51, metadata !8, i64 51, metadata !8, i64 51, metadata !3, i64 51, metadata !8, i64 51, metadata !8, i64 52, metadata !8, i64 52, metadata !8, i64 52, metadata !8, i64 52, metadata !8, i64 52, metadata !8, i64 52, metadata !8, i64 52, metadata !8, i64 53, metadata !8, i64 53, metadata !8, i64 53, metadata !8, i64 53, metadata !8, i64 53, metadata !3, i64 56, metadata !2, i64 64, metadata !2, i64 72, metadata !2, i64 80, metadata !2, i64 88, metadata !2, i64 96, metadata !2, i64 104, metadata !2, i64 112, metadata !2, i64 120, metadata !2, i64 128, metadata !2, i64 136, metadata !2, i64 144, metadata !2, i64 152, metadata !3, i64 160, metadata !2, i64 168, metadata !2, i64 176, metadata !2, i64 184, metadata !20, i64 192, metadata !2, i64 200}
!34 = metadata !{metadata !"tree_common", metadata !2, i64 0, metadata !2, i64 8, metadata !3, i64 16, metadata !8, i64 17, metadata !8, i64 17, metadata !8, i64 17, metadata !8, i64 17, metadata !8, i64 17, metadata !8, i64 17, metadata !8, i64 17, metadata !8, i64 17, metadata !8, i64 18, metadata !8, i64 18, metadata !8, i64 18, metadata !8, i64 18, metadata !8, i64 18, metadata !8, i64 18, metadata !8, i64 18, metadata !8, i64 18, metadata !8, i64 19, metadata !8, i64 19, metadata !8, i64 19, metadata !8, i64 19, metadata !8, i64 19, metadata !8, i64 19, metadata !8, i64 19, metadata !8, i64 19}
