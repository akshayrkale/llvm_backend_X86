; ModuleID = 'function.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.function = type { %struct.eh_status*, %struct.stmt_status*, %struct.expr_status*, %struct.emit_status*, %struct.varasm_status*, i8*, %union.tree_node*, %struct.function*, i32, i32, i32, i32, %struct.rtx_def*, %struct.ix86_args, %struct.rtx_def*, %struct.rtx_def*, i8*, %struct.initial_value_struct*, i32, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i64, %union.tree_node*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, %struct.rtx_def**, %struct.temp_slot*, i32, i32, i32, %struct.var_refs_queue*, i32, i32, i8*, %union.tree_node*, %struct.rtx_def*, i32, i32, %struct.machine_function*, i32, i32, %struct.language_function*, %struct.rtx_def*, i24 }
%struct.eh_status = type opaque
%struct.stmt_status = type opaque
%struct.expr_status = type { i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def* }
%struct.emit_status = type { i32, i32, %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.sequence_stack*, i32, i32, i8*, i32, i8*, %union.tree_node**, %struct.rtx_def** }
%struct.sequence_stack = type { %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.sequence_stack* }
%struct.varasm_status = type opaque
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.initial_value_struct = type opaque
%struct.temp_slot = type { %struct.temp_slot*, %struct.rtx_def*, %struct.rtx_def*, i32, i64, %union.tree_node*, %union.tree_node*, i8, i8, i32, i32, i64, i64 }
%struct.var_refs_queue = type { %struct.rtx_def*, i32, i32, %struct.var_refs_queue* }
%union.tree_node = type { %struct.tree_decl }
%struct.tree_decl = type { %struct.tree_common, i8*, i32, i32, %union.tree_node*, i48, %union.anon, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %union.anon.1, %union.tree_node*, %union.tree_node*, %union.tree_node*, i64, %struct.lang_decl* }
%struct.tree_common = type { %union.tree_node*, %union.tree_node*, i32 }
%union.anon = type { i64 }
%union.anon.1 = type { %struct.function* }
%struct.lang_decl = type opaque
%struct.machine_function = type opaque
%struct.language_function = type opaque
%struct.rtx_def = type { i32, [1 x %union.rtunion_def] }
%union.rtunion_def = type { i64 }
%struct.varray_head_tag = type { i64, i64, i64, i8*, %union.varray_data_tag }
%union.varray_data_tag = type { [1 x %struct.const_equiv_data] }
%struct.const_equiv_data = type { %struct.rtx_def*, i32 }
%struct.basic_block_def = type { %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %union.tree_node*, %struct.edge_def*, %struct.edge_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, i8*, i32, i32, i64, i32, i32 }
%struct.edge_def = type { %struct.edge_def*, %struct.edge_def*, %struct.basic_block_def*, %struct.basic_block_def*, %struct.rtx_def*, i8*, i32, i32, i64 }
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32 }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.hash_table = type { %struct.hash_entry**, i32, %struct.hash_entry* (%struct.hash_entry*, %struct.hash_table*, i8*)*, i64 (i8*)*, i1 (i8*, i8*)*, %struct.obstack }
%struct.hash_entry = type { %struct.hash_entry*, i8*, i64 }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.tree_type = type { %struct.tree_common, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32, i32, i32, %union.tree_node*, %union.tree_node*, %union.anon.2, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i64, %struct.lang_type* }
%union.anon.2 = type { i8* }
%struct.lang_type = type opaque
%struct.insns_for_mem_walk_info = type { %struct.hash_table*, %struct.rtx_def*, i32 }
%struct.rtvec_def = type { i32, [1 x %struct.rtx_def*] }
%struct.args_size = type { i64, %union.tree_node* }
%struct.epi_info = type { %struct.rtx_def*, i64, %struct.rtx_def*, i64, %struct.rtx_def* }
%struct.fixup_replacement = type { %struct.rtx_def*, %struct.rtx_def*, %struct.fixup_replacement* }

@cfun = global %struct.function* null, align 8
@outer_function_chain = internal global %struct.function* null, align 8
@.str = private unnamed_addr constant [11 x i8] c"function.c\00", align 1
@__FUNCTION__.find_function_data = private unnamed_addr constant [19 x i8] c"find_function_data\00", align 1
@current_function_decl = external global %union.tree_node*
@save_lang_status = common global void (%struct.function*)* null, align 8
@reg_renumber = external global i16*
@restore_lang_status = common global void (%struct.function*)* null, align 8
@rtx_equal_function_value_matters = external global i32
@virtuals_instantiated = common global i32 0, align 4
@generating_concat_p = external global i32
@free_lang_status = common global void (%struct.function*)* null, align 8
@free_machine_status = common global void (%struct.function*)* null, align 8
@__FUNCTION__.assign_stack_temp_for_type = private unnamed_addr constant [27 x i8] c"assign_stack_temp_for_type\00", align 1
@tree_code_type = external global [256 x i8]
@.str1 = private unnamed_addr constant [35 x i8] c"size of variable `%s' is too large\00", align 1
@flag_strict_aliasing = external global i32
@flag_expensive_optimizations = external global i32
@optimize = external global i32
@inline_function_decl = common global %union.tree_node* null, align 8
@target_flags = external global i32
@__FUNCTION__.purge_addressof = private unnamed_addr constant [16 x i8] c"purge_addressof\00", align 1
@purge_bitfield_addressof_replacements = internal unnamed_addr global %struct.rtx_def* null, align 8
@purge_addressof_replacements = internal unnamed_addr global %struct.rtx_def* null, align 8
@rtx_class = external constant [153 x i8]
@dynamic_offset = internal unnamed_addr global i32 0, align 4
@__FUNCTION__.get_first_block_beg = private unnamed_addr constant [20 x i8] c"get_first_block_beg\00", align 1
@flag_pcc_struct_return = external global i32
@mode_class = external constant [59 x i32]
@mode_size = external constant [59 x i8]
@call_used_regs = external global [53 x i8]
@.str2 = private unnamed_addr constant [19 x i8] c"__builtin_va_alist\00", align 1
@global_trees = external global [51 x %union.tree_node*]
@fixed_regs = external global [53 x i8]
@global_rtl = external global [11 x %struct.rtx_def*]
@struct_value_incoming_rtx = external global %struct.rtx_def*
@const_int_rtx = external global [129 x %struct.rtx_def*]
@sizetype_tab = external global [6 x %union.tree_node*]
@flag_float_store = external global i32
@warn_uninitialized = external global i32
@.str3 = private unnamed_addr constant [50 x i8] c"`%s' might be used uninitialized in this function\00", align 1
@extra_warnings = external global i32
@.str4 = private unnamed_addr constant [57 x i8] c"variable `%s' might be clobbered by `longjmp' or `vfork'\00", align 1
@.str5 = private unnamed_addr constant [57 x i8] c"argument `%s' might be clobbered by `longjmp' or `vfork'\00", align 1
@__FUNCTION__.lookup_static_chain = private unnamed_addr constant [20 x i8] c"lookup_static_chain\00", align 1
@__FUNCTION__.fix_lexical_addr = private unnamed_addr constant [17 x i8] c"fix_lexical_addr\00", align 1
@.str6 = private unnamed_addr constant [12 x i8] c"block_stack\00", align 1
@next_block_index = internal unnamed_addr global i32 2, align 4
@decl_printable_name = external global i8* (%union.tree_node*, i32)*
@immediate_size_expand = external global i32
@warn_aggregate_return = external global i32
@.str7 = private unnamed_addr constant [30 x i8] c"function returns an aggregate\00", align 1
@prologue = internal global %struct.varray_head_tag* null, align 8
@epilogue = internal global %struct.varray_head_tag* null, align 8
@sibcall_epilogue = internal global %struct.varray_head_tag* null, align 8
@ix86_preferred_stack_boundary = external global i32
@flag_instrument_function_entry_exit = external global i32
@profile_flag = external global i32
@stack_limit_rtx = external global %struct.rtx_def*
@static_chain_incoming_rtx = external global %struct.rtx_def*
@__FUNCTION__.expand_function_start = private unnamed_addr constant [22 x i8] c"expand_function_start\00", align 1
@libfunc_table = external global [97 x %struct.rtx_def*]
@profile_label_no = internal unnamed_addr global i32 0, align 4
@flag_stack_check = external global i32
@warn_unused_parameter = external global i32
@.str8 = private unnamed_addr constant [22 x i8] c"unused parameter `%s'\00", align 1
@flag_test_coverage = external global i32
@__FUNCTION__.expand_function_end = private unnamed_addr constant [20 x i8] c"expand_function_end\00", align 1
@entry_exit_blocks = external global [2 x %struct.basic_block_def]
@__FUNCTION__.thread_prologue_and_epilogue_insns = private unnamed_addr constant [35 x i8] c"thread_prologue_and_epilogue_insns\00", align 1
@basic_block_info = external global %struct.varray_head_tag*
@ggc_pending_trees = external global %struct.varray_head_tag*
@mark_machine_status = common global void (%struct.function*)* null, align 8
@mark_lang_status = common global void (%struct.function*)* null, align 8
@.str9 = private unnamed_addr constant [9 x i8] c"prologue\00", align 1
@.str10 = private unnamed_addr constant [9 x i8] c"epilogue\00", align 1
@.str11 = private unnamed_addr constant [17 x i8] c"sibcall_epilogue\00", align 1
@current_function_is_leaf = common global i32 0, align 4
@current_function_nothrow = common global i32 0, align 4
@current_function_sp_is_unchanging = common global i32 0, align 4
@current_function_uses_only_leaf_regs = common global i32 0, align 4
@init_machine_status = common global void (%struct.function*)* null, align 8
@init_lang_status = common global void (%struct.function*)* null, align 8
@__FUNCTION__.keep_stack_depressed = private unnamed_addr constant [21 x i8] c"keep_stack_depressed\00", align 1
@regs_invalidated_by_call = external global i64
@__FUNCTION__.handle_epilogue_set = private unnamed_addr constant [20 x i8] c"handle_epilogue_set\00", align 1
@cse_not_expected = external global i32
@caller_save_needed = external global i32
@frame_pointer_needed = external global i32
@__FUNCTION__.identify_blocks_1 = private unnamed_addr constant [18 x i8] c"identify_blocks_1\00", align 1
@mode_bitsize = external constant [59 x i16]
@__FUNCTION__.instantiate_virtual_regs_1 = private unnamed_addr constant [27 x i8] c"instantiate_virtual_regs_1\00", align 1
@rtx_format = external constant [153 x i8*]
@rtx_length = external constant [153 x i8]
@class_narrowest_mode = external constant [9 x i32]
@mode_wider_mode = external constant [59 x i8]
@__FUNCTION__.purge_addressof_1 = private unnamed_addr constant [18 x i8] c"purge_addressof_1\00", align 1
@__FUNCTION__.put_addressof_into_stack = private unnamed_addr constant [25 x i8] c"put_addressof_into_stack\00", align 1
@__FUNCTION__.fixup_var_refs = private unnamed_addr constant [15 x i8] c"fixup_var_refs\00", align 1
@__FUNCTION__.fixup_memory_subreg = private unnamed_addr constant [20 x i8] c"fixup_memory_subreg\00", align 1
@flag_force_addr = external global i32
@__FUNCTION__.fixup_var_refs_1 = private unnamed_addr constant [17 x i8] c"fixup_var_refs_1\00", align 1
@flag_force_mem = external global i32
@__FUNCTION__.optimize_bit_field = private unnamed_addr constant [19 x i8] c"optimize_bit_field\00", align 1

; Function Attrs: nounwind uwtable
define %struct.function* @find_function_data(%union.tree_node* readnone %decl) #0 {
entry:
  %p.05 = load %struct.function** @outer_function_chain, align 8
  %tobool6 = icmp eq %struct.function* %p.05, null
  br i1 %tobool6, label %for.end, label %for.body

for.cond:                                         ; preds = %for.body
  %outer = getelementptr inbounds %struct.function* %p.07, i64 0, i32 7
  %p.0 = load %struct.function** %outer, align 8
  %tobool = icmp eq %struct.function* %p.0, null
  br i1 %tobool, label %for.end, label %for.body

for.body:                                         ; preds = %entry, %for.cond
  %p.07 = phi %struct.function* [ %p.0, %for.cond ], [ %p.05, %entry ]
  %decl1 = getelementptr inbounds %struct.function* %p.07, i64 0, i32 6
  %0 = load %union.tree_node** %decl1, align 8, !tbaa !1
  %cmp = icmp eq %union.tree_node* %0, %decl
  br i1 %cmp, label %if.then, label %for.cond

if.then:                                          ; preds = %for.body
  ret %struct.function* %p.07

for.end:                                          ; preds = %for.cond, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8]* @.str, i64 0, i64 0), i32 329, i8* getelementptr inbounds ([19 x i8]* @__FUNCTION__.find_function_data, i64 0, i64 0)) #8
  unreachable
}

; Function Attrs: noreturn
declare void @fancy_abort(i8*, i32, i8*) #1

; Function Attrs: nounwind uwtable
define void @push_function_context_to(%union.tree_node* readnone %context) #0 {
entry:
  %tobool = icmp eq %union.tree_node* %context, null
  br i1 %tobool, label %if.end6, label %if.then

if.then:                                          ; preds = %entry
  %0 = load %union.tree_node** @current_function_decl, align 8, !tbaa !9
  %cmp = icmp eq %union.tree_node* %0, %context
  br i1 %cmp, label %if.then1, label %if.else

if.then1:                                         ; preds = %if.then
  %1 = load %struct.function** @cfun, align 8, !tbaa !9
  %contains_functions = getelementptr inbounds %struct.function* %1, i64 0, i32 56
  %2 = bitcast i24* %contains_functions to i32*
  %bf.load = load i32* %2, align 8
  %bf.set = or i32 %bf.load, 1024
  store i32 %bf.set, i32* %2, align 8
  br label %if.end6

if.else:                                          ; preds = %if.then
  %p.05.i = load %struct.function** @outer_function_chain, align 8
  %tobool6.i = icmp eq %struct.function* %p.05.i, null
  br i1 %tobool6.i, label %for.end.i, label %for.body.i

for.cond.i:                                       ; preds = %for.body.i
  %outer.i = getelementptr inbounds %struct.function* %p.07.i, i64 0, i32 7
  %p.0.i = load %struct.function** %outer.i, align 8
  %tobool.i = icmp eq %struct.function* %p.0.i, null
  br i1 %tobool.i, label %for.end.i, label %for.body.i

for.body.i:                                       ; preds = %if.else, %for.cond.i
  %p.07.i = phi %struct.function* [ %p.0.i, %for.cond.i ], [ %p.05.i, %if.else ]
  %decl1.i = getelementptr inbounds %struct.function* %p.07.i, i64 0, i32 6
  %3 = load %union.tree_node** %decl1.i, align 8, !tbaa !1
  %cmp.i = icmp eq %union.tree_node* %3, %context
  br i1 %cmp.i, label %find_function_data.exit, label %for.cond.i

for.end.i:                                        ; preds = %for.cond.i, %if.else
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8]* @.str, i64 0, i64 0), i32 329, i8* getelementptr inbounds ([19 x i8]* @__FUNCTION__.find_function_data, i64 0, i64 0)) #8
  unreachable

find_function_data.exit:                          ; preds = %for.body.i
  %contains_functions2 = getelementptr inbounds %struct.function* %p.07.i, i64 0, i32 56
  %4 = bitcast i24* %contains_functions2 to i32*
  %bf.load3 = load i32* %4, align 8
  %bf.set5 = or i32 %bf.load3, 1024
  store i32 %bf.set5, i32* %4, align 8
  br label %if.end6

if.end6:                                          ; preds = %entry, %if.then1, %find_function_data.exit
  %5 = load %struct.function** @cfun, align 8, !tbaa !9
  %cmp7 = icmp eq %struct.function* %5, null
  br i1 %cmp7, label %if.then8, label %if.end9

if.then8:                                         ; preds = %if.end6
  tail call fastcc void @prepare_function_start() #5
  %.pre = load %struct.function** @cfun, align 8, !tbaa !9
  br label %if.end9

if.end9:                                          ; preds = %if.then8, %if.end6
  %6 = phi %struct.function* [ %.pre, %if.then8 ], [ %5, %if.end6 ]
  %7 = load %struct.function** @outer_function_chain, align 8, !tbaa !9
  %outer = getelementptr inbounds %struct.function* %6, i64 0, i32 7
  store %struct.function* %7, %struct.function** %outer, align 8, !tbaa !10
  store %struct.function* %6, %struct.function** @outer_function_chain, align 8, !tbaa !9
  %fixup_var_refs_queue = getelementptr inbounds %struct.function* %6, i64 0, i32 43
  store %struct.var_refs_queue* null, %struct.var_refs_queue** %fixup_var_refs_queue, align 8, !tbaa !11
  %8 = load void (%struct.function*)** @save_lang_status, align 8, !tbaa !9
  %tobool10 = icmp eq void (%struct.function*)* %8, null
  br i1 %tobool10, label %if.end12, label %if.then11

if.then11:                                        ; preds = %if.end9
  tail call void %8(%struct.function* %6) #5
  br label %if.end12

if.end12:                                         ; preds = %if.end9, %if.then11
  store %struct.function* null, %struct.function** @cfun, align 8, !tbaa !9
  ret void
}

; Function Attrs: nounwind uwtable
define void @init_dummy_function_start() #0 {
entry:
  tail call fastcc void @prepare_function_start()
  ret void
}

; Function Attrs: nounwind uwtable
define void @push_function_context() #0 {
entry:
  %0 = load %union.tree_node** @current_function_decl, align 8, !tbaa !9
  %tobool.i = icmp eq %union.tree_node* %0, null
  br i1 %tobool.i, label %if.end6.i, label %if.then1.i

if.then1.i:                                       ; preds = %entry
  %1 = load %struct.function** @cfun, align 8, !tbaa !9
  %contains_functions.i = getelementptr inbounds %struct.function* %1, i64 0, i32 56
  %2 = bitcast i24* %contains_functions.i to i32*
  %bf.load.i = load i32* %2, align 8
  %bf.set.i = or i32 %bf.load.i, 1024
  store i32 %bf.set.i, i32* %2, align 8
  br label %if.end6.i

if.end6.i:                                        ; preds = %if.then1.i, %entry
  %3 = load %struct.function** @cfun, align 8, !tbaa !9
  %cmp7.i = icmp eq %struct.function* %3, null
  br i1 %cmp7.i, label %if.then8.i, label %if.end9.i

if.then8.i:                                       ; preds = %if.end6.i
  tail call fastcc void @prepare_function_start() #5
  %.pre.i = load %struct.function** @cfun, align 8, !tbaa !9
  br label %if.end9.i

if.end9.i:                                        ; preds = %if.then8.i, %if.end6.i
  %4 = phi %struct.function* [ %.pre.i, %if.then8.i ], [ %3, %if.end6.i ]
  %5 = load %struct.function** @outer_function_chain, align 8, !tbaa !9
  %outer.i = getelementptr inbounds %struct.function* %4, i64 0, i32 7
  store %struct.function* %5, %struct.function** %outer.i, align 8, !tbaa !10
  store %struct.function* %4, %struct.function** @outer_function_chain, align 8, !tbaa !9
  %fixup_var_refs_queue.i = getelementptr inbounds %struct.function* %4, i64 0, i32 43
  store %struct.var_refs_queue* null, %struct.var_refs_queue** %fixup_var_refs_queue.i, align 8, !tbaa !11
  %6 = load void (%struct.function*)** @save_lang_status, align 8, !tbaa !9
  %tobool10.i = icmp eq void (%struct.function*)* %6, null
  br i1 %tobool10.i, label %push_function_context_to.exit, label %if.then11.i

if.then11.i:                                      ; preds = %if.end9.i
  tail call void %6(%struct.function* %4) #5
  br label %push_function_context_to.exit

push_function_context_to.exit:                    ; preds = %if.end9.i, %if.then11.i
  store %struct.function* null, %struct.function** @cfun, align 8, !tbaa !9
  ret void
}

; Function Attrs: nounwind uwtable
define void @pop_function_context_from(%union.tree_node* nocapture readnone %context) #0 {
entry:
  %0 = load %struct.function** @outer_function_chain, align 8, !tbaa !9
  store %struct.function* %0, %struct.function** @cfun, align 8, !tbaa !9
  %outer = getelementptr inbounds %struct.function* %0, i64 0, i32 7
  %1 = load %struct.function** %outer, align 8, !tbaa !10
  store %struct.function* %1, %struct.function** @outer_function_chain, align 8, !tbaa !9
  %decl = getelementptr inbounds %struct.function* %0, i64 0, i32 6
  %2 = load %union.tree_node** %decl, align 8, !tbaa !1
  store %union.tree_node* %2, %union.tree_node** @current_function_decl, align 8, !tbaa !9
  store i16* null, i16** @reg_renumber, align 8, !tbaa !9
  tail call void @restore_emit_status(%struct.function* %0) #5
  %3 = load void (%struct.function*)** @restore_lang_status, align 8, !tbaa !9
  %tobool = icmp eq void (%struct.function*)* %3, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call void %3(%struct.function* %0) #5
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %fixup_var_refs_queue = getelementptr inbounds %struct.function* %0, i64 0, i32 43
  %4 = load %struct.var_refs_queue** %fixup_var_refs_queue, align 8, !tbaa !11
  %cmp = icmp eq %struct.var_refs_queue* %4, null
  br i1 %cmp, label %if.end26, label %if.else

if.else:                                          ; preds = %if.end
  %next = getelementptr inbounds %struct.var_refs_queue* %4, i64 0, i32 3
  %5 = load %struct.var_refs_queue** %next, align 8, !tbaa !12
  %cmp3 = icmp eq %struct.var_refs_queue* %5, null
  br i1 %cmp3, label %if.then4, label %for.body

if.then4:                                         ; preds = %if.else
  %modified = getelementptr inbounds %struct.var_refs_queue* %4, i64 0, i32 0
  %6 = load %struct.rtx_def** %modified, align 8, !tbaa !14
  %promoted_mode = getelementptr inbounds %struct.var_refs_queue* %4, i64 0, i32 1
  %7 = load i32* %promoted_mode, align 4, !tbaa !15
  %unsignedp = getelementptr inbounds %struct.var_refs_queue* %4, i64 0, i32 2
  %8 = load i32* %unsignedp, align 4, !tbaa !16
  tail call fastcc void @fixup_var_refs(%struct.rtx_def* %6, i32 %7, i32 %8, %struct.rtx_def* %6, %struct.hash_table* null)
  br label %if.end26

for.cond16.preheader:                             ; preds = %for.body
  %queue.149.pre = load %struct.var_refs_queue** %fixup_var_refs_queue, align 8
  %tobool1750 = icmp eq %struct.var_refs_queue* %queue.149.pre, null
  br i1 %tobool1750, label %if.end26, label %for.body18

for.body:                                         ; preds = %if.else, %for.body
  %list.054 = phi %struct.rtx_def* [ %call, %for.body ], [ null, %if.else ]
  %queue.053 = phi %struct.var_refs_queue* [ %10, %for.body ], [ %4, %if.else ]
  %modified13 = getelementptr inbounds %struct.var_refs_queue* %queue.053, i64 0, i32 0
  %9 = load %struct.rtx_def** %modified13, align 8, !tbaa !14
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 0, %struct.rtx_def* %9, %struct.rtx_def* %list.054) #5
  %next14 = getelementptr inbounds %struct.var_refs_queue* %queue.053, i64 0, i32 3
  %10 = load %struct.var_refs_queue** %next14, align 8, !tbaa !12
  %tobool12 = icmp eq %struct.var_refs_queue* %10, null
  br i1 %tobool12, label %for.cond16.preheader, label %for.body

for.body18:                                       ; preds = %for.cond16.preheader, %for.body18
  %queue.151 = phi %struct.var_refs_queue* [ %queue.1, %for.body18 ], [ %queue.149.pre, %for.cond16.preheader ]
  %modified19 = getelementptr inbounds %struct.var_refs_queue* %queue.151, i64 0, i32 0
  %11 = load %struct.rtx_def** %modified19, align 8, !tbaa !14
  %promoted_mode20 = getelementptr inbounds %struct.var_refs_queue* %queue.151, i64 0, i32 1
  %12 = load i32* %promoted_mode20, align 4, !tbaa !15
  %unsignedp21 = getelementptr inbounds %struct.var_refs_queue* %queue.151, i64 0, i32 2
  %13 = load i32* %unsignedp21, align 4, !tbaa !16
  tail call fastcc void @fixup_var_refs(%struct.rtx_def* %11, i32 %12, i32 %13, %struct.rtx_def* %call, %struct.hash_table* null)
  %next23 = getelementptr inbounds %struct.var_refs_queue* %queue.151, i64 0, i32 3
  %queue.1 = load %struct.var_refs_queue** %next23, align 8
  %tobool17 = icmp eq %struct.var_refs_queue* %queue.1, null
  br i1 %tobool17, label %if.end26, label %for.body18

if.end26:                                         ; preds = %for.body18, %for.cond16.preheader, %if.then4, %if.end
  store %struct.var_refs_queue* null, %struct.var_refs_queue** %fixup_var_refs_queue, align 8, !tbaa !11
  store i32 1, i32* @rtx_equal_function_value_matters, align 4, !tbaa !17
  store i32 0, i32* @virtuals_instantiated, align 4, !tbaa !17
  store i32 1, i32* @generating_concat_p, align 4, !tbaa !17
  ret void
}

declare void @restore_emit_status(%struct.function*) #2

; Function Attrs: nounwind uwtable
define internal fastcc void @fixup_var_refs(%struct.rtx_def* %var, i32 %promoted_mode, i32 %unsignedp, %struct.rtx_def* %may_share, %struct.hash_table* %ht) #0 {
entry:
  %call = tail call %struct.rtx_def* @get_insns() #5
  %0 = load %struct.function** @cfun, align 8, !tbaa !9
  %emit = getelementptr inbounds %struct.function* %0, i64 0, i32 3
  %1 = load %struct.emit_status** %emit, align 8, !tbaa !18
  %sequence_stack = getelementptr inbounds %struct.emit_status* %1, i64 0, i32 5
  %2 = load %struct.sequence_stack** %sequence_stack, align 8, !tbaa !19
  %x_rtl_expr_chain = getelementptr inbounds %struct.function* %0, i64 0, i32 27
  %3 = load %union.tree_node** %x_rtl_expr_chain, align 8, !tbaa !21
  %tobool = icmp eq %struct.hash_table* %ht, null
  %cmp3 = icmp eq %struct.sequence_stack* %2, null
  br i1 %tobool, label %if.end2, label %if.then

if.then:                                          ; preds = %entry
  br i1 %cmp3, label %if.end, label %if.then1

if.then1:                                         ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8]* @.str, i64 0, i64 0), i32 1593, i8* getelementptr inbounds ([15 x i8]* @__FUNCTION__.fixup_var_refs, i64 0, i64 0)) #8
  unreachable

if.end:                                           ; preds = %if.then
  %4 = bitcast %struct.rtx_def* %var to i8*
  %call.i = tail call %struct.hash_entry* @hash_lookup(%struct.hash_table* %ht, i8* %4, i32 0, i8* (%struct.obstack*, i8*)* null) #5
  %insns.i = getelementptr inbounds %struct.hash_entry* %call.i, i64 1
  %5 = bitcast %struct.hash_entry* %insns.i to %struct.rtx_def**
  %insn_list.015.i = load %struct.rtx_def** %5, align 8
  %cmp16.i = icmp eq %struct.rtx_def* %insn_list.015.i, null
  br i1 %cmp16.i, label %for.end21, label %for.body.i

for.body.i:                                       ; preds = %if.end, %for.inc.i
  %insn_list.017.i = phi %struct.rtx_def* [ %insn_list.0.i, %for.inc.i ], [ %insn_list.015.i, %if.end ]
  %fld.i = getelementptr inbounds %struct.rtx_def* %insn_list.017.i, i64 0, i32 1
  %rtx.i = bitcast [1 x %union.rtunion_def]* %fld.i to %struct.rtx_def**
  %6 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !9
  %7 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 0
  %bf.load.i = load i32* %7, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  %idxprom14.i = zext i32 %bf.clear.i to i64
  %arrayidx1.i = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom14.i
  %8 = load i8* %arrayidx1.i, align 1, !tbaa !22
  %cmp2.i = icmp eq i8 %8, 105
  br i1 %cmp2.i, label %if.then.i, label %for.inc.i

if.then.i:                                        ; preds = %for.body.i
  tail call fastcc void @fixup_var_refs_insn(%struct.rtx_def* %6, %struct.rtx_def* %var, i32 %promoted_mode, i32 %unsignedp, i32 1, %struct.rtx_def* %may_share) #5
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then.i, %for.body.i
  %arrayidx8.i = getelementptr inbounds %struct.rtx_def* %insn_list.017.i, i64 0, i32 1, i64 1
  %rtx9.i = bitcast %union.rtunion_def* %arrayidx8.i to %struct.rtx_def**
  %insn_list.0.i = load %struct.rtx_def** %rtx9.i, align 8
  %cmp.i = icmp eq %struct.rtx_def* %insn_list.0.i, null
  br i1 %cmp.i, label %for.end21, label %for.body.i

if.end2:                                          ; preds = %entry
  %conv = zext i1 %cmp3 to i32
  tail call fastcc void @fixup_var_refs_insns(%struct.rtx_def* %call, %struct.rtx_def* %var, i32 %promoted_mode, i32 %unsignedp, i32 %conv, %struct.rtx_def* %may_share)
  br i1 %cmp3, label %for.cond11.preheader, label %for.body

for.cond11.preheader:                             ; preds = %for.body, %if.end2
  %tobool1249 = icmp eq %union.tree_node* %3, null
  br i1 %tobool1249, label %for.end21, label %for.body13

for.body:                                         ; preds = %if.end2, %for.body
  %stack.052 = phi %struct.sequence_stack* [ %13, %for.body ], [ %2, %if.end2 ]
  %first = getelementptr inbounds %struct.sequence_stack* %stack.052, i64 0, i32 0
  %9 = load %struct.rtx_def** %first, align 8, !tbaa !23
  %last = getelementptr inbounds %struct.sequence_stack* %stack.052, i64 0, i32 1
  %10 = load %struct.rtx_def** %last, align 8, !tbaa !25
  tail call void @push_to_full_sequence(%struct.rtx_def* %9, %struct.rtx_def* %10) #5
  %11 = load %struct.rtx_def** %first, align 8, !tbaa !23
  %next = getelementptr inbounds %struct.sequence_stack* %stack.052, i64 0, i32 3
  %12 = load %struct.sequence_stack** %next, align 8, !tbaa !26
  %cmp6 = icmp ne %struct.sequence_stack* %12, null
  %conv7 = zext i1 %cmp6 to i32
  tail call fastcc void @fixup_var_refs_insns(%struct.rtx_def* %11, %struct.rtx_def* %var, i32 %promoted_mode, i32 %unsignedp, i32 %conv7, %struct.rtx_def* %may_share)
  %call8 = tail call %struct.rtx_def* @get_last_insn() #5
  store %struct.rtx_def* %call8, %struct.rtx_def** %last, align 8, !tbaa !25
  tail call void @end_sequence() #5
  %13 = load %struct.sequence_stack** %next, align 8, !tbaa !26
  %tobool4 = icmp eq %struct.sequence_stack* %13, null
  br i1 %tobool4, label %for.cond11.preheader, label %for.body

for.body13:                                       ; preds = %for.cond11.preheader, %for.inc20
  %pending.050 = phi %union.tree_node* [ %19, %for.inc20 ], [ %3, %for.cond11.preheader ]
  %value = getelementptr inbounds %union.tree_node* %pending.050, i64 0, i32 0, i32 2
  %14 = bitcast i32* %value to %union.tree_node**
  %15 = load %union.tree_node** %14, align 8, !tbaa !27
  %operands = getelementptr inbounds %union.tree_node* %15, i64 0, i32 0, i32 2
  %16 = bitcast i32* %operands to %struct.rtx_def**
  %17 = load %struct.rtx_def** %16, align 8, !tbaa !9
  %18 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !9
  %cmp14 = icmp ne %struct.rtx_def* %17, %18
  %cmp16 = icmp ne %struct.rtx_def* %17, null
  %or.cond = and i1 %cmp14, %cmp16
  br i1 %or.cond, label %if.then18, label %for.inc20

if.then18:                                        ; preds = %for.body13
  tail call void @push_to_sequence(%struct.rtx_def* %17) #5
  tail call fastcc void @fixup_var_refs_insns(%struct.rtx_def* %17, %struct.rtx_def* %var, i32 %promoted_mode, i32 %unsignedp, i32 0, %struct.rtx_def* %may_share)
  tail call void @end_sequence() #5
  br label %for.inc20

for.inc20:                                        ; preds = %for.body13, %if.then18
  %chain = getelementptr inbounds %union.tree_node* %pending.050, i64 0, i32 0, i32 0, i32 0
  %19 = load %union.tree_node** %chain, align 8, !tbaa !30
  %tobool12 = icmp eq %union.tree_node* %19, null
  br i1 %tobool12, label %for.end21, label %for.body13

for.end21:                                        ; preds = %for.inc.i, %for.inc20, %for.cond11.preheader, %if.end
  ret void
}

declare %struct.rtx_def* @gen_rtx_fmt_ee(i32, i32, %struct.rtx_def*, %struct.rtx_def*) #2

; Function Attrs: nounwind uwtable
define void @pop_function_context() #0 {
entry:
  tail call void @pop_function_context_from(%union.tree_node* undef)
  ret void
}

; Function Attrs: nounwind uwtable
define void @free_after_parsing(%struct.function* %f) #0 {
entry:
  %0 = load void (%struct.function*)** @free_lang_status, align 8, !tbaa !9
  %tobool = icmp eq void (%struct.function*)* %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call void %0(%struct.function* %f) #5
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  tail call void @free_stmt_status(%struct.function* %f) #5
  ret void
}

declare void @free_stmt_status(%struct.function*) #2

; Function Attrs: nounwind uwtable
define void @free_after_compilation(%struct.function* %f) #0 {
entry:
  tail call void @free_eh_status(%struct.function* %f) #5
  tail call void @free_expr_status(%struct.function* %f) #5
  tail call void @free_emit_status(%struct.function* %f) #5
  tail call void @free_varasm_status(%struct.function* %f) #5
  %0 = load void (%struct.function*)** @free_machine_status, align 8, !tbaa !9
  %tobool = icmp eq void (%struct.function*)* %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call void %0(%struct.function* %f) #5
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %x_parm_reg_stack_loc = getelementptr inbounds %struct.function* %f, i64 0, i32 38
  %1 = load %struct.rtx_def*** %x_parm_reg_stack_loc, align 8, !tbaa !31
  %tobool1 = icmp eq %struct.rtx_def** %1, null
  br i1 %tobool1, label %if.end4, label %if.then2

if.then2:                                         ; preds = %if.end
  %2 = bitcast %struct.rtx_def** %1 to i8*
  tail call void @free(i8* %2)
  br label %if.end4

if.end4:                                          ; preds = %if.end, %if.then2
  %arg_offset_rtx = getelementptr inbounds %struct.function* %f, i64 0, i32 12
  store %struct.rtx_def* null, %struct.rtx_def** %arg_offset_rtx, align 8, !tbaa !32
  %return_rtx = getelementptr inbounds %struct.function* %f, i64 0, i32 14
  %x_nonlocal_labels = getelementptr inbounds %struct.function* %f, i64 0, i32 19
  %x_context_display = getelementptr inbounds %struct.function* %f, i64 0, i32 33
  %fixup_var_refs_queue = getelementptr inbounds %struct.function* %f, i64 0, i32 43
  store %struct.var_refs_queue* null, %struct.var_refs_queue** %fixup_var_refs_queue, align 8, !tbaa !11
  %original_arg_vector = getelementptr inbounds %struct.function* %f, i64 0, i32 46
  %epilogue_delay_list = getelementptr inbounds %struct.function* %f, i64 0, i32 55
  store %struct.rtx_def* null, %struct.rtx_def** %epilogue_delay_list, align 8, !tbaa !33
  %3 = bitcast %struct.rtx_def** %return_rtx to i8*
  call void @llvm.memset.p0i8.i64(i8* %3, i8 0, i64 16, i32 8, i1 false)
  %4 = bitcast %union.tree_node** %x_nonlocal_labels to i8*
  call void @llvm.memset.p0i8.i64(i8* %4, i8 0, i64 104, i32 8, i1 false)
  %5 = bitcast %union.tree_node** %x_context_display to i8*
  call void @llvm.memset.p0i8.i64(i8* %5, i8 0, i64 32, i32 8, i1 false)
  %6 = bitcast %struct.rtx_def*** %x_parm_reg_stack_loc to i8*
  call void @llvm.memset.p0i8.i64(i8* %6, i8 0, i64 16, i32 8, i1 false)
  %7 = bitcast i8** %original_arg_vector to i8*
  call void @llvm.memset.p0i8.i64(i8* %7, i8 0, i64 24, i32 8, i1 false)
  ret void
}

declare void @free_eh_status(%struct.function*) #2

declare void @free_expr_status(%struct.function*) #2

declare void @free_emit_status(%struct.function*) #2

declare void @free_varasm_status(%struct.function*) #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) #3

; Function Attrs: nounwind readonly uwtable
define i64 @get_func_frame_size(%struct.function* nocapture readonly %f) #4 {
entry:
  %x_frame_offset = getelementptr inbounds %struct.function* %f, i64 0, i32 32
  %0 = load i64* %x_frame_offset, align 8, !tbaa !34
  %sub = sub nsw i64 0, %0
  ret i64 %sub
}

; Function Attrs: nounwind readonly uwtable
define i64 @get_frame_size() #4 {
entry:
  %0 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_frame_offset.i = getelementptr inbounds %struct.function* %0, i64 0, i32 32
  %1 = load i64* %x_frame_offset.i, align 8, !tbaa !34
  %sub.i = sub nsw i64 0, %1
  ret i64 %sub.i
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @assign_stack_local(i32 %mode, i64 %size, i32 %align) #0 {
entry:
  %0 = load %struct.function** @cfun, align 8, !tbaa !9
  %call = tail call fastcc %struct.rtx_def* @assign_stack_local_1(i32 %mode, i64 %size, i32 %align, %struct.function* %0)
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @assign_stack_local_1(i32 %mode, i64 %size, i32 %align, %struct.function* %function) #0 {
entry:
  switch i32 %align, label %if.else12 [
    i32 0, label %if.then
    i32 -1, label %if.then9
  ]

if.then:                                          ; preds = %entry
  %cmp1 = icmp eq i32 %mode, 51
  br i1 %cmp1, label %if.end, label %if.else

if.else:                                          ; preds = %if.then
  %call = tail call i32 @get_mode_alignment(i32 %mode) #5
  br label %if.end

if.end:                                           ; preds = %if.then, %if.else
  %alignment.0 = phi i32 [ %call, %if.else ], [ 128, %if.then ]
  %call3 = tail call %union.tree_node* @type_for_mode(i32 %mode, i32 0) #5
  %tobool = icmp eq %union.tree_node* %call3, null
  br i1 %tobool, label %if.end6, label %if.then4

if.then4:                                         ; preds = %if.end
  %call5 = tail call i32 @ix86_local_alignment(%union.tree_node* %call3, i32 %alignment.0) #5
  br label %if.end6

if.end6:                                          ; preds = %if.end, %if.then4
  %alignment.1 = phi i32 [ %call5, %if.then4 ], [ %alignment.0, %if.end ]
  %div = sdiv i32 %alignment.1, 8
  br label %if.end15

if.then9:                                         ; preds = %entry
  %sub = add nsw i64 %size, 15
  %and = and i64 %sub, -16
  br label %if.end15

if.else12:                                        ; preds = %entry
  %div13 = sdiv i32 %align, 8
  br label %if.end15

if.end15:                                         ; preds = %if.then9, %if.else12, %if.end6
  %alignment.2 = phi i32 [ %div, %if.end6 ], [ 16, %if.then9 ], [ %div13, %if.else12 ]
  %size.addr.0 = phi i64 [ %size, %if.end6 ], [ %and, %if.then9 ], [ %size, %if.else12 ]
  %x_frame_offset = getelementptr inbounds %struct.function* %function, i64 0, i32 32
  %0 = load i64* %x_frame_offset, align 8, !tbaa !34
  %sub16 = sub nsw i64 %0, %size.addr.0
  store i64 %sub16, i64* %x_frame_offset, align 8, !tbaa !34
  %mul = shl nsw i32 %alignment.2, 3
  %1 = load i32* @ix86_preferred_stack_boundary, align 4, !tbaa !17
  %cmp17 = icmp sgt i32 %mul, %1
  br i1 %cmp17, label %if.then19, label %if.end21

if.then19:                                        ; preds = %if.end15
  %div20 = sdiv i32 %1, 8
  br label %if.end21

if.end21:                                         ; preds = %if.then19, %if.end15
  %alignment.3 = phi i32 [ %div20, %if.then19 ], [ %alignment.2, %if.end15 ]
  %stack_alignment_needed = getelementptr inbounds %struct.function* %function, i64 0, i32 52
  %2 = load i32* %stack_alignment_needed, align 4, !tbaa !35
  %mul22 = shl nsw i32 %alignment.3, 3
  %cmp23 = icmp slt i32 %2, %mul22
  br i1 %cmp23, label %if.then25, label %cond.end

if.then25:                                        ; preds = %if.end21
  store i32 %mul22, i32* %stack_alignment_needed, align 4, !tbaa !35
  br label %cond.end

cond.end:                                         ; preds = %if.end21, %if.then25
  %neg36 = sub i32 0, %alignment.3
  %conv37 = sext i32 %neg36 to i64
  %and38 = and i64 %sub16, %conv37
  store i64 %and38, i64* %x_frame_offset, align 8, !tbaa !34
  %3 = load %struct.function** @cfun, align 8, !tbaa !9
  %cmp42 = icmp eq %struct.function* %3, %function
  %4 = load i32* @virtuals_instantiated, align 4
  %tobool44 = icmp ne i32 %4, 0
  %or.cond = and i1 %cmp42, %tobool44
  br i1 %or.cond, label %if.then45, label %if.else51

if.then45:                                        ; preds = %cond.end
  %5 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 3), align 8, !tbaa !9
  %call50 = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %5, i64 %and38) #5
  br label %if.end56

if.else51:                                        ; preds = %cond.end
  %6 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 7), align 8, !tbaa !9
  %call55 = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %6, i64 %and38) #5
  br label %if.end56

if.end56:                                         ; preds = %if.else51, %if.then45
  %addr.0 = phi %struct.rtx_def* [ %call50, %if.then45 ], [ %call55, %if.else51 ]
  %call57 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %mode, %struct.rtx_def* %addr.0) #5
  %x_stack_slot_list = getelementptr inbounds %struct.function* %function, i64 0, i32 26
  %7 = load %struct.rtx_def** %x_stack_slot_list, align 8, !tbaa !36
  %call58 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 0, %struct.rtx_def* %call57, %struct.rtx_def* %7) #5
  store %struct.rtx_def* %call58, %struct.rtx_def** %x_stack_slot_list, align 8, !tbaa !36
  ret %struct.rtx_def* %call57
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @assign_stack_temp_for_type(i32 %mode, i64 %size, i32 %keep, %union.tree_node* %type) #0 {
entry:
  %cmp = icmp eq i64 %size, -1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8]* @.str, i64 0, i64 0), i32 674, i8* getelementptr inbounds ([27 x i8]* @__FUNCTION__.assign_stack_temp_for_type, i64 0, i64 0)) #8
  unreachable

if.end:                                           ; preds = %entry
  %cmp1 = icmp eq i32 %mode, 51
  br i1 %cmp1, label %if.end3, label %if.else

if.else:                                          ; preds = %if.end
  %call = tail call i32 @get_mode_alignment(i32 %mode) #5
  br label %if.end3

if.end3:                                          ; preds = %if.end, %if.else
  %align.0 = phi i32 [ %call, %if.else ], [ 128, %if.end ]
  %tobool = icmp eq %union.tree_node* %type, null
  br i1 %tobool, label %if.end6, label %if.then8

if.end6:                                          ; preds = %if.end3
  %call5 = tail call %union.tree_node* @type_for_mode(i32 %mode, i32 0) #5
  %tobool7 = icmp eq %union.tree_node* %call5, null
  br i1 %tobool7, label %if.end10, label %if.then8

if.then8:                                         ; preds = %if.end6, %if.end3
  %type.addr.0343 = phi %union.tree_node* [ %call5, %if.end6 ], [ %type, %if.end3 ]
  %call9 = tail call i32 @ix86_local_alignment(%union.tree_node* %type.addr.0343, i32 %align.0) #5
  br label %if.end10

if.end10:                                         ; preds = %if.end6, %if.then8
  %tobool7346 = phi i1 [ true, %if.then8 ], [ false, %if.end6 ]
  %type.addr.0344 = phi %union.tree_node* [ %type.addr.0343, %if.then8 ], [ null, %if.end6 ]
  %align.1 = phi i32 [ %call9, %if.then8 ], [ %align.0, %if.end6 ]
  %0 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_temp_slots = getelementptr inbounds %struct.function* %0, i64 0, i32 39
  %p.0357 = load %struct.temp_slot** %x_temp_slots, align 8
  %tobool11358 = icmp eq %struct.temp_slot* %p.0357, null
  br i1 %tobool11358, label %if.then94, label %for.body

for.body:                                         ; preds = %if.end10, %for.inc
  %p.0360 = phi %struct.temp_slot* [ %p.0, %for.inc ], [ %p.0357, %if.end10 ]
  %best_p.0359 = phi %struct.temp_slot* [ %best_p.1, %for.inc ], [ null, %if.end10 ]
  %align12 = getelementptr inbounds %struct.temp_slot* %p.0360, i64 0, i32 3
  %1 = load i32* %align12, align 4, !tbaa !37
  %cmp13 = icmp ult i32 %1, %align.1
  br i1 %cmp13, label %for.inc, label %land.lhs.true

land.lhs.true:                                    ; preds = %for.body
  %size14 = getelementptr inbounds %struct.temp_slot* %p.0360, i64 0, i32 4
  %2 = load i64* %size14, align 8, !tbaa !39
  %cmp15 = icmp slt i64 %2, %size
  br i1 %cmp15, label %for.inc, label %land.lhs.true16

land.lhs.true16:                                  ; preds = %land.lhs.true
  %slot17 = getelementptr inbounds %struct.temp_slot* %p.0360, i64 0, i32 1
  %3 = load %struct.rtx_def** %slot17, align 8, !tbaa !40
  %4 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 0
  %bf.load = load i32* %4, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %cmp18 = icmp eq i32 %bf.clear, %mode
  br i1 %cmp18, label %land.lhs.true19, label %for.inc

land.lhs.true19:                                  ; preds = %land.lhs.true16
  %in_use = getelementptr inbounds %struct.temp_slot* %p.0360, i64 0, i32 7
  %5 = load i8* %in_use, align 1, !tbaa !41
  %tobool20 = icmp eq i8 %5, 0
  br i1 %tobool20, label %land.lhs.true21, label %for.inc

land.lhs.true21:                                  ; preds = %land.lhs.true19
  %type22 = getelementptr inbounds %struct.temp_slot* %p.0360, i64 0, i32 5
  %6 = load %union.tree_node** %type22, align 8, !tbaa !42
  %call23 = tail call i32 @objects_must_conflict_p(%union.tree_node* %6, %union.tree_node* %type.addr.0344) #5
  %tobool24 = icmp eq i32 %call23, 0
  br i1 %tobool24, label %for.inc, label %land.lhs.true25

land.lhs.true25:                                  ; preds = %land.lhs.true21
  %cmp26 = icmp eq %struct.temp_slot* %best_p.0359, null
  br i1 %cmp26, label %if.then38, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true25
  %size27 = getelementptr inbounds %struct.temp_slot* %best_p.0359, i64 0, i32 4
  %7 = load i64* %size27, align 8, !tbaa !39
  %8 = load i64* %size14, align 8, !tbaa !39
  %cmp29 = icmp sgt i64 %7, %8
  br i1 %cmp29, label %if.then38, label %lor.lhs.false30

lor.lhs.false30:                                  ; preds = %lor.lhs.false
  %cmp33 = icmp eq i64 %7, %8
  br i1 %cmp33, label %land.lhs.true34, label %for.inc

land.lhs.true34:                                  ; preds = %lor.lhs.false30
  %align35 = getelementptr inbounds %struct.temp_slot* %best_p.0359, i64 0, i32 3
  %9 = load i32* %align35, align 4, !tbaa !37
  %10 = load i32* %align12, align 4, !tbaa !37
  %cmp37 = icmp ugt i32 %9, %10
  br i1 %cmp37, label %if.then38, label %for.inc

if.then38:                                        ; preds = %land.lhs.true34, %lor.lhs.false, %land.lhs.true25
  %11 = load i32* %align12, align 4, !tbaa !37
  %cmp40 = icmp eq i32 %11, %align.1
  br i1 %cmp40, label %land.lhs.true41, label %for.inc

land.lhs.true41:                                  ; preds = %if.then38
  %12 = load i64* %size14, align 8, !tbaa !39
  %cmp43 = icmp eq i64 %12, %size
  br i1 %cmp43, label %if.end91, label %for.inc

for.inc:                                          ; preds = %if.then38, %land.lhs.true41, %land.lhs.true21, %land.lhs.true19, %land.lhs.true, %for.body, %land.lhs.true16, %lor.lhs.false30, %land.lhs.true34
  %best_p.1 = phi %struct.temp_slot* [ %best_p.0359, %land.lhs.true19 ], [ %best_p.0359, %land.lhs.true34 ], [ %best_p.0359, %lor.lhs.false30 ], [ %best_p.0359, %land.lhs.true21 ], [ %best_p.0359, %land.lhs.true16 ], [ %best_p.0359, %land.lhs.true ], [ %best_p.0359, %for.body ], [ %p.0360, %land.lhs.true41 ], [ %p.0360, %if.then38 ]
  %next = getelementptr inbounds %struct.temp_slot* %p.0360, i64 0, i32 0
  %p.0 = load %struct.temp_slot** %next, align 8
  %tobool11 = icmp eq %struct.temp_slot* %p.0, null
  br i1 %tobool11, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc
  %tobool47 = icmp eq %struct.temp_slot* %best_p.1, null
  br i1 %tobool47, label %if.then94, label %if.then48

if.then48:                                        ; preds = %for.end
  %slot49 = getelementptr inbounds %struct.temp_slot* %best_p.1, i64 0, i32 1
  %13 = load %struct.rtx_def** %slot49, align 8, !tbaa !40
  %14 = getelementptr inbounds %struct.rtx_def* %13, i64 0, i32 0
  %bf.load50 = load i32* %14, align 8
  %bf.clear52 = and i32 %bf.load50, 16711680
  %cmp53 = icmp eq i32 %bf.clear52, 3342336
  br i1 %cmp53, label %if.then54, label %if.end129

if.then54:                                        ; preds = %if.then48
  %align55 = getelementptr inbounds %struct.temp_slot* %best_p.1, i64 0, i32 3
  %15 = load i32* %align55, align 4, !tbaa !37
  %div = lshr i32 %15, 3
  %conv341 = zext i32 %div to i64
  %add = add i64 %size, -1
  %sub = add i64 %add, %conv341
  %neg = sub i32 0, %div
  %conv57 = sext i32 %neg to i64
  %and = and i64 %sub, %conv57
  %size58 = getelementptr inbounds %struct.temp_slot* %best_p.1, i64 0, i32 4
  %16 = load i64* %size58, align 8, !tbaa !39
  %sub59 = sub nsw i64 %16, %and
  %cmp61 = icmp slt i64 %sub59, %conv341
  br i1 %cmp61, label %if.end91, label %if.then63

if.then63:                                        ; preds = %if.then54
  %call64 = tail call i8* @ggc_alloc(i64 88) #5
  %17 = bitcast i8* %call64 to %struct.temp_slot*
  %18 = getelementptr inbounds i8* %call64, i64 57
  store i8 0, i8* %18, align 1, !tbaa !43
  %19 = getelementptr inbounds i8* %call64, i64 56
  store i8 0, i8* %19, align 1, !tbaa !41
  %20 = load i64* %size58, align 8, !tbaa !39
  %sub67 = sub nsw i64 %20, %and
  %size68 = getelementptr inbounds i8* %call64, i64 32
  %21 = bitcast i8* %size68 to i64*
  store i64 %sub67, i64* %21, align 8, !tbaa !39
  %base_offset = getelementptr inbounds %struct.temp_slot* %best_p.1, i64 0, i32 11
  %22 = load i64* %base_offset, align 8, !tbaa !44
  %add69 = add nsw i64 %22, %and
  %base_offset70 = getelementptr inbounds i8* %call64, i64 72
  %23 = bitcast i8* %base_offset70 to i64*
  store i64 %add69, i64* %23, align 8, !tbaa !44
  %full_size = getelementptr inbounds %struct.temp_slot* %best_p.1, i64 0, i32 12
  %24 = load i64* %full_size, align 8, !tbaa !45
  %sub71 = sub nsw i64 %24, %and
  %full_size72 = getelementptr inbounds i8* %call64, i64 80
  %25 = bitcast i8* %full_size72 to i64*
  store i64 %sub71, i64* %25, align 8, !tbaa !45
  %26 = load %struct.rtx_def** %slot49, align 8, !tbaa !40
  %arrayidx = getelementptr inbounds %struct.rtx_def* %26, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %27 = load %struct.rtx_def** %rtx, align 8, !tbaa !9
  %call74 = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %27, i64 %and) #5
  %call75 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %call74) #5
  %slot76 = getelementptr inbounds i8* %call64, i64 8
  %28 = bitcast i8* %slot76 to %struct.rtx_def**
  store %struct.rtx_def* %call75, %struct.rtx_def** %28, align 8, !tbaa !40
  %29 = load i32* %align55, align 4, !tbaa !37
  %align78 = getelementptr inbounds i8* %call64, i64 24
  %30 = bitcast i8* %align78 to i32*
  store i32 %29, i32* %30, align 4, !tbaa !37
  %address = getelementptr inbounds i8* %call64, i64 16
  %31 = bitcast i8* %address to %struct.rtx_def**
  store %struct.rtx_def* null, %struct.rtx_def** %31, align 8, !tbaa !46
  %rtl_expr = getelementptr inbounds i8* %call64, i64 48
  %32 = bitcast i8* %rtl_expr to %union.tree_node**
  store %union.tree_node* null, %union.tree_node** %32, align 8, !tbaa !47
  %type79 = getelementptr inbounds %struct.temp_slot* %best_p.1, i64 0, i32 5
  %33 = load %union.tree_node** %type79, align 8, !tbaa !42
  %type80 = getelementptr inbounds i8* %call64, i64 40
  %34 = bitcast i8* %type80 to %union.tree_node**
  store %union.tree_node* %33, %union.tree_node** %34, align 8, !tbaa !42
  %35 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_temp_slots81 = getelementptr inbounds %struct.function* %35, i64 0, i32 39
  %36 = load %struct.temp_slot** %x_temp_slots81, align 8, !tbaa !48
  %next82 = bitcast i8* %call64 to %struct.temp_slot**
  store %struct.temp_slot* %36, %struct.temp_slot** %next82, align 8, !tbaa !49
  %37 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_temp_slots83 = getelementptr inbounds %struct.function* %37, i64 0, i32 39
  store %struct.temp_slot* %17, %struct.temp_slot** %x_temp_slots83, align 8, !tbaa !48
  %38 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_stack_slot_list = getelementptr inbounds %struct.function* %38, i64 0, i32 26
  %39 = load %struct.rtx_def** %x_stack_slot_list, align 8, !tbaa !36
  %call85 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 0, %struct.rtx_def* %call75, %struct.rtx_def* %39) #5
  %40 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_stack_slot_list86 = getelementptr inbounds %struct.function* %40, i64 0, i32 26
  store %struct.rtx_def* %call85, %struct.rtx_def** %x_stack_slot_list86, align 8, !tbaa !36
  store i64 %and, i64* %size58, align 8, !tbaa !39
  store i64 %and, i64* %full_size, align 8, !tbaa !45
  br label %if.end129

if.end91:                                         ; preds = %land.lhs.true41, %if.then54
  %p.1 = phi %struct.temp_slot* [ %best_p.1, %if.then54 ], [ %p.0360, %land.lhs.true41 ]
  %cmp92 = icmp eq %struct.temp_slot* %p.1, null
  br i1 %cmp92, label %if.then94, label %if.end129

if.then94:                                        ; preds = %if.end10, %for.end, %if.end91
  %41 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_frame_offset = getelementptr inbounds %struct.function* %41, i64 0, i32 32
  %42 = load i64* %x_frame_offset, align 8, !tbaa !34
  %call95 = tail call i8* @ggc_alloc(i64 88) #5
  %43 = bitcast i8* %call95 to %struct.temp_slot*
  %cmp99 = icmp ult i32 %align.1, 128
  %or.cond = and i1 %cmp1, %cmp99
  br i1 %or.cond, label %if.then101, label %if.end102

if.then101:                                       ; preds = %if.then94
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8]* @.str, i64 0, i64 0), i32 759, i8* getelementptr inbounds ([27 x i8]* @__FUNCTION__.assign_stack_temp_for_type, i64 0, i64 0)) #8
  unreachable

if.end102:                                        ; preds = %if.then94
  br i1 %cmp1, label %cond.true, label %cond.end

cond.true:                                        ; preds = %if.end102
  %div105 = lshr i32 %align.1, 3
  %conv106 = zext i32 %div105 to i64
  %add107 = add i64 %size, 4294967295
  %sub108 = add i64 %add107, %conv106
  %neg111 = sub i32 0, %div105
  %conv112 = zext i32 %neg111 to i64
  %and113 = and i64 %sub108, %conv112
  br label %cond.end

cond.end:                                         ; preds = %if.end102, %cond.true
  %cond = phi i64 [ %and113, %cond.true ], [ %size, %if.end102 ]
  %44 = load %struct.function** @cfun, align 8, !tbaa !9
  %call.i = tail call fastcc %struct.rtx_def* @assign_stack_local_1(i32 %mode, i64 %cond, i32 %align.1, %struct.function* %44) #5
  %slot115 = getelementptr inbounds i8* %call95, i64 8
  %45 = bitcast i8* %slot115 to %struct.rtx_def**
  store %struct.rtx_def* %call.i, %struct.rtx_def** %45, align 8, !tbaa !40
  %align116 = getelementptr inbounds i8* %call95, i64 24
  %46 = bitcast i8* %align116 to i32*
  store i32 %align.1, i32* %46, align 4, !tbaa !37
  %47 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_frame_offset117 = getelementptr inbounds %struct.function* %47, i64 0, i32 32
  %48 = load i64* %x_frame_offset117, align 8, !tbaa !34
  %sub118 = sub nsw i64 %42, %48
  %size119 = getelementptr inbounds i8* %call95, i64 32
  %49 = bitcast i8* %size119 to i64*
  store i64 %sub118, i64* %49, align 8, !tbaa !39
  %base_offset121 = getelementptr inbounds i8* %call95, i64 72
  %50 = bitcast i8* %base_offset121 to i64*
  store i64 %48, i64* %50, align 8, !tbaa !44
  %full_size124 = getelementptr inbounds i8* %call95, i64 80
  %51 = bitcast i8* %full_size124 to i64*
  store i64 %sub118, i64* %51, align 8, !tbaa !45
  %address125 = getelementptr inbounds i8* %call95, i64 16
  %52 = bitcast i8* %address125 to %struct.rtx_def**
  store %struct.rtx_def* null, %struct.rtx_def** %52, align 8, !tbaa !46
  %53 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_temp_slots126 = getelementptr inbounds %struct.function* %53, i64 0, i32 39
  %54 = load %struct.temp_slot** %x_temp_slots126, align 8, !tbaa !48
  %next127 = bitcast i8* %call95 to %struct.temp_slot**
  store %struct.temp_slot* %54, %struct.temp_slot** %next127, align 8, !tbaa !49
  %55 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_temp_slots128 = getelementptr inbounds %struct.function* %55, i64 0, i32 39
  store %struct.temp_slot* %43, %struct.temp_slot** %x_temp_slots128, align 8, !tbaa !48
  br label %if.end129

if.end129:                                        ; preds = %if.then48, %if.then63, %cond.end, %if.end91
  %p.2 = phi %struct.temp_slot* [ %43, %cond.end ], [ %p.1, %if.end91 ], [ %best_p.1, %if.then63 ], [ %best_p.1, %if.then48 ]
  %in_use130 = getelementptr inbounds %struct.temp_slot* %p.2, i64 0, i32 7
  store i8 1, i8* %in_use130, align 1, !tbaa !41
  %addr_taken131 = getelementptr inbounds %struct.temp_slot* %p.2, i64 0, i32 8
  store i8 0, i8* %addr_taken131, align 1, !tbaa !43
  %56 = load %struct.function** @cfun, align 8, !tbaa !9
  %emit = getelementptr inbounds %struct.function* %56, i64 0, i32 3
  %57 = load %struct.emit_status** %emit, align 8, !tbaa !18
  %sequence_rtl_expr = getelementptr inbounds %struct.emit_status* %57, i64 0, i32 4
  %58 = load %union.tree_node** %sequence_rtl_expr, align 8, !tbaa !50
  %rtl_expr132 = getelementptr inbounds %struct.temp_slot* %p.2, i64 0, i32 6
  store %union.tree_node* %58, %union.tree_node** %rtl_expr132, align 8, !tbaa !47
  %type133 = getelementptr inbounds %struct.temp_slot* %p.2, i64 0, i32 5
  store %union.tree_node* %type.addr.0344, %union.tree_node** %type133, align 8, !tbaa !42
  %cmp134 = icmp eq i32 %keep, 2
  br i1 %cmp134, label %if.then136, label %if.else138

if.then136:                                       ; preds = %if.end129
  %59 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_target_temp_slot_level = getelementptr inbounds %struct.function* %59, i64 0, i32 42
  %60 = load i32* %x_target_temp_slot_level, align 4, !tbaa !51
  %level = getelementptr inbounds %struct.temp_slot* %p.2, i64 0, i32 9
  store i32 %60, i32* %level, align 4, !tbaa !52
  %keep137 = getelementptr inbounds %struct.temp_slot* %p.2, i64 0, i32 10
  store i32 0, i32* %keep137, align 4, !tbaa !53
  br label %if.end148

if.else138:                                       ; preds = %if.end129
  %cmp139 = icmp eq i32 %keep, 3
  %61 = load %struct.function** @cfun, align 8, !tbaa !9
  br i1 %cmp139, label %if.then141, label %if.else144

if.then141:                                       ; preds = %if.else138
  %x_var_temp_slot_level = getelementptr inbounds %struct.function* %61, i64 0, i32 41
  %62 = load i32* %x_var_temp_slot_level, align 4, !tbaa !54
  %level142 = getelementptr inbounds %struct.temp_slot* %p.2, i64 0, i32 9
  store i32 %62, i32* %level142, align 4, !tbaa !52
  %keep143 = getelementptr inbounds %struct.temp_slot* %p.2, i64 0, i32 10
  store i32 0, i32* %keep143, align 4, !tbaa !53
  br label %if.end148

if.else144:                                       ; preds = %if.else138
  %x_temp_slot_level = getelementptr inbounds %struct.function* %61, i64 0, i32 40
  %63 = load i32* %x_temp_slot_level, align 4, !tbaa !55
  %level145 = getelementptr inbounds %struct.temp_slot* %p.2, i64 0, i32 9
  store i32 %63, i32* %level145, align 4, !tbaa !52
  %keep146 = getelementptr inbounds %struct.temp_slot* %p.2, i64 0, i32 10
  store i32 %keep, i32* %keep146, align 4, !tbaa !53
  br label %if.end148

if.end148:                                        ; preds = %if.then141, %if.else144, %if.then136
  %slot149 = getelementptr inbounds %struct.temp_slot* %p.2, i64 0, i32 1
  %64 = load %struct.rtx_def** %slot149, align 8, !tbaa !40
  %arrayidx151 = getelementptr inbounds %struct.rtx_def* %64, i64 0, i32 1, i64 0
  %rtx152 = bitcast %union.rtunion_def* %arrayidx151 to %struct.rtx_def**
  %65 = load %struct.rtx_def** %rtx152, align 8, !tbaa !9
  %call153 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %mode, %struct.rtx_def* %65) #5
  %66 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_stack_slot_list154 = getelementptr inbounds %struct.function* %66, i64 0, i32 26
  %67 = load %struct.rtx_def** %x_stack_slot_list154, align 8, !tbaa !36
  %call155 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 0, %struct.rtx_def* %call153, %struct.rtx_def* %67) #5
  %68 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_stack_slot_list156 = getelementptr inbounds %struct.function* %68, i64 0, i32 26
  store %struct.rtx_def* %call155, %struct.rtx_def** %x_stack_slot_list156, align 8, !tbaa !36
  br i1 %tobool7346, label %cond.true158, label %if.end226.critedge

cond.true158:                                     ; preds = %if.end148
  %call159 = tail call i64 @get_alias_set(%union.tree_node* %type.addr.0344) #5
  tail call void @set_mem_alias_set(%struct.rtx_def* %call153, i64 %call159) #5
  tail call void @set_mem_align(%struct.rtx_def* %call153, i32 %align.1) #5
  %readonly_flag = getelementptr inbounds %union.tree_node* %type.addr.0344, i64 0, i32 0, i32 0, i32 2
  %bf.load166 = load i32* %readonly_flag, align 8
  %69 = getelementptr inbounds %struct.rtx_def* %call153, i64 0, i32 0
  %bf.load169 = load i32* %69, align 8
  %70 = shl i32 %bf.load166, 14
  %bf.shl = and i32 %70, 67108864
  %bf.clear170 = and i32 %bf.load169, -67108865
  %bf.set = or i32 %bf.clear170, %bf.shl
  store i32 %bf.set, i32* %69, align 8
  %bf.load172 = load i32* %readonly_flag, align 8
  %71 = shl i32 %bf.load172, 16
  %bf.shl177 = and i32 %71, 134217728
  %bf.clear178 = and i32 %bf.set, -134217729
  %bf.set179 = or i32 %bf.clear178, %bf.shl177
  store i32 %bf.set179, i32* %69, align 8
  %bf.load181 = load i32* %readonly_flag, align 8
  %bf.clear182 = and i32 %bf.load181, 255
  %bf.clear182.off = add i32 %bf.clear182, -18
  %switch = icmp ult i32 %bf.clear182.off, 5
  %bf.set216 = and i32 %bf.set179, 1879048191
  br i1 %switch, label %if.then213, label %if.else219

if.then213:                                       ; preds = %cond.true158
  %bf.clear218 = or i32 %bf.set216, 268435456
  store i32 %bf.clear218, i32* %69, align 8
  br label %if.end226

if.else219:                                       ; preds = %cond.true158
  %bf.set224 = or i32 %bf.set216, -2147483648
  store i32 %bf.set224, i32* %69, align 8
  br label %if.end226

if.end226.critedge:                               ; preds = %if.end148
  tail call void @set_mem_alias_set(%struct.rtx_def* %call153, i64 0) #5
  tail call void @set_mem_align(%struct.rtx_def* %call153, i32 %align.1) #5
  br label %if.end226

if.end226:                                        ; preds = %if.end226.critedge, %if.else219, %if.then213
  ret %struct.rtx_def* %call153
}

declare i32 @get_mode_alignment(i32) #2

declare %union.tree_node* @type_for_mode(i32, i32) #2

declare i32 @ix86_local_alignment(%union.tree_node*, i32) #2

declare i32 @objects_must_conflict_p(%union.tree_node*, %union.tree_node*) #2

declare i8* @ggc_alloc(i64) #2

declare %struct.rtx_def* @gen_rtx_MEM(i32, %struct.rtx_def*) #2

declare %struct.rtx_def* @plus_constant_wide(%struct.rtx_def*, i64) #2

declare void @set_mem_alias_set(%struct.rtx_def*, i64) #2

declare i64 @get_alias_set(%union.tree_node*) #2

declare void @set_mem_align(%struct.rtx_def*, i32) #2

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @assign_stack_temp(i32 %mode, i64 %size, i32 %keep) #0 {
entry:
  %call = tail call %struct.rtx_def* @assign_stack_temp_for_type(i32 %mode, i64 %size, i32 %keep, %union.tree_node* null)
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @assign_temp(%union.tree_node* %type_or_decl, i32 %keep, i32 %memory_required, i32 %dont_promote) #0 {
entry:
  %unsignedp = alloca i32, align 4
  %code = getelementptr inbounds %union.tree_node* %type_or_decl, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %idxprom82 = zext i32 %bf.clear to i64
  %arrayidx = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom82
  %0 = load i8* %arrayidx, align 1, !tbaa !22
  %cmp = icmp eq i8 %0, 100
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %type3 = getelementptr inbounds %union.tree_node* %type_or_decl, i64 0, i32 0, i32 0, i32 1
  %1 = load %union.tree_node** %type3, align 8, !tbaa !56
  %unsigned_flag.phi.trans.insert = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 0, i32 2
  %bf.load9.pre = load i32* %unsigned_flag.phi.trans.insert, align 8
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %bf.load9 = phi i32 [ %bf.load9.pre, %if.then ], [ %bf.load, %entry ]
  %type.0 = phi %union.tree_node* [ %1, %if.then ], [ %type_or_decl, %entry ]
  %decl.0 = phi %union.tree_node* [ %type_or_decl, %if.then ], [ null, %entry ]
  %type4 = bitcast %union.tree_node* %type.0 to %struct.tree_type*
  %mode5 = getelementptr inbounds %struct.tree_type* %type4, i64 0, i32 6
  %bf.load6 = load i32* %mode5, align 4
  %bf.lshr = lshr i32 %bf.load6, 9
  %bf.clear7 = and i32 %bf.lshr, 127
  %unsigned_flag = getelementptr inbounds %union.tree_node* %type.0, i64 0, i32 0, i32 0, i32 2
  %bf.lshr10 = lshr i32 %bf.load9, 13
  %bf.clear11 = and i32 %bf.lshr10, 1
  store i32 %bf.clear11, i32* %unsignedp, align 4, !tbaa !17
  %cmp12 = icmp eq i32 %bf.clear7, 51
  %tobool = icmp ne i32 %memory_required, 0
  %or.cond = or i1 %cmp12, %tobool
  br i1 %or.cond, label %if.then14, label %if.end56

if.then14:                                        ; preds = %if.end
  %call = call i64 @int_size_in_bytes(%union.tree_node* %type.0) #5
  %cmp15 = icmp eq i64 %call, 0
  %.call = select i1 %cmp15, i64 1, i64 %call
  %cmp19 = icmp eq i64 %.call, -1
  br i1 %cmp19, label %land.lhs.true, label %if.end54

land.lhs.true:                                    ; preds = %if.then14
  %bf.load23 = load i32* %unsigned_flag, align 8
  %bf.clear24 = and i32 %bf.load23, 255
  %cmp25 = icmp eq i32 %bf.clear24, 18
  br i1 %cmp25, label %land.lhs.true27, label %if.end40

land.lhs.true27:                                  ; preds = %land.lhs.true
  %2 = getelementptr inbounds %union.tree_node* %type.0, i64 0, i32 0, i32 13
  %3 = load %union.tree_node** %2, align 8, !tbaa !57
  %cmp29 = icmp eq %union.tree_node* %3, null
  br i1 %cmp29, label %if.end40, label %land.lhs.true31

land.lhs.true31:                                  ; preds = %land.lhs.true27
  %call34 = call i32 @host_integerp(%union.tree_node* %3, i32 1) #5
  %tobool35 = icmp eq i32 %call34, 0
  br i1 %tobool35, label %if.end40, label %if.then36

if.then36:                                        ; preds = %land.lhs.true31
  %4 = load %union.tree_node** %2, align 8, !tbaa !57
  %call39 = call i64 @tree_low_cst(%union.tree_node* %4, i32 1) #5
  br label %if.end40

if.end40:                                         ; preds = %land.lhs.true31, %land.lhs.true27, %if.then36, %land.lhs.true
  %size.0 = phi i64 [ %call39, %if.then36 ], [ -1, %land.lhs.true31 ], [ -1, %land.lhs.true27 ], [ -1, %land.lhs.true ]
  %tobool41 = icmp ne %union.tree_node* %decl.0, null
  %cmp43 = icmp eq i64 %size.0, -1
  %or.cond62 = and i1 %tobool41, %cmp43
  br i1 %or.cond62, label %land.lhs.true45, label %if.end54

land.lhs.true45:                                  ; preds = %if.end40
  %5 = getelementptr inbounds %union.tree_node* %type.0, i64 0, i32 0, i32 4
  %6 = load %union.tree_node** %5, align 8, !tbaa !59
  %code48 = getelementptr inbounds %union.tree_node* %6, i64 0, i32 0, i32 0, i32 2
  %bf.load49 = load i32* %code48, align 8
  %bf.clear50 = and i32 %bf.load49, 255
  %cmp51 = icmp eq i32 %bf.clear50, 25
  br i1 %cmp51, label %if.then53, label %if.end54

if.then53:                                        ; preds = %land.lhs.true45
  call void (%union.tree_node*, i8*, ...)* @error_with_decl(%union.tree_node* %decl.0, i8* getelementptr inbounds ([35 x i8]* @.str1, i64 0, i64 0)) #5
  br label %if.end54

if.end54:                                         ; preds = %if.then14, %if.then53, %land.lhs.true45, %if.end40
  %size.1 = phi i64 [ 1, %if.then53 ], [ -1, %land.lhs.true45 ], [ %size.0, %if.end40 ], [ %.call, %if.then14 ]
  %call55 = call %struct.rtx_def* @assign_stack_temp_for_type(i32 %bf.clear7, i64 %size.1, i32 %keep, %union.tree_node* %type.0)
  br label %return

if.end56:                                         ; preds = %if.end
  %tobool57 = icmp eq i32 %dont_promote, 0
  br i1 %tobool57, label %if.then58, label %if.end60

if.then58:                                        ; preds = %if.end56
  %call59 = call i32 @promote_mode(%union.tree_node* %type.0, i32 %bf.clear7, i32* %unsignedp, i32 0) #5
  br label %if.end60

if.end60:                                         ; preds = %if.end56, %if.then58
  %mode.0 = phi i32 [ %bf.clear7, %if.end56 ], [ %call59, %if.then58 ]
  %call61 = call %struct.rtx_def* @gen_reg_rtx(i32 %mode.0) #5
  br label %return

return:                                           ; preds = %if.end60, %if.end54
  %retval.0 = phi %struct.rtx_def* [ %call55, %if.end54 ], [ %call61, %if.end60 ]
  ret %struct.rtx_def* %retval.0
}

declare i64 @int_size_in_bytes(%union.tree_node*) #2

declare i32 @host_integerp(%union.tree_node*, i32) #2

declare i64 @tree_low_cst(%union.tree_node*, i32) #2

declare void @error_with_decl(%union.tree_node*, i8*, ...) #2

declare i32 @promote_mode(%union.tree_node*, i32, i32*, i32) #2

declare %struct.rtx_def* @gen_reg_rtx(i32) #2

; Function Attrs: nounwind uwtable
define void @combine_temp_slots() #0 {
entry:
  %0 = load i32* @flag_strict_aliasing, align 4, !tbaa !17
  %tobool = icmp eq i32 %0, 0
  br i1 %tobool, label %if.end, label %for.end79

if.end:                                           ; preds = %entry
  %1 = load i32* @flag_expensive_optimizations, align 4, !tbaa !17
  %tobool1 = icmp eq i32 %1, 0
  %2 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_temp_slots = getelementptr inbounds %struct.function* %2, i64 0, i32 39
  %p.0132 = load %struct.temp_slot** %x_temp_slots, align 8
  br i1 %tobool1, label %if.then2, label %if.end8

if.then2:                                         ; preds = %if.end
  %tobool3133 = icmp eq %struct.temp_slot* %p.0132, null
  br i1 %tobool3133, label %for.end79, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.then2
  %3 = load i32* @optimize, align 4
  %cmp5 = icmp eq i32 %3, 0
  br i1 %cmp5, label %for.body.us, label %for.body

for.body.us:                                      ; preds = %for.body.lr.ph, %for.inc.us
  %p.0135.us = phi %struct.temp_slot* [ %p.0.us, %for.inc.us ], [ %p.0132, %for.body.lr.ph ]
  %num_slots.0134.us = phi i32 [ %inc.us, %for.inc.us ], [ 0, %for.body.lr.ph ]
  %cmp4.us = icmp sgt i32 %num_slots.0134.us, 10
  br i1 %cmp4.us, label %for.end79, label %for.inc.us

for.inc.us:                                       ; preds = %for.body.us
  %next.us = getelementptr inbounds %struct.temp_slot* %p.0135.us, i64 0, i32 0
  %inc.us = add nsw i32 %num_slots.0134.us, 1
  %p.0.us = load %struct.temp_slot** %next.us, align 8
  %tobool3.us = icmp eq %struct.temp_slot* %p.0.us, null
  br i1 %tobool3.us, label %if.end8, label %for.body.us

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %p.0135 = phi %struct.temp_slot* [ %p.0, %for.inc ], [ %p.0132, %for.body.lr.ph ]
  %num_slots.0134 = phi i32 [ %inc, %for.inc ], [ 0, %for.body.lr.ph ]
  %cmp = icmp sgt i32 %num_slots.0134, 100
  br i1 %cmp, label %for.end79, label %for.inc

for.inc:                                          ; preds = %for.body
  %next = getelementptr inbounds %struct.temp_slot* %p.0135, i64 0, i32 0
  %inc = add nsw i32 %num_slots.0134, 1
  %p.0 = load %struct.temp_slot** %next, align 8
  %tobool3 = icmp eq %struct.temp_slot* %p.0, null
  br i1 %tobool3, label %if.end8, label %for.body

if.end8:                                          ; preds = %for.inc, %for.inc.us, %if.end
  %tobool11129 = icmp eq %struct.temp_slot* %p.0132, null
  br i1 %tobool11129, label %for.end79, label %for.body12

for.body12:                                       ; preds = %if.end8, %for.cond10.backedge
  %p.1131 = phi %struct.temp_slot* [ %p.1, %for.cond10.backedge ], [ %p.0132, %if.end8 ]
  %prev_p.0130 = phi %struct.temp_slot* [ %prev_p.0.be, %for.cond10.backedge ], [ null, %if.end8 ]
  %in_use = getelementptr inbounds %struct.temp_slot* %p.1131, i64 0, i32 7
  %4 = load i8* %in_use, align 1, !tbaa !41
  %tobool13 = icmp eq i8 %4, 0
  br i1 %tobool13, label %land.lhs.true14, label %cond.true

land.lhs.true14:                                  ; preds = %for.body12
  %slot = getelementptr inbounds %struct.temp_slot* %p.1131, i64 0, i32 1
  %5 = load %struct.rtx_def** %slot, align 8, !tbaa !40
  %6 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 0
  %bf.load = load i32* %6, align 8
  %bf.clear = and i32 %bf.load, 16711680
  %cmp15 = icmp eq i32 %bf.clear, 3342336
  br i1 %cmp15, label %for.cond18.preheader, label %cond.true

for.cond18.preheader:                             ; preds = %land.lhs.true14
  %q.0.in123 = getelementptr inbounds %struct.temp_slot* %p.1131, i64 0, i32 0
  %q.0120124 = load %struct.temp_slot** %q.0.in123, align 8
  %tobool19121125 = icmp eq %struct.temp_slot* %q.0120124, null
  br i1 %tobool19121125, label %cond.true, label %for.body20.lr.ph.lr.ph

for.body20.lr.ph.lr.ph:                           ; preds = %for.cond18.preheader
  %base_offset = getelementptr inbounds %struct.temp_slot* %p.1131, i64 0, i32 11
  %full_size = getelementptr inbounds %struct.temp_slot* %p.1131, i64 0, i32 12
  %size33 = getelementptr inbounds %struct.temp_slot* %p.1131, i64 0, i32 4
  br label %for.body20.lr.ph

for.body20.lr.ph:                                 ; preds = %for.body20.lr.ph.lr.ph, %for.cond18.outer.backedge
  %q.0120127 = phi %struct.temp_slot* [ %q.0120124, %for.body20.lr.ph.lr.ph ], [ %q.0120, %for.cond18.outer.backedge ]
  %q.0.in126 = phi %struct.temp_slot** [ %q.0.in123, %for.body20.lr.ph.lr.ph ], [ %q.0.in, %for.cond18.outer.backedge ]
  br label %for.body20

for.body20:                                       ; preds = %for.body20.lr.ph, %if.then32
  %q.0122 = phi %struct.temp_slot* [ %q.0120127, %for.body20.lr.ph ], [ %16, %if.then32 ]
  %in_use21 = getelementptr inbounds %struct.temp_slot* %q.0122, i64 0, i32 7
  %7 = load i8* %in_use21, align 1, !tbaa !41
  %tobool22 = icmp eq i8 %7, 0
  br i1 %tobool22, label %land.lhs.true23, label %for.cond18.outer.backedge

land.lhs.true23:                                  ; preds = %for.body20
  %slot24 = getelementptr inbounds %struct.temp_slot* %q.0122, i64 0, i32 1
  %8 = load %struct.rtx_def** %slot24, align 8, !tbaa !40
  %9 = getelementptr inbounds %struct.rtx_def* %8, i64 0, i32 0
  %bf.load25 = load i32* %9, align 8
  %bf.clear27 = and i32 %bf.load25, 16711680
  %cmp28 = icmp eq i32 %bf.clear27, 3342336
  br i1 %cmp28, label %if.then29, label %for.cond18.outer.backedge

if.then29:                                        ; preds = %land.lhs.true23
  %10 = load i64* %base_offset, align 8, !tbaa !44
  %11 = load i64* %full_size, align 8, !tbaa !45
  %add = add nsw i64 %11, %10
  %base_offset30 = getelementptr inbounds %struct.temp_slot* %q.0122, i64 0, i32 11
  %12 = load i64* %base_offset30, align 8, !tbaa !44
  %cmp31 = icmp eq i64 %add, %12
  br i1 %cmp31, label %if.then32, label %if.else

if.then32:                                        ; preds = %if.then29
  %size = getelementptr inbounds %struct.temp_slot* %q.0122, i64 0, i32 4
  %13 = load i64* %size, align 8, !tbaa !39
  %14 = load i64* %size33, align 8, !tbaa !39
  %add34 = add nsw i64 %14, %13
  store i64 %add34, i64* %size33, align 8, !tbaa !39
  %full_size35 = getelementptr inbounds %struct.temp_slot* %q.0122, i64 0, i32 12
  %15 = load i64* %full_size35, align 8, !tbaa !45
  %add37 = add nsw i64 %11, %15
  store i64 %add37, i64* %full_size, align 8, !tbaa !45
  %next55 = getelementptr inbounds %struct.temp_slot* %q.0122, i64 0, i32 0
  %16 = load %struct.temp_slot** %next55, align 8, !tbaa !49
  store %struct.temp_slot* %16, %struct.temp_slot** %q.0.in126, align 8, !tbaa !49
  %tobool19 = icmp eq %struct.temp_slot* %16, null
  br i1 %tobool19, label %for.inc75, label %for.body20

if.else:                                          ; preds = %if.then29
  %full_size39 = getelementptr inbounds %struct.temp_slot* %q.0122, i64 0, i32 12
  %17 = load i64* %full_size39, align 8, !tbaa !45
  %add40 = add nsw i64 %17, %12
  %cmp42 = icmp eq i64 %add40, %10
  br i1 %cmp42, label %if.then43, label %for.cond18.outer.backedge

for.cond18.outer.backedge:                        ; preds = %land.lhs.true23, %for.body20, %if.else
  %q.0.in = getelementptr inbounds %struct.temp_slot* %q.0122, i64 0, i32 0
  %q.0120 = load %struct.temp_slot** %q.0.in, align 8
  %tobool19121 = icmp eq %struct.temp_slot* %q.0120, null
  br i1 %tobool19121, label %for.inc75, label %for.body20.lr.ph

if.then43:                                        ; preds = %if.else
  %18 = load i64* %size33, align 8, !tbaa !39
  %size45 = getelementptr inbounds %struct.temp_slot* %q.0122, i64 0, i32 4
  %19 = load i64* %size45, align 8, !tbaa !39
  %add46 = add nsw i64 %19, %18
  store i64 %add46, i64* %size45, align 8, !tbaa !39
  %add49 = add nsw i64 %17, %11
  store i64 %add49, i64* %full_size39, align 8, !tbaa !45
  %tobool65 = icmp eq %struct.temp_slot* %prev_p.0130, null
  %20 = load %struct.temp_slot** %q.0.in123, align 8, !tbaa !49
  br i1 %tobool65, label %for.inc75.thread112, label %if.then66

if.then66:                                        ; preds = %if.then43
  %next68 = getelementptr inbounds %struct.temp_slot* %prev_p.0130, i64 0, i32 0
  store %struct.temp_slot* %20, %struct.temp_slot** %next68, align 8, !tbaa !49
  br label %cond.true

for.inc75.thread112:                              ; preds = %if.then43
  %21 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_temp_slots71 = getelementptr inbounds %struct.function* %21, i64 0, i32 39
  store %struct.temp_slot* %20, %struct.temp_slot** %x_temp_slots71, align 8, !tbaa !48
  br label %cond.false

for.inc75:                                        ; preds = %for.cond18.outer.backedge, %if.then32
  %tobool76 = icmp eq %struct.temp_slot* %p.1131, null
  br i1 %tobool76, label %cond.false, label %cond.true

cond.true:                                        ; preds = %for.cond18.preheader, %land.lhs.true14, %for.body12, %if.then66, %for.inc75
  %prev_p.1111 = phi %struct.temp_slot* [ %p.1131, %for.inc75 ], [ %prev_p.0130, %if.then66 ], [ %p.1131, %for.body12 ], [ %p.1131, %land.lhs.true14 ], [ %p.1131, %for.cond18.preheader ]
  %next77 = getelementptr inbounds %struct.temp_slot* %prev_p.1111, i64 0, i32 0
  br label %for.cond10.backedge

cond.false:                                       ; preds = %for.inc75.thread112, %for.inc75
  %22 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_temp_slots78 = getelementptr inbounds %struct.function* %22, i64 0, i32 39
  br label %for.cond10.backedge

for.cond10.backedge:                              ; preds = %cond.false, %cond.true
  %p.1.in.be = phi %struct.temp_slot** [ %next77, %cond.true ], [ %x_temp_slots78, %cond.false ]
  %prev_p.0.be = phi %struct.temp_slot* [ %prev_p.1111, %cond.true ], [ null, %cond.false ]
  %p.1 = load %struct.temp_slot** %p.1.in.be, align 8
  %tobool11 = icmp eq %struct.temp_slot* %p.1, null
  br i1 %tobool11, label %for.end79, label %for.body12

for.end79:                                        ; preds = %for.body, %for.body.us, %for.cond10.backedge, %if.then2, %if.end8, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define void @update_temp_slot_address(%struct.rtx_def* %old, %struct.rtx_def* %new) #0 {
entry:
  %call138141 = tail call i32 @rtx_equal_p(%struct.rtx_def* %old, %struct.rtx_def* %new) #5
  %tobool139142 = icmp eq i32 %call138141, 0
  br i1 %tobool139142, label %if.end.lr.ph, label %if.end104

if.end.lr.ph:                                     ; preds = %entry, %tailrecurse.outer.backedge
  %new.tr.ph144 = phi %struct.rtx_def* [ %new.tr.ph.be, %tailrecurse.outer.backedge ], [ %new, %entry ]
  %old.tr.ph143 = phi %struct.rtx_def* [ %old.tr.ph.be, %tailrecurse.outer.backedge ], [ %old, %entry ]
  %0 = getelementptr inbounds %struct.rtx_def* %new.tr.ph144, i64 0, i32 0
  br label %if.end

if.end:                                           ; preds = %if.end.lr.ph, %if.then9
  %old.tr140 = phi %struct.rtx_def* [ %old.tr.ph143, %if.end.lr.ph ], [ %3, %if.then9 ]
  %call1 = tail call fastcc %struct.temp_slot* @find_temp_slot_from_address(%struct.rtx_def* %old.tr140)
  %cmp = icmp eq %struct.temp_slot* %call1, null
  br i1 %cmp, label %if.then2, label %if.else86

if.then2:                                         ; preds = %if.end
  %1 = getelementptr inbounds %struct.rtx_def* %old.tr140, i64 0, i32 0
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp3 = icmp eq i32 %bf.clear, 75
  br i1 %cmp3, label %if.end5, label %if.end104

if.end5:                                          ; preds = %if.then2
  %bf.load6 = load i32* %0, align 8
  %bf.clear7 = and i32 %bf.load6, 65535
  switch i32 %bf.clear7, label %if.end104 [
    i32 61, label %if.then9
    i32 75, label %if.end18
  ]

if.then9:                                         ; preds = %if.end5
  %fld = getelementptr inbounds %struct.rtx_def* %old.tr140, i64 0, i32 1
  %rtx = bitcast [1 x %union.rtunion_def]* %fld to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx, align 8, !tbaa !9
  tail call void @update_temp_slot_address(%struct.rtx_def* %2, %struct.rtx_def* %new.tr.ph144)
  %arrayidx11 = getelementptr inbounds %struct.rtx_def* %old.tr140, i64 0, i32 1, i64 1
  %rtx12 = bitcast %union.rtunion_def* %arrayidx11 to %struct.rtx_def**
  %3 = load %struct.rtx_def** %rtx12, align 8, !tbaa !9
  %call = tail call i32 @rtx_equal_p(%struct.rtx_def* %3, %struct.rtx_def* %new.tr.ph144) #5
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.end, label %if.end104

if.end18:                                         ; preds = %if.end5
  %fld19 = getelementptr inbounds %struct.rtx_def* %old.tr140, i64 0, i32 1
  %rtx21 = bitcast [1 x %union.rtunion_def]* %fld19 to %struct.rtx_def**
  %4 = load %struct.rtx_def** %rtx21, align 8, !tbaa !9
  %fld22 = getelementptr inbounds %struct.rtx_def* %new.tr.ph144, i64 0, i32 1
  %rtx24 = bitcast [1 x %union.rtunion_def]* %fld22 to %struct.rtx_def**
  %5 = load %struct.rtx_def** %rtx24, align 8, !tbaa !9
  %call25 = tail call i32 @rtx_equal_p(%struct.rtx_def* %4, %struct.rtx_def* %5) #5
  %tobool26 = icmp eq i32 %call25, 0
  %arrayidx29 = getelementptr inbounds %struct.rtx_def* %old.tr140, i64 0, i32 1, i64 1
  %rtx30 = bitcast %union.rtunion_def* %arrayidx29 to %struct.rtx_def**
  %6 = load %struct.rtx_def** %rtx30, align 8, !tbaa !9
  br i1 %tobool26, label %if.else34, label %if.then27

if.then27:                                        ; preds = %if.end18
  %arrayidx32 = getelementptr inbounds %struct.rtx_def* %new.tr.ph144, i64 0, i32 1, i64 1
  %rtx33 = bitcast %union.rtunion_def* %arrayidx32 to %struct.rtx_def**
  %7 = load %struct.rtx_def** %rtx33, align 8, !tbaa !9
  br label %tailrecurse.outer.backedge

if.else34:                                        ; preds = %if.end18
  %8 = load %struct.rtx_def** %rtx24, align 8, !tbaa !9
  %call41 = tail call i32 @rtx_equal_p(%struct.rtx_def* %6, %struct.rtx_def* %8) #5
  %tobool42 = icmp eq i32 %call41, 0
  %9 = load %struct.rtx_def** %rtx21, align 8, !tbaa !9
  %arrayidx48 = getelementptr inbounds %struct.rtx_def* %new.tr.ph144, i64 0, i32 1, i64 1
  %rtx49 = bitcast %union.rtunion_def* %arrayidx48 to %struct.rtx_def**
  %10 = load %struct.rtx_def** %rtx49, align 8, !tbaa !9
  br i1 %tobool42, label %if.else50, label %tailrecurse.outer.backedge

if.else50:                                        ; preds = %if.else34
  %call57 = tail call i32 @rtx_equal_p(%struct.rtx_def* %9, %struct.rtx_def* %10) #5
  %tobool58 = icmp eq i32 %call57, 0
  %11 = load %struct.rtx_def** %rtx30, align 8, !tbaa !9
  br i1 %tobool58, label %if.else66, label %if.then59

if.then59:                                        ; preds = %if.else50
  %12 = load %struct.rtx_def** %rtx24, align 8, !tbaa !9
  br label %tailrecurse.outer.backedge

if.else66:                                        ; preds = %if.else50
  %13 = load %struct.rtx_def** %rtx49, align 8, !tbaa !9
  %call73 = tail call i32 @rtx_equal_p(%struct.rtx_def* %11, %struct.rtx_def* %13) #5
  %tobool74 = icmp eq i32 %call73, 0
  br i1 %tobool74, label %if.end104, label %if.then75

if.then75:                                        ; preds = %if.else66
  %14 = load %struct.rtx_def** %rtx21, align 8, !tbaa !9
  %15 = load %struct.rtx_def** %rtx24, align 8, !tbaa !9
  br label %tailrecurse.outer.backedge

tailrecurse.outer.backedge:                       ; preds = %if.then75, %if.then59, %if.then27, %if.else34
  %old.tr.ph.be = phi %struct.rtx_def* [ %14, %if.then75 ], [ %11, %if.then59 ], [ %6, %if.then27 ], [ %9, %if.else34 ]
  %new.tr.ph.be = phi %struct.rtx_def* [ %15, %if.then75 ], [ %12, %if.then59 ], [ %7, %if.then27 ], [ %10, %if.else34 ]
  %call138 = tail call i32 @rtx_equal_p(%struct.rtx_def* %old.tr.ph.be, %struct.rtx_def* %new.tr.ph.be) #5
  %tobool139 = icmp eq i32 %call138, 0
  br i1 %tobool139, label %if.end.lr.ph, label %if.end104

if.else86:                                        ; preds = %if.end
  %address = getelementptr inbounds %struct.temp_slot* %call1, i64 0, i32 2
  %16 = load %struct.rtx_def** %address, align 8, !tbaa !46
  %cmp87 = icmp eq %struct.rtx_def* %16, null
  br i1 %cmp87, label %if.then88, label %if.else90

if.then88:                                        ; preds = %if.else86
  store %struct.rtx_def* %new.tr.ph144, %struct.rtx_def** %address, align 8, !tbaa !46
  br label %if.end104

if.else90:                                        ; preds = %if.else86
  %17 = getelementptr inbounds %struct.rtx_def* %16, i64 0, i32 0
  %bf.load92 = load i32* %17, align 8
  %bf.clear93 = and i32 %bf.load92, 65535
  %cmp94 = icmp eq i32 %bf.clear93, 3
  br i1 %cmp94, label %if.end99, label %if.then95

if.then95:                                        ; preds = %if.else90
  %call97 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 0, %struct.rtx_def* %16, %struct.rtx_def* null) #5
  store %struct.rtx_def* %call97, %struct.rtx_def** %address, align 8, !tbaa !46
  br label %if.end99

if.end99:                                         ; preds = %if.else90, %if.then95
  %18 = phi %struct.rtx_def* [ %16, %if.else90 ], [ %call97, %if.then95 ]
  %call101 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 0, %struct.rtx_def* %new.tr.ph144, %struct.rtx_def* %18) #5
  store %struct.rtx_def* %call101, %struct.rtx_def** %address, align 8, !tbaa !46
  br label %if.end104

if.end104:                                        ; preds = %tailrecurse.outer.backedge, %if.else66, %if.then9, %if.then2, %if.end5, %entry, %if.then88, %if.end99
  ret void
}

declare i32 @rtx_equal_p(%struct.rtx_def*, %struct.rtx_def*) #2

; Function Attrs: nounwind readonly uwtable
define internal fastcc %struct.temp_slot* @find_temp_slot_from_address(%struct.rtx_def* readonly %x) #4 {
entry:
  %0 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_temp_slots = getelementptr inbounds %struct.function* %0, i64 0, i32 39
  %p.0130 = load %struct.temp_slot** %x_temp_slots, align 8
  %tobool131 = icmp eq %struct.temp_slot* %p.0130, null
  %.pre = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 0
  br i1 %tobool131, label %for.end59, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %fld5 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1
  %rtx7 = bitcast [1 x %union.rtunion_def]* %fld5 to %struct.rtx_def**
  %1 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 7), align 8, !tbaa !9
  %arrayidx11 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 1
  %rtx12 = bitcast %union.rtunion_def* %arrayidx11 to %struct.rtx_def**
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc57
  %p.0132 = phi %struct.temp_slot* [ %p.0130, %for.body.lr.ph ], [ %p.0, %for.inc57 ]
  %in_use = getelementptr inbounds %struct.temp_slot* %p.0132, i64 0, i32 7
  %2 = load i8* %in_use, align 1, !tbaa !41
  %tobool1 = icmp eq i8 %2, 0
  br i1 %tobool1, label %for.inc57, label %if.else

if.else:                                          ; preds = %for.body
  %slot = getelementptr inbounds %struct.temp_slot* %p.0132, i64 0, i32 1
  %3 = load %struct.rtx_def** %slot, align 8, !tbaa !40
  %arrayidx = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %4 = load %struct.rtx_def** %rtx, align 8, !tbaa !9
  %cmp = icmp eq %struct.rtx_def* %4, %x
  br i1 %cmp, label %return, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else
  %address = getelementptr inbounds %struct.temp_slot* %p.0132, i64 0, i32 2
  %5 = load %struct.rtx_def** %address, align 8, !tbaa !46
  %cmp2 = icmp eq %struct.rtx_def* %5, %x
  br i1 %cmp2, label %return, label %lor.lhs.false3

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %bf.load = load i32* %.pre, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp4 = icmp eq i32 %bf.clear, 75
  br i1 %cmp4, label %land.lhs.true, label %if.else33

land.lhs.true:                                    ; preds = %lor.lhs.false3
  %6 = load %struct.rtx_def** %rtx7, align 8, !tbaa !9
  %cmp8 = icmp eq %struct.rtx_def* %6, %1
  br i1 %cmp8, label %land.lhs.true9, label %if.else33

land.lhs.true9:                                   ; preds = %land.lhs.true
  %7 = load %struct.rtx_def** %rtx12, align 8, !tbaa !9
  %8 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 0
  %bf.load13 = load i32* %8, align 8
  %bf.clear14 = and i32 %bf.load13, 65535
  %cmp15 = icmp eq i32 %bf.clear14, 54
  br i1 %cmp15, label %land.lhs.true16, label %if.else33

land.lhs.true16:                                  ; preds = %land.lhs.true9
  %rtwint = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 1, i64 0, i32 0
  %9 = load i64* %rtwint, align 8, !tbaa !60
  %base_offset = getelementptr inbounds %struct.temp_slot* %p.0132, i64 0, i32 11
  %10 = load i64* %base_offset, align 8, !tbaa !44
  %cmp22 = icmp slt i64 %9, %10
  br i1 %cmp22, label %if.else33, label %land.lhs.true23

land.lhs.true23:                                  ; preds = %land.lhs.true16
  %full_size = getelementptr inbounds %struct.temp_slot* %p.0132, i64 0, i32 12
  %11 = load i64* %full_size, align 8, !tbaa !45
  %add = add nsw i64 %11, %10
  %cmp31 = icmp slt i64 %9, %add
  br i1 %cmp31, label %return, label %if.else33

if.else33:                                        ; preds = %land.lhs.true16, %land.lhs.true23, %land.lhs.true9, %land.lhs.true, %lor.lhs.false3
  %cmp35 = icmp eq %struct.rtx_def* %5, null
  br i1 %cmp35, label %for.inc57, label %land.lhs.true36

land.lhs.true36:                                  ; preds = %if.else33
  %12 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 0
  %bf.load38 = load i32* %12, align 8
  %bf.clear39 = and i32 %bf.load38, 65535
  %cmp40 = icmp eq i32 %bf.clear39, 3
  br i1 %cmp40, label %for.body45, label %for.inc57

for.body45:                                       ; preds = %land.lhs.true36, %for.inc
  %next.0129 = phi %struct.rtx_def* [ %14, %for.inc ], [ %5, %land.lhs.true36 ]
  %fld46 = getelementptr inbounds %struct.rtx_def* %next.0129, i64 0, i32 1
  %rtx48 = bitcast [1 x %union.rtunion_def]* %fld46 to %struct.rtx_def**
  %13 = load %struct.rtx_def** %rtx48, align 8, !tbaa !9
  %cmp49 = icmp eq %struct.rtx_def* %13, %x
  br i1 %cmp49, label %return, label %for.inc

for.inc:                                          ; preds = %for.body45
  %arrayidx52 = getelementptr inbounds %struct.rtx_def* %next.0129, i64 0, i32 1, i64 1
  %rtx53 = bitcast %union.rtunion_def* %arrayidx52 to %struct.rtx_def**
  %14 = load %struct.rtx_def** %rtx53, align 8, !tbaa !9
  %tobool44 = icmp eq %struct.rtx_def* %14, null
  br i1 %tobool44, label %for.inc57, label %for.body45

for.inc57:                                        ; preds = %for.inc, %if.else33, %for.body, %land.lhs.true36
  %next58 = getelementptr inbounds %struct.temp_slot* %p.0132, i64 0, i32 0
  %p.0 = load %struct.temp_slot** %next58, align 8
  %tobool = icmp eq %struct.temp_slot* %p.0, null
  br i1 %tobool, label %for.end59, label %for.body

for.end59:                                        ; preds = %for.inc57, %entry
  %bf.load60 = load i32* %.pre, align 8
  %bf.clear61 = and i32 %bf.load60, 65535
  %cmp62 = icmp eq i32 %bf.clear61, 75
  br i1 %cmp62, label %land.lhs.true63, label %if.end95

land.lhs.true63:                                  ; preds = %for.end59
  %arrayidx65 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rtx66 = bitcast %union.rtunion_def* %arrayidx65 to %struct.rtx_def**
  %15 = load %struct.rtx_def** %rtx66, align 8, !tbaa !9
  %16 = getelementptr inbounds %struct.rtx_def* %15, i64 0, i32 0
  %bf.load67 = load i32* %16, align 8
  %bf.clear68 = and i32 %bf.load67, 65535
  %cmp69 = icmp eq i32 %bf.clear68, 61
  br i1 %cmp69, label %land.lhs.true70, label %land.lhs.true80

land.lhs.true70:                                  ; preds = %land.lhs.true63
  %call = tail call fastcc %struct.temp_slot* @find_temp_slot_from_address(%struct.rtx_def* %15)
  %cmp74 = icmp eq %struct.temp_slot* %call, null
  br i1 %cmp74, label %if.else76, label %return

if.else76:                                        ; preds = %land.lhs.true70
  br i1 %cmp62, label %land.lhs.true80, label %if.end95

land.lhs.true80:                                  ; preds = %land.lhs.true63, %if.else76
  %arrayidx82 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 1
  %rtx83 = bitcast %union.rtunion_def* %arrayidx82 to %struct.rtx_def**
  %17 = load %struct.rtx_def** %rtx83, align 8, !tbaa !9
  %18 = getelementptr inbounds %struct.rtx_def* %17, i64 0, i32 0
  %bf.load84 = load i32* %18, align 8
  %bf.clear85 = and i32 %bf.load84, 65535
  %cmp86 = icmp eq i32 %bf.clear85, 61
  br i1 %cmp86, label %land.lhs.true87, label %if.end95

land.lhs.true87:                                  ; preds = %land.lhs.true80
  %call91 = tail call fastcc %struct.temp_slot* @find_temp_slot_from_address(%struct.rtx_def* %17)
  %cmp92 = icmp eq %struct.temp_slot* %call91, null
  br i1 %cmp92, label %if.end95, label %return

if.end95:                                         ; preds = %for.end59, %land.lhs.true87, %if.else76, %land.lhs.true80
  br label %return

return:                                           ; preds = %if.else, %lor.lhs.false, %land.lhs.true23, %for.body45, %land.lhs.true87, %land.lhs.true70, %if.end95
  %retval.0 = phi %struct.temp_slot* [ null, %if.end95 ], [ %call, %land.lhs.true70 ], [ %call91, %land.lhs.true87 ], [ %p.0132, %for.body45 ], [ %p.0132, %land.lhs.true23 ], [ %p.0132, %lor.lhs.false ], [ %p.0132, %if.else ]
  ret %struct.temp_slot* %retval.0
}

; Function Attrs: nounwind uwtable
define void @mark_temp_addr_taken(%struct.rtx_def* readonly %x) #0 {
entry:
  %cmp = icmp eq %struct.rtx_def* %x, null
  br i1 %cmp, label %if.end61, label %if.end

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp1 = icmp eq i32 %bf.clear, 66
  br i1 %cmp1, label %lor.lhs.false, label %if.end61

lor.lhs.false:                                    ; preds = %if.end
  %arrayidx = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx, align 8, !tbaa !9
  %2 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 0
  %bf.load2 = load i32* %2, align 8
  %bf.clear3 = and i32 %bf.load2, 65535
  switch i32 %bf.clear3, label %if.end55 [
    i32 67, label %if.end61
    i32 68, label %if.end61
    i32 54, label %if.end61
    i32 55, label %if.end61
    i32 58, label %if.end61
    i32 134, label %if.end61
    i32 56, label %if.end61
    i32 140, label %if.end61
  ]

if.end55:                                         ; preds = %lor.lhs.false
  %call = tail call fastcc %struct.temp_slot* @find_temp_slot_from_address(%struct.rtx_def* %1)
  %cmp59 = icmp eq %struct.temp_slot* %call, null
  br i1 %cmp59, label %if.end61, label %if.then60

if.then60:                                        ; preds = %if.end55
  %addr_taken = getelementptr inbounds %struct.temp_slot* %call, i64 0, i32 8
  store i8 1, i8* %addr_taken, align 1, !tbaa !43
  br label %if.end61

if.end61:                                         ; preds = %lor.lhs.false, %lor.lhs.false, %lor.lhs.false, %lor.lhs.false, %lor.lhs.false, %lor.lhs.false, %lor.lhs.false, %lor.lhs.false, %if.end55, %if.end, %entry, %if.then60
  ret void
}

; Function Attrs: nounwind uwtable
define void @preserve_temp_slots(%struct.rtx_def* readonly %x) #0 {
entry:
  %cmp = icmp eq %struct.rtx_def* %x, null
  br i1 %cmp, label %if.then, label %if.end9

if.then:                                          ; preds = %entry
  %0 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_temp_slots = getelementptr inbounds %struct.function* %0, i64 0, i32 39
  %p.0223 = load %struct.temp_slot** %x_temp_slots, align 8
  %tobool224 = icmp eq %struct.temp_slot* %p.0223, null
  br i1 %tobool224, label %for.end172, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.then
  %x_temp_slot_level = getelementptr inbounds %struct.function* %0, i64 0, i32 40
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %p.0225 = phi %struct.temp_slot* [ %p.0223, %for.body.lr.ph ], [ %p.0, %for.inc ]
  %in_use = getelementptr inbounds %struct.temp_slot* %p.0225, i64 0, i32 7
  %1 = load i8* %in_use, align 1, !tbaa !41
  %tobool1 = icmp eq i8 %1, 0
  br i1 %tobool1, label %for.inc, label %land.lhs.true

land.lhs.true:                                    ; preds = %for.body
  %level = getelementptr inbounds %struct.temp_slot* %p.0225, i64 0, i32 9
  %2 = load i32* %level, align 4, !tbaa !52
  %3 = load i32* %x_temp_slot_level, align 4, !tbaa !55
  %cmp2 = icmp eq i32 %2, %3
  br i1 %cmp2, label %land.lhs.true4, label %for.inc

land.lhs.true4:                                   ; preds = %land.lhs.true
  %addr_taken = getelementptr inbounds %struct.temp_slot* %p.0225, i64 0, i32 8
  %4 = load i8* %addr_taken, align 1, !tbaa !43
  %tobool6 = icmp eq i8 %4, 0
  br i1 %tobool6, label %for.inc, label %if.then7

if.then7:                                         ; preds = %land.lhs.true4
  %dec = add nsw i32 %2, -1
  store i32 %dec, i32* %level, align 4, !tbaa !52
  br label %for.inc

for.inc:                                          ; preds = %land.lhs.true4, %for.body, %land.lhs.true, %if.then7
  %next = getelementptr inbounds %struct.temp_slot* %p.0225, i64 0, i32 0
  %p.0 = load %struct.temp_slot** %next, align 8
  %tobool = icmp eq %struct.temp_slot* %p.0, null
  br i1 %tobool, label %for.end172, label %for.body

if.end9:                                          ; preds = %entry
  %5 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 0
  %bf.load = load i32* %5, align 8
  %6 = and i32 %bf.load, -2147418113
  %7 = icmp eq i32 %6, -2147483587
  br i1 %7, label %if.end16, label %land.lhs.true19

if.end16:                                         ; preds = %if.end9
  %call = tail call fastcc %struct.temp_slot* @find_temp_slot_from_address(%struct.rtx_def* %x)
  %cmp17 = icmp eq %struct.temp_slot* %call, null
  br i1 %cmp17, label %land.lhs.true19, label %if.then119

land.lhs.true19:                                  ; preds = %if.end9, %if.end16
  %bf.clear21 = and i32 %bf.load, 65535
  %cmp22 = icmp eq i32 %bf.clear21, 66
  br i1 %cmp22, label %lor.lhs.false, label %if.then84

lor.lhs.false:                                    ; preds = %land.lhs.true19
  %arrayidx = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %8 = load %struct.rtx_def** %rtx, align 8, !tbaa !9
  %9 = getelementptr inbounds %struct.rtx_def* %8, i64 0, i32 0
  %bf.load24 = load i32* %9, align 8
  %bf.clear25 = and i32 %bf.load24, 65535
  switch i32 %bf.clear25, label %if.then111 [
    i32 67, label %if.then84
    i32 68, label %if.then84
    i32 54, label %if.then84
    i32 55, label %if.then84
    i32 58, label %if.then84
    i32 134, label %if.then84
    i32 56, label %if.then84
    i32 140, label %if.then84
  ]

if.then84:                                        ; preds = %lor.lhs.false, %lor.lhs.false, %lor.lhs.false, %lor.lhs.false, %lor.lhs.false, %lor.lhs.false, %lor.lhs.false, %lor.lhs.false, %land.lhs.true19
  %10 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_temp_slots85 = getelementptr inbounds %struct.function* %10, i64 0, i32 39
  %p.2232 = load %struct.temp_slot** %x_temp_slots85, align 8
  %tobool87233 = icmp eq %struct.temp_slot* %p.2232, null
  br i1 %tobool87233, label %for.end172, label %for.body88.lr.ph

for.body88.lr.ph:                                 ; preds = %if.then84
  %x_temp_slot_level94 = getelementptr inbounds %struct.function* %10, i64 0, i32 40
  br label %for.body88

for.body88:                                       ; preds = %for.body88.lr.ph, %for.inc105
  %p.2234 = phi %struct.temp_slot* [ %p.2232, %for.body88.lr.ph ], [ %p.2, %for.inc105 ]
  %in_use89 = getelementptr inbounds %struct.temp_slot* %p.2234, i64 0, i32 7
  %11 = load i8* %in_use89, align 1, !tbaa !41
  %tobool91 = icmp eq i8 %11, 0
  br i1 %tobool91, label %for.inc105, label %land.lhs.true92

land.lhs.true92:                                  ; preds = %for.body88
  %level93 = getelementptr inbounds %struct.temp_slot* %p.2234, i64 0, i32 9
  %12 = load i32* %level93, align 4, !tbaa !52
  %13 = load i32* %x_temp_slot_level94, align 4, !tbaa !55
  %cmp95 = icmp eq i32 %12, %13
  br i1 %cmp95, label %land.lhs.true97, label %for.inc105

land.lhs.true97:                                  ; preds = %land.lhs.true92
  %addr_taken98 = getelementptr inbounds %struct.temp_slot* %p.2234, i64 0, i32 8
  %14 = load i8* %addr_taken98, align 1, !tbaa !43
  %tobool100 = icmp eq i8 %14, 0
  br i1 %tobool100, label %for.inc105, label %if.then101

if.then101:                                       ; preds = %land.lhs.true97
  %dec103 = add nsw i32 %12, -1
  store i32 %dec103, i32* %level93, align 4, !tbaa !52
  br label %for.inc105

for.inc105:                                       ; preds = %land.lhs.true97, %for.body88, %land.lhs.true92, %if.then101
  %next106 = getelementptr inbounds %struct.temp_slot* %p.2234, i64 0, i32 0
  %p.2 = load %struct.temp_slot** %next106, align 8
  %tobool87 = icmp eq %struct.temp_slot* %p.2, null
  br i1 %tobool87, label %for.end172, label %for.body88

if.then111:                                       ; preds = %lor.lhs.false
  %call115 = tail call fastcc %struct.temp_slot* @find_temp_slot_from_address(%struct.rtx_def* %8)
  %cmp117 = icmp eq %struct.temp_slot* %call115, null
  br i1 %cmp117, label %if.end151, label %if.then119

if.then119:                                       ; preds = %if.end16, %if.then111
  %p.3220 = phi %struct.temp_slot* [ %call115, %if.then111 ], [ %call, %if.end16 ]
  %level120 = getelementptr inbounds %struct.temp_slot* %p.3220, i64 0, i32 9
  %15 = load i32* %level120, align 4, !tbaa !52
  %16 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_temp_slot_level121 = getelementptr inbounds %struct.function* %16, i64 0, i32 40
  %17 = load i32* %x_temp_slot_level121, align 4, !tbaa !55
  %cmp122 = icmp eq i32 %15, %17
  br i1 %cmp122, label %if.then124, label %for.end172

if.then124:                                       ; preds = %if.then119
  %x_temp_slots125 = getelementptr inbounds %struct.function* %16, i64 0, i32 39
  %q.0229 = load %struct.temp_slot** %x_temp_slots125, align 8
  %tobool127230 = icmp eq %struct.temp_slot* %q.0229, null
  br i1 %tobool127230, label %for.end146, label %for.body128

for.body128:                                      ; preds = %if.then124, %for.inc144
  %q.0231 = phi %struct.temp_slot* [ %q.0, %for.inc144 ], [ %q.0229, %if.then124 ]
  %cmp129 = icmp eq %struct.temp_slot* %q.0231, %p.3220
  br i1 %cmp129, label %for.inc144, label %land.lhs.true131

land.lhs.true131:                                 ; preds = %for.body128
  %addr_taken132 = getelementptr inbounds %struct.temp_slot* %q.0231, i64 0, i32 8
  %18 = load i8* %addr_taken132, align 1, !tbaa !43
  %tobool134 = icmp eq i8 %18, 0
  br i1 %tobool134, label %for.inc144, label %land.lhs.true135

land.lhs.true135:                                 ; preds = %land.lhs.true131
  %level136 = getelementptr inbounds %struct.temp_slot* %q.0231, i64 0, i32 9
  %19 = load i32* %level136, align 4, !tbaa !52
  %20 = load i32* %level120, align 4, !tbaa !52
  %cmp138 = icmp eq i32 %19, %20
  br i1 %cmp138, label %if.then140, label %for.inc144

if.then140:                                       ; preds = %land.lhs.true135
  %dec142 = add nsw i32 %19, -1
  store i32 %dec142, i32* %level136, align 4, !tbaa !52
  br label %for.inc144

for.inc144:                                       ; preds = %land.lhs.true131, %for.body128, %land.lhs.true135, %if.then140
  %next145 = getelementptr inbounds %struct.temp_slot* %q.0231, i64 0, i32 0
  %q.0 = load %struct.temp_slot** %next145, align 8
  %tobool127 = icmp eq %struct.temp_slot* %q.0, null
  br i1 %tobool127, label %for.cond126.for.end146_crit_edge, label %for.body128

for.cond126.for.end146_crit_edge:                 ; preds = %for.inc144
  %.pre = load i32* %level120, align 4, !tbaa !52
  br label %for.end146

for.end146:                                       ; preds = %for.cond126.for.end146_crit_edge, %if.then124
  %21 = phi i32 [ %.pre, %for.cond126.for.end146_crit_edge ], [ %15, %if.then124 ]
  %dec148 = add nsw i32 %21, -1
  store i32 %dec148, i32* %level120, align 4, !tbaa !52
  %addr_taken149 = getelementptr inbounds %struct.temp_slot* %p.3220, i64 0, i32 8
  store i8 0, i8* %addr_taken149, align 1, !tbaa !43
  br label %for.end172

if.end151:                                        ; preds = %if.then111
  %22 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_temp_slots152 = getelementptr inbounds %struct.function* %22, i64 0, i32 39
  %p.4226 = load %struct.temp_slot** %x_temp_slots152, align 8
  %tobool154227 = icmp eq %struct.temp_slot* %p.4226, null
  br i1 %tobool154227, label %for.end172, label %for.body155.lr.ph

for.body155.lr.ph:                                ; preds = %if.end151
  %x_temp_slot_level161 = getelementptr inbounds %struct.function* %22, i64 0, i32 40
  br label %for.body155

for.body155:                                      ; preds = %for.body155.lr.ph, %for.inc170
  %p.4228 = phi %struct.temp_slot* [ %p.4226, %for.body155.lr.ph ], [ %p.4, %for.inc170 ]
  %in_use156 = getelementptr inbounds %struct.temp_slot* %p.4228, i64 0, i32 7
  %23 = load i8* %in_use156, align 1, !tbaa !41
  %tobool158 = icmp eq i8 %23, 0
  br i1 %tobool158, label %for.inc170, label %land.lhs.true159

land.lhs.true159:                                 ; preds = %for.body155
  %level160 = getelementptr inbounds %struct.temp_slot* %p.4228, i64 0, i32 9
  %24 = load i32* %level160, align 4, !tbaa !52
  %25 = load i32* %x_temp_slot_level161, align 4, !tbaa !55
  %cmp162 = icmp eq i32 %24, %25
  br i1 %cmp162, label %land.lhs.true164, label %for.inc170

land.lhs.true164:                                 ; preds = %land.lhs.true159
  %keep = getelementptr inbounds %struct.temp_slot* %p.4228, i64 0, i32 10
  %26 = load i32* %keep, align 4, !tbaa !53
  %tobool165 = icmp eq i32 %26, 0
  br i1 %tobool165, label %if.then166, label %for.inc170

if.then166:                                       ; preds = %land.lhs.true164
  %dec168 = add nsw i32 %24, -1
  store i32 %dec168, i32* %level160, align 4, !tbaa !52
  br label %for.inc170

for.inc170:                                       ; preds = %land.lhs.true164, %for.body155, %land.lhs.true159, %if.then166
  %next171 = getelementptr inbounds %struct.temp_slot* %p.4228, i64 0, i32 0
  %p.4 = load %struct.temp_slot** %next171, align 8
  %tobool154 = icmp eq %struct.temp_slot* %p.4, null
  br i1 %tobool154, label %for.end172, label %for.body155

for.end172:                                       ; preds = %for.inc105, %for.inc170, %for.inc, %if.then84, %if.end151, %if.then, %if.then119, %for.end146
  ret void
}

; Function Attrs: nounwind uwtable
define void @preserve_rtl_expr_result(%struct.rtx_def* readonly %x) #0 {
entry:
  %cmp = icmp eq %struct.rtx_def* %x, null
  br i1 %cmp, label %return, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %0 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp1 = icmp eq i32 %bf.clear, 66
  br i1 %cmp1, label %lor.lhs.false2, label %return

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %arrayidx = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx, align 8, !tbaa !9
  %2 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 0
  %bf.load3 = load i32* %2, align 8
  %bf.clear4 = and i32 %bf.load3, 65535
  switch i32 %bf.clear4, label %if.end [
    i32 67, label %return
    i32 68, label %return
    i32 54, label %return
    i32 55, label %return
    i32 58, label %return
    i32 134, label %return
    i32 56, label %return
    i32 140, label %return
  ]

if.end:                                           ; preds = %lor.lhs.false2
  %call = tail call fastcc %struct.temp_slot* @find_temp_slot_from_address(%struct.rtx_def* %1)
  %cmp58 = icmp eq %struct.temp_slot* %call, null
  br i1 %cmp58, label %return, label %if.then59

if.then59:                                        ; preds = %if.end
  %level = getelementptr inbounds %struct.temp_slot* %call, i64 0, i32 9
  %3 = load i32* %level, align 4, !tbaa !52
  %4 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_temp_slot_level = getelementptr inbounds %struct.function* %4, i64 0, i32 40
  %5 = load i32* %x_temp_slot_level, align 4, !tbaa !55
  %cmp60 = icmp slt i32 %3, %5
  %. = select i1 %cmp60, i32 %3, i32 %5
  store i32 %., i32* %level, align 4, !tbaa !52
  %rtl_expr = getelementptr inbounds %struct.temp_slot* %call, i64 0, i32 6
  store %union.tree_node* null, %union.tree_node** %rtl_expr, align 8, !tbaa !47
  br label %return

return:                                           ; preds = %lor.lhs.false2, %lor.lhs.false2, %lor.lhs.false2, %lor.lhs.false2, %lor.lhs.false2, %lor.lhs.false2, %lor.lhs.false2, %lor.lhs.false2, %if.end, %lor.lhs.false, %if.then59, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define void @free_temp_slots() #0 {
entry:
  %0 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_temp_slots = getelementptr inbounds %struct.function* %0, i64 0, i32 39
  %p.015 = load %struct.temp_slot** %x_temp_slots, align 8
  %tobool16 = icmp eq %struct.temp_slot* %p.015, null
  br i1 %tobool16, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %x_temp_slot_level = getelementptr inbounds %struct.function* %0, i64 0, i32 40
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %p.017 = phi %struct.temp_slot* [ %p.015, %for.body.lr.ph ], [ %p.0, %for.inc ]
  %in_use = getelementptr inbounds %struct.temp_slot* %p.017, i64 0, i32 7
  %1 = load i8* %in_use, align 1, !tbaa !41
  %tobool1 = icmp eq i8 %1, 0
  br i1 %tobool1, label %for.inc, label %land.lhs.true

land.lhs.true:                                    ; preds = %for.body
  %level = getelementptr inbounds %struct.temp_slot* %p.017, i64 0, i32 9
  %2 = load i32* %level, align 4, !tbaa !52
  %3 = load i32* %x_temp_slot_level, align 4, !tbaa !55
  %cmp = icmp eq i32 %2, %3
  br i1 %cmp, label %land.lhs.true3, label %for.inc

land.lhs.true3:                                   ; preds = %land.lhs.true
  %keep = getelementptr inbounds %struct.temp_slot* %p.017, i64 0, i32 10
  %4 = load i32* %keep, align 4, !tbaa !53
  %tobool4 = icmp eq i32 %4, 0
  br i1 %tobool4, label %land.lhs.true5, label %for.inc

land.lhs.true5:                                   ; preds = %land.lhs.true3
  %rtl_expr = getelementptr inbounds %struct.temp_slot* %p.017, i64 0, i32 6
  %5 = load %union.tree_node** %rtl_expr, align 8, !tbaa !47
  %cmp6 = icmp eq %union.tree_node* %5, null
  br i1 %cmp6, label %if.then, label %for.inc

if.then:                                          ; preds = %land.lhs.true5
  store i8 0, i8* %in_use, align 1, !tbaa !41
  br label %for.inc

for.inc:                                          ; preds = %land.lhs.true3, %for.body, %land.lhs.true, %land.lhs.true5, %if.then
  %next = getelementptr inbounds %struct.temp_slot* %p.017, i64 0, i32 0
  %p.0 = load %struct.temp_slot** %next, align 8
  %tobool = icmp eq %struct.temp_slot* %p.0, null
  br i1 %tobool, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc, %entry
  tail call void @combine_temp_slots()
  ret void
}

; Function Attrs: nounwind uwtable
define void @free_temps_for_rtl_expr(%union.tree_node* readnone %t) #0 {
entry:
  %0 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_temp_slots = getelementptr inbounds %struct.function* %0, i64 0, i32 39
  %p.09 = load %struct.temp_slot** %x_temp_slots, align 8
  %tobool10 = icmp eq %struct.temp_slot* %p.09, null
  br i1 %tobool10, label %for.end, label %for.body

for.body:                                         ; preds = %entry, %for.inc
  %p.011 = phi %struct.temp_slot* [ %p.0, %for.inc ], [ %p.09, %entry ]
  %rtl_expr = getelementptr inbounds %struct.temp_slot* %p.011, i64 0, i32 6
  %1 = load %union.tree_node** %rtl_expr, align 8, !tbaa !47
  %cmp = icmp eq %union.tree_node* %1, %t
  br i1 %cmp, label %if.then, label %for.inc

if.then:                                          ; preds = %for.body
  %2 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_temp_slot_level = getelementptr inbounds %struct.function* %2, i64 0, i32 40
  %3 = load i32* %x_temp_slot_level, align 4, !tbaa !55
  %level = getelementptr inbounds %struct.temp_slot* %p.011, i64 0, i32 9
  %4 = load i32* %level, align 4, !tbaa !52
  %cmp1 = icmp sgt i32 %3, %4
  br i1 %cmp1, label %if.else, label %if.then2

if.then2:                                         ; preds = %if.then
  %in_use = getelementptr inbounds %struct.temp_slot* %p.011, i64 0, i32 7
  store i8 0, i8* %in_use, align 1, !tbaa !41
  br label %for.inc

if.else:                                          ; preds = %if.then
  store %union.tree_node* null, %union.tree_node** %rtl_expr, align 8, !tbaa !47
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.else, %if.then2
  %next = getelementptr inbounds %struct.temp_slot* %p.011, i64 0, i32 0
  %p.0 = load %struct.temp_slot** %next, align 8
  %tobool = icmp eq %struct.temp_slot* %p.0, null
  br i1 %tobool, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc, %entry
  tail call void @combine_temp_slots()
  ret void
}

; Function Attrs: nounwind uwtable
define void @mark_all_temps_used() #0 {
entry:
  %0 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_temp_slots = getelementptr inbounds %struct.function* %0, i64 0, i32 39
  %p.010 = load %struct.temp_slot** %x_temp_slots, align 8
  %tobool11 = icmp eq %struct.temp_slot* %p.010, null
  br i1 %tobool11, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %x_temp_slot_level = getelementptr inbounds %struct.function* %0, i64 0, i32 40
  %1 = load i32* %x_temp_slot_level, align 4, !tbaa !55
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %p.012 = phi %struct.temp_slot* [ %p.010, %for.body.lr.ph ], [ %p.0, %for.body ]
  %keep = getelementptr inbounds %struct.temp_slot* %p.012, i64 0, i32 10
  store i32 1, i32* %keep, align 4, !tbaa !53
  %in_use = getelementptr inbounds %struct.temp_slot* %p.012, i64 0, i32 7
  store i8 1, i8* %in_use, align 1, !tbaa !41
  %level = getelementptr inbounds %struct.temp_slot* %p.012, i64 0, i32 9
  %2 = load i32* %level, align 4, !tbaa !52
  %cmp = icmp slt i32 %2, %1
  %. = select i1 %cmp, i32 %2, i32 %1
  store i32 %., i32* %level, align 4, !tbaa !52
  %next = getelementptr inbounds %struct.temp_slot* %p.012, i64 0, i32 0
  %p.0 = load %struct.temp_slot** %next, align 8
  %tobool = icmp eq %struct.temp_slot* %p.0, null
  br i1 %tobool, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define void @push_temp_slots() #0 {
entry:
  %0 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_temp_slot_level = getelementptr inbounds %struct.function* %0, i64 0, i32 40
  %1 = load i32* %x_temp_slot_level, align 4, !tbaa !55
  %inc = add nsw i32 %1, 1
  store i32 %inc, i32* %x_temp_slot_level, align 4, !tbaa !55
  ret void
}

; Function Attrs: nounwind uwtable
define void @pop_temp_slots() #0 {
entry:
  %0 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_temp_slots = getelementptr inbounds %struct.function* %0, i64 0, i32 39
  %p.013 = load %struct.temp_slot** %x_temp_slots, align 8
  %tobool14 = icmp eq %struct.temp_slot* %p.013, null
  br i1 %tobool14, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %x_temp_slot_level = getelementptr inbounds %struct.function* %0, i64 0, i32 40
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %p.015 = phi %struct.temp_slot* [ %p.013, %for.body.lr.ph ], [ %p.0, %for.inc ]
  %in_use = getelementptr inbounds %struct.temp_slot* %p.015, i64 0, i32 7
  %1 = load i8* %in_use, align 1, !tbaa !41
  %tobool1 = icmp eq i8 %1, 0
  br i1 %tobool1, label %for.inc, label %land.lhs.true

land.lhs.true:                                    ; preds = %for.body
  %level = getelementptr inbounds %struct.temp_slot* %p.015, i64 0, i32 9
  %2 = load i32* %level, align 4, !tbaa !52
  %3 = load i32* %x_temp_slot_level, align 4, !tbaa !55
  %cmp = icmp eq i32 %2, %3
  br i1 %cmp, label %land.lhs.true3, label %for.inc

land.lhs.true3:                                   ; preds = %land.lhs.true
  %rtl_expr = getelementptr inbounds %struct.temp_slot* %p.015, i64 0, i32 6
  %4 = load %union.tree_node** %rtl_expr, align 8, !tbaa !47
  %cmp4 = icmp eq %union.tree_node* %4, null
  br i1 %cmp4, label %if.then, label %for.inc

if.then:                                          ; preds = %land.lhs.true3
  store i8 0, i8* %in_use, align 1, !tbaa !41
  br label %for.inc

for.inc:                                          ; preds = %for.body, %land.lhs.true, %land.lhs.true3, %if.then
  %next = getelementptr inbounds %struct.temp_slot* %p.015, i64 0, i32 0
  %p.0 = load %struct.temp_slot** %next, align 8
  %tobool = icmp eq %struct.temp_slot* %p.0, null
  br i1 %tobool, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc, %entry
  tail call void @combine_temp_slots()
  %5 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_temp_slot_level7 = getelementptr inbounds %struct.function* %5, i64 0, i32 40
  %6 = load i32* %x_temp_slot_level7, align 4, !tbaa !55
  %dec = add nsw i32 %6, -1
  store i32 %dec, i32* %x_temp_slot_level7, align 4, !tbaa !55
  ret void
}

; Function Attrs: nounwind uwtable
define void @init_temp_slots() #0 {
entry:
  %0 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_temp_slots = getelementptr inbounds %struct.function* %0, i64 0, i32 39
  store %struct.temp_slot* null, %struct.temp_slot** %x_temp_slots, align 8, !tbaa !48
  %1 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_temp_slot_level = getelementptr inbounds %struct.function* %1, i64 0, i32 40
  store i32 0, i32* %x_temp_slot_level, align 4, !tbaa !55
  %x_var_temp_slot_level = getelementptr inbounds %struct.function* %1, i64 0, i32 41
  store i32 0, i32* %x_var_temp_slot_level, align 4, !tbaa !54
  %x_target_temp_slot_level = getelementptr inbounds %struct.function* %1, i64 0, i32 42
  store i32 0, i32* %x_target_temp_slot_level, align 4, !tbaa !51
  ret void
}

; Function Attrs: nounwind uwtable
define void @put_var_into_stack(%union.tree_node* %decl) #0 {
entry:
  %code = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 118
  br i1 %cmp, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %entry
  %bf.clear3 = and i32 %bf.load, 2048
  %tobool = icmp ne i32 %bf.clear3, 0
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %0 = phi i1 [ false, %entry ], [ %tobool, %land.rhs ]
  %land.ext = zext i1 %0 to i32
  %bf.clear7 = and i32 %bf.load, 65536
  %tobool8.not = icmp ne i32 %bf.clear7, 0
  %brmerge = or i1 %tobool8.not, %cmp
  br i1 %brmerge, label %lor.end, label %land.rhs14

land.rhs14:                                       ; preds = %land.end
  %initial = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 12
  %1 = load %union.tree_node** %initial, align 8, !tbaa !61
  %cmp16 = icmp ne %union.tree_node* %1, null
  br label %lor.end

lor.end:                                          ; preds = %land.end, %land.rhs14
  %2 = phi i1 [ %tobool8.not, %land.end ], [ %cmp16, %land.rhs14 ]
  %lor.ext = zext i1 %2 to i32
  %call = tail call %union.tree_node* @decl_function_context(%union.tree_node* %decl) #5
  %bf.load21 = load i32* %code, align 8
  %bf.clear22 = and i32 %bf.load21, 255
  %cmp23 = icmp eq i32 %bf.clear22, 118
  br i1 %cmp23, label %cond.end39, label %cond.false

cond.false:                                       ; preds = %lor.end
  %rtl = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 17
  %3 = load %struct.rtx_def** %rtl, align 8, !tbaa !63
  %cmp25 = icmp eq %struct.rtx_def* %3, null
  br i1 %cmp25, label %if.end223, label %cond.false53

cond.end39:                                       ; preds = %lor.end
  %operands = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 2
  %arrayidx = getelementptr inbounds i32* %operands, i64 4
  %4 = bitcast i32* %arrayidx to %struct.rtx_def**
  %5 = load %struct.rtx_def** %4, align 8, !tbaa !9
  %cmp41 = icmp eq %struct.rtx_def* %5, null
  br i1 %cmp41, label %if.end223, label %cond.true47

cond.true47:                                      ; preds = %cond.end39
  %type = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 1
  %6 = load %union.tree_node** %type, align 8, !tbaa !56
  %type49 = bitcast %union.tree_node* %6 to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type* %type49, i64 0, i32 6
  %bf.load50 = load i32* %mode, align 4
  %bf.lshr51 = lshr i32 %bf.load50, 9
  %bf.clear52 = and i32 %bf.lshr51, 127
  br label %cond.end58

cond.false53:                                     ; preds = %cond.false
  %mode55 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 5
  %7 = bitcast i48* %mode55 to i64*
  %bf.load56 = load i64* %7, align 8
  %bf.load56.tr = trunc i64 %bf.load56 to i32
  %bf.cast = and i32 %bf.load56.tr, 255
  br label %cond.end58

cond.end58:                                       ; preds = %cond.false53, %cond.true47
  %cond40343349 = phi %struct.rtx_def* [ %5, %cond.true47 ], [ %3, %cond.false53 ]
  %cond59 = phi i32 [ %bf.clear52, %cond.true47 ], [ %bf.cast, %cond.false53 ]
  %8 = getelementptr inbounds %struct.rtx_def* %cond40343349, i64 0, i32 0
  %bf.load60 = load i32* %8, align 8
  %bf.lshr61 = lshr i32 %bf.load60, 16
  %bf.clear62 = and i32 %bf.lshr61, 255
  %9 = load %union.tree_node** @current_function_decl, align 8, !tbaa !9
  %cmp63 = icmp eq %union.tree_node* %call, %9
  %10 = load %union.tree_node** @inline_function_decl, align 8
  %cmp64 = icmp eq %union.tree_node* %call, %10
  %or.cond303 = or i1 %cmp63, %cmp64
  br i1 %or.cond303, label %if.end71, label %for.cond.preheader

for.cond.preheader:                               ; preds = %cond.end58
  %function.0344 = load %struct.function** @outer_function_chain, align 8
  %tobool66345 = icmp eq %struct.function* %function.0344, null
  br i1 %tobool66345, label %if.end71, label %for.body

for.cond:                                         ; preds = %for.body
  %outer = getelementptr inbounds %struct.function* %function.0346, i64 0, i32 7
  %function.0 = load %struct.function** %outer, align 8
  %tobool66 = icmp eq %struct.function* %function.0, null
  br i1 %tobool66, label %if.end71, label %for.body

for.body:                                         ; preds = %for.cond.preheader, %for.cond
  %function.0346 = phi %struct.function* [ %function.0, %for.cond ], [ %function.0344, %for.cond.preheader ]
  %decl67 = getelementptr inbounds %struct.function* %function.0346, i64 0, i32 6
  %11 = load %union.tree_node** %decl67, align 8, !tbaa !1
  %cmp68 = icmp eq %union.tree_node* %11, %call
  br i1 %cmp68, label %if.end71, label %for.cond

if.end71:                                         ; preds = %for.body, %for.cond, %for.cond.preheader, %cond.end58
  %function.1 = phi %struct.function* [ null, %cond.end58 ], [ null, %for.cond.preheader ], [ %function.0346, %for.body ], [ null, %for.cond ]
  br i1 %cmp23, label %if.end107, label %land.lhs.true77

land.lhs.true77:                                  ; preds = %if.end71
  %nonlocal_flag = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 5
  %12 = bitcast i48* %nonlocal_flag to i64*
  %bf.load79 = load i64* %12, align 8
  %bf.cast82 = and i64 %bf.load79, 512
  %tobool83 = icmp ne i64 %bf.cast82, 0
  %bf.clear86 = and i32 %bf.load60, 65535
  %cmp87 = icmp eq i32 %bf.clear86, 66
  %or.cond353 = and i1 %tobool83, %cmp87
  br i1 %or.cond353, label %land.lhs.true88, label %if.end107

land.lhs.true88:                                  ; preds = %land.lhs.true77
  %arrayidx89 = getelementptr inbounds %struct.rtx_def* %cond40343349, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx89 to %struct.rtx_def**
  %13 = load %struct.rtx_def** %rtx, align 8, !tbaa !9
  %14 = getelementptr inbounds %struct.rtx_def* %13, i64 0, i32 0
  %bf.load90 = load i32* %14, align 8
  %bf.clear91 = and i32 %bf.load90, 65535
  %cmp92 = icmp eq i32 %bf.clear91, 61
  br i1 %cmp92, label %land.lhs.true93, label %if.end107

land.lhs.true93:                                  ; preds = %land.lhs.true88
  %arrayidx98 = getelementptr inbounds %struct.rtx_def* %13, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx98 to i32*
  %15 = load i32* %rtuint, align 4, !tbaa !17
  %cmp99 = icmp ugt i32 %15, 57
  br i1 %cmp99, label %if.then100, label %if.end107

if.then100:                                       ; preds = %land.lhs.true93
  %bf.lshr105 = lshr i32 %bf.load90, 16
  %bf.clear106 = and i32 %bf.lshr105, 255
  br label %if.end107

if.end107:                                        ; preds = %land.lhs.true77, %if.end71, %if.then100, %land.lhs.true93, %land.lhs.true88
  %decl_mode.0 = phi i32 [ %bf.clear106, %if.then100 ], [ %cond59, %land.lhs.true93 ], [ %cond59, %land.lhs.true88 ], [ %cond59, %land.lhs.true77 ], [ %cond59, %if.end71 ]
  %promoted_mode.0 = phi i32 [ %bf.clear106, %if.then100 ], [ %bf.clear62, %land.lhs.true93 ], [ %bf.clear62, %land.lhs.true88 ], [ %bf.clear62, %land.lhs.true77 ], [ %bf.clear62, %if.end71 ]
  %reg.0 = phi %struct.rtx_def* [ %13, %if.then100 ], [ %cond40343349, %land.lhs.true93 ], [ %cond40343349, %land.lhs.true88 ], [ %cond40343349, %land.lhs.true77 ], [ %cond40343349, %if.end71 ]
  %cmp108 = icmp eq %struct.function* %function.1, null
  %16 = load i32* @optimize, align 4
  %cmp110 = icmp sgt i32 %16, 0
  %or.cond = and i1 %cmp108, %cmp110
  %cmp112 = icmp eq i32 %decl_mode.0, %promoted_mode.0
  %cmp112. = and i1 %or.cond, %cmp112
  br i1 %cmp112., label %if.end134, label %land.lhs.true116

land.lhs.true116:                                 ; preds = %if.end107
  %17 = getelementptr inbounds %struct.rtx_def* %reg.0, i64 0, i32 0
  %bf.load117 = load i32* %17, align 8
  %bf.clear118 = and i32 %bf.load117, 65535
  %cmp119 = icmp eq i32 %bf.clear118, 66
  br i1 %cmp119, label %land.lhs.true120, label %if.end134

land.lhs.true120:                                 ; preds = %land.lhs.true116
  %arrayidx122 = getelementptr inbounds %struct.rtx_def* %reg.0, i64 0, i32 1, i64 0
  %rtx123 = bitcast %union.rtunion_def* %arrayidx122 to %struct.rtx_def**
  %18 = load %struct.rtx_def** %rtx123, align 8, !tbaa !9
  %19 = getelementptr inbounds %struct.rtx_def* %18, i64 0, i32 0
  %bf.load124 = load i32* %19, align 8
  %bf.clear125 = and i32 %bf.load124, 65535
  %cmp126 = icmp eq i32 %bf.clear125, 70
  br i1 %cmp126, label %if.then127, label %if.end134

if.then127:                                       ; preds = %land.lhs.true120
  %arrayidx132 = getelementptr inbounds %struct.rtx_def* %18, i64 0, i32 1, i64 0
  %rtx133 = bitcast %union.rtunion_def* %arrayidx132 to %struct.rtx_def**
  %20 = load %struct.rtx_def** %rtx133, align 8, !tbaa !9
  br label %if.end134

if.end134:                                        ; preds = %if.then127, %land.lhs.true120, %land.lhs.true116, %if.end107
  %reg.1 = phi %struct.rtx_def* [ %reg.0, %if.end107 ], [ %20, %if.then127 ], [ %reg.0, %land.lhs.true120 ], [ %reg.0, %land.lhs.true116 ]
  %21 = getelementptr inbounds %struct.rtx_def* %reg.1, i64 0, i32 0
  %bf.load135 = load i32* %21, align 8
  %bf.clear136 = and i32 %bf.load135, 65535
  switch i32 %bf.clear136, label %if.end223 [
    i32 61, label %if.then138
    i32 65, label %if.then149
  ]

if.then138:                                       ; preds = %if.end134
  br i1 %cmp112., label %if.then140, label %if.else

if.then140:                                       ; preds = %if.then138
  %call141 = tail call %struct.rtx_def* @gen_mem_addressof(%struct.rtx_def* %reg.1, %union.tree_node* %decl)
  br label %if.end223

if.else:                                          ; preds = %if.then138
  %type143 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 1
  %22 = load %union.tree_node** %type143, align 8, !tbaa !56
  tail call fastcc void @put_reg_into_stack(%struct.function* %function.1, %struct.rtx_def* %reg.1, %union.tree_node* %22, i32 %promoted_mode.0, i32 %decl_mode.0, i32 %land.ext, i32 0, i32 %lor.ext, %struct.hash_table* null)
  br label %if.end223

if.then149:                                       ; preds = %if.end134
  %fld150 = getelementptr inbounds %struct.rtx_def* %reg.1, i64 0, i32 1
  %rtx152 = bitcast [1 x %union.rtunion_def]* %fld150 to %struct.rtx_def**
  %23 = load %struct.rtx_def** %rtx152, align 8, !tbaa !9
  %24 = getelementptr inbounds %struct.rtx_def* %23, i64 0, i32 0
  %bf.load153 = load i32* %24, align 8
  %bf.lshr154 = lshr i32 %bf.load153, 16
  %bf.clear155 = and i32 %bf.lshr154, 255
  %call156 = tail call %union.tree_node* @type_for_mode(i32 %bf.clear155, i32 0) #5
  %25 = load %struct.rtx_def** %rtx152, align 8, !tbaa !9
  %arrayidx161 = getelementptr inbounds %struct.rtx_def* %reg.1, i64 0, i32 1, i64 1
  %rtx162 = bitcast %union.rtunion_def* %arrayidx161 to %struct.rtx_def**
  %26 = load %struct.rtx_def** %rtx162, align 8, !tbaa !9
  tail call fastcc void @put_reg_into_stack(%struct.function* %function.1, %struct.rtx_def* %26, %union.tree_node* %call156, i32 %bf.clear155, i32 %bf.clear155, i32 %land.ext, i32 0, i32 0, %struct.hash_table* null)
  tail call fastcc void @put_reg_into_stack(%struct.function* %function.1, %struct.rtx_def* %25, %union.tree_node* %call156, i32 %bf.clear155, i32 %bf.clear155, i32 %land.ext, i32 0, i32 0, %struct.hash_table* null)
  %bf.load163 = load i32* %21, align 8
  %bf.clear164 = and i32 %bf.load163, -65536
  %bf.set = or i32 %bf.clear164, 66
  store i32 %bf.set, i32* %21, align 8
  %27 = getelementptr inbounds %union.rtunion_def* %arrayidx161, i64 0, i32 0
  store i64 0, i64* %27, align 8, !tbaa !9
  %bf.load169 = load i32* %code, align 8
  %bf.clear170 = and i32 %bf.load169, 255
  %idxprom301 = zext i32 %bf.clear170 to i64
  %arrayidx171 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom301
  %28 = load i8* %arrayidx171, align 1, !tbaa !22
  %cmp172 = icmp eq i8 %28, 100
  br i1 %cmp172, label %if.then174, label %if.end177

if.then174:                                       ; preds = %if.then149
  %rtl176 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 17
  store %struct.rtx_def* null, %struct.rtx_def** %rtl176, align 8, !tbaa !63
  br label %if.end177

if.end177:                                        ; preds = %if.then174, %if.then149
  tail call void @set_mem_attributes(%struct.rtx_def* %reg.1, %union.tree_node* %decl, i32 1) #5
  %bf.load180 = load i32* %code, align 8
  %bf.clear181 = and i32 %bf.load180, 255
  %idxprom182302 = zext i32 %bf.clear181 to i64
  %arrayidx183 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom182302
  %29 = load i8* %arrayidx183, align 1, !tbaa !22
  %cmp185 = icmp eq i8 %29, 100
  br i1 %cmp185, label %if.then187, label %if.end190

if.then187:                                       ; preds = %if.end177
  %rtl189 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 17
  store %struct.rtx_def* %reg.1, %struct.rtx_def** %rtl189, align 8, !tbaa !63
  br label %if.end190

if.end190:                                        ; preds = %if.then187, %if.end177
  %30 = load %struct.rtx_def** %rtx152, align 8, !tbaa !9
  %arrayidx195 = getelementptr inbounds %struct.rtx_def* %30, i64 0, i32 1, i64 0
  %rtx196 = bitcast %union.rtunion_def* %arrayidx195 to %struct.rtx_def**
  %31 = load %struct.rtx_def** %rtx196, align 8, !tbaa !9
  %32 = getelementptr inbounds [1 x %union.rtunion_def]* %fld150, i64 0, i64 0, i32 0
  %.c = ptrtoint %struct.rtx_def* %31 to i64
  store i64 %.c, i64* %32, align 8, !tbaa !9
  %33 = getelementptr inbounds %struct.rtx_def* %31, i64 0, i32 0
  %bf.load203 = load i32* %33, align 8
  %bf.clear204 = and i32 %bf.load203, 65535
  %cmp205 = icmp eq i32 %bf.clear204, 75
  br i1 %cmp205, label %if.then207, label %if.end215

if.then207:                                       ; preds = %if.end190
  %call211 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %31) #5
  %call211.c = ptrtoint %struct.rtx_def* %call211 to i64
  store i64 %call211.c, i64* %32, align 8, !tbaa !9
  br label %if.end215

if.end215:                                        ; preds = %if.then207, %if.end190
  br i1 %2, label %if.then217, label %if.end223

if.then217:                                       ; preds = %if.end215
  %type219 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 1
  %34 = load %union.tree_node** %type219, align 8, !tbaa !56
  %tobool.i = icmp eq %union.tree_node* %34, null
  br i1 %tobool.i, label %cond.end.i, label %cond.true.i

cond.true.i:                                      ; preds = %if.then217
  %unsigned_flag.i = getelementptr inbounds %union.tree_node* %34, i64 0, i32 0, i32 0, i32 2
  %bf.load.i = load i32* %unsigned_flag.i, align 8
  %bf.lshr.i = lshr i32 %bf.load.i, 13
  %bf.clear.i = and i32 %bf.lshr.i, 1
  br label %cond.end.i

cond.end.i:                                       ; preds = %cond.true.i, %if.then217
  %cond.i = phi i32 [ %bf.clear.i, %cond.true.i ], [ 0, %if.then217 ]
  br i1 %cmp108, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %cond.end.i
  %call.i = tail call i8* @ggc_alloc(i64 24) #5
  %35 = bitcast i8* %call.i to %struct.var_refs_queue*
  %modified.i = bitcast i8* %call.i to %struct.rtx_def**
  store %struct.rtx_def* %reg.1, %struct.rtx_def** %modified.i, align 8, !tbaa !14
  %promoted_mode1.i = getelementptr inbounds i8* %call.i, i64 8
  %36 = bitcast i8* %promoted_mode1.i to i32*
  store i32 %promoted_mode.0, i32* %36, align 4, !tbaa !15
  %unsignedp.i = getelementptr inbounds i8* %call.i, i64 12
  %37 = bitcast i8* %unsignedp.i to i32*
  store i32 %cond.i, i32* %37, align 4, !tbaa !16
  %fixup_var_refs_queue.i = getelementptr inbounds %struct.function* %function.1, i64 0, i32 43
  %38 = load %struct.var_refs_queue** %fixup_var_refs_queue.i, align 8, !tbaa !11
  %next.i = getelementptr inbounds i8* %call.i, i64 16
  %39 = bitcast i8* %next.i to %struct.var_refs_queue**
  store %struct.var_refs_queue* %38, %struct.var_refs_queue** %39, align 8, !tbaa !12
  store %struct.var_refs_queue* %35, %struct.var_refs_queue** %fixup_var_refs_queue.i, align 8, !tbaa !11
  br label %schedule_fixup_var_refs.exit

if.else.i:                                        ; preds = %cond.end.i
  tail call fastcc void @fixup_var_refs(%struct.rtx_def* %reg.1, i32 %promoted_mode.0, i32 %cond.i, %struct.rtx_def* %reg.1, %struct.hash_table* null) #5
  br label %schedule_fixup_var_refs.exit

schedule_fixup_var_refs.exit:                     ; preds = %if.then.i, %if.else.i
  %tobool.i304 = icmp eq %union.tree_node* %call156, null
  br i1 %tobool.i304, label %cond.end.i312, label %cond.true.i309

cond.true.i309:                                   ; preds = %schedule_fixup_var_refs.exit
  %unsigned_flag.i305 = getelementptr inbounds %union.tree_node* %call156, i64 0, i32 0, i32 0, i32 2
  %bf.load.i306 = load i32* %unsigned_flag.i305, align 8
  %bf.lshr.i307 = lshr i32 %bf.load.i306, 13
  %bf.clear.i308 = and i32 %bf.lshr.i307, 1
  br label %cond.end.i312

cond.end.i312:                                    ; preds = %cond.true.i309, %schedule_fixup_var_refs.exit
  %cond.i310 = phi i32 [ %bf.clear.i308, %cond.true.i309 ], [ 0, %schedule_fixup_var_refs.exit ]
  br i1 %cmp108, label %if.else.i320, label %if.then.i319

if.then.i319:                                     ; preds = %cond.end.i312
  %call.i313 = tail call i8* @ggc_alloc(i64 24) #5
  %40 = bitcast i8* %call.i313 to %struct.var_refs_queue*
  %modified.i314 = bitcast i8* %call.i313 to %struct.rtx_def**
  store %struct.rtx_def* %25, %struct.rtx_def** %modified.i314, align 8, !tbaa !14
  %promoted_mode1.i315 = getelementptr inbounds i8* %call.i313, i64 8
  %41 = bitcast i8* %promoted_mode1.i315 to i32*
  store i32 %bf.clear155, i32* %41, align 4, !tbaa !15
  %unsignedp.i316 = getelementptr inbounds i8* %call.i313, i64 12
  %42 = bitcast i8* %unsignedp.i316 to i32*
  store i32 %cond.i310, i32* %42, align 4, !tbaa !16
  %fixup_var_refs_queue.i317 = getelementptr inbounds %struct.function* %function.1, i64 0, i32 43
  %43 = load %struct.var_refs_queue** %fixup_var_refs_queue.i317, align 8, !tbaa !11
  %next.i318 = getelementptr inbounds i8* %call.i313, i64 16
  %44 = bitcast i8* %next.i318 to %struct.var_refs_queue**
  store %struct.var_refs_queue* %43, %struct.var_refs_queue** %44, align 8, !tbaa !12
  store %struct.var_refs_queue* %40, %struct.var_refs_queue** %fixup_var_refs_queue.i317, align 8, !tbaa !11
  br label %schedule_fixup_var_refs.exit321

if.else.i320:                                     ; preds = %cond.end.i312
  tail call fastcc void @fixup_var_refs(%struct.rtx_def* %25, i32 %bf.clear155, i32 %cond.i310, %struct.rtx_def* %25, %struct.hash_table* null) #5
  br label %schedule_fixup_var_refs.exit321

schedule_fixup_var_refs.exit321:                  ; preds = %if.then.i319, %if.else.i320
  br i1 %tobool.i304, label %cond.end.i330, label %cond.true.i327

cond.true.i327:                                   ; preds = %schedule_fixup_var_refs.exit321
  %unsigned_flag.i323 = getelementptr inbounds %union.tree_node* %call156, i64 0, i32 0, i32 0, i32 2
  %bf.load.i324 = load i32* %unsigned_flag.i323, align 8
  %bf.lshr.i325 = lshr i32 %bf.load.i324, 13
  %bf.clear.i326 = and i32 %bf.lshr.i325, 1
  br label %cond.end.i330

cond.end.i330:                                    ; preds = %cond.true.i327, %schedule_fixup_var_refs.exit321
  %cond.i328 = phi i32 [ %bf.clear.i326, %cond.true.i327 ], [ 0, %schedule_fixup_var_refs.exit321 ]
  br i1 %cmp108, label %if.else.i338, label %if.then.i337

if.then.i337:                                     ; preds = %cond.end.i330
  %call.i331 = tail call i8* @ggc_alloc(i64 24) #5
  %45 = bitcast i8* %call.i331 to %struct.var_refs_queue*
  %modified.i332 = bitcast i8* %call.i331 to %struct.rtx_def**
  store %struct.rtx_def* %26, %struct.rtx_def** %modified.i332, align 8, !tbaa !14
  %promoted_mode1.i333 = getelementptr inbounds i8* %call.i331, i64 8
  %46 = bitcast i8* %promoted_mode1.i333 to i32*
  store i32 %bf.clear155, i32* %46, align 4, !tbaa !15
  %unsignedp.i334 = getelementptr inbounds i8* %call.i331, i64 12
  %47 = bitcast i8* %unsignedp.i334 to i32*
  store i32 %cond.i328, i32* %47, align 4, !tbaa !16
  %fixup_var_refs_queue.i335 = getelementptr inbounds %struct.function* %function.1, i64 0, i32 43
  %48 = load %struct.var_refs_queue** %fixup_var_refs_queue.i335, align 8, !tbaa !11
  %next.i336 = getelementptr inbounds i8* %call.i331, i64 16
  %49 = bitcast i8* %next.i336 to %struct.var_refs_queue**
  store %struct.var_refs_queue* %48, %struct.var_refs_queue** %49, align 8, !tbaa !12
  store %struct.var_refs_queue* %45, %struct.var_refs_queue** %fixup_var_refs_queue.i335, align 8, !tbaa !11
  br label %if.end223

if.else.i338:                                     ; preds = %cond.end.i330
  tail call fastcc void @fixup_var_refs(%struct.rtx_def* %26, i32 %bf.clear155, i32 %cond.i328, %struct.rtx_def* %26, %struct.hash_table* null) #5
  br label %if.end223

if.end223:                                        ; preds = %cond.false, %if.else.i338, %if.then.i337, %if.end134, %if.end215, %if.then140, %if.else, %cond.end39
  ret void
}

declare %union.tree_node* @decl_function_context(%union.tree_node*) #2

declare void @make_decl_rtl(%union.tree_node*, i8*) #2

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_mem_addressof(%struct.rtx_def* %reg, %union.tree_node* %decl) #0 {
entry:
  %0 = load i32* @target_flags, align 4, !tbaa !17
  %and = lshr i32 %0, 25
  %1 = and i32 %and, 1
  %2 = or i32 %1, 4
  %3 = getelementptr inbounds %struct.rtx_def* %reg, i64 0, i32 0
  %bf.load = load i32* %3, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %call = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear) #5
  %fld = getelementptr inbounds %struct.rtx_def* %reg, i64 0, i32 1
  %rtuint = bitcast [1 x %union.rtunion_def]* %fld to i32*
  %4 = load i32* %rtuint, align 4, !tbaa !17
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_eit(i32 70, i32 %2, %struct.rtx_def* %call, i32 %4, %union.tree_node* %decl) #5
  %tobool2 = icmp ne %union.tree_node* %decl, null
  br i1 %tobool2, label %cond.true, label %cond.end

cond.true:                                        ; preds = %entry
  %call3 = tail call i64 @get_alias_set(%union.tree_node* %decl) #5
  br label %cond.end

cond.end:                                         ; preds = %entry, %cond.true
  %cond4 = phi i64 [ %call3, %cond.true ], [ 0, %entry ]
  %bf.load5 = load i32* %3, align 8
  %bf.clear7 = and i32 %bf.load5, 134217728
  %arrayidx9 = getelementptr inbounds %struct.rtx_def* %call1, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx9 to %struct.rtx_def**
  %5 = load %struct.rtx_def** %rtx, align 8, !tbaa !9
  %6 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 0
  %bf.load10 = load i32* %6, align 8
  %bf.clear11 = and i32 %bf.load10, -134217729
  %bf.set = or i32 %bf.clear11, %bf.clear7
  store i32 %bf.set, i32* %6, align 8
  %bf.load12 = load i32* %3, align 8
  %bf.clear14 = and i32 %bf.load12, 67108864
  %7 = load %struct.rtx_def** %rtx, align 8, !tbaa !9
  %8 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 0
  %bf.load18 = load i32* %8, align 8
  %bf.clear21 = and i32 %bf.load18, -67108865
  %bf.set22 = or i32 %bf.clear21, %bf.clear14
  store i32 %bf.set22, i32* %8, align 8
  %bf.load23 = load i32* %3, align 8
  %bf.clear24 = and i32 %bf.load23, -65536
  %bf.set25 = or i32 %bf.clear24, 66
  store i32 %bf.set25, i32* %3, align 8
  %9 = getelementptr inbounds %struct.rtx_def* %reg, i64 0, i32 1, i64 1, i32 0
  store i64 0, i64* %9, align 8, !tbaa !9
  %10 = getelementptr inbounds [1 x %union.rtunion_def]* %fld, i64 0, i64 0, i32 0
  %call1.c = ptrtoint %struct.rtx_def* %call1 to i64
  store i64 %call1.c, i64* %10, align 8, !tbaa !9
  br i1 %tobool2, label %if.then, label %if.else

if.then:                                          ; preds = %cond.end
  %type32 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 1
  %11 = load %union.tree_node** %type32, align 8, !tbaa !56
  %code = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 2
  %bf.load34 = load i32* %code, align 8
  %bf.clear35 = and i32 %bf.load34, 255
  %idxprom188 = zext i32 %bf.clear35 to i64
  %arrayidx36 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom188
  %12 = load i8* %arrayidx36, align 1, !tbaa !22
  %cmp = icmp eq i8 %12, 100
  br i1 %cmp, label %cond.true38, label %cond.false42

cond.true38:                                      ; preds = %if.then
  %mode = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 5
  %13 = bitcast i48* %mode to i64*
  %bf.load40 = load i64* %13, align 8
  %bf.load40.tr = trunc i64 %bf.load40 to i32
  %bf.cast = and i32 %bf.load40.tr, 255
  br label %cond.end50

cond.false42:                                     ; preds = %if.then
  %type45 = bitcast %union.tree_node* %11 to %struct.tree_type*
  %mode46 = getelementptr inbounds %struct.tree_type* %type45, i64 0, i32 6
  %bf.load47 = load i32* %mode46, align 4
  %bf.lshr48 = lshr i32 %bf.load47, 9
  %bf.clear49 = and i32 %bf.lshr48, 127
  br label %cond.end50

cond.end50:                                       ; preds = %cond.false42, %cond.true38
  %cond51 = phi i32 [ %bf.cast, %cond.true38 ], [ %bf.clear49, %cond.false42 ]
  %cmp56 = icmp eq i32 %bf.clear35, 118
  br i1 %cmp56, label %cond.true58, label %cond.false60

cond.true58:                                      ; preds = %cond.end50
  %operands = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 2
  %arrayidx59 = getelementptr inbounds i32* %operands, i64 4
  %14 = bitcast i32* %arrayidx59 to %struct.rtx_def**
  br label %cond.end79

cond.false60:                                     ; preds = %cond.end50
  %rtl = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 17
  br label %cond.end79

cond.end79:                                       ; preds = %cond.false60, %cond.true58
  %cond80.in = phi %struct.rtx_def** [ %14, %cond.true58 ], [ %rtl, %cond.false60 ]
  %cond80 = load %struct.rtx_def** %cond80.in, align 8
  %bf.value82 = shl nuw nsw i32 %cond51, 16
  %bf.clear84 = and i32 %bf.set25, -16777150
  %bf.set85 = or i32 %bf.clear84, %bf.value82
  store i32 %bf.set85, i32* %3, align 8
  %bf.load88 = load i32* %code, align 8
  %bf.clear89 = and i32 %bf.load88, 255
  %idxprom90189 = zext i32 %bf.clear89 to i64
  %arrayidx91 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom90189
  %15 = load i8* %arrayidx91, align 1, !tbaa !22
  %cmp93 = icmp eq i8 %15, 100
  %cmp95 = icmp eq %struct.rtx_def* %cond80, %reg
  %or.cond = and i1 %cmp93, %cmp95
  br i1 %or.cond, label %if.then97, label %if.end

if.then97:                                        ; preds = %cond.end79
  %rtl99 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 17
  store %struct.rtx_def* null, %struct.rtx_def** %rtl99, align 8, !tbaa !63
  br label %if.end

if.end:                                           ; preds = %if.then97, %cond.end79
  tail call void @set_mem_attributes(%struct.rtx_def* %reg, %union.tree_node* %decl, i32 1) #5
  tail call void @set_mem_alias_set(%struct.rtx_def* %reg, i64 %cond4) #5
  %bf.load102 = load i32* %code, align 8
  %bf.clear103 = and i32 %bf.load102, 255
  %idxprom104190 = zext i32 %bf.clear103 to i64
  %arrayidx105 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom104190
  %16 = load i8* %arrayidx105, align 1, !tbaa !22
  %cmp107 = icmp eq i8 %16, 100
  %or.cond192 = and i1 %cmp107, %cmp95
  br i1 %or.cond192, label %if.then112, label %if.end115

if.then112:                                       ; preds = %if.end
  %rtl114 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 17
  store %struct.rtx_def* %reg, %struct.rtx_def** %rtl114, align 8, !tbaa !63
  br label %if.end115

if.end115:                                        ; preds = %if.then112, %if.end
  %bf.clear119 = and i32 %bf.load102, 65536
  %tobool120 = icmp eq i32 %bf.clear119, 0
  br i1 %tobool120, label %lor.lhs.false, label %if.then134

lor.lhs.false:                                    ; preds = %if.end115
  %17 = load i8* %arrayidx105, align 1, !tbaa !22
  %cmp128 = icmp eq i8 %17, 100
  br i1 %cmp128, label %land.lhs.true130, label %if.end146

land.lhs.true130:                                 ; preds = %lor.lhs.false
  %initial = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 12
  %18 = load %union.tree_node** %initial, align 8, !tbaa !61
  %cmp132 = icmp eq %union.tree_node* %18, null
  br i1 %cmp132, label %if.end146, label %if.then134

if.then134:                                       ; preds = %land.lhs.true130, %if.end115
  %bf.load135 = load i32* %3, align 8
  %bf.lshr136 = lshr i32 %bf.load135, 16
  %bf.clear137 = and i32 %bf.lshr136, 255
  %unsigned_flag = getelementptr inbounds %union.tree_node* %11, i64 0, i32 0, i32 0, i32 2
  %bf.load139 = load i32* %unsigned_flag, align 8
  %bf.lshr140 = lshr i32 %bf.load139, 13
  %bf.clear141 = and i32 %bf.lshr140, 1
  tail call fastcc void @fixup_var_refs(%struct.rtx_def* %reg, i32 %bf.clear137, i32 %bf.clear141, %struct.rtx_def* %reg, %struct.hash_table* null)
  br label %if.end146

if.else:                                          ; preds = %cond.end
  %bf.lshr144 = lshr i32 %bf.load23, 16
  %bf.clear145 = and i32 %bf.lshr144, 255
  tail call fastcc void @fixup_var_refs(%struct.rtx_def* %reg, i32 %bf.clear145, i32 0, %struct.rtx_def* %reg, %struct.hash_table* null)
  br label %if.end146

if.end146:                                        ; preds = %land.lhs.true130, %lor.lhs.false, %if.then134, %if.else
  ret %struct.rtx_def* %reg
}

; Function Attrs: nounwind uwtable
define internal fastcc void @put_reg_into_stack(%struct.function* %function, %struct.rtx_def* %reg, %union.tree_node* %type, i32 %promoted_mode, i32 %decl_mode, i32 %volatile_p, i32 %original_regno, i32 %used_p, %struct.hash_table* %ht) #0 {
entry:
  %tobool = icmp ne %struct.function* %function, null
  %0 = load %struct.function** @cfun, align 8, !tbaa !9
  %cond = select i1 %tobool, %struct.function* %function, %struct.function* %0
  %cmp = icmp eq i32 %original_regno, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %reg, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %1 = load i32* %rtuint, align 4, !tbaa !17
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %regno.0 = phi i32 [ %1, %if.then ], [ %original_regno, %entry ]
  %x_max_parm_reg = getelementptr inbounds %struct.function* %cond, i64 0, i32 37
  %2 = load i32* %x_max_parm_reg, align 4, !tbaa !64
  %cmp1 = icmp ult i32 %regno.0, %2
  br i1 %cmp1, label %if.end4, label %if.then6

if.end4:                                          ; preds = %if.end
  %idxprom = zext i32 %regno.0 to i64
  %x_parm_reg_stack_loc = getelementptr inbounds %struct.function* %cond, i64 0, i32 38
  %3 = load %struct.rtx_def*** %x_parm_reg_stack_loc, align 8, !tbaa !31
  %arrayidx3 = getelementptr inbounds %struct.rtx_def** %3, i64 %idxprom
  %4 = load %struct.rtx_def** %arrayidx3, align 8, !tbaa !9
  %cmp5 = icmp eq %struct.rtx_def* %4, null
  br i1 %cmp5, label %if.then6, label %if.end9

if.then6:                                         ; preds = %if.end, %if.end4
  %idxprom7 = sext i32 %decl_mode to i64
  %arrayidx8 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom7
  %5 = load i8* %arrayidx8, align 1, !tbaa !22
  %conv = zext i8 %5 to i64
  %call = tail call fastcc %struct.rtx_def* @assign_stack_local_1(i32 %decl_mode, i64 %conv, i32 0, %struct.function* %cond)
  br label %if.end9

if.end9:                                          ; preds = %if.then6, %if.end4
  %new.1 = phi %struct.rtx_def* [ %call, %if.then6 ], [ %4, %if.end4 ]
  %6 = getelementptr inbounds %struct.rtx_def* %reg, i64 0, i32 0
  %bf.load = load i32* %6, align 8
  %bf.clear = and i32 %bf.load, -16777216
  %bf.value = shl i32 %decl_mode, 16
  %bf.shl = and i32 %bf.value, 16711680
  %bf.set = or i32 %bf.shl, %bf.clear
  %bf.set12 = or i32 %bf.set, 66
  store i32 %bf.set12, i32* %6, align 8
  %arrayidx14 = getelementptr inbounds %struct.rtx_def* %new.1, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx14 to %struct.rtx_def**
  %7 = load %struct.rtx_def** %rtx, align 8, !tbaa !9
  %8 = getelementptr inbounds %struct.rtx_def* %reg, i64 0, i32 1, i64 0, i32 0
  %.c = ptrtoint %struct.rtx_def* %7 to i64
  store i64 %.c, i64* %8, align 8, !tbaa !9
  %9 = getelementptr inbounds %struct.rtx_def* %reg, i64 0, i32 1, i64 1, i32 0
  store i64 0, i64* %9, align 8, !tbaa !9
  %bf.value21 = shl i32 %volatile_p, 27
  %bf.shl22 = and i32 %bf.value21, 134217728
  %bf.clear23 = and i32 %bf.set12, -134283198
  %bf.set24 = or i32 %bf.clear23, %bf.shl22
  store i32 %bf.set24, i32* %6, align 8
  %tobool25 = icmp eq %union.tree_node* %type, null
  br i1 %tobool25, label %if.end75, label %do.body

do.body:                                          ; preds = %if.end9
  %code = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 0, i32 2
  %bf.load27 = load i32* %code, align 8
  %bf.clear28 = and i32 %bf.load27, 255
  %bf.clear28.off = add i32 %bf.clear28, -18
  %switch = icmp ult i32 %bf.clear28.off, 5
  br i1 %switch, label %if.then62, label %lor.lhs.false58

lor.lhs.false58:                                  ; preds = %do.body
  %10 = getelementptr inbounds %struct.rtx_def* %new.1, i64 0, i32 0
  %bf.load59 = load i32* %10, align 8
  %bf.clear60 = and i32 %bf.load59, 268435456
  %tobool61 = icmp eq i32 %bf.clear60, 0
  br i1 %tobool61, label %if.else, label %if.then62

if.then62:                                        ; preds = %do.body, %lor.lhs.false58
  %bf.set65 = and i32 %bf.set24, 1878982722
  %bf.clear67 = or i32 %bf.set65, 268435456
  br label %do.end

if.else:                                          ; preds = %lor.lhs.false58
  %bf.clear71 = and i32 %bf.set24, 1878982722
  %bf.set72 = or i32 %bf.clear71, -2147483648
  br label %do.end

do.end:                                           ; preds = %if.then62, %if.else
  %storemerge = phi i32 [ %bf.set72, %if.else ], [ %bf.clear67, %if.then62 ]
  store i32 %storemerge, i32* %6, align 8
  %call74 = tail call i64 @get_alias_set(%union.tree_node* %type) #5
  tail call void @set_mem_alias_set(%struct.rtx_def* %reg, i64 %call74) #5
  br label %if.end75

if.end75:                                         ; preds = %if.end9, %do.end
  %tobool76 = icmp eq i32 %used_p, 0
  br i1 %tobool76, label %if.end78, label %if.then77

if.then77:                                        ; preds = %if.end75
  br i1 %tobool25, label %cond.end.i, label %cond.true.i

cond.true.i:                                      ; preds = %if.then77
  %unsigned_flag.i = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 0, i32 2
  %bf.load.i = load i32* %unsigned_flag.i, align 8
  %bf.lshr.i = lshr i32 %bf.load.i, 13
  %bf.clear.i = and i32 %bf.lshr.i, 1
  br label %cond.end.i

cond.end.i:                                       ; preds = %cond.true.i, %if.then77
  %cond.i = phi i32 [ %bf.clear.i, %cond.true.i ], [ 0, %if.then77 ]
  %cmp.i = icmp eq %struct.function* %function, null
  br i1 %cmp.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %cond.end.i
  %call.i = tail call i8* @ggc_alloc(i64 24) #5
  %11 = bitcast i8* %call.i to %struct.var_refs_queue*
  %modified.i = bitcast i8* %call.i to %struct.rtx_def**
  store %struct.rtx_def* %reg, %struct.rtx_def** %modified.i, align 8, !tbaa !14
  %promoted_mode1.i = getelementptr inbounds i8* %call.i, i64 8
  %12 = bitcast i8* %promoted_mode1.i to i32*
  store i32 %promoted_mode, i32* %12, align 4, !tbaa !15
  %unsignedp.i = getelementptr inbounds i8* %call.i, i64 12
  %13 = bitcast i8* %unsignedp.i to i32*
  store i32 %cond.i, i32* %13, align 4, !tbaa !16
  %fixup_var_refs_queue.i = getelementptr inbounds %struct.function* %function, i64 0, i32 43
  %14 = load %struct.var_refs_queue** %fixup_var_refs_queue.i, align 8, !tbaa !11
  %next.i = getelementptr inbounds i8* %call.i, i64 16
  %15 = bitcast i8* %next.i to %struct.var_refs_queue**
  store %struct.var_refs_queue* %14, %struct.var_refs_queue** %15, align 8, !tbaa !12
  store %struct.var_refs_queue* %11, %struct.var_refs_queue** %fixup_var_refs_queue.i, align 8, !tbaa !11
  br label %if.end78

if.else.i:                                        ; preds = %cond.end.i
  tail call fastcc void @fixup_var_refs(%struct.rtx_def* %reg, i32 %promoted_mode, i32 %cond.i, %struct.rtx_def* %reg, %struct.hash_table* %ht) #5
  br label %if.end78

if.end78:                                         ; preds = %if.else.i, %if.then.i, %if.end75
  ret void
}

declare void @set_mem_attributes(%struct.rtx_def*, %union.tree_node*, i32) #2

declare %struct.rtx_def* @copy_rtx(%struct.rtx_def*) #2

declare %struct.rtx_def* @gen_rtx_fmt_eit(i32, i32, %struct.rtx_def*, i32, %union.tree_node*) #2

; Function Attrs: nounwind uwtable
define void @flush_addressof(%union.tree_node* %decl) #0 {
entry:
  %code = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %0 = and i32 %bf.load, 254
  %switch = icmp eq i32 %0, 34
  br i1 %switch, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %rtl = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 17
  %1 = load %struct.rtx_def** %rtl, align 8, !tbaa !63
  %tobool = icmp eq %struct.rtx_def* %1, null
  br i1 %tobool, label %cond.end, label %cond.end22

cond.end:                                         ; preds = %land.lhs.true
  tail call void @make_decl_rtl(%union.tree_node* %decl, i8* null) #5
  %2 = load %struct.rtx_def** %rtl, align 8, !tbaa !63
  %cmp11 = icmp eq %struct.rtx_def* %2, null
  br i1 %cmp11, label %if.end, label %cond.end22

cond.end22:                                       ; preds = %land.lhs.true, %cond.end
  %3 = phi %struct.rtx_def* [ %2, %cond.end ], [ %1, %land.lhs.true ]
  %4 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 0
  %bf.load24 = load i32* %4, align 8
  %bf.clear25 = and i32 %bf.load24, 65535
  %cmp26 = icmp eq i32 %bf.clear25, 66
  br i1 %cmp26, label %cond.end37, label %if.end

cond.end37:                                       ; preds = %cond.end22
  %arrayidx = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %5 = load %struct.rtx_def** %rtx, align 8, !tbaa !9
  %6 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 0
  %bf.load39 = load i32* %6, align 8
  %bf.clear40 = and i32 %bf.load39, 65535
  %cmp41 = icmp eq i32 %bf.clear40, 70
  br i1 %cmp41, label %cond.end52, label %if.end

cond.end52:                                       ; preds = %cond.end37
  %arrayidx58 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 1, i64 0
  %rtx59 = bitcast %union.rtunion_def* %arrayidx58 to %struct.rtx_def**
  %7 = load %struct.rtx_def** %rtx59, align 8, !tbaa !9
  %8 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 0
  %bf.load60 = load i32* %8, align 8
  %bf.clear61 = and i32 %bf.load60, 65535
  %cmp62 = icmp eq i32 %bf.clear61, 61
  br i1 %cmp62, label %cond.end72, label %if.end

cond.end72:                                       ; preds = %cond.end52
  %fld.i = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 1
  %rtx.i = bitcast [1 x %union.rtunion_def]* %fld.i to %struct.rtx_def**
  %9 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !9
  %10 = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 0
  %bf.load.i = load i32* %10, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  %cmp.i = icmp eq i32 %bf.clear.i, 61
  br i1 %cmp.i, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %cond.end72
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8]* @.str, i64 0, i64 0), i32 2997, i8* getelementptr inbounds ([25 x i8]* @__FUNCTION__.put_addressof_into_stack, i64 0, i64 0)) #8
  unreachable

if.end.i:                                         ; preds = %cond.end72
  %arrayidx2.i = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 1, i64 2
  %rttree.i = bitcast %union.rtunion_def* %arrayidx2.i to %union.tree_node**
  %11 = load %union.tree_node** %rttree.i, align 8, !tbaa !9
  %tobool.i = icmp eq %union.tree_node* %11, null
  br i1 %tobool.i, label %put_addressof_into_stack.exit, label %if.then3.i

if.then3.i:                                       ; preds = %if.end.i
  %type4.i = getelementptr inbounds %union.tree_node* %11, i64 0, i32 0, i32 0, i32 1
  %12 = load %union.tree_node** %type4.i, align 8, !tbaa !56
  %code.i = getelementptr inbounds %union.tree_node* %11, i64 0, i32 0, i32 0, i32 2
  %bf.load6.i = load i32* %code.i, align 8
  %bf.clear7.i = and i32 %bf.load6.i, 255
  %cmp8.i = icmp eq i32 %bf.clear7.i, 118
  br i1 %cmp8.i, label %land.end.i, label %land.rhs.i

land.rhs.i:                                       ; preds = %if.then3.i
  %bf.clear11.i = and i32 %bf.load6.i, 2048
  %tobool12.i = icmp ne i32 %bf.clear11.i, 0
  br label %land.end.i

land.end.i:                                       ; preds = %land.rhs.i, %if.then3.i
  %13 = phi i1 [ false, %if.then3.i ], [ %tobool12.i, %land.rhs.i ]
  %land.ext.i = zext i1 %13 to i32
  %bf.clear16.i = and i32 %bf.load6.i, 65536
  %tobool17.i = icmp eq i32 %bf.clear16.i, 0
  br i1 %tobool17.i, label %lor.rhs.i, label %lor.end.i

lor.rhs.i:                                        ; preds = %land.end.i
  %idxprom51.i = zext i32 %bf.clear7.i to i64
  %arrayidx22.i = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom51.i
  %14 = load i8* %arrayidx22.i, align 1, !tbaa !22
  %cmp23.i = icmp eq i8 %14, 100
  br i1 %cmp23.i, label %land.rhs25.i, label %lor.end.i

land.rhs25.i:                                     ; preds = %lor.rhs.i
  %initial.i = getelementptr inbounds %union.tree_node* %11, i64 0, i32 0, i32 12
  %15 = load %union.tree_node** %initial.i, align 8, !tbaa !61
  %cmp27.i = icmp ne %union.tree_node* %15, null
  br label %lor.end.i

lor.end.i:                                        ; preds = %land.rhs25.i, %lor.rhs.i, %land.end.i
  %16 = phi i1 [ true, %land.end.i ], [ false, %lor.rhs.i ], [ %cmp27.i, %land.rhs25.i ]
  %lor.ext.i = zext i1 %16 to i32
  br label %put_addressof_into_stack.exit

put_addressof_into_stack.exit:                    ; preds = %if.end.i, %lor.end.i
  %volatile_p.0.i = phi i32 [ %land.ext.i, %lor.end.i ], [ 0, %if.end.i ]
  %used_p.0.i = phi i32 [ %lor.ext.i, %lor.end.i ], [ 1, %if.end.i ]
  %type.0.i = phi %union.tree_node* [ %12, %lor.end.i ], [ null, %if.end.i ]
  %bf.lshr33.i = lshr i32 %bf.load.i, 16
  %bf.clear34.i = and i32 %bf.lshr33.i, 255
  %arrayidx39.i = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 1, i64 1
  %rtuint.i = bitcast %union.rtunion_def* %arrayidx39.i to i32*
  %17 = load i32* %rtuint.i, align 4, !tbaa !17
  tail call fastcc void @put_reg_into_stack(%struct.function* null, %struct.rtx_def* %9, %union.tree_node* %type.0.i, i32 %bf.clear34.i, i32 %bf.clear34.i, i32 %volatile_p.0.i, i32 %17, i32 %used_p.0.i, %struct.hash_table* null) #5
  br label %if.end

if.end:                                           ; preds = %entry, %cond.end, %put_addressof_into_stack.exit, %cond.end52, %cond.end37, %cond.end22
  ret void
}

; Function Attrs: nounwind uwtable
define void @purge_addressof(%struct.rtx_def* %insns) #0 {
entry:
  %insn.i = alloca %struct.rtx_def*, align 8
  %ifmwi.i = alloca %struct.insns_for_mem_walk_info, align 8
  %ht = alloca %struct.hash_table, align 8
  %note = alloca %struct.rtx_def*, align 8
  %0 = bitcast %struct.hash_table* %ht to i8*
  call void @llvm.lifetime.start(i64 128, i8* %0) #5
  call void @hash_table_init(%struct.hash_table* %ht, %struct.hash_entry* (%struct.hash_entry*, %struct.hash_table*, i8*)* @insns_for_mem_newfunc, i64 (i8*)* @insns_for_mem_hash, i1 (i8*, i8*)* @insns_for_mem_comp) #5
  %1 = bitcast %struct.rtx_def** %insn.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #5
  %2 = bitcast %struct.insns_for_mem_walk_info* %ifmwi.i to i8*
  call void @llvm.lifetime.start(i64 24, i8* %2) #5
  %ht1.i = getelementptr inbounds %struct.insns_for_mem_walk_info* %ifmwi.i, i64 0, i32 0
  store %struct.hash_table* %ht, %struct.hash_table** %ht1.i, align 8, !tbaa !65
  %pass.i = getelementptr inbounds %struct.insns_for_mem_walk_info* %ifmwi.i, i64 0, i32 2
  store i32 0, i32* %pass.i, align 8, !tbaa !67
  %cmp415.i = icmp eq %struct.rtx_def* %insns, null
  %insn8.i = getelementptr inbounds %struct.insns_for_mem_walk_info* %ifmwi.i, i64 0, i32 1
  br i1 %cmp415.i, label %for.cond.preheader.thread, label %for.body5.lr.ph.i

for.cond.preheader.thread:                        ; preds = %entry
  store %struct.rtx_def* null, %struct.rtx_def** %insn.i, align 8, !tbaa !9
  store i32 2, i32* %pass.i, align 8, !tbaa !67
  br label %for.end44

for.body5.lr.ph.i:                                ; preds = %entry, %for.inc10.i
  store %struct.rtx_def* %insns, %struct.rtx_def** %insn.i, align 8, !tbaa !9
  br label %for.body5.i

for.body5.i:                                      ; preds = %for.inc.i, %for.body5.lr.ph.i
  %storemerge16.i = phi %struct.rtx_def* [ %insns, %for.body5.lr.ph.i ], [ %6, %for.inc.i ]
  %3 = getelementptr inbounds %struct.rtx_def* %storemerge16.i, i64 0, i32 0
  %bf.load.i = load i32* %3, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  %idxprom14.i = zext i32 %bf.clear.i to i64
  %arrayidx.i = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom14.i
  %4 = load i8* %arrayidx.i, align 1, !tbaa !22
  %cmp6.i = icmp eq i8 %4, 105
  br i1 %cmp6.i, label %if.then.i, label %for.inc.i

if.then.i:                                        ; preds = %for.body5.i
  store %struct.rtx_def* %storemerge16.i, %struct.rtx_def** %insn8.i, align 8, !tbaa !68
  %call.i = call i32 @for_each_rtx(%struct.rtx_def** %insn.i, i32 (%struct.rtx_def**, i8*)* @insns_for_mem_walk, i8* %2) #5
  %.pre17.i = load %struct.rtx_def** %insn.i, align 8, !tbaa !9
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then.i, %for.body5.i
  %5 = phi %struct.rtx_def* [ %storemerge16.i, %for.body5.i ], [ %.pre17.i, %if.then.i ]
  %arrayidx9.i = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 1, i64 2
  %rtx.i = bitcast %union.rtunion_def* %arrayidx9.i to %struct.rtx_def**
  %6 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !9
  store %struct.rtx_def* %6, %struct.rtx_def** %insn.i, align 8, !tbaa !9
  %cmp4.i = icmp eq %struct.rtx_def* %6, null
  br i1 %cmp4.i, label %for.inc10.i, label %for.body5.i

for.inc10.i:                                      ; preds = %for.inc.i
  %.pre.i = load i32* %pass.i, align 8, !tbaa !67
  %inc.i = add nsw i32 %.pre.i, 1
  store i32 %inc.i, i32* %pass.i, align 8, !tbaa !67
  %cmp.i = icmp slt i32 %inc.i, 2
  br i1 %cmp.i, label %for.body5.lr.ph.i, label %for.cond.preheader

for.cond.preheader:                               ; preds = %for.inc10.i
  br i1 %cmp415.i, label %for.end44, label %for.body

for.body:                                         ; preds = %for.cond.preheader, %for.inc40
  %insn.062 = phi %struct.rtx_def* [ %12, %for.inc40 ], [ %insns, %for.cond.preheader ]
  %7 = getelementptr inbounds %struct.rtx_def* %insn.062, i64 0, i32 0
  %bf.load = load i32* %7, align 8
  %bf.clear = and i32 %bf.load, 65535
  %bf.clear.off = add i32 %bf.clear, -32
  %switch = icmp ult i32 %bf.clear.off, 3
  br i1 %switch, label %if.then, label %for.inc40

if.then:                                          ; preds = %for.body
  %arrayidx = getelementptr inbounds %struct.rtx_def* %insn.062, i64 0, i32 1, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %8 = load %struct.rtx_def** %rtx, align 8, !tbaa !9
  %call = call i32 @asm_noperands(%struct.rtx_def* %8) #5
  %cmp11 = icmp sgt i32 %call, 0
  %conv = zext i1 %cmp11 to i32
  %call12 = call fastcc zeroext i1 @purge_addressof_1(%struct.rtx_def** %rtx, %struct.rtx_def* %insn.062, i32 %conv, i32 0, %struct.hash_table* %ht)
  br i1 %call12, label %if.end, label %if.then13

if.then13:                                        ; preds = %if.then
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8]* @.str, i64 0, i64 0), i32 3455, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.purge_addressof, i64 0, i64 0)) #8
  unreachable

if.end:                                           ; preds = %if.then
  %arrayidx15 = getelementptr inbounds %struct.rtx_def* %insn.062, i64 0, i32 1, i64 6
  %rtx16 = bitcast %union.rtunion_def* %arrayidx15 to %struct.rtx_def**
  %call17 = call fastcc zeroext i1 @purge_addressof_1(%struct.rtx_def** %rtx16, %struct.rtx_def* null, i32 0, i32 0, %struct.hash_table* %ht)
  br i1 %call17, label %for.inc40, label %for.cond22.preheader

for.cond22.preheader:                             ; preds = %if.end
  %storemerge58 = load %struct.rtx_def** %rtx16, align 8
  store %struct.rtx_def* %storemerge58, %struct.rtx_def** %note, align 8, !tbaa !9
  %tobool2359 = icmp eq %struct.rtx_def* %storemerge58, null
  br i1 %tobool2359, label %for.inc40, label %for.body24

for.body24:                                       ; preds = %for.cond22.preheader, %for.inc
  %storemerge60 = phi %struct.rtx_def* [ %storemerge, %for.inc ], [ %storemerge58, %for.cond22.preheader ]
  %9 = getelementptr inbounds %struct.rtx_def* %storemerge60, i64 0, i32 0
  %bf.load25 = load i32* %9, align 8
  %bf.clear26 = and i32 %bf.load25, 16711680
  %cmp27 = icmp eq i32 %bf.clear26, 393216
  br i1 %cmp27, label %if.then29, label %if.end30

if.then29:                                        ; preds = %for.body24
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8]* @.str, i64 0, i64 0), i32 3470, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.purge_addressof, i64 0, i64 0)) #8
  unreachable

if.end30:                                         ; preds = %for.body24
  %call31 = call i32 @for_each_rtx(%struct.rtx_def** %note, i32 (%struct.rtx_def**, i8*)* @is_addressof, i8* null) #5
  %tobool32 = icmp eq i32 %call31, 0
  br i1 %tobool32, label %for.inc, label %if.then33

if.then33:                                        ; preds = %if.end30
  %10 = load %struct.rtx_def** %note, align 8, !tbaa !9
  call void @remove_note(%struct.rtx_def* %insn.062, %struct.rtx_def* %10) #5
  br label %for.inc

for.inc:                                          ; preds = %if.end30, %if.then33
  %11 = load %struct.rtx_def** %note, align 8, !tbaa !9
  %arrayidx36 = getelementptr inbounds %struct.rtx_def* %11, i64 0, i32 1, i64 1
  %rtx37 = bitcast %union.rtunion_def* %arrayidx36 to %struct.rtx_def**
  %storemerge = load %struct.rtx_def** %rtx37, align 8
  store %struct.rtx_def* %storemerge, %struct.rtx_def** %note, align 8, !tbaa !9
  %tobool23 = icmp eq %struct.rtx_def* %storemerge, null
  br i1 %tobool23, label %for.inc40, label %for.body24

for.inc40:                                        ; preds = %for.inc, %for.cond22.preheader, %for.body, %if.end
  %arrayidx42 = getelementptr inbounds %struct.rtx_def* %insn.062, i64 0, i32 1, i64 2
  %rtx43 = bitcast %union.rtunion_def* %arrayidx42 to %struct.rtx_def**
  %12 = load %struct.rtx_def** %rtx43, align 8, !tbaa !9
  %tobool = icmp eq %struct.rtx_def* %12, null
  br i1 %tobool, label %for.end44, label %for.body

for.end44:                                        ; preds = %for.inc40, %for.cond.preheader.thread, %for.cond.preheader
  call void @hash_table_free(%struct.hash_table* %ht) #5
  store %struct.rtx_def* null, %struct.rtx_def** @purge_bitfield_addressof_replacements, align 8, !tbaa !9
  store %struct.rtx_def* null, %struct.rtx_def** @purge_addressof_replacements, align 8, !tbaa !9
  %call45 = call %struct.rtx_def* @get_insns() #5
  call void @unshare_all_rtl_again(%struct.rtx_def* %call45) #5
  call void @llvm.lifetime.end(i64 128, i8* %0) #5
  ret void
}

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #5

declare void @hash_table_init(%struct.hash_table*, %struct.hash_entry* (%struct.hash_entry*, %struct.hash_table*, i8*)*, i64 (i8*)*, i1 (i8*, i8*)*) #2

; Function Attrs: nounwind uwtable
define internal %struct.hash_entry* @insns_for_mem_newfunc(%struct.hash_entry* readnone %he, %struct.hash_table* %ht, i8* nocapture readnone %k) #0 {
entry:
  %tobool = icmp eq %struct.hash_entry* %he, null
  br i1 %tobool, label %if.end, label %return

if.end:                                           ; preds = %entry
  %call = tail call i8* @hash_allocate(%struct.hash_table* %ht, i32 32) #5
  %insns = getelementptr inbounds i8* %call, i64 24
  %0 = bitcast i8* %insns to %struct.rtx_def**
  store %struct.rtx_def* null, %struct.rtx_def** %0, align 8, !tbaa !69
  %he1 = bitcast i8* %call to %struct.hash_entry*
  br label %return

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.hash_entry* [ %he1, %if.end ], [ %he, %entry ]
  ret %struct.hash_entry* %retval.0
}

; Function Attrs: nounwind readnone uwtable
define internal i64 @insns_for_mem_hash(i8* %k) #6 {
entry:
  %0 = ptrtoint i8* %k to i64
  ret i64 %0
}

; Function Attrs: nounwind readnone uwtable
define internal zeroext i1 @insns_for_mem_comp(i8* readnone %k1, i8* readnone %k2) #6 {
entry:
  %cmp = icmp eq i8* %k1, %k2
  ret i1 %cmp
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i1 @purge_addressof_1(%struct.rtx_def** %loc, %struct.rtx_def* %insn, i32 %force, i32 %store, %struct.hash_table* %ht) #0 {
entry:
  %insn.i638 = alloca %struct.rtx_def*, align 8
  %ifmwi.i639 = alloca %struct.insns_for_mem_walk_info, align 8
  %insn.i604 = alloca %struct.rtx_def*, align 8
  %ifmwi.i605 = alloca %struct.insns_for_mem_walk_info, align 8
  %insn.i = alloca %struct.rtx_def*, align 8
  %ifmwi.i = alloca %struct.insns_for_mem_walk_info, align 8
  %tobool57 = icmp eq i32 %force, 0
  br i1 %tobool57, label %restart, label %restart.us

restart.us:                                       ; preds = %entry
  %.pre = load %struct.rtx_def** %loc, align 8, !tbaa !9
  %cmp.us = icmp eq %struct.rtx_def* %.pre, null
  br i1 %cmp.us, label %return, label %if.end.us

if.end.us:                                        ; preds = %restart.us
  %0 = getelementptr inbounds %struct.rtx_def* %.pre, i64 0, i32 0
  %bf.load.us = load i32* %0, align 8
  %bf.clear.us = and i32 %bf.load.us, 65535
  switch i32 %bf.clear.us, label %give_up [
    i32 47, label %if.then2
    i32 70, label %if.then13
    i32 66, label %land.lhs.true48.us
  ]

land.lhs.true48.us:                               ; preds = %if.end.us
  br label %give_up

restart:                                          ; preds = %entry, %if.then354
  %1 = load %struct.rtx_def** %loc, align 8, !tbaa !9
  %cmp = icmp eq %struct.rtx_def* %1, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %restart
  %2 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 0
  %bf.load = load i32* %2, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %give_up [
    i32 47, label %if.then2
    i32 70, label %if.then13
    i32 66, label %land.lhs.true48
  ]

if.then2:                                         ; preds = %if.end, %if.end.us
  %.lcssa678 = phi %struct.rtx_def* [ %.pre, %if.end.us ], [ %1, %if.end ]
  %fld = getelementptr inbounds %struct.rtx_def* %.lcssa678, i64 0, i32 1
  %rtx = bitcast [1 x %union.rtunion_def]* %fld to %struct.rtx_def**
  %call = call fastcc zeroext i1 @purge_addressof_1(%struct.rtx_def** %rtx, %struct.rtx_def* %insn, i32 %force, i32 1, %struct.hash_table* %ht)
  %arrayidx4 = getelementptr inbounds %struct.rtx_def* %.lcssa678, i64 0, i32 1, i64 1
  %rtx5 = bitcast %union.rtunion_def* %arrayidx4 to %struct.rtx_def**
  %call6 = call fastcc zeroext i1 @purge_addressof_1(%struct.rtx_def** %rtx5, %struct.rtx_def* %insn, i32 %force, i32 0, %struct.hash_table* %ht)
  %and601 = and i1 %call, %call6
  br label %return

if.then13:                                        ; preds = %if.end, %if.end.us
  %.lcssa679 = phi %struct.rtx_def* [ %.pre, %if.end.us ], [ %1, %if.end ]
  %arrayidx15 = getelementptr inbounds %struct.rtx_def* %.lcssa679, i64 0, i32 1, i64 0
  %rtx16 = bitcast %union.rtunion_def* %arrayidx15 to %struct.rtx_def**
  %3 = load %struct.rtx_def** %rtx16, align 8, !tbaa !9
  %4 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 0
  %bf.load17 = load i32* %4, align 8
  %bf.clear18 = and i32 %bf.load17, 65535
  switch i32 %bf.clear18, label %if.then.i637 [
    i32 66, label %if.end22
    i32 61, label %if.end.i
  ]

if.then.i637:                                     ; preds = %if.then13
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8]* @.str, i64 0, i64 0), i32 2997, i8* getelementptr inbounds ([25 x i8]* @__FUNCTION__.put_addressof_into_stack, i64 0, i64 0)) #8
  unreachable

if.end.i:                                         ; preds = %if.then13
  %arrayidx2.i = getelementptr inbounds %struct.rtx_def* %.lcssa679, i64 0, i32 1, i64 2
  %rttree.i = bitcast %union.rtunion_def* %arrayidx2.i to %union.tree_node**
  %5 = load %union.tree_node** %rttree.i, align 8, !tbaa !9
  %tobool.i = icmp eq %union.tree_node* %5, null
  br i1 %tobool.i, label %put_addressof_into_stack.exit, label %if.then3.i

if.then3.i:                                       ; preds = %if.end.i
  %type4.i = getelementptr inbounds %union.tree_node* %5, i64 0, i32 0, i32 0, i32 1
  %6 = load %union.tree_node** %type4.i, align 8, !tbaa !56
  %code.i = getelementptr inbounds %union.tree_node* %5, i64 0, i32 0, i32 0, i32 2
  %bf.load6.i = load i32* %code.i, align 8
  %bf.clear7.i = and i32 %bf.load6.i, 255
  %cmp8.i = icmp eq i32 %bf.clear7.i, 118
  br i1 %cmp8.i, label %land.end.i, label %land.rhs.i

land.rhs.i:                                       ; preds = %if.then3.i
  %bf.clear11.i = and i32 %bf.load6.i, 2048
  %tobool12.i = icmp ne i32 %bf.clear11.i, 0
  br label %land.end.i

land.end.i:                                       ; preds = %land.rhs.i, %if.then3.i
  %7 = phi i1 [ false, %if.then3.i ], [ %tobool12.i, %land.rhs.i ]
  %land.ext.i = zext i1 %7 to i32
  %bf.clear16.i = and i32 %bf.load6.i, 65536
  %tobool17.i = icmp eq i32 %bf.clear16.i, 0
  br i1 %tobool17.i, label %lor.rhs.i, label %lor.end.i

lor.rhs.i:                                        ; preds = %land.end.i
  %idxprom51.i = zext i32 %bf.clear7.i to i64
  %arrayidx22.i = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom51.i
  %8 = load i8* %arrayidx22.i, align 1, !tbaa !22
  %cmp23.i = icmp eq i8 %8, 100
  br i1 %cmp23.i, label %land.rhs25.i, label %lor.end.i

land.rhs25.i:                                     ; preds = %lor.rhs.i
  %initial.i = getelementptr inbounds %union.tree_node* %5, i64 0, i32 0, i32 12
  %9 = load %union.tree_node** %initial.i, align 8, !tbaa !61
  %cmp27.i = icmp ne %union.tree_node* %9, null
  br label %lor.end.i

lor.end.i:                                        ; preds = %land.rhs25.i, %lor.rhs.i, %land.end.i
  %10 = phi i1 [ true, %land.end.i ], [ false, %lor.rhs.i ], [ %cmp27.i, %land.rhs25.i ]
  %lor.ext.i = zext i1 %10 to i32
  br label %put_addressof_into_stack.exit

put_addressof_into_stack.exit:                    ; preds = %if.end.i, %lor.end.i
  %volatile_p.0.i = phi i32 [ %land.ext.i, %lor.end.i ], [ 0, %if.end.i ]
  %used_p.0.i = phi i32 [ %lor.ext.i, %lor.end.i ], [ 1, %if.end.i ]
  %type.0.i = phi %union.tree_node* [ %6, %lor.end.i ], [ null, %if.end.i ]
  %bf.lshr33.i = lshr i32 %bf.load17, 16
  %bf.clear34.i = and i32 %bf.lshr33.i, 255
  %arrayidx39.i = getelementptr inbounds %struct.rtx_def* %.lcssa679, i64 0, i32 1, i64 1
  %rtuint.i = bitcast %union.rtunion_def* %arrayidx39.i to i32*
  %11 = load i32* %rtuint.i, align 4, !tbaa !17
  call fastcc void @put_reg_into_stack(%struct.function* null, %struct.rtx_def* %3, %union.tree_node* %type.0.i, i32 %bf.clear34.i, i32 %bf.clear34.i, i32 %volatile_p.0.i, i32 %11, i32 %used_p.0.i, %struct.hash_table* %ht) #5
  br label %return

if.end22:                                         ; preds = %if.then13
  %arrayidx27 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 1, i64 0
  %rtx28 = bitcast %union.rtunion_def* %arrayidx27 to %struct.rtx_def**
  %12 = load %struct.rtx_def** %rtx28, align 8, !tbaa !9
  %call29 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %12) #5
  %call30 = call i32 @validate_change(%struct.rtx_def* %insn, %struct.rtx_def** %loc, %struct.rtx_def* %call29, i32 0) #5
  %tobool31 = icmp eq i32 %call30, 0
  br i1 %tobool31, label %lor.lhs.false, label %return

lor.lhs.false:                                    ; preds = %if.end22
  %call32 = call i32 @validate_replace_rtx(%struct.rtx_def* %.lcssa679, %struct.rtx_def* %call29, %struct.rtx_def* %insn) #5
  %tobool33 = icmp eq i32 %call32, 0
  br i1 %tobool33, label %if.end35, label %return

if.end35:                                         ; preds = %lor.lhs.false
  call void @start_sequence() #5
  %call36 = call %struct.rtx_def* @force_operand(%struct.rtx_def* %call29, %struct.rtx_def* null) #5
  %call37 = call i32 @validate_change(%struct.rtx_def* %insn, %struct.rtx_def** %loc, %struct.rtx_def* %call36, i32 0) #5
  %tobool38 = icmp eq i32 %call37, 0
  br i1 %tobool38, label %land.lhs.true, label %if.end42

land.lhs.true:                                    ; preds = %if.end35
  %call39 = call i32 @validate_replace_rtx(%struct.rtx_def* %.lcssa679, %struct.rtx_def* %call36, %struct.rtx_def* %insn) #5
  %tobool40 = icmp eq i32 %call39, 0
  br i1 %tobool40, label %if.then41, label %if.end42

if.then41:                                        ; preds = %land.lhs.true
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8]* @.str, i64 0, i64 0), i32 3088, i8* getelementptr inbounds ([18 x i8]* @__FUNCTION__.purge_addressof_1, i64 0, i64 0)) #8
  unreachable

if.end42:                                         ; preds = %land.lhs.true, %if.end35
  %call43 = call %struct.rtx_def* @gen_sequence() #5
  call void @end_sequence() #5
  %call44 = call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %call43, %struct.rtx_def* %insn) #5
  br label %return

land.lhs.true48:                                  ; preds = %if.end
  %arrayidx50 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 0
  %rtx51 = bitcast %union.rtunion_def* %arrayidx50 to %struct.rtx_def**
  %13 = load %struct.rtx_def** %rtx51, align 8, !tbaa !9
  %14 = getelementptr inbounds %struct.rtx_def* %13, i64 0, i32 0
  %bf.load52 = load i32* %14, align 8
  %bf.clear53 = and i32 %bf.load52, 65535
  %cmp54 = icmp eq i32 %bf.clear53, 70
  br i1 %cmp54, label %if.then58, label %give_up

if.then58:                                        ; preds = %land.lhs.true48
  %arrayidx64 = getelementptr inbounds %struct.rtx_def* %13, i64 0, i32 1, i64 0
  %rtx65 = bitcast %union.rtunion_def* %arrayidx64 to %struct.rtx_def**
  %15 = load %struct.rtx_def** %rtx65, align 8, !tbaa !9
  %16 = getelementptr inbounds %struct.rtx_def* %15, i64 0, i32 0
  %bf.load66 = load i32* %16, align 8
  %bf.clear67 = and i32 %bf.load66, 65535
  switch i32 %bf.clear67, label %if.else351 [
    i32 66, label %if.then70
    i32 61, label %land.lhs.true79
  ]

if.then70:                                        ; preds = %if.then58
  %phitmp728 = lshr i32 %bf.load, 16
  %phitmp729 = and i32 %phitmp728, 255
  %call73 = call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %15, i32 %phitmp729, i64 0, i32 0, i32 1) #5
  br label %give_up

land.lhs.true79:                                  ; preds = %if.then58
  %bf.clear82 = and i32 %bf.load, 134217728
  %tobool83 = icmp ne i32 %bf.clear82, 0
  %bf.clear87 = and i32 %bf.load, 16711680
  %cmp88 = icmp eq i32 %bf.clear87, 3342336
  %or.cond603 = or i1 %tobool83, %cmp88
  br i1 %or.cond603, label %give_up, label %land.lhs.true96

land.lhs.true96:                                  ; preds = %land.lhs.true79
  %bf.lshr98 = lshr i32 %bf.load, 16
  %bf.clear99 = and i32 %bf.lshr98, 255
  %bf.lshr101 = lshr i32 %bf.load66, 16
  %bf.clear102 = and i32 %bf.lshr101, 255
  %cmp103 = icmp eq i32 %bf.clear99, %bf.clear102
  br i1 %cmp103, label %if.else351, label %if.then105

if.then105:                                       ; preds = %land.lhs.true96
  %tobool106 = icmp eq %struct.rtx_def* %insn, null
  br i1 %tobool106, label %for.cond.preheader, label %if.end238

for.cond.preheader:                               ; preds = %if.then105
  %tem.0725 = load %struct.rtx_def** @purge_bitfield_addressof_replacements, align 8
  %cmp108726 = icmp eq %struct.rtx_def* %tem.0725, null
  br i1 %cmp108726, label %for.cond129.preheader, label %for.body

for.cond129.preheader:                            ; preds = %for.inc, %for.cond.preheader
  %tem.1722 = load %struct.rtx_def** @purge_addressof_replacements, align 8
  %cmp130723 = icmp eq %struct.rtx_def* %tem.1722, null
  br i1 %cmp130723, label %return, label %for.body132

for.body:                                         ; preds = %for.cond.preheader, %for.inc
  %tem.0727 = phi %struct.rtx_def* [ %tem.0, %for.inc ], [ %tem.0725, %for.cond.preheader ]
  %fld110 = getelementptr inbounds %struct.rtx_def* %tem.0727, i64 0, i32 1
  %rtx112 = bitcast [1 x %union.rtunion_def]* %fld110 to %struct.rtx_def**
  %17 = load %struct.rtx_def** %rtx112, align 8, !tbaa !9
  %call113 = call i32 @rtx_equal_p(%struct.rtx_def* %1, %struct.rtx_def* %17) #5
  %tobool114 = icmp eq i32 %call113, 0
  %arrayidx117 = getelementptr inbounds %struct.rtx_def* %tem.0727, i64 0, i32 1, i64 1
  %rtx118 = bitcast %union.rtunion_def* %arrayidx117 to %struct.rtx_def**
  %18 = load %struct.rtx_def** %rtx118, align 8, !tbaa !9
  br i1 %tobool114, label %for.inc, label %if.then115

if.then115:                                       ; preds = %for.body
  %arrayidx120 = getelementptr inbounds %struct.rtx_def* %18, i64 0, i32 1, i64 0
  %rtx121 = bitcast %union.rtunion_def* %arrayidx120 to %struct.rtx_def**
  %19 = load %struct.rtx_def** %rtx121, align 8, !tbaa !9
  store %struct.rtx_def* %19, %struct.rtx_def** %loc, align 8, !tbaa !9
  br label %return

for.inc:                                          ; preds = %for.body
  %arrayidx127 = getelementptr inbounds %struct.rtx_def* %18, i64 0, i32 1, i64 1
  %rtx128 = bitcast %union.rtunion_def* %arrayidx127 to %struct.rtx_def**
  %tem.0 = load %struct.rtx_def** %rtx128, align 8
  %cmp108 = icmp eq %struct.rtx_def* %tem.0, null
  br i1 %cmp108, label %for.cond129.preheader, label %for.body

for.body132:                                      ; preds = %for.cond129.preheader, %for.inc230
  %tem.1724 = phi %struct.rtx_def* [ %tem.1, %for.inc230 ], [ %tem.1722, %for.cond129.preheader ]
  %20 = load %struct.rtx_def** %rtx51, align 8, !tbaa !9
  %fld136 = getelementptr inbounds %struct.rtx_def* %tem.1724, i64 0, i32 1
  %rtx138 = bitcast [1 x %union.rtunion_def]* %fld136 to %struct.rtx_def**
  %21 = load %struct.rtx_def** %rtx138, align 8, !tbaa !9
  %call139 = call i32 @rtx_equal_p(%struct.rtx_def* %20, %struct.rtx_def* %21) #5
  %tobool140 = icmp eq i32 %call139, 0
  %arrayidx143 = getelementptr inbounds %struct.rtx_def* %tem.1724, i64 0, i32 1, i64 1
  %rtx144 = bitcast %union.rtunion_def* %arrayidx143 to %struct.rtx_def**
  %22 = load %struct.rtx_def** %rtx144, align 8, !tbaa !9
  br i1 %tobool140, label %for.inc230, label %if.then141

if.then141:                                       ; preds = %for.body132
  %arrayidx146 = getelementptr inbounds %struct.rtx_def* %22, i64 0, i32 1, i64 0
  %rtx147 = bitcast %union.rtunion_def* %arrayidx146 to %struct.rtx_def**
  %23 = load %struct.rtx_def** %rtx147, align 8, !tbaa !9
  %bf.load148 = load i32* %2, align 8
  %24 = getelementptr inbounds %struct.rtx_def* %23, i64 0, i32 0
  %bf.load151 = load i32* %24, align 8
  %bf.lshr149602 = xor i32 %bf.load151, %bf.load148
  %25 = and i32 %bf.lshr149602, 16711680
  %cmp154 = icmp eq i32 %25, 0
  br i1 %cmp154, label %if.then178, label %lor.lhs.false156

lor.lhs.false156:                                 ; preds = %if.then141
  %bf.clear164 = and i32 %bf.load151, 65535
  switch i32 %bf.clear164, label %if.then178 [
    i32 63, label %land.lhs.true184
    i32 61, label %if.end193
  ]

if.then178:                                       ; preds = %lor.lhs.false156, %if.then141
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8]* @.str, i64 0, i64 0), i32 3136, i8* getelementptr inbounds ([18 x i8]* @__FUNCTION__.purge_addressof_1, i64 0, i64 0)) #8
  unreachable

land.lhs.true184:                                 ; preds = %lor.lhs.false156
  %arrayidx186 = getelementptr inbounds %struct.rtx_def* %23, i64 0, i32 1, i64 1
  %rtuint = bitcast %union.rtunion_def* %arrayidx186 to i32*
  %26 = load i32* %rtuint, align 4, !tbaa !17
  %cmp187 = icmp eq i32 %26, 0
  br i1 %cmp187, label %if.then189, label %if.end193

if.then189:                                       ; preds = %land.lhs.true184
  %arrayidx191 = getelementptr inbounds %struct.rtx_def* %23, i64 0, i32 1, i64 0
  %rtx192 = bitcast %union.rtunion_def* %arrayidx191 to %struct.rtx_def**
  %27 = load %struct.rtx_def** %rtx192, align 8, !tbaa !9
  br label %if.end193

if.end193:                                        ; preds = %lor.lhs.false156, %if.then189, %land.lhs.true184
  %z.0 = phi %struct.rtx_def* [ %27, %if.then189 ], [ %23, %land.lhs.true184 ], [ %23, %lor.lhs.false156 ]
  %bf.lshr195 = lshr i32 %bf.load148, 16
  %bf.clear196 = and i32 %bf.lshr195, 255
  %idxprom595 = zext i32 %bf.clear196 to i64
  %arrayidx197 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom595
  %28 = load i8* %arrayidx197, align 1, !tbaa !22
  %conv198 = zext i8 %28 to i32
  %29 = load i32* @target_flags, align 4, !tbaa !17
  %and199 = lshr i32 %29, 23
  %30 = and i32 %and199, 4
  %31 = add i32 %30, 4
  %cmp201 = icmp ugt i32 %conv198, %31
  br i1 %cmp201, label %land.lhs.true203, label %if.else223

land.lhs.true203:                                 ; preds = %if.end193
  %32 = getelementptr inbounds %struct.rtx_def* %z.0, i64 0, i32 0
  %bf.load210 = load i32* %32, align 8
  %bf.lshr211 = lshr i32 %bf.load210, 16
  %bf.clear212 = and i32 %bf.lshr211, 255
  %idxprom213596 = zext i32 %bf.clear212 to i64
  %arrayidx214 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom213596
  %33 = load i8* %arrayidx214, align 1, !tbaa !22
  %cmp216 = icmp ugt i8 %28, %33
  br i1 %cmp216, label %if.then218, label %if.else223

if.then218:                                       ; preds = %land.lhs.true203
  %call222 = call %struct.rtx_def* @gen_rtx_SUBREG(i32 %bf.clear196, %struct.rtx_def* %z.0, i32 0) #5
  br label %if.end228

if.else223:                                       ; preds = %land.lhs.true203, %if.end193
  %call227 = call %struct.rtx_def* @gen_lowpart(i32 %bf.clear196, %struct.rtx_def* %z.0) #5
  br label %if.end228

if.end228:                                        ; preds = %if.else223, %if.then218
  %z.1 = phi %struct.rtx_def* [ %call222, %if.then218 ], [ %call227, %if.else223 ]
  store %struct.rtx_def* %z.1, %struct.rtx_def** %loc, align 8, !tbaa !9
  br label %return

for.inc230:                                       ; preds = %for.body132
  %arrayidx235 = getelementptr inbounds %struct.rtx_def* %22, i64 0, i32 1, i64 1
  %rtx236 = bitcast %union.rtunion_def* %arrayidx235 to %struct.rtx_def**
  %tem.1 = load %struct.rtx_def** %rtx236, align 8
  %cmp130 = icmp eq %struct.rtx_def* %tem.1, null
  br i1 %cmp130, label %return, label %for.body132

if.end238:                                        ; preds = %if.then105
  %phitmp = zext i32 %bf.clear99 to i64
  %arrayidx243 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %phitmp
  %34 = load i16* %arrayidx243, align 2, !tbaa !73
  %idxprom248598 = zext i32 %bf.clear102 to i64
  %arrayidx249 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom248598
  %35 = load i16* %arrayidx249, align 2, !tbaa !73
  %cmp251 = icmp ugt i16 %34, %35
  br i1 %cmp251, label %give_up, label %land.lhs.true253

land.lhs.true253:                                 ; preds = %if.end238
  %call257 = call i32 @int_mode_for_mode(i32 %bf.clear102) #5
  %cmp258 = icmp eq i32 %call257, 51
  br i1 %cmp258, label %give_up, label %if.then260

if.then260:                                       ; preds = %land.lhs.true253
  %tobool261 = icmp eq i32 %store, 0
  %arrayidx264 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 1
  %rtx265 = bitcast %union.rtunion_def* %arrayidx264 to %struct.rtx_def**
  %36 = load %struct.rtx_def** %rtx265, align 8, !tbaa !9
  call void @start_sequence() #5
  br i1 %tobool261, label %if.else313, label %if.then262

if.then262:                                       ; preds = %if.then260
  %bf.load266 = load i32* %2, align 8
  %bf.lshr267 = lshr i32 %bf.load266, 16
  %bf.clear268 = and i32 %bf.lshr267, 255
  %call269 = call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear268) #5
  %call270 = call i32 @validate_change(%struct.rtx_def* %insn, %struct.rtx_def** %loc, %struct.rtx_def* %call269, i32 0) #5
  %tobool271 = icmp eq i32 %call270, 0
  br i1 %tobool271, label %if.then272, label %if.end273

if.then272:                                       ; preds = %if.then262
  call void @end_sequence() #5
  br label %give_up

if.end273:                                        ; preds = %if.then262
  %call274 = call %struct.rtx_def* @gen_sequence() #5
  call void @end_sequence() #5
  %call275 = call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %call274, %struct.rtx_def* %insn) #5
  %tobool276 = icmp eq %struct.rtx_def* %36, null
  br i1 %tobool276, label %cond.false, label %cond.true

cond.true:                                        ; preds = %if.end273
  %arrayidx278 = getelementptr inbounds %struct.rtx_def* %36, i64 0, i32 1, i64 2
  %rtx279 = bitcast %union.rtunion_def* %arrayidx278 to %struct.rtx_def**
  %37 = load %struct.rtx_def** %rtx279, align 8, !tbaa !9
  br label %cond.end

cond.false:                                       ; preds = %if.end273
  %call280 = call %struct.rtx_def* @get_insns() #5
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond281 = phi %struct.rtx_def* [ %37, %cond.true ], [ %call280, %cond.false ]
  %38 = bitcast %struct.rtx_def** %insn.i638 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %38) #5
  %39 = bitcast %struct.insns_for_mem_walk_info* %ifmwi.i639 to i8*
  call void @llvm.lifetime.start(i64 24, i8* %39) #5
  %ht1.i640 = getelementptr inbounds %struct.insns_for_mem_walk_info* %ifmwi.i639, i64 0, i32 0
  store %struct.hash_table* %ht, %struct.hash_table** %ht1.i640, align 8, !tbaa !65
  %pass.i641 = getelementptr inbounds %struct.insns_for_mem_walk_info* %ifmwi.i639, i64 0, i32 2
  store i32 0, i32* %pass.i641, align 8, !tbaa !67
  %cmp415.i642 = icmp eq %struct.rtx_def* %cond281, %insn
  %insn8.i643 = getelementptr inbounds %struct.insns_for_mem_walk_info* %ifmwi.i639, i64 0, i32 1
  br i1 %cmp415.i642, label %for.inc10.us.i646.preheader, label %for.body5.lr.ph.i647

for.inc10.us.i646.preheader:                      ; preds = %cond.end
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.i638, align 8, !tbaa !9
  store i32 2, i32* %pass.i641, align 8, !tbaa !67
  br label %compute_insns_for_mem.exit666

for.body5.lr.ph.i647:                             ; preds = %cond.end, %for.inc10.i665
  store %struct.rtx_def* %cond281, %struct.rtx_def** %insn.i638, align 8, !tbaa !9
  br label %for.body5.i654

for.body5.i654:                                   ; preds = %for.inc.i661, %for.body5.lr.ph.i647
  %storemerge16.i648 = phi %struct.rtx_def* [ %cond281, %for.body5.lr.ph.i647 ], [ %43, %for.inc.i661 ]
  %40 = getelementptr inbounds %struct.rtx_def* %storemerge16.i648, i64 0, i32 0
  %bf.load.i649 = load i32* %40, align 8
  %bf.clear.i650 = and i32 %bf.load.i649, 65535
  %idxprom14.i651 = zext i32 %bf.clear.i650 to i64
  %arrayidx.i652 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom14.i651
  %41 = load i8* %arrayidx.i652, align 1, !tbaa !22
  %cmp6.i653 = icmp eq i8 %41, 105
  br i1 %cmp6.i653, label %if.then.i657, label %for.inc.i661

if.then.i657:                                     ; preds = %for.body5.i654
  store %struct.rtx_def* %storemerge16.i648, %struct.rtx_def** %insn8.i643, align 8, !tbaa !68
  %call.i655 = call i32 @for_each_rtx(%struct.rtx_def** %insn.i638, i32 (%struct.rtx_def**, i8*)* @insns_for_mem_walk, i8* %39) #5
  %.pre17.i656 = load %struct.rtx_def** %insn.i638, align 8, !tbaa !9
  br label %for.inc.i661

for.inc.i661:                                     ; preds = %if.then.i657, %for.body5.i654
  %42 = phi %struct.rtx_def* [ %storemerge16.i648, %for.body5.i654 ], [ %.pre17.i656, %if.then.i657 ]
  %arrayidx9.i658 = getelementptr inbounds %struct.rtx_def* %42, i64 0, i32 1, i64 2
  %rtx.i659 = bitcast %union.rtunion_def* %arrayidx9.i658 to %struct.rtx_def**
  %43 = load %struct.rtx_def** %rtx.i659, align 8, !tbaa !9
  store %struct.rtx_def* %43, %struct.rtx_def** %insn.i638, align 8, !tbaa !9
  %cmp4.i660 = icmp eq %struct.rtx_def* %43, %insn
  br i1 %cmp4.i660, label %for.inc10.i665, label %for.body5.i654

for.inc10.i665:                                   ; preds = %for.inc.i661
  %.pre.i662 = load i32* %pass.i641, align 8, !tbaa !67
  %inc.i663 = add nsw i32 %.pre.i662, 1
  store i32 %inc.i663, i32* %pass.i641, align 8, !tbaa !67
  %cmp.i664 = icmp slt i32 %inc.i663, 2
  br i1 %cmp.i664, label %for.body5.lr.ph.i647, label %compute_insns_for_mem.exit666

compute_insns_for_mem.exit666:                    ; preds = %for.inc10.i665, %for.inc10.us.i646.preheader
  call void @llvm.lifetime.end(i64 8, i8* %38) #5
  call void @llvm.lifetime.end(i64 24, i8* %39) #5
  call void @start_sequence() #5
  %conv282 = zext i16 %34 to i64
  %bf.load283 = load i32* %2, align 8
  %bf.lshr284 = lshr i32 %bf.load283, 16
  %bf.clear285 = and i32 %bf.lshr284, 255
  %bf.load286 = load i32* %16, align 8
  %bf.lshr287 = lshr i32 %bf.load286, 16
  %bf.clear288 = and i32 %bf.lshr287, 255
  %idxprom289600 = zext i32 %bf.clear288 to i64
  %arrayidx290 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom289600
  %44 = load i8* %arrayidx290, align 1, !tbaa !22
  %conv291 = zext i8 %44 to i64
  %call292 = call %struct.rtx_def* @store_bit_field(%struct.rtx_def* %15, i64 %conv282, i64 0, i32 %bf.clear285, %struct.rtx_def* %call269, i64 %conv291) #5
  %call293 = call %struct.rtx_def* @get_insns() #5
  call void @unshare_all_rtl_again(%struct.rtx_def* %call293) #5
  %call294 = call %struct.rtx_def* @gen_sequence() #5
  call void @end_sequence() #5
  %call295 = call %struct.rtx_def* @emit_insn_after(%struct.rtx_def* %call294, %struct.rtx_def* %insn) #5
  %arrayidx297 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 2
  %rtx298 = bitcast %union.rtunion_def* %arrayidx297 to %struct.rtx_def**
  %45 = load %struct.rtx_def** %rtx298, align 8, !tbaa !9
  %tobool299 = icmp eq %struct.rtx_def* %45, null
  br i1 %tobool299, label %if.end347, label %if.then300

if.then300:                                       ; preds = %compute_insns_for_mem.exit666
  %tobool304 = icmp eq %struct.rtx_def* %call295, null
  br i1 %tobool304, label %cond.end310, label %cond.true305

cond.true305:                                     ; preds = %if.then300
  %arrayidx307 = getelementptr inbounds %struct.rtx_def* %call295, i64 0, i32 1, i64 2
  %rtx308 = bitcast %union.rtunion_def* %arrayidx307 to %struct.rtx_def**
  %46 = load %struct.rtx_def** %rtx308, align 8, !tbaa !9
  br label %cond.end310

cond.end310:                                      ; preds = %if.then300, %cond.true305
  %cond311 = phi %struct.rtx_def* [ %46, %cond.true305 ], [ null, %if.then300 ]
  %47 = bitcast %struct.rtx_def** %insn.i604 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %47) #5
  %48 = bitcast %struct.insns_for_mem_walk_info* %ifmwi.i605 to i8*
  call void @llvm.lifetime.start(i64 24, i8* %48) #5
  %ht1.i606 = getelementptr inbounds %struct.insns_for_mem_walk_info* %ifmwi.i605, i64 0, i32 0
  store %struct.hash_table* %ht, %struct.hash_table** %ht1.i606, align 8, !tbaa !65
  %pass.i607 = getelementptr inbounds %struct.insns_for_mem_walk_info* %ifmwi.i605, i64 0, i32 2
  store i32 0, i32* %pass.i607, align 8, !tbaa !67
  %cmp415.i608 = icmp eq %struct.rtx_def* %45, %cond311
  %insn8.i609 = getelementptr inbounds %struct.insns_for_mem_walk_info* %ifmwi.i605, i64 0, i32 1
  br i1 %cmp415.i608, label %for.inc10.us.i612.preheader, label %for.body5.lr.ph.i613

for.inc10.us.i612.preheader:                      ; preds = %cond.end310
  store %struct.rtx_def* %45, %struct.rtx_def** %insn.i604, align 8, !tbaa !9
  store i32 2, i32* %pass.i607, align 8, !tbaa !67
  br label %if.end347

for.body5.lr.ph.i613:                             ; preds = %cond.end310, %for.inc10.i631
  store %struct.rtx_def* %45, %struct.rtx_def** %insn.i604, align 8, !tbaa !9
  br label %for.body5.i620

for.body5.i620:                                   ; preds = %for.inc.i627, %for.body5.lr.ph.i613
  %storemerge16.i614 = phi %struct.rtx_def* [ %45, %for.body5.lr.ph.i613 ], [ %52, %for.inc.i627 ]
  %49 = getelementptr inbounds %struct.rtx_def* %storemerge16.i614, i64 0, i32 0
  %bf.load.i615 = load i32* %49, align 8
  %bf.clear.i616 = and i32 %bf.load.i615, 65535
  %idxprom14.i617 = zext i32 %bf.clear.i616 to i64
  %arrayidx.i618 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom14.i617
  %50 = load i8* %arrayidx.i618, align 1, !tbaa !22
  %cmp6.i619 = icmp eq i8 %50, 105
  br i1 %cmp6.i619, label %if.then.i623, label %for.inc.i627

if.then.i623:                                     ; preds = %for.body5.i620
  store %struct.rtx_def* %storemerge16.i614, %struct.rtx_def** %insn8.i609, align 8, !tbaa !68
  %call.i621 = call i32 @for_each_rtx(%struct.rtx_def** %insn.i604, i32 (%struct.rtx_def**, i8*)* @insns_for_mem_walk, i8* %48) #5
  %.pre17.i622 = load %struct.rtx_def** %insn.i604, align 8, !tbaa !9
  br label %for.inc.i627

for.inc.i627:                                     ; preds = %if.then.i623, %for.body5.i620
  %51 = phi %struct.rtx_def* [ %storemerge16.i614, %for.body5.i620 ], [ %.pre17.i622, %if.then.i623 ]
  %arrayidx9.i624 = getelementptr inbounds %struct.rtx_def* %51, i64 0, i32 1, i64 2
  %rtx.i625 = bitcast %union.rtunion_def* %arrayidx9.i624 to %struct.rtx_def**
  %52 = load %struct.rtx_def** %rtx.i625, align 8, !tbaa !9
  store %struct.rtx_def* %52, %struct.rtx_def** %insn.i604, align 8, !tbaa !9
  %cmp4.i626 = icmp eq %struct.rtx_def* %52, %cond311
  br i1 %cmp4.i626, label %for.inc10.i631, label %for.body5.i620

for.inc10.i631:                                   ; preds = %for.inc.i627
  %.pre.i628 = load i32* %pass.i607, align 8, !tbaa !67
  %inc.i629 = add nsw i32 %.pre.i628, 1
  store i32 %inc.i629, i32* %pass.i607, align 8, !tbaa !67
  %cmp.i630 = icmp slt i32 %inc.i629, 2
  br i1 %cmp.i630, label %for.body5.lr.ph.i613, label %if.end347

if.else313:                                       ; preds = %if.then260
  %conv318 = zext i16 %34 to i64
  %bf.load319 = load i32* %2, align 8
  %bf.lshr320 = lshr i32 %bf.load319, 16
  %bf.clear321 = and i32 %bf.lshr320, 255
  %bf.load325 = load i32* %16, align 8
  %bf.lshr326 = lshr i32 %bf.load325, 16
  %bf.clear327 = and i32 %bf.lshr326, 255
  %idxprom328599 = zext i32 %bf.clear327 to i64
  %arrayidx329 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom328599
  %53 = load i8* %arrayidx329, align 1, !tbaa !22
  %conv330 = zext i8 %53 to i64
  %call331 = call %struct.rtx_def* @extract_bit_field(%struct.rtx_def* %15, i64 %conv318, i64 0, i32 1, %struct.rtx_def* null, i32 %bf.clear321, i32 %bf.clear321, i64 %conv330) #5
  %call332 = call i32 @validate_change(%struct.rtx_def* %insn, %struct.rtx_def** %loc, %struct.rtx_def* %call331, i32 0) #5
  %tobool333 = icmp eq i32 %call332, 0
  br i1 %tobool333, label %if.then334, label %if.end335

if.then334:                                       ; preds = %if.else313
  call void @end_sequence() #5
  br label %give_up

if.end335:                                        ; preds = %if.else313
  %call336 = call %struct.rtx_def* @gen_sequence() #5
  call void @end_sequence() #5
  %call337 = call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %call336, %struct.rtx_def* %insn) #5
  %tobool338 = icmp eq %struct.rtx_def* %36, null
  br i1 %tobool338, label %cond.false343, label %cond.true339

cond.true339:                                     ; preds = %if.end335
  %arrayidx341 = getelementptr inbounds %struct.rtx_def* %36, i64 0, i32 1, i64 2
  %rtx342 = bitcast %union.rtunion_def* %arrayidx341 to %struct.rtx_def**
  %54 = load %struct.rtx_def** %rtx342, align 8, !tbaa !9
  br label %cond.end345

cond.false343:                                    ; preds = %if.end335
  %call344 = call %struct.rtx_def* @get_insns() #5
  br label %cond.end345

cond.end345:                                      ; preds = %cond.false343, %cond.true339
  %cond346 = phi %struct.rtx_def* [ %54, %cond.true339 ], [ %call344, %cond.false343 ]
  %55 = bitcast %struct.rtx_def** %insn.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %55) #5
  %56 = bitcast %struct.insns_for_mem_walk_info* %ifmwi.i to i8*
  call void @llvm.lifetime.start(i64 24, i8* %56) #5
  %ht1.i = getelementptr inbounds %struct.insns_for_mem_walk_info* %ifmwi.i, i64 0, i32 0
  store %struct.hash_table* %ht, %struct.hash_table** %ht1.i, align 8, !tbaa !65
  %pass.i = getelementptr inbounds %struct.insns_for_mem_walk_info* %ifmwi.i, i64 0, i32 2
  store i32 0, i32* %pass.i, align 8, !tbaa !67
  %cmp415.i = icmp eq %struct.rtx_def* %cond346, %insn
  %insn8.i = getelementptr inbounds %struct.insns_for_mem_walk_info* %ifmwi.i, i64 0, i32 1
  br i1 %cmp415.i, label %for.inc10.us.i.preheader, label %for.body5.lr.ph.i

for.inc10.us.i.preheader:                         ; preds = %cond.end345
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.i, align 8, !tbaa !9
  store i32 2, i32* %pass.i, align 8, !tbaa !67
  br label %if.end347

for.body5.lr.ph.i:                                ; preds = %cond.end345, %for.inc10.i
  store %struct.rtx_def* %cond346, %struct.rtx_def** %insn.i, align 8, !tbaa !9
  br label %for.body5.i

for.body5.i:                                      ; preds = %for.inc.i, %for.body5.lr.ph.i
  %storemerge16.i = phi %struct.rtx_def* [ %cond346, %for.body5.lr.ph.i ], [ %60, %for.inc.i ]
  %57 = getelementptr inbounds %struct.rtx_def* %storemerge16.i, i64 0, i32 0
  %bf.load.i = load i32* %57, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  %idxprom14.i = zext i32 %bf.clear.i to i64
  %arrayidx.i = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom14.i
  %58 = load i8* %arrayidx.i, align 1, !tbaa !22
  %cmp6.i = icmp eq i8 %58, 105
  br i1 %cmp6.i, label %if.then.i, label %for.inc.i

if.then.i:                                        ; preds = %for.body5.i
  store %struct.rtx_def* %storemerge16.i, %struct.rtx_def** %insn8.i, align 8, !tbaa !68
  %call.i = call i32 @for_each_rtx(%struct.rtx_def** %insn.i, i32 (%struct.rtx_def**, i8*)* @insns_for_mem_walk, i8* %56) #5
  %.pre17.i = load %struct.rtx_def** %insn.i, align 8, !tbaa !9
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then.i, %for.body5.i
  %59 = phi %struct.rtx_def* [ %storemerge16.i, %for.body5.i ], [ %.pre17.i, %if.then.i ]
  %arrayidx9.i = getelementptr inbounds %struct.rtx_def* %59, i64 0, i32 1, i64 2
  %rtx.i = bitcast %union.rtunion_def* %arrayidx9.i to %struct.rtx_def**
  %60 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !9
  store %struct.rtx_def* %60, %struct.rtx_def** %insn.i, align 8, !tbaa !9
  %cmp4.i = icmp eq %struct.rtx_def* %60, %insn
  br i1 %cmp4.i, label %for.inc10.i, label %for.body5.i

for.inc10.i:                                      ; preds = %for.inc.i
  %.pre.i = load i32* %pass.i, align 8, !tbaa !67
  %inc.i = add nsw i32 %.pre.i, 1
  store i32 %inc.i, i32* %pass.i, align 8, !tbaa !67
  %cmp.i = icmp slt i32 %inc.i, 2
  br i1 %cmp.i, label %for.body5.lr.ph.i, label %if.end347

if.end347:                                        ; preds = %for.inc10.i631, %for.inc10.i, %for.inc10.us.i612.preheader, %for.inc10.us.i.preheader, %compute_insns_for_mem.exit666
  %val.0 = phi %struct.rtx_def* [ %call269, %compute_insns_for_mem.exit666 ], [ %call331, %for.inc10.us.i.preheader ], [ %call269, %for.inc10.us.i612.preheader ], [ %call331, %for.inc10.i ], [ %call269, %for.inc10.i631 ]
  %61 = load %struct.rtx_def** @purge_bitfield_addressof_replacements, align 8, !tbaa !9
  %call348 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 0, %struct.rtx_def* %val.0, %struct.rtx_def* %61) #5
  %call349 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 0, %struct.rtx_def* %1, %struct.rtx_def* %call348) #5
  store %struct.rtx_def* %call349, %struct.rtx_def** @purge_bitfield_addressof_replacements, align 8, !tbaa !9
  br label %return

if.else351:                                       ; preds = %if.then58, %land.lhs.true96
  %call352 = call i32 @validate_change(%struct.rtx_def* %insn, %struct.rtx_def** %loc, %struct.rtx_def* %15, i32 0) #5
  %tobool353 = icmp eq i32 %call352, 0
  br i1 %tobool353, label %give_up, label %if.then354

if.then354:                                       ; preds = %if.else351
  %bf.load355 = load i32* %16, align 8
  %bf.clear356 = and i32 %bf.load355, 65535
  switch i32 %bf.clear356, label %restart [
    i32 61, label %for.cond366.preheader
    i32 63, label %for.cond366.preheader
  ]

for.cond366.preheader:                            ; preds = %if.then354, %if.then354
  %tem365.0718 = load %struct.rtx_def** @purge_addressof_replacements, align 8
  %cmp367719 = icmp eq %struct.rtx_def* %tem365.0718, null
  %62 = load %struct.rtx_def** %rtx51, align 8, !tbaa !9
  br i1 %cmp367719, label %for.end393, label %for.body369

for.body369:                                      ; preds = %for.cond366.preheader, %for.inc386
  %63 = phi %struct.rtx_def* [ %67, %for.inc386 ], [ %62, %for.cond366.preheader ]
  %tem365.0720 = phi %struct.rtx_def* [ %tem365.0, %for.inc386 ], [ %tem365.0718, %for.cond366.preheader ]
  %fld373 = getelementptr inbounds %struct.rtx_def* %tem365.0720, i64 0, i32 1
  %rtx375 = bitcast [1 x %union.rtunion_def]* %fld373 to %struct.rtx_def**
  %64 = load %struct.rtx_def** %rtx375, align 8, !tbaa !9
  %call376 = call i32 @rtx_equal_p(%struct.rtx_def* %63, %struct.rtx_def* %64) #5
  %tobool377 = icmp eq i32 %call376, 0
  %arrayidx388 = getelementptr inbounds %struct.rtx_def* %tem365.0720, i64 0, i32 1, i64 1
  %rtx389 = bitcast %union.rtunion_def* %arrayidx388 to %struct.rtx_def**
  %65 = load %struct.rtx_def** %rtx389, align 8, !tbaa !9
  br i1 %tobool377, label %for.inc386, label %if.then378

if.then378:                                       ; preds = %for.body369
  %66 = getelementptr inbounds %struct.rtx_def* %65, i64 0, i32 1, i64 0, i32 0
  %.c = ptrtoint %struct.rtx_def* %15 to i64
  store i64 %.c, i64* %66, align 8, !tbaa !9
  br label %return

for.inc386:                                       ; preds = %for.body369
  %arrayidx391 = getelementptr inbounds %struct.rtx_def* %65, i64 0, i32 1, i64 1
  %rtx392 = bitcast %union.rtunion_def* %arrayidx391 to %struct.rtx_def**
  %tem365.0 = load %struct.rtx_def** %rtx392, align 8
  %cmp367 = icmp eq %struct.rtx_def* %tem365.0, null
  %67 = load %struct.rtx_def** %rtx51, align 8, !tbaa !9
  br i1 %cmp367, label %for.cond366.for.end393_crit_edge, label %for.body369

for.cond366.for.end393_crit_edge:                 ; preds = %for.inc386
  %.pre785 = load %struct.rtx_def** @purge_addressof_replacements, align 8, !tbaa !9
  br label %for.end393

for.end393:                                       ; preds = %for.cond366.for.end393_crit_edge, %for.cond366.preheader
  %68 = phi %struct.rtx_def* [ %.pre785, %for.cond366.for.end393_crit_edge ], [ null, %for.cond366.preheader ]
  %.lcssa = phi %struct.rtx_def* [ %67, %for.cond366.for.end393_crit_edge ], [ %62, %for.cond366.preheader ]
  %call397 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 0, %struct.rtx_def* %15, %struct.rtx_def* %68) #5
  %call398 = call %struct.rtx_def* (i32, i32, ...)* @gen_rtx(i32 3, i32 0, %struct.rtx_def* %.lcssa, %struct.rtx_def* %call397) #5
  store %struct.rtx_def* %call398, %struct.rtx_def** @purge_addressof_replacements, align 8, !tbaa !9
  br label %return

give_up:                                          ; preds = %land.lhs.true48, %land.lhs.true79, %if.end, %if.else351, %land.lhs.true48.us, %if.end.us, %land.lhs.true253, %if.end238, %if.then70, %if.then334, %if.then272
  %bf.clear699 = phi i32 [ 66, %land.lhs.true253 ], [ 66, %if.end238 ], [ 66, %if.then70 ], [ 66, %if.then334 ], [ 66, %if.then272 ], [ 66, %land.lhs.true48.us ], [ %bf.clear.us, %if.end.us ], [ 66, %land.lhs.true48 ], [ 66, %land.lhs.true79 ], [ %bf.clear, %if.end ], [ 66, %if.else351 ]
  %69 = phi %struct.rtx_def* [ %1, %land.lhs.true253 ], [ %1, %if.end238 ], [ %1, %if.then70 ], [ %1, %if.then334 ], [ %1, %if.then272 ], [ %.pre, %land.lhs.true48.us ], [ %.pre, %if.end.us ], [ %1, %if.else351 ], [ %1, %if.end ], [ %1, %land.lhs.true79 ], [ %1, %land.lhs.true48 ]
  %idxprom407594 = zext i32 %bf.clear699 to i64
  %arrayidx411 = getelementptr inbounds [153 x i8]* @rtx_length, i64 0, i64 %idxprom407594
  %70 = load i8* %arrayidx411, align 1, !tbaa !22
  %cmp413713 = icmp eq i8 %70, 0
  br i1 %cmp413713, label %for.end462, label %for.body415.lr.ph

for.body415.lr.ph:                                ; preds = %give_up
  %arrayidx408 = getelementptr inbounds [153 x i8*]* @rtx_format, i64 0, i64 %idxprom407594
  %71 = load i8** %arrayidx408, align 8, !tbaa !9
  %conv412 = zext i8 %70 to i32
  br label %for.body415

for.body415:                                      ; preds = %for.body415.lr.ph, %for.inc460
  %indvars.iv783 = phi i64 [ 0, %for.body415.lr.ph ], [ %indvars.iv.next784, %for.inc460 ]
  %fmt.0715 = phi i8* [ %71, %for.body415.lr.ph ], [ %incdec.ptr, %for.inc460 ]
  %result.0714 = phi i8 [ 1, %for.body415.lr.ph ], [ %result.2, %for.inc460 ]
  %72 = load i8* %fmt.0715, align 1, !tbaa !22
  switch i8 %72, label %for.inc460 [
    i8 101, label %if.then419
    i8 69, label %for.cond436.preheader
  ]

for.cond436.preheader:                            ; preds = %for.body415
  %arrayidx439 = getelementptr inbounds %struct.rtx_def* %69, i64 0, i32 1, i64 %indvars.iv783
  %rtvec = bitcast %union.rtunion_def* %arrayidx439 to %struct.rtvec_def**
  %73 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !9
  %num_elem708 = getelementptr inbounds %struct.rtvec_def* %73, i64 0, i32 0
  %74 = load i32* %num_elem708, align 4, !tbaa !75
  %cmp440709 = icmp sgt i32 %74, 0
  br i1 %cmp440709, label %for.body442, label %for.inc460

if.then419:                                       ; preds = %for.body415
  %arrayidx422 = getelementptr inbounds %struct.rtx_def* %69, i64 0, i32 1, i64 %indvars.iv783
  %rtx423 = bitcast %union.rtunion_def* %arrayidx422 to %struct.rtx_def**
  %call424 = call fastcc zeroext i1 @purge_addressof_1(%struct.rtx_def** %rtx423, %struct.rtx_def* %insn, i32 %force, i32 0, %struct.hash_table* %ht)
  %conv425 = zext i1 %call424 to i8
  %and428 = and i8 %conv425, %result.0714
  br label %for.inc460

for.body442:                                      ; preds = %for.cond436.preheader, %for.body442
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body442 ], [ 0, %for.cond436.preheader ]
  %75 = phi %struct.rtvec_def* [ %76, %for.body442 ], [ %73, %for.cond436.preheader ]
  %result.1710 = phi i8 [ %and453, %for.body442 ], [ %result.0714, %for.cond436.preheader ]
  %arrayidx448 = getelementptr inbounds %struct.rtvec_def* %75, i64 0, i32 1, i64 %indvars.iv
  %call449 = call fastcc zeroext i1 @purge_addressof_1(%struct.rtx_def** %arrayidx448, %struct.rtx_def* %insn, i32 %force, i32 0, %struct.hash_table* %ht)
  %conv450 = zext i1 %call449 to i8
  %and453 = and i8 %conv450, %result.1710
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %76 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !9
  %num_elem = getelementptr inbounds %struct.rtvec_def* %76, i64 0, i32 0
  %77 = load i32* %num_elem, align 4, !tbaa !75
  %78 = trunc i64 %indvars.iv.next to i32
  %cmp440 = icmp slt i32 %78, %77
  br i1 %cmp440, label %for.body442, label %for.inc460

for.inc460:                                       ; preds = %for.body442, %for.cond436.preheader, %for.body415, %if.then419
  %result.2 = phi i8 [ %and428, %if.then419 ], [ %result.0714, %for.body415 ], [ %result.0714, %for.cond436.preheader ], [ %and453, %for.body442 ]
  %indvars.iv.next784 = add nuw nsw i64 %indvars.iv783, 1
  %incdec.ptr = getelementptr inbounds i8* %fmt.0715, i64 1
  %79 = trunc i64 %indvars.iv.next784 to i32
  %cmp413 = icmp slt i32 %79, %conv412
  br i1 %cmp413, label %for.body415, label %for.end462

for.end462:                                       ; preds = %for.inc460, %give_up
  %result.0.lcssa = phi i8 [ 1, %give_up ], [ %result.2, %for.inc460 ]
  %80 = and i8 %result.0.lcssa, 1
  %tobool463 = icmp ne i8 %80, 0
  br label %return

return:                                           ; preds = %restart, %for.inc230, %restart.us, %for.cond129.preheader, %if.end22, %lor.lhs.false, %for.end462, %for.end393, %if.then378, %if.end347, %if.end228, %if.then115, %if.end42, %put_addressof_into_stack.exit, %if.then2
  %retval.0 = phi i1 [ %and601, %if.then2 ], [ true, %put_addressof_into_stack.exit ], [ true, %if.end42 ], [ %tobool463, %for.end462 ], [ true, %if.end347 ], [ true, %if.then115 ], [ true, %if.end228 ], [ true, %if.then378 ], [ true, %for.end393 ], [ true, %lor.lhs.false ], [ true, %if.end22 ], [ false, %for.cond129.preheader ], [ true, %restart.us ], [ false, %for.inc230 ], [ true, %restart ]
  ret i1 %retval.0
}

declare i32 @asm_noperands(%struct.rtx_def*) #2

declare i32 @for_each_rtx(%struct.rtx_def**, i32 (%struct.rtx_def**, i8*)*, i8*) #2

; Function Attrs: nounwind readonly uwtable
define internal i32 @is_addressof(%struct.rtx_def** nocapture readonly %rtl, i8* nocapture readnone %data) #4 {
entry:
  %0 = load %struct.rtx_def** %rtl, align 8, !tbaa !9
  %1 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 0
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 70
  %conv = zext i1 %cmp to i32
  ret i32 %conv
}

declare void @remove_note(%struct.rtx_def*, %struct.rtx_def*) #2

declare void @hash_table_free(%struct.hash_table*) #2

declare void @unshare_all_rtl_again(%struct.rtx_def*) #2

declare %struct.rtx_def* @get_insns() #2

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #5

; Function Attrs: nounwind uwtable
define void @purge_hard_subreg_sets(%struct.rtx_def* readonly %insn) #0 {
entry:
  %tobool99 = icmp eq %struct.rtx_def* %insn, null
  br i1 %tobool99, label %for.end43, label %for.body

for.body:                                         ; preds = %entry, %for.inc39
  %insn.addr.0100 = phi %struct.rtx_def* [ %29, %for.inc39 ], [ %insn, %entry ]
  %0 = getelementptr inbounds %struct.rtx_def* %insn.addr.0100, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %idxprom55 = zext i32 %bf.clear to i64
  %arrayidx = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom55
  %1 = load i8* %arrayidx, align 1, !tbaa !22
  %cmp = icmp eq i8 %1, 105
  br i1 %cmp, label %if.then, label %for.inc39

if.then:                                          ; preds = %for.body
  %arrayidx2 = getelementptr inbounds %struct.rtx_def* %insn.addr.0100, i64 0, i32 1, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx2 to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx, align 8, !tbaa !9
  %3 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 0
  %bf.load3 = load i32* %3, align 8
  %bf.clear4 = and i32 %bf.load3, 65535
  switch i32 %bf.clear4, label %for.inc39 [
    i32 47, label %sw.bb
    i32 39, label %sw.bb13
  ]

sw.bb:                                            ; preds = %if.then
  %arrayidx6 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 0
  %rtx7 = bitcast %union.rtunion_def* %arrayidx6 to %struct.rtx_def**
  %4 = load %struct.rtx_def** %rtx7, align 8, !tbaa !9
  %5 = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 0
  %bf.load8 = load i32* %5, align 8
  %bf.clear9 = and i32 %bf.load8, 65535
  %cmp10 = icmp eq i32 %bf.clear9, 63
  br i1 %cmp10, label %land.lhs.true.i, label %for.inc39

land.lhs.true.i:                                  ; preds = %sw.bb
  %bf.lshr.i = lshr i32 %bf.load8, 16
  %bf.clear.i = and i32 %bf.lshr.i, 255
  %fld6.i = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 1
  %rtx8.i = bitcast [1 x %union.rtunion_def]* %fld6.i to %struct.rtx_def**
  %6 = load %struct.rtx_def** %rtx8.i, align 8, !tbaa !9
  %7 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 0
  %bf.load9.i = load i32* %7, align 8
  %bf.clear10.i = and i32 %bf.load9.i, 65535
  %cmp11.i = icmp eq i32 %bf.clear10.i, 61
  br i1 %cmp11.i, label %land.lhs.true12.i, label %if.end.i

land.lhs.true12.i:                                ; preds = %land.lhs.true.i
  %arrayidx17.i = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1, i64 0
  %rtuint.i = bitcast %union.rtunion_def* %arrayidx17.i to i32*
  %8 = load i32* %rtuint.i, align 4, !tbaa !17
  %cmp18.i = icmp ult i32 %8, 53
  br i1 %cmp18.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %land.lhs.true12.i
  %bf.lshr29.i = lshr i32 %bf.load9.i, 16
  %bf.clear30.i = and i32 %bf.lshr29.i, 255
  %arrayidx32.i = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 1, i64 1
  %rtuint33.i = bitcast %union.rtunion_def* %arrayidx32.i to i32*
  %9 = load i32* %rtuint33.i, align 4, !tbaa !17
  %call.i = tail call i32 @subreg_regno_offset(i32 %8, i32 %bf.clear30.i, i32 %9, i32 %bf.clear.i) #5
  %10 = load %struct.rtx_def** %rtx8.i, align 8, !tbaa !9
  %.phi.trans.insert.i = getelementptr inbounds %struct.rtx_def* %10, i64 0, i32 0
  %bf.load40.pre.i = load i32* %.phi.trans.insert.i, align 8
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %land.lhs.true12.i, %land.lhs.true.i
  %bf.load40.i = phi i32 [ %bf.load40.pre.i, %if.then.i ], [ %bf.load8, %land.lhs.true12.i ], [ %bf.load8, %land.lhs.true.i ]
  %reg.0.i = phi %struct.rtx_def* [ %10, %if.then.i ], [ %4, %land.lhs.true12.i ], [ %4, %land.lhs.true.i ]
  %offset.0.i = phi i32 [ %call.i, %if.then.i ], [ 0, %land.lhs.true12.i ], [ 0, %land.lhs.true.i ]
  %bf.clear41.i = and i32 %bf.load40.i, 65535
  %cmp42.i = icmp eq i32 %bf.clear41.i, 61
  br i1 %cmp42.i, label %land.lhs.true43.i, label %for.inc39

land.lhs.true43.i:                                ; preds = %if.end.i
  %arrayidx45.i = getelementptr inbounds %struct.rtx_def* %reg.0.i, i64 0, i32 1, i64 0
  %rtuint46.i = bitcast %union.rtunion_def* %arrayidx45.i to i32*
  %11 = load i32* %rtuint46.i, align 4, !tbaa !17
  %cmp47.i = icmp ult i32 %11, 53
  br i1 %cmp47.i, label %if.then48.i, label %for.inc39

if.then48.i:                                      ; preds = %land.lhs.true43.i
  %add.i = add i32 %11, %offset.0.i
  %call52.i = tail call %struct.rtx_def* @gen_rtx_REG(i32 %bf.clear.i, i32 %add.i) #5
  %12 = getelementptr inbounds %union.rtunion_def* %arrayidx6, i64 0, i32 0
  %call52.c.i = ptrtoint %struct.rtx_def* %call52.i to i64
  store i64 %call52.c.i, i64* %12, align 8, !tbaa !9
  br label %for.inc39

sw.bb13:                                          ; preds = %if.then
  %arrayidx15 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx15 to %struct.rtvec_def**
  %13 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !9
  %num_elem = getelementptr inbounds %struct.rtvec_def* %13, i64 0, i32 0
  %14 = load i32* %num_elem, align 4, !tbaa !75
  %cmp1797 = icmp sgt i32 %14, 0
  br i1 %cmp1797, label %for.body19.lr.ph, label %for.inc39

for.body19.lr.ph:                                 ; preds = %sw.bb13
  %15 = sext i32 %14 to i64
  br label %for.body19

for.body19:                                       ; preds = %for.cond16.backedge.for.body19_crit_edge, %for.body19.lr.ph
  %16 = phi %struct.rtvec_def* [ %13, %for.body19.lr.ph ], [ %.pre, %for.cond16.backedge.for.body19_crit_edge ]
  %indvars.iv = phi i64 [ %15, %for.body19.lr.ph ], [ %indvars.iv.next, %for.cond16.backedge.for.body19_crit_edge ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  %arrayidx24 = getelementptr inbounds %struct.rtvec_def* %16, i64 0, i32 1, i64 %indvars.iv.next
  %17 = load %struct.rtx_def** %arrayidx24, align 8, !tbaa !9
  %18 = getelementptr inbounds %struct.rtx_def* %17, i64 0, i32 0
  %bf.load25 = load i32* %18, align 8
  %bf.clear26 = and i32 %bf.load25, 65535
  %cmp27 = icmp eq i32 %bf.clear26, 47
  br i1 %cmp27, label %land.lhs.true, label %for.cond16.backedge

for.cond16.backedge:                              ; preds = %for.body19, %land.lhs.true, %if.end.i86, %land.lhs.true43.i90, %if.then48.i94
  %19 = trunc i64 %indvars.iv.next to i32
  %cmp17 = icmp sgt i32 %19, 0
  br i1 %cmp17, label %for.cond16.backedge.for.body19_crit_edge, label %for.inc39

for.cond16.backedge.for.body19_crit_edge:         ; preds = %for.cond16.backedge
  %.pre = load %struct.rtvec_def** %rtvec, align 8, !tbaa !9
  br label %for.body19

land.lhs.true:                                    ; preds = %for.body19
  %arrayidx30 = getelementptr inbounds %struct.rtx_def* %17, i64 0, i32 1, i64 0
  %rtx31 = bitcast %union.rtunion_def* %arrayidx30 to %struct.rtx_def**
  %20 = load %struct.rtx_def** %rtx31, align 8, !tbaa !9
  %21 = getelementptr inbounds %struct.rtx_def* %20, i64 0, i32 0
  %bf.load32 = load i32* %21, align 8
  %bf.clear33 = and i32 %bf.load32, 65535
  %cmp34 = icmp eq i32 %bf.clear33, 63
  br i1 %cmp34, label %land.lhs.true.i68, label %for.cond16.backedge

land.lhs.true.i68:                                ; preds = %land.lhs.true
  %bf.lshr.i59 = lshr i32 %bf.load32, 16
  %bf.clear.i60 = and i32 %bf.lshr.i59, 255
  %fld6.i63 = getelementptr inbounds %struct.rtx_def* %20, i64 0, i32 1
  %rtx8.i64 = bitcast [1 x %union.rtunion_def]* %fld6.i63 to %struct.rtx_def**
  %22 = load %struct.rtx_def** %rtx8.i64, align 8, !tbaa !9
  %23 = getelementptr inbounds %struct.rtx_def* %22, i64 0, i32 0
  %bf.load9.i65 = load i32* %23, align 8
  %bf.clear10.i66 = and i32 %bf.load9.i65, 65535
  %cmp11.i67 = icmp eq i32 %bf.clear10.i66, 61
  br i1 %cmp11.i67, label %land.lhs.true12.i72, label %if.end.i86

land.lhs.true12.i72:                              ; preds = %land.lhs.true.i68
  %arrayidx17.i69 = getelementptr inbounds %struct.rtx_def* %22, i64 0, i32 1, i64 0
  %rtuint.i70 = bitcast %union.rtunion_def* %arrayidx17.i69 to i32*
  %24 = load i32* %rtuint.i70, align 4, !tbaa !17
  %cmp18.i71 = icmp ult i32 %24, 53
  br i1 %cmp18.i71, label %if.then.i80, label %if.end.i86

if.then.i80:                                      ; preds = %land.lhs.true12.i72
  %bf.lshr29.i73 = lshr i32 %bf.load9.i65, 16
  %bf.clear30.i74 = and i32 %bf.lshr29.i73, 255
  %arrayidx32.i75 = getelementptr inbounds %struct.rtx_def* %20, i64 0, i32 1, i64 1
  %rtuint33.i76 = bitcast %union.rtunion_def* %arrayidx32.i75 to i32*
  %25 = load i32* %rtuint33.i76, align 4, !tbaa !17
  %call.i77 = tail call i32 @subreg_regno_offset(i32 %24, i32 %bf.clear30.i74, i32 %25, i32 %bf.clear.i60) #5
  %26 = load %struct.rtx_def** %rtx8.i64, align 8, !tbaa !9
  %.phi.trans.insert.i78 = getelementptr inbounds %struct.rtx_def* %26, i64 0, i32 0
  %bf.load40.pre.i79 = load i32* %.phi.trans.insert.i78, align 8
  br label %if.end.i86

if.end.i86:                                       ; preds = %if.then.i80, %land.lhs.true12.i72, %land.lhs.true.i68
  %bf.load40.i81 = phi i32 [ %bf.load40.pre.i79, %if.then.i80 ], [ %bf.load32, %land.lhs.true12.i72 ], [ %bf.load32, %land.lhs.true.i68 ]
  %reg.0.i82 = phi %struct.rtx_def* [ %26, %if.then.i80 ], [ %20, %land.lhs.true12.i72 ], [ %20, %land.lhs.true.i68 ]
  %offset.0.i83 = phi i32 [ %call.i77, %if.then.i80 ], [ 0, %land.lhs.true12.i72 ], [ 0, %land.lhs.true.i68 ]
  %bf.clear41.i84 = and i32 %bf.load40.i81, 65535
  %cmp42.i85 = icmp eq i32 %bf.clear41.i84, 61
  br i1 %cmp42.i85, label %land.lhs.true43.i90, label %for.cond16.backedge

land.lhs.true43.i90:                              ; preds = %if.end.i86
  %arrayidx45.i87 = getelementptr inbounds %struct.rtx_def* %reg.0.i82, i64 0, i32 1, i64 0
  %rtuint46.i88 = bitcast %union.rtunion_def* %arrayidx45.i87 to i32*
  %27 = load i32* %rtuint46.i88, align 4, !tbaa !17
  %cmp47.i89 = icmp ult i32 %27, 53
  br i1 %cmp47.i89, label %if.then48.i94, label %for.cond16.backedge

if.then48.i94:                                    ; preds = %land.lhs.true43.i90
  %add.i91 = add i32 %27, %offset.0.i83
  %call52.i92 = tail call %struct.rtx_def* @gen_rtx_REG(i32 %bf.clear.i60, i32 %add.i91) #5
  %28 = getelementptr inbounds %union.rtunion_def* %arrayidx30, i64 0, i32 0
  %call52.c.i93 = ptrtoint %struct.rtx_def* %call52.i92 to i64
  store i64 %call52.c.i93, i64* %28, align 8, !tbaa !9
  br label %for.cond16.backedge

for.inc39:                                        ; preds = %for.cond16.backedge, %sw.bb13, %if.then48.i, %land.lhs.true43.i, %if.end.i, %for.body, %if.then, %sw.bb
  %arrayidx41 = getelementptr inbounds %struct.rtx_def* %insn.addr.0100, i64 0, i32 1, i64 2
  %rtx42 = bitcast %union.rtunion_def* %arrayidx41 to %struct.rtx_def**
  %29 = load %struct.rtx_def** %rtx42, align 8, !tbaa !9
  %tobool = icmp eq %struct.rtx_def* %29, null
  br i1 %tobool, label %for.end43, label %for.body

for.end43:                                        ; preds = %for.inc39, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define void @instantiate_virtual_regs(%union.tree_node* nocapture readonly %fndecl, %struct.rtx_def* %insns) #0 {
entry:
  %0 = load i32* @target_flags, align 4, !tbaa !17
  %and = and i32 %0, 4096
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %cond.end, label %cond.true

cond.true:                                        ; preds = %entry
  %1 = load %struct.function** @cfun, align 8, !tbaa !9
  %outgoing_args_size = getelementptr inbounds %struct.function* %1, i64 0, i32 11
  %2 = load i32* %outgoing_args_size, align 4, !tbaa !77
  br label %cond.end

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ 0, %entry ]
  store i32 %cond, i32* @dynamic_offset, align 4, !tbaa !17
  tail call fastcc void @instantiate_decls(%union.tree_node* %fndecl, i32 1)
  tail call void @init_recog() #5
  %tobool255 = icmp eq %struct.rtx_def* %insns, null
  br i1 %tobool255, label %for.cond26.preheader, label %for.body

for.cond26.preheader:                             ; preds = %for.inc, %cond.end
  %3 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_max_parm_reg52 = getelementptr inbounds %struct.function* %3, i64 0, i32 37
  %4 = load i32* %x_max_parm_reg52, align 4, !tbaa !64
  %cmp2753 = icmp eq i32 %4, 0
  br i1 %cmp2753, label %for.end38, label %for.body28

for.body:                                         ; preds = %cond.end, %for.inc
  %insn.056 = phi %struct.rtx_def* [ %6, %for.inc ], [ %insns, %cond.end ]
  %5 = getelementptr inbounds %struct.rtx_def* %insn.056, i64 0, i32 0
  %bf.load = load i32* %5, align 8
  %bf.clear = and i32 %bf.load, 65535
  %bf.clear.off = add i32 %bf.clear, -32
  %switch = icmp ult i32 %bf.clear.off, 3
  br i1 %switch, label %if.then, label %for.inc

if.then:                                          ; preds = %for.body
  %arrayidx = getelementptr inbounds %struct.rtx_def* %insn.056, i64 0, i32 1, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %call = tail call fastcc i32 @instantiate_virtual_regs_1(%struct.rtx_def** %rtx, %struct.rtx_def* %insn.056, i32 1)
  %arrayidx11 = getelementptr inbounds %struct.rtx_def* %insn.056, i64 0, i32 1, i64 6
  %rtx12 = bitcast %union.rtunion_def* %arrayidx11 to %struct.rtx_def**
  %call13 = tail call fastcc i32 @instantiate_virtual_regs_1(%struct.rtx_def** %rtx12, %struct.rtx_def* null, i32 0)
  %bf.load14 = load i32* %5, align 8
  %bf.clear15 = and i32 %bf.load14, 65535
  %cmp16 = icmp eq i32 %bf.clear15, 34
  br i1 %cmp16, label %if.then17, label %for.inc

if.then17:                                        ; preds = %if.then
  %arrayidx19 = getelementptr inbounds %struct.rtx_def* %insn.056, i64 0, i32 1, i64 7
  %rtx20 = bitcast %union.rtunion_def* %arrayidx19 to %struct.rtx_def**
  %call21 = tail call fastcc i32 @instantiate_virtual_regs_1(%struct.rtx_def** %rtx20, %struct.rtx_def* null, i32 0)
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.then17, %if.then
  %arrayidx24 = getelementptr inbounds %struct.rtx_def* %insn.056, i64 0, i32 1, i64 2
  %rtx25 = bitcast %union.rtunion_def* %arrayidx24 to %struct.rtx_def**
  %6 = load %struct.rtx_def** %rtx25, align 8, !tbaa !9
  %tobool2 = icmp eq %struct.rtx_def* %6, null
  br i1 %tobool2, label %for.cond26.preheader, label %for.body

for.body28:                                       ; preds = %for.cond26.preheader, %for.inc37
  %7 = phi %struct.function* [ %10, %for.inc37 ], [ %3, %for.cond26.preheader ]
  %i.054 = phi i32 [ %inc, %for.inc37 ], [ 0, %for.cond26.preheader ]
  %idxprom = zext i32 %i.054 to i64
  %x_parm_reg_stack_loc = getelementptr inbounds %struct.function* %7, i64 0, i32 38
  %8 = load %struct.rtx_def*** %x_parm_reg_stack_loc, align 8, !tbaa !31
  %arrayidx29 = getelementptr inbounds %struct.rtx_def** %8, i64 %idxprom
  %9 = load %struct.rtx_def** %arrayidx29, align 8, !tbaa !9
  %tobool30 = icmp eq %struct.rtx_def* %9, null
  br i1 %tobool30, label %for.inc37, label %if.then31

if.then31:                                        ; preds = %for.body28
  %call35 = tail call fastcc i32 @instantiate_virtual_regs_1(%struct.rtx_def** %arrayidx29, %struct.rtx_def* null, i32 0)
  %.pre = load %struct.function** @cfun, align 8, !tbaa !9
  br label %for.inc37

for.inc37:                                        ; preds = %for.body28, %if.then31
  %10 = phi %struct.function* [ %7, %for.body28 ], [ %.pre, %if.then31 ]
  %inc = add i32 %i.054, 1
  %x_max_parm_reg = getelementptr inbounds %struct.function* %10, i64 0, i32 37
  %11 = load i32* %x_max_parm_reg, align 4, !tbaa !64
  %cmp27 = icmp ult i32 %inc, %11
  br i1 %cmp27, label %for.body28, label %for.end38

for.end38:                                        ; preds = %for.inc37, %for.cond26.preheader
  tail call fastcc void @instantiate_decls(%union.tree_node* %fndecl, i32 0)
  store i32 1, i32* @virtuals_instantiated, align 4, !tbaa !17
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @instantiate_decls(%union.tree_node* nocapture readonly %fndecl, i32 %valid_only) #0 {
entry:
  %arguments = getelementptr inbounds %union.tree_node* %fndecl, i64 0, i32 0, i32 10
  %decl.034 = load %union.tree_node** %arguments, align 8
  %tobool35 = icmp eq %union.tree_node* %decl.034, null
  br i1 %tobool35, label %for.end, label %for.body

for.body:                                         ; preds = %entry, %cond.end
  %decl.036 = phi %union.tree_node* [ %decl.0, %cond.end ], [ %decl.034, %entry ]
  %type = getelementptr inbounds %union.tree_node* %decl.036, i64 0, i32 0, i32 0, i32 1
  %0 = load %union.tree_node** %type, align 8, !tbaa !56
  %call = tail call i64 @int_size_in_bytes(%union.tree_node* %0) #5
  %rtl = getelementptr inbounds %union.tree_node* %decl.036, i64 0, i32 0, i32 17
  %1 = load %struct.rtx_def** %rtl, align 8, !tbaa !63
  %tobool3 = icmp eq %struct.rtx_def* %1, null
  br i1 %tobool3, label %cond.false, label %cond.end

cond.false:                                       ; preds = %for.body
  tail call void @make_decl_rtl(%union.tree_node* %decl.036, i8* null) #5
  %2 = load %struct.rtx_def** %rtl, align 8, !tbaa !63
  br label %cond.end

cond.end:                                         ; preds = %for.body, %cond.false
  %cond = phi %struct.rtx_def* [ %2, %cond.false ], [ %1, %for.body ]
  tail call fastcc void @instantiate_decl(%struct.rtx_def* %cond, i64 %call, i32 %valid_only)
  %u2 = getelementptr inbounds %union.tree_node* %decl.036, i64 0, i32 0, i32 19
  %r = bitcast %union.anon.1* %u2 to %struct.rtx_def**
  %3 = load %struct.rtx_def** %r, align 8, !tbaa !9
  %4 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 0
  %bf.load = load i32* %4, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %idxprom33 = zext i32 %bf.clear to i64
  %arrayidx = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom33
  %5 = load i8* %arrayidx, align 1, !tbaa !22
  %conv = zext i8 %5 to i64
  %cmp = icmp sgt i64 %conv, %call
  %cond13 = select i1 %cmp, i64 %conv, i64 %call
  tail call fastcc void @instantiate_decl(%struct.rtx_def* %3, i64 %cond13, i32 %valid_only)
  %chain = getelementptr inbounds %union.tree_node* %decl.036, i64 0, i32 0, i32 0, i32 0
  %decl.0 = load %union.tree_node** %chain, align 8
  %tobool = icmp eq %union.tree_node* %decl.0, null
  br i1 %tobool, label %for.end, label %for.body

for.end:                                          ; preds = %cond.end, %entry
  %initial = getelementptr inbounds %union.tree_node* %fndecl, i64 0, i32 0, i32 12
  %6 = load %union.tree_node** %initial, align 8, !tbaa !61
  tail call fastcc void @instantiate_decls_1(%union.tree_node* %6, i32 %valid_only)
  ret void
}

declare void @init_recog() #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @instantiate_virtual_regs_1(%struct.rtx_def** %loc, %struct.rtx_def* %object, i32 %extra_insns) #0 {
entry:
  %src = alloca %struct.rtx_def*, align 8
  %0 = load %struct.rtx_def** %loc, align 8, !tbaa !9
  %cmp866883 = icmp eq %struct.rtx_def* %0, null
  br i1 %cmp866883, label %return, label %if.end.lr.ph.lr.ph

if.end.lr.ph.lr.ph:                               ; preds = %entry
  %tobool439 = icmp ne %struct.rtx_def* %object, null
  br label %if.end

if.end:                                           ; preds = %restart.outer.backedge, %restart.backedge, %if.end.lr.ph.lr.ph
  %1 = phi %struct.rtx_def* [ %0, %if.end.lr.ph.lr.ph ], [ %54, %restart.backedge ], [ %16, %restart.outer.backedge ]
  %loc.addr.0867 = phi %struct.rtx_def** [ %loc, %if.end.lr.ph.lr.ph ], [ %loc.addr.0.be, %restart.backedge ], [ %loc.addr.0.ph.be, %restart.outer.backedge ]
  %2 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 0
  %bf.load = load i32* %2, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %sw.epilog.loopexit [
    i32 54, label %return
    i32 55, label %return
    i32 56, label %return
    i32 58, label %return
    i32 68, label %return
    i32 36, label %return
    i32 59, label %return
    i32 69, label %return
    i32 40, label %return
    i32 44, label %return
    i32 45, label %return
    i32 51, label %return
    i32 47, label %sw.bb1
    i32 75, label %sw.bb44
    i32 3, label %if.end.sw.bb227_crit_edge
    i32 50, label %if.end.sw.bb227_crit_edge1000
    i32 74, label %if.end.sw.bb227_crit_edge1001
    i32 76, label %if.end.sw.bb227_crit_edge1002
    i32 78, label %if.end.sw.bb227_crit_edge1003
    i32 79, label %if.end.sw.bb227_crit_edge1004
    i32 81, label %if.end.sw.bb227_crit_edge1005
    i32 80, label %if.end.sw.bb227_crit_edge1006
    i32 82, label %if.end.sw.bb227_crit_edge1007
    i32 83, label %if.end.sw.bb227_crit_edge1008
    i32 84, label %if.end.sw.bb227_crit_edge1009
    i32 85, label %if.end.sw.bb227_crit_edge1010
    i32 91, label %if.end.sw.bb227_crit_edge1011
    i32 88, label %if.end.sw.bb227_crit_edge1012
    i32 89, label %if.end.sw.bb227_crit_edge1013
    i32 90, label %if.end.sw.bb227_crit_edge1014
    i32 87, label %if.end.sw.bb227_crit_edge1015
    i32 102, label %if.end.sw.bb227_crit_edge1016
    i32 103, label %if.end.sw.bb227_crit_edge1017
    i32 104, label %if.end.sw.bb227_crit_edge1018
    i32 105, label %if.end.sw.bb227_crit_edge1019
    i32 108, label %if.end.sw.bb227_crit_edge1020
    i32 109, label %if.end.sw.bb227_crit_edge1021
    i32 106, label %if.end.sw.bb227_crit_edge1022
    i32 107, label %if.end.sw.bb227_crit_edge1023
    i32 110, label %if.end.sw.bb227_crit_edge1024
    i32 111, label %if.end.sw.bb227_crit_edge1025
    i32 66, label %sw.bb297
    i32 46, label %sw.bb449
    i32 63, label %sw.bb449
    i32 64, label %sw.bb449
    i32 77, label %sw.bb449
    i32 86, label %sw.bb449
    i32 96, label %sw.bb449
    i32 97, label %sw.bb449
    i32 98, label %sw.bb449
    i32 99, label %sw.bb449
    i32 120, label %sw.bb449
    i32 121, label %sw.bb449
    i32 122, label %sw.bb449
    i32 123, label %sw.bb449
    i32 124, label %sw.bb449
    i32 125, label %sw.bb449
    i32 126, label %sw.bb449
    i32 128, label %sw.bb449
    i32 127, label %sw.bb449
    i32 129, label %sw.bb449
    i32 130, label %sw.bb449
    i32 131, label %sw.bb449
    i32 48, label %sw.bb453
    i32 49, label %sw.bb453
    i32 61, label %sw.bb497
    i32 70, label %sw.bb520
  ]

if.end.sw.bb227_crit_edge1025:                    ; preds = %if.end
  %arrayidx229.phi.trans.insert1026 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 1
  %rtx230.phi.trans.insert1027 = bitcast %union.rtunion_def* %arrayidx229.phi.trans.insert1026 to %struct.rtx_def**
  %.pre1079 = load %struct.rtx_def** %rtx230.phi.trans.insert1027, align 8, !tbaa !9
  br label %sw.bb227

if.end.sw.bb227_crit_edge1024:                    ; preds = %if.end
  %arrayidx229.phi.trans.insert1076 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 1
  %rtx230.phi.trans.insert1077 = bitcast %union.rtunion_def* %arrayidx229.phi.trans.insert1076 to %struct.rtx_def**
  %.pre1104 = load %struct.rtx_def** %rtx230.phi.trans.insert1077, align 8, !tbaa !9
  br label %sw.bb227

if.end.sw.bb227_crit_edge1023:                    ; preds = %if.end
  %arrayidx229.phi.trans.insert1054 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 1
  %rtx230.phi.trans.insert1055 = bitcast %union.rtunion_def* %arrayidx229.phi.trans.insert1054 to %struct.rtx_def**
  %.pre1093 = load %struct.rtx_def** %rtx230.phi.trans.insert1055, align 8, !tbaa !9
  br label %sw.bb227

if.end.sw.bb227_crit_edge1022:                    ; preds = %if.end
  %arrayidx229.phi.trans.insert1072 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 1
  %rtx230.phi.trans.insert1073 = bitcast %union.rtunion_def* %arrayidx229.phi.trans.insert1072 to %struct.rtx_def**
  %.pre1102 = load %struct.rtx_def** %rtx230.phi.trans.insert1073, align 8, !tbaa !9
  br label %sw.bb227

if.end.sw.bb227_crit_edge1021:                    ; preds = %if.end
  %arrayidx229.phi.trans.insert1046 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 1
  %rtx230.phi.trans.insert1047 = bitcast %union.rtunion_def* %arrayidx229.phi.trans.insert1046 to %struct.rtx_def**
  %.pre1089 = load %struct.rtx_def** %rtx230.phi.trans.insert1047, align 8, !tbaa !9
  br label %sw.bb227

if.end.sw.bb227_crit_edge1020:                    ; preds = %if.end
  %arrayidx229.phi.trans.insert1066 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 1
  %rtx230.phi.trans.insert1067 = bitcast %union.rtunion_def* %arrayidx229.phi.trans.insert1066 to %struct.rtx_def**
  %.pre1099 = load %struct.rtx_def** %rtx230.phi.trans.insert1067, align 8, !tbaa !9
  br label %sw.bb227

if.end.sw.bb227_crit_edge1019:                    ; preds = %if.end
  %arrayidx229.phi.trans.insert1048 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 1
  %rtx230.phi.trans.insert1049 = bitcast %union.rtunion_def* %arrayidx229.phi.trans.insert1048 to %struct.rtx_def**
  %.pre1090 = load %struct.rtx_def** %rtx230.phi.trans.insert1049, align 8, !tbaa !9
  br label %sw.bb227

if.end.sw.bb227_crit_edge1018:                    ; preds = %if.end
  %arrayidx229.phi.trans.insert1074 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 1
  %rtx230.phi.trans.insert1075 = bitcast %union.rtunion_def* %arrayidx229.phi.trans.insert1074 to %struct.rtx_def**
  %.pre1103 = load %struct.rtx_def** %rtx230.phi.trans.insert1075, align 8, !tbaa !9
  br label %sw.bb227

if.end.sw.bb227_crit_edge1017:                    ; preds = %if.end
  %arrayidx229.phi.trans.insert1052 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 1
  %rtx230.phi.trans.insert1053 = bitcast %union.rtunion_def* %arrayidx229.phi.trans.insert1052 to %struct.rtx_def**
  %.pre1092 = load %struct.rtx_def** %rtx230.phi.trans.insert1053, align 8, !tbaa !9
  br label %sw.bb227

if.end.sw.bb227_crit_edge1016:                    ; preds = %if.end
  %arrayidx229.phi.trans.insert1036 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 1
  %rtx230.phi.trans.insert1037 = bitcast %union.rtunion_def* %arrayidx229.phi.trans.insert1036 to %struct.rtx_def**
  %.pre1084 = load %struct.rtx_def** %rtx230.phi.trans.insert1037, align 8, !tbaa !9
  br label %sw.bb227

if.end.sw.bb227_crit_edge1015:                    ; preds = %if.end
  %arrayidx229.phi.trans.insert1034 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 1
  %rtx230.phi.trans.insert1035 = bitcast %union.rtunion_def* %arrayidx229.phi.trans.insert1034 to %struct.rtx_def**
  %.pre1083 = load %struct.rtx_def** %rtx230.phi.trans.insert1035, align 8, !tbaa !9
  br label %sw.bb227

if.end.sw.bb227_crit_edge1014:                    ; preds = %if.end
  %arrayidx229.phi.trans.insert1070 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 1
  %rtx230.phi.trans.insert1071 = bitcast %union.rtunion_def* %arrayidx229.phi.trans.insert1070 to %struct.rtx_def**
  %.pre1101 = load %struct.rtx_def** %rtx230.phi.trans.insert1071, align 8, !tbaa !9
  br label %sw.bb227

if.end.sw.bb227_crit_edge1013:                    ; preds = %if.end
  %arrayidx229.phi.trans.insert1030 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 1
  %rtx230.phi.trans.insert1031 = bitcast %union.rtunion_def* %arrayidx229.phi.trans.insert1030 to %struct.rtx_def**
  %.pre1081 = load %struct.rtx_def** %rtx230.phi.trans.insert1031, align 8, !tbaa !9
  br label %sw.bb227

if.end.sw.bb227_crit_edge1012:                    ; preds = %if.end
  %arrayidx229.phi.trans.insert1038 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 1
  %rtx230.phi.trans.insert1039 = bitcast %union.rtunion_def* %arrayidx229.phi.trans.insert1038 to %struct.rtx_def**
  %.pre1085 = load %struct.rtx_def** %rtx230.phi.trans.insert1039, align 8, !tbaa !9
  br label %sw.bb227

if.end.sw.bb227_crit_edge1011:                    ; preds = %if.end
  %arrayidx229.phi.trans.insert1040 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 1
  %rtx230.phi.trans.insert1041 = bitcast %union.rtunion_def* %arrayidx229.phi.trans.insert1040 to %struct.rtx_def**
  %.pre1086 = load %struct.rtx_def** %rtx230.phi.trans.insert1041, align 8, !tbaa !9
  br label %sw.bb227

if.end.sw.bb227_crit_edge1010:                    ; preds = %if.end
  %arrayidx229.phi.trans.insert1050 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 1
  %rtx230.phi.trans.insert1051 = bitcast %union.rtunion_def* %arrayidx229.phi.trans.insert1050 to %struct.rtx_def**
  %.pre1091 = load %struct.rtx_def** %rtx230.phi.trans.insert1051, align 8, !tbaa !9
  br label %sw.bb227

if.end.sw.bb227_crit_edge1009:                    ; preds = %if.end
  %arrayidx229.phi.trans.insert1056 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 1
  %rtx230.phi.trans.insert1057 = bitcast %union.rtunion_def* %arrayidx229.phi.trans.insert1056 to %struct.rtx_def**
  %.pre1094 = load %struct.rtx_def** %rtx230.phi.trans.insert1057, align 8, !tbaa !9
  br label %sw.bb227

if.end.sw.bb227_crit_edge1008:                    ; preds = %if.end
  %arrayidx229.phi.trans.insert1044 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 1
  %rtx230.phi.trans.insert1045 = bitcast %union.rtunion_def* %arrayidx229.phi.trans.insert1044 to %struct.rtx_def**
  %.pre1088 = load %struct.rtx_def** %rtx230.phi.trans.insert1045, align 8, !tbaa !9
  br label %sw.bb227

if.end.sw.bb227_crit_edge1007:                    ; preds = %if.end
  %arrayidx229.phi.trans.insert1064 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 1
  %rtx230.phi.trans.insert1065 = bitcast %union.rtunion_def* %arrayidx229.phi.trans.insert1064 to %struct.rtx_def**
  %.pre1098 = load %struct.rtx_def** %rtx230.phi.trans.insert1065, align 8, !tbaa !9
  br label %sw.bb227

if.end.sw.bb227_crit_edge1006:                    ; preds = %if.end
  %arrayidx229.phi.trans.insert1060 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 1
  %rtx230.phi.trans.insert1061 = bitcast %union.rtunion_def* %arrayidx229.phi.trans.insert1060 to %struct.rtx_def**
  %.pre1096 = load %struct.rtx_def** %rtx230.phi.trans.insert1061, align 8, !tbaa !9
  br label %sw.bb227

if.end.sw.bb227_crit_edge1005:                    ; preds = %if.end
  %arrayidx229.phi.trans.insert1058 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 1
  %rtx230.phi.trans.insert1059 = bitcast %union.rtunion_def* %arrayidx229.phi.trans.insert1058 to %struct.rtx_def**
  %.pre1095 = load %struct.rtx_def** %rtx230.phi.trans.insert1059, align 8, !tbaa !9
  br label %sw.bb227

if.end.sw.bb227_crit_edge1004:                    ; preds = %if.end
  %arrayidx229.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 1
  %rtx230.phi.trans.insert = bitcast %union.rtunion_def* %arrayidx229.phi.trans.insert to %struct.rtx_def**
  %.pre1078 = load %struct.rtx_def** %rtx230.phi.trans.insert, align 8, !tbaa !9
  br label %sw.bb227

if.end.sw.bb227_crit_edge1003:                    ; preds = %if.end
  %arrayidx229.phi.trans.insert1062 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 1
  %rtx230.phi.trans.insert1063 = bitcast %union.rtunion_def* %arrayidx229.phi.trans.insert1062 to %struct.rtx_def**
  %.pre1097 = load %struct.rtx_def** %rtx230.phi.trans.insert1063, align 8, !tbaa !9
  br label %sw.bb227

if.end.sw.bb227_crit_edge1002:                    ; preds = %if.end
  %arrayidx229.phi.trans.insert1032 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 1
  %rtx230.phi.trans.insert1033 = bitcast %union.rtunion_def* %arrayidx229.phi.trans.insert1032 to %struct.rtx_def**
  %.pre1082 = load %struct.rtx_def** %rtx230.phi.trans.insert1033, align 8, !tbaa !9
  br label %sw.bb227

if.end.sw.bb227_crit_edge1001:                    ; preds = %if.end
  %arrayidx229.phi.trans.insert1042 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 1
  %rtx230.phi.trans.insert1043 = bitcast %union.rtunion_def* %arrayidx229.phi.trans.insert1042 to %struct.rtx_def**
  %.pre1087 = load %struct.rtx_def** %rtx230.phi.trans.insert1043, align 8, !tbaa !9
  br label %sw.bb227

if.end.sw.bb227_crit_edge1000:                    ; preds = %if.end
  %arrayidx229.phi.trans.insert1068 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 1
  %rtx230.phi.trans.insert1069 = bitcast %union.rtunion_def* %arrayidx229.phi.trans.insert1068 to %struct.rtx_def**
  %.pre1100 = load %struct.rtx_def** %rtx230.phi.trans.insert1069, align 8, !tbaa !9
  br label %sw.bb227

if.end.sw.bb227_crit_edge:                        ; preds = %if.end
  %arrayidx229.phi.trans.insert1028 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 1
  %rtx230.phi.trans.insert1029 = bitcast %union.rtunion_def* %arrayidx229.phi.trans.insert1028 to %struct.rtx_def**
  %.pre1080 = load %struct.rtx_def** %rtx230.phi.trans.insert1029, align 8, !tbaa !9
  br label %sw.bb227

sw.bb1:                                           ; preds = %if.end
  %fld = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1
  %rtx = bitcast [1 x %union.rtunion_def]* %fld to %struct.rtx_def**
  %3 = load %struct.rtx_def** %rtx, align 8, !tbaa !9
  %4 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 6), align 8, !tbaa !9
  %cmp.i = icmp eq %struct.rtx_def* %4, %3
  br i1 %cmp.i, label %instantiate_new_reg.exit, label %if.else.i

if.else.i:                                        ; preds = %sw.bb1
  %5 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 7), align 8, !tbaa !9
  %cmp1.i = icmp eq %struct.rtx_def* %5, %3
  br i1 %cmp1.i, label %instantiate_new_reg.exit, label %if.else5.i

if.else5.i:                                       ; preds = %if.else.i
  %6 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 8), align 8, !tbaa !9
  %cmp6.i = icmp eq %struct.rtx_def* %6, %3
  br i1 %cmp6.i, label %if.then8.i, label %if.else10.i

if.then8.i:                                       ; preds = %if.else5.i
  %7 = load i32* @dynamic_offset, align 4, !tbaa !17
  %conv9.i = sext i32 %7 to i64
  br label %instantiate_new_reg.exit

if.else10.i:                                      ; preds = %if.else5.i
  %8 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 9), align 8, !tbaa !9
  %cmp11.i = icmp eq %struct.rtx_def* %8, %3
  br i1 %cmp11.i, label %instantiate_new_reg.exit, label %if.else15.i

if.else15.i:                                      ; preds = %if.else10.i
  %9 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 10), align 8, !tbaa !9
  %cmp16.i = icmp eq %struct.rtx_def* %9, %3
  br i1 %cmp16.i, label %instantiate_new_reg.exit, label %if.end36

instantiate_new_reg.exit:                         ; preds = %sw.bb1, %if.else.i, %if.then8.i, %if.else10.i, %if.else15.i
  %new.0.in.i = phi %struct.rtx_def** [ getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), %if.then8.i ], [ getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 5), %sw.bb1 ], [ getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 3), %if.else.i ], [ getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), %if.else10.i ], [ getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 5), %if.else15.i ]
  %offset.0.i = phi i64 [ %conv9.i, %if.then8.i ], [ 0, %sw.bb1 ], [ 0, %if.else.i ], [ 0, %if.else10.i ], [ 0, %if.else15.i ]
  %new.0.i = load %struct.rtx_def** %new.0.in.i, align 8
  %cmp2 = icmp eq %struct.rtx_def* %new.0.i, null
  br i1 %cmp2, label %if.end36, label %if.then3

if.then3:                                         ; preds = %instantiate_new_reg.exit
  %arrayidx5 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 1
  %rtx6 = bitcast %union.rtunion_def* %arrayidx5 to %struct.rtx_def**
  %10 = load %struct.rtx_def** %rtx6, align 8, !tbaa !9
  store %struct.rtx_def* %10, %struct.rtx_def** %src, align 8, !tbaa !9
  %sub = sub nsw i64 0, %offset.0.i
  %call7 = call fastcc i32 @instantiate_virtual_regs_1(%struct.rtx_def** %src, %struct.rtx_def* null, i32 0)
  %11 = load %struct.rtx_def** %src, align 8, !tbaa !9
  %12 = getelementptr inbounds %struct.rtx_def* %11, i64 0, i32 0
  %bf.load8 = load i32* %12, align 8
  %bf.clear9 = and i32 %bf.load8, 65535
  switch i32 %bf.clear9, label %if.then14 [
    i32 61, label %if.end15
    i32 75, label %if.end15
  ]

if.then14:                                        ; preds = %if.then3
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8]* @.str, i64 0, i64 0), i32 3846, i8* getelementptr inbounds ([27 x i8]* @__FUNCTION__.instantiate_virtual_regs_1, i64 0, i64 0)) #8
  unreachable

if.end15:                                         ; preds = %if.then3, %if.then3
  call void @start_sequence() #5
  %13 = load %struct.rtx_def** %src, align 8, !tbaa !9
  %14 = getelementptr inbounds %struct.rtx_def* %13, i64 0, i32 0
  %bf.load16 = load i32* %14, align 8
  %bf.clear17 = and i32 %bf.load16, 65535
  %cmp18 = icmp eq i32 %bf.clear17, 61
  br i1 %cmp18, label %if.end21, label %if.then19

if.then19:                                        ; preds = %if.end15
  %call20 = call %struct.rtx_def* @force_operand(%struct.rtx_def* %13, %struct.rtx_def* null) #5
  br label %if.end21

if.end21:                                         ; preds = %if.end15, %if.then19
  %temp.0 = phi %struct.rtx_def* [ %call20, %if.then19 ], [ %13, %if.end15 ]
  %call22 = call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %temp.0, i64 %sub) #5
  %call23 = call %struct.rtx_def* @force_operand(%struct.rtx_def* %call22, %struct.rtx_def* null) #5
  %call24 = call %struct.rtx_def* @get_insns() #5
  call void @end_sequence() #5
  %call25 = call %struct.rtx_def* @emit_insns_before(%struct.rtx_def* %call24, %struct.rtx_def* %object) #5
  %15 = getelementptr inbounds [1 x %union.rtunion_def]* %fld, i64 0, i64 0, i32 0
  %call.c = ptrtoint %struct.rtx_def* %new.0.i to i64
  store i64 %call.c, i64* %15, align 8, !tbaa !9
  %call32 = call i32 @validate_change(%struct.rtx_def* %object, %struct.rtx_def** %rtx6, %struct.rtx_def* %call23, i32 0) #5
  %tobool = icmp ne i32 %call32, 0
  %tobool33 = icmp ne i32 %extra_insns, 0
  %or.cond = and i1 %tobool, %tobool33
  br i1 %or.cond, label %return, label %if.then34

if.then34:                                        ; preds = %if.end21
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8]* @.str, i64 0, i64 0), i32 3862, i8* getelementptr inbounds ([27 x i8]* @__FUNCTION__.instantiate_virtual_regs_1, i64 0, i64 0)) #8
  unreachable

if.end36:                                         ; preds = %if.else15.i, %instantiate_new_reg.exit
  %call40 = call fastcc i32 @instantiate_virtual_regs_1(%struct.rtx_def** %rtx, %struct.rtx_def* %object, i32 %extra_insns)
  %arrayidx42 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 1
  %rtx43 = bitcast %union.rtunion_def* %arrayidx42 to %struct.rtx_def**
  %.pre1125 = load %struct.rtx_def** %rtx43, align 8, !tbaa !9
  br label %restart.outer.backedge

restart.outer.backedge:                           ; preds = %if.end36, %instantiate_new_reg.exit803, %if.then143
  %16 = phi %struct.rtx_def* [ %.pre1125, %if.end36 ], [ %19, %instantiate_new_reg.exit803 ], [ %19, %if.then143 ]
  %loc.addr.0.ph.be = phi %struct.rtx_def** [ %rtx43, %if.end36 ], [ %rtx103, %instantiate_new_reg.exit803 ], [ %rtx103, %if.then143 ]
  %cmp866 = icmp eq %struct.rtx_def* %16, null
  br i1 %cmp866, label %return, label %if.end

sw.bb44:                                          ; preds = %if.end
  %arrayidx46 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 1
  %rtx47 = bitcast %union.rtunion_def* %arrayidx46 to %struct.rtx_def**
  %17 = load %struct.rtx_def** %rtx47, align 8, !tbaa !9
  %18 = getelementptr inbounds %struct.rtx_def* %17, i64 0, i32 0
  %bf.load48 = load i32* %18, align 8
  %bf.clear49 = and i32 %bf.load48, 65535
  switch i32 %bf.clear49, label %sw.bb227 [
    i32 67, label %if.then100
    i32 68, label %if.then100
    i32 54, label %if.then100
    i32 55, label %if.then100
    i32 58, label %if.then100
    i32 134, label %if.then100
    i32 56, label %if.then100
    i32 140, label %if.then100
  ]

if.then100:                                       ; preds = %sw.bb44, %sw.bb44, %sw.bb44, %sw.bb44, %sw.bb44, %sw.bb44, %sw.bb44, %sw.bb44
  %arrayidx102 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 0
  %rtx103 = bitcast %union.rtunion_def* %arrayidx102 to %struct.rtx_def**
  %19 = load %struct.rtx_def** %rtx103, align 8, !tbaa !9
  %20 = getelementptr inbounds %struct.rtx_def* %19, i64 0, i32 0
  %bf.load104 = load i32* %20, align 8
  %bf.clear105 = and i32 %bf.load104, 65535
  %cmp106 = icmp eq i32 %bf.clear105, 75
  br i1 %cmp106, label %if.then107, label %if.else137

if.then107:                                       ; preds = %if.then100
  %arrayidx112 = getelementptr inbounds %struct.rtx_def* %19, i64 0, i32 1, i64 0
  %rtx113 = bitcast %union.rtunion_def* %arrayidx112 to %struct.rtx_def**
  %21 = load %struct.rtx_def** %rtx113, align 8, !tbaa !9
  %22 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 6), align 8, !tbaa !9
  %cmp.i787 = icmp eq %struct.rtx_def* %22, %21
  br i1 %cmp.i787, label %instantiate_new_reg.exit803, label %if.else.i789

if.else.i789:                                     ; preds = %if.then107
  %23 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 7), align 8, !tbaa !9
  %cmp1.i788 = icmp eq %struct.rtx_def* %23, %21
  br i1 %cmp1.i788, label %instantiate_new_reg.exit803, label %if.else5.i791

if.else5.i791:                                    ; preds = %if.else.i789
  %24 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 8), align 8, !tbaa !9
  %cmp6.i790 = icmp eq %struct.rtx_def* %24, %21
  br i1 %cmp6.i790, label %if.then8.i793, label %if.else10.i795

if.then8.i793:                                    ; preds = %if.else5.i791
  %25 = load i32* @dynamic_offset, align 4, !tbaa !17
  %conv9.i792 = sext i32 %25 to i64
  br label %instantiate_new_reg.exit803

if.else10.i795:                                   ; preds = %if.else5.i791
  %26 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 9), align 8, !tbaa !9
  %cmp11.i794 = icmp eq %struct.rtx_def* %26, %21
  br i1 %cmp11.i794, label %instantiate_new_reg.exit803, label %if.else15.i797

if.else15.i797:                                   ; preds = %if.else10.i795
  %27 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 10), align 8, !tbaa !9
  %cmp16.i796 = icmp eq %struct.rtx_def* %27, %21
  br i1 %cmp16.i796, label %instantiate_new_reg.exit803, label %restart.backedge

instantiate_new_reg.exit803:                      ; preds = %if.then107, %if.else.i789, %if.else10.i795, %if.else15.i797, %if.then8.i793
  %new.0.in.i798 = phi %struct.rtx_def** [ getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), %if.then8.i793 ], [ getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 5), %if.then107 ], [ getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 3), %if.else.i789 ], [ getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), %if.else10.i795 ], [ getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 5), %if.else15.i797 ]
  %offset.0.i799 = phi i64 [ %conv9.i792, %if.then8.i793 ], [ 0, %if.then107 ], [ 0, %if.else.i789 ], [ 0, %if.else10.i795 ], [ 0, %if.else15.i797 ]
  %new.0.i800 = load %struct.rtx_def** %new.0.in.i798, align 8
  %tobool115 = icmp eq %struct.rtx_def* %new.0.i800, null
  br i1 %tobool115, label %restart.outer.backedge, label %if.then116

if.then116:                                       ; preds = %instantiate_new_reg.exit803
  %arrayidx121 = getelementptr inbounds %struct.rtx_def* %19, i64 0, i32 1, i64 1
  %rtx122 = bitcast %union.rtunion_def* %arrayidx121 to %struct.rtx_def**
  %call123 = call fastcc i32 @instantiate_virtual_regs_1(%struct.rtx_def** %rtx122, %struct.rtx_def* %object, i32 %extra_insns)
  %28 = load i32* @target_flags, align 4, !tbaa !17
  %and = lshr i32 %28, 25
  %29 = and i32 %and, 1
  %30 = or i32 %29, 4
  %31 = load %struct.rtx_def** %rtx103, align 8, !tbaa !9
  %arrayidx129 = getelementptr inbounds %struct.rtx_def* %31, i64 0, i32 1, i64 1
  %rtx130 = bitcast %union.rtunion_def* %arrayidx129 to %struct.rtx_def**
  %32 = load %struct.rtx_def** %rtx130, align 8, !tbaa !9
  %call131 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %30, %struct.rtx_def* %new.0.i800, %struct.rtx_def* %32) #5
  %.pre = load %struct.rtx_def** %rtx47, align 8, !tbaa !9
  br label %if.end156

if.else137:                                       ; preds = %if.then100
  %33 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 6), align 8, !tbaa !9
  %cmp.i770 = icmp eq %struct.rtx_def* %33, %19
  br i1 %cmp.i770, label %instantiate_new_reg.exit786, label %if.else.i772

if.else.i772:                                     ; preds = %if.else137
  %34 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 7), align 8, !tbaa !9
  %cmp1.i771 = icmp eq %struct.rtx_def* %34, %19
  br i1 %cmp1.i771, label %instantiate_new_reg.exit786, label %if.else5.i774

if.else5.i774:                                    ; preds = %if.else.i772
  %35 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 8), align 8, !tbaa !9
  %cmp6.i773 = icmp eq %struct.rtx_def* %35, %19
  br i1 %cmp6.i773, label %if.then8.i776, label %if.else10.i778

if.then8.i776:                                    ; preds = %if.else5.i774
  %36 = load i32* @dynamic_offset, align 4, !tbaa !17
  %conv9.i775 = sext i32 %36 to i64
  br label %instantiate_new_reg.exit786

if.else10.i778:                                   ; preds = %if.else5.i774
  %37 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 9), align 8, !tbaa !9
  %cmp11.i777 = icmp eq %struct.rtx_def* %37, %19
  br i1 %cmp11.i777, label %instantiate_new_reg.exit786, label %if.else15.i780

if.else15.i780:                                   ; preds = %if.else10.i778
  %38 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 10), align 8, !tbaa !9
  %cmp16.i779 = icmp eq %struct.rtx_def* %38, %19
  br i1 %cmp16.i779, label %instantiate_new_reg.exit786, label %if.then143

instantiate_new_reg.exit786:                      ; preds = %if.else137, %if.else.i772, %if.then8.i776, %if.else10.i778, %if.else15.i780
  %new.0.in.i781 = phi %struct.rtx_def** [ getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), %if.then8.i776 ], [ getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 5), %if.else137 ], [ getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 3), %if.else.i772 ], [ getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), %if.else10.i778 ], [ getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 5), %if.else15.i780 ]
  %offset.0.i782 = phi i64 [ %conv9.i775, %if.then8.i776 ], [ 0, %if.else137 ], [ 0, %if.else.i772 ], [ 0, %if.else10.i778 ], [ 0, %if.else15.i780 ]
  %new.0.i783 = load %struct.rtx_def** %new.0.in.i781, align 8
  %cmp142 = icmp eq %struct.rtx_def* %new.0.i783, null
  br i1 %cmp142, label %if.then143, label %if.end156

if.then143:                                       ; preds = %if.else15.i780, %instantiate_new_reg.exit786
  %cmp149 = icmp eq i32 %bf.clear105, 61
  br i1 %cmp149, label %return, label %restart.outer.backedge

if.end156:                                        ; preds = %instantiate_new_reg.exit786, %if.then116
  %39 = phi %struct.rtx_def* [ %.pre, %if.then116 ], [ %17, %instantiate_new_reg.exit786 ]
  %40 = phi i64 [ %offset.0.i799, %if.then116 ], [ %offset.0.i782, %instantiate_new_reg.exit786 ]
  %new.0 = phi %struct.rtx_def* [ %call131, %if.then116 ], [ %new.0.i783, %instantiate_new_reg.exit786 ]
  %call160 = call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %39, i64 %40) #5
  %41 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !9
  %cmp161 = icmp eq %struct.rtx_def* %call160, %41
  br i1 %cmp161, label %land.lhs.true162, label %if.end166

land.lhs.true162:                                 ; preds = %if.end156
  %call163 = call i32 @validate_change(%struct.rtx_def* %object, %struct.rtx_def** %loc.addr.0867, %struct.rtx_def* %new.0, i32 0) #5
  %tobool164 = icmp eq i32 %call163, 0
  br i1 %tobool164, label %if.end166, label %return

if.end166:                                        ; preds = %land.lhs.true162, %if.end156
  %42 = load %struct.rtx_def** %rtx103, align 8, !tbaa !9
  %cmp170 = icmp eq i64 %40, 0
  br i1 %cmp170, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end166
  %call174 = call i32 @validate_change(%struct.rtx_def* %object, %struct.rtx_def** %rtx103, %struct.rtx_def* %new.0, i32 0) #5
  %tobool175 = icmp eq i32 %call174, 0
  br i1 %tobool175, label %if.then184, label %return

cond.false:                                       ; preds = %if.end166
  %43 = getelementptr inbounds %union.rtunion_def* %arrayidx102, i64 0, i32 0
  %new.0.c = ptrtoint %struct.rtx_def* %new.0 to i64
  store i64 %new.0.c, i64* %43, align 8, !tbaa !9
  %call182 = call i32 @validate_change(%struct.rtx_def* %object, %struct.rtx_def** %rtx47, %struct.rtx_def* %call160, i32 0) #5
  %lnot = icmp eq i32 %call182, 0
  br i1 %lnot, label %if.then184, label %return

if.then184:                                       ; preds = %cond.true, %cond.false
  %tobool185 = icmp eq i32 %extra_insns, 0
  br i1 %tobool185, label %if.then186, label %if.end190

if.then186:                                       ; preds = %if.then184
  %44 = getelementptr inbounds %union.rtunion_def* %arrayidx102, i64 0, i32 0
  %.c = ptrtoint %struct.rtx_def* %42 to i64
  store i64 %.c, i64* %44, align 8, !tbaa !9
  br label %return

if.end190:                                        ; preds = %if.then184
  %45 = load i32* @target_flags, align 4, !tbaa !17
  %and191 = lshr i32 %45, 25
  %46 = and i32 %and191, 1
  %47 = or i32 %46, 4
  %call194 = call %struct.rtx_def* @gen_reg_rtx(i32 %47) #5
  %48 = getelementptr inbounds %union.rtunion_def* %arrayidx102, i64 0, i32 0
  %new.0.c745 = ptrtoint %struct.rtx_def* %new.0 to i64
  store i64 %new.0.c745, i64* %48, align 8, !tbaa !9
  %call201 = call i32 @validate_change(%struct.rtx_def* %object, %struct.rtx_def** %rtx47, %struct.rtx_def* %call194, i32 0) #5
  %tobool202 = icmp eq i32 %call201, 0
  br i1 %tobool202, label %if.else206, label %if.then203

if.then203:                                       ; preds = %if.end190
  %call204 = call %struct.rtx_def* @gen_move_insn(%struct.rtx_def* %call194, %struct.rtx_def* %call160) #5
  %call205 = call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %call204, %struct.rtx_def* %object) #5
  br label %return

if.else206:                                       ; preds = %if.end190
  %.c746 = ptrtoint %struct.rtx_def* %42 to i64
  store i64 %.c746, i64* %48, align 8, !tbaa !9
  %49 = load i32* @target_flags, align 4, !tbaa !17
  %and210 = lshr i32 %49, 25
  %50 = and i32 %and210, 1
  %51 = or i32 %50, 4
  %call213 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %51, %struct.rtx_def* %new.0, %struct.rtx_def* %call160) #5
  call void @start_sequence() #5
  %call214 = call %struct.rtx_def* @force_operand(%struct.rtx_def* %call213, %struct.rtx_def* null) #5
  %call215 = call %struct.rtx_def* @get_insns() #5
  call void @end_sequence() #5
  %call216 = call %struct.rtx_def* @emit_insns_before(%struct.rtx_def* %call215, %struct.rtx_def* %object) #5
  %call217 = call i32 @validate_change(%struct.rtx_def* %object, %struct.rtx_def** %loc.addr.0867, %struct.rtx_def* %call214, i32 0) #5
  %tobool218 = icmp eq i32 %call217, 0
  br i1 %tobool218, label %land.lhs.true219, label %return

land.lhs.true219:                                 ; preds = %if.else206
  %call220 = call i32 @validate_replace_rtx(%struct.rtx_def* %1, %struct.rtx_def* %call214, %struct.rtx_def* %object) #5
  %tobool221 = icmp eq i32 %call220, 0
  br i1 %tobool221, label %if.then222, label %return

if.then222:                                       ; preds = %land.lhs.true219
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8]* @.str, i64 0, i64 0), i32 3972, i8* getelementptr inbounds ([27 x i8]* @__FUNCTION__.instantiate_virtual_regs_1, i64 0, i64 0)) #8
  unreachable

sw.bb227:                                         ; preds = %if.end.sw.bb227_crit_edge1025, %if.end.sw.bb227_crit_edge1024, %if.end.sw.bb227_crit_edge1023, %if.end.sw.bb227_crit_edge1022, %if.end.sw.bb227_crit_edge1021, %if.end.sw.bb227_crit_edge1020, %if.end.sw.bb227_crit_edge1019, %if.end.sw.bb227_crit_edge1018, %if.end.sw.bb227_crit_edge1017, %if.end.sw.bb227_crit_edge1016, %if.end.sw.bb227_crit_edge1015, %if.end.sw.bb227_crit_edge1014, %if.end.sw.bb227_crit_edge1013, %if.end.sw.bb227_crit_edge1012, %if.end.sw.bb227_crit_edge1011, %if.end.sw.bb227_crit_edge1010, %if.end.sw.bb227_crit_edge1009, %if.end.sw.bb227_crit_edge1008, %if.end.sw.bb227_crit_edge1007, %if.end.sw.bb227_crit_edge1006, %if.end.sw.bb227_crit_edge1005, %if.end.sw.bb227_crit_edge1004, %if.end.sw.bb227_crit_edge1003, %if.end.sw.bb227_crit_edge1002, %if.end.sw.bb227_crit_edge1001, %if.end.sw.bb227_crit_edge1000, %if.end.sw.bb227_crit_edge, %sw.bb44
  %52 = phi %struct.rtx_def* [ %.pre1079, %if.end.sw.bb227_crit_edge1025 ], [ %.pre1104, %if.end.sw.bb227_crit_edge1024 ], [ %.pre1093, %if.end.sw.bb227_crit_edge1023 ], [ %.pre1102, %if.end.sw.bb227_crit_edge1022 ], [ %.pre1089, %if.end.sw.bb227_crit_edge1021 ], [ %.pre1099, %if.end.sw.bb227_crit_edge1020 ], [ %.pre1090, %if.end.sw.bb227_crit_edge1019 ], [ %.pre1103, %if.end.sw.bb227_crit_edge1018 ], [ %.pre1092, %if.end.sw.bb227_crit_edge1017 ], [ %.pre1084, %if.end.sw.bb227_crit_edge1016 ], [ %.pre1083, %if.end.sw.bb227_crit_edge1015 ], [ %.pre1101, %if.end.sw.bb227_crit_edge1014 ], [ %.pre1081, %if.end.sw.bb227_crit_edge1013 ], [ %.pre1085, %if.end.sw.bb227_crit_edge1012 ], [ %.pre1086, %if.end.sw.bb227_crit_edge1011 ], [ %.pre1091, %if.end.sw.bb227_crit_edge1010 ], [ %.pre1094, %if.end.sw.bb227_crit_edge1009 ], [ %.pre1088, %if.end.sw.bb227_crit_edge1008 ], [ %.pre1098, %if.end.sw.bb227_crit_edge1007 ], [ %.pre1096, %if.end.sw.bb227_crit_edge1006 ], [ %.pre1095, %if.end.sw.bb227_crit_edge1005 ], [ %.pre1078, %if.end.sw.bb227_crit_edge1004 ], [ %.pre1097, %if.end.sw.bb227_crit_edge1003 ], [ %.pre1082, %if.end.sw.bb227_crit_edge1002 ], [ %.pre1087, %if.end.sw.bb227_crit_edge1001 ], [ %.pre1100, %if.end.sw.bb227_crit_edge1000 ], [ %.pre1080, %if.end.sw.bb227_crit_edge ], [ %17, %sw.bb44 ]
  %arrayidx229 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 1
  %rtx230 = bitcast %union.rtunion_def* %arrayidx229 to %struct.rtx_def**
  %tobool231 = icmp eq %struct.rtx_def* %52, null
  br i1 %tobool231, label %if.end293, label %land.lhs.true232

land.lhs.true232:                                 ; preds = %sw.bb227
  %53 = getelementptr inbounds %struct.rtx_def* %52, i64 0, i32 0
  %bf.load236 = load i32* %53, align 8
  %bf.clear237 = and i32 %bf.load236, 65535
  switch i32 %bf.clear237, label %if.then288 [
    i32 67, label %if.end293
    i32 68, label %if.end293
    i32 54, label %if.end293
    i32 55, label %if.end293
    i32 58, label %if.end293
    i32 134, label %if.end293
    i32 56, label %if.end293
    i32 140, label %if.end293
  ]

if.then288:                                       ; preds = %land.lhs.true232
  %call292 = call fastcc i32 @instantiate_virtual_regs_1(%struct.rtx_def** %rtx230, %struct.rtx_def* %object, i32 %extra_insns)
  br label %if.end293

if.end293:                                        ; preds = %land.lhs.true232, %land.lhs.true232, %land.lhs.true232, %land.lhs.true232, %land.lhs.true232, %land.lhs.true232, %land.lhs.true232, %land.lhs.true232, %sw.bb227, %if.then288
  %arrayidx295 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 0
  %rtx296 = bitcast %union.rtunion_def* %arrayidx295 to %struct.rtx_def**
  br label %restart.backedge

restart.backedge:                                 ; preds = %if.end293, %sw.bb449, %if.end486, %if.else15.i797
  %loc.addr.0.be = phi %struct.rtx_def** [ %rtx456, %if.end486 ], [ %rtx452, %sw.bb449 ], [ %rtx296, %if.end293 ], [ %rtx103, %if.else15.i797 ]
  %54 = load %struct.rtx_def** %loc.addr.0.be, align 8, !tbaa !9
  %cmp = icmp eq %struct.rtx_def* %54, null
  br i1 %cmp, label %return, label %if.end

sw.bb297:                                         ; preds = %if.end
  %arrayidx299 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 0
  %rtx300 = bitcast %union.rtunion_def* %arrayidx299 to %struct.rtx_def**
  %55 = load %struct.rtx_def** %rtx300, align 8, !tbaa !9
  %56 = getelementptr inbounds %struct.rtx_def* %55, i64 0, i32 0
  %bf.load301 = load i32* %56, align 8
  %bf.clear302 = and i32 %bf.load301, 65535
  switch i32 %bf.clear302, label %lor.lhs.false320 [
    i32 67, label %return
    i32 68, label %return
    i32 54, label %return
    i32 58, label %return
    i32 55, label %return
  ]

lor.lhs.false320:                                 ; preds = %sw.bb297
  %57 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 5), align 8, !tbaa !9
  %cmp321 = icmp eq %struct.rtx_def* %55, %57
  %58 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 4), align 8
  %cmp323 = icmp eq %struct.rtx_def* %55, %58
  %or.cond747 = or i1 %cmp321, %cmp323
  %59 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 3), align 8
  %cmp325 = icmp eq %struct.rtx_def* %55, %59
  %or.cond748 = or i1 %or.cond747, %cmp325
  br i1 %or.cond748, label %return, label %if.end327

if.end327:                                        ; preds = %lor.lhs.false320
  %cmp330 = icmp eq i32 %bf.clear302, 75
  br i1 %cmp330, label %land.lhs.true331, label %if.end382

land.lhs.true331:                                 ; preds = %if.end327
  %arrayidx333 = getelementptr inbounds %struct.rtx_def* %55, i64 0, i32 1, i64 1
  %rtx334 = bitcast %union.rtunion_def* %arrayidx333 to %struct.rtx_def**
  %60 = load %struct.rtx_def** %rtx334, align 8, !tbaa !9
  %61 = getelementptr inbounds %struct.rtx_def* %60, i64 0, i32 0
  %bf.load335 = load i32* %61, align 8
  %bf.clear336 = and i32 %bf.load335, 65535
  switch i32 %bf.clear336, label %if.end382 [
    i32 67, label %land.lhs.true366
    i32 68, label %land.lhs.true366
    i32 54, label %land.lhs.true366
    i32 58, label %land.lhs.true366
    i32 55, label %land.lhs.true366
  ]

land.lhs.true366:                                 ; preds = %land.lhs.true331, %land.lhs.true331, %land.lhs.true331, %land.lhs.true331, %land.lhs.true331
  %arrayidx368 = getelementptr inbounds %struct.rtx_def* %55, i64 0, i32 1, i64 0
  %rtx369 = bitcast %union.rtunion_def* %arrayidx368 to %struct.rtx_def**
  %62 = load %struct.rtx_def** %rtx369, align 8, !tbaa !9
  %cmp370 = icmp eq %struct.rtx_def* %62, %59
  %cmp375 = icmp eq %struct.rtx_def* %62, %58
  %or.cond749 = or i1 %cmp370, %cmp375
  %cmp380 = icmp eq %struct.rtx_def* %62, %57
  %or.cond750 = or i1 %or.cond749, %cmp380
  br i1 %or.cond750, label %return, label %if.end382

if.end382:                                        ; preds = %land.lhs.true366, %land.lhs.true331, %if.end327
  %63 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 7), align 8, !tbaa !9
  %cmp383 = icmp eq %struct.rtx_def* %55, %63
  %64 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 6), align 8
  %cmp385 = icmp eq %struct.rtx_def* %55, %64
  %or.cond751 = or i1 %cmp383, %cmp385
  br i1 %or.cond751, label %if.then435, label %lor.lhs.false386

lor.lhs.false386:                                 ; preds = %if.end382
  br i1 %cmp330, label %land.lhs.true390, label %sw.bb449

land.lhs.true390:                                 ; preds = %lor.lhs.false386
  %arrayidx392 = getelementptr inbounds %struct.rtx_def* %55, i64 0, i32 1, i64 1
  %rtx393 = bitcast %union.rtunion_def* %arrayidx392 to %struct.rtx_def**
  %65 = load %struct.rtx_def** %rtx393, align 8, !tbaa !9
  %66 = getelementptr inbounds %struct.rtx_def* %65, i64 0, i32 0
  %bf.load394 = load i32* %66, align 8
  %bf.clear395 = and i32 %bf.load394, 65535
  switch i32 %bf.clear395, label %sw.bb449 [
    i32 67, label %land.lhs.true425
    i32 68, label %land.lhs.true425
    i32 54, label %land.lhs.true425
    i32 58, label %land.lhs.true425
    i32 55, label %land.lhs.true425
  ]

land.lhs.true425:                                 ; preds = %land.lhs.true390, %land.lhs.true390, %land.lhs.true390, %land.lhs.true390, %land.lhs.true390
  %.in.in = getelementptr inbounds %struct.rtx_def* %55, i64 0, i32 1, i64 0
  %.in = bitcast %union.rtunion_def* %.in.in to %struct.rtx_def**
  %67 = load %struct.rtx_def** %.in, align 8
  %cmp429 = icmp eq %struct.rtx_def* %67, %63
  %cmp434 = icmp eq %struct.rtx_def* %67, %64
  %or.cond752 = or i1 %cmp429, %cmp434
  br i1 %or.cond752, label %if.then435, label %sw.bb449

if.then435:                                       ; preds = %land.lhs.true425, %if.end382
  %cond442 = select i1 %tobool439, %struct.rtx_def* %object, %struct.rtx_def* %1
  %call443 = call fastcc i32 @instantiate_virtual_regs_1(%struct.rtx_def** %rtx300, %struct.rtx_def* %cond442, i32 0)
  %tobool444 = icmp eq i32 %call443, 0
  br i1 %tobool444, label %if.end446, label %return

if.end446:                                        ; preds = %if.then435
  %call447 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %1) #5
  store %struct.rtx_def* %call447, %struct.rtx_def** %loc.addr.0867, align 8, !tbaa !9
  br label %sw.bb449

sw.bb449:                                         ; preds = %land.lhs.true425, %land.lhs.true390, %lor.lhs.false386, %if.end446, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end
  %x.0 = phi %struct.rtx_def* [ %1, %if.end ], [ %1, %if.end ], [ %1, %if.end ], [ %1, %if.end ], [ %1, %if.end ], [ %1, %if.end ], [ %1, %if.end ], [ %1, %if.end ], [ %1, %if.end ], [ %1, %if.end ], [ %1, %if.end ], [ %1, %if.end ], [ %1, %if.end ], [ %1, %if.end ], [ %1, %if.end ], [ %1, %if.end ], [ %1, %if.end ], [ %1, %if.end ], [ %1, %if.end ], [ %1, %if.end ], [ %1, %if.end ], [ %call447, %if.end446 ], [ %1, %lor.lhs.false386 ], [ %1, %land.lhs.true390 ], [ %1, %land.lhs.true425 ]
  %arrayidx451 = getelementptr inbounds %struct.rtx_def* %x.0, i64 0, i32 1, i64 0
  %rtx452 = bitcast %union.rtunion_def* %arrayidx451 to %struct.rtx_def**
  br label %restart.backedge

sw.bb453:                                         ; preds = %if.end, %if.end
  %arrayidx455 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 0
  %rtx456 = bitcast %union.rtunion_def* %arrayidx455 to %struct.rtx_def**
  %68 = load %struct.rtx_def** %rtx456, align 8, !tbaa !9
  %69 = getelementptr inbounds %struct.rtx_def* %68, i64 0, i32 0
  %bf.load457 = load i32* %69, align 8
  %bf.clear458 = and i32 %bf.load457, 65535
  %cmp459 = icmp eq i32 %bf.clear458, 66
  br i1 %cmp459, label %land.lhs.true460, label %lor.lhs.false472

land.lhs.true460:                                 ; preds = %sw.bb453
  %arrayidx465 = getelementptr inbounds %struct.rtx_def* %68, i64 0, i32 1, i64 0
  %rtx466 = bitcast %union.rtunion_def* %arrayidx465 to %struct.rtx_def**
  %call470 = call fastcc i32 @instantiate_virtual_regs_1(%struct.rtx_def** %rtx466, %struct.rtx_def* %68, i32 0)
  %tobool471 = icmp eq i32 %call470, 0
  br i1 %tobool471, label %land.lhs.true460.lor.lhs.false472_crit_edge, label %return

land.lhs.true460.lor.lhs.false472_crit_edge:      ; preds = %land.lhs.true460
  %.pre1122 = load %struct.rtx_def** %rtx456, align 8, !tbaa !9
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %.pre1122, i64 0, i32 0
  %bf.load476.pre = load i32* %.phi.trans.insert, align 8
  br label %lor.lhs.false472

lor.lhs.false472:                                 ; preds = %land.lhs.true460.lor.lhs.false472_crit_edge, %sw.bb453
  %bf.load476 = phi i32 [ %bf.load476.pre, %land.lhs.true460.lor.lhs.false472_crit_edge ], [ %bf.load457, %sw.bb453 ]
  %70 = phi %struct.rtx_def* [ %.pre1122, %land.lhs.true460.lor.lhs.false472_crit_edge ], [ %68, %sw.bb453 ]
  %bf.clear477 = and i32 %bf.load476, 65535
  %cmp478 = icmp eq i32 %bf.clear477, 61
  br i1 %cmp478, label %land.lhs.true479, label %if.end486

land.lhs.true479:                                 ; preds = %lor.lhs.false472
  %call483 = call fastcc i32 @instantiate_virtual_regs_1(%struct.rtx_def** %rtx456, %struct.rtx_def* %object, i32 0)
  %tobool484 = icmp eq i32 %call483, 0
  br i1 %tobool484, label %land.lhs.true479.if.end486_crit_edge, label %return

land.lhs.true479.if.end486_crit_edge:             ; preds = %land.lhs.true479
  %.pre1124 = load %struct.rtx_def** %rtx456, align 8, !tbaa !9
  br label %if.end486

if.end486:                                        ; preds = %land.lhs.true479.if.end486_crit_edge, %lor.lhs.false472
  %71 = phi %struct.rtx_def* [ %.pre1124, %land.lhs.true479.if.end486_crit_edge ], [ %70, %lor.lhs.false472 ]
  %call490 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %71) #5
  %72 = getelementptr inbounds %union.rtunion_def* %arrayidx455, i64 0, i32 0
  %call490.c = ptrtoint %struct.rtx_def* %call490 to i64
  store i64 %call490.c, i64* %72, align 8, !tbaa !9
  br label %restart.backedge

sw.bb497:                                         ; preds = %if.end
  %73 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 6), align 8, !tbaa !9
  %cmp.i753 = icmp eq %struct.rtx_def* %73, %1
  br i1 %cmp.i753, label %instantiate_new_reg.exit769, label %if.else.i755

if.else.i755:                                     ; preds = %sw.bb497
  %74 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 7), align 8, !tbaa !9
  %cmp1.i754 = icmp eq %struct.rtx_def* %74, %1
  br i1 %cmp1.i754, label %instantiate_new_reg.exit769, label %if.else5.i757

if.else5.i757:                                    ; preds = %if.else.i755
  %75 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 8), align 8, !tbaa !9
  %cmp6.i756 = icmp eq %struct.rtx_def* %75, %1
  br i1 %cmp6.i756, label %if.then8.i759, label %if.else10.i761

if.then8.i759:                                    ; preds = %if.else5.i757
  %76 = load i32* @dynamic_offset, align 4, !tbaa !17
  %conv9.i758 = sext i32 %76 to i64
  br label %instantiate_new_reg.exit769

if.else10.i761:                                   ; preds = %if.else5.i757
  %77 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 9), align 8, !tbaa !9
  %cmp11.i760 = icmp eq %struct.rtx_def* %77, %1
  br i1 %cmp11.i760, label %instantiate_new_reg.exit769, label %if.else15.i763

if.else15.i763:                                   ; preds = %if.else10.i761
  %78 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 10), align 8, !tbaa !9
  %cmp16.i762 = icmp eq %struct.rtx_def* %78, %1
  br i1 %cmp16.i762, label %instantiate_new_reg.exit769, label %return

instantiate_new_reg.exit769:                      ; preds = %sw.bb497, %if.else.i755, %if.then8.i759, %if.else10.i761, %if.else15.i763
  %new.0.in.i764 = phi %struct.rtx_def** [ getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), %if.then8.i759 ], [ getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 5), %sw.bb497 ], [ getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 3), %if.else.i755 ], [ getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), %if.else10.i761 ], [ getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 5), %if.else15.i763 ]
  %offset.0.i765 = phi i64 [ %conv9.i758, %if.then8.i759 ], [ 0, %sw.bb497 ], [ 0, %if.else.i755 ], [ 0, %if.else10.i761 ], [ 0, %if.else15.i763 ]
  %new.0.i766 = load %struct.rtx_def** %new.0.in.i764, align 8
  %cmp499 = icmp eq %struct.rtx_def* %new.0.i766, null
  br i1 %cmp499, label %return, label %if.then500

if.then500:                                       ; preds = %instantiate_new_reg.exit769
  %call501 = call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %new.0.i766, i64 %offset.0.i765) #5
  %call502 = call i32 @validate_change(%struct.rtx_def* %object, %struct.rtx_def** %loc.addr.0867, %struct.rtx_def* %call501, i32 0) #5
  %tobool503 = icmp eq i32 %call502, 0
  br i1 %tobool503, label %if.then504, label %return

if.then504:                                       ; preds = %if.then500
  %tobool505 = icmp eq i32 %extra_insns, 0
  br i1 %tobool505, label %return, label %if.end507

if.end507:                                        ; preds = %if.then504
  call void @start_sequence() #5
  %call508 = call %struct.rtx_def* @force_operand(%struct.rtx_def* %call501, %struct.rtx_def* null) #5
  %call509 = call %struct.rtx_def* @get_insns() #5
  call void @end_sequence() #5
  %call510 = call %struct.rtx_def* @emit_insns_before(%struct.rtx_def* %call509, %struct.rtx_def* %object) #5
  %call511 = call i32 @validate_change(%struct.rtx_def* %object, %struct.rtx_def** %loc.addr.0867, %struct.rtx_def* %call508, i32 0) #5
  %tobool512 = icmp eq i32 %call511, 0
  br i1 %tobool512, label %land.lhs.true513, label %return

land.lhs.true513:                                 ; preds = %if.end507
  %call514 = call i32 @validate_replace_rtx(%struct.rtx_def* %1, %struct.rtx_def* %call508, %struct.rtx_def* %object) #5
  %tobool515 = icmp eq i32 %call514, 0
  br i1 %tobool515, label %if.then516, label %return

if.then516:                                       ; preds = %land.lhs.true513
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8]* @.str, i64 0, i64 0), i32 4126, i8* getelementptr inbounds ([27 x i8]* @__FUNCTION__.instantiate_virtual_regs_1, i64 0, i64 0)) #8
  unreachable

sw.bb520:                                         ; preds = %if.end
  %arrayidx522 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 0
  %rtx523 = bitcast %union.rtunion_def* %arrayidx522 to %struct.rtx_def**
  %79 = load %struct.rtx_def** %rtx523, align 8, !tbaa !9
  %80 = getelementptr inbounds %struct.rtx_def* %79, i64 0, i32 0
  %bf.load524 = load i32* %80, align 8
  %bf.clear525 = and i32 %bf.load524, 65535
  switch i32 %bf.clear525, label %sw.epilog [
    i32 61, label %return
    i32 66, label %if.then535
  ]

if.then535:                                       ; preds = %sw.bb520
  %arrayidx540 = getelementptr inbounds %struct.rtx_def* %79, i64 0, i32 1, i64 0
  %rtx541 = bitcast %union.rtunion_def* %arrayidx540 to %struct.rtx_def**
  %call542 = call fastcc i32 @instantiate_virtual_regs_1(%struct.rtx_def** %rtx541, %struct.rtx_def* null, i32 0)
  br label %return

sw.epilog.loopexit:                               ; preds = %if.end
  %phitmp = zext i32 %bf.clear to i64
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.epilog.loopexit, %sw.bb520
  %bf.clear975 = phi i64 [ %phitmp, %sw.epilog.loopexit ], [ 70, %sw.bb520 ]
  %arrayidx547 = getelementptr inbounds [153 x i8]* @rtx_length, i64 0, i64 %bf.clear975
  %81 = load i8* %arrayidx547, align 1, !tbaa !22
  %cmp548862 = icmp eq i8 %81, 0
  br i1 %cmp548862, label %return, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %sw.epilog
  %arrayidx545 = getelementptr inbounds [153 x i8*]* @rtx_format, i64 0, i64 %bf.clear975
  %82 = load i8** %arrayidx545, align 8, !tbaa !9
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc586
  %indvars.iv998 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next999, %for.inc586 ]
  %fmt.0864 = phi i8* [ %82, %for.body.lr.ph ], [ %incdec.ptr, %for.inc586 ]
  %83 = load i8* %fmt.0864, align 1, !tbaa !22
  switch i8 %83, label %for.inc586 [
    i8 101, label %if.then553
    i8 69, label %for.cond567.preheader
  ]

for.cond567.preheader:                            ; preds = %for.body
  %arrayidx570 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 %indvars.iv998
  %rtvec = bitcast %union.rtunion_def* %arrayidx570 to %struct.rtvec_def**
  %84 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !9
  %num_elem858 = getelementptr inbounds %struct.rtvec_def* %84, i64 0, i32 0
  %85 = load i32* %num_elem858, align 4, !tbaa !75
  %cmp571859 = icmp sgt i32 %85, 0
  br i1 %cmp571859, label %for.body573, label %for.inc586

if.then553:                                       ; preds = %for.body
  %arrayidx556 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 %indvars.iv998
  %rtx557 = bitcast %union.rtunion_def* %arrayidx556 to %struct.rtx_def**
  %call558 = call fastcc i32 @instantiate_virtual_regs_1(%struct.rtx_def** %rtx557, %struct.rtx_def* %object, i32 %extra_insns)
  %tobool559 = icmp eq i32 %call558, 0
  br i1 %tobool559, label %return, label %for.inc586

for.cond567:                                      ; preds = %for.body573
  %86 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !9
  %num_elem = getelementptr inbounds %struct.rtvec_def* %86, i64 0, i32 0
  %87 = load i32* %num_elem, align 4, !tbaa !75
  %88 = trunc i64 %indvars.iv.next to i32
  %cmp571 = icmp slt i32 %88, %87
  br i1 %cmp571, label %for.body573, label %for.inc586

for.body573:                                      ; preds = %for.cond567.preheader, %for.cond567
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.cond567 ], [ 0, %for.cond567.preheader ]
  %89 = phi %struct.rtvec_def* [ %86, %for.cond567 ], [ %84, %for.cond567.preheader ]
  %arrayidx579 = getelementptr inbounds %struct.rtvec_def* %89, i64 0, i32 1, i64 %indvars.iv
  %call580 = call fastcc i32 @instantiate_virtual_regs_1(%struct.rtx_def** %arrayidx579, %struct.rtx_def* %object, i32 %extra_insns)
  %tobool581 = icmp eq i32 %call580, 0
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  br i1 %tobool581, label %return, label %for.cond567

for.inc586:                                       ; preds = %for.cond567, %for.cond567.preheader, %for.body, %if.then553
  %indvars.iv.next999 = add nuw nsw i64 %indvars.iv998, 1
  %incdec.ptr = getelementptr inbounds i8* %fmt.0864, i64 1
  %conv = zext i8 %81 to i32
  %90 = trunc i64 %indvars.iv.next999 to i32
  %cmp548 = icmp slt i32 %90, %conv
  br i1 %cmp548, label %for.body, label %return

return:                                           ; preds = %restart.backedge, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %sw.bb297, %sw.bb297, %sw.bb297, %sw.bb297, %sw.bb297, %lor.lhs.false320, %land.lhs.true366, %if.then435, %land.lhs.true460, %land.lhs.true479, %restart.outer.backedge, %if.then143, %if.then553, %for.inc586, %for.body573, %entry, %sw.epilog, %if.else15.i763, %sw.bb520, %instantiate_new_reg.exit769, %if.then500, %if.end507, %land.lhs.true513, %if.then504, %cond.false, %if.then203, %if.else206, %land.lhs.true219, %cond.true, %land.lhs.true162, %if.end21, %if.then535, %if.then186
  %retval.0 = phi i32 [ 1, %if.then535 ], [ 0, %if.then186 ], [ 1, %if.end21 ], [ 1, %land.lhs.true162 ], [ 1, %cond.true ], [ 1, %land.lhs.true219 ], [ 1, %if.else206 ], [ 1, %if.then203 ], [ 1, %cond.false ], [ 0, %if.then504 ], [ 1, %land.lhs.true513 ], [ 1, %if.end507 ], [ 1, %if.then500 ], [ 1, %instantiate_new_reg.exit769 ], [ 1, %sw.bb520 ], [ 1, %if.else15.i763 ], [ 1, %sw.epilog ], [ 1, %entry ], [ 0, %for.body573 ], [ 0, %if.then553 ], [ 1, %for.inc586 ], [ 1, %if.then143 ], [ 1, %restart.outer.backedge ], [ 1, %land.lhs.true479 ], [ 1, %land.lhs.true460 ], [ 1, %if.then435 ], [ 1, %land.lhs.true366 ], [ 1, %lor.lhs.false320 ], [ 1, %sw.bb297 ], [ 1, %sw.bb297 ], [ 1, %sw.bb297 ], [ 1, %sw.bb297 ], [ 1, %sw.bb297 ], [ 1, %if.end ], [ 1, %if.end ], [ 1, %if.end ], [ 1, %if.end ], [ 1, %if.end ], [ 1, %if.end ], [ 1, %if.end ], [ 1, %if.end ], [ 1, %if.end ], [ 1, %if.end ], [ 1, %if.end ], [ 1, %if.end ], [ 1, %restart.backedge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind readonly uwtable
define i32 @max_parm_reg_num() #4 {
entry:
  %0 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_max_parm_reg = getelementptr inbounds %struct.function* %0, i64 0, i32 37
  %1 = load i32* %x_max_parm_reg, align 4, !tbaa !64
  ret i32 %1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @get_first_nonparm_insn() #0 {
entry:
  %0 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_last_parm_insn = getelementptr inbounds %struct.function* %0, i64 0, i32 36
  %1 = load %struct.rtx_def** %x_last_parm_insn, align 8, !tbaa !78
  %tobool = icmp eq %struct.rtx_def* %1, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 2
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx, align 8, !tbaa !9
  br label %return

if.end:                                           ; preds = %entry
  %call = tail call %struct.rtx_def* @get_insns() #5
  br label %return

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi %struct.rtx_def* [ %2, %if.then ], [ %call, %if.end ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @get_first_block_beg() #0 {
entry:
  %0 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_last_parm_insn.i = getelementptr inbounds %struct.function* %0, i64 0, i32 36
  %1 = load %struct.rtx_def** %x_last_parm_insn.i, align 8, !tbaa !78
  %tobool.i = icmp eq %struct.rtx_def* %1, null
  br i1 %tobool.i, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %entry
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 2
  %rtx.i = bitcast %union.rtunion_def* %arrayidx.i to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !9
  br label %for.cond.preheader

if.end.i:                                         ; preds = %entry
  %call.i = tail call %struct.rtx_def* @get_insns() #5
  br label %for.cond.preheader

for.cond.preheader:                               ; preds = %if.then.i, %if.end.i
  %searcher.0.ph = phi %struct.rtx_def* [ %call.i, %if.end.i ], [ %2, %if.then.i ]
  %tobool9 = icmp eq %struct.rtx_def* %searcher.0.ph, null
  br i1 %tobool9, label %for.end, label %for.body

for.body:                                         ; preds = %for.cond.preheader, %for.inc
  %searcher.010 = phi %struct.rtx_def* [ %5, %for.inc ], [ %searcher.0.ph, %for.cond.preheader ]
  %3 = getelementptr inbounds %struct.rtx_def* %searcher.010, i64 0, i32 0
  %bf.load = load i32* %3, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 37
  br i1 %cmp, label %land.lhs.true, label %for.inc

land.lhs.true:                                    ; preds = %for.body
  %arrayidx = getelementptr inbounds %struct.rtx_def* %searcher.010, i64 0, i32 1, i64 4
  %rtint = bitcast %union.rtunion_def* %arrayidx to i32*
  %4 = load i32* %rtint, align 4, !tbaa !17
  %cmp1 = icmp eq i32 %4, -98
  br i1 %cmp1, label %if.then, label %for.inc

if.then:                                          ; preds = %land.lhs.true
  ret %struct.rtx_def* %searcher.010

for.inc:                                          ; preds = %for.body, %land.lhs.true
  %arrayidx3 = getelementptr inbounds %struct.rtx_def* %searcher.010, i64 0, i32 1, i64 2
  %rtx = bitcast %union.rtunion_def* %arrayidx3 to %struct.rtx_def**
  %5 = load %struct.rtx_def** %rtx, align 8, !tbaa !9
  %tobool = icmp eq %struct.rtx_def* %5, null
  br i1 %tobool, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc, %for.cond.preheader
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8]* @.str, i64 0, i64 0), i32 4250, i8* getelementptr inbounds ([20 x i8]* @__FUNCTION__.get_first_block_beg, i64 0, i64 0)) #8
  unreachable
}

; Function Attrs: nounwind uwtable
define i32 @aggregate_value_p(%union.tree_node* %exp) #0 {
entry:
  %code = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %idxprom184 = zext i32 %bf.clear to i64
  %arrayidx = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom184
  %0 = load i8* %arrayidx, align 1, !tbaa !22
  %cmp = icmp eq i8 %0, 116
  br i1 %cmp, label %cond.end, label %cond.false

cond.false:                                       ; preds = %entry
  %type3 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 1
  %1 = load %union.tree_node** %type3, align 8, !tbaa !56
  %code5.phi.trans.insert = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 0, i32 2
  %bf.load6.pre = load i32* %code5.phi.trans.insert, align 8
  br label %cond.end

cond.end:                                         ; preds = %entry, %cond.false
  %bf.load6 = phi i32 [ %bf.load6.pre, %cond.false ], [ %bf.load, %entry ]
  %cond = phi %union.tree_node* [ %1, %cond.false ], [ %exp, %entry ]
  %code5 = getelementptr inbounds %union.tree_node* %cond, i64 0, i32 0, i32 0, i32 2
  %bf.clear7 = and i32 %bf.load6, 255
  %cmp8 = icmp eq i32 %bf.clear7, 5
  br i1 %cmp8, label %return, label %if.end

if.end:                                           ; preds = %cond.end
  %call = tail call i32 @ix86_return_in_memory(%union.tree_node* %cond) #5
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.end11, label %return

if.end11:                                         ; preds = %if.end
  %bf.load13 = load i32* %code5, align 8
  %bf.clear14 = and i32 %bf.load13, 1024
  %tobool15 = icmp eq i32 %bf.clear14, 0
  br i1 %tobool15, label %if.end17, label %return

if.end17:                                         ; preds = %if.end11
  %2 = load i32* @flag_pcc_struct_return, align 4, !tbaa !17
  %tobool18 = icmp eq i32 %2, 0
  br i1 %tobool18, label %if.end53, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end17
  %bf.clear22 = and i32 %bf.load13, 255
  %bf.clear22.off = add i32 %bf.clear22, -18
  %switch = icmp ult i32 %bf.clear22.off, 5
  br i1 %switch, label %return, label %if.end53

if.end53:                                         ; preds = %land.lhs.true, %if.end17
  %call54 = tail call %struct.rtx_def* @hard_function_value(%union.tree_node* %cond, %union.tree_node* null, i32 0) #5
  %3 = getelementptr inbounds %struct.rtx_def* %call54, i64 0, i32 0
  %bf.load55 = load i32* %3, align 8
  %bf.clear56 = and i32 %bf.load55, 65535
  %cmp57 = icmp eq i32 %bf.clear56, 61
  br i1 %cmp57, label %if.end60, label %return

if.end60:                                         ; preds = %if.end53
  %arrayidx61 = getelementptr inbounds %struct.rtx_def* %call54, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx61 to i32*
  %4 = load i32* %rtuint, align 4, !tbaa !17
  %5 = and i32 %4, -8
  %6 = icmp eq i32 %5, 8
  %.off = add i32 %4, -21
  %7 = icmp ult i32 %.off, 8
  %or.cond = or i1 %6, %7
  %.off185 = add i32 %4, -45
  %8 = icmp ult i32 %.off185, 8
  %or.cond191 = or i1 %or.cond, %8
  %.off186 = add i32 %4, -29
  %9 = icmp ult i32 %.off186, 8
  %or.cond193 = or i1 %or.cond191, %9
  %type86 = bitcast %union.tree_node* %cond to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type* %type86, i64 0, i32 6
  %bf.load87 = load i32* %mode, align 4
  %bf.lshr88 = lshr i32 %bf.load87, 9
  %bf.clear89 = and i32 %bf.lshr88, 127
  br i1 %or.cond193, label %cond.true85, label %cond.false104

cond.true85:                                      ; preds = %if.end60
  %idxprom90188 = zext i32 %bf.clear89 to i64
  %arrayidx91 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom90188
  %10 = load i32* %arrayidx91, align 4, !tbaa !22
  %cmp92 = icmp eq i32 %10, 5
  br i1 %cmp92, label %for.body.lr.ph, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true85
  %cmp101 = icmp eq i32 %10, 6
  %phitmp = select i1 %cmp101, i32 2, i32 1
  br label %for.body.lr.ph

cond.false104:                                    ; preds = %if.end60
  switch i32 %bf.clear89, label %cond.end146 [
    i32 18, label %cond.true112
    i32 24, label %cond.true123
  ]

cond.true112:                                     ; preds = %cond.false104
  %11 = load i32* @target_flags, align 4, !tbaa !17
  %and = lshr i32 %11, 25
  %12 = and i32 %and, 1
  %13 = xor i32 %12, 3
  br label %for.body.lr.ph

cond.true123:                                     ; preds = %cond.false104
  %14 = load i32* @target_flags, align 4, !tbaa !17
  %and124 = lshr i32 %14, 24
  %15 = and i32 %and124, 2
  %16 = xor i32 %15, 6
  br label %for.body.lr.ph

cond.end146:                                      ; preds = %cond.false104
  %idxprom133187 = zext i32 %bf.clear89 to i64
  %arrayidx134 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom133187
  %17 = load i8* %arrayidx134, align 1, !tbaa !22
  %conv135 = zext i8 %17 to i32
  %18 = load i32* @target_flags, align 4, !tbaa !17
  %and136 = lshr i32 %18, 23
  %19 = and i32 %and136, 4
  %20 = add i32 %19, 4
  %add = add i32 %conv135, -1
  %sub = add i32 %add, %20
  %div = sdiv i32 %sub, %20
  %cmp148194 = icmp sgt i32 %div, 0
  br i1 %cmp148194, label %for.body.lr.ph, label %return

for.body.lr.ph:                                   ; preds = %lor.rhs, %cond.true85, %cond.true123, %cond.true112, %cond.end146
  %cond147200 = phi i32 [ %div, %cond.end146 ], [ %13, %cond.true112 ], [ %16, %cond.true123 ], [ 2, %cond.true85 ], [ %phitmp, %lor.rhs ]
  %21 = sext i32 %4 to i64
  br label %for.body

for.cond:                                         ; preds = %for.body
  %22 = trunc i64 %indvars.iv.next to i32
  %cmp148 = icmp slt i32 %22, %cond147200
  br i1 %cmp148, label %for.body, label %return

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.cond ]
  %23 = add nsw i64 %indvars.iv, %21
  %arrayidx152 = getelementptr inbounds [53 x i8]* @call_used_regs, i64 0, i64 %23
  %24 = load i8* %arrayidx152, align 1, !tbaa !22
  %tobool153 = icmp eq i8 %24, 0
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  br i1 %tobool153, label %return, label %for.cond

return:                                           ; preds = %for.body, %for.cond, %cond.end146, %land.lhs.true, %if.end53, %if.end11, %if.end, %cond.end
  %retval.0 = phi i32 [ 0, %cond.end ], [ 1, %if.end ], [ 1, %if.end11 ], [ 1, %land.lhs.true ], [ 0, %if.end53 ], [ 0, %cond.end146 ], [ 1, %for.body ], [ 0, %for.cond ]
  ret i32 %retval.0
}

declare i32 @ix86_return_in_memory(%union.tree_node*) #2

declare %struct.rtx_def* @hard_function_value(%union.tree_node*, %union.tree_node*, i32) #2

; Function Attrs: nounwind uwtable
define void @assign_parms(%union.tree_node* %fndecl) #0 {
entry:
  %args_so_far = alloca %struct.ix86_args, align 4
  %unsignedp = alloca i32, align 4
  %stack_args_size = alloca %struct.args_size, align 8
  %alignment_pad = alloca %struct.args_size, align 8
  %stack_offset = alloca %struct.args_size, align 8
  %arg_size = alloca %struct.args_size, align 8
  %type = getelementptr inbounds %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 1
  %0 = load %union.tree_node** %type, align 8, !tbaa !56
  %arguments = getelementptr inbounds %union.tree_node* %fndecl, i64 0, i32 0, i32 10
  %1 = load %union.tree_node** %arguments, align 8, !tbaa !79
  %2 = load %struct.function** @cfun, align 8, !tbaa !9
  %varargs = getelementptr inbounds %struct.function* %2, i64 0, i32 56
  %3 = bitcast i24* %varargs to i32*
  %bf.load = load i32* %3, align 8
  %bf.clear = and i32 %bf.load, 65536
  %tobool = icmp ne i32 %bf.clear, 0
  %tobool1 = icmp ne %union.tree_node* %1, null
  %or.cond = and i1 %tobool, %tobool1
  br i1 %or.cond, label %land.lhs.true2, label %land.end

land.lhs.true2:                                   ; preds = %entry
  %call = call %union.tree_node* @tree_last(%union.tree_node* %1) #5
  %cmp = icmp eq %union.tree_node* %call, null
  br i1 %cmp, label %land.end, label %land.lhs.true3

land.lhs.true3:                                   ; preds = %land.lhs.true2
  %name = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 8
  %4 = load %union.tree_node** %name, align 8, !tbaa !80
  %tobool5 = icmp eq %union.tree_node* %4, null
  br i1 %tobool5, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %land.lhs.true3
  %id = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 1
  %5 = getelementptr inbounds i8** %id, i64 1
  %6 = load i8** %5, align 8, !tbaa !81
  %call8 = call i32 @strcmp(i8* %6, i8* getelementptr inbounds ([19 x i8]* @.str2, i64 0, i64 0)) #5
  %lnot = icmp eq i32 %call8, 0
  br label %land.end

land.end:                                         ; preds = %land.lhs.true3, %land.lhs.true2, %land.rhs, %entry
  %7 = phi i1 [ false, %land.lhs.true3 ], [ false, %land.lhs.true2 ], [ false, %entry ], [ %lnot, %land.rhs ]
  %values = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 1
  %8 = load i8** %values, align 8
  %cmp11 = icmp eq i8* %8, null
  br i1 %cmp11, label %land.end17, label %land.rhs12

land.rhs12:                                       ; preds = %land.end
  %9 = bitcast i8* %8 to %union.tree_node*
  %call15 = call %union.tree_node* @tree_last(%union.tree_node* %9) #5
  %value = getelementptr inbounds %union.tree_node* %call15, i64 0, i32 0, i32 2
  %10 = bitcast i32* %value to %union.tree_node**
  %11 = load %union.tree_node** %10, align 8, !tbaa !27
  %12 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 27), align 8, !tbaa !9
  %cmp16 = icmp ne %union.tree_node* %11, %12
  br label %land.end17

land.end17:                                       ; preds = %land.end, %land.rhs12
  %13 = phi i1 [ false, %land.end ], [ %cmp16, %land.rhs12 ]
  %land.ext18 = zext i1 %13 to i32
  %14 = load %struct.function** @cfun, align 8, !tbaa !9
  %stdarg19 = getelementptr inbounds %struct.function* %14, i64 0, i32 56
  %15 = bitcast i24* %stdarg19 to i32*
  %bf.load20 = load i32* %15, align 8
  %bf.shl = shl nuw nsw i32 %land.ext18, 17
  %bf.clear21 = and i32 %bf.load20, -131073
  %bf.set = or i32 %bf.clear21, %bf.shl
  store i32 %bf.set, i32* %15, align 8
  %16 = load i8* getelementptr inbounds ([53 x i8]* @fixed_regs, i64 0, i64 16), align 1, !tbaa !22
  %tobool22 = icmp eq i8 %16, 0
  %17 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 6), align 8, !tbaa !9
  br i1 %tobool22, label %if.then, label %if.end

if.then:                                          ; preds = %land.end17
  %call23 = call %struct.rtx_def* @copy_to_reg(%struct.rtx_def* %17) #5
  br label %if.end

if.end:                                           ; preds = %land.end17, %if.then
  %internal_arg_pointer.0 = phi %struct.rtx_def* [ %call23, %if.then ], [ %17, %land.end17 ]
  %18 = load %struct.function** @cfun, align 8, !tbaa !9
  %internal_arg_pointer24 = getelementptr inbounds %struct.function* %18, i64 0, i32 15
  store %struct.rtx_def* %internal_arg_pointer.0, %struct.rtx_def** %internal_arg_pointer24, align 8, !tbaa !84
  %constant = getelementptr inbounds %struct.args_size* %stack_args_size, i64 0, i32 0
  %var = getelementptr inbounds %struct.args_size* %stack_args_size, i64 0, i32 1
  %result = getelementptr inbounds %union.tree_node* %fndecl, i64 0, i32 0, i32 11
  %19 = bitcast %struct.args_size* %stack_args_size to i8*
  call void @llvm.memset.p0i8.i64(i8* %19, i8 0, i64 16, i32 8, i1 false)
  %20 = load %union.tree_node** %result, align 8, !tbaa !85
  %call26 = call i32 @aggregate_value_p(%union.tree_node* %20)
  %tobool27 = icmp eq i32 %call26, 0
  br i1 %tobool27, label %if.end44, label %land.lhs.true28

land.lhs.true28:                                  ; preds = %if.end
  %21 = load %struct.function** @cfun, align 8, !tbaa !9
  %returns_pcc_struct = getelementptr inbounds %struct.function* %21, i64 0, i32 56
  %22 = bitcast i24* %returns_pcc_struct to i32*
  %bf.load29 = load i32* %22, align 8
  %bf.clear31 = and i32 %bf.load29, 2
  %tobool32 = icmp eq i32 %bf.clear31, 0
  %23 = load %struct.rtx_def** @struct_value_incoming_rtx, align 8
  %cmp34 = icmp eq %struct.rtx_def* %23, null
  %or.cond1512 = and i1 %tobool32, %cmp34
  br i1 %or.cond1512, label %if.then36, label %if.end44

if.then36:                                        ; preds = %land.lhs.true28
  %type39 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 1
  %24 = load %union.tree_node** %type39, align 8, !tbaa !56
  %call40 = call %union.tree_node* @build_pointer_type(%union.tree_node* %24) #5
  %call41 = call %union.tree_node* @build_decl(i32 35, %union.tree_node* null, %union.tree_node* %call40) #5
  %initial = getelementptr inbounds %union.tree_node* %call41, i64 0, i32 0, i32 12
  store %union.tree_node* %call40, %union.tree_node** %initial, align 8, !tbaa !61
  %chain = getelementptr inbounds %union.tree_node* %call41, i64 0, i32 0, i32 0, i32 0
  store %union.tree_node* %1, %union.tree_node** %chain, align 8, !tbaa !30
  br label %if.end44

if.end44:                                         ; preds = %if.end, %land.lhs.true28, %if.then36
  %function_result_decl.0 = phi %union.tree_node* [ %call41, %if.then36 ], [ null, %land.lhs.true28 ], [ null, %if.end ]
  %fnargs.0 = phi %union.tree_node* [ %call41, %if.then36 ], [ %1, %land.lhs.true28 ], [ %1, %if.end ]
  %25 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_max_parm_reg = getelementptr inbounds %struct.function* %25, i64 0, i32 37
  store i32 58, i32* %x_max_parm_reg, align 4, !tbaa !64
  %call47 = call noalias i8* @xcalloc(i64 58, i64 8) #5
  %26 = bitcast i8* %call47 to %struct.rtx_def**
  %27 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_parm_reg_stack_loc = getelementptr inbounds %struct.function* %27, i64 0, i32 38
  store %struct.rtx_def** %26, %struct.rtx_def*** %x_parm_reg_stack_loc, align 8, !tbaa !31
  call void @init_cumulative_args(%struct.ix86_args* %args_so_far, %union.tree_node* %0, %struct.rtx_def* null) #5
  %28 = load %struct.function** @cfun, align 8, !tbaa !9
  %pretend_args_size = getelementptr inbounds %struct.function* %28, i64 0, i32 10
  store i32 0, i32* %pretend_args_size, align 4, !tbaa !86
  %tobool481909 = icmp eq %union.tree_node* %fnargs.0, null
  br i1 %tobool481909, label %for.end1371, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.end44
  %29 = bitcast %struct.ix86_args* %args_so_far to i8*
  %var204 = getelementptr inbounds %struct.args_size* %stack_offset, i64 0, i32 1
  %constant208 = getelementptr inbounds %struct.args_size* %stack_offset, i64 0, i32 0
  %constant351 = getelementptr inbounds %struct.args_size* %arg_size, i64 0, i32 0
  %var354 = getelementptr inbounds %struct.args_size* %arg_size, i64 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc1368
  %parm.01913 = phi %union.tree_node* [ %fnargs.0, %for.body.lr.ph ], [ %223, %for.inc1368 ]
  %varargs_setup.01912 = phi i32 [ 0, %for.body.lr.ph ], [ %varargs_setup.2, %for.inc1368 ]
  %conversion_insns.01910 = phi %struct.rtx_def* [ null, %for.body.lr.ph ], [ %conversion_insns.7, %for.inc1368 ]
  %initial50 = getelementptr inbounds %union.tree_node* %parm.01913, i64 0, i32 0, i32 12
  %30 = load %union.tree_node** %initial50, align 8, !tbaa !61
  %type52 = getelementptr inbounds %union.tree_node* %parm.01913, i64 0, i32 0, i32 0, i32 1
  %31 = load %union.tree_node** %type52, align 8, !tbaa !56
  br i1 %13, label %for.cond62, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body
  %32 = load %struct.function** @cfun, align 8, !tbaa !9
  %varargs54 = getelementptr inbounds %struct.function* %32, i64 0, i32 56
  %33 = bitcast i24* %varargs54 to i32*
  %bf.load55 = load i32* %33, align 8
  %bf.clear57 = and i32 %bf.load55, 65536
  %tobool58 = icmp eq i32 %bf.clear57, 0
  br i1 %tobool58, label %if.end76, label %for.cond62

for.cond62:                                       ; preds = %for.body, %lor.lhs.false, %for.body64
  %parm.0.pn = phi %union.tree_node* [ %tem.0, %for.body64 ], [ %parm.01913, %lor.lhs.false ], [ %parm.01913, %for.body ]
  %tem.0.in = getelementptr inbounds %union.tree_node* %parm.0.pn, i64 0, i32 0, i32 0, i32 0
  %tem.0 = load %union.tree_node** %tem.0.in, align 8
  %cond1893 = icmp eq %union.tree_node* %tem.0, null
  br i1 %cond1893, label %if.end76, label %for.body64

for.body64:                                       ; preds = %for.cond62
  %name66 = getelementptr inbounds %union.tree_node* %tem.0, i64 0, i32 0, i32 8
  %34 = load %union.tree_node** %name66, align 8, !tbaa !80
  %tobool67 = icmp eq %union.tree_node* %34, null
  br i1 %tobool67, label %for.cond62, label %if.end76

if.end76:                                         ; preds = %for.cond62, %for.body64, %lor.lhs.false
  %last_named.0 = phi i32 [ 0, %lor.lhs.false ], [ 1, %for.cond62 ], [ 0, %for.body64 ]
  %tobool77 = icmp ne i32 %last_named.0, 0
  %lnot.ext = xor i32 %last_named.0, 1
  %35 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !9
  %cmp81 = icmp eq %union.tree_node* %31, %35
  br i1 %cmp81, label %if.then92, label %lor.lhs.false83

lor.lhs.false83:                                  ; preds = %if.end76
  %code = getelementptr inbounds %union.tree_node* %parm.01913, i64 0, i32 0, i32 0, i32 2
  %bf.load85 = load i32* %code, align 8
  %bf.clear86 = and i32 %bf.load85, 255
  %cmp87 = icmp ne i32 %bf.clear86, 35
  %cmp90 = icmp eq %union.tree_node* %30, null
  %or.cond1513 = or i1 %cmp87, %cmp90
  br i1 %or.cond1513, label %if.then92, label %if.end107

if.then92:                                        ; preds = %lor.lhs.false83, %if.end76
  %36 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !9
  %call93 = call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %36) #5
  %rtl = getelementptr inbounds %union.tree_node* %parm.01913, i64 0, i32 0, i32 17
  store %struct.rtx_def* %call93, %struct.rtx_def** %rtl, align 8, !tbaa !63
  %tobool97 = icmp eq %struct.rtx_def* %call93, null
  br i1 %tobool97, label %cond.false, label %cond.end

cond.false:                                       ; preds = %if.then92
  call void @make_decl_rtl(%union.tree_node* %parm.01913, i8* null) #5
  %37 = load %struct.rtx_def** %rtl, align 8, !tbaa !63
  br label %cond.end

cond.end:                                         ; preds = %if.then92, %cond.false
  %cond = phi %struct.rtx_def* [ %37, %cond.false ], [ %call93, %if.then92 ]
  %38 = getelementptr inbounds %union.tree_node* %parm.01913, i64 0, i32 0, i32 19, i32 0
  %cond.c = bitcast %struct.rtx_def* %cond to %struct.function*
  store %struct.function* %cond.c, %struct.function** %38, align 8, !tbaa !9
  %used_flag = getelementptr inbounds %union.tree_node* %parm.01913, i64 0, i32 0, i32 0, i32 2
  %bf.load104 = load i32* %used_flag, align 8
  %bf.set106 = or i32 %bf.load104, 65536
  store i32 %bf.set106, i32* %used_flag, align 8
  br label %for.inc1368

if.end107:                                        ; preds = %lor.lhs.false83
  %or.cond1514 = and i1 %7, %tobool77
  br i1 %or.cond1514, label %if.then111, label %if.end112

if.then111:                                       ; preds = %if.end107
  %39 = load %struct.function** @cfun, align 8, !tbaa !9
  %args_info = getelementptr inbounds %struct.function* %39, i64 0, i32 13
  %40 = bitcast %struct.ix86_args* %args_info to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %40, i8* %29, i64 28, i32 4, i1 false), !tbaa.struct !87
  br label %if.end112

if.end112:                                        ; preds = %if.then111, %if.end107
  %type113 = bitcast %union.tree_node* %30 to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type* %type113, i64 0, i32 6
  %bf.load114 = load i32* %mode, align 4
  %bf.lshr115 = lshr i32 %bf.load114, 9
  %bf.clear116 = and i32 %bf.lshr115, 127
  %type117 = bitcast %union.tree_node* %31 to %struct.tree_type*
  %mode118 = getelementptr inbounds %struct.tree_type* %type117, i64 0, i32 6
  %bf.load119 = load i32* %mode118, align 4
  %bf.lshr120 = lshr i32 %bf.load119, 9
  %bf.clear121 = and i32 %bf.lshr120, 127
  %cmp122 = icmp eq i32 %bf.clear121, 0
  br i1 %cmp122, label %if.then124, label %if.end141

if.then124:                                       ; preds = %if.end112
  %41 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !9
  %rtl126 = getelementptr inbounds %union.tree_node* %parm.01913, i64 0, i32 0, i32 17
  store %struct.rtx_def* %41, %struct.rtx_def** %rtl126, align 8, !tbaa !63
  %tobool129 = icmp eq %struct.rtx_def* %41, null
  br i1 %tobool129, label %cond.false133, label %cond.end136

cond.false133:                                    ; preds = %if.then124
  call void @make_decl_rtl(%union.tree_node* %parm.01913, i8* null) #5
  %42 = load %struct.rtx_def** %rtl126, align 8, !tbaa !63
  br label %cond.end136

cond.end136:                                      ; preds = %if.then124, %cond.false133
  %cond137 = phi %struct.rtx_def* [ %42, %cond.false133 ], [ %41, %if.then124 ]
  %43 = getelementptr inbounds %union.tree_node* %parm.01913, i64 0, i32 0, i32 19, i32 0
  %cond137.c = bitcast %struct.rtx_def* %cond137 to %struct.function*
  store %struct.function* %cond137.c, %struct.function** %43, align 8, !tbaa !9
  br label %for.inc1368

if.end141:                                        ; preds = %if.end112
  %transparent_union = getelementptr inbounds %union.tree_node* %parm.01913, i64 0, i32 0, i32 5
  %44 = bitcast i48* %transparent_union to i64*
  %bf.load143 = load i64* %44, align 8
  %bf.cast = and i64 %bf.load143, 524288
  %tobool146 = icmp eq i64 %bf.cast, 0
  br i1 %tobool146, label %lor.lhs.false147, label %if.then160

lor.lhs.false147:                                 ; preds = %if.end141
  %code149 = getelementptr inbounds %union.tree_node* %30, i64 0, i32 0, i32 0, i32 2
  %bf.load150 = load i32* %code149, align 8
  %bf.clear151 = and i32 %bf.load150, 255
  %cmp152 = icmp ne i32 %bf.clear151, 21
  %bf.clear158 = and i32 %bf.load114, 524288
  %tobool159 = icmp eq i32 %bf.clear158, 0
  %or.cond1884 = or i1 %cmp152, %tobool159
  br i1 %or.cond1884, label %if.end165, label %if.then160

if.then160:                                       ; preds = %lor.lhs.false147, %if.end141
  %values162 = getelementptr inbounds %union.tree_node* %30, i64 0, i32 0, i32 1
  %45 = load i8** %values162, align 8
  %type164 = getelementptr inbounds i8* %45, i64 8
  %46 = bitcast i8* %type164 to %union.tree_node**
  %47 = load %union.tree_node** %46, align 8, !tbaa !56
  br label %if.end165

if.end165:                                        ; preds = %lor.lhs.false147, %if.then160
  %passed_type.0 = phi %union.tree_node* [ %47, %if.then160 ], [ %30, %lor.lhs.false147 ]
  %size = getelementptr inbounds %union.tree_node* %passed_type.0, i64 0, i32 0, i32 2
  %48 = bitcast i32* %size to %union.tree_node**
  %49 = load %union.tree_node** %48, align 8, !tbaa !88
  %code168 = getelementptr inbounds %union.tree_node* %49, i64 0, i32 0, i32 0, i32 2
  %bf.load169 = load i32* %code168, align 8
  %bf.clear170 = and i32 %bf.load169, 255
  %cmp171 = icmp eq i32 %bf.clear170, 25
  br i1 %cmp171, label %lor.lhs.false178, label %land.lhs.true173

land.lhs.true173:                                 ; preds = %if.end165
  %call176 = call i32 @contains_placeholder_p(%union.tree_node* %49) #5
  %tobool177 = icmp eq i32 %call176, 0
  br i1 %tobool177, label %lor.lhs.false178, label %if.then184

lor.lhs.false178:                                 ; preds = %land.lhs.true173, %if.end165
  %addressable_flag = getelementptr inbounds %union.tree_node* %passed_type.0, i64 0, i32 0, i32 0, i32 2
  %bf.load180 = load i32* %addressable_flag, align 8
  %bf.clear182 = and i32 %bf.load180, 1024
  %tobool183 = icmp eq i32 %bf.clear182, 0
  br i1 %tobool183, label %if.end188, label %if.then184

if.then184:                                       ; preds = %land.lhs.true173, %lor.lhs.false178
  %call185 = call %union.tree_node* @build_pointer_type(%union.tree_node* %passed_type.0) #5
  %50 = load i32* @target_flags, align 4, !tbaa !17
  %and = lshr i32 %50, 25
  %51 = and i32 %and, 1
  %52 = or i32 %51, 4
  br label %if.end188

if.end188:                                        ; preds = %lor.lhs.false178, %if.then184
  %nominal_type.0 = phi %union.tree_node* [ %call185, %if.then184 ], [ %31, %lor.lhs.false178 ]
  %passed_type.1 = phi %union.tree_node* [ %call185, %if.then184 ], [ %passed_type.0, %lor.lhs.false178 ]
  %passed_pointer.0 = phi i32 [ 1, %if.then184 ], [ 0, %lor.lhs.false178 ]
  %nominal_mode.0 = phi i32 [ %52, %if.then184 ], [ %bf.clear121, %lor.lhs.false178 ]
  %passed_mode.0 = phi i32 [ %52, %if.then184 ], [ %bf.clear116, %lor.lhs.false178 ]
  %call189 = call %struct.rtx_def* @function_arg(%struct.ix86_args* %args_so_far, i32 %passed_mode.0, %union.tree_node* %passed_type.1, i32 %lnot.ext) #5
  %tobool194 = icmp eq i32 %last_named.0, 0
  %tobool196 = icmp ne i32 %varargs_setup.01912, 0
  %or.cond1515 = or i1 %tobool194, %tobool196
  br i1 %or.cond1515, label %if.end199, label %if.then197

if.then197:                                       ; preds = %if.end188
  %53 = load %struct.function** @cfun, align 8, !tbaa !9
  %pretend_args_size198 = getelementptr inbounds %struct.function* %53, i64 0, i32 10
  call void @ix86_setup_incoming_varargs(%struct.ix86_args* %args_so_far, i32 %passed_mode.0, %union.tree_node* %passed_type.1, i32* %pretend_args_size198, i32 0) #5
  br label %if.end199

if.end199:                                        ; preds = %if.end188, %if.then197
  %varargs_setup.1 = phi i32 [ %varargs_setup.01912, %if.end188 ], [ 1, %if.then197 ]
  %call201 = call %struct.rtx_def* @function_arg(%struct.ix86_args* %args_so_far, i32 %passed_mode.0, %union.tree_node* %passed_type.1, i32 1) #5
  %cmp202 = icmp ne %struct.rtx_def* %call201, null
  %conv203 = zext i1 %cmp202 to i32
  call void @locate_and_pad_parm(i32 %passed_mode.0, %union.tree_node* %passed_type.1, i32 %conv203, %union.tree_node* undef, %struct.args_size* %stack_args_size, %struct.args_size* %stack_offset, %struct.args_size* %arg_size, %struct.args_size* %alignment_pad)
  %54 = load %union.tree_node** %var204, align 8, !tbaa !89
  %cmp205 = icmp eq %union.tree_node* %54, null
  br i1 %cmp205, label %cond.true207, label %cond.false217

cond.true207:                                     ; preds = %if.end199
  %55 = load i64* %constant208, align 8, !tbaa !91
  %call209 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %55) #5
  br label %cond.end226

cond.false217:                                    ; preds = %if.end199
  %56 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 1), align 8, !tbaa !9
  %call219 = call %union.tree_node* @convert(%union.tree_node* %56, %union.tree_node* %54) #5
  %57 = load i64* %constant208, align 8, !tbaa !91
  %call221 = call %union.tree_node* @size_int_wide(i64 %57, i32 1) #5
  %call222 = call %union.tree_node* @size_binop(i32 59, %union.tree_node* %call219, %union.tree_node* %call221) #5
  %call225 = call %struct.rtx_def* @expand_expr(%union.tree_node* %call222, %struct.rtx_def* null, i32 0, i32 0) #5
  br label %cond.end226

cond.end226:                                      ; preds = %cond.false217, %cond.true207
  %cond227 = phi %struct.rtx_def* [ %call209, %cond.true207 ], [ %call225, %cond.false217 ]
  %58 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !9
  %cmp228 = icmp eq %struct.rtx_def* %cond227, %58
  br i1 %cmp228, label %if.then230, label %if.else232

if.then230:                                       ; preds = %cond.end226
  %call231 = call %struct.rtx_def* @gen_rtx_MEM(i32 %passed_mode.0, %struct.rtx_def* %internal_arg_pointer.0) #5
  br label %if.end238

if.else232:                                       ; preds = %cond.end226
  %59 = load i32* @target_flags, align 4, !tbaa !17
  %and233 = lshr i32 %59, 25
  %60 = and i32 %and233, 1
  %61 = or i32 %60, 4
  %call236 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %61, %struct.rtx_def* %internal_arg_pointer.0, %struct.rtx_def* %cond227) #5
  %call237 = call %struct.rtx_def* @gen_rtx_MEM(i32 %passed_mode.0, %struct.rtx_def* %call236) #5
  br label %if.end238

if.end238:                                        ; preds = %if.else232, %if.then230
  %stack_parm.0 = phi %struct.rtx_def* [ %call231, %if.then230 ], [ %call237, %if.else232 ]
  call void @set_mem_attributes(%struct.rtx_def* %stack_parm.0, %union.tree_node* %parm.01913, i32 1) #5
  %cmp239 = icmp eq %union.tree_node* %passed_type.1, null
  br i1 %cmp239, label %if.end285, label %land.lhs.true241

land.lhs.true241:                                 ; preds = %if.end238
  %size243 = getelementptr inbounds %union.tree_node* %passed_type.1, i64 0, i32 0, i32 2
  %62 = bitcast i32* %size243 to %union.tree_node**
  %63 = load %union.tree_node** %62, align 8, !tbaa !88
  %code245 = getelementptr inbounds %union.tree_node* %63, i64 0, i32 0, i32 0, i32 2
  %bf.load246 = load i32* %code245, align 8
  %bf.clear247 = and i32 %bf.load246, 255
  %cmp248 = icmp eq i32 %bf.clear247, 25
  br i1 %cmp248, label %lor.lhs.false250, label %if.end285

lor.lhs.false250:                                 ; preds = %land.lhs.true241
  %addressable_flag252 = getelementptr inbounds %union.tree_node* %passed_type.1, i64 0, i32 0, i32 0, i32 2
  %bf.load253 = load i32* %addressable_flag252, align 8
  %bf.clear255 = and i32 %bf.load253, 1024
  %tobool256 = icmp ne i32 %bf.clear255, 0
  %cmp258 = icmp eq i32 %passed_mode.0, 6
  %or.cond1516 = or i1 %tobool256, %cmp258
  br i1 %or.cond1516, label %if.end285, label %lor.lhs.false260

lor.lhs.false260:                                 ; preds = %lor.lhs.false250
  %cmp261 = icmp eq i32 %passed_mode.0, 51
  br i1 %cmp261, label %land.lhs.true275, label %if.end285

land.lhs.true275:                                 ; preds = %lor.lhs.false260
  %call276 = call i64 @int_size_in_bytes(%union.tree_node* %passed_type.1) #5
  br label %if.end285

if.end285:                                        ; preds = %if.end238, %lor.lhs.false250, %land.lhs.true241, %land.lhs.true275, %lor.lhs.false260
  %entry_parm.0 = phi %struct.rtx_def* [ %call189, %land.lhs.true275 ], [ %call189, %lor.lhs.false260 ], [ %call189, %if.end238 ], [ null, %land.lhs.true241 ], [ null, %lor.lhs.false250 ]
  %cmp328 = icmp eq %struct.rtx_def* %entry_parm.0, null
  %entry_parm.2 = select i1 %cmp328, %struct.rtx_def* %stack_parm.0, %struct.rtx_def* %entry_parm.0
  %64 = getelementptr inbounds %union.tree_node* %parm.01913, i64 0, i32 0, i32 19, i32 0
  %entry_parm.2.c = bitcast %struct.rtx_def* %entry_parm.2 to %struct.function*
  store %struct.function* %entry_parm.2.c, %struct.function** %64, align 8, !tbaa !9
  %cmp335 = icmp eq %struct.rtx_def* %entry_parm.2, %stack_parm.0
  br i1 %cmp335, label %if.then350, label %lor.lhs.false337

lor.lhs.false337:                                 ; preds = %if.end285
  %65 = getelementptr inbounds %struct.rtx_def* %entry_parm.2, i64 0, i32 0
  %bf.load338 = load i32* %65, align 8
  %bf.clear339 = and i32 %bf.load338, 65535
  %cmp340 = icmp eq i32 %bf.clear339, 39
  br i1 %cmp340, label %land.lhs.true342, label %if.end380

land.lhs.true342:                                 ; preds = %lor.lhs.false337
  %arrayidx344 = getelementptr inbounds %struct.rtx_def* %entry_parm.2, i64 0, i32 1, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx344 to %struct.rtvec_def**
  %66 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !9
  %arrayidx345 = getelementptr inbounds %struct.rtvec_def* %66, i64 0, i32 1, i64 0
  %67 = load %struct.rtx_def** %arrayidx345, align 8, !tbaa !9
  %arrayidx347 = getelementptr inbounds %struct.rtx_def* %67, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx347 to %struct.rtx_def**
  %68 = load %struct.rtx_def** %rtx, align 8, !tbaa !9
  %cmp348 = icmp eq %struct.rtx_def* %68, null
  br i1 %cmp348, label %if.then350, label %if.end380

if.then350:                                       ; preds = %land.lhs.true342, %if.end285
  %69 = load i64* %constant351, align 8, !tbaa !91
  %70 = load i64* %constant, align 8, !tbaa !91
  %add353 = add nsw i64 %70, %69
  store i64 %add353, i64* %constant, align 8, !tbaa !91
  %71 = load %union.tree_node** %var354, align 8, !tbaa !89
  %tobool355 = icmp eq %union.tree_node* %71, null
  br i1 %tobool355, label %if.end380, label %do.body

do.body:                                          ; preds = %if.then350
  %call358 = call i32 @host_integerp(%union.tree_node* %71, i32 0) #5
  %tobool359 = icmp eq i32 %call358, 0
  br i1 %tobool359, label %if.else364, label %if.then360

if.then360:                                       ; preds = %do.body
  %call361 = call i64 @tree_low_cst(%union.tree_node* %71, i32 0) #5
  %add363 = add nsw i64 %add353, %call361
  store i64 %add363, i64* %constant, align 8, !tbaa !91
  br label %if.end380

if.else364:                                       ; preds = %do.body
  %72 = load %union.tree_node** %var, align 8, !tbaa !89
  %cmp366 = icmp eq %union.tree_node* %72, null
  %73 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 1), align 8, !tbaa !9
  %call369 = call %union.tree_node* @convert(%union.tree_node* %73, %union.tree_node* %71) #5
  br i1 %cmp366, label %if.then368, label %if.else371

if.then368:                                       ; preds = %if.else364
  store %union.tree_node* %call369, %union.tree_node** %var, align 8, !tbaa !89
  br label %if.end380

if.else371:                                       ; preds = %if.else364
  %call374 = call %union.tree_node* @size_binop(i32 59, %union.tree_node* %72, %union.tree_node* %call369) #5
  store %union.tree_node* %call374, %union.tree_node** %var, align 8, !tbaa !89
  br label %if.end380

if.end380:                                        ; preds = %lor.lhs.false337, %land.lhs.true342, %if.then350, %if.then360, %if.else371, %if.then368
  %stack_parm.1 = phi %struct.rtx_def* [ %stack_parm.0, %if.then360 ], [ %stack_parm.0, %if.then368 ], [ %stack_parm.0, %if.else371 ], [ %stack_parm.0, %if.then350 ], [ null, %land.lhs.true342 ], [ null, %lor.lhs.false337 ]
  call void @function_arg_advance(%struct.ix86_args* %args_so_far, i32 %passed_mode.0, %union.tree_node* %passed_type.1, i32 %lnot.ext) #5
  %call381 = call i32 @ix86_function_arg_boundary(i32 %passed_mode.0, %union.tree_node* %passed_type.1) #5
  %call382 = call i32 @get_mode_alignment(i32 %nominal_mode.0) #5
  %cmp383 = icmp ugt i32 %call382, %call381
  %.stack_parm.1 = select i1 %cmp383, %struct.rtx_def* null, %struct.rtx_def* %stack_parm.1
  %cmp387 = icmp ne %struct.rtx_def* %entry_parm.2, null
  %cmp390 = icmp ne i32 %nominal_mode.0, 51
  %or.cond1517 = and i1 %cmp387, %cmp390
  %or.cond1517.not = xor i1 %or.cond1517, true
  %cmp393 = icmp eq i32 %nominal_mode.0, %passed_mode.0
  %or.cond1886 = or i1 %cmp393, %or.cond1517.not
  %stack_parm.3 = select i1 %or.cond1886, %struct.rtx_def* %.stack_parm.1, %struct.rtx_def* null
  %74 = getelementptr inbounds %struct.rtx_def* %entry_parm.2, i64 0, i32 0
  %bf.load397 = load i32* %74, align 8
  %bf.clear398 = and i32 %bf.load397, 65535
  %cmp399 = icmp eq i32 %bf.clear398, 39
  %or.cond1518 = and i1 %cmp399, %cmp390
  %cmp405 = icmp ne i32 %passed_mode.0, 51
  %or.cond1519 = and i1 %or.cond1518, %cmp405
  br i1 %or.cond1519, label %if.then407, label %if.end485

if.then407:                                       ; preds = %if.end380
  %arrayidx409 = getelementptr inbounds %struct.rtx_def* %entry_parm.2, i64 0, i32 1, i64 0
  %rtvec410 = bitcast %union.rtunion_def* %arrayidx409 to %struct.rtvec_def**
  %75 = load %struct.rtvec_def** %rtvec410, align 8, !tbaa !9
  %num_elem = getelementptr inbounds %struct.rtvec_def* %75, i64 0, i32 0
  %76 = load i32* %num_elem, align 4, !tbaa !75
  %cmp4121904 = icmp sgt i32 %76, 0
  br i1 %cmp4121904, label %for.body414, label %if.end485

for.body414:                                      ; preds = %if.then407, %for.inc482
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc482 ], [ 0, %if.then407 ]
  %arrayidx419 = getelementptr inbounds %struct.rtvec_def* %75, i64 0, i32 1, i64 %indvars.iv
  %77 = load %struct.rtx_def** %arrayidx419, align 8, !tbaa !9
  %fld420 = getelementptr inbounds %struct.rtx_def* %77, i64 0, i32 1
  %rtx422 = bitcast [1 x %union.rtunion_def]* %fld420 to %struct.rtx_def**
  %78 = load %struct.rtx_def** %rtx422, align 8, !tbaa !9
  %cmp423 = icmp eq %struct.rtx_def* %78, null
  br i1 %cmp423, label %for.inc482, label %land.lhs.true425

land.lhs.true425:                                 ; preds = %for.body414
  %79 = getelementptr inbounds %struct.rtx_def* %78, i64 0, i32 0
  %bf.load435 = load i32* %79, align 8
  %bf.clear436 = and i32 %bf.load435, 65535
  %cmp437 = icmp eq i32 %bf.clear436, 61
  br i1 %cmp437, label %land.lhs.true439, label %for.inc482

land.lhs.true439:                                 ; preds = %land.lhs.true425
  %bf.lshr450 = lshr i32 %bf.load435, 16
  %bf.clear451 = and i32 %bf.lshr450, 255
  %cmp452 = icmp eq i32 %bf.clear451, %passed_mode.0
  br i1 %cmp452, label %land.lhs.true454, label %for.inc482

land.lhs.true454:                                 ; preds = %land.lhs.true439
  %arrayidx462 = getelementptr inbounds %struct.rtx_def* %77, i64 0, i32 1, i64 1
  %rtx463 = bitcast %union.rtunion_def* %arrayidx462 to %struct.rtx_def**
  %80 = load %struct.rtx_def** %rtx463, align 8, !tbaa !9
  %rtwint = getelementptr inbounds %struct.rtx_def* %80, i64 0, i32 1, i64 0, i32 0
  %81 = load i64* %rtwint, align 8, !tbaa !60
  %cmp466 = icmp eq i64 %81, 0
  br i1 %cmp466, label %if.then468, label %for.inc482

if.then468:                                       ; preds = %land.lhs.true454
  %.c = bitcast %struct.rtx_def* %78 to %struct.function*
  store %struct.function* %.c, %struct.function** %64, align 8, !tbaa !9
  br label %if.end485

for.inc482:                                       ; preds = %for.body414, %land.lhs.true425, %land.lhs.true439, %land.lhs.true454
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %82 = trunc i64 %indvars.iv.next to i32
  %cmp412 = icmp slt i32 %82, %76
  br i1 %cmp412, label %for.body414, label %if.end485

if.end485:                                        ; preds = %for.inc482, %if.then407, %if.then468, %if.end380
  %entry_parm.3 = phi %struct.rtx_def* [ %78, %if.then468 ], [ %entry_parm.2, %if.end380 ], [ %entry_parm.2, %if.then407 ], [ %entry_parm.2, %for.inc482 ]
  %cmp486 = icmp eq i32 %nominal_mode.0, 51
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %entry_parm.3, i64 0, i32 0
  %bf.load494.pre = load i32* %.phi.trans.insert, align 8
  %bf.clear490 = and i32 %bf.load494.pre, 65535
  %cmp491 = icmp eq i32 %bf.clear490, 39
  %or.cond1929 = or i1 %cmp486, %cmp491
  br i1 %or.cond1929, label %if.then493, label %if.else568

if.then493:                                       ; preds = %if.end485
  %83 = getelementptr inbounds %struct.rtx_def* %entry_parm.3, i64 0, i32 0
  %bf.clear495 = and i32 %bf.load494.pre, 65535
  switch i32 %bf.clear495, label %if.end565 [
    i32 61, label %if.then503
    i32 39, label %if.then503
  ]

if.then503:                                       ; preds = %if.then493, %if.then493
  %84 = load %union.tree_node** %type52, align 8, !tbaa !56
  %call506 = call i64 @int_size_in_bytes(%union.tree_node* %84) #5
  %85 = load i32* @target_flags, align 4, !tbaa !17
  %and507 = lshr i32 %85, 23
  %86 = and i32 %and507, 4
  %87 = add i32 %86, 4
  %conv5101882 = zext i32 %87 to i64
  %add511 = add i64 %call506, 4294967295
  %sub512 = add i64 %add511, %conv5101882
  %neg = xor i32 %86, -4
  %conv5171881 = zext i32 %neg to i64
  %and518 = and i64 %sub512, %conv5171881
  %conv519 = trunc i64 %and518 to i32
  %cmp520 = icmp eq %struct.rtx_def* %stack_parm.3, null
  br i1 %cmp520, label %if.then522, label %if.end540

if.then522:                                       ; preds = %if.then503
  %bf.load523 = load i32* %83, align 8
  %bf.lshr524 = lshr i32 %bf.load523, 16
  %bf.clear525 = and i32 %bf.lshr524, 255
  %sext = shl nuw i64 %and518, 32
  %conv526 = ashr exact i64 %sext, 32
  %88 = load %struct.function** @cfun, align 8, !tbaa !9
  %call.i = call fastcc %struct.rtx_def* @assign_stack_local_1(i32 %bf.clear525, i64 %conv526, i32 0, %struct.function* %88) #5
  call void @set_mem_attributes(%struct.rtx_def* %call.i, %union.tree_node* %parm.01913, i32 1) #5
  br label %if.end540

if.end540:                                        ; preds = %if.then503, %if.then522
  %stack_parm.4 = phi %struct.rtx_def* [ %call.i, %if.then522 ], [ %.stack_parm.1, %if.then503 ]
  %bf.load541 = load i32* %83, align 8
  %bf.clear542 = and i32 %bf.load541, 65535
  %cmp543 = icmp eq i32 %bf.clear542, 39
  br i1 %cmp543, label %if.then545, label %if.else551

if.then545:                                       ; preds = %if.end540
  %call546 = call %struct.rtx_def* @validize_mem(%struct.rtx_def* %stack_parm.4) #5
  %89 = load %union.tree_node** %type52, align 8, !tbaa !56
  %call549 = call i64 @int_size_in_bytes(%union.tree_node* %89) #5
  %conv550 = trunc i64 %call549 to i32
  call void @emit_group_store(%struct.rtx_def* %call546, %struct.rtx_def* %entry_parm.3, i32 %conv550) #5
  br label %if.end565

if.else551:                                       ; preds = %if.end540
  %arrayidx553 = getelementptr inbounds %struct.rtx_def* %entry_parm.3, i64 0, i32 1, i64 0
  %rtuint554 = bitcast %union.rtunion_def* %arrayidx553 to i32*
  %90 = load i32* %rtuint554, align 4, !tbaa !17
  %call555 = call %struct.rtx_def* @validize_mem(%struct.rtx_def* %stack_parm.4) #5
  %91 = load i32* @target_flags, align 4, !tbaa !17
  %and556 = lshr i32 %91, 23
  %92 = and i32 %and556, 4
  %93 = add i32 %92, 4
  %div559 = sdiv i32 %conv519, %93
  %94 = load %union.tree_node** %type52, align 8, !tbaa !56
  %call562 = call i64 @int_size_in_bytes(%union.tree_node* %94) #5
  %conv563 = trunc i64 %call562 to i32
  call void @move_block_from_reg(i32 %90, %struct.rtx_def* %call555, i32 %div559, i32 %conv563) #5
  br label %if.end565

if.end565:                                        ; preds = %if.then493, %if.then545, %if.else551
  %stack_parm.5 = phi %struct.rtx_def* [ %stack_parm.4, %if.then545 ], [ %stack_parm.4, %if.else551 ], [ %stack_parm.3, %if.then493 ]
  %rtl567 = getelementptr inbounds %union.tree_node* %parm.01913, i64 0, i32 0, i32 17
  store %struct.rtx_def* %stack_parm.5, %struct.rtx_def** %rtl567, align 8, !tbaa !63
  br label %if.end1246

if.else568:                                       ; preds = %if.end485
  %95 = load i32* @optimize, align 4, !tbaa !17
  %tobool569 = icmp eq i32 %95, 0
  br i1 %tobool569, label %land.lhs.true570, label %lor.lhs.false577

land.lhs.true570:                                 ; preds = %if.else568
  %bf.load572 = load i64* %44, align 8
  %bf.cast575 = and i64 %bf.load572, 1024
  %tobool576 = icmp eq i64 %bf.cast575, 0
  br i1 %tobool576, label %lor.lhs.false594, label %lor.lhs.false577

lor.lhs.false577:                                 ; preds = %land.lhs.true570, %if.else568
  %bf.load579 = load i32* %code, align 8
  %bf.clear581 = and i32 %bf.load579, 256
  %tobool582 = icmp eq i32 %bf.clear581, 0
  br i1 %tobool582, label %lor.lhs.false583, label %lor.lhs.false594

lor.lhs.false583:                                 ; preds = %lor.lhs.false577
  %96 = load i32* @flag_float_store, align 4, !tbaa !17
  %tobool584 = icmp eq i32 %96, 0
  br i1 %tobool584, label %if.then599, label %land.lhs.true585

land.lhs.true585:                                 ; preds = %lor.lhs.false583
  %97 = load %union.tree_node** %type52, align 8, !tbaa !56
  %code589 = getelementptr inbounds %union.tree_node* %97, i64 0, i32 0, i32 0, i32 2
  %bf.load590 = load i32* %code589, align 8
  %bf.clear591 = and i32 %bf.load590, 255
  %cmp592 = icmp ne i32 %bf.clear591, 7
  %tobool595 = icmp ne i32 %passed_pointer.0, 0
  %or.cond1520 = or i1 %cmp592, %tobool595
  %cmp597.old = icmp eq %union.tree_node* %parm.01913, %function_result_decl.0
  %or.cond1888 = or i1 %or.cond1520, %cmp597.old
  br i1 %or.cond1888, label %if.then599, label %if.else1188

lor.lhs.false594:                                 ; preds = %lor.lhs.false577, %land.lhs.true570
  %tobool595.old = icmp ne i32 %passed_pointer.0, 0
  %cmp597 = icmp eq %union.tree_node* %parm.01913, %function_result_decl.0
  %or.cond1887 = or i1 %tobool595.old, %cmp597
  br i1 %or.cond1887, label %if.then599, label %if.else1188

if.then599:                                       ; preds = %lor.lhs.false594, %lor.lhs.false583, %land.lhs.true585
  %98 = load %union.tree_node** %type52, align 8, !tbaa !56
  %unsigned_flag = getelementptr inbounds %union.tree_node* %98, i64 0, i32 0, i32 0, i32 2
  %bf.load603 = load i32* %unsigned_flag, align 8
  %bf.lshr604 = lshr i32 %bf.load603, 13
  %bf.clear605 = and i32 %bf.lshr604, 1
  store i32 %bf.clear605, i32* %unsignedp, align 4, !tbaa !17
  %call608 = call i32 @promote_mode(%union.tree_node* %98, i32 %nominal_mode.0, i32* %unsignedp, i32 0) #5
  %call609 = call %struct.rtx_def* @gen_reg_rtx(i32 %call608) #5
  call void @mark_user_reg(%struct.rtx_def* %call609) #5
  %tobool610 = icmp ne i32 %passed_pointer.0, 0
  br i1 %tobool610, label %if.then611, label %if.else622

if.then611:                                       ; preds = %if.then599
  %type613 = getelementptr inbounds %union.tree_node* %passed_type.1, i64 0, i32 0, i32 0, i32 1
  %99 = load %union.tree_node** %type613, align 8, !tbaa !56
  %type614 = bitcast %union.tree_node* %99 to %struct.tree_type*
  %mode615 = getelementptr inbounds %struct.tree_type* %type614, i64 0, i32 6
  %bf.load616 = load i32* %mode615, align 4
  %bf.lshr617 = lshr i32 %bf.load616, 9
  %bf.clear618 = and i32 %bf.lshr617, 127
  %call619 = call %struct.rtx_def* @gen_rtx_MEM(i32 %bf.clear618, %struct.rtx_def* %call609) #5
  call void @set_mem_attributes(%struct.rtx_def* %call619, %union.tree_node* %parm.01913, i32 1) #5
  %rtl621 = getelementptr inbounds %union.tree_node* %parm.01913, i64 0, i32 0, i32 17
  store %struct.rtx_def* %call619, %struct.rtx_def** %rtl621, align 8, !tbaa !63
  br label %if.end636

if.else622:                                       ; preds = %if.then599
  %rtl624 = getelementptr inbounds %union.tree_node* %parm.01913, i64 0, i32 0, i32 17
  store %struct.rtx_def* %call609, %struct.rtx_def** %rtl624, align 8, !tbaa !63
  %tobool627 = icmp eq %struct.rtx_def* %call609, null
  br i1 %tobool627, label %cond.false631, label %cond.end634

cond.false631:                                    ; preds = %if.else622
  call void @make_decl_rtl(%union.tree_node* %parm.01913, i8* null) #5
  %100 = load %struct.rtx_def** %rtl624, align 8, !tbaa !63
  br label %cond.end634

cond.end634:                                      ; preds = %if.else622, %cond.false631
  %cond635 = phi %struct.rtx_def* [ %100, %cond.false631 ], [ %call609, %if.else622 ]
  call void @maybe_set_unchanging(%struct.rtx_def* %cond635, %union.tree_node* %parm.01913) #5
  br label %if.end636

if.end636:                                        ; preds = %cond.end634, %if.then611
  %cmp637 = icmp ne i32 %nominal_mode.0, %passed_mode.0
  %cmp637.not = xor i1 %cmp637, true
  %cmp640 = icmp eq i32 %call608, %passed_mode.0
  %or.cond1889 = and i1 %cmp640, %cmp637.not
  br i1 %or.cond1889, label %if.else723, label %if.then642

if.then642:                                       ; preds = %if.end636
  %bf.load643 = load i32* %.phi.trans.insert, align 8
  %bf.lshr644 = lshr i32 %bf.load643, 16
  %bf.clear645 = and i32 %bf.lshr644, 255
  %call646 = call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear645) #5
  %call647 = call %struct.rtx_def* @validize_mem(%struct.rtx_def* %entry_parm.3) #5
  %call648 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call646, %struct.rtx_def* %call647) #5
  call void @push_to_sequence(%struct.rtx_def* %conversion_insns.01910) #5
  %101 = load i32* %unsignedp, align 4, !tbaa !17
  %call649 = call %struct.rtx_def* @convert_to_mode(i32 %nominal_mode.0, %struct.rtx_def* %call646, i32 %101) #5
  %102 = getelementptr inbounds %struct.rtx_def* %call649, i64 0, i32 0
  %bf.load650 = load i32* %102, align 8
  %bf.clear651 = and i32 %bf.load650, 65535
  %cmp652 = icmp eq i32 %bf.clear651, 63
  br i1 %cmp652, label %land.lhs.true654, label %if.end707

land.lhs.true654:                                 ; preds = %if.then642
  %bf.lshr656 = lshr i32 %bf.load650, 16
  %bf.clear657 = and i32 %bf.lshr656, 255
  %cmp658 = icmp eq i32 %bf.clear657, %nominal_mode.0
  br i1 %cmp658, label %land.lhs.true660, label %if.end707

land.lhs.true660:                                 ; preds = %land.lhs.true654
  %arrayidx662 = getelementptr inbounds %struct.rtx_def* %call649, i64 0, i32 1, i64 0
  %rtx663 = bitcast %union.rtunion_def* %arrayidx662 to %struct.rtx_def**
  %103 = load %struct.rtx_def** %rtx663, align 8, !tbaa !9
  %104 = getelementptr inbounds %struct.rtx_def* %103, i64 0, i32 0
  %bf.load664 = load i32* %104, align 8
  %bf.clear665 = and i32 %bf.load664, 65535
  %cmp666 = icmp eq i32 %bf.clear665, 61
  %or.cond1890 = and i1 %cmp666, %cmp393
  br i1 %or.cond1890, label %land.lhs.true671, label %if.end707

land.lhs.true671:                                 ; preds = %land.lhs.true660
  %bf.lshr676 = lshr i32 %bf.load664, 16
  %bf.clear677 = and i32 %bf.lshr676, 255
  %bf.load678 = load i32* %.phi.trans.insert, align 8
  %bf.lshr679 = lshr i32 %bf.load678, 16
  %bf.clear680 = and i32 %bf.lshr679, 255
  %cmp681 = icmp eq i32 %bf.clear677, %bf.clear680
  br i1 %cmp681, label %land.lhs.true683, label %if.end707

land.lhs.true683:                                 ; preds = %land.lhs.true671
  %idxprom6871878 = zext i32 %nominal_mode.0 to i64
  %arrayidx688 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom6871878
  %105 = load i8* %arrayidx688, align 1, !tbaa !22
  %idxprom6931879 = zext i32 %bf.clear677 to i64
  %arrayidx694 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom6931879
  %106 = load i8* %arrayidx694, align 1, !tbaa !22
  %cmp696 = icmp ult i8 %105, %106
  br i1 %cmp696, label %if.then698, label %if.end707

if.then698:                                       ; preds = %land.lhs.true683
  %bf.set701 = or i32 %bf.load650, 268435456
  store i32 %bf.set701, i32* %102, align 8
  %107 = load i32* %unsignedp, align 4, !tbaa !17
  %bf.value703 = shl i32 %107, 26
  %bf.shl704 = and i32 %bf.value703, 67108864
  %bf.clear705 = and i32 %bf.set701, -67108865
  %bf.set706 = or i32 %bf.shl704, %bf.clear705
  store i32 %bf.set706, i32* %102, align 8
  br label %if.end707

if.end707:                                        ; preds = %if.then698, %land.lhs.true683, %land.lhs.true671, %land.lhs.true660, %land.lhs.true654, %if.then642
  %bf.load710 = load i32* %code, align 8
  %bf.clear712 = and i32 %bf.load710, 65536
  %call713 = call %union.tree_node* @make_tree(%union.tree_node* %nominal_type.0, %struct.rtx_def* %call649) #5
  %call714 = call %struct.rtx_def* @expand_assignment(%union.tree_node* %parm.01913, %union.tree_node* %call713, i32 0, i32 0) #5
  %bf.load717 = load i32* %code, align 8
  %bf.clear720 = and i32 %bf.load717, -65537
  %bf.set721 = or i32 %bf.clear720, %bf.clear712
  store i32 %bf.set721, i32* %code, align 8
  %call722 = call %struct.rtx_def* @get_insns() #5
  call void @end_sequence() #5
  br label %if.end726

if.else723:                                       ; preds = %if.end636
  %call724 = call %struct.rtx_def* @validize_mem(%struct.rtx_def* %entry_parm.3) #5
  %call725 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call609, %struct.rtx_def* %call724) #5
  br label %if.end726

if.end726:                                        ; preds = %if.else723, %if.end707
  %did_conversion.0 = phi i32 [ 1, %if.end707 ], [ 0, %if.else723 ]
  %conversion_insns.1 = phi %struct.rtx_def* [ %call722, %if.end707 ], [ %conversion_insns.01910, %if.else723 ]
  br i1 %tobool610, label %land.lhs.true728, label %if.end889

land.lhs.true728:                                 ; preds = %if.end726
  %108 = load %union.tree_node** %type52, align 8, !tbaa !56
  %type731 = bitcast %union.tree_node* %108 to %struct.tree_type*
  %mode732 = getelementptr inbounds %struct.tree_type* %type731, i64 0, i32 6
  %bf.load733 = load i32* %mode732, align 4
  %bf.lshr734 = lshr i32 %bf.load733, 9
  %bf.clear735 = and i32 %bf.lshr734, 127
  %cmp736 = icmp eq i32 %bf.clear735, 51
  br i1 %cmp736, label %if.end889, label %land.lhs.true738

land.lhs.true738:                                 ; preds = %land.lhs.true728
  %rtl747 = getelementptr inbounds %union.tree_node* %parm.01913, i64 0, i32 0, i32 17
  %109 = load %struct.rtx_def** %rtl747, align 8, !tbaa !63
  %tobool748 = icmp eq %struct.rtx_def* %109, null
  br i1 %tobool748, label %cond.false752, label %cond.end755

cond.false752:                                    ; preds = %land.lhs.true738
  call void @make_decl_rtl(%union.tree_node* %parm.01913, i8* null) #5
  %110 = load %struct.rtx_def** %rtl747, align 8, !tbaa !63
  br label %cond.end755

cond.end755:                                      ; preds = %land.lhs.true738, %cond.false752
  %cond756 = phi %struct.rtx_def* [ %110, %cond.false752 ], [ %109, %land.lhs.true738 ]
  %111 = getelementptr inbounds %struct.rtx_def* %cond756, i64 0, i32 0
  %bf.load757 = load i32* %111, align 8
  %bf.lshr758 = lshr i32 %bf.load757, 16
  %bf.clear759 = and i32 %bf.lshr758, 255
  %cmp760 = icmp eq i32 %bf.clear735, %bf.clear759
  br i1 %cmp760, label %lor.lhs.false762, label %if.then790

lor.lhs.false762:                                 ; preds = %cond.end755
  %112 = load i32* @optimize, align 4, !tbaa !17
  %tobool763 = icmp eq i32 %112, 0
  br i1 %tobool763, label %land.lhs.true764, label %lor.lhs.false772

land.lhs.true764:                                 ; preds = %lor.lhs.false762
  %bf.load767 = load i64* %44, align 8
  %bf.cast770 = and i64 %bf.load767, 1024
  %tobool771 = icmp eq i64 %bf.cast770, 0
  br i1 %tobool771, label %if.end889, label %lor.lhs.false772

lor.lhs.false772:                                 ; preds = %land.lhs.true764, %lor.lhs.false762
  %bf.load775 = load i32* %code, align 8
  %bf.clear777 = and i32 %bf.load775, 256
  %tobool778 = icmp eq i32 %bf.clear777, 0
  br i1 %tobool778, label %lor.lhs.false779, label %if.end889

lor.lhs.false779:                                 ; preds = %lor.lhs.false772
  %113 = load i32* @flag_float_store, align 4, !tbaa !17
  %tobool780 = icmp eq i32 %113, 0
  br i1 %tobool780, label %if.then790, label %land.lhs.true781

land.lhs.true781:                                 ; preds = %lor.lhs.false779
  %114 = load %union.tree_node** %type52, align 8, !tbaa !56
  %code785 = getelementptr inbounds %union.tree_node* %114, i64 0, i32 0, i32 0, i32 2
  %bf.load786 = load i32* %code785, align 8
  %bf.clear787 = and i32 %bf.load786, 255
  %cmp788 = icmp eq i32 %bf.clear787, 7
  br i1 %cmp788, label %if.end889, label %if.then790

if.then790:                                       ; preds = %lor.lhs.false779, %cond.end755, %land.lhs.true781
  %115 = load %union.tree_node** %type52, align 8, !tbaa !56
  %type793 = bitcast %union.tree_node* %115 to %struct.tree_type*
  %mode794 = getelementptr inbounds %struct.tree_type* %type793, i64 0, i32 6
  %bf.load795 = load i32* %mode794, align 4
  %bf.lshr796 = lshr i32 %bf.load795, 9
  %bf.clear797 = and i32 %bf.lshr796, 127
  %call798 = call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear797) #5
  call void @mark_user_reg(%struct.rtx_def* %call798) #5
  %116 = getelementptr inbounds %struct.rtx_def* %call798, i64 0, i32 0
  %bf.load799 = load i32* %116, align 8
  %117 = load %struct.rtx_def** %rtl747, align 8, !tbaa !63
  %tobool804 = icmp eq %struct.rtx_def* %117, null
  br i1 %tobool804, label %cond.false808, label %cond.end811

cond.false808:                                    ; preds = %if.then790
  call void @make_decl_rtl(%union.tree_node* %parm.01913, i8* null) #5
  %118 = load %struct.rtx_def** %rtl747, align 8, !tbaa !63
  br label %cond.end811

cond.end811:                                      ; preds = %if.then790, %cond.false808
  %119 = phi %struct.rtx_def* [ %117, %if.then790 ], [ %118, %cond.false808 ]
  %120 = getelementptr inbounds %struct.rtx_def* %119, i64 0, i32 0
  %bf.load813 = load i32* %120, align 8
  %bf.lshr8001883 = xor i32 %bf.load813, %bf.load799
  %121 = and i32 %bf.lshr8001883, 16711680
  %cmp816 = icmp eq i32 %121, 0
  %tobool876 = icmp eq %struct.rtx_def* %119, null
  br i1 %cmp816, label %if.else873, label %if.then818

if.then818:                                       ; preds = %cond.end811
  br i1 %tobool876, label %cond.false826, label %cond.end829

cond.false826:                                    ; preds = %if.then818
  call void @make_decl_rtl(%union.tree_node* %parm.01913, i8* null) #5
  %122 = load %struct.rtx_def** %rtl747, align 8, !tbaa !63
  %.phi.trans.insert1926 = getelementptr inbounds %struct.rtx_def* %122, i64 0, i32 0
  %bf.load831.pre = load i32* %.phi.trans.insert1926, align 8
  br label %cond.end829

cond.end829:                                      ; preds = %if.then818, %cond.false826
  %bf.load831 = phi i32 [ %bf.load831.pre, %cond.false826 ], [ %bf.load813, %if.then818 ]
  %bf.lshr832 = lshr i32 %bf.load831, 16
  %bf.clear833 = and i32 %bf.lshr832, 255
  %call834 = call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear833) #5
  %123 = load %union.tree_node** %type52, align 8, !tbaa !56
  %unsigned_flag838 = getelementptr inbounds %union.tree_node* %123, i64 0, i32 0, i32 0, i32 2
  %bf.load839 = load i32* %unsigned_flag838, align 8
  %bf.lshr840 = lshr i32 %bf.load839, 13
  %bf.clear841 = and i32 %bf.lshr840, 1
  call void @push_to_sequence(%struct.rtx_def* %conversion_insns.1) #5
  %124 = load %struct.rtx_def** %rtl747, align 8, !tbaa !63
  %tobool844 = icmp eq %struct.rtx_def* %124, null
  br i1 %tobool844, label %cond.false848, label %cond.end851

cond.false848:                                    ; preds = %cond.end829
  call void @make_decl_rtl(%union.tree_node* %parm.01913, i8* null) #5
  %125 = load %struct.rtx_def** %rtl747, align 8, !tbaa !63
  br label %cond.end851

cond.end851:                                      ; preds = %cond.end829, %cond.false848
  %cond852 = phi %struct.rtx_def* [ %125, %cond.false848 ], [ %124, %cond.end829 ]
  %call853 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call834, %struct.rtx_def* %cond852) #5
  %bf.load854 = load i32* %116, align 8
  %bf.lshr855 = lshr i32 %bf.load854, 16
  %bf.clear856 = and i32 %bf.lshr855, 255
  %call857 = call %struct.rtx_def* @convert_to_mode(i32 %bf.clear856, %struct.rtx_def* %call834, i32 %bf.clear841) #5
  store %struct.rtx_def* %call857, %struct.rtx_def** %rtl747, align 8, !tbaa !63
  %tobool862 = icmp eq %struct.rtx_def* %call857, null
  br i1 %tobool862, label %cond.false866, label %cond.end869

cond.false866:                                    ; preds = %cond.end851
  call void @make_decl_rtl(%union.tree_node* %parm.01913, i8* null) #5
  %126 = load %struct.rtx_def** %rtl747, align 8, !tbaa !63
  br label %cond.end869

cond.end869:                                      ; preds = %cond.end851, %cond.false866
  %cond870 = phi %struct.rtx_def* [ %126, %cond.false866 ], [ %call857, %cond.end851 ]
  %call871 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call798, %struct.rtx_def* %cond870) #5
  %call872 = call %struct.rtx_def* @get_insns() #5
  call void @end_sequence() #5
  br label %if.end886

if.else873:                                       ; preds = %cond.end811
  br i1 %tobool876, label %cond.false880, label %cond.end883

cond.false880:                                    ; preds = %if.else873
  call void @make_decl_rtl(%union.tree_node* %parm.01913, i8* null) #5
  %127 = load %struct.rtx_def** %rtl747, align 8, !tbaa !63
  br label %cond.end883

cond.end883:                                      ; preds = %if.else873, %cond.false880
  %cond884 = phi %struct.rtx_def* [ %127, %cond.false880 ], [ %119, %if.else873 ]
  %call885 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call798, %struct.rtx_def* %cond884) #5
  br label %if.end886

if.end886:                                        ; preds = %cond.end883, %cond.end869
  %did_conversion.1 = phi i32 [ 1, %cond.end869 ], [ %did_conversion.0, %cond.end883 ]
  %conversion_insns.2 = phi %struct.rtx_def* [ %call872, %cond.end869 ], [ %conversion_insns.1, %cond.end883 ]
  store %struct.rtx_def* %call798, %struct.rtx_def** %rtl747, align 8, !tbaa !63
  br label %if.end889

if.end889:                                        ; preds = %lor.lhs.false772, %land.lhs.true764, %land.lhs.true728, %if.end886, %land.lhs.true781, %if.end726
  %parmreg.0 = phi %struct.rtx_def* [ %call798, %if.end886 ], [ %call609, %lor.lhs.false772 ], [ %call609, %land.lhs.true781 ], [ %call609, %land.lhs.true764 ], [ %call609, %land.lhs.true728 ], [ %call609, %if.end726 ]
  %did_conversion.2 = phi i32 [ %did_conversion.1, %if.end886 ], [ %did_conversion.0, %lor.lhs.false772 ], [ %did_conversion.0, %land.lhs.true781 ], [ %did_conversion.0, %land.lhs.true764 ], [ %did_conversion.0, %land.lhs.true728 ], [ %did_conversion.0, %if.end726 ]
  %conversion_insns.3 = phi %struct.rtx_def* [ %conversion_insns.2, %if.end886 ], [ %conversion_insns.1, %lor.lhs.false772 ], [ %conversion_insns.1, %land.lhs.true781 ], [ %conversion_insns.1, %land.lhs.true764 ], [ %conversion_insns.1, %land.lhs.true728 ], [ %conversion_insns.1, %if.end726 ]
  %stack_parm.6 = phi %struct.rtx_def* [ null, %if.end886 ], [ %stack_parm.3, %lor.lhs.false772 ], [ %stack_parm.3, %land.lhs.true781 ], [ %stack_parm.3, %land.lhs.true764 ], [ %stack_parm.3, %land.lhs.true728 ], [ %stack_parm.3, %if.end726 ]
  %128 = getelementptr inbounds %struct.rtx_def* %parmreg.0, i64 0, i32 0
  %bf.load890 = load i32* %128, align 8
  %bf.clear891 = and i32 %bf.load890, 65535
  %cmp892 = icmp eq i32 %bf.clear891, 65
  %fld895 = getelementptr inbounds %struct.rtx_def* %parmreg.0, i64 0, i32 1
  br i1 %cmp892, label %if.then894, label %if.else925

if.then894:                                       ; preds = %if.end889
  %rtx897 = bitcast [1 x %union.rtunion_def]* %fld895 to %struct.rtx_def**
  %129 = load %struct.rtx_def** %rtx897, align 8, !tbaa !9
  %arrayidx899 = getelementptr inbounds %struct.rtx_def* %129, i64 0, i32 1, i64 0
  %rtuint900 = bitcast %union.rtunion_def* %arrayidx899 to i32*
  %130 = load i32* %rtuint900, align 4, !tbaa !17
  %arrayidx902 = getelementptr inbounds %struct.rtx_def* %parmreg.0, i64 0, i32 1, i64 1
  %rtx903 = bitcast %union.rtunion_def* %arrayidx902 to %struct.rtx_def**
  %131 = load %struct.rtx_def** %rtx903, align 8, !tbaa !9
  %arrayidx905 = getelementptr inbounds %struct.rtx_def* %131, i64 0, i32 1, i64 0
  %rtuint906 = bitcast %union.rtunion_def* %arrayidx905 to i32*
  %132 = load i32* %rtuint906, align 4, !tbaa !17
  %cmp907 = icmp ugt i32 %130, %132
  %. = select i1 %cmp907, i32 %130, i32 %132
  br label %if.end929

if.else925:                                       ; preds = %if.end889
  %rtuint928 = bitcast [1 x %union.rtunion_def]* %fld895 to i32*
  %133 = load i32* %rtuint928, align 4, !tbaa !17
  br label %if.end929

if.end929:                                        ; preds = %if.else925, %if.then894
  %regno.0 = phi i32 [ %., %if.then894 ], [ %133, %if.else925 ]
  %134 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_max_parm_reg930 = getelementptr inbounds %struct.function* %134, i64 0, i32 37
  %135 = load i32* %x_max_parm_reg930, align 4, !tbaa !64
  %cmp931 = icmp ult i32 %regno.0, %135
  br i1 %cmp931, label %if.end947, label %if.then933

if.then933:                                       ; preds = %if.end929
  %add935 = add i32 %regno.0, 1
  store i32 %add935, i32* %x_max_parm_reg930, align 4, !tbaa !64
  %x_parm_reg_stack_loc937 = getelementptr inbounds %struct.function* %134, i64 0, i32 38
  %136 = load %struct.rtx_def*** %x_parm_reg_stack_loc937, align 8, !tbaa !31
  %137 = bitcast %struct.rtx_def** %136 to i8*
  %conv939 = zext i32 %add935 to i64
  %mul940 = shl nuw nsw i64 %conv939, 3
  %call941 = call i8* @xrealloc(i8* %137, i64 %mul940) #5
  %138 = bitcast i8* %call941 to %struct.rtx_def**
  %idx.ext = sext i32 %135 to i64
  %add.ptr = getelementptr inbounds %struct.rtx_def** %138, i64 %idx.ext
  %139 = bitcast %struct.rtx_def** %add.ptr to i8*
  %140 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_max_parm_reg942 = getelementptr inbounds %struct.function* %140, i64 0, i32 37
  %141 = load i32* %x_max_parm_reg942, align 4, !tbaa !64
  %sub943 = sub i32 %141, %135
  %conv944 = zext i32 %sub943 to i64
  %mul945 = shl nuw nsw i64 %conv944, 3
  call void @llvm.memset.p0i8.i64(i8* %139, i8 0, i64 %mul945, i32 1, i1 false)
  %142 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_parm_reg_stack_loc946 = getelementptr inbounds %struct.function* %142, i64 0, i32 38
  store %struct.rtx_def** %138, %struct.rtx_def*** %x_parm_reg_stack_loc946, align 8, !tbaa !31
  %bf.load948.pre = load i32* %128, align 8
  br label %if.end947

if.end947:                                        ; preds = %if.end929, %if.then933
  %bf.load948 = phi i32 [ %bf.load890, %if.end929 ], [ %bf.load948.pre, %if.then933 ]
  %bf.clear949 = and i32 %bf.load948, 65535
  %cmp950 = icmp eq i32 %bf.clear949, 65
  br i1 %cmp950, label %if.then952, label %if.else986

if.then952:                                       ; preds = %if.end947
  %rtx955 = bitcast [1 x %union.rtunion_def]* %fld895 to %struct.rtx_def**
  %143 = load %struct.rtx_def** %rtx955, align 8, !tbaa !9
  %144 = getelementptr inbounds %struct.rtx_def* %143, i64 0, i32 0
  %bf.load956 = load i32* %144, align 8
  %bf.lshr957 = lshr i32 %bf.load956, 16
  %bf.clear958 = and i32 %bf.lshr957, 255
  %call959 = call %struct.rtx_def* @gen_realpart(i32 %bf.clear958, %struct.rtx_def* %parmreg.0) #5
  %arrayidx961 = getelementptr inbounds %struct.rtx_def* %call959, i64 0, i32 1, i64 0
  %rtuint962 = bitcast %union.rtunion_def* %arrayidx961 to i32*
  %145 = load i32* %rtuint962, align 4, !tbaa !17
  %call963 = call %struct.rtx_def* @gen_imagpart(i32 %bf.clear958, %struct.rtx_def* %parmreg.0) #5
  %arrayidx965 = getelementptr inbounds %struct.rtx_def* %call963, i64 0, i32 1, i64 0
  %rtuint966 = bitcast %union.rtunion_def* %arrayidx965 to i32*
  %146 = load i32* %rtuint966, align 4, !tbaa !17
  %cmp967 = icmp eq %struct.rtx_def* %stack_parm.6, null
  br i1 %cmp967, label %if.end993.thread, label %if.then969

if.then969:                                       ; preds = %if.then952
  %call970 = call %struct.rtx_def* @gen_realpart(i32 %bf.clear958, %struct.rtx_def* %stack_parm.6) #5
  %idxprom971 = zext i32 %145 to i64
  %147 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_parm_reg_stack_loc972 = getelementptr inbounds %struct.function* %147, i64 0, i32 38
  %148 = load %struct.rtx_def*** %x_parm_reg_stack_loc972, align 8, !tbaa !31
  %arrayidx973 = getelementptr inbounds %struct.rtx_def** %148, i64 %idxprom971
  store %struct.rtx_def* %call970, %struct.rtx_def** %arrayidx973, align 8, !tbaa !9
  %call974 = call %struct.rtx_def* @gen_imagpart(i32 %bf.clear958, %struct.rtx_def* %stack_parm.6) #5
  %idxprom975 = zext i32 %146 to i64
  %149 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_parm_reg_stack_loc976 = getelementptr inbounds %struct.function* %149, i64 0, i32 38
  %150 = load %struct.rtx_def*** %x_parm_reg_stack_loc976, align 8, !tbaa !31
  %arrayidx977 = getelementptr inbounds %struct.rtx_def** %150, i64 %idxprom975
  store %struct.rtx_def* %call974, %struct.rtx_def** %arrayidx977, align 8, !tbaa !9
  br label %if.end993

if.end993.thread:                                 ; preds = %if.then952
  %idxprom979 = zext i32 %145 to i64
  %151 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_parm_reg_stack_loc980 = getelementptr inbounds %struct.function* %151, i64 0, i32 38
  %152 = load %struct.rtx_def*** %x_parm_reg_stack_loc980, align 8, !tbaa !31
  %arrayidx981 = getelementptr inbounds %struct.rtx_def** %152, i64 %idxprom979
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx981, align 8, !tbaa !9
  %idxprom982 = zext i32 %146 to i64
  %153 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_parm_reg_stack_loc983 = getelementptr inbounds %struct.function* %153, i64 0, i32 38
  %154 = load %struct.rtx_def*** %x_parm_reg_stack_loc983, align 8, !tbaa !31
  %arrayidx984 = getelementptr inbounds %struct.rtx_def** %154, i64 %idxprom982
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx984, align 8, !tbaa !9
  br label %if.end1154

if.else986:                                       ; preds = %if.end947
  %rtuint989 = bitcast [1 x %union.rtunion_def]* %fld895 to i32*
  %155 = load i32* %rtuint989, align 4, !tbaa !17
  %idxprom990 = zext i32 %155 to i64
  %156 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_parm_reg_stack_loc991 = getelementptr inbounds %struct.function* %156, i64 0, i32 38
  %157 = load %struct.rtx_def*** %x_parm_reg_stack_loc991, align 8, !tbaa !31
  %arrayidx992 = getelementptr inbounds %struct.rtx_def** %157, i64 %idxprom990
  store %struct.rtx_def* %stack_parm.6, %struct.rtx_def** %arrayidx992, align 8, !tbaa !9
  br label %if.end993

if.end993:                                        ; preds = %if.then969, %if.else986
  %regnoi.0 = phi i64 [ %idxprom975, %if.then969 ], [ 0, %if.else986 ]
  %regnor.0 = phi i64 [ %idxprom971, %if.then969 ], [ 0, %if.else986 ]
  %tobool997 = icmp ne i32 %did_conversion.2, 0
  %or.cond1522 = or i1 %cmp637, %tobool997
  %or.cond1522.not = xor i1 %or.cond1522, true
  %cmp999 = icmp ne %struct.rtx_def* %stack_parm.6, null
  %or.cond1524 = and i1 %cmp999, %or.cond1522.not
  br i1 %or.cond1524, label %land.lhs.true1001, label %if.end1154

land.lhs.true1001:                                ; preds = %if.end993
  %158 = getelementptr inbounds %struct.rtx_def* %stack_parm.6, i64 0, i32 0
  %bf.load1002 = load i32* %158, align 8
  %bf.clear1003 = and i32 %bf.load1002, 65535
  %cmp1004 = icmp eq i32 %bf.clear1003, 66
  %159 = load %union.tree_node** %var204, align 8
  %cmp1008 = icmp eq %union.tree_node* %159, null
  %or.cond1891 = and i1 %cmp1004, %cmp1008
  br i1 %or.cond1891, label %land.lhs.true1010, label %if.end1154

land.lhs.true1010:                                ; preds = %land.lhs.true1001
  %160 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 6), align 8, !tbaa !9
  %arrayidx1012 = getelementptr inbounds %struct.rtx_def* %stack_parm.6, i64 0, i32 1, i64 0
  %rtx1013 = bitcast %union.rtunion_def* %arrayidx1012 to %struct.rtx_def**
  %161 = load %struct.rtx_def** %rtx1013, align 8, !tbaa !9
  %call1014 = call i32 @reg_mentioned_p(%struct.rtx_def* %160, %struct.rtx_def* %161) #5
  %tobool1015 = icmp eq i32 %call1014, 0
  br i1 %tobool1015, label %if.end1154, label %if.then1016

if.then1016:                                      ; preds = %land.lhs.true1010
  %call1017 = call %struct.rtx_def* @get_last_insn() #5
  %bf.load1018 = load i32* %128, align 8
  %bf.clear1019 = and i32 %bf.load1018, 65535
  %cmp1020 = icmp eq i32 %bf.clear1019, 65
  br i1 %cmp1020, label %for.cond1023.preheader, label %if.else1106

for.cond1023.preheader:                           ; preds = %if.then1016
  %cmp10241906 = icmp eq %struct.rtx_def* %call1017, null
  br i1 %cmp10241906, label %if.end1154, label %for.body1026

for.body1026:                                     ; preds = %for.cond1023.preheader, %for.inc1103
  %sinsn.01907 = phi %struct.rtx_def* [ %call1104, %for.inc1103 ], [ %call1017, %for.cond1023.preheader ]
  %162 = getelementptr inbounds %struct.rtx_def* %sinsn.01907, i64 0, i32 0
  %bf.load1027 = load i32* %162, align 8
  %bf.clear1028 = and i32 %bf.load1027, 65535
  %idxprom10291877 = zext i32 %bf.clear1028 to i64
  %arrayidx1030 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom10291877
  %163 = load i8* %arrayidx1030, align 1, !tbaa !22
  %cmp1032 = icmp eq i8 %163, 105
  br i1 %cmp1032, label %cond.true1034, label %for.inc1103

cond.true1034:                                    ; preds = %for.body1026
  %arrayidx1036 = getelementptr inbounds %struct.rtx_def* %sinsn.01907, i64 0, i32 1, i64 3
  %rtx1037 = bitcast %union.rtunion_def* %arrayidx1036 to %struct.rtx_def**
  %164 = load %struct.rtx_def** %rtx1037, align 8, !tbaa !9
  %165 = getelementptr inbounds %struct.rtx_def* %164, i64 0, i32 0
  %bf.load1038 = load i32* %165, align 8
  %bf.clear1039 = and i32 %bf.load1038, 65535
  %cmp1040 = icmp eq i32 %bf.clear1039, 47
  br i1 %cmp1040, label %cond.end1054, label %cond.false1046

cond.false1046:                                   ; preds = %cond.true1034
  %call1050 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %sinsn.01907, %struct.rtx_def* %164) #5
  br label %cond.end1054

cond.end1054:                                     ; preds = %cond.true1034, %cond.false1046
  %cond1055 = phi %struct.rtx_def* [ %call1050, %cond.false1046 ], [ %164, %cond.true1034 ]
  %cmp1056 = icmp eq %struct.rtx_def* %cond1055, null
  br i1 %cmp1056, label %for.inc1103, label %land.lhs.true1058

land.lhs.true1058:                                ; preds = %cond.end1054
  %arrayidx1060 = getelementptr inbounds %struct.rtx_def* %cond1055, i64 0, i32 1, i64 0
  %rtx1061 = bitcast %union.rtunion_def* %arrayidx1060 to %struct.rtx_def**
  %166 = load %struct.rtx_def** %rtx1061, align 8, !tbaa !9
  %167 = load %struct.function** @cfun, align 8, !tbaa !9
  %emit = getelementptr inbounds %struct.function* %167, i64 0, i32 3
  %168 = load %struct.emit_status** %emit, align 8, !tbaa !18
  %x_regno_reg_rtx = getelementptr inbounds %struct.emit_status* %168, i64 0, i32 12
  %169 = load %struct.rtx_def*** %x_regno_reg_rtx, align 8, !tbaa !92
  %arrayidx1063 = getelementptr inbounds %struct.rtx_def** %169, i64 %regnoi.0
  %170 = load %struct.rtx_def** %arrayidx1063, align 8, !tbaa !9
  %cmp1064 = icmp eq %struct.rtx_def* %166, %170
  br i1 %cmp1064, label %if.then1066, label %land.lhs.true1080

if.then1066:                                      ; preds = %land.lhs.true1058
  %x_parm_reg_stack_loc1068 = getelementptr inbounds %struct.function* %167, i64 0, i32 38
  %171 = load %struct.rtx_def*** %x_parm_reg_stack_loc1068, align 8, !tbaa !31
  %arrayidx1069 = getelementptr inbounds %struct.rtx_def** %171, i64 %regnoi.0
  %172 = load %struct.rtx_def** %arrayidx1069, align 8, !tbaa !9
  %arrayidx1071 = getelementptr inbounds %struct.rtx_def* %sinsn.01907, i64 0, i32 1, i64 6
  %rtx1072 = bitcast %union.rtunion_def* %arrayidx1071 to %struct.rtx_def**
  %173 = load %struct.rtx_def** %rtx1072, align 8, !tbaa !9
  %call1073 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 3, %struct.rtx_def* %172, %struct.rtx_def* %173) #5
  %174 = getelementptr inbounds %union.rtunion_def* %arrayidx1071, i64 0, i32 0
  %call1073.c = ptrtoint %struct.rtx_def* %call1073 to i64
  store i64 %call1073.c, i64* %174, align 8, !tbaa !9
  br label %for.inc1103

land.lhs.true1080:                                ; preds = %land.lhs.true1058
  %arrayidx1087 = getelementptr inbounds %struct.rtx_def** %169, i64 %regnor.0
  %175 = load %struct.rtx_def** %arrayidx1087, align 8, !tbaa !9
  %cmp1088 = icmp eq %struct.rtx_def* %166, %175
  br i1 %cmp1088, label %if.then1090, label %for.inc1103

if.then1090:                                      ; preds = %land.lhs.true1080
  %x_parm_reg_stack_loc1092 = getelementptr inbounds %struct.function* %167, i64 0, i32 38
  %176 = load %struct.rtx_def*** %x_parm_reg_stack_loc1092, align 8, !tbaa !31
  %arrayidx1093 = getelementptr inbounds %struct.rtx_def** %176, i64 %regnor.0
  %177 = load %struct.rtx_def** %arrayidx1093, align 8, !tbaa !9
  %arrayidx1095 = getelementptr inbounds %struct.rtx_def* %sinsn.01907, i64 0, i32 1, i64 6
  %rtx1096 = bitcast %union.rtunion_def* %arrayidx1095 to %struct.rtx_def**
  %178 = load %struct.rtx_def** %rtx1096, align 8, !tbaa !9
  %call1097 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 3, %struct.rtx_def* %177, %struct.rtx_def* %178) #5
  %179 = getelementptr inbounds %union.rtunion_def* %arrayidx1095, i64 0, i32 0
  %call1097.c = ptrtoint %struct.rtx_def* %call1097 to i64
  store i64 %call1097.c, i64* %179, align 8, !tbaa !9
  br label %for.inc1103

for.inc1103:                                      ; preds = %cond.end1054, %for.body1026, %if.then1066, %if.then1090, %land.lhs.true1080
  %call1104 = call %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def* %sinsn.01907) #5
  %cmp1024 = icmp eq %struct.rtx_def* %call1104, null
  br i1 %cmp1024, label %if.end1154, label %for.body1026

if.else1106:                                      ; preds = %if.then1016
  %180 = getelementptr inbounds %struct.rtx_def* %call1017, i64 0, i32 0
  %bf.load1107 = load i32* %180, align 8
  %bf.clear1108 = and i32 %bf.load1107, 65535
  %idxprom11091876 = zext i32 %bf.clear1108 to i64
  %arrayidx1110 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom11091876
  %181 = load i8* %arrayidx1110, align 1, !tbaa !22
  %cmp1112 = icmp eq i8 %181, 105
  br i1 %cmp1112, label %cond.true1114, label %if.end1154

cond.true1114:                                    ; preds = %if.else1106
  %arrayidx1116 = getelementptr inbounds %struct.rtx_def* %call1017, i64 0, i32 1, i64 3
  %rtx1117 = bitcast %union.rtunion_def* %arrayidx1116 to %struct.rtx_def**
  %182 = load %struct.rtx_def** %rtx1117, align 8, !tbaa !9
  %183 = getelementptr inbounds %struct.rtx_def* %182, i64 0, i32 0
  %bf.load1118 = load i32* %183, align 8
  %bf.clear1119 = and i32 %bf.load1118, 65535
  %cmp1120 = icmp eq i32 %bf.clear1119, 47
  br i1 %cmp1120, label %cond.end1134, label %cond.false1126

cond.false1126:                                   ; preds = %cond.true1114
  %call1130 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %call1017, %struct.rtx_def* %182) #5
  br label %cond.end1134

cond.end1134:                                     ; preds = %cond.true1114, %cond.false1126
  %cond1135 = phi %struct.rtx_def* [ %call1130, %cond.false1126 ], [ %182, %cond.true1114 ]
  %cmp1136 = icmp eq %struct.rtx_def* %cond1135, null
  br i1 %cmp1136, label %if.end1154, label %land.lhs.true1138

land.lhs.true1138:                                ; preds = %cond.end1134
  %arrayidx1140 = getelementptr inbounds %struct.rtx_def* %cond1135, i64 0, i32 1, i64 0
  %rtx1141 = bitcast %union.rtunion_def* %arrayidx1140 to %struct.rtx_def**
  %184 = load %struct.rtx_def** %rtx1141, align 8, !tbaa !9
  %cmp1142 = icmp eq %struct.rtx_def* %184, %parmreg.0
  br i1 %cmp1142, label %if.then1144, label %if.end1154

if.then1144:                                      ; preds = %land.lhs.true1138
  %arrayidx1146 = getelementptr inbounds %struct.rtx_def* %call1017, i64 0, i32 1, i64 6
  %rtx1147 = bitcast %union.rtunion_def* %arrayidx1146 to %struct.rtx_def**
  %185 = load %struct.rtx_def** %rtx1147, align 8, !tbaa !9
  %call1148 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 3, %struct.rtx_def* %stack_parm.6, %struct.rtx_def* %185) #5
  %186 = getelementptr inbounds %union.rtunion_def* %arrayidx1146, i64 0, i32 0
  %call1148.c = ptrtoint %struct.rtx_def* %call1148 to i64
  store i64 %call1148.c, i64* %186, align 8, !tbaa !9
  br label %if.end1154

if.end1154:                                       ; preds = %for.inc1103, %for.cond1023.preheader, %if.else1106, %if.end993.thread, %cond.end1134, %land.lhs.true1010, %if.then1144, %land.lhs.true1138, %if.end993, %land.lhs.true1001
  %187 = load %union.tree_node** %type52, align 8, !tbaa !56
  %code1158 = getelementptr inbounds %union.tree_node* %187, i64 0, i32 0, i32 0, i32 2
  %bf.load1159 = load i32* %code1158, align 8
  %bf.clear1160 = and i32 %bf.load1159, 255
  switch i32 %bf.clear1160, label %if.end1178 [
    i32 13, label %if.then1172
    i32 15, label %if.then1172
  ]

if.then1172:                                      ; preds = %if.end1154, %if.end1154
  %type1176 = getelementptr inbounds %union.tree_node* %187, i64 0, i32 0, i32 0, i32 1
  %188 = load %union.tree_node** %type1176, align 8, !tbaa !56
  %align = getelementptr inbounds %union.tree_node* %188, i64 0, i32 0, i32 7
  %189 = bitcast %union.tree_node** %align to i32*
  %190 = load i32* %189, align 4, !tbaa !93
  call void @mark_reg_pointer(%struct.rtx_def* %parmreg.0, i32 %190) #5
  br label %if.end1178

if.end1178:                                       ; preds = %if.end1154, %if.then1172
  %bf.load1181 = load i32* %code, align 8
  %bf.clear1183 = and i32 %bf.load1181, 1024
  %tobool1184 = icmp eq i32 %bf.clear1183, 0
  br i1 %tobool1184, label %if.end1246, label %if.then1185

if.then1185:                                      ; preds = %if.end1178
  call void @push_to_sequence(%struct.rtx_def* %conversion_insns.3) #5
  call void @put_var_into_stack(%union.tree_node* %parm.01913)
  %call1186 = call %struct.rtx_def* @get_insns() #5
  call void @end_sequence() #5
  br label %if.end1246

if.else1188:                                      ; preds = %land.lhs.true585, %lor.lhs.false594
  %cmp1189 = icmp ne i32 %passed_mode.0, %nominal_mode.0
  br i1 %cmp1189, label %if.then1191, label %if.end1212

if.then1191:                                      ; preds = %if.else1188
  %bf.lshr1194 = lshr i32 %bf.load494.pre, 16
  %bf.clear1195 = and i32 %bf.lshr1194, 255
  %call1196 = call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear1195) #5
  %call1197 = call %struct.rtx_def* @validize_mem(%struct.rtx_def* %entry_parm.3) #5
  %call1198 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call1196, %struct.rtx_def* %call1197) #5
  call void @push_to_sequence(%struct.rtx_def* %conversion_insns.01910) #5
  %191 = load %union.tree_node** %type52, align 8, !tbaa !56
  %unsigned_flag1202 = getelementptr inbounds %union.tree_node* %191, i64 0, i32 0, i32 0, i32 2
  %bf.load1203 = load i32* %unsigned_flag1202, align 8
  %bf.lshr1204 = lshr i32 %bf.load1203, 13
  %bf.clear1205 = and i32 %bf.lshr1204, 1
  %call1206 = call %struct.rtx_def* @convert_to_mode(i32 %nominal_mode.0, %struct.rtx_def* %call1196, i32 %bf.clear1205) #5
  %tobool1207 = icmp eq %struct.rtx_def* %stack_parm.3, null
  br i1 %tobool1207, label %if.end1210, label %if.then1208

if.then1208:                                      ; preds = %if.then1191
  %call1209 = call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %stack_parm.3, i32 %nominal_mode.0, i64 0, i32 1, i32 1) #5
  br label %if.end1210

if.end1210:                                       ; preds = %if.then1191, %if.then1208
  %stack_parm.7 = phi %struct.rtx_def* [ %call1209, %if.then1208 ], [ null, %if.then1191 ]
  %call1211 = call %struct.rtx_def* @get_insns() #5
  call void @end_sequence() #5
  br label %if.end1212

if.end1212:                                       ; preds = %if.end1210, %if.else1188
  %conversion_insns.4 = phi %struct.rtx_def* [ %call1211, %if.end1210 ], [ %conversion_insns.01910, %if.else1188 ]
  %stack_parm.8 = phi %struct.rtx_def* [ %stack_parm.7, %if.end1210 ], [ %stack_parm.3, %if.else1188 ]
  %entry_parm.4 = phi %struct.rtx_def* [ %call1206, %if.end1210 ], [ %entry_parm.3, %if.else1188 ]
  %cmp1213 = icmp eq %struct.rtx_def* %entry_parm.4, %stack_parm.8
  br i1 %cmp1213, label %if.end1242, label %if.then1215

if.then1215:                                      ; preds = %if.end1212
  %cmp1216 = icmp eq %struct.rtx_def* %stack_parm.8, null
  br i1 %cmp1216, label %if.then1218, label %if.end1229

if.then1218:                                      ; preds = %if.then1215
  %192 = getelementptr inbounds %struct.rtx_def* %entry_parm.4, i64 0, i32 0
  %bf.load1219 = load i32* %192, align 8
  %bf.lshr1220 = lshr i32 %bf.load1219, 16
  %bf.clear1221 = and i32 %bf.lshr1220, 255
  %idxprom12251875 = zext i32 %bf.clear1221 to i64
  %arrayidx1226 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom12251875
  %193 = load i8* %arrayidx1226, align 1, !tbaa !22
  %conv1227 = zext i8 %193 to i64
  %194 = load %struct.function** @cfun, align 8, !tbaa !9
  %call.i1894 = call fastcc %struct.rtx_def* @assign_stack_local_1(i32 %bf.clear1221, i64 %conv1227, i32 0, %struct.function* %194) #5
  call void @set_mem_attributes(%struct.rtx_def* %call.i1894, %union.tree_node* %parm.01913, i32 1) #5
  br label %if.end1229

if.end1229:                                       ; preds = %if.then1218, %if.then1215
  %stack_parm.9 = phi %struct.rtx_def* [ %call.i1894, %if.then1218 ], [ %stack_parm.8, %if.then1215 ]
  br i1 %cmp1189, label %if.then1232, label %if.else1237

if.then1232:                                      ; preds = %if.end1229
  call void @push_to_sequence(%struct.rtx_def* %conversion_insns.4) #5
  %call1233 = call %struct.rtx_def* @validize_mem(%struct.rtx_def* %stack_parm.9) #5
  %call1234 = call %struct.rtx_def* @validize_mem(%struct.rtx_def* %entry_parm.4) #5
  %call1235 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call1233, %struct.rtx_def* %call1234) #5
  %call1236 = call %struct.rtx_def* @get_insns() #5
  call void @end_sequence() #5
  br label %if.end1242

if.else1237:                                      ; preds = %if.end1229
  %call1238 = call %struct.rtx_def* @validize_mem(%struct.rtx_def* %stack_parm.9) #5
  %call1239 = call %struct.rtx_def* @validize_mem(%struct.rtx_def* %entry_parm.4) #5
  %call1240 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call1238, %struct.rtx_def* %call1239) #5
  br label %if.end1242

if.end1242:                                       ; preds = %if.end1212, %if.then1232, %if.else1237
  %conversion_insns.5 = phi %struct.rtx_def* [ %call1236, %if.then1232 ], [ %conversion_insns.4, %if.else1237 ], [ %conversion_insns.4, %if.end1212 ]
  %stack_parm.10 = phi %struct.rtx_def* [ %stack_parm.9, %if.then1232 ], [ %stack_parm.9, %if.else1237 ], [ %stack_parm.8, %if.end1212 ]
  %rtl1244 = getelementptr inbounds %union.tree_node* %parm.01913, i64 0, i32 0, i32 17
  store %struct.rtx_def* %stack_parm.10, %struct.rtx_def** %rtl1244, align 8, !tbaa !63
  br label %if.end1246

if.end1246:                                       ; preds = %if.end1178, %if.end1242, %if.then1185, %if.end565
  %conversion_insns.6 = phi %struct.rtx_def* [ %conversion_insns.01910, %if.end565 ], [ %call1186, %if.then1185 ], [ %conversion_insns.3, %if.end1178 ], [ %conversion_insns.5, %if.end1242 ]
  %cmp1247 = icmp eq %union.tree_node* %parm.01913, %function_result_decl.0
  br i1 %cmp1247, label %if.then1249, label %if.end1273

if.then1249:                                      ; preds = %if.end1246
  %195 = load %union.tree_node** %result, align 8, !tbaa !85
  %rtl1254 = getelementptr inbounds %union.tree_node* %function_result_decl.0, i64 0, i32 0, i32 17
  %196 = load %struct.rtx_def** %rtl1254, align 8, !tbaa !63
  %tobool1255 = icmp eq %struct.rtx_def* %196, null
  br i1 %tobool1255, label %cond.false1259, label %cond.end1262

cond.false1259:                                   ; preds = %if.then1249
  call void @make_decl_rtl(%union.tree_node* %function_result_decl.0, i8* null) #5
  %197 = load %struct.rtx_def** %rtl1254, align 8, !tbaa !63
  br label %cond.end1262

cond.end1262:                                     ; preds = %if.then1249, %cond.false1259
  %cond1263 = phi %struct.rtx_def* [ %197, %cond.false1259 ], [ %196, %if.then1249 ]
  %mode1266 = getelementptr inbounds %union.tree_node* %195, i64 0, i32 0, i32 5
  %198 = bitcast i48* %mode1266 to i64*
  %bf.load1267 = load i64* %198, align 8
  %bf.load1267.tr = trunc i64 %bf.load1267 to i32
  %bf.cast1269 = and i32 %bf.load1267.tr, 255
  %call1270 = call %struct.rtx_def* @gen_rtx_MEM(i32 %bf.cast1269, %struct.rtx_def* %cond1263) #5
  call void @set_mem_attributes(%struct.rtx_def* %call1270, %union.tree_node* %195, i32 1) #5
  %rtl1272 = getelementptr inbounds %union.tree_node* %195, i64 0, i32 0, i32 17
  store %struct.rtx_def* %call1270, %struct.rtx_def** %rtl1272, align 8, !tbaa !63
  br label %if.end1273

if.end1273:                                       ; preds = %cond.end1262, %if.end1246
  %rtl1275 = getelementptr inbounds %union.tree_node* %parm.01913, i64 0, i32 0, i32 17
  %199 = load %struct.rtx_def** %rtl1275, align 8, !tbaa !63
  %tobool1276 = icmp eq %struct.rtx_def* %199, null
  br i1 %tobool1276, label %cond.false1280, label %cond.end1283

cond.false1280:                                   ; preds = %if.end1273
  call void @make_decl_rtl(%union.tree_node* %parm.01913, i8* null) #5
  %200 = load %struct.rtx_def** %rtl1275, align 8, !tbaa !63
  br label %cond.end1283

cond.end1283:                                     ; preds = %if.end1273, %cond.false1280
  %201 = phi %struct.rtx_def* [ %199, %if.end1273 ], [ %200, %cond.false1280 ]
  %202 = getelementptr inbounds %struct.rtx_def* %201, i64 0, i32 0
  %bf.load1285 = load i32* %202, align 8
  %bf.clear1286 = and i32 %bf.load1285, 65535
  %cmp1287 = icmp eq i32 %bf.clear1286, 61
  %tobool1292 = icmp eq %struct.rtx_def* %201, null
  br i1 %cmp1287, label %if.then1289, label %if.else1307

if.then1289:                                      ; preds = %cond.end1283
  br i1 %tobool1292, label %cond.false1296, label %cond.end1299

cond.false1296:                                   ; preds = %if.then1289
  call void @make_decl_rtl(%union.tree_node* %parm.01913, i8* null) #5
  %203 = load %struct.rtx_def** %rtl1275, align 8, !tbaa !63
  br label %cond.end1299

cond.end1299:                                     ; preds = %if.then1289, %cond.false1296
  %cond1300 = phi %struct.rtx_def* [ %203, %cond.false1296 ], [ %201, %if.then1289 ]
  %arrayidx1302 = getelementptr inbounds %struct.rtx_def* %cond1300, i64 0, i32 1, i64 0
  %rtuint1303 = bitcast %union.rtunion_def* %arrayidx1302 to i32*
  %204 = load i32* %rtuint1303, align 4, !tbaa !17
  %idxprom1304 = zext i32 %204 to i64
  %205 = load %struct.function** @cfun, align 8, !tbaa !9
  %emit1305 = getelementptr inbounds %struct.function* %205, i64 0, i32 3
  %206 = load %struct.emit_status** %emit1305, align 8, !tbaa !18
  %regno_decl = getelementptr inbounds %struct.emit_status* %206, i64 0, i32 11
  %207 = load %union.tree_node*** %regno_decl, align 8, !tbaa !94
  %arrayidx1306 = getelementptr inbounds %union.tree_node** %207, i64 %idxprom1304
  store %union.tree_node* %parm.01913, %union.tree_node** %arrayidx1306, align 8, !tbaa !9
  br label %for.inc1368

if.else1307:                                      ; preds = %cond.end1283
  br i1 %tobool1292, label %cond.false1314, label %cond.end1317

cond.false1314:                                   ; preds = %if.else1307
  call void @make_decl_rtl(%union.tree_node* %parm.01913, i8* null) #5
  %208 = load %struct.rtx_def** %rtl1275, align 8, !tbaa !63
  %.phi.trans.insert1924 = getelementptr inbounds %struct.rtx_def* %208, i64 0, i32 0
  %bf.load1319.pre = load i32* %.phi.trans.insert1924, align 8
  br label %cond.end1317

cond.end1317:                                     ; preds = %if.else1307, %cond.false1314
  %bf.load1319 = phi i32 [ %bf.load1319.pre, %cond.false1314 ], [ %bf.load1285, %if.else1307 ]
  %209 = phi %struct.rtx_def* [ %208, %cond.false1314 ], [ %201, %if.else1307 ]
  %bf.clear1320 = and i32 %bf.load1319, 65535
  %cmp1321 = icmp eq i32 %bf.clear1320, 65
  br i1 %cmp1321, label %if.then1323, label %for.inc1368

if.then1323:                                      ; preds = %cond.end1317
  %tobool1326 = icmp eq %struct.rtx_def* %209, null
  br i1 %tobool1326, label %cond.false1330, label %cond.end1333

cond.false1330:                                   ; preds = %if.then1323
  call void @make_decl_rtl(%union.tree_node* %parm.01913, i8* null) #5
  %210 = load %struct.rtx_def** %rtl1275, align 8, !tbaa !63
  br label %cond.end1333

cond.end1333:                                     ; preds = %if.then1323, %cond.false1330
  %cond1334 = phi %struct.rtx_def* [ %210, %cond.false1330 ], [ %209, %if.then1323 ]
  %arrayidx1336 = getelementptr inbounds %struct.rtx_def* %cond1334, i64 0, i32 1, i64 0
  %rtx1337 = bitcast %union.rtunion_def* %arrayidx1336 to %struct.rtx_def**
  %211 = load %struct.rtx_def** %rtx1337, align 8, !tbaa !9
  %arrayidx1339 = getelementptr inbounds %struct.rtx_def* %211, i64 0, i32 1, i64 0
  %rtuint1340 = bitcast %union.rtunion_def* %arrayidx1339 to i32*
  %212 = load i32* %rtuint1340, align 4, !tbaa !17
  %idxprom1341 = zext i32 %212 to i64
  %213 = load %struct.function** @cfun, align 8, !tbaa !9
  %emit1342 = getelementptr inbounds %struct.function* %213, i64 0, i32 3
  %214 = load %struct.emit_status** %emit1342, align 8, !tbaa !18
  %regno_decl1343 = getelementptr inbounds %struct.emit_status* %214, i64 0, i32 11
  %215 = load %union.tree_node*** %regno_decl1343, align 8, !tbaa !94
  %arrayidx1344 = getelementptr inbounds %union.tree_node** %215, i64 %idxprom1341
  store %union.tree_node* %parm.01913, %union.tree_node** %arrayidx1344, align 8, !tbaa !9
  %216 = load %struct.rtx_def** %rtl1275, align 8, !tbaa !63
  %tobool1347 = icmp eq %struct.rtx_def* %216, null
  br i1 %tobool1347, label %cond.false1351, label %cond.end1354

cond.false1351:                                   ; preds = %cond.end1333
  call void @make_decl_rtl(%union.tree_node* %parm.01913, i8* null) #5
  %217 = load %struct.rtx_def** %rtl1275, align 8, !tbaa !63
  br label %cond.end1354

cond.end1354:                                     ; preds = %cond.end1333, %cond.false1351
  %cond1355 = phi %struct.rtx_def* [ %217, %cond.false1351 ], [ %216, %cond.end1333 ]
  %arrayidx1357 = getelementptr inbounds %struct.rtx_def* %cond1355, i64 0, i32 1, i64 1
  %rtx1358 = bitcast %union.rtunion_def* %arrayidx1357 to %struct.rtx_def**
  %218 = load %struct.rtx_def** %rtx1358, align 8, !tbaa !9
  %arrayidx1360 = getelementptr inbounds %struct.rtx_def* %218, i64 0, i32 1, i64 0
  %rtuint1361 = bitcast %union.rtunion_def* %arrayidx1360 to i32*
  %219 = load i32* %rtuint1361, align 4, !tbaa !17
  %idxprom1362 = zext i32 %219 to i64
  %220 = load %struct.function** @cfun, align 8, !tbaa !9
  %emit1363 = getelementptr inbounds %struct.function* %220, i64 0, i32 3
  %221 = load %struct.emit_status** %emit1363, align 8, !tbaa !18
  %regno_decl1364 = getelementptr inbounds %struct.emit_status* %221, i64 0, i32 11
  %222 = load %union.tree_node*** %regno_decl1364, align 8, !tbaa !94
  %arrayidx1365 = getelementptr inbounds %union.tree_node** %222, i64 %idxprom1362
  store %union.tree_node* %parm.01913, %union.tree_node** %arrayidx1365, align 8, !tbaa !9
  br label %for.inc1368

for.inc1368:                                      ; preds = %cond.end1299, %cond.end1354, %cond.end1317, %cond.end136, %cond.end
  %conversion_insns.7 = phi %struct.rtx_def* [ %conversion_insns.01910, %cond.end ], [ %conversion_insns.01910, %cond.end136 ], [ %conversion_insns.6, %cond.end1299 ], [ %conversion_insns.6, %cond.end1354 ], [ %conversion_insns.6, %cond.end1317 ]
  %varargs_setup.2 = phi i32 [ %varargs_setup.01912, %cond.end ], [ %varargs_setup.01912, %cond.end136 ], [ %varargs_setup.1, %cond.end1299 ], [ %varargs_setup.1, %cond.end1354 ], [ %varargs_setup.1, %cond.end1317 ]
  %chain1370 = getelementptr inbounds %union.tree_node* %parm.01913, i64 0, i32 0, i32 0, i32 0
  %223 = load %union.tree_node** %chain1370, align 8, !tbaa !30
  %tobool48 = icmp eq %union.tree_node* %223, null
  br i1 %tobool48, label %for.cond.for.end1371_crit_edge, label %for.body

for.cond.for.end1371_crit_edge:                   ; preds = %for.inc1368
  %.pre = load i64* %constant, align 8, !tbaa !91
  %.pre1922 = load %union.tree_node** %var, align 8, !tbaa !89
  br label %for.end1371

for.end1371:                                      ; preds = %for.cond.for.end1371_crit_edge, %if.end44
  %224 = phi %union.tree_node* [ %.pre1922, %for.cond.for.end1371_crit_edge ], [ null, %if.end44 ]
  %225 = phi i64 [ %.pre, %for.cond.for.end1371_crit_edge ], [ 0, %if.end44 ]
  %conversion_insns.0.lcssa = phi %struct.rtx_def* [ %conversion_insns.7, %for.cond.for.end1371_crit_edge ], [ null, %if.end44 ]
  %call1372 = call %struct.rtx_def* @emit_insns(%struct.rtx_def* %conversion_insns.0.lcssa) #5
  %call1373 = call %struct.rtx_def* @get_last_insn() #5
  %226 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_last_parm_insn = getelementptr inbounds %struct.function* %226, i64 0, i32 36
  store %struct.rtx_def* %call1373, %struct.rtx_def** %x_last_parm_insn, align 8, !tbaa !78
  %conv1375 = trunc i64 %225 to i32
  %227 = load %struct.function** @cfun, align 8, !tbaa !9
  %args_size = getelementptr inbounds %struct.function* %227, i64 0, i32 9
  %cmp1377 = icmp sgt i32 %conv1375, 0
  %.1892 = select i1 %cmp1377, i32 %conv1375, i32 0
  store i32 %.1892, i32* %args_size, align 4, !tbaa !95
  %228 = load i32* @target_flags, align 4, !tbaa !17
  %and1386 = lshr i32 %228, 20
  %229 = and i32 %and1386, 32
  %230 = add i32 %229, 32
  %div1389 = sdiv i32 %230, 8
  %add1390 = add i32 %.1892, -1
  %sub1391 = add i32 %add1390, %div1389
  %div1396 = srem i32 %sub1391, %div1389
  %mul1401 = sub i32 %sub1391, %div1396
  store i32 %mul1401, i32* %args_size, align 4, !tbaa !95
  %cmp1404 = icmp eq %union.tree_node* %224, null
  br i1 %cmp1404, label %cond.true1406, label %cond.false1416

cond.true1406:                                    ; preds = %for.end1371
  %call1408 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %225) #5
  br label %cond.end1425

cond.false1416:                                   ; preds = %for.end1371
  %231 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 1), align 8, !tbaa !9
  %call1418 = call %union.tree_node* @convert(%union.tree_node* %231, %union.tree_node* %224) #5
  %call1420 = call %union.tree_node* @size_int_wide(i64 %225, i32 1) #5
  %call1421 = call %union.tree_node* @size_binop(i32 59, %union.tree_node* %call1418, %union.tree_node* %call1420) #5
  %call1424 = call %struct.rtx_def* @expand_expr(%union.tree_node* %call1421, %struct.rtx_def* null, i32 0, i32 0) #5
  br label %cond.end1425

cond.end1425:                                     ; preds = %cond.false1416, %cond.true1406
  %cond1426 = phi %struct.rtx_def* [ %call1408, %cond.true1406 ], [ %call1424, %cond.false1416 ]
  %232 = load %struct.function** @cfun, align 8, !tbaa !9
  %arg_offset_rtx = getelementptr inbounds %struct.function* %232, i64 0, i32 12
  store %struct.rtx_def* %cond1426, %struct.rtx_def** %arg_offset_rtx, align 8, !tbaa !32
  %233 = load %union.tree_node** %type, align 8, !tbaa !56
  %234 = load %struct.function** @cfun, align 8, !tbaa !9
  %args_size1429 = getelementptr inbounds %struct.function* %234, i64 0, i32 9
  %235 = load i32* %args_size1429, align 4, !tbaa !95
  %call1430 = call i32 @ix86_return_pops_args(%union.tree_node* %fndecl, %union.tree_node* %233, i32 %235) #5
  %236 = load %struct.function** @cfun, align 8, !tbaa !9
  %pops_args = getelementptr inbounds %struct.function* %236, i64 0, i32 8
  store i32 %call1430, i32* %pops_args, align 4, !tbaa !96
  br i1 %7, label %if.end1434, label %if.then1432

if.then1432:                                      ; preds = %cond.end1425
  %args_info1433 = getelementptr inbounds %struct.function* %236, i64 0, i32 13
  %237 = bitcast %struct.ix86_args* %args_info1433 to i8*
  %238 = bitcast %struct.ix86_args* %args_so_far to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %237, i8* %238, i64 28, i32 4, i1 false), !tbaa.struct !87
  br label %if.end1434

if.end1434:                                       ; preds = %if.then1432, %cond.end1425
  %239 = load %union.tree_node** %result, align 8, !tbaa !85
  %rtl1438 = getelementptr inbounds %union.tree_node* %239, i64 0, i32 0, i32 17
  %240 = load %struct.rtx_def** %rtl1438, align 8, !tbaa !63
  %return_rtx = getelementptr inbounds %struct.function* %236, i64 0, i32 14
  store %struct.rtx_def* %240, %struct.rtx_def** %return_rtx, align 8, !tbaa !97
  %cmp1468 = icmp eq %struct.rtx_def* %240, null
  br i1 %cmp1468, label %if.end1511, label %cond.end1482

cond.end1482:                                     ; preds = %if.end1434
  %241 = getelementptr inbounds %struct.rtx_def* %240, i64 0, i32 0
  %bf.load1484 = load i32* %241, align 8
  %bf.clear1485 = and i32 %bf.load1484, 65535
  %cmp1486 = icmp eq i32 %bf.clear1485, 61
  br i1 %cmp1486, label %cond.true1488, label %cond.false1494

cond.true1488:                                    ; preds = %cond.end1482
  %arrayidx1490 = getelementptr inbounds %struct.rtx_def* %240, i64 0, i32 1, i64 0
  %rtuint1491 = bitcast %union.rtunion_def* %arrayidx1490 to i32*
  %242 = load i32* %rtuint1491, align 4, !tbaa !17
  %cmp1492 = icmp ugt i32 %242, 52
  br i1 %cmp1492, label %if.then1502, label %if.end1511

cond.false1494:                                   ; preds = %cond.end1482
  %regdecl_flag1496 = getelementptr inbounds %union.tree_node* %239, i64 0, i32 0, i32 5
  %243 = bitcast i48* %regdecl_flag1496 to i64*
  %bf.load1497 = load i64* %243, align 8
  %bf.cast1500 = and i64 %bf.load1497, 1024
  %tobool1501 = icmp eq i64 %bf.cast1500, 0
  br i1 %tobool1501, label %if.end1511, label %if.then1502

if.then1502:                                      ; preds = %cond.false1494, %cond.true1488
  %type1504 = getelementptr inbounds %union.tree_node* %239, i64 0, i32 0, i32 0, i32 1
  %244 = load %union.tree_node** %type1504, align 8, !tbaa !56
  %call1505 = call %struct.rtx_def* @ix86_function_value(%union.tree_node* %244) #5
  %245 = getelementptr inbounds %struct.rtx_def* %call1505, i64 0, i32 0
  %bf.load1506 = load i32* %245, align 8
  %bf.set1508 = or i32 %bf.load1506, 1073741824
  store i32 %bf.set1508, i32* %245, align 8
  %246 = load %struct.function** @cfun, align 8, !tbaa !9
  %return_rtx1509 = getelementptr inbounds %struct.function* %246, i64 0, i32 14
  store %struct.rtx_def* %call1505, %struct.rtx_def** %return_rtx1509, align 8, !tbaa !97
  br label %if.end1511

if.end1511:                                       ; preds = %if.end1434, %cond.false1494, %cond.true1488, %if.then1502
  ret void
}

declare %union.tree_node* @tree_last(%union.tree_node*) #2

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) #7

declare %struct.rtx_def* @copy_to_reg(%struct.rtx_def*) #2

declare %union.tree_node* @build_pointer_type(%union.tree_node*) #2

declare %union.tree_node* @build_decl(i32, %union.tree_node*, %union.tree_node*) #2

declare noalias i8* @xcalloc(i64, i64) #2

declare void @init_cumulative_args(%struct.ix86_args*, %union.tree_node*, %struct.rtx_def*) #2

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #5

declare i32 @contains_placeholder_p(%union.tree_node*) #2

declare %struct.rtx_def* @function_arg(%struct.ix86_args*, i32, %union.tree_node*, i32) #2

declare void @ix86_setup_incoming_varargs(%struct.ix86_args*, i32, %union.tree_node*, i32*, i32) #2

; Function Attrs: nounwind uwtable
define void @locate_and_pad_parm(i32 %passed_mode, %union.tree_node* %type, i32 %in_regs, %union.tree_node* nocapture readnone %fndecl, %struct.args_size* nocapture %initial_offset_ptr, %struct.args_size* nocapture %offset_ptr, %struct.args_size* nocapture %arg_size_ptr, %struct.args_size* nocapture %alignment_pad) #0 {
entry:
  %tobool = icmp eq %union.tree_node* %type, null
  br i1 %tobool, label %cond.false, label %cond.true

cond.true:                                        ; preds = %entry
  %call = tail call %union.tree_node* @size_in_bytes(%union.tree_node* %type) #5
  br label %cond.end

cond.false:                                       ; preds = %entry
  %idxprom = sext i32 %passed_mode to i64
  %arrayidx = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom
  %0 = load i8* %arrayidx, align 1, !tbaa !22
  %conv = zext i8 %0 to i64
  %call1 = tail call %union.tree_node* @size_int_wide(i64 %conv, i32 0) #5
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %union.tree_node* [ %call, %cond.true ], [ %call1, %cond.false ]
  %call2 = tail call i32 @ix86_function_arg_boundary(i32 %passed_mode, %union.tree_node* %type) #5
  %tobool3 = icmp eq i32 %in_regs, 0
  %var36 = getelementptr inbounds %struct.args_size* %arg_size_ptr, i64 0, i32 1
  %constant37 = getelementptr inbounds %struct.args_size* %arg_size_ptr, i64 0, i32 0
  %var38 = getelementptr inbounds %struct.args_size* %alignment_pad, i64 0, i32 1
  %1 = bitcast %struct.args_size* %arg_size_ptr to i8*
  call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 16, i32 8, i1 false)
  %constant39 = getelementptr inbounds %struct.args_size* %alignment_pad, i64 0, i32 0
  %2 = bitcast %struct.args_size* %alignment_pad to i8*
  call void @llvm.memset.p0i8.i64(i8* %2, i8 0, i64 16, i32 8, i1 false)
  br i1 %tobool3, label %if.then41, label %if.end42

if.then41:                                        ; preds = %cond.end
  %div.i = sdiv i32 %call2, 8
  %3 = load i32* @target_flags, align 4, !tbaa !17
  %and.i = lshr i32 %3, 20
  %4 = and i32 %and.i, 32
  %5 = add i32 %4, 32
  %cmp.i = icmp slt i32 %5, %call2
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %if.then41
  %var.i = getelementptr inbounds %struct.args_size* %initial_offset_ptr, i64 0, i32 1
  %6 = load %union.tree_node** %var.i, align 8, !tbaa !89
  %constant.i = getelementptr inbounds %struct.args_size* %initial_offset_ptr, i64 0, i32 0
  %7 = load i64* %constant.i, align 8, !tbaa !91
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %if.then41
  %save_constant.0.i = phi i64 [ %7, %if.then.i ], [ 0, %if.then41 ]
  %save_var.0.i = phi %union.tree_node* [ %6, %if.then.i ], [ null, %if.then41 ]
  %cmp7.i = icmp sgt i32 %call2, 8
  %8 = bitcast %struct.args_size* %alignment_pad to i8*
  tail call void @llvm.memset.p0i8.i64(i8* %8, i8 0, i64 16, i32 8, i1 false) #5
  br i1 %cmp7.i, label %if.then8.i, label %if.end42

if.then8.i:                                       ; preds = %if.end.i
  %var9.i = getelementptr inbounds %struct.args_size* %initial_offset_ptr, i64 0, i32 1
  %9 = load %union.tree_node** %var9.i, align 8, !tbaa !89
  %tobool10.i = icmp eq %union.tree_node* %9, null
  br i1 %tobool10.i, label %if.else.i, label %cond.false.i

cond.false.i:                                     ; preds = %if.then8.i
  %10 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 1), align 8, !tbaa !9
  %call16.i = tail call %union.tree_node* @convert(%union.tree_node* %10, %union.tree_node* %9) #5
  %constant17.i = getelementptr inbounds %struct.args_size* %initial_offset_ptr, i64 0, i32 0
  %11 = load i64* %constant17.i, align 8, !tbaa !91
  %call18.i = tail call %union.tree_node* @size_int_wide(i64 %11, i32 1) #5
  %call19.i = tail call %union.tree_node* @size_binop(i32 59, %union.tree_node* %call16.i, %union.tree_node* %call18.i) #5
  %call22.i = tail call %union.tree_node* @round_up(%union.tree_node* %call19.i, i32 %div.i) #5
  store %union.tree_node* %call22.i, %union.tree_node** %var9.i, align 8, !tbaa !89
  store i64 0, i64* %constant17.i, align 8, !tbaa !91
  %12 = load i32* @target_flags, align 4, !tbaa !17
  %and25.i = lshr i32 %12, 20
  %13 = and i32 %and25.i, 32
  %14 = add i32 %13, 32
  %cmp28.i = icmp slt i32 %14, %call2
  br i1 %cmp28.i, label %if.then34.i, label %if.end42

if.then34.i:                                      ; preds = %cond.false.i
  %call36.i = tail call %union.tree_node* @size_binop(i32 60, %union.tree_node* %call22.i, %union.tree_node* %save_var.0.i) #5
  store %union.tree_node* %call36.i, %union.tree_node** %var38, align 8, !tbaa !89
  br label %if.end42

if.else.i:                                        ; preds = %if.then8.i
  %constant39.i = getelementptr inbounds %struct.args_size* %initial_offset_ptr, i64 0, i32 0
  %15 = load i64* %constant39.i, align 8, !tbaa !91
  %conv.i = sext i32 %div.i to i64
  %add.i = add i64 %conv.i, -1
  %sub.i = add i64 %add.i, %15
  %neg.i = sub i32 0, %div.i
  %conv41.i = sext i32 %neg.i to i64
  %and42.i = and i64 %sub.i, %conv41.i
  store i64 %and42.i, i64* %constant39.i, align 8, !tbaa !91
  br i1 %cmp.i, label %if.then55.i, label %if.end42

if.then55.i:                                      ; preds = %if.else.i
  %sub57.i = sub nsw i64 %and42.i, %save_constant.0.i
  store i64 %sub57.i, i64* %constant39, align 8, !tbaa !91
  br label %if.end42

if.end42:                                         ; preds = %cond.end, %if.then55.i, %if.else.i, %if.then34.i, %cond.false.i, %if.end.i
  %16 = bitcast %struct.args_size* %offset_ptr to i8*
  %17 = bitcast %struct.args_size* %initial_offset_ptr to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 16, i32 8, i1 false), !tbaa.struct !98
  %cmp43 = icmp eq i32 %passed_mode, 51
  br i1 %cmp43, label %land.lhs.true70, label %if.then45

if.then45:                                        ; preds = %if.end42
  %18 = load i32* @target_flags, align 4, !tbaa !17
  %and = and i32 %18, 33554432
  %tobool46 = icmp eq i32 %and, 0
  %int_cst48 = getelementptr inbounds %union.tree_node* %cond, i64 0, i32 0, i32 2
  %low = bitcast i32* %int_cst48 to i64*
  %19 = load i64* %low, align 8, !tbaa !99
  br i1 %tobool46, label %cond.false50, label %cond.true47

cond.true47:                                      ; preds = %if.then45
  %add = add i64 %19, 7
  %and49 = and i64 %add, -8
  br label %cond.end56

cond.false50:                                     ; preds = %if.then45
  %add54 = add i64 %19, 1
  %and55 = and i64 %add54, -2
  br label %cond.end56

cond.end56:                                       ; preds = %cond.false50, %cond.true47
  %cond57 = phi i64 [ %and49, %cond.true47 ], [ %and55, %cond.false50 ]
  %call58 = tail call %union.tree_node* @size_int_wide(i64 %cond57, i32 0) #5
  br label %land.lhs.true70

land.lhs.true70:                                  ; preds = %if.end42, %cond.end56
  %sizetree.0 = phi %union.tree_node* [ %call58, %cond.end56 ], [ %cond, %if.end42 ]
  %call71 = tail call i32 @host_integerp(%union.tree_node* %sizetree.0, i32 1) #5
  %tobool72 = icmp eq i32 %call71, 0
  br i1 %tobool72, label %land.lhs.true70.if.then79_crit_edge, label %lor.lhs.false

land.lhs.true70.if.then79_crit_edge:              ; preds = %land.lhs.true70
  %.pre = load i32* @target_flags, align 4, !tbaa !17
  br label %if.then79

lor.lhs.false:                                    ; preds = %land.lhs.true70
  %call73 = tail call i64 @tree_low_cst(%union.tree_node* %sizetree.0, i32 1) #5
  %mul = shl nsw i64 %call73, 3
  %20 = load i32* @target_flags, align 4, !tbaa !17
  %and74 = lshr i32 %20, 20
  %21 = and i32 %and74, 32
  %22 = add i32 %21, 32
  %conv77143 = zext i32 %22 to i64
  %rem = srem i64 %mul, %conv77143
  %tobool78 = icmp eq i64 %rem, 0
  br i1 %tobool78, label %do.body, label %if.then79

if.then79:                                        ; preds = %land.lhs.true70.if.then79_crit_edge, %lor.lhs.false
  %23 = phi i32 [ %.pre, %land.lhs.true70.if.then79_crit_edge ], [ %20, %lor.lhs.false ]
  %and80 = lshr i32 %23, 20
  %24 = and i32 %and80, 32
  %25 = add i32 %24, 32
  %div = sdiv i32 %25, 8
  %call83 = tail call %union.tree_node* @round_up(%union.tree_node* %sizetree.0, i32 %div) #5
  br label %do.body

do.body:                                          ; preds = %lor.lhs.false, %if.then79
  %sizetree.1 = phi %union.tree_node* [ %call83, %if.then79 ], [ %sizetree.0, %lor.lhs.false ]
  %call85 = tail call i32 @host_integerp(%union.tree_node* %sizetree.1, i32 0) #5
  %tobool86 = icmp eq i32 %call85, 0
  br i1 %tobool86, label %if.else91, label %if.then87

if.then87:                                        ; preds = %do.body
  %call88 = tail call i64 @tree_low_cst(%union.tree_node* %sizetree.1, i32 0) #5
  %26 = load i64* %constant37, align 8, !tbaa !91
  %add90 = add nsw i64 %26, %call88
  store i64 %add90, i64* %constant37, align 8, !tbaa !91
  br label %do.end

if.else91:                                        ; preds = %do.body
  %27 = load %union.tree_node** %var36, align 8, !tbaa !89
  %cmp93 = icmp eq %union.tree_node* %27, null
  %28 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 1), align 8, !tbaa !9
  %call96 = tail call %union.tree_node* @convert(%union.tree_node* %28, %union.tree_node* %sizetree.1) #5
  br i1 %cmp93, label %if.then95, label %if.else98

if.then95:                                        ; preds = %if.else91
  store %union.tree_node* %call96, %union.tree_node** %var36, align 8, !tbaa !89
  br label %do.end

if.else98:                                        ; preds = %if.else91
  %call101 = tail call %union.tree_node* @size_binop(i32 59, %union.tree_node* %27, %union.tree_node* %call96) #5
  store %union.tree_node* %call101, %union.tree_node** %var36, align 8, !tbaa !89
  br label %do.end

do.end:                                           ; preds = %if.then87, %if.else98, %if.then95
  ret void
}

declare %struct.rtx_def* @gen_rtx_CONST_INT(i32, i64) #2

declare %struct.rtx_def* @expand_expr(%union.tree_node*, %struct.rtx_def*, i32, i32) #2

declare %union.tree_node* @size_int_wide(i64, i32) #2

declare %union.tree_node* @size_binop(i32, %union.tree_node*, %union.tree_node*) #2

declare %union.tree_node* @convert(%union.tree_node*, %union.tree_node*) #2

declare void @emit_group_store(%struct.rtx_def*, %struct.rtx_def*, i32) #2

declare %struct.rtx_def* @validize_mem(%struct.rtx_def*) #2

declare void @move_block_from_reg(i32, %struct.rtx_def*, i32, i32) #2

declare void @function_arg_advance(%struct.ix86_args*, i32, %union.tree_node*, i32) #2

declare i32 @ix86_function_arg_boundary(i32, %union.tree_node*) #2

declare void @mark_user_reg(%struct.rtx_def*) #2

declare void @maybe_set_unchanging(%struct.rtx_def*, %union.tree_node*) #2

declare %struct.rtx_def* @emit_move_insn(%struct.rtx_def*, %struct.rtx_def*) #2

declare void @push_to_sequence(%struct.rtx_def*) #2

declare %struct.rtx_def* @convert_to_mode(i32, %struct.rtx_def*, i32) #2

declare %struct.rtx_def* @expand_assignment(%union.tree_node*, %union.tree_node*, i32, i32) #2

declare %union.tree_node* @make_tree(%union.tree_node*, %struct.rtx_def*) #2

declare void @end_sequence() #2

declare i8* @xrealloc(i8*, i64) #2

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #5

declare %struct.rtx_def* @gen_realpart(i32, %struct.rtx_def*) #2

declare %struct.rtx_def* @gen_imagpart(i32, %struct.rtx_def*) #2

declare i32 @reg_mentioned_p(%struct.rtx_def*, %struct.rtx_def*) #2

declare %struct.rtx_def* @get_last_insn() #2

declare %struct.rtx_def* @single_set_2(%struct.rtx_def*, %struct.rtx_def*) #2

declare %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def*) #2

declare void @mark_reg_pointer(%struct.rtx_def*, i32) #2

declare %struct.rtx_def* @adjust_address_1(%struct.rtx_def*, i32, i64, i32, i32) #2

declare %struct.rtx_def* @emit_insns(%struct.rtx_def*) #2

declare i32 @ix86_return_pops_args(%union.tree_node*, %union.tree_node*, i32) #2

declare %struct.rtx_def* @ix86_function_value(%union.tree_node*) #2

declare %union.tree_node* @size_in_bytes(%union.tree_node*) #2

declare %union.tree_node* @round_up(%union.tree_node*, i32) #2

; Function Attrs: nounwind uwtable
define void @uninitialized_vars_warning(%union.tree_node* nocapture readonly %block) #0 {
entry:
  %vars = getelementptr inbounds %union.tree_node* %block, i64 0, i32 0, i32 2
  %0 = bitcast i32* %vars to %union.tree_node**
  %decl.0183 = load %union.tree_node** %0, align 8
  %tobool184 = icmp eq %union.tree_node* %decl.0183, null
  br i1 %tobool184, label %for.end, label %for.body

for.body:                                         ; preds = %entry, %for.inc
  %decl.0185 = phi %union.tree_node* [ %decl.0, %for.inc ], [ %decl.0183, %entry ]
  %1 = load i32* @warn_uninitialized, align 4, !tbaa !17
  %tobool2 = icmp eq i32 %1, 0
  br i1 %tobool2, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %for.body
  %code = getelementptr inbounds %union.tree_node* %decl.0185, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 34
  br i1 %cmp, label %land.lhs.true3, label %if.end

land.lhs.true3:                                   ; preds = %land.lhs.true
  %type = getelementptr inbounds %union.tree_node* %decl.0185, i64 0, i32 0, i32 0, i32 1
  %2 = load %union.tree_node** %type, align 8, !tbaa !56
  %code6 = getelementptr inbounds %union.tree_node* %2, i64 0, i32 0, i32 0, i32 2
  %bf.load7 = load i32* %code6, align 8
  %bf.clear8 = and i32 %bf.load7, 255
  %bf.clear8.off = add i32 %bf.clear8, -18
  %switch = icmp ult i32 %bf.clear8.off, 5
  br i1 %switch, label %if.end, label %land.lhs.true41

land.lhs.true41:                                  ; preds = %land.lhs.true3
  %rtl = getelementptr inbounds %union.tree_node* %decl.0185, i64 0, i32 0, i32 17
  %3 = load %struct.rtx_def** %rtl, align 8, !tbaa !63
  %tobool43 = icmp eq %struct.rtx_def* %3, null
  br i1 %tobool43, label %cond.end, label %cond.end59

cond.end:                                         ; preds = %land.lhs.true41
  tail call void @make_decl_rtl(%union.tree_node* %decl.0185, i8* null) #5
  %4 = load %struct.rtx_def** %rtl, align 8, !tbaa !63
  %cmp48 = icmp eq %struct.rtx_def* %4, null
  br i1 %cmp48, label %if.end, label %cond.end59

cond.end59:                                       ; preds = %land.lhs.true41, %cond.end
  %5 = phi %struct.rtx_def* [ %4, %cond.end ], [ %3, %land.lhs.true41 ]
  %6 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 0
  %bf.load61 = load i32* %6, align 8
  %bf.clear62 = and i32 %bf.load61, 65535
  %cmp63 = icmp eq i32 %bf.clear62, 61
  br i1 %cmp63, label %land.lhs.true64, label %if.end

land.lhs.true64:                                  ; preds = %cond.end59
  %initial = getelementptr inbounds %union.tree_node* %decl.0185, i64 0, i32 0, i32 12
  %7 = load %union.tree_node** %initial, align 8, !tbaa !61
  %cmp66 = icmp eq %union.tree_node* %7, null
  br i1 %cmp66, label %land.lhs.true67, label %if.end

land.lhs.true67:                                  ; preds = %land.lhs.true64
  %tobool70 = icmp eq %struct.rtx_def* %5, null
  br i1 %tobool70, label %cond.false74, label %cond.end77

cond.false74:                                     ; preds = %land.lhs.true67
  tail call void @make_decl_rtl(%union.tree_node* %decl.0185, i8* null) #5
  %8 = load %struct.rtx_def** %rtl, align 8, !tbaa !63
  br label %cond.end77

cond.end77:                                       ; preds = %land.lhs.true67, %cond.false74
  %cond78 = phi %struct.rtx_def* [ %8, %cond.false74 ], [ %5, %land.lhs.true67 ]
  %arrayidx = getelementptr inbounds %struct.rtx_def* %cond78, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %9 = load i32* %rtuint, align 4, !tbaa !17
  %call = tail call i32 @regno_uninitialized(i32 %9) #5
  %tobool79 = icmp eq i32 %call, 0
  br i1 %tobool79, label %if.end, label %if.then

if.then:                                          ; preds = %cond.end77
  tail call void (%union.tree_node*, i8*, ...)* @warning_with_decl(%union.tree_node* %decl.0185, i8* getelementptr inbounds ([50 x i8]* @.str3, i64 0, i64 0)) #5
  br label %if.end

if.end:                                           ; preds = %land.lhs.true3, %cond.end77, %cond.end, %for.body, %if.then, %land.lhs.true64, %cond.end59, %land.lhs.true
  %10 = load i32* @extra_warnings, align 4, !tbaa !17
  %tobool80 = icmp eq i32 %10, 0
  br i1 %tobool80, label %for.inc, label %land.lhs.true81

land.lhs.true81:                                  ; preds = %if.end
  %code83 = getelementptr inbounds %union.tree_node* %decl.0185, i64 0, i32 0, i32 0, i32 2
  %bf.load84 = load i32* %code83, align 8
  %bf.clear85 = and i32 %bf.load84, 255
  %cmp86 = icmp eq i32 %bf.clear85, 34
  br i1 %cmp86, label %land.lhs.true87, label %for.inc

land.lhs.true87:                                  ; preds = %land.lhs.true81
  %rtl89 = getelementptr inbounds %union.tree_node* %decl.0185, i64 0, i32 0, i32 17
  %11 = load %struct.rtx_def** %rtl89, align 8, !tbaa !63
  %tobool90 = icmp eq %struct.rtx_def* %11, null
  br i1 %tobool90, label %cond.end97, label %cond.end110

cond.end97:                                       ; preds = %land.lhs.true87
  tail call void @make_decl_rtl(%union.tree_node* %decl.0185, i8* null) #5
  %12 = load %struct.rtx_def** %rtl89, align 8, !tbaa !63
  %cmp99 = icmp eq %struct.rtx_def* %12, null
  br i1 %cmp99, label %for.inc, label %cond.end110

cond.end110:                                      ; preds = %land.lhs.true87, %cond.end97
  %13 = phi %struct.rtx_def* [ %12, %cond.end97 ], [ %11, %land.lhs.true87 ]
  %14 = getelementptr inbounds %struct.rtx_def* %13, i64 0, i32 0
  %bf.load112 = load i32* %14, align 8
  %bf.clear113 = and i32 %bf.load112, 65535
  %cmp114 = icmp eq i32 %bf.clear113, 61
  br i1 %cmp114, label %cond.end125, label %for.inc

cond.end125:                                      ; preds = %cond.end110
  %arrayidx128 = getelementptr inbounds %struct.rtx_def* %13, i64 0, i32 1, i64 0
  %rtuint129 = bitcast %union.rtunion_def* %arrayidx128 to i32*
  %15 = load i32* %rtuint129, align 4, !tbaa !17
  %call130 = tail call i32 @regno_clobbered_at_setjmp(i32 %15) #5
  %tobool131 = icmp eq i32 %call130, 0
  br i1 %tobool131, label %for.inc, label %if.then132

if.then132:                                       ; preds = %cond.end125
  tail call void (%union.tree_node*, i8*, ...)* @warning_with_decl(%union.tree_node* %decl.0185, i8* getelementptr inbounds ([57 x i8]* @.str4, i64 0, i64 0)) #5
  br label %for.inc

for.inc:                                          ; preds = %cond.end125, %cond.end97, %if.end, %land.lhs.true81, %cond.end110, %if.then132
  %chain = getelementptr inbounds %union.tree_node* %decl.0185, i64 0, i32 0, i32 0, i32 0
  %decl.0 = load %union.tree_node** %chain, align 8
  %tobool = icmp eq %union.tree_node* %decl.0, null
  br i1 %tobool, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc, %entry
  %16 = getelementptr inbounds %union.tree_node* %block, i64 0, i32 0, i32 4
  %sub.0180 = load %union.tree_node** %16, align 8
  %tobool137181 = icmp eq %union.tree_node* %sub.0180, null
  br i1 %tobool137181, label %for.end142, label %for.body138

for.body138:                                      ; preds = %for.end, %for.body138
  %sub.0182 = phi %union.tree_node* [ %sub.0, %for.body138 ], [ %sub.0180, %for.end ]
  tail call void @uninitialized_vars_warning(%union.tree_node* %sub.0182)
  %chain141 = getelementptr inbounds %union.tree_node* %sub.0182, i64 0, i32 0, i32 0, i32 0
  %sub.0 = load %union.tree_node** %chain141, align 8
  %tobool137 = icmp eq %union.tree_node* %sub.0, null
  br i1 %tobool137, label %for.end142, label %for.body138

for.end142:                                       ; preds = %for.body138, %for.end
  ret void
}

declare i32 @regno_uninitialized(i32) #2

declare void @warning_with_decl(%union.tree_node*, i8*, ...) #2

declare i32 @regno_clobbered_at_setjmp(i32) #2

; Function Attrs: nounwind uwtable
define void @setjmp_args_warning() #0 {
entry:
  %0 = load %union.tree_node** @current_function_decl, align 8, !tbaa !9
  %arguments = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 10
  %decl.046 = load %union.tree_node** %arguments, align 8
  %tobool47 = icmp eq %union.tree_node* %decl.046, null
  br i1 %tobool47, label %for.end, label %for.body

for.body:                                         ; preds = %entry, %for.inc
  %decl.048 = phi %union.tree_node* [ %decl.0, %for.inc ], [ %decl.046, %entry ]
  %rtl = getelementptr inbounds %union.tree_node* %decl.048, i64 0, i32 0, i32 17
  %1 = load %struct.rtx_def** %rtl, align 8, !tbaa !63
  %tobool3 = icmp eq %struct.rtx_def* %1, null
  br i1 %tobool3, label %cond.end, label %cond.end17

cond.end:                                         ; preds = %for.body
  tail call void @make_decl_rtl(%union.tree_node* %decl.048, i8* null) #5
  %2 = load %struct.rtx_def** %rtl, align 8, !tbaa !63
  %cmp = icmp eq %struct.rtx_def* %2, null
  br i1 %cmp, label %for.inc, label %cond.end17

cond.end17:                                       ; preds = %for.body, %cond.end
  %3 = phi %struct.rtx_def* [ %2, %cond.end ], [ %1, %for.body ]
  %4 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 0
  %bf.load = load i32* %4, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp19 = icmp eq i32 %bf.clear, 61
  br i1 %cmp19, label %cond.end30, label %for.inc

cond.end30:                                       ; preds = %cond.end17
  %arrayidx = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %5 = load i32* %rtuint, align 4, !tbaa !17
  %call = tail call i32 @regno_clobbered_at_setjmp(i32 %5) #5
  %tobool32 = icmp eq i32 %call, 0
  br i1 %tobool32, label %for.inc, label %if.then

if.then:                                          ; preds = %cond.end30
  tail call void (%union.tree_node*, i8*, ...)* @warning_with_decl(%union.tree_node* %decl.048, i8* getelementptr inbounds ([57 x i8]* @.str5, i64 0, i64 0)) #5
  br label %for.inc

for.inc:                                          ; preds = %cond.end30, %cond.end, %cond.end17, %if.then
  %chain = getelementptr inbounds %union.tree_node* %decl.048, i64 0, i32 0, i32 0, i32 0
  %decl.0 = load %union.tree_node** %chain, align 8
  %tobool = icmp eq %union.tree_node* %decl.0, null
  br i1 %tobool, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define void @setjmp_protect(%union.tree_node* nocapture readonly %block) #0 {
entry:
  %vars = getelementptr inbounds %union.tree_node* %block, i64 0, i32 0, i32 2
  %0 = bitcast i32* %vars to %union.tree_node**
  %decl.0108 = load %union.tree_node** %0, align 8
  %tobool109 = icmp eq %union.tree_node* %decl.0108, null
  br i1 %tobool109, label %for.end, label %for.body

for.body:                                         ; preds = %entry, %for.inc
  %decl.0110 = phi %union.tree_node* [ %decl.0, %for.inc ], [ %decl.0108, %entry ]
  %code = getelementptr inbounds %union.tree_node* %decl.0110, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %1 = and i32 %bf.load, 254
  %switch = icmp eq i32 %1, 34
  br i1 %switch, label %land.lhs.true, label %for.inc

land.lhs.true:                                    ; preds = %for.body
  %rtl = getelementptr inbounds %union.tree_node* %decl.0110, i64 0, i32 0, i32 17
  %2 = load %struct.rtx_def** %rtl, align 8, !tbaa !63
  %tobool8 = icmp eq %struct.rtx_def* %2, null
  br i1 %tobool8, label %cond.end, label %cond.end24

cond.end:                                         ; preds = %land.lhs.true
  tail call void @make_decl_rtl(%union.tree_node* %decl.0110, i8* null) #5
  %3 = load %struct.rtx_def** %rtl, align 8, !tbaa !63
  %cmp13 = icmp eq %struct.rtx_def* %3, null
  br i1 %cmp13, label %for.inc, label %cond.end24

cond.end24:                                       ; preds = %land.lhs.true, %cond.end
  %4 = phi %struct.rtx_def* [ %3, %cond.end ], [ %2, %land.lhs.true ]
  %5 = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 0
  %bf.load26 = load i32* %5, align 8
  %bf.clear27 = and i32 %bf.load26, 65535
  %cmp28 = icmp eq i32 %bf.clear27, 61
  br i1 %cmp28, label %land.lhs.true59, label %cond.end39

cond.end39:                                       ; preds = %cond.end24
  %bf.clear42 = and i32 %bf.load26, 65535
  %cmp43 = icmp eq i32 %bf.clear42, 66
  br i1 %cmp43, label %cond.end54, label %for.inc

cond.end54:                                       ; preds = %cond.end39
  %arrayidx = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %6 = load %struct.rtx_def** %rtx, align 8, !tbaa !9
  %7 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 0
  %bf.load56 = load i32* %7, align 8
  %bf.clear57 = and i32 %bf.load56, 65535
  %cmp58 = icmp eq i32 %bf.clear57, 70
  br i1 %cmp58, label %land.lhs.true59, label %for.inc

land.lhs.true59:                                  ; preds = %cond.end54, %cond.end24
  %abstract_origin = getelementptr inbounds %union.tree_node* %decl.0110, i64 0, i32 0, i32 13
  %8 = load %union.tree_node** %abstract_origin, align 8, !tbaa !102
  %cmp61 = icmp eq %union.tree_node* %8, null
  %cmp65 = icmp eq %union.tree_node* %8, %decl.0110
  %or.cond = or i1 %cmp61, %cmp65
  br i1 %or.cond, label %land.lhs.true66, label %for.inc

land.lhs.true66:                                  ; preds = %land.lhs.true59
  %regdecl_flag = getelementptr inbounds %union.tree_node* %decl.0110, i64 0, i32 0, i32 5
  %9 = bitcast i48* %regdecl_flag to i64*
  %bf.load68 = load i64* %9, align 8
  %bf.cast = and i64 %bf.load68, 1024
  %tobool70 = icmp eq i64 %bf.cast, 0
  br i1 %tobool70, label %if.then, label %for.inc

if.then:                                          ; preds = %land.lhs.true66
  tail call void @put_var_into_stack(%union.tree_node* %decl.0110)
  br label %for.inc

for.inc:                                          ; preds = %for.body, %land.lhs.true59, %land.lhs.true66, %cond.end, %cond.end39, %cond.end54, %if.then
  %chain = getelementptr inbounds %union.tree_node* %decl.0110, i64 0, i32 0, i32 0, i32 0
  %decl.0 = load %union.tree_node** %chain, align 8
  %tobool = icmp eq %union.tree_node* %decl.0, null
  br i1 %tobool, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc, %entry
  %10 = getelementptr inbounds %union.tree_node* %block, i64 0, i32 0, i32 4
  %sub.0105 = load %union.tree_node** %10, align 8
  %tobool74106 = icmp eq %union.tree_node* %sub.0105, null
  br i1 %tobool74106, label %for.end79, label %for.body75

for.body75:                                       ; preds = %for.end, %for.body75
  %sub.0107 = phi %union.tree_node* [ %sub.0, %for.body75 ], [ %sub.0105, %for.end ]
  tail call void @setjmp_protect(%union.tree_node* %sub.0107)
  %chain78 = getelementptr inbounds %union.tree_node* %sub.0107, i64 0, i32 0, i32 0, i32 0
  %sub.0 = load %union.tree_node** %chain78, align 8
  %tobool74 = icmp eq %union.tree_node* %sub.0, null
  br i1 %tobool74, label %for.end79, label %for.body75

for.end79:                                        ; preds = %for.body75, %for.end
  ret void
}

; Function Attrs: nounwind uwtable
define void @setjmp_protect_args() #0 {
entry:
  %0 = load %union.tree_node** @current_function_decl, align 8, !tbaa !9
  %arguments = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 10
  %decl.084 = load %union.tree_node** %arguments, align 8
  %tobool85 = icmp eq %union.tree_node* %decl.084, null
  br i1 %tobool85, label %for.end, label %for.body

for.body:                                         ; preds = %entry, %for.inc
  %decl.086 = phi %union.tree_node* [ %decl.0, %for.inc ], [ %decl.084, %entry ]
  %code = getelementptr inbounds %union.tree_node* %decl.086, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %1 = and i32 %bf.load, 254
  %switch = icmp eq i32 %1, 34
  br i1 %switch, label %land.lhs.true, label %for.inc

land.lhs.true:                                    ; preds = %for.body
  %rtl = getelementptr inbounds %union.tree_node* %decl.086, i64 0, i32 0, i32 17
  %2 = load %struct.rtx_def** %rtl, align 8, !tbaa !63
  %tobool8 = icmp eq %struct.rtx_def* %2, null
  br i1 %tobool8, label %cond.end, label %cond.end24

cond.end:                                         ; preds = %land.lhs.true
  tail call void @make_decl_rtl(%union.tree_node* %decl.086, i8* null) #5
  %3 = load %struct.rtx_def** %rtl, align 8, !tbaa !63
  %cmp13 = icmp eq %struct.rtx_def* %3, null
  br i1 %cmp13, label %for.inc, label %cond.end24

cond.end24:                                       ; preds = %land.lhs.true, %cond.end
  %4 = phi %struct.rtx_def* [ %3, %cond.end ], [ %2, %land.lhs.true ]
  %5 = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 0
  %bf.load26 = load i32* %5, align 8
  %bf.clear27 = and i32 %bf.load26, 65535
  %cmp28 = icmp eq i32 %bf.clear27, 61
  br i1 %cmp28, label %land.lhs.true59, label %cond.end39

cond.end39:                                       ; preds = %cond.end24
  %bf.clear42 = and i32 %bf.load26, 65535
  %cmp43 = icmp eq i32 %bf.clear42, 66
  br i1 %cmp43, label %cond.end54, label %for.inc

cond.end54:                                       ; preds = %cond.end39
  %arrayidx = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %6 = load %struct.rtx_def** %rtx, align 8, !tbaa !9
  %7 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 0
  %bf.load56 = load i32* %7, align 8
  %bf.clear57 = and i32 %bf.load56, 65535
  %cmp58 = icmp eq i32 %bf.clear57, 70
  br i1 %cmp58, label %land.lhs.true59, label %for.inc

land.lhs.true59:                                  ; preds = %cond.end54, %cond.end24
  %regdecl_flag = getelementptr inbounds %union.tree_node* %decl.086, i64 0, i32 0, i32 5
  %8 = bitcast i48* %regdecl_flag to i64*
  %bf.load61 = load i64* %8, align 8
  %bf.cast = and i64 %bf.load61, 1024
  %tobool63 = icmp eq i64 %bf.cast, 0
  br i1 %tobool63, label %if.then, label %for.inc

if.then:                                          ; preds = %land.lhs.true59
  tail call void @put_var_into_stack(%union.tree_node* %decl.086)
  br label %for.inc

for.inc:                                          ; preds = %for.body, %land.lhs.true59, %cond.end, %cond.end39, %cond.end54, %if.then
  %chain = getelementptr inbounds %union.tree_node* %decl.086, i64 0, i32 0, i32 0, i32 0
  %decl.0 = load %union.tree_node** %chain, align 8
  %tobool = icmp eq %union.tree_node* %decl.0, null
  br i1 %tobool, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @lookup_static_chain(%union.tree_node* %decl) #0 {
entry:
  %call = tail call %union.tree_node* @decl_function_context(%union.tree_node* %decl) #5
  %cmp = icmp eq %union.tree_node* %call, null
  br i1 %cmp, label %return, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %code = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp1 = icmp eq i32 %bf.clear, 30
  br i1 %cmp1, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %lor.lhs.false
  %regdecl_flag = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 5
  %0 = bitcast i48* %regdecl_flag to i64*
  %bf.load3 = load i64* %0, align 8
  %bf.cast = and i64 %bf.load3, 1024
  %tobool = icmp eq i64 %bf.cast, 0
  br i1 %tobool, label %if.end, label %return

if.end:                                           ; preds = %land.lhs.true, %lor.lhs.false
  %1 = load %union.tree_node** @current_function_decl, align 8, !tbaa !9
  %cmp5 = icmp eq %union.tree_node* %call, %1
  %2 = load %union.tree_node** @inline_function_decl, align 8
  %cmp7 = icmp eq %union.tree_node* %call, %2
  %or.cond = or i1 %cmp5, %cmp7
  br i1 %or.cond, label %if.then8, label %if.end9

if.then8:                                         ; preds = %if.end
  %3 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 7), align 8, !tbaa !9
  br label %return

if.end9:                                          ; preds = %if.end
  %4 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_context_display = getelementptr inbounds %struct.function* %4, i64 0, i32 33
  %link.024 = load %union.tree_node** %x_context_display, align 8
  %tobool1025 = icmp eq %union.tree_node* %link.024, null
  br i1 %tobool1025, label %for.end, label %for.body

for.cond:                                         ; preds = %for.body
  %chain = getelementptr inbounds %union.tree_node* %link.026, i64 0, i32 0, i32 0, i32 0
  %link.0 = load %union.tree_node** %chain, align 8
  %tobool10 = icmp eq %union.tree_node* %link.0, null
  br i1 %tobool10, label %for.end, label %for.body

for.body:                                         ; preds = %if.end9, %for.cond
  %link.026 = phi %union.tree_node* [ %link.0, %for.cond ], [ %link.024, %if.end9 ]
  %purpose = getelementptr inbounds %union.tree_node* %link.026, i64 0, i32 0, i32 1
  %5 = load i8** %purpose, align 8
  %6 = bitcast i8* %5 to %union.tree_node*
  %cmp11 = icmp eq %union.tree_node* %6, %call
  br i1 %cmp11, label %if.then12, label %for.cond

if.then12:                                        ; preds = %for.body
  %value = getelementptr inbounds %union.tree_node* %link.026, i64 0, i32 0, i32 2
  %7 = bitcast i32* %value to %union.tree_node**
  %8 = load %union.tree_node** %7, align 8, !tbaa !27
  %operands = getelementptr inbounds %union.tree_node* %8, i64 0, i32 0, i32 2
  %arrayidx = getelementptr inbounds i32* %operands, i64 2
  %9 = bitcast i32* %arrayidx to %struct.rtx_def**
  %10 = load %struct.rtx_def** %9, align 8, !tbaa !9
  br label %return

for.end:                                          ; preds = %for.cond, %if.end9
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8]* @.str, i64 0, i64 0), i32 5612, i8* getelementptr inbounds ([20 x i8]* @__FUNCTION__.lookup_static_chain, i64 0, i64 0)) #8
  unreachable

return:                                           ; preds = %entry, %land.lhs.true, %if.then12, %if.then8
  %retval.0 = phi %struct.rtx_def* [ %3, %if.then8 ], [ %10, %if.then12 ], [ null, %land.lhs.true ], [ null, %entry ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @fix_lexical_addr(%struct.rtx_def* readonly %addr, %union.tree_node* %var) #0 {
entry:
  %call = tail call %union.tree_node* @decl_function_context(%union.tree_node* %var) #5
  %0 = load %union.tree_node** @current_function_decl, align 8, !tbaa !9
  %cmp = icmp eq %union.tree_node* %call, %0
  %1 = load %union.tree_node** @inline_function_decl, align 8
  %cmp1 = icmp eq %union.tree_node* %call, %1
  %or.cond = or i1 %cmp, %cmp1
  br i1 %or.cond, label %return, label %if.end

if.end:                                           ; preds = %entry
  %p.05.i = load %struct.function** @outer_function_chain, align 8
  %tobool6.i = icmp eq %struct.function* %p.05.i, null
  br i1 %tobool6.i, label %for.end.i, label %for.body.i

for.cond.i:                                       ; preds = %for.body.i
  %outer.i = getelementptr inbounds %struct.function* %p.07.i, i64 0, i32 7
  %p.0.i = load %struct.function** %outer.i, align 8
  %tobool.i = icmp eq %struct.function* %p.0.i, null
  br i1 %tobool.i, label %for.end.i, label %for.body.i

for.body.i:                                       ; preds = %if.end, %for.cond.i
  %p.07.i = phi %struct.function* [ %p.0.i, %for.cond.i ], [ %p.05.i, %if.end ]
  %decl1.i = getelementptr inbounds %struct.function* %p.07.i, i64 0, i32 6
  %2 = load %union.tree_node** %decl1.i, align 8, !tbaa !1
  %cmp.i = icmp eq %union.tree_node* %2, %call
  br i1 %cmp.i, label %find_function_data.exit, label %for.cond.i

for.end.i:                                        ; preds = %for.cond.i, %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8]* @.str, i64 0, i64 0), i32 329, i8* getelementptr inbounds ([19 x i8]* @__FUNCTION__.find_function_data, i64 0, i64 0)) #8
  unreachable

find_function_data.exit:                          ; preds = %for.body.i
  %3 = getelementptr inbounds %struct.rtx_def* %addr, i64 0, i32 0
  %bf.load = load i32* %3, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp3 = icmp eq i32 %bf.clear, 70
  br i1 %cmp3, label %land.lhs.true, label %if.end14

land.lhs.true:                                    ; preds = %find_function_data.exit
  %arrayidx = getelementptr inbounds %struct.rtx_def* %addr, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %4 = load %struct.rtx_def** %rtx, align 8, !tbaa !9
  %5 = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 0
  %bf.load4 = load i32* %5, align 8
  %bf.clear5 = and i32 %bf.load4, 65535
  %cmp6 = icmp eq i32 %bf.clear5, 66
  br i1 %cmp6, label %if.then7, label %if.end14

if.then7:                                         ; preds = %land.lhs.true
  %arrayidx12 = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 1, i64 0
  %rtx13 = bitcast %union.rtunion_def* %arrayidx12 to %struct.rtx_def**
  %6 = load %struct.rtx_def** %rtx13, align 8, !tbaa !9
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 0
  %bf.load15.pre = load i32* %.phi.trans.insert, align 8
  br label %if.end14

if.end14:                                         ; preds = %if.then7, %land.lhs.true, %find_function_data.exit
  %bf.load15 = phi i32 [ %bf.load15.pre, %if.then7 ], [ %bf.load, %land.lhs.true ], [ %bf.load, %find_function_data.exit ]
  %addr.addr.0 = phi %struct.rtx_def* [ %6, %if.then7 ], [ %addr, %land.lhs.true ], [ %addr, %find_function_data.exit ]
  %bf.clear16 = and i32 %bf.load15, 65535
  switch i32 %bf.clear16, label %if.else38 [
    i32 61, label %if.end40
    i32 75, label %land.lhs.true22
  ]

land.lhs.true22:                                  ; preds = %if.end14
  %arrayidx24 = getelementptr inbounds %struct.rtx_def* %addr.addr.0, i64 0, i32 1, i64 1
  %rtx25 = bitcast %union.rtunion_def* %arrayidx24 to %struct.rtx_def**
  %7 = load %struct.rtx_def** %rtx25, align 8, !tbaa !9
  %8 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 0
  %bf.load26 = load i32* %8, align 8
  %bf.clear27 = and i32 %bf.load26, 65535
  %cmp28 = icmp eq i32 %bf.clear27, 54
  br i1 %cmp28, label %if.then29, label %if.else38

if.then29:                                        ; preds = %land.lhs.true22
  %arrayidx31 = getelementptr inbounds %struct.rtx_def* %addr.addr.0, i64 0, i32 1, i64 0
  %rtx32 = bitcast %union.rtunion_def* %arrayidx31 to %struct.rtx_def**
  %9 = load %struct.rtx_def** %rtx32, align 8, !tbaa !9
  %rtwint = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 1, i64 0, i32 0
  %10 = load i64* %rtwint, align 8, !tbaa !60
  br label %if.end40

if.else38:                                        ; preds = %if.end14, %land.lhs.true22
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8]* @.str, i64 0, i64 0), i32 5645, i8* getelementptr inbounds ([17 x i8]* @__FUNCTION__.fix_lexical_addr, i64 0, i64 0)) #8
  unreachable

if.end40:                                         ; preds = %if.end14, %if.then29
  %displacement.0 = phi i64 [ %10, %if.then29 ], [ 0, %if.end14 ]
  %basereg.0 = phi %struct.rtx_def* [ %9, %if.then29 ], [ %addr.addr.0, %if.end14 ]
  %internal_arg_pointer = getelementptr inbounds %struct.function* %p.07.i, i64 0, i32 15
  %11 = load %struct.rtx_def** %internal_arg_pointer, align 8, !tbaa !84
  %cmp41 = icmp eq %struct.rtx_def* %basereg.0, %11
  br i1 %cmp41, label %if.then42, label %if.else56

if.then42:                                        ; preds = %if.end40
  %call44 = tail call %struct.rtx_def* @get_arg_pointer_save_area(%struct.function* %p.07.i)
  %arrayidx46 = getelementptr inbounds %struct.rtx_def* %call44, i64 0, i32 1, i64 0
  %rtx47 = bitcast %union.rtunion_def* %arrayidx46 to %struct.rtx_def**
  %12 = load %struct.rtx_def** %rtx47, align 8, !tbaa !9
  %call48 = tail call %struct.rtx_def* @fix_lexical_addr(%struct.rtx_def* %12, %union.tree_node* %var)
  %13 = load i32* @target_flags, align 4, !tbaa !17
  %and = lshr i32 %13, 25
  %14 = and i32 %and, 1
  %15 = or i32 %14, 4
  %call49 = tail call %struct.rtx_def* @memory_address(i32 %15, %struct.rtx_def* %call48) #5
  %16 = load i32* @target_flags, align 4, !tbaa !17
  %and50 = lshr i32 %16, 25
  %17 = and i32 %and50, 1
  %18 = or i32 %17, 4
  %call53 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %18, %struct.rtx_def* %call49) #5
  %call54 = tail call i64 @get_frame_alias_set() #5
  tail call void @set_mem_alias_set(%struct.rtx_def* %call53, i64 %call54) #5
  %call55 = tail call %struct.rtx_def* @copy_to_reg(%struct.rtx_def* %call53) #5
  br label %if.end66

if.else56:                                        ; preds = %if.end40
  %19 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 7), align 8, !tbaa !9
  %cmp57 = icmp eq %struct.rtx_def* %basereg.0, %19
  br i1 %cmp57, label %if.then58, label %if.then68

if.then58:                                        ; preds = %if.else56
  %20 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_context_display = getelementptr inbounds %struct.function* %20, i64 0, i32 33
  %link.095 = load %union.tree_node** %x_context_display, align 8
  %tobool5996 = icmp eq %union.tree_node* %link.095, null
  br i1 %tobool5996, label %if.then68, label %for.body

for.cond:                                         ; preds = %for.body
  %chain = getelementptr inbounds %union.tree_node* %link.097, i64 0, i32 0, i32 0, i32 0
  %link.0 = load %union.tree_node** %chain, align 8
  %tobool59 = icmp eq %union.tree_node* %link.0, null
  br i1 %tobool59, label %if.then68, label %for.body

for.body:                                         ; preds = %if.then58, %for.cond
  %link.097 = phi %union.tree_node* [ %link.0, %for.cond ], [ %link.095, %if.then58 ]
  %purpose = getelementptr inbounds %union.tree_node* %link.097, i64 0, i32 0, i32 1
  %21 = load i8** %purpose, align 8
  %22 = bitcast i8* %21 to %union.tree_node*
  %cmp60 = icmp eq %union.tree_node* %22, %call
  br i1 %cmp60, label %if.then61, label %for.cond

if.then61:                                        ; preds = %for.body
  %value = getelementptr inbounds %union.tree_node* %link.097, i64 0, i32 0, i32 2
  %23 = bitcast i32* %value to %union.tree_node**
  %24 = load %union.tree_node** %23, align 8, !tbaa !27
  %operands = getelementptr inbounds %union.tree_node* %24, i64 0, i32 0, i32 2
  %arrayidx63 = getelementptr inbounds i32* %operands, i64 2
  %25 = bitcast i32* %arrayidx63 to %struct.rtx_def**
  %26 = load %struct.rtx_def** %25, align 8, !tbaa !9
  br label %if.end66

if.end66:                                         ; preds = %if.then61, %if.then42
  %base.0 = phi %struct.rtx_def* [ %call55, %if.then42 ], [ %26, %if.then61 ]
  %cmp67 = icmp eq %struct.rtx_def* %base.0, null
  br i1 %cmp67, label %if.then68, label %if.end69

if.then68:                                        ; preds = %for.cond, %if.then58, %if.else56, %if.end66
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8]* @.str, i64 0, i64 0), i32 5691, i8* getelementptr inbounds ([17 x i8]* @__FUNCTION__.fix_lexical_addr, i64 0, i64 0)) #8
  unreachable

if.end69:                                         ; preds = %if.end66
  %call70 = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %base.0, i64 %displacement.0) #5
  br label %return

return:                                           ; preds = %entry, %if.end69
  %retval.0 = phi %struct.rtx_def* [ %call70, %if.end69 ], [ %addr, %entry ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @get_arg_pointer_save_area(%struct.function* %f) #0 {
entry:
  %x_arg_pointer_save_area = getelementptr inbounds %struct.function* %f, i64 0, i32 30
  %0 = load %struct.rtx_def** %x_arg_pointer_save_area, align 8, !tbaa !103
  %tobool = icmp eq %struct.rtx_def* %0, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i32* @target_flags, align 4, !tbaa !17
  %and = lshr i32 %1, 25
  %2 = and i32 %and, 1
  %3 = or i32 %2, 4
  %idxprom22 = zext i32 %3 to i64
  %arrayidx = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom22
  %4 = load i8* %arrayidx, align 1, !tbaa !22
  %conv = zext i8 %4 to i64
  %call = tail call fastcc %struct.rtx_def* @assign_stack_local_1(i32 %3, i64 %conv, i32 0, %struct.function* %f)
  store %struct.rtx_def* %call, %struct.rtx_def** %x_arg_pointer_save_area, align 8, !tbaa !103
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %ret.0 = phi %struct.rtx_def* [ %0, %entry ], [ %call, %if.then ]
  %5 = load %struct.function** @cfun, align 8, !tbaa !9
  %cmp = icmp eq %struct.function* %5, %f
  br i1 %cmp, label %land.lhs.true, label %if.end14

land.lhs.true:                                    ; preds = %if.end
  %arg_pointer_save_area_init = getelementptr inbounds %struct.function* %f, i64 0, i32 56
  %6 = bitcast i24* %arg_pointer_save_area_init to i32*
  %bf.load = load i32* %6, align 8
  %bf.clear = and i32 %bf.load, 8388608
  %tobool7 = icmp eq i32 %bf.clear, 0
  br i1 %tobool7, label %if.then8, label %if.end14

if.then8:                                         ; preds = %land.lhs.true
  tail call void @start_sequence() #5
  %call9 = tail call %struct.rtx_def* @validize_mem(%struct.rtx_def* %ret.0) #5
  %7 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 6), align 8, !tbaa !9
  %call10 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call9, %struct.rtx_def* %7) #5
  %call11 = tail call %struct.rtx_def* @gen_sequence() #5
  tail call void @end_sequence() #5
  tail call void @push_topmost_sequence() #5
  %call12 = tail call %struct.rtx_def* @get_insns() #5
  %call13 = tail call %struct.rtx_def* @emit_insn_after(%struct.rtx_def* %call11, %struct.rtx_def* %call12) #5
  tail call void @pop_topmost_sequence() #5
  br label %if.end14

if.end14:                                         ; preds = %land.lhs.true, %if.then8, %if.end
  ret %struct.rtx_def* %ret.0
}

declare %struct.rtx_def* @memory_address(i32, %struct.rtx_def*) #2

declare i64 @get_frame_alias_set() #2

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @trampoline_address(%union.tree_node* %function) #0 {
entry:
  %0 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_trampoline_list = getelementptr inbounds %struct.function* %0, i64 0, i32 34
  %link.0112 = load %union.tree_node** %x_trampoline_list, align 8
  %tobool113 = icmp eq %union.tree_node* %link.0112, null
  br i1 %tobool113, label %for.cond3.preheader, label %for.body

for.cond:                                         ; preds = %for.body
  %chain = getelementptr inbounds %union.tree_node* %link.0114, i64 0, i32 0, i32 0, i32 0
  %link.0 = load %union.tree_node** %chain, align 8
  %tobool = icmp eq %union.tree_node* %link.0, null
  br i1 %tobool, label %for.cond3.preheader, label %for.body

for.cond3.preheader:                              ; preds = %for.cond, %entry
  %fp.0109 = load %struct.function** @outer_function_chain, align 8
  %tobool4110 = icmp eq %struct.function* %fp.0109, null
  br i1 %tobool4110, label %for.end30, label %for.body5

for.body:                                         ; preds = %entry, %for.cond
  %link.0114 = phi %union.tree_node* [ %link.0, %for.cond ], [ %link.0112, %entry ]
  %purpose = getelementptr inbounds %union.tree_node* %link.0114, i64 0, i32 0, i32 1
  %1 = load i8** %purpose, align 8
  %2 = bitcast i8* %1 to %union.tree_node*
  %cmp = icmp eq %union.tree_node* %2, %function
  br i1 %cmp, label %if.then, label %for.cond

if.then:                                          ; preds = %for.body
  %value = getelementptr inbounds %union.tree_node* %link.0114, i64 0, i32 0, i32 2
  %3 = bitcast i32* %value to %union.tree_node**
  %4 = load %union.tree_node** %3, align 8, !tbaa !27
  %operands = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 2
  %arrayidx = getelementptr inbounds i32* %operands, i64 2
  %5 = bitcast i32* %arrayidx to %struct.rtx_def**
  %6 = load %struct.rtx_def** %5, align 8, !tbaa !9
  %arrayidx2 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx2 to %struct.rtx_def**
  %7 = load %struct.rtx_def** %rtx, align 8, !tbaa !9
  %8 = load i32* @target_flags, align 4, !tbaa !17
  %and.i.i = lshr i32 %8, 25
  %9 = and i32 %and.i.i, 1
  %10 = or i32 %9, 4
  %call.i.i = tail call %struct.rtx_def* @gen_reg_rtx(i32 %10) #5
  %call1.i.i = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 1) #5
  %call2.i.i = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 -2) #5
  %11 = load i32* @target_flags, align 4, !tbaa !17
  %and3.i.i = lshr i32 %11, 25
  %12 = and i32 %and3.i.i, 1
  %13 = or i32 %12, 4
  %call6.i.i = tail call %struct.rtx_def* @expand_simple_binop(i32 %13, i32 75, %struct.rtx_def* %7, %struct.rtx_def* %call1.i.i, %struct.rtx_def* %call.i.i, i32 0, i32 3) #5
  %14 = load i32* @target_flags, align 4, !tbaa !17
  %and7.i.i = lshr i32 %14, 25
  %15 = and i32 %and7.i.i, 1
  %16 = or i32 %15, 4
  %call10.i.i = tail call %struct.rtx_def* @expand_simple_binop(i32 %16, i32 83, %struct.rtx_def* %call6.i.i, %struct.rtx_def* %call2.i.i, %struct.rtx_def* %call6.i.i, i32 0, i32 3) #5
  br label %return

for.body5:                                        ; preds = %for.cond3.preheader, %for.inc29
  %fp.0111 = phi %struct.function* [ %fp.0, %for.inc29 ], [ %fp.0109, %for.cond3.preheader ]
  %x_trampoline_list6 = getelementptr inbounds %struct.function* %fp.0111, i64 0, i32 34
  %link.1106 = load %union.tree_node** %x_trampoline_list6, align 8
  %tobool8107 = icmp eq %union.tree_node* %link.1106, null
  br i1 %tobool8107, label %for.inc29, label %for.body9

for.cond7:                                        ; preds = %for.body9
  %chain27 = getelementptr inbounds %union.tree_node* %link.1108, i64 0, i32 0, i32 0, i32 0
  %link.1 = load %union.tree_node** %chain27, align 8
  %tobool8 = icmp eq %union.tree_node* %link.1, null
  br i1 %tobool8, label %for.inc29, label %for.body9

for.body9:                                        ; preds = %for.body5, %for.cond7
  %link.1108 = phi %union.tree_node* [ %link.1, %for.cond7 ], [ %link.1106, %for.body5 ]
  %purpose11 = getelementptr inbounds %union.tree_node* %link.1108, i64 0, i32 0, i32 1
  %17 = load i8** %purpose11, align 8
  %18 = bitcast i8* %17 to %union.tree_node*
  %cmp12 = icmp eq %union.tree_node* %18, %function
  br i1 %cmp12, label %if.then13, label %for.cond7

if.then13:                                        ; preds = %for.body9
  %value15 = getelementptr inbounds %union.tree_node* %link.1108, i64 0, i32 0, i32 2
  %19 = bitcast i32* %value15 to %union.tree_node**
  %20 = load %union.tree_node** %19, align 8, !tbaa !27
  %operands17 = getelementptr inbounds %union.tree_node* %20, i64 0, i32 0, i32 2
  %arrayidx18 = getelementptr inbounds i32* %operands17, i64 2
  %21 = bitcast i32* %arrayidx18 to %struct.rtx_def**
  %22 = load %struct.rtx_def** %21, align 8, !tbaa !9
  %arrayidx20 = getelementptr inbounds %struct.rtx_def* %22, i64 0, i32 1, i64 0
  %rtx21 = bitcast %union.rtunion_def* %arrayidx20 to %struct.rtx_def**
  %23 = load %struct.rtx_def** %rtx21, align 8, !tbaa !9
  %call22 = tail call %struct.rtx_def* @fix_lexical_addr(%struct.rtx_def* %23, %union.tree_node* %function)
  %24 = load i32* @target_flags, align 4, !tbaa !17
  %and.i.i87 = lshr i32 %24, 25
  %25 = and i32 %and.i.i87, 1
  %26 = or i32 %25, 4
  %call.i.i88 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %26) #5
  %call1.i.i89 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 1) #5
  %call2.i.i90 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 -2) #5
  %27 = load i32* @target_flags, align 4, !tbaa !17
  %and3.i.i91 = lshr i32 %27, 25
  %28 = and i32 %and3.i.i91, 1
  %29 = or i32 %28, 4
  %call6.i.i92 = tail call %struct.rtx_def* @expand_simple_binop(i32 %29, i32 75, %struct.rtx_def* %call22, %struct.rtx_def* %call1.i.i89, %struct.rtx_def* %call.i.i88, i32 0, i32 3) #5
  %30 = load i32* @target_flags, align 4, !tbaa !17
  %and7.i.i93 = lshr i32 %30, 25
  %31 = and i32 %and7.i.i93, 1
  %32 = or i32 %31, 4
  %call10.i.i94 = tail call %struct.rtx_def* @expand_simple_binop(i32 %32, i32 83, %struct.rtx_def* %call6.i.i92, %struct.rtx_def* %call2.i.i90, %struct.rtx_def* %call6.i.i92, i32 0, i32 3) #5
  br label %return

for.inc29:                                        ; preds = %for.cond7, %for.body5
  %outer = getelementptr inbounds %struct.function* %fp.0111, i64 0, i32 7
  %fp.0 = load %struct.function** %outer, align 8
  %tobool4 = icmp eq %struct.function* %fp.0, null
  br i1 %tobool4, label %for.end30, label %for.body5

for.end30:                                        ; preds = %for.inc29, %for.cond3.preheader
  %call31 = tail call %union.tree_node* @decl_function_context(%union.tree_node* %function) #5
  %33 = load %union.tree_node** @current_function_decl, align 8, !tbaa !9
  %cmp32 = icmp eq %union.tree_node* %call31, %33
  %34 = load %union.tree_node** @inline_function_decl, align 8
  %cmp33 = icmp eq %union.tree_node* %call31, %34
  %or.cond = or i1 %cmp32, %cmp33
  br i1 %or.cond, label %if.end36, label %if.then34

if.then34:                                        ; preds = %for.end30
  %p.05.i = load %struct.function** @outer_function_chain, align 8
  %tobool6.i = icmp eq %struct.function* %p.05.i, null
  br i1 %tobool6.i, label %for.end.i, label %for.body.i

for.cond.i:                                       ; preds = %for.body.i
  %outer.i = getelementptr inbounds %struct.function* %p.07.i, i64 0, i32 7
  %p.0.i = load %struct.function** %outer.i, align 8
  %tobool.i = icmp eq %struct.function* %p.0.i, null
  br i1 %tobool.i, label %for.end.i, label %for.body.i

for.body.i:                                       ; preds = %if.then34, %for.cond.i
  %p.07.i = phi %struct.function* [ %p.0.i, %for.cond.i ], [ %p.05.i, %if.then34 ]
  %decl1.i = getelementptr inbounds %struct.function* %p.07.i, i64 0, i32 6
  %35 = load %union.tree_node** %decl1.i, align 8, !tbaa !1
  %cmp.i = icmp eq %union.tree_node* %35, %call31
  br i1 %cmp.i, label %if.end36, label %for.cond.i

for.end.i:                                        ; preds = %for.cond.i, %if.then34
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8]* @.str, i64 0, i64 0), i32 329, i8* getelementptr inbounds ([19 x i8]* @__FUNCTION__.find_function_data, i64 0, i64 0)) #8
  unreachable

if.end36:                                         ; preds = %for.body.i, %for.end30
  %fp.1 = phi %struct.function* [ null, %for.end30 ], [ %p.07.i, %for.body.i ]
  %36 = load i32* @target_flags, align 4, !tbaa !17
  %and = and i32 %36, 33554432
  %tobool37 = icmp ne i32 %and, 0
  %conv = select i1 %tobool37, i64 24, i64 11
  %tobool38 = icmp ne %struct.function* %fp.1, null
  %37 = load %struct.function** @cfun, align 8, !tbaa !9
  %cond39 = select i1 %tobool38, %struct.function* %fp.1, %struct.function* %37
  %call40 = tail call fastcc %struct.rtx_def* @assign_stack_local_1(i32 51, i64 %conv, i32 0, %struct.function* %cond39)
  %call44 = tail call %union.tree_node* @make_node(i32 120) #5
  %operands46 = getelementptr inbounds %union.tree_node* %call44, i64 0, i32 0, i32 2
  %arrayidx47 = getelementptr inbounds i32* %operands46, i64 2
  %38 = bitcast i32* %arrayidx47 to %struct.rtx_def**
  store %struct.rtx_def* %call40, %struct.rtx_def** %38, align 8, !tbaa !9
  br i1 %tobool38, label %if.then43, label %if.else

if.then43:                                        ; preds = %if.end36
  %x_trampoline_list48 = getelementptr inbounds %struct.function* %fp.1, i64 0, i32 34
  %39 = load %union.tree_node** %x_trampoline_list48, align 8, !tbaa !104
  %call49 = tail call %union.tree_node* @tree_cons(%union.tree_node* %function, %union.tree_node* %call44, %union.tree_node* %39) #5
  store %union.tree_node* %call49, %union.tree_node** %x_trampoline_list48, align 8, !tbaa !104
  br label %if.end58

if.else:                                          ; preds = %if.end36
  %40 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_trampoline_list55 = getelementptr inbounds %struct.function* %40, i64 0, i32 34
  %41 = load %union.tree_node** %x_trampoline_list55, align 8, !tbaa !104
  %call56 = tail call %union.tree_node* @tree_cons(%union.tree_node* %function, %union.tree_node* %call44, %union.tree_node* %41) #5
  %42 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_trampoline_list57 = getelementptr inbounds %struct.function* %42, i64 0, i32 34
  store %union.tree_node* %call56, %union.tree_node** %x_trampoline_list57, align 8, !tbaa !104
  br label %if.end58

if.end58:                                         ; preds = %if.else, %if.then43
  %arrayidx60 = getelementptr inbounds %struct.rtx_def* %call40, i64 0, i32 1, i64 0
  %rtx61 = bitcast %union.rtunion_def* %arrayidx60 to %struct.rtx_def**
  %43 = load %struct.rtx_def** %rtx61, align 8, !tbaa !9
  %call62 = tail call %struct.rtx_def* @fix_lexical_addr(%struct.rtx_def* %43, %union.tree_node* %function)
  %44 = load i32* @target_flags, align 4, !tbaa !17
  %and.i.i95 = lshr i32 %44, 25
  %45 = and i32 %and.i.i95, 1
  %46 = or i32 %45, 4
  %call.i.i96 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %46) #5
  %call1.i.i97 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 1) #5
  %call2.i.i98 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 -2) #5
  %47 = load i32* @target_flags, align 4, !tbaa !17
  %and3.i.i99 = lshr i32 %47, 25
  %48 = and i32 %and3.i.i99, 1
  %49 = or i32 %48, 4
  %call6.i.i100 = tail call %struct.rtx_def* @expand_simple_binop(i32 %49, i32 75, %struct.rtx_def* %call62, %struct.rtx_def* %call1.i.i97, %struct.rtx_def* %call.i.i96, i32 0, i32 3) #5
  %50 = load i32* @target_flags, align 4, !tbaa !17
  %and7.i.i101 = lshr i32 %50, 25
  %51 = and i32 %and7.i.i101, 1
  %52 = or i32 %51, 4
  %call10.i.i102 = tail call %struct.rtx_def* @expand_simple_binop(i32 %52, i32 83, %struct.rtx_def* %call6.i.i100, %struct.rtx_def* %call2.i.i98, %struct.rtx_def* %call6.i.i100, i32 0, i32 3) #5
  br label %return

return:                                           ; preds = %if.end58, %if.then13, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call10.i.i, %if.then ], [ %call10.i.i94, %if.then13 ], [ %call10.i.i102, %if.end58 ]
  ret %struct.rtx_def* %retval.0
}

declare %union.tree_node* @make_node(i32) #2

declare %union.tree_node* @tree_cons(%union.tree_node*, %union.tree_node*, %union.tree_node*) #2

; Function Attrs: nounwind uwtable
define void @identify_blocks() #0 {
entry:
  %0 = load %union.tree_node** @current_function_decl, align 8, !tbaa !9
  %initial = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 12
  %1 = load %union.tree_node** %initial, align 8, !tbaa !61
  %cmp = icmp eq %union.tree_node* %1, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %call.i = tail call fastcc i32 @all_blocks(%union.tree_node* %1, %union.tree_node** null) #5
  %conv.i = sext i32 %call.i to i64
  %mul.i = shl nsw i64 %conv.i, 3
  %call1.i = tail call noalias i8* @xmalloc(i64 %mul.i) #5
  %2 = bitcast i8* %call1.i to %union.tree_node**
  %call2.i = tail call fastcc i32 @all_blocks(%union.tree_node* %1, %union.tree_node** %2) #5
  %call1 = tail call noalias i8* @xmalloc(i64 %mul.i) #5
  %3 = bitcast i8* %call1 to %union.tree_node**
  %call2 = tail call %struct.rtx_def* @get_insns() #5
  %add.ptr = getelementptr inbounds i8* %call1.i, i64 8
  %4 = bitcast i8* %add.ptr to %union.tree_node**
  %add.ptr3 = getelementptr inbounds %union.tree_node** %2, i64 %conv.i
  %call4 = tail call fastcc %union.tree_node** @identify_blocks_1(%struct.rtx_def* %call2, %union.tree_node** %4, %union.tree_node** %add.ptr3, %union.tree_node** %3)
  tail call void @free(i8* %call1.i)
  tail call void @free(i8* %call1)
  br label %return

return:                                           ; preds = %entry, %if.end
  ret void
}

declare noalias i8* @xmalloc(i64) #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node** @identify_blocks_1(%struct.rtx_def* %insns, %union.tree_node** readonly %block_vector, %union.tree_node** readnone %end_block_vector, %union.tree_node** %orig_block_stack) #0 {
entry:
  %tobool100 = icmp eq %struct.rtx_def* %insns, null
  br i1 %tobool100, label %if.end65, label %for.body

for.body:                                         ; preds = %entry, %for.inc
  %block_vector.addr.0103 = phi %union.tree_node** [ %block_vector.addr.2, %for.inc ], [ %block_vector, %entry ]
  %insn.0102 = phi %struct.rtx_def* [ %11, %for.inc ], [ %insns, %entry ]
  %block_stack.0101 = phi %union.tree_node** [ %block_stack.1, %for.inc ], [ %orig_block_stack, %entry ]
  %0 = getelementptr inbounds %struct.rtx_def* %insn.0102, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %for.inc [
    i32 37, label %if.then
    i32 34, label %land.lhs.true
  ]

if.then:                                          ; preds = %for.body
  %arrayidx = getelementptr inbounds %struct.rtx_def* %insn.0102, i64 0, i32 1, i64 4
  %rtint = bitcast %union.rtunion_def* %arrayidx to i32*
  %1 = load i32* %rtint, align 4, !tbaa !17
  switch i32 %1, label %for.inc [
    i32 -98, label %if.then2
    i32 -97, label %if.then12
  ]

if.then2:                                         ; preds = %if.then
  %cmp3 = icmp eq %union.tree_node** %block_vector.addr.0103, %end_block_vector
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %if.then2
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8]* @.str, i64 0, i64 0), i32 5876, i8* getelementptr inbounds ([18 x i8]* @__FUNCTION__.identify_blocks_1, i64 0, i64 0)) #8
  unreachable

if.end:                                           ; preds = %if.then2
  %incdec.ptr = getelementptr inbounds %union.tree_node** %block_vector.addr.0103, i64 1
  %2 = load %union.tree_node** %block_vector.addr.0103, align 8, !tbaa !9
  %3 = getelementptr inbounds %struct.rtx_def* %insn.0102, i64 0, i32 1, i64 3, i32 0
  %.c95 = ptrtoint %union.tree_node* %2 to i64
  store i64 %.c95, i64* %3, align 8, !tbaa !9
  %incdec.ptr7 = getelementptr inbounds %union.tree_node** %block_stack.0101, i64 1
  store %union.tree_node* %2, %union.tree_node** %block_stack.0101, align 8, !tbaa !9
  br label %for.inc

if.then12:                                        ; preds = %if.then
  %cmp13 = icmp eq %union.tree_node** %block_stack.0101, %orig_block_stack
  br i1 %cmp13, label %if.then14, label %if.end15

if.then14:                                        ; preds = %if.then12
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8]* @.str, i64 0, i64 0), i32 5887, i8* getelementptr inbounds ([18 x i8]* @__FUNCTION__.identify_blocks_1, i64 0, i64 0)) #8
  unreachable

if.end15:                                         ; preds = %if.then12
  %incdec.ptr16 = getelementptr inbounds %union.tree_node** %block_stack.0101, i64 -1
  %4 = load %union.tree_node** %incdec.ptr16, align 8, !tbaa !9
  %5 = getelementptr inbounds %struct.rtx_def* %insn.0102, i64 0, i32 1, i64 3, i32 0
  %.c = ptrtoint %union.tree_node* %4 to i64
  store i64 %.c, i64* %5, align 8, !tbaa !9
  br label %for.inc

land.lhs.true:                                    ; preds = %for.body
  %arrayidx27 = getelementptr inbounds %struct.rtx_def* %insn.0102, i64 0, i32 1, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx27 to %struct.rtx_def**
  %6 = load %struct.rtx_def** %rtx, align 8, !tbaa !9
  %7 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 0
  %bf.load28 = load i32* %7, align 8
  %bf.clear29 = and i32 %bf.load28, 65535
  %cmp30 = icmp eq i32 %bf.clear29, 141
  br i1 %cmp30, label %if.then31, label %for.inc

if.then31:                                        ; preds = %land.lhs.true
  %fld35 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1
  %rtx37 = bitcast [1 x %union.rtunion_def]* %fld35 to %struct.rtx_def**
  %8 = load %struct.rtx_def** %rtx37, align 8, !tbaa !9
  %call = tail call fastcc %union.tree_node** @identify_blocks_1(%struct.rtx_def* %8, %union.tree_node** %block_vector.addr.0103, %union.tree_node** %end_block_vector, %union.tree_node** %block_stack.0101)
  %arrayidx39 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1, i64 1
  %rtx40 = bitcast %union.rtunion_def* %arrayidx39 to %struct.rtx_def**
  %9 = load %struct.rtx_def** %rtx40, align 8, !tbaa !9
  %tobool41 = icmp eq %struct.rtx_def* %9, null
  br i1 %tobool41, label %if.end47, label %if.then42

if.then42:                                        ; preds = %if.then31
  %call46 = tail call fastcc %union.tree_node** @identify_blocks_1(%struct.rtx_def* %9, %union.tree_node** %call, %union.tree_node** %end_block_vector, %union.tree_node** %block_stack.0101)
  br label %if.end47

if.end47:                                         ; preds = %if.then31, %if.then42
  %block_vector.addr.1 = phi %union.tree_node** [ %call46, %if.then42 ], [ %call, %if.then31 ]
  %arrayidx49 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1, i64 2
  %rtx50 = bitcast %union.rtunion_def* %arrayidx49 to %struct.rtx_def**
  %10 = load %struct.rtx_def** %rtx50, align 8, !tbaa !9
  %tobool51 = icmp eq %struct.rtx_def* %10, null
  br i1 %tobool51, label %for.inc, label %if.then52

if.then52:                                        ; preds = %if.end47
  %call56 = tail call fastcc %union.tree_node** @identify_blocks_1(%struct.rtx_def* %10, %union.tree_node** %block_vector.addr.1, %union.tree_node** %end_block_vector, %union.tree_node** %block_stack.0101)
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.then, %if.end47, %if.end15, %if.end, %if.then52, %land.lhs.true
  %block_stack.1 = phi %union.tree_node** [ %incdec.ptr7, %if.end ], [ %incdec.ptr16, %if.end15 ], [ %block_stack.0101, %if.then52 ], [ %block_stack.0101, %if.end47 ], [ %block_stack.0101, %land.lhs.true ], [ %block_stack.0101, %if.then ], [ %block_stack.0101, %for.body ]
  %block_vector.addr.2 = phi %union.tree_node** [ %incdec.ptr, %if.end ], [ %block_vector.addr.0103, %if.end15 ], [ %call56, %if.then52 ], [ %block_vector.addr.1, %if.end47 ], [ %block_vector.addr.0103, %land.lhs.true ], [ %block_vector.addr.0103, %if.then ], [ %block_vector.addr.0103, %for.body ]
  %arrayidx61 = getelementptr inbounds %struct.rtx_def* %insn.0102, i64 0, i32 1, i64 2
  %rtx62 = bitcast %union.rtunion_def* %arrayidx61 to %struct.rtx_def**
  %11 = load %struct.rtx_def** %rtx62, align 8, !tbaa !9
  %tobool = icmp eq %struct.rtx_def* %11, null
  br i1 %tobool, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc
  %cmp63 = icmp eq %union.tree_node** %block_stack.1, %orig_block_stack
  br i1 %cmp63, label %if.end65, label %if.then64

if.then64:                                        ; preds = %for.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8]* @.str, i64 0, i64 0), i32 5911, i8* getelementptr inbounds ([18 x i8]* @__FUNCTION__.identify_blocks_1, i64 0, i64 0)) #8
  unreachable

if.end65:                                         ; preds = %entry, %for.end
  %block_vector.addr.0.lcssa106 = phi %union.tree_node** [ %block_vector.addr.2, %for.end ], [ %block_vector, %entry ]
  ret %union.tree_node** %block_vector.addr.0.lcssa106
}

; Function Attrs: nounwind uwtable
define void @reorder_blocks() #0 {
entry:
  %block_stack = alloca %struct.varray_head_tag*, align 8
  %0 = load %union.tree_node** @current_function_decl, align 8, !tbaa !9
  %initial = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 12
  %1 = load %union.tree_node** %initial, align 8, !tbaa !61
  %cmp = icmp eq %union.tree_node* %1, null
  br i1 %cmp, label %do.end, label %if.end

if.end:                                           ; preds = %entry
  %call = call %struct.varray_head_tag* @varray_init(i64 10, i64 8, i8* getelementptr inbounds ([12 x i8]* @.str6, i64 0, i64 0)) #5
  store %struct.varray_head_tag* %call, %struct.varray_head_tag** %block_stack, align 8, !tbaa !9
  call fastcc void @reorder_blocks_0(%union.tree_node* %1)
  %2 = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 4
  store %union.tree_node* null, %union.tree_node** %2, align 8, !tbaa !105
  %chain = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0
  store %union.tree_node* null, %union.tree_node** %chain, align 8, !tbaa !30
  %call2 = call %struct.rtx_def* @get_insns() #5
  call fastcc void @reorder_blocks_1(%struct.rtx_def* %call2, %union.tree_node* %1, %struct.varray_head_tag** %block_stack)
  %3 = load %union.tree_node** %2, align 8, !tbaa !105
  %tobool7.i = icmp eq %union.tree_node* %3, null
  br i1 %tobool7.i, label %blocks_nreverse.exit, label %for.body.i

for.body.i:                                       ; preds = %if.end, %for.body.i
  %prev.09.i = phi %union.tree_node* [ %decl.08.i, %for.body.i ], [ null, %if.end ]
  %decl.08.i = phi %union.tree_node* [ %4, %for.body.i ], [ %3, %if.end ]
  %chain.i = getelementptr inbounds %union.tree_node* %decl.08.i, i64 0, i32 0, i32 0, i32 0
  %4 = load %union.tree_node** %chain.i, align 8, !tbaa !30
  store %union.tree_node* %prev.09.i, %union.tree_node** %chain.i, align 8, !tbaa !30
  %tobool.i = icmp eq %union.tree_node* %4, null
  br i1 %tobool.i, label %blocks_nreverse.exit, label %for.body.i

blocks_nreverse.exit:                             ; preds = %for.body.i, %if.end
  %prev.0.lcssa.i = phi %union.tree_node* [ null, %if.end ], [ %decl.08.i, %for.body.i ]
  store %union.tree_node* %prev.0.lcssa.i, %union.tree_node** %2, align 8, !tbaa !105
  call fastcc void @reorder_fix_fragments(%union.tree_node* %1)
  %5 = load %struct.varray_head_tag** %block_stack, align 8, !tbaa !9
  %tobool = icmp eq %struct.varray_head_tag* %5, null
  br i1 %tobool, label %do.end, label %if.then8

if.then8:                                         ; preds = %blocks_nreverse.exit
  %6 = bitcast %struct.varray_head_tag* %5 to i8*
  call void @free(i8* %6)
  store %struct.varray_head_tag* null, %struct.varray_head_tag** %block_stack, align 8, !tbaa !9
  br label %do.end

do.end:                                           ; preds = %blocks_nreverse.exit, %if.then8, %entry
  ret void
}

declare %struct.varray_head_tag* @varray_init(i64, i64, i8*) #2

; Function Attrs: nounwind uwtable
define internal fastcc void @reorder_blocks_0(%union.tree_node* %block) #0 {
entry:
  %tobool6 = icmp eq %union.tree_node* %block, null
  br i1 %tobool6, label %while.end, label %while.body

while.body:                                       ; preds = %entry, %while.body
  %block.addr.07 = phi %union.tree_node* [ %2, %while.body ], [ %block, %entry ]
  %asm_written_flag = getelementptr inbounds %union.tree_node* %block.addr.07, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %asm_written_flag, align 8
  %bf.clear = and i32 %bf.load, -16385
  store i32 %bf.clear, i32* %asm_written_flag, align 8
  %0 = getelementptr inbounds %union.tree_node* %block.addr.07, i64 0, i32 0, i32 4
  %1 = load %union.tree_node** %0, align 8, !tbaa !105
  tail call fastcc void @reorder_blocks_0(%union.tree_node* %1)
  %chain = getelementptr inbounds %union.tree_node* %block.addr.07, i64 0, i32 0, i32 0, i32 0
  %2 = load %union.tree_node** %chain, align 8, !tbaa !30
  %tobool = icmp eq %union.tree_node* %2, null
  br i1 %tobool, label %while.end, label %while.body

while.end:                                        ; preds = %while.body, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @reorder_blocks_1(%struct.rtx_def* %insns, %union.tree_node* %current_block, %struct.varray_head_tag** %p_block_stack) #0 {
entry:
  %tobool150 = icmp eq %struct.rtx_def* %insns, null
  br i1 %tobool150, label %for.end, label %for.body

for.body:                                         ; preds = %entry, %for.inc
  %current_block.addr.0152 = phi %union.tree_node* [ %current_block.addr.1, %for.inc ], [ %current_block, %entry ]
  %insn.0151 = phi %struct.rtx_def* [ %35, %for.inc ], [ %insns, %entry ]
  %0 = getelementptr inbounds %struct.rtx_def* %insn.0151, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %for.inc [
    i32 37, label %if.then
    i32 34, label %land.lhs.true
  ]

if.then:                                          ; preds = %for.body
  %arrayidx = getelementptr inbounds %struct.rtx_def* %insn.0151, i64 0, i32 1, i64 4
  %rtint = bitcast %union.rtunion_def* %arrayidx to i32*
  %1 = load i32* %rtint, align 4, !tbaa !17
  switch i32 %1, label %for.inc [
    i32 -98, label %if.then2
    i32 -97, label %if.then45
  ]

if.then2:                                         ; preds = %if.then
  %arrayidx4 = getelementptr inbounds %struct.rtx_def* %insn.0151, i64 0, i32 1, i64 3
  %rttree = bitcast %union.rtunion_def* %arrayidx4 to %union.tree_node**
  %2 = load %union.tree_node** %rttree, align 8, !tbaa !9
  %asm_written_flag = getelementptr inbounds %union.tree_node* %2, i64 0, i32 0, i32 0, i32 2
  %bf.load5 = load i32* %asm_written_flag, align 8
  %bf.clear6 = and i32 %bf.load5, 16384
  %tobool7 = icmp eq i32 %bf.clear6, 0
  br i1 %tobool7, label %if.end, label %if.then8

if.then8:                                         ; preds = %if.then2
  %call = tail call %union.tree_node* @copy_node(%union.tree_node* %2) #5
  %3 = getelementptr inbounds %union.tree_node* %2, i64 0, i32 0, i32 7
  %4 = load %union.tree_node** %3, align 8, !tbaa !107
  %tobool10 = icmp eq %union.tree_node* %4, null
  %. = select i1 %tobool10, %union.tree_node* %2, %union.tree_node* %4
  %5 = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 7
  store %union.tree_node* %., %union.tree_node** %5, align 8, !tbaa !107
  %6 = getelementptr inbounds %union.tree_node* %., i64 0, i32 0, i32 8
  %7 = load %union.tree_node** %6, align 8, !tbaa !108
  %8 = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 8
  store %union.tree_node* %7, %union.tree_node** %8, align 8, !tbaa !108
  store %union.tree_node* %call, %union.tree_node** %6, align 8, !tbaa !108
  %9 = getelementptr inbounds %union.rtunion_def* %arrayidx4, i64 0, i32 0
  %call.c = ptrtoint %union.tree_node* %call to i64
  store i64 %call.c, i64* %9, align 8, !tbaa !9
  %asm_written_flag25.phi.trans.insert = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 0, i32 2
  %bf.load26.pre = load i32* %asm_written_flag25.phi.trans.insert, align 8
  br label %if.end

if.end:                                           ; preds = %if.then2, %if.then8
  %bf.load26 = phi i32 [ %bf.load26.pre, %if.then8 ], [ %bf.load5, %if.then2 ]
  %block.0 = phi %union.tree_node* [ %call, %if.then8 ], [ %2, %if.then2 ]
  %10 = getelementptr inbounds %union.tree_node* %block.0, i64 0, i32 0, i32 4
  store %union.tree_node* null, %union.tree_node** %10, align 8, !tbaa !105
  %asm_written_flag25 = getelementptr inbounds %union.tree_node* %block.0, i64 0, i32 0, i32 0, i32 2
  %bf.set = or i32 %bf.load26, 16384
  store i32 %bf.set, i32* %asm_written_flag25, align 8
  %supercontext = getelementptr inbounds %union.tree_node* %block.0, i64 0, i32 0, i32 5
  %11 = bitcast i48* %supercontext to %union.tree_node**
  store %union.tree_node* %current_block.addr.0152, %union.tree_node** %11, align 8, !tbaa !109
  %12 = getelementptr inbounds %union.tree_node* %current_block.addr.0152, i64 0, i32 0, i32 4
  %13 = load %union.tree_node** %12, align 8, !tbaa !105
  %chain = getelementptr inbounds %union.tree_node* %block.0, i64 0, i32 0, i32 0, i32 0
  store %union.tree_node* %13, %union.tree_node** %chain, align 8, !tbaa !30
  store %union.tree_node* %block.0, %union.tree_node** %12, align 8, !tbaa !105
  %14 = load %struct.varray_head_tag** %p_block_stack, align 8, !tbaa !9
  %elements_used = getelementptr inbounds %struct.varray_head_tag* %14, i64 0, i32 1
  %15 = load i64* %elements_used, align 8, !tbaa !110
  %num_elements = getelementptr inbounds %struct.varray_head_tag* %14, i64 0, i32 0
  %16 = load i64* %num_elements, align 8, !tbaa !112
  %cmp34 = icmp ult i64 %15, %16
  br i1 %cmp34, label %if.end38, label %if.then35

if.then35:                                        ; preds = %if.end
  %mul = shl i64 %16, 1
  %call37 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %14, i64 %mul) #5
  store %struct.varray_head_tag* %call37, %struct.varray_head_tag** %p_block_stack, align 8, !tbaa !9
  %elements_used39.phi.trans.insert = getelementptr inbounds %struct.varray_head_tag* %call37, i64 0, i32 1
  %.pre = load i64* %elements_used39.phi.trans.insert, align 8, !tbaa !110
  br label %if.end38

if.end38:                                         ; preds = %if.end, %if.then35
  %17 = phi i64 [ %15, %if.end ], [ %.pre, %if.then35 ]
  %18 = phi %struct.varray_head_tag* [ %14, %if.end ], [ %call37, %if.then35 ]
  %elements_used39 = getelementptr inbounds %struct.varray_head_tag* %18, i64 0, i32 1
  %inc = add i64 %17, 1
  store i64 %inc, i64* %elements_used39, align 8, !tbaa !110
  %data = getelementptr inbounds %struct.varray_head_tag* %18, i64 0, i32 4
  %tree = bitcast %union.varray_data_tag* %data to [1 x %union.tree_node*]*
  %arrayidx40 = getelementptr inbounds [1 x %union.tree_node*]* %tree, i64 0, i64 %17
  store %union.tree_node* %block.0, %union.tree_node** %arrayidx40, align 8, !tbaa !9
  br label %for.inc

if.then45:                                        ; preds = %if.then
  %19 = load %struct.varray_head_tag** %p_block_stack, align 8, !tbaa !9
  %elements_used46 = getelementptr inbounds %struct.varray_head_tag* %19, i64 0, i32 1
  %20 = load i64* %elements_used46, align 8, !tbaa !110
  %sub = add i64 %20, -1
  %data47 = getelementptr inbounds %struct.varray_head_tag* %19, i64 0, i32 4
  %tree48 = bitcast %union.varray_data_tag* %data47 to [1 x %union.tree_node*]*
  %arrayidx49 = getelementptr inbounds [1 x %union.tree_node*]* %tree48, i64 0, i64 %sub
  %21 = load %union.tree_node** %arrayidx49, align 8, !tbaa !9
  %22 = getelementptr inbounds %struct.rtx_def* %insn.0151, i64 0, i32 1, i64 3, i32 0
  %.c = ptrtoint %union.tree_node* %21 to i64
  store i64 %.c, i64* %22, align 8, !tbaa !9
  %23 = load %struct.varray_head_tag** %p_block_stack, align 8, !tbaa !9
  %elements_used53 = getelementptr inbounds %struct.varray_head_tag* %23, i64 0, i32 1
  %24 = load i64* %elements_used53, align 8, !tbaa !110
  %dec = add i64 %24, -1
  store i64 %dec, i64* %elements_used53, align 8, !tbaa !110
  %25 = getelementptr inbounds %union.tree_node* %current_block.addr.0152, i64 0, i32 0, i32 4
  %26 = load %union.tree_node** %25, align 8, !tbaa !105
  %tobool7.i = icmp eq %union.tree_node* %26, null
  br i1 %tobool7.i, label %blocks_nreverse.exit, label %for.body.i

for.body.i:                                       ; preds = %if.then45, %for.body.i
  %prev.09.i = phi %union.tree_node* [ %decl.08.i, %for.body.i ], [ null, %if.then45 ]
  %decl.08.i = phi %union.tree_node* [ %27, %for.body.i ], [ %26, %if.then45 ]
  %chain.i = getelementptr inbounds %union.tree_node* %decl.08.i, i64 0, i32 0, i32 0, i32 0
  %27 = load %union.tree_node** %chain.i, align 8, !tbaa !30
  store %union.tree_node* %prev.09.i, %union.tree_node** %chain.i, align 8, !tbaa !30
  %tobool.i = icmp eq %union.tree_node* %27, null
  br i1 %tobool.i, label %blocks_nreverse.exit, label %for.body.i

blocks_nreverse.exit:                             ; preds = %for.body.i, %if.then45
  %prev.0.lcssa.i = phi %union.tree_node* [ null, %if.then45 ], [ %decl.08.i, %for.body.i ]
  store %union.tree_node* %prev.0.lcssa.i, %union.tree_node** %25, align 8, !tbaa !105
  %supercontext60 = getelementptr inbounds %union.tree_node* %current_block.addr.0152, i64 0, i32 0, i32 5
  %28 = bitcast i48* %supercontext60 to %union.tree_node**
  %29 = load %union.tree_node** %28, align 8, !tbaa !109
  br label %for.inc

land.lhs.true:                                    ; preds = %for.body
  %arrayidx68 = getelementptr inbounds %struct.rtx_def* %insn.0151, i64 0, i32 1, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx68 to %struct.rtx_def**
  %30 = load %struct.rtx_def** %rtx, align 8, !tbaa !9
  %31 = getelementptr inbounds %struct.rtx_def* %30, i64 0, i32 0
  %bf.load69 = load i32* %31, align 8
  %bf.clear70 = and i32 %bf.load69, 65535
  %cmp71 = icmp eq i32 %bf.clear70, 141
  br i1 %cmp71, label %if.then72, label %for.inc

if.then72:                                        ; preds = %land.lhs.true
  %fld76 = getelementptr inbounds %struct.rtx_def* %30, i64 0, i32 1
  %rtx78 = bitcast [1 x %union.rtunion_def]* %fld76 to %struct.rtx_def**
  %32 = load %struct.rtx_def** %rtx78, align 8, !tbaa !9
  tail call fastcc void @reorder_blocks_1(%struct.rtx_def* %32, %union.tree_node* %current_block.addr.0152, %struct.varray_head_tag** %p_block_stack)
  %arrayidx80 = getelementptr inbounds %struct.rtx_def* %30, i64 0, i32 1, i64 1
  %rtx81 = bitcast %union.rtunion_def* %arrayidx80 to %struct.rtx_def**
  %33 = load %struct.rtx_def** %rtx81, align 8, !tbaa !9
  %tobool82 = icmp eq %struct.rtx_def* %33, null
  br i1 %tobool82, label %if.end87, label %if.then83

if.then83:                                        ; preds = %if.then72
  tail call fastcc void @reorder_blocks_1(%struct.rtx_def* %33, %union.tree_node* %current_block.addr.0152, %struct.varray_head_tag** %p_block_stack)
  br label %if.end87

if.end87:                                         ; preds = %if.then72, %if.then83
  %arrayidx89 = getelementptr inbounds %struct.rtx_def* %30, i64 0, i32 1, i64 2
  %rtx90 = bitcast %union.rtunion_def* %arrayidx89 to %struct.rtx_def**
  %34 = load %struct.rtx_def** %rtx90, align 8, !tbaa !9
  %tobool91 = icmp eq %struct.rtx_def* %34, null
  br i1 %tobool91, label %for.inc, label %if.then92

if.then92:                                        ; preds = %if.end87
  tail call fastcc void @reorder_blocks_1(%struct.rtx_def* %34, %union.tree_node* %current_block.addr.0152, %struct.varray_head_tag** %p_block_stack)
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.then, %if.end87, %blocks_nreverse.exit, %if.end38, %if.then92, %land.lhs.true
  %current_block.addr.1 = phi %union.tree_node* [ %block.0, %if.end38 ], [ %29, %blocks_nreverse.exit ], [ %current_block.addr.0152, %if.then92 ], [ %current_block.addr.0152, %if.end87 ], [ %current_block.addr.0152, %land.lhs.true ], [ %current_block.addr.0152, %if.then ], [ %current_block.addr.0152, %for.body ]
  %arrayidx100 = getelementptr inbounds %struct.rtx_def* %insn.0151, i64 0, i32 1, i64 2
  %rtx101 = bitcast %union.rtunion_def* %arrayidx100 to %struct.rtx_def**
  %35 = load %struct.rtx_def** %rtx101, align 8, !tbaa !9
  %tobool = icmp eq %struct.rtx_def* %35, null
  br i1 %tobool, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @reorder_fix_fragments(%union.tree_node* %block) #0 {
entry:
  %tobool73 = icmp eq %union.tree_node* %block, null
  br i1 %tobool73, label %while.end48, label %while.body

while.body:                                       ; preds = %entry, %if.end44
  %block.addr.074 = phi %union.tree_node* [ %8, %if.end44 ], [ %block, %entry ]
  %0 = getelementptr inbounds %union.tree_node* %block.addr.074, i64 0, i32 0, i32 7
  %1 = load %union.tree_node** %0, align 8, !tbaa !107
  %tobool2 = icmp eq %union.tree_node* %1, null
  br i1 %tobool2, label %if.then23, label %if.then

if.then:                                          ; preds = %while.body
  %asm_written_flag = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %asm_written_flag, align 8
  %bf.clear = and i32 %bf.load, 16384
  %tobool3 = icmp eq i32 %bf.clear, 0
  br i1 %tobool3, label %while.cond6, label %if.end44

while.cond6:                                      ; preds = %if.then, %while.cond6
  %.pn = phi %union.tree_node* [ %new_origin.0, %while.cond6 ], [ %1, %if.then ]
  %new_origin.0.in = getelementptr inbounds %union.tree_node* %.pn, i64 0, i32 0, i32 8
  %new_origin.0 = load %union.tree_node** %new_origin.0.in, align 8
  %asm_written_flag8 = getelementptr inbounds %union.tree_node* %new_origin.0, i64 0, i32 0, i32 0, i32 2
  %bf.load9 = load i32* %asm_written_flag8, align 8
  %bf.clear11 = and i32 %bf.load9, 16384
  %lnot = icmp eq i32 %bf.clear11, 0
  br i1 %lnot, label %while.cond6, label %if.end21

if.end21:                                         ; preds = %while.cond6
  %2 = getelementptr inbounds %union.tree_node* %new_origin.0, i64 0, i32 0, i32 7
  store %union.tree_node* null, %union.tree_node** %2, align 8, !tbaa !107
  %tobool22 = icmp eq %union.tree_node* %new_origin.0, null
  br i1 %tobool22, label %if.end44, label %if.then23

if.then23:                                        ; preds = %while.body, %if.end21
  %new_origin.168 = phi %union.tree_node* [ %new_origin.0, %if.end21 ], [ %block.addr.074, %while.body ]
  %3 = getelementptr inbounds %union.tree_node* %new_origin.168, i64 0, i32 0, i32 8
  %chain.069 = load %union.tree_node** %3, align 8
  %tobool2770 = icmp eq %union.tree_node* %chain.069, null
  br i1 %tobool2770, label %while.end43, label %while.body28

while.body28:                                     ; preds = %if.then23, %if.end40
  %chain.072 = phi %union.tree_node* [ %chain.0, %if.end40 ], [ %chain.069, %if.then23 ]
  %pp.071 = phi %union.tree_node** [ %pp.1, %if.end40 ], [ %3, %if.then23 ]
  %asm_written_flag30 = getelementptr inbounds %union.tree_node* %chain.072, i64 0, i32 0, i32 0, i32 2
  %bf.load31 = load i32* %asm_written_flag30, align 8
  %bf.clear33 = and i32 %bf.load31, 16384
  %tobool34 = icmp eq i32 %bf.clear33, 0
  br i1 %tobool34, label %while.body28.if.end40_crit_edge, label %if.then35

while.body28.if.end40_crit_edge:                  ; preds = %while.body28
  %.pre = getelementptr inbounds %union.tree_node* %chain.072, i64 0, i32 0, i32 8
  br label %if.end40

if.then35:                                        ; preds = %while.body28
  %4 = getelementptr inbounds %union.tree_node* %chain.072, i64 0, i32 0, i32 7
  store %union.tree_node* %new_origin.168, %union.tree_node** %4, align 8, !tbaa !107
  store %union.tree_node* %chain.072, %union.tree_node** %pp.071, align 8, !tbaa !9
  %5 = getelementptr inbounds %union.tree_node* %chain.072, i64 0, i32 0, i32 8
  br label %if.end40

if.end40:                                         ; preds = %while.body28.if.end40_crit_edge, %if.then35
  %.pre-phi = phi %union.tree_node** [ %.pre, %while.body28.if.end40_crit_edge ], [ %5, %if.then35 ]
  %pp.1 = phi %union.tree_node** [ %pp.071, %while.body28.if.end40_crit_edge ], [ %5, %if.then35 ]
  %chain.0 = load %union.tree_node** %.pre-phi, align 8
  %tobool27 = icmp eq %union.tree_node* %chain.0, null
  br i1 %tobool27, label %while.end43, label %while.body28

while.end43:                                      ; preds = %if.end40, %if.then23
  %pp.0.lcssa = phi %union.tree_node** [ %3, %if.then23 ], [ %pp.1, %if.end40 ]
  store %union.tree_node* null, %union.tree_node** %pp.0.lcssa, align 8, !tbaa !9
  br label %if.end44

if.end44:                                         ; preds = %if.then, %if.end21, %while.end43
  %6 = getelementptr inbounds %union.tree_node* %block.addr.074, i64 0, i32 0, i32 4
  %7 = load %union.tree_node** %6, align 8, !tbaa !105
  tail call fastcc void @reorder_fix_fragments(%union.tree_node* %7)
  %chain47 = getelementptr inbounds %union.tree_node* %block.addr.074, i64 0, i32 0, i32 0, i32 0
  %8 = load %union.tree_node** %chain47, align 8, !tbaa !30
  %tobool = icmp eq %union.tree_node* %8, null
  br i1 %tobool, label %while.end48, label %while.body

while.end48:                                      ; preds = %if.end44, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define void @number_blocks(%union.tree_node* nocapture readonly %fn) #0 {
entry:
  %initial = getelementptr inbounds %union.tree_node* %fn, i64 0, i32 0, i32 12
  %0 = load %union.tree_node** %initial, align 8, !tbaa !61
  %call.i = tail call fastcc i32 @all_blocks(%union.tree_node* %0, %union.tree_node** null) #5
  %conv.i = sext i32 %call.i to i64
  %mul.i = shl nsw i64 %conv.i, 3
  %call1.i = tail call noalias i8* @xmalloc(i64 %mul.i) #5
  %1 = bitcast i8* %call1.i to %union.tree_node**
  %call2.i = tail call fastcc i32 @all_blocks(%union.tree_node* %0, %union.tree_node** %1) #5
  %cmp5 = icmp sgt i32 %call.i, 1
  br i1 %cmp5, label %for.body, label %for.end

for.body:                                         ; preds = %entry, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 1, %entry ]
  %2 = load i32* @next_block_index, align 4, !tbaa !17
  %inc = add nsw i32 %2, 1
  store i32 %inc, i32* @next_block_index, align 4, !tbaa !17
  %arrayidx = getelementptr inbounds %union.tree_node** %1, i64 %indvars.iv
  %3 = load %union.tree_node** %arrayidx, align 8, !tbaa !9
  %block_num = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 1
  %4 = bitcast i8** %block_num to i32*
  %bf.load = load i32* %4, align 8
  %bf.shl = shl i32 %2, 2
  %bf.clear = and i32 %bf.load, 3
  %bf.set = or i32 %bf.clear, %bf.shl
  store i32 %bf.set, i32* %4, align 8
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %call.i
  br i1 %exitcond, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %entry
  tail call void @free(i8* %call1.i)
  ret void
}

; Function Attrs: nounwind readonly uwtable
define %union.tree_node* @debug_find_var_in_block_tree(%union.tree_node* readnone %var, %union.tree_node* readonly %block) #4 {
entry:
  %vars = getelementptr inbounds %union.tree_node* %block, i64 0, i32 0, i32 2
  %0 = bitcast i32* %vars to %union.tree_node**
  %t.027 = load %union.tree_node** %0, align 8
  %tobool28 = icmp eq %union.tree_node* %t.027, null
  br i1 %tobool28, label %for.end, label %for.body

for.cond:                                         ; preds = %for.body
  %chain = getelementptr inbounds %union.tree_node* %t.029, i64 0, i32 0, i32 0, i32 0
  %t.0 = load %union.tree_node** %chain, align 8
  %tobool = icmp eq %union.tree_node* %t.0, null
  br i1 %tobool, label %for.end, label %for.body

for.body:                                         ; preds = %entry, %for.cond
  %t.029 = phi %union.tree_node* [ %t.0, %for.cond ], [ %t.027, %entry ]
  %cmp = icmp eq %union.tree_node* %t.029, %var
  br i1 %cmp, label %return, label %for.cond

for.end:                                          ; preds = %for.cond, %entry
  %1 = getelementptr inbounds %union.tree_node* %block, i64 0, i32 0, i32 4
  %t.123 = load %union.tree_node** %1, align 8
  %tobool424 = icmp eq %union.tree_node* %t.123, null
  br i1 %tobool424, label %return, label %for.body5

for.cond3:                                        ; preds = %for.body5
  %chain11 = getelementptr inbounds %union.tree_node* %t.125, i64 0, i32 0, i32 0, i32 0
  %t.1 = load %union.tree_node** %chain11, align 8
  %tobool4 = icmp eq %union.tree_node* %t.1, null
  br i1 %tobool4, label %return, label %for.body5

for.body5:                                        ; preds = %for.end, %for.cond3
  %t.125 = phi %union.tree_node* [ %t.1, %for.cond3 ], [ %t.123, %for.end ]
  %call = tail call %union.tree_node* @debug_find_var_in_block_tree(%union.tree_node* %var, %union.tree_node* %t.125)
  %tobool6 = icmp eq %union.tree_node* %call, null
  br i1 %tobool6, label %for.cond3, label %return

return:                                           ; preds = %for.body, %for.body5, %for.cond3, %for.end
  %retval.0 = phi %union.tree_node* [ null, %for.end ], [ %call, %for.body5 ], [ null, %for.cond3 ], [ %block, %for.body ]
  ret %union.tree_node* %retval.0
}

; Function Attrs: nounwind uwtable
define internal fastcc void @prepare_function_start() #0 {
entry:
  %call = tail call i8* @ggc_alloc_cleared(i64 432) #5
  %0 = bitcast i8* %call to %struct.function*
  store %struct.function* %0, %struct.function** @cfun, align 8, !tbaa !9
  tail call void @init_stmt_for_function() #5
  tail call void @init_eh_for_function() #5
  %1 = load i32* @optimize, align 4, !tbaa !17
  %lnot = icmp eq i32 %1, 0
  %lnot.ext = zext i1 %lnot to i32
  store i32 %lnot.ext, i32* @cse_not_expected, align 4, !tbaa !17
  store i32 0, i32* @caller_save_needed, align 4, !tbaa !17
  %2 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_stack_slot_list = getelementptr inbounds %struct.function* %2, i64 0, i32 26
  store %struct.rtx_def* null, %struct.rtx_def** %x_stack_slot_list, align 8, !tbaa !36
  %3 = load %struct.function** @cfun, align 8, !tbaa !9
  %has_nonlocal_label = getelementptr inbounds %struct.function* %3, i64 0, i32 56
  %4 = bitcast i24* %has_nonlocal_label to i32*
  %bf.load = load i32* %4, align 8
  %bf.clear = and i32 %bf.load, -257
  store i32 %bf.clear, i32* %4, align 8
  %5 = load %struct.function** @cfun, align 8, !tbaa !9
  %has_nonlocal_goto = getelementptr inbounds %struct.function* %5, i64 0, i32 56
  %6 = bitcast i24* %has_nonlocal_goto to i32*
  %bf.load1 = load i32* %6, align 8
  %bf.clear2 = and i32 %bf.load1, -513
  store i32 %bf.clear2, i32* %6, align 8
  %7 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_nonlocal_goto_handler_slots = getelementptr inbounds %struct.function* %7, i64 0, i32 20
  store %struct.rtx_def* null, %struct.rtx_def** %x_nonlocal_goto_handler_slots, align 8, !tbaa !113
  %8 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_nonlocal_goto_stack_level = getelementptr inbounds %struct.function* %8, i64 0, i32 22
  store %struct.rtx_def* null, %struct.rtx_def** %x_nonlocal_goto_stack_level, align 8, !tbaa !114
  %9 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_nonlocal_labels = getelementptr inbounds %struct.function* %9, i64 0, i32 19
  store %union.tree_node* null, %union.tree_node** %x_nonlocal_labels, align 8, !tbaa !115
  %10 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_nonlocal_goto_handler_labels = getelementptr inbounds %struct.function* %10, i64 0, i32 21
  store %struct.rtx_def* null, %struct.rtx_def** %x_nonlocal_goto_handler_labels, align 8, !tbaa !116
  %11 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_function_call_count = getelementptr inbounds %struct.function* %11, i64 0, i32 18
  store i32 0, i32* %x_function_call_count, align 4, !tbaa !117
  %x_max_parm_reg = getelementptr inbounds %struct.function* %11, i64 0, i32 37
  store i32 58, i32* %x_max_parm_reg, align 4, !tbaa !64
  tail call void @init_emit() #5
  tail call void @init_expr() #5
  store i16* null, i16** @reg_renumber, align 8, !tbaa !9
  %12 = load %struct.function** @cfun, align 8, !tbaa !9
  tail call void @init_varasm_status(%struct.function* %12) #5
  %13 = load %struct.function** @cfun, align 8, !tbaa !9
  %inlinable = getelementptr inbounds %struct.function* %13, i64 0, i32 44
  store i32 0, i32* %inlinable, align 4, !tbaa !118
  %original_decl_initial = getelementptr inbounds %struct.function* %13, i64 0, i32 47
  store %union.tree_node* null, %union.tree_node** %original_decl_initial, align 8, !tbaa !119
  %14 = load %struct.function** @cfun, align 8, !tbaa !9
  %original_arg_vector = getelementptr inbounds %struct.function* %14, i64 0, i32 46
  store i8* null, i8** %original_arg_vector, align 8, !tbaa !120
  %15 = load i32* @target_flags, align 4, !tbaa !17
  %and = lshr i32 %15, 20
  %16 = and i32 %and, 32
  %17 = add i32 %16, 32
  %18 = load %struct.function** @cfun, align 8, !tbaa !9
  %stack_alignment_needed = getelementptr inbounds %struct.function* %18, i64 0, i32 52
  store i32 %17, i32* %stack_alignment_needed, align 4, !tbaa !35
  %19 = load i32* @target_flags, align 4, !tbaa !17
  %and4 = lshr i32 %19, 20
  %20 = and i32 %and4, 32
  %21 = add i32 %20, 32
  %preferred_stack_boundary = getelementptr inbounds %struct.function* %18, i64 0, i32 53
  store i32 %21, i32* %preferred_stack_boundary, align 4, !tbaa !121
  %calls_setjmp = getelementptr inbounds %struct.function* %18, i64 0, i32 56
  %22 = bitcast i24* %calls_setjmp to i32*
  %bf.load7 = load i32* %22, align 8
  %bf.clear8 = and i32 %bf.load7, -17
  store i32 %bf.clear8, i32* %22, align 8
  %23 = load %struct.function** @cfun, align 8, !tbaa !9
  %calls_longjmp = getelementptr inbounds %struct.function* %23, i64 0, i32 56
  %24 = bitcast i24* %calls_longjmp to i32*
  %bf.load9 = load i32* %24, align 8
  %bf.clear10 = and i32 %bf.load9, -33
  store i32 %bf.clear10, i32* %24, align 8
  %25 = load %struct.function** @cfun, align 8, !tbaa !9
  %calls_alloca = getelementptr inbounds %struct.function* %25, i64 0, i32 56
  %26 = bitcast i24* %calls_alloca to i32*
  %bf.load11 = load i32* %26, align 8
  %bf.clear12 = and i32 %bf.load11, -65
  store i32 %bf.clear12, i32* %26, align 8
  %27 = load %struct.function** @cfun, align 8, !tbaa !9
  %contains_functions = getelementptr inbounds %struct.function* %27, i64 0, i32 56
  %28 = bitcast i24* %contains_functions to i32*
  %bf.load13 = load i32* %28, align 8
  %bf.clear14 = and i32 %bf.load13, -1025
  store i32 %bf.clear14, i32* %28, align 8
  store i32 0, i32* @current_function_is_leaf, align 4, !tbaa !17
  store i32 0, i32* @current_function_nothrow, align 4, !tbaa !17
  store i32 0, i32* @current_function_sp_is_unchanging, align 4, !tbaa !17
  store i32 0, i32* @current_function_uses_only_leaf_regs, align 4, !tbaa !17
  %29 = load %struct.function** @cfun, align 8, !tbaa !9
  %has_computed_jump = getelementptr inbounds %struct.function* %29, i64 0, i32 56
  %30 = bitcast i24* %has_computed_jump to i32*
  %bf.load15 = load i32* %30, align 8
  %bf.clear16 = and i32 %bf.load15, -2049
  store i32 %bf.clear16, i32* %30, align 8
  %31 = load %struct.function** @cfun, align 8, !tbaa !9
  %is_thunk = getelementptr inbounds %struct.function* %31, i64 0, i32 56
  %32 = bitcast i24* %is_thunk to i32*
  %bf.load17 = load i32* %32, align 8
  %bf.clear18 = and i32 %bf.load17, -4097
  store i32 %bf.clear18, i32* %32, align 8
  %33 = load %struct.function** @cfun, align 8, !tbaa !9
  %returns_pcc_struct = getelementptr inbounds %struct.function* %33, i64 0, i32 56
  %34 = bitcast i24* %returns_pcc_struct to i32*
  %bf.load19 = load i32* %34, align 8
  %bf.clear20 = and i32 %bf.load19, -3
  store i32 %bf.clear20, i32* %34, align 8
  %35 = load %struct.function** @cfun, align 8, !tbaa !9
  %returns_struct = getelementptr inbounds %struct.function* %35, i64 0, i32 56
  %36 = bitcast i24* %returns_struct to i32*
  %bf.load21 = load i32* %36, align 8
  %bf.clear22 = and i32 %bf.load21, -2
  store i32 %bf.clear22, i32* %36, align 8
  %37 = load %struct.function** @cfun, align 8, !tbaa !9
  %epilogue_delay_list = getelementptr inbounds %struct.function* %37, i64 0, i32 55
  store %struct.rtx_def* null, %struct.rtx_def** %epilogue_delay_list, align 8, !tbaa !33
  %38 = load %struct.function** @cfun, align 8, !tbaa !9
  %uses_const_pool = getelementptr inbounds %struct.function* %38, i64 0, i32 56
  %39 = bitcast i24* %uses_const_pool to i32*
  %bf.load23 = load i32* %39, align 8
  %bf.clear24 = and i32 %bf.load23, -1048577
  store i32 %bf.clear24, i32* %39, align 8
  %40 = load %struct.function** @cfun, align 8, !tbaa !9
  %uses_pic_offset_table = getelementptr inbounds %struct.function* %40, i64 0, i32 56
  %41 = bitcast i24* %uses_pic_offset_table to i32*
  %bf.load25 = load i32* %41, align 8
  %bf.clear26 = and i32 %bf.load25, -2097153
  store i32 %bf.clear26, i32* %41, align 8
  %42 = load %struct.function** @cfun, align 8, !tbaa !9
  %cannot_inline = getelementptr inbounds %struct.function* %42, i64 0, i32 16
  store i8* null, i8** %cannot_inline, align 8, !tbaa !122
  %43 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_tail_recursion_label = getelementptr inbounds %struct.function* %43, i64 0, i32 28
  store %struct.rtx_def* null, %struct.rtx_def** %x_tail_recursion_label, align 8, !tbaa !123
  %44 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_arg_pointer_save_area = getelementptr inbounds %struct.function* %44, i64 0, i32 30
  store %struct.rtx_def* null, %struct.rtx_def** %x_arg_pointer_save_area, align 8, !tbaa !103
  %45 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_frame_offset = getelementptr inbounds %struct.function* %45, i64 0, i32 32
  store i64 0, i64* %x_frame_offset, align 8, !tbaa !34
  %x_save_expr_regs = getelementptr inbounds %struct.function* %45, i64 0, i32 25
  store %struct.rtx_def* null, %struct.rtx_def** %x_save_expr_regs, align 8, !tbaa !124
  %46 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_rtl_expr_chain = getelementptr inbounds %struct.function* %46, i64 0, i32 27
  store %union.tree_node* null, %union.tree_node** %x_rtl_expr_chain, align 8, !tbaa !21
  %47 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_temp_slots.i = getelementptr inbounds %struct.function* %47, i64 0, i32 39
  store %struct.temp_slot* null, %struct.temp_slot** %x_temp_slots.i, align 8, !tbaa !48
  %48 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_temp_slot_level.i = getelementptr inbounds %struct.function* %48, i64 0, i32 40
  store i32 0, i32* %x_temp_slot_level.i, align 4, !tbaa !55
  %x_var_temp_slot_level.i = getelementptr inbounds %struct.function* %48, i64 0, i32 41
  store i32 0, i32* %x_var_temp_slot_level.i, align 4, !tbaa !54
  %x_target_temp_slot_level.i = getelementptr inbounds %struct.function* %48, i64 0, i32 42
  store i32 0, i32* %x_target_temp_slot_level.i, align 4, !tbaa !51
  store i32 1, i32* @rtx_equal_function_value_matters, align 4, !tbaa !17
  store i32 0, i32* @virtuals_instantiated, align 4, !tbaa !17
  store i32 1, i32* @generating_concat_p, align 4, !tbaa !17
  store i32 0, i32* @frame_pointer_needed, align 4, !tbaa !17
  %varargs = getelementptr inbounds %struct.function* %48, i64 0, i32 56
  %49 = bitcast i24* %varargs to i32*
  %bf.load27 = load i32* %49, align 8
  %bf.clear28 = and i32 %bf.load27, -65537
  store i32 %bf.clear28, i32* %49, align 8
  %50 = load %struct.function** @cfun, align 8, !tbaa !9
  %stdarg = getelementptr inbounds %struct.function* %50, i64 0, i32 56
  %51 = bitcast i24* %stdarg to i32*
  %bf.load29 = load i32* %51, align 8
  %bf.clear30 = and i32 %bf.load29, -131073
  store i32 %bf.clear30, i32* %51, align 8
  %52 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_trampoline_list = getelementptr inbounds %struct.function* %52, i64 0, i32 34
  store %union.tree_node* null, %union.tree_node** %x_trampoline_list, align 8, !tbaa !104
  tail call void @init_pending_stack_adjust() #5
  %53 = load %struct.function** @cfun, align 8, !tbaa !9
  %expr = getelementptr inbounds %struct.function* %53, i64 0, i32 2
  %54 = load %struct.expr_status** %expr, align 8, !tbaa !125
  %x_inhibit_defer_pop = getelementptr inbounds %struct.expr_status* %54, i64 0, i32 1
  store i32 0, i32* %x_inhibit_defer_pop, align 4, !tbaa !126
  %outgoing_args_size = getelementptr inbounds %struct.function* %53, i64 0, i32 11
  store i32 0, i32* %outgoing_args_size, align 4, !tbaa !77
  %55 = load void (%struct.function*)** @init_lang_status, align 8, !tbaa !9
  %tobool31 = icmp eq void (%struct.function*)* %55, null
  br i1 %tobool31, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call void %55(%struct.function* %53) #5
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %56 = load void (%struct.function*)** @init_machine_status, align 8, !tbaa !9
  %tobool32 = icmp eq void (%struct.function*)* %56, null
  br i1 %tobool32, label %if.end34, label %if.then33

if.then33:                                        ; preds = %if.end
  %57 = load %struct.function** @cfun, align 8, !tbaa !9
  tail call void %56(%struct.function* %57) #5
  br label %if.end34

if.end34:                                         ; preds = %if.end, %if.then33
  ret void
}

; Function Attrs: nounwind uwtable
define void @init_function_start(%union.tree_node* %subr, i8* %filename, i32 %line) #0 {
entry:
  tail call fastcc void @prepare_function_start()
  %0 = load i8* (%union.tree_node*, i32)** @decl_printable_name, align 8, !tbaa !9
  %call = tail call i8* %0(%union.tree_node* %subr, i32 2) #5
  %1 = load %struct.function** @cfun, align 8, !tbaa !9
  %name = getelementptr inbounds %struct.function* %1, i64 0, i32 5
  store i8* %call, i8** %name, align 8, !tbaa !128
  %2 = load %struct.function** @cfun, align 8, !tbaa !9
  %decl = getelementptr inbounds %struct.function* %2, i64 0, i32 6
  store %union.tree_node* %subr, %union.tree_node** %decl, align 8, !tbaa !1
  %3 = load %union.tree_node** @current_function_decl, align 8, !tbaa !9
  %call1 = tail call %union.tree_node* @decl_function_context(%union.tree_node* %3) #5
  %cmp = icmp eq %union.tree_node* %call1, null
  br i1 %cmp, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %entry
  %4 = load %union.tree_node** @current_function_decl, align 8, !tbaa !9
  %regdecl_flag = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 5
  %5 = bitcast i48* %regdecl_flag to i64*
  %bf.load = load i64* %5, align 8
  %bf.cast = and i64 %bf.load, 1024
  %lnot = icmp eq i64 %bf.cast, 0
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %6 = phi i1 [ false, %entry ], [ %lnot, %land.rhs ]
  %land.ext = zext i1 %6 to i32
  %7 = load %struct.function** @cfun, align 8, !tbaa !9
  %needs_context = getelementptr inbounds %struct.function* %7, i64 0, i32 56
  %8 = bitcast i24* %needs_context to i32*
  %bf.load3 = load i32* %8, align 8
  %bf.shl = shl nuw nsw i32 %land.ext, 3
  %bf.clear4 = and i32 %bf.load3, -9
  %bf.set = or i32 %bf.clear4, %bf.shl
  store i32 %bf.set, i32* %8, align 8
  %9 = load i32* @immediate_size_expand, align 4, !tbaa !17
  %inc = add nsw i32 %9, 1
  store i32 %inc, i32* @immediate_size_expand, align 4, !tbaa !17
  %cmp5 = icmp sgt i32 %line, 0
  br i1 %cmp5, label %if.then, label %if.end

if.then:                                          ; preds = %land.end
  %call6 = tail call %struct.rtx_def* @emit_line_note(i8* %filename, i32 %line) #5
  br label %if.end

if.end:                                           ; preds = %if.then, %land.end
  %call7 = tail call %struct.rtx_def* @emit_note(i8* null, i32 -99) #5
  %result = getelementptr inbounds %union.tree_node* %subr, i64 0, i32 0, i32 11
  %10 = load %union.tree_node** %result, align 8, !tbaa !85
  %call9 = tail call i32 @aggregate_value_p(%union.tree_node* %10)
  %tobool10 = icmp eq i32 %call9, 0
  br i1 %tobool10, label %if.end15, label %if.then11

if.then11:                                        ; preds = %if.end
  %11 = load %struct.function** @cfun, align 8, !tbaa !9
  %returns_struct = getelementptr inbounds %struct.function* %11, i64 0, i32 56
  %12 = bitcast i24* %returns_struct to i32*
  %bf.load12 = load i32* %12, align 8
  %bf.set14 = or i32 %bf.load12, 1
  store i32 %bf.set14, i32* %12, align 8
  br label %if.end15

if.end15:                                         ; preds = %if.end, %if.then11
  %13 = load i32* @warn_aggregate_return, align 4, !tbaa !17
  %tobool16 = icmp eq i32 %13, 0
  br i1 %tobool16, label %if.end63, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end15
  %14 = load %union.tree_node** %result, align 8, !tbaa !85
  %type = getelementptr inbounds %union.tree_node* %14, i64 0, i32 0, i32 0, i32 1
  %15 = load %union.tree_node** %type, align 8, !tbaa !56
  %code = getelementptr inbounds %union.tree_node* %15, i64 0, i32 0, i32 0, i32 2
  %bf.load20 = load i32* %code, align 8
  %bf.clear21 = and i32 %bf.load20, 255
  %bf.clear21.off = add i32 %bf.clear21, -18
  %switch = icmp ult i32 %bf.clear21.off, 5
  br i1 %switch, label %if.then62, label %if.end63

if.then62:                                        ; preds = %land.lhs.true
  tail call void (i8*, ...)* @warning(i8* getelementptr inbounds ([30 x i8]* @.str7, i64 0, i64 0)) #5
  br label %if.end63

if.end63:                                         ; preds = %land.lhs.true, %if.end15, %if.then62
  %16 = load %union.tree_node** %result, align 8, !tbaa !85
  %type67 = getelementptr inbounds %union.tree_node* %16, i64 0, i32 0, i32 0, i32 1
  %17 = load %union.tree_node** %type67, align 8, !tbaa !56
  %code69 = getelementptr inbounds %union.tree_node* %17, i64 0, i32 0, i32 0, i32 2
  %bf.load70 = load i32* %code69, align 8
  %18 = and i32 %bf.load70, 253
  %19 = icmp eq i32 %18, 13
  %lor.ext = zext i1 %19 to i32
  %20 = load %struct.function** @cfun, align 8, !tbaa !9
  %returns_pointer = getelementptr inbounds %struct.function* %20, i64 0, i32 56
  %21 = bitcast i24* %returns_pointer to i32*
  %bf.load82 = load i32* %21, align 8
  %bf.shl84 = shl nuw nsw i32 %lor.ext, 2
  %bf.clear85 = and i32 %bf.load82, -5
  %bf.set86 = or i32 %bf.shl84, %bf.clear85
  store i32 %bf.set86, i32* %21, align 8
  ret void
}

declare %struct.rtx_def* @emit_line_note(i8*, i32) #2

declare %struct.rtx_def* @emit_note(i8*, i32) #2

declare void @warning(i8*, ...) #2

; Function Attrs: nounwind uwtable
define void @init_function_for_compilation() #0 {
entry:
  store i16* null, i16** @reg_renumber, align 8, !tbaa !9
  %0 = load %struct.varray_head_tag** @prologue, align 8, !tbaa !9
  %call = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %0, i64 0) #5
  store %struct.varray_head_tag* %call, %struct.varray_head_tag** @prologue, align 8, !tbaa !9
  %1 = load %struct.varray_head_tag** @epilogue, align 8, !tbaa !9
  %call1 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %1, i64 0) #5
  store %struct.varray_head_tag* %call1, %struct.varray_head_tag** @epilogue, align 8, !tbaa !9
  %2 = load %struct.varray_head_tag** @sibcall_epilogue, align 8, !tbaa !9
  %call2 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %2, i64 0) #5
  store %struct.varray_head_tag* %call2, %struct.varray_head_tag** @sibcall_epilogue, align 8, !tbaa !9
  ret void
}

declare %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag*, i64) #2

; Function Attrs: nounwind uwtable
define void @mark_varargs() #0 {
entry:
  %0 = load %struct.function** @cfun, align 8, !tbaa !9
  %varargs = getelementptr inbounds %struct.function* %0, i64 0, i32 56
  %1 = bitcast i24* %varargs to i32*
  %bf.load = load i32* %1, align 8
  %bf.set = or i32 %bf.load, 65536
  store i32 %bf.set, i32* %1, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define void @expand_main_function() #0 {
entry:
  %0 = load i32* @ix86_preferred_stack_boundary, align 4, !tbaa !17
  %1 = load i32* @target_flags, align 4, !tbaa !17
  %and = and i32 %1, 33554432
  %2 = lshr exact i32 %and, 20
  %3 = add i32 %2, 32
  %cmp = icmp sgt i32 %0, %3
  %tobool = icmp eq i32 %and, 0
  %or.cond = and i1 %cmp, %tobool
  br i1 %or.cond, label %if.then, label %if.end34

if.then:                                          ; preds = %entry
  tail call void @start_sequence() #5
  %4 = load i32* @target_flags, align 4, !tbaa !17
  %and4 = lshr i32 %4, 25
  %5 = and i32 %and4, 1
  %6 = or i32 %5, 4
  %7 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !9
  %sub = sdiv i32 %0, -8
  %conv = sext i32 %sub to i64
  %call = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv) #5
  %8 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !9
  %call7 = tail call %struct.rtx_def* @expand_simple_binop(i32 %6, i32 83, %struct.rtx_def* %7, %struct.rtx_def* %call, %struct.rtx_def* %8, i32 1, i32 2) #5
  %9 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !9
  %cmp8 = icmp eq %struct.rtx_def* %call7, %9
  br i1 %cmp8, label %if.end, label %if.then10

if.then10:                                        ; preds = %if.then
  %call11 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %9, %struct.rtx_def* %call7) #5
  br label %if.end

if.end:                                           ; preds = %if.then, %if.then10
  %10 = load i32* @target_flags, align 4, !tbaa !17
  %and12 = lshr i32 %10, 25
  %11 = and i32 %and12, 1
  %12 = or i32 %11, 4
  %13 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !9
  %call15 = tail call %struct.rtx_def* @force_reg(i32 %12, %struct.rtx_def* %13) #5
  %call16 = tail call %struct.rtx_def* @allocate_dynamic_stack_space(%struct.rtx_def* %call15, %struct.rtx_def* null, i32 128) #5
  %call17 = tail call %struct.rtx_def* @gen_sequence() #5
  tail call void @end_sequence() #5
  %call18 = tail call %struct.rtx_def* @get_last_insn() #5
  %tobool1945 = icmp eq %struct.rtx_def* %call18, null
  br i1 %tobool1945, label %if.else, label %for.body

for.body:                                         ; preds = %if.end, %for.inc
  %tmp.046 = phi %struct.rtx_def* [ %16, %for.inc ], [ %call18, %if.end ]
  %14 = getelementptr inbounds %struct.rtx_def* %tmp.046, i64 0, i32 0
  %bf.load = load i32* %14, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp20 = icmp eq i32 %bf.clear, 37
  br i1 %cmp20, label %land.lhs.true22, label %for.inc

land.lhs.true22:                                  ; preds = %for.body
  %arrayidx = getelementptr inbounds %struct.rtx_def* %tmp.046, i64 0, i32 1, i64 4
  %rtint = bitcast %union.rtunion_def* %arrayidx to i32*
  %15 = load i32* %rtint, align 4, !tbaa !17
  %cmp23 = icmp eq i32 %15, -87
  br i1 %cmp23, label %if.then30, label %for.inc

for.inc:                                          ; preds = %for.body, %land.lhs.true22
  %arrayidx28 = getelementptr inbounds %struct.rtx_def* %tmp.046, i64 0, i32 1, i64 1
  %rtx = bitcast %union.rtunion_def* %arrayidx28 to %struct.rtx_def**
  %16 = load %struct.rtx_def** %rtx, align 8, !tbaa !9
  %tobool19 = icmp eq %struct.rtx_def* %16, null
  br i1 %tobool19, label %if.else, label %for.body

if.then30:                                        ; preds = %land.lhs.true22
  %call31 = tail call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %call17, %struct.rtx_def* %tmp.046) #5
  br label %if.end34

if.else:                                          ; preds = %for.inc, %if.end
  %call32 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call17) #5
  br label %if.end34

if.end34:                                         ; preds = %if.then30, %if.else, %entry
  ret void
}

declare void @start_sequence() #2

declare %struct.rtx_def* @expand_simple_binop(i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32, i32) #2

declare %struct.rtx_def* @force_reg(i32, %struct.rtx_def*) #2

declare %struct.rtx_def* @allocate_dynamic_stack_space(%struct.rtx_def*, %struct.rtx_def*, i32) #2

declare %struct.rtx_def* @gen_sequence() #2

declare %struct.rtx_def* @emit_insn_before(%struct.rtx_def*, %struct.rtx_def*) #2

declare %struct.rtx_def* @emit_insn(%struct.rtx_def*) #2

; Function Attrs: nounwind uwtable
define void @expand_pending_sizes(%union.tree_node* readonly %pending_sizes) #0 {
entry:
  %tobool3 = icmp eq %union.tree_node* %pending_sizes, null
  br i1 %tobool3, label %for.end, label %for.body

for.body:                                         ; preds = %entry, %for.body
  %tem.04 = phi %union.tree_node* [ %3, %for.body ], [ %pending_sizes, %entry ]
  %value = getelementptr inbounds %union.tree_node* %tem.04, i64 0, i32 0, i32 2
  %0 = bitcast i32* %value to %union.tree_node**
  %1 = load %union.tree_node** %0, align 8, !tbaa !27
  %2 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !9
  %call = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %1, %struct.rtx_def* %2, i32 0, i32 0) #5
  tail call void @emit_queue() #5
  %chain = getelementptr inbounds %union.tree_node* %tem.04, i64 0, i32 0, i32 0, i32 0
  %3 = load %union.tree_node** %chain, align 8, !tbaa !30
  %tobool = icmp eq %union.tree_node* %3, null
  br i1 %tobool, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %entry
  ret void
}

declare void @emit_queue() #2

; Function Attrs: nounwind uwtable
define void @expand_function_start(%union.tree_node* %subr, i32 %parms_have_cleanups) #0 {
entry:
  tail call void @init_recog_no_volatile() #5
  %0 = load i32* @flag_instrument_function_entry_exit, align 4, !tbaa !17
  %tobool = icmp eq i32 %0, 0
  br i1 %tobool, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %entry
  %no_instrument_function_entry_exit = getelementptr inbounds %union.tree_node* %subr, i64 0, i32 0, i32 5
  %1 = bitcast i48* %no_instrument_function_entry_exit to i64*
  %bf.load = load i64* %1, align 8
  %bf.cast = and i64 %bf.load, 33554432
  %lnot = icmp eq i64 %bf.cast, 0
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %2 = phi i1 [ false, %entry ], [ %lnot, %land.rhs ]
  %land.ext = zext i1 %2 to i32
  %3 = load %struct.function** @cfun, align 8, !tbaa !9
  %instrument_entry_exit = getelementptr inbounds %struct.function* %3, i64 0, i32 56
  %4 = bitcast i24* %instrument_entry_exit to i32*
  %bf.load2 = load i32* %4, align 8
  %bf.shl = shl nuw nsw i32 %land.ext, 13
  %bf.clear3 = and i32 %bf.load2, -8193
  %bf.set = or i32 %bf.clear3, %bf.shl
  store i32 %bf.set, i32* %4, align 8
  %5 = load i32* @profile_flag, align 4, !tbaa !17
  %tobool4 = icmp eq i32 %5, 0
  br i1 %tobool4, label %land.end14, label %land.rhs5

land.rhs5:                                        ; preds = %land.end
  %no_instrument_function_entry_exit7 = getelementptr inbounds %union.tree_node* %subr, i64 0, i32 0, i32 5
  %6 = bitcast i48* %no_instrument_function_entry_exit7 to i64*
  %bf.load8 = load i64* %6, align 8
  %bf.cast11 = and i64 %bf.load8, 33554432
  %lnot13 = icmp eq i64 %bf.cast11, 0
  br label %land.end14

land.end14:                                       ; preds = %land.end, %land.rhs5
  %7 = phi i1 [ false, %land.end ], [ %lnot13, %land.rhs5 ]
  %land.ext15 = zext i1 %7 to i32
  %8 = load %struct.function** @cfun, align 8, !tbaa !9
  %profile = getelementptr inbounds %struct.function* %8, i64 0, i32 56
  %9 = bitcast i24* %profile to i32*
  %bf.load16 = load i32* %9, align 8
  %bf.shl18 = shl nuw nsw i32 %land.ext15, 14
  %bf.clear19 = and i32 %bf.load16, -16385
  %bf.set20 = or i32 %bf.clear19, %bf.shl18
  store i32 %bf.set20, i32* %9, align 8
  %10 = load %struct.rtx_def** @stack_limit_rtx, align 8, !tbaa !9
  %cmp = icmp eq %struct.rtx_def* %10, null
  br i1 %cmp, label %land.end29, label %land.rhs21

land.rhs21:                                       ; preds = %land.end14
  %no_limit_stack = getelementptr inbounds %union.tree_node* %subr, i64 0, i32 0, i32 5
  %11 = bitcast i48* %no_limit_stack to i64*
  %bf.load23 = load i64* %11, align 8
  %bf.cast26 = and i64 %bf.load23, 268435456
  %lnot28 = icmp eq i64 %bf.cast26, 0
  br label %land.end29

land.end29:                                       ; preds = %land.end14, %land.rhs21
  %12 = phi i1 [ false, %land.end14 ], [ %lnot28, %land.rhs21 ]
  %land.ext30 = zext i1 %12 to i32
  %13 = load %struct.function** @cfun, align 8, !tbaa !9
  %limit_stack = getelementptr inbounds %struct.function* %13, i64 0, i32 56
  %14 = bitcast i24* %limit_stack to i32*
  %bf.load31 = load i32* %14, align 8
  %bf.shl33 = shl nuw nsw i32 %land.ext30, 15
  %bf.clear34 = and i32 %bf.load31, -32769
  %bf.set35 = or i32 %bf.clear34, %bf.shl33
  store i32 %bf.set35, i32* %14, align 8
  %15 = load %struct.function** @cfun, align 8, !tbaa !9
  %needs_context = getelementptr inbounds %struct.function* %15, i64 0, i32 56
  %16 = bitcast i24* %needs_context to i32*
  %bf.load36 = load i32* %16, align 8
  %bf.clear38 = and i32 %bf.load36, 8
  %tobool39 = icmp eq i32 %bf.clear38, 0
  br i1 %tobool39, label %if.end50, label %if.then

if.then:                                          ; preds = %land.end29
  %17 = load i32* @target_flags, align 4, !tbaa !17
  %and = lshr i32 %17, 25
  %18 = and i32 %and, 1
  %19 = or i32 %18, 4
  %idxprom279 = zext i32 %19 to i64
  %arrayidx = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom279
  %20 = load i8* %arrayidx, align 1, !tbaa !22
  %conv = zext i8 %20 to i64
  %call.i = tail call fastcc %struct.rtx_def* @assign_stack_local_1(i32 %19, i64 %conv, i32 0, %struct.function* %15) #5
  %21 = load %struct.rtx_def** @static_chain_incoming_rtx, align 8, !tbaa !9
  %22 = getelementptr inbounds %struct.rtx_def* %21, i64 0, i32 0
  %bf.load44 = load i32* %22, align 8
  %bf.clear45 = and i32 %bf.load44, 65535
  %cmp46 = icmp eq i32 %bf.clear45, 61
  br i1 %cmp46, label %if.then48, label %if.end50

if.then48:                                        ; preds = %if.then
  %call49 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call.i, %struct.rtx_def* %21) #5
  br label %if.end50

if.end50:                                         ; preds = %land.end29, %if.then, %if.then48
  %last_ptr.0 = phi %struct.rtx_def* [ %call.i, %if.then48 ], [ %call.i, %if.then ], [ null, %land.end29 ]
  %tobool51 = icmp eq i32 %parms_have_cleanups, 0
  br i1 %tobool51, label %if.else, label %if.then52

if.then52:                                        ; preds = %if.end50
  %call53 = tail call %struct.rtx_def* @gen_label_rtx() #5
  %23 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_cleanup_label = getelementptr inbounds %struct.function* %23, i64 0, i32 23
  store %struct.rtx_def* %call53, %struct.rtx_def** %x_cleanup_label, align 8, !tbaa !129
  br label %if.end55

if.else:                                          ; preds = %if.end50
  %24 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_cleanup_label54 = getelementptr inbounds %struct.function* %24, i64 0, i32 23
  store %struct.rtx_def* null, %struct.rtx_def** %x_cleanup_label54, align 8, !tbaa !129
  br label %if.end55

if.end55:                                         ; preds = %if.else, %if.then52
  %call56 = tail call %struct.rtx_def* @gen_label_rtx() #5
  %25 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_return_label = getelementptr inbounds %struct.function* %25, i64 0, i32 24
  store %struct.rtx_def* %call56, %struct.rtx_def** %x_return_label, align 8, !tbaa !130
  %result = getelementptr inbounds %union.tree_node* %subr, i64 0, i32 0, i32 11
  %26 = load %union.tree_node** %result, align 8, !tbaa !85
  %call58 = tail call i32 @aggregate_value_p(%union.tree_node* %26)
  %tobool59 = icmp eq i32 %call58, 0
  br i1 %tobool59, label %if.else84, label %if.then60

if.then60:                                        ; preds = %if.end55
  %27 = load %struct.rtx_def** @struct_value_incoming_rtx, align 8, !tbaa !9
  %tobool61 = icmp eq %struct.rtx_def* %27, null
  br i1 %tobool61, label %if.end129, label %if.end68

if.end68:                                         ; preds = %if.then60
  %28 = load i32* @target_flags, align 4, !tbaa !17
  %and63 = lshr i32 %28, 25
  %29 = and i32 %and63, 1
  %30 = or i32 %29, 4
  %call66 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %30) #5
  %31 = load %struct.rtx_def** @struct_value_incoming_rtx, align 8, !tbaa !9
  %call67 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call66, %struct.rtx_def* %31) #5
  %tobool69 = icmp eq %struct.rtx_def* %call66, null
  br i1 %tobool69, label %if.end129, label %if.then70

if.then70:                                        ; preds = %if.end68
  %32 = load %union.tree_node** %result, align 8, !tbaa !85
  %mode = getelementptr inbounds %union.tree_node* %32, i64 0, i32 0, i32 5
  %33 = bitcast i48* %mode to i64*
  %bf.load74 = load i64* %33, align 8
  %bf.load74.tr = trunc i64 %bf.load74 to i32
  %bf.cast76 = and i32 %bf.load74.tr, 255
  %call77 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %bf.cast76, %struct.rtx_def* %call66) #5
  %34 = load %union.tree_node** %result, align 8, !tbaa !85
  tail call void @set_mem_attributes(%struct.rtx_def* %call77, %union.tree_node* %34, i32 1) #5
  %35 = load %union.tree_node** %result, align 8, !tbaa !85
  %rtl = getelementptr inbounds %union.tree_node* %35, i64 0, i32 0, i32 17
  store %struct.rtx_def* %call77, %struct.rtx_def** %rtl, align 8, !tbaa !63
  br label %if.end129

if.else84:                                        ; preds = %if.end55
  %36 = load %union.tree_node** %result, align 8, !tbaa !85
  %mode88 = getelementptr inbounds %union.tree_node* %36, i64 0, i32 0, i32 5
  %37 = bitcast i48* %mode88 to i64*
  %bf.load89 = load i64* %37, align 8
  %bf.cast91 = and i64 %bf.load89, 255
  %cmp92 = icmp eq i64 %bf.cast91, 0
  br i1 %cmp92, label %if.then94, label %if.else99

if.then94:                                        ; preds = %if.else84
  %rtl98 = getelementptr inbounds %union.tree_node* %36, i64 0, i32 0, i32 17
  store %struct.rtx_def* null, %struct.rtx_def** %rtl98, align 8, !tbaa !63
  br label %if.end129

if.else99:                                        ; preds = %if.else84
  %type = getelementptr inbounds %union.tree_node* %36, i64 0, i32 0, i32 0, i32 1
  %38 = load %union.tree_node** %type, align 8, !tbaa !56
  %call102 = tail call %struct.rtx_def* @hard_function_value(%union.tree_node* %38, %union.tree_node* %subr, i32 1) #5
  %39 = getelementptr inbounds %struct.rtx_def* %call102, i64 0, i32 0
  %bf.load103 = load i32* %39, align 8
  %bf.clear104 = and i32 %bf.load103, 65535
  %cmp105 = icmp eq i32 %bf.clear104, 61
  br i1 %cmp105, label %if.else112, label %if.then107

if.then107:                                       ; preds = %if.else99
  %40 = load %union.tree_node** %result, align 8, !tbaa !85
  %rtl111 = getelementptr inbounds %union.tree_node* %40, i64 0, i32 0, i32 17
  store %struct.rtx_def* %call102, %struct.rtx_def** %rtl111, align 8, !tbaa !63
  br label %if.end129

if.else112:                                       ; preds = %if.else99
  %bf.lshr114 = lshr i32 %bf.load103, 16
  %bf.clear115 = and i32 %bf.lshr114, 255
  %call116 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear115) #5
  %41 = load %union.tree_node** %result, align 8, !tbaa !85
  %rtl120 = getelementptr inbounds %union.tree_node* %41, i64 0, i32 0, i32 17
  store %struct.rtx_def* %call116, %struct.rtx_def** %rtl120, align 8, !tbaa !63
  %regdecl_flag = getelementptr inbounds %union.tree_node* %41, i64 0, i32 0, i32 5
  %42 = bitcast i48* %regdecl_flag to i64*
  %bf.load124 = load i64* %42, align 8
  %bf.set126 = or i64 %bf.load124, 1024
  store i64 %bf.set126, i64* %42, align 8
  br label %if.end129

if.end129:                                        ; preds = %if.then60, %if.end68, %if.then94, %if.else112, %if.then107, %if.then70
  tail call void @assign_parms(%union.tree_node* %subr)
  %43 = load %struct.function** @cfun, align 8, !tbaa !9
  %needs_context130 = getelementptr inbounds %struct.function* %43, i64 0, i32 56
  %44 = bitcast i24* %needs_context130 to i32*
  %bf.load131 = load i32* %44, align 8
  %bf.clear133 = and i32 %bf.load131, 8
  %tobool134 = icmp eq i32 %bf.clear133, 0
  br i1 %tobool134, label %if.end143, label %if.then135

if.then135:                                       ; preds = %if.end129
  %45 = load %struct.rtx_def** @static_chain_incoming_rtx, align 8, !tbaa !9
  %46 = getelementptr inbounds %struct.rtx_def* %45, i64 0, i32 0
  %bf.load136 = load i32* %46, align 8
  %bf.clear137 = and i32 %bf.load136, 65535
  %cmp138 = icmp eq i32 %bf.clear137, 61
  br i1 %cmp138, label %if.end143, label %if.then140

if.then140:                                       ; preds = %if.then135
  %call141 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %last_ptr.0, %struct.rtx_def* %45) #5
  br label %if.end143

if.end143:                                        ; preds = %if.then135, %if.end129, %if.then140
  %call144 = tail call %struct.rtx_def* @emit_note(i8* null, i32 -87) #5
  %call145 = tail call %struct.rtx_def* @get_last_insn() #5
  %47 = getelementptr inbounds %struct.rtx_def* %call145, i64 0, i32 0
  %bf.load146 = load i32* %47, align 8
  %bf.clear147 = and i32 %bf.load146, 65535
  %cmp148 = icmp eq i32 %bf.clear147, 37
  br i1 %cmp148, label %if.end152, label %if.then150

if.then150:                                       ; preds = %if.end143
  %call151 = tail call %struct.rtx_def* @emit_note(i8* null, i32 -99) #5
  br label %if.end152

if.end152:                                        ; preds = %if.end143, %if.then150
  %call153 = tail call %struct.rtx_def* @get_last_insn() #5
  %48 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_parm_birth_insn = getelementptr inbounds %struct.function* %48, i64 0, i32 35
  store %struct.rtx_def* %call153, %struct.rtx_def** %x_parm_birth_insn, align 8, !tbaa !131
  %49 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_context_display = getelementptr inbounds %struct.function* %49, i64 0, i32 33
  store %union.tree_node* null, %union.tree_node** %x_context_display, align 8, !tbaa !132
  %50 = load %struct.function** @cfun, align 8, !tbaa !9
  %needs_context154 = getelementptr inbounds %struct.function* %50, i64 0, i32 56
  %51 = bitcast i24* %needs_context154 to i32*
  %bf.load155 = load i32* %51, align 8
  %bf.clear157 = and i32 %bf.load155, 8
  %tobool158 = icmp eq i32 %bf.clear157, 0
  br i1 %tobool158, label %if.end205, label %if.then159

if.then159:                                       ; preds = %if.end152
  %52 = load %union.tree_node** @current_function_decl, align 8, !tbaa !9
  %call160 = tail call %union.tree_node* @decl_function_context(%union.tree_node* %52) #5
  %tobool161 = icmp eq %union.tree_node* %call160, null
  br i1 %tobool161, label %if.end205.loopexit, label %if.then162

if.then162:                                       ; preds = %if.then159
  %53 = load %struct.rtx_def** @static_chain_incoming_rtx, align 8, !tbaa !9
  %54 = getelementptr inbounds %struct.rtx_def* %53, i64 0, i32 0
  %bf.load163 = load i32* %54, align 8
  %bf.clear164 = and i32 %bf.load163, 65535
  %cmp165 = icmp eq i32 %bf.clear164, 61
  br i1 %cmp165, label %if.then167, label %while.body.lr.ph

if.then167:                                       ; preds = %if.then162
  %call168 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %53, %struct.rtx_def* %last_ptr.0) #5
  %.pre289 = load %struct.rtx_def** @static_chain_incoming_rtx, align 8, !tbaa !9
  br label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %if.then167, %if.then162
  %55 = phi %struct.rtx_def* [ %.pre289, %if.then167 ], [ %53, %if.then162 ]
  %call170 = tail call %struct.rtx_def* @copy_to_reg(%struct.rtx_def* %55) #5
  br label %while.body

while.body:                                       ; preds = %if.end182, %if.then201, %while.body.lr.ph
  %tem.0284 = phi %union.tree_node* [ %call160, %while.body.lr.ph ], [ %call178, %if.then201 ], [ %call178, %if.end182 ]
  %last_ptr.1283 = phi %struct.rtx_def* [ %call170, %while.body.lr.ph ], [ %call199, %if.then201 ], [ %call199, %if.end182 ]
  %call173 = tail call %union.tree_node* @make_node(i32 120) #5
  %operands = getelementptr inbounds %union.tree_node* %call173, i64 0, i32 0, i32 2
  %arrayidx174 = getelementptr inbounds i32* %operands, i64 2
  %56 = bitcast i32* %arrayidx174 to %struct.rtx_def**
  store %struct.rtx_def* %last_ptr.1283, %struct.rtx_def** %56, align 8, !tbaa !9
  %57 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_context_display175 = getelementptr inbounds %struct.function* %57, i64 0, i32 33
  %58 = load %union.tree_node** %x_context_display175, align 8, !tbaa !132
  %call176 = tail call %union.tree_node* @tree_cons(%union.tree_node* %tem.0284, %union.tree_node* %call173, %union.tree_node* %58) #5
  %59 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_context_display177 = getelementptr inbounds %struct.function* %59, i64 0, i32 33
  store %union.tree_node* %call176, %union.tree_node** %x_context_display177, align 8, !tbaa !132
  %call178 = tail call %union.tree_node* @decl_function_context(%union.tree_node* %tem.0284) #5
  %cmp179 = icmp eq %union.tree_node* %call178, null
  br i1 %cmp179, label %if.end205.loopexit, label %if.end182

if.end182:                                        ; preds = %while.body
  %60 = load i32* @target_flags, align 4, !tbaa !17
  %and183 = lshr i32 %60, 25
  %61 = and i32 %and183, 1
  %62 = or i32 %61, 4
  %idxprom186278 = zext i32 %62 to i64
  %arrayidx187 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom186278
  %63 = load i8* %arrayidx187, align 1, !tbaa !22
  %conv188 = zext i8 %63 to i64
  %sub = sub nsw i64 0, %conv188
  %call189 = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %last_ptr.1283, i64 %sub) #5
  %64 = load i32* @target_flags, align 4, !tbaa !17
  %and190 = lshr i32 %64, 25
  %65 = and i32 %and190, 1
  %66 = or i32 %65, 4
  %call196 = tail call %struct.rtx_def* @memory_address(i32 %66, %struct.rtx_def* %call189) #5
  %call197 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %66, %struct.rtx_def* %call196) #5
  %call198 = tail call i64 @get_frame_alias_set() #5
  tail call void @set_mem_alias_set(%struct.rtx_def* %call197, i64 %call198) #5
  %call199 = tail call %struct.rtx_def* @copy_to_reg(%struct.rtx_def* %call197) #5
  %67 = load i32* @optimize, align 4, !tbaa !17
  %tobool200 = icmp eq i32 %67, 0
  br i1 %tobool200, label %if.then201, label %while.body

if.then201:                                       ; preds = %if.end182
  %68 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_save_expr_regs = getelementptr inbounds %struct.function* %68, i64 0, i32 25
  %69 = load %struct.rtx_def** %x_save_expr_regs, align 8, !tbaa !124
  %call202 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 0, %struct.rtx_def* %call199, %struct.rtx_def* %69) #5
  %70 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_save_expr_regs203 = getelementptr inbounds %struct.function* %70, i64 0, i32 25
  store %struct.rtx_def* %call202, %struct.rtx_def** %x_save_expr_regs203, align 8, !tbaa !124
  br label %while.body

if.end205.loopexit:                               ; preds = %while.body, %if.then159
  %.pre = load %struct.function** @cfun, align 8, !tbaa !9
  %instrument_entry_exit206.phi.trans.insert = getelementptr inbounds %struct.function* %.pre, i64 0, i32 56
  %.phi.trans.insert = bitcast i24* %instrument_entry_exit206.phi.trans.insert to i32*
  %bf.load207.pre = load i32* %.phi.trans.insert, align 8
  br label %if.end205

if.end205:                                        ; preds = %if.end205.loopexit, %if.end152
  %bf.load207 = phi i32 [ %bf.load207.pre, %if.end205.loopexit ], [ %bf.load155, %if.end152 ]
  %71 = phi %struct.function* [ %.pre, %if.end205.loopexit ], [ %50, %if.end152 ]
  %bf.clear209 = and i32 %bf.load207, 8192
  %tobool210 = icmp eq i32 %bf.clear209, 0
  br i1 %tobool210, label %if.end235, label %if.then211

if.then211:                                       ; preds = %if.end205
  %72 = load %union.tree_node** @current_function_decl, align 8, !tbaa !9
  %rtl213 = getelementptr inbounds %union.tree_node* %72, i64 0, i32 0, i32 17
  %73 = load %struct.rtx_def** %rtl213, align 8, !tbaa !63
  %tobool214 = icmp eq %struct.rtx_def* %73, null
  br i1 %tobool214, label %cond.false, label %cond.end

cond.false:                                       ; preds = %if.then211
  tail call void @make_decl_rtl(%union.tree_node* %72, i8* null) #5
  %74 = load %union.tree_node** @current_function_decl, align 8, !tbaa !9
  %rtl218 = getelementptr inbounds %union.tree_node* %74, i64 0, i32 0, i32 17
  %75 = load %struct.rtx_def** %rtl218, align 8, !tbaa !63
  br label %cond.end

cond.end:                                         ; preds = %if.then211, %cond.false
  %cond219 = phi %struct.rtx_def* [ %75, %cond.false ], [ %73, %if.then211 ]
  %76 = getelementptr inbounds %struct.rtx_def* %cond219, i64 0, i32 0
  %bf.load220 = load i32* %76, align 8
  %bf.clear221 = and i32 %bf.load220, 65535
  %cmp222 = icmp eq i32 %bf.clear221, 66
  br i1 %cmp222, label %if.then224, label %if.else226

if.then224:                                       ; preds = %cond.end
  %arrayidx225 = getelementptr inbounds %struct.rtx_def* %cond219, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx225 to %struct.rtx_def**
  %77 = load %struct.rtx_def** %rtx, align 8, !tbaa !9
  %78 = load %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 95), align 8, !tbaa !9
  %79 = load i32* @target_flags, align 4, !tbaa !17
  %and228 = lshr i32 %79, 25
  %80 = and i32 %and228, 1
  %81 = or i32 %80, 4
  %82 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 4), align 8, !tbaa !9
  %call231 = tail call %struct.rtx_def* @expand_builtin_return_addr(i32 53, i32 0, %struct.rtx_def* %82) #5
  %83 = load i32* @target_flags, align 4, !tbaa !17
  %and232 = lshr i32 %83, 25
  %84 = and i32 %and232, 1
  %85 = or i32 %84, 4
  tail call void (%struct.rtx_def*, i32, i32, i32, ...)* @emit_library_call(%struct.rtx_def* %78, i32 0, i32 0, i32 2, %struct.rtx_def* %77, i32 %81, %struct.rtx_def* %call231, i32 %85) #5
  %.pre286 = load %struct.function** @cfun, align 8, !tbaa !9
  %profile236.phi.trans.insert = getelementptr inbounds %struct.function* %.pre286, i64 0, i32 56
  %.phi.trans.insert287 = bitcast i24* %profile236.phi.trans.insert to i32*
  %bf.load237.pre = load i32* %.phi.trans.insert287, align 8
  br label %if.end235

if.else226:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8]* @.str, i64 0, i64 0), i32 6689, i8* getelementptr inbounds ([22 x i8]* @__FUNCTION__.expand_function_start, i64 0, i64 0)) #8
  unreachable

if.end235:                                        ; preds = %if.end205, %if.then224
  %bf.load237 = phi i32 [ %bf.load207, %if.end205 ], [ %bf.load237.pre, %if.then224 ]
  %86 = phi %struct.function* [ %71, %if.end205 ], [ %.pre286, %if.then224 ]
  %bf.clear239 = and i32 %bf.load237, 16384
  %tobool240 = icmp eq i32 %bf.clear239, 0
  br i1 %tobool240, label %if.end242, label %if.then241

if.then241:                                       ; preds = %if.end235
  %87 = load i32* @profile_label_no, align 4, !tbaa !17
  %inc = add nsw i32 %87, 1
  store i32 %inc, i32* @profile_label_no, align 4, !tbaa !17
  %profile_label_no = getelementptr inbounds %struct.function* %86, i64 0, i32 50
  store i32 %87, i32* %profile_label_no, align 4, !tbaa !133
  br label %if.end242

if.end242:                                        ; preds = %if.end235, %if.then241
  %call243 = tail call %struct.rtx_def* @emit_note(i8* null, i32 -99) #5
  %88 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_tail_recursion_reentry = getelementptr inbounds %struct.function* %88, i64 0, i32 29
  store %struct.rtx_def* %call243, %struct.rtx_def** %x_tail_recursion_reentry, align 8, !tbaa !134
  %call244 = tail call %union.tree_node* @get_pending_sizes() #5
  %call245 = tail call %union.tree_node* @nreverse(%union.tree_node* %call244) #5
  %tobool3.i = icmp eq %union.tree_node* %call245, null
  br i1 %tobool3.i, label %expand_pending_sizes.exit, label %for.body.i

for.body.i:                                       ; preds = %if.end242, %for.body.i
  %tem.04.i = phi %union.tree_node* [ %92, %for.body.i ], [ %call245, %if.end242 ]
  %value.i = getelementptr inbounds %union.tree_node* %tem.04.i, i64 0, i32 0, i32 2
  %89 = bitcast i32* %value.i to %union.tree_node**
  %90 = load %union.tree_node** %89, align 8, !tbaa !27
  %91 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !9
  %call.i280 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %90, %struct.rtx_def* %91, i32 0, i32 0) #5
  tail call void @emit_queue() #5
  %chain.i = getelementptr inbounds %union.tree_node* %tem.04.i, i64 0, i32 0, i32 0, i32 0
  %92 = load %union.tree_node** %chain.i, align 8, !tbaa !30
  %tobool.i = icmp eq %union.tree_node* %92, null
  br i1 %tobool.i, label %expand_pending_sizes.exit, label %for.body.i

expand_pending_sizes.exit:                        ; preds = %for.body.i, %if.end242
  tail call void @force_next_line_note() #5
  ret void
}

declare void @init_recog_no_volatile() #2

declare %struct.rtx_def* @gen_label_rtx() #2

declare void @emit_library_call(%struct.rtx_def*, i32, i32, i32, ...) #2

declare %struct.rtx_def* @expand_builtin_return_addr(i32, i32, %struct.rtx_def*) #2

declare %union.tree_node* @nreverse(%union.tree_node*) #2

declare %union.tree_node* @get_pending_sizes() #2

declare void @force_next_line_note() #2

; Function Attrs: nounwind uwtable
define void @expand_dummy_function_end() #0 {
entry:
  %call3 = tail call i32 @in_sequence_p() #5
  %tobool4 = icmp eq i32 %call3, 0
  br i1 %tobool4, label %while.end, label %while.body

while.body:                                       ; preds = %entry, %while.body
  tail call void @end_sequence() #5
  %call = tail call i32 @in_sequence_p() #5
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %while.end, label %while.body

while.end:                                        ; preds = %while.body, %entry
  %0 = load %struct.function** @cfun, align 8, !tbaa !9
  %1 = load void (%struct.function*)** @free_lang_status, align 8, !tbaa !9
  %tobool.i = icmp eq void (%struct.function*)* %1, null
  br i1 %tobool.i, label %free_after_parsing.exit, label %if.then.i

if.then.i:                                        ; preds = %while.end
  tail call void %1(%struct.function* %0) #5
  br label %free_after_parsing.exit

free_after_parsing.exit:                          ; preds = %while.end, %if.then.i
  tail call void @free_stmt_status(%struct.function* %0) #5
  %2 = load %struct.function** @cfun, align 8, !tbaa !9
  tail call void @free_eh_status(%struct.function* %2) #5
  tail call void @free_expr_status(%struct.function* %2) #5
  tail call void @free_emit_status(%struct.function* %2) #5
  tail call void @free_varasm_status(%struct.function* %2) #5
  %3 = load void (%struct.function*)** @free_machine_status, align 8, !tbaa !9
  %tobool.i1 = icmp eq void (%struct.function*)* %3, null
  br i1 %tobool.i1, label %if.end.i, label %if.then.i2

if.then.i2:                                       ; preds = %free_after_parsing.exit
  tail call void %3(%struct.function* %2) #5
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i2, %free_after_parsing.exit
  %x_parm_reg_stack_loc.i = getelementptr inbounds %struct.function* %2, i64 0, i32 38
  %4 = load %struct.rtx_def*** %x_parm_reg_stack_loc.i, align 8, !tbaa !31
  %tobool1.i = icmp eq %struct.rtx_def** %4, null
  br i1 %tobool1.i, label %free_after_compilation.exit, label %if.then2.i

if.then2.i:                                       ; preds = %if.end.i
  %5 = bitcast %struct.rtx_def** %4 to i8*
  tail call void @free(i8* %5) #5
  br label %free_after_compilation.exit

free_after_compilation.exit:                      ; preds = %if.end.i, %if.then2.i
  %arg_offset_rtx.i = getelementptr inbounds %struct.function* %2, i64 0, i32 12
  store %struct.rtx_def* null, %struct.rtx_def** %arg_offset_rtx.i, align 8, !tbaa !32
  %return_rtx.i = getelementptr inbounds %struct.function* %2, i64 0, i32 14
  %x_nonlocal_labels.i = getelementptr inbounds %struct.function* %2, i64 0, i32 19
  %x_context_display.i = getelementptr inbounds %struct.function* %2, i64 0, i32 33
  %fixup_var_refs_queue.i = getelementptr inbounds %struct.function* %2, i64 0, i32 43
  store %struct.var_refs_queue* null, %struct.var_refs_queue** %fixup_var_refs_queue.i, align 8, !tbaa !11
  %original_arg_vector.i = getelementptr inbounds %struct.function* %2, i64 0, i32 46
  %epilogue_delay_list.i = getelementptr inbounds %struct.function* %2, i64 0, i32 55
  store %struct.rtx_def* null, %struct.rtx_def** %epilogue_delay_list.i, align 8, !tbaa !33
  %6 = bitcast %struct.rtx_def** %return_rtx.i to i8*
  tail call void @llvm.memset.p0i8.i64(i8* %6, i8 0, i64 16, i32 8, i1 false) #5
  %7 = bitcast %union.tree_node** %x_nonlocal_labels.i to i8*
  tail call void @llvm.memset.p0i8.i64(i8* %7, i8 0, i64 104, i32 8, i1 false) #5
  %8 = bitcast %union.tree_node** %x_context_display.i to i8*
  tail call void @llvm.memset.p0i8.i64(i8* %8, i8 0, i64 32, i32 8, i1 false) #5
  %9 = bitcast %struct.rtx_def*** %x_parm_reg_stack_loc.i to i8*
  tail call void @llvm.memset.p0i8.i64(i8* %9, i8 0, i64 16, i32 8, i1 false) #5
  %10 = bitcast i8** %original_arg_vector.i to i8*
  tail call void @llvm.memset.p0i8.i64(i8* %10, i8 0, i64 24, i32 8, i1 false) #5
  store %struct.function* null, %struct.function** @cfun, align 8, !tbaa !9
  ret void
}

declare i32 @in_sequence_p() #2

; Function Attrs: nounwind uwtable
define void @diddle_return_value(void (%struct.rtx_def*, i8*)* nocapture %doit, i8* %arg) #0 {
entry:
  %0 = load %struct.function** @cfun, align 8, !tbaa !9
  %return_rtx = getelementptr inbounds %struct.function* %0, i64 0, i32 14
  %1 = load %struct.rtx_def** %return_rtx, align 8, !tbaa !97
  %tobool = icmp eq %struct.rtx_def* %1, null
  br i1 %tobool, label %if.end22, label %if.end

if.end:                                           ; preds = %entry
  %2 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 0
  %bf.load = load i32* %2, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %if.end22 [
    i32 61, label %if.then1
    i32 39, label %for.cond.preheader
  ]

for.cond.preheader:                               ; preds = %if.end
  %arrayidx = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx to %struct.rtvec_def**
  %3 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !9
  %num_elem34 = getelementptr inbounds %struct.rtvec_def* %3, i64 0, i32 0
  %4 = load i32* %num_elem34, align 4, !tbaa !75
  %cmp635 = icmp sgt i32 %4, 0
  br i1 %cmp635, label %for.body, label %if.end22

if.then1:                                         ; preds = %if.end
  tail call void %doit(%struct.rtx_def* %1, i8* %arg) #5
  br label %if.end22

for.body:                                         ; preds = %for.cond.preheader, %for.inc
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.cond.preheader ]
  %5 = phi %struct.rtvec_def* [ %10, %for.inc ], [ %3, %for.cond.preheader ]
  %arrayidx10 = getelementptr inbounds %struct.rtvec_def* %5, i64 0, i32 1, i64 %indvars.iv
  %6 = load %struct.rtx_def** %arrayidx10, align 8, !tbaa !9
  %arrayidx12 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx12 to %struct.rtx_def**
  %7 = load %struct.rtx_def** %rtx, align 8, !tbaa !9
  %8 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 0
  %bf.load13 = load i32* %8, align 8
  %bf.clear14 = and i32 %bf.load13, 65535
  %cmp15 = icmp eq i32 %bf.clear14, 61
  br i1 %cmp15, label %land.lhs.true, label %for.inc

land.lhs.true:                                    ; preds = %for.body
  %arrayidx17 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx17 to i32*
  %9 = load i32* %rtuint, align 4, !tbaa !17
  %cmp18 = icmp ult i32 %9, 53
  br i1 %cmp18, label %if.then19, label %for.inc

if.then19:                                        ; preds = %land.lhs.true
  tail call void %doit(%struct.rtx_def* %7, i8* %arg) #5
  %.pre = load %struct.rtvec_def** %rtvec, align 8, !tbaa !9
  br label %for.inc

for.inc:                                          ; preds = %for.body, %land.lhs.true, %if.then19
  %10 = phi %struct.rtvec_def* [ %5, %for.body ], [ %5, %land.lhs.true ], [ %.pre, %if.then19 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %num_elem = getelementptr inbounds %struct.rtvec_def* %10, i64 0, i32 0
  %11 = load i32* %num_elem, align 4, !tbaa !75
  %12 = trunc i64 %indvars.iv.next to i32
  %cmp6 = icmp slt i32 %12, %11
  br i1 %cmp6, label %for.body, label %if.end22

if.end22:                                         ; preds = %for.inc, %for.cond.preheader, %if.end, %entry, %if.then1
  ret void
}

; Function Attrs: nounwind uwtable
define void @clobber_return_register() #0 {
entry:
  %0 = load %struct.function** @cfun, align 8, !tbaa !9
  %return_rtx.i = getelementptr inbounds %struct.function* %0, i64 0, i32 14
  %1 = load %struct.rtx_def** %return_rtx.i, align 8, !tbaa !97
  %tobool.i = icmp eq %struct.rtx_def* %1, null
  br i1 %tobool.i, label %diddle_return_value.exit, label %if.end.i

if.end.i:                                         ; preds = %entry
  %2 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 0
  %bf.load.i = load i32* %2, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  switch i32 %bf.clear.i, label %diddle_return_value.exit [
    i32 61, label %if.then1.i
    i32 39, label %for.cond.preheader.i
  ]

for.cond.preheader.i:                             ; preds = %if.end.i
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 0
  %rtvec.i = bitcast %union.rtunion_def* %arrayidx.i to %struct.rtvec_def**
  %3 = load %struct.rtvec_def** %rtvec.i, align 8, !tbaa !9
  %num_elem34.i = getelementptr inbounds %struct.rtvec_def* %3, i64 0, i32 0
  %4 = load i32* %num_elem34.i, align 4, !tbaa !75
  %cmp635.i = icmp sgt i32 %4, 0
  br i1 %cmp635.i, label %for.body.i, label %diddle_return_value.exit

if.then1.i:                                       ; preds = %if.end.i
  %call.i20 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %1) #5
  %call1.i21 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call.i20) #5
  br label %diddle_return_value.exit

for.body.i:                                       ; preds = %for.cond.preheader.i, %for.inc.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %for.inc.i ], [ 0, %for.cond.preheader.i ]
  %5 = phi %struct.rtvec_def* [ %10, %for.inc.i ], [ %3, %for.cond.preheader.i ]
  %arrayidx10.i = getelementptr inbounds %struct.rtvec_def* %5, i64 0, i32 1, i64 %indvars.iv.i
  %6 = load %struct.rtx_def** %arrayidx10.i, align 8, !tbaa !9
  %arrayidx12.i = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1, i64 0
  %rtx.i = bitcast %union.rtunion_def* %arrayidx12.i to %struct.rtx_def**
  %7 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !9
  %8 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 0
  %bf.load13.i = load i32* %8, align 8
  %bf.clear14.i = and i32 %bf.load13.i, 65535
  %cmp15.i = icmp eq i32 %bf.clear14.i, 61
  br i1 %cmp15.i, label %land.lhs.true.i, label %for.inc.i

land.lhs.true.i:                                  ; preds = %for.body.i
  %arrayidx17.i = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 1, i64 0
  %rtuint.i = bitcast %union.rtunion_def* %arrayidx17.i to i32*
  %9 = load i32* %rtuint.i, align 4, !tbaa !17
  %cmp18.i = icmp ult i32 %9, 53
  br i1 %cmp18.i, label %if.then19.i, label %for.inc.i

if.then19.i:                                      ; preds = %land.lhs.true.i
  %call.i = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %7) #5
  %call1.i = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call.i) #5
  %.pre.i = load %struct.rtvec_def** %rtvec.i, align 8, !tbaa !9
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then19.i, %land.lhs.true.i, %for.body.i
  %10 = phi %struct.rtvec_def* [ %5, %for.body.i ], [ %5, %land.lhs.true.i ], [ %.pre.i, %if.then19.i ]
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %num_elem.i = getelementptr inbounds %struct.rtvec_def* %10, i64 0, i32 0
  %11 = load i32* %num_elem.i, align 4, !tbaa !75
  %12 = trunc i64 %indvars.iv.next.i to i32
  %cmp6.i = icmp slt i32 %12, %11
  br i1 %cmp6.i, label %for.body.i, label %diddle_return_value.exit

diddle_return_value.exit:                         ; preds = %for.inc.i, %entry, %if.end.i, %for.cond.preheader.i, %if.then1.i
  %13 = load %union.tree_node** @current_function_decl, align 8, !tbaa !9
  %result = getelementptr inbounds %union.tree_node* %13, i64 0, i32 0, i32 11
  %14 = load %union.tree_node** %result, align 8, !tbaa !85
  %rtl = getelementptr inbounds %union.tree_node* %14, i64 0, i32 0, i32 17
  %15 = load %struct.rtx_def** %rtl, align 8, !tbaa !63
  %cmp = icmp eq %struct.rtx_def* %15, null
  br i1 %cmp, label %if.end13, label %cond.end

cond.end:                                         ; preds = %diddle_return_value.exit
  %16 = getelementptr inbounds %struct.rtx_def* %15, i64 0, i32 0
  %bf.load = load i32* %16, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp10 = icmp eq i32 %bf.clear, 61
  br i1 %cmp10, label %land.lhs.true, label %if.end13

land.lhs.true:                                    ; preds = %cond.end
  %arrayidx = getelementptr inbounds %struct.rtx_def* %15, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %17 = load i32* %rtuint, align 4, !tbaa !17
  %cmp11 = icmp ugt i32 %17, 52
  br i1 %cmp11, label %if.then12, label %if.end13

if.then12:                                        ; preds = %land.lhs.true
  %call.i18 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %15) #5
  %call1.i19 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call.i18) #5
  br label %if.end13

if.end13:                                         ; preds = %diddle_return_value.exit, %cond.end, %land.lhs.true, %if.then12
  ret void
}

; Function Attrs: nounwind uwtable
define void @use_return_register() #0 {
entry:
  %0 = load %struct.function** @cfun, align 8, !tbaa !9
  %return_rtx.i = getelementptr inbounds %struct.function* %0, i64 0, i32 14
  %1 = load %struct.rtx_def** %return_rtx.i, align 8, !tbaa !97
  %tobool.i = icmp eq %struct.rtx_def* %1, null
  br i1 %tobool.i, label %diddle_return_value.exit, label %if.end.i

if.end.i:                                         ; preds = %entry
  %2 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 0
  %bf.load.i = load i32* %2, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  switch i32 %bf.clear.i, label %diddle_return_value.exit [
    i32 61, label %if.then1.i
    i32 39, label %for.cond.preheader.i
  ]

for.cond.preheader.i:                             ; preds = %if.end.i
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 0
  %rtvec.i = bitcast %union.rtunion_def* %arrayidx.i to %struct.rtvec_def**
  %3 = load %struct.rtvec_def** %rtvec.i, align 8, !tbaa !9
  %num_elem34.i = getelementptr inbounds %struct.rtvec_def* %3, i64 0, i32 0
  %4 = load i32* %num_elem34.i, align 4, !tbaa !75
  %cmp635.i = icmp sgt i32 %4, 0
  br i1 %cmp635.i, label %for.body.i, label %diddle_return_value.exit

if.then1.i:                                       ; preds = %if.end.i
  %call.i1 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %1) #5
  %call1.i2 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call.i1) #5
  br label %diddle_return_value.exit

for.body.i:                                       ; preds = %for.cond.preheader.i, %for.inc.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %for.inc.i ], [ 0, %for.cond.preheader.i ]
  %5 = phi %struct.rtvec_def* [ %10, %for.inc.i ], [ %3, %for.cond.preheader.i ]
  %arrayidx10.i = getelementptr inbounds %struct.rtvec_def* %5, i64 0, i32 1, i64 %indvars.iv.i
  %6 = load %struct.rtx_def** %arrayidx10.i, align 8, !tbaa !9
  %arrayidx12.i = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1, i64 0
  %rtx.i = bitcast %union.rtunion_def* %arrayidx12.i to %struct.rtx_def**
  %7 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !9
  %8 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 0
  %bf.load13.i = load i32* %8, align 8
  %bf.clear14.i = and i32 %bf.load13.i, 65535
  %cmp15.i = icmp eq i32 %bf.clear14.i, 61
  br i1 %cmp15.i, label %land.lhs.true.i, label %for.inc.i

land.lhs.true.i:                                  ; preds = %for.body.i
  %arrayidx17.i = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 1, i64 0
  %rtuint.i = bitcast %union.rtunion_def* %arrayidx17.i to i32*
  %9 = load i32* %rtuint.i, align 4, !tbaa !17
  %cmp18.i = icmp ult i32 %9, 53
  br i1 %cmp18.i, label %if.then19.i, label %for.inc.i

if.then19.i:                                      ; preds = %land.lhs.true.i
  %call.i = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %7) #5
  %call1.i = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call.i) #5
  %.pre.i = load %struct.rtvec_def** %rtvec.i, align 8, !tbaa !9
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then19.i, %land.lhs.true.i, %for.body.i
  %10 = phi %struct.rtvec_def* [ %5, %for.body.i ], [ %5, %land.lhs.true.i ], [ %.pre.i, %if.then19.i ]
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %num_elem.i = getelementptr inbounds %struct.rtvec_def* %10, i64 0, i32 0
  %11 = load i32* %num_elem.i, align 4, !tbaa !75
  %12 = trunc i64 %indvars.iv.next.i to i32
  %cmp6.i = icmp slt i32 %12, %11
  br i1 %cmp6.i, label %for.body.i, label %diddle_return_value.exit

diddle_return_value.exit:                         ; preds = %for.inc.i, %entry, %if.end.i, %for.cond.preheader.i, %if.then1.i
  ret void
}

; Function Attrs: nounwind uwtable
define void @expand_function_end(i8* %filename, i32 %line, i32 %end_bindings) #0 {
entry:
  tail call void @finish_expr_for_function() #5
  %0 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_arg_pointer_save_area = getelementptr inbounds %struct.function* %0, i64 0, i32 30
  %1 = load %struct.rtx_def** %x_arg_pointer_save_area, align 8, !tbaa !103
  %tobool = icmp eq %struct.rtx_def* %1, null
  br i1 %tobool, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %arg_pointer_save_area_init = getelementptr inbounds %struct.function* %0, i64 0, i32 56
  %2 = bitcast i24* %arg_pointer_save_area_init to i32*
  %bf.load = load i32* %2, align 8
  %bf.clear = and i32 %bf.load, 8388608
  %tobool1 = icmp eq i32 %bf.clear, 0
  br i1 %tobool1, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %call = tail call %struct.rtx_def* @get_arg_pointer_save_area(%struct.function* %0)
  %.pre = load %struct.function** @cfun, align 8, !tbaa !9
  br label %if.end

if.end:                                           ; preds = %land.lhs.true, %entry, %if.then
  %3 = phi %struct.function* [ %0, %land.lhs.true ], [ %0, %entry ], [ %.pre, %if.then ]
  %x_trampoline_list = getelementptr inbounds %struct.function* %3, i64 0, i32 34
  %link.0347 = load %union.tree_node** %x_trampoline_list, align 8
  %tobool2348 = icmp eq %union.tree_node* %link.0347, null
  br i1 %tobool2348, label %for.end, label %for.body

for.body:                                         ; preds = %if.end, %cond.end
  %link.0349 = phi %union.tree_node* [ %link.0, %cond.end ], [ %link.0347, %if.end ]
  %purpose = getelementptr inbounds %union.tree_node* %link.0349, i64 0, i32 0, i32 1
  %4 = load i8** %purpose, align 8
  %5 = bitcast i8* %4 to %union.tree_node*
  %call.i = tail call %union.tree_node* @decl_function_context(%union.tree_node* %5) #5
  %cmp.i = icmp eq %union.tree_node* %call.i, null
  br i1 %cmp.i, label %lookup_static_chain.exit, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %for.body
  %code.i = getelementptr inbounds i8* %4, i64 16
  %6 = bitcast i8* %code.i to i32*
  %bf.load.i = load i32* %6, align 8
  %bf.clear.i = and i32 %bf.load.i, 255
  %cmp1.i = icmp eq i32 %bf.clear.i, 30
  br i1 %cmp1.i, label %land.lhs.true.i, label %if.end.i

land.lhs.true.i:                                  ; preds = %lor.lhs.false.i
  %regdecl_flag.i = getelementptr inbounds i8* %4, i64 48
  %7 = bitcast i8* %regdecl_flag.i to i64*
  %bf.load3.i = load i64* %7, align 8
  %bf.cast.i = and i64 %bf.load3.i, 1024
  %tobool.i = icmp eq i64 %bf.cast.i, 0
  br i1 %tobool.i, label %if.end.i, label %lookup_static_chain.exit

if.end.i:                                         ; preds = %land.lhs.true.i, %lor.lhs.false.i
  %8 = load %union.tree_node** @current_function_decl, align 8, !tbaa !9
  %cmp5.i = icmp eq %union.tree_node* %call.i, %8
  %9 = load %union.tree_node** @inline_function_decl, align 8
  %cmp7.i = icmp eq %union.tree_node* %call.i, %9
  %or.cond.i = or i1 %cmp5.i, %cmp7.i
  br i1 %or.cond.i, label %if.then8.i, label %if.end9.i

if.then8.i:                                       ; preds = %if.end.i
  %10 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 7), align 8, !tbaa !9
  br label %lookup_static_chain.exit

if.end9.i:                                        ; preds = %if.end.i
  %11 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_context_display.i = getelementptr inbounds %struct.function* %11, i64 0, i32 33
  %link.024.i = load %union.tree_node** %x_context_display.i, align 8
  %tobool1025.i = icmp eq %union.tree_node* %link.024.i, null
  br i1 %tobool1025.i, label %for.end.i, label %for.body.i

for.cond.i:                                       ; preds = %for.body.i
  %chain.i = getelementptr inbounds %union.tree_node* %link.026.i, i64 0, i32 0, i32 0, i32 0
  %link.0.i = load %union.tree_node** %chain.i, align 8
  %tobool10.i = icmp eq %union.tree_node* %link.0.i, null
  br i1 %tobool10.i, label %for.end.i, label %for.body.i

for.body.i:                                       ; preds = %if.end9.i, %for.cond.i
  %link.026.i = phi %union.tree_node* [ %link.0.i, %for.cond.i ], [ %link.024.i, %if.end9.i ]
  %purpose.i = getelementptr inbounds %union.tree_node* %link.026.i, i64 0, i32 0, i32 1
  %12 = load i8** %purpose.i, align 8
  %13 = bitcast i8* %12 to %union.tree_node*
  %cmp11.i = icmp eq %union.tree_node* %13, %call.i
  br i1 %cmp11.i, label %if.then12.i, label %for.cond.i

if.then12.i:                                      ; preds = %for.body.i
  %value.i = getelementptr inbounds %union.tree_node* %link.026.i, i64 0, i32 0, i32 2
  %14 = bitcast i32* %value.i to %union.tree_node**
  %15 = load %union.tree_node** %14, align 8, !tbaa !27
  %operands.i = getelementptr inbounds %union.tree_node* %15, i64 0, i32 0, i32 2
  %arrayidx.i = getelementptr inbounds i32* %operands.i, i64 2
  %16 = bitcast i32* %arrayidx.i to %struct.rtx_def**
  %17 = load %struct.rtx_def** %16, align 8, !tbaa !9
  br label %lookup_static_chain.exit

for.end.i:                                        ; preds = %if.end9.i, %for.cond.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8]* @.str, i64 0, i64 0), i32 5612, i8* getelementptr inbounds ([20 x i8]* @__FUNCTION__.lookup_static_chain, i64 0, i64 0)) #8
  unreachable

lookup_static_chain.exit:                         ; preds = %for.body, %land.lhs.true.i, %if.then8.i, %if.then12.i
  %retval.0.i = phi %struct.rtx_def* [ %10, %if.then8.i ], [ %17, %if.then12.i ], [ null, %land.lhs.true.i ], [ null, %for.body ]
  %value = getelementptr inbounds %union.tree_node* %link.0349, i64 0, i32 0, i32 2
  %18 = bitcast i32* %value to %union.tree_node**
  %19 = load %union.tree_node** %18, align 8, !tbaa !27
  %operands = getelementptr inbounds %union.tree_node* %19, i64 0, i32 0, i32 2
  %arrayidx = getelementptr inbounds i32* %operands, i64 2
  %20 = bitcast i32* %arrayidx to %struct.rtx_def**
  %21 = load %struct.rtx_def** %20, align 8, !tbaa !9
  tail call void @start_sequence() #5
  %arrayidx5 = getelementptr inbounds %struct.rtx_def* %21, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx5 to %struct.rtx_def**
  %22 = load %struct.rtx_def** %rtx, align 8, !tbaa !9
  %23 = load i32* @target_flags, align 4, !tbaa !17
  %and.i = lshr i32 %23, 25
  %24 = and i32 %and.i, 1
  %25 = or i32 %24, 4
  %call.i325 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %25) #5
  %call1.i = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 1) #5
  %call2.i = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 -2) #5
  %26 = load i32* @target_flags, align 4, !tbaa !17
  %and3.i = lshr i32 %26, 25
  %27 = and i32 %and3.i, 1
  %28 = or i32 %27, 4
  %call6.i = tail call %struct.rtx_def* @expand_simple_binop(i32 %28, i32 75, %struct.rtx_def* %22, %struct.rtx_def* %call1.i, %struct.rtx_def* %call.i325, i32 0, i32 3) #5
  %29 = load i32* @target_flags, align 4, !tbaa !17
  %and7.i = lshr i32 %29, 25
  %30 = and i32 %and7.i, 1
  %31 = or i32 %30, 4
  %call10.i = tail call %struct.rtx_def* @expand_simple_binop(i32 %31, i32 83, %struct.rtx_def* %call6.i, %struct.rtx_def* %call2.i, %struct.rtx_def* %call6.i, i32 0, i32 3) #5
  %rtl = getelementptr inbounds i8* %4, i64 144
  %32 = bitcast i8* %rtl to %struct.rtx_def**
  %33 = load %struct.rtx_def** %32, align 8, !tbaa !63
  %tobool7 = icmp eq %struct.rtx_def* %33, null
  br i1 %tobool7, label %cond.false, label %cond.end

cond.false:                                       ; preds = %lookup_static_chain.exit
  tail call void @make_decl_rtl(%union.tree_node* %5, i8* null) #5
  %34 = load %struct.rtx_def** %32, align 8, !tbaa !63
  br label %cond.end

cond.end:                                         ; preds = %lookup_static_chain.exit, %cond.false
  %cond = phi %struct.rtx_def* [ %34, %cond.false ], [ %33, %lookup_static_chain.exit ]
  %arrayidx13 = getelementptr inbounds %struct.rtx_def* %cond, i64 0, i32 1, i64 0
  %rtx14 = bitcast %union.rtunion_def* %arrayidx13 to %struct.rtx_def**
  %35 = load %struct.rtx_def** %rtx14, align 8, !tbaa !9
  tail call void @x86_initialize_trampoline(%struct.rtx_def* %call10.i, %struct.rtx_def* %35, %struct.rtx_def* %retval.0.i) #5
  %call15 = tail call %struct.rtx_def* @get_insns() #5
  tail call void @end_sequence() #5
  %36 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_tail_recursion_reentry = getelementptr inbounds %struct.function* %36, i64 0, i32 29
  %37 = load %struct.rtx_def** %x_tail_recursion_reentry, align 8, !tbaa !134
  %call16 = tail call %struct.rtx_def* @emit_insns_before(%struct.rtx_def* %call15, %struct.rtx_def* %37) #5
  %chain = getelementptr inbounds %union.tree_node* %link.0349, i64 0, i32 0, i32 0, i32 0
  %link.0 = load %union.tree_node** %chain, align 8
  %tobool2 = icmp eq %union.tree_node* %link.0, null
  br i1 %tobool2, label %for.end, label %for.body

for.end:                                          ; preds = %cond.end, %if.end
  %38 = load i32* @flag_stack_check, align 4, !tbaa !17
  %tobool17 = icmp eq i32 %38, 0
  br i1 %tobool17, label %if.end43, label %if.then18

if.then18:                                        ; preds = %for.end
  %call20 = tail call %struct.rtx_def* @get_insns() #5
  %tobool22345 = icmp eq %struct.rtx_def* %call20, null
  br i1 %tobool22345, label %if.end43, label %for.body23

for.body23:                                       ; preds = %if.then18, %for.inc38
  %insn.0346 = phi %struct.rtx_def* [ %45, %for.inc38 ], [ %call20, %if.then18 ]
  %39 = getelementptr inbounds %struct.rtx_def* %insn.0346, i64 0, i32 0
  %bf.load24 = load i32* %39, align 8
  %bf.clear25 = and i32 %bf.load24, 65535
  %cmp = icmp eq i32 %bf.clear25, 34
  br i1 %cmp, label %if.then26, label %for.inc38

if.then26:                                        ; preds = %for.body23
  tail call void @start_sequence() #5
  %40 = load i32* @target_flags, align 4, !tbaa !17
  %and = lshr i32 %40, 23
  %41 = and i32 %and, 4
  %42 = mul i32 %41, 75
  %mul = add i32 %42, 300
  %conv321 = zext i32 %mul to i64
  %sub = sub i32 4092, %41
  %conv32320 = zext i32 %sub to i64
  %call33 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv32320) #5
  tail call void @probe_stack_range(i64 %conv321, %struct.rtx_def* %call33) #5
  %call34 = tail call %struct.rtx_def* @get_insns() #5
  tail call void @end_sequence() #5
  %43 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_tail_recursion_reentry35 = getelementptr inbounds %struct.function* %43, i64 0, i32 29
  %44 = load %struct.rtx_def** %x_tail_recursion_reentry35, align 8, !tbaa !134
  %call36 = tail call %struct.rtx_def* @emit_insns_before(%struct.rtx_def* %call34, %struct.rtx_def* %44) #5
  br label %if.end43

for.inc38:                                        ; preds = %for.body23
  %arrayidx40 = getelementptr inbounds %struct.rtx_def* %insn.0346, i64 0, i32 1, i64 2
  %rtx41 = bitcast %union.rtunion_def* %arrayidx40 to %struct.rtx_def**
  %45 = load %struct.rtx_def** %rtx41, align 8, !tbaa !9
  %tobool22 = icmp eq %struct.rtx_def* %45, null
  br i1 %tobool22, label %if.end43, label %for.body23

if.end43:                                         ; preds = %for.inc38, %if.then18, %for.end, %if.then26
  %46 = load i32* @warn_unused_parameter, align 4, !tbaa !17
  %cmp44 = icmp sgt i32 %46, 0
  br i1 %cmp44, label %if.then50, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end43
  %cmp46 = icmp slt i32 %46, 0
  %47 = load i32* @extra_warnings, align 4
  %tobool49 = icmp ne i32 %47, 0
  %or.cond = and i1 %cmp46, %tobool49
  br i1 %or.cond, label %if.then50, label %if.end82

if.then50:                                        ; preds = %lor.lhs.false, %if.end43
  %48 = load %union.tree_node** @current_function_decl, align 8, !tbaa !9
  %arguments = getelementptr inbounds %union.tree_node* %48, i64 0, i32 0, i32 10
  %decl51.0342 = load %union.tree_node** %arguments, align 8
  %tobool54343 = icmp eq %union.tree_node* %decl51.0342, null
  br i1 %tobool54343, label %if.end82, label %for.body55

for.body55:                                       ; preds = %if.then50, %for.inc78
  %decl51.0344 = phi %union.tree_node* [ %decl51.0, %for.inc78 ], [ %decl51.0342, %if.then50 ]
  %used_flag = getelementptr inbounds %union.tree_node* %decl51.0344, i64 0, i32 0, i32 0, i32 2
  %bf.load57 = load i32* %used_flag, align 8
  %49 = and i32 %bf.load57, 65791
  %50 = icmp eq i32 %49, 35
  br i1 %50, label %land.lhs.true67, label %for.inc78

land.lhs.true67:                                  ; preds = %for.body55
  %name = getelementptr inbounds %union.tree_node* %decl51.0344, i64 0, i32 0, i32 8
  %51 = load %union.tree_node** %name, align 8, !tbaa !80
  %tobool69 = icmp eq %union.tree_node* %51, null
  br i1 %tobool69, label %for.inc78, label %land.lhs.true70

land.lhs.true70:                                  ; preds = %land.lhs.true67
  %artificial_flag = getelementptr inbounds %union.tree_node* %decl51.0344, i64 0, i32 0, i32 5
  %52 = bitcast i48* %artificial_flag to i64*
  %bf.load72 = load i64* %52, align 8
  %bf.cast = and i64 %bf.load72, 4194304
  %tobool75 = icmp eq i64 %bf.cast, 0
  br i1 %tobool75, label %if.then76, label %for.inc78

if.then76:                                        ; preds = %land.lhs.true70
  tail call void (%union.tree_node*, i8*, ...)* @warning_with_decl(%union.tree_node* %decl51.0344, i8* getelementptr inbounds ([22 x i8]* @.str8, i64 0, i64 0)) #5
  br label %for.inc78

for.inc78:                                        ; preds = %land.lhs.true70, %land.lhs.true67, %for.body55, %if.then76
  %chain80 = getelementptr inbounds %union.tree_node* %decl51.0344, i64 0, i32 0, i32 0, i32 0
  %decl51.0 = load %union.tree_node** %chain80, align 8
  %tobool54 = icmp eq %union.tree_node* %decl51.0, null
  br i1 %tobool54, label %if.end82, label %for.body55

if.end82:                                         ; preds = %for.inc78, %if.then50, %lor.lhs.false
  %53 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_nonlocal_goto_handler_slots = getelementptr inbounds %struct.function* %53, i64 0, i32 20
  %54 = load %struct.rtx_def** %x_nonlocal_goto_handler_slots, align 8, !tbaa !113
  %cmp83 = icmp eq %struct.rtx_def* %54, null
  br i1 %cmp83, label %while.cond.preheader, label %land.lhs.true85

land.lhs.true85:                                  ; preds = %if.end82
  %has_nonlocal_label = getelementptr inbounds %struct.function* %53, i64 0, i32 56
  %55 = bitcast i24* %has_nonlocal_label to i32*
  %bf.load86 = load i32* %55, align 8
  %bf.clear88 = and i32 %bf.load86, 256
  %tobool89 = icmp eq i32 %bf.clear88, 0
  br i1 %tobool89, label %if.then90, label %while.cond.preheader

if.then90:                                        ; preds = %land.lhs.true85
  %call.i326 = tail call %struct.rtx_def* @get_insns() #5
  %tobool97.i = icmp eq %struct.rtx_def* %call.i326, null
  br i1 %tobool97.i, label %while.cond.preheader, label %for.body.i330

for.body.i330:                                    ; preds = %if.then90, %for.inc63.i
  %insn.098.i = phi %struct.rtx_def* [ %72, %for.inc63.i ], [ %call.i326, %if.then90 ]
  %56 = getelementptr inbounds %struct.rtx_def* %insn.098.i, i64 0, i32 0
  %bf.load.i327 = load i32* %56, align 8
  %bf.clear.i328 = and i32 %bf.load.i327, 65535
  %cmp.i329 = icmp eq i32 %bf.clear.i328, 36
  br i1 %cmp.i329, label %if.then.i, label %if.end33.i

if.then.i:                                        ; preds = %for.body.i330
  %bf.clear2.i = and i32 %bf.load.i327, -268435457
  store i32 %bf.clear2.i, i32* %56, align 8
  %57 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_nonlocal_labels.i = getelementptr inbounds %struct.function* %57, i64 0, i32 19
  %t.089.i = load %union.tree_node** %x_nonlocal_labels.i, align 8
  %tobool490.i = icmp eq %union.tree_node* %t.089.i, null
  br i1 %tobool490.i, label %if.end33.i, label %for.body5.i

for.cond3.i:                                      ; preds = %cond.end.i
  %chain.i331 = getelementptr inbounds %union.tree_node* %t.092.i, i64 0, i32 0, i32 0, i32 0
  %t.0.i = load %union.tree_node** %chain.i331, align 8
  %tobool4.i = icmp eq %union.tree_node* %t.0.i, null
  br i1 %tobool4.i, label %if.end33.i, label %for.body5.i

for.body5.i:                                      ; preds = %if.then.i, %for.cond3.i
  %t.092.i = phi %union.tree_node* [ %t.0.i, %for.cond3.i ], [ %t.089.i, %if.then.i ]
  %last_t.091.i = phi %union.tree_node* [ %t.092.i, %for.cond3.i ], [ null, %if.then.i ]
  %value.i332 = getelementptr inbounds %union.tree_node* %t.092.i, i64 0, i32 0, i32 2
  %58 = bitcast i32* %value.i332 to %union.tree_node**
  %59 = load %union.tree_node** %58, align 8, !tbaa !27
  %rtl.i = getelementptr inbounds %union.tree_node* %59, i64 0, i32 0, i32 17
  %60 = load %struct.rtx_def** %rtl.i, align 8, !tbaa !63
  %tobool6.i = icmp eq %struct.rtx_def* %60, null
  br i1 %tobool6.i, label %cond.false.i, label %cond.end.i

cond.false.i:                                     ; preds = %for.body5.i
  tail call void @make_decl_rtl(%union.tree_node* %59, i8* null) #5
  %61 = load %union.tree_node** %58, align 8, !tbaa !27
  %rtl16.i = getelementptr inbounds %union.tree_node* %61, i64 0, i32 0, i32 17
  %62 = load %struct.rtx_def** %rtl16.i, align 8, !tbaa !63
  br label %cond.end.i

cond.end.i:                                       ; preds = %cond.false.i, %for.body5.i
  %cond.i = phi %struct.rtx_def* [ %62, %cond.false.i ], [ %60, %for.body5.i ]
  %cmp17.i = icmp eq %struct.rtx_def* %cond.i, %insn.098.i
  br i1 %cmp17.i, label %if.then20.i, label %for.cond3.i

if.then20.i:                                      ; preds = %cond.end.i
  %tobool21.i = icmp eq %union.tree_node* %last_t.091.i, null
  br i1 %tobool21.i, label %if.then22.i, label %if.else.i

if.then22.i:                                      ; preds = %if.then20.i
  %63 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_nonlocal_labels23.i = getelementptr inbounds %struct.function* %63, i64 0, i32 19
  %64 = load %union.tree_node** %x_nonlocal_labels23.i, align 8, !tbaa !115
  %chain25.i = getelementptr inbounds %union.tree_node* %64, i64 0, i32 0, i32 0, i32 0
  %65 = load %union.tree_node** %chain25.i, align 8, !tbaa !30
  store %union.tree_node* %65, %union.tree_node** %x_nonlocal_labels23.i, align 8, !tbaa !115
  br label %if.end33.i

if.else.i:                                        ; preds = %if.then20.i
  %chain28.i = getelementptr inbounds %union.tree_node* %t.092.i, i64 0, i32 0, i32 0, i32 0
  %66 = load %union.tree_node** %chain28.i, align 8, !tbaa !30
  %chain30.i = getelementptr inbounds %union.tree_node* %last_t.091.i, i64 0, i32 0, i32 0, i32 0
  store %union.tree_node* %66, %union.tree_node** %chain30.i, align 8, !tbaa !30
  br label %if.end33.i

if.end33.i:                                       ; preds = %for.cond3.i, %if.else.i, %if.then22.i, %if.then.i, %for.body.i330
  %bf.load34.i = load i32* %56, align 8
  %bf.clear35.i = and i32 %bf.load34.i, 65535
  %cmp36.i = icmp eq i32 %bf.clear35.i, 32
  br i1 %cmp36.i, label %if.then37.i, label %for.inc63.i

if.then37.i:                                      ; preds = %if.end33.i
  %67 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_nonlocal_goto_handler_slots.i = getelementptr inbounds %struct.function* %67, i64 0, i32 20
  %t38.094.i = load %struct.rtx_def** %x_nonlocal_goto_handler_slots.i, align 8
  %cmp4095.i = icmp eq %struct.rtx_def* %t38.094.i, null
  br i1 %cmp4095.i, label %lor.lhs.false.critedge.i, label %for.body41.lr.ph.i

for.body41.lr.ph.i:                               ; preds = %if.then37.i
  %arrayidx.i333 = getelementptr inbounds %struct.rtx_def* %insn.098.i, i64 0, i32 1, i64 3
  %rtx.i = bitcast %union.rtunion_def* %arrayidx.i333 to %struct.rtx_def**
  br label %for.body41.i

for.body41.i:                                     ; preds = %for.inc46.i, %for.body41.lr.ph.i
  %t38.096.i = phi %struct.rtx_def* [ %t38.094.i, %for.body41.lr.ph.i ], [ %t38.0.i, %for.inc46.i ]
  %68 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !9
  %call42.i = tail call i32 @reg_mentioned_p(%struct.rtx_def* %t38.096.i, %struct.rtx_def* %68) #5
  %tobool43.i = icmp eq i32 %call42.i, 0
  br i1 %tobool43.i, label %for.inc46.i, label %if.then59.i

for.inc46.i:                                      ; preds = %for.body41.i
  %arrayidx48.i = getelementptr inbounds %struct.rtx_def* %t38.096.i, i64 0, i32 1, i64 1
  %rtx49.i = bitcast %union.rtunion_def* %arrayidx48.i to %struct.rtx_def**
  %t38.0.i = load %struct.rtx_def** %rtx49.i, align 8
  %cmp40.i = icmp eq %struct.rtx_def* %t38.0.i, null
  br i1 %cmp40.i, label %for.cond39.lor.lhs.false.critedge_crit_edge.i, label %for.body41.i

for.cond39.lor.lhs.false.critedge_crit_edge.i:    ; preds = %for.inc46.i
  %.pre.i = load %struct.function** @cfun, align 8, !tbaa !9
  br label %lor.lhs.false.critedge.i

lor.lhs.false.critedge.i:                         ; preds = %for.cond39.lor.lhs.false.critedge_crit_edge.i, %if.then37.i
  %69 = phi %struct.function* [ %.pre.i, %for.cond39.lor.lhs.false.critedge_crit_edge.i ], [ %67, %if.then37.i ]
  %x_nonlocal_goto_stack_level.i = getelementptr inbounds %struct.function* %69, i64 0, i32 22
  %70 = load %struct.rtx_def** %x_nonlocal_goto_stack_level.i, align 8, !tbaa !114
  %cmp52.i = icmp eq %struct.rtx_def* %70, null
  br i1 %cmp52.i, label %for.inc63.i, label %land.lhs.true.i334

land.lhs.true.i334:                               ; preds = %lor.lhs.false.critedge.i
  %arrayidx55.i = getelementptr inbounds %struct.rtx_def* %insn.098.i, i64 0, i32 1, i64 3
  %rtx56.i = bitcast %union.rtunion_def* %arrayidx55.i to %struct.rtx_def**
  %71 = load %struct.rtx_def** %rtx56.i, align 8, !tbaa !9
  %call57.i = tail call i32 @reg_mentioned_p(%struct.rtx_def* %70, %struct.rtx_def* %71) #5
  %tobool58.i = icmp eq i32 %call57.i, 0
  br i1 %tobool58.i, label %for.inc63.i, label %if.then59.i

if.then59.i:                                      ; preds = %for.body41.i, %land.lhs.true.i334
  %call60.i = tail call %struct.rtx_def* @delete_related_insns(%struct.rtx_def* %insn.098.i) #5
  br label %for.inc63.i

for.inc63.i:                                      ; preds = %if.then59.i, %land.lhs.true.i334, %lor.lhs.false.critedge.i, %if.end33.i
  %arrayidx65.i = getelementptr inbounds %struct.rtx_def* %insn.098.i, i64 0, i32 1, i64 2
  %rtx66.i = bitcast %union.rtunion_def* %arrayidx65.i to %struct.rtx_def**
  %72 = load %struct.rtx_def** %rtx66.i, align 8, !tbaa !9
  %tobool.i335 = icmp eq %struct.rtx_def* %72, null
  br i1 %tobool.i335, label %while.cond.preheader, label %for.body.i330

while.cond.preheader:                             ; preds = %for.inc63.i, %if.end82, %land.lhs.true85, %if.then90
  %call92340 = tail call i32 @in_sequence_p() #5
  %tobool93341 = icmp eq i32 %call92340, 0
  br i1 %tobool93341, label %while.end, label %while.body

while.body:                                       ; preds = %while.cond.preheader, %while.body
  tail call void @end_sequence() #5
  %call92 = tail call i32 @in_sequence_p() #5
  %tobool93 = icmp eq i32 %call92, 0
  br i1 %tobool93, label %while.end, label %while.body

while.end:                                        ; preds = %while.body, %while.cond.preheader
  %73 = load i32* @immediate_size_expand, align 4, !tbaa !17
  %dec = add nsw i32 %73, -1
  store i32 %dec, i32* @immediate_size_expand, align 4, !tbaa !17
  tail call void @clear_pending_stack_adjust() #5
  tail call void @do_pending_stack_adjust() #5
  %call94 = tail call %struct.rtx_def* @emit_note(i8* null, i32 -91) #5
  %74 = load i32* @flag_test_coverage, align 4, !tbaa !17
  %tobool95 = icmp eq i32 %74, 0
  br i1 %tobool95, label %if.end98, label %if.then96

if.then96:                                        ; preds = %while.end
  %call97 = tail call %struct.rtx_def* @emit_note(i8* null, i32 -84) #5
  br label %if.end98

if.end98:                                         ; preds = %while.end, %if.then96
  %call99 = tail call %struct.rtx_def* @emit_line_note_force(i8* %filename, i32 %line) #5
  %call100 = tail call %struct.rtx_def* @get_last_insn() #5
  %75 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_return_label = getelementptr inbounds %struct.function* %75, i64 0, i32 24
  %76 = load %struct.rtx_def** %x_return_label, align 8, !tbaa !130
  %tobool101 = icmp eq %struct.rtx_def* %76, null
  br i1 %tobool101, label %if.end105, label %if.then102

if.then102:                                       ; preds = %if.end98
  %call104 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %76) #5
  br label %if.end105

if.end105:                                        ; preds = %if.end98, %if.then102
  %tobool106 = icmp eq i32 %end_bindings, 0
  br i1 %tobool106, label %if.end108, label %if.then107

if.then107:                                       ; preds = %if.end105
  tail call void @expand_end_bindings(%union.tree_node* null, i32 0, i32 0) #5
  br label %if.end108

if.end108:                                        ; preds = %if.end105, %if.then107
  %77 = load %struct.function** @cfun, align 8, !tbaa !9
  %instrument_entry_exit = getelementptr inbounds %struct.function* %77, i64 0, i32 56
  %78 = bitcast i24* %instrument_entry_exit to i32*
  %bf.load109 = load i32* %78, align 8
  %bf.clear111 = and i32 %bf.load109, 8192
  %tobool112 = icmp eq i32 %bf.clear111, 0
  br i1 %tobool112, label %if.end141, label %if.then113

if.then113:                                       ; preds = %if.end108
  %79 = load %union.tree_node** @current_function_decl, align 8, !tbaa !9
  %rtl115 = getelementptr inbounds %union.tree_node* %79, i64 0, i32 0, i32 17
  %80 = load %struct.rtx_def** %rtl115, align 8, !tbaa !63
  %tobool116 = icmp eq %struct.rtx_def* %80, null
  br i1 %tobool116, label %cond.false120, label %cond.end123

cond.false120:                                    ; preds = %if.then113
  tail call void @make_decl_rtl(%union.tree_node* %79, i8* null) #5
  %81 = load %union.tree_node** @current_function_decl, align 8, !tbaa !9
  %rtl122 = getelementptr inbounds %union.tree_node* %81, i64 0, i32 0, i32 17
  %82 = load %struct.rtx_def** %rtl122, align 8, !tbaa !63
  br label %cond.end123

cond.end123:                                      ; preds = %if.then113, %cond.false120
  %cond124 = phi %struct.rtx_def* [ %82, %cond.false120 ], [ %80, %if.then113 ]
  %83 = getelementptr inbounds %struct.rtx_def* %cond124, i64 0, i32 0
  %bf.load125 = load i32* %83, align 8
  %bf.clear126 = and i32 %bf.load125, 65535
  %cmp127 = icmp eq i32 %bf.clear126, 66
  br i1 %cmp127, label %if.then129, label %if.else

if.then129:                                       ; preds = %cond.end123
  %arrayidx131 = getelementptr inbounds %struct.rtx_def* %cond124, i64 0, i32 1, i64 0
  %rtx132 = bitcast %union.rtunion_def* %arrayidx131 to %struct.rtx_def**
  %84 = load %struct.rtx_def** %rtx132, align 8, !tbaa !9
  %85 = load %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 96), align 8, !tbaa !9
  %86 = load i32* @target_flags, align 4, !tbaa !17
  %and134 = lshr i32 %86, 25
  %87 = and i32 %and134, 1
  %88 = or i32 %87, 4
  %89 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 4), align 8, !tbaa !9
  %call137 = tail call %struct.rtx_def* @expand_builtin_return_addr(i32 53, i32 0, %struct.rtx_def* %89) #5
  %90 = load i32* @target_flags, align 4, !tbaa !17
  %and138 = lshr i32 %90, 25
  %91 = and i32 %and138, 1
  %92 = or i32 %91, 4
  tail call void (%struct.rtx_def*, i32, i32, i32, ...)* @emit_library_call(%struct.rtx_def* %85, i32 0, i32 0, i32 2, %struct.rtx_def* %84, i32 %88, %struct.rtx_def* %call137, i32 %92) #5
  br label %if.end141

if.else:                                          ; preds = %cond.end123
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8]* @.str, i64 0, i64 0), i32 6977, i8* getelementptr inbounds ([20 x i8]* @__FUNCTION__.expand_function_end, i64 0, i64 0)) #8
  unreachable

if.end141:                                        ; preds = %if.end108, %if.then129
  %93 = load %union.tree_node** @current_function_decl, align 8, !tbaa !9
  %result = getelementptr inbounds %union.tree_node* %93, i64 0, i32 0, i32 11
  %94 = load %union.tree_node** %result, align 8, !tbaa !85
  %rtl149 = getelementptr inbounds %union.tree_node* %94, i64 0, i32 0, i32 17
  %95 = load %struct.rtx_def** %rtl149, align 8, !tbaa !63
  %cmp150 = icmp eq %struct.rtx_def* %95, null
  br i1 %cmp150, label %if.end230, label %cond.end164

cond.end164:                                      ; preds = %if.end141
  %96 = getelementptr inbounds %struct.rtx_def* %95, i64 0, i32 0
  %bf.load166 = load i32* %96, align 8
  %bf.clear167 = and i32 %bf.load166, 65535
  %cmp168 = icmp eq i32 %bf.clear167, 61
  br i1 %cmp168, label %cond.true170, label %cond.false175

cond.true170:                                     ; preds = %cond.end164
  %arrayidx172 = getelementptr inbounds %struct.rtx_def* %95, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx172 to i32*
  %97 = load i32* %rtuint, align 4, !tbaa !17
  %cmp173 = icmp ugt i32 %97, 52
  br i1 %cmp173, label %if.then182, label %if.end230

cond.false175:                                    ; preds = %cond.end164
  %regdecl_flag = getelementptr inbounds %union.tree_node* %94, i64 0, i32 0, i32 5
  %98 = bitcast i48* %regdecl_flag to i64*
  %bf.load177 = load i64* %98, align 8
  %bf.cast180 = and i64 %bf.load177, 1024
  %tobool181 = icmp eq i64 %bf.cast180, 0
  br i1 %tobool181, label %if.end230, label %if.then182

if.then182:                                       ; preds = %cond.false175, %cond.true170
  %99 = load %struct.function** @cfun, align 8, !tbaa !9
  %return_rtx = getelementptr inbounds %struct.function* %99, i64 0, i32 14
  %100 = load %struct.rtx_def** %return_rtx, align 8, !tbaa !97
  %101 = getelementptr inbounds %struct.rtx_def* %100, i64 0, i32 0
  %bf.load183 = load i32* %101, align 8
  %bf.clear185 = and i32 %bf.load183, 1073741824
  %tobool186 = icmp eq i32 %bf.clear185, 0
  br i1 %tobool186, label %if.then187, label %if.end188

if.then187:                                       ; preds = %if.then182
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8]* @.str, i64 0, i64 0), i32 7021, i8* getelementptr inbounds ([20 x i8]* @__FUNCTION__.expand_function_end, i64 0, i64 0)) #8
  unreachable

if.end188:                                        ; preds = %if.then182
  %bf.clear191 = and i32 %bf.load183, 16711680
  %cmp192 = icmp eq i32 %bf.clear191, 3342336
  br i1 %cmp192, label %if.then194, label %if.end200

if.then194:                                       ; preds = %if.end188
  %bf.clear197 = and i32 %bf.load166, 16711680
  %bf.clear199 = and i32 %bf.load183, -16711681
  %bf.set = or i32 %bf.clear197, %bf.clear199
  store i32 %bf.set, i32* %101, align 8
  %bf.load204.pre = load i32* %96, align 8
  br label %if.end200

if.end200:                                        ; preds = %if.then194, %if.end188
  %bf.load204 = phi i32 [ %bf.load204.pre, %if.then194 ], [ %bf.load166, %if.end188 ]
  %bf.load201 = phi i32 [ %bf.set, %if.then194 ], [ %bf.load183, %if.end188 ]
  %bf.lshr202322 = xor i32 %bf.load204, %bf.load201
  %102 = and i32 %bf.lshr202322, 16711680
  %cmp207 = icmp eq i32 %102, 0
  br i1 %cmp207, label %if.else215, label %if.then209

if.then209:                                       ; preds = %if.end200
  %type = getelementptr inbounds %union.tree_node* %94, i64 0, i32 0, i32 0, i32 1
  %103 = load %union.tree_node** %type, align 8, !tbaa !56
  %unsigned_flag = getelementptr inbounds %union.tree_node* %103, i64 0, i32 0, i32 0, i32 2
  %bf.load212 = load i32* %unsigned_flag, align 8
  %bf.lshr213 = lshr i32 %bf.load212, 13
  %bf.clear214 = and i32 %bf.lshr213, 1
  tail call void @convert_move(%struct.rtx_def* %100, %struct.rtx_def* %95, i32 %bf.clear214) #5
  br label %if.end230

if.else215:                                       ; preds = %if.end200
  %bf.clear217 = and i32 %bf.load201, 65535
  %cmp218 = icmp eq i32 %bf.clear217, 39
  br i1 %cmp218, label %if.then220, label %if.else225

if.then220:                                       ; preds = %if.else215
  %type222 = getelementptr inbounds %union.tree_node* %94, i64 0, i32 0, i32 0, i32 1
  %104 = load %union.tree_node** %type222, align 8, !tbaa !56
  %call223 = tail call i64 @int_size_in_bytes(%union.tree_node* %104) #5
  %conv224 = trunc i64 %call223 to i32
  tail call void @emit_group_load(%struct.rtx_def* %100, %struct.rtx_def* %95, i32 %conv224) #5
  br label %if.end230

if.else225:                                       ; preds = %if.else215
  %call226 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %100, %struct.rtx_def* %95) #5
  br label %if.end230

if.end230:                                        ; preds = %if.end141, %cond.false175, %cond.true170, %if.then220, %if.else225, %if.then209
  %105 = load %struct.function** @cfun, align 8, !tbaa !9
  %returns_struct = getelementptr inbounds %struct.function* %105, i64 0, i32 56
  %106 = bitcast i24* %returns_struct to i32*
  %bf.load231 = load i32* %106, align 8
  %107 = and i32 %bf.load231, 3
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %if.end274, label %if.then239

if.then239:                                       ; preds = %if.end230
  %109 = load %union.tree_node** @current_function_decl, align 8, !tbaa !9
  %result241 = getelementptr inbounds %union.tree_node* %109, i64 0, i32 0, i32 11
  %110 = load %union.tree_node** %result241, align 8, !tbaa !85
  %rtl243 = getelementptr inbounds %union.tree_node* %110, i64 0, i32 0, i32 17
  %111 = load %struct.rtx_def** %rtl243, align 8, !tbaa !63
  %tobool244 = icmp eq %struct.rtx_def* %111, null
  br i1 %tobool244, label %cond.false250, label %cond.end257

cond.false250:                                    ; preds = %if.then239
  tail call void @make_decl_rtl(%union.tree_node* %110, i8* null) #5
  %112 = load %union.tree_node** @current_function_decl, align 8, !tbaa !9
  %result254 = getelementptr inbounds %union.tree_node* %112, i64 0, i32 0, i32 11
  %113 = load %union.tree_node** %result254, align 8, !tbaa !85
  %rtl256 = getelementptr inbounds %union.tree_node* %113, i64 0, i32 0, i32 17
  %114 = load %struct.rtx_def** %rtl256, align 8, !tbaa !63
  br label %cond.end257

cond.end257:                                      ; preds = %if.then239, %cond.false250
  %115 = phi %union.tree_node* [ %113, %cond.false250 ], [ %110, %if.then239 ]
  %cond258 = phi %struct.rtx_def* [ %114, %cond.false250 ], [ %111, %if.then239 ]
  %arrayidx260 = getelementptr inbounds %struct.rtx_def* %cond258, i64 0, i32 1, i64 0
  %rtx261 = bitcast %union.rtunion_def* %arrayidx260 to %struct.rtx_def**
  %116 = load %struct.rtx_def** %rtx261, align 8, !tbaa !9
  %type266 = getelementptr inbounds %union.tree_node* %115, i64 0, i32 0, i32 0, i32 1
  %117 = load %union.tree_node** %type266, align 8, !tbaa !56
  %call267 = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %117) #5
  %call268 = tail call %struct.rtx_def* @ix86_function_value(%union.tree_node* %call267) #5
  %118 = getelementptr inbounds %struct.rtx_def* %call268, i64 0, i32 0
  %bf.load269 = load i32* %118, align 8
  %bf.set271 = or i32 %bf.load269, 1073741824
  store i32 %bf.set271, i32* %118, align 8
  %call272 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call268, %struct.rtx_def* %116) #5
  %119 = load %struct.function** @cfun, align 8, !tbaa !9
  %return_rtx273 = getelementptr inbounds %struct.function* %119, i64 0, i32 14
  store %struct.rtx_def* %call268, %struct.rtx_def** %return_rtx273, align 8, !tbaa !97
  br label %if.end274

if.end274:                                        ; preds = %if.end230, %cond.end257
  tail call void @expand_eh_return() #5
  tail call void @start_sequence() #5
  tail call void @clobber_return_register()
  %call276 = tail call %struct.rtx_def* @gen_sequence() #5
  tail call void @end_sequence() #5
  %call277 = tail call %struct.rtx_def* @emit_insn_after(%struct.rtx_def* %call276, %struct.rtx_def* %call100) #5
  %cmp278 = icmp eq %struct.rtx_def* %call100, %call277
  br i1 %cmp278, label %if.end281, label %if.then280

if.then280:                                       ; preds = %if.end274
  %120 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_clobber_return_insn = getelementptr inbounds %struct.function* %120, i64 0, i32 31
  store %struct.rtx_def* %call277, %struct.rtx_def** %x_clobber_return_insn, align 8, !tbaa !135
  br label %if.end281

if.end281:                                        ; preds = %if.end274, %if.then280
  tail call void @use_return_register()
  %call282 = tail call %struct.rtx_def* @get_insns() #5
  tail call void @expand_fixups(%struct.rtx_def* %call282) #5
  ret void
}

declare void @finish_expr_for_function() #2

declare void @x86_initialize_trampoline(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #2

declare %struct.rtx_def* @emit_insns_before(%struct.rtx_def*, %struct.rtx_def*) #2

declare void @probe_stack_range(i64, %struct.rtx_def*) #2

declare void @clear_pending_stack_adjust() #2

declare void @do_pending_stack_adjust() #2

declare %struct.rtx_def* @emit_line_note_force(i8*, i32) #2

declare %struct.rtx_def* @emit_label(%struct.rtx_def*) #2

declare void @expand_end_bindings(%union.tree_node*, i32, i32) #2

declare void @convert_move(%struct.rtx_def*, %struct.rtx_def*, i32) #2

declare void @emit_group_load(%struct.rtx_def*, %struct.rtx_def*, i32) #2

declare void @expand_eh_return() #2

declare %struct.rtx_def* @emit_insn_after(%struct.rtx_def*, %struct.rtx_def*) #2

declare void @expand_fixups(%struct.rtx_def*) #2

declare void @push_topmost_sequence() #2

declare void @pop_topmost_sequence() #2

; Function Attrs: nounwind readonly uwtable
define i32 @prologue_epilogue_contains(%struct.rtx_def* nocapture readonly %insn) #4 {
entry:
  %0 = load %struct.varray_head_tag** @prologue, align 8, !tbaa !9
  %1 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 0
  %bf.load.i = load i32* %1, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  %cmp.i = icmp eq i32 %bf.clear.i, 32
  br i1 %cmp.i, label %land.lhs.true.i, label %if.else.i

land.lhs.true.i:                                  ; preds = %entry
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 3
  %rtx.i = bitcast %union.rtunion_def* %arrayidx.i to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !9
  %3 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 0
  %bf.load1.i = load i32* %3, align 8
  %bf.clear2.i = and i32 %bf.load1.i, 65535
  %cmp3.i = icmp eq i32 %bf.clear2.i, 24
  br i1 %cmp3.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %land.lhs.true.i
  %arrayidx8.i = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 0
  %rtvec.i = bitcast %union.rtunion_def* %arrayidx8.i to %struct.rtvec_def**
  %4 = load %struct.rtvec_def** %rtvec.i, align 8, !tbaa !9
  %num_elem.i = getelementptr inbounds %struct.rtvec_def* %4, i64 0, i32 0
  %5 = load i32* %num_elem.i, align 4, !tbaa !75
  %cmp974.i = icmp sgt i32 %5, 0
  br i1 %cmp974.i, label %for.body.lr.ph.i, label %if.end.thread

if.end.thread:                                    ; preds = %if.then.i
  %6 = load %struct.varray_head_tag** @epilogue, align 8, !tbaa !9
  br label %land.lhs.true.i14

for.body.lr.ph.i:                                 ; preds = %if.then.i
  %num_elements.i = getelementptr inbounds %struct.varray_head_tag* %0, i64 0, i32 0
  %7 = load i64* %num_elements.i, align 8, !tbaa !112
  %sub10.i = add i64 %7, 4294967295
  %conv.i = trunc i64 %sub10.i to i32
  %cmp1270.i = icmp sgt i32 %conv.i, -1
  %data.i = getelementptr inbounds %struct.varray_head_tag* %0, i64 0, i32 4
  %i25.i = bitcast %union.varray_data_tag* %data.i to [1 x i32]*
  %sext86.i = shl i64 %sub10.i, 32
  %8 = ashr exact i64 %sext86.i, 32
  %9 = sext i32 %5 to i64
  br label %for.body.i

for.cond.loopexit.i:                              ; preds = %for.body14.i, %for.body.i
  %count.1.lcssa.i = phi i32 [ %count.075.i, %for.body.i ], [ %inc.count.1.i, %for.body14.i ]
  %10 = trunc i64 %indvars.iv.next83.i to i32
  %cmp9.i = icmp sgt i32 %10, 0
  br i1 %cmp9.i, label %for.body.i, label %contains.exit

for.body.i:                                       ; preds = %for.cond.loopexit.i, %for.body.lr.ph.i
  %indvars.iv82.i = phi i64 [ %9, %for.body.lr.ph.i ], [ %indvars.iv.next83.i, %for.cond.loopexit.i ]
  %count.075.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %count.1.lcssa.i, %for.cond.loopexit.i ]
  %indvars.iv.next83.i = add nsw i64 %indvars.iv82.i, -1
  br i1 %cmp1270.i, label %for.body14.lr.ph.i, label %for.cond.loopexit.i

for.body14.lr.ph.i:                               ; preds = %for.body.i
  %arrayidx21.i = getelementptr inbounds %struct.rtvec_def* %4, i64 0, i32 1, i64 %indvars.iv.next83.i
  %11 = load %struct.rtx_def** %arrayidx21.i, align 8, !tbaa !9
  %arrayidx23.i = getelementptr inbounds %struct.rtx_def* %11, i64 0, i32 1, i64 0
  %rtint.i = bitcast %union.rtunion_def* %arrayidx23.i to i32*
  %12 = load i32* %rtint.i, align 4, !tbaa !17
  br label %for.body14.i

for.body14.i:                                     ; preds = %for.body14.i, %for.body14.lr.ph.i
  %indvars.iv.i = phi i64 [ %8, %for.body14.lr.ph.i ], [ %indvars.iv.next.i, %for.body14.i ]
  %count.172.i = phi i32 [ %count.075.i, %for.body14.lr.ph.i ], [ %inc.count.1.i, %for.body14.i ]
  %arrayidx26.i = getelementptr inbounds [1 x i32]* %i25.i, i64 0, i64 %indvars.iv.i
  %13 = load i32* %arrayidx26.i, align 4, !tbaa !17
  %cmp27.i = icmp eq i32 %12, %13
  %inc.i = zext i1 %cmp27.i to i32
  %inc.count.1.i = add nsw i32 %inc.i, %count.172.i
  %indvars.iv.next.i = add nsw i64 %indvars.iv.i, -1
  %14 = trunc i64 %indvars.iv.i to i32
  %cmp12.i = icmp sgt i32 %14, 0
  br i1 %cmp12.i, label %for.body14.i, label %for.cond.loopexit.i

if.else.i:                                        ; preds = %land.lhs.true.i, %entry
  %num_elements33.i = getelementptr inbounds %struct.varray_head_tag* %0, i64 0, i32 0
  %15 = load i64* %num_elements33.i, align 8, !tbaa !112
  %sub34.i = add i64 %15, 4294967295
  %conv35.i = trunc i64 %sub34.i to i32
  %cmp3778.i = icmp sgt i32 %conv35.i, -1
  br i1 %cmp3778.i, label %for.body39.lr.ph.i, label %if.end

for.body39.lr.ph.i:                               ; preds = %if.else.i
  %arrayidx41.i = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 0
  %rtint42.i = bitcast %union.rtunion_def* %arrayidx41.i to i32*
  %16 = load i32* %rtint42.i, align 4, !tbaa !17
  %data44.i = getelementptr inbounds %struct.varray_head_tag* %0, i64 0, i32 4
  %i45.i = bitcast %union.varray_data_tag* %data44.i to [1 x i32]*
  %sext.i = shl i64 %sub34.i, 32
  %17 = ashr exact i64 %sext.i, 32
  br label %for.body39.i

for.cond36.i:                                     ; preds = %for.body39.i
  %indvars.iv.next85.i = add nsw i64 %indvars.iv84.i, -1
  %18 = trunc i64 %indvars.iv84.i to i32
  %cmp37.i = icmp sgt i32 %18, 0
  br i1 %cmp37.i, label %for.body39.i, label %if.end

for.body39.i:                                     ; preds = %for.cond36.i, %for.body39.lr.ph.i
  %indvars.iv84.i = phi i64 [ %17, %for.body39.lr.ph.i ], [ %indvars.iv.next85.i, %for.cond36.i ]
  %arrayidx46.i = getelementptr inbounds [1 x i32]* %i45.i, i64 0, i64 %indvars.iv84.i
  %19 = load i32* %arrayidx46.i, align 4, !tbaa !17
  %cmp47.i = icmp eq i32 %16, %19
  br i1 %cmp47.i, label %return, label %for.cond36.i

contains.exit:                                    ; preds = %for.cond.loopexit.i
  %tobool = icmp eq i32 %count.1.lcssa.i, 0
  br i1 %tobool, label %if.end, label %return

if.end:                                           ; preds = %for.cond36.i, %if.else.i, %contains.exit
  %20 = load %struct.varray_head_tag** @epilogue, align 8, !tbaa !9
  br i1 %cmp.i, label %land.lhs.true.i14, label %if.else.i52

land.lhs.true.i14:                                ; preds = %if.end.thread, %if.end
  %21 = phi %struct.varray_head_tag* [ %6, %if.end.thread ], [ %20, %if.end ]
  %arrayidx.i9 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 3
  %rtx.i10 = bitcast %union.rtunion_def* %arrayidx.i9 to %struct.rtx_def**
  %22 = load %struct.rtx_def** %rtx.i10, align 8, !tbaa !9
  %23 = getelementptr inbounds %struct.rtx_def* %22, i64 0, i32 0
  %bf.load1.i11 = load i32* %23, align 8
  %bf.clear2.i12 = and i32 %bf.load1.i11, 65535
  %cmp3.i13 = icmp eq i32 %bf.clear2.i12, 24
  br i1 %cmp3.i13, label %if.then.i19, label %if.else.i52

if.then.i19:                                      ; preds = %land.lhs.true.i14
  %arrayidx8.i15 = getelementptr inbounds %struct.rtx_def* %22, i64 0, i32 1, i64 0
  %rtvec.i16 = bitcast %union.rtunion_def* %arrayidx8.i15 to %struct.rtvec_def**
  %24 = load %struct.rtvec_def** %rtvec.i16, align 8, !tbaa !9
  %num_elem.i17 = getelementptr inbounds %struct.rtvec_def* %24, i64 0, i32 0
  %25 = load i32* %num_elem.i17, align 4, !tbaa !75
  %cmp974.i18 = icmp sgt i32 %25, 0
  br i1 %cmp974.i18, label %for.body.lr.ph.i27, label %contains.exit67

for.body.lr.ph.i27:                               ; preds = %if.then.i19
  %num_elements.i20 = getelementptr inbounds %struct.varray_head_tag* %21, i64 0, i32 0
  %26 = load i64* %num_elements.i20, align 8, !tbaa !112
  %sub10.i21 = add i64 %26, 4294967295
  %conv.i22 = trunc i64 %sub10.i21 to i32
  %cmp1270.i23 = icmp sgt i32 %conv.i22, -1
  %data.i24 = getelementptr inbounds %struct.varray_head_tag* %21, i64 0, i32 4
  %i25.i25 = bitcast %union.varray_data_tag* %data.i24 to [1 x i32]*
  %sext86.i26 = shl i64 %sub10.i21, 32
  %27 = ashr exact i64 %sext86.i26, 32
  %28 = sext i32 %25 to i64
  br label %for.body.i34

for.cond.loopexit.i30:                            ; preds = %for.body14.i47, %for.body.i34
  %count.1.lcssa.i28 = phi i32 [ %count.075.i32, %for.body.i34 ], [ %inc.count.1.i44, %for.body14.i47 ]
  %29 = trunc i64 %indvars.iv.next83.i33 to i32
  %cmp9.i29 = icmp sgt i32 %29, 0
  br i1 %cmp9.i29, label %for.body.i34, label %contains.exit67

for.body.i34:                                     ; preds = %for.cond.loopexit.i30, %for.body.lr.ph.i27
  %indvars.iv82.i31 = phi i64 [ %28, %for.body.lr.ph.i27 ], [ %indvars.iv.next83.i33, %for.cond.loopexit.i30 ]
  %count.075.i32 = phi i32 [ 0, %for.body.lr.ph.i27 ], [ %count.1.lcssa.i28, %for.cond.loopexit.i30 ]
  %indvars.iv.next83.i33 = add nsw i64 %indvars.iv82.i31, -1
  br i1 %cmp1270.i23, label %for.body14.lr.ph.i38, label %for.cond.loopexit.i30

for.body14.lr.ph.i38:                             ; preds = %for.body.i34
  %arrayidx21.i35 = getelementptr inbounds %struct.rtvec_def* %24, i64 0, i32 1, i64 %indvars.iv.next83.i33
  %30 = load %struct.rtx_def** %arrayidx21.i35, align 8, !tbaa !9
  %arrayidx23.i36 = getelementptr inbounds %struct.rtx_def* %30, i64 0, i32 1, i64 0
  %rtint.i37 = bitcast %union.rtunion_def* %arrayidx23.i36 to i32*
  %31 = load i32* %rtint.i37, align 4, !tbaa !17
  br label %for.body14.i47

for.body14.i47:                                   ; preds = %for.body14.i47, %for.body14.lr.ph.i38
  %indvars.iv.i39 = phi i64 [ %27, %for.body14.lr.ph.i38 ], [ %indvars.iv.next.i45, %for.body14.i47 ]
  %count.172.i40 = phi i32 [ %count.075.i32, %for.body14.lr.ph.i38 ], [ %inc.count.1.i44, %for.body14.i47 ]
  %arrayidx26.i41 = getelementptr inbounds [1 x i32]* %i25.i25, i64 0, i64 %indvars.iv.i39
  %32 = load i32* %arrayidx26.i41, align 4, !tbaa !17
  %cmp27.i42 = icmp eq i32 %31, %32
  %inc.i43 = zext i1 %cmp27.i42 to i32
  %inc.count.1.i44 = add nsw i32 %inc.i43, %count.172.i40
  %indvars.iv.next.i45 = add nsw i64 %indvars.iv.i39, -1
  %33 = trunc i64 %indvars.iv.i39 to i32
  %cmp12.i46 = icmp sgt i32 %33, 0
  br i1 %cmp12.i46, label %for.body14.i47, label %for.cond.loopexit.i30

if.else.i52:                                      ; preds = %land.lhs.true.i14, %if.end
  %34 = phi %struct.varray_head_tag* [ %21, %land.lhs.true.i14 ], [ %20, %if.end ]
  %num_elements33.i48 = getelementptr inbounds %struct.varray_head_tag* %34, i64 0, i32 0
  %35 = load i64* %num_elements33.i48, align 8, !tbaa !112
  %sub34.i49 = add i64 %35, 4294967295
  %conv35.i50 = trunc i64 %sub34.i49 to i32
  %cmp3778.i51 = icmp sgt i32 %conv35.i50, -1
  br i1 %cmp3778.i51, label %for.body39.lr.ph.i58, label %contains.exit67

for.body39.lr.ph.i58:                             ; preds = %if.else.i52
  %arrayidx41.i53 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 0
  %rtint42.i54 = bitcast %union.rtunion_def* %arrayidx41.i53 to i32*
  %36 = load i32* %rtint42.i54, align 4, !tbaa !17
  %data44.i55 = getelementptr inbounds %struct.varray_head_tag* %34, i64 0, i32 4
  %i45.i56 = bitcast %union.varray_data_tag* %data44.i55 to [1 x i32]*
  %sext.i57 = shl i64 %sub34.i49, 32
  %37 = ashr exact i64 %sext.i57, 32
  br label %for.body39.i65

for.cond36.i61:                                   ; preds = %for.body39.i65
  %indvars.iv.next85.i59 = add nsw i64 %indvars.iv84.i62, -1
  %38 = trunc i64 %indvars.iv84.i62 to i32
  %cmp37.i60 = icmp sgt i32 %38, 0
  br i1 %cmp37.i60, label %for.body39.i65, label %contains.exit67

for.body39.i65:                                   ; preds = %for.cond36.i61, %for.body39.lr.ph.i58
  %indvars.iv84.i62 = phi i64 [ %37, %for.body39.lr.ph.i58 ], [ %indvars.iv.next85.i59, %for.cond36.i61 ]
  %arrayidx46.i63 = getelementptr inbounds [1 x i32]* %i45.i56, i64 0, i64 %indvars.iv84.i62
  %39 = load i32* %arrayidx46.i63, align 4, !tbaa !17
  %cmp47.i64 = icmp eq i32 %36, %39
  br i1 %cmp47.i64, label %contains.exit67, label %for.cond36.i61

contains.exit67:                                  ; preds = %for.cond36.i61, %for.body39.i65, %for.cond.loopexit.i30, %if.then.i19, %if.else.i52
  %retval.0.i66 = phi i32 [ 0, %if.then.i19 ], [ 0, %if.else.i52 ], [ %count.1.lcssa.i28, %for.cond.loopexit.i30 ], [ 0, %for.cond36.i61 ], [ 1, %for.body39.i65 ]
  %not.tobool2 = icmp ne i32 %retval.0.i66, 0
  %. = zext i1 %not.tobool2 to i32
  br label %return

return:                                           ; preds = %for.body39.i, %contains.exit67, %contains.exit
  %retval.0 = phi i32 [ 1, %contains.exit ], [ %., %contains.exit67 ], [ 1, %for.body39.i ]
  ret i32 %retval.0
}

; Function Attrs: nounwind readonly uwtable
define i32 @sibcall_epilogue_contains(%struct.rtx_def* nocapture readonly %insn) #4 {
entry:
  %0 = load %struct.varray_head_tag** @sibcall_epilogue, align 8, !tbaa !9
  %tobool = icmp eq %struct.varray_head_tag* %0, null
  br i1 %tobool, label %return, label %if.then

if.then:                                          ; preds = %entry
  %1 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 0
  %bf.load.i = load i32* %1, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  %cmp.i = icmp eq i32 %bf.clear.i, 32
  br i1 %cmp.i, label %land.lhs.true.i, label %if.else.i

land.lhs.true.i:                                  ; preds = %if.then
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 3
  %rtx.i = bitcast %union.rtunion_def* %arrayidx.i to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !9
  %3 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 0
  %bf.load1.i = load i32* %3, align 8
  %bf.clear2.i = and i32 %bf.load1.i, 65535
  %cmp3.i = icmp eq i32 %bf.clear2.i, 24
  br i1 %cmp3.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %land.lhs.true.i
  %arrayidx8.i = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 0
  %rtvec.i = bitcast %union.rtunion_def* %arrayidx8.i to %struct.rtvec_def**
  %4 = load %struct.rtvec_def** %rtvec.i, align 8, !tbaa !9
  %num_elem.i = getelementptr inbounds %struct.rtvec_def* %4, i64 0, i32 0
  %5 = load i32* %num_elem.i, align 4, !tbaa !75
  %cmp974.i = icmp sgt i32 %5, 0
  br i1 %cmp974.i, label %for.body.lr.ph.i, label %return

for.body.lr.ph.i:                                 ; preds = %if.then.i
  %num_elements.i = getelementptr inbounds %struct.varray_head_tag* %0, i64 0, i32 0
  %6 = load i64* %num_elements.i, align 8, !tbaa !112
  %sub10.i = add i64 %6, 4294967295
  %conv.i = trunc i64 %sub10.i to i32
  %cmp1270.i = icmp sgt i32 %conv.i, -1
  %data.i = getelementptr inbounds %struct.varray_head_tag* %0, i64 0, i32 4
  %i25.i = bitcast %union.varray_data_tag* %data.i to [1 x i32]*
  %sext86.i = shl i64 %sub10.i, 32
  %7 = ashr exact i64 %sext86.i, 32
  %8 = sext i32 %5 to i64
  br label %for.body.i

for.cond.loopexit.i:                              ; preds = %for.body14.i, %for.body.i
  %count.1.lcssa.i = phi i32 [ %count.075.i, %for.body.i ], [ %inc.count.1.i, %for.body14.i ]
  %9 = trunc i64 %indvars.iv.next83.i to i32
  %cmp9.i = icmp sgt i32 %9, 0
  br i1 %cmp9.i, label %for.body.i, label %return

for.body.i:                                       ; preds = %for.cond.loopexit.i, %for.body.lr.ph.i
  %indvars.iv82.i = phi i64 [ %8, %for.body.lr.ph.i ], [ %indvars.iv.next83.i, %for.cond.loopexit.i ]
  %count.075.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %count.1.lcssa.i, %for.cond.loopexit.i ]
  %indvars.iv.next83.i = add nsw i64 %indvars.iv82.i, -1
  br i1 %cmp1270.i, label %for.body14.lr.ph.i, label %for.cond.loopexit.i

for.body14.lr.ph.i:                               ; preds = %for.body.i
  %arrayidx21.i = getelementptr inbounds %struct.rtvec_def* %4, i64 0, i32 1, i64 %indvars.iv.next83.i
  %10 = load %struct.rtx_def** %arrayidx21.i, align 8, !tbaa !9
  %arrayidx23.i = getelementptr inbounds %struct.rtx_def* %10, i64 0, i32 1, i64 0
  %rtint.i = bitcast %union.rtunion_def* %arrayidx23.i to i32*
  %11 = load i32* %rtint.i, align 4, !tbaa !17
  br label %for.body14.i

for.body14.i:                                     ; preds = %for.body14.i, %for.body14.lr.ph.i
  %indvars.iv.i = phi i64 [ %7, %for.body14.lr.ph.i ], [ %indvars.iv.next.i, %for.body14.i ]
  %count.172.i = phi i32 [ %count.075.i, %for.body14.lr.ph.i ], [ %inc.count.1.i, %for.body14.i ]
  %arrayidx26.i = getelementptr inbounds [1 x i32]* %i25.i, i64 0, i64 %indvars.iv.i
  %12 = load i32* %arrayidx26.i, align 4, !tbaa !17
  %cmp27.i = icmp eq i32 %11, %12
  %inc.i = zext i1 %cmp27.i to i32
  %inc.count.1.i = add nsw i32 %inc.i, %count.172.i
  %indvars.iv.next.i = add nsw i64 %indvars.iv.i, -1
  %13 = trunc i64 %indvars.iv.i to i32
  %cmp12.i = icmp sgt i32 %13, 0
  br i1 %cmp12.i, label %for.body14.i, label %for.cond.loopexit.i

if.else.i:                                        ; preds = %land.lhs.true.i, %if.then
  %num_elements33.i = getelementptr inbounds %struct.varray_head_tag* %0, i64 0, i32 0
  %14 = load i64* %num_elements33.i, align 8, !tbaa !112
  %sub34.i = add i64 %14, 4294967295
  %conv35.i = trunc i64 %sub34.i to i32
  %cmp3778.i = icmp sgt i32 %conv35.i, -1
  br i1 %cmp3778.i, label %for.body39.lr.ph.i, label %return

for.body39.lr.ph.i:                               ; preds = %if.else.i
  %arrayidx41.i = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 0
  %rtint42.i = bitcast %union.rtunion_def* %arrayidx41.i to i32*
  %15 = load i32* %rtint42.i, align 4, !tbaa !17
  %data44.i = getelementptr inbounds %struct.varray_head_tag* %0, i64 0, i32 4
  %i45.i = bitcast %union.varray_data_tag* %data44.i to [1 x i32]*
  %sext.i = shl i64 %sub34.i, 32
  %16 = ashr exact i64 %sext.i, 32
  br label %for.body39.i

for.cond36.i:                                     ; preds = %for.body39.i
  %indvars.iv.next85.i = add nsw i64 %indvars.iv84.i, -1
  %17 = trunc i64 %indvars.iv84.i to i32
  %cmp37.i = icmp sgt i32 %17, 0
  br i1 %cmp37.i, label %for.body39.i, label %return

for.body39.i:                                     ; preds = %for.cond36.i, %for.body39.lr.ph.i
  %indvars.iv84.i = phi i64 [ %16, %for.body39.lr.ph.i ], [ %indvars.iv.next85.i, %for.cond36.i ]
  %arrayidx46.i = getelementptr inbounds [1 x i32]* %i45.i, i64 0, i64 %indvars.iv84.i
  %18 = load i32* %arrayidx46.i, align 4, !tbaa !17
  %cmp47.i = icmp eq i32 %15, %18
  br i1 %cmp47.i, label %return, label %for.cond36.i

return:                                           ; preds = %for.body39.i, %for.cond36.i, %for.cond.loopexit.i, %if.else.i, %if.then.i, %entry
  %retval.0 = phi i32 [ 0, %entry ], [ 0, %if.then.i ], [ 0, %if.else.i ], [ %count.1.lcssa.i, %for.cond.loopexit.i ], [ 1, %for.body39.i ], [ 0, %for.cond36.i ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define void @thread_prologue_and_epilogue_insns(%struct.rtx_def* nocapture readnone %f) #0 {
entry:
  %info.i = alloca %struct.epi_info, align 8
  tail call void @start_sequence() #5
  %call = tail call %struct.rtx_def* @gen_prologue() #5
  %call1 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call) #5
  %0 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 24
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %call2 = tail call %struct.rtx_def* @get_insns() #5
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %call2, i64 0, i32 0
  %bf.load.i.pre = load i32* %.phi.trans.insert, align 8
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %bf.load.i = phi i32 [ %bf.load.i.pre, %if.then ], [ %bf.load, %entry ]
  %seq.0 = phi %struct.rtx_def* [ %call2, %if.then ], [ %call, %entry ]
  %bf.clear.i = and i32 %bf.load.i, 65535
  %cmp.i = icmp eq i32 %bf.clear.i, 24
  br i1 %cmp.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %if.end
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %seq.0, i64 0, i32 1, i64 0
  %rtvec.i = bitcast %union.rtunion_def* %arrayidx.i to %struct.rtvec_def**
  %1 = load %struct.rtvec_def** %rtvec.i, align 8, !tbaa !9
  %num_elem.i = getelementptr inbounds %struct.rtvec_def* %1, i64 0, i32 0
  %2 = load i32* %num_elem.i, align 4, !tbaa !75
  %3 = load %struct.varray_head_tag** @prologue, align 8, !tbaa !9
  %num_elements.i = getelementptr inbounds %struct.varray_head_tag* %3, i64 0, i32 0
  %4 = load i64* %num_elements.i, align 8, !tbaa !112
  %conv.i = trunc i64 %4 to i32
  %add.i = add nsw i32 %conv.i, %2
  %conv1.i = sext i32 %add.i to i64
  %call.i = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %3, i64 %conv1.i) #5
  store %struct.varray_head_tag* %call.i, %struct.varray_head_tag** @prologue, align 8, !tbaa !9
  %cmp243.i = icmp sgt i32 %2, 0
  br i1 %cmp243.i, label %while.body.lr.ph.i, label %record_insns.exit

while.body.lr.ph.i:                               ; preds = %if.then.i
  %5 = load %struct.rtvec_def** %rtvec.i, align 8, !tbaa !9
  %data.i = getelementptr inbounds %struct.varray_head_tag* %call.i, i64 0, i32 4
  %i11.i = bitcast %union.varray_data_tag* %data.i to [1 x i32]*
  %6 = sext i32 %2 to i64
  %sext48.i = shl i64 %4, 32
  %7 = ashr exact i64 %sext48.i, 32
  br label %while.body.i

while.body.i:                                     ; preds = %while.body.i, %while.body.lr.ph.i
  %indvars.iv46.i = phi i64 [ %7, %while.body.lr.ph.i ], [ %indvars.iv.next47.i, %while.body.i ]
  %indvars.iv.i = phi i64 [ %6, %while.body.lr.ph.i ], [ %indvars.iv.next.i, %while.body.i ]
  %indvars.iv.next.i = add nsw i64 %indvars.iv.i, -1
  %arrayidx7.i = getelementptr inbounds %struct.rtvec_def* %5, i64 0, i32 1, i64 %indvars.iv.next.i
  %8 = load %struct.rtx_def** %arrayidx7.i, align 8, !tbaa !9
  %arrayidx9.i = getelementptr inbounds %struct.rtx_def* %8, i64 0, i32 1, i64 0
  %rtint.i = bitcast %union.rtunion_def* %arrayidx9.i to i32*
  %9 = load i32* %rtint.i, align 4, !tbaa !17
  %arrayidx12.i = getelementptr inbounds [1 x i32]* %i11.i, i64 0, i64 %indvars.iv46.i
  store i32 %9, i32* %arrayidx12.i, align 4, !tbaa !17
  %indvars.iv.next47.i = add nsw i64 %indvars.iv46.i, 1
  %10 = trunc i64 %indvars.iv.next.i to i32
  %cmp2.i = icmp sgt i32 %10, 0
  br i1 %cmp2.i, label %while.body.i, label %record_insns.exit

if.else.i:                                        ; preds = %if.end
  %11 = load %struct.varray_head_tag** @prologue, align 8, !tbaa !9
  %num_elements14.i = getelementptr inbounds %struct.varray_head_tag* %11, i64 0, i32 0
  %12 = load i64* %num_elements14.i, align 8, !tbaa !112
  %add16.i = shl i64 %12, 32
  %sext.i = add i64 %add16.i, 4294967296
  %conv17.i = ashr exact i64 %sext.i, 32
  %call18.i = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %11, i64 %conv17.i) #5
  store %struct.varray_head_tag* %call18.i, %struct.varray_head_tag** @prologue, align 8, !tbaa !9
  %arrayidx20.i = getelementptr inbounds %struct.rtx_def* %seq.0, i64 0, i32 1, i64 0
  %rtint21.i = bitcast %union.rtunion_def* %arrayidx20.i to i32*
  %13 = load i32* %rtint21.i, align 4, !tbaa !17
  %idxprom22.i = ashr exact i64 %add16.i, 32
  %data23.i = getelementptr inbounds %struct.varray_head_tag* %call18.i, i64 0, i32 4
  %i24.i = bitcast %union.varray_data_tag* %data23.i to [1 x i32]*
  %arrayidx25.i = getelementptr inbounds [1 x i32]* %i24.i, i64 0, i64 %idxprom22.i
  store i32 %13, i32* %arrayidx25.i, align 4, !tbaa !17
  br label %record_insns.exit

record_insns.exit:                                ; preds = %while.body.i, %if.then.i, %if.else.i
  %call3 = tail call %struct.rtx_def* @emit_note(i8* null, i32 -90) #5
  %call4 = tail call %struct.rtx_def* @gen_sequence() #5
  tail call void @end_sequence() #5
  %14 = load %struct.edge_def** getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0, i32 5), align 8, !tbaa !136
  %tobool = icmp eq %struct.edge_def* %14, null
  br i1 %tobool, label %if.then6, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %record_insns.exit
  %succ_next = getelementptr inbounds %struct.edge_def* %14, i64 0, i32 1
  %15 = load %struct.edge_def** %succ_next, align 8, !tbaa !138
  %tobool5 = icmp eq %struct.edge_def* %15, null
  br i1 %tobool5, label %if.end7, label %if.then6

if.then6:                                         ; preds = %lor.lhs.false, %record_insns.exit
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8]* @.str, i64 0, i64 0), i32 7594, i8* getelementptr inbounds ([35 x i8]* @__FUNCTION__.thread_prologue_and_epilogue_insns, i64 0, i64 0)) #8
  unreachable

if.end7:                                          ; preds = %lor.lhs.false
  tail call void @insert_insn_on_edge(%struct.rtx_def* %call4, %struct.edge_def* %14) #5
  %e.0574 = load %struct.edge_def** getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1, i32 4), align 8
  %cond419575 = icmp eq %struct.edge_def* %e.0574, null
  br i1 %cond419575, label %if.then189, label %for.body

for.cond:                                         ; preds = %for.body
  %pred_next = getelementptr inbounds %struct.edge_def* %e.0576, i64 0, i32 0
  %e.0 = load %struct.edge_def** %pred_next, align 8
  %cond419 = icmp eq %struct.edge_def* %e.0, null
  br i1 %cond419, label %if.then189, label %for.body

for.body:                                         ; preds = %if.end7, %for.cond
  %e.0576 = phi %struct.edge_def* [ %e.0, %for.cond ], [ %e.0574, %if.end7 ]
  %flags = getelementptr inbounds %struct.edge_def* %e.0576, i64 0, i32 6
  %16 = load i32* %flags, align 4, !tbaa !140
  %and = and i32 %16, 16
  %cmp9 = icmp eq i32 %and, 0
  br i1 %cmp9, label %if.end14, label %for.cond

if.end14:                                         ; preds = %for.body
  %17 = load i32* @optimize, align 4, !tbaa !17
  %tobool15 = icmp eq i32 %17, 0
  br i1 %tobool15, label %for.cond150.preheader, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end14
  %call16 = tail call i32 @ix86_can_use_return_insn_p() #5
  %tobool17 = icmp eq i32 %call16, 0
  br i1 %tobool17, label %for.cond150.preheader, label %for.cond19.preheader

for.cond19.preheader:                             ; preds = %land.lhs.true
  %e.1571 = load %struct.edge_def** getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1, i32 4), align 8
  %cond420572 = icmp eq %struct.edge_def* %e.1571, null
  br i1 %cond420572, label %if.then189, label %for.body21

for.cond19:                                       ; preds = %for.body21
  %pred_next28 = getelementptr inbounds %struct.edge_def* %e.1573, i64 0, i32 0
  %e.1 = load %struct.edge_def** %pred_next28, align 8
  %cond420 = icmp eq %struct.edge_def* %e.1, null
  br i1 %cond420, label %if.then189, label %for.body21

for.body21:                                       ; preds = %for.cond19.preheader, %for.cond19
  %e.1573 = phi %struct.edge_def* [ %e.1, %for.cond19 ], [ %e.1571, %for.cond19.preheader ]
  %flags22 = getelementptr inbounds %struct.edge_def* %e.1573, i64 0, i32 6
  %18 = load i32* %flags22, align 4, !tbaa !140
  %and23 = and i32 %18, 1
  %tobool24 = icmp eq i32 %and23, 0
  br i1 %tobool24, label %for.cond19, label %if.end32

if.end32:                                         ; preds = %for.body21
  %src = getelementptr inbounds %struct.edge_def* %e.1573, i64 0, i32 2
  %19 = load %struct.basic_block_def** %src, align 8, !tbaa !141
  %end = getelementptr inbounds %struct.basic_block_def* %19, i64 0, i32 1
  %label.0565 = load %struct.rtx_def** %end, align 8
  %tobool33566 = icmp eq %struct.rtx_def* %label.0565, null
  br i1 %tobool33566, label %while.end, label %land.rhs

land.rhs:                                         ; preds = %if.end32, %if.end40
  %label.0567 = phi %struct.rtx_def* [ %label.0, %if.end40 ], [ %label.0565, %if.end32 ]
  %20 = getelementptr inbounds %struct.rtx_def* %label.0567, i64 0, i32 0
  %bf.load34 = load i32* %20, align 8
  %bf.clear35 = and i32 %bf.load34, 65535
  %cmp36 = icmp eq i32 %bf.clear35, 36
  br i1 %cmp36, label %while.end, label %while.body

while.body:                                       ; preds = %land.rhs
  %call37 = tail call i32 @active_insn_p(%struct.rtx_def* %label.0567) #5
  %tobool38 = icmp eq i32 %call37, 0
  br i1 %tobool38, label %if.end40, label %while.end

if.end40:                                         ; preds = %while.body
  %arrayidx = getelementptr inbounds %struct.rtx_def* %label.0567, i64 0, i32 1, i64 1
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %label.0 = load %struct.rtx_def** %rtx, align 8
  %tobool33 = icmp eq %struct.rtx_def* %label.0, null
  br i1 %tobool33, label %while.end, label %land.rhs

while.end:                                        ; preds = %if.end40, %land.rhs, %while.body, %if.end32
  %label.0.lcssa = phi %struct.rtx_def* [ null, %if.end32 ], [ null, %if.end40 ], [ %label.0567, %land.rhs ], [ %label.0567, %while.body ]
  %head = getelementptr inbounds %struct.basic_block_def* %19, i64 0, i32 0
  %21 = load %struct.rtx_def** %head, align 8, !tbaa !142
  %cmp41 = icmp eq %struct.rtx_def* %21, %label.0.lcssa
  br i1 %cmp41, label %land.lhs.true42, label %for.cond150.preheader

land.lhs.true42:                                  ; preds = %while.end
  %22 = getelementptr inbounds %struct.rtx_def* %label.0.lcssa, i64 0, i32 0
  %bf.load43 = load i32* %22, align 8
  %bf.clear44 = and i32 %bf.load43, 65535
  %cmp45 = icmp eq i32 %bf.clear44, 36
  br i1 %cmp45, label %if.then46, label %for.cond150.preheader

for.cond150.preheader:                            ; preds = %land.lhs.true, %if.end14, %while.end, %land.lhs.true42
  %e.3555 = load %struct.edge_def** getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1, i32 4), align 8
  %cond421556 = icmp eq %struct.edge_def* %e.3555, null
  br i1 %cond421556, label %if.then189, label %for.body152

if.then46:                                        ; preds = %land.lhs.true42
  %call47 = tail call %struct.rtx_def* @get_last_insn() #5
  %tobool49560 = icmp eq %struct.rtx_def* %call47, null
  br i1 %tobool49560, label %for.end68, label %land.rhs50

land.rhs50:                                       ; preds = %if.then46, %for.inc64
  %seq.1561 = phi %struct.rtx_def* [ %25, %for.inc64 ], [ %call47, %if.then46 ]
  %call51 = tail call i32 @active_insn_p(%struct.rtx_def* %seq.1561) #5
  %lnot = icmp eq i32 %call51, 0
  br i1 %lnot, label %for.body54, label %for.end68

for.body54:                                       ; preds = %land.rhs50
  %23 = getelementptr inbounds %struct.rtx_def* %seq.1561, i64 0, i32 0
  %bf.load55 = load i32* %23, align 8
  %bf.clear56 = and i32 %bf.load55, 65535
  %cmp57 = icmp eq i32 %bf.clear56, 37
  br i1 %cmp57, label %land.lhs.true58, label %for.inc64

land.lhs.true58:                                  ; preds = %for.body54
  %arrayidx60 = getelementptr inbounds %struct.rtx_def* %seq.1561, i64 0, i32 1, i64 4
  %rtint = bitcast %union.rtunion_def* %arrayidx60 to i32*
  %24 = load i32* %rtint, align 4, !tbaa !17
  %cmp61 = icmp sgt i32 %24, 0
  br i1 %cmp61, label %for.end68, label %for.inc64

for.inc64:                                        ; preds = %for.body54, %land.lhs.true58
  %arrayidx66 = getelementptr inbounds %struct.rtx_def* %seq.1561, i64 0, i32 1, i64 1
  %rtx67 = bitcast %union.rtunion_def* %arrayidx66 to %struct.rtx_def**
  %25 = load %struct.rtx_def** %rtx67, align 8, !tbaa !9
  %tobool49 = icmp eq %struct.rtx_def* %25, null
  br i1 %tobool49, label %for.end68, label %land.rhs50

for.end68:                                        ; preds = %land.rhs50, %for.inc64, %land.lhs.true58, %if.then46
  %epilogue_line_note.0 = phi %struct.rtx_def* [ null, %if.then46 ], [ null, %land.rhs50 ], [ null, %for.inc64 ], [ %seq.1561, %land.lhs.true58 ]
  %pred = getelementptr inbounds %struct.basic_block_def* %19, i64 0, i32 4
  %26 = load %struct.edge_def** %pred, align 8, !tbaa !143
  %tobool70558 = icmp eq %struct.edge_def* %26, null
  br i1 %tobool70558, label %for.end141, label %for.body71.lr.ph

for.body71.lr.ph:                                 ; preds = %for.end68
  %tobool.i = icmp eq %struct.rtx_def* %epilogue_line_note.0, null
  %arrayidx5.i = getelementptr inbounds %struct.rtx_def* %epilogue_line_note.0, i64 0, i32 1, i64 3
  %rtstr.i = bitcast %union.rtunion_def* %arrayidx5.i to i8**
  %arrayidx7.i423 = getelementptr inbounds %struct.rtx_def* %epilogue_line_note.0, i64 0, i32 1, i64 4
  %rtint.i424 = bitcast %union.rtunion_def* %arrayidx7.i423 to i32*
  br label %for.body71

for.body71:                                       ; preds = %for.body71.lr.ph, %for.cond69.backedge
  %e.2559 = phi %struct.edge_def* [ %26, %for.body71.lr.ph ], [ %28, %for.cond69.backedge ]
  %src72 = getelementptr inbounds %struct.edge_def* %e.2559, i64 0, i32 2
  %27 = load %struct.basic_block_def** %src72, align 8, !tbaa !141
  %pred_next73 = getelementptr inbounds %struct.edge_def* %e.2559, i64 0, i32 0
  %28 = load %struct.edge_def** %pred_next73, align 8, !tbaa !144
  %cmp74 = icmp eq %struct.basic_block_def* %27, getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0)
  br i1 %cmp74, label %for.cond69.backedge, label %if.end76

if.end76:                                         ; preds = %for.body71
  %end77 = getelementptr inbounds %struct.basic_block_def* %27, i64 0, i32 1
  %29 = load %struct.rtx_def** %end77, align 8, !tbaa !145
  %30 = getelementptr inbounds %struct.rtx_def* %29, i64 0, i32 0
  %bf.load78 = load i32* %30, align 8
  %bf.clear79 = and i32 %bf.load78, 65535
  %cmp80 = icmp eq i32 %bf.clear79, 33
  br i1 %cmp80, label %lor.lhs.false81, label %for.cond69.backedge

lor.lhs.false81:                                  ; preds = %if.end76
  %arrayidx83 = getelementptr inbounds %struct.rtx_def* %29, i64 0, i32 1, i64 7
  %rtx84 = bitcast %union.rtunion_def* %arrayidx83 to %struct.rtx_def**
  %31 = load %struct.rtx_def** %rtx84, align 8, !tbaa !9
  %cmp85 = icmp eq %struct.rtx_def* %31, %label.0.lcssa
  br i1 %cmp85, label %if.end87, label %for.cond69.backedge

if.end87:                                         ; preds = %lor.lhs.false81
  %call88 = tail call i32 @simplejump_p(%struct.rtx_def* %29) #5
  %tobool89 = icmp eq i32 %call88, 0
  br i1 %tobool89, label %if.else, label %if.then90

if.then90:                                        ; preds = %if.end87
  %call.i422 = tail call %struct.rtx_def* @gen_return() #5
  %32 = load %struct.rtx_def** %end77, align 8, !tbaa !145
  %call3.i = tail call %struct.rtx_def* @emit_jump_insn_after(%struct.rtx_def* %call.i422, %struct.rtx_def* %32) #5
  br i1 %tobool.i, label %emit_return_into_block.exit, label %if.then.i425

if.then.i425:                                     ; preds = %if.then90
  %33 = load i8** %rtstr.i, align 8, !tbaa !9
  %34 = load i32* %rtint.i424, align 4, !tbaa !17
  %35 = load %struct.rtx_def** %end77, align 8, !tbaa !145
  %arrayidx10.i = getelementptr inbounds %struct.rtx_def* %35, i64 0, i32 1, i64 1
  %rtx11.i = bitcast %union.rtunion_def* %arrayidx10.i to %struct.rtx_def**
  %36 = load %struct.rtx_def** %rtx11.i, align 8, !tbaa !9
  %call12.i = tail call %struct.rtx_def* @emit_line_note_after(i8* %33, i32 %34, %struct.rtx_def* %36) #5
  br label %emit_return_into_block.exit

emit_return_into_block.exit:                      ; preds = %if.then90, %if.then.i425
  %call91 = tail call %struct.rtx_def* @delete_insn(%struct.rtx_def* %29) #5
  br label %if.end139

if.else:                                          ; preds = %if.end87
  %call92 = tail call i32 @condjump_p(%struct.rtx_def* %29) #5
  %tobool93 = icmp eq i32 %call92, 0
  br i1 %tobool93, label %for.cond69.backedge, label %if.then94

if.then94:                                        ; preds = %if.else
  %arrayidx96 = getelementptr inbounds %struct.rtx_def* %29, i64 0, i32 1, i64 3
  %rtx97 = bitcast %union.rtunion_def* %arrayidx96 to %struct.rtx_def**
  %37 = load %struct.rtx_def** %rtx97, align 8, !tbaa !9
  %arrayidx99 = getelementptr inbounds %struct.rtx_def* %37, i64 0, i32 1, i64 1
  %rtx100 = bitcast %union.rtunion_def* %arrayidx99 to %struct.rtx_def**
  %38 = load %struct.rtx_def** %rtx100, align 8, !tbaa !9
  %arrayidx102 = getelementptr inbounds %struct.rtx_def* %38, i64 0, i32 1, i64 1
  %rtx103 = bitcast %union.rtunion_def* %arrayidx102 to %struct.rtx_def**
  %39 = load %struct.rtx_def** %rtx103, align 8, !tbaa !9
  %40 = getelementptr inbounds %struct.rtx_def* %39, i64 0, i32 0
  %bf.load104 = load i32* %40, align 8
  %bf.clear105 = and i32 %bf.load104, 65535
  %cmp106 = icmp eq i32 %bf.clear105, 67
  br i1 %cmp106, label %if.end115, label %if.else111

if.else111:                                       ; preds = %if.then94
  %arrayidx113 = getelementptr inbounds %struct.rtx_def* %38, i64 0, i32 1, i64 2
  %rtx114 = bitcast %union.rtunion_def* %arrayidx113 to %struct.rtx_def**
  br label %if.end115

if.end115:                                        ; preds = %if.then94, %if.else111
  %loc.0 = phi %struct.rtx_def** [ %rtx114, %if.else111 ], [ %rtx103, %if.then94 ]
  %call116 = tail call %struct.rtx_def* @gen_rtx_fmt_(i32 51, i32 0) #5
  %call117 = tail call i32 @validate_change(%struct.rtx_def* %29, %struct.rtx_def** %loc.0, %struct.rtx_def* %call116, i32 0) #5
  %tobool118 = icmp eq i32 %call117, 0
  br i1 %tobool118, label %for.cond69.backedge, label %if.end120

for.cond69.backedge:                              ; preds = %if.end115, %if.else, %lor.lhs.false81, %if.end76, %if.end132, %for.body71, %if.end139
  %tobool70 = icmp eq %struct.edge_def* %28, null
  br i1 %tobool70, label %for.end141, label %for.body71

if.end120:                                        ; preds = %if.end115
  %41 = load %struct.rtx_def** %rtx84, align 8, !tbaa !9
  %tobool124 = icmp eq %struct.rtx_def* %41, null
  br i1 %tobool124, label %if.end132, label %if.then125

if.then125:                                       ; preds = %if.end120
  %arrayidx130 = getelementptr inbounds %struct.rtx_def* %41, i64 0, i32 1, i64 3
  %rtint131 = bitcast %union.rtunion_def* %arrayidx130 to i32*
  %42 = load i32* %rtint131, align 4, !tbaa !17
  %dec = add nsw i32 %42, -1
  store i32 %dec, i32* %rtint131, align 4, !tbaa !17
  br label %if.end132

if.end132:                                        ; preds = %if.end120, %if.then125
  %succ = getelementptr inbounds %struct.basic_block_def* %27, i64 0, i32 5
  %43 = load %struct.edge_def** %succ, align 8, !tbaa !136
  %succ_next133 = getelementptr inbounds %struct.edge_def* %43, i64 0, i32 1
  %44 = load %struct.edge_def** %succ_next133, align 8, !tbaa !138
  %cmp134 = icmp eq %struct.edge_def* %44, null
  br i1 %cmp134, label %for.cond69.backedge, label %if.end139

if.end139:                                        ; preds = %if.end132, %emit_return_into_block.exit
  tail call void @redirect_edge_succ(%struct.edge_def* %e.2559, %struct.basic_block_def* getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1)) #5
  br label %for.cond69.backedge

for.end141:                                       ; preds = %for.cond69.backedge, %for.end68
  %45 = load %struct.rtx_def** %end, align 8, !tbaa !145
  %call143 = tail call %struct.rtx_def* @emit_barrier_after(%struct.rtx_def* %45) #5
  %call.i427 = tail call %struct.rtx_def* @gen_return() #5
  %46 = load %struct.rtx_def** %end, align 8, !tbaa !145
  %call3.i428 = tail call %struct.rtx_def* @emit_jump_insn_after(%struct.rtx_def* %call.i427, %struct.rtx_def* %46) #5
  %tobool.i429 = icmp eq %struct.rtx_def* %epilogue_line_note.0, null
  br i1 %tobool.i429, label %emit_return_into_block.exit438, label %if.then.i437

if.then.i437:                                     ; preds = %for.end141
  %arrayidx5.i430 = getelementptr inbounds %struct.rtx_def* %epilogue_line_note.0, i64 0, i32 1, i64 3
  %rtstr.i431 = bitcast %union.rtunion_def* %arrayidx5.i430 to i8**
  %47 = load i8** %rtstr.i431, align 8, !tbaa !9
  %arrayidx7.i432 = getelementptr inbounds %struct.rtx_def* %epilogue_line_note.0, i64 0, i32 1, i64 4
  %rtint.i433 = bitcast %union.rtunion_def* %arrayidx7.i432 to i32*
  %48 = load i32* %rtint.i433, align 4, !tbaa !17
  %49 = load %struct.rtx_def** %end, align 8, !tbaa !145
  %arrayidx10.i434 = getelementptr inbounds %struct.rtx_def* %49, i64 0, i32 1, i64 1
  %rtx11.i435 = bitcast %union.rtunion_def* %arrayidx10.i434 to %struct.rtx_def**
  %50 = load %struct.rtx_def** %rtx11.i435, align 8, !tbaa !9
  %call12.i436 = tail call %struct.rtx_def* @emit_line_note_after(i8* %47, i32 %48, %struct.rtx_def* %50) #5
  br label %emit_return_into_block.exit438

emit_return_into_block.exit438:                   ; preds = %for.end141, %if.then.i437
  %51 = load %struct.rtx_def** %end, align 8, !tbaa !145
  %succ145 = getelementptr inbounds %struct.basic_block_def* %19, i64 0, i32 5
  %52 = load %struct.edge_def** %succ145, align 8, !tbaa !136
  %flags146 = getelementptr inbounds %struct.edge_def* %52, i64 0, i32 6
  %53 = load i32* %flags146, align 4, !tbaa !140
  %and147 = and i32 %53, -2
  store i32 %and147, i32* %flags146, align 4, !tbaa !140
  br label %if.then189

for.cond150:                                      ; preds = %for.body152
  %pred_next159 = getelementptr inbounds %struct.edge_def* %e.3557, i64 0, i32 0
  %e.3 = load %struct.edge_def** %pred_next159, align 8
  %cond421 = icmp eq %struct.edge_def* %e.3, null
  br i1 %cond421, label %if.then189, label %for.body152

for.body152:                                      ; preds = %for.cond150.preheader, %for.cond150
  %e.3557 = phi %struct.edge_def* [ %e.3, %for.cond150 ], [ %e.3555, %for.cond150.preheader ]
  %flags153 = getelementptr inbounds %struct.edge_def* %e.3557, i64 0, i32 6
  %54 = load i32* %flags153, align 4, !tbaa !140
  %and154 = and i32 %54, 1
  %tobool155 = icmp eq i32 %and154, 0
  br i1 %tobool155, label %for.cond150, label %if.end163

if.end163:                                        ; preds = %for.body152
  tail call void @start_sequence() #5
  %call164 = tail call %struct.rtx_def* @emit_note(i8* null, i32 -89) #5
  %call165 = tail call %struct.rtx_def* @gen_epilogue() #5
  %55 = load %union.tree_node** @current_function_decl, align 8, !tbaa !9
  %type = getelementptr inbounds %union.tree_node* %55, i64 0, i32 0, i32 0, i32 1
  %56 = load %union.tree_node** %type, align 8, !tbaa !56
  %code = getelementptr inbounds %union.tree_node* %56, i64 0, i32 0, i32 0, i32 2
  %bf.load167 = load i32* %code, align 8
  %bf.clear168 = and i32 %bf.load167, 255
  %cmp169 = icmp eq i32 %bf.clear168, 23
  br i1 %cmp169, label %land.lhs.true170, label %if.end179

land.lhs.true170:                                 ; preds = %if.end163
  %type173 = bitcast %union.tree_node* %56 to %struct.tree_type*
  %no_force_blk_flag = getelementptr inbounds %struct.tree_type* %type173, i64 0, i32 6
  %bf.load174 = load i32* %no_force_blk_flag, align 4
  %bf.clear175 = and i32 %bf.load174, 131072
  %tobool176 = icmp eq i32 %bf.clear175, 0
  br i1 %tobool176, label %if.end179, label %if.then177

if.then177:                                       ; preds = %land.lhs.true170
  %57 = bitcast %struct.epi_info* %info.i to i8*
  call void @llvm.lifetime.start(i64 40, i8* %57) #5
  %58 = getelementptr inbounds %struct.rtx_def* %call165, i64 0, i32 0
  %bf.load.i439 = load i32* %58, align 8
  %bf.clear.i440 = and i32 %bf.load.i439, 65535
  %cmp.i441 = icmp eq i32 %bf.clear.i440, 24
  br i1 %cmp.i441, label %if.end.i, label %if.end179

if.end.i:                                         ; preds = %if.then177
  tail call void @start_sequence() #5
  %59 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !9
  %sp_equiv_reg.i = getelementptr inbounds %struct.epi_info* %info.i, i64 0, i32 0
  store %struct.rtx_def* %59, %struct.rtx_def** %sp_equiv_reg.i, align 8, !tbaa !146
  %sp_offset.i = getelementptr inbounds %struct.epi_info* %info.i, i64 0, i32 1
  store i64 0, i64* %sp_offset.i, align 8, !tbaa !148
  %equiv_reg_src.i = getelementptr inbounds %struct.epi_info* %info.i, i64 0, i32 4
  store %struct.rtx_def* null, %struct.rtx_def** %equiv_reg_src.i, align 8, !tbaa !149
  %arrayidx.i442 = getelementptr inbounds %struct.rtx_def* %call165, i64 0, i32 1, i64 0
  %rtvec.i443 = bitcast %union.rtunion_def* %arrayidx.i442 to %struct.rtvec_def**
  %60 = load %struct.rtvec_def** %rtvec.i443, align 8, !tbaa !9
  %num_elem518.i = getelementptr inbounds %struct.rtvec_def* %60, i64 0, i32 0
  %61 = load i32* %num_elem518.i, align 4, !tbaa !75
  %cmp1519.i = icmp sgt i32 %61, 0
  br i1 %cmp1519.i, label %for.body.lr.ph.i, label %for.end415.i

for.body.lr.ph.i:                                 ; preds = %if.end.i
  %new_sp_equiv_reg.i = getelementptr inbounds %struct.epi_info* %info.i, i64 0, i32 2
  %new_sp_offset.i = getelementptr inbounds %struct.epi_info* %info.i, i64 0, i32 3
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc413.i, %for.body.lr.ph.i
  %62 = phi %struct.rtx_def* [ %59, %for.body.lr.ph.i ], [ %150, %for.inc413.i ]
  %63 = phi i64 [ 0, %for.body.lr.ph.i ], [ %151, %for.inc413.i ]
  %64 = phi %struct.rtx_def* [ %59, %for.body.lr.ph.i ], [ %152, %for.inc413.i ]
  %indvars.iv524.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next525.i, %for.inc413.i ]
  %65 = phi %struct.rtvec_def* [ %60, %for.body.lr.ph.i ], [ %153, %for.inc413.i ]
  %arrayidx5.i444 = getelementptr inbounds %struct.rtvec_def* %65, i64 0, i32 1, i64 %indvars.iv524.i
  %66 = load %struct.rtx_def** %arrayidx5.i444, align 8, !tbaa !9
  %67 = getelementptr inbounds %struct.rtx_def* %66, i64 0, i32 0
  %bf.load6.i = load i32* %67, align 8
  %bf.clear7.i = and i32 %bf.load6.i, 65535
  %idxprom8485.i = zext i32 %bf.clear7.i to i64
  %arrayidx9.i445 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom8485.i
  %68 = load i8* %arrayidx9.i445, align 1, !tbaa !22
  %cmp10.i = icmp eq i8 %68, 105
  br i1 %cmp10.i, label %if.end13.i, label %if.then12.i

if.then12.i:                                      ; preds = %for.body.i
  tail call void @add_insn(%struct.rtx_def* %66) #5
  br label %for.inc413.i

if.end13.i:                                       ; preds = %for.body.i
  %69 = load %struct.rtx_def** %equiv_reg_src.i, align 8, !tbaa !149
  %cmp15.i = icmp eq %struct.rtx_def* %69, null
  %arrayidx26.pre.i = getelementptr inbounds %struct.rtx_def* %66, i64 0, i32 1, i64 3
  %rtx27.pre.i = bitcast %union.rtunion_def* %arrayidx26.pre.i to %struct.rtx_def**
  br i1 %cmp15.i, label %if.end22.i, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %if.end13.i
  %70 = load %struct.rtx_def** %rtx27.pre.i, align 8, !tbaa !9
  %call.i446 = tail call i32 @reg_referenced_p(%struct.rtx_def* %62, %struct.rtx_def* %70) #5
  %tobool.i447 = icmp eq i32 %call.i446, 0
  br i1 %tobool.i447, label %if.end22.i, label %emit_equiv_load.exit.i

emit_equiv_load.exit.i:                           ; preds = %land.lhs.true.i
  %call.i.i = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %62, %struct.rtx_def* %69) #5
  store %struct.rtx_def* null, %struct.rtx_def** %equiv_reg_src.i, align 8, !tbaa !149
  store %struct.rtx_def* null, %struct.rtx_def** %sp_equiv_reg.i, align 8, !tbaa !146
  br label %if.end22.i

if.end22.i:                                       ; preds = %emit_equiv_load.exit.i, %land.lhs.true.i, %if.end13.i
  %71 = phi %struct.rtx_def* [ %62, %land.lhs.true.i ], [ null, %emit_equiv_load.exit.i ], [ %62, %if.end13.i ]
  %72 = phi %struct.rtx_def* [ %69, %land.lhs.true.i ], [ null, %emit_equiv_load.exit.i ], [ null, %if.end13.i ]
  %73 = phi %struct.rtx_def* [ %62, %land.lhs.true.i ], [ null, %emit_equiv_load.exit.i ], [ %64, %if.end13.i ]
  store %struct.rtx_def* %73, %struct.rtx_def** %new_sp_equiv_reg.i, align 8, !tbaa !150
  store i64 %63, i64* %new_sp_offset.i, align 8, !tbaa !151
  %74 = load %struct.rtx_def** %rtx27.pre.i, align 8, !tbaa !9
  %75 = getelementptr inbounds %struct.rtx_def* %74, i64 0, i32 0
  %bf.load28.i = load i32* %75, align 8
  %bf.clear29.i = and i32 %bf.load28.i, 65535
  switch i32 %bf.clear29.i, label %if.else310.i [
    i32 51, label %if.then52.i
    i32 39, label %land.lhs.true39.i
  ]

land.lhs.true39.i:                                ; preds = %if.end22.i
  %arrayidx44.i = getelementptr inbounds %struct.rtx_def* %74, i64 0, i32 1, i64 0
  %rtvec45.i = bitcast %union.rtunion_def* %arrayidx44.i to %struct.rtvec_def**
  %76 = load %struct.rtvec_def** %rtvec45.i, align 8, !tbaa !9
  %arrayidx47.i = getelementptr inbounds %struct.rtvec_def* %76, i64 0, i32 1, i64 0
  %77 = load %struct.rtx_def** %arrayidx47.i, align 8, !tbaa !9
  %78 = getelementptr inbounds %struct.rtx_def* %77, i64 0, i32 0
  %bf.load48.i = load i32* %78, align 8
  %bf.clear49.i = and i32 %bf.load48.i, 65535
  %cmp50.i = icmp eq i32 %bf.clear49.i, 51
  br i1 %cmp50.i, label %if.then52.i, label %if.else310.i

if.then52.i:                                      ; preds = %land.lhs.true39.i, %if.end22.i
  %call53.i = tail call %struct.rtx_def* @gen_rtx_REG(i32 0, i32 7) #5
  %call54.i = tail call %struct.rtx_def* @gen_rtx_MEM(i32 0, %struct.rtx_def* %call53.i) #5
  %79 = getelementptr inbounds %struct.rtx_def* %call54.i, i64 0, i32 0
  %bf.load55.i = load i32* %79, align 8
  %bf.clear56.i = and i32 %bf.load55.i, 65535
  switch i32 %bf.clear56.i, label %if.else137.i [
    i32 61, label %if.then59.i
    i32 66, label %land.lhs.true64.i
  ]

if.then59.i:                                      ; preds = %if.then52.i
  %cmp.i497.i = icmp eq %struct.rtx_def* %72, null
  br i1 %cmp.i497.i, label %emit_equiv_load.exit501.i, label %if.then.i500.i

if.then.i500.i:                                   ; preds = %if.then59.i
  %call.i499.i = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %73, %struct.rtx_def* %72) #5
  br label %emit_equiv_load.exit501.i

emit_equiv_load.exit501.i:                        ; preds = %if.then.i500.i, %if.then59.i
  store %struct.rtx_def* null, %struct.rtx_def** %equiv_reg_src.i, align 8, !tbaa !149
  tail call void @add_insn(%struct.rtx_def* %66) #5
  br label %for.inc413.i

land.lhs.true64.i:                                ; preds = %if.then52.i
  %arrayidx66.i = getelementptr inbounds %struct.rtx_def* %call54.i, i64 0, i32 1, i64 0
  %rtx67.i = bitcast %union.rtunion_def* %arrayidx66.i to %struct.rtx_def**
  %80 = load %struct.rtx_def** %rtx67.i, align 8, !tbaa !9
  %81 = getelementptr inbounds %struct.rtx_def* %80, i64 0, i32 0
  %bf.load68.i = load i32* %81, align 8
  %bf.clear69.i = and i32 %bf.load68.i, 65535
  switch i32 %bf.clear69.i, label %if.else137.i [
    i32 61, label %if.then72.i
    i32 75, label %land.lhs.true93.i
  ]

if.then72.i:                                      ; preds = %land.lhs.true64.i
  %82 = load i32* @target_flags, align 4, !tbaa !17
  %and.i = lshr i32 %82, 25
  %83 = and i32 %and.i, 1
  %84 = or i32 %83, 4
  %arrayidx78.i = getelementptr inbounds %struct.rtx_def* %80, i64 0, i32 1, i64 0
  %rtuint.i = bitcast %union.rtunion_def* %arrayidx78.i to i32*
  %85 = load i32* %rtuint.i, align 4, !tbaa !17
  %call79.i = tail call %struct.rtx_def* @gen_rtx_REG(i32 %84, i32 %85) #5
  br label %if.end140.i

land.lhs.true93.i:                                ; preds = %land.lhs.true64.i
  %fld97.i = getelementptr inbounds %struct.rtx_def* %80, i64 0, i32 1
  %rtx99.i = bitcast [1 x %union.rtunion_def]* %fld97.i to %struct.rtx_def**
  %86 = load %struct.rtx_def** %rtx99.i, align 8, !tbaa !9
  %87 = getelementptr inbounds %struct.rtx_def* %86, i64 0, i32 0
  %bf.load100.i = load i32* %87, align 8
  %bf.clear101.i = and i32 %bf.load100.i, 65535
  %cmp102.i = icmp eq i32 %bf.clear101.i, 61
  br i1 %cmp102.i, label %land.lhs.true104.i, label %if.else137.i

land.lhs.true104.i:                               ; preds = %land.lhs.true93.i
  %arrayidx109.i = getelementptr inbounds %struct.rtx_def* %80, i64 0, i32 1, i64 1
  %rtx110.i = bitcast %union.rtunion_def* %arrayidx109.i to %struct.rtx_def**
  %88 = load %struct.rtx_def** %rtx110.i, align 8, !tbaa !9
  %89 = getelementptr inbounds %struct.rtx_def* %88, i64 0, i32 0
  %bf.load111.i = load i32* %89, align 8
  %bf.clear112.i = and i32 %bf.load111.i, 65535
  %cmp113.i = icmp eq i32 %bf.clear112.i, 54
  br i1 %cmp113.i, label %if.then115.i, label %if.else137.i

if.then115.i:                                     ; preds = %land.lhs.true104.i
  %90 = load i32* @target_flags, align 4, !tbaa !17
  %and116.i = lshr i32 %90, 25
  %91 = and i32 %and116.i, 1
  %92 = or i32 %91, 4
  %arrayidx126.i = getelementptr inbounds %struct.rtx_def* %86, i64 0, i32 1, i64 0
  %rtuint127.i = bitcast %union.rtunion_def* %arrayidx126.i to i32*
  %93 = load i32* %rtuint127.i, align 4, !tbaa !17
  %call128.i = tail call %struct.rtx_def* @gen_rtx_REG(i32 %92, i32 %93) #5
  %94 = load %struct.rtx_def** %rtx67.i, align 8, !tbaa !9
  %arrayidx133.i = getelementptr inbounds %struct.rtx_def* %94, i64 0, i32 1, i64 1
  %rtx134.i = bitcast %union.rtunion_def* %arrayidx133.i to %struct.rtx_def**
  %95 = load %struct.rtx_def** %rtx134.i, align 8, !tbaa !9
  %rtwint.i = getelementptr inbounds %struct.rtx_def* %95, i64 0, i32 1, i64 0, i32 0
  %96 = load i64* %rtwint.i, align 8, !tbaa !60
  br label %if.end140.i

if.else137.i:                                     ; preds = %land.lhs.true64.i, %land.lhs.true104.i, %land.lhs.true93.i, %if.then52.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8]* @.str, i64 0, i64 0), i32 7377, i8* getelementptr inbounds ([21 x i8]* @__FUNCTION__.keep_stack_depressed, i64 0, i64 0)) #8
  unreachable

if.end140.i:                                      ; preds = %if.then115.i, %if.then72.i
  %base.0.i = phi %struct.rtx_def* [ %call79.i, %if.then72.i ], [ %call128.i, %if.then115.i ]
  %offset.0.i = phi i64 [ 0, %if.then72.i ], [ %96, %if.then115.i ]
  %call141.i = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %base.0.i, i64 %offset.0.i) #5
  %97 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !9
  %cmp142.i = icmp eq %struct.rtx_def* %base.0.i, %97
  br i1 %cmp142.i, label %if.then144.i, label %if.end149.i

if.then144.i:                                     ; preds = %if.end140.i
  %call147.i = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %73, i64 %63) #5
  %call148.i = tail call %struct.rtx_def* @simplify_replace_rtx(%struct.rtx_def* %call141.i, %struct.rtx_def* %base.0.i, %struct.rtx_def* %call147.i) #5
  br label %if.end149.i

if.end149.i:                                      ; preds = %if.then144.i, %if.end140.i
  %retaddr.0.i = phi %struct.rtx_def* [ %call148.i, %if.then144.i ], [ %call141.i, %if.end140.i ]
  %98 = load i32* @target_flags, align 4, !tbaa !17
  %and150.i = lshr i32 %98, 25
  %99 = and i32 %and150.i, 1
  %100 = or i32 %99, 4
  %call153.i = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %100, %struct.rtx_def* %retaddr.0.i) #5
  %tobool155.i = icmp eq %struct.rtx_def* %72, null
  br i1 %tobool155.i, label %emit_equiv_load.exit507.i, label %land.lhs.true156.i

land.lhs.true156.i:                               ; preds = %if.end149.i
  %call158.i = tail call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %72, %struct.rtx_def* %call153.i) #5
  %tobool159.i = icmp eq i32 %call158.i, 0
  br i1 %tobool159.i, label %if.then.i506.i, label %for.body164.i

for.body164.i:                                    ; preds = %land.lhs.true156.i, %for.inc.i
  %indvars.iv.i448 = phi i64 [ %indvars.iv.next.i449, %for.inc.i ], [ 0, %land.lhs.true156.i ]
  %regno.0511.i = phi i32 [ %inc.i, %for.inc.i ], [ 0, %land.lhs.true156.i ]
  %101 = load i32* @target_flags, align 4, !tbaa !17
  %and165.i = lshr i32 %101, 25
  %102 = and i32 %and165.i, 1
  %103 = or i32 %102, 4
  %104 = trunc i64 %indvars.iv.i448 to i32
  %call168.i = tail call i32 @ix86_hard_regno_mode_ok(i32 %104, i32 %103) #5
  %tobool169.i = icmp eq i32 %call168.i, 0
  br i1 %tobool169.i, label %for.inc.i, label %land.lhs.true170.i

land.lhs.true170.i:                               ; preds = %for.body164.i
  %arrayidx172.i = getelementptr inbounds [53 x i8]* @fixed_regs, i64 0, i64 %indvars.iv.i448
  %105 = load i8* %arrayidx172.i, align 1, !tbaa !22
  %tobool173.i = icmp eq i8 %105, 0
  br i1 %tobool173.i, label %land.lhs.true174.i, label %for.inc.i

land.lhs.true174.i:                               ; preds = %land.lhs.true170.i
  %106 = load i64* @regs_invalidated_by_call, align 8, !tbaa !60
  %shl.i = shl i64 1, %indvars.iv.i448
  %and175.i = and i64 %106, %shl.i
  %tobool176.i = icmp eq i64 %and175.i, 0
  br i1 %tobool176.i, label %for.inc.i, label %land.lhs.true177.i

land.lhs.true177.i:                               ; preds = %land.lhs.true174.i
  %107 = load %struct.bitmap_head_def** getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1, i32 8), align 8, !tbaa !152
  %call178.i = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %107, i32 %104) #5
  %tobool179.i = icmp eq i32 %call178.i, 0
  br i1 %tobool179.i, label %land.lhs.true180.i, label %for.inc.i

land.lhs.true180.i:                               ; preds = %land.lhs.true177.i
  %108 = and i32 %104, -8
  %109 = icmp eq i32 %108, 8
  %regno.0.off.i = add i32 %104, -21
  %110 = icmp ult i32 %regno.0.off.i, 8
  %or.cond.i = or i1 %109, %110
  %regno.0.off487.i = add i32 %104, -45
  %111 = icmp ult i32 %regno.0.off487.i, 8
  %or.cond493.i = or i1 %or.cond.i, %111
  %regno.0.off488.i = add i32 %104, -29
  %112 = icmp ult i32 %regno.0.off488.i, 8
  %or.cond495.i = or i1 %or.cond493.i, %112
  %113 = load i32* @target_flags, align 4, !tbaa !17
  br i1 %or.cond495.i, label %cond.true.i, label %cond.false.i

cond.true.i:                                      ; preds = %land.lhs.true180.i
  %and204.i = lshr i32 %113, 25
  %114 = and i32 %and204.i, 1
  %115 = or i32 %114, 4
  %idxprom207490.i = zext i32 %115 to i64
  %arrayidx208.i = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom207490.i
  %116 = load i32* %arrayidx208.i, align 4, !tbaa !22
  %cmp209.i = icmp eq i32 %116, 5
  br i1 %cmp209.i, label %cond.end254.i, label %lor.rhs.i

lor.rhs.i:                                        ; preds = %cond.true.i
  %cmp216.i = icmp eq i32 %116, 6
  %phitmp.i = select i1 %cmp216.i, i32 2, i32 1
  br label %cond.end254.i

cond.false.i:                                     ; preds = %land.lhs.true180.i
  %and219.i = and i32 %113, 33554432
  %117 = lshr exact i32 %and219.i, 25
  %118 = or i32 %117, 4
  %idxprom242489.i = zext i32 %118 to i64
  %arrayidx243.i = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom242489.i
  %119 = load i8* %arrayidx243.i, align 1, !tbaa !22
  %conv244.i = zext i8 %119 to i32
  %120 = lshr exact i32 %and219.i, 23
  %121 = add i32 %120, 4
  %add521.i = or i32 %120, 3
  %sub.i = add i32 %conv244.i, %add521.i
  %div.i = sdiv i32 %sub.i, %121
  br label %cond.end254.i

cond.end254.i:                                    ; preds = %cond.false.i, %lor.rhs.i, %cond.true.i
  %cond255.i = phi i32 [ %div.i, %cond.false.i ], [ 2, %cond.true.i ], [ %phitmp.i, %lor.rhs.i ]
  %add256.i = add i32 %cond255.i, %104
  %call258.i = tail call i32 @refers_to_regno_p(i32 %104, i32 %add256.i, %struct.rtx_def* %72, %struct.rtx_def** null) #5
  %tobool259.i = icmp eq i32 %call258.i, 0
  br i1 %tobool259.i, label %for.end.i, label %for.inc.i

for.inc.i:                                        ; preds = %cond.end254.i, %land.lhs.true177.i, %land.lhs.true174.i, %land.lhs.true170.i, %for.body164.i
  %indvars.iv.next.i449 = add nuw nsw i64 %indvars.iv.i448, 1
  %inc.i = add i32 %regno.0511.i, 1
  %122 = trunc i64 %indvars.iv.next.i449 to i32
  %cmp162.i = icmp ult i32 %122, 53
  br i1 %cmp162.i, label %for.body164.i, label %for.end.i

for.end.i:                                        ; preds = %for.inc.i, %cond.end254.i
  %regno.0.lcssa.i = phi i32 [ %104, %cond.end254.i ], [ %inc.i, %for.inc.i ]
  %cmp262.i = icmp eq i32 %regno.0.lcssa.i, 53
  br i1 %cmp262.i, label %if.then264.i, label %if.end265.i

if.then264.i:                                     ; preds = %for.end.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8]* @.str, i64 0, i64 0), i32 7412, i8* getelementptr inbounds ([21 x i8]* @__FUNCTION__.keep_stack_depressed, i64 0, i64 0)) #8
  unreachable

if.end265.i:                                      ; preds = %for.end.i
  %123 = load i32* @target_flags, align 4, !tbaa !17
  %and266.i = lshr i32 %123, 25
  %124 = and i32 %and266.i, 1
  %125 = or i32 %124, 4
  %call269.i = tail call %struct.rtx_def* @gen_rtx_REG(i32 %125, i32 %regno.0.lcssa.i) #5
  %call270.i = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call269.i, %struct.rtx_def* %call153.i) #5
  br label %if.then.i506.i

if.then.i506.i:                                   ; preds = %if.end265.i, %land.lhs.true156.i
  %retaddr.1.ph.i = phi %struct.rtx_def* [ %call153.i, %land.lhs.true156.i ], [ %call269.i, %if.end265.i ]
  %call.i505.i = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %73, %struct.rtx_def* %72) #5
  br label %emit_equiv_load.exit507.i

emit_equiv_load.exit507.i:                        ; preds = %if.then.i506.i, %if.end149.i
  %retaddr.1509.i = phi %struct.rtx_def* [ %retaddr.1.ph.i, %if.then.i506.i ], [ %call153.i, %if.end149.i ]
  store %struct.rtx_def* null, %struct.rtx_def** %equiv_reg_src.i, align 8, !tbaa !149
  %call272.i = tail call %struct.rtx_def* @gen_indirect_jump(%struct.rtx_def* %retaddr.1509.i) #5
  %call273.i = tail call %struct.rtx_def* @emit_jump_insn(%struct.rtx_def* %call272.i) #5
  %126 = getelementptr inbounds %struct.rtx_def* %call273.i, i64 0, i32 0
  %bf.load274.i = load i32* %126, align 8
  %bf.clear275.i = and i32 %bf.load274.i, 65535
  %idxprom276486.i = zext i32 %bf.clear275.i to i64
  %arrayidx277.i = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom276486.i
  %127 = load i8* %arrayidx277.i, align 1, !tbaa !22
  %cmp279.i = icmp eq i8 %127, 105
  br i1 %cmp279.i, label %cond.true281.i, label %if.then305.i

cond.true281.i:                                   ; preds = %emit_equiv_load.exit507.i
  %arrayidx283.i = getelementptr inbounds %struct.rtx_def* %call273.i, i64 0, i32 1, i64 3
  %rtx284.i = bitcast %union.rtunion_def* %arrayidx283.i to %struct.rtx_def**
  %128 = load %struct.rtx_def** %rtx284.i, align 8, !tbaa !9
  %129 = getelementptr inbounds %struct.rtx_def* %128, i64 0, i32 0
  %bf.load285.i = load i32* %129, align 8
  %bf.clear286.i = and i32 %bf.load285.i, 65535
  %cmp287.i = icmp eq i32 %bf.clear286.i, 47
  br i1 %cmp287.i, label %cond.end301.i, label %cond.false293.i

cond.false293.i:                                  ; preds = %cond.true281.i
  %call297.i = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* %call273.i, %struct.rtx_def* %128) #5
  br label %cond.end301.i

cond.end301.i:                                    ; preds = %cond.false293.i, %cond.true281.i
  %cond302.i = phi %struct.rtx_def* [ %call297.i, %cond.false293.i ], [ %128, %cond.true281.i ]
  %cmp303.i = icmp eq %struct.rtx_def* %cond302.i, null
  br i1 %cmp303.i, label %if.then305.i, label %if.else306.i

if.then305.i:                                     ; preds = %cond.end301.i, %emit_equiv_load.exit507.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8]* @.str, i64 0, i64 0), i32 7425, i8* getelementptr inbounds ([21 x i8]* @__FUNCTION__.keep_stack_depressed, i64 0, i64 0)) #8
  unreachable

if.else306.i:                                     ; preds = %cond.end301.i
  %130 = getelementptr inbounds %struct.rtx_def* %cond302.i, i64 0, i32 0
  %bf.load307.i = load i32* %130, align 8
  %bf.set.i = or i32 %bf.load307.i, 16777216
  store i32 %bf.set.i, i32* %130, align 8
  br label %if.end408.i

if.else310.i:                                     ; preds = %land.lhs.true39.i, %if.end22.i
  %131 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !9
  %call314.i = tail call i32 @reg_mentioned_p(%struct.rtx_def* %131, %struct.rtx_def* %74) #5
  %tobool315.i = icmp eq i32 %call314.i, 0
  br i1 %tobool315.i, label %land.lhs.true316.i, label %if.else325.i

land.lhs.true316.i:                               ; preds = %if.else310.i
  %132 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !9
  %cmp318.i = icmp eq %struct.rtx_def* %73, %132
  br i1 %cmp318.i, label %if.then324.i, label %lor.lhs.false320.i

lor.lhs.false320.i:                               ; preds = %land.lhs.true316.i
  %call322.i = tail call i32 @reg_set_p(%struct.rtx_def* %73, %struct.rtx_def* %66) #5
  %tobool323.i = icmp eq i32 %call322.i, 0
  br i1 %tobool323.i, label %if.then324.i, label %if.else325.i

if.then324.i:                                     ; preds = %lor.lhs.false320.i, %land.lhs.true316.i
  tail call void @add_insn(%struct.rtx_def* %66) #5
  br label %if.end408.i

if.else325.i:                                     ; preds = %lor.lhs.false320.i, %if.else310.i
  %133 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !9
  %call326.i = tail call i32 @reg_set_p(%struct.rtx_def* %133, %struct.rtx_def* %66) #5
  %tobool327.i = icmp eq i32 %call326.i, 0
  br i1 %tobool327.i, label %land.lhs.true328.i, label %if.else344.i

land.lhs.true328.i:                               ; preds = %if.else325.i
  %134 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !9
  %cmp330.i = icmp eq %struct.rtx_def* %73, %134
  br i1 %cmp330.i, label %if.then336.i, label %lor.lhs.false332.i

lor.lhs.false332.i:                               ; preds = %land.lhs.true328.i
  %call334.i = tail call i32 @reg_set_p(%struct.rtx_def* %73, %struct.rtx_def* %66) #5
  %tobool335.i = icmp eq i32 %call334.i, 0
  br i1 %tobool335.i, label %lor.lhs.false332.if.then336_crit_edge.i, label %if.else344.i

lor.lhs.false332.if.then336_crit_edge.i:          ; preds = %lor.lhs.false332.i
  %.pre.i = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !9
  br label %if.then336.i

if.then336.i:                                     ; preds = %lor.lhs.false332.if.then336_crit_edge.i, %land.lhs.true328.i
  %135 = phi %struct.rtx_def* [ %.pre.i, %lor.lhs.false332.if.then336_crit_edge.i ], [ %73, %land.lhs.true328.i ]
  %call339.i = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %73, i64 %63) #5
  %call340.i = tail call i32 @validate_replace_rtx(%struct.rtx_def* %135, %struct.rtx_def* %call339.i, %struct.rtx_def* %66) #5
  %tobool341.i = icmp eq i32 %call340.i, 0
  br i1 %tobool341.i, label %if.then342.i, label %if.end343.i

if.then342.i:                                     ; preds = %if.then336.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8]* @.str, i64 0, i64 0), i32 7446, i8* getelementptr inbounds ([21 x i8]* @__FUNCTION__.keep_stack_depressed, i64 0, i64 0)) #8
  unreachable

if.end343.i:                                      ; preds = %if.then336.i
  tail call void @add_insn(%struct.rtx_def* %66) #5
  br label %if.end408.i

if.else344.i:                                     ; preds = %lor.lhs.false332.i, %if.else325.i
  %136 = load %struct.rtx_def** %rtx27.pre.i, align 8, !tbaa !9
  %137 = getelementptr inbounds %struct.rtx_def* %136, i64 0, i32 0
  %bf.load348.i = load i32* %137, align 8
  %bf.clear349.i = and i32 %bf.load348.i, 65535
  switch i32 %bf.clear349.i, label %if.else403.i [
    i32 47, label %if.then352.i
    i32 39, label %for.cond365.preheader.i
  ]

for.cond365.preheader.i:                          ; preds = %if.else344.i
  %arrayidx370513.i = getelementptr inbounds %struct.rtx_def* %136, i64 0, i32 1, i64 0
  %rtvec371514.i = bitcast %union.rtunion_def* %arrayidx370513.i to %struct.rtvec_def**
  %138 = load %struct.rtvec_def** %rtvec371514.i, align 8, !tbaa !9
  %num_elem372515.i = getelementptr inbounds %struct.rtvec_def* %138, i64 0, i32 0
  %139 = load i32* %num_elem372515.i, align 4, !tbaa !75
  %cmp373516.i = icmp sgt i32 %139, 0
  br i1 %cmp373516.i, label %for.body375.i, label %if.end408.i

if.then352.i:                                     ; preds = %if.else344.i
  call fastcc void @handle_epilogue_set(%struct.rtx_def* %136, %struct.epi_info* %info.i) #5
  br label %if.end408.i

for.body375.i:                                    ; preds = %for.cond365.preheader.i, %for.inc400.i
  %140 = phi %struct.rtx_def* [ %144, %for.inc400.i ], [ %136, %for.cond365.preheader.i ]
  %indvars.iv522.i = phi i64 [ %indvars.iv.next523.i, %for.inc400.i ], [ 0, %for.cond365.preheader.i ]
  %141 = phi %struct.rtvec_def* [ %145, %for.inc400.i ], [ %138, %for.cond365.preheader.i ]
  %arrayidx384.i = getelementptr inbounds %struct.rtvec_def* %141, i64 0, i32 1, i64 %indvars.iv522.i
  %142 = load %struct.rtx_def** %arrayidx384.i, align 8, !tbaa !9
  %143 = getelementptr inbounds %struct.rtx_def* %142, i64 0, i32 0
  %bf.load385.i = load i32* %143, align 8
  %bf.clear386.i = and i32 %bf.load385.i, 65535
  %cmp387.i = icmp eq i32 %bf.clear386.i, 47
  br i1 %cmp387.i, label %if.then389.i, label %for.inc400.i

if.then389.i:                                     ; preds = %for.body375.i
  call fastcc void @handle_epilogue_set(%struct.rtx_def* %142, %struct.epi_info* %info.i) #5
  %.pre526.i = load %struct.rtx_def** %rtx27.pre.i, align 8, !tbaa !9
  br label %for.inc400.i

for.inc400.i:                                     ; preds = %if.then389.i, %for.body375.i
  %144 = phi %struct.rtx_def* [ %140, %for.body375.i ], [ %.pre526.i, %if.then389.i ]
  %indvars.iv.next523.i = add nuw nsw i64 %indvars.iv522.i, 1
  %arrayidx370.i = getelementptr inbounds %struct.rtx_def* %144, i64 0, i32 1, i64 0
  %rtvec371.i = bitcast %union.rtunion_def* %arrayidx370.i to %struct.rtvec_def**
  %145 = load %struct.rtvec_def** %rtvec371.i, align 8, !tbaa !9
  %num_elem372.i = getelementptr inbounds %struct.rtvec_def* %145, i64 0, i32 0
  %146 = load i32* %num_elem372.i, align 4, !tbaa !75
  %147 = trunc i64 %indvars.iv.next523.i to i32
  %cmp373.i = icmp slt i32 %147, %146
  br i1 %cmp373.i, label %for.body375.i, label %if.end408.i

if.else403.i:                                     ; preds = %if.else344.i
  tail call void @add_insn(%struct.rtx_def* %66) #5
  br label %if.end408.i

if.end408.i:                                      ; preds = %for.inc400.i, %if.else403.i, %if.then352.i, %for.cond365.preheader.i, %if.end343.i, %if.then324.i, %if.else306.i
  %148 = load %struct.rtx_def** %new_sp_equiv_reg.i, align 8, !tbaa !150
  store %struct.rtx_def* %148, %struct.rtx_def** %sp_equiv_reg.i, align 8, !tbaa !146
  %149 = load i64* %new_sp_offset.i, align 8, !tbaa !151
  store i64 %149, i64* %sp_offset.i, align 8, !tbaa !148
  br label %for.inc413.i

for.inc413.i:                                     ; preds = %if.end408.i, %emit_equiv_load.exit501.i, %if.then12.i
  %150 = phi %struct.rtx_def* [ %148, %if.end408.i ], [ %71, %emit_equiv_load.exit501.i ], [ %62, %if.then12.i ]
  %151 = phi i64 [ %149, %if.end408.i ], [ %63, %emit_equiv_load.exit501.i ], [ %63, %if.then12.i ]
  %152 = phi %struct.rtx_def* [ %148, %if.end408.i ], [ %73, %emit_equiv_load.exit501.i ], [ %64, %if.then12.i ]
  %indvars.iv.next525.i = add nuw nsw i64 %indvars.iv524.i, 1
  %153 = load %struct.rtvec_def** %rtvec.i443, align 8, !tbaa !9
  %num_elem.i450 = getelementptr inbounds %struct.rtvec_def* %153, i64 0, i32 0
  %154 = load i32* %num_elem.i450, align 4, !tbaa !75
  %155 = trunc i64 %indvars.iv.next525.i to i32
  %cmp1.i = icmp slt i32 %155, %154
  br i1 %cmp1.i, label %for.body.i, label %for.end415.i

for.end415.i:                                     ; preds = %for.inc413.i, %if.end.i
  %call416.i = tail call %struct.rtx_def* @gen_sequence() #5
  tail call void @end_sequence() #5
  br label %if.end179

if.end179:                                        ; preds = %for.end415.i, %if.then177, %land.lhs.true170, %if.end163
  %seq.2 = phi %struct.rtx_def* [ %call165, %land.lhs.true170 ], [ %call165, %if.end163 ], [ %call416.i, %for.end415.i ], [ %call165, %if.then177 ]
  %call180 = tail call %struct.rtx_def* @emit_jump_insn(%struct.rtx_def* %seq.2) #5
  %156 = getelementptr inbounds %struct.rtx_def* %seq.2, i64 0, i32 0
  %bf.load181 = load i32* %156, align 8
  %bf.clear182 = and i32 %bf.load181, 65535
  %cmp183 = icmp eq i32 %bf.clear182, 24
  br i1 %cmp183, label %if.end186, label %if.then184

if.then184:                                       ; preds = %if.end179
  %call185 = tail call %struct.rtx_def* @get_insns() #5
  %.phi.trans.insert589 = getelementptr inbounds %struct.rtx_def* %call185, i64 0, i32 0
  %bf.load.i451.pre = load i32* %.phi.trans.insert589, align 8
  br label %if.end186

if.end186:                                        ; preds = %if.end179, %if.then184
  %bf.load.i451 = phi i32 [ %bf.load.i451.pre, %if.then184 ], [ %bf.load181, %if.end179 ]
  %seq.3 = phi %struct.rtx_def* [ %call185, %if.then184 ], [ %seq.2, %if.end179 ]
  %bf.clear.i452 = and i32 %bf.load.i451, 65535
  %cmp.i453 = icmp eq i32 %bf.clear.i452, 24
  br i1 %cmp.i453, label %if.then.i463, label %if.else.i489

if.then.i463:                                     ; preds = %if.end186
  %arrayidx.i454 = getelementptr inbounds %struct.rtx_def* %seq.3, i64 0, i32 1, i64 0
  %rtvec.i455 = bitcast %union.rtunion_def* %arrayidx.i454 to %struct.rtvec_def**
  %157 = load %struct.rtvec_def** %rtvec.i455, align 8, !tbaa !9
  %num_elem.i456 = getelementptr inbounds %struct.rtvec_def* %157, i64 0, i32 0
  %158 = load i32* %num_elem.i456, align 4, !tbaa !75
  %159 = load %struct.varray_head_tag** @epilogue, align 8, !tbaa !9
  %num_elements.i457 = getelementptr inbounds %struct.varray_head_tag* %159, i64 0, i32 0
  %160 = load i64* %num_elements.i457, align 8, !tbaa !112
  %conv.i458 = trunc i64 %160 to i32
  %add.i459 = add nsw i32 %conv.i458, %158
  %conv1.i460 = sext i32 %add.i459 to i64
  %call.i461 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %159, i64 %conv1.i460) #5
  store %struct.varray_head_tag* %call.i461, %struct.varray_head_tag** @epilogue, align 8, !tbaa !9
  %cmp243.i462 = icmp sgt i32 %158, 0
  br i1 %cmp243.i462, label %while.body.lr.ph.i467, label %record_insns.exit491

while.body.lr.ph.i467:                            ; preds = %if.then.i463
  %161 = load %struct.rtvec_def** %rtvec.i455, align 8, !tbaa !9
  %data.i464 = getelementptr inbounds %struct.varray_head_tag* %call.i461, i64 0, i32 4
  %i11.i465 = bitcast %union.varray_data_tag* %data.i464 to [1 x i32]*
  %162 = sext i32 %158 to i64
  %sext48.i466 = shl i64 %160, 32
  %163 = ashr exact i64 %sext48.i466, 32
  br label %while.body.i477

while.body.i477:                                  ; preds = %while.body.i477, %while.body.lr.ph.i467
  %indvars.iv46.i468 = phi i64 [ %163, %while.body.lr.ph.i467 ], [ %indvars.iv.next47.i475, %while.body.i477 ]
  %indvars.iv.i469 = phi i64 [ %162, %while.body.lr.ph.i467 ], [ %indvars.iv.next.i470, %while.body.i477 ]
  %indvars.iv.next.i470 = add nsw i64 %indvars.iv.i469, -1
  %arrayidx7.i471 = getelementptr inbounds %struct.rtvec_def* %161, i64 0, i32 1, i64 %indvars.iv.next.i470
  %164 = load %struct.rtx_def** %arrayidx7.i471, align 8, !tbaa !9
  %arrayidx9.i472 = getelementptr inbounds %struct.rtx_def* %164, i64 0, i32 1, i64 0
  %rtint.i473 = bitcast %union.rtunion_def* %arrayidx9.i472 to i32*
  %165 = load i32* %rtint.i473, align 4, !tbaa !17
  %arrayidx12.i474 = getelementptr inbounds [1 x i32]* %i11.i465, i64 0, i64 %indvars.iv46.i468
  store i32 %165, i32* %arrayidx12.i474, align 4, !tbaa !17
  %indvars.iv.next47.i475 = add nsw i64 %indvars.iv46.i468, 1
  %166 = trunc i64 %indvars.iv.next.i470 to i32
  %cmp2.i476 = icmp sgt i32 %166, 0
  br i1 %cmp2.i476, label %while.body.i477, label %record_insns.exit491

if.else.i489:                                     ; preds = %if.end186
  %167 = load %struct.varray_head_tag** @epilogue, align 8, !tbaa !9
  %num_elements14.i478 = getelementptr inbounds %struct.varray_head_tag* %167, i64 0, i32 0
  %168 = load i64* %num_elements14.i478, align 8, !tbaa !112
  %add16.i479 = shl i64 %168, 32
  %sext.i480 = add i64 %add16.i479, 4294967296
  %conv17.i481 = ashr exact i64 %sext.i480, 32
  %call18.i482 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %167, i64 %conv17.i481) #5
  store %struct.varray_head_tag* %call18.i482, %struct.varray_head_tag** @epilogue, align 8, !tbaa !9
  %arrayidx20.i483 = getelementptr inbounds %struct.rtx_def* %seq.3, i64 0, i32 1, i64 0
  %rtint21.i484 = bitcast %union.rtunion_def* %arrayidx20.i483 to i32*
  %169 = load i32* %rtint21.i484, align 4, !tbaa !17
  %idxprom22.i485 = ashr exact i64 %add16.i479, 32
  %data23.i486 = getelementptr inbounds %struct.varray_head_tag* %call18.i482, i64 0, i32 4
  %i24.i487 = bitcast %union.varray_data_tag* %data23.i486 to [1 x i32]*
  %arrayidx25.i488 = getelementptr inbounds [1 x i32]* %i24.i487, i64 0, i64 %idxprom22.i485
  store i32 %169, i32* %arrayidx25.i488, align 4, !tbaa !17
  br label %record_insns.exit491

record_insns.exit491:                             ; preds = %while.body.i477, %if.then.i463, %if.else.i489
  %call187 = tail call %struct.rtx_def* @gen_sequence() #5
  tail call void @end_sequence() #5
  tail call void @insert_insn_on_edge(%struct.rtx_def* %call187, %struct.edge_def* %e.3557) #5
  br label %if.then189

if.then189:                                       ; preds = %for.cond, %for.cond19, %for.cond150, %if.end7, %for.cond19.preheader, %for.cond150.preheader, %emit_return_into_block.exit438, %record_insns.exit491
  %epilogue_end.0 = phi %struct.rtx_def* [ %51, %emit_return_into_block.exit438 ], [ %call164, %record_insns.exit491 ], [ null, %for.cond150.preheader ], [ null, %for.cond19.preheader ], [ null, %if.end7 ], [ null, %for.cond150 ], [ null, %for.cond19 ], [ null, %for.cond ]
  tail call void @commit_edge_insertions() #5
  %e.4552 = load %struct.edge_def** getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1, i32 4), align 8
  %tobool192553 = icmp eq %struct.edge_def* %e.4552, null
  br i1 %tobool192553, label %for.end217, label %for.body193

for.body193:                                      ; preds = %if.then189, %for.inc215
  %e.4554 = phi %struct.edge_def* [ %e.4, %for.inc215 ], [ %e.4552, %if.then189 ]
  %src195 = getelementptr inbounds %struct.edge_def* %e.4554, i64 0, i32 2
  %170 = load %struct.basic_block_def** %src195, align 8, !tbaa !141
  %end196 = getelementptr inbounds %struct.basic_block_def* %170, i64 0, i32 1
  %171 = load %struct.rtx_def** %end196, align 8, !tbaa !145
  %172 = getelementptr inbounds %struct.rtx_def* %171, i64 0, i32 0
  %bf.load197 = load i32* %172, align 8
  %173 = and i32 %bf.load197, 16842751
  %174 = icmp eq i32 %173, 16777250
  br i1 %174, label %if.end206, label %for.inc215

if.end206:                                        ; preds = %for.body193
  tail call void @start_sequence() #5
  %call207 = tail call %struct.rtx_def* @gen_sibcall_epilogue() #5
  tail call void @end_sequence() #5
  %call211 = tail call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %call207, %struct.rtx_def* %171) #5
  %175 = getelementptr inbounds %struct.rtx_def* %call207, i64 0, i32 0
  %bf.load212 = load i32* %175, align 8
  %bf.clear213 = and i32 %bf.load212, 65535
  %cmp214 = icmp eq i32 %bf.clear213, 24
  %cond = select i1 %cmp214, %struct.rtx_def* %call207, %struct.rtx_def* %call211
  %176 = getelementptr inbounds %struct.rtx_def* %cond, i64 0, i32 0
  %bf.load.i492 = load i32* %176, align 8
  %bf.clear.i493 = and i32 %bf.load.i492, 65535
  %cmp.i494 = icmp eq i32 %bf.clear.i493, 24
  br i1 %cmp.i494, label %if.then.i504, label %if.else.i530

if.then.i504:                                     ; preds = %if.end206
  %arrayidx.i495 = getelementptr inbounds %struct.rtx_def* %cond, i64 0, i32 1, i64 0
  %rtvec.i496 = bitcast %union.rtunion_def* %arrayidx.i495 to %struct.rtvec_def**
  %177 = load %struct.rtvec_def** %rtvec.i496, align 8, !tbaa !9
  %num_elem.i497 = getelementptr inbounds %struct.rtvec_def* %177, i64 0, i32 0
  %178 = load i32* %num_elem.i497, align 4, !tbaa !75
  %179 = load %struct.varray_head_tag** @sibcall_epilogue, align 8, !tbaa !9
  %num_elements.i498 = getelementptr inbounds %struct.varray_head_tag* %179, i64 0, i32 0
  %180 = load i64* %num_elements.i498, align 8, !tbaa !112
  %conv.i499 = trunc i64 %180 to i32
  %add.i500 = add nsw i32 %conv.i499, %178
  %conv1.i501 = sext i32 %add.i500 to i64
  %call.i502 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %179, i64 %conv1.i501) #5
  store %struct.varray_head_tag* %call.i502, %struct.varray_head_tag** @sibcall_epilogue, align 8, !tbaa !9
  %cmp243.i503 = icmp sgt i32 %178, 0
  br i1 %cmp243.i503, label %while.body.lr.ph.i508, label %for.inc215

while.body.lr.ph.i508:                            ; preds = %if.then.i504
  %181 = load %struct.rtvec_def** %rtvec.i496, align 8, !tbaa !9
  %data.i505 = getelementptr inbounds %struct.varray_head_tag* %call.i502, i64 0, i32 4
  %i11.i506 = bitcast %union.varray_data_tag* %data.i505 to [1 x i32]*
  %182 = sext i32 %178 to i64
  %sext48.i507 = shl i64 %180, 32
  %183 = ashr exact i64 %sext48.i507, 32
  br label %while.body.i518

while.body.i518:                                  ; preds = %while.body.i518, %while.body.lr.ph.i508
  %indvars.iv46.i509 = phi i64 [ %183, %while.body.lr.ph.i508 ], [ %indvars.iv.next47.i516, %while.body.i518 ]
  %indvars.iv.i510 = phi i64 [ %182, %while.body.lr.ph.i508 ], [ %indvars.iv.next.i511, %while.body.i518 ]
  %indvars.iv.next.i511 = add nsw i64 %indvars.iv.i510, -1
  %arrayidx7.i512 = getelementptr inbounds %struct.rtvec_def* %181, i64 0, i32 1, i64 %indvars.iv.next.i511
  %184 = load %struct.rtx_def** %arrayidx7.i512, align 8, !tbaa !9
  %arrayidx9.i513 = getelementptr inbounds %struct.rtx_def* %184, i64 0, i32 1, i64 0
  %rtint.i514 = bitcast %union.rtunion_def* %arrayidx9.i513 to i32*
  %185 = load i32* %rtint.i514, align 4, !tbaa !17
  %arrayidx12.i515 = getelementptr inbounds [1 x i32]* %i11.i506, i64 0, i64 %indvars.iv46.i509
  store i32 %185, i32* %arrayidx12.i515, align 4, !tbaa !17
  %indvars.iv.next47.i516 = add nsw i64 %indvars.iv46.i509, 1
  %186 = trunc i64 %indvars.iv.next.i511 to i32
  %cmp2.i517 = icmp sgt i32 %186, 0
  br i1 %cmp2.i517, label %while.body.i518, label %for.inc215

if.else.i530:                                     ; preds = %if.end206
  %187 = load %struct.varray_head_tag** @sibcall_epilogue, align 8, !tbaa !9
  %num_elements14.i519 = getelementptr inbounds %struct.varray_head_tag* %187, i64 0, i32 0
  %188 = load i64* %num_elements14.i519, align 8, !tbaa !112
  %add16.i520 = shl i64 %188, 32
  %sext.i521 = add i64 %add16.i520, 4294967296
  %conv17.i522 = ashr exact i64 %sext.i521, 32
  %call18.i523 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %187, i64 %conv17.i522) #5
  store %struct.varray_head_tag* %call18.i523, %struct.varray_head_tag** @sibcall_epilogue, align 8, !tbaa !9
  %arrayidx20.i524 = getelementptr inbounds %struct.rtx_def* %cond, i64 0, i32 1, i64 0
  %rtint21.i525 = bitcast %union.rtunion_def* %arrayidx20.i524 to i32*
  %189 = load i32* %rtint21.i525, align 4, !tbaa !17
  %idxprom22.i526 = ashr exact i64 %add16.i520, 32
  %data23.i527 = getelementptr inbounds %struct.varray_head_tag* %call18.i523, i64 0, i32 4
  %i24.i528 = bitcast %union.varray_data_tag* %data23.i527 to [1 x i32]*
  %arrayidx25.i529 = getelementptr inbounds [1 x i32]* %i24.i528, i64 0, i64 %idxprom22.i526
  store i32 %189, i32* %arrayidx25.i529, align 4, !tbaa !17
  br label %for.inc215

for.inc215:                                       ; preds = %while.body.i518, %for.body193, %if.else.i530, %if.then.i504
  %pred_next216 = getelementptr inbounds %struct.edge_def* %e.4554, i64 0, i32 0
  %e.4 = load %struct.edge_def** %pred_next216, align 8
  %tobool192 = icmp eq %struct.edge_def* %e.4, null
  br i1 %tobool192, label %for.end217, label %for.body193

for.end217:                                       ; preds = %for.inc215, %if.then189
  %tobool218 = icmp eq %struct.rtx_def* %call3, null
  br i1 %tobool218, label %if.end294, label %for.body223

for.body223:                                      ; preds = %for.cond221.backedge.thread, %for.cond221.backedge, %for.end217
  %insn220.0551 = phi %struct.rtx_def* [ %call3, %for.end217 ], [ %190, %for.cond221.backedge ], [ %190, %for.cond221.backedge.thread ]
  %arrayidx225 = getelementptr inbounds %struct.rtx_def* %insn220.0551, i64 0, i32 1, i64 1
  %rtx226 = bitcast %union.rtunion_def* %arrayidx225 to %struct.rtx_def**
  %190 = load %struct.rtx_def** %rtx226, align 8, !tbaa !9
  %191 = getelementptr inbounds %struct.rtx_def* %insn220.0551, i64 0, i32 0
  %bf.load227 = load i32* %191, align 8
  %bf.clear228 = and i32 %bf.load227, 65535
  %cmp229 = icmp eq i32 %bf.clear228, 37
  br i1 %cmp229, label %land.lhs.true230, label %for.cond221.backedge

for.cond221.backedge:                             ; preds = %for.body223, %land.lhs.true230
  %tobool222 = icmp eq %struct.rtx_def* %190, null
  br i1 %tobool222, label %for.end241, label %for.body223

land.lhs.true230:                                 ; preds = %for.body223
  %arrayidx232 = getelementptr inbounds %struct.rtx_def* %insn220.0551, i64 0, i32 1, i64 4
  %rtint233 = bitcast %union.rtunion_def* %arrayidx232 to i32*
  %192 = load i32* %rtint233, align 4, !tbaa !17
  %cmp234 = icmp sgt i32 %192, 0
  br i1 %cmp234, label %if.then235, label %for.cond221.backedge

if.then235:                                       ; preds = %land.lhs.true230
  %cmp236 = icmp eq %struct.rtx_def* %190, null
  br i1 %cmp236, label %for.end241, label %for.cond221.backedge.thread

for.cond221.backedge.thread:                      ; preds = %if.then235
  tail call void @reorder_insns(%struct.rtx_def* %insn220.0551, %struct.rtx_def* %insn220.0551, %struct.rtx_def* %call3) #5
  br label %for.body223

for.end241:                                       ; preds = %if.then235, %for.cond221.backedge
  %193 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !9
  %data = getelementptr inbounds %struct.varray_head_tag* %193, i64 0, i32 4
  %arrayidx243 = bitcast %union.varray_data_tag* %data to %struct.basic_block_def**
  %194 = load %struct.basic_block_def** %arrayidx243, align 8, !tbaa !9
  %end244 = getelementptr inbounds %struct.basic_block_def* %194, i64 0, i32 1
  %insn220.1543 = load %struct.rtx_def** %end244, align 8
  %cmp246544 = icmp ne %struct.rtx_def* %insn220.1543, %call3
  %tobool248545 = icmp ne %struct.rtx_def* %insn220.1543, null
  %or.cond546 = and i1 %cmp246544, %tobool248545
  br i1 %or.cond546, label %for.body250, label %for.end265

for.body250:                                      ; preds = %for.end241, %for.inc261
  %insn220.1547 = phi %struct.rtx_def* [ %insn220.1, %for.inc261 ], [ %insn220.1543, %for.end241 ]
  %195 = getelementptr inbounds %struct.rtx_def* %insn220.1547, i64 0, i32 0
  %bf.load251 = load i32* %195, align 8
  %bf.clear252 = and i32 %bf.load251, 65535
  %cmp253 = icmp eq i32 %bf.clear252, 37
  br i1 %cmp253, label %land.lhs.true254, label %for.inc261

land.lhs.true254:                                 ; preds = %for.body250
  %arrayidx256 = getelementptr inbounds %struct.rtx_def* %insn220.1547, i64 0, i32 1, i64 4
  %rtint257 = bitcast %union.rtunion_def* %arrayidx256 to i32*
  %196 = load i32* %rtint257, align 4, !tbaa !17
  %cmp258 = icmp sgt i32 %196, 0
  br i1 %cmp258, label %if.end294, label %for.inc261

for.inc261:                                       ; preds = %for.body250, %land.lhs.true254
  %arrayidx263 = getelementptr inbounds %struct.rtx_def* %insn220.1547, i64 0, i32 1, i64 1
  %rtx264 = bitcast %union.rtunion_def* %arrayidx263 to %struct.rtx_def**
  %insn220.1 = load %struct.rtx_def** %rtx264, align 8
  %cmp246 = icmp ne %struct.rtx_def* %insn220.1, %call3
  %tobool248 = icmp ne %struct.rtx_def* %insn220.1, null
  %or.cond = and i1 %cmp246, %tobool248
  br i1 %or.cond, label %for.body250, label %for.end265

for.end265:                                       ; preds = %for.inc261, %for.end241
  %tobool248.lcssa = phi i1 [ %tobool248545, %for.end241 ], [ %tobool248, %for.inc261 ]
  br i1 %tobool248.lcssa, label %if.end294, label %if.then267

if.then267:                                       ; preds = %for.end265
  %call268 = tail call %struct.rtx_def* @next_active_insn(%struct.rtx_def* %call3) #5
  %tobool270541 = icmp eq %struct.rtx_def* %call268, null
  br i1 %tobool270541, label %if.end294, label %for.body271

for.body271:                                      ; preds = %if.then267, %for.inc288
  %insn220.2542 = phi %struct.rtx_def* [ %200, %for.inc288 ], [ %call268, %if.then267 ]
  %197 = getelementptr inbounds %struct.rtx_def* %insn220.2542, i64 0, i32 0
  %bf.load272 = load i32* %197, align 8
  %bf.clear273 = and i32 %bf.load272, 65535
  %cmp274 = icmp eq i32 %bf.clear273, 37
  br i1 %cmp274, label %land.lhs.true275, label %for.inc288

land.lhs.true275:                                 ; preds = %for.body271
  %arrayidx277 = getelementptr inbounds %struct.rtx_def* %insn220.2542, i64 0, i32 1, i64 4
  %rtint278 = bitcast %union.rtunion_def* %arrayidx277 to i32*
  %198 = load i32* %rtint278, align 4, !tbaa !17
  %cmp279 = icmp sgt i32 %198, 0
  br i1 %cmp279, label %if.then280, label %for.inc288

if.then280:                                       ; preds = %land.lhs.true275
  %arrayidx282 = getelementptr inbounds %struct.rtx_def* %insn220.2542, i64 0, i32 1, i64 3
  %rtstr = bitcast %union.rtunion_def* %arrayidx282 to i8**
  %199 = load i8** %rtstr, align 8, !tbaa !9
  %call286 = tail call %struct.rtx_def* @emit_line_note_after(i8* %199, i32 %198, %struct.rtx_def* %call3) #5
  br label %if.end294

for.inc288:                                       ; preds = %for.body271, %land.lhs.true275
  %arrayidx290 = getelementptr inbounds %struct.rtx_def* %insn220.2542, i64 0, i32 1, i64 1
  %rtx291 = bitcast %union.rtunion_def* %arrayidx290 to %struct.rtx_def**
  %200 = load %struct.rtx_def** %rtx291, align 8, !tbaa !9
  %tobool270 = icmp eq %struct.rtx_def* %200, null
  br i1 %tobool270, label %if.end294, label %for.body271

if.end294:                                        ; preds = %land.lhs.true254, %for.inc288, %if.then267, %for.end217, %for.end265, %if.then280
  %tobool295 = icmp eq %struct.rtx_def* %epilogue_end.0, null
  br i1 %tobool295, label %if.end319, label %for.body300.lr.ph

for.body300.lr.ph:                                ; preds = %if.end294
  %arrayidx314 = getelementptr inbounds %struct.rtx_def* %epilogue_end.0, i64 0, i32 1, i64 1
  %rtx315 = bitcast %union.rtunion_def* %arrayidx314 to %struct.rtx_def**
  br label %for.body300

for.body300:                                      ; preds = %for.body300.lr.ph, %for.cond298.backedge
  %insn297.0540 = phi %struct.rtx_def* [ %epilogue_end.0, %for.body300.lr.ph ], [ %201, %for.cond298.backedge ]
  %arrayidx302 = getelementptr inbounds %struct.rtx_def* %insn297.0540, i64 0, i32 1, i64 2
  %rtx303 = bitcast %union.rtunion_def* %arrayidx302 to %struct.rtx_def**
  %201 = load %struct.rtx_def** %rtx303, align 8, !tbaa !9
  %202 = getelementptr inbounds %struct.rtx_def* %insn297.0540, i64 0, i32 0
  %bf.load304 = load i32* %202, align 8
  %bf.clear305 = and i32 %bf.load304, 65535
  %cmp306 = icmp eq i32 %bf.clear305, 37
  br i1 %cmp306, label %land.lhs.true307, label %for.cond298.backedge

for.cond298.backedge:                             ; preds = %for.body300, %land.lhs.true307, %if.then312
  %tobool299 = icmp eq %struct.rtx_def* %201, null
  br i1 %tobool299, label %if.end319, label %for.body300

land.lhs.true307:                                 ; preds = %for.body300
  %arrayidx309 = getelementptr inbounds %struct.rtx_def* %insn297.0540, i64 0, i32 1, i64 4
  %rtint310 = bitcast %union.rtunion_def* %arrayidx309 to i32*
  %203 = load i32* %rtint310, align 4, !tbaa !17
  %cmp311 = icmp sgt i32 %203, 0
  br i1 %cmp311, label %if.then312, label %for.cond298.backedge

if.then312:                                       ; preds = %land.lhs.true307
  %204 = load %struct.rtx_def** %rtx315, align 8, !tbaa !9
  tail call void @reorder_insns(%struct.rtx_def* %insn297.0540, %struct.rtx_def* %insn297.0540, %struct.rtx_def* %204) #5
  br label %for.cond298.backedge

if.end319:                                        ; preds = %for.cond298.backedge, %if.end294
  ret void
}

declare %struct.rtx_def* @gen_prologue() #2

declare void @insert_insn_on_edge(%struct.rtx_def*, %struct.edge_def*) #2

declare i32 @ix86_can_use_return_insn_p() #2

declare i32 @active_insn_p(%struct.rtx_def*) #2

declare i32 @simplejump_p(%struct.rtx_def*) #2

declare %struct.rtx_def* @delete_insn(%struct.rtx_def*) #2

declare i32 @condjump_p(%struct.rtx_def*) #2

declare %struct.rtx_def* @gen_rtx_fmt_(i32, i32) #2

declare i32 @validate_change(%struct.rtx_def*, %struct.rtx_def**, %struct.rtx_def*, i32) #2

declare void @redirect_edge_succ(%struct.edge_def*, %struct.basic_block_def*) #2

declare %struct.rtx_def* @emit_barrier_after(%struct.rtx_def*) #2

declare %struct.rtx_def* @gen_epilogue() #2

declare %struct.rtx_def* @emit_jump_insn(%struct.rtx_def*) #2

declare void @commit_edge_insertions() #2

declare %struct.rtx_def* @gen_sibcall_epilogue() #2

declare void @reorder_insns(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #2

declare %struct.rtx_def* @next_active_insn(%struct.rtx_def*) #2

declare %struct.rtx_def* @emit_line_note_after(i8*, i32, %struct.rtx_def*) #2

; Function Attrs: nounwind uwtable
define void @reposition_prologue_and_epilogue_notes(%struct.rtx_def* %f) #0 {
entry:
  %0 = load %struct.varray_head_tag** @prologue, align 8, !tbaa !9
  %num_elements = getelementptr inbounds %struct.varray_head_tag* %0, i64 0, i32 0
  %1 = load i64* %num_elements, align 8, !tbaa !112
  %conv = trunc i64 %1 to i32
  %cmp = icmp slt i32 %conv, 1
  %tobool253 = icmp eq %struct.rtx_def* %f, null
  %or.cond = or i1 %cmp, %tobool253
  br i1 %or.cond, label %if.end55, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %data.i = getelementptr inbounds %struct.varray_head_tag* %0, i64 0, i32 4
  %i25.i = bitcast %union.varray_data_tag* %data.i to [1 x i32]*
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %insn.0258 = phi %struct.rtx_def* [ %f, %for.body.lr.ph ], [ %19, %for.inc ]
  %len.0256 = phi i32 [ %conv, %for.body.lr.ph ], [ %len.1, %for.inc ]
  %note.0255 = phi %struct.rtx_def* [ null, %for.body.lr.ph ], [ %note.1, %for.inc ]
  %last.0254 = phi %struct.rtx_def* [ null, %for.body.lr.ph ], [ %last.1, %for.inc ]
  %2 = getelementptr inbounds %struct.rtx_def* %insn.0258, i64 0, i32 0
  %bf.load = load i32* %2, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %if.else.i [
    i32 37, label %if.then4
    i32 32, label %land.lhs.true.i
  ]

if.then4:                                         ; preds = %for.body
  %arrayidx = getelementptr inbounds %struct.rtx_def* %insn.0258, i64 0, i32 1, i64 4
  %rtint = bitcast %union.rtunion_def* %arrayidx to i32*
  %3 = load i32* %rtint, align 4, !tbaa !17
  %cmp5 = icmp eq i32 %3, -90
  %insn.0.note.0 = select i1 %cmp5, %struct.rtx_def* %insn.0258, %struct.rtx_def* %note.0255
  br label %for.inc

land.lhs.true.i:                                  ; preds = %for.body
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %insn.0258, i64 0, i32 1, i64 3
  %rtx.i = bitcast %union.rtunion_def* %arrayidx.i to %struct.rtx_def**
  %4 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !9
  %5 = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 0
  %bf.load1.i = load i32* %5, align 8
  %bf.clear2.i = and i32 %bf.load1.i, 65535
  %cmp3.i = icmp eq i32 %bf.clear2.i, 24
  br i1 %cmp3.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %land.lhs.true.i
  %arrayidx8.i = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 1, i64 0
  %rtvec.i = bitcast %union.rtunion_def* %arrayidx8.i to %struct.rtvec_def**
  %6 = load %struct.rtvec_def** %rtvec.i, align 8, !tbaa !9
  %num_elem.i = getelementptr inbounds %struct.rtvec_def* %6, i64 0, i32 0
  %7 = load i32* %num_elem.i, align 4, !tbaa !75
  %cmp974.i = icmp sgt i32 %7, 0
  br i1 %cmp974.i, label %for.body.lr.ph.i, label %for.inc

for.body.lr.ph.i:                                 ; preds = %if.then.i
  %sub10.i = add i64 %1, 4294967295
  %conv.i = trunc i64 %sub10.i to i32
  %cmp1270.i = icmp sgt i32 %conv.i, -1
  %sext86.i = shl i64 %sub10.i, 32
  %8 = ashr exact i64 %sext86.i, 32
  %9 = sext i32 %7 to i64
  br label %for.body.i

for.cond.loopexit.i:                              ; preds = %for.body14.i, %for.body.i
  %count.1.lcssa.i = phi i32 [ %count.075.i, %for.body.i ], [ %inc.count.1.i, %for.body14.i ]
  %10 = trunc i64 %indvars.iv.next83.i to i32
  %cmp9.i = icmp sgt i32 %10, 0
  br i1 %cmp9.i, label %for.body.i, label %contains.exit

for.body.i:                                       ; preds = %for.cond.loopexit.i, %for.body.lr.ph.i
  %indvars.iv82.i = phi i64 [ %9, %for.body.lr.ph.i ], [ %indvars.iv.next83.i, %for.cond.loopexit.i ]
  %count.075.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %count.1.lcssa.i, %for.cond.loopexit.i ]
  %indvars.iv.next83.i = add nsw i64 %indvars.iv82.i, -1
  br i1 %cmp1270.i, label %for.body14.lr.ph.i, label %for.cond.loopexit.i

for.body14.lr.ph.i:                               ; preds = %for.body.i
  %arrayidx21.i = getelementptr inbounds %struct.rtvec_def* %6, i64 0, i32 1, i64 %indvars.iv.next83.i
  %11 = load %struct.rtx_def** %arrayidx21.i, align 8, !tbaa !9
  %arrayidx23.i = getelementptr inbounds %struct.rtx_def* %11, i64 0, i32 1, i64 0
  %rtint.i = bitcast %union.rtunion_def* %arrayidx23.i to i32*
  %12 = load i32* %rtint.i, align 4, !tbaa !17
  br label %for.body14.i

for.body14.i:                                     ; preds = %for.body14.i, %for.body14.lr.ph.i
  %indvars.iv.i = phi i64 [ %8, %for.body14.lr.ph.i ], [ %indvars.iv.next.i, %for.body14.i ]
  %count.172.i = phi i32 [ %count.075.i, %for.body14.lr.ph.i ], [ %inc.count.1.i, %for.body14.i ]
  %arrayidx26.i = getelementptr inbounds [1 x i32]* %i25.i, i64 0, i64 %indvars.iv.i
  %13 = load i32* %arrayidx26.i, align 4, !tbaa !17
  %cmp27.i = icmp eq i32 %12, %13
  %inc.i = zext i1 %cmp27.i to i32
  %inc.count.1.i = add nsw i32 %inc.i, %count.172.i
  %indvars.iv.next.i = add nsw i64 %indvars.iv.i, -1
  %14 = trunc i64 %indvars.iv.i to i32
  %cmp12.i = icmp sgt i32 %14, 0
  br i1 %cmp12.i, label %for.body14.i, label %for.cond.loopexit.i

if.else.i:                                        ; preds = %for.body, %land.lhs.true.i
  %sub34.i = add i64 %1, 4294967295
  %conv35.i = trunc i64 %sub34.i to i32
  %cmp3778.i = icmp sgt i32 %conv35.i, -1
  br i1 %cmp3778.i, label %for.body39.lr.ph.i, label %for.inc

for.body39.lr.ph.i:                               ; preds = %if.else.i
  %arrayidx41.i = getelementptr inbounds %struct.rtx_def* %insn.0258, i64 0, i32 1, i64 0
  %rtint42.i = bitcast %union.rtunion_def* %arrayidx41.i to i32*
  %15 = load i32* %rtint42.i, align 4, !tbaa !17
  %sext.i = shl i64 %sub34.i, 32
  %16 = ashr exact i64 %sext.i, 32
  br label %for.body39.i

for.cond36.i:                                     ; preds = %for.body39.i
  %indvars.iv.next85.i = add nsw i64 %indvars.iv84.i, -1
  %17 = trunc i64 %indvars.iv84.i to i32
  %cmp37.i = icmp sgt i32 %17, 0
  br i1 %cmp37.i, label %for.body39.i, label %for.inc

for.body39.i:                                     ; preds = %for.cond36.i, %for.body39.lr.ph.i
  %indvars.iv84.i = phi i64 [ %16, %for.body39.lr.ph.i ], [ %indvars.iv.next85.i, %for.cond36.i ]
  %arrayidx46.i = getelementptr inbounds [1 x i32]* %i25.i, i64 0, i64 %indvars.iv84.i
  %18 = load i32* %arrayidx46.i, align 4, !tbaa !17
  %cmp47.i = icmp eq i32 %15, %18
  br i1 %cmp47.i, label %if.then9, label %for.cond36.i

contains.exit:                                    ; preds = %for.cond.loopexit.i
  %tobool8 = icmp eq i32 %count.1.lcssa.i, 0
  br i1 %tobool8, label %for.inc, label %if.then9

if.then9:                                         ; preds = %for.body39.i, %contains.exit
  %dec = add nsw i32 %len.0256, -1
  %cmp10 = icmp eq i32 %dec, 0
  br i1 %cmp10, label %for.end, label %for.inc

for.inc:                                          ; preds = %for.cond36.i, %if.else.i, %if.then.i, %if.then4, %contains.exit, %if.then9
  %last.1 = phi %struct.rtx_def* [ %insn.0258, %if.then9 ], [ %last.0254, %contains.exit ], [ %last.0254, %if.then4 ], [ %last.0254, %if.then.i ], [ %last.0254, %if.else.i ], [ %last.0254, %for.cond36.i ]
  %note.1 = phi %struct.rtx_def* [ %note.0255, %if.then9 ], [ %note.0255, %contains.exit ], [ %insn.0.note.0, %if.then4 ], [ %note.0255, %if.then.i ], [ %note.0255, %if.else.i ], [ %note.0255, %for.cond36.i ]
  %len.1 = phi i32 [ %dec, %if.then9 ], [ %len.0256, %contains.exit ], [ %len.0256, %if.then4 ], [ %len.0256, %if.then.i ], [ %len.0256, %if.else.i ], [ %len.0256, %for.cond36.i ]
  %arrayidx17 = getelementptr inbounds %struct.rtx_def* %insn.0258, i64 0, i32 1, i64 2
  %rtx = bitcast %union.rtunion_def* %arrayidx17 to %struct.rtx_def**
  %19 = load %struct.rtx_def** %rtx, align 8, !tbaa !9
  %tobool = icmp eq %struct.rtx_def* %19, null
  br i1 %tobool, label %for.end, label %for.body

for.end:                                          ; preds = %if.then9, %for.inc
  %note.0.lcssa = phi %struct.rtx_def* [ %note.1, %for.inc ], [ %note.0255, %if.then9 ]
  %last.2 = phi %struct.rtx_def* [ %last.1, %for.inc ], [ %insn.0258, %if.then9 ]
  %tobool18 = icmp eq %struct.rtx_def* %last.2, null
  br i1 %tobool18, label %if.end55, label %if.then19

if.then19:                                        ; preds = %for.end
  %cmp20 = icmp eq %struct.rtx_def* %note.0.lcssa, null
  br i1 %cmp20, label %for.cond23.preheader, label %if.end41

for.cond23.preheader:                             ; preds = %if.then19
  %arrayidx25248 = getelementptr inbounds %struct.rtx_def* %last.2, i64 0, i32 1, i64 2
  %rtx26249 = bitcast %union.rtunion_def* %arrayidx25248 to %struct.rtx_def**
  %20 = load %struct.rtx_def** %rtx26249, align 8, !tbaa !9
  %tobool27250 = icmp eq %struct.rtx_def* %20, null
  br i1 %tobool27250, label %if.end41, label %for.body28

for.body28:                                       ; preds = %for.cond23.preheader, %for.cond23.backedge
  %21 = phi %struct.rtx_def* [ %24, %for.cond23.backedge ], [ %20, %for.cond23.preheader ]
  %22 = getelementptr inbounds %struct.rtx_def* %21, i64 0, i32 0
  %bf.load29 = load i32* %22, align 8
  %bf.clear30 = and i32 %bf.load29, 65535
  %cmp31 = icmp eq i32 %bf.clear30, 37
  br i1 %cmp31, label %land.lhs.true, label %for.cond23.backedge

land.lhs.true:                                    ; preds = %for.body28
  %arrayidx34 = getelementptr inbounds %struct.rtx_def* %21, i64 0, i32 1, i64 4
  %rtint35 = bitcast %union.rtunion_def* %arrayidx34 to i32*
  %23 = load i32* %rtint35, align 4, !tbaa !17
  %cmp36 = icmp eq i32 %23, -90
  br i1 %cmp36, label %if.end41, label %for.cond23.backedge

for.cond23.backedge:                              ; preds = %land.lhs.true, %for.body28
  %arrayidx25 = getelementptr inbounds %struct.rtx_def* %21, i64 0, i32 1, i64 2
  %rtx26 = bitcast %union.rtunion_def* %arrayidx25 to %struct.rtx_def**
  %24 = load %struct.rtx_def** %rtx26, align 8, !tbaa !9
  %tobool27 = icmp eq %struct.rtx_def* %24, null
  br i1 %tobool27, label %if.end41, label %for.body28

if.end41:                                         ; preds = %land.lhs.true, %for.cond23.backedge, %for.cond23.preheader, %if.then19
  %note.3 = phi %struct.rtx_def* [ %note.0.lcssa, %if.then19 ], [ null, %for.cond23.preheader ], [ %21, %land.lhs.true ], [ null, %for.cond23.backedge ]
  %25 = getelementptr inbounds %struct.rtx_def* %last.2, i64 0, i32 0
  %bf.load45 = load i32* %25, align 8
  %bf.clear46 = and i32 %bf.load45, 65535
  %cmp47 = icmp eq i32 %bf.clear46, 36
  br i1 %cmp47, label %if.then49, label %if.end53

if.then49:                                        ; preds = %if.end41
  %arrayidx51 = getelementptr inbounds %struct.rtx_def* %last.2, i64 0, i32 1, i64 2
  %rtx52 = bitcast %union.rtunion_def* %arrayidx51 to %struct.rtx_def**
  %26 = load %struct.rtx_def** %rtx52, align 8, !tbaa !9
  br label %if.end53

if.end53:                                         ; preds = %if.then49, %if.end41
  %last.3 = phi %struct.rtx_def* [ %26, %if.then49 ], [ %last.2, %if.end41 ]
  tail call void @reorder_insns(%struct.rtx_def* %note.3, %struct.rtx_def* %note.3, %struct.rtx_def* %last.3) #5
  br label %if.end55

if.end55:                                         ; preds = %entry, %for.end, %if.end53
  %27 = load %struct.varray_head_tag** @epilogue, align 8, !tbaa !9
  %num_elements56 = getelementptr inbounds %struct.varray_head_tag* %27, i64 0, i32 0
  %28 = load i64* %num_elements56, align 8, !tbaa !112
  %conv57 = trunc i64 %28 to i32
  %cmp58 = icmp sgt i32 %conv57, 0
  br i1 %cmp58, label %if.then60, label %if.end129

if.then60:                                        ; preds = %if.end55
  %call61 = tail call %struct.rtx_def* @get_last_insn() #5
  %tobool63235 = icmp eq %struct.rtx_def* %call61, null
  br i1 %tobool63235, label %if.end129, label %for.body64.lr.ph

for.body64.lr.ph:                                 ; preds = %if.then60
  %29 = load %struct.varray_head_tag** @epilogue, align 8, !tbaa !9
  %num_elements.i177 = getelementptr inbounds %struct.varray_head_tag* %29, i64 0, i32 0
  %data.i181 = getelementptr inbounds %struct.varray_head_tag* %29, i64 0, i32 4
  %i25.i182 = bitcast %union.varray_data_tag* %data.i181 to [1 x i32]*
  br label %for.body64

for.body64:                                       ; preds = %for.body64.lr.ph, %for.inc88
  %insn.1240 = phi %struct.rtx_def* [ %call61, %for.body64.lr.ph ], [ %49, %for.inc88 ]
  %len.2238 = phi i32 [ %conv57, %for.body64.lr.ph ], [ %len.3, %for.inc88 ]
  %note.4237 = phi %struct.rtx_def* [ null, %for.body64.lr.ph ], [ %note.5, %for.inc88 ]
  %last.4236 = phi %struct.rtx_def* [ null, %for.body64.lr.ph ], [ %last.5, %for.inc88 ]
  %30 = getelementptr inbounds %struct.rtx_def* %insn.1240, i64 0, i32 0
  %bf.load65 = load i32* %30, align 8
  %bf.clear66 = and i32 %bf.load65, 65535
  switch i32 %bf.clear66, label %if.else.i209 [
    i32 37, label %if.then69
    i32 32, label %land.lhs.true.i171
  ]

if.then69:                                        ; preds = %for.body64
  %arrayidx71 = getelementptr inbounds %struct.rtx_def* %insn.1240, i64 0, i32 1, i64 4
  %rtint72 = bitcast %union.rtunion_def* %arrayidx71 to i32*
  %31 = load i32* %rtint72, align 4, !tbaa !17
  %cmp73 = icmp eq i32 %31, -89
  %insn.1.note.4 = select i1 %cmp73, %struct.rtx_def* %insn.1240, %struct.rtx_def* %note.4237
  br label %for.inc88

land.lhs.true.i171:                               ; preds = %for.body64
  %arrayidx.i166 = getelementptr inbounds %struct.rtx_def* %insn.1240, i64 0, i32 1, i64 3
  %rtx.i167 = bitcast %union.rtunion_def* %arrayidx.i166 to %struct.rtx_def**
  %32 = load %struct.rtx_def** %rtx.i167, align 8, !tbaa !9
  %33 = getelementptr inbounds %struct.rtx_def* %32, i64 0, i32 0
  %bf.load1.i168 = load i32* %33, align 8
  %bf.clear2.i169 = and i32 %bf.load1.i168, 65535
  %cmp3.i170 = icmp eq i32 %bf.clear2.i169, 24
  br i1 %cmp3.i170, label %if.then.i176, label %if.else.i209

if.then.i176:                                     ; preds = %land.lhs.true.i171
  %arrayidx8.i172 = getelementptr inbounds %struct.rtx_def* %32, i64 0, i32 1, i64 0
  %rtvec.i173 = bitcast %union.rtunion_def* %arrayidx8.i172 to %struct.rtvec_def**
  %34 = load %struct.rtvec_def** %rtvec.i173, align 8, !tbaa !9
  %num_elem.i174 = getelementptr inbounds %struct.rtvec_def* %34, i64 0, i32 0
  %35 = load i32* %num_elem.i174, align 4, !tbaa !75
  %cmp974.i175 = icmp sgt i32 %35, 0
  br i1 %cmp974.i175, label %for.body.lr.ph.i184, label %for.inc88

for.body.lr.ph.i184:                              ; preds = %if.then.i176
  %36 = load i64* %num_elements.i177, align 8, !tbaa !112
  %sub10.i178 = add i64 %36, 4294967295
  %conv.i179 = trunc i64 %sub10.i178 to i32
  %cmp1270.i180 = icmp sgt i32 %conv.i179, -1
  %sext86.i183 = shl i64 %sub10.i178, 32
  %37 = ashr exact i64 %sext86.i183, 32
  %38 = sext i32 %35 to i64
  br label %for.body.i191

for.cond.loopexit.i187:                           ; preds = %for.body14.i204, %for.body.i191
  %count.1.lcssa.i185 = phi i32 [ %count.075.i189, %for.body.i191 ], [ %inc.count.1.i201, %for.body14.i204 ]
  %39 = trunc i64 %indvars.iv.next83.i190 to i32
  %cmp9.i186 = icmp sgt i32 %39, 0
  br i1 %cmp9.i186, label %for.body.i191, label %contains.exit224

for.body.i191:                                    ; preds = %for.cond.loopexit.i187, %for.body.lr.ph.i184
  %indvars.iv82.i188 = phi i64 [ %38, %for.body.lr.ph.i184 ], [ %indvars.iv.next83.i190, %for.cond.loopexit.i187 ]
  %count.075.i189 = phi i32 [ 0, %for.body.lr.ph.i184 ], [ %count.1.lcssa.i185, %for.cond.loopexit.i187 ]
  %indvars.iv.next83.i190 = add nsw i64 %indvars.iv82.i188, -1
  br i1 %cmp1270.i180, label %for.body14.lr.ph.i195, label %for.cond.loopexit.i187

for.body14.lr.ph.i195:                            ; preds = %for.body.i191
  %arrayidx21.i192 = getelementptr inbounds %struct.rtvec_def* %34, i64 0, i32 1, i64 %indvars.iv.next83.i190
  %40 = load %struct.rtx_def** %arrayidx21.i192, align 8, !tbaa !9
  %arrayidx23.i193 = getelementptr inbounds %struct.rtx_def* %40, i64 0, i32 1, i64 0
  %rtint.i194 = bitcast %union.rtunion_def* %arrayidx23.i193 to i32*
  %41 = load i32* %rtint.i194, align 4, !tbaa !17
  br label %for.body14.i204

for.body14.i204:                                  ; preds = %for.body14.i204, %for.body14.lr.ph.i195
  %indvars.iv.i196 = phi i64 [ %37, %for.body14.lr.ph.i195 ], [ %indvars.iv.next.i202, %for.body14.i204 ]
  %count.172.i197 = phi i32 [ %count.075.i189, %for.body14.lr.ph.i195 ], [ %inc.count.1.i201, %for.body14.i204 ]
  %arrayidx26.i198 = getelementptr inbounds [1 x i32]* %i25.i182, i64 0, i64 %indvars.iv.i196
  %42 = load i32* %arrayidx26.i198, align 4, !tbaa !17
  %cmp27.i199 = icmp eq i32 %41, %42
  %inc.i200 = zext i1 %cmp27.i199 to i32
  %inc.count.1.i201 = add nsw i32 %inc.i200, %count.172.i197
  %indvars.iv.next.i202 = add nsw i64 %indvars.iv.i196, -1
  %43 = trunc i64 %indvars.iv.i196 to i32
  %cmp12.i203 = icmp sgt i32 %43, 0
  br i1 %cmp12.i203, label %for.body14.i204, label %for.cond.loopexit.i187

if.else.i209:                                     ; preds = %for.body64, %land.lhs.true.i171
  %44 = load i64* %num_elements.i177, align 8, !tbaa !112
  %sub34.i206 = add i64 %44, 4294967295
  %conv35.i207 = trunc i64 %sub34.i206 to i32
  %cmp3778.i208 = icmp sgt i32 %conv35.i207, -1
  br i1 %cmp3778.i208, label %for.body39.lr.ph.i215, label %for.inc88

for.body39.lr.ph.i215:                            ; preds = %if.else.i209
  %arrayidx41.i210 = getelementptr inbounds %struct.rtx_def* %insn.1240, i64 0, i32 1, i64 0
  %rtint42.i211 = bitcast %union.rtunion_def* %arrayidx41.i210 to i32*
  %45 = load i32* %rtint42.i211, align 4, !tbaa !17
  %sext.i214 = shl i64 %sub34.i206, 32
  %46 = ashr exact i64 %sext.i214, 32
  br label %for.body39.i222

for.cond36.i218:                                  ; preds = %for.body39.i222
  %indvars.iv.next85.i216 = add nsw i64 %indvars.iv84.i219, -1
  %47 = trunc i64 %indvars.iv84.i219 to i32
  %cmp37.i217 = icmp sgt i32 %47, 0
  br i1 %cmp37.i217, label %for.body39.i222, label %for.inc88

for.body39.i222:                                  ; preds = %for.cond36.i218, %for.body39.lr.ph.i215
  %indvars.iv84.i219 = phi i64 [ %46, %for.body39.lr.ph.i215 ], [ %indvars.iv.next85.i216, %for.cond36.i218 ]
  %arrayidx46.i220 = getelementptr inbounds [1 x i32]* %i25.i182, i64 0, i64 %indvars.iv84.i219
  %48 = load i32* %arrayidx46.i220, align 4, !tbaa !17
  %cmp47.i221 = icmp eq i32 %45, %48
  br i1 %cmp47.i221, label %if.then80, label %for.cond36.i218

contains.exit224:                                 ; preds = %for.cond.loopexit.i187
  %tobool79 = icmp eq i32 %count.1.lcssa.i185, 0
  br i1 %tobool79, label %for.inc88, label %if.then80

if.then80:                                        ; preds = %for.body39.i222, %contains.exit224
  %dec81 = add nsw i32 %len.2238, -1
  %cmp82 = icmp eq i32 %dec81, 0
  br i1 %cmp82, label %for.end92, label %for.inc88

for.inc88:                                        ; preds = %for.cond36.i218, %if.else.i209, %if.then.i176, %if.then69, %contains.exit224, %if.then80
  %last.5 = phi %struct.rtx_def* [ %insn.1240, %if.then80 ], [ %last.4236, %contains.exit224 ], [ %last.4236, %if.then69 ], [ %last.4236, %if.then.i176 ], [ %last.4236, %if.else.i209 ], [ %last.4236, %for.cond36.i218 ]
  %note.5 = phi %struct.rtx_def* [ %note.4237, %if.then80 ], [ %note.4237, %contains.exit224 ], [ %insn.1.note.4, %if.then69 ], [ %note.4237, %if.then.i176 ], [ %note.4237, %if.else.i209 ], [ %note.4237, %for.cond36.i218 ]
  %len.3 = phi i32 [ %dec81, %if.then80 ], [ %len.2238, %contains.exit224 ], [ %len.2238, %if.then69 ], [ %len.2238, %if.then.i176 ], [ %len.2238, %if.else.i209 ], [ %len.2238, %for.cond36.i218 ]
  %arrayidx90 = getelementptr inbounds %struct.rtx_def* %insn.1240, i64 0, i32 1, i64 1
  %rtx91 = bitcast %union.rtunion_def* %arrayidx90 to %struct.rtx_def**
  %49 = load %struct.rtx_def** %rtx91, align 8, !tbaa !9
  %tobool63 = icmp eq %struct.rtx_def* %49, null
  br i1 %tobool63, label %for.end92, label %for.body64

for.end92:                                        ; preds = %if.then80, %for.inc88
  %insn.1.lcssa = phi %struct.rtx_def* [ null, %for.inc88 ], [ %insn.1240, %if.then80 ]
  %note.4.lcssa = phi %struct.rtx_def* [ %note.5, %for.inc88 ], [ %note.4237, %if.then80 ]
  %last.6 = phi %struct.rtx_def* [ %last.5, %for.inc88 ], [ %insn.1240, %if.then80 ]
  %tobool93 = icmp eq %struct.rtx_def* %last.6, null
  br i1 %tobool93, label %if.end129, label %if.then94

if.then94:                                        ; preds = %for.end92
  %cmp95 = icmp eq %struct.rtx_def* %note.4.lcssa, null
  br i1 %cmp95, label %for.cond98.preheader, label %if.end117

for.cond98.preheader:                             ; preds = %if.then94
  %arrayidx100231 = getelementptr inbounds %struct.rtx_def* %insn.1.lcssa, i64 0, i32 1, i64 1
  %rtx101232 = bitcast %union.rtunion_def* %arrayidx100231 to %struct.rtx_def**
  %50 = load %struct.rtx_def** %rtx101232, align 8, !tbaa !9
  %tobool102233 = icmp eq %struct.rtx_def* %50, null
  br i1 %tobool102233, label %if.end117, label %for.body103

for.body103:                                      ; preds = %for.cond98.preheader, %for.cond98.backedge
  %51 = phi %struct.rtx_def* [ %54, %for.cond98.backedge ], [ %50, %for.cond98.preheader ]
  %52 = getelementptr inbounds %struct.rtx_def* %51, i64 0, i32 0
  %bf.load104 = load i32* %52, align 8
  %bf.clear105 = and i32 %bf.load104, 65535
  %cmp106 = icmp eq i32 %bf.clear105, 37
  br i1 %cmp106, label %land.lhs.true108, label %for.cond98.backedge

land.lhs.true108:                                 ; preds = %for.body103
  %arrayidx110 = getelementptr inbounds %struct.rtx_def* %51, i64 0, i32 1, i64 4
  %rtint111 = bitcast %union.rtunion_def* %arrayidx110 to i32*
  %53 = load i32* %rtint111, align 4, !tbaa !17
  %cmp112 = icmp eq i32 %53, -89
  br i1 %cmp112, label %if.end117, label %for.cond98.backedge

for.cond98.backedge:                              ; preds = %land.lhs.true108, %for.body103
  %arrayidx100 = getelementptr inbounds %struct.rtx_def* %51, i64 0, i32 1, i64 1
  %rtx101 = bitcast %union.rtunion_def* %arrayidx100 to %struct.rtx_def**
  %54 = load %struct.rtx_def** %rtx101, align 8, !tbaa !9
  %tobool102 = icmp eq %struct.rtx_def* %54, null
  br i1 %tobool102, label %if.end117, label %for.body103

if.end117:                                        ; preds = %land.lhs.true108, %for.cond98.backedge, %for.cond98.preheader, %if.then94
  %note.7 = phi %struct.rtx_def* [ %note.4.lcssa, %if.then94 ], [ null, %for.cond98.preheader ], [ %51, %land.lhs.true108 ], [ null, %for.cond98.backedge ]
  %arrayidx119 = getelementptr inbounds %struct.rtx_def* %last.6, i64 0, i32 1, i64 1
  %rtx120 = bitcast %union.rtunion_def* %arrayidx119 to %struct.rtx_def**
  %55 = load %struct.rtx_def** %rtx120, align 8, !tbaa !9
  %cmp121 = icmp eq %struct.rtx_def* %55, %note.7
  br i1 %cmp121, label %if.end129, label %if.then123

if.then123:                                       ; preds = %if.end117
  tail call void @reorder_insns(%struct.rtx_def* %note.7, %struct.rtx_def* %note.7, %struct.rtx_def* %55) #5
  br label %if.end129

if.end129:                                        ; preds = %if.then60, %if.end117, %for.end92, %if.then123, %if.end55
  ret void
}

; Function Attrs: nounwind uwtable
define void @ggc_mark_struct_function(%struct.function* %f) #0 {
entry:
  br label %tailrecurse

tailrecurse:                                      ; preds = %if.end60, %entry
  %f.tr = phi %struct.function* [ %f, %entry ], [ %112, %if.end60 ]
  %cmp = icmp eq %struct.function* %f.tr, null
  br i1 %cmp, label %do.body1, label %if.then

if.then:                                          ; preds = %tailrecurse
  %0 = bitcast %struct.function* %f.tr to i8*
  %call = tail call i32 @ggc_set_mark(i8* %0) #5
  br label %do.body1

do.body1:                                         ; preds = %tailrecurse, %if.then
  %decl = getelementptr inbounds %struct.function* %f.tr, i64 0, i32 6
  %1 = load %union.tree_node** %decl, align 8, !tbaa !1
  %cmp2 = icmp eq %union.tree_node* %1, null
  br i1 %cmp2, label %do.end14, label %land.lhs.true

land.lhs.true:                                    ; preds = %do.body1
  %2 = bitcast %union.tree_node* %1 to i8*
  %call3 = tail call i32 @ggc_set_mark(i8* %2) #5
  %tobool = icmp eq i32 %call3, 0
  br i1 %tobool, label %do.body5, label %do.end14

do.body5:                                         ; preds = %land.lhs.true
  %3 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !9
  %elements_used = getelementptr inbounds %struct.varray_head_tag* %3, i64 0, i32 1
  %4 = load i64* %elements_used, align 8, !tbaa !110
  %num_elements = getelementptr inbounds %struct.varray_head_tag* %3, i64 0, i32 0
  %5 = load i64* %num_elements, align 8, !tbaa !112
  %cmp6 = icmp ult i64 %4, %5
  br i1 %cmp6, label %if.end10, label %if.then7

if.then7:                                         ; preds = %do.body5
  %mul = shl i64 %5, 1
  %call9 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %3, i64 %mul) #5
  store %struct.varray_head_tag* %call9, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !9
  %elements_used11.phi.trans.insert = getelementptr inbounds %struct.varray_head_tag* %call9, i64 0, i32 1
  %.pre87 = load i64* %elements_used11.phi.trans.insert, align 8, !tbaa !110
  br label %if.end10

if.end10:                                         ; preds = %do.body5, %if.then7
  %6 = phi i64 [ %4, %do.body5 ], [ %.pre87, %if.then7 ]
  %7 = phi %struct.varray_head_tag* [ %3, %do.body5 ], [ %call9, %if.then7 ]
  %elements_used11 = getelementptr inbounds %struct.varray_head_tag* %7, i64 0, i32 1
  %inc = add i64 %6, 1
  store i64 %inc, i64* %elements_used11, align 8, !tbaa !110
  %data = getelementptr inbounds %struct.varray_head_tag* %7, i64 0, i32 4
  %tree = bitcast %union.varray_data_tag* %data to [1 x %union.tree_node*]*
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*]* %tree, i64 0, i64 %6
  store %union.tree_node* %1, %union.tree_node** %arrayidx, align 8, !tbaa !9
  br label %do.end14

do.end14:                                         ; preds = %land.lhs.true, %do.body1, %if.end10
  br i1 %cmp, label %mark_function_status.exit, label %do.body.i

do.body.i:                                        ; preds = %do.end14
  %arg_offset_rtx.i = getelementptr inbounds %struct.function* %f.tr, i64 0, i32 12
  %8 = load %struct.rtx_def** %arg_offset_rtx.i, align 8, !tbaa !32
  %cmp1.i = icmp eq %struct.rtx_def* %8, null
  br i1 %cmp1.i, label %do.end.i, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %do.body.i
  %9 = bitcast %struct.rtx_def* %8 to i8*
  %call.i = tail call i32 @ggc_set_mark(i8* %9) #5
  %tobool.i = icmp eq i32 %call.i, 0
  br i1 %tobool.i, label %if.then2.i, label %do.end.i

if.then2.i:                                       ; preds = %land.lhs.true.i
  tail call void @ggc_mark_rtx_children(%struct.rtx_def* %8) #5
  br label %do.end.i

do.end.i:                                         ; preds = %if.then2.i, %land.lhs.true.i, %do.body.i
  %x_parm_reg_stack_loc.i = getelementptr inbounds %struct.function* %f.tr, i64 0, i32 38
  %10 = load %struct.rtx_def*** %x_parm_reg_stack_loc.i, align 8, !tbaa !31
  %tobool4.i = icmp eq %struct.rtx_def** %10, null
  br i1 %tobool4.i, label %do.body18.i, label %if.then5.i

if.then5.i:                                       ; preds = %do.end.i
  %x_max_parm_reg.i = getelementptr inbounds %struct.function* %f.tr, i64 0, i32 37
  %11 = load i32* %x_max_parm_reg.i, align 4, !tbaa !64
  %cmp7449.i = icmp sgt i32 %11, 0
  br i1 %cmp7449.i, label %do.body8.i, label %do.body18.i

do.body8.i:                                       ; preds = %if.then5.i, %for.inc.i
  %i.0451.i = phi i32 [ %dec.i, %for.inc.i ], [ %11, %if.then5.i ]
  %r.0450.i = phi %struct.rtx_def** [ %incdec.ptr.i, %for.inc.i ], [ %10, %if.then5.i ]
  %12 = load %struct.rtx_def** %r.0450.i, align 8, !tbaa !9
  %cmp10.i = icmp eq %struct.rtx_def* %12, null
  br i1 %cmp10.i, label %for.inc.i, label %land.lhs.true11.i

land.lhs.true11.i:                                ; preds = %do.body8.i
  %13 = bitcast %struct.rtx_def* %12 to i8*
  %call12.i = tail call i32 @ggc_set_mark(i8* %13) #5
  %tobool13.i = icmp eq i32 %call12.i, 0
  br i1 %tobool13.i, label %if.then14.i, label %for.inc.i

if.then14.i:                                      ; preds = %land.lhs.true11.i
  tail call void @ggc_mark_rtx_children(%struct.rtx_def* %12) #5
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then14.i, %land.lhs.true11.i, %do.body8.i
  %dec.i = add nsw i32 %i.0451.i, -1
  %incdec.ptr.i = getelementptr inbounds %struct.rtx_def** %r.0450.i, i64 1
  %cmp7.i = icmp sgt i32 %dec.i, 0
  br i1 %cmp7.i, label %do.body8.i, label %do.body18.i

do.body18.i:                                      ; preds = %for.inc.i, %if.then5.i, %do.end.i
  %return_rtx.i = getelementptr inbounds %struct.function* %f.tr, i64 0, i32 14
  %14 = load %struct.rtx_def** %return_rtx.i, align 8, !tbaa !97
  %cmp20.i = icmp eq %struct.rtx_def* %14, null
  br i1 %cmp20.i, label %do.body27.i, label %land.lhs.true21.i

land.lhs.true21.i:                                ; preds = %do.body18.i
  %15 = bitcast %struct.rtx_def* %14 to i8*
  %call22.i = tail call i32 @ggc_set_mark(i8* %15) #5
  %tobool23.i = icmp eq i32 %call22.i, 0
  br i1 %tobool23.i, label %if.then24.i, label %do.body27.i

if.then24.i:                                      ; preds = %land.lhs.true21.i
  tail call void @ggc_mark_rtx_children(%struct.rtx_def* %14) #5
  br label %do.body27.i

do.body27.i:                                      ; preds = %if.then24.i, %land.lhs.true21.i, %do.body18.i
  %x_cleanup_label.i = getelementptr inbounds %struct.function* %f.tr, i64 0, i32 23
  %16 = load %struct.rtx_def** %x_cleanup_label.i, align 8, !tbaa !129
  %cmp29.i = icmp eq %struct.rtx_def* %16, null
  br i1 %cmp29.i, label %do.body36.i, label %land.lhs.true30.i

land.lhs.true30.i:                                ; preds = %do.body27.i
  %17 = bitcast %struct.rtx_def* %16 to i8*
  %call31.i = tail call i32 @ggc_set_mark(i8* %17) #5
  %tobool32.i = icmp eq i32 %call31.i, 0
  br i1 %tobool32.i, label %if.then33.i, label %do.body36.i

if.then33.i:                                      ; preds = %land.lhs.true30.i
  tail call void @ggc_mark_rtx_children(%struct.rtx_def* %16) #5
  br label %do.body36.i

do.body36.i:                                      ; preds = %if.then33.i, %land.lhs.true30.i, %do.body27.i
  %x_return_label.i = getelementptr inbounds %struct.function* %f.tr, i64 0, i32 24
  %18 = load %struct.rtx_def** %x_return_label.i, align 8, !tbaa !130
  %cmp38.i = icmp eq %struct.rtx_def* %18, null
  br i1 %cmp38.i, label %do.body45.i, label %land.lhs.true39.i

land.lhs.true39.i:                                ; preds = %do.body36.i
  %19 = bitcast %struct.rtx_def* %18 to i8*
  %call40.i = tail call i32 @ggc_set_mark(i8* %19) #5
  %tobool41.i = icmp eq i32 %call40.i, 0
  br i1 %tobool41.i, label %if.then42.i, label %do.body45.i

if.then42.i:                                      ; preds = %land.lhs.true39.i
  tail call void @ggc_mark_rtx_children(%struct.rtx_def* %18) #5
  br label %do.body45.i

do.body45.i:                                      ; preds = %if.then42.i, %land.lhs.true39.i, %do.body36.i
  %x_save_expr_regs.i = getelementptr inbounds %struct.function* %f.tr, i64 0, i32 25
  %20 = load %struct.rtx_def** %x_save_expr_regs.i, align 8, !tbaa !124
  %cmp47.i = icmp eq %struct.rtx_def* %20, null
  br i1 %cmp47.i, label %do.body54.i, label %land.lhs.true48.i

land.lhs.true48.i:                                ; preds = %do.body45.i
  %21 = bitcast %struct.rtx_def* %20 to i8*
  %call49.i = tail call i32 @ggc_set_mark(i8* %21) #5
  %tobool50.i = icmp eq i32 %call49.i, 0
  br i1 %tobool50.i, label %if.then51.i, label %do.body54.i

if.then51.i:                                      ; preds = %land.lhs.true48.i
  tail call void @ggc_mark_rtx_children(%struct.rtx_def* %20) #5
  br label %do.body54.i

do.body54.i:                                      ; preds = %if.then51.i, %land.lhs.true48.i, %do.body45.i
  %x_stack_slot_list.i = getelementptr inbounds %struct.function* %f.tr, i64 0, i32 26
  %22 = load %struct.rtx_def** %x_stack_slot_list.i, align 8, !tbaa !36
  %cmp56.i = icmp eq %struct.rtx_def* %22, null
  br i1 %cmp56.i, label %do.body63.i, label %land.lhs.true57.i

land.lhs.true57.i:                                ; preds = %do.body54.i
  %23 = bitcast %struct.rtx_def* %22 to i8*
  %call58.i = tail call i32 @ggc_set_mark(i8* %23) #5
  %tobool59.i = icmp eq i32 %call58.i, 0
  br i1 %tobool59.i, label %if.then60.i, label %do.body63.i

if.then60.i:                                      ; preds = %land.lhs.true57.i
  tail call void @ggc_mark_rtx_children(%struct.rtx_def* %22) #5
  br label %do.body63.i

do.body63.i:                                      ; preds = %if.then60.i, %land.lhs.true57.i, %do.body54.i
  %x_parm_birth_insn.i = getelementptr inbounds %struct.function* %f.tr, i64 0, i32 35
  %24 = load %struct.rtx_def** %x_parm_birth_insn.i, align 8, !tbaa !131
  %cmp65.i = icmp eq %struct.rtx_def* %24, null
  br i1 %cmp65.i, label %do.body72.i, label %land.lhs.true66.i

land.lhs.true66.i:                                ; preds = %do.body63.i
  %25 = bitcast %struct.rtx_def* %24 to i8*
  %call67.i = tail call i32 @ggc_set_mark(i8* %25) #5
  %tobool68.i = icmp eq i32 %call67.i, 0
  br i1 %tobool68.i, label %if.then69.i, label %do.body72.i

if.then69.i:                                      ; preds = %land.lhs.true66.i
  tail call void @ggc_mark_rtx_children(%struct.rtx_def* %24) #5
  br label %do.body72.i

do.body72.i:                                      ; preds = %if.then69.i, %land.lhs.true66.i, %do.body63.i
  %x_tail_recursion_label.i = getelementptr inbounds %struct.function* %f.tr, i64 0, i32 28
  %26 = load %struct.rtx_def** %x_tail_recursion_label.i, align 8, !tbaa !123
  %cmp74.i = icmp eq %struct.rtx_def* %26, null
  br i1 %cmp74.i, label %do.body81.i, label %land.lhs.true75.i

land.lhs.true75.i:                                ; preds = %do.body72.i
  %27 = bitcast %struct.rtx_def* %26 to i8*
  %call76.i = tail call i32 @ggc_set_mark(i8* %27) #5
  %tobool77.i = icmp eq i32 %call76.i, 0
  br i1 %tobool77.i, label %if.then78.i, label %do.body81.i

if.then78.i:                                      ; preds = %land.lhs.true75.i
  tail call void @ggc_mark_rtx_children(%struct.rtx_def* %26) #5
  br label %do.body81.i

do.body81.i:                                      ; preds = %if.then78.i, %land.lhs.true75.i, %do.body72.i
  %x_tail_recursion_reentry.i = getelementptr inbounds %struct.function* %f.tr, i64 0, i32 29
  %28 = load %struct.rtx_def** %x_tail_recursion_reentry.i, align 8, !tbaa !134
  %cmp83.i = icmp eq %struct.rtx_def* %28, null
  br i1 %cmp83.i, label %do.body90.i, label %land.lhs.true84.i

land.lhs.true84.i:                                ; preds = %do.body81.i
  %29 = bitcast %struct.rtx_def* %28 to i8*
  %call85.i = tail call i32 @ggc_set_mark(i8* %29) #5
  %tobool86.i = icmp eq i32 %call85.i, 0
  br i1 %tobool86.i, label %if.then87.i, label %do.body90.i

if.then87.i:                                      ; preds = %land.lhs.true84.i
  tail call void @ggc_mark_rtx_children(%struct.rtx_def* %28) #5
  br label %do.body90.i

do.body90.i:                                      ; preds = %if.then87.i, %land.lhs.true84.i, %do.body81.i
  %internal_arg_pointer.i = getelementptr inbounds %struct.function* %f.tr, i64 0, i32 15
  %30 = load %struct.rtx_def** %internal_arg_pointer.i, align 8, !tbaa !84
  %cmp92.i = icmp eq %struct.rtx_def* %30, null
  br i1 %cmp92.i, label %do.body99.i, label %land.lhs.true93.i

land.lhs.true93.i:                                ; preds = %do.body90.i
  %31 = bitcast %struct.rtx_def* %30 to i8*
  %call94.i = tail call i32 @ggc_set_mark(i8* %31) #5
  %tobool95.i = icmp eq i32 %call94.i, 0
  br i1 %tobool95.i, label %if.then96.i, label %do.body99.i

if.then96.i:                                      ; preds = %land.lhs.true93.i
  tail call void @ggc_mark_rtx_children(%struct.rtx_def* %30) #5
  br label %do.body99.i

do.body99.i:                                      ; preds = %if.then96.i, %land.lhs.true93.i, %do.body90.i
  %x_arg_pointer_save_area.i = getelementptr inbounds %struct.function* %f.tr, i64 0, i32 30
  %32 = load %struct.rtx_def** %x_arg_pointer_save_area.i, align 8, !tbaa !103
  %cmp101.i = icmp eq %struct.rtx_def* %32, null
  br i1 %cmp101.i, label %do.body108.i, label %land.lhs.true102.i

land.lhs.true102.i:                               ; preds = %do.body99.i
  %33 = bitcast %struct.rtx_def* %32 to i8*
  %call103.i = tail call i32 @ggc_set_mark(i8* %33) #5
  %tobool104.i = icmp eq i32 %call103.i, 0
  br i1 %tobool104.i, label %if.then105.i, label %do.body108.i

if.then105.i:                                     ; preds = %land.lhs.true102.i
  tail call void @ggc_mark_rtx_children(%struct.rtx_def* %32) #5
  br label %do.body108.i

do.body108.i:                                     ; preds = %if.then105.i, %land.lhs.true102.i, %do.body99.i
  %x_rtl_expr_chain.i = getelementptr inbounds %struct.function* %f.tr, i64 0, i32 27
  %34 = load %union.tree_node** %x_rtl_expr_chain.i, align 8, !tbaa !21
  %cmp109.i = icmp eq %union.tree_node* %34, null
  br i1 %cmp109.i, label %do.body124.i, label %land.lhs.true110.i

land.lhs.true110.i:                               ; preds = %do.body108.i
  %35 = bitcast %union.tree_node* %34 to i8*
  %call111.i = tail call i32 @ggc_set_mark(i8* %35) #5
  %tobool112.i = icmp eq i32 %call111.i, 0
  br i1 %tobool112.i, label %do.body114.i, label %do.body124.i

do.body114.i:                                     ; preds = %land.lhs.true110.i
  %36 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !9
  %elements_used.i = getelementptr inbounds %struct.varray_head_tag* %36, i64 0, i32 1
  %37 = load i64* %elements_used.i, align 8, !tbaa !110
  %num_elements.i = getelementptr inbounds %struct.varray_head_tag* %36, i64 0, i32 0
  %38 = load i64* %num_elements.i, align 8, !tbaa !112
  %cmp115.i = icmp ult i64 %37, %38
  br i1 %cmp115.i, label %if.end119.i, label %if.then116.i

if.then116.i:                                     ; preds = %do.body114.i
  %mul.i = shl i64 %38, 1
  %call118.i = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %36, i64 %mul.i) #5
  store %struct.varray_head_tag* %call118.i, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !9
  %elements_used120.phi.trans.insert.i = getelementptr inbounds %struct.varray_head_tag* %call118.i, i64 0, i32 1
  %.pre456.i = load i64* %elements_used120.phi.trans.insert.i, align 8, !tbaa !110
  br label %if.end119.i

if.end119.i:                                      ; preds = %if.then116.i, %do.body114.i
  %39 = phi i64 [ %37, %do.body114.i ], [ %.pre456.i, %if.then116.i ]
  %40 = phi %struct.varray_head_tag* [ %36, %do.body114.i ], [ %call118.i, %if.then116.i ]
  %elements_used120.i = getelementptr inbounds %struct.varray_head_tag* %40, i64 0, i32 1
  %inc.i = add i64 %39, 1
  store i64 %inc.i, i64* %elements_used120.i, align 8, !tbaa !110
  %data.i = getelementptr inbounds %struct.varray_head_tag* %40, i64 0, i32 4
  %tree.i = bitcast %union.varray_data_tag* %data.i to [1 x %union.tree_node*]*
  %arrayidx.i = getelementptr inbounds [1 x %union.tree_node*]* %tree.i, i64 0, i64 %39
  store %union.tree_node* %34, %union.tree_node** %arrayidx.i, align 8, !tbaa !9
  br label %do.body124.i

do.body124.i:                                     ; preds = %if.end119.i, %land.lhs.true110.i, %do.body108.i
  %x_last_parm_insn.i = getelementptr inbounds %struct.function* %f.tr, i64 0, i32 36
  %41 = load %struct.rtx_def** %x_last_parm_insn.i, align 8, !tbaa !78
  %cmp126.i = icmp eq %struct.rtx_def* %41, null
  br i1 %cmp126.i, label %do.body133.i, label %land.lhs.true127.i

land.lhs.true127.i:                               ; preds = %do.body124.i
  %42 = bitcast %struct.rtx_def* %41 to i8*
  %call128.i = tail call i32 @ggc_set_mark(i8* %42) #5
  %tobool129.i = icmp eq i32 %call128.i, 0
  br i1 %tobool129.i, label %if.then130.i, label %do.body133.i

if.then130.i:                                     ; preds = %land.lhs.true127.i
  tail call void @ggc_mark_rtx_children(%struct.rtx_def* %41) #5
  br label %do.body133.i

do.body133.i:                                     ; preds = %if.then130.i, %land.lhs.true127.i, %do.body124.i
  %x_context_display.i = getelementptr inbounds %struct.function* %f.tr, i64 0, i32 33
  %43 = load %union.tree_node** %x_context_display.i, align 8, !tbaa !132
  %cmp135.i = icmp eq %union.tree_node* %43, null
  br i1 %cmp135.i, label %do.body157.i, label %land.lhs.true136.i

land.lhs.true136.i:                               ; preds = %do.body133.i
  %44 = bitcast %union.tree_node* %43 to i8*
  %call137.i = tail call i32 @ggc_set_mark(i8* %44) #5
  %tobool138.i = icmp eq i32 %call137.i, 0
  br i1 %tobool138.i, label %do.body140.i, label %do.body157.i

do.body140.i:                                     ; preds = %land.lhs.true136.i
  %45 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !9
  %elements_used141.i = getelementptr inbounds %struct.varray_head_tag* %45, i64 0, i32 1
  %46 = load i64* %elements_used141.i, align 8, !tbaa !110
  %num_elements142.i = getelementptr inbounds %struct.varray_head_tag* %45, i64 0, i32 0
  %47 = load i64* %num_elements142.i, align 8, !tbaa !112
  %cmp143.i = icmp ult i64 %46, %47
  br i1 %cmp143.i, label %if.end148.i, label %if.then144.i

if.then144.i:                                     ; preds = %do.body140.i
  %mul146.i = shl i64 %47, 1
  %call147.i = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %45, i64 %mul146.i) #5
  store %struct.varray_head_tag* %call147.i, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !9
  %elements_used149.phi.trans.insert.i = getelementptr inbounds %struct.varray_head_tag* %call147.i, i64 0, i32 1
  %.pre455.i = load i64* %elements_used149.phi.trans.insert.i, align 8, !tbaa !110
  br label %if.end148.i

if.end148.i:                                      ; preds = %if.then144.i, %do.body140.i
  %48 = phi i64 [ %46, %do.body140.i ], [ %.pre455.i, %if.then144.i ]
  %49 = phi %struct.varray_head_tag* [ %45, %do.body140.i ], [ %call147.i, %if.then144.i ]
  %elements_used149.i = getelementptr inbounds %struct.varray_head_tag* %49, i64 0, i32 1
  %inc150.i = add i64 %48, 1
  store i64 %inc150.i, i64* %elements_used149.i, align 8, !tbaa !110
  %data151.i = getelementptr inbounds %struct.varray_head_tag* %49, i64 0, i32 4
  %tree152.i = bitcast %union.varray_data_tag* %data151.i to [1 x %union.tree_node*]*
  %arrayidx153.i = getelementptr inbounds [1 x %union.tree_node*]* %tree152.i, i64 0, i64 %48
  store %union.tree_node* %43, %union.tree_node** %arrayidx153.i, align 8, !tbaa !9
  br label %do.body157.i

do.body157.i:                                     ; preds = %if.end148.i, %land.lhs.true136.i, %do.body133.i
  %x_trampoline_list.i = getelementptr inbounds %struct.function* %f.tr, i64 0, i32 34
  %50 = load %union.tree_node** %x_trampoline_list.i, align 8, !tbaa !104
  %cmp159.i = icmp eq %union.tree_node* %50, null
  br i1 %cmp159.i, label %do.body181.i, label %land.lhs.true160.i

land.lhs.true160.i:                               ; preds = %do.body157.i
  %51 = bitcast %union.tree_node* %50 to i8*
  %call161.i = tail call i32 @ggc_set_mark(i8* %51) #5
  %tobool162.i = icmp eq i32 %call161.i, 0
  br i1 %tobool162.i, label %do.body164.i, label %do.body181.i

do.body164.i:                                     ; preds = %land.lhs.true160.i
  %52 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !9
  %elements_used165.i = getelementptr inbounds %struct.varray_head_tag* %52, i64 0, i32 1
  %53 = load i64* %elements_used165.i, align 8, !tbaa !110
  %num_elements166.i = getelementptr inbounds %struct.varray_head_tag* %52, i64 0, i32 0
  %54 = load i64* %num_elements166.i, align 8, !tbaa !112
  %cmp167.i = icmp ult i64 %53, %54
  br i1 %cmp167.i, label %if.end172.i, label %if.then168.i

if.then168.i:                                     ; preds = %do.body164.i
  %mul170.i = shl i64 %54, 1
  %call171.i = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %52, i64 %mul170.i) #5
  store %struct.varray_head_tag* %call171.i, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !9
  %elements_used173.phi.trans.insert.i = getelementptr inbounds %struct.varray_head_tag* %call171.i, i64 0, i32 1
  %.pre454.i = load i64* %elements_used173.phi.trans.insert.i, align 8, !tbaa !110
  br label %if.end172.i

if.end172.i:                                      ; preds = %if.then168.i, %do.body164.i
  %55 = phi i64 [ %53, %do.body164.i ], [ %.pre454.i, %if.then168.i ]
  %56 = phi %struct.varray_head_tag* [ %52, %do.body164.i ], [ %call171.i, %if.then168.i ]
  %elements_used173.i = getelementptr inbounds %struct.varray_head_tag* %56, i64 0, i32 1
  %inc174.i = add i64 %55, 1
  store i64 %inc174.i, i64* %elements_used173.i, align 8, !tbaa !110
  %data175.i = getelementptr inbounds %struct.varray_head_tag* %56, i64 0, i32 4
  %tree176.i = bitcast %union.varray_data_tag* %data175.i to [1 x %union.tree_node*]*
  %arrayidx177.i = getelementptr inbounds [1 x %union.tree_node*]* %tree176.i, i64 0, i64 %55
  store %union.tree_node* %50, %union.tree_node** %arrayidx177.i, align 8, !tbaa !9
  br label %do.body181.i

do.body181.i:                                     ; preds = %if.end172.i, %land.lhs.true160.i, %do.body157.i
  %epilogue_delay_list.i = getelementptr inbounds %struct.function* %f.tr, i64 0, i32 55
  %57 = load %struct.rtx_def** %epilogue_delay_list.i, align 8, !tbaa !33
  %cmp183.i = icmp eq %struct.rtx_def* %57, null
  br i1 %cmp183.i, label %do.body190.i, label %land.lhs.true184.i

land.lhs.true184.i:                               ; preds = %do.body181.i
  %58 = bitcast %struct.rtx_def* %57 to i8*
  %call185.i = tail call i32 @ggc_set_mark(i8* %58) #5
  %tobool186.i = icmp eq i32 %call185.i, 0
  br i1 %tobool186.i, label %if.then187.i, label %do.body190.i

if.then187.i:                                     ; preds = %land.lhs.true184.i
  tail call void @ggc_mark_rtx_children(%struct.rtx_def* %57) #5
  br label %do.body190.i

do.body190.i:                                     ; preds = %if.then187.i, %land.lhs.true184.i, %do.body181.i
  %x_clobber_return_insn.i = getelementptr inbounds %struct.function* %f.tr, i64 0, i32 31
  %59 = load %struct.rtx_def** %x_clobber_return_insn.i, align 8, !tbaa !135
  %cmp192.i = icmp eq %struct.rtx_def* %59, null
  br i1 %cmp192.i, label %do.end198.i, label %land.lhs.true193.i

land.lhs.true193.i:                               ; preds = %do.body190.i
  %60 = bitcast %struct.rtx_def* %59 to i8*
  %call194.i = tail call i32 @ggc_set_mark(i8* %60) #5
  %tobool195.i = icmp eq i32 %call194.i, 0
  br i1 %tobool195.i, label %if.then196.i, label %do.end198.i

if.then196.i:                                     ; preds = %land.lhs.true193.i
  tail call void @ggc_mark_rtx_children(%struct.rtx_def* %59) #5
  br label %do.end198.i

do.end198.i:                                      ; preds = %if.then196.i, %land.lhs.true193.i, %do.body190.i
  %x_temp_slots.i = getelementptr inbounds %struct.function* %f.tr, i64 0, i32 39
  %t.0446.i = load %struct.temp_slot** %x_temp_slots.i, align 8
  %cmp200447.i = icmp eq %struct.temp_slot* %t.0446.i, null
  br i1 %cmp200447.i, label %for.end275.i, label %if.then204.i

if.then204.i:                                     ; preds = %do.end198.i, %for.inc274.i
  %t.0448.i = phi %struct.temp_slot* [ %t.0.i, %for.inc274.i ], [ %t.0446.i, %do.end198.i ]
  %61 = bitcast %struct.temp_slot* %t.0448.i to i8*
  %call205.i = tail call i32 @ggc_set_mark(i8* %61) #5
  %slot.i = getelementptr inbounds %struct.temp_slot* %t.0448.i, i64 0, i32 1
  %62 = load %struct.rtx_def** %slot.i, align 8, !tbaa !40
  %cmp210.i = icmp eq %struct.rtx_def* %62, null
  br i1 %cmp210.i, label %do.body217.i, label %land.lhs.true211.i

land.lhs.true211.i:                               ; preds = %if.then204.i
  %63 = bitcast %struct.rtx_def* %62 to i8*
  %call212.i = tail call i32 @ggc_set_mark(i8* %63) #5
  %tobool213.i = icmp eq i32 %call212.i, 0
  br i1 %tobool213.i, label %if.then214.i, label %do.body217.i

if.then214.i:                                     ; preds = %land.lhs.true211.i
  tail call void @ggc_mark_rtx_children(%struct.rtx_def* %62) #5
  br label %do.body217.i

do.body217.i:                                     ; preds = %if.then214.i, %land.lhs.true211.i, %if.then204.i
  %address.i = getelementptr inbounds %struct.temp_slot* %t.0448.i, i64 0, i32 2
  %64 = load %struct.rtx_def** %address.i, align 8, !tbaa !46
  %cmp219.i = icmp eq %struct.rtx_def* %64, null
  br i1 %cmp219.i, label %do.body226.i, label %land.lhs.true220.i

land.lhs.true220.i:                               ; preds = %do.body217.i
  %65 = bitcast %struct.rtx_def* %64 to i8*
  %call221.i = tail call i32 @ggc_set_mark(i8* %65) #5
  %tobool222.i = icmp eq i32 %call221.i, 0
  br i1 %tobool222.i, label %if.then223.i, label %do.body226.i

if.then223.i:                                     ; preds = %land.lhs.true220.i
  tail call void @ggc_mark_rtx_children(%struct.rtx_def* %64) #5
  br label %do.body226.i

do.body226.i:                                     ; preds = %if.then223.i, %land.lhs.true220.i, %do.body217.i
  %rtl_expr.i = getelementptr inbounds %struct.temp_slot* %t.0448.i, i64 0, i32 6
  %66 = load %union.tree_node** %rtl_expr.i, align 8, !tbaa !47
  %cmp228.i = icmp eq %union.tree_node* %66, null
  br i1 %cmp228.i, label %do.body250.i, label %land.lhs.true229.i

land.lhs.true229.i:                               ; preds = %do.body226.i
  %67 = bitcast %union.tree_node* %66 to i8*
  %call230.i = tail call i32 @ggc_set_mark(i8* %67) #5
  %tobool231.i = icmp eq i32 %call230.i, 0
  br i1 %tobool231.i, label %do.body233.i, label %do.body250.i

do.body233.i:                                     ; preds = %land.lhs.true229.i
  %68 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !9
  %elements_used234.i = getelementptr inbounds %struct.varray_head_tag* %68, i64 0, i32 1
  %69 = load i64* %elements_used234.i, align 8, !tbaa !110
  %num_elements235.i = getelementptr inbounds %struct.varray_head_tag* %68, i64 0, i32 0
  %70 = load i64* %num_elements235.i, align 8, !tbaa !112
  %cmp236.i = icmp ult i64 %69, %70
  br i1 %cmp236.i, label %if.end241.i, label %if.then237.i

if.then237.i:                                     ; preds = %do.body233.i
  %mul239.i = shl i64 %70, 1
  %call240.i = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %68, i64 %mul239.i) #5
  store %struct.varray_head_tag* %call240.i, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !9
  %elements_used242.phi.trans.insert.i = getelementptr inbounds %struct.varray_head_tag* %call240.i, i64 0, i32 1
  %.pre453.i = load i64* %elements_used242.phi.trans.insert.i, align 8, !tbaa !110
  br label %if.end241.i

if.end241.i:                                      ; preds = %if.then237.i, %do.body233.i
  %71 = phi i64 [ %69, %do.body233.i ], [ %.pre453.i, %if.then237.i ]
  %72 = phi %struct.varray_head_tag* [ %68, %do.body233.i ], [ %call240.i, %if.then237.i ]
  %elements_used242.i = getelementptr inbounds %struct.varray_head_tag* %72, i64 0, i32 1
  %inc243.i = add i64 %71, 1
  store i64 %inc243.i, i64* %elements_used242.i, align 8, !tbaa !110
  %data244.i = getelementptr inbounds %struct.varray_head_tag* %72, i64 0, i32 4
  %tree245.i = bitcast %union.varray_data_tag* %data244.i to [1 x %union.tree_node*]*
  %arrayidx246.i = getelementptr inbounds [1 x %union.tree_node*]* %tree245.i, i64 0, i64 %71
  store %union.tree_node* %66, %union.tree_node** %arrayidx246.i, align 8, !tbaa !9
  br label %do.body250.i

do.body250.i:                                     ; preds = %if.end241.i, %land.lhs.true229.i, %do.body226.i
  %type.i = getelementptr inbounds %struct.temp_slot* %t.0448.i, i64 0, i32 5
  %73 = load %union.tree_node** %type.i, align 8, !tbaa !42
  %cmp252.i = icmp eq %union.tree_node* %73, null
  br i1 %cmp252.i, label %for.inc274.i, label %land.lhs.true253.i

land.lhs.true253.i:                               ; preds = %do.body250.i
  %74 = bitcast %union.tree_node* %73 to i8*
  %call254.i = tail call i32 @ggc_set_mark(i8* %74) #5
  %tobool255.i = icmp eq i32 %call254.i, 0
  br i1 %tobool255.i, label %do.body257.i, label %for.inc274.i

do.body257.i:                                     ; preds = %land.lhs.true253.i
  %75 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !9
  %elements_used258.i = getelementptr inbounds %struct.varray_head_tag* %75, i64 0, i32 1
  %76 = load i64* %elements_used258.i, align 8, !tbaa !110
  %num_elements259.i = getelementptr inbounds %struct.varray_head_tag* %75, i64 0, i32 0
  %77 = load i64* %num_elements259.i, align 8, !tbaa !112
  %cmp260.i = icmp ult i64 %76, %77
  br i1 %cmp260.i, label %if.end265.i, label %if.then261.i

if.then261.i:                                     ; preds = %do.body257.i
  %mul263.i = shl i64 %77, 1
  %call264.i = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %75, i64 %mul263.i) #5
  store %struct.varray_head_tag* %call264.i, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !9
  %elements_used266.phi.trans.insert.i = getelementptr inbounds %struct.varray_head_tag* %call264.i, i64 0, i32 1
  %.pre452.i = load i64* %elements_used266.phi.trans.insert.i, align 8, !tbaa !110
  br label %if.end265.i

if.end265.i:                                      ; preds = %if.then261.i, %do.body257.i
  %78 = phi i64 [ %76, %do.body257.i ], [ %.pre452.i, %if.then261.i ]
  %79 = phi %struct.varray_head_tag* [ %75, %do.body257.i ], [ %call264.i, %if.then261.i ]
  %elements_used266.i = getelementptr inbounds %struct.varray_head_tag* %79, i64 0, i32 1
  %inc267.i = add i64 %78, 1
  store i64 %inc267.i, i64* %elements_used266.i, align 8, !tbaa !110
  %data268.i = getelementptr inbounds %struct.varray_head_tag* %79, i64 0, i32 4
  %tree269.i = bitcast %union.varray_data_tag* %data268.i to [1 x %union.tree_node*]*
  %arrayidx270.i = getelementptr inbounds [1 x %union.tree_node*]* %tree269.i, i64 0, i64 %78
  store %union.tree_node* %73, %union.tree_node** %arrayidx270.i, align 8, !tbaa !9
  br label %for.inc274.i

for.inc274.i:                                     ; preds = %if.end265.i, %land.lhs.true253.i, %do.body250.i
  %next.i = getelementptr inbounds %struct.temp_slot* %t.0448.i, i64 0, i32 0
  %t.0.i = load %struct.temp_slot** %next.i, align 8
  %cmp200.i = icmp eq %struct.temp_slot* %t.0.i, null
  br i1 %cmp200.i, label %for.end275.i, label %if.then204.i

for.end275.i:                                     ; preds = %for.inc274.i, %do.end198.i
  %fixup_var_refs_queue.i = getelementptr inbounds %struct.function* %f.tr, i64 0, i32 43
  %q.0443.i = load %struct.var_refs_queue** %fixup_var_refs_queue.i, align 8
  %cmp277444.i = icmp eq %struct.var_refs_queue* %q.0443.i, null
  br i1 %cmp277444.i, label %do.body298.i, label %if.then282.i

if.then282.i:                                     ; preds = %for.end275.i, %for.inc295.i
  %q.0445.i = phi %struct.var_refs_queue* [ %q.0.i, %for.inc295.i ], [ %q.0443.i, %for.end275.i ]
  %80 = bitcast %struct.var_refs_queue* %q.0445.i to i8*
  %call283.i = tail call i32 @ggc_set_mark(i8* %80) #5
  %modified.i = getelementptr inbounds %struct.var_refs_queue* %q.0445.i, i64 0, i32 0
  %81 = load %struct.rtx_def** %modified.i, align 8, !tbaa !14
  %cmp288.i = icmp eq %struct.rtx_def* %81, null
  br i1 %cmp288.i, label %for.inc295.i, label %land.lhs.true289.i

land.lhs.true289.i:                               ; preds = %if.then282.i
  %82 = bitcast %struct.rtx_def* %81 to i8*
  %call290.i = tail call i32 @ggc_set_mark(i8* %82) #5
  %tobool291.i = icmp eq i32 %call290.i, 0
  br i1 %tobool291.i, label %if.then292.i, label %for.inc295.i

if.then292.i:                                     ; preds = %land.lhs.true289.i
  tail call void @ggc_mark_rtx_children(%struct.rtx_def* %81) #5
  br label %for.inc295.i

for.inc295.i:                                     ; preds = %if.then292.i, %land.lhs.true289.i, %if.then282.i
  %next296.i = getelementptr inbounds %struct.var_refs_queue* %q.0445.i, i64 0, i32 3
  %q.0.i = load %struct.var_refs_queue** %next296.i, align 8
  %cmp277.i = icmp eq %struct.var_refs_queue* %q.0.i, null
  br i1 %cmp277.i, label %do.body298.i, label %if.then282.i

do.body298.i:                                     ; preds = %for.inc295.i, %for.end275.i
  %x_nonlocal_goto_handler_slots.i = getelementptr inbounds %struct.function* %f.tr, i64 0, i32 20
  %83 = load %struct.rtx_def** %x_nonlocal_goto_handler_slots.i, align 8, !tbaa !113
  %cmp300.i = icmp eq %struct.rtx_def* %83, null
  br i1 %cmp300.i, label %do.body307.i, label %land.lhs.true301.i

land.lhs.true301.i:                               ; preds = %do.body298.i
  %84 = bitcast %struct.rtx_def* %83 to i8*
  %call302.i = tail call i32 @ggc_set_mark(i8* %84) #5
  %tobool303.i = icmp eq i32 %call302.i, 0
  br i1 %tobool303.i, label %if.then304.i, label %do.body307.i

if.then304.i:                                     ; preds = %land.lhs.true301.i
  tail call void @ggc_mark_rtx_children(%struct.rtx_def* %83) #5
  br label %do.body307.i

do.body307.i:                                     ; preds = %if.then304.i, %land.lhs.true301.i, %do.body298.i
  %x_nonlocal_goto_handler_labels.i = getelementptr inbounds %struct.function* %f.tr, i64 0, i32 21
  %85 = load %struct.rtx_def** %x_nonlocal_goto_handler_labels.i, align 8, !tbaa !116
  %cmp309.i = icmp eq %struct.rtx_def* %85, null
  br i1 %cmp309.i, label %do.body316.i, label %land.lhs.true310.i

land.lhs.true310.i:                               ; preds = %do.body307.i
  %86 = bitcast %struct.rtx_def* %85 to i8*
  %call311.i = tail call i32 @ggc_set_mark(i8* %86) #5
  %tobool312.i = icmp eq i32 %call311.i, 0
  br i1 %tobool312.i, label %if.then313.i, label %do.body316.i

if.then313.i:                                     ; preds = %land.lhs.true310.i
  tail call void @ggc_mark_rtx_children(%struct.rtx_def* %85) #5
  br label %do.body316.i

do.body316.i:                                     ; preds = %if.then313.i, %land.lhs.true310.i, %do.body307.i
  %x_nonlocal_goto_stack_level.i = getelementptr inbounds %struct.function* %f.tr, i64 0, i32 22
  %87 = load %struct.rtx_def** %x_nonlocal_goto_stack_level.i, align 8, !tbaa !114
  %cmp318.i = icmp eq %struct.rtx_def* %87, null
  br i1 %cmp318.i, label %do.body325.i, label %land.lhs.true319.i

land.lhs.true319.i:                               ; preds = %do.body316.i
  %88 = bitcast %struct.rtx_def* %87 to i8*
  %call320.i = tail call i32 @ggc_set_mark(i8* %88) #5
  %tobool321.i = icmp eq i32 %call320.i, 0
  br i1 %tobool321.i, label %if.then322.i, label %do.body325.i

if.then322.i:                                     ; preds = %land.lhs.true319.i
  tail call void @ggc_mark_rtx_children(%struct.rtx_def* %87) #5
  br label %do.body325.i

do.body325.i:                                     ; preds = %if.then322.i, %land.lhs.true319.i, %do.body316.i
  %x_nonlocal_labels.i = getelementptr inbounds %struct.function* %f.tr, i64 0, i32 19
  %89 = load %union.tree_node** %x_nonlocal_labels.i, align 8, !tbaa !115
  %cmp327.i = icmp eq %union.tree_node* %89, null
  br i1 %cmp327.i, label %do.end348.i, label %land.lhs.true328.i

land.lhs.true328.i:                               ; preds = %do.body325.i
  %90 = bitcast %union.tree_node* %89 to i8*
  %call329.i = tail call i32 @ggc_set_mark(i8* %90) #5
  %tobool330.i = icmp eq i32 %call329.i, 0
  br i1 %tobool330.i, label %do.body332.i, label %do.end348.i

do.body332.i:                                     ; preds = %land.lhs.true328.i
  %91 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !9
  %elements_used333.i = getelementptr inbounds %struct.varray_head_tag* %91, i64 0, i32 1
  %92 = load i64* %elements_used333.i, align 8, !tbaa !110
  %num_elements334.i = getelementptr inbounds %struct.varray_head_tag* %91, i64 0, i32 0
  %93 = load i64* %num_elements334.i, align 8, !tbaa !112
  %cmp335.i = icmp ult i64 %92, %93
  br i1 %cmp335.i, label %if.end340.i, label %if.then336.i

if.then336.i:                                     ; preds = %do.body332.i
  %mul338.i = shl i64 %93, 1
  %call339.i = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %91, i64 %mul338.i) #5
  store %struct.varray_head_tag* %call339.i, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !9
  %elements_used341.phi.trans.insert.i = getelementptr inbounds %struct.varray_head_tag* %call339.i, i64 0, i32 1
  %.pre.i = load i64* %elements_used341.phi.trans.insert.i, align 8, !tbaa !110
  br label %if.end340.i

if.end340.i:                                      ; preds = %if.then336.i, %do.body332.i
  %94 = phi i64 [ %92, %do.body332.i ], [ %.pre.i, %if.then336.i ]
  %95 = phi %struct.varray_head_tag* [ %91, %do.body332.i ], [ %call339.i, %if.then336.i ]
  %elements_used341.i = getelementptr inbounds %struct.varray_head_tag* %95, i64 0, i32 1
  %inc342.i = add i64 %94, 1
  store i64 %inc342.i, i64* %elements_used341.i, align 8, !tbaa !110
  %data343.i = getelementptr inbounds %struct.varray_head_tag* %95, i64 0, i32 4
  %tree344.i = bitcast %union.varray_data_tag* %data343.i to [1 x %union.tree_node*]*
  %arrayidx345.i = getelementptr inbounds [1 x %union.tree_node*]* %tree344.i, i64 0, i64 %94
  store %union.tree_node* %89, %union.tree_node** %arrayidx345.i, align 8, !tbaa !9
  br label %do.end348.i

do.end348.i:                                      ; preds = %if.end340.i, %land.lhs.true328.i, %do.body325.i
  tail call void @mark_hard_reg_initial_vals(%struct.function* %f.tr) #5
  br label %mark_function_status.exit

mark_function_status.exit:                        ; preds = %do.end14, %do.end348.i
  %eh = getelementptr inbounds %struct.function* %f.tr, i64 0, i32 0
  %96 = load %struct.eh_status** %eh, align 8, !tbaa !153
  tail call void @mark_eh_status(%struct.eh_status* %96) #5
  %stmt = getelementptr inbounds %struct.function* %f.tr, i64 0, i32 1
  %97 = load %struct.stmt_status** %stmt, align 8, !tbaa !154
  tail call void @mark_stmt_status(%struct.stmt_status* %97) #5
  %expr = getelementptr inbounds %struct.function* %f.tr, i64 0, i32 2
  %98 = load %struct.expr_status** %expr, align 8, !tbaa !125
  tail call void @mark_expr_status(%struct.expr_status* %98) #5
  %emit = getelementptr inbounds %struct.function* %f.tr, i64 0, i32 3
  %99 = load %struct.emit_status** %emit, align 8, !tbaa !18
  tail call void @mark_emit_status(%struct.emit_status* %99) #5
  %varasm = getelementptr inbounds %struct.function* %f.tr, i64 0, i32 4
  %100 = load %struct.varasm_status** %varasm, align 8, !tbaa !155
  tail call void @mark_varasm_status(%struct.varasm_status* %100) #5
  %101 = load void (%struct.function*)** @mark_machine_status, align 8, !tbaa !9
  %tobool15 = icmp eq void (%struct.function*)* %101, null
  br i1 %tobool15, label %if.end17, label %if.then16

if.then16:                                        ; preds = %mark_function_status.exit
  tail call void %101(%struct.function* %f.tr) #5
  br label %if.end17

if.end17:                                         ; preds = %mark_function_status.exit, %if.then16
  %102 = load void (%struct.function*)** @mark_lang_status, align 8, !tbaa !9
  %tobool18 = icmp eq void (%struct.function*)* %102, null
  br i1 %tobool18, label %if.end20, label %if.then19

if.then19:                                        ; preds = %if.end17
  tail call void %102(%struct.function* %f.tr) #5
  br label %if.end20

if.end20:                                         ; preds = %if.end17, %if.then19
  %original_arg_vector = getelementptr inbounds %struct.function* %f.tr, i64 0, i32 46
  %103 = load i8** %original_arg_vector, align 8, !tbaa !120
  %tobool21 = icmp eq i8* %103, null
  br i1 %tobool21, label %if.end32, label %do.body23

do.body23:                                        ; preds = %if.end20
  %call27 = tail call i32 @ggc_set_mark(i8* %103) #5
  %tobool28 = icmp eq i32 %call27, 0
  br i1 %tobool28, label %if.then29, label %if.end32

if.then29:                                        ; preds = %do.body23
  %104 = bitcast i8* %103 to %struct.rtvec_def*
  tail call void @ggc_mark_rtvec_children(%struct.rtvec_def* %104) #5
  br label %if.end32

if.end32:                                         ; preds = %do.body23, %if.end20, %if.then29
  %original_decl_initial = getelementptr inbounds %struct.function* %f.tr, i64 0, i32 47
  %105 = load %union.tree_node** %original_decl_initial, align 8, !tbaa !119
  %tobool33 = icmp eq %union.tree_node* %105, null
  br i1 %tobool33, label %if.end60, label %land.lhs.true39

land.lhs.true39:                                  ; preds = %if.end32
  %106 = bitcast %union.tree_node* %105 to i8*
  %call40 = tail call i32 @ggc_set_mark(i8* %106) #5
  %tobool41 = icmp eq i32 %call40, 0
  br i1 %tobool41, label %do.body43, label %if.end60

do.body43:                                        ; preds = %land.lhs.true39
  %107 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !9
  %elements_used44 = getelementptr inbounds %struct.varray_head_tag* %107, i64 0, i32 1
  %108 = load i64* %elements_used44, align 8, !tbaa !110
  %num_elements45 = getelementptr inbounds %struct.varray_head_tag* %107, i64 0, i32 0
  %109 = load i64* %num_elements45, align 8, !tbaa !112
  %cmp46 = icmp ult i64 %108, %109
  br i1 %cmp46, label %if.end51, label %if.then47

if.then47:                                        ; preds = %do.body43
  %mul49 = shl i64 %109, 1
  %call50 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %107, i64 %mul49) #5
  store %struct.varray_head_tag* %call50, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !9
  %elements_used52.phi.trans.insert = getelementptr inbounds %struct.varray_head_tag* %call50, i64 0, i32 1
  %.pre = load i64* %elements_used52.phi.trans.insert, align 8, !tbaa !110
  br label %if.end51

if.end51:                                         ; preds = %do.body43, %if.then47
  %110 = phi i64 [ %108, %do.body43 ], [ %.pre, %if.then47 ]
  %111 = phi %struct.varray_head_tag* [ %107, %do.body43 ], [ %call50, %if.then47 ]
  %elements_used52 = getelementptr inbounds %struct.varray_head_tag* %111, i64 0, i32 1
  %inc53 = add i64 %110, 1
  store i64 %inc53, i64* %elements_used52, align 8, !tbaa !110
  %data54 = getelementptr inbounds %struct.varray_head_tag* %111, i64 0, i32 4
  %tree55 = bitcast %union.varray_data_tag* %data54 to [1 x %union.tree_node*]*
  %arrayidx56 = getelementptr inbounds [1 x %union.tree_node*]* %tree55, i64 0, i64 %110
  store %union.tree_node* %105, %union.tree_node** %arrayidx56, align 8, !tbaa !9
  br label %if.end60

if.end60:                                         ; preds = %if.end32, %land.lhs.true39, %if.end51
  %outer = getelementptr inbounds %struct.function* %f.tr, i64 0, i32 7
  %112 = load %struct.function** %outer, align 8, !tbaa !10
  %tobool61 = icmp eq %struct.function* %112, null
  br i1 %tobool61, label %if.end64, label %tailrecurse

if.end64:                                         ; preds = %if.end60
  ret void
}

declare i32 @ggc_set_mark(i8*) #2

declare void @mark_eh_status(%struct.eh_status*) #2

declare void @mark_stmt_status(%struct.stmt_status*) #2

declare void @mark_expr_status(%struct.expr_status*) #2

declare void @mark_emit_status(%struct.emit_status*) #2

declare void @mark_varasm_status(%struct.varasm_status*) #2

declare void @ggc_mark_rtvec_children(%struct.rtvec_def*) #2

; Function Attrs: nounwind uwtable
define void @init_function_once() #0 {
entry:
  tail call void @ggc_add_root(i8* bitcast (%struct.function** @cfun to i8*), i32 1, i32 8, void (i8*)* @maybe_mark_struct_function) #5
  tail call void @ggc_add_root(i8* bitcast (%struct.function** @outer_function_chain to i8*), i32 1, i32 8, void (i8*)* @maybe_mark_struct_function) #5
  %call = tail call %struct.varray_head_tag* @varray_init(i64 0, i64 4, i8* getelementptr inbounds ([9 x i8]* @.str9, i64 0, i64 0)) #5
  store %struct.varray_head_tag* %call, %struct.varray_head_tag** @prologue, align 8, !tbaa !9
  %call1 = tail call %struct.varray_head_tag* @varray_init(i64 0, i64 4, i8* getelementptr inbounds ([9 x i8]* @.str10, i64 0, i64 0)) #5
  store %struct.varray_head_tag* %call1, %struct.varray_head_tag** @epilogue, align 8, !tbaa !9
  %call2 = tail call %struct.varray_head_tag* @varray_init(i64 0, i64 4, i8* getelementptr inbounds ([17 x i8]* @.str11, i64 0, i64 0)) #5
  store %struct.varray_head_tag* %call2, %struct.varray_head_tag** @sibcall_epilogue, align 8, !tbaa !9
  ret void
}

declare void @ggc_add_root(i8*, i32, i32, void (i8*)*) #2

; Function Attrs: nounwind uwtable
define internal void @maybe_mark_struct_function(i8* nocapture readonly %arg) #0 {
entry:
  %0 = bitcast i8* %arg to %struct.function**
  %1 = load %struct.function** %0, align 8, !tbaa !9
  %cmp = icmp eq %struct.function* %1, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  tail call void @ggc_mark_struct_function(%struct.function* %1)
  br label %return

return:                                           ; preds = %entry, %if.end
  ret void
}

declare void @ggc_mark_rtx_children(%struct.rtx_def*) #2

declare void @mark_hard_reg_initial_vals(%struct.function*) #2

declare void @add_insn(%struct.rtx_def*) #2

declare i32 @reg_referenced_p(%struct.rtx_def*, %struct.rtx_def*) #2

declare %struct.rtx_def* @gen_rtx_REG(i32, i32) #2

declare %struct.rtx_def* @simplify_replace_rtx(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #2

declare i32 @reg_overlap_mentioned_p(%struct.rtx_def*, %struct.rtx_def*) #2

declare i32 @ix86_hard_regno_mode_ok(i32, i32) #2

declare i32 @bitmap_bit_p(%struct.bitmap_head_def*, i32) #2

declare i32 @refers_to_regno_p(i32, i32, %struct.rtx_def*, %struct.rtx_def**) #2

declare %struct.rtx_def* @gen_indirect_jump(%struct.rtx_def*) #2

declare i32 @reg_set_p(%struct.rtx_def*, %struct.rtx_def*) #2

declare i32 @validate_replace_rtx(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #2

; Function Attrs: nounwind uwtable
define internal fastcc void @handle_epilogue_set(%struct.rtx_def* %set, %struct.epi_info* nocapture %p) #0 {
entry:
  %0 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !9
  %call = tail call i32 @reg_set_p(%struct.rtx_def* %0, %struct.rtx_def* %set) #5
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.else50, label %if.then

if.then:                                          ; preds = %entry
  %fld = getelementptr inbounds %struct.rtx_def* %set, i64 0, i32 1
  %rtx = bitcast [1 x %union.rtunion_def]* %fld to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx, align 8, !tbaa !9
  %2 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !9
  %cmp = icmp eq %struct.rtx_def* %1, %2
  br i1 %cmp, label %if.end, label %if.then1

if.then1:                                         ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8]* @.str, i64 0, i64 0), i32 7485, i8* getelementptr inbounds ([20 x i8]* @__FUNCTION__.handle_epilogue_set, i64 0, i64 0)) #8
  unreachable

if.end:                                           ; preds = %if.then
  %arrayidx3 = getelementptr inbounds %struct.rtx_def* %set, i64 0, i32 1, i64 1
  %rtx4 = bitcast %union.rtunion_def* %arrayidx3 to %struct.rtx_def**
  %3 = load %struct.rtx_def** %rtx4, align 8, !tbaa !9
  %4 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 0
  %bf.load = load i32* %4, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp5 = icmp eq i32 %bf.clear, 75
  br i1 %cmp5, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %if.end
  %arrayidx10 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 1, i64 1
  %rtx11 = bitcast %union.rtunion_def* %arrayidx10 to %struct.rtx_def**
  %5 = load %struct.rtx_def** %rtx11, align 8, !tbaa !9
  %6 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 0
  %bf.load12 = load i32* %6, align 8
  %bf.clear13 = and i32 %bf.load12, 65535
  %cmp14 = icmp eq i32 %bf.clear13, 54
  br i1 %cmp14, label %if.then15, label %if.else

if.then15:                                        ; preds = %land.lhs.true
  %arrayidx20 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 1, i64 0
  %rtx21 = bitcast %union.rtunion_def* %arrayidx20 to %struct.rtx_def**
  %7 = load %struct.rtx_def** %rtx21, align 8, !tbaa !9
  %new_sp_equiv_reg = getelementptr inbounds %struct.epi_info* %p, i64 0, i32 2
  store %struct.rtx_def* %7, %struct.rtx_def** %new_sp_equiv_reg, align 8, !tbaa !150
  %8 = load %struct.rtx_def** %rtx4, align 8, !tbaa !9
  %arrayidx26 = getelementptr inbounds %struct.rtx_def* %8, i64 0, i32 1, i64 1
  %rtx27 = bitcast %union.rtunion_def* %arrayidx26 to %struct.rtx_def**
  %9 = load %struct.rtx_def** %rtx27, align 8, !tbaa !9
  %rtwint = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 1, i64 0, i32 0
  %10 = load i64* %rtwint, align 8, !tbaa !60
  %new_sp_offset = getelementptr inbounds %struct.epi_info* %p, i64 0, i32 3
  store i64 %10, i64* %new_sp_offset, align 8, !tbaa !151
  br label %if.end35

if.else:                                          ; preds = %land.lhs.true, %if.end
  %new_sp_equiv_reg33 = getelementptr inbounds %struct.epi_info* %p, i64 0, i32 2
  store %struct.rtx_def* %3, %struct.rtx_def** %new_sp_equiv_reg33, align 8, !tbaa !150
  %new_sp_offset34 = getelementptr inbounds %struct.epi_info* %p, i64 0, i32 3
  store i64 0, i64* %new_sp_offset34, align 8, !tbaa !151
  br label %if.end35

if.end35:                                         ; preds = %if.else, %if.then15
  %11 = phi i64 [ 0, %if.else ], [ %10, %if.then15 ]
  %12 = phi %struct.rtx_def* [ %3, %if.else ], [ %7, %if.then15 ]
  %13 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !9
  %cmp37 = icmp eq %struct.rtx_def* %12, %13
  br i1 %cmp37, label %if.then38, label %if.end41

if.then38:                                        ; preds = %if.end35
  %new_sp_equiv_reg36 = getelementptr inbounds %struct.epi_info* %p, i64 0, i32 2
  %sp_equiv_reg = getelementptr inbounds %struct.epi_info* %p, i64 0, i32 0
  %14 = load %struct.rtx_def** %sp_equiv_reg, align 8, !tbaa !146
  store %struct.rtx_def* %14, %struct.rtx_def** %new_sp_equiv_reg36, align 8, !tbaa !150
  %sp_offset = getelementptr inbounds %struct.epi_info* %p, i64 0, i32 1
  %15 = load i64* %sp_offset, align 8, !tbaa !148
  %new_sp_offset40 = getelementptr inbounds %struct.epi_info* %p, i64 0, i32 3
  %add = add nsw i64 %11, %15
  store i64 %add, i64* %new_sp_offset40, align 8, !tbaa !151
  br label %if.end41

if.end41:                                         ; preds = %if.then38, %if.end35
  %16 = phi %struct.rtx_def* [ %14, %if.then38 ], [ %12, %if.end35 ]
  %cmp43 = icmp eq %struct.rtx_def* %16, null
  br i1 %cmp43, label %if.then48, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end41
  %17 = getelementptr inbounds %struct.rtx_def* %16, i64 0, i32 0
  %bf.load45 = load i32* %17, align 8
  %bf.clear46 = and i32 %bf.load45, 65535
  %cmp47 = icmp eq i32 %bf.clear46, 61
  br i1 %cmp47, label %if.end100, label %if.then48

if.then48:                                        ; preds = %lor.lhs.false, %if.end41
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8]* @.str, i64 0, i64 0), i32 7504, i8* getelementptr inbounds ([20 x i8]* @__FUNCTION__.handle_epilogue_set, i64 0, i64 0)) #8
  unreachable

if.else50:                                        ; preds = %entry
  %new_sp_equiv_reg51 = getelementptr inbounds %struct.epi_info* %p, i64 0, i32 2
  %18 = load %struct.rtx_def** %new_sp_equiv_reg51, align 8, !tbaa !150
  %cmp52 = icmp eq %struct.rtx_def* %18, null
  br i1 %cmp52, label %if.else77, label %land.lhs.true53

land.lhs.true53:                                  ; preds = %if.else50
  %call55 = tail call i32 @reg_set_p(%struct.rtx_def* %18, %struct.rtx_def* %set) #5
  %tobool56 = icmp eq i32 %call55, 0
  br i1 %tobool56, label %if.else77, label %if.then57

if.then57:                                        ; preds = %land.lhs.true53
  %19 = load %struct.rtx_def** %new_sp_equiv_reg51, align 8, !tbaa !150
  %fld59 = getelementptr inbounds %struct.rtx_def* %set, i64 0, i32 1
  %rtx61 = bitcast [1 x %union.rtunion_def]* %fld59 to %struct.rtx_def**
  %20 = load %struct.rtx_def** %rtx61, align 8, !tbaa !9
  %call62 = tail call i32 @rtx_equal_p(%struct.rtx_def* %19, %struct.rtx_def* %20) #5
  %tobool63 = icmp eq i32 %call62, 0
  br i1 %tobool63, label %if.then66, label %lor.lhs.false64

lor.lhs.false64:                                  ; preds = %if.then57
  %equiv_reg_src = getelementptr inbounds %struct.epi_info* %p, i64 0, i32 4
  %21 = load %struct.rtx_def** %equiv_reg_src, align 8, !tbaa !149
  %cmp65 = icmp eq %struct.rtx_def* %21, null
  br i1 %cmp65, label %if.else67, label %if.then66

if.then66:                                        ; preds = %lor.lhs.false64, %if.then57
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8]* @.str, i64 0, i64 0), i32 7519, i8* getelementptr inbounds ([20 x i8]* @__FUNCTION__.handle_epilogue_set, i64 0, i64 0)) #8
  unreachable

if.else67:                                        ; preds = %lor.lhs.false64
  %arrayidx69 = getelementptr inbounds %struct.rtx_def* %set, i64 0, i32 1, i64 1
  %rtx70 = bitcast %union.rtunion_def* %arrayidx69 to %struct.rtx_def**
  %22 = load %struct.rtx_def** %rtx70, align 8, !tbaa !9
  %23 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !9
  %sp_equiv_reg71 = getelementptr inbounds %struct.epi_info* %p, i64 0, i32 0
  %24 = load %struct.rtx_def** %sp_equiv_reg71, align 8, !tbaa !146
  %sp_offset72 = getelementptr inbounds %struct.epi_info* %p, i64 0, i32 1
  %25 = load i64* %sp_offset72, align 8, !tbaa !148
  %call73 = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %24, i64 %25) #5
  %call74 = tail call %struct.rtx_def* @simplify_replace_rtx(%struct.rtx_def* %22, %struct.rtx_def* %23, %struct.rtx_def* %call73) #5
  store %struct.rtx_def* %call74, %struct.rtx_def** %equiv_reg_src, align 8, !tbaa !149
  br label %if.end100

if.else77:                                        ; preds = %land.lhs.true53, %if.else50
  %arrayidx79 = getelementptr inbounds %struct.rtx_def* %set, i64 0, i32 1, i64 1
  %rtx80 = bitcast %union.rtunion_def* %arrayidx79 to %struct.rtx_def**
  %26 = load %struct.rtx_def** %rtx80, align 8, !tbaa !9
  %27 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !9
  %sp_equiv_reg81 = getelementptr inbounds %struct.epi_info* %p, i64 0, i32 0
  %28 = load %struct.rtx_def** %sp_equiv_reg81, align 8, !tbaa !146
  %sp_offset82 = getelementptr inbounds %struct.epi_info* %p, i64 0, i32 1
  %29 = load i64* %sp_offset82, align 8, !tbaa !148
  %call83 = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %28, i64 %29) #5
  %call84 = tail call %struct.rtx_def* @simplify_replace_rtx(%struct.rtx_def* %26, %struct.rtx_def* %27, %struct.rtx_def* %call83) #5
  %30 = getelementptr inbounds %union.rtunion_def* %arrayidx79, i64 0, i32 0
  %call84.c = ptrtoint %struct.rtx_def* %call84 to i64
  store i64 %call84.c, i64* %30, align 8, !tbaa !9
  %arrayidx89 = getelementptr inbounds %struct.rtx_def* %set, i64 0, i32 1, i64 0
  %rtx90 = bitcast %union.rtunion_def* %arrayidx89 to %struct.rtx_def**
  %31 = load %struct.rtx_def** %rtx90, align 8, !tbaa !9
  %32 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !9
  %33 = load %struct.rtx_def** %sp_equiv_reg81, align 8, !tbaa !146
  %34 = load i64* %sp_offset82, align 8, !tbaa !148
  %call93 = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %33, i64 %34) #5
  %call94 = tail call %struct.rtx_def* @simplify_replace_rtx(%struct.rtx_def* %31, %struct.rtx_def* %32, %struct.rtx_def* %call93) #5
  %35 = getelementptr inbounds %union.rtunion_def* %arrayidx89, i64 0, i32 0
  %call94.c = ptrtoint %struct.rtx_def* %call94 to i64
  store i64 %call94.c, i64* %35, align 8, !tbaa !9
  %call98 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %set) #5
  br label %if.end100

if.end100:                                        ; preds = %lor.lhs.false, %if.else67, %if.else77
  ret void
}

declare %struct.rtx_def* @emit_jump_insn_after(%struct.rtx_def*, %struct.rtx_def*) #2

declare %struct.rtx_def* @gen_return() #2

declare %struct.rtx_def* @delete_related_insns(%struct.rtx_def*) #2

declare %struct.rtx_def* @gen_rtx_fmt_e(i32, i32, %struct.rtx_def*) #2

declare i8* @ggc_alloc_cleared(i64) #2

declare void @init_stmt_for_function() #2

declare void @init_eh_for_function() #2

declare void @init_emit() #2

declare void @init_expr() #2

declare void @init_varasm_status(%struct.function*) #2

declare void @init_pending_stack_adjust() #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @all_blocks(%union.tree_node* %block, %union.tree_node** %vector) #0 {
entry:
  %tobool19 = icmp eq %union.tree_node* %block, null
  br i1 %tobool19, label %while.end, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %entry
  %tobool1 = icmp eq %union.tree_node** %vector, null
  br i1 %tobool1, label %cond.end.us, label %cond.end

cond.end.us:                                      ; preds = %while.body.lr.ph, %cond.end.us
  %n_blocks.021.us = phi i32 [ %add.us, %cond.end.us ], [ 0, %while.body.lr.ph ]
  %block.addr.020.us = phi %union.tree_node* [ %1, %cond.end.us ], [ %block, %while.body.lr.ph ]
  %asm_written_flag.us = getelementptr inbounds %union.tree_node* %block.addr.020.us, i64 0, i32 0, i32 0, i32 2
  %bf.load.us = load i32* %asm_written_flag.us, align 8
  %bf.clear.us = and i32 %bf.load.us, -16385
  store i32 %bf.clear.us, i32* %asm_written_flag.us, align 8
  %inc.us = add nsw i32 %n_blocks.021.us, 1
  %.in.us = getelementptr inbounds %union.tree_node* %block.addr.020.us, i64 0, i32 0, i32 4
  %0 = load %union.tree_node** %.in.us, align 8
  %call.us = tail call fastcc i32 @all_blocks(%union.tree_node* %0, %union.tree_node** null)
  %add.us = add nsw i32 %call.us, %inc.us
  %chain.us = getelementptr inbounds %union.tree_node* %block.addr.020.us, i64 0, i32 0, i32 0, i32 0
  %1 = load %union.tree_node** %chain.us, align 8, !tbaa !30
  %tobool.us = icmp eq %union.tree_node* %1, null
  br i1 %tobool.us, label %while.end, label %cond.end.us

cond.end:                                         ; preds = %while.body.lr.ph, %cond.end
  %n_blocks.021 = phi i32 [ %add, %cond.end ], [ 0, %while.body.lr.ph ]
  %block.addr.020 = phi %union.tree_node* [ %3, %cond.end ], [ %block, %while.body.lr.ph ]
  %asm_written_flag = getelementptr inbounds %union.tree_node* %block.addr.020, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %asm_written_flag, align 8
  %bf.clear = and i32 %bf.load, -16385
  store i32 %bf.clear, i32* %asm_written_flag, align 8
  %idxprom = sext i32 %n_blocks.021 to i64
  %arrayidx = getelementptr inbounds %union.tree_node** %vector, i64 %idxprom
  store %union.tree_node* %block.addr.020, %union.tree_node** %arrayidx, align 8, !tbaa !9
  %inc16 = add nsw i32 %n_blocks.021, 1
  %idx.ext = sext i32 %inc16 to i64
  %add.ptr = getelementptr inbounds %union.tree_node** %vector, i64 %idx.ext
  %.in = getelementptr inbounds %union.tree_node* %block.addr.020, i64 0, i32 0, i32 4
  %2 = load %union.tree_node** %.in, align 8
  %call = tail call fastcc i32 @all_blocks(%union.tree_node* %2, %union.tree_node** %add.ptr)
  %add = add nsw i32 %call, %inc16
  %chain = getelementptr inbounds %union.tree_node* %block.addr.020, i64 0, i32 0, i32 0, i32 0
  %3 = load %union.tree_node** %chain, align 8, !tbaa !30
  %tobool = icmp eq %union.tree_node* %3, null
  br i1 %tobool, label %while.end, label %cond.end

while.end:                                        ; preds = %cond.end, %cond.end.us, %entry
  %n_blocks.0.lcssa = phi i32 [ 0, %entry ], [ %add.us, %cond.end.us ], [ %add, %cond.end ]
  ret i32 %n_blocks.0.lcssa
}

declare %union.tree_node* @copy_node(%union.tree_node*) #2

declare %struct.rtx_def* @force_operand(%struct.rtx_def*, %struct.rtx_def*) #2

declare %struct.rtx_def* @gen_move_insn(%struct.rtx_def*, %struct.rtx_def*) #2

; Function Attrs: nounwind uwtable
define internal fastcc void @instantiate_decl(%struct.rtx_def* %x, i64 %size, i32 %valid_only) #0 {
entry:
  %addr = alloca %struct.rtx_def*, align 8
  %cmp = icmp eq %struct.rtx_def* %x, null
  br i1 %cmp, label %return, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %0 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp1 = icmp eq i32 %bf.clear, 66
  br i1 %cmp1, label %if.end, label %return

if.end:                                           ; preds = %lor.lhs.false
  %arrayidx = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx, align 8, !tbaa !9
  store %struct.rtx_def* %1, %struct.rtx_def** %addr, align 8, !tbaa !9
  %2 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 0
  %bf.load2 = load i32* %2, align 8
  %bf.clear3 = and i32 %bf.load2, 65535
  switch i32 %bf.clear3, label %if.end57 [
    i32 67, label %return
    i32 68, label %return
    i32 54, label %return
    i32 55, label %return
    i32 58, label %return
    i32 134, label %return
    i32 56, label %return
    i32 140, label %return
    i32 70, label %land.lhs.true
    i32 61, label %land.lhs.true47
  ]

land.lhs.true:                                    ; preds = %if.end
  %arrayidx38 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 0
  %rtx39 = bitcast %union.rtunion_def* %arrayidx38 to %struct.rtx_def**
  %3 = load %struct.rtx_def** %rtx39, align 8, !tbaa !9
  %4 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 0
  %bf.load40 = load i32* %4, align 8
  %bf.clear41 = and i32 %bf.load40, 65535
  %cmp42 = icmp eq i32 %bf.clear41, 61
  br i1 %cmp42, label %return, label %if.end57

land.lhs.true47:                                  ; preds = %if.end
  %arrayidx49 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx49 to i32*
  %5 = load i32* %rtuint, align 4, !tbaa !17
  %.off = add i32 %5, -53
  %6 = icmp ugt i32 %.off, 4
  br i1 %6, label %return, label %if.end57

if.end57:                                         ; preds = %if.end, %land.lhs.true, %land.lhs.true47
  %tobool = icmp eq i32 %valid_only, 0
  br i1 %tobool, label %if.end59.thread, label %if.end59

if.end59.thread:                                  ; preds = %if.end57
  %call60114 = call fastcc i32 @instantiate_virtual_regs_1(%struct.rtx_def** %addr, %struct.rtx_def* null, i32 0)
  br label %if.end96

if.end59:                                         ; preds = %if.end57
  %call = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %1) #5
  store %struct.rtx_def* %call, %struct.rtx_def** %addr, align 8, !tbaa !9
  %call60 = call fastcc i32 @instantiate_virtual_regs_1(%struct.rtx_def** %addr, %struct.rtx_def* null, i32 0)
  %cmp63 = icmp sgt i64 %size, -1
  br i1 %cmp63, label %if.then64, label %if.end96

if.then64:                                        ; preds = %if.end59
  %7 = load i32* getelementptr inbounds ([9 x i32]* @class_narrowest_mode, i64 0, i64 1), align 4, !tbaa !22
  %cmp65120 = icmp eq i32 %7, 0
  br i1 %cmp65120, label %for.end, label %land.rhs

land.rhs:                                         ; preds = %if.then64, %for.inc
  %mode.0121 = phi i32 [ %conv75, %for.inc ], [ %7, %if.then64 ]
  %idxprom = sext i32 %mode.0121 to i64
  %arrayidx66 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom
  %8 = load i8* %arrayidx66, align 1, !tbaa !22
  %conv = zext i8 %8 to i64
  %cmp67 = icmp ugt i64 %conv, %size
  br i1 %cmp67, label %for.end, label %for.body

for.body:                                         ; preds = %land.rhs
  %9 = load %struct.rtx_def** %addr, align 8, !tbaa !9
  %call69 = call i32 @memory_address_p(i32 %mode.0121, %struct.rtx_def* %9) #5
  %tobool70 = icmp eq i32 %call69, 0
  br i1 %tobool70, label %return, label %for.inc

for.inc:                                          ; preds = %for.body
  %arrayidx74 = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom
  %10 = load i8* %arrayidx74, align 1, !tbaa !22
  %conv75 = zext i8 %10 to i32
  %cmp65 = icmp eq i8 %10, 0
  br i1 %cmp65, label %for.end, label %land.rhs

for.end:                                          ; preds = %for.inc, %land.rhs, %if.then64
  %11 = load i32* getelementptr inbounds ([9 x i32]* @class_narrowest_mode, i64 0, i64 2), align 4, !tbaa !22
  %cmp77118 = icmp eq i32 %11, 0
  br i1 %cmp77118, label %if.end96, label %land.rhs79

land.rhs79:                                       ; preds = %for.end, %for.inc91
  %mode.1119 = phi i32 [ %conv94, %for.inc91 ], [ %11, %for.end ]
  %idxprom80 = sext i32 %mode.1119 to i64
  %arrayidx81 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom80
  %12 = load i8* %arrayidx81, align 1, !tbaa !22
  %conv82 = zext i8 %12 to i64
  %cmp83 = icmp ugt i64 %conv82, %size
  br i1 %cmp83, label %if.end96, label %for.body86

for.body86:                                       ; preds = %land.rhs79
  %13 = load %struct.rtx_def** %addr, align 8, !tbaa !9
  %call87 = call i32 @memory_address_p(i32 %mode.1119, %struct.rtx_def* %13) #5
  %tobool88 = icmp eq i32 %call87, 0
  br i1 %tobool88, label %return, label %for.inc91

for.inc91:                                        ; preds = %for.body86
  %arrayidx93 = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom80
  %14 = load i8* %arrayidx93, align 1, !tbaa !22
  %conv94 = zext i8 %14 to i32
  %cmp77 = icmp eq i8 %14, 0
  br i1 %cmp77, label %if.end96, label %land.rhs79

if.end96:                                         ; preds = %for.inc91, %land.rhs79, %for.end, %if.end59.thread, %if.end59
  %15 = load %struct.rtx_def** %addr, align 8, !tbaa !9
  %16 = getelementptr inbounds %union.rtunion_def* %arrayidx, i64 0, i32 0
  %.c = ptrtoint %struct.rtx_def* %15 to i64
  store i64 %.c, i64* %16, align 8, !tbaa !9
  br label %return

return:                                           ; preds = %for.body, %for.body86, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %lor.lhs.false, %land.lhs.true, %land.lhs.true47, %entry, %if.end96
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @instantiate_decls_1(%union.tree_node* nocapture readonly %let, i32 %valid_only) #0 {
entry:
  %vars = getelementptr inbounds %union.tree_node* %let, i64 0, i32 0, i32 2
  %0 = bitcast i32* %vars to %union.tree_node**
  %t.031 = load %union.tree_node** %0, align 8
  %tobool32 = icmp eq %union.tree_node* %t.031, null
  br i1 %tobool32, label %for.end, label %for.body

for.body:                                         ; preds = %entry, %for.inc
  %t.033 = phi %union.tree_node* [ %t.0, %for.inc ], [ %t.031, %entry ]
  %rtl = getelementptr inbounds %union.tree_node* %t.033, i64 0, i32 0, i32 17
  %1 = load %struct.rtx_def** %rtl, align 8, !tbaa !63
  %cmp = icmp eq %struct.rtx_def* %1, null
  br i1 %cmp, label %for.inc, label %cond.end

cond.end:                                         ; preds = %for.body
  %type = getelementptr inbounds %union.tree_node* %t.033, i64 0, i32 0, i32 0, i32 1
  %2 = load %union.tree_node** %type, align 8, !tbaa !56
  %call = tail call i64 @int_size_in_bytes(%union.tree_node* %2) #5
  tail call fastcc void @instantiate_decl(%struct.rtx_def* %1, i64 %call, i32 %valid_only)
  br label %for.inc

for.inc:                                          ; preds = %for.body, %cond.end
  %chain = getelementptr inbounds %union.tree_node* %t.033, i64 0, i32 0, i32 0, i32 0
  %t.0 = load %union.tree_node** %chain, align 8
  %tobool = icmp eq %union.tree_node* %t.0, null
  br i1 %tobool, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc, %entry
  %3 = getelementptr inbounds %union.tree_node* %let, i64 0, i32 0, i32 4
  %t.128 = load %union.tree_node** %3, align 8
  %tobool1129 = icmp eq %union.tree_node* %t.128, null
  br i1 %tobool1129, label %for.end16, label %for.body12

for.body12:                                       ; preds = %for.end, %for.body12
  %t.130 = phi %union.tree_node* [ %t.1, %for.body12 ], [ %t.128, %for.end ]
  tail call fastcc void @instantiate_decls_1(%union.tree_node* %t.130, i32 %valid_only)
  %chain15 = getelementptr inbounds %union.tree_node* %t.130, i64 0, i32 0, i32 0, i32 0
  %t.1 = load %union.tree_node** %chain15, align 8
  %tobool11 = icmp eq %union.tree_node* %t.1, null
  br i1 %tobool11, label %for.end16, label %for.body12

for.end16:                                        ; preds = %for.body12, %for.end
  ret void
}

declare i32 @memory_address_p(i32, %struct.rtx_def*) #2

declare i32 @subreg_regno_offset(i32, i32, i32, i32) #2

declare %struct.rtx_def* @gen_rtx_SUBREG(i32, %struct.rtx_def*, i32) #2

declare %struct.rtx_def* @gen_lowpart(i32, %struct.rtx_def*) #2

declare i32 @int_mode_for_mode(i32) #2

declare %struct.rtx_def* @store_bit_field(%struct.rtx_def*, i64, i64, i32, %struct.rtx_def*, i64) #2

declare %struct.rtx_def* @extract_bit_field(%struct.rtx_def*, i64, i64, i32, %struct.rtx_def*, i32, i32, i64) #2

declare %struct.rtx_def* @gen_rtx(i32, i32, ...) #2

; Function Attrs: nounwind uwtable
define internal i32 @insns_for_mem_walk(%struct.rtx_def** nocapture readonly %r, i8* nocapture readonly %data) #0 {
entry:
  %pass = getelementptr inbounds i8* %data, i64 16
  %0 = bitcast i8* %pass to i32*
  %1 = load i32* %0, align 4, !tbaa !67
  switch i32 %1, label %if.end35 [
    i32 0, label %land.lhs.true
    i32 1, label %land.lhs.true12
  ]

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.rtx_def** %r, align 8, !tbaa !9
  %tobool = icmp eq %struct.rtx_def* %2, null
  br i1 %tobool, label %if.end35, label %land.lhs.true1

land.lhs.true1:                                   ; preds = %land.lhs.true
  %3 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 0
  %bf.load = load i32* %3, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp2 = icmp eq i32 %bf.clear, 70
  br i1 %cmp2, label %land.lhs.true3, label %if.end35

land.lhs.true3:                                   ; preds = %land.lhs.true1
  %arrayidx = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %4 = load %struct.rtx_def** %rtx, align 8, !tbaa !9
  %5 = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 0
  %bf.load4 = load i32* %5, align 8
  %bf.clear5 = and i32 %bf.load4, 65535
  %cmp6 = icmp eq i32 %bf.clear5, 61
  br i1 %cmp6, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true3
  %ht = bitcast i8* %data to %struct.hash_table**
  %6 = load %struct.hash_table** %ht, align 8, !tbaa !65
  %7 = bitcast %struct.rtx_def* %4 to i8*
  %call = tail call %struct.hash_entry* @hash_lookup(%struct.hash_table* %6, i8* %7, i32 1, i8* (%struct.obstack*, i8*)* null) #5
  br label %if.end35

if.else:                                          ; preds = %land.lhs.true3
  %cmp11 = icmp eq i32 %1, 1
  br i1 %cmp11, label %land.lhs.true12, label %if.end35

land.lhs.true12:                                  ; preds = %entry, %if.else
  %8 = load %struct.rtx_def** %r, align 8, !tbaa !9
  %tobool13 = icmp eq %struct.rtx_def* %8, null
  br i1 %tobool13, label %if.end35, label %land.lhs.true14

land.lhs.true14:                                  ; preds = %land.lhs.true12
  %9 = getelementptr inbounds %struct.rtx_def* %8, i64 0, i32 0
  %bf.load15 = load i32* %9, align 8
  %bf.clear16 = and i32 %bf.load15, 65535
  %cmp17 = icmp eq i32 %bf.clear16, 61
  br i1 %cmp17, label %if.then18, label %if.end35

if.then18:                                        ; preds = %land.lhs.true14
  %ht19 = bitcast i8* %data to %struct.hash_table**
  %10 = load %struct.hash_table** %ht19, align 8, !tbaa !65
  %11 = bitcast %struct.rtx_def* %8 to i8*
  %call20 = tail call %struct.hash_entry* @hash_lookup(%struct.hash_table* %10, i8* %11, i32 0, i8* (%struct.obstack*, i8*)* null) #5
  %tobool21 = icmp eq %struct.hash_entry* %call20, null
  br i1 %tobool21, label %if.end35, label %land.lhs.true22

land.lhs.true22:                                  ; preds = %if.then18
  %insns = getelementptr inbounds %struct.hash_entry* %call20, i64 1
  %12 = bitcast %struct.hash_entry* %insns to %struct.rtx_def**
  %13 = load %struct.rtx_def** %12, align 8, !tbaa !69
  %tobool23 = icmp eq %struct.rtx_def* %13, null
  br i1 %tobool23, label %land.lhs.true22.if.then29_crit_edge, label %lor.lhs.false

land.lhs.true22.if.then29_crit_edge:              ; preds = %land.lhs.true22
  %insn30.phi.trans.insert = getelementptr inbounds i8* %data, i64 8
  %.phi.trans.insert = bitcast i8* %insn30.phi.trans.insert to %struct.rtx_def**
  %.pre = load %struct.rtx_def** %.phi.trans.insert, align 8, !tbaa !68
  br label %if.then29

lor.lhs.false:                                    ; preds = %land.lhs.true22
  %arrayidx26 = getelementptr inbounds %struct.rtx_def* %13, i64 0, i32 1, i64 0
  %rtx27 = bitcast %union.rtunion_def* %arrayidx26 to %struct.rtx_def**
  %14 = load %struct.rtx_def** %rtx27, align 8, !tbaa !9
  %insn = getelementptr inbounds i8* %data, i64 8
  %15 = bitcast i8* %insn to %struct.rtx_def**
  %16 = load %struct.rtx_def** %15, align 8, !tbaa !68
  %cmp28 = icmp eq %struct.rtx_def* %14, %16
  br i1 %cmp28, label %if.end35, label %if.then29

if.then29:                                        ; preds = %land.lhs.true22.if.then29_crit_edge, %lor.lhs.false
  %17 = phi %struct.rtx_def* [ %.pre, %land.lhs.true22.if.then29_crit_edge ], [ %16, %lor.lhs.false ]
  %call32 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 0, %struct.rtx_def* %17, %struct.rtx_def* %13) #5
  %18 = getelementptr inbounds %struct.hash_entry* %insns, i64 0, i32 0
  %call32.c = bitcast %struct.rtx_def* %call32 to %struct.hash_entry*
  store %struct.hash_entry* %call32.c, %struct.hash_entry** %18, align 8, !tbaa !69
  br label %if.end35

if.end35:                                         ; preds = %entry, %land.lhs.true1, %land.lhs.true, %lor.lhs.false, %if.then18, %land.lhs.true12, %if.else, %land.lhs.true14, %if.then29, %if.then
  ret i32 0
}

declare %struct.hash_entry* @hash_lookup(%struct.hash_table*, i8*, i32, i8* (%struct.obstack*, i8*)*) #2

declare i8* @hash_allocate(%struct.hash_table*, i32) #2

; Function Attrs: nounwind uwtable
define internal fastcc void @fixup_var_refs_insns(%struct.rtx_def* %insn, %struct.rtx_def* %var, i32 %promoted_mode, i32 %unsignedp, i32 %toplevel, %struct.rtx_def* %may_share) #0 {
entry:
  %tobool50 = icmp eq %struct.rtx_def* %insn, null
  br i1 %tobool50, label %while.end, label %while.body

while.body:                                       ; preds = %entry, %while.cond.backedge
  %insn.addr.051 = phi %struct.rtx_def* [ %0, %while.cond.backedge ], [ %insn, %entry ]
  %arrayidx = getelementptr inbounds %struct.rtx_def* %insn.addr.051, i64 0, i32 1, i64 2
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %0 = load %struct.rtx_def** %rtx, align 8, !tbaa !9
  %1 = getelementptr inbounds %struct.rtx_def* %insn.addr.051, i64 0, i32 0
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 34
  br i1 %cmp, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %while.body
  %arrayidx2 = getelementptr inbounds %struct.rtx_def* %insn.addr.051, i64 0, i32 1, i64 3
  %rtx3 = bitcast %union.rtunion_def* %arrayidx2 to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx3, align 8, !tbaa !9
  %3 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 0
  %bf.load4 = load i32* %3, align 8
  %bf.clear5 = and i32 %bf.load4, 65535
  %cmp6 = icmp eq i32 %bf.clear5, 141
  br i1 %cmp6, label %for.cond.preheader, label %if.else

for.cond.preheader:                               ; preds = %land.lhs.true
  %arrayidx12 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 0
  %rtx13 = bitcast %union.rtunion_def* %arrayidx12 to %struct.rtx_def**
  %4 = load %struct.rtx_def** %rtx13, align 8, !tbaa !9
  %tobool14 = icmp eq %struct.rtx_def* %4, null
  br i1 %tobool14, label %for.inc, label %if.then15

if.then15:                                        ; preds = %for.cond.preheader
  tail call void @push_to_sequence(%struct.rtx_def* %4) #5
  tail call fastcc void @fixup_var_refs_insns(%struct.rtx_def* %4, %struct.rtx_def* %var, i32 %promoted_mode, i32 %unsignedp, i32 0, %struct.rtx_def* %may_share)
  %call = tail call %struct.rtx_def* @get_insns() #5
  %5 = load %struct.rtx_def** %rtx3, align 8, !tbaa !9
  %6 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 1, i64 0, i32 0
  %call.c = ptrtoint %struct.rtx_def* %call to i64
  store i64 %call.c, i64* %6, align 8, !tbaa !9
  tail call void @end_sequence() #5
  %.pre = load %struct.rtx_def** %rtx3, align 8, !tbaa !9
  br label %for.inc

for.inc:                                          ; preds = %for.cond.preheader, %if.then15
  %7 = phi %struct.rtx_def* [ %2, %for.cond.preheader ], [ %.pre, %if.then15 ]
  %arrayidx12.1 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 1, i64 1
  %rtx13.1 = bitcast %union.rtunion_def* %arrayidx12.1 to %struct.rtx_def**
  %8 = load %struct.rtx_def** %rtx13.1, align 8, !tbaa !9
  %tobool14.1 = icmp eq %struct.rtx_def* %8, null
  br i1 %tobool14.1, label %for.inc.1, label %if.then15.1

if.else:                                          ; preds = %land.lhs.true, %while.body
  %idxprom2548 = zext i32 %bf.clear to i64
  %arrayidx26 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom2548
  %9 = load i8* %arrayidx26, align 1, !tbaa !22
  %cmp27 = icmp eq i8 %9, 105
  br i1 %cmp27, label %if.then29, label %while.cond.backedge

while.cond.backedge:                              ; preds = %for.inc.1, %if.then15.2, %if.else, %if.then29
  %tobool = icmp eq %struct.rtx_def* %0, null
  br i1 %tobool, label %while.end, label %while.body

if.then29:                                        ; preds = %if.else
  tail call fastcc void @fixup_var_refs_insn(%struct.rtx_def* %insn.addr.051, %struct.rtx_def* %var, i32 %promoted_mode, i32 %unsignedp, i32 %toplevel, %struct.rtx_def* %may_share)
  br label %while.cond.backedge

while.end:                                        ; preds = %while.cond.backedge, %entry
  ret void

if.then15.1:                                      ; preds = %for.inc
  tail call void @push_to_sequence(%struct.rtx_def* %8) #5
  tail call fastcc void @fixup_var_refs_insns(%struct.rtx_def* %8, %struct.rtx_def* %var, i32 %promoted_mode, i32 %unsignedp, i32 0, %struct.rtx_def* %may_share)
  %call.1 = tail call %struct.rtx_def* @get_insns() #5
  %10 = load %struct.rtx_def** %rtx3, align 8, !tbaa !9
  %11 = getelementptr inbounds %struct.rtx_def* %10, i64 0, i32 1, i64 1, i32 0
  %call.c.1 = ptrtoint %struct.rtx_def* %call.1 to i64
  store i64 %call.c.1, i64* %11, align 8, !tbaa !9
  tail call void @end_sequence() #5
  %.pre52 = load %struct.rtx_def** %rtx3, align 8, !tbaa !9
  br label %for.inc.1

for.inc.1:                                        ; preds = %if.then15.1, %for.inc
  %12 = phi %struct.rtx_def* [ %.pre52, %if.then15.1 ], [ %7, %for.inc ]
  %arrayidx12.2 = getelementptr inbounds %struct.rtx_def* %12, i64 0, i32 1, i64 2
  %rtx13.2 = bitcast %union.rtunion_def* %arrayidx12.2 to %struct.rtx_def**
  %13 = load %struct.rtx_def** %rtx13.2, align 8, !tbaa !9
  %tobool14.2 = icmp eq %struct.rtx_def* %13, null
  br i1 %tobool14.2, label %while.cond.backedge, label %if.then15.2

if.then15.2:                                      ; preds = %for.inc.1
  tail call void @push_to_sequence(%struct.rtx_def* %13) #5
  tail call fastcc void @fixup_var_refs_insns(%struct.rtx_def* %13, %struct.rtx_def* %var, i32 %promoted_mode, i32 %unsignedp, i32 0, %struct.rtx_def* %may_share)
  %call.2 = tail call %struct.rtx_def* @get_insns() #5
  %14 = load %struct.rtx_def** %rtx3, align 8, !tbaa !9
  %15 = getelementptr inbounds %struct.rtx_def* %14, i64 0, i32 1, i64 2, i32 0
  %call.c.2 = ptrtoint %struct.rtx_def* %call.2 to i64
  store i64 %call.c.2, i64* %15, align 8, !tbaa !9
  tail call void @end_sequence() #5
  br label %while.cond.backedge
}

declare void @push_to_full_sequence(%struct.rtx_def*, %struct.rtx_def*) #2

; Function Attrs: nounwind uwtable
define internal fastcc void @fixup_var_refs_insn(%struct.rtx_def* %insn, %struct.rtx_def* %var, i32 %promoted_mode, i32 %unsignedp, i32 %toplevel, %struct.rtx_def* %no_share) #0 {
entry:
  %replacements = alloca %struct.fixup_replacement*, align 8
  %arrayidx = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 6
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %0 = load %struct.rtx_def** %rtx, align 8, !tbaa !9
  %arrayidx2 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 3
  %rtx3 = bitcast %union.rtunion_def* %arrayidx2 to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx3, align 8, !tbaa !9
  %2 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 0
  %bf.load = load i32* %2, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 49
  br i1 %cmp, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %entry
  %arrayidx8 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 0
  %rtx9 = bitcast %union.rtunion_def* %arrayidx8 to %struct.rtx_def**
  %3 = load %struct.rtx_def** %rtx9, align 8, !tbaa !9
  %cmp10 = icmp eq %struct.rtx_def* %3, %var
  br i1 %cmp10, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true
  %4 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 0
  %bf.load17 = load i32* %4, align 8
  %bf.clear18 = and i32 %bf.load17, 65535
  %cmp19 = icmp eq i32 %bf.clear18, 65
  br i1 %cmp19, label %land.lhs.true20, label %if.else

land.lhs.true20:                                  ; preds = %lor.lhs.false
  %fld27 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 1
  %rtx29 = bitcast [1 x %union.rtunion_def]* %fld27 to %struct.rtx_def**
  %5 = load %struct.rtx_def** %rtx29, align 8, !tbaa !9
  %cmp30 = icmp eq %struct.rtx_def* %5, %var
  br i1 %cmp30, label %if.then, label %lor.lhs.false31

lor.lhs.false31:                                  ; preds = %land.lhs.true20
  %arrayidx39 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 1, i64 1
  %rtx40 = bitcast %union.rtunion_def* %arrayidx39 to %struct.rtx_def**
  %6 = load %struct.rtx_def** %rtx40, align 8, !tbaa !9
  %cmp41 = icmp eq %struct.rtx_def* %6, %var
  br i1 %cmp41, label %if.then, label %if.else

if.then:                                          ; preds = %lor.lhs.false31, %land.lhs.true20, %land.lhs.true
  %call = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn, i32 7, %struct.rtx_def* null) #5
  %cmp42 = icmp eq %struct.rtx_def* %call, null
  br i1 %cmp42, label %if.end, label %if.then43

if.then43:                                        ; preds = %if.then
  %arrayidx45 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 0
  %rtx46 = bitcast %union.rtunion_def* %arrayidx45 to %struct.rtx_def**
  %7 = load %struct.rtx_def** %rtx46, align 8, !tbaa !9
  %call50 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %7, i32 6, %struct.rtx_def* null) #5
  call void @remove_note(%struct.rtx_def* %7, %struct.rtx_def* %call50) #5
  br label %if.end

if.end:                                           ; preds = %if.then, %if.then43
  %call51 = call %struct.rtx_def* @delete_insn(%struct.rtx_def* %insn) #5
  br label %while.cond304.preheader

if.else:                                          ; preds = %lor.lhs.false31, %lor.lhs.false, %entry
  %tobool = icmp eq i32 %toplevel, 0
  br i1 %tobool, label %if.else155, label %land.lhs.true52

land.lhs.true52:                                  ; preds = %if.else
  %8 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 0
  %bf.load53 = load i32* %8, align 8
  %bf.clear54 = and i32 %bf.load53, 65535
  %idxprom385 = zext i32 %bf.clear54 to i64
  %arrayidx55 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom385
  %9 = load i8* %arrayidx55, align 1, !tbaa !22
  %cmp56 = icmp eq i8 %9, 105
  br i1 %cmp56, label %cond.true, label %if.else155

cond.true:                                        ; preds = %land.lhs.true52
  %cmp63 = icmp eq i32 %bf.clear, 47
  br i1 %cmp63, label %cond.end74, label %cond.false

cond.false:                                       ; preds = %cond.true
  %call72 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %insn, %struct.rtx_def* %1) #5
  br label %cond.end74

cond.end74:                                       ; preds = %cond.true, %cond.false
  %cond75 = phi %struct.rtx_def* [ %call72, %cond.false ], [ %1, %cond.true ]
  %cmp76 = icmp eq %struct.rtx_def* %cond75, null
  br i1 %cmp76, label %if.else155, label %land.lhs.true78

land.lhs.true78:                                  ; preds = %cond.end74
  %fld79 = getelementptr inbounds %struct.rtx_def* %cond75, i64 0, i32 1
  %rtx81 = bitcast [1 x %union.rtunion_def]* %fld79 to %struct.rtx_def**
  %10 = load %struct.rtx_def** %rtx81, align 8, !tbaa !9
  %cmp82 = icmp eq %struct.rtx_def* %10, %var
  br i1 %cmp82, label %land.lhs.true84, label %if.else155

land.lhs.true84:                                  ; preds = %land.lhs.true78
  %call85 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn, i32 6, %struct.rtx_def* null) #5
  %cmp86 = icmp eq %struct.rtx_def* %call85, null
  br i1 %cmp86, label %land.lhs.true88, label %if.else155

land.lhs.true88:                                  ; preds = %land.lhs.true84
  %arrayidx90 = getelementptr inbounds %struct.rtx_def* %cond75, i64 0, i32 1, i64 1
  %rtx91 = bitcast %union.rtunion_def* %arrayidx90 to %struct.rtx_def**
  %11 = load %struct.rtx_def** %rtx91, align 8, !tbaa !9
  %call92 = call i32 @rtx_equal_p(%struct.rtx_def* %11, %struct.rtx_def* %var) #5
  %tobool93 = icmp eq i32 %call92, 0
  br i1 %tobool93, label %lor.lhs.false94, label %if.then153

lor.lhs.false94:                                  ; preds = %land.lhs.true88
  %12 = load %struct.rtx_def** %rtx91, align 8, !tbaa !9
  %13 = getelementptr inbounds %struct.rtx_def* %12, i64 0, i32 0
  %bf.load98 = load i32* %13, align 8
  %bf.clear99 = and i32 %bf.load98, 65535
  %cmp100 = icmp eq i32 %bf.clear99, 61
  br i1 %cmp100, label %land.lhs.true102, label %if.else155

land.lhs.true102:                                 ; preds = %lor.lhs.false94
  %call103 = call %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def* %insn) #5
  %cmp104 = icmp eq %struct.rtx_def* %call103, null
  br i1 %cmp104, label %if.else155, label %land.lhs.true106

land.lhs.true106:                                 ; preds = %land.lhs.true102
  %14 = getelementptr inbounds %struct.rtx_def* %call103, i64 0, i32 0
  %bf.load107 = load i32* %14, align 8
  %bf.clear108 = and i32 %bf.load107, 65535
  %idxprom109386 = zext i32 %bf.clear108 to i64
  %arrayidx110 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom109386
  %15 = load i8* %arrayidx110, align 1, !tbaa !22
  %cmp112 = icmp eq i8 %15, 105
  br i1 %cmp112, label %cond.true114, label %if.else155

cond.true114:                                     ; preds = %land.lhs.true106
  %arrayidx116 = getelementptr inbounds %struct.rtx_def* %call103, i64 0, i32 1, i64 3
  %rtx117 = bitcast %union.rtunion_def* %arrayidx116 to %struct.rtx_def**
  %16 = load %struct.rtx_def** %rtx117, align 8, !tbaa !9
  %17 = getelementptr inbounds %struct.rtx_def* %16, i64 0, i32 0
  %bf.load118 = load i32* %17, align 8
  %bf.clear119 = and i32 %bf.load118, 65535
  %cmp120 = icmp eq i32 %bf.clear119, 47
  br i1 %cmp120, label %cond.end134, label %cond.false126

cond.false126:                                    ; preds = %cond.true114
  %call130 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %call103, %struct.rtx_def* %16) #5
  br label %cond.end134

cond.end134:                                      ; preds = %cond.true114, %cond.false126
  %cond135 = phi %struct.rtx_def* [ %call130, %cond.false126 ], [ %16, %cond.true114 ]
  %cmp136 = icmp eq %struct.rtx_def* %cond135, null
  br i1 %cmp136, label %if.else155, label %land.lhs.true138

land.lhs.true138:                                 ; preds = %cond.end134
  %fld139 = getelementptr inbounds %struct.rtx_def* %cond135, i64 0, i32 1
  %rtx141 = bitcast [1 x %union.rtunion_def]* %fld139 to %struct.rtx_def**
  %18 = load %struct.rtx_def** %rtx141, align 8, !tbaa !9
  %19 = load %struct.rtx_def** %rtx91, align 8, !tbaa !9
  %cmp145 = icmp eq %struct.rtx_def* %18, %19
  br i1 %cmp145, label %land.lhs.true147, label %if.else155

land.lhs.true147:                                 ; preds = %land.lhs.true138
  %arrayidx149 = getelementptr inbounds %struct.rtx_def* %cond135, i64 0, i32 1, i64 1
  %rtx150 = bitcast %union.rtunion_def* %arrayidx149 to %struct.rtx_def**
  %20 = load %struct.rtx_def** %rtx150, align 8, !tbaa !9
  %call151 = call i32 @rtx_equal_p(%struct.rtx_def* %20, %struct.rtx_def* %var) #5
  %tobool152 = icmp eq i32 %call151, 0
  br i1 %tobool152, label %if.else155, label %if.then153

if.then153:                                       ; preds = %land.lhs.true147, %land.lhs.true88
  %call154 = call %struct.rtx_def* @delete_insn(%struct.rtx_def* %insn) #5
  br label %while.cond304.preheader

if.else155:                                       ; preds = %land.lhs.true106, %land.lhs.true52, %land.lhs.true147, %cond.end134, %land.lhs.true102, %cond.end74, %if.else, %land.lhs.true138, %lor.lhs.false94, %land.lhs.true84, %land.lhs.true78
  store %struct.fixup_replacement* null, %struct.fixup_replacement** %replacements, align 8, !tbaa !9
  %arrayidx157 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 2
  %rtx158 = bitcast %union.rtunion_def* %arrayidx157 to %struct.rtx_def**
  %21 = load %struct.rtx_def** %rtx158, align 8, !tbaa !9
  call fastcc void @fixup_var_refs_1(%struct.rtx_def* %var, i32 %promoted_mode, %struct.rtx_def** %rtx3, %struct.rtx_def* %insn, %struct.fixup_replacement** %replacements, %struct.rtx_def* %no_share)
  %22 = load %struct.function** @cfun, align 8, !tbaa !9
  %x_last_parm_insn = getelementptr inbounds %struct.function* %22, i64 0, i32 36
  %23 = load %struct.rtx_def** %x_last_parm_insn, align 8, !tbaa !78
  %cmp253 = icmp eq %struct.rtx_def* %23, %insn
  br i1 %cmp253, label %if.then255, label %while.condthread-pre-split

if.then255:                                       ; preds = %if.else155
  %arrayidx257 = getelementptr inbounds %struct.rtx_def* %21, i64 0, i32 1, i64 1
  %rtx258 = bitcast %union.rtunion_def* %arrayidx257 to %struct.rtx_def**
  %24 = load %struct.rtx_def** %rtx258, align 8, !tbaa !9
  store %struct.rtx_def* %24, %struct.rtx_def** %x_last_parm_insn, align 8, !tbaa !78
  br label %while.condthread-pre-split

while.condthread-pre-split:                       ; preds = %if.then255, %if.else155
  %.pr = load %struct.fixup_replacement** %replacements, align 8, !tbaa !9
  %tobool261392 = icmp eq %struct.fixup_replacement* %.pr, null
  br i1 %tobool261392, label %while.cond304.preheader, label %while.body

while.cond304.preheader:                          ; preds = %if.end300, %while.condthread-pre-split, %if.then153, %if.end
  %note.0.ph = phi %struct.rtx_def* [ %call, %if.end ], [ %0, %if.then153 ], [ %0, %while.condthread-pre-split ], [ %0, %if.end300 ]
  %tobool305390 = icmp eq %struct.rtx_def* %note.0.ph, null
  br i1 %tobool305390, label %while.end323, label %while.body306

while.body:                                       ; preds = %while.condthread-pre-split, %if.end300
  %25 = phi %struct.fixup_replacement* [ %42, %if.end300 ], [ %.pr, %while.condthread-pre-split ]
  %new = getelementptr inbounds %struct.fixup_replacement* %25, i64 0, i32 1
  %26 = load %struct.rtx_def** %new, align 8, !tbaa !156
  %27 = getelementptr inbounds %struct.rtx_def* %26, i64 0, i32 0
  %bf.load262 = load i32* %27, align 8
  %bf.clear263 = and i32 %bf.load262, 65535
  %cmp264 = icmp eq i32 %bf.clear263, 61
  br i1 %cmp264, label %if.then266, label %if.end300

if.then266:                                       ; preds = %while.body
  %old = getelementptr inbounds %struct.fixup_replacement* %25, i64 0, i32 0
  %28 = load %struct.rtx_def** %old, align 8, !tbaa !158
  %29 = getelementptr inbounds %struct.rtx_def* %28, i64 0, i32 0
  %bf.load267 = load i32* %29, align 8
  %bf.clear268 = and i32 %bf.load267, 65535
  %cmp269 = icmp eq i32 %bf.clear268, 63
  br i1 %cmp269, label %if.then271, label %if.else275

if.then271:                                       ; preds = %if.then266
  %call273 = call fastcc %struct.rtx_def* @fixup_memory_subreg(%struct.rtx_def* %28, %struct.rtx_def* %insn, i32 0)
  %30 = load %struct.fixup_replacement** %replacements, align 8, !tbaa !9
  %old274 = getelementptr inbounds %struct.fixup_replacement* %30, i64 0, i32 0
  store %struct.rtx_def* %call273, %struct.rtx_def** %old274, align 8, !tbaa !158
  br label %if.end279

if.else275:                                       ; preds = %if.then266
  %call277 = call fastcc %struct.rtx_def* @fixup_stack_1(%struct.rtx_def* %28, %struct.rtx_def* %insn)
  %31 = load %struct.fixup_replacement** %replacements, align 8, !tbaa !9
  %old278 = getelementptr inbounds %struct.fixup_replacement* %31, i64 0, i32 0
  store %struct.rtx_def* %call277, %struct.rtx_def** %old278, align 8, !tbaa !158
  br label %if.end279

if.end279:                                        ; preds = %if.else275, %if.then271
  %32 = load %struct.fixup_replacement** %replacements, align 8, !tbaa !9
  %new280 = getelementptr inbounds %struct.fixup_replacement* %32, i64 0, i32 1
  %33 = load %struct.rtx_def** %new280, align 8, !tbaa !156
  %34 = getelementptr inbounds %struct.rtx_def* %33, i64 0, i32 0
  %bf.load281 = load i32* %34, align 8
  %old284 = getelementptr inbounds %struct.fixup_replacement* %32, i64 0, i32 0
  %35 = load %struct.rtx_def** %old284, align 8, !tbaa !158
  %36 = getelementptr inbounds %struct.rtx_def* %35, i64 0, i32 0
  %bf.load285 = load i32* %36, align 8
  %bf.lshr282387 = xor i32 %bf.load285, %bf.load281
  %37 = and i32 %bf.lshr282387, 16711680
  %cmp288 = icmp eq i32 %37, 0
  br i1 %cmp288, label %if.else294, label %if.then290

if.then290:                                       ; preds = %if.end279
  call void @start_sequence() #5
  %38 = load %struct.fixup_replacement** %replacements, align 8, !tbaa !9
  %new291 = getelementptr inbounds %struct.fixup_replacement* %38, i64 0, i32 1
  %39 = load %struct.rtx_def** %new291, align 8, !tbaa !156
  %old292 = getelementptr inbounds %struct.fixup_replacement* %38, i64 0, i32 0
  %40 = load %struct.rtx_def** %old292, align 8, !tbaa !158
  call void @convert_move(%struct.rtx_def* %39, %struct.rtx_def* %40, i32 %unsignedp) #5
  %call293 = call %struct.rtx_def* @gen_sequence() #5
  call void @end_sequence() #5
  br label %if.end298

if.else294:                                       ; preds = %if.end279
  %call297 = call %struct.rtx_def* @gen_move_insn(%struct.rtx_def* %33, %struct.rtx_def* %35) #5
  br label %if.end298

if.end298:                                        ; preds = %if.else294, %if.then290
  %seq.0 = phi %struct.rtx_def* [ %call293, %if.then290 ], [ %call297, %if.else294 ]
  %call299 = call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %seq.0, %struct.rtx_def* %insn) #5
  %.pre = load %struct.fixup_replacement** %replacements, align 8, !tbaa !9
  br label %if.end300

if.end300:                                        ; preds = %if.end298, %while.body
  %41 = phi %struct.fixup_replacement* [ %.pre, %if.end298 ], [ %25, %while.body ]
  %next301 = getelementptr inbounds %struct.fixup_replacement* %41, i64 0, i32 2
  %42 = load %struct.fixup_replacement** %next301, align 8, !tbaa !159
  %43 = bitcast %struct.fixup_replacement* %41 to i8*
  call void @free(i8* %43)
  store %struct.fixup_replacement* %42, %struct.fixup_replacement** %replacements, align 8, !tbaa !9
  %tobool261 = icmp eq %struct.fixup_replacement* %42, null
  br i1 %tobool261, label %while.cond304.preheader, label %while.body

while.body306:                                    ; preds = %while.cond304.preheader, %if.end319
  %note.0391 = phi %struct.rtx_def* [ %47, %if.end319 ], [ %note.0.ph, %while.cond304.preheader ]
  %44 = getelementptr inbounds %struct.rtx_def* %note.0391, i64 0, i32 0
  %bf.load307 = load i32* %44, align 8
  %bf.clear308 = and i32 %bf.load307, 65535
  %cmp309 = icmp eq i32 %bf.clear308, 4
  br i1 %cmp309, label %if.end319, label %if.then311

if.then311:                                       ; preds = %while.body306
  %arrayidx313 = getelementptr inbounds %struct.rtx_def* %note.0391, i64 0, i32 1, i64 0
  %rtx314 = bitcast %union.rtunion_def* %arrayidx313 to %struct.rtx_def**
  %45 = load %struct.rtx_def** %rtx314, align 8, !tbaa !9
  %call315 = call fastcc %struct.rtx_def* @walk_fixup_memory_subreg(%struct.rtx_def* %45, %struct.rtx_def* %insn)
  %46 = getelementptr inbounds %union.rtunion_def* %arrayidx313, i64 0, i32 0
  %call315.c = ptrtoint %struct.rtx_def* %call315 to i64
  store i64 %call315.c, i64* %46, align 8, !tbaa !9
  br label %if.end319

if.end319:                                        ; preds = %while.body306, %if.then311
  %arrayidx321 = getelementptr inbounds %struct.rtx_def* %note.0391, i64 0, i32 1, i64 1
  %rtx322 = bitcast %union.rtunion_def* %arrayidx321 to %struct.rtx_def**
  %47 = load %struct.rtx_def** %rtx322, align 8, !tbaa !9
  %tobool305 = icmp eq %struct.rtx_def* %47, null
  br i1 %tobool305, label %while.end323, label %while.body306

while.end323:                                     ; preds = %if.end319, %while.cond304.preheader
  ret void
}

declare %struct.rtx_def* @find_reg_note(%struct.rtx_def*, i32, %struct.rtx_def*) #2

; Function Attrs: nounwind uwtable
define internal fastcc void @fixup_var_refs_1(%struct.rtx_def* %var, i32 %promoted_mode, %struct.rtx_def** %loc, %struct.rtx_def* %insn, %struct.fixup_replacement** %replacements, %struct.rtx_def* %no_share) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %var, i64 0, i32 0
  %.pre = load %struct.rtx_def** %loc, align 8, !tbaa !9
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %.pre, i64 0, i32 0
  %bf.load.pre = load i32* %.phi.trans.insert, align 8
  br label %tailrecurse

tailrecurse:                                      ; preds = %if.then283, %entry
  %bf.load = phi i32 [ %bf.load.pre, %entry ], [ %bf.load284, %if.then283 ]
  %1 = phi %struct.rtx_def* [ %.pre, %entry ], [ %var, %if.then283 ]
  %promoted_mode.tr = phi i32 [ %promoted_mode, %entry ], [ %bf.clear286, %if.then283 ]
  %2 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 0
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %sw.epilog [
    i32 70, label %sw.bb
    i32 66, label %sw.bb35
    i32 61, label %for.end1225
    i32 69, label %for.end1225
    i32 59, label %for.end1225
    i32 54, label %for.end1225
    i32 58, label %for.end1225
    i32 68, label %for.end1225
    i32 67, label %for.end1225
    i32 55, label %for.end1225
    i32 56, label %for.end1225
    i32 132, label %sw.bb87
    i32 133, label %sw.bb87
    i32 63, label %sw.bb272
    i32 47, label %sw.bb352
  ]

sw.bb:                                            ; preds = %tailrecurse
  %arrayidx = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %3 = load %struct.rtx_def** %rtx, align 8, !tbaa !9
  %cmp = icmp eq %struct.rtx_def* %3, %var
  br i1 %cmp, label %if.then, label %for.end1225

if.then:                                          ; preds = %sw.bb
  %arrayidx2 = getelementptr inbounds %struct.rtx_def* %var, i64 0, i32 1, i64 0
  %rtx3 = bitcast %union.rtunion_def* %arrayidx2 to %struct.rtx_def**
  %4 = load %struct.rtx_def** %rtx3, align 8, !tbaa !9
  %call = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %4) #5
  %call4 = tail call i32 @validate_change(%struct.rtx_def* %insn, %struct.rtx_def** %loc, %struct.rtx_def* %call, i32 0) #5
  %tobool = icmp eq i32 %call4, 0
  br i1 %tobool, label %if.then5, label %for.end1225

if.then5:                                         ; preds = %if.then
  %5 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 0
  %bf.load6 = load i32* %5, align 8
  %bf.lshr = lshr i32 %bf.load6, 16
  %bf.clear7 = and i32 %bf.lshr, 255
  %call8 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear7) #5
  %6 = load %struct.rtx_def** %loc, align 8, !tbaa !9
  %call9 = tail call i32 @validate_replace_rtx(%struct.rtx_def* %6, %struct.rtx_def* %call8, %struct.rtx_def* %insn) #5
  %tobool10 = icmp eq i32 %call9, 0
  br i1 %tobool10, label %if.then11, label %if.end

if.then11:                                        ; preds = %if.then5
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8]* @.str, i64 0, i64 0), i32 1964, i8* getelementptr inbounds ([17 x i8]* @__FUNCTION__.fixup_var_refs_1, i64 0, i64 0)) #8
  unreachable

if.end:                                           ; preds = %if.then5
  tail call void @start_sequence() #5
  %call12 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call8, %struct.rtx_def* %call) #5
  %call13 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call12) #5
  %call14 = tail call %struct.rtx_def* @gen_sequence() #5
  tail call void @end_sequence() #5
  %arrayidx16 = getelementptr inbounds %struct.rtx_def* %call13, i64 0, i32 1, i64 4
  %rtint = bitcast %union.rtunion_def* %arrayidx16 to i32*
  %7 = load i32* %rtint, align 4, !tbaa !17
  %cmp17 = icmp sgt i32 %7, -1
  br i1 %cmp17, label %if.end31, label %cond.end

cond.end:                                         ; preds = %if.end
  %call21 = tail call i32 @recog_memoized_1(%struct.rtx_def* %call13) #5
  %cmp22 = icmp slt i32 %call21, 0
  br i1 %cmp22, label %if.then23, label %if.end31

if.then23:                                        ; preds = %cond.end
  tail call void @start_sequence() #5
  %call24 = tail call %struct.rtx_def* @force_operand(%struct.rtx_def* %call, %struct.rtx_def* %call8) #5
  %cmp25 = icmp eq %struct.rtx_def* %call24, %call8
  br i1 %cmp25, label %if.end29, label %if.then26

if.then26:                                        ; preds = %if.then23
  %call27 = tail call %struct.rtx_def* @gen_move_insn(%struct.rtx_def* %call8, %struct.rtx_def* %call24) #5
  %call28 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call27) #5
  br label %if.end29

if.end29:                                         ; preds = %if.then23, %if.then26
  %call30 = tail call %struct.rtx_def* @gen_sequence() #5
  tail call void @end_sequence() #5
  br label %if.end31

if.end31:                                         ; preds = %if.end, %if.end29, %cond.end
  %seq.0 = phi %struct.rtx_def* [ %call30, %if.end29 ], [ %call14, %cond.end ], [ %call14, %if.end ]
  %call32 = tail call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %seq.0, %struct.rtx_def* %insn) #5
  br label %for.end1225

sw.bb35:                                          ; preds = %tailrecurse
  %cmp36 = icmp eq %struct.rtx_def* %1, %var
  br i1 %cmp36, label %if.then37, label %if.end71

if.then37:                                        ; preds = %sw.bb35
  %p.017.i = load %struct.fixup_replacement** %replacements, align 8
  %cond18.i = icmp eq %struct.fixup_replacement* %p.017.i, null
  br i1 %cond18.i, label %if.then.i, label %land.rhs.i

for.cond.i:                                       ; preds = %land.rhs.i
  %next.i = getelementptr inbounds %struct.fixup_replacement* %p.019.i, i64 0, i32 2
  %p.0.i = load %struct.fixup_replacement** %next.i, align 8
  %cond.i = icmp eq %struct.fixup_replacement* %p.0.i, null
  br i1 %cond.i, label %if.then.i, label %land.rhs.i

land.rhs.i:                                       ; preds = %if.then37, %for.cond.i
  %p.019.i = phi %struct.fixup_replacement* [ %p.0.i, %for.cond.i ], [ %p.017.i, %if.then37 ]
  %old.i = getelementptr inbounds %struct.fixup_replacement* %p.019.i, i64 0, i32 0
  %8 = load %struct.rtx_def** %old.i, align 8, !tbaa !158
  %call.i = tail call i32 @rtx_equal_p(%struct.rtx_def* %8, %struct.rtx_def* %var) #5
  %lnot.i = icmp eq i32 %call.i, 0
  br i1 %lnot.i, label %for.cond.i, label %find_fixup_replacement.exit

if.then.i:                                        ; preds = %for.cond.i, %if.then37
  %call2.i = tail call noalias i8* @xmalloc(i64 24) #5
  %9 = bitcast i8* %call2.i to %struct.fixup_replacement*
  %old3.i = bitcast i8* %call2.i to %struct.rtx_def**
  store %struct.rtx_def* %var, %struct.rtx_def** %old3.i, align 8, !tbaa !158
  %new.i = getelementptr inbounds i8* %call2.i, i64 8
  %10 = bitcast i8* %new.i to %struct.rtx_def**
  store %struct.rtx_def* null, %struct.rtx_def** %10, align 8, !tbaa !156
  %11 = load %struct.fixup_replacement** %replacements, align 8, !tbaa !9
  %next4.i = getelementptr inbounds i8* %call2.i, i64 16
  %12 = bitcast i8* %next4.i to %struct.fixup_replacement**
  store %struct.fixup_replacement* %11, %struct.fixup_replacement** %12, align 8, !tbaa !159
  store %struct.fixup_replacement* %9, %struct.fixup_replacement** %replacements, align 8, !tbaa !9
  br label %find_fixup_replacement.exit

find_fixup_replacement.exit:                      ; preds = %land.rhs.i, %if.then.i
  %p.1.i = phi %struct.fixup_replacement* [ %9, %if.then.i ], [ %p.019.i, %land.rhs.i ]
  %new = getelementptr inbounds %struct.fixup_replacement* %p.1.i, i64 0, i32 1
  %13 = load %struct.rtx_def** %new, align 8, !tbaa !156
  %tobool39 = icmp eq %struct.rtx_def* %13, null
  br i1 %tobool39, label %if.end42, label %if.then40

if.then40:                                        ; preds = %find_fixup_replacement.exit
  store %struct.rtx_def* %13, %struct.rtx_def** %loc, align 8, !tbaa !9
  br label %for.end1225

if.end42:                                         ; preds = %find_fixup_replacement.exit
  %call43 = tail call fastcc %struct.rtx_def* @fixup_stack_1(%struct.rtx_def* %var, %struct.rtx_def* %insn)
  store %struct.rtx_def* %call43, %struct.rtx_def** %new, align 8, !tbaa !156
  store %struct.rtx_def* %call43, %struct.rtx_def** %loc, align 8, !tbaa !9
  %arrayidx46 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 4
  %rtint47 = bitcast %union.rtunion_def* %arrayidx46 to i32*
  store i32 -1, i32* %rtint47, align 4, !tbaa !17
  %14 = load i32* @flag_force_mem, align 4, !tbaa !17
  %tobool48 = icmp eq i32 %14, 0
  br i1 %tobool48, label %land.lhs.true, label %if.end68

land.lhs.true:                                    ; preds = %if.end42
  %15 = getelementptr inbounds %struct.rtx_def* %call43, i64 0, i32 0
  %bf.load49 = load i32* %15, align 8
  %bf.lshr50 = lshr i32 %bf.load49, 16
  %bf.clear51 = and i32 %bf.lshr50, 255
  %cmp52 = icmp eq i32 %bf.clear51, %promoted_mode.tr
  br i1 %cmp52, label %cond.false62, label %if.end68

cond.false62:                                     ; preds = %land.lhs.true
  %call63 = tail call i32 @recog_memoized_1(%struct.rtx_def* %insn) #5
  %cmp66 = icmp sgt i32 %call63, -1
  br i1 %cmp66, label %for.end1225, label %if.end68

if.end68:                                         ; preds = %if.end42, %cond.false62, %land.lhs.true
  %call69 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %promoted_mode.tr) #5
  store %struct.rtx_def* %call69, %struct.rtx_def** %new, align 8, !tbaa !156
  store %struct.rtx_def* %call69, %struct.rtx_def** %loc, align 8, !tbaa !9
  br label %for.end1225

if.end71:                                         ; preds = %sw.bb35
  %call72 = tail call i32 @reg_mentioned_p(%struct.rtx_def* %var, %struct.rtx_def* %1) #5
  %tobool73 = icmp eq i32 %call72, 0
  br i1 %tobool73, label %sw.epilog, label %if.then74

if.then74:                                        ; preds = %if.end71
  %p.017.i1616 = load %struct.fixup_replacement** %replacements, align 8
  %cond18.i1617 = icmp eq %struct.fixup_replacement* %p.017.i1616, null
  br i1 %cond18.i1617, label %if.then.i1631, label %land.rhs.i1626

for.cond.i1621:                                   ; preds = %land.rhs.i1626
  %next.i1618 = getelementptr inbounds %struct.fixup_replacement* %p.019.i1622, i64 0, i32 2
  %p.0.i1619 = load %struct.fixup_replacement** %next.i1618, align 8
  %cond.i1620 = icmp eq %struct.fixup_replacement* %p.0.i1619, null
  br i1 %cond.i1620, label %if.then.i1631, label %land.rhs.i1626

land.rhs.i1626:                                   ; preds = %if.then74, %for.cond.i1621
  %p.019.i1622 = phi %struct.fixup_replacement* [ %p.0.i1619, %for.cond.i1621 ], [ %p.017.i1616, %if.then74 ]
  %old.i1623 = getelementptr inbounds %struct.fixup_replacement* %p.019.i1622, i64 0, i32 0
  %16 = load %struct.rtx_def** %old.i1623, align 8, !tbaa !158
  %call.i1624 = tail call i32 @rtx_equal_p(%struct.rtx_def* %16, %struct.rtx_def* %1) #5
  %lnot.i1625 = icmp eq i32 %call.i1624, 0
  br i1 %lnot.i1625, label %for.cond.i1621, label %find_fixup_replacement.exit1633

if.then.i1631:                                    ; preds = %for.cond.i1621, %if.then74
  %call2.i1627 = tail call noalias i8* @xmalloc(i64 24) #5
  %17 = bitcast i8* %call2.i1627 to %struct.fixup_replacement*
  %old3.i1628 = bitcast i8* %call2.i1627 to %struct.rtx_def**
  store %struct.rtx_def* %1, %struct.rtx_def** %old3.i1628, align 8, !tbaa !158
  %new.i1629 = getelementptr inbounds i8* %call2.i1627, i64 8
  %18 = bitcast i8* %new.i1629 to %struct.rtx_def**
  store %struct.rtx_def* null, %struct.rtx_def** %18, align 8, !tbaa !156
  %19 = load %struct.fixup_replacement** %replacements, align 8, !tbaa !9
  %next4.i1630 = getelementptr inbounds i8* %call2.i1627, i64 16
  %20 = bitcast i8* %next4.i1630 to %struct.fixup_replacement**
  store %struct.fixup_replacement* %19, %struct.fixup_replacement** %20, align 8, !tbaa !159
  store %struct.fixup_replacement* %17, %struct.fixup_replacement** %replacements, align 8, !tbaa !9
  br label %find_fixup_replacement.exit1633

find_fixup_replacement.exit1633:                  ; preds = %land.rhs.i1626, %if.then.i1631
  %p.1.i1632 = phi %struct.fixup_replacement* [ %17, %if.then.i1631 ], [ %p.019.i1622, %land.rhs.i1626 ]
  %new76 = getelementptr inbounds %struct.fixup_replacement* %p.1.i1632, i64 0, i32 1
  %21 = load %struct.rtx_def** %new76, align 8, !tbaa !156
  %cmp77 = icmp eq %struct.rtx_def* %21, null
  br i1 %cmp77, label %if.then78, label %if.end81

if.then78:                                        ; preds = %find_fixup_replacement.exit1633
  %call79 = tail call %struct.rtx_def* @copy_most_rtx(%struct.rtx_def* %1, %struct.rtx_def* %no_share) #5
  store %struct.rtx_def* %call79, %struct.rtx_def** %new76, align 8, !tbaa !156
  br label %if.end81

if.end81:                                         ; preds = %if.then78, %find_fixup_replacement.exit1633
  %22 = phi %struct.rtx_def* [ %call79, %if.then78 ], [ %21, %find_fixup_replacement.exit1633 ]
  store %struct.rtx_def* %22, %struct.rtx_def** %loc, align 8, !tbaa !9
  %23 = getelementptr inbounds %struct.rtx_def* %22, i64 0, i32 0
  %bf.load83 = load i32* %23, align 8
  %bf.clear84 = and i32 %bf.load83, 65535
  br label %sw.epilog

sw.bb87:                                          ; preds = %tailrecurse, %tailrecurse
  %fld88 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1
  %rtx90 = bitcast [1 x %union.rtunion_def]* %fld88 to %struct.rtx_def**
  %24 = load %struct.rtx_def** %rtx90, align 8, !tbaa !9
  %cmp91 = icmp eq %struct.rtx_def* %24, %var
  br i1 %cmp91, label %sw.bb87.if.then106_crit_edge, label %lor.lhs.false

sw.bb87.if.then106_crit_edge:                     ; preds = %sw.bb87
  %bf.load110.pre = load i32* %0, align 8
  br label %if.then106

lor.lhs.false:                                    ; preds = %sw.bb87
  %25 = getelementptr inbounds %struct.rtx_def* %24, i64 0, i32 0
  %bf.load95 = load i32* %25, align 8
  %bf.clear96 = and i32 %bf.load95, 65535
  %cmp97 = icmp eq i32 %bf.clear96, 63
  br i1 %cmp97, label %land.lhs.true98, label %sw.epilog

land.lhs.true98:                                  ; preds = %lor.lhs.false
  %arrayidx103 = getelementptr inbounds %struct.rtx_def* %24, i64 0, i32 1, i64 0
  %rtx104 = bitcast %union.rtunion_def* %arrayidx103 to %struct.rtx_def**
  %26 = load %struct.rtx_def** %rtx104, align 8, !tbaa !9
  %cmp105 = icmp eq %struct.rtx_def* %26, %var
  br i1 %cmp105, label %if.then106, label %sw.epilog

if.then106:                                       ; preds = %sw.bb87.if.then106_crit_edge, %land.lhs.true98
  %bf.load110 = phi i32 [ %bf.load110.pre, %sw.bb87.if.then106_crit_edge ], [ %bf.load95, %land.lhs.true98 ]
  %bf.clear111 = and i32 %bf.load110, 65535
  %cmp112 = icmp eq i32 %bf.clear111, 63
  br i1 %cmp112, label %if.then113, label %if.else147

if.then113:                                       ; preds = %if.then106
  %bf.lshr115 = lshr i32 %bf.load110, 16
  %bf.clear116 = and i32 %bf.lshr115, 255
  %idxprom1610 = zext i32 %bf.clear116 to i64
  %arrayidx117 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom1610
  %27 = load i16* %arrayidx117, align 2, !tbaa !73
  %bf.load118 = load i32* %0, align 8
  %bf.lshr119 = lshr i32 %bf.load118, 16
  %bf.clear120 = and i32 %bf.lshr119, 255
  %idxprom1211611 = zext i32 %bf.clear120 to i64
  %arrayidx122 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom1211611
  %28 = load i16* %arrayidx122, align 2, !tbaa !73
  %cmp124 = icmp ugt i16 %27, %28
  br i1 %cmp124, label %if.then126, label %if.else

if.then126:                                       ; preds = %if.then113
  %p.017.i1634 = load %struct.fixup_replacement** %replacements, align 8
  %cond18.i1635 = icmp eq %struct.fixup_replacement* %p.017.i1634, null
  br i1 %cond18.i1635, label %if.then.i1649, label %land.rhs.i1644

for.cond.i1639:                                   ; preds = %land.rhs.i1644
  %next.i1636 = getelementptr inbounds %struct.fixup_replacement* %p.019.i1640, i64 0, i32 2
  %p.0.i1637 = load %struct.fixup_replacement** %next.i1636, align 8
  %cond.i1638 = icmp eq %struct.fixup_replacement* %p.0.i1637, null
  br i1 %cond.i1638, label %if.then.i1649, label %land.rhs.i1644

land.rhs.i1644:                                   ; preds = %if.then126, %for.cond.i1639
  %p.019.i1640 = phi %struct.fixup_replacement* [ %p.0.i1637, %for.cond.i1639 ], [ %p.017.i1634, %if.then126 ]
  %old.i1641 = getelementptr inbounds %struct.fixup_replacement* %p.019.i1640, i64 0, i32 0
  %29 = load %struct.rtx_def** %old.i1641, align 8, !tbaa !158
  %call.i1642 = tail call i32 @rtx_equal_p(%struct.rtx_def* %29, %struct.rtx_def* %var) #5
  %lnot.i1643 = icmp eq i32 %call.i1642, 0
  br i1 %lnot.i1643, label %for.cond.i1639, label %find_fixup_replacement.exit1651

if.then.i1649:                                    ; preds = %for.cond.i1639, %if.then126
  %call2.i1645 = tail call noalias i8* @xmalloc(i64 24) #5
  %30 = bitcast i8* %call2.i1645 to %struct.fixup_replacement*
  %old3.i1646 = bitcast i8* %call2.i1645 to %struct.rtx_def**
  store %struct.rtx_def* %var, %struct.rtx_def** %old3.i1646, align 8, !tbaa !158
  %new.i1647 = getelementptr inbounds i8* %call2.i1645, i64 8
  %31 = bitcast i8* %new.i1647 to %struct.rtx_def**
  store %struct.rtx_def* null, %struct.rtx_def** %31, align 8, !tbaa !156
  %32 = load %struct.fixup_replacement** %replacements, align 8, !tbaa !9
  %next4.i1648 = getelementptr inbounds i8* %call2.i1645, i64 16
  %33 = bitcast i8* %next4.i1648 to %struct.fixup_replacement**
  store %struct.fixup_replacement* %32, %struct.fixup_replacement** %33, align 8, !tbaa !159
  store %struct.fixup_replacement* %30, %struct.fixup_replacement** %replacements, align 8, !tbaa !9
  br label %find_fixup_replacement.exit1651

find_fixup_replacement.exit1651:                  ; preds = %land.rhs.i1644, %if.then.i1649
  %p.1.i1650 = phi %struct.fixup_replacement* [ %30, %if.then.i1649 ], [ %p.019.i1640, %land.rhs.i1644 ]
  %new128 = getelementptr inbounds %struct.fixup_replacement* %p.1.i1650, i64 0, i32 1
  %34 = load %struct.rtx_def** %new128, align 8, !tbaa !156
  %cmp129 = icmp eq %struct.rtx_def* %34, null
  br i1 %cmp129, label %if.then131, label %if.end137

if.then131:                                       ; preds = %find_fixup_replacement.exit1651
  %bf.load132 = load i32* %0, align 8
  %bf.lshr133 = lshr i32 %bf.load132, 16
  %bf.clear134 = and i32 %bf.lshr133, 255
  %call135 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear134) #5
  store %struct.rtx_def* %call135, %struct.rtx_def** %new128, align 8, !tbaa !156
  br label %if.end137

if.end137:                                        ; preds = %if.then131, %find_fixup_replacement.exit1651
  %35 = phi %struct.rtx_def* [ %call135, %if.then131 ], [ %34, %find_fixup_replacement.exit1651 ]
  %36 = getelementptr inbounds %struct.rtx_def* %24, i64 0, i32 1, i64 0, i32 0
  %.c1612 = ptrtoint %struct.rtx_def* %35 to i64
  store i64 %.c1612, i64* %36, align 8, !tbaa !9
  %37 = getelementptr inbounds [1 x %union.rtunion_def]* %fld88, i64 0, i64 0, i32 0
  %.c1613 = ptrtoint %struct.rtx_def* %24 to i64
  store i64 %.c1613, i64* %37, align 8, !tbaa !9
  br label %for.end1225

if.else:                                          ; preds = %if.then113
  %call145 = tail call fastcc %struct.rtx_def* @fixup_memory_subreg(%struct.rtx_def* %24, %struct.rtx_def* %insn, i32 0)
  br label %if.end149

if.else147:                                       ; preds = %if.then106
  %call148 = tail call fastcc %struct.rtx_def* @fixup_stack_1(%struct.rtx_def* %24, %struct.rtx_def* %insn)
  br label %if.end149

if.end149:                                        ; preds = %if.else147, %if.else
  %tem.0 = phi %struct.rtx_def* [ %call145, %if.else ], [ %call148, %if.else147 ]
  %38 = load i32* @flag_force_mem, align 4, !tbaa !17
  %tobool150 = icmp eq i32 %38, 0
  br i1 %tobool150, label %land.lhs.true151, label %if.end261

land.lhs.true151:                                 ; preds = %if.end149
  %arrayidx153 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 1
  %rtx154 = bitcast %union.rtunion_def* %arrayidx153 to %struct.rtx_def**
  %39 = load %struct.rtx_def** %rtx154, align 8, !tbaa !9
  %40 = getelementptr inbounds %struct.rtx_def* %39, i64 0, i32 0
  %bf.load155 = load i32* %40, align 8
  %bf.clear156 = and i32 %bf.load155, 65535
  %cmp157 = icmp eq i32 %bf.clear156, 54
  br i1 %cmp157, label %land.lhs.true159, label %if.end261

land.lhs.true159:                                 ; preds = %land.lhs.true151
  %arrayidx161 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 2
  %rtx162 = bitcast %union.rtunion_def* %arrayidx161 to %struct.rtx_def**
  %41 = load %struct.rtx_def** %rtx162, align 8, !tbaa !9
  %42 = getelementptr inbounds %struct.rtx_def* %41, i64 0, i32 0
  %bf.load163 = load i32* %42, align 8
  %bf.clear164 = and i32 %bf.load163, 65535
  %cmp165 = icmp eq i32 %bf.clear164, 54
  br i1 %cmp165, label %land.lhs.true167, label %if.end261

land.lhs.true167:                                 ; preds = %land.lhs.true159
  %arrayidx169 = getelementptr inbounds %struct.rtx_def* %tem.0, i64 0, i32 1, i64 0
  %rtx170 = bitcast %union.rtunion_def* %arrayidx169 to %struct.rtx_def**
  %43 = load %struct.rtx_def** %rtx170, align 8, !tbaa !9
  %call171 = tail call i32 @mode_dependent_address_p(%struct.rtx_def* %43) #5
  %tobool172 = icmp eq i32 %call171, 0
  br i1 %tobool172, label %land.lhs.true173, label %if.end261

land.lhs.true173:                                 ; preds = %land.lhs.true167
  %44 = getelementptr inbounds %struct.rtx_def* %tem.0, i64 0, i32 0
  %bf.load174 = load i32* %44, align 8
  %bf.clear176 = and i32 %bf.load174, 134217728
  %tobool177 = icmp eq i32 %bf.clear176, 0
  br i1 %tobool177, label %if.then178, label %if.end261

if.then178:                                       ; preds = %land.lhs.true173
  %bf.lshr180 = lshr i32 %bf.load174, 16
  %bf.clear181 = and i32 %bf.lshr180, 255
  %45 = load %struct.rtx_def** %rtx162, align 8, !tbaa !9
  %rtwint = getelementptr inbounds %struct.rtx_def* %45, i64 0, i32 1, i64 0, i32 0
  %46 = load i64* %rtwint, align 8, !tbaa !60
  %bf.load187 = load i32* %2, align 8
  %bf.clear188 = and i32 %bf.load187, 65535
  switch i32 %bf.clear188, label %if.end261 [
    i32 133, label %if.then191
    i32 132, label %if.then202
  ]

if.then191:                                       ; preds = %if.then178
  %call192 = tail call i32 @mode_for_extraction(i32 2, i32 1) #5
  %cmp193 = icmp eq i32 %call192, 59
  br i1 %cmp193, label %if.end261, label %if.end210

if.then202:                                       ; preds = %if.then178
  %call204 = tail call i32 @mode_for_extraction(i32 1, i32 1) #5
  %cmp205 = icmp eq i32 %call204, 59
  br i1 %cmp205, label %if.end261, label %if.end210

if.end210:                                        ; preds = %if.then202, %if.then191
  %wanted_mode.0 = phi i32 [ %call192, %if.then191 ], [ %call204, %if.then202 ]
  %cmp211 = icmp eq i32 %wanted_mode.0, 0
  br i1 %cmp211, label %if.end261, label %land.lhs.true213

land.lhs.true213:                                 ; preds = %if.end210
  %idxprom214 = sext i32 %wanted_mode.0 to i64
  %arrayidx215 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom214
  %47 = load i8* %arrayidx215, align 1, !tbaa !22
  %idxprom2171608 = zext i32 %bf.clear181 to i64
  %arrayidx218 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom2171608
  %48 = load i8* %arrayidx218, align 1, !tbaa !22
  %cmp220 = icmp ult i8 %47, %48
  br i1 %cmp220, label %if.then222, label %if.end261

if.then222:                                       ; preds = %land.lhs.true213
  %div = sdiv i64 %46, 8
  %49 = load %struct.rtx_def** %rtx162, align 8, !tbaa !9
  %arrayidx227 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom214
  %50 = load i16* %arrayidx227, align 2, !tbaa !73
  %conv228 = zext i16 %50 to i64
  %rem = srem i64 %46, %conv228
  %call229 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %tem.0, i32 %wanted_mode.0, i64 %div, i32 0, i32 1) #5
  %arrayidx231 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 4
  %rtint232 = bitcast %union.rtunion_def* %arrayidx231 to i32*
  store i32 -1, i32* %rtint232, align 4, !tbaa !17
  %51 = getelementptr inbounds [1 x %union.rtunion_def]* %fld88, i64 0, i64 0, i32 0
  %call229.c = ptrtoint %struct.rtx_def* %call229 to i64
  store i64 %call229.c, i64* %51, align 8, !tbaa !9
  %call236 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %rem) #5
  %52 = getelementptr inbounds %union.rtunion_def* %arrayidx161, i64 0, i32 0
  %call236.c = ptrtoint %struct.rtx_def* %call236 to i64
  store i64 %call236.c, i64* %52, align 8, !tbaa !9
  %53 = load i32* %rtint232, align 4, !tbaa !17
  %cmp243 = icmp sgt i32 %53, -1
  br i1 %cmp243, label %for.end1225, label %cond.end251

cond.end251:                                      ; preds = %if.then222
  %call250 = tail call i32 @recog_memoized_1(%struct.rtx_def* %insn) #5
  %cmp253 = icmp sgt i32 %call250, -1
  br i1 %cmp253, label %for.end1225, label %if.end256

if.end256:                                        ; preds = %cond.end251
  %.c1609 = ptrtoint %struct.rtx_def* %49 to i64
  store i64 %.c1609, i64* %52, align 8, !tbaa !9
  br label %if.end261

if.end261:                                        ; preds = %if.then202, %if.then191, %if.then178, %if.end210, %land.lhs.true173, %land.lhs.true167, %if.end149, %land.lhs.true213, %if.end256, %land.lhs.true159, %land.lhs.true151
  %54 = getelementptr inbounds %struct.rtx_def* %tem.0, i64 0, i32 0
  %bf.load262 = load i32* %54, align 8
  %bf.lshr263 = lshr i32 %bf.load262, 16
  %bf.clear264 = and i32 %bf.lshr263, 255
  %call265 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear264) #5
  %call266 = tail call %struct.rtx_def* @gen_move_insn(%struct.rtx_def* %call265, %struct.rtx_def* %tem.0) #5
  %call267 = tail call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %call266, %struct.rtx_def* %insn) #5
  %55 = getelementptr inbounds [1 x %union.rtunion_def]* %fld88, i64 0, i64 0, i32 0
  %call265.c = ptrtoint %struct.rtx_def* %call265 to i64
  store i64 %call265.c, i64* %55, align 8, !tbaa !9
  br label %for.end1225

sw.bb272:                                         ; preds = %tailrecurse
  %arrayidx274 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 0
  %rtx275 = bitcast %union.rtunion_def* %arrayidx274 to %struct.rtx_def**
  %56 = load %struct.rtx_def** %rtx275, align 8, !tbaa !9
  %cmp276 = icmp eq %struct.rtx_def* %56, %var
  br i1 %cmp276, label %if.then278, label %sw.epilog

if.then278:                                       ; preds = %sw.bb272
  %bf.clear281 = and i32 %bf.load, 268435456
  %tobool282 = icmp eq i32 %bf.clear281, 0
  br i1 %tobool282, label %if.end287, label %if.then283

if.then283:                                       ; preds = %if.then278
  store %struct.rtx_def* %var, %struct.rtx_def** %loc, align 8, !tbaa !9
  %bf.load284 = load i32* %0, align 8
  %bf.lshr285 = lshr i32 %bf.load284, 16
  %bf.clear286 = and i32 %bf.lshr285, 255
  br label %tailrecurse

if.end287:                                        ; preds = %if.then278
  %bf.lshr289 = lshr i32 %bf.load, 16
  %bf.clear290 = and i32 %bf.lshr289, 255
  %idxprom2911605 = zext i32 %bf.clear290 to i64
  %arrayidx292 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom2911605
  %57 = load i8* %arrayidx292, align 1, !tbaa !22
  %bf.load294 = load i32* %0, align 8
  %bf.lshr295 = lshr i32 %bf.load294, 16
  %bf.clear296 = and i32 %bf.lshr295, 255
  %idxprom2971606 = zext i32 %bf.clear296 to i64
  %arrayidx298 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom2971606
  %58 = load i8* %arrayidx298, align 1, !tbaa !22
  %cmp300 = icmp ugt i8 %57, %58
  %p.017.i1652 = load %struct.fixup_replacement** %replacements, align 8
  %cond18.i1653 = icmp eq %struct.fixup_replacement* %p.017.i1652, null
  br i1 %cmp300, label %if.then302, label %if.end315

if.then302:                                       ; preds = %if.end287
  br i1 %cond18.i1653, label %if.then.i1667, label %land.rhs.i1662

for.cond.i1657:                                   ; preds = %land.rhs.i1662
  %next.i1654 = getelementptr inbounds %struct.fixup_replacement* %p.019.i1658, i64 0, i32 2
  %p.0.i1655 = load %struct.fixup_replacement** %next.i1654, align 8
  %cond.i1656 = icmp eq %struct.fixup_replacement* %p.0.i1655, null
  br i1 %cond.i1656, label %if.then.i1667, label %land.rhs.i1662

land.rhs.i1662:                                   ; preds = %if.then302, %for.cond.i1657
  %p.019.i1658 = phi %struct.fixup_replacement* [ %p.0.i1655, %for.cond.i1657 ], [ %p.017.i1652, %if.then302 ]
  %old.i1659 = getelementptr inbounds %struct.fixup_replacement* %p.019.i1658, i64 0, i32 0
  %59 = load %struct.rtx_def** %old.i1659, align 8, !tbaa !158
  %call.i1660 = tail call i32 @rtx_equal_p(%struct.rtx_def* %59, %struct.rtx_def* %var) #5
  %lnot.i1661 = icmp eq i32 %call.i1660, 0
  br i1 %lnot.i1661, label %for.cond.i1657, label %find_fixup_replacement.exit1669

if.then.i1667:                                    ; preds = %for.cond.i1657, %if.then302
  %call2.i1663 = tail call noalias i8* @xmalloc(i64 24) #5
  %60 = bitcast i8* %call2.i1663 to %struct.fixup_replacement*
  %old3.i1664 = bitcast i8* %call2.i1663 to %struct.rtx_def**
  store %struct.rtx_def* %var, %struct.rtx_def** %old3.i1664, align 8, !tbaa !158
  %new.i1665 = getelementptr inbounds i8* %call2.i1663, i64 8
  %61 = bitcast i8* %new.i1665 to %struct.rtx_def**
  store %struct.rtx_def* null, %struct.rtx_def** %61, align 8, !tbaa !156
  %62 = load %struct.fixup_replacement** %replacements, align 8, !tbaa !9
  %next4.i1666 = getelementptr inbounds i8* %call2.i1663, i64 16
  %63 = bitcast i8* %next4.i1666 to %struct.fixup_replacement**
  store %struct.fixup_replacement* %62, %struct.fixup_replacement** %63, align 8, !tbaa !159
  store %struct.fixup_replacement* %60, %struct.fixup_replacement** %replacements, align 8, !tbaa !9
  br label %find_fixup_replacement.exit1669

find_fixup_replacement.exit1669:                  ; preds = %land.rhs.i1662, %if.then.i1667
  %p.1.i1668 = phi %struct.fixup_replacement* [ %60, %if.then.i1667 ], [ %p.019.i1658, %land.rhs.i1662 ]
  %new304 = getelementptr inbounds %struct.fixup_replacement* %p.1.i1668, i64 0, i32 1
  %64 = load %struct.rtx_def** %new304, align 8, !tbaa !156
  %cmp305 = icmp eq %struct.rtx_def* %64, null
  br i1 %cmp305, label %if.then307, label %if.end310

if.then307:                                       ; preds = %find_fixup_replacement.exit1669
  %call308 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %promoted_mode.tr) #5
  store %struct.rtx_def* %call308, %struct.rtx_def** %new304, align 8, !tbaa !156
  br label %if.end310

if.end310:                                        ; preds = %if.then307, %find_fixup_replacement.exit1669
  %65 = phi %struct.rtx_def* [ %call308, %if.then307 ], [ %64, %find_fixup_replacement.exit1669 ]
  %66 = getelementptr inbounds %union.rtunion_def* %arrayidx274, i64 0, i32 0
  %.c1607 = ptrtoint %struct.rtx_def* %65 to i64
  store i64 %.c1607, i64* %66, align 8, !tbaa !9
  br label %for.end1225

if.end315:                                        ; preds = %if.end287
  br i1 %cond18.i1653, label %if.then.i1685, label %land.rhs.i1680

for.cond.i1675:                                   ; preds = %land.rhs.i1680
  %next.i1672 = getelementptr inbounds %struct.fixup_replacement* %p.019.i1676, i64 0, i32 2
  %p.0.i1673 = load %struct.fixup_replacement** %next.i1672, align 8
  %cond.i1674 = icmp eq %struct.fixup_replacement* %p.0.i1673, null
  br i1 %cond.i1674, label %if.then.i1685, label %land.rhs.i1680

land.rhs.i1680:                                   ; preds = %if.end315, %for.cond.i1675
  %p.019.i1676 = phi %struct.fixup_replacement* [ %p.0.i1673, %for.cond.i1675 ], [ %p.017.i1652, %if.end315 ]
  %old.i1677 = getelementptr inbounds %struct.fixup_replacement* %p.019.i1676, i64 0, i32 0
  %67 = load %struct.rtx_def** %old.i1677, align 8, !tbaa !158
  %call.i1678 = tail call i32 @rtx_equal_p(%struct.rtx_def* %67, %struct.rtx_def* %1) #5
  %lnot.i1679 = icmp eq i32 %call.i1678, 0
  br i1 %lnot.i1679, label %for.cond.i1675, label %find_fixup_replacement.exit1687

if.then.i1685:                                    ; preds = %for.cond.i1675, %if.end315
  %call2.i1681 = tail call noalias i8* @xmalloc(i64 24) #5
  %68 = bitcast i8* %call2.i1681 to %struct.fixup_replacement*
  %old3.i1682 = bitcast i8* %call2.i1681 to %struct.rtx_def**
  store %struct.rtx_def* %1, %struct.rtx_def** %old3.i1682, align 8, !tbaa !158
  %new.i1683 = getelementptr inbounds i8* %call2.i1681, i64 8
  %69 = bitcast i8* %new.i1683 to %struct.rtx_def**
  store %struct.rtx_def* null, %struct.rtx_def** %69, align 8, !tbaa !156
  %70 = load %struct.fixup_replacement** %replacements, align 8, !tbaa !9
  %next4.i1684 = getelementptr inbounds i8* %call2.i1681, i64 16
  %71 = bitcast i8* %next4.i1684 to %struct.fixup_replacement**
  store %struct.fixup_replacement* %70, %struct.fixup_replacement** %71, align 8, !tbaa !159
  store %struct.fixup_replacement* %68, %struct.fixup_replacement** %replacements, align 8, !tbaa !9
  br label %find_fixup_replacement.exit1687

find_fixup_replacement.exit1687:                  ; preds = %land.rhs.i1680, %if.then.i1685
  %p.1.i1686 = phi %struct.fixup_replacement* [ %68, %if.then.i1685 ], [ %p.019.i1676, %land.rhs.i1680 ]
  %new317 = getelementptr inbounds %struct.fixup_replacement* %p.1.i1686, i64 0, i32 1
  %72 = load %struct.rtx_def** %new317, align 8, !tbaa !156
  %tobool318 = icmp eq %struct.rtx_def* %72, null
  br i1 %tobool318, label %if.end321, label %if.then319

if.then319:                                       ; preds = %find_fixup_replacement.exit1687
  store %struct.rtx_def* %72, %struct.rtx_def** %loc, align 8, !tbaa !9
  br label %for.end1225

if.end321:                                        ; preds = %find_fixup_replacement.exit1687
  %call322 = tail call fastcc %struct.rtx_def* @fixup_memory_subreg(%struct.rtx_def* %1, %struct.rtx_def* %insn, i32 0)
  store %struct.rtx_def* %call322, %struct.rtx_def** %loc, align 8, !tbaa !9
  store %struct.rtx_def* %call322, %struct.rtx_def** %new317, align 8, !tbaa !156
  %arrayidx325 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 4
  %rtint326 = bitcast %union.rtunion_def* %arrayidx325 to i32*
  store i32 -1, i32* %rtint326, align 4, !tbaa !17
  %73 = load i32* @flag_force_mem, align 4, !tbaa !17
  %tobool327 = icmp eq i32 %73, 0
  br i1 %tobool327, label %cond.false338, label %if.end345

cond.false338:                                    ; preds = %if.end321
  %call339 = tail call i32 @recog_memoized_1(%struct.rtx_def* %insn) #5
  %cmp342 = icmp sgt i32 %call339, -1
  br i1 %cmp342, label %for.end1225, label %if.end345

if.end345:                                        ; preds = %if.end321, %cond.false338
  %bf.load346 = load i32* %2, align 8
  %bf.lshr347 = lshr i32 %bf.load346, 16
  %bf.clear348 = and i32 %bf.lshr347, 255
  %call349 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear348) #5
  store %struct.rtx_def* %call349, %struct.rtx_def** %new317, align 8, !tbaa !156
  store %struct.rtx_def* %call349, %struct.rtx_def** %loc, align 8, !tbaa !9
  br label %for.end1225

sw.bb352:                                         ; preds = %tailrecurse
  %fld353 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1
  %rtx355 = bitcast [1 x %union.rtunion_def]* %fld353 to %struct.rtx_def**
  %74 = load %struct.rtx_def** %rtx355, align 8, !tbaa !9
  %75 = getelementptr inbounds %struct.rtx_def* %74, i64 0, i32 0
  %bf.load356 = load i32* %75, align 8
  %76 = and i32 %bf.load356, 65534
  %switch = icmp eq i32 %76, 132
  br i1 %switch, label %if.then368, label %if.end369

if.then368:                                       ; preds = %sw.bb352
  tail call fastcc void @optimize_bit_field(%struct.rtx_def* %1, %struct.rtx_def* %insn)
  br label %if.end369

if.end369:                                        ; preds = %sw.bb352, %if.then368
  %arrayidx371 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 1
  %rtx372 = bitcast %union.rtunion_def* %arrayidx371 to %struct.rtx_def**
  %77 = load %struct.rtx_def** %rtx372, align 8, !tbaa !9
  %78 = getelementptr inbounds %struct.rtx_def* %77, i64 0, i32 0
  %bf.load373 = load i32* %78, align 8
  %79 = and i32 %bf.load373, 65534
  %switch1615 = icmp eq i32 %79, 132
  br i1 %switch1615, label %if.then385, label %if.end386

if.then385:                                       ; preds = %if.end369
  tail call fastcc void @optimize_bit_field(%struct.rtx_def* %1, %struct.rtx_def* %insn)
  br label %if.end386

if.end386:                                        ; preds = %if.end369, %if.then385
  %80 = load %struct.rtx_def** %rtx355, align 8, !tbaa !9
  %81 = getelementptr inbounds %struct.rtx_def* %80, i64 0, i32 0
  %bf.load390 = load i32* %81, align 8
  %bf.clear391 = and i32 %bf.load390, 65535
  %cmp392 = icmp eq i32 %bf.clear391, 133
  br i1 %cmp392, label %land.lhs.true394, label %if.end463

land.lhs.true394:                                 ; preds = %if.end386
  %arrayidx399 = getelementptr inbounds %struct.rtx_def* %80, i64 0, i32 1, i64 0
  %rtx400 = bitcast %union.rtunion_def* %arrayidx399 to %struct.rtx_def**
  %82 = load %struct.rtx_def** %rtx400, align 8, !tbaa !9
  %83 = getelementptr inbounds %struct.rtx_def* %82, i64 0, i32 0
  %bf.load401 = load i32* %83, align 8
  %bf.clear402 = and i32 %bf.load401, 65535
  %cmp403 = icmp eq i32 %bf.clear402, 63
  br i1 %cmp403, label %land.lhs.true405, label %if.end463

land.lhs.true405:                                 ; preds = %land.lhs.true394
  %arrayidx413 = getelementptr inbounds %struct.rtx_def* %82, i64 0, i32 1, i64 0
  %rtx414 = bitcast %union.rtunion_def* %arrayidx413 to %struct.rtx_def**
  %84 = load %struct.rtx_def** %rtx414, align 8, !tbaa !9
  %cmp415 = icmp eq %struct.rtx_def* %84, %var
  br i1 %cmp415, label %land.lhs.true417, label %if.end463

land.lhs.true417:                                 ; preds = %land.lhs.true405
  %bf.lshr425 = lshr i32 %bf.load401, 16
  %bf.clear426 = and i32 %bf.lshr425, 255
  %idxprom4271602 = zext i32 %bf.clear426 to i64
  %arrayidx428 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom4271602
  %85 = load i8* %arrayidx428, align 1, !tbaa !22
  %bf.load430 = load i32* %0, align 8
  %bf.lshr431 = lshr i32 %bf.load430, 16
  %bf.clear432 = and i32 %bf.lshr431, 255
  %idxprom4331603 = zext i32 %bf.clear432 to i64
  %arrayidx434 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom4331603
  %86 = load i8* %arrayidx434, align 1, !tbaa !22
  %cmp436 = icmp ugt i8 %85, %86
  br i1 %cmp436, label %if.then438, label %if.end463

if.then438:                                       ; preds = %land.lhs.true417
  %p.017.i1688 = load %struct.fixup_replacement** %replacements, align 8
  %cond18.i1689 = icmp eq %struct.fixup_replacement* %p.017.i1688, null
  br i1 %cond18.i1689, label %if.then.i1703, label %land.rhs.i1698

for.cond.i1693:                                   ; preds = %land.rhs.i1698
  %next.i1690 = getelementptr inbounds %struct.fixup_replacement* %p.019.i1694, i64 0, i32 2
  %p.0.i1691 = load %struct.fixup_replacement** %next.i1690, align 8
  %cond.i1692 = icmp eq %struct.fixup_replacement* %p.0.i1691, null
  br i1 %cond.i1692, label %if.then.i1703, label %land.rhs.i1698

land.rhs.i1698:                                   ; preds = %if.then438, %for.cond.i1693
  %p.019.i1694 = phi %struct.fixup_replacement* [ %p.0.i1691, %for.cond.i1693 ], [ %p.017.i1688, %if.then438 ]
  %old.i1695 = getelementptr inbounds %struct.fixup_replacement* %p.019.i1694, i64 0, i32 0
  %87 = load %struct.rtx_def** %old.i1695, align 8, !tbaa !158
  %call.i1696 = tail call i32 @rtx_equal_p(%struct.rtx_def* %87, %struct.rtx_def* %var) #5
  %lnot.i1697 = icmp eq i32 %call.i1696, 0
  br i1 %lnot.i1697, label %for.cond.i1693, label %find_fixup_replacement.exit1705

if.then.i1703:                                    ; preds = %for.cond.i1693, %if.then438
  %call2.i1699 = tail call noalias i8* @xmalloc(i64 24) #5
  %88 = bitcast i8* %call2.i1699 to %struct.fixup_replacement*
  %old3.i1700 = bitcast i8* %call2.i1699 to %struct.rtx_def**
  store %struct.rtx_def* %var, %struct.rtx_def** %old3.i1700, align 8, !tbaa !158
  %new.i1701 = getelementptr inbounds i8* %call2.i1699, i64 8
  %89 = bitcast i8* %new.i1701 to %struct.rtx_def**
  store %struct.rtx_def* null, %struct.rtx_def** %89, align 8, !tbaa !156
  %90 = load %struct.fixup_replacement** %replacements, align 8, !tbaa !9
  %next4.i1702 = getelementptr inbounds i8* %call2.i1699, i64 16
  %91 = bitcast i8* %next4.i1702 to %struct.fixup_replacement**
  store %struct.fixup_replacement* %90, %struct.fixup_replacement** %91, align 8, !tbaa !159
  store %struct.fixup_replacement* %88, %struct.fixup_replacement** %replacements, align 8, !tbaa !9
  br label %find_fixup_replacement.exit1705

find_fixup_replacement.exit1705:                  ; preds = %land.rhs.i1698, %if.then.i1703
  %p.1.i1704 = phi %struct.fixup_replacement* [ %88, %if.then.i1703 ], [ %p.019.i1694, %land.rhs.i1698 ]
  %new440 = getelementptr inbounds %struct.fixup_replacement* %p.1.i1704, i64 0, i32 1
  %92 = load %struct.rtx_def** %new440, align 8, !tbaa !156
  %cmp441 = icmp eq %struct.rtx_def* %92, null
  br i1 %cmp441, label %if.then443, label %if.end449

if.then443:                                       ; preds = %find_fixup_replacement.exit1705
  %bf.load444 = load i32* %0, align 8
  %bf.lshr445 = lshr i32 %bf.load444, 16
  %bf.clear446 = and i32 %bf.lshr445, 255
  %call447 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear446) #5
  store %struct.rtx_def* %call447, %struct.rtx_def** %new440, align 8, !tbaa !156
  br label %if.end449

if.end449:                                        ; preds = %if.then443, %find_fixup_replacement.exit1705
  %93 = phi %struct.rtx_def* [ %call447, %if.then443 ], [ %92, %find_fixup_replacement.exit1705 ]
  %94 = load %struct.rtx_def** %rtx355, align 8, !tbaa !9
  %arrayidx455 = getelementptr inbounds %struct.rtx_def* %94, i64 0, i32 1, i64 0
  %rtx456 = bitcast %union.rtunion_def* %arrayidx455 to %struct.rtx_def**
  %95 = load %struct.rtx_def** %rtx456, align 8, !tbaa !9
  %96 = getelementptr inbounds %struct.rtx_def* %95, i64 0, i32 1, i64 0, i32 0
  %.c1604 = ptrtoint %struct.rtx_def* %93 to i64
  store i64 %.c1604, i64* %96, align 8, !tbaa !9
  %97 = load %struct.rtx_def** %new440, align 8, !tbaa !156
  %call461 = tail call %struct.rtx_def* @gen_move_insn(%struct.rtx_def* %var, %struct.rtx_def* %97) #5
  %call462 = tail call %struct.rtx_def* @emit_insn_after(%struct.rtx_def* %call461, %struct.rtx_def* %insn) #5
  %.pre1846 = load %struct.rtx_def** %rtx355, align 8, !tbaa !9
  %.phi.trans.insert1847 = getelementptr inbounds %struct.rtx_def* %.pre1846, i64 0, i32 0
  %bf.load467.pre = load i32* %.phi.trans.insert1847, align 8
  br label %if.end463

if.end463:                                        ; preds = %if.end449, %land.lhs.true417, %land.lhs.true405, %land.lhs.true394, %if.end386
  %bf.load467 = phi i32 [ %bf.load467.pre, %if.end449 ], [ %bf.load390, %land.lhs.true417 ], [ %bf.load390, %land.lhs.true405 ], [ %bf.load390, %land.lhs.true394 ], [ %bf.load390, %if.end386 ]
  %98 = phi %struct.rtx_def* [ %.pre1846, %if.end449 ], [ %80, %land.lhs.true417 ], [ %80, %land.lhs.true405 ], [ %80, %land.lhs.true394 ], [ %80, %if.end386 ]
  %99 = getelementptr inbounds %struct.rtx_def* %98, i64 0, i32 0
  %bf.clear468 = and i32 %bf.load467, 65535
  %cmp469 = icmp eq i32 %bf.clear468, 63
  br i1 %cmp469, label %land.lhs.true471, label %if.end515

land.lhs.true471:                                 ; preds = %if.end463
  %arrayidx476 = getelementptr inbounds %struct.rtx_def* %98, i64 0, i32 1, i64 0
  %rtx477 = bitcast %union.rtunion_def* %arrayidx476 to %struct.rtx_def**
  %100 = load %struct.rtx_def** %rtx477, align 8, !tbaa !9
  %cmp478 = icmp eq %struct.rtx_def* %100, %var
  br i1 %cmp478, label %land.lhs.true480, label %if.end515

land.lhs.true480:                                 ; preds = %land.lhs.true471
  %bf.lshr485 = lshr i32 %bf.load467, 16
  %bf.clear486 = and i32 %bf.lshr485, 255
  %idxprom4871600 = zext i32 %bf.clear486 to i64
  %arrayidx488 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom4871600
  %101 = load i8* %arrayidx488, align 1, !tbaa !22
  %bf.load490 = load i32* %0, align 8
  %bf.lshr491 = lshr i32 %bf.load490, 16
  %bf.clear492 = and i32 %bf.lshr491, 255
  %idxprom4931601 = zext i32 %bf.clear492 to i64
  %arrayidx494 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom4931601
  %102 = load i8* %arrayidx494, align 1, !tbaa !22
  %cmp496 = icmp ugt i8 %101, %102
  br i1 %cmp496, label %if.then498, label %if.end515

if.then498:                                       ; preds = %land.lhs.true480
  %call505 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear486) #5
  %103 = getelementptr inbounds [1 x %union.rtunion_def]* %fld353, i64 0, i64 0, i32 0
  %call505.c = ptrtoint %struct.rtx_def* %call505 to i64
  store i64 %call505.c, i64* %103, align 8, !tbaa !9
  %bf.load509 = load i32* %0, align 8
  %bf.lshr510 = lshr i32 %bf.load509, 16
  %bf.clear511 = and i32 %bf.lshr510, 255
  %call512 = tail call %struct.rtx_def* @gen_lowpart(i32 %bf.clear511, %struct.rtx_def* %call505) #5
  %call513 = tail call %struct.rtx_def* @gen_move_insn(%struct.rtx_def* %var, %struct.rtx_def* %call512) #5
  %call514 = tail call %struct.rtx_def* @emit_insn_after(%struct.rtx_def* %call513, %struct.rtx_def* %insn) #5
  br label %sw.epilog

if.end515:                                        ; preds = %land.lhs.true480, %land.lhs.true471, %if.end463
  %104 = load %struct.rtx_def** %rtx372, align 8, !tbaa !9
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end515
  %bf.load522 = phi i32 [ %bf.load467, %if.end515 ], [ %bf.load522.pre, %while.body ]
  %dest.0 = phi %struct.rtx_def* [ %98, %if.end515 ], [ %105, %while.body ]
  %bf.clear523 = and i32 %bf.load522, 65535
  switch i32 %bf.clear523, label %while.end [
    i32 63, label %while.body
    i32 64, label %while.body
    i32 132, label %while.body
    i32 133, label %while.body
  ]

while.body:                                       ; preds = %while.cond, %while.cond, %while.cond, %while.cond
  %.in.in = getelementptr inbounds %struct.rtx_def* %dest.0, i64 0, i32 1, i64 0
  %.in = bitcast %union.rtunion_def* %.in.in to %struct.rtx_def**
  %105 = load %struct.rtx_def** %.in, align 8
  %.phi.trans.insert1849 = getelementptr inbounds %struct.rtx_def* %105, i64 0, i32 0
  %bf.load522.pre = load i32* %.phi.trans.insert1849, align 8
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %106 = getelementptr inbounds %struct.rtx_def* %104, i64 0, i32 0
  %bf.load543 = load i32* %106, align 8
  %bf.clear544 = and i32 %bf.load543, 65535
  %cmp545 = icmp eq i32 %bf.clear544, 63
  br i1 %cmp545, label %if.then547, label %if.end551

if.then547:                                       ; preds = %while.end
  %arrayidx549 = getelementptr inbounds %struct.rtx_def* %104, i64 0, i32 1, i64 0
  %rtx550 = bitcast %union.rtunion_def* %arrayidx549 to %struct.rtx_def**
  %107 = load %struct.rtx_def** %rtx550, align 8, !tbaa !9
  br label %if.end551

if.end551:                                        ; preds = %if.then547, %while.end
  %src.0 = phi %struct.rtx_def* [ %107, %if.then547 ], [ %104, %while.end ]
  %cmp552 = icmp eq %struct.rtx_def* %src.0, %var
  %cmp555 = icmp eq %struct.rtx_def* %dest.0, %var
  %or.cond = or i1 %cmp552, %cmp555
  br i1 %or.cond, label %if.end558, label %sw.epilog

if.end558:                                        ; preds = %if.end551
  %arrayidx560 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 4
  %rtint561 = bitcast %union.rtunion_def* %arrayidx560 to i32*
  store i32 -1, i32* %rtint561, align 4, !tbaa !17
  %bf.load562 = load i32* %99, align 8
  %bf.clear563 = and i32 %bf.load562, 65535
  %cmp564 = icmp eq i32 %bf.clear563, 133
  %or.cond1614 = and i1 %cmp564, %cmp555
  br i1 %or.cond1614, label %land.lhs.true569, label %if.end705

land.lhs.true569:                                 ; preds = %if.end558
  %call570 = tail call i32 @mode_for_extraction(i32 0, i32 -1) #5
  %cmp571 = icmp eq i32 %call570, 59
  br i1 %cmp571, label %if.end705, label %if.then573

if.then573:                                       ; preds = %land.lhs.true569
  %arrayidx575 = getelementptr inbounds %struct.rtx_def* %98, i64 0, i32 1, i64 1
  %rtx576 = bitcast %union.rtunion_def* %arrayidx575 to %struct.rtx_def**
  tail call fastcc void @fixup_var_refs_1(%struct.rtx_def* %var, i32 %promoted_mode.tr, %struct.rtx_def** %rtx576, %struct.rtx_def* %insn, %struct.fixup_replacement** %replacements, %struct.rtx_def* %no_share)
  %arrayidx578 = getelementptr inbounds %struct.rtx_def* %98, i64 0, i32 1, i64 2
  %rtx579 = bitcast %union.rtunion_def* %arrayidx578 to %struct.rtx_def**
  tail call fastcc void @fixup_var_refs_1(%struct.rtx_def* %var, i32 %promoted_mode.tr, %struct.rtx_def** %rtx579, %struct.rtx_def* %insn, %struct.fixup_replacement** %replacements, %struct.rtx_def* %no_share)
  tail call fastcc void @fixup_var_refs_1(%struct.rtx_def* %var, i32 %promoted_mode.tr, %struct.rtx_def** %rtx372, %struct.rtx_def* %insn, %struct.fixup_replacement** %replacements, %struct.rtx_def* %no_share)
  %arrayidx584 = getelementptr inbounds %struct.rtx_def* %98, i64 0, i32 1, i64 0
  %rtx585 = bitcast %union.rtunion_def* %arrayidx584 to %struct.rtx_def**
  %108 = load %struct.rtx_def** %rtx585, align 8, !tbaa !9
  %109 = getelementptr inbounds %struct.rtx_def* %108, i64 0, i32 0
  %bf.load586 = load i32* %109, align 8
  %bf.clear587 = and i32 %bf.load586, 65535
  %cmp588 = icmp eq i32 %bf.clear587, 63
  br i1 %cmp588, label %land.lhs.true590, label %if.else598

land.lhs.true590:                                 ; preds = %if.then573
  %arrayidx592 = getelementptr inbounds %struct.rtx_def* %108, i64 0, i32 1, i64 0
  %rtx593 = bitcast %union.rtunion_def* %arrayidx592 to %struct.rtx_def**
  %110 = load %struct.rtx_def** %rtx593, align 8, !tbaa !9
  %cmp594 = icmp eq %struct.rtx_def* %110, %var
  br i1 %cmp594, label %if.then596, label %if.else598

if.then596:                                       ; preds = %land.lhs.true590
  %call597 = tail call fastcc %struct.rtx_def* @fixup_memory_subreg(%struct.rtx_def* %108, %struct.rtx_def* %insn, i32 0)
  br label %if.end600

if.else598:                                       ; preds = %land.lhs.true590, %if.then573
  %call599 = tail call fastcc %struct.rtx_def* @fixup_stack_1(%struct.rtx_def* %108, %struct.rtx_def* %insn)
  br label %if.end600

if.end600:                                        ; preds = %if.else598, %if.then596
  %tem.1 = phi %struct.rtx_def* [ %call597, %if.then596 ], [ %call599, %if.else598 ]
  %111 = load %struct.rtx_def** %rtx576, align 8, !tbaa !9
  %112 = getelementptr inbounds %struct.rtx_def* %111, i64 0, i32 0
  %bf.load604 = load i32* %112, align 8
  %bf.clear605 = and i32 %bf.load604, 65535
  %cmp606 = icmp eq i32 %bf.clear605, 54
  br i1 %cmp606, label %land.lhs.true608, label %if.end693

land.lhs.true608:                                 ; preds = %if.end600
  %113 = load %struct.rtx_def** %rtx579, align 8, !tbaa !9
  %114 = getelementptr inbounds %struct.rtx_def* %113, i64 0, i32 0
  %bf.load612 = load i32* %114, align 8
  %bf.clear613 = and i32 %bf.load612, 65535
  %cmp614 = icmp eq i32 %bf.clear613, 54
  br i1 %cmp614, label %land.lhs.true616, label %if.end693

land.lhs.true616:                                 ; preds = %land.lhs.true608
  %arrayidx618 = getelementptr inbounds %struct.rtx_def* %tem.1, i64 0, i32 1, i64 0
  %rtx619 = bitcast %union.rtunion_def* %arrayidx618 to %struct.rtx_def**
  %115 = load %struct.rtx_def** %rtx619, align 8, !tbaa !9
  %call620 = tail call i32 @mode_dependent_address_p(%struct.rtx_def* %115) #5
  %tobool621 = icmp eq i32 %call620, 0
  br i1 %tobool621, label %land.lhs.true622, label %if.end693

land.lhs.true622:                                 ; preds = %land.lhs.true616
  %116 = getelementptr inbounds %struct.rtx_def* %tem.1, i64 0, i32 0
  %bf.load623 = load i32* %116, align 8
  %bf.clear625 = and i32 %bf.load623, 134217728
  %tobool626 = icmp eq i32 %bf.clear625, 0
  br i1 %tobool626, label %if.then627, label %if.end693

if.then627:                                       ; preds = %land.lhs.true622
  %bf.lshr631 = lshr i32 %bf.load623, 16
  %bf.clear632 = and i32 %bf.lshr631, 255
  %117 = load %struct.rtx_def** %rtx579, align 8, !tbaa !9
  %rtwint639 = getelementptr inbounds %struct.rtx_def* %117, i64 0, i32 1, i64 0, i32 0
  %118 = load i64* %rtwint639, align 8, !tbaa !60
  %call640 = tail call i32 @mode_for_extraction(i32 0, i32 0) #5
  %idxprom641 = sext i32 %call640 to i64
  %arrayidx642 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom641
  %119 = load i8* %arrayidx642, align 1, !tbaa !22
  %idxprom6441598 = zext i32 %bf.clear632 to i64
  %arrayidx645 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom6441598
  %120 = load i8* %arrayidx645, align 1, !tbaa !22
  %cmp647 = icmp ult i8 %119, %120
  br i1 %cmp647, label %if.then649, label %if.end693

if.then649:                                       ; preds = %if.then627
  %div651 = sdiv i64 %118, 8
  %121 = load %struct.rtx_def** %rtx579, align 8, !tbaa !9
  %arrayidx658 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom641
  %122 = load i16* %arrayidx658, align 2, !tbaa !73
  %conv659 = zext i16 %122 to i64
  %rem660 = srem i64 %118, %conv659
  %call661 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %tem.1, i32 %call640, i64 %div651, i32 0, i32 1) #5
  store i32 -1, i32* %rtint561, align 4, !tbaa !17
  %123 = getelementptr inbounds %union.rtunion_def* %arrayidx584, i64 0, i32 0
  %call661.c = ptrtoint %struct.rtx_def* %call661 to i64
  store i64 %call661.c, i64* %123, align 8, !tbaa !9
  %call668 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %rem660) #5
  %124 = getelementptr inbounds %union.rtunion_def* %arrayidx578, i64 0, i32 0
  %call668.c = ptrtoint %struct.rtx_def* %call668 to i64
  store i64 %call668.c, i64* %124, align 8, !tbaa !9
  %125 = load i32* %rtint561, align 4, !tbaa !17
  %cmp675 = icmp sgt i32 %125, -1
  br i1 %cmp675, label %for.end1225, label %cond.end683

cond.end683:                                      ; preds = %if.then649
  %call682 = tail call i32 @recog_memoized_1(%struct.rtx_def* %insn) #5
  %cmp685 = icmp sgt i32 %call682, -1
  br i1 %cmp685, label %for.end1225, label %if.end688

if.end688:                                        ; preds = %cond.end683
  %.c1599 = ptrtoint %struct.rtx_def* %121 to i64
  store i64 %.c1599, i64* %124, align 8, !tbaa !9
  br label %if.end693

if.end693:                                        ; preds = %land.lhs.true622, %land.lhs.true616, %if.then627, %if.end688, %land.lhs.true608, %if.end600
  %126 = getelementptr inbounds %struct.rtx_def* %tem.1, i64 0, i32 0
  %bf.load694 = load i32* %126, align 8
  %bf.lshr695 = lshr i32 %bf.load694, 16
  %bf.clear696 = and i32 %bf.lshr695, 255
  %call697 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear696) #5
  %call698 = tail call %struct.rtx_def* @gen_move_insn(%struct.rtx_def* %call697, %struct.rtx_def* %tem.1) #5
  %call699 = tail call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %call698, %struct.rtx_def* %insn) #5
  %call700 = tail call %struct.rtx_def* @gen_move_insn(%struct.rtx_def* %tem.1, %struct.rtx_def* %call697) #5
  %call701 = tail call %struct.rtx_def* @emit_insn_after(%struct.rtx_def* %call700, %struct.rtx_def* %insn) #5
  %127 = getelementptr inbounds %union.rtunion_def* %arrayidx584, i64 0, i32 0
  %call697.c = ptrtoint %struct.rtx_def* %call697 to i64
  store i64 %call697.c, i64* %127, align 8, !tbaa !9
  br label %for.end1225

if.end705:                                        ; preds = %land.lhs.true569, %if.end558
  br i1 %cmp555, label %land.lhs.true708, label %if.end726

land.lhs.true708:                                 ; preds = %if.end705
  %128 = load %struct.rtx_def** %rtx355, align 8, !tbaa !9
  %129 = getelementptr inbounds %struct.rtx_def* %128, i64 0, i32 0
  %bf.load712 = load i32* %129, align 8
  %bf.clear713 = and i32 %bf.load712, 65535
  %cmp714 = icmp eq i32 %bf.clear713, 64
  br i1 %cmp714, label %if.then716, label %if.end726

if.then716:                                       ; preds = %land.lhs.true708
  %arrayidx721 = getelementptr inbounds %struct.rtx_def* %128, i64 0, i32 1, i64 0
  %rtx722 = bitcast %union.rtunion_def* %arrayidx721 to %struct.rtx_def**
  %130 = load %struct.rtx_def** %rtx722, align 8, !tbaa !9
  %131 = getelementptr inbounds [1 x %union.rtunion_def]* %fld353, i64 0, i64 0, i32 0
  %.c1597 = ptrtoint %struct.rtx_def* %130 to i64
  store i64 %.c1597, i64* %131, align 8, !tbaa !9
  br label %if.end726

if.end726:                                        ; preds = %if.then716, %land.lhs.true708, %if.end705
  %132 = load %struct.rtx_def** %rtx372, align 8, !tbaa !9
  %cmp730 = icmp eq %struct.rtx_def* %132, %var
  br i1 %cmp730, label %land.lhs.true749, label %lor.lhs.false732

lor.lhs.false732:                                 ; preds = %if.end726
  %133 = getelementptr inbounds %struct.rtx_def* %132, i64 0, i32 0
  %bf.load736 = load i32* %133, align 8
  %bf.clear737 = and i32 %bf.load736, 65535
  %cmp738 = icmp eq i32 %bf.clear737, 63
  br i1 %cmp738, label %land.lhs.true740, label %if.end965

land.lhs.true740:                                 ; preds = %lor.lhs.false732
  %arrayidx745 = getelementptr inbounds %struct.rtx_def* %132, i64 0, i32 1, i64 0
  %rtx746 = bitcast %union.rtunion_def* %arrayidx745 to %struct.rtx_def**
  %134 = load %struct.rtx_def** %rtx746, align 8, !tbaa !9
  %cmp747 = icmp eq %struct.rtx_def* %134, %var
  br i1 %cmp747, label %land.lhs.true749, label %if.end965

land.lhs.true749:                                 ; preds = %land.lhs.true740, %if.end726
  %135 = load %struct.rtx_def** %rtx355, align 8, !tbaa !9
  %136 = getelementptr inbounds %struct.rtx_def* %135, i64 0, i32 0
  %bf.load753 = load i32* %136, align 8
  %bf.clear754 = and i32 %bf.load753, 65535
  switch i32 %bf.clear754, label %if.end965 [
    i32 61, label %land.lhs.true776
    i32 63, label %land.lhs.true765
  ]

land.lhs.true765:                                 ; preds = %land.lhs.true749
  %arrayidx770 = getelementptr inbounds %struct.rtx_def* %135, i64 0, i32 1, i64 0
  %rtx771 = bitcast %union.rtunion_def* %arrayidx770 to %struct.rtx_def**
  %137 = load %struct.rtx_def** %rtx771, align 8, !tbaa !9
  %138 = getelementptr inbounds %struct.rtx_def* %137, i64 0, i32 0
  %bf.load772 = load i32* %138, align 8
  %bf.clear773 = and i32 %bf.load772, 65535
  %cmp774 = icmp eq i32 %bf.clear773, 61
  br i1 %cmp774, label %land.lhs.true776, label %if.end965

land.lhs.true776:                                 ; preds = %land.lhs.true749, %land.lhs.true765
  %bf.load777 = load i32* %0, align 8
  %bf.lshr778 = lshr i32 %bf.load777, 16
  %bf.clear779 = and i32 %bf.lshr778, 255
  %cmp780 = icmp eq i32 %bf.clear779, %promoted_mode.tr
  br i1 %cmp780, label %land.lhs.true782, label %if.end965

land.lhs.true782:                                 ; preds = %land.lhs.true776
  %139 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 0
  %bf.load783 = load i32* %139, align 8
  %bf.clear784 = and i32 %bf.load783, 65535
  %idxprom7851590 = zext i32 %bf.clear784 to i64
  %arrayidx786 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom7851590
  %140 = load i8* %arrayidx786, align 1, !tbaa !22
  %cmp788 = icmp eq i8 %140, 105
  br i1 %cmp788, label %cond.true790, label %cond.end810

cond.true790:                                     ; preds = %land.lhs.true782
  %arrayidx792 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 3
  %rtx793 = bitcast %union.rtunion_def* %arrayidx792 to %struct.rtx_def**
  %141 = load %struct.rtx_def** %rtx793, align 8, !tbaa !9
  %142 = getelementptr inbounds %struct.rtx_def* %141, i64 0, i32 0
  %bf.load794 = load i32* %142, align 8
  %bf.clear795 = and i32 %bf.load794, 65535
  %cmp796 = icmp eq i32 %bf.clear795, 47
  br i1 %cmp796, label %cond.end810, label %cond.false802

cond.false802:                                    ; preds = %cond.true790
  %call806 = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* %insn, %struct.rtx_def* %141) #5
  br label %cond.end810

cond.end810:                                      ; preds = %cond.true790, %land.lhs.true782, %cond.false802
  %cond811 = phi %struct.rtx_def* [ %call806, %cond.false802 ], [ null, %land.lhs.true782 ], [ %141, %cond.true790 ]
  %cmp812 = icmp eq %struct.rtx_def* %1, %cond811
  br i1 %cmp812, label %if.then814, label %if.end965

if.then814:                                       ; preds = %cond.end810
  %143 = load %struct.rtx_def** %rtx372, align 8, !tbaa !9
  %144 = getelementptr inbounds %struct.rtx_def* %143, i64 0, i32 0
  %bf.load818 = load i32* %144, align 8
  %bf.clear819 = and i32 %bf.load818, 65535
  %cmp820 = icmp eq i32 %bf.clear819, 63
  br i1 %cmp820, label %land.lhs.true822, label %if.else859

land.lhs.true822:                                 ; preds = %if.then814
  %bf.lshr827 = lshr i32 %bf.load818, 16
  %bf.clear828 = and i32 %bf.lshr827, 255
  %idxprom8291594 = zext i32 %bf.clear828 to i64
  %arrayidx830 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom8291594
  %145 = load i8* %arrayidx830, align 1, !tbaa !22
  %bf.load832 = load i32* %0, align 8
  %bf.lshr833 = lshr i32 %bf.load832, 16
  %bf.clear834 = and i32 %bf.lshr833, 255
  %idxprom8351595 = zext i32 %bf.clear834 to i64
  %arrayidx836 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom8351595
  %146 = load i8* %arrayidx836, align 1, !tbaa !22
  %cmp838 = icmp ugt i8 %145, %146
  br i1 %cmp838, label %if.then840, label %if.else859

if.then840:                                       ; preds = %land.lhs.true822
  %p.017.i1706 = load %struct.fixup_replacement** %replacements, align 8
  %cond18.i1707 = icmp eq %struct.fixup_replacement* %p.017.i1706, null
  br i1 %cond18.i1707, label %if.then.i1721, label %land.rhs.i1716

for.cond.i1711:                                   ; preds = %land.rhs.i1716
  %next.i1708 = getelementptr inbounds %struct.fixup_replacement* %p.019.i1712, i64 0, i32 2
  %p.0.i1709 = load %struct.fixup_replacement** %next.i1708, align 8
  %cond.i1710 = icmp eq %struct.fixup_replacement* %p.0.i1709, null
  br i1 %cond.i1710, label %if.then.i1721, label %land.rhs.i1716

land.rhs.i1716:                                   ; preds = %if.then840, %for.cond.i1711
  %p.019.i1712 = phi %struct.fixup_replacement* [ %p.0.i1709, %for.cond.i1711 ], [ %p.017.i1706, %if.then840 ]
  %old.i1713 = getelementptr inbounds %struct.fixup_replacement* %p.019.i1712, i64 0, i32 0
  %147 = load %struct.rtx_def** %old.i1713, align 8, !tbaa !158
  %call.i1714 = tail call i32 @rtx_equal_p(%struct.rtx_def* %147, %struct.rtx_def* %var) #5
  %lnot.i1715 = icmp eq i32 %call.i1714, 0
  br i1 %lnot.i1715, label %for.cond.i1711, label %find_fixup_replacement.exit1723

if.then.i1721:                                    ; preds = %for.cond.i1711, %if.then840
  %call2.i1717 = tail call noalias i8* @xmalloc(i64 24) #5
  %148 = bitcast i8* %call2.i1717 to %struct.fixup_replacement*
  %old3.i1718 = bitcast i8* %call2.i1717 to %struct.rtx_def**
  store %struct.rtx_def* %var, %struct.rtx_def** %old3.i1718, align 8, !tbaa !158
  %new.i1719 = getelementptr inbounds i8* %call2.i1717, i64 8
  %149 = bitcast i8* %new.i1719 to %struct.rtx_def**
  store %struct.rtx_def* null, %struct.rtx_def** %149, align 8, !tbaa !156
  %150 = load %struct.fixup_replacement** %replacements, align 8, !tbaa !9
  %next4.i1720 = getelementptr inbounds i8* %call2.i1717, i64 16
  %151 = bitcast i8* %next4.i1720 to %struct.fixup_replacement**
  store %struct.fixup_replacement* %150, %struct.fixup_replacement** %151, align 8, !tbaa !159
  store %struct.fixup_replacement* %148, %struct.fixup_replacement** %replacements, align 8, !tbaa !9
  br label %find_fixup_replacement.exit1723

find_fixup_replacement.exit1723:                  ; preds = %land.rhs.i1716, %if.then.i1721
  %p.1.i1722 = phi %struct.fixup_replacement* [ %148, %if.then.i1721 ], [ %p.019.i1712, %land.rhs.i1716 ]
  %new842 = getelementptr inbounds %struct.fixup_replacement* %p.1.i1722, i64 0, i32 1
  %152 = load %struct.rtx_def** %new842, align 8, !tbaa !156
  %cmp843 = icmp eq %struct.rtx_def* %152, null
  br i1 %cmp843, label %if.then845, label %if.end851

if.then845:                                       ; preds = %find_fixup_replacement.exit1723
  %bf.load846 = load i32* %0, align 8
  %bf.lshr847 = lshr i32 %bf.load846, 16
  %bf.clear848 = and i32 %bf.lshr847, 255
  %call849 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear848) #5
  store %struct.rtx_def* %call849, %struct.rtx_def** %new842, align 8, !tbaa !156
  br label %if.end851

if.end851:                                        ; preds = %if.then845, %find_fixup_replacement.exit1723
  %153 = phi %struct.rtx_def* [ %call849, %if.then845 ], [ %152, %find_fixup_replacement.exit1723 ]
  %154 = load %struct.rtx_def** %rtx372, align 8, !tbaa !9
  %155 = getelementptr inbounds %struct.rtx_def* %154, i64 0, i32 1, i64 0, i32 0
  %.c1596 = ptrtoint %struct.rtx_def* %153 to i64
  store i64 %.c1596, i64* %155, align 8, !tbaa !9
  br label %if.end899

if.else859:                                       ; preds = %land.lhs.true822, %if.then814
  %p.017.i1724 = load %struct.fixup_replacement** %replacements, align 8
  %cond18.i1725 = icmp eq %struct.fixup_replacement* %p.017.i1724, null
  br i1 %cond18.i1725, label %if.then.i1739, label %land.rhs.i1734

for.cond.i1729:                                   ; preds = %land.rhs.i1734
  %next.i1726 = getelementptr inbounds %struct.fixup_replacement* %p.019.i1730, i64 0, i32 2
  %p.0.i1727 = load %struct.fixup_replacement** %next.i1726, align 8
  %cond.i1728 = icmp eq %struct.fixup_replacement* %p.0.i1727, null
  br i1 %cond.i1728, label %if.then.i1739, label %land.rhs.i1734

land.rhs.i1734:                                   ; preds = %if.else859, %for.cond.i1729
  %p.019.i1730 = phi %struct.fixup_replacement* [ %p.0.i1727, %for.cond.i1729 ], [ %p.017.i1724, %if.else859 ]
  %old.i1731 = getelementptr inbounds %struct.fixup_replacement* %p.019.i1730, i64 0, i32 0
  %156 = load %struct.rtx_def** %old.i1731, align 8, !tbaa !158
  %call.i1732 = tail call i32 @rtx_equal_p(%struct.rtx_def* %156, %struct.rtx_def* %143) #5
  %lnot.i1733 = icmp eq i32 %call.i1732, 0
  br i1 %lnot.i1733, label %for.cond.i1729, label %find_fixup_replacement.exit1741

if.then.i1739:                                    ; preds = %for.cond.i1729, %if.else859
  %call2.i1735 = tail call noalias i8* @xmalloc(i64 24) #5
  %157 = bitcast i8* %call2.i1735 to %struct.fixup_replacement*
  %old3.i1736 = bitcast i8* %call2.i1735 to %struct.rtx_def**
  store %struct.rtx_def* %143, %struct.rtx_def** %old3.i1736, align 8, !tbaa !158
  %new.i1737 = getelementptr inbounds i8* %call2.i1735, i64 8
  %158 = bitcast i8* %new.i1737 to %struct.rtx_def**
  store %struct.rtx_def* null, %struct.rtx_def** %158, align 8, !tbaa !156
  %159 = load %struct.fixup_replacement** %replacements, align 8, !tbaa !9
  %next4.i1738 = getelementptr inbounds i8* %call2.i1735, i64 16
  %160 = bitcast i8* %next4.i1738 to %struct.fixup_replacement**
  store %struct.fixup_replacement* %159, %struct.fixup_replacement** %160, align 8, !tbaa !159
  store %struct.fixup_replacement* %157, %struct.fixup_replacement** %replacements, align 8, !tbaa !9
  br label %find_fixup_replacement.exit1741

find_fixup_replacement.exit1741:                  ; preds = %land.rhs.i1734, %if.then.i1739
  %p.1.i1740 = phi %struct.fixup_replacement* [ %157, %if.then.i1739 ], [ %p.019.i1730, %land.rhs.i1734 ]
  %new864 = getelementptr inbounds %struct.fixup_replacement* %p.1.i1740, i64 0, i32 1
  %161 = load %struct.rtx_def** %new864, align 8, !tbaa !156
  %tobool865 = icmp eq %struct.rtx_def* %161, null
  br i1 %tobool865, label %if.else871, label %if.then866

if.then866:                                       ; preds = %find_fixup_replacement.exit1741
  %162 = getelementptr inbounds %union.rtunion_def* %arrayidx371, i64 0, i32 0
  %.c1593 = ptrtoint %struct.rtx_def* %161 to i64
  store i64 %.c1593, i64* %162, align 8, !tbaa !9
  br label %if.end899

if.else871:                                       ; preds = %find_fixup_replacement.exit1741
  %163 = load %struct.rtx_def** %rtx372, align 8, !tbaa !9
  %164 = getelementptr inbounds %struct.rtx_def* %163, i64 0, i32 0
  %bf.load875 = load i32* %164, align 8
  %bf.clear876 = and i32 %bf.load875, 65535
  %cmp877 = icmp eq i32 %bf.clear876, 63
  br i1 %cmp877, label %if.then879, label %if.else888

if.then879:                                       ; preds = %if.else871
  %call883 = tail call fastcc %struct.rtx_def* @fixup_memory_subreg(%struct.rtx_def* %163, %struct.rtx_def* %insn, i32 0)
  store %struct.rtx_def* %call883, %struct.rtx_def** %new864, align 8, !tbaa !156
  %165 = getelementptr inbounds %union.rtunion_def* %arrayidx371, i64 0, i32 0
  %call883.c = ptrtoint %struct.rtx_def* %call883 to i64
  store i64 %call883.c, i64* %165, align 8, !tbaa !9
  br label %if.end899

if.else888:                                       ; preds = %if.else871
  %call892 = tail call fastcc %struct.rtx_def* @fixup_stack_1(%struct.rtx_def* %163, %struct.rtx_def* %insn)
  store %struct.rtx_def* %call892, %struct.rtx_def** %new864, align 8, !tbaa !156
  %166 = getelementptr inbounds %union.rtunion_def* %arrayidx371, i64 0, i32 0
  %call892.c = ptrtoint %struct.rtx_def* %call892 to i64
  store i64 %call892.c, i64* %166, align 8, !tbaa !9
  br label %if.end899

if.end899:                                        ; preds = %if.then866, %if.else888, %if.then879, %if.end851
  %167 = load i32* %rtint561, align 4, !tbaa !17
  %cmp903 = icmp sgt i32 %167, -1
  br i1 %cmp903, label %for.end1225, label %cond.end911

cond.end911:                                      ; preds = %if.end899
  %call910 = tail call i32 @recog_memoized_1(%struct.rtx_def* %insn) #5
  %cmp913 = icmp sgt i32 %call910, -1
  br i1 %cmp913, label %for.end1225, label %if.end916

if.end916:                                        ; preds = %cond.end911
  %168 = load %struct.rtx_def** %rtx355, align 8, !tbaa !9
  %169 = load %struct.rtx_def** %rtx372, align 8, !tbaa !9
  %call923 = tail call %struct.rtx_def* @gen_move_insn(%struct.rtx_def* %168, %struct.rtx_def* %169) #5
  %170 = getelementptr inbounds %struct.rtx_def* %call923, i64 0, i32 0
  %bf.load924 = load i32* %170, align 8
  %bf.clear925 = and i32 %bf.load924, 65535
  %cmp926 = icmp eq i32 %bf.clear925, 24
  br i1 %cmp926, label %if.then928, label %if.else960

if.then928:                                       ; preds = %if.end916
  %call929 = tail call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %call923, %struct.rtx_def* %insn) #5
  %arrayidx931 = getelementptr inbounds %struct.rtx_def* %call929, i64 0, i32 1, i64 6
  %rtx932 = bitcast %union.rtunion_def* %arrayidx931 to %struct.rtx_def**
  %171 = load %struct.rtx_def** %rtx932, align 8, !tbaa !9
  %tobool933 = icmp eq %struct.rtx_def* %171, null
  br i1 %tobool933, label %if.end952, label %land.lhs.true934

land.lhs.true934:                                 ; preds = %if.then928
  %arrayidx936 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 6
  %rtx937 = bitcast %union.rtunion_def* %arrayidx936 to %struct.rtx_def**
  %172 = load %struct.rtx_def** %rtx937, align 8, !tbaa !9
  %tobool938 = icmp eq %struct.rtx_def* %172, null
  br i1 %tobool938, label %if.then945, label %if.then939

if.then939:                                       ; preds = %land.lhs.true934
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8]* @.str, i64 0, i64 0), i32 2424, i8* getelementptr inbounds ([17 x i8]* @__FUNCTION__.fixup_var_refs_1, i64 0, i64 0)) #8
  unreachable

if.then945:                                       ; preds = %land.lhs.true934
  %173 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 6, i32 0
  %.c1592 = ptrtoint %struct.rtx_def* %171 to i64
  store i64 %.c1592, i64* %173, align 8, !tbaa !9
  br label %if.end952

if.end952:                                        ; preds = %if.then928, %if.then945
  %arrayidx954 = getelementptr inbounds %struct.rtx_def* %call929, i64 0, i32 1, i64 3
  %rtx955 = bitcast %union.rtunion_def* %arrayidx954 to %struct.rtx_def**
  %174 = load %struct.rtx_def** %rtx955, align 8, !tbaa !9
  %175 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 3, i32 0
  %.c1591 = ptrtoint %struct.rtx_def* %174 to i64
  store i64 %.c1591, i64* %175, align 8, !tbaa !9
  %call959 = tail call %struct.rtx_def* @delete_insn(%struct.rtx_def* %call929) #5
  br label %for.end1225

if.else960:                                       ; preds = %if.end916
  %176 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 3, i32 0
  %call923.c = ptrtoint %struct.rtx_def* %call923 to i64
  store i64 %call923.c, i64* %176, align 8, !tbaa !9
  br label %for.end1225

if.end965:                                        ; preds = %land.lhs.true749, %cond.end810, %land.lhs.true776, %land.lhs.true765, %land.lhs.true740, %lor.lhs.false732
  %177 = load %struct.rtx_def** %rtx355, align 8, !tbaa !9
  %cmp969 = icmp eq %struct.rtx_def* %177, %var
  br i1 %cmp969, label %land.lhs.true988, label %lor.lhs.false971

lor.lhs.false971:                                 ; preds = %if.end965
  %178 = getelementptr inbounds %struct.rtx_def* %177, i64 0, i32 0
  %bf.load975 = load i32* %178, align 8
  %bf.clear976 = and i32 %bf.load975, 65535
  %cmp977 = icmp eq i32 %bf.clear976, 63
  br i1 %cmp977, label %land.lhs.true979, label %if.end1145

land.lhs.true979:                                 ; preds = %lor.lhs.false971
  %arrayidx984 = getelementptr inbounds %struct.rtx_def* %177, i64 0, i32 1, i64 0
  %rtx985 = bitcast %union.rtunion_def* %arrayidx984 to %struct.rtx_def**
  %179 = load %struct.rtx_def** %rtx985, align 8, !tbaa !9
  %cmp986 = icmp eq %struct.rtx_def* %179, %var
  br i1 %cmp986, label %land.lhs.true988, label %if.end1145

land.lhs.true988:                                 ; preds = %land.lhs.true979, %if.end965
  %180 = load %struct.rtx_def** %rtx372, align 8, !tbaa !9
  %181 = getelementptr inbounds %struct.rtx_def* %180, i64 0, i32 0
  %bf.load992 = load i32* %181, align 8
  %bf.clear993 = and i32 %bf.load992, 65535
  switch i32 %bf.clear993, label %if.end1145 [
    i32 61, label %land.lhs.true1015
    i32 63, label %land.lhs.true1004
  ]

land.lhs.true1004:                                ; preds = %land.lhs.true988
  %arrayidx1009 = getelementptr inbounds %struct.rtx_def* %180, i64 0, i32 1, i64 0
  %rtx1010 = bitcast %union.rtunion_def* %arrayidx1009 to %struct.rtx_def**
  %182 = load %struct.rtx_def** %rtx1010, align 8, !tbaa !9
  %183 = getelementptr inbounds %struct.rtx_def* %182, i64 0, i32 0
  %bf.load1011 = load i32* %183, align 8
  %bf.clear1012 = and i32 %bf.load1011, 65535
  %cmp1013 = icmp eq i32 %bf.clear1012, 61
  br i1 %cmp1013, label %land.lhs.true1015, label %if.end1145

land.lhs.true1015:                                ; preds = %land.lhs.true988, %land.lhs.true1004
  %bf.load1016 = load i32* %0, align 8
  %bf.lshr1017 = lshr i32 %bf.load1016, 16
  %bf.clear1018 = and i32 %bf.lshr1017, 255
  %cmp1019 = icmp eq i32 %bf.clear1018, %promoted_mode.tr
  br i1 %cmp1019, label %land.lhs.true1021, label %if.end1145

land.lhs.true1021:                                ; preds = %land.lhs.true1015
  %184 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 0
  %bf.load1022 = load i32* %184, align 8
  %bf.clear1023 = and i32 %bf.load1022, 65535
  %idxprom10241588 = zext i32 %bf.clear1023 to i64
  %arrayidx1025 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom10241588
  %185 = load i8* %arrayidx1025, align 1, !tbaa !22
  %cmp1027 = icmp eq i8 %185, 105
  br i1 %cmp1027, label %cond.true1029, label %cond.end1049

cond.true1029:                                    ; preds = %land.lhs.true1021
  %arrayidx1031 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 3
  %rtx1032 = bitcast %union.rtunion_def* %arrayidx1031 to %struct.rtx_def**
  %186 = load %struct.rtx_def** %rtx1032, align 8, !tbaa !9
  %187 = getelementptr inbounds %struct.rtx_def* %186, i64 0, i32 0
  %bf.load1033 = load i32* %187, align 8
  %bf.clear1034 = and i32 %bf.load1033, 65535
  %cmp1035 = icmp eq i32 %bf.clear1034, 47
  br i1 %cmp1035, label %cond.end1049, label %cond.false1041

cond.false1041:                                   ; preds = %cond.true1029
  %call1045 = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* %insn, %struct.rtx_def* %186) #5
  br label %cond.end1049

cond.end1049:                                     ; preds = %cond.true1029, %land.lhs.true1021, %cond.false1041
  %cond1050 = phi %struct.rtx_def* [ %call1045, %cond.false1041 ], [ null, %land.lhs.true1021 ], [ %186, %cond.true1029 ]
  %cmp1051 = icmp eq %struct.rtx_def* %1, %cond1050
  br i1 %cmp1051, label %if.then1053, label %if.end1145

if.then1053:                                      ; preds = %cond.end1049
  %188 = load %struct.rtx_def** %rtx355, align 8, !tbaa !9
  %189 = getelementptr inbounds %struct.rtx_def* %188, i64 0, i32 0
  %bf.load1059 = load i32* %189, align 8
  %bf.clear1060 = and i32 %bf.load1059, 65535
  %cmp1061 = icmp eq i32 %bf.clear1060, 63
  br i1 %cmp1061, label %if.then1063, label %if.else1071

if.then1063:                                      ; preds = %if.then1053
  %call1067 = tail call fastcc %struct.rtx_def* @fixup_memory_subreg(%struct.rtx_def* %188, %struct.rtx_def* %insn, i32 0)
  %190 = getelementptr inbounds [1 x %union.rtunion_def]* %fld353, i64 0, i64 0, i32 0
  %call1067.c = ptrtoint %struct.rtx_def* %call1067 to i64
  store i64 %call1067.c, i64* %190, align 8, !tbaa !9
  br label %if.end1079

if.else1071:                                      ; preds = %if.then1053
  %call1075 = tail call fastcc %struct.rtx_def* @fixup_stack_1(%struct.rtx_def* %188, %struct.rtx_def* %insn)
  %191 = getelementptr inbounds [1 x %union.rtunion_def]* %fld353, i64 0, i64 0, i32 0
  %call1075.c = ptrtoint %struct.rtx_def* %call1075 to i64
  store i64 %call1075.c, i64* %191, align 8, !tbaa !9
  br label %if.end1079

if.end1079:                                       ; preds = %if.else1071, %if.then1063
  %192 = load i32* %rtint561, align 4, !tbaa !17
  %cmp1083 = icmp sgt i32 %192, -1
  br i1 %cmp1083, label %for.end1225, label %cond.end1091

cond.end1091:                                     ; preds = %if.end1079
  %call1090 = tail call i32 @recog_memoized_1(%struct.rtx_def* %insn) #5
  %cmp1093 = icmp sgt i32 %call1090, -1
  br i1 %cmp1093, label %for.end1225, label %if.end1096

if.end1096:                                       ; preds = %cond.end1091
  %193 = load %struct.rtx_def** %rtx355, align 8, !tbaa !9
  %194 = load %struct.rtx_def** %rtx372, align 8, !tbaa !9
  %call1103 = tail call %struct.rtx_def* @gen_move_insn(%struct.rtx_def* %193, %struct.rtx_def* %194) #5
  %195 = getelementptr inbounds %struct.rtx_def* %call1103, i64 0, i32 0
  %bf.load1104 = load i32* %195, align 8
  %bf.clear1105 = and i32 %bf.load1104, 65535
  %cmp1106 = icmp eq i32 %bf.clear1105, 24
  br i1 %cmp1106, label %if.then1108, label %if.else1140

if.then1108:                                      ; preds = %if.end1096
  %call1109 = tail call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %call1103, %struct.rtx_def* %insn) #5
  %arrayidx1111 = getelementptr inbounds %struct.rtx_def* %call1109, i64 0, i32 1, i64 6
  %rtx1112 = bitcast %union.rtunion_def* %arrayidx1111 to %struct.rtx_def**
  %196 = load %struct.rtx_def** %rtx1112, align 8, !tbaa !9
  %tobool1113 = icmp eq %struct.rtx_def* %196, null
  br i1 %tobool1113, label %if.end1132, label %land.lhs.true1114

land.lhs.true1114:                                ; preds = %if.then1108
  %arrayidx1116 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 6
  %rtx1117 = bitcast %union.rtunion_def* %arrayidx1116 to %struct.rtx_def**
  %197 = load %struct.rtx_def** %rtx1117, align 8, !tbaa !9
  %tobool1118 = icmp eq %struct.rtx_def* %197, null
  br i1 %tobool1118, label %if.then1125, label %if.then1119

if.then1119:                                      ; preds = %land.lhs.true1114
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8]* @.str, i64 0, i64 0), i32 2468, i8* getelementptr inbounds ([17 x i8]* @__FUNCTION__.fixup_var_refs_1, i64 0, i64 0)) #8
  unreachable

if.then1125:                                      ; preds = %land.lhs.true1114
  %198 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 6, i32 0
  %.c1589 = ptrtoint %struct.rtx_def* %196 to i64
  store i64 %.c1589, i64* %198, align 8, !tbaa !9
  br label %if.end1132

if.end1132:                                       ; preds = %if.then1108, %if.then1125
  %arrayidx1134 = getelementptr inbounds %struct.rtx_def* %call1109, i64 0, i32 1, i64 3
  %rtx1135 = bitcast %union.rtunion_def* %arrayidx1134 to %struct.rtx_def**
  %199 = load %struct.rtx_def** %rtx1135, align 8, !tbaa !9
  %200 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 3, i32 0
  %.c = ptrtoint %struct.rtx_def* %199 to i64
  store i64 %.c, i64* %200, align 8, !tbaa !9
  %call1139 = tail call %struct.rtx_def* @delete_insn(%struct.rtx_def* %call1109) #5
  br label %for.end1225

if.else1140:                                      ; preds = %if.end1096
  %201 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 3, i32 0
  %call1103.c = ptrtoint %struct.rtx_def* %call1103 to i64
  store i64 %call1103.c, i64* %201, align 8, !tbaa !9
  br label %for.end1225

if.end1145:                                       ; preds = %land.lhs.true988, %cond.end1049, %land.lhs.true1015, %land.lhs.true1004, %land.lhs.true979, %lor.lhs.false971
  br i1 %cmp555, label %if.then1148, label %sw.epilog

if.then1148:                                      ; preds = %if.end1145
  %202 = load %struct.rtx_def** %rtx355, align 8, !tbaa !9
  %203 = getelementptr inbounds %struct.rtx_def* %202, i64 0, i32 0
  %bf.load1152 = load i32* %203, align 8
  %bf.clear1153 = and i32 %bf.load1152, 65535
  %cmp1154 = icmp eq i32 %bf.clear1153, 64
  br i1 %cmp1154, label %if.then1156, label %if.end1160

if.then1156:                                      ; preds = %if.then1148
  %arrayidx1158 = getelementptr inbounds %struct.rtx_def* %202, i64 0, i32 1, i64 0
  %rtx1159 = bitcast %union.rtunion_def* %arrayidx1158 to %struct.rtx_def**
  %204 = load %struct.rtx_def** %rtx1159, align 8, !tbaa !9
  %.phi.trans.insert1851 = getelementptr inbounds %struct.rtx_def* %204, i64 0, i32 0
  %bf.load1161.pre = load i32* %.phi.trans.insert1851, align 8
  br label %if.end1160

if.end1160:                                       ; preds = %if.then1156, %if.then1148
  %bf.load1161 = phi i32 [ %bf.load1161.pre, %if.then1156 ], [ %bf.load1152, %if.then1148 ]
  %fixeddest.0 = phi %struct.rtx_def* [ %204, %if.then1156 ], [ %202, %if.then1148 ]
  %bf.clear1162 = and i32 %bf.load1161, 65535
  %cmp1163 = icmp eq i32 %bf.clear1162, 63
  br i1 %cmp1163, label %if.then1165, label %if.else1170

if.then1165:                                      ; preds = %if.end1160
  %call1166 = tail call fastcc %struct.rtx_def* @fixup_memory_subreg(%struct.rtx_def* %fixeddest.0, %struct.rtx_def* %insn, i32 0)
  %205 = getelementptr inbounds %struct.rtx_def* %call1166, i64 0, i32 0
  %bf.load1167 = load i32* %205, align 8
  %bf.lshr1168 = lshr i32 %bf.load1167, 16
  %bf.clear1169 = and i32 %bf.lshr1168, 255
  br label %if.end1172

if.else1170:                                      ; preds = %if.end1160
  %call1171 = tail call fastcc %struct.rtx_def* @fixup_stack_1(%struct.rtx_def* %fixeddest.0, %struct.rtx_def* %insn)
  br label %if.end1172

if.end1172:                                       ; preds = %if.else1170, %if.then1165
  %fixeddest.1 = phi %struct.rtx_def* [ %call1166, %if.then1165 ], [ %call1171, %if.else1170 ]
  %temp_mode.0 = phi i32 [ %bf.clear1169, %if.then1165 ], [ %promoted_mode.tr, %if.else1170 ]
  %call1173 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %temp_mode.0) #5
  %206 = getelementptr inbounds %struct.rtx_def* %fixeddest.1, i64 0, i32 0
  %bf.load1174 = load i32* %206, align 8
  %bf.lshr1175 = lshr i32 %bf.load1174, 16
  %bf.clear1176 = and i32 %bf.lshr1175, 255
  %call1177 = tail call %struct.rtx_def* @gen_lowpart(i32 %bf.clear1176, %struct.rtx_def* %call1173) #5
  %call1178 = tail call %struct.rtx_def* @gen_move_insn(%struct.rtx_def* %fixeddest.1, %struct.rtx_def* %call1177) #5
  %call1179 = tail call %struct.rtx_def* @emit_insn_after(%struct.rtx_def* %call1178, %struct.rtx_def* %insn) #5
  %207 = getelementptr inbounds [1 x %union.rtunion_def]* %fld353, i64 0, i64 0, i32 0
  %call1173.c = ptrtoint %struct.rtx_def* %call1173 to i64
  store i64 %call1173.c, i64* %207, align 8, !tbaa !9
  br label %sw.epilog

sw.epilog:                                        ; preds = %tailrecurse, %sw.bb272, %if.end551, %if.end71, %if.end1172, %if.end1145, %lor.lhs.false, %land.lhs.true98, %if.end81, %if.then498
  %code.0 = phi i32 [ 47, %if.then498 ], [ 47, %if.end1172 ], [ 47, %if.end1145 ], [ %bf.clear, %land.lhs.true98 ], [ %bf.clear, %lor.lhs.false ], [ %bf.clear84, %if.end81 ], [ 66, %if.end71 ], [ 47, %if.end551 ], [ %bf.clear, %tailrecurse ], [ 63, %sw.bb272 ]
  %x.0 = phi %struct.rtx_def* [ %1, %if.then498 ], [ %1, %if.end1172 ], [ %1, %if.end1145 ], [ %1, %land.lhs.true98 ], [ %1, %lor.lhs.false ], [ %22, %if.end81 ], [ %1, %if.end71 ], [ %1, %if.end551 ], [ %1, %sw.bb272 ], [ %1, %tailrecurse ]
  %idxprom11841587 = zext i32 %code.0 to i64
  %arrayidx1185 = getelementptr inbounds [153 x i8*]* @rtx_format, i64 0, i64 %idxprom11841587
  %208 = load i8** %arrayidx1185, align 8, !tbaa !9
  %arrayidx1187 = getelementptr inbounds [153 x i8]* @rtx_length, i64 0, i64 %idxprom11841587
  %209 = load i8* %arrayidx1187, align 1, !tbaa !22
  %cmp11901799 = icmp eq i8 %209, 0
  br i1 %cmp11901799, label %for.end1225, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %sw.epilog
  %210 = zext i8 %209 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.cond.backedge
  %indvars.iv1841 = phi i64 [ %210, %for.body.lr.ph ], [ %indvars.iv.next1842, %for.cond.backedge ]
  %indvars.iv.next1842 = add nsw i64 %indvars.iv1841, -1
  %arrayidx1193 = getelementptr inbounds i8* %208, i64 %indvars.iv.next1842
  %211 = load i8* %arrayidx1193, align 1, !tbaa !22
  switch i8 %211, label %for.cond.backedge [
    i8 101, label %if.then1197
    i8 69, label %for.cond1209.preheader
  ]

for.cond.backedge:                                ; preds = %for.body1215, %for.cond1209.preheader, %for.body, %if.then1197
  %212 = trunc i64 %indvars.iv.next1842 to i32
  %cmp1190 = icmp sgt i32 %212, 0
  br i1 %cmp1190, label %for.body, label %for.end1225

for.cond1209.preheader:                           ; preds = %for.body
  %arrayidx1212 = getelementptr inbounds %struct.rtx_def* %x.0, i64 0, i32 1, i64 %indvars.iv.next1842
  %rtvec = bitcast %union.rtunion_def* %arrayidx1212 to %struct.rtvec_def**
  %213 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !9
  %num_elem1795 = getelementptr inbounds %struct.rtvec_def* %213, i64 0, i32 0
  %214 = load i32* %num_elem1795, align 4, !tbaa !75
  %cmp12131796 = icmp sgt i32 %214, 0
  br i1 %cmp12131796, label %for.body1215, label %for.cond.backedge

if.then1197:                                      ; preds = %for.body
  %arrayidx1200 = getelementptr inbounds %struct.rtx_def* %x.0, i64 0, i32 1, i64 %indvars.iv.next1842
  %rtx1201 = bitcast %union.rtunion_def* %arrayidx1200 to %struct.rtx_def**
  tail call fastcc void @fixup_var_refs_1(%struct.rtx_def* %var, i32 %promoted_mode.tr, %struct.rtx_def** %rtx1201, %struct.rtx_def* %insn, %struct.fixup_replacement** %replacements, %struct.rtx_def* %no_share)
  br label %for.cond.backedge

for.body1215:                                     ; preds = %for.cond1209.preheader, %for.body1215
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body1215 ], [ 0, %for.cond1209.preheader ]
  %215 = phi %struct.rtvec_def* [ %216, %for.body1215 ], [ %213, %for.cond1209.preheader ]
  %arrayidx1221 = getelementptr inbounds %struct.rtvec_def* %215, i64 0, i32 1, i64 %indvars.iv
  tail call fastcc void @fixup_var_refs_1(%struct.rtx_def* %var, i32 %promoted_mode.tr, %struct.rtx_def** %arrayidx1221, %struct.rtx_def* %insn, %struct.fixup_replacement** %replacements, %struct.rtx_def* %no_share)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %216 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !9
  %num_elem = getelementptr inbounds %struct.rtvec_def* %216, i64 0, i32 0
  %217 = load i32* %num_elem, align 4, !tbaa !75
  %218 = trunc i64 %indvars.iv.next to i32
  %cmp1213 = icmp slt i32 %218, %217
  br i1 %cmp1213, label %for.body1215, label %for.cond.backedge

for.end1225:                                      ; preds = %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %for.cond.backedge, %sw.epilog, %if.end1079, %if.end899, %if.then649, %if.then222, %if.then, %if.end1132, %if.else1140, %cond.end1091, %if.end952, %if.else960, %cond.end911, %cond.end683, %cond.false338, %cond.end251, %cond.false62, %sw.bb, %if.end31, %if.then40, %if.end68, %if.end137, %if.end261, %if.end310, %if.then319, %if.end345, %if.end693
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @fixup_memory_subreg(%struct.rtx_def* nocapture readonly %x, %struct.rtx_def* %insn, i32 %uncritical) #0 {
entry:
  %fld = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1
  %rtx = bitcast [1 x %union.rtunion_def]* %fld to %struct.rtx_def**
  %0 = load %struct.rtx_def** %rtx, align 8, !tbaa !9
  %arrayidx2 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 0
  %rtx3 = bitcast %union.rtunion_def* %arrayidx2 to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx3, align 8, !tbaa !9
  %2 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 0
  %bf.load = load i32* %2, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %idxprom1 = zext i32 %bf.clear to i64
  %arrayidx4 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom1
  %3 = load i8* %arrayidx4, align 1, !tbaa !22
  %4 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 0
  %bf.load5 = load i32* %4, align 8
  %bf.lshr6 = lshr i32 %bf.load5, 16
  %bf.clear7 = and i32 %bf.lshr6, 255
  %idxprom82 = zext i32 %bf.clear7 to i64
  %arrayidx9 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom82
  %5 = load i8* %arrayidx9, align 1, !tbaa !22
  %cmp = icmp ule i8 %3, %5
  %tobool = icmp ne i32 %uncritical, 0
  %or.cond = or i1 %cmp, %tobool
  br i1 %or.cond, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8]* @.str, i64 0, i64 0), i32 2571, i8* getelementptr inbounds ([20 x i8]* @__FUNCTION__.fixup_memory_subreg, i64 0, i64 0)) #8
  unreachable

if.end:                                           ; preds = %entry
  %arrayidx13 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 1
  %rtuint = bitcast %union.rtunion_def* %arrayidx13 to i32*
  %6 = load i32* %rtuint, align 4, !tbaa !17
  %7 = load i32* @flag_force_addr, align 4, !tbaa !17
  %tobool14 = icmp eq i32 %7, 0
  %conv16 = sext i32 %6 to i64
  br i1 %tobool14, label %land.lhs.true15, label %if.end22

land.lhs.true15:                                  ; preds = %if.end
  %call = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %1, i64 %conv16) #5
  %call17 = tail call i32 @memory_address_p(i32 %bf.clear, %struct.rtx_def* %call) #5
  %tobool18 = icmp eq i32 %call17, 0
  br i1 %tobool18, label %if.end22, label %if.then19

if.then19:                                        ; preds = %land.lhs.true15
  %call21 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %0, i32 %bf.clear, i64 %conv16, i32 1, i32 1) #5
  br label %return

if.end22:                                         ; preds = %if.end, %land.lhs.true15
  tail call void @start_sequence() #5
  %call24 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %0, i32 %bf.clear, i64 %conv16, i32 1, i32 1) #5
  %call25 = tail call %struct.rtx_def* @gen_sequence() #5
  %call26 = tail call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %call25, %struct.rtx_def* %insn) #5
  tail call void @end_sequence() #5
  br label %return

return:                                           ; preds = %if.end22, %if.then19
  %retval.0 = phi %struct.rtx_def* [ %call24, %if.end22 ], [ %call21, %if.then19 ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @fixup_stack_1(%struct.rtx_def* %x, %struct.rtx_def* %insn) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 66
  br i1 %cmp, label %if.then, label %if.end77

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx, align 8, !tbaa !9
  %2 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 0
  %bf.load1 = load i32* %2, align 8
  %bf.clear2 = and i32 %bf.load1, 65535
  %cmp3 = icmp eq i32 %bf.clear2, 75
  br i1 %cmp3, label %land.lhs.true, label %return

land.lhs.true:                                    ; preds = %if.then
  %fld4 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1
  %rtx6 = bitcast [1 x %union.rtunion_def]* %fld4 to %struct.rtx_def**
  %3 = load %struct.rtx_def** %rtx6, align 8, !tbaa !9
  %4 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 0
  %bf.load7 = load i32* %4, align 8
  %bf.clear8 = and i32 %bf.load7, 65535
  %cmp9 = icmp eq i32 %bf.clear8, 61
  br i1 %cmp9, label %land.lhs.true10, label %return

land.lhs.true10:                                  ; preds = %land.lhs.true
  %arrayidx15 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx15 to i32*
  %5 = load i32* %rtuint, align 4, !tbaa !17
  %.off = add i32 %5, -53
  %6 = icmp ult i32 %.off, 5
  br i1 %6, label %land.lhs.true61, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true10
  switch i32 %5, label %lor.lhs.false56 [
    i32 20, label %land.lhs.true61
    i32 6, label %land.lhs.true61
    i32 7, label %land.lhs.true61
    i32 16, label %land.lhs.true61
  ]

lor.lhs.false56:                                  ; preds = %lor.lhs.false
  %7 = load %struct.function** @cfun, align 8, !tbaa !9
  %internal_arg_pointer = getelementptr inbounds %struct.function* %7, i64 0, i32 15
  %8 = load %struct.rtx_def** %internal_arg_pointer, align 8, !tbaa !84
  %cmp60 = icmp eq %struct.rtx_def* %3, %8
  br i1 %cmp60, label %land.lhs.true61, label %return

land.lhs.true61:                                  ; preds = %lor.lhs.false, %lor.lhs.false, %lor.lhs.false, %lor.lhs.false, %land.lhs.true10, %lor.lhs.false56
  %arrayidx63 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 1
  %rtx64 = bitcast %union.rtunion_def* %arrayidx63 to %struct.rtx_def**
  %9 = load %struct.rtx_def** %rtx64, align 8, !tbaa !9
  %10 = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 0
  %bf.load65 = load i32* %10, align 8
  %bf.clear66 = and i32 %bf.load65, 65535
  %cmp67 = icmp eq i32 %bf.clear66, 54
  br i1 %cmp67, label %if.then68, label %return

if.then68:                                        ; preds = %land.lhs.true61
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear70 = and i32 %bf.lshr, 255
  %call = tail call i32 @memory_address_p(i32 %bf.clear70, %struct.rtx_def* %1) #5
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.end, label %return

if.end:                                           ; preds = %if.then68
  tail call void @start_sequence() #5
  %call72 = tail call %struct.rtx_def* @copy_to_reg(%struct.rtx_def* %1) #5
  %call73 = tail call %struct.rtx_def* @gen_sequence() #5
  tail call void @end_sequence() #5
  %call74 = tail call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %call73, %struct.rtx_def* %insn) #5
  %call75 = tail call %struct.rtx_def* @replace_equiv_address(%struct.rtx_def* %x, %struct.rtx_def* %call72) #5
  br label %return

if.end77:                                         ; preds = %entry
  %idxprom166 = zext i32 %bf.clear to i64
  %arrayidx78 = getelementptr inbounds [153 x i8*]* @rtx_format, i64 0, i64 %idxprom166
  %11 = load i8** %arrayidx78, align 8, !tbaa !9
  %arrayidx80 = getelementptr inbounds [153 x i8]* @rtx_length, i64 0, i64 %idxprom166
  %12 = load i8* %arrayidx80, align 1, !tbaa !22
  %cmp81171 = icmp eq i8 %12, 0
  br i1 %cmp81171, label %return, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.end77
  %13 = zext i8 %12 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.cond.backedge
  %indvars.iv173 = phi i64 [ %13, %for.body.lr.ph ], [ %indvars.iv.next174, %for.cond.backedge ]
  %indvars.iv.next174 = add nsw i64 %indvars.iv173, -1
  %arrayidx84 = getelementptr inbounds i8* %11, i64 %indvars.iv.next174
  %14 = load i8* %arrayidx84, align 1, !tbaa !22
  switch i8 %14, label %for.cond.backedge [
    i8 101, label %if.then88
    i8 69, label %for.cond104.preheader
  ]

for.cond.backedge:                                ; preds = %for.body110, %for.cond104.preheader, %for.body, %if.then88
  %15 = trunc i64 %indvars.iv.next174 to i32
  %cmp81 = icmp sgt i32 %15, 0
  br i1 %cmp81, label %for.body, label %return

for.cond104.preheader:                            ; preds = %for.body
  %arrayidx107 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 %indvars.iv.next174
  %rtvec = bitcast %union.rtunion_def* %arrayidx107 to %struct.rtvec_def**
  %16 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !9
  %num_elem167 = getelementptr inbounds %struct.rtvec_def* %16, i64 0, i32 0
  %17 = load i32* %num_elem167, align 4, !tbaa !75
  %cmp108168 = icmp sgt i32 %17, 0
  br i1 %cmp108168, label %for.body110, label %for.cond.backedge

if.then88:                                        ; preds = %for.body
  %arrayidx91 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 %indvars.iv.next174
  %rtx92 = bitcast %union.rtunion_def* %arrayidx91 to %struct.rtx_def**
  %18 = load %struct.rtx_def** %rtx92, align 8, !tbaa !9
  %call93 = tail call fastcc %struct.rtx_def* @fixup_stack_1(%struct.rtx_def* %18, %struct.rtx_def* %insn)
  %19 = getelementptr inbounds %union.rtunion_def* %arrayidx91, i64 0, i32 0
  %call93.c = ptrtoint %struct.rtx_def* %call93 to i64
  store i64 %call93.c, i64* %19, align 8, !tbaa !9
  br label %for.cond.backedge

for.body110:                                      ; preds = %for.cond104.preheader, %for.body110
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body110 ], [ 0, %for.cond104.preheader ]
  %20 = phi %struct.rtvec_def* [ %23, %for.body110 ], [ %16, %for.cond104.preheader ]
  %arrayidx116 = getelementptr inbounds %struct.rtvec_def* %20, i64 0, i32 1, i64 %indvars.iv
  %21 = load %struct.rtx_def** %arrayidx116, align 8, !tbaa !9
  %call117 = tail call fastcc %struct.rtx_def* @fixup_stack_1(%struct.rtx_def* %21, %struct.rtx_def* %insn)
  %22 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !9
  %arrayidx124 = getelementptr inbounds %struct.rtvec_def* %22, i64 0, i32 1, i64 %indvars.iv
  store %struct.rtx_def* %call117, %struct.rtx_def** %arrayidx124, align 8, !tbaa !9
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %23 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !9
  %num_elem = getelementptr inbounds %struct.rtvec_def* %23, i64 0, i32 0
  %24 = load i32* %num_elem, align 4, !tbaa !75
  %25 = trunc i64 %indvars.iv.next to i32
  %cmp108 = icmp slt i32 %25, %24
  br i1 %cmp108, label %for.body110, label %for.cond.backedge

return:                                           ; preds = %for.cond.backedge, %if.end77, %if.then, %land.lhs.true, %lor.lhs.false56, %land.lhs.true61, %if.then68, %if.end
  %retval.0 = phi %struct.rtx_def* [ %call75, %if.end ], [ %x, %if.then68 ], [ %x, %land.lhs.true61 ], [ %x, %lor.lhs.false56 ], [ %x, %land.lhs.true ], [ %x, %if.then ], [ %x, %if.end77 ], [ %x, %for.cond.backedge ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @walk_fixup_memory_subreg(%struct.rtx_def* %x, %struct.rtx_def* %insn) #0 {
entry:
  %cmp = icmp eq %struct.rtx_def* %x, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp1 = icmp eq i32 %bf.clear, 63
  br i1 %cmp1, label %land.lhs.true, label %if.end6

land.lhs.true:                                    ; preds = %if.end
  %arrayidx = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx, align 8, !tbaa !9
  %2 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 0
  %bf.load2 = load i32* %2, align 8
  %bf.clear3 = and i32 %bf.load2, 65535
  %cmp4 = icmp eq i32 %bf.clear3, 66
  br i1 %cmp4, label %if.then5, label %if.end6

if.then5:                                         ; preds = %land.lhs.true
  %call = tail call fastcc %struct.rtx_def* @fixup_memory_subreg(%struct.rtx_def* %x, %struct.rtx_def* %insn, i32 1)
  br label %return

if.end6:                                          ; preds = %land.lhs.true, %if.end
  %idxprom1 = zext i32 %bf.clear to i64
  %arrayidx7 = getelementptr inbounds [153 x i8*]* @rtx_format, i64 0, i64 %idxprom1
  %3 = load i8** %arrayidx7, align 8, !tbaa !9
  %arrayidx9 = getelementptr inbounds [153 x i8]* @rtx_length, i64 0, i64 %idxprom1
  %4 = load i8* %arrayidx9, align 1, !tbaa !22
  %cmp106 = icmp eq i8 %4, 0
  br i1 %cmp106, label %return, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.end6
  %5 = zext i8 %4 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.cond.backedge
  %indvars.iv8 = phi i64 [ %5, %for.body.lr.ph ], [ %indvars.iv.next9, %for.cond.backedge ]
  %indvars.iv.next9 = add nsw i64 %indvars.iv8, -1
  %arrayidx13 = getelementptr inbounds i8* %3, i64 %indvars.iv.next9
  %6 = load i8* %arrayidx13, align 1, !tbaa !22
  switch i8 %6, label %for.cond.backedge [
    i8 101, label %if.then17
    i8 69, label %for.cond33.preheader
  ]

for.cond.backedge:                                ; preds = %for.body39, %for.cond33.preheader, %for.body, %if.then17
  %7 = trunc i64 %indvars.iv.next9 to i32
  %cmp10 = icmp sgt i32 %7, 0
  br i1 %cmp10, label %for.body, label %return

for.cond33.preheader:                             ; preds = %for.body
  %arrayidx36 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 %indvars.iv.next9
  %rtvec = bitcast %union.rtunion_def* %arrayidx36 to %struct.rtvec_def**
  %8 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !9
  %num_elem2 = getelementptr inbounds %struct.rtvec_def* %8, i64 0, i32 0
  %9 = load i32* %num_elem2, align 4, !tbaa !75
  %cmp373 = icmp sgt i32 %9, 0
  br i1 %cmp373, label %for.body39, label %for.cond.backedge

if.then17:                                        ; preds = %for.body
  %arrayidx20 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 %indvars.iv.next9
  %rtx21 = bitcast %union.rtunion_def* %arrayidx20 to %struct.rtx_def**
  %10 = load %struct.rtx_def** %rtx21, align 8, !tbaa !9
  %call22 = tail call fastcc %struct.rtx_def* @walk_fixup_memory_subreg(%struct.rtx_def* %10, %struct.rtx_def* %insn)
  %11 = getelementptr inbounds %union.rtunion_def* %arrayidx20, i64 0, i32 0
  %call22.c = ptrtoint %struct.rtx_def* %call22 to i64
  store i64 %call22.c, i64* %11, align 8, !tbaa !9
  br label %for.cond.backedge

for.body39:                                       ; preds = %for.cond33.preheader, %for.body39
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body39 ], [ 0, %for.cond33.preheader ]
  %12 = phi %struct.rtvec_def* [ %15, %for.body39 ], [ %8, %for.cond33.preheader ]
  %arrayidx45 = getelementptr inbounds %struct.rtvec_def* %12, i64 0, i32 1, i64 %indvars.iv
  %13 = load %struct.rtx_def** %arrayidx45, align 8, !tbaa !9
  %call46 = tail call fastcc %struct.rtx_def* @walk_fixup_memory_subreg(%struct.rtx_def* %13, %struct.rtx_def* %insn)
  %14 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !9
  %arrayidx53 = getelementptr inbounds %struct.rtvec_def* %14, i64 0, i32 1, i64 %indvars.iv
  store %struct.rtx_def* %call46, %struct.rtx_def** %arrayidx53, align 8, !tbaa !9
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %15 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !9
  %num_elem = getelementptr inbounds %struct.rtvec_def* %15, i64 0, i32 0
  %16 = load i32* %num_elem, align 4, !tbaa !75
  %17 = trunc i64 %indvars.iv.next to i32
  %cmp37 = icmp slt i32 %17, %16
  br i1 %cmp37, label %for.body39, label %for.cond.backedge

return:                                           ; preds = %for.cond.backedge, %if.end6, %entry, %if.then5
  %retval.0 = phi %struct.rtx_def* [ %call, %if.then5 ], [ null, %entry ], [ %x, %if.end6 ], [ %x, %for.cond.backedge ]
  ret %struct.rtx_def* %retval.0
}

declare %struct.rtx_def* @replace_equiv_address(%struct.rtx_def*, %struct.rtx_def*) #2

declare i32 @recog_memoized_1(%struct.rtx_def*) #2

declare %struct.rtx_def* @copy_most_rtx(%struct.rtx_def*, %struct.rtx_def*) #2

declare i32 @mode_dependent_address_p(%struct.rtx_def*) #2

declare i32 @mode_for_extraction(i32, i32) #2

; Function Attrs: nounwind uwtable
define internal fastcc void @optimize_bit_field(%struct.rtx_def* %body, %struct.rtx_def* %insn) #0 {
entry:
  %fld = getelementptr inbounds %struct.rtx_def* %body, i64 0, i32 1
  %rtx = bitcast [1 x %union.rtunion_def]* %fld to %struct.rtx_def**
  %0 = load %struct.rtx_def** %rtx, align 8, !tbaa !9
  %1 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 0
  %bf.load = load i32* %1, align 8
  %2 = and i32 %bf.load, 65534
  %switch = icmp eq i32 %2, 132
  br i1 %switch, label %if.end, label %if.else

if.else:                                          ; preds = %entry
  %arrayidx11 = getelementptr inbounds %struct.rtx_def* %body, i64 0, i32 1, i64 1
  %rtx12 = bitcast %union.rtunion_def* %arrayidx11 to %struct.rtx_def**
  %bitfield.0.pre = load %struct.rtx_def** %rtx12, align 8
  br label %if.end

if.end:                                           ; preds = %entry, %if.else
  %bitfield.0 = phi %struct.rtx_def* [ %bitfield.0.pre, %if.else ], [ %0, %entry ]
  %destflag.0 = phi i32 [ 0, %if.else ], [ 1, %entry ]
  %arrayidx14 = getelementptr inbounds %struct.rtx_def* %bitfield.0, i64 0, i32 1, i64 1
  %rtx15 = bitcast %union.rtunion_def* %arrayidx14 to %struct.rtx_def**
  %3 = load %struct.rtx_def** %rtx15, align 8, !tbaa !9
  %4 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 0
  %bf.load16 = load i32* %4, align 8
  %bf.clear17 = and i32 %bf.load16, 65535
  %cmp18 = icmp eq i32 %bf.clear17, 54
  br i1 %cmp18, label %land.lhs.true, label %if.end385

land.lhs.true:                                    ; preds = %if.end
  %arrayidx20 = getelementptr inbounds %struct.rtx_def* %bitfield.0, i64 0, i32 1, i64 2
  %rtx21 = bitcast %union.rtunion_def* %arrayidx20 to %struct.rtx_def**
  %5 = load %struct.rtx_def** %rtx21, align 8, !tbaa !9
  %6 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 0
  %bf.load22 = load i32* %6, align 8
  %bf.clear23 = and i32 %bf.load22, 65535
  %cmp24 = icmp eq i32 %bf.clear23, 54
  br i1 %cmp24, label %land.lhs.true25, label %if.end385

land.lhs.true25:                                  ; preds = %land.lhs.true
  %rtwint = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 1, i64 0, i32 0
  %7 = load i64* %rtwint, align 8, !tbaa !60
  %conv = trunc i64 %7 to i32
  %call = tail call i32 @mode_for_size(i32 %conv, i32 1, i32 1) #5
  %cmp31 = icmp eq i32 %call, 51
  br i1 %cmp31, label %if.end385, label %land.lhs.true33

land.lhs.true33:                                  ; preds = %land.lhs.true25
  %8 = load %struct.rtx_def** %rtx21, align 8, !tbaa !9
  %rtwint39 = getelementptr inbounds %struct.rtx_def* %8, i64 0, i32 1, i64 0, i32 0
  %9 = load i64* %rtwint39, align 8, !tbaa !60
  %10 = load %struct.rtx_def** %rtx15, align 8, !tbaa !9
  %rtwint45 = getelementptr inbounds %struct.rtx_def* %10, i64 0, i32 1, i64 0, i32 0
  %11 = load i64* %rtwint45, align 8, !tbaa !60
  %rem = srem i64 %9, %11
  %cmp46 = icmp eq i64 %rem, 0
  br i1 %cmp46, label %if.then48, label %if.end385

if.then48:                                        ; preds = %land.lhs.true33
  %arrayidx50 = getelementptr inbounds %struct.rtx_def* %bitfield.0, i64 0, i32 1, i64 0
  %rtx51 = bitcast %union.rtunion_def* %arrayidx50 to %struct.rtx_def**
  %12 = load %struct.rtx_def** %rtx51, align 8, !tbaa !9
  %13 = getelementptr inbounds %struct.rtx_def* %12, i64 0, i32 0
  %bf.load52 = load i32* %13, align 8
  %bf.clear53 = and i32 %bf.load52, 65535
  switch i32 %bf.clear53, label %if.end385 [
    i32 66, label %if.end141
    i32 63, label %land.lhs.true86
  ]

land.lhs.true86:                                  ; preds = %if.then48
  %arrayidx91 = getelementptr inbounds %struct.rtx_def* %12, i64 0, i32 1, i64 0
  %rtx92 = bitcast %union.rtunion_def* %arrayidx91 to %struct.rtx_def**
  %14 = load %struct.rtx_def** %rtx92, align 8, !tbaa !9
  %15 = getelementptr inbounds %struct.rtx_def* %14, i64 0, i32 0
  %bf.load93 = load i32* %15, align 8
  %bf.clear94 = and i32 %bf.load93, 65535
  %cmp95 = icmp eq i32 %bf.clear94, 66
  br i1 %cmp95, label %if.end141, label %if.end385

if.end141:                                        ; preds = %land.lhs.true86, %if.then48
  %memref.0 = phi %struct.rtx_def* [ %12, %if.then48 ], [ %14, %land.lhs.true86 ]
  %tobool = icmp eq %struct.rtx_def* %memref.0, null
  br i1 %tobool, label %if.end385, label %land.lhs.true142

land.lhs.true142:                                 ; preds = %if.end141
  %arrayidx144 = getelementptr inbounds %struct.rtx_def* %memref.0, i64 0, i32 1, i64 0
  %rtx145 = bitcast %union.rtunion_def* %arrayidx144 to %struct.rtx_def**
  %16 = load %struct.rtx_def** %rtx145, align 8, !tbaa !9
  %call146 = tail call i32 @mode_dependent_address_p(%struct.rtx_def* %16) #5
  %tobool147 = icmp eq i32 %call146, 0
  br i1 %tobool147, label %land.lhs.true148, label %if.end385

land.lhs.true148:                                 ; preds = %land.lhs.true142
  %17 = getelementptr inbounds %struct.rtx_def* %memref.0, i64 0, i32 0
  %bf.load149 = load i32* %17, align 8
  %bf.clear150 = and i32 %bf.load149, 134217728
  %tobool151 = icmp eq i32 %bf.clear150, 0
  br i1 %tobool151, label %if.then152, label %if.end385

if.then152:                                       ; preds = %land.lhs.true148
  %18 = load %struct.rtx_def** %rtx21, align 8, !tbaa !9
  %rtwint158 = getelementptr inbounds %struct.rtx_def* %18, i64 0, i32 1, i64 0, i32 0
  %19 = load i64* %rtwint158, align 8, !tbaa !60
  %div = sdiv i64 %19, 8
  %20 = load %struct.rtx_def** %rtx51, align 8, !tbaa !9
  %21 = getelementptr inbounds %struct.rtx_def* %20, i64 0, i32 0
  %bf.load162 = load i32* %21, align 8
  %bf.clear163 = and i32 %bf.load162, 65535
  %cmp164 = icmp eq i32 %bf.clear163, 63
  br i1 %cmp164, label %if.then166, label %if.end179

if.then166:                                       ; preds = %if.then152
  %arrayidx171 = getelementptr inbounds %struct.rtx_def* %20, i64 0, i32 1, i64 1
  %rtuint172 = bitcast %union.rtunion_def* %arrayidx171 to i32*
  %22 = load i32* %rtuint172, align 4, !tbaa !17
  %23 = load i32* @target_flags, align 4, !tbaa !17
  %and = lshr i32 %23, 23
  %24 = and i32 %and, 4
  %.not = sub i32 -4, %24
  %mul = and i32 %.not, %22
  %conv178 = zext i32 %mul to i64
  %add = add nsw i64 %conv178, %div
  br label %if.end179

if.end179:                                        ; preds = %if.then166, %if.then152
  %offset.0 = phi i64 [ %add, %if.then166 ], [ %div, %if.then152 ]
  tail call void @start_sequence() #5
  %call180 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %memref.0, i32 %call, i64 %offset.0, i32 1, i32 1) #5
  %call181 = tail call %struct.rtx_def* @get_insns() #5
  tail call void @end_sequence() #5
  %call182 = tail call %struct.rtx_def* @emit_insns_before(%struct.rtx_def* %call181, %struct.rtx_def* %insn) #5
  %tobool183 = icmp eq i32 %destflag.0, 0
  br i1 %tobool183, label %if.else289, label %if.then184

if.then184:                                       ; preds = %if.end179
  %call188 = tail call i32 @validate_change(%struct.rtx_def* %insn, %struct.rtx_def** %rtx, %struct.rtx_def* %call180, i32 1) #5
  %arrayidx190 = getelementptr inbounds %struct.rtx_def* %body, i64 0, i32 1, i64 1
  %rtx191 = bitcast %union.rtunion_def* %arrayidx190 to %struct.rtx_def**
  %25 = load %struct.rtx_def** %rtx191, align 8, !tbaa !9
  %26 = getelementptr inbounds %struct.rtx_def* %25, i64 0, i32 0
  %bf.load192 = load i32* %26, align 8
  %bf.clear193 = and i32 %bf.load192, 65535
  switch i32 %bf.clear193, label %while.end [
    i32 67, label %if.else265
    i32 68, label %if.else265
    i32 54, label %if.else265
    i32 58, label %if.else265
    i32 55, label %if.else265
    i32 63, label %land.rhs
  ]

land.rhs:                                         ; preds = %if.then184, %while.body
  %bf.load24420 = phi i32 [ %bf.load232, %while.body ], [ %bf.load192, %if.then184 ]
  %src.08 = phi %struct.rtx_def* [ %28, %while.body ], [ %25, %if.then184 ]
  %arrayidx237 = getelementptr inbounds %struct.rtx_def* %src.08, i64 0, i32 1, i64 1
  %rtuint238 = bitcast %union.rtunion_def* %arrayidx237 to i32*
  %27 = load i32* %rtuint238, align 4, !tbaa !17
  %cmp239 = icmp eq i32 %27, 0
  br i1 %cmp239, label %while.body, label %while.end

while.body:                                       ; preds = %land.rhs
  %arrayidx242 = getelementptr inbounds %struct.rtx_def* %src.08, i64 0, i32 1, i64 0
  %rtx243 = bitcast %union.rtunion_def* %arrayidx242 to %struct.rtx_def**
  %28 = load %struct.rtx_def** %rtx243, align 8, !tbaa !9
  %29 = getelementptr inbounds %struct.rtx_def* %28, i64 0, i32 0
  %bf.load232 = load i32* %29, align 8
  %bf.clear233 = and i32 %bf.load232, 65535
  %cmp234 = icmp eq i32 %bf.clear233, 63
  br i1 %cmp234, label %land.rhs, label %while.end

while.end:                                        ; preds = %land.rhs, %while.body, %if.then184
  %bf.load244 = phi i32 [ %bf.load192, %if.then184 ], [ %bf.load24420, %land.rhs ], [ %bf.load232, %while.body ]
  %src.0.lcssa = phi %struct.rtx_def* [ %25, %if.then184 ], [ %src.08, %land.rhs ], [ %28, %while.body ]
  %bf.lshr245 = lshr i32 %bf.load244, 16
  %bf.clear246 = and i32 %bf.lshr245, 255
  %30 = getelementptr inbounds %struct.rtx_def* %call180, i64 0, i32 0
  %bf.load247 = load i32* %30, align 8
  %bf.lshr248 = lshr i32 %bf.load247, 16
  %bf.clear249 = and i32 %bf.lshr248, 255
  %cmp250 = icmp eq i32 %bf.clear246, %bf.clear249
  br i1 %cmp250, label %if.end260, label %if.then252

if.then252:                                       ; preds = %while.end
  %call259 = tail call %struct.rtx_def* @gen_lowpart(i32 %bf.clear249, %struct.rtx_def* %25) #5
  br label %if.end260

if.end260:                                        ; preds = %while.end, %if.then252
  %src.1 = phi %struct.rtx_def* [ %call259, %if.then252 ], [ %src.0.lcssa, %while.end ]
  %call264 = tail call i32 @validate_change(%struct.rtx_def* %insn, %struct.rtx_def** %rtx191, %struct.rtx_def* %src.1, i32 1) #5
  br label %if.end376

if.else265:                                       ; preds = %if.then184, %if.then184, %if.then184, %if.then184, %if.then184
  %bf.lshr270 = lshr i32 %bf.load192, 16
  %bf.clear271 = and i32 %bf.lshr270, 255
  %cmp272 = icmp eq i32 %bf.clear271, 0
  br i1 %cmp272, label %if.end376, label %land.lhs.true274

land.lhs.true274:                                 ; preds = %if.else265
  %31 = getelementptr inbounds %struct.rtx_def* %call180, i64 0, i32 0
  %bf.load281 = load i32* %31, align 8
  %bf.lshr282 = lshr i32 %bf.load281, 16
  %bf.clear283 = and i32 %bf.lshr282, 255
  %cmp284 = icmp eq i32 %bf.clear271, %bf.clear283
  br i1 %cmp284, label %if.end376, label %if.then286

if.then286:                                       ; preds = %land.lhs.true274
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8]* @.str, i64 0, i64 0), i32 2815, i8* getelementptr inbounds ([19 x i8]* @__FUNCTION__.optimize_bit_field, i64 0, i64 0)) #8
  unreachable

if.else289:                                       ; preds = %if.end179
  %32 = load %struct.rtx_def** %rtx, align 8, !tbaa !9
  %33 = load i32* @target_flags, align 4, !tbaa !17
  %and330 = lshr i32 %33, 23
  %34 = and i32 %and330, 4
  %35 = add i32 %34, 4
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %32, i64 0, i32 0
  %bf.load294.pre = load i32* %.phi.trans.insert, align 8
  br label %while.cond293

while.cond293:                                    ; preds = %land.rhs320, %if.else289
  %bf.load294 = phi i32 [ %bf.load294.pre, %if.else289 ], [ %bf.load313, %land.rhs320 ]
  %dest.0 = phi %struct.rtx_def* [ %32, %if.else289 ], [ %39, %land.rhs320 ]
  %36 = getelementptr inbounds %struct.rtx_def* %dest.0, i64 0, i32 0
  %bf.clear295 = and i32 %bf.load294, 65535
  %cmp296 = icmp eq i32 %bf.clear295, 63
  br i1 %cmp296, label %land.lhs.true298, label %while.end340

land.lhs.true298:                                 ; preds = %while.cond293
  %arrayidx300 = getelementptr inbounds %struct.rtx_def* %dest.0, i64 0, i32 1, i64 1
  %rtuint301 = bitcast %union.rtunion_def* %arrayidx300 to i32*
  %37 = load i32* %rtuint301, align 4, !tbaa !17
  %cmp302 = icmp eq i32 %37, 0
  br i1 %cmp302, label %land.lhs.true304, label %while.end340

land.lhs.true304:                                 ; preds = %land.lhs.true298
  %bf.lshr306 = lshr i32 %bf.load294, 16
  %bf.clear307 = and i32 %bf.lshr306, 255
  %idxprom3081 = zext i32 %bf.clear307 to i64
  %arrayidx309 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom3081
  %38 = load i32* %arrayidx309, align 4, !tbaa !22
  %arrayidx311 = getelementptr inbounds %struct.rtx_def* %dest.0, i64 0, i32 1, i64 0
  %rtx312 = bitcast %union.rtunion_def* %arrayidx311 to %struct.rtx_def**
  %39 = load %struct.rtx_def** %rtx312, align 8, !tbaa !9
  %40 = getelementptr inbounds %struct.rtx_def* %39, i64 0, i32 0
  %bf.load313 = load i32* %40, align 8
  %bf.lshr314 = lshr i32 %bf.load313, 16
  %bf.clear315 = and i32 %bf.lshr314, 255
  %idxprom3162 = zext i32 %bf.clear315 to i64
  %arrayidx317 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom3162
  %41 = load i32* %arrayidx317, align 4, !tbaa !22
  %cmp318 = icmp eq i32 %38, %41
  br i1 %cmp318, label %land.rhs320, label %while.end340

land.rhs320:                                      ; preds = %land.lhs.true304
  %arrayidx328 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom3162
  %42 = load i8* %arrayidx328, align 1, !tbaa !22
  %conv329 = zext i8 %42 to i32
  %cmp333 = icmp ugt i32 %conv329, %35
  br i1 %cmp333, label %while.end340, label %while.cond293

while.end340:                                     ; preds = %land.rhs320, %while.cond293, %land.lhs.true298, %land.lhs.true304
  %call344 = tail call i32 @validate_change(%struct.rtx_def* %insn, %struct.rtx_def** %rtx, %struct.rtx_def* %dest.0, i32 1) #5
  %bf.load345 = load i32* %36, align 8
  %bf.lshr346 = lshr i32 %bf.load345, 16
  %bf.clear347 = and i32 %bf.lshr346, 255
  %43 = getelementptr inbounds %struct.rtx_def* %call180, i64 0, i32 0
  %bf.load348 = load i32* %43, align 8
  %bf.lshr349 = lshr i32 %bf.load348, 16
  %bf.clear350 = and i32 %bf.lshr349, 255
  %cmp351 = icmp eq i32 %bf.clear347, %bf.clear350
  br i1 %cmp351, label %if.then353, label %if.else358

if.then353:                                       ; preds = %while.end340
  %arrayidx355 = getelementptr inbounds %struct.rtx_def* %body, i64 0, i32 1, i64 1
  %rtx356 = bitcast %union.rtunion_def* %arrayidx355 to %struct.rtx_def**
  %call357 = tail call i32 @validate_change(%struct.rtx_def* %insn, %struct.rtx_def** %rtx356, %struct.rtx_def* %call180, i32 1) #5
  br label %if.end376

if.else358:                                       ; preds = %while.end340
  %call362 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear347) #5
  tail call void @start_sequence() #5
  %arrayidx364 = getelementptr inbounds %struct.rtx_def* %body, i64 0, i32 1, i64 1
  %rtx365 = bitcast %union.rtunion_def* %arrayidx364 to %struct.rtx_def**
  %44 = load %struct.rtx_def** %rtx365, align 8, !tbaa !9
  %45 = getelementptr inbounds %struct.rtx_def* %44, i64 0, i32 0
  %bf.load366 = load i32* %45, align 8
  %bf.clear367 = and i32 %bf.load366, 65535
  %cmp368 = icmp eq i32 %bf.clear367, 133
  %conv369 = zext i1 %cmp368 to i32
  tail call void @convert_move(%struct.rtx_def* %call362, %struct.rtx_def* %call180, i32 %conv369) #5
  %call370 = tail call %struct.rtx_def* @get_insns() #5
  tail call void @end_sequence() #5
  %call374 = tail call i32 @validate_change(%struct.rtx_def* %insn, %struct.rtx_def** %rtx365, %struct.rtx_def* %call362, i32 1) #5
  br label %if.end376

if.end376:                                        ; preds = %land.lhs.true274, %if.else265, %if.then353, %if.else358, %if.end260
  %seq.0 = phi %struct.rtx_def* [ null, %land.lhs.true274 ], [ null, %if.else265 ], [ null, %if.end260 ], [ null, %if.then353 ], [ %call370, %if.else358 ]
  %call377 = tail call i32 @apply_change_group() #5
  %tobool378 = icmp ne i32 %call377, 0
  %tobool380 = icmp ne %struct.rtx_def* %seq.0, null
  %or.cond389 = and i1 %tobool378, %tobool380
  br i1 %or.cond389, label %if.then381, label %if.end385

if.then381:                                       ; preds = %if.end376
  %call382 = tail call %struct.rtx_def* @emit_insns_before(%struct.rtx_def* %seq.0, %struct.rtx_def* %insn) #5
  br label %if.end385

if.end385:                                        ; preds = %if.then48, %land.lhs.true86, %land.lhs.true148, %land.lhs.true142, %if.end141, %land.lhs.true25, %if.then381, %if.end376, %land.lhs.true33, %land.lhs.true, %if.end
  ret void
}

declare i32 @mode_for_size(i32, i32, i32) #2

declare i32 @apply_change_group() #2

attributes #0 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { nounwind readnone uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readonly "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind }

!llvm.ident = !{!0}

!0 = metadata !{metadata !"clang version 3.5 (trunk)"}
!1 = metadata !{metadata !2, metadata !3, i64 48}
!2 = metadata !{metadata !"function", metadata !3, i64 0, metadata !3, i64 8, metadata !3, i64 16, metadata !3, i64 24, metadata !3, i64 32, metadata !3, i64 40, metadata !3, i64 48, metadata !3, i64 56, metadata !6, i64 64, metadata !6, i64 68, metadata !6, i64 72, metadata !6, i64 76, metadata !3, i64 80, metadata !7, i64 88, metadata !3, i64 120, metadata !3, i64 128, metadata !3, i64 136, metadata !3, i64 144, metadata !6, i64 152, metadata !3, i64 160, metadata !3, i64 168, metadata !3, i64 176, metadata !3, i64 184, metadata !3, i64 192, metadata !3, i64 200, metadata !3, i64 208, metadata !3, i64 216, metadata !3, i64 224, metadata !3, i64 232, metadata !3, i64 240, metadata !3, i64 248, metadata !3, i64 256, metadata !8, i64 264, metadata !3, i64 272, metadata !3, i64 280, metadata !3, i64 288, metadata !3, i64 296, metadata !6, i64 304, metadata !3, i64 312, metadata !3, i64 320, metadata !6, i64 328, metadata !6, i64 332, metadata !6, i64 336, metadata !3, i64 344, metadata !6, i64 352, metadata !6, i64 356, metadata !3, i64 360, metadata !3, i64 368, metadata !3, i64 376, metadata !6, i64 384, metadata !6, i64 388, metadata !3, i64 392, metadata !6, i64 400, metadata !6, i64 404, metadata !3, i64 408, metadata !3, i64 416, metadata !6, i64 424, metadata !6, i64 424, metadata !6, i64 424, metadata !6, i64 424, metadata !6, i64 424, metadata !6, i64 424, metadata !6, i64 424, metadata !6, i64 424, metadata !6, i64 425, metadata !6, i64 425, metadata !6, i64 425, metadata !6, i64 425, metadata !6, i64 425, metadata !6, i64 425, metadata !6, i64 425, metadata !6, i64 425, metadata !6, i64 426, metadata !6, i64 426, metadata !6, i64 426, metadata !6, i64 426, metadata !6, i64 426, metadata !6, i64 426, metadata !6, i64 426, metadata !6, i64 426}
!3 = metadata !{metadata !"any pointer", metadata !4, i64 0}
!4 = metadata !{metadata !"omnipotent char", metadata !5, i64 0}
!5 = metadata !{metadata !"Simple C/C++ TBAA"}
!6 = metadata !{metadata !"int", metadata !4, i64 0}
!7 = metadata !{metadata !"ix86_args", metadata !6, i64 0, metadata !6, i64 4, metadata !6, i64 8, metadata !6, i64 12, metadata !6, i64 16, metadata !6, i64 20, metadata !6, i64 24}
!8 = metadata !{metadata !"long long", metadata !4, i64 0}
!9 = metadata !{metadata !3, metadata !3, i64 0}
!10 = metadata !{metadata !2, metadata !3, i64 56}
!11 = metadata !{metadata !2, metadata !3, i64 344}
!12 = metadata !{metadata !13, metadata !3, i64 16}
!13 = metadata !{metadata !"var_refs_queue", metadata !3, i64 0, metadata !4, i64 8, metadata !6, i64 12, metadata !3, i64 16}
!14 = metadata !{metadata !13, metadata !3, i64 0}
!15 = metadata !{metadata !13, metadata !4, i64 8}
!16 = metadata !{metadata !13, metadata !6, i64 12}
!17 = metadata !{metadata !6, metadata !6, i64 0}
!18 = metadata !{metadata !2, metadata !3, i64 24}
!19 = metadata !{metadata !20, metadata !3, i64 32}
!20 = metadata !{metadata !"emit_status", metadata !6, i64 0, metadata !6, i64 4, metadata !3, i64 8, metadata !3, i64 16, metadata !3, i64 24, metadata !3, i64 32, metadata !6, i64 40, metadata !6, i64 44, metadata !3, i64 48, metadata !6, i64 56, metadata !3, i64 64, metadata !3, i64 72, metadata !3, i64 80}
!21 = metadata !{metadata !2, metadata !3, i64 224}
!22 = metadata !{metadata !4, metadata !4, i64 0}
!23 = metadata !{metadata !24, metadata !3, i64 0}
!24 = metadata !{metadata !"sequence_stack", metadata !3, i64 0, metadata !3, i64 8, metadata !3, i64 16, metadata !3, i64 24}
!25 = metadata !{metadata !24, metadata !3, i64 8}
!26 = metadata !{metadata !24, metadata !3, i64 24}
!27 = metadata !{metadata !28, metadata !3, i64 32}
!28 = metadata !{metadata !"tree_list", metadata !29, i64 0, metadata !3, i64 24, metadata !3, i64 32}
!29 = metadata !{metadata !"tree_common", metadata !3, i64 0, metadata !3, i64 8, metadata !4, i64 16, metadata !6, i64 17, metadata !6, i64 17, metadata !6, i64 17, metadata !6, i64 17, metadata !6, i64 17, metadata !6, i64 17, metadata !6, i64 17, metadata !6, i64 17, metadata !6, i64 18, metadata !6, i64 18, metadata !6, i64 18, metadata !6, i64 18, metadata !6, i64 18, metadata !6, i64 18, metadata !6, i64 18, metadata !6, i64 18, metadata !6, i64 19, metadata !6, i64 19, metadata !6, i64 19, metadata !6, i64 19, metadata !6, i64 19, metadata !6, i64 19, metadata !6, i64 19, metadata !6, i64 19}
!30 = metadata !{metadata !29, metadata !3, i64 0}
!31 = metadata !{metadata !2, metadata !3, i64 312}
!32 = metadata !{metadata !2, metadata !3, i64 80}
!33 = metadata !{metadata !2, metadata !3, i64 416}
!34 = metadata !{metadata !2, metadata !8, i64 264}
!35 = metadata !{metadata !2, metadata !6, i64 400}
!36 = metadata !{metadata !2, metadata !3, i64 216}
!37 = metadata !{metadata !38, metadata !6, i64 24}
!38 = metadata !{metadata !"temp_slot", metadata !3, i64 0, metadata !3, i64 8, metadata !3, i64 16, metadata !6, i64 24, metadata !8, i64 32, metadata !3, i64 40, metadata !3, i64 48, metadata !4, i64 56, metadata !4, i64 57, metadata !6, i64 60, metadata !6, i64 64, metadata !8, i64 72, metadata !8, i64 80}
!39 = metadata !{metadata !38, metadata !8, i64 32}
!40 = metadata !{metadata !38, metadata !3, i64 8}
!41 = metadata !{metadata !38, metadata !4, i64 56}
!42 = metadata !{metadata !38, metadata !3, i64 40}
!43 = metadata !{metadata !38, metadata !4, i64 57}
!44 = metadata !{metadata !38, metadata !8, i64 72}
!45 = metadata !{metadata !38, metadata !8, i64 80}
!46 = metadata !{metadata !38, metadata !3, i64 16}
!47 = metadata !{metadata !38, metadata !3, i64 48}
!48 = metadata !{metadata !2, metadata !3, i64 320}
!49 = metadata !{metadata !38, metadata !3, i64 0}
!50 = metadata !{metadata !20, metadata !3, i64 24}
!51 = metadata !{metadata !2, metadata !6, i64 336}
!52 = metadata !{metadata !38, metadata !6, i64 60}
!53 = metadata !{metadata !38, metadata !6, i64 64}
!54 = metadata !{metadata !2, metadata !6, i64 332}
!55 = metadata !{metadata !2, metadata !6, i64 328}
!56 = metadata !{metadata !29, metadata !3, i64 8}
!57 = metadata !{metadata !58, metadata !3, i64 112}
!58 = metadata !{metadata !"tree_type", metadata !29, i64 0, metadata !3, i64 24, metadata !3, i64 32, metadata !3, i64 40, metadata !3, i64 48, metadata !6, i64 56, metadata !6, i64 60, metadata !4, i64 61, metadata !6, i64 62, metadata !6, i64 62, metadata !6, i64 62, metadata !6, i64 62, metadata !6, i64 62, metadata !6, i64 62, metadata !6, i64 62, metadata !6, i64 63, metadata !6, i64 63, metadata !6, i64 63, metadata !6, i64 63, metadata !6, i64 63, metadata !6, i64 63, metadata !6, i64 63, metadata !6, i64 63, metadata !6, i64 64, metadata !3, i64 72, metadata !3, i64 80, metadata !4, i64 88, metadata !3, i64 96, metadata !3, i64 104, metadata !3, i64 112, metadata !3, i64 120, metadata !3, i64 128, metadata !3, i64 136, metadata !3, i64 144, metadata !8, i64 152, metadata !3, i64 160}
!59 = metadata !{metadata !58, metadata !3, i64 40}
!60 = metadata !{metadata !8, metadata !8, i64 0}
!61 = metadata !{metadata !62, metadata !3, i64 104}
!62 = metadata !{metadata !"tree_decl", metadata !29, i64 0, metadata !3, i64 24, metadata !6, i64 32, metadata !6, i64 36, metadata !3, i64 40, metadata !4, i64 48, metadata !6, i64 49, metadata !6, i64 49, metadata !6, i64 49, metadata !6, i64 49, metadata !6, i64 49, metadata !6, i64 49, metadata !6, i64 49, metadata !6, i64 49, metadata !6, i64 50, metadata !6, i64 50, metadata !6, i64 50, metadata !6, i64 50, metadata !6, i64 50, metadata !6, i64 50, metadata !6, i64 50, metadata !6, i64 50, metadata !6, i64 51, metadata !6, i64 51, metadata !6, i64 51, metadata !6, i64 51, metadata !6, i64 51, metadata !4, i64 51, metadata !6, i64 51, metadata !6, i64 52, metadata !6, i64 52, metadata !6, i64 52, metadata !6, i64 52, metadata !6, i64 52, metadata !6, i64 52, metadata !6, i64 52, metadata !6, i64 53, metadata !6, i64 53, metadata !6, i64 53, metadata !6, i64 53, metadata !6, i64 53, metadata !4, i64 56, metadata !3, i64 64, metadata !3, i64 72, metadata !3, i64 80, metadata !3, i64 88, metadata !3, i64 96, metadata !3, i64 104, metadata !3, i64 112, metadata !3, i64 120, metadata !3, i64 128, metadata !3, i64 136, metadata !3, i64 144, metadata !3, i64 152, metadata !4, i64 160, metadata !3, i64 168, metadata !3, i64 176, metadata !3, i64 184, metadata !8, i64 192, metadata !3, i64 200}
!63 = metadata !{metadata !62, metadata !3, i64 144}
!64 = metadata !{metadata !2, metadata !6, i64 304}
!65 = metadata !{metadata !66, metadata !3, i64 0}
!66 = metadata !{metadata !"insns_for_mem_walk_info", metadata !3, i64 0, metadata !3, i64 8, metadata !6, i64 16}
!67 = metadata !{metadata !66, metadata !6, i64 16}
!68 = metadata !{metadata !66, metadata !3, i64 8}
!69 = metadata !{metadata !70, metadata !3, i64 24}
!70 = metadata !{metadata !"insns_for_mem_entry", metadata !71, i64 0, metadata !3, i64 24}
!71 = metadata !{metadata !"hash_entry", metadata !3, i64 0, metadata !3, i64 8, metadata !72, i64 16}
!72 = metadata !{metadata !"long", metadata !4, i64 0}
!73 = metadata !{metadata !74, metadata !74, i64 0}
!74 = metadata !{metadata !"short", metadata !4, i64 0}
!75 = metadata !{metadata !76, metadata !6, i64 0}
!76 = metadata !{metadata !"rtvec_def", metadata !6, i64 0, metadata !4, i64 8}
!77 = metadata !{metadata !2, metadata !6, i64 76}
!78 = metadata !{metadata !2, metadata !3, i64 296}
!79 = metadata !{metadata !62, metadata !3, i64 88}
!80 = metadata !{metadata !62, metadata !3, i64 72}
!81 = metadata !{metadata !82, metadata !3, i64 32}
!82 = metadata !{metadata !"tree_identifier", metadata !29, i64 0, metadata !83, i64 24}
!83 = metadata !{metadata !"ht_identifier", metadata !6, i64 0, metadata !3, i64 8}
!84 = metadata !{metadata !2, metadata !3, i64 128}
!85 = metadata !{metadata !62, metadata !3, i64 96}
!86 = metadata !{metadata !2, metadata !6, i64 72}
!87 = metadata !{i64 0, i64 4, metadata !17, i64 4, i64 4, metadata !17, i64 8, i64 4, metadata !17, i64 12, i64 4, metadata !17, i64 16, i64 4, metadata !17, i64 20, i64 4, metadata !17, i64 24, i64 4, metadata !17}
!88 = metadata !{metadata !58, metadata !3, i64 32}
!89 = metadata !{metadata !90, metadata !3, i64 8}
!90 = metadata !{metadata !"args_size", metadata !8, i64 0, metadata !3, i64 8}
!91 = metadata !{metadata !90, metadata !8, i64 0}
!92 = metadata !{metadata !20, metadata !3, i64 80}
!93 = metadata !{metadata !58, metadata !6, i64 64}
!94 = metadata !{metadata !20, metadata !3, i64 72}
!95 = metadata !{metadata !2, metadata !6, i64 68}
!96 = metadata !{metadata !2, metadata !6, i64 64}
!97 = metadata !{metadata !2, metadata !3, i64 120}
!98 = metadata !{i64 0, i64 8, metadata !60, i64 8, i64 8, metadata !9}
!99 = metadata !{metadata !100, metadata !8, i64 32}
!100 = metadata !{metadata !"tree_int_cst", metadata !29, i64 0, metadata !3, i64 24, metadata !101, i64 32}
!101 = metadata !{metadata !"", metadata !8, i64 0, metadata !8, i64 8}
!102 = metadata !{metadata !62, metadata !3, i64 112}
!103 = metadata !{metadata !2, metadata !3, i64 248}
!104 = metadata !{metadata !2, metadata !3, i64 280}
!105 = metadata !{metadata !106, metadata !3, i64 40}
!106 = metadata !{metadata !"tree_block", metadata !29, i64 0, metadata !6, i64 24, metadata !6, i64 24, metadata !6, i64 24, metadata !3, i64 32, metadata !3, i64 40, metadata !3, i64 48, metadata !3, i64 56, metadata !3, i64 64, metadata !3, i64 72}
!107 = metadata !{metadata !106, metadata !3, i64 64}
!108 = metadata !{metadata !106, metadata !3, i64 72}
!109 = metadata !{metadata !106, metadata !3, i64 48}
!110 = metadata !{metadata !111, metadata !72, i64 8}
!111 = metadata !{metadata !"varray_head_tag", metadata !72, i64 0, metadata !72, i64 8, metadata !72, i64 16, metadata !3, i64 24, metadata !4, i64 32}
!112 = metadata !{metadata !111, metadata !72, i64 0}
!113 = metadata !{metadata !2, metadata !3, i64 168}
!114 = metadata !{metadata !2, metadata !3, i64 184}
!115 = metadata !{metadata !2, metadata !3, i64 160}
!116 = metadata !{metadata !2, metadata !3, i64 176}
!117 = metadata !{metadata !2, metadata !6, i64 152}
!118 = metadata !{metadata !2, metadata !6, i64 352}
!119 = metadata !{metadata !2, metadata !3, i64 368}
!120 = metadata !{metadata !2, metadata !3, i64 360}
!121 = metadata !{metadata !2, metadata !6, i64 404}
!122 = metadata !{metadata !2, metadata !3, i64 136}
!123 = metadata !{metadata !2, metadata !3, i64 232}
!124 = metadata !{metadata !2, metadata !3, i64 208}
!125 = metadata !{metadata !2, metadata !3, i64 16}
!126 = metadata !{metadata !127, metadata !6, i64 4}
!127 = metadata !{metadata !"expr_status", metadata !6, i64 0, metadata !6, i64 4, metadata !6, i64 8, metadata !3, i64 16, metadata !3, i64 24, metadata !3, i64 32, metadata !3, i64 40}
!128 = metadata !{metadata !2, metadata !3, i64 40}
!129 = metadata !{metadata !2, metadata !3, i64 192}
!130 = metadata !{metadata !2, metadata !3, i64 200}
!131 = metadata !{metadata !2, metadata !3, i64 288}
!132 = metadata !{metadata !2, metadata !3, i64 272}
!133 = metadata !{metadata !2, metadata !6, i64 388}
!134 = metadata !{metadata !2, metadata !3, i64 240}
!135 = metadata !{metadata !2, metadata !3, i64 256}
!136 = metadata !{metadata !137, metadata !3, i64 40}
!137 = metadata !{metadata !"basic_block_def", metadata !3, i64 0, metadata !3, i64 8, metadata !3, i64 16, metadata !3, i64 24, metadata !3, i64 32, metadata !3, i64 40, metadata !3, i64 48, metadata !3, i64 56, metadata !3, i64 64, metadata !3, i64 72, metadata !3, i64 80, metadata !6, i64 88, metadata !6, i64 92, metadata !8, i64 96, metadata !6, i64 104, metadata !6, i64 108}
!138 = metadata !{metadata !139, metadata !3, i64 8}
!139 = metadata !{metadata !"edge_def", metadata !3, i64 0, metadata !3, i64 8, metadata !3, i64 16, metadata !3, i64 24, metadata !3, i64 32, metadata !3, i64 40, metadata !6, i64 48, metadata !6, i64 52, metadata !8, i64 56}
!140 = metadata !{metadata !139, metadata !6, i64 48}
!141 = metadata !{metadata !139, metadata !3, i64 16}
!142 = metadata !{metadata !137, metadata !3, i64 0}
!143 = metadata !{metadata !137, metadata !3, i64 32}
!144 = metadata !{metadata !139, metadata !3, i64 0}
!145 = metadata !{metadata !137, metadata !3, i64 8}
!146 = metadata !{metadata !147, metadata !3, i64 0}
!147 = metadata !{metadata !"epi_info", metadata !3, i64 0, metadata !8, i64 8, metadata !3, i64 16, metadata !8, i64 24, metadata !3, i64 32}
!148 = metadata !{metadata !147, metadata !8, i64 8}
!149 = metadata !{metadata !147, metadata !3, i64 32}
!150 = metadata !{metadata !147, metadata !3, i64 16}
!151 = metadata !{metadata !147, metadata !8, i64 24}
!152 = metadata !{metadata !137, metadata !3, i64 64}
!153 = metadata !{metadata !2, metadata !3, i64 0}
!154 = metadata !{metadata !2, metadata !3, i64 8}
!155 = metadata !{metadata !2, metadata !3, i64 32}
!156 = metadata !{metadata !157, metadata !3, i64 8}
!157 = metadata !{metadata !"fixup_replacement", metadata !3, i64 0, metadata !3, i64 8, metadata !3, i64 16}
!158 = metadata !{metadata !157, metadata !3, i64 0}
!159 = metadata !{metadata !157, metadata !3, i64 16}
