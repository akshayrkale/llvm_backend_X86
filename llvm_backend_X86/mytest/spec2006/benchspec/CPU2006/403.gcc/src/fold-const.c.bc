; ModuleID = 'fold-const.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%union.tree_node = type { %struct.tree_decl }
%struct.tree_decl = type { %struct.tree_common, i8*, i32, i32, %union.tree_node*, i48, %union.anon, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %union.anon.1, %union.tree_node*, %union.tree_node*, %union.tree_node*, i64, %struct.lang_decl* }
%struct.tree_common = type { %union.tree_node*, %union.tree_node*, i32 }
%union.anon = type { i64 }
%struct.rtx_def = type { i32, [1 x %union.rtunion_def] }
%union.rtunion_def = type { i64 }
%union.anon.1 = type { %struct.function* }
%struct.function = type opaque
%struct.lang_decl = type opaque
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i32 }
%struct.realvaluetype = type { [3 x i64] }
%struct.tree_type = type { %struct.tree_common, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32, i32, i32, %union.tree_node*, %union.tree_node*, %union.anon.2, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i64, %struct.lang_type* }
%union.anon.2 = type { i8* }
%struct.lang_type = type opaque
%struct.fc_args = type { %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.cb_args = type { i32, %union.tree_node*, %struct.realvaluetype, %struct.realvaluetype, %union.tree_node* }
%struct.rtvec_def = type { i32, [1 x %struct.rtx_def*] }

@target_flags = external global i32
@.str = private unnamed_addr constant [13 x i8] c"fold-const.c\00", align 1
@__FUNCTION__.div_and_round_double = private unnamed_addr constant [21 x i8] c"div_and_round_double\00", align 1
@sizetype_tab = external global [6 x %union.tree_node*]
@size_int_type_wide.size_htab = internal unnamed_addr global %struct.htab* null, align 8
@size_int_type_wide.new_const = internal global %union.tree_node* null, align 8
@__FUNCTION__.size_binop = private unnamed_addr constant [11 x i8] c"size_binop\00", align 1
@global_trees = external global [51 x %union.tree_node*]
@__FUNCTION__.size_diffop = private unnamed_addr constant [12 x i8] c"size_diffop\00", align 1
@pedantic_lvalues = common global i32 0, align 4
@tree_code_type = external global [256 x i8]
@flag_unsafe_math_optimizations = external global i32
@__FUNCTION__.invert_truthvalue = private unnamed_addr constant [18 x i8] c"invert_truthvalue\00", align 1
@mode_bitsize = external constant [59 x i16]
@dconst0 = external global %struct.realvaluetype
@dconst1 = external global %struct.realvaluetype
@optimize = external global i32
@__FUNCTION__.fold = private unnamed_addr constant [5 x i8] c"fold\00", align 1
@integer_types = external global [11 x %union.tree_node*]
@pedantic = external global i32
@word_mode = external global i32
@.str1 = private unnamed_addr constant [50 x i8] c"comparison is always %d due to width of bit-field\00", align 1
@__FUNCTION__.swap_tree_comparison = private unnamed_addr constant [21 x i8] c"swap_tree_comparison\00", align 1
@ix86_branch_cost = external global i32
@.str2 = private unnamed_addr constant [24 x i8] c"comparison is always %d\00", align 1
@.str3 = private unnamed_addr constant [46 x i8] c"`or' of unmatched not-equal tests is always 1\00", align 1
@.str4 = private unnamed_addr constant [52 x i8] c"`and' of mutually exclusive equal-tests is always 0\00", align 1
@__FUNCTION__.range_binop = private unnamed_addr constant [12 x i8] c"range_binop\00", align 1
@tree_code_length = external global [256 x i32]
@__FUNCTION__.make_range = private unnamed_addr constant [11 x i8] c"make_range\00", align 1
@mode_size = external constant [59 x i8]
@__FUNCTION__.const_binop = private unnamed_addr constant [12 x i8] c"const_binop\00", align 1
@__FUNCTION__.invert_tree_comparison = private unnamed_addr constant [23 x i8] c"invert_tree_comparison\00", align 1
@__FUNCTION__.int_const_binop = private unnamed_addr constant [16 x i8] c"int_const_binop\00", align 1

; Function Attrs: nounwind uwtable
define i32 @force_fit_type(%union.tree_node* nocapture %t, i32 %overflow) #0 {
entry:
  %code = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cond = icmp eq i32 %bf.clear, 25
  br i1 %cond, label %if.end7, label %return

if.end7:                                          ; preds = %entry
  %int_cst8 = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 2
  %low9 = bitcast i32* %int_cst8 to i64*
  %0 = load i64* %low9, align 8, !tbaa !1
  %high12 = getelementptr inbounds i32* %int_cst8, i64 2
  %1 = bitcast i32* %high12 to i64*
  %2 = load i64* %1, align 8, !tbaa !10
  %type = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 0, i32 1
  %3 = load %union.tree_node** %type, align 8, !tbaa !11
  %code15 = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 0, i32 2
  %bf.load16 = load i32* %code15, align 8
  %bf.clear17 = and i32 %bf.load16, 255
  switch i32 %bf.clear17, label %if.else27 [
    i32 13, label %if.then26
    i32 15, label %if.then26
  ]

if.then26:                                        ; preds = %if.end7, %if.end7
  %4 = load i32* @target_flags, align 4, !tbaa !12
  %and = lshr i32 %4, 20
  %5 = and i32 %and, 32
  %6 = add i32 %5, 32
  br label %if.end33

if.else27:                                        ; preds = %if.end7
  %type30 = bitcast %union.tree_node* %3 to %struct.tree_type*
  %precision = getelementptr inbounds %struct.tree_type* %type30, i64 0, i32 6
  %bf.load31 = load i32* %precision, align 4
  %bf.clear32 = and i32 %bf.load31, 511
  br label %if.end33

if.end33:                                         ; preds = %if.else27, %if.then26
  %prec.0 = phi i32 [ %6, %if.then26 ], [ %bf.clear32, %if.else27 ]
  %cmp34 = icmp eq i32 %prec.0, 128
  br i1 %cmp34, label %if.end58, label %if.else36

if.else36:                                        ; preds = %if.end33
  %cmp37 = icmp ugt i32 %prec.0, 64
  br i1 %cmp37, label %if.then38, label %if.else43

if.then38:                                        ; preds = %if.else36
  %sub = add i32 %prec.0, -64
  %sh_prom = zext i32 %sub to i64
  %shl = shl i64 -1, %sh_prom
  %neg = xor i64 %shl, -1
  %and42 = and i64 %2, %neg
  store i64 %and42, i64* %1, align 8, !tbaa !10
  br label %if.end58

if.else43:                                        ; preds = %if.else36
  store i64 0, i64* %1, align 8, !tbaa !10
  %cmp47 = icmp ult i32 %prec.0, 64
  br i1 %cmp47, label %if.then48, label %if.end58

if.then48:                                        ; preds = %if.else43
  %sh_prom49 = zext i32 %prec.0 to i64
  %shl50 = shl i64 -1, %sh_prom49
  %neg51 = xor i64 %shl50, -1
  %and55 = and i64 %0, %neg51
  store i64 %and55, i64* %low9, align 8, !tbaa !1
  br label %if.end58

if.end58:                                         ; preds = %if.then38, %if.then48, %if.else43, %if.end33
  %7 = phi i64 [ %and42, %if.then38 ], [ 0, %if.then48 ], [ 0, %if.else43 ], [ %2, %if.end33 ]
  %8 = phi i64 [ %0, %if.then38 ], [ %and55, %if.then48 ], [ %0, %if.else43 ], [ %0, %if.end33 ]
  %bf.load62 = load i32* %code15, align 8
  %bf.clear63 = and i32 %bf.load62, 8192
  %tobool64 = icmp eq i32 %bf.clear63, 0
  br i1 %tobool64, label %if.end81, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end58
  %bf.clear70 = and i32 %bf.load62, 255
  %cmp71 = icmp eq i32 %bf.clear70, 6
  br i1 %cmp71, label %land.lhs.true72, label %return

land.lhs.true72:                                  ; preds = %land.lhs.true
  %type75 = bitcast %union.tree_node* %3 to %struct.tree_type*
  %no_force_blk_flag = getelementptr inbounds %struct.tree_type* %type75, i64 0, i32 6
  %bf.load76 = load i32* %no_force_blk_flag, align 4
  %bf.clear78 = and i32 %bf.load76, 131072
  %tobool79 = icmp eq i32 %bf.clear78, 0
  br i1 %tobool79, label %return, label %if.end81

if.end81:                                         ; preds = %land.lhs.true72, %if.end58
  br i1 %cmp34, label %if.end125, label %land.lhs.true83

land.lhs.true83:                                  ; preds = %if.end81
  %cmp84 = icmp ugt i32 %prec.0, 64
  br i1 %cmp84, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true83
  %sub89 = add i32 %prec.0, -65
  %sh_prom90 = zext i32 %sub89 to i64
  %shl91 = shl i64 1, %sh_prom90
  %and92 = and i64 %7, %shl91
  %cmp93 = icmp eq i64 %and92, 0
  br i1 %cmp93, label %if.end125, label %if.then104

cond.false:                                       ; preds = %land.lhs.true83
  %sub97 = add i32 %prec.0, -1
  %sh_prom98 = zext i32 %sub97 to i64
  %shl99 = shl i64 1, %sh_prom98
  %and100 = and i64 %8, %shl99
  %cmp101 = icmp eq i64 %and100, 0
  br i1 %cmp101, label %if.end125, label %if.else111

if.then104:                                       ; preds = %cond.true
  %sub105 = add i32 %prec.0, -64
  %sh_prom106 = zext i32 %sub105 to i64
  %shl107 = shl i64 -1, %sh_prom106
  %or = or i64 %7, %shl107
  store i64 %or, i64* %1, align 8, !tbaa !10
  br label %if.end125

if.else111:                                       ; preds = %cond.false
  store i64 -1, i64* %1, align 8, !tbaa !10
  %cmp115 = icmp ult i32 %prec.0, 64
  br i1 %cmp115, label %if.then116, label %if.end125

if.then116:                                       ; preds = %if.else111
  %sh_prom117 = zext i32 %prec.0 to i64
  %shl118 = shl i64 -1, %sh_prom117
  %or122 = or i64 %8, %shl118
  store i64 %or122, i64* %low9, align 8, !tbaa !1
  br label %if.end125

if.end125:                                        ; preds = %cond.true, %cond.false, %if.end81, %if.then104, %if.then116, %if.else111
  %9 = phi i64 [ %7, %cond.true ], [ %7, %cond.false ], [ %7, %if.end81 ], [ %or, %if.then104 ], [ -1, %if.then116 ], [ -1, %if.else111 ]
  %10 = phi i64 [ %8, %cond.true ], [ %8, %cond.false ], [ %8, %if.end81 ], [ %8, %if.then104 ], [ %or122, %if.then116 ], [ %8, %if.else111 ]
  %conv = sext i32 %overflow to i64
  %xor = xor i64 %10, %0
  %or129 = or i64 %xor, %conv
  %xor133 = xor i64 %9, %2
  %or134 = or i64 %or129, %xor133
  %cmp135 = icmp ne i64 %or134, 0
  %conv136 = zext i1 %cmp135 to i32
  br label %return

return:                                           ; preds = %entry, %land.lhs.true, %land.lhs.true72, %if.end125
  %retval.0 = phi i32 [ %conv136, %if.end125 ], [ %overflow, %entry ], [ %overflow, %land.lhs.true72 ], [ %overflow, %land.lhs.true ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @add_double(i64 %l1, i64 %h1, i64 %l2, i64 %h2, i64* nocapture %lv, i64* nocapture %hv) #0 {
entry:
  %uadd = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %l1, i64 %l2)
  %0 = extractvalue { i64, i1 } %uadd, 0
  %add1 = add nsw i64 %h2, %h1
  %cmp = extractvalue { i64, i1 } %uadd, 1
  %conv2 = zext i1 %cmp to i64
  %add3 = add nsw i64 %add1, %conv2
  store i64 %0, i64* %lv, align 8, !tbaa !13
  store i64 %add3, i64* %hv, align 8, !tbaa !13
  %xor = xor i64 %h1, -9223372036854775808
  %neg = xor i64 %xor, %h2
  %xor4 = xor i64 %add3, %h1
  %and = and i64 %xor4, %neg
  %and.lobit = lshr i64 %and, 63
  %1 = trunc i64 %and.lobit to i32
  ret i32 %1
}

; Function Attrs: nounwind uwtable
define i32 @neg_double(i64 %l1, i64 %h1, i64* nocapture %lv, i64* nocapture %hv) #0 {
entry:
  %cmp = icmp eq i64 %l1, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store i64 0, i64* %lv, align 8, !tbaa !13
  %sub = sub nsw i64 0, %h1
  store i64 %sub, i64* %hv, align 8, !tbaa !13
  %and = and i64 %sub, %h1
  %and.lobit = lshr i64 %and, 63
  %0 = trunc i64 %and.lobit to i32
  br label %return

if.else:                                          ; preds = %entry
  %sub2 = sub i64 0, %l1
  store i64 %sub2, i64* %lv, align 8, !tbaa !13
  %neg = xor i64 %h1, -1
  store i64 %neg, i64* %hv, align 8, !tbaa !13
  br label %return

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi i32 [ %0, %if.then ], [ 0, %if.else ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @mul_double(i64 %l1, i64 %h1, i64 %l2, i64 %h2, i64* nocapture %lv, i64* nocapture %hv) #0 {
entry:
  %arg1 = alloca [4 x i64], align 16
  %prod = alloca [8 x i64], align 16
  %0 = bitcast [8 x i64]* %prod to i8*
  call void @llvm.lifetime.start(i64 64, i8* %0) #1
  %arraydecay = getelementptr inbounds [4 x i64]* %arg1, i64 0, i64 0
  %and.i = and i64 %l1, 4294967295
  store i64 %and.i, i64* %arraydecay, align 16, !tbaa !13
  %shr.i = lshr i64 %l1, 32
  %arrayidx1.i = getelementptr inbounds [4 x i64]* %arg1, i64 0, i64 1
  store i64 %shr.i, i64* %arrayidx1.i, align 8, !tbaa !13
  %and2.i = and i64 %h1, 4294967295
  %arrayidx3.i = getelementptr inbounds [4 x i64]* %arg1, i64 0, i64 2
  store i64 %and2.i, i64* %arrayidx3.i, align 16, !tbaa !13
  %shr4.i = lshr i64 %h1, 32
  %arrayidx5.i = getelementptr inbounds [4 x i64]* %arg1, i64 0, i64 3
  store i64 %shr4.i, i64* %arrayidx5.i, align 8, !tbaa !13
  %and.i85 = and i64 %l2, 4294967295
  %shr.i86 = lshr i64 %l2, 32
  %and2.i88 = and i64 %h2, 4294967295
  %shr4.i90 = lshr i64 %h2, 32
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 64, i32 16, i1 false)
  br label %for.cond3.preheader

for.cond3.preheader:                              ; preds = %for.cond3.preheader.for.cond3.preheader_crit_edge, %entry
  %1 = phi i64 [ 0, %entry ], [ %.pre111, %for.cond3.preheader.for.cond3.preheader_crit_edge ]
  %2 = phi i64 [ %and.i, %entry ], [ %.pre, %for.cond3.preheader.for.cond3.preheader_crit_edge ]
  %indvars.iv = phi i64 [ 0, %entry ], [ %3, %for.cond3.preheader.for.cond3.preheader_crit_edge ]
  %mul = mul nsw i64 %and.i85, %2
  %arrayidx10 = getelementptr inbounds [8 x i64]* %prod, i64 0, i64 %indvars.iv
  %add11 = add i64 %mul, %1
  %and = and i64 %add11, 4294967295
  store i64 %and, i64* %arrayidx10, align 8, !tbaa !13
  %shr = lshr i64 %add11, 32
  %3 = add nsw i64 %indvars.iv, 1
  %mul.1 = mul nsw i64 %shr.i86, %2
  %add8.1 = add i64 %mul.1, %shr
  %arrayidx10.1 = getelementptr inbounds [8 x i64]* %prod, i64 0, i64 %3
  %4 = load i64* %arrayidx10.1, align 8, !tbaa !13
  %add11.1 = add i64 %add8.1, %4
  %and.1 = and i64 %add11.1, 4294967295
  store i64 %and.1, i64* %arrayidx10.1, align 8, !tbaa !13
  %shr.1 = lshr i64 %add11.1, 32
  %5 = add nsw i64 %indvars.iv, 2
  %mul.2 = mul nsw i64 %and2.i88, %2
  %add8.2 = add i64 %mul.2, %shr.1
  %arrayidx10.2 = getelementptr inbounds [8 x i64]* %prod, i64 0, i64 %5
  %6 = load i64* %arrayidx10.2, align 8, !tbaa !13
  %add11.2 = add i64 %add8.2, %6
  %and.2 = and i64 %add11.2, 4294967295
  store i64 %and.2, i64* %arrayidx10.2, align 8, !tbaa !13
  %shr.2 = lshr i64 %add11.2, 32
  %7 = add nsw i64 %indvars.iv, 3
  %mul.3 = mul nsw i64 %shr4.i90, %2
  %add8.3 = add i64 %mul.3, %shr.2
  %arrayidx10.3 = getelementptr inbounds [8 x i64]* %prod, i64 0, i64 %7
  %8 = load i64* %arrayidx10.3, align 8, !tbaa !13
  %add11.3 = add i64 %add8.3, %8
  %and.3 = and i64 %add11.3, 4294967295
  store i64 %and.3, i64* %arrayidx10.3, align 8, !tbaa !13
  %shr.3 = lshr i64 %add11.3, 32
  %9 = add nsw i64 %indvars.iv, 4
  %arrayidx16 = getelementptr inbounds [8 x i64]* %prod, i64 0, i64 %9
  store i64 %shr.3, i64* %arrayidx16, align 8, !tbaa !13
  %exitcond = icmp eq i64 %3, 4
  br i1 %exitcond, label %for.end19, label %for.cond3.preheader.for.cond3.preheader_crit_edge

for.cond3.preheader.for.cond3.preheader_crit_edge: ; preds = %for.cond3.preheader
  %arrayidx.phi.trans.insert = getelementptr inbounds [4 x i64]* %arg1, i64 0, i64 %3
  %.pre = load i64* %arrayidx.phi.trans.insert, align 8, !tbaa !13
  %.pre111 = load i64* %arrayidx10.1, align 8, !tbaa !13
  br label %for.cond3.preheader

for.end19:                                        ; preds = %for.cond3.preheader
  %arraydecay2 = getelementptr inbounds [8 x i64]* %prod, i64 0, i64 0
  %10 = load i64* %arraydecay2, align 16, !tbaa !13
  %arrayidx1.i78 = getelementptr inbounds [8 x i64]* %prod, i64 0, i64 1
  %11 = load i64* %arrayidx1.i78, align 8, !tbaa !13
  %mul.i79 = shl i64 %11, 32
  %add.i80 = add i64 %mul.i79, %10
  store i64 %add.i80, i64* %lv, align 8, !tbaa !13
  %arrayidx2.i81 = getelementptr inbounds [8 x i64]* %prod, i64 0, i64 2
  %12 = load i64* %arrayidx2.i81, align 16, !tbaa !13
  %arrayidx3.i82 = getelementptr inbounds [8 x i64]* %prod, i64 0, i64 3
  %13 = load i64* %arrayidx3.i82, align 8, !tbaa !13
  %mul4.i83 = shl i64 %13, 32
  %add5.i84 = add i64 %mul4.i83, %12
  store i64 %add5.i84, i64* %hv, align 8, !tbaa !13
  %add.ptr = getelementptr inbounds [8 x i64]* %prod, i64 0, i64 4
  %14 = load i64* %add.ptr, align 16, !tbaa !13
  %arrayidx1.i76 = getelementptr inbounds [8 x i64]* %prod, i64 0, i64 5
  %15 = load i64* %arrayidx1.i76, align 8, !tbaa !13
  %mul.i = shl i64 %15, 32
  %add.i = add i64 %mul.i, %14
  %arrayidx2.i = getelementptr inbounds [8 x i64]* %prod, i64 0, i64 6
  %16 = load i64* %arrayidx2.i, align 16, !tbaa !13
  %arrayidx3.i77 = getelementptr inbounds [8 x i64]* %prod, i64 0, i64 7
  %17 = load i64* %arrayidx3.i77, align 8, !tbaa !13
  %mul4.i = shl i64 %17, 32
  %add5.i = add i64 %mul4.i, %16
  %cmp22 = icmp slt i64 %h1, 0
  br i1 %cmp22, label %if.then, label %if.end

if.then:                                          ; preds = %for.end19
  %cmp.i66 = icmp eq i64 %l2, 0
  br i1 %cmp.i66, label %if.then.i70, label %if.else.i73

if.then.i70:                                      ; preds = %if.then
  %sub.i67 = sub nsw i64 0, %h2
  br label %neg_double.exit75

if.else.i73:                                      ; preds = %if.then
  %sub2.i71 = sub i64 0, %l2
  %neg.i72 = xor i64 %h2, -1
  br label %neg_double.exit75

neg_double.exit75:                                ; preds = %if.then.i70, %if.else.i73
  %neglow.0.load102 = phi i64 [ 0, %if.then.i70 ], [ %sub2.i71, %if.else.i73 ]
  %neghigh.0.load98 = phi i64 [ %sub.i67, %if.then.i70 ], [ %neg.i72, %if.else.i73 ]
  %uadd.i56 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %neglow.0.load102, i64 %add.i) #1
  %18 = extractvalue { i64, i1 } %uadd.i56, 0
  %add1.i57 = add nsw i64 %neghigh.0.load98, %add5.i
  %cmp.i58 = extractvalue { i64, i1 } %uadd.i56, 1
  %conv2.i59 = zext i1 %cmp.i58 to i64
  %add3.i60 = add nsw i64 %add1.i57, %conv2.i59
  br label %if.end

if.end:                                           ; preds = %neg_double.exit75, %for.end19
  %toplow.0.load104 = phi i64 [ %18, %neg_double.exit75 ], [ %add.i, %for.end19 ]
  %tophigh.0.load100 = phi i64 [ %add3.i60, %neg_double.exit75 ], [ %add5.i, %for.end19 ]
  %cmp24 = icmp slt i64 %h2, 0
  br i1 %cmp24, label %if.then25, label %if.end28

if.then25:                                        ; preds = %if.end
  %cmp.i52 = icmp eq i64 %l1, 0
  br i1 %cmp.i52, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %if.then25
  %sub.i = sub nsw i64 0, %h1
  br label %neg_double.exit

if.else.i:                                        ; preds = %if.then25
  %sub2.i = sub i64 0, %l1
  %neg.i55 = xor i64 %h1, -1
  br label %neg_double.exit

neg_double.exit:                                  ; preds = %if.then.i, %if.else.i
  %neglow.0.load103 = phi i64 [ 0, %if.then.i ], [ %sub2.i, %if.else.i ]
  %neghigh.0.load99 = phi i64 [ %sub.i, %if.then.i ], [ %neg.i55, %if.else.i ]
  %uadd.i = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %neglow.0.load103, i64 %toplow.0.load104) #1
  %19 = extractvalue { i64, i1 } %uadd.i, 0
  %add1.i = add nsw i64 %neghigh.0.load99, %tophigh.0.load100
  %cmp.i = extractvalue { i64, i1 } %uadd.i, 1
  %conv2.i = zext i1 %cmp.i to i64
  %add3.i = add nsw i64 %add1.i, %conv2.i
  br label %if.end28

if.end28:                                         ; preds = %neg_double.exit, %if.end
  %toplow.0.load105 = phi i64 [ %19, %neg_double.exit ], [ %toplow.0.load104, %if.end ]
  %tophigh.0.load101 = phi i64 [ %add3.i, %neg_double.exit ], [ %tophigh.0.load100, %if.end ]
  %cmp29 = icmp slt i64 %add5.i84, 0
  br i1 %cmp29, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end28
  %and30 = and i64 %tophigh.0.load101, %toplow.0.load105
  %neg = xor i64 %and30, -1
  br label %cond.end

cond.false:                                       ; preds = %if.end28
  %or = or i64 %tophigh.0.load101, %toplow.0.load105
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %neg, %cond.true ], [ %or, %cond.false ]
  %cmp31 = icmp ne i64 %cond, 0
  %conv = zext i1 %cmp31 to i32
  call void @llvm.lifetime.end(i64 64, i8* %0) #1
  ret i32 %conv
}

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #1

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #1

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #1

; Function Attrs: nounwind uwtable
define void @lshift_double(i64 %l1, i64 %h1, i64 %count, i32 %prec, i64* nocapture %lv, i64* nocapture %hv, i32 %arith) #0 {
entry:
  %sub = sub nsw i64 0, %count
  %cmp = icmp slt i64 %count, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %tobool.i = icmp eq i32 %arith, 0
  %sub.i = ashr i64 %h1, 63
  %.sub.i = select i1 %tobool.i, i64 0, i64 %sub.i
  %cmp.i = icmp sgt i64 %sub, 127
  br i1 %cmp.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %if.then
  store i64 0, i64* %hv, align 8, !tbaa !13
  store i64 0, i64* %lv, align 8, !tbaa !13
  br label %if.end11.i

if.else.i:                                        ; preds = %if.then
  %cmp1.i = icmp sgt i64 %sub, 63
  br i1 %cmp1.i, label %if.then2.i, label %if.else5.i

if.then2.i:                                       ; preds = %if.else.i
  store i64 0, i64* %hv, align 8, !tbaa !13
  %sub3.i = sub i64 -64, %count
  %shr4.i = lshr i64 %h1, %sub3.i
  store i64 %shr4.i, i64* %lv, align 8, !tbaa !13
  br label %if.end11.i

if.else5.i:                                       ; preds = %if.else.i
  %shr6.i = lshr i64 %h1, %sub
  store i64 %shr6.i, i64* %hv, align 8, !tbaa !13
  %shr7.i = lshr i64 %l1, %sub
  %sub9.i = add i64 %count, 63
  %shl.i = shl i64 %h1, %sub9.i
  %shl10.i = shl i64 %shl.i, 1
  %or.i = or i64 %shl10.i, %shr7.i
  store i64 %or.i, i64* %lv, align 8, !tbaa !13
  br label %if.end11.i

if.end11.i:                                       ; preds = %if.else5.i, %if.then2.i, %if.then.i
  %conv.i = zext i32 %prec to i64
  %cmp12.i = icmp sgt i64 %conv.i, %sub
  br i1 %cmp12.i, label %if.else15.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end11.i
  store i64 %.sub.i, i64* %hv, align 8, !tbaa !13
  store i64 %.sub.i, i64* %lv, align 8, !tbaa !13
  br label %if.end44

if.else15.i:                                      ; preds = %if.end11.i
  %sub17.i = add nsw i64 %conv.i, %count
  %cmp18.i = icmp sgt i64 %sub17.i, 127
  br i1 %cmp18.i, label %if.end44, label %if.else21.i

if.else21.i:                                      ; preds = %if.else15.i
  %cmp24.i = icmp sgt i64 %sub17.i, 63
  br i1 %cmp24.i, label %if.then26.i, label %if.else36.i

if.then26.i:                                      ; preds = %if.else21.i
  %sub29.i = add nsw i64 %sub17.i, -64
  %shl30.i = shl i64 -1, %sub29.i
  %neg.i = xor i64 %shl30.i, -1
  %0 = load i64* %hv, align 8, !tbaa !13
  %and.i = and i64 %0, %neg.i
  %shl34.i = shl i64 %.sub.i, %sub29.i
  %or35.i = or i64 %and.i, %shl34.i
  store i64 %or35.i, i64* %hv, align 8, !tbaa !13
  br label %if.end44

if.else36.i:                                      ; preds = %if.else21.i
  store i64 %.sub.i, i64* %hv, align 8, !tbaa !13
  %shl39.i = shl i64 -1, %sub17.i
  %neg40.i = xor i64 %shl39.i, -1
  %1 = load i64* %lv, align 8, !tbaa !13
  %and41.i = and i64 %1, %neg40.i
  %shl44.i = shl i64 %.sub.i, %sub17.i
  %or45.i = or i64 %and41.i, %shl44.i
  store i64 %or45.i, i64* %lv, align 8, !tbaa !13
  br label %if.end44

if.end:                                           ; preds = %entry
  %cmp1 = icmp sgt i64 %count, 127
  br i1 %cmp1, label %if.then2, label %if.else

if.then2:                                         ; preds = %if.end
  store i64 0, i64* %hv, align 8, !tbaa !13
  store i64 0, i64* %lv, align 8, !tbaa !13
  br label %if.end13

if.else:                                          ; preds = %if.end
  %cmp3 = icmp sgt i64 %count, 63
  br i1 %cmp3, label %if.then4, label %if.else6

if.then4:                                         ; preds = %if.else
  %sub5 = add nsw i64 %count, -64
  %shl = shl i64 %l1, %sub5
  store i64 %shl, i64* %hv, align 8, !tbaa !13
  store i64 0, i64* %lv, align 8, !tbaa !13
  br label %if.end13

if.else6:                                         ; preds = %if.else
  %shl7 = shl i64 %h1, %count
  %sub9 = sub i64 63, %count
  %shr = lshr i64 %l1, %sub9
  %shr10 = lshr i64 %shr, 1
  %or = or i64 %shr10, %shl7
  store i64 %or, i64* %hv, align 8, !tbaa !13
  %shl11 = shl i64 %l1, %count
  store i64 %shl11, i64* %lv, align 8, !tbaa !13
  br label %if.end13

if.end13:                                         ; preds = %if.then4, %if.else6, %if.then2
  %2 = phi i64 [ 0, %if.then4 ], [ %shl11, %if.else6 ], [ 0, %if.then2 ]
  %cmp14 = icmp ugt i32 %prec, 64
  br i1 %cmp14, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end13
  %3 = load i64* %hv, align 8, !tbaa !13
  %sub16 = add i32 %prec, -65
  %sh_prom = zext i32 %sub16 to i64
  %shr17 = ashr i64 %3, %sh_prom
  br label %cond.end

cond.false:                                       ; preds = %if.end13
  %sub18 = add i32 %prec, -1
  %sh_prom19 = zext i32 %sub18 to i64
  %shr20 = lshr i64 %2, %sh_prom19
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %shr17, %cond.true ], [ %shr20, %cond.false ]
  %and = and i64 %cond, 1
  %sub21 = sub i64 0, %and
  %cmp22 = icmp ugt i32 %prec, 127
  br i1 %cmp22, label %if.end44, label %if.else24

if.else24:                                        ; preds = %cond.end
  %cmp25 = icmp ugt i32 %prec, 63
  br i1 %cmp25, label %if.then26, label %if.else35

if.then26:                                        ; preds = %if.else24
  %sub27 = add i32 %prec, -64
  %sh_prom28 = zext i32 %sub27 to i64
  %shl29 = shl i64 -1, %sh_prom28
  %neg = xor i64 %shl29, -1
  %4 = load i64* %hv, align 8, !tbaa !13
  %and30 = and i64 %4, %neg
  %shl33 = shl i64 %sub21, %sh_prom28
  %or34 = or i64 %and30, %shl33
  store i64 %or34, i64* %hv, align 8, !tbaa !13
  br label %if.end44

if.else35:                                        ; preds = %if.else24
  store i64 %sub21, i64* %hv, align 8, !tbaa !13
  %sh_prom36 = zext i32 %prec to i64
  %shl37 = shl i64 -1, %sh_prom36
  %neg38 = xor i64 %shl37, -1
  %5 = load i64* %lv, align 8, !tbaa !13
  %and39 = and i64 %5, %neg38
  %shl41 = shl i64 %sub21, %sh_prom36
  %or42 = or i64 %and39, %shl41
  store i64 %or42, i64* %lv, align 8, !tbaa !13
  br label %if.end44

if.end44:                                         ; preds = %if.else36.i, %if.then26.i, %if.else15.i, %if.then14.i, %if.then26, %if.else35, %cond.end
  ret void
}

; Function Attrs: nounwind uwtable
define void @rshift_double(i64 %l1, i64 %h1, i64 %count, i32 %prec, i64* nocapture %lv, i64* nocapture %hv, i32 %arith) #0 {
entry:
  %tobool = icmp eq i32 %arith, 0
  %sub = ashr i64 %h1, 63
  %.sub = select i1 %tobool, i64 0, i64 %sub
  %cmp = icmp sgt i64 %count, 127
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store i64 0, i64* %hv, align 8, !tbaa !13
  store i64 0, i64* %lv, align 8, !tbaa !13
  br label %if.end11

if.else:                                          ; preds = %entry
  %cmp1 = icmp sgt i64 %count, 63
  br i1 %cmp1, label %if.then2, label %if.else5

if.then2:                                         ; preds = %if.else
  store i64 0, i64* %hv, align 8, !tbaa !13
  %sub3 = add nsw i64 %count, -64
  %shr4 = lshr i64 %h1, %sub3
  store i64 %shr4, i64* %lv, align 8, !tbaa !13
  br label %if.end11

if.else5:                                         ; preds = %if.else
  %shr6 = lshr i64 %h1, %count
  store i64 %shr6, i64* %hv, align 8, !tbaa !13
  %shr7 = lshr i64 %l1, %count
  %sub9 = sub i64 63, %count
  %shl = shl i64 %h1, %sub9
  %shl10 = shl i64 %shl, 1
  %or = or i64 %shl10, %shr7
  store i64 %or, i64* %lv, align 8, !tbaa !13
  br label %if.end11

if.end11:                                         ; preds = %if.then2, %if.else5, %if.then
  %conv = zext i32 %prec to i64
  %cmp12 = icmp sgt i64 %conv, %count
  br i1 %cmp12, label %if.else15, label %if.then14

if.then14:                                        ; preds = %if.end11
  store i64 %.sub, i64* %hv, align 8, !tbaa !13
  store i64 %.sub, i64* %lv, align 8, !tbaa !13
  br label %if.end48

if.else15:                                        ; preds = %if.end11
  %sub17 = sub nsw i64 %conv, %count
  %cmp18 = icmp sgt i64 %sub17, 127
  br i1 %cmp18, label %if.end48, label %if.else21

if.else21:                                        ; preds = %if.else15
  %cmp24 = icmp sgt i64 %sub17, 63
  br i1 %cmp24, label %if.then26, label %if.else36

if.then26:                                        ; preds = %if.else21
  %sub29 = add nsw i64 %sub17, -64
  %shl30 = shl i64 -1, %sub29
  %neg = xor i64 %shl30, -1
  %0 = load i64* %hv, align 8, !tbaa !13
  %and = and i64 %0, %neg
  %shl34 = shl i64 %.sub, %sub29
  %or35 = or i64 %and, %shl34
  store i64 %or35, i64* %hv, align 8, !tbaa !13
  br label %if.end48

if.else36:                                        ; preds = %if.else21
  store i64 %.sub, i64* %hv, align 8, !tbaa !13
  %shl39 = shl i64 -1, %sub17
  %neg40 = xor i64 %shl39, -1
  %1 = load i64* %lv, align 8, !tbaa !13
  %and41 = and i64 %1, %neg40
  %shl44 = shl i64 %.sub, %sub17
  %or45 = or i64 %and41, %shl44
  store i64 %or45, i64* %lv, align 8, !tbaa !13
  br label %if.end48

if.end48:                                         ; preds = %if.else15, %if.else36, %if.then26, %if.then14
  ret void
}

; Function Attrs: nounwind uwtable
define void @lrotate_double(i64 %l1, i64 %h1, i64 %count, i32 %prec, i64* nocapture %lv, i64* nocapture %hv) #0 {
entry:
  %s1l = alloca i64, align 8
  %s1h = alloca i64, align 8
  %conv = zext i32 %prec to i64
  %rem = srem i64 %count, %conv
  %cmp = icmp slt i64 %rem, 0
  %add = select i1 %cmp, i64 %conv, i64 0
  %add.rem = add nsw i64 %add, %rem
  call void @lshift_double(i64 %l1, i64 %h1, i64 %add.rem, i32 %prec, i64* %s1l, i64* %s1h, i32 0)
  %sub = sub nsw i64 %conv, %add.rem
  %cmp.i = icmp sgt i64 %sub, 127
  br i1 %cmp.i, label %if.end11.i, label %if.else.i

if.else.i:                                        ; preds = %entry
  %cmp1.i = icmp sgt i64 %sub, 63
  br i1 %cmp1.i, label %if.then2.i, label %if.else5.i

if.then2.i:                                       ; preds = %if.else.i
  %sub3.i = add nsw i64 %sub, -64
  %shr4.i = lshr i64 %h1, %sub3.i
  br label %if.end11.i

if.else5.i:                                       ; preds = %if.else.i
  %shr6.i = lshr i64 %h1, %sub
  %shr7.i = lshr i64 %l1, %sub
  %sub9.i = sub i64 63, %sub
  %shl.i = shl i64 %h1, %sub9.i
  %shl10.i = shl i64 %shl.i, 1
  %or.i = or i64 %shl10.i, %shr7.i
  br label %if.end11.i

if.end11.i:                                       ; preds = %entry, %if.else5.i, %if.then2.i
  %s2l.0.load20 = phi i64 [ %or.i, %if.else5.i ], [ %shr4.i, %if.then2.i ], [ 0, %entry ]
  %s2h.0.load18 = phi i64 [ %shr6.i, %if.else5.i ], [ 0, %if.then2.i ], [ 0, %entry ]
  %cmp12.i = icmp sgt i64 %add.rem, 0
  br i1 %cmp12.i, label %if.else15.i, label %rshift_double.exit

if.else15.i:                                      ; preds = %if.end11.i
  %cmp18.i = icmp sgt i64 %add.rem, 127
  br i1 %cmp18.i, label %rshift_double.exit, label %if.else21.i

if.else21.i:                                      ; preds = %if.else15.i
  %cmp24.i = icmp sgt i64 %add.rem, 63
  br i1 %cmp24.i, label %if.then26.i, label %if.else36.i

if.then26.i:                                      ; preds = %if.else21.i
  %sub29.i = add nsw i64 %add.rem, -64
  %shl30.i = shl i64 -1, %sub29.i
  %neg.i = xor i64 %shl30.i, -1
  %and.i = and i64 %s2h.0.load18, %neg.i
  br label %rshift_double.exit

if.else36.i:                                      ; preds = %if.else21.i
  %shl39.i = shl i64 -1, %add.rem
  %neg40.i = xor i64 %shl39.i, -1
  %and41.i = and i64 %s2l.0.load20, %neg40.i
  br label %rshift_double.exit

rshift_double.exit:                               ; preds = %if.end11.i, %if.else15.i, %if.then26.i, %if.else36.i
  %s2l.0.load19 = phi i64 [ %s2l.0.load20, %if.else15.i ], [ %s2l.0.load20, %if.then26.i ], [ %and41.i, %if.else36.i ], [ 0, %if.end11.i ]
  %s2h.0.load17 = phi i64 [ %s2h.0.load18, %if.else15.i ], [ %and.i, %if.then26.i ], [ 0, %if.else36.i ], [ 0, %if.end11.i ]
  %0 = load i64* %s1l, align 8, !tbaa !13
  %or = or i64 %0, %s2l.0.load19
  store i64 %or, i64* %lv, align 8, !tbaa !13
  %1 = load i64* %s1h, align 8, !tbaa !13
  %or4 = or i64 %1, %s2h.0.load17
  store i64 %or4, i64* %hv, align 8, !tbaa !13
  ret void
}

; Function Attrs: nounwind uwtable
define void @rrotate_double(i64 %l1, i64 %h1, i64 %count, i32 %prec, i64* nocapture %lv, i64* nocapture %hv) #0 {
entry:
  %s2l = alloca i64, align 8
  %s2h = alloca i64, align 8
  %conv = zext i32 %prec to i64
  %rem = srem i64 %count, %conv
  %cmp = icmp slt i64 %rem, 0
  %add = select i1 %cmp, i64 %conv, i64 0
  %add.rem = add nsw i64 %add, %rem
  %cmp.i = icmp sgt i64 %add.rem, 127
  br i1 %cmp.i, label %if.end11.i, label %if.else.i

if.else.i:                                        ; preds = %entry
  %cmp1.i = icmp sgt i64 %add.rem, 63
  br i1 %cmp1.i, label %if.then2.i, label %if.else5.i

if.then2.i:                                       ; preds = %if.else.i
  %sub3.i = add nsw i64 %add.rem, -64
  %shr4.i = lshr i64 %h1, %sub3.i
  br label %if.end11.i

if.else5.i:                                       ; preds = %if.else.i
  %shr6.i = lshr i64 %h1, %add.rem
  %shr7.i = lshr i64 %l1, %add.rem
  %sub9.i = sub i64 63, %add.rem
  %shl.i = shl i64 %h1, %sub9.i
  %shl10.i = shl i64 %shl.i, 1
  %or.i = or i64 %shl10.i, %shr7.i
  br label %if.end11.i

if.end11.i:                                       ; preds = %entry, %if.else5.i, %if.then2.i
  %s1l.0.load20 = phi i64 [ %or.i, %if.else5.i ], [ %shr4.i, %if.then2.i ], [ 0, %entry ]
  %s1h.0.load18 = phi i64 [ %shr6.i, %if.else5.i ], [ 0, %if.then2.i ], [ 0, %entry ]
  %cmp12.i = icmp sgt i64 %conv, %add.rem
  %sub17.i = sub nsw i64 %conv, %add.rem
  br i1 %cmp12.i, label %if.else15.i, label %rshift_double.exit

if.else15.i:                                      ; preds = %if.end11.i
  %cmp18.i = icmp sgt i64 %sub17.i, 127
  br i1 %cmp18.i, label %rshift_double.exit, label %if.else21.i

if.else21.i:                                      ; preds = %if.else15.i
  %cmp24.i = icmp sgt i64 %sub17.i, 63
  br i1 %cmp24.i, label %if.then26.i, label %if.else36.i

if.then26.i:                                      ; preds = %if.else21.i
  %sub29.i = add nsw i64 %sub17.i, -64
  %shl30.i = shl i64 -1, %sub29.i
  %neg.i = xor i64 %shl30.i, -1
  %and.i = and i64 %s1h.0.load18, %neg.i
  br label %rshift_double.exit

if.else36.i:                                      ; preds = %if.else21.i
  %shl39.i = shl i64 -1, %sub17.i
  %neg40.i = xor i64 %shl39.i, -1
  %and41.i = and i64 %s1l.0.load20, %neg40.i
  br label %rshift_double.exit

rshift_double.exit:                               ; preds = %if.end11.i, %if.else15.i, %if.then26.i, %if.else36.i
  %s1l.0.load19 = phi i64 [ %s1l.0.load20, %if.else15.i ], [ %s1l.0.load20, %if.then26.i ], [ %and41.i, %if.else36.i ], [ 0, %if.end11.i ]
  %s1h.0.load17 = phi i64 [ %s1h.0.load18, %if.else15.i ], [ %and.i, %if.then26.i ], [ 0, %if.else36.i ], [ 0, %if.end11.i ]
  call void @lshift_double(i64 %l1, i64 %h1, i64 %sub17.i, i32 %prec, i64* %s2l, i64* %s2h, i32 0)
  %0 = load i64* %s2l, align 8, !tbaa !13
  %or = or i64 %0, %s1l.0.load19
  store i64 %or, i64* %lv, align 8, !tbaa !13
  %1 = load i64* %s2h, align 8, !tbaa !13
  %or4 = or i64 %1, %s1h.0.load17
  store i64 %or4, i64* %hv, align 8, !tbaa !13
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @div_and_round_double(i32 %code, i32 %uns, i64 %lnum_orig, i64 %hnum_orig, i64 %lden_orig, i64 %hden_orig, i64* nocapture %lquo, i64* nocapture %hquo, i64* nocapture %lrem, i64* nocapture %hrem) #0 {
entry:
  %num = alloca [5 x i64], align 16
  %den = alloca [4 x i64], align 16
  %quo = alloca [4 x i64], align 16
  %ltwice = alloca i64, align 8
  %htwice = alloca i64, align 8
  %0 = bitcast [5 x i64]* %num to i8*
  call void @llvm.lifetime.start(i64 40, i8* %0) #1
  %1 = or i64 %hden_orig, %lden_orig
  %2 = icmp eq i64 %1, 0
  %.lden_orig = select i1 %2, i64 1, i64 %lden_orig
  %. = zext i1 %2 to i32
  %tobool = icmp eq i32 %uns, 0
  br i1 %tobool, label %if.then2, label %if.end16

if.then2:                                         ; preds = %entry
  %cmp3 = icmp slt i64 %hnum_orig, 0
  br i1 %cmp3, label %if.then4, label %if.end10

if.then4:                                         ; preds = %if.then2
  %cmp.i = icmp eq i64 %lnum_orig, 0
  br i1 %cmp.i, label %neg_double.exit, label %neg_double.exit.thread

neg_double.exit.thread:                           ; preds = %if.then4
  %sub2.i = sub i64 0, %lnum_orig
  %neg.i = xor i64 %hnum_orig, -1
  br label %if.end10

neg_double.exit:                                  ; preds = %if.then4
  %sub.i = sub nsw i64 0, %hnum_orig
  %and.i = and i64 %sub.i, %hnum_orig
  %tobool5 = icmp sgt i64 %and.i, -1
  br i1 %tobool5, label %if.end10, label %land.lhs.true6

land.lhs.true6:                                   ; preds = %neg_double.exit
  %and = and i64 %.lden_orig, %hden_orig
  %cmp7 = icmp eq i64 %and, -1
  %.overflow.0 = select i1 %cmp7, i32 1, i32 %.
  br label %if.end10

if.end10:                                         ; preds = %neg_double.exit.thread, %land.lhs.true6, %neg_double.exit, %if.then2
  %lnum_orig562 = phi i64 [ 0, %neg_double.exit ], [ %lnum_orig, %if.then2 ], [ 0, %land.lhs.true6 ], [ %sub2.i, %neg_double.exit.thread ]
  %hnum_orig559 = phi i64 [ %sub.i, %neg_double.exit ], [ %hnum_orig, %if.then2 ], [ %sub.i, %land.lhs.true6 ], [ %neg.i, %neg_double.exit.thread ]
  %overflow.1 = phi i32 [ %., %neg_double.exit ], [ %., %if.then2 ], [ %.overflow.0, %land.lhs.true6 ], [ %., %neg_double.exit.thread ]
  %quo_neg.0 = phi i32 [ -1, %neg_double.exit ], [ 0, %if.then2 ], [ -1, %land.lhs.true6 ], [ -1, %neg_double.exit.thread ]
  %cmp11 = icmp slt i64 %hden_orig, 0
  br i1 %cmp11, label %if.then12, label %if.end16

if.then12:                                        ; preds = %if.end10
  %neg13 = xor i32 %quo_neg.0, -1
  %cmp.i419 = icmp eq i64 %.lden_orig, 0
  br i1 %cmp.i419, label %if.then.i423, label %if.else.i426

if.then.i423:                                     ; preds = %if.then12
  %sub.i420 = sub nsw i64 0, %hden_orig
  br label %if.end16

if.else.i426:                                     ; preds = %if.then12
  %sub2.i424 = sub i64 0, %.lden_orig
  %neg.i425 = xor i64 %hden_orig, -1
  br label %if.end16

if.end16:                                         ; preds = %if.else.i426, %if.then.i423, %entry, %if.end10
  %lnum_orig561 = phi i64 [ %lnum_orig, %entry ], [ %lnum_orig562, %if.end10 ], [ %lnum_orig562, %if.then.i423 ], [ %lnum_orig562, %if.else.i426 ]
  %hnum_orig558 = phi i64 [ %hnum_orig, %entry ], [ %hnum_orig559, %if.end10 ], [ %hnum_orig559, %if.then.i423 ], [ %hnum_orig559, %if.else.i426 ]
  %lden_orig554 = phi i64 [ %.lden_orig, %entry ], [ %.lden_orig, %if.end10 ], [ 0, %if.then.i423 ], [ %sub2.i424, %if.else.i426 ]
  %hden_orig550 = phi i64 [ %hden_orig, %entry ], [ %hden_orig, %if.end10 ], [ %sub.i420, %if.then.i423 ], [ %neg.i425, %if.else.i426 ]
  %overflow.2 = phi i32 [ %., %entry ], [ %overflow.1, %if.end10 ], [ %overflow.1, %if.then.i423 ], [ %overflow.1, %if.else.i426 ]
  %quo_neg.1 = phi i32 [ 0, %entry ], [ %quo_neg.0, %if.end10 ], [ %neg13, %if.then.i423 ], [ %neg13, %if.else.i426 ]
  %3 = or i64 %hden_orig550, %hnum_orig558
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %if.then20, label %if.end21

if.then20:                                        ; preds = %if.end16
  store i64 0, i64* %hrem, align 8, !tbaa !13
  store i64 0, i64* %hquo, align 8, !tbaa !13
  %div = udiv i64 %lnum_orig561, %lden_orig554
  store i64 %div, i64* %lquo, align 8, !tbaa !13
  br label %finish_up

if.end21:                                         ; preds = %if.end16
  %cmp17 = icmp eq i64 %hnum_orig558, 0
  br i1 %cmp17, label %if.then23, label %if.end24

if.then23:                                        ; preds = %if.end21
  store i64 0, i64* %lquo, align 8, !tbaa !13
  store i64 0, i64* %hquo, align 8, !tbaa !13
  store i64 0, i64* %hrem, align 8, !tbaa !13
  store i64 %lnum_orig561, i64* %lrem, align 8, !tbaa !13
  br label %finish_up

if.end24:                                         ; preds = %if.end21
  %arraydecay = getelementptr inbounds [4 x i64]* %quo, i64 0, i64 0
  %5 = bitcast [4 x i64]* %quo to i8*
  call void @llvm.memset.p0i8.i64(i8* %5, i8 0, i64 32, i32 16, i1 false)
  %arraydecay25 = getelementptr inbounds [5 x i64]* %num, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 40, i32 16, i1 false)
  %arraydecay26 = getelementptr inbounds [4 x i64]* %den, i64 0, i64 0
  %6 = bitcast [4 x i64]* %den to i8*
  call void @llvm.memset.p0i8.i64(i8* %6, i8 0, i64 32, i32 16, i1 false)
  %and.i447 = and i64 %lnum_orig561, 4294967295
  store i64 %and.i447, i64* %arraydecay25, align 16, !tbaa !13
  %shr.i = lshr i64 %lnum_orig561, 32
  %arrayidx1.i = getelementptr inbounds [5 x i64]* %num, i64 0, i64 1
  store i64 %shr.i, i64* %arrayidx1.i, align 8, !tbaa !13
  %and2.i = and i64 %hnum_orig558, 4294967295
  %arrayidx3.i = getelementptr inbounds [5 x i64]* %num, i64 0, i64 2
  store i64 %and2.i, i64* %arrayidx3.i, align 16, !tbaa !13
  %shr4.i = lshr i64 %hnum_orig558, 32
  %arrayidx5.i = getelementptr inbounds [5 x i64]* %num, i64 0, i64 3
  store i64 %shr4.i, i64* %arrayidx5.i, align 8, !tbaa !13
  %and.i506 = and i64 %lden_orig554, 4294967295
  store i64 %and.i506, i64* %arraydecay26, align 16, !tbaa !13
  %shr.i507 = lshr i64 %lden_orig554, 32
  %arrayidx1.i508 = getelementptr inbounds [4 x i64]* %den, i64 0, i64 1
  store i64 %shr.i507, i64* %arrayidx1.i508, align 8, !tbaa !13
  %and2.i509 = and i64 %hden_orig550, 4294967295
  %arrayidx3.i510 = getelementptr inbounds [4 x i64]* %den, i64 0, i64 2
  store i64 %and2.i509, i64* %arrayidx3.i510, align 16, !tbaa !13
  %shr4.i511 = lshr i64 %hden_orig550, 32
  %arrayidx5.i512 = getelementptr inbounds [4 x i64]* %den, i64 0, i64 3
  store i64 %shr4.i511, i64* %arrayidx5.i512, align 8, !tbaa !13
  %cmp29 = icmp eq i64 %hden_orig550, 0
  %cmp31 = icmp ult i64 %lden_orig554, 4294967296
  %or.cond258 = and i1 %cmp29, %cmp31
  br i1 %or.cond258, label %for.cond.preheader, label %for.cond37

for.cond.preheader:                               ; preds = %if.end24
  %div34 = udiv i64 %shr4.i, %lden_orig554
  %arrayidx36 = getelementptr inbounds [4 x i64]* %quo, i64 0, i64 3
  store i64 %div34, i64* %arrayidx36, align 8, !tbaa !13
  %rem = urem i64 %shr4.i, %lden_orig554
  %mul.1 = shl nuw i64 %rem, 32
  %add.1 = or i64 %and2.i, %mul.1
  %div34.1 = udiv i64 %add.1, %lden_orig554
  %arrayidx36.1 = getelementptr inbounds [4 x i64]* %quo, i64 0, i64 2
  store i64 %div34.1, i64* %arrayidx36.1, align 16, !tbaa !13
  %rem.1 = urem i64 %add.1, %lden_orig554
  %mul.2 = shl i64 %rem.1, 32
  %add.2 = or i64 %shr.i, %mul.2
  %div34.2 = udiv i64 %add.2, %lden_orig554
  %arrayidx36.2 = getelementptr inbounds [4 x i64]* %quo, i64 0, i64 1
  store i64 %div34.2, i64* %arrayidx36.2, align 8, !tbaa !13
  %rem.2 = urem i64 %add.2, %lden_orig554
  %mul.3 = shl i64 %rem.2, 32
  %add.3 = or i64 %and.i447, %mul.3
  %div34.3 = udiv i64 %add.3, %lden_orig554
  store i64 %div34.3, i64* %arraydecay, align 16, !tbaa !13
  br label %if.end186

for.cond37:                                       ; preds = %if.end24, %for.cond37.for.cond37_crit_edge
  %7 = phi i64 [ %.pre617, %for.cond37.for.cond37_crit_edge ], [ %shr4.i511, %if.end24 ]
  %indvars.iv604 = phi i64 [ %indvars.iv.next605, %for.cond37.for.cond37_crit_edge ], [ 3, %if.end24 ]
  %cmp40 = icmp eq i64 %7, 0
  %indvars.iv.next605 = add nsw i64 %indvars.iv604, -1
  br i1 %cmp40, label %for.cond37.for.cond37_crit_edge, label %if.then41

for.cond37.for.cond37_crit_edge:                  ; preds = %for.cond37
  %arrayidx39.phi.trans.insert = getelementptr inbounds [4 x i64]* %den, i64 0, i64 %indvars.iv.next605
  %.pre617 = load i64* %arrayidx39.phi.trans.insert, align 8, !tbaa !13
  br label %for.cond37

if.then41:                                        ; preds = %for.cond37
  %8 = trunc i64 %indvars.iv604 to i32
  %add48 = add nsw i64 %7, 1
  %div49 = udiv i64 4294967296, %add48
  %cmp50 = icmp ugt i64 %div49, 1
  br i1 %cmp50, label %for.cond52.preheader, label %if.end84

for.cond52.preheader:                             ; preds = %if.then41
  %mul57 = mul i64 %and.i447, %div49
  %and59 = and i64 %mul57, 4294967295
  store i64 %and59, i64* %arraydecay25, align 16, !tbaa !13
  %shr = lshr i64 %mul57, 32
  %mul57.1 = mul i64 %shr.i, %div49
  %add58.1 = add i64 %mul57.1, %shr
  %and59.1 = and i64 %add58.1, 4294967295
  store i64 %and59.1, i64* %arrayidx1.i, align 8, !tbaa !13
  %shr.1 = lshr i64 %add58.1, 32
  %mul57.2 = mul i64 %and2.i, %div49
  %add58.2 = add i64 %mul57.2, %shr.1
  %and59.2 = and i64 %add58.2, 4294967295
  store i64 %and59.2, i64* %arrayidx3.i, align 16, !tbaa !13
  %shr.2 = lshr i64 %add58.2, 32
  %mul57.3 = mul i64 %shr4.i, %div49
  %add58.3 = add i64 %mul57.3, %shr.2
  %and59.3 = and i64 %add58.3, 4294967295
  store i64 %and59.3, i64* %arrayidx5.i, align 8, !tbaa !13
  %shr.3 = lshr i64 %add58.3, 32
  %arrayidx64 = getelementptr inbounds [5 x i64]* %num, i64 0, i64 4
  store i64 %shr.3, i64* %arrayidx64, align 16, !tbaa !13
  %mul70 = mul i64 %and.i506, %div49
  %and72 = and i64 %mul70, 4294967295
  store i64 %and72, i64* %arraydecay26, align 16, !tbaa !13
  %shr75 = lshr i64 %mul70, 32
  %cmp78 = icmp eq i64 %and72, 0
  %den_hi_sig.0.i.3 = select i1 %cmp78, i32 %8, i32 0
  %mul70.1 = mul i64 %shr.i507, %div49
  %add71.1 = add i64 %mul70.1, %shr75
  %and72.1 = and i64 %add71.1, 4294967295
  store i64 %and72.1, i64* %arrayidx1.i508, align 8, !tbaa !13
  %shr75.1 = lshr i64 %add71.1, 32
  %cmp78.1 = icmp eq i64 %and72.1, 0
  %den_hi_sig.0.i.3.1 = select i1 %cmp78.1, i32 %den_hi_sig.0.i.3, i32 1
  %mul70.2 = mul i64 %and2.i509, %div49
  %add71.2 = add i64 %mul70.2, %shr75.1
  %and72.2 = and i64 %add71.2, 4294967295
  store i64 %and72.2, i64* %arrayidx3.i510, align 16, !tbaa !13
  %shr75.2 = lshr i64 %add71.2, 32
  %cmp78.2 = icmp eq i64 %and72.2, 0
  %den_hi_sig.0.i.3.2 = select i1 %cmp78.2, i32 %den_hi_sig.0.i.3.1, i32 2
  %mul70.3 = mul i64 %shr4.i511, %div49
  %add71.3 = add i64 %mul70.3, %shr75.2
  %and72.3 = and i64 %add71.3, 4294967295
  store i64 %and72.3, i64* %arrayidx5.i512, align 8, !tbaa !13
  %cmp78.3 = icmp eq i64 %and72.3, 0
  %den_hi_sig.0.i.3.3 = select i1 %cmp78.3, i32 %den_hi_sig.0.i.3.2, i32 3
  br label %if.end84

if.end84:                                         ; preds = %for.cond52.preheader, %if.then41
  %den_hi_sig.2 = phi i32 [ %8, %if.then41 ], [ %den_hi_sig.0.i.3.3, %for.cond52.preheader ]
  %sub = sub nsw i32 4, %den_hi_sig.2
  %i.4576 = add nsw i32 %sub, -1
  %cmp87577 = icmp sgt i32 %sub, 0
  br i1 %cmp87577, label %for.body88.lr.ph, label %if.end186

for.body88.lr.ph:                                 ; preds = %if.end84
  %idxprom100 = sext i32 %den_hi_sig.2 to i64
  %arrayidx101 = getelementptr inbounds [4 x i64]* %den, i64 0, i64 %idxprom100
  %9 = load i64* %arrayidx101, align 8, !tbaa !13
  %sub115 = add nsw i32 %den_hi_sig.2, -1
  %idxprom116 = sext i32 %sub115 to i64
  %arrayidx117 = getelementptr inbounds [4 x i64]* %den, i64 0, i64 %idxprom116
  %cmp129569 = icmp slt i32 %den_hi_sig.2, 0
  br i1 %cmp129569, label %for.body88.lr.ph.split.us, label %for.body88.lr.ph.for.body88.lr.ph.split_crit_edge

for.body88.lr.ph.for.body88.lr.ph.split_crit_edge: ; preds = %for.body88.lr.ph
  %10 = add i32 %den_hi_sig.2, 1
  %11 = sub i32 3, %den_hi_sig.2
  %12 = sext i32 %11 to i64
  br label %for.body88

for.body88.lr.ph.split.us:                        ; preds = %for.body88.lr.ph
  %13 = sub i32 3, %den_hi_sig.2
  %14 = sext i32 %13 to i64
  br label %for.body88.us

for.body88.us:                                    ; preds = %if.end180.us, %for.body88.lr.ph.split.us
  %indvars.iv606 = phi i64 [ %indvars.iv.next607, %if.end180.us ], [ %14, %for.body88.lr.ph.split.us ]
  %i.4579.us = phi i32 [ %i.4.us, %if.end180.us ], [ %i.4576, %for.body88.lr.ph.split.us ]
  %i.4.in578.us = phi i32 [ %i.4579.us, %if.end180.us ], [ %sub, %for.body88.lr.ph.split.us ]
  %add89.us = add nsw i32 %i.4579.us, %den_hi_sig.2
  %add90.us = add i32 %i.4.in578.us, %den_hi_sig.2
  %idxprom91.us = sext i32 %add90.us to i64
  %arrayidx92.us = getelementptr inbounds [5 x i64]* %num, i64 0, i64 %idxprom91.us
  %15 = load i64* %arrayidx92.us, align 8, !tbaa !13
  %mul93.us = shl i64 %15, 32
  %idxprom95.us = sext i32 %add89.us to i64
  %arrayidx96.us = getelementptr inbounds [5 x i64]* %num, i64 0, i64 %idxprom95.us
  %16 = load i64* %arrayidx96.us, align 8, !tbaa !13
  %add97.us = add i64 %mul93.us, %16
  %cmp102.us = icmp eq i64 %15, %9
  br i1 %cmp102.us, label %if.end108.us, label %if.then103.us

if.then103.us:                                    ; preds = %for.body88.us
  %div106.us = udiv i64 %add97.us, %9
  br label %if.end108.us

if.end108.us:                                     ; preds = %if.then103.us, %for.body88.us
  %quo_est.0.us = phi i64 [ %div106.us, %if.then103.us ], [ 4294967295, %for.body88.us ]
  %mul111.us = mul i64 %9, %quo_est.0.us
  %sub112.us = sub i64 %add97.us, %mul111.us
  %cmp113.us = icmp ult i64 %sub112.us, 4294967296
  br i1 %cmp113.us, label %land.lhs.true114.us, label %if.end180.us

land.lhs.true114.us:                              ; preds = %if.end108.us
  %17 = load i64* %arrayidx117, align 8, !tbaa !13
  %mul118.us = mul i64 %17, %quo_est.0.us
  %mul119.us = shl i64 %sub112.us, 32
  %sub120.us = add nsw i32 %add90.us, -2
  %idxprom121.us = sext i32 %sub120.us to i64
  %arrayidx122.us = getelementptr inbounds [5 x i64]* %num, i64 0, i64 %idxprom121.us
  %18 = load i64* %arrayidx122.us, align 8, !tbaa !13
  %add123.us = add i64 %18, %mul119.us
  %cmp124.us = icmp ugt i64 %mul118.us, %add123.us
  %dec126.us = sext i1 %cmp124.us to i64
  %dec126.quo_est.0.us = add i64 %dec126.us, %quo_est.0.us
  br label %if.end180.us

if.end180.us:                                     ; preds = %if.end108.us, %land.lhs.true114.us
  %quo_est.1.us = phi i64 [ %quo_est.0.us, %if.end108.us ], [ %dec126.quo_est.0.us, %land.lhs.true114.us ]
  %arrayidx182.us = getelementptr inbounds [4 x i64]* %quo, i64 0, i64 %indvars.iv606
  store i64 %quo_est.1.us, i64* %arrayidx182.us, align 8, !tbaa !13
  %i.4.us = add nsw i32 %i.4579.us, -1
  %19 = trunc i64 %indvars.iv606 to i32
  %cmp87.us = icmp sgt i32 %19, 0
  %indvars.iv.next607 = add nsw i64 %indvars.iv606, -1
  br i1 %cmp87.us, label %for.body88.us, label %for.cond86.if.end186.loopexit566_crit_edge

for.body88:                                       ; preds = %for.body88.lr.ph.for.body88.lr.ph.split_crit_edge, %if.end180
  %indvars.iv591 = phi i64 [ %12, %for.body88.lr.ph.for.body88.lr.ph.split_crit_edge ], [ %indvars.iv.next592, %if.end180 ]
  %i.4579 = phi i32 [ %i.4576, %for.body88.lr.ph.for.body88.lr.ph.split_crit_edge ], [ %i.4, %if.end180 ]
  %i.4.in578 = phi i32 [ %sub, %for.body88.lr.ph.for.body88.lr.ph.split_crit_edge ], [ %i.4579, %if.end180 ]
  %add89 = add nsw i32 %i.4579, %den_hi_sig.2
  %add90 = add i32 %i.4.in578, %den_hi_sig.2
  %idxprom91 = sext i32 %add90 to i64
  %arrayidx92 = getelementptr inbounds [5 x i64]* %num, i64 0, i64 %idxprom91
  %20 = load i64* %arrayidx92, align 8, !tbaa !13
  %mul93 = shl i64 %20, 32
  %idxprom95 = sext i32 %add89 to i64
  %arrayidx96 = getelementptr inbounds [5 x i64]* %num, i64 0, i64 %idxprom95
  %21 = load i64* %arrayidx96, align 8, !tbaa !13
  %add97 = add i64 %mul93, %21
  %cmp102 = icmp eq i64 %20, %9
  br i1 %cmp102, label %if.end108, label %if.then103

if.then103:                                       ; preds = %for.body88
  %div106 = udiv i64 %add97, %9
  br label %if.end108

if.end108:                                        ; preds = %for.body88, %if.then103
  %quo_est.0 = phi i64 [ %div106, %if.then103 ], [ 4294967295, %for.body88 ]
  %mul111 = mul i64 %9, %quo_est.0
  %sub112 = sub i64 %add97, %mul111
  %cmp113 = icmp ult i64 %sub112, 4294967296
  br i1 %cmp113, label %land.lhs.true114, label %for.body130.lr.ph

land.lhs.true114:                                 ; preds = %if.end108
  %22 = load i64* %arrayidx117, align 8, !tbaa !13
  %mul118 = mul i64 %22, %quo_est.0
  %mul119 = shl i64 %sub112, 32
  %sub120 = add nsw i32 %add90, -2
  %idxprom121 = sext i32 %sub120 to i64
  %arrayidx122 = getelementptr inbounds [5 x i64]* %num, i64 0, i64 %idxprom121
  %23 = load i64* %arrayidx122, align 8, !tbaa !13
  %add123 = add i64 %23, %mul119
  %cmp124 = icmp ugt i64 %mul118, %add123
  %dec126 = sext i1 %cmp124 to i64
  %dec126.quo_est.0 = add i64 %dec126, %quo_est.0
  br label %for.body130.lr.ph

for.body130.lr.ph:                                ; preds = %if.end108, %land.lhs.true114
  %quo_est.1 = phi i64 [ %quo_est.0, %if.end108 ], [ %dec126.quo_est.0, %land.lhs.true114 ]
  br label %for.body130

for.body130:                                      ; preds = %for.body130, %for.body130.lr.ph
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body130 ], [ 0, %for.body130.lr.ph ]
  %carry.3571 = phi i64 [ %add148, %for.body130 ], [ 0, %for.body130.lr.ph ]
  %arrayidx132 = getelementptr inbounds [4 x i64]* %den, i64 0, i64 %indvars.iv
  %24 = load i64* %arrayidx132, align 8, !tbaa !13
  %mul133 = mul i64 %24, %quo_est.1
  %add134 = add i64 %mul133, %carry.3571
  %shr135 = lshr i64 %add134, 32
  %25 = add nsw i64 %indvars.iv, %indvars.iv591
  %arrayidx138 = getelementptr inbounds [5 x i64]* %num, i64 0, i64 %25
  %26 = load i64* %arrayidx138, align 8, !tbaa !13
  %and139 = and i64 %add134, 4294967295
  %sub140 = sub i64 %26, %and139
  %and141 = and i64 %sub140, 4294967295
  store i64 %and141, i64* %arrayidx138, align 8, !tbaa !13
  %cmp146 = icmp ugt i64 %sub140, 4294967295
  %conv147 = zext i1 %cmp146 to i64
  %add148 = add i64 %conv147, %shr135
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %10
  br i1 %exitcond, label %for.end151, label %for.body130

for.end151:                                       ; preds = %for.body130
  %.pre618 = load i64* %arrayidx92, align 8, !tbaa !13
  %cmp154 = icmp ult i64 %.pre618, %add148
  br i1 %cmp154, label %for.body161.lr.ph, label %if.end180

for.body161.lr.ph:                                ; preds = %for.end151
  %dec157 = add i64 %quo_est.1, -1
  br label %for.body161

for.body161:                                      ; preds = %for.body161, %for.body161.lr.ph
  %indvars.iv586 = phi i64 [ %indvars.iv.next587, %for.body161 ], [ 0, %for.body161.lr.ph ]
  %carry.4574 = phi i64 [ %shr169, %for.body161 ], [ 0, %for.body161.lr.ph ]
  %27 = add nsw i64 %indvars.iv586, %indvars.iv591
  %arrayidx164 = getelementptr inbounds [5 x i64]* %num, i64 0, i64 %27
  %28 = load i64* %arrayidx164, align 8, !tbaa !13
  %arrayidx166 = getelementptr inbounds [4 x i64]* %den, i64 0, i64 %indvars.iv586
  %29 = load i64* %arrayidx166, align 8, !tbaa !13
  %add167 = add i64 %28, %carry.4574
  %add168 = add i64 %add167, %29
  %shr169 = lshr i64 %add168, 32
  %and170 = and i64 %add168, 4294967295
  store i64 %and170, i64* %arrayidx164, align 8, !tbaa !13
  %indvars.iv.next587 = add nuw nsw i64 %indvars.iv586, 1
  %lftr.wideiv589 = trunc i64 %indvars.iv.next587 to i32
  %exitcond590 = icmp eq i32 %lftr.wideiv589, %10
  br i1 %exitcond590, label %for.end176, label %for.body161

for.end176:                                       ; preds = %for.body161
  %.pre619 = load i64* %arrayidx92, align 8, !tbaa !13
  %add179 = add i64 %.pre619, %shr169
  store i64 %add179, i64* %arrayidx92, align 8, !tbaa !13
  br label %if.end180

if.end180:                                        ; preds = %for.end176, %for.end151
  %quo_est.2 = phi i64 [ %dec157, %for.end176 ], [ %quo_est.1, %for.end151 ]
  %arrayidx182 = getelementptr inbounds [4 x i64]* %quo, i64 0, i64 %indvars.iv591
  store i64 %quo_est.2, i64* %arrayidx182, align 8, !tbaa !13
  %i.4 = add nsw i32 %i.4579, -1
  %30 = trunc i64 %indvars.iv591 to i32
  %cmp87 = icmp sgt i32 %30, 0
  %indvars.iv.next592 = add nsw i64 %indvars.iv591, -1
  br i1 %cmp87, label %for.body88, label %for.cond86.if.end186.loopexit566_crit_edge

for.cond86.if.end186.loopexit566_crit_edge:       ; preds = %if.end180, %if.end180.us
  %.pre613.pre = load i64* %arraydecay, align 16, !tbaa !13
  %arrayidx1.i523.phi.trans.insert.phi.trans.insert = getelementptr inbounds [4 x i64]* %quo, i64 0, i64 1
  %.pre614.pre = load i64* %arrayidx1.i523.phi.trans.insert.phi.trans.insert, align 8, !tbaa !13
  %arrayidx2.i.phi.trans.insert.phi.trans.insert = getelementptr inbounds [4 x i64]* %quo, i64 0, i64 2
  %.pre615.pre = load i64* %arrayidx2.i.phi.trans.insert.phi.trans.insert, align 16, !tbaa !13
  %arrayidx3.i524.phi.trans.insert.phi.trans.insert = getelementptr inbounds [4 x i64]* %quo, i64 0, i64 3
  %.pre616.pre = load i64* %arrayidx3.i524.phi.trans.insert.phi.trans.insert, align 8, !tbaa !13
  br label %if.end186

if.end186:                                        ; preds = %for.cond86.if.end186.loopexit566_crit_edge, %if.end84, %for.cond.preheader
  %31 = phi i64 [ %div34, %for.cond.preheader ], [ %.pre616.pre, %for.cond86.if.end186.loopexit566_crit_edge ], [ 0, %if.end84 ]
  %32 = phi i64 [ %div34.1, %for.cond.preheader ], [ %.pre615.pre, %for.cond86.if.end186.loopexit566_crit_edge ], [ 0, %if.end84 ]
  %33 = phi i64 [ %div34.2, %for.cond.preheader ], [ %.pre614.pre, %for.cond86.if.end186.loopexit566_crit_edge ], [ 0, %if.end84 ]
  %34 = phi i64 [ %div34.3, %for.cond.preheader ], [ %.pre613.pre, %for.cond86.if.end186.loopexit566_crit_edge ], [ 0, %if.end84 ]
  %mul.i = shl i64 %33, 32
  %add.i = add i64 %mul.i, %34
  store i64 %add.i, i64* %lquo, align 8, !tbaa !13
  %mul4.i = shl i64 %31, 32
  %add5.i = add i64 %mul4.i, %32
  store i64 %add5.i, i64* %hquo, align 8, !tbaa !13
  br label %finish_up

finish_up:                                        ; preds = %if.end186, %if.then23, %if.then20
  %tobool188 = icmp ne i32 %quo_neg.1, 0
  br i1 %tobool188, label %if.then189, label %finish_up.if.end191_crit_edge

finish_up.if.end191_crit_edge:                    ; preds = %finish_up
  %.pre = load i64* %hquo, align 8, !tbaa !13
  br label %if.end191

if.then189:                                       ; preds = %finish_up
  %35 = load i64* %lquo, align 8, !tbaa !13
  %36 = load i64* %hquo, align 8, !tbaa !13
  %cmp.i513 = icmp eq i64 %35, 0
  br i1 %cmp.i513, label %if.then.i517, label %if.else.i520

if.then.i517:                                     ; preds = %if.then189
  store i64 0, i64* %lquo, align 8, !tbaa !13
  %sub.i514 = sub nsw i64 0, %36
  store i64 %sub.i514, i64* %hquo, align 8, !tbaa !13
  br label %if.end191

if.else.i520:                                     ; preds = %if.then189
  %sub2.i518 = sub i64 0, %35
  store i64 %sub2.i518, i64* %lquo, align 8, !tbaa !13
  %neg.i519 = xor i64 %36, -1
  store i64 %neg.i519, i64* %hquo, align 8, !tbaa !13
  br label %if.end191

if.end191:                                        ; preds = %finish_up.if.end191_crit_edge, %if.else.i520, %if.then.i517
  %37 = phi i64 [ %.pre, %finish_up.if.end191_crit_edge ], [ %neg.i519, %if.else.i520 ], [ %sub.i514, %if.then.i517 ]
  %38 = load i64* %lquo, align 8, !tbaa !13
  %call192 = tail call i32 @mul_double(i64 %38, i64 %37, i64 %lden_orig, i64 %hden_orig, i64* %lrem, i64* %hrem)
  %39 = load i64* %lrem, align 8, !tbaa !13
  %40 = load i64* %hrem, align 8, !tbaa !13
  %cmp.i496 = icmp eq i64 %39, 0
  br i1 %cmp.i496, label %if.then.i500, label %if.else.i503

if.then.i500:                                     ; preds = %if.end191
  store i64 0, i64* %lrem, align 8, !tbaa !13
  %sub.i497 = sub nsw i64 0, %40
  br label %neg_double.exit505

if.else.i503:                                     ; preds = %if.end191
  %sub2.i501 = sub i64 0, %39
  store i64 %sub2.i501, i64* %lrem, align 8, !tbaa !13
  %neg.i502 = xor i64 %40, -1
  br label %neg_double.exit505

neg_double.exit505:                               ; preds = %if.then.i500, %if.else.i503
  %storemerge = phi i64 [ %neg.i502, %if.else.i503 ], [ %sub.i497, %if.then.i500 ]
  store i64 %storemerge, i64* %hrem, align 8, !tbaa !13
  %41 = load i64* %lrem, align 8, !tbaa !13
  %uadd.i486 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %lnum_orig, i64 %41) #1
  %42 = extractvalue { i64, i1 } %uadd.i486, 0
  %add1.i487 = add nsw i64 %storemerge, %hnum_orig
  %cmp.i488 = extractvalue { i64, i1 } %uadd.i486, 1
  %conv2.i489 = zext i1 %cmp.i488 to i64
  %add3.i490 = add nsw i64 %add1.i487, %conv2.i489
  store i64 %42, i64* %lrem, align 8, !tbaa !13
  store i64 %add3.i490, i64* %hrem, align 8, !tbaa !13
  switch i32 %code, label %sw.default [
    i32 62, label %cleanup
    i32 66, label %cleanup
    i32 71, label %cleanup
    i32 64, label %sw.bb195
    i32 68, label %sw.bb195
    i32 63, label %sw.bb206
    i32 67, label %sw.bb206
    i32 65, label %sw.bb218
    i32 69, label %sw.bb218
  ]

sw.bb195:                                         ; preds = %neg_double.exit505, %neg_double.exit505
  br i1 %tobool188, label %land.lhs.true197, label %cleanup

land.lhs.true197:                                 ; preds = %sw.bb195
  %43 = load i64* %lrem, align 8, !tbaa !13
  %44 = or i64 %43, %add3.i490
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %cleanup, label %if.then202

if.then202:                                       ; preds = %land.lhs.true197
  %46 = load i64* %lquo, align 8, !tbaa !13
  %47 = load i64* %hquo, align 8, !tbaa !13
  %uadd.i476 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %46, i64 -1) #1
  %48 = extractvalue { i64, i1 } %uadd.i476, 0
  %add1.i477 = add nsw i64 %47, -1
  %cmp.i478 = extractvalue { i64, i1 } %uadd.i476, 1
  %conv2.i479 = zext i1 %cmp.i478 to i64
  %add3.i480 = add nsw i64 %add1.i477, %conv2.i479
  store i64 %48, i64* %lquo, align 8, !tbaa !13
  store i64 %add3.i480, i64* %hquo, align 8, !tbaa !13
  br label %sw.epilog

sw.bb206:                                         ; preds = %neg_double.exit505, %neg_double.exit505
  br i1 %tobool188, label %cleanup, label %land.lhs.true208

land.lhs.true208:                                 ; preds = %sw.bb206
  %49 = load i64* %lrem, align 8, !tbaa !13
  %50 = or i64 %49, %add3.i490
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %cleanup, label %if.then214

if.then214:                                       ; preds = %land.lhs.true208
  %52 = load i64* %lquo, align 8, !tbaa !13
  %53 = load i64* %hquo, align 8, !tbaa !13
  %uadd.i468 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %52, i64 1) #1
  %54 = extractvalue { i64, i1 } %uadd.i468, 0
  %cmp.i469 = extractvalue { i64, i1 } %uadd.i468, 1
  %conv2.i470 = zext i1 %cmp.i469 to i64
  %add3.i471 = add nsw i64 %conv2.i470, %53
  store i64 %54, i64* %lquo, align 8, !tbaa !13
  store i64 %add3.i471, i64* %hquo, align 8, !tbaa !13
  br label %sw.epilog

sw.bb218:                                         ; preds = %neg_double.exit505, %neg_double.exit505
  %55 = load i64* %lrem, align 8, !tbaa !13
  %cmp225 = icmp slt i64 %add3.i490, 0
  br i1 %cmp225, label %if.then227, label %if.end229

if.then227:                                       ; preds = %sw.bb218
  %cmp.i458 = icmp eq i64 %55, 0
  br i1 %cmp.i458, label %if.then.i462, label %if.else.i465

if.then.i462:                                     ; preds = %if.then227
  %sub.i459 = sub nsw i64 0, %add3.i490
  br label %if.end229

if.else.i465:                                     ; preds = %if.then227
  %sub2.i463 = sub i64 0, %55
  %neg.i464 = xor i64 %add3.i490, -1
  br label %if.end229

if.end229:                                        ; preds = %if.else.i465, %if.then.i462, %sw.bb218
  %56 = phi i64 [ %55, %sw.bb218 ], [ 0, %if.then.i462 ], [ %sub2.i463, %if.else.i465 ]
  %57 = phi i64 [ %add3.i490, %sw.bb218 ], [ %sub.i459, %if.then.i462 ], [ %neg.i464, %if.else.i465 ]
  %cmp230 = icmp slt i64 %hden_orig550, 0
  br i1 %cmp230, label %if.then232, label %if.end234

if.then232:                                       ; preds = %if.end229
  %cmp.i448 = icmp eq i64 %lden_orig554, 0
  br i1 %cmp.i448, label %if.then.i452, label %if.else.i455

if.then.i452:                                     ; preds = %if.then232
  %sub.i449 = sub nsw i64 0, %hden_orig550
  br label %if.end234

if.else.i455:                                     ; preds = %if.then232
  %sub2.i453 = sub i64 0, %lden_orig554
  %neg.i454 = xor i64 %hden_orig550, -1
  br label %if.end234

if.end234:                                        ; preds = %if.else.i455, %if.then.i452, %if.end229
  %lden.0.load536547 = phi i64 [ %lden_orig554, %if.end229 ], [ 0, %if.then.i452 ], [ %sub2.i453, %if.else.i455 ]
  %hden.0.load528545 = phi i64 [ %hden_orig550, %if.end229 ], [ %sub.i449, %if.then.i452 ], [ %neg.i454, %if.else.i455 ]
  %call235 = call i32 @mul_double(i64 2, i64 0, i64 %56, i64 %57, i64* %ltwice, i64* %htwice)
  %58 = load i64* %htwice, align 8, !tbaa !13
  %cmp236 = icmp ult i64 %hden.0.load528545, %58
  br i1 %cmp236, label %if.then244, label %lor.lhs.false238

lor.lhs.false238:                                 ; preds = %if.end234
  %cmp239 = icmp eq i64 %hden.0.load528545, %58
  %59 = load i64* %ltwice, align 8
  %cmp242 = icmp ult i64 %lden.0.load536547, %59
  %or.cond = and i1 %cmp239, %cmp242
  br i1 %or.cond, label %if.then244, label %cleanup

if.then244:                                       ; preds = %lor.lhs.false238, %if.end234
  %60 = load i64* %hquo, align 8, !tbaa !13
  %cmp245 = icmp slt i64 %60, 0
  %61 = load i64* %lquo, align 8, !tbaa !13
  br i1 %cmp245, label %if.then247, label %if.else249

if.then247:                                       ; preds = %if.then244
  %uadd.i437 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %61, i64 -1) #1
  %62 = extractvalue { i64, i1 } %uadd.i437, 0
  %add1.i438 = add nsw i64 %60, -1
  %cmp.i439 = extractvalue { i64, i1 } %uadd.i437, 1
  %conv2.i440 = zext i1 %cmp.i439 to i64
  %add3.i441 = add nsw i64 %add1.i438, %conv2.i440
  store i64 %62, i64* %lquo, align 8, !tbaa !13
  store i64 %add3.i441, i64* %hquo, align 8, !tbaa !13
  br label %sw.epilog

if.else249:                                       ; preds = %if.then244
  %uadd.i429 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %61, i64 1) #1
  %63 = extractvalue { i64, i1 } %uadd.i429, 0
  %cmp.i430 = extractvalue { i64, i1 } %uadd.i429, 1
  %conv2.i431 = zext i1 %cmp.i430 to i64
  %add3.i432 = add nsw i64 %conv2.i431, %60
  store i64 %63, i64* %lquo, align 8, !tbaa !13
  store i64 %add3.i432, i64* %hquo, align 8, !tbaa !13
  br label %sw.epilog

sw.default:                                       ; preds = %neg_double.exit505
  tail call void @fancy_abort(i8* getelementptr inbounds ([13 x i8]* @.str, i64 0, i64 0), i32 823, i8* getelementptr inbounds ([21 x i8]* @__FUNCTION__.div_and_round_double, i64 0, i64 0)) #7
  unreachable

sw.epilog:                                        ; preds = %if.else249, %if.then247, %if.then214, %if.then202
  %64 = phi i64 [ %add3.i432, %if.else249 ], [ %add3.i441, %if.then247 ], [ %add3.i471, %if.then214 ], [ %add3.i480, %if.then202 ]
  %65 = load i64* %lquo, align 8, !tbaa !13
  %call254 = tail call i32 @mul_double(i64 %65, i64 %64, i64 %lden_orig, i64 %hden_orig, i64* %lrem, i64* %hrem)
  %66 = load i64* %lrem, align 8, !tbaa !13
  %67 = load i64* %hrem, align 8, !tbaa !13
  %cmp.i409 = icmp eq i64 %66, 0
  br i1 %cmp.i409, label %if.then.i413, label %if.else.i416

if.then.i413:                                     ; preds = %sw.epilog
  store i64 0, i64* %lrem, align 8, !tbaa !13
  %sub.i410 = sub nsw i64 0, %67
  br label %neg_double.exit418

if.else.i416:                                     ; preds = %sw.epilog
  %sub2.i414 = sub i64 0, %66
  store i64 %sub2.i414, i64* %lrem, align 8, !tbaa !13
  %neg.i415 = xor i64 %67, -1
  br label %neg_double.exit418

neg_double.exit418:                               ; preds = %if.then.i413, %if.else.i416
  %storemerge565 = phi i64 [ %neg.i415, %if.else.i416 ], [ %sub.i410, %if.then.i413 ]
  store i64 %storemerge565, i64* %hrem, align 8, !tbaa !13
  %68 = load i64* %lrem, align 8, !tbaa !13
  %uadd.i = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %lnum_orig, i64 %68) #1
  %69 = extractvalue { i64, i1 } %uadd.i, 0
  %add1.i = add nsw i64 %storemerge565, %hnum_orig
  %cmp.i405 = extractvalue { i64, i1 } %uadd.i, 1
  %conv2.i = zext i1 %cmp.i405 to i64
  %add3.i = add nsw i64 %add1.i, %conv2.i
  store i64 %69, i64* %lrem, align 8, !tbaa !13
  store i64 %add3.i, i64* %hrem, align 8, !tbaa !13
  br label %cleanup

cleanup:                                          ; preds = %land.lhs.true208, %land.lhs.true197, %lor.lhs.false238, %sw.bb206, %sw.bb195, %neg_double.exit505, %neg_double.exit505, %neg_double.exit505, %neg_double.exit418
  call void @llvm.lifetime.end(i64 40, i8* %0) #1
  ret i32 %overflow.2
}

; Function Attrs: noreturn
declare void @fancy_abort(i8*, i32, i8*) #2

; Function Attrs: nounwind uwtable
define %union.tree_node* @size_int_wide(i64 %number, i32 %kind) #0 {
entry:
  %idxprom = sext i32 %kind to i64
  %arrayidx = getelementptr inbounds [6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 %idxprom
  %0 = load %union.tree_node** %arrayidx, align 8, !tbaa !14
  %call = tail call %union.tree_node* @size_int_type_wide(i64 %number, %union.tree_node* %0)
  ret %union.tree_node* %call
}

; Function Attrs: nounwind uwtable
define %union.tree_node* @size_int_type_wide(i64 %number, %union.tree_node* %type) #0 {
entry:
  %0 = load %struct.htab** @size_int_type_wide.size_htab, align 8, !tbaa !14
  %cmp = icmp eq %struct.htab* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = tail call %struct.htab* @htab_create(i64 1024, i32 (i8*)* @size_htab_hash, i32 (i8*, i8*)* @size_htab_eq, void (i8*)* null) #1
  store %struct.htab* %call, %struct.htab** @size_int_type_wide.size_htab, align 8, !tbaa !14
  %1 = bitcast %struct.htab* %call to i8*
  tail call void @ggc_add_deletable_htab(i8* %1, i32 (i8*)* null, void (i8*)* null) #1
  %call1 = tail call %union.tree_node* @make_node(i32 25) #1
  store %union.tree_node* %call1, %union.tree_node** @size_int_type_wide.new_const, align 8, !tbaa !14
  tail call void @ggc_add_tree_root(%union.tree_node** @size_int_type_wide.new_const, i32 1) #1
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %2 = load %union.tree_node** @size_int_type_wide.new_const, align 8, !tbaa !14
  %int_cst2 = getelementptr inbounds %union.tree_node* %2, i64 0, i32 0, i32 2
  %low = bitcast i32* %int_cst2 to i64*
  store i64 %number, i64* %low, align 8, !tbaa !1
  %number.lobit = ashr i64 %number, 63
  %high = getelementptr inbounds i32* %int_cst2, i64 2
  %3 = bitcast i32* %high to i64*
  store i64 %number.lobit, i64* %3, align 8, !tbaa !10
  %type6 = getelementptr inbounds %union.tree_node* %2, i64 0, i32 0, i32 0, i32 1
  store %union.tree_node* %type, %union.tree_node** %type6, align 8, !tbaa !11
  %4 = load %union.tree_node** @size_int_type_wide.new_const, align 8, !tbaa !14
  %call7 = tail call i32 @force_fit_type(%union.tree_node* %4, i32 0)
  %5 = load %union.tree_node** @size_int_type_wide.new_const, align 8, !tbaa !14
  %static_flag = getelementptr inbounds %union.tree_node* %5, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %static_flag, align 8
  %bf.value = and i32 %call7, 1
  %bf.shl = shl nuw nsw i32 %bf.value, 18
  %bf.clear = and i32 %bf.load, -262145
  %bf.set = or i32 %bf.clear, %bf.shl
  store i32 %bf.set, i32* %static_flag, align 8
  %6 = load %union.tree_node** @size_int_type_wide.new_const, align 8, !tbaa !14
  %public_flag = getelementptr inbounds %union.tree_node* %6, i64 0, i32 0, i32 0, i32 2
  %bf.load10 = load i32* %public_flag, align 8
  %bf.shl12 = shl nuw nsw i32 %bf.value, 19
  %bf.clear13 = and i32 %bf.load10, -524289
  %bf.set14 = or i32 %bf.clear13, %bf.shl12
  store i32 %bf.set14, i32* %public_flag, align 8
  %7 = load %struct.htab** @size_int_type_wide.size_htab, align 8, !tbaa !14
  %8 = load %union.tree_node** @size_int_type_wide.new_const, align 8, !tbaa !14
  %9 = bitcast %union.tree_node* %8 to i8*
  %call15 = tail call i8** @htab_find_slot(%struct.htab* %7, i8* %9, i32 1) #1
  %10 = load i8** %call15, align 8, !tbaa !14
  %cmp16 = icmp eq i8* %10, null
  br i1 %cmp16, label %if.then18, label %if.else

if.then18:                                        ; preds = %if.end
  %11 = load %union.tree_node** @size_int_type_wide.new_const, align 8, !tbaa !14
  %12 = bitcast %union.tree_node* %11 to i8*
  store i8* %12, i8** %call15, align 8, !tbaa !14
  %call19 = tail call %union.tree_node* @make_node(i32 25) #1
  store %union.tree_node* %call19, %union.tree_node** @size_int_type_wide.new_const, align 8, !tbaa !14
  br label %return

if.else:                                          ; preds = %if.end
  %13 = bitcast i8* %10 to %union.tree_node*
  br label %return

return:                                           ; preds = %if.else, %if.then18
  %retval.0 = phi %union.tree_node* [ %11, %if.then18 ], [ %13, %if.else ]
  ret %union.tree_node* %retval.0
}

declare %struct.htab* @htab_create(i64, i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*) #3

; Function Attrs: nounwind readonly uwtable
define internal i32 @size_htab_hash(i8* nocapture readonly %x) #4 {
entry:
  %int_cst1 = getelementptr inbounds i8* %x, i64 32
  %high = getelementptr inbounds i8* %x, i64 40
  %0 = bitcast i8* %high to i64*
  %1 = load i64* %0, align 8, !tbaa !10
  %low = bitcast i8* %int_cst1 to i64*
  %2 = load i64* %low, align 8, !tbaa !1
  %xor = xor i64 %2, %1
  %type = getelementptr inbounds i8* %x, i64 8
  %3 = bitcast i8* %type to %union.tree_node**
  %4 = load %union.tree_node** %3, align 8, !tbaa !11
  %5 = ptrtoint %union.tree_node* %4 to i64
  %shr13 = lshr i64 %5, 3
  %xor5 = xor i64 %xor, %shr13
  %public_flag = getelementptr inbounds i8* %x, i64 16
  %6 = bitcast i8* %public_flag to i32*
  %bf.load = load i32* %6, align 8
  %7 = shl i32 %bf.load, 1
  %shl = and i32 %7, 1048576
  %conv714 = zext i32 %shl to i64
  %xor8 = xor i64 %xor5, %conv714
  %conv9 = trunc i64 %xor8 to i32
  ret i32 %conv9
}

; Function Attrs: nounwind readonly uwtable
define internal i32 @size_htab_eq(i8* nocapture readonly %x, i8* nocapture readonly %y) #4 {
entry:
  %high = getelementptr inbounds i8* %x, i64 40
  %0 = bitcast i8* %high to i64*
  %1 = load i64* %0, align 8, !tbaa !10
  %high4 = getelementptr inbounds i8* %y, i64 40
  %2 = bitcast i8* %high4 to i64*
  %3 = load i64* %2, align 8, !tbaa !10
  %cmp = icmp eq i64 %1, %3
  br i1 %cmp, label %land.lhs.true, label %land.end

land.lhs.true:                                    ; preds = %entry
  %int_cst3 = getelementptr inbounds i8* %y, i64 32
  %int_cst1 = getelementptr inbounds i8* %x, i64 32
  %low = bitcast i8* %int_cst1 to i64*
  %4 = load i64* %low, align 8, !tbaa !1
  %low9 = bitcast i8* %int_cst3 to i64*
  %5 = load i64* %low9, align 8, !tbaa !1
  %cmp10 = icmp eq i64 %4, %5
  br i1 %cmp10, label %land.lhs.true11, label %land.end

land.lhs.true11:                                  ; preds = %land.lhs.true
  %type = getelementptr inbounds i8* %x, i64 8
  %6 = bitcast i8* %type to %union.tree_node**
  %7 = load %union.tree_node** %6, align 8, !tbaa !11
  %type13 = getelementptr inbounds i8* %y, i64 8
  %8 = bitcast i8* %type13 to %union.tree_node**
  %9 = load %union.tree_node** %8, align 8, !tbaa !11
  %cmp14 = icmp eq %union.tree_node* %7, %9
  br i1 %cmp14, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true11
  %public_flag = getelementptr inbounds i8* %x, i64 16
  %10 = bitcast i8* %public_flag to i32*
  %bf.load = load i32* %10, align 8
  %public_flag17 = getelementptr inbounds i8* %y, i64 16
  %11 = bitcast i8* %public_flag17 to i32*
  %bf.load18 = load i32* %11, align 8
  %bf.lshr28 = xor i32 %bf.load18, %bf.load
  %12 = and i32 %bf.lshr28, 524288
  %cmp21 = icmp eq i32 %12, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true11, %land.lhs.true, %entry
  %13 = phi i1 [ false, %land.lhs.true11 ], [ false, %land.lhs.true ], [ false, %entry ], [ %cmp21, %land.rhs ]
  %land.ext = zext i1 %13 to i32
  ret i32 %land.ext
}

declare void @ggc_add_deletable_htab(i8*, i32 (i8*)*, void (i8*)*) #3

declare %union.tree_node* @make_node(i32) #3

declare void @ggc_add_tree_root(%union.tree_node**, i32) #3

declare i8** @htab_find_slot(%struct.htab*, i8*, i32) #3

; Function Attrs: nounwind uwtable
define %union.tree_node* @size_binop(i32 %code, %union.tree_node* %arg0, %union.tree_node* %arg1) #0 {
entry:
  %type1 = getelementptr inbounds %union.tree_node* %arg0, i64 0, i32 0, i32 0, i32 1
  %0 = load %union.tree_node** %type1, align 8, !tbaa !11
  %code3 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code3, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 6
  br i1 %cmp, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %entry
  %type4 = bitcast %union.tree_node* %0 to %struct.tree_type*
  %no_force_blk_flag = getelementptr inbounds %struct.tree_type* %type4, i64 0, i32 6
  %bf.load5 = load i32* %no_force_blk_flag, align 4
  %bf.clear6 = and i32 %bf.load5, 131072
  %tobool = icmp eq i32 %bf.clear6, 0
  br i1 %tobool, label %if.then, label %lor.lhs.false7

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %type9 = getelementptr inbounds %union.tree_node* %arg1, i64 0, i32 0, i32 0, i32 1
  %1 = load %union.tree_node** %type9, align 8, !tbaa !11
  %cmp10 = icmp eq %union.tree_node* %0, %1
  br i1 %cmp10, label %if.end, label %if.then

if.then:                                          ; preds = %lor.lhs.false7, %lor.lhs.false, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([13 x i8]* @.str, i64 0, i64 0), i32 2014, i8* getelementptr inbounds ([11 x i8]* @__FUNCTION__.size_binop, i64 0, i64 0)) #7
  unreachable

if.end:                                           ; preds = %lor.lhs.false7
  %code12 = getelementptr inbounds %union.tree_node* %arg0, i64 0, i32 0, i32 0, i32 2
  %bf.load13 = load i32* %code12, align 8
  %bf.clear14 = and i32 %bf.load13, 255
  %cmp15 = icmp eq i32 %bf.clear14, 25
  br i1 %cmp15, label %land.lhs.true, label %if.end43

land.lhs.true:                                    ; preds = %if.end
  %code17 = getelementptr inbounds %union.tree_node* %arg1, i64 0, i32 0, i32 0, i32 2
  %bf.load18 = load i32* %code17, align 8
  %bf.clear19 = and i32 %bf.load18, 255
  %cmp20 = icmp eq i32 %bf.clear19, 25
  br i1 %cmp20, label %if.then21, label %if.end43

if.then21:                                        ; preds = %land.lhs.true
  %cmp22 = icmp eq i32 %code, 59
  br i1 %cmp22, label %land.lhs.true23, label %if.else

land.lhs.true23:                                  ; preds = %if.then21
  %call = tail call i32 @integer_zerop(%union.tree_node* %arg0) #1
  %tobool24 = icmp eq i32 %call, 0
  br i1 %tobool24, label %land.lhs.true29, label %return

if.else:                                          ; preds = %if.then21
  %code.off = add i32 %code, -59
  %2 = icmp ult i32 %code.off, 2
  br i1 %2, label %land.lhs.true29, label %if.else33

land.lhs.true29:                                  ; preds = %land.lhs.true23, %if.else
  %call30 = tail call i32 @integer_zerop(%union.tree_node* %arg1) #1
  %tobool31 = icmp eq i32 %call30, 0
  br i1 %tobool31, label %if.else33, label %return

if.else33:                                        ; preds = %land.lhs.true29, %if.else
  %cmp34 = icmp eq i32 %code, 61
  br i1 %cmp34, label %land.lhs.true35, label %if.end41

land.lhs.true35:                                  ; preds = %if.else33
  %call36 = tail call i32 @integer_onep(%union.tree_node* %arg0) #1
  %tobool37 = icmp eq i32 %call36, 0
  br i1 %tobool37, label %if.end41, label %return

if.end41:                                         ; preds = %land.lhs.true35, %if.else33
  %call42 = tail call fastcc %union.tree_node* @int_const_binop(i32 %code, %union.tree_node* %arg0, %union.tree_node* %arg1)
  br label %return

if.end43:                                         ; preds = %land.lhs.true, %if.end
  %3 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !14
  %cmp44 = icmp eq %union.tree_node* %3, %arg0
  %cmp46 = icmp eq %union.tree_node* %3, %arg1
  %or.cond = or i1 %cmp44, %cmp46
  br i1 %or.cond, label %return, label %if.end48

if.end48:                                         ; preds = %if.end43
  %call49 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %code, %union.tree_node* %0, %union.tree_node* %arg0, %union.tree_node* %arg1) #1
  %call50 = tail call %union.tree_node* @fold(%union.tree_node* %call49)
  br label %return

return:                                           ; preds = %if.end43, %land.lhs.true35, %land.lhs.true29, %land.lhs.true23, %if.end48, %if.end41
  %retval.0 = phi %union.tree_node* [ %call42, %if.end41 ], [ %call50, %if.end48 ], [ %arg1, %land.lhs.true23 ], [ %arg0, %land.lhs.true29 ], [ %arg1, %land.lhs.true35 ], [ %3, %if.end43 ]
  ret %union.tree_node* %retval.0
}

declare i32 @integer_zerop(%union.tree_node*) #3

declare i32 @integer_onep(%union.tree_node*) #3

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @int_const_binop(i32 %code, %union.tree_node* nocapture readonly %arg1, %union.tree_node* nocapture readonly %arg2) #0 {
entry:
  %s1l.i = alloca i64, align 8
  %s1h.i = alloca i64, align 8
  %low = alloca i64, align 8
  %hi = alloca i64, align 8
  %garbagel = alloca i64, align 8
  %garbageh = alloca i64, align 8
  %type1 = getelementptr inbounds %union.tree_node* %arg1, i64 0, i32 0, i32 0, i32 1
  %0 = load %union.tree_node** %type1, align 8, !tbaa !11
  %unsigned_flag = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %unsigned_flag, align 8
  %bf.lshr = lshr i32 %bf.load, 13
  %bf.clear = and i32 %bf.lshr, 1
  %bf.clear6 = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear6, 6
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %entry
  %type7 = bitcast %union.tree_node* %0 to %struct.tree_type*
  %no_force_blk_flag = getelementptr inbounds %struct.tree_type* %type7, i64 0, i32 6
  %bf.load8 = load i32* %no_force_blk_flag, align 4
  %bf.clear10 = and i32 %bf.load8, 131072
  %tobool = icmp ne i32 %bf.clear10, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %1 = phi i1 [ false, %entry ], [ %tobool, %land.rhs ]
  %int_cst11 = getelementptr inbounds %union.tree_node* %arg1, i64 0, i32 0, i32 2
  %low12 = bitcast i32* %int_cst11 to i64*
  %2 = load i64* %low12, align 8, !tbaa !1
  %high = getelementptr inbounds i32* %int_cst11, i64 2
  %3 = bitcast i32* %high to i64*
  %4 = load i64* %3, align 8, !tbaa !10
  %int_cst16 = getelementptr inbounds %union.tree_node* %arg2, i64 0, i32 0, i32 2
  %low17 = bitcast i32* %int_cst16 to i64*
  %5 = load i64* %low17, align 8, !tbaa !1
  %high20 = getelementptr inbounds i32* %int_cst16, i64 2
  %6 = bitcast i32* %high20 to i64*
  %7 = load i64* %6, align 8, !tbaa !10
  switch i32 %code, label %sw.default [
    i32 86, label %sw.bb
    i32 87, label %sw.bb22
    i32 88, label %sw.bb24
    i32 89, label %sw.bb26
    i32 83, label %sw.bb30
    i32 82, label %sw.bb31
    i32 85, label %sw.bb36
    i32 84, label %sw.bb38
    i32 59, label %sw.bb43
    i32 60, label %sw.bb44
    i32 61, label %sw.bb52
    i32 62, label %sw.bb54
    i32 64, label %sw.bb54
    i32 63, label %sw.bb54
    i32 71, label %sw.bb54
    i32 65, label %sw.bb83
    i32 66, label %sw.bb105
    i32 68, label %sw.bb105
    i32 67, label %sw.bb105
    i32 69, label %sw.bb139
    i32 78, label %sw.bb141
    i32 79, label %sw.bb141
  ]

sw.bb:                                            ; preds = %land.end
  %or = or i64 %5, %2
  store i64 %or, i64* %low, align 8, !tbaa !13
  %or21 = or i64 %7, %4
  store i64 %or21, i64* %hi, align 8, !tbaa !13
  br label %sw.epilog

sw.bb22:                                          ; preds = %land.end
  %xor = xor i64 %5, %2
  store i64 %xor, i64* %low, align 8, !tbaa !13
  %xor23 = xor i64 %7, %4
  store i64 %xor23, i64* %hi, align 8, !tbaa !13
  br label %sw.epilog

sw.bb24:                                          ; preds = %land.end
  %and = and i64 %5, %2
  store i64 %and, i64* %low, align 8, !tbaa !13
  %and25 = and i64 %7, %4
  store i64 %and25, i64* %hi, align 8, !tbaa !13
  br label %sw.epilog

sw.bb26:                                          ; preds = %land.end
  %neg = xor i64 %5, -1
  %and27 = and i64 %2, %neg
  store i64 %and27, i64* %low, align 8, !tbaa !13
  %neg28 = xor i64 %7, -1
  %and29 = and i64 %4, %neg28
  store i64 %and29, i64* %hi, align 8, !tbaa !13
  br label %sw.epilog

sw.bb30:                                          ; preds = %land.end
  %sub = sub i64 0, %5
  br label %sw.bb31

sw.bb31:                                          ; preds = %land.end, %sw.bb30
  %int2l.0 = phi i64 [ %5, %land.end ], [ %sub, %sw.bb30 ]
  %type32 = bitcast %union.tree_node* %0 to %struct.tree_type*
  %precision = getelementptr inbounds %struct.tree_type* %type32, i64 0, i32 6
  %bf.load33 = load i32* %precision, align 4
  %bf.clear34 = and i32 %bf.load33, 511
  %8 = xor i32 %bf.clear, 1
  call void @lshift_double(i64 %2, i64 %4, i64 %int2l.0, i32 %bf.clear34, i64* %low, i64* %hi, i32 %8)
  br label %sw.epilog

sw.bb36:                                          ; preds = %land.end
  %sub37 = sub i64 0, %5
  br label %sw.bb38

sw.bb38:                                          ; preds = %land.end, %sw.bb36
  %int2l.1 = phi i64 [ %5, %land.end ], [ %sub37, %sw.bb36 ]
  %type39 = bitcast %union.tree_node* %0 to %struct.tree_type*
  %precision40 = getelementptr inbounds %struct.tree_type* %type39, i64 0, i32 6
  %bf.load41 = load i32* %precision40, align 4
  %bf.clear42 = and i32 %bf.load41, 511
  %9 = bitcast i64* %s1l.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9) #1
  %10 = bitcast i64* %s1h.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %10) #1
  %conv.i = zext i32 %bf.clear42 to i64
  %rem.i = srem i64 %int2l.1, %conv.i
  %cmp.i = icmp slt i64 %rem.i, 0
  %add.i = select i1 %cmp.i, i64 %conv.i, i64 0
  %add.rem.i = add nsw i64 %add.i, %rem.i
  call void @lshift_double(i64 %2, i64 %4, i64 %add.rem.i, i32 %bf.clear42, i64* %s1l.i, i64* %s1h.i, i32 0) #1
  %sub.i = sub nsw i64 %conv.i, %add.rem.i
  %cmp.i.i = icmp sgt i64 %sub.i, 127
  br i1 %cmp.i.i, label %if.end11.i.i, label %if.else.i.i

if.else.i.i:                                      ; preds = %sw.bb38
  %cmp1.i.i = icmp sgt i64 %sub.i, 63
  br i1 %cmp1.i.i, label %if.then2.i.i, label %if.else5.i.i

if.then2.i.i:                                     ; preds = %if.else.i.i
  %sub3.i.i = add nsw i64 %sub.i, -64
  %shr4.i.i = lshr i64 %4, %sub3.i.i
  br label %if.end11.i.i

if.else5.i.i:                                     ; preds = %if.else.i.i
  %shr6.i.i = lshr i64 %4, %sub.i
  %shr7.i.i = lshr i64 %2, %sub.i
  %sub9.i.i = sub i64 63, %sub.i
  %shl.i.i = shl i64 %4, %sub9.i.i
  %shl10.i.i = shl i64 %shl.i.i, 1
  %or.i.i = or i64 %shl10.i.i, %shr7.i.i
  br label %if.end11.i.i

if.end11.i.i:                                     ; preds = %if.else5.i.i, %if.then2.i.i, %sw.bb38
  %s2l.0.load20.i = phi i64 [ %or.i.i, %if.else5.i.i ], [ %shr4.i.i, %if.then2.i.i ], [ 0, %sw.bb38 ]
  %s2h.0.load18.i = phi i64 [ %shr6.i.i, %if.else5.i.i ], [ 0, %if.then2.i.i ], [ 0, %sw.bb38 ]
  %cmp12.i.i = icmp sgt i64 %add.rem.i, 0
  br i1 %cmp12.i.i, label %if.else15.i.i, label %lrotate_double.exit

if.else15.i.i:                                    ; preds = %if.end11.i.i
  %cmp18.i.i = icmp sgt i64 %add.rem.i, 127
  br i1 %cmp18.i.i, label %lrotate_double.exit, label %if.else21.i.i

if.else21.i.i:                                    ; preds = %if.else15.i.i
  %cmp24.i.i = icmp sgt i64 %add.rem.i, 63
  br i1 %cmp24.i.i, label %if.then26.i.i, label %if.else36.i.i

if.then26.i.i:                                    ; preds = %if.else21.i.i
  %sub29.i.i = add nsw i64 %add.rem.i, -64
  %shl30.i.i = shl i64 -1, %sub29.i.i
  %neg.i.i = xor i64 %shl30.i.i, -1
  %and.i.i = and i64 %s2h.0.load18.i, %neg.i.i
  br label %lrotate_double.exit

if.else36.i.i:                                    ; preds = %if.else21.i.i
  %shl39.i.i = shl i64 -1, %add.rem.i
  %neg40.i.i = xor i64 %shl39.i.i, -1
  %and41.i.i = and i64 %s2l.0.load20.i, %neg40.i.i
  br label %lrotate_double.exit

lrotate_double.exit:                              ; preds = %if.end11.i.i, %if.else15.i.i, %if.then26.i.i, %if.else36.i.i
  %s2l.0.load19.i = phi i64 [ %s2l.0.load20.i, %if.else15.i.i ], [ %s2l.0.load20.i, %if.then26.i.i ], [ %and41.i.i, %if.else36.i.i ], [ 0, %if.end11.i.i ]
  %s2h.0.load17.i = phi i64 [ %s2h.0.load18.i, %if.else15.i.i ], [ %and.i.i, %if.then26.i.i ], [ 0, %if.else36.i.i ], [ 0, %if.end11.i.i ]
  %11 = load i64* %s1l.i, align 8, !tbaa !13
  %or.i = or i64 %11, %s2l.0.load19.i
  store i64 %or.i, i64* %low, align 8, !tbaa !13
  %12 = load i64* %s1h.i, align 8, !tbaa !13
  %or4.i = or i64 %12, %s2h.0.load17.i
  store i64 %or4.i, i64* %hi, align 8, !tbaa !13
  call void @llvm.lifetime.end(i64 8, i8* %9) #1
  call void @llvm.lifetime.end(i64 8, i8* %10) #1
  br label %sw.epilog

sw.bb43:                                          ; preds = %land.end
  %uadd.i = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %2, i64 %5) #1
  %13 = extractvalue { i64, i1 } %uadd.i, 0
  %add1.i = add nsw i64 %7, %4
  %cmp.i17 = extractvalue { i64, i1 } %uadd.i, 1
  %conv2.i = zext i1 %cmp.i17 to i64
  %add3.i = add nsw i64 %add1.i, %conv2.i
  store i64 %13, i64* %low, align 8, !tbaa !13
  store i64 %add3.i, i64* %hi, align 8, !tbaa !13
  %xor.i = xor i64 %4, -9223372036854775808
  %neg.i = xor i64 %xor.i, %7
  %xor4.i = xor i64 %add3.i, %4
  %and.i = and i64 %xor4.i, %neg.i
  %and.lobit.i = lshr i64 %and.i, 63
  %14 = trunc i64 %and.lobit.i to i32
  br label %sw.epilog

sw.bb44:                                          ; preds = %land.end
  %cmp.i18 = icmp eq i64 %5, 0
  br i1 %cmp.i18, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %sw.bb44
  store i64 0, i64* %low, align 8, !tbaa !13
  %sub.i19 = sub nsw i64 0, %7
  br label %neg_double.exit

if.else.i:                                        ; preds = %sw.bb44
  %sub2.i = sub i64 0, %5
  store i64 %sub2.i, i64* %low, align 8, !tbaa !13
  %neg.i22 = xor i64 %7, -1
  br label %neg_double.exit

neg_double.exit:                                  ; preds = %if.then.i, %if.else.i
  %15 = phi i64 [ %sub2.i, %if.else.i ], [ 0, %if.then.i ]
  %storemerge = phi i64 [ %neg.i22, %if.else.i ], [ %sub.i19, %if.then.i ]
  %uadd.i23 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %2, i64 %15) #1
  %16 = extractvalue { i64, i1 } %uadd.i23, 0
  %add1.i24 = add nsw i64 %storemerge, %4
  %cmp.i25 = extractvalue { i64, i1 } %uadd.i23, 1
  %conv2.i26 = zext i1 %cmp.i25 to i64
  %add3.i27 = add nsw i64 %add1.i24, %conv2.i26
  store i64 %16, i64* %low, align 8, !tbaa !13
  store i64 %add3.i27, i64* %hi, align 8, !tbaa !13
  %xor4.i30 = xor i64 %add3.i27, %4
  %xor47 = xor i64 %7, -9223372036854775808
  %neg48 = xor i64 %xor47, %add3.i27
  %and50 = and i64 %xor4.i30, %neg48
  %and50.lobit = lshr i64 %and50, 63
  %17 = trunc i64 %and50.lobit to i32
  br label %sw.epilog

sw.bb52:                                          ; preds = %land.end
  %call53 = call i32 @mul_double(i64 %2, i64 %4, i64 %5, i64 %7, i64* %low, i64* %hi)
  br label %sw.epilog

sw.bb54:                                          ; preds = %land.end, %land.end, %land.end, %land.end
  %cmp55 = icmp eq i64 %7, 0
  %cmp57 = icmp sgt i64 %5, 0
  %or.cond = and i1 %cmp55, %cmp57
  br i1 %or.cond, label %land.lhs.true59, label %sw.bb83

land.lhs.true59:                                  ; preds = %sw.bb54
  %static_flag = getelementptr inbounds %union.tree_node* %arg1, i64 0, i32 0, i32 0, i32 2
  %bf.load61 = load i32* %static_flag, align 8
  %bf.clear63 = and i32 %bf.load61, 262144
  %tobool64 = icmp eq i32 %bf.clear63, 0
  br i1 %tobool64, label %land.lhs.true65, label %sw.bb83

land.lhs.true65:                                  ; preds = %land.lhs.true59
  %static_flag67 = getelementptr inbounds %union.tree_node* %arg2, i64 0, i32 0, i32 0, i32 2
  %bf.load68 = load i32* %static_flag67, align 8
  %bf.clear70 = and i32 %bf.load68, 262144
  %tobool71 = icmp eq i32 %bf.clear70, 0
  %cmp73 = icmp eq i64 %4, 0
  %or.cond303 = and i1 %tobool71, %cmp73
  %cmp76 = icmp sgt i64 %2, -1
  %or.cond304 = and i1 %or.cond303, %cmp76
  br i1 %or.cond304, label %if.then, label %sw.bb83

if.then:                                          ; preds = %land.lhs.true65
  %cmp78 = icmp eq i32 %code, 63
  br i1 %cmp78, label %if.then80, label %if.end

if.then80:                                        ; preds = %if.then
  %sub81 = add i64 %2, -1
  %add = add i64 %sub81, %5
  br label %if.end

if.end:                                           ; preds = %if.then80, %if.then
  %int1l.0 = phi i64 [ %add, %if.then80 ], [ %2, %if.then ]
  %div = udiv i64 %int1l.0, %5
  store i64 %div, i64* %low, align 8, !tbaa !13
  store i64 0, i64* %hi, align 8, !tbaa !13
  br label %sw.epilog

sw.bb83:                                          ; preds = %land.lhs.true59, %sw.bb54, %land.lhs.true65, %land.end
  %cmp84 = icmp eq i64 %7, 0
  %cmp87 = icmp eq i64 %5, 1
  %or.cond305 = and i1 %cmp84, %cmp87
  br i1 %or.cond305, label %if.then89, label %if.end90

if.then89:                                        ; preds = %sw.bb83
  store i64 %2, i64* %low, align 8, !tbaa !13
  store i64 %4, i64* %hi, align 8, !tbaa !13
  br label %sw.epilog

if.end90:                                         ; preds = %sw.bb83
  %notlhs = icmp ne i64 %2, %5
  %notrhs = icmp ne i64 %4, %7
  %or.cond12.not = or i1 %notrhs, %notlhs
  %18 = or i64 %4, %2
  %19 = icmp eq i64 %18, 0
  %or.cond14 = or i1 %or.cond12.not, %19
  br i1 %or.cond14, label %if.end103, label %if.then102

if.then102:                                       ; preds = %if.end90
  store i64 1, i64* %low, align 8, !tbaa !13
  store i64 0, i64* %hi, align 8, !tbaa !13
  br label %sw.epilog

if.end103:                                        ; preds = %if.end90
  %call104 = call i32 @div_and_round_double(i32 %code, i32 %bf.clear, i64 %2, i64 %4, i64 %5, i64 %7, i64* %low, i64* %hi, i64* %garbagel, i64* %garbageh)
  br label %sw.epilog

sw.bb105:                                         ; preds = %land.end, %land.end, %land.end
  %cmp106 = icmp eq i64 %7, 0
  %cmp109 = icmp sgt i64 %5, 0
  %or.cond307 = and i1 %cmp106, %cmp109
  br i1 %or.cond307, label %land.lhs.true111, label %sw.bb139

land.lhs.true111:                                 ; preds = %sw.bb105
  %static_flag113 = getelementptr inbounds %union.tree_node* %arg1, i64 0, i32 0, i32 0, i32 2
  %bf.load114 = load i32* %static_flag113, align 8
  %bf.clear116 = and i32 %bf.load114, 262144
  %tobool117 = icmp eq i32 %bf.clear116, 0
  br i1 %tobool117, label %land.lhs.true118, label %sw.bb139

land.lhs.true118:                                 ; preds = %land.lhs.true111
  %static_flag120 = getelementptr inbounds %union.tree_node* %arg2, i64 0, i32 0, i32 0, i32 2
  %bf.load121 = load i32* %static_flag120, align 8
  %bf.clear123 = and i32 %bf.load121, 262144
  %tobool124 = icmp eq i32 %bf.clear123, 0
  %cmp126 = icmp eq i64 %4, 0
  %or.cond308 = and i1 %tobool124, %cmp126
  %cmp129 = icmp sgt i64 %2, -1
  %or.cond309 = and i1 %or.cond308, %cmp129
  br i1 %or.cond309, label %if.then131, label %sw.bb139

if.then131:                                       ; preds = %land.lhs.true118
  %cmp132 = icmp eq i32 %code, 67
  br i1 %cmp132, label %if.then134, label %if.end137

if.then134:                                       ; preds = %if.then131
  %sub135 = add i64 %2, -1
  %add136 = add i64 %sub135, %5
  br label %if.end137

if.end137:                                        ; preds = %if.then134, %if.then131
  %int1l.1 = phi i64 [ %add136, %if.then134 ], [ %2, %if.then131 ]
  %rem = urem i64 %int1l.1, %5
  store i64 %rem, i64* %low, align 8, !tbaa !13
  store i64 0, i64* %hi, align 8, !tbaa !13
  br label %sw.epilog

sw.bb139:                                         ; preds = %land.lhs.true111, %sw.bb105, %land.lhs.true118, %land.end
  %call140 = call i32 @div_and_round_double(i32 %code, i32 %bf.clear, i64 %2, i64 %4, i64 %5, i64 %7, i64* %garbagel, i64* %garbageh, i64* %low, i64* %hi)
  br label %sw.epilog

sw.bb141:                                         ; preds = %land.end, %land.end
  %tobool142 = icmp eq i32 %bf.clear, 0
  br i1 %tobool142, label %if.else, label %if.then143

if.then143:                                       ; preds = %sw.bb141
  %cmp144 = icmp ult i64 %4, %7
  br i1 %cmp144, label %if.end167.thr_comm, label %lor.rhs

lor.rhs:                                          ; preds = %if.then143
  %cmp146 = icmp eq i64 %4, %7
  %cmp149 = icmp ult i64 %2, %5
  %cmp149. = and i1 %cmp146, %cmp149
  br label %if.end167

if.else:                                          ; preds = %sw.bb141
  %cmp154 = icmp slt i64 %4, %7
  br i1 %cmp154, label %if.end167.thr_comm, label %lor.rhs156

lor.rhs156:                                       ; preds = %if.else
  %cmp157 = icmp eq i64 %4, %7
  %cmp160 = icmp ult i64 %2, %5
  %cmp160. = and i1 %cmp157, %cmp160
  br label %if.end167

if.end167.thr_comm:                               ; preds = %if.then143, %if.else
  store i64 1, i64* %low, align 8, !tbaa !13
  %cmp171tmp36 = icmp eq i32 %code, 78
  br i1 %cmp171tmp36, label %if.then173, label %if.else174

if.end167:                                        ; preds = %lor.rhs156, %lor.rhs
  %.sink15 = phi i1 [ %cmp160., %lor.rhs156 ], [ %cmp149., %lor.rhs ]
  %conv153 = zext i1 %.sink15 to i64
  store i64 %conv153, i64* %low, align 8, !tbaa !13
  %cmp168 = icmp eq i32 %code, 78
  %cmp171tmp = xor i1 %.sink15, %cmp168
  br i1 %cmp171tmp, label %if.else174, label %if.then173

if.then173:                                       ; preds = %if.end167.thr_comm, %if.end167
  store i64 %2, i64* %low, align 8, !tbaa !13
  store i64 %4, i64* %hi, align 8, !tbaa !13
  br label %sw.epilog

if.else174:                                       ; preds = %if.end167.thr_comm, %if.end167
  store i64 %5, i64* %low, align 8, !tbaa !13
  store i64 %7, i64* %hi, align 8, !tbaa !13
  br label %sw.epilog

sw.default:                                       ; preds = %land.end
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8]* @.str, i64 0, i64 0), i32 1671, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.int_const_binop, i64 0, i64 0)) #7
  unreachable

sw.epilog:                                        ; preds = %if.then173, %if.else174, %sw.bb139, %if.end137, %if.end103, %if.then102, %if.then89, %if.end, %sw.bb52, %neg_double.exit, %sw.bb43, %lrotate_double.exit, %sw.bb31, %sw.bb26, %sw.bb24, %sw.bb22, %sw.bb
  %overflow.0 = phi i32 [ 0, %if.then173 ], [ 0, %if.else174 ], [ %call140, %sw.bb139 ], [ 0, %if.end137 ], [ 0, %if.then89 ], [ %call104, %if.end103 ], [ 0, %if.then102 ], [ 0, %if.end ], [ %call53, %sw.bb52 ], [ %17, %neg_double.exit ], [ %14, %sw.bb43 ], [ 0, %lrotate_double.exit ], [ 0, %sw.bb31 ], [ 0, %sw.bb26 ], [ 0, %sw.bb24 ], [ 0, %sw.bb22 ], [ 0, %sw.bb ]
  %no_overflow.0 = phi i32 [ 0, %if.then173 ], [ 0, %if.else174 ], [ 0, %sw.bb139 ], [ 0, %if.end137 ], [ 0, %if.then89 ], [ 0, %if.end103 ], [ 0, %if.then102 ], [ 0, %if.end ], [ 0, %sw.bb52 ], [ 0, %neg_double.exit ], [ 0, %sw.bb43 ], [ 0, %lrotate_double.exit ], [ 1, %sw.bb31 ], [ 0, %sw.bb26 ], [ 0, %sw.bb24 ], [ 0, %sw.bb22 ], [ 0, %sw.bb ]
  br i1 %1, label %land.lhs.true177, label %sw.epilog.if.else206_crit_edge

sw.epilog.if.else206_crit_edge:                   ; preds = %sw.epilog
  %.pre = load i64* %low, align 8, !tbaa !13
  %.pre33 = load i64* %hi, align 8, !tbaa !13
  br label %if.else206

land.lhs.true177:                                 ; preds = %sw.epilog
  %20 = load i64* %hi, align 8, !tbaa !13
  %cmp178 = icmp eq i64 %20, 0
  %21 = load i64* %low, align 8
  %cmp181 = icmp sgt i64 %21, -1
  %or.cond310 = and i1 %cmp178, %cmp181
  br i1 %or.cond310, label %land.lhs.true188, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true177
  %cmp183 = icmp eq i64 %20, -1
  %cmp186 = icmp slt i64 %21, 0
  %or.cond311 = and i1 %cmp183, %cmp186
  %cmp189 = icmp eq i32 %overflow.0, 0
  %or.cond312 = and i1 %or.cond311, %cmp189
  br i1 %or.cond312, label %land.lhs.true191, label %if.else206

land.lhs.true188:                                 ; preds = %land.lhs.true177
  %cmp189.old = icmp eq i32 %overflow.0, 0
  br i1 %cmp189.old, label %land.lhs.true191, label %if.else206

land.lhs.true191:                                 ; preds = %lor.lhs.false, %land.lhs.true188
  %public_flag = getelementptr inbounds %union.tree_node* %arg1, i64 0, i32 0, i32 0, i32 2
  %bf.load193 = load i32* %public_flag, align 8
  %bf.clear195 = and i32 %bf.load193, 524288
  %tobool196 = icmp eq i32 %bf.clear195, 0
  br i1 %tobool196, label %land.lhs.true197, label %if.else206

land.lhs.true197:                                 ; preds = %land.lhs.true191
  %public_flag199 = getelementptr inbounds %union.tree_node* %arg2, i64 0, i32 0, i32 0, i32 2
  %bf.load200 = load i32* %public_flag199, align 8
  %bf.clear202 = and i32 %bf.load200, 524288
  %tobool203 = icmp eq i32 %bf.clear202, 0
  br i1 %tobool203, label %if.then204, label %if.else206

if.then204:                                       ; preds = %land.lhs.true197
  %call205 = call %union.tree_node* @size_int_type_wide(i64 %21, %union.tree_node* %0)
  br label %return

if.else206:                                       ; preds = %sw.epilog.if.else206_crit_edge, %land.lhs.true197, %land.lhs.true191, %land.lhs.true188, %lor.lhs.false
  %22 = phi i64 [ %.pre33, %sw.epilog.if.else206_crit_edge ], [ %20, %land.lhs.true197 ], [ %20, %land.lhs.true191 ], [ 0, %land.lhs.true188 ], [ %20, %lor.lhs.false ]
  %23 = phi i64 [ %.pre, %sw.epilog.if.else206_crit_edge ], [ %21, %land.lhs.true197 ], [ %21, %land.lhs.true191 ], [ %21, %land.lhs.true188 ], [ %21, %lor.lhs.false ]
  %call207 = call %union.tree_node* @build_int_2_wide(i64 %23, i64 %22) #1
  %24 = load %union.tree_node** %type1, align 8, !tbaa !11
  %type211 = getelementptr inbounds %union.tree_node* %call207, i64 0, i32 0, i32 0, i32 1
  store %union.tree_node* %24, %union.tree_node** %type211, align 8, !tbaa !11
  %tobool221 = icmp eq i32 %bf.clear, 0
  %or.cond316 = or i1 %tobool221, %1
  %tobool225 = icmp ne i32 %overflow.0, 0
  %tobool225. = and i1 %or.cond316, %tobool225
  %land.ext227 = zext i1 %tobool225. to i32
  %call228 = call i32 @force_fit_type(%union.tree_node* %call207, i32 %land.ext227)
  %lnot232 = icmp eq i32 %no_overflow.0, 0
  %not.tobool229 = icmp ne i32 %call228, 0
  %.lnot232 = and i1 %lnot232, %not.tobool229
  %land.ext220 = zext i1 %.lnot232 to i32
  %public_flag237 = getelementptr inbounds %union.tree_node* %arg1, i64 0, i32 0, i32 0, i32 2
  %bf.load238 = load i32* %public_flag237, align 8
  %public_flag243 = getelementptr inbounds %union.tree_node* %arg2, i64 0, i32 0, i32 0, i32 2
  %bf.load244 = load i32* %public_flag243, align 8
  %public_flag249 = getelementptr inbounds %union.tree_node* %call207, i64 0, i32 0, i32 0, i32 2
  %bf.load250 = load i32* %public_flag249, align 8
  %or2419 = shl nuw nsw i32 %land.ext220, 19
  %bf.lshr23910 = or i32 %bf.load244, %bf.load238
  %bf.lshr23910.masked = and i32 %bf.lshr23910, 524288
  %bf.shl = or i32 %bf.lshr23910.masked, %or2419
  %bf.clear251 = and i32 %bf.load250, -524289
  %bf.set = or i32 %bf.shl, %bf.clear251
  store i32 %bf.set, i32* %public_flag249, align 8
  %tobool259 = icmp eq i32 %bf.shl, 0
  %or.cond16 = and i1 %1, %tobool259
  br i1 %or.cond16, label %land.lhs.true260, label %if.end278

land.lhs.true260:                                 ; preds = %if.else206
  %int_cst262 = getelementptr inbounds %union.tree_node* %call207, i64 0, i32 0, i32 2
  %high263 = getelementptr inbounds i32* %int_cst262, i64 2
  %25 = bitcast i32* %high263 to i64*
  %26 = load i64* %25, align 8, !tbaa !10
  %27 = load i64* %hi, align 8, !tbaa !13
  %cmp264 = icmp eq i64 %26, %27
  br i1 %cmp264, label %lor.lhs.false266, label %if.then272

lor.lhs.false266:                                 ; preds = %land.lhs.true260
  %low269 = bitcast i32* %int_cst262 to i64*
  %28 = load i64* %low269, align 8, !tbaa !1
  %29 = load i64* %low, align 8, !tbaa !13
  %cmp270 = icmp eq i64 %28, %29
  br i1 %cmp270, label %if.end278, label %if.then272

if.then272:                                       ; preds = %lor.lhs.false266, %land.lhs.true260
  %bf.set277 = or i32 %bf.load250, 524288
  store i32 %bf.set277, i32* %public_flag249, align 8
  br label %if.end278

if.end278:                                        ; preds = %lor.lhs.false266, %if.then272, %if.else206
  %bf.load281 = phi i32 [ %bf.set, %lor.lhs.false266 ], [ %bf.set277, %if.then272 ], [ %bf.set, %if.else206 ]
  %bf.load286 = load i32* %public_flag237, align 8
  %bf.load292 = load i32* %public_flag243, align 8
  %30 = lshr i32 %bf.load281, 1
  %bf.lshr2876 = or i32 %30, %bf.load286
  %bf.lshr2934 = or i32 %bf.lshr2876, %bf.load292
  %bf.shl300 = and i32 %bf.lshr2934, 262144
  %bf.clear301 = and i32 %bf.load281, -262145
  %bf.set302 = or i32 %bf.shl300, %bf.clear301
  store i32 %bf.set302, i32* %public_flag249, align 8
  br label %return

return:                                           ; preds = %if.end278, %if.then204
  %retval.0 = phi %union.tree_node* [ %call207, %if.end278 ], [ %call205, %if.then204 ]
  ret %union.tree_node* %retval.0
}

; Function Attrs: nounwind uwtable
define %union.tree_node* @fold(%union.tree_node* %expr) #0 {
entry:
  %lbitpos.i = alloca i64, align 8
  %lbitsize.i = alloca i64, align 8
  %rbitpos.i = alloca i64, align 8
  %rbitsize.i = alloca i64, align 8
  %lmode.i = alloca i32, align 4
  %rmode.i = alloca i32, align 4
  %lunsignedp.i = alloca i32, align 4
  %runsignedp.i = alloca i32, align 4
  %lvolatilep.i = alloca i32, align 4
  %rvolatilep.i = alloca i32, align 4
  %offset.i = alloca %union.tree_node*, align 8
  %in0_p.i = alloca i32, align 4
  %in1_p.i = alloca i32, align 4
  %in_p.i = alloca i32, align 4
  %low0.i = alloca %union.tree_node*, align 8
  %low1.i = alloca %union.tree_node*, align 8
  %low.i11098 = alloca %union.tree_node*, align 8
  %high0.i = alloca %union.tree_node*, align 8
  %high1.i = alloca %union.tree_node*, align 8
  %high.i11099 = alloca %union.tree_node*, align 8
  %x.i = alloca %struct.realvaluetype, align 8
  %l.i = alloca %struct.realvaluetype, align 8
  %u.i = alloca %struct.realvaluetype, align 8
  %tmp148.i = alloca %struct.realvaluetype, align 8
  %low170.i = alloca i64, align 8
  %high172.i = alloca i64, align 8
  %args.i = alloca %struct.fc_args, align 8
  %agg.tmp = alloca %struct.realvaluetype, align 8
  %agg.tmp1723 = alloca %struct.realvaluetype, align 8
  %con0 = alloca %union.tree_node*, align 8
  %lit0 = alloca %union.tree_node*, align 8
  %minus_lit0 = alloca %union.tree_node*, align 8
  %con1 = alloca %union.tree_node*, align 8
  %lit1 = alloca %union.tree_node*, align 8
  %minus_lit1 = alloca %union.tree_node*, align 8
  %agg.tmp3008 = alloca %struct.realvaluetype, align 8
  %r = alloca %struct.realvaluetype, align 8
  %agg.tmp4439 = alloca %struct.realvaluetype, align 8
  %cval1 = alloca %union.tree_node*, align 8
  %cval2 = alloca %union.tree_node*, align 8
  %save_p = alloca i32, align 4
  %type1 = getelementptr inbounds %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 1
  %0 = load %union.tree_node** %type1, align 8, !tbaa !11
  %code3 = getelementptr inbounds %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code3, align 8
  %bf.clear = and i32 %bf.load, 255
  %idxprom9687 = zext i32 %bf.clear to i64
  %arrayidx = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom9687
  %1 = load i8* %arrayidx, align 1, !tbaa !15
  switch i32 %bf.clear, label %if.end [
    i32 120, label %return
    i32 118, label %land.lhs.true
  ]

land.lhs.true:                                    ; preds = %entry
  %operands = getelementptr inbounds %union.tree_node* %expr, i64 0, i32 0, i32 2
  %arrayidx7 = getelementptr inbounds i32* %operands, i64 4
  %2 = bitcast i32* %arrayidx7 to %struct.rtx_def**
  %3 = load %struct.rtx_def** %2, align 8, !tbaa !14
  %cmp8 = icmp ne %struct.rtx_def* %3, null
  %cmp10 = icmp eq i8 %1, 99
  %or.cond9763 = or i1 %cmp8, %cmp10
  br i1 %or.cond9763, label %return, label %if.else124

if.end:                                           ; preds = %entry
  %cmp10.old = icmp eq i8 %1, 99
  br i1 %cmp10.old, label %return, label %if.end13

if.end13:                                         ; preds = %if.end
  switch i32 %bf.clear, label %if.else124 [
    i32 115, label %if.then22
    i32 114, label %if.then22
    i32 76, label %if.then22
  ]

if.then22:                                        ; preds = %if.end13, %if.end13, %if.end13
  %operands24 = getelementptr inbounds %union.tree_node* %expr, i64 0, i32 0, i32 2
  %arrayidx25 = bitcast i32* %operands24 to %union.tree_node**
  %4 = load %union.tree_node** %arrayidx25, align 8, !tbaa !14
  %cmp26 = icmp eq %union.tree_node* %4, null
  br i1 %cmp26, label %if.end321, label %while.cond.preheader

while.cond.preheader:                             ; preds = %if.then22
  %5 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !14
  br label %while.cond

while.cond:                                       ; preds = %while.cond.preheader, %land.rhs
  %arg0.0 = phi %union.tree_node* [ %6, %land.rhs ], [ %4, %while.cond.preheader ]
  %code30 = getelementptr inbounds %union.tree_node* %arg0.0, i64 0, i32 0, i32 0, i32 2
  %bf.load31 = load i32* %code30, align 8
  %bf.clear32 = and i32 %bf.load31, 255
  %bf.clear32.off = add i32 %bf.clear32, -114
  %switch = icmp ult i32 %bf.clear32.off, 3
  br i1 %switch, label %land.lhs.true49, label %if.end94

land.lhs.true49:                                  ; preds = %while.cond
  %operands51 = getelementptr inbounds %union.tree_node* %arg0.0, i64 0, i32 0, i32 2
  %arrayidx52 = bitcast i32* %operands51 to %union.tree_node**
  %6 = load %union.tree_node** %arrayidx52, align 8, !tbaa !14
  %cmp53 = icmp eq %union.tree_node* %6, %5
  br i1 %cmp53, label %land.lhs.true97, label %land.lhs.true55

land.lhs.true55:                                  ; preds = %land.lhs.true49
  %type57 = getelementptr inbounds %union.tree_node* %arg0.0, i64 0, i32 0, i32 0, i32 1
  %7 = load %union.tree_node** %type57, align 8, !tbaa !11
  %type58 = bitcast %union.tree_node* %7 to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type* %type58, i64 0, i32 6
  %bf.load59 = load i32* %mode, align 4
  %type65 = getelementptr inbounds %union.tree_node* %6, i64 0, i32 0, i32 0, i32 1
  %8 = load %union.tree_node** %type65, align 8, !tbaa !11
  %type66 = bitcast %union.tree_node* %8 to %struct.tree_type*
  %mode67 = getelementptr inbounds %struct.tree_type* %type66, i64 0, i32 6
  %bf.load68 = load i32* %mode67, align 4
  %bf.lshr9723 = xor i32 %bf.load68, %bf.load59
  %9 = and i32 %bf.lshr9723, 65024
  %cmp71 = icmp eq i32 %9, 0
  br i1 %cmp71, label %land.rhs, label %land.lhs.true97

land.rhs:                                         ; preds = %land.lhs.true55
  %unsigned_flag = getelementptr inbounds %union.tree_node* %7, i64 0, i32 0, i32 0, i32 2
  %bf.load76 = load i32* %unsigned_flag, align 8
  %unsigned_flag85 = getelementptr inbounds %union.tree_node* %8, i64 0, i32 0, i32 0, i32 2
  %bf.load86 = load i32* %unsigned_flag85, align 8
  %bf.lshr779724 = xor i32 %bf.load86, %bf.load76
  %10 = and i32 %bf.lshr779724, 8192
  %cmp89 = icmp eq i32 %10, 0
  br i1 %cmp89, label %while.cond, label %if.end94

if.end94:                                         ; preds = %while.cond, %land.rhs
  %cmp95 = icmp eq %union.tree_node* %arg0.0, null
  br i1 %cmp95, label %if.end321, label %land.lhs.true97

land.lhs.true97:                                  ; preds = %land.lhs.true55, %land.lhs.true49, %if.end94
  %cmp102 = icmp eq i32 %bf.clear32, 27
  br i1 %cmp102, label %if.end105, label %land.lhs.true108

if.end105:                                        ; preds = %land.lhs.true97
  %real = getelementptr inbounds %union.tree_node* %arg0.0, i64 0, i32 0, i32 2
  %11 = bitcast i32* %real to %union.tree_node**
  %12 = load %union.tree_node** %11, align 8, !tbaa !16
  %cmp106 = icmp eq %union.tree_node* %12, null
  br i1 %cmp106, label %if.end321, label %if.end105.land.lhs.true108_crit_edge

if.end105.land.lhs.true108_crit_edge:             ; preds = %if.end105
  %code110.phi.trans.insert = getelementptr inbounds %union.tree_node* %12, i64 0, i32 0, i32 0, i32 2
  %bf.load111.pre = load i32* %code110.phi.trans.insert, align 8
  br label %land.lhs.true108

land.lhs.true108:                                 ; preds = %if.end105.land.lhs.true108_crit_edge, %land.lhs.true97
  %bf.load111 = phi i32 [ %bf.load111.pre, %if.end105.land.lhs.true108_crit_edge ], [ %bf.load31, %land.lhs.true97 ]
  %bf.clear112 = and i32 %bf.load111, 255
  %bf.clear112.off = add i32 %bf.clear112, -25
  %switch9764 = icmp ult i32 %bf.clear112.off, 2
  %.9765 = zext i1 %switch9764 to i32
  br label %if.end321

if.else124:                                       ; preds = %land.lhs.true, %if.end13
  %cmp125 = icmp eq i8 %1, 60
  switch i8 %1, label %if.end321 [
    i8 114, label %if.then139
    i8 101, label %if.then139
    i8 60, label %if.then139
    i8 50, label %if.then139
    i8 49, label %if.then139
  ]

if.then139:                                       ; preds = %if.else124, %if.else124, %if.else124, %if.else124, %if.else124
  %call = call i32 @first_rtl_op(i32 %bf.clear) #1
  %cmp14011221 = icmp sgt i32 %call, 0
  br i1 %cmp14011221, label %for.body.lr.ph, label %if.end321

for.body.lr.ph:                                   ; preds = %if.then139
  %operands144 = getelementptr inbounds %union.tree_node* %expr, i64 0, i32 0, i32 2
  %13 = bitcast i32* %operands144 to [1 x %union.tree_node*]*
  %cmp154 = icmp eq i32 %bf.clear, 83
  %or.cond7719 = or i1 %cmp125, %cmp154
  %14 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !14
  br label %for.body

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.inc ]
  %arg0.211226 = phi %union.tree_node* [ null, %for.body.lr.ph ], [ %arg0.3, %for.inc ]
  %arg1.011225 = phi %union.tree_node* [ null, %for.body.lr.ph ], [ %arg1.1, %for.inc ]
  %wins.011224 = phi i32 [ 1, %for.body.lr.ph ], [ %wins.2, %for.inc ]
  %arrayidx145 = getelementptr inbounds [1 x %union.tree_node*]* %13, i64 0, i64 %indvars.iv
  %15 = load %union.tree_node** %arrayidx145, align 8, !tbaa !14
  %cmp147 = icmp eq %union.tree_node* %15, null
  br i1 %cmp147, label %for.inc, label %if.end150

if.end150:                                        ; preds = %for.body
  br i1 %or.cond7719, label %while.cond157, label %while.cond231

while.cond157:                                    ; preds = %if.end150, %land.rhs204
  %op.0 = phi %union.tree_node* [ %16, %land.rhs204 ], [ %15, %if.end150 ]
  %code159 = getelementptr inbounds %union.tree_node* %op.0, i64 0, i32 0, i32 0, i32 2
  %bf.load160 = load i32* %code159, align 8
  %bf.clear161 = and i32 %bf.load160, 255
  %bf.clear161.off = add i32 %bf.clear161, -114
  %switch9766 = icmp ult i32 %bf.clear161.off, 3
  br i1 %switch9766, label %land.lhs.true178, label %if.end284

land.lhs.true178:                                 ; preds = %while.cond157
  %operands180 = getelementptr inbounds %union.tree_node* %op.0, i64 0, i32 0, i32 2
  %arrayidx181 = bitcast i32* %operands180 to %union.tree_node**
  %16 = load %union.tree_node** %arrayidx181, align 8, !tbaa !14
  %cmp182 = icmp eq %union.tree_node* %16, %14
  br i1 %cmp182, label %if.end284, label %land.lhs.true184

land.lhs.true184:                                 ; preds = %land.lhs.true178
  %type186 = getelementptr inbounds %union.tree_node* %op.0, i64 0, i32 0, i32 0, i32 1
  %17 = load %union.tree_node** %type186, align 8, !tbaa !11
  %type187 = bitcast %union.tree_node* %17 to %struct.tree_type*
  %mode188 = getelementptr inbounds %struct.tree_type* %type187, i64 0, i32 6
  %bf.load189 = load i32* %mode188, align 4
  %type196 = getelementptr inbounds %union.tree_node* %16, i64 0, i32 0, i32 0, i32 1
  %18 = load %union.tree_node** %type196, align 8, !tbaa !11
  %type197 = bitcast %union.tree_node* %18 to %struct.tree_type*
  %mode198 = getelementptr inbounds %struct.tree_type* %type197, i64 0, i32 6
  %bf.load199 = load i32* %mode198, align 4
  %bf.lshr1909721 = xor i32 %bf.load199, %bf.load189
  %19 = and i32 %bf.lshr1909721, 65024
  %cmp202 = icmp eq i32 %19, 0
  br i1 %cmp202, label %land.rhs204, label %if.end284

land.rhs204:                                      ; preds = %land.lhs.true184
  %unsigned_flag208 = getelementptr inbounds %union.tree_node* %17, i64 0, i32 0, i32 0, i32 2
  %bf.load209 = load i32* %unsigned_flag208, align 8
  %unsigned_flag218 = getelementptr inbounds %union.tree_node* %18, i64 0, i32 0, i32 0, i32 2
  %bf.load219 = load i32* %unsigned_flag218, align 8
  %bf.lshr2109722 = xor i32 %bf.load219, %bf.load209
  %20 = and i32 %bf.lshr2109722, 8192
  %cmp222 = icmp eq i32 %20, 0
  br i1 %cmp222, label %while.cond157, label %if.end284

while.cond231:                                    ; preds = %if.end150, %land.rhs258
  %op.1 = phi %union.tree_node* [ %21, %land.rhs258 ], [ %15, %if.end150 ]
  %code233 = getelementptr inbounds %union.tree_node* %op.1, i64 0, i32 0, i32 0, i32 2
  %bf.load234 = load i32* %code233, align 8
  %bf.clear235 = and i32 %bf.load234, 255
  %bf.clear235.off = add i32 %bf.clear235, -114
  %switch9767 = icmp ult i32 %bf.clear235.off, 3
  br i1 %switch9767, label %land.lhs.true252, label %if.end284

land.lhs.true252:                                 ; preds = %while.cond231
  %operands254 = getelementptr inbounds %union.tree_node* %op.1, i64 0, i32 0, i32 2
  %arrayidx255 = bitcast i32* %operands254 to %union.tree_node**
  %21 = load %union.tree_node** %arrayidx255, align 8, !tbaa !14
  %cmp256 = icmp eq %union.tree_node* %21, %14
  br i1 %cmp256, label %if.end284, label %land.rhs258

land.rhs258:                                      ; preds = %land.lhs.true252
  %type260 = getelementptr inbounds %union.tree_node* %op.1, i64 0, i32 0, i32 0, i32 1
  %22 = load %union.tree_node** %type260, align 8, !tbaa !11
  %type261 = bitcast %union.tree_node* %22 to %struct.tree_type*
  %mode262 = getelementptr inbounds %struct.tree_type* %type261, i64 0, i32 6
  %bf.load263 = load i32* %mode262, align 4
  %type270 = getelementptr inbounds %union.tree_node* %21, i64 0, i32 0, i32 0, i32 1
  %23 = load %union.tree_node** %type270, align 8, !tbaa !11
  %type271 = bitcast %union.tree_node* %23 to %struct.tree_type*
  %mode272 = getelementptr inbounds %struct.tree_type* %type271, i64 0, i32 6
  %bf.load273 = load i32* %mode272, align 4
  %bf.lshr2649720 = xor i32 %bf.load273, %bf.load263
  %24 = and i32 %bf.lshr2649720, 65024
  %cmp276 = icmp eq i32 %24, 0
  br i1 %cmp276, label %while.cond231, label %if.end284

if.end284:                                        ; preds = %while.cond231, %land.lhs.true252, %land.rhs258, %while.cond157, %land.lhs.true178, %land.rhs204, %land.lhs.true184
  %bf.load287 = phi i32 [ %bf.load160, %land.lhs.true184 ], [ %bf.load160, %land.rhs204 ], [ %bf.load160, %land.lhs.true178 ], [ %bf.load160, %while.cond157 ], [ %bf.load234, %land.rhs258 ], [ %bf.load234, %land.lhs.true252 ], [ %bf.load234, %while.cond231 ]
  %op.2 = phi %union.tree_node* [ %op.0, %land.lhs.true184 ], [ %op.0, %land.rhs204 ], [ %op.0, %land.lhs.true178 ], [ %op.0, %while.cond157 ], [ %op.1, %land.rhs258 ], [ %op.1, %land.lhs.true252 ], [ %op.1, %while.cond231 ]
  %bf.clear288 = and i32 %bf.load287, 255
  %cmp289 = icmp eq i32 %bf.clear288, 27
  br i1 %cmp289, label %if.then291, label %if.end295

if.then291:                                       ; preds = %if.end284
  %real293 = getelementptr inbounds %union.tree_node* %op.2, i64 0, i32 0, i32 2
  %25 = bitcast i32* %real293 to %union.tree_node**
  %26 = load %union.tree_node** %25, align 8, !tbaa !16
  %code297.phi.trans.insert = getelementptr inbounds %union.tree_node* %26, i64 0, i32 0, i32 0, i32 2
  %bf.load298.pre = load i32* %code297.phi.trans.insert, align 8
  br label %if.end295

if.end295:                                        ; preds = %if.end284, %if.then291
  %bf.load298 = phi i32 [ %bf.load298.pre, %if.then291 ], [ %bf.load287, %if.end284 ]
  %bf.clear299 = and i32 %bf.load298, 255
  %bf.clear299.off = add i32 %bf.clear299, -25
  %switch9768 = icmp ult i32 %bf.clear299.off, 2
  %wins.0. = select i1 %switch9768, i32 %wins.011224, i32 0
  %27 = trunc i64 %indvars.iv to i32
  %cmp311 = icmp eq i32 %27, 0
  br i1 %cmp311, label %for.inc, label %if.else314

if.else314:                                       ; preds = %if.end295
  %cmp315 = icmp eq i32 %27, 1
  %op.2.arg1.0 = select i1 %cmp315, %union.tree_node* %op.2, %union.tree_node* %arg1.011225
  br label %for.inc

for.inc:                                          ; preds = %if.else314, %if.end295, %for.body
  %wins.2 = phi i32 [ %wins.011224, %for.body ], [ %wins.0., %if.end295 ], [ %wins.0., %if.else314 ]
  %arg1.1 = phi %union.tree_node* [ %arg1.011225, %for.body ], [ %arg1.011225, %if.end295 ], [ %op.2.arg1.0, %if.else314 ]
  %arg0.3 = phi %union.tree_node* [ %arg0.211226, %for.body ], [ %op.2, %if.end295 ], [ %arg0.211226, %if.else314 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %call
  br i1 %exitcond, label %if.end321, label %for.body

if.end321:                                        ; preds = %for.inc, %if.then139, %if.then22, %if.end94, %land.lhs.true108, %if.else124, %if.end105
  %wins.3 = phi i32 [ 1, %if.end105 ], [ 1, %if.else124 ], [ %.9765, %land.lhs.true108 ], [ 1, %if.end94 ], [ 1, %if.then22 ], [ 1, %if.then139 ], [ %wins.2, %for.inc ]
  %arg1.2 = phi %union.tree_node* [ null, %if.end105 ], [ null, %if.else124 ], [ null, %land.lhs.true108 ], [ null, %if.end94 ], [ null, %if.then22 ], [ null, %if.then139 ], [ %arg1.1, %for.inc ]
  %arg0.4 = phi %union.tree_node* [ %arg0.0, %if.end105 ], [ null, %if.else124 ], [ %arg0.0, %land.lhs.true108 ], [ null, %if.end94 ], [ null, %if.then22 ], [ null, %if.then139 ], [ %arg0.3, %for.inc ]
  %cmp334 = icmp eq i32 %bf.clear, 86
  %cmp340 = icmp eq i32 %bf.clear, 88
  switch i32 %bf.clear, label %if.end369 [
    i32 88, label %land.lhs.true342
    i32 87, label %land.lhs.true342
    i32 86, label %land.lhs.true342
    i32 79, label %land.lhs.true342
    i32 78, label %land.lhs.true342
    i32 61, label %land.lhs.true342
    i32 59, label %land.lhs.true342
  ]

land.lhs.true342:                                 ; preds = %if.end321, %if.end321, %if.end321, %if.end321, %if.end321, %if.end321, %if.end321
  %code344 = getelementptr inbounds %union.tree_node* %arg0.4, i64 0, i32 0, i32 0, i32 2
  %bf.load345 = load i32* %code344, align 8
  %bf.clear346 = and i32 %bf.load345, 255
  %bf.clear346.off = add i32 %bf.clear346, -25
  %switch9769 = icmp ult i32 %bf.clear346.off, 2
  br i1 %switch9769, label %if.then356, label %if.end369

if.then356:                                       ; preds = %land.lhs.true342
  %operands358 = getelementptr inbounds %union.tree_node* %expr, i64 0, i32 0, i32 2
  %arrayidx359 = bitcast i32* %operands358 to %union.tree_node**
  %28 = load %union.tree_node** %arrayidx359, align 8, !tbaa !14
  %arrayidx362 = getelementptr inbounds i32* %operands358, i64 2
  %29 = bitcast i32* %arrayidx362 to %union.tree_node**
  %30 = load %union.tree_node** %29, align 8, !tbaa !14
  store %union.tree_node* %30, %union.tree_node** %arrayidx359, align 8, !tbaa !14
  store %union.tree_node* %28, %union.tree_node** %29, align 8, !tbaa !14
  br label %if.end369

if.end369:                                        ; preds = %land.lhs.true342, %if.end321, %if.then356
  %arg1.3 = phi %union.tree_node* [ %arg0.4, %if.then356 ], [ %arg1.2, %if.end321 ], [ %arg1.2, %land.lhs.true342 ]
  %arg0.5 = phi %union.tree_node* [ %arg1.2, %if.then356 ], [ %arg0.4, %if.end321 ], [ %arg0.4, %land.lhs.true342 ]
  %cmp376 = icmp eq i32 %bf.clear, 101
  switch i32 %bf.clear, label %if.end447 [
    i32 102, label %land.lhs.true381
    i32 101, label %land.lhs.true381
    i32 88, label %land.lhs.true381
    i32 86, label %land.lhs.true381
  ]

land.lhs.true381:                                 ; preds = %if.end369, %if.end369, %if.end369, %if.end369
  %bf.load384.in = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 0, i32 2
  %bf.load384 = load i32* %bf.load384.in, align 8
  %code383 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 0, i32 2
  %bf.clear385 = and i32 %bf.load384, 255
  %idxprom.i11207 = zext i32 %bf.clear385 to i64
  %arrayidx.i = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom.i11207
  %31 = load i8* %arrayidx.i, align 1, !tbaa !15
  %cmp.i10819 = icmp eq i8 %31, 60
  %cmp2.i = icmp eq i32 %bf.clear385, 93
  %or.cond.i = or i1 %cmp.i10819, %cmp2.i
  %cmp5.i = icmp eq i32 %bf.clear385, 91
  %or.cond18.i = or i1 %or.cond.i, %cmp5.i
  %cmp8.i = icmp eq i32 %bf.clear385, 94
  %or.cond19.i = or i1 %or.cond18.i, %cmp8.i
  %cmp11.i = icmp eq i32 %bf.clear385, 92
  %or.cond20.i = or i1 %or.cond19.i, %cmp11.i
  %cmp14.i = icmp eq i32 %bf.clear385, 95
  %or.cond21.i = or i1 %or.cond20.i, %cmp14.i
  %cmp16.i = icmp eq i32 %bf.clear385, 96
  %.cmp16.i = or i1 %or.cond21.i, %cmp16.i
  %code389 = getelementptr inbounds %union.tree_node* %arg1.3, i64 0, i32 0, i32 0, i32 2
  br i1 %.cmp16.i, label %land.lhs.true387, label %lor.lhs.false407

land.lhs.true387:                                 ; preds = %land.lhs.true381
  %bf.load390 = load i32* %code389, align 8
  %bf.clear391 = and i32 %bf.load390, 255
  %idxprom.i1082011208 = zext i32 %bf.clear391 to i64
  %arrayidx.i10821 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom.i1082011208
  %32 = load i8* %arrayidx.i10821, align 1, !tbaa !15
  %cmp.i10822 = icmp eq i8 %32, 60
  %cmp2.i10823 = icmp eq i32 %bf.clear391, 93
  %or.cond.i10824 = or i1 %cmp.i10822, %cmp2.i10823
  %cmp5.i10825 = icmp eq i32 %bf.clear391, 91
  %or.cond18.i10826 = or i1 %or.cond.i10824, %cmp5.i10825
  %cmp8.i10827 = icmp eq i32 %bf.clear391, 94
  %or.cond19.i10828 = or i1 %or.cond18.i10826, %cmp8.i10827
  %cmp11.i10829 = icmp eq i32 %bf.clear391, 92
  %or.cond20.i10830 = or i1 %or.cond19.i10828, %cmp11.i10829
  %cmp14.i10831 = icmp eq i32 %bf.clear391, 95
  %or.cond21.i10832 = or i1 %or.cond20.i10830, %cmp14.i10831
  %cmp16.i10833 = icmp eq i32 %bf.clear391, 96
  %.cmp16.i10834 = or i1 %or.cond21.i10832, %cmp16.i10833
  br i1 %.cmp16.i10834, label %if.then434, label %lor.lhs.false394

lor.lhs.false394:                                 ; preds = %land.lhs.true387
  %cmp399 = icmp eq i32 %bf.clear391, 88
  br i1 %cmp399, label %land.lhs.true401, label %lor.lhs.false407

land.lhs.true401:                                 ; preds = %lor.lhs.false394
  %operands403 = getelementptr inbounds %union.tree_node* %arg1.3, i64 0, i32 0, i32 2
  %arrayidx404 = getelementptr inbounds i32* %operands403, i64 2
  %33 = bitcast i32* %arrayidx404 to %union.tree_node**
  %34 = load %union.tree_node** %33, align 8, !tbaa !14
  %call405 = call i32 @integer_onep(%union.tree_node* %34) #1
  %tobool406 = icmp eq i32 %call405, 0
  br i1 %tobool406, label %lor.lhs.false407, label %if.then434

lor.lhs.false407:                                 ; preds = %land.lhs.true381, %land.lhs.true401, %lor.lhs.false394
  %bf.load410 = load i32* %code389, align 8
  %bf.clear411 = and i32 %bf.load410, 255
  %idxprom.i1083611209 = zext i32 %bf.clear411 to i64
  %arrayidx.i10837 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom.i1083611209
  %35 = load i8* %arrayidx.i10837, align 1, !tbaa !15
  %cmp.i10838 = icmp eq i8 %35, 60
  %cmp2.i10839 = icmp eq i32 %bf.clear411, 93
  %or.cond.i10840 = or i1 %cmp.i10838, %cmp2.i10839
  %cmp5.i10841 = icmp eq i32 %bf.clear411, 91
  %or.cond18.i10842 = or i1 %or.cond.i10840, %cmp5.i10841
  %cmp8.i10843 = icmp eq i32 %bf.clear411, 94
  %or.cond19.i10844 = or i1 %or.cond18.i10842, %cmp8.i10843
  %cmp11.i10845 = icmp eq i32 %bf.clear411, 92
  %or.cond20.i10846 = or i1 %or.cond19.i10844, %cmp11.i10845
  %cmp14.i10847 = icmp eq i32 %bf.clear411, 95
  %or.cond21.i10848 = or i1 %or.cond20.i10846, %cmp14.i10847
  %cmp16.i10849 = icmp eq i32 %bf.clear411, 96
  %.cmp16.i10850 = or i1 %or.cond21.i10848, %cmp16.i10849
  br i1 %.cmp16.i10850, label %land.lhs.true414, label %if.end447

land.lhs.true414:                                 ; preds = %lor.lhs.false407
  %bf.load417 = load i32* %code383, align 8
  %bf.clear418 = and i32 %bf.load417, 255
  %idxprom.i1085211210 = zext i32 %bf.clear418 to i64
  %arrayidx.i10853 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom.i1085211210
  %36 = load i8* %arrayidx.i10853, align 1, !tbaa !15
  %cmp.i10854 = icmp eq i8 %36, 60
  %cmp2.i10855 = icmp eq i32 %bf.clear418, 93
  %or.cond.i10856 = or i1 %cmp.i10854, %cmp2.i10855
  %cmp5.i10857 = icmp eq i32 %bf.clear418, 91
  %or.cond18.i10858 = or i1 %or.cond.i10856, %cmp5.i10857
  %cmp8.i10859 = icmp eq i32 %bf.clear418, 94
  %or.cond19.i10860 = or i1 %or.cond18.i10858, %cmp8.i10859
  %cmp11.i10861 = icmp eq i32 %bf.clear418, 92
  %or.cond20.i10862 = or i1 %or.cond19.i10860, %cmp11.i10861
  %cmp14.i10863 = icmp eq i32 %bf.clear418, 95
  %or.cond21.i10864 = or i1 %or.cond20.i10862, %cmp14.i10863
  %cmp16.i10865 = icmp eq i32 %bf.clear418, 96
  %.cmp16.i10866 = or i1 %or.cond21.i10864, %cmp16.i10865
  br i1 %.cmp16.i10866, label %if.then434, label %lor.lhs.false421

lor.lhs.false421:                                 ; preds = %land.lhs.true414
  %cmp426 = icmp eq i32 %bf.clear418, 88
  br i1 %cmp426, label %land.lhs.true428, label %if.end447

land.lhs.true428:                                 ; preds = %lor.lhs.false421
  %operands430 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 2
  %arrayidx431 = getelementptr inbounds i32* %operands430, i64 2
  %37 = bitcast i32* %arrayidx431 to %union.tree_node**
  %38 = load %union.tree_node** %37, align 8, !tbaa !14
  %call432 = call i32 @integer_onep(%union.tree_node* %38) #1
  %tobool433 = icmp eq i32 %call432, 0
  br i1 %tobool433, label %if.end447, label %if.then434

if.then434:                                       ; preds = %land.lhs.true414, %land.lhs.true387, %land.lhs.true401, %land.lhs.true428
  br i1 %cmp340, label %cond.end, label %cond.false

cond.false:                                       ; preds = %if.then434
  %cond = select i1 %cmp334, i32 94, i32 95
  br label %cond.end

cond.end:                                         ; preds = %if.then434, %cond.false
  %cond439 = phi i32 [ %cond, %cond.false ], [ 93, %if.then434 ]
  %call440 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %cond439, %union.tree_node* %0, %union.tree_node* %arg0.5, %union.tree_node* %arg1.3) #1
  %call441 = call %union.tree_node* @fold(%union.tree_node* %call440)
  br i1 %cmp376, label %if.then444, label %return

if.then444:                                       ; preds = %cond.end
  %call445 = call %union.tree_node* @invert_truthvalue(%union.tree_node* %call441)
  br label %return

if.end447:                                        ; preds = %lor.lhs.false407, %if.end369, %land.lhs.true428, %lor.lhs.false421
  %39 = load i8* %arrayidx, align 1, !tbaa !15
  switch i8 %39, label %if.end901 [
    i8 49, label %if.then453
    i8 50, label %if.then712
    i8 60, label %if.then712
  ]

if.then453:                                       ; preds = %if.end447
  %code455 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 0, i32 2
  %bf.load456 = load i32* %code455, align 8
  %bf.clear457 = and i32 %bf.load456, 255
  switch i32 %bf.clear457, label %if.else680 [
    i32 47, label %if.then460
    i32 51, label %if.then477
  ]

if.then460:                                       ; preds = %if.then453
  %operands462 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 2
  %arrayidx463 = bitcast i32* %operands462 to %union.tree_node**
  %40 = load %union.tree_node** %arrayidx463, align 8, !tbaa !14
  %arrayidx466 = getelementptr inbounds i32* %operands462, i64 2
  %41 = bitcast i32* %arrayidx466 to %union.tree_node**
  %42 = load %union.tree_node** %41, align 8, !tbaa !14
  %call467 = call %union.tree_node* @build1(i32 %bf.clear, %union.tree_node* %0, %union.tree_node* %42) #1
  %call468 = call %union.tree_node* @fold(%union.tree_node* %call467)
  %call469 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 47, %union.tree_node* %0, %union.tree_node* %40, %union.tree_node* %call468) #1
  br label %return

if.then477:                                       ; preds = %if.then453
  %operands479 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 2
  %arrayidx480 = bitcast i32* %operands479 to %union.tree_node**
  %43 = load %union.tree_node** %arrayidx480, align 8, !tbaa !14
  %arrayidx483 = getelementptr inbounds i32* %operands479, i64 2
  %44 = bitcast i32* %arrayidx483 to %union.tree_node**
  %45 = load %union.tree_node** %44, align 8, !tbaa !14
  %call484 = call %union.tree_node* @build1(i32 %bf.clear, %union.tree_node* %0, %union.tree_node* %45) #1
  %call485 = call %union.tree_node* @fold(%union.tree_node* %call484)
  %arrayidx488 = getelementptr inbounds i32* %operands479, i64 4
  %46 = bitcast i32* %arrayidx488 to %union.tree_node**
  %47 = load %union.tree_node** %46, align 8, !tbaa !14
  %call489 = call %union.tree_node* @build1(i32 %bf.clear, %union.tree_node* %0, %union.tree_node* %47) #1
  %call490 = call %union.tree_node* @fold(%union.tree_node* %call489)
  %call491 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 51, %union.tree_node* %0, %union.tree_node* %43, %union.tree_node* %call485, %union.tree_node* %call490) #1
  %call492 = call %union.tree_node* @fold(%union.tree_node* %call491)
  %48 = and i32 %bf.load, 254
  %49 = icmp eq i32 %48, 114
  %cmp499 = icmp eq i32 %bf.clear, 116
  %or.cond7733 = or i1 %49, %cmp499
  br i1 %or.cond7733, label %land.lhs.true501, label %return

land.lhs.true501:                                 ; preds = %if.then477
  %code503 = getelementptr inbounds %union.tree_node* %call492, i64 0, i32 0, i32 0, i32 2
  %bf.load504 = load i32* %code503, align 8
  %bf.clear505 = and i32 %bf.load504, 255
  %cmp506 = icmp eq i32 %bf.clear505, 51
  br i1 %cmp506, label %land.lhs.true508, label %return

land.lhs.true508:                                 ; preds = %land.lhs.true501
  %operands510 = getelementptr inbounds %union.tree_node* %call492, i64 0, i32 0, i32 2
  %arrayidx511 = getelementptr inbounds i32* %operands510, i64 2
  %50 = bitcast i32* %arrayidx511 to %union.tree_node**
  %51 = load %union.tree_node** %50, align 8, !tbaa !14
  %code513 = getelementptr inbounds %union.tree_node* %51, i64 0, i32 0, i32 0, i32 2
  %bf.load514 = load i32* %code513, align 8
  %bf.clear515 = and i32 %bf.load514, 255
  %cmp516 = icmp eq i32 %bf.clear515, %bf.clear
  br i1 %cmp516, label %land.lhs.true518, label %return

land.lhs.true518:                                 ; preds = %land.lhs.true508
  %arrayidx521 = getelementptr inbounds i32* %operands510, i64 4
  %52 = bitcast i32* %arrayidx521 to %union.tree_node**
  %53 = load %union.tree_node** %52, align 8, !tbaa !14
  %code523 = getelementptr inbounds %union.tree_node* %53, i64 0, i32 0, i32 0, i32 2
  %bf.load524 = load i32* %code523, align 8
  %bf.clear525 = and i32 %bf.load524, 255
  %cmp526 = icmp eq i32 %bf.clear525, %bf.clear
  br i1 %cmp526, label %land.lhs.true528, label %return

land.lhs.true528:                                 ; preds = %land.lhs.true518
  %operands533 = getelementptr inbounds %union.tree_node* %51, i64 0, i32 0, i32 2
  %arrayidx534 = bitcast i32* %operands533 to %union.tree_node**
  %54 = load %union.tree_node** %arrayidx534, align 8, !tbaa !14
  %type536 = getelementptr inbounds %union.tree_node* %54, i64 0, i32 0, i32 0, i32 1
  %55 = load %union.tree_node** %type536, align 8, !tbaa !11
  %operands541 = getelementptr inbounds %union.tree_node* %53, i64 0, i32 0, i32 2
  %arrayidx542 = bitcast i32* %operands541 to %union.tree_node**
  %56 = load %union.tree_node** %arrayidx542, align 8, !tbaa !14
  %type544 = getelementptr inbounds %union.tree_node* %56, i64 0, i32 0, i32 0, i32 1
  %57 = load %union.tree_node** %type544, align 8, !tbaa !11
  %cmp545 = icmp eq %union.tree_node* %55, %57
  br i1 %cmp545, label %land.lhs.true547, label %return

land.lhs.true547:                                 ; preds = %land.lhs.true528
  %type549 = getelementptr inbounds %union.tree_node* %call492, i64 0, i32 0, i32 0, i32 1
  %58 = load %union.tree_node** %type549, align 8, !tbaa !11
  %code551 = getelementptr inbounds %union.tree_node* %58, i64 0, i32 0, i32 0, i32 2
  %bf.load552 = load i32* %code551, align 8
  %bf.clear553 = and i32 %bf.load552, 255
  switch i32 %bf.clear553, label %if.then653 [
    i32 6, label %land.lhs.true583
    i32 10, label %land.lhs.true583
    i32 11, label %land.lhs.true583
    i32 12, label %land.lhs.true583
  ]

land.lhs.true583:                                 ; preds = %land.lhs.true547, %land.lhs.true547, %land.lhs.true547, %land.lhs.true547
  %code593 = getelementptr inbounds %union.tree_node* %55, i64 0, i32 0, i32 0, i32 2
  %bf.load594 = load i32* %code593, align 8
  %bf.clear595 = and i32 %bf.load594, 255
  switch i32 %bf.clear595, label %if.then653 [
    i32 6, label %land.lhs.true643
    i32 10, label %land.lhs.true643
    i32 11, label %land.lhs.true643
    i32 12, label %land.lhs.true643
  ]

land.lhs.true643:                                 ; preds = %land.lhs.true583, %land.lhs.true583, %land.lhs.true583, %land.lhs.true583
  %type646 = bitcast %union.tree_node* %58 to %struct.tree_type*
  %precision = getelementptr inbounds %struct.tree_type* %type646, i64 0, i32 6
  %bf.load647 = load i32* %precision, align 4
  %bf.clear648 = and i32 %bf.load647, 511
  %59 = load i32* @target_flags, align 4, !tbaa !12
  %and = lshr i32 %59, 20
  %60 = and i32 %and, 32
  %61 = add i32 %60, 32
  %cmp651 = icmp ugt i32 %bf.clear648, %61
  br i1 %cmp651, label %if.then653, label %return

if.then653:                                       ; preds = %land.lhs.true583, %land.lhs.true547, %land.lhs.true643
  %arrayidx664 = bitcast i32* %operands510 to %union.tree_node**
  %62 = load %union.tree_node** %arrayidx664, align 8, !tbaa !14
  %call677 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 51, %union.tree_node* %55, %union.tree_node* %62, %union.tree_node* %54, %union.tree_node* %56) #1
  %call678 = call %union.tree_node* @build1(i32 %bf.clear, %union.tree_node* %0, %union.tree_node* %call677) #1
  br label %return

if.else680:                                       ; preds = %if.then453
  %idxprom6859708 = zext i32 %bf.clear457 to i64
  %arrayidx686 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom6859708
  %63 = load i8* %arrayidx686, align 1, !tbaa !15
  %cmp688 = icmp eq i8 %63, 60
  br i1 %cmp688, label %if.then690, label %if.end901

if.then690:                                       ; preds = %if.else680
  %64 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 12), align 8, !tbaa !14
  %call691 = call %union.tree_node* @build1(i32 %bf.clear, %union.tree_node* %0, %union.tree_node* %64) #1
  %call692 = call %union.tree_node* @fold(%union.tree_node* %call691)
  %65 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8, !tbaa !14
  %call693 = call %union.tree_node* @build1(i32 %bf.clear, %union.tree_node* %0, %union.tree_node* %65) #1
  %call694 = call %union.tree_node* @fold(%union.tree_node* %call693)
  %call695 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 51, %union.tree_node* %0, %union.tree_node* %arg0.5, %union.tree_node* %call692, %union.tree_node* %call694) #1
  %call696 = call %union.tree_node* @fold(%union.tree_node* %call695)
  br label %return

if.then712:                                       ; preds = %if.end447, %if.end447
  %bf.load715.in = getelementptr inbounds %union.tree_node* %arg1.3, i64 0, i32 0, i32 0, i32 2
  %bf.load715 = load i32* %bf.load715.in, align 8
  %code714 = getelementptr inbounds %union.tree_node* %arg1.3, i64 0, i32 0, i32 0, i32 2
  %bf.clear716 = and i32 %bf.load715, 255
  switch i32 %bf.clear716, label %lor.lhs.false736 [
    i32 47, label %if.then719
    i32 51, label %land.lhs.true752
  ]

if.then719:                                       ; preds = %if.then712
  %operands721 = getelementptr inbounds %union.tree_node* %arg1.3, i64 0, i32 0, i32 2
  %arrayidx722 = bitcast i32* %operands721 to %union.tree_node**
  %66 = load %union.tree_node** %arrayidx722, align 8, !tbaa !14
  %arrayidx725 = getelementptr inbounds i32* %operands721, i64 2
  %67 = bitcast i32* %arrayidx725 to %union.tree_node**
  %68 = load %union.tree_node** %67, align 8, !tbaa !14
  %call726 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %bf.clear, %union.tree_node* %0, %union.tree_node* %arg0.5, %union.tree_node* %68) #1
  %call727 = call %union.tree_node* @fold(%union.tree_node* %call726)
  %call728 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 47, %union.tree_node* %0, %union.tree_node* %66, %union.tree_node* %call727) #1
  br label %return

lor.lhs.false736:                                 ; preds = %if.then712
  %idxprom7419706 = zext i32 %bf.clear716 to i64
  %arrayidx742 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom7419706
  %69 = load i8* %arrayidx742, align 1, !tbaa !15
  %cmp744 = icmp ne i8 %69, 60
  %cmp750 = icmp eq i8 %39, 60
  %or.cond11328 = or i1 %cmp744, %cmp750
  br i1 %or.cond11328, label %if.else779, label %land.lhs.true752

land.lhs.true752:                                 ; preds = %lor.lhs.false736, %if.then712
  %code754 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 0, i32 2
  %bf.load755 = load i32* %code754, align 8
  %bf.clear756 = and i32 %bf.load755, 255
  %cmp757 = icmp eq i32 %bf.clear756, 51
  br i1 %cmp757, label %lor.lhs.false759, label %land.lhs.true764

lor.lhs.false759:                                 ; preds = %land.lhs.true752
  %call760 = call fastcc i32 @count_cond(%union.tree_node* %arg0.5, i32 25)
  %call761 = call fastcc i32 @count_cond(%union.tree_node* %arg1.3, i32 25)
  %add = add nsw i32 %call761, %call760
  %cmp762 = icmp slt i32 %add, 26
  br i1 %cmp762, label %land.lhs.true764, label %if.else779

land.lhs.true764:                                 ; preds = %land.lhs.true752, %lor.lhs.false759
  %bf.clear768 = and i32 %bf.load755, 256
  %tobool769 = icmp eq i32 %bf.clear768, 0
  br i1 %tobool769, label %if.then777, label %lor.lhs.false770

lor.lhs.false770:                                 ; preds = %land.lhs.true764
  %call771 = call i32 @global_bindings_p() #1
  %cmp772 = icmp eq i32 %call771, 0
  br i1 %cmp772, label %land.lhs.true774, label %if.else779

land.lhs.true774:                                 ; preds = %lor.lhs.false770
  %call775 = call i32 @contains_placeholder_p(%union.tree_node* %arg0.5) #1
  %tobool776 = icmp eq i32 %call775, 0
  br i1 %tobool776, label %if.then777, label %if.else779

if.then777:                                       ; preds = %land.lhs.true774, %land.lhs.true764
  %call778 = call fastcc %union.tree_node* @fold_binary_op_with_conditional_arg(i32 %bf.clear, %union.tree_node* %0, %union.tree_node* %arg1.3, %union.tree_node* %arg0.5, i32 0)
  br label %return

if.else779:                                       ; preds = %lor.lhs.false736, %land.lhs.true774, %lor.lhs.false770, %lor.lhs.false759
  %code781 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 0, i32 2
  %bf.load782 = load i32* %code781, align 8
  %bf.clear783 = and i32 %bf.load782, 255
  switch i32 %bf.clear783, label %lor.lhs.false803 [
    i32 47, label %if.then786
    i32 51, label %land.lhs.true819
  ]

if.then786:                                       ; preds = %if.else779
  %operands788 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 2
  %arrayidx789 = bitcast i32* %operands788 to %union.tree_node**
  %70 = load %union.tree_node** %arrayidx789, align 8, !tbaa !14
  %arrayidx792 = getelementptr inbounds i32* %operands788, i64 2
  %71 = bitcast i32* %arrayidx792 to %union.tree_node**
  %72 = load %union.tree_node** %71, align 8, !tbaa !14
  %call793 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %bf.clear, %union.tree_node* %0, %union.tree_node* %72, %union.tree_node* %arg1.3) #1
  %call794 = call %union.tree_node* @fold(%union.tree_node* %call793)
  %call795 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 47, %union.tree_node* %0, %union.tree_node* %70, %union.tree_node* %call794) #1
  br label %return

lor.lhs.false803:                                 ; preds = %if.else779
  %idxprom8089707 = zext i32 %bf.clear783 to i64
  %arrayidx809 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom8089707
  %73 = load i8* %arrayidx809, align 1, !tbaa !15
  %cmp811 = icmp eq i8 %73, 60
  br i1 %cmp811, label %land.lhs.true813, label %if.end901

land.lhs.true813:                                 ; preds = %lor.lhs.false803
  %74 = load i8* %arrayidx, align 1, !tbaa !15
  %cmp817 = icmp eq i8 %74, 60
  br i1 %cmp817, label %if.end901, label %land.lhs.true819

land.lhs.true819:                                 ; preds = %if.else779, %land.lhs.true813
  %bf.load822 = load i32* %code714, align 8
  %bf.clear823 = and i32 %bf.load822, 255
  %cmp824 = icmp eq i32 %bf.clear823, 51
  br i1 %cmp824, label %lor.lhs.false826, label %land.lhs.true832

lor.lhs.false826:                                 ; preds = %land.lhs.true819
  %call827 = call fastcc i32 @count_cond(%union.tree_node* %arg0.5, i32 25)
  %call828 = call fastcc i32 @count_cond(%union.tree_node* %arg1.3, i32 25)
  %add829 = add nsw i32 %call828, %call827
  %cmp830 = icmp slt i32 %add829, 26
  br i1 %cmp830, label %land.lhs.true832, label %if.end901

land.lhs.true832:                                 ; preds = %land.lhs.true819, %lor.lhs.false826
  %bf.clear837 = and i32 %bf.load822, 256
  %tobool838 = icmp eq i32 %bf.clear837, 0
  br i1 %tobool838, label %if.then846, label %lor.lhs.false839

lor.lhs.false839:                                 ; preds = %land.lhs.true832
  %call840 = call i32 @global_bindings_p() #1
  %cmp841 = icmp eq i32 %call840, 0
  br i1 %cmp841, label %land.lhs.true843, label %if.end901

land.lhs.true843:                                 ; preds = %lor.lhs.false839
  %call844 = call i32 @contains_placeholder_p(%union.tree_node* %arg1.3) #1
  %tobool845 = icmp eq i32 %call844, 0
  br i1 %tobool845, label %if.then846, label %if.end901

if.then846:                                       ; preds = %land.lhs.true843, %land.lhs.true832
  %call847 = call fastcc %union.tree_node* @fold_binary_op_with_conditional_arg(i32 %bf.clear, %union.tree_node* %0, %union.tree_node* %arg0.5, %union.tree_node* %arg1.3, i32 1)
  br label %return

if.end901:                                        ; preds = %if.end447, %land.lhs.true843, %land.lhs.true813, %lor.lhs.false803, %lor.lhs.false826, %lor.lhs.false839, %if.else680
  switch i32 %bf.clear, label %return [
    i32 53, label %sw.bb7665
    i32 56, label %sw.bb7565
    i32 128, label %sw.bb7494
    i32 127, label %sw.bb7424
    i32 125, label %sw.bb7419
    i32 47, label %sw.bb7402
    i32 32, label %sw.bb902
    i32 115, label %sw.bb904
    i32 76, label %sw.bb904
    i32 114, label %sw.bb904
    i32 72, label %sw.bb904
    i32 117, label %sw.bb1450
    i32 39, label %sw.bb1469
    i32 113, label %sw.bb1485
    i32 77, label %sw.bb1493
    i32 80, label %sw.bb1617
    i32 126, label %sw.bb1751
    i32 90, label %sw.bb1838
    i32 59, label %sw.bb1889
    i32 60, label %sw.bb2978
    i32 61, label %sw.bb3141
    i32 86, label %bit_ior
    i32 87, label %sw.bb3325
    i32 88, label %bit_and
    i32 89, label %sw.bb3547
    i32 70, label %sw.bb3569
    i32 62, label %sw.bb3676
    i32 65, label %sw.bb3676
    i32 64, label %sw.bb3676
    i32 63, label %sw.bb3676
    i32 71, label %sw.bb3676
    i32 67, label %sw.bb3715
    i32 68, label %sw.bb3715
    i32 69, label %sw.bb3715
    i32 66, label %sw.bb3715
    i32 82, label %sw.bb3741
    i32 83, label %sw.bb3741
    i32 84, label %sw.bb3741
    i32 85, label %sw.bb3741
    i32 78, label %sw.bb3930
    i32 79, label %sw.bb3970
    i32 96, label %sw.bb4014
    i32 91, label %sw.bb4025
    i32 93, label %sw.bb4031
    i32 92, label %sw.bb4265
    i32 94, label %if.end901.sw.bb4278_crit_edge
    i32 95, label %sw.bb4339
    i32 101, label %sw.bb4366
    i32 102, label %sw.bb4366
    i32 97, label %sw.bb4366
    i32 99, label %sw.bb4366
    i32 98, label %sw.bb4366
    i32 100, label %sw.bb4366
    i32 51, label %sw.bb6598
  ]

if.end901.sw.bb4278_crit_edge:                    ; preds = %if.end901
  %code4280.pre = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 0, i32 2
  br label %sw.bb4278

sw.bb902:                                         ; preds = %if.end901
  %initial = getelementptr inbounds %union.tree_node* %expr, i64 0, i32 0, i32 12
  %75 = load %union.tree_node** %initial, align 8, !tbaa !18
  %call903 = call %union.tree_node* @fold(%union.tree_node* %75)
  br label %return

sw.bb904:                                         ; preds = %if.end901, %if.end901, %if.end901, %if.end901
  %.in.in = getelementptr inbounds %union.tree_node* %expr, i64 0, i32 0, i32 2
  %.in = bitcast i32* %.in.in to %union.tree_node**
  %76 = load %union.tree_node** %.in, align 8
  %operands906 = getelementptr inbounds %union.tree_node* %expr, i64 0, i32 0, i32 2
  %arrayidx907 = bitcast i32* %operands906 to %union.tree_node**
  %type909 = getelementptr inbounds %union.tree_node* %76, i64 0, i32 0, i32 0, i32 1
  %77 = load %union.tree_node** %type909, align 8, !tbaa !11
  %78 = load %union.tree_node** %type1, align 8, !tbaa !11
  %cmp912 = icmp eq %union.tree_node* %77, %78
  br i1 %cmp912, label %return, label %if.end918

if.end918:                                        ; preds = %sw.bb904
  %code923 = getelementptr inbounds %union.tree_node* %76, i64 0, i32 0, i32 0, i32 2
  %bf.load924 = load i32* %code923, align 8
  %79 = and i32 %bf.load924, 254
  %switch9770 = icmp eq i32 %79, 114
  br i1 %switch9770, label %if.then938, label %if.end1368

if.then938:                                       ; preds = %if.end918
  %operands943 = getelementptr inbounds %union.tree_node* %76, i64 0, i32 0, i32 2
  %arrayidx944 = bitcast i32* %operands943 to %union.tree_node**
  %80 = load %union.tree_node** %arrayidx944, align 8, !tbaa !14
  %type946 = getelementptr inbounds %union.tree_node* %80, i64 0, i32 0, i32 0, i32 1
  %81 = load %union.tree_node** %type946, align 8, !tbaa !11
  %code955 = getelementptr inbounds %union.tree_node* %81, i64 0, i32 0, i32 0, i32 2
  %bf.load956 = load i32* %code955, align 8
  %bf.clear957 = and i32 %bf.load956, 255
  %switch.tableidx = add i32 %bf.clear957, -6
  %82 = icmp ult i32 %switch.tableidx, 7
  br i1 %82, label %lor.end, label %lor.rhs1001.thread

lor.rhs1001.thread:                               ; preds = %if.then938
  %83 = and i32 %bf.load956, 253
  %84 = icmp eq i32 %83, 13
  br label %lor.end1018

lor.end:                                          ; preds = %if.then938
  %switch.cast = trunc i32 %switch.tableidx to i7
  %switch.downshift = lshr i7 -15, %switch.cast
  %85 = and i7 %switch.downshift, 1
  %switch.masked = icmp ne i7 %85, 0
  %86 = and i32 %bf.load956, 253
  %87 = icmp eq i32 %86, 13
  %cmp999 = icmp eq i32 %bf.clear957, 7
  br i1 %cmp999, label %lor.end1018, label %lor.rhs1001

lor.rhs1001:                                      ; preds = %lor.end
  %cmp1006 = icmp eq i32 %bf.clear957, 8
  br i1 %cmp1006, label %land.rhs1008, label %lor.end1018

land.rhs1008:                                     ; preds = %lor.rhs1001
  %type1010 = getelementptr inbounds %union.tree_node* %81, i64 0, i32 0, i32 0, i32 1
  %88 = load %union.tree_node** %type1010, align 8, !tbaa !11
  %code1012 = getelementptr inbounds %union.tree_node* %88, i64 0, i32 0, i32 0, i32 2
  %bf.load1013 = load i32* %code1012, align 8
  %bf.clear1014 = and i32 %bf.load1013, 255
  %cmp1015 = icmp eq i32 %bf.clear1014, 7
  br label %lor.end1018

lor.end1018:                                      ; preds = %lor.rhs1001.thread, %lor.rhs1001, %land.rhs1008, %lor.end
  %89 = phi i1 [ %87, %lor.end ], [ %87, %lor.rhs1001 ], [ %87, %land.rhs1008 ], [ %84, %lor.rhs1001.thread ]
  %90 = phi i1 [ %switch.masked, %lor.end ], [ %switch.masked, %lor.rhs1001 ], [ %switch.masked, %land.rhs1008 ], [ false, %lor.rhs1001.thread ]
  %91 = phi i1 [ true, %lor.end ], [ false, %lor.rhs1001 ], [ %cmp1015, %land.rhs1008 ], [ false, %lor.rhs1001.thread ]
  %type1020 = bitcast %union.tree_node* %81 to %struct.tree_type*
  %precision1021 = getelementptr inbounds %struct.tree_type* %type1020, i64 0, i32 6
  %bf.load1022 = load i32* %precision1021, align 4
  %bf.clear1023 = and i32 %bf.load1022, 511
  %bf.lshr1027 = lshr i32 %bf.load956, 13
  %bf.clear1028 = and i32 %bf.lshr1027, 1
  %code1030 = getelementptr inbounds %union.tree_node* %77, i64 0, i32 0, i32 0, i32 2
  %bf.load1031 = load i32* %code1030, align 8
  %bf.clear1032 = and i32 %bf.load1031, 255
  %switch.tableidx9772 = add i32 %bf.clear1032, -6
  %92 = icmp ult i32 %switch.tableidx9772, 7
  br i1 %92, label %lor.end1056, label %lor.rhs1079.thread

lor.rhs1079.thread:                               ; preds = %lor.end1018
  %93 = and i32 %bf.load1031, 253
  %94 = icmp eq i32 %93, 13
  br label %lor.end1096

lor.end1056:                                      ; preds = %lor.end1018
  %switch.cast9773 = trunc i32 %switch.tableidx9772 to i7
  %switch.downshift9775 = lshr i7 -15, %switch.cast9773
  %95 = and i7 %switch.downshift9775, 1
  %switch.masked9776 = icmp ne i7 %95, 0
  %96 = and i32 %bf.load1031, 253
  %97 = icmp eq i32 %96, 13
  %cmp1077 = icmp eq i32 %bf.clear1032, 7
  br i1 %cmp1077, label %lor.end1096, label %lor.rhs1079

lor.rhs1079:                                      ; preds = %lor.end1056
  %cmp1084 = icmp eq i32 %bf.clear1032, 8
  br i1 %cmp1084, label %land.rhs1086, label %lor.end1096

land.rhs1086:                                     ; preds = %lor.rhs1079
  %type1088 = getelementptr inbounds %union.tree_node* %77, i64 0, i32 0, i32 0, i32 1
  %98 = load %union.tree_node** %type1088, align 8, !tbaa !11
  %code1090 = getelementptr inbounds %union.tree_node* %98, i64 0, i32 0, i32 0, i32 2
  %bf.load1091 = load i32* %code1090, align 8
  %bf.clear1092 = and i32 %bf.load1091, 255
  %cmp1093 = icmp eq i32 %bf.clear1092, 7
  br label %lor.end1096

lor.end1096:                                      ; preds = %lor.rhs1079.thread, %lor.rhs1079, %land.rhs1086, %lor.end1056
  %99 = phi i1 [ %97, %lor.end1056 ], [ %97, %lor.rhs1079 ], [ %97, %land.rhs1086 ], [ %94, %lor.rhs1079.thread ]
  %100 = phi i1 [ %switch.masked9776, %lor.end1056 ], [ %switch.masked9776, %lor.rhs1079 ], [ %switch.masked9776, %land.rhs1086 ], [ false, %lor.rhs1079.thread ]
  %101 = phi i1 [ true, %lor.end1056 ], [ false, %lor.rhs1079 ], [ %cmp1093, %land.rhs1086 ], [ false, %lor.rhs1079.thread ]
  %type1098 = bitcast %union.tree_node* %77 to %struct.tree_type*
  %precision1099 = getelementptr inbounds %struct.tree_type* %type1098, i64 0, i32 6
  %bf.load1100 = load i32* %precision1099, align 4
  %bf.clear1101 = and i32 %bf.load1100, 511
  %bf.lshr1105 = lshr i32 %bf.load1031, 13
  %bf.clear1106 = and i32 %bf.lshr1105, 1
  %code1108 = getelementptr inbounds %union.tree_node* %78, i64 0, i32 0, i32 0, i32 2
  %bf.load1109 = load i32* %code1108, align 8
  %bf.clear1110 = and i32 %bf.load1109, 255
  %switch.tableidx9778 = add i32 %bf.clear1110, -6
  %102 = icmp ult i32 %switch.tableidx9778, 7
  br i1 %102, label %lor.end1134, label %lor.rhs1157.thread

lor.rhs1157.thread:                               ; preds = %lor.end1096
  %103 = and i32 %bf.load1109, 253
  %104 = icmp eq i32 %103, 13
  br label %lor.end1174

lor.end1134:                                      ; preds = %lor.end1096
  %switch.cast9779 = trunc i32 %switch.tableidx9778 to i7
  %switch.downshift9781 = lshr i7 -15, %switch.cast9779
  %105 = and i7 %switch.downshift9781, 1
  %switch.masked9782 = icmp ne i7 %105, 0
  %106 = and i32 %bf.load1109, 253
  %107 = icmp eq i32 %106, 13
  %cmp1155 = icmp eq i32 %bf.clear1110, 7
  br i1 %cmp1155, label %lor.end1174, label %lor.rhs1157

lor.rhs1157:                                      ; preds = %lor.end1134
  %cmp1162 = icmp eq i32 %bf.clear1110, 8
  br i1 %cmp1162, label %land.rhs1164, label %lor.end1174

land.rhs1164:                                     ; preds = %lor.rhs1157
  %type1166 = getelementptr inbounds %union.tree_node* %78, i64 0, i32 0, i32 0, i32 1
  %108 = load %union.tree_node** %type1166, align 8, !tbaa !11
  %code1168 = getelementptr inbounds %union.tree_node* %108, i64 0, i32 0, i32 0, i32 2
  %bf.load1169 = load i32* %code1168, align 8
  %bf.clear1170 = and i32 %bf.load1169, 255
  %cmp1171 = icmp eq i32 %bf.clear1170, 7
  br label %lor.end1174

lor.end1174:                                      ; preds = %lor.rhs1157.thread, %lor.rhs1157, %land.rhs1164, %lor.end1134
  %109 = phi i1 [ %107, %lor.end1134 ], [ %107, %lor.rhs1157 ], [ %107, %land.rhs1164 ], [ %104, %lor.rhs1157.thread ]
  %110 = phi i1 [ %switch.masked9782, %lor.end1134 ], [ %switch.masked9782, %lor.rhs1157 ], [ %switch.masked9782, %land.rhs1164 ], [ false, %lor.rhs1157.thread ]
  %111 = phi i1 [ true, %lor.end1134 ], [ false, %lor.rhs1157 ], [ %cmp1171, %land.rhs1164 ], [ false, %lor.rhs1157.thread ]
  %type1176 = bitcast %union.tree_node* %78 to %struct.tree_type*
  %precision1177 = getelementptr inbounds %struct.tree_type* %type1176, i64 0, i32 6
  %bf.load1178 = load i32* %precision1177, align 4
  %bf.clear1179 = and i32 %bf.load1178, 511
  %bf.clear1184 = and i32 %bf.load1109, 8192
  %112 = getelementptr inbounds %union.tree_node* %81, i64 0, i32 0, i32 15
  %113 = load %union.tree_node** %112, align 8, !tbaa !20
  %114 = getelementptr inbounds %union.tree_node* %78, i64 0, i32 0, i32 15
  %115 = load %union.tree_node** %114, align 8, !tbaa !20
  %cmp1188 = icmp eq %union.tree_node* %113, %115
  br i1 %cmp1188, label %land.lhs.true1190, label %if.end1209

land.lhs.true1190:                                ; preds = %lor.end1174
  %or.cond7734 = and i1 %100, %110
  %or.cond7735 = and i1 %101, %111
  %or.cond = or i1 %or.cond7734, %or.cond7735
  %or.cond.not = xor i1 %or.cond, true
  %cmp1199 = icmp ult i32 %bf.clear1101, %bf.clear1179
  %or.cond9727 = or i1 %cmp1199, %or.cond.not
  br i1 %or.cond9727, label %if.end1209, label %if.then1201

if.then1201:                                      ; preds = %land.lhs.true1190
  %call1208 = call %union.tree_node* @convert(%union.tree_node* %78, %union.tree_node* %80) #1
  br label %return

if.end1209:                                       ; preds = %land.lhs.true1190, %lor.end1174
  %or.cond7736 = or i1 %100, %99
  %or.cond7737 = or i1 %90, %89
  %or.cond9728 = and i1 %or.cond7736, %or.cond7737
  %or.cond7738 = and i1 %101, %91
  %or.cond9729 = or i1 %or.cond9728, %or.cond7738
  %cmp1222.not = icmp uge i32 %bf.clear1101, %bf.clear1023
  %or.cond9730.not = and i1 %or.cond9729, %cmp1222.not
  %cmp1227 = icmp eq i32 %bf.clear1106, %bf.clear1028
  %or.cond9731 = or i1 %101, %cmp1227
  %or.cond9784 = and i1 %or.cond9730.not, %or.cond9731
  br i1 %or.cond9784, label %land.lhs.true1229, label %if.end1263

land.lhs.true1229:                                ; preds = %if.end1209
  %bf.lshr1233 = lshr i32 %bf.load1178, 9
  %bf.clear1234 = and i32 %bf.lshr1233, 127
  %idxprom12359705 = zext i32 %bf.clear1234 to i64
  %arrayidx1236 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom12359705
  %116 = load i16* %arrayidx1236, align 2, !tbaa !22
  %conv1237 = zext i16 %116 to i32
  %cmp1238 = icmp eq i32 %bf.clear1179, %conv1237
  br i1 %cmp1238, label %land.lhs.true1253, label %land.lhs.true1240

land.lhs.true1240:                                ; preds = %land.lhs.true1229
  %bf.lshr1249 = lshr i32 %bf.load1100, 9
  %bf.clear1250 = and i32 %bf.lshr1249, 127
  %cmp1251 = icmp eq i32 %bf.clear1234, %bf.clear1250
  %or.cond7739 = or i1 %cmp1251, %109
  br i1 %or.cond7739, label %if.end1263, label %if.then1255

land.lhs.true1253:                                ; preds = %land.lhs.true1229
  br i1 %109, label %if.end1263, label %if.then1255

if.then1255:                                      ; preds = %land.lhs.true1240, %land.lhs.true1253
  %call1262 = call %union.tree_node* @convert(%union.tree_node* %78, %union.tree_node* %80) #1
  br label %return

if.end1263:                                       ; preds = %if.end1209, %land.lhs.true1253, %land.lhs.true1240
  %or.cond7741 = and i1 %90, %100
  %or.cond7743 = and i1 %or.cond7741, %110
  %cmp1270 = icmp ult i32 %bf.clear1023, %bf.clear1101
  %or.cond9732 = and i1 %or.cond7743, %cmp1270
  br i1 %or.cond9732, label %land.lhs.true1272, label %if.end1287

land.lhs.true1272:                                ; preds = %if.end1263
  %notlhs = icmp uge i32 %bf.clear1101, %bf.clear1179
  %notrhs = icmp eq i32 %bf.clear1028, 0
  %or.cond7745.not = or i1 %notrhs, %notlhs
  %tobool1278 = icmp ne i32 %bf.clear1106, 0
  %or.cond7747 = or i1 %or.cond7745.not, %tobool1278
  br i1 %or.cond7747, label %if.end1287, label %if.then1279

if.then1279:                                      ; preds = %land.lhs.true1272
  %call1286 = call %union.tree_node* @convert(%union.tree_node* %78, %union.tree_node* %80) #1
  br label %return

if.end1287:                                       ; preds = %land.lhs.true1272, %if.end1263
  %or.cond7749 = or i1 %91, %101
  %or.cond7751 = or i1 %or.cond7749, %111
  %or.cond7751.not = xor i1 %or.cond7751, true
  %cmp1297 = icmp ugt i32 %bf.clear1101, %bf.clear1179
  %or.cond9733 = or i1 %cmp1270, %cmp1297
  %or.cond11206 = and i1 %or.cond9733, %or.cond7751.not
  br i1 %or.cond11206, label %land.lhs.true1299, label %if.end1368

land.lhs.true1299:                                ; preds = %if.end1287
  %cmp1227.not = xor i1 %cmp1227, true
  %or.cond9734.not = and i1 %or.cond7741, %cmp1227.not
  %cmp1307 = icmp ult i32 %bf.clear1101, %bf.clear1179
  %or.cond9735 = and i1 %or.cond9734.not, %cmp1307
  br i1 %or.cond9735, label %if.end1368, label %land.lhs.true1309

land.lhs.true1309:                                ; preds = %land.lhs.true1299
  %not.tobool1310 = icmp ne i32 %bf.clear1106, 0
  %.cmp1294 = and i1 %cmp1270, %not.tobool1310
  %not.tobool1315 = icmp ne i32 %bf.clear1184, 0
  %117 = and i1 %cmp1307, %not.tobool1315
  %cmp1321tmp = xor i1 %.cmp1294, %117
  br i1 %cmp1321tmp, label %if.end1368, label %land.lhs.true1323

land.lhs.true1323:                                ; preds = %land.lhs.true1309
  %.cmp991.not = xor i1 %89, true
  %cmp1326 = icmp eq i32 %bf.clear1101, %bf.clear1179
  %or.cond9736 = or i1 %cmp1326, %.cmp991.not
  br i1 %or.cond9736, label %land.lhs.true1328, label %if.end1368

land.lhs.true1328:                                ; preds = %land.lhs.true1323
  %.cmp1147.not = xor i1 %109, true
  %cmp1331 = icmp eq i32 %bf.clear1023, %bf.clear1101
  %or.cond9737 = or i1 %cmp1331, %.cmp1147.not
  br i1 %or.cond9737, label %land.lhs.true1333, label %if.end1368

land.lhs.true1333:                                ; preds = %land.lhs.true1328
  %bf.lshr1337 = lshr i32 %bf.load1178, 9
  %bf.clear1338 = and i32 %bf.lshr1337, 127
  %idxprom13399704 = zext i32 %bf.clear1338 to i64
  %arrayidx1340 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom13399704
  %118 = load i16* %arrayidx1340, align 2, !tbaa !22
  %conv1341 = zext i16 %118 to i32
  %cmp1342 = icmp eq i32 %bf.clear1179, %conv1341
  br i1 %cmp1342, label %land.lhs.true1357, label %land.lhs.true1344

land.lhs.true1344:                                ; preds = %land.lhs.true1333
  %bf.lshr1353 = lshr i32 %bf.load1100, 9
  %bf.clear1354 = and i32 %bf.lshr1353, 127
  %cmp1355 = icmp eq i32 %bf.clear1338, %bf.clear1354
  %or.cond7755 = or i1 %cmp1355, %109
  br i1 %or.cond7755, label %if.end1368, label %if.then1359

land.lhs.true1357:                                ; preds = %land.lhs.true1333
  br i1 %109, label %if.end1368, label %if.then1359

if.then1359:                                      ; preds = %land.lhs.true1344, %land.lhs.true1357
  %call1366 = call %union.tree_node* @convert(%union.tree_node* %78, %union.tree_node* %80) #1
  br label %return

if.end1368:                                       ; preds = %if.end1287, %if.end918, %land.lhs.true1328, %land.lhs.true1323, %land.lhs.true1299, %land.lhs.true1309, %land.lhs.true1344, %land.lhs.true1357
  %bf.clear1375 = and i32 %bf.load924, 255
  %cmp1376 = icmp eq i32 %bf.clear1375, 48
  br i1 %cmp1376, label %land.lhs.true1378, label %if.end1435

land.lhs.true1378:                                ; preds = %if.end1368
  %operands1383 = getelementptr inbounds %union.tree_node* %76, i64 0, i32 0, i32 2
  %arrayidx1384 = getelementptr inbounds i32* %operands1383, i64 2
  %119 = bitcast i32* %arrayidx1384 to %union.tree_node**
  %120 = load %union.tree_node** %119, align 8, !tbaa !14
  %constant_flag = getelementptr inbounds %union.tree_node* %120, i64 0, i32 0, i32 0, i32 2
  %bf.load1386 = load i32* %constant_flag, align 8
  %bf.clear1388 = and i32 %bf.load1386, 512
  %tobool1389 = icmp eq i32 %bf.clear1388, 0
  br i1 %tobool1389, label %if.end1435, label %land.lhs.true1390

land.lhs.true1390:                                ; preds = %land.lhs.true1378
  %arrayidx1396 = bitcast i32* %operands1383 to %union.tree_node**
  %121 = load %union.tree_node** %arrayidx1396, align 8, !tbaa !14
  %code1398 = getelementptr inbounds %union.tree_node* %121, i64 0, i32 0, i32 0, i32 2
  %bf.load1399 = load i32* %code1398, align 8
  %bf.clear1400 = and i32 %bf.load1399, 255
  %cmp1401 = icmp eq i32 %bf.clear1400, 39
  br i1 %cmp1401, label %land.lhs.true1403, label %if.then1418

land.lhs.true1403:                                ; preds = %land.lhs.true1390
  %operands1411 = getelementptr inbounds %union.tree_node* %121, i64 0, i32 0, i32 2
  %arrayidx1412 = getelementptr inbounds i32* %operands1411, i64 2
  %122 = bitcast i32* %arrayidx1412 to %union.tree_node**
  %123 = load %union.tree_node** %122, align 8, !tbaa !14
  %bit_field_flag = getelementptr inbounds %union.tree_node* %123, i64 0, i32 0, i32 5
  %124 = bitcast i48* %bit_field_flag to i64*
  %bf.load1414 = load i64* %124, align 8
  %bf.cast = and i64 %bf.load1414, 4096
  %tobool1417 = icmp eq i64 %bf.cast, 0
  br i1 %tobool1417, label %if.then1418, label %if.end1435

if.then1418:                                      ; preds = %land.lhs.true1403, %land.lhs.true1390
  store %union.tree_node* %120, %union.tree_node** %arrayidx907, align 8, !tbaa !14
  %call1430 = call %union.tree_node* @fold(%union.tree_node* %expr)
  %call1431 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 47, %union.tree_node* %78, %union.tree_node* %76, %union.tree_node* %call1430) #1
  %used_flag = getelementptr inbounds %union.tree_node* %call1431, i64 0, i32 0, i32 0, i32 2
  %bf.load1433 = load i32* %used_flag, align 8
  %bf.set = or i32 %bf.load1433, 65536
  store i32 %bf.set, i32* %used_flag, align 8
  br label %return

if.end1435:                                       ; preds = %land.lhs.true1403, %land.lhs.true1378, %if.end1368
  %tobool1436 = icmp eq i32 %wins.3, 0
  br i1 %tobool1436, label %if.then1437, label %if.end1448

if.then1437:                                      ; preds = %if.end1435
  %constant_flag1439 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 0, i32 2
  %bf.load1440 = load i32* %constant_flag1439, align 8
  %bf.clear1442 = and i32 %bf.load1440, 512
  %bf.load1445 = load i32* %code3, align 8
  %bf.clear1446 = and i32 %bf.load1445, -513
  %bf.set1447 = or i32 %bf.clear1446, %bf.clear1442
  store i32 %bf.set1447, i32* %code3, align 8
  br label %return

if.end1448:                                       ; preds = %if.end1435
  %125 = bitcast %struct.realvaluetype* %x.i to i8*
  call void @llvm.lifetime.start(i64 24, i8* %125) #1
  %126 = bitcast %struct.realvaluetype* %l.i to i8*
  call void @llvm.lifetime.start(i64 24, i8* %126) #1
  %127 = bitcast %struct.realvaluetype* %u.i to i8*
  call void @llvm.lifetime.start(i64 24, i8* %127) #1
  %128 = bitcast %struct.realvaluetype* %tmp148.i to i8*
  call void @llvm.lifetime.start(i64 24, i8* %128) #1
  %129 = bitcast i64* %low170.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %129) #1
  %130 = bitcast i64* %high172.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %130) #1
  %131 = bitcast %struct.fc_args* %args.i to i8*
  call void @llvm.lifetime.start(i64 24, i8* %131) #1
  %code.i11032 = getelementptr inbounds %union.tree_node* %78, i64 0, i32 0, i32 0, i32 2
  %bf.load.i11033 = load i32* %code.i11032, align 8
  %bf.clear.i11034 = and i32 %bf.load.i11033, 255
  switch i32 %bf.clear.i11034, label %if.end288.i [
    i32 13, label %if.then.i11035
    i32 15, label %if.then.i11035
    i32 6, label %if.then.i11035
    i32 10, label %if.then.i11035
    i32 11, label %if.then.i11035
    i32 12, label %if.then.i11035
    i32 7, label %if.then219.i
  ]

if.then.i11035:                                   ; preds = %if.end1448, %if.end1448, %if.end1448, %if.end1448, %if.end1448, %if.end1448
  %bf.load34.i.in = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 0, i32 2
  %bf.load34.i = load i32* %bf.load34.i.in, align 8
  %code33.i = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 0, i32 2
  %bf.clear35.i = and i32 %bf.load34.i, 255
  switch i32 %bf.clear35.i, label %if.end209.i [
    i32 25, label %if.then37.i
    i32 26, label %if.then136.i
  ]

if.then37.i:                                      ; preds = %if.then.i11035
  %type38.i = bitcast %union.tree_node* %78 to %struct.tree_type*
  %precision.i = getelementptr inbounds %struct.tree_type* %type38.i, i64 0, i32 6
  %bf.load39.i = load i32* %precision.i, align 4
  %bf.clear40.i = and i32 %bf.load39.i, 511
  %cmp41.i = icmp ugt i32 %bf.clear40.i, 128
  br i1 %cmp41.i, label %return, label %if.end.i11036

if.end.i11036:                                    ; preds = %if.then37.i
  %bf.clear50.i = and i32 %bf.load39.i, 131072
  %notlhs.i = icmp eq i32 %bf.clear.i11034, 6
  %notrhs.i = icmp ne i32 %bf.clear50.i, 0
  %or.cond369.not.i = and i1 %notrhs.i, %notlhs.i
  %bf.clear55.i = and i32 %bf.load34.i, 262144
  %tobool56.i = icmp eq i32 %bf.clear55.i, 0
  %or.cond370.i = and i1 %or.cond369.not.i, %tobool56.i
  br i1 %or.cond370.i, label %land.lhs.true57.i, label %if.end62.i

land.lhs.true57.i:                                ; preds = %if.end.i11036
  %call.i11037 = call i32 @compare_tree_int(%union.tree_node* %arg0.5, i64 10000) #1
  %cmp58.i = icmp slt i32 %call.i11037, 0
  br i1 %cmp58.i, label %if.then59.i, label %if.end62.i

if.then59.i:                                      ; preds = %land.lhs.true57.i
  %int_cst60.i = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 2
  %low.i = bitcast i32* %int_cst60.i to i64*
  %132 = load i64* %low.i, align 8, !tbaa !1
  %call61.i = call %union.tree_node* @size_int_type_wide(i64 %132, %union.tree_node* %78) #1
  br label %return

if.end62.i:                                       ; preds = %land.lhs.true57.i, %if.end.i11036
  %int_cst64.i = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 2
  %low65.i = bitcast i32* %int_cst64.i to i64*
  %133 = load i64* %low65.i, align 8, !tbaa !1
  %high.i = getelementptr inbounds i32* %int_cst64.i, i64 2
  %134 = bitcast i32* %high.i to i64*
  %135 = load i64* %134, align 8, !tbaa !10
  %call68.i = call %union.tree_node* @build_int_2_wide(i64 %133, i64 %135) #1
  %type70.i = getelementptr inbounds %union.tree_node* %call68.i, i64 0, i32 0, i32 0, i32 1
  store %union.tree_node* %78, %union.tree_node** %type70.i, align 8, !tbaa !11
  %136 = load i64* %134, align 8, !tbaa !10
  %cmp74.i = icmp slt i64 %136, 0
  br i1 %cmp74.i, label %land.rhs.i, label %land.end.i

land.rhs.i:                                       ; preds = %if.end62.i
  %bf.load76.i = load i32* %code.i11032, align 8
  %bf.lshr77.i = lshr i32 %bf.load76.i, 13
  %bf.clear78.i = and i32 %bf.lshr77.i, 1
  %type80.i = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 0, i32 1
  %137 = load %union.tree_node** %type80.i, align 8, !tbaa !11
  %unsigned_flag82.i = getelementptr inbounds %union.tree_node* %137, i64 0, i32 0, i32 0, i32 2
  %bf.load83.i = load i32* %unsigned_flag82.i, align 8
  %bf.lshr84.i = lshr i32 %bf.load83.i, 13
  %bf.clear85.i = and i32 %bf.lshr84.i, 1
  %cmp86.i = icmp ult i32 %bf.clear78.i, %bf.clear85.i
  br label %land.end.i

land.end.i:                                       ; preds = %land.rhs.i, %if.end62.i
  %138 = phi i1 [ false, %if.end62.i ], [ %cmp86.i, %land.rhs.i ]
  %land.ext.i = zext i1 %138 to i32
  %call87.i = call i32 @force_fit_type(%union.tree_node* %call68.i, i32 %land.ext.i) #1
  %tobool88.i = icmp eq i32 %call87.i, 0
  br i1 %tobool88.i, label %lor.rhs.i, label %land.lhs.true89.i

land.lhs.true89.i:                                ; preds = %land.end.i
  %type91.i = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 0, i32 1
  %139 = load %union.tree_node** %type91.i, align 8, !tbaa !11
  %code93.i = getelementptr inbounds %union.tree_node* %139, i64 0, i32 0, i32 0, i32 2
  %bf.load94.i = load i32* %code93.i, align 8
  %bf.clear95.i = and i32 %bf.load94.i, 255
  switch i32 %bf.clear95.i, label %lor.end.i [
    i32 13, label %lor.rhs.i
    i32 15, label %lor.rhs.i
  ]

lor.rhs.i:                                        ; preds = %land.lhs.true89.i, %land.lhs.true89.i, %land.end.i
  %bf.load106.i = load i32* %code33.i, align 8
  %bf.clear108.i = and i32 %bf.load106.i, 524288
  %tobool109.i = icmp ne i32 %bf.clear108.i, 0
  br label %lor.end.i

lor.end.i:                                        ; preds = %lor.rhs.i, %land.lhs.true89.i
  %140 = phi i1 [ %tobool109.i, %lor.rhs.i ], [ true, %land.lhs.true89.i ]
  %lor.ext.i11038 = zext i1 %140 to i32
  %public_flag111.i = getelementptr inbounds %union.tree_node* %call68.i, i64 0, i32 0, i32 0, i32 2
  %bf.load112.i = load i32* %public_flag111.i, align 8
  %bf.shl.i = shl nuw nsw i32 %lor.ext.i11038, 19
  %bf.clear113.i = and i32 %bf.load112.i, -524289
  %bf.set.i11039 = or i32 %bf.clear113.i, %bf.shl.i
  store i32 %bf.set.i11039, i32* %public_flag111.i, align 8
  %bf.load121.i = load i32* %code33.i, align 8
  %or368.i = shl nuw nsw i32 %lor.ext.i11038, 18
  %bf.load121.mask.i = and i32 %bf.load121.i, 262144
  %bf.shl128.i = or i32 %bf.load121.mask.i, %or368.i
  %bf.clear129.i = and i32 %bf.set.i11039, -262145
  %bf.set130.i = or i32 %bf.shl128.i, %bf.clear129.i
  store i32 %bf.set130.i, i32* %public_flag111.i, align 8
  br label %if.end209.i

if.then136.i:                                     ; preds = %if.then.i11035
  %type139.i = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 0, i32 1
  %141 = load %union.tree_node** %type139.i, align 8, !tbaa !11
  %real_cst140.i = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 2
  %142 = bitcast i32* %real_cst140.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %125, i8* %142, i64 24, i32 8, i1 false) #1, !tbaa.struct !24
  %143 = getelementptr inbounds %union.tree_node* %78, i64 0, i32 0, i32 12
  %144 = load %union.tree_node** %143, align 8, !tbaa !25
  call void @real_value_from_int_cst(%struct.realvaluetype* sret %l.i, %union.tree_node* %141, %union.tree_node* %144) #1
  %145 = getelementptr inbounds %union.tree_node* %78, i64 0, i32 0, i32 13
  %146 = load %union.tree_node** %145, align 8, !tbaa !26
  %cmp143.i = icmp eq %union.tree_node* %146, null
  br i1 %cmp143.i, label %if.end152.critedge.i, label %if.then145.i

if.then145.i:                                     ; preds = %if.then136.i
  call void @real_value_from_int_cst(%struct.realvaluetype* sret %tmp148.i, %union.tree_node* %141, %union.tree_node* %146) #1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %127, i8* %128, i64 24, i32 8, i1 false) #1, !tbaa.struct !24
  call void @earith(%struct.realvaluetype* %l.i, i32 60, %struct.realvaluetype* %l.i, %struct.realvaluetype* @dconst1) #1
  call void @earith(%struct.realvaluetype* %u.i, i32 59, %struct.realvaluetype* %u.i, %struct.realvaluetype* @dconst1) #1
  br label %if.end152.i

if.end152.critedge.i:                             ; preds = %if.then136.i
  call void @earith(%struct.realvaluetype* %l.i, i32 60, %struct.realvaluetype* %l.i, %struct.realvaluetype* @dconst1) #1
  br label %if.end152.i

if.end152.i:                                      ; preds = %if.end152.critedge.i, %if.then145.i
  %call153.i = call i32 @target_isnan(%struct.realvaluetype* byval align 8 %x.i) #1
  %tobool154.i = icmp eq i32 %call153.i, 0
  br i1 %tobool154.i, label %if.else156.i, label %if.then155.i

if.then155.i:                                     ; preds = %if.end152.i
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %125, i8* bitcast (%struct.realvaluetype* @dconst0 to i8*), i64 24, i32 8, i1 false) #1, !tbaa.struct !24
  br label %if.end168.i

if.else156.i:                                     ; preds = %if.end152.i
  %call157.i = call i32 @ereal_cmp(%struct.realvaluetype* byval align 8 %l.i, %struct.realvaluetype* byval align 8 %x.i) #1
  %cmp158.i = icmp ne i32 %call157.i, -1
  %or.cond.i11040 = or i1 %cmp158.i, %cmp143.i
  br i1 %or.cond.i11040, label %if.then166.i, label %land.lhs.true162.i

land.lhs.true162.i:                               ; preds = %if.else156.i
  %call163.i = call i32 @ereal_cmp(%struct.realvaluetype* byval align 8 %x.i, %struct.realvaluetype* byval align 8 %u.i) #1
  %cmp164.i = icmp eq i32 %call163.i, -1
  br i1 %cmp164.i, label %if.end168.i, label %if.then166.i

if.then166.i:                                     ; preds = %land.lhs.true162.i, %if.else156.i
  br label %if.end168.i

if.end168.i:                                      ; preds = %if.then166.i, %land.lhs.true162.i, %if.then155.i
  %overflow.0.i = phi i32 [ 1, %if.then155.i ], [ 1, %if.then166.i ], [ 0, %land.lhs.true162.i ]
  call void @ereal_to_int(i64* %low170.i, i64* %high172.i, %struct.realvaluetype* byval align 8 %x.i) #1
  %147 = load i64* %low170.i, align 8, !tbaa !13
  %148 = load i64* %high172.i, align 8, !tbaa !13
  %call173.i = call %union.tree_node* @build_int_2_wide(i64 %147, i64 %148) #1
  %type175.i = getelementptr inbounds %union.tree_node* %call173.i, i64 0, i32 0, i32 0, i32 1
  store %union.tree_node* %78, %union.tree_node** %type175.i, align 8, !tbaa !11
  %bf.load178.i = load i32* %code33.i, align 8
  %bf.lshr179.i = lshr i32 %bf.load178.i, 19
  %call181.i = call i32 @force_fit_type(%union.tree_node* %call173.i, i32 %overflow.0.i) #1
  %or182.i = or i32 %bf.lshr179.i, %call181.i
  %public_flag184.i = getelementptr inbounds %union.tree_node* %call173.i, i64 0, i32 0, i32 0, i32 2
  %bf.load185.i = load i32* %public_flag184.i, align 8
  %bf.value186.i = shl i32 %or182.i, 19
  %bf.shl187.i = and i32 %bf.value186.i, 524288
  %bf.clear188.i = and i32 %bf.load185.i, -524289
  %bf.set189.i = or i32 %bf.shl187.i, %bf.clear188.i
  store i32 %bf.set189.i, i32* %public_flag184.i, align 8
  %bf.load197.i = load i32* %code33.i, align 8
  %bf.clear194365366.i = shl i32 %or182.i, 18
  %bf.lshr198367.i = or i32 %bf.clear194365366.i, %bf.load197.i
  %bf.shl205.i = and i32 %bf.lshr198367.i, 262144
  %bf.clear206.i = and i32 %bf.set189.i, -262145
  %bf.set207.i = or i32 %bf.clear206.i, %bf.shl205.i
  store i32 %bf.set207.i, i32* %public_flag184.i, align 8
  br label %if.end209.i

if.end209.i:                                      ; preds = %if.end168.i, %lor.end.i, %if.then.i11035
  %t.addr.0.i = phi %union.tree_node* [ %call68.i, %lor.end.i ], [ %call173.i, %if.end168.i ], [ %expr, %if.then.i11035 ]
  %type211.i = getelementptr inbounds %union.tree_node* %t.addr.0.i, i64 0, i32 0, i32 0, i32 1
  store %union.tree_node* %78, %union.tree_node** %type211.i, align 8, !tbaa !11
  br label %if.end288.i

if.then219.i:                                     ; preds = %if.end1448
  %code221.i = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 0, i32 2
  %bf.load222.i = load i32* %code221.i, align 8
  %bf.clear223.i = and i32 %bf.load222.i, 255
  switch i32 %bf.clear223.i, label %if.end288.i [
    i32 25, label %if.then226.i
    i32 26, label %if.then235.i
  ]

if.then226.i:                                     ; preds = %if.then219.i
  %call227.i = call %union.tree_node* @build_real_from_int_cst(%union.tree_node* %78, %union.tree_node* %arg0.5) #1
  br label %return

if.then235.i:                                     ; preds = %if.then219.i
  %real_cst238.i = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 2
  %149 = bitcast i32* %real_cst238.i to %struct.realvaluetype*
  %call239.i = call i32 @target_isnan(%struct.realvaluetype* byval align 8 %149) #1
  %tobool240.i = icmp eq i32 %call239.i, 0
  br i1 %tobool240.i, label %if.end244.i, label %if.then241.i

if.then241.i:                                     ; preds = %if.then235.i
  %type243.i = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 0, i32 1
  store %union.tree_node* %78, %union.tree_node** %type243.i, align 8, !tbaa !11
  br label %return

if.end244.i:                                      ; preds = %if.then235.i
  %arg1245.i = getelementptr inbounds %struct.fc_args* %args.i, i64 0, i32 0
  store %union.tree_node* %arg0.5, %union.tree_node** %arg1245.i, align 8, !tbaa !27
  %type246.i = getelementptr inbounds %struct.fc_args* %args.i, i64 0, i32 1
  store %union.tree_node* %78, %union.tree_node** %type246.i, align 8, !tbaa !29
  %call247.i = call i32 @do_float_handler(void (i8*)* @fold_convert_1, i8* %131) #1
  %tobool248.i = icmp eq i32 %call247.i, 0
  br i1 %tobool248.i, label %if.else251.i, label %if.then249.i

if.then249.i:                                     ; preds = %if.end244.i
  %t250.i = getelementptr inbounds %struct.fc_args* %args.i, i64 0, i32 2
  %150 = load %union.tree_node** %t250.i, align 8, !tbaa !30
  br label %if.end253.i

if.else251.i:                                     ; preds = %if.end244.i
  %call252.i = call %union.tree_node* @copy_node(%union.tree_node* %arg0.5) #1
  br label %if.end253.i

if.end253.i:                                      ; preds = %if.else251.i, %if.then249.i
  %overflow.1.i = phi i32 [ 0, %if.then249.i ], [ 1, %if.else251.i ]
  %t.addr.1.i = phi %union.tree_node* [ %150, %if.then249.i ], [ %call252.i, %if.else251.i ]
  %bf.load256.i = load i32* %code221.i, align 8
  %bf.lshr257.i = lshr i32 %bf.load256.i, 19
  %call259.i = call i32 @force_fit_type(%union.tree_node* %t.addr.1.i, i32 %overflow.1.i) #1
  %or260.i = or i32 %bf.lshr257.i, %call259.i
  %public_flag262.i = getelementptr inbounds %union.tree_node* %t.addr.1.i, i64 0, i32 0, i32 0, i32 2
  %bf.load263.i = load i32* %public_flag262.i, align 8
  %bf.value264.i = shl i32 %or260.i, 19
  %bf.shl265.i = and i32 %bf.value264.i, 524288
  %bf.clear266.i = and i32 %bf.load263.i, -524289
  %bf.set267.i = or i32 %bf.shl265.i, %bf.clear266.i
  store i32 %bf.set267.i, i32* %public_flag262.i, align 8
  %bf.load275.i = load i32* %code221.i, align 8
  %bf.clear272362363.i = shl i32 %or260.i, 18
  %bf.lshr276364.i = or i32 %bf.clear272362363.i, %bf.load275.i
  %bf.shl283.i = and i32 %bf.lshr276364.i, 262144
  %bf.clear284.i = and i32 %bf.set267.i, -262145
  %bf.set285.i = or i32 %bf.clear284.i, %bf.shl283.i
  store i32 %bf.set285.i, i32* %public_flag262.i, align 8
  br label %return

if.end288.i:                                      ; preds = %if.then219.i, %if.end209.i, %if.end1448
  %t.addr.2.i = phi %union.tree_node* [ %t.addr.0.i, %if.end209.i ], [ %expr, %if.end1448 ], [ %expr, %if.then219.i ]
  %constant_flag.i = getelementptr inbounds %union.tree_node* %t.addr.2.i, i64 0, i32 0, i32 0, i32 2
  %bf.load290.i = load i32* %constant_flag.i, align 8
  %bf.set292.i = or i32 %bf.load290.i, 512
  store i32 %bf.set292.i, i32* %constant_flag.i, align 8
  br label %return

sw.bb1450:                                        ; preds = %if.end901
  %operands1452 = getelementptr inbounds %union.tree_node* %expr, i64 0, i32 0, i32 2
  %arrayidx1453 = bitcast i32* %operands1452 to %union.tree_node**
  %151 = load %union.tree_node** %arrayidx1453, align 8, !tbaa !14
  %code1455 = getelementptr inbounds %union.tree_node* %151, i64 0, i32 0, i32 0, i32 2
  %bf.load1456 = load i32* %code1455, align 8
  %bf.clear1457 = and i32 %bf.load1456, 255
  %cmp1458 = icmp eq i32 %bf.clear1457, 117
  br i1 %cmp1458, label %if.then1460, label %return

if.then1460:                                      ; preds = %sw.bb1450
  %operands1465 = getelementptr inbounds %union.tree_node* %151, i64 0, i32 0, i32 2
  %arrayidx1466 = bitcast i32* %operands1465 to %union.tree_node**
  %152 = load %union.tree_node** %arrayidx1466, align 8, !tbaa !14
  %call1467 = call %union.tree_node* @build1(i32 117, %union.tree_node* %0, %union.tree_node* %152) #1
  br label %return

sw.bb1469:                                        ; preds = %if.end901
  %code1471 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 0, i32 2
  %bf.load1472 = load i32* %code1471, align 8
  %bf.clear1473 = and i32 %bf.load1472, 255
  %cmp1474 = icmp eq i32 %bf.clear1473, 46
  br i1 %cmp1474, label %if.then1476, label %return

if.then1476:                                      ; preds = %sw.bb1469
  %operands1478 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 2
  %arrayidx1479 = getelementptr inbounds i32* %operands1478, i64 2
  %153 = bitcast i32* %arrayidx1479 to %union.tree_node**
  %154 = load %union.tree_node** %153, align 8, !tbaa !14
  %call1480 = call %union.tree_node* @purpose_member(%union.tree_node* %arg1.3, %union.tree_node* %154) #1
  %tobool1481 = icmp eq %union.tree_node* %call1480, null
  br i1 %tobool1481, label %return, label %if.then1482

if.then1482:                                      ; preds = %if.then1476
  %value = getelementptr inbounds %union.tree_node* %call1480, i64 0, i32 0, i32 2
  %155 = bitcast i32* %value to %union.tree_node**
  %156 = load %union.tree_node** %155, align 8, !tbaa !31
  br label %return

sw.bb1485:                                        ; preds = %if.end901
  %bf.load1488 = load i32* %code3, align 8
  %bf.value1489 = shl i32 %wins.3, 9
  %bf.shl1490 = and i32 %bf.value1489, 512
  %bf.clear1491 = and i32 %bf.load1488, -513
  %bf.set1492 = or i32 %bf.clear1491, %bf.shl1490
  store i32 %bf.set1492, i32* %code3, align 8
  br label %return

sw.bb1493:                                        ; preds = %if.end901
  %tobool1494 = icmp eq i32 %wins.3, 0
  %code1497 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 0, i32 2
  %bf.load1498 = load i32* %code1497, align 8
  %bf.clear1499 = and i32 %bf.load1498, 255
  br i1 %tobool1494, label %if.else1563, label %if.then1495

if.then1495:                                      ; preds = %sw.bb1493
  switch i32 %bf.clear1499, label %return [
    i32 25, label %if.then1502
    i32 26, label %if.then1558
  ]

if.then1502:                                      ; preds = %if.then1495
  %int_cst1503 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 2
  %low1504 = bitcast i32* %int_cst1503 to i64*
  %157 = load i64* %low1504, align 8, !tbaa !1
  %high1507 = getelementptr inbounds i32* %int_cst1503, i64 2
  %158 = bitcast i32* %high1507 to i64*
  %159 = load i64* %158, align 8, !tbaa !10
  %cmp.i11042 = icmp eq i64 %157, 0
  br i1 %cmp.i11042, label %if.then.i11043, label %if.else.i11044

if.then.i11043:                                   ; preds = %if.then1502
  %sub.i = sub nsw i64 0, %159
  %and.i = and i64 %159, %sub.i
  %phitmp = icmp sgt i64 %and.i, -1
  br label %neg_double.exit

if.else.i11044:                                   ; preds = %if.then1502
  %sub2.i = sub i64 0, %157
  %neg.i = xor i64 %159, -1
  br label %neg_double.exit

neg_double.exit:                                  ; preds = %if.then.i11043, %if.else.i11044
  %low.0.load11154 = phi i64 [ 0, %if.then.i11043 ], [ %sub2.i, %if.else.i11044 ]
  %high.0.load11153 = phi i64 [ %sub.i, %if.then.i11043 ], [ %neg.i, %if.else.i11044 ]
  %retval.0.i11045 = phi i1 [ %phitmp, %if.then.i11043 ], [ true, %if.else.i11044 ]
  %call1509 = call %union.tree_node* @build_int_2_wide(i64 %low.0.load11154, i64 %high.0.load11153) #1
  %type1511 = getelementptr inbounds %union.tree_node* %call1509, i64 0, i32 0, i32 0, i32 1
  store %union.tree_node* %0, %union.tree_node** %type1511, align 8, !tbaa !11
  %bf.load1513 = load i32* %code1497, align 8
  %bf.lshr1514 = lshr i32 %bf.load1513, 19
  br i1 %retval.0.i11045, label %land.end1524, label %land.rhs1517

land.rhs1517:                                     ; preds = %neg_double.exit
  %unsigned_flag1519 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2
  %bf.load1520 = load i32* %unsigned_flag1519, align 8
  %bf.clear1522 = and i32 %bf.load1520, 8192
  %lnot = icmp eq i32 %bf.clear1522, 0
  br label %land.end1524

land.end1524:                                     ; preds = %neg_double.exit, %land.rhs1517
  %160 = phi i1 [ false, %neg_double.exit ], [ %lnot, %land.rhs1517 ]
  %land.ext1525 = zext i1 %160 to i32
  %call1526 = call i32 @force_fit_type(%union.tree_node* %call1509, i32 %land.ext1525)
  %or = or i32 %call1526, %bf.lshr1514
  %public_flag1528 = getelementptr inbounds %union.tree_node* %call1509, i64 0, i32 0, i32 0, i32 2
  %bf.load1529 = load i32* %public_flag1528, align 8
  %bf.value1530 = shl i32 %or, 19
  %bf.shl1531 = and i32 %bf.value1530, 524288
  %bf.clear1532 = and i32 %bf.load1529, -524289
  %bf.set1533 = or i32 %bf.shl1531, %bf.clear1532
  store i32 %bf.set1533, i32* %public_flag1528, align 8
  %bf.load1540 = load i32* %code1497, align 8
  %bf.clear153897019702 = shl i32 %or, 18
  %bf.lshr15419703 = or i32 %bf.clear153897019702, %bf.load1540
  %bf.shl1548 = and i32 %bf.lshr15419703, 262144
  %bf.clear1549 = and i32 %bf.set1533, -262145
  %bf.set1550 = or i32 %bf.clear1549, %bf.shl1548
  store i32 %bf.set1550, i32* %public_flag1528, align 8
  br label %return

if.then1558:                                      ; preds = %if.then1495
  %real_cst1559 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 2
  %161 = bitcast i32* %real_cst1559 to %struct.realvaluetype*
  call void @ereal_negate(%struct.realvaluetype* sret %agg.tmp, %struct.realvaluetype* byval align 8 %161) #1
  %call1560 = call %union.tree_node* @build_real(%union.tree_node* %0, %struct.realvaluetype* byval align 8 %agg.tmp) #1
  br label %return

if.else1563:                                      ; preds = %sw.bb1493
  switch i32 %bf.clear1499, label %return [
    i32 77, label %if.then1570
    i32 60, label %land.lhs.true1581
  ]

if.then1570:                                      ; preds = %if.else1563
  %operands1572 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 2
  %arrayidx1573 = bitcast i32* %operands1572 to %union.tree_node**
  %162 = load %union.tree_node** %arrayidx1573, align 8, !tbaa !14
  br label %return

land.lhs.true1581:                                ; preds = %if.else1563
  %code1583 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2
  %bf.load1584 = load i32* %code1583, align 8
  %bf.clear1585 = and i32 %bf.load1584, 255
  switch i32 %bf.clear1585, label %if.then1606 [
    i32 7, label %lor.lhs.false1604
    i32 8, label %land.lhs.true1595
  ]

land.lhs.true1595:                                ; preds = %land.lhs.true1581
  %type1597 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 1
  %163 = load %union.tree_node** %type1597, align 8, !tbaa !11
  %code1599 = getelementptr inbounds %union.tree_node* %163, i64 0, i32 0, i32 0, i32 2
  %bf.load1600 = load i32* %code1599, align 8
  %bf.clear1601 = and i32 %bf.load1600, 255
  %cmp1602 = icmp ne i32 %bf.clear1601, 7
  %164 = load i32* @flag_unsafe_math_optimizations, align 4
  %tobool1605 = icmp ne i32 %164, 0
  %or.cond7757 = or i1 %cmp1602, %tobool1605
  br i1 %or.cond7757, label %if.then1606, label %return

lor.lhs.false1604:                                ; preds = %land.lhs.true1581
  %.old7756 = load i32* @flag_unsafe_math_optimizations, align 4, !tbaa !12
  %tobool1605.old = icmp eq i32 %.old7756, 0
  br i1 %tobool1605.old, label %return, label %if.then1606

if.then1606:                                      ; preds = %land.lhs.true1581, %lor.lhs.false1604, %land.lhs.true1595
  %operands1608 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 2
  %arrayidx1609 = getelementptr inbounds i32* %operands1608, i64 2
  %165 = bitcast i32* %arrayidx1609 to %union.tree_node**
  %166 = load %union.tree_node** %165, align 8, !tbaa !14
  %arrayidx1612 = bitcast i32* %operands1608 to %union.tree_node**
  %167 = load %union.tree_node** %arrayidx1612, align 8, !tbaa !14
  %call1613 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 60, %union.tree_node* %0, %union.tree_node* %166, %union.tree_node* %167) #1
  br label %return

sw.bb1617:                                        ; preds = %if.end901
  %tobool1618 = icmp eq i32 %wins.3, 0
  %code1621 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 0, i32 2
  %bf.load1622 = load i32* %code1621, align 8
  %bf.clear1623 = and i32 %bf.load1622, 255
  br i1 %tobool1618, label %if.else1730, label %if.then1619

if.then1619:                                      ; preds = %sw.bb1617
  switch i32 %bf.clear1623, label %return [
    i32 25, label %if.then1626
    i32 26, label %if.then1717
  ]

if.then1626:                                      ; preds = %if.then1619
  %unsigned_flag1628 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2
  %bf.load1629 = load i32* %unsigned_flag1628, align 8
  %bf.clear1631 = and i32 %bf.load1629, 8192
  %tobool1632 = icmp eq i32 %bf.clear1631, 0
  br i1 %tobool1632, label %if.else1634, label %return

if.else1634:                                      ; preds = %if.then1626
  %168 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !tbaa !14
  %int_cst1636 = getelementptr inbounds %union.tree_node* %168, i64 0, i32 0, i32 2
  %high1637 = getelementptr inbounds i32* %int_cst1636, i64 2
  %169 = bitcast i32* %high1637 to i64*
  %170 = load i64* %169, align 8, !tbaa !10
  %int_cst1639 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 2
  %high1640 = getelementptr inbounds i32* %int_cst1639, i64 2
  %171 = bitcast i32* %high1640 to i64*
  %172 = load i64* %171, align 8, !tbaa !10
  %cmp1641 = icmp slt i64 %170, %172
  br i1 %cmp1641, label %return, label %lor.lhs.false1643

lor.lhs.false1643:                                ; preds = %if.else1634
  %cmp1650 = icmp eq i64 %170, %172
  br i1 %cmp1650, label %land.lhs.true1652, label %lor.lhs.false1643.if.else1662_crit_edge

lor.lhs.false1643.if.else1662_crit_edge:          ; preds = %lor.lhs.false1643
  %low1668.phi.trans.insert = bitcast i32* %int_cst1639 to i64*
  %.pre11259 = load i64* %low1668.phi.trans.insert, align 8, !tbaa !1
  br label %if.else1662

land.lhs.true1652:                                ; preds = %lor.lhs.false1643
  %low1655 = bitcast i32* %int_cst1636 to i64*
  %173 = load i64* %low1655, align 8, !tbaa !1
  %low1658 = bitcast i32* %int_cst1639 to i64*
  %174 = load i64* %low1658, align 8, !tbaa !1
  %cmp1659 = icmp ult i64 %173, %174
  br i1 %cmp1659, label %return, label %if.else1662

if.else1662:                                      ; preds = %lor.lhs.false1643.if.else1662_crit_edge, %land.lhs.true1652
  %175 = phi i64 [ %.pre11259, %lor.lhs.false1643.if.else1662_crit_edge ], [ %174, %land.lhs.true1652 ]
  %cmp.i11046 = icmp eq i64 %175, 0
  br i1 %cmp.i11046, label %if.then.i11050, label %if.else.i11053

if.then.i11050:                                   ; preds = %if.else1662
  %sub.i11047 = sub nsw i64 0, %172
  %and.i11048 = and i64 %172, %sub.i11047
  %and.lobit.i11049 = lshr i64 %and.i11048, 63
  %176 = trunc i64 %and.lobit.i11049 to i32
  br label %neg_double.exit11055

if.else.i11053:                                   ; preds = %if.else1662
  %sub2.i11051 = sub i64 0, %175
  %neg.i11052 = xor i64 %172, -1
  br label %neg_double.exit11055

neg_double.exit11055:                             ; preds = %if.then.i11050, %if.else.i11053
  %low1663.0.load11152 = phi i64 [ 0, %if.then.i11050 ], [ %sub2.i11051, %if.else.i11053 ]
  %high1664.0.load11151 = phi i64 [ %sub.i11047, %if.then.i11050 ], [ %neg.i11052, %if.else.i11053 ]
  %retval.0.i11054 = phi i32 [ %176, %if.then.i11050 ], [ 0, %if.else.i11053 ]
  %call1673 = call %union.tree_node* @build_int_2_wide(i64 %low1663.0.load11152, i64 %high1664.0.load11151) #1
  %type1675 = getelementptr inbounds %union.tree_node* %call1673, i64 0, i32 0, i32 0, i32 1
  store %union.tree_node* %0, %union.tree_node** %type1675, align 8, !tbaa !11
  %bf.load1678 = load i32* %code1621, align 8
  %bf.lshr1679 = lshr i32 %bf.load1678, 19
  %call1681 = call i32 @force_fit_type(%union.tree_node* %call1673, i32 %retval.0.i11054)
  %or1682 = or i32 %bf.lshr1679, %call1681
  %public_flag1684 = getelementptr inbounds %union.tree_node* %call1673, i64 0, i32 0, i32 0, i32 2
  %bf.load1685 = load i32* %public_flag1684, align 8
  %bf.value1686 = shl i32 %or1682, 19
  %bf.shl1687 = and i32 %bf.value1686, 524288
  %bf.clear1688 = and i32 %bf.load1685, -524289
  %bf.set1689 = or i32 %bf.shl1687, %bf.clear1688
  store i32 %bf.set1689, i32* %public_flag1684, align 8
  %bf.load1697 = load i32* %code1621, align 8
  %bf.clear169496989699 = shl i32 %or1682, 18
  %bf.lshr16989700 = or i32 %bf.clear169496989699, %bf.load1697
  %bf.shl1705 = and i32 %bf.lshr16989700, 262144
  %bf.clear1706 = and i32 %bf.set1689, -262145
  %bf.set1707 = or i32 %bf.clear1706, %bf.shl1705
  store i32 %bf.set1707, i32* %public_flag1684, align 8
  br label %return

if.then1717:                                      ; preds = %if.then1619
  %real_cst1719 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 2
  %177 = bitcast i32* %real_cst1719 to %struct.realvaluetype*
  %call1720 = call i32 @target_negative(%struct.realvaluetype* byval align 8 %177) #1
  %tobool1721 = icmp eq i32 %call1720, 0
  br i1 %tobool1721, label %return, label %if.then1722

if.then1722:                                      ; preds = %if.then1717
  call void @ereal_negate(%struct.realvaluetype* sret %agg.tmp1723, %struct.realvaluetype* byval align 8 %177) #1
  %call1726 = call %union.tree_node* @build_real(%union.tree_node* %0, %struct.realvaluetype* byval align 8 %agg.tmp1723) #1
  br label %return

if.else1730:                                      ; preds = %sw.bb1617
  switch i32 %bf.clear1623, label %return [
    i32 80, label %if.then1744
    i32 77, label %if.then1744
  ]

if.then1744:                                      ; preds = %if.else1730, %if.else1730
  %operands1746 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 2
  %arrayidx1747 = bitcast i32* %operands1746 to %union.tree_node**
  %178 = load %union.tree_node** %arrayidx1747, align 8, !tbaa !14
  %call1748 = call %union.tree_node* @build1(i32 80, %union.tree_node* %0, %union.tree_node* %178) #1
  br label %return

sw.bb1751:                                        ; preds = %if.end901
  %type1753 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 0, i32 1
  %179 = load %union.tree_node** %type1753, align 8, !tbaa !11
  %code1755 = getelementptr inbounds %union.tree_node* %179, i64 0, i32 0, i32 0, i32 2
  %bf.load1756 = load i32* %code1755, align 8
  %bf.clear1757 = and i32 %bf.load1756, 255
  %cmp1758 = icmp eq i32 %bf.clear1757, 8
  br i1 %cmp1758, label %if.else1762, label %if.then1760

if.then1760:                                      ; preds = %sw.bb1751
  %call1761 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %arg0.5) #1
  br label %return

if.else1762:                                      ; preds = %sw.bb1751
  %code1764 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 0, i32 2
  %bf.load1765 = load i32* %code1764, align 8
  %bf.clear1766 = and i32 %bf.load1765, 255
  switch i32 %bf.clear1766, label %return [
    i32 125, label %if.then1769
    i32 27, label %if.then1785
    i32 59, label %if.then1805
    i32 60, label %if.then1805
    i32 126, label %if.then1829
  ]

if.then1769:                                      ; preds = %if.else1762
  %operands1771 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 2
  %arrayidx1772 = bitcast i32* %operands1771 to %union.tree_node**
  %180 = load %union.tree_node** %arrayidx1772, align 8, !tbaa !14
  %arrayidx1775 = getelementptr inbounds i32* %operands1771, i64 2
  %181 = bitcast i32* %arrayidx1775 to %union.tree_node**
  %182 = load %union.tree_node** %181, align 8, !tbaa !14
  %call1776 = call fastcc %union.tree_node* @negate_expr(%union.tree_node* %182)
  %call1777 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 125, %union.tree_node* %0, %union.tree_node* %180, %union.tree_node* %call1776) #1
  br label %return

if.then1785:                                      ; preds = %if.else1762
  %real1787 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 2
  %183 = bitcast i32* %real1787 to %union.tree_node**
  %184 = load %union.tree_node** %183, align 8, !tbaa !16
  %185 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 4
  %186 = load %union.tree_node** %185, align 8, !tbaa !33
  %call1789 = call fastcc %union.tree_node* @negate_expr(%union.tree_node* %186)
  %call1790 = call %union.tree_node* @build_complex(%union.tree_node* %0, %union.tree_node* %184, %union.tree_node* %call1789) #1
  br label %return

if.then1805:                                      ; preds = %if.else1762, %if.else1762
  %operands1811 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 2
  %arrayidx1812 = bitcast i32* %operands1811 to %union.tree_node**
  %187 = load %union.tree_node** %arrayidx1812, align 8, !tbaa !14
  %call1813 = call %union.tree_node* @build1(i32 126, %union.tree_node* %0, %union.tree_node* %187) #1
  %call1814 = call %union.tree_node* @fold(%union.tree_node* %call1813)
  %arrayidx1817 = getelementptr inbounds i32* %operands1811, i64 2
  %188 = bitcast i32* %arrayidx1817 to %union.tree_node**
  %189 = load %union.tree_node** %188, align 8, !tbaa !14
  %call1818 = call %union.tree_node* @build1(i32 126, %union.tree_node* %0, %union.tree_node* %189) #1
  %call1819 = call %union.tree_node* @fold(%union.tree_node* %call1818)
  %call1820 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %bf.clear1766, %union.tree_node* %0, %union.tree_node* %call1814, %union.tree_node* %call1819) #1
  %call1821 = call %union.tree_node* @fold(%union.tree_node* %call1820)
  br label %return

if.then1829:                                      ; preds = %if.else1762
  %operands1831 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 2
  %arrayidx1832 = bitcast i32* %operands1831 to %union.tree_node**
  %190 = load %union.tree_node** %arrayidx1832, align 8, !tbaa !14
  br label %return

sw.bb1838:                                        ; preds = %if.end901
  %tobool1839 = icmp eq i32 %wins.3, 0
  br i1 %tobool1839, label %if.else1876, label %if.then1840

if.then1840:                                      ; preds = %sw.bb1838
  %int_cst1842 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 2
  %low1843 = bitcast i32* %int_cst1842 to i64*
  %191 = load i64* %low1843, align 8, !tbaa !1
  %neg = xor i64 %191, -1
  %high1846 = getelementptr inbounds i32* %int_cst1842, i64 2
  %192 = bitcast i32* %high1846 to i64*
  %193 = load i64* %192, align 8, !tbaa !10
  %neg1847 = xor i64 %193, -1
  %call1848 = call %union.tree_node* @build_int_2_wide(i64 %neg, i64 %neg1847) #1
  %type1850 = getelementptr inbounds %union.tree_node* %call1848, i64 0, i32 0, i32 0, i32 1
  store %union.tree_node* %0, %union.tree_node** %type1850, align 8, !tbaa !11
  %call1851 = call i32 @force_fit_type(%union.tree_node* %call1848, i32 0)
  %public_flag1853 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 0, i32 2
  %bf.load1854 = load i32* %public_flag1853, align 8
  %bf.clear1856 = and i32 %bf.load1854, 524288
  %public_flag1858 = getelementptr inbounds %union.tree_node* %call1848, i64 0, i32 0, i32 0, i32 2
  %bf.load1859 = load i32* %public_flag1858, align 8
  %bf.clear1862 = and i32 %bf.load1859, -524289
  %bf.set1863 = or i32 %bf.clear1862, %bf.clear1856
  store i32 %bf.set1863, i32* %public_flag1858, align 8
  %bf.load1866 = load i32* %public_flag1853, align 8
  %bf.clear1868 = and i32 %bf.load1866, 262144
  %bf.clear1874 = and i32 %bf.set1863, -262145
  %bf.set1875 = or i32 %bf.clear1874, %bf.clear1868
  store i32 %bf.set1875, i32* %public_flag1858, align 8
  br label %return

if.else1876:                                      ; preds = %sw.bb1838
  %code1878 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 0, i32 2
  %bf.load1879 = load i32* %code1878, align 8
  %bf.clear1880 = and i32 %bf.load1879, 255
  %cmp1881 = icmp eq i32 %bf.clear1880, 90
  br i1 %cmp1881, label %if.then1883, label %return

if.then1883:                                      ; preds = %if.else1876
  %operands1885 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 2
  %arrayidx1886 = bitcast i32* %operands1885 to %union.tree_node**
  %194 = load %union.tree_node** %arrayidx1886, align 8, !tbaa !14
  br label %return

sw.bb1889:                                        ; preds = %if.end901
  %code1891 = getelementptr inbounds %union.tree_node* %arg1.3, i64 0, i32 0, i32 0, i32 2
  %bf.load1892 = load i32* %code1891, align 8
  %bf.clear1893 = and i32 %bf.load1892, 255
  %cmp1894 = icmp eq i32 %bf.clear1893, 77
  br i1 %cmp1894, label %if.then1896, label %if.end1902

if.then1896:                                      ; preds = %sw.bb1889
  %operands1898 = getelementptr inbounds %union.tree_node* %arg1.3, i64 0, i32 0, i32 2
  %arrayidx1899 = bitcast i32* %operands1898 to %union.tree_node**
  %195 = load %union.tree_node** %arrayidx1899, align 8, !tbaa !14
  %call1900 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 60, %union.tree_node* %0, %union.tree_node* %arg0.5, %union.tree_node* %195) #1
  %call1901 = call %union.tree_node* @fold(%union.tree_node* %call1900)
  br label %return

if.end1902:                                       ; preds = %sw.bb1889
  %code1904 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 0, i32 2
  %bf.load1905 = load i32* %code1904, align 8
  %bf.clear1906 = and i32 %bf.load1905, 255
  %cmp1907 = icmp eq i32 %bf.clear1906, 77
  br i1 %cmp1907, label %if.then1909, label %if.else1915

if.then1909:                                      ; preds = %if.end1902
  %operands1911 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 2
  %arrayidx1912 = bitcast i32* %operands1911 to %union.tree_node**
  %196 = load %union.tree_node** %arrayidx1912, align 8, !tbaa !14
  %call1913 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 60, %union.tree_node* %0, %union.tree_node* %arg1.3, %union.tree_node* %196) #1
  %call1914 = call %union.tree_node* @fold(%union.tree_node* %call1913)
  br label %return

if.else1915:                                      ; preds = %if.end1902
  %code1917 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2
  %bf.load1918 = load i32* %code1917, align 8
  %bf.clear1919 = and i32 %bf.load1918, 255
  switch i32 %bf.clear1919, label %if.then1938 [
    i32 7, label %if.else2295
    i32 8, label %land.lhs.true1929
  ]

land.lhs.true1929:                                ; preds = %if.else1915
  %type1931 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 1
  %197 = load %union.tree_node** %type1931, align 8, !tbaa !11
  %code1933 = getelementptr inbounds %union.tree_node* %197, i64 0, i32 0, i32 0, i32 2
  %bf.load1934 = load i32* %code1933, align 8
  %bf.clear1935 = and i32 %bf.load1934, 255
  %cmp1936 = icmp eq i32 %bf.clear1935, 7
  br i1 %cmp1936, label %if.else2295, label %if.then1938

if.then1938:                                      ; preds = %if.else1915, %land.lhs.true1929
  %call1939 = call i32 @integer_zerop(%union.tree_node* %arg1.3) #1
  %tobool1940 = icmp eq i32 %call1939, 0
  br i1 %tobool1940, label %if.end1944, label %if.then1941

if.then1941:                                      ; preds = %if.then1938
  %call1942 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %arg0.5) #1
  %code.i11084 = getelementptr inbounds %union.tree_node* %call1942, i64 0, i32 0, i32 0, i32 2
  %bf.load.i11085 = load i32* %code.i11084, align 8
  %bf.clear.i11086 = and i32 %bf.load.i11085, 255
  switch i32 %bf.clear.i11086, label %if.end.i11095 [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i11095:                                    ; preds = %if.then1941
  %type.i11087 = getelementptr inbounds %union.tree_node* %call1942, i64 0, i32 0, i32 0, i32 1
  %198 = load %union.tree_node** %type.i11087, align 8, !tbaa !11
  %call.i11088 = call %union.tree_node* @build1(i32 116, %union.tree_node* %198, %union.tree_node* %call1942) #1
  %bf.load26.i11089 = load i32* %code.i11084, align 8
  %bf.clear27.i11090 = and i32 %bf.load26.i11089, 512
  %constant_flag29.i11091 = getelementptr inbounds %union.tree_node* %call.i11088, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i11092 = load i32* %constant_flag29.i11091, align 8
  %bf.clear31.i11093 = and i32 %bf.load30.i11092, -513
  %bf.set.i11094 = or i32 %bf.clear31.i11093, %bf.clear27.i11090
  store i32 %bf.set.i11094, i32* %constant_flag29.i11091, align 8
  br label %return

if.end1944:                                       ; preds = %if.then1938
  %bf.load1947 = load i32* %code1904, align 8
  %bf.clear1948 = and i32 %bf.load1947, 255
  %cmp1949 = icmp eq i32 %bf.clear1948, 88
  br i1 %cmp1949, label %land.lhs.true1951, label %if.end1989

land.lhs.true1951:                                ; preds = %if.end1944
  %bf.load1954 = load i32* %code1891, align 8
  %bf.clear1955 = and i32 %bf.load1954, 255
  %cmp1956 = icmp eq i32 %bf.clear1955, 88
  br i1 %cmp1956, label %land.lhs.true1958, label %if.end1989

land.lhs.true1958:                                ; preds = %land.lhs.true1951
  %operands1960 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 2
  %arrayidx1961 = getelementptr inbounds i32* %operands1960, i64 2
  %199 = bitcast i32* %arrayidx1961 to %union.tree_node**
  %200 = load %union.tree_node** %199, align 8, !tbaa !14
  %code1963 = getelementptr inbounds %union.tree_node* %200, i64 0, i32 0, i32 0, i32 2
  %bf.load1964 = load i32* %code1963, align 8
  %bf.clear1965 = and i32 %bf.load1964, 255
  %cmp1966 = icmp eq i32 %bf.clear1965, 25
  br i1 %cmp1966, label %land.lhs.true1968, label %if.end1989

land.lhs.true1968:                                ; preds = %land.lhs.true1958
  %operands1970 = getelementptr inbounds %union.tree_node* %arg1.3, i64 0, i32 0, i32 2
  %arrayidx1971 = getelementptr inbounds i32* %operands1970, i64 2
  %201 = bitcast i32* %arrayidx1971 to %union.tree_node**
  %202 = load %union.tree_node** %201, align 8, !tbaa !14
  %code1973 = getelementptr inbounds %union.tree_node* %202, i64 0, i32 0, i32 0, i32 2
  %bf.load1974 = load i32* %code1973, align 8
  %bf.clear1975 = and i32 %bf.load1974, 255
  %cmp1976 = icmp eq i32 %bf.clear1975, 25
  br i1 %cmp1976, label %land.lhs.true1978, label %if.end1989

land.lhs.true1978:                                ; preds = %land.lhs.true1968
  %call1985 = call fastcc %union.tree_node* @const_binop(i32 88, %union.tree_node* %200, %union.tree_node* %202)
  %call1986 = call i32 @integer_zerop(%union.tree_node* %call1985) #1
  %tobool1987 = icmp eq i32 %call1986, 0
  br i1 %tobool1987, label %land.lhs.true1978.if.end1989_crit_edge, label %bit_ior

land.lhs.true1978.if.end1989_crit_edge:           ; preds = %land.lhs.true1978
  %bf.load1992.pre = load i32* %code1904, align 8
  br label %if.end1989

if.end1989:                                       ; preds = %land.lhs.true1978.if.end1989_crit_edge, %land.lhs.true1968, %land.lhs.true1958, %land.lhs.true1951, %if.end1944
  %bf.load2013 = phi i32 [ %bf.load1992.pre, %land.lhs.true1978.if.end1989_crit_edge ], [ %bf.load1947, %land.lhs.true1968 ], [ %bf.load1947, %land.lhs.true1958 ], [ %bf.load1947, %land.lhs.true1951 ], [ %bf.load1947, %if.end1944 ]
  %bf.clear1993 = and i32 %bf.load2013, 255
  %cmp1994 = icmp eq i32 %bf.clear1993, 59
  %bf.load1999 = load i32* %code1891, align 8
  %bf.clear2000 = and i32 %bf.load1999, 255
  %cmp2001 = icmp eq i32 %bf.clear2000, 61
  %or.cond11330 = and i1 %cmp1994, %cmp2001
  br i1 %or.cond11330, label %if.then2017, label %lor.lhs.false2003

lor.lhs.false2003:                                ; preds = %if.end1989
  %bf.clear2007 = and i32 %bf.load1999, 255
  %cmp2008 = icmp eq i32 %bf.clear2007, 59
  br i1 %cmp2008, label %land.lhs.true2010, label %if.end2179

land.lhs.true2010:                                ; preds = %lor.lhs.false2003
  %cmp2015 = icmp eq i32 %bf.clear1993, 61
  br i1 %cmp2015, label %if.then2017, label %bit_rotate

if.then2017:                                      ; preds = %if.end1989, %land.lhs.true2010
  %arg1.3.arg0.5 = select i1 %cmp1994, %union.tree_node* %arg1.3, %union.tree_node* %arg0.5
  %arg0.5.arg1.3 = select i1 %cmp1994, %union.tree_node* %arg0.5, %union.tree_node* %arg1.3
  %operands2028 = getelementptr inbounds %union.tree_node* %arg0.5.arg1.3, i64 0, i32 0, i32 2
  %arrayidx2029 = bitcast i32* %operands2028 to %union.tree_node**
  %203 = load %union.tree_node** %arrayidx2029, align 8, !tbaa !14
  %arrayidx2032 = getelementptr inbounds i32* %operands2028, i64 2
  %204 = bitcast i32* %arrayidx2032 to %union.tree_node**
  %205 = load %union.tree_node** %204, align 8, !tbaa !14
  %206 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !14
  br label %while.cond2033

while.cond2033:                                   ; preds = %land.rhs2060, %if.then2017
  %parg0.0 = phi %union.tree_node* [ %203, %if.then2017 ], [ %207, %land.rhs2060 ]
  %code2035 = getelementptr inbounds %union.tree_node* %parg0.0, i64 0, i32 0, i32 0, i32 2
  %bf.load2036 = load i32* %code2035, align 8
  %bf.clear2037 = and i32 %bf.load2036, 255
  %bf.clear2037.off = add i32 %bf.clear2037, -114
  %switch9785 = icmp ult i32 %bf.clear2037.off, 3
  br i1 %switch9785, label %land.lhs.true2054, label %while.cond2087

land.lhs.true2054:                                ; preds = %while.cond2033
  %operands2056 = getelementptr inbounds %union.tree_node* %parg0.0, i64 0, i32 0, i32 2
  %arrayidx2057 = bitcast i32* %operands2056 to %union.tree_node**
  %207 = load %union.tree_node** %arrayidx2057, align 8, !tbaa !14
  %cmp2058 = icmp eq %union.tree_node* %207, %206
  br i1 %cmp2058, label %while.cond2087, label %land.rhs2060

land.rhs2060:                                     ; preds = %land.lhs.true2054
  %type2062 = getelementptr inbounds %union.tree_node* %parg0.0, i64 0, i32 0, i32 0, i32 1
  %208 = load %union.tree_node** %type2062, align 8, !tbaa !11
  %type2063 = bitcast %union.tree_node* %208 to %struct.tree_type*
  %mode2064 = getelementptr inbounds %struct.tree_type* %type2063, i64 0, i32 6
  %bf.load2065 = load i32* %mode2064, align 4
  %type2072 = getelementptr inbounds %union.tree_node* %207, i64 0, i32 0, i32 0, i32 1
  %209 = load %union.tree_node** %type2072, align 8, !tbaa !11
  %type2073 = bitcast %union.tree_node* %209 to %struct.tree_type*
  %mode2074 = getelementptr inbounds %struct.tree_type* %type2073, i64 0, i32 6
  %bf.load2075 = load i32* %mode2074, align 4
  %bf.lshr20669719 = xor i32 %bf.load2075, %bf.load2065
  %210 = and i32 %bf.lshr20669719, 65024
  %cmp2078 = icmp eq i32 %210, 0
  br i1 %cmp2078, label %while.cond2033, label %while.cond2087

while.cond2087:                                   ; preds = %while.cond2033, %land.lhs.true2054, %land.rhs2060, %land.rhs2114
  %parg1.0 = phi %union.tree_node* [ %211, %land.rhs2114 ], [ %205, %land.rhs2060 ], [ %205, %land.lhs.true2054 ], [ %205, %while.cond2033 ]
  %code2089 = getelementptr inbounds %union.tree_node* %parg1.0, i64 0, i32 0, i32 0, i32 2
  %bf.load2090 = load i32* %code2089, align 8
  %bf.clear2091 = and i32 %bf.load2090, 255
  %bf.clear2091.off = add i32 %bf.clear2091, -114
  %switch9786 = icmp ult i32 %bf.clear2091.off, 3
  br i1 %switch9786, label %land.lhs.true2108, label %while.end2140

land.lhs.true2108:                                ; preds = %while.cond2087
  %operands2110 = getelementptr inbounds %union.tree_node* %parg1.0, i64 0, i32 0, i32 2
  %arrayidx2111 = bitcast i32* %operands2110 to %union.tree_node**
  %211 = load %union.tree_node** %arrayidx2111, align 8, !tbaa !14
  %cmp2112 = icmp eq %union.tree_node* %211, %206
  br i1 %cmp2112, label %while.end2140, label %land.rhs2114

land.rhs2114:                                     ; preds = %land.lhs.true2108
  %type2116 = getelementptr inbounds %union.tree_node* %parg1.0, i64 0, i32 0, i32 0, i32 1
  %212 = load %union.tree_node** %type2116, align 8, !tbaa !11
  %type2117 = bitcast %union.tree_node* %212 to %struct.tree_type*
  %mode2118 = getelementptr inbounds %struct.tree_type* %type2117, i64 0, i32 6
  %bf.load2119 = load i32* %mode2118, align 4
  %type2126 = getelementptr inbounds %union.tree_node* %211, i64 0, i32 0, i32 0, i32 1
  %213 = load %union.tree_node** %type2126, align 8, !tbaa !11
  %type2127 = bitcast %union.tree_node* %213 to %struct.tree_type*
  %mode2128 = getelementptr inbounds %struct.tree_type* %type2127, i64 0, i32 6
  %bf.load2129 = load i32* %mode2128, align 4
  %bf.lshr21209718 = xor i32 %bf.load2129, %bf.load2119
  %214 = and i32 %bf.lshr21209718, 65024
  %cmp2132 = icmp eq i32 %214, 0
  br i1 %cmp2132, label %while.cond2087, label %while.end2140

while.end2140:                                    ; preds = %while.cond2087, %land.lhs.true2108, %land.rhs2114
  %cmp2145 = icmp eq i32 %bf.clear2037, 61
  %cmp2152 = icmp eq i32 %bf.clear2091, 61
  br i1 %cmp2145, label %land.lhs.true2147, label %land.lhs.true2166

land.lhs.true2147:                                ; preds = %while.end2140
  br i1 %cmp2152, label %if.end2179, label %if.then2154

if.then2154:                                      ; preds = %land.lhs.true2147
  %call2155 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 59, %union.tree_node* %0, %union.tree_node* %parg0.0, %union.tree_node* %arg1.3.arg0.5) #1
  %call2156 = call %union.tree_node* @fold(%union.tree_node* %call2155)
  %call2157 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 59, %union.tree_node* %0, %union.tree_node* %call2156, %union.tree_node* %parg1.0) #1
  %call2158 = call %union.tree_node* @fold(%union.tree_node* %call2157)
  br label %return

land.lhs.true2166:                                ; preds = %while.end2140
  br i1 %cmp2152, label %if.then2173, label %if.end2179

if.then2173:                                      ; preds = %land.lhs.true2166
  %call2174 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 59, %union.tree_node* %0, %union.tree_node* %parg1.0, %union.tree_node* %arg1.3.arg0.5) #1
  %call2175 = call %union.tree_node* @fold(%union.tree_node* %call2174)
  %call2176 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 59, %union.tree_node* %0, %union.tree_node* %call2175, %union.tree_node* %parg0.0) #1
  %call2177 = call %union.tree_node* @fold(%union.tree_node* %call2176)
  br label %return

if.end2179:                                       ; preds = %land.lhs.true2147, %land.lhs.true2166, %lor.lhs.false2003
  %cmp2184 = icmp eq i32 %bf.clear1993, 61
  %bf.clear2190 = and i32 %bf.load1999, 255
  %cmp2191 = icmp eq i32 %bf.clear2190, 61
  %or.cond11332 = and i1 %cmp2184, %cmp2191
  br i1 %or.cond11332, label %if.then2193, label %bit_rotate

if.then2193:                                      ; preds = %if.end2179
  %operands2195 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 2
  %arrayidx2196 = bitcast i32* %operands2195 to %union.tree_node**
  %215 = load %union.tree_node** %arrayidx2196, align 8, !tbaa !14
  %arrayidx2199 = getelementptr inbounds i32* %operands2195, i64 2
  %216 = bitcast i32* %arrayidx2199 to %union.tree_node**
  %217 = load %union.tree_node** %216, align 8, !tbaa !14
  %operands2201 = getelementptr inbounds %union.tree_node* %arg1.3, i64 0, i32 0, i32 2
  %arrayidx2202 = bitcast i32* %operands2201 to %union.tree_node**
  %218 = load %union.tree_node** %arrayidx2202, align 8, !tbaa !14
  %arrayidx2205 = getelementptr inbounds i32* %operands2201, i64 2
  %219 = bitcast i32* %arrayidx2205 to %union.tree_node**
  %220 = load %union.tree_node** %219, align 8, !tbaa !14
  %call2206 = call i32 @operand_equal_p(%union.tree_node* %217, %union.tree_node* %220, i32 0)
  %tobool2207 = icmp eq i32 %call2206, 0
  br i1 %tobool2207, label %if.else2209, label %if.end2286

if.else2209:                                      ; preds = %if.then2193
  %call2210 = call i32 @operand_equal_p(%union.tree_node* %215, %union.tree_node* %218, i32 0)
  %tobool2211 = icmp eq i32 %call2210, 0
  br i1 %tobool2211, label %if.else2213, label %if.end2286

if.else2213:                                      ; preds = %if.else2209
  %call2214 = call i32 @operand_equal_p(%union.tree_node* %215, %union.tree_node* %220, i32 0)
  %tobool2215 = icmp eq i32 %call2214, 0
  br i1 %tobool2215, label %if.else2217, label %if.end2286

if.else2217:                                      ; preds = %if.else2213
  %call2218 = call i32 @operand_equal_p(%union.tree_node* %217, %union.tree_node* %218, i32 0)
  %tobool2219 = icmp eq i32 %call2218, 0
  br i1 %tobool2219, label %if.else2221, label %if.end2286

if.else2221:                                      ; preds = %if.else2217
  %code2223 = getelementptr inbounds %union.tree_node* %217, i64 0, i32 0, i32 0, i32 2
  %bf.load2224 = load i32* %code2223, align 8
  %bf.clear2225 = and i32 %bf.load2224, 255
  %cmp2226 = icmp eq i32 %bf.clear2225, 25
  br i1 %cmp2226, label %land.lhs.true2228, label %bit_rotate

land.lhs.true2228:                                ; preds = %if.else2221
  %code2230 = getelementptr inbounds %union.tree_node* %220, i64 0, i32 0, i32 0, i32 2
  %bf.load2231 = load i32* %code2230, align 8
  %bf.clear2232 = and i32 %bf.load2231, 255
  %cmp2233 = icmp eq i32 %bf.clear2232, 25
  br i1 %cmp2233, label %land.lhs.true2235, label %bit_rotate

land.lhs.true2235:                                ; preds = %land.lhs.true2228
  %int_cst2237 = getelementptr inbounds %union.tree_node* %217, i64 0, i32 0, i32 2
  %high2238 = getelementptr inbounds i32* %int_cst2237, i64 2
  %221 = bitcast i32* %high2238 to i64*
  %222 = load i64* %221, align 8, !tbaa !10
  %cmp2239 = icmp eq i64 %222, 0
  br i1 %cmp2239, label %land.lhs.true2241, label %bit_rotate

land.lhs.true2241:                                ; preds = %land.lhs.true2235
  %int_cst2243 = getelementptr inbounds %union.tree_node* %220, i64 0, i32 0, i32 2
  %high2244 = getelementptr inbounds i32* %int_cst2243, i64 2
  %223 = bitcast i32* %high2244 to i64*
  %224 = load i64* %223, align 8, !tbaa !10
  %cmp2245 = icmp eq i64 %224, 0
  br i1 %cmp2245, label %if.then2247, label %bit_rotate

if.then2247:                                      ; preds = %land.lhs.true2241
  %low2250 = bitcast i32* %int_cst2237 to i64*
  %225 = load i64* %low2250, align 8, !tbaa !1
  %low2253 = bitcast i32* %int_cst2243 to i64*
  %226 = load i64* %low2253, align 8, !tbaa !1
  %cmp2254 = icmp sgt i64 %225, -1
  %sub = sub nsw i64 0, %225
  %cond2259 = select i1 %cmp2254, i64 %225, i64 %sub
  %cmp2260 = icmp sgt i64 %226, -1
  %sub2264 = sub nsw i64 0, %226
  %cond2266 = select i1 %cmp2260, i64 %226, i64 %sub2264
  %cmp2267 = icmp slt i64 %cond2259, %cond2266
  %. = select i1 %cmp2267, i64 %225, i64 %226
  %.9738 = select i1 %cmp2267, i64 %226, i64 %225
  %.9740 = select i1 %cmp2267, %union.tree_node* %217, %union.tree_node* %220
  %.9741 = select i1 %cmp2267, %union.tree_node* %215, %union.tree_node* %218
  %.9742 = select i1 %cmp2267, %union.tree_node* %218, %union.tree_node* %215
  %call2271 = call i32 @exact_log2_wide(i64 %.) #1
  %cmp2272 = icmp sgt i32 %call2271, 0
  br i1 %cmp2272, label %land.lhs.true2274, label %bit_rotate

land.lhs.true2274:                                ; preds = %if.then2247
  %rem = srem i64 %.9738, %.
  %cmp2275 = icmp eq i64 %rem, 0
  br i1 %cmp2275, label %if.then2277, label %bit_rotate

if.then2277:                                      ; preds = %land.lhs.true2274
  %div = sdiv i64 %.9738, %.
  %call2278 = call %union.tree_node* @build_int_2_wide(i64 %div, i64 0) #1
  %call2279 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 61, %union.tree_node* %0, %union.tree_node* %.9742, %union.tree_node* %call2278) #1
  %call2280 = call %union.tree_node* @fold(%union.tree_node* %call2279)
  br label %if.end2286

if.end2286:                                       ; preds = %if.else2217, %if.else2213, %if.else2209, %if.then2193, %if.then2277
  %same.0 = phi %union.tree_node* [ %.9740, %if.then2277 ], [ %217, %if.then2193 ], [ %215, %if.else2209 ], [ %215, %if.else2213 ], [ %217, %if.else2217 ]
  %alt1.0 = phi %union.tree_node* [ %.9741, %if.then2277 ], [ %218, %if.then2193 ], [ %220, %if.else2209 ], [ %218, %if.else2213 ], [ %220, %if.else2217 ]
  %alt0.1 = phi %union.tree_node* [ %call2280, %if.then2277 ], [ %215, %if.then2193 ], [ %217, %if.else2209 ], [ %217, %if.else2213 ], [ %215, %if.else2217 ]
  %tobool2287 = icmp eq %union.tree_node* %same.0, null
  br i1 %tobool2287, label %bit_rotate, label %if.then2288

if.then2288:                                      ; preds = %if.end2286
  %call2289 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 59, %union.tree_node* %0, %union.tree_node* %alt0.1, %union.tree_node* %alt1.0) #1
  %call2290 = call %union.tree_node* @fold(%union.tree_node* %call2289)
  %call2291 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 61, %union.tree_node* %0, %union.tree_node* %call2290, %union.tree_node* %same.0) #1
  %call2292 = call %union.tree_node* @fold(%union.tree_node* %call2291)
  br label %return

if.else2295:                                      ; preds = %if.else1915, %land.lhs.true1929
  %227 = load i32* @flag_unsafe_math_optimizations, align 4, !tbaa !12
  %tobool2296 = icmp eq i32 %227, 0
  br i1 %tobool2296, label %if.else2303, label %land.lhs.true2297

land.lhs.true2297:                                ; preds = %if.else2295
  %call2298 = call i32 @real_zerop(%union.tree_node* %arg1.3) #1
  %tobool2299 = icmp eq i32 %call2298, 0
  br i1 %tobool2299, label %land.lhs.true2297.if.else2303_crit_edge, label %if.then2300

land.lhs.true2297.if.else2303_crit_edge:          ; preds = %land.lhs.true2297
  %bf.load2306.pre = load i32* %code1891, align 8
  br label %if.else2303

if.then2300:                                      ; preds = %land.lhs.true2297
  %call2301 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %arg0.5) #1
  %code.i11070 = getelementptr inbounds %union.tree_node* %call2301, i64 0, i32 0, i32 0, i32 2
  %bf.load.i11071 = load i32* %code.i11070, align 8
  %bf.clear.i11072 = and i32 %bf.load.i11071, 255
  switch i32 %bf.clear.i11072, label %if.end.i11081 [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i11081:                                    ; preds = %if.then2300
  %type.i11073 = getelementptr inbounds %union.tree_node* %call2301, i64 0, i32 0, i32 0, i32 1
  %228 = load %union.tree_node** %type.i11073, align 8, !tbaa !11
  %call.i11074 = call %union.tree_node* @build1(i32 116, %union.tree_node* %228, %union.tree_node* %call2301) #1
  %bf.load26.i11075 = load i32* %code.i11070, align 8
  %bf.clear27.i11076 = and i32 %bf.load26.i11075, 512
  %constant_flag29.i11077 = getelementptr inbounds %union.tree_node* %call.i11074, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i11078 = load i32* %constant_flag29.i11077, align 8
  %bf.clear31.i11079 = and i32 %bf.load30.i11078, -513
  %bf.set.i11080 = or i32 %bf.clear31.i11079, %bf.clear27.i11076
  store i32 %bf.set.i11080, i32* %constant_flag29.i11077, align 8
  br label %return

if.else2303:                                      ; preds = %land.lhs.true2297.if.else2303_crit_edge, %if.else2295
  %bf.load2306 = phi i32 [ %bf.load2306.pre, %land.lhs.true2297.if.else2303_crit_edge ], [ %bf.load1892, %if.else2295 ]
  %bf.clear2307 = and i32 %bf.load2306, 255
  %cmp2308 = icmp eq i32 %bf.clear2307, 26
  br i1 %cmp2308, label %land.lhs.true2310, label %bit_rotate

land.lhs.true2310:                                ; preds = %if.else2303
  %real_cst2312 = getelementptr inbounds %union.tree_node* %arg1.3, i64 0, i32 0, i32 2
  %229 = bitcast i32* %real_cst2312 to %struct.realvaluetype*
  %call2313 = call i32 @ereal_cmp(%struct.realvaluetype* byval align 8 %229, %struct.realvaluetype* byval align 8 @dconst0) #1
  %cmp2314 = icmp eq i32 %call2313, 0
  br i1 %cmp2314, label %land.lhs.true2316, label %bit_rotate

land.lhs.true2316:                                ; preds = %land.lhs.true2310
  %call2319 = call i32 @ereal_isneg(%struct.realvaluetype* byval align 8 %229) #1
  %cmp2320 = icmp eq i32 %call2319, 0
  br i1 %cmp2320, label %bit_rotate, label %if.then2322

if.then2322:                                      ; preds = %land.lhs.true2316
  %call2323 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %arg0.5) #1
  %code.i11056 = getelementptr inbounds %union.tree_node* %call2323, i64 0, i32 0, i32 0, i32 2
  %bf.load.i11057 = load i32* %code.i11056, align 8
  %bf.clear.i11058 = and i32 %bf.load.i11057, 255
  switch i32 %bf.clear.i11058, label %if.end.i11067 [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i11067:                                    ; preds = %if.then2322
  %type.i11059 = getelementptr inbounds %union.tree_node* %call2323, i64 0, i32 0, i32 0, i32 1
  %230 = load %union.tree_node** %type.i11059, align 8, !tbaa !11
  %call.i11060 = call %union.tree_node* @build1(i32 116, %union.tree_node* %230, %union.tree_node* %call2323) #1
  %bf.load26.i11061 = load i32* %code.i11056, align 8
  %bf.clear27.i11062 = and i32 %bf.load26.i11061, 512
  %constant_flag29.i11063 = getelementptr inbounds %union.tree_node* %call.i11060, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i11064 = load i32* %constant_flag29.i11063, align 8
  %bf.clear31.i11065 = and i32 %bf.load30.i11064, -513
  %bf.set.i11066 = or i32 %bf.clear31.i11065, %bf.clear27.i11062
  store i32 %bf.set.i11066, i32* %constant_flag29.i11063, align 8
  br label %return

bit_rotate:                                       ; preds = %land.lhs.true2010, %if.else2221, %land.lhs.true2228, %land.lhs.true2235, %land.lhs.true2241, %if.then2247, %land.lhs.true2274, %land.lhs.true2316, %if.end2286, %land.lhs.true3371, %if.end3337, %land.lhs.true3344, %land.lhs.true3351, %land.lhs.true3361, %if.end3300, %land.lhs.true3307, %land.lhs.true2310, %if.else2303, %if.end2179
  %code.0 = phi i32 [ 86, %land.lhs.true3307 ], [ 86, %if.end3300 ], [ 87, %land.lhs.true3371 ], [ 87, %land.lhs.true3361 ], [ 87, %land.lhs.true3351 ], [ 87, %land.lhs.true3344 ], [ 87, %if.end3337 ], [ 59, %land.lhs.true2316 ], [ 59, %land.lhs.true2310 ], [ 59, %if.else2303 ], [ 59, %if.end2286 ], [ 59, %if.end2179 ], [ 59, %land.lhs.true2274 ], [ 59, %if.then2247 ], [ 59, %land.lhs.true2241 ], [ 59, %land.lhs.true2235 ], [ 59, %land.lhs.true2228 ], [ 59, %if.else2221 ], [ 59, %land.lhs.true2010 ]
  %code2332 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 0, i32 2
  %bf.load2333 = load i32* %code2332, align 8
  %bf.clear2334 = and i32 %bf.load2333, 255
  %code2336 = getelementptr inbounds %union.tree_node* %arg1.3, i64 0, i32 0, i32 0, i32 2
  %bf.load2337 = load i32* %code2336, align 8
  %bf.clear2338 = and i32 %bf.load2337, 255
  %cmp2339 = icmp eq i32 %bf.clear2334, 83
  %cmp2342 = icmp eq i32 %bf.clear2338, 82
  %or.cond7761 = and i1 %cmp2339, %cmp2342
  br i1 %or.cond7761, label %land.lhs.true2350, label %lor.lhs.false2344

lor.lhs.false2344:                                ; preds = %bit_rotate
  %cmp2345 = icmp eq i32 %bf.clear2338, 83
  %cmp2348 = icmp eq i32 %bf.clear2334, 82
  %or.cond7763 = and i1 %cmp2345, %cmp2348
  br i1 %or.cond7763, label %land.lhs.true2350, label %associate

land.lhs.true2350:                                ; preds = %lor.lhs.false2344, %bit_rotate
  %operands2352 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 2
  %arrayidx2353 = bitcast i32* %operands2352 to %union.tree_node**
  %231 = load %union.tree_node** %arrayidx2353, align 8, !tbaa !14
  %operands2355 = getelementptr inbounds %union.tree_node* %arg1.3, i64 0, i32 0, i32 2
  %arrayidx2356 = bitcast i32* %operands2355 to %union.tree_node**
  %232 = load %union.tree_node** %arrayidx2356, align 8, !tbaa !14
  %call2357 = call i32 @operand_equal_p(%union.tree_node* %231, %union.tree_node* %232, i32 0)
  %tobool2358 = icmp eq i32 %call2357, 0
  br i1 %tobool2358, label %associate, label %land.lhs.true2359

land.lhs.true2359:                                ; preds = %land.lhs.true2350
  %233 = load %union.tree_node** %arrayidx2353, align 8, !tbaa !14
  %type2364 = getelementptr inbounds %union.tree_node* %233, i64 0, i32 0, i32 0, i32 1
  %234 = load %union.tree_node** %type2364, align 8, !tbaa !11
  %unsigned_flag2366 = getelementptr inbounds %union.tree_node* %234, i64 0, i32 0, i32 0, i32 2
  %bf.load2367 = load i32* %unsigned_flag2366, align 8
  %bf.clear2369 = and i32 %bf.load2367, 8192
  %tobool2370 = icmp eq i32 %bf.clear2369, 0
  br i1 %tobool2370, label %associate, label %if.then2371

if.then2371:                                      ; preds = %land.lhs.true2359
  %arrayidx2378 = getelementptr inbounds i32* %operands2352, i64 2
  %235 = bitcast i32* %arrayidx2378 to %union.tree_node**
  %236 = load %union.tree_node** %235, align 8, !tbaa !14
  %arrayidx2381 = getelementptr inbounds i32* %operands2355, i64 2
  %237 = bitcast i32* %arrayidx2381 to %union.tree_node**
  %238 = load %union.tree_node** %237, align 8, !tbaa !14
  %239 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !14
  br label %while.cond2382

while.cond2382:                                   ; preds = %land.rhs2409, %if.then2371
  %tree01.0 = phi %union.tree_node* [ %236, %if.then2371 ], [ %240, %land.rhs2409 ]
  %code2384 = getelementptr inbounds %union.tree_node* %tree01.0, i64 0, i32 0, i32 0, i32 2
  %bf.load2385 = load i32* %code2384, align 8
  %bf.clear2386 = and i32 %bf.load2385, 255
  %bf.clear2386.off = add i32 %bf.clear2386, -114
  %switch9787 = icmp ult i32 %bf.clear2386.off, 3
  br i1 %switch9787, label %land.lhs.true2403, label %while.cond2436

land.lhs.true2403:                                ; preds = %while.cond2382
  %operands2405 = getelementptr inbounds %union.tree_node* %tree01.0, i64 0, i32 0, i32 2
  %arrayidx2406 = bitcast i32* %operands2405 to %union.tree_node**
  %240 = load %union.tree_node** %arrayidx2406, align 8, !tbaa !14
  %cmp2407 = icmp eq %union.tree_node* %240, %239
  br i1 %cmp2407, label %while.cond2436, label %land.rhs2409

land.rhs2409:                                     ; preds = %land.lhs.true2403
  %type2411 = getelementptr inbounds %union.tree_node* %tree01.0, i64 0, i32 0, i32 0, i32 1
  %241 = load %union.tree_node** %type2411, align 8, !tbaa !11
  %type2412 = bitcast %union.tree_node* %241 to %struct.tree_type*
  %mode2413 = getelementptr inbounds %struct.tree_type* %type2412, i64 0, i32 6
  %bf.load2414 = load i32* %mode2413, align 4
  %type2421 = getelementptr inbounds %union.tree_node* %240, i64 0, i32 0, i32 0, i32 1
  %242 = load %union.tree_node** %type2421, align 8, !tbaa !11
  %type2422 = bitcast %union.tree_node* %242 to %struct.tree_type*
  %mode2423 = getelementptr inbounds %struct.tree_type* %type2422, i64 0, i32 6
  %bf.load2424 = load i32* %mode2423, align 4
  %bf.lshr24159717 = xor i32 %bf.load2424, %bf.load2414
  %243 = and i32 %bf.lshr24159717, 65024
  %cmp2427 = icmp eq i32 %243, 0
  br i1 %cmp2427, label %while.cond2382, label %while.cond2436

while.cond2436:                                   ; preds = %while.cond2382, %land.lhs.true2403, %land.rhs2409, %land.rhs2463
  %tree11.0 = phi %union.tree_node* [ %244, %land.rhs2463 ], [ %238, %land.rhs2409 ], [ %238, %land.lhs.true2403 ], [ %238, %while.cond2382 ]
  %code2438 = getelementptr inbounds %union.tree_node* %tree11.0, i64 0, i32 0, i32 0, i32 2
  %bf.load2439 = load i32* %code2438, align 8
  %bf.clear2440 = and i32 %bf.load2439, 255
  %bf.clear2440.off = add i32 %bf.clear2440, -114
  %switch9788 = icmp ult i32 %bf.clear2440.off, 3
  br i1 %switch9788, label %land.lhs.true2457, label %while.end2489

land.lhs.true2457:                                ; preds = %while.cond2436
  %operands2459 = getelementptr inbounds %union.tree_node* %tree11.0, i64 0, i32 0, i32 2
  %arrayidx2460 = bitcast i32* %operands2459 to %union.tree_node**
  %244 = load %union.tree_node** %arrayidx2460, align 8, !tbaa !14
  %cmp2461 = icmp eq %union.tree_node* %244, %239
  br i1 %cmp2461, label %if.else2698, label %land.rhs2463

land.rhs2463:                                     ; preds = %land.lhs.true2457
  %type2465 = getelementptr inbounds %union.tree_node* %tree11.0, i64 0, i32 0, i32 0, i32 1
  %245 = load %union.tree_node** %type2465, align 8, !tbaa !11
  %type2466 = bitcast %union.tree_node* %245 to %struct.tree_type*
  %mode2467 = getelementptr inbounds %struct.tree_type* %type2466, i64 0, i32 6
  %bf.load2468 = load i32* %mode2467, align 4
  %type2475 = getelementptr inbounds %union.tree_node* %244, i64 0, i32 0, i32 0, i32 1
  %246 = load %union.tree_node** %type2475, align 8, !tbaa !11
  %type2476 = bitcast %union.tree_node* %246 to %struct.tree_type*
  %mode2477 = getelementptr inbounds %struct.tree_type* %type2476, i64 0, i32 6
  %bf.load2478 = load i32* %mode2477, align 4
  %bf.lshr24699716 = xor i32 %bf.load2478, %bf.load2468
  %247 = and i32 %bf.lshr24699716, 65024
  %cmp2481 = icmp eq i32 %247, 0
  br i1 %cmp2481, label %while.cond2436, label %if.else2698

while.end2489:                                    ; preds = %while.cond2436
  %cmp2498 = icmp eq i32 %bf.clear2386, 25
  %cmp2501 = icmp eq i32 %bf.clear2440, 25
  %or.cond7767 = and i1 %cmp2498, %cmp2501
  br i1 %or.cond7767, label %land.lhs.true2503, label %if.else2546

land.lhs.true2503:                                ; preds = %while.end2489
  %int_cst2505 = getelementptr inbounds %union.tree_node* %tree01.0, i64 0, i32 0, i32 2
  %high2506 = getelementptr inbounds i32* %int_cst2505, i64 2
  %248 = bitcast i32* %high2506 to i64*
  %249 = load i64* %248, align 8, !tbaa !10
  %cmp2507 = icmp eq i64 %249, 0
  br i1 %cmp2507, label %land.lhs.true2509, label %if.else2546

land.lhs.true2509:                                ; preds = %land.lhs.true2503
  %int_cst2511 = getelementptr inbounds %union.tree_node* %tree11.0, i64 0, i32 0, i32 2
  %high2512 = getelementptr inbounds i32* %int_cst2511, i64 2
  %250 = bitcast i32* %high2512 to i64*
  %251 = load i64* %250, align 8, !tbaa !10
  %cmp2513 = icmp eq i64 %251, 0
  br i1 %cmp2513, label %land.lhs.true2515, label %if.else2546

land.lhs.true2515:                                ; preds = %land.lhs.true2509
  %low2518 = bitcast i32* %int_cst2505 to i64*
  %252 = load i64* %low2518, align 8, !tbaa !1
  %low2521 = bitcast i32* %int_cst2511 to i64*
  %253 = load i64* %low2521, align 8, !tbaa !1
  %add2522 = add i64 %253, %252
  %type2528 = bitcast %union.tree_node* %234 to %struct.tree_type*
  %precision2529 = getelementptr inbounds %struct.tree_type* %type2528, i64 0, i32 6
  %bf.load2530 = load i32* %precision2529, align 4
  %bf.clear2531 = and i32 %bf.load2530, 511
  %conv2532 = zext i32 %bf.clear2531 to i64
  %cmp2533 = icmp eq i64 %add2522, %conv2532
  br i1 %cmp2533, label %if.then2535, label %if.else2546

if.then2535:                                      ; preds = %land.lhs.true2515
  %cmp2539 = icmp eq i32 %bf.clear2334, 82
  %cond2544 = select i1 %cmp2539, %union.tree_node* %tree01.0, %union.tree_node* %tree11.0
  %call2545 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 84, %union.tree_node* %0, %union.tree_node* %233, %union.tree_node* %cond2544) #1
  br label %return

if.else2546:                                      ; preds = %land.lhs.true2515, %land.lhs.true2509, %land.lhs.true2503, %while.end2489
  %cmp2547 = icmp eq i32 %bf.clear2440, 60
  br i1 %cmp2547, label %if.then2549, label %if.else2698

if.then2549:                                      ; preds = %if.else2546
  %operands2553 = getelementptr inbounds %union.tree_node* %tree11.0, i64 0, i32 0, i32 2
  %arrayidx2554 = bitcast i32* %operands2553 to %union.tree_node**
  %254 = load %union.tree_node** %arrayidx2554, align 8, !tbaa !14
  %arrayidx2557 = getelementptr inbounds i32* %operands2553, i64 2
  %255 = bitcast i32* %arrayidx2557 to %union.tree_node**
  %256 = load %union.tree_node** %255, align 8, !tbaa !14
  br label %while.cond2558

while.cond2558:                                   ; preds = %land.rhs2585, %if.then2549
  %tree110.0 = phi %union.tree_node* [ %254, %if.then2549 ], [ %257, %land.rhs2585 ]
  %code2560 = getelementptr inbounds %union.tree_node* %tree110.0, i64 0, i32 0, i32 0, i32 2
  %bf.load2561 = load i32* %code2560, align 8
  %bf.clear2562 = and i32 %bf.load2561, 255
  %bf.clear2562.off = add i32 %bf.clear2562, -114
  %switch9789 = icmp ult i32 %bf.clear2562.off, 3
  br i1 %switch9789, label %land.lhs.true2579, label %while.cond2612

land.lhs.true2579:                                ; preds = %while.cond2558
  %operands2581 = getelementptr inbounds %union.tree_node* %tree110.0, i64 0, i32 0, i32 2
  %arrayidx2582 = bitcast i32* %operands2581 to %union.tree_node**
  %257 = load %union.tree_node** %arrayidx2582, align 8, !tbaa !14
  %cmp2583 = icmp eq %union.tree_node* %257, %239
  br i1 %cmp2583, label %while.cond2612, label %land.rhs2585

land.rhs2585:                                     ; preds = %land.lhs.true2579
  %type2587 = getelementptr inbounds %union.tree_node* %tree110.0, i64 0, i32 0, i32 0, i32 1
  %258 = load %union.tree_node** %type2587, align 8, !tbaa !11
  %type2588 = bitcast %union.tree_node* %258 to %struct.tree_type*
  %mode2589 = getelementptr inbounds %struct.tree_type* %type2588, i64 0, i32 6
  %bf.load2590 = load i32* %mode2589, align 4
  %type2597 = getelementptr inbounds %union.tree_node* %257, i64 0, i32 0, i32 0, i32 1
  %259 = load %union.tree_node** %type2597, align 8, !tbaa !11
  %type2598 = bitcast %union.tree_node* %259 to %struct.tree_type*
  %mode2599 = getelementptr inbounds %struct.tree_type* %type2598, i64 0, i32 6
  %bf.load2600 = load i32* %mode2599, align 4
  %bf.lshr25919715 = xor i32 %bf.load2600, %bf.load2590
  %260 = and i32 %bf.lshr25919715, 65024
  %cmp2603 = icmp eq i32 %260, 0
  br i1 %cmp2603, label %while.cond2558, label %while.cond2612

while.cond2612:                                   ; preds = %while.cond2558, %land.lhs.true2579, %land.rhs2585, %land.rhs2639
  %tree111.0 = phi %union.tree_node* [ %261, %land.rhs2639 ], [ %256, %land.rhs2585 ], [ %256, %land.lhs.true2579 ], [ %256, %while.cond2558 ]
  %code2614 = getelementptr inbounds %union.tree_node* %tree111.0, i64 0, i32 0, i32 0, i32 2
  %bf.load2615 = load i32* %code2614, align 8
  %bf.clear2616 = and i32 %bf.load2615, 255
  %bf.clear2616.off = add i32 %bf.clear2616, -114
  %switch9790 = icmp ult i32 %bf.clear2616.off, 3
  br i1 %switch9790, label %land.lhs.true2633, label %while.end2665

land.lhs.true2633:                                ; preds = %while.cond2612
  %operands2635 = getelementptr inbounds %union.tree_node* %tree111.0, i64 0, i32 0, i32 2
  %arrayidx2636 = bitcast i32* %operands2635 to %union.tree_node**
  %261 = load %union.tree_node** %arrayidx2636, align 8, !tbaa !14
  %cmp2637 = icmp eq %union.tree_node* %261, %239
  br i1 %cmp2637, label %while.end2665, label %land.rhs2639

land.rhs2639:                                     ; preds = %land.lhs.true2633
  %type2641 = getelementptr inbounds %union.tree_node* %tree111.0, i64 0, i32 0, i32 0, i32 1
  %262 = load %union.tree_node** %type2641, align 8, !tbaa !11
  %type2642 = bitcast %union.tree_node* %262 to %struct.tree_type*
  %mode2643 = getelementptr inbounds %struct.tree_type* %type2642, i64 0, i32 6
  %bf.load2644 = load i32* %mode2643, align 4
  %type2651 = getelementptr inbounds %union.tree_node* %261, i64 0, i32 0, i32 0, i32 1
  %263 = load %union.tree_node** %type2651, align 8, !tbaa !11
  %type2652 = bitcast %union.tree_node* %263 to %struct.tree_type*
  %mode2653 = getelementptr inbounds %struct.tree_type* %type2652, i64 0, i32 6
  %bf.load2654 = load i32* %mode2653, align 4
  %bf.lshr26459714 = xor i32 %bf.load2654, %bf.load2644
  %264 = and i32 %bf.lshr26459714, 65024
  %cmp2657 = icmp eq i32 %264, 0
  br i1 %cmp2657, label %while.cond2612, label %while.end2665

while.end2665:                                    ; preds = %while.cond2612, %land.lhs.true2633, %land.rhs2639
  %cmp2670 = icmp eq i32 %bf.clear2562, 25
  br i1 %cmp2670, label %land.lhs.true2672, label %associate

land.lhs.true2672:                                ; preds = %while.end2665
  %type2678 = bitcast %union.tree_node* %234 to %struct.tree_type*
  %precision2679 = getelementptr inbounds %struct.tree_type* %type2678, i64 0, i32 6
  %bf.load2680 = load i32* %precision2679, align 4
  %bf.clear2681 = and i32 %bf.load2680, 511
  %conv2682 = zext i32 %bf.clear2681 to i64
  %call2683 = call i32 @compare_tree_int(%union.tree_node* %tree110.0, i64 %conv2682) #1
  %cmp2684 = icmp eq i32 %call2683, 0
  br i1 %cmp2684, label %land.lhs.true2686, label %associate

land.lhs.true2686:                                ; preds = %land.lhs.true2672
  %call2687 = call i32 @operand_equal_p(%union.tree_node* %tree01.0, %union.tree_node* %tree111.0, i32 0)
  %tobool2688 = icmp eq i32 %call2687, 0
  br i1 %tobool2688, label %associate, label %if.then2689

if.then2689:                                      ; preds = %land.lhs.true2686
  %cmp2690 = icmp eq i32 %bf.clear2334, 82
  %cond2692 = select i1 %cmp2690, i32 84, i32 85
  %265 = load %union.tree_node** %arrayidx2353, align 8, !tbaa !14
  %call2696 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %cond2692, %union.tree_node* %0, %union.tree_node* %265, %union.tree_node* %tree01.0) #1
  br label %return

if.else2698:                                      ; preds = %land.lhs.true2457, %land.rhs2463, %if.else2546
  %cmp2699 = icmp eq i32 %bf.clear2386, 60
  br i1 %cmp2699, label %if.then2701, label %associate

if.then2701:                                      ; preds = %if.else2698
  %operands2705 = getelementptr inbounds %union.tree_node* %tree01.0, i64 0, i32 0, i32 2
  %arrayidx2706 = bitcast i32* %operands2705 to %union.tree_node**
  %266 = load %union.tree_node** %arrayidx2706, align 8, !tbaa !14
  %arrayidx2709 = getelementptr inbounds i32* %operands2705, i64 2
  %267 = bitcast i32* %arrayidx2709 to %union.tree_node**
  %268 = load %union.tree_node** %267, align 8, !tbaa !14
  br label %while.cond2710

while.cond2710:                                   ; preds = %land.rhs2737, %if.then2701
  %tree010.0 = phi %union.tree_node* [ %266, %if.then2701 ], [ %269, %land.rhs2737 ]
  %code2712 = getelementptr inbounds %union.tree_node* %tree010.0, i64 0, i32 0, i32 0, i32 2
  %bf.load2713 = load i32* %code2712, align 8
  %bf.clear2714 = and i32 %bf.load2713, 255
  %bf.clear2714.off = add i32 %bf.clear2714, -114
  %switch9791 = icmp ult i32 %bf.clear2714.off, 3
  br i1 %switch9791, label %land.lhs.true2731, label %while.cond2764

land.lhs.true2731:                                ; preds = %while.cond2710
  %operands2733 = getelementptr inbounds %union.tree_node* %tree010.0, i64 0, i32 0, i32 2
  %arrayidx2734 = bitcast i32* %operands2733 to %union.tree_node**
  %269 = load %union.tree_node** %arrayidx2734, align 8, !tbaa !14
  %cmp2735 = icmp eq %union.tree_node* %269, %239
  br i1 %cmp2735, label %while.cond2764, label %land.rhs2737

land.rhs2737:                                     ; preds = %land.lhs.true2731
  %type2739 = getelementptr inbounds %union.tree_node* %tree010.0, i64 0, i32 0, i32 0, i32 1
  %270 = load %union.tree_node** %type2739, align 8, !tbaa !11
  %type2740 = bitcast %union.tree_node* %270 to %struct.tree_type*
  %mode2741 = getelementptr inbounds %struct.tree_type* %type2740, i64 0, i32 6
  %bf.load2742 = load i32* %mode2741, align 4
  %type2749 = getelementptr inbounds %union.tree_node* %269, i64 0, i32 0, i32 0, i32 1
  %271 = load %union.tree_node** %type2749, align 8, !tbaa !11
  %type2750 = bitcast %union.tree_node* %271 to %struct.tree_type*
  %mode2751 = getelementptr inbounds %struct.tree_type* %type2750, i64 0, i32 6
  %bf.load2752 = load i32* %mode2751, align 4
  %bf.lshr27439713 = xor i32 %bf.load2752, %bf.load2742
  %272 = and i32 %bf.lshr27439713, 65024
  %cmp2755 = icmp eq i32 %272, 0
  br i1 %cmp2755, label %while.cond2710, label %while.cond2764

while.cond2764:                                   ; preds = %while.cond2710, %land.lhs.true2731, %land.rhs2737, %land.rhs2791
  %tree011.0 = phi %union.tree_node* [ %273, %land.rhs2791 ], [ %268, %land.rhs2737 ], [ %268, %land.lhs.true2731 ], [ %268, %while.cond2710 ]
  %code2766 = getelementptr inbounds %union.tree_node* %tree011.0, i64 0, i32 0, i32 0, i32 2
  %bf.load2767 = load i32* %code2766, align 8
  %bf.clear2768 = and i32 %bf.load2767, 255
  %bf.clear2768.off = add i32 %bf.clear2768, -114
  %switch9792 = icmp ult i32 %bf.clear2768.off, 3
  br i1 %switch9792, label %land.lhs.true2785, label %while.end2817

land.lhs.true2785:                                ; preds = %while.cond2764
  %operands2787 = getelementptr inbounds %union.tree_node* %tree011.0, i64 0, i32 0, i32 2
  %arrayidx2788 = bitcast i32* %operands2787 to %union.tree_node**
  %273 = load %union.tree_node** %arrayidx2788, align 8, !tbaa !14
  %cmp2789 = icmp eq %union.tree_node* %273, %239
  br i1 %cmp2789, label %while.end2817, label %land.rhs2791

land.rhs2791:                                     ; preds = %land.lhs.true2785
  %type2793 = getelementptr inbounds %union.tree_node* %tree011.0, i64 0, i32 0, i32 0, i32 1
  %274 = load %union.tree_node** %type2793, align 8, !tbaa !11
  %type2794 = bitcast %union.tree_node* %274 to %struct.tree_type*
  %mode2795 = getelementptr inbounds %struct.tree_type* %type2794, i64 0, i32 6
  %bf.load2796 = load i32* %mode2795, align 4
  %type2803 = getelementptr inbounds %union.tree_node* %273, i64 0, i32 0, i32 0, i32 1
  %275 = load %union.tree_node** %type2803, align 8, !tbaa !11
  %type2804 = bitcast %union.tree_node* %275 to %struct.tree_type*
  %mode2805 = getelementptr inbounds %struct.tree_type* %type2804, i64 0, i32 6
  %bf.load2806 = load i32* %mode2805, align 4
  %bf.lshr27979712 = xor i32 %bf.load2806, %bf.load2796
  %276 = and i32 %bf.lshr27979712, 65024
  %cmp2809 = icmp eq i32 %276, 0
  br i1 %cmp2809, label %while.cond2764, label %while.end2817

while.end2817:                                    ; preds = %while.cond2764, %land.lhs.true2785, %land.rhs2791
  %cmp2822 = icmp eq i32 %bf.clear2714, 25
  br i1 %cmp2822, label %land.lhs.true2824, label %associate

land.lhs.true2824:                                ; preds = %while.end2817
  %type2830 = bitcast %union.tree_node* %234 to %struct.tree_type*
  %precision2831 = getelementptr inbounds %struct.tree_type* %type2830, i64 0, i32 6
  %bf.load2832 = load i32* %precision2831, align 4
  %bf.clear2833 = and i32 %bf.load2832, 511
  %conv2834 = zext i32 %bf.clear2833 to i64
  %call2835 = call i32 @compare_tree_int(%union.tree_node* %tree010.0, i64 %conv2834) #1
  %cmp2836 = icmp eq i32 %call2835, 0
  br i1 %cmp2836, label %land.lhs.true2838, label %associate

land.lhs.true2838:                                ; preds = %land.lhs.true2824
  %call2839 = call i32 @operand_equal_p(%union.tree_node* %tree11.0, %union.tree_node* %tree011.0, i32 0)
  %tobool2840 = icmp eq i32 %call2839, 0
  br i1 %tobool2840, label %associate, label %if.then2841

if.then2841:                                      ; preds = %land.lhs.true2838
  %cmp2842 = icmp ne i32 %bf.clear2334, 82
  %cond2844 = select i1 %cmp2842, i32 84, i32 85
  %277 = load %union.tree_node** %arrayidx2353, align 8, !tbaa !14
  %call2848 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %cond2844, %union.tree_node* %0, %union.tree_node* %277, %union.tree_node* %tree11.0) #1
  br label %return

associate:                                        ; preds = %land.lhs.true3505, %if.then3485, %land.lhs.true3473, %if.end3975, %if.end3935, %lor.lhs.false3133, %land.lhs.true3135, %land.lhs.true3275, %land.lhs.true3243, %land.lhs.true2686, %land.lhs.true2838, %land.lhs.true2359, %land.lhs.true2350, %land.lhs.true3963, %land.lhs.true4006, %land.lhs.true4003, %if.end3522, %if.end3236, %land.lhs.true3271, %land.lhs.true3124, %lor.lhs.false2344, %land.lhs.true2672, %while.end2665, %while.end2817, %land.lhs.true2824, %if.else2698
  %code.1 = phi i32 [ 79, %land.lhs.true4006 ], [ 79, %land.lhs.true4003 ], [ 78, %land.lhs.true3963 ], [ 88, %if.end3522 ], [ %code.0, %land.lhs.true2686 ], [ %code.0, %land.lhs.true2672 ], [ %code.0, %while.end2665 ], [ %code.0, %land.lhs.true2838 ], [ %code.0, %land.lhs.true2824 ], [ %code.0, %while.end2817 ], [ %code.0, %if.else2698 ], [ %code.0, %land.lhs.true2359 ], [ %code.0, %land.lhs.true2350 ], [ %code.0, %lor.lhs.false2344 ], [ 61, %land.lhs.true3275 ], [ 61, %land.lhs.true3271 ], [ 61, %land.lhs.true3243 ], [ 61, %if.end3236 ], [ 60, %land.lhs.true3135 ], [ 60, %lor.lhs.false3133 ], [ 60, %land.lhs.true3124 ], [ 78, %if.end3935 ], [ 79, %if.end3975 ], [ 88, %land.lhs.true3473 ], [ 88, %if.then3485 ], [ 88, %land.lhs.true3505 ]
  %arg1.4 = phi %union.tree_node* [ %arg1.3, %land.lhs.true4006 ], [ %arg1.3, %land.lhs.true4003 ], [ %arg1.3, %land.lhs.true3963 ], [ %arg1.6, %if.end3522 ], [ %arg1.3, %land.lhs.true2686 ], [ %arg1.3, %land.lhs.true2672 ], [ %arg1.3, %while.end2665 ], [ %arg1.3, %land.lhs.true2838 ], [ %arg1.3, %land.lhs.true2824 ], [ %arg1.3, %while.end2817 ], [ %arg1.3, %if.else2698 ], [ %arg1.3, %land.lhs.true2359 ], [ %arg1.3, %land.lhs.true2350 ], [ %arg1.3, %lor.lhs.false2344 ], [ %arg1.3, %land.lhs.true3275 ], [ %arg1.3, %land.lhs.true3271 ], [ %arg1.3, %land.lhs.true3243 ], [ %arg1.3, %if.end3236 ], [ %arg1.3, %land.lhs.true3135 ], [ %arg1.3, %lor.lhs.false3133 ], [ %arg1.3, %land.lhs.true3124 ], [ %arg1.3, %if.end3935 ], [ %arg1.3, %if.end3975 ], [ %arg1.6, %land.lhs.true3473 ], [ %arg1.6, %if.then3485 ], [ %arg1.6, %land.lhs.true3505 ]
  %tobool2854 = icmp eq i32 %wins.3, 0
  br i1 %tobool2854, label %associate.land.lhs.true2855_crit_edge, label %if.end2962

associate.land.lhs.true2855_crit_edge:            ; preds = %associate
  %code2857.pre = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2
  br label %land.lhs.true2855

land.lhs.true2855:                                ; preds = %associate.land.lhs.true2855_crit_edge, %land.lhs.true3268
  %code2857.pre-phi = phi i32* [ %code2857.pre, %associate.land.lhs.true2855_crit_edge ], [ %code3166, %land.lhs.true3268 ]
  %arg1.411166 = phi %union.tree_node* [ %arg1.4, %associate.land.lhs.true2855_crit_edge ], [ %arg1.3, %land.lhs.true3268 ]
  %code.111164 = phi i32 [ %code.1, %associate.land.lhs.true2855_crit_edge ], [ 61, %land.lhs.true3268 ]
  %bf.load2858 = load i32* %code2857.pre-phi, align 8
  %bf.clear2859 = and i32 %bf.load2858, 255
  switch i32 %bf.clear2859, label %if.then2883 [
    i32 7, label %lor.lhs.false2878
    i32 8, label %land.lhs.true2869
  ]

land.lhs.true2869:                                ; preds = %land.lhs.true2855
  %type2871 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 1
  %278 = load %union.tree_node** %type2871, align 8, !tbaa !11
  %code2873 = getelementptr inbounds %union.tree_node* %278, i64 0, i32 0, i32 0, i32 2
  %bf.load2874 = load i32* %code2873, align 8
  %bf.clear2875 = and i32 %bf.load2874, 255
  %cmp2876 = icmp eq i32 %bf.clear2875, 7
  br i1 %cmp2876, label %lor.lhs.false2878, label %if.then2883

lor.lhs.false2878:                                ; preds = %land.lhs.true2855, %land.lhs.true2869
  %279 = load i32* @flag_unsafe_math_optimizations, align 4, !tbaa !12
  %tobool2879 = icmp ne i32 %279, 0
  %cmp2881 = icmp eq i32 %code.111164, 61
  %or.cond7773 = and i1 %tobool2879, %cmp2881
  br i1 %or.cond7773, label %if.then2883, label %binary

if.then2883:                                      ; preds = %land.lhs.true2855, %lor.lhs.false2878, %land.lhs.true2869
  %call2892 = call fastcc %union.tree_node* @split_tree(%union.tree_node* %arg0.5, i32 %code.111164, %union.tree_node** %con0, %union.tree_node** %lit0, %union.tree_node** %minus_lit0, i32 0)
  %cmp2893 = icmp eq i32 %code.111164, 60
  %conv2894 = zext i1 %cmp2893 to i32
  %call2895 = call fastcc %union.tree_node* @split_tree(%union.tree_node* %arg1.411166, i32 %code.111164, %union.tree_node** %con1, %union.tree_node** %lit1, %union.tree_node** %minus_lit1, i32 %conv2894)
  %cmp2896 = icmp ne %union.tree_node* %call2892, null
  %conv2897 = zext i1 %cmp2896 to i32
  %cmp2898 = icmp ne %union.tree_node* %call2895, null
  %conv2899 = zext i1 %cmp2898 to i32
  %add2900 = add nsw i32 %conv2899, %conv2897
  %280 = load %union.tree_node** %con0, align 8, !tbaa !14
  %cmp2901 = icmp ne %union.tree_node* %280, null
  %conv2902 = zext i1 %cmp2901 to i32
  %add2903 = add nsw i32 %add2900, %conv2902
  %281 = load %union.tree_node** %con1, align 8, !tbaa !14
  %cmp2904 = icmp ne %union.tree_node* %281, null
  %conv2905 = zext i1 %cmp2904 to i32
  %add2906 = add nsw i32 %add2903, %conv2905
  %282 = load %union.tree_node** %lit0, align 8, !tbaa !14
  %cmp2907 = icmp ne %union.tree_node* %282, null
  %conv2908 = zext i1 %cmp2907 to i32
  %add2909 = add nsw i32 %add2906, %conv2908
  %283 = load %union.tree_node** %lit1, align 8, !tbaa !14
  %cmp2910 = icmp ne %union.tree_node* %283, null
  %conv2911 = zext i1 %cmp2910 to i32
  %add2912 = add nsw i32 %add2909, %conv2911
  %284 = load %union.tree_node** %minus_lit0, align 8, !tbaa !14
  %cmp2913 = icmp ne %union.tree_node* %284, null
  %conv2914 = zext i1 %cmp2913 to i32
  %add2915 = add nsw i32 %add2912, %conv2914
  %285 = load %union.tree_node** %minus_lit1, align 8, !tbaa !14
  %cmp2916 = icmp ne %union.tree_node* %285, null
  %conv2917 = zext i1 %cmp2916 to i32
  %add2918 = add nsw i32 %add2915, %conv2917
  %cmp2919 = icmp sgt i32 %add2918, 2
  br i1 %cmp2919, label %if.then2921, label %binary

if.then2921:                                      ; preds = %if.then2883
  %.code.1 = select i1 %cmp2893, i32 59, i32 %code.111164
  %call2926 = call fastcc %union.tree_node* @associate_trees(%union.tree_node* %call2892, %union.tree_node* %call2895, i32 %.code.1, %union.tree_node* %0)
  %call2927 = call fastcc %union.tree_node* @associate_trees(%union.tree_node* %280, %union.tree_node* %281, i32 %.code.1, %union.tree_node* %0)
  store %union.tree_node* %call2927, %union.tree_node** %con0, align 8, !tbaa !14
  %call2928 = call fastcc %union.tree_node* @associate_trees(%union.tree_node* %282, %union.tree_node* %283, i32 %.code.1, %union.tree_node* %0)
  store %union.tree_node* %call2928, %union.tree_node** %lit0, align 8, !tbaa !14
  %call2929 = call fastcc %union.tree_node* @associate_trees(%union.tree_node* %284, %union.tree_node* %285, i32 %.code.1, %union.tree_node* %0)
  store %union.tree_node* %call2929, %union.tree_node** %minus_lit0, align 8, !tbaa !14
  %tobool2930 = icmp ne %union.tree_node* %call2929, null
  %tobool2932 = icmp ne %union.tree_node* %call2928, null
  %or.cond7775 = and i1 %tobool2930, %tobool2932
  br i1 %or.cond7775, label %if.then2933, label %if.end2941

if.then2933:                                      ; preds = %if.then2921
  %call2934 = call i32 @tree_int_cst_lt(%union.tree_node* %call2928, %union.tree_node* %call2929) #1
  %tobool2935 = icmp eq i32 %call2934, 0
  br i1 %tobool2935, label %if.end2941.thread, label %if.then2936

if.then2936:                                      ; preds = %if.then2933
  %call2937 = call fastcc %union.tree_node* @associate_trees(%union.tree_node* %call2929, %union.tree_node* %call2928, i32 60, %union.tree_node* %0)
  store %union.tree_node* %call2937, %union.tree_node** %minus_lit0, align 8, !tbaa !14
  store %union.tree_node* null, %union.tree_node** %lit0, align 8, !tbaa !14
  br label %if.end2941

if.end2941.thread:                                ; preds = %if.then2933
  %call2939 = call fastcc %union.tree_node* @associate_trees(%union.tree_node* %call2928, %union.tree_node* %call2929, i32 60, %union.tree_node* %0)
  store %union.tree_node* %call2939, %union.tree_node** %lit0, align 8, !tbaa !14
  store %union.tree_node* null, %union.tree_node** %minus_lit0, align 8, !tbaa !14
  br label %if.end2953

if.end2941:                                       ; preds = %if.then2936, %if.then2921
  %286 = phi %union.tree_node* [ null, %if.then2936 ], [ %call2928, %if.then2921 ]
  %287 = phi %union.tree_node* [ %call2937, %if.then2936 ], [ %call2929, %if.then2921 ]
  %tobool2942 = icmp eq %union.tree_node* %287, null
  br i1 %tobool2942, label %if.end2953, label %if.then2943

if.then2943:                                      ; preds = %if.end2941
  %cmp2944 = icmp eq %union.tree_node* %call2927, null
  br i1 %cmp2944, label %if.then2946, label %if.else2949

if.then2946:                                      ; preds = %if.then2943
  %call2947 = call fastcc %union.tree_node* @associate_trees(%union.tree_node* %call2926, %union.tree_node* %287, i32 60, %union.tree_node* %0)
  %call2948 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %call2947) #1
  br label %return

if.else2949:                                      ; preds = %if.then2943
  %call2950 = call fastcc %union.tree_node* @associate_trees(%union.tree_node* %call2927, %union.tree_node* %287, i32 60, %union.tree_node* %0)
  store %union.tree_node* %call2950, %union.tree_node** %con0, align 8, !tbaa !14
  %call2951 = call fastcc %union.tree_node* @associate_trees(%union.tree_node* %call2926, %union.tree_node* %call2950, i32 59, %union.tree_node* %0)
  %call2952 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %call2951) #1
  br label %return

if.end2953:                                       ; preds = %if.end2941.thread, %if.end2941
  %288 = phi %union.tree_node* [ %call2939, %if.end2941.thread ], [ %286, %if.end2941 ]
  %call2954 = call fastcc %union.tree_node* @associate_trees(%union.tree_node* %call2927, %union.tree_node* %288, i32 %.code.1, %union.tree_node* %0)
  store %union.tree_node* %call2954, %union.tree_node** %con0, align 8, !tbaa !14
  %call2955 = call fastcc %union.tree_node* @associate_trees(%union.tree_node* %call2926, %union.tree_node* %call2954, i32 %.code.1, %union.tree_node* %0)
  %call2956 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %call2955) #1
  br label %return

binary:                                           ; preds = %land.lhs.true3799, %if.end3759, %land.lhs.true3762, %if.end3637, %land.lhs.true3705, %land.lhs.true3731, %land.lhs.true3864, %land.lhs.true3871, %land.lhs.true3878, %land.lhs.true3888, %land.lhs.true3894, %land.lhs.true3903, %if.end3724, %if.end3698, %land.lhs.true3658, %if.end3558, %lor.lhs.false2878, %if.then2883
  %code.3 = phi i32 [ %code.111164, %if.then2883 ], [ %code.111164, %lor.lhs.false2878 ], [ 85, %land.lhs.true3903 ], [ 85, %land.lhs.true3894 ], [ 85, %land.lhs.true3888 ], [ 85, %land.lhs.true3878 ], [ 85, %land.lhs.true3871 ], [ 85, %land.lhs.true3864 ], [ %bf.clear, %land.lhs.true3731 ], [ %bf.clear, %if.end3724 ], [ %bf.clear, %land.lhs.true3705 ], [ %bf.clear, %if.end3698 ], [ 70, %land.lhs.true3658 ], [ 89, %if.end3558 ], [ 70, %if.end3637 ], [ 84, %land.lhs.true3762 ], [ %bf.clear, %if.end3759 ], [ 85, %land.lhs.true3799 ]
  %arg1.5 = phi %union.tree_node* [ %arg1.411166, %if.then2883 ], [ %arg1.411166, %lor.lhs.false2878 ], [ %arg1.711177, %land.lhs.true3903 ], [ %arg1.711177, %land.lhs.true3894 ], [ %arg1.711177, %land.lhs.true3888 ], [ %arg1.711177, %land.lhs.true3878 ], [ %arg1.711177, %land.lhs.true3871 ], [ %arg1.711177, %land.lhs.true3864 ], [ %arg1.3, %land.lhs.true3731 ], [ %arg1.3, %if.end3724 ], [ %arg1.3, %land.lhs.true3705 ], [ %arg1.3, %if.end3698 ], [ %arg1.3, %land.lhs.true3658 ], [ %arg1.3, %if.end3558 ], [ %arg1.3, %if.end3637 ], [ %arg1.3, %land.lhs.true3762 ], [ %arg1.3, %if.end3759 ], [ %arg1.711177, %land.lhs.true3799 ]
  %tobool2959 = icmp eq i32 %wins.3, 0
  br i1 %tobool2959, label %return, label %if.end2962

if.end2962:                                       ; preds = %binary, %associate, %if.end3266
  %arg1.511173 = phi %union.tree_node* [ %arg1.5, %binary ], [ %arg1.4, %associate ], [ %arg1.3, %if.end3266 ]
  %code.311172 = phi i32 [ %code.3, %binary ], [ %code.1, %associate ], [ 61, %if.end3266 ]
  %call2961 = call fastcc %union.tree_node* @const_binop(i32 %code.311172, %union.tree_node* %arg0.5, %union.tree_node* %arg1.511173)
  %cmp2963 = icmp eq %union.tree_node* %call2961, null
  br i1 %cmp2963, label %return, label %if.then2965

if.then2965:                                      ; preds = %if.end2962
  %type2967 = getelementptr inbounds %union.tree_node* %call2961, i64 0, i32 0, i32 0, i32 1
  %289 = load %union.tree_node** %type2967, align 8, !tbaa !11
  %290 = load %union.tree_node** %type1, align 8, !tbaa !11
  %cmp2970 = icmp eq %union.tree_node* %289, %290
  br i1 %cmp2970, label %return, label %if.then2972

if.then2972:                                      ; preds = %if.then2965
  %call2975 = call %union.tree_node* @convert(%union.tree_node* %290, %union.tree_node* %call2961) #1
  br label %return

sw.bb2978:                                        ; preds = %if.end901
  %code2980 = getelementptr inbounds %union.tree_node* %arg1.3, i64 0, i32 0, i32 0, i32 2
  %bf.load2981 = load i32* %code2980, align 8
  %bf.clear2982 = and i32 %bf.load2981, 255
  %cmp2983 = icmp eq i32 %bf.clear2982, 77
  br i1 %cmp2983, label %if.then2985, label %if.end2991

if.then2985:                                      ; preds = %sw.bb2978
  %operands2987 = getelementptr inbounds %union.tree_node* %arg1.3, i64 0, i32 0, i32 2
  %arrayidx2988 = bitcast i32* %operands2987 to %union.tree_node**
  %291 = load %union.tree_node** %arrayidx2988, align 8, !tbaa !14
  %call2989 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 59, %union.tree_node* %0, %union.tree_node* %arg0.5, %union.tree_node* %291) #1
  %call2990 = call %union.tree_node* @fold(%union.tree_node* %call2989)
  br label %return

if.end2991:                                       ; preds = %sw.bb2978
  %code2993 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 0, i32 2
  %bf.load2994 = load i32* %code2993, align 8
  %bf.clear2995 = and i32 %bf.load2994, 255
  %cmp2996 = icmp eq i32 %bf.clear2995, 77
  %cmp3003 = icmp eq i32 %bf.clear2982, 26
  %or.cond9743 = and i1 %cmp2996, %cmp3003
  br i1 %or.cond9743, label %if.then3005, label %if.end3017

if.then3005:                                      ; preds = %if.end2991
  %type3007 = getelementptr inbounds %union.tree_node* %arg1.3, i64 0, i32 0, i32 0, i32 1
  %292 = load %union.tree_node** %type3007, align 8, !tbaa !11
  %real_cst3010 = getelementptr inbounds %union.tree_node* %arg1.3, i64 0, i32 0, i32 2
  %293 = bitcast i32* %real_cst3010 to %struct.realvaluetype*
  call void @ereal_negate(%struct.realvaluetype* sret %agg.tmp3008, %struct.realvaluetype* byval align 8 %293) #1
  %call3011 = call %union.tree_node* @build_real(%union.tree_node* %292, %struct.realvaluetype* byval align 8 %agg.tmp3008) #1
  %operands3013 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 2
  %arrayidx3014 = bitcast i32* %operands3013 to %union.tree_node**
  %294 = load %union.tree_node** %arrayidx3014, align 8, !tbaa !14
  %call3015 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 60, %union.tree_node* %0, %union.tree_node* %call3011, %union.tree_node* %294) #1
  %call3016 = call %union.tree_node* @fold(%union.tree_node* %call3015)
  br label %return

if.end3017:                                       ; preds = %if.end2991
  %code3019 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2
  %bf.load3020 = load i32* %code3019, align 8
  %bf.clear3021 = and i32 %bf.load3020, 255
  switch i32 %bf.clear3021, label %if.then3040 [
    i32 7, label %if.else3092
    i32 8, label %land.lhs.true3031
  ]

land.lhs.true3031:                                ; preds = %if.end3017
  %type3033 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 1
  %295 = load %union.tree_node** %type3033, align 8, !tbaa !11
  %code3035 = getelementptr inbounds %union.tree_node* %295, i64 0, i32 0, i32 0, i32 2
  %bf.load3036 = load i32* %code3035, align 8
  %bf.clear3037 = and i32 %bf.load3036, 255
  %cmp3038 = icmp eq i32 %bf.clear3037, 7
  br i1 %cmp3038, label %if.else3092, label %if.then3040

if.then3040:                                      ; preds = %if.end3017, %land.lhs.true3031
  %tobool3041 = icmp eq i32 %wins.3, 0
  br i1 %tobool3041, label %land.lhs.true3042, label %if.end3048

land.lhs.true3042:                                ; preds = %if.then3040
  %call3043 = call i32 @integer_zerop(%union.tree_node* %arg0.5) #1
  %tobool3044 = icmp eq i32 %call3043, 0
  br i1 %tobool3044, label %if.end3048, label %if.then3045

if.then3045:                                      ; preds = %land.lhs.true3042
  %call3046 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %arg1.3) #1
  %call3047 = call fastcc %union.tree_node* @negate_expr(%union.tree_node* %call3046)
  br label %return

if.end3048:                                       ; preds = %land.lhs.true3042, %if.then3040
  %call3049 = call i32 @integer_zerop(%union.tree_node* %arg1.3) #1
  %tobool3050 = icmp eq i32 %call3049, 0
  br i1 %tobool3050, label %if.end3054, label %if.then3051

if.then3051:                                      ; preds = %if.end3048
  %call3052 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %arg0.5) #1
  %code.i11018 = getelementptr inbounds %union.tree_node* %call3052, i64 0, i32 0, i32 0, i32 2
  %bf.load.i11019 = load i32* %code.i11018, align 8
  %bf.clear.i11020 = and i32 %bf.load.i11019, 255
  switch i32 %bf.clear.i11020, label %if.end.i11029 [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i11029:                                    ; preds = %if.then3051
  %type.i11021 = getelementptr inbounds %union.tree_node* %call3052, i64 0, i32 0, i32 0, i32 1
  %296 = load %union.tree_node** %type.i11021, align 8, !tbaa !11
  %call.i11022 = call %union.tree_node* @build1(i32 116, %union.tree_node* %296, %union.tree_node* %call3052) #1
  %bf.load26.i11023 = load i32* %code.i11018, align 8
  %bf.clear27.i11024 = and i32 %bf.load26.i11023, 512
  %constant_flag29.i11025 = getelementptr inbounds %union.tree_node* %call.i11022, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i11026 = load i32* %constant_flag29.i11025, align 8
  %bf.clear31.i11027 = and i32 %bf.load30.i11026, -513
  %bf.set.i11028 = or i32 %bf.clear31.i11027, %bf.clear27.i11024
  store i32 %bf.set.i11028, i32* %constant_flag29.i11025, align 8
  br label %return

if.end3054:                                       ; preds = %if.end3048
  %bf.load3057 = load i32* %code2993, align 8
  %bf.clear3058 = and i32 %bf.load3057, 255
  %cmp3059 = icmp eq i32 %bf.clear3058, 61
  br i1 %cmp3059, label %land.lhs.true3061, label %if.end3110

land.lhs.true3061:                                ; preds = %if.end3054
  %bf.load3064 = load i32* %code2980, align 8
  %bf.clear3065 = and i32 %bf.load3064, 255
  %cmp3066 = icmp eq i32 %bf.clear3065, 61
  br i1 %cmp3066, label %land.lhs.true3068, label %if.end3110

land.lhs.true3068:                                ; preds = %land.lhs.true3061
  %operands3070 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 2
  %arrayidx3071 = getelementptr inbounds i32* %operands3070, i64 2
  %297 = bitcast i32* %arrayidx3071 to %union.tree_node**
  %298 = load %union.tree_node** %297, align 8, !tbaa !14
  %operands3073 = getelementptr inbounds %union.tree_node* %arg1.3, i64 0, i32 0, i32 2
  %arrayidx3074 = getelementptr inbounds i32* %operands3073, i64 2
  %299 = bitcast i32* %arrayidx3074 to %union.tree_node**
  %300 = load %union.tree_node** %299, align 8, !tbaa !14
  %call3075 = call i32 @operand_equal_p(%union.tree_node* %298, %union.tree_node* %300, i32 0)
  %tobool3076 = icmp eq i32 %call3075, 0
  br i1 %tobool3076, label %if.end3110, label %if.then3077

if.then3077:                                      ; preds = %land.lhs.true3068
  %arrayidx3080 = bitcast i32* %operands3070 to %union.tree_node**
  %301 = load %union.tree_node** %arrayidx3080, align 8, !tbaa !14
  %arrayidx3083 = bitcast i32* %operands3073 to %union.tree_node**
  %302 = load %union.tree_node** %arrayidx3083, align 8, !tbaa !14
  %call3084 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 60, %union.tree_node* %0, %union.tree_node* %301, %union.tree_node* %302) #1
  %call3085 = call %union.tree_node* @fold(%union.tree_node* %call3084)
  %303 = load %union.tree_node** %297, align 8, !tbaa !14
  %call3089 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 61, %union.tree_node* %0, %union.tree_node* %call3085, %union.tree_node* %303) #1
  %call3090 = call %union.tree_node* @fold(%union.tree_node* %call3089)
  br label %return

if.else3092:                                      ; preds = %if.end3017, %land.lhs.true3031
  %304 = load i32* @flag_unsafe_math_optimizations, align 4, !tbaa !12
  %tobool3093 = icmp eq i32 %304, 0
  br i1 %tobool3093, label %if.end3110, label %if.then3094

if.then3094:                                      ; preds = %if.else3092
  %tobool3095 = icmp eq i32 %wins.3, 0
  br i1 %tobool3095, label %land.lhs.true3096, label %if.end3102

land.lhs.true3096:                                ; preds = %if.then3094
  %call3097 = call i32 @real_zerop(%union.tree_node* %arg0.5) #1
  %tobool3098 = icmp eq i32 %call3097, 0
  br i1 %tobool3098, label %if.end3102, label %if.then3099

if.then3099:                                      ; preds = %land.lhs.true3096
  %call3100 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %arg1.3) #1
  %call3101 = call fastcc %union.tree_node* @negate_expr(%union.tree_node* %call3100)
  br label %return

if.end3102:                                       ; preds = %land.lhs.true3096, %if.then3094
  %call3103 = call i32 @real_zerop(%union.tree_node* %arg1.3) #1
  %tobool3104 = icmp eq i32 %call3103, 0
  br i1 %tobool3104, label %if.end3110, label %if.then3105

if.then3105:                                      ; preds = %if.end3102
  %call3106 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %arg0.5) #1
  %code.i11004 = getelementptr inbounds %union.tree_node* %call3106, i64 0, i32 0, i32 0, i32 2
  %bf.load.i11005 = load i32* %code.i11004, align 8
  %bf.clear.i11006 = and i32 %bf.load.i11005, 255
  switch i32 %bf.clear.i11006, label %if.end.i11015 [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i11015:                                    ; preds = %if.then3105
  %type.i11007 = getelementptr inbounds %union.tree_node* %call3106, i64 0, i32 0, i32 0, i32 1
  %305 = load %union.tree_node** %type.i11007, align 8, !tbaa !11
  %call.i11008 = call %union.tree_node* @build1(i32 116, %union.tree_node* %305, %union.tree_node* %call3106) #1
  %bf.load26.i11009 = load i32* %code.i11004, align 8
  %bf.clear27.i11010 = and i32 %bf.load26.i11009, 512
  %constant_flag29.i11011 = getelementptr inbounds %union.tree_node* %call.i11008, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i11012 = load i32* %constant_flag29.i11011, align 8
  %bf.clear31.i11013 = and i32 %bf.load30.i11012, -513
  %bf.set.i11014 = or i32 %bf.clear31.i11013, %bf.clear27.i11010
  store i32 %bf.set.i11014, i32* %constant_flag29.i11011, align 8
  br label %return

if.end3110:                                       ; preds = %if.end3102, %if.else3092, %land.lhs.true3068, %if.end3054, %land.lhs.true3061
  %bf.load3113 = load i32* %code3019, align 8
  %bf.clear3114 = and i32 %bf.load3113, 255
  switch i32 %bf.clear3114, label %land.lhs.true3135 [
    i32 7, label %lor.lhs.false3133
    i32 8, label %land.lhs.true3124
  ]

land.lhs.true3124:                                ; preds = %if.end3110
  %type3126 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 1
  %306 = load %union.tree_node** %type3126, align 8, !tbaa !11
  %code3128 = getelementptr inbounds %union.tree_node* %306, i64 0, i32 0, i32 0, i32 2
  %bf.load3129 = load i32* %code3128, align 8
  %bf.clear3130 = and i32 %bf.load3129, 255
  %cmp3131 = icmp ne i32 %bf.clear3130, 7
  %307 = load i32* @flag_unsafe_math_optimizations, align 4
  %tobool3134 = icmp ne i32 %307, 0
  %or.cond7777 = or i1 %cmp3131, %tobool3134
  br i1 %or.cond7777, label %land.lhs.true3135, label %associate

lor.lhs.false3133:                                ; preds = %if.end3110
  %.old7776 = load i32* @flag_unsafe_math_optimizations, align 4, !tbaa !12
  %tobool3134.old = icmp eq i32 %.old7776, 0
  br i1 %tobool3134.old, label %associate, label %land.lhs.true3135

land.lhs.true3135:                                ; preds = %if.end3110, %lor.lhs.false3133, %land.lhs.true3124
  %call3136 = call i32 @operand_equal_p(%union.tree_node* %arg0.5, %union.tree_node* %arg1.3, i32 0)
  %tobool3137 = icmp eq i32 %call3136, 0
  br i1 %tobool3137, label %associate, label %if.then3138

if.then3138:                                      ; preds = %land.lhs.true3135
  %308 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8, !tbaa !14
  %call3139 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %308) #1
  br label %return

sw.bb3141:                                        ; preds = %if.end901
  %code3143 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 0, i32 2
  %bf.load3144 = load i32* %code3143, align 8
  %bf.clear3145 = and i32 %bf.load3144, 255
  %cmp3146 = icmp eq i32 %bf.clear3145, 77
  br i1 %cmp3146, label %land.lhs.true3148, label %if.end3164

land.lhs.true3148:                                ; preds = %sw.bb3141
  %code3150 = getelementptr inbounds %union.tree_node* %arg1.3, i64 0, i32 0, i32 0, i32 2
  %bf.load3151 = load i32* %code3150, align 8
  %bf.clear3152 = and i32 %bf.load3151, 255
  %cmp3153 = icmp eq i32 %bf.clear3152, 77
  br i1 %cmp3153, label %if.then3155, label %if.end3164

if.then3155:                                      ; preds = %land.lhs.true3148
  %operands3157 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 2
  %arrayidx3158 = bitcast i32* %operands3157 to %union.tree_node**
  %309 = load %union.tree_node** %arrayidx3158, align 8, !tbaa !14
  %operands3160 = getelementptr inbounds %union.tree_node* %arg1.3, i64 0, i32 0, i32 2
  %arrayidx3161 = bitcast i32* %operands3160 to %union.tree_node**
  %310 = load %union.tree_node** %arrayidx3161, align 8, !tbaa !14
  %call3162 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 61, %union.tree_node* %0, %union.tree_node* %309, %union.tree_node* %310) #1
  %call3163 = call %union.tree_node* @fold(%union.tree_node* %call3162)
  br label %return

if.end3164:                                       ; preds = %land.lhs.true3148, %sw.bb3141
  %code3166 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2
  %bf.load3167 = load i32* %code3166, align 8
  %bf.clear3168 = and i32 %bf.load3167, 255
  switch i32 %bf.clear3168, label %if.then3187 [
    i32 7, label %if.else3253
    i32 8, label %land.lhs.true3178
  ]

land.lhs.true3178:                                ; preds = %if.end3164
  %type3180 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 1
  %311 = load %union.tree_node** %type3180, align 8, !tbaa !11
  %code3182 = getelementptr inbounds %union.tree_node* %311, i64 0, i32 0, i32 0, i32 2
  %bf.load3183 = load i32* %code3182, align 8
  %bf.clear3184 = and i32 %bf.load3183, 255
  %cmp3185 = icmp eq i32 %bf.clear3184, 7
  br i1 %cmp3185, label %if.else3253, label %if.then3187

if.then3187:                                      ; preds = %if.end3164, %land.lhs.true3178
  %call3188 = call i32 @integer_zerop(%union.tree_node* %arg1.3) #1
  %tobool3189 = icmp eq i32 %call3188, 0
  br i1 %tobool3189, label %if.end3192, label %if.then3190

if.then3190:                                      ; preds = %if.then3187
  %call.i10982 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %arg1.3) #1
  %bf.load.i10984 = load i32* %code3143, align 8
  %bf.clear.i10985 = and i32 %bf.load.i10984, 256
  %tobool.i10986 = icmp eq i32 %bf.clear.i10985, 0
  br i1 %tobool.i10986, label %if.end.i10992, label %if.then.i10988

if.then.i10988:                                   ; preds = %if.then3190
  %call1.i10987 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 47, %union.tree_node* %0, %union.tree_node* %arg0.5, %union.tree_node* %call.i10982) #1
  br label %return

if.end.i10992:                                    ; preds = %if.then3190
  %code.i.i10989 = getelementptr inbounds %union.tree_node* %call.i10982, i64 0, i32 0, i32 0, i32 2
  %bf.load.i.i10990 = load i32* %code.i.i10989, align 8
  %bf.clear.i.i10991 = and i32 %bf.load.i.i10990, 255
  switch i32 %bf.clear.i.i10991, label %if.end.i.i11001 [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i.i11001:                                  ; preds = %if.end.i10992
  %type.i.i10993 = getelementptr inbounds %union.tree_node* %call.i10982, i64 0, i32 0, i32 0, i32 1
  %312 = load %union.tree_node** %type.i.i10993, align 8, !tbaa !11
  %call.i.i10994 = call %union.tree_node* @build1(i32 116, %union.tree_node* %312, %union.tree_node* %call.i10982) #1
  %bf.load26.i.i10995 = load i32* %code.i.i10989, align 8
  %bf.clear27.i.i10996 = and i32 %bf.load26.i.i10995, 512
  %constant_flag29.i.i10997 = getelementptr inbounds %union.tree_node* %call.i.i10994, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i.i10998 = load i32* %constant_flag29.i.i10997, align 8
  %bf.clear31.i.i10999 = and i32 %bf.load30.i.i10998, -513
  %bf.set.i.i11000 = or i32 %bf.clear31.i.i10999, %bf.clear27.i.i10996
  store i32 %bf.set.i.i11000, i32* %constant_flag29.i.i10997, align 8
  br label %return

if.end3192:                                       ; preds = %if.then3187
  %call3193 = call i32 @integer_onep(%union.tree_node* %arg1.3) #1
  %tobool3194 = icmp eq i32 %call3193, 0
  br i1 %tobool3194, label %if.end3198, label %if.then3195

if.then3195:                                      ; preds = %if.end3192
  %call3196 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %arg0.5) #1
  %code.i10968 = getelementptr inbounds %union.tree_node* %call3196, i64 0, i32 0, i32 0, i32 2
  %bf.load.i10969 = load i32* %code.i10968, align 8
  %bf.clear.i10970 = and i32 %bf.load.i10969, 255
  switch i32 %bf.clear.i10970, label %if.end.i10979 [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i10979:                                    ; preds = %if.then3195
  %type.i10971 = getelementptr inbounds %union.tree_node* %call3196, i64 0, i32 0, i32 0, i32 1
  %313 = load %union.tree_node** %type.i10971, align 8, !tbaa !11
  %call.i10972 = call %union.tree_node* @build1(i32 116, %union.tree_node* %313, %union.tree_node* %call3196) #1
  %bf.load26.i10973 = load i32* %code.i10968, align 8
  %bf.clear27.i10974 = and i32 %bf.load26.i10973, 512
  %constant_flag29.i10975 = getelementptr inbounds %union.tree_node* %call.i10972, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i10976 = load i32* %constant_flag29.i10975, align 8
  %bf.clear31.i10977 = and i32 %bf.load30.i10976, -513
  %bf.set.i10978 = or i32 %bf.clear31.i10977, %bf.clear27.i10974
  store i32 %bf.set.i10978, i32* %constant_flag29.i10975, align 8
  br label %return

if.end3198:                                       ; preds = %if.end3192
  %code3200 = getelementptr inbounds %union.tree_node* %arg1.3, i64 0, i32 0, i32 0, i32 2
  %bf.load3201 = load i32* %code3200, align 8
  %bf.clear3202 = and i32 %bf.load3201, 255
  %cmp3203 = icmp eq i32 %bf.clear3202, 82
  br i1 %cmp3203, label %land.lhs.true3205, label %if.end3217

land.lhs.true3205:                                ; preds = %if.end3198
  %operands3207 = getelementptr inbounds %union.tree_node* %arg1.3, i64 0, i32 0, i32 2
  %arrayidx3208 = bitcast i32* %operands3207 to %union.tree_node**
  %314 = load %union.tree_node** %arrayidx3208, align 8, !tbaa !14
  %call3209 = call i32 @integer_onep(%union.tree_node* %314) #1
  %tobool3210 = icmp eq i32 %call3209, 0
  br i1 %tobool3210, label %if.end3217, label %if.then3211

if.then3211:                                      ; preds = %land.lhs.true3205
  %arrayidx3214 = getelementptr inbounds i32* %operands3207, i64 2
  %315 = bitcast i32* %arrayidx3214 to %union.tree_node**
  %316 = load %union.tree_node** %315, align 8, !tbaa !14
  %call3215 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 82, %union.tree_node* %0, %union.tree_node* %arg0.5, %union.tree_node* %316) #1
  %call3216 = call %union.tree_node* @fold(%union.tree_node* %call3215)
  br label %return

if.end3217:                                       ; preds = %land.lhs.true3205, %if.end3198
  %bf.load3220 = load i32* %code3143, align 8
  %bf.clear3221 = and i32 %bf.load3220, 255
  %cmp3222 = icmp eq i32 %bf.clear3221, 82
  br i1 %cmp3222, label %land.lhs.true3224, label %if.end3236

land.lhs.true3224:                                ; preds = %if.end3217
  %operands3226 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 2
  %arrayidx3227 = bitcast i32* %operands3226 to %union.tree_node**
  %317 = load %union.tree_node** %arrayidx3227, align 8, !tbaa !14
  %call3228 = call i32 @integer_onep(%union.tree_node* %317) #1
  %tobool3229 = icmp eq i32 %call3228, 0
  br i1 %tobool3229, label %if.end3236, label %if.then3230

if.then3230:                                      ; preds = %land.lhs.true3224
  %arrayidx3233 = getelementptr inbounds i32* %operands3226, i64 2
  %318 = bitcast i32* %arrayidx3233 to %union.tree_node**
  %319 = load %union.tree_node** %318, align 8, !tbaa !14
  %call3234 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 82, %union.tree_node* %0, %union.tree_node* %arg1.3, %union.tree_node* %319) #1
  %call3235 = call %union.tree_node* @fold(%union.tree_node* %call3234)
  br label %return

if.end3236:                                       ; preds = %land.lhs.true3224, %if.end3217
  %bf.load3239 = load i32* %code3200, align 8
  %bf.clear3240 = and i32 %bf.load3239, 255
  %cmp3241 = icmp eq i32 %bf.clear3240, 25
  br i1 %cmp3241, label %land.lhs.true3243, label %associate

land.lhs.true3243:                                ; preds = %if.end3236
  %operands3245 = getelementptr inbounds %union.tree_node* %expr, i64 0, i32 0, i32 2
  %arrayidx3246 = bitcast i32* %operands3245 to %union.tree_node**
  %320 = load %union.tree_node** %arrayidx3246, align 8, !tbaa !14
  %call3247 = call fastcc %union.tree_node* @extract_muldiv(%union.tree_node* %320, %union.tree_node* %arg1.3, i32 61, %union.tree_node* null)
  %cmp3248 = icmp eq %union.tree_node* %call3247, null
  br i1 %cmp3248, label %associate, label %if.then3250

if.then3250:                                      ; preds = %land.lhs.true3243
  %call3251 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %call3247) #1
  br label %return

if.else3253:                                      ; preds = %if.end3164, %land.lhs.true3178
  %321 = load i32* @flag_unsafe_math_optimizations, align 4, !tbaa !12
  %tobool3254 = icmp eq i32 %321, 0
  br i1 %tobool3254, label %if.end3260, label %land.lhs.true3255

land.lhs.true3255:                                ; preds = %if.else3253
  %call3256 = call i32 @real_zerop(%union.tree_node* %arg1.3) #1
  %tobool3257 = icmp eq i32 %call3256, 0
  br i1 %tobool3257, label %if.end3260, label %if.then3258

if.then3258:                                      ; preds = %land.lhs.true3255
  %call.i10946 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %arg1.3) #1
  %bf.load.i10948 = load i32* %code3143, align 8
  %bf.clear.i10949 = and i32 %bf.load.i10948, 256
  %tobool.i10950 = icmp eq i32 %bf.clear.i10949, 0
  br i1 %tobool.i10950, label %if.end.i10956, label %if.then.i10952

if.then.i10952:                                   ; preds = %if.then3258
  %call1.i10951 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 47, %union.tree_node* %0, %union.tree_node* %arg0.5, %union.tree_node* %call.i10946) #1
  br label %return

if.end.i10956:                                    ; preds = %if.then3258
  %code.i.i10953 = getelementptr inbounds %union.tree_node* %call.i10946, i64 0, i32 0, i32 0, i32 2
  %bf.load.i.i10954 = load i32* %code.i.i10953, align 8
  %bf.clear.i.i10955 = and i32 %bf.load.i.i10954, 255
  switch i32 %bf.clear.i.i10955, label %if.end.i.i10965 [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i.i10965:                                  ; preds = %if.end.i10956
  %type.i.i10957 = getelementptr inbounds %union.tree_node* %call.i10946, i64 0, i32 0, i32 0, i32 1
  %322 = load %union.tree_node** %type.i.i10957, align 8, !tbaa !11
  %call.i.i10958 = call %union.tree_node* @build1(i32 116, %union.tree_node* %322, %union.tree_node* %call.i10946) #1
  %bf.load26.i.i10959 = load i32* %code.i.i10953, align 8
  %bf.clear27.i.i10960 = and i32 %bf.load26.i.i10959, 512
  %constant_flag29.i.i10961 = getelementptr inbounds %union.tree_node* %call.i.i10958, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i.i10962 = load i32* %constant_flag29.i.i10961, align 8
  %bf.clear31.i.i10963 = and i32 %bf.load30.i.i10962, -513
  %bf.set.i.i10964 = or i32 %bf.clear31.i.i10963, %bf.clear27.i.i10960
  store i32 %bf.set.i.i10964, i32* %constant_flag29.i.i10961, align 8
  br label %return

if.end3260:                                       ; preds = %land.lhs.true3255, %if.else3253
  %call3261 = call i32 @real_onep(%union.tree_node* %arg1.3) #1
  %tobool3262 = icmp eq i32 %call3261, 0
  br i1 %tobool3262, label %if.end3266, label %if.then3263

if.then3263:                                      ; preds = %if.end3260
  %call3264 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %arg0.5) #1
  %code.i10932 = getelementptr inbounds %union.tree_node* %call3264, i64 0, i32 0, i32 0, i32 2
  %bf.load.i10933 = load i32* %code.i10932, align 8
  %bf.clear.i10934 = and i32 %bf.load.i10933, 255
  switch i32 %bf.clear.i10934, label %if.end.i10943 [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i10943:                                    ; preds = %if.then3263
  %type.i10935 = getelementptr inbounds %union.tree_node* %call3264, i64 0, i32 0, i32 0, i32 1
  %323 = load %union.tree_node** %type.i10935, align 8, !tbaa !11
  %call.i10936 = call %union.tree_node* @build1(i32 116, %union.tree_node* %323, %union.tree_node* %call3264) #1
  %bf.load26.i10937 = load i32* %code.i10932, align 8
  %bf.clear27.i10938 = and i32 %bf.load26.i10937, 512
  %constant_flag29.i10939 = getelementptr inbounds %union.tree_node* %call.i10936, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i10940 = load i32* %constant_flag29.i10939, align 8
  %bf.clear31.i10941 = and i32 %bf.load30.i10940, -513
  %bf.set.i10942 = or i32 %bf.clear31.i10941, %bf.clear27.i10938
  store i32 %bf.set.i10942, i32* %constant_flag29.i10939, align 8
  br label %return

if.end3266:                                       ; preds = %if.end3260
  %tobool3267 = icmp eq i32 %wins.3, 0
  br i1 %tobool3267, label %land.lhs.true3268, label %if.end2962

land.lhs.true3268:                                ; preds = %if.end3266
  %call3269 = call i32 @real_twop(%union.tree_node* %arg1.3) #1
  %tobool3270 = icmp eq i32 %call3269, 0
  br i1 %tobool3270, label %land.lhs.true2855, label %land.lhs.true3271

land.lhs.true3271:                                ; preds = %land.lhs.true3268
  %call3272 = call i32 @global_bindings_p() #1
  %cmp3273 = icmp eq i32 %call3272, 0
  br i1 %cmp3273, label %land.lhs.true3275, label %associate

land.lhs.true3275:                                ; preds = %land.lhs.true3271
  %call3276 = call i32 @contains_placeholder_p(%union.tree_node* %arg0.5) #1
  %tobool3277 = icmp eq i32 %call3276, 0
  br i1 %tobool3277, label %if.then3278, label %associate

if.then3278:                                      ; preds = %land.lhs.true3275
  %call3280 = call %union.tree_node* @save_expr(%union.tree_node* %arg0.5) #1
  %call3281 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 59, %union.tree_node* %0, %union.tree_node* %call3280, %union.tree_node* %call3280) #1
  br label %return

bit_ior:                                          ; preds = %land.lhs.true3371, %land.lhs.true1978, %if.end901
  %call3285 = call i32 @integer_all_onesp(%union.tree_node* %arg1.3) #1
  %tobool3286 = icmp eq i32 %call3285, 0
  br i1 %tobool3286, label %if.end3289, label %if.then3287

if.then3287:                                      ; preds = %bit_ior
  %call.i10910 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %arg1.3) #1
  %side_effects_flag.i10911 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 0, i32 2
  %bf.load.i10912 = load i32* %side_effects_flag.i10911, align 8
  %bf.clear.i10913 = and i32 %bf.load.i10912, 256
  %tobool.i10914 = icmp eq i32 %bf.clear.i10913, 0
  br i1 %tobool.i10914, label %if.end.i10920, label %if.then.i10916

if.then.i10916:                                   ; preds = %if.then3287
  %call1.i10915 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 47, %union.tree_node* %0, %union.tree_node* %arg0.5, %union.tree_node* %call.i10910) #1
  br label %return

if.end.i10920:                                    ; preds = %if.then3287
  %code.i.i10917 = getelementptr inbounds %union.tree_node* %call.i10910, i64 0, i32 0, i32 0, i32 2
  %bf.load.i.i10918 = load i32* %code.i.i10917, align 8
  %bf.clear.i.i10919 = and i32 %bf.load.i.i10918, 255
  switch i32 %bf.clear.i.i10919, label %if.end.i.i10929 [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i.i10929:                                  ; preds = %if.end.i10920
  %type.i.i10921 = getelementptr inbounds %union.tree_node* %call.i10910, i64 0, i32 0, i32 0, i32 1
  %324 = load %union.tree_node** %type.i.i10921, align 8, !tbaa !11
  %call.i.i10922 = call %union.tree_node* @build1(i32 116, %union.tree_node* %324, %union.tree_node* %call.i10910) #1
  %bf.load26.i.i10923 = load i32* %code.i.i10917, align 8
  %bf.clear27.i.i10924 = and i32 %bf.load26.i.i10923, 512
  %constant_flag29.i.i10925 = getelementptr inbounds %union.tree_node* %call.i.i10922, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i.i10926 = load i32* %constant_flag29.i.i10925, align 8
  %bf.clear31.i.i10927 = and i32 %bf.load30.i.i10926, -513
  %bf.set.i.i10928 = or i32 %bf.clear31.i.i10927, %bf.clear27.i.i10924
  store i32 %bf.set.i.i10928, i32* %constant_flag29.i.i10925, align 8
  br label %return

if.end3289:                                       ; preds = %bit_ior
  %call3290 = call i32 @integer_zerop(%union.tree_node* %arg1.3) #1
  %tobool3291 = icmp eq i32 %call3290, 0
  br i1 %tobool3291, label %if.end3295, label %if.then3292

if.then3292:                                      ; preds = %if.end3289
  %call3293 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %arg0.5) #1
  %code.i10896 = getelementptr inbounds %union.tree_node* %call3293, i64 0, i32 0, i32 0, i32 2
  %bf.load.i10897 = load i32* %code.i10896, align 8
  %bf.clear.i10898 = and i32 %bf.load.i10897, 255
  switch i32 %bf.clear.i10898, label %if.end.i10907 [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i10907:                                    ; preds = %if.then3292
  %type.i10899 = getelementptr inbounds %union.tree_node* %call3293, i64 0, i32 0, i32 0, i32 1
  %325 = load %union.tree_node** %type.i10899, align 8, !tbaa !11
  %call.i10900 = call %union.tree_node* @build1(i32 116, %union.tree_node* %325, %union.tree_node* %call3293) #1
  %bf.load26.i10901 = load i32* %code.i10896, align 8
  %bf.clear27.i10902 = and i32 %bf.load26.i10901, 512
  %constant_flag29.i10903 = getelementptr inbounds %union.tree_node* %call.i10900, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i10904 = load i32* %constant_flag29.i10903, align 8
  %bf.clear31.i10905 = and i32 %bf.load30.i10904, -513
  %bf.set.i10906 = or i32 %bf.clear31.i10905, %bf.clear27.i10902
  store i32 %bf.set.i10906, i32* %constant_flag29.i10903, align 8
  br label %return

if.end3295:                                       ; preds = %if.end3289
  %call3296 = call fastcc %union.tree_node* @distribute_bit_expr(i32 86, %union.tree_node* %0, %union.tree_node* %arg0.5, %union.tree_node* %arg1.3)
  %cmp3297 = icmp eq %union.tree_node* %call3296, null
  br i1 %cmp3297, label %if.end3300, label %return

if.end3300:                                       ; preds = %if.end3295
  %code3302 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 0, i32 2
  %bf.load3303 = load i32* %code3302, align 8
  %bf.clear3304 = and i32 %bf.load3303, 255
  %cmp3305 = icmp eq i32 %bf.clear3304, 90
  br i1 %cmp3305, label %land.lhs.true3307, label %bit_rotate

land.lhs.true3307:                                ; preds = %if.end3300
  %code3309 = getelementptr inbounds %union.tree_node* %arg1.3, i64 0, i32 0, i32 0, i32 2
  %bf.load3310 = load i32* %code3309, align 8
  %bf.clear3311 = and i32 %bf.load3310, 255
  %cmp3312 = icmp eq i32 %bf.clear3311, 90
  br i1 %cmp3312, label %if.then3314, label %bit_rotate

if.then3314:                                      ; preds = %land.lhs.true3307
  %operands3316 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 2
  %arrayidx3317 = bitcast i32* %operands3316 to %union.tree_node**
  %326 = load %union.tree_node** %arrayidx3317, align 8, !tbaa !14
  %operands3319 = getelementptr inbounds %union.tree_node* %arg1.3, i64 0, i32 0, i32 2
  %arrayidx3320 = bitcast i32* %operands3319 to %union.tree_node**
  %327 = load %union.tree_node** %arrayidx3320, align 8, !tbaa !14
  %call3321 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 88, %union.tree_node* %0, %union.tree_node* %326, %union.tree_node* %327) #1
  %call3322 = call %union.tree_node* @build1(i32 90, %union.tree_node* %0, %union.tree_node* %call3321) #1
  %call3323 = call %union.tree_node* @fold(%union.tree_node* %call3322)
  br label %return

sw.bb3325:                                        ; preds = %if.end901
  %call3326 = call i32 @integer_zerop(%union.tree_node* %arg1.3) #1
  %tobool3327 = icmp eq i32 %call3326, 0
  br i1 %tobool3327, label %if.end3331, label %if.then3328

if.then3328:                                      ; preds = %sw.bb3325
  %call3329 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %arg0.5) #1
  %code.i10882 = getelementptr inbounds %union.tree_node* %call3329, i64 0, i32 0, i32 0, i32 2
  %bf.load.i10883 = load i32* %code.i10882, align 8
  %bf.clear.i10884 = and i32 %bf.load.i10883, 255
  switch i32 %bf.clear.i10884, label %if.end.i10893 [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i10893:                                    ; preds = %if.then3328
  %type.i10885 = getelementptr inbounds %union.tree_node* %call3329, i64 0, i32 0, i32 0, i32 1
  %328 = load %union.tree_node** %type.i10885, align 8, !tbaa !11
  %call.i10886 = call %union.tree_node* @build1(i32 116, %union.tree_node* %328, %union.tree_node* %call3329) #1
  %bf.load26.i10887 = load i32* %code.i10882, align 8
  %bf.clear27.i10888 = and i32 %bf.load26.i10887, 512
  %constant_flag29.i10889 = getelementptr inbounds %union.tree_node* %call.i10886, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i10890 = load i32* %constant_flag29.i10889, align 8
  %bf.clear31.i10891 = and i32 %bf.load30.i10890, -513
  %bf.set.i10892 = or i32 %bf.clear31.i10891, %bf.clear27.i10888
  store i32 %bf.set.i10892, i32* %constant_flag29.i10889, align 8
  br label %return

if.end3331:                                       ; preds = %sw.bb3325
  %call3332 = call i32 @integer_all_onesp(%union.tree_node* %arg1.3) #1
  %tobool3333 = icmp eq i32 %call3332, 0
  br i1 %tobool3333, label %if.end3337, label %if.then3334

if.then3334:                                      ; preds = %if.end3331
  %call3335 = call %union.tree_node* @build1(i32 90, %union.tree_node* %0, %union.tree_node* %arg0.5) #1
  %call3336 = call %union.tree_node* @fold(%union.tree_node* %call3335)
  br label %return

if.end3337:                                       ; preds = %if.end3331
  %code3339 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 0, i32 2
  %bf.load3340 = load i32* %code3339, align 8
  %bf.clear3341 = and i32 %bf.load3340, 255
  %cmp3342 = icmp eq i32 %bf.clear3341, 88
  br i1 %cmp3342, label %land.lhs.true3344, label %bit_rotate

land.lhs.true3344:                                ; preds = %if.end3337
  %code3346 = getelementptr inbounds %union.tree_node* %arg1.3, i64 0, i32 0, i32 0, i32 2
  %bf.load3347 = load i32* %code3346, align 8
  %bf.clear3348 = and i32 %bf.load3347, 255
  %cmp3349 = icmp eq i32 %bf.clear3348, 88
  br i1 %cmp3349, label %land.lhs.true3351, label %bit_rotate

land.lhs.true3351:                                ; preds = %land.lhs.true3344
  %operands3353 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 2
  %arrayidx3354 = getelementptr inbounds i32* %operands3353, i64 2
  %329 = bitcast i32* %arrayidx3354 to %union.tree_node**
  %330 = load %union.tree_node** %329, align 8, !tbaa !14
  %code3356 = getelementptr inbounds %union.tree_node* %330, i64 0, i32 0, i32 0, i32 2
  %bf.load3357 = load i32* %code3356, align 8
  %bf.clear3358 = and i32 %bf.load3357, 255
  %cmp3359 = icmp eq i32 %bf.clear3358, 25
  br i1 %cmp3359, label %land.lhs.true3361, label %bit_rotate

land.lhs.true3361:                                ; preds = %land.lhs.true3351
  %operands3363 = getelementptr inbounds %union.tree_node* %arg1.3, i64 0, i32 0, i32 2
  %arrayidx3364 = getelementptr inbounds i32* %operands3363, i64 2
  %331 = bitcast i32* %arrayidx3364 to %union.tree_node**
  %332 = load %union.tree_node** %331, align 8, !tbaa !14
  %code3366 = getelementptr inbounds %union.tree_node* %332, i64 0, i32 0, i32 0, i32 2
  %bf.load3367 = load i32* %code3366, align 8
  %bf.clear3368 = and i32 %bf.load3367, 255
  %cmp3369 = icmp eq i32 %bf.clear3368, 25
  br i1 %cmp3369, label %land.lhs.true3371, label %bit_rotate

land.lhs.true3371:                                ; preds = %land.lhs.true3361
  %call3378 = call fastcc %union.tree_node* @const_binop(i32 88, %union.tree_node* %330, %union.tree_node* %332)
  %call3379 = call i32 @integer_zerop(%union.tree_node* %call3378) #1
  %tobool3380 = icmp eq i32 %call3379, 0
  br i1 %tobool3380, label %bit_rotate, label %bit_ior

bit_and:                                          ; preds = %if.end901, %if.then3565
  %arg1.6 = phi %union.tree_node* [ %call3567, %if.then3565 ], [ %arg1.3, %if.end901 ]
  %call3384 = call i32 @integer_all_onesp(%union.tree_node* %arg1.6) #1
  %tobool3385 = icmp eq i32 %call3384, 0
  br i1 %tobool3385, label %if.end3389, label %if.then3386

if.then3386:                                      ; preds = %bit_and
  %call3387 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %arg0.5) #1
  %code.i10868 = getelementptr inbounds %union.tree_node* %call3387, i64 0, i32 0, i32 0, i32 2
  %bf.load.i10869 = load i32* %code.i10868, align 8
  %bf.clear.i10870 = and i32 %bf.load.i10869, 255
  switch i32 %bf.clear.i10870, label %if.end.i10879 [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i10879:                                    ; preds = %if.then3386
  %type.i10871 = getelementptr inbounds %union.tree_node* %call3387, i64 0, i32 0, i32 0, i32 1
  %333 = load %union.tree_node** %type.i10871, align 8, !tbaa !11
  %call.i10872 = call %union.tree_node* @build1(i32 116, %union.tree_node* %333, %union.tree_node* %call3387) #1
  %bf.load26.i10873 = load i32* %code.i10868, align 8
  %bf.clear27.i10874 = and i32 %bf.load26.i10873, 512
  %constant_flag29.i10875 = getelementptr inbounds %union.tree_node* %call.i10872, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i10876 = load i32* %constant_flag29.i10875, align 8
  %bf.clear31.i10877 = and i32 %bf.load30.i10876, -513
  %bf.set.i10878 = or i32 %bf.clear31.i10877, %bf.clear27.i10874
  store i32 %bf.set.i10878, i32* %constant_flag29.i10875, align 8
  br label %return

if.end3389:                                       ; preds = %bit_and
  %call3390 = call i32 @integer_zerop(%union.tree_node* %arg1.6) #1
  %tobool3391 = icmp eq i32 %call3390, 0
  br i1 %tobool3391, label %if.end3394, label %if.then3392

if.then3392:                                      ; preds = %if.end3389
  %call.i10797 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %arg1.6) #1
  %side_effects_flag.i10798 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 0, i32 2
  %bf.load.i10799 = load i32* %side_effects_flag.i10798, align 8
  %bf.clear.i10800 = and i32 %bf.load.i10799, 256
  %tobool.i10801 = icmp eq i32 %bf.clear.i10800, 0
  br i1 %tobool.i10801, label %if.end.i10807, label %if.then.i10803

if.then.i10803:                                   ; preds = %if.then3392
  %call1.i10802 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 47, %union.tree_node* %0, %union.tree_node* %arg0.5, %union.tree_node* %call.i10797) #1
  br label %return

if.end.i10807:                                    ; preds = %if.then3392
  %code.i.i10804 = getelementptr inbounds %union.tree_node* %call.i10797, i64 0, i32 0, i32 0, i32 2
  %bf.load.i.i10805 = load i32* %code.i.i10804, align 8
  %bf.clear.i.i10806 = and i32 %bf.load.i.i10805, 255
  switch i32 %bf.clear.i.i10806, label %if.end.i.i10816 [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i.i10816:                                  ; preds = %if.end.i10807
  %type.i.i10808 = getelementptr inbounds %union.tree_node* %call.i10797, i64 0, i32 0, i32 0, i32 1
  %334 = load %union.tree_node** %type.i.i10808, align 8, !tbaa !11
  %call.i.i10809 = call %union.tree_node* @build1(i32 116, %union.tree_node* %334, %union.tree_node* %call.i10797) #1
  %bf.load26.i.i10810 = load i32* %code.i.i10804, align 8
  %bf.clear27.i.i10811 = and i32 %bf.load26.i.i10810, 512
  %constant_flag29.i.i10812 = getelementptr inbounds %union.tree_node* %call.i.i10809, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i.i10813 = load i32* %constant_flag29.i.i10812, align 8
  %bf.clear31.i.i10814 = and i32 %bf.load30.i.i10813, -513
  %bf.set.i.i10815 = or i32 %bf.clear31.i.i10814, %bf.clear27.i.i10811
  store i32 %bf.set.i.i10815, i32* %constant_flag29.i.i10812, align 8
  br label %return

if.end3394:                                       ; preds = %if.end3389
  %call3395 = call fastcc %union.tree_node* @distribute_bit_expr(i32 88, %union.tree_node* %0, %union.tree_node* %arg0.5, %union.tree_node* %arg1.6)
  %cmp3396 = icmp eq %union.tree_node* %call3395, null
  br i1 %cmp3396, label %if.end3399, label %return

if.end3399:                                       ; preds = %if.end3394
  %code3401 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 0, i32 2
  %bf.load3402 = load i32* %code3401, align 8
  %bf.clear3403 = and i32 %bf.load3402, 255
  %cmp3404 = icmp eq i32 %bf.clear3403, 25
  %code3408 = getelementptr inbounds %union.tree_node* %arg1.6, i64 0, i32 0, i32 0, i32 2
  %bf.load3409 = load i32* %code3408, align 8
  %bf.clear3410 = and i32 %bf.load3409, 255
  %cmp3411 = icmp eq i32 %bf.clear3410, 115
  %or.cond11334 = and i1 %cmp3404, %cmp3411
  br i1 %or.cond11334, label %land.lhs.true3413, label %if.end3459

land.lhs.true3413:                                ; preds = %if.end3399
  %operands3415 = getelementptr inbounds %union.tree_node* %arg1.6, i64 0, i32 0, i32 2
  %arrayidx3416 = bitcast i32* %operands3415 to %union.tree_node**
  %335 = load %union.tree_node** %arrayidx3416, align 8, !tbaa !14
  %type3418 = getelementptr inbounds %union.tree_node* %335, i64 0, i32 0, i32 0, i32 1
  %336 = load %union.tree_node** %type3418, align 8, !tbaa !11
  %unsigned_flag3420 = getelementptr inbounds %union.tree_node* %336, i64 0, i32 0, i32 0, i32 2
  %bf.load3421 = load i32* %unsigned_flag3420, align 8
  %bf.clear3423 = and i32 %bf.load3421, 8192
  %tobool3424 = icmp eq i32 %bf.clear3423, 0
  br i1 %tobool3424, label %if.end3459, label %if.then3425

if.then3425:                                      ; preds = %land.lhs.true3413
  %type3432 = bitcast %union.tree_node* %336 to %struct.tree_type*
  %precision3433 = getelementptr inbounds %struct.tree_type* %type3432, i64 0, i32 6
  %bf.load3434 = load i32* %precision3433, align 4
  %bf.clear3435 = and i32 %bf.load3434, 511
  %337 = load i32* @target_flags, align 4, !tbaa !12
  %and3436 = lshr i32 %337, 20
  %338 = and i32 %and3436, 32
  %339 = add i32 %338, 32
  %cmp3439 = icmp ult i32 %bf.clear3435, %339
  %cmp3442 = icmp ult i32 %bf.clear3435, 64
  %or.cond7779 = and i1 %cmp3439, %cmp3442
  br i1 %or.cond7779, label %land.lhs.true3444, label %if.end3459

land.lhs.true3444:                                ; preds = %if.then3425
  %int_cst3446 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 2
  %low3447 = bitcast i32* %int_cst3446 to i64*
  %340 = load i64* %low3447, align 8, !tbaa !1
  %neg3448 = xor i64 %340, -1
  %sh_prom = zext i32 %bf.clear3435 to i64
  %shl = shl i64 1, %sh_prom
  %sub3449 = add nsw i64 %shl, -1
  %and3450 = and i64 %sub3449, %neg3448
  %cmp3451 = icmp eq i64 %and3450, 0
  br i1 %cmp3451, label %if.then3453, label %if.end3459

if.then3453:                                      ; preds = %land.lhs.true3444
  %call3457 = call %union.tree_node* @build1(i32 115, %union.tree_node* %0, %union.tree_node* %335) #1
  br label %return

if.end3459:                                       ; preds = %if.end3399, %land.lhs.true3413, %if.then3425, %land.lhs.true3444
  %bf.clear3463 = and i32 %bf.load3409, 255
  %cmp3464 = icmp eq i32 %bf.clear3463, 25
  %cmp3471 = icmp eq i32 %bf.clear3403, 115
  %or.cond11335 = and i1 %cmp3464, %cmp3471
  br i1 %or.cond11335, label %land.lhs.true3473, label %if.end3522

land.lhs.true3473:                                ; preds = %if.end3459
  %operands3475 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 2
  %arrayidx3476 = bitcast i32* %operands3475 to %union.tree_node**
  %341 = load %union.tree_node** %arrayidx3476, align 8, !tbaa !14
  %type3478 = getelementptr inbounds %union.tree_node* %341, i64 0, i32 0, i32 0, i32 1
  %342 = load %union.tree_node** %type3478, align 8, !tbaa !11
  %unsigned_flag3480 = getelementptr inbounds %union.tree_node* %342, i64 0, i32 0, i32 0, i32 2
  %bf.load3481 = load i32* %unsigned_flag3480, align 8
  %bf.clear3483 = and i32 %bf.load3481, 8192
  %tobool3484 = icmp eq i32 %bf.clear3483, 0
  br i1 %tobool3484, label %associate, label %if.then3485

if.then3485:                                      ; preds = %land.lhs.true3473
  %type3493 = bitcast %union.tree_node* %342 to %struct.tree_type*
  %precision3494 = getelementptr inbounds %struct.tree_type* %type3493, i64 0, i32 6
  %bf.load3495 = load i32* %precision3494, align 4
  %bf.clear3496 = and i32 %bf.load3495, 511
  %343 = load i32* @target_flags, align 4, !tbaa !12
  %and3497 = lshr i32 %343, 20
  %344 = and i32 %and3497, 32
  %345 = add i32 %344, 32
  %cmp3500 = icmp ult i32 %bf.clear3496, %345
  %cmp3503 = icmp ult i32 %bf.clear3496, 64
  %or.cond7781 = and i1 %cmp3500, %cmp3503
  br i1 %or.cond7781, label %land.lhs.true3505, label %associate

land.lhs.true3505:                                ; preds = %if.then3485
  %int_cst3507 = getelementptr inbounds %union.tree_node* %arg1.6, i64 0, i32 0, i32 2
  %low3508 = bitcast i32* %int_cst3507 to i64*
  %346 = load i64* %low3508, align 8, !tbaa !1
  %neg3509 = xor i64 %346, -1
  %sh_prom3510 = zext i32 %bf.clear3496 to i64
  %shl3511 = shl i64 1, %sh_prom3510
  %sub3512 = add nsw i64 %shl3511, -1
  %and3513 = and i64 %sub3512, %neg3509
  %cmp3514 = icmp eq i64 %and3513, 0
  br i1 %cmp3514, label %if.then3516, label %associate

if.then3516:                                      ; preds = %land.lhs.true3505
  %call3520 = call %union.tree_node* @build1(i32 115, %union.tree_node* %0, %union.tree_node* %341) #1
  br label %return

if.end3522:                                       ; preds = %if.end3459
  %cmp3527 = icmp eq i32 %bf.clear3403, 90
  %cmp3534 = icmp eq i32 %bf.clear3463, 90
  %or.cond11336 = and i1 %cmp3527, %cmp3534
  br i1 %or.cond11336, label %if.then3536, label %associate

if.then3536:                                      ; preds = %if.end3522
  %operands3538 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 2
  %arrayidx3539 = bitcast i32* %operands3538 to %union.tree_node**
  %347 = load %union.tree_node** %arrayidx3539, align 8, !tbaa !14
  %operands3541 = getelementptr inbounds %union.tree_node* %arg1.6, i64 0, i32 0, i32 2
  %arrayidx3542 = bitcast i32* %operands3541 to %union.tree_node**
  %348 = load %union.tree_node** %arrayidx3542, align 8, !tbaa !14
  %call3543 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 86, %union.tree_node* %0, %union.tree_node* %347, %union.tree_node* %348) #1
  %call3544 = call %union.tree_node* @build1(i32 90, %union.tree_node* %0, %union.tree_node* %call3543) #1
  %call3545 = call %union.tree_node* @fold(%union.tree_node* %call3544)
  br label %return

sw.bb3547:                                        ; preds = %if.end901
  %call3548 = call i32 @integer_all_onesp(%union.tree_node* %arg0.5) #1
  %tobool3549 = icmp eq i32 %call3548, 0
  br i1 %tobool3549, label %if.end3553, label %if.then3550

if.then3550:                                      ; preds = %sw.bb3547
  %call3551 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %arg1.3) #1
  %code.i10783 = getelementptr inbounds %union.tree_node* %call3551, i64 0, i32 0, i32 0, i32 2
  %bf.load.i10784 = load i32* %code.i10783, align 8
  %bf.clear.i10785 = and i32 %bf.load.i10784, 255
  switch i32 %bf.clear.i10785, label %if.end.i10794 [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i10794:                                    ; preds = %if.then3550
  %type.i10786 = getelementptr inbounds %union.tree_node* %call3551, i64 0, i32 0, i32 0, i32 1
  %349 = load %union.tree_node** %type.i10786, align 8, !tbaa !11
  %call.i10787 = call %union.tree_node* @build1(i32 116, %union.tree_node* %349, %union.tree_node* %call3551) #1
  %bf.load26.i10788 = load i32* %code.i10783, align 8
  %bf.clear27.i10789 = and i32 %bf.load26.i10788, 512
  %constant_flag29.i10790 = getelementptr inbounds %union.tree_node* %call.i10787, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i10791 = load i32* %constant_flag29.i10790, align 8
  %bf.clear31.i10792 = and i32 %bf.load30.i10791, -513
  %bf.set.i10793 = or i32 %bf.clear31.i10792, %bf.clear27.i10789
  store i32 %bf.set.i10793, i32* %constant_flag29.i10790, align 8
  br label %return

if.end3553:                                       ; preds = %sw.bb3547
  %call3554 = call i32 @integer_zerop(%union.tree_node* %arg0.5) #1
  %tobool3555 = icmp eq i32 %call3554, 0
  br i1 %tobool3555, label %if.end3558, label %if.then3556

if.then3556:                                      ; preds = %if.end3553
  %call.i10761 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %arg0.5) #1
  %side_effects_flag.i10762 = getelementptr inbounds %union.tree_node* %arg1.3, i64 0, i32 0, i32 0, i32 2
  %bf.load.i10763 = load i32* %side_effects_flag.i10762, align 8
  %bf.clear.i10764 = and i32 %bf.load.i10763, 256
  %tobool.i10765 = icmp eq i32 %bf.clear.i10764, 0
  br i1 %tobool.i10765, label %if.end.i10771, label %if.then.i10767

if.then.i10767:                                   ; preds = %if.then3556
  %call1.i10766 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 47, %union.tree_node* %0, %union.tree_node* %arg1.3, %union.tree_node* %call.i10761) #1
  br label %return

if.end.i10771:                                    ; preds = %if.then3556
  %code.i.i10768 = getelementptr inbounds %union.tree_node* %call.i10761, i64 0, i32 0, i32 0, i32 2
  %bf.load.i.i10769 = load i32* %code.i.i10768, align 8
  %bf.clear.i.i10770 = and i32 %bf.load.i.i10769, 255
  switch i32 %bf.clear.i.i10770, label %if.end.i.i10780 [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i.i10780:                                  ; preds = %if.end.i10771
  %type.i.i10772 = getelementptr inbounds %union.tree_node* %call.i10761, i64 0, i32 0, i32 0, i32 1
  %350 = load %union.tree_node** %type.i.i10772, align 8, !tbaa !11
  %call.i.i10773 = call %union.tree_node* @build1(i32 116, %union.tree_node* %350, %union.tree_node* %call.i10761) #1
  %bf.load26.i.i10774 = load i32* %code.i.i10768, align 8
  %bf.clear27.i.i10775 = and i32 %bf.load26.i.i10774, 512
  %constant_flag29.i.i10776 = getelementptr inbounds %union.tree_node* %call.i.i10773, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i.i10777 = load i32* %constant_flag29.i.i10776, align 8
  %bf.clear31.i.i10778 = and i32 %bf.load30.i.i10777, -513
  %bf.set.i.i10779 = or i32 %bf.clear31.i.i10778, %bf.clear27.i.i10775
  store i32 %bf.set.i.i10779, i32* %constant_flag29.i.i10776, align 8
  br label %return

if.end3558:                                       ; preds = %if.end3553
  %code3560 = getelementptr inbounds %union.tree_node* %arg1.3, i64 0, i32 0, i32 0, i32 2
  %bf.load3561 = load i32* %code3560, align 8
  %bf.clear3562 = and i32 %bf.load3561, 255
  %cmp3563 = icmp eq i32 %bf.clear3562, 25
  br i1 %cmp3563, label %if.then3565, label %binary

if.then3565:                                      ; preds = %if.end3558
  %call3566 = call %union.tree_node* @build1(i32 90, %union.tree_node* %0, %union.tree_node* %arg1.3) #1
  %call3567 = call %union.tree_node* @fold(%union.tree_node* %call3566)
  br label %bit_and

sw.bb3569:                                        ; preds = %if.end901
  %code3571 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 0, i32 2
  %bf.load3572 = load i32* %code3571, align 8
  %bf.clear3573 = and i32 %bf.load3572, 255
  %cmp3574 = icmp eq i32 %bf.clear3573, 77
  br i1 %cmp3574, label %land.lhs.true3576, label %if.end3592

land.lhs.true3576:                                ; preds = %sw.bb3569
  %code3578 = getelementptr inbounds %union.tree_node* %arg1.3, i64 0, i32 0, i32 0, i32 2
  %bf.load3579 = load i32* %code3578, align 8
  %bf.clear3580 = and i32 %bf.load3579, 255
  %cmp3581 = icmp eq i32 %bf.clear3580, 77
  br i1 %cmp3581, label %if.then3583, label %if.end3592

if.then3583:                                      ; preds = %land.lhs.true3576
  %operands3585 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 2
  %arrayidx3586 = bitcast i32* %operands3585 to %union.tree_node**
  %351 = load %union.tree_node** %arrayidx3586, align 8, !tbaa !14
  %operands3588 = getelementptr inbounds %union.tree_node* %arg1.3, i64 0, i32 0, i32 2
  %arrayidx3589 = bitcast i32* %operands3588 to %union.tree_node**
  %352 = load %union.tree_node** %arrayidx3589, align 8, !tbaa !14
  %call3590 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 70, %union.tree_node* %0, %union.tree_node* %351, %union.tree_node* %352) #1
  %call3591 = call %union.tree_node* @fold(%union.tree_node* %call3590)
  br label %return

if.end3592:                                       ; preds = %land.lhs.true3576, %sw.bb3569
  %call3593 = call i32 @real_onep(%union.tree_node* %arg1.3) #1
  %tobool3594 = icmp eq i32 %call3593, 0
  br i1 %tobool3594, label %if.end3598, label %if.then3595

if.then3595:                                      ; preds = %if.end3592
  %call3596 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %arg0.5) #1
  %code.i10747 = getelementptr inbounds %union.tree_node* %call3596, i64 0, i32 0, i32 0, i32 2
  %bf.load.i10748 = load i32* %code.i10747, align 8
  %bf.clear.i10749 = and i32 %bf.load.i10748, 255
  switch i32 %bf.clear.i10749, label %if.end.i10758 [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i10758:                                    ; preds = %if.then3595
  %type.i10750 = getelementptr inbounds %union.tree_node* %call3596, i64 0, i32 0, i32 0, i32 1
  %353 = load %union.tree_node** %type.i10750, align 8, !tbaa !11
  %call.i10751 = call %union.tree_node* @build1(i32 116, %union.tree_node* %353, %union.tree_node* %call3596) #1
  %bf.load26.i10752 = load i32* %code.i10747, align 8
  %bf.clear27.i10753 = and i32 %bf.load26.i10752, 512
  %constant_flag29.i10754 = getelementptr inbounds %union.tree_node* %call.i10751, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i10755 = load i32* %constant_flag29.i10754, align 8
  %bf.clear31.i10756 = and i32 %bf.load30.i10755, -513
  %bf.set.i10757 = or i32 %bf.clear31.i10756, %bf.clear27.i10753
  store i32 %bf.set.i10757, i32* %constant_flag29.i10754, align 8
  br label %return

if.end3598:                                       ; preds = %if.end3592
  %code3600 = getelementptr inbounds %union.tree_node* %arg1.3, i64 0, i32 0, i32 0, i32 2
  %bf.load3601 = load i32* %code3600, align 8
  %bf.clear3602 = and i32 %bf.load3601, 255
  %cmp3603 = icmp eq i32 %bf.clear3602, 26
  br i1 %cmp3603, label %if.then3605, label %if.end3637

if.then3605:                                      ; preds = %if.end3598
  %354 = load i32* @flag_unsafe_math_optimizations, align 4, !tbaa !12
  %tobool3606 = icmp eq i32 %354, 0
  br i1 %tobool3606, label %if.else3615, label %land.lhs.true3607

land.lhs.true3607:                                ; preds = %if.then3605
  %call3608 = call %union.tree_node* @build_real(%union.tree_node* %0, %struct.realvaluetype* byval align 8 @dconst1) #1
  %call3609 = call fastcc %union.tree_node* @const_binop(i32 70, %union.tree_node* %call3608, %union.tree_node* %arg1.3)
  %cmp3610 = icmp eq %union.tree_node* %call3609, null
  br i1 %cmp3610, label %if.else3615, label %if.then3612

if.then3612:                                      ; preds = %land.lhs.true3607
  %call3613 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 61, %union.tree_node* %0, %union.tree_node* %arg0.5, %union.tree_node* %call3609) #1
  %call3614 = call %union.tree_node* @fold(%union.tree_node* %call3613)
  br label %return

if.else3615:                                      ; preds = %land.lhs.true3607, %if.then3605
  %355 = load i32* @optimize, align 4, !tbaa !12
  %tobool3616 = icmp eq i32 %355, 0
  br i1 %tobool3616, label %if.end3637, label %if.then3617

if.then3617:                                      ; preds = %if.else3615
  %real_cst3620 = getelementptr inbounds %union.tree_node* %arg1.3, i64 0, i32 0, i32 2
  %356 = bitcast %struct.realvaluetype* %r to i8*
  %357 = bitcast i32* %real_cst3620 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %356, i8* %357, i64 24, i32 8, i1 false), !tbaa.struct !24
  %type3622 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 0, i32 1
  %358 = load %union.tree_node** %type3622, align 8, !tbaa !11
  %type3623 = bitcast %union.tree_node* %358 to %struct.tree_type*
  %mode3624 = getelementptr inbounds %struct.tree_type* %type3623, i64 0, i32 6
  %bf.load3625 = load i32* %mode3624, align 4
  %bf.lshr3626 = lshr i32 %bf.load3625, 9
  %bf.clear3627 = and i32 %bf.lshr3626, 127
  %call3628 = call i32 @exact_real_inverse(i32 %bf.clear3627, %struct.realvaluetype* %r) #1
  %tobool3629 = icmp eq i32 %call3628, 0
  br i1 %tobool3629, label %if.end3637, label %if.then3630

if.then3630:                                      ; preds = %if.then3617
  %call3631 = call %union.tree_node* @build_real(%union.tree_node* %0, %struct.realvaluetype* byval align 8 %r) #1
  %call3632 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 61, %union.tree_node* %0, %union.tree_node* %arg0.5, %union.tree_node* %call3631) #1
  %call3633 = call %union.tree_node* @fold(%union.tree_node* %call3632)
  br label %return

if.end3637:                                       ; preds = %if.then3617, %if.else3615, %if.end3598
  %359 = load i32* @flag_unsafe_math_optimizations, align 4, !tbaa !12
  %tobool3638 = icmp eq i32 %359, 0
  br i1 %tobool3638, label %binary, label %land.lhs.true3639

land.lhs.true3639:                                ; preds = %if.end3637
  %bf.load3642 = load i32* %code3571, align 8
  %bf.clear3643 = and i32 %bf.load3642, 255
  %cmp3644 = icmp eq i32 %bf.clear3643, 70
  br i1 %cmp3644, label %if.then3646, label %land.lhs.true3658

if.then3646:                                      ; preds = %land.lhs.true3639
  %operands3648 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 2
  %arrayidx3649 = bitcast i32* %operands3648 to %union.tree_node**
  %360 = load %union.tree_node** %arrayidx3649, align 8, !tbaa !14
  %arrayidx3652 = getelementptr inbounds i32* %operands3648, i64 2
  %361 = bitcast i32* %arrayidx3652 to %union.tree_node**
  %362 = load %union.tree_node** %361, align 8, !tbaa !14
  %call3653 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 61, %union.tree_node* %0, %union.tree_node* %362, %union.tree_node* %arg1.3) #1
  %call3654 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 70, %union.tree_node* %0, %union.tree_node* %360, %union.tree_node* %call3653) #1
  %call3655 = call %union.tree_node* @fold(%union.tree_node* %call3654)
  br label %return

land.lhs.true3658:                                ; preds = %land.lhs.true3639
  %bf.load3661 = load i32* %code3600, align 8
  %bf.clear3662 = and i32 %bf.load3661, 255
  %cmp3663 = icmp eq i32 %bf.clear3662, 70
  br i1 %cmp3663, label %if.then3665, label %binary

if.then3665:                                      ; preds = %land.lhs.true3658
  %operands3667 = getelementptr inbounds %union.tree_node* %arg1.3, i64 0, i32 0, i32 2
  %arrayidx3668 = bitcast i32* %operands3667 to %union.tree_node**
  %363 = load %union.tree_node** %arrayidx3668, align 8, !tbaa !14
  %call3669 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 70, %union.tree_node* %0, %union.tree_node* %arg0.5, %union.tree_node* %363) #1
  %arrayidx3672 = getelementptr inbounds i32* %operands3667, i64 2
  %364 = bitcast i32* %arrayidx3672 to %union.tree_node**
  %365 = load %union.tree_node** %364, align 8, !tbaa !14
  %call3673 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 61, %union.tree_node* %0, %union.tree_node* %call3669, %union.tree_node* %365) #1
  %call3674 = call %union.tree_node* @fold(%union.tree_node* %call3673)
  br label %return

sw.bb3676:                                        ; preds = %if.end901, %if.end901, %if.end901, %if.end901, %if.end901
  %call3677 = call i32 @integer_onep(%union.tree_node* %arg1.3) #1
  %tobool3678 = icmp eq i32 %call3677, 0
  br i1 %tobool3678, label %if.end3682, label %if.then3679

if.then3679:                                      ; preds = %sw.bb3676
  %call3680 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %arg0.5) #1
  %code.i10733 = getelementptr inbounds %union.tree_node* %call3680, i64 0, i32 0, i32 0, i32 2
  %bf.load.i10734 = load i32* %code.i10733, align 8
  %bf.clear.i10735 = and i32 %bf.load.i10734, 255
  switch i32 %bf.clear.i10735, label %if.end.i10744 [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i10744:                                    ; preds = %if.then3679
  %type.i10736 = getelementptr inbounds %union.tree_node* %call3680, i64 0, i32 0, i32 0, i32 1
  %366 = load %union.tree_node** %type.i10736, align 8, !tbaa !11
  %call.i10737 = call %union.tree_node* @build1(i32 116, %union.tree_node* %366, %union.tree_node* %call3680) #1
  %bf.load26.i10738 = load i32* %code.i10733, align 8
  %bf.clear27.i10739 = and i32 %bf.load26.i10738, 512
  %constant_flag29.i10740 = getelementptr inbounds %union.tree_node* %call.i10737, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i10741 = load i32* %constant_flag29.i10740, align 8
  %bf.clear31.i10742 = and i32 %bf.load30.i10741, -513
  %bf.set.i10743 = or i32 %bf.clear31.i10742, %bf.clear27.i10739
  store i32 %bf.set.i10743, i32* %constant_flag29.i10740, align 8
  br label %return

if.end3682:                                       ; preds = %sw.bb3676
  %call3683 = call i32 @integer_zerop(%union.tree_node* %arg1.3) #1
  %tobool3684 = icmp eq i32 %call3683, 0
  br i1 %tobool3684, label %if.end3686, label %return

if.end3686:                                       ; preds = %if.end3682
  %bf.clear.off = add i32 %bf.clear, -63
  %367 = icmp ult i32 %bf.clear.off, 2
  br i1 %367, label %land.lhs.true3692, label %if.end3698

land.lhs.true3692:                                ; preds = %if.end3686
  %call3693 = call fastcc i32 @multiple_of_p(%union.tree_node* %0, %union.tree_node* %arg0.5, %union.tree_node* %arg1.3)
  %tobool3694 = icmp eq i32 %call3693, 0
  br i1 %tobool3694, label %if.end3698, label %if.then3695

if.then3695:                                      ; preds = %land.lhs.true3692
  %call3696 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 71, %union.tree_node* %0, %union.tree_node* %arg0.5, %union.tree_node* %arg1.3) #1
  %call3697 = call %union.tree_node* @fold(%union.tree_node* %call3696)
  br label %return

if.end3698:                                       ; preds = %land.lhs.true3692, %if.end3686
  %code3700 = getelementptr inbounds %union.tree_node* %arg1.3, i64 0, i32 0, i32 0, i32 2
  %bf.load3701 = load i32* %code3700, align 8
  %bf.clear3702 = and i32 %bf.load3701, 255
  %cmp3703 = icmp eq i32 %bf.clear3702, 25
  br i1 %cmp3703, label %land.lhs.true3705, label %binary

land.lhs.true3705:                                ; preds = %if.end3698
  %operands3707 = getelementptr inbounds %union.tree_node* %expr, i64 0, i32 0, i32 2
  %arrayidx3708 = bitcast i32* %operands3707 to %union.tree_node**
  %368 = load %union.tree_node** %arrayidx3708, align 8, !tbaa !14
  %call3709 = call fastcc %union.tree_node* @extract_muldiv(%union.tree_node* %368, %union.tree_node* %arg1.3, i32 %bf.clear, %union.tree_node* null)
  %cmp3710 = icmp eq %union.tree_node* %call3709, null
  br i1 %cmp3710, label %binary, label %if.then3712

if.then3712:                                      ; preds = %land.lhs.true3705
  %call3713 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %call3709) #1
  br label %return

sw.bb3715:                                        ; preds = %if.end901, %if.end901, %if.end901, %if.end901
  %call3716 = call i32 @integer_onep(%union.tree_node* %arg1.3) #1
  %tobool3717 = icmp eq i32 %call3716, 0
  br i1 %tobool3717, label %if.end3720, label %if.then3718

if.then3718:                                      ; preds = %sw.bb3715
  %369 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8, !tbaa !14
  %call.i10711 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %369) #1
  %side_effects_flag.i10712 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 0, i32 2
  %bf.load.i10713 = load i32* %side_effects_flag.i10712, align 8
  %bf.clear.i10714 = and i32 %bf.load.i10713, 256
  %tobool.i10715 = icmp eq i32 %bf.clear.i10714, 0
  br i1 %tobool.i10715, label %if.end.i10721, label %if.then.i10717

if.then.i10717:                                   ; preds = %if.then3718
  %call1.i10716 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 47, %union.tree_node* %0, %union.tree_node* %arg0.5, %union.tree_node* %call.i10711) #1
  br label %return

if.end.i10721:                                    ; preds = %if.then3718
  %code.i.i10718 = getelementptr inbounds %union.tree_node* %call.i10711, i64 0, i32 0, i32 0, i32 2
  %bf.load.i.i10719 = load i32* %code.i.i10718, align 8
  %bf.clear.i.i10720 = and i32 %bf.load.i.i10719, 255
  switch i32 %bf.clear.i.i10720, label %if.end.i.i10730 [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i.i10730:                                  ; preds = %if.end.i10721
  %type.i.i10722 = getelementptr inbounds %union.tree_node* %call.i10711, i64 0, i32 0, i32 0, i32 1
  %370 = load %union.tree_node** %type.i.i10722, align 8, !tbaa !11
  %call.i.i10723 = call %union.tree_node* @build1(i32 116, %union.tree_node* %370, %union.tree_node* %call.i10711) #1
  %bf.load26.i.i10724 = load i32* %code.i.i10718, align 8
  %bf.clear27.i.i10725 = and i32 %bf.load26.i.i10724, 512
  %constant_flag29.i.i10726 = getelementptr inbounds %union.tree_node* %call.i.i10723, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i.i10727 = load i32* %constant_flag29.i.i10726, align 8
  %bf.clear31.i.i10728 = and i32 %bf.load30.i.i10727, -513
  %bf.set.i.i10729 = or i32 %bf.clear31.i.i10728, %bf.clear27.i.i10725
  store i32 %bf.set.i.i10729, i32* %constant_flag29.i.i10726, align 8
  br label %return

if.end3720:                                       ; preds = %sw.bb3715
  %call3721 = call i32 @integer_zerop(%union.tree_node* %arg1.3) #1
  %tobool3722 = icmp eq i32 %call3721, 0
  br i1 %tobool3722, label %if.end3724, label %return

if.end3724:                                       ; preds = %if.end3720
  %code3726 = getelementptr inbounds %union.tree_node* %arg1.3, i64 0, i32 0, i32 0, i32 2
  %bf.load3727 = load i32* %code3726, align 8
  %bf.clear3728 = and i32 %bf.load3727, 255
  %cmp3729 = icmp eq i32 %bf.clear3728, 25
  br i1 %cmp3729, label %land.lhs.true3731, label %binary

land.lhs.true3731:                                ; preds = %if.end3724
  %operands3733 = getelementptr inbounds %union.tree_node* %expr, i64 0, i32 0, i32 2
  %arrayidx3734 = bitcast i32* %operands3733 to %union.tree_node**
  %371 = load %union.tree_node** %arrayidx3734, align 8, !tbaa !14
  %call3735 = call fastcc %union.tree_node* @extract_muldiv(%union.tree_node* %371, %union.tree_node* %arg1.3, i32 %bf.clear, %union.tree_node* null)
  %cmp3736 = icmp eq %union.tree_node* %call3735, null
  br i1 %cmp3736, label %binary, label %if.then3738

if.then3738:                                      ; preds = %land.lhs.true3731
  %call3739 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %call3735) #1
  br label %return

sw.bb3741:                                        ; preds = %if.end901, %if.end901, %if.end901, %if.end901
  %call3742 = call i32 @integer_zerop(%union.tree_node* %arg1.3) #1
  %tobool3743 = icmp eq i32 %call3742, 0
  br i1 %tobool3743, label %if.end3747, label %if.then3744

if.then3744:                                      ; preds = %sw.bb3741
  %call3745 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %arg0.5) #1
  %code.i10697 = getelementptr inbounds %union.tree_node* %call3745, i64 0, i32 0, i32 0, i32 2
  %bf.load.i10698 = load i32* %code.i10697, align 8
  %bf.clear.i10699 = and i32 %bf.load.i10698, 255
  switch i32 %bf.clear.i10699, label %if.end.i10708 [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i10708:                                    ; preds = %if.then3744
  %type.i10700 = getelementptr inbounds %union.tree_node* %call3745, i64 0, i32 0, i32 0, i32 1
  %372 = load %union.tree_node** %type.i10700, align 8, !tbaa !11
  %call.i10701 = call %union.tree_node* @build1(i32 116, %union.tree_node* %372, %union.tree_node* %call3745) #1
  %bf.load26.i10702 = load i32* %code.i10697, align 8
  %bf.clear27.i10703 = and i32 %bf.load26.i10702, 512
  %constant_flag29.i10704 = getelementptr inbounds %union.tree_node* %call.i10701, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i10705 = load i32* %constant_flag29.i10704, align 8
  %bf.clear31.i10706 = and i32 %bf.load30.i10705, -513
  %bf.set.i10707 = or i32 %bf.clear31.i10706, %bf.clear27.i10703
  store i32 %bf.set.i10707, i32* %constant_flag29.i10704, align 8
  br label %return

if.end3747:                                       ; preds = %sw.bb3741
  %code3749 = getelementptr inbounds %union.tree_node* %arg1.3, i64 0, i32 0, i32 0, i32 2
  %bf.load3750 = load i32* %code3749, align 8
  %bf.clear3751 = and i32 %bf.load3750, 255
  %cmp3752 = icmp eq i32 %bf.clear3751, 25
  br i1 %cmp3752, label %land.lhs.true3754, label %if.end3759

land.lhs.true3754:                                ; preds = %if.end3747
  %call3755 = call i32 @tree_int_cst_sgn(%union.tree_node* %arg1.3) #1
  %cmp3756 = icmp slt i32 %call3755, 0
  br i1 %cmp3756, label %return, label %if.end3759

if.end3759:                                       ; preds = %land.lhs.true3754, %if.end3747
  switch i32 %bf.clear, label %binary [
    i32 84, label %land.lhs.true3762
    i32 85, label %land.lhs.true3799
  ]

land.lhs.true3762:                                ; preds = %if.end3759
  %bf.load3765 = load i32* %code3749, align 8
  %bf.clear3766 = and i32 %bf.load3765, 255
  %cmp3767 = icmp eq i32 %bf.clear3766, 25
  br i1 %cmp3767, label %if.then3769, label %binary

if.then3769:                                      ; preds = %land.lhs.true3762
  %bf.load3772 = load i32* %code3, align 8
  %bf.clear3773 = and i32 %bf.load3772, -256
  %bf.set3774 = or i32 %bf.clear3773, 85
  store i32 %bf.set3774, i32* %code3, align 8
  %type3776 = getelementptr inbounds %union.tree_node* %arg1.3, i64 0, i32 0, i32 0, i32 1
  %373 = load %union.tree_node** %type3776, align 8, !tbaa !11
  %type3777 = bitcast %union.tree_node* %0 to %struct.tree_type*
  %mode3778 = getelementptr inbounds %struct.tree_type* %type3777, i64 0, i32 6
  %bf.load3779 = load i32* %mode3778, align 4
  %bf.lshr3780 = lshr i32 %bf.load3779, 9
  %bf.clear3781 = and i32 %bf.lshr3780, 127
  %idxprom37829697 = zext i32 %bf.clear3781 to i64
  %arrayidx3783 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom37829697
  %374 = load i16* %arrayidx3783, align 2, !tbaa !22
  %conv3784 = zext i16 %374 to i64
  %call3785 = call %union.tree_node* @build_int_2_wide(i64 %conv3784, i64 0) #1
  %call3786 = call %union.tree_node* @convert(%union.tree_node* %373, %union.tree_node* %call3785) #1
  %call3787 = call fastcc %union.tree_node* @const_binop(i32 60, %union.tree_node* %call3786, %union.tree_node* %arg1.3)
  %operands3789 = getelementptr inbounds %union.tree_node* %expr, i64 0, i32 0, i32 2
  %arrayidx3790 = getelementptr inbounds i32* %operands3789, i64 2
  %375 = bitcast i32* %arrayidx3790 to %union.tree_node**
  store %union.tree_node* %call3787, %union.tree_node** %375, align 8, !tbaa !14
  %call3791 = call i32 @tree_int_cst_sgn(%union.tree_node* %call3787) #1
  %cmp3792 = icmp slt i32 %call3791, 0
  br i1 %cmp3792, label %return, label %land.lhs.true3799

land.lhs.true3799:                                ; preds = %if.end3759, %if.then3769
  %arg1.711177 = phi %union.tree_node* [ %call3787, %if.then3769 ], [ %arg1.3, %if.end3759 ]
  %code3801 = getelementptr inbounds %union.tree_node* %arg1.711177, i64 0, i32 0, i32 0, i32 2
  %bf.load3802 = load i32* %code3801, align 8
  %bf.clear3803 = and i32 %bf.load3802, 255
  %cmp3804 = icmp eq i32 %bf.clear3803, 25
  br i1 %cmp3804, label %land.lhs.true3806, label %binary

land.lhs.true3806:                                ; preds = %land.lhs.true3799
  %code3808 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 0, i32 2
  %bf.load3809 = load i32* %code3808, align 8
  %bf.clear3810 = and i32 %bf.load3809, 255
  %bf.clear3810.off = add i32 %bf.clear3810, -86
  %switch9793 = icmp ult i32 %bf.clear3810.off, 4
  br i1 %switch9793, label %land.lhs.true3834, label %land.lhs.true3871

land.lhs.true3834:                                ; preds = %land.lhs.true3806
  %operands3836 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 2
  %arrayidx3837 = getelementptr inbounds i32* %operands3836, i64 2
  %376 = bitcast i32* %arrayidx3837 to %union.tree_node**
  %377 = load %union.tree_node** %376, align 8, !tbaa !14
  %code3839 = getelementptr inbounds %union.tree_node* %377, i64 0, i32 0, i32 0, i32 2
  %bf.load3840 = load i32* %code3839, align 8
  %bf.clear3841 = and i32 %bf.load3840, 255
  %cmp3842 = icmp eq i32 %bf.clear3841, 25
  br i1 %cmp3842, label %if.then3844, label %land.lhs.true3864

if.then3844:                                      ; preds = %land.lhs.true3834
  %arrayidx3851 = bitcast i32* %operands3836 to %union.tree_node**
  %378 = load %union.tree_node** %arrayidx3851, align 8, !tbaa !14
  %call3852 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 85, %union.tree_node* %0, %union.tree_node* %378, %union.tree_node* %arg1.711177) #1
  %call3853 = call %union.tree_node* @fold(%union.tree_node* %call3852)
  %379 = load %union.tree_node** %376, align 8, !tbaa !14
  %call3857 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 85, %union.tree_node* %0, %union.tree_node* %379, %union.tree_node* %arg1.711177) #1
  %call3858 = call %union.tree_node* @fold(%union.tree_node* %call3857)
  %call3859 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %bf.clear3810, %union.tree_node* %0, %union.tree_node* %call3853, %union.tree_node* %call3858) #1
  %call3860 = call %union.tree_node* @fold(%union.tree_node* %call3859)
  br label %return

land.lhs.true3864:                                ; preds = %land.lhs.true3834
  br i1 %cmp3804, label %land.lhs.true3871, label %binary

land.lhs.true3871:                                ; preds = %land.lhs.true3806, %land.lhs.true3864
  %code3873 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 0, i32 2
  %bf.load3874 = load i32* %code3873, align 8
  %bf.clear3875 = and i32 %bf.load3874, 255
  %cmp3876 = icmp eq i32 %bf.clear3875, 85
  br i1 %cmp3876, label %land.lhs.true3878, label %binary

land.lhs.true3878:                                ; preds = %land.lhs.true3871
  %operands3880 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 2
  %arrayidx3881 = getelementptr inbounds i32* %operands3880, i64 2
  %380 = bitcast i32* %arrayidx3881 to %union.tree_node**
  %381 = load %union.tree_node** %380, align 8, !tbaa !14
  %code3883 = getelementptr inbounds %union.tree_node* %381, i64 0, i32 0, i32 0, i32 2
  %bf.load3884 = load i32* %code3883, align 8
  %bf.clear3885 = and i32 %bf.load3884, 255
  %cmp3886 = icmp eq i32 %bf.clear3885, 25
  br i1 %cmp3886, label %land.lhs.true3888, label %binary

land.lhs.true3888:                                ; preds = %land.lhs.true3878
  %int_cst3890 = getelementptr inbounds %union.tree_node* %arg1.711177, i64 0, i32 0, i32 2
  %high3891 = getelementptr inbounds i32* %int_cst3890, i64 2
  %382 = bitcast i32* %high3891 to i64*
  %383 = load i64* %382, align 8, !tbaa !10
  %cmp3892 = icmp eq i64 %383, 0
  br i1 %cmp3892, label %land.lhs.true3894, label %binary

land.lhs.true3894:                                ; preds = %land.lhs.true3888
  %int_cst3899 = getelementptr inbounds %union.tree_node* %381, i64 0, i32 0, i32 2
  %high3900 = getelementptr inbounds i32* %int_cst3899, i64 2
  %384 = bitcast i32* %high3900 to i64*
  %385 = load i64* %384, align 8, !tbaa !10
  %cmp3901 = icmp eq i64 %385, 0
  br i1 %cmp3901, label %land.lhs.true3903, label %binary

land.lhs.true3903:                                ; preds = %land.lhs.true3894
  %low3906 = bitcast i32* %int_cst3890 to i64*
  %386 = load i64* %low3906, align 8, !tbaa !1
  %low3912 = bitcast i32* %int_cst3899 to i64*
  %387 = load i64* %low3912, align 8, !tbaa !1
  %add3913 = add i64 %387, %386
  %type3914 = bitcast %union.tree_node* %0 to %struct.tree_type*
  %mode3915 = getelementptr inbounds %struct.tree_type* %type3914, i64 0, i32 6
  %bf.load3916 = load i32* %mode3915, align 4
  %bf.lshr3917 = lshr i32 %bf.load3916, 9
  %bf.clear3918 = and i32 %bf.lshr3917, 127
  %idxprom39199696 = zext i32 %bf.clear3918 to i64
  %arrayidx3920 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom39199696
  %388 = load i16* %arrayidx3920, align 2, !tbaa !22
  %conv3922 = zext i16 %388 to i64
  %cmp3923 = icmp eq i64 %add3913, %conv3922
  br i1 %cmp3923, label %if.then3925, label %binary

if.then3925:                                      ; preds = %land.lhs.true3903
  %arrayidx3928 = bitcast i32* %operands3880 to %union.tree_node**
  %389 = load %union.tree_node** %arrayidx3928, align 8, !tbaa !14
  br label %return

sw.bb3930:                                        ; preds = %if.end901
  %call3931 = call i32 @operand_equal_p(%union.tree_node* %arg0.5, %union.tree_node* %arg1.3, i32 0)
  %tobool3932 = icmp eq i32 %call3931, 0
  br i1 %tobool3932, label %if.end3935, label %if.then3933

if.then3933:                                      ; preds = %sw.bb3930
  %call.i10675 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %arg0.5) #1
  %side_effects_flag.i10676 = getelementptr inbounds %union.tree_node* %arg1.3, i64 0, i32 0, i32 0, i32 2
  %bf.load.i10677 = load i32* %side_effects_flag.i10676, align 8
  %bf.clear.i10678 = and i32 %bf.load.i10677, 256
  %tobool.i10679 = icmp eq i32 %bf.clear.i10678, 0
  br i1 %tobool.i10679, label %if.end.i10685, label %if.then.i10681

if.then.i10681:                                   ; preds = %if.then3933
  %call1.i10680 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 47, %union.tree_node* %0, %union.tree_node* %arg1.3, %union.tree_node* %call.i10675) #1
  br label %return

if.end.i10685:                                    ; preds = %if.then3933
  %code.i.i10682 = getelementptr inbounds %union.tree_node* %call.i10675, i64 0, i32 0, i32 0, i32 2
  %bf.load.i.i10683 = load i32* %code.i.i10682, align 8
  %bf.clear.i.i10684 = and i32 %bf.load.i.i10683, 255
  switch i32 %bf.clear.i.i10684, label %if.end.i.i10694 [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i.i10694:                                  ; preds = %if.end.i10685
  %type.i.i10686 = getelementptr inbounds %union.tree_node* %call.i10675, i64 0, i32 0, i32 0, i32 1
  %390 = load %union.tree_node** %type.i.i10686, align 8, !tbaa !11
  %call.i.i10687 = call %union.tree_node* @build1(i32 116, %union.tree_node* %390, %union.tree_node* %call.i10675) #1
  %bf.load26.i.i10688 = load i32* %code.i.i10682, align 8
  %bf.clear27.i.i10689 = and i32 %bf.load26.i.i10688, 512
  %constant_flag29.i.i10690 = getelementptr inbounds %union.tree_node* %call.i.i10687, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i.i10691 = load i32* %constant_flag29.i.i10690, align 8
  %bf.clear31.i.i10692 = and i32 %bf.load30.i.i10691, -513
  %bf.set.i.i10693 = or i32 %bf.clear31.i.i10692, %bf.clear27.i.i10689
  store i32 %bf.set.i.i10693, i32* %constant_flag29.i.i10690, align 8
  br label %return

if.end3935:                                       ; preds = %sw.bb3930
  %code3937 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2
  %bf.load3938 = load i32* %code3937, align 8
  %bf.clear3939 = and i32 %bf.load3938, 255
  switch i32 %bf.clear3939, label %associate [
    i32 6, label %land.lhs.true3963
    i32 10, label %land.lhs.true3963
    i32 11, label %land.lhs.true3963
    i32 12, label %land.lhs.true3963
  ]

land.lhs.true3963:                                ; preds = %if.end3935, %if.end3935, %if.end3935, %if.end3935
  %391 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 12
  %392 = load %union.tree_node** %391, align 8, !tbaa !25
  %call3965 = call i32 @operand_equal_p(%union.tree_node* %arg1.3, %union.tree_node* %392, i32 1)
  %tobool3966 = icmp eq i32 %call3965, 0
  br i1 %tobool3966, label %associate, label %if.then3967

if.then3967:                                      ; preds = %land.lhs.true3963
  %call.i10653 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %arg1.3) #1
  %side_effects_flag.i10654 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 0, i32 2
  %bf.load.i10655 = load i32* %side_effects_flag.i10654, align 8
  %bf.clear.i10656 = and i32 %bf.load.i10655, 256
  %tobool.i10657 = icmp eq i32 %bf.clear.i10656, 0
  br i1 %tobool.i10657, label %if.end.i10663, label %if.then.i10659

if.then.i10659:                                   ; preds = %if.then3967
  %call1.i10658 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 47, %union.tree_node* %0, %union.tree_node* %arg0.5, %union.tree_node* %call.i10653) #1
  br label %return

if.end.i10663:                                    ; preds = %if.then3967
  %code.i.i10660 = getelementptr inbounds %union.tree_node* %call.i10653, i64 0, i32 0, i32 0, i32 2
  %bf.load.i.i10661 = load i32* %code.i.i10660, align 8
  %bf.clear.i.i10662 = and i32 %bf.load.i.i10661, 255
  switch i32 %bf.clear.i.i10662, label %if.end.i.i10672 [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i.i10672:                                  ; preds = %if.end.i10663
  %type.i.i10664 = getelementptr inbounds %union.tree_node* %call.i10653, i64 0, i32 0, i32 0, i32 1
  %393 = load %union.tree_node** %type.i.i10664, align 8, !tbaa !11
  %call.i.i10665 = call %union.tree_node* @build1(i32 116, %union.tree_node* %393, %union.tree_node* %call.i10653) #1
  %bf.load26.i.i10666 = load i32* %code.i.i10660, align 8
  %bf.clear27.i.i10667 = and i32 %bf.load26.i.i10666, 512
  %constant_flag29.i.i10668 = getelementptr inbounds %union.tree_node* %call.i.i10665, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i.i10669 = load i32* %constant_flag29.i.i10668, align 8
  %bf.clear31.i.i10670 = and i32 %bf.load30.i.i10669, -513
  %bf.set.i.i10671 = or i32 %bf.clear31.i.i10670, %bf.clear27.i.i10667
  store i32 %bf.set.i.i10671, i32* %constant_flag29.i.i10668, align 8
  br label %return

sw.bb3970:                                        ; preds = %if.end901
  %call3971 = call i32 @operand_equal_p(%union.tree_node* %arg0.5, %union.tree_node* %arg1.3, i32 0)
  %tobool3972 = icmp eq i32 %call3971, 0
  br i1 %tobool3972, label %if.end3975, label %if.then3973

if.then3973:                                      ; preds = %sw.bb3970
  %call.i10631 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %arg0.5) #1
  %side_effects_flag.i10632 = getelementptr inbounds %union.tree_node* %arg1.3, i64 0, i32 0, i32 0, i32 2
  %bf.load.i10633 = load i32* %side_effects_flag.i10632, align 8
  %bf.clear.i10634 = and i32 %bf.load.i10633, 256
  %tobool.i10635 = icmp eq i32 %bf.clear.i10634, 0
  br i1 %tobool.i10635, label %if.end.i10641, label %if.then.i10637

if.then.i10637:                                   ; preds = %if.then3973
  %call1.i10636 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 47, %union.tree_node* %0, %union.tree_node* %arg1.3, %union.tree_node* %call.i10631) #1
  br label %return

if.end.i10641:                                    ; preds = %if.then3973
  %code.i.i10638 = getelementptr inbounds %union.tree_node* %call.i10631, i64 0, i32 0, i32 0, i32 2
  %bf.load.i.i10639 = load i32* %code.i.i10638, align 8
  %bf.clear.i.i10640 = and i32 %bf.load.i.i10639, 255
  switch i32 %bf.clear.i.i10640, label %if.end.i.i10650 [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i.i10650:                                  ; preds = %if.end.i10641
  %type.i.i10642 = getelementptr inbounds %union.tree_node* %call.i10631, i64 0, i32 0, i32 0, i32 1
  %394 = load %union.tree_node** %type.i.i10642, align 8, !tbaa !11
  %call.i.i10643 = call %union.tree_node* @build1(i32 116, %union.tree_node* %394, %union.tree_node* %call.i10631) #1
  %bf.load26.i.i10644 = load i32* %code.i.i10638, align 8
  %bf.clear27.i.i10645 = and i32 %bf.load26.i.i10644, 512
  %constant_flag29.i.i10646 = getelementptr inbounds %union.tree_node* %call.i.i10643, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i.i10647 = load i32* %constant_flag29.i.i10646, align 8
  %bf.clear31.i.i10648 = and i32 %bf.load30.i.i10647, -513
  %bf.set.i.i10649 = or i32 %bf.clear31.i.i10648, %bf.clear27.i.i10645
  store i32 %bf.set.i.i10649, i32* %constant_flag29.i.i10646, align 8
  br label %return

if.end3975:                                       ; preds = %sw.bb3970
  %code3977 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2
  %bf.load3978 = load i32* %code3977, align 8
  %bf.clear3979 = and i32 %bf.load3978, 255
  switch i32 %bf.clear3979, label %associate [
    i32 6, label %land.lhs.true4003
    i32 10, label %land.lhs.true4003
    i32 11, label %land.lhs.true4003
    i32 12, label %land.lhs.true4003
  ]

land.lhs.true4003:                                ; preds = %if.end3975, %if.end3975, %if.end3975, %if.end3975
  %395 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 13
  %396 = load %union.tree_node** %395, align 8, !tbaa !26
  %tobool4005 = icmp eq %union.tree_node* %396, null
  br i1 %tobool4005, label %associate, label %land.lhs.true4006

land.lhs.true4006:                                ; preds = %land.lhs.true4003
  %call4009 = call i32 @operand_equal_p(%union.tree_node* %arg1.3, %union.tree_node* %396, i32 1)
  %tobool4010 = icmp eq i32 %call4009, 0
  br i1 %tobool4010, label %associate, label %if.then4011

if.then4011:                                      ; preds = %land.lhs.true4006
  %call.i10609 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %arg1.3) #1
  %side_effects_flag.i10610 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 0, i32 2
  %bf.load.i10611 = load i32* %side_effects_flag.i10610, align 8
  %bf.clear.i10612 = and i32 %bf.load.i10611, 256
  %tobool.i10613 = icmp eq i32 %bf.clear.i10612, 0
  br i1 %tobool.i10613, label %if.end.i10619, label %if.then.i10615

if.then.i10615:                                   ; preds = %if.then4011
  %call1.i10614 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 47, %union.tree_node* %0, %union.tree_node* %arg0.5, %union.tree_node* %call.i10609) #1
  br label %return

if.end.i10619:                                    ; preds = %if.then4011
  %code.i.i10616 = getelementptr inbounds %union.tree_node* %call.i10609, i64 0, i32 0, i32 0, i32 2
  %bf.load.i.i10617 = load i32* %code.i.i10616, align 8
  %bf.clear.i.i10618 = and i32 %bf.load.i.i10617, 255
  switch i32 %bf.clear.i.i10618, label %if.end.i.i10628 [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i.i10628:                                  ; preds = %if.end.i10619
  %type.i.i10620 = getelementptr inbounds %union.tree_node* %call.i10609, i64 0, i32 0, i32 0, i32 1
  %397 = load %union.tree_node** %type.i.i10620, align 8, !tbaa !11
  %call.i.i10621 = call %union.tree_node* @build1(i32 116, %union.tree_node* %397, %union.tree_node* %call.i10609) #1
  %bf.load26.i.i10622 = load i32* %code.i.i10616, align 8
  %bf.clear27.i.i10623 = and i32 %bf.load26.i.i10622, 512
  %constant_flag29.i.i10624 = getelementptr inbounds %union.tree_node* %call.i.i10621, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i.i10625 = load i32* %constant_flag29.i.i10624, align 8
  %bf.clear31.i.i10626 = and i32 %bf.load30.i.i10625, -513
  %bf.set.i.i10627 = or i32 %bf.clear31.i.i10626, %bf.clear27.i.i10623
  store i32 %bf.set.i.i10627, i32* %constant_flag29.i.i10624, align 8
  br label %return

sw.bb4014:                                        ; preds = %if.end901
  %call4015 = call %union.tree_node* @invert_truthvalue(%union.tree_node* %arg0.5)
  %code4017 = getelementptr inbounds %union.tree_node* %call4015, i64 0, i32 0, i32 0, i32 2
  %bf.load4018 = load i32* %code4017, align 8
  %bf.clear4019 = and i32 %bf.load4018, 255
  %cmp4020 = icmp eq i32 %bf.clear4019, 96
  br i1 %cmp4020, label %return, label %if.end4023

if.end4023:                                       ; preds = %sw.bb4014
  %call4024 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %call4015) #1
  br label %return

sw.bb4025:                                        ; preds = %if.end901
  %call4026 = call i32 @integer_zerop(%union.tree_node* %arg0.5) #1
  %tobool4027 = icmp eq i32 %call4026, 0
  br i1 %tobool4027, label %sw.bb4031, label %if.then4028

if.then4028:                                      ; preds = %sw.bb4025
  %call4029 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %arg0.5) #1
  br label %return

sw.bb4031:                                        ; preds = %sw.bb4025, %if.end901
  %code4033 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 0, i32 2
  %bf.load4034 = load i32* %code4033, align 8
  %bf.clear4035 = and i32 %bf.load4034, 255
  %cmp4036 = icmp eq i32 %bf.clear4035, 25
  br i1 %cmp4036, label %land.lhs.true4038, label %if.end4044

land.lhs.true4038:                                ; preds = %sw.bb4031
  %call4039 = call i32 @integer_zerop(%union.tree_node* %arg0.5) #1
  %tobool4040 = icmp eq i32 %call4039, 0
  br i1 %tobool4040, label %if.then4041, label %if.end4044

if.then4041:                                      ; preds = %land.lhs.true4038
  %call4042 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %arg1.3) #1
  %code.i10595 = getelementptr inbounds %union.tree_node* %call4042, i64 0, i32 0, i32 0, i32 2
  %bf.load.i10596 = load i32* %code.i10595, align 8
  %bf.clear.i10597 = and i32 %bf.load.i10596, 255
  switch i32 %bf.clear.i10597, label %if.end.i10606 [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i10606:                                    ; preds = %if.then4041
  %type.i10598 = getelementptr inbounds %union.tree_node* %call4042, i64 0, i32 0, i32 0, i32 1
  %398 = load %union.tree_node** %type.i10598, align 8, !tbaa !11
  %call.i10599 = call %union.tree_node* @build1(i32 116, %union.tree_node* %398, %union.tree_node* %call4042) #1
  %bf.load26.i10600 = load i32* %code.i10595, align 8
  %bf.clear27.i10601 = and i32 %bf.load26.i10600, 512
  %constant_flag29.i10602 = getelementptr inbounds %union.tree_node* %call.i10599, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i10603 = load i32* %constant_flag29.i10602, align 8
  %bf.clear31.i10604 = and i32 %bf.load30.i10603, -513
  %bf.set.i10605 = or i32 %bf.clear31.i10604, %bf.clear27.i10601
  store i32 %bf.set.i10605, i32* %constant_flag29.i10602, align 8
  br label %return

if.end4044:                                       ; preds = %land.lhs.true4038, %sw.bb4031
  %code4046 = getelementptr inbounds %union.tree_node* %arg1.3, i64 0, i32 0, i32 0, i32 2
  %bf.load4047 = load i32* %code4046, align 8
  %bf.clear4048 = and i32 %bf.load4047, 255
  %cmp4049 = icmp eq i32 %bf.clear4048, 25
  br i1 %cmp4049, label %land.lhs.true4051, label %if.end4067

land.lhs.true4051:                                ; preds = %if.end4044
  %call4052 = call i32 @integer_zerop(%union.tree_node* %arg1.3) #1
  %tobool4053 = icmp eq i32 %call4052, 0
  br i1 %tobool4053, label %land.lhs.true4054, label %if.end4067

land.lhs.true4054:                                ; preds = %land.lhs.true4051
  %cmp4055 = icmp eq i32 %bf.clear, 91
  br i1 %cmp4055, label %lor.lhs.false4057, label %if.then4064

lor.lhs.false4057:                                ; preds = %land.lhs.true4054
  %bf.load4060 = load i32* %code4033, align 8
  %bf.clear4062 = and i32 %bf.load4060, 256
  %tobool4063 = icmp eq i32 %bf.clear4062, 0
  br i1 %tobool4063, label %if.then4064, label %if.end4067

if.then4064:                                      ; preds = %lor.lhs.false4057, %land.lhs.true4054
  %call4065 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %arg0.5) #1
  %code.i10581 = getelementptr inbounds %union.tree_node* %call4065, i64 0, i32 0, i32 0, i32 2
  %bf.load.i10582 = load i32* %code.i10581, align 8
  %bf.clear.i10583 = and i32 %bf.load.i10582, 255
  switch i32 %bf.clear.i10583, label %if.end.i10592 [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i10592:                                    ; preds = %if.then4064
  %type.i10584 = getelementptr inbounds %union.tree_node* %call4065, i64 0, i32 0, i32 0, i32 1
  %399 = load %union.tree_node** %type.i10584, align 8, !tbaa !11
  %call.i10585 = call %union.tree_node* @build1(i32 116, %union.tree_node* %399, %union.tree_node* %call4065) #1
  %bf.load26.i10586 = load i32* %code.i10581, align 8
  %bf.clear27.i10587 = and i32 %bf.load26.i10586, 512
  %constant_flag29.i10588 = getelementptr inbounds %union.tree_node* %call.i10585, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i10589 = load i32* %constant_flag29.i10588, align 8
  %bf.clear31.i10590 = and i32 %bf.load30.i10589, -513
  %bf.set.i10591 = or i32 %bf.clear31.i10590, %bf.clear27.i10587
  store i32 %bf.set.i10591, i32* %constant_flag29.i10588, align 8
  br label %return

if.end4067:                                       ; preds = %lor.lhs.false4057, %land.lhs.true4051, %if.end4044
  %call4068 = call i32 @integer_zerop(%union.tree_node* %arg1.3) #1
  %tobool4069 = icmp eq i32 %call4068, 0
  br i1 %tobool4069, label %if.end4072, label %if.then4070

if.then4070:                                      ; preds = %if.end4067
  %call.i10559 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %arg1.3) #1
  %bf.load.i10561 = load i32* %code4033, align 8
  %bf.clear.i10562 = and i32 %bf.load.i10561, 256
  %tobool.i10563 = icmp eq i32 %bf.clear.i10562, 0
  br i1 %tobool.i10563, label %if.end.i10569, label %if.then.i10565

if.then.i10565:                                   ; preds = %if.then4070
  %call1.i10564 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 47, %union.tree_node* %0, %union.tree_node* %arg0.5, %union.tree_node* %call.i10559) #1
  br label %return

if.end.i10569:                                    ; preds = %if.then4070
  %code.i.i10566 = getelementptr inbounds %union.tree_node* %call.i10559, i64 0, i32 0, i32 0, i32 2
  %bf.load.i.i10567 = load i32* %code.i.i10566, align 8
  %bf.clear.i.i10568 = and i32 %bf.load.i.i10567, 255
  switch i32 %bf.clear.i.i10568, label %if.end.i.i10578 [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i.i10578:                                  ; preds = %if.end.i10569
  %type.i.i10570 = getelementptr inbounds %union.tree_node* %call.i10559, i64 0, i32 0, i32 0, i32 1
  %400 = load %union.tree_node** %type.i.i10570, align 8, !tbaa !11
  %call.i.i10571 = call %union.tree_node* @build1(i32 116, %union.tree_node* %400, %union.tree_node* %call.i10559) #1
  %bf.load26.i.i10572 = load i32* %code.i.i10566, align 8
  %bf.clear27.i.i10573 = and i32 %bf.load26.i.i10572, 512
  %constant_flag29.i.i10574 = getelementptr inbounds %union.tree_node* %call.i.i10571, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i.i10575 = load i32* %constant_flag29.i.i10574, align 8
  %bf.clear31.i.i10576 = and i32 %bf.load30.i.i10575, -513
  %bf.set.i.i10577 = or i32 %bf.clear31.i.i10576, %bf.clear27.i.i10573
  store i32 %bf.set.i.i10577, i32* %constant_flag29.i.i10574, align 8
  br label %return

if.end4072:                                       ; preds = %if.end4067
  %call4073 = call i32 @integer_zerop(%union.tree_node* %arg0.5) #1
  %tobool4074 = icmp eq i32 %call4073, 0
  br i1 %tobool4074, label %truth_andor, label %if.then4075

if.then4075:                                      ; preds = %if.end4072
  %call.i10537 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %arg0.5) #1
  %bf.load.i10539 = load i32* %code4046, align 8
  %bf.clear.i10540 = and i32 %bf.load.i10539, 256
  %tobool.i10541 = icmp eq i32 %bf.clear.i10540, 0
  br i1 %tobool.i10541, label %if.end.i10547, label %if.then.i10543

if.then.i10543:                                   ; preds = %if.then4075
  %call1.i10542 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 47, %union.tree_node* %0, %union.tree_node* %arg1.3, %union.tree_node* %call.i10537) #1
  br label %return

if.end.i10547:                                    ; preds = %if.then4075
  %code.i.i10544 = getelementptr inbounds %union.tree_node* %call.i10537, i64 0, i32 0, i32 0, i32 2
  %bf.load.i.i10545 = load i32* %code.i.i10544, align 8
  %bf.clear.i.i10546 = and i32 %bf.load.i.i10545, 255
  switch i32 %bf.clear.i.i10546, label %if.end.i.i10556 [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i.i10556:                                  ; preds = %if.end.i10547
  %type.i.i10548 = getelementptr inbounds %union.tree_node* %call.i10537, i64 0, i32 0, i32 0, i32 1
  %401 = load %union.tree_node** %type.i.i10548, align 8, !tbaa !11
  %call.i.i10549 = call %union.tree_node* @build1(i32 116, %union.tree_node* %401, %union.tree_node* %call.i10537) #1
  %bf.load26.i.i10550 = load i32* %code.i.i10544, align 8
  %bf.clear27.i.i10551 = and i32 %bf.load26.i.i10550, 512
  %constant_flag29.i.i10552 = getelementptr inbounds %union.tree_node* %call.i.i10549, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i.i10553 = load i32* %constant_flag29.i.i10552, align 8
  %bf.clear31.i.i10554 = and i32 %bf.load30.i.i10553, -513
  %bf.set.i.i10555 = or i32 %bf.clear31.i.i10554, %bf.clear27.i.i10551
  store i32 %bf.set.i.i10555, i32* %constant_flag29.i.i10552, align 8
  br label %return

truth_andor:                                      ; preds = %if.end4072, %land.lhs.true4333, %if.end4326
  %402 = load i32* @optimize, align 4, !tbaa !12
  %tobool4078 = icmp eq i32 %402, 0
  br i1 %tobool4078, label %return, label %if.end4080

if.end4080:                                       ; preds = %truth_andor
  %code4082 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 0, i32 2
  %bf.load4083 = load i32* %code4082, align 8
  %bf.clear4084 = and i32 %bf.load4083, 255
  %code4086 = getelementptr inbounds %union.tree_node* %arg1.3, i64 0, i32 0, i32 0, i32 2
  %bf.load4087 = load i32* %code4086, align 8
  %bf.clear4088 = and i32 %bf.load4087, 255
  %cmp4089 = icmp eq i32 %bf.clear4084, %bf.clear4088
  %bf.clear4084.off = add i32 %bf.clear4084, -91
  %switch9794 = icmp ult i32 %bf.clear4084.off, 4
  %or.cond9796 = and i1 %cmp4089, %switch9794
  br i1 %or.cond9796, label %land.lhs.true4119, label %if.end4234

land.lhs.true4119:                                ; preds = %if.end4080
  %operands4121 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 2
  %arrayidx4122 = getelementptr inbounds i32* %operands4121, i64 2
  %403 = bitcast i32* %arrayidx4122 to %union.tree_node**
  %404 = load %union.tree_node** %403, align 8, !tbaa !14
  %side_effects_flag4124 = getelementptr inbounds %union.tree_node* %404, i64 0, i32 0, i32 0, i32 2
  %bf.load4125 = load i32* %side_effects_flag4124, align 8
  %bf.clear4127 = and i32 %bf.load4125, 256
  %tobool4128 = icmp eq i32 %bf.clear4127, 0
  br i1 %tobool4128, label %if.then4129, label %if.end4234

if.then4129:                                      ; preds = %land.lhs.true4119
  %arrayidx4133 = bitcast i32* %operands4121 to %union.tree_node**
  %405 = load %union.tree_node** %arrayidx4133, align 8, !tbaa !14
  %operands4140 = getelementptr inbounds %union.tree_node* %arg1.3, i64 0, i32 0, i32 2
  %arrayidx4141 = bitcast i32* %operands4140 to %union.tree_node**
  %406 = load %union.tree_node** %arrayidx4141, align 8, !tbaa !14
  %arrayidx4145 = getelementptr inbounds i32* %operands4140, i64 2
  %407 = bitcast i32* %arrayidx4145 to %union.tree_node**
  %408 = load %union.tree_node** %407, align 8, !tbaa !14
  %bf.clear4150.off = add i32 %bf.clear4084, -93
  %switch9797 = icmp ult i32 %bf.clear4150.off, 2
  br i1 %switch9797, label %land.rhs4160, label %land.end4168

land.rhs4160:                                     ; preds = %if.then4129
  %bf.clear.off11212 = add i32 %bf.clear, -93
  %409 = icmp ult i32 %bf.clear.off11212, 2
  br label %land.end4168

land.end4168:                                     ; preds = %land.rhs4160, %if.then4129
  %410 = phi i1 [ false, %if.then4129 ], [ %409, %land.rhs4160 ]
  %call4170 = call i32 @operand_equal_p(%union.tree_node* %405, %union.tree_node* %406, i32 0)
  %tobool4171 = icmp eq i32 %call4170, 0
  br i1 %tobool4171, label %if.else4181, label %if.then4172

if.then4172:                                      ; preds = %land.end4168
  %bf.load4175 = load i32* %code4082, align 8
  %bf.clear4176 = and i32 %bf.load4175, 255
  %call4177 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %bf.clear, %union.tree_node* %0, %union.tree_node* %404, %union.tree_node* %408) #1
  %call4178 = call %union.tree_node* @fold(%union.tree_node* %call4177)
  %call4179 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %bf.clear4176, %union.tree_node* %0, %union.tree_node* %405, %union.tree_node* %call4178) #1
  %call4180 = call %union.tree_node* @fold(%union.tree_node* %call4179)
  br label %return

if.else4181:                                      ; preds = %land.end4168
  br i1 %410, label %land.lhs.true4183, label %lor.lhs.false4211

land.lhs.true4183:                                ; preds = %if.else4181
  %call4184 = call i32 @operand_equal_p(%union.tree_node* %405, %union.tree_node* %408, i32 0)
  %tobool4185 = icmp eq i32 %call4184, 0
  br i1 %tobool4185, label %land.lhs.true4197, label %if.then4186

if.then4186:                                      ; preds = %land.lhs.true4183
  %bf.load4189 = load i32* %code4082, align 8
  %bf.clear4190 = and i32 %bf.load4189, 255
  %call4191 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %bf.clear, %union.tree_node* %0, %union.tree_node* %404, %union.tree_node* %406) #1
  %call4192 = call %union.tree_node* @fold(%union.tree_node* %call4191)
  %call4193 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %bf.clear4190, %union.tree_node* %0, %union.tree_node* %405, %union.tree_node* %call4192) #1
  %call4194 = call %union.tree_node* @fold(%union.tree_node* %call4193)
  br label %return

land.lhs.true4197:                                ; preds = %land.lhs.true4183
  %call4198 = call i32 @operand_equal_p(%union.tree_node* %404, %union.tree_node* %406, i32 0)
  %tobool4199 = icmp eq i32 %call4198, 0
  br i1 %tobool4199, label %land.lhs.true4218, label %if.then4200

if.then4200:                                      ; preds = %land.lhs.true4197
  %bf.load4203 = load i32* %code4082, align 8
  %bf.clear4204 = and i32 %bf.load4203, 255
  %call4205 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %bf.clear, %union.tree_node* %0, %union.tree_node* %405, %union.tree_node* %408) #1
  %call4206 = call %union.tree_node* @fold(%union.tree_node* %call4205)
  %call4207 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %bf.clear4204, %union.tree_node* %0, %union.tree_node* %404, %union.tree_node* %call4206) #1
  %call4208 = call %union.tree_node* @fold(%union.tree_node* %call4207)
  br label %return

lor.lhs.false4211:                                ; preds = %if.else4181
  %side_effects_flag4213 = getelementptr inbounds %union.tree_node* %406, i64 0, i32 0, i32 0, i32 2
  %bf.load4214 = load i32* %side_effects_flag4213, align 8
  %bf.clear4216 = and i32 %bf.load4214, 256
  %tobool4217 = icmp eq i32 %bf.clear4216, 0
  br i1 %tobool4217, label %land.lhs.true4218, label %if.end4234

land.lhs.true4218:                                ; preds = %land.lhs.true4197, %lor.lhs.false4211
  %call4219 = call i32 @operand_equal_p(%union.tree_node* %404, %union.tree_node* %408, i32 0)
  %tobool4220 = icmp eq i32 %call4219, 0
  br i1 %tobool4220, label %if.end4234, label %if.then4221

if.then4221:                                      ; preds = %land.lhs.true4218
  %bf.load4224 = load i32* %code4082, align 8
  %bf.clear4225 = and i32 %bf.load4224, 255
  %call4226 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %bf.clear, %union.tree_node* %0, %union.tree_node* %405, %union.tree_node* %406) #1
  %call4227 = call %union.tree_node* @fold(%union.tree_node* %call4226)
  %call4228 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %bf.clear4225, %union.tree_node* %0, %union.tree_node* %call4227, %union.tree_node* %404) #1
  %call4229 = call %union.tree_node* @fold(%union.tree_node* %call4228)
  br label %return

if.end4234:                                       ; preds = %land.lhs.true4218, %lor.lhs.false4211, %land.lhs.true4119, %if.end4080
  %411 = bitcast i32* %in0_p.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %411) #1
  %412 = bitcast i32* %in1_p.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %412) #1
  %413 = bitcast i32* %in_p.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %413) #1
  %414 = bitcast %union.tree_node** %low0.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %414) #1
  %415 = bitcast %union.tree_node** %low1.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %415) #1
  %416 = bitcast %union.tree_node** %low.i11098 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %416) #1
  %417 = bitcast %union.tree_node** %high0.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %417) #1
  %418 = bitcast %union.tree_node** %high1.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %418) #1
  %419 = bitcast %union.tree_node** %high.i11099 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %419) #1
  %bf.load.i11101 = load i32* %code3, align 8
  %420 = and i32 %bf.load.i11101, 253
  %421 = icmp eq i32 %420, 92
  %operands.i = getelementptr inbounds %union.tree_node* %expr, i64 0, i32 0, i32 2
  %arrayidx.i11105 = bitcast i32* %operands.i to %union.tree_node**
  %422 = load %union.tree_node** %arrayidx.i11105, align 8, !tbaa !14
  %call.i11106 = call fastcc %union.tree_node* @make_range(%union.tree_node* %422, i32* %in0_p.i, %union.tree_node** %low0.i, %union.tree_node** %high0.i) #1
  %arrayidx9.i = getelementptr inbounds i32* %operands.i, i64 2
  %423 = bitcast i32* %arrayidx9.i to %union.tree_node**
  %424 = load %union.tree_node** %423, align 8, !tbaa !14
  %call10.i = call fastcc %union.tree_node* @make_range(%union.tree_node* %424, i32* %in1_p.i, %union.tree_node** %low1.i, %union.tree_node** %high1.i) #1
  br i1 %421, label %if.then.i11107, label %if.end.i11110

if.then.i11107:                                   ; preds = %if.end4234
  %425 = load i32* %in0_p.i, align 4, !tbaa !12
  %lnot.i = icmp eq i32 %425, 0
  %lnot.ext.i = zext i1 %lnot.i to i32
  store i32 %lnot.ext.i, i32* %in0_p.i, align 4, !tbaa !12
  %426 = load i32* %in1_p.i, align 4, !tbaa !12
  %lnot13.i = icmp eq i32 %426, 0
  %lnot.ext14.i = zext i1 %lnot13.i to i32
  store i32 %lnot.ext14.i, i32* %in1_p.i, align 4, !tbaa !12
  br label %if.end.i11110

if.end.i11110:                                    ; preds = %if.then.i11107, %if.end4234
  %cmp15.i = icmp eq %union.tree_node* %call.i11106, null
  %cmp16.i11108 = icmp eq %union.tree_node* %call10.i, null
  %or.cond.i11109 = or i1 %cmp15.i, %cmp16.i11108
  br i1 %or.cond.i11109, label %land.lhs.true.i, label %lor.lhs.false17.i

lor.lhs.false17.i:                                ; preds = %if.end.i11110
  %call18.i = call i32 @operand_equal_p(%union.tree_node* %call.i11106, %union.tree_node* %call10.i, i32 0) #1
  %tobool19.i = icmp eq i32 %call18.i, 0
  br i1 %tobool19.i, label %if.else.i11113, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %lor.lhs.false17.i, %if.end.i11110
  %427 = load i32* %in0_p.i, align 4, !tbaa !12
  %428 = load %union.tree_node** %low0.i, align 8, !tbaa !14
  %429 = load %union.tree_node** %high0.i, align 8, !tbaa !14
  %430 = load i32* %in1_p.i, align 4, !tbaa !12
  %431 = load %union.tree_node** %low1.i, align 8, !tbaa !14
  %432 = load %union.tree_node** %high1.i, align 8, !tbaa !14
  %call20.i = call fastcc i32 @merge_ranges(i32* %in_p.i, %union.tree_node** %low.i11098, %union.tree_node** %high.i11099, i32 %427, %union.tree_node* %428, %union.tree_node* %429, i32 %430, %union.tree_node* %431, %union.tree_node* %432) #1
  %tobool21.i = icmp eq i32 %call20.i, 0
  br i1 %tobool21.i, label %if.else.i11113, label %land.lhs.true22.i

land.lhs.true22.i:                                ; preds = %land.lhs.true.i
  %433 = load %union.tree_node** %type1, align 8, !tbaa !11
  br i1 %cmp15.i, label %cond.false.i, label %cond.end28.i

cond.false.i:                                     ; preds = %land.lhs.true22.i
  %cmp25.i = icmp ne %union.tree_node* %call10.i, null
  %434 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8, !tbaa !14
  %cond.i = select i1 %cmp25.i, %union.tree_node* %call10.i, %union.tree_node* %434
  br label %cond.end28.i

cond.end28.i:                                     ; preds = %cond.false.i, %land.lhs.true22.i
  %cond29.i = phi %union.tree_node* [ %cond.i, %cond.false.i ], [ %call.i11106, %land.lhs.true22.i ]
  %435 = load i32* %in_p.i, align 4, !tbaa !12
  %436 = load %union.tree_node** %low.i11098, align 8, !tbaa !14
  %437 = load %union.tree_node** %high.i11099, align 8, !tbaa !14
  %call30.i = call fastcc %union.tree_node* @build_range_check(%union.tree_node* %433, %union.tree_node* %cond29.i, i32 %435, %union.tree_node* %436, %union.tree_node* %437) #1
  %cmp31.i = icmp eq %union.tree_node* %call30.i, null
  br i1 %cmp31.i, label %if.else.i11113, label %if.then32.i

if.then32.i:                                      ; preds = %cond.end28.i
  br i1 %421, label %cond.true34.i, label %fold_range_test.exit

cond.true34.i:                                    ; preds = %if.then32.i
  %call35.i = call %union.tree_node* @invert_truthvalue(%union.tree_node* %call30.i) #1
  br label %fold_range_test.exit

if.else.i11113:                                   ; preds = %cond.end28.i, %land.lhs.true.i, %lor.lhs.false17.i
  %438 = load i32* @ix86_branch_cost, align 4, !tbaa !12
  %cmp39.i = icmp sgt i32 %438, 1
  %cmp41.i11112 = icmp ne %union.tree_node* %call.i11106, null
  %or.cond127.i = and i1 %cmp39.i, %cmp41.i11112
  %cmp43.i = icmp ne %union.tree_node* %call10.i, null
  %or.cond128.i = and i1 %or.cond127.i, %cmp43.i
  br i1 %or.cond128.i, label %land.lhs.true44.i, label %fold_range_test.exit

land.lhs.true44.i:                                ; preds = %if.else.i11113
  %bf.load47.i = load i32* %code3, align 8
  %bf.clear48.i = and i32 %bf.load47.i, 255
  %bf.clear48.off.i = add i32 %bf.clear48.i, -91
  %switch.i = icmp ult i32 %bf.clear48.off.i, 2
  br i1 %switch.i, label %land.lhs.true56.i, label %fold_range_test.exit

land.lhs.true56.i:                                ; preds = %land.lhs.true44.i
  %call57.i = call i32 @operand_equal_p(%union.tree_node* %call.i11106, %union.tree_node* %call10.i, i32 0) #1
  %tobool58.i = icmp eq i32 %call57.i, 0
  br i1 %tobool58.i, label %fold_range_test.exit, label %while.cond.i.i

while.cond.i.i:                                   ; preds = %land.lhs.true56.i, %land.rhs.i.i
  %exp.addr.0.i.i = phi %union.tree_node* [ %441, %land.rhs.i.i ], [ %call.i11106, %land.lhs.true56.i ]
  %code.i.i11115 = getelementptr inbounds %union.tree_node* %exp.addr.0.i.i, i64 0, i32 0, i32 0, i32 2
  %bf.load.i.i11116 = load i32* %code.i.i11115, align 8
  %439 = and i32 %bf.load.i.i11116, 254
  %switch.i.i = icmp eq i32 %439, 114
  br i1 %switch.i.i, label %land.rhs.i.i, label %while.end.i.i

land.rhs.i.i:                                     ; preds = %while.cond.i.i
  %type.i.i11117 = getelementptr inbounds %union.tree_node* %exp.addr.0.i.i, i64 0, i32 0, i32 0, i32 1
  %440 = load %union.tree_node** %type.i.i11117, align 8, !tbaa !11
  %type7.i.i = bitcast %union.tree_node* %440 to %struct.tree_type*
  %mode.i.i = getelementptr inbounds %struct.tree_type* %type7.i.i, i64 0, i32 6
  %bf.load8.i.i = load i32* %mode.i.i, align 4
  %operands.i.i = getelementptr inbounds %union.tree_node* %exp.addr.0.i.i, i64 0, i32 0, i32 2
  %arrayidx.i.i = bitcast i32* %operands.i.i to %union.tree_node**
  %441 = load %union.tree_node** %arrayidx.i.i, align 8, !tbaa !14
  %type12.i.i = getelementptr inbounds %union.tree_node* %441, i64 0, i32 0, i32 0, i32 1
  %442 = load %union.tree_node** %type12.i.i, align 8, !tbaa !11
  %type13.i.i = bitcast %union.tree_node* %442 to %struct.tree_type*
  %mode14.i.i = getelementptr inbounds %struct.tree_type* %type13.i.i, i64 0, i32 6
  %bf.load15.i.i = load i32* %mode14.i.i, align 4
  %bf.lshr94.i.i = xor i32 %bf.load15.i.i, %bf.load8.i.i
  %443 = and i32 %bf.lshr94.i.i, 65024
  %cmp18.i.i = icmp eq i32 %443, 0
  br i1 %cmp18.i.i, label %while.cond.i.i, label %while.end.i.i

while.end.i.i:                                    ; preds = %land.rhs.i.i, %while.cond.i.i
  %bf.clear25.i.i = and i32 %bf.load.i.i11116, 255
  %idxprom93.i.i = zext i32 %bf.clear25.i.i to i64
  %arrayidx26.i.i = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom93.i.i
  %444 = load i8* %arrayidx26.i.i, align 1, !tbaa !15
  %cmp27.i.i = icmp eq i8 %444, 99
  br i1 %cmp27.i.i, label %if.then62.i, label %lor.rhs.i.i

lor.rhs.i.i:                                      ; preds = %while.end.i.i
  %cmp36.i.i = icmp eq i8 %444, 100
  %bf.clear41.i.i = and i32 %bf.load.i.i11116, 1024
  %tobool.i.i11118 = icmp eq i32 %bf.clear41.i.i, 0
  %or.cond.i.i = and i1 %cmp36.i.i, %tobool.i.i11118
  %bf.clear46.i.i = and i32 %bf.load.i.i11116, 2048
  %tobool47.i.i = icmp eq i32 %bf.clear46.i.i, 0
  %or.cond95.i.i = and i1 %or.cond.i.i, %tobool47.i.i
  br i1 %or.cond95.i.i, label %land.lhs.true48.i.i, label %if.else78.i

land.lhs.true48.i.i:                              ; preds = %lor.rhs.i.i
  %nonlocal_flag.i.i = getelementptr inbounds %union.tree_node* %exp.addr.0.i.i, i64 0, i32 0, i32 5
  %445 = bitcast i48* %nonlocal_flag.i.i to i64*
  %bf.load49.i.i = load i64* %445, align 8
  %bf.cast.i.i = and i64 %bf.load49.i.i, 512
  %tobool52.i.i = icmp eq i64 %bf.cast.i.i, 0
  %bf.clear57.i.i = and i32 %bf.load.i.i11116, 524288
  %tobool58.i.i = icmp eq i32 %bf.clear57.i.i, 0
  %or.cond96.i.i = and i1 %tobool52.i.i, %tobool58.i.i
  %bf.cast64.i.i = and i64 %bf.load49.i.i, 256
  %tobool65.i.i = icmp eq i64 %bf.cast64.i.i, 0
  %or.cond97.i.i = and i1 %or.cond96.i.i, %tobool65.i.i
  br i1 %or.cond97.i.i, label %land.rhs66.i.i, label %if.else78.i

land.rhs66.i.i:                                   ; preds = %land.lhs.true48.i.i
  %bf.clear70.i.i = and i32 %bf.load.i.i11116, 262144
  %tobool71.i.i = icmp eq i32 %bf.clear70.i.i, 0
  %bf.cast77.i.i = and i64 %bf.load49.i.i, 1024
  %tobool78.i.i = icmp ne i64 %bf.cast77.i.i, 0
  %or.cond11216 = or i1 %tobool71.i.i, %tobool78.i.i
  br i1 %or.cond11216, label %if.then62.i, label %if.else78.i

if.then62.i:                                      ; preds = %land.rhs66.i.i, %while.end.i.i
  %bf.load65.i = load i32* %code3, align 8
  %bf.clear66.i = and i32 %bf.load65.i, 255
  %cmp67.i = icmp eq i32 %bf.clear66.i, 91
  %cond68.i = select i1 %cmp67.i, i32 93, i32 94
  %446 = load %union.tree_node** %type1, align 8, !tbaa !11
  %447 = load %union.tree_node** %arrayidx.i11105, align 8, !tbaa !14
  %448 = load %union.tree_node** %423, align 8, !tbaa !14
  %call77.i = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %cond68.i, %union.tree_node* %446, %union.tree_node* %447, %union.tree_node* %448) #1
  br label %fold_range_test.exit

if.else78.i:                                      ; preds = %land.rhs66.i.i, %lor.rhs.i.i, %land.lhs.true48.i.i
  %call79.i = call i32 @global_bindings_p() #1
  %cmp80.i = icmp eq i32 %call79.i, 0
  br i1 %cmp80.i, label %land.lhs.true81.i, label %fold_range_test.exit

land.lhs.true81.i:                                ; preds = %if.else78.i
  %call82.i = call i32 @contains_placeholder_p(%union.tree_node* %call.i11106) #1
  %tobool83.i = icmp eq i32 %call82.i, 0
  br i1 %tobool83.i, label %if.then84.i, label %fold_range_test.exit

if.then84.i:                                      ; preds = %land.lhs.true81.i
  %call86.i = call %union.tree_node* @save_expr(%union.tree_node* %call.i11106) #1
  %449 = load %union.tree_node** %type1, align 8, !tbaa !11
  %450 = load i32* %in0_p.i, align 4, !tbaa !12
  br i1 %421, label %cond.true90.i, label %cond.end95.i

cond.true90.i:                                    ; preds = %if.then84.i
  %lnot92.i = icmp eq i32 %450, 0
  %lnot.ext93.i = zext i1 %lnot92.i to i32
  br label %cond.end95.i

cond.end95.i:                                     ; preds = %cond.true90.i, %if.then84.i
  %cond96.i = phi i32 [ %lnot.ext93.i, %cond.true90.i ], [ %450, %if.then84.i ]
  %451 = load %union.tree_node** %low0.i, align 8, !tbaa !14
  %452 = load %union.tree_node** %high0.i, align 8, !tbaa !14
  %call97.i = call fastcc %union.tree_node* @build_range_check(%union.tree_node* %449, %union.tree_node* %call86.i, i32 %cond96.i, %union.tree_node* %451, %union.tree_node* %452) #1
  %cmp98.i = icmp eq %union.tree_node* %call97.i, null
  br i1 %cmp98.i, label %fold_range_test.exit, label %land.lhs.true99.i

land.lhs.true99.i:                                ; preds = %cond.end95.i
  %453 = load %union.tree_node** %type1, align 8, !tbaa !11
  %454 = load i32* %in1_p.i, align 4, !tbaa !12
  br i1 %421, label %cond.true103.i, label %cond.end108.i

cond.true103.i:                                   ; preds = %land.lhs.true99.i
  %lnot105.i = icmp eq i32 %454, 0
  %lnot.ext106.i = zext i1 %lnot105.i to i32
  br label %cond.end108.i

cond.end108.i:                                    ; preds = %cond.true103.i, %land.lhs.true99.i
  %cond109.i = phi i32 [ %lnot.ext106.i, %cond.true103.i ], [ %454, %land.lhs.true99.i ]
  %455 = load %union.tree_node** %low1.i, align 8, !tbaa !14
  %456 = load %union.tree_node** %high1.i, align 8, !tbaa !14
  %call110.i = call fastcc %union.tree_node* @build_range_check(%union.tree_node* %453, %union.tree_node* %call86.i, i32 %cond109.i, %union.tree_node* %455, %union.tree_node* %456) #1
  %cmp111.i = icmp eq %union.tree_node* %call110.i, null
  br i1 %cmp111.i, label %fold_range_test.exit, label %if.then112.i

if.then112.i:                                     ; preds = %cond.end108.i
  %bf.load115.i = load i32* %code3, align 8
  %bf.clear116.i = and i32 %bf.load115.i, 255
  %cmp117.i = icmp eq i32 %bf.clear116.i, 91
  %cond118.i = select i1 %cmp117.i, i32 93, i32 94
  %457 = load %union.tree_node** %type1, align 8, !tbaa !11
  %call121.i = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %cond118.i, %union.tree_node* %457, %union.tree_node* %call97.i, %union.tree_node* %call110.i) #1
  br label %fold_range_test.exit

fold_range_test.exit:                             ; preds = %if.then32.i, %cond.true34.i, %if.else.i11113, %land.lhs.true44.i, %land.lhs.true56.i, %if.then62.i, %if.else78.i, %land.lhs.true81.i, %cond.end95.i, %cond.end108.i, %if.then112.i
  %retval.0.i11120 = phi %union.tree_node* [ %call77.i, %if.then62.i ], [ %call121.i, %if.then112.i ], [ %call35.i, %cond.true34.i ], [ %call30.i, %if.then32.i ], [ null, %land.lhs.true44.i ], [ null, %cond.end108.i ], [ null, %cond.end95.i ], [ null, %land.lhs.true81.i ], [ null, %land.lhs.true56.i ], [ null, %if.else.i11113 ], [ null, %if.else78.i ]
  call void @llvm.lifetime.end(i64 4, i8* %411) #1
  call void @llvm.lifetime.end(i64 4, i8* %412) #1
  call void @llvm.lifetime.end(i64 4, i8* %413) #1
  call void @llvm.lifetime.end(i64 8, i8* %414) #1
  call void @llvm.lifetime.end(i64 8, i8* %415) #1
  call void @llvm.lifetime.end(i64 8, i8* %416) #1
  call void @llvm.lifetime.end(i64 8, i8* %417) #1
  call void @llvm.lifetime.end(i64 8, i8* %418) #1
  call void @llvm.lifetime.end(i64 8, i8* %419) #1
  %cmp4236 = icmp eq %union.tree_node* %retval.0.i11120, null
  br i1 %cmp4236, label %if.end4239, label %return

if.end4239:                                       ; preds = %fold_range_test.exit
  %bf.load4242 = load i32* %code4082, align 8
  %bf.clear4243 = and i32 %bf.load4242, 255
  %cmp4244 = icmp eq i32 %bf.clear4243, %bf.clear
  br i1 %cmp4244, label %land.lhs.true4246, label %if.end4259

land.lhs.true4246:                                ; preds = %if.end4239
  %operands4248 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 2
  %arrayidx4249 = getelementptr inbounds i32* %operands4248, i64 2
  %458 = bitcast i32* %arrayidx4249 to %union.tree_node**
  %459 = load %union.tree_node** %458, align 8, !tbaa !14
  %call4250 = call fastcc %union.tree_node* @fold_truthop(i32 %bf.clear, %union.tree_node* %0, %union.tree_node* %459, %union.tree_node* %arg1.3)
  %cmp4251 = icmp eq %union.tree_node* %call4250, null
  br i1 %cmp4251, label %if.end4259, label %if.then4253

if.then4253:                                      ; preds = %land.lhs.true4246
  %arrayidx4256 = bitcast i32* %operands4248 to %union.tree_node**
  %460 = load %union.tree_node** %arrayidx4256, align 8, !tbaa !14
  %call4257 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %bf.clear, %union.tree_node* %0, %union.tree_node* %460, %union.tree_node* %call4250) #1
  %call4258 = call %union.tree_node* @fold(%union.tree_node* %call4257)
  br label %return

if.end4259:                                       ; preds = %land.lhs.true4246, %if.end4239
  %call4260 = call fastcc %union.tree_node* @fold_truthop(i32 %bf.clear, %union.tree_node* %0, %union.tree_node* %arg0.5, %union.tree_node* %arg1.3)
  %cmp4261 = icmp eq %union.tree_node* %call4260, null
  %expr.call4260 = select i1 %cmp4261, %union.tree_node* %expr, %union.tree_node* %call4260
  br label %return

sw.bb4265:                                        ; preds = %if.end901
  %code4267 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 0, i32 2
  %bf.load4268 = load i32* %code4267, align 8
  %bf.clear4269 = and i32 %bf.load4268, 255
  %cmp4270 = icmp eq i32 %bf.clear4269, 25
  br i1 %cmp4270, label %land.lhs.true4272, label %sw.bb4278

land.lhs.true4272:                                ; preds = %sw.bb4265
  %call4273 = call i32 @integer_zerop(%union.tree_node* %arg0.5) #1
  %tobool4274 = icmp eq i32 %call4273, 0
  br i1 %tobool4274, label %if.then4275, label %sw.bb4278

if.then4275:                                      ; preds = %land.lhs.true4272
  %call4276 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %arg0.5) #1
  br label %return

sw.bb4278:                                        ; preds = %if.end901.sw.bb4278_crit_edge, %land.lhs.true4272, %sw.bb4265
  %code4280.pre-phi = phi i32* [ %code4280.pre, %if.end901.sw.bb4278_crit_edge ], [ %code4267, %land.lhs.true4272 ], [ %code4267, %sw.bb4265 ]
  %bf.load4281 = load i32* %code4280.pre-phi, align 8
  %bf.clear4282 = and i32 %bf.load4281, 255
  %cmp4283 = icmp eq i32 %bf.clear4282, 25
  br i1 %cmp4283, label %land.lhs.true4285, label %if.end4291

land.lhs.true4285:                                ; preds = %sw.bb4278
  %call4286 = call i32 @integer_zerop(%union.tree_node* %arg0.5) #1
  %tobool4287 = icmp eq i32 %call4286, 0
  br i1 %tobool4287, label %if.end4291, label %if.then4288

if.then4288:                                      ; preds = %land.lhs.true4285
  %call4289 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %arg1.3) #1
  %code.i10523 = getelementptr inbounds %union.tree_node* %call4289, i64 0, i32 0, i32 0, i32 2
  %bf.load.i10524 = load i32* %code.i10523, align 8
  %bf.clear.i10525 = and i32 %bf.load.i10524, 255
  switch i32 %bf.clear.i10525, label %if.end.i10534 [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i10534:                                    ; preds = %if.then4288
  %type.i10526 = getelementptr inbounds %union.tree_node* %call4289, i64 0, i32 0, i32 0, i32 1
  %461 = load %union.tree_node** %type.i10526, align 8, !tbaa !11
  %call.i10527 = call %union.tree_node* @build1(i32 116, %union.tree_node* %461, %union.tree_node* %call4289) #1
  %bf.load26.i10528 = load i32* %code.i10523, align 8
  %bf.clear27.i10529 = and i32 %bf.load26.i10528, 512
  %constant_flag29.i10530 = getelementptr inbounds %union.tree_node* %call.i10527, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i10531 = load i32* %constant_flag29.i10530, align 8
  %bf.clear31.i10532 = and i32 %bf.load30.i10531, -513
  %bf.set.i10533 = or i32 %bf.clear31.i10532, %bf.clear27.i10529
  store i32 %bf.set.i10533, i32* %constant_flag29.i10530, align 8
  br label %return

if.end4291:                                       ; preds = %land.lhs.true4285, %sw.bb4278
  %code4293 = getelementptr inbounds %union.tree_node* %arg1.3, i64 0, i32 0, i32 0, i32 2
  %bf.load4294 = load i32* %code4293, align 8
  %bf.clear4295 = and i32 %bf.load4294, 255
  %cmp4296 = icmp eq i32 %bf.clear4295, 25
  br i1 %cmp4296, label %land.lhs.true4298, label %if.end4314

land.lhs.true4298:                                ; preds = %if.end4291
  %call4299 = call i32 @integer_zerop(%union.tree_node* %arg1.3) #1
  %tobool4300 = icmp eq i32 %call4299, 0
  br i1 %tobool4300, label %if.end4314, label %land.lhs.true4301

land.lhs.true4301:                                ; preds = %land.lhs.true4298
  %cmp4302 = icmp eq i32 %bf.clear, 92
  br i1 %cmp4302, label %lor.lhs.false4304, label %if.then4311

lor.lhs.false4304:                                ; preds = %land.lhs.true4301
  %bf.load4307 = load i32* %code4280.pre-phi, align 8
  %bf.clear4309 = and i32 %bf.load4307, 256
  %tobool4310 = icmp eq i32 %bf.clear4309, 0
  br i1 %tobool4310, label %if.then4311, label %if.end4314

if.then4311:                                      ; preds = %lor.lhs.false4304, %land.lhs.true4301
  %call4312 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %arg0.5) #1
  %code.i10509 = getelementptr inbounds %union.tree_node* %call4312, i64 0, i32 0, i32 0, i32 2
  %bf.load.i10510 = load i32* %code.i10509, align 8
  %bf.clear.i10511 = and i32 %bf.load.i10510, 255
  switch i32 %bf.clear.i10511, label %if.end.i10520 [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i10520:                                    ; preds = %if.then4311
  %type.i10512 = getelementptr inbounds %union.tree_node* %call4312, i64 0, i32 0, i32 0, i32 1
  %462 = load %union.tree_node** %type.i10512, align 8, !tbaa !11
  %call.i10513 = call %union.tree_node* @build1(i32 116, %union.tree_node* %462, %union.tree_node* %call4312) #1
  %bf.load26.i10514 = load i32* %code.i10509, align 8
  %bf.clear27.i10515 = and i32 %bf.load26.i10514, 512
  %constant_flag29.i10516 = getelementptr inbounds %union.tree_node* %call.i10513, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i10517 = load i32* %constant_flag29.i10516, align 8
  %bf.clear31.i10518 = and i32 %bf.load30.i10517, -513
  %bf.set.i10519 = or i32 %bf.clear31.i10518, %bf.clear27.i10515
  store i32 %bf.set.i10519, i32* %constant_flag29.i10516, align 8
  br label %return

if.end4314:                                       ; preds = %lor.lhs.false4304, %land.lhs.true4298, %if.end4291
  %bf.load4317 = load i32* %code4293, align 8
  %bf.clear4318 = and i32 %bf.load4317, 255
  %cmp4319 = icmp eq i32 %bf.clear4318, 25
  br i1 %cmp4319, label %land.lhs.true4321, label %if.end4326

land.lhs.true4321:                                ; preds = %if.end4314
  %call4322 = call i32 @integer_zerop(%union.tree_node* %arg1.3) #1
  %tobool4323 = icmp eq i32 %call4322, 0
  br i1 %tobool4323, label %if.then4324, label %if.end4326

if.then4324:                                      ; preds = %land.lhs.true4321
  %call.i10487 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %arg1.3) #1
  %bf.load.i10489 = load i32* %code4280.pre-phi, align 8
  %bf.clear.i10490 = and i32 %bf.load.i10489, 256
  %tobool.i10491 = icmp eq i32 %bf.clear.i10490, 0
  br i1 %tobool.i10491, label %if.end.i10497, label %if.then.i10493

if.then.i10493:                                   ; preds = %if.then4324
  %call1.i10492 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 47, %union.tree_node* %0, %union.tree_node* %arg0.5, %union.tree_node* %call.i10487) #1
  br label %return

if.end.i10497:                                    ; preds = %if.then4324
  %code.i.i10494 = getelementptr inbounds %union.tree_node* %call.i10487, i64 0, i32 0, i32 0, i32 2
  %bf.load.i.i10495 = load i32* %code.i.i10494, align 8
  %bf.clear.i.i10496 = and i32 %bf.load.i.i10495, 255
  switch i32 %bf.clear.i.i10496, label %if.end.i.i10506 [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i.i10506:                                  ; preds = %if.end.i10497
  %type.i.i10498 = getelementptr inbounds %union.tree_node* %call.i10487, i64 0, i32 0, i32 0, i32 1
  %463 = load %union.tree_node** %type.i.i10498, align 8, !tbaa !11
  %call.i.i10499 = call %union.tree_node* @build1(i32 116, %union.tree_node* %463, %union.tree_node* %call.i10487) #1
  %bf.load26.i.i10500 = load i32* %code.i.i10494, align 8
  %bf.clear27.i.i10501 = and i32 %bf.load26.i.i10500, 512
  %constant_flag29.i.i10502 = getelementptr inbounds %union.tree_node* %call.i.i10499, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i.i10503 = load i32* %constant_flag29.i.i10502, align 8
  %bf.clear31.i.i10504 = and i32 %bf.load30.i.i10503, -513
  %bf.set.i.i10505 = or i32 %bf.clear31.i.i10504, %bf.clear27.i.i10501
  store i32 %bf.set.i.i10505, i32* %constant_flag29.i.i10502, align 8
  br label %return

if.end4326:                                       ; preds = %land.lhs.true4321, %if.end4314
  %bf.load4329 = load i32* %code4280.pre-phi, align 8
  %bf.clear4330 = and i32 %bf.load4329, 255
  %cmp4331 = icmp eq i32 %bf.clear4330, 25
  br i1 %cmp4331, label %land.lhs.true4333, label %truth_andor

land.lhs.true4333:                                ; preds = %if.end4326
  %call4334 = call i32 @integer_zerop(%union.tree_node* %arg0.5) #1
  %tobool4335 = icmp eq i32 %call4334, 0
  br i1 %tobool4335, label %if.then4336, label %truth_andor

if.then4336:                                      ; preds = %land.lhs.true4333
  %call.i10465 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %arg0.5) #1
  %bf.load.i10467 = load i32* %code4293, align 8
  %bf.clear.i10468 = and i32 %bf.load.i10467, 256
  %tobool.i10469 = icmp eq i32 %bf.clear.i10468, 0
  br i1 %tobool.i10469, label %if.end.i10475, label %if.then.i10471

if.then.i10471:                                   ; preds = %if.then4336
  %call1.i10470 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 47, %union.tree_node* %0, %union.tree_node* %arg1.3, %union.tree_node* %call.i10465) #1
  br label %return

if.end.i10475:                                    ; preds = %if.then4336
  %code.i.i10472 = getelementptr inbounds %union.tree_node* %call.i10465, i64 0, i32 0, i32 0, i32 2
  %bf.load.i.i10473 = load i32* %code.i.i10472, align 8
  %bf.clear.i.i10474 = and i32 %bf.load.i.i10473, 255
  switch i32 %bf.clear.i.i10474, label %if.end.i.i10484 [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i.i10484:                                  ; preds = %if.end.i10475
  %type.i.i10476 = getelementptr inbounds %union.tree_node* %call.i10465, i64 0, i32 0, i32 0, i32 1
  %464 = load %union.tree_node** %type.i.i10476, align 8, !tbaa !11
  %call.i.i10477 = call %union.tree_node* @build1(i32 116, %union.tree_node* %464, %union.tree_node* %call.i10465) #1
  %bf.load26.i.i10478 = load i32* %code.i.i10472, align 8
  %bf.clear27.i.i10479 = and i32 %bf.load26.i.i10478, 512
  %constant_flag29.i.i10480 = getelementptr inbounds %union.tree_node* %call.i.i10477, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i.i10481 = load i32* %constant_flag29.i.i10480, align 8
  %bf.clear31.i.i10482 = and i32 %bf.load30.i.i10481, -513
  %bf.set.i.i10483 = or i32 %bf.clear31.i.i10482, %bf.clear27.i.i10479
  store i32 %bf.set.i.i10483, i32* %constant_flag29.i.i10480, align 8
  br label %return

sw.bb4339:                                        ; preds = %if.end901
  %call4340 = call i32 @integer_zerop(%union.tree_node* %arg0.5) #1
  %tobool4341 = icmp eq i32 %call4340, 0
  br i1 %tobool4341, label %if.end4345, label %if.then4342

if.then4342:                                      ; preds = %sw.bb4339
  %call4343 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %arg1.3) #1
  %code.i10451 = getelementptr inbounds %union.tree_node* %call4343, i64 0, i32 0, i32 0, i32 2
  %bf.load.i10452 = load i32* %code.i10451, align 8
  %bf.clear.i10453 = and i32 %bf.load.i10452, 255
  switch i32 %bf.clear.i10453, label %if.end.i10462 [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i10462:                                    ; preds = %if.then4342
  %type.i10454 = getelementptr inbounds %union.tree_node* %call4343, i64 0, i32 0, i32 0, i32 1
  %465 = load %union.tree_node** %type.i10454, align 8, !tbaa !11
  %call.i10455 = call %union.tree_node* @build1(i32 116, %union.tree_node* %465, %union.tree_node* %call4343) #1
  %bf.load26.i10456 = load i32* %code.i10451, align 8
  %bf.clear27.i10457 = and i32 %bf.load26.i10456, 512
  %constant_flag29.i10458 = getelementptr inbounds %union.tree_node* %call.i10455, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i10459 = load i32* %constant_flag29.i10458, align 8
  %bf.clear31.i10460 = and i32 %bf.load30.i10459, -513
  %bf.set.i10461 = or i32 %bf.clear31.i10460, %bf.clear27.i10457
  store i32 %bf.set.i10461, i32* %constant_flag29.i10458, align 8
  br label %return

if.end4345:                                       ; preds = %sw.bb4339
  %call4346 = call i32 @integer_zerop(%union.tree_node* %arg1.3) #1
  %tobool4347 = icmp eq i32 %call4346, 0
  br i1 %tobool4347, label %if.end4351, label %if.then4348

if.then4348:                                      ; preds = %if.end4345
  %call4349 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %arg0.5) #1
  %code.i10437 = getelementptr inbounds %union.tree_node* %call4349, i64 0, i32 0, i32 0, i32 2
  %bf.load.i10438 = load i32* %code.i10437, align 8
  %bf.clear.i10439 = and i32 %bf.load.i10438, 255
  switch i32 %bf.clear.i10439, label %if.end.i10448 [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i10448:                                    ; preds = %if.then4348
  %type.i10440 = getelementptr inbounds %union.tree_node* %call4349, i64 0, i32 0, i32 0, i32 1
  %466 = load %union.tree_node** %type.i10440, align 8, !tbaa !11
  %call.i10441 = call %union.tree_node* @build1(i32 116, %union.tree_node* %466, %union.tree_node* %call4349) #1
  %bf.load26.i10442 = load i32* %code.i10437, align 8
  %bf.clear27.i10443 = and i32 %bf.load26.i10442, 512
  %constant_flag29.i10444 = getelementptr inbounds %union.tree_node* %call.i10441, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i10445 = load i32* %constant_flag29.i10444, align 8
  %bf.clear31.i10446 = and i32 %bf.load30.i10445, -513
  %bf.set.i10447 = or i32 %bf.clear31.i10446, %bf.clear27.i10443
  store i32 %bf.set.i10447, i32* %constant_flag29.i10444, align 8
  br label %return

if.end4351:                                       ; preds = %if.end4345
  %call4352 = call i32 @integer_onep(%union.tree_node* %arg0.5) #1
  %tobool4353 = icmp eq i32 %call4352, 0
  br i1 %tobool4353, label %if.end4358, label %if.then4354

if.then4354:                                      ; preds = %if.end4351
  %call4355 = call %union.tree_node* @invert_truthvalue(%union.tree_node* %arg1.3)
  %call4356 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %call4355) #1
  %code.i10423 = getelementptr inbounds %union.tree_node* %call4356, i64 0, i32 0, i32 0, i32 2
  %bf.load.i10424 = load i32* %code.i10423, align 8
  %bf.clear.i10425 = and i32 %bf.load.i10424, 255
  switch i32 %bf.clear.i10425, label %if.end.i10434 [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i10434:                                    ; preds = %if.then4354
  %type.i10426 = getelementptr inbounds %union.tree_node* %call4356, i64 0, i32 0, i32 0, i32 1
  %467 = load %union.tree_node** %type.i10426, align 8, !tbaa !11
  %call.i10427 = call %union.tree_node* @build1(i32 116, %union.tree_node* %467, %union.tree_node* %call4356) #1
  %bf.load26.i10428 = load i32* %code.i10423, align 8
  %bf.clear27.i10429 = and i32 %bf.load26.i10428, 512
  %constant_flag29.i10430 = getelementptr inbounds %union.tree_node* %call.i10427, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i10431 = load i32* %constant_flag29.i10430, align 8
  %bf.clear31.i10432 = and i32 %bf.load30.i10431, -513
  %bf.set.i10433 = or i32 %bf.clear31.i10432, %bf.clear27.i10429
  store i32 %bf.set.i10433, i32* %constant_flag29.i10430, align 8
  br label %return

if.end4358:                                       ; preds = %if.end4351
  %call4359 = call i32 @integer_onep(%union.tree_node* %arg1.3) #1
  %tobool4360 = icmp eq i32 %call4359, 0
  br i1 %tobool4360, label %return, label %if.then4361

if.then4361:                                      ; preds = %if.end4358
  %call4362 = call %union.tree_node* @invert_truthvalue(%union.tree_node* %arg0.5)
  %call4363 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %call4362) #1
  %code.i10417 = getelementptr inbounds %union.tree_node* %call4363, i64 0, i32 0, i32 0, i32 2
  %bf.load.i10418 = load i32* %code.i10417, align 8
  %bf.clear.i10419 = and i32 %bf.load.i10418, 255
  switch i32 %bf.clear.i10419, label %if.end.i10421 [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i10421:                                    ; preds = %if.then4361
  %type.i = getelementptr inbounds %union.tree_node* %call4363, i64 0, i32 0, i32 0, i32 1
  %468 = load %union.tree_node** %type.i, align 8, !tbaa !11
  %call.i10420 = call %union.tree_node* @build1(i32 116, %union.tree_node* %468, %union.tree_node* %call4363) #1
  %bf.load26.i = load i32* %code.i10417, align 8
  %bf.clear27.i = and i32 %bf.load26.i, 512
  %constant_flag29.i = getelementptr inbounds %union.tree_node* %call.i10420, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i = load i32* %constant_flag29.i, align 8
  %bf.clear31.i = and i32 %bf.load30.i, -513
  %bf.set.i = or i32 %bf.clear31.i, %bf.clear27.i
  store i32 %bf.set.i, i32* %constant_flag29.i, align 8
  br label %return

sw.bb4366:                                        ; preds = %if.end901, %if.end901, %if.end901, %if.end901, %if.end901, %if.end901
  %type4368 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 0, i32 1
  %469 = load %union.tree_node** %type4368, align 8, !tbaa !11
  %code4370 = getelementptr inbounds %union.tree_node* %469, i64 0, i32 0, i32 0, i32 2
  %bf.load4371 = load i32* %code4370, align 8
  %bf.clear4372 = and i32 %bf.load4371, 255
  switch i32 %bf.clear4372, label %if.end4471 [
    i32 7, label %if.then4395
    i32 8, label %land.lhs.true4384
  ]

land.lhs.true4384:                                ; preds = %sw.bb4366
  %type4388 = getelementptr inbounds %union.tree_node* %469, i64 0, i32 0, i32 0, i32 1
  %470 = load %union.tree_node** %type4388, align 8, !tbaa !11
  %code4390 = getelementptr inbounds %union.tree_node* %470, i64 0, i32 0, i32 0, i32 2
  %bf.load4391 = load i32* %code4390, align 8
  %bf.clear4392 = and i32 %bf.load4391, 255
  %cmp4393 = icmp eq i32 %bf.clear4392, 7
  br i1 %cmp4393, label %if.then4395, label %if.end4471

if.then4395:                                      ; preds = %sw.bb4366, %land.lhs.true4384
  %code4397 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 0, i32 2
  %bf.load4398 = load i32* %code4397, align 8
  %bf.clear4399 = and i32 %bf.load4398, 255
  %cmp4400 = icmp eq i32 %bf.clear4399, 77
  %code4404 = getelementptr inbounds %union.tree_node* %arg1.3, i64 0, i32 0, i32 0, i32 2
  %bf.load4405 = load i32* %code4404, align 8
  br i1 %cmp4400, label %land.lhs.true4402, label %if.end4445

land.lhs.true4402:                                ; preds = %if.then4395
  %bf.clear4406 = and i32 %bf.load4405, 255
  %cmp4407 = icmp eq i32 %bf.clear4406, 77
  br i1 %cmp4407, label %if.then4409, label %land.lhs.true4425

if.then4409:                                      ; preds = %land.lhs.true4402
  %operands4411 = getelementptr inbounds %union.tree_node* %arg1.3, i64 0, i32 0, i32 2
  %arrayidx4412 = bitcast i32* %operands4411 to %union.tree_node**
  %471 = load %union.tree_node** %arrayidx4412, align 8, !tbaa !14
  %operands4414 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 2
  %arrayidx4415 = bitcast i32* %operands4414 to %union.tree_node**
  %472 = load %union.tree_node** %arrayidx4415, align 8, !tbaa !14
  %call4416 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %bf.clear, %union.tree_node* %0, %union.tree_node* %471, %union.tree_node* %472) #1
  %call4417 = call %union.tree_node* @fold(%union.tree_node* %call4416)
  br label %return

land.lhs.true4425:                                ; preds = %land.lhs.true4402
  %code4427 = getelementptr inbounds %union.tree_node* %arg1.3, i64 0, i32 0, i32 0, i32 2
  %bf.load4428 = load i32* %code4427, align 8
  %bf.clear4429 = and i32 %bf.load4428, 255
  %cmp4430 = icmp eq i32 %bf.clear4429, 26
  br i1 %cmp4430, label %if.then4432, label %if.end4445

if.then4432:                                      ; preds = %land.lhs.true4425
  switch i32 %bf.clear, label %sw.default.i10414 [
    i32 101, label %swap_tree_comparison.exit10416
    i32 102, label %swap_tree_comparison.exit10416
    i32 99, label %sw.bb1.i10410
    i32 100, label %sw.bb2.i10411
    i32 97, label %sw.bb3.i10412
    i32 98, label %sw.bb4.i10413
  ]

sw.bb1.i10410:                                    ; preds = %if.then4432
  br label %swap_tree_comparison.exit10416

sw.bb2.i10411:                                    ; preds = %if.then4432
  br label %swap_tree_comparison.exit10416

sw.bb3.i10412:                                    ; preds = %if.then4432
  br label %swap_tree_comparison.exit10416

sw.bb4.i10413:                                    ; preds = %if.then4432
  br label %swap_tree_comparison.exit10416

sw.default.i10414:                                ; preds = %if.then4432
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8]* @.str, i64 0, i64 0), i32 2357, i8* getelementptr inbounds ([21 x i8]* @__FUNCTION__.swap_tree_comparison, i64 0, i64 0)) #7
  unreachable

swap_tree_comparison.exit10416:                   ; preds = %if.then4432, %if.then4432, %sw.bb1.i10410, %sw.bb2.i10411, %sw.bb3.i10412, %sw.bb4.i10413
  %retval.0.i10415 = phi i32 [ 100, %sw.bb4.i10413 ], [ 99, %sw.bb3.i10412 ], [ 98, %sw.bb2.i10411 ], [ 97, %sw.bb1.i10410 ], [ %bf.clear, %if.then4432 ], [ %bf.clear, %if.then4432 ]
  %operands4435 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 2
  %arrayidx4436 = bitcast i32* %operands4435 to %union.tree_node**
  %473 = load %union.tree_node** %arrayidx4436, align 8, !tbaa !14
  %type4438 = getelementptr inbounds %union.tree_node* %arg1.3, i64 0, i32 0, i32 0, i32 1
  %474 = load %union.tree_node** %type4438, align 8, !tbaa !11
  %real_cst4441 = getelementptr inbounds %union.tree_node* %arg1.3, i64 0, i32 0, i32 2
  %475 = bitcast i32* %real_cst4441 to %struct.realvaluetype*
  call void @ereal_negate(%struct.realvaluetype* sret %agg.tmp4439, %struct.realvaluetype* byval align 8 %475) #1
  %call4442 = call %union.tree_node* @build_real(%union.tree_node* %474, %struct.realvaluetype* byval align 8 %agg.tmp4439) #1
  %call4443 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %retval.0.i10415, %union.tree_node* %0, %union.tree_node* %473, %union.tree_node* %call4442) #1
  %call4444 = call %union.tree_node* @fold(%union.tree_node* %call4443)
  br label %return

if.end4445:                                       ; preds = %if.then4395, %land.lhs.true4425
  %bf.load4448 = phi i32 [ %bf.load4428, %land.lhs.true4425 ], [ %bf.load4405, %if.then4395 ]
  %bf.clear4449 = and i32 %bf.load4448, 255
  %cmp4450 = icmp eq i32 %bf.clear4449, 26
  br i1 %cmp4450, label %land.lhs.true4452, label %if.end4471

land.lhs.true4452:                                ; preds = %if.end4445
  %real_cst4454 = getelementptr inbounds %union.tree_node* %arg1.3, i64 0, i32 0, i32 2
  %476 = bitcast i32* %real_cst4454 to %struct.realvaluetype*
  %call4455 = call i32 @ereal_cmp(%struct.realvaluetype* byval align 8 %476, %struct.realvaluetype* byval align 8 @dconst0) #1
  %cmp4456 = icmp eq i32 %call4455, 0
  br i1 %cmp4456, label %land.lhs.true4458, label %if.end4471

land.lhs.true4458:                                ; preds = %land.lhs.true4452
  %call4461 = call i32 @ereal_isneg(%struct.realvaluetype* byval align 8 %476) #1
  %cmp4462 = icmp eq i32 %call4461, 0
  br i1 %cmp4462, label %if.end4471, label %if.then4464

if.then4464:                                      ; preds = %land.lhs.true4458
  %type4466 = getelementptr inbounds %union.tree_node* %arg1.3, i64 0, i32 0, i32 0, i32 1
  %477 = load %union.tree_node** %type4466, align 8, !tbaa !11
  %call4467 = call %union.tree_node* @build_real(%union.tree_node* %477, %struct.realvaluetype* byval align 8 @dconst0) #1
  %call4468 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %bf.clear, %union.tree_node* %0, %union.tree_node* %arg0.5, %union.tree_node* %call4467) #1
  %call4469 = call %union.tree_node* @fold(%union.tree_node* %call4468)
  br label %return

if.end4471:                                       ; preds = %sw.bb4366, %land.lhs.true4458, %if.end4445, %land.lhs.true4452, %land.lhs.true4384
  %code4473 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 0, i32 2
  %bf.load4474 = load i32* %code4473, align 8
  %bf.clear4475 = and i32 %bf.load4474, 255
  %cmp4476 = icmp eq i32 %bf.clear4475, 25
  br i1 %cmp4476, label %land.lhs.true4478, label %if.end4505

land.lhs.true4478:                                ; preds = %if.end4471
  %code4480 = getelementptr inbounds %union.tree_node* %arg1.3, i64 0, i32 0, i32 0, i32 2
  %bf.load4481 = load i32* %code4480, align 8
  %bf.clear4482 = and i32 %bf.load4481, 255
  %cmp4483 = icmp eq i32 %bf.clear4482, 25
  br i1 %cmp4483, label %if.end4505, label %if.then4485

if.then4485:                                      ; preds = %land.lhs.true4478
  %operands4487 = getelementptr inbounds %union.tree_node* %expr, i64 0, i32 0, i32 2
  %arrayidx4488 = bitcast i32* %operands4487 to %union.tree_node**
  store %union.tree_node* %arg1.3, %union.tree_node** %arrayidx4488, align 8, !tbaa !14
  %arrayidx4491 = getelementptr inbounds i32* %operands4487, i64 2
  %478 = bitcast i32* %arrayidx4491 to %union.tree_node**
  store %union.tree_node* %arg0.5, %union.tree_node** %478, align 8, !tbaa !14
  switch i32 %bf.clear, label %sw.default.i10407 [
    i32 101, label %swap_tree_comparison.exit10409
    i32 102, label %swap_tree_comparison.exit10409
    i32 99, label %sw.bb1.i10403
    i32 100, label %sw.bb2.i10404
    i32 97, label %sw.bb3.i10405
    i32 98, label %sw.bb4.i10406
  ]

sw.bb1.i10403:                                    ; preds = %if.then4485
  br label %swap_tree_comparison.exit10409

sw.bb2.i10404:                                    ; preds = %if.then4485
  br label %swap_tree_comparison.exit10409

sw.bb3.i10405:                                    ; preds = %if.then4485
  br label %swap_tree_comparison.exit10409

sw.bb4.i10406:                                    ; preds = %if.then4485
  br label %swap_tree_comparison.exit10409

sw.default.i10407:                                ; preds = %if.then4485
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8]* @.str, i64 0, i64 0), i32 2357, i8* getelementptr inbounds ([21 x i8]* @__FUNCTION__.swap_tree_comparison, i64 0, i64 0)) #7
  unreachable

swap_tree_comparison.exit10409:                   ; preds = %if.then4485, %if.then4485, %sw.bb1.i10403, %sw.bb2.i10404, %sw.bb3.i10405, %sw.bb4.i10406
  %retval.0.i10408 = phi i32 [ 100, %sw.bb4.i10406 ], [ 99, %sw.bb3.i10405 ], [ 98, %sw.bb2.i10404 ], [ 97, %sw.bb1.i10403 ], [ %bf.clear, %if.then4485 ], [ %bf.clear, %if.then4485 ]
  %bf.load4501 = load i32* %code3, align 8
  %bf.clear4503 = and i32 %bf.load4501, -256
  %bf.set4504 = or i32 %bf.clear4503, %retval.0.i10408
  store i32 %bf.set4504, i32* %code3, align 8
  %bf.load4519.pre = load i32* %code4480, align 8
  br label %if.end4505

if.end4505:                                       ; preds = %land.lhs.true4478, %swap_tree_comparison.exit10409, %if.end4471
  %bf.load4519 = phi i32 [ %bf.load4519.pre, %swap_tree_comparison.exit10409 ], [ %bf.load4474, %land.lhs.true4478 ], [ %bf.load4474, %if.end4471 ]
  %code.7 = phi i32 [ %retval.0.i10408, %swap_tree_comparison.exit10409 ], [ %bf.clear, %land.lhs.true4478 ], [ %bf.clear, %if.end4471 ]
  %arg1.8 = phi %union.tree_node* [ %arg0.5, %swap_tree_comparison.exit10409 ], [ %arg1.3, %land.lhs.true4478 ], [ %arg1.3, %if.end4471 ]
  %arg0.6 = phi %union.tree_node* [ %arg1.3, %swap_tree_comparison.exit10409 ], [ %arg0.5, %land.lhs.true4478 ], [ %arg0.5, %if.end4471 ]
  %constant_flag4510 = getelementptr inbounds %union.tree_node* %arg1.8, i64 0, i32 0, i32 0, i32 2
  %bf.load4511 = load i32* %constant_flag4510, align 8
  %bf.clear4513 = and i32 %bf.load4511, 512
  %tobool4514 = icmp eq i32 %bf.clear4513, 0
  %.arg1.8 = select i1 %tobool4514, %union.tree_node* null, %union.tree_node* %arg1.8
  %.arg0.6 = select i1 %tobool4514, %union.tree_node* null, %union.tree_node* %arg0.6
  %479 = lshr exact i32 %bf.clear4513, 8
  %480 = add i32 %479, -1
  %constant_flag4518 = getelementptr inbounds %union.tree_node* %arg0.6, i64 0, i32 0, i32 0, i32 2
  %bf.clear4521 = and i32 %bf.load4519, 512
  %tobool4522 = icmp eq i32 %bf.clear4521, 0
  %constop.1 = select i1 %tobool4522, %union.tree_node* %.arg1.8, %union.tree_node* %arg0.6
  %varop.1 = select i1 %tobool4522, %union.tree_node* %.arg0.6, %union.tree_node* %arg1.8
  %constopnum.1 = select i1 %tobool4522, i32 %480, i32 0
  %tobool4525 = icmp eq %union.tree_node* %constop.1, null
  br i1 %tobool4525, label %if.end4892, label %land.lhs.true4526

land.lhs.true4526:                                ; preds = %if.end4505
  %code4528 = getelementptr inbounds %union.tree_node* %varop.1, i64 0, i32 0, i32 0, i32 2
  %bf.load4529 = load i32* %code4528, align 8
  %bf.clear4530 = and i32 %bf.load4529, 255
  switch i32 %bf.clear4530, label %if.end4892 [
    i32 132, label %if.then4533
    i32 131, label %if.then4713
  ]

if.then4533:                                      ; preds = %land.lhs.true4526
  %type4535 = getelementptr inbounds %union.tree_node* %varop.1, i64 0, i32 0, i32 0, i32 1
  %481 = load %union.tree_node** %type4535, align 8, !tbaa !11
  %code4537 = getelementptr inbounds %union.tree_node* %481, i64 0, i32 0, i32 0, i32 2
  %bf.load4538 = load i32* %code4537, align 8
  %bf.clear4539 = and i32 %bf.load4538, 255
  switch i32 %bf.clear4539, label %land.lhs.true4580 [
    i32 13, label %if.then4586
    i32 15, label %if.then4586
    i32 7, label %if.end4892
    i32 8, label %land.lhs.true4569
  ]

land.lhs.true4569:                                ; preds = %if.then4533
  %type4573 = getelementptr inbounds %union.tree_node* %481, i64 0, i32 0, i32 0, i32 1
  %482 = load %union.tree_node** %type4573, align 8, !tbaa !11
  %code4575 = getelementptr inbounds %union.tree_node* %482, i64 0, i32 0, i32 0, i32 2
  %bf.load4576 = load i32* %code4575, align 8
  %bf.clear4577 = and i32 %bf.load4576, 255
  %cmp4578 = icmp ne i32 %bf.clear4577, 7
  %code.7.off9695 = add i32 %code.7, -101
  %483 = icmp ult i32 %code.7.off9695, 2
  %or.cond9747 = and i1 %cmp4578, %483
  br i1 %or.cond9747, label %if.then4586, label %if.end4892

land.lhs.true4580:                                ; preds = %if.then4533
  %.old = add i32 %code.7, -101
  %.old9746 = icmp ult i32 %.old, 2
  br i1 %.old9746, label %if.then4586, label %if.end4892

if.then4586:                                      ; preds = %land.lhs.true4569, %if.then4533, %if.then4533, %land.lhs.true4580
  %operands4591 = getelementptr inbounds %union.tree_node* %varop.1, i64 0, i32 0, i32 2
  %arrayidx4592 = getelementptr inbounds i32* %operands4591, i64 2
  %484 = bitcast i32* %arrayidx4592 to %union.tree_node**
  %485 = load %union.tree_node** %484, align 8, !tbaa !14
  %call4593 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 59, %union.tree_node* %481, %union.tree_node* %constop.1, %union.tree_node* %485) #1
  %call4594 = call %union.tree_node* @fold(%union.tree_node* %call4593)
  %486 = load %union.tree_node** %type4535, align 8, !tbaa !11
  %arrayidx4599 = bitcast i32* %operands4591 to %union.tree_node**
  %487 = load %union.tree_node** %arrayidx4599, align 8, !tbaa !14
  %488 = load %union.tree_node** %484, align 8, !tbaa !14
  %call4603 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 130, %union.tree_node* %486, %union.tree_node* %487, %union.tree_node* %488) #1
  %operands4605 = getelementptr inbounds %union.tree_node* %call4603, i64 0, i32 0, i32 2
  %arrayidx4606 = bitcast i32* %operands4605 to %union.tree_node**
  %489 = load %union.tree_node** %arrayidx4606, align 8, !tbaa !14
  %code4608 = getelementptr inbounds %union.tree_node* %489, i64 0, i32 0, i32 0, i32 2
  %bf.load4609 = load i32* %code4608, align 8
  %bf.clear4610 = and i32 %bf.load4609, 255
  %cmp4611 = icmp eq i32 %bf.clear4610, 39
  br i1 %cmp4611, label %land.lhs.true4613, label %if.end4689

land.lhs.true4613:                                ; preds = %if.then4586
  %operands4618 = getelementptr inbounds %union.tree_node* %489, i64 0, i32 0, i32 2
  %arrayidx4619 = getelementptr inbounds i32* %operands4618, i64 2
  %490 = bitcast i32* %arrayidx4619 to %union.tree_node**
  %491 = load %union.tree_node** %490, align 8, !tbaa !14
  %bit_field_flag4621 = getelementptr inbounds %union.tree_node* %491, i64 0, i32 0, i32 5
  %492 = bitcast i48* %bit_field_flag4621 to i64*
  %bf.load4622 = load i64* %492, align 8
  %bf.cast4625 = and i64 %bf.load4622, 4096
  %tobool4626 = icmp eq i64 %bf.cast4625, 0
  br i1 %tobool4626, label %if.end4689, label %if.then4627

if.then4627:                                      ; preds = %land.lhs.true4613
  %size4636 = getelementptr inbounds %union.tree_node* %491, i64 0, i32 0, i32 4
  %493 = load %union.tree_node** %size4636, align 8, !tbaa !34
  %int_cst4638 = getelementptr inbounds %union.tree_node* %493, i64 0, i32 0, i32 2
  %low4639 = bitcast i32* %int_cst4638 to i64*
  %494 = load i64* %low4639, align 8, !tbaa !1
  %conv4640 = trunc i64 %494 to i32
  %cmp4646 = icmp eq i32 %constopnum.1, 0
  br i1 %cmp4646, label %if.then4648, label %if.else4654

if.then4648:                                      ; preds = %if.then4627
  %call4652 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %code.7, %union.tree_node* %0, %union.tree_node* %constop.1, %union.tree_node* %489) #1
  %call4653 = call %union.tree_node* @fold(%union.tree_node* %call4652)
  br label %if.end4660

if.else4654:                                      ; preds = %if.then4627
  %call4658 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %code.7, %union.tree_node* %0, %union.tree_node* %489, %union.tree_node* %constop.1) #1
  %call4659 = call %union.tree_node* @fold(%union.tree_node* %call4658)
  br label %if.end4660

if.end4660:                                       ; preds = %if.else4654, %if.then4648
  %folded_compare.0 = phi %union.tree_node* [ %call4653, %if.then4648 ], [ %call4659, %if.else4654 ]
  %call4661 = call i32 @integer_zerop(%union.tree_node* %folded_compare.0) #1
  %tobool4662 = icmp eq i32 %call4661, 0
  br i1 %tobool4662, label %lor.lhs.false4663, label %if.then4666

lor.lhs.false4663:                                ; preds = %if.end4660
  %call4664 = call i32 @integer_onep(%union.tree_node* %folded_compare.0) #1
  %tobool4665 = icmp eq i32 %call4664, 0
  br i1 %tobool4665, label %if.end4668, label %if.then4666

if.then4666:                                      ; preds = %lor.lhs.false4663, %if.end4660
  %call.i10381 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %folded_compare.0) #1
  %side_effects_flag.i10382 = getelementptr inbounds %union.tree_node* %call4603, i64 0, i32 0, i32 0, i32 2
  %bf.load.i10383 = load i32* %side_effects_flag.i10382, align 8
  %bf.clear.i10384 = and i32 %bf.load.i10383, 256
  %tobool.i10385 = icmp eq i32 %bf.clear.i10384, 0
  br i1 %tobool.i10385, label %if.end.i10391, label %if.then.i10387

if.then.i10387:                                   ; preds = %if.then4666
  %call1.i10386 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 47, %union.tree_node* %0, %union.tree_node* %call4603, %union.tree_node* %call.i10381) #1
  br label %return

if.end.i10391:                                    ; preds = %if.then4666
  %code.i.i10388 = getelementptr inbounds %union.tree_node* %call.i10381, i64 0, i32 0, i32 0, i32 2
  %bf.load.i.i10389 = load i32* %code.i.i10388, align 8
  %bf.clear.i.i10390 = and i32 %bf.load.i.i10389, 255
  switch i32 %bf.clear.i.i10390, label %if.end.i.i10400 [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i.i10400:                                  ; preds = %if.end.i10391
  %type.i.i10392 = getelementptr inbounds %union.tree_node* %call.i10381, i64 0, i32 0, i32 0, i32 1
  %495 = load %union.tree_node** %type.i.i10392, align 8, !tbaa !11
  %call.i.i10393 = call %union.tree_node* @build1(i32 116, %union.tree_node* %495, %union.tree_node* %call.i10381) #1
  %bf.load26.i.i10394 = load i32* %code.i.i10388, align 8
  %bf.clear27.i.i10395 = and i32 %bf.load26.i.i10394, 512
  %constant_flag29.i.i10396 = getelementptr inbounds %union.tree_node* %call.i.i10393, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i.i10397 = load i32* %constant_flag29.i.i10396, align 8
  %bf.clear31.i.i10398 = and i32 %bf.load30.i.i10397, -513
  %bf.set.i.i10399 = or i32 %bf.clear31.i.i10398, %bf.clear27.i.i10395
  store i32 %bf.set.i.i10399, i32* %constant_flag29.i.i10396, align 8
  br label %return

if.end4668:                                       ; preds = %lor.lhs.false4663
  %call4669 = call %union.tree_node* @type_for_size(i32 %conv4640, i32 1) #1
  %type4670 = bitcast %union.tree_node* %call4669 to %struct.tree_type*
  %precision4671 = getelementptr inbounds %struct.tree_type* %type4670, i64 0, i32 6
  %bf.load4672 = load i32* %precision4671, align 4
  %bf.clear4673 = and i32 %bf.load4672, 511
  %call4674 = call %union.tree_node* @build_int_2_wide(i64 -1, i64 -1) #1
  %type4676 = getelementptr inbounds %union.tree_node* %call4674, i64 0, i32 0, i32 0, i32 1
  store %union.tree_node* %call4669, %union.tree_node** %type4676, align 8, !tbaa !11
  %call4677 = call i32 @force_fit_type(%union.tree_node* %call4674, i32 0)
  %sub4678 = sub i32 %bf.clear4673, %conv4640
  %conv4679 = zext i32 %sub4678 to i64
  %496 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !14
  %call.i10380 = call %union.tree_node* @size_int_type_wide(i64 %conv4679, %union.tree_node* %496) #1
  %call4681 = call fastcc %union.tree_node* @const_binop(i32 83, %union.tree_node* %call4674, %union.tree_node* %call.i10380)
  %type4683 = getelementptr inbounds %union.tree_node* %call4603, i64 0, i32 0, i32 0, i32 1
  %497 = load %union.tree_node** %type4683, align 8, !tbaa !11
  %call4686 = call %union.tree_node* @convert(%union.tree_node* %497, %union.tree_node* %call4681) #1
  %call4687 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 88, %union.tree_node* %497, %union.tree_node* %call4594, %union.tree_node* %call4686) #1
  %call4688 = call %union.tree_node* @fold(%union.tree_node* %call4687)
  br label %if.end4689

if.end4689:                                       ; preds = %land.lhs.true4613, %if.end4668, %if.then4586
  %newconst.0 = phi %union.tree_node* [ %call4688, %if.end4668 ], [ %call4594, %land.lhs.true4613 ], [ %call4594, %if.then4586 ]
  %cmp4690 = icmp eq i32 %constopnum.1, 0
  %cond4695 = select i1 %cmp4690, %union.tree_node* %newconst.0, %union.tree_node* %call4603
  %cmp4696 = icmp eq i32 %constopnum.1, 1
  %cond4701 = select i1 %cmp4696, %union.tree_node* %newconst.0, %union.tree_node* %call4603
  %call4702 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %code.7, %union.tree_node* %0, %union.tree_node* %cond4695, %union.tree_node* %cond4701) #1
  br label %return

if.then4713:                                      ; preds = %land.lhs.true4526
  %type4715 = getelementptr inbounds %union.tree_node* %varop.1, i64 0, i32 0, i32 0, i32 1
  %498 = load %union.tree_node** %type4715, align 8, !tbaa !11
  %code4717 = getelementptr inbounds %union.tree_node* %498, i64 0, i32 0, i32 0, i32 2
  %bf.load4718 = load i32* %code4717, align 8
  %bf.clear4719 = and i32 %bf.load4718, 255
  switch i32 %bf.clear4719, label %land.lhs.true4760 [
    i32 13, label %if.then4766
    i32 15, label %if.then4766
    i32 7, label %if.end4892
    i32 8, label %land.lhs.true4749
  ]

land.lhs.true4749:                                ; preds = %if.then4713
  %type4753 = getelementptr inbounds %union.tree_node* %498, i64 0, i32 0, i32 0, i32 1
  %499 = load %union.tree_node** %type4753, align 8, !tbaa !11
  %code4755 = getelementptr inbounds %union.tree_node* %499, i64 0, i32 0, i32 0, i32 2
  %bf.load4756 = load i32* %code4755, align 8
  %bf.clear4757 = and i32 %bf.load4756, 255
  %cmp4758 = icmp ne i32 %bf.clear4757, 7
  %code.7.off = add i32 %code.7, -101
  %500 = icmp ult i32 %code.7.off, 2
  %or.cond9750 = and i1 %cmp4758, %500
  br i1 %or.cond9750, label %if.then4766, label %if.end4892

land.lhs.true4760:                                ; preds = %if.then4713
  %.old9748 = add i32 %code.7, -101
  %.old9749 = icmp ult i32 %.old9748, 2
  br i1 %.old9749, label %if.then4766, label %if.end4892

if.then4766:                                      ; preds = %land.lhs.true4749, %if.then4713, %if.then4713, %land.lhs.true4760
  %operands4772 = getelementptr inbounds %union.tree_node* %varop.1, i64 0, i32 0, i32 2
  %arrayidx4773 = getelementptr inbounds i32* %operands4772, i64 2
  %501 = bitcast i32* %arrayidx4773 to %union.tree_node**
  %502 = load %union.tree_node** %501, align 8, !tbaa !14
  %call4774 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 60, %union.tree_node* %498, %union.tree_node* %constop.1, %union.tree_node* %502) #1
  %call4775 = call %union.tree_node* @fold(%union.tree_node* %call4774)
  %503 = load %union.tree_node** %type4715, align 8, !tbaa !11
  %arrayidx4780 = bitcast i32* %operands4772 to %union.tree_node**
  %504 = load %union.tree_node** %arrayidx4780, align 8, !tbaa !14
  %505 = load %union.tree_node** %501, align 8, !tbaa !14
  %call4784 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 129, %union.tree_node* %503, %union.tree_node* %504, %union.tree_node* %505) #1
  %operands4786 = getelementptr inbounds %union.tree_node* %call4784, i64 0, i32 0, i32 2
  %arrayidx4787 = bitcast i32* %operands4786 to %union.tree_node**
  %506 = load %union.tree_node** %arrayidx4787, align 8, !tbaa !14
  %code4789 = getelementptr inbounds %union.tree_node* %506, i64 0, i32 0, i32 0, i32 2
  %bf.load4790 = load i32* %code4789, align 8
  %bf.clear4791 = and i32 %bf.load4790, 255
  %cmp4792 = icmp eq i32 %bf.clear4791, 39
  br i1 %cmp4792, label %land.lhs.true4794, label %if.end4876

land.lhs.true4794:                                ; preds = %if.then4766
  %operands4799 = getelementptr inbounds %union.tree_node* %506, i64 0, i32 0, i32 2
  %arrayidx4800 = getelementptr inbounds i32* %operands4799, i64 2
  %507 = bitcast i32* %arrayidx4800 to %union.tree_node**
  %508 = load %union.tree_node** %507, align 8, !tbaa !14
  %bit_field_flag4802 = getelementptr inbounds %union.tree_node* %508, i64 0, i32 0, i32 5
  %509 = bitcast i48* %bit_field_flag4802 to i64*
  %bf.load4803 = load i64* %509, align 8
  %bf.cast4806 = and i64 %bf.load4803, 4096
  %tobool4807 = icmp eq i64 %bf.cast4806, 0
  br i1 %tobool4807, label %if.end4876, label %if.then4808

if.then4808:                                      ; preds = %land.lhs.true4794
  %size4818 = getelementptr inbounds %union.tree_node* %508, i64 0, i32 0, i32 4
  %510 = load %union.tree_node** %size4818, align 8, !tbaa !34
  %int_cst4820 = getelementptr inbounds %union.tree_node* %510, i64 0, i32 0, i32 2
  %low4821 = bitcast i32* %int_cst4820 to i64*
  %511 = load i64* %low4821, align 8, !tbaa !1
  %conv4822 = trunc i64 %511 to i32
  %cmp4831 = icmp eq i32 %constopnum.1, 0
  br i1 %cmp4831, label %if.then4833, label %if.else4839

if.then4833:                                      ; preds = %if.then4808
  %call4837 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %code.7, %union.tree_node* %0, %union.tree_node* %constop.1, %union.tree_node* %506) #1
  %call4838 = call %union.tree_node* @fold(%union.tree_node* %call4837)
  br label %if.end4845

if.else4839:                                      ; preds = %if.then4808
  %call4843 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %code.7, %union.tree_node* %0, %union.tree_node* %506, %union.tree_node* %constop.1) #1
  %call4844 = call %union.tree_node* @fold(%union.tree_node* %call4843)
  br label %if.end4845

if.end4845:                                       ; preds = %if.else4839, %if.then4833
  %folded_compare4830.0 = phi %union.tree_node* [ %call4838, %if.then4833 ], [ %call4844, %if.else4839 ]
  %call4846 = call i32 @integer_zerop(%union.tree_node* %folded_compare4830.0) #1
  %tobool4847 = icmp eq i32 %call4846, 0
  br i1 %tobool4847, label %lor.lhs.false4848, label %if.then4851

lor.lhs.false4848:                                ; preds = %if.end4845
  %call4849 = call i32 @integer_onep(%union.tree_node* %folded_compare4830.0) #1
  %tobool4850 = icmp eq i32 %call4849, 0
  br i1 %tobool4850, label %if.end4853, label %if.then4851

if.then4851:                                      ; preds = %lor.lhs.false4848, %if.end4845
  %call.i10358 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %folded_compare4830.0) #1
  %side_effects_flag.i10359 = getelementptr inbounds %union.tree_node* %call4784, i64 0, i32 0, i32 0, i32 2
  %bf.load.i10360 = load i32* %side_effects_flag.i10359, align 8
  %bf.clear.i10361 = and i32 %bf.load.i10360, 256
  %tobool.i10362 = icmp eq i32 %bf.clear.i10361, 0
  br i1 %tobool.i10362, label %if.end.i10368, label %if.then.i10364

if.then.i10364:                                   ; preds = %if.then4851
  %call1.i10363 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 47, %union.tree_node* %0, %union.tree_node* %call4784, %union.tree_node* %call.i10358) #1
  br label %return

if.end.i10368:                                    ; preds = %if.then4851
  %code.i.i10365 = getelementptr inbounds %union.tree_node* %call.i10358, i64 0, i32 0, i32 0, i32 2
  %bf.load.i.i10366 = load i32* %code.i.i10365, align 8
  %bf.clear.i.i10367 = and i32 %bf.load.i.i10366, 255
  switch i32 %bf.clear.i.i10367, label %if.end.i.i10377 [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i.i10377:                                  ; preds = %if.end.i10368
  %type.i.i10369 = getelementptr inbounds %union.tree_node* %call.i10358, i64 0, i32 0, i32 0, i32 1
  %512 = load %union.tree_node** %type.i.i10369, align 8, !tbaa !11
  %call.i.i10370 = call %union.tree_node* @build1(i32 116, %union.tree_node* %512, %union.tree_node* %call.i10358) #1
  %bf.load26.i.i10371 = load i32* %code.i.i10365, align 8
  %bf.clear27.i.i10372 = and i32 %bf.load26.i.i10371, 512
  %constant_flag29.i.i10373 = getelementptr inbounds %union.tree_node* %call.i.i10370, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i.i10374 = load i32* %constant_flag29.i.i10373, align 8
  %bf.clear31.i.i10375 = and i32 %bf.load30.i.i10374, -513
  %bf.set.i.i10376 = or i32 %bf.clear31.i.i10375, %bf.clear27.i.i10372
  store i32 %bf.set.i.i10376, i32* %constant_flag29.i.i10373, align 8
  br label %return

if.end4853:                                       ; preds = %lor.lhs.false4848
  %call4854 = call %union.tree_node* @type_for_size(i32 %conv4822, i32 1) #1
  %type4855 = bitcast %union.tree_node* %call4854 to %struct.tree_type*
  %precision4856 = getelementptr inbounds %struct.tree_type* %type4855, i64 0, i32 6
  %bf.load4857 = load i32* %precision4856, align 4
  %bf.clear4858 = and i32 %bf.load4857, 511
  %call4859 = call %union.tree_node* @build_int_2_wide(i64 -1, i64 -1) #1
  %type4861 = getelementptr inbounds %union.tree_node* %call4784, i64 0, i32 0, i32 0, i32 1
  %513 = load %union.tree_node** %type4861, align 8, !tbaa !11
  %type4863 = getelementptr inbounds %union.tree_node* %call4859, i64 0, i32 0, i32 0, i32 1
  store %union.tree_node* %513, %union.tree_node** %type4863, align 8, !tbaa !11
  %call4864 = call i32 @force_fit_type(%union.tree_node* %call4859, i32 0)
  %sub4865 = sub i32 %bf.clear4858, %conv4822
  %conv4866 = zext i32 %sub4865 to i64
  %514 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !14
  %call.i10357 = call %union.tree_node* @size_int_type_wide(i64 %conv4866, %union.tree_node* %514) #1
  %call4868 = call fastcc %union.tree_node* @const_binop(i32 83, %union.tree_node* %call4859, %union.tree_node* %call.i10357)
  %515 = load %union.tree_node** %type4861, align 8, !tbaa !11
  %call4873 = call %union.tree_node* @convert(%union.tree_node* %515, %union.tree_node* %call4868) #1
  %call4874 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 88, %union.tree_node* %515, %union.tree_node* %call4775, %union.tree_node* %call4873) #1
  %call4875 = call %union.tree_node* @fold(%union.tree_node* %call4874)
  br label %if.end4876

if.end4876:                                       ; preds = %land.lhs.true4794, %if.end4853, %if.then4766
  %newconst4768.0 = phi %union.tree_node* [ %call4875, %if.end4853 ], [ %call4775, %land.lhs.true4794 ], [ %call4775, %if.then4766 ]
  %cmp4877 = icmp eq i32 %constopnum.1, 0
  %cond4882 = select i1 %cmp4877, %union.tree_node* %newconst4768.0, %union.tree_node* %call4784
  %cmp4883 = icmp eq i32 %constopnum.1, 1
  %cond4888 = select i1 %cmp4883, %union.tree_node* %newconst4768.0, %union.tree_node* %call4784
  %call4889 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %code.7, %union.tree_node* %0, %union.tree_node* %cond4882, %union.tree_node* %cond4888) #1
  br label %return

if.end4892:                                       ; preds = %if.end4505, %land.lhs.true4526, %land.lhs.true4749, %if.then4713, %land.lhs.true4569, %if.then4533, %land.lhs.true4760, %land.lhs.true4580
  %type4895 = getelementptr inbounds %union.tree_node* %arg1.8, i64 0, i32 0, i32 0, i32 1
  %516 = load %union.tree_node** %type4895, align 8, !tbaa !11
  %type4896 = bitcast %union.tree_node* %516 to %struct.tree_type*
  %mode4897 = getelementptr inbounds %struct.tree_type* %type4896, i64 0, i32 6
  %bf.load4898 = load i32* %mode4897, align 4
  %bf.lshr4899 = lshr i32 %bf.load4898, 9
  %bf.clear4900 = and i32 %bf.lshr4899, 127
  %idxprom49019693 = zext i32 %bf.clear4900 to i64
  %arrayidx4902 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom49019693
  %517 = load i16* %arrayidx4902, align 2, !tbaa !22
  %conv4903 = zext i16 %517 to i32
  %bf.clear4907 = and i32 %bf.load4511, 255
  %cmp4908 = icmp eq i32 %bf.clear4907, 25
  br i1 %cmp4908, label %land.lhs.true4910, label %if.end5215

land.lhs.true4910:                                ; preds = %if.end4892
  %bf.clear4915 = and i32 %bf.load4511, 262144
  %tobool4916 = icmp eq i32 %bf.clear4915, 0
  %cmp4918 = icmp ult i16 %517, 65
  %or.cond7789 = and i1 %tobool4916, %cmp4918
  br i1 %or.cond7789, label %land.lhs.true4920, label %if.end5215

land.lhs.true4920:                                ; preds = %land.lhs.true4910
  %code4924 = getelementptr inbounds %union.tree_node* %516, i64 0, i32 0, i32 0, i32 2
  %bf.load4925 = load i32* %code4924, align 8
  %bf.clear4926 = and i32 %bf.load4925, 255
  switch i32 %bf.clear4926, label %if.end5215 [
    i32 6, label %if.then4974
    i32 10, label %if.then4974
    i32 11, label %if.then4974
    i32 12, label %if.then4974
    i32 13, label %if.then4974
    i32 15, label %if.then4974
  ]

if.then4974:                                      ; preds = %land.lhs.true4920, %land.lhs.true4920, %land.lhs.true4920, %land.lhs.true4920, %land.lhs.true4920, %land.lhs.true4920
  %int_cst4976 = getelementptr inbounds %union.tree_node* %arg1.8, i64 0, i32 0, i32 2
  %high4977 = getelementptr inbounds i32* %int_cst4976, i64 2
  %518 = bitcast i32* %high4977 to i64*
  %519 = load i64* %518, align 8, !tbaa !10
  %cmp4978 = icmp eq i64 %519, 0
  br i1 %cmp4978, label %land.lhs.true4980, label %if.else5022

land.lhs.true4980:                                ; preds = %if.then4974
  %low4983 = bitcast i32* %int_cst4976 to i64*
  %520 = load i64* %low4983, align 8, !tbaa !1
  %sub4984 = add nsw i32 %conv4903, -1
  %sh_prom4985 = zext i32 %sub4984 to i64
  %shl4986 = shl i64 1, %sh_prom4985
  %sub4987 = add i64 %shl4986, -1
  %cmp4988 = icmp eq i64 %520, %sub4987
  br i1 %cmp4988, label %land.lhs.true4990, label %land.lhs.true5077

land.lhs.true4990:                                ; preds = %land.lhs.true4980
  %bf.clear4997 = and i32 %bf.load4925, 8192
  %tobool4998 = icmp eq i32 %bf.clear4997, 0
  br i1 %tobool4998, label %if.then4999, label %if.else5022

if.then4999:                                      ; preds = %land.lhs.true4990
  %bf.load5002 = load i32* %code3, align 8
  %bf.clear5003 = and i32 %bf.load5002, 255
  switch i32 %bf.clear5003, label %if.end5215 [
    i32 99, label %sw.bb5004
    i32 100, label %sw.bb5007
    i32 98, label %sw.bb5013
    i32 97, label %sw.bb5016
  ]

sw.bb5004:                                        ; preds = %if.then4999
  %521 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8, !tbaa !14
  %call5005 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %521) #1
  %call.i10335 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %call5005) #1
  %bf.load.i10337 = load i32* %constant_flag4518, align 8
  %bf.clear.i10338 = and i32 %bf.load.i10337, 256
  %tobool.i10339 = icmp eq i32 %bf.clear.i10338, 0
  br i1 %tobool.i10339, label %if.end.i10345, label %if.then.i10341

if.then.i10341:                                   ; preds = %sw.bb5004
  %call1.i10340 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 47, %union.tree_node* %0, %union.tree_node* %arg0.6, %union.tree_node* %call.i10335) #1
  br label %return

if.end.i10345:                                    ; preds = %sw.bb5004
  %code.i.i10342 = getelementptr inbounds %union.tree_node* %call.i10335, i64 0, i32 0, i32 0, i32 2
  %bf.load.i.i10343 = load i32* %code.i.i10342, align 8
  %bf.clear.i.i10344 = and i32 %bf.load.i.i10343, 255
  switch i32 %bf.clear.i.i10344, label %if.end.i.i10354 [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i.i10354:                                  ; preds = %if.end.i10345
  %type.i.i10346 = getelementptr inbounds %union.tree_node* %call.i10335, i64 0, i32 0, i32 0, i32 1
  %522 = load %union.tree_node** %type.i.i10346, align 8, !tbaa !11
  %call.i.i10347 = call %union.tree_node* @build1(i32 116, %union.tree_node* %522, %union.tree_node* %call.i10335) #1
  %bf.load26.i.i10348 = load i32* %code.i.i10342, align 8
  %bf.clear27.i.i10349 = and i32 %bf.load26.i.i10348, 512
  %constant_flag29.i.i10350 = getelementptr inbounds %union.tree_node* %call.i.i10347, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i.i10351 = load i32* %constant_flag29.i.i10350, align 8
  %bf.clear31.i.i10352 = and i32 %bf.load30.i.i10351, -513
  %bf.set.i.i10353 = or i32 %bf.clear31.i.i10352, %bf.clear27.i.i10349
  store i32 %bf.set.i.i10353, i32* %constant_flag29.i.i10350, align 8
  br label %return

sw.bb5007:                                        ; preds = %if.then4999
  %bf.clear5011 = and i32 %bf.load5002, -256
  %bf.set5012 = or i32 %bf.clear5011, 101
  store i32 %bf.set5012, i32* %code3, align 8
  br label %if.end5215

sw.bb5013:                                        ; preds = %if.then4999
  %523 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 12), align 8, !tbaa !14
  %call5014 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %523) #1
  %call.i10313 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %call5014) #1
  %bf.load.i10315 = load i32* %constant_flag4518, align 8
  %bf.clear.i10316 = and i32 %bf.load.i10315, 256
  %tobool.i10317 = icmp eq i32 %bf.clear.i10316, 0
  br i1 %tobool.i10317, label %if.end.i10323, label %if.then.i10319

if.then.i10319:                                   ; preds = %sw.bb5013
  %call1.i10318 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 47, %union.tree_node* %0, %union.tree_node* %arg0.6, %union.tree_node* %call.i10313) #1
  br label %return

if.end.i10323:                                    ; preds = %sw.bb5013
  %code.i.i10320 = getelementptr inbounds %union.tree_node* %call.i10313, i64 0, i32 0, i32 0, i32 2
  %bf.load.i.i10321 = load i32* %code.i.i10320, align 8
  %bf.clear.i.i10322 = and i32 %bf.load.i.i10321, 255
  switch i32 %bf.clear.i.i10322, label %if.end.i.i10332 [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i.i10332:                                  ; preds = %if.end.i10323
  %type.i.i10324 = getelementptr inbounds %union.tree_node* %call.i10313, i64 0, i32 0, i32 0, i32 1
  %524 = load %union.tree_node** %type.i.i10324, align 8, !tbaa !11
  %call.i.i10325 = call %union.tree_node* @build1(i32 116, %union.tree_node* %524, %union.tree_node* %call.i10313) #1
  %bf.load26.i.i10326 = load i32* %code.i.i10320, align 8
  %bf.clear27.i.i10327 = and i32 %bf.load26.i.i10326, 512
  %constant_flag29.i.i10328 = getelementptr inbounds %union.tree_node* %call.i.i10325, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i.i10329 = load i32* %constant_flag29.i.i10328, align 8
  %bf.clear31.i.i10330 = and i32 %bf.load30.i.i10329, -513
  %bf.set.i.i10331 = or i32 %bf.clear31.i.i10330, %bf.clear27.i.i10327
  store i32 %bf.set.i.i10331, i32* %constant_flag29.i.i10328, align 8
  br label %return

sw.bb5016:                                        ; preds = %if.then4999
  %bf.clear5020 = and i32 %bf.load5002, -256
  %bf.set5021 = or i32 %bf.clear5020, 102
  store i32 %bf.set5021, i32* %code3, align 8
  br label %if.end5215

if.else5022:                                      ; preds = %land.lhs.true4990, %if.then4974
  %cmp5026 = icmp eq i64 %519, -1
  br i1 %cmp5026, label %land.lhs.true5028, label %if.else5071

land.lhs.true5028:                                ; preds = %if.else5022
  %low5031 = bitcast i32* %int_cst4976 to i64*
  %525 = load i64* %low5031, align 8, !tbaa !1
  %sub5032 = add nsw i32 %conv4903, -1
  %sh_prom5033 = zext i32 %sub5032 to i64
  %shl5034 = shl i64 1, %sh_prom5033
  %cmp5035 = icmp eq i64 %525, %shl5034
  %bf.clear5044 = and i32 %bf.load4925, 8192
  %tobool5045 = icmp eq i32 %bf.clear5044, 0
  %or.cond11338 = and i1 %cmp5035, %tobool5045
  br i1 %or.cond11338, label %if.then5046, label %if.else5071

if.then5046:                                      ; preds = %land.lhs.true5028
  %bf.load5049 = load i32* %code3, align 8
  %bf.clear5050 = and i32 %bf.load5049, 255
  switch i32 %bf.clear5050, label %if.end5215 [
    i32 97, label %sw.bb5051
    i32 98, label %sw.bb5054
    i32 100, label %sw.bb5060
    i32 99, label %sw.bb5063
  ]

sw.bb5051:                                        ; preds = %if.then5046
  %526 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8, !tbaa !14
  %call5052 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %526) #1
  %call.i10291 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %call5052) #1
  %bf.load.i10293 = load i32* %constant_flag4518, align 8
  %bf.clear.i10294 = and i32 %bf.load.i10293, 256
  %tobool.i10295 = icmp eq i32 %bf.clear.i10294, 0
  br i1 %tobool.i10295, label %if.end.i10301, label %if.then.i10297

if.then.i10297:                                   ; preds = %sw.bb5051
  %call1.i10296 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 47, %union.tree_node* %0, %union.tree_node* %arg0.6, %union.tree_node* %call.i10291) #1
  br label %return

if.end.i10301:                                    ; preds = %sw.bb5051
  %code.i.i10298 = getelementptr inbounds %union.tree_node* %call.i10291, i64 0, i32 0, i32 0, i32 2
  %bf.load.i.i10299 = load i32* %code.i.i10298, align 8
  %bf.clear.i.i10300 = and i32 %bf.load.i.i10299, 255
  switch i32 %bf.clear.i.i10300, label %if.end.i.i10310 [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i.i10310:                                  ; preds = %if.end.i10301
  %type.i.i10302 = getelementptr inbounds %union.tree_node* %call.i10291, i64 0, i32 0, i32 0, i32 1
  %527 = load %union.tree_node** %type.i.i10302, align 8, !tbaa !11
  %call.i.i10303 = call %union.tree_node* @build1(i32 116, %union.tree_node* %527, %union.tree_node* %call.i10291) #1
  %bf.load26.i.i10304 = load i32* %code.i.i10298, align 8
  %bf.clear27.i.i10305 = and i32 %bf.load26.i.i10304, 512
  %constant_flag29.i.i10306 = getelementptr inbounds %union.tree_node* %call.i.i10303, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i.i10307 = load i32* %constant_flag29.i.i10306, align 8
  %bf.clear31.i.i10308 = and i32 %bf.load30.i.i10307, -513
  %bf.set.i.i10309 = or i32 %bf.clear31.i.i10308, %bf.clear27.i.i10305
  store i32 %bf.set.i.i10309, i32* %constant_flag29.i.i10306, align 8
  br label %return

sw.bb5054:                                        ; preds = %if.then5046
  %bf.clear5058 = and i32 %bf.load5049, -256
  %bf.set5059 = or i32 %bf.clear5058, 101
  store i32 %bf.set5059, i32* %code3, align 8
  br label %if.end5215

sw.bb5060:                                        ; preds = %if.then5046
  %528 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 12), align 8, !tbaa !14
  %call5061 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %528) #1
  %call.i10269 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %call5061) #1
  %bf.load.i10271 = load i32* %constant_flag4518, align 8
  %bf.clear.i10272 = and i32 %bf.load.i10271, 256
  %tobool.i10273 = icmp eq i32 %bf.clear.i10272, 0
  br i1 %tobool.i10273, label %if.end.i10279, label %if.then.i10275

if.then.i10275:                                   ; preds = %sw.bb5060
  %call1.i10274 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 47, %union.tree_node* %0, %union.tree_node* %arg0.6, %union.tree_node* %call.i10269) #1
  br label %return

if.end.i10279:                                    ; preds = %sw.bb5060
  %code.i.i10276 = getelementptr inbounds %union.tree_node* %call.i10269, i64 0, i32 0, i32 0, i32 2
  %bf.load.i.i10277 = load i32* %code.i.i10276, align 8
  %bf.clear.i.i10278 = and i32 %bf.load.i.i10277, 255
  switch i32 %bf.clear.i.i10278, label %if.end.i.i10288 [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i.i10288:                                  ; preds = %if.end.i10279
  %type.i.i10280 = getelementptr inbounds %union.tree_node* %call.i10269, i64 0, i32 0, i32 0, i32 1
  %529 = load %union.tree_node** %type.i.i10280, align 8, !tbaa !11
  %call.i.i10281 = call %union.tree_node* @build1(i32 116, %union.tree_node* %529, %union.tree_node* %call.i10269) #1
  %bf.load26.i.i10282 = load i32* %code.i.i10276, align 8
  %bf.clear27.i.i10283 = and i32 %bf.load26.i.i10282, 512
  %constant_flag29.i.i10284 = getelementptr inbounds %union.tree_node* %call.i.i10281, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i.i10285 = load i32* %constant_flag29.i.i10284, align 8
  %bf.clear31.i.i10286 = and i32 %bf.load30.i.i10285, -513
  %bf.set.i.i10287 = or i32 %bf.clear31.i.i10286, %bf.clear27.i.i10283
  store i32 %bf.set.i.i10287, i32* %constant_flag29.i.i10284, align 8
  br label %return

sw.bb5063:                                        ; preds = %if.then5046
  %bf.clear5067 = and i32 %bf.load5049, -256
  %bf.set5068 = or i32 %bf.clear5067, 102
  store i32 %bf.set5068, i32* %code3, align 8
  br label %if.end5215

if.else5071:                                      ; preds = %land.lhs.true5028, %if.else5022
  br i1 %cmp4978, label %land.lhs.true5077, label %if.end5215

land.lhs.true5077:                                ; preds = %land.lhs.true4980, %if.else5071
  %low5080 = bitcast i32* %int_cst4976 to i64*
  %530 = load i64* %low5080, align 8, !tbaa !1
  %sub5081 = add nsw i32 %conv4903, -1
  %sh_prom5082 = zext i32 %sub5081 to i64
  %shl5083 = shl i64 1, %sh_prom5082
  %sub5084 = add i64 %shl5083, -1
  %cmp5085 = icmp ne i64 %530, %sub5084
  %bf.clear5094 = and i32 %bf.load4925, 8192
  %tobool5095 = icmp eq i32 %bf.clear5094, 0
  %or.cond11340 = or i1 %cmp5085, %tobool5095
  br i1 %or.cond11340, label %land.lhs.true5167, label %land.lhs.true5096

land.lhs.true5096:                                ; preds = %land.lhs.true5077
  switch i32 %bf.clear4926, label %land.lhs.true5167 [
    i32 6, label %if.then5132
    i32 10, label %if.then5132
    i32 11, label %if.then5132
    i32 12, label %if.then5132
  ]

if.then5132:                                      ; preds = %land.lhs.true5096, %land.lhs.true5096, %land.lhs.true5096, %land.lhs.true5096
  %bf.load5135 = load i32* %code3, align 8
  %bf.clear5136 = and i32 %bf.load5135, 255
  switch i32 %bf.clear5136, label %if.end5215 [
    i32 98, label %sw.bb5137
    i32 99, label %sw.bb5148
  ]

sw.bb5137:                                        ; preds = %if.then5132
  %type5139 = getelementptr inbounds %union.tree_node* %arg0.6, i64 0, i32 0, i32 0, i32 1
  %531 = load %union.tree_node** %type5139, align 8, !tbaa !11
  %call5140 = call %union.tree_node* @signed_type(%union.tree_node* %531) #1
  %call5141 = call %union.tree_node* @convert(%union.tree_node* %call5140, %union.tree_node* %arg0.6) #1
  %532 = load %union.tree_node** %type4895, align 8, !tbaa !11
  %call5144 = call %union.tree_node* @signed_type(%union.tree_node* %532) #1
  %533 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8, !tbaa !14
  %call5145 = call %union.tree_node* @convert(%union.tree_node* %call5144, %union.tree_node* %533) #1
  %call5146 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 100, %union.tree_node* %0, %union.tree_node* %call5141, %union.tree_node* %call5145) #1
  %call5147 = call %union.tree_node* @fold(%union.tree_node* %call5146)
  br label %return

sw.bb5148:                                        ; preds = %if.then5132
  %type5150 = getelementptr inbounds %union.tree_node* %arg0.6, i64 0, i32 0, i32 0, i32 1
  %534 = load %union.tree_node** %type5150, align 8, !tbaa !11
  %call5151 = call %union.tree_node* @signed_type(%union.tree_node* %534) #1
  %call5152 = call %union.tree_node* @convert(%union.tree_node* %call5151, %union.tree_node* %arg0.6) #1
  %535 = load %union.tree_node** %type4895, align 8, !tbaa !11
  %call5155 = call %union.tree_node* @signed_type(%union.tree_node* %535) #1
  %536 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8, !tbaa !14
  %call5156 = call %union.tree_node* @convert(%union.tree_node* %call5155, %union.tree_node* %536) #1
  %call5157 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 97, %union.tree_node* %0, %union.tree_node* %call5152, %union.tree_node* %call5156) #1
  %call5158 = call %union.tree_node* @fold(%union.tree_node* %call5157)
  br label %return

land.lhs.true5167:                                ; preds = %land.lhs.true5077, %land.lhs.true5096
  %shl5173 = shl i64 2, %sh_prom5082
  %sub5174 = add i64 %shl5173, -1
  %cmp5175 = icmp ne i64 %530, %sub5174
  %bf.clear5184 = and i32 %bf.load4925, 8192
  %tobool5185 = icmp eq i32 %bf.clear5184, 0
  %or.cond11342 = or i1 %cmp5175, %tobool5185
  br i1 %or.cond11342, label %if.end5215, label %if.then5186

if.then5186:                                      ; preds = %land.lhs.true5167
  %bf.load5189 = load i32* %code3, align 8
  %bf.clear5190 = and i32 %bf.load5189, 255
  switch i32 %bf.clear5190, label %if.end5215 [
    i32 99, label %sw.bb5191
    i32 100, label %sw.bb5194
    i32 98, label %sw.bb5200
    i32 97, label %sw.bb5203
  ]

sw.bb5191:                                        ; preds = %if.then5186
  %537 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8, !tbaa !14
  %call5192 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %537) #1
  %call.i10247 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %call5192) #1
  %bf.load.i10249 = load i32* %constant_flag4518, align 8
  %bf.clear.i10250 = and i32 %bf.load.i10249, 256
  %tobool.i10251 = icmp eq i32 %bf.clear.i10250, 0
  br i1 %tobool.i10251, label %if.end.i10257, label %if.then.i10253

if.then.i10253:                                   ; preds = %sw.bb5191
  %call1.i10252 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 47, %union.tree_node* %0, %union.tree_node* %arg0.6, %union.tree_node* %call.i10247) #1
  br label %return

if.end.i10257:                                    ; preds = %sw.bb5191
  %code.i.i10254 = getelementptr inbounds %union.tree_node* %call.i10247, i64 0, i32 0, i32 0, i32 2
  %bf.load.i.i10255 = load i32* %code.i.i10254, align 8
  %bf.clear.i.i10256 = and i32 %bf.load.i.i10255, 255
  switch i32 %bf.clear.i.i10256, label %if.end.i.i10266 [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i.i10266:                                  ; preds = %if.end.i10257
  %type.i.i10258 = getelementptr inbounds %union.tree_node* %call.i10247, i64 0, i32 0, i32 0, i32 1
  %538 = load %union.tree_node** %type.i.i10258, align 8, !tbaa !11
  %call.i.i10259 = call %union.tree_node* @build1(i32 116, %union.tree_node* %538, %union.tree_node* %call.i10247) #1
  %bf.load26.i.i10260 = load i32* %code.i.i10254, align 8
  %bf.clear27.i.i10261 = and i32 %bf.load26.i.i10260, 512
  %constant_flag29.i.i10262 = getelementptr inbounds %union.tree_node* %call.i.i10259, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i.i10263 = load i32* %constant_flag29.i.i10262, align 8
  %bf.clear31.i.i10264 = and i32 %bf.load30.i.i10263, -513
  %bf.set.i.i10265 = or i32 %bf.clear31.i.i10264, %bf.clear27.i.i10261
  store i32 %bf.set.i.i10265, i32* %constant_flag29.i.i10262, align 8
  br label %return

sw.bb5194:                                        ; preds = %if.then5186
  %bf.clear5198 = and i32 %bf.load5189, -256
  %bf.set5199 = or i32 %bf.clear5198, 101
  store i32 %bf.set5199, i32* %code3, align 8
  br label %if.end5215

sw.bb5200:                                        ; preds = %if.then5186
  %539 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 12), align 8, !tbaa !14
  %call5201 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %539) #1
  %call.i10225 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %call5201) #1
  %bf.load.i10227 = load i32* %constant_flag4518, align 8
  %bf.clear.i10228 = and i32 %bf.load.i10227, 256
  %tobool.i10229 = icmp eq i32 %bf.clear.i10228, 0
  br i1 %tobool.i10229, label %if.end.i10235, label %if.then.i10231

if.then.i10231:                                   ; preds = %sw.bb5200
  %call1.i10230 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 47, %union.tree_node* %0, %union.tree_node* %arg0.6, %union.tree_node* %call.i10225) #1
  br label %return

if.end.i10235:                                    ; preds = %sw.bb5200
  %code.i.i10232 = getelementptr inbounds %union.tree_node* %call.i10225, i64 0, i32 0, i32 0, i32 2
  %bf.load.i.i10233 = load i32* %code.i.i10232, align 8
  %bf.clear.i.i10234 = and i32 %bf.load.i.i10233, 255
  switch i32 %bf.clear.i.i10234, label %if.end.i.i10244 [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i.i10244:                                  ; preds = %if.end.i10235
  %type.i.i10236 = getelementptr inbounds %union.tree_node* %call.i10225, i64 0, i32 0, i32 0, i32 1
  %540 = load %union.tree_node** %type.i.i10236, align 8, !tbaa !11
  %call.i.i10237 = call %union.tree_node* @build1(i32 116, %union.tree_node* %540, %union.tree_node* %call.i10225) #1
  %bf.load26.i.i10238 = load i32* %code.i.i10232, align 8
  %bf.clear27.i.i10239 = and i32 %bf.load26.i.i10238, 512
  %constant_flag29.i.i10240 = getelementptr inbounds %union.tree_node* %call.i.i10237, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i.i10241 = load i32* %constant_flag29.i.i10240, align 8
  %bf.clear31.i.i10242 = and i32 %bf.load30.i.i10241, -513
  %bf.set.i.i10243 = or i32 %bf.clear31.i.i10242, %bf.clear27.i.i10239
  store i32 %bf.set.i.i10243, i32* %constant_flag29.i.i10240, align 8
  br label %return

sw.bb5203:                                        ; preds = %if.then5186
  %bf.clear5207 = and i32 %bf.load5189, -256
  %bf.set5208 = or i32 %bf.clear5207, 102
  store i32 %bf.set5208, i32* %code3, align 8
  br label %if.end5215

if.end5215:                                       ; preds = %land.lhs.true5167, %if.else5071, %land.lhs.true4920, %if.then4999, %sw.bb5016, %sw.bb5007, %if.then5132, %sw.bb5194, %sw.bb5203, %if.then5186, %sw.bb5054, %sw.bb5063, %if.then5046, %land.lhs.true4910, %if.end4892
  %bf.load5218 = load i32* %constant_flag4510, align 8
  %bf.clear5219 = and i32 %bf.load5218, 255
  %cmp5220 = icmp eq i32 %bf.clear5219, 25
  br i1 %cmp5220, label %land.lhs.true5222, label %if.end5252

land.lhs.true5222:                                ; preds = %if.end5215
  %bf.load5225 = load i32* %constant_flag4518, align 8
  %bf.clear5226 = and i32 %bf.load5225, 255
  %cmp5227 = icmp eq i32 %bf.clear5226, 25
  br i1 %cmp5227, label %if.end5252, label %land.lhs.true5229

land.lhs.true5229:                                ; preds = %land.lhs.true5222
  %call5230 = call i32 @tree_int_cst_sgn(%union.tree_node* %arg1.8) #1
  %cmp5231 = icmp sgt i32 %call5230, 0
  br i1 %cmp5231, label %if.then5233, label %if.end5252

if.then5233:                                      ; preds = %land.lhs.true5229
  %bf.load5236 = load i32* %code3, align 8
  %bf.clear5237 = and i32 %bf.load5236, 255
  switch i32 %bf.clear5237, label %if.end5252 [
    i32 100, label %sw.bb5238
    i32 97, label %sw.bb5244
  ]

sw.bb5238:                                        ; preds = %if.then5233
  %541 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 12), align 8, !tbaa !14
  %call5239 = call fastcc %union.tree_node* @const_binop(i32 60, %union.tree_node* %arg1.8, %union.tree_node* %541)
  %operands5241 = getelementptr inbounds %union.tree_node* %expr, i64 0, i32 0, i32 2
  %arrayidx5242 = bitcast i32* %operands5241 to %union.tree_node**
  %542 = load %union.tree_node** %arrayidx5242, align 8, !tbaa !14
  %call5243 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 99, %union.tree_node* %0, %union.tree_node* %542, %union.tree_node* %call5239) #1
  br label %if.end5252

sw.bb5244:                                        ; preds = %if.then5233
  %543 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 12), align 8, !tbaa !14
  %call5245 = call fastcc %union.tree_node* @const_binop(i32 60, %union.tree_node* %arg1.8, %union.tree_node* %543)
  %operands5247 = getelementptr inbounds %union.tree_node* %expr, i64 0, i32 0, i32 2
  %arrayidx5248 = bitcast i32* %operands5247 to %union.tree_node**
  %544 = load %union.tree_node** %arrayidx5248, align 8, !tbaa !14
  %call5249 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 98, %union.tree_node* %0, %union.tree_node* %544, %union.tree_node* %call5245) #1
  br label %if.end5252

if.end5252:                                       ; preds = %land.lhs.true5222, %sw.bb5238, %sw.bb5244, %if.then5233, %land.lhs.true5229, %if.end5215
  %code.8 = phi i32 [ %code.7, %if.then5233 ], [ 98, %sw.bb5244 ], [ 99, %sw.bb5238 ], [ %code.7, %land.lhs.true5229 ], [ %code.7, %land.lhs.true5222 ], [ %code.7, %if.end5215 ]
  %arg1.9 = phi %union.tree_node* [ %arg1.8, %if.then5233 ], [ %call5245, %sw.bb5244 ], [ %call5239, %sw.bb5238 ], [ %arg1.8, %land.lhs.true5229 ], [ %arg1.8, %land.lhs.true5222 ], [ %arg1.8, %if.end5215 ]
  %t.6 = phi %union.tree_node* [ %expr, %if.then5233 ], [ %call5249, %sw.bb5244 ], [ %call5243, %sw.bb5238 ], [ %expr, %land.lhs.true5229 ], [ %expr, %land.lhs.true5222 ], [ %expr, %if.end5215 ]
  %call5253 = call i32 @integer_zerop(%union.tree_node* %arg1.9) #1
  %tobool5254 = icmp eq i32 %call5253, 0
  br i1 %tobool5254, label %if.end5343, label %land.lhs.true5255

land.lhs.true5255:                                ; preds = %if.end5252
  %type5257 = getelementptr inbounds %union.tree_node* %arg1.9, i64 0, i32 0, i32 0, i32 1
  %545 = load %union.tree_node** %type5257, align 8, !tbaa !11
  %code5259 = getelementptr inbounds %union.tree_node* %545, i64 0, i32 0, i32 0, i32 2
  %bf.load5260 = load i32* %code5259, align 8
  %bf.clear5261 = and i32 %bf.load5260, 255
  switch i32 %bf.clear5261, label %if.end5343 [
    i32 6, label %land.lhs.true5309
    i32 10, label %land.lhs.true5309
    i32 11, label %land.lhs.true5309
    i32 12, label %land.lhs.true5309
    i32 13, label %land.lhs.true5309
    i32 15, label %land.lhs.true5309
  ]

land.lhs.true5309:                                ; preds = %land.lhs.true5255, %land.lhs.true5255, %land.lhs.true5255, %land.lhs.true5255, %land.lhs.true5255, %land.lhs.true5255
  %bf.clear5316 = and i32 %bf.load5260, 8192
  %tobool5317 = icmp eq i32 %bf.clear5316, 0
  br i1 %tobool5317, label %if.end5343, label %if.then5318

if.then5318:                                      ; preds = %land.lhs.true5309
  %code5320 = getelementptr inbounds %union.tree_node* %t.6, i64 0, i32 0, i32 0, i32 2
  %bf.load5321 = load i32* %code5320, align 8
  %bf.clear5322 = and i32 %bf.load5321, 255
  switch i32 %bf.clear5322, label %if.end5343 [
    i32 99, label %sw.bb5323
    i32 98, label %sw.bb5329
    i32 100, label %sw.bb5335
    i32 97, label %sw.bb5338
  ]

sw.bb5323:                                        ; preds = %if.then5318
  %bf.clear5327 = and i32 %bf.load5321, -256
  %bf.set5328 = or i32 %bf.clear5327, 102
  br label %if.end5343.thread

sw.bb5329:                                        ; preds = %if.then5318
  %bf.clear5333 = and i32 %bf.load5321, -256
  %bf.set5334 = or i32 %bf.clear5333, 101
  br label %if.end5343.thread

sw.bb5335:                                        ; preds = %if.then5318
  %546 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 12), align 8, !tbaa !14
  %call5336 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %546) #1
  %call.i10203 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %call5336) #1
  %bf.load.i10205 = load i32* %constant_flag4518, align 8
  %bf.clear.i10206 = and i32 %bf.load.i10205, 256
  %tobool.i10207 = icmp eq i32 %bf.clear.i10206, 0
  br i1 %tobool.i10207, label %if.end.i10213, label %if.then.i10209

if.then.i10209:                                   ; preds = %sw.bb5335
  %call1.i10208 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 47, %union.tree_node* %0, %union.tree_node* %arg0.6, %union.tree_node* %call.i10203) #1
  br label %return

if.end.i10213:                                    ; preds = %sw.bb5335
  %code.i.i10210 = getelementptr inbounds %union.tree_node* %call.i10203, i64 0, i32 0, i32 0, i32 2
  %bf.load.i.i10211 = load i32* %code.i.i10210, align 8
  %bf.clear.i.i10212 = and i32 %bf.load.i.i10211, 255
  switch i32 %bf.clear.i.i10212, label %if.end.i.i10222 [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i.i10222:                                  ; preds = %if.end.i10213
  %type.i.i10214 = getelementptr inbounds %union.tree_node* %call.i10203, i64 0, i32 0, i32 0, i32 1
  %547 = load %union.tree_node** %type.i.i10214, align 8, !tbaa !11
  %call.i.i10215 = call %union.tree_node* @build1(i32 116, %union.tree_node* %547, %union.tree_node* %call.i10203) #1
  %bf.load26.i.i10216 = load i32* %code.i.i10210, align 8
  %bf.clear27.i.i10217 = and i32 %bf.load26.i.i10216, 512
  %constant_flag29.i.i10218 = getelementptr inbounds %union.tree_node* %call.i.i10215, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i.i10219 = load i32* %constant_flag29.i.i10218, align 8
  %bf.clear31.i.i10220 = and i32 %bf.load30.i.i10219, -513
  %bf.set.i.i10221 = or i32 %bf.clear31.i.i10220, %bf.clear27.i.i10217
  store i32 %bf.set.i.i10221, i32* %constant_flag29.i.i10218, align 8
  br label %return

sw.bb5338:                                        ; preds = %if.then5318
  %548 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8, !tbaa !14
  %call5339 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %548) #1
  %call.i10181 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %call5339) #1
  %bf.load.i10183 = load i32* %constant_flag4518, align 8
  %bf.clear.i10184 = and i32 %bf.load.i10183, 256
  %tobool.i10185 = icmp eq i32 %bf.clear.i10184, 0
  br i1 %tobool.i10185, label %if.end.i10191, label %if.then.i10187

if.then.i10187:                                   ; preds = %sw.bb5338
  %call1.i10186 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 47, %union.tree_node* %0, %union.tree_node* %arg0.6, %union.tree_node* %call.i10181) #1
  br label %return

if.end.i10191:                                    ; preds = %sw.bb5338
  %code.i.i10188 = getelementptr inbounds %union.tree_node* %call.i10181, i64 0, i32 0, i32 0, i32 2
  %bf.load.i.i10189 = load i32* %code.i.i10188, align 8
  %bf.clear.i.i10190 = and i32 %bf.load.i.i10189, 255
  switch i32 %bf.clear.i.i10190, label %if.end.i.i10200 [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i.i10200:                                  ; preds = %if.end.i10191
  %type.i.i10192 = getelementptr inbounds %union.tree_node* %call.i10181, i64 0, i32 0, i32 0, i32 1
  %549 = load %union.tree_node** %type.i.i10192, align 8, !tbaa !11
  %call.i.i10193 = call %union.tree_node* @build1(i32 116, %union.tree_node* %549, %union.tree_node* %call.i10181) #1
  %bf.load26.i.i10194 = load i32* %code.i.i10188, align 8
  %bf.clear27.i.i10195 = and i32 %bf.load26.i.i10194, 512
  %constant_flag29.i.i10196 = getelementptr inbounds %union.tree_node* %call.i.i10193, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i.i10197 = load i32* %constant_flag29.i.i10196, align 8
  %bf.clear31.i.i10198 = and i32 %bf.load30.i.i10197, -513
  %bf.set.i.i10199 = or i32 %bf.clear31.i.i10198, %bf.clear27.i.i10195
  store i32 %bf.set.i.i10199, i32* %constant_flag29.i.i10196, align 8
  br label %return

if.end5343.thread:                                ; preds = %sw.bb5329, %sw.bb5323
  %storemerge = phi i32 [ %bf.set5334, %sw.bb5329 ], [ %bf.set5328, %sw.bb5323 ]
  %code.9.ph = phi i32 [ 101, %sw.bb5329 ], [ 102, %sw.bb5323 ]
  store i32 %storemerge, i32* %code5320, align 8
  %cmp534411184 = icmp eq i32 %code.9.ph, 101
  %cmp534711185 = icmp eq i32 %code.9.ph, 102
  %code.9.off11186 = add i32 %code.9.ph, -101
  %550 = icmp ult i32 %code.9.off11186, 2
  br label %land.lhs.true5349

if.end5343:                                       ; preds = %land.lhs.true5255, %land.lhs.true5309, %if.end5252, %if.then5318
  %cmp5344 = icmp eq i32 %code.8, 101
  %cmp5347 = icmp eq i32 %code.8, 102
  %code.9.off = add i32 %code.8, -101
  %551 = icmp ult i32 %code.9.off, 2
  br i1 %551, label %land.lhs.true5349, label %if.else5476

land.lhs.true5349:                                ; preds = %if.end5343.thread, %if.end5343
  %552 = phi i1 [ %550, %if.end5343.thread ], [ true, %if.end5343 ]
  %cmp534711193 = phi i1 [ %cmp534711185, %if.end5343.thread ], [ %cmp5347, %if.end5343 ]
  %cmp534411191 = phi i1 [ %cmp534411184, %if.end5343.thread ], [ %cmp5344, %if.end5343 ]
  %code.911187 = phi i32 [ %code.9.ph, %if.end5343.thread ], [ %code.8, %if.end5343 ]
  %code5351 = getelementptr inbounds %union.tree_node* %arg1.9, i64 0, i32 0, i32 0, i32 2
  %bf.load5352 = load i32* %code5351, align 8
  %bf.clear5353 = and i32 %bf.load5352, 255
  %cmp5354 = icmp eq i32 %bf.clear5353, 25
  br i1 %cmp5354, label %land.lhs.true5356, label %if.else5407

land.lhs.true5356:                                ; preds = %land.lhs.true5349
  %bf.load5359 = load i32* %constant_flag4518, align 8
  %bf.clear5360 = and i32 %bf.load5359, 255
  %bf.clear5360.off = add i32 %bf.clear5360, -59
  %switch9798 = icmp ult i32 %bf.clear5360.off, 2
  br i1 %switch9798, label %land.lhs.true5370, label %if.else5407

land.lhs.true5370:                                ; preds = %land.lhs.true5356
  %operands5372 = getelementptr inbounds %union.tree_node* %arg0.6, i64 0, i32 0, i32 2
  %arrayidx5373 = getelementptr inbounds i32* %operands5372, i64 2
  %553 = bitcast i32* %arrayidx5373 to %union.tree_node**
  %554 = load %union.tree_node** %553, align 8, !tbaa !14
  %code5375 = getelementptr inbounds %union.tree_node* %554, i64 0, i32 0, i32 0, i32 2
  %bf.load5376 = load i32* %code5375, align 8
  %bf.clear5377 = and i32 %bf.load5376, 255
  %cmp5378 = icmp eq i32 %bf.clear5377, 25
  br i1 %cmp5378, label %land.lhs.true5380, label %if.else5407

land.lhs.true5380:                                ; preds = %land.lhs.true5370
  %cmp5385 = icmp eq i32 %bf.clear5360, 59
  %cond5387 = select i1 %cmp5385, i32 60, i32 59
  %call5391 = call fastcc %union.tree_node* @const_binop(i32 %cond5387, %union.tree_node* %arg1.9, %union.tree_node* %554)
  %cmp5392 = icmp eq %union.tree_node* %call5391, null
  br i1 %cmp5392, label %if.else5407, label %land.lhs.true5394

land.lhs.true5394:                                ; preds = %land.lhs.true5380
  %static_flag5396 = getelementptr inbounds %union.tree_node* %call5391, i64 0, i32 0, i32 0, i32 2
  %bf.load5397 = load i32* %static_flag5396, align 8
  %bf.clear5399 = and i32 %bf.load5397, 262144
  %tobool5400 = icmp eq i32 %bf.clear5399, 0
  br i1 %tobool5400, label %if.then5401, label %if.else5407

if.then5401:                                      ; preds = %land.lhs.true5394
  %arrayidx5404 = bitcast i32* %operands5372 to %union.tree_node**
  %555 = load %union.tree_node** %arrayidx5404, align 8, !tbaa !14
  %call5405 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %code.911187, %union.tree_node* %0, %union.tree_node* %555, %union.tree_node* %call5391) #1
  %call5406 = call %union.tree_node* @fold(%union.tree_node* %call5405)
  br label %return

if.else5407:                                      ; preds = %land.lhs.true5356, %land.lhs.true5394, %land.lhs.true5380, %land.lhs.true5370, %land.lhs.true5349
  br i1 %552, label %land.lhs.true5413, label %if.else5476

land.lhs.true5413:                                ; preds = %if.else5407
  %bf.load5416 = load i32* %constant_flag4518, align 8
  %bf.clear5417 = and i32 %bf.load5416, 255
  %cmp5418 = icmp eq i32 %bf.clear5417, 77
  br i1 %cmp5418, label %land.lhs.true5420, label %land.lhs.true5457

land.lhs.true5420:                                ; preds = %land.lhs.true5413
  %bf.load5423 = load i32* %code5351, align 8
  %bf.clear5424 = and i32 %bf.load5423, 255
  %cmp5425 = icmp eq i32 %bf.clear5424, 25
  br i1 %cmp5425, label %land.lhs.true5427, label %land.lhs.true5457

land.lhs.true5427:                                ; preds = %land.lhs.true5420
  %call5428 = call fastcc %union.tree_node* @negate_expr(%union.tree_node* %arg1.9)
  %cmp5429 = icmp eq %union.tree_node* %call5428, null
  br i1 %cmp5429, label %land.lhs.true5457, label %land.lhs.true5431

land.lhs.true5431:                                ; preds = %land.lhs.true5427
  %code5433 = getelementptr inbounds %union.tree_node* %call5428, i64 0, i32 0, i32 0, i32 2
  %bf.load5434 = load i32* %code5433, align 8
  %556 = and i32 %bf.load5434, 262399
  %557 = icmp eq i32 %556, 25
  br i1 %557, label %if.then5445, label %land.lhs.true5457

if.then5445:                                      ; preds = %land.lhs.true5431
  %operands5447 = getelementptr inbounds %union.tree_node* %arg0.6, i64 0, i32 0, i32 2
  %arrayidx5448 = bitcast i32* %operands5447 to %union.tree_node**
  %558 = load %union.tree_node** %arrayidx5448, align 8, !tbaa !14
  %call5449 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %code.911187, %union.tree_node* %0, %union.tree_node* %558, %union.tree_node* %call5428) #1
  %call5450 = call %union.tree_node* @fold(%union.tree_node* %call5449)
  br label %return

land.lhs.true5457:                                ; preds = %land.lhs.true5420, %land.lhs.true5431, %land.lhs.true5427, %land.lhs.true5413
  %call5458 = call i32 @integer_zerop(%union.tree_node* %arg1.9) #1
  %tobool5459 = icmp eq i32 %call5458, 0
  br i1 %tobool5459, label %if.else5476, label %land.lhs.true5460

land.lhs.true5460:                                ; preds = %land.lhs.true5457
  %bf.load5463 = load i32* %constant_flag4518, align 8
  %bf.clear5464 = and i32 %bf.load5463, 255
  %cmp5465 = icmp eq i32 %bf.clear5464, 60
  br i1 %cmp5465, label %if.then5467, label %if.else5476

if.then5467:                                      ; preds = %land.lhs.true5460
  %operands5469 = getelementptr inbounds %union.tree_node* %arg0.6, i64 0, i32 0, i32 2
  %arrayidx5470 = bitcast i32* %operands5469 to %union.tree_node**
  %559 = load %union.tree_node** %arrayidx5470, align 8, !tbaa !14
  %arrayidx5473 = getelementptr inbounds i32* %operands5469, i64 2
  %560 = bitcast i32* %arrayidx5473 to %union.tree_node**
  %561 = load %union.tree_node** %560, align 8, !tbaa !14
  %call5474 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %code.911187, %union.tree_node* %0, %union.tree_node* %559, %union.tree_node* %561) #1
  %call5475 = call %union.tree_node* @fold(%union.tree_node* %call5474)
  br label %return

if.else5476:                                      ; preds = %if.else5407, %if.end5343, %land.lhs.true5457, %land.lhs.true5460
  %562 = phi i1 [ false, %if.else5407 ], [ false, %if.end5343 ], [ true, %land.lhs.true5457 ], [ true, %land.lhs.true5460 ]
  %cmp534711192 = phi i1 [ %cmp534711193, %if.else5407 ], [ %cmp5347, %if.end5343 ], [ %cmp534711193, %land.lhs.true5457 ], [ %cmp534711193, %land.lhs.true5460 ]
  %cmp534411190 = phi i1 [ %cmp534411191, %if.else5407 ], [ %cmp5344, %if.end5343 ], [ %cmp534411191, %land.lhs.true5457 ], [ %cmp534411191, %land.lhs.true5460 ]
  %code.911188 = phi i32 [ %code.911187, %if.else5407 ], [ %code.8, %if.end5343 ], [ %code.911187, %land.lhs.true5457 ], [ %code.911187, %land.lhs.true5460 ]
  %type5478 = getelementptr inbounds %union.tree_node* %arg0.6, i64 0, i32 0, i32 0, i32 1
  %563 = load %union.tree_node** %type5478, align 8, !tbaa !11
  %code5480 = getelementptr inbounds %union.tree_node* %563, i64 0, i32 0, i32 0, i32 2
  %bf.load5481 = load i32* %code5480, align 8
  %bf.clear5482 = and i32 %bf.load5481, 255
  %cmp5483 = icmp eq i32 %bf.clear5482, 6
  br i1 %cmp5483, label %land.lhs.true5485, label %if.else5527

land.lhs.true5485:                                ; preds = %if.else5476
  %bf.load5488 = load i32* %constant_flag4518, align 8
  %bf.clear5489 = and i32 %bf.load5488, 255
  %cmp5490 = icmp eq i32 %bf.clear5489, 115
  br i1 %cmp5490, label %land.lhs.true5492, label %if.else5527

land.lhs.true5492:                                ; preds = %land.lhs.true5485
  %call5493 = call %union.tree_node* @get_unwidened(%union.tree_node* %arg0.6, %union.tree_node* null) #1
  %cmp5494 = icmp eq %union.tree_node* %call5493, %arg0.6
  br i1 %cmp5494, label %if.else5527, label %land.lhs.true5496

land.lhs.true5496:                                ; preds = %land.lhs.true5492
  %type5498 = getelementptr inbounds %union.tree_node* %call5493, i64 0, i32 0, i32 0, i32 1
  %564 = load %union.tree_node** %type5498, align 8, !tbaa !11
  %call5499 = call %union.tree_node* @get_unwidened(%union.tree_node* %arg1.9, %union.tree_node* %564) #1
  %cmp5500 = icmp eq %union.tree_node* %call5499, null
  br i1 %cmp5500, label %if.else5527, label %land.lhs.true5502

land.lhs.true5502:                                ; preds = %land.lhs.true5496
  %type5504 = getelementptr inbounds %union.tree_node* %call5499, i64 0, i32 0, i32 0, i32 1
  %565 = load %union.tree_node** %type5504, align 8, !tbaa !11
  %566 = load %union.tree_node** %type5498, align 8, !tbaa !11
  %cmp5507 = icmp eq %union.tree_node* %565, %566
  br i1 %cmp5507, label %if.then5521, label %lor.lhs.false5509

lor.lhs.false5509:                                ; preds = %land.lhs.true5502
  %code5511 = getelementptr inbounds %union.tree_node* %call5499, i64 0, i32 0, i32 0, i32 2
  %bf.load5512 = load i32* %code5511, align 8
  %bf.clear5513 = and i32 %bf.load5512, 255
  %cmp5514 = icmp eq i32 %bf.clear5513, 25
  br i1 %cmp5514, label %land.lhs.true5516, label %if.else5527

land.lhs.true5516:                                ; preds = %lor.lhs.false5509
  %call5519 = call i32 @int_fits_type_p(%union.tree_node* %call5499, %union.tree_node* %566) #1
  %tobool5520 = icmp eq i32 %call5519, 0
  br i1 %tobool5520, label %if.else5527, label %land.lhs.true5516.if.then5521_crit_edge

land.lhs.true5516.if.then5521_crit_edge:          ; preds = %land.lhs.true5516
  %.pre11276 = load %union.tree_node** %type5498, align 8, !tbaa !11
  br label %if.then5521

if.then5521:                                      ; preds = %land.lhs.true5516.if.then5521_crit_edge, %land.lhs.true5502
  %567 = phi %union.tree_node* [ %.pre11276, %land.lhs.true5516.if.then5521_crit_edge ], [ %565, %land.lhs.true5502 ]
  %call5524 = call %union.tree_node* @convert(%union.tree_node* %567, %union.tree_node* %call5499) #1
  %call5525 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %code.911188, %union.tree_node* %0, %union.tree_node* %call5493, %union.tree_node* %call5524) #1
  %call5526 = call %union.tree_node* @fold(%union.tree_node* %call5525)
  br label %return

if.else5527:                                      ; preds = %land.lhs.true5516, %land.lhs.true5496, %land.lhs.true5492, %lor.lhs.false5509, %land.lhs.true5485, %if.else5476
  %code5529 = getelementptr inbounds %union.tree_node* %arg1.9, i64 0, i32 0, i32 0, i32 2
  %bf.load5530 = load i32* %code5529, align 8
  %bf.clear5531 = and i32 %bf.load5530, 255
  %cmp5532 = icmp eq i32 %bf.clear5531, 25
  br i1 %cmp5532, label %land.lhs.true5534, label %if.else5560

land.lhs.true5534:                                ; preds = %if.else5527
  %bf.load5537 = load i32* %constant_flag4518, align 8
  %568 = and i32 %bf.load5537, 254
  %switch9799 = icmp eq i32 %568, 78
  br i1 %switch9799, label %land.lhs.true5548, label %if.else5560

land.lhs.true5548:                                ; preds = %land.lhs.true5534
  %operands5550 = getelementptr inbounds %union.tree_node* %arg0.6, i64 0, i32 0, i32 2
  %arrayidx5551 = getelementptr inbounds i32* %operands5550, i64 2
  %569 = bitcast i32* %arrayidx5551 to %union.tree_node**
  %570 = load %union.tree_node** %569, align 8, !tbaa !14
  %code5553 = getelementptr inbounds %union.tree_node* %570, i64 0, i32 0, i32 0, i32 2
  %bf.load5554 = load i32* %code5553, align 8
  %bf.clear5555 = and i32 %bf.load5554, 255
  %cmp5556 = icmp eq i32 %bf.clear5555, 25
  br i1 %cmp5556, label %if.then5558, label %if.else5560

if.then5558:                                      ; preds = %land.lhs.true5548
  %call5559 = call fastcc %union.tree_node* @optimize_minmax_comparison(%union.tree_node* %t.6)
  br label %return

if.else5560:                                      ; preds = %land.lhs.true5534, %land.lhs.true5548, %if.else5527
  %cmp5561.not = icmp ne i32 %code.911188, 98
  %cmp5532.not = xor i1 %cmp5532, true
  %brmerge11343 = or i1 %cmp5561.not, %cmp5532.not
  br i1 %brmerge11343, label %if.end5618, label %land.lhs.true5570

land.lhs.true5570:                                ; preds = %if.else5560
  %bf.load5573 = load i32* %constant_flag4518, align 8
  %571 = and i32 %bf.load5573, 511
  %572 = icmp eq i32 %571, 80
  br i1 %572, label %land.lhs.true5584, label %if.end5618

land.lhs.true5584:                                ; preds = %land.lhs.true5570
  %call5585 = call fastcc %union.tree_node* @negate_expr(%union.tree_node* %arg1.9)
  %cmp5586 = icmp eq %union.tree_node* %call5585, null
  br i1 %cmp5586, label %if.end5618, label %land.lhs.true5588

land.lhs.true5588:                                ; preds = %land.lhs.true5584
  %code5590 = getelementptr inbounds %union.tree_node* %call5585, i64 0, i32 0, i32 0, i32 2
  %bf.load5591 = load i32* %code5590, align 8
  %573 = and i32 %bf.load5591, 262399
  %574 = icmp eq i32 %573, 25
  br i1 %574, label %if.then5602, label %if.end5618

if.then5602:                                      ; preds = %land.lhs.true5588
  %operands5604 = getelementptr inbounds %union.tree_node* %arg0.6, i64 0, i32 0, i32 2
  %arrayidx5605 = bitcast i32* %operands5604 to %union.tree_node**
  %575 = load %union.tree_node** %arrayidx5605, align 8, !tbaa !14
  %call5606 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 100, %union.tree_node* %0, %union.tree_node* %575, %union.tree_node* %call5585) #1
  %576 = load %union.tree_node** %arrayidx5605, align 8, !tbaa !14
  %call5610 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 98, %union.tree_node* %0, %union.tree_node* %576, %union.tree_node* %arg1.9) #1
  %call5611 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 91, %union.tree_node* %0, %union.tree_node* %call5606, %union.tree_node* %call5610) #1
  %call5612 = call %union.tree_node* @fold(%union.tree_node* %call5611)
  br label %return

if.end5618:                                       ; preds = %if.else5560, %land.lhs.true5584, %land.lhs.true5570, %land.lhs.true5588
  %call5619 = call i32 @integer_zerop(%union.tree_node* %arg1.9) #1
  %tobool5620 = icmp eq i32 %call5619, 0
  %.not = xor i1 %562, true
  %brmerge = or i1 %tobool5620, %.not
  br i1 %brmerge, label %if.end5722, label %land.lhs.true5627

land.lhs.true5627:                                ; preds = %if.end5618
  %bf.load5630 = load i32* %constant_flag4518, align 8
  %bf.clear5631 = and i32 %bf.load5630, 255
  %cmp5632 = icmp eq i32 %bf.clear5631, 88
  br i1 %cmp5632, label %if.then5634, label %if.end5722

if.then5634:                                      ; preds = %land.lhs.true5627
  %operands5636 = getelementptr inbounds %union.tree_node* %arg0.6, i64 0, i32 0, i32 2
  %arrayidx5637 = bitcast i32* %operands5636 to %union.tree_node**
  %577 = load %union.tree_node** %arrayidx5637, align 8, !tbaa !14
  %code5639 = getelementptr inbounds %union.tree_node* %577, i64 0, i32 0, i32 0, i32 2
  %bf.load5640 = load i32* %code5639, align 8
  %bf.clear5641 = and i32 %bf.load5640, 255
  %cmp5642 = icmp eq i32 %bf.clear5641, 82
  br i1 %cmp5642, label %land.lhs.true5644, label %if.else5677

land.lhs.true5644:                                ; preds = %if.then5634
  %operands5649 = getelementptr inbounds %union.tree_node* %577, i64 0, i32 0, i32 2
  %arrayidx5650 = bitcast i32* %operands5649 to %union.tree_node**
  %578 = load %union.tree_node** %arrayidx5650, align 8, !tbaa !14
  %call5651 = call i32 @integer_onep(%union.tree_node* %578) #1
  %tobool5652 = icmp eq i32 %call5651, 0
  br i1 %tobool5652, label %if.else5677, label %if.then5653

if.then5653:                                      ; preds = %land.lhs.true5644
  %579 = load %union.tree_node** %type5478, align 8, !tbaa !11
  %580 = load %union.tree_node** %arrayidx5637, align 8, !tbaa !14
  %type5660 = getelementptr inbounds %union.tree_node* %580, i64 0, i32 0, i32 0, i32 1
  %581 = load %union.tree_node** %type5660, align 8, !tbaa !11
  %arrayidx5663 = getelementptr inbounds i32* %operands5636, i64 2
  %582 = bitcast i32* %arrayidx5663 to %union.tree_node**
  %583 = load %union.tree_node** %582, align 8, !tbaa !14
  %operands5668 = getelementptr inbounds %union.tree_node* %580, i64 0, i32 0, i32 2
  %arrayidx5669 = getelementptr inbounds i32* %operands5668, i64 2
  %584 = bitcast i32* %arrayidx5669 to %union.tree_node**
  %585 = load %union.tree_node** %584, align 8, !tbaa !14
  %call5670 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 83, %union.tree_node* %581, %union.tree_node* %583, %union.tree_node* %585) #1
  %586 = load %union.tree_node** %type5478, align 8, !tbaa !11
  %587 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 12), align 8, !tbaa !14
  %call5673 = call %union.tree_node* @convert(%union.tree_node* %586, %union.tree_node* %587) #1
  %call5674 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 88, %union.tree_node* %579, %union.tree_node* %call5670, %union.tree_node* %call5673) #1
  %call5675 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %code.911188, %union.tree_node* %0, %union.tree_node* %call5674, %union.tree_node* %arg1.9) #1
  %call5676 = call %union.tree_node* @fold(%union.tree_node* %call5675)
  br label %return

if.else5677:                                      ; preds = %land.lhs.true5644, %if.then5634
  %arrayidx5680 = getelementptr inbounds i32* %operands5636, i64 2
  %588 = bitcast i32* %arrayidx5680 to %union.tree_node**
  %589 = load %union.tree_node** %588, align 8, !tbaa !14
  %code5682 = getelementptr inbounds %union.tree_node* %589, i64 0, i32 0, i32 0, i32 2
  %bf.load5683 = load i32* %code5682, align 8
  %bf.clear5684 = and i32 %bf.load5683, 255
  %cmp5685 = icmp eq i32 %bf.clear5684, 82
  br i1 %cmp5685, label %land.lhs.true5687, label %if.end5722

land.lhs.true5687:                                ; preds = %if.else5677
  %operands5692 = getelementptr inbounds %union.tree_node* %589, i64 0, i32 0, i32 2
  %arrayidx5693 = bitcast i32* %operands5692 to %union.tree_node**
  %590 = load %union.tree_node** %arrayidx5693, align 8, !tbaa !14
  %call5694 = call i32 @integer_onep(%union.tree_node* %590) #1
  %tobool5695 = icmp eq i32 %call5694, 0
  br i1 %tobool5695, label %if.end5722, label %if.then5696

if.then5696:                                      ; preds = %land.lhs.true5687
  %591 = load %union.tree_node** %type5478, align 8, !tbaa !11
  %592 = load %union.tree_node** %588, align 8, !tbaa !14
  %type5703 = getelementptr inbounds %union.tree_node* %592, i64 0, i32 0, i32 0, i32 1
  %593 = load %union.tree_node** %type5703, align 8, !tbaa !11
  %594 = load %union.tree_node** %arrayidx5637, align 8, !tbaa !14
  %operands5711 = getelementptr inbounds %union.tree_node* %592, i64 0, i32 0, i32 2
  %arrayidx5712 = getelementptr inbounds i32* %operands5711, i64 2
  %595 = bitcast i32* %arrayidx5712 to %union.tree_node**
  %596 = load %union.tree_node** %595, align 8, !tbaa !14
  %call5713 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 83, %union.tree_node* %593, %union.tree_node* %594, %union.tree_node* %596) #1
  %597 = load %union.tree_node** %type5478, align 8, !tbaa !11
  %598 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 12), align 8, !tbaa !14
  %call5716 = call %union.tree_node* @convert(%union.tree_node* %597, %union.tree_node* %598) #1
  %call5717 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 88, %union.tree_node* %591, %union.tree_node* %call5713, %union.tree_node* %call5716) #1
  %call5718 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %code.911188, %union.tree_node* %0, %union.tree_node* %call5717, %union.tree_node* %arg1.9) #1
  %call5719 = call %union.tree_node* @fold(%union.tree_node* %call5718)
  br label %return

if.end5722:                                       ; preds = %if.end5618, %land.lhs.true5687, %if.else5677, %land.lhs.true5627
  br i1 %562, label %land.lhs.true5728, label %if.end5795

land.lhs.true5728:                                ; preds = %if.end5722
  %call5729 = call i32 @integer_zerop(%union.tree_node* %arg1.9) #1
  %tobool5730 = icmp eq i32 %call5729, 0
  br i1 %tobool5730, label %if.end5795, label %land.lhs.true5731

land.lhs.true5731:                                ; preds = %land.lhs.true5728
  %599 = load %union.tree_node** %type5478, align 8, !tbaa !11
  %unsigned_flag5735 = getelementptr inbounds %union.tree_node* %599, i64 0, i32 0, i32 0, i32 2
  %bf.load5736 = load i32* %unsigned_flag5735, align 8
  %bf.clear5738 = and i32 %bf.load5736, 8192
  %tobool5739 = icmp eq i32 %bf.clear5738, 0
  br i1 %tobool5739, label %land.lhs.true5740, label %if.end5795

land.lhs.true5740:                                ; preds = %land.lhs.true5731
  %bf.load5743 = load i32* %constant_flag4518, align 8
  %bf.clear5744 = and i32 %bf.load5743, 255
  %bf.clear5744.off = add i32 %bf.clear5744, -66
  %switch9800 = icmp ult i32 %bf.clear5744.off, 4
  br i1 %switch9800, label %land.lhs.true5768, label %if.end5795

land.lhs.true5768:                                ; preds = %land.lhs.true5740
  %operands5770 = getelementptr inbounds %union.tree_node* %arg0.6, i64 0, i32 0, i32 2
  %arrayidx5771 = getelementptr inbounds i32* %operands5770, i64 2
  %600 = bitcast i32* %arrayidx5771 to %union.tree_node**
  %601 = load %union.tree_node** %600, align 8, !tbaa !14
  %call5772 = call i32 @integer_pow2p(%union.tree_node* %601) #1
  %tobool5773 = icmp eq i32 %call5772, 0
  br i1 %tobool5773, label %if.end5795, label %if.then5774

if.then5774:                                      ; preds = %land.lhs.true5768
  %602 = load %union.tree_node** %type5478, align 8, !tbaa !11
  %call5778 = call %union.tree_node* @unsigned_type(%union.tree_node* %602) #1
  %bf.load5782 = load i32* %constant_flag4518, align 8
  %bf.clear5783 = and i32 %bf.load5782, 255
  %arrayidx5786 = bitcast i32* %operands5770 to %union.tree_node**
  %603 = load %union.tree_node** %arrayidx5786, align 8, !tbaa !14
  %call5787 = call %union.tree_node* @convert(%union.tree_node* %call5778, %union.tree_node* %603) #1
  %604 = load %union.tree_node** %600, align 8, !tbaa !14
  %call5791 = call %union.tree_node* @convert(%union.tree_node* %call5778, %union.tree_node* %604) #1
  %call5792 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %bf.clear5783, %union.tree_node* %call5778, %union.tree_node* %call5787, %union.tree_node* %call5791) #1
  %call5793 = call %union.tree_node* @convert(%union.tree_node* %call5778, %union.tree_node* %arg1.9) #1
  %call5794 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %code.911188, %union.tree_node* %0, %union.tree_node* %call5792, %union.tree_node* %call5793) #1
  br label %return

if.end5795:                                       ; preds = %land.lhs.true5740, %land.lhs.true5768, %land.lhs.true5731, %land.lhs.true5728, %if.end5722
  br i1 %cmp534711192, label %land.lhs.true5798, label %if.end5816

land.lhs.true5798:                                ; preds = %if.end5795
  %call5799 = call i32 @integer_zerop(%union.tree_node* %arg1.9) #1
  %tobool5800 = icmp eq i32 %call5799, 0
  br i1 %tobool5800, label %if.end5816, label %land.lhs.true5801

land.lhs.true5801:                                ; preds = %land.lhs.true5798
  %bf.load5804 = load i32* %constant_flag4518, align 8
  %bf.clear5805 = and i32 %bf.load5804, 255
  %cmp5806 = icmp eq i32 %bf.clear5805, 88
  br i1 %cmp5806, label %land.lhs.true5808, label %if.end5816

land.lhs.true5808:                                ; preds = %land.lhs.true5801
  %operands5810 = getelementptr inbounds %union.tree_node* %arg0.6, i64 0, i32 0, i32 2
  %arrayidx5811 = getelementptr inbounds i32* %operands5810, i64 2
  %605 = bitcast i32* %arrayidx5811 to %union.tree_node**
  %606 = load %union.tree_node** %605, align 8, !tbaa !14
  %call5812 = call i32 @integer_onep(%union.tree_node* %606) #1
  %tobool5813 = icmp eq i32 %call5812, 0
  br i1 %tobool5813, label %if.end5816, label %if.then5814

if.then5814:                                      ; preds = %land.lhs.true5808
  %call5815 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %arg0.6) #1
  br label %return

if.end5816:                                       ; preds = %land.lhs.true5808, %land.lhs.true5798, %land.lhs.true5801, %if.end5795
  br i1 %562, label %land.lhs.true5822, label %if.end5846

land.lhs.true5822:                                ; preds = %if.end5816
  %bf.load5825 = load i32* %constant_flag4518, align 8
  %bf.clear5826 = and i32 %bf.load5825, 255
  %cmp5827 = icmp eq i32 %bf.clear5826, 88
  br i1 %cmp5827, label %land.lhs.true5829, label %if.end5846

land.lhs.true5829:                                ; preds = %land.lhs.true5822
  %operands5831 = getelementptr inbounds %union.tree_node* %arg0.6, i64 0, i32 0, i32 2
  %arrayidx5832 = getelementptr inbounds i32* %operands5831, i64 2
  %607 = bitcast i32* %arrayidx5832 to %union.tree_node**
  %608 = load %union.tree_node** %607, align 8, !tbaa !14
  %call5833 = call i32 @integer_pow2p(%union.tree_node* %608) #1
  %tobool5834 = icmp eq i32 %call5833, 0
  br i1 %tobool5834, label %if.end5846, label %land.lhs.true5835

land.lhs.true5835:                                ; preds = %land.lhs.true5829
  %609 = load %union.tree_node** %607, align 8, !tbaa !14
  %call5839 = call i32 @operand_equal_p(%union.tree_node* %609, %union.tree_node* %arg1.9, i32 0)
  %tobool5840 = icmp eq i32 %call5839, 0
  br i1 %tobool5840, label %if.end5846, label %if.then5841

if.then5841:                                      ; preds = %land.lhs.true5835
  %cond5844 = select i1 %cmp534411190, i32 102, i32 101
  %610 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8, !tbaa !14
  %call5845 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %cond5844, %union.tree_node* %0, %union.tree_node* %arg0.6, %union.tree_node* %610) #1
  br label %return

if.end5846:                                       ; preds = %land.lhs.true5835, %land.lhs.true5829, %if.end5816, %land.lhs.true5822
  %cmp5847 = icmp eq i32 %code.911188, 97
  switch i32 %code.911188, label %if.end5957 [
    i32 100, label %land.lhs.true5852
    i32 97, label %land.lhs.true5852
  ]

land.lhs.true5852:                                ; preds = %if.end5846, %if.end5846
  %611 = load %union.tree_node** %type5478, align 8
  %unsigned_flag5856 = getelementptr inbounds %union.tree_node* %611, i64 0, i32 0, i32 0, i32 2
  %bf.load5857 = load i32* %unsigned_flag5856, align 8
  %bf.clear5859 = and i32 %bf.load5857, 8192
  %tobool5860 = icmp eq i32 %bf.clear5859, 0
  br i1 %tobool5860, label %if.else5888, label %land.lhs.true5861

land.lhs.true5861:                                ; preds = %land.lhs.true5852
  %bf.load5864 = load i32* %code5529, align 8
  %bf.clear5865 = and i32 %bf.load5864, 255
  %cmp5866 = icmp eq i32 %bf.clear5865, 82
  br i1 %cmp5866, label %land.lhs.true5868, label %if.else5888

land.lhs.true5868:                                ; preds = %land.lhs.true5861
  %operands5870 = getelementptr inbounds %union.tree_node* %arg1.9, i64 0, i32 0, i32 2
  %arrayidx5871 = bitcast i32* %operands5870 to %union.tree_node**
  %612 = load %union.tree_node** %arrayidx5871, align 8, !tbaa !14
  %call5872 = call i32 @integer_onep(%union.tree_node* %612) #1
  %tobool5873 = icmp eq i32 %call5872, 0
  br i1 %tobool5873, label %if.else5888, label %if.then5874

if.then5874:                                      ; preds = %land.lhs.true5868
  %cond5877 = select i1 %cmp5847, i32 101, i32 102
  %613 = load %union.tree_node** %type5478, align 8, !tbaa !11
  %arrayidx5882 = getelementptr inbounds i32* %operands5870, i64 2
  %614 = bitcast i32* %arrayidx5882 to %union.tree_node**
  %615 = load %union.tree_node** %614, align 8, !tbaa !14
  %call5883 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 83, %union.tree_node* %613, %union.tree_node* %arg0.6, %union.tree_node* %615) #1
  %616 = load %union.tree_node** %type5478, align 8, !tbaa !11
  %617 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8, !tbaa !14
  %call5886 = call %union.tree_node* @convert(%union.tree_node* %616, %union.tree_node* %617) #1
  %call5887 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %cond5877, %union.tree_node* %0, %union.tree_node* %call5883, %union.tree_node* %call5886) #1
  br label %return

if.else5888:                                      ; preds = %land.lhs.true5868, %land.lhs.true5852, %land.lhs.true5861
  switch i32 %code.911188, label %if.end5957 [
    i32 100, label %land.lhs.true5894
    i32 97, label %land.lhs.true5894
  ]

land.lhs.true5894:                                ; preds = %if.else5888, %if.else5888
  %618 = load %union.tree_node** %type5478, align 8
  %unsigned_flag5898 = getelementptr inbounds %union.tree_node* %618, i64 0, i32 0, i32 0, i32 2
  %bf.load5899 = load i32* %unsigned_flag5898, align 8
  %bf.clear5901 = and i32 %bf.load5899, 8192
  %tobool5902 = icmp eq i32 %bf.clear5901, 0
  br i1 %tobool5902, label %if.end5957, label %land.lhs.true5903

land.lhs.true5903:                                ; preds = %land.lhs.true5894
  %bf.load5906 = load i32* %code5529, align 8
  %619 = and i32 %bf.load5906, 254
  %switch9801 = icmp eq i32 %619, 114
  br i1 %switch9801, label %land.lhs.true5917, label %if.end5957

land.lhs.true5917:                                ; preds = %land.lhs.true5903
  %operands5919 = getelementptr inbounds %union.tree_node* %arg1.9, i64 0, i32 0, i32 2
  %arrayidx5920 = bitcast i32* %operands5919 to %union.tree_node**
  %620 = load %union.tree_node** %arrayidx5920, align 8, !tbaa !14
  %code5922 = getelementptr inbounds %union.tree_node* %620, i64 0, i32 0, i32 0, i32 2
  %bf.load5923 = load i32* %code5922, align 8
  %bf.clear5924 = and i32 %bf.load5923, 255
  %cmp5925 = icmp eq i32 %bf.clear5924, 82
  br i1 %cmp5925, label %land.lhs.true5927, label %if.end5957

land.lhs.true5927:                                ; preds = %land.lhs.true5917
  %operands5932 = getelementptr inbounds %union.tree_node* %620, i64 0, i32 0, i32 2
  %arrayidx5933 = bitcast i32* %operands5932 to %union.tree_node**
  %621 = load %union.tree_node** %arrayidx5933, align 8, !tbaa !14
  %call5934 = call i32 @integer_onep(%union.tree_node* %621) #1
  %tobool5935 = icmp eq i32 %call5934, 0
  br i1 %tobool5935, label %if.end5957, label %if.then5936

if.then5936:                                      ; preds = %land.lhs.true5927
  %cond5939 = select i1 %cmp5847, i32 101, i32 102
  %622 = load %union.tree_node** %type5478, align 8, !tbaa !11
  %623 = load %union.tree_node** %arrayidx5920, align 8, !tbaa !14
  %operands5948 = getelementptr inbounds %union.tree_node* %623, i64 0, i32 0, i32 2
  %arrayidx5949 = getelementptr inbounds i32* %operands5948, i64 2
  %624 = bitcast i32* %arrayidx5949 to %union.tree_node**
  %625 = load %union.tree_node** %624, align 8, !tbaa !14
  %call5950 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 83, %union.tree_node* %622, %union.tree_node* %arg0.6, %union.tree_node* %625) #1
  %call5951 = call %union.tree_node* @convert(%union.tree_node* %622, %union.tree_node* %call5950) #1
  %626 = load %union.tree_node** %type5478, align 8, !tbaa !11
  %627 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8, !tbaa !14
  %call5954 = call %union.tree_node* @convert(%union.tree_node* %626, %union.tree_node* %627) #1
  %call5955 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %cond5939, %union.tree_node* %0, %union.tree_node* %call5951, %union.tree_node* %call5954) #1
  br label %return

if.end5957:                                       ; preds = %land.lhs.true5903, %if.end5846, %if.else5888, %land.lhs.true5927, %land.lhs.true5894, %land.lhs.true5917
  %call5958 = call i32 @operand_equal_p(%union.tree_node* %arg0.6, %union.tree_node* %arg1.9, i32 0)
  %tobool5959 = icmp eq i32 %call5958, 0
  br i1 %tobool5959, label %if.end6034, label %if.then5960

if.then5960:                                      ; preds = %if.end5957
  switch i32 %code.911188, label %sw.default6032 [
    i32 101, label %sw.bb5961
    i32 100, label %sw.bb5961
    i32 98, label %sw.bb5961
    i32 102, label %sw.bb5999
    i32 99, label %sw.bb6030
    i32 97, label %sw.bb6030
  ]

sw.bb5961:                                        ; preds = %if.then5960, %if.then5960, %if.then5960
  %628 = load %union.tree_node** %type5478, align 8, !tbaa !11
  %code5965 = getelementptr inbounds %union.tree_node* %628, i64 0, i32 0, i32 0, i32 2
  %bf.load5966 = load i32* %code5965, align 8
  %bf.clear5967 = and i32 %bf.load5966, 255
  switch i32 %bf.clear5967, label %if.then5990 [
    i32 7, label %if.end5992
    i32 8, label %land.lhs.true5979
  ]

land.lhs.true5979:                                ; preds = %sw.bb5961
  %type5983 = getelementptr inbounds %union.tree_node* %628, i64 0, i32 0, i32 0, i32 1
  %629 = load %union.tree_node** %type5983, align 8, !tbaa !11
  %code5985 = getelementptr inbounds %union.tree_node* %629, i64 0, i32 0, i32 0, i32 2
  %bf.load5986 = load i32* %code5985, align 8
  %bf.clear5987 = and i32 %bf.load5986, 255
  %cmp5988 = icmp eq i32 %bf.clear5987, 7
  br i1 %cmp5988, label %if.end5992, label %if.then5990

if.then5990:                                      ; preds = %sw.bb5961, %land.lhs.true5979
  %630 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !14
  %cmp.i10167 = icmp eq %union.tree_node* %630, %0
  br i1 %cmp.i10167, label %if.then.i10168, label %if.else.i10173

if.then.i10168:                                   ; preds = %if.then5990
  %631 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 12), align 8, !tbaa !14
  br label %return

if.else.i10173:                                   ; preds = %if.then5990
  %code.i10169 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2
  %bf.load.i10170 = load i32* %code.i10169, align 8
  %bf.clear.i10171 = and i32 %bf.load.i10170, 255
  %cmp1.i10172 = icmp eq i32 %bf.clear.i10171, 11
  br i1 %cmp1.i10172, label %if.then2.i10175, label %if.else8.i10178

if.then2.i10175:                                  ; preds = %if.else.i10173
  %632 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 12), align 8, !tbaa !14
  %call.i10174 = call %union.tree_node* @truthvalue_conversion(%union.tree_node* %632) #1
  br label %return

if.else8.i10178:                                  ; preds = %if.else.i10173
  %call9.i10176 = call %union.tree_node* @build_int_2_wide(i64 1, i64 0) #1
  %type11.i10177 = getelementptr inbounds %union.tree_node* %call9.i10176, i64 0, i32 0, i32 0, i32 1
  store %union.tree_node* %0, %union.tree_node** %type11.i10177, align 8, !tbaa !11
  br label %return

if.end5992:                                       ; preds = %sw.bb5961, %land.lhs.true5979
  %code5994 = getelementptr inbounds %union.tree_node* %t.6, i64 0, i32 0, i32 0, i32 2
  %bf.load5995 = load i32* %code5994, align 8
  %bf.clear5997 = and i32 %bf.load5995, -256
  %bf.set5998 = or i32 %bf.clear5997, 101
  store i32 %bf.set5998, i32* %code5994, align 8
  br label %if.end6034

sw.bb5999:                                        ; preds = %if.then5960
  %633 = load %union.tree_node** %type5478, align 8, !tbaa !11
  %code6003 = getelementptr inbounds %union.tree_node* %633, i64 0, i32 0, i32 0, i32 2
  %bf.load6004 = load i32* %code6003, align 8
  %bf.clear6005 = and i32 %bf.load6004, 255
  switch i32 %bf.clear6005, label %sw.bb6030 [
    i32 7, label %if.end6034
    i32 8, label %land.lhs.true6017
  ]

land.lhs.true6017:                                ; preds = %sw.bb5999
  %type6021 = getelementptr inbounds %union.tree_node* %633, i64 0, i32 0, i32 0, i32 1
  %634 = load %union.tree_node** %type6021, align 8, !tbaa !11
  %code6023 = getelementptr inbounds %union.tree_node* %634, i64 0, i32 0, i32 0, i32 2
  %bf.load6024 = load i32* %code6023, align 8
  %bf.clear6025 = and i32 %bf.load6024, 255
  %cmp6026 = icmp eq i32 %bf.clear6025, 7
  br i1 %cmp6026, label %if.end6034, label %sw.bb6030

sw.bb6030:                                        ; preds = %sw.bb5999, %land.lhs.true6017, %if.then5960, %if.then5960
  %635 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !14
  %cmp.i = icmp eq %union.tree_node* %635, %0
  br i1 %cmp.i, label %if.then.i10162, label %if.else.i

if.then.i10162:                                   ; preds = %sw.bb6030
  %636 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8, !tbaa !14
  br label %return

if.else.i:                                        ; preds = %sw.bb6030
  %code.i = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2
  %bf.load.i10163 = load i32* %code.i, align 8
  %bf.clear.i10164 = and i32 %bf.load.i10163, 255
  %cmp1.i = icmp eq i32 %bf.clear.i10164, 11
  br i1 %cmp1.i, label %if.then2.i, label %if.else8.i

if.then2.i:                                       ; preds = %if.else.i
  %637 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8, !tbaa !14
  %call.i10165 = call %union.tree_node* @truthvalue_conversion(%union.tree_node* %637) #1
  br label %return

if.else8.i:                                       ; preds = %if.else.i
  %call9.i = call %union.tree_node* @build_int_2_wide(i64 0, i64 0) #1
  %type11.i = getelementptr inbounds %union.tree_node* %call9.i, i64 0, i32 0, i32 0, i32 1
  store %union.tree_node* %0, %union.tree_node** %type11.i, align 8, !tbaa !11
  br label %return

sw.default6032:                                   ; preds = %if.then5960
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8]* @.str, i64 0, i64 0), i32 6853, i8* getelementptr inbounds ([5 x i8]* @__FUNCTION__.fold, i64 0, i64 0)) #7
  unreachable

if.end6034:                                       ; preds = %sw.bb5999, %if.end5957, %if.end5992, %land.lhs.true6017
  %code.10 = phi i32 [ 102, %sw.bb5999 ], [ 102, %land.lhs.true6017 ], [ 101, %if.end5992 ], [ %code.911188, %if.end5957 ]
  %bf.load6037 = load i32* %code5529, align 8
  %bf.clear6038 = and i32 %bf.load6037, 255
  %cmp6039 = icmp eq i32 %bf.clear6038, 25
  br i1 %cmp6039, label %land.lhs.true6041, label %if.end6208

land.lhs.true6041:                                ; preds = %if.end6034
  %bf.load6044 = load i32* %constant_flag4518, align 8
  %bf.clear6045 = and i32 %bf.load6044, 255
  %cmp6046 = icmp eq i32 %bf.clear6045, 25
  br i1 %cmp6046, label %if.end6208, label %if.then6048

if.then6048:                                      ; preds = %land.lhs.true6041
  store %union.tree_node* null, %union.tree_node** %cval1, align 8, !tbaa !14
  store %union.tree_node* null, %union.tree_node** %cval2, align 8, !tbaa !14
  store i32 0, i32* %save_p, align 4, !tbaa !12
  %call6052 = call fastcc i32 @twoval_comparison_p(%union.tree_node* %arg0.6, %union.tree_node** %cval1, %union.tree_node** %cval2, i32* %save_p)
  %tobool6053 = icmp ne i32 %call6052, 0
  %638 = load %union.tree_node** %cval1, align 8
  %cmp6055 = icmp ne %union.tree_node* %638, null
  %or.cond7807 = and i1 %tobool6053, %cmp6055
  %639 = load %union.tree_node** %cval2, align 8
  %cmp6058 = icmp ne %union.tree_node* %639, null
  %or.cond7809 = and i1 %or.cond7807, %cmp6058
  br i1 %or.cond7809, label %land.lhs.true6060, label %if.end6208

land.lhs.true6060:                                ; preds = %if.then6048
  %constant_flag6062 = getelementptr inbounds %union.tree_node* %638, i64 0, i32 0, i32 0, i32 2
  %bf.load6063 = load i32* %constant_flag6062, align 8
  %bf.clear6065 = and i32 %bf.load6063, 512
  %tobool6066 = icmp eq i32 %bf.clear6065, 0
  br i1 %tobool6066, label %land.lhs.true6074, label %land.lhs.true6067

land.lhs.true6067:                                ; preds = %land.lhs.true6060
  %constant_flag6069 = getelementptr inbounds %union.tree_node* %639, i64 0, i32 0, i32 0, i32 2
  %bf.load6070 = load i32* %constant_flag6069, align 8
  %bf.clear6072 = and i32 %bf.load6070, 512
  %tobool6073 = icmp eq i32 %bf.clear6072, 0
  br i1 %tobool6073, label %land.lhs.true6074, label %if.end6208

land.lhs.true6074:                                ; preds = %land.lhs.true6067, %land.lhs.true6060
  %type6076 = getelementptr inbounds %union.tree_node* %638, i64 0, i32 0, i32 0, i32 1
  %640 = load %union.tree_node** %type6076, align 8, !tbaa !11
  %type6078 = getelementptr inbounds %union.tree_node* %639, i64 0, i32 0, i32 0, i32 1
  %641 = load %union.tree_node** %type6078, align 8, !tbaa !11
  %cmp6079 = icmp eq %union.tree_node* %640, %641
  br i1 %cmp6079, label %land.lhs.true6081, label %if.end6208

land.lhs.true6081:                                ; preds = %land.lhs.true6074
  %code6085 = getelementptr inbounds %union.tree_node* %640, i64 0, i32 0, i32 0, i32 2
  %bf.load6086 = load i32* %code6085, align 8
  %bf.clear6087 = and i32 %bf.load6086, 255
  switch i32 %bf.clear6087, label %if.end6208 [
    i32 6, label %land.lhs.true6117
    i32 10, label %land.lhs.true6117
    i32 11, label %land.lhs.true6117
    i32 12, label %land.lhs.true6117
  ]

land.lhs.true6117:                                ; preds = %land.lhs.true6081, %land.lhs.true6081, %land.lhs.true6081, %land.lhs.true6081
  %642 = getelementptr inbounds %union.tree_node* %640, i64 0, i32 0, i32 13
  %643 = load %union.tree_node** %642, align 8, !tbaa !26
  %tobool6122 = icmp eq %union.tree_node* %643, null
  br i1 %tobool6122, label %if.end6208, label %land.lhs.true6129

land.lhs.true6129:                                ; preds = %land.lhs.true6117
  %644 = getelementptr inbounds %union.tree_node* %640, i64 0, i32 0, i32 12
  %645 = load %union.tree_node** %644, align 8, !tbaa !25
  %call6138 = call i32 @operand_equal_p(%union.tree_node* %645, %union.tree_node* %643, i32 0)
  %tobool6139 = icmp eq i32 %call6138, 0
  br i1 %tobool6139, label %if.then6140, label %if.end6208

if.then6140:                                      ; preds = %land.lhs.true6129
  %646 = load %union.tree_node** %cval1, align 8, !tbaa !14
  %type6144 = getelementptr inbounds %union.tree_node* %646, i64 0, i32 0, i32 0, i32 1
  %647 = load %union.tree_node** %type6144, align 8, !tbaa !11
  %648 = getelementptr inbounds %union.tree_node* %647, i64 0, i32 0, i32 13
  %649 = load %union.tree_node** %648, align 8, !tbaa !26
  %650 = getelementptr inbounds %union.tree_node* %647, i64 0, i32 0, i32 12
  %651 = load %union.tree_node** %650, align 8, !tbaa !25
  %652 = load %union.tree_node** %cval2, align 8, !tbaa !14
  %call6154 = call fastcc %union.tree_node* @eval_subst(%union.tree_node* %arg0.6, %union.tree_node* %646, %union.tree_node* %649, %union.tree_node* %652, %union.tree_node* %651)
  %call6155 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %code.10, %union.tree_node* %0, %union.tree_node* %call6154, %union.tree_node* %arg1.9) #1
  %call6156 = call %union.tree_node* @fold(%union.tree_node* %call6155)
  %653 = load %union.tree_node** %cval1, align 8, !tbaa !14
  %654 = load %union.tree_node** %cval2, align 8, !tbaa !14
  %call6158 = call fastcc %union.tree_node* @eval_subst(%union.tree_node* %arg0.6, %union.tree_node* %653, %union.tree_node* %649, %union.tree_node* %654, %union.tree_node* %649)
  %call6159 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %code.10, %union.tree_node* %0, %union.tree_node* %call6158, %union.tree_node* %arg1.9) #1
  %call6160 = call %union.tree_node* @fold(%union.tree_node* %call6159)
  %655 = load %union.tree_node** %cval1, align 8, !tbaa !14
  %656 = load %union.tree_node** %cval2, align 8, !tbaa !14
  %call6162 = call fastcc %union.tree_node* @eval_subst(%union.tree_node* %arg0.6, %union.tree_node* %655, %union.tree_node* %651, %union.tree_node* %656, %union.tree_node* %649)
  %call6163 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %code.10, %union.tree_node* %0, %union.tree_node* %call6162, %union.tree_node* %arg1.9) #1
  %call6164 = call %union.tree_node* @fold(%union.tree_node* %call6163)
  %call6165 = call i32 @integer_zerop(%union.tree_node* %call6156) #1
  %tobool6166 = icmp eq i32 %call6165, 0
  br i1 %tobool6166, label %lor.lhs.false6167, label %land.lhs.true6170

lor.lhs.false6167:                                ; preds = %if.then6140
  %call6168 = call i32 @integer_onep(%union.tree_node* %call6156) #1
  %tobool6169 = icmp eq i32 %call6168, 0
  br i1 %tobool6169, label %if.end6208, label %land.lhs.true6170

land.lhs.true6170:                                ; preds = %lor.lhs.false6167, %if.then6140
  %call6171 = call i32 @integer_zerop(%union.tree_node* %call6160) #1
  %tobool6172 = icmp eq i32 %call6171, 0
  br i1 %tobool6172, label %lor.lhs.false6173, label %land.lhs.true6176

lor.lhs.false6173:                                ; preds = %land.lhs.true6170
  %call6174 = call i32 @integer_onep(%union.tree_node* %call6160) #1
  %tobool6175 = icmp eq i32 %call6174, 0
  br i1 %tobool6175, label %if.end6208, label %land.lhs.true6176

land.lhs.true6176:                                ; preds = %lor.lhs.false6173, %land.lhs.true6170
  %call6177 = call i32 @integer_zerop(%union.tree_node* %call6164) #1
  %tobool6178 = icmp eq i32 %call6177, 0
  br i1 %tobool6178, label %lor.lhs.false6179, label %if.then6182

lor.lhs.false6179:                                ; preds = %land.lhs.true6176
  %call6180 = call i32 @integer_onep(%union.tree_node* %call6164) #1
  %tobool6181 = icmp eq i32 %call6180, 0
  br i1 %tobool6181, label %if.end6208, label %if.then6182

if.then6182:                                      ; preds = %lor.lhs.false6179, %land.lhs.true6176
  %call6183 = call i32 @integer_onep(%union.tree_node* %call6156) #1
  %mul = shl i32 %call6183, 2
  %call6184 = call i32 @integer_onep(%union.tree_node* %call6160) #1
  %mul6185 = shl i32 %call6184, 1
  %add6186 = add nsw i32 %mul6185, %mul
  %call6187 = call i32 @integer_onep(%union.tree_node* %call6164) #1
  %add6188 = add nsw i32 %add6186, %call6187
  switch i32 %add6188, label %sw.epilog6199 [
    i32 0, label %sw.bb6189
    i32 1, label %sw.bb6191
    i32 2, label %sw.bb6192
    i32 3, label %sw.bb6193
    i32 4, label %sw.bb6194
    i32 5, label %sw.bb6195
    i32 6, label %sw.bb6196
    i32 7, label %sw.bb6197
  ]

sw.bb6189:                                        ; preds = %if.then6182
  %657 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8, !tbaa !14
  %call.i10140 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %657) #1
  %bf.load.i10142 = load i32* %constant_flag4518, align 8
  %bf.clear.i10143 = and i32 %bf.load.i10142, 256
  %tobool.i10144 = icmp eq i32 %bf.clear.i10143, 0
  br i1 %tobool.i10144, label %if.end.i10150, label %if.then.i10146

if.then.i10146:                                   ; preds = %sw.bb6189
  %call1.i10145 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 47, %union.tree_node* %0, %union.tree_node* %arg0.6, %union.tree_node* %call.i10140) #1
  br label %return

if.end.i10150:                                    ; preds = %sw.bb6189
  %code.i.i10147 = getelementptr inbounds %union.tree_node* %call.i10140, i64 0, i32 0, i32 0, i32 2
  %bf.load.i.i10148 = load i32* %code.i.i10147, align 8
  %bf.clear.i.i10149 = and i32 %bf.load.i.i10148, 255
  switch i32 %bf.clear.i.i10149, label %if.end.i.i10159 [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i.i10159:                                  ; preds = %if.end.i10150
  %type.i.i10151 = getelementptr inbounds %union.tree_node* %call.i10140, i64 0, i32 0, i32 0, i32 1
  %658 = load %union.tree_node** %type.i.i10151, align 8, !tbaa !11
  %call.i.i10152 = call %union.tree_node* @build1(i32 116, %union.tree_node* %658, %union.tree_node* %call.i10140) #1
  %bf.load26.i.i10153 = load i32* %code.i.i10147, align 8
  %bf.clear27.i.i10154 = and i32 %bf.load26.i.i10153, 512
  %constant_flag29.i.i10155 = getelementptr inbounds %union.tree_node* %call.i.i10152, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i.i10156 = load i32* %constant_flag29.i.i10155, align 8
  %bf.clear31.i.i10157 = and i32 %bf.load30.i.i10156, -513
  %bf.set.i.i10158 = or i32 %bf.clear31.i.i10157, %bf.clear27.i.i10154
  store i32 %bf.set.i.i10158, i32* %constant_flag29.i.i10155, align 8
  br label %return

sw.bb6191:                                        ; preds = %if.then6182
  br label %sw.epilog6199

sw.bb6192:                                        ; preds = %if.then6182
  br label %sw.epilog6199

sw.bb6193:                                        ; preds = %if.then6182
  br label %sw.epilog6199

sw.bb6194:                                        ; preds = %if.then6182
  br label %sw.epilog6199

sw.bb6195:                                        ; preds = %if.then6182
  br label %sw.epilog6199

sw.bb6196:                                        ; preds = %if.then6182
  br label %sw.epilog6199

sw.bb6197:                                        ; preds = %if.then6182
  %659 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 12), align 8, !tbaa !14
  %call.i10118 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %659) #1
  %bf.load.i10120 = load i32* %constant_flag4518, align 8
  %bf.clear.i10121 = and i32 %bf.load.i10120, 256
  %tobool.i10122 = icmp eq i32 %bf.clear.i10121, 0
  br i1 %tobool.i10122, label %if.end.i10128, label %if.then.i10124

if.then.i10124:                                   ; preds = %sw.bb6197
  %call1.i10123 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 47, %union.tree_node* %0, %union.tree_node* %arg0.6, %union.tree_node* %call.i10118) #1
  br label %return

if.end.i10128:                                    ; preds = %sw.bb6197
  %code.i.i10125 = getelementptr inbounds %union.tree_node* %call.i10118, i64 0, i32 0, i32 0, i32 2
  %bf.load.i.i10126 = load i32* %code.i.i10125, align 8
  %bf.clear.i.i10127 = and i32 %bf.load.i.i10126, 255
  switch i32 %bf.clear.i.i10127, label %if.end.i.i10137 [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i.i10137:                                  ; preds = %if.end.i10128
  %type.i.i10129 = getelementptr inbounds %union.tree_node* %call.i10118, i64 0, i32 0, i32 0, i32 1
  %660 = load %union.tree_node** %type.i.i10129, align 8, !tbaa !11
  %call.i.i10130 = call %union.tree_node* @build1(i32 116, %union.tree_node* %660, %union.tree_node* %call.i10118) #1
  %bf.load26.i.i10131 = load i32* %code.i.i10125, align 8
  %bf.clear27.i.i10132 = and i32 %bf.load26.i.i10131, 512
  %constant_flag29.i.i10133 = getelementptr inbounds %union.tree_node* %call.i.i10130, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i.i10134 = load i32* %constant_flag29.i.i10133, align 8
  %bf.clear31.i.i10135 = and i32 %bf.load30.i.i10134, -513
  %bf.set.i.i10136 = or i32 %bf.clear31.i.i10135, %bf.clear27.i.i10132
  store i32 %bf.set.i.i10136, i32* %constant_flag29.i.i10133, align 8
  br label %return

sw.epilog6199:                                    ; preds = %if.then6182, %sw.bb6196, %sw.bb6195, %sw.bb6194, %sw.bb6193, %sw.bb6192, %sw.bb6191
  %code.11 = phi i32 [ %code.10, %if.then6182 ], [ 100, %sw.bb6196 ], [ 102, %sw.bb6195 ], [ 99, %sw.bb6194 ], [ 98, %sw.bb6193 ], [ 101, %sw.bb6192 ], [ 97, %sw.bb6191 ]
  %661 = load %union.tree_node** %cval1, align 8, !tbaa !14
  %662 = load %union.tree_node** %cval2, align 8, !tbaa !14
  %call6200 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %code.11, %union.tree_node* %0, %union.tree_node* %661, %union.tree_node* %662) #1
  %663 = load i32* %save_p, align 4, !tbaa !12
  %tobool6201 = icmp eq i32 %663, 0
  br i1 %tobool6201, label %if.else6204, label %if.then6202

if.then6202:                                      ; preds = %sw.epilog6199
  %call6203 = call %union.tree_node* @save_expr(%union.tree_node* %call6200) #1
  br label %return

if.else6204:                                      ; preds = %sw.epilog6199
  %call6205 = call %union.tree_node* @fold(%union.tree_node* %call6200)
  br label %return

if.end6208:                                       ; preds = %land.lhs.true6081, %land.lhs.true6067, %lor.lhs.false6179, %lor.lhs.false6173, %lor.lhs.false6167, %land.lhs.true6129, %land.lhs.true6117, %land.lhs.true6041, %if.then6048, %land.lhs.true6074, %if.end6034
  %bf.load6211 = load i32* %constant_flag4518, align 8
  %bf.clear6212 = and i32 %bf.load6211, 255
  %bf.clear6212.off = add i32 %bf.clear6212, -39
  %code.10.off9694 = add i32 %code.10, -101
  %664 = icmp ult i32 %code.10.off9694, 2
  %665 = or i32 %bf.clear6212.off, %code.10.off9694
  %666 = icmp ult i32 %665, 2
  br i1 %666, label %land.lhs.true6228, label %if.end6244

land.lhs.true6228:                                ; preds = %if.end6208
  %667 = load i32* @optimize, align 4, !tbaa !12
  %tobool6229 = icmp ne i32 %667, 0
  %bf.load6233 = load i32* %code5529, align 8
  %bf.clear6234 = and i32 %bf.load6233, 255
  %cmp6235 = icmp eq i32 %bf.clear6234, 25
  %or.cond11345 = or i1 %tobool6229, %cmp6235
  br i1 %or.cond11345, label %if.then6237, label %if.end6244

if.then6237:                                      ; preds = %land.lhs.true6228
  %668 = bitcast i64* %lbitpos.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %668) #1
  %669 = bitcast i64* %lbitsize.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %669) #1
  %670 = bitcast i64* %rbitpos.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %670) #1
  %671 = bitcast i64* %rbitsize.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %671) #1
  %672 = bitcast i32* %lmode.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %672) #1
  %673 = bitcast i32* %rmode.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %673) #1
  %674 = bitcast i32* %lunsignedp.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %674) #1
  %675 = bitcast i32* %runsignedp.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %675) #1
  %676 = bitcast i32* %lvolatilep.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %676) #1
  %677 = bitcast i32* %rvolatilep.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %677) #1
  %678 = bitcast %union.tree_node** %offset.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %678) #1
  %679 = load %union.tree_node** %type5478, align 8, !tbaa !11
  %bf.clear.i11123 = and i32 %bf.load6233, 255
  %cmp.i11124 = icmp eq i32 %bf.clear.i11123, 25
  store i32 0, i32* %lvolatilep.i, align 4, !tbaa !12
  store i32 0, i32* %rvolatilep.i, align 4, !tbaa !12
  %call.i11125 = call %union.tree_node* @get_inner_reference(%union.tree_node* %arg0.6, i64* %lbitsize.i, i64* %lbitpos.i, %union.tree_node** %offset.i, i32* %lmode.i, i32* %lunsignedp.i, i32* %lvolatilep.i) #1
  %cmp4.i = icmp eq %union.tree_node* %call.i11125, %arg0.6
  br i1 %cmp4.i, label %optimize_bit_field_compare.exit, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %if.then6237
  %680 = load i64* %lbitsize.i, align 8, !tbaa !13
  %681 = load i32* %lmode.i, align 4, !tbaa !15
  %idxprom.i11126 = sext i32 %681 to i64
  %arrayidx.i11127 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom.i11126
  %682 = load i16* %arrayidx.i11127, align 2, !tbaa !22
  %conv6.i = zext i16 %682 to i64
  %cmp7.i = icmp eq i64 %680, %conv6.i
  %cmp10.i = icmp slt i64 %680, 0
  %or.cond.i11128 = or i1 %cmp7.i, %cmp10.i
  %683 = load %union.tree_node** %offset.i, align 8
  %cmp13.i = icmp ne %union.tree_node* %683, null
  %or.cond186.i = or i1 %or.cond.i11128, %cmp13.i
  br i1 %or.cond186.i, label %optimize_bit_field_compare.exit, label %lor.lhs.false15.i

lor.lhs.false15.i:                                ; preds = %lor.lhs.false.i
  %code17.i = getelementptr inbounds %union.tree_node* %call.i11125, i64 0, i32 0, i32 0, i32 2
  %bf.load18.i = load i32* %code17.i, align 8
  %bf.clear19.i = and i32 %bf.load18.i, 255
  %cmp20.i = icmp eq i32 %bf.clear19.i, 57
  br i1 %cmp20.i, label %optimize_bit_field_compare.exit, label %if.end.i11129

if.end.i11129:                                    ; preds = %lor.lhs.false15.i
  br i1 %cmp.i11124, label %if.end47.i.thread, label %if.then22.i

if.end47.i.thread:                                ; preds = %if.end.i11129
  %.pre11278 = load i64* %lbitpos.i, align 8, !tbaa !13
  %conv48.i11319 = trunc i64 %680 to i32
  %conv49.i11320 = trunc i64 %.pre11278 to i32
  %type52.i11321 = getelementptr inbounds %union.tree_node* %call.i11125, i64 0, i32 0, i32 0, i32 1
  %684 = load %union.tree_node** %type52.i11321, align 8, !tbaa !11
  %align.i11322 = getelementptr inbounds %union.tree_node* %684, i64 0, i32 0, i32 7
  %685 = bitcast %union.tree_node** %align.i11322 to i32*
  %686 = load i32* %685, align 4, !tbaa !35
  br label %cond.end74.i

if.then22.i:                                      ; preds = %if.end.i11129
  %call23.i = call %union.tree_node* @get_inner_reference(%union.tree_node* %arg1.9, i64* %rbitsize.i, i64* %rbitpos.i, %union.tree_node** %offset.i, i32* %rmode.i, i32* %runsignedp.i, i32* %rvolatilep.i) #1
  %cmp24.i11130 = icmp eq %union.tree_node* %call23.i, %arg1.9
  br i1 %cmp24.i11130, label %optimize_bit_field_compare.exit, label %lor.lhs.false26.i

lor.lhs.false26.i:                                ; preds = %if.then22.i
  %687 = load i64* %lbitpos.i, align 8, !tbaa !13
  %688 = load i64* %rbitpos.i, align 8, !tbaa !13
  %cmp27.i = icmp eq i64 %687, %688
  br i1 %cmp27.i, label %lor.lhs.false29.i, label %optimize_bit_field_compare.exit

lor.lhs.false29.i:                                ; preds = %lor.lhs.false26.i
  %689 = load i64* %lbitsize.i, align 8, !tbaa !13
  %690 = load i64* %rbitsize.i, align 8, !tbaa !13
  %cmp30.i = icmp eq i64 %689, %690
  br i1 %cmp30.i, label %lor.lhs.false32.i, label %optimize_bit_field_compare.exit

lor.lhs.false32.i:                                ; preds = %lor.lhs.false29.i
  %691 = load i32* %lunsignedp.i, align 4, !tbaa !12
  %692 = load i32* %runsignedp.i, align 4, !tbaa !12
  %cmp33.i = icmp ne i32 %691, %692
  %693 = load %union.tree_node** %offset.i, align 8
  %cmp36.i = icmp ne %union.tree_node* %693, null
  %or.cond187.i = or i1 %cmp33.i, %cmp36.i
  br i1 %or.cond187.i, label %optimize_bit_field_compare.exit, label %lor.lhs.false38.i

lor.lhs.false38.i:                                ; preds = %lor.lhs.false32.i
  %code40.i = getelementptr inbounds %union.tree_node* %call23.i, i64 0, i32 0, i32 0, i32 2
  %bf.load41.i = load i32* %code40.i, align 8
  %bf.clear42.i = and i32 %bf.load41.i, 255
  %cmp43.i11131 = icmp eq i32 %bf.clear42.i, 57
  br i1 %cmp43.i11131, label %optimize_bit_field_compare.exit, label %if.end47.i

if.end47.i:                                       ; preds = %lor.lhs.false38.i
  %conv48.i = trunc i64 %689 to i32
  %conv49.i = trunc i64 %687 to i32
  %type52.i = getelementptr inbounds %union.tree_node* %call.i11125, i64 0, i32 0, i32 0, i32 1
  %694 = load %union.tree_node** %type52.i, align 8, !tbaa !11
  %align.i = getelementptr inbounds %union.tree_node* %694, i64 0, i32 0, i32 7
  %695 = bitcast %union.tree_node** %align.i to i32*
  %696 = load i32* %695, align 4, !tbaa !35
  br i1 %cmp.i11124, label %cond.end74.i, label %cond.false.i11132

cond.false.i11132:                                ; preds = %if.end47.i
  %type59.i = getelementptr inbounds %union.tree_node* %call23.i, i64 0, i32 0, i32 0, i32 1
  %697 = load %union.tree_node** %type59.i, align 8, !tbaa !11
  %align61.i = getelementptr inbounds %union.tree_node* %697, i64 0, i32 0, i32 7
  %698 = bitcast %union.tree_node** %align61.i to i32*
  %699 = load i32* %698, align 4, !tbaa !35
  %cmp62.i = icmp ult i32 %696, %699
  %..i = select i1 %cmp62.i, i32 %696, i32 %699
  br label %cond.end74.i

cond.end74.i:                                     ; preds = %if.end47.i.thread, %cond.false.i11132, %if.end47.i
  %conv49.i11325 = phi i32 [ %conv49.i, %if.end47.i ], [ %conv49.i, %cond.false.i11132 ], [ %conv49.i11320, %if.end47.i.thread ]
  %conv48.i11324 = phi i32 [ %conv48.i, %if.end47.i ], [ %conv48.i, %cond.false.i11132 ], [ %conv48.i11319, %if.end47.i.thread ]
  %rinner.0.i11323 = phi %union.tree_node* [ %call23.i, %if.end47.i ], [ %call23.i, %cond.false.i11132 ], [ null, %if.end47.i.thread ]
  %cond75.i = phi i32 [ %696, %if.end47.i ], [ %..i, %cond.false.i11132 ], [ %686, %if.end47.i.thread ]
  %700 = load i32* @word_mode, align 4, !tbaa !15
  %701 = load i32* %lvolatilep.i, align 4, !tbaa !12
  %tobool76.i = icmp eq i32 %701, 0
  br i1 %tobool76.i, label %lor.rhs.i11133, label %lor.end.i11135

lor.rhs.i11133:                                   ; preds = %cond.end74.i
  %702 = load i32* %rvolatilep.i, align 4, !tbaa !12
  %tobool77.i = icmp ne i32 %702, 0
  br label %lor.end.i11135

lor.end.i11135:                                   ; preds = %lor.rhs.i11133, %cond.end74.i
  %703 = phi i1 [ true, %cond.end74.i ], [ %tobool77.i, %lor.rhs.i11133 ]
  %lor.ext.i11134 = zext i1 %703 to i32
  %call78.i = call i32 @get_best_mode(i32 %conv48.i11324, i32 %conv49.i11325, i32 %cond75.i, i32 %700, i32 %lor.ext.i11134) #1
  %cmp79.i = icmp eq i32 %call78.i, 0
  br i1 %cmp79.i, label %optimize_bit_field_compare.exit, label %if.end82.i

if.end82.i:                                       ; preds = %lor.end.i11135
  %call83.i = call %union.tree_node* @type_for_mode(i32 %call78.i, i32 0) #1
  %call84.i = call %union.tree_node* @type_for_mode(i32 %call78.i, i32 1) #1
  %idxprom85.i = sext i32 %call78.i to i64
  %arrayidx86.i = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom85.i
  %704 = load i16* %arrayidx86.i, align 2, !tbaa !22
  %conv87.i = zext i16 %704 to i64
  %705 = load i64* %lbitpos.i, align 8, !tbaa !13
  %neg.i11136 = sub i64 0, %conv87.i
  %and.i11137 = and i64 %705, %neg.i11136
  %sub88.i = sub nsw i64 %705, %and.i11137
  store i64 %sub88.i, i64* %lbitpos.i, align 8, !tbaa !13
  %706 = load i64* %lbitsize.i, align 8, !tbaa !13
  %cmp89.i = icmp eq i64 %conv87.i, %706
  br i1 %cmp89.i, label %optimize_bit_field_compare.exit, label %if.end92.i

if.end92.i:                                       ; preds = %if.end82.i
  %call93.i = call %union.tree_node* @build_int_2_wide(i64 -1, i64 -1) #1
  %type95.i = getelementptr inbounds %union.tree_node* %call93.i, i64 0, i32 0, i32 0, i32 1
  store %union.tree_node* %call84.i, %union.tree_node** %type95.i, align 8, !tbaa !11
  %call96.i = call i32 @force_fit_type(%union.tree_node* %call93.i, i32 0) #1
  %call97.i11138 = call %union.tree_node* @convert(%union.tree_node* %call84.i, %union.tree_node* %call93.i) #1
  %707 = load i64* %lbitsize.i, align 8, !tbaa !13
  %sub98.i = sub nsw i64 %conv87.i, %707
  %708 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !14
  %call.i.i11139 = call %union.tree_node* @size_int_type_wide(i64 %sub98.i, %union.tree_node* %708) #1
  %call100.i = call fastcc %union.tree_node* @const_binop(i32 82, %union.tree_node* %call97.i11138, %union.tree_node* %call.i.i11139) #1
  %709 = load i64* %lbitsize.i, align 8, !tbaa !13
  %sub101.i = sub i64 %conv87.i, %709
  %710 = load i64* %lbitpos.i, align 8, !tbaa !13
  %sub102.i = sub i64 %sub101.i, %710
  %711 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !14
  %call.i250.i = call %union.tree_node* @size_int_type_wide(i64 %sub102.i, %union.tree_node* %711) #1
  %call104.i = call fastcc %union.tree_node* @const_binop(i32 83, %union.tree_node* %call100.i, %union.tree_node* %call.i250.i) #1
  br i1 %cmp.i11124, label %if.end116.i, label %if.then106.i

if.then106.i:                                     ; preds = %if.end92.i
  %712 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !14
  %call.i.i.i11140 = call %union.tree_node* @size_int_type_wide(i64 %conv87.i, %union.tree_node* %712) #1
  %sext = shl i64 %and.i11137, 32
  %conv1.i.i = ashr exact i64 %sext, 32
  %713 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 3), align 8, !tbaa !14
  %call.i5.i.i = call %union.tree_node* @size_int_type_wide(i64 %conv1.i.i, %union.tree_node* %713) #1
  %call3.i.i = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 40, %union.tree_node* %call84.i, %union.tree_node* %call.i11125, %union.tree_node* %call.i.i.i11140, %union.tree_node* %call.i5.i.i) #1
  %unsigned_flag.i.i = getelementptr inbounds %union.tree_node* %call3.i.i, i64 0, i32 0, i32 0, i32 2
  %bf.load.i.i11141 = load i32* %unsigned_flag.i.i, align 8
  %bf.set.i.i11143 = or i32 %bf.load.i.i11141, 8192
  store i32 %bf.set.i.i11143, i32* %unsigned_flag.i.i, align 8
  %call110.i11144 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 88, %union.tree_node* %call84.i, %union.tree_node* %call3.i.i, %union.tree_node* %call104.i) #1
  %714 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !14
  %call.i.i252.i = call %union.tree_node* @size_int_type_wide(i64 %conv87.i, %union.tree_node* %714) #1
  %715 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 3), align 8, !tbaa !14
  %call.i5.i254.i = call %union.tree_node* @size_int_type_wide(i64 %conv1.i.i, %union.tree_node* %715) #1
  %call3.i255.i = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 40, %union.tree_node* %call84.i, %union.tree_node* %rinner.0.i11323, %union.tree_node* %call.i.i252.i, %union.tree_node* %call.i5.i254.i) #1
  %unsigned_flag.i256.i = getelementptr inbounds %union.tree_node* %call3.i255.i, i64 0, i32 0, i32 0, i32 2
  %bf.load.i257.i = load i32* %unsigned_flag.i256.i, align 8
  %bf.set.i259.i = or i32 %bf.load.i257.i, 8192
  store i32 %bf.set.i259.i, i32* %unsigned_flag.i256.i, align 8
  %call114.i = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 88, %union.tree_node* %call84.i, %union.tree_node* %call3.i255.i, %union.tree_node* %call104.i) #1
  %call115.i = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %code.10, %union.tree_node* %0, %union.tree_node* %call110.i11144, %union.tree_node* %call114.i) #1
  br label %optimize_bit_field_compare.exit

if.end116.i:                                      ; preds = %if.end92.i
  %716 = load i32* %lunsignedp.i, align 4, !tbaa !12
  %tobool117.i = icmp eq i32 %716, 0
  br i1 %tobool117.i, label %if.else.i11146, label %if.then118.i

if.then118.i:                                     ; preds = %if.end116.i
  %call119.i = call %union.tree_node* @convert(%union.tree_node* %call84.i, %union.tree_node* %arg1.9) #1
  %717 = load i64* %lbitsize.i, align 8, !tbaa !13
  %718 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !14
  %call.i260.i = call %union.tree_node* @size_int_type_wide(i64 %717, %union.tree_node* %718) #1
  %call121.i11145 = call fastcc %union.tree_node* @const_binop(i32 83, %union.tree_node* %call119.i, %union.tree_node* %call.i260.i) #1
  %call122.i = call i32 @integer_zerop(%union.tree_node* %call121.i11145) #1
  %tobool123.i = icmp eq i32 %call122.i, 0
  br i1 %tobool123.i, label %if.then124.i, label %if.end154.i

if.then124.i:                                     ; preds = %if.then118.i
  %cmp125.i = icmp eq i32 %code.10, 102
  %conv126.i = zext i1 %cmp125.i to i32
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([50 x i8]* @.str1, i64 0, i64 0), i32 %conv126.i) #1
  %719 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 12), align 8, !tbaa !14
  %720 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8, !tbaa !14
  %cond132.i = select i1 %cmp125.i, %union.tree_node* %719, %union.tree_node* %720
  %call133.i = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %cond132.i) #1
  br label %optimize_bit_field_compare.exit

if.else.i11146:                                   ; preds = %if.end116.i
  %call135.i = call %union.tree_node* @convert(%union.tree_node* %call83.i, %union.tree_node* %arg1.9) #1
  %721 = load i64* %lbitsize.i, align 8, !tbaa !13
  %sub136.i = add nsw i64 %721, -1
  %722 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !14
  %call.i261.i = call %union.tree_node* @size_int_type_wide(i64 %sub136.i, %union.tree_node* %722) #1
  %call138.i = call fastcc %union.tree_node* @const_binop(i32 83, %union.tree_node* %call135.i, %union.tree_node* %call.i261.i) #1
  %call139.i = call i32 @integer_zerop(%union.tree_node* %call138.i) #1
  %tobool140.i = icmp eq i32 %call139.i, 0
  br i1 %tobool140.i, label %land.lhs.true.i11147, label %if.end154.i

land.lhs.true.i11147:                             ; preds = %if.else.i11146
  %call141.i = call i32 @integer_all_onesp(%union.tree_node* %call138.i) #1
  %tobool142.i = icmp eq i32 %call141.i, 0
  br i1 %tobool142.i, label %if.then143.i, label %if.end154.i

if.then143.i:                                     ; preds = %land.lhs.true.i11147
  %cmp144.i = icmp eq i32 %code.10, 102
  %conv145.i = zext i1 %cmp144.i to i32
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([50 x i8]* @.str1, i64 0, i64 0), i32 %conv145.i) #1
  %723 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 12), align 8, !tbaa !14
  %724 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8, !tbaa !14
  %cond151.i = select i1 %cmp144.i, %union.tree_node* %723, %union.tree_node* %724
  %call152.i = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %cond151.i) #1
  br label %optimize_bit_field_compare.exit

if.end154.i:                                      ; preds = %land.lhs.true.i11147, %if.else.i11146, %if.then118.i
  %725 = load i64* %lbitsize.i, align 8, !tbaa !13
  %cmp155.i = icmp eq i64 %725, 1
  br i1 %cmp155.i, label %land.lhs.true157.i, label %if.end165.i

land.lhs.true157.i:                               ; preds = %if.end154.i
  %call158.i = call i32 @integer_zerop(%union.tree_node* %arg1.9) #1
  %tobool159.i = icmp eq i32 %call158.i, 0
  br i1 %tobool159.i, label %if.then160.i, label %if.end165.i

if.then160.i:                                     ; preds = %land.lhs.true157.i
  %cmp161.i = icmp eq i32 %code.10, 101
  %cond163.i = select i1 %cmp161.i, i32 102, i32 101
  %726 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8, !tbaa !14
  %call164.i = call %union.tree_node* @convert(%union.tree_node* %679, %union.tree_node* %726) #1
  br label %if.end165.i

if.end165.i:                                      ; preds = %if.then160.i, %land.lhs.true157.i, %if.end154.i
  %rhs.addr.0.i = phi %union.tree_node* [ %arg1.9, %land.lhs.true157.i ], [ %call164.i, %if.then160.i ], [ %arg1.9, %if.end154.i ]
  %code.addr.0.i = phi i32 [ %code.10, %land.lhs.true157.i ], [ %cond163.i, %if.then160.i ], [ %code.10, %if.end154.i ]
  %727 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !14
  %call.i.i263.i = call %union.tree_node* @size_int_type_wide(i64 %conv87.i, %union.tree_node* %727) #1
  %sext11211 = shl i64 %and.i11137, 32
  %conv1.i264.i = ashr exact i64 %sext11211, 32
  %728 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 3), align 8, !tbaa !14
  %call.i5.i265.i = call %union.tree_node* @size_int_type_wide(i64 %conv1.i264.i, %union.tree_node* %728) #1
  %call3.i266.i = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 40, %union.tree_node* %call84.i, %union.tree_node* %call.i11125, %union.tree_node* %call.i.i263.i, %union.tree_node* %call.i5.i265.i) #1
  %unsigned_flag.i267.i = getelementptr inbounds %union.tree_node* %call3.i266.i, i64 0, i32 0, i32 0, i32 2
  %bf.load.i268.i = load i32* %unsigned_flag.i267.i, align 8
  %bf.set.i270.i = or i32 %bf.load.i268.i, 8192
  store i32 %bf.set.i270.i, i32* %unsigned_flag.i267.i, align 8
  %729 = load i32* %lvolatilep.i, align 4, !tbaa !12
  %tobool169.i = icmp eq i32 %729, 0
  br i1 %tobool169.i, label %if.end178.i, label %if.then170.i

if.then170.i:                                     ; preds = %if.end165.i
  %bf.set177.i = or i32 %bf.load.i268.i, 10496
  store i32 %bf.set177.i, i32* %unsigned_flag.i267.i, align 8
  br label %if.end178.i

if.end178.i:                                      ; preds = %if.then170.i, %if.end165.i
  %call179.i = call %union.tree_node* @convert(%union.tree_node* %call84.i, %union.tree_node* %rhs.addr.0.i) #1
  %730 = load i64* %lbitpos.i, align 8, !tbaa !13
  %731 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !14
  %call.i271.i = call %union.tree_node* @size_int_type_wide(i64 %730, %union.tree_node* %731) #1
  %call181.i11149 = call fastcc %union.tree_node* @const_binop(i32 82, %union.tree_node* %call179.i, %union.tree_node* %call.i271.i) #1
  %call182.i = call fastcc %union.tree_node* @const_binop(i32 88, %union.tree_node* %call181.i11149, %union.tree_node* %call104.i) #1
  %call183.i = call %union.tree_node* @fold(%union.tree_node* %call182.i) #1
  %call184.i = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 88, %union.tree_node* %call84.i, %union.tree_node* %call3.i266.i, %union.tree_node* %call104.i) #1
  %call185.i = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %code.addr.0.i, %union.tree_node* %0, %union.tree_node* %call184.i, %union.tree_node* %call183.i) #1
  br label %optimize_bit_field_compare.exit

optimize_bit_field_compare.exit:                  ; preds = %if.then6237, %lor.lhs.false.i, %lor.lhs.false15.i, %if.then22.i, %lor.lhs.false26.i, %lor.lhs.false29.i, %lor.lhs.false32.i, %lor.lhs.false38.i, %lor.end.i11135, %if.end82.i, %if.then106.i, %if.then124.i, %if.then143.i, %if.end178.i
  %retval.0.i11150 = phi %union.tree_node* [ %call185.i, %if.end178.i ], [ %call133.i, %if.then124.i ], [ %call152.i, %if.then143.i ], [ %call115.i, %if.then106.i ], [ null, %lor.lhs.false15.i ], [ null, %lor.lhs.false.i ], [ null, %if.then6237 ], [ null, %lor.lhs.false29.i ], [ null, %lor.lhs.false26.i ], [ null, %lor.lhs.false38.i ], [ null, %lor.lhs.false32.i ], [ null, %if.then22.i ], [ null, %lor.end.i11135 ], [ null, %if.end82.i ]
  call void @llvm.lifetime.end(i64 8, i8* %668) #1
  call void @llvm.lifetime.end(i64 8, i8* %669) #1
  call void @llvm.lifetime.end(i64 8, i8* %670) #1
  call void @llvm.lifetime.end(i64 8, i8* %671) #1
  call void @llvm.lifetime.end(i64 4, i8* %672) #1
  call void @llvm.lifetime.end(i64 4, i8* %673) #1
  call void @llvm.lifetime.end(i64 4, i8* %674) #1
  call void @llvm.lifetime.end(i64 4, i8* %675) #1
  call void @llvm.lifetime.end(i64 4, i8* %676) #1
  call void @llvm.lifetime.end(i64 4, i8* %677) #1
  call void @llvm.lifetime.end(i64 8, i8* %678) #1
  %tobool6239 = icmp ne %union.tree_node* %retval.0.i11150, null
  %cond6243 = select i1 %tobool6239, %union.tree_node* %retval.0.i11150, %union.tree_node* %t.6
  br label %return

if.end6244:                                       ; preds = %land.lhs.true6228, %if.end6208
  %cmp6245 = icmp eq i32 %code.10, 101
  br i1 %664, label %land.lhs.true6250, label %if.end6404

land.lhs.true6250:                                ; preds = %if.end6244
  %732 = load %union.tree_node** %type5478, align 8, !tbaa !11
  %code6254 = getelementptr inbounds %union.tree_node* %732, i64 0, i32 0, i32 0, i32 2
  %bf.load6255 = load i32* %code6254, align 8
  %bf.clear6256 = and i32 %bf.load6255, 255
  %cmp6257 = icmp eq i32 %bf.clear6256, 8
  br i1 %cmp6257, label %land.lhs.true6259, label %land.lhs.true6322

land.lhs.true6259:                                ; preds = %land.lhs.true6250
  switch i32 %bf.clear6212, label %switch.early.test [
    i32 125, label %if.then6287
    i32 27, label %if.then6287
  ]

switch.early.test:                                ; preds = %land.lhs.true6259
  %bf.load6269 = load i32* %code5529, align 8
  %bf.clear6270 = and i32 %bf.load6269, 255
  switch i32 %bf.clear6270, label %land.lhs.true6322 [
    i32 125, label %if.then6287
    i32 27, label %if.then6287
  ]

if.then6287:                                      ; preds = %land.lhs.true6259, %land.lhs.true6259, %switch.early.test, %switch.early.test
  %type6292 = getelementptr inbounds %union.tree_node* %732, i64 0, i32 0, i32 0, i32 1
  %733 = load %union.tree_node** %type6292, align 8, !tbaa !11
  %call6297 = call %union.tree_node* @save_expr(%union.tree_node* %arg0.6) #1
  %call6298 = call %union.tree_node* @save_expr(%union.tree_node* %arg1.9) #1
  %call6299 = call %union.tree_node* @build1(i32 127, %union.tree_node* %733, %union.tree_node* %call6297) #1
  %call6300 = call %union.tree_node* @fold(%union.tree_node* %call6299)
  %call6301 = call %union.tree_node* @build1(i32 128, %union.tree_node* %733, %union.tree_node* %call6297) #1
  %call6302 = call %union.tree_node* @fold(%union.tree_node* %call6301)
  %call6303 = call %union.tree_node* @build1(i32 127, %union.tree_node* %733, %union.tree_node* %call6298) #1
  %call6304 = call %union.tree_node* @fold(%union.tree_node* %call6303)
  %call6305 = call %union.tree_node* @build1(i32 128, %union.tree_node* %733, %union.tree_node* %call6298) #1
  %call6306 = call %union.tree_node* @fold(%union.tree_node* %call6305)
  %cond6309 = select i1 %cmp6245, i32 91, i32 92
  %call6310 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %code.10, %union.tree_node* %0, %union.tree_node* %call6300, %union.tree_node* %call6304) #1
  %call6311 = call %union.tree_node* @fold(%union.tree_node* %call6310)
  %call6312 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %code.10, %union.tree_node* %0, %union.tree_node* %call6302, %union.tree_node* %call6306) #1
  %call6313 = call %union.tree_node* @fold(%union.tree_node* %call6312)
  %call6314 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %cond6309, %union.tree_node* %0, %union.tree_node* %call6311, %union.tree_node* %call6313) #1
  %call6315 = call %union.tree_node* @fold(%union.tree_node* %call6314)
  br label %return

land.lhs.true6322:                                ; preds = %switch.early.test, %land.lhs.true6250
  %call6323 = call i32 @integer_zerop(%union.tree_node* %arg1.9) #1
  %tobool6324 = icmp eq i32 %call6323, 0
  br i1 %tobool6324, label %if.end6404, label %land.lhs.true6325

land.lhs.true6325:                                ; preds = %land.lhs.true6322
  %bf.load6328 = load i32* %constant_flag4518, align 8
  %bf.clear6329 = and i32 %bf.load6328, 255
  %cmp6330 = icmp eq i32 %bf.clear6329, 53
  br i1 %cmp6330, label %land.lhs.true6332, label %if.end6404

land.lhs.true6332:                                ; preds = %land.lhs.true6325
  %operands6334 = getelementptr inbounds %union.tree_node* %arg0.6, i64 0, i32 0, i32 2
  %arrayidx6335 = bitcast i32* %operands6334 to %union.tree_node**
  %734 = load %union.tree_node** %arrayidx6335, align 8, !tbaa !14
  %code6337 = getelementptr inbounds %union.tree_node* %734, i64 0, i32 0, i32 0, i32 2
  %bf.load6338 = load i32* %code6337, align 8
  %bf.clear6339 = and i32 %bf.load6338, 255
  %cmp6340 = icmp eq i32 %bf.clear6339, 121
  br i1 %cmp6340, label %if.then6342, label %if.end6404

if.then6342:                                      ; preds = %land.lhs.true6332
  %operands6348 = getelementptr inbounds %union.tree_node* %734, i64 0, i32 0, i32 2
  %arrayidx6349 = bitcast i32* %operands6348 to %union.tree_node**
  %735 = load %union.tree_node** %arrayidx6349, align 8, !tbaa !14
  %code6352 = getelementptr inbounds %union.tree_node* %735, i64 0, i32 0, i32 0, i32 2
  %bf.load6353 = load i32* %code6352, align 8
  %bf.clear6354 = and i32 %bf.load6353, 255
  %cmp6355 = icmp eq i32 %bf.clear6354, 30
  br i1 %cmp6355, label %land.lhs.true6357, label %if.end6404

land.lhs.true6357:                                ; preds = %if.then6342
  %built_in_class = getelementptr inbounds %union.tree_node* %735, i64 0, i32 0, i32 5
  %736 = bitcast i48* %built_in_class to i64*
  %bf.load6359 = load i64* %736, align 8
  %bf.lshr6360 = lshr i64 %bf.load6359, 29
  %bf.lshr6360.tr = trunc i64 %bf.lshr6360 to i32
  %bf.cast6362 = and i32 %bf.lshr6360.tr, 3
  switch i32 %bf.cast6362, label %land.lhs.true6374 [
    i32 0, label %if.end6404
    i32 2, label %if.end6404
  ]

land.lhs.true6374:                                ; preds = %land.lhs.true6357
  %u1 = getelementptr inbounds %union.tree_node* %735, i64 0, i32 0, i32 6
  %f = bitcast %union.anon* %u1 to i32*
  %737 = load i32* %f, align 4, !tbaa !15
  %cmp6376 = icmp eq i32 %737, 31
  br i1 %cmp6376, label %land.lhs.true6378, label %if.end6404

land.lhs.true6378:                                ; preds = %land.lhs.true6374
  %arrayidx6381 = getelementptr inbounds i32* %operands6334, i64 2
  %738 = bitcast i32* %arrayidx6381 to %union.tree_node**
  %739 = load %union.tree_node** %738, align 8, !tbaa !14
  %tobool6382 = icmp eq %union.tree_node* %739, null
  br i1 %tobool6382, label %if.end6404, label %land.lhs.true6383

land.lhs.true6383:                                ; preds = %land.lhs.true6378
  %value6385 = getelementptr inbounds %union.tree_node* %739, i64 0, i32 0, i32 2
  %740 = bitcast i32* %value6385 to %union.tree_node**
  %741 = load %union.tree_node** %740, align 8, !tbaa !31
  %type6387 = getelementptr inbounds %union.tree_node* %741, i64 0, i32 0, i32 0, i32 1
  %742 = load %union.tree_node** %type6387, align 8, !tbaa !11
  %code6389 = getelementptr inbounds %union.tree_node* %742, i64 0, i32 0, i32 0, i32 2
  %bf.load6390 = load i32* %code6389, align 8
  %bf.clear6391 = and i32 %bf.load6390, 255
  %cmp6392 = icmp eq i32 %bf.clear6391, 13
  br i1 %cmp6392, label %land.lhs.true6394, label %if.end6404

land.lhs.true6394:                                ; preds = %land.lhs.true6383
  %chain = getelementptr inbounds %union.tree_node* %739, i64 0, i32 0, i32 0, i32 0
  %743 = load %union.tree_node** %chain, align 8, !tbaa !36
  %tobool6396 = icmp eq %union.tree_node* %743, null
  br i1 %tobool6396, label %if.then6397, label %if.end6404

if.then6397:                                      ; preds = %land.lhs.true6394
  %744 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 0), align 8, !tbaa !14
  %call6400 = call %union.tree_node* @build1(i32 41, %union.tree_node* %744, %union.tree_node* %741) #1
  %745 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8, !tbaa !14
  %call6401 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %code.10, %union.tree_node* %0, %union.tree_node* %call6400, %union.tree_node* %745) #1
  %call6402 = call %union.tree_node* @fold(%union.tree_node* %call6401)
  br label %return

if.end6404:                                       ; preds = %if.end6244, %land.lhs.true6357, %land.lhs.true6357, %land.lhs.true6394, %land.lhs.true6378, %land.lhs.true6322, %if.then6342, %land.lhs.true6374, %land.lhs.true6383, %land.lhs.true6332, %land.lhs.true6325
  %746 = and i32 %code.10, -2
  %747 = icmp eq i32 %746, 98
  br i1 %747, label %if.then6410, label %if.end6412

if.then6410:                                      ; preds = %if.end6404
  switch i32 %code.10, label %sw.default.i10116 [
    i32 101, label %if.end6412
    i32 102, label %if.end6412
    i32 99, label %if.end6420
    i32 100, label %sw.bb2.i10113
    i32 97, label %sw.bb3.i10114
    i32 98, label %sw.bb3.i
  ]

sw.bb2.i10113:                                    ; preds = %if.then6410
  br label %if.end6420

sw.bb3.i10114:                                    ; preds = %if.then6410
  br label %if.end6420

sw.default.i10116:                                ; preds = %if.then6410
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8]* @.str, i64 0, i64 0), i32 2357, i8* getelementptr inbounds ([21 x i8]* @__FUNCTION__.swap_tree_comparison, i64 0, i64 0)) #7
  unreachable

if.end6412:                                       ; preds = %if.then6410, %if.then6410, %if.end6404
  %arg1.10 = phi %union.tree_node* [ %arg1.9, %if.end6404 ], [ %arg0.6, %if.then6410 ], [ %arg0.6, %if.then6410 ]
  %arg0.7 = phi %union.tree_node* [ %arg0.6, %if.end6404 ], [ %arg1.9, %if.then6410 ], [ %arg1.9, %if.then6410 ]
  %748 = and i32 %code.10, -3
  %749 = icmp eq i32 %748, 100
  br i1 %749, label %if.then6418, label %if.end6420

if.then6418:                                      ; preds = %if.end6412
  switch i32 %code.10, label %sw.default.i [
    i32 101, label %if.end6420
    i32 102, label %sw.bb1.i
    i32 99, label %sw.bb2.i
    i32 100, label %sw.bb3.i
    i32 97, label %sw.bb4.i
    i32 98, label %sw.bb5.i
  ]

sw.bb1.i:                                         ; preds = %if.then6418
  br label %if.end6420

sw.bb2.i:                                         ; preds = %if.then6418
  br label %if.end6420

sw.bb3.i:                                         ; preds = %if.then6410, %if.then6418
  %arg1.101119811202 = phi %union.tree_node* [ %arg1.10, %if.then6418 ], [ %arg0.6, %if.then6410 ]
  %arg0.71119911200 = phi %union.tree_node* [ %arg0.7, %if.then6418 ], [ %arg1.9, %if.then6410 ]
  br label %if.end6420

sw.bb4.i:                                         ; preds = %if.then6418
  br label %if.end6420

sw.bb5.i:                                         ; preds = %if.then6418
  br label %if.end6420

sw.default.i:                                     ; preds = %if.then6418
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8]* @.str, i64 0, i64 0), i32 2332, i8* getelementptr inbounds ([23 x i8]* @__FUNCTION__.invert_tree_comparison, i64 0, i64 0)) #7
  unreachable

if.end6420:                                       ; preds = %if.then6410, %sw.bb2.i10113, %sw.bb3.i10114, %sw.bb5.i, %sw.bb4.i, %sw.bb3.i, %sw.bb2.i, %sw.bb1.i, %if.then6418, %if.end6412
  %arg0.711195 = phi %union.tree_node* [ %arg0.7, %if.end6412 ], [ %arg0.7, %sw.bb5.i ], [ %arg0.7, %sw.bb4.i ], [ %arg0.71119911200, %sw.bb3.i ], [ %arg0.7, %sw.bb2.i ], [ %arg0.7, %sw.bb1.i ], [ %arg0.7, %if.then6418 ], [ %arg1.9, %sw.bb3.i10114 ], [ %arg1.9, %sw.bb2.i10113 ], [ %arg1.9, %if.then6410 ]
  %arg1.1011194 = phi %union.tree_node* [ %arg1.10, %if.end6412 ], [ %arg1.10, %sw.bb5.i ], [ %arg1.10, %sw.bb4.i ], [ %arg1.101119811202, %sw.bb3.i ], [ %arg1.10, %sw.bb2.i ], [ %arg1.10, %sw.bb1.i ], [ %arg1.10, %if.then6418 ], [ %arg0.6, %sw.bb3.i10114 ], [ %arg0.6, %sw.bb2.i10113 ], [ %arg0.6, %if.then6410 ]
  %invert.0 = phi i32 [ 0, %if.end6412 ], [ 1, %sw.bb5.i ], [ 1, %sw.bb4.i ], [ 1, %sw.bb3.i ], [ 1, %sw.bb2.i ], [ 1, %sw.bb1.i ], [ 1, %if.then6418 ], [ 0, %sw.bb3.i10114 ], [ 0, %sw.bb2.i10113 ], [ 0, %if.then6410 ]
  %code.13 = phi i32 [ %code.10, %if.end6412 ], [ 99, %sw.bb5.i ], [ 100, %sw.bb4.i ], [ 97, %sw.bb3.i ], [ 98, %sw.bb2.i ], [ 101, %sw.bb1.i ], [ 102, %if.then6418 ], [ 99, %sw.bb3.i10114 ], [ 98, %sw.bb2.i10113 ], [ 97, %if.then6410 ]
  %code6422 = getelementptr inbounds %union.tree_node* %arg0.711195, i64 0, i32 0, i32 0, i32 2
  %bf.load6423 = load i32* %code6422, align 8
  %bf.clear6424 = and i32 %bf.load6423, 255
  switch i32 %bf.clear6424, label %return [
    i32 25, label %land.lhs.true6427
    i32 26, label %land.lhs.true6524
  ]

land.lhs.true6427:                                ; preds = %if.end6420
  %code6429 = getelementptr inbounds %union.tree_node* %arg1.1011194, i64 0, i32 0, i32 0, i32 2
  %bf.load6430 = load i32* %code6429, align 8
  %bf.clear6431 = and i32 %bf.load6430, 255
  %cmp6432 = icmp eq i32 %bf.clear6431, 25
  br i1 %cmp6432, label %if.then6434, label %return

if.then6434:                                      ; preds = %land.lhs.true6427
  %cmp6435 = icmp eq i32 %code.13, 101
  br i1 %cmp6435, label %if.then6437, label %if.else6441

if.then6437:                                      ; preds = %if.then6434
  %call6438 = call i32 @tree_int_cst_equal(%union.tree_node* %arg0.711195, %union.tree_node* %arg1.1011194) #1
  %conv6439 = sext i32 %call6438 to i64
  %call6440 = call %union.tree_node* @build_int_2_wide(i64 %conv6439, i64 0) #1
  br label %if.end6576

if.else6441:                                      ; preds = %if.then6434
  %type6443 = getelementptr inbounds %union.tree_node* %arg0.711195, i64 0, i32 0, i32 0, i32 1
  %750 = load %union.tree_node** %type6443, align 8, !tbaa !11
  %unsigned_flag6445 = getelementptr inbounds %union.tree_node* %750, i64 0, i32 0, i32 0, i32 2
  %bf.load6446 = load i32* %unsigned_flag6445, align 8
  %bf.clear6448 = and i32 %bf.load6446, 8192
  %tobool6449 = icmp eq i32 %bf.clear6448, 0
  %int_cst6452 = getelementptr inbounds %union.tree_node* %arg0.711195, i64 0, i32 0, i32 2
  %high6453 = getelementptr inbounds i32* %int_cst6452, i64 2
  %751 = bitcast i32* %high6453 to i64*
  %752 = load i64* %751, align 8, !tbaa !10
  %int_cst6455 = getelementptr inbounds %union.tree_node* %arg1.1011194, i64 0, i32 0, i32 2
  %high6456 = getelementptr inbounds i32* %int_cst6455, i64 2
  %753 = bitcast i32* %high6456 to i64*
  %754 = load i64* %753, align 8, !tbaa !10
  br i1 %tobool6449, label %cond.false6481, label %cond.true6450

cond.true6450:                                    ; preds = %if.else6441
  %cmp6457 = icmp ult i64 %752, %754
  br i1 %cmp6457, label %cond.end6512, label %lor.rhs6459

lor.rhs6459:                                      ; preds = %cond.true6450
  %cmp6466 = icmp eq i64 %752, %754
  br i1 %cmp6466, label %land.rhs6468, label %cond.end6512

land.rhs6468:                                     ; preds = %lor.rhs6459
  %low6471 = bitcast i32* %int_cst6452 to i64*
  %755 = load i64* %low6471, align 8, !tbaa !1
  %low6474 = bitcast i32* %int_cst6455 to i64*
  %756 = load i64* %low6474, align 8, !tbaa !1
  %cmp6475 = icmp ult i64 %755, %756
  br label %cond.end6512

cond.false6481:                                   ; preds = %if.else6441
  %cmp6488 = icmp slt i64 %752, %754
  br i1 %cmp6488, label %cond.end6512, label %lor.rhs6490

lor.rhs6490:                                      ; preds = %cond.false6481
  %cmp6497 = icmp eq i64 %752, %754
  br i1 %cmp6497, label %land.rhs6499, label %cond.end6512

land.rhs6499:                                     ; preds = %lor.rhs6490
  %low6502 = bitcast i32* %int_cst6452 to i64*
  %757 = load i64* %low6502, align 8, !tbaa !1
  %low6505 = bitcast i32* %int_cst6455 to i64*
  %758 = load i64* %low6505, align 8, !tbaa !1
  %cmp6506 = icmp ult i64 %757, %758
  br label %cond.end6512

cond.end6512:                                     ; preds = %cond.true6450, %land.rhs6468, %lor.rhs6459, %cond.false6481, %land.rhs6499, %lor.rhs6490
  %.sink = phi i1 [ true, %cond.false6481 ], [ false, %lor.rhs6490 ], [ %cmp6506, %land.rhs6499 ], [ true, %cond.true6450 ], [ false, %lor.rhs6459 ], [ %cmp6475, %land.rhs6468 ]
  %conv6514 = zext i1 %.sink to i64
  %call6515 = call %union.tree_node* @build_int_2_wide(i64 %conv6514, i64 0) #1
  br label %if.end6576

land.lhs.true6524:                                ; preds = %if.end6420
  %code6526 = getelementptr inbounds %union.tree_node* %arg1.1011194, i64 0, i32 0, i32 0, i32 2
  %bf.load6527 = load i32* %code6526, align 8
  %bf.clear6528 = and i32 %bf.load6527, 255
  %cmp6529 = icmp eq i32 %bf.clear6528, 26
  br i1 %cmp6529, label %if.then6531, label %return

if.then6531:                                      ; preds = %land.lhs.true6524
  %real_cst6533 = getelementptr inbounds %union.tree_node* %arg0.711195, i64 0, i32 0, i32 2
  %759 = bitcast i32* %real_cst6533 to %struct.realvaluetype*
  %call6534 = call i32 @target_isnan(%struct.realvaluetype* byval align 8 %759) #1
  %tobool6535 = icmp eq i32 %call6534, 0
  br i1 %tobool6535, label %lor.lhs.false6536, label %if.then6541

lor.lhs.false6536:                                ; preds = %if.then6531
  %real_cst6538 = getelementptr inbounds %union.tree_node* %arg1.1011194, i64 0, i32 0, i32 2
  %760 = bitcast i32* %real_cst6538 to %struct.realvaluetype*
  %call6539 = call i32 @target_isnan(%struct.realvaluetype* byval align 8 %760) #1
  %tobool6540 = icmp eq i32 %call6539, 0
  br i1 %tobool6540, label %if.else6550, label %if.then6541

if.then6541:                                      ; preds = %lor.lhs.false6536, %if.then6531
  %cmp6544 = icmp eq i32 %code.13, 97
  %not.tobool6542 = icmp ne i32 %invert.0, 0
  %.cmp6544 = and i1 %cmp6544, %not.tobool6542
  %conv6548 = zext i1 %.cmp6544 to i64
  %call6549 = call %union.tree_node* @build_int_2_wide(i64 %conv6548, i64 0) #1
  br label %if.end6576

if.else6550:                                      ; preds = %lor.lhs.false6536
  %cmp6551 = icmp eq i32 %code.13, 101
  %call6558 = call i32 @ereal_cmp(%struct.realvaluetype* byval align 8 %759, %struct.realvaluetype* byval align 8 %760) #1
  br i1 %cmp6551, label %if.then6553, label %if.else6563

if.then6553:                                      ; preds = %if.else6550
  %cmp6559 = icmp eq i32 %call6558, 0
  %conv6561 = zext i1 %cmp6559 to i64
  %call6562 = call %union.tree_node* @build_int_2_wide(i64 %conv6561, i64 0) #1
  br label %if.end6576

if.else6563:                                      ; preds = %if.else6550
  %cmp6569 = icmp eq i32 %call6558, -1
  %conv6571 = zext i1 %cmp6569 to i64
  %call6572 = call %union.tree_node* @build_int_2_wide(i64 %conv6571, i64 0) #1
  br label %if.end6576

if.end6576:                                       ; preds = %if.then6553, %if.else6563, %if.then6541, %if.then6437, %cond.end6512
  %t1.5 = phi %union.tree_node* [ %call6440, %if.then6437 ], [ %call6515, %cond.end6512 ], [ %call6549, %if.then6541 ], [ %call6562, %if.then6553 ], [ %call6572, %if.else6563 ]
  %cmp6577 = icmp eq %union.tree_node* %t1.5, null
  br i1 %cmp6577, label %return, label %if.end6580

if.end6580:                                       ; preds = %if.end6576
  %tobool6581 = icmp eq i32 %invert.0, 0
  br i1 %tobool6581, label %if.end6586, label %if.then6582

if.then6582:                                      ; preds = %if.end6580
  %int_cst6584 = getelementptr inbounds %union.tree_node* %t1.5, i64 0, i32 0, i32 2
  %low6585 = bitcast i32* %int_cst6584 to i64*
  %761 = load i64* %low6585, align 8, !tbaa !1
  %xor = xor i64 %761, 1
  store i64 %xor, i64* %low6585, align 8, !tbaa !1
  br label %if.end6586

if.end6586:                                       ; preds = %if.end6580, %if.then6582
  %type6588 = getelementptr inbounds %union.tree_node* %t1.5, i64 0, i32 0, i32 0, i32 1
  store %union.tree_node* %0, %union.tree_node** %type6588, align 8, !tbaa !11
  %code6590 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2
  %bf.load6591 = load i32* %code6590, align 8
  %bf.clear6592 = and i32 %bf.load6591, 255
  %cmp6593 = icmp eq i32 %bf.clear6592, 11
  br i1 %cmp6593, label %if.then6595, label %return

if.then6595:                                      ; preds = %if.end6586
  %call6596 = call %union.tree_node* @truthvalue_conversion(%union.tree_node* %t1.5) #1
  br label %return

sw.bb6598:                                        ; preds = %if.end901
  %code6600 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 0, i32 2
  %bf.load6601 = load i32* %code6600, align 8
  %bf.clear6602 = and i32 %bf.load6601, 255
  %cmp6603 = icmp eq i32 %bf.clear6602, 25
  br i1 %cmp6603, label %if.then6605, label %if.else6614

if.then6605:                                      ; preds = %sw.bb6598
  %call6606 = call i32 @integer_zerop(%union.tree_node* %arg0.5) #1
  %tobool6607 = icmp ne i32 %call6606, 0
  %idxprom6609 = select i1 %tobool6607, i64 2, i64 1
  %operands6611 = getelementptr inbounds %union.tree_node* %expr, i64 0, i32 0, i32 2
  %762 = bitcast i32* %operands6611 to [1 x %union.tree_node*]*
  %arrayidx6612 = getelementptr inbounds [1 x %union.tree_node*]* %762, i64 0, i64 %idxprom6609
  %763 = load %union.tree_node** %arrayidx6612, align 8, !tbaa !14
  %764 = load i32* @pedantic_lvalues, align 4, !tbaa !12
  %tobool.i10095 = icmp eq i32 %764, 0
  br i1 %tobool.i10095, label %return, label %if.then.i10099

if.then.i10099:                                   ; preds = %if.then6605
  %code.i.i10096 = getelementptr inbounds %union.tree_node* %763, i64 0, i32 0, i32 0, i32 2
  %bf.load.i.i10097 = load i32* %code.i.i10096, align 8
  %bf.clear.i.i10098 = and i32 %bf.load.i.i10097, 255
  switch i32 %bf.clear.i.i10098, label %if.end.i.i10108 [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i.i10108:                                  ; preds = %if.then.i10099
  %type.i.i10100 = getelementptr inbounds %union.tree_node* %763, i64 0, i32 0, i32 0, i32 1
  %765 = load %union.tree_node** %type.i.i10100, align 8, !tbaa !11
  %call.i.i10101 = call %union.tree_node* @build1(i32 116, %union.tree_node* %765, %union.tree_node* %763) #1
  %bf.load26.i.i10102 = load i32* %code.i.i10096, align 8
  %bf.clear27.i.i10103 = and i32 %bf.load26.i.i10102, 512
  %constant_flag29.i.i10104 = getelementptr inbounds %union.tree_node* %call.i.i10101, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i.i10105 = load i32* %constant_flag29.i.i10104, align 8
  %bf.clear31.i.i10106 = and i32 %bf.load30.i.i10105, -513
  %bf.set.i.i10107 = or i32 %bf.clear31.i.i10106, %bf.clear27.i.i10103
  store i32 %bf.set.i.i10107, i32* %constant_flag29.i.i10104, align 8
  br label %return

if.else6614:                                      ; preds = %sw.bb6598
  %operands6616 = getelementptr inbounds %union.tree_node* %expr, i64 0, i32 0, i32 2
  %arrayidx6617 = getelementptr inbounds i32* %operands6616, i64 4
  %766 = bitcast i32* %arrayidx6617 to %union.tree_node**
  %767 = load %union.tree_node** %766, align 8, !tbaa !14
  %call6618 = call i32 @operand_equal_p(%union.tree_node* %arg1.3, %union.tree_node* %767, i32 0)
  %tobool6619 = icmp eq i32 %call6618, 0
  br i1 %tobool6619, label %if.end6623, label %if.then6620

if.then6620:                                      ; preds = %if.else6614
  %call.i10086 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %arg1.3) #1
  %bf.load.i10088 = load i32* %code6600, align 8
  %bf.clear.i10089 = and i32 %bf.load.i10088, 256
  %tobool.i10090 = icmp eq i32 %bf.clear.i10089, 0
  br i1 %tobool.i10090, label %if.end.i10093, label %if.then.i10092

if.then.i10092:                                   ; preds = %if.then6620
  %call1.i10091 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 47, %union.tree_node* %0, %union.tree_node* %arg0.5, %union.tree_node* %call.i10086) #1
  br label %return

if.end.i10093:                                    ; preds = %if.then6620
  %768 = load i32* @pedantic_lvalues, align 4, !tbaa !12
  %tobool.i.i = icmp eq i32 %768, 0
  br i1 %tobool.i.i, label %return, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.end.i10093
  %code.i.i.i = getelementptr inbounds %union.tree_node* %call.i10086, i64 0, i32 0, i32 0, i32 2
  %bf.load.i.i.i = load i32* %code.i.i.i, align 8
  %bf.clear.i.i.i = and i32 %bf.load.i.i.i, 255
  switch i32 %bf.clear.i.i.i, label %if.end.i.i.i [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i.i.i:                                     ; preds = %if.then.i.i
  %type.i.i.i = getelementptr inbounds %union.tree_node* %call.i10086, i64 0, i32 0, i32 0, i32 1
  %769 = load %union.tree_node** %type.i.i.i, align 8, !tbaa !11
  %call.i.i.i = call %union.tree_node* @build1(i32 116, %union.tree_node* %769, %union.tree_node* %call.i10086) #1
  %bf.load26.i.i.i = load i32* %code.i.i.i, align 8
  %bf.clear27.i.i.i = and i32 %bf.load26.i.i.i, 512
  %constant_flag29.i.i.i = getelementptr inbounds %union.tree_node* %call.i.i.i, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i.i.i = load i32* %constant_flag29.i.i.i, align 8
  %bf.clear31.i.i.i = and i32 %bf.load30.i.i.i, -513
  %bf.set.i.i.i = or i32 %bf.clear31.i.i.i, %bf.clear27.i.i.i
  store i32 %bf.set.i.i.i, i32* %constant_flag29.i.i.i, align 8
  br label %return

if.end6623:                                       ; preds = %if.else6614
  %call6624 = call i32 @integer_zerop(%union.tree_node* %arg1.3) #1
  %tobool6625 = icmp eq i32 %call6624, 0
  br i1 %tobool6625, label %lor.lhs.false6626, label %if.then6665

lor.lhs.false6626:                                ; preds = %if.end6623
  %constant_flag6628 = getelementptr inbounds %union.tree_node* %arg1.3, i64 0, i32 0, i32 0, i32 2
  %bf.load6629 = load i32* %constant_flag6628, align 8
  %bf.clear6631 = and i32 %bf.load6629, 512
  %tobool6632 = icmp eq i32 %bf.clear6631, 0
  br i1 %tobool6632, label %lor.lhs.false6643, label %land.lhs.true6633

land.lhs.true6633:                                ; preds = %lor.lhs.false6626
  %770 = load %union.tree_node** %766, align 8, !tbaa !14
  %constant_flag6638 = getelementptr inbounds %union.tree_node* %770, i64 0, i32 0, i32 0, i32 2
  %bf.load6639 = load i32* %constant_flag6638, align 8
  %bf.clear6641 = and i32 %bf.load6639, 512
  %tobool6642 = icmp eq i32 %bf.clear6641, 0
  br i1 %tobool6642, label %if.then6665, label %lor.lhs.false6643

lor.lhs.false6643:                                ; preds = %land.lhs.true6633, %lor.lhs.false6626
  %bf.load6646 = load i32* %code6600, align 8
  %bf.clear6647 = and i32 %bf.load6646, 255
  %idxprom66489689 = zext i32 %bf.clear6647 to i64
  %arrayidx6649 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom66489689
  %771 = load i8* %arrayidx6649, align 1, !tbaa !15
  %cmp6651 = icmp eq i8 %771, 60
  br i1 %cmp6651, label %land.lhs.true6653, label %if.end6739

land.lhs.true6653:                                ; preds = %lor.lhs.false6643
  %operands6655 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 2
  %arrayidx6656 = bitcast i32* %operands6655 to %union.tree_node**
  %772 = load %union.tree_node** %arrayidx6656, align 8, !tbaa !14
  %773 = load %union.tree_node** %766, align 8, !tbaa !14
  %arrayidx6662 = getelementptr inbounds i32* %operands6655, i64 2
  %774 = bitcast i32* %arrayidx6662 to %union.tree_node**
  %775 = load %union.tree_node** %774, align 8, !tbaa !14
  %call6663 = call fastcc i32 @operand_equal_for_comparison_p(%union.tree_node* %772, %union.tree_node* %773, %union.tree_node* %775)
  %tobool6664 = icmp eq i32 %call6663, 0
  br i1 %tobool6664, label %if.end6739, label %if.then6665

if.then6665:                                      ; preds = %land.lhs.true6633, %land.lhs.true6653, %if.end6623
  %call6666 = call %union.tree_node* @invert_truthvalue(%union.tree_node* %arg0.5)
  %code6668 = getelementptr inbounds %union.tree_node* %call6666, i64 0, i32 0, i32 0, i32 2
  %bf.load6669 = load i32* %code6668, align 8
  %bf.clear6670 = and i32 %bf.load6669, 255
  %cmp6671 = icmp eq i32 %bf.clear6670, 96
  br i1 %cmp6671, label %if.end6739, label %if.then6673

if.then6673:                                      ; preds = %if.then6665
  %776 = load %union.tree_node** %766, align 8, !tbaa !14
  %arrayidx6679 = getelementptr inbounds i32* %operands6616, i64 2
  %777 = bitcast i32* %arrayidx6679 to %union.tree_node**
  %778 = load %union.tree_node** %777, align 8, !tbaa !14
  %call6680 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 51, %union.tree_node* %0, %union.tree_node* %call6666, %union.tree_node* %776, %union.tree_node* %778) #1
  %operands6682 = getelementptr inbounds %union.tree_node* %call6680, i64 0, i32 0, i32 2
  %arrayidx6683 = getelementptr inbounds i32* %operands6682, i64 2
  %779 = bitcast i32* %arrayidx6683 to %union.tree_node**
  %780 = load %union.tree_node** %779, align 8, !tbaa !14
  %781 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !14
  br label %while.cond6684

while.cond6684:                                   ; preds = %land.rhs6711, %if.then6673
  %arg1.11 = phi %union.tree_node* [ %780, %if.then6673 ], [ %782, %land.rhs6711 ]
  %code6686 = getelementptr inbounds %union.tree_node* %arg1.11, i64 0, i32 0, i32 0, i32 2
  %bf.load6687 = load i32* %code6686, align 8
  %bf.clear6688 = and i32 %bf.load6687, 255
  %bf.clear6688.off = add i32 %bf.clear6688, -114
  %switch9806 = icmp ult i32 %bf.clear6688.off, 3
  br i1 %switch9806, label %land.lhs.true6705, label %if.end6739

land.lhs.true6705:                                ; preds = %while.cond6684
  %operands6707 = getelementptr inbounds %union.tree_node* %arg1.11, i64 0, i32 0, i32 2
  %arrayidx6708 = bitcast i32* %operands6707 to %union.tree_node**
  %782 = load %union.tree_node** %arrayidx6708, align 8, !tbaa !14
  %cmp6709 = icmp eq %union.tree_node* %782, %781
  br i1 %cmp6709, label %if.end6739, label %land.rhs6711

land.rhs6711:                                     ; preds = %land.lhs.true6705
  %type6713 = getelementptr inbounds %union.tree_node* %arg1.11, i64 0, i32 0, i32 0, i32 1
  %783 = load %union.tree_node** %type6713, align 8, !tbaa !11
  %type6714 = bitcast %union.tree_node* %783 to %struct.tree_type*
  %mode6715 = getelementptr inbounds %struct.tree_type* %type6714, i64 0, i32 6
  %bf.load6716 = load i32* %mode6715, align 4
  %type6723 = getelementptr inbounds %union.tree_node* %782, i64 0, i32 0, i32 0, i32 1
  %784 = load %union.tree_node** %type6723, align 8, !tbaa !11
  %type6724 = bitcast %union.tree_node* %784 to %struct.tree_type*
  %mode6725 = getelementptr inbounds %struct.tree_type* %type6724, i64 0, i32 6
  %bf.load6726 = load i32* %mode6725, align 4
  %bf.lshr67179711 = xor i32 %bf.load6726, %bf.load6716
  %785 = and i32 %bf.lshr67179711, 65024
  %cmp6729 = icmp eq i32 %785, 0
  br i1 %cmp6729, label %while.cond6684, label %if.end6739

if.end6739:                                       ; preds = %while.cond6684, %land.lhs.true6705, %land.rhs6711, %if.then6665, %land.lhs.true6653, %lor.lhs.false6643
  %arg1.12 = phi %union.tree_node* [ %arg1.3, %if.then6665 ], [ %arg1.3, %land.lhs.true6653 ], [ %arg1.3, %lor.lhs.false6643 ], [ %arg1.11, %land.rhs6711 ], [ %arg1.11, %land.lhs.true6705 ], [ %arg1.11, %while.cond6684 ]
  %arg0.8 = phi %union.tree_node* [ %arg0.5, %if.then6665 ], [ %arg0.5, %land.lhs.true6653 ], [ %arg0.5, %lor.lhs.false6643 ], [ %call6666, %land.rhs6711 ], [ %call6666, %land.lhs.true6705 ], [ %call6666, %while.cond6684 ]
  %t.7 = phi %union.tree_node* [ %expr, %if.then6665 ], [ %expr, %land.lhs.true6653 ], [ %expr, %lor.lhs.false6643 ], [ %call6680, %land.rhs6711 ], [ %call6680, %land.lhs.true6705 ], [ %call6680, %while.cond6684 ]
  %code6741 = getelementptr inbounds %union.tree_node* %arg0.8, i64 0, i32 0, i32 0, i32 2
  %bf.load6742 = load i32* %code6741, align 8
  %bf.clear6743 = and i32 %bf.load6742, 255
  %idxprom67449690 = zext i32 %bf.clear6743 to i64
  %arrayidx6745 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom67449690
  %786 = load i8* %arrayidx6745, align 1, !tbaa !15
  %cmp6747 = icmp eq i8 %786, 60
  br i1 %cmp6747, label %land.lhs.true6749, label %if.end7204

land.lhs.true6749:                                ; preds = %if.end6739
  %operands6751 = getelementptr inbounds %union.tree_node* %arg0.8, i64 0, i32 0, i32 2
  %arrayidx6752 = bitcast i32* %operands6751 to %union.tree_node**
  %787 = load %union.tree_node** %arrayidx6752, align 8, !tbaa !14
  %type6754 = getelementptr inbounds %union.tree_node* %787, i64 0, i32 0, i32 0, i32 1
  %788 = load %union.tree_node** %type6754, align 8, !tbaa !11
  %code6756 = getelementptr inbounds %union.tree_node* %788, i64 0, i32 0, i32 0, i32 2
  %bf.load6757 = load i32* %code6756, align 8
  %bf.clear6758 = and i32 %bf.load6757, 255
  switch i32 %bf.clear6758, label %land.lhs.true6789 [
    i32 7, label %lor.lhs.false6787
    i32 8, label %land.lhs.true6773
  ]

land.lhs.true6773:                                ; preds = %land.lhs.true6749
  %type6780 = getelementptr inbounds %union.tree_node* %788, i64 0, i32 0, i32 0, i32 1
  %789 = load %union.tree_node** %type6780, align 8, !tbaa !11
  %code6782 = getelementptr inbounds %union.tree_node* %789, i64 0, i32 0, i32 0, i32 2
  %bf.load6783 = load i32* %code6782, align 8
  %bf.clear6784 = and i32 %bf.load6783, 255
  %cmp6785 = icmp ne i32 %bf.clear6784, 7
  %790 = load i32* @flag_unsafe_math_optimizations, align 4
  %tobool6788 = icmp ne i32 %790, 0
  %or.cond7822 = or i1 %cmp6785, %tobool6788
  br i1 %or.cond7822, label %land.lhs.true6789, label %if.end7204

lor.lhs.false6787:                                ; preds = %land.lhs.true6749
  %.old7821 = load i32* @flag_unsafe_math_optimizations, align 4, !tbaa !12
  %tobool6788.old = icmp eq i32 %.old7821, 0
  br i1 %tobool6788.old, label %if.end7204, label %land.lhs.true6789

land.lhs.true6789:                                ; preds = %land.lhs.true6749, %lor.lhs.false6787, %land.lhs.true6773
  %arrayidx6795 = getelementptr inbounds i32* %operands6751, i64 2
  %791 = bitcast i32* %arrayidx6795 to %union.tree_node**
  %792 = load %union.tree_node** %791, align 8, !tbaa !14
  %call6796 = call fastcc i32 @operand_equal_for_comparison_p(%union.tree_node* %787, %union.tree_node* %arg1.12, %union.tree_node* %792)
  %tobool6797 = icmp eq i32 %call6796, 0
  br i1 %tobool6797, label %if.end7204, label %if.then6798

if.then6798:                                      ; preds = %land.lhs.true6789
  %operands6801 = getelementptr inbounds %union.tree_node* %t.7, i64 0, i32 0, i32 2
  %arrayidx6802 = getelementptr inbounds i32* %operands6801, i64 4
  %793 = bitcast i32* %arrayidx6802 to %union.tree_node**
  %794 = load %union.tree_node** %793, align 8, !tbaa !14
  %bf.load6806 = load i32* %code6741, align 8
  %bf.clear6807 = and i32 %bf.load6806, 255
  %795 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !14
  br label %while.cond6808

while.cond6808:                                   ; preds = %land.rhs6835, %if.then6798
  %arg2.0 = phi %union.tree_node* [ %794, %if.then6798 ], [ %796, %land.rhs6835 ]
  %code6810 = getelementptr inbounds %union.tree_node* %arg2.0, i64 0, i32 0, i32 0, i32 2
  %bf.load6811 = load i32* %code6810, align 8
  %bf.clear6812 = and i32 %bf.load6811, 255
  %bf.clear6812.off = add i32 %bf.clear6812, -114
  %switch9807 = icmp ult i32 %bf.clear6812.off, 3
  br i1 %switch9807, label %land.lhs.true6829, label %while.end6861

land.lhs.true6829:                                ; preds = %while.cond6808
  %operands6831 = getelementptr inbounds %union.tree_node* %arg2.0, i64 0, i32 0, i32 2
  %arrayidx6832 = bitcast i32* %operands6831 to %union.tree_node**
  %796 = load %union.tree_node** %arrayidx6832, align 8, !tbaa !14
  %cmp6833 = icmp eq %union.tree_node* %796, %795
  br i1 %cmp6833, label %while.end6861, label %land.rhs6835

land.rhs6835:                                     ; preds = %land.lhs.true6829
  %type6837 = getelementptr inbounds %union.tree_node* %arg2.0, i64 0, i32 0, i32 0, i32 1
  %797 = load %union.tree_node** %type6837, align 8, !tbaa !11
  %type6838 = bitcast %union.tree_node* %797 to %struct.tree_type*
  %mode6839 = getelementptr inbounds %struct.tree_type* %type6838, i64 0, i32 6
  %bf.load6840 = load i32* %mode6839, align 4
  %type6847 = getelementptr inbounds %union.tree_node* %796, i64 0, i32 0, i32 0, i32 1
  %798 = load %union.tree_node** %type6847, align 8, !tbaa !11
  %type6848 = bitcast %union.tree_node* %798 to %struct.tree_type*
  %mode6849 = getelementptr inbounds %struct.tree_type* %type6848, i64 0, i32 6
  %bf.load6850 = load i32* %mode6849, align 4
  %bf.lshr68419710 = xor i32 %bf.load6850, %bf.load6840
  %799 = and i32 %bf.lshr68419710, 65024
  %cmp6853 = icmp eq i32 %799, 0
  br i1 %cmp6853, label %while.cond6808, label %while.end6861

while.end6861:                                    ; preds = %while.cond6808, %land.lhs.true6829, %land.rhs6835
  %800 = load %union.tree_node** %791, align 8, !tbaa !14
  %type6866 = getelementptr inbounds %union.tree_node* %800, i64 0, i32 0, i32 0, i32 1
  %801 = load %union.tree_node** %type6866, align 8, !tbaa !11
  %code6868 = getelementptr inbounds %union.tree_node* %801, i64 0, i32 0, i32 0, i32 2
  %bf.load6869 = load i32* %code6868, align 8
  %bf.clear6870 = and i32 %bf.load6869, 255
  switch i32 %bf.clear6870, label %cond.false6905 [
    i32 7, label %cond.true6899
    i32 8, label %land.lhs.true6885
  ]

land.lhs.true6885:                                ; preds = %while.end6861
  %type6892 = getelementptr inbounds %union.tree_node* %801, i64 0, i32 0, i32 0, i32 1
  %802 = load %union.tree_node** %type6892, align 8, !tbaa !11
  %code6894 = getelementptr inbounds %union.tree_node* %802, i64 0, i32 0, i32 0, i32 2
  %bf.load6895 = load i32* %code6894, align 8
  %bf.clear6896 = and i32 %bf.load6895, 255
  %cmp6897 = icmp eq i32 %bf.clear6896, 7
  br i1 %cmp6897, label %cond.true6899, label %cond.false6905

cond.true6899:                                    ; preds = %while.end6861, %land.lhs.true6885
  %call6903 = call i32 @real_zerop(%union.tree_node* %800) #1
  %tobool6904 = icmp eq i32 %call6903, 0
  br i1 %tobool6904, label %if.end6982, label %land.lhs.true6911

cond.false6905:                                   ; preds = %while.end6861, %land.lhs.true6885
  %call6909 = call i32 @integer_zerop(%union.tree_node* %800) #1
  %tobool6910 = icmp eq i32 %call6909, 0
  br i1 %tobool6910, label %if.end6982, label %land.lhs.true6911

land.lhs.true6911:                                ; preds = %cond.true6899, %cond.false6905
  %bf.load6914 = load i32* %code6810, align 8
  %bf.clear6915 = and i32 %bf.load6914, 255
  %cmp6916 = icmp eq i32 %bf.clear6915, 77
  br i1 %cmp6916, label %land.lhs.true6918, label %if.end6982

land.lhs.true6918:                                ; preds = %land.lhs.true6911
  %operands6920 = getelementptr inbounds %union.tree_node* %arg2.0, i64 0, i32 0, i32 2
  %arrayidx6921 = bitcast i32* %operands6920 to %union.tree_node**
  %803 = load %union.tree_node** %arrayidx6921, align 8, !tbaa !14
  %call6922 = call i32 @operand_equal_p(%union.tree_node* %803, %union.tree_node* %arg1.12, i32 0)
  %tobool6923 = icmp eq i32 %call6922, 0
  br i1 %tobool6923, label %if.end6982, label %if.then6924

if.then6924:                                      ; preds = %land.lhs.true6918
  switch i32 %bf.clear6807, label %sw.default6981 [
    i32 101, label %sw.bb6925
    i32 102, label %sw.bb6935
    i32 100, label %sw.bb6938
    i32 99, label %sw.bb6938
    i32 98, label %sw.bb6959
    i32 97, label %sw.bb6959
  ]

sw.bb6925:                                        ; preds = %if.then6924
  %arrayidx6928 = getelementptr inbounds i32* %operands6801, i64 2
  %804 = bitcast i32* %arrayidx6928 to %union.tree_node**
  %805 = load %union.tree_node** %804, align 8, !tbaa !14
  %type6930 = getelementptr inbounds %union.tree_node* %805, i64 0, i32 0, i32 0, i32 1
  %806 = load %union.tree_node** %type6930, align 8, !tbaa !11
  %call6931 = call %union.tree_node* @convert(%union.tree_node* %806, %union.tree_node* %arg1.12) #1
  %call6932 = call fastcc %union.tree_node* @negate_expr(%union.tree_node* %call6931)
  %call6933 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %call6932) #1
  %807 = load i32* @pedantic_lvalues, align 4, !tbaa !12
  %tobool.i10070 = icmp eq i32 %807, 0
  br i1 %tobool.i10070, label %return, label %if.then.i10074

if.then.i10074:                                   ; preds = %sw.bb6925
  %code.i.i10071 = getelementptr inbounds %union.tree_node* %call6933, i64 0, i32 0, i32 0, i32 2
  %bf.load.i.i10072 = load i32* %code.i.i10071, align 8
  %bf.clear.i.i10073 = and i32 %bf.load.i.i10072, 255
  switch i32 %bf.clear.i.i10073, label %if.end.i.i10083 [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i.i10083:                                  ; preds = %if.then.i10074
  %type.i.i10075 = getelementptr inbounds %union.tree_node* %call6933, i64 0, i32 0, i32 0, i32 1
  %808 = load %union.tree_node** %type.i.i10075, align 8, !tbaa !11
  %call.i.i10076 = call %union.tree_node* @build1(i32 116, %union.tree_node* %808, %union.tree_node* %call6933) #1
  %bf.load26.i.i10077 = load i32* %code.i.i10071, align 8
  %bf.clear27.i.i10078 = and i32 %bf.load26.i.i10077, 512
  %constant_flag29.i.i10079 = getelementptr inbounds %union.tree_node* %call.i.i10076, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i.i10080 = load i32* %constant_flag29.i.i10079, align 8
  %bf.clear31.i.i10081 = and i32 %bf.load30.i.i10080, -513
  %bf.set.i.i10082 = or i32 %bf.clear31.i.i10081, %bf.clear27.i.i10078
  store i32 %bf.set.i.i10082, i32* %constant_flag29.i.i10079, align 8
  br label %return

sw.bb6935:                                        ; preds = %if.then6924
  %call6936 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %arg1.12) #1
  %809 = load i32* @pedantic_lvalues, align 4, !tbaa !12
  %tobool.i10054 = icmp eq i32 %809, 0
  br i1 %tobool.i10054, label %return, label %if.then.i10058

if.then.i10058:                                   ; preds = %sw.bb6935
  %code.i.i10055 = getelementptr inbounds %union.tree_node* %call6936, i64 0, i32 0, i32 0, i32 2
  %bf.load.i.i10056 = load i32* %code.i.i10055, align 8
  %bf.clear.i.i10057 = and i32 %bf.load.i.i10056, 255
  switch i32 %bf.clear.i.i10057, label %if.end.i.i10067 [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i.i10067:                                  ; preds = %if.then.i10058
  %type.i.i10059 = getelementptr inbounds %union.tree_node* %call6936, i64 0, i32 0, i32 0, i32 1
  %810 = load %union.tree_node** %type.i.i10059, align 8, !tbaa !11
  %call.i.i10060 = call %union.tree_node* @build1(i32 116, %union.tree_node* %810, %union.tree_node* %call6936) #1
  %bf.load26.i.i10061 = load i32* %code.i.i10055, align 8
  %bf.clear27.i.i10062 = and i32 %bf.load26.i.i10061, 512
  %constant_flag29.i.i10063 = getelementptr inbounds %union.tree_node* %call.i.i10060, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i.i10064 = load i32* %constant_flag29.i.i10063, align 8
  %bf.clear31.i.i10065 = and i32 %bf.load30.i.i10064, -513
  %bf.set.i.i10066 = or i32 %bf.clear31.i.i10065, %bf.clear27.i.i10062
  store i32 %bf.set.i.i10066, i32* %constant_flag29.i.i10063, align 8
  br label %return

sw.bb6938:                                        ; preds = %if.then6924, %if.then6924
  %type6940 = getelementptr inbounds %union.tree_node* %arg1.12, i64 0, i32 0, i32 0, i32 1
  %811 = load %union.tree_node** %type6940, align 8, !tbaa !11
  %unsigned_flag6942 = getelementptr inbounds %union.tree_node* %811, i64 0, i32 0, i32 0, i32 2
  %bf.load6943 = load i32* %unsigned_flag6942, align 8
  %bf.clear6945 = and i32 %bf.load6943, 8192
  %tobool6946 = icmp eq i32 %bf.clear6945, 0
  br i1 %tobool6946, label %if.end6952, label %if.then6947

if.then6947:                                      ; preds = %sw.bb6938
  %call6950 = call %union.tree_node* @signed_type(%union.tree_node* %811) #1
  %call6951 = call %union.tree_node* @convert(%union.tree_node* %call6950, %union.tree_node* %arg1.12) #1
  %type6954.phi.trans.insert = getelementptr inbounds %union.tree_node* %call6951, i64 0, i32 0, i32 0, i32 1
  %.pre11286 = load %union.tree_node** %type6954.phi.trans.insert, align 8, !tbaa !11
  br label %if.end6952

if.end6952:                                       ; preds = %sw.bb6938, %if.then6947
  %812 = phi %union.tree_node* [ %.pre11286, %if.then6947 ], [ %811, %sw.bb6938 ]
  %arg1.13 = phi %union.tree_node* [ %call6951, %if.then6947 ], [ %arg1.12, %sw.bb6938 ]
  %call6955 = call %union.tree_node* @build1(i32 80, %union.tree_node* %812, %union.tree_node* %arg1.13) #1
  %call6956 = call %union.tree_node* @fold(%union.tree_node* %call6955)
  %call6957 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %call6956) #1
  %813 = load i32* @pedantic_lvalues, align 4, !tbaa !12
  %tobool.i10038 = icmp eq i32 %813, 0
  br i1 %tobool.i10038, label %return, label %if.then.i10042

if.then.i10042:                                   ; preds = %if.end6952
  %code.i.i10039 = getelementptr inbounds %union.tree_node* %call6957, i64 0, i32 0, i32 0, i32 2
  %bf.load.i.i10040 = load i32* %code.i.i10039, align 8
  %bf.clear.i.i10041 = and i32 %bf.load.i.i10040, 255
  switch i32 %bf.clear.i.i10041, label %if.end.i.i10051 [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i.i10051:                                  ; preds = %if.then.i10042
  %type.i.i10043 = getelementptr inbounds %union.tree_node* %call6957, i64 0, i32 0, i32 0, i32 1
  %814 = load %union.tree_node** %type.i.i10043, align 8, !tbaa !11
  %call.i.i10044 = call %union.tree_node* @build1(i32 116, %union.tree_node* %814, %union.tree_node* %call6957) #1
  %bf.load26.i.i10045 = load i32* %code.i.i10039, align 8
  %bf.clear27.i.i10046 = and i32 %bf.load26.i.i10045, 512
  %constant_flag29.i.i10047 = getelementptr inbounds %union.tree_node* %call.i.i10044, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i.i10048 = load i32* %constant_flag29.i.i10047, align 8
  %bf.clear31.i.i10049 = and i32 %bf.load30.i.i10048, -513
  %bf.set.i.i10050 = or i32 %bf.clear31.i.i10049, %bf.clear27.i.i10046
  store i32 %bf.set.i.i10050, i32* %constant_flag29.i.i10047, align 8
  br label %return

sw.bb6959:                                        ; preds = %if.then6924, %if.then6924
  %type6961 = getelementptr inbounds %union.tree_node* %arg1.12, i64 0, i32 0, i32 0, i32 1
  %815 = load %union.tree_node** %type6961, align 8, !tbaa !11
  %unsigned_flag6963 = getelementptr inbounds %union.tree_node* %815, i64 0, i32 0, i32 0, i32 2
  %bf.load6964 = load i32* %unsigned_flag6963, align 8
  %bf.clear6966 = and i32 %bf.load6964, 8192
  %tobool6967 = icmp eq i32 %bf.clear6966, 0
  br i1 %tobool6967, label %if.end6973, label %if.then6968

if.then6968:                                      ; preds = %sw.bb6959
  %call6971 = call %union.tree_node* @signed_type(%union.tree_node* %815) #1
  %call6972 = call %union.tree_node* @convert(%union.tree_node* %call6971, %union.tree_node* %arg1.12) #1
  %type6975.phi.trans.insert = getelementptr inbounds %union.tree_node* %call6972, i64 0, i32 0, i32 0, i32 1
  %.pre11287 = load %union.tree_node** %type6975.phi.trans.insert, align 8, !tbaa !11
  br label %if.end6973

if.end6973:                                       ; preds = %sw.bb6959, %if.then6968
  %816 = phi %union.tree_node* [ %.pre11287, %if.then6968 ], [ %815, %sw.bb6959 ]
  %arg1.14 = phi %union.tree_node* [ %call6972, %if.then6968 ], [ %arg1.12, %sw.bb6959 ]
  %call6976 = call %union.tree_node* @build1(i32 80, %union.tree_node* %816, %union.tree_node* %arg1.14) #1
  %call6977 = call %union.tree_node* @fold(%union.tree_node* %call6976)
  %call6978 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %call6977) #1
  %call6979 = call fastcc %union.tree_node* @negate_expr(%union.tree_node* %call6978)
  %817 = load i32* @pedantic_lvalues, align 4, !tbaa !12
  %tobool.i10022 = icmp eq i32 %817, 0
  br i1 %tobool.i10022, label %return, label %if.then.i10026

if.then.i10026:                                   ; preds = %if.end6973
  %code.i.i10023 = getelementptr inbounds %union.tree_node* %call6979, i64 0, i32 0, i32 0, i32 2
  %bf.load.i.i10024 = load i32* %code.i.i10023, align 8
  %bf.clear.i.i10025 = and i32 %bf.load.i.i10024, 255
  switch i32 %bf.clear.i.i10025, label %if.end.i.i10035 [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i.i10035:                                  ; preds = %if.then.i10026
  %type.i.i10027 = getelementptr inbounds %union.tree_node* %call6979, i64 0, i32 0, i32 0, i32 1
  %818 = load %union.tree_node** %type.i.i10027, align 8, !tbaa !11
  %call.i.i10028 = call %union.tree_node* @build1(i32 116, %union.tree_node* %818, %union.tree_node* %call6979) #1
  %bf.load26.i.i10029 = load i32* %code.i.i10023, align 8
  %bf.clear27.i.i10030 = and i32 %bf.load26.i.i10029, 512
  %constant_flag29.i.i10031 = getelementptr inbounds %union.tree_node* %call.i.i10028, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i.i10032 = load i32* %constant_flag29.i.i10031, align 8
  %bf.clear31.i.i10033 = and i32 %bf.load30.i.i10032, -513
  %bf.set.i.i10034 = or i32 %bf.clear31.i.i10033, %bf.clear27.i.i10030
  store i32 %bf.set.i.i10034, i32* %constant_flag29.i.i10031, align 8
  br label %return

sw.default6981:                                   ; preds = %if.then6924
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8]* @.str, i64 0, i64 0), i32 7202, i8* getelementptr inbounds ([5 x i8]* @__FUNCTION__.fold, i64 0, i64 0)) #7
  unreachable

if.end6982:                                       ; preds = %cond.true6899, %land.lhs.true6918, %cond.false6905, %land.lhs.true6911
  %819 = load %union.tree_node** %791, align 8, !tbaa !14
  %call6986 = call i32 @integer_zerop(%union.tree_node* %819) #1
  %tobool6987 = icmp eq i32 %call6986, 0
  br i1 %tobool6987, label %if.end7005, label %land.lhs.true6988

land.lhs.true6988:                                ; preds = %if.end6982
  %call6989 = call i32 @integer_zerop(%union.tree_node* %arg2.0) #1
  %tobool6990 = icmp eq i32 %call6989, 0
  br i1 %tobool6990, label %if.end7005, label %if.then6991

if.then6991:                                      ; preds = %land.lhs.true6988
  switch i32 %bf.clear6807, label %if.end7005 [
    i32 102, label %if.then6994
    i32 101, label %if.then7000
  ]

if.then6994:                                      ; preds = %if.then6991
  %call6995 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %arg1.12) #1
  %820 = load i32* @pedantic_lvalues, align 4, !tbaa !12
  %tobool.i10006 = icmp eq i32 %820, 0
  br i1 %tobool.i10006, label %return, label %if.then.i10010

if.then.i10010:                                   ; preds = %if.then6994
  %code.i.i10007 = getelementptr inbounds %union.tree_node* %call6995, i64 0, i32 0, i32 0, i32 2
  %bf.load.i.i10008 = load i32* %code.i.i10007, align 8
  %bf.clear.i.i10009 = and i32 %bf.load.i.i10008, 255
  switch i32 %bf.clear.i.i10009, label %if.end.i.i10019 [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i.i10019:                                  ; preds = %if.then.i10010
  %type.i.i10011 = getelementptr inbounds %union.tree_node* %call6995, i64 0, i32 0, i32 0, i32 1
  %821 = load %union.tree_node** %type.i.i10011, align 8, !tbaa !11
  %call.i.i10012 = call %union.tree_node* @build1(i32 116, %union.tree_node* %821, %union.tree_node* %call6995) #1
  %bf.load26.i.i10013 = load i32* %code.i.i10007, align 8
  %bf.clear27.i.i10014 = and i32 %bf.load26.i.i10013, 512
  %constant_flag29.i.i10015 = getelementptr inbounds %union.tree_node* %call.i.i10012, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i.i10016 = load i32* %constant_flag29.i.i10015, align 8
  %bf.clear31.i.i10017 = and i32 %bf.load30.i.i10016, -513
  %bf.set.i.i10018 = or i32 %bf.clear31.i.i10017, %bf.clear27.i.i10014
  store i32 %bf.set.i.i10018, i32* %constant_flag29.i.i10015, align 8
  br label %return

if.then7000:                                      ; preds = %if.then6991
  %822 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8, !tbaa !14
  %call7001 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %822) #1
  %823 = load i32* @pedantic_lvalues, align 4, !tbaa !12
  %tobool.i9990 = icmp eq i32 %823, 0
  br i1 %tobool.i9990, label %return, label %if.then.i9994

if.then.i9994:                                    ; preds = %if.then7000
  %code.i.i9991 = getelementptr inbounds %union.tree_node* %call7001, i64 0, i32 0, i32 0, i32 2
  %bf.load.i.i9992 = load i32* %code.i.i9991, align 8
  %bf.clear.i.i9993 = and i32 %bf.load.i.i9992, 255
  switch i32 %bf.clear.i.i9993, label %if.end.i.i10003 [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i.i10003:                                  ; preds = %if.then.i9994
  %type.i.i9995 = getelementptr inbounds %union.tree_node* %call7001, i64 0, i32 0, i32 0, i32 1
  %824 = load %union.tree_node** %type.i.i9995, align 8, !tbaa !11
  %call.i.i9996 = call %union.tree_node* @build1(i32 116, %union.tree_node* %824, %union.tree_node* %call7001) #1
  %bf.load26.i.i9997 = load i32* %code.i.i9991, align 8
  %bf.clear27.i.i9998 = and i32 %bf.load26.i.i9997, 512
  %constant_flag29.i.i9999 = getelementptr inbounds %union.tree_node* %call.i.i9996, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i.i10000 = load i32* %constant_flag29.i.i9999, align 8
  %bf.clear31.i.i10001 = and i32 %bf.load30.i.i10000, -513
  %bf.set.i.i10002 = or i32 %bf.clear31.i.i10001, %bf.clear27.i.i9998
  store i32 %bf.set.i.i10002, i32* %constant_flag29.i.i9999, align 8
  br label %return

if.end7005:                                       ; preds = %if.then6991, %land.lhs.true6988, %if.end6982
  %825 = load %union.tree_node** %791, align 8, !tbaa !14
  %826 = load %union.tree_node** %arrayidx6752, align 8, !tbaa !14
  %call7012 = call fastcc i32 @operand_equal_for_comparison_p(%union.tree_node* %825, %union.tree_node* %arg2.0, %union.tree_node* %826)
  %tobool7013 = icmp eq i32 %call7012, 0
  br i1 %tobool7013, label %if.end7075, label %if.then7014

if.then7014:                                      ; preds = %if.end7005
  %827 = load %union.tree_node** %arrayidx6752, align 8, !tbaa !14
  %828 = load %union.tree_node** %791, align 8, !tbaa !14
  %type7025 = getelementptr inbounds %union.tree_node* %827, i64 0, i32 0, i32 0, i32 1
  %829 = load %union.tree_node** %type7025, align 8, !tbaa !11
  %830 = getelementptr inbounds %union.tree_node* %829, i64 0, i32 0, i32 15
  %831 = load %union.tree_node** %830, align 8, !tbaa !20
  %832 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 15
  %833 = load %union.tree_node** %832, align 8, !tbaa !20
  %cmp7030 = icmp eq %union.tree_node* %831, %833
  %.9760 = select i1 %cmp7030, %union.tree_node* %0, %union.tree_node* %829
  switch i32 %bf.clear6807, label %sw.default7074 [
    i32 101, label %sw.bb7034
    i32 102, label %sw.bb7037
    i32 98, label %sw.bb7040
    i32 97, label %sw.bb7040
    i32 100, label %sw.bb7057
    i32 99, label %sw.bb7057
  ]

sw.bb7034:                                        ; preds = %if.then7014
  %call7035 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %arg2.0) #1
  %834 = load i32* @pedantic_lvalues, align 4, !tbaa !12
  %tobool.i9974 = icmp eq i32 %834, 0
  br i1 %tobool.i9974, label %return, label %if.then.i9978

if.then.i9978:                                    ; preds = %sw.bb7034
  %code.i.i9975 = getelementptr inbounds %union.tree_node* %call7035, i64 0, i32 0, i32 0, i32 2
  %bf.load.i.i9976 = load i32* %code.i.i9975, align 8
  %bf.clear.i.i9977 = and i32 %bf.load.i.i9976, 255
  switch i32 %bf.clear.i.i9977, label %if.end.i.i9987 [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i.i9987:                                   ; preds = %if.then.i9978
  %type.i.i9979 = getelementptr inbounds %union.tree_node* %call7035, i64 0, i32 0, i32 0, i32 1
  %835 = load %union.tree_node** %type.i.i9979, align 8, !tbaa !11
  %call.i.i9980 = call %union.tree_node* @build1(i32 116, %union.tree_node* %835, %union.tree_node* %call7035) #1
  %bf.load26.i.i9981 = load i32* %code.i.i9975, align 8
  %bf.clear27.i.i9982 = and i32 %bf.load26.i.i9981, 512
  %constant_flag29.i.i9983 = getelementptr inbounds %union.tree_node* %call.i.i9980, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i.i9984 = load i32* %constant_flag29.i.i9983, align 8
  %bf.clear31.i.i9985 = and i32 %bf.load30.i.i9984, -513
  %bf.set.i.i9986 = or i32 %bf.clear31.i.i9985, %bf.clear27.i.i9982
  store i32 %bf.set.i.i9986, i32* %constant_flag29.i.i9983, align 8
  br label %return

sw.bb7037:                                        ; preds = %if.then7014
  %call7038 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %arg1.12) #1
  %836 = load i32* @pedantic_lvalues, align 4, !tbaa !12
  %tobool.i9958 = icmp eq i32 %836, 0
  br i1 %tobool.i9958, label %return, label %if.then.i9962

if.then.i9962:                                    ; preds = %sw.bb7037
  %code.i.i9959 = getelementptr inbounds %union.tree_node* %call7038, i64 0, i32 0, i32 0, i32 2
  %bf.load.i.i9960 = load i32* %code.i.i9959, align 8
  %bf.clear.i.i9961 = and i32 %bf.load.i.i9960, 255
  switch i32 %bf.clear.i.i9961, label %if.end.i.i9971 [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i.i9971:                                   ; preds = %if.then.i9962
  %type.i.i9963 = getelementptr inbounds %union.tree_node* %call7038, i64 0, i32 0, i32 0, i32 1
  %837 = load %union.tree_node** %type.i.i9963, align 8, !tbaa !11
  %call.i.i9964 = call %union.tree_node* @build1(i32 116, %union.tree_node* %837, %union.tree_node* %call7038) #1
  %bf.load26.i.i9965 = load i32* %code.i.i9959, align 8
  %bf.clear27.i.i9966 = and i32 %bf.load26.i.i9965, 512
  %constant_flag29.i.i9967 = getelementptr inbounds %union.tree_node* %call.i.i9964, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i.i9968 = load i32* %constant_flag29.i.i9967, align 8
  %bf.clear31.i.i9969 = and i32 %bf.load30.i.i9968, -513
  %bf.set.i.i9970 = or i32 %bf.clear31.i.i9969, %bf.clear27.i.i9966
  store i32 %bf.set.i.i9970, i32* %constant_flag29.i.i9967, align 8
  br label %return

sw.bb7040:                                        ; preds = %if.then7014, %if.then7014
  %cmp7041 = icmp eq i32 %bf.clear6807, 98
  %cond7046 = select i1 %cmp7041, %union.tree_node* %827, %union.tree_node* %828
  %cond7052 = select i1 %cmp7041, %union.tree_node* %828, %union.tree_node* %827
  %call7053 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 78, %union.tree_node* %.9760, %union.tree_node* %cond7046, %union.tree_node* %cond7052) #1
  %call7054 = call %union.tree_node* @fold(%union.tree_node* %call7053)
  %call7055 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %call7054) #1
  %838 = load i32* @pedantic_lvalues, align 4, !tbaa !12
  %tobool.i9942 = icmp eq i32 %838, 0
  br i1 %tobool.i9942, label %return, label %if.then.i9946

if.then.i9946:                                    ; preds = %sw.bb7040
  %code.i.i9943 = getelementptr inbounds %union.tree_node* %call7055, i64 0, i32 0, i32 0, i32 2
  %bf.load.i.i9944 = load i32* %code.i.i9943, align 8
  %bf.clear.i.i9945 = and i32 %bf.load.i.i9944, 255
  switch i32 %bf.clear.i.i9945, label %if.end.i.i9955 [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i.i9955:                                   ; preds = %if.then.i9946
  %type.i.i9947 = getelementptr inbounds %union.tree_node* %call7055, i64 0, i32 0, i32 0, i32 1
  %839 = load %union.tree_node** %type.i.i9947, align 8, !tbaa !11
  %call.i.i9948 = call %union.tree_node* @build1(i32 116, %union.tree_node* %839, %union.tree_node* %call7055) #1
  %bf.load26.i.i9949 = load i32* %code.i.i9943, align 8
  %bf.clear27.i.i9950 = and i32 %bf.load26.i.i9949, 512
  %constant_flag29.i.i9951 = getelementptr inbounds %union.tree_node* %call.i.i9948, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i.i9952 = load i32* %constant_flag29.i.i9951, align 8
  %bf.clear31.i.i9953 = and i32 %bf.load30.i.i9952, -513
  %bf.set.i.i9954 = or i32 %bf.clear31.i.i9953, %bf.clear27.i.i9950
  store i32 %bf.set.i.i9954, i32* %constant_flag29.i.i9951, align 8
  br label %return

sw.bb7057:                                        ; preds = %if.then7014, %if.then7014
  %cmp7058 = icmp eq i32 %bf.clear6807, 100
  %cond7063 = select i1 %cmp7058, %union.tree_node* %827, %union.tree_node* %828
  %cond7069 = select i1 %cmp7058, %union.tree_node* %828, %union.tree_node* %827
  %call7070 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 79, %union.tree_node* %.9760, %union.tree_node* %cond7063, %union.tree_node* %cond7069) #1
  %call7071 = call %union.tree_node* @fold(%union.tree_node* %call7070)
  %call7072 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %call7071) #1
  %840 = load i32* @pedantic_lvalues, align 4, !tbaa !12
  %tobool.i9926 = icmp eq i32 %840, 0
  br i1 %tobool.i9926, label %return, label %if.then.i9930

if.then.i9930:                                    ; preds = %sw.bb7057
  %code.i.i9927 = getelementptr inbounds %union.tree_node* %call7072, i64 0, i32 0, i32 0, i32 2
  %bf.load.i.i9928 = load i32* %code.i.i9927, align 8
  %bf.clear.i.i9929 = and i32 %bf.load.i.i9928, 255
  switch i32 %bf.clear.i.i9929, label %if.end.i.i9939 [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i.i9939:                                   ; preds = %if.then.i9930
  %type.i.i9931 = getelementptr inbounds %union.tree_node* %call7072, i64 0, i32 0, i32 0, i32 1
  %841 = load %union.tree_node** %type.i.i9931, align 8, !tbaa !11
  %call.i.i9932 = call %union.tree_node* @build1(i32 116, %union.tree_node* %841, %union.tree_node* %call7072) #1
  %bf.load26.i.i9933 = load i32* %code.i.i9927, align 8
  %bf.clear27.i.i9934 = and i32 %bf.load26.i.i9933, 512
  %constant_flag29.i.i9935 = getelementptr inbounds %union.tree_node* %call.i.i9932, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i.i9936 = load i32* %constant_flag29.i.i9935, align 8
  %bf.clear31.i.i9937 = and i32 %bf.load30.i.i9936, -513
  %bf.set.i.i9938 = or i32 %bf.clear31.i.i9937, %bf.clear27.i.i9934
  store i32 %bf.set.i.i9938, i32* %constant_flag29.i.i9935, align 8
  br label %return

sw.default7074:                                   ; preds = %if.then7014
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8]* @.str, i64 0, i64 0), i32 7259, i8* getelementptr inbounds ([5 x i8]* @__FUNCTION__.fold, i64 0, i64 0)) #7
  unreachable

if.end7075:                                       ; preds = %if.end7005
  %code7077 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2
  %bf.load7078 = load i32* %code7077, align 8
  %bf.clear7079 = and i32 %bf.load7078, 255
  switch i32 %bf.clear7079, label %if.end7204 [
    i32 6, label %land.lhs.true7103
    i32 10, label %land.lhs.true7103
    i32 11, label %land.lhs.true7103
    i32 12, label %land.lhs.true7103
  ]

land.lhs.true7103:                                ; preds = %if.end7075, %if.end7075, %if.end7075, %if.end7075
  %842 = load %union.tree_node** %791, align 8, !tbaa !14
  %code7108 = getelementptr inbounds %union.tree_node* %842, i64 0, i32 0, i32 0, i32 2
  %bf.load7109 = load i32* %code7108, align 8
  %bf.clear7110 = and i32 %bf.load7109, 255
  %cmp7111 = icmp eq i32 %bf.clear7110, 25
  br i1 %cmp7111, label %land.lhs.true7113, label %if.end7204

land.lhs.true7113:                                ; preds = %land.lhs.true7103
  %bf.load7116 = load i32* %code6810, align 8
  %bf.clear7117 = and i32 %bf.load7116, 255
  %cmp7118 = icmp eq i32 %bf.clear7117, 25
  br i1 %cmp7118, label %if.then7120, label %if.end7204

if.then7120:                                      ; preds = %land.lhs.true7113
  switch i32 %bf.clear6807, label %sw.default7201 [
    i32 101, label %sw.bb7121
    i32 97, label %sw.bb7133
    i32 98, label %sw.bb7150
    i32 99, label %sw.bb7167
    i32 100, label %sw.bb7184
    i32 102, label %if.end7204
  ]

sw.bb7121:                                        ; preds = %if.then7120
  %call7125 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %842) #1
  %arrayidx7128 = bitcast i32* %operands6801 to %union.tree_node**
  %843 = load %union.tree_node** %arrayidx7128, align 8, !tbaa !14
  %844 = load %union.tree_node** %793, align 8, !tbaa !14
  %call7132 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 51, %union.tree_node* %0, %union.tree_node* %843, %union.tree_node* %call7125, %union.tree_node* %844) #1
  br label %if.end7204

sw.bb7133:                                        ; preds = %if.then7120
  %845 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 13
  %846 = load %union.tree_node** %845, align 8, !tbaa !26
  %call7136 = call i32 @operand_equal_p(%union.tree_node* %arg2.0, %union.tree_node* %846, i32 1)
  %tobool7137 = icmp eq i32 %call7136, 0
  br i1 %tobool7137, label %land.lhs.true7138, label %if.end7204

land.lhs.true7138:                                ; preds = %sw.bb7133
  %847 = load %union.tree_node** %791, align 8, !tbaa !14
  %848 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 12), align 8, !tbaa !14
  %call7142 = call fastcc %union.tree_node* @const_binop(i32 59, %union.tree_node* %arg2.0, %union.tree_node* %848)
  %call7143 = call i32 @operand_equal_p(%union.tree_node* %847, %union.tree_node* %call7142, i32 1)
  %tobool7144 = icmp eq i32 %call7143, 0
  br i1 %tobool7144, label %if.end7204, label %if.then7145

if.then7145:                                      ; preds = %land.lhs.true7138
  %call7146 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 78, %union.tree_node* %0, %union.tree_node* %arg1.12, %union.tree_node* %arg2.0) #1
  %call7147 = call %union.tree_node* @fold(%union.tree_node* %call7146)
  %849 = load i32* @pedantic_lvalues, align 4, !tbaa !12
  %tobool.i9910 = icmp eq i32 %849, 0
  br i1 %tobool.i9910, label %return, label %if.then.i9914

if.then.i9914:                                    ; preds = %if.then7145
  %code.i.i9911 = getelementptr inbounds %union.tree_node* %call7147, i64 0, i32 0, i32 0, i32 2
  %bf.load.i.i9912 = load i32* %code.i.i9911, align 8
  %bf.clear.i.i9913 = and i32 %bf.load.i.i9912, 255
  switch i32 %bf.clear.i.i9913, label %if.end.i.i9923 [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i.i9923:                                   ; preds = %if.then.i9914
  %type.i.i9915 = getelementptr inbounds %union.tree_node* %call7147, i64 0, i32 0, i32 0, i32 1
  %850 = load %union.tree_node** %type.i.i9915, align 8, !tbaa !11
  %call.i.i9916 = call %union.tree_node* @build1(i32 116, %union.tree_node* %850, %union.tree_node* %call7147) #1
  %bf.load26.i.i9917 = load i32* %code.i.i9911, align 8
  %bf.clear27.i.i9918 = and i32 %bf.load26.i.i9917, 512
  %constant_flag29.i.i9919 = getelementptr inbounds %union.tree_node* %call.i.i9916, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i.i9920 = load i32* %constant_flag29.i.i9919, align 8
  %bf.clear31.i.i9921 = and i32 %bf.load30.i.i9920, -513
  %bf.set.i.i9922 = or i32 %bf.clear31.i.i9921, %bf.clear27.i.i9918
  store i32 %bf.set.i.i9922, i32* %constant_flag29.i.i9919, align 8
  br label %return

sw.bb7150:                                        ; preds = %if.then7120
  %851 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 12
  %852 = load %union.tree_node** %851, align 8, !tbaa !25
  %call7153 = call i32 @operand_equal_p(%union.tree_node* %arg2.0, %union.tree_node* %852, i32 1)
  %tobool7154 = icmp eq i32 %call7153, 0
  br i1 %tobool7154, label %land.lhs.true7155, label %if.end7204

land.lhs.true7155:                                ; preds = %sw.bb7150
  %853 = load %union.tree_node** %791, align 8, !tbaa !14
  %854 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 12), align 8, !tbaa !14
  %call7159 = call fastcc %union.tree_node* @const_binop(i32 60, %union.tree_node* %arg2.0, %union.tree_node* %854)
  %call7160 = call i32 @operand_equal_p(%union.tree_node* %853, %union.tree_node* %call7159, i32 1)
  %tobool7161 = icmp eq i32 %call7160, 0
  br i1 %tobool7161, label %if.end7204, label %if.then7162

if.then7162:                                      ; preds = %land.lhs.true7155
  %call7163 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 78, %union.tree_node* %0, %union.tree_node* %arg1.12, %union.tree_node* %arg2.0) #1
  %call7164 = call %union.tree_node* @fold(%union.tree_node* %call7163)
  %855 = load i32* @pedantic_lvalues, align 4, !tbaa !12
  %tobool.i9894 = icmp eq i32 %855, 0
  br i1 %tobool.i9894, label %return, label %if.then.i9898

if.then.i9898:                                    ; preds = %if.then7162
  %code.i.i9895 = getelementptr inbounds %union.tree_node* %call7164, i64 0, i32 0, i32 0, i32 2
  %bf.load.i.i9896 = load i32* %code.i.i9895, align 8
  %bf.clear.i.i9897 = and i32 %bf.load.i.i9896, 255
  switch i32 %bf.clear.i.i9897, label %if.end.i.i9907 [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i.i9907:                                   ; preds = %if.then.i9898
  %type.i.i9899 = getelementptr inbounds %union.tree_node* %call7164, i64 0, i32 0, i32 0, i32 1
  %856 = load %union.tree_node** %type.i.i9899, align 8, !tbaa !11
  %call.i.i9900 = call %union.tree_node* @build1(i32 116, %union.tree_node* %856, %union.tree_node* %call7164) #1
  %bf.load26.i.i9901 = load i32* %code.i.i9895, align 8
  %bf.clear27.i.i9902 = and i32 %bf.load26.i.i9901, 512
  %constant_flag29.i.i9903 = getelementptr inbounds %union.tree_node* %call.i.i9900, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i.i9904 = load i32* %constant_flag29.i.i9903, align 8
  %bf.clear31.i.i9905 = and i32 %bf.load30.i.i9904, -513
  %bf.set.i.i9906 = or i32 %bf.clear31.i.i9905, %bf.clear27.i.i9902
  store i32 %bf.set.i.i9906, i32* %constant_flag29.i.i9903, align 8
  br label %return

sw.bb7167:                                        ; preds = %if.then7120
  %857 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 12
  %858 = load %union.tree_node** %857, align 8, !tbaa !25
  %call7170 = call i32 @operand_equal_p(%union.tree_node* %arg2.0, %union.tree_node* %858, i32 1)
  %tobool7171 = icmp eq i32 %call7170, 0
  br i1 %tobool7171, label %land.lhs.true7172, label %if.end7204

land.lhs.true7172:                                ; preds = %sw.bb7167
  %859 = load %union.tree_node** %791, align 8, !tbaa !14
  %860 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 12), align 8, !tbaa !14
  %call7176 = call fastcc %union.tree_node* @const_binop(i32 60, %union.tree_node* %arg2.0, %union.tree_node* %860)
  %call7177 = call i32 @operand_equal_p(%union.tree_node* %859, %union.tree_node* %call7176, i32 1)
  %tobool7178 = icmp eq i32 %call7177, 0
  br i1 %tobool7178, label %if.end7204, label %if.then7179

if.then7179:                                      ; preds = %land.lhs.true7172
  %call7180 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 79, %union.tree_node* %0, %union.tree_node* %arg1.12, %union.tree_node* %arg2.0) #1
  %call7181 = call %union.tree_node* @fold(%union.tree_node* %call7180)
  %861 = load i32* @pedantic_lvalues, align 4, !tbaa !12
  %tobool.i9878 = icmp eq i32 %861, 0
  br i1 %tobool.i9878, label %return, label %if.then.i9882

if.then.i9882:                                    ; preds = %if.then7179
  %code.i.i9879 = getelementptr inbounds %union.tree_node* %call7181, i64 0, i32 0, i32 0, i32 2
  %bf.load.i.i9880 = load i32* %code.i.i9879, align 8
  %bf.clear.i.i9881 = and i32 %bf.load.i.i9880, 255
  switch i32 %bf.clear.i.i9881, label %if.end.i.i9891 [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i.i9891:                                   ; preds = %if.then.i9882
  %type.i.i9883 = getelementptr inbounds %union.tree_node* %call7181, i64 0, i32 0, i32 0, i32 1
  %862 = load %union.tree_node** %type.i.i9883, align 8, !tbaa !11
  %call.i.i9884 = call %union.tree_node* @build1(i32 116, %union.tree_node* %862, %union.tree_node* %call7181) #1
  %bf.load26.i.i9885 = load i32* %code.i.i9879, align 8
  %bf.clear27.i.i9886 = and i32 %bf.load26.i.i9885, 512
  %constant_flag29.i.i9887 = getelementptr inbounds %union.tree_node* %call.i.i9884, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i.i9888 = load i32* %constant_flag29.i.i9887, align 8
  %bf.clear31.i.i9889 = and i32 %bf.load30.i.i9888, -513
  %bf.set.i.i9890 = or i32 %bf.clear31.i.i9889, %bf.clear27.i.i9886
  store i32 %bf.set.i.i9890, i32* %constant_flag29.i.i9887, align 8
  br label %return

sw.bb7184:                                        ; preds = %if.then7120
  %863 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 13
  %864 = load %union.tree_node** %863, align 8, !tbaa !26
  %call7187 = call i32 @operand_equal_p(%union.tree_node* %arg2.0, %union.tree_node* %864, i32 1)
  %tobool7188 = icmp eq i32 %call7187, 0
  br i1 %tobool7188, label %land.lhs.true7189, label %if.end7204

land.lhs.true7189:                                ; preds = %sw.bb7184
  %865 = load %union.tree_node** %791, align 8, !tbaa !14
  %866 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 12), align 8, !tbaa !14
  %call7193 = call fastcc %union.tree_node* @const_binop(i32 59, %union.tree_node* %arg2.0, %union.tree_node* %866)
  %call7194 = call i32 @operand_equal_p(%union.tree_node* %865, %union.tree_node* %call7193, i32 1)
  %tobool7195 = icmp eq i32 %call7194, 0
  br i1 %tobool7195, label %if.end7204, label %if.then7196

if.then7196:                                      ; preds = %land.lhs.true7189
  %call7197 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 79, %union.tree_node* %0, %union.tree_node* %arg1.12, %union.tree_node* %arg2.0) #1
  %call7198 = call %union.tree_node* @fold(%union.tree_node* %call7197)
  %867 = load i32* @pedantic_lvalues, align 4, !tbaa !12
  %tobool.i9862 = icmp eq i32 %867, 0
  br i1 %tobool.i9862, label %return, label %if.then.i9866

if.then.i9866:                                    ; preds = %if.then7196
  %code.i.i9863 = getelementptr inbounds %union.tree_node* %call7198, i64 0, i32 0, i32 0, i32 2
  %bf.load.i.i9864 = load i32* %code.i.i9863, align 8
  %bf.clear.i.i9865 = and i32 %bf.load.i.i9864, 255
  switch i32 %bf.clear.i.i9865, label %if.end.i.i9875 [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i.i9875:                                   ; preds = %if.then.i9866
  %type.i.i9867 = getelementptr inbounds %union.tree_node* %call7198, i64 0, i32 0, i32 0, i32 1
  %868 = load %union.tree_node** %type.i.i9867, align 8, !tbaa !11
  %call.i.i9868 = call %union.tree_node* @build1(i32 116, %union.tree_node* %868, %union.tree_node* %call7198) #1
  %bf.load26.i.i9869 = load i32* %code.i.i9863, align 8
  %bf.clear27.i.i9870 = and i32 %bf.load26.i.i9869, 512
  %constant_flag29.i.i9871 = getelementptr inbounds %union.tree_node* %call.i.i9868, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i.i9872 = load i32* %constant_flag29.i.i9871, align 8
  %bf.clear31.i.i9873 = and i32 %bf.load30.i.i9872, -513
  %bf.set.i.i9874 = or i32 %bf.clear31.i.i9873, %bf.clear27.i.i9870
  store i32 %bf.set.i.i9874, i32* %constant_flag29.i.i9871, align 8
  br label %return

sw.default7201:                                   ; preds = %if.then7120
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8]* @.str, i64 0, i64 0), i32 7323, i8* getelementptr inbounds ([5 x i8]* @__FUNCTION__.fold, i64 0, i64 0)) #7
  unreachable

if.end7204:                                       ; preds = %if.end7075, %lor.lhs.false6787, %land.lhs.true7138, %sw.bb7133, %land.lhs.true7155, %sw.bb7150, %land.lhs.true7172, %sw.bb7167, %land.lhs.true7189, %sw.bb7184, %land.lhs.true6789, %land.lhs.true7103, %land.lhs.true7113, %if.then7120, %sw.bb7121, %land.lhs.true6773, %if.end6739
  %arg1.15 = phi %union.tree_node* [ %arg1.12, %if.then7120 ], [ %arg1.12, %sw.bb7184 ], [ %arg1.12, %land.lhs.true7189 ], [ %arg1.12, %sw.bb7167 ], [ %arg1.12, %land.lhs.true7172 ], [ %arg1.12, %sw.bb7150 ], [ %arg1.12, %land.lhs.true7155 ], [ %arg1.12, %sw.bb7133 ], [ %arg1.12, %land.lhs.true7138 ], [ %call7125, %sw.bb7121 ], [ %arg1.12, %land.lhs.true7113 ], [ %arg1.12, %land.lhs.true7103 ], [ %arg1.12, %land.lhs.true6789 ], [ %arg1.12, %lor.lhs.false6787 ], [ %arg1.12, %land.lhs.true6773 ], [ %arg1.12, %if.end6739 ], [ %arg1.12, %if.end7075 ]
  %t.8 = phi %union.tree_node* [ %t.7, %if.then7120 ], [ %t.7, %sw.bb7184 ], [ %t.7, %land.lhs.true7189 ], [ %t.7, %sw.bb7167 ], [ %t.7, %land.lhs.true7172 ], [ %t.7, %sw.bb7150 ], [ %t.7, %land.lhs.true7155 ], [ %t.7, %sw.bb7133 ], [ %t.7, %land.lhs.true7138 ], [ %call7132, %sw.bb7121 ], [ %t.7, %land.lhs.true7113 ], [ %t.7, %land.lhs.true7103 ], [ %t.7, %land.lhs.true6789 ], [ %t.7, %lor.lhs.false6787 ], [ %t.7, %land.lhs.true6773 ], [ %t.7, %if.end6739 ], [ %t.7, %if.end7075 ]
  %constant_flag7206 = getelementptr inbounds %union.tree_node* %arg1.15, i64 0, i32 0, i32 0, i32 2
  %bf.load7207 = load i32* %constant_flag7206, align 8
  %bf.clear7209 = and i32 %bf.load7207, 512
  %tobool7210 = icmp eq i32 %bf.clear7209, 0
  br i1 %tobool7210, label %lor.lhs.false7211, label %land.lhs.true7228

lor.lhs.false7211:                                ; preds = %if.end7204
  %bf.clear7215 = and i32 %bf.load7207, 255
  %idxprom72169691 = zext i32 %bf.clear7215 to i64
  %arrayidx7217 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom72169691
  %869 = load i8* %arrayidx7217, align 1, !tbaa !15
  %cmp7219 = icmp eq i8 %869, 100
  %cmp7226 = icmp eq i32 %bf.clear7215, 118
  %or.cond9761 = or i1 %cmp7219, %cmp7226
  br i1 %or.cond9761, label %land.lhs.true7228, label %if.end7335

land.lhs.true7228:                                ; preds = %if.end7204, %lor.lhs.false7211
  %operands7230 = getelementptr inbounds %union.tree_node* %t.8, i64 0, i32 0, i32 2
  %arrayidx7231 = getelementptr inbounds i32* %operands7230, i64 4
  %870 = bitcast i32* %arrayidx7231 to %union.tree_node**
  %871 = load %union.tree_node** %870, align 8, !tbaa !14
  %constant_flag7233 = getelementptr inbounds %union.tree_node* %871, i64 0, i32 0, i32 0, i32 2
  %bf.load7234 = load i32* %constant_flag7233, align 8
  %bf.clear7236 = and i32 %bf.load7234, 512
  %tobool7237 = icmp eq i32 %bf.clear7236, 0
  br i1 %tobool7237, label %lor.lhs.false7238, label %if.end7335

lor.lhs.false7238:                                ; preds = %land.lhs.true7228
  %bf.clear7245 = and i32 %bf.load7234, 255
  %idxprom72469692 = zext i32 %bf.clear7245 to i64
  %arrayidx7247 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom72469692
  %872 = load i8* %arrayidx7247, align 1, !tbaa !15
  %cmp7249 = icmp eq i8 %872, 100
  %cmp7259 = icmp eq i32 %bf.clear7245, 118
  %or.cond9762 = or i1 %cmp7249, %cmp7259
  br i1 %or.cond9762, label %if.end7335, label %if.then7261

if.then7261:                                      ; preds = %lor.lhs.false7238
  %call7262 = call %union.tree_node* @invert_truthvalue(%union.tree_node* %arg0.8)
  %code7264 = getelementptr inbounds %union.tree_node* %call7262, i64 0, i32 0, i32 0, i32 2
  %bf.load7265 = load i32* %code7264, align 8
  %bf.clear7266 = and i32 %bf.load7265, 255
  %cmp7267 = icmp eq i32 %bf.clear7266, 96
  br i1 %cmp7267, label %if.end7335, label %if.then7269

if.then7269:                                      ; preds = %if.then7261
  %873 = load %union.tree_node** %870, align 8, !tbaa !14
  %arrayidx7275 = getelementptr inbounds i32* %operands7230, i64 2
  %874 = bitcast i32* %arrayidx7275 to %union.tree_node**
  %875 = load %union.tree_node** %874, align 8, !tbaa !14
  %call7276 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 51, %union.tree_node* %0, %union.tree_node* %call7262, %union.tree_node* %873, %union.tree_node* %875) #1
  %operands7278 = getelementptr inbounds %union.tree_node* %call7276, i64 0, i32 0, i32 2
  %arrayidx7279 = getelementptr inbounds i32* %operands7278, i64 2
  %876 = bitcast i32* %arrayidx7279 to %union.tree_node**
  %877 = load %union.tree_node** %876, align 8, !tbaa !14
  %878 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !14
  br label %while.cond7280

while.cond7280:                                   ; preds = %land.rhs7307, %if.then7269
  %arg1.16 = phi %union.tree_node* [ %877, %if.then7269 ], [ %879, %land.rhs7307 ]
  %code7282 = getelementptr inbounds %union.tree_node* %arg1.16, i64 0, i32 0, i32 0, i32 2
  %bf.load7283 = load i32* %code7282, align 8
  %bf.clear7284 = and i32 %bf.load7283, 255
  %bf.clear7284.off = add i32 %bf.clear7284, -114
  %switch9808 = icmp ult i32 %bf.clear7284.off, 3
  br i1 %switch9808, label %land.lhs.true7301, label %if.end7335

land.lhs.true7301:                                ; preds = %while.cond7280
  %operands7303 = getelementptr inbounds %union.tree_node* %arg1.16, i64 0, i32 0, i32 2
  %arrayidx7304 = bitcast i32* %operands7303 to %union.tree_node**
  %879 = load %union.tree_node** %arrayidx7304, align 8, !tbaa !14
  %cmp7305 = icmp eq %union.tree_node* %879, %878
  br i1 %cmp7305, label %if.end7335, label %land.rhs7307

land.rhs7307:                                     ; preds = %land.lhs.true7301
  %type7309 = getelementptr inbounds %union.tree_node* %arg1.16, i64 0, i32 0, i32 0, i32 1
  %880 = load %union.tree_node** %type7309, align 8, !tbaa !11
  %type7310 = bitcast %union.tree_node* %880 to %struct.tree_type*
  %mode7311 = getelementptr inbounds %struct.tree_type* %type7310, i64 0, i32 6
  %bf.load7312 = load i32* %mode7311, align 4
  %type7319 = getelementptr inbounds %union.tree_node* %879, i64 0, i32 0, i32 0, i32 1
  %881 = load %union.tree_node** %type7319, align 8, !tbaa !11
  %type7320 = bitcast %union.tree_node* %881 to %struct.tree_type*
  %mode7321 = getelementptr inbounds %struct.tree_type* %type7320, i64 0, i32 6
  %bf.load7322 = load i32* %mode7321, align 4
  %bf.lshr73139709 = xor i32 %bf.load7322, %bf.load7312
  %882 = and i32 %bf.lshr73139709, 65024
  %cmp7325 = icmp eq i32 %882, 0
  br i1 %cmp7325, label %while.cond7280, label %if.end7335

if.end7335:                                       ; preds = %while.cond7280, %land.lhs.true7301, %land.rhs7307, %lor.lhs.false7211, %if.then7261, %land.lhs.true7228, %lor.lhs.false7238
  %arg1.17 = phi %union.tree_node* [ %arg1.15, %land.lhs.true7228 ], [ %arg1.15, %lor.lhs.false7238 ], [ %arg1.15, %if.then7261 ], [ %arg1.15, %lor.lhs.false7211 ], [ %arg1.16, %land.rhs7307 ], [ %arg1.16, %land.lhs.true7301 ], [ %arg1.16, %while.cond7280 ]
  %arg0.9 = phi %union.tree_node* [ %arg0.8, %land.lhs.true7228 ], [ %arg0.8, %lor.lhs.false7238 ], [ %arg0.8, %if.then7261 ], [ %arg0.8, %lor.lhs.false7211 ], [ %call7262, %land.rhs7307 ], [ %call7262, %land.lhs.true7301 ], [ %call7262, %while.cond7280 ]
  %t.9 = phi %union.tree_node* [ %t.8, %land.lhs.true7228 ], [ %t.8, %lor.lhs.false7238 ], [ %t.8, %if.then7261 ], [ %t.8, %lor.lhs.false7211 ], [ %call7276, %land.rhs7307 ], [ %call7276, %land.lhs.true7301 ], [ %call7276, %while.cond7280 ]
  %operands7337 = getelementptr inbounds %union.tree_node* %t.9, i64 0, i32 0, i32 2
  %arrayidx7338 = getelementptr inbounds i32* %operands7337, i64 2
  %883 = bitcast i32* %arrayidx7338 to %union.tree_node**
  %884 = load %union.tree_node** %883, align 8, !tbaa !14
  %call7339 = call i32 @integer_onep(%union.tree_node* %884) #1
  %tobool7340 = icmp eq i32 %call7339, 0
  %arrayidx7357.pre = getelementptr inbounds i32* %operands7337, i64 4
  %.pre11303 = bitcast i32* %arrayidx7357.pre to %union.tree_node**
  br i1 %tobool7340, label %if.end7354, label %land.lhs.true7341

land.lhs.true7341:                                ; preds = %if.end7335
  %885 = load %union.tree_node** %.pre11303, align 8, !tbaa !14
  %call7345 = call i32 @integer_zerop(%union.tree_node* %885) #1
  %tobool7346 = icmp eq i32 %call7345, 0
  br i1 %tobool7346, label %if.end7354, label %land.lhs.true7347

land.lhs.true7347:                                ; preds = %land.lhs.true7341
  %type7349 = getelementptr inbounds %union.tree_node* %arg0.9, i64 0, i32 0, i32 0, i32 1
  %886 = load %union.tree_node** %type7349, align 8, !tbaa !11
  %cmp7350 = icmp eq %union.tree_node* %0, %886
  br i1 %cmp7350, label %if.then7352, label %if.end7354

if.then7352:                                      ; preds = %land.lhs.true7347
  %887 = load i32* @pedantic_lvalues, align 4, !tbaa !12
  %tobool.i9846 = icmp eq i32 %887, 0
  br i1 %tobool.i9846, label %return, label %if.then.i9850

if.then.i9850:                                    ; preds = %if.then7352
  %code.i.i9847 = getelementptr inbounds %union.tree_node* %arg0.9, i64 0, i32 0, i32 0, i32 2
  %bf.load.i.i9848 = load i32* %code.i.i9847, align 8
  %bf.clear.i.i9849 = and i32 %bf.load.i.i9848, 255
  switch i32 %bf.clear.i.i9849, label %if.end.i.i9859 [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i.i9859:                                   ; preds = %if.then.i9850
  %call.i.i9852 = call %union.tree_node* @build1(i32 116, %union.tree_node* %0, %union.tree_node* %arg0.9) #1
  %bf.load26.i.i9853 = load i32* %code.i.i9847, align 8
  %bf.clear27.i.i9854 = and i32 %bf.load26.i.i9853, 512
  %constant_flag29.i.i9855 = getelementptr inbounds %union.tree_node* %call.i.i9852, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i.i9856 = load i32* %constant_flag29.i.i9855, align 8
  %bf.clear31.i.i9857 = and i32 %bf.load30.i.i9856, -513
  %bf.set.i.i9858 = or i32 %bf.clear31.i.i9857, %bf.clear27.i.i9854
  store i32 %bf.set.i.i9858, i32* %constant_flag29.i.i9855, align 8
  br label %return

if.end7354:                                       ; preds = %if.end7335, %land.lhs.true7341, %land.lhs.true7347
  %888 = load %union.tree_node** %.pre11303, align 8, !tbaa !14
  %call7358 = call i32 @integer_zerop(%union.tree_node* %888) #1
  %tobool7359 = icmp eq i32 %call7358, 0
  br i1 %tobool7359, label %return, label %land.lhs.true7360

land.lhs.true7360:                                ; preds = %if.end7354
  %code7362 = getelementptr inbounds %union.tree_node* %arg0.9, i64 0, i32 0, i32 0, i32 2
  %bf.load7363 = load i32* %code7362, align 8
  %bf.clear7364 = and i32 %bf.load7363, 255
  %cmp7365 = icmp eq i32 %bf.clear7364, 102
  br i1 %cmp7365, label %land.lhs.true7367, label %return

land.lhs.true7367:                                ; preds = %land.lhs.true7360
  %operands7369 = getelementptr inbounds %union.tree_node* %arg0.9, i64 0, i32 0, i32 2
  %arrayidx7370 = getelementptr inbounds i32* %operands7369, i64 2
  %889 = bitcast i32* %arrayidx7370 to %union.tree_node**
  %890 = load %union.tree_node** %889, align 8, !tbaa !14
  %call7371 = call i32 @integer_zerop(%union.tree_node* %890) #1
  %tobool7372 = icmp eq i32 %call7371, 0
  br i1 %tobool7372, label %return, label %land.lhs.true7373

land.lhs.true7373:                                ; preds = %land.lhs.true7367
  %call7374 = call i32 @integer_pow2p(%union.tree_node* %arg1.17) #1
  %tobool7375 = icmp eq i32 %call7374, 0
  br i1 %tobool7375, label %return, label %land.lhs.true7376

land.lhs.true7376:                                ; preds = %land.lhs.true7373
  %arrayidx7379 = bitcast i32* %operands7369 to %union.tree_node**
  %891 = load %union.tree_node** %arrayidx7379, align 8, !tbaa !14
  %code7381 = getelementptr inbounds %union.tree_node* %891, i64 0, i32 0, i32 0, i32 2
  %bf.load7382 = load i32* %code7381, align 8
  %bf.clear7383 = and i32 %bf.load7382, 255
  %cmp7384 = icmp eq i32 %bf.clear7383, 88
  br i1 %cmp7384, label %land.lhs.true7386, label %return

land.lhs.true7386:                                ; preds = %land.lhs.true7376
  %operands7391 = getelementptr inbounds %union.tree_node* %891, i64 0, i32 0, i32 2
  %arrayidx7392 = getelementptr inbounds i32* %operands7391, i64 2
  %892 = bitcast i32* %arrayidx7392 to %union.tree_node**
  %893 = load %union.tree_node** %892, align 8, !tbaa !14
  %call7393 = call i32 @operand_equal_p(%union.tree_node* %893, %union.tree_node* %arg1.17, i32 1)
  %tobool7394 = icmp eq i32 %call7393, 0
  br i1 %tobool7394, label %return, label %if.then7395

if.then7395:                                      ; preds = %land.lhs.true7386
  %894 = load %union.tree_node** %arrayidx7379, align 8, !tbaa !14
  %call7399 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %894) #1
  %895 = load i32* @pedantic_lvalues, align 4, !tbaa !12
  %tobool.i9831 = icmp eq i32 %895, 0
  br i1 %tobool.i9831, label %return, label %if.then.i9835

if.then.i9835:                                    ; preds = %if.then7395
  %code.i.i9832 = getelementptr inbounds %union.tree_node* %call7399, i64 0, i32 0, i32 0, i32 2
  %bf.load.i.i9833 = load i32* %code.i.i9832, align 8
  %bf.clear.i.i9834 = and i32 %bf.load.i.i9833, 255
  switch i32 %bf.clear.i.i9834, label %if.end.i.i9844 [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i.i9844:                                   ; preds = %if.then.i9835
  %type.i.i9836 = getelementptr inbounds %union.tree_node* %call7399, i64 0, i32 0, i32 0, i32 1
  %896 = load %union.tree_node** %type.i.i9836, align 8, !tbaa !11
  %call.i.i9837 = call %union.tree_node* @build1(i32 116, %union.tree_node* %896, %union.tree_node* %call7399) #1
  %bf.load26.i.i9838 = load i32* %code.i.i9832, align 8
  %bf.clear27.i.i9839 = and i32 %bf.load26.i.i9838, 512
  %constant_flag29.i.i9840 = getelementptr inbounds %union.tree_node* %call.i.i9837, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i.i9841 = load i32* %constant_flag29.i.i9840, align 8
  %bf.clear31.i.i9842 = and i32 %bf.load30.i.i9841, -513
  %bf.set.i.i9843 = or i32 %bf.clear31.i.i9842, %bf.clear27.i.i9839
  store i32 %bf.set.i.i9843, i32* %constant_flag29.i.i9840, align 8
  br label %return

sw.bb7402:                                        ; preds = %if.end901
  %side_effects_flag7404 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 0, i32 2
  %bf.load7405 = load i32* %side_effects_flag7404, align 8
  %bf.clear7407 = and i32 %bf.load7405, 256
  %897 = load i32* @pedantic, align 4
  %898 = or i32 %bf.clear7407, %897
  %899 = icmp eq i32 %898, 0
  br i1 %899, label %if.end7412, label %return

if.end7412:                                       ; preds = %sw.bb7402
  %call7413 = call i32 @integer_zerop(%union.tree_node* %arg1.3) #1
  %tobool7414 = icmp eq i32 %call7413, 0
  br i1 %tobool7414, label %if.end7417, label %if.then7415

if.then7415:                                      ; preds = %if.end7412
  %call7416 = call %union.tree_node* @build1(i32 115, %union.tree_node* %0, %union.tree_node* %arg1.3) #1
  br label %return

if.end7417:                                       ; preds = %if.end7412
  %call7418 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %arg1.3) #1
  br label %return

sw.bb7419:                                        ; preds = %if.end901
  %tobool7420 = icmp eq i32 %wins.3, 0
  br i1 %tobool7420, label %return, label %if.then7421

if.then7421:                                      ; preds = %sw.bb7419
  %call7422 = call %union.tree_node* @build_complex(%union.tree_node* %0, %union.tree_node* %arg0.5, %union.tree_node* %arg1.3) #1
  br label %return

sw.bb7424:                                        ; preds = %if.end901
  %type7426 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 0, i32 1
  %900 = load %union.tree_node** %type7426, align 8, !tbaa !11
  %code7428 = getelementptr inbounds %union.tree_node* %900, i64 0, i32 0, i32 0, i32 2
  %bf.load7429 = load i32* %code7428, align 8
  %bf.clear7430 = and i32 %bf.load7429, 255
  %cmp7431 = icmp eq i32 %bf.clear7430, 8
  br i1 %cmp7431, label %if.else7434, label %return

if.else7434:                                      ; preds = %sw.bb7424
  %code7436 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 0, i32 2
  %bf.load7437 = load i32* %code7436, align 8
  %bf.clear7438 = and i32 %bf.load7437, 255
  switch i32 %bf.clear7438, label %return [
    i32 125, label %if.then7441
    i32 27, label %if.then7456
    i32 59, label %if.then7473
    i32 60, label %if.then7473
  ]

if.then7441:                                      ; preds = %if.else7434
  %operands7443 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 2
  %arrayidx7444 = bitcast i32* %operands7443 to %union.tree_node**
  %901 = load %union.tree_node** %arrayidx7444, align 8, !tbaa !14
  %arrayidx7447 = getelementptr inbounds i32* %operands7443, i64 2
  %902 = bitcast i32* %arrayidx7447 to %union.tree_node**
  %903 = load %union.tree_node** %902, align 8, !tbaa !14
  %call.i9809 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %901) #1
  %side_effects_flag.i9810 = getelementptr inbounds %union.tree_node* %903, i64 0, i32 0, i32 0, i32 2
  %bf.load.i9811 = load i32* %side_effects_flag.i9810, align 8
  %bf.clear.i9812 = and i32 %bf.load.i9811, 256
  %tobool.i9813 = icmp eq i32 %bf.clear.i9812, 0
  br i1 %tobool.i9813, label %if.end.i9819, label %if.then.i9815

if.then.i9815:                                    ; preds = %if.then7441
  %call1.i9814 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 47, %union.tree_node* %0, %union.tree_node* %903, %union.tree_node* %call.i9809) #1
  br label %return

if.end.i9819:                                     ; preds = %if.then7441
  %code.i.i9816 = getelementptr inbounds %union.tree_node* %call.i9809, i64 0, i32 0, i32 0, i32 2
  %bf.load.i.i9817 = load i32* %code.i.i9816, align 8
  %bf.clear.i.i9818 = and i32 %bf.load.i.i9817, 255
  switch i32 %bf.clear.i.i9818, label %if.end.i.i9828 [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i.i9828:                                   ; preds = %if.end.i9819
  %type.i.i9820 = getelementptr inbounds %union.tree_node* %call.i9809, i64 0, i32 0, i32 0, i32 1
  %904 = load %union.tree_node** %type.i.i9820, align 8, !tbaa !11
  %call.i.i9821 = call %union.tree_node* @build1(i32 116, %union.tree_node* %904, %union.tree_node* %call.i9809) #1
  %bf.load26.i.i9822 = load i32* %code.i.i9816, align 8
  %bf.clear27.i.i9823 = and i32 %bf.load26.i.i9822, 512
  %constant_flag29.i.i9824 = getelementptr inbounds %union.tree_node* %call.i.i9821, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i.i9825 = load i32* %constant_flag29.i.i9824, align 8
  %bf.clear31.i.i9826 = and i32 %bf.load30.i.i9825, -513
  %bf.set.i.i9827 = or i32 %bf.clear31.i.i9826, %bf.clear27.i.i9823
  store i32 %bf.set.i.i9827, i32* %constant_flag29.i.i9824, align 8
  br label %return

if.then7456:                                      ; preds = %if.else7434
  %real7458 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 2
  %905 = bitcast i32* %real7458 to %union.tree_node**
  %906 = load %union.tree_node** %905, align 8, !tbaa !16
  br label %return

if.then7473:                                      ; preds = %if.else7434, %if.else7434
  %operands7479 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 2
  %arrayidx7480 = bitcast i32* %operands7479 to %union.tree_node**
  %907 = load %union.tree_node** %arrayidx7480, align 8, !tbaa !14
  %call7481 = call %union.tree_node* @build1(i32 127, %union.tree_node* %0, %union.tree_node* %907) #1
  %call7482 = call %union.tree_node* @fold(%union.tree_node* %call7481)
  %arrayidx7485 = getelementptr inbounds i32* %operands7479, i64 2
  %908 = bitcast i32* %arrayidx7485 to %union.tree_node**
  %909 = load %union.tree_node** %908, align 8, !tbaa !14
  %call7486 = call %union.tree_node* @build1(i32 127, %union.tree_node* %0, %union.tree_node* %909) #1
  %call7487 = call %union.tree_node* @fold(%union.tree_node* %call7486)
  %call7488 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %bf.clear7438, %union.tree_node* %0, %union.tree_node* %call7482, %union.tree_node* %call7487) #1
  %call7489 = call %union.tree_node* @fold(%union.tree_node* %call7488)
  br label %return

sw.bb7494:                                        ; preds = %if.end901
  %type7496 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 0, i32 1
  %910 = load %union.tree_node** %type7496, align 8, !tbaa !11
  %code7498 = getelementptr inbounds %union.tree_node* %910, i64 0, i32 0, i32 0, i32 2
  %bf.load7499 = load i32* %code7498, align 8
  %bf.clear7500 = and i32 %bf.load7499, 255
  %cmp7501 = icmp eq i32 %bf.clear7500, 8
  br i1 %cmp7501, label %if.else7505, label %if.then7503

if.then7503:                                      ; preds = %sw.bb7494
  %911 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8, !tbaa !14
  %call7504 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %911) #1
  br label %return

if.else7505:                                      ; preds = %sw.bb7494
  %code7507 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 0, i32 2
  %bf.load7508 = load i32* %code7507, align 8
  %bf.clear7509 = and i32 %bf.load7508, 255
  switch i32 %bf.clear7509, label %return [
    i32 125, label %if.then7512
    i32 27, label %if.then7527
    i32 59, label %if.then7544
    i32 60, label %if.then7544
  ]

if.then7512:                                      ; preds = %if.else7505
  %operands7514 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 2
  %arrayidx7515 = getelementptr inbounds i32* %operands7514, i64 2
  %912 = bitcast i32* %arrayidx7515 to %union.tree_node**
  %913 = load %union.tree_node** %912, align 8, !tbaa !14
  %arrayidx7518 = bitcast i32* %operands7514 to %union.tree_node**
  %914 = load %union.tree_node** %arrayidx7518, align 8, !tbaa !14
  %call.i = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %913) #1
  %side_effects_flag.i = getelementptr inbounds %union.tree_node* %914, i64 0, i32 0, i32 0, i32 2
  %bf.load.i = load i32* %side_effects_flag.i, align 8
  %bf.clear.i = and i32 %bf.load.i, 256
  %tobool.i = icmp eq i32 %bf.clear.i, 0
  br i1 %tobool.i, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %if.then7512
  %call1.i = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 47, %union.tree_node* %0, %union.tree_node* %914, %union.tree_node* %call.i) #1
  br label %return

if.end.i:                                         ; preds = %if.then7512
  %code.i.i = getelementptr inbounds %union.tree_node* %call.i, i64 0, i32 0, i32 0, i32 2
  %bf.load.i.i = load i32* %code.i.i, align 8
  %bf.clear.i.i = and i32 %bf.load.i.i, 255
  switch i32 %bf.clear.i.i, label %if.end.i.i [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i.i:                                       ; preds = %if.end.i
  %type.i.i = getelementptr inbounds %union.tree_node* %call.i, i64 0, i32 0, i32 0, i32 1
  %915 = load %union.tree_node** %type.i.i, align 8, !tbaa !11
  %call.i.i = call %union.tree_node* @build1(i32 116, %union.tree_node* %915, %union.tree_node* %call.i) #1
  %bf.load26.i.i = load i32* %code.i.i, align 8
  %bf.clear27.i.i = and i32 %bf.load26.i.i, 512
  %constant_flag29.i.i = getelementptr inbounds %union.tree_node* %call.i.i, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i.i = load i32* %constant_flag29.i.i, align 8
  %bf.clear31.i.i = and i32 %bf.load30.i.i, -513
  %bf.set.i.i = or i32 %bf.clear31.i.i, %bf.clear27.i.i
  store i32 %bf.set.i.i, i32* %constant_flag29.i.i, align 8
  br label %return

if.then7527:                                      ; preds = %if.else7505
  %916 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 4
  %917 = load %union.tree_node** %916, align 8, !tbaa !33
  br label %return

if.then7544:                                      ; preds = %if.else7505, %if.else7505
  %operands7550 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 2
  %arrayidx7551 = bitcast i32* %operands7550 to %union.tree_node**
  %918 = load %union.tree_node** %arrayidx7551, align 8, !tbaa !14
  %call7552 = call %union.tree_node* @build1(i32 128, %union.tree_node* %0, %union.tree_node* %918) #1
  %call7553 = call %union.tree_node* @fold(%union.tree_node* %call7552)
  %arrayidx7556 = getelementptr inbounds i32* %operands7550, i64 2
  %919 = bitcast i32* %arrayidx7556 to %union.tree_node**
  %920 = load %union.tree_node** %919, align 8, !tbaa !14
  %call7557 = call %union.tree_node* @build1(i32 128, %union.tree_node* %0, %union.tree_node* %920) #1
  %call7558 = call %union.tree_node* @fold(%union.tree_node* %call7557)
  %call7559 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %bf.clear7509, %union.tree_node* %0, %union.tree_node* %call7553, %union.tree_node* %call7558) #1
  %call7560 = call %union.tree_node* @fold(%union.tree_node* %call7559)
  br label %return

sw.bb7565:                                        ; preds = %if.end901
  %call7566 = call i32 @has_cleanups(%union.tree_node* %arg0.5) #1
  %tobool7567 = icmp eq i32 %call7566, 0
  br i1 %tobool7567, label %if.then7568, label %if.end7572

if.then7568:                                      ; preds = %sw.bb7565
  %operands7570 = getelementptr inbounds %union.tree_node* %expr, i64 0, i32 0, i32 2
  %arrayidx7571 = bitcast i32* %operands7570 to %union.tree_node**
  %921 = load %union.tree_node** %arrayidx7571, align 8, !tbaa !14
  br label %return

if.end7572:                                       ; preds = %sw.bb7565
  %code7576 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 0, i32 2
  %bf.load7577 = load i32* %code7576, align 8
  %bf.clear7578 = and i32 %bf.load7577, 255
  %idxprom75809688 = zext i32 %bf.clear7578 to i64
  %arrayidx7581 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom75809688
  %922 = load i8* %arrayidx7581, align 1, !tbaa !15
  %operands7586 = getelementptr inbounds %union.tree_node* %arg0.5, i64 0, i32 0, i32 2
  %arrayidx7587 = bitcast i32* %operands7586 to %union.tree_node**
  %923 = load %union.tree_node** %arrayidx7587, align 8, !tbaa !14
  %cmp7590 = icmp eq i8 %922, 49
  %cmp7593 = icmp eq i32 %bf.clear7578, 96
  %or.cond7828 = or i1 %cmp7590, %cmp7593
  br i1 %or.cond7828, label %if.then7595, label %if.end7602

if.then7595:                                      ; preds = %if.end7572
  %type7597 = getelementptr inbounds %union.tree_node* %923, i64 0, i32 0, i32 0, i32 1
  %924 = load %union.tree_node** %type7597, align 8, !tbaa !11
  %call7598 = call %union.tree_node* @build1(i32 56, %union.tree_node* %924, %union.tree_node* %923) #1
  %call7599 = call %union.tree_node* @fold(%union.tree_node* %call7598)
  %call7600 = call %union.tree_node* @build1(i32 %bf.clear7578, %union.tree_node* %0, %union.tree_node* %call7599) #1
  %call7601 = call %union.tree_node* @fold(%union.tree_node* %call7600)
  br label %return

if.end7602:                                       ; preds = %if.end7572
  %cmp7603 = icmp eq i8 %922, 60
  %cmp7606 = icmp eq i8 %922, 50
  %or.cond7830 = or i1 %cmp7603, %cmp7606
  %cmp7609 = icmp eq i32 %bf.clear7578, 91
  %or.cond7832 = or i1 %or.cond7830, %cmp7609
  %cmp7612 = icmp eq i32 %bf.clear7578, 92
  %or.cond7834 = or i1 %or.cond7832, %cmp7612
  %cmp7615 = icmp eq i32 %bf.clear7578, 93
  %or.cond7836 = or i1 %or.cond7834, %cmp7615
  %cmp7618 = icmp eq i32 %bf.clear7578, 94
  %or.cond7838 = or i1 %or.cond7836, %cmp7618
  %cmp7621 = icmp eq i32 %bf.clear7578, 95
  %or.cond7840 = or i1 %or.cond7838, %cmp7621
  br i1 %or.cond7840, label %if.then7623, label %return

if.then7623:                                      ; preds = %if.end7602
  %arrayidx7626 = getelementptr inbounds i32* %operands7586, i64 2
  %925 = bitcast i32* %arrayidx7626 to %union.tree_node**
  %926 = load %union.tree_node** %925, align 8, !tbaa !14
  %constant_flag7628 = getelementptr inbounds %union.tree_node* %923, i64 0, i32 0, i32 0, i32 2
  %bf.load7629 = load i32* %constant_flag7628, align 8
  %bf.clear7631 = and i32 %bf.load7629, 512
  %tobool7632 = icmp eq i32 %bf.clear7631, 0
  br i1 %tobool7632, label %lor.lhs.false7633, label %if.then7642

lor.lhs.false7633:                                ; preds = %if.then7623
  %bf.clear7578.off = add i32 %bf.clear7578, -91
  %927 = icmp ult i32 %bf.clear7578.off, 2
  br i1 %927, label %land.lhs.true7639, label %if.end7649

land.lhs.true7639:                                ; preds = %lor.lhs.false7633
  %call7640 = call i32 @has_cleanups(%union.tree_node* %923) #1
  %tobool7641 = icmp eq i32 %call7640, 0
  br i1 %tobool7641, label %if.then7642, label %if.end7649

if.then7642:                                      ; preds = %land.lhs.true7639, %if.then7623
  %type7644 = getelementptr inbounds %union.tree_node* %926, i64 0, i32 0, i32 0, i32 1
  %928 = load %union.tree_node** %type7644, align 8, !tbaa !11
  %call7645 = call %union.tree_node* @build1(i32 56, %union.tree_node* %928, %union.tree_node* %926) #1
  %call7646 = call %union.tree_node* @fold(%union.tree_node* %call7645)
  %call7647 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %bf.clear7578, %union.tree_node* %0, %union.tree_node* %923, %union.tree_node* %call7646) #1
  %call7648 = call %union.tree_node* @fold(%union.tree_node* %call7647)
  br label %return

if.end7649:                                       ; preds = %land.lhs.true7639, %lor.lhs.false7633
  %constant_flag7651 = getelementptr inbounds %union.tree_node* %926, i64 0, i32 0, i32 0, i32 2
  %bf.load7652 = load i32* %constant_flag7651, align 8
  %bf.clear7654 = and i32 %bf.load7652, 512
  %tobool7655 = icmp eq i32 %bf.clear7654, 0
  br i1 %tobool7655, label %return, label %if.then7656

if.then7656:                                      ; preds = %if.end7649
  %type7658 = getelementptr inbounds %union.tree_node* %923, i64 0, i32 0, i32 0, i32 1
  %929 = load %union.tree_node** %type7658, align 8, !tbaa !11
  %call7659 = call %union.tree_node* @build1(i32 56, %union.tree_node* %929, %union.tree_node* %923) #1
  %call7660 = call %union.tree_node* @fold(%union.tree_node* %call7659)
  %call7661 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %bf.clear7578, %union.tree_node* %0, %union.tree_node* %call7660, %union.tree_node* %926) #1
  %call7662 = call %union.tree_node* @fold(%union.tree_node* %call7661)
  br label %return

sw.bb7665:                                        ; preds = %if.end901
  %operands7667 = getelementptr inbounds %union.tree_node* %expr, i64 0, i32 0, i32 2
  %arrayidx7668 = bitcast i32* %operands7667 to %union.tree_node**
  %930 = load %union.tree_node** %arrayidx7668, align 8, !tbaa !14
  %code7670 = getelementptr inbounds %union.tree_node* %930, i64 0, i32 0, i32 0, i32 2
  %bf.load7671 = load i32* %code7670, align 8
  %bf.clear7672 = and i32 %bf.load7671, 255
  %cmp7673 = icmp eq i32 %bf.clear7672, 121
  br i1 %cmp7673, label %land.lhs.true7675, label %if.end7710

land.lhs.true7675:                                ; preds = %sw.bb7665
  %operands7680 = getelementptr inbounds %union.tree_node* %930, i64 0, i32 0, i32 2
  %arrayidx7681 = bitcast i32* %operands7680 to %union.tree_node**
  %931 = load %union.tree_node** %arrayidx7681, align 8, !tbaa !14
  %code7683 = getelementptr inbounds %union.tree_node* %931, i64 0, i32 0, i32 0, i32 2
  %bf.load7684 = load i32* %code7683, align 8
  %bf.clear7685 = and i32 %bf.load7684, 255
  %cmp7686 = icmp eq i32 %bf.clear7685, 30
  br i1 %cmp7686, label %land.lhs.true7688, label %if.end7710

land.lhs.true7688:                                ; preds = %land.lhs.true7675
  %built_in_class7696 = getelementptr inbounds %union.tree_node* %931, i64 0, i32 0, i32 5
  %932 = bitcast i48* %built_in_class7696 to i64*
  %bf.load7697 = load i64* %932, align 8
  %bf.cast7700 = and i64 %bf.load7697, 1610612736
  %cmp7701 = icmp eq i64 %bf.cast7700, 0
  br i1 %cmp7701, label %if.end7710, label %if.then7703

if.then7703:                                      ; preds = %land.lhs.true7688
  %call7706 = call %union.tree_node* @fold_builtin(%union.tree_node* %expr) #1
  %tobool7707 = icmp eq %union.tree_node* %call7706, null
  br i1 %tobool7707, label %if.end7710, label %return

if.end7710:                                       ; preds = %if.then7703, %land.lhs.true7688, %land.lhs.true7675, %sw.bb7665
  br label %return

return:                                           ; preds = %if.end6420, %land.lhs.true6427, %binary, %if.end288.i, %if.end253.i, %if.then241.i, %if.then226.i, %if.then59.i, %if.then37.i, %land.lhs.true6524, %if.end.i.i, %if.end.i, %if.end.i, %if.end.i, %if.end.i, %if.end.i, %if.then.i, %if.end.i.i9828, %if.end.i9819, %if.end.i9819, %if.end.i9819, %if.end.i9819, %if.end.i9819, %if.then.i9815, %if.end.i.i9844, %if.then.i9835, %if.then.i9835, %if.then.i9835, %if.then.i9835, %if.then.i9835, %if.then7395, %if.end.i.i9859, %if.then.i9850, %if.then.i9850, %if.then.i9850, %if.then.i9850, %if.then.i9850, %if.then7352, %if.end.i.i9875, %if.then.i9866, %if.then.i9866, %if.then.i9866, %if.then.i9866, %if.then.i9866, %if.then7196, %if.end.i.i9891, %if.then.i9882, %if.then.i9882, %if.then.i9882, %if.then.i9882, %if.then.i9882, %if.then7179, %if.end.i.i9907, %if.then.i9898, %if.then.i9898, %if.then.i9898, %if.then.i9898, %if.then.i9898, %if.then7162, %if.end.i.i9923, %if.then.i9914, %if.then.i9914, %if.then.i9914, %if.then.i9914, %if.then.i9914, %if.then7145, %if.end.i.i9939, %if.then.i9930, %if.then.i9930, %if.then.i9930, %if.then.i9930, %if.then.i9930, %sw.bb7057, %if.end.i.i9955, %if.then.i9946, %if.then.i9946, %if.then.i9946, %if.then.i9946, %if.then.i9946, %sw.bb7040, %if.end.i.i9971, %if.then.i9962, %if.then.i9962, %if.then.i9962, %if.then.i9962, %if.then.i9962, %sw.bb7037, %if.end.i.i9987, %if.then.i9978, %if.then.i9978, %if.then.i9978, %if.then.i9978, %if.then.i9978, %sw.bb7034, %if.end.i.i10003, %if.then.i9994, %if.then.i9994, %if.then.i9994, %if.then.i9994, %if.then.i9994, %if.then7000, %if.end.i.i10019, %if.then.i10010, %if.then.i10010, %if.then.i10010, %if.then.i10010, %if.then.i10010, %if.then6994, %if.end.i.i10035, %if.then.i10026, %if.then.i10026, %if.then.i10026, %if.then.i10026, %if.then.i10026, %if.end6973, %if.end.i.i10051, %if.then.i10042, %if.then.i10042, %if.then.i10042, %if.then.i10042, %if.then.i10042, %if.end6952, %if.end.i.i10067, %if.then.i10058, %if.then.i10058, %if.then.i10058, %if.then.i10058, %if.then.i10058, %sw.bb6935, %if.end.i.i10083, %if.then.i10074, %if.then.i10074, %if.then.i10074, %if.then.i10074, %if.then.i10074, %sw.bb6925, %if.end.i.i.i, %if.then.i.i, %if.then.i.i, %if.then.i.i, %if.then.i.i, %if.then.i.i, %if.end.i10093, %if.then.i10092, %if.end.i.i10108, %if.then.i10099, %if.then.i10099, %if.then.i10099, %if.then.i10099, %if.then.i10099, %if.then6605, %if.end.i.i10137, %if.end.i10128, %if.end.i10128, %if.end.i10128, %if.end.i10128, %if.end.i10128, %if.then.i10124, %if.end.i.i10159, %if.end.i10150, %if.end.i10150, %if.end.i10150, %if.end.i10150, %if.end.i10150, %if.then.i10146, %if.else8.i, %if.then2.i, %if.then.i10162, %if.else8.i10178, %if.then2.i10175, %if.then.i10168, %if.end.i.i10200, %if.end.i10191, %if.end.i10191, %if.end.i10191, %if.end.i10191, %if.end.i10191, %if.then.i10187, %if.end.i.i10222, %if.end.i10213, %if.end.i10213, %if.end.i10213, %if.end.i10213, %if.end.i10213, %if.then.i10209, %if.end.i.i10244, %if.end.i10235, %if.end.i10235, %if.end.i10235, %if.end.i10235, %if.end.i10235, %if.then.i10231, %if.end.i.i10266, %if.end.i10257, %if.end.i10257, %if.end.i10257, %if.end.i10257, %if.end.i10257, %if.then.i10253, %if.end.i.i10288, %if.end.i10279, %if.end.i10279, %if.end.i10279, %if.end.i10279, %if.end.i10279, %if.then.i10275, %if.end.i.i10310, %if.end.i10301, %if.end.i10301, %if.end.i10301, %if.end.i10301, %if.end.i10301, %if.then.i10297, %if.end.i.i10332, %if.end.i10323, %if.end.i10323, %if.end.i10323, %if.end.i10323, %if.end.i10323, %if.then.i10319, %if.end.i.i10354, %if.end.i10345, %if.end.i10345, %if.end.i10345, %if.end.i10345, %if.end.i10345, %if.then.i10341, %if.end.i.i10377, %if.end.i10368, %if.end.i10368, %if.end.i10368, %if.end.i10368, %if.end.i10368, %if.then.i10364, %if.end.i.i10400, %if.end.i10391, %if.end.i10391, %if.end.i10391, %if.end.i10391, %if.end.i10391, %if.then.i10387, %if.end.i10421, %if.then4361, %if.then4361, %if.then4361, %if.then4361, %if.then4361, %if.end.i10434, %if.then4354, %if.then4354, %if.then4354, %if.then4354, %if.then4354, %if.end.i10448, %if.then4348, %if.then4348, %if.then4348, %if.then4348, %if.then4348, %if.end.i10462, %if.then4342, %if.then4342, %if.then4342, %if.then4342, %if.then4342, %if.end.i.i10484, %if.end.i10475, %if.end.i10475, %if.end.i10475, %if.end.i10475, %if.end.i10475, %if.then.i10471, %if.end.i.i10506, %if.end.i10497, %if.end.i10497, %if.end.i10497, %if.end.i10497, %if.end.i10497, %if.then.i10493, %if.end.i10520, %if.then4311, %if.then4311, %if.then4311, %if.then4311, %if.then4311, %if.end.i10534, %if.then4288, %if.then4288, %if.then4288, %if.then4288, %if.then4288, %if.end.i.i10556, %if.end.i10547, %if.end.i10547, %if.end.i10547, %if.end.i10547, %if.end.i10547, %if.then.i10543, %if.end.i.i10578, %if.end.i10569, %if.end.i10569, %if.end.i10569, %if.end.i10569, %if.end.i10569, %if.then.i10565, %if.end.i10592, %if.then4064, %if.then4064, %if.then4064, %if.then4064, %if.then4064, %if.end.i10606, %if.then4041, %if.then4041, %if.then4041, %if.then4041, %if.then4041, %if.end.i.i10628, %if.end.i10619, %if.end.i10619, %if.end.i10619, %if.end.i10619, %if.end.i10619, %if.then.i10615, %if.end.i.i10650, %if.end.i10641, %if.end.i10641, %if.end.i10641, %if.end.i10641, %if.end.i10641, %if.then.i10637, %if.end.i.i10672, %if.end.i10663, %if.end.i10663, %if.end.i10663, %if.end.i10663, %if.end.i10663, %if.then.i10659, %if.end.i.i10694, %if.end.i10685, %if.end.i10685, %if.end.i10685, %if.end.i10685, %if.end.i10685, %if.then.i10681, %if.end.i10708, %if.then3744, %if.then3744, %if.then3744, %if.then3744, %if.then3744, %if.end.i.i10730, %if.end.i10721, %if.end.i10721, %if.end.i10721, %if.end.i10721, %if.end.i10721, %if.then.i10717, %if.end.i10744, %if.then3679, %if.then3679, %if.then3679, %if.then3679, %if.then3679, %if.end.i10758, %if.then3595, %if.then3595, %if.then3595, %if.then3595, %if.then3595, %if.end.i.i10780, %if.end.i10771, %if.end.i10771, %if.end.i10771, %if.end.i10771, %if.end.i10771, %if.then.i10767, %if.end.i10794, %if.then3550, %if.then3550, %if.then3550, %if.then3550, %if.then3550, %if.end.i.i10816, %if.end.i10807, %if.end.i10807, %if.end.i10807, %if.end.i10807, %if.end.i10807, %if.then.i10803, %if.end.i10879, %if.then3386, %if.then3386, %if.then3386, %if.then3386, %if.then3386, %if.end.i10893, %if.then3328, %if.then3328, %if.then3328, %if.then3328, %if.then3328, %if.end.i10907, %if.then3292, %if.then3292, %if.then3292, %if.then3292, %if.then3292, %if.end.i.i10929, %if.end.i10920, %if.end.i10920, %if.end.i10920, %if.end.i10920, %if.end.i10920, %if.then.i10916, %if.end.i10943, %if.then3263, %if.then3263, %if.then3263, %if.then3263, %if.then3263, %if.end.i.i10965, %if.end.i10956, %if.end.i10956, %if.end.i10956, %if.end.i10956, %if.end.i10956, %if.then.i10952, %if.end.i10979, %if.then3195, %if.then3195, %if.then3195, %if.then3195, %if.then3195, %if.end.i.i11001, %if.end.i10992, %if.end.i10992, %if.end.i10992, %if.end.i10992, %if.end.i10992, %if.then.i10988, %if.end.i11015, %if.then3105, %if.then3105, %if.then3105, %if.then3105, %if.then3105, %if.end.i11029, %if.then3051, %if.then3051, %if.then3051, %if.then3051, %if.then3051, %if.end.i11067, %if.then2322, %if.then2322, %if.then2322, %if.then2322, %if.then2322, %if.end.i11081, %if.then2300, %if.then2300, %if.then2300, %if.then2300, %if.then2300, %if.end.i11095, %if.then1941, %if.then1941, %if.then1941, %if.then1941, %if.then1941, %land.lhs.true, %if.end901, %if.then7703, %if.end7602, %if.end7649, %if.else7505, %if.else7434, %sw.bb7424, %sw.bb7419, %sw.bb7402, %land.lhs.true7360, %land.lhs.true7376, %if.end7354, %land.lhs.true7367, %land.lhs.true7373, %land.lhs.true7386, %if.end6586, %if.end6576, %if.end4358, %if.end4259, %fold_range_test.exit, %truth_andor, %sw.bb4014, %if.then3769, %land.lhs.true3754, %if.end3720, %if.end3682, %if.end3394, %if.end3295, %if.end2962, %if.then2972, %if.then2965, %if.then1840, %if.else1876, %if.else1762, %if.then1722, %neg_double.exit11055, %if.then1717, %if.then1619, %if.else1730, %if.else1634, %land.lhs.true1652, %if.then1626, %if.then1558, %land.end1524, %land.lhs.true1595, %lor.lhs.false1604, %if.then1495, %if.else1563, %sw.bb1469, %if.then1482, %if.then1476, %sw.bb1450, %sw.bb904, %land.lhs.true501, %land.lhs.true508, %land.lhs.true518, %land.lhs.true528, %if.then653, %if.then477, %land.lhs.true643, %cond.end, %if.then444, %if.end, %entry, %if.end7710, %if.then7656, %if.then7642, %if.then7595, %if.then7568, %if.then7544, %if.then7527, %if.then7503, %if.then7473, %if.then7456, %if.then7421, %if.end7417, %if.then7415, %if.then6595, %if.then6397, %if.then6287, %optimize_bit_field_compare.exit, %if.else6204, %if.then6202, %if.then5936, %if.then5874, %if.then5841, %if.then5814, %if.then5774, %if.then5696, %if.then5653, %if.then5602, %if.then5558, %if.then5521, %if.then5467, %if.then5445, %if.then5401, %sw.bb5148, %sw.bb5137, %if.end4876, %if.end4689, %if.then4464, %swap_tree_comparison.exit10416, %if.then4409, %if.then4275, %if.then4253, %if.then4221, %if.then4200, %if.then4186, %if.then4172, %if.then4028, %if.end4023, %if.then3925, %if.then3844, %if.then3738, %if.then3712, %if.then3695, %if.then3665, %if.then3646, %if.then3630, %if.then3612, %if.then3583, %if.then3536, %if.then3516, %if.then3453, %if.then3334, %if.then3314, %if.then3278, %if.then3250, %if.then3230, %if.then3211, %if.then3155, %if.then3138, %if.then3099, %if.then3077, %if.then3045, %if.then3005, %if.then2985, %if.end2953, %if.else2949, %if.then2946, %if.then2841, %if.then2689, %if.then2535, %if.then2288, %if.then2173, %if.then2154, %if.then1909, %if.then1896, %if.then1883, %if.then1829, %if.then1805, %if.then1785, %if.then1769, %if.then1760, %if.then1744, %if.then1606, %if.then1570, %sw.bb1485, %if.then1460, %if.then1437, %if.then1418, %if.then1359, %if.then1279, %if.then1255, %if.then1201, %sw.bb902, %if.then846, %if.then786, %if.then777, %if.then719, %if.then690, %if.then460
  %retval.0 = phi %union.tree_node* [ %call469, %if.then460 ], [ %call696, %if.then690 ], [ %expr, %if.end7710 ], [ %call7601, %if.then7595 ], [ %call7648, %if.then7642 ], [ %call7662, %if.then7656 ], [ %921, %if.then7568 ], [ %call7504, %if.then7503 ], [ %917, %if.then7527 ], [ %call7560, %if.then7544 ], [ %906, %if.then7456 ], [ %call7489, %if.then7473 ], [ %call7422, %if.then7421 ], [ %call7416, %if.then7415 ], [ %call7418, %if.end7417 ], [ %call4417, %if.then4409 ], [ %call4444, %swap_tree_comparison.exit10416 ], [ %call4469, %if.then4464 ], [ %call4702, %if.end4689 ], [ %call5475, %if.then5467 ], [ %call5526, %if.then5521 ], [ %call5559, %if.then5558 ], [ %call5676, %if.then5653 ], [ %call5719, %if.then5696 ], [ %call5815, %if.then5814 ], [ %call5845, %if.then5841 ], [ %call5887, %if.then5874 ], [ %call5955, %if.then5936 ], [ %cond6243, %optimize_bit_field_compare.exit ], [ %call6315, %if.then6287 ], [ %call6596, %if.then6595 ], [ %call6402, %if.then6397 ], [ %call6203, %if.then6202 ], [ %call6205, %if.else6204 ], [ %call5794, %if.then5774 ], [ %call5612, %if.then5602 ], [ %call5450, %if.then5445 ], [ %call5406, %if.then5401 ], [ %call5158, %sw.bb5148 ], [ %call5147, %sw.bb5137 ], [ %call4889, %if.end4876 ], [ %call4258, %if.then4253 ], [ %call4180, %if.then4172 ], [ %call4194, %if.then4186 ], [ %call4208, %if.then4200 ], [ %call4229, %if.then4221 ], [ %call4276, %if.then4275 ], [ %call4029, %if.then4028 ], [ %call4024, %if.end4023 ], [ %call2948, %if.then2946 ], [ %call2952, %if.else2949 ], [ %call2956, %if.end2953 ], [ %call3860, %if.then3844 ], [ %389, %if.then3925 ], [ %call3739, %if.then3738 ], [ %call3697, %if.then3695 ], [ %call3713, %if.then3712 ], [ %call3591, %if.then3583 ], [ %call3614, %if.then3612 ], [ %call3633, %if.then3630 ], [ %call3655, %if.then3646 ], [ %call3674, %if.then3665 ], [ %call3457, %if.then3453 ], [ %call3520, %if.then3516 ], [ %call3545, %if.then3536 ], [ %call3336, %if.then3334 ], [ %call3323, %if.then3314 ], [ %call2545, %if.then2535 ], [ %call2696, %if.then2689 ], [ %call2848, %if.then2841 ], [ %call3163, %if.then3155 ], [ %call3281, %if.then3278 ], [ %call3216, %if.then3211 ], [ %call3235, %if.then3230 ], [ %call3251, %if.then3250 ], [ %call2990, %if.then2985 ], [ %call3016, %if.then3005 ], [ %call3139, %if.then3138 ], [ %call3101, %if.then3099 ], [ %call3090, %if.then3077 ], [ %call3047, %if.then3045 ], [ %call1901, %if.then1896 ], [ %call1914, %if.then1909 ], [ %call2158, %if.then2154 ], [ %call2177, %if.then2173 ], [ %call2292, %if.then2288 ], [ %194, %if.then1883 ], [ %call1761, %if.then1760 ], [ %call1777, %if.then1769 ], [ %call1790, %if.then1785 ], [ %call1821, %if.then1805 ], [ %190, %if.then1829 ], [ %call1748, %if.then1744 ], [ %162, %if.then1570 ], [ %call1613, %if.then1606 ], [ %expr, %sw.bb1485 ], [ %call1467, %if.then1460 ], [ %call1208, %if.then1201 ], [ %expr, %if.then1437 ], [ %call1431, %if.then1418 ], [ %call1366, %if.then1359 ], [ %call1286, %if.then1279 ], [ %call1262, %if.then1255 ], [ %call903, %sw.bb902 ], [ %call728, %if.then719 ], [ %call795, %if.then786 ], [ %call847, %if.then846 ], [ %call778, %if.then777 ], [ %expr, %entry ], [ %expr, %land.lhs.true ], [ %expr, %if.end ], [ %call445, %if.then444 ], [ %call441, %cond.end ], [ %call492, %land.lhs.true643 ], [ %call678, %if.then653 ], [ %call492, %land.lhs.true528 ], [ %call492, %land.lhs.true518 ], [ %call492, %land.lhs.true508 ], [ %call492, %land.lhs.true501 ], [ %call492, %if.then477 ], [ %76, %sw.bb904 ], [ %expr, %sw.bb1450 ], [ %156, %if.then1482 ], [ %expr, %if.then1476 ], [ %expr, %sw.bb1469 ], [ %call1509, %land.end1524 ], [ %call1560, %if.then1558 ], [ %expr, %lor.lhs.false1604 ], [ %expr, %land.lhs.true1595 ], [ %expr, %if.then1495 ], [ %expr, %if.else1563 ], [ %arg0.5, %if.then1626 ], [ %arg0.5, %land.lhs.true1652 ], [ %arg0.5, %if.else1634 ], [ %call1673, %neg_double.exit11055 ], [ %call1726, %if.then1722 ], [ %expr, %if.then1717 ], [ %expr, %if.then1619 ], [ %expr, %if.else1730 ], [ %expr, %if.else1762 ], [ %call1848, %if.then1840 ], [ %expr, %if.else1876 ], [ %call2975, %if.then2972 ], [ %call2961, %if.then2965 ], [ %expr, %if.end2962 ], [ %call3296, %if.end3295 ], [ %call3395, %if.end3394 ], [ %expr, %if.end3682 ], [ %expr, %if.end3720 ], [ %expr, %land.lhs.true3754 ], [ %expr, %if.then3769 ], [ %expr, %sw.bb4014 ], [ %expr, %truth_andor ], [ %retval.0.i11120, %fold_range_test.exit ], [ %expr.call4260, %if.end4259 ], [ %expr, %if.end4358 ], [ %t.6, %if.end6576 ], [ %t1.5, %if.end6586 ], [ %t.9, %land.lhs.true7386 ], [ %t.9, %land.lhs.true7373 ], [ %t.9, %land.lhs.true7367 ], [ %t.9, %if.end7354 ], [ %t.9, %land.lhs.true7376 ], [ %t.9, %land.lhs.true7360 ], [ %expr, %sw.bb7402 ], [ %expr, %sw.bb7419 ], [ %expr, %sw.bb7424 ], [ %expr, %if.else7434 ], [ %expr, %if.else7505 ], [ %expr, %if.end7649 ], [ %expr, %if.end7602 ], [ %call7706, %if.then7703 ], [ %expr, %if.end901 ], [ %call.i11088, %if.end.i11095 ], [ %call1942, %if.then1941 ], [ %call1942, %if.then1941 ], [ %call1942, %if.then1941 ], [ %call1942, %if.then1941 ], [ %call1942, %if.then1941 ], [ %call.i11074, %if.end.i11081 ], [ %call2301, %if.then2300 ], [ %call2301, %if.then2300 ], [ %call2301, %if.then2300 ], [ %call2301, %if.then2300 ], [ %call2301, %if.then2300 ], [ %call.i11060, %if.end.i11067 ], [ %call2323, %if.then2322 ], [ %call2323, %if.then2322 ], [ %call2323, %if.then2322 ], [ %call2323, %if.then2322 ], [ %call2323, %if.then2322 ], [ %call.i11022, %if.end.i11029 ], [ %call3052, %if.then3051 ], [ %call3052, %if.then3051 ], [ %call3052, %if.then3051 ], [ %call3052, %if.then3051 ], [ %call3052, %if.then3051 ], [ %call.i11008, %if.end.i11015 ], [ %call3106, %if.then3105 ], [ %call3106, %if.then3105 ], [ %call3106, %if.then3105 ], [ %call3106, %if.then3105 ], [ %call3106, %if.then3105 ], [ %call1.i10987, %if.then.i10988 ], [ %call.i.i10994, %if.end.i.i11001 ], [ %call.i10982, %if.end.i10992 ], [ %call.i10982, %if.end.i10992 ], [ %call.i10982, %if.end.i10992 ], [ %call.i10982, %if.end.i10992 ], [ %call.i10982, %if.end.i10992 ], [ %call.i10972, %if.end.i10979 ], [ %call3196, %if.then3195 ], [ %call3196, %if.then3195 ], [ %call3196, %if.then3195 ], [ %call3196, %if.then3195 ], [ %call3196, %if.then3195 ], [ %call1.i10951, %if.then.i10952 ], [ %call.i.i10958, %if.end.i.i10965 ], [ %call.i10946, %if.end.i10956 ], [ %call.i10946, %if.end.i10956 ], [ %call.i10946, %if.end.i10956 ], [ %call.i10946, %if.end.i10956 ], [ %call.i10946, %if.end.i10956 ], [ %call.i10936, %if.end.i10943 ], [ %call3264, %if.then3263 ], [ %call3264, %if.then3263 ], [ %call3264, %if.then3263 ], [ %call3264, %if.then3263 ], [ %call3264, %if.then3263 ], [ %call1.i10915, %if.then.i10916 ], [ %call.i.i10922, %if.end.i.i10929 ], [ %call.i10910, %if.end.i10920 ], [ %call.i10910, %if.end.i10920 ], [ %call.i10910, %if.end.i10920 ], [ %call.i10910, %if.end.i10920 ], [ %call.i10910, %if.end.i10920 ], [ %call.i10900, %if.end.i10907 ], [ %call3293, %if.then3292 ], [ %call3293, %if.then3292 ], [ %call3293, %if.then3292 ], [ %call3293, %if.then3292 ], [ %call3293, %if.then3292 ], [ %call.i10886, %if.end.i10893 ], [ %call3329, %if.then3328 ], [ %call3329, %if.then3328 ], [ %call3329, %if.then3328 ], [ %call3329, %if.then3328 ], [ %call3329, %if.then3328 ], [ %call.i10872, %if.end.i10879 ], [ %call3387, %if.then3386 ], [ %call3387, %if.then3386 ], [ %call3387, %if.then3386 ], [ %call3387, %if.then3386 ], [ %call3387, %if.then3386 ], [ %call1.i10802, %if.then.i10803 ], [ %call.i.i10809, %if.end.i.i10816 ], [ %call.i10797, %if.end.i10807 ], [ %call.i10797, %if.end.i10807 ], [ %call.i10797, %if.end.i10807 ], [ %call.i10797, %if.end.i10807 ], [ %call.i10797, %if.end.i10807 ], [ %call.i10787, %if.end.i10794 ], [ %call3551, %if.then3550 ], [ %call3551, %if.then3550 ], [ %call3551, %if.then3550 ], [ %call3551, %if.then3550 ], [ %call3551, %if.then3550 ], [ %call1.i10766, %if.then.i10767 ], [ %call.i.i10773, %if.end.i.i10780 ], [ %call.i10761, %if.end.i10771 ], [ %call.i10761, %if.end.i10771 ], [ %call.i10761, %if.end.i10771 ], [ %call.i10761, %if.end.i10771 ], [ %call.i10761, %if.end.i10771 ], [ %call.i10751, %if.end.i10758 ], [ %call3596, %if.then3595 ], [ %call3596, %if.then3595 ], [ %call3596, %if.then3595 ], [ %call3596, %if.then3595 ], [ %call3596, %if.then3595 ], [ %call.i10737, %if.end.i10744 ], [ %call3680, %if.then3679 ], [ %call3680, %if.then3679 ], [ %call3680, %if.then3679 ], [ %call3680, %if.then3679 ], [ %call3680, %if.then3679 ], [ %call1.i10716, %if.then.i10717 ], [ %call.i.i10723, %if.end.i.i10730 ], [ %call.i10711, %if.end.i10721 ], [ %call.i10711, %if.end.i10721 ], [ %call.i10711, %if.end.i10721 ], [ %call.i10711, %if.end.i10721 ], [ %call.i10711, %if.end.i10721 ], [ %call.i10701, %if.end.i10708 ], [ %call3745, %if.then3744 ], [ %call3745, %if.then3744 ], [ %call3745, %if.then3744 ], [ %call3745, %if.then3744 ], [ %call3745, %if.then3744 ], [ %call1.i10680, %if.then.i10681 ], [ %call.i.i10687, %if.end.i.i10694 ], [ %call.i10675, %if.end.i10685 ], [ %call.i10675, %if.end.i10685 ], [ %call.i10675, %if.end.i10685 ], [ %call.i10675, %if.end.i10685 ], [ %call.i10675, %if.end.i10685 ], [ %call1.i10658, %if.then.i10659 ], [ %call.i.i10665, %if.end.i.i10672 ], [ %call.i10653, %if.end.i10663 ], [ %call.i10653, %if.end.i10663 ], [ %call.i10653, %if.end.i10663 ], [ %call.i10653, %if.end.i10663 ], [ %call.i10653, %if.end.i10663 ], [ %call1.i10636, %if.then.i10637 ], [ %call.i.i10643, %if.end.i.i10650 ], [ %call.i10631, %if.end.i10641 ], [ %call.i10631, %if.end.i10641 ], [ %call.i10631, %if.end.i10641 ], [ %call.i10631, %if.end.i10641 ], [ %call.i10631, %if.end.i10641 ], [ %call1.i10614, %if.then.i10615 ], [ %call.i.i10621, %if.end.i.i10628 ], [ %call.i10609, %if.end.i10619 ], [ %call.i10609, %if.end.i10619 ], [ %call.i10609, %if.end.i10619 ], [ %call.i10609, %if.end.i10619 ], [ %call.i10609, %if.end.i10619 ], [ %call.i10599, %if.end.i10606 ], [ %call4042, %if.then4041 ], [ %call4042, %if.then4041 ], [ %call4042, %if.then4041 ], [ %call4042, %if.then4041 ], [ %call4042, %if.then4041 ], [ %call.i10585, %if.end.i10592 ], [ %call4065, %if.then4064 ], [ %call4065, %if.then4064 ], [ %call4065, %if.then4064 ], [ %call4065, %if.then4064 ], [ %call4065, %if.then4064 ], [ %call1.i10564, %if.then.i10565 ], [ %call.i.i10571, %if.end.i.i10578 ], [ %call.i10559, %if.end.i10569 ], [ %call.i10559, %if.end.i10569 ], [ %call.i10559, %if.end.i10569 ], [ %call.i10559, %if.end.i10569 ], [ %call.i10559, %if.end.i10569 ], [ %call1.i10542, %if.then.i10543 ], [ %call.i.i10549, %if.end.i.i10556 ], [ %call.i10537, %if.end.i10547 ], [ %call.i10537, %if.end.i10547 ], [ %call.i10537, %if.end.i10547 ], [ %call.i10537, %if.end.i10547 ], [ %call.i10537, %if.end.i10547 ], [ %call.i10527, %if.end.i10534 ], [ %call4289, %if.then4288 ], [ %call4289, %if.then4288 ], [ %call4289, %if.then4288 ], [ %call4289, %if.then4288 ], [ %call4289, %if.then4288 ], [ %call.i10513, %if.end.i10520 ], [ %call4312, %if.then4311 ], [ %call4312, %if.then4311 ], [ %call4312, %if.then4311 ], [ %call4312, %if.then4311 ], [ %call4312, %if.then4311 ], [ %call1.i10492, %if.then.i10493 ], [ %call.i.i10499, %if.end.i.i10506 ], [ %call.i10487, %if.end.i10497 ], [ %call.i10487, %if.end.i10497 ], [ %call.i10487, %if.end.i10497 ], [ %call.i10487, %if.end.i10497 ], [ %call.i10487, %if.end.i10497 ], [ %call1.i10470, %if.then.i10471 ], [ %call.i.i10477, %if.end.i.i10484 ], [ %call.i10465, %if.end.i10475 ], [ %call.i10465, %if.end.i10475 ], [ %call.i10465, %if.end.i10475 ], [ %call.i10465, %if.end.i10475 ], [ %call.i10465, %if.end.i10475 ], [ %call.i10455, %if.end.i10462 ], [ %call4343, %if.then4342 ], [ %call4343, %if.then4342 ], [ %call4343, %if.then4342 ], [ %call4343, %if.then4342 ], [ %call4343, %if.then4342 ], [ %call.i10441, %if.end.i10448 ], [ %call4349, %if.then4348 ], [ %call4349, %if.then4348 ], [ %call4349, %if.then4348 ], [ %call4349, %if.then4348 ], [ %call4349, %if.then4348 ], [ %call.i10427, %if.end.i10434 ], [ %call4356, %if.then4354 ], [ %call4356, %if.then4354 ], [ %call4356, %if.then4354 ], [ %call4356, %if.then4354 ], [ %call4356, %if.then4354 ], [ %call.i10420, %if.end.i10421 ], [ %call4363, %if.then4361 ], [ %call4363, %if.then4361 ], [ %call4363, %if.then4361 ], [ %call4363, %if.then4361 ], [ %call4363, %if.then4361 ], [ %call1.i10386, %if.then.i10387 ], [ %call.i.i10393, %if.end.i.i10400 ], [ %call.i10381, %if.end.i10391 ], [ %call.i10381, %if.end.i10391 ], [ %call.i10381, %if.end.i10391 ], [ %call.i10381, %if.end.i10391 ], [ %call.i10381, %if.end.i10391 ], [ %call1.i10363, %if.then.i10364 ], [ %call.i.i10370, %if.end.i.i10377 ], [ %call.i10358, %if.end.i10368 ], [ %call.i10358, %if.end.i10368 ], [ %call.i10358, %if.end.i10368 ], [ %call.i10358, %if.end.i10368 ], [ %call.i10358, %if.end.i10368 ], [ %call1.i10340, %if.then.i10341 ], [ %call.i.i10347, %if.end.i.i10354 ], [ %call.i10335, %if.end.i10345 ], [ %call.i10335, %if.end.i10345 ], [ %call.i10335, %if.end.i10345 ], [ %call.i10335, %if.end.i10345 ], [ %call.i10335, %if.end.i10345 ], [ %call1.i10318, %if.then.i10319 ], [ %call.i.i10325, %if.end.i.i10332 ], [ %call.i10313, %if.end.i10323 ], [ %call.i10313, %if.end.i10323 ], [ %call.i10313, %if.end.i10323 ], [ %call.i10313, %if.end.i10323 ], [ %call.i10313, %if.end.i10323 ], [ %call1.i10296, %if.then.i10297 ], [ %call.i.i10303, %if.end.i.i10310 ], [ %call.i10291, %if.end.i10301 ], [ %call.i10291, %if.end.i10301 ], [ %call.i10291, %if.end.i10301 ], [ %call.i10291, %if.end.i10301 ], [ %call.i10291, %if.end.i10301 ], [ %call1.i10274, %if.then.i10275 ], [ %call.i.i10281, %if.end.i.i10288 ], [ %call.i10269, %if.end.i10279 ], [ %call.i10269, %if.end.i10279 ], [ %call.i10269, %if.end.i10279 ], [ %call.i10269, %if.end.i10279 ], [ %call.i10269, %if.end.i10279 ], [ %call1.i10252, %if.then.i10253 ], [ %call.i.i10259, %if.end.i.i10266 ], [ %call.i10247, %if.end.i10257 ], [ %call.i10247, %if.end.i10257 ], [ %call.i10247, %if.end.i10257 ], [ %call.i10247, %if.end.i10257 ], [ %call.i10247, %if.end.i10257 ], [ %call1.i10230, %if.then.i10231 ], [ %call.i.i10237, %if.end.i.i10244 ], [ %call.i10225, %if.end.i10235 ], [ %call.i10225, %if.end.i10235 ], [ %call.i10225, %if.end.i10235 ], [ %call.i10225, %if.end.i10235 ], [ %call.i10225, %if.end.i10235 ], [ %call1.i10208, %if.then.i10209 ], [ %call.i.i10215, %if.end.i.i10222 ], [ %call.i10203, %if.end.i10213 ], [ %call.i10203, %if.end.i10213 ], [ %call.i10203, %if.end.i10213 ], [ %call.i10203, %if.end.i10213 ], [ %call.i10203, %if.end.i10213 ], [ %call1.i10186, %if.then.i10187 ], [ %call.i.i10193, %if.end.i.i10200 ], [ %call.i10181, %if.end.i10191 ], [ %call.i10181, %if.end.i10191 ], [ %call.i10181, %if.end.i10191 ], [ %call.i10181, %if.end.i10191 ], [ %call.i10181, %if.end.i10191 ], [ %631, %if.then.i10168 ], [ %call.i10174, %if.then2.i10175 ], [ %call9.i10176, %if.else8.i10178 ], [ %636, %if.then.i10162 ], [ %call.i10165, %if.then2.i ], [ %call9.i, %if.else8.i ], [ %call1.i10145, %if.then.i10146 ], [ %call.i.i10152, %if.end.i.i10159 ], [ %call.i10140, %if.end.i10150 ], [ %call.i10140, %if.end.i10150 ], [ %call.i10140, %if.end.i10150 ], [ %call.i10140, %if.end.i10150 ], [ %call.i10140, %if.end.i10150 ], [ %call1.i10123, %if.then.i10124 ], [ %call.i.i10130, %if.end.i.i10137 ], [ %call.i10118, %if.end.i10128 ], [ %call.i10118, %if.end.i10128 ], [ %call.i10118, %if.end.i10128 ], [ %call.i10118, %if.end.i10128 ], [ %call.i10118, %if.end.i10128 ], [ %763, %if.then6605 ], [ %call.i.i10101, %if.end.i.i10108 ], [ %763, %if.then.i10099 ], [ %763, %if.then.i10099 ], [ %763, %if.then.i10099 ], [ %763, %if.then.i10099 ], [ %763, %if.then.i10099 ], [ %call1.i10091, %if.then.i10092 ], [ %call.i10086, %if.end.i10093 ], [ %call.i.i.i, %if.end.i.i.i ], [ %call.i10086, %if.then.i.i ], [ %call.i10086, %if.then.i.i ], [ %call.i10086, %if.then.i.i ], [ %call.i10086, %if.then.i.i ], [ %call.i10086, %if.then.i.i ], [ %call6933, %sw.bb6925 ], [ %call.i.i10076, %if.end.i.i10083 ], [ %call6933, %if.then.i10074 ], [ %call6933, %if.then.i10074 ], [ %call6933, %if.then.i10074 ], [ %call6933, %if.then.i10074 ], [ %call6933, %if.then.i10074 ], [ %call6936, %sw.bb6935 ], [ %call.i.i10060, %if.end.i.i10067 ], [ %call6936, %if.then.i10058 ], [ %call6936, %if.then.i10058 ], [ %call6936, %if.then.i10058 ], [ %call6936, %if.then.i10058 ], [ %call6936, %if.then.i10058 ], [ %call6957, %if.end6952 ], [ %call.i.i10044, %if.end.i.i10051 ], [ %call6957, %if.then.i10042 ], [ %call6957, %if.then.i10042 ], [ %call6957, %if.then.i10042 ], [ %call6957, %if.then.i10042 ], [ %call6957, %if.then.i10042 ], [ %call6979, %if.end6973 ], [ %call.i.i10028, %if.end.i.i10035 ], [ %call6979, %if.then.i10026 ], [ %call6979, %if.then.i10026 ], [ %call6979, %if.then.i10026 ], [ %call6979, %if.then.i10026 ], [ %call6979, %if.then.i10026 ], [ %call6995, %if.then6994 ], [ %call.i.i10012, %if.end.i.i10019 ], [ %call6995, %if.then.i10010 ], [ %call6995, %if.then.i10010 ], [ %call6995, %if.then.i10010 ], [ %call6995, %if.then.i10010 ], [ %call6995, %if.then.i10010 ], [ %call7001, %if.then7000 ], [ %call.i.i9996, %if.end.i.i10003 ], [ %call7001, %if.then.i9994 ], [ %call7001, %if.then.i9994 ], [ %call7001, %if.then.i9994 ], [ %call7001, %if.then.i9994 ], [ %call7001, %if.then.i9994 ], [ %call7035, %sw.bb7034 ], [ %call.i.i9980, %if.end.i.i9987 ], [ %call7035, %if.then.i9978 ], [ %call7035, %if.then.i9978 ], [ %call7035, %if.then.i9978 ], [ %call7035, %if.then.i9978 ], [ %call7035, %if.then.i9978 ], [ %call7038, %sw.bb7037 ], [ %call.i.i9964, %if.end.i.i9971 ], [ %call7038, %if.then.i9962 ], [ %call7038, %if.then.i9962 ], [ %call7038, %if.then.i9962 ], [ %call7038, %if.then.i9962 ], [ %call7038, %if.then.i9962 ], [ %call7055, %sw.bb7040 ], [ %call.i.i9948, %if.end.i.i9955 ], [ %call7055, %if.then.i9946 ], [ %call7055, %if.then.i9946 ], [ %call7055, %if.then.i9946 ], [ %call7055, %if.then.i9946 ], [ %call7055, %if.then.i9946 ], [ %call7072, %sw.bb7057 ], [ %call.i.i9932, %if.end.i.i9939 ], [ %call7072, %if.then.i9930 ], [ %call7072, %if.then.i9930 ], [ %call7072, %if.then.i9930 ], [ %call7072, %if.then.i9930 ], [ %call7072, %if.then.i9930 ], [ %call7147, %if.then7145 ], [ %call.i.i9916, %if.end.i.i9923 ], [ %call7147, %if.then.i9914 ], [ %call7147, %if.then.i9914 ], [ %call7147, %if.then.i9914 ], [ %call7147, %if.then.i9914 ], [ %call7147, %if.then.i9914 ], [ %call7164, %if.then7162 ], [ %call.i.i9900, %if.end.i.i9907 ], [ %call7164, %if.then.i9898 ], [ %call7164, %if.then.i9898 ], [ %call7164, %if.then.i9898 ], [ %call7164, %if.then.i9898 ], [ %call7164, %if.then.i9898 ], [ %call7181, %if.then7179 ], [ %call.i.i9884, %if.end.i.i9891 ], [ %call7181, %if.then.i9882 ], [ %call7181, %if.then.i9882 ], [ %call7181, %if.then.i9882 ], [ %call7181, %if.then.i9882 ], [ %call7181, %if.then.i9882 ], [ %call7198, %if.then7196 ], [ %call.i.i9868, %if.end.i.i9875 ], [ %call7198, %if.then.i9866 ], [ %call7198, %if.then.i9866 ], [ %call7198, %if.then.i9866 ], [ %call7198, %if.then.i9866 ], [ %call7198, %if.then.i9866 ], [ %arg0.9, %if.then7352 ], [ %call.i.i9852, %if.end.i.i9859 ], [ %arg0.9, %if.then.i9850 ], [ %arg0.9, %if.then.i9850 ], [ %arg0.9, %if.then.i9850 ], [ %arg0.9, %if.then.i9850 ], [ %arg0.9, %if.then.i9850 ], [ %call7399, %if.then7395 ], [ %call.i.i9837, %if.end.i.i9844 ], [ %call7399, %if.then.i9835 ], [ %call7399, %if.then.i9835 ], [ %call7399, %if.then.i9835 ], [ %call7399, %if.then.i9835 ], [ %call7399, %if.then.i9835 ], [ %call1.i9814, %if.then.i9815 ], [ %call.i.i9821, %if.end.i.i9828 ], [ %call.i9809, %if.end.i9819 ], [ %call.i9809, %if.end.i9819 ], [ %call.i9809, %if.end.i9819 ], [ %call.i9809, %if.end.i9819 ], [ %call.i9809, %if.end.i9819 ], [ %call1.i, %if.then.i ], [ %call.i.i, %if.end.i.i ], [ %call.i, %if.end.i ], [ %call.i, %if.end.i ], [ %call.i, %if.end.i ], [ %call.i, %if.end.i ], [ %call.i, %if.end.i ], [ %t.6, %land.lhs.true6524 ], [ %t.addr.2.i, %if.end288.i ], [ %call61.i, %if.then59.i ], [ %call227.i, %if.then226.i ], [ %arg0.5, %if.then241.i ], [ %t.addr.1.i, %if.end253.i ], [ %expr, %if.then37.i ], [ %expr, %binary ], [ %t.6, %land.lhs.true6427 ], [ %t.6, %if.end6420 ]
  ret %union.tree_node* %retval.0
}

declare %union.tree_node* @build(i32, %union.tree_node*, ...) #3

; Function Attrs: nounwind uwtable
define %union.tree_node* @size_diffop(%union.tree_node* %arg0, %union.tree_node* %arg1) #0 {
entry:
  %type1 = getelementptr inbounds %union.tree_node* %arg0, i64 0, i32 0, i32 0, i32 1
  %0 = load %union.tree_node** %type1, align 8, !tbaa !11
  %code = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 6
  br i1 %cmp, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %entry
  %type3 = bitcast %union.tree_node* %0 to %struct.tree_type*
  %no_force_blk_flag = getelementptr inbounds %struct.tree_type* %type3, i64 0, i32 6
  %bf.load4 = load i32* %no_force_blk_flag, align 4
  %bf.clear5 = and i32 %bf.load4, 131072
  %tobool = icmp eq i32 %bf.clear5, 0
  br i1 %tobool, label %if.then, label %lor.lhs.false6

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %type8 = getelementptr inbounds %union.tree_node* %arg1, i64 0, i32 0, i32 0, i32 1
  %1 = load %union.tree_node** %type8, align 8, !tbaa !11
  %cmp9 = icmp eq %union.tree_node* %0, %1
  br i1 %cmp9, label %if.end, label %if.then

if.then:                                          ; preds = %lor.lhs.false6, %lor.lhs.false, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([13 x i8]* @.str, i64 0, i64 0), i32 2051, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.size_diffop, i64 0, i64 0)) #7
  unreachable

if.end:                                           ; preds = %lor.lhs.false6
  %bf.clear13 = and i32 %bf.load, 8192
  %tobool14 = icmp eq i32 %bf.clear13, 0
  br i1 %tobool14, label %if.then15, label %if.end16

if.then15:                                        ; preds = %if.end
  %call = tail call %union.tree_node* @size_binop(i32 60, %union.tree_node* %arg0, %union.tree_node* %arg1)
  br label %return

if.end16:                                         ; preds = %if.end
  %2 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 3), align 8, !tbaa !14
  %cmp17 = icmp eq %union.tree_node* %0, %2
  %3 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 5), align 8
  %cmp19 = icmp eq %union.tree_node* %0, %3
  %or.cond = or i1 %cmp17, %cmp19
  %.val = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 4), align 8
  %.val73 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 1), align 8
  %cond = select i1 %or.cond, %union.tree_node* %.val, %union.tree_node* %.val73
  %code21 = getelementptr inbounds %union.tree_node* %arg0, i64 0, i32 0, i32 0, i32 2
  %bf.load22 = load i32* %code21, align 8
  %bf.clear23 = and i32 %bf.load22, 255
  %cmp24 = icmp eq i32 %bf.clear23, 25
  br i1 %cmp24, label %lor.lhs.false25, label %if.then31

lor.lhs.false25:                                  ; preds = %if.end16
  %code27 = getelementptr inbounds %union.tree_node* %arg1, i64 0, i32 0, i32 0, i32 2
  %bf.load28 = load i32* %code27, align 8
  %bf.clear29 = and i32 %bf.load28, 255
  %cmp30 = icmp eq i32 %bf.clear29, 25
  br i1 %cmp30, label %if.end35, label %if.then31

if.then31:                                        ; preds = %lor.lhs.false25, %if.end16
  %call32 = tail call %union.tree_node* @convert(%union.tree_node* %cond, %union.tree_node* %arg0) #1
  %call33 = tail call %union.tree_node* @convert(%union.tree_node* %cond, %union.tree_node* %arg1) #1
  %call34 = tail call %union.tree_node* @size_binop(i32 60, %union.tree_node* %call32, %union.tree_node* %call33)
  br label %return

if.end35:                                         ; preds = %lor.lhs.false25
  %call36 = tail call i32 @tree_int_cst_equal(%union.tree_node* %arg0, %union.tree_node* %arg1) #1
  %tobool37 = icmp eq i32 %call36, 0
  br i1 %tobool37, label %if.else, label %if.then38

if.then38:                                        ; preds = %if.end35
  %4 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8, !tbaa !14
  %call39 = tail call %union.tree_node* @convert(%union.tree_node* %cond, %union.tree_node* %4) #1
  br label %return

if.else:                                          ; preds = %if.end35
  %call40 = tail call i32 @tree_int_cst_lt(%union.tree_node* %arg1, %union.tree_node* %arg0) #1
  %tobool41 = icmp eq i32 %call40, 0
  br i1 %tobool41, label %if.else45, label %if.then42

if.then42:                                        ; preds = %if.else
  %call43 = tail call %union.tree_node* @size_binop(i32 60, %union.tree_node* %arg0, %union.tree_node* %arg1)
  %call44 = tail call %union.tree_node* @convert(%union.tree_node* %cond, %union.tree_node* %call43) #1
  br label %return

if.else45:                                        ; preds = %if.else
  %5 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8, !tbaa !14
  %call46 = tail call %union.tree_node* @convert(%union.tree_node* %cond, %union.tree_node* %5) #1
  %call47 = tail call %union.tree_node* @size_binop(i32 60, %union.tree_node* %arg1, %union.tree_node* %arg0)
  %call48 = tail call %union.tree_node* @convert(%union.tree_node* %cond, %union.tree_node* %call47) #1
  %call49 = tail call %union.tree_node* @size_binop(i32 60, %union.tree_node* %call46, %union.tree_node* %call48)
  br label %return

return:                                           ; preds = %if.else45, %if.then42, %if.then38, %if.then31, %if.then15
  %retval.0 = phi %union.tree_node* [ %call34, %if.then31 ], [ %call39, %if.then38 ], [ %call44, %if.then42 ], [ %call49, %if.else45 ], [ %call, %if.then15 ]
  ret %union.tree_node* %retval.0
}

declare %union.tree_node* @convert(%union.tree_node*, %union.tree_node*) #3

declare i32 @tree_int_cst_equal(%union.tree_node*, %union.tree_node*) #3

declare i32 @tree_int_cst_lt(%union.tree_node*, %union.tree_node*) #3

; Function Attrs: nounwind uwtable
define %union.tree_node* @non_lvalue(%union.tree_node* %x) #0 {
entry:
  %code = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  switch i32 %bf.clear, label %if.end [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end:                                           ; preds = %entry
  %type = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 0, i32 1
  %0 = load %union.tree_node** %type, align 8, !tbaa !11
  %call = tail call %union.tree_node* @build1(i32 116, %union.tree_node* %0, %union.tree_node* %x) #1
  %bf.load26 = load i32* %code, align 8
  %bf.clear27 = and i32 %bf.load26, 512
  %constant_flag29 = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 0, i32 2
  %bf.load30 = load i32* %constant_flag29, align 8
  %bf.clear31 = and i32 %bf.load30, -513
  %bf.set = or i32 %bf.clear31, %bf.clear27
  store i32 %bf.set, i32* %constant_flag29, align 8
  br label %return

return:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %if.end
  %retval.0 = phi %union.tree_node* [ %call, %if.end ], [ %x, %entry ], [ %x, %entry ], [ %x, %entry ], [ %x, %entry ], [ %x, %entry ]
  ret %union.tree_node* %retval.0
}

declare %union.tree_node* @build1(i32, %union.tree_node*, %union.tree_node*) #3

; Function Attrs: nounwind uwtable
define %union.tree_node* @pedantic_non_lvalue(%union.tree_node* %x) #0 {
entry:
  %0 = load i32* @pedantic_lvalues, align 4, !tbaa !12
  %tobool = icmp eq i32 %0, 0
  br i1 %tobool, label %return, label %if.then

if.then:                                          ; preds = %entry
  %code.i = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 0, i32 2
  %bf.load.i = load i32* %code.i, align 8
  %bf.clear.i = and i32 %bf.load.i, 255
  switch i32 %bf.clear.i, label %if.end.i [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i:                                         ; preds = %if.then
  %type.i = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 0, i32 1
  %1 = load %union.tree_node** %type.i, align 8, !tbaa !11
  %call.i = tail call %union.tree_node* @build1(i32 116, %union.tree_node* %1, %union.tree_node* %x) #1
  %bf.load26.i = load i32* %code.i, align 8
  %bf.clear27.i = and i32 %bf.load26.i, 512
  %constant_flag29.i = getelementptr inbounds %union.tree_node* %call.i, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i = load i32* %constant_flag29.i, align 8
  %bf.clear31.i = and i32 %bf.load30.i, -513
  %bf.set.i = or i32 %bf.clear31.i, %bf.clear27.i
  store i32 %bf.set.i, i32* %constant_flag29.i, align 8
  br label %return

return:                                           ; preds = %if.end.i, %if.then, %if.then, %if.then, %if.then, %if.then, %entry
  %retval.0 = phi %union.tree_node* [ %x, %entry ], [ %call.i, %if.end.i ], [ %x, %if.then ], [ %x, %if.then ], [ %x, %if.then ], [ %x, %if.then ], [ %x, %if.then ]
  ret %union.tree_node* %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @operand_equal_p(%union.tree_node* %arg0, %union.tree_node* %arg1, i32 %only_const) #0 {
entry:
  %type703 = getelementptr inbounds %union.tree_node* %arg0, i64 0, i32 0, i32 0, i32 1
  %0 = load %union.tree_node** %type703, align 8, !tbaa !11
  %unsigned_flag704 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2
  %bf.load705 = load i32* %unsigned_flag704, align 8
  %type3706 = getelementptr inbounds %union.tree_node* %arg1, i64 0, i32 0, i32 0, i32 1
  %1 = load %union.tree_node** %type3706, align 8, !tbaa !11
  %unsigned_flag5707 = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 0, i32 2
  %bf.load6708 = load i32* %unsigned_flag5707, align 8
  %bf.lshr634709 = xor i32 %bf.load6708, %bf.load705
  %2 = and i32 %bf.lshr634709, 8192
  %cmp710 = icmp eq i32 %2, 0
  br i1 %cmp710, label %while.cond.preheader.lr.ph, label %return

while.cond.preheader.lr.ph:                       ; preds = %entry
  %3 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !14
  br label %while.cond.preheader

while.cond.preheader:                             ; preds = %while.cond.preheader.lr.ph, %tailrecurse.backedge
  %only_const.tr713 = phi i32 [ %only_const, %while.cond.preheader.lr.ph ], [ 0, %tailrecurse.backedge ]
  %arg1.tr712 = phi %union.tree_node* [ %arg1, %while.cond.preheader.lr.ph ], [ %arg1.tr.be, %tailrecurse.backedge ]
  %arg0.tr711 = phi %union.tree_node* [ %arg0, %while.cond.preheader.lr.ph ], [ %arg0.tr.be, %tailrecurse.backedge ]
  br label %while.cond

while.cond:                                       ; preds = %while.cond.preheader, %land.rhs
  %arg0.addr.0 = phi %union.tree_node* [ %4, %land.rhs ], [ %arg0.tr711, %while.cond.preheader ]
  %code = getelementptr inbounds %union.tree_node* %arg0.addr.0, i64 0, i32 0, i32 0, i32 2
  %bf.load10 = load i32* %code, align 8
  %bf.clear11 = and i32 %bf.load10, 255
  %bf.clear11.off = add i32 %bf.clear11, -114
  %switch = icmp ult i32 %bf.clear11.off, 3
  br i1 %switch, label %land.lhs.true, label %while.cond45

land.lhs.true:                                    ; preds = %while.cond
  %operands = getelementptr inbounds %union.tree_node* %arg0.addr.0, i64 0, i32 0, i32 2
  %arrayidx = bitcast i32* %operands to %union.tree_node**
  %4 = load %union.tree_node** %arrayidx, align 8, !tbaa !14
  %cmp24 = icmp eq %union.tree_node* %4, %3
  br i1 %cmp24, label %while.cond45, label %land.rhs

land.rhs:                                         ; preds = %land.lhs.true
  %type26 = getelementptr inbounds %union.tree_node* %arg0.addr.0, i64 0, i32 0, i32 0, i32 1
  %5 = load %union.tree_node** %type26, align 8, !tbaa !11
  %type27 = bitcast %union.tree_node* %5 to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type* %type27, i64 0, i32 6
  %bf.load28 = load i32* %mode, align 4
  %type35 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 0, i32 1
  %6 = load %union.tree_node** %type35, align 8, !tbaa !11
  %type36 = bitcast %union.tree_node* %6 to %struct.tree_type*
  %mode37 = getelementptr inbounds %struct.tree_type* %type36, i64 0, i32 6
  %bf.load38 = load i32* %mode37, align 4
  %bf.lshr29638 = xor i32 %bf.load38, %bf.load28
  %7 = and i32 %bf.lshr29638, 65024
  %cmp41 = icmp eq i32 %7, 0
  br i1 %cmp41, label %while.cond, label %while.cond45

while.cond45:                                     ; preds = %while.cond, %land.lhs.true, %land.rhs, %land.rhs68
  %arg1.addr.0 = phi %union.tree_node* [ %8, %land.rhs68 ], [ %arg1.tr712, %land.rhs ], [ %arg1.tr712, %land.lhs.true ], [ %arg1.tr712, %while.cond ]
  %code47 = getelementptr inbounds %union.tree_node* %arg1.addr.0, i64 0, i32 0, i32 0, i32 2
  %bf.load48 = load i32* %code47, align 8
  %bf.clear49 = and i32 %bf.load48, 255
  %bf.clear49.off = add i32 %bf.clear49, -114
  %switch643 = icmp ult i32 %bf.clear49.off, 3
  br i1 %switch643, label %land.lhs.true63, label %while.end92

land.lhs.true63:                                  ; preds = %while.cond45
  %operands65 = getelementptr inbounds %union.tree_node* %arg1.addr.0, i64 0, i32 0, i32 2
  %arrayidx66 = bitcast i32* %operands65 to %union.tree_node**
  %8 = load %union.tree_node** %arrayidx66, align 8, !tbaa !14
  %cmp67 = icmp eq %union.tree_node* %8, %3
  br i1 %cmp67, label %while.end92, label %land.rhs68

land.rhs68:                                       ; preds = %land.lhs.true63
  %type70 = getelementptr inbounds %union.tree_node* %arg1.addr.0, i64 0, i32 0, i32 0, i32 1
  %9 = load %union.tree_node** %type70, align 8, !tbaa !11
  %type71 = bitcast %union.tree_node* %9 to %struct.tree_type*
  %mode72 = getelementptr inbounds %struct.tree_type* %type71, i64 0, i32 6
  %bf.load73 = load i32* %mode72, align 4
  %type80 = getelementptr inbounds %union.tree_node* %8, i64 0, i32 0, i32 0, i32 1
  %10 = load %union.tree_node** %type80, align 8, !tbaa !11
  %type81 = bitcast %union.tree_node* %10 to %struct.tree_type*
  %mode82 = getelementptr inbounds %struct.tree_type* %type81, i64 0, i32 6
  %bf.load83 = load i32* %mode82, align 4
  %bf.lshr74637 = xor i32 %bf.load83, %bf.load73
  %11 = and i32 %bf.lshr74637, 65024
  %cmp86 = icmp eq i32 %11, 0
  br i1 %cmp86, label %while.cond45, label %while.end92

while.end92:                                      ; preds = %while.cond45, %land.lhs.true63, %land.rhs68
  %cmp101 = icmp eq i32 %bf.clear11, %bf.clear49
  br i1 %cmp101, label %lor.lhs.false102, label %return

lor.lhs.false102:                                 ; preds = %while.end92
  %type104 = getelementptr inbounds %union.tree_node* %arg0.addr.0, i64 0, i32 0, i32 0, i32 1
  %12 = load %union.tree_node** %type104, align 8, !tbaa !11
  %code106 = getelementptr inbounds %union.tree_node* %12, i64 0, i32 0, i32 0, i32 2
  %bf.load107 = load i32* %code106, align 8
  %bf.clear108 = and i32 %bf.load107, 255
  %cmp109 = icmp eq i32 %bf.clear108, 0
  br i1 %cmp109, label %return, label %lor.lhs.false110

lor.lhs.false110:                                 ; preds = %lor.lhs.false102
  %type112 = getelementptr inbounds %union.tree_node* %arg1.addr.0, i64 0, i32 0, i32 0, i32 1
  %13 = load %union.tree_node** %type112, align 8, !tbaa !11
  %code114 = getelementptr inbounds %union.tree_node* %13, i64 0, i32 0, i32 0, i32 2
  %bf.load115 = load i32* %code114, align 8
  %bf.clear116 = and i32 %bf.load115, 255
  %cmp117 = icmp eq i32 %bf.clear116, 0
  br i1 %cmp117, label %return, label %lor.lhs.false118

lor.lhs.false118:                                 ; preds = %lor.lhs.false110
  %type121 = bitcast %union.tree_node* %12 to %struct.tree_type*
  %mode122 = getelementptr inbounds %struct.tree_type* %type121, i64 0, i32 6
  %bf.load123 = load i32* %mode122, align 4
  %type128 = bitcast %union.tree_node* %13 to %struct.tree_type*
  %mode129 = getelementptr inbounds %struct.tree_type* %type128, i64 0, i32 6
  %bf.load130 = load i32* %mode129, align 4
  %bf.lshr124635 = xor i32 %bf.load130, %bf.load123
  %14 = and i32 %bf.lshr124635, 65024
  %cmp133 = icmp eq i32 %14, 0
  br i1 %cmp133, label %if.end135, label %return

if.end135:                                        ; preds = %lor.lhs.false118
  %cmp136 = icmp ne %union.tree_node* %arg0.addr.0, %arg1.addr.0
  %tobool = icmp ne i32 %only_const.tr713, 0
  %or.cond = or i1 %cmp136, %tobool
  br i1 %or.cond, label %if.end158, label %land.lhs.true138

land.lhs.true138:                                 ; preds = %if.end135
  %cmp143 = icmp eq i32 %bf.clear11, 118
  br i1 %cmp143, label %return, label %lor.lhs.false144

lor.lhs.false144:                                 ; preds = %land.lhs.true138
  %15 = or i32 %bf.load48, %bf.load10
  %16 = and i32 %15, 256
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %return, label %if.end158

if.end158:                                        ; preds = %lor.lhs.false144, %if.end135
  %18 = and i32 %bf.load10, %bf.load48
  %19 = and i32 %18, 512
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %if.end282, label %if.then171

if.then171:                                       ; preds = %if.end158
  switch i32 %bf.clear11, label %if.end282 [
    i32 25, label %sw.bb
    i32 26, label %sw.bb191
    i32 28, label %sw.bb213
    i32 27, label %sw.bb246
    i32 29, label %sw.bb259
    i32 121, label %tailrecurse.backedge
  ]

sw.bb:                                            ; preds = %if.then171
  %21 = or i32 %bf.load48, %bf.load10
  %22 = and i32 %21, 262144
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %land.rhs188, label %land.end190

land.rhs188:                                      ; preds = %sw.bb
  %call = tail call i32 @tree_int_cst_equal(%union.tree_node* %arg0.addr.0, %union.tree_node* %arg1.addr.0) #1
  %tobool189 = icmp ne i32 %call, 0
  br label %land.end190

land.end190:                                      ; preds = %sw.bb, %land.rhs188
  %24 = phi i1 [ false, %sw.bb ], [ %tobool189, %land.rhs188 ]
  %land.ext = zext i1 %24 to i32
  br label %return

sw.bb191:                                         ; preds = %if.then171
  %25 = or i32 %bf.load48, %bf.load10
  %26 = and i32 %25, 262144
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %land.rhs205, label %land.end211

land.rhs205:                                      ; preds = %sw.bb191
  %real_cst206 = getelementptr inbounds %union.tree_node* %arg0.addr.0, i64 0, i32 0, i32 2
  %28 = bitcast i32* %real_cst206 to i8*
  %real_cst208 = getelementptr inbounds %union.tree_node* %arg1.addr.0, i64 0, i32 0, i32 2
  %29 = bitcast i32* %real_cst208 to i8*
  %call209 = tail call i32 @memcmp(i8* %28, i8* %29, i64 24) #1
  %lnot = icmp eq i32 %call209, 0
  br label %land.end211

land.end211:                                      ; preds = %sw.bb191, %land.rhs205
  %30 = phi i1 [ false, %sw.bb191 ], [ %lnot, %land.rhs205 ]
  %land.ext212 = zext i1 %30 to i32
  br label %return

sw.bb213:                                         ; preds = %if.then171
  %31 = or i32 %bf.load48, %bf.load10
  %32 = and i32 %31, 262144
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %if.end228, label %return

if.end228:                                        ; preds = %sw.bb213
  %elements = getelementptr inbounds %union.tree_node* %arg0.addr.0, i64 0, i32 0, i32 2
  %34 = bitcast i32* %elements to %union.tree_node**
  %elements230 = getelementptr inbounds %union.tree_node* %arg1.addr.0, i64 0, i32 0, i32 2
  %35 = bitcast i32* %elements230 to %union.tree_node**
  %v2.0695 = load %union.tree_node** %35, align 8
  %v1.0696 = load %union.tree_node** %34, align 8
  %tobool232697 = icmp ne %union.tree_node* %v1.0696, null
  %tobool234698 = icmp ne %union.tree_node* %v2.0695, null
  %or.cond531699 = and i1 %tobool232697, %tobool234698
  br i1 %or.cond531699, label %while.body237, label %return

while.body237:                                    ; preds = %if.end228, %if.end241
  %v1.0701 = phi %union.tree_node* [ %v1.0, %if.end241 ], [ %v1.0696, %if.end228 ]
  %v2.0700 = phi %union.tree_node* [ %v2.0, %if.end241 ], [ %v2.0695, %if.end228 ]
  %call238 = tail call i32 @operand_equal_p(%union.tree_node* %v1.0701, %union.tree_node* %v2.0700, i32 %only_const.tr713)
  %tobool239 = icmp eq i32 %call238, 0
  br i1 %tobool239, label %return, label %if.end241

if.end241:                                        ; preds = %while.body237
  %chain = getelementptr inbounds %union.tree_node* %v1.0701, i64 0, i32 0, i32 0, i32 0
  %chain244 = getelementptr inbounds %union.tree_node* %v2.0700, i64 0, i32 0, i32 0, i32 0
  %v2.0 = load %union.tree_node** %chain244, align 8
  %v1.0 = load %union.tree_node** %chain, align 8
  %tobool232 = icmp ne %union.tree_node* %v1.0, null
  %tobool234 = icmp ne %union.tree_node* %v2.0, null
  %or.cond531 = and i1 %tobool232, %tobool234
  br i1 %or.cond531, label %while.body237, label %return

sw.bb246:                                         ; preds = %if.then171
  %real = getelementptr inbounds %union.tree_node* %arg0.addr.0, i64 0, i32 0, i32 2
  %36 = bitcast i32* %real to %union.tree_node**
  %37 = load %union.tree_node** %36, align 8, !tbaa !16
  %real248 = getelementptr inbounds %union.tree_node* %arg1.addr.0, i64 0, i32 0, i32 2
  %38 = bitcast i32* %real248 to %union.tree_node**
  %39 = load %union.tree_node** %38, align 8, !tbaa !16
  %call249 = tail call i32 @operand_equal_p(%union.tree_node* %37, %union.tree_node* %39, i32 %only_const.tr713)
  %tobool250 = icmp eq i32 %call249, 0
  br i1 %tobool250, label %land.end257, label %land.rhs251

land.rhs251:                                      ; preds = %sw.bb246
  %40 = getelementptr inbounds %union.tree_node* %arg0.addr.0, i64 0, i32 0, i32 4
  %41 = load %union.tree_node** %40, align 8, !tbaa !33
  %42 = getelementptr inbounds %union.tree_node* %arg1.addr.0, i64 0, i32 0, i32 4
  %43 = load %union.tree_node** %42, align 8, !tbaa !33
  %call255 = tail call i32 @operand_equal_p(%union.tree_node* %41, %union.tree_node* %43, i32 %only_const.tr713)
  %tobool256 = icmp ne i32 %call255, 0
  br label %land.end257

land.end257:                                      ; preds = %sw.bb246, %land.rhs251
  %44 = phi i1 [ false, %sw.bb246 ], [ %tobool256, %land.rhs251 ]
  %land.ext258 = zext i1 %44 to i32
  br label %return

sw.bb259:                                         ; preds = %if.then171
  %45 = getelementptr inbounds %union.tree_node* %arg0.addr.0, i64 0, i32 0, i32 2
  %46 = load i32* %45, align 4, !tbaa !37
  %47 = getelementptr inbounds %union.tree_node* %arg1.addr.0, i64 0, i32 0, i32 2
  %48 = load i32* %47, align 4, !tbaa !37
  %cmp262 = icmp eq i32 %46, %48
  br i1 %cmp262, label %land.rhs263, label %land.end272

land.rhs263:                                      ; preds = %sw.bb259
  %pointer = getelementptr inbounds %union.tree_node* %arg0.addr.0, i64 0, i32 0, i32 4
  %49 = load %union.tree_node** %pointer, align 8
  %50 = bitcast %union.tree_node* %49 to i8*
  %pointer266 = getelementptr inbounds %union.tree_node* %arg1.addr.0, i64 0, i32 0, i32 4
  %51 = load %union.tree_node** %pointer266, align 8
  %52 = bitcast %union.tree_node* %51 to i8*
  %conv = sext i32 %46 to i64
  %call269 = tail call i32 @memcmp(i8* %50, i8* %52, i64 %conv) #1
  %lnot271 = icmp eq i32 %call269, 0
  br label %land.end272

land.end272:                                      ; preds = %land.rhs263, %sw.bb259
  %53 = phi i1 [ false, %sw.bb259 ], [ %lnot271, %land.rhs263 ]
  %land.ext273 = zext i1 %53 to i32
  br label %return

tailrecurse.backedge:                             ; preds = %if.end449, %land.lhs.true306, %sw.bb292, %if.then171
  %arg1.tr.be.in.in = getelementptr inbounds %union.tree_node* %arg1.addr.0, i64 0, i32 0, i32 2
  %arg0.tr.be.in.in = getelementptr inbounds %union.tree_node* %arg0.addr.0, i64 0, i32 0, i32 2
  %arg1.tr.be.in = bitcast i32* %arg1.tr.be.in.in to %union.tree_node**
  %arg0.tr.be.in = bitcast i32* %arg0.tr.be.in.in to %union.tree_node**
  %arg1.tr.be = load %union.tree_node** %arg1.tr.be.in, align 8
  %arg0.tr.be = load %union.tree_node** %arg0.tr.be.in, align 8
  %type = getelementptr inbounds %union.tree_node* %arg0.tr.be, i64 0, i32 0, i32 0, i32 1
  %54 = load %union.tree_node** %type, align 8, !tbaa !11
  %unsigned_flag = getelementptr inbounds %union.tree_node* %54, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %unsigned_flag, align 8
  %type3 = getelementptr inbounds %union.tree_node* %arg1.tr.be, i64 0, i32 0, i32 0, i32 1
  %55 = load %union.tree_node** %type3, align 8, !tbaa !11
  %unsigned_flag5 = getelementptr inbounds %union.tree_node* %55, i64 0, i32 0, i32 0, i32 2
  %bf.load6 = load i32* %unsigned_flag5, align 8
  %bf.lshr634 = xor i32 %bf.load6, %bf.load
  %56 = and i32 %bf.lshr634, 8192
  %cmp = icmp eq i32 %56, 0
  br i1 %cmp, label %while.cond.preheader, label %return

if.end282:                                        ; preds = %if.end158, %if.then171
  br i1 %tobool, label %return, label %if.end285

if.end285:                                        ; preds = %if.end282
  %idxprom633 = zext i32 %bf.clear11 to i64
  %arrayidx290 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom633
  %57 = load i8* %arrayidx290, align 1, !tbaa !15
  %conv291 = sext i8 %57 to i32
  switch i32 %conv291, label %return [
    i32 49, label %sw.bb292
    i32 60, label %sw.bb332
    i32 50, label %sw.bb332
    i32 114, label %sw.bb434
    i32 101, label %sw.bb512
  ]

sw.bb292:                                         ; preds = %if.end285
  %58 = and i32 %bf.load10, 254
  %switch644 = icmp eq i32 %58, 114
  br i1 %switch644, label %land.lhs.true306, label %tailrecurse.backedge

land.lhs.true306:                                 ; preds = %sw.bb292
  %bf.lshr312636 = xor i32 %bf.load115, %bf.load107
  %59 = and i32 %bf.lshr312636, 8192
  %cmp321 = icmp eq i32 %59, 0
  br i1 %cmp321, label %tailrecurse.backedge, label %return

sw.bb332:                                         ; preds = %if.end285, %if.end285
  %.in852.in = getelementptr inbounds %union.tree_node* %arg0.addr.0, i64 0, i32 0, i32 2
  %.in852 = bitcast i32* %.in852.in to %union.tree_node**
  %60 = load %union.tree_node** %.in852, align 8
  %operands334 = getelementptr inbounds %union.tree_node* %arg0.addr.0, i64 0, i32 0, i32 2
  %arrayidx335 = bitcast i32* %operands334 to %union.tree_node**
  %operands337 = getelementptr inbounds %union.tree_node* %arg1.addr.0, i64 0, i32 0, i32 2
  %arrayidx338 = bitcast i32* %operands337 to %union.tree_node**
  %61 = load %union.tree_node** %arrayidx338, align 8, !tbaa !14
  %call339 = tail call i32 @operand_equal_p(%union.tree_node* %60, %union.tree_node* %61, i32 0)
  %tobool340 = icmp eq i32 %call339, 0
  br i1 %tobool340, label %if.end351, label %land.lhs.true341

land.lhs.true341:                                 ; preds = %sw.bb332
  %arrayidx344 = getelementptr inbounds i32* %operands334, i64 2
  %62 = bitcast i32* %arrayidx344 to %union.tree_node**
  %63 = load %union.tree_node** %62, align 8, !tbaa !14
  %arrayidx347 = getelementptr inbounds i32* %operands337, i64 2
  %64 = bitcast i32* %arrayidx347 to %union.tree_node**
  %65 = load %union.tree_node** %64, align 8, !tbaa !14
  %call348 = tail call i32 @operand_equal_p(%union.tree_node* %63, %union.tree_node* %65, i32 0)
  %tobool349 = icmp eq i32 %call348, 0
  br i1 %tobool349, label %if.end351, label %return

if.end351:                                        ; preds = %land.lhs.true341, %sw.bb332
  %bf.load354 = load i32* %code, align 8
  %bf.clear355 = and i32 %bf.load354, 255
  switch i32 %bf.clear355, label %land.end432 [
    i32 59, label %land.lhs.true414
    i32 61, label %land.lhs.true414
    i32 78, label %land.lhs.true414
    i32 79, label %land.lhs.true414
    i32 86, label %land.lhs.true414
    i32 87, label %land.lhs.true414
    i32 88, label %land.lhs.true414
    i32 102, label %land.lhs.true414
    i32 101, label %land.lhs.true414
  ]

land.lhs.true414:                                 ; preds = %if.end351, %if.end351, %if.end351, %if.end351, %if.end351, %if.end351, %if.end351, %if.end351, %if.end351
  %66 = load %union.tree_node** %arrayidx335, align 8, !tbaa !14
  %arrayidx420 = getelementptr inbounds i32* %operands337, i64 2
  %67 = bitcast i32* %arrayidx420 to %union.tree_node**
  %68 = load %union.tree_node** %67, align 8, !tbaa !14
  %call421 = tail call i32 @operand_equal_p(%union.tree_node* %66, %union.tree_node* %68, i32 0)
  %tobool422 = icmp eq i32 %call421, 0
  br i1 %tobool422, label %land.end432, label %land.rhs423

land.rhs423:                                      ; preds = %land.lhs.true414
  %arrayidx426 = getelementptr inbounds i32* %operands334, i64 2
  %69 = bitcast i32* %arrayidx426 to %union.tree_node**
  %70 = load %union.tree_node** %69, align 8, !tbaa !14
  %71 = load %union.tree_node** %arrayidx338, align 8, !tbaa !14
  %call430 = tail call i32 @operand_equal_p(%union.tree_node* %70, %union.tree_node* %71, i32 0)
  %tobool431 = icmp ne i32 %call430, 0
  br label %land.end432

land.end432:                                      ; preds = %if.end351, %land.lhs.true414, %land.rhs423
  %72 = phi i1 [ false, %land.lhs.true414 ], [ %tobool431, %land.rhs423 ], [ false, %if.end351 ]
  %land.ext433 = zext i1 %72 to i32
  br label %return

sw.bb434:                                         ; preds = %if.end285
  %73 = or i32 %bf.load10, %bf.load48
  %74 = and i32 %73, 256
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %if.end449, label %return

if.end449:                                        ; preds = %sw.bb434
  switch i32 %bf.clear11, label %return [
    i32 41, label %tailrecurse.backedge
    i32 39, label %sw.bb462
    i32 43, label %sw.bb462
    i32 44, label %sw.bb462
    i32 40, label %sw.bb482
  ]

sw.bb462:                                         ; preds = %if.end449, %if.end449, %if.end449
  %.in.in = getelementptr inbounds %union.tree_node* %arg0.addr.0, i64 0, i32 0, i32 2
  %.in = bitcast i32* %.in.in to %union.tree_node**
  %76 = load %union.tree_node** %.in, align 8
  %operands467 = getelementptr inbounds %union.tree_node* %arg1.addr.0, i64 0, i32 0, i32 2
  %arrayidx468 = bitcast i32* %operands467 to %union.tree_node**
  %77 = load %union.tree_node** %arrayidx468, align 8, !tbaa !14
  %call469 = tail call i32 @operand_equal_p(%union.tree_node* %76, %union.tree_node* %77, i32 0)
  %tobool470 = icmp eq i32 %call469, 0
  br i1 %tobool470, label %land.end480, label %land.rhs471

land.rhs471:                                      ; preds = %sw.bb462
  %operands464 = getelementptr inbounds %union.tree_node* %arg0.addr.0, i64 0, i32 0, i32 2
  %arrayidx474 = getelementptr inbounds i32* %operands464, i64 2
  %78 = bitcast i32* %arrayidx474 to %union.tree_node**
  %79 = load %union.tree_node** %78, align 8, !tbaa !14
  %arrayidx477 = getelementptr inbounds i32* %operands467, i64 2
  %80 = bitcast i32* %arrayidx477 to %union.tree_node**
  %81 = load %union.tree_node** %80, align 8, !tbaa !14
  %call478 = tail call i32 @operand_equal_p(%union.tree_node* %79, %union.tree_node* %81, i32 0)
  %tobool479 = icmp ne i32 %call478, 0
  br label %land.end480

land.end480:                                      ; preds = %sw.bb462, %land.rhs471
  %82 = phi i1 [ false, %sw.bb462 ], [ %tobool479, %land.rhs471 ]
  %land.ext481 = zext i1 %82 to i32
  br label %return

sw.bb482:                                         ; preds = %if.end449
  %operands484 = getelementptr inbounds %union.tree_node* %arg0.addr.0, i64 0, i32 0, i32 2
  %arrayidx485 = bitcast i32* %operands484 to %union.tree_node**
  %83 = load %union.tree_node** %arrayidx485, align 8, !tbaa !14
  %operands487 = getelementptr inbounds %union.tree_node* %arg1.addr.0, i64 0, i32 0, i32 2
  %arrayidx488 = bitcast i32* %operands487 to %union.tree_node**
  %84 = load %union.tree_node** %arrayidx488, align 8, !tbaa !14
  %call489 = tail call i32 @operand_equal_p(%union.tree_node* %83, %union.tree_node* %84, i32 0)
  %tobool490 = icmp eq i32 %call489, 0
  br i1 %tobool490, label %land.end509, label %land.lhs.true491

land.lhs.true491:                                 ; preds = %sw.bb482
  %arrayidx494 = getelementptr inbounds i32* %operands484, i64 2
  %85 = bitcast i32* %arrayidx494 to %union.tree_node**
  %86 = load %union.tree_node** %85, align 8, !tbaa !14
  %arrayidx497 = getelementptr inbounds i32* %operands487, i64 2
  %87 = bitcast i32* %arrayidx497 to %union.tree_node**
  %88 = load %union.tree_node** %87, align 8, !tbaa !14
  %call498 = tail call i32 @operand_equal_p(%union.tree_node* %86, %union.tree_node* %88, i32 0)
  %tobool499 = icmp eq i32 %call498, 0
  br i1 %tobool499, label %land.end509, label %land.rhs500

land.rhs500:                                      ; preds = %land.lhs.true491
  %arrayidx503 = getelementptr inbounds i32* %operands484, i64 4
  %89 = bitcast i32* %arrayidx503 to %union.tree_node**
  %90 = load %union.tree_node** %89, align 8, !tbaa !14
  %arrayidx506 = getelementptr inbounds i32* %operands487, i64 4
  %91 = bitcast i32* %arrayidx506 to %union.tree_node**
  %92 = load %union.tree_node** %91, align 8, !tbaa !14
  %call507 = tail call i32 @operand_equal_p(%union.tree_node* %90, %union.tree_node* %92, i32 0)
  %tobool508 = icmp ne i32 %call507, 0
  br label %land.end509

land.end509:                                      ; preds = %land.lhs.true491, %sw.bb482, %land.rhs500
  %93 = phi i1 [ false, %land.lhs.true491 ], [ false, %sw.bb482 ], [ %tobool508, %land.rhs500 ]
  %land.ext510 = zext i1 %93 to i32
  br label %return

sw.bb512:                                         ; preds = %if.end285
  %cmp517 = icmp eq i32 %bf.clear11, 120
  br i1 %cmp517, label %if.then519, label %return

if.then519:                                       ; preds = %sw.bb512
  %operands521 = getelementptr inbounds %union.tree_node* %arg0.addr.0, i64 0, i32 0, i32 2
  %arrayidx522 = getelementptr inbounds i32* %operands521, i64 2
  %94 = bitcast i32* %arrayidx522 to %struct.rtx_def**
  %95 = load %struct.rtx_def** %94, align 8, !tbaa !14
  %operands524 = getelementptr inbounds %union.tree_node* %arg1.addr.0, i64 0, i32 0, i32 2
  %arrayidx525 = getelementptr inbounds i32* %operands524, i64 2
  %96 = bitcast i32* %arrayidx525 to %struct.rtx_def**
  %97 = load %struct.rtx_def** %96, align 8, !tbaa !14
  %call526 = tail call i32 @rtx_equal_p(%struct.rtx_def* %95, %struct.rtx_def* %97) #1
  br label %return

return:                                           ; preds = %tailrecurse.backedge, %lor.lhs.false118, %while.end92, %lor.lhs.false110, %lor.lhs.false102, %lor.lhs.false144, %land.lhs.true138, %if.end282, %land.lhs.true306, %sw.bb434, %if.end449, %if.end285, %while.body237, %if.end241, %entry, %if.end228, %sw.bb512, %land.lhs.true341, %sw.bb213, %if.then519, %land.end509, %land.end480, %land.end432, %land.end272, %land.end257, %land.end211, %land.end190
  %retval.0 = phi i32 [ %call526, %if.then519 ], [ %land.ext510, %land.end509 ], [ %land.ext481, %land.end480 ], [ %land.ext433, %land.end432 ], [ %land.ext273, %land.end272 ], [ %land.ext258, %land.end257 ], [ %land.ext212, %land.end211 ], [ %land.ext, %land.end190 ], [ 0, %sw.bb213 ], [ 1, %land.lhs.true341 ], [ 0, %sw.bb512 ], [ 1, %if.end228 ], [ 0, %entry ], [ 0, %while.body237 ], [ 1, %if.end241 ], [ 0, %tailrecurse.backedge ], [ 0, %lor.lhs.false118 ], [ 0, %while.end92 ], [ 0, %lor.lhs.false110 ], [ 0, %lor.lhs.false102 ], [ 1, %lor.lhs.false144 ], [ 1, %land.lhs.true138 ], [ 0, %if.end282 ], [ 0, %land.lhs.true306 ], [ 0, %sw.bb434 ], [ 0, %if.end449 ], [ 0, %if.end285 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) #5

declare i32 @rtx_equal_p(%struct.rtx_def*, %struct.rtx_def*) #3

; Function Attrs: nounwind uwtable
define %union.tree_node* @invert_truthvalue(%union.tree_node* %arg) #0 {
entry:
  %code3371 = getelementptr inbounds %union.tree_node* %arg, i64 0, i32 0, i32 0, i32 2
  %bf.load372 = load i32* %code3371, align 8
  %bf.clear373 = and i32 %bf.load372, 255
  %cmp374 = icmp eq i32 %bf.clear373, 0
  br i1 %cmp374, label %return, label %if.end

if.end:                                           ; preds = %entry, %sw.bb166
  %bf.load174 = phi i32 [ %bf.load, %sw.bb166 ], [ %bf.load372, %entry ]
  %bf.clear378 = phi i32 [ %bf.clear, %sw.bb166 ], [ %bf.clear373, %entry ]
  %.pn = phi %union.tree_node* [ %37, %sw.bb166 ], [ %arg, %entry ]
  %.in = getelementptr inbounds %union.tree_node* %.pn, i64 0, i32 0, i32 0, i32 1
  %0 = load %union.tree_node** %.in, align 8
  %idxprom279 = zext i32 %bf.clear378 to i64
  %arrayidx = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom279
  %1 = load i8* %arrayidx, align 1, !tbaa !15
  %cmp4 = icmp eq i8 %1, 60
  br i1 %cmp4, label %if.then6, label %if.end56

if.then6:                                         ; preds = %if.end
  %operands = getelementptr inbounds %union.tree_node* %.pn, i64 0, i32 0, i32 2
  %arrayidx7 = bitcast i32* %operands to %union.tree_node**
  %2 = load %union.tree_node** %arrayidx7, align 8, !tbaa !14
  %type9 = getelementptr inbounds %union.tree_node* %2, i64 0, i32 0, i32 0, i32 1
  %3 = load %union.tree_node** %type9, align 8, !tbaa !11
  %code11 = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 0, i32 2
  %bf.load12 = load i32* %code11, align 8
  %bf.clear13 = and i32 %bf.load12, 255
  switch i32 %bf.clear13, label %if.else [
    i32 7, label %land.lhs.true40
    i32 8, label %land.lhs.true
  ]

land.lhs.true:                                    ; preds = %if.then6
  %type33 = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 0, i32 1
  %4 = load %union.tree_node** %type33, align 8, !tbaa !11
  %code35 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 0, i32 2
  %bf.load36 = load i32* %code35, align 8
  %bf.clear37 = and i32 %bf.load36, 255
  %5 = load i32* @flag_unsafe_math_optimizations, align 4
  %notlhs286 = icmp ne i32 %5, 0
  %notrhs287 = icmp ne i32 %bf.clear37, 7
  %or.cond.not.not = or i1 %notrhs287, %notlhs286
  %bf.clear.off = add i32 %bf.clear378, -101
  %switch = icmp ult i32 %bf.clear.off, 2
  %or.cond = or i1 %or.cond.not.not, %switch
  br i1 %or.cond, label %if.else, label %if.then47

land.lhs.true40:                                  ; preds = %if.then6
  %.old = load i32* @flag_unsafe_math_optimizations, align 4, !tbaa !12
  %tobool.old = icmp ne i32 %.old, 0
  %bf.clear.off282 = add i32 %bf.clear378, -101
  %switch283 = icmp ult i32 %bf.clear.off282, 2
  %or.cond285 = or i1 %tobool.old, %switch283
  br i1 %or.cond285, label %if.else, label %if.then47

if.then47:                                        ; preds = %land.lhs.true40, %land.lhs.true
  %call = tail call %union.tree_node* @build1(i32 96, %union.tree_node* %0, %union.tree_node* %.pn) #1
  br label %return

if.else:                                          ; preds = %land.lhs.true40, %land.lhs.true, %if.then6
  switch i32 %bf.clear378, label %sw.default.i [
    i32 101, label %invert_tree_comparison.exit
    i32 102, label %sw.bb1.i
    i32 99, label %sw.bb2.i
    i32 100, label %sw.bb3.i
    i32 97, label %sw.bb4.i
    i32 98, label %sw.bb5.i
  ]

sw.bb1.i:                                         ; preds = %if.else
  br label %invert_tree_comparison.exit

sw.bb2.i:                                         ; preds = %if.else
  br label %invert_tree_comparison.exit

sw.bb3.i:                                         ; preds = %if.else
  br label %invert_tree_comparison.exit

sw.bb4.i:                                         ; preds = %if.else
  br label %invert_tree_comparison.exit

sw.bb5.i:                                         ; preds = %if.else
  br label %invert_tree_comparison.exit

sw.default.i:                                     ; preds = %if.else
  tail call void @fancy_abort(i8* getelementptr inbounds ([13 x i8]* @.str, i64 0, i64 0), i32 2332, i8* getelementptr inbounds ([23 x i8]* @__FUNCTION__.invert_tree_comparison, i64 0, i64 0)) #7
  unreachable

invert_tree_comparison.exit:                      ; preds = %if.else, %sw.bb1.i, %sw.bb2.i, %sw.bb3.i, %sw.bb4.i, %sw.bb5.i
  %retval.0.i = phi i32 [ 99, %sw.bb5.i ], [ 100, %sw.bb4.i ], [ 97, %sw.bb3.i ], [ 98, %sw.bb2.i ], [ 101, %sw.bb1.i ], [ 102, %if.else ]
  %arrayidx54 = getelementptr inbounds i32* %operands, i64 2
  %6 = bitcast i32* %arrayidx54 to %union.tree_node**
  %7 = load %union.tree_node** %6, align 8, !tbaa !14
  %call55 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %retval.0.i, %union.tree_node* %0, %union.tree_node* %2, %union.tree_node* %7) #1
  br label %return

if.end56:                                         ; preds = %if.end
  switch i32 %bf.clear378, label %sw.epilog [
    i32 25, label %sw.bb
    i32 93, label %sw.bb61
    i32 94, label %sw.bb71
    i32 95, label %sw.bb81
    i32 91, label %sw.bb111
    i32 92, label %sw.bb121
    i32 96, label %sw.bb131
    i32 51, label %sw.bb135
    i32 47, label %sw.bb148
    i32 58, label %sw.bb157
    i32 116, label %sw.bb166
    i32 115, label %sw.bb171
    i32 114, label %sw.bb171
    i32 76, label %sw.bb171
    i32 88, label %sw.bb181
    i32 118, label %sw.bb191
    i32 56, label %sw.bb193
  ]

sw.bb:                                            ; preds = %if.end56
  %call57 = tail call i32 @integer_zerop(%union.tree_node* %.pn) #1
  %conv58 = sext i32 %call57 to i64
  %call59 = tail call %union.tree_node* @build_int_2_wide(i64 %conv58, i64 0) #1
  %call60 = tail call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %call59) #1
  br label %return

sw.bb61:                                          ; preds = %if.end56
  %operands63 = getelementptr inbounds %union.tree_node* %.pn, i64 0, i32 0, i32 2
  %arrayidx64 = bitcast i32* %operands63 to %union.tree_node**
  %8 = load %union.tree_node** %arrayidx64, align 8, !tbaa !14
  %call65 = tail call %union.tree_node* @invert_truthvalue(%union.tree_node* %8)
  %arrayidx68 = getelementptr inbounds i32* %operands63, i64 2
  %9 = bitcast i32* %arrayidx68 to %union.tree_node**
  %10 = load %union.tree_node** %9, align 8, !tbaa !14
  %call69 = tail call %union.tree_node* @invert_truthvalue(%union.tree_node* %10)
  %call70 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 94, %union.tree_node* %0, %union.tree_node* %call65, %union.tree_node* %call69) #1
  ret %union.tree_node* %call70

sw.bb71:                                          ; preds = %if.end56
  %operands73 = getelementptr inbounds %union.tree_node* %.pn, i64 0, i32 0, i32 2
  %arrayidx74 = bitcast i32* %operands73 to %union.tree_node**
  %11 = load %union.tree_node** %arrayidx74, align 8, !tbaa !14
  %call75 = tail call %union.tree_node* @invert_truthvalue(%union.tree_node* %11)
  %arrayidx78 = getelementptr inbounds i32* %operands73, i64 2
  %12 = bitcast i32* %arrayidx78 to %union.tree_node**
  %13 = load %union.tree_node** %12, align 8, !tbaa !14
  %call79 = tail call %union.tree_node* @invert_truthvalue(%union.tree_node* %13)
  %call80 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 93, %union.tree_node* %0, %union.tree_node* %call75, %union.tree_node* %call79) #1
  ret %union.tree_node* %call80

sw.bb81:                                          ; preds = %if.end56
  %operands83 = getelementptr inbounds %union.tree_node* %.pn, i64 0, i32 0, i32 2
  %arrayidx84 = getelementptr inbounds i32* %operands83, i64 2
  %14 = bitcast i32* %arrayidx84 to %union.tree_node**
  %15 = load %union.tree_node** %14, align 8, !tbaa !14
  %code86 = getelementptr inbounds %union.tree_node* %15, i64 0, i32 0, i32 0, i32 2
  %bf.load87 = load i32* %code86, align 8
  %bf.clear88 = and i32 %bf.load87, 255
  %cmp89 = icmp eq i32 %bf.clear88, 96
  %arrayidx94 = bitcast i32* %operands83 to %union.tree_node**
  %16 = load %union.tree_node** %arrayidx94, align 8, !tbaa !14
  br i1 %cmp89, label %if.then91, label %if.else102

if.then91:                                        ; preds = %sw.bb81
  %operands99 = getelementptr inbounds %union.tree_node* %15, i64 0, i32 0, i32 2
  %arrayidx100 = bitcast i32* %operands99 to %union.tree_node**
  %17 = load %union.tree_node** %arrayidx100, align 8, !tbaa !14
  %call101 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 95, %union.tree_node* %0, %union.tree_node* %16, %union.tree_node* %17) #1
  br label %return

if.else102:                                       ; preds = %sw.bb81
  %call106 = tail call %union.tree_node* @invert_truthvalue(%union.tree_node* %16)
  %18 = load %union.tree_node** %14, align 8, !tbaa !14
  %call110 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 95, %union.tree_node* %0, %union.tree_node* %call106, %union.tree_node* %18) #1
  ret %union.tree_node* %call110

sw.bb111:                                         ; preds = %if.end56
  %operands113 = getelementptr inbounds %union.tree_node* %.pn, i64 0, i32 0, i32 2
  %arrayidx114 = bitcast i32* %operands113 to %union.tree_node**
  %19 = load %union.tree_node** %arrayidx114, align 8, !tbaa !14
  %call115 = tail call %union.tree_node* @invert_truthvalue(%union.tree_node* %19)
  %arrayidx118 = getelementptr inbounds i32* %operands113, i64 2
  %20 = bitcast i32* %arrayidx118 to %union.tree_node**
  %21 = load %union.tree_node** %20, align 8, !tbaa !14
  %call119 = tail call %union.tree_node* @invert_truthvalue(%union.tree_node* %21)
  %call120 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 92, %union.tree_node* %0, %union.tree_node* %call115, %union.tree_node* %call119) #1
  ret %union.tree_node* %call120

sw.bb121:                                         ; preds = %if.end56
  %operands123 = getelementptr inbounds %union.tree_node* %.pn, i64 0, i32 0, i32 2
  %arrayidx124 = bitcast i32* %operands123 to %union.tree_node**
  %22 = load %union.tree_node** %arrayidx124, align 8, !tbaa !14
  %call125 = tail call %union.tree_node* @invert_truthvalue(%union.tree_node* %22)
  %arrayidx128 = getelementptr inbounds i32* %operands123, i64 2
  %23 = bitcast i32* %arrayidx128 to %union.tree_node**
  %24 = load %union.tree_node** %23, align 8, !tbaa !14
  %call129 = tail call %union.tree_node* @invert_truthvalue(%union.tree_node* %24)
  %call130 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 91, %union.tree_node* %0, %union.tree_node* %call125, %union.tree_node* %call129) #1
  ret %union.tree_node* %call130

sw.bb131:                                         ; preds = %if.end56
  %operands133 = getelementptr inbounds %union.tree_node* %.pn, i64 0, i32 0, i32 2
  %arrayidx134 = bitcast i32* %operands133 to %union.tree_node**
  %25 = load %union.tree_node** %arrayidx134, align 8, !tbaa !14
  br label %return

sw.bb135:                                         ; preds = %if.end56
  %operands137 = getelementptr inbounds %union.tree_node* %.pn, i64 0, i32 0, i32 2
  %arrayidx138 = bitcast i32* %operands137 to %union.tree_node**
  %26 = load %union.tree_node** %arrayidx138, align 8, !tbaa !14
  %arrayidx141 = getelementptr inbounds i32* %operands137, i64 2
  %27 = bitcast i32* %arrayidx141 to %union.tree_node**
  %28 = load %union.tree_node** %27, align 8, !tbaa !14
  %call142 = tail call %union.tree_node* @invert_truthvalue(%union.tree_node* %28)
  %arrayidx145 = getelementptr inbounds i32* %operands137, i64 4
  %29 = bitcast i32* %arrayidx145 to %union.tree_node**
  %30 = load %union.tree_node** %29, align 8, !tbaa !14
  %call146 = tail call %union.tree_node* @invert_truthvalue(%union.tree_node* %30)
  %call147 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 51, %union.tree_node* %0, %union.tree_node* %26, %union.tree_node* %call142, %union.tree_node* %call146) #1
  ret %union.tree_node* %call147

sw.bb148:                                         ; preds = %if.end56
  %operands150 = getelementptr inbounds %union.tree_node* %.pn, i64 0, i32 0, i32 2
  %arrayidx151 = bitcast i32* %operands150 to %union.tree_node**
  %31 = load %union.tree_node** %arrayidx151, align 8, !tbaa !14
  %arrayidx154 = getelementptr inbounds i32* %operands150, i64 2
  %32 = bitcast i32* %arrayidx154 to %union.tree_node**
  %33 = load %union.tree_node** %32, align 8, !tbaa !14
  %call155 = tail call %union.tree_node* @invert_truthvalue(%union.tree_node* %33)
  %call156 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 47, %union.tree_node* %0, %union.tree_node* %31, %union.tree_node* %call155) #1
  ret %union.tree_node* %call156

sw.bb157:                                         ; preds = %if.end56
  %operands159 = getelementptr inbounds %union.tree_node* %.pn, i64 0, i32 0, i32 2
  %arrayidx160 = bitcast i32* %operands159 to %union.tree_node**
  %34 = load %union.tree_node** %arrayidx160, align 8, !tbaa !14
  %call161 = tail call %union.tree_node* @invert_truthvalue(%union.tree_node* %34)
  %arrayidx164 = getelementptr inbounds i32* %operands159, i64 2
  %35 = bitcast i32* %arrayidx164 to %union.tree_node**
  %36 = load %union.tree_node** %35, align 8, !tbaa !14
  %call165 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 58, %union.tree_node* %0, %union.tree_node* %call161, %union.tree_node* %36) #1
  ret %union.tree_node* %call165

sw.bb166:                                         ; preds = %if.end56
  %operands168 = getelementptr inbounds %union.tree_node* %.pn, i64 0, i32 0, i32 2
  %arrayidx169 = bitcast i32* %operands168 to %union.tree_node**
  %37 = load %union.tree_node** %arrayidx169, align 8, !tbaa !14
  %code3 = getelementptr inbounds %union.tree_node* %37, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code3, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 0
  br i1 %cmp, label %return, label %if.end

sw.bb171:                                         ; preds = %if.end56, %if.end56, %if.end56
  %bf.clear175 = and i32 %bf.load174, 255
  %operands177 = getelementptr inbounds %union.tree_node* %.pn, i64 0, i32 0, i32 2
  %arrayidx178 = bitcast i32* %operands177 to %union.tree_node**
  %38 = load %union.tree_node** %arrayidx178, align 8, !tbaa !14
  %call179 = tail call %union.tree_node* @invert_truthvalue(%union.tree_node* %38)
  %call180 = tail call %union.tree_node* @build1(i32 %bf.clear175, %union.tree_node* %0, %union.tree_node* %call179) #1
  ret %union.tree_node* %call180

sw.bb181:                                         ; preds = %if.end56
  %operands183 = getelementptr inbounds %union.tree_node* %.pn, i64 0, i32 0, i32 2
  %arrayidx184 = getelementptr inbounds i32* %operands183, i64 2
  %39 = bitcast i32* %arrayidx184 to %union.tree_node**
  %40 = load %union.tree_node** %39, align 8, !tbaa !14
  %call185 = tail call i32 @integer_onep(%union.tree_node* %40) #1
  %tobool186 = icmp eq i32 %call185, 0
  br i1 %tobool186, label %sw.epilog, label %if.end188

if.end188:                                        ; preds = %sw.bb181
  %41 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8, !tbaa !14
  %call189 = tail call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %41) #1
  %call190 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 101, %union.tree_node* %0, %union.tree_node* %.pn, %union.tree_node* %call189) #1
  br label %return

sw.bb191:                                         ; preds = %if.end56
  %call192 = tail call %union.tree_node* @build1(i32 96, %union.tree_node* %0, %union.tree_node* %.pn) #1
  br label %return

sw.bb193:                                         ; preds = %if.end56
  %operands195 = getelementptr inbounds %union.tree_node* %.pn, i64 0, i32 0, i32 2
  %arrayidx196 = bitcast i32* %operands195 to %union.tree_node**
  %42 = load %union.tree_node** %arrayidx196, align 8, !tbaa !14
  %call197 = tail call %union.tree_node* @invert_truthvalue(%union.tree_node* %42)
  %call198 = tail call %union.tree_node* @build1(i32 56, %union.tree_node* %0, %union.tree_node* %call197) #1
  ret %union.tree_node* %call198

sw.epilog:                                        ; preds = %if.end56, %sw.bb181
  %43 = load %union.tree_node** %.in, align 8, !tbaa !11
  %code202 = getelementptr inbounds %union.tree_node* %43, i64 0, i32 0, i32 0, i32 2
  %bf.load203 = load i32* %code202, align 8
  %bf.clear204 = and i32 %bf.load203, 255
  %cmp205 = icmp eq i32 %bf.clear204, 11
  br i1 %cmp205, label %if.end208, label %if.then207

if.then207:                                       ; preds = %sw.epilog
  tail call void @fancy_abort(i8* getelementptr inbounds ([13 x i8]* @.str, i64 0, i64 0), i32 2934, i8* getelementptr inbounds ([18 x i8]* @__FUNCTION__.invert_truthvalue, i64 0, i64 0)) #7
  unreachable

if.end208:                                        ; preds = %sw.epilog
  %call209 = tail call %union.tree_node* @build1(i32 96, %union.tree_node* %0, %union.tree_node* %.pn) #1
  br label %return

return:                                           ; preds = %sw.bb166, %entry, %if.end208, %sw.bb191, %if.end188, %sw.bb131, %if.then91, %sw.bb, %invert_tree_comparison.exit, %if.then47
  %retval.0 = phi %union.tree_node* [ %call, %if.then47 ], [ %call55, %invert_tree_comparison.exit ], [ %call209, %if.end208 ], [ %call192, %sw.bb191 ], [ %call190, %if.end188 ], [ %25, %sw.bb131 ], [ %call101, %if.then91 ], [ %call60, %sw.bb ], [ %arg, %entry ], [ %37, %sw.bb166 ]
  ret %union.tree_node* %retval.0
}

declare %union.tree_node* @build_int_2_wide(i64, i64) #3

declare i32 @first_rtl_op(i32) #3

; Function Attrs: nounwind readonly uwtable
define internal fastcc i32 @count_cond(%union.tree_node* nocapture readonly %expr, i32 %lim) #4 {
entry:
  %code = getelementptr inbounds %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp ne i32 %bf.clear, 51
  %cmp1 = icmp slt i32 %lim, 1
  %or.cond = or i1 %cmp, %cmp1
  br i1 %or.cond, label %return, label %if.end3

if.end3:                                          ; preds = %entry
  %operands = getelementptr inbounds %union.tree_node* %expr, i64 0, i32 0, i32 2
  %arrayidx = getelementptr inbounds i32* %operands, i64 2
  %0 = bitcast i32* %arrayidx to %union.tree_node**
  %1 = load %union.tree_node** %0, align 8, !tbaa !14
  %sub = add nsw i32 %lim, -1
  %call = tail call fastcc i32 @count_cond(%union.tree_node* %1, i32 %sub)
  %arrayidx6 = getelementptr inbounds i32* %operands, i64 4
  %2 = bitcast i32* %arrayidx6 to %union.tree_node**
  %3 = load %union.tree_node** %2, align 8, !tbaa !14
  %sub8 = sub nsw i32 %sub, %call
  %call9 = tail call fastcc i32 @count_cond(%union.tree_node* %3, i32 %sub8)
  %add = add nsw i32 %call, 1
  %add10 = add nsw i32 %add, %call9
  %cmp11 = icmp sgt i32 %add10, %lim
  %lim.add10 = select i1 %cmp11, i32 %lim, i32 %add10
  ret i32 %lim.add10

return:                                           ; preds = %entry
  ret i32 0
}

declare i32 @global_bindings_p() #3

declare i32 @contains_placeholder_p(%union.tree_node*) #3

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_binary_op_with_conditional_arg(i32 %code, %union.tree_node* %type, %union.tree_node* %cond, %union.tree_node* %arg, i32 %cond_first_p) #0 {
entry:
  %tobool = icmp ne i32 %cond_first_p, 0
  %code1 = getelementptr inbounds %union.tree_node* %cond, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code1, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 51
  br i1 %cmp, label %if.then2, label %if.else33

if.then2:                                         ; preds = %entry
  %operands = getelementptr inbounds %union.tree_node* %cond, i64 0, i32 0, i32 2
  %arrayidx = bitcast i32* %operands to %union.tree_node**
  %0 = load %union.tree_node** %arrayidx, align 8, !tbaa !14
  %arrayidx5 = getelementptr inbounds i32* %operands, i64 2
  %1 = bitcast i32* %arrayidx5 to %union.tree_node**
  %2 = load %union.tree_node** %1, align 8, !tbaa !14
  %arrayidx8 = getelementptr inbounds i32* %operands, i64 4
  %3 = bitcast i32* %arrayidx8 to %union.tree_node**
  %4 = load %union.tree_node** %3, align 8, !tbaa !14
  %type10 = getelementptr inbounds %union.tree_node* %2, i64 0, i32 0, i32 0, i32 1
  %5 = load %union.tree_node** %type10, align 8, !tbaa !11
  %code12 = getelementptr inbounds %union.tree_node* %5, i64 0, i32 0, i32 0, i32 2
  %bf.load13 = load i32* %code12, align 8
  %bf.clear14 = and i32 %bf.load13, 255
  %cmp15 = icmp eq i32 %bf.clear14, 5
  br i1 %cmp15, label %if.then16, label %if.end20

if.then16:                                        ; preds = %if.then2
  %6 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 27), align 8, !tbaa !14
  %type. = select i1 %tobool, %union.tree_node* %type, %union.tree_node* %6
  br label %if.end20

if.end20:                                         ; preds = %if.then16, %if.then2
  %lhs_code.0 = phi i32 [ %code, %if.then2 ], [ 47, %if.then16 ]
  %lhs_type.0 = phi %union.tree_node* [ %type, %if.then2 ], [ %type., %if.then16 ]
  %type22 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 0, i32 1
  %7 = load %union.tree_node** %type22, align 8, !tbaa !11
  %code24 = getelementptr inbounds %union.tree_node* %7, i64 0, i32 0, i32 0, i32 2
  %bf.load25 = load i32* %code24, align 8
  %bf.clear26 = and i32 %bf.load25, 255
  %cmp27 = icmp eq i32 %bf.clear26, 5
  br i1 %cmp27, label %if.then28, label %if.end37

if.then28:                                        ; preds = %if.end20
  %8 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 27), align 8, !tbaa !14
  %type.167 = select i1 %tobool, %union.tree_node* %type, %union.tree_node* %8
  br label %if.end37

if.else33:                                        ; preds = %entry
  %type35 = getelementptr inbounds %union.tree_node* %cond, i64 0, i32 0, i32 0, i32 1
  %9 = load %union.tree_node** %type35, align 8, !tbaa !11
  %10 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 12), align 8, !tbaa !14
  %call = tail call %union.tree_node* @convert(%union.tree_node* %9, %union.tree_node* %10) #1
  %11 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8, !tbaa !14
  %call36 = tail call %union.tree_node* @convert(%union.tree_node* %9, %union.tree_node* %11) #1
  br label %if.end37

if.end37:                                         ; preds = %if.then28, %if.end20, %if.else33
  %12 = phi %union.tree_node* [ %2, %if.end20 ], [ %call, %if.else33 ], [ %2, %if.then28 ]
  %13 = phi %union.tree_node* [ %4, %if.end20 ], [ %call36, %if.else33 ], [ %4, %if.then28 ]
  %test.0 = phi %union.tree_node* [ %0, %if.end20 ], [ %cond, %if.else33 ], [ %0, %if.then28 ]
  %lhs_code.1 = phi i32 [ %lhs_code.0, %if.end20 ], [ %code, %if.else33 ], [ %lhs_code.0, %if.then28 ]
  %rhs_code.0 = phi i32 [ %code, %if.end20 ], [ %code, %if.else33 ], [ 47, %if.then28 ]
  %lhs_type.1 = phi %union.tree_node* [ %lhs_type.0, %if.end20 ], [ %type, %if.else33 ], [ %lhs_type.0, %if.then28 ]
  %rhs_type.0 = phi %union.tree_node* [ %type, %if.end20 ], [ %type, %if.else33 ], [ %type.167, %if.then28 ]
  %code39 = getelementptr inbounds %union.tree_node* %arg, i64 0, i32 0, i32 0, i32 2
  %bf.load40 = load i32* %code39, align 8
  %bf.clear41 = and i32 %bf.load40, 255
  %cmp42 = icmp ne i32 %bf.clear41, 118
  %bf.clear45 = and i32 %bf.load40, 512
  %tobool46 = icmp eq i32 %bf.clear45, 0
  %or.cond = and i1 %cmp42, %tobool46
  br i1 %or.cond, label %land.lhs.true47, label %if.then108

land.lhs.true47:                                  ; preds = %if.end37
  %call48 = tail call i32 @global_bindings_p() #1
  %cmp49 = icmp eq i32 %call48, 0
  br i1 %cmp49, label %land.lhs.true50, label %if.then108

land.lhs.true50:                                  ; preds = %land.lhs.true47
  %bf.load53 = load i32* %code39, align 8
  %14 = and i32 %bf.load53, 510
  %15 = icmp eq i32 %14, 34
  br i1 %15, label %if.then108, label %if.then67

if.then67:                                        ; preds = %land.lhs.true50
  %code69 = getelementptr inbounds %union.tree_node* %12, i64 0, i32 0, i32 0, i32 2
  %bf.load70 = load i32* %code69, align 8
  %bf.clear71 = and i32 %bf.load70, 255
  %cmp72 = icmp eq i32 %bf.clear71, 51
  br i1 %cmp72, label %if.end76, label %if.then73

if.then73:                                        ; preds = %if.then67
  %.sroa.speculated187 = select i1 %tobool, %union.tree_node* %12, %union.tree_node* %arg
  %.sroa.speculated181 = select i1 %tobool, %union.tree_node* %arg, %union.tree_node* %12
  %call74 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %lhs_code.1, %union.tree_node* %lhs_type.1, %union.tree_node* %.sroa.speculated187, %union.tree_node* %.sroa.speculated181) #1
  %call75 = tail call %union.tree_node* @fold(%union.tree_node* %call74)
  br label %if.end76

if.end76:                                         ; preds = %if.then67, %if.then73
  %lhs.0 = phi %union.tree_node* [ %call75, %if.then73 ], [ null, %if.then67 ]
  %code78 = getelementptr inbounds %union.tree_node* %13, i64 0, i32 0, i32 0, i32 2
  %bf.load79 = load i32* %code78, align 8
  %bf.clear80 = and i32 %bf.load79, 255
  %cmp81 = icmp eq i32 %bf.clear80, 51
  br i1 %cmp81, label %if.end85, label %if.then82

if.then82:                                        ; preds = %if.end76
  %.sroa.speculated176 = select i1 %tobool, %union.tree_node* %13, %union.tree_node* %arg
  %.sroa.speculated170 = select i1 %tobool, %union.tree_node* %arg, %union.tree_node* %13
  %call83 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %rhs_code.0, %union.tree_node* %rhs_type.0, %union.tree_node* %.sroa.speculated176, %union.tree_node* %.sroa.speculated170) #1
  %call84 = tail call %union.tree_node* @fold(%union.tree_node* %call83)
  br label %if.end85

if.end85:                                         ; preds = %if.end76, %if.then82
  %rhs.0 = phi %union.tree_node* [ %call84, %if.then82 ], [ null, %if.end76 ]
  %cmp86 = icmp eq %union.tree_node* %lhs.0, null
  br i1 %cmp86, label %land.lhs.true94, label %lor.lhs.false87

lor.lhs.false87:                                  ; preds = %if.end85
  %constant_flag89 = getelementptr inbounds %union.tree_node* %lhs.0, i64 0, i32 0, i32 0, i32 2
  %bf.load90 = load i32* %constant_flag89, align 8
  %bf.clear92 = and i32 %bf.load90, 512
  %tobool93 = icmp eq i32 %bf.clear92, 0
  br i1 %tobool93, label %land.lhs.true94, label %if.end111

land.lhs.true94:                                  ; preds = %lor.lhs.false87, %if.end85
  %cmp95 = icmp eq %union.tree_node* %rhs.0, null
  br i1 %cmp95, label %if.then103, label %lor.lhs.false96

lor.lhs.false96:                                  ; preds = %land.lhs.true94
  %constant_flag98 = getelementptr inbounds %union.tree_node* %rhs.0, i64 0, i32 0, i32 0, i32 2
  %bf.load99 = load i32* %constant_flag98, align 8
  %bf.clear101 = and i32 %bf.load99, 512
  %tobool102 = icmp eq i32 %bf.clear101, 0
  br i1 %tobool102, label %if.then103, label %if.end106

if.then103:                                       ; preds = %lor.lhs.false96, %land.lhs.true94
  %call104 = tail call %union.tree_node* @save_expr(%union.tree_node* %arg) #1
  br label %if.then108

if.end106:                                        ; preds = %lor.lhs.false96
  br i1 %cmp86, label %if.then108, label %if.end111

if.then108:                                       ; preds = %land.lhs.true50, %if.end37, %land.lhs.true47, %if.then103, %if.end106
  %rhs.1193 = phi %union.tree_node* [ %rhs.0, %if.end106 ], [ null, %if.then103 ], [ null, %land.lhs.true47 ], [ null, %if.end37 ], [ null, %land.lhs.true50 ]
  %arg188191 = phi %union.tree_node* [ %arg, %if.end106 ], [ %call104, %if.then103 ], [ %arg, %land.lhs.true47 ], [ %arg, %if.end37 ], [ %arg, %land.lhs.true50 ]
  %.sroa.speculated184 = select i1 %tobool, %union.tree_node* %12, %union.tree_node* %arg188191
  %.sroa.speculated178 = select i1 %tobool, %union.tree_node* %arg188191, %union.tree_node* %12
  %call109 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %lhs_code.1, %union.tree_node* %lhs_type.1, %union.tree_node* %.sroa.speculated184, %union.tree_node* %.sroa.speculated178) #1
  %call110 = tail call %union.tree_node* @fold(%union.tree_node* %call109)
  br label %if.end111

if.end111:                                        ; preds = %lor.lhs.false87, %if.then108, %if.end106
  %rhs.1192 = phi %union.tree_node* [ %rhs.1193, %if.then108 ], [ %rhs.0, %if.end106 ], [ %rhs.0, %lor.lhs.false87 ]
  %arg188190 = phi %union.tree_node* [ %arg188191, %if.then108 ], [ %arg, %if.end106 ], [ %arg, %lor.lhs.false87 ]
  %lhs.2 = phi %union.tree_node* [ %call110, %if.then108 ], [ %lhs.0, %if.end106 ], [ %lhs.0, %lor.lhs.false87 ]
  %cmp112 = icmp eq %union.tree_node* %rhs.1192, null
  br i1 %cmp112, label %if.then113, label %if.end116

if.then113:                                       ; preds = %if.end111
  %.sroa.speculated173 = select i1 %tobool, %union.tree_node* %13, %union.tree_node* %arg188190
  %.sroa.speculated = select i1 %tobool, %union.tree_node* %arg188190, %union.tree_node* %13
  %call114 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %rhs_code.0, %union.tree_node* %rhs_type.0, %union.tree_node* %.sroa.speculated173, %union.tree_node* %.sroa.speculated) #1
  %call115 = tail call %union.tree_node* @fold(%union.tree_node* %call114)
  br label %if.end116

if.end116:                                        ; preds = %if.then113, %if.end111
  %rhs.2 = phi %union.tree_node* [ %call115, %if.then113 ], [ %rhs.1192, %if.end111 ]
  %call117 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 51, %union.tree_node* %type, %union.tree_node* %test.0, %union.tree_node* %lhs.2, %union.tree_node* %rhs.2) #1
  %call118 = tail call %union.tree_node* @fold(%union.tree_node* %call117)
  %code120 = getelementptr inbounds %union.tree_node* %arg188190, i64 0, i32 0, i32 0, i32 2
  %bf.load121 = load i32* %code120, align 8
  %bf.clear122 = and i32 %bf.load121, 255
  %cmp123 = icmp eq i32 %bf.clear122, 118
  br i1 %cmp123, label %if.then124, label %if.else128

if.then124:                                       ; preds = %if.end116
  %16 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 27), align 8, !tbaa !14
  %call125 = tail call %union.tree_node* @convert(%union.tree_node* %16, %union.tree_node* %arg188190) #1
  %call126 = tail call fastcc %union.tree_node* @strip_compound_expr(%union.tree_node* %call118, %union.tree_node* %arg188190)
  %call127 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 47, %union.tree_node* %type, %union.tree_node* %call125, %union.tree_node* %call126) #1
  br label %return

if.else128:                                       ; preds = %if.end116
  %call129 = tail call %union.tree_node* @convert(%union.tree_node* %type, %union.tree_node* %call118) #1
  br label %return

return:                                           ; preds = %if.else128, %if.then124
  %retval.0 = phi %union.tree_node* [ %call127, %if.then124 ], [ %call129, %if.else128 ]
  ret %union.tree_node* %retval.0
}

declare %union.tree_node* @purpose_member(%union.tree_node*, %union.tree_node*) #3

declare %union.tree_node* @build_real(%union.tree_node*, %struct.realvaluetype* byval align 8) #3

declare void @ereal_negate(%struct.realvaluetype* sret, %struct.realvaluetype* byval align 8) #3

declare i32 @target_negative(%struct.realvaluetype* byval align 8) #3

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @negate_expr(%union.tree_node* %t) #0 {
entry:
  %cmp = icmp eq %union.tree_node* %t, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %type1 = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 0, i32 1
  %0 = load %union.tree_node** %type1, align 8, !tbaa !11
  %1 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !14
  br label %while.cond

while.cond:                                       ; preds = %land.rhs, %if.end
  %2 = phi %union.tree_node* [ %0, %if.end ], [ %4, %land.rhs ]
  %t.addr.0 = phi %union.tree_node* [ %t, %if.end ], [ %3, %land.rhs ]
  %code = getelementptr inbounds %union.tree_node* %t.addr.0, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %bf.clear.off = add i32 %bf.clear, -114
  %switch = icmp ult i32 %bf.clear.off, 3
  br i1 %switch, label %land.lhs.true, label %while.end

land.lhs.true:                                    ; preds = %while.cond
  %operands = getelementptr inbounds %union.tree_node* %t.addr.0, i64 0, i32 0, i32 2
  %arrayidx = bitcast i32* %operands to %union.tree_node**
  %3 = load %union.tree_node** %arrayidx, align 8, !tbaa !14
  %cmp15 = icmp eq %union.tree_node* %3, %1
  br i1 %cmp15, label %while.end, label %land.lhs.true16

land.lhs.true16:                                  ; preds = %land.lhs.true
  %type19 = bitcast %union.tree_node* %2 to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type* %type19, i64 0, i32 6
  %bf.load20 = load i32* %mode, align 4
  %type26 = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 0, i32 1
  %4 = load %union.tree_node** %type26, align 8, !tbaa !11
  %type27 = bitcast %union.tree_node* %4 to %struct.tree_type*
  %mode28 = getelementptr inbounds %struct.tree_type* %type27, i64 0, i32 6
  %bf.load29 = load i32* %mode28, align 4
  %bf.lshr143 = xor i32 %bf.load29, %bf.load20
  %5 = and i32 %bf.lshr143, 65024
  %cmp32 = icmp eq i32 %5, 0
  br i1 %cmp32, label %land.rhs, label %while.end

land.rhs:                                         ; preds = %land.lhs.true16
  %unsigned_flag = getelementptr inbounds %union.tree_node* %2, i64 0, i32 0, i32 0, i32 2
  %bf.load36 = load i32* %unsigned_flag, align 8
  %unsigned_flag45 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 0, i32 2
  %bf.load46 = load i32* %unsigned_flag45, align 8
  %bf.lshr37144 = xor i32 %bf.load46, %bf.load36
  %6 = and i32 %bf.lshr37144, 8192
  %cmp49 = icmp eq i32 %6, 0
  br i1 %cmp49, label %while.cond, label %while.end

while.end:                                        ; preds = %while.cond, %land.lhs.true, %land.lhs.true16, %land.rhs
  switch i32 %bf.clear, label %sw.epilog [
    i32 25, label %sw.bb
    i32 26, label %sw.bb
    i32 77, label %sw.bb73
    i32 60, label %sw.bb78
  ]

sw.bb:                                            ; preds = %while.end, %while.end
  %unsigned_flag58 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2
  %bf.load59 = load i32* %unsigned_flag58, align 8
  %bf.clear61 = and i32 %bf.load59, 8192
  %tobool = icmp eq i32 %bf.clear61, 0
  br i1 %tobool, label %land.lhs.true62, label %sw.epilog

land.lhs.true62:                                  ; preds = %sw.bb
  %call = tail call %union.tree_node* @build1(i32 77, %union.tree_node* %0, %union.tree_node* %t.addr.0) #1
  %call63 = tail call %union.tree_node* @fold(%union.tree_node* %call)
  %cmp64 = icmp eq %union.tree_node* %call63, null
  br i1 %cmp64, label %sw.epilog, label %land.lhs.true65

land.lhs.true65:                                  ; preds = %land.lhs.true62
  %public_flag = getelementptr inbounds %union.tree_node* %call63, i64 0, i32 0, i32 0, i32 2
  %bf.load67 = load i32* %public_flag, align 8
  %bf.clear69 = and i32 %bf.load67, 524288
  %tobool70 = icmp eq i32 %bf.clear69, 0
  br i1 %tobool70, label %return, label %sw.epilog

sw.bb73:                                          ; preds = %while.end
  %operands75 = getelementptr inbounds %union.tree_node* %t.addr.0, i64 0, i32 0, i32 2
  %arrayidx76 = bitcast i32* %operands75 to %union.tree_node**
  %7 = load %union.tree_node** %arrayidx76, align 8, !tbaa !14
  %call77 = tail call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %7) #1
  br label %return

sw.bb78:                                          ; preds = %while.end
  %code80 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2
  %bf.load81 = load i32* %code80, align 8
  %bf.clear82 = and i32 %bf.load81, 255
  switch i32 %bf.clear82, label %if.then100 [
    i32 7, label %lor.lhs.false98
    i32 8, label %land.lhs.true90
  ]

land.lhs.true90:                                  ; preds = %sw.bb78
  %type92 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 1
  %8 = load %union.tree_node** %type92, align 8, !tbaa !11
  %code94 = getelementptr inbounds %union.tree_node* %8, i64 0, i32 0, i32 0, i32 2
  %bf.load95 = load i32* %code94, align 8
  %bf.clear96 = and i32 %bf.load95, 255
  %cmp97 = icmp ne i32 %bf.clear96, 7
  %9 = load i32* @flag_unsafe_math_optimizations, align 4
  %tobool99 = icmp ne i32 %9, 0
  %or.cond = or i1 %cmp97, %tobool99
  br i1 %or.cond, label %if.then100, label %sw.epilog

lor.lhs.false98:                                  ; preds = %sw.bb78
  %.old = load i32* @flag_unsafe_math_optimizations, align 4, !tbaa !12
  %tobool99.old = icmp eq i32 %.old, 0
  br i1 %tobool99.old, label %sw.epilog, label %if.then100

if.then100:                                       ; preds = %sw.bb78, %lor.lhs.false98, %land.lhs.true90
  %type102 = getelementptr inbounds %union.tree_node* %t.addr.0, i64 0, i32 0, i32 0, i32 1
  %10 = load %union.tree_node** %type102, align 8, !tbaa !11
  %operands104 = getelementptr inbounds %union.tree_node* %t.addr.0, i64 0, i32 0, i32 2
  %arrayidx105 = getelementptr inbounds i32* %operands104, i64 2
  %11 = bitcast i32* %arrayidx105 to %union.tree_node**
  %12 = load %union.tree_node** %11, align 8, !tbaa !14
  %arrayidx108 = bitcast i32* %operands104 to %union.tree_node**
  %13 = load %union.tree_node** %arrayidx108, align 8, !tbaa !14
  %call109 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 60, %union.tree_node* %10, %union.tree_node* %12, %union.tree_node* %13) #1
  %call110 = tail call %union.tree_node* @fold(%union.tree_node* %call109)
  %call111 = tail call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %call110) #1
  br label %return

sw.epilog:                                        ; preds = %land.lhs.true65, %land.lhs.true62, %sw.bb, %lor.lhs.false98, %while.end, %land.lhs.true90
  %type114 = getelementptr inbounds %union.tree_node* %t.addr.0, i64 0, i32 0, i32 0, i32 1
  %14 = load %union.tree_node** %type114, align 8, !tbaa !11
  %call115 = tail call %union.tree_node* @build1(i32 77, %union.tree_node* %14, %union.tree_node* %t.addr.0) #1
  %call116 = tail call %union.tree_node* @fold(%union.tree_node* %call115)
  %call117 = tail call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %call116) #1
  br label %return

return:                                           ; preds = %land.lhs.true65, %entry, %sw.epilog, %if.then100, %sw.bb73
  %retval.0 = phi %union.tree_node* [ %call117, %sw.epilog ], [ %call111, %if.then100 ], [ %call77, %sw.bb73 ], [ null, %entry ], [ %call63, %land.lhs.true65 ]
  ret %union.tree_node* %retval.0
}

declare %union.tree_node* @build_complex(%union.tree_node*, %union.tree_node*, %union.tree_node*) #3

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @const_binop(i32 %code, %union.tree_node* %arg1, %union.tree_node* readonly %arg2) #0 {
entry:
  %d1 = alloca %struct.realvaluetype, align 8
  %d2 = alloca %struct.realvaluetype, align 8
  %args = alloca %struct.cb_args, align 8
  %0 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !14
  br label %while.cond

while.cond:                                       ; preds = %land.rhs, %entry
  %arg1.addr.0 = phi %union.tree_node* [ %arg1, %entry ], [ %1, %land.rhs ]
  %code1 = getelementptr inbounds %union.tree_node* %arg1.addr.0, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code1, align 8
  %bf.clear = and i32 %bf.load, 255
  %bf.clear.off = add i32 %bf.clear, -114
  %switch = icmp ult i32 %bf.clear.off, 3
  br i1 %switch, label %land.lhs.true, label %while.cond32

land.lhs.true:                                    ; preds = %while.cond
  %operands = getelementptr inbounds %union.tree_node* %arg1.addr.0, i64 0, i32 0, i32 2
  %arrayidx = bitcast i32* %operands to %union.tree_node**
  %1 = load %union.tree_node** %arrayidx, align 8, !tbaa !14
  %cmp13 = icmp eq %union.tree_node* %1, %0
  br i1 %cmp13, label %while.cond32, label %land.rhs

land.rhs:                                         ; preds = %land.lhs.true
  %type = getelementptr inbounds %union.tree_node* %arg1.addr.0, i64 0, i32 0, i32 0, i32 1
  %2 = load %union.tree_node** %type, align 8, !tbaa !11
  %type15 = bitcast %union.tree_node* %2 to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type* %type15, i64 0, i32 6
  %bf.load16 = load i32* %mode, align 4
  %type22 = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 0, i32 1
  %3 = load %union.tree_node** %type22, align 8, !tbaa !11
  %type23 = bitcast %union.tree_node* %3 to %struct.tree_type*
  %mode24 = getelementptr inbounds %struct.tree_type* %type23, i64 0, i32 6
  %bf.load25 = load i32* %mode24, align 4
  %bf.lshr9 = xor i32 %bf.load25, %bf.load16
  %4 = and i32 %bf.lshr9, 65024
  %cmp28 = icmp eq i32 %4, 0
  br i1 %cmp28, label %while.cond, label %while.cond32

while.cond32:                                     ; preds = %while.cond, %land.lhs.true, %land.rhs, %land.rhs55
  %arg2.addr.0 = phi %union.tree_node* [ %5, %land.rhs55 ], [ %arg2, %land.rhs ], [ %arg2, %land.lhs.true ], [ %arg2, %while.cond ]
  %code34 = getelementptr inbounds %union.tree_node* %arg2.addr.0, i64 0, i32 0, i32 0, i32 2
  %bf.load35 = load i32* %code34, align 8
  %bf.clear36 = and i32 %bf.load35, 255
  %bf.clear36.off = add i32 %bf.clear36, -114
  %switch10 = icmp ult i32 %bf.clear36.off, 3
  br i1 %switch10, label %land.lhs.true50, label %while.end79

land.lhs.true50:                                  ; preds = %while.cond32
  %operands52 = getelementptr inbounds %union.tree_node* %arg2.addr.0, i64 0, i32 0, i32 2
  %arrayidx53 = bitcast i32* %operands52 to %union.tree_node**
  %5 = load %union.tree_node** %arrayidx53, align 8, !tbaa !14
  %cmp54 = icmp eq %union.tree_node* %5, %0
  br i1 %cmp54, label %while.end79, label %land.rhs55

land.rhs55:                                       ; preds = %land.lhs.true50
  %type57 = getelementptr inbounds %union.tree_node* %arg2.addr.0, i64 0, i32 0, i32 0, i32 1
  %6 = load %union.tree_node** %type57, align 8, !tbaa !11
  %type58 = bitcast %union.tree_node* %6 to %struct.tree_type*
  %mode59 = getelementptr inbounds %struct.tree_type* %type58, i64 0, i32 6
  %bf.load60 = load i32* %mode59, align 4
  %type67 = getelementptr inbounds %union.tree_node* %5, i64 0, i32 0, i32 0, i32 1
  %7 = load %union.tree_node** %type67, align 8, !tbaa !11
  %type68 = bitcast %union.tree_node* %7 to %struct.tree_type*
  %mode69 = getelementptr inbounds %struct.tree_type* %type68, i64 0, i32 6
  %bf.load70 = load i32* %mode69, align 4
  %bf.lshr618 = xor i32 %bf.load70, %bf.load60
  %8 = and i32 %bf.lshr618, 65024
  %cmp73 = icmp eq i32 %8, 0
  br i1 %cmp73, label %while.cond32, label %while.end79

while.end79:                                      ; preds = %while.cond32, %land.lhs.true50, %land.rhs55
  switch i32 %bf.clear, label %return [
    i32 25, label %if.then
    i32 26, label %if.then90
    i32 27, label %if.then158
  ]

if.then:                                          ; preds = %while.end79
  %call = call fastcc %union.tree_node* @int_const_binop(i32 %code, %union.tree_node* %arg1.addr.0, %union.tree_node* %arg2.addr.0)
  br label %return

if.then90:                                        ; preds = %while.end79
  %9 = bitcast %struct.cb_args* %args to i8*
  call void @llvm.lifetime.start(i64 72, i8* %9) #1
  %real_cst91 = getelementptr inbounds %union.tree_node* %arg1.addr.0, i64 0, i32 0, i32 2
  %10 = bitcast %struct.realvaluetype* %d1 to i8*
  %11 = bitcast i32* %real_cst91 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10, i8* %11, i64 24, i32 8, i1 false), !tbaa.struct !24
  %real_cst93 = getelementptr inbounds %union.tree_node* %arg2.addr.0, i64 0, i32 0, i32 2
  %12 = bitcast %struct.realvaluetype* %d2 to i8*
  %13 = bitcast i32* %real_cst93 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 24, i32 8, i1 false), !tbaa.struct !24
  %call94 = call i32 @target_isnan(%struct.realvaluetype* byval align 8 %d1) #1
  %tobool = icmp eq i32 %call94, 0
  br i1 %tobool, label %if.else, label %return

if.else:                                          ; preds = %if.then90
  %call96 = call i32 @target_isnan(%struct.realvaluetype* byval align 8 %d2) #1
  %tobool97 = icmp eq i32 %call96, 0
  br i1 %tobool97, label %if.end100, label %return

if.end100:                                        ; preds = %if.else
  %type102 = getelementptr inbounds %union.tree_node* %arg1.addr.0, i64 0, i32 0, i32 0, i32 1
  %14 = load %union.tree_node** %type102, align 8, !tbaa !11
  %type103 = getelementptr inbounds %struct.cb_args* %args, i64 0, i32 1
  store %union.tree_node* %14, %union.tree_node** %type103, align 8, !tbaa !39
  %d1104 = getelementptr inbounds %struct.cb_args* %args, i64 0, i32 2
  %15 = bitcast %struct.realvaluetype* %d1104 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %10, i64 24, i32 8, i1 false), !tbaa.struct !24
  %d2105 = getelementptr inbounds %struct.cb_args* %args, i64 0, i32 3
  %16 = bitcast %struct.realvaluetype* %d2105 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %12, i64 24, i32 8, i1 false), !tbaa.struct !24
  %code106 = getelementptr inbounds %struct.cb_args* %args, i64 0, i32 0
  store i32 %code, i32* %code106, align 8, !tbaa !42
  %call107 = call i32 @do_float_handler(void (i8*)* @const_binop_1, i8* %9) #1
  %tobool108 = icmp eq i32 %call107, 0
  br i1 %tobool108, label %if.else111, label %if.then109

if.then109:                                       ; preds = %if.end100
  %t110 = getelementptr inbounds %struct.cb_args* %args, i64 0, i32 4
  %17 = load %union.tree_node** %t110, align 8, !tbaa !43
  br label %if.end113

if.else111:                                       ; preds = %if.end100
  %call112 = call %union.tree_node* @copy_node(%union.tree_node* %arg1.addr.0) #1
  br label %if.end113

if.end113:                                        ; preds = %if.else111, %if.then109
  %t.0 = phi %union.tree_node* [ %17, %if.then109 ], [ %call112, %if.else111 ]
  %overflow.0 = phi i32 [ 0, %if.then109 ], [ 1, %if.else111 ]
  %call114 = call i32 @force_fit_type(%union.tree_node* %t.0, i32 %overflow.0)
  %bf.load116 = load i32* %code1, align 8
  %bf.lshr117 = lshr i32 %bf.load116, 19
  %or = or i32 %bf.lshr117, %call114
  %bf.load121 = load i32* %code34, align 8
  %bf.lshr122 = lshr i32 %bf.load121, 19
  %or124 = or i32 %or, %bf.lshr122
  %public_flag126 = getelementptr inbounds %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 2
  %bf.load127 = load i32* %public_flag126, align 8
  %bf.value = shl i32 %or124, 19
  %bf.shl = and i32 %bf.value, 524288
  %bf.clear128 = and i32 %bf.load127, -524289
  %bf.set = or i32 %bf.shl, %bf.clear128
  store i32 %bf.set, i32* %public_flag126, align 8
  %bf.load135 = load i32* %code1, align 8
  %bf.load141 = load i32* %code34, align 8
  %bf.clear13326 = shl i32 %or124, 18
  %or13834 = or i32 %bf.clear13326, %bf.load135
  %bf.lshr1425 = or i32 %or13834, %bf.load141
  %bf.shl149 = and i32 %bf.lshr1425, 262144
  %bf.clear150 = and i32 %bf.set, -262145
  %bf.set151 = or i32 %bf.clear150, %bf.shl149
  store i32 %bf.set151, i32* %public_flag126, align 8
  br label %return

if.then158:                                       ; preds = %while.end79
  %type161 = getelementptr inbounds %union.tree_node* %arg1.addr.0, i64 0, i32 0, i32 0, i32 1
  %18 = load %union.tree_node** %type161, align 8, !tbaa !11
  %real = getelementptr inbounds %union.tree_node* %arg1.addr.0, i64 0, i32 0, i32 2
  %19 = bitcast i32* %real to %union.tree_node**
  %20 = load %union.tree_node** %19, align 8, !tbaa !16
  %21 = getelementptr inbounds %union.tree_node* %arg1.addr.0, i64 0, i32 0, i32 4
  %22 = load %union.tree_node** %21, align 8, !tbaa !33
  %real164 = getelementptr inbounds %union.tree_node* %arg2.addr.0, i64 0, i32 0, i32 2
  %23 = bitcast i32* %real164 to %union.tree_node**
  %24 = load %union.tree_node** %23, align 8, !tbaa !16
  %25 = getelementptr inbounds %union.tree_node* %arg2.addr.0, i64 0, i32 0, i32 4
  %26 = load %union.tree_node** %25, align 8, !tbaa !33
  switch i32 %code, label %sw.default [
    i32 59, label %sw.bb
    i32 60, label %sw.bb171
    i32 61, label %sw.bb175
    i32 70, label %sw.bb183
  ]

sw.bb:                                            ; preds = %if.then158
  %call168 = call fastcc %union.tree_node* @const_binop(i32 59, %union.tree_node* %20, %union.tree_node* %24)
  %call169 = call fastcc %union.tree_node* @const_binop(i32 59, %union.tree_node* %22, %union.tree_node* %26)
  %call170 = call %union.tree_node* @build_complex(%union.tree_node* %18, %union.tree_node* %call168, %union.tree_node* %call169) #1
  br label %return

sw.bb171:                                         ; preds = %if.then158
  %call172 = call fastcc %union.tree_node* @const_binop(i32 60, %union.tree_node* %20, %union.tree_node* %24)
  %call173 = call fastcc %union.tree_node* @const_binop(i32 60, %union.tree_node* %22, %union.tree_node* %26)
  %call174 = call %union.tree_node* @build_complex(%union.tree_node* %18, %union.tree_node* %call172, %union.tree_node* %call173) #1
  br label %return

sw.bb175:                                         ; preds = %if.then158
  %call176 = call fastcc %union.tree_node* @const_binop(i32 61, %union.tree_node* %20, %union.tree_node* %24)
  %call177 = call fastcc %union.tree_node* @const_binop(i32 61, %union.tree_node* %22, %union.tree_node* %26)
  %call178 = call fastcc %union.tree_node* @const_binop(i32 60, %union.tree_node* %call176, %union.tree_node* %call177)
  %call179 = call fastcc %union.tree_node* @const_binop(i32 61, %union.tree_node* %20, %union.tree_node* %26)
  %call180 = call fastcc %union.tree_node* @const_binop(i32 61, %union.tree_node* %22, %union.tree_node* %24)
  %call181 = call fastcc %union.tree_node* @const_binop(i32 59, %union.tree_node* %call179, %union.tree_node* %call180)
  %call182 = call %union.tree_node* @build_complex(%union.tree_node* %18, %union.tree_node* %call178, %union.tree_node* %call181) #1
  br label %return

sw.bb183:                                         ; preds = %if.then158
  %call184 = call fastcc %union.tree_node* @const_binop(i32 61, %union.tree_node* %24, %union.tree_node* %24)
  %call185 = call fastcc %union.tree_node* @const_binop(i32 61, %union.tree_node* %26, %union.tree_node* %26)
  %call186 = call fastcc %union.tree_node* @const_binop(i32 59, %union.tree_node* %call184, %union.tree_node* %call185)
  %type188 = getelementptr inbounds %union.tree_node* %20, i64 0, i32 0, i32 0, i32 1
  %27 = load %union.tree_node** %type188, align 8, !tbaa !11
  %code190 = getelementptr inbounds %union.tree_node* %27, i64 0, i32 0, i32 0, i32 2
  %bf.load191 = load i32* %code190, align 8
  %bf.clear192 = and i32 %bf.load191, 255
  switch i32 %bf.clear192, label %lor.rhs [
    i32 6, label %lor.end
    i32 10, label %lor.end
    i32 11, label %lor.end
  ]

lor.rhs:                                          ; preds = %sw.bb183
  %cmp216 = icmp eq i32 %bf.clear192, 12
  %phitmp = select i1 %cmp216, i32 62, i32 70
  br label %lor.end

lor.end:                                          ; preds = %sw.bb183, %sw.bb183, %sw.bb183, %lor.rhs
  %28 = phi i32 [ 62, %sw.bb183 ], [ %phitmp, %lor.rhs ], [ 62, %sw.bb183 ], [ 62, %sw.bb183 ]
  %call217 = call fastcc %union.tree_node* @const_binop(i32 61, %union.tree_node* %20, %union.tree_node* %24)
  %call218 = call fastcc %union.tree_node* @const_binop(i32 61, %union.tree_node* %22, %union.tree_node* %26)
  %call219 = call fastcc %union.tree_node* @const_binop(i32 59, %union.tree_node* %call217, %union.tree_node* %call218)
  %call220 = call fastcc %union.tree_node* @const_binop(i32 %28, %union.tree_node* %call219, %union.tree_node* %call186)
  %29 = load %union.tree_node** %type188, align 8, !tbaa !11
  %code224 = getelementptr inbounds %union.tree_node* %29, i64 0, i32 0, i32 0, i32 2
  %bf.load225 = load i32* %code224, align 8
  %bf.clear226 = and i32 %bf.load225, 255
  switch i32 %bf.clear226, label %lor.rhs244 [
    i32 6, label %lor.end252
    i32 10, label %lor.end252
    i32 11, label %lor.end252
  ]

lor.rhs244:                                       ; preds = %lor.end
  %cmp251 = icmp eq i32 %bf.clear226, 12
  %phitmp1 = select i1 %cmp251, i32 62, i32 70
  br label %lor.end252

lor.end252:                                       ; preds = %lor.end, %lor.end, %lor.end, %lor.rhs244
  %30 = phi i32 [ 62, %lor.end ], [ %phitmp1, %lor.rhs244 ], [ 62, %lor.end ], [ 62, %lor.end ]
  %call254 = call fastcc %union.tree_node* @const_binop(i32 61, %union.tree_node* %22, %union.tree_node* %24)
  %call255 = call fastcc %union.tree_node* @const_binop(i32 61, %union.tree_node* %20, %union.tree_node* %26)
  %call256 = call fastcc %union.tree_node* @const_binop(i32 60, %union.tree_node* %call254, %union.tree_node* %call255)
  %call257 = call fastcc %union.tree_node* @const_binop(i32 %30, %union.tree_node* %call256, %union.tree_node* %call186)
  %call258 = call %union.tree_node* @build_complex(%union.tree_node* %18, %union.tree_node* %call220, %union.tree_node* %call257) #1
  br label %return

sw.default:                                       ; preds = %if.then158
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8]* @.str, i64 0, i64 0), i32 1908, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.const_binop, i64 0, i64 0)) #7
  unreachable

return:                                           ; preds = %while.end79, %sw.bb, %sw.bb171, %sw.bb175, %lor.end252, %if.end113, %if.then90, %if.else, %if.then
  %retval.1 = phi %union.tree_node* [ %call, %if.then ], [ %t.0, %if.end113 ], [ %arg1.addr.0, %if.then90 ], [ %arg2.addr.0, %if.else ], [ %call258, %lor.end252 ], [ %call182, %sw.bb175 ], [ %call174, %sw.bb171 ], [ %call170, %sw.bb ], [ null, %while.end79 ]
  ret %union.tree_node* %retval.1
}

declare i32 @exact_log2_wide(i64) #3

declare i32 @real_zerop(%union.tree_node*) #3

declare i32 @ereal_cmp(%struct.realvaluetype* byval align 8, %struct.realvaluetype* byval align 8) #3

declare i32 @ereal_isneg(%struct.realvaluetype* byval align 8) #3

declare i32 @compare_tree_int(%union.tree_node*, i64) #3

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @split_tree(%union.tree_node* %in, i32 %code, %union.tree_node** nocapture %conp, %union.tree_node** nocapture %litp, %union.tree_node** nocapture %minus_litp, i32 %negate_p) #0 {
entry:
  store %union.tree_node* null, %union.tree_node** %conp, align 8, !tbaa !14
  store %union.tree_node* null, %union.tree_node** %litp, align 8, !tbaa !14
  store %union.tree_node* null, %union.tree_node** %minus_litp, align 8, !tbaa !14
  %0 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !14
  br label %while.cond

while.cond:                                       ; preds = %land.rhs, %entry
  %in.addr.0 = phi %union.tree_node* [ %in, %entry ], [ %1, %land.rhs ]
  %code1 = getelementptr inbounds %union.tree_node* %in.addr.0, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code1, align 8
  %bf.clear = and i32 %bf.load, 255
  %bf.clear.off = add i32 %bf.clear, -114
  %switch = icmp ult i32 %bf.clear.off, 3
  br i1 %switch, label %land.lhs.true, label %while.end

land.lhs.true:                                    ; preds = %while.cond
  %operands = getelementptr inbounds %union.tree_node* %in.addr.0, i64 0, i32 0, i32 2
  %arrayidx = bitcast i32* %operands to %union.tree_node**
  %1 = load %union.tree_node** %arrayidx, align 8, !tbaa !14
  %cmp13 = icmp eq %union.tree_node* %1, %0
  br i1 %cmp13, label %while.end, label %land.lhs.true14

land.lhs.true14:                                  ; preds = %land.lhs.true
  %type = getelementptr inbounds %union.tree_node* %in.addr.0, i64 0, i32 0, i32 0, i32 1
  %2 = load %union.tree_node** %type, align 8, !tbaa !11
  %type16 = bitcast %union.tree_node* %2 to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type* %type16, i64 0, i32 6
  %bf.load17 = load i32* %mode, align 4
  %type23 = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 0, i32 1
  %3 = load %union.tree_node** %type23, align 8, !tbaa !11
  %type24 = bitcast %union.tree_node* %3 to %struct.tree_type*
  %mode25 = getelementptr inbounds %struct.tree_type* %type24, i64 0, i32 6
  %bf.load26 = load i32* %mode25, align 4
  %bf.lshr282 = xor i32 %bf.load26, %bf.load17
  %4 = and i32 %bf.lshr282, 65024
  %cmp29 = icmp eq i32 %4, 0
  br i1 %cmp29, label %land.rhs, label %while.end

land.rhs:                                         ; preds = %land.lhs.true14
  %unsigned_flag = getelementptr inbounds %union.tree_node* %2, i64 0, i32 0, i32 0, i32 2
  %bf.load33 = load i32* %unsigned_flag, align 8
  %unsigned_flag42 = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 0, i32 2
  %bf.load43 = load i32* %unsigned_flag42, align 8
  %bf.lshr34283 = xor i32 %bf.load43, %bf.load33
  %5 = and i32 %bf.lshr34283, 8192
  %cmp46 = icmp eq i32 %5, 0
  br i1 %cmp46, label %while.cond, label %while.end

while.end:                                        ; preds = %while.cond, %land.lhs.true, %land.lhs.true14, %land.rhs
  %bf.clear53.off = add i32 %bf.clear, -25
  %switch286 = icmp ult i32 %bf.clear53.off, 2
  br i1 %switch286, label %if.then, label %if.else

if.then:                                          ; preds = %while.end
  store %union.tree_node* %in.addr.0, %union.tree_node** %litp, align 8, !tbaa !14
  br label %if.end205

if.else:                                          ; preds = %while.end
  %cmp65 = icmp eq i32 %bf.clear, %code
  br i1 %cmp65, label %if.then108, label %lor.lhs.false66

lor.lhs.false66:                                  ; preds = %if.else
  %type68 = getelementptr inbounds %union.tree_node* %in.addr.0, i64 0, i32 0, i32 0, i32 1
  %6 = load %union.tree_node** %type68, align 8, !tbaa !11
  %code70 = getelementptr inbounds %union.tree_node* %6, i64 0, i32 0, i32 0, i32 2
  %bf.load71 = load i32* %code70, align 8
  %bf.clear72 = and i32 %bf.load71, 255
  switch i32 %bf.clear72, label %land.lhs.true92 [
    i32 7, label %if.else194
    i32 8, label %land.lhs.true82
  ]

land.lhs.true82:                                  ; preds = %lor.lhs.false66
  %type86 = getelementptr inbounds %union.tree_node* %6, i64 0, i32 0, i32 0, i32 1
  %7 = load %union.tree_node** %type86, align 8, !tbaa !11
  %code88 = getelementptr inbounds %union.tree_node* %7, i64 0, i32 0, i32 0, i32 2
  %bf.load89 = load i32* %code88, align 8
  %bf.clear90 = and i32 %bf.load89, 255
  %cmp91 = icmp eq i32 %bf.clear90, 7
  br i1 %cmp91, label %if.else194, label %land.lhs.true92

land.lhs.true92:                                  ; preds = %lor.lhs.false66, %land.lhs.true82
  switch i32 %code, label %if.else194 [
    i32 59, label %land.lhs.true94
    i32 60, label %land.lhs.true102
  ]

land.lhs.true94:                                  ; preds = %land.lhs.true92
  %cmp99 = icmp eq i32 %bf.clear, 60
  br i1 %cmp99, label %if.then108, label %if.else194

land.lhs.true102:                                 ; preds = %land.lhs.true92
  %cmp107 = icmp eq i32 %bf.clear, 59
  br i1 %cmp107, label %if.then108, label %if.else194

if.then108:                                       ; preds = %land.lhs.true102, %land.lhs.true94, %if.else
  %operands110 = getelementptr inbounds %union.tree_node* %in.addr.0, i64 0, i32 0, i32 2
  %arrayidx111 = bitcast i32* %operands110 to %union.tree_node**
  %8 = load %union.tree_node** %arrayidx111, align 8, !tbaa !14
  %arrayidx114 = getelementptr inbounds i32* %operands110, i64 2
  %9 = bitcast i32* %arrayidx114 to %union.tree_node**
  %10 = load %union.tree_node** %9, align 8, !tbaa !14
  %cmp119 = icmp eq i32 %bf.clear, 60
  %conv = zext i1 %cmp119 to i32
  %code121 = getelementptr inbounds %union.tree_node* %8, i64 0, i32 0, i32 0, i32 2
  %bf.load122 = load i32* %code121, align 8
  %bf.clear123 = and i32 %bf.load122, 255
  %bf.clear123.off = add i32 %bf.clear123, -25
  %switch287 = icmp ult i32 %bf.clear123.off, 2
  br i1 %switch287, label %if.end149.thread, label %if.else134

if.end149.thread:                                 ; preds = %if.then108
  store %union.tree_node* %8, %union.tree_node** %litp, align 8, !tbaa !14
  br label %if.else158

if.else134:                                       ; preds = %if.then108
  %code136 = getelementptr inbounds %union.tree_node* %10, i64 0, i32 0, i32 0, i32 2
  %bf.load137 = load i32* %code136, align 8
  %bf.clear138 = and i32 %bf.load137, 255
  %bf.clear138.off = add i32 %bf.clear138, -25
  %switch288 = icmp ult i32 %bf.clear138.off, 2
  br i1 %switch288, label %if.then148, label %if.end149

if.then148:                                       ; preds = %if.else134
  store %union.tree_node* %10, %union.tree_node** %litp, align 8, !tbaa !14
  br label %if.end149

if.end149:                                        ; preds = %if.else134, %if.then148
  %op1.0 = phi %union.tree_node* [ null, %if.then148 ], [ %10, %if.else134 ]
  %neg_litp_p.0 = phi i32 [ %conv, %if.then148 ], [ 0, %if.else134 ]
  %cmp150 = icmp eq %union.tree_node* %8, null
  br i1 %cmp150, label %if.else158, label %land.lhs.true152

land.lhs.true152:                                 ; preds = %if.end149
  %bf.load154 = load i32* %code121, align 8
  %bf.clear156 = and i32 %bf.load154, 512
  %tobool = icmp eq i32 %bf.clear156, 0
  br i1 %tobool, label %if.else158, label %if.then157

if.then157:                                       ; preds = %land.lhs.true152
  store %union.tree_node* %8, %union.tree_node** %conp, align 8, !tbaa !14
  br label %if.end170.thread

if.else158:                                       ; preds = %if.end149.thread, %land.lhs.true152, %if.end149
  %neg_litp_p.0293 = phi i32 [ 0, %if.end149.thread ], [ %neg_litp_p.0, %land.lhs.true152 ], [ %neg_litp_p.0, %if.end149 ]
  %op1.0291 = phi %union.tree_node* [ %10, %if.end149.thread ], [ %op1.0, %land.lhs.true152 ], [ %op1.0, %if.end149 ]
  %op0.0290 = phi %union.tree_node* [ null, %if.end149.thread ], [ %8, %land.lhs.true152 ], [ null, %if.end149 ]
  %cmp159 = icmp eq %union.tree_node* %op1.0291, null
  br i1 %cmp159, label %if.end170.thread, label %land.lhs.true161

land.lhs.true161:                                 ; preds = %if.else158
  %constant_flag163 = getelementptr inbounds %union.tree_node* %op1.0291, i64 0, i32 0, i32 0, i32 2
  %bf.load164 = load i32* %constant_flag163, align 8
  %bf.clear166 = and i32 %bf.load164, 512
  %tobool167 = icmp eq i32 %bf.clear166, 0
  br i1 %tobool167, label %if.end170, label %if.then168

if.then168:                                       ; preds = %land.lhs.true161
  store %union.tree_node* %op1.0291, %union.tree_node** %conp, align 8, !tbaa !14
  br label %if.end170.thread

if.end170.thread:                                 ; preds = %if.then157, %if.then168, %if.else158
  %neg_litp_p.0292.ph = phi i32 [ %neg_litp_p.0, %if.then157 ], [ %neg_litp_p.0293, %if.then168 ], [ %neg_litp_p.0293, %if.else158 ]
  %op0.1.ph = phi %union.tree_node* [ null, %if.then157 ], [ %op0.0290, %if.then168 ], [ %op0.0290, %if.else158 ]
  %op1.1.ph = phi %union.tree_node* [ %op1.0, %if.then157 ], [ null, %if.then168 ], [ null, %if.else158 ]
  %neg_conp_p.0.ph = phi i32 [ 0, %if.then157 ], [ %conv, %if.then168 ], [ 0, %if.else158 ]
  %cmp171294 = icmp ne %union.tree_node* %op0.1.ph, null
  br label %if.else177

if.end170:                                        ; preds = %land.lhs.true161
  %cmp171 = icmp eq %union.tree_node* %op0.0290, null
  br i1 %cmp171, label %if.else177, label %if.end183

if.else177:                                       ; preds = %if.end170, %if.end170.thread
  %cmp171303 = phi i1 [ %cmp171294, %if.end170.thread ], [ false, %if.end170 ]
  %neg_conp_p.0301 = phi i32 [ %neg_conp_p.0.ph, %if.end170.thread ], [ 0, %if.end170 ]
  %op1.1300 = phi %union.tree_node* [ %op1.1.ph, %if.end170.thread ], [ %op1.0291, %if.end170 ]
  %op0.1299 = phi %union.tree_node* [ %op0.1.ph, %if.end170.thread ], [ null, %if.end170 ]
  %neg_litp_p.0292297 = phi i32 [ %neg_litp_p.0292.ph, %if.end170.thread ], [ %neg_litp_p.0293, %if.end170 ]
  %op0.1.op1.1 = select i1 %cmp171303, %union.tree_node* %op0.1299, %union.tree_node* %op1.1300
  %.conv = select i1 %cmp171303, i32 0, i32 %conv
  br label %if.end183

if.end183:                                        ; preds = %if.end170, %if.else177
  %neg_conp_p.0302 = phi i32 [ 0, %if.end170 ], [ %neg_conp_p.0301, %if.else177 ]
  %neg_litp_p.0292298 = phi i32 [ %neg_litp_p.0293, %if.end170 ], [ %neg_litp_p.0292297, %if.else177 ]
  %var.0 = phi %union.tree_node* [ %in.addr.0, %if.end170 ], [ %op0.1.op1.1, %if.else177 ]
  %neg_var_p.0 = phi i32 [ 0, %if.end170 ], [ %.conv, %if.else177 ]
  %tobool184 = icmp eq i32 %neg_litp_p.0292298, 0
  br i1 %tobool184, label %if.end186, label %if.then185

if.then185:                                       ; preds = %if.end183
  %11 = load %union.tree_node** %litp, align 8, !tbaa !14
  store %union.tree_node* %11, %union.tree_node** %minus_litp, align 8, !tbaa !14
  store %union.tree_node* null, %union.tree_node** %litp, align 8, !tbaa !14
  br label %if.end186

if.end186:                                        ; preds = %if.end183, %if.then185
  %tobool187 = icmp eq i32 %neg_conp_p.0302, 0
  br i1 %tobool187, label %if.end189, label %if.then188

if.then188:                                       ; preds = %if.end186
  %12 = load %union.tree_node** %conp, align 8, !tbaa !14
  %call = tail call fastcc %union.tree_node* @negate_expr(%union.tree_node* %12)
  store %union.tree_node* %call, %union.tree_node** %conp, align 8, !tbaa !14
  br label %if.end189

if.end189:                                        ; preds = %if.end186, %if.then188
  %tobool190 = icmp eq i32 %neg_var_p.0, 0
  br i1 %tobool190, label %if.end205, label %if.then191

if.then191:                                       ; preds = %if.end189
  %call192 = tail call fastcc %union.tree_node* @negate_expr(%union.tree_node* %var.0)
  br label %if.end205

if.else194:                                       ; preds = %land.lhs.true94, %land.lhs.true92, %lor.lhs.false66, %land.lhs.true102, %land.lhs.true82
  %bf.clear199 = and i32 %bf.load, 512
  %tobool200 = icmp eq i32 %bf.clear199, 0
  br i1 %tobool200, label %if.end205, label %if.then201

if.then201:                                       ; preds = %if.else194
  store %union.tree_node* %in.addr.0, %union.tree_node** %conp, align 8, !tbaa !14
  br label %if.end205

if.end205:                                        ; preds = %if.else194, %if.end189, %if.then191, %if.then201, %if.then
  %var.1 = phi %union.tree_node* [ null, %if.then ], [ %call192, %if.then191 ], [ %var.0, %if.end189 ], [ null, %if.then201 ], [ %in.addr.0, %if.else194 ]
  %tobool206 = icmp eq i32 %negate_p, 0
  br i1 %tobool206, label %if.end217, label %if.then207

if.then207:                                       ; preds = %if.end205
  %13 = load %union.tree_node** %litp, align 8, !tbaa !14
  %tobool208 = icmp eq %union.tree_node* %13, null
  br i1 %tobool208, label %if.else210, label %if.then209

if.then209:                                       ; preds = %if.then207
  store %union.tree_node* %13, %union.tree_node** %minus_litp, align 8, !tbaa !14
  store %union.tree_node* null, %union.tree_node** %litp, align 8, !tbaa !14
  br label %if.end214

if.else210:                                       ; preds = %if.then207
  %14 = load %union.tree_node** %minus_litp, align 8, !tbaa !14
  %tobool211 = icmp eq %union.tree_node* %14, null
  br i1 %tobool211, label %if.end214, label %if.then212

if.then212:                                       ; preds = %if.else210
  store %union.tree_node* %14, %union.tree_node** %litp, align 8, !tbaa !14
  store %union.tree_node* null, %union.tree_node** %minus_litp, align 8, !tbaa !14
  br label %if.end214

if.end214:                                        ; preds = %if.else210, %if.then212, %if.then209
  %15 = load %union.tree_node** %conp, align 8, !tbaa !14
  %call215 = tail call fastcc %union.tree_node* @negate_expr(%union.tree_node* %15)
  store %union.tree_node* %call215, %union.tree_node** %conp, align 8, !tbaa !14
  %call216 = tail call fastcc %union.tree_node* @negate_expr(%union.tree_node* %var.1)
  br label %if.end217

if.end217:                                        ; preds = %if.end205, %if.end214
  %var.2 = phi %union.tree_node* [ %call216, %if.end214 ], [ %var.1, %if.end205 ]
  ret %union.tree_node* %var.2
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @associate_trees(%union.tree_node* %t1, %union.tree_node* %t2, i32 %code, %union.tree_node* %type) #0 {
entry:
  %cmp = icmp eq %union.tree_node* %t1, null
  br i1 %cmp, label %return, label %if.else

if.else:                                          ; preds = %entry
  %cmp1 = icmp eq %union.tree_node* %t2, null
  br i1 %cmp1, label %return, label %if.end3

if.end3:                                          ; preds = %if.else
  %code4 = getelementptr inbounds %union.tree_node* %t1, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code4, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp5 = icmp eq i32 %bf.clear, %code
  br i1 %cmp5, label %if.then23, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end3
  %code7 = getelementptr inbounds %union.tree_node* %t2, i64 0, i32 0, i32 0, i32 2
  %bf.load8 = load i32* %code7, align 8
  %bf.clear9 = and i32 %bf.load8, 255
  %cmp10 = icmp eq i32 %bf.clear9, %code
  %cmp16 = icmp eq i32 %bf.clear, 60
  %or.cond = or i1 %cmp10, %cmp16
  %cmp22 = icmp eq i32 %bf.clear9, 60
  %or.cond82 = or i1 %or.cond, %cmp22
  br i1 %or.cond82, label %if.then23, label %if.end49

if.then23:                                        ; preds = %lor.lhs.false, %if.end3
  %cmp28 = icmp eq i32 %bf.clear, 77
  br i1 %cmp28, label %if.then29, label %if.else32

if.then29:                                        ; preds = %if.then23
  %call = tail call %union.tree_node* @convert(%union.tree_node* %type, %union.tree_node* %t2) #1
  %operands = getelementptr inbounds %union.tree_node* %t1, i64 0, i32 0, i32 2
  %arrayidx = bitcast i32* %operands to %union.tree_node**
  %0 = load %union.tree_node** %arrayidx, align 8, !tbaa !14
  %call30 = tail call %union.tree_node* @convert(%union.tree_node* %type, %union.tree_node* %0) #1
  %call31 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 60, %union.tree_node* %type, %union.tree_node* %call, %union.tree_node* %call30) #1
  br label %return

if.else32:                                        ; preds = %if.then23
  %code34 = getelementptr inbounds %union.tree_node* %t2, i64 0, i32 0, i32 0, i32 2
  %bf.load35 = load i32* %code34, align 8
  %bf.clear36 = and i32 %bf.load35, 255
  %cmp37 = icmp eq i32 %bf.clear36, 77
  %call39 = tail call %union.tree_node* @convert(%union.tree_node* %type, %union.tree_node* %t1) #1
  br i1 %cmp37, label %if.then38, label %if.else45

if.then38:                                        ; preds = %if.else32
  %operands41 = getelementptr inbounds %union.tree_node* %t2, i64 0, i32 0, i32 2
  %arrayidx42 = bitcast i32* %operands41 to %union.tree_node**
  %1 = load %union.tree_node** %arrayidx42, align 8, !tbaa !14
  %call43 = tail call %union.tree_node* @convert(%union.tree_node* %type, %union.tree_node* %1) #1
  %call44 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 60, %union.tree_node* %type, %union.tree_node* %call39, %union.tree_node* %call43) #1
  br label %return

if.else45:                                        ; preds = %if.else32
  %call47 = tail call %union.tree_node* @convert(%union.tree_node* %type, %union.tree_node* %t2) #1
  %call48 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %code, %union.tree_node* %type, %union.tree_node* %call39, %union.tree_node* %call47) #1
  br label %return

if.end49:                                         ; preds = %lor.lhs.false
  %call50 = tail call %union.tree_node* @convert(%union.tree_node* %type, %union.tree_node* %t1) #1
  %call51 = tail call %union.tree_node* @convert(%union.tree_node* %type, %union.tree_node* %t2) #1
  %call52 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %code, %union.tree_node* %type, %union.tree_node* %call50, %union.tree_node* %call51) #1
  %call53 = tail call %union.tree_node* @fold(%union.tree_node* %call52)
  br label %return

return:                                           ; preds = %if.else, %entry, %if.end49, %if.else45, %if.then38, %if.then29
  %retval.0 = phi %union.tree_node* [ %call31, %if.then29 ], [ %call44, %if.then38 ], [ %call48, %if.else45 ], [ %call53, %if.end49 ], [ %t2, %entry ], [ %t1, %if.else ]
  ret %union.tree_node* %retval.0
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @extract_muldiv(%union.tree_node* %t, %union.tree_node* %c, i32 %code, %union.tree_node* %wide_type) #0 {
entry:
  %cmp = icmp eq %union.tree_node* %wide_type, null
  %type4 = bitcast %union.tree_node* %wide_type to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type* %type4, i64 0, i32 6
  br label %tailrecurse

tailrecurse:                                      ; preds = %if.then313, %entry
  %t.tr = phi %union.tree_node* [ %t, %entry ], [ %call318, %if.then313 ]
  %type1 = getelementptr inbounds %union.tree_node* %t.tr, i64 0, i32 0, i32 0, i32 1
  %0 = load %union.tree_node** %type1, align 8, !tbaa !11
  %code3 = getelementptr inbounds %union.tree_node* %t.tr, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code3, align 8
  %bf.clear = and i32 %bf.load, 255
  br i1 %cmp, label %cond.false, label %land.lhs.true

land.lhs.true:                                    ; preds = %tailrecurse
  %bf.load5 = load i32* %mode, align 4
  %bf.lshr = lshr i32 %bf.load5, 9
  %bf.clear6 = and i32 %bf.lshr, 127
  %idxprom858 = zext i32 %bf.clear6 to i64
  %arrayidx = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom858
  %1 = load i8* %arrayidx, align 1, !tbaa !15
  %type7 = bitcast %union.tree_node* %0 to %struct.tree_type*
  %mode8 = getelementptr inbounds %struct.tree_type* %type7, i64 0, i32 6
  %bf.load9 = load i32* %mode8, align 4
  %bf.lshr10 = lshr i32 %bf.load9, 9
  %bf.clear11 = and i32 %bf.lshr10, 127
  %idxprom12859 = zext i32 %bf.clear11 to i64
  %arrayidx13 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom12859
  %2 = load i8* %arrayidx13, align 1, !tbaa !15
  %cmp15 = icmp ugt i8 %1, %2
  br i1 %cmp15, label %cond.end, label %cond.false

cond.false:                                       ; preds = %tailrecurse, %land.lhs.true
  br label %cond.end

cond.end:                                         ; preds = %land.lhs.true, %cond.false
  %cond = phi %union.tree_node* [ %0, %cond.false ], [ %wide_type, %land.lhs.true ]
  %call = tail call i32 @integer_zerop(%union.tree_node* %c) #1
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.end, label %return

if.end:                                           ; preds = %cond.end
  %idxprom19852 = zext i32 %bf.clear to i64
  %arrayidx20 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom19852
  %3 = load i8* %arrayidx20, align 1, !tbaa !15
  switch i8 %3, label %if.end39 [
    i8 49, label %if.end26.thread
    i8 50, label %if.then32
  ]

if.end26.thread:                                  ; preds = %if.end
  %operands = getelementptr inbounds %union.tree_node* %t.tr, i64 0, i32 0, i32 2
  %arrayidx25 = bitcast i32* %operands to %union.tree_node**
  %4 = load %union.tree_node** %arrayidx25, align 8, !tbaa !14
  br label %if.end39

if.then32:                                        ; preds = %if.end
  %operands34 = getelementptr inbounds %union.tree_node* %t.tr, i64 0, i32 0, i32 2
  %arrayidx35 = bitcast i32* %operands34 to %union.tree_node**
  %5 = load %union.tree_node** %arrayidx35, align 8, !tbaa !14
  %arrayidx38 = getelementptr inbounds i32* %operands34, i64 2
  %6 = bitcast i32* %arrayidx38 to %union.tree_node**
  %7 = load %union.tree_node** %6, align 8, !tbaa !14
  br label %if.end39

if.end39:                                         ; preds = %if.end, %if.end26.thread, %if.then32
  %op0.1 = phi %union.tree_node* [ %5, %if.then32 ], [ %4, %if.end26.thread ], [ null, %if.end ]
  %op1.0 = phi %union.tree_node* [ %7, %if.then32 ], [ null, %if.end26.thread ], [ null, %if.end ]
  switch i32 %bf.clear, label %sw.epilog [
    i32 25, label %sw.bb
    i32 114, label %sw.bb50
    i32 116, label %sw.bb50
    i32 115, label %sw.bb50
    i32 77, label %sw.bb173
    i32 80, label %sw.bb173
    i32 78, label %sw.bb182
    i32 79, label %sw.bb182
    i32 58, label %sw.bb218
    i32 118, label %sw.bb233
    i32 82, label %sw.bb280
    i32 83, label %sw.bb280
    i32 59, label %sw.bb321
    i32 60, label %sw.bb321
    i32 61, label %sw.bb460
    i32 62, label %sw.bb489.loopexit
    i32 63, label %sw.bb489.loopexit
    i32 64, label %sw.bb489.loopexit
    i32 65, label %sw.bb489.loopexit
    i32 71, label %sw.bb489.loopexit
  ]

sw.bb:                                            ; preds = %if.end39
  %cmp40 = icmp eq i32 %code, 61
  br i1 %cmp40, label %if.then45, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %sw.bb
  %call42 = tail call fastcc %union.tree_node* @const_binop(i32 66, %union.tree_node* %t.tr, %union.tree_node* %c)
  %call43 = tail call i32 @integer_zerop(%union.tree_node* %call42) #1
  %tobool44 = icmp eq i32 %call43, 0
  br i1 %tobool44, label %sw.epilog, label %if.then45

if.then45:                                        ; preds = %lor.lhs.false, %sw.bb
  %call46 = tail call %union.tree_node* @convert(%union.tree_node* %cond, %union.tree_node* %t.tr) #1
  %call47 = tail call %union.tree_node* @convert(%union.tree_node* %cond, %union.tree_node* %c) #1
  %call48 = tail call fastcc %union.tree_node* @const_binop(i32 %code, %union.tree_node* %call46, %union.tree_node* %call47)
  br label %return

sw.bb50:                                          ; preds = %if.end39, %if.end39, %if.end39
  %code52 = getelementptr inbounds %union.tree_node* %op0.1, i64 0, i32 0, i32 0, i32 2
  %bf.load53 = load i32* %code52, align 8
  %bf.clear54 = and i32 %bf.load53, 255
  %idxprom55853 = zext i32 %bf.clear54 to i64
  %arrayidx56 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom55853
  %8 = load i8* %arrayidx56, align 1, !tbaa !15
  switch i8 %8, label %sw.bb50.if.end158_crit_edge [
    i8 60, label %land.lhs.true90
    i8 49, label %land.lhs.true90
    i8 50, label %land.lhs.true90
    i8 101, label %land.lhs.true90
  ]

sw.bb50.if.end158_crit_edge:                      ; preds = %sw.bb50
  %type160.phi.trans.insert = getelementptr inbounds %union.tree_node* %op0.1, i64 0, i32 0, i32 0, i32 1
  %.pre = load %union.tree_node** %type160.phi.trans.insert, align 8, !tbaa !11
  br label %if.end158

land.lhs.true90:                                  ; preds = %sw.bb50, %sw.bb50, %sw.bb50, %sw.bb50
  %type92 = getelementptr inbounds %union.tree_node* %op0.1, i64 0, i32 0, i32 0, i32 1
  %9 = load %union.tree_node** %type92, align 8, !tbaa !11
  %unsigned_flag = getelementptr inbounds %union.tree_node* %9, i64 0, i32 0, i32 0, i32 2
  %bf.load94 = load i32* %unsigned_flag, align 8
  %bf.clear96 = and i32 %bf.load94, 8192
  %tobool97 = icmp eq i32 %bf.clear96, 0
  br i1 %tobool97, label %land.lhs.true90.lor.lhs.false136_crit_edge, label %land.lhs.true98

land.lhs.true90.lor.lhs.false136_crit_edge:       ; preds = %land.lhs.true90
  %type147.phi.trans.insert = bitcast %union.tree_node* %9 to %struct.tree_type*
  %mode148.phi.trans.insert = getelementptr inbounds %struct.tree_type* %type147.phi.trans.insert, i64 0, i32 6
  %bf.load149.pre = load i32* %mode148.phi.trans.insert, align 4
  br label %lor.lhs.false136

land.lhs.true98:                                  ; preds = %land.lhs.true90
  %bf.clear104 = and i32 %bf.load94, 255
  %cmp105 = icmp ne i32 %bf.clear104, 6
  %type110 = bitcast %union.tree_node* %9 to %struct.tree_type*
  %no_force_blk_flag = getelementptr inbounds %struct.tree_type* %type110, i64 0, i32 6
  %bf.load111 = load i32* %no_force_blk_flag, align 4
  %bf.clear113 = and i32 %bf.load111, 131072
  %tobool114 = icmp eq i32 %bf.clear113, 0
  %or.cond1044 = or i1 %cmp105, %tobool114
  br i1 %or.cond1044, label %land.lhs.true115, label %lor.lhs.false136

land.lhs.true115:                                 ; preds = %land.lhs.true98
  %type116 = bitcast %union.tree_node* %cond to %struct.tree_type*
  %mode117 = getelementptr inbounds %struct.tree_type* %type116, i64 0, i32 6
  %bf.load118 = load i32* %mode117, align 4
  %bf.lshr119 = lshr i32 %bf.load118, 9
  %bf.clear120 = and i32 %bf.lshr119, 127
  %idxprom121856 = zext i32 %bf.clear120 to i64
  %arrayidx122 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom121856
  %10 = load i8* %arrayidx122, align 1, !tbaa !15
  %bf.lshr129 = lshr i32 %bf.load111, 9
  %bf.clear130 = and i32 %bf.lshr129, 127
  %idxprom131857 = zext i32 %bf.clear130 to i64
  %arrayidx132 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom131857
  %11 = load i8* %arrayidx132, align 1, !tbaa !15
  %cmp134 = icmp ugt i8 %10, %11
  br i1 %cmp134, label %sw.epilog, label %lor.lhs.false136

lor.lhs.false136:                                 ; preds = %land.lhs.true98, %land.lhs.true90.lor.lhs.false136_crit_edge, %land.lhs.true115
  %bf.load149 = phi i32 [ %bf.load149.pre, %land.lhs.true90.lor.lhs.false136_crit_edge ], [ %bf.load111, %land.lhs.true115 ], [ %bf.load111, %land.lhs.true98 ]
  %type137 = bitcast %union.tree_node* %cond to %struct.tree_type*
  %mode138 = getelementptr inbounds %struct.tree_type* %type137, i64 0, i32 6
  %bf.load139 = load i32* %mode138, align 4
  %bf.lshr140 = lshr i32 %bf.load139, 9
  %bf.clear141 = and i32 %bf.lshr140, 127
  %idxprom142854 = zext i32 %bf.clear141 to i64
  %arrayidx143 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom142854
  %12 = load i8* %arrayidx143, align 1, !tbaa !15
  %bf.lshr150 = lshr i32 %bf.load149, 9
  %bf.clear151 = and i32 %bf.lshr150, 127
  %idxprom152855 = zext i32 %bf.clear151 to i64
  %arrayidx153 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom152855
  %13 = load i8* %arrayidx153, align 1, !tbaa !15
  %cmp155 = icmp ult i8 %12, %13
  br i1 %cmp155, label %sw.epilog, label %if.end158

if.end158:                                        ; preds = %sw.bb50.if.end158_crit_edge, %lor.lhs.false136
  %14 = phi %union.tree_node* [ %.pre, %sw.bb50.if.end158_crit_edge ], [ %9, %lor.lhs.false136 ]
  %call161 = tail call %union.tree_node* @convert(%union.tree_node* %14, %union.tree_node* %c) #1
  %cmp162 = icmp eq i32 %code, 61
  %cond167 = select i1 %cmp162, %union.tree_node* %cond, %union.tree_node* null
  %call168 = tail call fastcc %union.tree_node* @extract_muldiv(%union.tree_node* %op0.1, %union.tree_node* %call161, i32 %code, %union.tree_node* %cond167)
  %cmp169 = icmp eq %union.tree_node* %call168, null
  br i1 %cmp169, label %sw.epilog, label %return

sw.bb173:                                         ; preds = %if.end39, %if.end39
  %call174 = tail call fastcc %union.tree_node* @extract_muldiv(%union.tree_node* %op0.1, %union.tree_node* %c, i32 %code, %union.tree_node* %wide_type)
  %cmp175 = icmp eq %union.tree_node* %call174, null
  br i1 %cmp175, label %sw.epilog, label %if.then177

if.then177:                                       ; preds = %sw.bb173
  %call178 = tail call %union.tree_node* @convert(%union.tree_node* %cond, %union.tree_node* %call174) #1
  %call179 = tail call %union.tree_node* @build1(i32 %bf.clear, %union.tree_node* %cond, %union.tree_node* %call178) #1
  %call180 = tail call %union.tree_node* @fold(%union.tree_node* %call179)
  br label %return

sw.bb182:                                         ; preds = %if.end39, %if.end39
  %unsigned_flag184 = getelementptr inbounds %union.tree_node* %cond, i64 0, i32 0, i32 0, i32 2
  %bf.load185 = load i32* %unsigned_flag184, align 8
  %unsigned_flag189 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2
  %bf.load190 = load i32* %unsigned_flag189, align 8
  %bf.lshr186860 = xor i32 %bf.load190, %bf.load185
  %15 = and i32 %bf.lshr186860, 8192
  %cmp193 = icmp eq i32 %15, 0
  br i1 %cmp193, label %if.end196, label %sw.epilog

if.end196:                                        ; preds = %sw.bb182
  %call197 = tail call fastcc %union.tree_node* @extract_muldiv(%union.tree_node* %op0.1, %union.tree_node* %c, i32 %code, %union.tree_node* %wide_type)
  %cmp198 = icmp eq %union.tree_node* %call197, null
  br i1 %cmp198, label %sw.epilog, label %land.lhs.true200

land.lhs.true200:                                 ; preds = %if.end196
  %call201 = tail call fastcc %union.tree_node* @extract_muldiv(%union.tree_node* %op1.0, %union.tree_node* %c, i32 %code, %union.tree_node* %wide_type)
  %cmp202 = icmp eq %union.tree_node* %call201, null
  br i1 %cmp202, label %sw.epilog, label %if.then204

if.then204:                                       ; preds = %land.lhs.true200
  %call205 = tail call i32 @tree_int_cst_sgn(%union.tree_node* %c) #1
  %cmp206 = icmp slt i32 %call205, 0
  br i1 %cmp206, label %if.then208, label %if.end212

if.then208:                                       ; preds = %if.then204
  %cmp209 = icmp eq i32 %bf.clear, 78
  %cond211 = select i1 %cmp209, i32 79, i32 78
  br label %if.end212

if.end212:                                        ; preds = %if.then208, %if.then204
  %tcode.0 = phi i32 [ %cond211, %if.then208 ], [ %bf.clear, %if.then204 ]
  %call213 = tail call %union.tree_node* @convert(%union.tree_node* %cond, %union.tree_node* %call197) #1
  %call214 = tail call %union.tree_node* @convert(%union.tree_node* %cond, %union.tree_node* %call201) #1
  %call215 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %tcode.0, %union.tree_node* %cond, %union.tree_node* %call213, %union.tree_node* %call214) #1
  %call216 = tail call %union.tree_node* @fold(%union.tree_node* %call215)
  br label %return

sw.bb218:                                         ; preds = %if.end39
  %operands220 = getelementptr inbounds %union.tree_node* %t.tr, i64 0, i32 0, i32 2
  %arrayidx221 = bitcast i32* %operands220 to %union.tree_node**
  %16 = load %union.tree_node** %arrayidx221, align 8, !tbaa !14
  %call222 = tail call fastcc %union.tree_node* @extract_muldiv(%union.tree_node* %16, %union.tree_node* %c, i32 %code, %union.tree_node* %wide_type)
  %cmp223 = icmp eq %union.tree_node* %call222, null
  br i1 %cmp223, label %sw.epilog, label %if.then225

if.then225:                                       ; preds = %sw.bb218
  %type227 = getelementptr inbounds %union.tree_node* %call222, i64 0, i32 0, i32 0, i32 1
  %17 = load %union.tree_node** %type227, align 8, !tbaa !11
  %arrayidx230 = getelementptr inbounds i32* %operands220, i64 2
  %18 = bitcast i32* %arrayidx230 to %union.tree_node**
  %19 = load %union.tree_node** %18, align 8, !tbaa !14
  %call231 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 58, %union.tree_node* %17, %union.tree_node* %call222, %union.tree_node* %19) #1
  br label %return

sw.bb233:                                         ; preds = %if.end39
  %operands235 = getelementptr inbounds %union.tree_node* %t.tr, i64 0, i32 0, i32 2
  %arrayidx236 = getelementptr inbounds i32* %operands235, i64 4
  %20 = bitcast i32* %arrayidx236 to %struct.rtx_def**
  %21 = load %struct.rtx_def** %20, align 8, !tbaa !14
  %cmp237 = icmp eq %struct.rtx_def* %21, null
  br i1 %cmp237, label %land.lhs.true239, label %sw.epilog

land.lhs.true239:                                 ; preds = %sw.bb233
  %arrayidx242 = bitcast i32* %operands235 to %union.tree_node**
  %22 = load %union.tree_node** %arrayidx242, align 8, !tbaa !14
  %side_effects_flag = getelementptr inbounds %union.tree_node* %22, i64 0, i32 0, i32 0, i32 2
  %bf.load244 = load i32* %side_effects_flag, align 8
  %bf.clear246 = and i32 %bf.load244, 256
  %tobool247 = icmp eq i32 %bf.clear246, 0
  br i1 %tobool247, label %land.lhs.true248, label %sw.epilog

land.lhs.true248:                                 ; preds = %land.lhs.true239
  %call252 = tail call fastcc %union.tree_node* @extract_muldiv(%union.tree_node* %22, %union.tree_node* %c, i32 %code, %union.tree_node* %wide_type)
  %cmp253 = icmp eq %union.tree_node* %call252, null
  br i1 %cmp253, label %sw.epilog, label %if.then255

if.then255:                                       ; preds = %land.lhs.true248
  %call256 = tail call %union.tree_node* @save_expr(%union.tree_node* %call252) #1
  %bf.load258 = load i32* %code3, align 8
  %bf.clear260 = and i32 %bf.load258, 16384
  %tobool261 = icmp eq i32 %bf.clear260, 0
  br i1 %tobool261, label %if.end274, label %land.lhs.true262

land.lhs.true262:                                 ; preds = %if.then255
  %code264 = getelementptr inbounds %union.tree_node* %call256, i64 0, i32 0, i32 0, i32 2
  %bf.load265 = load i32* %code264, align 8
  %bf.clear266 = and i32 %bf.load265, 255
  %cmp267 = icmp eq i32 %bf.clear266, 118
  br i1 %cmp267, label %if.then269, label %if.end274

if.then269:                                       ; preds = %land.lhs.true262
  %bf.set = or i32 %bf.load265, 16384
  store i32 %bf.set, i32* %code264, align 8
  br label %if.end274

if.end274:                                        ; preds = %if.then255, %if.then269, %land.lhs.true262
  %call275 = tail call i32 @is_pending_size(%union.tree_node* %t.tr) #1
  %tobool276 = icmp eq i32 %call275, 0
  br i1 %tobool276, label %return, label %if.then277

if.then277:                                       ; preds = %if.end274
  tail call void @put_pending_size(%union.tree_node* %call256) #1
  br label %return

sw.bb280:                                         ; preds = %if.end39, %if.end39
  %code282 = getelementptr inbounds %union.tree_node* %op1.0, i64 0, i32 0, i32 0, i32 2
  %bf.load283 = load i32* %code282, align 8
  %bf.clear284 = and i32 %bf.load283, 255
  %cmp285 = icmp eq i32 %bf.clear284, 25
  br i1 %cmp285, label %land.lhs.true287, label %sw.epilog

land.lhs.true287:                                 ; preds = %sw.bb280
  %23 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 16), align 8, !tbaa !14
  %type289 = getelementptr inbounds %union.tree_node* %23, i64 0, i32 0, i32 0, i32 1
  %24 = load %union.tree_node** %type289, align 8, !tbaa !11
  %type290 = bitcast %union.tree_node* %24 to %struct.tree_type*
  %precision = getelementptr inbounds %struct.tree_type* %type290, i64 0, i32 6
  %bf.load291 = load i32* %precision, align 4
  %bf.clear292 = and i32 %bf.load291, 511
  %conv293 = zext i32 %bf.clear292 to i64
  %int_cst294 = getelementptr inbounds %union.tree_node* %op1.0, i64 0, i32 0, i32 2
  %low = bitcast i32* %int_cst294 to i64*
  %25 = load i64* %low, align 8, !tbaa !1
  %cmp295 = icmp ugt i64 %conv293, %25
  br i1 %cmp295, label %land.lhs.true297, label %sw.epilog

land.lhs.true297:                                 ; preds = %land.lhs.true287
  %high = getelementptr inbounds i32* %int_cst294, i64 2
  %26 = bitcast i32* %high to i64*
  %27 = load i64* %26, align 8, !tbaa !10
  %cmp300 = icmp eq i64 %27, 0
  br i1 %cmp300, label %land.lhs.true302, label %sw.epilog

land.lhs.true302:                                 ; preds = %land.lhs.true297
  %call303 = tail call fastcc %union.tree_node* @const_binop(i32 82, %union.tree_node* %23, %union.tree_node* %op1.0)
  %call304 = tail call %union.tree_node* @convert(%union.tree_node* %cond, %union.tree_node* %call303) #1
  %cmp305 = icmp eq %union.tree_node* %call304, null
  br i1 %cmp305, label %sw.epilog, label %land.lhs.true307

land.lhs.true307:                                 ; preds = %land.lhs.true302
  %public_flag = getelementptr inbounds %union.tree_node* %call304, i64 0, i32 0, i32 0, i32 2
  %bf.load309 = load i32* %public_flag, align 8
  %bf.clear311 = and i32 %bf.load309, 524288
  %tobool312 = icmp eq i32 %bf.clear311, 0
  br i1 %tobool312, label %if.then313, label %sw.epilog

if.then313:                                       ; preds = %land.lhs.true307
  %cmp314 = icmp eq i32 %bf.clear, 82
  %cond316 = select i1 %cmp314, i32 61, i32 64
  %call317 = tail call %union.tree_node* @convert(%union.tree_node* %cond, %union.tree_node* %op0.1) #1
  %call318 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %cond316, %union.tree_node* %cond, %union.tree_node* %call317, %union.tree_node* %call304) #1
  br label %tailrecurse

sw.bb321:                                         ; preds = %if.end39, %if.end39
  %call322 = tail call fastcc %union.tree_node* @extract_muldiv(%union.tree_node* %op0.1, %union.tree_node* %c, i32 %code, %union.tree_node* %wide_type)
  %call323 = tail call fastcc %union.tree_node* @extract_muldiv(%union.tree_node* %op1.0, %union.tree_node* %c, i32 %code, %union.tree_node* %wide_type)
  %cmp324 = icmp ne %union.tree_node* %call322, null
  %cmp327 = icmp ne %union.tree_node* %call323, null
  %or.cond = and i1 %cmp324, %cmp327
  br i1 %or.cond, label %land.lhs.true329, label %if.end343

land.lhs.true329:                                 ; preds = %sw.bb321
  %cmp330 = icmp eq i32 %code, 61
  br i1 %cmp330, label %if.then338, label %lor.lhs.false332

lor.lhs.false332:                                 ; preds = %land.lhs.true329
  %call333 = tail call fastcc i32 @multiple_of_p(%union.tree_node* %cond, %union.tree_node* %op0.1, %union.tree_node* %c)
  %tobool334 = icmp eq i32 %call333, 0
  br i1 %tobool334, label %lor.lhs.false335, label %if.then338

lor.lhs.false335:                                 ; preds = %lor.lhs.false332
  %call336 = tail call fastcc i32 @multiple_of_p(%union.tree_node* %cond, %union.tree_node* %op1.0, %union.tree_node* %c)
  %tobool337 = icmp eq i32 %call336, 0
  br i1 %tobool337, label %if.end343, label %if.then338

if.then338:                                       ; preds = %lor.lhs.false335, %lor.lhs.false332, %land.lhs.true329
  %call339 = tail call %union.tree_node* @convert(%union.tree_node* %cond, %union.tree_node* %call322) #1
  %call340 = tail call %union.tree_node* @convert(%union.tree_node* %cond, %union.tree_node* %call323) #1
  %call341 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %bf.clear, %union.tree_node* %cond, %union.tree_node* %call339, %union.tree_node* %call340) #1
  %call342 = tail call %union.tree_node* @fold(%union.tree_node* %call341)
  br label %return

if.end343:                                        ; preds = %lor.lhs.false335, %sw.bb321
  %cmp344 = icmp eq i32 %bf.clear, 60
  br i1 %cmp344, label %if.then346, label %if.end348

if.then346:                                       ; preds = %if.end343
  %call347 = tail call fastcc %union.tree_node* @negate_expr(%union.tree_node* %op1.0)
  br label %if.end348

if.end348:                                        ; preds = %if.then346, %if.end343
  %tcode.1 = phi i32 [ 59, %if.then346 ], [ %bf.clear, %if.end343 ]
  %op1.1 = phi %union.tree_node* [ %call347, %if.then346 ], [ %op1.0, %if.end343 ]
  %code350 = getelementptr inbounds %union.tree_node* %op1.1, i64 0, i32 0, i32 0, i32 2
  %bf.load351 = load i32* %code350, align 8
  %bf.clear352 = and i32 %bf.load351, 255
  %cmp353 = icmp eq i32 %bf.clear352, 25
  br i1 %cmp353, label %if.end356, label %sw.epilog

if.end356:                                        ; preds = %if.end348
  %call357 = tail call i32 @tree_int_cst_sgn(%union.tree_node* %op1.1) #1
  %cmp358 = icmp slt i32 %call357, 0
  br i1 %cmp358, label %if.then364, label %lor.lhs.false360

lor.lhs.false360:                                 ; preds = %if.end356
  %call361 = tail call i32 @tree_int_cst_sgn(%union.tree_node* %c) #1
  %cmp362 = icmp slt i32 %call361, 0
  br i1 %cmp362, label %if.then364, label %if.end384

if.then364:                                       ; preds = %lor.lhs.false360, %if.end356
  switch i32 %code, label %sw.epilog [
    i32 63, label %lor.lhs.false387
    i32 64, label %if.then370
    i32 68, label %if.end384
    i32 67, label %if.end384
    i32 61, label %if.end384
  ]

if.then370:                                       ; preds = %if.then364
  br label %lor.lhs.false387

if.end384:                                        ; preds = %if.then364, %if.then364, %if.then364, %lor.lhs.false360
  %cmp385 = icmp eq i32 %code, 61
  br i1 %cmp385, label %if.then391, label %lor.lhs.false387

lor.lhs.false387:                                 ; preds = %if.then364, %if.then370, %if.end384
  %code.addr.0866 = phi i32 [ %code, %if.end384 ], [ 63, %if.then370 ], [ 64, %if.then364 ]
  %call388 = tail call fastcc %union.tree_node* @const_binop(i32 66, %union.tree_node* %op1.1, %union.tree_node* %c)
  %call389 = tail call i32 @integer_zerop(%union.tree_node* %call388) #1
  %tobool390 = icmp eq i32 %call389, 0
  br i1 %tobool390, label %sw.epilog, label %if.then391

if.then391:                                       ; preds = %lor.lhs.false387, %if.end384
  %cmp385869 = phi i1 [ false, %lor.lhs.false387 ], [ true, %if.end384 ]
  %code.addr.0867 = phi i32 [ %code.addr.0866, %lor.lhs.false387 ], [ 61, %if.end384 ]
  %call392 = tail call %union.tree_node* @convert(%union.tree_node* %cond, %union.tree_node* %op1.1) #1
  %call393 = tail call %union.tree_node* @convert(%union.tree_node* %cond, %union.tree_node* %c) #1
  %call394 = tail call fastcc %union.tree_node* @const_binop(i32 %code.addr.0867, %union.tree_node* %call392, %union.tree_node* %call393)
  %cmp395 = icmp eq %union.tree_node* %call394, null
  br i1 %cmp395, label %sw.epilog, label %lor.lhs.false397

lor.lhs.false397:                                 ; preds = %if.then391
  %public_flag399 = getelementptr inbounds %union.tree_node* %call394, i64 0, i32 0, i32 0, i32 2
  %bf.load400 = load i32* %public_flag399, align 8
  %bf.clear402 = and i32 %bf.load400, 524288
  %tobool403 = icmp eq i32 %bf.clear402, 0
  br i1 %tobool403, label %if.end407, label %sw.epilog

if.end407:                                        ; preds = %lor.lhs.false397
  %unsigned_flag409 = getelementptr inbounds %union.tree_node* %cond, i64 0, i32 0, i32 0, i32 2
  %bf.load410 = load i32* %unsigned_flag409, align 8
  %bf.clear412 = and i32 %bf.load410, 8192
  %tobool413 = icmp eq i32 %bf.clear412, 0
  br i1 %tobool413, label %if.end432, label %land.lhs.true414

land.lhs.true414:                                 ; preds = %if.end407
  %bf.clear418 = and i32 %bf.load410, 255
  %cmp419 = icmp eq i32 %bf.clear418, 6
  br i1 %cmp419, label %land.lhs.true421, label %land.lhs.true428

land.lhs.true421:                                 ; preds = %land.lhs.true414
  %type422 = bitcast %union.tree_node* %cond to %struct.tree_type*
  %no_force_blk_flag423 = getelementptr inbounds %struct.tree_type* %type422, i64 0, i32 6
  %bf.load424 = load i32* %no_force_blk_flag423, align 4
  %bf.clear426 = and i32 %bf.load424, 131072
  %tobool427 = icmp ne i32 %bf.clear426, 0
  %cmp429 = icmp eq %union.tree_node* %cond, %0
  %or.cond861 = or i1 %tobool427, %cmp429
  br i1 %or.cond861, label %if.end432, label %sw.epilog

land.lhs.true428:                                 ; preds = %land.lhs.true414
  %cmp429.old = icmp eq %union.tree_node* %cond, %0
  br i1 %cmp429.old, label %if.end432, label %sw.epilog

if.end432:                                        ; preds = %land.lhs.true421, %land.lhs.true428, %if.end407
  br i1 %cmp324, label %land.lhs.true435, label %if.end449

land.lhs.true435:                                 ; preds = %if.end432
  %code437 = getelementptr inbounds %union.tree_node* %call322, i64 0, i32 0, i32 0, i32 2
  %bf.load438 = load i32* %code437, align 8
  %bf.clear439 = and i32 %bf.load438, 255
  %cmp440 = icmp ne i32 %bf.clear439, %code.addr.0867
  %or.cond612 = or i1 %cmp440, %cmp385869
  br i1 %or.cond612, label %if.then445, label %if.end449

if.then445:                                       ; preds = %land.lhs.true435
  %call446 = tail call %union.tree_node* @convert(%union.tree_node* %cond, %union.tree_node* %call322) #1
  %call447 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %tcode.1, %union.tree_node* %cond, %union.tree_node* %call446, %union.tree_node* %call394) #1
  %call448 = tail call %union.tree_node* @fold(%union.tree_node* %call447)
  br label %return

if.end449:                                        ; preds = %land.lhs.true435, %if.end432
  br i1 %cmp385869, label %if.then452, label %sw.epilog

if.then452:                                       ; preds = %if.end449
  %call453 = tail call %union.tree_node* @convert(%union.tree_node* %cond, %union.tree_node* %op0.1) #1
  %call454 = tail call %union.tree_node* @convert(%union.tree_node* %cond, %union.tree_node* %c) #1
  %call455 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %code.addr.0867, %union.tree_node* %cond, %union.tree_node* %call453, %union.tree_node* %call454) #1
  %call456 = tail call %union.tree_node* @fold(%union.tree_node* %call455)
  %call457 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %tcode.1, %union.tree_node* %cond, %union.tree_node* %call456, %union.tree_node* %call394) #1
  %call458 = tail call %union.tree_node* @fold(%union.tree_node* %call457)
  br label %return

sw.bb460:                                         ; preds = %if.end39
  %cmp17.le956 = icmp eq i32 %code, 61
  %code.off = add i32 %code, -66
  %switch = icmp ult i32 %code.off, 4
  br i1 %switch, label %land.lhs.true472, label %sw.bb489

land.lhs.true472:                                 ; preds = %sw.bb460
  %operands474 = getelementptr inbounds %union.tree_node* %t.tr, i64 0, i32 0, i32 2
  %arrayidx475 = getelementptr inbounds i32* %operands474, i64 2
  %28 = bitcast i32* %arrayidx475 to %union.tree_node**
  %29 = load %union.tree_node** %28, align 8, !tbaa !14
  %code477 = getelementptr inbounds %union.tree_node* %29, i64 0, i32 0, i32 0, i32 2
  %bf.load478 = load i32* %code477, align 8
  %bf.clear479 = and i32 %bf.load478, 255
  %cmp480 = icmp eq i32 %bf.clear479, 25
  br i1 %cmp480, label %land.lhs.true482, label %sw.bb489

land.lhs.true482:                                 ; preds = %land.lhs.true472
  %call483 = tail call fastcc %union.tree_node* @const_binop(i32 66, %union.tree_node* %op1.0, %union.tree_node* %c)
  %call484 = tail call i32 @integer_zerop(%union.tree_node* %call483) #1
  %tobool485 = icmp eq i32 %call484, 0
  br i1 %tobool485, label %sw.bb489, label %if.then486

if.then486:                                       ; preds = %land.lhs.true482
  %30 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8, !tbaa !14
  %call.i = tail call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %30) #1
  %side_effects_flag.i = getelementptr inbounds %union.tree_node* %op0.1, i64 0, i32 0, i32 0, i32 2
  %bf.load.i = load i32* %side_effects_flag.i, align 8
  %bf.clear.i = and i32 %bf.load.i, 256
  %tobool.i = icmp eq i32 %bf.clear.i, 0
  br i1 %tobool.i, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %if.then486
  %call1.i = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 47, %union.tree_node* %0, %union.tree_node* %op0.1, %union.tree_node* %call.i) #1
  br label %return

if.end.i:                                         ; preds = %if.then486
  %code.i.i = getelementptr inbounds %union.tree_node* %call.i, i64 0, i32 0, i32 0, i32 2
  %bf.load.i.i = load i32* %code.i.i, align 8
  %bf.clear.i.i = and i32 %bf.load.i.i, 255
  switch i32 %bf.clear.i.i, label %if.end.i.i [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i.i:                                       ; preds = %if.end.i
  %type.i.i = getelementptr inbounds %union.tree_node* %call.i, i64 0, i32 0, i32 0, i32 1
  %31 = load %union.tree_node** %type.i.i, align 8, !tbaa !11
  %call.i.i = tail call %union.tree_node* @build1(i32 116, %union.tree_node* %31, %union.tree_node* %call.i) #1
  %bf.load26.i.i = load i32* %code.i.i, align 8
  %bf.clear27.i.i = and i32 %bf.load26.i.i, 512
  %constant_flag29.i.i = getelementptr inbounds %union.tree_node* %call.i.i, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i.i = load i32* %constant_flag29.i.i, align 8
  %bf.clear31.i.i = and i32 %bf.load30.i.i, -513
  %bf.set.i.i = or i32 %bf.clear31.i.i, %bf.clear27.i.i
  store i32 %bf.set.i.i, i32* %constant_flag29.i.i, align 8
  br label %return

sw.bb489.loopexit:                                ; preds = %if.end39, %if.end39, %if.end39, %if.end39, %if.end39
  %cmp17.le = icmp eq i32 %bf.clear, %code
  br i1 %cmp17.le, label %land.lhs.true491, label %if.else500.thread

if.else500.thread:                                ; preds = %sw.bb489.loopexit
  %cmp5041038 = icmp eq i32 %code, 61
  br label %if.else515

sw.bb489:                                         ; preds = %sw.bb460, %land.lhs.true482, %land.lhs.true472
  br i1 %cmp17.le956, label %land.lhs.true491, label %if.else500

land.lhs.true491:                                 ; preds = %sw.bb489.loopexit, %sw.bb489
  %bf.clear9981034 = phi i32 [ %bf.clear, %sw.bb489.loopexit ], [ 61, %sw.bb489 ]
  %call492 = tail call fastcc %union.tree_node* @extract_muldiv(%union.tree_node* %op0.1, %union.tree_node* %c, i32 %code, %union.tree_node* %wide_type)
  %cmp493 = icmp eq %union.tree_node* %call492, null
  br i1 %cmp493, label %if.else500, label %if.then495

if.then495:                                       ; preds = %land.lhs.true491
  %call496 = tail call %union.tree_node* @convert(%union.tree_node* %cond, %union.tree_node* %call492) #1
  %call497 = tail call %union.tree_node* @convert(%union.tree_node* %cond, %union.tree_node* %op1.0) #1
  %call498 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %bf.clear9981034, %union.tree_node* %cond, %union.tree_node* %call496, %union.tree_node* %call497) #1
  %call499 = tail call %union.tree_node* @fold(%union.tree_node* %call498)
  br label %return

if.else500:                                       ; preds = %land.lhs.true491, %sw.bb489
  %cmp179341035 = phi i1 [ true, %land.lhs.true491 ], [ false, %sw.bb489 ]
  %bf.clear9981033 = phi i32 [ %bf.clear9981034, %land.lhs.true491 ], [ 61, %sw.bb489 ]
  %cmp501 = icmp eq i32 %bf.clear9981033, 61
  %cmp504 = icmp eq i32 %code, 61
  %or.cond616 = and i1 %cmp501, %cmp504
  br i1 %or.cond616, label %land.lhs.true506, label %if.else515

land.lhs.true506:                                 ; preds = %if.else500
  %call507 = tail call fastcc %union.tree_node* @extract_muldiv(%union.tree_node* %op1.0, %union.tree_node* %c, i32 61, %union.tree_node* %wide_type)
  %cmp508 = icmp eq %union.tree_node* %call507, null
  br i1 %cmp508, label %if.else515, label %if.then510

if.then510:                                       ; preds = %land.lhs.true506
  %call511 = tail call %union.tree_node* @convert(%union.tree_node* %cond, %union.tree_node* %op0.1) #1
  %call512 = tail call %union.tree_node* @convert(%union.tree_node* %cond, %union.tree_node* %call507) #1
  %call513 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 61, %union.tree_node* %cond, %union.tree_node* %call511, %union.tree_node* %call512) #1
  %call514 = tail call %union.tree_node* @fold(%union.tree_node* %call513)
  br label %return

if.else515:                                       ; preds = %if.else500.thread, %land.lhs.true506, %if.else500
  %cmp5041043 = phi i1 [ %cmp5041038, %if.else500.thread ], [ %cmp504, %land.lhs.true506 ], [ %cmp504, %if.else500 ]
  %cmp5011042 = phi i1 [ false, %if.else500.thread ], [ %cmp501, %land.lhs.true506 ], [ %cmp501, %if.else500 ]
  %bf.clear99810331041 = phi i32 [ %bf.clear, %if.else500.thread ], [ %bf.clear9981033, %land.lhs.true506 ], [ %bf.clear9981033, %if.else500 ]
  %cmp1793410351040 = phi i1 [ false, %if.else500.thread ], [ %cmp179341035, %land.lhs.true506 ], [ %cmp179341035, %if.else500 ]
  %code517 = getelementptr inbounds %union.tree_node* %op1.0, i64 0, i32 0, i32 0, i32 2
  %bf.load518 = load i32* %code517, align 8
  %bf.clear519 = and i32 %bf.load518, 255
  %cmp520 = icmp eq i32 %bf.clear519, 25
  br i1 %cmp520, label %if.end525, label %return

if.end525:                                        ; preds = %if.else515
  br i1 %cmp1793410351040, label %land.lhs.true528, label %if.end545

land.lhs.true528:                                 ; preds = %if.end525
  %call529 = tail call %union.tree_node* @convert(%union.tree_node* %cond, %union.tree_node* %op1.0) #1
  %call530 = tail call %union.tree_node* @convert(%union.tree_node* %cond, %union.tree_node* %c) #1
  %call531 = tail call fastcc %union.tree_node* @const_binop(i32 61, %union.tree_node* %call529, %union.tree_node* %call530)
  %cmp532 = icmp eq %union.tree_node* %call531, null
  br i1 %cmp532, label %if.end545, label %land.lhs.true534

land.lhs.true534:                                 ; preds = %land.lhs.true528
  %public_flag536 = getelementptr inbounds %union.tree_node* %call531, i64 0, i32 0, i32 0, i32 2
  %bf.load537 = load i32* %public_flag536, align 8
  %bf.clear539 = and i32 %bf.load537, 524288
  %tobool540 = icmp eq i32 %bf.clear539, 0
  br i1 %tobool540, label %if.then541, label %if.end545

if.then541:                                       ; preds = %land.lhs.true534
  %call542 = tail call %union.tree_node* @convert(%union.tree_node* %cond, %union.tree_node* %op0.1) #1
  %call543 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %bf.clear99810331041, %union.tree_node* %cond, %union.tree_node* %call542, %union.tree_node* %call531) #1
  %call544 = tail call %union.tree_node* @fold(%union.tree_node* %call543)
  br label %return

if.end545:                                        ; preds = %land.lhs.true534, %land.lhs.true528, %if.end525
  %unsigned_flag547 = getelementptr inbounds %union.tree_node* %cond, i64 0, i32 0, i32 0, i32 2
  %bf.load548 = load i32* %unsigned_flag547, align 8
  %bf.clear550 = and i32 %bf.load548, 8192
  %tobool551 = icmp eq i32 %bf.clear550, 0
  br i1 %tobool551, label %land.lhs.true566, label %lor.lhs.false552

lor.lhs.false552:                                 ; preds = %if.end545
  %bf.clear556 = and i32 %bf.load548, 255
  %cmp557 = icmp eq i32 %bf.clear556, 6
  br i1 %cmp557, label %land.lhs.true559, label %sw.epilog

land.lhs.true559:                                 ; preds = %lor.lhs.false552
  %type560 = bitcast %union.tree_node* %cond to %struct.tree_type*
  %no_force_blk_flag561 = getelementptr inbounds %struct.tree_type* %type560, i64 0, i32 6
  %bf.load562 = load i32* %no_force_blk_flag561, align 4
  %bf.clear564 = and i32 %bf.load562, 131072
  %tobool565 = icmp eq i32 %bf.clear564, 0
  br i1 %tobool565, label %sw.epilog, label %land.lhs.true566

land.lhs.true566:                                 ; preds = %land.lhs.true559, %if.end545
  %cmp570 = icmp eq i32 %bf.clear99810331041, 71
  %or.cond617 = and i1 %cmp5041043, %cmp570
  br i1 %or.cond617, label %if.then587, label %lor.lhs.false572

lor.lhs.false572:                                 ; preds = %land.lhs.true566
  %cmp501.not = xor i1 %cmp5011042, true
  %code.off862 = add i32 %code, -66
  %switch863 = icmp ult i32 %code.off862, 4
  %or.cond864 = or i1 %switch863, %cmp501.not
  br i1 %or.cond864, label %sw.epilog, label %if.then587

if.then587:                                       ; preds = %lor.lhs.false572, %land.lhs.true566
  %call588 = tail call fastcc %union.tree_node* @const_binop(i32 66, %union.tree_node* %op1.0, %union.tree_node* %c)
  %call589 = tail call i32 @integer_zerop(%union.tree_node* %call588) #1
  %tobool590 = icmp eq i32 %call589, 0
  br i1 %tobool590, label %if.else597, label %if.then591

if.then591:                                       ; preds = %if.then587
  %call592 = tail call %union.tree_node* @convert(%union.tree_node* %cond, %union.tree_node* %op0.1) #1
  %call593 = tail call fastcc %union.tree_node* @const_binop(i32 62, %union.tree_node* %op1.0, %union.tree_node* %c)
  %call594 = tail call %union.tree_node* @convert(%union.tree_node* %cond, %union.tree_node* %call593) #1
  %call595 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %bf.clear99810331041, %union.tree_node* %cond, %union.tree_node* %call592, %union.tree_node* %call594) #1
  %call596 = tail call %union.tree_node* @fold(%union.tree_node* %call595)
  br label %return

if.else597:                                       ; preds = %if.then587
  %call598 = tail call fastcc %union.tree_node* @const_binop(i32 66, %union.tree_node* %c, %union.tree_node* %op1.0)
  %call599 = tail call i32 @integer_zerop(%union.tree_node* %call598) #1
  %tobool600 = icmp eq i32 %call599, 0
  br i1 %tobool600, label %sw.epilog, label %if.then601

if.then601:                                       ; preds = %if.else597
  %call602 = tail call %union.tree_node* @convert(%union.tree_node* %cond, %union.tree_node* %op0.1) #1
  %call603 = tail call fastcc %union.tree_node* @const_binop(i32 62, %union.tree_node* %c, %union.tree_node* %op1.0)
  %call604 = tail call %union.tree_node* @convert(%union.tree_node* %cond, %union.tree_node* %call603) #1
  %call605 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %code, %union.tree_node* %cond, %union.tree_node* %call602, %union.tree_node* %call604) #1
  %call606 = tail call %union.tree_node* @fold(%union.tree_node* %call605)
  br label %return

sw.epilog:                                        ; preds = %land.lhs.true307, %land.lhs.true302, %if.end39, %sw.bb280, %land.lhs.true287, %land.lhs.true297, %if.then364, %lor.lhs.false572, %land.lhs.true421, %lor.lhs.false, %if.end158, %sw.bb173, %land.lhs.true200, %if.end196, %sw.bb182, %sw.bb218, %land.lhs.true248, %land.lhs.true239, %land.lhs.true428, %lor.lhs.false397, %lor.lhs.false387, %if.end348, %land.lhs.true559, %if.else597, %lor.lhs.false552, %if.end449, %if.then391, %sw.bb233, %land.lhs.true115, %lor.lhs.false136
  br label %return

return:                                           ; preds = %cond.end, %if.end.i.i, %if.end.i, %if.end.i, %if.end.i, %if.end.i, %if.end.i, %if.then.i, %if.else515, %if.then277, %if.end274, %if.end158, %sw.epilog, %if.then601, %if.then591, %if.then541, %if.then510, %if.then495, %if.then452, %if.then445, %if.then338, %if.then225, %if.end212, %if.then177, %if.then45
  %retval.0 = phi %union.tree_node* [ null, %sw.epilog ], [ %call499, %if.then495 ], [ %call514, %if.then510 ], [ %call596, %if.then591 ], [ %call606, %if.then601 ], [ %call544, %if.then541 ], [ %call342, %if.then338 ], [ %call448, %if.then445 ], [ %call458, %if.then452 ], [ %call231, %if.then225 ], [ %call216, %if.end212 ], [ %call180, %if.then177 ], [ %call48, %if.then45 ], [ %call168, %if.end158 ], [ %call256, %if.end274 ], [ %call256, %if.then277 ], [ null, %if.else515 ], [ %call1.i, %if.then.i ], [ %call.i.i, %if.end.i.i ], [ %call.i, %if.end.i ], [ %call.i, %if.end.i ], [ %call.i, %if.end.i ], [ %call.i, %if.end.i ], [ %call.i, %if.end.i ], [ null, %cond.end ]
  ret %union.tree_node* %retval.0
}

declare i32 @real_onep(%union.tree_node*) #3

declare i32 @real_twop(%union.tree_node*) #3

declare %union.tree_node* @save_expr(%union.tree_node*) #3

declare i32 @integer_all_onesp(%union.tree_node*) #3

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @distribute_bit_expr(i32 %code, %union.tree_node* %type, %union.tree_node* nocapture readonly %arg0, %union.tree_node* nocapture readonly %arg1) #0 {
entry:
  %code2 = getelementptr inbounds %union.tree_node* %arg0, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code2, align 8
  %bf.clear = and i32 %bf.load, 255
  %code4 = getelementptr inbounds %union.tree_node* %arg1, i64 0, i32 0, i32 0, i32 2
  %bf.load5 = load i32* %code4, align 8
  %bf.clear6 = and i32 %bf.load5, 255
  %cmp = icmp ne i32 %bf.clear, %bf.clear6
  %cmp11 = icmp eq i32 %bf.clear, %code
  %or.cond = or i1 %cmp, %cmp11
  br i1 %or.cond, label %return, label %lor.lhs.false12

lor.lhs.false12:                                  ; preds = %entry
  switch i32 %bf.clear, label %return [
    i32 88, label %if.end
    i32 86, label %if.end
  ]

if.end:                                           ; preds = %lor.lhs.false12, %lor.lhs.false12
  %operands = getelementptr inbounds %union.tree_node* %arg0, i64 0, i32 0, i32 2
  %arrayidx = bitcast i32* %operands to %union.tree_node**
  %0 = load %union.tree_node** %arrayidx, align 8, !tbaa !14
  %operands24 = getelementptr inbounds %union.tree_node* %arg1, i64 0, i32 0, i32 2
  %arrayidx25 = bitcast i32* %operands24 to %union.tree_node**
  %1 = load %union.tree_node** %arrayidx25, align 8, !tbaa !14
  %call = tail call i32 @operand_equal_p(%union.tree_node* %0, %union.tree_node* %1, i32 0)
  %tobool = icmp eq i32 %call, 0
  %2 = load %union.tree_node** %arrayidx, align 8, !tbaa !14
  br i1 %tobool, label %if.else, label %if.then26

if.then26:                                        ; preds = %if.end
  %arrayidx32 = getelementptr inbounds i32* %operands, i64 2
  %3 = bitcast i32* %arrayidx32 to %union.tree_node**
  %arrayidx35 = getelementptr inbounds i32* %operands24, i64 2
  %4 = bitcast i32* %arrayidx35 to %union.tree_node**
  br label %if.end96

if.else:                                          ; preds = %if.end
  %arrayidx41 = getelementptr inbounds i32* %operands24, i64 2
  %5 = bitcast i32* %arrayidx41 to %union.tree_node**
  %6 = load %union.tree_node** %5, align 8, !tbaa !14
  %call42 = tail call i32 @operand_equal_p(%union.tree_node* %2, %union.tree_node* %6, i32 0)
  %tobool43 = icmp eq i32 %call42, 0
  br i1 %tobool43, label %if.else54, label %if.then44

if.then44:                                        ; preds = %if.else
  %7 = load %union.tree_node** %arrayidx, align 8, !tbaa !14
  %arrayidx50 = getelementptr inbounds i32* %operands, i64 2
  %8 = bitcast i32* %arrayidx50 to %union.tree_node**
  br label %if.end96

if.else54:                                        ; preds = %if.else
  %arrayidx57 = getelementptr inbounds i32* %operands, i64 2
  %9 = bitcast i32* %arrayidx57 to %union.tree_node**
  %10 = load %union.tree_node** %9, align 8, !tbaa !14
  %11 = load %union.tree_node** %arrayidx25, align 8, !tbaa !14
  %call61 = tail call i32 @operand_equal_p(%union.tree_node* %10, %union.tree_node* %11, i32 0)
  %tobool62 = icmp eq i32 %call61, 0
  %12 = load %union.tree_node** %9, align 8, !tbaa !14
  br i1 %tobool62, label %if.else73, label %if.end96

if.else73:                                        ; preds = %if.else54
  %13 = load %union.tree_node** %5, align 8, !tbaa !14
  %call80 = tail call i32 @operand_equal_p(%union.tree_node* %12, %union.tree_node* %13, i32 0)
  %tobool81 = icmp eq i32 %call80, 0
  br i1 %tobool81, label %return, label %if.then82

if.then82:                                        ; preds = %if.else73
  %14 = load %union.tree_node** %9, align 8, !tbaa !14
  br label %if.end96

if.end96:                                         ; preds = %if.else54, %if.then44, %if.then82, %if.then26
  %common.0 = phi %union.tree_node* [ %2, %if.then26 ], [ %7, %if.then44 ], [ %14, %if.then82 ], [ %12, %if.else54 ]
  %left.0.in = phi %union.tree_node** [ %3, %if.then26 ], [ %8, %if.then44 ], [ %arrayidx, %if.then82 ], [ %arrayidx, %if.else54 ]
  %right.0.in = phi %union.tree_node** [ %4, %if.then26 ], [ %arrayidx25, %if.then44 ], [ %arrayidx25, %if.then82 ], [ %5, %if.else54 ]
  %right.0 = load %union.tree_node** %right.0.in, align 8
  %left.0 = load %union.tree_node** %left.0.in, align 8
  %bf.load99 = load i32* %code2, align 8
  %bf.clear100 = and i32 %bf.load99, 255
  %call101 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %code, %union.tree_node* %type, %union.tree_node* %left.0, %union.tree_node* %right.0) #1
  %call102 = tail call %union.tree_node* @fold(%union.tree_node* %call101)
  %call103 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %bf.clear100, %union.tree_node* %type, %union.tree_node* %common.0, %union.tree_node* %call102) #1
  %call104 = tail call %union.tree_node* @fold(%union.tree_node* %call103)
  br label %return

return:                                           ; preds = %if.else73, %entry, %lor.lhs.false12, %if.end96
  %retval.0 = phi %union.tree_node* [ %call104, %if.end96 ], [ null, %lor.lhs.false12 ], [ null, %entry ], [ null, %if.else73 ]
  ret %union.tree_node* %retval.0
}

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #1

declare i32 @exact_real_inverse(i32, %struct.realvaluetype*) #3

; Function Attrs: nounwind uwtable
define internal fastcc i32 @multiple_of_p(%union.tree_node* %type, %union.tree_node* %top, %union.tree_node* %bottom) #0 {
entry:
  %call161 = tail call i32 @operand_equal_p(%union.tree_node* %top, %union.tree_node* %bottom, i32 0)
  %tobool162 = icmp eq i32 %call161, 0
  br i1 %tobool162, label %if.end.lr.ph, label %return

if.end.lr.ph:                                     ; preds = %entry
  %code = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 0, i32 2
  %type76 = bitcast %union.tree_node* %type to %struct.tree_type*
  %precision77 = getelementptr inbounds %struct.tree_type* %type76, i64 0, i32 6
  br label %if.end

if.end:                                           ; preds = %if.end.lr.ph, %tailrecurse.backedge
  %top.tr163 = phi %union.tree_node* [ %top, %if.end.lr.ph ], [ %top.tr.be, %tailrecurse.backedge ]
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 6
  br i1 %cmp, label %if.end2, label %return

if.end2:                                          ; preds = %if.end
  %code4 = getelementptr inbounds %union.tree_node* %top.tr163, i64 0, i32 0, i32 0, i32 2
  %bf.load5 = load i32* %code4, align 8
  %bf.clear6 = and i32 %bf.load5, 255
  switch i32 %bf.clear6, label %return [
    i32 61, label %sw.bb
    i32 59, label %sw.bb14
    i32 60, label %sw.bb14
    i32 82, label %sw.bb25
    i32 115, label %sw.bb64
    i32 118, label %if.end2.sw.bb93_crit_edge
    i32 25, label %sw.bb98
  ]

if.end2.sw.bb93_crit_edge:                        ; preds = %if.end2
  %operands95.phi.trans.insert = getelementptr inbounds %union.tree_node* %top.tr163, i64 0, i32 0, i32 2
  %arrayidx96.phi.trans.insert = bitcast i32* %operands95.phi.trans.insert to %union.tree_node**
  %.pre = load %union.tree_node** %arrayidx96.phi.trans.insert, align 8, !tbaa !14
  br label %tailrecurse.backedge

sw.bb:                                            ; preds = %if.end2
  %operands = getelementptr inbounds %union.tree_node* %top.tr163, i64 0, i32 0, i32 2
  %arrayidx = bitcast i32* %operands to %union.tree_node**
  %0 = load %union.tree_node** %arrayidx, align 8, !tbaa !14
  %call7 = tail call fastcc i32 @multiple_of_p(%union.tree_node* %type, %union.tree_node* %0, %union.tree_node* %bottom)
  %tobool8 = icmp eq i32 %call7, 0
  br i1 %tobool8, label %lor.rhs, label %lor.end

lor.rhs:                                          ; preds = %sw.bb
  %arrayidx11 = getelementptr inbounds i32* %operands, i64 2
  %1 = bitcast i32* %arrayidx11 to %union.tree_node**
  %2 = load %union.tree_node** %1, align 8, !tbaa !14
  %call12 = tail call fastcc i32 @multiple_of_p(%union.tree_node* %type, %union.tree_node* %2, %union.tree_node* %bottom)
  %tobool13 = icmp ne i32 %call12, 0
  br label %lor.end

lor.end:                                          ; preds = %sw.bb, %lor.rhs
  %3 = phi i1 [ true, %sw.bb ], [ %tobool13, %lor.rhs ]
  %lor.ext = zext i1 %3 to i32
  br label %return

sw.bb14:                                          ; preds = %if.end2, %if.end2
  %operands16 = getelementptr inbounds %union.tree_node* %top.tr163, i64 0, i32 0, i32 2
  %arrayidx17 = bitcast i32* %operands16 to %union.tree_node**
  %4 = load %union.tree_node** %arrayidx17, align 8, !tbaa !14
  %call18 = tail call fastcc i32 @multiple_of_p(%union.tree_node* %type, %union.tree_node* %4, %union.tree_node* %bottom)
  %tobool19 = icmp eq i32 %call18, 0
  br i1 %tobool19, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %sw.bb14
  %arrayidx22 = getelementptr inbounds i32* %operands16, i64 2
  %5 = bitcast i32* %arrayidx22 to %union.tree_node**
  %6 = load %union.tree_node** %5, align 8, !tbaa !14
  %call23 = tail call fastcc i32 @multiple_of_p(%union.tree_node* %type, %union.tree_node* %6, %union.tree_node* %bottom)
  %tobool24 = icmp ne i32 %call23, 0
  br label %land.end

land.end:                                         ; preds = %sw.bb14, %land.rhs
  %7 = phi i1 [ false, %sw.bb14 ], [ %tobool24, %land.rhs ]
  %land.ext = zext i1 %7 to i32
  br label %return

sw.bb25:                                          ; preds = %if.end2
  %operands27 = getelementptr inbounds %union.tree_node* %top.tr163, i64 0, i32 0, i32 2
  %arrayidx28 = getelementptr inbounds i32* %operands27, i64 2
  %8 = bitcast i32* %arrayidx28 to %union.tree_node**
  %9 = load %union.tree_node** %8, align 8, !tbaa !14
  %code30 = getelementptr inbounds %union.tree_node* %9, i64 0, i32 0, i32 0, i32 2
  %bf.load31 = load i32* %code30, align 8
  %bf.clear32 = and i32 %bf.load31, 255
  %cmp33 = icmp eq i32 %bf.clear32, 25
  br i1 %cmp33, label %if.then34, label %return

if.then34:                                        ; preds = %sw.bb25
  %10 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 16), align 8, !tbaa !14
  %type39 = getelementptr inbounds %union.tree_node* %10, i64 0, i32 0, i32 0, i32 1
  %11 = load %union.tree_node** %type39, align 8, !tbaa !11
  %type40 = bitcast %union.tree_node* %11 to %struct.tree_type*
  %precision = getelementptr inbounds %struct.tree_type* %type40, i64 0, i32 6
  %bf.load41 = load i32* %precision, align 4
  %bf.clear42 = and i32 %bf.load41, 511
  %conv = zext i32 %bf.clear42 to i64
  %int_cst43 = getelementptr inbounds %union.tree_node* %9, i64 0, i32 0, i32 2
  %low = bitcast i32* %int_cst43 to i64*
  %12 = load i64* %low, align 8, !tbaa !1
  %cmp44 = icmp ugt i64 %conv, %12
  br i1 %cmp44, label %land.lhs.true, label %return

land.lhs.true:                                    ; preds = %if.then34
  %high = getelementptr inbounds i32* %int_cst43, i64 2
  %13 = bitcast i32* %high to i64*
  %14 = load i64* %13, align 8, !tbaa !10
  %cmp48 = icmp eq i64 %14, 0
  br i1 %cmp48, label %land.lhs.true50, label %return

land.lhs.true50:                                  ; preds = %land.lhs.true
  %call51 = tail call fastcc %union.tree_node* @const_binop(i32 82, %union.tree_node* %10, %union.tree_node* %9)
  %call52 = tail call %union.tree_node* @convert(%union.tree_node* %type, %union.tree_node* %call51) #1
  %cmp53 = icmp eq %union.tree_node* %call52, null
  br i1 %cmp53, label %return, label %land.lhs.true55

land.lhs.true55:                                  ; preds = %land.lhs.true50
  %public_flag = getelementptr inbounds %union.tree_node* %call52, i64 0, i32 0, i32 0, i32 2
  %bf.load57 = load i32* %public_flag, align 8
  %bf.clear58 = and i32 %bf.load57, 524288
  %tobool59 = icmp eq i32 %bf.clear58, 0
  br i1 %tobool59, label %tailrecurse.backedge, label %return

sw.bb64:                                          ; preds = %if.end2
  %operands66 = getelementptr inbounds %union.tree_node* %top.tr163, i64 0, i32 0, i32 2
  %arrayidx67 = bitcast i32* %operands66 to %union.tree_node**
  %15 = load %union.tree_node** %arrayidx67, align 8, !tbaa !14
  %type69 = getelementptr inbounds %union.tree_node* %15, i64 0, i32 0, i32 0, i32 1
  %16 = load %union.tree_node** %type69, align 8, !tbaa !11
  %code71 = getelementptr inbounds %union.tree_node* %16, i64 0, i32 0, i32 0, i32 2
  %bf.load72 = load i32* %code71, align 8
  %bf.clear73 = and i32 %bf.load72, 255
  %cmp74 = icmp eq i32 %bf.clear73, 6
  br i1 %cmp74, label %lor.lhs.false, label %return

lor.lhs.false:                                    ; preds = %sw.bb64
  %bf.load78 = load i32* %precision77, align 4
  %bf.clear79 = and i32 %bf.load78, 511
  %type85 = bitcast %union.tree_node* %16 to %struct.tree_type*
  %precision86 = getelementptr inbounds %struct.tree_type* %type85, i64 0, i32 6
  %bf.load87 = load i32* %precision86, align 4
  %bf.clear88 = and i32 %bf.load87, 511
  %cmp89 = icmp ult i32 %bf.clear79, %bf.clear88
  br i1 %cmp89, label %return, label %tailrecurse.backedge

tailrecurse.backedge:                             ; preds = %lor.lhs.false, %if.end2.sw.bb93_crit_edge, %land.lhs.true55
  %top.tr.be = phi %union.tree_node* [ %call52, %land.lhs.true55 ], [ %.pre, %if.end2.sw.bb93_crit_edge ], [ %15, %lor.lhs.false ]
  %call = tail call i32 @operand_equal_p(%union.tree_node* %top.tr.be, %union.tree_node* %bottom, i32 0)
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.end, label %return

sw.bb98:                                          ; preds = %if.end2
  %code100 = getelementptr inbounds %union.tree_node* %bottom, i64 0, i32 0, i32 0, i32 2
  %bf.load101 = load i32* %code100, align 8
  %bf.clear102 = and i32 %bf.load101, 255
  %cmp103 = icmp eq i32 %bf.clear102, 25
  br i1 %cmp103, label %lor.lhs.false105, label %return

lor.lhs.false105:                                 ; preds = %sw.bb98
  %bf.clear109 = and i32 %bf.load, 8192
  %tobool110 = icmp eq i32 %bf.clear109, 0
  br i1 %tobool110, label %if.end120, label %land.lhs.true111

land.lhs.true111:                                 ; preds = %lor.lhs.false105
  %call112 = tail call i32 @tree_int_cst_sgn(%union.tree_node* %top.tr163) #1
  %cmp113 = icmp slt i32 %call112, 0
  br i1 %cmp113, label %return, label %lor.lhs.false115

lor.lhs.false115:                                 ; preds = %land.lhs.true111
  %call116 = tail call i32 @tree_int_cst_sgn(%union.tree_node* %bottom) #1
  %cmp117 = icmp slt i32 %call116, 0
  br i1 %cmp117, label %return, label %if.end120

if.end120:                                        ; preds = %lor.lhs.false105, %lor.lhs.false115
  %call121 = tail call fastcc %union.tree_node* @const_binop(i32 66, %union.tree_node* %top.tr163, %union.tree_node* %bottom)
  %call122 = tail call i32 @integer_zerop(%union.tree_node* %call121) #1
  br label %return

return:                                           ; preds = %tailrecurse.backedge, %if.end, %land.lhs.true55, %land.lhs.true50, %if.then34, %land.lhs.true, %sw.bb25, %sw.bb64, %lor.lhs.false, %if.end2, %entry, %land.lhs.true111, %lor.lhs.false115, %sw.bb98, %if.end120, %land.end, %lor.end
  %retval.0 = phi i32 [ %call122, %if.end120 ], [ %land.ext, %land.end ], [ %lor.ext, %lor.end ], [ 0, %sw.bb98 ], [ 0, %lor.lhs.false115 ], [ 0, %land.lhs.true111 ], [ 1, %entry ], [ 1, %tailrecurse.backedge ], [ 0, %if.end ], [ 0, %land.lhs.true55 ], [ 0, %land.lhs.true50 ], [ 0, %if.then34 ], [ 0, %land.lhs.true ], [ 0, %sw.bb25 ], [ 0, %sw.bb64 ], [ 0, %lor.lhs.false ], [ 0, %if.end2 ]
  ret i32 %retval.0
}

declare i32 @tree_int_cst_sgn(%union.tree_node*) #3

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_truthop(i32 %code, %union.tree_node* %truth_type, %union.tree_node* %lhs, %union.tree_node* %rhs) #0 {
entry:
  %ll_bitsize = alloca i64, align 8
  %ll_bitpos = alloca i64, align 8
  %lr_bitsize = alloca i64, align 8
  %lr_bitpos = alloca i64, align 8
  %rl_bitsize = alloca i64, align 8
  %rl_bitpos = alloca i64, align 8
  %rr_bitsize = alloca i64, align 8
  %rr_bitpos = alloca i64, align 8
  %ll_unsignedp = alloca i32, align 4
  %lr_unsignedp = alloca i32, align 4
  %rl_unsignedp = alloca i32, align 4
  %rr_unsignedp = alloca i32, align 4
  %ll_mode = alloca i32, align 4
  %lr_mode = alloca i32, align 4
  %rl_mode = alloca i32, align 4
  %rr_mode = alloca i32, align 4
  %ll_mask = alloca %union.tree_node*, align 8
  %lr_mask = alloca %union.tree_node*, align 8
  %rl_mask = alloca %union.tree_node*, align 8
  %rr_mask = alloca %union.tree_node*, align 8
  %ll_and_mask = alloca %union.tree_node*, align 8
  %lr_and_mask = alloca %union.tree_node*, align 8
  %rl_and_mask = alloca %union.tree_node*, align 8
  %rr_and_mask = alloca %union.tree_node*, align 8
  %volatilep = alloca i32, align 4
  %side_effects_flag = getelementptr inbounds %union.tree_node* %lhs, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %side_effects_flag, align 8
  %bf.clear = and i32 %bf.load, 256
  %tobool = icmp eq i32 %bf.clear, 0
  br i1 %tobool, label %lor.lhs.false, label %return

lor.lhs.false:                                    ; preds = %entry
  %side_effects_flag2 = getelementptr inbounds %union.tree_node* %rhs, i64 0, i32 0, i32 0, i32 2
  %bf.load3 = load i32* %side_effects_flag2, align 8
  %bf.clear5 = and i32 %bf.load3, 256
  %tobool6 = icmp eq i32 %bf.clear5, 0
  br i1 %tobool6, label %if.end, label %return

if.end:                                           ; preds = %lor.lhs.false
  %bf.clear10 = and i32 %bf.load, 255
  %bf.clear14 = and i32 %bf.load3, 255
  %cmp = icmp eq i32 %bf.clear10, 88
  br i1 %cmp, label %land.lhs.true, label %if.end18

land.lhs.true:                                    ; preds = %if.end
  %operands = getelementptr inbounds %union.tree_node* %lhs, i64 0, i32 0, i32 2
  %arrayidx = getelementptr inbounds i32* %operands, i64 2
  %0 = bitcast i32* %arrayidx to %union.tree_node**
  %1 = load %union.tree_node** %0, align 8, !tbaa !14
  %call = call i32 @integer_onep(%union.tree_node* %1) #1
  %tobool15 = icmp eq i32 %call, 0
  br i1 %tobool15, label %if.end18, label %if.then16

if.then16:                                        ; preds = %land.lhs.true
  %2 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8, !tbaa !14
  %call17 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 102, %union.tree_node* %truth_type, %union.tree_node* %lhs, %union.tree_node* %2) #1
  br label %if.end18

if.end18:                                         ; preds = %land.lhs.true, %if.then16, %if.end
  %lcode.0 = phi i32 [ 102, %if.then16 ], [ 88, %land.lhs.true ], [ %bf.clear10, %if.end ]
  %lhs.addr.0 = phi %union.tree_node* [ %call17, %if.then16 ], [ %lhs, %land.lhs.true ], [ %lhs, %if.end ]
  %cmp19 = icmp eq i32 %bf.clear14, 88
  br i1 %cmp19, label %land.lhs.true20, label %if.end28

land.lhs.true20:                                  ; preds = %if.end18
  %operands22 = getelementptr inbounds %union.tree_node* %rhs, i64 0, i32 0, i32 2
  %arrayidx23 = getelementptr inbounds i32* %operands22, i64 2
  %3 = bitcast i32* %arrayidx23 to %union.tree_node**
  %4 = load %union.tree_node** %3, align 8, !tbaa !14
  %call24 = call i32 @integer_onep(%union.tree_node* %4) #1
  %tobool25 = icmp eq i32 %call24, 0
  br i1 %tobool25, label %if.end28, label %if.then26

if.then26:                                        ; preds = %land.lhs.true20
  %5 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8, !tbaa !14
  %call27 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 102, %union.tree_node* %truth_type, %union.tree_node* %rhs, %union.tree_node* %5) #1
  br label %if.end28

if.end28:                                         ; preds = %land.lhs.true20, %if.then26, %if.end18
  %rcode.0 = phi i32 [ 102, %if.then26 ], [ 88, %land.lhs.true20 ], [ %bf.clear14, %if.end18 ]
  %rhs.addr.0 = phi %union.tree_node* [ %call27, %if.then26 ], [ %rhs, %land.lhs.true20 ], [ %rhs, %if.end18 ]
  %idxprom649 = zext i32 %lcode.0 to i64
  %arrayidx29 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom649
  %6 = load i8* %arrayidx29, align 1, !tbaa !15
  %cmp30 = icmp eq i8 %6, 60
  br i1 %cmp30, label %lor.lhs.false32, label %return

lor.lhs.false32:                                  ; preds = %if.end28
  %idxprom33650 = zext i32 %rcode.0 to i64
  %arrayidx34 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom33650
  %7 = load i8* %arrayidx34, align 1, !tbaa !15
  %cmp36 = icmp eq i8 %7, 60
  br i1 %cmp36, label %if.end39, label %return

if.end39:                                         ; preds = %lor.lhs.false32
  %cmp40 = icmp eq i32 %code, 93
  %cmp42 = icmp eq i32 %code, 91
  %.cmp42 = or i1 %cmp40, %cmp42
  %cond = select i1 %.cmp42, i32 93, i32 94
  %operands45 = getelementptr inbounds %union.tree_node* %lhs.addr.0, i64 0, i32 0, i32 2
  %arrayidx46 = bitcast i32* %operands45 to %union.tree_node**
  %8 = load %union.tree_node** %arrayidx46, align 8, !tbaa !14
  %arrayidx49 = getelementptr inbounds i32* %operands45, i64 2
  %9 = bitcast i32* %arrayidx49 to %union.tree_node**
  %10 = load %union.tree_node** %9, align 8, !tbaa !14
  %operands51 = getelementptr inbounds %union.tree_node* %rhs.addr.0, i64 0, i32 0, i32 2
  %arrayidx52 = bitcast i32* %operands51 to %union.tree_node**
  %11 = load %union.tree_node** %arrayidx52, align 8, !tbaa !14
  %arrayidx55 = getelementptr inbounds i32* %operands51, i64 2
  %12 = bitcast i32* %arrayidx55 to %union.tree_node**
  %13 = load %union.tree_node** %12, align 8, !tbaa !14
  %14 = load i32* @ix86_branch_cost, align 4, !tbaa !12
  %cmp56 = icmp sgt i32 %14, 1
  br i1 %cmp56, label %land.lhs.true58, label %if.end94

land.lhs.true58:                                  ; preds = %if.end39
  %type = getelementptr inbounds %union.tree_node* %11, i64 0, i32 0, i32 0, i32 1
  %15 = load %union.tree_node** %type, align 8, !tbaa !11
  %code61 = getelementptr inbounds %union.tree_node* %15, i64 0, i32 0, i32 0, i32 2
  %bf.load62 = load i32* %code61, align 8
  %bf.clear63 = and i32 %bf.load62, 255
  switch i32 %bf.clear63, label %while.cond.i [
    i32 7, label %if.end94
    i32 8, label %land.lhs.true75
  ]

land.lhs.true75:                                  ; preds = %land.lhs.true58
  %type79 = getelementptr inbounds %union.tree_node* %15, i64 0, i32 0, i32 0, i32 1
  %16 = load %union.tree_node** %type79, align 8, !tbaa !11
  %code81 = getelementptr inbounds %union.tree_node* %16, i64 0, i32 0, i32 0, i32 2
  %bf.load82 = load i32* %code81, align 8
  %bf.clear83 = and i32 %bf.load82, 255
  %cmp84 = icmp eq i32 %bf.clear83, 7
  br i1 %cmp84, label %if.end94, label %while.cond.i

while.cond.i:                                     ; preds = %land.lhs.true75, %land.lhs.true58, %land.rhs.i
  %17 = phi %union.tree_node* [ %20, %land.rhs.i ], [ %15, %land.lhs.true58 ], [ %15, %land.lhs.true75 ]
  %exp.addr.0.i = phi %union.tree_node* [ %19, %land.rhs.i ], [ %11, %land.lhs.true58 ], [ %11, %land.lhs.true75 ]
  %code.i = getelementptr inbounds %union.tree_node* %exp.addr.0.i, i64 0, i32 0, i32 0, i32 2
  %bf.load.i = load i32* %code.i, align 8
  %18 = and i32 %bf.load.i, 254
  %switch.i = icmp eq i32 %18, 114
  br i1 %switch.i, label %land.rhs.i, label %while.end.i

land.rhs.i:                                       ; preds = %while.cond.i
  %type7.i = bitcast %union.tree_node* %17 to %struct.tree_type*
  %mode.i = getelementptr inbounds %struct.tree_type* %type7.i, i64 0, i32 6
  %bf.load8.i = load i32* %mode.i, align 4
  %operands.i = getelementptr inbounds %union.tree_node* %exp.addr.0.i, i64 0, i32 0, i32 2
  %arrayidx.i = bitcast i32* %operands.i to %union.tree_node**
  %19 = load %union.tree_node** %arrayidx.i, align 8, !tbaa !14
  %type12.i = getelementptr inbounds %union.tree_node* %19, i64 0, i32 0, i32 0, i32 1
  %20 = load %union.tree_node** %type12.i, align 8, !tbaa !11
  %type13.i = bitcast %union.tree_node* %20 to %struct.tree_type*
  %mode14.i = getelementptr inbounds %struct.tree_type* %type13.i, i64 0, i32 6
  %bf.load15.i = load i32* %mode14.i, align 4
  %bf.lshr94.i = xor i32 %bf.load15.i, %bf.load8.i
  %21 = and i32 %bf.lshr94.i, 65024
  %cmp18.i = icmp eq i32 %21, 0
  br i1 %cmp18.i, label %while.cond.i, label %while.end.i

while.end.i:                                      ; preds = %land.rhs.i, %while.cond.i
  %bf.clear25.i = and i32 %bf.load.i, 255
  %idxprom93.i = zext i32 %bf.clear25.i to i64
  %arrayidx26.i = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom93.i
  %22 = load i8* %arrayidx26.i, align 1, !tbaa !15
  %cmp27.i = icmp eq i8 %22, 99
  br i1 %cmp27.i, label %while.cond.i659, label %lor.rhs.i

lor.rhs.i:                                        ; preds = %while.end.i
  %cmp36.i = icmp eq i8 %22, 100
  %bf.clear41.i = and i32 %bf.load.i, 1024
  %tobool.i = icmp eq i32 %bf.clear41.i, 0
  %or.cond.i = and i1 %cmp36.i, %tobool.i
  %bf.clear46.i = and i32 %bf.load.i, 2048
  %tobool47.i = icmp eq i32 %bf.clear46.i, 0
  %or.cond95.i = and i1 %or.cond.i, %tobool47.i
  br i1 %or.cond95.i, label %land.lhs.true48.i, label %if.end94

land.lhs.true48.i:                                ; preds = %lor.rhs.i
  %nonlocal_flag.i = getelementptr inbounds %union.tree_node* %exp.addr.0.i, i64 0, i32 0, i32 5
  %23 = bitcast i48* %nonlocal_flag.i to i64*
  %bf.load49.i = load i64* %23, align 8
  %bf.cast.i = and i64 %bf.load49.i, 512
  %tobool52.i = icmp eq i64 %bf.cast.i, 0
  %bf.clear57.i = and i32 %bf.load.i, 524288
  %tobool58.i = icmp eq i32 %bf.clear57.i, 0
  %or.cond96.i = and i1 %tobool52.i, %tobool58.i
  %bf.cast64.i = and i64 %bf.load49.i, 256
  %tobool65.i = icmp eq i64 %bf.cast64.i, 0
  %or.cond97.i = and i1 %or.cond96.i, %tobool65.i
  br i1 %or.cond97.i, label %land.rhs66.i, label %if.end94

land.rhs66.i:                                     ; preds = %land.lhs.true48.i
  %bf.clear70.i = and i32 %bf.load.i, 262144
  %tobool71.i = icmp eq i32 %bf.clear70.i, 0
  %bf.cast77.i = and i64 %bf.load49.i, 1024
  %tobool78.i = icmp ne i64 %bf.cast77.i, 0
  %or.cond = or i1 %tobool71.i, %tobool78.i
  br i1 %or.cond, label %while.cond.i659, label %if.end94

while.cond.i659:                                  ; preds = %land.rhs66.i, %while.end.i, %land.rhs.i672
  %exp.addr.0.i655 = phi %union.tree_node* [ %26, %land.rhs.i672 ], [ %13, %while.end.i ], [ %13, %land.rhs66.i ]
  %code.i656 = getelementptr inbounds %union.tree_node* %exp.addr.0.i655, i64 0, i32 0, i32 0, i32 2
  %bf.load.i657 = load i32* %code.i656, align 8
  %24 = and i32 %bf.load.i657, 254
  %switch.i658 = icmp eq i32 %24, 114
  br i1 %switch.i658, label %land.rhs.i672, label %while.end.i677

land.rhs.i672:                                    ; preds = %while.cond.i659
  %type.i660 = getelementptr inbounds %union.tree_node* %exp.addr.0.i655, i64 0, i32 0, i32 0, i32 1
  %25 = load %union.tree_node** %type.i660, align 8, !tbaa !11
  %type7.i661 = bitcast %union.tree_node* %25 to %struct.tree_type*
  %mode.i662 = getelementptr inbounds %struct.tree_type* %type7.i661, i64 0, i32 6
  %bf.load8.i663 = load i32* %mode.i662, align 4
  %operands.i664 = getelementptr inbounds %union.tree_node* %exp.addr.0.i655, i64 0, i32 0, i32 2
  %arrayidx.i665 = bitcast i32* %operands.i664 to %union.tree_node**
  %26 = load %union.tree_node** %arrayidx.i665, align 8, !tbaa !14
  %type12.i666 = getelementptr inbounds %union.tree_node* %26, i64 0, i32 0, i32 0, i32 1
  %27 = load %union.tree_node** %type12.i666, align 8, !tbaa !11
  %type13.i667 = bitcast %union.tree_node* %27 to %struct.tree_type*
  %mode14.i668 = getelementptr inbounds %struct.tree_type* %type13.i667, i64 0, i32 6
  %bf.load15.i669 = load i32* %mode14.i668, align 4
  %bf.lshr94.i670 = xor i32 %bf.load15.i669, %bf.load8.i663
  %28 = and i32 %bf.lshr94.i670, 65024
  %cmp18.i671 = icmp eq i32 %28, 0
  br i1 %cmp18.i671, label %while.cond.i659, label %while.end.i677

while.end.i677:                                   ; preds = %land.rhs.i672, %while.cond.i659
  %bf.clear25.i673 = and i32 %bf.load.i657, 255
  %idxprom93.i674 = zext i32 %bf.clear25.i673 to i64
  %arrayidx26.i675 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom93.i674
  %29 = load i8* %arrayidx26.i675, align 1, !tbaa !15
  %cmp27.i676 = icmp eq i8 %29, 99
  br i1 %cmp27.i676, label %if.then92, label %lor.rhs.i685

lor.rhs.i685:                                     ; preds = %while.end.i677
  %cmp36.i678 = icmp eq i8 %29, 100
  %bf.clear41.i679 = and i32 %bf.load.i657, 1024
  %tobool.i680 = icmp eq i32 %bf.clear41.i679, 0
  %or.cond.i681 = and i1 %cmp36.i678, %tobool.i680
  %bf.clear46.i682 = and i32 %bf.load.i657, 2048
  %tobool47.i683 = icmp eq i32 %bf.clear46.i682, 0
  %or.cond95.i684 = and i1 %or.cond.i681, %tobool47.i683
  br i1 %or.cond95.i684, label %land.lhs.true48.i696, label %if.end94

land.lhs.true48.i696:                             ; preds = %lor.rhs.i685
  %nonlocal_flag.i686 = getelementptr inbounds %union.tree_node* %exp.addr.0.i655, i64 0, i32 0, i32 5
  %30 = bitcast i48* %nonlocal_flag.i686 to i64*
  %bf.load49.i687 = load i64* %30, align 8
  %bf.cast.i688 = and i64 %bf.load49.i687, 512
  %tobool52.i689 = icmp eq i64 %bf.cast.i688, 0
  %bf.clear57.i690 = and i32 %bf.load.i657, 524288
  %tobool58.i691 = icmp eq i32 %bf.clear57.i690, 0
  %or.cond96.i692 = and i1 %tobool52.i689, %tobool58.i691
  %bf.cast64.i693 = and i64 %bf.load49.i687, 256
  %tobool65.i694 = icmp eq i64 %bf.cast64.i693, 0
  %or.cond97.i695 = and i1 %or.cond96.i692, %tobool65.i694
  br i1 %or.cond97.i695, label %land.rhs66.i699, label %if.end94

land.rhs66.i699:                                  ; preds = %land.lhs.true48.i696
  %bf.clear70.i697 = and i32 %bf.load.i657, 262144
  %tobool71.i698 = icmp eq i32 %bf.clear70.i697, 0
  %bf.cast77.i700 = and i64 %bf.load49.i687, 1024
  %tobool78.i701 = icmp ne i64 %bf.cast77.i700, 0
  %or.cond835 = or i1 %tobool71.i698, %tobool78.i701
  br i1 %or.cond835, label %if.then92, label %if.end94

if.then92:                                        ; preds = %land.rhs66.i699, %while.end.i677
  %call93 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %cond, %union.tree_node* %truth_type, %union.tree_node* %lhs.addr.0, %union.tree_node* %rhs.addr.0) #1
  br label %return

if.end94:                                         ; preds = %land.rhs66.i699, %land.rhs66.i, %lor.rhs.i685, %land.lhs.true48.i696, %lor.rhs.i, %land.lhs.true48.i, %land.lhs.true58, %land.lhs.true75, %if.end39
  %lcode.0.off = add i32 %lcode.0, -101
  %rcode.0.off = add i32 %rcode.0, -101
  %31 = or i32 %rcode.0.off, %lcode.0.off
  %32 = icmp ugt i32 %31, 1
  br i1 %32, label %return, label %if.end107

if.end107:                                        ; preds = %if.end94
  store i32 0, i32* %volatilep, align 4, !tbaa !12
  %call108 = call fastcc %union.tree_node* @decode_field_reference(%union.tree_node* %8, i64* %ll_bitsize, i64* %ll_bitpos, i32* %ll_mode, i32* %ll_unsignedp, i32* %volatilep, %union.tree_node** %ll_mask, %union.tree_node** %ll_and_mask)
  %call109 = call fastcc %union.tree_node* @decode_field_reference(%union.tree_node* %10, i64* %lr_bitsize, i64* %lr_bitpos, i32* %lr_mode, i32* %lr_unsignedp, i32* %volatilep, %union.tree_node** %lr_mask, %union.tree_node** %lr_and_mask)
  %call110 = call fastcc %union.tree_node* @decode_field_reference(%union.tree_node* %11, i64* %rl_bitsize, i64* %rl_bitpos, i32* %rl_mode, i32* %rl_unsignedp, i32* %volatilep, %union.tree_node** %rl_mask, %union.tree_node** %rl_and_mask)
  %call111 = call fastcc %union.tree_node* @decode_field_reference(%union.tree_node* %13, i64* %rr_bitsize, i64* %rr_bitpos, i32* %rr_mode, i32* %rr_unsignedp, i32* %volatilep, %union.tree_node** %rr_mask, %union.tree_node** %rr_and_mask)
  %33 = load i32* %volatilep, align 4, !tbaa !12
  %tobool112 = icmp ne i32 %33, 0
  %cmp114 = icmp eq %union.tree_node* %call108, null
  %or.cond491 = or i1 %tobool112, %cmp114
  %cmp117 = icmp eq %union.tree_node* %call110, null
  %or.cond492 = or i1 %or.cond491, %cmp117
  br i1 %or.cond492, label %return, label %lor.lhs.false119

lor.lhs.false119:                                 ; preds = %if.end107
  %call120 = call i32 @operand_equal_p(%union.tree_node* %call108, %union.tree_node* %call110, i32 0)
  %tobool121 = icmp eq i32 %call120, 0
  br i1 %tobool121, label %return, label %if.end123

if.end123:                                        ; preds = %lor.lhs.false119
  %code125 = getelementptr inbounds %union.tree_node* %10, i64 0, i32 0, i32 0, i32 2
  %bf.load126 = load i32* %code125, align 8
  %bf.clear127 = and i32 %bf.load126, 255
  %cmp128 = icmp eq i32 %bf.clear127, 25
  br i1 %cmp128, label %land.lhs.true130, label %if.else

land.lhs.true130:                                 ; preds = %if.end123
  %code132 = getelementptr inbounds %union.tree_node* %13, i64 0, i32 0, i32 0, i32 2
  %bf.load133 = load i32* %code132, align 8
  %bf.clear134 = and i32 %bf.load133, 255
  %cmp135 = icmp eq i32 %bf.clear134, 25
  br i1 %cmp135, label %if.end149, label %if.else

if.else:                                          ; preds = %land.lhs.true130, %if.end123
  %cmp138 = icmp eq %union.tree_node* %call109, null
  %cmp141 = icmp eq %union.tree_node* %call111, null
  %or.cond493 = or i1 %cmp138, %cmp141
  br i1 %or.cond493, label %return, label %lor.lhs.false143

lor.lhs.false143:                                 ; preds = %if.else
  %call144 = call i32 @operand_equal_p(%union.tree_node* %call109, %union.tree_node* %call111, i32 0)
  %tobool145 = icmp eq i32 %call144, 0
  br i1 %tobool145, label %return, label %if.end149

if.end149:                                        ; preds = %lor.lhs.false143, %land.lhs.true130
  %l_const.0 = phi %union.tree_node* [ %10, %land.lhs.true130 ], [ null, %lor.lhs.false143 ]
  %r_const.0 = phi %union.tree_node* [ %13, %land.lhs.true130 ], [ null, %lor.lhs.false143 ]
  %cond152 = select i1 %.cmp42, i32 101, i32 102
  %cmp153 = icmp eq i32 %lcode.0, %cond152
  br i1 %cmp153, label %if.end166, label %if.then155

if.then155:                                       ; preds = %if.end149
  %tobool156 = icmp eq %union.tree_node* %l_const.0, null
  br i1 %tobool156, label %return, label %land.lhs.true157

land.lhs.true157:                                 ; preds = %if.then155
  %call158 = call i32 @integer_zerop(%union.tree_node* %l_const.0) #1
  %tobool159 = icmp eq i32 %call158, 0
  br i1 %tobool159, label %return, label %land.lhs.true160

land.lhs.true160:                                 ; preds = %land.lhs.true157
  %34 = load %union.tree_node** %ll_mask, align 8, !tbaa !14
  %call161 = call i32 @integer_pow2p(%union.tree_node* %34) #1
  %tobool162 = icmp eq i32 %call161, 0
  br i1 %tobool162, label %return, label %if.then163

if.then163:                                       ; preds = %land.lhs.true160
  store i32 1, i32* %ll_unsignedp, align 4, !tbaa !12
  br label %if.end166

if.end166:                                        ; preds = %if.end149, %if.then163
  %l_const.1 = phi %union.tree_node* [ %34, %if.then163 ], [ %l_const.0, %if.end149 ]
  %cmp167 = icmp eq i32 %rcode.0, %cond152
  br i1 %cmp167, label %if.end180, label %if.then169

if.then169:                                       ; preds = %if.end166
  %tobool170 = icmp eq %union.tree_node* %r_const.0, null
  br i1 %tobool170, label %return, label %land.lhs.true171

land.lhs.true171:                                 ; preds = %if.then169
  %call172 = call i32 @integer_zerop(%union.tree_node* %r_const.0) #1
  %tobool173 = icmp eq i32 %call172, 0
  br i1 %tobool173, label %return, label %land.lhs.true174

land.lhs.true174:                                 ; preds = %land.lhs.true171
  %35 = load %union.tree_node** %rl_mask, align 8, !tbaa !14
  %call175 = call i32 @integer_pow2p(%union.tree_node* %35) #1
  %tobool176 = icmp eq i32 %call175, 0
  br i1 %tobool176, label %return, label %if.then177

if.then177:                                       ; preds = %land.lhs.true174
  store i32 1, i32* %rl_unsignedp, align 4, !tbaa !12
  br label %if.end180

if.end180:                                        ; preds = %if.end166, %if.then177
  %r_const.1 = phi %union.tree_node* [ %35, %if.then177 ], [ %r_const.0, %if.end166 ]
  %36 = load i64* %ll_bitpos, align 8, !tbaa !13
  %37 = load i64* %rl_bitpos, align 8, !tbaa !13
  %cmp181 = icmp slt i64 %36, %37
  %cond183 = select i1 %cmp181, i64 %36, i64 %37
  %conv184 = trunc i64 %cond183 to i32
  %38 = load i64* %ll_bitsize, align 8, !tbaa !13
  %add = add nsw i64 %38, %36
  %39 = load i64* %rl_bitsize, align 8, !tbaa !13
  %add185 = add nsw i64 %39, %37
  %cmp186 = icmp sgt i64 %add, %add185
  %add.add185 = select i1 %cmp186, i64 %add, i64 %add185
  %conv194 = trunc i64 %add.add185 to i32
  %sub = sub nsw i32 %conv194, %conv184
  %type196 = getelementptr inbounds %union.tree_node* %call108, i64 0, i32 0, i32 0, i32 1
  %40 = load %union.tree_node** %type196, align 8, !tbaa !11
  %align = getelementptr inbounds %union.tree_node* %40, i64 0, i32 0, i32 7
  %41 = bitcast %union.tree_node** %align to i32*
  %42 = load i32* %41, align 4, !tbaa !35
  %43 = load i32* @word_mode, align 4, !tbaa !15
  %44 = load i32* %volatilep, align 4, !tbaa !12
  %call198 = call i32 @get_best_mode(i32 %sub, i32 %conv184, i32 %42, i32 %43, i32 %44) #1
  %cmp199 = icmp eq i32 %call198, 0
  br i1 %cmp199, label %return, label %if.end202

if.end202:                                        ; preds = %if.end180
  %idxprom203 = sext i32 %call198 to i64
  %arrayidx204 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom203
  %45 = load i16* %arrayidx204, align 2, !tbaa !22
  %conv205 = zext i16 %45 to i64
  %sext = shl i64 %cond183, 32
  %conv206 = ashr exact i64 %sext, 32
  %neg = sub i64 0, %conv205
  %and = and i64 %conv206, %neg
  %conv208 = zext i16 %45 to i32
  %call209 = call %union.tree_node* @type_for_size(i32 %conv208, i32 1) #1
  %46 = load i64* %ll_bitpos, align 8, !tbaa !13
  %sub210 = sub nsw i64 %46, %and
  %47 = load i64* %rl_bitpos, align 8, !tbaa !13
  %sub211 = sub nsw i64 %47, %and
  %48 = load %union.tree_node** %ll_mask, align 8, !tbaa !14
  %call212 = call %union.tree_node* @convert(%union.tree_node* %call209, %union.tree_node* %48) #1
  %49 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !14
  %call.i = call %union.tree_node* @size_int_type_wide(i64 %sub210, %union.tree_node* %49) #1
  %call214 = call fastcc %union.tree_node* @const_binop(i32 82, %union.tree_node* %call212, %union.tree_node* %call.i)
  store %union.tree_node* %call214, %union.tree_node** %ll_mask, align 8, !tbaa !14
  %50 = load %union.tree_node** %rl_mask, align 8, !tbaa !14
  %call215 = call %union.tree_node* @convert(%union.tree_node* %call209, %union.tree_node* %50) #1
  %51 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !14
  %call.i705 = call %union.tree_node* @size_int_type_wide(i64 %sub211, %union.tree_node* %51) #1
  %call217 = call fastcc %union.tree_node* @const_binop(i32 82, %union.tree_node* %call215, %union.tree_node* %call.i705)
  store %union.tree_node* %call217, %union.tree_node** %rl_mask, align 8, !tbaa !14
  %tobool218 = icmp eq %union.tree_node* %l_const.1, null
  br i1 %tobool218, label %if.end241, label %if.then219

if.then219:                                       ; preds = %if.end202
  %call220 = call %union.tree_node* @convert(%union.tree_node* %call209, %union.tree_node* %l_const.1) #1
  %52 = load i64* %ll_bitsize, align 8, !tbaa !13
  %conv221 = trunc i64 %52 to i32
  %53 = load i32* %ll_unsignedp, align 4, !tbaa !12
  %54 = load %union.tree_node** %ll_and_mask, align 8, !tbaa !14
  %call222 = call fastcc %union.tree_node* @unextend(%union.tree_node* %call220, i32 %conv221, i32 %53, %union.tree_node* %54)
  %55 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !14
  %call.i706 = call %union.tree_node* @size_int_type_wide(i64 %sub210, %union.tree_node* %55) #1
  %call224 = call fastcc %union.tree_node* @const_binop(i32 82, %union.tree_node* %call222, %union.tree_node* %call.i706)
  %call225 = call %union.tree_node* @build1(i32 90, %union.tree_node* %call209, %union.tree_node* %call214) #1
  %call226 = call %union.tree_node* @fold(%union.tree_node* %call225)
  %call227 = call fastcc %union.tree_node* @const_binop(i32 88, %union.tree_node* %call224, %union.tree_node* %call226)
  %call228 = call i32 @integer_zerop(%union.tree_node* %call227) #1
  %tobool229 = icmp eq i32 %call228, 0
  br i1 %tobool229, label %if.then230, label %if.end241

if.then230:                                       ; preds = %if.then219
  %56 = zext i1 %.cmp42 to i32
  %conv232 = xor i32 %56, 1
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([24 x i8]* @.str2, i64 0, i64 0), i32 %conv232) #1
  %57 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 12), align 8, !tbaa !14
  %58 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8, !tbaa !14
  %cond238 = select i1 %.cmp42, %union.tree_node* %58, %union.tree_node* %57
  %call239 = call %union.tree_node* @convert(%union.tree_node* %truth_type, %union.tree_node* %cond238) #1
  br label %return

if.end241:                                        ; preds = %if.then219, %if.end202
  %l_const.2 = phi %union.tree_node* [ %call224, %if.then219 ], [ null, %if.end202 ]
  %tobool242 = icmp eq %union.tree_node* %r_const.1, null
  br i1 %tobool242, label %if.end265, label %if.then243

if.then243:                                       ; preds = %if.end241
  %call244 = call %union.tree_node* @convert(%union.tree_node* %call209, %union.tree_node* %r_const.1) #1
  %59 = load i64* %rl_bitsize, align 8, !tbaa !13
  %conv245 = trunc i64 %59 to i32
  %60 = load i32* %rl_unsignedp, align 4, !tbaa !12
  %61 = load %union.tree_node** %rl_and_mask, align 8, !tbaa !14
  %call246 = call fastcc %union.tree_node* @unextend(%union.tree_node* %call244, i32 %conv245, i32 %60, %union.tree_node* %61)
  %62 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !14
  %call.i707 = call %union.tree_node* @size_int_type_wide(i64 %sub211, %union.tree_node* %62) #1
  %call248 = call fastcc %union.tree_node* @const_binop(i32 82, %union.tree_node* %call246, %union.tree_node* %call.i707)
  %call249 = call %union.tree_node* @build1(i32 90, %union.tree_node* %call209, %union.tree_node* %call217) #1
  %call250 = call %union.tree_node* @fold(%union.tree_node* %call249)
  %call251 = call fastcc %union.tree_node* @const_binop(i32 88, %union.tree_node* %call248, %union.tree_node* %call250)
  %call252 = call i32 @integer_zerop(%union.tree_node* %call251) #1
  %tobool253 = icmp eq i32 %call252, 0
  br i1 %tobool253, label %if.then254, label %if.end265

if.then254:                                       ; preds = %if.then243
  %63 = zext i1 %.cmp42 to i32
  %conv256 = xor i32 %63, 1
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([24 x i8]* @.str2, i64 0, i64 0), i32 %conv256) #1
  %64 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 12), align 8, !tbaa !14
  %65 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8, !tbaa !14
  %cond262 = select i1 %.cmp42, %union.tree_node* %65, %union.tree_node* %64
  %call263 = call %union.tree_node* @convert(%union.tree_node* %truth_type, %union.tree_node* %cond262) #1
  br label %return

if.end265:                                        ; preds = %if.then243, %if.end241
  %r_const.2 = phi %union.tree_node* [ %call248, %if.then243 ], [ null, %if.end241 ]
  %cmp266 = icmp eq %union.tree_node* %l_const.2, null
  br i1 %cmp266, label %if.then268, label %if.end455

if.then268:                                       ; preds = %if.end265
  %66 = load i64* %ll_bitsize, align 8, !tbaa !13
  %67 = load i64* %lr_bitsize, align 8, !tbaa !13
  %cmp269 = icmp eq i64 %66, %67
  br i1 %cmp269, label %lor.lhs.false271, label %return

lor.lhs.false271:                                 ; preds = %if.then268
  %68 = load i64* %rl_bitsize, align 8, !tbaa !13
  %69 = load i64* %rr_bitsize, align 8, !tbaa !13
  %cmp272 = icmp eq i64 %68, %69
  br i1 %cmp272, label %lor.lhs.false274, label %return

lor.lhs.false274:                                 ; preds = %lor.lhs.false271
  %70 = load i32* %ll_unsignedp, align 4, !tbaa !12
  %71 = load i32* %lr_unsignedp, align 4, !tbaa !12
  %cmp275 = icmp eq i32 %70, %71
  br i1 %cmp275, label %lor.lhs.false277, label %return

lor.lhs.false277:                                 ; preds = %lor.lhs.false274
  %72 = load i32* %rl_unsignedp, align 4, !tbaa !12
  %73 = load i32* %rr_unsignedp, align 4, !tbaa !12
  %cmp278 = icmp eq i32 %72, %73
  br i1 %cmp278, label %lor.lhs.false280, label %return

lor.lhs.false280:                                 ; preds = %lor.lhs.false277
  %74 = load i64* %ll_bitpos, align 8, !tbaa !13
  %75 = load i64* %rl_bitpos, align 8, !tbaa !13
  %sub281 = sub nsw i64 %74, %75
  %76 = load i64* %lr_bitpos, align 8, !tbaa !13
  %77 = load i64* %rr_bitpos, align 8, !tbaa !13
  %sub282 = sub nsw i64 %76, %77
  %cmp283 = icmp eq i64 %sub281, %sub282
  br i1 %cmp283, label %if.end286, label %return

if.end286:                                        ; preds = %lor.lhs.false280
  %cmp287 = icmp slt i64 %76, %77
  %cond292 = select i1 %cmp287, i64 %76, i64 %77
  %conv293 = trunc i64 %cond292 to i32
  %add294 = add nsw i64 %76, %66
  %add295 = add nsw i64 %77, %68
  %cmp296 = icmp sgt i64 %add294, %add295
  %add294.add295 = select i1 %cmp296, i64 %add294, i64 %add295
  %conv304 = trunc i64 %add294.add295 to i32
  %sub305 = sub nsw i32 %conv304, %conv293
  %type307 = getelementptr inbounds %union.tree_node* %call109, i64 0, i32 0, i32 0, i32 1
  %78 = load %union.tree_node** %type307, align 8, !tbaa !11
  %align309 = getelementptr inbounds %union.tree_node* %78, i64 0, i32 0, i32 7
  %79 = bitcast %union.tree_node** %align309 to i32*
  %80 = load i32* %79, align 4, !tbaa !35
  %81 = load i32* @word_mode, align 4, !tbaa !15
  %82 = load i32* %volatilep, align 4, !tbaa !12
  %call310 = call i32 @get_best_mode(i32 %sub305, i32 %conv293, i32 %80, i32 %81, i32 %82) #1
  %cmp311 = icmp eq i32 %call310, 0
  br i1 %cmp311, label %return, label %if.end314

if.end314:                                        ; preds = %if.end286
  %idxprom315 = sext i32 %call310 to i64
  %arrayidx316 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom315
  %83 = load i16* %arrayidx316, align 2, !tbaa !22
  %conv317 = zext i16 %83 to i64
  %sext651 = shl i64 %cond292, 32
  %conv318 = ashr exact i64 %sext651, 32
  %neg320 = sub i64 0, %conv317
  %and321 = and i64 %conv318, %neg320
  %conv322 = zext i16 %83 to i32
  %call323 = call %union.tree_node* @type_for_size(i32 %conv322, i32 1) #1
  %84 = load i64* %lr_bitpos, align 8, !tbaa !13
  %sub324 = sub nsw i64 %84, %and321
  %85 = load i64* %rr_bitpos, align 8, !tbaa !13
  %sub325 = sub nsw i64 %85, %and321
  %86 = load %union.tree_node** %lr_mask, align 8, !tbaa !14
  %call326 = call %union.tree_node* @convert(%union.tree_node* %call323, %union.tree_node* %86) #1
  %87 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !14
  %call.i708 = call %union.tree_node* @size_int_type_wide(i64 %sub324, %union.tree_node* %87) #1
  %call328 = call fastcc %union.tree_node* @const_binop(i32 82, %union.tree_node* %call326, %union.tree_node* %call.i708)
  %88 = load %union.tree_node** %rr_mask, align 8, !tbaa !14
  %call329 = call %union.tree_node* @convert(%union.tree_node* %call323, %union.tree_node* %88) #1
  %89 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !14
  %call.i709 = call %union.tree_node* @size_int_type_wide(i64 %sub325, %union.tree_node* %89) #1
  %call331 = call fastcc %union.tree_node* @const_binop(i32 82, %union.tree_node* %call329, %union.tree_node* %call.i709)
  store %union.tree_node* %call331, %union.tree_node** %rr_mask, align 8, !tbaa !14
  %call332 = call fastcc %union.tree_node* @const_binop(i32 86, %union.tree_node* %call214, %union.tree_node* %call217)
  store %union.tree_node* %call332, %union.tree_node** %ll_mask, align 8, !tbaa !14
  %call333 = call fastcc %union.tree_node* @const_binop(i32 86, %union.tree_node* %call328, %union.tree_node* %call331)
  store %union.tree_node* %call333, %union.tree_node** %lr_mask, align 8, !tbaa !14
  %cmp334 = icmp eq i16 %45, %83
  %cmp337 = icmp eq i64 %sub210, %sub324
  %or.cond654 = and i1 %cmp334, %cmp337
  br i1 %or.cond654, label %if.then339, label %if.end368

if.then339:                                       ; preds = %if.end314
  %90 = load i32* %ll_unsignedp, align 4, !tbaa !12
  %tobool342 = icmp eq i32 %90, 0
  br i1 %tobool342, label %lor.rhs343, label %lor.end345

lor.rhs343:                                       ; preds = %if.then339
  %91 = load i32* %rl_unsignedp, align 4, !tbaa !12
  %tobool344 = icmp ne i32 %91, 0
  br label %lor.end345

lor.end345:                                       ; preds = %if.then339, %lor.rhs343
  %92 = phi i1 [ true, %if.then339 ], [ %tobool344, %lor.rhs343 ]
  %lor.ext = zext i1 %92 to i32
  %93 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !14
  %call.i.i = call %union.tree_node* @size_int_type_wide(i64 %conv205, %union.tree_node* %93) #1
  %94 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 3), align 8, !tbaa !14
  %call.i5.i = call %union.tree_node* @size_int_type_wide(i64 %and, %union.tree_node* %94) #1
  %call3.i = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 40, %union.tree_node* %call209, %union.tree_node* %call108, %union.tree_node* %call.i.i, %union.tree_node* %call.i5.i) #1
  %unsigned_flag.i = getelementptr inbounds %union.tree_node* %call3.i, i64 0, i32 0, i32 0, i32 2
  %bf.load.i710 = load i32* %unsigned_flag.i, align 8
  %bf.value.i = shl nuw nsw i32 %lor.ext, 13
  %bf.clear.i = and i32 %bf.load.i710, -8193
  %bf.set.i = or i32 %bf.clear.i, %bf.value.i
  store i32 %bf.set.i, i32* %unsigned_flag.i, align 8
  %type1.i = getelementptr inbounds %union.tree_node* %call332, i64 0, i32 0, i32 0, i32 1
  %95 = load %union.tree_node** %type1.i, align 8, !tbaa !11
  %type2.i = bitcast %union.tree_node* %95 to %struct.tree_type*
  %precision3.i = getelementptr inbounds %struct.tree_type* %type2.i, i64 0, i32 6
  %bf.load.i711 = load i32* %precision3.i, align 4
  %bf.clear.i712 = and i32 %bf.load.i711, 511
  %call.i713 = call %union.tree_node* @build_int_2_wide(i64 -1, i64 -1) #1
  %call4.i = call %union.tree_node* @signed_type(%union.tree_node* %95) #1
  %type6.i = getelementptr inbounds %union.tree_node* %call.i713, i64 0, i32 0, i32 0, i32 1
  store %union.tree_node* %call4.i, %union.tree_node** %type6.i, align 8, !tbaa !11
  %call7.i = call i32 @force_fit_type(%union.tree_node* %call.i713, i32 0) #1
  %sub.i = sub i32 %bf.clear.i712, %conv208
  %conv.i714 = zext i32 %sub.i to i64
  %96 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !14
  %call.i.i715 = call %union.tree_node* @size_int_type_wide(i64 %conv.i714, %union.tree_node* %96) #1
  %call9.i = call fastcc %union.tree_node* @const_binop(i32 82, %union.tree_node* %call.i713, %union.tree_node* %call.i.i715) #1
  %97 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !14
  %call.i21.i = call %union.tree_node* @size_int_type_wide(i64 %conv.i714, %union.tree_node* %97) #1
  %call13.i = call fastcc %union.tree_node* @const_binop(i32 83, %union.tree_node* %call9.i, %union.tree_node* %call.i21.i) #1
  %call14.i = call i32 @tree_int_cst_equal(%union.tree_node* %call332, %union.tree_node* %call13.i) #1
  %tobool349 = icmp eq i32 %call14.i, 0
  br i1 %tobool349, label %if.then350, label %if.end352

if.then350:                                       ; preds = %lor.end345
  %call351 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 88, %union.tree_node* %call209, %union.tree_node* %call3.i, %union.tree_node* %call332) #1
  br label %if.end352

if.end352:                                        ; preds = %lor.end345, %if.then350
  %lhs.addr.1 = phi %union.tree_node* [ %call3.i, %lor.end345 ], [ %call351, %if.then350 ]
  %98 = load i32* %lr_unsignedp, align 4, !tbaa !12
  %tobool355 = icmp eq i32 %98, 0
  br i1 %tobool355, label %lor.rhs356, label %lor.end358

lor.rhs356:                                       ; preds = %if.end352
  %99 = load i32* %rr_unsignedp, align 4, !tbaa !12
  %tobool357 = icmp ne i32 %99, 0
  br label %lor.end358

lor.end358:                                       ; preds = %if.end352, %lor.rhs356
  %100 = phi i1 [ true, %if.end352 ], [ %tobool357, %lor.rhs356 ]
  %lor.ext359 = zext i1 %100 to i32
  %101 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !14
  %call.i.i717 = call %union.tree_node* @size_int_type_wide(i64 %conv205, %union.tree_node* %101) #1
  %102 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 3), align 8, !tbaa !14
  %call.i5.i719 = call %union.tree_node* @size_int_type_wide(i64 %and321, %union.tree_node* %102) #1
  %call3.i720 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 40, %union.tree_node* %call323, %union.tree_node* %call109, %union.tree_node* %call.i.i717, %union.tree_node* %call.i5.i719) #1
  %unsigned_flag.i721 = getelementptr inbounds %union.tree_node* %call3.i720, i64 0, i32 0, i32 0, i32 2
  %bf.load.i722 = load i32* %unsigned_flag.i721, align 8
  %bf.value.i723 = shl nuw nsw i32 %lor.ext359, 13
  %bf.clear.i725 = and i32 %bf.load.i722, -8193
  %bf.set.i726 = or i32 %bf.clear.i725, %bf.value.i723
  store i32 %bf.set.i726, i32* %unsigned_flag.i721, align 8
  %type1.i727 = getelementptr inbounds %union.tree_node* %call333, i64 0, i32 0, i32 0, i32 1
  %103 = load %union.tree_node** %type1.i727, align 8, !tbaa !11
  %type2.i728 = bitcast %union.tree_node* %103 to %struct.tree_type*
  %precision3.i729 = getelementptr inbounds %struct.tree_type* %type2.i728, i64 0, i32 6
  %bf.load.i730 = load i32* %precision3.i729, align 4
  %bf.clear.i731 = and i32 %bf.load.i730, 511
  %call.i732 = call %union.tree_node* @build_int_2_wide(i64 -1, i64 -1) #1
  %call4.i733 = call %union.tree_node* @signed_type(%union.tree_node* %103) #1
  %type6.i734 = getelementptr inbounds %union.tree_node* %call.i732, i64 0, i32 0, i32 0, i32 1
  store %union.tree_node* %call4.i733, %union.tree_node** %type6.i734, align 8, !tbaa !11
  %call7.i735 = call i32 @force_fit_type(%union.tree_node* %call.i732, i32 0) #1
  %sub.i736 = sub i32 %bf.clear.i731, %conv322
  %conv.i737 = zext i32 %sub.i736 to i64
  %104 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !14
  %call.i.i738 = call %union.tree_node* @size_int_type_wide(i64 %conv.i737, %union.tree_node* %104) #1
  %call9.i739 = call fastcc %union.tree_node* @const_binop(i32 82, %union.tree_node* %call.i732, %union.tree_node* %call.i.i738) #1
  %105 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !14
  %call.i21.i740 = call %union.tree_node* @size_int_type_wide(i64 %conv.i737, %union.tree_node* %105) #1
  %call13.i741 = call fastcc %union.tree_node* @const_binop(i32 83, %union.tree_node* %call9.i739, %union.tree_node* %call.i21.i740) #1
  %call14.i742 = call i32 @tree_int_cst_equal(%union.tree_node* %call333, %union.tree_node* %call13.i741) #1
  %tobool363 = icmp eq i32 %call14.i742, 0
  br i1 %tobool363, label %if.then364, label %if.end366

if.then364:                                       ; preds = %lor.end358
  %call365 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 88, %union.tree_node* %call323, %union.tree_node* %call3.i720, %union.tree_node* %call333) #1
  br label %if.end366

if.end366:                                        ; preds = %lor.end358, %if.then364
  %rhs.addr.1 = phi %union.tree_node* [ %call3.i720, %lor.end358 ], [ %call365, %if.then364 ]
  %call367 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %cond152, %union.tree_node* %truth_type, %union.tree_node* %lhs.addr.1, %union.tree_node* %rhs.addr.1) #1
  br label %return

if.end368:                                        ; preds = %if.end314
  %106 = load i64* %ll_bitsize, align 8, !tbaa !13
  %107 = load i64* %ll_bitpos, align 8, !tbaa !13
  %add369 = add nsw i64 %107, %106
  %108 = load i64* %rl_bitpos, align 8, !tbaa !13
  %cmp370 = icmp eq i64 %add369, %108
  br i1 %cmp370, label %land.lhs.true372, label %lor.lhs.false376

land.lhs.true372:                                 ; preds = %if.end368
  %109 = load i64* %lr_bitsize, align 8, !tbaa !13
  %110 = load i64* %lr_bitpos, align 8, !tbaa !13
  %add373 = add nsw i64 %110, %109
  %111 = load i64* %rr_bitpos, align 8, !tbaa !13
  %cmp374 = icmp eq i64 %add373, %111
  br i1 %cmp374, label %land.lhs.true372.if.then384_crit_edge, label %lor.lhs.false376

land.lhs.true372.if.then384_crit_edge:            ; preds = %land.lhs.true372
  %.pre = load i64* %rl_bitsize, align 8, !tbaa !13
  br label %if.then384

lor.lhs.false376:                                 ; preds = %land.lhs.true372, %if.end368
  %112 = load i64* %rl_bitsize, align 8, !tbaa !13
  %add377 = add nsw i64 %112, %108
  %cmp378 = icmp eq i64 %107, %add377
  br i1 %cmp378, label %land.lhs.true380, label %return

land.lhs.true380:                                 ; preds = %lor.lhs.false376
  %113 = load i64* %lr_bitpos, align 8, !tbaa !13
  %114 = load i64* %rr_bitpos, align 8, !tbaa !13
  %115 = load i64* %rr_bitsize, align 8, !tbaa !13
  %add381 = add nsw i64 %115, %114
  %cmp382 = icmp eq i64 %113, %add381
  br i1 %cmp382, label %if.then384, label %return

if.then384:                                       ; preds = %land.lhs.true372.if.then384_crit_edge, %land.lhs.true380
  %116 = phi i64 [ %add369, %land.lhs.true372.if.then384_crit_edge ], [ %108, %land.lhs.true380 ]
  %117 = phi i64 [ %.pre, %land.lhs.true372.if.then384_crit_edge ], [ %112, %land.lhs.true380 ]
  %add386 = add nsw i64 %117, %106
  %cmp388 = icmp slt i64 %107, %116
  %cond393 = select i1 %cmp388, i64 %107, i64 %116
  %118 = load i32* %ll_unsignedp, align 4, !tbaa !12
  %sext826 = shl i64 %add386, 32
  %conv.i743 = ashr exact i64 %sext826, 32
  %119 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !14
  %call.i.i744 = call %union.tree_node* @size_int_type_wide(i64 %conv.i743, %union.tree_node* %119) #1
  %sext827 = shl i64 %cond393, 32
  %conv1.i745 = ashr exact i64 %sext827, 32
  %120 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 3), align 8, !tbaa !14
  %call.i5.i746 = call %union.tree_node* @size_int_type_wide(i64 %conv1.i745, %union.tree_node* %120) #1
  %call3.i747 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 40, %union.tree_node* %call209, %union.tree_node* %call108, %union.tree_node* %call.i.i744, %union.tree_node* %call.i5.i746) #1
  %unsigned_flag.i748 = getelementptr inbounds %union.tree_node* %call3.i747, i64 0, i32 0, i32 0, i32 2
  %bf.load.i749 = load i32* %unsigned_flag.i748, align 8
  %bf.value.i750 = shl i32 %118, 13
  %bf.shl.i751 = and i32 %bf.value.i750, 8192
  %bf.clear.i752 = and i32 %bf.load.i749, -8193
  %bf.set.i753 = or i32 %bf.clear.i752, %bf.shl.i751
  store i32 %bf.set.i753, i32* %unsigned_flag.i748, align 8
  %121 = load i64* %lr_bitsize, align 8, !tbaa !13
  %122 = load i64* %rr_bitsize, align 8, !tbaa !13
  %add396 = add nsw i64 %122, %121
  %123 = load i64* %lr_bitpos, align 8, !tbaa !13
  %124 = load i64* %rr_bitpos, align 8, !tbaa !13
  %cmp398 = icmp slt i64 %123, %124
  %cond403 = select i1 %cmp398, i64 %123, i64 %124
  %125 = load i32* %lr_unsignedp, align 4, !tbaa !12
  %sext828 = shl i64 %add396, 32
  %conv.i754 = ashr exact i64 %sext828, 32
  %126 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !14
  %call.i.i755 = call %union.tree_node* @size_int_type_wide(i64 %conv.i754, %union.tree_node* %126) #1
  %sext829 = shl i64 %cond403, 32
  %conv1.i756 = ashr exact i64 %sext829, 32
  %127 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 3), align 8, !tbaa !14
  %call.i5.i757 = call %union.tree_node* @size_int_type_wide(i64 %conv1.i756, %union.tree_node* %127) #1
  %call3.i758 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 40, %union.tree_node* %call323, %union.tree_node* %call109, %union.tree_node* %call.i.i755, %union.tree_node* %call.i5.i757) #1
  %unsigned_flag.i759 = getelementptr inbounds %union.tree_node* %call3.i758, i64 0, i32 0, i32 0, i32 2
  %bf.load.i760 = load i32* %unsigned_flag.i759, align 8
  %bf.value.i761 = shl i32 %125, 13
  %bf.shl.i762 = and i32 %bf.value.i761, 8192
  %bf.clear.i763 = and i32 %bf.load.i760, -8193
  %bf.set.i764 = or i32 %bf.clear.i763, %bf.shl.i762
  store i32 %bf.set.i764, i32* %unsigned_flag.i759, align 8
  %cmp406 = icmp slt i64 %sub210, %sub211
  %cond411 = select i1 %cmp406, i64 %sub210, i64 %sub211
  %128 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !14
  %call.i765 = call %union.tree_node* @size_int_type_wide(i64 %cond411, %union.tree_node* %128) #1
  %call413 = call fastcc %union.tree_node* @const_binop(i32 83, %union.tree_node* %call332, %union.tree_node* %call.i765)
  store %union.tree_node* %call413, %union.tree_node** %ll_mask, align 8, !tbaa !14
  %cmp414 = icmp slt i64 %sub324, %sub325
  %cond419 = select i1 %cmp414, i64 %sub324, i64 %sub325
  %129 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !14
  %call.i766 = call %union.tree_node* @size_int_type_wide(i64 %cond419, %union.tree_node* %129) #1
  %call421 = call fastcc %union.tree_node* @const_binop(i32 83, %union.tree_node* %call333, %union.tree_node* %call.i766)
  store %union.tree_node* %call421, %union.tree_node** %lr_mask, align 8, !tbaa !14
  %cmp422 = icmp eq %union.tree_node* %call209, %call323
  br i1 %cmp422, label %if.end438, label %if.then424

if.then424:                                       ; preds = %if.then384
  %cmp425 = icmp ugt i16 %45, %83
  br i1 %cmp425, label %if.then427, label %if.else430

if.then427:                                       ; preds = %if.then424
  %call428 = call %union.tree_node* @convert(%union.tree_node* %call323, %union.tree_node* %call3.i747) #1
  %call429 = call %union.tree_node* @convert(%union.tree_node* %call323, %union.tree_node* %call413) #1
  store %union.tree_node* %call429, %union.tree_node** %ll_mask, align 8, !tbaa !14
  br label %if.end438

if.else430:                                       ; preds = %if.then424
  %cmp431 = icmp ult i16 %45, %83
  br i1 %cmp431, label %if.then433, label %if.end438

if.then433:                                       ; preds = %if.else430
  %call434 = call %union.tree_node* @convert(%union.tree_node* %call209, %union.tree_node* %call3.i758) #1
  %call435 = call %union.tree_node* @convert(%union.tree_node* %call209, %union.tree_node* %call421) #1
  store %union.tree_node* %call435, %union.tree_node** %lr_mask, align 8, !tbaa !14
  br label %if.end438

if.end438:                                        ; preds = %if.then384, %if.then427, %if.then433, %if.else430
  %130 = phi %union.tree_node* [ %call421, %if.then427 ], [ %call435, %if.then433 ], [ %call421, %if.else430 ], [ %call421, %if.then384 ]
  %131 = phi %union.tree_node* [ %call429, %if.then427 ], [ %call413, %if.then433 ], [ %call413, %if.else430 ], [ %call413, %if.then384 ]
  %rhs.addr.2 = phi %union.tree_node* [ %call3.i758, %if.then427 ], [ %call434, %if.then433 ], [ %call3.i758, %if.else430 ], [ %call3.i758, %if.then384 ]
  %lhs.addr.2 = phi %union.tree_node* [ %call428, %if.then427 ], [ %call3.i747, %if.then433 ], [ %call3.i747, %if.else430 ], [ %call3.i747, %if.then384 ]
  %type385.0 = phi %union.tree_node* [ %call323, %if.then427 ], [ %call209, %if.then433 ], [ %call209, %if.else430 ], [ %call209, %if.then384 ]
  %132 = load i64* %ll_bitsize, align 8, !tbaa !13
  %133 = load i64* %rl_bitsize, align 8, !tbaa !13
  %add439 = add nsw i64 %133, %132
  %conv440 = trunc i64 %add439 to i32
  %type1.i767 = getelementptr inbounds %union.tree_node* %131, i64 0, i32 0, i32 0, i32 1
  %134 = load %union.tree_node** %type1.i767, align 8, !tbaa !11
  %type2.i768 = bitcast %union.tree_node* %134 to %struct.tree_type*
  %precision3.i769 = getelementptr inbounds %struct.tree_type* %type2.i768, i64 0, i32 6
  %bf.load.i770 = load i32* %precision3.i769, align 4
  %bf.clear.i771 = and i32 %bf.load.i770, 511
  %call.i772 = call %union.tree_node* @build_int_2_wide(i64 -1, i64 -1) #1
  %call4.i773 = call %union.tree_node* @signed_type(%union.tree_node* %134) #1
  %type6.i774 = getelementptr inbounds %union.tree_node* %call.i772, i64 0, i32 0, i32 0, i32 1
  store %union.tree_node* %call4.i773, %union.tree_node** %type6.i774, align 8, !tbaa !11
  %call7.i775 = call i32 @force_fit_type(%union.tree_node* %call.i772, i32 0) #1
  %sub.i776 = sub i32 %bf.clear.i771, %conv440
  %conv.i777 = zext i32 %sub.i776 to i64
  %135 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !14
  %call.i.i778 = call %union.tree_node* @size_int_type_wide(i64 %conv.i777, %union.tree_node* %135) #1
  %call9.i779 = call fastcc %union.tree_node* @const_binop(i32 82, %union.tree_node* %call.i772, %union.tree_node* %call.i.i778) #1
  %136 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !14
  %call.i21.i780 = call %union.tree_node* @size_int_type_wide(i64 %conv.i777, %union.tree_node* %136) #1
  %call13.i781 = call fastcc %union.tree_node* @const_binop(i32 83, %union.tree_node* %call9.i779, %union.tree_node* %call.i21.i780) #1
  %call14.i782 = call i32 @tree_int_cst_equal(%union.tree_node* %131, %union.tree_node* %call13.i781) #1
  %tobool442 = icmp eq i32 %call14.i782, 0
  br i1 %tobool442, label %if.then443, label %if.end445

if.then443:                                       ; preds = %if.end438
  %call444 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 88, %union.tree_node* %type385.0, %union.tree_node* %lhs.addr.2, %union.tree_node* %131) #1
  br label %if.end445

if.end445:                                        ; preds = %if.end438, %if.then443
  %lhs.addr.3 = phi %union.tree_node* [ %lhs.addr.2, %if.end438 ], [ %call444, %if.then443 ]
  %137 = load i64* %lr_bitsize, align 8, !tbaa !13
  %138 = load i64* %rr_bitsize, align 8, !tbaa !13
  %add446 = add nsw i64 %138, %137
  %conv447 = trunc i64 %add446 to i32
  %type1.i783 = getelementptr inbounds %union.tree_node* %130, i64 0, i32 0, i32 0, i32 1
  %139 = load %union.tree_node** %type1.i783, align 8, !tbaa !11
  %type2.i784 = bitcast %union.tree_node* %139 to %struct.tree_type*
  %precision3.i785 = getelementptr inbounds %struct.tree_type* %type2.i784, i64 0, i32 6
  %bf.load.i786 = load i32* %precision3.i785, align 4
  %bf.clear.i787 = and i32 %bf.load.i786, 511
  %call.i788 = call %union.tree_node* @build_int_2_wide(i64 -1, i64 -1) #1
  %call4.i789 = call %union.tree_node* @signed_type(%union.tree_node* %139) #1
  %type6.i790 = getelementptr inbounds %union.tree_node* %call.i788, i64 0, i32 0, i32 0, i32 1
  store %union.tree_node* %call4.i789, %union.tree_node** %type6.i790, align 8, !tbaa !11
  %call7.i791 = call i32 @force_fit_type(%union.tree_node* %call.i788, i32 0) #1
  %sub.i792 = sub i32 %bf.clear.i787, %conv447
  %conv.i793 = zext i32 %sub.i792 to i64
  %140 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !14
  %call.i.i794 = call %union.tree_node* @size_int_type_wide(i64 %conv.i793, %union.tree_node* %140) #1
  %call9.i795 = call fastcc %union.tree_node* @const_binop(i32 82, %union.tree_node* %call.i788, %union.tree_node* %call.i.i794) #1
  %141 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !14
  %call.i21.i796 = call %union.tree_node* @size_int_type_wide(i64 %conv.i793, %union.tree_node* %141) #1
  %call13.i797 = call fastcc %union.tree_node* @const_binop(i32 83, %union.tree_node* %call9.i795, %union.tree_node* %call.i21.i796) #1
  %call14.i798 = call i32 @tree_int_cst_equal(%union.tree_node* %130, %union.tree_node* %call13.i797) #1
  %tobool449 = icmp eq i32 %call14.i798, 0
  br i1 %tobool449, label %if.then450, label %if.end452

if.then450:                                       ; preds = %if.end445
  %call451 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 88, %union.tree_node* %type385.0, %union.tree_node* %rhs.addr.2, %union.tree_node* %130) #1
  br label %if.end452

if.end452:                                        ; preds = %if.end445, %if.then450
  %rhs.addr.3 = phi %union.tree_node* [ %rhs.addr.2, %if.end445 ], [ %call451, %if.then450 ]
  %call453 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %cond152, %union.tree_node* %truth_type, %union.tree_node* %lhs.addr.3, %union.tree_node* %rhs.addr.3) #1
  br label %return

if.end455:                                        ; preds = %if.end265
  %call456 = call fastcc %union.tree_node* @const_binop(i32 88, %union.tree_node* %call214, %union.tree_node* %call217)
  %call457 = call i32 @integer_zerop(%union.tree_node* %call456) #1
  %tobool458 = icmp eq i32 %call457, 0
  br i1 %tobool458, label %land.lhs.true459, label %if.end472

land.lhs.true459:                                 ; preds = %if.end455
  %call460 = call fastcc %union.tree_node* @const_binop(i32 88, %union.tree_node* %call456, %union.tree_node* %l_const.2)
  %call461 = call fastcc %union.tree_node* @const_binop(i32 88, %union.tree_node* %call456, %union.tree_node* %r_const.2)
  %call462 = call i32 @simple_cst_equal(%union.tree_node* %call460, %union.tree_node* %call461) #1
  %cmp463 = icmp eq i32 %call462, 1
  br i1 %cmp463, label %if.end472, label %if.then465

if.then465:                                       ; preds = %land.lhs.true459
  switch i32 %code, label %if.then468 [
    i32 93, label %if.else470
    i32 91, label %if.else470
  ]

if.then468:                                       ; preds = %if.then465
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([46 x i8]* @.str3, i64 0, i64 0)) #1
  %142 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 12), align 8, !tbaa !14
  %call469 = call %union.tree_node* @convert(%union.tree_node* %truth_type, %union.tree_node* %142) #1
  br label %return

if.else470:                                       ; preds = %if.then465, %if.then465
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([52 x i8]* @.str4, i64 0, i64 0)) #1
  %143 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8, !tbaa !14
  %call471 = call %union.tree_node* @convert(%union.tree_node* %truth_type, %union.tree_node* %143) #1
  br label %return

if.end472:                                        ; preds = %land.lhs.true459, %if.end455
  %144 = load i32* %ll_unsignedp, align 4, !tbaa !12
  %tobool475 = icmp eq i32 %144, 0
  br i1 %tobool475, label %lor.rhs476, label %lor.end478

lor.rhs476:                                       ; preds = %if.end472
  %145 = load i32* %rl_unsignedp, align 4, !tbaa !12
  %tobool477 = icmp ne i32 %145, 0
  br label %lor.end478

lor.end478:                                       ; preds = %if.end472, %lor.rhs476
  %146 = phi i1 [ true, %if.end472 ], [ %tobool477, %lor.rhs476 ]
  %lor.ext479 = zext i1 %146 to i32
  %147 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !14
  %call.i.i800 = call %union.tree_node* @size_int_type_wide(i64 %conv205, %union.tree_node* %147) #1
  %148 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 3), align 8, !tbaa !14
  %call.i5.i802 = call %union.tree_node* @size_int_type_wide(i64 %and, %union.tree_node* %148) #1
  %call3.i803 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 40, %union.tree_node* %call209, %union.tree_node* %call108, %union.tree_node* %call.i.i800, %union.tree_node* %call.i5.i802) #1
  %unsigned_flag.i804 = getelementptr inbounds %union.tree_node* %call3.i803, i64 0, i32 0, i32 0, i32 2
  %bf.load.i805 = load i32* %unsigned_flag.i804, align 8
  %bf.value.i806 = shl nuw nsw i32 %lor.ext479, 13
  %bf.clear.i808 = and i32 %bf.load.i805, -8193
  %bf.set.i809 = or i32 %bf.clear.i808, %bf.value.i806
  store i32 %bf.set.i809, i32* %unsigned_flag.i804, align 8
  %call481 = call fastcc %union.tree_node* @const_binop(i32 86, %union.tree_node* %call214, %union.tree_node* %call217)
  store %union.tree_node* %call481, %union.tree_node** %ll_mask, align 8, !tbaa !14
  %type1.i810 = getelementptr inbounds %union.tree_node* %call481, i64 0, i32 0, i32 0, i32 1
  %149 = load %union.tree_node** %type1.i810, align 8, !tbaa !11
  %type2.i811 = bitcast %union.tree_node* %149 to %struct.tree_type*
  %precision3.i812 = getelementptr inbounds %struct.tree_type* %type2.i811, i64 0, i32 6
  %bf.load.i813 = load i32* %precision3.i812, align 4
  %bf.clear.i814 = and i32 %bf.load.i813, 511
  %call.i815 = call %union.tree_node* @build_int_2_wide(i64 -1, i64 -1) #1
  %call4.i816 = call %union.tree_node* @signed_type(%union.tree_node* %149) #1
  %type6.i817 = getelementptr inbounds %union.tree_node* %call.i815, i64 0, i32 0, i32 0, i32 1
  store %union.tree_node* %call4.i816, %union.tree_node** %type6.i817, align 8, !tbaa !11
  %call7.i818 = call i32 @force_fit_type(%union.tree_node* %call.i815, i32 0) #1
  %sub.i819 = sub i32 %bf.clear.i814, %conv208
  %conv.i820 = zext i32 %sub.i819 to i64
  %150 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !14
  %call.i.i821 = call %union.tree_node* @size_int_type_wide(i64 %conv.i820, %union.tree_node* %150) #1
  %call9.i822 = call fastcc %union.tree_node* @const_binop(i32 82, %union.tree_node* %call.i815, %union.tree_node* %call.i.i821) #1
  %151 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !14
  %call.i21.i823 = call %union.tree_node* @size_int_type_wide(i64 %conv.i820, %union.tree_node* %151) #1
  %call13.i824 = call fastcc %union.tree_node* @const_binop(i32 83, %union.tree_node* %call9.i822, %union.tree_node* %call.i21.i823) #1
  %call14.i825 = call i32 @tree_int_cst_equal(%union.tree_node* %call481, %union.tree_node* %call13.i824) #1
  %tobool484 = icmp eq i32 %call14.i825, 0
  br i1 %tobool484, label %if.then485, label %if.end487

if.then485:                                       ; preds = %lor.end478
  %call486 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 88, %union.tree_node* %call209, %union.tree_node* %call3.i803, %union.tree_node* %call481) #1
  br label %if.end487

if.end487:                                        ; preds = %lor.end478, %if.then485
  %result.0 = phi %union.tree_node* [ %call3.i803, %lor.end478 ], [ %call486, %if.then485 ]
  %call488 = call fastcc %union.tree_node* @const_binop(i32 86, %union.tree_node* %l_const.2, %union.tree_node* %r_const.2)
  %call489 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %cond152, %union.tree_node* %truth_type, %union.tree_node* %result.0, %union.tree_node* %call488) #1
  br label %return

return:                                           ; preds = %lor.lhs.false376, %land.lhs.true380, %if.end286, %if.then268, %lor.lhs.false271, %lor.lhs.false274, %lor.lhs.false277, %lor.lhs.false280, %if.end180, %if.then169, %land.lhs.true171, %land.lhs.true174, %if.then155, %land.lhs.true157, %land.lhs.true160, %if.else, %lor.lhs.false143, %if.end107, %lor.lhs.false119, %if.end94, %if.end28, %lor.lhs.false32, %entry, %lor.lhs.false, %if.end487, %if.else470, %if.then468, %if.end452, %if.end366, %if.then254, %if.then230, %if.then92
  %retval.0 = phi %union.tree_node* [ %call367, %if.end366 ], [ %call453, %if.end452 ], [ %call489, %if.end487 ], [ %call469, %if.then468 ], [ %call471, %if.else470 ], [ %call263, %if.then254 ], [ %call239, %if.then230 ], [ %call93, %if.then92 ], [ null, %lor.lhs.false ], [ null, %entry ], [ null, %lor.lhs.false32 ], [ null, %if.end28 ], [ null, %if.end94 ], [ null, %lor.lhs.false119 ], [ null, %if.end107 ], [ null, %lor.lhs.false143 ], [ null, %if.else ], [ null, %land.lhs.true160 ], [ null, %land.lhs.true157 ], [ null, %if.then155 ], [ null, %land.lhs.true174 ], [ null, %land.lhs.true171 ], [ null, %if.then169 ], [ null, %if.end180 ], [ null, %lor.lhs.false280 ], [ null, %lor.lhs.false277 ], [ null, %lor.lhs.false274 ], [ null, %lor.lhs.false271 ], [ null, %if.then268 ], [ null, %if.end286 ], [ null, %land.lhs.true380 ], [ null, %lor.lhs.false376 ]
  ret %union.tree_node* %retval.0
}

declare %union.tree_node* @type_for_size(i32, i32) #3

declare %union.tree_node* @signed_type(%union.tree_node*) #3

declare %union.tree_node* @get_unwidened(%union.tree_node*, %union.tree_node*) #3

declare i32 @int_fits_type_p(%union.tree_node*, %union.tree_node*) #3

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @optimize_minmax_comparison(%union.tree_node* %t) #0 {
entry:
  %type1 = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 0, i32 1
  %0 = load %union.tree_node** %type1, align 8, !tbaa !11
  %operands = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 2
  %arrayidx4 = getelementptr inbounds i32* %operands, i64 2
  %1 = bitcast i32* %arrayidx4 to %union.tree_node**
  %2 = load %union.tree_node** %1, align 8, !tbaa !14
  %3 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !14
  %arg0.0.in.phi.trans.insert = bitcast i32* %operands to %union.tree_node**
  %arg0.0.pre = load %union.tree_node** %arg0.0.in.phi.trans.insert, align 8
  br label %while.cond

while.cond:                                       ; preds = %land.rhs, %entry
  %arg0.0 = phi %union.tree_node* [ %arg0.0.pre, %entry ], [ %4, %land.rhs ]
  %code = getelementptr inbounds %union.tree_node* %arg0.0, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %bf.clear.off = add i32 %bf.clear, -114
  %switch = icmp ult i32 %bf.clear.off, 3
  %operands18 = getelementptr inbounds %union.tree_node* %arg0.0, i64 0, i32 0, i32 2
  %arrayidx19 = bitcast i32* %operands18 to %union.tree_node**
  br i1 %switch, label %land.lhs.true, label %while.end

land.lhs.true:                                    ; preds = %while.cond
  %4 = load %union.tree_node** %arrayidx19, align 8, !tbaa !14
  %cmp20 = icmp eq %union.tree_node* %4, %3
  br i1 %cmp20, label %while.end, label %land.lhs.true21

land.lhs.true21:                                  ; preds = %land.lhs.true
  %type23 = getelementptr inbounds %union.tree_node* %arg0.0, i64 0, i32 0, i32 0, i32 1
  %5 = load %union.tree_node** %type23, align 8, !tbaa !11
  %type24 = bitcast %union.tree_node* %5 to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type* %type24, i64 0, i32 6
  %bf.load25 = load i32* %mode, align 4
  %type31 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 0, i32 1
  %6 = load %union.tree_node** %type31, align 8, !tbaa !11
  %type32 = bitcast %union.tree_node* %6 to %struct.tree_type*
  %mode33 = getelementptr inbounds %struct.tree_type* %type32, i64 0, i32 6
  %bf.load34 = load i32* %mode33, align 4
  %bf.lshr232 = xor i32 %bf.load34, %bf.load25
  %7 = and i32 %bf.lshr232, 65024
  %cmp37 = icmp eq i32 %7, 0
  br i1 %cmp37, label %land.rhs, label %while.end

land.rhs:                                         ; preds = %land.lhs.true21
  %unsigned_flag = getelementptr inbounds %union.tree_node* %5, i64 0, i32 0, i32 0, i32 2
  %bf.load41 = load i32* %unsigned_flag, align 8
  %unsigned_flag50 = getelementptr inbounds %union.tree_node* %6, i64 0, i32 0, i32 0, i32 2
  %bf.load51 = load i32* %unsigned_flag50, align 8
  %bf.lshr42233 = xor i32 %bf.load51, %bf.load41
  %8 = and i32 %bf.lshr42233, 8192
  %cmp54 = icmp eq i32 %8, 0
  br i1 %cmp54, label %while.cond, label %while.end

while.end:                                        ; preds = %while.cond, %land.lhs.true, %land.lhs.true21, %land.rhs
  %arrayidx64 = getelementptr inbounds i32* %operands18, i64 2
  %9 = bitcast i32* %arrayidx64 to %union.tree_node**
  %10 = load %union.tree_node** %9, align 8, !tbaa !14
  %call = tail call i32 @tree_int_cst_equal(%union.tree_node* %10, %union.tree_node* %2) #1
  %call65 = tail call i32 @tree_int_cst_lt(%union.tree_node* %10, %union.tree_node* %2) #1
  %11 = load %union.tree_node** %arrayidx19, align 8, !tbaa !14
  %12 = and i32 %bf.load, 254
  %bf.clear61.cmp = icmp eq i32 %12, 78
  br i1 %bf.clear61.cmp, label %lor.lhs.false72, label %return

lor.lhs.false72:                                  ; preds = %while.end
  %code74 = getelementptr inbounds %union.tree_node* %2, i64 0, i32 0, i32 0, i32 2
  %bf.load75 = load i32* %code74, align 8
  %13 = and i32 %bf.load75, 262399
  %14 = icmp eq i32 %13, 25
  br i1 %14, label %lor.lhs.false83, label %return

lor.lhs.false83:                                  ; preds = %lor.lhs.false72
  %code85 = getelementptr inbounds %union.tree_node* %10, i64 0, i32 0, i32 0, i32 2
  %bf.load86 = load i32* %code85, align 8
  %15 = and i32 %bf.load86, 262399
  %16 = icmp eq i32 %15, 25
  br i1 %16, label %if.end, label %return

if.end:                                           ; preds = %lor.lhs.false83
  %code97 = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 0, i32 2
  %bf.load98 = load i32* %code97, align 8
  %bf.clear99 = and i32 %bf.load98, 255
  switch i32 %bf.clear99, label %return [
    i32 102, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 100, label %sw.bb103
    i32 101, label %sw.bb110
    i32 99, label %sw.bb139
  ]

sw.bb:                                            ; preds = %if.end, %if.end, %if.end
  %call100 = tail call %union.tree_node* @invert_truthvalue(%union.tree_node* %t)
  %call101 = tail call fastcc %union.tree_node* @optimize_minmax_comparison(%union.tree_node* %call100)
  %call102 = tail call %union.tree_node* @invert_truthvalue(%union.tree_node* %call101)
  ret %union.tree_node* %call102

sw.bb103:                                         ; preds = %if.end
  %call104 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 101, %union.tree_node* %0, %union.tree_node* %arg0.0, %union.tree_node* %2) #1
  %call105 = tail call fastcc %union.tree_node* @optimize_minmax_comparison(%union.tree_node* %call104)
  %call106 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 99, %union.tree_node* %0, %union.tree_node* %arg0.0, %union.tree_node* %2) #1
  %call107 = tail call fastcc %union.tree_node* @optimize_minmax_comparison(%union.tree_node* %call106)
  %call108 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 92, %union.tree_node* %0, %union.tree_node* %call105, %union.tree_node* %call107) #1
  %call109 = tail call %union.tree_node* @fold(%union.tree_node* %call108)
  ret %union.tree_node* %call109

sw.bb110:                                         ; preds = %if.end
  %cmp111 = icmp eq i32 %bf.clear, 79
  %tobool113 = icmp ne i32 %call, 0
  %or.cond163 = and i1 %cmp111, %tobool113
  br i1 %or.cond163, label %if.then114, label %if.else

if.then114:                                       ; preds = %sw.bb110
  %call115 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 98, %union.tree_node* %0, %union.tree_node* %11, %union.tree_node* %2) #1
  %call116 = tail call %union.tree_node* @fold(%union.tree_node* %call115)
  br label %return

if.else:                                          ; preds = %sw.bb110
  %tobool119 = icmp ne i32 %call65, 0
  %or.cond164 = and i1 %cmp111, %tobool119
  br i1 %or.cond164, label %if.then120, label %if.else123

if.then120:                                       ; preds = %if.else
  %call121 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 101, %union.tree_node* %0, %union.tree_node* %11, %union.tree_node* %2) #1
  %call122 = tail call %union.tree_node* @fold(%union.tree_node* %call121)
  br label %return

if.else123:                                       ; preds = %if.else
  br i1 %cmp111, label %if.then125, label %if.else127

if.then125:                                       ; preds = %if.else123
  %17 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8, !tbaa !14
  %call.i = tail call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %17) #1
  %side_effects_flag.i = getelementptr inbounds %union.tree_node* %11, i64 0, i32 0, i32 0, i32 2
  %bf.load.i = load i32* %side_effects_flag.i, align 8
  %bf.clear.i = and i32 %bf.load.i, 256
  %tobool.i = icmp eq i32 %bf.clear.i, 0
  br i1 %tobool.i, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %if.then125
  %call1.i = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 47, %union.tree_node* %0, %union.tree_node* %11, %union.tree_node* %call.i) #1
  br label %return

if.end.i:                                         ; preds = %if.then125
  %code.i.i = getelementptr inbounds %union.tree_node* %call.i, i64 0, i32 0, i32 0, i32 2
  %bf.load.i.i = load i32* %code.i.i, align 8
  %bf.clear.i.i = and i32 %bf.load.i.i, 255
  switch i32 %bf.clear.i.i, label %if.end.i.i [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i.i:                                       ; preds = %if.end.i
  %type.i.i = getelementptr inbounds %union.tree_node* %call.i, i64 0, i32 0, i32 0, i32 1
  %18 = load %union.tree_node** %type.i.i, align 8, !tbaa !11
  %call.i.i = tail call %union.tree_node* @build1(i32 116, %union.tree_node* %18, %union.tree_node* %call.i) #1
  %bf.load26.i.i = load i32* %code.i.i, align 8
  %bf.clear27.i.i = and i32 %bf.load26.i.i, 512
  %constant_flag29.i.i = getelementptr inbounds %union.tree_node* %call.i.i, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i.i = load i32* %constant_flag29.i.i, align 8
  %bf.clear31.i.i = and i32 %bf.load30.i.i, -513
  %bf.set.i.i = or i32 %bf.clear31.i.i, %bf.clear27.i.i
  store i32 %bf.set.i.i, i32* %constant_flag29.i.i, align 8
  br label %return

if.else127:                                       ; preds = %if.else123
  br i1 %tobool113, label %if.then129, label %if.else132

if.then129:                                       ; preds = %if.else127
  %call130 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 100, %union.tree_node* %0, %union.tree_node* %11, %union.tree_node* %2) #1
  %call131 = tail call %union.tree_node* @fold(%union.tree_node* %call130)
  br label %return

if.else132:                                       ; preds = %if.else127
  br i1 %tobool119, label %if.then134, label %if.else136

if.then134:                                       ; preds = %if.else132
  %19 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8, !tbaa !14
  %call.i241 = tail call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %19) #1
  %side_effects_flag.i242 = getelementptr inbounds %union.tree_node* %11, i64 0, i32 0, i32 0, i32 2
  %bf.load.i243 = load i32* %side_effects_flag.i242, align 8
  %bf.clear.i244 = and i32 %bf.load.i243, 256
  %tobool.i245 = icmp eq i32 %bf.clear.i244, 0
  br i1 %tobool.i245, label %if.end.i251, label %if.then.i247

if.then.i247:                                     ; preds = %if.then134
  %call1.i246 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 47, %union.tree_node* %0, %union.tree_node* %11, %union.tree_node* %call.i241) #1
  br label %return

if.end.i251:                                      ; preds = %if.then134
  %code.i.i248 = getelementptr inbounds %union.tree_node* %call.i241, i64 0, i32 0, i32 0, i32 2
  %bf.load.i.i249 = load i32* %code.i.i248, align 8
  %bf.clear.i.i250 = and i32 %bf.load.i.i249, 255
  switch i32 %bf.clear.i.i250, label %if.end.i.i260 [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i.i260:                                    ; preds = %if.end.i251
  %type.i.i252 = getelementptr inbounds %union.tree_node* %call.i241, i64 0, i32 0, i32 0, i32 1
  %20 = load %union.tree_node** %type.i.i252, align 8, !tbaa !11
  %call.i.i253 = tail call %union.tree_node* @build1(i32 116, %union.tree_node* %20, %union.tree_node* %call.i241) #1
  %bf.load26.i.i254 = load i32* %code.i.i248, align 8
  %bf.clear27.i.i255 = and i32 %bf.load26.i.i254, 512
  %constant_flag29.i.i256 = getelementptr inbounds %union.tree_node* %call.i.i253, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i.i257 = load i32* %constant_flag29.i.i256, align 8
  %bf.clear31.i.i258 = and i32 %bf.load30.i.i257, -513
  %bf.set.i.i259 = or i32 %bf.clear31.i.i258, %bf.clear27.i.i255
  store i32 %bf.set.i.i259, i32* %constant_flag29.i.i256, align 8
  br label %return

if.else136:                                       ; preds = %if.else132
  %call137 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 101, %union.tree_node* %0, %union.tree_node* %11, %union.tree_node* %2) #1
  %call138 = tail call %union.tree_node* @fold(%union.tree_node* %call137)
  br label %return

sw.bb139:                                         ; preds = %if.end
  %cmp140 = icmp eq i32 %bf.clear, 79
  %cmp140.not = xor i1 %cmp140, true
  %21 = or i32 %call65, %call
  %22 = icmp eq i32 %21, 0
  %or.cond238 = or i1 %22, %cmp140.not
  br i1 %or.cond238, label %if.else148, label %if.then145

if.then145:                                       ; preds = %sw.bb139
  %call146 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 99, %union.tree_node* %0, %union.tree_node* %11, %union.tree_node* %2) #1
  %call147 = tail call %union.tree_node* @fold(%union.tree_node* %call146)
  br label %return

if.else148:                                       ; preds = %sw.bb139
  br i1 %cmp140, label %if.then150, label %if.else152

if.then150:                                       ; preds = %if.else148
  %23 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 12), align 8, !tbaa !14
  %call.i263 = tail call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %23) #1
  %side_effects_flag.i264 = getelementptr inbounds %union.tree_node* %11, i64 0, i32 0, i32 0, i32 2
  %bf.load.i265 = load i32* %side_effects_flag.i264, align 8
  %bf.clear.i266 = and i32 %bf.load.i265, 256
  %tobool.i267 = icmp eq i32 %bf.clear.i266, 0
  br i1 %tobool.i267, label %if.end.i273, label %if.then.i269

if.then.i269:                                     ; preds = %if.then150
  %call1.i268 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 47, %union.tree_node* %0, %union.tree_node* %11, %union.tree_node* %call.i263) #1
  br label %return

if.end.i273:                                      ; preds = %if.then150
  %code.i.i270 = getelementptr inbounds %union.tree_node* %call.i263, i64 0, i32 0, i32 0, i32 2
  %bf.load.i.i271 = load i32* %code.i.i270, align 8
  %bf.clear.i.i272 = and i32 %bf.load.i.i271, 255
  switch i32 %bf.clear.i.i272, label %if.end.i.i282 [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i.i282:                                    ; preds = %if.end.i273
  %type.i.i274 = getelementptr inbounds %union.tree_node* %call.i263, i64 0, i32 0, i32 0, i32 1
  %24 = load %union.tree_node** %type.i.i274, align 8, !tbaa !11
  %call.i.i275 = tail call %union.tree_node* @build1(i32 116, %union.tree_node* %24, %union.tree_node* %call.i263) #1
  %bf.load26.i.i276 = load i32* %code.i.i270, align 8
  %bf.clear27.i.i277 = and i32 %bf.load26.i.i276, 512
  %constant_flag29.i.i278 = getelementptr inbounds %union.tree_node* %call.i.i275, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i.i279 = load i32* %constant_flag29.i.i278, align 8
  %bf.clear31.i.i280 = and i32 %bf.load30.i.i279, -513
  %bf.set.i.i281 = or i32 %bf.clear31.i.i280, %bf.clear27.i.i277
  store i32 %bf.set.i.i281, i32* %constant_flag29.i.i278, align 8
  br label %return

if.else152:                                       ; preds = %if.else148
  %cmp153 = icmp ne i32 %bf.clear, 78
  %or.cond240 = or i1 %cmp153, %22
  br i1 %or.cond240, label %if.else160, label %if.then158

if.then158:                                       ; preds = %if.else152
  %25 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8, !tbaa !14
  %call.i285 = tail call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %25) #1
  %side_effects_flag.i286 = getelementptr inbounds %union.tree_node* %11, i64 0, i32 0, i32 0, i32 2
  %bf.load.i287 = load i32* %side_effects_flag.i286, align 8
  %bf.clear.i288 = and i32 %bf.load.i287, 256
  %tobool.i289 = icmp eq i32 %bf.clear.i288, 0
  br i1 %tobool.i289, label %if.end.i295, label %if.then.i291

if.then.i291:                                     ; preds = %if.then158
  %call1.i290 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 47, %union.tree_node* %0, %union.tree_node* %11, %union.tree_node* %call.i285) #1
  br label %return

if.end.i295:                                      ; preds = %if.then158
  %code.i.i292 = getelementptr inbounds %union.tree_node* %call.i285, i64 0, i32 0, i32 0, i32 2
  %bf.load.i.i293 = load i32* %code.i.i292, align 8
  %bf.clear.i.i294 = and i32 %bf.load.i.i293, 255
  switch i32 %bf.clear.i.i294, label %if.end.i.i304 [
    i32 116, label %return
    i32 25, label %return
    i32 26, label %return
    i32 29, label %return
    i32 121, label %return
  ]

if.end.i.i304:                                    ; preds = %if.end.i295
  %type.i.i296 = getelementptr inbounds %union.tree_node* %call.i285, i64 0, i32 0, i32 0, i32 1
  %26 = load %union.tree_node** %type.i.i296, align 8, !tbaa !11
  %call.i.i297 = tail call %union.tree_node* @build1(i32 116, %union.tree_node* %26, %union.tree_node* %call.i285) #1
  %bf.load26.i.i298 = load i32* %code.i.i292, align 8
  %bf.clear27.i.i299 = and i32 %bf.load26.i.i298, 512
  %constant_flag29.i.i300 = getelementptr inbounds %union.tree_node* %call.i.i297, i64 0, i32 0, i32 0, i32 2
  %bf.load30.i.i301 = load i32* %constant_flag29.i.i300, align 8
  %bf.clear31.i.i302 = and i32 %bf.load30.i.i301, -513
  %bf.set.i.i303 = or i32 %bf.clear31.i.i302, %bf.clear27.i.i299
  store i32 %bf.set.i.i303, i32* %constant_flag29.i.i300, align 8
  br label %return

if.else160:                                       ; preds = %if.else152
  %call161 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 99, %union.tree_node* %0, %union.tree_node* %11, %union.tree_node* %2) #1
  %call162 = tail call %union.tree_node* @fold(%union.tree_node* %call161)
  br label %return

return:                                           ; preds = %if.end.i.i304, %if.end.i295, %if.end.i295, %if.end.i295, %if.end.i295, %if.end.i295, %if.then.i291, %if.end.i.i282, %if.end.i273, %if.end.i273, %if.end.i273, %if.end.i273, %if.end.i273, %if.then.i269, %if.end.i.i260, %if.end.i251, %if.end.i251, %if.end.i251, %if.end.i251, %if.end.i251, %if.then.i247, %if.end.i.i, %if.end.i, %if.end.i, %if.end.i, %if.end.i, %if.end.i, %if.then.i, %if.end, %while.end, %lor.lhs.false72, %lor.lhs.false83, %if.else160, %if.then145, %if.else136, %if.then129, %if.then120, %if.then114
  %retval.0 = phi %union.tree_node* [ %call147, %if.then145 ], [ %call162, %if.else160 ], [ %call116, %if.then114 ], [ %call122, %if.then120 ], [ %call131, %if.then129 ], [ %call138, %if.else136 ], [ %t, %lor.lhs.false83 ], [ %t, %lor.lhs.false72 ], [ %t, %while.end ], [ %t, %if.end ], [ %call1.i, %if.then.i ], [ %call.i.i, %if.end.i.i ], [ %call.i, %if.end.i ], [ %call.i, %if.end.i ], [ %call.i, %if.end.i ], [ %call.i, %if.end.i ], [ %call.i, %if.end.i ], [ %call1.i246, %if.then.i247 ], [ %call.i.i253, %if.end.i.i260 ], [ %call.i241, %if.end.i251 ], [ %call.i241, %if.end.i251 ], [ %call.i241, %if.end.i251 ], [ %call.i241, %if.end.i251 ], [ %call.i241, %if.end.i251 ], [ %call1.i268, %if.then.i269 ], [ %call.i.i275, %if.end.i.i282 ], [ %call.i263, %if.end.i273 ], [ %call.i263, %if.end.i273 ], [ %call.i263, %if.end.i273 ], [ %call.i263, %if.end.i273 ], [ %call.i263, %if.end.i273 ], [ %call1.i290, %if.then.i291 ], [ %call.i.i297, %if.end.i.i304 ], [ %call.i285, %if.end.i295 ], [ %call.i285, %if.end.i295 ], [ %call.i285, %if.end.i295 ], [ %call.i285, %if.end.i295 ], [ %call.i285, %if.end.i295 ]
  ret %union.tree_node* %retval.0
}

declare i32 @integer_pow2p(%union.tree_node*) #3

declare %union.tree_node* @unsigned_type(%union.tree_node*) #3

; Function Attrs: nounwind uwtable
define internal fastcc i32 @twoval_comparison_p(%union.tree_node* nocapture readonly %arg, %union.tree_node** %cval1, %union.tree_node** %cval2, i32* %save_p) #0 {
entry:
  br label %tailrecurse

tailrecurse:                                      ; preds = %sw.bb, %entry
  %arg.tr = phi %union.tree_node* [ %arg, %entry ], [ %6, %sw.bb ]
  %code1 = getelementptr inbounds %union.tree_node* %arg.tr, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code1, align 8
  %bf.clear = and i32 %bf.load, 255
  %idxprom207 = zext i32 %bf.clear to i64
  %arrayidx = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom207
  %0 = load i8* %arrayidx, align 1, !tbaa !15
  %cmp = icmp eq i8 %0, 101
  %cmp3 = icmp eq i32 %bf.clear, 96
  %or.cond = and i1 %cmp, %cmp3
  %cmp.not = xor i1 %cmp, true
  %brmerge = or i1 %or.cond, %cmp.not
  %.mux = select i1 %or.cond, i8 49, i8 %0
  br i1 %brmerge, label %if.end42, label %land.lhs.true8

land.lhs.true8:                                   ; preds = %tailrecurse
  switch i32 %bf.clear, label %if.else17 [
    i32 92, label %if.end42
    i32 91, label %if.end42
    i32 47, label %if.end42
  ]

if.else17:                                        ; preds = %land.lhs.true8
  %cmp22 = icmp eq i32 %bf.clear, 118
  %or.cond152 = and i1 %cmp, %cmp22
  br i1 %or.cond152, label %land.lhs.true24, label %if.end42

land.lhs.true24:                                  ; preds = %if.else17
  %operands = getelementptr inbounds %union.tree_node* %arg.tr, i64 0, i32 0, i32 2
  %arrayidx25 = getelementptr inbounds i32* %operands, i64 4
  %1 = bitcast i32* %arrayidx25 to %struct.rtx_def**
  %2 = load %struct.rtx_def** %1, align 8, !tbaa !14
  %cmp26 = icmp eq %struct.rtx_def* %2, null
  br i1 %cmp26, label %land.lhs.true28, label %if.end42

land.lhs.true28:                                  ; preds = %land.lhs.true24
  %arrayidx31 = bitcast i32* %operands to %union.tree_node**
  %3 = load %union.tree_node** %arrayidx31, align 8, !tbaa !14
  %side_effects_flag = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 0, i32 2
  %bf.load33 = load i32* %side_effects_flag, align 8
  %bf.clear34 = and i32 %bf.load33, 256
  %tobool = icmp eq i32 %bf.clear34, 0
  br i1 %tobool, label %if.then35, label %if.end42

if.then35:                                        ; preds = %land.lhs.true28
  %4 = load %union.tree_node** %cval1, align 8, !tbaa !14
  %tobool36 = icmp eq %union.tree_node* %4, null
  br i1 %tobool36, label %lor.lhs.false37, label %return

lor.lhs.false37:                                  ; preds = %if.then35
  %5 = load %union.tree_node** %cval2, align 8, !tbaa !14
  %tobool38 = icmp eq %union.tree_node* %5, null
  br i1 %tobool38, label %if.end, label %return

if.end:                                           ; preds = %lor.lhs.false37
  store i32 1, i32* %save_p, align 4, !tbaa !12
  br label %if.end42

if.end42:                                         ; preds = %tailrecurse, %land.lhs.true8, %land.lhs.true8, %land.lhs.true8, %land.lhs.true28, %if.end, %land.lhs.true24, %if.else17
  %class.0 = phi i8 [ 101, %land.lhs.true28 ], [ 49, %if.end ], [ 101, %land.lhs.true24 ], [ %0, %if.else17 ], [ %.mux, %tailrecurse ], [ 50, %land.lhs.true8 ], [ 50, %land.lhs.true8 ], [ 50, %land.lhs.true8 ]
  %conv43 = sext i8 %class.0 to i32
  switch i32 %conv43, label %return.loopexit226 [
    i32 49, label %sw.bb
    i32 50, label %sw.bb47
    i32 99, label %return
    i32 101, label %sw.bb59
    i32 60, label %sw.bb83
  ]

sw.bb:                                            ; preds = %if.end42
  %operands45 = getelementptr inbounds %union.tree_node* %arg.tr, i64 0, i32 0, i32 2
  %arrayidx46 = bitcast i32* %operands45 to %union.tree_node**
  %6 = load %union.tree_node** %arrayidx46, align 8, !tbaa !14
  br label %tailrecurse

sw.bb47:                                          ; preds = %if.end42
  %operands49 = getelementptr inbounds %union.tree_node* %arg.tr, i64 0, i32 0, i32 2
  %arrayidx50 = bitcast i32* %operands49 to %union.tree_node**
  %7 = load %union.tree_node** %arrayidx50, align 8, !tbaa !14
  %call51 = tail call fastcc i32 @twoval_comparison_p(%union.tree_node* %7, %union.tree_node** %cval1, %union.tree_node** %cval2, i32* %save_p)
  %tobool52 = icmp eq i32 %call51, 0
  br i1 %tobool52, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %sw.bb47
  %arrayidx55 = getelementptr inbounds i32* %operands49, i64 2
  %8 = bitcast i32* %arrayidx55 to %union.tree_node**
  %9 = load %union.tree_node** %8, align 8, !tbaa !14
  %call56 = tail call fastcc i32 @twoval_comparison_p(%union.tree_node* %9, %union.tree_node** %cval1, %union.tree_node** %cval2, i32* %save_p)
  %tobool57 = icmp ne i32 %call56, 0
  br label %land.end

land.end:                                         ; preds = %sw.bb47, %land.rhs
  %10 = phi i1 [ false, %sw.bb47 ], [ %tobool57, %land.rhs ]
  %land.ext = zext i1 %10 to i32
  br label %return

sw.bb59:                                          ; preds = %if.end42
  %cmp60 = icmp eq i32 %bf.clear, 51
  br i1 %cmp60, label %if.then62, label %return

if.then62:                                        ; preds = %sw.bb59
  %operands64 = getelementptr inbounds %union.tree_node* %arg.tr, i64 0, i32 0, i32 2
  %arrayidx65 = bitcast i32* %operands64 to %union.tree_node**
  %11 = load %union.tree_node** %arrayidx65, align 8, !tbaa !14
  %call66 = tail call fastcc i32 @twoval_comparison_p(%union.tree_node* %11, %union.tree_node** %cval1, %union.tree_node** %cval2, i32* %save_p)
  %tobool67 = icmp eq i32 %call66, 0
  br i1 %tobool67, label %land.end80, label %land.lhs.true68

land.lhs.true68:                                  ; preds = %if.then62
  %arrayidx71 = getelementptr inbounds i32* %operands64, i64 2
  %12 = bitcast i32* %arrayidx71 to %union.tree_node**
  %13 = load %union.tree_node** %12, align 8, !tbaa !14
  %call72 = tail call fastcc i32 @twoval_comparison_p(%union.tree_node* %13, %union.tree_node** %cval1, %union.tree_node** %cval2, i32* %save_p)
  %tobool73 = icmp eq i32 %call72, 0
  br i1 %tobool73, label %land.end80, label %land.rhs74

land.rhs74:                                       ; preds = %land.lhs.true68
  %arrayidx77 = getelementptr inbounds i32* %operands64, i64 4
  %14 = bitcast i32* %arrayidx77 to %union.tree_node**
  %15 = load %union.tree_node** %14, align 8, !tbaa !14
  %call78 = tail call fastcc i32 @twoval_comparison_p(%union.tree_node* %15, %union.tree_node** %cval1, %union.tree_node** %cval2, i32* %save_p)
  %tobool79 = icmp ne i32 %call78, 0
  br label %land.end80

land.end80:                                       ; preds = %land.lhs.true68, %if.then62, %land.rhs74
  %16 = phi i1 [ false, %land.lhs.true68 ], [ false, %if.then62 ], [ %tobool79, %land.rhs74 ]
  %land.ext81 = zext i1 %16 to i32
  br label %return

sw.bb83:                                          ; preds = %if.end42
  %operands85 = getelementptr inbounds %union.tree_node* %arg.tr, i64 0, i32 0, i32 2
  %arrayidx86 = bitcast i32* %operands85 to %union.tree_node**
  %17 = load %union.tree_node** %arrayidx86, align 8, !tbaa !14
  %arrayidx89 = getelementptr inbounds i32* %operands85, i64 2
  %18 = bitcast i32* %arrayidx89 to %union.tree_node**
  %19 = load %union.tree_node** %18, align 8, !tbaa !14
  %call90 = tail call i32 @operand_equal_p(%union.tree_node* %17, %union.tree_node* %19, i32 0)
  %tobool91 = icmp eq i32 %call90, 0
  br i1 %tobool91, label %if.end93, label %return

if.end93:                                         ; preds = %sw.bb83
  %20 = load %union.tree_node** %cval1, align 8, !tbaa !14
  %cmp94 = icmp eq %union.tree_node* %20, null
  %21 = load %union.tree_node** %arrayidx86, align 8, !tbaa !14
  br i1 %cmp94, label %if.then96, label %if.else100

if.then96:                                        ; preds = %if.end93
  store %union.tree_node* %21, %union.tree_node** %cval1, align 8, !tbaa !14
  br label %if.end125

if.else100:                                       ; preds = %if.end93
  %call104 = tail call i32 @operand_equal_p(%union.tree_node* %20, %union.tree_node* %21, i32 0)
  %tobool105 = icmp eq i32 %call104, 0
  br i1 %tobool105, label %if.else107, label %if.end125

if.else107:                                       ; preds = %if.else100
  %22 = load %union.tree_node** %cval2, align 8, !tbaa !14
  %cmp108 = icmp eq %union.tree_node* %22, null
  %23 = load %union.tree_node** %arrayidx86, align 8, !tbaa !14
  br i1 %cmp108, label %if.then110, label %if.else114

if.then110:                                       ; preds = %if.else107
  store %union.tree_node* %23, %union.tree_node** %cval2, align 8, !tbaa !14
  br label %if.end125

if.else114:                                       ; preds = %if.else107
  %call118 = tail call i32 @operand_equal_p(%union.tree_node* %22, %union.tree_node* %23, i32 0)
  %tobool119 = icmp eq i32 %call118, 0
  br i1 %tobool119, label %return, label %if.end125

if.end125:                                        ; preds = %if.else114, %if.else100, %if.then110, %if.then96
  %24 = load %union.tree_node** %cval1, align 8, !tbaa !14
  %25 = load %union.tree_node** %18, align 8, !tbaa !14
  %call129 = tail call i32 @operand_equal_p(%union.tree_node* %24, %union.tree_node* %25, i32 0)
  %tobool130 = icmp eq i32 %call129, 0
  br i1 %tobool130, label %if.else132, label %if.end149

if.else132:                                       ; preds = %if.end125
  %26 = load %union.tree_node** %cval2, align 8, !tbaa !14
  %cmp133 = icmp eq %union.tree_node* %26, null
  %27 = load %union.tree_node** %18, align 8, !tbaa !14
  br i1 %cmp133, label %if.then135, label %if.else139

if.then135:                                       ; preds = %if.else132
  store %union.tree_node* %27, %union.tree_node** %cval2, align 8, !tbaa !14
  br label %if.end149

if.else139:                                       ; preds = %if.else132
  %call143 = tail call i32 @operand_equal_p(%union.tree_node* %26, %union.tree_node* %27, i32 0)
  %tobool144 = icmp eq i32 %call143, 0
  br i1 %tobool144, label %return, label %if.end149

if.end149:                                        ; preds = %if.else139, %if.end125, %if.then135
  br label %return

return.loopexit226:                               ; preds = %if.end42
  br label %return

return:                                           ; preds = %if.end42, %if.then35, %lor.lhs.false37, %return.loopexit226, %if.else139, %if.else114, %sw.bb83, %sw.bb59, %if.end149, %land.end80, %land.end
  %retval.0 = phi i32 [ 1, %if.end149 ], [ %land.ext81, %land.end80 ], [ %land.ext, %land.end ], [ 0, %sw.bb59 ], [ 0, %sw.bb83 ], [ 0, %if.else114 ], [ 0, %if.else139 ], [ 0, %return.loopexit226 ], [ 1, %if.end42 ], [ 0, %if.then35 ], [ 0, %lor.lhs.false37 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @eval_subst(%union.tree_node* readonly %arg, %union.tree_node* %old0, %union.tree_node* %new0, %union.tree_node* %old1, %union.tree_node* %new1) #0 {
entry:
  br label %tailrecurse

tailrecurse:                                      ; preds = %tailrecurse.backedge, %entry
  %arg.tr = phi %union.tree_node* [ %arg, %entry ], [ %arg.tr.be, %tailrecurse.backedge ]
  %code3 = getelementptr inbounds %union.tree_node* %arg.tr, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code3, align 8
  %bf.clear = and i32 %bf.load, 255
  %idxprom171 = zext i32 %bf.clear to i64
  %arrayidx = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom171
  %0 = load i8* %arrayidx, align 1, !tbaa !15
  %cmp = icmp eq i8 %0, 101
  %cmp5 = icmp eq i32 %bf.clear, 96
  %or.cond = and i1 %cmp, %cmp5
  %cmp.not = xor i1 %cmp, true
  %brmerge = or i1 %or.cond, %cmp.not
  %.mux = select i1 %or.cond, i8 49, i8 %0
  br i1 %brmerge, label %if.end16, label %land.lhs.true10

land.lhs.true10:                                  ; preds = %tailrecurse
  %bf.clear.off = add i32 %bf.clear, -91
  %1 = icmp ult i32 %bf.clear.off, 2
  %. = select i1 %1, i8 50, i8 %0
  br label %if.end16

if.end16:                                         ; preds = %land.lhs.true10, %tailrecurse
  %class.0 = phi i8 [ %.mux, %tailrecurse ], [ %., %land.lhs.true10 ]
  %conv17 = sext i8 %class.0 to i32
  switch i32 %conv17, label %return [
    i32 49, label %sw.bb
    i32 50, label %sw.bb21
    i32 101, label %sw.bb32
    i32 60, label %sw.bb58
  ]

sw.bb:                                            ; preds = %if.end16
  %type1.le = getelementptr inbounds %union.tree_node* %arg.tr, i64 0, i32 0, i32 0, i32 1
  %2 = load %union.tree_node** %type1.le, align 8, !tbaa !11
  %operands = getelementptr inbounds %union.tree_node* %arg.tr, i64 0, i32 0, i32 2
  %arrayidx18 = bitcast i32* %operands to %union.tree_node**
  %3 = load %union.tree_node** %arrayidx18, align 8, !tbaa !14
  %call = tail call fastcc %union.tree_node* @eval_subst(%union.tree_node* %3, %union.tree_node* %old0, %union.tree_node* %new0, %union.tree_node* %old1, %union.tree_node* %new1)
  %call19 = tail call %union.tree_node* @build1(i32 %bf.clear, %union.tree_node* %2, %union.tree_node* %call) #1
  %call20 = tail call %union.tree_node* @fold(%union.tree_node* %call19)
  ret %union.tree_node* %call20

sw.bb21:                                          ; preds = %if.end16
  %type1.le188 = getelementptr inbounds %union.tree_node* %arg.tr, i64 0, i32 0, i32 0, i32 1
  %4 = load %union.tree_node** %type1.le188, align 8, !tbaa !11
  %operands23 = getelementptr inbounds %union.tree_node* %arg.tr, i64 0, i32 0, i32 2
  %arrayidx24 = bitcast i32* %operands23 to %union.tree_node**
  %5 = load %union.tree_node** %arrayidx24, align 8, !tbaa !14
  %call25 = tail call fastcc %union.tree_node* @eval_subst(%union.tree_node* %5, %union.tree_node* %old0, %union.tree_node* %new0, %union.tree_node* %old1, %union.tree_node* %new1)
  %arrayidx28 = getelementptr inbounds i32* %operands23, i64 2
  %6 = bitcast i32* %arrayidx28 to %union.tree_node**
  %7 = load %union.tree_node** %6, align 8, !tbaa !14
  %call29 = tail call fastcc %union.tree_node* @eval_subst(%union.tree_node* %7, %union.tree_node* %old0, %union.tree_node* %new0, %union.tree_node* %old1, %union.tree_node* %new1)
  %call30 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %bf.clear, %union.tree_node* %4, %union.tree_node* %call25, %union.tree_node* %call29) #1
  %call31 = tail call %union.tree_node* @fold(%union.tree_node* %call30)
  ret %union.tree_node* %call31

sw.bb32:                                          ; preds = %if.end16
  switch i32 %bf.clear, label %sw.bb58 [
    i32 118, label %sw.bb33
    i32 47, label %sw.bb38
    i32 51, label %sw.bb43
  ]

sw.bb33:                                          ; preds = %sw.bb32
  %operands35 = getelementptr inbounds %union.tree_node* %arg.tr, i64 0, i32 0, i32 2
  br label %tailrecurse.backedge

tailrecurse.backedge:                             ; preds = %sw.bb33, %sw.bb38
  %arg.tr.be.in.in = phi i32* [ %operands35, %sw.bb33 ], [ %arrayidx41, %sw.bb38 ]
  %arg.tr.be.in = bitcast i32* %arg.tr.be.in.in to %union.tree_node**
  %arg.tr.be = load %union.tree_node** %arg.tr.be.in, align 8
  br label %tailrecurse

sw.bb38:                                          ; preds = %sw.bb32
  %operands40 = getelementptr inbounds %union.tree_node* %arg.tr, i64 0, i32 0, i32 2
  %arrayidx41 = getelementptr inbounds i32* %operands40, i64 2
  br label %tailrecurse.backedge

sw.bb43:                                          ; preds = %sw.bb32
  %type1.le192 = getelementptr inbounds %union.tree_node* %arg.tr, i64 0, i32 0, i32 0, i32 1
  %8 = load %union.tree_node** %type1.le192, align 8, !tbaa !11
  %operands45 = getelementptr inbounds %union.tree_node* %arg.tr, i64 0, i32 0, i32 2
  %arrayidx46 = bitcast i32* %operands45 to %union.tree_node**
  %9 = load %union.tree_node** %arrayidx46, align 8, !tbaa !14
  %call47 = tail call fastcc %union.tree_node* @eval_subst(%union.tree_node* %9, %union.tree_node* %old0, %union.tree_node* %new0, %union.tree_node* %old1, %union.tree_node* %new1)
  %arrayidx50 = getelementptr inbounds i32* %operands45, i64 2
  %10 = bitcast i32* %arrayidx50 to %union.tree_node**
  %11 = load %union.tree_node** %10, align 8, !tbaa !14
  %call51 = tail call fastcc %union.tree_node* @eval_subst(%union.tree_node* %11, %union.tree_node* %old0, %union.tree_node* %new0, %union.tree_node* %old1, %union.tree_node* %new1)
  %arrayidx54 = getelementptr inbounds i32* %operands45, i64 4
  %12 = bitcast i32* %arrayidx54 to %union.tree_node**
  %13 = load %union.tree_node** %12, align 8, !tbaa !14
  %call55 = tail call fastcc %union.tree_node* @eval_subst(%union.tree_node* %13, %union.tree_node* %old0, %union.tree_node* %new0, %union.tree_node* %old1, %union.tree_node* %new1)
  %call56 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 51, %union.tree_node* %8, %union.tree_node* %call47, %union.tree_node* %call51, %union.tree_node* %call55) #1
  %call57 = tail call %union.tree_node* @fold(%union.tree_node* %call56)
  ret %union.tree_node* %call57

sw.bb58:                                          ; preds = %sw.bb32, %if.end16
  %type1.le190 = getelementptr inbounds %union.tree_node* %arg.tr, i64 0, i32 0, i32 0, i32 1
  %14 = load %union.tree_node** %type1.le190, align 8, !tbaa !11
  %operands60 = getelementptr inbounds %union.tree_node* %arg.tr, i64 0, i32 0, i32 2
  %arrayidx61 = bitcast i32* %operands60 to %union.tree_node**
  %15 = load %union.tree_node** %arrayidx61, align 8, !tbaa !14
  %arrayidx64 = getelementptr inbounds i32* %operands60, i64 2
  %16 = bitcast i32* %arrayidx64 to %union.tree_node**
  %17 = load %union.tree_node** %16, align 8, !tbaa !14
  %cmp65 = icmp eq %union.tree_node* %15, %old0
  br i1 %cmp65, label %if.end78, label %lor.lhs.false67

lor.lhs.false67:                                  ; preds = %sw.bb58
  %call68 = tail call i32 @operand_equal_p(%union.tree_node* %15, %union.tree_node* %old0, i32 0)
  %tobool = icmp eq i32 %call68, 0
  br i1 %tobool, label %if.else70, label %if.end78

if.else70:                                        ; preds = %lor.lhs.false67
  %cmp71 = icmp eq %union.tree_node* %15, %old1
  br i1 %cmp71, label %if.then76, label %lor.lhs.false73

lor.lhs.false73:                                  ; preds = %if.else70
  %call74 = tail call i32 @operand_equal_p(%union.tree_node* %15, %union.tree_node* %old1, i32 0)
  %tobool75 = icmp eq i32 %call74, 0
  br i1 %tobool75, label %if.end78, label %if.then76

if.then76:                                        ; preds = %lor.lhs.false73, %if.else70
  br label %if.end78

if.end78:                                         ; preds = %sw.bb58, %lor.lhs.false67, %lor.lhs.false73, %if.then76
  %arg0.0 = phi %union.tree_node* [ %new1, %if.then76 ], [ %15, %lor.lhs.false73 ], [ %new0, %lor.lhs.false67 ], [ %new0, %sw.bb58 ]
  %cmp79 = icmp eq %union.tree_node* %17, %old0
  br i1 %cmp79, label %if.end93, label %lor.lhs.false81

lor.lhs.false81:                                  ; preds = %if.end78
  %call82 = tail call i32 @operand_equal_p(%union.tree_node* %17, %union.tree_node* %old0, i32 0)
  %tobool83 = icmp eq i32 %call82, 0
  br i1 %tobool83, label %if.else85, label %if.end93

if.else85:                                        ; preds = %lor.lhs.false81
  %cmp86 = icmp eq %union.tree_node* %17, %old1
  br i1 %cmp86, label %if.then91, label %lor.lhs.false88

lor.lhs.false88:                                  ; preds = %if.else85
  %call89 = tail call i32 @operand_equal_p(%union.tree_node* %17, %union.tree_node* %old1, i32 0)
  %tobool90 = icmp eq i32 %call89, 0
  br i1 %tobool90, label %if.end93, label %if.then91

if.then91:                                        ; preds = %lor.lhs.false88, %if.else85
  br label %if.end93

if.end93:                                         ; preds = %if.end78, %lor.lhs.false81, %lor.lhs.false88, %if.then91
  %arg1.0 = phi %union.tree_node* [ %new1, %if.then91 ], [ %17, %lor.lhs.false88 ], [ %new0, %lor.lhs.false81 ], [ %new0, %if.end78 ]
  %call94 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %bf.clear, %union.tree_node* %14, %union.tree_node* %arg0.0, %union.tree_node* %arg1.0) #1
  %call95 = tail call %union.tree_node* @fold(%union.tree_node* %call94)
  br label %return

return:                                           ; preds = %if.end16, %if.end93
  %retval.0 = phi %union.tree_node* [ %call95, %if.end93 ], [ %arg.tr, %if.end16 ]
  ret %union.tree_node* %retval.0
}

declare i32 @target_isnan(%struct.realvaluetype* byval align 8) #3

declare %union.tree_node* @truthvalue_conversion(%union.tree_node*) #3

; Function Attrs: nounwind uwtable
define internal fastcc i32 @operand_equal_for_comparison_p(%union.tree_node* %arg0, %union.tree_node* %arg1, %union.tree_node* %other) #0 {
entry:
  %unsignedp1 = alloca i32, align 4
  %unsignedpo = alloca i32, align 4
  %call = call i32 @operand_equal_p(%union.tree_node* %arg0, %union.tree_node* %arg1, i32 0)
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.end, label %return

if.end:                                           ; preds = %entry
  %type = getelementptr inbounds %union.tree_node* %arg0, i64 0, i32 0, i32 0, i32 1
  %0 = load %union.tree_node** %type, align 8, !tbaa !11
  %code = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  switch i32 %bf.clear, label %return [
    i32 6, label %lor.lhs.false25
    i32 10, label %lor.lhs.false25
    i32 11, label %lor.lhs.false25
    i32 12, label %lor.lhs.false25
  ]

lor.lhs.false25:                                  ; preds = %if.end, %if.end, %if.end, %if.end
  %type27 = getelementptr inbounds %union.tree_node* %arg1, i64 0, i32 0, i32 0, i32 1
  %1 = load %union.tree_node** %type27, align 8, !tbaa !11
  %code29 = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 0, i32 2
  %bf.load30 = load i32* %code29, align 8
  %bf.clear31 = and i32 %bf.load30, 255
  switch i32 %bf.clear31, label %return [
    i32 6, label %while.cond.preheader
    i32 10, label %while.cond.preheader
    i32 11, label %while.cond.preheader
    i32 12, label %while.cond.preheader
  ]

while.cond.preheader:                             ; preds = %lor.lhs.false25, %lor.lhs.false25, %lor.lhs.false25, %lor.lhs.false25
  %2 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !14
  br label %while.cond

while.cond:                                       ; preds = %while.cond.preheader, %land.rhs
  %3 = phi %union.tree_node* [ %5, %land.rhs ], [ %0, %while.cond.preheader ]
  %primarg0.0 = phi %union.tree_node* [ %4, %land.rhs ], [ %arg0, %while.cond.preheader ]
  %code60 = getelementptr inbounds %union.tree_node* %primarg0.0, i64 0, i32 0, i32 0, i32 2
  %bf.load61 = load i32* %code60, align 8
  %bf.clear62 = and i32 %bf.load61, 255
  %bf.clear62.off = add i32 %bf.clear62, -114
  %switch = icmp ult i32 %bf.clear62.off, 3
  br i1 %switch, label %land.lhs.true, label %while.cond96

land.lhs.true:                                    ; preds = %while.cond
  %operands = getelementptr inbounds %union.tree_node* %primarg0.0, i64 0, i32 0, i32 2
  %arrayidx = bitcast i32* %operands to %union.tree_node**
  %4 = load %union.tree_node** %arrayidx, align 8, !tbaa !14
  %cmp76 = icmp eq %union.tree_node* %4, %2
  br i1 %cmp76, label %while.cond96, label %land.rhs

land.rhs:                                         ; preds = %land.lhs.true
  %type79 = bitcast %union.tree_node* %3 to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type* %type79, i64 0, i32 6
  %bf.load80 = load i32* %mode, align 4
  %type86 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 0, i32 1
  %5 = load %union.tree_node** %type86, align 8, !tbaa !11
  %type87 = bitcast %union.tree_node* %5 to %struct.tree_type*
  %mode88 = getelementptr inbounds %struct.tree_type* %type87, i64 0, i32 6
  %bf.load89 = load i32* %mode88, align 4
  %bf.lshr222 = xor i32 %bf.load89, %bf.load80
  %6 = and i32 %bf.lshr222, 65024
  %cmp92 = icmp eq i32 %6, 0
  br i1 %cmp92, label %while.cond, label %while.cond96

while.cond96:                                     ; preds = %while.cond, %land.lhs.true, %land.rhs, %land.rhs119
  %7 = phi %union.tree_node* [ %9, %land.rhs119 ], [ %1, %land.rhs ], [ %1, %land.lhs.true ], [ %1, %while.cond ]
  %primarg1.0 = phi %union.tree_node* [ %8, %land.rhs119 ], [ %arg1, %land.rhs ], [ %arg1, %land.lhs.true ], [ %arg1, %while.cond ]
  %code98 = getelementptr inbounds %union.tree_node* %primarg1.0, i64 0, i32 0, i32 0, i32 2
  %bf.load99 = load i32* %code98, align 8
  %bf.clear100 = and i32 %bf.load99, 255
  %bf.clear100.off = add i32 %bf.clear100, -114
  %switch223 = icmp ult i32 %bf.clear100.off, 3
  br i1 %switch223, label %land.lhs.true114, label %while.end143

land.lhs.true114:                                 ; preds = %while.cond96
  %operands116 = getelementptr inbounds %union.tree_node* %primarg1.0, i64 0, i32 0, i32 2
  %arrayidx117 = bitcast i32* %operands116 to %union.tree_node**
  %8 = load %union.tree_node** %arrayidx117, align 8, !tbaa !14
  %cmp118 = icmp eq %union.tree_node* %8, %2
  br i1 %cmp118, label %while.end143, label %land.rhs119

land.rhs119:                                      ; preds = %land.lhs.true114
  %type122 = bitcast %union.tree_node* %7 to %struct.tree_type*
  %mode123 = getelementptr inbounds %struct.tree_type* %type122, i64 0, i32 6
  %bf.load124 = load i32* %mode123, align 4
  %type131 = getelementptr inbounds %union.tree_node* %8, i64 0, i32 0, i32 0, i32 1
  %9 = load %union.tree_node** %type131, align 8, !tbaa !11
  %type132 = bitcast %union.tree_node* %9 to %struct.tree_type*
  %mode133 = getelementptr inbounds %struct.tree_type* %type132, i64 0, i32 6
  %bf.load134 = load i32* %mode133, align 4
  %bf.lshr125221 = xor i32 %bf.load134, %bf.load124
  %10 = and i32 %bf.lshr125221, 65024
  %cmp137 = icmp eq i32 %10, 0
  br i1 %cmp137, label %while.cond96, label %while.end143

while.end143:                                     ; preds = %while.cond96, %land.lhs.true114, %land.rhs119
  %call144 = call i32 @operand_equal_p(%union.tree_node* %primarg0.0, %union.tree_node* %primarg1.0, i32 0)
  %tobool145 = icmp eq i32 %call144, 0
  br i1 %tobool145, label %if.end147, label %return

if.end147:                                        ; preds = %while.end143
  %call148 = call %union.tree_node* @get_narrower(%union.tree_node* %arg1, i32* %unsignedp1) #1
  %call149 = call %union.tree_node* @get_narrower(%union.tree_node* %other, i32* %unsignedpo) #1
  %11 = load %union.tree_node** %type27, align 8, !tbaa !11
  %type152 = bitcast %union.tree_node* %11 to %struct.tree_type*
  %precision = getelementptr inbounds %struct.tree_type* %type152, i64 0, i32 6
  %bf.load153 = load i32* %precision, align 4
  %bf.clear154 = and i32 %bf.load153, 511
  %12 = load i32* %unsignedp1, align 4, !tbaa !12
  %13 = load i32* %unsignedpo, align 4, !tbaa !12
  %cmp155 = icmp eq i32 %12, %13
  br i1 %cmp155, label %land.lhs.true156, label %if.end185

land.lhs.true156:                                 ; preds = %if.end147
  %type158 = getelementptr inbounds %union.tree_node* %call148, i64 0, i32 0, i32 0, i32 1
  %14 = load %union.tree_node** %type158, align 8, !tbaa !11
  %type159 = bitcast %union.tree_node* %14 to %struct.tree_type*
  %precision160 = getelementptr inbounds %struct.tree_type* %type159, i64 0, i32 6
  %bf.load161 = load i32* %precision160, align 4
  %bf.clear162 = and i32 %bf.load161, 511
  %cmp163 = icmp ult i32 %bf.clear162, %bf.clear154
  br i1 %cmp163, label %land.lhs.true164, label %if.end185

land.lhs.true164:                                 ; preds = %land.lhs.true156
  %type166 = getelementptr inbounds %union.tree_node* %call149, i64 0, i32 0, i32 0, i32 1
  %15 = load %union.tree_node** %type166, align 8, !tbaa !11
  %type167 = bitcast %union.tree_node* %15 to %struct.tree_type*
  %precision168 = getelementptr inbounds %struct.tree_type* %type167, i64 0, i32 6
  %bf.load169 = load i32* %precision168, align 4
  %bf.clear170 = and i32 %bf.load169, 511
  %cmp171 = icmp ult i32 %bf.clear170, %bf.clear154
  br i1 %cmp171, label %if.then172, label %if.end185

if.then172:                                       ; preds = %land.lhs.true164
  %16 = load %union.tree_node** %type, align 8, !tbaa !11
  %call178 = call %union.tree_node* @signed_or_unsigned_type(i32 %12, %union.tree_node* %14) #1
  %call179 = call %union.tree_node* @convert(%union.tree_node* %call178, %union.tree_node* %call148) #1
  %call180 = call %union.tree_node* @convert(%union.tree_node* %16, %union.tree_node* %call179) #1
  %call181 = call i32 @operand_equal_p(%union.tree_node* %arg0, %union.tree_node* %call180, i32 0)
  %tobool182 = icmp eq i32 %call181, 0
  br i1 %tobool182, label %if.end185, label %return

if.end185:                                        ; preds = %if.then172, %land.lhs.true164, %land.lhs.true156, %if.end147
  br label %return

return:                                           ; preds = %if.then172, %while.end143, %if.end, %lor.lhs.false25, %entry, %if.end185
  %retval.0 = phi i32 [ 0, %if.end185 ], [ 1, %entry ], [ 0, %lor.lhs.false25 ], [ 0, %if.end ], [ 1, %while.end143 ], [ 1, %if.then172 ]
  ret i32 %retval.0
}

declare i32 @has_cleanups(%union.tree_node*) #3

declare %union.tree_node* @fold_builtin(%union.tree_node*) #3

; Function Attrs: nounwind uwtable
define i32 @tree_expr_nonnegative_p(%union.tree_node* %t) #0 {
entry:
  br label %tailrecurse

tailrecurse:                                      ; preds = %tailrecurse.backedge, %entry
  %t.tr = phi %union.tree_node* [ %t, %entry ], [ %t.tr.be, %tailrecurse.backedge ]
  %code = getelementptr inbounds %union.tree_node* %t.tr, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  switch i32 %bf.clear, label %sw.default [
    i32 80, label %return
    i32 81, label %return
    i32 25, label %sw.bb1
    i32 62, label %sw.bb2
    i32 63, label %sw.bb2
    i32 64, label %sw.bb2
    i32 65, label %sw.bb2
    i32 66, label %sw.bb9
    i32 67, label %sw.bb9
    i32 68, label %sw.bb9
    i32 69, label %sw.bb9
    i32 51, label %sw.bb14
    i32 47, label %sw.bb28
    i32 78, label %sw.bb33
    i32 79, label %sw.bb47
    i32 48, label %sw.bb58
    i32 52, label %sw.bb63
    i32 118, label %sw.bb68
    i32 116, label %sw.bb73
    i32 120, label %sw.bb78
  ]

sw.bb1:                                           ; preds = %tailrecurse
  %call = tail call i32 @tree_int_cst_sgn(%union.tree_node* %t.tr) #1
  %call.lobit = lshr i32 %call, 31
  %call.lobit.not = xor i32 %call.lobit, 1
  br label %return

sw.bb2:                                           ; preds = %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse
  %operands = getelementptr inbounds %union.tree_node* %t.tr, i64 0, i32 0, i32 2
  %arrayidx = bitcast i32* %operands to %union.tree_node**
  %0 = load %union.tree_node** %arrayidx, align 8, !tbaa !14
  %call3 = tail call i32 @tree_expr_nonnegative_p(%union.tree_node* %0)
  %tobool = icmp eq i32 %call3, 0
  br i1 %tobool, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %sw.bb2
  %arrayidx6 = getelementptr inbounds i32* %operands, i64 2
  %1 = bitcast i32* %arrayidx6 to %union.tree_node**
  %2 = load %union.tree_node** %1, align 8, !tbaa !14
  %call7 = tail call i32 @tree_expr_nonnegative_p(%union.tree_node* %2)
  %tobool8 = icmp ne i32 %call7, 0
  br label %land.end

land.end:                                         ; preds = %sw.bb2, %land.rhs
  %3 = phi i1 [ false, %sw.bb2 ], [ %tobool8, %land.rhs ]
  %land.ext = zext i1 %3 to i32
  br label %return

sw.bb9:                                           ; preds = %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse
  %operands11 = getelementptr inbounds %union.tree_node* %t.tr, i64 0, i32 0, i32 2
  br label %tailrecurse.backedge

tailrecurse.backedge:                             ; preds = %sw.bb9, %sw.bb28, %sw.bb58, %sw.bb63, %sw.bb68, %sw.bb73
  %t.tr.be.in.in = phi i32* [ %operands11, %sw.bb9 ], [ %arrayidx31, %sw.bb28 ], [ %arrayidx61, %sw.bb58 ], [ %arrayidx66, %sw.bb63 ], [ %operands70, %sw.bb68 ], [ %operands75, %sw.bb73 ]
  %t.tr.be.in = bitcast i32* %t.tr.be.in.in to %union.tree_node**
  %t.tr.be = load %union.tree_node** %t.tr.be.in, align 8
  br label %tailrecurse

sw.bb14:                                          ; preds = %tailrecurse
  %operands16 = getelementptr inbounds %union.tree_node* %t.tr, i64 0, i32 0, i32 2
  %arrayidx17 = getelementptr inbounds i32* %operands16, i64 2
  %4 = bitcast i32* %arrayidx17 to %union.tree_node**
  %5 = load %union.tree_node** %4, align 8, !tbaa !14
  %call18 = tail call i32 @tree_expr_nonnegative_p(%union.tree_node* %5)
  %tobool19 = icmp eq i32 %call18, 0
  br i1 %tobool19, label %land.end26, label %land.rhs20

land.rhs20:                                       ; preds = %sw.bb14
  %arrayidx23 = getelementptr inbounds i32* %operands16, i64 4
  %6 = bitcast i32* %arrayidx23 to %union.tree_node**
  %7 = load %union.tree_node** %6, align 8, !tbaa !14
  %call24 = tail call i32 @tree_expr_nonnegative_p(%union.tree_node* %7)
  %tobool25 = icmp ne i32 %call24, 0
  br label %land.end26

land.end26:                                       ; preds = %sw.bb14, %land.rhs20
  %8 = phi i1 [ false, %sw.bb14 ], [ %tobool25, %land.rhs20 ]
  %land.ext27 = zext i1 %8 to i32
  br label %return

sw.bb28:                                          ; preds = %tailrecurse
  %operands30 = getelementptr inbounds %union.tree_node* %t.tr, i64 0, i32 0, i32 2
  %arrayidx31 = getelementptr inbounds i32* %operands30, i64 2
  br label %tailrecurse.backedge

sw.bb33:                                          ; preds = %tailrecurse
  %operands35 = getelementptr inbounds %union.tree_node* %t.tr, i64 0, i32 0, i32 2
  %arrayidx36 = bitcast i32* %operands35 to %union.tree_node**
  %9 = load %union.tree_node** %arrayidx36, align 8, !tbaa !14
  %call37 = tail call i32 @tree_expr_nonnegative_p(%union.tree_node* %9)
  %tobool38 = icmp eq i32 %call37, 0
  br i1 %tobool38, label %land.end45, label %land.rhs39

land.rhs39:                                       ; preds = %sw.bb33
  %arrayidx42 = getelementptr inbounds i32* %operands35, i64 2
  %10 = bitcast i32* %arrayidx42 to %union.tree_node**
  %11 = load %union.tree_node** %10, align 8, !tbaa !14
  %call43 = tail call i32 @tree_expr_nonnegative_p(%union.tree_node* %11)
  %tobool44 = icmp ne i32 %call43, 0
  br label %land.end45

land.end45:                                       ; preds = %sw.bb33, %land.rhs39
  %12 = phi i1 [ false, %sw.bb33 ], [ %tobool44, %land.rhs39 ]
  %land.ext46 = zext i1 %12 to i32
  br label %return

sw.bb47:                                          ; preds = %tailrecurse
  %operands49 = getelementptr inbounds %union.tree_node* %t.tr, i64 0, i32 0, i32 2
  %arrayidx50 = bitcast i32* %operands49 to %union.tree_node**
  %13 = load %union.tree_node** %arrayidx50, align 8, !tbaa !14
  %call51 = tail call i32 @tree_expr_nonnegative_p(%union.tree_node* %13)
  %tobool52 = icmp eq i32 %call51, 0
  br i1 %tobool52, label %lor.rhs, label %lor.end

lor.rhs:                                          ; preds = %sw.bb47
  %arrayidx55 = getelementptr inbounds i32* %operands49, i64 2
  %14 = bitcast i32* %arrayidx55 to %union.tree_node**
  %15 = load %union.tree_node** %14, align 8, !tbaa !14
  %call56 = tail call i32 @tree_expr_nonnegative_p(%union.tree_node* %15)
  %tobool57 = icmp ne i32 %call56, 0
  br label %lor.end

lor.end:                                          ; preds = %sw.bb47, %lor.rhs
  %16 = phi i1 [ true, %sw.bb47 ], [ %tobool57, %lor.rhs ]
  %lor.ext = zext i1 %16 to i32
  br label %return

sw.bb58:                                          ; preds = %tailrecurse
  %operands60 = getelementptr inbounds %union.tree_node* %t.tr, i64 0, i32 0, i32 2
  %arrayidx61 = getelementptr inbounds i32* %operands60, i64 2
  br label %tailrecurse.backedge

sw.bb63:                                          ; preds = %tailrecurse
  %operands65 = getelementptr inbounds %union.tree_node* %t.tr, i64 0, i32 0, i32 2
  %arrayidx66 = getelementptr inbounds i32* %operands65, i64 2
  br label %tailrecurse.backedge

sw.bb68:                                          ; preds = %tailrecurse
  %operands70 = getelementptr inbounds %union.tree_node* %t.tr, i64 0, i32 0, i32 2
  br label %tailrecurse.backedge

sw.bb73:                                          ; preds = %tailrecurse
  %operands75 = getelementptr inbounds %union.tree_node* %t.tr, i64 0, i32 0, i32 2
  br label %tailrecurse.backedge

sw.bb78:                                          ; preds = %tailrecurse
  %operands80 = getelementptr inbounds %union.tree_node* %t.tr, i64 0, i32 0, i32 2
  %arrayidx81 = getelementptr inbounds i32* %operands80, i64 2
  %17 = bitcast i32* %arrayidx81 to %struct.rtx_def**
  %18 = load %struct.rtx_def** %17, align 8, !tbaa !14
  %call82 = tail call i32 @rtl_expr_nonnegative_p(%struct.rtx_def* %18)
  br label %return

sw.default:                                       ; preds = %tailrecurse
  %idxprom.i106 = zext i32 %bf.clear to i64
  %arrayidx.i = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom.i106
  %19 = load i8* %arrayidx.i, align 1, !tbaa !15
  %cmp.i = icmp eq i8 %19, 60
  %cmp2.i = icmp eq i32 %bf.clear, 93
  %or.cond.i = or i1 %cmp.i, %cmp2.i
  %cmp5.i = icmp eq i32 %bf.clear, 91
  %or.cond18.i = or i1 %or.cond.i, %cmp5.i
  %cmp8.i = icmp eq i32 %bf.clear, 94
  %or.cond19.i = or i1 %or.cond18.i, %cmp8.i
  %cmp11.i = icmp eq i32 %bf.clear, 92
  %or.cond20.i = or i1 %or.cond19.i, %cmp11.i
  %cmp14.i = icmp eq i32 %bf.clear, 95
  %or.cond21.i = or i1 %or.cond20.i, %cmp14.i
  %cmp16.i = icmp eq i32 %bf.clear, 96
  %.cmp16.i = or i1 %or.cond21.i, %cmp16.i
  %20 = zext i1 %.cmp16.i to i32
  br label %return

return:                                           ; preds = %tailrecurse, %tailrecurse, %sw.default, %sw.bb78, %lor.end, %land.end45, %land.end26, %land.end, %sw.bb1
  %retval.0 = phi i32 [ %call82, %sw.bb78 ], [ %lor.ext, %lor.end ], [ %land.ext46, %land.end45 ], [ %land.ext27, %land.end26 ], [ %land.ext, %land.end ], [ %call.lobit.not, %sw.bb1 ], [ %20, %sw.default ], [ 1, %tailrecurse ], [ 1, %tailrecurse ]
  ret i32 %retval.0
}

; Function Attrs: nounwind readonly uwtable
define i32 @rtl_expr_nonnegative_p(%struct.rtx_def* nocapture readonly %r) #4 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %r, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %sw.default [
    i32 54, label %sw.bb
    i32 55, label %sw.bb1
    i32 56, label %sw.bb11
    i32 68, label %return
    i32 67, label %return
  ]

sw.bb:                                            ; preds = %entry
  %rtwint = getelementptr inbounds %struct.rtx_def* %r, i64 0, i32 1, i64 0, i32 0
  %1 = load i64* %rtwint, align 8, !tbaa !13
  %.lobit30 = lshr i64 %1, 63
  %2 = trunc i64 %.lobit30 to i32
  %.not31 = xor i32 %2, 1
  br label %return

sw.bb1:                                           ; preds = %entry
  %bf.clear3 = and i32 %bf.load, 16711680
  %cmp4 = icmp eq i32 %bf.clear3, 0
  br i1 %cmp4, label %if.then, label %return

if.then:                                          ; preds = %sw.bb1
  %rtwint8 = getelementptr inbounds %struct.rtx_def* %r, i64 0, i32 1, i64 2, i32 0
  %3 = load i64* %rtwint8, align 8, !tbaa !13
  %.lobit = lshr i64 %3, 63
  %4 = trunc i64 %.lobit to i32
  %.not = xor i32 %4, 1
  br label %return

sw.bb11:                                          ; preds = %entry
  %arrayidx13 = getelementptr inbounds %struct.rtx_def* %r, i64 0, i32 1, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx13 to %struct.rtvec_def**
  %5 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !14
  %num_elem = getelementptr inbounds %struct.rtvec_def* %5, i64 0, i32 0
  %6 = load i32* %num_elem, align 4, !tbaa !44
  %cmp1432 = icmp sgt i32 %6, 0
  br i1 %cmp1432, label %for.body, label %return

for.cond:                                         ; preds = %for.body
  %7 = trunc i64 %indvars.iv.next to i32
  %cmp14 = icmp slt i32 %7, %6
  br i1 %cmp14, label %for.body, label %return

for.body:                                         ; preds = %sw.bb11, %for.cond
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.cond ], [ 0, %sw.bb11 ]
  %arrayidx19 = getelementptr inbounds %struct.rtvec_def* %5, i64 0, i32 1, i64 %indvars.iv
  %8 = load %struct.rtx_def** %arrayidx19, align 8, !tbaa !14
  %call = tail call i32 @rtl_expr_nonnegative_p(%struct.rtx_def* %8)
  %tobool = icmp eq i32 %call, 0
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  br i1 %tobool, label %return, label %for.cond

sw.default:                                       ; preds = %entry
  br label %return

return:                                           ; preds = %for.body, %for.cond, %sw.bb11, %entry, %entry, %sw.bb1, %sw.default, %if.then, %sw.bb
  %retval.0 = phi i32 [ 0, %sw.default ], [ %.not, %if.then ], [ %.not31, %sw.bb ], [ 0, %sw.bb1 ], [ 1, %entry ], [ 1, %entry ], [ 1, %sw.bb11 ], [ 0, %for.body ], [ 1, %for.cond ]
  ret i32 %retval.0
}

declare %union.tree_node* @get_narrower(%union.tree_node*, i32*) #3

declare %union.tree_node* @signed_or_unsigned_type(i32, %union.tree_node*) #3

declare %union.tree_node* @get_inner_reference(%union.tree_node*, i64*, i64*, %union.tree_node**, i32*, i32*, i32*) #3

declare i32 @get_best_mode(i32, i32, i32, i32, i32) #3

declare %union.tree_node* @type_for_mode(i32, i32) #3

declare void @warning(i8*, ...) #3

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @decode_field_reference(%union.tree_node* %exp, i64* %pbitsize, i64* %pbitpos, i32* %pmode, i32* %punsignedp, i32* %pvolatilep, %union.tree_node** nocapture %pmask, %union.tree_node** nocapture %pand_mask) #0 {
entry:
  %offset = alloca %union.tree_node*, align 8
  %type = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 1
  %0 = load %union.tree_node** %type, align 8, !tbaa !11
  %code = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  switch i32 %bf.clear, label %return [
    i32 6, label %while.cond.preheader
    i32 10, label %while.cond.preheader
    i32 11, label %while.cond.preheader
    i32 12, label %while.cond.preheader
  ]

while.cond.preheader:                             ; preds = %entry, %entry, %entry, %entry
  %1 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !14
  br label %while.cond

while.cond:                                       ; preds = %while.cond.preheader, %land.rhs
  %2 = phi %union.tree_node* [ %4, %land.rhs ], [ %0, %while.cond.preheader ]
  %exp.addr.0 = phi %union.tree_node* [ %3, %land.rhs ], [ %exp, %while.cond.preheader ]
  %code26 = getelementptr inbounds %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 0, i32 2
  %bf.load27 = load i32* %code26, align 8
  %bf.clear28 = and i32 %bf.load27, 255
  %bf.clear28.off = add i32 %bf.clear28, -114
  %switch = icmp ult i32 %bf.clear28.off, 3
  br i1 %switch, label %land.lhs.true, label %while.end

land.lhs.true:                                    ; preds = %while.cond
  %operands = getelementptr inbounds %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 2
  %arrayidx = bitcast i32* %operands to %union.tree_node**
  %3 = load %union.tree_node** %arrayidx, align 8, !tbaa !14
  %cmp43 = icmp eq %union.tree_node* %3, %1
  br i1 %cmp43, label %if.end178, label %land.rhs

land.rhs:                                         ; preds = %land.lhs.true
  %type46 = bitcast %union.tree_node* %2 to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type* %type46, i64 0, i32 6
  %bf.load47 = load i32* %mode, align 4
  %type53 = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 0, i32 1
  %4 = load %union.tree_node** %type53, align 8, !tbaa !11
  %type54 = bitcast %union.tree_node* %4 to %struct.tree_type*
  %mode55 = getelementptr inbounds %struct.tree_type* %type54, i64 0, i32 6
  %bf.load56 = load i32* %mode55, align 4
  %bf.lshr267 = xor i32 %bf.load56, %bf.load47
  %5 = and i32 %bf.lshr267, 65024
  %cmp59 = icmp eq i32 %5, 0
  br i1 %cmp59, label %while.cond, label %if.end178

while.end:                                        ; preds = %while.cond
  %cmp67 = icmp eq i32 %bf.clear28, 88
  br i1 %cmp67, label %if.then68, label %if.end178

if.then68:                                        ; preds = %while.end
  %operands70 = getelementptr inbounds %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 2
  %arrayidx71 = getelementptr inbounds i32* %operands70, i64 2
  %6 = bitcast i32* %arrayidx71 to %union.tree_node**
  %7 = load %union.tree_node** %6, align 8, !tbaa !14
  %arrayidx74 = bitcast i32* %operands70 to %union.tree_node**
  %8 = load %union.tree_node** %arrayidx74, align 8, !tbaa !14
  br label %while.cond75

while.cond75:                                     ; preds = %land.rhs98, %if.then68
  %exp.addr.1 = phi %union.tree_node* [ %8, %if.then68 ], [ %9, %land.rhs98 ]
  %code77 = getelementptr inbounds %union.tree_node* %exp.addr.1, i64 0, i32 0, i32 0, i32 2
  %bf.load78 = load i32* %code77, align 8
  %bf.clear79 = and i32 %bf.load78, 255
  %bf.clear79.off = add i32 %bf.clear79, -114
  %switch270 = icmp ult i32 %bf.clear79.off, 3
  br i1 %switch270, label %land.lhs.true93, label %while.cond123

land.lhs.true93:                                  ; preds = %while.cond75
  %operands95 = getelementptr inbounds %union.tree_node* %exp.addr.1, i64 0, i32 0, i32 2
  %arrayidx96 = bitcast i32* %operands95 to %union.tree_node**
  %9 = load %union.tree_node** %arrayidx96, align 8, !tbaa !14
  %cmp97 = icmp eq %union.tree_node* %9, %1
  br i1 %cmp97, label %while.cond123, label %land.rhs98

land.rhs98:                                       ; preds = %land.lhs.true93
  %type100 = getelementptr inbounds %union.tree_node* %exp.addr.1, i64 0, i32 0, i32 0, i32 1
  %10 = load %union.tree_node** %type100, align 8, !tbaa !11
  %type101 = bitcast %union.tree_node* %10 to %struct.tree_type*
  %mode102 = getelementptr inbounds %struct.tree_type* %type101, i64 0, i32 6
  %bf.load103 = load i32* %mode102, align 4
  %type110 = getelementptr inbounds %union.tree_node* %9, i64 0, i32 0, i32 0, i32 1
  %11 = load %union.tree_node** %type110, align 8, !tbaa !11
  %type111 = bitcast %union.tree_node* %11 to %struct.tree_type*
  %mode112 = getelementptr inbounds %struct.tree_type* %type111, i64 0, i32 6
  %bf.load113 = load i32* %mode112, align 4
  %bf.lshr104266 = xor i32 %bf.load113, %bf.load103
  %12 = and i32 %bf.lshr104266, 65024
  %cmp116 = icmp eq i32 %12, 0
  br i1 %cmp116, label %while.cond75, label %while.cond123

while.cond123:                                    ; preds = %while.cond75, %land.lhs.true93, %land.rhs98, %land.rhs146
  %and_mask.0 = phi %union.tree_node* [ %13, %land.rhs146 ], [ %7, %land.rhs98 ], [ %7, %land.lhs.true93 ], [ %7, %while.cond75 ]
  %code125 = getelementptr inbounds %union.tree_node* %and_mask.0, i64 0, i32 0, i32 0, i32 2
  %bf.load126 = load i32* %code125, align 8
  %bf.clear127 = and i32 %bf.load126, 255
  %bf.clear127.off = add i32 %bf.clear127, -114
  %switch271 = icmp ult i32 %bf.clear127.off, 3
  br i1 %switch271, label %land.lhs.true141, label %while.end170

land.lhs.true141:                                 ; preds = %while.cond123
  %operands143 = getelementptr inbounds %union.tree_node* %and_mask.0, i64 0, i32 0, i32 2
  %arrayidx144 = bitcast i32* %operands143 to %union.tree_node**
  %13 = load %union.tree_node** %arrayidx144, align 8, !tbaa !14
  %cmp145 = icmp eq %union.tree_node* %13, %1
  br i1 %cmp145, label %return, label %land.rhs146

land.rhs146:                                      ; preds = %land.lhs.true141
  %type148 = getelementptr inbounds %union.tree_node* %and_mask.0, i64 0, i32 0, i32 0, i32 1
  %14 = load %union.tree_node** %type148, align 8, !tbaa !11
  %type149 = bitcast %union.tree_node* %14 to %struct.tree_type*
  %mode150 = getelementptr inbounds %struct.tree_type* %type149, i64 0, i32 6
  %bf.load151 = load i32* %mode150, align 4
  %type158 = getelementptr inbounds %union.tree_node* %13, i64 0, i32 0, i32 0, i32 1
  %15 = load %union.tree_node** %type158, align 8, !tbaa !11
  %type159 = bitcast %union.tree_node* %15 to %struct.tree_type*
  %mode160 = getelementptr inbounds %struct.tree_type* %type159, i64 0, i32 6
  %bf.load161 = load i32* %mode160, align 4
  %bf.lshr152265 = xor i32 %bf.load161, %bf.load151
  %16 = and i32 %bf.lshr152265, 65024
  %cmp164 = icmp eq i32 %16, 0
  br i1 %cmp164, label %while.cond123, label %return

while.end170:                                     ; preds = %while.cond123
  %cmp175 = icmp eq i32 %bf.clear127, 25
  br i1 %cmp175, label %if.end178, label %return

if.end178:                                        ; preds = %land.rhs, %land.lhs.true, %while.end170, %while.end
  %and_mask.1 = phi %union.tree_node* [ %and_mask.0, %while.end170 ], [ null, %while.end ], [ null, %land.lhs.true ], [ null, %land.rhs ]
  %exp.addr.2 = phi %union.tree_node* [ %exp.addr.1, %while.end170 ], [ %exp.addr.0, %while.end ], [ %exp.addr.0, %land.lhs.true ], [ %exp.addr.0, %land.rhs ]
  %call = call %union.tree_node* @get_inner_reference(%union.tree_node* %exp.addr.2, i64* %pbitsize, i64* %pbitpos, %union.tree_node** %offset, i32* %pmode, i32* %punsignedp, i32* %pvolatilep) #1
  %cmp179 = icmp eq %union.tree_node* %call, %exp.addr.2
  %cmp181 = icmp eq %union.tree_node* %and_mask.1, null
  %or.cond = and i1 %cmp179, %cmp181
  br i1 %or.cond, label %return, label %lor.lhs.false182

lor.lhs.false182:                                 ; preds = %if.end178
  %17 = load i64* %pbitsize, align 8, !tbaa !13
  %cmp183 = icmp slt i64 %17, 0
  %18 = load %union.tree_node** %offset, align 8
  %cmp185 = icmp ne %union.tree_node* %18, null
  %or.cond218 = or i1 %cmp183, %cmp185
  br i1 %or.cond218, label %return, label %lor.lhs.false186

lor.lhs.false186:                                 ; preds = %lor.lhs.false182
  %code188 = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 0, i32 2
  %bf.load189 = load i32* %code188, align 8
  %bf.clear190 = and i32 %bf.load189, 255
  %cmp191 = icmp eq i32 %bf.clear190, 57
  br i1 %cmp191, label %return, label %if.end193

if.end193:                                        ; preds = %lor.lhs.false186
  %conv = trunc i64 %17 to i32
  %call194 = call %union.tree_node* @type_for_size(i32 %conv, i32 1) #1
  %type195 = bitcast %union.tree_node* %call194 to %struct.tree_type*
  %precision196 = getelementptr inbounds %struct.tree_type* %type195, i64 0, i32 6
  %bf.load197 = load i32* %precision196, align 4
  %bf.clear198 = and i32 %bf.load197, 511
  %call199 = call %union.tree_node* @build_int_2_wide(i64 -1, i64 -1) #1
  %type201 = getelementptr inbounds %union.tree_node* %call199, i64 0, i32 0, i32 0, i32 1
  store %union.tree_node* %call194, %union.tree_node** %type201, align 8, !tbaa !11
  %call202 = call i32 @force_fit_type(%union.tree_node* %call199, i32 0)
  %conv203 = zext i32 %bf.clear198 to i64
  %19 = load i64* %pbitsize, align 8, !tbaa !13
  %sub = sub nsw i64 %conv203, %19
  %20 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !14
  %call.i = call %union.tree_node* @size_int_type_wide(i64 %sub, %union.tree_node* %20) #1
  %call205 = call fastcc %union.tree_node* @const_binop(i32 82, %union.tree_node* %call199, %union.tree_node* %call.i)
  %21 = load i64* %pbitsize, align 8, !tbaa !13
  %sub207 = sub nsw i64 %conv203, %21
  %22 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !14
  %call.i272 = call %union.tree_node* @size_int_type_wide(i64 %sub207, %union.tree_node* %22) #1
  %call209 = call fastcc %union.tree_node* @const_binop(i32 83, %union.tree_node* %call205, %union.tree_node* %call.i272)
  br i1 %cmp181, label %if.end216, label %if.then212

if.then212:                                       ; preds = %if.end193
  %call213 = call %union.tree_node* @convert(%union.tree_node* %call194, %union.tree_node* %and_mask.1) #1
  %call214 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 88, %union.tree_node* %call194, %union.tree_node* %call213, %union.tree_node* %call209) #1
  %call215 = call %union.tree_node* @fold(%union.tree_node* %call214)
  br label %if.end216

if.end216:                                        ; preds = %if.end193, %if.then212
  %mask.0 = phi %union.tree_node* [ %call215, %if.then212 ], [ %call209, %if.end193 ]
  store %union.tree_node* %mask.0, %union.tree_node** %pmask, align 8, !tbaa !14
  store %union.tree_node* %and_mask.1, %union.tree_node** %pand_mask, align 8, !tbaa !14
  br label %return

return:                                           ; preds = %land.rhs146, %land.lhs.true141, %lor.lhs.false182, %lor.lhs.false186, %if.end178, %while.end170, %entry, %if.end216
  %retval.0 = phi %union.tree_node* [ %call, %if.end216 ], [ null, %entry ], [ null, %while.end170 ], [ null, %if.end178 ], [ null, %lor.lhs.false186 ], [ null, %lor.lhs.false182 ], [ null, %land.lhs.true141 ], [ null, %land.rhs146 ]
  ret %union.tree_node* %retval.0
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @unextend(%union.tree_node* %c, i32 %p, i32 %unsignedp, %union.tree_node* %mask) #0 {
entry:
  %type1 = getelementptr inbounds %union.tree_node* %c, i64 0, i32 0, i32 0, i32 1
  %0 = load %union.tree_node** %type1, align 8, !tbaa !11
  %type2 = bitcast %union.tree_node* %0 to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type* %type2, i64 0, i32 6
  %bf.load = load i32* %mode, align 4
  %bf.lshr = lshr i32 %bf.load, 9
  %bf.clear = and i32 %bf.lshr, 127
  %idxprom64 = zext i32 %bf.clear to i64
  %arrayidx = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom64
  %1 = load i16* %arrayidx, align 2, !tbaa !22
  %conv = zext i16 %1 to i32
  %cmp = icmp eq i32 %conv, %p
  %tobool = icmp ne i32 %unsignedp, 0
  %or.cond = or i1 %cmp, %tobool
  br i1 %or.cond, label %return, label %if.end

if.end:                                           ; preds = %entry
  %sub = add nsw i32 %p, -1
  %conv4 = sext i32 %sub to i64
  %2 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !14
  %call.i = tail call %union.tree_node* @size_int_type_wide(i64 %conv4, %union.tree_node* %2) #1
  %call5 = tail call fastcc %union.tree_node* @const_binop(i32 83, %union.tree_node* %c, %union.tree_node* %call.i)
  %3 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !14
  %call.i65 = tail call %union.tree_node* @size_int_type_wide(i64 1, %union.tree_node* %3) #1
  %call7 = tail call fastcc %union.tree_node* @const_binop(i32 88, %union.tree_node* %call5, %union.tree_node* %call.i65)
  %unsigned_flag = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2
  %bf.load9 = load i32* %unsigned_flag, align 8
  %bf.clear11 = and i32 %bf.load9, 8192
  %tobool12 = icmp eq i32 %bf.clear11, 0
  br i1 %tobool12, label %if.end16, label %if.then13

if.then13:                                        ; preds = %if.end
  %call14 = tail call %union.tree_node* @signed_type(%union.tree_node* %0) #1
  %call15 = tail call %union.tree_node* @convert(%union.tree_node* %call14, %union.tree_node* %call7) #1
  br label %if.end16

if.end16:                                         ; preds = %if.end, %if.then13
  %temp.0 = phi %union.tree_node* [ %call15, %if.then13 ], [ %call7, %if.end ]
  %sub17 = add nsw i32 %conv, -1
  %conv18 = sext i32 %sub17 to i64
  %4 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !14
  %call.i66 = tail call %union.tree_node* @size_int_type_wide(i64 %conv18, %union.tree_node* %4) #1
  %call20 = tail call fastcc %union.tree_node* @const_binop(i32 82, %union.tree_node* %temp.0, %union.tree_node* %call.i66)
  %sub21 = xor i32 %p, -1
  %sub22 = add i32 %conv, %sub21
  %conv23 = sext i32 %sub22 to i64
  %5 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !14
  %call.i67 = tail call %union.tree_node* @size_int_type_wide(i64 %conv23, %union.tree_node* %5) #1
  %call25 = tail call fastcc %union.tree_node* @const_binop(i32 83, %union.tree_node* %call20, %union.tree_node* %call.i67)
  %cmp26 = icmp eq %union.tree_node* %mask, null
  br i1 %cmp26, label %if.end33, label %if.then28

if.then28:                                        ; preds = %if.end16
  %6 = load %union.tree_node** %type1, align 8, !tbaa !11
  %call31 = tail call %union.tree_node* @convert(%union.tree_node* %6, %union.tree_node* %mask) #1
  %call32 = tail call fastcc %union.tree_node* @const_binop(i32 88, %union.tree_node* %call25, %union.tree_node* %call31)
  br label %if.end33

if.end33:                                         ; preds = %if.end16, %if.then28
  %temp.1 = phi %union.tree_node* [ %call32, %if.then28 ], [ %call25, %if.end16 ]
  %bf.load36 = load i32* %unsigned_flag, align 8
  %bf.clear38 = and i32 %bf.load36, 8192
  %tobool39 = icmp eq i32 %bf.clear38, 0
  br i1 %tobool39, label %if.end42, label %if.then40

if.then40:                                        ; preds = %if.end33
  %call41 = tail call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %temp.1) #1
  br label %if.end42

if.end42:                                         ; preds = %if.end33, %if.then40
  %temp.2 = phi %union.tree_node* [ %call41, %if.then40 ], [ %temp.1, %if.end33 ]
  %call43 = tail call fastcc %union.tree_node* @const_binop(i32 87, %union.tree_node* %c, %union.tree_node* %temp.2)
  %call44 = tail call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %call43) #1
  br label %return

return:                                           ; preds = %entry, %if.end42
  %retval.0 = phi %union.tree_node* [ %call44, %if.end42 ], [ %c, %entry ]
  ret %union.tree_node* %retval.0
}

declare i32 @simple_cst_equal(%union.tree_node*, %union.tree_node*) #3

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @make_range(%union.tree_node* %exp, i32* nocapture %pin_p, %union.tree_node** nocapture %plow, %union.tree_node** nocapture %phigh) #0 {
entry:
  %n_in_p = alloca i32, align 4
  %n_low = alloca %union.tree_node*, align 8
  %n_high = alloca %union.tree_node*, align 8
  %type1 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 1
  %0 = load %union.tree_node** %type1, align 8, !tbaa !11
  %1 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8, !tbaa !14
  %call = tail call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %1) #1
  br label %while.body

while.body:                                       ; preds = %if.end186, %lor.lhs.false175, %if.else, %land.lhs.true198, %sw.epilog, %land.lhs.true118, %if.then134, %if.end129, %sw.bb, %sw.bb142, %sw.bb147, %if.end322, %land.lhs.true190, %entry
  %arg1.0 = phi %union.tree_node* [ null, %entry ], [ %arg1.1, %land.lhs.true190 ], [ %arg1.1, %if.end322 ], [ %arg1.1, %sw.bb147 ], [ %arg1.1, %sw.bb142 ], [ %arg1.1, %sw.bb ], [ %arg1.1, %if.end129 ], [ %arg1.1, %if.then134 ], [ %arg1.1, %land.lhs.true118 ], [ %arg1.1, %sw.epilog ], [ %arg1.1, %land.lhs.true198 ], [ %arg1.1, %if.else ], [ %arg1.1, %lor.lhs.false175 ], [ %arg1.1, %if.end186 ]
  %type.0 = phi %union.tree_node* [ null, %entry ], [ %type.2, %land.lhs.true190 ], [ %type.2, %if.end322 ], [ %type.2, %sw.bb147 ], [ %type.2, %sw.bb142 ], [ %type.2, %sw.bb ], [ %type.2, %if.end129 ], [ %type.2, %if.then134 ], [ %type.2, %land.lhs.true118 ], [ %type.2, %sw.epilog ], [ %type.2, %land.lhs.true198 ], [ %type.2, %if.else ], [ %type.2, %lor.lhs.false175 ], [ %type.2, %if.end186 ]
  %orig_type.0 = phi %union.tree_node* [ null, %entry ], [ %type.2.orig_type.0, %land.lhs.true190 ], [ %type.2.orig_type.0, %if.end322 ], [ %type.2.orig_type.0, %sw.bb147 ], [ %type.2.orig_type.0, %sw.bb142 ], [ %type.2.orig_type.0, %sw.bb ], [ %type.2.orig_type.0, %if.end129 ], [ %type.2.orig_type.0, %if.then134 ], [ %type.2.orig_type.0, %land.lhs.true118 ], [ %type.2.orig_type.0, %sw.epilog ], [ %type.2.orig_type.0, %land.lhs.true198 ], [ %type.2.orig_type.0, %if.else ], [ %type.2.orig_type.0, %lor.lhs.false175 ], [ %type.2.orig_type.0, %if.end186 ]
  %in_p.0 = phi i32 [ 0, %entry ], [ %in_p.0, %if.end186 ], [ %in_p.0, %land.lhs.true190 ], [ %in_p.3, %if.end322 ], [ %in_p.0, %sw.bb147 ], [ %in_p.0, %sw.bb142 ], [ %lnot.ext, %sw.bb ], [ %9, %if.end129 ], [ %lnot.ext137, %if.then134 ], [ %in_p.1, %land.lhs.true118 ], [ %in_p.1, %sw.epilog ], [ %in_p.0, %land.lhs.true198 ], [ %lnot.ext204, %if.else ], [ %in_p.0, %lor.lhs.false175 ]
  %low.0 = phi %union.tree_node* [ %call, %entry ], [ %call162, %if.end186 ], [ %call162, %land.lhs.true190 ], [ %30, %if.end322 ], [ %low.0, %sw.bb147 ], [ %call144, %sw.bb142 ], [ %low.0, %sw.bb ], [ %10, %if.end129 ], [ %call139, %if.then134 ], [ %low.1, %land.lhs.true118 ], [ %low.1, %sw.epilog ], [ null, %land.lhs.true198 ], [ %call194, %if.else ], [ %call162, %lor.lhs.false175 ]
  %.pr452 = phi %union.tree_node* [ %call, %entry ], [ %call166, %if.end186 ], [ %call166, %land.lhs.true190 ], [ %31, %if.end322 ], [ %.pr452, %sw.bb147 ], [ %call146, %sw.bb142 ], [ %.pr452, %sw.bb ], [ %11, %if.end129 ], [ %call138, %if.then134 ], [ %high.1, %land.lhs.true118 ], [ %high.1, %sw.epilog ], [ null, %land.lhs.true198 ], [ %call195, %if.else ], [ null, %lor.lhs.false175 ]
  %arg0.0 = phi %union.tree_node* [ null, %entry ], [ %arg0.1, %land.lhs.true190 ], [ %arg0.1, %if.end322 ], [ %arg0.1, %sw.bb147 ], [ %arg0.1, %sw.bb142 ], [ %arg0.1, %sw.bb ], [ %arg0.1, %if.end129 ], [ %arg0.1, %if.then134 ], [ %arg0.1, %land.lhs.true118 ], [ %arg0.1, %sw.epilog ], [ %arg0.1, %land.lhs.true198 ], [ %arg0.1, %if.else ], [ %arg0.1, %lor.lhs.false175 ], [ %arg0.1, %if.end186 ]
  %exp.addr.0 = phi %union.tree_node* [ %exp, %entry ], [ %arg0.1, %if.end186 ], [ %arg0.1, %land.lhs.true190 ], [ %arg0.1, %if.end322 ], [ %call150, %sw.bb147 ], [ %arg0.1, %sw.bb142 ], [ %arg0.1, %sw.bb ], [ %arg0.1, %if.end129 ], [ %arg0.1, %if.then134 ], [ %arg0.1, %land.lhs.true118 ], [ %arg0.1, %sw.epilog ], [ %arg0.1, %land.lhs.true198 ], [ %arg0.1, %if.else ], [ %arg0.1, %lor.lhs.false175 ]
  %code3 = getelementptr inbounds %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code3, align 8
  %bf.clear = and i32 %bf.load, 255
  %idxprom451 = zext i32 %bf.clear to i64
  %arrayidx = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom451
  %2 = load i8* %arrayidx, align 1, !tbaa !15
  switch i8 %2, label %if.end70 [
    i8 60, label %if.then
    i8 49, label %if.then
    i8 50, label %if.then
    i8 101, label %if.then
  ]

if.then:                                          ; preds = %while.body, %while.body, %while.body, %while.body
  %operands = getelementptr inbounds %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 2
  %arrayidx23 = bitcast i32* %operands to %union.tree_node**
  %3 = load %union.tree_node** %arrayidx23, align 8, !tbaa !14
  switch i8 %2, label %if.end [
    i8 60, label %if.then41
    i8 49, label %if.then41
    i8 50, label %if.then41
  ]

if.then41:                                        ; preds = %if.then, %if.then, %if.then
  %type43 = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 0, i32 1
  %4 = load %union.tree_node** %type43, align 8, !tbaa !11
  br label %if.end

if.end:                                           ; preds = %if.then, %if.then41
  %type.1 = phi %union.tree_node* [ %4, %if.then41 ], [ %type.0, %if.then ]
  switch i8 %2, label %if.end70 [
    i8 50, label %if.then65
    i8 60, label %if.then65
    i8 101, label %land.lhs.true
  ]

land.lhs.true:                                    ; preds = %if.end
  %arrayidx62 = getelementptr inbounds [256 x i32]* @tree_code_length, i64 0, i64 %idxprom451
  %5 = load i32* %arrayidx62, align 4, !tbaa !12
  %cmp63 = icmp sgt i32 %5, 1
  br i1 %cmp63, label %if.then65, label %if.end70

if.then65:                                        ; preds = %if.end, %if.end, %land.lhs.true
  %arrayidx68 = getelementptr inbounds i32* %operands, i64 2
  %6 = bitcast i32* %arrayidx68 to %union.tree_node**
  %7 = load %union.tree_node** %6, align 8, !tbaa !14
  br label %if.end70

if.end70:                                         ; preds = %if.end, %while.body, %land.lhs.true, %if.then65
  %arg1.1 = phi %union.tree_node* [ %7, %if.then65 ], [ %arg1.0, %land.lhs.true ], [ %arg1.0, %while.body ], [ %arg1.0, %if.end ]
  %type.2 = phi %union.tree_node* [ %type.1, %if.then65 ], [ %type.1, %land.lhs.true ], [ %type.0, %while.body ], [ %type.1, %if.end ]
  %arg0.1 = phi %union.tree_node* [ %3, %if.then65 ], [ %3, %land.lhs.true ], [ %arg0.0, %while.body ], [ %3, %if.end ]
  %cmp71 = icmp ne %union.tree_node* %type.2, null
  %cmp74 = icmp eq %union.tree_node* %orig_type.0, null
  %or.cond = and i1 %cmp71, %cmp74
  %type.2.orig_type.0 = select i1 %or.cond, %union.tree_node* %type.2, %union.tree_node* %orig_type.0
  switch i32 %bf.clear, label %while.end [
    i32 96, label %sw.bb
    i32 101, label %sw.bb78
    i32 102, label %sw.bb78
    i32 97, label %sw.bb78
    i32 98, label %sw.bb78
    i32 100, label %sw.bb78
    i32 99, label %sw.bb78
    i32 77, label %sw.bb142
    i32 90, label %sw.bb147
    i32 59, label %sw.bb151
    i32 60, label %sw.bb151
    i32 115, label %sw.bb208
    i32 116, label %sw.bb208
    i32 114, label %sw.bb208
  ]

sw.bb:                                            ; preds = %if.end70
  %lnot = icmp eq i32 %in_p.0, 0
  %lnot.ext = zext i1 %lnot to i32
  br label %while.body

sw.bb78:                                          ; preds = %if.end70, %if.end70, %if.end70, %if.end70, %if.end70, %if.end70
  %cmp79 = icmp eq %union.tree_node* %low.0, null
  %cmp82 = icmp eq %union.tree_node* %.pr452, null
  %or.cond341 = or i1 %cmp79, %cmp82
  br i1 %or.cond341, label %while.end, label %lor.lhs.false84

lor.lhs.false84:                                  ; preds = %sw.bb78
  %call85 = tail call i32 @integer_zerop(%union.tree_node* %low.0) #1
  %tobool86 = icmp eq i32 %call85, 0
  br i1 %tobool86, label %while.end, label %lor.lhs.false87

lor.lhs.false87:                                  ; preds = %lor.lhs.false84
  %call88 = tail call i32 @integer_zerop(%union.tree_node* %.pr452) #1
  %tobool89 = icmp eq i32 %call88, 0
  br i1 %tobool89, label %while.end, label %lor.lhs.false90

lor.lhs.false90:                                  ; preds = %lor.lhs.false87
  %code92 = getelementptr inbounds %union.tree_node* %arg1.1, i64 0, i32 0, i32 0, i32 2
  %bf.load93 = load i32* %code92, align 8
  %bf.clear94 = and i32 %bf.load93, 255
  %cmp95 = icmp eq i32 %bf.clear94, 25
  br i1 %cmp95, label %if.end98, label %while.end

if.end98:                                         ; preds = %lor.lhs.false90
  switch i32 %bf.clear, label %sw.default [
    i32 102, label %sw.epilog
    i32 101, label %sw.bb100
    i32 99, label %sw.bb104
    i32 100, label %sw.bb105
    i32 97, label %sw.bb109
    i32 98, label %sw.bb110
  ]

sw.bb100:                                         ; preds = %if.end98
  %lnot102 = icmp eq i32 %in_p.0, 0
  %lnot.ext103 = zext i1 %lnot102 to i32
  br label %sw.epilog

sw.bb104:                                         ; preds = %if.end98
  br label %sw.epilog

sw.bb105:                                         ; preds = %if.end98
  %lnot107 = icmp eq i32 %in_p.0, 0
  %lnot.ext108 = zext i1 %lnot107 to i32
  br label %sw.epilog

sw.bb109:                                         ; preds = %if.end98
  br label %sw.epilog

sw.bb110:                                         ; preds = %if.end98
  %lnot112 = icmp eq i32 %in_p.0, 0
  %lnot.ext113 = zext i1 %lnot112 to i32
  br label %sw.epilog

sw.default:                                       ; preds = %if.end98
  tail call void @fancy_abort(i8* getelementptr inbounds ([13 x i8]* @.str, i64 0, i64 0), i32 3505, i8* getelementptr inbounds ([11 x i8]* @__FUNCTION__.make_range, i64 0, i64 0)) #7
  unreachable

sw.epilog:                                        ; preds = %if.end98, %sw.bb110, %sw.bb109, %sw.bb105, %sw.bb104, %sw.bb100
  %in_p.1 = phi i32 [ %lnot.ext113, %sw.bb110 ], [ %in_p.0, %sw.bb109 ], [ %lnot.ext108, %sw.bb105 ], [ %in_p.0, %sw.bb104 ], [ %lnot.ext103, %sw.bb100 ], [ %in_p.0, %if.end98 ]
  %low.1 = phi %union.tree_node* [ null, %sw.bb110 ], [ %arg1.1, %sw.bb109 ], [ %arg1.1, %sw.bb105 ], [ null, %sw.bb104 ], [ %arg1.1, %sw.bb100 ], [ %arg1.1, %if.end98 ]
  %high.1 = phi %union.tree_node* [ %arg1.1, %sw.bb110 ], [ null, %sw.bb109 ], [ null, %sw.bb105 ], [ %arg1.1, %sw.bb104 ], [ %arg1.1, %sw.bb100 ], [ %arg1.1, %if.end98 ]
  %unsigned_flag = getelementptr inbounds %union.tree_node* %type.2, i64 0, i32 0, i32 0, i32 2
  %bf.load115 = load i32* %unsigned_flag, align 8
  %bf.clear116 = and i32 %bf.load115, 8192
  %tobool117 = icmp eq i32 %bf.clear116, 0
  br i1 %tobool117, label %while.body, label %land.lhs.true118

land.lhs.true118:                                 ; preds = %sw.epilog
  %cmp119 = icmp eq %union.tree_node* %low.1, null
  %cmp122 = icmp eq %union.tree_node* %high.1, null
  %or.cond342 = or i1 %cmp119, %cmp122
  br i1 %or.cond342, label %if.then124, label %while.body

if.then124:                                       ; preds = %land.lhs.true118
  %8 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8, !tbaa !14
  %call125 = tail call %union.tree_node* @convert(%union.tree_node* %type.2, %union.tree_node* %8) #1
  %call126 = call fastcc i32 @merge_ranges(i32* %n_in_p, %union.tree_node** %n_low, %union.tree_node** %n_high, i32 %in_p.1, %union.tree_node* %low.1, %union.tree_node* %high.1, i32 1, %union.tree_node* %call125, %union.tree_node* null)
  %tobool127 = icmp eq i32 %call126, 0
  br i1 %tobool127, label %while.end, label %if.end129

if.end129:                                        ; preds = %if.then124
  %9 = load i32* %n_in_p, align 4, !tbaa !12
  %10 = load %union.tree_node** %n_low, align 8, !tbaa !14
  %11 = load %union.tree_node** %n_high, align 8, !tbaa !14
  %cmp130 = icmp eq %union.tree_node* %11, null
  %tobool133 = icmp ne %union.tree_node* %10, null
  %or.cond343 = and i1 %cmp130, %tobool133
  br i1 %or.cond343, label %if.then134, label %while.body

if.then134:                                       ; preds = %if.end129
  %lnot136 = icmp eq i32 %9, 0
  %lnot.ext137 = zext i1 %lnot136 to i32
  %12 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 12), align 8, !tbaa !14
  %call138 = tail call fastcc %union.tree_node* @range_binop(i32 60, %union.tree_node* null, %union.tree_node* %10, i32 0, %union.tree_node* %12, i32 0)
  %13 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8, !tbaa !14
  %call139 = tail call %union.tree_node* @convert(%union.tree_node* %type.2, %union.tree_node* %13) #1
  br label %while.body

sw.bb142:                                         ; preds = %if.end70
  %14 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8, !tbaa !14
  %call143 = tail call %union.tree_node* @convert(%union.tree_node* %type.2, %union.tree_node* %14) #1
  %call144 = tail call fastcc %union.tree_node* @range_binop(i32 60, %union.tree_node* %type.2, %union.tree_node* %call143, i32 0, %union.tree_node* %.pr452, i32 1)
  store %union.tree_node* %call144, %union.tree_node** %n_low, align 8, !tbaa !14
  %15 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8, !tbaa !14
  %call145 = tail call %union.tree_node* @convert(%union.tree_node* %type.2, %union.tree_node* %15) #1
  %call146 = tail call fastcc %union.tree_node* @range_binop(i32 60, %union.tree_node* %type.2, %union.tree_node* %call145, i32 0, %union.tree_node* %low.0, i32 0)
  store %union.tree_node* %call146, %union.tree_node** %n_high, align 8, !tbaa !14
  br label %while.body

sw.bb147:                                         ; preds = %if.end70
  %call148 = tail call fastcc %union.tree_node* @negate_expr(%union.tree_node* %arg0.1)
  %16 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 12), align 8, !tbaa !14
  %call149 = tail call %union.tree_node* @convert(%union.tree_node* %type.2, %union.tree_node* %16) #1
  %call150 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 60, %union.tree_node* %type.2, %union.tree_node* %call148, %union.tree_node* %call149) #1
  br label %while.body

sw.bb151:                                         ; preds = %if.end70, %if.end70
  %code153 = getelementptr inbounds %union.tree_node* %arg1.1, i64 0, i32 0, i32 0, i32 2
  %bf.load154 = load i32* %code153, align 8
  %bf.clear155 = and i32 %bf.load154, 255
  %cmp156 = icmp eq i32 %bf.clear155, 25
  br i1 %cmp156, label %if.end159, label %while.end

if.end159:                                        ; preds = %sw.bb151
  %cmp160 = icmp eq i32 %bf.clear, 60
  %cond = select i1 %cmp160, i32 59, i32 60
  %call162 = tail call fastcc %union.tree_node* @range_binop(i32 %cond, %union.tree_node* %type.2, %union.tree_node* %low.0, i32 0, %union.tree_node* %arg1.1, i32 0)
  store %union.tree_node* %call162, %union.tree_node** %n_low, align 8, !tbaa !14
  %call166 = tail call fastcc %union.tree_node* @range_binop(i32 %cond, %union.tree_node* %type.2, %union.tree_node* %.pr452, i32 1, %union.tree_node* %arg1.1, i32 0)
  store %union.tree_node* %call166, %union.tree_node** %n_high, align 8, !tbaa !14
  %cmp167 = icmp eq %union.tree_node* %call162, null
  br i1 %cmp167, label %lor.lhs.false175, label %land.lhs.true169

land.lhs.true169:                                 ; preds = %if.end159
  %public_flag = getelementptr inbounds %union.tree_node* %call162, i64 0, i32 0, i32 0, i32 2
  %bf.load171 = load i32* %public_flag, align 8
  %bf.clear173 = and i32 %bf.load171, 524288
  %tobool174 = icmp eq i32 %bf.clear173, 0
  br i1 %tobool174, label %lor.lhs.false175, label %while.end

lor.lhs.false175:                                 ; preds = %land.lhs.true169, %if.end159
  %cmp176 = icmp eq %union.tree_node* %call166, null
  br i1 %cmp176, label %while.body, label %land.lhs.true178

land.lhs.true178:                                 ; preds = %lor.lhs.false175
  %public_flag180 = getelementptr inbounds %union.tree_node* %call166, i64 0, i32 0, i32 0, i32 2
  %bf.load181 = load i32* %public_flag180, align 8
  %bf.clear183 = and i32 %bf.load181, 524288
  %tobool184 = icmp eq i32 %bf.clear183, 0
  br i1 %tobool184, label %if.end186, label %while.end

if.end186:                                        ; preds = %land.lhs.true178
  %tobool187 = icmp eq %union.tree_node* %call162, null
  br i1 %tobool187, label %while.body, label %land.lhs.true190

land.lhs.true190:                                 ; preds = %if.end186
  %call191 = tail call i32 @tree_int_cst_lt(%union.tree_node* %call166, %union.tree_node* %call162) #1
  %tobool192 = icmp eq i32 %call191, 0
  br i1 %tobool192, label %while.body, label %if.then193

if.then193:                                       ; preds = %land.lhs.true190
  %17 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 12), align 8, !tbaa !14
  %call194 = tail call fastcc %union.tree_node* @range_binop(i32 59, %union.tree_node* %type.2, %union.tree_node* %call166, i32 0, %union.tree_node* %17, i32 0)
  %18 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 12), align 8, !tbaa !14
  %call195 = tail call fastcc %union.tree_node* @range_binop(i32 60, %union.tree_node* %type.2, %union.tree_node* %call162, i32 0, %union.tree_node* %18, i32 0)
  %call196 = tail call i32 @tree_int_cst_equal(%union.tree_node* %call162, %union.tree_node* %call194) #1
  %tobool197 = icmp eq i32 %call196, 0
  br i1 %tobool197, label %if.else, label %land.lhs.true198

land.lhs.true198:                                 ; preds = %if.then193
  %call199 = tail call i32 @tree_int_cst_equal(%union.tree_node* %call166, %union.tree_node* %call195) #1
  %tobool200 = icmp eq i32 %call199, 0
  br i1 %tobool200, label %if.else, label %while.body

if.else:                                          ; preds = %land.lhs.true198, %if.then193
  %lnot203 = icmp eq i32 %in_p.0, 0
  %lnot.ext204 = zext i1 %lnot203 to i32
  br label %while.body

sw.bb208:                                         ; preds = %if.end70, %if.end70, %if.end70
  %type209 = bitcast %union.tree_node* %type.2 to %struct.tree_type*
  %precision = getelementptr inbounds %struct.tree_type* %type209, i64 0, i32 6
  %bf.load210 = load i32* %precision, align 4
  %bf.clear211 = and i32 %bf.load210, 511
  %type212 = bitcast %union.tree_node* %type.2.orig_type.0 to %struct.tree_type*
  %precision213 = getelementptr inbounds %struct.tree_type* %type212, i64 0, i32 6
  %bf.load214 = load i32* %precision213, align 4
  %bf.clear215 = and i32 %bf.load214, 511
  %cmp216 = icmp ugt i32 %bf.clear211, %bf.clear215
  br i1 %cmp216, label %while.end, label %if.end219

if.end219:                                        ; preds = %sw.bb208
  %code221 = getelementptr inbounds %union.tree_node* %type.2, i64 0, i32 0, i32 0, i32 2
  %bf.load222 = load i32* %code221, align 8
  %bf.clear223 = and i32 %bf.load222, 255
  switch i32 %bf.clear223, label %while.end [
    i32 6, label %lor.lhs.false247
    i32 10, label %lor.lhs.false247
    i32 11, label %lor.lhs.false247
    i32 12, label %lor.lhs.false247
  ]

lor.lhs.false247:                                 ; preds = %if.end219, %if.end219, %if.end219, %if.end219
  %cmp248 = icmp ne %union.tree_node* %low.0, null
  br i1 %cmp248, label %land.lhs.true250, label %lor.lhs.false253

land.lhs.true250:                                 ; preds = %lor.lhs.false247
  %call251 = tail call i32 @int_fits_type_p(%union.tree_node* %low.0, %union.tree_node* %type.2) #1
  %tobool252 = icmp eq i32 %call251, 0
  br i1 %tobool252, label %while.end, label %lor.lhs.false253

lor.lhs.false253:                                 ; preds = %land.lhs.true250, %lor.lhs.false247
  %cmp254 = icmp eq %union.tree_node* %.pr452, null
  br i1 %cmp254, label %if.end260, label %land.lhs.true256

land.lhs.true256:                                 ; preds = %lor.lhs.false253
  %call257 = tail call i32 @int_fits_type_p(%union.tree_node* %.pr452, %union.tree_node* %type.2) #1
  %tobool258 = icmp eq i32 %call257, 0
  br i1 %tobool258, label %while.end, label %if.end260

if.end260:                                        ; preds = %land.lhs.true256, %lor.lhs.false253
  store %union.tree_node* %low.0, %union.tree_node** %n_low, align 8, !tbaa !14
  store %union.tree_node* %.pr452, %union.tree_node** %n_high, align 8, !tbaa !14
  %cmp261 = icmp eq %union.tree_node* %low.0, null
  br i1 %cmp261, label %if.end265, label %if.then263

if.then263:                                       ; preds = %if.end260
  %call264 = tail call %union.tree_node* @convert(%union.tree_node* %type.2, %union.tree_node* %low.0) #1
  store %union.tree_node* %call264, %union.tree_node** %n_low, align 8, !tbaa !14
  br label %if.end265

if.end265:                                        ; preds = %if.end260, %if.then263
  %19 = phi %union.tree_node* [ null, %if.end260 ], [ %call264, %if.then263 ]
  br i1 %cmp254, label %if.end270, label %if.then268

if.then268:                                       ; preds = %if.end265
  %call269 = tail call %union.tree_node* @convert(%union.tree_node* %type.2, %union.tree_node* %.pr452) #1
  store %union.tree_node* %call269, %union.tree_node** %n_high, align 8, !tbaa !14
  br label %if.end270

if.end270:                                        ; preds = %if.end265, %if.then268
  %20 = phi %union.tree_node* [ null, %if.end265 ], [ %call269, %if.then268 ]
  %bf.load273 = load i32* %code221, align 8
  %bf.clear275 = and i32 %bf.load273, 8192
  %tobool276 = icmp eq i32 %bf.clear275, 0
  br i1 %tobool276, label %if.end322, label %land.lhs.true277

land.lhs.true277:                                 ; preds = %if.end270
  %type279 = getelementptr inbounds %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 0, i32 1
  %21 = load %union.tree_node** %type279, align 8, !tbaa !11
  %unsigned_flag281 = getelementptr inbounds %union.tree_node* %21, i64 0, i32 0, i32 0, i32 2
  %bf.load282 = load i32* %unsigned_flag281, align 8
  %bf.clear284 = and i32 %bf.load282, 8192
  %tobool285 = icmp eq i32 %bf.clear284, 0
  br i1 %tobool285, label %if.then286, label %if.end322

if.then286:                                       ; preds = %land.lhs.true277
  %bf.load288 = load i32* %precision, align 4
  %bf.lshr289 = lshr i32 %bf.load288, 9
  %bf.clear290 = and i32 %bf.lshr289, 127
  %call291 = tail call %union.tree_node* @type_for_mode(i32 %bf.clear290, i32 1) #1
  %22 = getelementptr inbounds %union.tree_node* %call291, i64 0, i32 0, i32 13
  %23 = load %union.tree_node** %22, align 8, !tbaa !26
  %tobool293 = icmp eq %union.tree_node* %23, null
  br i1 %tobool293, label %cond.false, label %cond.end

cond.false:                                       ; preds = %if.then286
  %24 = getelementptr inbounds %union.tree_node* %type.2, i64 0, i32 0, i32 13
  %25 = load %union.tree_node** %24, align 8, !tbaa !26
  br label %cond.end

cond.end:                                         ; preds = %if.then286, %cond.false
  %cond298 = phi %union.tree_node* [ %25, %cond.false ], [ %23, %if.then286 ]
  %call299 = tail call %union.tree_node* @convert(%union.tree_node* %type.2, %union.tree_node* %cond298) #1
  %26 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 12), align 8, !tbaa !14
  %call300 = tail call %union.tree_node* @convert(%union.tree_node* %type.2, %union.tree_node* %26) #1
  %call301 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 83, %union.tree_node* %type.2, %union.tree_node* %call299, %union.tree_node* %call300) #1
  %call302 = tail call %union.tree_node* @fold(%union.tree_node* %call301)
  %27 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8, !tbaa !14
  %call306 = tail call %union.tree_node* @convert(%union.tree_node* %type.2, %union.tree_node* %27) #1
  br i1 %cmp248, label %if.then305, label %if.else313

if.then305:                                       ; preds = %cond.end
  %call307 = call fastcc i32 @merge_ranges(i32* %n_in_p, %union.tree_node** %n_low, %union.tree_node** %n_high, i32 1, %union.tree_node* %19, %union.tree_node* %20, i32 1, %union.tree_node* %call306, %union.tree_node* %call302)
  %tobool308 = icmp eq i32 %call307, 0
  br i1 %tobool308, label %while.end, label %if.end310

if.end310:                                        ; preds = %if.then305
  %28 = load i32* %n_in_p, align 4, !tbaa !12
  %cmp311 = icmp eq i32 %28, %in_p.0
  %conv312 = zext i1 %cmp311 to i32
  br label %if.end322

if.else313:                                       ; preds = %cond.end
  %call315 = call fastcc i32 @merge_ranges(i32* %n_in_p, %union.tree_node** %n_low, %union.tree_node** %n_high, i32 0, %union.tree_node* %19, %union.tree_node* %20, i32 1, %union.tree_node* %call306, %union.tree_node* %call302)
  %tobool316 = icmp eq i32 %call315, 0
  br i1 %tobool316, label %while.end, label %if.end318

if.end318:                                        ; preds = %if.else313
  %29 = load i32* %n_in_p, align 4, !tbaa !12
  %cmp319 = icmp ne i32 %in_p.0, %29
  %conv320 = zext i1 %cmp319 to i32
  br label %if.end322

if.end322:                                        ; preds = %land.lhs.true277, %if.end270, %if.end310, %if.end318
  %in_p.3 = phi i32 [ %in_p.0, %land.lhs.true277 ], [ %conv312, %if.end310 ], [ %conv320, %if.end318 ], [ %in_p.0, %if.end270 ]
  %30 = load %union.tree_node** %n_low, align 8, !tbaa !14
  %31 = load %union.tree_node** %n_high, align 8, !tbaa !14
  br label %while.body

while.end:                                        ; preds = %if.end219, %if.then124, %lor.lhs.false90, %lor.lhs.false87, %lor.lhs.false84, %land.lhs.true169, %land.lhs.true178, %sw.bb151, %land.lhs.true250, %land.lhs.true256, %if.then305, %if.else313, %sw.bb78, %sw.bb208, %if.end70
  %in_p.4 = phi i32 [ %in_p.0, %if.end70 ], [ %in_p.0, %sw.bb208 ], [ %in_p.0, %if.then305 ], [ %in_p.0, %if.else313 ], [ %in_p.0, %land.lhs.true256 ], [ %in_p.0, %land.lhs.true250 ], [ %in_p.0, %sw.bb151 ], [ %in_p.0, %land.lhs.true169 ], [ %in_p.0, %land.lhs.true178 ], [ %in_p.0, %sw.bb78 ], [ %in_p.0, %lor.lhs.false90 ], [ %in_p.1, %if.then124 ], [ %in_p.0, %lor.lhs.false87 ], [ %in_p.0, %lor.lhs.false84 ], [ %in_p.0, %if.end219 ]
  %low.3 = phi %union.tree_node* [ %low.0, %if.end70 ], [ %low.0, %sw.bb208 ], [ %low.0, %if.then305 ], [ null, %if.else313 ], [ %low.0, %land.lhs.true256 ], [ %low.0, %land.lhs.true250 ], [ %low.0, %sw.bb151 ], [ %low.0, %land.lhs.true169 ], [ %low.0, %land.lhs.true178 ], [ %low.0, %sw.bb78 ], [ %low.0, %lor.lhs.false90 ], [ %low.1, %if.then124 ], [ %low.0, %lor.lhs.false87 ], [ %low.0, %lor.lhs.false84 ], [ %low.0, %if.end219 ]
  %high.3 = phi %union.tree_node* [ %.pr452, %if.end70 ], [ %.pr452, %sw.bb208 ], [ %.pr452, %if.then305 ], [ %.pr452, %if.else313 ], [ %.pr452, %land.lhs.true256 ], [ %.pr452, %land.lhs.true250 ], [ %.pr452, %sw.bb151 ], [ %.pr452, %land.lhs.true169 ], [ %.pr452, %land.lhs.true178 ], [ %.pr452, %sw.bb78 ], [ %.pr452, %lor.lhs.false90 ], [ %high.1, %if.then124 ], [ %.pr452, %lor.lhs.false87 ], [ %.pr452, %lor.lhs.false84 ], [ %.pr452, %if.end219 ]
  %exp.addr.1 = phi %union.tree_node* [ %exp.addr.0, %if.end70 ], [ %exp.addr.0, %sw.bb208 ], [ %exp.addr.0, %if.then305 ], [ %exp.addr.0, %if.else313 ], [ %exp.addr.0, %land.lhs.true256 ], [ %exp.addr.0, %land.lhs.true250 ], [ %exp.addr.0, %sw.bb151 ], [ %exp.addr.0, %land.lhs.true169 ], [ %exp.addr.0, %land.lhs.true178 ], [ %exp.addr.0, %sw.bb78 ], [ %exp.addr.0, %lor.lhs.false90 ], [ %arg0.1, %if.then124 ], [ %exp.addr.0, %lor.lhs.false87 ], [ %exp.addr.0, %lor.lhs.false84 ], [ %exp.addr.0, %if.end219 ]
  %code326 = getelementptr inbounds %union.tree_node* %exp.addr.1, i64 0, i32 0, i32 0, i32 2
  %bf.load327 = load i32* %code326, align 8
  %bf.clear328 = and i32 %bf.load327, 255
  %cmp329 = icmp eq i32 %bf.clear328, 25
  br i1 %cmp329, label %if.then331, label %if.end340

if.then331:                                       ; preds = %while.end
  %32 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !14
  %call332 = tail call fastcc %union.tree_node* @range_binop(i32 100, %union.tree_node* %32, %union.tree_node* %exp.addr.1, i32 0, %union.tree_node* %low.3, i32 0)
  %call333 = tail call i32 @integer_onep(%union.tree_node* %call332) #1
  %tobool334 = icmp eq i32 %call333, 0
  br i1 %tobool334, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %if.then331
  %33 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !14
  %call335 = tail call fastcc %union.tree_node* @range_binop(i32 98, %union.tree_node* %33, %union.tree_node* %exp.addr.1, i32 1, %union.tree_node* %high.3, i32 1)
  %call336 = tail call i32 @integer_onep(%union.tree_node* %call335) #1
  %tobool337 = icmp ne i32 %call336, 0
  br label %land.end

land.end:                                         ; preds = %if.then331, %land.rhs
  %34 = phi i1 [ false, %if.then331 ], [ %tobool337, %land.rhs ]
  %land.ext = zext i1 %34 to i32
  %cmp338 = icmp eq i32 %in_p.4, %land.ext
  %conv339 = zext i1 %cmp338 to i32
  br label %if.end340

if.end340:                                        ; preds = %land.end, %while.end
  %in_p.5 = phi i32 [ %conv339, %land.end ], [ %in_p.4, %while.end ]
  %low.4 = phi %union.tree_node* [ null, %land.end ], [ %low.3, %while.end ]
  %high.4 = phi %union.tree_node* [ null, %land.end ], [ %high.3, %while.end ]
  %exp.addr.2 = phi %union.tree_node* [ null, %land.end ], [ %exp.addr.1, %while.end ]
  store i32 %in_p.5, i32* %pin_p, align 4, !tbaa !12
  store %union.tree_node* %low.4, %union.tree_node** %plow, align 8, !tbaa !14
  store %union.tree_node* %high.4, %union.tree_node** %phigh, align 8, !tbaa !14
  ret %union.tree_node* %exp.addr.2
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @merge_ranges(i32* nocapture %pin_p, %union.tree_node** nocapture %plow, %union.tree_node** nocapture %phigh, i32 %in0_p, %union.tree_node* %low0, %union.tree_node* %high0, i32 %in1_p, %union.tree_node* %low1, %union.tree_node* %high1) #0 {
entry:
  %cmp = icmp eq %union.tree_node* %low0, null
  %cmp1 = icmp eq %union.tree_node* %low1, null
  %or.cond = and i1 %cmp, %cmp1
  br i1 %or.cond, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %entry
  %0 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !14
  %call = tail call fastcc %union.tree_node* @range_binop(i32 101, %union.tree_node* %0, %union.tree_node* %low0, i32 0, %union.tree_node* %low1, i32 0)
  %call2 = tail call i32 @integer_onep(%union.tree_node* %call) #1
  %tobool = icmp ne i32 %call2, 0
  br label %lor.end

lor.end:                                          ; preds = %entry, %lor.rhs
  %1 = phi i1 [ %tobool, %lor.rhs ], [ true, %entry ]
  %cmp3 = icmp eq %union.tree_node* %high0, null
  %cmp5 = icmp eq %union.tree_node* %high1, null
  %or.cond99 = and i1 %cmp3, %cmp5
  br i1 %or.cond99, label %lor.end10, label %lor.rhs6

lor.rhs6:                                         ; preds = %lor.end
  %2 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !14
  %call7 = tail call fastcc %union.tree_node* @range_binop(i32 101, %union.tree_node* %2, %union.tree_node* %high0, i32 1, %union.tree_node* %high1, i32 1)
  %call8 = tail call i32 @integer_onep(%union.tree_node* %call7) #1
  %tobool9 = icmp ne i32 %call8, 0
  br label %lor.end10

lor.end10:                                        ; preds = %lor.end, %lor.rhs6
  %3 = phi i1 [ %tobool9, %lor.rhs6 ], [ true, %lor.end ]
  %4 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !14
  %call12 = tail call fastcc %union.tree_node* @range_binop(i32 99, %union.tree_node* %4, %union.tree_node* %low0, i32 0, %union.tree_node* %low1, i32 0)
  %call13 = tail call i32 @integer_onep(%union.tree_node* %call12) #1
  %tobool14 = icmp eq i32 %call13, 0
  br i1 %tobool14, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %lor.end10
  br i1 %1, label %land.lhs.true16, label %if.end

land.lhs.true16:                                  ; preds = %lor.lhs.false
  %5 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !14
  %call17 = tail call fastcc %union.tree_node* @range_binop(i32 99, %union.tree_node* %5, %union.tree_node* %high1, i32 1, %union.tree_node* %high0, i32 1)
  %call18 = tail call i32 @integer_onep(%union.tree_node* %call17) #1
  %tobool19 = icmp eq i32 %call18, 0
  br i1 %tobool19, label %if.end, label %if.then

if.then:                                          ; preds = %land.lhs.true16, %lor.end10
  br label %if.end

if.end:                                           ; preds = %land.lhs.true16, %if.then, %lor.lhs.false
  %high1.addr.0 = phi %union.tree_node* [ %high0, %if.then ], [ %high1, %land.lhs.true16 ], [ %high1, %lor.lhs.false ]
  %low1.addr.0 = phi %union.tree_node* [ %low0, %if.then ], [ %low1, %land.lhs.true16 ], [ %low1, %lor.lhs.false ]
  %in1_p.addr.0 = phi i32 [ %in0_p, %if.then ], [ %in1_p, %land.lhs.true16 ], [ %in1_p, %lor.lhs.false ]
  %high0.addr.0 = phi %union.tree_node* [ %high1, %if.then ], [ %high0, %land.lhs.true16 ], [ %high0, %lor.lhs.false ]
  %low0.addr.0 = phi %union.tree_node* [ %low1, %if.then ], [ %low0, %land.lhs.true16 ], [ %low0, %lor.lhs.false ]
  %in0_p.addr.0 = phi i32 [ %in1_p, %if.then ], [ %in0_p, %land.lhs.true16 ], [ %in0_p, %lor.lhs.false ]
  %6 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !14
  %call20 = tail call fastcc %union.tree_node* @range_binop(i32 97, %union.tree_node* %6, %union.tree_node* %high0.addr.0, i32 1, %union.tree_node* %low1.addr.0, i32 0)
  %call21 = tail call i32 @integer_onep(%union.tree_node* %call20) #1
  %7 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !14
  %call22 = tail call fastcc %union.tree_node* @range_binop(i32 98, %union.tree_node* %7, %union.tree_node* %high1.addr.0, i32 1, %union.tree_node* %high0.addr.0, i32 1)
  %call23 = tail call i32 @integer_onep(%union.tree_node* %call22) #1
  %tobool24 = icmp ne i32 %in0_p.addr.0, 0
  %tobool26 = icmp ne i32 %in1_p.addr.0, 0
  %or.cond100 = and i1 %tobool24, %tobool26
  br i1 %or.cond100, label %if.then27, label %if.else35

if.then27:                                        ; preds = %if.end
  %tobool28 = icmp eq i32 %call21, 0
  br i1 %tobool28, label %if.else, label %if.end98

if.else:                                          ; preds = %if.then27
  %tobool30 = icmp eq i32 %call23, 0
  %high0.addr.0.high1.addr.0 = select i1 %tobool30, %union.tree_node* %high0.addr.0, %union.tree_node* %high1.addr.0
  br label %if.end98

if.else35:                                        ; preds = %if.end
  %tobool36 = icmp eq i32 %in0_p.addr.0, 0
  %or.cond101 = or i1 %tobool36, %tobool26
  br i1 %or.cond101, label %if.else64, label %if.then39

if.then39:                                        ; preds = %if.else35
  %tobool40 = icmp eq i32 %call21, 0
  br i1 %tobool40, label %if.else42, label %if.end98

if.else42:                                        ; preds = %if.then39
  %or.cond102 = and i1 %1, %3
  br i1 %or.cond102, label %if.end98, label %if.else47

if.else47:                                        ; preds = %if.else42
  %tobool48 = icmp ne i32 %call23, 0
  %or.cond103 = and i1 %tobool48, %1
  br i1 %or.cond103, label %if.then51, label %if.else53

if.then51:                                        ; preds = %if.else47
  %8 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 12), align 8, !tbaa !14
  %call52 = tail call fastcc %union.tree_node* @range_binop(i32 59, %union.tree_node* null, %union.tree_node* %high1.addr.0, i32 0, %union.tree_node* %8, i32 0)
  br label %if.end98

if.else53:                                        ; preds = %if.else47
  %tobool54 = icmp eq i32 %call23, 0
  %or.cond104 = or i1 %tobool54, %3
  br i1 %or.cond104, label %if.then57, label %return

if.then57:                                        ; preds = %if.else53
  %9 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 12), align 8, !tbaa !14
  %call58 = tail call fastcc %union.tree_node* @range_binop(i32 60, %union.tree_node* null, %union.tree_node* %low1.addr.0, i32 0, %union.tree_node* %9, i32 0)
  br label %if.end98

if.else64:                                        ; preds = %if.else35
  %or.cond105 = and i1 %tobool36, %tobool26
  %tobool69 = icmp ne i32 %call21, 0
  br i1 %or.cond105, label %if.then68, label %if.else80

if.then68:                                        ; preds = %if.else64
  br i1 %tobool69, label %if.end98, label %if.else71

if.else71:                                        ; preds = %if.then68
  %tobool72 = icmp ne i32 %call23, 0
  %or.cond106 = or i1 %tobool72, %3
  br i1 %or.cond106, label %if.end98, label %if.else76

if.else76:                                        ; preds = %if.else71
  %10 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 12), align 8, !tbaa !14
  %call77 = tail call fastcc %union.tree_node* @range_binop(i32 59, %union.tree_node* null, %union.tree_node* %high0.addr.0, i32 1, %union.tree_node* %10, i32 0)
  br label %if.end98

if.else80:                                        ; preds = %if.else64
  br i1 %tobool69, label %if.then82, label %if.else90

if.then82:                                        ; preds = %if.else80
  %11 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !14
  %12 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 12), align 8, !tbaa !14
  %call83 = tail call fastcc %union.tree_node* @range_binop(i32 59, %union.tree_node* null, %union.tree_node* %high0.addr.0, i32 1, %union.tree_node* %12, i32 1)
  %call84 = tail call fastcc %union.tree_node* @range_binop(i32 101, %union.tree_node* %11, %union.tree_node* %call83, i32 1, %union.tree_node* %low1.addr.0, i32 0)
  %call85 = tail call i32 @integer_onep(%union.tree_node* %call84) #1
  %tobool86 = icmp eq i32 %call85, 0
  br i1 %tobool86, label %return, label %if.end98

if.else90:                                        ; preds = %if.else80
  %tobool91 = icmp eq i32 %call23, 0
  %high1.addr.0.high0.addr.0 = select i1 %tobool91, %union.tree_node* %high1.addr.0, %union.tree_node* %high0.addr.0
  br label %if.end98

if.end98:                                         ; preds = %if.else90, %if.then82, %if.else71, %if.then68, %if.else42, %if.then39, %if.else, %if.then27, %if.then57, %if.then51, %if.else76
  %in_p.0 = phi i32 [ 1, %if.else76 ], [ 1, %if.then51 ], [ 1, %if.then57 ], [ 0, %if.then27 ], [ 1, %if.else ], [ 1, %if.then39 ], [ 0, %if.else42 ], [ 1, %if.then68 ], [ 0, %if.else71 ], [ 0, %if.then82 ], [ 0, %if.else90 ]
  %low.0 = phi %union.tree_node* [ %call77, %if.else76 ], [ %call52, %if.then51 ], [ %low0.addr.0, %if.then57 ], [ null, %if.then27 ], [ %low1.addr.0, %if.else ], [ %low0.addr.0, %if.then39 ], [ null, %if.else42 ], [ %low1.addr.0, %if.then68 ], [ null, %if.else71 ], [ %low0.addr.0, %if.then82 ], [ %low0.addr.0, %if.else90 ]
  %high.0 = phi %union.tree_node* [ %high1.addr.0, %if.else76 ], [ %high0.addr.0, %if.then51 ], [ %call58, %if.then57 ], [ null, %if.then27 ], [ %high0.addr.0.high1.addr.0, %if.else ], [ %high0.addr.0, %if.then39 ], [ null, %if.else42 ], [ %high1.addr.0, %if.then68 ], [ null, %if.else71 ], [ %high1.addr.0, %if.then82 ], [ %high1.addr.0.high0.addr.0, %if.else90 ]
  store i32 %in_p.0, i32* %pin_p, align 4, !tbaa !12
  store %union.tree_node* %low.0, %union.tree_node** %plow, align 8, !tbaa !14
  store %union.tree_node* %high.0, %union.tree_node** %phigh, align 8, !tbaa !14
  br label %return

return:                                           ; preds = %if.then82, %if.else53, %if.end98
  %retval.0 = phi i32 [ 1, %if.end98 ], [ 0, %if.else53 ], [ 0, %if.then82 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @build_range_check(%union.tree_node* %type, %union.tree_node* %exp, i32 %in_p, %union.tree_node* %low, %union.tree_node* %high) #0 {
entry:
  %phitmp = icmp eq i32 %in_p, 0
  br label %tailrecurse

tailrecurse:                                      ; preds = %if.then49, %entry
  %exp.tr = phi %union.tree_node* [ %exp, %entry ], [ %call51, %if.then49 ]
  %in_p.tr = phi i1 [ %phitmp, %entry ], [ false, %if.then49 ]
  %low.tr = phi %union.tree_node* [ %low, %entry ], [ %call52, %if.then49 ]
  %high.tr = phi %union.tree_node* [ %high, %entry ], [ %call41, %if.then49 ]
  %type1 = getelementptr inbounds %union.tree_node* %exp.tr, i64 0, i32 0, i32 0, i32 1
  %0 = load %union.tree_node** %type1, align 8, !tbaa !11
  br i1 %in_p.tr, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %tailrecurse
  %call = tail call fastcc %union.tree_node* @build_range_check(%union.tree_node* %type, %union.tree_node* %exp.tr, i32 1, %union.tree_node* %low.tr, %union.tree_node* %high.tr)
  %cmp = icmp eq %union.tree_node* %call, null
  br i1 %cmp, label %if.else, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %call2 = tail call %union.tree_node* @invert_truthvalue(%union.tree_node* %call)
  br label %return

if.else:                                          ; preds = %land.lhs.true, %tailrecurse
  %cmp3 = icmp eq %union.tree_node* %low.tr, null
  %cmp5 = icmp eq %union.tree_node* %high.tr, null
  %or.cond = and i1 %cmp3, %cmp5
  br i1 %or.cond, label %if.then6, label %if.else8

if.then6:                                         ; preds = %if.else
  %1 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 12), align 8, !tbaa !14
  %call7 = tail call %union.tree_node* @convert(%union.tree_node* %type, %union.tree_node* %1) #1
  br label %return

if.else8:                                         ; preds = %if.else
  br i1 %cmp3, label %if.then10, label %if.else13

if.then10:                                        ; preds = %if.else8
  %call11 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 98, %union.tree_node* %type, %union.tree_node* %exp.tr, %union.tree_node* %high.tr) #1
  %call12 = tail call %union.tree_node* @fold(%union.tree_node* %call11)
  br label %return

if.else13:                                        ; preds = %if.else8
  br i1 %cmp5, label %if.then15, label %if.else18

if.then15:                                        ; preds = %if.else13
  %call16 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 100, %union.tree_node* %type, %union.tree_node* %exp.tr, %union.tree_node* %low.tr) #1
  %call17 = tail call %union.tree_node* @fold(%union.tree_node* %call16)
  br label %return

if.else18:                                        ; preds = %if.else13
  %call19 = tail call i32 @operand_equal_p(%union.tree_node* %low.tr, %union.tree_node* %high.tr, i32 0)
  %tobool20 = icmp eq i32 %call19, 0
  br i1 %tobool20, label %if.else24, label %if.then21

if.then21:                                        ; preds = %if.else18
  %call22 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 101, %union.tree_node* %type, %union.tree_node* %exp.tr, %union.tree_node* %low.tr) #1
  %call23 = tail call %union.tree_node* @fold(%union.tree_node* %call22)
  br label %return

if.else24:                                        ; preds = %if.else18
  %unsigned_flag = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %unsigned_flag, align 8
  %bf.clear = and i32 %bf.load, 8192
  %tobool26 = icmp eq i32 %bf.clear, 0
  br i1 %tobool26, label %if.else32, label %land.lhs.true27

land.lhs.true27:                                  ; preds = %if.else24
  %call28 = tail call i32 @integer_zerop(%union.tree_node* %low.tr) #1
  %tobool29 = icmp eq i32 %call28, 0
  br i1 %tobool29, label %if.else32, label %if.else8.i95

if.else8.i95:                                     ; preds = %land.lhs.true27
  %call11.i96 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 98, %union.tree_node* %type, %union.tree_node* %exp.tr, %union.tree_node* %high.tr) #1
  %call12.i97 = tail call %union.tree_node* @fold(%union.tree_node* %call11.i96) #1
  br label %return

if.else32:                                        ; preds = %land.lhs.true27, %if.else24
  %call33 = tail call i32 @integer_zerop(%union.tree_node* %low.tr) #1
  %tobool34 = icmp eq i32 %call33, 0
  br i1 %tobool34, label %if.else40, label %if.then35

if.then35:                                        ; preds = %if.else32
  %call36 = tail call %union.tree_node* @unsigned_type(%union.tree_node* %0) #1
  %call37 = tail call %union.tree_node* @convert(%union.tree_node* %call36, %union.tree_node* %exp.tr) #1
  %call38 = tail call %union.tree_node* @convert(%union.tree_node* %call36, %union.tree_node* %high.tr) #1
  %cmp5.i = icmp eq %union.tree_node* %call38, null
  br i1 %cmp5.i, label %if.then6.i, label %if.else8.i

if.then6.i:                                       ; preds = %if.then35
  %2 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 12), align 8, !tbaa !14
  %call7.i = tail call %union.tree_node* @convert(%union.tree_node* %type, %union.tree_node* %2) #1
  br label %return

if.else8.i:                                       ; preds = %if.then35
  %call11.i = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 98, %union.tree_node* %type, %union.tree_node* %call37, %union.tree_node* %call38) #1
  %call12.i = tail call %union.tree_node* @fold(%union.tree_node* %call11.i) #1
  br label %return

if.else40:                                        ; preds = %if.else32
  %call41 = tail call fastcc %union.tree_node* @const_binop(i32 60, %union.tree_node* %high.tr, %union.tree_node* %low.tr)
  %cmp42 = icmp eq %union.tree_node* %call41, null
  br i1 %cmp42, label %return, label %land.lhs.true43

land.lhs.true43:                                  ; preds = %if.else40
  %public_flag = getelementptr inbounds %union.tree_node* %call41, i64 0, i32 0, i32 0, i32 2
  %bf.load45 = load i32* %public_flag, align 8
  %bf.clear47 = and i32 %bf.load45, 524288
  %tobool48 = icmp eq i32 %bf.clear47, 0
  br i1 %tobool48, label %if.then49, label %return

if.then49:                                        ; preds = %land.lhs.true43
  %call50 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 60, %union.tree_node* %0, %union.tree_node* %exp.tr, %union.tree_node* %low.tr) #1
  %call51 = tail call %union.tree_node* @fold(%union.tree_node* %call50)
  %3 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8, !tbaa !14
  %call52 = tail call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %3) #1
  br label %tailrecurse

return:                                           ; preds = %if.else40, %land.lhs.true43, %if.else8.i, %if.then6.i, %if.else8.i95, %if.then21, %if.then15, %if.then10, %if.then6, %if.then
  %retval.0 = phi %union.tree_node* [ %call7, %if.then6 ], [ %call12, %if.then10 ], [ %call17, %if.then15 ], [ %call23, %if.then21 ], [ %call2, %if.then ], [ %call12.i97, %if.else8.i95 ], [ %call7.i, %if.then6.i ], [ %call12.i, %if.else8.i ], [ null, %land.lhs.true43 ], [ null, %if.else40 ]
  ret %union.tree_node* %retval.0
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @range_binop(i32 %code, %union.tree_node* %type, %union.tree_node* %arg0, i32 %upper0_p, %union.tree_node* %arg1, i32 %upper1_p) #0 {
entry:
  %cmp = icmp ne %union.tree_node* %arg0, null
  %cmp1 = icmp ne %union.tree_node* %arg1, null
  %or.cond = and i1 %cmp, %cmp1
  br i1 %or.cond, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %cmp2 = icmp eq %union.tree_node* %type, null
  %type3 = getelementptr inbounds %union.tree_node* %arg0, i64 0, i32 0, i32 0, i32 1
  %0 = load %union.tree_node** %type3, align 8, !tbaa !11
  %.type = select i1 %cmp2, %union.tree_node* %0, %union.tree_node* %type
  %call = tail call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %arg1) #1
  %call6 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %code, %union.tree_node* %.type, %union.tree_node* %arg0, %union.tree_node* %call) #1
  %call7 = tail call %union.tree_node* @fold(%union.tree_node* %call6)
  %1 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !14
  br label %while.cond

while.cond:                                       ; preds = %land.rhs, %if.then
  %tem.0 = phi %union.tree_node* [ %call7, %if.then ], [ %2, %land.rhs ]
  %code9 = getelementptr inbounds %union.tree_node* %tem.0, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code9, align 8
  %bf.clear = and i32 %bf.load, 255
  %bf.clear.off = add i32 %bf.clear, -114
  %switch = icmp ult i32 %bf.clear.off, 3
  br i1 %switch, label %land.lhs.true22, label %while.end

land.lhs.true22:                                  ; preds = %while.cond
  %operands = getelementptr inbounds %union.tree_node* %tem.0, i64 0, i32 0, i32 2
  %arrayidx = bitcast i32* %operands to %union.tree_node**
  %2 = load %union.tree_node** %arrayidx, align 8, !tbaa !14
  %cmp23 = icmp eq %union.tree_node* %2, %1
  br i1 %cmp23, label %while.end, label %land.rhs

land.rhs:                                         ; preds = %land.lhs.true22
  %type25 = getelementptr inbounds %union.tree_node* %tem.0, i64 0, i32 0, i32 0, i32 1
  %3 = load %union.tree_node** %type25, align 8, !tbaa !11
  %type26 = bitcast %union.tree_node* %3 to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type* %type26, i64 0, i32 6
  %bf.load27 = load i32* %mode, align 4
  %type33 = getelementptr inbounds %union.tree_node* %2, i64 0, i32 0, i32 0, i32 1
  %4 = load %union.tree_node** %type33, align 8, !tbaa !11
  %type34 = bitcast %union.tree_node* %4 to %struct.tree_type*
  %mode35 = getelementptr inbounds %struct.tree_type* %type34, i64 0, i32 6
  %bf.load36 = load i32* %mode35, align 4
  %bf.lshr121 = xor i32 %bf.load36, %bf.load27
  %5 = and i32 %bf.lshr121, 65024
  %cmp39 = icmp eq i32 %5, 0
  br i1 %cmp39, label %while.cond, label %while.end

while.end:                                        ; preds = %while.cond, %land.lhs.true22, %land.rhs
  %cmp47 = icmp eq i32 %bf.clear, 25
  %cond51 = select i1 %cmp47, %union.tree_node* %tem.0, %union.tree_node* null
  br label %return

if.end:                                           ; preds = %entry
  %idxprom = sext i32 %code to i64
  %arrayidx52 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom
  %6 = load i8* %arrayidx52, align 1, !tbaa !15
  %cmp53 = icmp eq i8 %6, 60
  br i1 %cmp53, label %if.end56, label %return

if.end56:                                         ; preds = %if.end
  br i1 %cmp, label %cond.end62, label %cond.false60

cond.false60:                                     ; preds = %if.end56
  %tobool = icmp ne i32 %upper0_p, 0
  %cond61 = select i1 %tobool, i32 1, i32 -1
  br label %cond.end62

cond.end62:                                       ; preds = %if.end56, %cond.false60
  %cond63 = phi i32 [ %cond61, %cond.false60 ], [ 0, %if.end56 ]
  br i1 %cmp1, label %cond.end70, label %cond.false67

cond.false67:                                     ; preds = %cond.end62
  %tobool68 = icmp ne i32 %upper1_p, 0
  %cond69 = select i1 %tobool68, i32 1, i32 -1
  br label %cond.end70

cond.end70:                                       ; preds = %cond.end62, %cond.false67
  %cond71 = phi i32 [ %cond69, %cond.false67 ], [ 0, %cond.end62 ]
  switch i32 %code, label %sw.default [
    i32 101, label %sw.bb
    i32 102, label %sw.bb74
    i32 97, label %sw.bb77
    i32 98, label %sw.bb80
    i32 99, label %sw.bb83
    i32 100, label %sw.bb86
  ]

sw.bb:                                            ; preds = %cond.end70
  %cmp72 = icmp eq i32 %cond63, %cond71
  %conv73 = zext i1 %cmp72 to i32
  br label %sw.epilog

sw.bb74:                                          ; preds = %cond.end70
  %cmp75 = icmp ne i32 %cond63, %cond71
  %conv76 = zext i1 %cmp75 to i32
  br label %sw.epilog

sw.bb77:                                          ; preds = %cond.end70
  %cmp78 = icmp slt i32 %cond63, %cond71
  %conv79 = zext i1 %cmp78 to i32
  br label %sw.epilog

sw.bb80:                                          ; preds = %cond.end70
  %cmp81 = icmp sle i32 %cond63, %cond71
  %conv82 = zext i1 %cmp81 to i32
  br label %sw.epilog

sw.bb83:                                          ; preds = %cond.end70
  %cmp84 = icmp sgt i32 %cond63, %cond71
  %conv85 = zext i1 %cmp84 to i32
  br label %sw.epilog

sw.bb86:                                          ; preds = %cond.end70
  %cmp87 = icmp sge i32 %cond63, %cond71
  %conv88 = zext i1 %cmp87 to i32
  br label %sw.epilog

sw.default:                                       ; preds = %cond.end70
  tail call void @fancy_abort(i8* getelementptr inbounds ([13 x i8]* @.str, i64 0, i64 0), i32 3411, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.range_binop, i64 0, i64 0)) #7
  unreachable

sw.epilog:                                        ; preds = %sw.bb86, %sw.bb83, %sw.bb80, %sw.bb77, %sw.bb74, %sw.bb
  %result.0 = phi i32 [ %conv88, %sw.bb86 ], [ %conv85, %sw.bb83 ], [ %conv82, %sw.bb80 ], [ %conv79, %sw.bb77 ], [ %conv76, %sw.bb74 ], [ %conv73, %sw.bb ]
  %tobool89 = icmp ne i32 %result.0, 0
  %7 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 12), align 8, !tbaa !14
  %8 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8, !tbaa !14
  %cond93 = select i1 %tobool89, %union.tree_node* %7, %union.tree_node* %8
  %call94 = tail call %union.tree_node* @convert(%union.tree_node* %type, %union.tree_node* %cond93) #1
  br label %return

return:                                           ; preds = %if.end, %sw.epilog, %while.end
  %retval.0 = phi %union.tree_node* [ %cond51, %while.end ], [ %call94, %sw.epilog ], [ null, %if.end ]
  ret %union.tree_node* %retval.0
}

declare i32 @is_pending_size(%union.tree_node*) #3

declare void @put_pending_size(%union.tree_node*) #3

declare i32 @do_float_handler(void (i8*)*, i8*) #3

; Function Attrs: nounwind uwtable
define internal void @const_binop_1(i8* %data) #0 {
entry:
  %value = alloca %struct.realvaluetype, align 8
  %agg.tmp = alloca %struct.realvaluetype, align 8
  %code = bitcast i8* %data to i32*
  %0 = load i32* %code, align 4, !tbaa !42
  %d1 = getelementptr inbounds i8* %data, i64 16
  %1 = bitcast i8* %d1 to %struct.realvaluetype*
  %d2 = getelementptr inbounds i8* %data, i64 40
  %2 = bitcast i8* %d2 to %struct.realvaluetype*
  call void @earith(%struct.realvaluetype* %value, i32 %0, %struct.realvaluetype* %1, %struct.realvaluetype* %2) #1
  %type = getelementptr inbounds i8* %data, i64 8
  %3 = bitcast i8* %type to %union.tree_node**
  %4 = load %union.tree_node** %3, align 8, !tbaa !39
  %type2 = bitcast %union.tree_node* %4 to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type* %type2, i64 0, i32 6
  %bf.load = load i32* %mode, align 4
  %bf.lshr = lshr i32 %bf.load, 9
  %bf.clear = and i32 %bf.lshr, 127
  call void @real_value_truncate(%struct.realvaluetype* sret %agg.tmp, i32 %bf.clear, %struct.realvaluetype* byval align 8 %value) #1
  %call = call %union.tree_node* @build_real(%union.tree_node* %4, %struct.realvaluetype* byval align 8 %agg.tmp) #1
  %t = getelementptr inbounds i8* %data, i64 64
  %5 = bitcast i8* %t to %union.tree_node**
  store %union.tree_node* %call, %union.tree_node** %5, align 8, !tbaa !43
  ret void
}

declare %union.tree_node* @copy_node(%union.tree_node*) #3

declare void @earith(%struct.realvaluetype*, i32, %struct.realvaluetype*, %struct.realvaluetype*) #3

declare void @real_value_truncate(%struct.realvaluetype* sret, i32, %struct.realvaluetype* byval align 8) #3

declare void @real_value_from_int_cst(%struct.realvaluetype* sret, %union.tree_node*, %union.tree_node*) #3

declare void @ereal_to_int(i64*, i64*, %struct.realvaluetype* byval align 8) #3

declare %union.tree_node* @build_real_from_int_cst(%union.tree_node*, %union.tree_node*) #3

; Function Attrs: nounwind uwtable
define internal void @fold_convert_1(i8* nocapture %data) #0 {
entry:
  %agg.tmp = alloca %struct.realvaluetype, align 8
  %type = getelementptr inbounds i8* %data, i64 8
  %0 = bitcast i8* %type to %union.tree_node**
  %1 = load %union.tree_node** %0, align 8, !tbaa !29
  %type2 = bitcast %union.tree_node* %1 to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type* %type2, i64 0, i32 6
  %bf.load = load i32* %mode, align 4
  %bf.lshr = lshr i32 %bf.load, 9
  %bf.clear = and i32 %bf.lshr, 127
  %arg1 = bitcast i8* %data to %union.tree_node**
  %2 = load %union.tree_node** %arg1, align 8, !tbaa !27
  %real_cst3 = getelementptr inbounds %union.tree_node* %2, i64 0, i32 0, i32 2
  %3 = bitcast i32* %real_cst3 to %struct.realvaluetype*
  call void @real_value_truncate(%struct.realvaluetype* sret %agg.tmp, i32 %bf.clear, %struct.realvaluetype* byval align 8 %3) #1
  %call = call %union.tree_node* @build_real(%union.tree_node* %1, %struct.realvaluetype* byval align 8 %agg.tmp) #1
  %t = getelementptr inbounds i8* %data, i64 16
  %4 = bitcast i8* %t to %union.tree_node**
  store %union.tree_node* %call, %union.tree_node** %4, align 8, !tbaa !30
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @strip_compound_expr(%union.tree_node* %t, %union.tree_node* readnone %s) #0 {
entry:
  %code1 = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code1, align 8
  %bf.clear = and i32 %bf.load, 255
  switch i32 %bf.clear, label %if.else40 [
    i32 47, label %land.lhs.true
    i32 51, label %if.then19
  ]

land.lhs.true:                                    ; preds = %entry
  %operands = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 2
  %arrayidx = bitcast i32* %operands to %union.tree_node**
  %0 = load %union.tree_node** %arrayidx, align 8, !tbaa !14
  %code3 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2
  %bf.load4 = load i32* %code3, align 8
  %bf.clear5 = and i32 %bf.load4, 255
  %cmp6 = icmp eq i32 %bf.clear5, 114
  br i1 %cmp6, label %land.lhs.true7, label %if.else40

land.lhs.true7:                                   ; preds = %land.lhs.true
  %operands12 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 2
  %arrayidx13 = bitcast i32* %operands12 to %union.tree_node**
  %1 = load %union.tree_node** %arrayidx13, align 8, !tbaa !14
  %cmp14 = icmp eq %union.tree_node* %1, %s
  br i1 %cmp14, label %if.then, label %if.else40

if.then:                                          ; preds = %land.lhs.true7
  %arrayidx17 = getelementptr inbounds i32* %operands, i64 2
  %2 = bitcast i32* %arrayidx17 to %union.tree_node**
  %3 = load %union.tree_node** %2, align 8, !tbaa !14
  br label %return

if.then19:                                        ; preds = %entry
  %operands21.phi.trans.insert = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 2
  %arrayidx22.phi.trans.insert = bitcast i32* %operands21.phi.trans.insert to %union.tree_node**
  %.pre113 = load %union.tree_node** %arrayidx22.phi.trans.insert, align 8, !tbaa !14
  %operands21 = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 2
  %arrayidx22 = bitcast i32* %operands21 to %union.tree_node**
  %call = tail call fastcc %union.tree_node* @strip_compound_expr(%union.tree_node* %.pre113, %union.tree_node* %s)
  store %union.tree_node* %call, %union.tree_node** %arrayidx22, align 8, !tbaa !14
  %arrayidx28 = getelementptr inbounds i32* %operands21, i64 2
  %4 = bitcast i32* %arrayidx28 to %union.tree_node**
  %5 = load %union.tree_node** %4, align 8, !tbaa !14
  %call29 = tail call fastcc %union.tree_node* @strip_compound_expr(%union.tree_node* %5, %union.tree_node* %s)
  store %union.tree_node* %call29, %union.tree_node** %4, align 8, !tbaa !14
  %arrayidx35 = getelementptr inbounds i32* %operands21, i64 4
  %6 = bitcast i32* %arrayidx35 to %union.tree_node**
  %7 = load %union.tree_node** %6, align 8, !tbaa !14
  %call36 = tail call fastcc %union.tree_node* @strip_compound_expr(%union.tree_node* %7, %union.tree_node* %s)
  store %union.tree_node* %call36, %union.tree_node** %6, align 8, !tbaa !14
  ret %union.tree_node* %t

if.else40:                                        ; preds = %land.lhs.true7, %land.lhs.true, %entry
  %idxprom107 = zext i32 %bf.clear to i64
  %arrayidx41 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom107
  %8 = load i8* %arrayidx41, align 1, !tbaa !15
  switch i8 %8, label %return [
    i8 49, label %if.then44
    i8 60, label %if.then63
    i8 50, label %if.then63
  ]

if.then44:                                        ; preds = %if.else40
  %operands46 = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 2
  %arrayidx47 = bitcast i32* %operands46 to %union.tree_node**
  %9 = load %union.tree_node** %arrayidx47, align 8, !tbaa !14
  %call48 = tail call fastcc %union.tree_node* @strip_compound_expr(%union.tree_node* %9, %union.tree_node* %s)
  store %union.tree_node* %call48, %union.tree_node** %arrayidx47, align 8, !tbaa !14
  ret %union.tree_node* %t

if.then63:                                        ; preds = %if.else40, %if.else40
  %.in.in = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 2
  %.in = bitcast i32* %.in.in to %union.tree_node**
  %10 = load %union.tree_node** %.in, align 8
  %operands65 = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 2
  %arrayidx66 = bitcast i32* %operands65 to %union.tree_node**
  %call67 = tail call fastcc %union.tree_node* @strip_compound_expr(%union.tree_node* %10, %union.tree_node* %s)
  store %union.tree_node* %call67, %union.tree_node** %arrayidx66, align 8, !tbaa !14
  %arrayidx73 = getelementptr inbounds i32* %operands65, i64 2
  %11 = bitcast i32* %arrayidx73 to %union.tree_node**
  %12 = load %union.tree_node** %11, align 8, !tbaa !14
  %call74 = tail call fastcc %union.tree_node* @strip_compound_expr(%union.tree_node* %12, %union.tree_node* %s)
  store %union.tree_node* %call74, %union.tree_node** %11, align 8, !tbaa !14
  ret %union.tree_node* %t

return:                                           ; preds = %if.else40, %if.then
  %retval.0 = phi %union.tree_node* [ %3, %if.then ], [ %t, %if.else40 ]
  ret %union.tree_node* %retval.0
}

; Function Attrs: nounwind readnone
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #6

attributes #0 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }
attributes #2 = { noreturn "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone }
attributes #7 = { noreturn nounwind }

!llvm.ident = !{!0}

!0 = metadata !{metadata !"clang version 3.5 (trunk)"}
!1 = metadata !{metadata !2, metadata !9, i64 32}
!2 = metadata !{metadata !"tree_int_cst", metadata !3, i64 0, metadata !4, i64 24, metadata !8, i64 32}
!3 = metadata !{metadata !"tree_common", metadata !4, i64 0, metadata !4, i64 8, metadata !5, i64 16, metadata !7, i64 17, metadata !7, i64 17, metadata !7, i64 17, metadata !7, i64 17, metadata !7, i64 17, metadata !7, i64 17, metadata !7, i64 17, metadata !7, i64 17, metadata !7, i64 18, metadata !7, i64 18, metadata !7, i64 18, metadata !7, i64 18, metadata !7, i64 18, metadata !7, i64 18, metadata !7, i64 18, metadata !7, i64 18, metadata !7, i64 19, metadata !7, i64 19, metadata !7, i64 19, metadata !7, i64 19, metadata !7, i64 19, metadata !7, i64 19, metadata !7, i64 19, metadata !7, i64 19}
!4 = metadata !{metadata !"any pointer", metadata !5, i64 0}
!5 = metadata !{metadata !"omnipotent char", metadata !6, i64 0}
!6 = metadata !{metadata !"Simple C/C++ TBAA"}
!7 = metadata !{metadata !"int", metadata !5, i64 0}
!8 = metadata !{metadata !"", metadata !9, i64 0, metadata !9, i64 8}
!9 = metadata !{metadata !"long long", metadata !5, i64 0}
!10 = metadata !{metadata !2, metadata !9, i64 40}
!11 = metadata !{metadata !3, metadata !4, i64 8}
!12 = metadata !{metadata !7, metadata !7, i64 0}
!13 = metadata !{metadata !9, metadata !9, i64 0}
!14 = metadata !{metadata !4, metadata !4, i64 0}
!15 = metadata !{metadata !5, metadata !5, i64 0}
!16 = metadata !{metadata !17, metadata !4, i64 32}
!17 = metadata !{metadata !"tree_complex", metadata !3, i64 0, metadata !4, i64 24, metadata !4, i64 32, metadata !4, i64 40}
!18 = metadata !{metadata !19, metadata !4, i64 104}
!19 = metadata !{metadata !"tree_decl", metadata !3, i64 0, metadata !4, i64 24, metadata !7, i64 32, metadata !7, i64 36, metadata !4, i64 40, metadata !5, i64 48, metadata !7, i64 49, metadata !7, i64 49, metadata !7, i64 49, metadata !7, i64 49, metadata !7, i64 49, metadata !7, i64 49, metadata !7, i64 49, metadata !7, i64 49, metadata !7, i64 50, metadata !7, i64 50, metadata !7, i64 50, metadata !7, i64 50, metadata !7, i64 50, metadata !7, i64 50, metadata !7, i64 50, metadata !7, i64 50, metadata !7, i64 51, metadata !7, i64 51, metadata !7, i64 51, metadata !7, i64 51, metadata !7, i64 51, metadata !5, i64 51, metadata !7, i64 51, metadata !7, i64 52, metadata !7, i64 52, metadata !7, i64 52, metadata !7, i64 52, metadata !7, i64 52, metadata !7, i64 52, metadata !7, i64 52, metadata !7, i64 53, metadata !7, i64 53, metadata !7, i64 53, metadata !7, i64 53, metadata !7, i64 53, metadata !5, i64 56, metadata !4, i64 64, metadata !4, i64 72, metadata !4, i64 80, metadata !4, i64 88, metadata !4, i64 96, metadata !4, i64 104, metadata !4, i64 112, metadata !4, i64 120, metadata !4, i64 128, metadata !4, i64 136, metadata !4, i64 144, metadata !4, i64 152, metadata !5, i64 160, metadata !4, i64 168, metadata !4, i64 176, metadata !4, i64 184, metadata !9, i64 192, metadata !4, i64 200}
!20 = metadata !{metadata !21, metadata !4, i64 128}
!21 = metadata !{metadata !"tree_type", metadata !3, i64 0, metadata !4, i64 24, metadata !4, i64 32, metadata !4, i64 40, metadata !4, i64 48, metadata !7, i64 56, metadata !7, i64 60, metadata !5, i64 61, metadata !7, i64 62, metadata !7, i64 62, metadata !7, i64 62, metadata !7, i64 62, metadata !7, i64 62, metadata !7, i64 62, metadata !7, i64 62, metadata !7, i64 63, metadata !7, i64 63, metadata !7, i64 63, metadata !7, i64 63, metadata !7, i64 63, metadata !7, i64 63, metadata !7, i64 63, metadata !7, i64 63, metadata !7, i64 64, metadata !4, i64 72, metadata !4, i64 80, metadata !5, i64 88, metadata !4, i64 96, metadata !4, i64 104, metadata !4, i64 112, metadata !4, i64 120, metadata !4, i64 128, metadata !4, i64 136, metadata !4, i64 144, metadata !9, i64 152, metadata !4, i64 160}
!22 = metadata !{metadata !23, metadata !23, i64 0}
!23 = metadata !{metadata !"short", metadata !5, i64 0}
!24 = metadata !{i64 0, i64 24, metadata !15}
!25 = metadata !{metadata !21, metadata !4, i64 104}
!26 = metadata !{metadata !21, metadata !4, i64 112}
!27 = metadata !{metadata !28, metadata !4, i64 0}
!28 = metadata !{metadata !"fc_args", metadata !4, i64 0, metadata !4, i64 8, metadata !4, i64 16}
!29 = metadata !{metadata !28, metadata !4, i64 8}
!30 = metadata !{metadata !28, metadata !4, i64 16}
!31 = metadata !{metadata !32, metadata !4, i64 32}
!32 = metadata !{metadata !"tree_list", metadata !3, i64 0, metadata !4, i64 24, metadata !4, i64 32}
!33 = metadata !{metadata !17, metadata !4, i64 40}
!34 = metadata !{metadata !19, metadata !4, i64 40}
!35 = metadata !{metadata !21, metadata !7, i64 64}
!36 = metadata !{metadata !3, metadata !4, i64 0}
!37 = metadata !{metadata !38, metadata !7, i64 32}
!38 = metadata !{metadata !"tree_string", metadata !3, i64 0, metadata !4, i64 24, metadata !7, i64 32, metadata !4, i64 40}
!39 = metadata !{metadata !40, metadata !4, i64 8}
!40 = metadata !{metadata !"cb_args", metadata !5, i64 0, metadata !4, i64 8, metadata !41, i64 16, metadata !41, i64 40, metadata !4, i64 64}
!41 = metadata !{metadata !"", metadata !5, i64 0}
!42 = metadata !{metadata !40, metadata !5, i64 0}
!43 = metadata !{metadata !40, metadata !4, i64 64}
!44 = metadata !{metadata !45, metadata !7, i64 0}
!45 = metadata !{metadata !"rtvec_def", metadata !7, i64 0, metadata !5, i64 8}
