; ModuleID = 'dbxout.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.gcc_debug_hooks = type { void (i8*)*, void (i8*)*, void (i32, i8*)*, void (i32, i8*)*, void (i32, i8*)*, void (i32)*, void (i32, i32)*, void (i32, i32)*, i1 (%union.tree_node*)*, void (i32, i8*)*, void (i32, i8*)*, void (i32)*, void ()*, void (%union.tree_node*)*, void (i32)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void (%struct.rtx_def*)* }
%union.tree_node = type { %struct.tree_decl }
%struct.tree_decl = type { %struct.tree_common, i8*, i32, i32, %union.tree_node*, i48, %union.anon, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %union.anon.1, %union.tree_node*, %union.tree_node*, %union.tree_node*, i64, %struct.lang_decl* }
%struct.tree_common = type { %union.tree_node*, %union.tree_node*, i32 }
%union.anon = type { i64 }
%struct.rtx_def = type { i32, [1 x %union.rtunion_def] }
%union.rtunion_def = type { i64 }
%union.anon.1 = type { %struct.function* }
%struct.function = type { %struct.eh_status*, %struct.stmt_status*, %struct.expr_status*, %struct.emit_status*, %struct.varasm_status*, i8*, %union.tree_node*, %struct.function*, i32, i32, i32, i32, %struct.rtx_def*, %struct.ix86_args, %struct.rtx_def*, %struct.rtx_def*, i8*, %struct.initial_value_struct*, i32, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i64, %union.tree_node*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, %struct.rtx_def**, %struct.temp_slot*, i32, i32, i32, %struct.var_refs_queue*, i32, i32, i8*, %union.tree_node*, %struct.rtx_def*, i32, i32, %struct.machine_function*, i32, i32, %struct.language_function*, %struct.rtx_def*, i24 }
%struct.eh_status = type opaque
%struct.stmt_status = type opaque
%struct.expr_status = type { i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def* }
%struct.emit_status = type { i32, i32, %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.sequence_stack*, i32, i32, i8*, i32, i8*, %union.tree_node**, %struct.rtx_def** }
%struct.sequence_stack = type { %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.sequence_stack* }
%struct.varasm_status = type opaque
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.initial_value_struct = type opaque
%struct.temp_slot = type opaque
%struct.var_refs_queue = type { %struct.rtx_def*, i32, i32, %struct.var_refs_queue* }
%struct.machine_function = type opaque
%struct.language_function = type opaque
%struct.lang_decl = type opaque
%struct._IO_FILE = type opaque
%struct.typeinfo = type { i32, i32, i32 }
%struct.lang_hooks = type { i8*, i64, void ()*, i32 (i32, i8**)*, void ()*, i8* (i8*)*, void ()*, void ()*, i64 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i32 (%struct.rtx_def*, %union.tree_node*)*, i32 (%union.tree_node*)*, i8, void ()*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (i32)*, %struct.lang_hooks_for_tree_inlining, %struct.lang_hooks_for_tree_dump }
%struct.lang_hooks_for_tree_inlining = type { %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, i8*)*, i32 (%union.tree_node**)*, i32 (%union.tree_node*)*, %union.tree_node* (i8*, %union.tree_node*)*, i32 (%union.tree_node*)*, i32 (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*, i8*, i32*, i8*)*, i32 (%union.tree_node*)*, i32 (%union.tree_node*)*, void (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)* }
%struct.lang_hooks_for_tree_dump = type { i32 (i8*, %union.tree_node*)*, i32 (%union.tree_node*)* }
%struct.dbx_file = type { %struct.dbx_file*, i32, i32 }
%struct.gcc_target = type { %struct.asm_out, %struct.sched, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %struct.attribute_spec*, i32 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*, %union.tree_node**)*, i1 (%union.tree_node*)*, i1 (%union.tree_node*)*, void ()*, %struct.rtx_def* (%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32)*, i32 (%union.tree_node*, i8*, i32)*, i8, i8, i1 ()* }
%struct.asm_out = type { i8*, i8*, i8*, %struct.asm_int_op, %struct.asm_int_op, i1 (%struct.rtx_def*, i32, i32)*, void (%struct._IO_FILE*, i64)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, i64)*, void (i8*, i32)*, void ()*, void ()*, void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, i32)* }
%struct.asm_int_op = type { i8*, i8*, i8*, i8* }
%struct.sched = type { i32 (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)*, i32 ()*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, %struct.rtx_def* (i32, %struct.rtx_def*)* }
%struct.attribute_spec = type { i8*, i32, i32, i8, i8, i8, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* }
%struct.tree_type = type { %struct.tree_common, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32, i32, i32, %union.tree_node*, %union.tree_node*, %union.anon.2, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i64, %struct.lang_type* }
%union.anon.2 = type { i8* }
%struct.lang_type = type opaque

@dbx_debug_hooks = global %struct.gcc_debug_hooks { void (i8*)* @dbxout_init, void (i8*)* @dbxout_finish, void (i32, i8*)* @debug_nothing_int_charstar, void (i32, i8*)* @debug_nothing_int_charstar, void (i32, i8*)* @dbxout_start_source_file, void (i32)* @dbxout_end_source_file, void (i32, i32)* @dbxout_begin_block, void (i32, i32)* @dbxout_end_block, i1 (%union.tree_node*)* @debug_true_tree, void (i32, i8*)* @dbxout_source_line, void (i32, i8*)* @dbxout_source_line, void (i32)* @debug_nothing_int, void ()* @debug_nothing_void, void (%union.tree_node*)* @dbxout_begin_function, void (i32)* @debug_nothing_int, void (%union.tree_node*)* @dbxout_function_decl, void (%union.tree_node*)* @dbxout_global_decl, void (%union.tree_node*)* @debug_nothing_tree, void (%union.tree_node*)* @debug_nothing_tree, void (%struct.rtx_def*)* @debug_nothing_rtx }, align 8
@current_sym_code = internal unnamed_addr global i32 0, align 4
@current_sym_value = internal unnamed_addr global i32 0, align 4
@current_sym_addr = internal unnamed_addr global %struct.rtx_def* null, align 8
@current_sym_nchars = internal unnamed_addr global i32 0, align 4
@current_function_decl = external global %union.tree_node*
@asmfile = internal unnamed_addr global %struct._IO_FILE* null, align 8
@.str = private unnamed_addr constant [9 x i8] c"%s\22%s:%c\00", align 1
@.str1 = private unnamed_addr constant [9 x i8] c"\09.stabs\09\00", align 1
@lang_set_decl_assembler_name = external global void (%union.tree_node*)*
@global_trees = external global [51 x %union.tree_node*]
@.str2 = private unnamed_addr constant [7 x i8] c",%s,%s\00", align 1
@use_gnu_debug_info_extensions = external global i32
@have_used_extensions = internal unnamed_addr global i1 false
@.str3 = private unnamed_addr constant [8 x i8] c"%s\22%s:T\00", align 1
@.str4 = private unnamed_addr constant [7 x i8] c"%s\22%s:\00", align 1
@.str5 = private unnamed_addr constant [7 x i8] c"%s\22 :T\00", align 1
@.str6 = private unnamed_addr constant [9 x i8] c"dbxout.c\00", align 1
@__FUNCTION__.dbxout_symbol = private unnamed_addr constant [14 x i8] c"dbxout_symbol\00", align 1
@.str7 = private unnamed_addr constant [10 x i8] c"%s\22%s:c=i\00", align 1
@.str8 = private unnamed_addr constant [5 x i8] c"%lld\00", align 1
@.str9 = private unnamed_addr constant [14 x i8] c"\22,0x%x,0,0,0\0A\00", align 1
@.str10 = private unnamed_addr constant [13 x i8] c"%s\22(anon):%c\00", align 1
@target_flags = external global i32
@dbx64_register_map = external constant [53 x i32]
@svr4_dbx_register_map = external constant [53 x i32]
@.str11 = private unnamed_addr constant [7 x i8] c"(anon)\00", align 1
@.str12 = private unnamed_addr constant [8 x i8] c"%s\22%s:v\00", align 1
@const_int_rtx = external global [129 x %struct.rtx_def*]
@typevec = common global %struct.typeinfo* null, align 8
@.str13 = private unnamed_addr constant [11 x i8] c"\22,%d,0,%d,\00", align 1
@.str14 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@lang_hooks = external constant %struct.lang_hooks
@.str15 = private unnamed_addr constant [8 x i8] c"GNU C++\00", align 1
@.str16 = private unnamed_addr constant [6 x i8] c"$real\00", align 1
@.str17 = private unnamed_addr constant [6 x i8] c"$imag\00", align 1
@tree_code_type = external global [256 x i8]
@.str18 = private unnamed_addr constant [9 x i8] c"%s\22%s%s:\00", align 1
@.str19 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@dbxout_type.anonymous_type_number = internal unnamed_addr global i32 0, align 4
@integer_types = external global [11 x %union.tree_node*]
@next_type_number = internal unnamed_addr global i32 0, align 4
@typevec_len = internal unnamed_addr global i32 0, align 4
@current_file = internal unnamed_addr global %struct.dbx_file* null, align 8
@.str22 = private unnamed_addr constant [8 x i8] c";0;127;\00", align 1
@.str23 = private unnamed_addr constant [6 x i8] c"@s%d;\00", align 1
@.str25 = private unnamed_addr constant [4 x i8] c";0;\00", align 1
@.str26 = private unnamed_addr constant [3 x i8] c"@s\00", align 1
@.str27 = private unnamed_addr constant [6 x i8] c";-20;\00", align 1
@.str28 = private unnamed_addr constant [7 x i8] c";0;%d;\00", align 1
@.str29 = private unnamed_addr constant [6 x i8] c";-16;\00", align 1
@.str30 = private unnamed_addr constant [18 x i8] c"eFalse:0,True:1,;\00", align 1
@.str31 = private unnamed_addr constant [6 x i8] c"real:\00", align 1
@.str32 = private unnamed_addr constant [7 x i8] c",0,%d;\00", align 1
@.str33 = private unnamed_addr constant [6 x i8] c"imag:\00", align 1
@.str34 = private unnamed_addr constant [9 x i8] c",%d,%d;;\00", align 1
@.str35 = private unnamed_addr constant [4 x i8] c"@S;\00", align 1
@.str36 = private unnamed_addr constant [6 x i8] c";@S;S\00", align 1
@.str37 = private unnamed_addr constant [3 x i8] c"ar\00", align 1
@.str38 = private unnamed_addr constant [7 x i8] c";0;-1;\00", align 1
@.str40 = private unnamed_addr constant [3 x i8] c"xs\00", align 1
@.str41 = private unnamed_addr constant [3 x i8] c"xu\00", align 1
@.str42 = private unnamed_addr constant [5 x i8] c"$$%d\00", align 1
@.str44 = private unnamed_addr constant [5 x i8] c"!%d,\00", align 1
@.str45 = private unnamed_addr constant [3 x i8] c"xe\00", align 1
@.str46 = private unnamed_addr constant [4 x i8] c"%s:\00", align 1
@__FUNCTION__.dbxout_type = private unnamed_addr constant [12 x i8] c"dbxout_type\00", align 1
@.str47 = private unnamed_addr constant [5 x i8] c"%s::\00", align 1
@.str48 = private unnamed_addr constant [11 x i8] c":%s;%c%c%c\00", align 1
@.str49 = private unnamed_addr constant [5 x i8] c":%s;\00", align 1
@.str50 = private unnamed_addr constant [6 x i8] c",0,0;\00", align 1
@__FUNCTION__.dbxout_type_name = private unnamed_addr constant [17 x i8] c"dbxout_type_name\00", align 1
@.str53 = private unnamed_addr constant [7 x i8] c"%o%01o\00", align 1
@.str54 = private unnamed_addr constant [5 x i8] c"%01o\00", align 1
@.str55 = private unnamed_addr constant [3 x i8] c";0\00", align 1
@.str56 = private unnamed_addr constant [5 x i8] c";-1;\00", align 1
@.str57 = private unnamed_addr constant [8 x i8] c"(%d,%d)\00", align 1
@.str58 = private unnamed_addr constant [45 x i8] c"\09.text\0A\09.stabs \22\22,%d,0,0,%LLetext\0A%LLetext:\0A\00", align 1
@targetm = external global %struct.gcc_target
@dbxout_function_end.scope_labelno = internal unnamed_addr global i32 0, align 4
@.str59 = private unnamed_addr constant [7 x i8] c"*.%s%u\00", align 1
@.str60 = private unnamed_addr constant [7 x i8] c"Lscope\00", align 1
@.str61 = private unnamed_addr constant [8 x i8] c".%s%u:\0A\00", align 1
@.str62 = private unnamed_addr constant [13 x i8] c"%s\22\22,%d,0,0,\00", align 1
@current_function_func_begin_label = external global %union.tree_node*
@debug_info_level = external global i32
@.str64 = private unnamed_addr constant [4 x i8] c"LBB\00", align 1
@.str65 = private unnamed_addr constant [18 x i8] c"%s\22%s:C1\22,%d,0,0,\00", align 1
@.str66 = private unnamed_addr constant [10 x i8] c"%s%d,0,0,\00", align 1
@.str67 = private unnamed_addr constant [9 x i8] c"\09.stabn\09\00", align 1
@.str68 = private unnamed_addr constant [4 x i8] c"LBE\00", align 1
@dbxout_source_line.sym_lineno = internal unnamed_addr global i32 1, align 4
@.str69 = private unnamed_addr constant [3 x i8] c"LM\00", align 1
@.str70 = private unnamed_addr constant [17 x i8] c"\09.stabn 68,0,%d,\00", align 1
@lastfile = internal unnamed_addr global i8* null, align 8
@.str71 = private unnamed_addr constant [6 x i8] c"Ltext\00", align 1
@source_label_number = internal unnamed_addr global i32 1, align 4
@.str72 = private unnamed_addr constant [9 x i8] c",%d,0,0,\00", align 1
@.str73 = private unnamed_addr constant [12 x i8] c"%s%d,0,0,0\0A\00", align 1
@next_file_number = internal unnamed_addr global i32 0, align 4
@.str74 = private unnamed_addr constant [11 x i8] c",%d,0,0,0\0A\00", align 1
@asm_out_file = external global %struct._IO_FILE*
@cwd = internal unnamed_addr global i8* null, align 8
@.str75 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str76 = private unnamed_addr constant [17 x i8] c"%s\22%s\22,%d,0,0,0\0A\00", align 1
@.str77 = private unnamed_addr constant [15 x i8] c"gcc2_compiled.\00", align 1

; Function Attrs: nounwind uwtable
define internal void @dbxout_init(i8* %input_file_name) #0 {
entry:
  %ltext_label_name = alloca [100 x i8], align 16
  %0 = getelementptr inbounds [100 x i8]* %ltext_label_name, i64 0, i64 0
  call void @llvm.lifetime.start(i64 100, i8* %0) #5
  %call = call %union.tree_node* @getdecls() #5
  %1 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !1
  store %struct._IO_FILE* %1, %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  store i32 100, i32* @typevec_len, align 4, !tbaa !5
  %call1 = call noalias i8* @xcalloc(i64 100, i64 12) #5
  %2 = bitcast i8* %call1 to %struct.typeinfo*
  store %struct.typeinfo* %2, %struct.typeinfo** @typevec, align 8, !tbaa !1
  %call2 = call i32 (i8*, i8*, ...)* @sprintf(i8* %0, i8* getelementptr inbounds ([7 x i8]* @.str59, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8]* @.str71, i64 0, i64 0), i32 0) #5
  %3 = load i32* @use_gnu_debug_info_extensions, align 4, !tbaa !5
  %tobool = icmp eq i32 %3, 0
  br i1 %tobool, label %if.end20, label %if.then

if.then:                                          ; preds = %entry
  %4 = load i8** @cwd, align 8, !tbaa !1
  %tobool3 = icmp eq i8* %4, null
  br i1 %tobool3, label %land.lhs.true, label %if.then14

land.lhs.true:                                    ; preds = %if.then
  %call4 = call i8* @getpwd() #5
  store i8* %call4, i8** @cwd, align 8, !tbaa !1
  %tobool5 = icmp eq i8* %call4, null
  br i1 %tobool5, label %if.end20, label %land.lhs.true6

land.lhs.true6:                                   ; preds = %land.lhs.true
  %5 = load i8* %call4, align 1, !tbaa !7
  %tobool7 = icmp eq i8 %5, 0
  br i1 %tobool7, label %if.then11, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true6
  %call8 = call i64 @strlen(i8* %call4) #5
  %sub = add i64 %call8, -1
  %arrayidx = getelementptr inbounds i8* %call4, i64 %sub
  %6 = load i8* %arrayidx, align 1, !tbaa !7
  %cmp = icmp eq i8 %6, 47
  br i1 %cmp, label %if.end, label %if.then11

if.then11:                                        ; preds = %lor.lhs.false, %land.lhs.true6
  %call12 = call noalias i8* (i8*, ...)* @concat(i8* %call4, i8* getelementptr inbounds ([2 x i8]* @.str75, i64 0, i64 0), i8* null) #5
  store i8* %call12, i8** @cwd, align 8, !tbaa !1
  br label %if.end

if.end:                                           ; preds = %lor.lhs.false, %if.then11
  %7 = phi i8* [ %call12, %if.then11 ], [ %call4, %lor.lhs.false ]
  %tobool13 = icmp eq i8* %7, null
  br i1 %tobool13, label %if.end20, label %if.then14

if.then14:                                        ; preds = %if.then, %if.end
  %8 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %9 = call i64 @fwrite(i8* getelementptr inbounds ([9 x i8]* @.str1, i64 0, i64 0), i64 8, i64 1, %struct._IO_FILE* %8)
  %10 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %11 = load i8** @cwd, align 8, !tbaa !1
  call void @output_quoted_string(%struct._IO_FILE* %10, i8* %11) #5
  %12 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call16 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([9 x i8]* @.str72, i64 0, i64 0), i32 100) #5
  %13 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  call void @assemble_name(%struct._IO_FILE* %13, i8* %0) #5
  %14 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call18 = call i32 @fputc(i32 10, %struct._IO_FILE* %14) #5
  br label %if.end20

if.end20:                                         ; preds = %land.lhs.true, %if.end, %entry, %if.then14
  %15 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %16 = call i64 @fwrite(i8* getelementptr inbounds ([9 x i8]* @.str1, i64 0, i64 0), i64 8, i64 1, %struct._IO_FILE* %15)
  %17 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  call void @output_quoted_string(%struct._IO_FILE* %17, i8* %input_file_name) #5
  %18 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call22 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %18, i8* getelementptr inbounds ([9 x i8]* @.str72, i64 0, i64 0), i32 100) #5
  %19 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  call void @assemble_name(%struct._IO_FILE* %19, i8* %0) #5
  %20 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call24 = call i32 @fputc(i32 10, %struct._IO_FILE* %20) #5
  call void @text_section() #5
  %21 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call26 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %21, i8* getelementptr inbounds ([8 x i8]* @.str61, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8]* @.str71, i64 0, i64 0), i32 0) #5
  %22 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call29 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %22, i8* getelementptr inbounds ([17 x i8]* @.str76, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8]* @.str77, i64 0, i64 0), i32 60) #5
  store i8* %input_file_name, i8** @lastfile, align 8, !tbaa !1
  store i32 1, i32* @next_type_number, align 4, !tbaa !5
  %call30 = call noalias i8* @xmalloc(i64 16) #5
  %23 = bitcast i8* %call30 to %struct.dbx_file*
  store %struct.dbx_file* %23, %struct.dbx_file** @current_file, align 8, !tbaa !1
  %next = bitcast i8* %call30 to %struct.dbx_file**
  store %struct.dbx_file* null, %struct.dbx_file** %next, align 8, !tbaa !8
  %file_number = getelementptr inbounds i8* %call30, i64 8
  %24 = bitcast i8* %file_number to i32*
  store i32 0, i32* %24, align 4, !tbaa !10
  %next_type_number = getelementptr inbounds i8* %call30, i64 12
  %25 = bitcast i8* %next_type_number to i32*
  store i32 1, i32* %25, align 4, !tbaa !11
  store i32 1, i32* @next_file_number, align 4, !tbaa !5
  %26 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %27 = getelementptr inbounds %union.tree_node* %26, i64 0, i32 0, i32 11
  %28 = load %union.tree_node** %27, align 8, !tbaa !12
  %call31 = call i32 @dbxout_symbol(%union.tree_node* %28, i32 undef)
  %29 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 0), align 8, !tbaa !1
  %30 = getelementptr inbounds %union.tree_node* %29, i64 0, i32 0, i32 11
  %31 = load %union.tree_node** %30, align 8, !tbaa !12
  %call34 = call i32 @dbxout_symbol(%union.tree_node* %31, i32 undef)
  call fastcc void @dbxout_typedefs(%union.tree_node* %call)
  call void @llvm.lifetime.end(i64 100, i8* %0) #5
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @dbxout_finish(i8* nocapture readnone %filename) #0 {
entry:
  %0 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  tail call void (%struct._IO_FILE*, i8*, ...)* @asm_fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([45 x i8]* @.str58, i64 0, i64 0), i32 100) #5
  ret void
}

declare void @debug_nothing_int_charstar(i32, i8*) #1

; Function Attrs: nounwind uwtable
define internal void @dbxout_start_source_file(i32 %line, i8* %filename) #0 {
entry:
  %call = tail call noalias i8* @xmalloc(i64 16) #5
  %0 = bitcast i8* %call to %struct.dbx_file*
  %1 = load %struct.dbx_file** @current_file, align 8, !tbaa !1
  %next = bitcast i8* %call to %struct.dbx_file**
  store %struct.dbx_file* %1, %struct.dbx_file** %next, align 8, !tbaa !8
  %2 = load i32* @next_file_number, align 4, !tbaa !5
  %inc = add nsw i32 %2, 1
  store i32 %inc, i32* @next_file_number, align 4, !tbaa !5
  %file_number = getelementptr inbounds i8* %call, i64 8
  %3 = bitcast i8* %file_number to i32*
  store i32 %2, i32* %3, align 4, !tbaa !10
  %next_type_number = getelementptr inbounds i8* %call, i64 12
  %4 = bitcast i8* %next_type_number to i32*
  store i32 1, i32* %4, align 4, !tbaa !11
  store %struct.dbx_file* %0, %struct.dbx_file** @current_file, align 8, !tbaa !1
  %5 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %6 = tail call i64 @fwrite(i8* getelementptr inbounds ([9 x i8]* @.str1, i64 0, i64 0), i64 8, i64 1, %struct._IO_FILE* %5)
  %7 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  tail call void @output_quoted_string(%struct._IO_FILE* %7, i8* %filename) #5
  %8 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([11 x i8]* @.str74, i64 0, i64 0), i32 130) #5
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @dbxout_end_source_file(i32 %line) #0 {
entry:
  %0 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([12 x i8]* @.str73, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str67, i64 0, i64 0), i32 162) #5
  %1 = load %struct.dbx_file** @current_file, align 8, !tbaa !1
  %next1 = getelementptr inbounds %struct.dbx_file* %1, i64 0, i32 0
  %2 = load %struct.dbx_file** %next1, align 8, !tbaa !8
  %3 = bitcast %struct.dbx_file* %1 to i8*
  tail call void @free(i8* %3)
  store %struct.dbx_file* %2, %struct.dbx_file** @current_file, align 8, !tbaa !1
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @dbxout_begin_block(i32 %line, i32 %n) #0 {
entry:
  %0 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([8 x i8]* @.str61, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8]* @.str64, i64 0, i64 0), i32 %n) #5
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @dbxout_end_block(i32 %line, i32 %n) #0 {
entry:
  %0 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([8 x i8]* @.str61, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8]* @.str68, i64 0, i64 0), i32 %n) #5
  ret void
}

declare zeroext i1 @debug_true_tree(%union.tree_node*) #1

; Function Attrs: nounwind uwtable
define internal void @dbxout_source_line(i32 %lineno, i8* %filename) #0 {
entry:
  %ltext_label_name.i = alloca [100 x i8], align 16
  %temp = alloca [256 x i8], align 16
  %0 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %tobool.i = icmp eq i8* %filename, null
  br i1 %tobool.i, label %dbxout_source_file.exit, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %entry
  %1 = load i8** @lastfile, align 8, !tbaa !1
  %cmp.i = icmp eq i8* %1, null
  br i1 %cmp.i, label %if.then.i, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %land.lhs.true.i
  %call.i = call i32 @strcmp(i8* %filename, i8* %1) #5
  %tobool1.i = icmp eq i32 %call.i, 0
  br i1 %tobool1.i, label %dbxout_source_file.exit, label %if.then.i

if.then.i:                                        ; preds = %lor.lhs.false.i, %land.lhs.true.i
  %2 = getelementptr inbounds [100 x i8]* %ltext_label_name.i, i64 0, i64 0
  call void @llvm.lifetime.start(i64 100, i8* %2) #5
  %3 = load i32* @source_label_number, align 4, !tbaa !5
  %call2.i = call i32 (i8*, i8*, ...)* @sprintf(i8* %2, i8* getelementptr inbounds ([7 x i8]* @.str59, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8]* @.str71, i64 0, i64 0), i32 %3) #5
  %4 = call i64 @fwrite(i8* getelementptr inbounds ([9 x i8]* @.str1, i64 0, i64 0), i64 8, i64 1, %struct._IO_FILE* %0) #5
  call void @output_quoted_string(%struct._IO_FILE* %0, i8* %filename) #5
  %5 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call4.i = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([9 x i8]* @.str72, i64 0, i64 0), i32 132) #5
  %6 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  call void @assemble_name(%struct._IO_FILE* %6, i8* %2) #5
  %7 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call6.i = call i32 @fputc(i32 10, %struct._IO_FILE* %7) #5
  %8 = load %union.tree_node** @current_function_decl, align 8, !tbaa !1
  %cmp7.i = icmp eq %union.tree_node* %8, null
  br i1 %cmp7.i, label %if.else.i, label %land.lhs.true8.i

land.lhs.true8.i:                                 ; preds = %if.then.i
  %section_name.i = getelementptr inbounds %union.tree_node* %8, i64 0, i32 0, i32 15
  %9 = load %union.tree_node** %section_name.i, align 8, !tbaa !16
  %cmp9.i = icmp eq %union.tree_node* %9, null
  br i1 %cmp9.i, label %if.else.i, label %do.body11.i

if.else.i:                                        ; preds = %land.lhs.true8.i, %if.then.i
  call void @text_section() #5
  br label %do.body11.i

do.body11.i:                                      ; preds = %if.else.i, %land.lhs.true8.i
  %10 = load i32* @source_label_number, align 4, !tbaa !5
  %call12.i = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([8 x i8]* @.str61, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8]* @.str71, i64 0, i64 0), i32 %10) #5
  %11 = load i32* @source_label_number, align 4, !tbaa !5
  %inc.i = add nsw i32 %11, 1
  store i32 %inc.i, i32* @source_label_number, align 4, !tbaa !5
  store i8* %filename, i8** @lastfile, align 8, !tbaa !1
  call void @llvm.lifetime.end(i64 100, i8* %2) #5
  br label %dbxout_source_file.exit

dbxout_source_file.exit:                          ; preds = %entry, %lor.lhs.false.i, %do.body11.i
  %12 = getelementptr inbounds [256 x i8]* %temp, i64 0, i64 0
  call void @llvm.lifetime.start(i64 256, i8* %12) #5
  %13 = load i32* @dbxout_source_line.sym_lineno, align 4, !tbaa !5
  %call = call i32 (i8*, i8*, ...)* @sprintf(i8* %12, i8* getelementptr inbounds ([7 x i8]* @.str59, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8]* @.str69, i64 0, i64 0), i32 %13) #5
  %14 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call2 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %14, i8* getelementptr inbounds ([17 x i8]* @.str70, i64 0, i64 0), i32 %lineno) #5
  %15 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  call void @assemble_name(%struct._IO_FILE* %15, i8* %12) #5
  %16 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call4 = call i32 @putc(i32 45, %struct._IO_FILE* %16) #5
  %17 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %18 = load %union.tree_node** @current_function_decl, align 8, !tbaa !1
  %rtl = getelementptr inbounds %union.tree_node* %18, i64 0, i32 0, i32 17
  %19 = load %struct.rtx_def** %rtl, align 8, !tbaa !18
  %tobool = icmp eq %struct.rtx_def* %19, null
  br i1 %tobool, label %cond.false, label %cond.end

cond.false:                                       ; preds = %dbxout_source_file.exit
  call void @make_decl_rtl(%union.tree_node* %18, i8* null) #5
  %20 = load %union.tree_node** @current_function_decl, align 8, !tbaa !1
  %rtl8 = getelementptr inbounds %union.tree_node* %20, i64 0, i32 0, i32 17
  %21 = load %struct.rtx_def** %rtl8, align 8, !tbaa !18
  br label %cond.end

cond.end:                                         ; preds = %dbxout_source_file.exit, %cond.false
  %cond = phi %struct.rtx_def* [ %21, %cond.false ], [ %19, %dbxout_source_file.exit ]
  %arrayidx = getelementptr inbounds %struct.rtx_def* %cond, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %22 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %arrayidx10 = getelementptr inbounds %struct.rtx_def* %22, i64 0, i32 1, i64 0
  %rtstr = bitcast %union.rtunion_def* %arrayidx10 to i8**
  %23 = load i8** %rtstr, align 8, !tbaa !1
  call void @assemble_name(%struct._IO_FILE* %17, i8* %23) #5
  %24 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call11 = call i32 @putc(i32 10, %struct._IO_FILE* %24) #5
  %25 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %26 = load i32* @dbxout_source_line.sym_lineno, align 4, !tbaa !5
  %call13 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %25, i8* getelementptr inbounds ([8 x i8]* @.str61, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8]* @.str69, i64 0, i64 0), i32 %26) #5
  %27 = load i32* @dbxout_source_line.sym_lineno, align 4, !tbaa !5
  %add = add nsw i32 %27, 1
  store i32 %add, i32* @dbxout_source_line.sym_lineno, align 4, !tbaa !5
  call void @llvm.lifetime.end(i64 256, i8* %12) #5
  ret void
}

declare void @debug_nothing_int(i32) #1

declare void @debug_nothing_void() #1

; Function Attrs: nounwind uwtable
define internal void @dbxout_begin_function(%union.tree_node* %decl) #0 {
entry:
  %call = tail call i32 @dbxout_symbol(%union.tree_node* %decl, i32 undef)
  %arguments = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 10
  %0 = load %union.tree_node** %arguments, align 8, !tbaa !19
  tail call void @dbxout_parms(%union.tree_node* %0)
  %result = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 11
  %1 = load %union.tree_node** %result, align 8, !tbaa !20
  %name = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 8
  %2 = load %union.tree_node** %name, align 8, !tbaa !21
  %cmp = icmp eq %union.tree_node* %2, null
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %call6 = tail call i32 @dbxout_symbol(%union.tree_node* %1, i32 undef)
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @dbxout_function_decl(%union.tree_node* nocapture readonly %decl) #0 {
entry:
  %lscope_label_name.i = alloca [100 x i8], align 16
  %initial = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 12
  %0 = load %union.tree_node** %initial, align 8, !tbaa !22
  %arguments = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 10
  %1 = load %union.tree_node** %arguments, align 8, !tbaa !19
  call fastcc void @dbxout_block(%union.tree_node* %0, i32 0, %union.tree_node* %1)
  %2 = load i32* @use_gnu_debug_info_extensions, align 4, !tbaa !5
  %tobool = icmp eq i32 %2, 0
  %3 = load i8* getelementptr inbounds (%struct.gcc_target* @targetm, i64 0, i32 13), align 8
  %tobool3 = icmp eq i8 %3, 0
  %or.cond = or i1 %tobool, %tobool3
  br i1 %or.cond, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %4 = getelementptr inbounds [100 x i8]* %lscope_label_name.i, i64 0, i64 0
  call void @llvm.lifetime.start(i64 100, i8* %4) #5
  %5 = load i32* @dbxout_function_end.scope_labelno, align 4, !tbaa !5
  %call.i = call i32 (i8*, i8*, ...)* @sprintf(i8* %4, i8* getelementptr inbounds ([7 x i8]* @.str59, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str60, i64 0, i64 0), i32 %5) #5
  %6 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %7 = load i32* @dbxout_function_end.scope_labelno, align 4, !tbaa !5
  %call2.i = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([8 x i8]* @.str61, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str60, i64 0, i64 0), i32 %7) #5
  %8 = load i32* @dbxout_function_end.scope_labelno, align 4, !tbaa !5
  %inc.i = add nsw i32 %8, 1
  store i32 %inc.i, i32* @dbxout_function_end.scope_labelno, align 4, !tbaa !5
  %9 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call5.i = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %9, i8* getelementptr inbounds ([13 x i8]* @.str62, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1, i64 0, i64 0), i32 36) #5
  %10 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  call void @assemble_name(%struct._IO_FILE* %10, i8* %4) #5
  %11 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call7.i = call i32 @putc(i32 45, %struct._IO_FILE* %11) #5
  %12 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %13 = load %union.tree_node** @current_function_decl, align 8, !tbaa !1
  %rtl.i = getelementptr inbounds %union.tree_node* %13, i64 0, i32 0, i32 17
  %14 = load %struct.rtx_def** %rtl.i, align 8, !tbaa !18
  %tobool.i = icmp eq %struct.rtx_def* %14, null
  br i1 %tobool.i, label %cond.false.i, label %dbxout_function_end.exit

cond.false.i:                                     ; preds = %if.then
  call void @make_decl_rtl(%union.tree_node* %13, i8* null) #5
  %15 = load %union.tree_node** @current_function_decl, align 8, !tbaa !1
  %rtl11.i = getelementptr inbounds %union.tree_node* %15, i64 0, i32 0, i32 17
  %16 = load %struct.rtx_def** %rtl11.i, align 8, !tbaa !18
  br label %dbxout_function_end.exit

dbxout_function_end.exit:                         ; preds = %if.then, %cond.false.i
  %cond.i = phi %struct.rtx_def* [ %16, %cond.false.i ], [ %14, %if.then ]
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %cond.i, i64 0, i32 1, i64 0
  %rtx.i = bitcast %union.rtunion_def* %arrayidx.i to %struct.rtx_def**
  %17 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !1
  %arrayidx13.i = getelementptr inbounds %struct.rtx_def* %17, i64 0, i32 1, i64 0
  %rtstr.i = bitcast %union.rtunion_def* %arrayidx13.i to i8**
  %18 = load i8** %rtstr.i, align 8, !tbaa !1
  call void @assemble_name(%struct._IO_FILE* %12, i8* %18) #5
  %19 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %fputc.i = call i32 @fputc(i32 10, %struct._IO_FILE* %19) #5
  call void @llvm.lifetime.end(i64 100, i8* %4) #5
  br label %if.end

if.end:                                           ; preds = %entry, %dbxout_function_end.exit
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @dbxout_global_decl(%union.tree_node* %decl) #0 {
entry:
  %code = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 34
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %external_flag = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 5
  %0 = bitcast i48* %external_flag to i64*
  %bf.load2 = load i64* %0, align 8
  %bf.cast = and i64 %bf.load2, 256
  %tobool = icmp eq i64 %bf.cast, 0
  br i1 %tobool, label %land.lhs.true4, label %if.end

land.lhs.true4:                                   ; preds = %land.lhs.true
  %rtl = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 17
  %1 = load %struct.rtx_def** %rtl, align 8, !tbaa !18
  %cmp6 = icmp eq %struct.rtx_def* %1, null
  br i1 %cmp6, label %if.end, label %if.then

if.then:                                          ; preds = %land.lhs.true4
  %call = tail call i32 @dbxout_symbol(%union.tree_node* %decl, i32 undef)
  br label %if.end

if.end:                                           ; preds = %land.lhs.true4, %land.lhs.true, %if.then, %entry
  ret void
}

declare void @debug_nothing_tree(%union.tree_node*) #1

declare void @debug_nothing_rtx(%struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define i32 @dbxout_symbol(%union.tree_node* %decl, i32 %local) #0 {
entry:
  %type1 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 1
  %0 = load %union.tree_node** %type1, align 8, !tbaa !23
  store i32 0, i32* @current_sym_code, align 4, !tbaa !7
  store i32 0, i32* @current_sym_value, align 4, !tbaa !5
  store %struct.rtx_def* null, %struct.rtx_def** @current_sym_addr, align 8, !tbaa !1
  %name = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 8
  %1 = load %union.tree_node** %name, align 8, !tbaa !21
  %cmp = icmp eq %union.tree_node* %1, null
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false

land.lhs.true:                                    ; preds = %entry
  %code = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp4 = icmp eq i32 %bf.clear, 33
  br i1 %cmp4, label %lor.lhs.false, label %return

lor.lhs.false:                                    ; preds = %land.lhs.true, %entry
  %ignored_flag = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 5
  %2 = bitcast i48* %ignored_flag to i64*
  %bf.load6 = load i64* %2, align 8
  %bf.cast = and i64 %bf.load6, 16384
  %tobool = icmp eq i64 %bf.cast, 0
  br i1 %tobool, label %if.end, label %return

if.end:                                           ; preds = %lor.lhs.false
  br i1 %cmp, label %if.end14, label %if.then11

if.then11:                                        ; preds = %if.end
  %id = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 1
  %len = bitcast i8** %id to i32*
  %3 = load i32* %len, align 4, !tbaa !24
  %add = add i32 %3, 2
  store i32 %add, i32* @current_sym_nchars, align 4, !tbaa !5
  br label %if.end14

if.end14:                                         ; preds = %if.end, %if.then11
  %code16 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 2
  %bf.load17 = load i32* %code16, align 8
  %bf.clear18 = and i32 %bf.load17, 255
  switch i32 %bf.clear18, label %return [
    i32 34, label %sw.bb335
    i32 30, label %sw.bb
    i32 33, label %sw.bb127
    i32 35, label %sw.bb334
    i32 36, label %sw.bb335
  ]

sw.bb:                                            ; preds = %if.end14
  %rtl = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 17
  %4 = load %struct.rtx_def** %rtl, align 8, !tbaa !18
  %tobool20 = icmp eq %struct.rtx_def* %4, null
  br i1 %tobool20, label %cond.end, label %if.end27

cond.end:                                         ; preds = %sw.bb
  tail call void @make_decl_rtl(%union.tree_node* %decl, i8* null) #5
  %5 = load %struct.rtx_def** %rtl, align 8, !tbaa !18
  %cmp25 = icmp eq %struct.rtx_def* %5, null
  br i1 %cmp25, label %return, label %cond.end.if.end27_crit_edge

cond.end.if.end27_crit_edge:                      ; preds = %cond.end
  %bf.load29.pre = load i64* %2, align 8
  br label %if.end27

if.end27:                                         ; preds = %cond.end.if.end27_crit_edge, %sw.bb
  %bf.load29 = phi i64 [ %bf.load29.pre, %cond.end.if.end27_crit_edge ], [ %bf.load6, %sw.bb ]
  %bf.cast32 = and i64 %bf.load29, 256
  %tobool33 = icmp eq i64 %bf.cast32, 0
  br i1 %tobool33, label %if.end35, label %return

if.end35:                                         ; preds = %if.end27
  %call = tail call %union.tree_node* @decl_function_context(%union.tree_node* %decl) #5
  %6 = load %union.tree_node** @current_function_decl, align 8, !tbaa !1
  %cmp36 = icmp eq %union.tree_node* %call, %6
  br i1 %cmp36, label %return, label %if.end38

if.end38:                                         ; preds = %if.end35
  %7 = load %struct.rtx_def** %rtl, align 8, !tbaa !18
  %tobool41 = icmp eq %struct.rtx_def* %7, null
  br i1 %tobool41, label %cond.false45, label %cond.end48

cond.false45:                                     ; preds = %if.end38
  tail call void @make_decl_rtl(%union.tree_node* %decl, i8* null) #5
  %8 = load %struct.rtx_def** %rtl, align 8, !tbaa !18
  br label %cond.end48

cond.end48:                                       ; preds = %if.end38, %cond.false45
  %9 = phi %struct.rtx_def* [ %8, %cond.false45 ], [ %7, %if.end38 ]
  %10 = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 0
  %bf.load50 = load i32* %10, align 8
  %bf.clear51 = and i32 %bf.load50, 65535
  %cmp52 = icmp eq i32 %bf.clear51, 66
  br i1 %cmp52, label %lor.lhs.false53, label %return

lor.lhs.false53:                                  ; preds = %cond.end48
  %tobool56 = icmp eq %struct.rtx_def* %9, null
  br i1 %tobool56, label %cond.false60, label %cond.end63

cond.false60:                                     ; preds = %lor.lhs.false53
  tail call void @make_decl_rtl(%union.tree_node* %decl, i8* null) #5
  %11 = load %struct.rtx_def** %rtl, align 8, !tbaa !18
  br label %cond.end63

cond.end63:                                       ; preds = %lor.lhs.false53, %cond.false60
  %cond64 = phi %struct.rtx_def* [ %11, %cond.false60 ], [ %9, %lor.lhs.false53 ]
  %arrayidx = getelementptr inbounds %struct.rtx_def* %cond64, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %12 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %13 = getelementptr inbounds %struct.rtx_def* %12, i64 0, i32 0
  %bf.load65 = load i32* %13, align 8
  %bf.clear66 = and i32 %bf.load65, 65535
  %cmp67 = icmp eq i32 %bf.clear66, 68
  br i1 %cmp67, label %if.end69, label %return

if.end69:                                         ; preds = %cond.end63
  %14 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %assembler_name = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 14
  %15 = load %union.tree_node** %assembler_name, align 8, !tbaa !27
  %cmp71 = icmp eq %union.tree_node* %15, null
  br i1 %cmp71, label %cond.false73, label %cond.end74

cond.false73:                                     ; preds = %if.end69
  %16 = load void (%union.tree_node*)** @lang_set_decl_assembler_name, align 8, !tbaa !1
  tail call void %16(%union.tree_node* %decl) #5
  %.pre = load %union.tree_node** %assembler_name, align 8, !tbaa !27
  br label %cond.end74

cond.end74:                                       ; preds = %if.end69, %cond.false73
  %17 = phi %union.tree_node* [ %15, %if.end69 ], [ %.pre, %cond.false73 ]
  %id78 = getelementptr inbounds %union.tree_node* %17, i64 0, i32 0, i32 1
  %18 = getelementptr inbounds i8** %id78, i64 1
  %19 = load i8** %18, align 8, !tbaa !28
  %bf.load80 = load i32* %code16, align 8
  %bf.clear82 = lshr i32 %bf.load80, 14
  %20 = and i32 %bf.clear82, 32
  %21 = xor i32 %20, 102
  %call85 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %14, i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1, i64 0, i64 0), i8* %19, i32 %21) #5
  store i32 36, i32* @current_sym_code, align 4, !tbaa !7
  %22 = load %struct.rtx_def** %rtl, align 8, !tbaa !18
  %tobool88 = icmp eq %struct.rtx_def* %22, null
  br i1 %tobool88, label %cond.false92, label %cond.end95

cond.false92:                                     ; preds = %cond.end74
  tail call void @make_decl_rtl(%union.tree_node* %decl, i8* null) #5
  %23 = load %struct.rtx_def** %rtl, align 8, !tbaa !18
  br label %cond.end95

cond.end95:                                       ; preds = %cond.end74, %cond.false92
  %cond96 = phi %struct.rtx_def* [ %23, %cond.false92 ], [ %22, %cond.end74 ]
  %arrayidx98 = getelementptr inbounds %struct.rtx_def* %cond96, i64 0, i32 1, i64 0
  %rtx99 = bitcast %union.rtunion_def* %arrayidx98 to %struct.rtx_def**
  %24 = load %struct.rtx_def** %rtx99, align 8, !tbaa !1
  store %struct.rtx_def* %24, %struct.rtx_def** @current_sym_addr, align 8, !tbaa !1
  %type101 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 1
  %25 = load %union.tree_node** %type101, align 8, !tbaa !23
  %tobool102 = icmp eq %union.tree_node* %25, null
  br i1 %tobool102, label %if.else, label %if.then103

if.then103:                                       ; preds = %cond.end95
  tail call fastcc void @dbxout_type(%union.tree_node* %25, i32 0)
  br label %if.end106

if.else:                                          ; preds = %cond.end95
  %26 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 27), align 8, !tbaa !1
  tail call fastcc void @dbxout_type(%union.tree_node* %26, i32 0)
  br label %if.end106

if.end106:                                        ; preds = %if.else, %if.then103
  %cmp107 = icmp eq %union.tree_node* %call, null
  br i1 %cmp107, label %if.end126, label %if.then108

if.then108:                                       ; preds = %if.end106
  %27 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %28 = load %union.tree_node** %assembler_name, align 8, !tbaa !27
  %cmp111 = icmp eq %union.tree_node* %28, null
  br i1 %cmp111, label %cond.false113, label %cond.end114

cond.false113:                                    ; preds = %if.then108
  %29 = load void (%union.tree_node*)** @lang_set_decl_assembler_name, align 8, !tbaa !1
  tail call void %29(%union.tree_node* %decl) #5
  %.pre614 = load %union.tree_node** %assembler_name, align 8, !tbaa !27
  br label %cond.end114

cond.end114:                                      ; preds = %if.then108, %cond.false113
  %30 = phi %union.tree_node* [ %28, %if.then108 ], [ %.pre614, %cond.false113 ]
  %id118 = getelementptr inbounds %union.tree_node* %30, i64 0, i32 0, i32 1
  %31 = getelementptr inbounds i8** %id118, i64 1
  %32 = load i8** %31, align 8, !tbaa !28
  %name121 = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 8
  %33 = load %union.tree_node** %name121, align 8, !tbaa !21
  %id123 = getelementptr inbounds %union.tree_node* %33, i64 0, i32 0, i32 1
  %34 = getelementptr inbounds i8** %id123, i64 1
  %35 = load i8** %34, align 8, !tbaa !28
  %call125 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %27, i8* getelementptr inbounds ([7 x i8]* @.str2, i64 0, i64 0), i8* %32, i8* %35) #5
  br label %if.end126

if.end126:                                        ; preds = %if.end106, %cond.end114
  %36 = load i32* @use_gnu_debug_info_extensions, align 4, !tbaa !5
  %tobool.i = icmp ne i32 %36, 0
  %cmp.i = icmp ne %union.tree_node* %decl, null
  %or.cond.i = and i1 %tobool.i, %cmp.i
  br i1 %or.cond.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %if.end126
  %linenum.i = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 2
  %37 = load i32* %linenum.i, align 4, !tbaa !29
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %if.end126
  %line.0.i = phi i32 [ %37, %if.then.i ], [ 0, %if.end126 ]
  %38 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %39 = load i32* @current_sym_code, align 4, !tbaa !7
  %call.i = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %38, i8* getelementptr inbounds ([11 x i8]* @.str13, i64 0, i64 0), i32 %39, i32 %line.0.i) #5
  %40 = load %struct.rtx_def** @current_sym_addr, align 8, !tbaa !1
  %tobool1.i = icmp eq %struct.rtx_def* %40, null
  %41 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  br i1 %tobool1.i, label %if.else.i, label %if.then2.i

if.then2.i:                                       ; preds = %if.end.i
  tail call void @output_addr_const(%struct._IO_FILE* %41, %struct.rtx_def* %40) #5
  br label %dbxout_finish_symbol.exit

if.else.i:                                        ; preds = %if.end.i
  %42 = load i32* @current_sym_value, align 4, !tbaa !5
  %call3.i = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %41, i8* getelementptr inbounds ([3 x i8]* @.str14, i64 0, i64 0), i32 %42) #5
  br label %dbxout_finish_symbol.exit

dbxout_finish_symbol.exit:                        ; preds = %if.then2.i, %if.else.i
  %43 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call5.i = tail call i32 @putc(i32 10, %struct._IO_FILE* %43) #5
  br label %return

sw.bb127:                                         ; preds = %if.end14
  %bf.clear131 = and i32 %bf.load17, 16384
  %tobool132 = icmp eq i32 %bf.clear131, 0
  %bf.cast139 = and i64 %bf.load6, 256
  %tobool140 = icmp eq i64 %bf.cast139, 0
  %or.cond615 = and i1 %tobool132, %tobool140
  br i1 %or.cond615, label %if.end142, label %return

if.end142:                                        ; preds = %sw.bb127
  br i1 %cmp, label %land.lhs.true266, label %if.then146

if.then146:                                       ; preds = %if.end142
  %code148 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2
  %bf.load149 = load i32* %code148, align 8
  %bf.clear150 = and i32 %bf.load149, 255
  %bf.clear150.off = add i32 %bf.clear150, -20
  %switch = icmp ult i32 %bf.clear150.off, 3
  br i1 %switch, label %land.lhs.true164, label %if.end213

land.lhs.true164:                                 ; preds = %if.then146
  %44 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 11
  %45 = load %union.tree_node** %44, align 8, !tbaa !12
  %cmp167 = icmp eq %union.tree_node* %45, %decl
  br i1 %cmp167, label %land.lhs.true168, label %if.end213

land.lhs.true168:                                 ; preds = %land.lhs.true164
  %46 = load i32* @use_gnu_debug_info_extensions, align 4, !tbaa !5
  %tobool169 = icmp ne i32 %46, 0
  %.b559 = load i1* @have_used_extensions, align 1
  %or.cond = and i1 %tobool169, %.b559
  %bf.cast186 = and i64 %bf.load6, 4194304
  %tobool187 = icmp eq i64 %bf.cast186, 0
  %or.cond616 = or i1 %or.cond, %tobool187
  br i1 %or.cond616, label %if.end213, label %land.lhs.true188

land.lhs.true188:                                 ; preds = %land.lhs.true168
  %size = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 2
  %47 = bitcast i32* %size to %union.tree_node**
  %48 = load %union.tree_node** %47, align 8, !tbaa !30
  %call190 = tail call i32 @host_integerp(%union.tree_node* %48, i32 1) #5
  %tobool191 = icmp eq i32 %call190, 0
  br i1 %tobool191, label %if.end213, label %if.then192

if.then192:                                       ; preds = %land.lhs.true188
  %49 = load %union.tree_node** %44, align 8, !tbaa !12
  %code197 = getelementptr inbounds %union.tree_node* %49, i64 0, i32 0, i32 0, i32 2
  %bf.load198 = load i32* %code197, align 8
  %bf.clear199 = and i32 %bf.load198, 255
  %cmp200 = icmp eq i32 %bf.clear199, 33
  br i1 %cmp200, label %if.then201, label %if.end204

if.then201:                                       ; preds = %if.then192
  %name203 = getelementptr inbounds %union.tree_node* %49, i64 0, i32 0, i32 8
  %50 = load %union.tree_node** %name203, align 8, !tbaa !21
  br label %if.end204

if.end204:                                        ; preds = %if.then201, %if.then192
  %name193.0 = phi %union.tree_node* [ %50, %if.then201 ], [ %49, %if.then192 ]
  store i32 128, i32* @current_sym_code, align 4, !tbaa !7
  store i32 0, i32* @current_sym_value, align 4, !tbaa !5
  store %struct.rtx_def* null, %struct.rtx_def** @current_sym_addr, align 8, !tbaa !1
  %id206 = getelementptr inbounds %union.tree_node* %name193.0, i64 0, i32 0, i32 1
  %len207 = bitcast i8** %id206 to i32*
  %51 = load i32* %len207, align 4, !tbaa !24
  %add208 = add i32 %51, 2
  store i32 %add208, i32* @current_sym_nchars, align 4, !tbaa !5
  %52 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %53 = getelementptr inbounds i8** %id206, i64 1
  %54 = load i8** %53, align 8, !tbaa !28
  %call212 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %52, i8* getelementptr inbounds ([8 x i8]* @.str3, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1, i64 0, i64 0), i8* %54) #5
  tail call fastcc void @dbxout_type(%union.tree_node* %0, i32 1)
  %55 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %56 = load i32* @current_sym_code, align 4, !tbaa !7
  %call.i564 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %55, i8* getelementptr inbounds ([11 x i8]* @.str13, i64 0, i64 0), i32 %56, i32 0) #5
  %57 = load %struct.rtx_def** @current_sym_addr, align 8, !tbaa !1
  %tobool1.i565 = icmp eq %struct.rtx_def* %57, null
  %58 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  br i1 %tobool1.i565, label %if.else.i569, label %if.then2.i567

if.then2.i567:                                    ; preds = %if.end204
  tail call void @output_addr_const(%struct._IO_FILE* %58, %struct.rtx_def* %57) #5
  br label %dbxout_finish_symbol.exit571

if.else.i569:                                     ; preds = %if.end204
  %59 = load i32* @current_sym_value, align 4, !tbaa !5
  %call3.i568 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %58, i8* getelementptr inbounds ([3 x i8]* @.str14, i64 0, i64 0), i32 %59) #5
  br label %dbxout_finish_symbol.exit571

dbxout_finish_symbol.exit571:                     ; preds = %if.then2.i567, %if.else.i569
  %60 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call5.i570 = tail call i32 @putc(i32 10, %struct._IO_FILE* %60) #5
  br label %if.end213

if.end213:                                        ; preds = %if.then146, %land.lhs.true188, %land.lhs.true168, %dbxout_finish_symbol.exit571, %land.lhs.true164
  %61 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %62 = load %union.tree_node** %name, align 8, !tbaa !21
  %id217 = getelementptr inbounds %union.tree_node* %62, i64 0, i32 0, i32 1
  %63 = getelementptr inbounds i8** %id217, i64 1
  %64 = load i8** %63, align 8, !tbaa !28
  %call219 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %61, i8* getelementptr inbounds ([7 x i8]* @.str4, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1, i64 0, i64 0), i8* %64) #5
  %bf.load222 = load i32* %code148, align 8
  %bf.clear223 = and i32 %bf.load222, 255
  %bf.clear223.off = add i32 %bf.clear223, -20
  %switch561 = icmp ult i32 %bf.clear223.off, 3
  br i1 %switch561, label %land.lhs.true237, label %if.end262

land.lhs.true237:                                 ; preds = %if.end213
  %65 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 11
  %66 = load %union.tree_node** %65, align 8, !tbaa !12
  %cmp240 = icmp eq %union.tree_node* %66, %decl
  br i1 %cmp240, label %land.lhs.true241, label %if.end262

land.lhs.true241:                                 ; preds = %land.lhs.true237
  %bf.load244 = load i64* %2, align 8
  %bf.cast247 = and i64 %bf.load244, 4194304
  %tobool248 = icmp eq i64 %bf.cast247, 0
  br i1 %tobool248, label %if.end262, label %if.then249

if.then249:                                       ; preds = %land.lhs.true241
  %67 = load i32* @use_gnu_debug_info_extensions, align 4, !tbaa !5
  %tobool250 = icmp ne i32 %67, 0
  %.b = load i1* @have_used_extensions, align 1
  %or.cond463 = and i1 %tobool250, %.b
  br i1 %or.cond463, label %if.then253, label %if.end262

if.then253:                                       ; preds = %if.then249
  %68 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call254 = tail call i32 @putc(i32 84, %struct._IO_FILE* %68) #5
  %69 = load %union.tree_node** %65, align 8, !tbaa !12
  %asm_written_flag258 = getelementptr inbounds %union.tree_node* %69, i64 0, i32 0, i32 0, i32 2
  %bf.load259 = load i32* %asm_written_flag258, align 8
  %bf.set = or i32 %bf.load259, 16384
  store i32 %bf.set, i32* %asm_written_flag258, align 8
  br label %if.end262

if.end262:                                        ; preds = %if.end213, %land.lhs.true241, %if.then249, %if.then253, %land.lhs.true237
  %70 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call263 = tail call i32 @putc(i32 116, %struct._IO_FILE* %70) #5
  store i32 128, i32* @current_sym_code, align 4, !tbaa !7
  tail call fastcc void @dbxout_type(%union.tree_node* %0, i32 1)
  %71 = load i32* @use_gnu_debug_info_extensions, align 4, !tbaa !5
  %tobool.i572 = icmp ne i32 %71, 0
  %cmp.i573 = icmp ne %union.tree_node* %decl, null
  %or.cond.i574 = and i1 %tobool.i572, %cmp.i573
  br i1 %or.cond.i574, label %if.then.i576, label %if.end.i580

if.then.i576:                                     ; preds = %if.end262
  %linenum.i575 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 2
  %72 = load i32* %linenum.i575, align 4, !tbaa !29
  br label %if.end.i580

if.end.i580:                                      ; preds = %if.then.i576, %if.end262
  %line.0.i577 = phi i32 [ %72, %if.then.i576 ], [ 0, %if.end262 ]
  %73 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %74 = load i32* @current_sym_code, align 4, !tbaa !7
  %call.i578 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %73, i8* getelementptr inbounds ([11 x i8]* @.str13, i64 0, i64 0), i32 %74, i32 %line.0.i577) #5
  %75 = load %struct.rtx_def** @current_sym_addr, align 8, !tbaa !1
  %tobool1.i579 = icmp eq %struct.rtx_def* %75, null
  %76 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  br i1 %tobool1.i579, label %if.else.i583, label %if.then2.i581

if.then2.i581:                                    ; preds = %if.end.i580
  tail call void @output_addr_const(%struct._IO_FILE* %76, %struct.rtx_def* %75) #5
  br label %if.end264

if.else.i583:                                     ; preds = %if.end.i580
  %77 = load i32* @current_sym_value, align 4, !tbaa !5
  %call3.i582 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %76, i8* getelementptr inbounds ([3 x i8]* @.str14, i64 0, i64 0), i32 %77) #5
  br label %if.end264

if.end264:                                        ; preds = %if.else.i583, %if.then2.i581
  %78 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call5.i584 = tail call i32 @putc(i32 10, %struct._IO_FILE* %78) #5
  br label %if.end328

land.lhs.true266:                                 ; preds = %if.end142
  %79 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 11
  %80 = load %union.tree_node** %79, align 8, !tbaa !12
  %cmp269 = icmp eq %union.tree_node* %80, null
  br i1 %cmp269, label %land.lhs.true320, label %land.lhs.true270

land.lhs.true270:                                 ; preds = %land.lhs.true266
  %code274 = getelementptr inbounds %union.tree_node* %80, i64 0, i32 0, i32 0, i32 2
  %bf.load275 = load i32* %code274, align 8
  %bf.clear276 = and i32 %bf.load275, 255
  %cmp277 = icmp eq i32 %bf.clear276, 1
  br i1 %cmp277, label %land.lhs.true284, label %lor.lhs.false278

lor.lhs.false278:                                 ; preds = %land.lhs.true270
  %name282 = getelementptr inbounds %union.tree_node* %80, i64 0, i32 0, i32 8
  %81 = load %union.tree_node** %name282, align 8, !tbaa !21
  %cmp283 = icmp eq %union.tree_node* %81, null
  br i1 %cmp283, label %land.lhs.true320, label %land.lhs.true284

land.lhs.true284:                                 ; preds = %lor.lhs.false278, %land.lhs.true270
  %size286 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 2
  %82 = bitcast i32* %size286 to %union.tree_node**
  %83 = load %union.tree_node** %82, align 8, !tbaa !30
  %cmp287 = icmp ne %union.tree_node* %83, null
  %bf.clear295 = and i32 %bf.load275, 16384
  %tobool296 = icmp eq i32 %bf.clear295, 0
  %or.cond617 = and i1 %cmp287, %tobool296
  br i1 %or.cond617, label %if.then297, label %land.lhs.true320

if.then297:                                       ; preds = %land.lhs.true284
  %cmp305 = icmp eq i32 %bf.clear276, 33
  br i1 %cmp305, label %if.then306, label %if.end309

if.then306:                                       ; preds = %if.then297
  %name308 = getelementptr inbounds %union.tree_node* %80, i64 0, i32 0, i32 8
  %84 = load %union.tree_node** %name308, align 8, !tbaa !21
  br label %if.end309

if.end309:                                        ; preds = %if.then306, %if.then297
  %name298.0 = phi %union.tree_node* [ %84, %if.then306 ], [ %80, %if.then297 ]
  store i32 128, i32* @current_sym_code, align 4, !tbaa !7
  store i32 0, i32* @current_sym_value, align 4, !tbaa !5
  store %struct.rtx_def* null, %struct.rtx_def** @current_sym_addr, align 8, !tbaa !1
  %id311 = getelementptr inbounds %union.tree_node* %name298.0, i64 0, i32 0, i32 1
  %len312 = bitcast i8** %id311 to i32*
  %85 = load i32* %len312, align 4, !tbaa !24
  %add313 = add i32 %85, 2
  store i32 %add313, i32* @current_sym_nchars, align 4, !tbaa !5
  %86 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %87 = getelementptr inbounds i8** %id311, i64 1
  %88 = load i8** %87, align 8, !tbaa !28
  %call317 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %86, i8* getelementptr inbounds ([8 x i8]* @.str3, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1, i64 0, i64 0), i8* %88) #5
  tail call fastcc void @dbxout_type(%union.tree_node* %0, i32 1)
  %89 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %90 = load i32* @current_sym_code, align 4, !tbaa !7
  %call.i588 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %89, i8* getelementptr inbounds ([11 x i8]* @.str13, i64 0, i64 0), i32 %90, i32 0) #5
  %91 = load %struct.rtx_def** @current_sym_addr, align 8, !tbaa !1
  %tobool1.i589 = icmp eq %struct.rtx_def* %91, null
  %92 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  br i1 %tobool1.i589, label %if.else.i593, label %if.then2.i591

if.then2.i591:                                    ; preds = %if.end309
  tail call void @output_addr_const(%struct._IO_FILE* %92, %struct.rtx_def* %91) #5
  br label %dbxout_finish_symbol.exit595

if.else.i593:                                     ; preds = %if.end309
  %93 = load i32* @current_sym_value, align 4, !tbaa !5
  %call3.i592 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %92, i8* getelementptr inbounds ([3 x i8]* @.str14, i64 0, i64 0), i32 %93) #5
  br label %dbxout_finish_symbol.exit595

dbxout_finish_symbol.exit595:                     ; preds = %if.then2.i591, %if.else.i593
  %94 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call5.i594 = tail call i32 @putc(i32 10, %struct._IO_FILE* %94) #5
  br label %if.end328

land.lhs.true320:                                 ; preds = %land.lhs.true284, %lor.lhs.false278, %land.lhs.true266
  %code322 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2
  %bf.load323 = load i32* %code322, align 8
  %bf.clear324 = and i32 %bf.load323, 255
  %cmp325 = icmp eq i32 %bf.clear324, 10
  br i1 %cmp325, label %if.then326, label %if.end328

if.then326:                                       ; preds = %land.lhs.true320
  store i32 128, i32* @current_sym_code, align 4, !tbaa !7
  store i32 0, i32* @current_sym_value, align 4, !tbaa !5
  store %struct.rtx_def* null, %struct.rtx_def** @current_sym_addr, align 8, !tbaa !1
  store i32 2, i32* @current_sym_nchars, align 4, !tbaa !5
  %95 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call327 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %95, i8* getelementptr inbounds ([7 x i8]* @.str5, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1, i64 0, i64 0)) #5
  tail call fastcc void @dbxout_type(%union.tree_node* %0, i32 1)
  %96 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %97 = load i32* @current_sym_code, align 4, !tbaa !7
  %call.i598 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %96, i8* getelementptr inbounds ([11 x i8]* @.str13, i64 0, i64 0), i32 %97, i32 0) #5
  %98 = load %struct.rtx_def** @current_sym_addr, align 8, !tbaa !1
  %tobool1.i599 = icmp eq %struct.rtx_def* %98, null
  %99 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  br i1 %tobool1.i599, label %if.else.i603, label %if.then2.i601

if.then2.i601:                                    ; preds = %if.then326
  tail call void @output_addr_const(%struct._IO_FILE* %99, %struct.rtx_def* %98) #5
  br label %dbxout_finish_symbol.exit605

if.else.i603:                                     ; preds = %if.then326
  %100 = load i32* @current_sym_value, align 4, !tbaa !5
  %call3.i602 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %99, i8* getelementptr inbounds ([3 x i8]* @.str14, i64 0, i64 0), i32 %100) #5
  br label %dbxout_finish_symbol.exit605

dbxout_finish_symbol.exit605:                     ; preds = %if.then2.i601, %if.else.i603
  %101 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call5.i604 = tail call i32 @putc(i32 10, %struct._IO_FILE* %101) #5
  br label %if.end328

if.end328:                                        ; preds = %if.end264, %dbxout_finish_symbol.exit595, %dbxout_finish_symbol.exit605, %land.lhs.true320
  %bf.load331 = load i32* %code16, align 8
  %bf.set333 = or i32 %bf.load331, 16384
  store i32 %bf.set333, i32* %code16, align 8
  br label %return

sw.bb334:                                         ; preds = %if.end14
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str6, i64 0, i64 0), i32 2058, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.dbxout_symbol, i64 0, i64 0)) #6
  unreachable

sw.bb335:                                         ; preds = %if.end14, %if.end14
  %rtl337 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 17
  %102 = load %struct.rtx_def** %rtl337, align 8, !tbaa !18
  %cmp338 = icmp ne %struct.rtx_def* %102, null
  %bf.cast346 = and i64 %bf.load6, 256
  %tobool347 = icmp eq i64 %bf.cast346, 0
  %or.cond618 = and i1 %cmp338, %tobool347
  br i1 %or.cond618, label %if.end349, label %return

if.end349:                                        ; preds = %sw.bb335
  %103 = and i32 %bf.load17, 266240
  %104 = icmp eq i32 %103, 266240
  br i1 %104, label %land.lhs.true361, label %if.end436

land.lhs.true361:                                 ; preds = %if.end349
  %initial = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 12
  %105 = load %union.tree_node** %initial, align 8, !tbaa !22
  %cmp363 = icmp eq %union.tree_node* %105, null
  br i1 %cmp363, label %if.end436, label %land.lhs.true364

land.lhs.true364:                                 ; preds = %land.lhs.true361
  %call367 = tail call i32 @host_integerp(%union.tree_node* %105, i32 0) #5
  %tobool368 = icmp eq i32 %call367, 0
  br i1 %tobool368, label %if.end436, label %land.lhs.true369

land.lhs.true369:                                 ; preds = %land.lhs.true364
  %bf.load372 = load i32* %code16, align 8
  %bf.clear374 = and i32 %bf.load372, 16384
  %tobool375 = icmp eq i32 %bf.clear374, 0
  br i1 %tobool375, label %land.lhs.true376, label %if.end436

land.lhs.true376:                                 ; preds = %land.lhs.true369
  %context378 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 9
  %106 = load %union.tree_node** %context378, align 8, !tbaa !31
  %cmp379 = icmp eq %union.tree_node* %106, null
  br i1 %cmp379, label %if.then388, label %lor.lhs.false380

lor.lhs.false380:                                 ; preds = %land.lhs.true376
  %code384 = getelementptr inbounds %union.tree_node* %106, i64 0, i32 0, i32 0, i32 2
  %bf.load385 = load i32* %code384, align 8
  %bf.clear386 = and i32 %bf.load385, 255
  %cmp387 = icmp eq i32 %bf.clear386, 4
  %bf.clear393 = and i32 %bf.load372, 524288
  %cmp394 = icmp eq i32 %bf.clear393, 0
  %or.cond619 = and i1 %cmp387, %cmp394
  br i1 %or.cond619, label %if.then395, label %if.end436

if.then388:                                       ; preds = %land.lhs.true376
  %.old = and i32 %bf.load372, 524288
  %cmp394.old = icmp eq i32 %.old, 0
  br i1 %cmp394.old, label %if.then395, label %if.end436

if.then395:                                       ; preds = %lor.lhs.false380, %if.then388
  %107 = load %union.tree_node** %name, align 8, !tbaa !21
  %id400 = getelementptr inbounds %union.tree_node* %107, i64 0, i32 0, i32 1
  %108 = getelementptr inbounds i8** %id400, i64 1
  %109 = load i8** %108, align 8, !tbaa !28
  %110 = load %union.tree_node** %type1, align 8, !tbaa !23
  %code405 = getelementptr inbounds %union.tree_node* %110, i64 0, i32 0, i32 0, i32 2
  %bf.load406 = load i32* %code405, align 8
  %bf.clear407 = and i32 %bf.load406, 255
  switch i32 %bf.clear407, label %return [
    i32 6, label %if.then417
    i32 10, label %if.then417
  ]

if.then417:                                       ; preds = %if.then395, %if.then395
  %111 = load %union.tree_node** %initial, align 8, !tbaa !22
  %call420 = tail call i64 @tree_low_cst(%union.tree_node* %111, i32 0) #5
  %112 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call421 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %112, i8* getelementptr inbounds ([10 x i8]* @.str7, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1, i64 0, i64 0), i8* %109) #5
  %113 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call422 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %113, i8* getelementptr inbounds ([5 x i8]* @.str8, i64 0, i64 0), i64 %call420) #5
  %114 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call423 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %114, i8* getelementptr inbounds ([14 x i8]* @.str9, i64 0, i64 0), i32 128) #5
  br label %return

if.end436:                                        ; preds = %if.end349, %land.lhs.true369, %land.lhs.true364, %land.lhs.true361, %if.then388, %lor.lhs.false380
  %115 = load %struct.rtx_def** %rtl337, align 8, !tbaa !18
  %tobool439 = icmp eq %struct.rtx_def* %115, null
  br i1 %tobool439, label %cond.false443, label %cond.end446

cond.false443:                                    ; preds = %if.end436
  tail call void @make_decl_rtl(%union.tree_node* %decl, i8* null) #5
  %116 = load %struct.rtx_def** %rtl337, align 8, !tbaa !18
  br label %cond.end446

cond.end446:                                      ; preds = %if.end436, %cond.false443
  %cond447 = phi %struct.rtx_def* [ %116, %cond.false443 ], [ %115, %if.end436 ]
  %call448 = tail call %struct.rtx_def* @eliminate_regs(%struct.rtx_def* %cond447, i32 0, %struct.rtx_def* null) #5
  store %struct.rtx_def* %call448, %struct.rtx_def** %rtl337, align 8, !tbaa !18
  %tobool453 = icmp eq %struct.rtx_def* %call448, null
  br i1 %tobool453, label %cond.false457, label %cond.end460

cond.false457:                                    ; preds = %cond.end446
  tail call void @make_decl_rtl(%union.tree_node* %decl, i8* null) #5
  %117 = load %struct.rtx_def** %rtl337, align 8, !tbaa !18
  br label %cond.end460

cond.end460:                                      ; preds = %cond.end446, %cond.false457
  %cond461 = phi %struct.rtx_def* [ %117, %cond.false457 ], [ %call448, %cond.end446 ]
  %call462 = tail call fastcc i32 @dbxout_symbol_location(%union.tree_node* %decl, %union.tree_node* %0, i8* null, %struct.rtx_def* %cond461)
  br label %return

return:                                           ; preds = %sw.bb335, %dbxout_finish_symbol.exit, %if.end328, %cond.end460, %if.end35, %if.end14, %if.end27, %cond.end48, %cond.end63, %if.then395, %sw.bb127, %cond.end, %lor.lhs.false, %land.lhs.true, %if.then417
  %retval.0 = phi i32 [ 1, %if.then417 ], [ 0, %land.lhs.true ], [ 0, %lor.lhs.false ], [ 0, %cond.end ], [ 0, %sw.bb127 ], [ 0, %sw.bb335 ], [ 0, %if.end14 ], [ 1, %if.end328 ], [ 0, %if.end27 ], [ 0, %if.end35 ], [ 0, %cond.end48 ], [ 0, %cond.end63 ], [ 1, %dbxout_finish_symbol.exit ], [ %call462, %cond.end460 ], [ 0, %if.then395 ]
  ret i32 %retval.0
}

declare void @make_decl_rtl(%union.tree_node*, i8*) #1

declare %union.tree_node* @decl_function_context(%union.tree_node*) #1

; Function Attrs: nounwind
declare i32 @fprintf(%struct._IO_FILE* nocapture, i8* nocapture readonly, ...) #2

; Function Attrs: nounwind uwtable
define internal fastcc void @dbxout_type(%union.tree_node* %type, i32 %full) #0 {
entry:
  %formatted_type_identifier_length.i = alloca [16 x i8], align 16
  %code = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 9
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %values = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 1
  %0 = load i8** %values, align 8
  %1 = bitcast i8* %0 to %union.tree_node*
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %type.addr.0 = phi %union.tree_node* [ %1, %if.then ], [ %type, %entry ]
  %2 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !1
  %cmp2 = icmp eq %union.tree_node* %type.addr.0, %2
  br i1 %cmp2, label %if.end20, label %if.else

if.else:                                          ; preds = %if.end
  %3 = getelementptr inbounds %union.tree_node* %type.addr.0, i64 0, i32 0, i32 11
  %4 = load %union.tree_node** %3, align 8, !tbaa !12
  %tobool = icmp eq %union.tree_node* %4, null
  br i1 %tobool, label %if.else42, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.else
  %code8 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 0, i32 2
  %bf.load9 = load i32* %code8, align 8
  %bf.clear10 = and i32 %bf.load9, 255
  %cmp11 = icmp eq i32 %bf.clear10, 33
  br i1 %cmp11, label %land.lhs.true12, label %land.lhs.true24

land.lhs.true12:                                  ; preds = %land.lhs.true
  %external_flag = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 5
  %5 = bitcast i48* %external_flag to i64*
  %bf.load15 = load i64* %5, align 8
  %bf.cast = and i64 %bf.load15, 256
  %tobool17 = icmp eq i64 %bf.cast, 0
  %full. = select i1 %tobool17, i32 %full, i32 0
  br label %land.lhs.true24

if.end20:                                         ; preds = %if.end
  %6 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %.phi.trans.insert = getelementptr inbounds %union.tree_node* %6, i64 0, i32 0, i32 11
  %.pre = load %union.tree_node** %.phi.trans.insert, align 8, !tbaa !12
  %tobool23 = icmp eq %union.tree_node* %.pre, null
  br i1 %tobool23, label %if.else42, label %land.lhs.true24

land.lhs.true24:                                  ; preds = %land.lhs.true12, %land.lhs.true, %if.end20
  %type.addr.11425 = phi %union.tree_node* [ %6, %if.end20 ], [ %type.addr.0, %land.lhs.true ], [ %type.addr.0, %land.lhs.true12 ]
  %full.addr.01423 = phi i32 [ %full, %if.end20 ], [ %full, %land.lhs.true ], [ %full., %land.lhs.true12 ]
  %7 = phi %union.tree_node* [ %.pre, %if.end20 ], [ %4, %land.lhs.true ], [ %4, %land.lhs.true12 ]
  %code28 = getelementptr inbounds %union.tree_node* %7, i64 0, i32 0, i32 0, i32 2
  %bf.load29 = load i32* %code28, align 8
  %bf.clear30 = and i32 %bf.load29, 255
  %cmp31 = icmp eq i32 %bf.clear30, 33
  br i1 %cmp31, label %land.lhs.true32, label %if.else42

land.lhs.true32:                                  ; preds = %land.lhs.true24
  %result = getelementptr inbounds %union.tree_node* %7, i64 0, i32 0, i32 11
  %8 = load %union.tree_node** %result, align 8, !tbaa !20
  %tobool36 = icmp eq %union.tree_node* %8, null
  br i1 %tobool36, label %if.else42, label %if.then37

if.then37:                                        ; preds = %land.lhs.true32
  %type41 = getelementptr inbounds %union.tree_node* %7, i64 0, i32 0, i32 0, i32 1
  br label %if.end45

if.else42:                                        ; preds = %if.else, %land.lhs.true32, %if.end20, %land.lhs.true24
  %type.addr.11426 = phi %union.tree_node* [ %type.addr.11425, %land.lhs.true32 ], [ %6, %if.end20 ], [ %type.addr.11425, %land.lhs.true24 ], [ %type.addr.0, %if.else ]
  %full.addr.01424 = phi i32 [ %full.addr.01423, %land.lhs.true32 ], [ %full, %if.end20 ], [ %full.addr.01423, %land.lhs.true24 ], [ %full, %if.else ]
  %9 = getelementptr inbounds %union.tree_node* %type.addr.11426, i64 0, i32 0, i32 15
  br label %if.end45

if.end45:                                         ; preds = %if.else42, %if.then37
  %type.addr.11427 = phi %union.tree_node* [ %type.addr.11425, %if.then37 ], [ %type.addr.11426, %if.else42 ]
  %full.addr.01422 = phi i32 [ %full.addr.01423, %if.then37 ], [ %full.addr.01424, %if.else42 ]
  %main_variant.0.in = phi %union.tree_node** [ %type41, %if.then37 ], [ %9, %if.else42 ]
  %main_variant.0 = load %union.tree_node** %main_variant.0.in, align 8
  %10 = load i32* @use_gnu_debug_info_extensions, align 4, !tbaa !5
  %tobool46 = icmp eq i32 %10, 0
  %main_variant.0.type.addr.1 = select i1 %tobool46, %union.tree_node* %main_variant.0, %union.tree_node* %type.addr.11427
  %type49 = bitcast %union.tree_node* %main_variant.0.type.addr.1 to %struct.tree_type*
  %symtab = getelementptr inbounds %union.tree_node* %main_variant.0.type.addr.1, i64 0, i32 0, i32 10
  %address = bitcast %union.tree_node** %symtab to i32*
  %11 = load i32* %address, align 4, !tbaa !5
  %cmp50 = icmp eq i32 %11, 0
  br i1 %cmp50, label %if.then51, label %if.end45.if.end72_crit_edge

if.end45.if.end72_crit_edge:                      ; preds = %if.end45
  %.pre1416 = load %struct.typeinfo** @typevec, align 8, !tbaa !1
  br label %if.end72

if.then51:                                        ; preds = %if.end45
  %12 = load i32* @next_type_number, align 4, !tbaa !5
  %inc = add nsw i32 %12, 1
  store i32 %inc, i32* @next_type_number, align 4, !tbaa !5
  store i32 %12, i32* %address, align 4, !tbaa !5
  %13 = load i32* @next_type_number, align 4, !tbaa !5
  %14 = load i32* @typevec_len, align 4, !tbaa !5
  %cmp55 = icmp eq i32 %13, %14
  br i1 %cmp55, label %if.then56, label %if.end61

if.then56:                                        ; preds = %if.then51
  %15 = load %struct.typeinfo** @typevec, align 8, !tbaa !1
  %16 = bitcast %struct.typeinfo* %15 to i8*
  %mul = shl nsw i32 %13, 1
  %conv = sext i32 %mul to i64
  %mul57 = mul i64 %conv, 12
  %call = tail call i8* @xrealloc(i8* %16, i64 %mul57) #5
  %17 = bitcast i8* %call to %struct.typeinfo*
  store %struct.typeinfo* %17, %struct.typeinfo** @typevec, align 8, !tbaa !1
  %18 = load i32* @typevec_len, align 4, !tbaa !5
  %idx.ext = sext i32 %18 to i64
  %add.ptr = getelementptr inbounds %struct.typeinfo* %17, i64 %idx.ext
  %19 = bitcast %struct.typeinfo* %add.ptr to i8*
  %mul59 = mul i64 %idx.ext, 12
  tail call void @llvm.memset.p0i8.i64(i8* %19, i8 0, i64 %mul59, i32 1, i1 false)
  %20 = load i32* @typevec_len, align 4, !tbaa !5
  %mul60 = shl nsw i32 %20, 1
  store i32 %mul60, i32* @typevec_len, align 4, !tbaa !5
  %.pre1414 = load i32* %address, align 4, !tbaa !5
  br label %if.end61

if.end61:                                         ; preds = %if.then56, %if.then51
  %21 = phi i32 [ %.pre1414, %if.then56 ], [ %12, %if.then51 ]
  %22 = load %struct.dbx_file** @current_file, align 8, !tbaa !1
  %file_number = getelementptr inbounds %struct.dbx_file* %22, i64 0, i32 1
  %23 = load i32* %file_number, align 4, !tbaa !10
  %idxprom = sext i32 %21 to i64
  %24 = load %struct.typeinfo** @typevec, align 8, !tbaa !1
  %file_number65 = getelementptr inbounds %struct.typeinfo* %24, i64 %idxprom, i32 1
  store i32 %23, i32* %file_number65, align 4, !tbaa !32
  %next_type_number = getelementptr inbounds %struct.dbx_file* %22, i64 0, i32 2
  %25 = load i32* %next_type_number, align 4, !tbaa !11
  %inc66 = add nsw i32 %25, 1
  store i32 %inc66, i32* %next_type_number, align 4, !tbaa !11
  %26 = load i32* %address, align 4, !tbaa !5
  %idxprom70 = sext i32 %26 to i64
  %type_number = getelementptr inbounds %struct.typeinfo* %24, i64 %idxprom70, i32 2
  store i32 %25, i32* %type_number, align 4, !tbaa !34
  %.pre1415 = load i32* %address, align 4, !tbaa !5
  br label %if.end72

if.end72:                                         ; preds = %if.end45.if.end72_crit_edge, %if.end61
  %27 = phi %struct.typeinfo* [ %24, %if.end61 ], [ %.pre1416, %if.end45.if.end72_crit_edge ]
  %28 = phi i32 [ %.pre1415, %if.end61 ], [ %11, %if.end45.if.end72_crit_edge ]
  %idxprom.i = sext i32 %28 to i64
  %29 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %file_number.i = getelementptr inbounds %struct.typeinfo* %27, i64 %idxprom.i, i32 1
  %30 = load i32* %file_number.i, align 4, !tbaa !32
  %type_number.i = getelementptr inbounds %struct.typeinfo* %27, i64 %idxprom.i, i32 2
  %31 = load i32* %type_number.i, align 4, !tbaa !34
  %call.i1145 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %29, i8* getelementptr inbounds ([8 x i8]* @.str57, i64 0, i64 0), i32 %30, i32 %31) #5
  %32 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add.i1146 = add nsw i32 %32, 9
  store i32 %add.i1146, i32* @current_sym_nchars, align 4, !tbaa !5
  %33 = load i32* %address, align 4, !tbaa !5
  %idxprom76 = sext i32 %33 to i64
  %34 = load %struct.typeinfo** @typevec, align 8, !tbaa !1
  %status = getelementptr inbounds %struct.typeinfo* %34, i64 %idxprom76, i32 0
  %35 = load i32* %status, align 4, !tbaa !35
  switch i32 %35, label %sw.epilog [
    i32 2, label %sw.epilog902
    i32 1, label %sw.bb
  ]

sw.bb:                                            ; preds = %if.end72
  %tobool78 = icmp eq i32 %full.addr.01422, 0
  br i1 %tobool78, label %sw.epilog902, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %sw.bb
  %size = getelementptr inbounds %union.tree_node* %main_variant.0.type.addr.1, i64 0, i32 0, i32 2
  %36 = bitcast i32* %size to %union.tree_node**
  %37 = load %union.tree_node** %36, align 8, !tbaa !30
  %cmp80 = icmp eq %union.tree_node* %37, null
  br i1 %cmp80, label %sw.epilog902, label %lor.lhs.false82

lor.lhs.false82:                                  ; preds = %lor.lhs.false
  %call85 = tail call i32 @host_integerp(%union.tree_node* %37, i32 1) #5
  %tobool86 = icmp eq i32 %call85, 0
  br i1 %tobool86, label %sw.epilog902, label %sw.epilog

sw.epilog:                                        ; preds = %lor.lhs.false82, %if.end72
  %38 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %fputc = tail call i32 @fputc(i32 61, %struct._IO_FILE* %38) #5
  %39 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add = add nsw i32 %39, 1
  store i32 %add, i32* @current_sym_nchars, align 4, !tbaa !5
  %40 = load i32* %address, align 4, !tbaa !5
  %idxprom94 = sext i32 %40 to i64
  %41 = load %struct.typeinfo** @typevec, align 8, !tbaa !1
  %status96 = getelementptr inbounds %struct.typeinfo* %41, i64 %idxprom94, i32 0
  store i32 2, i32* %status96, align 4, !tbaa !35
  %readonly_flag = getelementptr inbounds %union.tree_node* %main_variant.0.type.addr.1, i64 0, i32 0, i32 0, i32 2
  %bf.load98 = load i32* %readonly_flag, align 8
  %bf.lshr99 = lshr i32 %bf.load98, 12
  %bf.clear100 = and i32 %bf.lshr99, 1
  %readonly_flag102 = getelementptr inbounds %union.tree_node* %main_variant.0, i64 0, i32 0, i32 0, i32 2
  %bf.load103 = load i32* %readonly_flag102, align 8
  %bf.lshr104 = lshr i32 %bf.load103, 12
  %bf.clear105 = and i32 %bf.lshr104, 1
  %cmp106 = icmp ugt i32 %bf.clear100, %bf.clear105
  br i1 %cmp106, label %if.then108, label %if.else117

if.then108:                                       ; preds = %sw.epilog
  %42 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call109 = tail call i32 @putc(i32 107, %struct._IO_FILE* %42) #5
  %43 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add110 = add nsw i32 %43, 1
  store i32 %add110, i32* @current_sym_nchars, align 4, !tbaa !5
  %bf.load112 = load i32* %readonly_flag, align 8
  %bf.clear114 = lshr i32 %bf.load112, 10
  %44 = and i32 %bf.clear114, 2
  %call116 = tail call %union.tree_node* @build_qualified_type(%union.tree_node* %main_variant.0.type.addr.1, i32 %44) #5
  tail call fastcc void @dbxout_type(%union.tree_node* %call116, i32 0)
  br label %sw.epilog902

if.else117:                                       ; preds = %sw.epilog
  %bf.lshr121 = lshr i32 %bf.load98, 11
  %bf.clear122 = and i32 %bf.lshr121, 1
  %bf.lshr126 = lshr i32 %bf.load103, 11
  %bf.clear127 = and i32 %bf.lshr126, 1
  %cmp128 = icmp ugt i32 %bf.clear122, %bf.clear127
  br i1 %cmp128, label %if.then130, label %if.else141

if.then130:                                       ; preds = %if.else117
  %45 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call131 = tail call i32 @putc(i32 66, %struct._IO_FILE* %45) #5
  %46 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add132 = add nsw i32 %46, 1
  store i32 %add132, i32* @current_sym_nchars, align 4, !tbaa !5
  %bf.load135 = load i32* %readonly_flag, align 8
  %bf.clear137 = lshr i32 %bf.load135, 12
  %bf.clear137.lobit = and i32 %bf.clear137, 1
  %call140 = tail call %union.tree_node* @build_qualified_type(%union.tree_node* %main_variant.0.type.addr.1, i32 %bf.clear137.lobit) #5
  tail call fastcc void @dbxout_type(%union.tree_node* %call140, i32 0)
  br label %sw.epilog902

if.else141:                                       ; preds = %if.else117
  %47 = getelementptr inbounds %union.tree_node* %main_variant.0.type.addr.1, i64 0, i32 0, i32 15
  %48 = load %union.tree_node** %47, align 8, !tbaa !36
  %cmp144 = icmp eq %union.tree_node* %main_variant.0, %48
  br i1 %cmp144, label %if.end153, label %if.then146

if.then146:                                       ; preds = %if.else141
  %49 = getelementptr inbounds %union.tree_node* %main_variant.0.type.addr.1, i64 0, i32 0, i32 11
  %50 = load %union.tree_node** %49, align 8, !tbaa !12
  %result150 = getelementptr inbounds %union.tree_node* %50, i64 0, i32 0, i32 11
  %51 = load %union.tree_node** %result150, align 8, !tbaa !20
  tail call fastcc void @dbxout_type(%union.tree_node* %51, i32 0)
  br label %sw.epilog902

if.end153:                                        ; preds = %if.else141
  %bf.clear157 = and i32 %bf.load98, 255
  switch i32 %bf.clear157, label %sw.default [
    i32 5, label %sw.bb158
    i32 24, label %sw.bb158
    i32 6, label %sw.bb159
    i32 7, label %sw.bb322
    i32 12, label %sw.bb330
    i32 11, label %sw.bb352
    i32 17, label %sw.bb365
    i32 8, label %sw.bb370
    i32 19, label %sw.bb425
    i32 18, label %sw.bb448
    i32 20, label %sw.bb493
    i32 21, label %sw.bb493
    i32 22, label %sw.bb493
    i32 10, label %sw.bb724
    i32 13, label %sw.bb850
    i32 16, label %sw.bb855
    i32 14, label %sw.bb874
    i32 15, label %sw.bb887
    i32 23, label %sw.bb897
  ]

sw.bb158:                                         ; preds = %if.end153, %if.end153
  %52 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %file_number.i1189 = getelementptr inbounds %struct.typeinfo* %41, i64 %idxprom94, i32 1
  %53 = load i32* %file_number.i1189, align 4, !tbaa !32
  %type_number.i1190 = getelementptr inbounds %struct.typeinfo* %41, i64 %idxprom94, i32 2
  %54 = load i32* %type_number.i1190, align 4, !tbaa !34
  %call.i1191 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %52, i8* getelementptr inbounds ([8 x i8]* @.str57, i64 0, i64 0), i32 %53, i32 %54) #5
  %55 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add.i1192 = add nsw i32 %55, 9
  store i32 %add.i1192, i32* @current_sym_nchars, align 4, !tbaa !5
  br label %sw.epilog902

sw.bb159:                                         ; preds = %if.end153
  %56 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 0), align 8, !tbaa !1
  %cmp160 = icmp eq %union.tree_node* %main_variant.0.type.addr.1, %56
  %bf.clear166 = and i32 %bf.load98, 8192
  %tobool167 = icmp eq i32 %bf.clear166, 0
  %or.cond1087 = and i1 %cmp160, %tobool167
  br i1 %or.cond1087, label %if.then168, label %if.else173

if.then168:                                       ; preds = %sw.bb159
  %57 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %fputc1086 = tail call i32 @fputc(i32 114, %struct._IO_FILE* %57) #5
  %58 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add170 = add nsw i32 %58, 1
  store i32 %add170, i32* @current_sym_nchars, align 4, !tbaa !5
  %59 = load i32* %address, align 4, !tbaa !5
  %idxprom.i1195 = sext i32 %59 to i64
  %60 = load %struct.typeinfo** @typevec, align 8, !tbaa !1
  %61 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %file_number.i1196 = getelementptr inbounds %struct.typeinfo* %60, i64 %idxprom.i1195, i32 1
  %62 = load i32* %file_number.i1196, align 4, !tbaa !32
  %type_number.i1197 = getelementptr inbounds %struct.typeinfo* %60, i64 %idxprom.i1195, i32 2
  %63 = load i32* %type_number.i1197, align 4, !tbaa !34
  %call.i1198 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %61, i8* getelementptr inbounds ([8 x i8]* @.str57, i64 0, i64 0), i32 %62, i32 %63) #5
  %64 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add.i1199 = add nsw i32 %64, 9
  store i32 %add.i1199, i32* @current_sym_nchars, align 4, !tbaa !5
  %65 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %66 = tail call i64 @fwrite(i8* getelementptr inbounds ([8 x i8]* @.str22, i64 0, i64 0), i64 7, i64 1, %struct._IO_FILE* %65)
  %67 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add172 = add nsw i32 %67, 7
  store i32 %add172, i32* @current_sym_nchars, align 4, !tbaa !5
  br label %sw.epilog902

if.else173:                                       ; preds = %sw.bb159
  %type175 = getelementptr inbounds %union.tree_node* %main_variant.0.type.addr.1, i64 0, i32 0, i32 0, i32 1
  %68 = load %union.tree_node** %type175, align 8, !tbaa !23
  %cmp176 = icmp eq %union.tree_node* %68, null
  br i1 %cmp176, label %if.else207, label %land.lhs.true178

land.lhs.true178:                                 ; preds = %if.else173
  %code182 = getelementptr inbounds %union.tree_node* %68, i64 0, i32 0, i32 0, i32 2
  %bf.load183 = load i32* %code182, align 8
  %bf.clear184 = and i32 %bf.load183, 255
  %cmp185 = icmp eq i32 %bf.clear184, 6
  br i1 %cmp185, label %if.then187, label %if.else207

if.then187:                                       ; preds = %land.lhs.true178
  %69 = load i32* @use_gnu_debug_info_extensions, align 4, !tbaa !5
  %tobool188 = icmp eq i32 %69, 0
  br i1 %tobool188, label %if.end206, label %land.lhs.true189

land.lhs.true189:                                 ; preds = %if.then187
  %precision = getelementptr inbounds %struct.tree_type* %type49, i64 0, i32 6
  %bf.load191 = load i32* %precision, align 4
  %70 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %type193 = bitcast %union.tree_node* %70 to %struct.tree_type*
  %precision194 = getelementptr inbounds %struct.tree_type* %type193, i64 0, i32 6
  %bf.load195 = load i32* %precision194, align 4
  %71 = xor i32 %bf.load195, %bf.load191
  %72 = and i32 %71, 511
  %cmp197 = icmp eq i32 %72, 0
  br i1 %cmp197, label %if.end206, label %if.then199

if.then199:                                       ; preds = %land.lhs.true189
  store i1 true, i1* @have_used_extensions, align 1
  %73 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %bf.clear203 = and i32 %bf.load191, 511
  %call204 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %73, i8* getelementptr inbounds ([6 x i8]* @.str23, i64 0, i64 0), i32 %bf.clear203) #5
  %74 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add205 = add nsw i32 %74, 5
  store i32 %add205, i32* @current_sym_nchars, align 4, !tbaa !5
  br label %if.end206

if.end206:                                        ; preds = %land.lhs.true189, %if.then187, %if.then199
  tail call fastcc void @dbxout_range_type(%union.tree_node* %main_variant.0.type.addr.1)
  br label %sw.epilog902

if.else207:                                       ; preds = %if.else173, %land.lhs.true178
  %75 = load i32* @use_gnu_debug_info_extensions, align 4, !tbaa !5
  %tobool208 = icmp eq i32 %75, 0
  br i1 %tobool208, label %if.else318, label %land.lhs.true209

land.lhs.true209:                                 ; preds = %if.else207
  %precision211 = getelementptr inbounds %struct.tree_type* %type49, i64 0, i32 6
  %bf.load212 = load i32* %precision211, align 4
  %76 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %type214 = bitcast %union.tree_node* %76 to %struct.tree_type*
  %precision215 = getelementptr inbounds %struct.tree_type* %type214, i64 0, i32 6
  %bf.load216 = load i32* %precision215, align 4
  %77 = xor i32 %bf.load216, %bf.load212
  %78 = and i32 %77, 511
  %cmp218 = icmp eq i32 %78, 0
  br i1 %cmp218, label %land.lhs.true229, label %if.end227

if.end227:                                        ; preds = %land.lhs.true209
  store i1 true, i1* @have_used_extensions, align 1
  %79 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %bf.clear224 = and i32 %bf.load212, 511
  %call225 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %79, i8* getelementptr inbounds ([6 x i8]* @.str23, i64 0, i64 0), i32 %bf.clear224) #5
  %80 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add226 = add nsw i32 %80, 5
  store i32 %add226, i32* @current_sym_nchars, align 4, !tbaa !5
  %.pr.pre = load i32* @use_gnu_debug_info_extensions, align 4, !tbaa !5
  %tobool228 = icmp eq i32 %.pr.pre, 0
  br i1 %tobool228, label %if.else318, label %land.lhs.true229

land.lhs.true229:                                 ; preds = %land.lhs.true209, %if.end227
  %81 = getelementptr inbounds %union.tree_node* %main_variant.0.type.addr.1, i64 0, i32 0, i32 12
  %82 = load %union.tree_node** %81, align 8, !tbaa !37
  %cmp231 = icmp eq %union.tree_node* %82, null
  br i1 %cmp231, label %if.else318, label %land.lhs.true233

land.lhs.true233:                                 ; preds = %land.lhs.true229
  %code237 = getelementptr inbounds %union.tree_node* %82, i64 0, i32 0, i32 0, i32 2
  %bf.load238 = load i32* %code237, align 8
  %bf.clear239 = and i32 %bf.load238, 255
  %cmp240 = icmp eq i32 %bf.clear239, 25
  br i1 %cmp240, label %land.lhs.true242, label %if.else318

land.lhs.true242:                                 ; preds = %land.lhs.true233
  %83 = getelementptr inbounds %union.tree_node* %main_variant.0.type.addr.1, i64 0, i32 0, i32 13
  %84 = load %union.tree_node** %83, align 8, !tbaa !38
  %cmp244 = icmp eq %union.tree_node* %84, null
  br i1 %cmp244, label %if.else318, label %land.lhs.true246

land.lhs.true246:                                 ; preds = %land.lhs.true242
  %code250 = getelementptr inbounds %union.tree_node* %84, i64 0, i32 0, i32 0, i32 2
  %bf.load251 = load i32* %code250, align 8
  %bf.clear252 = and i32 %bf.load251, 255
  %cmp253 = icmp eq i32 %bf.clear252, 25
  br i1 %cmp253, label %land.lhs.true255, label %if.else318

land.lhs.true255:                                 ; preds = %land.lhs.true246
  %bf.load258 = load i32* %precision211, align 4
  %bf.clear259 = and i32 %bf.load258, 511
  %85 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %type260 = bitcast %union.tree_node* %85 to %struct.tree_type*
  %precision261 = getelementptr inbounds %struct.tree_type* %type260, i64 0, i32 6
  %bf.load262 = load i32* %precision261, align 4
  %bf.clear263 = and i32 %bf.load262, 511
  %cmp264 = icmp ugt i32 %bf.clear259, %bf.clear263
  br i1 %cmp264, label %if.then305, label %lor.lhs.false266

lor.lhs.false266:                                 ; preds = %land.lhs.true255
  %cmp275 = icmp eq i32 %bf.clear259, %bf.clear263
  br i1 %cmp275, label %land.lhs.true277, label %lor.lhs.false284

land.lhs.true277:                                 ; preds = %lor.lhs.false266
  %bf.load280 = load i32* %readonly_flag, align 8
  %bf.clear282 = and i32 %bf.load280, 8192
  %tobool283 = icmp ne i32 %bf.clear282, 0
  %cmp289 = icmp ugt i32 %bf.clear259, 64
  %or.cond1436 = or i1 %tobool283, %cmp289
  br i1 %or.cond1436, label %if.then305, label %lor.lhs.false291

lor.lhs.false284:                                 ; preds = %lor.lhs.false266
  %cmp289.old = icmp ugt i32 %bf.clear259, 64
  br i1 %cmp289.old, label %if.then305, label %lor.lhs.false291

lor.lhs.false291:                                 ; preds = %land.lhs.true277, %lor.lhs.false284
  %cmp296 = icmp eq i32 %bf.clear259, 64
  br i1 %cmp296, label %land.lhs.true298, label %if.else318

land.lhs.true298:                                 ; preds = %lor.lhs.false291
  %bf.load301 = load i32* %readonly_flag, align 8
  %bf.clear303 = and i32 %bf.load301, 8192
  %tobool304 = icmp eq i32 %bf.clear303, 0
  br i1 %tobool304, label %if.else318, label %if.then305

if.then305:                                       ; preds = %land.lhs.true277, %land.lhs.true298, %lor.lhs.false284, %land.lhs.true255
  %86 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %fputc1074 = tail call i32 @fputc(i32 114, %struct._IO_FILE* %86) #5
  %87 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add307 = add nsw i32 %87, 1
  store i32 %add307, i32* @current_sym_nchars, align 4, !tbaa !5
  %88 = load i32* %address, align 4, !tbaa !5
  %idxprom.i1217 = sext i32 %88 to i64
  %89 = load %struct.typeinfo** @typevec, align 8, !tbaa !1
  %90 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %file_number.i1218 = getelementptr inbounds %struct.typeinfo* %89, i64 %idxprom.i1217, i32 1
  %91 = load i32* %file_number.i1218, align 4, !tbaa !32
  %type_number.i1219 = getelementptr inbounds %struct.typeinfo* %89, i64 %idxprom.i1217, i32 2
  %92 = load i32* %type_number.i1219, align 4, !tbaa !34
  %call.i1220 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %90, i8* getelementptr inbounds ([8 x i8]* @.str57, i64 0, i64 0), i32 %91, i32 %92) #5
  %93 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add.i1221 = add nsw i32 %93, 9
  store i32 %add.i1221, i32* @current_sym_nchars, align 4, !tbaa !5
  %94 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %fputc1077 = tail call i32 @fputc(i32 59, %struct._IO_FILE* %94) #5
  %95 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add309 = add nsw i32 %95, 1
  store i32 %add309, i32* @current_sym_nchars, align 4, !tbaa !5
  %96 = load %union.tree_node** %81, align 8, !tbaa !37
  tail call fastcc void @print_int_cst_octal(%union.tree_node* %96)
  %97 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %fputc1080 = tail call i32 @fputc(i32 59, %struct._IO_FILE* %97) #5
  %98 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add313 = add nsw i32 %98, 1
  store i32 %add313, i32* @current_sym_nchars, align 4, !tbaa !5
  %99 = load %union.tree_node** %83, align 8, !tbaa !38
  tail call fastcc void @print_int_cst_octal(%union.tree_node* %99)
  %100 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %fputc1083 = tail call i32 @fputc(i32 59, %struct._IO_FILE* %100) #5
  %101 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add317 = add nsw i32 %101, 1
  store i32 %add317, i32* @current_sym_nchars, align 4, !tbaa !5
  br label %sw.epilog902

if.else318:                                       ; preds = %if.else207, %land.lhs.true298, %land.lhs.true242, %land.lhs.true229, %if.end227, %lor.lhs.false291, %land.lhs.true246, %land.lhs.true233
  tail call fastcc void @dbxout_range_type(%union.tree_node* %main_variant.0.type.addr.1)
  br label %sw.epilog902

sw.bb322:                                         ; preds = %if.end153
  %102 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %fputc1071 = tail call i32 @fputc(i32 114, %struct._IO_FILE* %102) #5
  %103 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add324 = add nsw i32 %103, 1
  store i32 %add324, i32* @current_sym_nchars, align 4, !tbaa !5
  %104 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %symtab.i1229 = getelementptr inbounds %union.tree_node* %104, i64 0, i32 0, i32 10
  %address.i1230 = bitcast %union.tree_node** %symtab.i1229 to i32*
  %105 = load i32* %address.i1230, align 4, !tbaa !5
  %idxprom.i1231 = sext i32 %105 to i64
  %106 = load %struct.typeinfo** @typevec, align 8, !tbaa !1
  %107 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %file_number.i1232 = getelementptr inbounds %struct.typeinfo* %106, i64 %idxprom.i1231, i32 1
  %108 = load i32* %file_number.i1232, align 4, !tbaa !32
  %type_number.i1233 = getelementptr inbounds %struct.typeinfo* %106, i64 %idxprom.i1231, i32 2
  %109 = load i32* %type_number.i1233, align 4, !tbaa !34
  %call.i1234 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %107, i8* getelementptr inbounds ([8 x i8]* @.str57, i64 0, i64 0), i32 %108, i32 %109) #5
  %110 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add.i1235 = add nsw i32 %110, 9
  store i32 %add.i1235, i32* @current_sym_nchars, align 4, !tbaa !5
  %111 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call325 = tail call i32 @putc(i32 59, %struct._IO_FILE* %111) #5
  %112 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add326 = add nsw i32 %112, 1
  store i32 %add326, i32* @current_sym_nchars, align 4, !tbaa !5
  %call327 = tail call i64 @int_size_in_bytes(%union.tree_node* %main_variant.0.type.addr.1) #5
  %113 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call.i1236 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %113, i8* getelementptr inbounds ([5 x i8]* @.str8, i64 0, i64 0), i64 %call327) #5
  %cmp.i1237 = icmp slt i64 %call327, 0
  %sub.i1238 = sub nsw i64 0, %call327
  %sub.c.i1239 = select i1 %cmp.i1237, i64 %sub.i1238, i64 %call327
  %c.lobit.i1240 = lshr i64 %call327, 63
  %114 = trunc i64 %c.lobit.i1240 to i32
  %cmp19.i1241 = icmp sgt i64 %sub.c.i1239, 0
  br i1 %cmp19.i1241, label %while.body.i1245, label %print_wide_int.exit1248

while.body.i1245:                                 ; preds = %sw.bb322, %while.body.i1245
  %c.addr.010.i1242 = phi i64 [ %div.i1243, %while.body.i1245 ], [ %sub.c.i1239, %sw.bb322 ]
  %div.i1243 = sdiv i64 %c.addr.010.i1242, 10
  %cmp1.i1244 = icmp sgt i64 %c.addr.010.i1242, 9
  br i1 %cmp1.i1244, label %while.body.i1245, label %print_wide_int.exit1248

print_wide_int.exit1248:                          ; preds = %while.body.i1245, %sw.bb322
  %inc2.i1246 = add nsw i32 %114, 1
  %115 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add.i1247 = add nsw i32 %inc2.i1246, %115
  store i32 %add.i1247, i32* @current_sym_nchars, align 4, !tbaa !5
  %116 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %117 = tail call i64 @fwrite(i8* getelementptr inbounds ([4 x i8]* @.str25, i64 0, i64 0), i64 3, i64 1, %struct._IO_FILE* %116)
  %118 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add329 = add nsw i32 %118, 3
  store i32 %add329, i32* @current_sym_nchars, align 4, !tbaa !5
  br label %sw.epilog902

sw.bb330:                                         ; preds = %if.end153
  %119 = load i32* @use_gnu_debug_info_extensions, align 4, !tbaa !5
  %tobool331 = icmp eq i32 %119, 0
  br i1 %tobool331, label %if.else339, label %if.then332

if.then332:                                       ; preds = %sw.bb330
  store i1 true, i1* @have_used_extensions, align 1
  %120 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %121 = tail call i64 @fwrite(i8* getelementptr inbounds ([3 x i8]* @.str26, i64 0, i64 0), i64 2, i64 1, %struct._IO_FILE* %120)
  %122 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add334 = add nsw i32 %122, 2
  store i32 %add334, i32* @current_sym_nchars, align 4, !tbaa !5
  %call335 = tail call i64 @int_size_in_bytes(%union.tree_node* %main_variant.0.type.addr.1) #5
  %mul336 = shl nsw i64 %call335, 3
  %123 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call.i1249 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %123, i8* getelementptr inbounds ([5 x i8]* @.str8, i64 0, i64 0), i64 %mul336) #5
  %cmp.i1250 = icmp slt i64 %call335, 0
  %sub.i1251 = sub nsw i64 0, %mul336
  %sub.c.i1252 = select i1 %cmp.i1250, i64 %sub.i1251, i64 %mul336
  %124 = lshr i64 %call335, 60
  %.tr1386 = trunc i64 %124 to i32
  %125 = and i32 %.tr1386, 1
  %cmp19.i1254 = icmp sgt i64 %sub.c.i1252, 0
  br i1 %cmp19.i1254, label %while.body.i1258, label %print_wide_int.exit1261

while.body.i1258:                                 ; preds = %if.then332, %while.body.i1258
  %c.addr.010.i1255 = phi i64 [ %div.i1256, %while.body.i1258 ], [ %sub.c.i1252, %if.then332 ]
  %div.i1256 = sdiv i64 %c.addr.010.i1255, 10
  %cmp1.i1257 = icmp sgt i64 %c.addr.010.i1255, 9
  br i1 %cmp1.i1257, label %while.body.i1258, label %print_wide_int.exit1261

print_wide_int.exit1261:                          ; preds = %while.body.i1258, %if.then332
  %inc2.i1259 = add nsw i32 %125, 1
  %126 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add.i1260 = add nsw i32 %inc2.i1259, %126
  store i32 %add.i1260, i32* @current_sym_nchars, align 4, !tbaa !5
  %127 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %128 = tail call i64 @fwrite(i8* getelementptr inbounds ([6 x i8]* @.str27, i64 0, i64 0), i64 5, i64 1, %struct._IO_FILE* %127)
  %129 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add338 = add nsw i32 %129, 4
  store i32 %add338, i32* @current_sym_nchars, align 4, !tbaa !5
  br label %sw.epilog902

if.else339:                                       ; preds = %sw.bb330
  %130 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %fputc1068 = tail call i32 @fputc(i32 114, %struct._IO_FILE* %130) #5
  %131 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add341 = add nsw i32 %131, 1
  store i32 %add341, i32* @current_sym_nchars, align 4, !tbaa !5
  %132 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 0), align 8, !tbaa !1
  %symtab.i1262 = getelementptr inbounds %union.tree_node* %132, i64 0, i32 0, i32 10
  %address.i1263 = bitcast %union.tree_node** %symtab.i1262 to i32*
  %133 = load i32* %address.i1263, align 4, !tbaa !5
  %idxprom.i1264 = sext i32 %133 to i64
  %134 = load %struct.typeinfo** @typevec, align 8, !tbaa !1
  %135 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %file_number.i1265 = getelementptr inbounds %struct.typeinfo* %134, i64 %idxprom.i1264, i32 1
  %136 = load i32* %file_number.i1265, align 4, !tbaa !32
  %type_number.i1266 = getelementptr inbounds %struct.typeinfo* %134, i64 %idxprom.i1264, i32 2
  %137 = load i32* %type_number.i1266, align 4, !tbaa !34
  %call.i1267 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %135, i8* getelementptr inbounds ([8 x i8]* @.str57, i64 0, i64 0), i32 %136, i32 %137) #5
  %138 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add.i1268 = add nsw i32 %138, 9
  store i32 %add.i1268, i32* @current_sym_nchars, align 4, !tbaa !5
  %139 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %bf.load344 = load i32* %readonly_flag, align 8
  %bf.clear346 = lshr i32 %bf.load344, 6
  %140 = and i32 %bf.clear346, 128
  %141 = or i32 %140, 127
  %call349 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %139, i8* getelementptr inbounds ([7 x i8]* @.str28, i64 0, i64 0), i32 %141) #5
  %142 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add350 = add nsw i32 %142, 7
  store i32 %add350, i32* @current_sym_nchars, align 4, !tbaa !5
  br label %sw.epilog902

sw.bb352:                                         ; preds = %if.end153
  %143 = load i32* @use_gnu_debug_info_extensions, align 4, !tbaa !5
  %tobool353 = icmp eq i32 %143, 0
  br i1 %tobool353, label %if.else361, label %if.then354

if.then354:                                       ; preds = %sw.bb352
  store i1 true, i1* @have_used_extensions, align 1
  %144 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %145 = tail call i64 @fwrite(i8* getelementptr inbounds ([3 x i8]* @.str26, i64 0, i64 0), i64 2, i64 1, %struct._IO_FILE* %144)
  %146 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add356 = add nsw i32 %146, 2
  store i32 %add356, i32* @current_sym_nchars, align 4, !tbaa !5
  %call357 = tail call i64 @int_size_in_bytes(%union.tree_node* %main_variant.0.type.addr.1) #5
  %mul358 = shl nsw i64 %call357, 3
  %147 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call.i1269 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %147, i8* getelementptr inbounds ([5 x i8]* @.str8, i64 0, i64 0), i64 %mul358) #5
  %cmp.i1270 = icmp slt i64 %call357, 0
  %sub.i1271 = sub nsw i64 0, %mul358
  %sub.c.i1272 = select i1 %cmp.i1270, i64 %sub.i1271, i64 %mul358
  %148 = lshr i64 %call357, 60
  %.tr1385 = trunc i64 %148 to i32
  %149 = and i32 %.tr1385, 1
  %cmp19.i1274 = icmp sgt i64 %sub.c.i1272, 0
  br i1 %cmp19.i1274, label %while.body.i1278, label %print_wide_int.exit1281

while.body.i1278:                                 ; preds = %if.then354, %while.body.i1278
  %c.addr.010.i1275 = phi i64 [ %div.i1276, %while.body.i1278 ], [ %sub.c.i1272, %if.then354 ]
  %div.i1276 = sdiv i64 %c.addr.010.i1275, 10
  %cmp1.i1277 = icmp sgt i64 %c.addr.010.i1275, 9
  br i1 %cmp1.i1277, label %while.body.i1278, label %print_wide_int.exit1281

print_wide_int.exit1281:                          ; preds = %while.body.i1278, %if.then354
  %inc2.i1279 = add nsw i32 %149, 1
  %150 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add.i1280 = add nsw i32 %inc2.i1279, %150
  store i32 %add.i1280, i32* @current_sym_nchars, align 4, !tbaa !5
  %151 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %152 = tail call i64 @fwrite(i8* getelementptr inbounds ([6 x i8]* @.str29, i64 0, i64 0), i64 5, i64 1, %struct._IO_FILE* %151)
  %153 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add360 = add nsw i32 %153, 4
  store i32 %add360, i32* @current_sym_nchars, align 4, !tbaa !5
  br label %sw.epilog902

if.else361:                                       ; preds = %sw.bb352
  %154 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %155 = tail call i64 @fwrite(i8* getelementptr inbounds ([18 x i8]* @.str30, i64 0, i64 0), i64 17, i64 1, %struct._IO_FILE* %154)
  %156 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add363 = add nsw i32 %156, 17
  store i32 %add363, i32* @current_sym_nchars, align 4, !tbaa !5
  br label %sw.epilog902

sw.bb365:                                         ; preds = %if.end153
  %157 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call366 = tail call i32 @putc(i32 100, %struct._IO_FILE* %157) #5
  %158 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add367 = add nsw i32 %158, 1
  store i32 %add367, i32* @current_sym_nchars, align 4, !tbaa !5
  %type369 = getelementptr inbounds %union.tree_node* %main_variant.0.type.addr.1, i64 0, i32 0, i32 0, i32 1
  %159 = load %union.tree_node** %type369, align 8, !tbaa !23
  tail call fastcc void @dbxout_type(%union.tree_node* %159, i32 0)
  br label %sw.epilog902

sw.bb370:                                         ; preds = %if.end153
  %type372 = getelementptr inbounds %union.tree_node* %main_variant.0.type.addr.1, i64 0, i32 0, i32 0, i32 1
  %160 = load %union.tree_node** %type372, align 8, !tbaa !23
  %code374 = getelementptr inbounds %union.tree_node* %160, i64 0, i32 0, i32 0, i32 2
  %bf.load375 = load i32* %code374, align 8
  %bf.clear376 = and i32 %bf.load375, 255
  %cmp377 = icmp eq i32 %bf.clear376, 7
  %161 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  br i1 %cmp377, label %if.then379, label %if.else390

if.then379:                                       ; preds = %sw.bb370
  %fputc1065 = tail call i32 @fputc(i32 114, %struct._IO_FILE* %161) #5
  %162 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add381 = add nsw i32 %162, 1
  store i32 %add381, i32* @current_sym_nchars, align 4, !tbaa !5
  %163 = load i32* %address, align 4, !tbaa !5
  %idxprom.i1297 = sext i32 %163 to i64
  %164 = load %struct.typeinfo** @typevec, align 8, !tbaa !1
  %165 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %file_number.i1298 = getelementptr inbounds %struct.typeinfo* %164, i64 %idxprom.i1297, i32 1
  %166 = load i32* %file_number.i1298, align 4, !tbaa !32
  %type_number.i1299 = getelementptr inbounds %struct.typeinfo* %164, i64 %idxprom.i1297, i32 2
  %167 = load i32* %type_number.i1299, align 4, !tbaa !34
  %call.i1300 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %165, i8* getelementptr inbounds ([8 x i8]* @.str57, i64 0, i64 0), i32 %166, i32 %167) #5
  %168 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add.i1301 = add nsw i32 %168, 9
  store i32 %add.i1301, i32* @current_sym_nchars, align 4, !tbaa !5
  %169 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call382 = tail call i32 @putc(i32 59, %struct._IO_FILE* %169) #5
  %170 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add383 = add nsw i32 %170, 1
  store i32 %add383, i32* @current_sym_nchars, align 4, !tbaa !5
  %171 = load %union.tree_node** %type372, align 8, !tbaa !23
  %call386 = tail call i64 @int_size_in_bytes(%union.tree_node* %171) #5
  %mul387 = shl nsw i64 %call386, 1
  %172 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call.i1302 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %172, i8* getelementptr inbounds ([5 x i8]* @.str8, i64 0, i64 0), i64 %mul387) #5
  %cmp.i1303 = icmp slt i64 %call386, 0
  %sub.i1304 = sub nsw i64 0, %mul387
  %sub.c.i1305 = select i1 %cmp.i1303, i64 %sub.i1304, i64 %mul387
  %173 = lshr i64 %call386, 62
  %.tr1384 = trunc i64 %173 to i32
  %174 = and i32 %.tr1384, 1
  %cmp19.i1307 = icmp sgt i64 %sub.c.i1305, 0
  br i1 %cmp19.i1307, label %while.body.i1311, label %print_wide_int.exit1314

while.body.i1311:                                 ; preds = %if.then379, %while.body.i1311
  %c.addr.010.i1308 = phi i64 [ %div.i1309, %while.body.i1311 ], [ %sub.c.i1305, %if.then379 ]
  %div.i1309 = sdiv i64 %c.addr.010.i1308, 10
  %cmp1.i1310 = icmp sgt i64 %c.addr.010.i1308, 9
  br i1 %cmp1.i1310, label %while.body.i1311, label %print_wide_int.exit1314

print_wide_int.exit1314:                          ; preds = %while.body.i1311, %if.then379
  %inc2.i1312 = add nsw i32 %174, 1
  %175 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add.i1313 = add nsw i32 %inc2.i1312, %175
  store i32 %add.i1313, i32* @current_sym_nchars, align 4, !tbaa !5
  %176 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %177 = tail call i64 @fwrite(i8* getelementptr inbounds ([4 x i8]* @.str25, i64 0, i64 0), i64 3, i64 1, %struct._IO_FILE* %176)
  %178 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add389 = add nsw i32 %178, 3
  store i32 %add389, i32* @current_sym_nchars, align 4, !tbaa !5
  br label %sw.epilog902

if.else390:                                       ; preds = %sw.bb370
  %call391 = tail call i32 @putc(i32 115, %struct._IO_FILE* %161) #5
  %179 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add392 = add nsw i32 %179, 1
  store i32 %add392, i32* @current_sym_nchars, align 4, !tbaa !5
  %call393 = tail call i64 @int_size_in_bytes(%union.tree_node* %main_variant.0.type.addr.1) #5
  %180 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call.i1315 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %180, i8* getelementptr inbounds ([5 x i8]* @.str8, i64 0, i64 0), i64 %call393) #5
  %cmp.i1316 = icmp slt i64 %call393, 0
  %sub.i1317 = sub nsw i64 0, %call393
  %sub.c.i1318 = select i1 %cmp.i1316, i64 %sub.i1317, i64 %call393
  %c.lobit.i1319 = lshr i64 %call393, 63
  %181 = trunc i64 %c.lobit.i1319 to i32
  %cmp19.i1320 = icmp sgt i64 %sub.c.i1318, 0
  br i1 %cmp19.i1320, label %while.body.i1324, label %print_wide_int.exit1327

while.body.i1324:                                 ; preds = %if.else390, %while.body.i1324
  %c.addr.010.i1321 = phi i64 [ %div.i1322, %while.body.i1324 ], [ %sub.c.i1318, %if.else390 ]
  %div.i1322 = sdiv i64 %c.addr.010.i1321, 10
  %cmp1.i1323 = icmp sgt i64 %c.addr.010.i1321, 9
  br i1 %cmp1.i1323, label %while.body.i1324, label %print_wide_int.exit1327

print_wide_int.exit1327:                          ; preds = %while.body.i1324, %if.else390
  %inc2.i1325 = add nsw i32 %181, 1
  %182 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add.i1326 = add nsw i32 %inc2.i1325, %182
  store i32 %add.i1326, i32* @current_sym_nchars, align 4, !tbaa !5
  %183 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %184 = tail call i64 @fwrite(i8* getelementptr inbounds ([6 x i8]* @.str31, i64 0, i64 0), i64 5, i64 1, %struct._IO_FILE* %183)
  %185 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add395 = add nsw i32 %185, 5
  store i32 %add395, i32* @current_sym_nchars, align 4, !tbaa !5
  %186 = load %union.tree_node** %type372, align 8, !tbaa !23
  tail call fastcc void @dbxout_type(%union.tree_node* %186, i32 0)
  %187 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %188 = load %union.tree_node** %type372, align 8, !tbaa !23
  %type400 = bitcast %union.tree_node* %188 to %struct.tree_type*
  %precision401 = getelementptr inbounds %struct.tree_type* %type400, i64 0, i32 6
  %bf.load402 = load i32* %precision401, align 4
  %bf.clear403 = and i32 %bf.load402, 511
  %call404 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %187, i8* getelementptr inbounds ([7 x i8]* @.str32, i64 0, i64 0), i32 %bf.clear403) #5
  %189 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add405 = add nsw i32 %189, 7
  store i32 %add405, i32* @current_sym_nchars, align 4, !tbaa !5
  %190 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %191 = tail call i64 @fwrite(i8* getelementptr inbounds ([6 x i8]* @.str33, i64 0, i64 0), i64 5, i64 1, %struct._IO_FILE* %190)
  %192 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add407 = add nsw i32 %192, 5
  store i32 %add407, i32* @current_sym_nchars, align 4, !tbaa !5
  %193 = load %union.tree_node** %type372, align 8, !tbaa !23
  tail call fastcc void @dbxout_type(%union.tree_node* %193, i32 0)
  %194 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %195 = load %union.tree_node** %type372, align 8, !tbaa !23
  %type412 = bitcast %union.tree_node* %195 to %struct.tree_type*
  %precision413 = getelementptr inbounds %struct.tree_type* %type412, i64 0, i32 6
  %bf.load414 = load i32* %precision413, align 4
  %bf.clear415 = and i32 %bf.load414, 511
  %call422 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %194, i8* getelementptr inbounds ([9 x i8]* @.str34, i64 0, i64 0), i32 %bf.clear415, i32 %bf.clear415) #5
  %196 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add423 = add nsw i32 %196, 10
  store i32 %add423, i32* @current_sym_nchars, align 4, !tbaa !5
  br label %sw.epilog902

sw.bb425:                                         ; preds = %if.end153
  %197 = load i32* @use_gnu_debug_info_extensions, align 4, !tbaa !5
  %tobool426 = icmp eq i32 %197, 0
  br i1 %tobool426, label %if.end443, label %if.then427

if.then427:                                       ; preds = %sw.bb425
  store i1 true, i1* @have_used_extensions, align 1
  %198 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %199 = tail call i64 @fwrite(i8* getelementptr inbounds ([3 x i8]* @.str26, i64 0, i64 0), i64 2, i64 1, %struct._IO_FILE* %198)
  %200 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add429 = add nsw i32 %200, 2
  store i32 %add429, i32* @current_sym_nchars, align 4, !tbaa !5
  %call430 = tail call i64 @int_size_in_bytes(%union.tree_node* %main_variant.0.type.addr.1) #5
  %mul431 = shl nsw i64 %call430, 3
  %201 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call.i1328 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %201, i8* getelementptr inbounds ([5 x i8]* @.str8, i64 0, i64 0), i64 %mul431) #5
  %cmp.i1329 = icmp slt i64 %call430, 0
  %sub.i1330 = sub nsw i64 0, %mul431
  %sub.c.i1331 = select i1 %cmp.i1329, i64 %sub.i1330, i64 %mul431
  %202 = lshr i64 %call430, 60
  %.tr1383 = trunc i64 %202 to i32
  %203 = and i32 %.tr1383, 1
  %cmp19.i1333 = icmp sgt i64 %sub.c.i1331, 0
  br i1 %cmp19.i1333, label %while.body.i1337, label %print_wide_int.exit1340

while.body.i1337:                                 ; preds = %if.then427, %while.body.i1337
  %c.addr.010.i1334 = phi i64 [ %div.i1335, %while.body.i1337 ], [ %sub.c.i1331, %if.then427 ]
  %div.i1335 = sdiv i64 %c.addr.010.i1334, 10
  %cmp1.i1336 = icmp sgt i64 %c.addr.010.i1334, 9
  br i1 %cmp1.i1336, label %while.body.i1337, label %print_wide_int.exit1340

print_wide_int.exit1340:                          ; preds = %while.body.i1337, %if.then427
  %inc2.i1338 = add nsw i32 %203, 1
  %204 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add.i1339 = add nsw i32 %inc2.i1338, %204
  store i32 %add.i1339, i32* @current_sym_nchars, align 4, !tbaa !5
  %205 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call432 = tail call i32 @putc(i32 59, %struct._IO_FILE* %205) #5
  %206 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add433 = add nsw i32 %206, 1
  store i32 %add433, i32* @current_sym_nchars, align 4, !tbaa !5
  %string_flag = getelementptr inbounds %struct.tree_type* %type49, i64 0, i32 6
  %bf.load435 = load i32* %string_flag, align 4
  %bf.clear437 = and i32 %bf.load435, 65536
  %tobool438 = icmp eq i32 %bf.clear437, 0
  br i1 %tobool438, label %if.end443, label %if.then439

if.then439:                                       ; preds = %print_wide_int.exit1340
  %207 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %208 = tail call i64 @fwrite(i8* getelementptr inbounds ([4 x i8]* @.str35, i64 0, i64 0), i64 3, i64 1, %struct._IO_FILE* %207)
  %209 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add441 = add nsw i32 %209, 3
  store i32 %add441, i32* @current_sym_nchars, align 4, !tbaa !5
  br label %if.end443

if.end443:                                        ; preds = %print_wide_int.exit1340, %sw.bb425, %if.then439
  %210 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call444 = tail call i32 @putc(i32 83, %struct._IO_FILE* %210) #5
  %211 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add445 = add nsw i32 %211, 1
  store i32 %add445, i32* @current_sym_nchars, align 4, !tbaa !5
  %values447 = getelementptr inbounds %union.tree_node* %main_variant.0.type.addr.1, i64 0, i32 0, i32 1
  %212 = load i8** %values447, align 8
  %213 = bitcast i8* %212 to %union.tree_node*
  tail call fastcc void @dbxout_type(%union.tree_node* %213, i32 0)
  br label %sw.epilog902

sw.bb448:                                         ; preds = %if.end153
  %packed_flag = getelementptr inbounds %struct.tree_type* %type49, i64 0, i32 6
  %bf.load450 = load i32* %packed_flag, align 4
  %bf.clear452 = and i32 %bf.load450, 1048576
  %tobool453 = icmp ne i32 %bf.clear452, 0
  %214 = load i32* @use_gnu_debug_info_extensions, align 4
  %tobool455 = icmp ne i32 %214, 0
  %or.cond = and i1 %tobool453, %tobool455
  br i1 %or.cond, label %if.then456, label %if.end465

if.then456:                                       ; preds = %sw.bb448
  store i1 true, i1* @have_used_extensions, align 1
  %215 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %216 = tail call i64 @fwrite(i8* getelementptr inbounds ([3 x i8]* @.str26, i64 0, i64 0), i64 2, i64 1, %struct._IO_FILE* %215)
  %217 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add458 = add nsw i32 %217, 2
  store i32 %add458, i32* @current_sym_nchars, align 4, !tbaa !5
  %call459 = tail call i64 @int_size_in_bytes(%union.tree_node* %main_variant.0.type.addr.1) #5
  %mul460 = shl nsw i64 %call459, 3
  %218 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call.i1282 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %218, i8* getelementptr inbounds ([5 x i8]* @.str8, i64 0, i64 0), i64 %mul460) #5
  %cmp.i1283 = icmp slt i64 %call459, 0
  %sub.i1284 = sub nsw i64 0, %mul460
  %sub.c.i1285 = select i1 %cmp.i1283, i64 %sub.i1284, i64 %mul460
  %219 = lshr i64 %call459, 60
  %.tr1382 = trunc i64 %219 to i32
  %220 = and i32 %.tr1382, 1
  %cmp19.i1287 = icmp sgt i64 %sub.c.i1285, 0
  br i1 %cmp19.i1287, label %while.body.i1291, label %print_wide_int.exit1294

while.body.i1291:                                 ; preds = %if.then456, %while.body.i1291
  %c.addr.010.i1288 = phi i64 [ %div.i1289, %while.body.i1291 ], [ %sub.c.i1285, %if.then456 ]
  %div.i1289 = sdiv i64 %c.addr.010.i1288, 10
  %cmp1.i1290 = icmp sgt i64 %c.addr.010.i1288, 9
  br i1 %cmp1.i1290, label %while.body.i1291, label %print_wide_int.exit1294

print_wide_int.exit1294:                          ; preds = %while.body.i1291, %if.then456
  %inc2.i1292 = add nsw i32 %220, 1
  %221 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add.i1293 = add nsw i32 %inc2.i1292, %221
  store i32 %add.i1293, i32* @current_sym_nchars, align 4, !tbaa !5
  %222 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %223 = tail call i64 @fwrite(i8* getelementptr inbounds ([6 x i8]* @.str36, i64 0, i64 0), i64 5, i64 1, %struct._IO_FILE* %222)
  %224 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add462 = add nsw i32 %224, 5
  store i32 %add462, i32* @current_sym_nchars, align 4, !tbaa !5
  %values464 = getelementptr inbounds %union.tree_node* %main_variant.0.type.addr.1, i64 0, i32 0, i32 1
  %225 = load i8** %values464, align 8
  %226 = bitcast i8* %225 to %union.tree_node*
  tail call fastcc void @dbxout_type(%union.tree_node* %226, i32 0)
  br label %sw.epilog902

if.end465:                                        ; preds = %sw.bb448
  %bf.clear470 = and i32 %bf.load450, 65536
  %tobool471 = icmp ne i32 %bf.clear470, 0
  %or.cond903 = and i1 %tobool471, %tobool455
  br i1 %or.cond903, label %if.then474, label %if.end477

if.then474:                                       ; preds = %if.end465
  store i1 true, i1* @have_used_extensions, align 1
  %227 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %228 = tail call i64 @fwrite(i8* getelementptr inbounds ([4 x i8]* @.str35, i64 0, i64 0), i64 3, i64 1, %struct._IO_FILE* %227)
  %229 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add476 = add nsw i32 %229, 3
  store i32 %add476, i32* @current_sym_nchars, align 4, !tbaa !5
  br label %if.end477

if.end477:                                        ; preds = %if.then474, %if.end465
  %values479 = getelementptr inbounds %union.tree_node* %main_variant.0.type.addr.1, i64 0, i32 0, i32 1
  %230 = load i8** %values479, align 8
  %cmp480 = icmp eq i8* %230, null
  %231 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  br i1 %cmp480, label %if.then482, label %if.else487

if.then482:                                       ; preds = %if.end477
  %232 = tail call i64 @fwrite(i8* getelementptr inbounds ([3 x i8]* @.str37, i64 0, i64 0), i64 2, i64 1, %struct._IO_FILE* %231)
  %233 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add484 = add nsw i32 %233, 2
  store i32 %add484, i32* @current_sym_nchars, align 4, !tbaa !5
  %234 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %symtab.i1222 = getelementptr inbounds %union.tree_node* %234, i64 0, i32 0, i32 10
  %address.i1223 = bitcast %union.tree_node** %symtab.i1222 to i32*
  %235 = load i32* %address.i1223, align 4, !tbaa !5
  %idxprom.i1224 = sext i32 %235 to i64
  %236 = load %struct.typeinfo** @typevec, align 8, !tbaa !1
  %237 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %file_number.i1225 = getelementptr inbounds %struct.typeinfo* %236, i64 %idxprom.i1224, i32 1
  %238 = load i32* %file_number.i1225, align 4, !tbaa !32
  %type_number.i1226 = getelementptr inbounds %struct.typeinfo* %236, i64 %idxprom.i1224, i32 2
  %239 = load i32* %type_number.i1226, align 4, !tbaa !34
  %call.i1227 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %237, i8* getelementptr inbounds ([8 x i8]* @.str57, i64 0, i64 0), i32 %238, i32 %239) #5
  %240 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add.i1228 = add nsw i32 %240, 9
  store i32 %add.i1228, i32* @current_sym_nchars, align 4, !tbaa !5
  %241 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %242 = tail call i64 @fwrite(i8* getelementptr inbounds ([7 x i8]* @.str38, i64 0, i64 0), i64 6, i64 1, %struct._IO_FILE* %241)
  %243 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add486 = add nsw i32 %243, 6
  store i32 %add486, i32* @current_sym_nchars, align 4, !tbaa !5
  br label %if.end490

if.else487:                                       ; preds = %if.end477
  %244 = bitcast i8* %230 to %union.tree_node*
  %fputc1062 = tail call i32 @fputc(i32 97, %struct._IO_FILE* %231) #5
  %245 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add489 = add nsw i32 %245, 1
  store i32 %add489, i32* @current_sym_nchars, align 4, !tbaa !5
  tail call fastcc void @dbxout_range_type(%union.tree_node* %244)
  br label %if.end490

if.end490:                                        ; preds = %if.else487, %if.then482
  %type492 = getelementptr inbounds %union.tree_node* %main_variant.0.type.addr.1, i64 0, i32 0, i32 0, i32 1
  %246 = load %union.tree_node** %type492, align 8, !tbaa !23
  tail call fastcc void @dbxout_type(%union.tree_node* %246, i32 0)
  br label %sw.epilog902

sw.bb493:                                         ; preds = %if.end153, %if.end153, %if.end153
  %247 = getelementptr inbounds %union.tree_node* %main_variant.0.type.addr.1, i64 0, i32 0, i32 16
  %248 = load %union.tree_node** %247, align 8, !tbaa !39
  %cmp495 = icmp eq %union.tree_node* %248, null
  br i1 %cmp495, label %if.end519, label %land.lhs.true497

land.lhs.true497:                                 ; preds = %sw.bb493
  %code501 = getelementptr inbounds %union.tree_node* %248, i64 0, i32 0, i32 0, i32 2
  %bf.load502 = load i32* %code501, align 8
  %bf.clear503 = and i32 %bf.load502, 255
  %cmp504 = icmp eq i32 %bf.clear503, 3
  br i1 %cmp504, label %land.lhs.true506, label %if.end519

land.lhs.true506:                                 ; preds = %land.lhs.true497
  %a = getelementptr inbounds %union.tree_node* %248, i64 0, i32 0, i32 2
  %arrayidx509 = getelementptr inbounds i32* %a, i64 8
  %249 = bitcast i32* %arrayidx509 to %union.tree_node**
  %250 = load %union.tree_node** %249, align 8, !tbaa !1
  %cmp510 = icmp eq %union.tree_node* %250, null
  br i1 %cmp510, label %if.end519, label %if.then512

if.then512:                                       ; preds = %land.lhs.true506
  %length = getelementptr inbounds %union.tree_node* %250, i64 0, i32 0, i32 1
  %251 = bitcast i8** %length to i32*
  %252 = load i32* %251, align 4, !tbaa !40
  br label %if.end519

if.end519:                                        ; preds = %land.lhs.true506, %sw.bb493, %if.then512, %land.lhs.true497
  %n_baseclasses.0 = phi i32 [ %252, %if.then512 ], [ 0, %land.lhs.true506 ], [ 0, %land.lhs.true497 ], [ 0, %sw.bb493 ]
  %253 = getelementptr inbounds %union.tree_node* %main_variant.0.type.addr.1, i64 0, i32 0, i32 11
  %254 = load %union.tree_node** %253, align 8, !tbaa !12
  %cmp522 = icmp eq %union.tree_node* %254, null
  br i1 %cmp522, label %lor.lhs.false544, label %land.lhs.true524

land.lhs.true524:                                 ; preds = %if.end519
  %code528 = getelementptr inbounds %union.tree_node* %254, i64 0, i32 0, i32 0, i32 2
  %bf.load529 = load i32* %code528, align 8
  %bf.clear530 = and i32 %bf.load529, 255
  %cmp531 = icmp eq i32 %bf.clear530, 33
  br i1 %cmp531, label %land.lhs.true533, label %land.lhs.true542

land.lhs.true533:                                 ; preds = %land.lhs.true524
  %ignored_flag = getelementptr inbounds %union.tree_node* %254, i64 0, i32 0, i32 5
  %255 = bitcast i48* %ignored_flag to i64*
  %bf.load537 = load i64* %255, align 8
  %bf.cast540 = and i64 %bf.load537, 16384
  %tobool541 = icmp ne i64 %bf.cast540, 0
  %tobool543 = icmp ne i32 %full.addr.01422, 0
  %or.cond904 = or i1 %tobool541, %tobool543
  br i1 %or.cond904, label %lor.lhs.false544, label %if.then554

land.lhs.true542:                                 ; preds = %land.lhs.true524
  %tobool543.old = icmp eq i32 %full.addr.01422, 0
  br i1 %tobool543.old, label %if.then554, label %lor.lhs.false544

lor.lhs.false544:                                 ; preds = %land.lhs.true542, %if.end519, %land.lhs.true533
  %size546 = getelementptr inbounds %union.tree_node* %main_variant.0.type.addr.1, i64 0, i32 0, i32 2
  %256 = bitcast i32* %size546 to %union.tree_node**
  %257 = load %union.tree_node** %256, align 8, !tbaa !30
  %cmp547 = icmp eq %union.tree_node* %257, null
  br i1 %cmp547, label %if.then554, label %lor.lhs.false549

lor.lhs.false549:                                 ; preds = %lor.lhs.false544
  %call552 = tail call i32 @host_integerp(%union.tree_node* %257, i32 1) #5
  %tobool553 = icmp eq i32 %call552, 0
  %bf.load557.pre = load i32* %readonly_flag, align 8
  br i1 %tobool553, label %if.then554, label %if.end582

if.then554:                                       ; preds = %lor.lhs.false549, %land.lhs.true542, %lor.lhs.false544, %land.lhs.true533
  %bf.load557 = phi i32 [ %bf.load98, %land.lhs.true542 ], [ %bf.load98, %lor.lhs.false544 ], [ %bf.load98, %land.lhs.true533 ], [ %bf.load557.pre, %lor.lhs.false549 ]
  %bf.clear558 = and i32 %bf.load557, 255
  %cmp559 = icmp eq i32 %bf.clear558, 20
  %cond561 = select i1 %cmp559, i8* getelementptr inbounds ([3 x i8]* @.str40, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8]* @.str41, i64 0, i64 0)
  %258 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %259 = tail call i64 @fwrite(i8* %cond561, i64 2, i64 1, %struct._IO_FILE* %258)
  %260 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add563 = add nsw i32 %260, 2
  store i32 %add563, i32* @current_sym_nchars, align 4, !tbaa !5
  %261 = load %union.tree_node** %253, align 8, !tbaa !12
  %cmp566 = icmp eq %union.tree_node* %261, null
  br i1 %cmp566, label %if.else569, label %if.end.i1205

if.end.i1205:                                     ; preds = %if.then554
  %code.i1202 = getelementptr inbounds %union.tree_node* %261, i64 0, i32 0, i32 0, i32 2
  %bf.load.i1203 = load i32* %code.i1202, align 8
  %bf.clear.i1204 = and i32 %bf.load.i1203, 255
  switch i32 %bf.clear.i1204, label %if.else19.i1208 [
    i32 1, label %dbxout_type_name.exit1214
    i32 33, label %if.then15.i1207
  ]

if.then15.i1207:                                  ; preds = %if.end.i1205
  %name18.i1206 = getelementptr inbounds %union.tree_node* %261, i64 0, i32 0, i32 8
  %262 = load %union.tree_node** %name18.i1206, align 8, !tbaa !21
  br label %dbxout_type_name.exit1214

if.else19.i1208:                                  ; preds = %if.end.i1205
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str6, i64 0, i64 0), i32 1825, i8* getelementptr inbounds ([17 x i8]* @__FUNCTION__.dbxout_type_name, i64 0, i64 0)) #6
  unreachable

dbxout_type_name.exit1214:                        ; preds = %if.end.i1205, %if.then15.i1207
  %t.0.i1209 = phi %union.tree_node* [ %262, %if.then15.i1207 ], [ %261, %if.end.i1205 ]
  %263 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %id.i1210 = getelementptr inbounds %union.tree_node* %t.0.i1209, i64 0, i32 0, i32 1
  %264 = getelementptr inbounds i8** %id.i1210, i64 1
  %265 = load i8** %264, align 8, !tbaa !28
  %fputs.i1211 = tail call i32 @fputs(i8* %265, %struct._IO_FILE* %263) #5
  %len.i1212 = bitcast i8** %id.i1210 to i32*
  %266 = load i32* %len.i1212, align 4, !tbaa !24
  %267 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add.i1213 = add i32 %267, %266
  br label %if.end573

if.else569:                                       ; preds = %if.then554
  %268 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %269 = load i32* @dbxout_type.anonymous_type_number, align 4, !tbaa !5
  %inc570 = add nsw i32 %269, 1
  store i32 %inc570, i32* @dbxout_type.anonymous_type_number, align 4, !tbaa !5
  %call571 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %268, i8* getelementptr inbounds ([5 x i8]* @.str42, i64 0, i64 0), i32 %269) #5
  %270 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add572 = add nsw i32 %270, 5
  br label %if.end573

if.end573:                                        ; preds = %if.else569, %dbxout_type_name.exit1214
  %storemerge1381 = phi i32 [ %add.i1213, %dbxout_type_name.exit1214 ], [ %add572, %if.else569 ]
  store i32 %storemerge1381, i32* @current_sym_nchars, align 4, !tbaa !5
  %271 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %fputc1059 = tail call i32 @fputc(i32 58, %struct._IO_FILE* %271) #5
  %272 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add575 = add nsw i32 %272, 1
  store i32 %add575, i32* @current_sym_nchars, align 4, !tbaa !5
  %273 = load i32* %address, align 4, !tbaa !5
  %idxprom579 = sext i32 %273 to i64
  %274 = load %struct.typeinfo** @typevec, align 8, !tbaa !1
  %status581 = getelementptr inbounds %struct.typeinfo* %274, i64 %idxprom579, i32 0
  store i32 1, i32* %status581, align 4, !tbaa !35
  br label %sw.epilog902

if.end582:                                        ; preds = %lor.lhs.false549
  %bf.clear586 = and i32 %bf.load557.pre, 255
  %cmp587 = icmp eq i32 %bf.clear586, 20
  %cond589 = select i1 %cmp587, i32 115, i32 117
  %275 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call590 = tail call i32 @putc(i32 %cond589, %struct._IO_FILE* %275) #5
  %276 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add591 = add nsw i32 %276, 1
  store i32 %add591, i32* @current_sym_nchars, align 4, !tbaa !5
  %call592 = tail call i64 @int_size_in_bytes(%union.tree_node* %main_variant.0.type.addr.1) #5
  %277 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call.i1173 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %277, i8* getelementptr inbounds ([5 x i8]* @.str8, i64 0, i64 0), i64 %call592) #5
  %cmp.i1174 = icmp slt i64 %call592, 0
  %sub.i1175 = sub nsw i64 0, %call592
  %sub.c.i1176 = select i1 %cmp.i1174, i64 %sub.i1175, i64 %call592
  %c.lobit.i1177 = lshr i64 %call592, 63
  %278 = trunc i64 %c.lobit.i1177 to i32
  %cmp19.i1178 = icmp sgt i64 %sub.c.i1176, 0
  br i1 %cmp19.i1178, label %while.body.i1182, label %print_wide_int.exit1185

while.body.i1182:                                 ; preds = %if.end582, %while.body.i1182
  %c.addr.010.i1179 = phi i64 [ %div.i1180, %while.body.i1182 ], [ %sub.c.i1176, %if.end582 ]
  %div.i1180 = sdiv i64 %c.addr.010.i1179, 10
  %cmp1.i1181 = icmp sgt i64 %c.addr.010.i1179, 9
  br i1 %cmp1.i1181, label %while.body.i1182, label %print_wide_int.exit1185

print_wide_int.exit1185:                          ; preds = %while.body.i1182, %if.end582
  %inc2.i1183 = add nsw i32 %278, 1
  %279 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add.i1184 = add nsw i32 %inc2.i1183, %279
  store i32 %add.i1184, i32* @current_sym_nchars, align 4, !tbaa !5
  %280 = load i32* @use_gnu_debug_info_extensions, align 4, !tbaa !5
  %tobool593 = icmp ne i32 %280, 0
  %tobool595 = icmp ne i32 %n_baseclasses.0, 0
  %or.cond908 = and i1 %tobool593, %tobool595
  br i1 %or.cond908, label %if.then596, label %for.cond.preheader

if.then596:                                       ; preds = %print_wide_int.exit1185
  store i1 true, i1* @have_used_extensions, align 1
  %281 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call597 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %281, i8* getelementptr inbounds ([5 x i8]* @.str44, i64 0, i64 0), i32 %n_baseclasses.0) #5
  %282 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add598 = add nsw i32 %282, 8
  store i32 %add598, i32* @current_sym_nchars, align 4, !tbaa !5
  br label %for.cond.preheader

for.cond.preheader:                               ; preds = %if.then596, %print_wide_int.exit1185
  %cmp6011401 = icmp sgt i32 %n_baseclasses.0, 0
  br i1 %cmp6011401, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %283 = load i8** getelementptr inbounds (%struct.lang_hooks* @lang_hooks, i64 0, i32 0), align 8, !tbaa !42
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.inc ]
  %284 = load %union.tree_node** %247, align 8, !tbaa !39
  %a607 = getelementptr inbounds %union.tree_node* %284, i64 0, i32 0, i32 2
  %arrayidx608 = getelementptr inbounds i32* %a607, i64 8
  %285 = bitcast i32* %arrayidx608 to %union.tree_node**
  %286 = load %union.tree_node** %285, align 8, !tbaa !1
  %a610 = getelementptr inbounds %union.tree_node* %286, i64 0, i32 0, i32 2
  %287 = bitcast i32* %a610 to [1 x %union.tree_node*]*
  %arrayidx611 = getelementptr inbounds [1 x %union.tree_node*]* %287, i64 0, i64 %indvars.iv
  %288 = load %union.tree_node** %arrayidx611, align 8, !tbaa !1
  %289 = load i32* @use_gnu_debug_info_extensions, align 4, !tbaa !5
  %tobool612 = icmp eq i32 %289, 0
  br i1 %tobool612, label %if.else658, label %if.then613

if.then613:                                       ; preds = %for.body
  store i1 true, i1* @have_used_extensions, align 1
  %static_flag = getelementptr inbounds %union.tree_node* %288, i64 0, i32 0, i32 0, i32 2
  %bf.load615 = load i32* %static_flag, align 8
  %bf.clear617 = lshr i32 %bf.load615, 18
  %290 = and i32 %bf.clear617, 1
  %291 = or i32 %290, 48
  %292 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call620 = tail call i32 @putc(i32 %291, %struct._IO_FILE* %292) #5
  %bf.load622 = load i32* %static_flag, align 8
  %bf.clear624 = lshr i32 %bf.load622, 18
  %293 = and i32 %bf.clear624, 2
  %294 = or i32 %293, 48
  %295 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call627 = tail call i32 @putc(i32 %294, %struct._IO_FILE* %295) #5
  %296 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add628 = add nsw i32 %296, 2
  store i32 %add628, i32* @current_sym_nchars, align 4, !tbaa !5
  %bf.load631 = load i32* %static_flag, align 8
  %bf.clear633 = and i32 %bf.load631, 262144
  %tobool634 = icmp eq i32 %bf.clear633, 0
  br i1 %tobool634, label %if.else645, label %land.lhs.true635

land.lhs.true635:                                 ; preds = %if.then613
  %call636 = tail call i32 @strcmp(i8* %283, i8* getelementptr inbounds ([8 x i8]* @.str15, i64 0, i64 0)) #5
  %cmp637 = icmp eq i32 %call636, 0
  br i1 %cmp637, label %if.then639, label %if.else645

if.then639:                                       ; preds = %land.lhs.true635
  %a641 = getelementptr inbounds %union.tree_node* %288, i64 0, i32 0, i32 2
  %arrayidx642 = getelementptr inbounds i32* %a641, i64 10
  %297 = bitcast i32* %arrayidx642 to %union.tree_node**
  %298 = load %union.tree_node** %297, align 8, !tbaa !1
  %call643 = tail call i64 @tree_low_cst(%union.tree_node* %298, i32 0) #5
  %mul644 = shl nsw i64 %call643, 3
  %299 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call.i1160 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %299, i8* getelementptr inbounds ([5 x i8]* @.str8, i64 0, i64 0), i64 %mul644) #5
  %cmp.i1161 = icmp slt i64 %call643, 0
  %sub.i1162 = sub nsw i64 0, %mul644
  %sub.c.i1163 = select i1 %cmp.i1161, i64 %sub.i1162, i64 %mul644
  %300 = lshr i64 %call643, 60
  %.tr1378 = trunc i64 %300 to i32
  %301 = and i32 %.tr1378, 1
  %cmp19.i1165 = icmp sgt i64 %sub.c.i1163, 0
  br i1 %cmp19.i1165, label %while.body.i1169, label %print_wide_int.exit1172

while.body.i1169:                                 ; preds = %if.then639, %while.body.i1169
  %c.addr.010.i1166 = phi i64 [ %div.i1167, %while.body.i1169 ], [ %sub.c.i1163, %if.then639 ]
  %div.i1167 = sdiv i64 %c.addr.010.i1166, 10
  %cmp1.i1168 = icmp sgt i64 %c.addr.010.i1166, 9
  br i1 %cmp1.i1168, label %while.body.i1169, label %print_wide_int.exit1172

print_wide_int.exit1172:                          ; preds = %while.body.i1169, %if.then639
  %inc2.i1170 = add nsw i32 %301, 1
  %302 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add.i1171 = add nsw i32 %inc2.i1170, %302
  br label %if.end651

if.else645:                                       ; preds = %if.then613, %land.lhs.true635
  %a647 = getelementptr inbounds %union.tree_node* %288, i64 0, i32 0, i32 2
  %arrayidx648 = getelementptr inbounds i32* %a647, i64 2
  %303 = bitcast i32* %arrayidx648 to %union.tree_node**
  %304 = load %union.tree_node** %303, align 8, !tbaa !1
  %call649 = tail call i64 @tree_low_cst(%union.tree_node* %304, i32 0) #5
  %mul650 = shl nsw i64 %call649, 3
  %305 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call.i1147 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %305, i8* getelementptr inbounds ([5 x i8]* @.str8, i64 0, i64 0), i64 %mul650) #5
  %cmp.i1148 = icmp slt i64 %call649, 0
  %sub.i1149 = sub nsw i64 0, %mul650
  %sub.c.i1150 = select i1 %cmp.i1148, i64 %sub.i1149, i64 %mul650
  %306 = lshr i64 %call649, 60
  %.tr = trunc i64 %306 to i32
  %307 = and i32 %.tr, 1
  %cmp19.i1152 = icmp sgt i64 %sub.c.i1150, 0
  br i1 %cmp19.i1152, label %while.body.i1156, label %print_wide_int.exit1159

while.body.i1156:                                 ; preds = %if.else645, %while.body.i1156
  %c.addr.010.i1153 = phi i64 [ %div.i1154, %while.body.i1156 ], [ %sub.c.i1150, %if.else645 ]
  %div.i1154 = sdiv i64 %c.addr.010.i1153, 10
  %cmp1.i1155 = icmp sgt i64 %c.addr.010.i1153, 9
  br i1 %cmp1.i1155, label %while.body.i1156, label %print_wide_int.exit1159

print_wide_int.exit1159:                          ; preds = %while.body.i1156, %if.else645
  %inc2.i1157 = add nsw i32 %307, 1
  %308 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add.i1158 = add nsw i32 %inc2.i1157, %308
  br label %if.end651

if.end651:                                        ; preds = %print_wide_int.exit1159, %print_wide_int.exit1172
  %storemerge1377 = phi i32 [ %add.i1158, %print_wide_int.exit1159 ], [ %add.i1171, %print_wide_int.exit1172 ]
  store i32 %storemerge1377, i32* @current_sym_nchars, align 4, !tbaa !5
  %309 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call652 = tail call i32 @putc(i32 44, %struct._IO_FILE* %309) #5
  %310 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add653 = add nsw i32 %310, 1
  store i32 %add653, i32* @current_sym_nchars, align 4, !tbaa !5
  %type655 = getelementptr inbounds %union.tree_node* %288, i64 0, i32 0, i32 0, i32 1
  %311 = load %union.tree_node** %type655, align 8, !tbaa !23
  tail call fastcc void @dbxout_type(%union.tree_node* %311, i32 0)
  %312 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call656 = tail call i32 @putc(i32 59, %struct._IO_FILE* %312) #5
  br label %for.inc

if.else658:                                       ; preds = %for.body
  %type660 = getelementptr inbounds %union.tree_node* %288, i64 0, i32 0, i32 0, i32 1
  %313 = load %union.tree_node** %type660, align 8, !tbaa !23
  %.idx = getelementptr %union.tree_node* %313, i64 0, i32 0, i32 11
  %.idx.val = load %union.tree_node** %.idx, align 8, !tbaa !12
  %cmp.i1130 = icmp eq %union.tree_node* %.idx.val, null
  br i1 %cmp.i1130, label %if.then.i1131, label %if.end.i1135

if.then.i1131:                                    ; preds = %if.else658
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str6, i64 0, i64 0), i32 1815, i8* getelementptr inbounds ([17 x i8]* @__FUNCTION__.dbxout_type_name, i64 0, i64 0)) #6
  unreachable

if.end.i1135:                                     ; preds = %if.else658
  %code.i1132 = getelementptr inbounds %union.tree_node* %.idx.val, i64 0, i32 0, i32 0, i32 2
  %bf.load.i1133 = load i32* %code.i1132, align 8
  %bf.clear.i1134 = and i32 %bf.load.i1133, 255
  switch i32 %bf.clear.i1134, label %if.else19.i1138 [
    i32 1, label %dbxout_type_name.exit1144
    i32 33, label %if.then15.i1137
  ]

if.then15.i1137:                                  ; preds = %if.end.i1135
  %name18.i1136 = getelementptr inbounds %union.tree_node* %.idx.val, i64 0, i32 0, i32 8
  %314 = load %union.tree_node** %name18.i1136, align 8, !tbaa !21
  br label %dbxout_type_name.exit1144

if.else19.i1138:                                  ; preds = %if.end.i1135
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str6, i64 0, i64 0), i32 1825, i8* getelementptr inbounds ([17 x i8]* @__FUNCTION__.dbxout_type_name, i64 0, i64 0)) #6
  unreachable

dbxout_type_name.exit1144:                        ; preds = %if.end.i1135, %if.then15.i1137
  %t.0.i1139 = phi %union.tree_node* [ %314, %if.then15.i1137 ], [ %.idx.val, %if.end.i1135 ]
  %315 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %id.i1140 = getelementptr inbounds %union.tree_node* %t.0.i1139, i64 0, i32 0, i32 1
  %316 = getelementptr inbounds i8** %id.i1140, i64 1
  %317 = load i8** %316, align 8, !tbaa !28
  %fputs.i1141 = tail call i32 @fputs(i8* %317, %struct._IO_FILE* %315) #5
  %len.i1142 = bitcast i8** %id.i1140 to i32*
  %318 = load i32* %len.i1142, align 4, !tbaa !24
  %319 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add.i1143 = add i32 %319, %318
  store i32 %add.i1143, i32* @current_sym_nchars, align 4, !tbaa !5
  %320 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call661 = tail call i32 @putc(i32 58, %struct._IO_FILE* %320) #5
  %321 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add662 = add nsw i32 %321, 1
  store i32 %add662, i32* @current_sym_nchars, align 4, !tbaa !5
  %322 = load %union.tree_node** %type660, align 8, !tbaa !23
  tail call fastcc void @dbxout_type(%union.tree_node* %322, i32 %full.addr.01422)
  %323 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call665 = tail call i32 @putc(i32 44, %struct._IO_FILE* %323) #5
  %324 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add666 = add nsw i32 %324, 1
  store i32 %add666, i32* @current_sym_nchars, align 4, !tbaa !5
  %a668 = getelementptr inbounds %union.tree_node* %288, i64 0, i32 0, i32 2
  %arrayidx669 = getelementptr inbounds i32* %a668, i64 2
  %325 = bitcast i32* %arrayidx669 to %union.tree_node**
  %326 = load %union.tree_node** %325, align 8, !tbaa !1
  %call670 = tail call i64 @tree_low_cst(%union.tree_node* %326, i32 0) #5
  %mul671 = shl nsw i64 %call670, 3
  %327 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call.i1117 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %327, i8* getelementptr inbounds ([5 x i8]* @.str8, i64 0, i64 0), i64 %mul671) #5
  %cmp.i1118 = icmp slt i64 %call670, 0
  %sub.i1119 = sub nsw i64 0, %mul671
  %sub.c.i1120 = select i1 %cmp.i1118, i64 %sub.i1119, i64 %mul671
  %328 = lshr i64 %call670, 60
  %.tr1379 = trunc i64 %328 to i32
  %329 = and i32 %.tr1379, 1
  %cmp19.i1122 = icmp sgt i64 %sub.c.i1120, 0
  br i1 %cmp19.i1122, label %while.body.i1126, label %print_wide_int.exit1129

while.body.i1126:                                 ; preds = %dbxout_type_name.exit1144, %while.body.i1126
  %c.addr.010.i1123 = phi i64 [ %div.i1124, %while.body.i1126 ], [ %sub.c.i1120, %dbxout_type_name.exit1144 ]
  %div.i1124 = sdiv i64 %c.addr.010.i1123, 10
  %cmp1.i1125 = icmp sgt i64 %c.addr.010.i1123, 9
  br i1 %cmp1.i1125, label %while.body.i1126, label %print_wide_int.exit1129

print_wide_int.exit1129:                          ; preds = %while.body.i1126, %dbxout_type_name.exit1144
  %inc2.i1127 = add nsw i32 %329, 1
  %330 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add.i1128 = add nsw i32 %inc2.i1127, %330
  store i32 %add.i1128, i32* @current_sym_nchars, align 4, !tbaa !5
  %331 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call672 = tail call i32 @putc(i32 44, %struct._IO_FILE* %331) #5
  %332 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add673 = add nsw i32 %332, 1
  store i32 %add673, i32* @current_sym_nchars, align 4, !tbaa !5
  %333 = load %union.tree_node** %type660, align 8, !tbaa !23
  %334 = getelementptr inbounds %union.tree_node* %333, i64 0, i32 0, i32 11
  %335 = load %union.tree_node** %334, align 8, !tbaa !12
  %size679 = getelementptr inbounds %union.tree_node* %335, i64 0, i32 0, i32 4
  %336 = load %union.tree_node** %size679, align 8, !tbaa !48
  %call680 = tail call i64 @tree_low_cst(%union.tree_node* %336, i32 0) #5
  %mul681 = shl nsw i64 %call680, 3
  %337 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call.i1104 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %337, i8* getelementptr inbounds ([5 x i8]* @.str8, i64 0, i64 0), i64 %mul681) #5
  %cmp.i1105 = icmp slt i64 %call680, 0
  %sub.i1106 = sub nsw i64 0, %mul681
  %sub.c.i1107 = select i1 %cmp.i1105, i64 %sub.i1106, i64 %mul681
  %338 = lshr i64 %call680, 60
  %.tr1380 = trunc i64 %338 to i32
  %339 = and i32 %.tr1380, 1
  %cmp19.i1109 = icmp sgt i64 %sub.c.i1107, 0
  br i1 %cmp19.i1109, label %while.body.i1113, label %print_wide_int.exit1116

while.body.i1113:                                 ; preds = %print_wide_int.exit1129, %while.body.i1113
  %c.addr.010.i1110 = phi i64 [ %div.i1111, %while.body.i1113 ], [ %sub.c.i1107, %print_wide_int.exit1129 ]
  %div.i1111 = sdiv i64 %c.addr.010.i1110, 10
  %cmp1.i1112 = icmp sgt i64 %c.addr.010.i1110, 9
  br i1 %cmp1.i1112, label %while.body.i1113, label %print_wide_int.exit1116

print_wide_int.exit1116:                          ; preds = %while.body.i1113, %print_wide_int.exit1129
  %inc2.i1114 = add nsw i32 %339, 1
  %340 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add.i1115 = add nsw i32 %inc2.i1114, %340
  store i32 %add.i1115, i32* @current_sym_nchars, align 4, !tbaa !5
  %341 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call682 = tail call i32 @putc(i32 59, %struct._IO_FILE* %341) #5
  br label %for.inc

for.inc:                                          ; preds = %if.end651, %print_wide_int.exit1116
  %storemerge.in = load i32* @current_sym_nchars, align 4
  %storemerge = add nsw i32 %storemerge.in, 1
  store i32 %storemerge, i32* @current_sym_nchars, align 4, !tbaa !5
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %342 = trunc i64 %indvars.iv.next to i32
  %cmp601 = icmp slt i32 %342, %n_baseclasses.0
  br i1 %cmp601, label %for.body, label %for.end

for.end:                                          ; preds = %for.inc, %for.cond.preheader
  %values.i = getelementptr inbounds %union.tree_node* %main_variant.0.type.addr.1, i64 0, i32 0, i32 1
  %343 = load i8** %values.i, align 8
  %tobool.i1398 = icmp eq i8* %343, null
  br i1 %tobool.i1398, label %dbxout_type_fields.exit, label %for.body.i.lr.ph

for.body.i.lr.ph:                                 ; preds = %for.end
  %344 = bitcast i8* %343 to %union.tree_node*
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.lr.ph, %for.inc.i
  %tem.0.i1399 = phi %union.tree_node* [ %344, %for.body.i.lr.ph ], [ %388, %for.inc.i ]
  %code.i1341 = getelementptr inbounds %union.tree_node* %tem.0.i1399, i64 0, i32 0, i32 0, i32 2
  %bf.load.i1342 = load i32* %code.i1341, align 8
  %bf.clear.i1343 = and i32 %bf.load.i1342, 255
  switch i32 %bf.clear.i1343, label %lor.lhs.false16.i [
    i32 33, label %for.inc.i
    i32 37, label %land.lhs.true.i
  ]

land.lhs.true.i:                                  ; preds = %for.body.i
  %call.i1344 = tail call %union.tree_node* @bit_position(%union.tree_node* %tem.0.i1399) #5
  %call7.i = tail call i32 @host_integerp(%union.tree_node* %call.i1344, i32 0) #5
  %tobool8.i = icmp eq i32 %call7.i, 0
  br i1 %tobool8.i, label %for.inc.i, label %lor.lhs.false9.i

lor.lhs.false9.i:                                 ; preds = %land.lhs.true.i
  %size.i = getelementptr inbounds %union.tree_node* %tem.0.i1399, i64 0, i32 0, i32 4
  %345 = load %union.tree_node** %size.i, align 8, !tbaa !48
  %tobool10.i = icmp eq %union.tree_node* %345, null
  br i1 %tobool10.i, label %for.inc.i, label %lor.lhs.false11.i

lor.lhs.false11.i:                                ; preds = %lor.lhs.false9.i
  %call14.i = tail call i32 @host_integerp(%union.tree_node* %345, i32 1) #5
  %tobool15.i = icmp eq i32 %call14.i, 0
  br i1 %tobool15.i, label %for.inc.i, label %lor.lhs.false16.i

lor.lhs.false16.i:                                ; preds = %lor.lhs.false11.i, %for.body.i
  %ignored_flag.i = getelementptr inbounds %union.tree_node* %tem.0.i1399, i64 0, i32 0, i32 5
  %346 = bitcast i48* %ignored_flag.i to i64*
  %bf.load18.i = load i64* %346, align 8
  %bf.cast.i = and i64 %bf.load18.i, 16384
  %tobool20.i = icmp eq i64 %bf.cast.i, 0
  br i1 %tobool20.i, label %if.else.i, label %for.inc.i

if.else.i:                                        ; preds = %lor.lhs.false16.i
  %bf.load23.i = load i32* %code.i1341, align 8
  %bf.clear24.i = and i32 %bf.load23.i, 255
  %cmp25.i = icmp eq i32 %bf.clear24.i, 32
  br i1 %cmp25.i, label %for.inc.i, label %if.then26.i

if.then26.i:                                      ; preds = %if.else.i
  %name.i = getelementptr inbounds %union.tree_node* %tem.0.i1399, i64 0, i32 0, i32 8
  %347 = load %union.tree_node** %name.i, align 8, !tbaa !21
  %tobool32.i = icmp eq %union.tree_node* %347, null
  %348 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  br i1 %tobool32.i, label %if.else42.i, label %if.then33.i

if.then33.i:                                      ; preds = %if.then26.i
  %id.i1345 = getelementptr inbounds %union.tree_node* %347, i64 0, i32 0, i32 1
  %349 = getelementptr inbounds i8** %id.i1345, i64 1
  %350 = load i8** %349, align 8, !tbaa !28
  %call36.i = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %348, i8* getelementptr inbounds ([4 x i8]* @.str46, i64 0, i64 0), i8* %350) #5
  %351 = load %union.tree_node** %name.i, align 8, !tbaa !21
  %id40.i = getelementptr inbounds %union.tree_node* %351, i64 0, i32 0, i32 1
  %len.i1346 = bitcast i8** %id40.i to i32*
  %352 = load i32* %len.i1346, align 4, !tbaa !24
  %add.i1347 = add i32 %352, 2
  %353 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add41.i = add i32 %add.i1347, %353
  br label %if.end45.i

if.else42.i:                                      ; preds = %if.then26.i
  %fputc.i = tail call i32 @fputc(i32 58, %struct._IO_FILE* %348) #5
  %354 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add44.i = add nsw i32 %354, 1
  br label %if.end45.i

if.end45.i:                                       ; preds = %if.else42.i, %if.then33.i
  %storemerge.i = phi i32 [ %add44.i, %if.else42.i ], [ %add41.i, %if.then33.i ]
  store i32 %storemerge.i, i32* @current_sym_nchars, align 4, !tbaa !5
  %355 = load i32* @use_gnu_debug_info_extensions, align 4, !tbaa !5
  %tobool46.i = icmp eq i32 %355, 0
  br i1 %tobool46.i, label %if.end82.i, label %land.lhs.true47.i

land.lhs.true47.i:                                ; preds = %if.end45.i
  %bf.load49.i = load i32* %code.i1341, align 8
  %356 = and i32 %bf.load49.i, 3145983
  %357 = icmp eq i32 %356, 37
  br i1 %357, label %if.end82.i, label %if.then65.i

if.then65.i:                                      ; preds = %land.lhs.true47.i
  store i1 true, i1* @have_used_extensions, align 1
  %358 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call66.i = tail call i32 @putc(i32 47, %struct._IO_FILE* %358) #5
  %bf.load69.i = load i32* %code.i1341, align 8
  %bf.clear71.i = and i32 %bf.load69.i, 1048576
  %tobool72.i = icmp eq i32 %bf.clear71.i, 0
  br i1 %tobool72.i, label %cond.false.i, label %cond.end.i

cond.false.i:                                     ; preds = %if.then65.i
  %bf.clear77.i = lshr i32 %bf.load69.i, 21
  %359 = and i32 %bf.clear77.i, 1
  %360 = sub i32 50, %359
  br label %cond.end.i

cond.end.i:                                       ; preds = %cond.false.i, %if.then65.i
  %cond79.i = phi i32 [ %360, %cond.false.i ], [ 48, %if.then65.i ]
  %361 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call80.i = tail call i32 @putc(i32 %cond79.i, %struct._IO_FILE* %361) #5
  %362 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add81.i = add nsw i32 %362, 2
  store i32 %add81.i, i32* @current_sym_nchars, align 4, !tbaa !5
  br label %if.end82.i

if.end82.i:                                       ; preds = %cond.end.i, %land.lhs.true47.i, %if.end45.i
  %bf.load85.i = load i32* %code.i1341, align 8
  %bf.clear86.i = and i32 %bf.load85.i, 255
  %cmp87.i = icmp eq i32 %bf.clear86.i, 37
  br i1 %cmp87.i, label %land.lhs.true88.i, label %cond.false94.i

land.lhs.true88.i:                                ; preds = %if.end82.i
  %result.i = getelementptr inbounds %union.tree_node* %tem.0.i1399, i64 0, i32 0, i32 11
  %363 = load %union.tree_node** %result.i, align 8, !tbaa !20
  %tobool90.i = icmp eq %union.tree_node* %363, null
  br i1 %tobool90.i, label %cond.false94.i, label %cond.end97.i

cond.false94.i:                                   ; preds = %land.lhs.true88.i, %if.end82.i
  %type96.i = getelementptr inbounds %union.tree_node* %tem.0.i1399, i64 0, i32 0, i32 0, i32 1
  %364 = load %union.tree_node** %type96.i, align 8, !tbaa !23
  br label %cond.end97.i

cond.end97.i:                                     ; preds = %cond.false94.i, %land.lhs.true88.i
  %cond98.i = phi %union.tree_node* [ %364, %cond.false94.i ], [ %363, %land.lhs.true88.i ]
  tail call fastcc void @dbxout_type(%union.tree_node* %cond98.i, i32 0) #5
  %bf.load101.i = load i32* %code.i1341, align 8
  %bf.clear102.i = and i32 %bf.load101.i, 255
  %cmp103.i = icmp eq i32 %bf.clear102.i, 34
  br i1 %cmp103.i, label %if.then104.i, label %if.else134.i

if.then104.i:                                     ; preds = %cond.end97.i
  %bf.clear108.i = and i32 %bf.load101.i, 262144
  %tobool109.i = icmp ne i32 %bf.clear108.i, 0
  %365 = load i32* @use_gnu_debug_info_extensions, align 4
  %tobool111.i = icmp ne i32 %365, 0
  %or.cond.i = and i1 %tobool109.i, %tobool111.i
  br i1 %or.cond.i, label %if.then112.i, label %if.else130.i

if.then112.i:                                     ; preds = %if.then104.i
  %assembler_name.i = getelementptr inbounds %union.tree_node* %tem.0.i1399, i64 0, i32 0, i32 14
  %366 = load %union.tree_node** %assembler_name.i, align 8, !tbaa !27
  %cmp115.i = icmp eq %union.tree_node* %366, null
  br i1 %cmp115.i, label %cond.false117.i, label %cond.end118.i

cond.false117.i:                                  ; preds = %if.then112.i
  %367 = load void (%union.tree_node*)** @lang_set_decl_assembler_name, align 8, !tbaa !1
  tail call void %367(%union.tree_node* %tem.0.i1399) #5
  %.pre1419 = load %union.tree_node** %assembler_name.i, align 8, !tbaa !27
  br label %cond.end118.i

cond.end118.i:                                    ; preds = %cond.false117.i, %if.then112.i
  %368 = phi %union.tree_node* [ %.pre1419, %cond.false117.i ], [ %366, %if.then112.i ]
  store i1 true, i1* @have_used_extensions, align 1
  %369 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %id122.i = getelementptr inbounds %union.tree_node* %368, i64 0, i32 0, i32 1
  %370 = getelementptr inbounds i8** %id122.i, i64 1
  %371 = load i8** %370, align 8, !tbaa !28
  %call124.i = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %369, i8* getelementptr inbounds ([5 x i8]* @.str49, i64 0, i64 0), i8* %371) #5
  %len127.i = bitcast i8** %id122.i to i32*
  %372 = load i32* %len127.i, align 4, !tbaa !24
  %add128.i = add i32 %372, 2
  %373 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add129.i = add i32 %add128.i, %373
  store i32 %add129.i, i32* @current_sym_nchars, align 4, !tbaa !5
  br label %for.inc.i

if.else130.i:                                     ; preds = %if.then104.i
  %374 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %375 = tail call i64 @fwrite(i8* getelementptr inbounds ([6 x i8]* @.str50, i64 0, i64 0), i64 5, i64 1, %struct._IO_FILE* %374) #5
  %376 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add132.i = add nsw i32 %376, 5
  store i32 %add132.i, i32* @current_sym_nchars, align 4, !tbaa !5
  br label %for.inc.i

if.else134.i:                                     ; preds = %cond.end97.i
  %377 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call135.i = tail call i32 @putc(i32 44, %struct._IO_FILE* %377) #5
  %call136.i = tail call i64 @int_bit_position(%union.tree_node* %tem.0.i1399) #5
  %378 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call.i.i = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %378, i8* getelementptr inbounds ([5 x i8]* @.str8, i64 0, i64 0), i64 %call136.i) #5
  %cmp.i.i = icmp slt i64 %call136.i, 0
  %sub.i.i = sub nsw i64 0, %call136.i
  %sub.c.i.i = select i1 %cmp.i.i, i64 %sub.i.i, i64 %call136.i
  %c.lobit.i.i = lshr i64 %call136.i, 63
  %379 = trunc i64 %c.lobit.i.i to i32
  %cmp19.i.i = icmp sgt i64 %sub.c.i.i, 0
  br i1 %cmp19.i.i, label %while.body.i.i, label %print_wide_int.exit.i

while.body.i.i:                                   ; preds = %if.else134.i, %while.body.i.i
  %c.addr.010.i.i = phi i64 [ %div.i.i, %while.body.i.i ], [ %sub.c.i.i, %if.else134.i ]
  %div.i.i = sdiv i64 %c.addr.010.i.i, 10
  %cmp1.i.i = icmp sgt i64 %c.addr.010.i.i, 9
  br i1 %cmp1.i.i, label %while.body.i.i, label %print_wide_int.exit.i

print_wide_int.exit.i:                            ; preds = %while.body.i.i, %if.else134.i
  %inc2.i.i = add nsw i32 %379, 1
  %380 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add.i.i = add nsw i32 %inc2.i.i, %380
  store i32 %add.i.i, i32* @current_sym_nchars, align 4, !tbaa !5
  %381 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call137.i = tail call i32 @putc(i32 44, %struct._IO_FILE* %381) #5
  %size139.i = getelementptr inbounds %union.tree_node* %tem.0.i1399, i64 0, i32 0, i32 4
  %382 = load %union.tree_node** %size139.i, align 8, !tbaa !48
  %call140.i = tail call i64 @tree_low_cst(%union.tree_node* %382, i32 1) #5
  %383 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call.i179.i = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %383, i8* getelementptr inbounds ([5 x i8]* @.str8, i64 0, i64 0), i64 %call140.i) #5
  %cmp.i180.i = icmp slt i64 %call140.i, 0
  %sub.i181.i = sub nsw i64 0, %call140.i
  %sub.c.i182.i = select i1 %cmp.i180.i, i64 %sub.i181.i, i64 %call140.i
  %c.lobit.i183.i = lshr i64 %call140.i, 63
  %384 = trunc i64 %c.lobit.i183.i to i32
  %cmp19.i184.i = icmp sgt i64 %sub.c.i182.i, 0
  br i1 %cmp19.i184.i, label %while.body.i188.i, label %print_wide_int.exit191.i

while.body.i188.i:                                ; preds = %print_wide_int.exit.i, %while.body.i188.i
  %c.addr.010.i185.i = phi i64 [ %div.i186.i, %while.body.i188.i ], [ %sub.c.i182.i, %print_wide_int.exit.i ]
  %div.i186.i = sdiv i64 %c.addr.010.i185.i, 10
  %cmp1.i187.i = icmp sgt i64 %c.addr.010.i185.i, 9
  br i1 %cmp1.i187.i, label %while.body.i188.i, label %print_wide_int.exit191.i

print_wide_int.exit191.i:                         ; preds = %while.body.i188.i, %print_wide_int.exit.i
  %inc2.i189.i = add nsw i32 %384, 1
  %385 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add.i190.i = add nsw i32 %inc2.i189.i, %385
  store i32 %add.i190.i, i32* @current_sym_nchars, align 4, !tbaa !5
  %386 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call141.i = tail call i32 @putc(i32 59, %struct._IO_FILE* %386) #5
  %387 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add142.i = add nsw i32 %387, 3
  store i32 %add142.i, i32* @current_sym_nchars, align 4, !tbaa !5
  br label %for.inc.i

for.inc.i:                                        ; preds = %print_wide_int.exit191.i, %if.else130.i, %cond.end118.i, %if.else.i, %lor.lhs.false16.i, %lor.lhs.false11.i, %lor.lhs.false9.i, %land.lhs.true.i, %for.body.i
  %chain.i = getelementptr inbounds %union.tree_node* %tem.0.i1399, i64 0, i32 0, i32 0, i32 0
  %388 = load %union.tree_node** %chain.i, align 8, !tbaa !49
  %tobool.i = icmp eq %union.tree_node* %388, null
  br i1 %tobool.i, label %dbxout_type_fields.exit, label %for.body.i

dbxout_type_fields.exit:                          ; preds = %for.inc.i, %for.end
  %389 = load i32* @use_gnu_debug_info_extensions, align 4, !tbaa !5
  %tobool686 = icmp eq i32 %389, 0
  br i1 %tobool686, label %if.end693, label %land.lhs.true687

land.lhs.true687:                                 ; preds = %dbxout_type_fields.exit
  %390 = getelementptr inbounds %union.tree_node* %main_variant.0.type.addr.1, i64 0, i32 0, i32 13
  %391 = load %union.tree_node** %390, align 8, !tbaa !38
  %cmp690 = icmp eq %union.tree_node* %391, null
  br i1 %cmp690, label %if.end693, label %if.end.i1355

if.end.i1355:                                     ; preds = %land.lhs.true687
  store i1 true, i1* @have_used_extensions, align 1
  %392 = getelementptr inbounds [16 x i8]* %formatted_type_identifier_length.i, i64 0, i64 0
  call void @llvm.lifetime.start(i64 16, i8* %392) #5
  %393 = load %union.tree_node** %253, align 8, !tbaa !12
  %name3.i = getelementptr inbounds %union.tree_node* %393, i64 0, i32 0, i32 8
  %394 = load %union.tree_node** %name3.i, align 8, !tbaa !21
  %id.i1349 = getelementptr inbounds %union.tree_node* %394, i64 0, i32 0, i32 1
  %len.i1350 = bitcast i8** %id.i1349 to i32*
  %395 = load i32* %len.i1350, align 4, !tbaa !24
  %call.i1351 = call i32 (i8*, i8*, ...)* @sprintf(i8* %392, i8* getelementptr inbounds ([3 x i8]* @.str14, i64 0, i64 0), i32 %395) #5
  %code.i1352 = getelementptr inbounds %union.tree_node* %391, i64 0, i32 0, i32 0, i32 2
  %bf.load.i1353 = load i32* %code.i1352, align 8
  %bf.clear.i1354 = and i32 %bf.load.i1353, 255
  %cmp4.i = icmp eq i32 %bf.clear.i1354, 3
  br i1 %cmp4.i, label %if.else.i1356, label %for.cond.i1358.preheader

if.else.i1356:                                    ; preds = %if.end.i1355
  %a.i = getelementptr inbounds %union.tree_node* %391, i64 0, i32 0, i32 2
  %arrayidx.i = bitcast i32* %a.i to %union.tree_node**
  %396 = load %union.tree_node** %arrayidx.i, align 8, !tbaa !1
  %cmp6.i = icmp eq %union.tree_node* %396, null
  br i1 %cmp6.i, label %while.cond.i.preheader, label %for.cond.i1358.preheader

while.cond.i.preheader:                           ; preds = %if.else.i1356
  %arrayidx14.i = getelementptr inbounds i32* %a.i, i64 2
  %397 = bitcast i32* %arrayidx14.i to %union.tree_node**
  %398 = load %union.tree_node** %397, align 8, !tbaa !1
  %tobool.i13571396 = icmp eq %union.tree_node* %398, null
  br i1 %tobool.i13571396, label %if.end693, label %for.cond.i1358.preheader

for.cond.i1358.preheader:                         ; preds = %if.end.i1355, %if.else.i1356, %while.cond.i.preheader, %while.cond.i.backedge
  %fndecl.0.i1397 = phi %union.tree_node* [ %fndecl.1.i.lcssa, %while.cond.i.backedge ], [ %391, %if.end.i1355 ], [ %396, %if.else.i1356 ], [ %398, %while.cond.i.preheader ]
  %tobool17.i1388 = icmp eq %union.tree_node* %fndecl.0.i1397, null
  br i1 %tobool17.i1388, label %if.end693, label %land.rhs.i

land.rhs.i:                                       ; preds = %for.cond.i1358.preheader, %for.inc.i1369
  %fndecl.1.i1391 = phi %union.tree_node* [ %416, %for.inc.i1369 ], [ %fndecl.0.i1397, %for.cond.i1358.preheader ]
  %last.0.i1390 = phi %union.tree_node* [ %last.1.i, %for.inc.i1369 ], [ null, %for.cond.i1358.preheader ]
  %need_prefix.0.i1389 = phi i32 [ %need_prefix.2.i, %for.inc.i1369 ], [ 1, %for.cond.i1358.preheader ]
  %cmp18.i = icmp eq %union.tree_node* %last.0.i1390, null
  br i1 %cmp18.i, label %for.body.i1359, label %lor.rhs.i

lor.rhs.i:                                        ; preds = %land.rhs.i
  %name20.i = getelementptr inbounds %union.tree_node* %fndecl.1.i1391, i64 0, i32 0, i32 8
  %399 = load %union.tree_node** %name20.i, align 8, !tbaa !21
  %name22.i = getelementptr inbounds %union.tree_node* %last.0.i1390, i64 0, i32 0, i32 8
  %400 = load %union.tree_node** %name22.i, align 8, !tbaa !21
  %cmp23.i = icmp eq %union.tree_node* %399, %400
  br i1 %cmp23.i, label %for.body.i1359, label %for.end.i

for.body.i1359:                                   ; preds = %lor.rhs.i, %land.rhs.i
  %code25.i = getelementptr inbounds %union.tree_node* %fndecl.1.i1391, i64 0, i32 0, i32 0, i32 2
  %bf.load26.i = load i32* %code25.i, align 8
  %bf.clear27.i = and i32 %bf.load26.i, 255
  %cmp28.i = icmp eq i32 %bf.clear27.i, 30
  br i1 %cmp28.i, label %if.end30.i, label %for.inc.i1369

if.end30.i:                                       ; preds = %for.body.i1359
  %assembler_name.i1360 = getelementptr inbounds %union.tree_node* %fndecl.1.i1391, i64 0, i32 0, i32 14
  %401 = load %union.tree_node** %assembler_name.i1360, align 8, !tbaa !27
  %cmp32.i = icmp eq %union.tree_node* %401, null
  br i1 %cmp32.i, label %cond.false.i1361, label %cond.end.i1366

cond.false.i1361:                                 ; preds = %if.end30.i
  %402 = load void (%union.tree_node*)** @lang_set_decl_assembler_name, align 8, !tbaa !1
  tail call void %402(%union.tree_node* %fndecl.1.i1391) #5
  %.pre1418 = load %union.tree_node** %assembler_name.i1360, align 8, !tbaa !27
  br label %cond.end.i1366

cond.end.i1366:                                   ; preds = %cond.false.i1361, %if.end30.i
  %403 = phi %union.tree_node* [ %.pre1418, %cond.false.i1361 ], [ %401, %if.end30.i ]
  %id36.i = getelementptr inbounds %union.tree_node* %403, i64 0, i32 0, i32 1
  %404 = getelementptr inbounds i8** %id36.i, i64 1
  %405 = load i8** %404, align 8, !tbaa !28
  %ignored_flag.i1362 = getelementptr inbounds %union.tree_node* %fndecl.1.i1391, i64 0, i32 0, i32 5
  %406 = bitcast i48* %ignored_flag.i1362 to i64*
  %bf.load38.i = load i64* %406, align 8
  %407 = and i64 %bf.load38.i, 49152
  %408 = icmp eq i64 %407, 0
  br i1 %408, label %if.end48.i, label %for.inc.i1369

if.end48.i:                                       ; preds = %cond.end.i1366
  %tobool49.i = icmp eq i32 %need_prefix.0.i1389, 0
  br i1 %tobool49.i, label %if.end62.i, label %if.then50.i

if.then50.i:                                      ; preds = %if.end48.i
  %name53.i = getelementptr inbounds %union.tree_node* %fndecl.1.i1391, i64 0, i32 0, i32 8
  %409 = load %union.tree_node** %name53.i, align 8, !tbaa !21
  %410 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %id55.i = getelementptr inbounds %union.tree_node* %409, i64 0, i32 0, i32 1
  %411 = getelementptr inbounds i8** %id55.i, i64 1
  %412 = load i8** %411, align 8, !tbaa !28
  %call57.i = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %410, i8* getelementptr inbounds ([5 x i8]* @.str47, i64 0, i64 0), i8* %412) #5
  %len60.i = bitcast i8** %id55.i to i32*
  %413 = load i32* %len60.i, align 4, !tbaa !24
  %add.i1367 = add i32 %413, 2
  %414 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add61.i = add i32 %add.i1367, %414
  store i32 %add61.i, i32* @current_sym_nchars, align 4, !tbaa !5
  br label %if.end62.i

if.end62.i:                                       ; preds = %if.then50.i, %if.end48.i
  %type64.i = getelementptr inbounds %union.tree_node* %fndecl.1.i1391, i64 0, i32 0, i32 0, i32 1
  %415 = load %union.tree_node** %type64.i, align 8, !tbaa !23
  tail call fastcc void @dbxout_type(%union.tree_node* %415, i32 0) #5
  tail call fastcc void @dbxout_type_method_1(%union.tree_node* %fndecl.1.i1391, i8* %405) #5
  br label %for.inc.i1369

for.inc.i1369:                                    ; preds = %if.end62.i, %cond.end.i1366, %for.body.i1359
  %need_prefix.2.i = phi i32 [ %need_prefix.0.i1389, %for.body.i1359 ], [ %need_prefix.0.i1389, %cond.end.i1366 ], [ 0, %if.end62.i ]
  %last.1.i = phi %union.tree_node* [ %last.0.i1390, %for.body.i1359 ], [ %fndecl.1.i1391, %cond.end.i1366 ], [ %fndecl.1.i1391, %if.end62.i ]
  %chain.i1368 = getelementptr inbounds %union.tree_node* %fndecl.1.i1391, i64 0, i32 0, i32 0, i32 0
  %416 = load %union.tree_node** %chain.i1368, align 8, !tbaa !49
  %tobool17.i = icmp eq %union.tree_node* %416, null
  br i1 %tobool17.i, label %for.end.i, label %land.rhs.i

for.end.i:                                        ; preds = %for.inc.i1369, %lor.rhs.i
  %fndecl.1.i.lcssa = phi %union.tree_node* [ %fndecl.1.i1391, %lor.rhs.i ], [ null, %for.inc.i1369 ]
  %need_prefix.0.i.lcssa = phi i32 [ %need_prefix.0.i1389, %lor.rhs.i ], [ %need_prefix.2.i, %for.inc.i1369 ]
  %tobool66.i = icmp eq i32 %need_prefix.0.i.lcssa, 0
  br i1 %tobool66.i, label %if.then67.i, label %while.cond.i.backedge

while.cond.i.backedge:                            ; preds = %for.end.i, %if.then67.i
  %tobool.i1357 = icmp eq %union.tree_node* %fndecl.1.i.lcssa, null
  br i1 %tobool.i1357, label %if.end693, label %for.cond.i1358.preheader

if.then67.i:                                      ; preds = %for.end.i
  %417 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call68.i = tail call i32 @putc(i32 59, %struct._IO_FILE* %417) #5
  %418 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add69.i = add nsw i32 %418, 1
  store i32 %add69.i, i32* @current_sym_nchars, align 4, !tbaa !5
  br label %while.cond.i.backedge

if.end693:                                        ; preds = %for.cond.i1358.preheader, %while.cond.i.backedge, %while.cond.i.preheader, %land.lhs.true687, %dbxout_type_fields.exit
  %419 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call694 = tail call i32 @putc(i32 59, %struct._IO_FILE* %419) #5
  %420 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add695 = add nsw i32 %420, 1
  store i32 %add695, i32* @current_sym_nchars, align 4, !tbaa !5
  %421 = load i32* @use_gnu_debug_info_extensions, align 4, !tbaa !5
  %tobool696 = icmp eq i32 %421, 0
  br i1 %tobool696, label %sw.epilog902, label %land.lhs.true697

land.lhs.true697:                                 ; preds = %if.end693
  %bf.load700 = load i32* %readonly_flag, align 8
  %bf.clear701 = and i32 %bf.load700, 255
  %cmp702 = icmp eq i32 %bf.clear701, 20
  br i1 %cmp702, label %land.lhs.true704, label %sw.epilog902

land.lhs.true704:                                 ; preds = %land.lhs.true697
  %422 = getelementptr inbounds %union.tree_node* %main_variant.0.type.addr.1, i64 0, i32 0, i32 12
  %423 = load %union.tree_node** %422, align 8, !tbaa !37
  %tobool707 = icmp eq %union.tree_node* %423, null
  br i1 %tobool707, label %sw.epilog902, label %if.then708

if.then708:                                       ; preds = %land.lhs.true704
  store i1 true, i1* @have_used_extensions, align 1
  %424 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call709 = tail call i32 @putc(i32 126, %struct._IO_FILE* %424) #5
  %425 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add710 = add nsw i32 %425, 1
  store i32 %add710, i32* @current_sym_nchars, align 4, !tbaa !5
  %426 = load %union.tree_node** %422, align 8, !tbaa !37
  %tobool713 = icmp eq %union.tree_node* %426, null
  br i1 %tobool713, label %if.end720, label %if.then714

if.then714:                                       ; preds = %if.then708
  %427 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call715 = tail call i32 @putc(i32 37, %struct._IO_FILE* %427) #5
  %428 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add716 = add nsw i32 %428, 1
  store i32 %add716, i32* @current_sym_nchars, align 4, !tbaa !5
  %429 = load %union.tree_node** %422, align 8, !tbaa !37
  %vindex = getelementptr inbounds %union.tree_node* %429, i64 0, i32 0, i32 22
  %430 = load %union.tree_node** %vindex, align 8, !tbaa !50
  tail call fastcc void @dbxout_type(%union.tree_node* %430, i32 0)
  br label %if.end720

if.end720:                                        ; preds = %if.then708, %if.then714
  %431 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call721 = tail call i32 @putc(i32 59, %struct._IO_FILE* %431) #5
  %432 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add722 = add nsw i32 %432, 1
  store i32 %add722, i32* @current_sym_nchars, align 4, !tbaa !5
  br label %sw.epilog902

sw.bb724:                                         ; preds = %if.end153
  %433 = getelementptr inbounds %union.tree_node* %main_variant.0.type.addr.1, i64 0, i32 0, i32 11
  %434 = load %union.tree_node** %433, align 8, !tbaa !12
  %cmp727 = icmp eq %union.tree_node* %434, null
  br i1 %cmp727, label %lor.lhs.false750, label %land.lhs.true729

land.lhs.true729:                                 ; preds = %sw.bb724
  %code733 = getelementptr inbounds %union.tree_node* %434, i64 0, i32 0, i32 0, i32 2
  %bf.load734 = load i32* %code733, align 8
  %bf.clear735 = and i32 %bf.load734, 255
  %cmp736 = icmp eq i32 %bf.clear735, 33
  br i1 %cmp736, label %land.lhs.true738, label %land.lhs.true748

land.lhs.true738:                                 ; preds = %land.lhs.true729
  %ignored_flag742 = getelementptr inbounds %union.tree_node* %434, i64 0, i32 0, i32 5
  %435 = bitcast i48* %ignored_flag742 to i64*
  %bf.load743 = load i64* %435, align 8
  %bf.cast746 = and i64 %bf.load743, 16384
  %tobool747 = icmp ne i64 %bf.cast746, 0
  %tobool749 = icmp ne i32 %full.addr.01422, 0
  %or.cond906 = or i1 %tobool747, %tobool749
  br i1 %or.cond906, label %lor.lhs.false750, label %if.then755

land.lhs.true748:                                 ; preds = %land.lhs.true729
  %tobool749.old = icmp eq i32 %full.addr.01422, 0
  br i1 %tobool749.old, label %if.then755, label %lor.lhs.false750

lor.lhs.false750:                                 ; preds = %land.lhs.true748, %sw.bb724, %land.lhs.true738
  %size752 = getelementptr inbounds %union.tree_node* %main_variant.0.type.addr.1, i64 0, i32 0, i32 2
  %436 = bitcast i32* %size752 to %union.tree_node**
  %437 = load %union.tree_node** %436, align 8, !tbaa !30
  %cmp753 = icmp eq %union.tree_node* %437, null
  br i1 %cmp753, label %if.then755, label %if.end766

if.then755:                                       ; preds = %land.lhs.true748, %lor.lhs.false750, %land.lhs.true738
  %438 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %439 = tail call i64 @fwrite(i8* getelementptr inbounds ([3 x i8]* @.str45, i64 0, i64 0), i64 2, i64 1, %struct._IO_FILE* %438)
  %440 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add757 = add nsw i32 %440, 2
  store i32 %add757, i32* @current_sym_nchars, align 4, !tbaa !5
  %main_variant.0.type.addr.1.idx.val = load %union.tree_node** %433, align 8, !tbaa !12
  %cmp.i1102 = icmp eq %union.tree_node* %main_variant.0.type.addr.1.idx.val, null
  br i1 %cmp.i1102, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %if.then755
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str6, i64 0, i64 0), i32 1815, i8* getelementptr inbounds ([17 x i8]* @__FUNCTION__.dbxout_type_name, i64 0, i64 0)) #6
  unreachable

if.end.i:                                         ; preds = %if.then755
  %code.i = getelementptr inbounds %union.tree_node* %main_variant.0.type.addr.1.idx.val, i64 0, i32 0, i32 0, i32 2
  %bf.load.i = load i32* %code.i, align 8
  %bf.clear.i = and i32 %bf.load.i, 255
  switch i32 %bf.clear.i, label %if.else19.i [
    i32 1, label %dbxout_type_name.exit
    i32 33, label %if.then15.i
  ]

if.then15.i:                                      ; preds = %if.end.i
  %name18.i = getelementptr inbounds %union.tree_node* %main_variant.0.type.addr.1.idx.val, i64 0, i32 0, i32 8
  %441 = load %union.tree_node** %name18.i, align 8, !tbaa !21
  br label %dbxout_type_name.exit

if.else19.i:                                      ; preds = %if.end.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str6, i64 0, i64 0), i32 1825, i8* getelementptr inbounds ([17 x i8]* @__FUNCTION__.dbxout_type_name, i64 0, i64 0)) #6
  unreachable

dbxout_type_name.exit:                            ; preds = %if.end.i, %if.then15.i
  %t.0.i = phi %union.tree_node* [ %441, %if.then15.i ], [ %main_variant.0.type.addr.1.idx.val, %if.end.i ]
  %442 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %id.i = getelementptr inbounds %union.tree_node* %t.0.i, i64 0, i32 0, i32 1
  %443 = getelementptr inbounds i8** %id.i, i64 1
  %444 = load i8** %443, align 8, !tbaa !28
  %fputs.i = tail call i32 @fputs(i8* %444, %struct._IO_FILE* %442) #5
  %len.i = bitcast i8** %id.i to i32*
  %445 = load i32* %len.i, align 4, !tbaa !24
  %446 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add.i1103 = add i32 %446, %445
  store i32 %add.i1103, i32* @current_sym_nchars, align 4, !tbaa !5
  %447 = load i32* %address, align 4, !tbaa !5
  %idxprom761 = sext i32 %447 to i64
  %448 = load %struct.typeinfo** @typevec, align 8, !tbaa !1
  %status763 = getelementptr inbounds %struct.typeinfo* %448, i64 %idxprom761, i32 0
  store i32 1, i32* %status763, align 4, !tbaa !35
  %449 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call764 = tail call i32 @putc(i32 58, %struct._IO_FILE* %449) #5
  %450 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add765 = add nsw i32 %450, 1
  store i32 %add765, i32* @current_sym_nchars, align 4, !tbaa !5
  br label %sw.epilog902

if.end766:                                        ; preds = %lor.lhs.false750
  %451 = load i32* @use_gnu_debug_info_extensions, align 4, !tbaa !5
  %tobool767 = icmp eq i32 %451, 0
  br i1 %tobool767, label %if.end786, label %land.lhs.true768

land.lhs.true768:                                 ; preds = %if.end766
  %precision770 = getelementptr inbounds %struct.tree_type* %type49, i64 0, i32 6
  %bf.load771 = load i32* %precision770, align 4
  %bf.clear772 = and i32 %bf.load771, 511
  %452 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %type773 = bitcast %union.tree_node* %452 to %struct.tree_type*
  %precision774 = getelementptr inbounds %struct.tree_type* %type773, i64 0, i32 6
  %bf.load775 = load i32* %precision774, align 4
  %bf.clear776 = and i32 %bf.load775, 511
  %cmp777 = icmp eq i32 %bf.clear772, %bf.clear776
  br i1 %cmp777, label %if.end786, label %if.then779

if.then779:                                       ; preds = %land.lhs.true768
  %453 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call784 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %453, i8* getelementptr inbounds ([6 x i8]* @.str23, i64 0, i64 0), i32 %bf.clear772) #5
  %454 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add785 = add nsw i32 %454, 5
  store i32 %add785, i32* @current_sym_nchars, align 4, !tbaa !5
  br label %if.end786

if.end786:                                        ; preds = %land.lhs.true768, %if.end766, %if.then779
  %455 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call787 = tail call i32 @putc(i32 101, %struct._IO_FILE* %455) #5
  %456 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add788 = add nsw i32 %456, 1
  store i32 %add788, i32* @current_sym_nchars, align 4, !tbaa !5
  %values790 = getelementptr inbounds %union.tree_node* %main_variant.0.type.addr.1, i64 0, i32 0, i32 1
  %457 = load i8** %values790, align 8
  %tobool7921403 = icmp eq i8* %457, null
  %458 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  br i1 %tobool7921403, label %for.end847, label %for.body793.lr.ph

for.body793.lr.ph:                                ; preds = %if.end786
  %459 = bitcast i8* %457 to %union.tree_node*
  br label %for.body793

for.body793:                                      ; preds = %for.body793.lr.ph, %if.end836
  %460 = phi %struct._IO_FILE* [ %458, %for.body793.lr.ph ], [ %482, %if.end836 ]
  %tem.01404 = phi %union.tree_node* [ %459, %for.body793.lr.ph ], [ %481, %if.end836 ]
  %purpose = getelementptr inbounds %union.tree_node* %tem.01404, i64 0, i32 0, i32 1
  %461 = load i8** %purpose, align 8
  %str = getelementptr inbounds i8* %461, i64 32
  %462 = bitcast i8* %str to i8**
  %463 = load i8** %462, align 8, !tbaa !28
  %call794 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %460, i8* getelementptr inbounds ([4 x i8]* @.str46, i64 0, i64 0), i8* %463) #5
  %464 = load i8** %purpose, align 8
  %id798 = getelementptr inbounds i8* %464, i64 24
  %len = bitcast i8* %id798 to i32*
  %465 = load i32* %len, align 4, !tbaa !24
  %add799 = add i32 %465, 1
  %466 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add800 = add i32 %add799, %466
  store i32 %add800, i32* @current_sym_nchars, align 4, !tbaa !5
  %value = getelementptr inbounds %union.tree_node* %tem.01404, i64 0, i32 0, i32 2
  %467 = bitcast i32* %value to %union.tree_node**
  %468 = load %union.tree_node** %467, align 8, !tbaa !51
  %int_cst802 = getelementptr inbounds %union.tree_node* %468, i64 0, i32 0, i32 2
  %high = getelementptr inbounds i32* %int_cst802, i64 2
  %469 = bitcast i32* %high to i64*
  %470 = load i64* %469, align 8, !tbaa !53
  switch i64 %470, label %if.else832 [
    i64 0, label %if.then805
    i64 -1, label %land.lhs.true818
  ]

if.then805:                                       ; preds = %for.body793
  %low = bitcast i32* %int_cst802 to i64*
  %471 = load i64* %low, align 8, !tbaa !56
  %472 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call.i1089 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %472, i8* getelementptr inbounds ([5 x i8]* @.str8, i64 0, i64 0), i64 %471) #5
  %cmp.i1090 = icmp slt i64 %471, 0
  %sub.i1091 = sub nsw i64 0, %471
  %sub.c.i1092 = select i1 %cmp.i1090, i64 %sub.i1091, i64 %471
  %c.lobit.i1093 = lshr i64 %471, 63
  %473 = trunc i64 %c.lobit.i1093 to i32
  %cmp19.i1094 = icmp sgt i64 %sub.c.i1092, 0
  br i1 %cmp19.i1094, label %while.body.i1098, label %print_wide_int.exit1101

while.body.i1098:                                 ; preds = %if.then805, %while.body.i1098
  %c.addr.010.i1095 = phi i64 [ %div.i1096, %while.body.i1098 ], [ %sub.c.i1092, %if.then805 ]
  %div.i1096 = sdiv i64 %c.addr.010.i1095, 10
  %cmp1.i1097 = icmp sgt i64 %c.addr.010.i1095, 9
  br i1 %cmp1.i1097, label %while.body.i1098, label %print_wide_int.exit1101

print_wide_int.exit1101:                          ; preds = %while.body.i1098, %if.then805
  %inc2.i1099 = add nsw i32 %473, 1
  %474 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add.i1100 = add nsw i32 %inc2.i1099, %474
  store i32 %add.i1100, i32* @current_sym_nchars, align 4, !tbaa !5
  br label %if.end836

land.lhs.true818:                                 ; preds = %for.body793
  %low823 = bitcast i32* %int_cst802 to i64*
  %475 = load i64* %low823, align 8, !tbaa !56
  %cmp824 = icmp slt i64 %475, 0
  br i1 %cmp824, label %while.body.i.preheader, label %if.else832

while.body.i.preheader:                           ; preds = %land.lhs.true818
  %476 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call.i = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %476, i8* getelementptr inbounds ([5 x i8]* @.str8, i64 0, i64 0), i64 %475) #5
  %c.lobit.i = lshr i64 %475, 63
  %477 = trunc i64 %c.lobit.i to i32
  %sub.i = sub nsw i64 0, %475
  br label %while.body.i

while.body.i:                                     ; preds = %while.body.i.preheader, %while.body.i
  %c.addr.010.i = phi i64 [ %div.i, %while.body.i ], [ %sub.i, %while.body.i.preheader ]
  %div.i = sdiv i64 %c.addr.010.i, 10
  %cmp1.i = icmp sgt i64 %c.addr.010.i, 9
  br i1 %cmp1.i, label %while.body.i, label %print_wide_int.exit

print_wide_int.exit:                              ; preds = %while.body.i
  %inc2.i = add nsw i32 %477, 1
  %478 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add.i = add nsw i32 %inc2.i, %478
  store i32 %add.i, i32* @current_sym_nchars, align 4, !tbaa !5
  br label %if.end836

if.else832:                                       ; preds = %for.body793, %land.lhs.true818
  tail call fastcc void @print_int_cst_octal(%union.tree_node* %468)
  br label %if.end836

if.end836:                                        ; preds = %print_wide_int.exit, %if.else832, %print_wide_int.exit1101
  %479 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call837 = tail call i32 @putc(i32 44, %struct._IO_FILE* %479) #5
  %480 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add838 = add nsw i32 %480, 1
  store i32 %add838, i32* @current_sym_nchars, align 4, !tbaa !5
  %chain = getelementptr inbounds %union.tree_node* %tem.01404, i64 0, i32 0, i32 0, i32 0
  %481 = load %union.tree_node** %chain, align 8, !tbaa !49
  %tobool792 = icmp eq %union.tree_node* %481, null
  %482 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  br i1 %tobool792, label %for.end847, label %for.body793

for.end847:                                       ; preds = %if.end836, %if.end786
  %.lcssa = phi %struct._IO_FILE* [ %458, %if.end786 ], [ %482, %if.end836 ]
  %call848 = tail call i32 @putc(i32 59, %struct._IO_FILE* %.lcssa) #5
  %483 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add849 = add nsw i32 %483, 1
  store i32 %add849, i32* @current_sym_nchars, align 4, !tbaa !5
  br label %sw.epilog902

sw.bb850:                                         ; preds = %if.end153
  %484 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call851 = tail call i32 @putc(i32 42, %struct._IO_FILE* %484) #5
  %485 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add852 = add nsw i32 %485, 1
  store i32 %add852, i32* @current_sym_nchars, align 4, !tbaa !5
  %type854 = getelementptr inbounds %union.tree_node* %main_variant.0.type.addr.1, i64 0, i32 0, i32 0, i32 1
  %486 = load %union.tree_node** %type854, align 8, !tbaa !23
  tail call fastcc void @dbxout_type(%union.tree_node* %486, i32 0)
  br label %sw.epilog902

sw.bb855:                                         ; preds = %if.end153
  %487 = load i32* @use_gnu_debug_info_extensions, align 4, !tbaa !5
  %tobool856 = icmp eq i32 %487, 0
  br i1 %tobool856, label %if.else870, label %if.then857

if.then857:                                       ; preds = %sw.bb855
  store i1 true, i1* @have_used_extensions, align 1
  %488 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call858 = tail call i32 @putc(i32 35, %struct._IO_FILE* %488) #5
  %489 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add859 = add nsw i32 %489, 1
  store i32 %add859, i32* @current_sym_nchars, align 4, !tbaa !5
  %490 = getelementptr inbounds %union.tree_node* %main_variant.0.type.addr.1, i64 0, i32 0, i32 13
  %491 = load %union.tree_node** %490, align 8, !tbaa !38
  tail call fastcc void @dbxout_type(%union.tree_node* %491, i32 0)
  %492 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call862 = tail call i32 @putc(i32 44, %struct._IO_FILE* %492) #5
  %493 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add863 = add nsw i32 %493, 1
  store i32 %add863, i32* @current_sym_nchars, align 4, !tbaa !5
  %type865 = getelementptr inbounds %union.tree_node* %main_variant.0.type.addr.1, i64 0, i32 0, i32 0, i32 1
  %494 = load %union.tree_node** %type865, align 8, !tbaa !23
  tail call fastcc void @dbxout_type(%union.tree_node* %494, i32 0)
  %values867 = getelementptr inbounds %union.tree_node* %main_variant.0.type.addr.1, i64 0, i32 0, i32 1
  %495 = load i8** %values867, align 8
  %tobool.i13701406 = icmp eq i8* %495, null
  %496 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  br i1 %tobool.i13701406, label %dbxout_args.exit, label %while.body.i1375.lr.ph

while.body.i1375.lr.ph:                           ; preds = %if.then857
  %497 = bitcast i8* %495 to %union.tree_node*
  br label %while.body.i1375

while.body.i1375:                                 ; preds = %while.body.i1375.lr.ph, %while.body.i1375
  %498 = phi %struct._IO_FILE* [ %496, %while.body.i1375.lr.ph ], [ %503, %while.body.i1375 ]
  %args.addr.0.i1407 = phi %union.tree_node* [ %497, %while.body.i1375.lr.ph ], [ %502, %while.body.i1375 ]
  %call.i1372 = tail call i32 @putc(i32 44, %struct._IO_FILE* %498) #5
  %value.i = getelementptr inbounds %union.tree_node* %args.addr.0.i1407, i64 0, i32 0, i32 2
  %499 = bitcast i32* %value.i to %union.tree_node**
  %500 = load %union.tree_node** %499, align 8, !tbaa !51
  tail call fastcc void @dbxout_type(%union.tree_node* %500, i32 0) #5
  %501 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add.i1373 = add nsw i32 %501, 1
  store i32 %add.i1373, i32* @current_sym_nchars, align 4, !tbaa !5
  %chain.i1374 = getelementptr inbounds %union.tree_node* %args.addr.0.i1407, i64 0, i32 0, i32 0, i32 0
  %502 = load %union.tree_node** %chain.i1374, align 8, !tbaa !49
  %tobool.i1370 = icmp eq %union.tree_node* %502, null
  %503 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  br i1 %tobool.i1370, label %dbxout_args.exit, label %while.body.i1375

dbxout_args.exit:                                 ; preds = %while.body.i1375, %if.then857
  %.lcssa1387 = phi %struct._IO_FILE* [ %496, %if.then857 ], [ %503, %while.body.i1375 ]
  %call868 = tail call i32 @putc(i32 59, %struct._IO_FILE* %.lcssa1387) #5
  %504 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add869 = add nsw i32 %504, 1
  store i32 %add869, i32* @current_sym_nchars, align 4, !tbaa !5
  br label %sw.epilog902

if.else870:                                       ; preds = %sw.bb855
  %type872 = getelementptr inbounds %union.tree_node* %main_variant.0.type.addr.1, i64 0, i32 0, i32 0, i32 1
  %505 = load %union.tree_node** %type872, align 8, !tbaa !23
  tail call fastcc void @dbxout_type(%union.tree_node* %505, i32 0)
  br label %sw.epilog902

sw.bb874:                                         ; preds = %if.end153
  %506 = load i32* @use_gnu_debug_info_extensions, align 4, !tbaa !5
  %tobool875 = icmp eq i32 %506, 0
  br i1 %tobool875, label %if.else885, label %if.then876

if.then876:                                       ; preds = %sw.bb874
  store i1 true, i1* @have_used_extensions, align 1
  %507 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call877 = tail call i32 @putc(i32 64, %struct._IO_FILE* %507) #5
  %508 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add878 = add nsw i32 %508, 1
  store i32 %add878, i32* @current_sym_nchars, align 4, !tbaa !5
  %509 = getelementptr inbounds %union.tree_node* %main_variant.0.type.addr.1, i64 0, i32 0, i32 13
  %510 = load %union.tree_node** %509, align 8, !tbaa !38
  tail call fastcc void @dbxout_type(%union.tree_node* %510, i32 0)
  %511 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call881 = tail call i32 @putc(i32 44, %struct._IO_FILE* %511) #5
  %512 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add882 = add nsw i32 %512, 1
  store i32 %add882, i32* @current_sym_nchars, align 4, !tbaa !5
  %type884 = getelementptr inbounds %union.tree_node* %main_variant.0.type.addr.1, i64 0, i32 0, i32 0, i32 1
  %513 = load %union.tree_node** %type884, align 8, !tbaa !23
  tail call fastcc void @dbxout_type(%union.tree_node* %513, i32 0)
  br label %sw.epilog902

if.else885:                                       ; preds = %sw.bb874
  %514 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  tail call fastcc void @dbxout_type(%union.tree_node* %514, i32 0)
  br label %sw.epilog902

sw.bb887:                                         ; preds = %if.end153
  %515 = load i32* @use_gnu_debug_info_extensions, align 4, !tbaa !5
  %tobool888 = icmp eq i32 %515, 0
  br i1 %tobool888, label %if.end890, label %if.then889

if.then889:                                       ; preds = %sw.bb887
  store i1 true, i1* @have_used_extensions, align 1
  br label %if.end890

if.end890:                                        ; preds = %sw.bb887, %if.then889
  %tobool891 = icmp ne i32 %515, 0
  %cond892 = select i1 %tobool891, i32 38, i32 42
  %516 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call893 = tail call i32 @putc(i32 %cond892, %struct._IO_FILE* %516) #5
  %517 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add894 = add nsw i32 %517, 1
  store i32 %add894, i32* @current_sym_nchars, align 4, !tbaa !5
  %type896 = getelementptr inbounds %union.tree_node* %main_variant.0.type.addr.1, i64 0, i32 0, i32 0, i32 1
  %518 = load %union.tree_node** %type896, align 8, !tbaa !23
  tail call fastcc void @dbxout_type(%union.tree_node* %518, i32 0)
  br label %sw.epilog902

sw.bb897:                                         ; preds = %if.end153
  %519 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call898 = tail call i32 @putc(i32 102, %struct._IO_FILE* %519) #5
  %520 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add899 = add nsw i32 %520, 1
  store i32 %add899, i32* @current_sym_nchars, align 4, !tbaa !5
  %type901 = getelementptr inbounds %union.tree_node* %main_variant.0.type.addr.1, i64 0, i32 0, i32 0, i32 1
  %521 = load %union.tree_node** %type901, align 8, !tbaa !23
  tail call fastcc void @dbxout_type(%union.tree_node* %521, i32 0)
  br label %sw.epilog902

sw.default:                                       ; preds = %if.end153
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str6, i64 0, i64 0), i32 1720, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.dbxout_type, i64 0, i64 0)) #6
  unreachable

sw.epilog902:                                     ; preds = %land.lhs.true704, %if.end693, %lor.lhs.false82, %lor.lhs.false, %sw.bb, %if.then876, %if.else885, %dbxout_args.exit, %if.else870, %land.lhs.true697, %if.end720, %print_wide_int.exit1314, %print_wide_int.exit1327, %print_wide_int.exit1281, %if.else361, %print_wide_int.exit1261, %if.else339, %if.then168, %if.then305, %if.else318, %if.end206, %if.end72, %if.then108, %if.then130, %if.then146, %dbxout_type_name.exit, %sw.bb897, %if.end890, %sw.bb850, %for.end847, %if.end573, %if.end490, %print_wide_int.exit1294, %if.end443, %sw.bb365, %print_wide_int.exit1248, %sw.bb158
  ret void
}

declare i32 @host_integerp(%union.tree_node*, i32) #1

; Function Attrs: nounwind
declare i32 @putc(i32, %struct._IO_FILE* nocapture) #2

; Function Attrs: noreturn
declare void @fancy_abort(i8*, i32, i8*) #3

declare i64 @tree_low_cst(%union.tree_node*, i32) #1

declare %struct.rtx_def* @eliminate_regs(%struct.rtx_def*, i32, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define internal fastcc i32 @dbxout_symbol_location(%union.tree_node* %decl, %union.tree_node* %type, i8* %suffix, %struct.rtx_def* %home) #0 {
entry:
  %home.addr = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %home, %struct.rtx_def** %home.addr, align 8, !tbaa !1
  %0 = getelementptr inbounds %struct.rtx_def* %home, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 63
  br i1 %cmp, label %while.cond, label %if.end13

while.cond:                                       ; preds = %entry, %while.body
  %bf.load1 = phi i32 [ %bf.load1.pre, %while.body ], [ %bf.load, %entry ]
  %value.0 = phi %struct.rtx_def* [ %1, %while.body ], [ %home, %entry ]
  %bf.clear2 = and i32 %bf.load1, 65535
  switch i32 %bf.clear2, label %if.end12 [
    i32 63, label %while.body
    i32 61, label %if.then7
  ]

while.body:                                       ; preds = %while.cond
  %arrayidx = getelementptr inbounds %struct.rtx_def* %value.0, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %.phi.trans.insert369 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 0
  %bf.load1.pre = load i32* %.phi.trans.insert369, align 8
  br label %while.cond

if.then7:                                         ; preds = %while.cond
  %arrayidx9 = getelementptr inbounds %struct.rtx_def* %value.0, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx9 to i32*
  %2 = load i32* %rtuint, align 4, !tbaa !5
  %cmp10 = icmp ugt i32 %2, 52
  br i1 %cmp10, label %return, label %if.end12

if.end12:                                         ; preds = %while.cond, %if.then7
  %call = call %struct.rtx_def* @alter_subreg(%struct.rtx_def** %home.addr) #5
  store %struct.rtx_def* %call, %struct.rtx_def** %home.addr, align 8, !tbaa !1
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 0
  %bf.load14.pre = load i32* %.phi.trans.insert, align 8
  br label %if.end13

if.end13:                                         ; preds = %if.end12, %entry
  %bf.load305 = phi i32 [ %bf.load14.pre, %if.end12 ], [ %bf.load, %entry ]
  %3 = phi %struct.rtx_def* [ %call, %if.end12 ], [ %home, %entry ]
  %bf.clear15 = and i32 %bf.load305, 65535
  switch i32 %bf.clear15, label %return [
    i32 61, label %if.then17
    i32 66, label %land.lhs.true
    i32 65, label %if.then309
  ]

if.then17:                                        ; preds = %if.end13
  %arrayidx19 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 1, i64 0
  %rtuint20 = bitcast %union.rtunion_def* %arrayidx19 to i32*
  %4 = load i32* %rtuint20, align 4, !tbaa !5
  %cmp21 = icmp sgt i32 %4, 52
  br i1 %cmp21, label %return, label %if.else83

land.lhs.true:                                    ; preds = %if.end13
  %arrayidx29 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 1, i64 0
  %rtx30 = bitcast %union.rtunion_def* %arrayidx29 to %struct.rtx_def**
  %5 = load %struct.rtx_def** %rtx30, align 8, !tbaa !1
  %6 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 0
  %bf.load31 = load i32* %6, align 8
  %bf.clear32 = and i32 %bf.load31, 65535
  %cmp33 = icmp eq i32 %bf.clear32, 68
  br i1 %cmp33, label %if.then34, label %land.lhs.true95

if.then34:                                        ; preds = %land.lhs.true
  %public_flag = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 2
  %bf.load35 = load i32* %public_flag, align 8
  %bf.clear36 = and i32 %bf.load35, 524288
  %tobool = icmp eq i32 %bf.clear36, 0
  br i1 %tobool, label %if.else, label %if.then37

if.then37:                                        ; preds = %if.then34
  store i32 32, i32* @current_sym_code, align 4, !tbaa !7
  br label %if.end334

if.else:                                          ; preds = %if.then34
  store %struct.rtx_def* %5, %struct.rtx_def** @current_sym_addr, align 8, !tbaa !1
  %call41 = call %union.tree_node* @decl_function_context(%union.tree_node* %decl) #5
  %tobool42 = icmp ne %union.tree_node* %call41, null
  %cond = select i1 %tobool42, i32 86, i32 83
  %initial = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 12
  %7 = load %union.tree_node** %initial, align 8, !tbaa !22
  %cmp44 = icmp eq %union.tree_node* %7, null
  br i1 %cmp44, label %if.then51, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else
  %8 = load i8** getelementptr inbounds (%struct.lang_hooks* @lang_hooks, i64 0, i32 0), align 8, !tbaa !42
  %call45 = call i32 @strcmp(i8* %8, i8* getelementptr inbounds ([8 x i8]* @.str15, i64 0, i64 0)) #5
  %tobool46 = icmp eq i32 %call45, 0
  %9 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8
  %cmp50 = icmp eq %union.tree_node* %7, %9
  %or.cond365 = and i1 %tobool46, %cmp50
  br i1 %or.cond365, label %if.then51, label %if.else52

if.then51:                                        ; preds = %lor.lhs.false, %if.else
  store i32 40, i32* @current_sym_code, align 4, !tbaa !7
  br label %if.end334

if.else52:                                        ; preds = %lor.lhs.false
  %bit_field_flag = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 5
  %10 = bitcast i48* %bit_field_flag to i64*
  %bf.load54 = load i64* %10, align 8
  %bf.cast = and i64 %bf.load54, 4096
  %tobool57 = icmp eq i64 %bf.cast, 0
  br i1 %tobool57, label %if.else59, label %if.then58

if.then58:                                        ; preds = %if.else52
  store i32 36, i32* @current_sym_code, align 4, !tbaa !7
  br label %if.end334

if.else59:                                        ; preds = %if.else52
  %11 = load %struct.rtx_def** @current_sym_addr, align 8, !tbaa !1
  %12 = getelementptr inbounds %struct.rtx_def* %11, i64 0, i32 0
  %bf.load60 = load i32* %12, align 8
  %13 = and i32 %bf.load60, 67174399
  %14 = icmp eq i32 %13, 67108932
  br i1 %14, label %if.then68, label %if.end79

if.then68:                                        ; preds = %if.else59
  %call69 = call %struct.rtx_def* @get_pool_constant(%struct.rtx_def* %11) #5
  %15 = getelementptr inbounds %struct.rtx_def* %call69, i64 0, i32 0
  %bf.load70 = load i32* %15, align 8
  %bf.clear71 = and i32 %bf.load70, 65535
  %bf.clear71.off = add i32 %bf.clear71, -67
  %switch = icmp ult i32 %bf.clear71.off, 2
  br i1 %switch, label %if.then77, label %if.end79

if.then77:                                        ; preds = %if.then68
  store %struct.rtx_def* %call69, %struct.rtx_def** @current_sym_addr, align 8, !tbaa !1
  br label %if.end79

if.end79:                                         ; preds = %if.else59, %if.then68, %if.then77
  store i32 38, i32* @current_sym_code, align 4, !tbaa !7
  br label %if.end334

if.else83:                                        ; preds = %if.then17
  %cmp84 = icmp sgt i32 %4, -1
  br i1 %cmp84, label %if.then85, label %if.else304

if.then85:                                        ; preds = %if.else83
  store i32 64, i32* @current_sym_code, align 4, !tbaa !7
  %16 = load i32* @target_flags, align 4, !tbaa !5
  %and = and i32 %16, 33554432
  %tobool86 = icmp eq i32 %and, 0
  %idxprom = sext i32 %4 to i64
  %svr4_dbx_register_map.dbx64_register_map = select i1 %tobool86, [53 x i32]* @svr4_dbx_register_map, [53 x i32]* @dbx64_register_map
  %cond90.in = getelementptr inbounds [53 x i32]* %svr4_dbx_register_map.dbx64_register_map, i64 0, i64 %idxprom
  %cond90 = load i32* %cond90.in, align 4
  store i32 %cond90, i32* @current_sym_value, align 4, !tbaa !5
  br label %if.end334

land.lhs.true95:                                  ; preds = %land.lhs.true
  %arrayidx97 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 1, i64 0
  %rtx98 = bitcast %union.rtunion_def* %arrayidx97 to %struct.rtx_def**
  %17 = load %struct.rtx_def** %rtx98, align 8, !tbaa !1
  %18 = getelementptr inbounds %struct.rtx_def* %17, i64 0, i32 0
  %bf.load99 = load i32* %18, align 8
  %bf.clear100 = and i32 %bf.load99, 65535
  switch i32 %bf.clear100, label %land.lhs.true208 [
    i32 66, label %if.else172
    i32 61, label %land.lhs.true109
  ]

land.lhs.true109:                                 ; preds = %land.lhs.true95
  %arrayidx114 = getelementptr inbounds %struct.rtx_def* %17, i64 0, i32 1, i64 0
  %rtuint115 = bitcast %union.rtunion_def* %arrayidx114 to i32*
  %19 = load i32* %rtuint115, align 4, !tbaa !5
  switch i32 %19, label %if.then140 [
    i32 6, label %land.lhs.true208
    i32 7, label %land.lhs.true208
    i32 16, label %land.lhs.true208
  ]

if.then140:                                       ; preds = %land.lhs.true109
  store i32 64, i32* @current_sym_code, align 4, !tbaa !7
  %arrayidx145 = getelementptr inbounds %struct.rtx_def* %17, i64 0, i32 1, i64 0
  %rtuint146 = bitcast %union.rtunion_def* %arrayidx145 to i32*
  %20 = load i32* %rtuint146, align 4, !tbaa !5
  %cmp147 = icmp ugt i32 %20, 52
  br i1 %cmp147, label %return, label %if.end149

if.end149:                                        ; preds = %if.then140
  %21 = load i32* @target_flags, align 4, !tbaa !5
  %and150 = and i32 %21, 33554432
  %tobool151 = icmp eq i32 %and150, 0
  %idxprom159 = zext i32 %20 to i64
  %svr4_dbx_register_map.dbx64_register_map358 = select i1 %tobool151, [53 x i32]* @svr4_dbx_register_map, [53 x i32]* @dbx64_register_map
  %cond171.in = getelementptr inbounds [53 x i32]* %svr4_dbx_register_map.dbx64_register_map358, i64 0, i64 %idxprom159
  %cond171 = load i32* %cond171.in, align 4
  br label %if.end197

if.else172:                                       ; preds = %land.lhs.true95
  store i32 128, i32* @current_sym_code, align 4, !tbaa !7
  %arrayidx177 = getelementptr inbounds %struct.rtx_def* %17, i64 0, i32 1, i64 0
  %rtx178 = bitcast %union.rtunion_def* %arrayidx177 to %struct.rtx_def**
  %22 = load %struct.rtx_def** %rtx178, align 8, !tbaa !1
  %23 = getelementptr inbounds %struct.rtx_def* %22, i64 0, i32 0
  %bf.load179 = load i32* %23, align 8
  %bf.clear180 = and i32 %bf.load179, 65535
  %cmp181 = icmp eq i32 %bf.clear180, 75
  br i1 %cmp181, label %cond.true182, label %if.end197

cond.true182:                                     ; preds = %if.else172
  %arrayidx190 = getelementptr inbounds %struct.rtx_def* %22, i64 0, i32 1, i64 1
  %rtx191 = bitcast %union.rtunion_def* %arrayidx190 to %struct.rtx_def**
  %24 = load %struct.rtx_def** %rtx191, align 8, !tbaa !1
  %rtwint = getelementptr inbounds %struct.rtx_def* %24, i64 0, i32 1, i64 0, i32 0
  %25 = load i64* %rtwint, align 8, !tbaa !57
  %phitmp356 = trunc i64 %25 to i32
  br label %if.end197

if.end197:                                        ; preds = %cond.true182, %if.else172, %if.end149
  %storemerge = phi i32 [ %cond171, %if.end149 ], [ %phitmp356, %cond.true182 ], [ 0, %if.else172 ]
  %letter.0 = phi i32 [ 114, %if.end149 ], [ 0, %cond.true182 ], [ 0, %if.else172 ]
  store i32 %storemerge, i32* @current_sym_value, align 4, !tbaa !5
  %call198 = call %union.tree_node* @make_node(i32 13) #5
  %type200 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 1
  %26 = load %union.tree_node** %type200, align 8, !tbaa !23
  %type202 = getelementptr inbounds %union.tree_node* %call198, i64 0, i32 0, i32 0, i32 1
  store %union.tree_node* %26, %union.tree_node** %type202, align 8, !tbaa !23
  br label %if.end334

land.lhs.true208:                                 ; preds = %land.lhs.true109, %land.lhs.true109, %land.lhs.true109, %land.lhs.true95
  %arrayidx210 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 1, i64 0
  %rtx211 = bitcast %union.rtunion_def* %arrayidx210 to %struct.rtx_def**
  %27 = load %struct.rtx_def** %rtx211, align 8, !tbaa !1
  %28 = getelementptr inbounds %struct.rtx_def* %27, i64 0, i32 0
  %bf.load212 = load i32* %28, align 8
  %bf.clear213 = and i32 %bf.load212, 65535
  %cmp214 = icmp eq i32 %bf.clear213, 61
  br i1 %cmp214, label %if.then216, label %land.lhs.true243

if.then216:                                       ; preds = %land.lhs.true208
  store i32 128, i32* @current_sym_code, align 4, !tbaa !7
  %bf.load220 = load i32* %28, align 8
  %bf.clear221 = and i32 %bf.load220, 65535
  %cmp222 = icmp eq i32 %bf.clear221, 75
  br i1 %cmp222, label %cond.true224, label %cond.end235

cond.true224:                                     ; preds = %if.then216
  %arrayidx229 = getelementptr inbounds %struct.rtx_def* %27, i64 0, i32 1, i64 1
  %rtx230 = bitcast %union.rtunion_def* %arrayidx229 to %struct.rtx_def**
  %29 = load %struct.rtx_def** %rtx230, align 8, !tbaa !1
  %rtwint233 = getelementptr inbounds %struct.rtx_def* %29, i64 0, i32 1, i64 0, i32 0
  %30 = load i64* %rtwint233, align 8, !tbaa !57
  %phitmp355 = trunc i64 %30 to i32
  br label %cond.end235

cond.end235:                                      ; preds = %if.then216, %cond.true224
  %cond236 = phi i32 [ %phitmp355, %cond.true224 ], [ 0, %if.then216 ]
  store i32 %cond236, i32* @current_sym_value, align 4, !tbaa !5
  br label %if.end334

land.lhs.true243:                                 ; preds = %land.lhs.true208
  %arrayidx245 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 1, i64 0
  %rtx246 = bitcast %union.rtunion_def* %arrayidx245 to %struct.rtx_def**
  %31 = load %struct.rtx_def** %rtx246, align 8, !tbaa !1
  %32 = getelementptr inbounds %struct.rtx_def* %31, i64 0, i32 0
  %bf.load247 = load i32* %32, align 8
  %bf.clear248 = and i32 %bf.load247, 65535
  %cmp249 = icmp eq i32 %bf.clear248, 75
  br i1 %cmp249, label %land.lhs.true251, label %land.lhs.true289

land.lhs.true251:                                 ; preds = %land.lhs.true243
  %arrayidx256 = getelementptr inbounds %struct.rtx_def* %31, i64 0, i32 1, i64 1
  %rtx257 = bitcast %union.rtunion_def* %arrayidx256 to %struct.rtx_def**
  %33 = load %struct.rtx_def** %rtx257, align 8, !tbaa !1
  %34 = getelementptr inbounds %struct.rtx_def* %33, i64 0, i32 0
  %bf.load258 = load i32* %34, align 8
  %bf.clear259 = and i32 %bf.load258, 65535
  %cmp260 = icmp eq i32 %bf.clear259, 54
  br i1 %cmp260, label %if.then262, label %land.lhs.true289

if.then262:                                       ; preds = %land.lhs.true251
  store i32 128, i32* @current_sym_code, align 4, !tbaa !7
  %bf.load266 = load i32* %32, align 8
  %bf.clear267 = and i32 %bf.load266, 65535
  %cmp268 = icmp eq i32 %bf.clear267, 75
  br i1 %cmp268, label %cond.true270, label %cond.end281

cond.true270:                                     ; preds = %if.then262
  %rtwint279 = getelementptr inbounds %struct.rtx_def* %33, i64 0, i32 1, i64 0, i32 0
  %35 = load i64* %rtwint279, align 8, !tbaa !57
  %phitmp = trunc i64 %35 to i32
  br label %cond.end281

cond.end281:                                      ; preds = %if.then262, %cond.true270
  %cond282 = phi i32 [ %phitmp, %cond.true270 ], [ 0, %if.then262 ]
  store i32 %cond282, i32* @current_sym_value, align 4, !tbaa !5
  br label %if.end334

land.lhs.true289:                                 ; preds = %land.lhs.true251, %land.lhs.true243
  %arrayidx291 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 1, i64 0
  %rtx292 = bitcast %union.rtunion_def* %arrayidx291 to %struct.rtx_def**
  %36 = load %struct.rtx_def** %rtx292, align 8, !tbaa !1
  %37 = getelementptr inbounds %struct.rtx_def* %36, i64 0, i32 0
  %bf.load293 = load i32* %37, align 8
  %bf.clear294 = and i32 %bf.load293, 65535
  %cmp295 = icmp eq i32 %bf.clear294, 58
  br i1 %cmp295, label %if.then297, label %if.else304

if.then297:                                       ; preds = %land.lhs.true289
  store i32 40, i32* @current_sym_code, align 4, !tbaa !7
  %arrayidx302 = getelementptr inbounds %struct.rtx_def* %36, i64 0, i32 1, i64 0
  %rtx303 = bitcast %union.rtunion_def* %arrayidx302 to %struct.rtx_def**
  %38 = load %struct.rtx_def** %rtx303, align 8, !tbaa !1
  store %struct.rtx_def* %38, %struct.rtx_def** @current_sym_addr, align 8, !tbaa !1
  br label %if.end334

if.else304:                                       ; preds = %if.else83, %land.lhs.true289
  %cmp307 = icmp eq i32 %bf.clear15, 65
  br i1 %cmp307, label %if.then309, label %return

if.then309:                                       ; preds = %if.end13, %if.else304
  %code = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 0, i32 2
  %bf.load312 = load i32* %code, align 8
  %bf.clear313 = and i32 %bf.load312, 255
  %cmp314 = icmp eq i32 %bf.clear313, 8
  br i1 %cmp314, label %if.end317, label %return

if.end317:                                        ; preds = %if.then309
  %type319 = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 0, i32 1
  %39 = load %union.tree_node** %type319, align 8, !tbaa !23
  %arrayidx321 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 1, i64 0
  %rtx322 = bitcast %union.rtunion_def* %arrayidx321 to %struct.rtx_def**
  %40 = load %struct.rtx_def** %rtx322, align 8, !tbaa !1
  %call323 = call fastcc i32 @dbxout_symbol_location(%union.tree_node* %decl, %union.tree_node* %39, i8* getelementptr inbounds ([6 x i8]* @.str16, i64 0, i64 0), %struct.rtx_def* %40)
  store i32 0, i32* @current_sym_code, align 4, !tbaa !7
  store i32 0, i32* @current_sym_value, align 4, !tbaa !5
  store %struct.rtx_def* null, %struct.rtx_def** @current_sym_addr, align 8, !tbaa !1
  %41 = load %struct.rtx_def** %home.addr, align 8, !tbaa !1
  %arrayidx325 = getelementptr inbounds %struct.rtx_def* %41, i64 0, i32 1, i64 1
  %rtx326 = bitcast %union.rtunion_def* %arrayidx325 to %struct.rtx_def**
  %42 = load %struct.rtx_def** %rtx326, align 8, !tbaa !1
  %call327 = call fastcc i32 @dbxout_symbol_location(%union.tree_node* %decl, %union.tree_node* %39, i8* getelementptr inbounds ([6 x i8]* @.str17, i64 0, i64 0), %struct.rtx_def* %42)
  br label %return

if.end334:                                        ; preds = %if.then85, %cond.end235, %if.then297, %cond.end281, %if.end197, %if.then37, %if.then58, %if.end79, %if.then51
  %letter.1 = phi i32 [ 71, %if.then37 ], [ %cond, %if.then51 ], [ %cond, %if.then58 ], [ %cond, %if.end79 ], [ 114, %if.then85 ], [ %letter.0, %if.end197 ], [ 0, %cond.end235 ], [ 0, %cond.end281 ], [ 86, %if.then297 ]
  %type.addr.0 = phi %union.tree_node* [ %type, %if.then37 ], [ %type, %if.then51 ], [ %type, %if.then58 ], [ %type, %if.end79 ], [ %type, %if.then85 ], [ %call198, %if.end197 ], [ %type, %cond.end235 ], [ %type, %cond.end281 ], [ %type, %if.then297 ]
  %context.i = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 9
  %43 = load %union.tree_node** %context.i, align 8, !tbaa !31
  %tobool.i359 = icmp eq %union.tree_node* %43, null
  br i1 %tobool.i359, label %if.else.i362, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %if.end334
  %code.i = getelementptr inbounds %union.tree_node* %43, i64 0, i32 0, i32 0, i32 2
  %bf.load.i = load i32* %code.i, align 8
  %bf.clear.i = and i32 %bf.load.i, 255
  %idxprom35.i = zext i32 %bf.clear.i to i64
  %arrayidx.i = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom35.i
  %44 = load i8* %arrayidx.i, align 1, !tbaa !7
  %cmp.i360 = icmp eq i8 %44, 116
  br i1 %cmp.i360, label %if.then.i361, label %if.else.i362

if.then.i361:                                     ; preds = %land.lhs.true.i
  %assembler_name.i = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 14
  %45 = load %union.tree_node** %assembler_name.i, align 8, !tbaa !27
  %cmp6.i = icmp eq %union.tree_node* %45, null
  br i1 %cmp6.i, label %cond.false.i, label %if.end.i364

cond.false.i:                                     ; preds = %if.then.i361
  %46 = load void (%union.tree_node*)** @lang_set_decl_assembler_name, align 8, !tbaa !1
  call void %46(%union.tree_node* %decl) #5
  br label %if.end.i364

if.else.i362:                                     ; preds = %land.lhs.true.i, %if.end334
  %name11.i = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 8
  br label %if.end.i364

if.end.i364:                                      ; preds = %if.else.i362, %cond.false.i, %if.then.i361
  %.pn.in.i = phi %union.tree_node** [ %name11.i, %if.else.i362 ], [ %assembler_name.i, %if.then.i361 ], [ %assembler_name.i, %cond.false.i ]
  %.pn.i = load %union.tree_node** %.pn.in.i, align 8
  %id.pn.i = getelementptr inbounds %union.tree_node* %.pn.i, i64 0, i32 0, i32 1
  %name.0.in.i = getelementptr inbounds i8** %id.pn.i, i64 1
  %name.0.i = load i8** %name.0.in.i, align 8
  %cmp15.i = icmp eq i8* %name.0.i, null
  %.name.0.i = select i1 %cmp15.i, i8* getelementptr inbounds ([7 x i8]* @.str11, i64 0, i64 0), i8* %name.0.i
  %47 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %tobool19.i = icmp ne i8* %suffix, null
  %cond.i = select i1 %tobool19.i, i8* %suffix, i8* getelementptr inbounds ([1 x i8]* @.str19, i64 0, i64 0)
  %call.i363 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %47, i8* getelementptr inbounds ([9 x i8]* @.str18, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1, i64 0, i64 0), i8* %.name.0.i, i8* %cond.i) #5
  %tobool23.i = icmp eq i32 %letter.1, 0
  br i1 %tobool23.i, label %dbxout_symbol_name.exit, label %if.then24.i

if.then24.i:                                      ; preds = %if.end.i364
  %48 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call25.i = call i32 @putc(i32 %letter.1, %struct._IO_FILE* %48) #5
  br label %dbxout_symbol_name.exit

dbxout_symbol_name.exit:                          ; preds = %if.end.i364, %if.then24.i
  call fastcc void @dbxout_type(%union.tree_node* %type.addr.0, i32 0)
  %49 = load i32* @use_gnu_debug_info_extensions, align 4, !tbaa !5
  %tobool.i = icmp ne i32 %49, 0
  %cmp.i = icmp ne %union.tree_node* %decl, null
  %or.cond.i = and i1 %tobool.i, %cmp.i
  br i1 %or.cond.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %dbxout_symbol_name.exit
  %linenum.i = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 2
  %50 = load i32* %linenum.i, align 4, !tbaa !29
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %dbxout_symbol_name.exit
  %line.0.i = phi i32 [ %50, %if.then.i ], [ 0, %dbxout_symbol_name.exit ]
  %51 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %52 = load i32* @current_sym_code, align 4, !tbaa !7
  %call.i = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %51, i8* getelementptr inbounds ([11 x i8]* @.str13, i64 0, i64 0), i32 %52, i32 %line.0.i) #5
  %53 = load %struct.rtx_def** @current_sym_addr, align 8, !tbaa !1
  %tobool1.i = icmp eq %struct.rtx_def* %53, null
  %54 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  br i1 %tobool1.i, label %if.else.i, label %if.then2.i

if.then2.i:                                       ; preds = %if.end.i
  call void @output_addr_const(%struct._IO_FILE* %54, %struct.rtx_def* %53) #5
  br label %dbxout_finish_symbol.exit

if.else.i:                                        ; preds = %if.end.i
  %55 = load i32* @current_sym_value, align 4, !tbaa !5
  %call3.i = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %54, i8* getelementptr inbounds ([3 x i8]* @.str14, i64 0, i64 0), i32 %55) #5
  br label %dbxout_finish_symbol.exit

dbxout_finish_symbol.exit:                        ; preds = %if.then2.i, %if.else.i
  %56 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call5.i = call i32 @putc(i32 10, %struct._IO_FILE* %56) #5
  br label %return

return:                                           ; preds = %if.end13, %if.else304, %if.then309, %if.then140, %if.then17, %if.then7, %dbxout_finish_symbol.exit, %if.end317
  %retval.0 = phi i32 [ 1, %dbxout_finish_symbol.exit ], [ 1, %if.end317 ], [ 0, %if.then7 ], [ 0, %if.then17 ], [ 0, %if.then140 ], [ 0, %if.then309 ], [ 0, %if.else304 ], [ 0, %if.end13 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @dbxout_syms(%union.tree_node* %syms) #0 {
entry:
  %tobool4 = icmp eq %union.tree_node* %syms, null
  br i1 %tobool4, label %while.end, label %while.body

while.body:                                       ; preds = %entry, %while.body
  %result.06 = phi i32 [ %add, %while.body ], [ 0, %entry ]
  %syms.addr.05 = phi %union.tree_node* [ %0, %while.body ], [ %syms, %entry ]
  %call = tail call i32 @dbxout_symbol(%union.tree_node* %syms.addr.05, i32 undef)
  %add = add nsw i32 %call, %result.06
  %chain = getelementptr inbounds %union.tree_node* %syms.addr.05, i64 0, i32 0, i32 0, i32 0
  %0 = load %union.tree_node** %chain, align 8, !tbaa !49
  %tobool = icmp eq %union.tree_node* %0, null
  br i1 %tobool, label %while.end, label %while.body

while.end:                                        ; preds = %while.body, %entry
  %result.0.lcssa = phi i32 [ 0, %entry ], [ %add, %while.body ]
  ret i32 %result.0.lcssa
}

; Function Attrs: nounwind uwtable
define void @dbxout_parms(%union.tree_node* %parms) #0 {
entry:
  %tobool846 = icmp eq %union.tree_node* %parms, null
  br i1 %tobool846, label %for.end, label %for.body

for.body:                                         ; preds = %entry, %for.inc
  %parms.addr.0847 = phi %union.tree_node* [ %177, %for.inc ], [ %parms, %entry ]
  %name = getelementptr inbounds %union.tree_node* %parms.addr.0847, i64 0, i32 0, i32 8
  %0 = load %union.tree_node** %name, align 8, !tbaa !21
  %tobool1 = icmp eq %union.tree_node* %0, null
  br i1 %tobool1, label %for.inc, label %land.lhs.true

land.lhs.true:                                    ; preds = %for.body
  %type = getelementptr inbounds %union.tree_node* %parms.addr.0847, i64 0, i32 0, i32 0, i32 1
  %1 = load %union.tree_node** %type, align 8, !tbaa !23
  %2 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !1
  %cmp = icmp eq %union.tree_node* %1, %2
  br i1 %cmp, label %for.inc, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %u2 = getelementptr inbounds %union.tree_node* %parms.addr.0847, i64 0, i32 0, i32 19
  %r = bitcast %union.anon.1* %u2 to %struct.rtx_def**
  %3 = load %struct.rtx_def** %r, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @eliminate_regs(%struct.rtx_def* %3, i32 0, %struct.rtx_def* null) #5
  %4 = getelementptr inbounds %union.anon.1* %u2, i64 0, i32 0
  %call.c = bitcast %struct.rtx_def* %call to %struct.function*
  store %struct.function* %call.c, %struct.function** %4, align 8, !tbaa !1
  %rtl = getelementptr inbounds %union.tree_node* %parms.addr.0847, i64 0, i32 0, i32 17
  %5 = load %struct.rtx_def** %rtl, align 8, !tbaa !18
  %tobool7 = icmp eq %struct.rtx_def* %5, null
  br i1 %tobool7, label %cond.false, label %cond.end

cond.false:                                       ; preds = %if.then
  tail call void @make_decl_rtl(%union.tree_node* %parms.addr.0847, i8* null) #5
  %6 = load %struct.rtx_def** %rtl, align 8, !tbaa !18
  br label %cond.end

cond.end:                                         ; preds = %if.then, %cond.false
  %cond = phi %struct.rtx_def* [ %6, %cond.false ], [ %5, %if.then ]
  %call12 = tail call %struct.rtx_def* @eliminate_regs(%struct.rtx_def* %cond, i32 0, %struct.rtx_def* null) #5
  store %struct.rtx_def* %call12, %struct.rtx_def** %rtl, align 8, !tbaa !18
  %7 = load %struct.rtx_def** %r, align 8, !tbaa !1
  %8 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 0
  %bf.load = load i32* %8, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp18 = icmp eq i32 %bf.clear, 66
  br i1 %cmp18, label %if.then19, label %if.else54

if.then19:                                        ; preds = %cond.end
  %arrayidx = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %9 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %10 = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 0
  %bf.load23 = load i32* %10, align 8
  %bf.clear24 = and i32 %bf.load23, 65535
  %cmp25 = icmp eq i32 %bf.clear24, 75
  br i1 %cmp25, label %land.lhs.true26, label %if.end

land.lhs.true26:                                  ; preds = %if.then19
  %arrayidx28 = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 1, i64 1
  %rtx29 = bitcast %union.rtunion_def* %arrayidx28 to %struct.rtx_def**
  %11 = load %struct.rtx_def** %rtx29, align 8, !tbaa !1
  %12 = getelementptr inbounds %struct.rtx_def* %11, i64 0, i32 0
  %bf.load30 = load i32* %12, align 8
  %bf.clear31 = and i32 %bf.load30, 65535
  %cmp32 = icmp eq i32 %bf.clear31, 54
  br i1 %cmp32, label %if.then33, label %if.end

if.then33:                                        ; preds = %land.lhs.true26
  %rtwint = getelementptr inbounds %struct.rtx_def* %11, i64 0, i32 1, i64 0, i32 0
  %13 = load i64* %rtwint, align 8, !tbaa !57
  %conv = trunc i64 %13 to i32
  br label %if.end

if.end:                                           ; preds = %if.then19, %land.lhs.true26, %if.then33
  %storemerge789 = phi i32 [ %conv, %if.then33 ], [ 0, %land.lhs.true26 ], [ 0, %if.then19 ]
  store i32 %storemerge789, i32* @current_sym_value, align 4, !tbaa !5
  store i32 160, i32* @current_sym_code, align 4, !tbaa !7
  store %struct.rtx_def* null, %struct.rtx_def** @current_sym_addr, align 8, !tbaa !1
  %14 = load %union.tree_node** %name, align 8, !tbaa !21
  %tobool41 = icmp eq %union.tree_node* %14, null
  br i1 %tobool41, label %if.else50, label %if.then42

if.then42:                                        ; preds = %if.end
  %id = getelementptr inbounds %union.tree_node* %14, i64 0, i32 0, i32 1
  %len = bitcast i8** %id to i32*
  %15 = load i32* %len, align 4, !tbaa !24
  %add = add i32 %15, 2
  store i32 %add, i32* @current_sym_nchars, align 4, !tbaa !5
  %16 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %17 = getelementptr inbounds i8** %id, i64 1
  %18 = load i8** %17, align 8, !tbaa !28
  %call49 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %16, i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1, i64 0, i64 0), i8* %18, i32 112) #5
  br label %if.end52

if.else50:                                        ; preds = %if.end
  store i32 8, i32* @current_sym_nchars, align 4, !tbaa !5
  %19 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call51 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %19, i8* getelementptr inbounds ([13 x i8]* @.str10, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1, i64 0, i64 0), i32 112) #5
  br label %if.end52

if.end52:                                         ; preds = %if.else50, %if.then42
  %initial = getelementptr inbounds %union.tree_node* %parms.addr.0847, i64 0, i32 0, i32 12
  %20 = load %union.tree_node** %initial, align 8, !tbaa !22
  tail call fastcc void @dbxout_type(%union.tree_node* %20, i32 0)
  %21 = load i32* @use_gnu_debug_info_extensions, align 4, !tbaa !5
  %tobool.i790 = icmp ne i32 %21, 0
  %cmp.i791 = icmp ne %union.tree_node* %parms.addr.0847, null
  %or.cond.i792 = and i1 %tobool.i790, %cmp.i791
  br i1 %or.cond.i792, label %if.then.i794, label %if.end.i798

if.then.i794:                                     ; preds = %if.end52
  %linenum.i793 = getelementptr inbounds %union.tree_node* %parms.addr.0847, i64 0, i32 0, i32 2
  %22 = load i32* %linenum.i793, align 4, !tbaa !29
  br label %if.end.i798

if.end.i798:                                      ; preds = %if.then.i794, %if.end52
  %line.0.i795 = phi i32 [ %22, %if.then.i794 ], [ 0, %if.end52 ]
  %23 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %24 = load i32* @current_sym_code, align 4, !tbaa !7
  %call.i796 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %23, i8* getelementptr inbounds ([11 x i8]* @.str13, i64 0, i64 0), i32 %24, i32 %line.0.i795) #5
  %25 = load %struct.rtx_def** @current_sym_addr, align 8, !tbaa !1
  %tobool1.i797 = icmp eq %struct.rtx_def* %25, null
  %26 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  br i1 %tobool1.i797, label %if.else.i801, label %if.then2.i799

if.then2.i799:                                    ; preds = %if.end.i798
  tail call void @output_addr_const(%struct._IO_FILE* %26, %struct.rtx_def* %25) #5
  br label %dbxout_finish_symbol.exit803

if.else.i801:                                     ; preds = %if.end.i798
  %27 = load i32* @current_sym_value, align 4, !tbaa !5
  %call3.i800 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %26, i8* getelementptr inbounds ([3 x i8]* @.str14, i64 0, i64 0), i32 %27) #5
  br label %dbxout_finish_symbol.exit803

dbxout_finish_symbol.exit803:                     ; preds = %if.then2.i799, %if.else.i801
  %28 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call5.i802 = tail call i32 @putc(i32 10, %struct._IO_FILE* %28) #5
  br label %for.inc

if.else54:                                        ; preds = %cond.end
  %tobool57 = icmp eq %struct.rtx_def* %call12, null
  br i1 %tobool57, label %cond.false61, label %cond.end64

cond.false61:                                     ; preds = %if.else54
  tail call void @make_decl_rtl(%union.tree_node* %parms.addr.0847, i8* null) #5
  %29 = load %struct.rtx_def** %rtl, align 8, !tbaa !18
  br label %cond.end64

cond.end64:                                       ; preds = %if.else54, %cond.false61
  %30 = phi %struct.rtx_def* [ %29, %cond.false61 ], [ %call12, %if.else54 ]
  %31 = getelementptr inbounds %struct.rtx_def* %30, i64 0, i32 0
  %bf.load66 = load i32* %31, align 8
  %bf.clear67 = and i32 %bf.load66, 65535
  %cmp68 = icmp eq i32 %bf.clear67, 61
  br i1 %cmp68, label %if.then70, label %if.else142

if.then70:                                        ; preds = %cond.end64
  store i32 64, i32* @current_sym_code, align 4, !tbaa !7
  store %struct.rtx_def* null, %struct.rtx_def** @current_sym_addr, align 8, !tbaa !1
  %32 = load %struct.rtx_def** %rtl, align 8, !tbaa !18
  %tobool73 = icmp eq %struct.rtx_def* %32, null
  br i1 %tobool73, label %cond.false77, label %cond.end80

cond.false77:                                     ; preds = %if.then70
  tail call void @make_decl_rtl(%union.tree_node* %parms.addr.0847, i8* null) #5
  %33 = load %struct.rtx_def** %rtl, align 8, !tbaa !18
  br label %cond.end80

cond.end80:                                       ; preds = %if.then70, %cond.false77
  %34 = phi %struct.rtx_def* [ %33, %cond.false77 ], [ %32, %if.then70 ]
  %arrayidx83 = getelementptr inbounds %struct.rtx_def* %34, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx83 to i32*
  %35 = load i32* %rtuint, align 4, !tbaa !5
  %cmp84 = icmp ult i32 %35, 53
  br i1 %cmp84, label %if.then86, label %if.else100

if.then86:                                        ; preds = %cond.end80
  %tobool89 = icmp eq %struct.rtx_def* %34, null
  br i1 %tobool89, label %cond.false93, label %if.end106

cond.false93:                                     ; preds = %if.then86
  tail call void @make_decl_rtl(%union.tree_node* %parms.addr.0847, i8* null) #5
  %36 = load %struct.rtx_def** %rtl, align 8, !tbaa !18
  br label %if.end106

if.else100:                                       ; preds = %cond.end80
  %37 = load %struct.rtx_def** %r, align 8, !tbaa !1
  br label %if.end106

if.end106:                                        ; preds = %cond.false93, %if.then86, %if.else100
  %best_rtl.0 = phi %struct.rtx_def* [ %37, %if.else100 ], [ %36, %cond.false93 ], [ %34, %if.then86 ]
  %parm_type.0 = load %union.tree_node** %type, align 8
  %38 = load i32* @target_flags, align 4, !tbaa !5
  %and = and i32 %38, 33554432
  %tobool107 = icmp eq i32 %and, 0
  %arrayidx110 = getelementptr inbounds %struct.rtx_def* %best_rtl.0, i64 0, i32 1, i64 0
  %rtuint111 = bitcast %union.rtunion_def* %arrayidx110 to i32*
  %39 = load i32* %rtuint111, align 4, !tbaa !5
  %idxprom = zext i32 %39 to i64
  %svr4_dbx_register_map.dbx64_register_map = select i1 %tobool107, [53 x i32]* @svr4_dbx_register_map, [53 x i32]* @dbx64_register_map
  %cond120.in = getelementptr inbounds [53 x i32]* %svr4_dbx_register_map.dbx64_register_map, i64 0, i64 %idxprom
  %cond120 = load i32* %cond120.in, align 4
  store i32 %cond120, i32* @current_sym_value, align 4, !tbaa !5
  %40 = load %union.tree_node** %name, align 8, !tbaa !21
  %tobool123 = icmp eq %union.tree_node* %40, null
  br i1 %tobool123, label %if.else138, label %if.then124

if.then124:                                       ; preds = %if.end106
  %id128 = getelementptr inbounds %union.tree_node* %40, i64 0, i32 0, i32 1
  %len129 = bitcast i8** %id128 to i32*
  %41 = load i32* %len129, align 4, !tbaa !24
  %add130 = add i32 %41, 2
  store i32 %add130, i32* @current_sym_nchars, align 4, !tbaa !5
  %42 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %43 = getelementptr inbounds i8** %id128, i64 1
  %44 = load i8** %43, align 8, !tbaa !28
  %call137 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %42, i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1, i64 0, i64 0), i8* %44, i32 80) #5
  br label %if.end141

if.else138:                                       ; preds = %if.end106
  store i32 8, i32* @current_sym_nchars, align 4, !tbaa !5
  %45 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call140 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %45, i8* getelementptr inbounds ([13 x i8]* @.str10, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1, i64 0, i64 0), i32 80) #5
  br label %if.end141

if.end141:                                        ; preds = %if.else138, %if.then124
  tail call fastcc void @dbxout_type(%union.tree_node* %parm_type.0, i32 0)
  %46 = load i32* @use_gnu_debug_info_extensions, align 4, !tbaa !5
  %tobool.i804 = icmp ne i32 %46, 0
  %cmp.i805 = icmp ne %union.tree_node* %parms.addr.0847, null
  %or.cond.i806 = and i1 %tobool.i804, %cmp.i805
  br i1 %or.cond.i806, label %if.then.i808, label %if.end.i812

if.then.i808:                                     ; preds = %if.end141
  %linenum.i807 = getelementptr inbounds %union.tree_node* %parms.addr.0847, i64 0, i32 0, i32 2
  %47 = load i32* %linenum.i807, align 4, !tbaa !29
  br label %if.end.i812

if.end.i812:                                      ; preds = %if.then.i808, %if.end141
  %line.0.i809 = phi i32 [ %47, %if.then.i808 ], [ 0, %if.end141 ]
  %48 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %49 = load i32* @current_sym_code, align 4, !tbaa !7
  %call.i810 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %48, i8* getelementptr inbounds ([11 x i8]* @.str13, i64 0, i64 0), i32 %49, i32 %line.0.i809) #5
  %50 = load %struct.rtx_def** @current_sym_addr, align 8, !tbaa !1
  %tobool1.i811 = icmp eq %struct.rtx_def* %50, null
  %51 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  br i1 %tobool1.i811, label %if.else.i815, label %if.then2.i813

if.then2.i813:                                    ; preds = %if.end.i812
  tail call void @output_addr_const(%struct._IO_FILE* %51, %struct.rtx_def* %50) #5
  br label %dbxout_finish_symbol.exit817

if.else.i815:                                     ; preds = %if.end.i812
  %52 = load i32* @current_sym_value, align 4, !tbaa !5
  %call3.i814 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %51, i8* getelementptr inbounds ([3 x i8]* @.str14, i64 0, i64 0), i32 %52) #5
  br label %dbxout_finish_symbol.exit817

dbxout_finish_symbol.exit817:                     ; preds = %if.then2.i813, %if.else.i815
  %53 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call5.i816 = tail call i32 @putc(i32 10, %struct._IO_FILE* %53) #5
  br label %for.inc

if.else142:                                       ; preds = %cond.end64
  %tobool145 = icmp eq %struct.rtx_def* %30, null
  br i1 %tobool145, label %cond.false149, label %cond.end152

cond.false149:                                    ; preds = %if.else142
  tail call void @make_decl_rtl(%union.tree_node* %parms.addr.0847, i8* null) #5
  %54 = load %struct.rtx_def** %rtl, align 8, !tbaa !18
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %54, i64 0, i32 0
  %bf.load154.pre = load i32* %.phi.trans.insert, align 8
  br label %cond.end152

cond.end152:                                      ; preds = %if.else142, %cond.false149
  %bf.load154 = phi i32 [ %bf.load154.pre, %cond.false149 ], [ %bf.load66, %if.else142 ]
  %55 = phi %struct.rtx_def* [ %54, %cond.false149 ], [ %30, %if.else142 ]
  %bf.clear155 = and i32 %bf.load154, 65535
  %cmp156 = icmp eq i32 %bf.clear155, 66
  br i1 %cmp156, label %land.lhs.true158, label %if.else313

land.lhs.true158:                                 ; preds = %cond.end152
  %tobool161 = icmp eq %struct.rtx_def* %55, null
  br i1 %tobool161, label %cond.false165, label %cond.end168

cond.false165:                                    ; preds = %land.lhs.true158
  tail call void @make_decl_rtl(%union.tree_node* %parms.addr.0847, i8* null) #5
  %56 = load %struct.rtx_def** %rtl, align 8, !tbaa !18
  br label %cond.end168

cond.end168:                                      ; preds = %land.lhs.true158, %cond.false165
  %57 = phi %struct.rtx_def* [ %56, %cond.false165 ], [ %55, %land.lhs.true158 ]
  %arrayidx171 = getelementptr inbounds %struct.rtx_def* %57, i64 0, i32 1, i64 0
  %rtx172 = bitcast %union.rtunion_def* %arrayidx171 to %struct.rtx_def**
  %58 = load %struct.rtx_def** %rtx172, align 8, !tbaa !1
  %59 = getelementptr inbounds %struct.rtx_def* %58, i64 0, i32 0
  %bf.load173 = load i32* %59, align 8
  %bf.clear174 = and i32 %bf.load173, 65535
  %cmp175 = icmp eq i32 %bf.clear174, 61
  br i1 %cmp175, label %land.lhs.true177, label %if.else313

land.lhs.true177:                                 ; preds = %cond.end168
  %tobool180 = icmp eq %struct.rtx_def* %57, null
  br i1 %tobool180, label %cond.false184, label %cond.end187

cond.false184:                                    ; preds = %land.lhs.true177
  tail call void @make_decl_rtl(%union.tree_node* %parms.addr.0847, i8* null) #5
  %60 = load %struct.rtx_def** %rtl, align 8, !tbaa !18
  %arrayidx190.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %60, i64 0, i32 1, i64 0
  %rtx191.phi.trans.insert = bitcast %union.rtunion_def* %arrayidx190.phi.trans.insert to %struct.rtx_def**
  %.pre = load %struct.rtx_def** %rtx191.phi.trans.insert, align 8, !tbaa !1
  br label %cond.end187

cond.end187:                                      ; preds = %land.lhs.true177, %cond.false184
  %61 = phi %struct.rtx_def* [ %.pre, %cond.false184 ], [ %58, %land.lhs.true177 ]
  %62 = phi %struct.rtx_def* [ %60, %cond.false184 ], [ %57, %land.lhs.true177 ]
  %arrayidx193 = getelementptr inbounds %struct.rtx_def* %61, i64 0, i32 1, i64 0
  %rtuint194 = bitcast %union.rtunion_def* %arrayidx193 to i32*
  %63 = load i32* %rtuint194, align 4, !tbaa !5
  %cmp195 = icmp eq i32 %63, 6
  br i1 %cmp195, label %if.else313, label %land.lhs.true197

land.lhs.true197:                                 ; preds = %cond.end187
  %tobool200 = icmp eq %struct.rtx_def* %62, null
  br i1 %tobool200, label %cond.false204, label %cond.end207

cond.false204:                                    ; preds = %land.lhs.true197
  tail call void @make_decl_rtl(%union.tree_node* %parms.addr.0847, i8* null) #5
  %64 = load %struct.rtx_def** %rtl, align 8, !tbaa !18
  %arrayidx210.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %64, i64 0, i32 1, i64 0
  %rtx211.phi.trans.insert = bitcast %union.rtunion_def* %arrayidx210.phi.trans.insert to %struct.rtx_def**
  %.pre851 = load %struct.rtx_def** %rtx211.phi.trans.insert, align 8, !tbaa !1
  %arrayidx213.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %.pre851, i64 0, i32 1, i64 0
  %rtuint214.phi.trans.insert = bitcast %union.rtunion_def* %arrayidx213.phi.trans.insert to i32*
  %.pre852 = load i32* %rtuint214.phi.trans.insert, align 4, !tbaa !5
  br label %cond.end207

cond.end207:                                      ; preds = %land.lhs.true197, %cond.false204
  %65 = phi i32 [ %.pre852, %cond.false204 ], [ %63, %land.lhs.true197 ]
  %66 = phi %struct.rtx_def* [ %.pre851, %cond.false204 ], [ %61, %land.lhs.true197 ]
  %67 = phi %struct.rtx_def* [ %64, %cond.false204 ], [ %62, %land.lhs.true197 ]
  %cmp215 = icmp eq i32 %65, 7
  br i1 %cmp215, label %if.else313, label %land.lhs.true217

land.lhs.true217:                                 ; preds = %cond.end207
  %tobool220 = icmp eq %struct.rtx_def* %67, null
  br i1 %tobool220, label %cond.false224, label %cond.end227

cond.false224:                                    ; preds = %land.lhs.true217
  tail call void @make_decl_rtl(%union.tree_node* %parms.addr.0847, i8* null) #5
  %68 = load %struct.rtx_def** %rtl, align 8, !tbaa !18
  %arrayidx230.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %68, i64 0, i32 1, i64 0
  %rtx231.phi.trans.insert = bitcast %union.rtunion_def* %arrayidx230.phi.trans.insert to %struct.rtx_def**
  %.pre853 = load %struct.rtx_def** %rtx231.phi.trans.insert, align 8, !tbaa !1
  %arrayidx233.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %.pre853, i64 0, i32 1, i64 0
  %rtuint234.phi.trans.insert = bitcast %union.rtunion_def* %arrayidx233.phi.trans.insert to i32*
  %.pre854 = load i32* %rtuint234.phi.trans.insert, align 4, !tbaa !5
  br label %cond.end227

cond.end227:                                      ; preds = %land.lhs.true217, %cond.false224
  %69 = phi i32 [ %.pre854, %cond.false224 ], [ %65, %land.lhs.true217 ]
  %70 = phi %struct.rtx_def* [ %.pre853, %cond.false224 ], [ %66, %land.lhs.true217 ]
  %71 = phi %struct.rtx_def* [ %68, %cond.false224 ], [ %67, %land.lhs.true217 ]
  %cmp235 = icmp eq i32 %69, 16
  br i1 %cmp235, label %if.else313, label %if.then237

if.then237:                                       ; preds = %cond.end227
  store i32 64, i32* @current_sym_code, align 4, !tbaa !7
  %72 = load i32* @use_gnu_debug_info_extensions, align 4, !tbaa !5
  %tobool239 = icmp eq i32 %72, 0
  %. = select i1 %tobool239, i32 80, i32 97
  %tobool245 = icmp eq %struct.rtx_def* %71, null
  br i1 %tobool245, label %cond.false249, label %cond.end252

cond.false249:                                    ; preds = %if.then237
  tail call void @make_decl_rtl(%union.tree_node* %parms.addr.0847, i8* null) #5
  %73 = load %struct.rtx_def** %rtl, align 8, !tbaa !18
  %arrayidx255.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %73, i64 0, i32 1, i64 0
  %rtx256.phi.trans.insert = bitcast %union.rtunion_def* %arrayidx255.phi.trans.insert to %struct.rtx_def**
  %.pre855 = load %struct.rtx_def** %rtx256.phi.trans.insert, align 8, !tbaa !1
  br label %cond.end252

cond.end252:                                      ; preds = %if.then237, %cond.false249
  %74 = phi %struct.rtx_def* [ %.pre855, %cond.false249 ], [ %70, %if.then237 ]
  %75 = phi %struct.rtx_def* [ %73, %cond.false249 ], [ %71, %if.then237 ]
  %arrayidx258 = getelementptr inbounds %struct.rtx_def* %74, i64 0, i32 1, i64 0
  %rtuint259 = bitcast %union.rtunion_def* %arrayidx258 to i32*
  %76 = load i32* %rtuint259, align 4, !tbaa !5
  %cmp260 = icmp ult i32 %76, 53
  br i1 %cmp260, label %if.then262, label %if.end287

if.then262:                                       ; preds = %cond.end252
  %tobool265 = icmp eq %struct.rtx_def* %75, null
  br i1 %tobool265, label %cond.false269, label %cond.end272

cond.false269:                                    ; preds = %if.then262
  tail call void @make_decl_rtl(%union.tree_node* %parms.addr.0847, i8* null) #5
  %77 = load %struct.rtx_def** %rtl, align 8, !tbaa !18
  br label %cond.end272

cond.end272:                                      ; preds = %if.then262, %cond.false269
  %cond273 = phi %struct.rtx_def* [ %77, %cond.false269 ], [ %75, %if.then262 ]
  %arrayidx275 = getelementptr inbounds %struct.rtx_def* %cond273, i64 0, i32 1, i64 0
  %rtx276 = bitcast %union.rtunion_def* %arrayidx275 to %struct.rtx_def**
  br label %if.end287

if.end287:                                        ; preds = %cond.end252, %cond.end272
  %.pn.in = phi %struct.rtx_def** [ %rtx276, %cond.end272 ], [ %r, %cond.end252 ]
  %.pn = load %struct.rtx_def** %.pn.in, align 8
  %storemerge788.in.in = getelementptr inbounds %struct.rtx_def* %.pn, i64 0, i32 1, i64 0
  %storemerge788.in = bitcast %union.rtunion_def* %storemerge788.in.in to i32*
  %storemerge788 = load i32* %storemerge788.in, align 4
  store i32 %storemerge788, i32* @current_sym_value, align 4, !tbaa !5
  store %struct.rtx_def* null, %struct.rtx_def** @current_sym_addr, align 8, !tbaa !1
  %78 = load %union.tree_node** %name, align 8, !tbaa !21
  %tobool290 = icmp eq %union.tree_node* %78, null
  br i1 %tobool290, label %if.else307, label %if.then291

if.then291:                                       ; preds = %if.end287
  %id295 = getelementptr inbounds %union.tree_node* %78, i64 0, i32 0, i32 1
  %79 = getelementptr inbounds i8** %id295, i64 1
  %80 = load i8** %79, align 8, !tbaa !28
  %call297 = tail call i64 @strlen(i8* %80) #5
  %add298 = add i64 %call297, 2
  %conv299 = trunc i64 %add298 to i32
  store i32 %conv299, i32* @current_sym_nchars, align 4, !tbaa !5
  %81 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call306 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %81, i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1, i64 0, i64 0), i8* %80, i32 %.) #5
  br label %if.end310

if.else307:                                       ; preds = %if.end287
  store i32 8, i32* @current_sym_nchars, align 4, !tbaa !5
  %82 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call309 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %82, i8* getelementptr inbounds ([13 x i8]* @.str10, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1, i64 0, i64 0), i32 %.) #5
  br label %if.end310

if.end310:                                        ; preds = %if.else307, %if.then291
  %83 = load %union.tree_node** %type, align 8, !tbaa !23
  tail call fastcc void @dbxout_type(%union.tree_node* %83, i32 0)
  %84 = load i32* @use_gnu_debug_info_extensions, align 4, !tbaa !5
  %tobool.i818 = icmp ne i32 %84, 0
  %cmp.i819 = icmp ne %union.tree_node* %parms.addr.0847, null
  %or.cond.i820 = and i1 %tobool.i818, %cmp.i819
  br i1 %or.cond.i820, label %if.then.i822, label %if.end.i826

if.then.i822:                                     ; preds = %if.end310
  %linenum.i821 = getelementptr inbounds %union.tree_node* %parms.addr.0847, i64 0, i32 0, i32 2
  %85 = load i32* %linenum.i821, align 4, !tbaa !29
  br label %if.end.i826

if.end.i826:                                      ; preds = %if.then.i822, %if.end310
  %line.0.i823 = phi i32 [ %85, %if.then.i822 ], [ 0, %if.end310 ]
  %86 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %87 = load i32* @current_sym_code, align 4, !tbaa !7
  %call.i824 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %86, i8* getelementptr inbounds ([11 x i8]* @.str13, i64 0, i64 0), i32 %87, i32 %line.0.i823) #5
  %88 = load %struct.rtx_def** @current_sym_addr, align 8, !tbaa !1
  %tobool1.i825 = icmp eq %struct.rtx_def* %88, null
  %89 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  br i1 %tobool1.i825, label %if.else.i829, label %if.then2.i827

if.then2.i827:                                    ; preds = %if.end.i826
  tail call void @output_addr_const(%struct._IO_FILE* %89, %struct.rtx_def* %88) #5
  br label %dbxout_finish_symbol.exit831

if.else.i829:                                     ; preds = %if.end.i826
  %90 = load i32* @current_sym_value, align 4, !tbaa !5
  %call3.i828 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %89, i8* getelementptr inbounds ([3 x i8]* @.str14, i64 0, i64 0), i32 %90) #5
  br label %dbxout_finish_symbol.exit831

dbxout_finish_symbol.exit831:                     ; preds = %if.then2.i827, %if.else.i829
  %91 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call5.i830 = tail call i32 @putc(i32 10, %struct._IO_FILE* %91) #5
  br label %for.inc

if.else313:                                       ; preds = %cond.end227, %cond.end207, %cond.end187, %cond.end168, %cond.end152
  %92 = phi %struct.rtx_def* [ %71, %cond.end227 ], [ %67, %cond.end207 ], [ %62, %cond.end187 ], [ %57, %cond.end168 ], [ %55, %cond.end152 ]
  %tobool316 = icmp eq %struct.rtx_def* %92, null
  br i1 %tobool316, label %cond.false320, label %cond.end323

cond.false320:                                    ; preds = %if.else313
  tail call void @make_decl_rtl(%union.tree_node* %parms.addr.0847, i8* null) #5
  %93 = load %struct.rtx_def** %rtl, align 8, !tbaa !18
  br label %cond.end323

cond.end323:                                      ; preds = %if.else313, %cond.false320
  %94 = phi %struct.rtx_def* [ %93, %cond.false320 ], [ %92, %if.else313 ]
  %95 = getelementptr inbounds %struct.rtx_def* %94, i64 0, i32 0
  %bf.load325 = load i32* %95, align 8
  %bf.clear326 = and i32 %bf.load325, 65535
  %cmp327 = icmp eq i32 %bf.clear326, 66
  br i1 %cmp327, label %land.lhs.true329, label %if.else412

land.lhs.true329:                                 ; preds = %cond.end323
  %tobool332 = icmp eq %struct.rtx_def* %94, null
  br i1 %tobool332, label %cond.false336, label %cond.end339

cond.false336:                                    ; preds = %land.lhs.true329
  tail call void @make_decl_rtl(%union.tree_node* %parms.addr.0847, i8* null) #5
  %96 = load %struct.rtx_def** %rtl, align 8, !tbaa !18
  br label %cond.end339

cond.end339:                                      ; preds = %land.lhs.true329, %cond.false336
  %97 = phi %struct.rtx_def* [ %96, %cond.false336 ], [ %94, %land.lhs.true329 ]
  %arrayidx342 = getelementptr inbounds %struct.rtx_def* %97, i64 0, i32 1, i64 0
  %rtx343 = bitcast %union.rtunion_def* %arrayidx342 to %struct.rtx_def**
  %98 = load %struct.rtx_def** %rtx343, align 8, !tbaa !1
  %99 = getelementptr inbounds %struct.rtx_def* %98, i64 0, i32 0
  %bf.load344 = load i32* %99, align 8
  %bf.clear345 = and i32 %bf.load344, 65535
  %cmp346 = icmp eq i32 %bf.clear345, 66
  br i1 %cmp346, label %if.then348, label %if.else412

if.then348:                                       ; preds = %cond.end339
  %100 = load %union.tree_node** %name, align 8, !tbaa !21
  %tobool351 = icmp eq %union.tree_node* %100, null
  br i1 %tobool351, label %cond.end359, label %cond.true352

cond.true352:                                     ; preds = %if.then348
  %id356 = getelementptr inbounds %union.tree_node* %100, i64 0, i32 0, i32 1
  %101 = getelementptr inbounds i8** %id356, i64 1
  %102 = load i8** %101, align 8, !tbaa !28
  br label %cond.end359

cond.end359:                                      ; preds = %if.then348, %cond.true352
  %cond360 = phi i8* [ %102, %cond.true352 ], [ getelementptr inbounds ([7 x i8]* @.str11, i64 0, i64 0), %if.then348 ]
  %tobool363 = icmp eq %struct.rtx_def* %97, null
  br i1 %tobool363, label %cond.false367, label %cond.end370

cond.false367:                                    ; preds = %cond.end359
  tail call void @make_decl_rtl(%union.tree_node* %parms.addr.0847, i8* null) #5
  %103 = load %struct.rtx_def** %rtl, align 8, !tbaa !18
  %arrayidx373.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %103, i64 0, i32 1, i64 0
  %rtx374.phi.trans.insert = bitcast %union.rtunion_def* %arrayidx373.phi.trans.insert to %struct.rtx_def**
  %.pre856 = load %struct.rtx_def** %rtx374.phi.trans.insert, align 8, !tbaa !1
  br label %cond.end370

cond.end370:                                      ; preds = %cond.end359, %cond.false367
  %104 = phi %struct.rtx_def* [ %.pre856, %cond.false367 ], [ %98, %cond.end359 ]
  %105 = phi %struct.rtx_def* [ %103, %cond.false367 ], [ %97, %cond.end359 ]
  %arrayidx376 = getelementptr inbounds %struct.rtx_def* %104, i64 0, i32 1, i64 0
  %rtx377 = bitcast %union.rtunion_def* %arrayidx376 to %struct.rtx_def**
  %106 = load %struct.rtx_def** %rtx377, align 8, !tbaa !1
  %107 = getelementptr inbounds %struct.rtx_def* %106, i64 0, i32 0
  %bf.load378 = load i32* %107, align 8
  %bf.clear379 = and i32 %bf.load378, 65535
  %cmp380 = icmp eq i32 %bf.clear379, 61
  br i1 %cmp380, label %if.end408, label %if.else383

if.else383:                                       ; preds = %cond.end370
  %tobool386 = icmp eq %struct.rtx_def* %105, null
  br i1 %tobool386, label %cond.false390, label %cond.end393

cond.false390:                                    ; preds = %if.else383
  tail call void @make_decl_rtl(%union.tree_node* %parms.addr.0847, i8* null) #5
  %108 = load %struct.rtx_def** %rtl, align 8, !tbaa !18
  %arrayidx396.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %108, i64 0, i32 1, i64 0
  %rtx397.phi.trans.insert = bitcast %union.rtunion_def* %arrayidx396.phi.trans.insert to %struct.rtx_def**
  %.pre857 = load %struct.rtx_def** %rtx397.phi.trans.insert, align 8, !tbaa !1
  %arrayidx399.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %.pre857, i64 0, i32 1, i64 0
  %rtx400.phi.trans.insert = bitcast %union.rtunion_def* %arrayidx399.phi.trans.insert to %struct.rtx_def**
  %.pre858 = load %struct.rtx_def** %rtx400.phi.trans.insert, align 8, !tbaa !1
  br label %cond.end393

cond.end393:                                      ; preds = %if.else383, %cond.false390
  %109 = phi %struct.rtx_def* [ %.pre858, %cond.false390 ], [ %106, %if.else383 ]
  %arrayidx402 = getelementptr inbounds %struct.rtx_def* %109, i64 0, i32 1, i64 1
  %rtx403 = bitcast %union.rtunion_def* %arrayidx402 to %struct.rtx_def**
  %110 = load %struct.rtx_def** %rtx403, align 8, !tbaa !1
  %rtwint406 = getelementptr inbounds %struct.rtx_def* %110, i64 0, i32 1, i64 0, i32 0
  %111 = load i64* %rtwint406, align 8, !tbaa !57
  %conv407 = trunc i64 %111 to i32
  br label %if.end408

if.end408:                                        ; preds = %cond.end370, %cond.end393
  %storemerge787 = phi i32 [ %conv407, %cond.end393 ], [ 0, %cond.end370 ]
  store i32 %storemerge787, i32* @current_sym_value, align 4, !tbaa !5
  store %struct.rtx_def* null, %struct.rtx_def** @current_sym_addr, align 8, !tbaa !1
  %112 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call409 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %112, i8* getelementptr inbounds ([8 x i8]* @.str12, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1, i64 0, i64 0), i8* %cond360) #5
  %113 = load %union.tree_node** %type, align 8, !tbaa !23
  tail call fastcc void @dbxout_type(%union.tree_node* %113, i32 0)
  %114 = load i32* @use_gnu_debug_info_extensions, align 4, !tbaa !5
  %tobool.i832 = icmp ne i32 %114, 0
  %cmp.i833 = icmp ne %union.tree_node* %parms.addr.0847, null
  %or.cond.i834 = and i1 %tobool.i832, %cmp.i833
  br i1 %or.cond.i834, label %if.then.i836, label %if.end.i840

if.then.i836:                                     ; preds = %if.end408
  %linenum.i835 = getelementptr inbounds %union.tree_node* %parms.addr.0847, i64 0, i32 0, i32 2
  %115 = load i32* %linenum.i835, align 4, !tbaa !29
  br label %if.end.i840

if.end.i840:                                      ; preds = %if.then.i836, %if.end408
  %line.0.i837 = phi i32 [ %115, %if.then.i836 ], [ 0, %if.end408 ]
  %116 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %117 = load i32* @current_sym_code, align 4, !tbaa !7
  %call.i838 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %116, i8* getelementptr inbounds ([11 x i8]* @.str13, i64 0, i64 0), i32 %117, i32 %line.0.i837) #5
  %118 = load %struct.rtx_def** @current_sym_addr, align 8, !tbaa !1
  %tobool1.i839 = icmp eq %struct.rtx_def* %118, null
  %119 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  br i1 %tobool1.i839, label %if.else.i843, label %if.then2.i841

if.then2.i841:                                    ; preds = %if.end.i840
  tail call void @output_addr_const(%struct._IO_FILE* %119, %struct.rtx_def* %118) #5
  br label %dbxout_finish_symbol.exit845

if.else.i843:                                     ; preds = %if.end.i840
  %120 = load i32* @current_sym_value, align 4, !tbaa !5
  %call3.i842 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %119, i8* getelementptr inbounds ([3 x i8]* @.str14, i64 0, i64 0), i32 %120) #5
  br label %dbxout_finish_symbol.exit845

dbxout_finish_symbol.exit845:                     ; preds = %if.then2.i841, %if.else.i843
  %121 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call5.i844 = tail call i32 @putc(i32 10, %struct._IO_FILE* %121) #5
  br label %for.inc

if.else412:                                       ; preds = %cond.end339, %cond.end323
  %122 = phi %struct.rtx_def* [ %97, %cond.end339 ], [ %94, %cond.end323 ]
  %tobool415 = icmp eq %struct.rtx_def* %122, null
  br i1 %tobool415, label %cond.false419, label %cond.end422

cond.false419:                                    ; preds = %if.else412
  tail call void @make_decl_rtl(%union.tree_node* %parms.addr.0847, i8* null) #5
  %123 = load %struct.rtx_def** %rtl, align 8, !tbaa !18
  br label %cond.end422

cond.end422:                                      ; preds = %if.else412, %cond.false419
  %124 = phi %struct.rtx_def* [ %123, %cond.false419 ], [ %122, %if.else412 ]
  %125 = getelementptr inbounds %struct.rtx_def* %124, i64 0, i32 0
  %bf.load424 = load i32* %125, align 8
  %bf.clear425 = and i32 %bf.load424, 65535
  %cmp426 = icmp eq i32 %bf.clear425, 66
  br i1 %cmp426, label %land.lhs.true428, label %for.inc

land.lhs.true428:                                 ; preds = %cond.end422
  %tobool431 = icmp eq %struct.rtx_def* %124, null
  br i1 %tobool431, label %cond.false435, label %cond.end438

cond.false435:                                    ; preds = %land.lhs.true428
  tail call void @make_decl_rtl(%union.tree_node* %parms.addr.0847, i8* null) #5
  %126 = load %struct.rtx_def** %rtl, align 8, !tbaa !18
  br label %cond.end438

cond.end438:                                      ; preds = %land.lhs.true428, %cond.false435
  %127 = phi %struct.rtx_def* [ %126, %cond.false435 ], [ %124, %land.lhs.true428 ]
  %arrayidx441 = getelementptr inbounds %struct.rtx_def* %127, i64 0, i32 1, i64 0
  %rtx442 = bitcast %union.rtunion_def* %arrayidx441 to %struct.rtx_def**
  %128 = load %struct.rtx_def** %rtx442, align 8, !tbaa !1
  %129 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %cmp443 = icmp eq %struct.rtx_def* %128, %129
  br i1 %cmp443, label %for.inc, label %land.lhs.true445

land.lhs.true445:                                 ; preds = %cond.end438
  %tobool448 = icmp eq %struct.rtx_def* %127, null
  br i1 %tobool448, label %cond.false452, label %cond.end455

cond.false452:                                    ; preds = %land.lhs.true445
  tail call void @make_decl_rtl(%union.tree_node* %parms.addr.0847, i8* null) #5
  %130 = load %struct.rtx_def** %rtl, align 8, !tbaa !18
  %arrayidx458.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %130, i64 0, i32 1, i64 0
  %rtx459.phi.trans.insert = bitcast %union.rtunion_def* %arrayidx458.phi.trans.insert to %struct.rtx_def**
  %.pre859 = load %struct.rtx_def** %rtx459.phi.trans.insert, align 8, !tbaa !1
  br label %cond.end455

cond.end455:                                      ; preds = %land.lhs.true445, %cond.false452
  %131 = phi %struct.rtx_def* [ %.pre859, %cond.false452 ], [ %128, %land.lhs.true445 ]
  %132 = phi %struct.rtx_def* [ %130, %cond.false452 ], [ %127, %land.lhs.true445 ]
  %133 = getelementptr inbounds %struct.rtx_def* %131, i64 0, i32 0
  %bf.load460 = load i32* %133, align 8
  %bf.clear461 = and i32 %bf.load460, 65535
  %cmp462 = icmp eq i32 %bf.clear461, 67
  br i1 %cmp462, label %for.inc, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %cond.end455
  %tobool466 = icmp eq %struct.rtx_def* %132, null
  br i1 %tobool466, label %cond.false470, label %cond.end473

cond.false470:                                    ; preds = %lor.lhs.false
  tail call void @make_decl_rtl(%union.tree_node* %parms.addr.0847, i8* null) #5
  %134 = load %struct.rtx_def** %rtl, align 8, !tbaa !18
  %arrayidx476.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %134, i64 0, i32 1, i64 0
  %rtx477.phi.trans.insert = bitcast %union.rtunion_def* %arrayidx476.phi.trans.insert to %struct.rtx_def**
  %.pre860 = load %struct.rtx_def** %rtx477.phi.trans.insert, align 8, !tbaa !1
  %.phi.trans.insert861 = getelementptr inbounds %struct.rtx_def* %.pre860, i64 0, i32 0
  %bf.load478.pre = load i32* %.phi.trans.insert861, align 8
  br label %cond.end473

cond.end473:                                      ; preds = %lor.lhs.false, %cond.false470
  %bf.load478 = phi i32 [ %bf.load478.pre, %cond.false470 ], [ %bf.load460, %lor.lhs.false ]
  %135 = phi %struct.rtx_def* [ %.pre860, %cond.false470 ], [ %131, %lor.lhs.false ]
  %136 = phi %struct.rtx_def* [ %134, %cond.false470 ], [ %132, %lor.lhs.false ]
  %bf.clear479 = and i32 %bf.load478, 65535
  %cmp480 = icmp eq i32 %bf.clear479, 68
  br i1 %cmp480, label %for.inc, label %lor.lhs.false482

lor.lhs.false482:                                 ; preds = %cond.end473
  %tobool485 = icmp eq %struct.rtx_def* %136, null
  br i1 %tobool485, label %cond.false489, label %cond.end492

cond.false489:                                    ; preds = %lor.lhs.false482
  tail call void @make_decl_rtl(%union.tree_node* %parms.addr.0847, i8* null) #5
  %137 = load %struct.rtx_def** %rtl, align 8, !tbaa !18
  %arrayidx495.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %137, i64 0, i32 1, i64 0
  %rtx496.phi.trans.insert = bitcast %union.rtunion_def* %arrayidx495.phi.trans.insert to %struct.rtx_def**
  %.pre863 = load %struct.rtx_def** %rtx496.phi.trans.insert, align 8, !tbaa !1
  %.phi.trans.insert864 = getelementptr inbounds %struct.rtx_def* %.pre863, i64 0, i32 0
  %bf.load497.pre = load i32* %.phi.trans.insert864, align 8
  br label %cond.end492

cond.end492:                                      ; preds = %lor.lhs.false482, %cond.false489
  %bf.load497 = phi i32 [ %bf.load497.pre, %cond.false489 ], [ %bf.load478, %lor.lhs.false482 ]
  %138 = phi %struct.rtx_def* [ %.pre863, %cond.false489 ], [ %135, %lor.lhs.false482 ]
  %139 = phi %struct.rtx_def* [ %137, %cond.false489 ], [ %136, %lor.lhs.false482 ]
  %bf.clear498 = and i32 %bf.load497, 65535
  %cmp499 = icmp eq i32 %bf.clear498, 54
  br i1 %cmp499, label %for.inc, label %lor.lhs.false501

lor.lhs.false501:                                 ; preds = %cond.end492
  %tobool504 = icmp eq %struct.rtx_def* %139, null
  br i1 %tobool504, label %cond.false508, label %cond.end511

cond.false508:                                    ; preds = %lor.lhs.false501
  tail call void @make_decl_rtl(%union.tree_node* %parms.addr.0847, i8* null) #5
  %140 = load %struct.rtx_def** %rtl, align 8, !tbaa !18
  %arrayidx514.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %140, i64 0, i32 1, i64 0
  %rtx515.phi.trans.insert = bitcast %union.rtunion_def* %arrayidx514.phi.trans.insert to %struct.rtx_def**
  %.pre866 = load %struct.rtx_def** %rtx515.phi.trans.insert, align 8, !tbaa !1
  %.phi.trans.insert867 = getelementptr inbounds %struct.rtx_def* %.pre866, i64 0, i32 0
  %bf.load516.pre = load i32* %.phi.trans.insert867, align 8
  br label %cond.end511

cond.end511:                                      ; preds = %lor.lhs.false501, %cond.false508
  %bf.load516 = phi i32 [ %bf.load516.pre, %cond.false508 ], [ %bf.load497, %lor.lhs.false501 ]
  %141 = phi %struct.rtx_def* [ %.pre866, %cond.false508 ], [ %138, %lor.lhs.false501 ]
  %142 = phi %struct.rtx_def* [ %140, %cond.false508 ], [ %139, %lor.lhs.false501 ]
  %bf.clear517 = and i32 %bf.load516, 65535
  %cmp518 = icmp eq i32 %bf.clear517, 55
  br i1 %cmp518, label %for.inc, label %lor.lhs.false520

lor.lhs.false520:                                 ; preds = %cond.end511
  %tobool523 = icmp eq %struct.rtx_def* %142, null
  br i1 %tobool523, label %cond.false527, label %cond.end530

cond.false527:                                    ; preds = %lor.lhs.false520
  tail call void @make_decl_rtl(%union.tree_node* %parms.addr.0847, i8* null) #5
  %143 = load %struct.rtx_def** %rtl, align 8, !tbaa !18
  %arrayidx533.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %143, i64 0, i32 1, i64 0
  %rtx534.phi.trans.insert = bitcast %union.rtunion_def* %arrayidx533.phi.trans.insert to %struct.rtx_def**
  %.pre869 = load %struct.rtx_def** %rtx534.phi.trans.insert, align 8, !tbaa !1
  %.phi.trans.insert870 = getelementptr inbounds %struct.rtx_def* %.pre869, i64 0, i32 0
  %bf.load535.pre = load i32* %.phi.trans.insert870, align 8
  br label %cond.end530

cond.end530:                                      ; preds = %lor.lhs.false520, %cond.false527
  %bf.load535 = phi i32 [ %bf.load535.pre, %cond.false527 ], [ %bf.load516, %lor.lhs.false520 ]
  %144 = phi %struct.rtx_def* [ %.pre869, %cond.false527 ], [ %141, %lor.lhs.false520 ]
  %145 = phi %struct.rtx_def* [ %143, %cond.false527 ], [ %142, %lor.lhs.false520 ]
  %bf.clear536 = and i32 %bf.load535, 65535
  %cmp537 = icmp eq i32 %bf.clear536, 58
  br i1 %cmp537, label %for.inc, label %lor.lhs.false539

lor.lhs.false539:                                 ; preds = %cond.end530
  %tobool542 = icmp eq %struct.rtx_def* %145, null
  br i1 %tobool542, label %cond.false546, label %cond.end549

cond.false546:                                    ; preds = %lor.lhs.false539
  tail call void @make_decl_rtl(%union.tree_node* %parms.addr.0847, i8* null) #5
  %146 = load %struct.rtx_def** %rtl, align 8, !tbaa !18
  %arrayidx552.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %146, i64 0, i32 1, i64 0
  %rtx553.phi.trans.insert = bitcast %union.rtunion_def* %arrayidx552.phi.trans.insert to %struct.rtx_def**
  %.pre872 = load %struct.rtx_def** %rtx553.phi.trans.insert, align 8, !tbaa !1
  %.phi.trans.insert873 = getelementptr inbounds %struct.rtx_def* %.pre872, i64 0, i32 0
  %bf.load554.pre = load i32* %.phi.trans.insert873, align 8
  br label %cond.end549

cond.end549:                                      ; preds = %lor.lhs.false539, %cond.false546
  %bf.load554 = phi i32 [ %bf.load554.pre, %cond.false546 ], [ %bf.load535, %lor.lhs.false539 ]
  %147 = phi %struct.rtx_def* [ %.pre872, %cond.false546 ], [ %144, %lor.lhs.false539 ]
  %148 = phi %struct.rtx_def* [ %146, %cond.false546 ], [ %145, %lor.lhs.false539 ]
  %bf.clear555 = and i32 %bf.load554, 65535
  %cmp556 = icmp eq i32 %bf.clear555, 134
  br i1 %cmp556, label %for.inc, label %lor.lhs.false558

lor.lhs.false558:                                 ; preds = %cond.end549
  %tobool561 = icmp eq %struct.rtx_def* %148, null
  br i1 %tobool561, label %cond.false565, label %cond.end568

cond.false565:                                    ; preds = %lor.lhs.false558
  tail call void @make_decl_rtl(%union.tree_node* %parms.addr.0847, i8* null) #5
  %149 = load %struct.rtx_def** %rtl, align 8, !tbaa !18
  %arrayidx571.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %149, i64 0, i32 1, i64 0
  %rtx572.phi.trans.insert = bitcast %union.rtunion_def* %arrayidx571.phi.trans.insert to %struct.rtx_def**
  %.pre875 = load %struct.rtx_def** %rtx572.phi.trans.insert, align 8, !tbaa !1
  %.phi.trans.insert876 = getelementptr inbounds %struct.rtx_def* %.pre875, i64 0, i32 0
  %bf.load573.pre = load i32* %.phi.trans.insert876, align 8
  br label %cond.end568

cond.end568:                                      ; preds = %lor.lhs.false558, %cond.false565
  %bf.load573 = phi i32 [ %bf.load573.pre, %cond.false565 ], [ %bf.load554, %lor.lhs.false558 ]
  %150 = phi %struct.rtx_def* [ %.pre875, %cond.false565 ], [ %147, %lor.lhs.false558 ]
  %151 = phi %struct.rtx_def* [ %149, %cond.false565 ], [ %148, %lor.lhs.false558 ]
  %bf.clear574 = and i32 %bf.load573, 65535
  %cmp575 = icmp eq i32 %bf.clear574, 56
  br i1 %cmp575, label %for.inc, label %lor.lhs.false577

lor.lhs.false577:                                 ; preds = %cond.end568
  %tobool580 = icmp eq %struct.rtx_def* %151, null
  br i1 %tobool580, label %cond.false584, label %cond.end587

cond.false584:                                    ; preds = %lor.lhs.false577
  tail call void @make_decl_rtl(%union.tree_node* %parms.addr.0847, i8* null) #5
  %152 = load %struct.rtx_def** %rtl, align 8, !tbaa !18
  %arrayidx590.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %152, i64 0, i32 1, i64 0
  %rtx591.phi.trans.insert = bitcast %union.rtunion_def* %arrayidx590.phi.trans.insert to %struct.rtx_def**
  %.pre878 = load %struct.rtx_def** %rtx591.phi.trans.insert, align 8, !tbaa !1
  %.phi.trans.insert879 = getelementptr inbounds %struct.rtx_def* %.pre878, i64 0, i32 0
  %bf.load592.pre = load i32* %.phi.trans.insert879, align 8
  br label %cond.end587

cond.end587:                                      ; preds = %lor.lhs.false577, %cond.false584
  %bf.load592 = phi i32 [ %bf.load592.pre, %cond.false584 ], [ %bf.load573, %lor.lhs.false577 ]
  %153 = phi %struct.rtx_def* [ %.pre878, %cond.false584 ], [ %150, %lor.lhs.false577 ]
  %154 = phi %struct.rtx_def* [ %152, %cond.false584 ], [ %151, %lor.lhs.false577 ]
  %bf.clear593 = and i32 %bf.load592, 65535
  %cmp594 = icmp eq i32 %bf.clear593, 140
  br i1 %cmp594, label %for.inc, label %if.then596

if.then596:                                       ; preds = %cond.end587
  store i32 160, i32* @current_sym_code, align 4, !tbaa !7
  %tobool599 = icmp eq %struct.rtx_def* %154, null
  br i1 %tobool599, label %cond.false603, label %cond.end606

cond.false603:                                    ; preds = %if.then596
  tail call void @make_decl_rtl(%union.tree_node* %parms.addr.0847, i8* null) #5
  %155 = load %struct.rtx_def** %rtl, align 8, !tbaa !18
  %arrayidx609.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %155, i64 0, i32 1, i64 0
  %rtx610.phi.trans.insert = bitcast %union.rtunion_def* %arrayidx609.phi.trans.insert to %struct.rtx_def**
  %.pre881 = load %struct.rtx_def** %rtx610.phi.trans.insert, align 8, !tbaa !1
  br label %cond.end606

cond.end606:                                      ; preds = %if.then596, %cond.false603
  %156 = phi %struct.rtx_def* [ %.pre881, %cond.false603 ], [ %153, %if.then596 ]
  %157 = phi %struct.rtx_def* [ %155, %cond.false603 ], [ %154, %if.then596 ]
  %158 = getelementptr inbounds %struct.rtx_def* %156, i64 0, i32 0
  %bf.load611 = load i32* %158, align 8
  %bf.clear612 = and i32 %bf.load611, 65535
  %cmp613 = icmp eq i32 %bf.clear612, 61
  br i1 %cmp613, label %if.end638, label %if.else616

if.else616:                                       ; preds = %cond.end606
  %tobool619 = icmp eq %struct.rtx_def* %157, null
  br i1 %tobool619, label %cond.false623, label %cond.end626

cond.false623:                                    ; preds = %if.else616
  tail call void @make_decl_rtl(%union.tree_node* %parms.addr.0847, i8* null) #5
  %159 = load %struct.rtx_def** %rtl, align 8, !tbaa !18
  %arrayidx629.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %159, i64 0, i32 1, i64 0
  %rtx630.phi.trans.insert = bitcast %union.rtunion_def* %arrayidx629.phi.trans.insert to %struct.rtx_def**
  %.pre882 = load %struct.rtx_def** %rtx630.phi.trans.insert, align 8, !tbaa !1
  br label %cond.end626

cond.end626:                                      ; preds = %if.else616, %cond.false623
  %160 = phi %struct.rtx_def* [ %.pre882, %cond.false623 ], [ %156, %if.else616 ]
  %arrayidx632 = getelementptr inbounds %struct.rtx_def* %160, i64 0, i32 1, i64 1
  %rtx633 = bitcast %union.rtunion_def* %arrayidx632 to %struct.rtx_def**
  %161 = load %struct.rtx_def** %rtx633, align 8, !tbaa !1
  %rtwint636 = getelementptr inbounds %struct.rtx_def* %161, i64 0, i32 1, i64 0, i32 0
  %162 = load i64* %rtwint636, align 8, !tbaa !57
  %conv637 = trunc i64 %162 to i32
  br label %if.end638

if.end638:                                        ; preds = %cond.end606, %cond.end626
  %storemerge = phi i32 [ %conv637, %cond.end626 ], [ 0, %cond.end606 ]
  store i32 %storemerge, i32* @current_sym_value, align 4, !tbaa !5
  store %struct.rtx_def* null, %struct.rtx_def** @current_sym_addr, align 8, !tbaa !1
  %163 = load %union.tree_node** %name, align 8, !tbaa !21
  %tobool641 = icmp eq %union.tree_node* %163, null
  br i1 %tobool641, label %if.else657, label %if.then642

if.then642:                                       ; preds = %if.end638
  %id646 = getelementptr inbounds %union.tree_node* %163, i64 0, i32 0, i32 1
  %164 = getelementptr inbounds i8** %id646, i64 1
  %165 = load i8** %164, align 8, !tbaa !28
  %call648 = tail call i64 @strlen(i8* %165) #5
  %add649 = add i64 %call648, 2
  %conv650 = trunc i64 %add649 to i32
  store i32 %conv650, i32* @current_sym_nchars, align 4, !tbaa !5
  %166 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call656 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %166, i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1, i64 0, i64 0), i8* %165, i32 112) #5
  br label %if.end659

if.else657:                                       ; preds = %if.end638
  store i32 8, i32* @current_sym_nchars, align 4, !tbaa !5
  %167 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call658 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %167, i8* getelementptr inbounds ([13 x i8]* @.str10, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1, i64 0, i64 0), i32 112) #5
  br label %if.end659

if.end659:                                        ; preds = %if.else657, %if.then642
  %168 = load %union.tree_node** %type, align 8, !tbaa !23
  tail call fastcc void @dbxout_type(%union.tree_node* %168, i32 0)
  %169 = load i32* @use_gnu_debug_info_extensions, align 4, !tbaa !5
  %tobool.i = icmp ne i32 %169, 0
  %cmp.i = icmp ne %union.tree_node* %parms.addr.0847, null
  %or.cond.i = and i1 %tobool.i, %cmp.i
  br i1 %or.cond.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %if.end659
  %linenum.i = getelementptr inbounds %union.tree_node* %parms.addr.0847, i64 0, i32 0, i32 2
  %170 = load i32* %linenum.i, align 4, !tbaa !29
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %if.end659
  %line.0.i = phi i32 [ %170, %if.then.i ], [ 0, %if.end659 ]
  %171 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %172 = load i32* @current_sym_code, align 4, !tbaa !7
  %call.i = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %171, i8* getelementptr inbounds ([11 x i8]* @.str13, i64 0, i64 0), i32 %172, i32 %line.0.i) #5
  %173 = load %struct.rtx_def** @current_sym_addr, align 8, !tbaa !1
  %tobool1.i = icmp eq %struct.rtx_def* %173, null
  %174 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  br i1 %tobool1.i, label %if.else.i, label %if.then2.i

if.then2.i:                                       ; preds = %if.end.i
  tail call void @output_addr_const(%struct._IO_FILE* %174, %struct.rtx_def* %173) #5
  br label %dbxout_finish_symbol.exit

if.else.i:                                        ; preds = %if.end.i
  %175 = load i32* @current_sym_value, align 4, !tbaa !5
  %call3.i = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %174, i8* getelementptr inbounds ([3 x i8]* @.str14, i64 0, i64 0), i32 %175) #5
  br label %dbxout_finish_symbol.exit

dbxout_finish_symbol.exit:                        ; preds = %if.then2.i, %if.else.i
  %176 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call5.i = tail call i32 @putc(i32 10, %struct._IO_FILE* %176) #5
  br label %for.inc

for.inc:                                          ; preds = %cond.end438, %land.lhs.true, %for.body, %dbxout_finish_symbol.exit817, %dbxout_finish_symbol.exit845, %dbxout_finish_symbol.exit, %cond.end587, %cond.end568, %cond.end549, %cond.end530, %cond.end511, %cond.end492, %cond.end473, %cond.end455, %cond.end422, %dbxout_finish_symbol.exit831, %dbxout_finish_symbol.exit803
  %chain = getelementptr inbounds %union.tree_node* %parms.addr.0847, i64 0, i32 0, i32 0, i32 0
  %177 = load %union.tree_node** %chain, align 8, !tbaa !49
  %tobool = icmp eq %union.tree_node* %177, null
  br i1 %tobool, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc, %entry
  ret void
}

; Function Attrs: nounwind readonly
declare i64 @strlen(i8* nocapture) #4

; Function Attrs: nounwind uwtable
define void @dbxout_reg_parms(%union.tree_node* %parms) #0 {
entry:
  %tobool151 = icmp eq %union.tree_node* %parms, null
  br i1 %tobool151, label %for.end, label %for.body

for.body:                                         ; preds = %entry, %for.inc
  %parms.addr.0152 = phi %union.tree_node* [ %25, %for.inc ], [ %parms, %entry ]
  %name = getelementptr inbounds %union.tree_node* %parms.addr.0152, i64 0, i32 0, i32 8
  %0 = load %union.tree_node** %name, align 8, !tbaa !21
  %tobool1 = icmp eq %union.tree_node* %0, null
  br i1 %tobool1, label %for.inc, label %land.lhs.true

land.lhs.true:                                    ; preds = %for.body
  %u2 = getelementptr inbounds %union.tree_node* %parms.addr.0152, i64 0, i32 0, i32 19
  %r = bitcast %union.anon.1* %u2 to %struct.rtx_def**
  %1 = load %struct.rtx_def** %r, align 8, !tbaa !1
  %2 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 0
  %bf.load = load i32* %2, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 66
  br i1 %cmp, label %if.then, label %for.inc

if.then:                                          ; preds = %land.lhs.true
  %rtl = getelementptr inbounds %union.tree_node* %parms.addr.0152, i64 0, i32 0, i32 17
  %3 = load %struct.rtx_def** %rtl, align 8, !tbaa !18
  %tobool4 = icmp eq %struct.rtx_def* %3, null
  br i1 %tobool4, label %cond.false, label %cond.end

cond.false:                                       ; preds = %if.then
  tail call void @make_decl_rtl(%union.tree_node* %parms.addr.0152, i8* null) #5
  %4 = load %struct.rtx_def** %rtl, align 8, !tbaa !18
  br label %cond.end

cond.end:                                         ; preds = %if.then, %cond.false
  %5 = phi %struct.rtx_def* [ %4, %cond.false ], [ %3, %if.then ]
  %6 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 0
  %bf.load9 = load i32* %6, align 8
  %bf.clear10 = and i32 %bf.load9, 65535
  %cmp11 = icmp eq i32 %bf.clear10, 61
  br i1 %cmp11, label %land.lhs.true12, label %if.else

land.lhs.true12:                                  ; preds = %cond.end
  %tobool15 = icmp eq %struct.rtx_def* %5, null
  br i1 %tobool15, label %cond.false19, label %cond.end22

cond.false19:                                     ; preds = %land.lhs.true12
  tail call void @make_decl_rtl(%union.tree_node* %parms.addr.0152, i8* null) #5
  %7 = load %struct.rtx_def** %rtl, align 8, !tbaa !18
  br label %cond.end22

cond.end22:                                       ; preds = %land.lhs.true12, %cond.false19
  %8 = phi %struct.rtx_def* [ %7, %cond.false19 ], [ %5, %land.lhs.true12 ]
  %arrayidx = getelementptr inbounds %struct.rtx_def* %8, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %9 = load i32* %rtuint, align 4, !tbaa !5
  %cmp24 = icmp ult i32 %9, 53
  br i1 %cmp24, label %if.then25, label %if.else

if.then25:                                        ; preds = %cond.end22
  %type = getelementptr inbounds %union.tree_node* %parms.addr.0152, i64 0, i32 0, i32 0, i32 1
  %10 = load %union.tree_node** %type, align 8, !tbaa !23
  %tobool28 = icmp eq %struct.rtx_def* %8, null
  br i1 %tobool28, label %cond.false32, label %cond.end35

cond.false32:                                     ; preds = %if.then25
  tail call void @make_decl_rtl(%union.tree_node* %parms.addr.0152, i8* null) #5
  %11 = load %struct.rtx_def** %rtl, align 8, !tbaa !18
  br label %cond.end35

cond.end35:                                       ; preds = %if.then25, %cond.false32
  %cond36 = phi %struct.rtx_def* [ %11, %cond.false32 ], [ %8, %if.then25 ]
  %call = tail call fastcc i32 @dbxout_symbol_location(%union.tree_node* %parms.addr.0152, %union.tree_node* %10, i8* null, %struct.rtx_def* %cond36)
  br label %for.inc

if.else:                                          ; preds = %cond.end22, %cond.end
  %12 = phi %struct.rtx_def* [ %8, %cond.end22 ], [ %5, %cond.end ]
  %tobool39 = icmp eq %struct.rtx_def* %12, null
  br i1 %tobool39, label %cond.false43, label %cond.end46

cond.false43:                                     ; preds = %if.else
  tail call void @make_decl_rtl(%union.tree_node* %parms.addr.0152, i8* null) #5
  %13 = load %struct.rtx_def** %rtl, align 8, !tbaa !18
  br label %cond.end46

cond.end46:                                       ; preds = %if.else, %cond.false43
  %14 = phi %struct.rtx_def* [ %13, %cond.false43 ], [ %12, %if.else ]
  %15 = getelementptr inbounds %struct.rtx_def* %14, i64 0, i32 0
  %bf.load48 = load i32* %15, align 8
  %bf.clear49 = and i32 %bf.load48, 65535
  %cmp50 = icmp eq i32 %bf.clear49, 65
  br i1 %cmp50, label %if.then51, label %if.else66

if.then51:                                        ; preds = %cond.end46
  %type53 = getelementptr inbounds %union.tree_node* %parms.addr.0152, i64 0, i32 0, i32 0, i32 1
  %16 = load %union.tree_node** %type53, align 8, !tbaa !23
  %tobool56 = icmp eq %struct.rtx_def* %14, null
  br i1 %tobool56, label %cond.false60, label %cond.end63

cond.false60:                                     ; preds = %if.then51
  tail call void @make_decl_rtl(%union.tree_node* %parms.addr.0152, i8* null) #5
  %17 = load %struct.rtx_def** %rtl, align 8, !tbaa !18
  br label %cond.end63

cond.end63:                                       ; preds = %if.then51, %cond.false60
  %cond64 = phi %struct.rtx_def* [ %17, %cond.false60 ], [ %14, %if.then51 ]
  %call65 = tail call fastcc i32 @dbxout_symbol_location(%union.tree_node* %parms.addr.0152, %union.tree_node* %16, i8* null, %struct.rtx_def* %cond64)
  br label %for.inc

if.else66:                                        ; preds = %cond.end46
  %tobool69 = icmp eq %struct.rtx_def* %14, null
  br i1 %tobool69, label %cond.false73, label %cond.end76

cond.false73:                                     ; preds = %if.else66
  tail call void @make_decl_rtl(%union.tree_node* %parms.addr.0152, i8* null) #5
  %18 = load %struct.rtx_def** %rtl, align 8, !tbaa !18
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %18, i64 0, i32 0
  %bf.load78.pre = load i32* %.phi.trans.insert, align 8
  br label %cond.end76

cond.end76:                                       ; preds = %if.else66, %cond.false73
  %bf.load78 = phi i32 [ %bf.load78.pre, %cond.false73 ], [ %bf.load48, %if.else66 ]
  %19 = phi %struct.rtx_def* [ %18, %cond.false73 ], [ %14, %if.else66 ]
  %bf.clear79 = and i32 %bf.load78, 65535
  %cmp80 = icmp eq i32 %bf.clear79, 66
  br i1 %cmp80, label %land.lhs.true81, label %for.inc

land.lhs.true81:                                  ; preds = %cond.end76
  %tobool84 = icmp eq %struct.rtx_def* %19, null
  br i1 %tobool84, label %cond.false88, label %cond.end91

cond.false88:                                     ; preds = %land.lhs.true81
  tail call void @make_decl_rtl(%union.tree_node* %parms.addr.0152, i8* null) #5
  %20 = load %struct.rtx_def** %rtl, align 8, !tbaa !18
  br label %cond.end91

cond.end91:                                       ; preds = %land.lhs.true81, %cond.false88
  %cond92 = phi %struct.rtx_def* [ %20, %cond.false88 ], [ %19, %land.lhs.true81 ]
  %21 = load %struct.rtx_def** %r, align 8, !tbaa !1
  %call96 = tail call i32 @rtx_equal_p(%struct.rtx_def* %cond92, %struct.rtx_def* %21) #5
  %tobool97 = icmp eq i32 %call96, 0
  br i1 %tobool97, label %if.then98, label %for.inc

if.then98:                                        ; preds = %cond.end91
  %type100 = getelementptr inbounds %union.tree_node* %parms.addr.0152, i64 0, i32 0, i32 0, i32 1
  %22 = load %union.tree_node** %type100, align 8, !tbaa !23
  %23 = load %struct.rtx_def** %rtl, align 8, !tbaa !18
  %tobool103 = icmp eq %struct.rtx_def* %23, null
  br i1 %tobool103, label %cond.false107, label %cond.end110

cond.false107:                                    ; preds = %if.then98
  tail call void @make_decl_rtl(%union.tree_node* %parms.addr.0152, i8* null) #5
  %24 = load %struct.rtx_def** %rtl, align 8, !tbaa !18
  br label %cond.end110

cond.end110:                                      ; preds = %if.then98, %cond.false107
  %cond111 = phi %struct.rtx_def* [ %24, %cond.false107 ], [ %23, %if.then98 ]
  %call112 = tail call fastcc i32 @dbxout_symbol_location(%union.tree_node* %parms.addr.0152, %union.tree_node* %22, i8* null, %struct.rtx_def* %cond111)
  br label %for.inc

for.inc:                                          ; preds = %cond.end91, %for.body, %land.lhs.true, %cond.end63, %cond.end110, %cond.end76, %cond.end35
  %chain = getelementptr inbounds %union.tree_node* %parms.addr.0152, i64 0, i32 0, i32 0, i32 0
  %25 = load %union.tree_node** %chain, align 8, !tbaa !49
  %tobool = icmp eq %union.tree_node* %25, null
  br i1 %tobool, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc, %entry
  ret void
}

declare i32 @rtx_equal_p(%struct.rtx_def*, %struct.rtx_def*) #1

declare void @output_addr_const(%struct._IO_FILE*, %struct.rtx_def*) #1

declare %struct.rtx_def* @alter_subreg(%struct.rtx_def**) #1

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) #4

declare %struct.rtx_def* @get_pool_constant(%struct.rtx_def*) #1

declare %union.tree_node* @make_node(i32) #1

declare i8* @xrealloc(i8*, i64) #1

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #5

declare %union.tree_node* @build_qualified_type(%union.tree_node*, i32) #1

; Function Attrs: nounwind uwtable
define internal fastcc void @dbxout_range_type(%union.tree_node* %type) #0 {
entry:
  %0 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %fputc = tail call i32 @fputc(i32 114, %struct._IO_FILE* %0) #5
  %type1 = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 0, i32 1
  %1 = load %union.tree_node** %type1, align 8, !tbaa !23
  %tobool = icmp eq %union.tree_node* %1, null
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  tail call fastcc void @dbxout_type(%union.tree_node* %1, i32 0)
  br label %if.end12

if.else:                                          ; preds = %entry
  %code = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 6
  br i1 %cmp, label %if.else6, label %if.then5

if.then5:                                         ; preds = %if.else
  tail call fastcc void @dbxout_type(%union.tree_node* %type, i32 0)
  br label %if.end12

if.else6:                                         ; preds = %if.else
  %symtab = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 10
  %address = bitcast %union.tree_node** %symtab to i32*
  %2 = load i32* %address, align 4, !tbaa !5
  %cmp8 = icmp eq i32 %2, 0
  br i1 %cmp8, label %if.else10, label %if.then9

if.then9:                                         ; preds = %if.else6
  %idxprom.i = sext i32 %2 to i64
  %3 = load %struct.typeinfo** @typevec, align 8, !tbaa !1
  %4 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %file_number.i = getelementptr inbounds %struct.typeinfo* %3, i64 %idxprom.i, i32 1
  %5 = load i32* %file_number.i, align 4, !tbaa !32
  %type_number.i = getelementptr inbounds %struct.typeinfo* %3, i64 %idxprom.i, i32 2
  %6 = load i32* %type_number.i, align 4, !tbaa !34
  %call.i = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([8 x i8]* @.str57, i64 0, i64 0), i32 %5, i32 %6) #5
  %7 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add.i = add nsw i32 %7, 9
  store i32 %add.i, i32* @current_sym_nchars, align 4, !tbaa !5
  br label %if.end12

if.else10:                                        ; preds = %if.else6
  %8 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %symtab.i56 = getelementptr inbounds %union.tree_node* %8, i64 0, i32 0, i32 10
  %address.i57 = bitcast %union.tree_node** %symtab.i56 to i32*
  %9 = load i32* %address.i57, align 4, !tbaa !5
  %idxprom.i58 = sext i32 %9 to i64
  %10 = load %struct.typeinfo** @typevec, align 8, !tbaa !1
  %11 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %file_number.i59 = getelementptr inbounds %struct.typeinfo* %10, i64 %idxprom.i58, i32 1
  %12 = load i32* %file_number.i59, align 4, !tbaa !32
  %type_number.i60 = getelementptr inbounds %struct.typeinfo* %10, i64 %idxprom.i58, i32 2
  %13 = load i32* %type_number.i60, align 4, !tbaa !34
  %call.i61 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %11, i8* getelementptr inbounds ([8 x i8]* @.str57, i64 0, i64 0), i32 %12, i32 %13) #5
  %14 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add.i62 = add nsw i32 %14, 9
  store i32 %add.i62, i32* @current_sym_nchars, align 4, !tbaa !5
  br label %if.end12

if.end12:                                         ; preds = %if.then5, %if.else10, %if.then9, %if.then
  %15 = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 12
  %16 = load %union.tree_node** %15, align 8, !tbaa !37
  %cmp14 = icmp eq %union.tree_node* %16, null
  br i1 %cmp14, label %if.else24, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end12
  %call17 = tail call i32 @host_integerp(%union.tree_node* %16, i32 0) #5
  %tobool18 = icmp eq i32 %call17, 0
  br i1 %tobool18, label %if.else24, label %if.then19

if.then19:                                        ; preds = %land.lhs.true
  %17 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call20 = tail call i32 @putc(i32 59, %struct._IO_FILE* %17) #5
  %18 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add = add nsw i32 %18, 1
  store i32 %add, i32* @current_sym_nchars, align 4, !tbaa !5
  %19 = load %union.tree_node** %15, align 8, !tbaa !37
  %call23 = tail call i64 @tree_low_cst(%union.tree_node* %19, i32 0) #5
  %20 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call.i63 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %20, i8* getelementptr inbounds ([5 x i8]* @.str8, i64 0, i64 0), i64 %call23) #5
  %cmp.i = icmp slt i64 %call23, 0
  %sub.i = sub nsw i64 0, %call23
  %sub.c.i = select i1 %cmp.i, i64 %sub.i, i64 %call23
  %c.lobit.i = lshr i64 %call23, 63
  %21 = trunc i64 %c.lobit.i to i32
  %cmp19.i = icmp sgt i64 %sub.c.i, 0
  br i1 %cmp19.i, label %while.body.i, label %print_wide_int.exit

while.body.i:                                     ; preds = %if.then19, %while.body.i
  %c.addr.010.i = phi i64 [ %div.i, %while.body.i ], [ %sub.c.i, %if.then19 ]
  %div.i = sdiv i64 %c.addr.010.i, 10
  %cmp1.i = icmp sgt i64 %c.addr.010.i, 9
  br i1 %cmp1.i, label %while.body.i, label %print_wide_int.exit

print_wide_int.exit:                              ; preds = %while.body.i, %if.then19
  %inc2.i = add nsw i32 %21, 1
  %22 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add.i64 = add nsw i32 %inc2.i, %22
  br label %if.end27

if.else24:                                        ; preds = %land.lhs.true, %if.end12
  %23 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %24 = tail call i64 @fwrite(i8* getelementptr inbounds ([3 x i8]* @.str55, i64 0, i64 0), i64 2, i64 1, %struct._IO_FILE* %23)
  %25 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add26 = add nsw i32 %25, 2
  br label %if.end27

if.end27:                                         ; preds = %if.else24, %print_wide_int.exit
  %storemerge78 = phi i32 [ %add.i64, %print_wide_int.exit ], [ %add26, %if.else24 ]
  store i32 %storemerge78, i32* @current_sym_nchars, align 4, !tbaa !5
  %26 = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 13
  %27 = load %union.tree_node** %26, align 8, !tbaa !38
  %cmp29 = icmp eq %union.tree_node* %27, null
  br i1 %cmp29, label %if.else43, label %land.lhs.true30

land.lhs.true30:                                  ; preds = %if.end27
  %call33 = tail call i32 @host_integerp(%union.tree_node* %27, i32 0) #5
  %tobool34 = icmp eq i32 %call33, 0
  br i1 %tobool34, label %if.else43, label %if.then35

if.then35:                                        ; preds = %land.lhs.true30
  %28 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call36 = tail call i32 @putc(i32 59, %struct._IO_FILE* %28) #5
  %29 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add37 = add nsw i32 %29, 1
  store i32 %add37, i32* @current_sym_nchars, align 4, !tbaa !5
  %30 = load %union.tree_node** %26, align 8, !tbaa !38
  %call40 = tail call i64 @tree_low_cst(%union.tree_node* %30, i32 0) #5
  %31 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call.i65 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %31, i8* getelementptr inbounds ([5 x i8]* @.str8, i64 0, i64 0), i64 %call40) #5
  %cmp.i66 = icmp slt i64 %call40, 0
  %sub.i67 = sub nsw i64 0, %call40
  %sub.c.i68 = select i1 %cmp.i66, i64 %sub.i67, i64 %call40
  %c.lobit.i69 = lshr i64 %call40, 63
  %32 = trunc i64 %c.lobit.i69 to i32
  %cmp19.i70 = icmp sgt i64 %sub.c.i68, 0
  br i1 %cmp19.i70, label %while.body.i74, label %print_wide_int.exit77

while.body.i74:                                   ; preds = %if.then35, %while.body.i74
  %c.addr.010.i71 = phi i64 [ %div.i72, %while.body.i74 ], [ %sub.c.i68, %if.then35 ]
  %div.i72 = sdiv i64 %c.addr.010.i71, 10
  %cmp1.i73 = icmp sgt i64 %c.addr.010.i71, 9
  br i1 %cmp1.i73, label %while.body.i74, label %print_wide_int.exit77

print_wide_int.exit77:                            ; preds = %while.body.i74, %if.then35
  %inc2.i75 = add nsw i32 %32, 1
  %33 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add.i76 = add nsw i32 %inc2.i75, %33
  store i32 %add.i76, i32* @current_sym_nchars, align 4, !tbaa !5
  %34 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call41 = tail call i32 @putc(i32 59, %struct._IO_FILE* %34) #5
  %35 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add42 = add nsw i32 %35, 1
  br label %if.end46

if.else43:                                        ; preds = %land.lhs.true30, %if.end27
  %36 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %37 = tail call i64 @fwrite(i8* getelementptr inbounds ([5 x i8]* @.str56, i64 0, i64 0), i64 4, i64 1, %struct._IO_FILE* %36)
  %38 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add45 = add nsw i32 %38, 4
  br label %if.end46

if.end46:                                         ; preds = %if.else43, %print_wide_int.exit77
  %storemerge = phi i32 [ %add45, %if.else43 ], [ %add42, %print_wide_int.exit77 ]
  store i32 %storemerge, i32* @current_sym_nchars, align 4, !tbaa !5
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @print_int_cst_octal(%union.tree_node* nocapture readonly %c) #0 {
entry:
  %int_cst1 = getelementptr inbounds %union.tree_node* %c, i64 0, i32 0, i32 2
  %high2 = getelementptr inbounds i32* %int_cst1, i64 2
  %0 = bitcast i32* %high2 to i64*
  %1 = load i64* %0, align 8, !tbaa !53
  %low5 = bitcast i32* %int_cst1 to i64*
  %2 = load i64* %low5, align 8, !tbaa !56
  %type = getelementptr inbounds %union.tree_node* %c, i64 0, i32 0, i32 0, i32 1
  %3 = load %union.tree_node** %type, align 8, !tbaa !23
  %type6 = bitcast %union.tree_node* %3 to %struct.tree_type*
  %precision = getelementptr inbounds %struct.tree_type* %type6, i64 0, i32 6
  %bf.load = load i32* %precision, align 4
  %bf.clear = and i32 %bf.load, 511
  %cmp = icmp eq i32 %bf.clear, 128
  br i1 %cmp, label %if.end19, label %if.else

if.else:                                          ; preds = %entry
  %cmp7 = icmp ugt i32 %bf.clear, 64
  br i1 %cmp7, label %if.then8, label %if.else10

if.then8:                                         ; preds = %if.else
  %sub = add i32 %bf.clear, -64
  %sh_prom = zext i32 %sub to i64
  %shl = shl i64 1, %sh_prom
  %sub9 = add nsw i64 %shl, -1
  %and = and i64 %sub9, %1
  br label %if.end19

if.else10:                                        ; preds = %if.else
  %cmp11 = icmp eq i32 %bf.clear, 64
  br i1 %cmp11, label %if.end19, label %if.else13

if.else13:                                        ; preds = %if.else10
  %sh_prom14 = zext i32 %bf.clear to i64
  %shl15 = shl i64 1, %sh_prom14
  %sub16 = add nsw i64 %shl15, -1
  %and17 = and i64 %sub16, %2
  br label %if.end19

if.end19:                                         ; preds = %if.then8, %if.else10, %if.else13, %entry
  %low.0 = phi i64 [ %2, %entry ], [ %2, %if.then8 ], [ %2, %if.else10 ], [ %and17, %if.else13 ]
  %high.0 = phi i64 [ %1, %entry ], [ %and, %if.then8 ], [ 0, %if.else10 ], [ 0, %if.else13 ]
  %4 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %fputc = tail call i32 @fputc(i32 48, %struct._IO_FILE* %4) #5
  %5 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add = add nsw i32 %5, 1
  store i32 %add, i32* @current_sym_nchars, align 4, !tbaa !5
  %shr = lshr i64 %high.0, 2
  %and27 = shl i64 %high.0, 1
  %shl30 = and i64 %and27, 6
  %shr31 = lshr i64 %low.0, 63
  %or = or i64 %shl30, %shr31
  %and32 = and i64 %low.0, 9223372036854775807
  %6 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %conv = trunc i64 %shr to i32
  %conv33 = trunc i64 %or to i32
  %call34 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([7 x i8]* @.str53, i64 0, i64 0), i32 %conv, i32 %conv33) #5
  %7 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add35 = add nsw i32 %7, 2
  store i32 %add35, i32* @current_sym_nchars, align 4, !tbaa !5
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i, %if.end19
  %indvars.iv.i = phi i64 [ 20, %if.end19 ], [ %indvars.iv.next.i, %for.body.i ]
  %8 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %9 = mul nsw i64 %indvars.iv.i, 3
  %shr.i = lshr i64 %and32, %9
  %shr.tr.i = trunc i64 %shr.i to i32
  %conv.i = and i32 %shr.tr.i, 7
  %call.i = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([5 x i8]* @.str54, i64 0, i64 0), i32 %conv.i) #5
  %10 = trunc i64 %indvars.iv.i to i32
  %cmp.i = icmp sgt i32 %10, 0
  %indvars.iv.next.i = add nsw i64 %indvars.iv.i, -1
  br i1 %cmp.i, label %for.body.i, label %print_octal.exit

print_octal.exit:                                 ; preds = %for.body.i
  %11 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add.i = add nsw i32 %11, 21
  store i32 %add.i, i32* @current_sym_nchars, align 4, !tbaa !5
  ret void
}

declare i64 @int_size_in_bytes(%union.tree_node*) #1

; Function Attrs: nounwind
declare i32 @fputs(i8* nocapture readonly, %struct._IO_FILE* nocapture) #2

; Function Attrs: nounwind
declare i32 @sprintf(i8* nocapture, i8* nocapture readonly, ...) #2

; Function Attrs: nounwind uwtable
define internal fastcc void @dbxout_type_method_1(%union.tree_node* %decl, i8* %debug_name) #0 {
entry:
  %type = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 1
  %0 = load %union.tree_node** %type, align 8, !tbaa !23
  %code = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 23
  br i1 %cmp, label %if.end29, label %if.else

if.else:                                          ; preds = %entry
  %values = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 1
  %1 = load i8** %values, align 8
  %value = getelementptr inbounds i8* %1, i64 32
  %2 = bitcast i8* %value to %union.tree_node**
  %3 = load %union.tree_node** %2, align 8, !tbaa !51
  %type6 = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 0, i32 1
  %4 = load %union.tree_node** %type6, align 8, !tbaa !23
  %readonly_flag = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 0, i32 2
  %bf.load8 = load i32* %readonly_flag, align 8
  %bf.clear9 = and i32 %bf.load8, 4096
  %tobool = icmp eq i32 %bf.clear9, 0
  %. = select i1 %tobool, i8 65, i8 66
  %bf.clear17 = and i32 %bf.load8, 2048
  %tobool18 = icmp eq i32 %bf.clear17, 0
  %add21 = add i8 %., 2
  %c1.1 = select i1 %tobool18, i8 %., i8 %add21
  %vindex = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 22
  %5 = load %union.tree_node** %vindex, align 8, !tbaa !50
  %tobool25 = icmp eq %union.tree_node* %5, null
  %.105 = select i1 %tobool25, i32 46, i32 42
  %phitmp112 = zext i8 %c1.1 to i32
  br label %if.end29

if.end29:                                         ; preds = %if.else, %entry
  %c2.0 = phi i32 [ 63, %entry ], [ %.105, %if.else ]
  %c1.2 = phi i32 [ 65, %entry ], [ %phitmp112, %if.else ]
  %6 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %private_flag = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 2
  %bf.load31 = load i32* %private_flag, align 8
  %bf.clear33 = and i32 %bf.load31, 1048576
  %tobool34 = icmp eq i32 %bf.clear33, 0
  br i1 %tobool34, label %cond.false, label %cond.end

cond.false:                                       ; preds = %if.end29
  %bf.clear38 = lshr i32 %bf.load31, 21
  %7 = and i32 %bf.clear38, 1
  %8 = sub i32 50, %7
  br label %cond.end

cond.end:                                         ; preds = %if.end29, %cond.false
  %cond40 = phi i32 [ %8, %cond.false ], [ 48, %if.end29 ]
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([11 x i8]* @.str48, i64 0, i64 0), i8* %debug_name, i32 %cond40, i32 %c1.2, i32 %c2.0) #5
  %assembler_name = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 14
  %9 = load %union.tree_node** %assembler_name, align 8, !tbaa !27
  %cmp44 = icmp eq %union.tree_node* %9, null
  br i1 %cmp44, label %cond.end48, label %cond.end48.thread

cond.end48.thread:                                ; preds = %cond.end
  %id106 = getelementptr inbounds %union.tree_node* %9, i64 0, i32 0, i32 1
  %len107 = bitcast i8** %id106 to i32*
  %10 = load i32* %len107, align 4, !tbaa !24
  %add51108 = add i32 %10, 6
  %conv52109 = zext i32 %add51108 to i64
  br label %cond.end59

cond.end48:                                       ; preds = %cond.end
  %11 = load void (%union.tree_node*)** @lang_set_decl_assembler_name, align 8, !tbaa !1
  tail call void %11(%union.tree_node* %decl) #5
  %.pr = load %union.tree_node** %assembler_name, align 8, !tbaa !27
  %id = getelementptr inbounds %union.tree_node* %.pr, i64 0, i32 0, i32 1
  %len = bitcast i8** %id to i32*
  %12 = load i32* %len, align 4, !tbaa !24
  %add51 = add i32 %12, 6
  %conv52 = zext i32 %add51 to i64
  %cmp55 = icmp eq %union.tree_node* %.pr, null
  br i1 %cmp55, label %cond.false58, label %cond.end59

cond.false58:                                     ; preds = %cond.end48
  %13 = load void (%union.tree_node*)** @lang_set_decl_assembler_name, align 8, !tbaa !1
  tail call void %13(%union.tree_node* %decl) #5
  %.pre = load %union.tree_node** %assembler_name, align 8, !tbaa !27
  br label %cond.end59

cond.end59:                                       ; preds = %cond.end48.thread, %cond.end48, %cond.false58
  %14 = phi %union.tree_node* [ %9, %cond.end48.thread ], [ %.pr, %cond.end48 ], [ %.pre, %cond.false58 ]
  %conv52111 = phi i64 [ %conv52109, %cond.end48.thread ], [ %conv52, %cond.end48 ], [ %conv52, %cond.false58 ]
  %id63 = getelementptr inbounds %union.tree_node* %14, i64 0, i32 0, i32 1
  %15 = getelementptr inbounds i8** %id63, i64 1
  %16 = load i8** %15, align 8, !tbaa !28
  %sub.ptr.lhs.cast = ptrtoint i8* %debug_name to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %16 to i64
  %17 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %conv64103 = zext i32 %17 to i64
  %sub.ptr.sub102 = sub i64 %conv52111, %sub.ptr.lhs.cast
  %sub = add i64 %sub.ptr.sub102, %sub.ptr.rhs.cast
  %add65 = add i64 %sub, %conv64103
  %conv66 = trunc i64 %add65 to i32
  store i32 %conv66, i32* @current_sym_nchars, align 4, !tbaa !5
  %vindex68 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 22
  %18 = load %union.tree_node** %vindex68, align 8, !tbaa !50
  %tobool69 = icmp eq %union.tree_node* %18, null
  br i1 %tobool69, label %if.end83, label %land.lhs.true

land.lhs.true:                                    ; preds = %cond.end59
  %call72 = tail call i32 @host_integerp(%union.tree_node* %18, i32 0) #5
  %tobool73 = icmp eq i32 %call72, 0
  br i1 %tobool73, label %if.end83, label %if.then74

if.then74:                                        ; preds = %land.lhs.true
  %19 = load %union.tree_node** %vindex68, align 8, !tbaa !50
  %call77 = tail call i64 @tree_low_cst(%union.tree_node* %19, i32 0) #5
  %20 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call.i = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %20, i8* getelementptr inbounds ([5 x i8]* @.str8, i64 0, i64 0), i64 %call77) #5
  %cmp.i = icmp slt i64 %call77, 0
  %sub.i = sub nsw i64 0, %call77
  %sub.c.i = select i1 %cmp.i, i64 %sub.i, i64 %call77
  %c.lobit.i = lshr i64 %call77, 63
  %21 = trunc i64 %c.lobit.i to i32
  %cmp19.i = icmp sgt i64 %sub.c.i, 0
  br i1 %cmp19.i, label %while.body.i, label %print_wide_int.exit

while.body.i:                                     ; preds = %if.then74, %while.body.i
  %c.addr.010.i = phi i64 [ %div.i, %while.body.i ], [ %sub.c.i, %if.then74 ]
  %div.i = sdiv i64 %c.addr.010.i, 10
  %cmp1.i = icmp sgt i64 %c.addr.010.i, 9
  br i1 %cmp1.i, label %while.body.i, label %print_wide_int.exit

print_wide_int.exit:                              ; preds = %while.body.i, %if.then74
  %inc2.i = add nsw i32 %21, 1
  %22 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add.i = add nsw i32 %inc2.i, %22
  store i32 %add.i, i32* @current_sym_nchars, align 4, !tbaa !5
  %23 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call78 = tail call i32 @putc(i32 59, %struct._IO_FILE* %23) #5
  %24 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add79 = add nsw i32 %24, 1
  store i32 %add79, i32* @current_sym_nchars, align 4, !tbaa !5
  %context = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 9
  %25 = load %union.tree_node** %context, align 8, !tbaa !31
  tail call fastcc void @dbxout_type(%union.tree_node* %25, i32 0)
  %26 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %fputc = tail call i32 @fputc(i32 59, %struct._IO_FILE* %26) #5
  %27 = load i32* @current_sym_nchars, align 4, !tbaa !5
  %add82 = add nsw i32 %27, 1
  store i32 %add82, i32* @current_sym_nchars, align 4, !tbaa !5
  br label %if.end83

if.end83:                                         ; preds = %land.lhs.true, %cond.end59, %print_wide_int.exit
  ret void
}

declare %union.tree_node* @bit_position(%union.tree_node*) #1

declare i64 @int_bit_position(%union.tree_node*) #1

declare void @asm_fprintf(%struct._IO_FILE*, i8*, ...) #1

; Function Attrs: nounwind uwtable
define internal fastcc void @dbxout_block(%union.tree_node* readonly %block, i32 %depth, %union.tree_node* %args) #0 {
entry:
  %buf = alloca [20 x i8], align 16
  %buf61 = alloca [20 x i8], align 16
  %0 = load %union.tree_node** @current_function_func_begin_label, align 8, !tbaa !1
  %cmp = icmp eq %union.tree_node* %0, null
  br i1 %cmp, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %id = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 1
  %1 = getelementptr inbounds i8** %id, i64 1
  br label %while.cond.preheader

if.else:                                          ; preds = %entry
  %2 = load %union.tree_node** @current_function_decl, align 8, !tbaa !1
  %rtl = getelementptr inbounds %union.tree_node* %2, i64 0, i32 0, i32 17
  %3 = load %struct.rtx_def** %rtl, align 8, !tbaa !18
  %tobool = icmp eq %struct.rtx_def* %3, null
  br i1 %tobool, label %cond.false, label %cond.end

cond.false:                                       ; preds = %if.else
  call void @make_decl_rtl(%union.tree_node* %2, i8* null) #5
  %4 = load %union.tree_node** @current_function_decl, align 8, !tbaa !1
  %rtl4 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 17
  %5 = load %struct.rtx_def** %rtl4, align 8, !tbaa !18
  br label %cond.end

cond.end:                                         ; preds = %if.else, %cond.false
  %cond = phi %struct.rtx_def* [ %5, %cond.false ], [ %3, %if.else ]
  %arrayidx = getelementptr inbounds %struct.rtx_def* %cond, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %6 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %arrayidx6 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1, i64 0
  %rtstr = bitcast %union.rtunion_def* %arrayidx6 to i8**
  br label %while.cond.preheader

while.cond.preheader:                             ; preds = %cond.end, %if.then
  %begin_label.0.ph.in = phi i8** [ %1, %if.then ], [ %rtstr, %cond.end ]
  %begin_label.0.ph = load i8** %begin_label.0.ph.in, align 8
  %tobool7104 = icmp eq %union.tree_node* %block, null
  br i1 %tobool7104, label %while.end74, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %while.cond.preheader
  %cmp16 = icmp eq i32 %depth, 0
  %tobool20 = icmp eq %union.tree_node* %args, null
  %cmp23 = icmp sgt i32 %depth, 0
  %arraydecay = getelementptr inbounds [20 x i8]* %buf, i64 0, i64 0
  %add = add nsw i32 %depth, 1
  %arraydecay63 = getelementptr inbounds [20 x i8]* %buf61, i64 0, i64 0
  br i1 %cmp16, label %while.body.us, label %while.body

while.body.us:                                    ; preds = %while.body.lr.ph, %if.end71.us
  %block.addr.0105.us = phi %union.tree_node* [ %34, %if.end71.us ], [ %block, %while.body.lr.ph ]
  %used_flag.us = getelementptr inbounds %union.tree_node* %block.addr.0105.us, i64 0, i32 0, i32 0, i32 2
  %bf.load.us = load i32* %used_flag.us, align 8
  %7 = and i32 %bf.load.us, 81920
  %8 = icmp eq i32 %7, 81920
  br i1 %8, label %if.then17.us, label %if.end71.us

if.then17.us:                                     ; preds = %while.body.us
  %vars.us = getelementptr inbounds %union.tree_node* %block.addr.0105.us, i64 0, i32 0, i32 2
  %9 = bitcast i32* %vars.us to %union.tree_node**
  %10 = load %union.tree_node** %9, align 8, !tbaa !58
  %tobool4.i.us = icmp eq %union.tree_node* %10, null
  br i1 %tobool4.i.us, label %if.end19.us, label %while.body.i.us

while.body.i.us:                                  ; preds = %if.then17.us, %while.body.i.us
  %result.06.i.us = phi i32 [ %add.i.us, %while.body.i.us ], [ 0, %if.then17.us ]
  %syms.addr.05.i.us = phi %union.tree_node* [ %11, %while.body.i.us ], [ %10, %if.then17.us ]
  %call.i.us = call i32 @dbxout_symbol(%union.tree_node* %syms.addr.05.i.us, i32 undef) #5
  %add.i.us = add nsw i32 %call.i.us, %result.06.i.us
  %chain.i.us = getelementptr inbounds %union.tree_node* %syms.addr.05.i.us, i64 0, i32 0, i32 0, i32 0
  %11 = load %union.tree_node** %chain.i.us, align 8, !tbaa !49
  %tobool.i.us = icmp eq %union.tree_node* %11, null
  br i1 %tobool.i.us, label %if.end19.us, label %while.body.i.us

if.end19.us:                                      ; preds = %while.body.i.us, %if.then17.us
  %did_output.0.us = phi i32 [ 0, %if.then17.us ], [ %add.i.us, %while.body.i.us ]
  br i1 %tobool20, label %if.end22.us, label %if.then21.us

if.then21.us:                                     ; preds = %if.end19.us
  call void @dbxout_reg_parms(%union.tree_node* %args)
  br label %if.end22.us

if.end22.us:                                      ; preds = %if.then21.us, %if.end19.us
  %tobool25.us = icmp ne i32 %did_output.0.us, 0
  %or.cond75.us = and i1 %cmp23, %tobool25.us
  br i1 %or.cond75.us, label %if.then26.us, label %if.end55.us.thread

if.end55.us.thread:                               ; preds = %if.end22.us
  %12 = getelementptr inbounds %union.tree_node* %block.addr.0105.us, i64 0, i32 0, i32 4
  %13 = load %union.tree_node** %12, align 8, !tbaa !60
  call fastcc void @dbxout_block(%union.tree_node* %13, i32 %add, %union.tree_node* null)
  br label %if.end71.us

if.then26.us:                                     ; preds = %if.end22.us
  %block_num.us = getelementptr inbounds %union.tree_node* %block.addr.0105.us, i64 0, i32 0, i32 1
  %14 = bitcast i8** %block_num.us to i32*
  %bf.load28.us = load i32* %14, align 8
  %bf.lshr29.us = lshr i32 %bf.load28.us, 2
  %call30.us = call i32 (i8*, i8*, ...)* @sprintf(i8* %arraydecay, i8* getelementptr inbounds ([7 x i8]* @.str59, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8]* @.str64, i64 0, i64 0), i32 %bf.lshr29.us) #5
  %bf.load32.us = load i32* %14, align 8
  %bf.clear33.us = and i32 %bf.load32.us, 1
  %tobool34.us = icmp eq i32 %bf.clear33.us, 0
  br i1 %tobool34.us, label %if.end55.us, label %if.then35.us

if.then35.us:                                     ; preds = %if.then26.us
  %vars38.us = getelementptr inbounds %union.tree_node* %block.addr.0105.us, i64 0, i32 0, i32 2
  %15 = bitcast i32* %vars38.us to %union.tree_node**
  %decl36.0101.us = load %union.tree_node** %15, align 8
  %tobool40102.us = icmp eq %union.tree_node* %decl36.0101.us, null
  br i1 %tobool40102.us, label %if.end55.us, label %while.body41.us

while.body41.us:                                  ; preds = %if.then35.us, %while.body41.us
  %decl36.0103.us = phi %union.tree_node* [ %decl36.0.us, %while.body41.us ], [ %decl36.0101.us, %if.then35.us ]
  %16 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %name.us = getelementptr inbounds %union.tree_node* %decl36.0103.us, i64 0, i32 0, i32 8
  %17 = load %union.tree_node** %name.us, align 8, !tbaa !21
  %id44.us = getelementptr inbounds %union.tree_node* %17, i64 0, i32 0, i32 1
  %18 = getelementptr inbounds i8** %id44.us, i64 1
  %19 = load i8** %18, align 8, !tbaa !28
  %call46.us = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %16, i8* getelementptr inbounds ([18 x i8]* @.str65, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1, i64 0, i64 0), i8* %19, i32 84) #5
  %20 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  call void @assemble_name(%struct._IO_FILE* %20, i8* %arraydecay) #5
  %21 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %fputc96.us = call i32 @fputc(i32 10, %struct._IO_FILE* %21) #5
  %chain.us = getelementptr inbounds %union.tree_node* %decl36.0103.us, i64 0, i32 0, i32 0, i32 0
  %decl36.0.us = load %union.tree_node** %chain.us, align 8
  %tobool40.us = icmp eq %union.tree_node* %decl36.0.us, null
  br i1 %tobool40.us, label %if.end55.us, label %while.body41.us

if.end55.us:                                      ; preds = %while.body41.us, %if.then35.us, %if.then26.us
  %22 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call51.us = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %22, i8* getelementptr inbounds ([10 x i8]* @.str66, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str67, i64 0, i64 0), i32 192) #5
  %23 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  call void @assemble_name(%struct._IO_FILE* %23, i8* %arraydecay) #5
  %24 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call53.us = call i32 @putc(i32 45, %struct._IO_FILE* %24) #5
  %25 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  call void @assemble_name(%struct._IO_FILE* %25, i8* %begin_label.0.ph) #5
  %26 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %fputc99.us = call i32 @fputc(i32 10, %struct._IO_FILE* %26) #5
  %27 = getelementptr inbounds %union.tree_node* %block.addr.0105.us, i64 0, i32 0, i32 4
  %28 = load %union.tree_node** %27, align 8, !tbaa !60
  call fastcc void @dbxout_block(%union.tree_node* %28, i32 %add, %union.tree_node* null)
  br i1 %or.cond75.us, label %do.body62.us, label %if.end71.us

do.body62.us:                                     ; preds = %if.end55.us
  %call64.us = call i32 (i8*, i8*, ...)* @sprintf(i8* %arraydecay63, i8* getelementptr inbounds ([7 x i8]* @.str59, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8]* @.str68, i64 0, i64 0), i32 %bf.lshr29.us) #5
  %29 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call66.us = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %29, i8* getelementptr inbounds ([10 x i8]* @.str66, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str67, i64 0, i64 0), i32 224) #5
  %30 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  call void @assemble_name(%struct._IO_FILE* %30, i8* %arraydecay63) #5
  %31 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call68.us = call i32 @putc(i32 45, %struct._IO_FILE* %31) #5
  %32 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  call void @assemble_name(%struct._IO_FILE* %32, i8* %begin_label.0.ph) #5
  %33 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %fputc.us = call i32 @fputc(i32 10, %struct._IO_FILE* %33) #5
  br label %if.end71.us

if.end71.us:                                      ; preds = %if.end55.us.thread, %do.body62.us, %if.end55.us, %while.body.us
  %chain73.us = getelementptr inbounds %union.tree_node* %block.addr.0105.us, i64 0, i32 0, i32 0, i32 0
  %34 = load %union.tree_node** %chain73.us, align 8, !tbaa !49
  %tobool7.us = icmp eq %union.tree_node* %34, null
  br i1 %tobool7.us, label %while.end74, label %while.body.us

while.body:                                       ; preds = %while.body.lr.ph, %if.end71
  %block.addr.0105 = phi %union.tree_node* [ %63, %if.end71 ], [ %block, %while.body.lr.ph ]
  %used_flag = getelementptr inbounds %union.tree_node* %block.addr.0105, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %used_flag, align 8
  %35 = and i32 %bf.load, 81920
  %36 = icmp eq i32 %35, 81920
  br i1 %36, label %if.then14, label %if.end71

if.then14:                                        ; preds = %while.body
  %37 = load i32* @debug_info_level, align 4, !tbaa !7
  %cmp15 = icmp eq i32 %37, 1
  br i1 %cmp15, label %if.end19, label %if.then17

if.then17:                                        ; preds = %if.then14
  %vars = getelementptr inbounds %union.tree_node* %block.addr.0105, i64 0, i32 0, i32 2
  %38 = bitcast i32* %vars to %union.tree_node**
  %39 = load %union.tree_node** %38, align 8, !tbaa !58
  %tobool4.i = icmp eq %union.tree_node* %39, null
  br i1 %tobool4.i, label %if.end19, label %while.body.i

while.body.i:                                     ; preds = %if.then17, %while.body.i
  %result.06.i = phi i32 [ %add.i, %while.body.i ], [ 0, %if.then17 ]
  %syms.addr.05.i = phi %union.tree_node* [ %40, %while.body.i ], [ %39, %if.then17 ]
  %call.i = call i32 @dbxout_symbol(%union.tree_node* %syms.addr.05.i, i32 undef) #5
  %add.i = add nsw i32 %call.i, %result.06.i
  %chain.i = getelementptr inbounds %union.tree_node* %syms.addr.05.i, i64 0, i32 0, i32 0, i32 0
  %40 = load %union.tree_node** %chain.i, align 8, !tbaa !49
  %tobool.i = icmp eq %union.tree_node* %40, null
  br i1 %tobool.i, label %if.end19, label %while.body.i

if.end19:                                         ; preds = %while.body.i, %if.then14, %if.then17
  %did_output.0 = phi i32 [ 0, %if.then14 ], [ 0, %if.then17 ], [ %add.i, %while.body.i ]
  br i1 %tobool20, label %if.end22, label %if.then21

if.then21:                                        ; preds = %if.end19
  call void @dbxout_reg_parms(%union.tree_node* %args)
  br label %if.end22

if.end22:                                         ; preds = %if.end19, %if.then21
  %tobool25 = icmp ne i32 %did_output.0, 0
  %or.cond75 = and i1 %cmp23, %tobool25
  br i1 %or.cond75, label %if.then26, label %if.end55.thread

if.end55.thread:                                  ; preds = %if.end22
  %41 = getelementptr inbounds %union.tree_node* %block.addr.0105, i64 0, i32 0, i32 4
  %42 = load %union.tree_node** %41, align 8, !tbaa !60
  call fastcc void @dbxout_block(%union.tree_node* %42, i32 %add, %union.tree_node* null)
  br label %if.end71

if.then26:                                        ; preds = %if.end22
  %block_num = getelementptr inbounds %union.tree_node* %block.addr.0105, i64 0, i32 0, i32 1
  %43 = bitcast i8** %block_num to i32*
  %bf.load28 = load i32* %43, align 8
  %bf.lshr29 = lshr i32 %bf.load28, 2
  %call30 = call i32 (i8*, i8*, ...)* @sprintf(i8* %arraydecay, i8* getelementptr inbounds ([7 x i8]* @.str59, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8]* @.str64, i64 0, i64 0), i32 %bf.lshr29) #5
  %bf.load32 = load i32* %43, align 8
  %bf.clear33 = and i32 %bf.load32, 1
  %tobool34 = icmp eq i32 %bf.clear33, 0
  br i1 %tobool34, label %if.end55, label %if.then35

if.then35:                                        ; preds = %if.then26
  %vars38 = getelementptr inbounds %union.tree_node* %block.addr.0105, i64 0, i32 0, i32 2
  %44 = bitcast i32* %vars38 to %union.tree_node**
  %decl36.0101 = load %union.tree_node** %44, align 8
  %tobool40102 = icmp eq %union.tree_node* %decl36.0101, null
  br i1 %tobool40102, label %if.end55, label %while.body41

while.body41:                                     ; preds = %if.then35, %while.body41
  %decl36.0103 = phi %union.tree_node* [ %decl36.0, %while.body41 ], [ %decl36.0101, %if.then35 ]
  %45 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %name = getelementptr inbounds %union.tree_node* %decl36.0103, i64 0, i32 0, i32 8
  %46 = load %union.tree_node** %name, align 8, !tbaa !21
  %id44 = getelementptr inbounds %union.tree_node* %46, i64 0, i32 0, i32 1
  %47 = getelementptr inbounds i8** %id44, i64 1
  %48 = load i8** %47, align 8, !tbaa !28
  %call46 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %45, i8* getelementptr inbounds ([18 x i8]* @.str65, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1, i64 0, i64 0), i8* %48, i32 84) #5
  %49 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  call void @assemble_name(%struct._IO_FILE* %49, i8* %arraydecay) #5
  %50 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %fputc96 = call i32 @fputc(i32 10, %struct._IO_FILE* %50) #5
  %chain = getelementptr inbounds %union.tree_node* %decl36.0103, i64 0, i32 0, i32 0, i32 0
  %decl36.0 = load %union.tree_node** %chain, align 8
  %tobool40 = icmp eq %union.tree_node* %decl36.0, null
  br i1 %tobool40, label %if.end55, label %while.body41

if.end55:                                         ; preds = %while.body41, %if.then26, %if.then35
  %51 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call51 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %51, i8* getelementptr inbounds ([10 x i8]* @.str66, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str67, i64 0, i64 0), i32 192) #5
  %52 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  call void @assemble_name(%struct._IO_FILE* %52, i8* %arraydecay) #5
  %53 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call53 = call i32 @putc(i32 45, %struct._IO_FILE* %53) #5
  %54 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  call void @assemble_name(%struct._IO_FILE* %54, i8* %begin_label.0.ph) #5
  %55 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %fputc99 = call i32 @fputc(i32 10, %struct._IO_FILE* %55) #5
  %56 = getelementptr inbounds %union.tree_node* %block.addr.0105, i64 0, i32 0, i32 4
  %57 = load %union.tree_node** %56, align 8, !tbaa !60
  call fastcc void @dbxout_block(%union.tree_node* %57, i32 %add, %union.tree_node* null)
  br i1 %or.cond75, label %do.body62, label %if.end71

do.body62:                                        ; preds = %if.end55
  %call64 = call i32 (i8*, i8*, ...)* @sprintf(i8* %arraydecay63, i8* getelementptr inbounds ([7 x i8]* @.str59, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8]* @.str68, i64 0, i64 0), i32 %bf.lshr29) #5
  %58 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call66 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %58, i8* getelementptr inbounds ([10 x i8]* @.str66, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str67, i64 0, i64 0), i32 224) #5
  %59 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  call void @assemble_name(%struct._IO_FILE* %59, i8* %arraydecay63) #5
  %60 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %call68 = call i32 @putc(i32 45, %struct._IO_FILE* %60) #5
  %61 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  call void @assemble_name(%struct._IO_FILE* %61, i8* %begin_label.0.ph) #5
  %62 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !1
  %fputc = call i32 @fputc(i32 10, %struct._IO_FILE* %62) #5
  br label %if.end71

if.end71:                                         ; preds = %if.end55.thread, %while.body, %if.end55, %do.body62
  %chain73 = getelementptr inbounds %union.tree_node* %block.addr.0105, i64 0, i32 0, i32 0, i32 0
  %63 = load %union.tree_node** %chain73, align 8, !tbaa !49
  %tobool7 = icmp eq %union.tree_node* %63, null
  br i1 %tobool7, label %while.end74, label %while.body

while.end74:                                      ; preds = %if.end71, %if.end71.us, %while.cond.preheader
  ret void
}

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #5

declare void @assemble_name(%struct._IO_FILE*, i8*) #1

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #5

declare void @output_quoted_string(%struct._IO_FILE*, i8*) #1

; Function Attrs: nounwind
declare i32 @fputc(i32, %struct._IO_FILE* nocapture) #2

declare void @text_section() #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) #2

declare noalias i8* @xmalloc(i64) #1

declare %union.tree_node* @getdecls() #1

declare noalias i8* @xcalloc(i64, i64) #1

declare i8* @getpwd() #1

declare noalias i8* @concat(i8*, ...) #1

; Function Attrs: nounwind uwtable
define internal fastcc void @dbxout_typedefs(%union.tree_node* readonly %syms) #0 {
entry:
  %tobool = icmp eq %union.tree_node* %syms, null
  br i1 %tobool, label %if.end28, label %if.then

if.then:                                          ; preds = %entry
  %chain = getelementptr inbounds %union.tree_node* %syms, i64 0, i32 0, i32 0, i32 0
  %0 = load %union.tree_node** %chain, align 8, !tbaa !49
  tail call fastcc void @dbxout_typedefs(%union.tree_node* %0)
  %code = getelementptr inbounds %union.tree_node* %syms, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 33
  br i1 %cmp, label %if.then2, label %if.end28

if.then2:                                         ; preds = %if.then
  %type4 = getelementptr inbounds %union.tree_node* %syms, i64 0, i32 0, i32 0, i32 1
  %1 = load %union.tree_node** %type4, align 8, !tbaa !23
  %2 = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 11
  %3 = load %union.tree_node** %2, align 8, !tbaa !12
  %tobool6 = icmp eq %union.tree_node* %3, null
  br i1 %tobool6, label %if.end28, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.then2
  %code10 = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 0, i32 2
  %bf.load11 = load i32* %code10, align 8
  %bf.clear12 = and i32 %bf.load11, 255
  %cmp13 = icmp eq i32 %bf.clear12, 33
  br i1 %cmp13, label %land.lhs.true14, label %if.end28

land.lhs.true14:                                  ; preds = %land.lhs.true
  %size = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 2
  %4 = bitcast i32* %size to %union.tree_node**
  %5 = load %union.tree_node** %4, align 8, !tbaa !30
  %cmp16 = icmp ne %union.tree_node* %5, null
  %bf.clear22 = and i32 %bf.load11, 16384
  %tobool23 = icmp eq i32 %bf.clear22, 0
  %or.cond = and i1 %cmp16, %tobool23
  br i1 %or.cond, label %if.then24, label %if.end28

if.then24:                                        ; preds = %land.lhs.true14
  %call = tail call i32 @dbxout_symbol(%union.tree_node* %3, i32 undef)
  br label %if.end28

if.end28:                                         ; preds = %land.lhs.true14, %if.then2, %entry, %if.then, %if.then24, %land.lhs.true
  ret void
}

; Function Attrs: nounwind
declare i64 @fwrite(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) #5

attributes #0 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { noreturn nounwind }

!llvm.ident = !{!0}

!0 = metadata !{metadata !"clang version 3.5 (trunk)"}
!1 = metadata !{metadata !2, metadata !2, i64 0}
!2 = metadata !{metadata !"any pointer", metadata !3, i64 0}
!3 = metadata !{metadata !"omnipotent char", metadata !4, i64 0}
!4 = metadata !{metadata !"Simple C/C++ TBAA"}
!5 = metadata !{metadata !6, metadata !6, i64 0}
!6 = metadata !{metadata !"int", metadata !3, i64 0}
!7 = metadata !{metadata !3, metadata !3, i64 0}
!8 = metadata !{metadata !9, metadata !2, i64 0}
!9 = metadata !{metadata !"dbx_file", metadata !2, i64 0, metadata !6, i64 8, metadata !6, i64 12}
!10 = metadata !{metadata !9, metadata !6, i64 8}
!11 = metadata !{metadata !9, metadata !6, i64 12}
!12 = metadata !{metadata !13, metadata !2, i64 96}
!13 = metadata !{metadata !"tree_type", metadata !14, i64 0, metadata !2, i64 24, metadata !2, i64 32, metadata !2, i64 40, metadata !2, i64 48, metadata !6, i64 56, metadata !6, i64 60, metadata !3, i64 61, metadata !6, i64 62, metadata !6, i64 62, metadata !6, i64 62, metadata !6, i64 62, metadata !6, i64 62, metadata !6, i64 62, metadata !6, i64 62, metadata !6, i64 63, metadata !6, i64 63, metadata !6, i64 63, metadata !6, i64 63, metadata !6, i64 63, metadata !6, i64 63, metadata !6, i64 63, metadata !6, i64 63, metadata !6, i64 64, metadata !2, i64 72, metadata !2, i64 80, metadata !3, i64 88, metadata !2, i64 96, metadata !2, i64 104, metadata !2, i64 112, metadata !2, i64 120, metadata !2, i64 128, metadata !2, i64 136, metadata !2, i64 144, metadata !15, i64 152, metadata !2, i64 160}
!14 = metadata !{metadata !"tree_common", metadata !2, i64 0, metadata !2, i64 8, metadata !3, i64 16, metadata !6, i64 17, metadata !6, i64 17, metadata !6, i64 17, metadata !6, i64 17, metadata !6, i64 17, metadata !6, i64 17, metadata !6, i64 17, metadata !6, i64 17, metadata !6, i64 18, metadata !6, i64 18, metadata !6, i64 18, metadata !6, i64 18, metadata !6, i64 18, metadata !6, i64 18, metadata !6, i64 18, metadata !6, i64 18, metadata !6, i64 19, metadata !6, i64 19, metadata !6, i64 19, metadata !6, i64 19, metadata !6, i64 19, metadata !6, i64 19, metadata !6, i64 19, metadata !6, i64 19}
!15 = metadata !{metadata !"long long", metadata !3, i64 0}
!16 = metadata !{metadata !17, metadata !2, i64 128}
!17 = metadata !{metadata !"tree_decl", metadata !14, i64 0, metadata !2, i64 24, metadata !6, i64 32, metadata !6, i64 36, metadata !2, i64 40, metadata !3, i64 48, metadata !6, i64 49, metadata !6, i64 49, metadata !6, i64 49, metadata !6, i64 49, metadata !6, i64 49, metadata !6, i64 49, metadata !6, i64 49, metadata !6, i64 49, metadata !6, i64 50, metadata !6, i64 50, metadata !6, i64 50, metadata !6, i64 50, metadata !6, i64 50, metadata !6, i64 50, metadata !6, i64 50, metadata !6, i64 50, metadata !6, i64 51, metadata !6, i64 51, metadata !6, i64 51, metadata !6, i64 51, metadata !6, i64 51, metadata !3, i64 51, metadata !6, i64 51, metadata !6, i64 52, metadata !6, i64 52, metadata !6, i64 52, metadata !6, i64 52, metadata !6, i64 52, metadata !6, i64 52, metadata !6, i64 52, metadata !6, i64 53, metadata !6, i64 53, metadata !6, i64 53, metadata !6, i64 53, metadata !6, i64 53, metadata !3, i64 56, metadata !2, i64 64, metadata !2, i64 72, metadata !2, i64 80, metadata !2, i64 88, metadata !2, i64 96, metadata !2, i64 104, metadata !2, i64 112, metadata !2, i64 120, metadata !2, i64 128, metadata !2, i64 136, metadata !2, i64 144, metadata !2, i64 152, metadata !3, i64 160, metadata !2, i64 168, metadata !2, i64 176, metadata !2, i64 184, metadata !15, i64 192, metadata !2, i64 200}
!18 = metadata !{metadata !17, metadata !2, i64 144}
!19 = metadata !{metadata !17, metadata !2, i64 88}
!20 = metadata !{metadata !17, metadata !2, i64 96}
!21 = metadata !{metadata !17, metadata !2, i64 72}
!22 = metadata !{metadata !17, metadata !2, i64 104}
!23 = metadata !{metadata !14, metadata !2, i64 8}
!24 = metadata !{metadata !25, metadata !6, i64 24}
!25 = metadata !{metadata !"tree_identifier", metadata !14, i64 0, metadata !26, i64 24}
!26 = metadata !{metadata !"ht_identifier", metadata !6, i64 0, metadata !2, i64 8}
!27 = metadata !{metadata !17, metadata !2, i64 120}
!28 = metadata !{metadata !25, metadata !2, i64 32}
!29 = metadata !{metadata !17, metadata !6, i64 32}
!30 = metadata !{metadata !13, metadata !2, i64 32}
!31 = metadata !{metadata !17, metadata !2, i64 80}
!32 = metadata !{metadata !33, metadata !6, i64 4}
!33 = metadata !{metadata !"typeinfo", metadata !3, i64 0, metadata !6, i64 4, metadata !6, i64 8}
!34 = metadata !{metadata !33, metadata !6, i64 8}
!35 = metadata !{metadata !33, metadata !3, i64 0}
!36 = metadata !{metadata !13, metadata !2, i64 128}
!37 = metadata !{metadata !13, metadata !2, i64 104}
!38 = metadata !{metadata !13, metadata !2, i64 112}
!39 = metadata !{metadata !13, metadata !2, i64 136}
!40 = metadata !{metadata !41, metadata !6, i64 24}
!41 = metadata !{metadata !"tree_vec", metadata !14, i64 0, metadata !6, i64 24, metadata !3, i64 32}
!42 = metadata !{metadata !43, metadata !2, i64 0}
!43 = metadata !{metadata !"lang_hooks", metadata !2, i64 0, metadata !44, i64 8, metadata !2, i64 16, metadata !2, i64 24, metadata !2, i64 32, metadata !2, i64 40, metadata !2, i64 48, metadata !2, i64 56, metadata !2, i64 64, metadata !2, i64 72, metadata !2, i64 80, metadata !2, i64 88, metadata !45, i64 96, metadata !2, i64 104, metadata !2, i64 112, metadata !2, i64 120, metadata !2, i64 128, metadata !2, i64 136, metadata !2, i64 144, metadata !46, i64 152, metadata !47, i64 240}
!44 = metadata !{metadata !"long", metadata !3, i64 0}
!45 = metadata !{metadata !"_Bool", metadata !3, i64 0}
!46 = metadata !{metadata !"lang_hooks_for_tree_inlining", metadata !2, i64 0, metadata !2, i64 8, metadata !2, i64 16, metadata !2, i64 24, metadata !2, i64 32, metadata !2, i64 40, metadata !2, i64 48, metadata !2, i64 56, metadata !2, i64 64, metadata !2, i64 72, metadata !2, i64 80}
!47 = metadata !{metadata !"lang_hooks_for_tree_dump", metadata !2, i64 0, metadata !2, i64 8}
!48 = metadata !{metadata !17, metadata !2, i64 40}
!49 = metadata !{metadata !14, metadata !2, i64 0}
!50 = metadata !{metadata !17, metadata !2, i64 184}
!51 = metadata !{metadata !52, metadata !2, i64 32}
!52 = metadata !{metadata !"tree_list", metadata !14, i64 0, metadata !2, i64 24, metadata !2, i64 32}
!53 = metadata !{metadata !54, metadata !15, i64 40}
!54 = metadata !{metadata !"tree_int_cst", metadata !14, i64 0, metadata !2, i64 24, metadata !55, i64 32}
!55 = metadata !{metadata !"", metadata !15, i64 0, metadata !15, i64 8}
!56 = metadata !{metadata !54, metadata !15, i64 32}
!57 = metadata !{metadata !15, metadata !15, i64 0}
!58 = metadata !{metadata !59, metadata !2, i64 32}
!59 = metadata !{metadata !"tree_block", metadata !14, i64 0, metadata !6, i64 24, metadata !6, i64 24, metadata !6, i64 24, metadata !2, i64 32, metadata !2, i64 40, metadata !2, i64 48, metadata !2, i64 56, metadata !2, i64 64, metadata !2, i64 72}
!60 = metadata !{metadata !59, metadata !2, i64 40}
