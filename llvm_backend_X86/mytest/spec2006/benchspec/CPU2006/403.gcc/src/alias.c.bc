; ModuleID = 'alias.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%union.tree_node = type { %struct.tree_decl }
%struct.tree_decl = type { %struct.tree_common, i8*, i32, i32, %union.tree_node*, i48, %union.anon.0, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %union.anon.2, %union.tree_node*, %union.tree_node*, %union.tree_node*, i64, %struct.lang_decl* }
%struct.tree_common = type { %union.tree_node*, %union.tree_node*, i32 }
%union.anon.0 = type { i64 }
%struct.rtx_def = type { i32, [1 x %union.rtunion_def] }
%union.rtunion_def = type { i64 }
%union.anon.2 = type { %struct.function* }
%struct.function = type { %struct.eh_status*, %struct.stmt_status*, %struct.expr_status*, %struct.emit_status*, %struct.varasm_status*, i8*, %union.tree_node*, %struct.function*, i32, i32, i32, i32, %struct.rtx_def*, %struct.ix86_args, %struct.rtx_def*, %struct.rtx_def*, i8*, %struct.initial_value_struct*, i32, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i64, %union.tree_node*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, %struct.rtx_def**, %struct.temp_slot*, i32, i32, i32, %struct.var_refs_queue*, i32, i32, i8*, %union.tree_node*, %struct.rtx_def*, i32, i32, %struct.machine_function*, i32, i32, %struct.language_function*, %struct.rtx_def*, i24 }
%struct.eh_status = type opaque
%struct.stmt_status = type opaque
%struct.expr_status = type { i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def* }
%struct.emit_status = type { i32, i32, %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.sequence_stack*, i32, i32, i8*, i32, i8*, %union.tree_node**, %struct.rtx_def** }
%struct.sequence_stack = type { %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.sequence_stack* }
%struct.varasm_status = type opaque
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.initial_value_struct = type opaque
%struct.temp_slot = type opaque
%struct.var_refs_queue = type { %struct.rtx_def*, i32, i32, %struct.var_refs_queue* }
%struct.machine_function = type opaque
%struct.language_function = type opaque
%struct.lang_decl = type opaque
%struct.lang_hooks = type { i8*, i64, void ()*, i32 (i32, i8**)*, void ()*, i8* (i8*)*, void ()*, void ()*, i64 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i32 (%struct.rtx_def*, %union.tree_node*)*, i32 (%union.tree_node*)*, i8, void ()*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (i32)*, %struct.lang_hooks_for_tree_inlining, %struct.lang_hooks_for_tree_dump }
%struct._IO_FILE = type opaque
%struct.lang_hooks_for_tree_inlining = type { %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, i8*)*, i32 (%union.tree_node**)*, i32 (%union.tree_node*)*, %union.tree_node* (i8*, %union.tree_node*)*, i32 (%union.tree_node*)*, i32 (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*, i8*, i32*, i8*)*, i32 (%union.tree_node*)*, i32 (%union.tree_node*)*, void (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)* }
%struct.lang_hooks_for_tree_dump = type { i32 (i8*, %union.tree_node*)*, i32 (%union.tree_node*)* }
%struct.splay_tree_s = type { %struct.splay_tree_node_s*, i32 (i64, i64)*, void (i64)*, void (i64)*, i8* (i32, i8*)*, void (i8*, i8*)*, i8* }
%struct.splay_tree_node_s = type { i64, i64, %struct.splay_tree_node_s*, %struct.splay_tree_node_s* }
%struct.varray_head_tag = type { i64, i64, i64, i8*, %union.varray_data_tag }
%union.varray_data_tag = type { [1 x %struct.const_equiv_data] }
%struct.const_equiv_data = type { %struct.rtx_def*, i32 }
%struct.alias_set_entry = type { i64, %struct.splay_tree_s*, i32 }
%struct.tree_type = type { %struct.tree_common, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32, i32, i32, %union.tree_node*, %union.tree_node*, %union.anon.3, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i64, %struct.lang_type* }
%union.anon.3 = type { i8* }
%struct.lang_type = type opaque
%struct.mem_attrs = type { i64, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32 }
%struct.cselib_val_struct = type { i32, %union.anon, %struct.elt_loc_list*, %struct.elt_list* }
%union.anon = type { %struct.rtx_def* }
%struct.elt_loc_list = type { %struct.elt_loc_list*, %struct.rtx_def*, %struct.rtx_def* }
%struct.elt_list = type { %struct.elt_list*, %struct.cselib_val_struct* }
%struct.reg_info_def = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }
%struct.rtvec_def = type { i32, [1 x %struct.rtx_def*] }

@flag_strict_aliasing = external global i32
@global_trees = external global [51 x %union.tree_node*]
@tree_code_type = external global [256 x i8]
@lang_hooks = external constant %struct.lang_hooks
@new_alias_set.last_alias_set = internal unnamed_addr global i64 0, align 8
@.str = private unnamed_addr constant [8 x i8] c"alias.c\00", align 1
@__FUNCTION__.record_alias_subset = private unnamed_addr constant [20 x i8] c"record_alias_subset\00", align 1
@alias_sets = internal unnamed_addr global %struct.splay_tree_s* null, align 8
@get_varargs_alias_set.set = internal unnamed_addr global i64 -1, align 8
@get_frame_alias_set.set = internal unnamed_addr global i64 -1, align 8
@reg_base_value_size = internal unnamed_addr global i32 0, align 4
@alias_invariant = internal unnamed_addr global %struct.rtx_def** null, align 8
@reg_base_value = internal unnamed_addr global %struct.rtx_def** null, align 8
@reg_known_value_size = internal unnamed_addr global i32 0, align 4
@reg_known_value = common global %struct.rtx_def** null, align 8
@mode_size = external constant [59 x i8]
@current_function_decl = external global %union.tree_node*
@rtx_class = external constant [153 x i8]
@target_flags = external global i32
@argument_registers = internal unnamed_addr global i64 0, align 8
@reg_known_equiv_p = common global i8* null, align 8
@new_reg_base_value = internal unnamed_addr global %struct.rtx_def** null, align 8
@reg_seen = internal unnamed_addr global i8* null, align 8
@reload_completed = external global i32
@flag_unroll_loops = external global i32
@unique_id = internal unnamed_addr global i32 0, align 4
@copying_arguments = internal unnamed_addr global i1 false
@global_rtl = external global [11 x %struct.rtx_def*]
@reg_n_info = external global %struct.varray_head_tag*
@cfun = external global %struct.function*
@__FUNCTION__.record_set = private unnamed_addr constant [11 x i8] c"record_set\00", align 1
@fixed_regs = external global [53 x i8]
@global_regs = external global [53 x i8]
@rtx_format = external constant [153 x i8*]
@rtx_length = external constant [153 x i8]
@__FUNCTION__.rtx_equal_for_memref_p = private unnamed_addr constant [23 x i8] c"rtx_equal_for_memref_p\00", align 1
@flag_expensive_optimizations = external global i32
@mode_unit_size = external constant [59 x i8]
@flag_argument_noalias = external global i32
@pic_offset_table_rtx = external global %struct.rtx_def*

; Function Attrs: nounwind uwtable
define i32 @alias_sets_conflict_p(i64 %set1, i64 %set2) #0 {
entry:
  %cmp = icmp eq i64 %set1, 0
  %cmp1 = icmp eq i64 %set2, 0
  %or.cond = or i1 %cmp, %cmp1
  %cmp3 = icmp eq i64 %set1, %set2
  %or.cond32 = or i1 %or.cond, %cmp3
  br i1 %or.cond32, label %return, label %if.end

if.end:                                           ; preds = %entry
  %0 = load %struct.splay_tree_s** @alias_sets, align 8, !tbaa !1
  %call.i = tail call %struct.splay_tree_node_s* @splay_tree_lookup(%struct.splay_tree_s* %0, i64 %set1) #4
  %cmp.i = icmp eq %struct.splay_tree_node_s* %call.i, null
  br i1 %cmp.i, label %if.end9, label %get_alias_set_entry.exit

get_alias_set_entry.exit:                         ; preds = %if.end
  %value.i = getelementptr inbounds %struct.splay_tree_node_s* %call.i, i64 0, i32 1
  %1 = load i64* %value.i, align 8, !tbaa !5
  %2 = inttoptr i64 %1 to %struct.alias_set_entry*
  %cmp4 = icmp eq i64 %1, 0
  br i1 %cmp4, label %if.end9, label %land.lhs.true

land.lhs.true:                                    ; preds = %get_alias_set_entry.exit
  %has_zero_child = getelementptr inbounds %struct.alias_set_entry* %2, i64 0, i32 2
  %3 = load i32* %has_zero_child, align 4, !tbaa !8
  %tobool = icmp eq i32 %3, 0
  br i1 %tobool, label %lor.lhs.false5, label %return

lor.lhs.false5:                                   ; preds = %land.lhs.true
  %children = getelementptr inbounds %struct.alias_set_entry* %2, i64 0, i32 1
  %4 = load %struct.splay_tree_s** %children, align 8, !tbaa !12
  %call6 = tail call %struct.splay_tree_node_s* @splay_tree_lookup(%struct.splay_tree_s* %4, i64 %set2) #4
  %tobool7 = icmp eq %struct.splay_tree_node_s* %call6, null
  br i1 %tobool7, label %if.end9, label %return

if.end9:                                          ; preds = %if.end, %lor.lhs.false5, %get_alias_set_entry.exit
  %5 = load %struct.splay_tree_s** @alias_sets, align 8, !tbaa !1
  %call.i33 = tail call %struct.splay_tree_node_s* @splay_tree_lookup(%struct.splay_tree_s* %5, i64 %set2) #4
  %cmp.i34 = icmp eq %struct.splay_tree_node_s* %call.i33, null
  br i1 %cmp.i34, label %if.end20, label %get_alias_set_entry.exit38

get_alias_set_entry.exit38:                       ; preds = %if.end9
  %value.i35 = getelementptr inbounds %struct.splay_tree_node_s* %call.i33, i64 0, i32 1
  %6 = load i64* %value.i35, align 8, !tbaa !5
  %7 = inttoptr i64 %6 to %struct.alias_set_entry*
  %cmp11 = icmp eq i64 %6, 0
  br i1 %cmp11, label %if.end20, label %land.lhs.true12

land.lhs.true12:                                  ; preds = %get_alias_set_entry.exit38
  %has_zero_child13 = getelementptr inbounds %struct.alias_set_entry* %7, i64 0, i32 2
  %8 = load i32* %has_zero_child13, align 4, !tbaa !8
  %tobool14 = icmp eq i32 %8, 0
  br i1 %tobool14, label %lor.lhs.false15, label %return

lor.lhs.false15:                                  ; preds = %land.lhs.true12
  %children16 = getelementptr inbounds %struct.alias_set_entry* %7, i64 0, i32 1
  %9 = load %struct.splay_tree_s** %children16, align 8, !tbaa !12
  %call17 = tail call %struct.splay_tree_node_s* @splay_tree_lookup(%struct.splay_tree_s* %9, i64 %set1) #4
  %tobool18 = icmp eq %struct.splay_tree_node_s* %call17, null
  br i1 %tobool18, label %if.end20, label %return

if.end20:                                         ; preds = %if.end9, %lor.lhs.false15, %get_alias_set_entry.exit38
  br label %return

return:                                           ; preds = %land.lhs.true12, %lor.lhs.false15, %land.lhs.true, %lor.lhs.false5, %entry, %if.end20
  %retval.0 = phi i32 [ 0, %if.end20 ], [ 1, %entry ], [ 1, %lor.lhs.false5 ], [ 1, %land.lhs.true ], [ 1, %lor.lhs.false15 ], [ 1, %land.lhs.true12 ]
  ret i32 %retval.0
}

declare %struct.splay_tree_node_s* @splay_tree_lookup(%struct.splay_tree_s*, i64) #1

; Function Attrs: nounwind readonly uwtable
define i32 @readonly_fields_p(%union.tree_node* nocapture readonly %type) #2 {
entry:
  %code = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %bf.clear.off = add i32 %bf.clear, -20
  %switch = icmp ult i32 %bf.clear.off, 3
  br i1 %switch, label %if.end, label %return

if.end:                                           ; preds = %entry
  %values = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 1
  %0 = load i8** %values, align 8
  %cmp1336 = icmp eq i8* %0, null
  br i1 %cmp1336, label %return, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.end
  %1 = bitcast i8* %0 to %union.tree_node*
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %field.037 = phi %union.tree_node* [ %1, %for.body.lr.ph ], [ %3, %for.inc ]
  %code15 = getelementptr inbounds %union.tree_node* %field.037, i64 0, i32 0, i32 0, i32 2
  %bf.load16 = load i32* %code15, align 8
  %bf.clear17 = and i32 %bf.load16, 255
  %cmp18 = icmp eq i32 %bf.clear17, 37
  br i1 %cmp18, label %land.lhs.true19, label %for.inc

land.lhs.true19:                                  ; preds = %for.body
  %bf.clear22 = and i32 %bf.load16, 4096
  %tobool = icmp eq i32 %bf.clear22, 0
  br i1 %tobool, label %lor.lhs.false, label %return

lor.lhs.false:                                    ; preds = %land.lhs.true19
  %type24 = getelementptr inbounds %union.tree_node* %field.037, i64 0, i32 0, i32 0, i32 1
  %2 = load %union.tree_node** %type24, align 8, !tbaa !13
  %call = tail call i32 @readonly_fields_p(%union.tree_node* %2)
  %tobool25 = icmp eq i32 %call, 0
  br i1 %tobool25, label %for.inc, label %return

for.inc:                                          ; preds = %lor.lhs.false, %for.body
  %chain = getelementptr inbounds %union.tree_node* %field.037, i64 0, i32 0, i32 0, i32 0
  %3 = load %union.tree_node** %chain, align 8, !tbaa !15
  %cmp13 = icmp eq %union.tree_node* %3, null
  br i1 %cmp13, label %return, label %for.body

return:                                           ; preds = %lor.lhs.false, %land.lhs.true19, %for.inc, %if.end, %entry
  %retval.0 = phi i32 [ 0, %entry ], [ 0, %if.end ], [ 1, %lor.lhs.false ], [ 1, %land.lhs.true19 ], [ 0, %for.inc ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @objects_must_conflict_p(%union.tree_node* %t1, %union.tree_node* %t2) #0 {
entry:
  %cmp = icmp eq %union.tree_node* %t1, null
  %cmp1 = icmp eq %union.tree_node* %t2, null
  %or.cond = and i1 %cmp, %cmp1
  br i1 %or.cond, label %return, label %if.end

if.end:                                           ; preds = %entry
  %cmp2 = icmp ne %union.tree_node* %t1, null
  br i1 %cmp2, label %land.lhs.true3, label %lor.lhs.false

land.lhs.true3:                                   ; preds = %if.end
  %call = tail call i32 @readonly_fields_p(%union.tree_node* %t1)
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %lor.lhs.false, label %return

lor.lhs.false:                                    ; preds = %land.lhs.true3, %if.end
  %cmp4 = icmp ne %union.tree_node* %t2, null
  br i1 %cmp4, label %land.lhs.true5, label %lor.lhs.false8

land.lhs.true5:                                   ; preds = %lor.lhs.false
  %call6 = tail call i32 @readonly_fields_p(%union.tree_node* %t2)
  %tobool7 = icmp eq i32 %call6, 0
  br i1 %tobool7, label %lor.lhs.false8, label %return

lor.lhs.false8:                                   ; preds = %land.lhs.true5, %lor.lhs.false
  br i1 %cmp2, label %land.lhs.true10, label %lor.lhs.false12

land.lhs.true10:                                  ; preds = %lor.lhs.false8
  %readonly_flag = getelementptr inbounds %union.tree_node* %t1, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %readonly_flag, align 8
  %bf.clear = and i32 %bf.load, 4096
  %tobool11 = icmp eq i32 %bf.clear, 0
  br i1 %tobool11, label %lor.lhs.false12, label %return

lor.lhs.false12:                                  ; preds = %land.lhs.true10, %lor.lhs.false8
  br i1 %cmp4, label %land.lhs.true14, label %if.end22

land.lhs.true14:                                  ; preds = %lor.lhs.false12
  %readonly_flag16 = getelementptr inbounds %union.tree_node* %t2, i64 0, i32 0, i32 0, i32 2
  %bf.load17 = load i32* %readonly_flag16, align 8
  %bf.clear19 = and i32 %bf.load17, 4096
  %tobool20 = icmp eq i32 %bf.clear19, 0
  br i1 %tobool20, label %if.end22, label %return

if.end22:                                         ; preds = %land.lhs.true14, %lor.lhs.false12
  %cmp23 = icmp eq %union.tree_node* %t1, %t2
  br i1 %cmp23, label %return, label %lor.lhs.false24

lor.lhs.false24:                                  ; preds = %if.end22
  br i1 %cmp2, label %land.lhs.true26, label %land.end

land.lhs.true26:                                  ; preds = %lor.lhs.false24
  %volatile_flag = getelementptr inbounds %union.tree_node* %t1, i64 0, i32 0, i32 0, i32 2
  %bf.load28 = load i32* %volatile_flag, align 8
  %bf.clear30 = and i32 %bf.load28, 2048
  %tobool31 = icmp ne i32 %bf.clear30, 0
  %or.cond117 = and i1 %tobool31, %cmp4
  br i1 %or.cond117, label %land.lhs.true34, label %land.rhs

land.lhs.true34:                                  ; preds = %land.lhs.true26
  %volatile_flag36 = getelementptr inbounds %union.tree_node* %t2, i64 0, i32 0, i32 0, i32 2
  %bf.load37 = load i32* %volatile_flag36, align 8
  %bf.clear39 = and i32 %bf.load37, 2048
  %tobool40 = icmp eq i32 %bf.clear39, 0
  br i1 %tobool40, label %land.rhs, label %return

land.rhs:                                         ; preds = %land.lhs.true34, %land.lhs.true26
  %bf.clear46 = and i32 %bf.load28, 255
  %switch.tableidx = add i32 %bf.clear46, -18
  %0 = icmp ult i32 %switch.tableidx, 5
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.lhs.false24
  %1 = phi i1 [ false, %lor.lhs.false24 ], [ %0, %land.rhs ]
  br i1 %cmp4, label %land.end103, label %land.end.land.end103_crit_edge

land.end.land.end103_crit_edge:                   ; preds = %land.end
  br i1 %1, label %return, label %if.end107

land.end103:                                      ; preds = %land.end
  %code74 = getelementptr inbounds %union.tree_node* %t2, i64 0, i32 0, i32 0, i32 2
  %bf.load75 = load i32* %code74, align 8
  %bf.clear76 = and i32 %bf.load75, 255
  %switch.tableidx149 = add i32 %bf.clear76, -18
  %2 = icmp ult i32 %switch.tableidx149, 5
  %cmp105 = xor i1 %1, %2
  br i1 %cmp105, label %return, label %if.end107

if.end107:                                        ; preds = %land.end.land.end103_crit_edge, %land.end103
  br i1 %cmp2, label %cond.true, label %cond.end

cond.true:                                        ; preds = %if.end107
  %call109 = tail call i64 @get_alias_set(%union.tree_node* %t1)
  br label %cond.end

cond.end:                                         ; preds = %if.end107, %cond.true
  %cond = phi i64 [ %call109, %cond.true ], [ 0, %if.end107 ]
  br i1 %cmp4, label %cond.true111, label %cond.end114

cond.true111:                                     ; preds = %cond.end
  %call112 = tail call i64 @get_alias_set(%union.tree_node* %t2)
  br label %cond.end114

cond.end114:                                      ; preds = %cond.end, %cond.true111
  %cond115 = phi i64 [ %call112, %cond.true111 ], [ 0, %cond.end ]
  %call116 = tail call i32 @alias_sets_conflict_p(i64 %cond, i64 %cond115)
  br label %return

return:                                           ; preds = %land.end.land.end103_crit_edge, %land.end103, %if.end22, %land.lhs.true34, %land.lhs.true14, %land.lhs.true10, %land.lhs.true5, %land.lhs.true3, %entry, %cond.end114
  %retval.0 = phi i32 [ %call116, %cond.end114 ], [ 0, %entry ], [ 0, %land.lhs.true3 ], [ 0, %land.lhs.true5 ], [ 0, %land.lhs.true10 ], [ 0, %land.lhs.true14 ], [ 1, %land.lhs.true34 ], [ 1, %if.end22 ], [ 0, %land.end103 ], [ 0, %land.end.land.end103_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i64 @get_alias_set(%union.tree_node* %t) #0 {
entry:
  %placeholder_ptr = alloca %union.tree_node*, align 8
  %0 = load i32* @flag_strict_aliasing, align 4, !tbaa !16
  %tobool = icmp eq i32 %0, 0
  br i1 %tobool, label %return, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %1 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !1
  %cmp = icmp eq %union.tree_node* %1, %t
  br i1 %cmp, label %return, label %lor.lhs.false1

lor.lhs.false1:                                   ; preds = %lor.lhs.false
  %code = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %idxprom500 = zext i32 %bf.clear to i64
  %arrayidx = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom500
  %2 = load i8* %arrayidx, align 1, !tbaa !17
  %cmp2 = icmp eq i8 %2, 116
  br i1 %cmp2, label %if.end340, label %land.lhs.true

land.lhs.true:                                    ; preds = %lor.lhs.false1
  %type = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 0, i32 1
  %3 = load %union.tree_node** %type, align 8, !tbaa !13
  %cmp5 = icmp eq %union.tree_node* %3, null
  %cmp10 = icmp eq %union.tree_node* %3, %1
  %or.cond = or i1 %cmp5, %cmp10
  br i1 %or.cond, label %return, label %if.then21

if.then21:                                        ; preds = %land.lhs.true
  store %union.tree_node* null, %union.tree_node** %placeholder_ptr, align 8, !tbaa !1
  br label %while.cond

while.cond:                                       ; preds = %land.rhs.while.cond_crit_edge, %if.then21
  %bf.load24 = phi i32 [ %bf.load, %if.then21 ], [ %bf.load24.pre, %land.rhs.while.cond_crit_edge ]
  %t.addr.0 = phi %union.tree_node* [ %t, %if.then21 ], [ %4, %land.rhs.while.cond_crit_edge ]
  %code23 = getelementptr inbounds %union.tree_node* %t.addr.0, i64 0, i32 0, i32 0, i32 2
  %bf.clear25 = and i32 %bf.load24, 255
  %bf.clear25.off = add i32 %bf.clear25, -114
  %switch = icmp ult i32 %bf.clear25.off, 3
  br i1 %switch, label %land.lhs.true42, label %while.end

land.lhs.true42:                                  ; preds = %while.cond
  %operands = getelementptr inbounds %union.tree_node* %t.addr.0, i64 0, i32 0, i32 2
  %arrayidx43 = bitcast i32* %operands to %union.tree_node**
  %4 = load %union.tree_node** %arrayidx43, align 8, !tbaa !1
  %cmp44 = icmp eq %union.tree_node* %4, %1
  br i1 %cmp44, label %while.end, label %land.rhs

land.rhs:                                         ; preds = %land.lhs.true42
  %type47 = getelementptr inbounds %union.tree_node* %t.addr.0, i64 0, i32 0, i32 0, i32 1
  %5 = load %union.tree_node** %type47, align 8, !tbaa !13
  %type48 = bitcast %union.tree_node* %5 to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type* %type48, i64 0, i32 6
  %bf.load49 = load i32* %mode, align 4
  %type55 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 0, i32 1
  %6 = load %union.tree_node** %type55, align 8, !tbaa !13
  %type56 = bitcast %union.tree_node* %6 to %struct.tree_type*
  %mode57 = getelementptr inbounds %struct.tree_type* %type56, i64 0, i32 6
  %bf.load58 = load i32* %mode57, align 4
  %bf.lshr504 = xor i32 %bf.load58, %bf.load49
  %7 = and i32 %bf.lshr504, 65024
  %cmp61 = icmp eq i32 %7, 0
  br i1 %cmp61, label %land.rhs.while.cond_crit_edge, label %while.end

land.rhs.while.cond_crit_edge:                    ; preds = %land.rhs
  %code23.phi.trans.insert = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 0, i32 2
  %bf.load24.pre = load i32* %code23.phi.trans.insert, align 8
  br label %while.cond

while.end:                                        ; preds = %while.cond, %land.lhs.true42, %land.rhs
  %8 = load i64 (%union.tree_node*)** getelementptr inbounds (%struct.lang_hooks* @lang_hooks, i64 0, i32 8), align 8, !tbaa !18
  %call = call i64 %8(%union.tree_node* %t.addr.0) #4
  %cmp66 = icmp eq i64 %call, -1
  br i1 %cmp66, label %while.cond70.preheader, label %return

while.cond70.preheader:                           ; preds = %while.end
  %bf.load73.pre = load i32* %code, align 8
  br label %while.cond70

while.cond70:                                     ; preds = %while.cond92, %land.lhs.true113, %land.rhs119, %while.cond70.preheader
  %bf.load73 = phi i32 [ %bf.load73.pre, %while.cond70.preheader ], [ %bf.load95, %land.rhs119 ], [ %bf.load95, %land.lhs.true113 ], [ %bf.load95, %while.cond92 ]
  %inner.0 = phi %union.tree_node* [ %t, %while.cond70.preheader ], [ %inner.1, %land.rhs119 ], [ %inner.1, %land.lhs.true113 ], [ %inner.1, %while.cond92 ]
  %bf.clear74 = and i32 %bf.load73, 255
  %cmp75 = icmp eq i32 %bf.clear74, 57
  br i1 %cmp75, label %if.then86, label %lor.end

lor.end:                                          ; preds = %while.cond70
  %code72 = getelementptr inbounds %union.tree_node* %inner.0, i64 0, i32 0, i32 0, i32 2
  %call77 = call i32 @handled_component_p(%union.tree_node* %inner.0) #4
  %tobool78 = icmp eq i32 %call77, 0
  %bf.load82 = load i32* %code72, align 8
  %bf.clear83 = and i32 %bf.load82, 255
  br i1 %tobool78, label %while.end145, label %while.body79

while.body79:                                     ; preds = %lor.end
  %cmp84 = icmp eq i32 %bf.clear83, 57
  br i1 %cmp84, label %if.then86, label %if.else

if.then86:                                        ; preds = %while.cond70, %while.body79
  %call87 = call %union.tree_node* @find_placeholder(%union.tree_node* %inner.0, %union.tree_node** %placeholder_ptr) #4
  br label %while.cond92.preheader

if.else:                                          ; preds = %while.body79
  %operands89 = getelementptr inbounds %union.tree_node* %inner.0, i64 0, i32 0, i32 2
  %arrayidx90 = bitcast i32* %operands89 to %union.tree_node**
  %9 = load %union.tree_node** %arrayidx90, align 8, !tbaa !1
  br label %while.cond92.preheader

while.cond92.preheader:                           ; preds = %if.else, %if.then86
  %inner.1.ph = phi %union.tree_node* [ %call87, %if.then86 ], [ %9, %if.else ]
  %10 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !1
  br label %while.cond92

while.cond92:                                     ; preds = %while.cond92.preheader, %land.rhs119
  %inner.1 = phi %union.tree_node* [ %11, %land.rhs119 ], [ %inner.1.ph, %while.cond92.preheader ]
  %code94 = getelementptr inbounds %union.tree_node* %inner.1, i64 0, i32 0, i32 0, i32 2
  %bf.load95 = load i32* %code94, align 8
  %bf.clear96 = and i32 %bf.load95, 255
  %bf.clear96.off = add i32 %bf.clear96, -114
  %switch505 = icmp ult i32 %bf.clear96.off, 3
  br i1 %switch505, label %land.lhs.true113, label %while.cond70

land.lhs.true113:                                 ; preds = %while.cond92
  %operands115 = getelementptr inbounds %union.tree_node* %inner.1, i64 0, i32 0, i32 2
  %arrayidx116 = bitcast i32* %operands115 to %union.tree_node**
  %11 = load %union.tree_node** %arrayidx116, align 8, !tbaa !1
  %cmp117 = icmp eq %union.tree_node* %11, %10
  br i1 %cmp117, label %while.cond70, label %land.rhs119

land.rhs119:                                      ; preds = %land.lhs.true113
  %type121 = getelementptr inbounds %union.tree_node* %inner.1, i64 0, i32 0, i32 0, i32 1
  %12 = load %union.tree_node** %type121, align 8, !tbaa !13
  %type122 = bitcast %union.tree_node* %12 to %struct.tree_type*
  %mode123 = getelementptr inbounds %struct.tree_type* %type122, i64 0, i32 6
  %bf.load124 = load i32* %mode123, align 4
  %type131 = getelementptr inbounds %union.tree_node* %11, i64 0, i32 0, i32 0, i32 1
  %13 = load %union.tree_node** %type131, align 8, !tbaa !13
  %type132 = bitcast %union.tree_node* %13 to %struct.tree_type*
  %mode133 = getelementptr inbounds %struct.tree_type* %type132, i64 0, i32 6
  %bf.load134 = load i32* %mode133, align 4
  %bf.lshr125503 = xor i32 %bf.load134, %bf.load124
  %14 = and i32 %bf.lshr125503, 65024
  %cmp137 = icmp eq i32 %14, 0
  br i1 %cmp137, label %while.cond92, label %while.cond70

while.end145:                                     ; preds = %lor.end
  %cmp150 = icmp eq i32 %bf.clear83, 41
  br i1 %cmp150, label %if.then152, label %if.end198

if.then152:                                       ; preds = %while.end145
  %operands154 = getelementptr inbounds %union.tree_node* %inner.0, i64 0, i32 0, i32 2
  %arrayidx155 = bitcast i32* %operands154 to %union.tree_node**
  %15 = load %union.tree_node** %arrayidx155, align 8, !tbaa !1
  %call156 = call fastcc %union.tree_node* @find_base_decl(%union.tree_node* %15)
  %tobool157 = icmp eq %union.tree_node* %call156, null
  br i1 %tobool157, label %if.else186, label %land.lhs.true158

land.lhs.true158:                                 ; preds = %if.then152
  %pointer_alias_set = getelementptr inbounds %union.tree_node* %call156, i64 0, i32 0, i32 23
  %16 = load i64* %pointer_alias_set, align 8, !tbaa !23
  switch i64 %16, label %if.end183 [
    i64 -1, label %if.else186
    i64 -2, label %if.then167
  ]

if.then167:                                       ; preds = %land.lhs.true158
  %type169 = getelementptr inbounds %union.tree_node* %call156, i64 0, i32 0, i32 0, i32 1
  %17 = load %union.tree_node** %type169, align 8, !tbaa !13
  %type171 = getelementptr inbounds %union.tree_node* %17, i64 0, i32 0, i32 0, i32 1
  %18 = load %union.tree_node** %type171, align 8, !tbaa !13
  %call172 = call i64 @get_alias_set(%union.tree_node* %18)
  %cmp173 = icmp eq i64 %call172, 0
  br i1 %cmp173, label %if.end183, label %if.else176

if.else176:                                       ; preds = %if.then167
  %19 = load i32* @flag_strict_aliasing, align 4, !tbaa !16
  %tobool.i507 = icmp eq i32 %19, 0
  br i1 %tobool.i507, label %new_alias_set.exit511, label %if.then.i509

if.then.i509:                                     ; preds = %if.else176
  %20 = load i64* @new_alias_set.last_alias_set, align 8, !tbaa !25
  %inc.i508 = add nsw i64 %20, 1
  store i64 %inc.i508, i64* @new_alias_set.last_alias_set, align 8, !tbaa !25
  br label %new_alias_set.exit511

new_alias_set.exit511:                            ; preds = %if.else176, %if.then.i509
  %retval.0.i510 = phi i64 [ %inc.i508, %if.then.i509 ], [ 0, %if.else176 ]
  store i64 %retval.0.i510, i64* %pointer_alias_set, align 8, !tbaa !23
  call void @record_alias_subset(i64 %call172, i64 %retval.0.i510)
  br label %if.end183

if.end183:                                        ; preds = %land.lhs.true158, %new_alias_set.exit511, %if.then167
  %21 = load i64* %pointer_alias_set, align 8, !tbaa !23
  br label %return

if.else186:                                       ; preds = %land.lhs.true158, %if.then152
  %type188 = getelementptr inbounds %union.tree_node* %inner.0, i64 0, i32 0, i32 0, i32 1
  %22 = load %union.tree_node** %type188, align 8, !tbaa !13
  %code190 = getelementptr inbounds %union.tree_node* %22, i64 0, i32 0, i32 0, i32 2
  %bf.load191 = load i32* %code190, align 8
  %bf.clear192 = and i32 %bf.load191, 255
  %cmp193 = icmp eq i32 %bf.clear192, 5
  br i1 %cmp193, label %return, label %if.end198

if.end198:                                        ; preds = %if.else186, %while.end145
  store %union.tree_node* null, %union.tree_node** %placeholder_ptr, align 8, !tbaa !1
  %bf.load202.pre = load i32* %code23, align 8
  br label %while.cond199

while.cond199:                                    ; preds = %while.cond228, %land.lhs.true249, %land.rhs255, %if.end198
  %bf.load202 = phi i32 [ %bf.load202.pre, %if.end198 ], [ %bf.load231, %land.rhs255 ], [ %bf.load231, %land.lhs.true249 ], [ %bf.load231, %while.cond228 ]
  %t.addr.1 = phi %union.tree_node* [ %t.addr.0, %if.end198 ], [ %t.addr.2, %land.rhs255 ], [ %t.addr.2, %land.lhs.true249 ], [ %t.addr.2, %while.cond228 ]
  %code201 = getelementptr inbounds %union.tree_node* %t.addr.1, i64 0, i32 0, i32 0, i32 2
  %bf.clear203 = and i32 %bf.load202, 255
  %cmp204 = icmp eq i32 %bf.clear203, 57
  br i1 %cmp204, label %if.then221, label %lor.rhs206

lor.rhs206:                                       ; preds = %while.cond199
  %call207 = call i32 @handled_component_p(%union.tree_node* %t.addr.1) #4
  %tobool208 = icmp eq i32 %call207, 0
  br i1 %tobool208, label %lor.end213.thread518, label %lor.end213

lor.end213.thread518:                             ; preds = %lor.rhs206
  %bf.load217519 = load i32* %code201, align 8
  %bf.clear218520 = and i32 %bf.load217519, 255
  br label %while.end281

lor.end213:                                       ; preds = %lor.rhs206
  %call210 = call i32 @can_address_p(%union.tree_node* %t.addr.1)
  %lnot = icmp eq i32 %call210, 0
  %bf.load217 = load i32* %code201, align 8
  %bf.clear218 = and i32 %bf.load217, 255
  br i1 %lnot, label %while.body214, label %while.end281

while.body214:                                    ; preds = %lor.end213
  %cmp219 = icmp eq i32 %bf.clear218, 57
  br i1 %cmp219, label %if.then221, label %if.else223

if.then221:                                       ; preds = %while.cond199, %while.body214
  %call222 = call %union.tree_node* @find_placeholder(%union.tree_node* %t.addr.1, %union.tree_node** %placeholder_ptr) #4
  br label %while.cond228.preheader

if.else223:                                       ; preds = %while.body214
  %operands225 = getelementptr inbounds %union.tree_node* %t.addr.1, i64 0, i32 0, i32 2
  %arrayidx226 = bitcast i32* %operands225 to %union.tree_node**
  %23 = load %union.tree_node** %arrayidx226, align 8, !tbaa !1
  br label %while.cond228.preheader

while.cond228.preheader:                          ; preds = %if.else223, %if.then221
  %t.addr.2.ph = phi %union.tree_node* [ %call222, %if.then221 ], [ %23, %if.else223 ]
  %24 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !1
  br label %while.cond228

while.cond228:                                    ; preds = %while.cond228.preheader, %land.rhs255
  %t.addr.2 = phi %union.tree_node* [ %25, %land.rhs255 ], [ %t.addr.2.ph, %while.cond228.preheader ]
  %code230 = getelementptr inbounds %union.tree_node* %t.addr.2, i64 0, i32 0, i32 0, i32 2
  %bf.load231 = load i32* %code230, align 8
  %bf.clear232 = and i32 %bf.load231, 255
  %bf.clear232.off = add i32 %bf.clear232, -114
  %switch506 = icmp ult i32 %bf.clear232.off, 3
  br i1 %switch506, label %land.lhs.true249, label %while.cond199

land.lhs.true249:                                 ; preds = %while.cond228
  %operands251 = getelementptr inbounds %union.tree_node* %t.addr.2, i64 0, i32 0, i32 2
  %arrayidx252 = bitcast i32* %operands251 to %union.tree_node**
  %25 = load %union.tree_node** %arrayidx252, align 8, !tbaa !1
  %cmp253 = icmp eq %union.tree_node* %25, %24
  br i1 %cmp253, label %while.cond199, label %land.rhs255

land.rhs255:                                      ; preds = %land.lhs.true249
  %type257 = getelementptr inbounds %union.tree_node* %t.addr.2, i64 0, i32 0, i32 0, i32 1
  %26 = load %union.tree_node** %type257, align 8, !tbaa !13
  %type258 = bitcast %union.tree_node* %26 to %struct.tree_type*
  %mode259 = getelementptr inbounds %struct.tree_type* %type258, i64 0, i32 6
  %bf.load260 = load i32* %mode259, align 4
  %type267 = getelementptr inbounds %union.tree_node* %25, i64 0, i32 0, i32 0, i32 1
  %27 = load %union.tree_node** %type267, align 8, !tbaa !13
  %type268 = bitcast %union.tree_node* %27 to %struct.tree_type*
  %mode269 = getelementptr inbounds %struct.tree_type* %type268, i64 0, i32 6
  %bf.load270 = load i32* %mode269, align 4
  %bf.lshr261502 = xor i32 %bf.load270, %bf.load260
  %28 = and i32 %bf.lshr261502, 65024
  %cmp273 = icmp eq i32 %28, 0
  br i1 %cmp273, label %while.cond228, label %while.cond199

while.end281:                                     ; preds = %lor.end213, %lor.end213.thread518
  %bf.clear218521 = phi i32 [ %bf.clear218520, %lor.end213.thread518 ], [ %bf.clear218, %lor.end213 ]
  %cmp286 = icmp eq i32 %bf.clear218521, 34
  br i1 %cmp286, label %land.lhs.true288, label %if.end337

land.lhs.true288:                                 ; preds = %while.end281
  %rtl = getelementptr inbounds %union.tree_node* %t.addr.1, i64 0, i32 0, i32 17
  %29 = load %struct.rtx_def** %rtl, align 8, !tbaa !26
  %cmp290 = icmp eq %struct.rtx_def* %29, null
  br i1 %cmp290, label %if.end337, label %cond.end

cond.end:                                         ; preds = %land.lhs.true288
  %30 = getelementptr inbounds %struct.rtx_def* %29, i64 0, i32 0
  %bf.load300 = load i32* %30, align 8
  %bf.clear301 = and i32 %bf.load300, 65535
  %cmp302 = icmp eq i32 %bf.clear301, 66
  br i1 %cmp302, label %cond.end314, label %if.end337

cond.end314:                                      ; preds = %cond.end
  %arrayidx316 = getelementptr inbounds %struct.rtx_def* %29, i64 0, i32 1, i64 1
  %rtmem = bitcast %union.rtunion_def* %arrayidx316 to %struct.mem_attrs**
  %31 = load %struct.mem_attrs** %rtmem, align 8, !tbaa !1
  %cmp317 = icmp eq %struct.mem_attrs* %31, null
  br i1 %cmp317, label %return, label %cond.end330

cond.end330:                                      ; preds = %cond.end314
  %alias.phi.trans.insert = getelementptr inbounds %struct.mem_attrs* %31, i64 0, i32 0
  %.pre = load i64* %alias.phi.trans.insert, align 8, !tbaa !27
  br label %return

if.end337:                                        ; preds = %land.lhs.true288, %cond.end, %while.end281
  %type339 = getelementptr inbounds %union.tree_node* %t.addr.1, i64 0, i32 0, i32 0, i32 1
  %32 = load %union.tree_node** %type339, align 8, !tbaa !13
  br label %if.end340

if.end340:                                        ; preds = %lor.lhs.false1, %if.end337
  %t.addr.3 = phi %union.tree_node* [ %32, %if.end337 ], [ %t, %lor.lhs.false1 ]
  %33 = getelementptr inbounds %union.tree_node* %t.addr.3, i64 0, i32 0, i32 15
  %34 = load %union.tree_node** %33, align 8, !tbaa !29
  %alias_set = getelementptr inbounds %union.tree_node* %34, i64 0, i32 0, i32 18
  %35 = bitcast %struct.rtx_def** %alias_set to i64*
  %36 = load i64* %35, align 8, !tbaa !31
  %cmp343 = icmp eq i64 %36, -1
  br i1 %cmp343, label %if.end348, label %return

if.end348:                                        ; preds = %if.end340
  %37 = load i64 (%union.tree_node*)** getelementptr inbounds (%struct.lang_hooks* @lang_hooks, i64 0, i32 8), align 8, !tbaa !18
  %call349 = call i64 %37(%union.tree_node* %34) #4
  %cmp350 = icmp eq i64 %call349, -1
  br i1 %cmp350, label %if.else353, label %return

if.else353:                                       ; preds = %if.end348
  %code355 = getelementptr inbounds %union.tree_node* %34, i64 0, i32 0, i32 0, i32 2
  %bf.load356 = load i32* %code355, align 8
  %bf.clear357 = and i32 %bf.load356, 255
  switch i32 %bf.clear357, label %if.else372 [
    i32 23, label %if.end376
    i32 9, label %if.then368
  ]

if.then368:                                       ; preds = %if.else353
  %type370 = getelementptr inbounds %union.tree_node* %34, i64 0, i32 0, i32 0, i32 1
  %38 = load %union.tree_node** %type370, align 8, !tbaa !13
  %call371 = call i64 @get_alias_set(%union.tree_node* %38)
  br label %if.end376

if.else372:                                       ; preds = %if.else353
  %39 = load i32* @flag_strict_aliasing, align 4, !tbaa !16
  %tobool.i = icmp eq i32 %39, 0
  br i1 %tobool.i, label %if.end376, label %if.then.i

if.then.i:                                        ; preds = %if.else372
  %40 = load i64* @new_alias_set.last_alias_set, align 8, !tbaa !25
  %inc.i = add nsw i64 %40, 1
  store i64 %inc.i, i64* @new_alias_set.last_alias_set, align 8, !tbaa !25
  br label %if.end376

if.end376:                                        ; preds = %if.then.i, %if.else372, %if.else353, %if.then368
  %set.0 = phi i64 [ %call371, %if.then368 ], [ 0, %if.else353 ], [ %inc.i, %if.then.i ], [ 0, %if.else372 ]
  %set.0.c = inttoptr i64 %set.0 to %struct.rtx_def*
  store %struct.rtx_def* %set.0.c, %struct.rtx_def** %alias_set, align 8, !tbaa !31
  %bf.load381 = load i32* %code355, align 8
  %bf.clear382 = and i32 %bf.load381, 255
  switch i32 %bf.clear382, label %return [
    i32 18, label %if.then420
    i32 20, label %if.then420
    i32 21, label %if.then420
    i32 22, label %if.then420
    i32 19, label %if.then420
    i32 8, label %if.then420
  ]

if.then420:                                       ; preds = %if.end376, %if.end376, %if.end376, %if.end376, %if.end376, %if.end376
  call void @record_component_aliases(%union.tree_node* %34)
  br label %return

return:                                           ; preds = %if.then420, %if.end376, %if.end348, %if.end340, %cond.end330, %cond.end314, %if.else186, %while.end, %lor.lhs.false, %land.lhs.true, %entry, %if.end183
  %retval.0 = phi i64 [ %21, %if.end183 ], [ 0, %entry ], [ 0, %land.lhs.true ], [ 0, %lor.lhs.false ], [ %call, %while.end ], [ 0, %if.else186 ], [ %.pre, %cond.end330 ], [ 0, %cond.end314 ], [ %36, %if.end340 ], [ %call349, %if.end348 ], [ %set.0, %if.end376 ], [ %set.0, %if.then420 ]
  ret i64 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @can_address_p(%union.tree_node* %t) #0 {
entry:
  %call = tail call i32 @handled_component_p(%union.tree_node* %t) #4
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %return, label %if.else

if.else:                                          ; preds = %entry
  %code = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  switch i32 %bf.clear, label %if.else25 [
    i32 40, label %return
    i32 39, label %land.lhs.true
  ]

land.lhs.true:                                    ; preds = %if.else
  %operands = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 2
  %arrayidx = getelementptr inbounds i32* %operands, i64 2
  %0 = bitcast i32* %arrayidx to %union.tree_node**
  %1 = load %union.tree_node** %0, align 8, !tbaa !1
  %non_addressable = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 5
  %2 = bitcast i48* %non_addressable to i64*
  %bf.load8 = load i64* %2, align 8
  %bf.cast = and i64 %bf.load8, 17179869184
  %tobool10 = icmp eq i64 %bf.cast, 0
  br i1 %tobool10, label %land.lhs.true11, label %if.else25

land.lhs.true11:                                  ; preds = %land.lhs.true
  %arrayidx14 = bitcast i32* %operands to %union.tree_node**
  %3 = load %union.tree_node** %arrayidx14, align 8, !tbaa !1
  %type = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 0, i32 1
  %4 = load %union.tree_node** %type, align 8, !tbaa !13
  %call16 = tail call i64 @get_alias_set(%union.tree_node* %4)
  %cmp17 = icmp eq i64 %call16, 0
  br i1 %cmp17, label %if.else25, label %land.lhs.true18

land.lhs.true18:                                  ; preds = %land.lhs.true11
  %5 = load %union.tree_node** %arrayidx14, align 8, !tbaa !1
  %call22 = tail call i32 @can_address_p(%union.tree_node* %5)
  %tobool23 = icmp eq i32 %call22, 0
  br i1 %tobool23, label %if.else25, label %return

if.else25:                                        ; preds = %if.else, %land.lhs.true18, %land.lhs.true11, %land.lhs.true
  %bf.load28 = load i32* %code, align 8
  %bf.clear29 = and i32 %bf.load28, 255
  %bf.clear29.off = add i32 %bf.clear29, -43
  %switch = icmp ult i32 %bf.clear29.off, 2
  br i1 %switch, label %land.lhs.true36, label %if.end64

land.lhs.true36:                                  ; preds = %if.else25
  %operands38 = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 2
  %arrayidx39 = bitcast i32* %operands38 to %union.tree_node**
  %6 = load %union.tree_node** %arrayidx39, align 8, !tbaa !1
  %type41 = getelementptr inbounds %union.tree_node* %6, i64 0, i32 0, i32 0, i32 1
  %7 = load %union.tree_node** %type41, align 8, !tbaa !13
  %type42 = bitcast %union.tree_node* %7 to %struct.tree_type*
  %transparent_union_flag = getelementptr inbounds %struct.tree_type* %type42, i64 0, i32 6
  %bf.load43 = load i32* %transparent_union_flag, align 4
  %bf.clear45 = and i32 %bf.load43, 524288
  %tobool46 = icmp eq i32 %bf.clear45, 0
  br i1 %tobool46, label %land.lhs.true47, label %if.end64

land.lhs.true47:                                  ; preds = %land.lhs.true36
  %call53 = tail call i64 @get_alias_set(%union.tree_node* %7)
  %cmp54 = icmp eq i64 %call53, 0
  br i1 %cmp54, label %if.end64, label %land.lhs.true55

land.lhs.true55:                                  ; preds = %land.lhs.true47
  %8 = load %union.tree_node** %arrayidx39, align 8, !tbaa !1
  %call59 = tail call i32 @can_address_p(%union.tree_node* %8)
  %tobool60 = icmp eq i32 %call59, 0
  br i1 %tobool60, label %if.end64, label %return

if.end64:                                         ; preds = %if.else25, %land.lhs.true55, %land.lhs.true47, %land.lhs.true36
  br label %return

return:                                           ; preds = %land.lhs.true55, %land.lhs.true18, %if.else, %entry, %if.end64
  %retval.0 = phi i32 [ 0, %if.end64 ], [ 1, %entry ], [ 0, %if.else ], [ 1, %land.lhs.true18 ], [ 1, %land.lhs.true55 ]
  ret i32 %retval.0
}

declare i32 @handled_component_p(%union.tree_node*) #1

declare %union.tree_node* @find_placeholder(%union.tree_node*, %union.tree_node**) #1

; Function Attrs: nounwind readonly uwtable
define internal fastcc %union.tree_node* @find_base_decl(%union.tree_node* readonly %t) #2 {
entry:
  %cmp111 = icmp eq %union.tree_node* %t, null
  %0 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8
  %cmp1112 = icmp eq %union.tree_node* %0, %t
  %or.cond113 = or i1 %cmp111, %cmp1112
  br i1 %or.cond113, label %return, label %lor.lhs.false2

lor.lhs.false2:                                   ; preds = %entry, %sw.bb
  %t.tr114 = phi %union.tree_node* [ %3, %sw.bb ], [ %t, %entry ]
  %type = getelementptr inbounds %union.tree_node* %t.tr114, i64 0, i32 0, i32 0, i32 1
  %1 = load %union.tree_node** %type, align 8, !tbaa !13
  %code = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  switch i32 %bf.clear, label %return [
    i32 13, label %if.end
    i32 15, label %if.end
  ]

if.end:                                           ; preds = %lor.lhs.false2, %lor.lhs.false2
  %code14 = getelementptr inbounds %union.tree_node* %t.tr114, i64 0, i32 0, i32 0, i32 2
  %bf.load15 = load i32* %code14, align 8
  %bf.clear16 = and i32 %bf.load15, 255
  %idxprom108 = zext i32 %bf.clear16 to i64
  %arrayidx = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom108
  %2 = load i8* %arrayidx, align 1, !tbaa !17
  %cmp17 = icmp eq i8 %2, 100
  br i1 %cmp17, label %return, label %if.end20

if.end20:                                         ; preds = %if.end
  %conv = sext i8 %2 to i32
  switch i32 %conv, label %return [
    i32 49, label %sw.bb
    i32 50, label %sw.bb29
    i32 51, label %sw.bb49
  ]

sw.bb:                                            ; preds = %if.end20
  %operands = getelementptr inbounds %union.tree_node* %t.tr114, i64 0, i32 0, i32 2
  %arrayidx28 = bitcast i32* %operands to %union.tree_node**
  %3 = load %union.tree_node** %arrayidx28, align 8, !tbaa !1
  %cmp = icmp eq %union.tree_node* %3, null
  %cmp1 = icmp eq %union.tree_node* %0, %3
  %or.cond = or i1 %cmp, %cmp1
  br i1 %or.cond, label %return, label %lor.lhs.false2

sw.bb29:                                          ; preds = %if.end20
  %operands31 = getelementptr inbounds %union.tree_node* %t.tr114, i64 0, i32 0, i32 2
  %arrayidx32 = bitcast i32* %operands31 to %union.tree_node**
  %4 = load %union.tree_node** %arrayidx32, align 8, !tbaa !1
  %call33 = tail call fastcc %union.tree_node* @find_base_decl(%union.tree_node* %4)
  %arrayidx36 = getelementptr inbounds i32* %operands31, i64 2
  %5 = bitcast i32* %arrayidx36 to %union.tree_node**
  %6 = load %union.tree_node** %5, align 8, !tbaa !1
  %call37 = tail call fastcc %union.tree_node* @find_base_decl(%union.tree_node* %6)
  %cmp38 = icmp eq %union.tree_node* %call33, %call37
  br i1 %cmp38, label %return, label %if.else

if.else:                                          ; preds = %sw.bb29
  %cmp41 = icmp eq %union.tree_node* %call33, null
  br i1 %cmp41, label %return, label %if.else44

if.else44:                                        ; preds = %if.else
  %cmp45 = icmp eq %union.tree_node* %call37, null
  %call33. = select i1 %cmp45, %union.tree_node* %call33, %union.tree_node* null
  br label %return

sw.bb49:                                          ; preds = %if.end20
  %operands51 = getelementptr inbounds %union.tree_node* %t.tr114, i64 0, i32 0, i32 2
  %arrayidx52 = bitcast i32* %operands51 to %union.tree_node**
  %7 = load %union.tree_node** %arrayidx52, align 8, !tbaa !1
  %call53 = tail call fastcc %union.tree_node* @find_base_decl(%union.tree_node* %7)
  %arrayidx56 = getelementptr inbounds i32* %operands51, i64 2
  %8 = bitcast i32* %arrayidx56 to %union.tree_node**
  %9 = load %union.tree_node** %8, align 8, !tbaa !1
  %call57 = tail call fastcc %union.tree_node* @find_base_decl(%union.tree_node* %9)
  %arrayidx60 = getelementptr inbounds i32* %operands51, i64 4
  %10 = bitcast i32* %arrayidx60 to %union.tree_node**
  %11 = load %union.tree_node** %10, align 8, !tbaa !1
  %call61 = tail call fastcc %union.tree_node* @find_base_decl(%union.tree_node* %11)
  %cmp62 = icmp eq %union.tree_node* %call57, null
  %call61.call57 = select i1 %cmp62, %union.tree_node* %call61, %union.tree_node* %call57
  %cmp66 = icmp eq %union.tree_node* %call53, null
  %d0.0 = select i1 %cmp66, %union.tree_node* %call61.call57, %union.tree_node* %call53
  %cmp70 = icmp eq %union.tree_node* %call61.call57, null
  %d0.0.call61.call57 = select i1 %cmp70, %union.tree_node* %d0.0, %union.tree_node* %call61.call57
  %cmp78 = icmp eq %union.tree_node* %d0.0, %d0.0.call61.call57
  br i1 %cmp78, label %land.lhs.true, label %return

land.lhs.true:                                    ; preds = %sw.bb49
  %cmp74 = icmp eq %union.tree_node* %call61, null
  %d2.0 = select i1 %cmp74, %union.tree_node* %d0.0, %union.tree_node* %call61
  %cmp80 = icmp eq %union.tree_node* %d0.0, %d2.0
  %. = select i1 %cmp80, %union.tree_node* %d0.0, %union.tree_node* null
  br label %return

return:                                           ; preds = %lor.lhs.false2, %sw.bb, %if.end, %if.end20, %entry, %sw.bb49, %land.lhs.true, %if.else44, %if.else, %sw.bb29
  %retval.0 = phi %union.tree_node* [ %call33, %sw.bb29 ], [ %call37, %if.else ], [ %call33., %if.else44 ], [ null, %sw.bb49 ], [ %., %land.lhs.true ], [ null, %entry ], [ null, %lor.lhs.false2 ], [ null, %sw.bb ], [ %t.tr114, %if.end ], [ null, %if.end20 ]
  ret %union.tree_node* %retval.0
}

; Function Attrs: nounwind uwtable
define i64 @new_alias_set() #0 {
entry:
  %0 = load i32* @flag_strict_aliasing, align 4, !tbaa !16
  %tobool = icmp eq i32 %0, 0
  br i1 %tobool, label %return, label %if.then

if.then:                                          ; preds = %entry
  %1 = load i64* @new_alias_set.last_alias_set, align 8, !tbaa !25
  %inc = add nsw i64 %1, 1
  store i64 %inc, i64* @new_alias_set.last_alias_set, align 8, !tbaa !25
  br label %return

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi i64 [ %inc, %if.then ], [ 0, %entry ]
  ret i64 %retval.0
}

; Function Attrs: nounwind uwtable
define void @record_alias_subset(i64 %superset, i64 %subset) #0 {
entry:
  %cmp = icmp eq i64 %superset, %subset
  br i1 %cmp, label %if.end26, label %if.end

if.end:                                           ; preds = %entry
  %cmp1 = icmp eq i64 %superset, 0
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([8 x i8]* @.str, i64 0, i64 0), i32 625, i8* getelementptr inbounds ([20 x i8]* @__FUNCTION__.record_alias_subset, i64 0, i64 0)) #7
  unreachable

if.end3:                                          ; preds = %if.end
  %0 = load %struct.splay_tree_s** @alias_sets, align 8, !tbaa !1
  %call.i = tail call %struct.splay_tree_node_s* @splay_tree_lookup(%struct.splay_tree_s* %0, i64 %superset) #4
  %cmp.i = icmp eq %struct.splay_tree_node_s* %call.i, null
  br i1 %cmp.i, label %if.then5, label %get_alias_set_entry.exit

get_alias_set_entry.exit:                         ; preds = %if.end3
  %value.i = getelementptr inbounds %struct.splay_tree_node_s* %call.i, i64 0, i32 1
  %1 = load i64* %value.i, align 8, !tbaa !5
  %2 = inttoptr i64 %1 to %struct.alias_set_entry*
  %cmp4 = icmp eq i64 %1, 0
  br i1 %cmp4, label %if.then5, label %if.end9

if.then5:                                         ; preds = %if.end3, %get_alias_set_entry.exit
  %call6 = tail call noalias i8* @xmalloc(i64 24) #4
  %3 = bitcast i8* %call6 to %struct.alias_set_entry*
  %alias_set = bitcast i8* %call6 to i64*
  store i64 %superset, i64* %alias_set, align 8, !tbaa !32
  %call7 = tail call %struct.splay_tree_s* @splay_tree_new(i32 (i64, i64)* @splay_tree_compare_ints, void (i64)* null, void (i64)* null) #4
  %children = getelementptr inbounds i8* %call6, i64 8
  %4 = bitcast i8* %children to %struct.splay_tree_s**
  store %struct.splay_tree_s* %call7, %struct.splay_tree_s** %4, align 8, !tbaa !12
  %has_zero_child = getelementptr inbounds i8* %call6, i64 16
  %5 = bitcast i8* %has_zero_child to i32*
  store i32 0, i32* %5, align 4, !tbaa !8
  %6 = load %struct.splay_tree_s** @alias_sets, align 8, !tbaa !1
  %7 = ptrtoint i8* %call6 to i64
  %call8 = tail call %struct.splay_tree_node_s* @splay_tree_insert(%struct.splay_tree_s* %6, i64 %superset, i64 %7) #4
  br label %if.end9

if.end9:                                          ; preds = %if.then5, %get_alias_set_entry.exit
  %superset_entry.0 = phi %struct.alias_set_entry* [ %3, %if.then5 ], [ %2, %get_alias_set_entry.exit ]
  %cmp10 = icmp eq i64 %subset, 0
  br i1 %cmp10, label %if.then11, label %if.else

if.then11:                                        ; preds = %if.end9
  %has_zero_child12 = getelementptr inbounds %struct.alias_set_entry* %superset_entry.0, i64 0, i32 2
  store i32 1, i32* %has_zero_child12, align 4, !tbaa !8
  br label %if.end26

if.else:                                          ; preds = %if.end9
  %8 = load %struct.splay_tree_s** @alias_sets, align 8, !tbaa !1
  %call.i44 = tail call %struct.splay_tree_node_s* @splay_tree_lookup(%struct.splay_tree_s* %8, i64 %subset) #4
  %cmp.i45 = icmp eq %struct.splay_tree_node_s* %call.i44, null
  br i1 %cmp.i45, label %if.end23, label %get_alias_set_entry.exit49

get_alias_set_entry.exit49:                       ; preds = %if.else
  %value.i46 = getelementptr inbounds %struct.splay_tree_node_s* %call.i44, i64 0, i32 1
  %9 = load i64* %value.i46, align 8, !tbaa !5
  %10 = inttoptr i64 %9 to %struct.alias_set_entry*
  %tobool = icmp eq i64 %9, 0
  br i1 %tobool, label %if.end23, label %if.then14

if.then14:                                        ; preds = %get_alias_set_entry.exit49
  %has_zero_child15 = getelementptr inbounds %struct.alias_set_entry* %10, i64 0, i32 2
  %11 = load i32* %has_zero_child15, align 4, !tbaa !8
  %tobool16 = icmp eq i32 %11, 0
  br i1 %tobool16, label %if.end19, label %if.then17

if.then17:                                        ; preds = %if.then14
  %has_zero_child18 = getelementptr inbounds %struct.alias_set_entry* %superset_entry.0, i64 0, i32 2
  store i32 1, i32* %has_zero_child18, align 4, !tbaa !8
  br label %if.end19

if.end19:                                         ; preds = %if.then14, %if.then17
  %children20 = getelementptr inbounds %struct.alias_set_entry* %10, i64 0, i32 1
  %12 = load %struct.splay_tree_s** %children20, align 8, !tbaa !12
  %children21 = getelementptr inbounds %struct.alias_set_entry* %superset_entry.0, i64 0, i32 1
  %13 = load %struct.splay_tree_s** %children21, align 8, !tbaa !12
  %14 = bitcast %struct.splay_tree_s* %13 to i8*
  %call22 = tail call i32 @splay_tree_foreach(%struct.splay_tree_s* %12, i32 (%struct.splay_tree_node_s*, i8*)* @insert_subset_children, i8* %14) #4
  br label %if.end23

if.end23:                                         ; preds = %if.else, %get_alias_set_entry.exit49, %if.end19
  %children24 = getelementptr inbounds %struct.alias_set_entry* %superset_entry.0, i64 0, i32 1
  %15 = load %struct.splay_tree_s** %children24, align 8, !tbaa !12
  %call25 = tail call %struct.splay_tree_node_s* @splay_tree_insert(%struct.splay_tree_s* %15, i64 %subset, i64 0) #4
  br label %if.end26

if.end26:                                         ; preds = %entry, %if.end23, %if.then11
  ret void
}

declare void @make_decl_rtl(%union.tree_node*, i8*) #1

; Function Attrs: nounwind uwtable
define void @record_component_aliases(%union.tree_node* %type) #0 {
entry:
  %call = tail call i64 @get_alias_set(%union.tree_node* %type)
  %cmp = icmp eq i64 %call, 0
  br i1 %cmp, label %sw.epilog, label %if.end

if.end:                                           ; preds = %entry
  %code = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  switch i32 %bf.clear, label %sw.epilog [
    i32 18, label %sw.bb
    i32 20, label %sw.bb9
    i32 21, label %sw.bb9
    i32 22, label %sw.bb9
    i32 8, label %sw.bb27
  ]

sw.bb:                                            ; preds = %if.end
  %type1 = bitcast %union.tree_node* %type to %struct.tree_type*
  %transparent_union_flag = getelementptr inbounds %struct.tree_type* %type1, i64 0, i32 6
  %bf.load2 = load i32* %transparent_union_flag, align 4
  %bf.clear3 = and i32 %bf.load2, 524288
  %tobool = icmp eq i32 %bf.clear3, 0
  br i1 %tobool, label %if.then4, label %sw.epilog

if.then4:                                         ; preds = %sw.bb
  %type6 = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 0, i32 1
  %0 = load %union.tree_node** %type6, align 8, !tbaa !13
  %call7 = tail call i64 @get_alias_set(%union.tree_node* %0)
  tail call void @record_alias_subset(i64 %call, i64 %call7)
  br label %sw.epilog

sw.bb9:                                           ; preds = %if.end, %if.end, %if.end
  %values = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 1
  %1 = load i8** %values, align 8
  %cmp1143 = icmp eq i8* %1, null
  br i1 %cmp1143, label %sw.epilog, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %sw.bb9
  %2 = bitcast i8* %1 to %union.tree_node*
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %field.044 = phi %union.tree_node* [ %2, %for.body.lr.ph ], [ %5, %for.inc ]
  %code13 = getelementptr inbounds %union.tree_node* %field.044, i64 0, i32 0, i32 0, i32 2
  %bf.load14 = load i32* %code13, align 8
  %bf.clear15 = and i32 %bf.load14, 255
  %cmp16 = icmp eq i32 %bf.clear15, 37
  br i1 %cmp16, label %land.lhs.true, label %for.inc

land.lhs.true:                                    ; preds = %for.body
  %non_addressable = getelementptr inbounds %union.tree_node* %field.044, i64 0, i32 0, i32 5
  %3 = bitcast i48* %non_addressable to i64*
  %bf.load17 = load i64* %3, align 8
  %bf.cast = and i64 %bf.load17, 17179869184
  %tobool20 = icmp eq i64 %bf.cast, 0
  br i1 %tobool20, label %if.then21, label %for.inc

if.then21:                                        ; preds = %land.lhs.true
  %type23 = getelementptr inbounds %union.tree_node* %field.044, i64 0, i32 0, i32 0, i32 1
  %4 = load %union.tree_node** %type23, align 8, !tbaa !13
  %call24 = tail call i64 @get_alias_set(%union.tree_node* %4)
  tail call void @record_alias_subset(i64 %call, i64 %call24)
  br label %for.inc

for.inc:                                          ; preds = %land.lhs.true, %for.body, %if.then21
  %chain = getelementptr inbounds %union.tree_node* %field.044, i64 0, i32 0, i32 0, i32 0
  %5 = load %union.tree_node** %chain, align 8, !tbaa !15
  %cmp11 = icmp eq %union.tree_node* %5, null
  br i1 %cmp11, label %sw.epilog, label %for.body

sw.bb27:                                          ; preds = %if.end
  %type29 = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 0, i32 1
  %6 = load %union.tree_node** %type29, align 8, !tbaa !13
  %call30 = tail call i64 @get_alias_set(%union.tree_node* %6)
  tail call void @record_alias_subset(i64 %call, i64 %call30)
  br label %sw.epilog

sw.epilog:                                        ; preds = %for.inc, %sw.bb9, %sw.bb, %if.end, %if.then4, %entry, %sw.bb27
  ret void
}

; Function Attrs: noreturn
declare void @fancy_abort(i8*, i32, i8*) #3

declare noalias i8* @xmalloc(i64) #1

declare %struct.splay_tree_s* @splay_tree_new(i32 (i64, i64)*, void (i64)*, void (i64)*) #1

declare i32 @splay_tree_compare_ints(i64, i64) #1

declare %struct.splay_tree_node_s* @splay_tree_insert(%struct.splay_tree_s*, i64, i64) #1

declare i32 @splay_tree_foreach(%struct.splay_tree_s*, i32 (%struct.splay_tree_node_s*, i8*)*, i8*) #1

; Function Attrs: nounwind uwtable
define internal i32 @insert_subset_children(%struct.splay_tree_node_s* nocapture readonly %node, i8* %data) #0 {
entry:
  %0 = bitcast i8* %data to %struct.splay_tree_s*
  %key = getelementptr inbounds %struct.splay_tree_node_s* %node, i64 0, i32 0
  %1 = load i64* %key, align 8, !tbaa !33
  %value = getelementptr inbounds %struct.splay_tree_node_s* %node, i64 0, i32 1
  %2 = load i64* %value, align 8, !tbaa !5
  %call = tail call %struct.splay_tree_node_s* @splay_tree_insert(%struct.splay_tree_s* %0, i64 %1, i64 %2) #4
  ret i32 0
}

; Function Attrs: nounwind uwtable
define i64 @get_varargs_alias_set() #0 {
entry:
  %0 = load i64* @get_varargs_alias_set.set, align 8, !tbaa !25
  %cmp = icmp eq i64 %0, -1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i32* @flag_strict_aliasing, align 4, !tbaa !16
  %tobool.i = icmp eq i32 %1, 0
  br i1 %tobool.i, label %new_alias_set.exit, label %if.then.i

if.then.i:                                        ; preds = %if.then
  %2 = load i64* @new_alias_set.last_alias_set, align 8, !tbaa !25
  %inc.i = add nsw i64 %2, 1
  store i64 %inc.i, i64* @new_alias_set.last_alias_set, align 8, !tbaa !25
  br label %new_alias_set.exit

new_alias_set.exit:                               ; preds = %if.then, %if.then.i
  %retval.0.i = phi i64 [ %inc.i, %if.then.i ], [ 0, %if.then ]
  store i64 %retval.0.i, i64* @get_varargs_alias_set.set, align 8, !tbaa !25
  br label %if.end

if.end:                                           ; preds = %new_alias_set.exit, %entry
  %3 = phi i64 [ %retval.0.i, %new_alias_set.exit ], [ %0, %entry ]
  ret i64 %3
}

; Function Attrs: nounwind uwtable
define i64 @get_frame_alias_set() #0 {
entry:
  %0 = load i64* @get_frame_alias_set.set, align 8, !tbaa !25
  %cmp = icmp eq i64 %0, -1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i32* @flag_strict_aliasing, align 4, !tbaa !16
  %tobool.i = icmp eq i32 %1, 0
  br i1 %tobool.i, label %new_alias_set.exit, label %if.then.i

if.then.i:                                        ; preds = %if.then
  %2 = load i64* @new_alias_set.last_alias_set, align 8, !tbaa !25
  %inc.i = add nsw i64 %2, 1
  store i64 %inc.i, i64* @new_alias_set.last_alias_set, align 8, !tbaa !25
  br label %new_alias_set.exit

new_alias_set.exit:                               ; preds = %if.then, %if.then.i
  %retval.0.i = phi i64 [ %inc.i, %if.then.i ], [ 0, %if.then ]
  store i64 %retval.0.i, i64* @get_frame_alias_set.set, align 8, !tbaa !25
  br label %if.end

if.end:                                           ; preds = %new_alias_set.exit, %entry
  %3 = phi i64 [ %retval.0.i, %new_alias_set.exit ], [ %0, %entry ]
  ret i64 %3
}

; Function Attrs: nounwind uwtable
define void @record_base_value(i32 %regno, %struct.rtx_def* %val, i32 %invariant) #0 {
entry:
  %0 = load i32* @reg_base_value_size, align 4, !tbaa !16
  %cmp = icmp ugt i32 %0, %regno
  br i1 %cmp, label %if.end, label %return

if.end:                                           ; preds = %entry
  %tobool = icmp ne i32 %invariant, 0
  %1 = load %struct.rtx_def*** @alias_invariant, align 8
  %tobool1 = icmp ne %struct.rtx_def** %1, null
  %or.cond = and i1 %tobool, %tobool1
  br i1 %or.cond, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  %idxprom = zext i32 %regno to i64
  %arrayidx = getelementptr inbounds %struct.rtx_def** %1, i64 %idxprom
  store %struct.rtx_def* %val, %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  br label %if.end3

if.end3:                                          ; preds = %if.then2, %if.end
  %2 = getelementptr inbounds %struct.rtx_def* %val, i64 0, i32 0
  %bf.load = load i32* %2, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp4 = icmp eq i32 %bf.clear, 61
  br i1 %cmp4, label %if.then5, label %if.end17

if.then5:                                         ; preds = %if.end3
  %arrayidx6 = getelementptr inbounds %struct.rtx_def* %val, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx6 to i32*
  %3 = load i32* %rtuint, align 4, !tbaa !16
  %cmp7 = icmp ult i32 %3, %0
  br i1 %cmp7, label %if.then8, label %return

if.then8:                                         ; preds = %if.then5
  %idxprom12 = zext i32 %3 to i64
  %4 = load %struct.rtx_def*** @reg_base_value, align 8, !tbaa !1
  %arrayidx13 = getelementptr inbounds %struct.rtx_def** %4, i64 %idxprom12
  %5 = load %struct.rtx_def** %arrayidx13, align 8, !tbaa !1
  %idxprom14 = zext i32 %regno to i64
  %arrayidx15 = getelementptr inbounds %struct.rtx_def** %4, i64 %idxprom14
  store %struct.rtx_def* %5, %struct.rtx_def** %arrayidx15, align 8, !tbaa !1
  br label %return

if.end17:                                         ; preds = %if.end3
  %call = tail call fastcc %struct.rtx_def* @find_base_value(%struct.rtx_def* %val)
  %idxprom18 = zext i32 %regno to i64
  %6 = load %struct.rtx_def*** @reg_base_value, align 8, !tbaa !1
  %arrayidx19 = getelementptr inbounds %struct.rtx_def** %6, i64 %idxprom18
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx19, align 8, !tbaa !1
  br label %return

return:                                           ; preds = %entry, %if.then5, %if.then8, %if.end17
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @find_base_value(%struct.rtx_def* %src) #0 {
entry:
  br label %tailrecurse

tailrecurse:                                      ; preds = %switch.early.test, %switch.early.test, %switch.early.test, %switch.early.test, %switch.early.test, %switch.early.test, %switch.early.test, %if.end158, %lor.lhs.false163, %lor.lhs.false173, %lor.lhs.false173, %lor.lhs.false173, %lor.lhs.false173, %lor.lhs.false173, %lor.lhs.false173, %if.end75, %sw.bb59, %sw.bb300, %sw.bb295, %if.then274, %sw.bb253, %entry
  %src.tr = phi %struct.rtx_def* [ %src, %entry ], [ %25, %sw.bb253 ], [ %29, %if.then274 ], [ %35, %sw.bb295 ], [ %36, %sw.bb300 ], [ %14, %sw.bb59 ], [ %15, %if.end75 ], [ %src_0.0, %lor.lhs.false173 ], [ %src_0.0, %lor.lhs.false173 ], [ %src_0.0, %lor.lhs.false173 ], [ %src_0.0, %lor.lhs.false173 ], [ %src_0.0, %lor.lhs.false173 ], [ %src_0.0, %lor.lhs.false173 ], [ %src_0.0, %lor.lhs.false163 ], [ %src_0.0, %if.end158 ], [ %src_1.0, %switch.early.test ], [ %src_1.0, %switch.early.test ], [ %src_1.0, %switch.early.test ], [ %src_1.0, %switch.early.test ], [ %src_1.0, %switch.early.test ], [ %src_1.0, %switch.early.test ], [ %src_1.0, %switch.early.test ]
  %0 = getelementptr inbounds %struct.rtx_def* %src.tr, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %return.loopexit403 [
    i32 68, label %return
    i32 67, label %return
    i32 61, label %sw.bb1
    i32 66, label %sw.bb18
    i32 58, label %sw.bb44
    i32 75, label %sw.bb59
    i32 76, label %sw.bb59
    i32 135, label %sw.bb253
    i32 83, label %sw.bb258
    i32 122, label %sw.bb280
    i32 134, label %sw.bb295
    i32 97, label %sw.bb295
    i32 96, label %sw.bb295
    i32 99, label %sw.bb295
    i32 98, label %sw.bb295
    i32 100, label %sw.bb295
    i32 101, label %sw.bb295
    i32 121, label %sw.bb300
    i32 120, label %sw.bb300
  ]

sw.bb1:                                           ; preds = %tailrecurse
  %arrayidx = getelementptr inbounds %struct.rtx_def* %src.tr, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %1 = load i32* %rtuint, align 4, !tbaa !16
  %cmp = icmp ult i32 %1, 53
  %.b = load i1* @copying_arguments, align 1
  %or.cond = and i1 %cmp, %.b
  br i1 %or.cond, label %if.then, label %if.end

if.then:                                          ; preds = %sw.bb1
  %idxprom = zext i32 %1 to i64
  %2 = load %struct.rtx_def*** @new_reg_base_value, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %2, i64 %idxprom
  %3 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  br label %return

if.end:                                           ; preds = %sw.bb1
  %cmp3 = icmp ugt i32 %1, 52
  br i1 %cmp3, label %land.lhs.true7, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %idxprom4 = zext i32 %1 to i64
  %arrayidx5 = getelementptr inbounds [53 x i8]* @fixed_regs, i64 0, i64 %idxprom4
  %4 = load i8* %arrayidx5, align 1, !tbaa !17
  %tobool6 = icmp ne i8 %4, 0
  %5 = load i32* @reg_base_value_size, align 4
  %cmp8 = icmp ult i32 %1, %5
  %or.cond376 = and i1 %tobool6, %cmp8
  br i1 %or.cond376, label %land.lhs.true10, label %if.end17

land.lhs.true7:                                   ; preds = %if.end
  %.old = load i32* @reg_base_value_size, align 4, !tbaa !16
  %cmp8.old = icmp ult i32 %1, %.old
  br i1 %cmp8.old, label %land.lhs.true7.land.lhs.true10_crit_edge, label %if.end17

land.lhs.true7.land.lhs.true10_crit_edge:         ; preds = %land.lhs.true7
  %idxprom11.pre = zext i32 %1 to i64
  br label %land.lhs.true10

land.lhs.true10:                                  ; preds = %land.lhs.true7.land.lhs.true10_crit_edge, %lor.lhs.false
  %idxprom11.pre-phi = phi i64 [ %idxprom11.pre, %land.lhs.true7.land.lhs.true10_crit_edge ], [ %idxprom4, %lor.lhs.false ]
  %6 = load %struct.rtx_def*** @reg_base_value, align 8, !tbaa !1
  %arrayidx12 = getelementptr inbounds %struct.rtx_def** %6, i64 %idxprom11.pre-phi
  %7 = load %struct.rtx_def** %arrayidx12, align 8, !tbaa !1
  %tobool13 = icmp eq %struct.rtx_def* %7, null
  br i1 %tobool13, label %if.end17, label %return

if.end17:                                         ; preds = %lor.lhs.false, %land.lhs.true10, %land.lhs.true7
  br label %return

sw.bb18:                                          ; preds = %tailrecurse
  %.b373 = load i1* @copying_arguments, align 1
  br i1 %.b373, label %land.lhs.true20, label %return

land.lhs.true20:                                  ; preds = %sw.bb18
  %arrayidx22 = getelementptr inbounds %struct.rtx_def* %src.tr, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx22 to %struct.rtx_def**
  %8 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %9 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 5), align 8, !tbaa !1
  %cmp23 = icmp eq %struct.rtx_def* %8, %9
  br i1 %cmp23, label %if.then42, label %lor.lhs.false25

lor.lhs.false25:                                  ; preds = %land.lhs.true20
  %10 = getelementptr inbounds %struct.rtx_def* %8, i64 0, i32 0
  %bf.load29 = load i32* %10, align 8
  %bf.clear30 = and i32 %bf.load29, 65535
  %cmp31 = icmp eq i32 %bf.clear30, 75
  br i1 %cmp31, label %land.lhs.true33, label %return

land.lhs.true33:                                  ; preds = %lor.lhs.false25
  %arrayidx38 = getelementptr inbounds %struct.rtx_def* %8, i64 0, i32 1, i64 0
  %rtx39 = bitcast %union.rtunion_def* %arrayidx38 to %struct.rtx_def**
  %11 = load %struct.rtx_def** %rtx39, align 8, !tbaa !1
  %cmp40 = icmp eq %struct.rtx_def* %11, %9
  br i1 %cmp40, label %if.then42, label %return

if.then42:                                        ; preds = %land.lhs.true33, %land.lhs.true20
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 25, i32 0, %struct.rtx_def* %src.tr) #4
  br label %return

sw.bb44:                                          ; preds = %tailrecurse
  %arrayidx46 = getelementptr inbounds %struct.rtx_def* %src.tr, i64 0, i32 1, i64 0
  %rtx47 = bitcast %union.rtunion_def* %arrayidx46 to %struct.rtx_def**
  %12 = load %struct.rtx_def** %rtx47, align 8, !tbaa !1
  %13 = getelementptr inbounds %struct.rtx_def* %12, i64 0, i32 0
  %bf.load48 = load i32* %13, align 8
  %bf.clear49 = and i32 %bf.load48, 65535
  %bf.clear49.off = add i32 %bf.clear49, -75
  %switch = icmp ult i32 %bf.clear49.off, 2
  br i1 %switch, label %sw.bb59, label %return.loopexit403

sw.bb59:                                          ; preds = %sw.bb44, %tailrecurse, %tailrecurse
  %src.addr.0 = phi %struct.rtx_def* [ %src.tr, %tailrecurse ], [ %src.tr, %tailrecurse ], [ %12, %sw.bb44 ]
  %fld60 = getelementptr inbounds %struct.rtx_def* %src.addr.0, i64 0, i32 1
  %rtx62 = bitcast [1 x %union.rtunion_def]* %fld60 to %struct.rtx_def**
  %14 = load %struct.rtx_def** %rtx62, align 8, !tbaa !1
  %arrayidx64 = getelementptr inbounds %struct.rtx_def* %src.addr.0, i64 0, i32 1, i64 1
  %rtx65 = bitcast %union.rtunion_def* %arrayidx64 to %struct.rtx_def**
  %15 = load %struct.rtx_def** %rtx65, align 8, !tbaa !1
  %16 = getelementptr inbounds %struct.rtx_def* %14, i64 0, i32 0
  %bf.load66 = load i32* %16, align 8
  %bf.clear67 = and i32 %bf.load66, 65535
  %cmp68 = icmp eq i32 %bf.clear67, 61
  %17 = and i32 %bf.load66, -2147418113
  %18 = icmp eq i32 %17, -2147483587
  br i1 %18, label %tailrecurse, label %if.end75

if.end75:                                         ; preds = %sw.bb59
  %19 = getelementptr inbounds %struct.rtx_def* %15, i64 0, i32 0
  %bf.load76 = load i32* %19, align 8
  %20 = and i32 %bf.load76, -2147418113
  %21 = icmp eq i32 %20, -2147483587
  br i1 %21, label %tailrecurse, label %if.end86

if.end86:                                         ; preds = %if.end75
  br i1 %cmp68, label %if.then91, label %if.end97

if.then91:                                        ; preds = %if.end86
  %call92 = tail call fastcc %struct.rtx_def* @find_base_value(%struct.rtx_def* %14)
  %cmp93 = icmp eq %struct.rtx_def* %call92, null
  %.call92 = select i1 %cmp93, %struct.rtx_def* %14, %struct.rtx_def* %call92
  %bf.load98.pre = load i32* %19, align 8
  br label %if.end97

if.end97:                                         ; preds = %if.then91, %if.end86
  %bf.load98 = phi i32 [ %bf.load76, %if.end86 ], [ %bf.load98.pre, %if.then91 ]
  %src_0.0 = phi %struct.rtx_def* [ %14, %if.end86 ], [ %.call92, %if.then91 ]
  %bf.clear99 = and i32 %bf.load98, 65535
  %cmp100 = icmp eq i32 %bf.clear99, 61
  br i1 %cmp100, label %if.then102, label %if.end108

if.then102:                                       ; preds = %if.end97
  %call103 = tail call fastcc %struct.rtx_def* @find_base_value(%struct.rtx_def* %15)
  %cmp104 = icmp eq %struct.rtx_def* %call103, null
  %.call103 = select i1 %cmp104, %struct.rtx_def* %15, %struct.rtx_def* %call103
  br label %if.end108

if.end108:                                        ; preds = %if.then102, %if.end97
  %src_1.0 = phi %struct.rtx_def* [ %15, %if.end97 ], [ %.call103, %if.then102 ]
  %cmp109 = icmp eq %struct.rtx_def* %src_0.0, null
  br i1 %cmp109, label %if.end133, label %land.lhs.true111

land.lhs.true111:                                 ; preds = %if.end108
  %22 = getelementptr inbounds %struct.rtx_def* %src_0.0, i64 0, i32 0
  %bf.load112 = load i32* %22, align 8
  %bf.clear113 = and i32 %bf.load112, 65535
  switch i32 %bf.clear113, label %if.end133 [
    i32 68, label %return
    i32 67, label %return
    i32 25, label %land.lhs.true126
  ]

land.lhs.true126:                                 ; preds = %land.lhs.true111
  %bf.clear129 = and i32 %bf.load112, 16711680
  %cmp130 = icmp eq i32 %bf.clear129, 0
  br i1 %cmp130, label %if.end133, label %return

if.end133:                                        ; preds = %land.lhs.true111, %land.lhs.true126, %if.end108
  %cmp134 = icmp eq %struct.rtx_def* %src_1.0, null
  br i1 %cmp134, label %lor.lhs.false163, label %land.lhs.true136

land.lhs.true136:                                 ; preds = %if.end133
  %23 = getelementptr inbounds %struct.rtx_def* %src_1.0, i64 0, i32 0
  %bf.load137 = load i32* %23, align 8
  %bf.clear138 = and i32 %bf.load137, 65535
  switch i32 %bf.clear138, label %if.end158 [
    i32 68, label %return
    i32 67, label %return
    i32 25, label %land.lhs.true151
  ]

land.lhs.true151:                                 ; preds = %land.lhs.true136
  %bf.clear154 = and i32 %bf.load137, 16711680
  %cmp155 = icmp eq i32 %bf.clear154, 0
  br i1 %cmp155, label %if.end158, label %return

if.end158:                                        ; preds = %land.lhs.true136, %land.lhs.true151
  %bf.clear160 = and i32 %bf.load137, 65535
  %cmp161 = icmp eq i32 %bf.clear160, 54
  br i1 %cmp161, label %tailrecurse, label %lor.lhs.false163

lor.lhs.false163:                                 ; preds = %if.end133, %if.end158
  %bf.clear160402 = phi i32 [ %bf.clear160, %if.end158 ], [ 0, %if.end133 ]
  %24 = getelementptr inbounds %struct.rtx_def* %src_0.0, i64 0, i32 0
  %bf.load164 = load i32* %24, align 8
  %bf.clear165 = and i32 %bf.load164, 65535
  %bf.clear165.off = add i32 %bf.clear165, -67
  %switch391 = icmp ult i32 %bf.clear165.off, 2
  br i1 %switch391, label %tailrecurse, label %lor.lhs.false173

lor.lhs.false173:                                 ; preds = %lor.lhs.false163
  switch i32 %bf.clear165, label %switch.early.test [
    i32 140, label %tailrecurse
    i32 134, label %tailrecurse
    i32 58, label %tailrecurse
    i32 56, label %tailrecurse
    i32 55, label %tailrecurse
    i32 54, label %tailrecurse
  ]

switch.early.test:                                ; preds = %lor.lhs.false173
  switch i32 %bf.clear160402, label %return [
    i32 140, label %tailrecurse
    i32 134, label %tailrecurse
    i32 68, label %tailrecurse
    i32 67, label %tailrecurse
    i32 58, label %tailrecurse
    i32 56, label %tailrecurse
    i32 55, label %tailrecurse
  ]

sw.bb253:                                         ; preds = %tailrecurse
  %arrayidx255 = getelementptr inbounds %struct.rtx_def* %src.tr, i64 0, i32 1, i64 1
  %rtx256 = bitcast %union.rtunion_def* %arrayidx255 to %struct.rtx_def**
  %25 = load %struct.rtx_def** %rtx256, align 8, !tbaa !1
  br label %tailrecurse

sw.bb258:                                         ; preds = %tailrecurse
  %arrayidx260 = getelementptr inbounds %struct.rtx_def* %src.tr, i64 0, i32 1, i64 1
  %rtx261 = bitcast %union.rtunion_def* %arrayidx260 to %struct.rtx_def**
  %26 = load %struct.rtx_def** %rtx261, align 8, !tbaa !1
  %27 = getelementptr inbounds %struct.rtx_def* %26, i64 0, i32 0
  %bf.load262 = load i32* %27, align 8
  %bf.clear263 = and i32 %bf.load262, 65535
  %cmp264 = icmp eq i32 %bf.clear263, 54
  br i1 %cmp264, label %land.lhs.true266, label %return

land.lhs.true266:                                 ; preds = %sw.bb258
  %rtwint = getelementptr inbounds %struct.rtx_def* %26, i64 0, i32 1, i64 0, i32 0
  %28 = load i64* %rtwint, align 8, !tbaa !25
  %cmp272 = icmp eq i64 %28, 0
  br i1 %cmp272, label %return, label %if.then274

if.then274:                                       ; preds = %land.lhs.true266
  %arrayidx276 = getelementptr inbounds %struct.rtx_def* %src.tr, i64 0, i32 1, i64 0
  %rtx277 = bitcast %union.rtunion_def* %arrayidx276 to %struct.rtx_def**
  %29 = load %struct.rtx_def** %rtx277, align 8, !tbaa !1
  br label %tailrecurse

sw.bb280:                                         ; preds = %tailrecurse
  %bf.lshr282 = lshr i32 %bf.load, 16
  %bf.clear283 = and i32 %bf.lshr282, 255
  %idxprom284374 = zext i32 %bf.clear283 to i64
  %arrayidx285 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom284374
  %30 = load i8* %arrayidx285, align 1, !tbaa !17
  %31 = load i32* @target_flags, align 4, !tbaa !16
  %and = lshr i32 %31, 25
  %32 = and i32 %and, 1
  %33 = or i32 %32, 4
  %idxprom288375 = zext i32 %33 to i64
  %arrayidx289 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom288375
  %34 = load i8* %arrayidx289, align 1, !tbaa !17
  %cmp291 = icmp ult i8 %30, %34
  br i1 %cmp291, label %return.loopexit403, label %sw.bb295

sw.bb295:                                         ; preds = %sw.bb280, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse
  %arrayidx297 = getelementptr inbounds %struct.rtx_def* %src.tr, i64 0, i32 1, i64 0
  %rtx298 = bitcast %union.rtunion_def* %arrayidx297 to %struct.rtx_def**
  %35 = load %struct.rtx_def** %rtx298, align 8, !tbaa !1
  br label %tailrecurse

sw.bb300:                                         ; preds = %tailrecurse, %tailrecurse
  %arrayidx303 = getelementptr inbounds %struct.rtx_def* %src.tr, i64 0, i32 1, i64 0
  %rtx304 = bitcast %union.rtunion_def* %arrayidx303 to %struct.rtx_def**
  %36 = load %struct.rtx_def** %rtx304, align 8, !tbaa !1
  br label %tailrecurse

return.loopexit403:                               ; preds = %sw.bb44, %tailrecurse, %sw.bb280
  br label %return

return:                                           ; preds = %sw.bb258, %land.lhs.true266, %land.lhs.true151, %land.lhs.true136, %land.lhs.true136, %land.lhs.true126, %land.lhs.true111, %land.lhs.true111, %tailrecurse, %tailrecurse, %switch.early.test, %return.loopexit403, %sw.bb18, %lor.lhs.false25, %land.lhs.true33, %land.lhs.true10, %if.then42, %if.end17, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call, %if.then42 ], [ %3, %if.then ], [ %src.tr, %if.end17 ], [ %7, %land.lhs.true10 ], [ null, %land.lhs.true33 ], [ null, %lor.lhs.false25 ], [ null, %sw.bb18 ], [ null, %return.loopexit403 ], [ null, %sw.bb258 ], [ null, %land.lhs.true266 ], [ null, %switch.early.test ], [ %src_1.0, %land.lhs.true151 ], [ %src_1.0, %land.lhs.true136 ], [ %src_1.0, %land.lhs.true136 ], [ %src_0.0, %land.lhs.true126 ], [ %src_0.0, %land.lhs.true111 ], [ %src_0.0, %land.lhs.true111 ], [ %src.tr, %tailrecurse ], [ %src.tr, %tailrecurse ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define void @clear_reg_alias_info(%struct.rtx_def* %reg) #0 {
entry:
  %arrayidx = getelementptr inbounds %struct.rtx_def* %reg, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %0 = load i32* %rtuint, align 4, !tbaa !16
  %1 = load i32* @reg_known_value_size, align 4, !tbaa !16
  %cmp = icmp ult i32 %0, %1
  %cmp1 = icmp ugt i32 %0, 52
  %or.cond = and i1 %cmp, %cmp1
  br i1 %or.cond, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %idxprom = zext i32 %0 to i64
  %2 = load %struct.rtx_def*** @reg_known_value, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %2, i64 %idxprom
  store %struct.rtx_def* %reg, %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @canon_rtx(%struct.rtx_def* %x) #0 {
entry:
  %0 = load i32* @reg_known_value_size, align 4
  %1 = load %struct.rtx_def*** @reg_known_value, align 8, !tbaa !1
  br label %tailrecurse

tailrecurse:                                      ; preds = %if.then, %entry
  %x.tr = phi %struct.rtx_def* [ %x, %entry ], [ %4, %if.then ]
  %2 = getelementptr inbounds %struct.rtx_def* %x.tr, i64 0, i32 0
  %bf.load = load i32* %2, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %return [
    i32 61, label %land.lhs.true
    i32 75, label %if.then20
    i32 66, label %if.then62
  ]

land.lhs.true:                                    ; preds = %tailrecurse
  %arrayidx = getelementptr inbounds %struct.rtx_def* %x.tr, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %3 = load i32* %rtuint, align 4, !tbaa !16
  %cmp1 = icmp ugt i32 %3, 52
  %cmp6 = icmp ult i32 %3, %0
  %or.cond = and i1 %cmp1, %cmp6
  br i1 %or.cond, label %if.then, label %return

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %3 to i64
  %arrayidx10 = getelementptr inbounds %struct.rtx_def** %1, i64 %idxprom
  %4 = load %struct.rtx_def** %arrayidx10, align 8, !tbaa !1
  %cmp11 = icmp eq %struct.rtx_def* %4, %x.tr
  br i1 %cmp11, label %return, label %tailrecurse

if.then20:                                        ; preds = %tailrecurse
  %fld21 = getelementptr inbounds %struct.rtx_def* %x.tr, i64 0, i32 1
  %rtx = bitcast [1 x %union.rtunion_def]* %fld21 to %struct.rtx_def**
  %5 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %call23 = tail call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %5)
  %arrayidx25 = getelementptr inbounds %struct.rtx_def* %x.tr, i64 0, i32 1, i64 1
  %rtx26 = bitcast %union.rtunion_def* %arrayidx25 to %struct.rtx_def**
  %6 = load %struct.rtx_def** %rtx26, align 8, !tbaa !1
  %call27 = tail call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %6)
  %7 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %cmp31 = icmp eq %struct.rtx_def* %call23, %7
  br i1 %cmp31, label %lor.lhs.false, label %if.then36

lor.lhs.false:                                    ; preds = %if.then20
  %8 = load %struct.rtx_def** %rtx26, align 8, !tbaa !1
  %cmp35 = icmp eq %struct.rtx_def* %call27, %8
  br i1 %cmp35, label %return, label %if.then36

if.then36:                                        ; preds = %lor.lhs.false, %if.then20
  %9 = getelementptr inbounds %struct.rtx_def* %call23, i64 0, i32 0
  %bf.load37 = load i32* %9, align 8
  %bf.clear38 = and i32 %bf.load37, 65535
  %cmp39 = icmp eq i32 %bf.clear38, 54
  br i1 %cmp39, label %if.then40, label %if.else44

if.then40:                                        ; preds = %if.then36
  %rtwint = getelementptr inbounds %struct.rtx_def* %call23, i64 0, i32 1, i64 0, i32 0
  %10 = load i64* %rtwint, align 8, !tbaa !25
  %call43 = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %call27, i64 %10) #4
  br label %return

if.else44:                                        ; preds = %if.then36
  %11 = getelementptr inbounds %struct.rtx_def* %call27, i64 0, i32 0
  %bf.load45 = load i32* %11, align 8
  %bf.clear46 = and i32 %bf.load45, 65535
  %cmp47 = icmp eq i32 %bf.clear46, 54
  br i1 %cmp47, label %if.then48, label %if.end53

if.then48:                                        ; preds = %if.else44
  %rtwint51 = getelementptr inbounds %struct.rtx_def* %call27, i64 0, i32 1, i64 0, i32 0
  %12 = load i64* %rtwint51, align 8, !tbaa !25
  %call52 = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %call23, i64 %12) #4
  br label %return

if.end53:                                         ; preds = %if.else44
  %bf.load54 = load i32* %2, align 8
  %bf.lshr = lshr i32 %bf.load54, 16
  %bf.clear55 = and i32 %bf.lshr, 255
  %call56 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %bf.clear55, %struct.rtx_def* %call23, %struct.rtx_def* %call27) #4
  br label %return

if.then62:                                        ; preds = %tailrecurse
  %arrayidx64 = getelementptr inbounds %struct.rtx_def* %x.tr, i64 0, i32 1, i64 0
  %rtx65 = bitcast %union.rtunion_def* %arrayidx64 to %struct.rtx_def**
  %13 = load %struct.rtx_def** %rtx65, align 8, !tbaa !1
  %call66 = tail call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %13)
  %call67 = tail call %struct.rtx_def* @replace_equiv_address_nv(%struct.rtx_def* %x.tr, %struct.rtx_def* %call66) #4
  ret %struct.rtx_def* %call67

return:                                           ; preds = %tailrecurse, %land.lhs.true, %if.then, %lor.lhs.false, %if.end53, %if.then48, %if.then40
  %retval.0 = phi %struct.rtx_def* [ %call43, %if.then40 ], [ %call52, %if.then48 ], [ %call56, %if.end53 ], [ %x.tr, %lor.lhs.false ], [ %x.tr, %if.then ], [ %x.tr, %land.lhs.true ], [ %x.tr, %tailrecurse ]
  ret %struct.rtx_def* %retval.0
}

declare %struct.rtx_def* @plus_constant_wide(%struct.rtx_def*, i64) #1

declare %struct.rtx_def* @gen_rtx_fmt_ee(i32, i32, %struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @replace_equiv_address_nv(%struct.rtx_def*, %struct.rtx_def*) #1

; Function Attrs: nounwind readonly uwtable
define %struct.rtx_def* @get_addr(%struct.rtx_def* readonly %x) #2 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 60
  br i1 %cmp, label %if.end, label %return

if.end:                                           ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rt_cselib = bitcast %union.rtunion_def* %arrayidx to %struct.cselib_val_struct**
  %1 = load %struct.cselib_val_struct** %rt_cselib, align 8, !tbaa !1
  %locs = getelementptr inbounds %struct.cselib_val_struct* %1, i64 0, i32 2
  %l.088 = load %struct.elt_loc_list** %locs, align 8
  %tobool89 = icmp eq %struct.elt_loc_list* %l.088, null
  br i1 %tobool89, label %return, label %for.body

for.cond42.preheader:                             ; preds = %for.inc
  br i1 %tobool89, label %return, label %for.body44

for.body:                                         ; preds = %if.end, %for.inc
  %l.090 = phi %struct.elt_loc_list* [ %l.0, %for.inc ], [ %l.088, %if.end ]
  %loc = getelementptr inbounds %struct.elt_loc_list* %l.090, i64 0, i32 1
  %2 = load %struct.rtx_def** %loc, align 8, !tbaa !34
  %3 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 0
  %bf.load1 = load i32* %3, align 8
  %bf.clear2 = and i32 %bf.load1, 65535
  switch i32 %bf.clear2, label %for.inc [
    i32 67, label %return
    i32 68, label %return
    i32 54, label %return
    i32 55, label %return
    i32 58, label %return
    i32 134, label %return
    i32 56, label %return
    i32 140, label %return
  ]

for.inc:                                          ; preds = %for.body
  %next = getelementptr inbounds %struct.elt_loc_list* %l.090, i64 0, i32 0
  %l.0 = load %struct.elt_loc_list** %next, align 8
  %tobool = icmp eq %struct.elt_loc_list* %l.0, null
  br i1 %tobool, label %for.cond42.preheader, label %for.body

for.body44:                                       ; preds = %for.cond42.preheader, %for.inc56
  %l.187 = phi %struct.elt_loc_list* [ %l.1, %for.inc56 ], [ %l.088, %for.cond42.preheader ]
  %loc45 = getelementptr inbounds %struct.elt_loc_list* %l.187, i64 0, i32 1
  %4 = load %struct.rtx_def** %loc45, align 8, !tbaa !34
  %5 = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 0
  %bf.load46 = load i32* %5, align 8
  %bf.clear47 = and i32 %bf.load46, 65535
  switch i32 %bf.clear47, label %return [
    i32 61, label %for.inc56
    i32 66, label %for.inc56
  ]

for.inc56:                                        ; preds = %for.body44, %for.body44
  %next57 = getelementptr inbounds %struct.elt_loc_list* %l.187, i64 0, i32 0
  %l.1 = load %struct.elt_loc_list** %next57, align 8
  %tobool43 = icmp eq %struct.elt_loc_list* %l.1, null
  br i1 %tobool43, label %for.end58, label %for.body44

for.end58:                                        ; preds = %for.inc56
  br i1 %tobool89, label %return, label %if.then61

if.then61:                                        ; preds = %for.end58
  %loc63 = getelementptr inbounds %struct.elt_loc_list* %l.088, i64 0, i32 1
  %6 = load %struct.rtx_def** %loc63, align 8, !tbaa !34
  br label %return

return:                                           ; preds = %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body44, %if.end, %for.cond42.preheader, %for.end58, %entry, %if.then61
  %retval.0 = phi %struct.rtx_def* [ %6, %if.then61 ], [ %x, %entry ], [ %x, %for.end58 ], [ %x, %for.cond42.preheader ], [ %x, %if.end ], [ %4, %for.body44 ], [ %2, %for.body ], [ %2, %for.body ], [ %2, %for.body ], [ %2, %for.body ], [ %2, %for.body ], [ %2, %for.body ], [ %2, %for.body ], [ %2, %for.body ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @addr_side_effect_eval(%struct.rtx_def* readonly %addr, i32 %size, i32 %n_refs) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %addr, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %return [
    i32 97, label %sw.bb
    i32 96, label %sw.bb1
    i32 99, label %sw.epilog
    i32 98, label %sw.bb6
  ]

sw.bb:                                            ; preds = %entry
  %add = add nsw i32 %n_refs, 1
  br label %sw.epilog

sw.bb1:                                           ; preds = %entry
  %sub = xor i32 %n_refs, -1
  br label %sw.epilog

sw.bb6:                                           ; preds = %entry
  %sub7 = sub nsw i32 0, %n_refs
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %sw.bb6, %sw.bb1, %sw.bb
  %sub7.pn = phi i32 [ %sub7, %sw.bb6 ], [ %sub, %sw.bb1 ], [ %add, %sw.bb ], [ %n_refs, %entry ]
  %offset.0 = mul nsw i32 %sub7.pn, %size
  %tobool = icmp eq i32 %offset.0, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %sw.epilog
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear10 = and i32 %bf.lshr, 255
  %arrayidx = getelementptr inbounds %struct.rtx_def* %addr, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %conv = sext i32 %offset.0 to i64
  %call = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv) #4
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %bf.clear10, %struct.rtx_def* %1, %struct.rtx_def* %call) #4
  br label %return

if.else:                                          ; preds = %sw.epilog
  %arrayidx13 = getelementptr inbounds %struct.rtx_def* %addr, i64 0, i32 1, i64 0
  %rtx14 = bitcast %union.rtunion_def* %arrayidx13 to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx14, align 8, !tbaa !1
  br label %return

return:                                           ; preds = %if.then, %if.else, %entry
  %retval.0 = phi %struct.rtx_def* [ %addr, %entry ], [ %call11, %if.then ], [ %2, %if.else ]
  ret %struct.rtx_def* %retval.0
}

declare %struct.rtx_def* @gen_rtx_CONST_INT(i32, i64) #1

; Function Attrs: nounwind readonly uwtable
define i32 @read_dependence(%struct.rtx_def* nocapture readonly %mem, %struct.rtx_def* nocapture readonly %x) #2 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 134217728
  %tobool = icmp eq i32 %bf.clear, 0
  br i1 %tobool, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %entry
  %1 = getelementptr inbounds %struct.rtx_def* %mem, i64 0, i32 0
  %bf.load1 = load i32* %1, align 8
  %bf.clear3 = and i32 %bf.load1, 134217728
  %tobool4 = icmp ne i32 %bf.clear3, 0
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %2 = phi i1 [ false, %entry ], [ %tobool4, %land.rhs ]
  %land.ext = zext i1 %2 to i32
  ret i32 %land.ext
}

; Function Attrs: nounwind uwtable
define i32 @true_dependence(%struct.rtx_def* readonly %mem, i32 %mem_mode, %struct.rtx_def* readonly %x, i32 (%struct.rtx_def*, i32)* nocapture %varies) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 134217728
  %tobool = icmp eq i32 %bf.clear, 0
  br i1 %tobool, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %1 = getelementptr inbounds %struct.rtx_def* %mem, i64 0, i32 0
  %bf.load1 = load i32* %1, align 8
  %bf.clear3 = and i32 %bf.load1, 134217728
  %tobool4 = icmp eq i32 %bf.clear3, 0
  br i1 %tobool4, label %if.end, label %return

if.end:                                           ; preds = %land.lhs.true, %entry
  %bf.clear7 = and i32 %bf.load, 16711680
  %cmp = icmp eq i32 %bf.clear7, 3342336
  br i1 %cmp, label %land.lhs.true8, label %if.end13

land.lhs.true8:                                   ; preds = %if.end
  %arrayidx = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %3 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 0
  %bf.load9 = load i32* %3, align 8
  %bf.clear10 = and i32 %bf.load9, 65535
  %cmp11 = icmp eq i32 %bf.clear10, 62
  br i1 %cmp11, label %return, label %if.end13

if.end13:                                         ; preds = %land.lhs.true8, %if.end
  %4 = getelementptr inbounds %struct.rtx_def* %mem, i64 0, i32 0
  %bf.load14 = load i32* %4, align 8
  %bf.clear16 = and i32 %bf.load14, 16711680
  %cmp17 = icmp eq i32 %bf.clear16, 3342336
  br i1 %cmp17, label %land.lhs.true18, label %if.end26

land.lhs.true18:                                  ; preds = %if.end13
  %arrayidx20 = getelementptr inbounds %struct.rtx_def* %mem, i64 0, i32 1, i64 0
  %rtx21 = bitcast %union.rtunion_def* %arrayidx20 to %struct.rtx_def**
  %5 = load %struct.rtx_def** %rtx21, align 8, !tbaa !1
  %6 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 0
  %bf.load22 = load i32* %6, align 8
  %bf.clear23 = and i32 %bf.load22, 65535
  %cmp24 = icmp eq i32 %bf.clear23, 62
  br i1 %cmp24, label %return, label %if.end26

if.end26:                                         ; preds = %land.lhs.true18, %if.end13
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 1
  %rtmem.i = bitcast %union.rtunion_def* %arrayidx.i to %struct.mem_attrs**
  %7 = load %struct.mem_attrs** %rtmem.i, align 8, !tbaa !1
  %cmp.i = icmp eq %struct.mem_attrs* %7, null
  br i1 %cmp.i, label %cond.end.i, label %cond.false.i

cond.false.i:                                     ; preds = %if.end26
  %alias.i = getelementptr inbounds %struct.mem_attrs* %7, i64 0, i32 0
  %8 = load i64* %alias.i, align 8, !tbaa !27
  br label %cond.end.i

cond.end.i:                                       ; preds = %cond.false.i, %if.end26
  %cond.i = phi i64 [ %8, %cond.false.i ], [ 0, %if.end26 ]
  %arrayidx5.i = getelementptr inbounds %struct.rtx_def* %mem, i64 0, i32 1, i64 1
  %rtmem6.i = bitcast %union.rtunion_def* %arrayidx5.i to %struct.mem_attrs**
  %9 = load %struct.mem_attrs** %rtmem6.i, align 8, !tbaa !1
  %cmp7.i = icmp eq %struct.mem_attrs* %9, null
  br i1 %cmp7.i, label %mems_in_disjoint_alias_sets_p.exit, label %cond.false9.i

cond.false9.i:                                    ; preds = %cond.end.i
  %alias13.i = getelementptr inbounds %struct.mem_attrs* %9, i64 0, i32 0
  %10 = load i64* %alias13.i, align 8, !tbaa !27
  br label %mems_in_disjoint_alias_sets_p.exit

mems_in_disjoint_alias_sets_p.exit:               ; preds = %cond.end.i, %cond.false9.i
  %cond15.i = phi i64 [ %10, %cond.false9.i ], [ 0, %cond.end.i ]
  %call.i = tail call i32 @alias_sets_conflict_p(i64 %cond.i, i64 %cond15.i) #4
  %lnot.i = icmp eq i32 %call.i, 0
  br i1 %lnot.i, label %return, label %if.end29

if.end29:                                         ; preds = %mems_in_disjoint_alias_sets_p.exit
  %bf.load30 = load i32* %0, align 8
  %bf.clear32 = and i32 %bf.load30, 67108864
  %tobool33 = icmp eq i32 %bf.clear32, 0
  br i1 %tobool33, label %if.end40, label %land.lhs.true34

land.lhs.true34:                                  ; preds = %if.end29
  %bf.load35 = load i32* %4, align 8
  %bf.clear37 = and i32 %bf.load35, 67108864
  %tobool38 = icmp eq i32 %bf.clear37, 0
  br i1 %tobool38, label %return, label %if.end40

if.end40:                                         ; preds = %land.lhs.true34, %if.end29
  %call41 = tail call fastcc i32 @nonoverlapping_memrefs_p(%struct.rtx_def* %mem, %struct.rtx_def* %x)
  %tobool42 = icmp eq i32 %call41, 0
  br i1 %tobool42, label %if.end44, label %return

if.end44:                                         ; preds = %if.end40
  %cmp45 = icmp eq i32 %mem_mode, 0
  br i1 %cmp45, label %if.then46, label %if.end50

if.then46:                                        ; preds = %if.end44
  %bf.load47 = load i32* %4, align 8
  %bf.lshr48 = lshr i32 %bf.load47, 16
  %bf.clear49 = and i32 %bf.lshr48, 255
  br label %if.end50

if.end50:                                         ; preds = %if.then46, %if.end44
  %mem_mode.addr.0 = phi i32 [ %bf.clear49, %if.then46 ], [ %mem_mode, %if.end44 ]
  %arrayidx52 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rtx53 = bitcast %union.rtunion_def* %arrayidx52 to %struct.rtx_def**
  %11 = load %struct.rtx_def** %rtx53, align 8, !tbaa !1
  %12 = getelementptr inbounds %struct.rtx_def* %11, i64 0, i32 0
  %bf.load.i = load i32* %12, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  %cmp.i156 = icmp eq i32 %bf.clear.i, 60
  br i1 %cmp.i156, label %if.end.i, label %get_addr.exit

if.end.i:                                         ; preds = %if.end50
  %arrayidx.i157 = getelementptr inbounds %struct.rtx_def* %11, i64 0, i32 1, i64 0
  %rt_cselib.i = bitcast %union.rtunion_def* %arrayidx.i157 to %struct.cselib_val_struct**
  %13 = load %struct.cselib_val_struct** %rt_cselib.i, align 8, !tbaa !1
  %locs.i = getelementptr inbounds %struct.cselib_val_struct* %13, i64 0, i32 2
  %l.088.i = load %struct.elt_loc_list** %locs.i, align 8
  %tobool89.i = icmp eq %struct.elt_loc_list* %l.088.i, null
  br i1 %tobool89.i, label %get_addr.exit, label %for.body.i

for.body.i:                                       ; preds = %if.end.i, %for.inc.i
  %l.090.i = phi %struct.elt_loc_list* [ %l.0.i, %for.inc.i ], [ %l.088.i, %if.end.i ]
  %loc.i = getelementptr inbounds %struct.elt_loc_list* %l.090.i, i64 0, i32 1
  %14 = load %struct.rtx_def** %loc.i, align 8, !tbaa !34
  %15 = getelementptr inbounds %struct.rtx_def* %14, i64 0, i32 0
  %bf.load1.i = load i32* %15, align 8
  %bf.clear2.i = and i32 %bf.load1.i, 65535
  switch i32 %bf.clear2.i, label %for.inc.i [
    i32 67, label %get_addr.exit
    i32 68, label %get_addr.exit
    i32 54, label %get_addr.exit
    i32 55, label %get_addr.exit
    i32 58, label %get_addr.exit
    i32 134, label %get_addr.exit
    i32 56, label %get_addr.exit
    i32 140, label %get_addr.exit
  ]

for.inc.i:                                        ; preds = %for.body.i
  %next.i = getelementptr inbounds %struct.elt_loc_list* %l.090.i, i64 0, i32 0
  %l.0.i = load %struct.elt_loc_list** %next.i, align 8
  %tobool.i = icmp eq %struct.elt_loc_list* %l.0.i, null
  br i1 %tobool.i, label %for.body44.i, label %for.body.i

for.body44.i:                                     ; preds = %for.inc.i, %for.inc56.i
  %l.187.i = phi %struct.elt_loc_list* [ %l.1.i, %for.inc56.i ], [ %l.088.i, %for.inc.i ]
  %loc45.i = getelementptr inbounds %struct.elt_loc_list* %l.187.i, i64 0, i32 1
  %16 = load %struct.rtx_def** %loc45.i, align 8, !tbaa !34
  %17 = getelementptr inbounds %struct.rtx_def* %16, i64 0, i32 0
  %bf.load46.i = load i32* %17, align 8
  %bf.clear47.i = and i32 %bf.load46.i, 65535
  switch i32 %bf.clear47.i, label %get_addr.exit [
    i32 61, label %for.inc56.i
    i32 66, label %for.inc56.i
  ]

for.inc56.i:                                      ; preds = %for.body44.i, %for.body44.i
  %next57.i = getelementptr inbounds %struct.elt_loc_list* %l.187.i, i64 0, i32 0
  %l.1.i = load %struct.elt_loc_list** %next57.i, align 8
  %tobool43.i = icmp eq %struct.elt_loc_list* %l.1.i, null
  br i1 %tobool43.i, label %if.then61.i, label %for.body44.i

if.then61.i:                                      ; preds = %for.inc56.i
  %loc63.i = getelementptr inbounds %struct.elt_loc_list* %l.088.i, i64 0, i32 1
  %18 = load %struct.rtx_def** %loc63.i, align 8, !tbaa !34
  br label %get_addr.exit

get_addr.exit:                                    ; preds = %for.body.i, %for.body.i, %for.body.i, %for.body.i, %for.body.i, %for.body.i, %for.body.i, %for.body.i, %for.body44.i, %if.end50, %if.end.i, %if.then61.i
  %retval.0.i = phi %struct.rtx_def* [ %18, %if.then61.i ], [ %11, %if.end50 ], [ %11, %if.end.i ], [ %16, %for.body44.i ], [ %14, %for.body.i ], [ %14, %for.body.i ], [ %14, %for.body.i ], [ %14, %for.body.i ], [ %14, %for.body.i ], [ %14, %for.body.i ], [ %14, %for.body.i ], [ %14, %for.body.i ]
  %arrayidx56 = getelementptr inbounds %struct.rtx_def* %mem, i64 0, i32 1, i64 0
  %rtx57 = bitcast %union.rtunion_def* %arrayidx56 to %struct.rtx_def**
  %19 = load %struct.rtx_def** %rtx57, align 8, !tbaa !1
  %20 = getelementptr inbounds %struct.rtx_def* %19, i64 0, i32 0
  %bf.load.i164 = load i32* %20, align 8
  %bf.clear.i165 = and i32 %bf.load.i164, 65535
  %cmp.i166 = icmp eq i32 %bf.clear.i165, 60
  br i1 %cmp.i166, label %if.end.i172, label %get_addr.exit196

if.end.i172:                                      ; preds = %get_addr.exit
  %arrayidx.i167 = getelementptr inbounds %struct.rtx_def* %19, i64 0, i32 1, i64 0
  %rt_cselib.i168 = bitcast %union.rtunion_def* %arrayidx.i167 to %struct.cselib_val_struct**
  %21 = load %struct.cselib_val_struct** %rt_cselib.i168, align 8, !tbaa !1
  %locs.i169 = getelementptr inbounds %struct.cselib_val_struct* %21, i64 0, i32 2
  %l.088.i170 = load %struct.elt_loc_list** %locs.i169, align 8
  %tobool89.i171 = icmp eq %struct.elt_loc_list* %l.088.i170, null
  br i1 %tobool89.i171, label %get_addr.exit196, label %for.body.i178

for.body.i178:                                    ; preds = %if.end.i172, %for.inc.i182
  %l.090.i174 = phi %struct.elt_loc_list* [ %l.0.i180, %for.inc.i182 ], [ %l.088.i170, %if.end.i172 ]
  %loc.i175 = getelementptr inbounds %struct.elt_loc_list* %l.090.i174, i64 0, i32 1
  %22 = load %struct.rtx_def** %loc.i175, align 8, !tbaa !34
  %23 = getelementptr inbounds %struct.rtx_def* %22, i64 0, i32 0
  %bf.load1.i176 = load i32* %23, align 8
  %bf.clear2.i177 = and i32 %bf.load1.i176, 65535
  switch i32 %bf.clear2.i177, label %for.inc.i182 [
    i32 67, label %get_addr.exit196
    i32 68, label %get_addr.exit196
    i32 54, label %get_addr.exit196
    i32 55, label %get_addr.exit196
    i32 58, label %get_addr.exit196
    i32 134, label %get_addr.exit196
    i32 56, label %get_addr.exit196
    i32 140, label %get_addr.exit196
  ]

for.inc.i182:                                     ; preds = %for.body.i178
  %next.i179 = getelementptr inbounds %struct.elt_loc_list* %l.090.i174, i64 0, i32 0
  %l.0.i180 = load %struct.elt_loc_list** %next.i179, align 8
  %tobool.i181 = icmp eq %struct.elt_loc_list* %l.0.i180, null
  br i1 %tobool.i181, label %for.body44.i187, label %for.body.i178

for.body44.i187:                                  ; preds = %for.inc.i182, %for.inc56.i191
  %l.187.i183 = phi %struct.elt_loc_list* [ %l.1.i189, %for.inc56.i191 ], [ %l.088.i170, %for.inc.i182 ]
  %loc45.i184 = getelementptr inbounds %struct.elt_loc_list* %l.187.i183, i64 0, i32 1
  %24 = load %struct.rtx_def** %loc45.i184, align 8, !tbaa !34
  %25 = getelementptr inbounds %struct.rtx_def* %24, i64 0, i32 0
  %bf.load46.i185 = load i32* %25, align 8
  %bf.clear47.i186 = and i32 %bf.load46.i185, 65535
  switch i32 %bf.clear47.i186, label %get_addr.exit196 [
    i32 61, label %for.inc56.i191
    i32 66, label %for.inc56.i191
  ]

for.inc56.i191:                                   ; preds = %for.body44.i187, %for.body44.i187
  %next57.i188 = getelementptr inbounds %struct.elt_loc_list* %l.187.i183, i64 0, i32 0
  %l.1.i189 = load %struct.elt_loc_list** %next57.i188, align 8
  %tobool43.i190 = icmp eq %struct.elt_loc_list* %l.1.i189, null
  br i1 %tobool43.i190, label %if.then61.i194, label %for.body44.i187

if.then61.i194:                                   ; preds = %for.inc56.i191
  %loc63.i193 = getelementptr inbounds %struct.elt_loc_list* %l.088.i170, i64 0, i32 1
  %26 = load %struct.rtx_def** %loc63.i193, align 8, !tbaa !34
  br label %get_addr.exit196

get_addr.exit196:                                 ; preds = %for.body.i178, %for.body.i178, %for.body.i178, %for.body.i178, %for.body.i178, %for.body.i178, %for.body.i178, %for.body.i178, %for.body44.i187, %get_addr.exit, %if.end.i172, %if.then61.i194
  %retval.0.i195 = phi %struct.rtx_def* [ %26, %if.then61.i194 ], [ %19, %get_addr.exit ], [ %19, %if.end.i172 ], [ %24, %for.body44.i187 ], [ %22, %for.body.i178 ], [ %22, %for.body.i178 ], [ %22, %for.body.i178 ], [ %22, %for.body.i178 ], [ %22, %for.body.i178 ], [ %22, %for.body.i178 ], [ %22, %for.body.i178 ], [ %22, %for.body.i178 ]
  %call59 = tail call fastcc %struct.rtx_def* @find_base_term(%struct.rtx_def* %retval.0.i)
  %tobool60 = icmp eq %struct.rtx_def* %call59, null
  br i1 %tobool60, label %if.end74, label %land.lhs.true61

land.lhs.true61:                                  ; preds = %get_addr.exit196
  %27 = getelementptr inbounds %struct.rtx_def* %call59, i64 0, i32 0
  %bf.load62 = load i32* %27, align 8
  %bf.clear63 = and i32 %bf.load62, 65535
  switch i32 %bf.clear63, label %if.end74 [
    i32 67, label %return
    i32 68, label %land.lhs.true68
  ]

land.lhs.true68:                                  ; preds = %land.lhs.true61
  %bf.clear71 = and i32 %bf.load62, 67108864
  %tobool72 = icmp eq i32 %bf.clear71, 0
  br i1 %tobool72, label %if.end74, label %return

if.end74:                                         ; preds = %land.lhs.true61, %land.lhs.true68, %get_addr.exit196
  %bf.load75 = load i32* %0, align 8
  %bf.lshr76 = lshr i32 %bf.load75, 16
  %bf.clear77 = and i32 %bf.lshr76, 255
  %call78 = tail call fastcc i32 @base_alias_check(%struct.rtx_def* %retval.0.i, %struct.rtx_def* %retval.0.i195, i32 %bf.clear77, i32 %mem_mode.addr.0)
  %tobool79 = icmp eq i32 %call78, 0
  br i1 %tobool79, label %return, label %if.end81

if.end81:                                         ; preds = %if.end74
  %call82 = tail call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %retval.0.i)
  %call83 = tail call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %retval.0.i195)
  %idxprom = sext i32 %mem_mode.addr.0 to i64
  %arrayidx84 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom
  %28 = load i8* %arrayidx84, align 1, !tbaa !17
  %conv = zext i8 %28 to i32
  %bf.load85 = load i32* %0, align 8
  %bf.lshr86 = lshr i32 %bf.load85, 16
  %bf.clear87 = and i32 %bf.lshr86, 255
  %idxprom88154 = zext i32 %bf.clear87 to i64
  %arrayidx89 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom88154
  %29 = load i8* %arrayidx89, align 1, !tbaa !17
  %conv90 = zext i8 %29 to i32
  %call91 = tail call fastcc i32 @memrefs_conflict_p(i32 %conv, %struct.rtx_def* %call83, i32 %conv90, %struct.rtx_def* %call82, i64 0)
  %tobool92 = icmp eq i32 %call91, 0
  br i1 %tobool92, label %return, label %if.end94

if.end94:                                         ; preds = %if.end81
  %30 = load %struct.rtx_def** %rtx53, align 8, !tbaa !1
  %31 = getelementptr inbounds %struct.rtx_def* %30, i64 0, i32 0
  %bf.load.i198 = load i32* %31, align 8
  %bf.clear.i199 = and i32 %bf.load.i198, 65535
  %cmp.i200 = icmp eq i32 %bf.clear.i199, 83
  %cmp99 = icmp eq i32 %mem_mode.addr.0, 2
  %or.cond = or i1 %cmp.i200, %cmp99
  br i1 %or.cond, label %return, label %lor.lhs.false101

lor.lhs.false101:                                 ; preds = %if.end94
  %32 = getelementptr inbounds %struct.rtx_def* %call83, i64 0, i32 0
  %bf.load102 = load i32* %32, align 8
  %bf.clear103 = and i32 %bf.load102, 65535
  %cmp104 = icmp eq i32 %bf.clear103, 83
  %cmp108 = icmp eq i32 %mem_mode.addr.0, 51
  %or.cond155 = or i1 %cmp104, %cmp108
  br i1 %or.cond155, label %return, label %lor.lhs.false110

lor.lhs.false110:                                 ; preds = %lor.lhs.false101
  %bf.load111 = load i32* %0, align 8
  %bf.clear113 = and i32 %bf.load111, 16711680
  %cmp114 = icmp eq i32 %bf.clear113, 3342336
  br i1 %cmp114, label %return, label %if.end117

if.end117:                                        ; preds = %lor.lhs.false110
  %33 = load i32* @flag_strict_aliasing, align 4, !tbaa !16
  %tobool.i158 = icmp eq i32 %33, 0
  br i1 %tobool.i158, label %fixed_scalar_and_varying_struct_p.exit, label %if.end.i160

if.end.i160:                                      ; preds = %if.end117
  %bf.load.i159 = load i32* %4, align 8
  %tobool1.i = icmp sgt i32 %bf.load.i159, -1
  %bf.clear.i161 = and i32 %bf.load111, 268435456
  %tobool4.i = icmp eq i32 %bf.clear.i161, 0
  %or.cond201 = or i1 %tobool1.i, %tobool4.i
  br i1 %or.cond201, label %if.end11.i, label %land.lhs.true5.i

land.lhs.true5.i:                                 ; preds = %if.end.i160
  %call.i162 = tail call i32 %varies(%struct.rtx_def* %call83, i32 1) #4
  %tobool6.i = icmp eq i32 %call.i162, 0
  br i1 %tobool6.i, label %land.lhs.true7.i, label %if.end11.i

land.lhs.true7.i:                                 ; preds = %land.lhs.true5.i
  %call8.i = tail call i32 %varies(%struct.rtx_def* %call82, i32 1) #4
  %tobool9.i = icmp eq i32 %call8.i, 0
  br i1 %tobool9.i, label %if.end11.i, label %fixed_scalar_and_varying_struct_p.exit

if.end11.i:                                       ; preds = %if.end.i160, %land.lhs.true7.i, %land.lhs.true5.i
  %bf.load12.i = load i32* %4, align 8
  %bf.clear14.i = and i32 %bf.load12.i, 268435456
  %tobool15.i = icmp eq i32 %bf.clear14.i, 0
  br i1 %tobool15.i, label %if.end27.i, label %land.lhs.true16.i

land.lhs.true16.i:                                ; preds = %if.end11.i
  %bf.load17.i = load i32* %0, align 8
  %tobool19.i = icmp slt i32 %bf.load17.i, 0
  br i1 %tobool19.i, label %land.lhs.true20.i, label %if.end27.i

land.lhs.true20.i:                                ; preds = %land.lhs.true16.i
  %call21.i = tail call i32 %varies(%struct.rtx_def* %call83, i32 1) #4
  %tobool22.i = icmp eq i32 %call21.i, 0
  br i1 %tobool22.i, label %if.end27.i, label %land.lhs.true23.i

land.lhs.true23.i:                                ; preds = %land.lhs.true20.i
  %call24.i = tail call i32 %varies(%struct.rtx_def* %call82, i32 1) #4
  %tobool25.i = icmp eq i32 %call24.i, 0
  br i1 %tobool25.i, label %fixed_scalar_and_varying_struct_p.exit, label %if.end27.i

if.end27.i:                                       ; preds = %land.lhs.true23.i, %land.lhs.true20.i, %land.lhs.true16.i, %if.end11.i
  br label %fixed_scalar_and_varying_struct_p.exit

fixed_scalar_and_varying_struct_p.exit:           ; preds = %if.end117, %land.lhs.true7.i, %land.lhs.true23.i, %if.end27.i
  %retval.0.i163 = phi %struct.rtx_def* [ null, %if.end27.i ], [ null, %if.end117 ], [ %mem, %land.lhs.true7.i ], [ %x, %land.lhs.true23.i ]
  %lnot = icmp eq %struct.rtx_def* %retval.0.i163, null
  %lnot.ext = zext i1 %lnot to i32
  br label %return

return:                                           ; preds = %mems_in_disjoint_alias_sets_p.exit, %if.end94, %lor.lhs.false110, %lor.lhs.false101, %if.end81, %if.end74, %land.lhs.true68, %land.lhs.true61, %if.end40, %land.lhs.true34, %land.lhs.true18, %land.lhs.true8, %land.lhs.true, %fixed_scalar_and_varying_struct_p.exit
  %retval.0 = phi i32 [ %lnot.ext, %fixed_scalar_and_varying_struct_p.exit ], [ 1, %land.lhs.true ], [ 1, %land.lhs.true8 ], [ 1, %land.lhs.true18 ], [ 0, %mems_in_disjoint_alias_sets_p.exit ], [ 0, %land.lhs.true34 ], [ 0, %if.end40 ], [ 0, %land.lhs.true61 ], [ 0, %land.lhs.true68 ], [ 0, %if.end74 ], [ 0, %if.end81 ], [ 1, %if.end94 ], [ 1, %lor.lhs.false101 ], [ 1, %lor.lhs.false110 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @nonoverlapping_memrefs_p(%struct.rtx_def* nocapture readonly %x, %struct.rtx_def* nocapture readonly %y) #0 {
entry:
  %arrayidx = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 1
  %rtmem = bitcast %union.rtunion_def* %arrayidx to %struct.mem_attrs**
  %0 = load %struct.mem_attrs** %rtmem, align 8, !tbaa !1
  %cmp = icmp eq %struct.mem_attrs* %0, null
  br i1 %cmp, label %cond.end, label %cond.false

cond.false:                                       ; preds = %entry
  %expr = getelementptr inbounds %struct.mem_attrs* %0, i64 0, i32 1
  %1 = load %union.tree_node** %expr, align 8, !tbaa !36
  br label %cond.end

cond.end:                                         ; preds = %entry, %cond.false
  %cond = phi %union.tree_node* [ %1, %cond.false ], [ null, %entry ]
  %arrayidx5 = getelementptr inbounds %struct.rtx_def* %y, i64 0, i32 1, i64 1
  %rtmem6 = bitcast %union.rtunion_def* %arrayidx5 to %struct.mem_attrs**
  %2 = load %struct.mem_attrs** %rtmem6, align 8, !tbaa !1
  %cmp7 = icmp eq %struct.mem_attrs* %2, null
  br i1 %cmp7, label %return, label %cond.end14

cond.end14:                                       ; preds = %cond.end
  %expr13 = getelementptr inbounds %struct.mem_attrs* %2, i64 0, i32 1
  %3 = load %union.tree_node** %expr13, align 8, !tbaa !36
  %cmp16 = icmp eq %union.tree_node* %cond, null
  %cmp17 = icmp eq %union.tree_node* %3, null
  %or.cond = or i1 %cmp16, %cmp17
  br i1 %or.cond, label %return, label %if.end

if.end:                                           ; preds = %cond.end14
  %code = getelementptr inbounds %union.tree_node* %cond, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp18 = icmp eq i32 %bf.clear, 39
  br i1 %cmp18, label %land.lhs.true, label %if.end26

land.lhs.true:                                    ; preds = %if.end
  %code20 = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 0, i32 2
  %bf.load21 = load i32* %code20, align 8
  %bf.clear22 = and i32 %bf.load21, 255
  %cmp23 = icmp eq i32 %bf.clear22, 39
  br i1 %cmp23, label %do.body.i, label %if.end26

do.body.i:                                        ; preds = %land.lhs.true, %land.rhs49.i
  %y.addr.0.i = phi %union.tree_node* [ %13, %land.rhs49.i ], [ %3, %land.lhs.true ]
  %x.addr.0.i = phi %union.tree_node* [ %12, %land.rhs49.i ], [ %cond, %land.lhs.true ]
  br label %do.body1.i

do.body1.i:                                       ; preds = %land.rhs17.i, %do.body.i
  %x.addr.1.i = phi %union.tree_node* [ %x.addr.0.i, %do.body.i ], [ %11, %land.rhs17.i ]
  %operands.i = getelementptr inbounds %union.tree_node* %x.addr.1.i, i64 0, i32 0, i32 2
  %arrayidx.i = getelementptr inbounds i32* %operands.i, i64 2
  %4 = bitcast i32* %arrayidx.i to %union.tree_node**
  %5 = load %union.tree_node** %4, align 8, !tbaa !1
  %context.i = getelementptr inbounds %union.tree_node* %5, i64 0, i32 0, i32 9
  %6 = load %union.tree_node** %context.i, align 8, !tbaa !37
  br label %do.body2.i

do.body2.i:                                       ; preds = %land.rhs.i, %do.body1.i
  %y.addr.1.i = phi %union.tree_node* [ %y.addr.0.i, %do.body1.i ], [ %10, %land.rhs.i ]
  %operands4.i = getelementptr inbounds %union.tree_node* %y.addr.1.i, i64 0, i32 0, i32 2
  %arrayidx5.i = getelementptr inbounds i32* %operands4.i, i64 2
  %7 = bitcast i32* %arrayidx5.i to %union.tree_node**
  %8 = load %union.tree_node** %7, align 8, !tbaa !1
  %context7.i = getelementptr inbounds %union.tree_node* %8, i64 0, i32 0, i32 9
  %9 = load %union.tree_node** %context7.i, align 8, !tbaa !37
  %cmp.i = icmp eq %union.tree_node* %6, %9
  br i1 %cmp.i, label %found.i, label %if.end.i

if.end.i:                                         ; preds = %do.body2.i
  %arrayidx10.i = bitcast i32* %operands4.i to %union.tree_node**
  %10 = load %union.tree_node** %arrayidx10.i, align 8, !tbaa !1
  %tobool.i = icmp eq %union.tree_node* %10, null
  br i1 %tobool.i, label %do.end.i, label %land.rhs.i

land.rhs.i:                                       ; preds = %if.end.i
  %code.i = getelementptr inbounds %union.tree_node* %10, i64 0, i32 0, i32 0, i32 2
  %bf.load.i = load i32* %code.i, align 8
  %bf.clear.i = and i32 %bf.load.i, 255
  %cmp11.i = icmp eq i32 %bf.clear.i, 39
  br i1 %cmp11.i, label %do.body2.i, label %do.end.i

do.end.i:                                         ; preds = %land.rhs.i, %if.end.i
  %arrayidx14.i = bitcast i32* %operands.i to %union.tree_node**
  %11 = load %union.tree_node** %arrayidx14.i, align 8, !tbaa !1
  %tobool16.i = icmp eq %union.tree_node* %11, null
  br i1 %tobool16.i, label %if.end26, label %land.rhs17.i

land.rhs17.i:                                     ; preds = %do.end.i
  %code19.i = getelementptr inbounds %union.tree_node* %11, i64 0, i32 0, i32 0, i32 2
  %bf.load20.i = load i32* %code19.i, align 8
  %bf.clear21.i = and i32 %bf.load20.i, 255
  %cmp22.i = icmp eq i32 %bf.clear21.i, 39
  br i1 %cmp22.i, label %do.body1.i, label %if.end26

found.i:                                          ; preds = %do.body2.i
  %code26.i = getelementptr inbounds %union.tree_node* %6, i64 0, i32 0, i32 0, i32 2
  %bf.load27.i = load i32* %code26.i, align 8
  %bf.clear28.i = and i32 %bf.load27.i, 255
  %cmp29.i = icmp ne i32 %bf.clear28.i, 20
  %cmp30.i = icmp eq %union.tree_node* %5, %8
  %or.cond74.i = or i1 %cmp29.i, %cmp30.i
  br i1 %or.cond74.i, label %if.end32.i, label %return

if.end32.i:                                       ; preds = %found.i
  %arrayidx35.i = bitcast i32* %operands.i to %union.tree_node**
  %12 = load %union.tree_node** %arrayidx35.i, align 8, !tbaa !1
  %arrayidx38.i = bitcast i32* %operands4.i to %union.tree_node**
  %13 = load %union.tree_node** %arrayidx38.i, align 8, !tbaa !1
  %tobool40.i = icmp ne %union.tree_node* %12, null
  %tobool42.i = icmp ne %union.tree_node* %13, null
  %or.cond.i = and i1 %tobool40.i, %tobool42.i
  br i1 %or.cond.i, label %land.lhs.true43.i, label %if.end26

land.lhs.true43.i:                                ; preds = %if.end32.i
  %code45.i = getelementptr inbounds %union.tree_node* %12, i64 0, i32 0, i32 0, i32 2
  %bf.load46.i = load i32* %code45.i, align 8
  %bf.clear47.i = and i32 %bf.load46.i, 255
  %cmp48.i = icmp eq i32 %bf.clear47.i, 39
  br i1 %cmp48.i, label %land.rhs49.i, label %if.end26

land.rhs49.i:                                     ; preds = %land.lhs.true43.i
  %code51.i = getelementptr inbounds %union.tree_node* %13, i64 0, i32 0, i32 0, i32 2
  %bf.load52.i = load i32* %code51.i, align 8
  %bf.clear53.i = and i32 %bf.load52.i, 255
  %cmp54.i = icmp eq i32 %bf.clear53.i, 39
  br i1 %cmp54.i, label %do.body.i, label %if.end26

if.end26:                                         ; preds = %if.end32.i, %land.lhs.true43.i, %land.rhs49.i, %land.rhs17.i, %do.end.i, %land.lhs.true, %if.end
  br i1 %cmp, label %cond.end36, label %cond.false32

cond.false32:                                     ; preds = %if.end26
  %offset = getelementptr inbounds %struct.mem_attrs* %0, i64 0, i32 2
  %14 = load %struct.rtx_def** %offset, align 8, !tbaa !38
  br label %cond.end36

cond.end36:                                       ; preds = %if.end26, %cond.false32
  %cond37 = phi %struct.rtx_def* [ %14, %cond.false32 ], [ null, %if.end26 ]
  br i1 %cmp18, label %do.body.i915, label %if.end48

do.body.i915:                                     ; preds = %cond.end36, %land.rhs.i920
  %x.addr.0.i911 = phi %union.tree_node* [ %15, %land.rhs.i920 ], [ %cond, %cond.end36 ]
  %operands.i912 = getelementptr inbounds %union.tree_node* %x.addr.0.i911, i64 0, i32 0, i32 2
  %arrayidx.i913 = bitcast i32* %operands.i912 to %union.tree_node**
  %15 = load %union.tree_node** %arrayidx.i913, align 8, !tbaa !1
  %tobool.i914 = icmp eq %union.tree_node* %15, null
  br i1 %tobool.i914, label %return, label %land.rhs.i920

land.rhs.i920:                                    ; preds = %do.body.i915
  %code.i916 = getelementptr inbounds %union.tree_node* %15, i64 0, i32 0, i32 0, i32 2
  %bf.load.i917 = load i32* %code.i916, align 8
  %bf.clear.i918 = and i32 %bf.load.i917, 255
  %cmp.i919 = icmp eq i32 %bf.clear.i918, 39
  br i1 %cmp.i919, label %do.body.i915, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %land.rhs.i920
  %idxprom14.i = zext i32 %bf.clear.i918 to i64
  %arrayidx6.i = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom14.i
  %16 = load i8* %arrayidx6.i, align 1, !tbaa !17
  %cmp7.i = icmp eq i8 %16, 100
  br i1 %cmp7.i, label %if.end46, label %return

if.end46:                                         ; preds = %land.lhs.true.i
  %tobool.i922 = icmp eq %struct.rtx_def* %cond37, null
  br i1 %tobool.i922, label %if.end48, label %if.end.i924

if.end.i924:                                      ; preds = %if.end46
  %rtwint.i923 = getelementptr inbounds %struct.rtx_def* %cond37, i64 0, i32 1, i64 0, i32 0
  %17 = load i64* %rtwint.i923, align 8, !tbaa !25
  br label %do.body.i932

do.body.i932:                                     ; preds = %land.rhs.i947, %if.end.i924
  %x.addr.0.i925 = phi %union.tree_node* [ %cond, %if.end.i924 ], [ %23, %land.rhs.i947 ]
  %ioffset.0.i926 = phi i64 [ %17, %if.end.i924 ], [ %add10.i939, %land.rhs.i947 ]
  %operands.i927 = getelementptr inbounds %union.tree_node* %x.addr.0.i925, i64 0, i32 0, i32 2
  %arrayidx1.i928 = getelementptr inbounds i32* %operands.i927, i64 2
  %18 = bitcast i32* %arrayidx1.i928 to %union.tree_node**
  %19 = load %union.tree_node** %18, align 8, !tbaa !1
  %arguments.i929 = getelementptr inbounds %union.tree_node* %19, i64 0, i32 0, i32 10
  %20 = load %union.tree_node** %arguments.i929, align 8, !tbaa !39
  %call.i930 = tail call i32 @host_integerp(%union.tree_node* %20, i32 1) #4
  %tobool2.i931 = icmp eq i32 %call.i930, 0
  br i1 %tobool2.i931, label %if.end48, label %if.end4.i942

if.end4.i942:                                     ; preds = %do.body.i932
  %21 = load %union.tree_node** %arguments.i929, align 8, !tbaa !39
  %call7.i933 = tail call i64 @tree_low_cst(%union.tree_node* %21, i32 1) #4
  %u2.i934 = getelementptr inbounds %union.tree_node* %19, i64 0, i32 0, i32 19
  %t.i935 = bitcast %union.anon.2* %u2.i934 to %union.tree_node**
  %22 = load %union.tree_node** %t.i935, align 8, !tbaa !1
  %call9.i936 = tail call i64 @tree_low_cst(%union.tree_node* %22, i32 1) #4
  %div.i937 = sdiv i64 %call9.i936, 8
  %add.i938 = add i64 %call7.i933, %ioffset.0.i926
  %add10.i939 = add i64 %add.i938, %div.i937
  %arrayidx13.i940 = bitcast i32* %operands.i927 to %union.tree_node**
  %23 = load %union.tree_node** %arrayidx13.i940, align 8, !tbaa !1
  %tobool14.i941 = icmp eq %union.tree_node* %23, null
  br i1 %tobool14.i941, label %do.end.i949, label %land.rhs.i947

land.rhs.i947:                                    ; preds = %if.end4.i942
  %code.i943 = getelementptr inbounds %union.tree_node* %23, i64 0, i32 0, i32 0, i32 2
  %bf.load.i944 = load i32* %code.i943, align 8
  %bf.clear.i945 = and i32 %bf.load.i944, 255
  %cmp.i946 = icmp eq i32 %bf.clear.i945, 39
  br i1 %cmp.i946, label %do.body.i932, label %do.end.i949

do.end.i949:                                      ; preds = %land.rhs.i947, %if.end4.i942
  %call15.i948 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %add10.i939) #4
  br label %if.end48

if.end48:                                         ; preds = %do.body.i932, %do.end.i949, %if.end46, %cond.end36
  %moffsetx.0 = phi %struct.rtx_def* [ %cond37, %cond.end36 ], [ %call15.i948, %do.end.i949 ], [ null, %if.end46 ], [ null, %do.body.i932 ]
  %exprx.0 = phi %union.tree_node* [ %cond, %cond.end36 ], [ %15, %do.end.i949 ], [ %15, %if.end46 ], [ %15, %do.body.i932 ]
  %24 = load %struct.mem_attrs** %rtmem6, align 8, !tbaa !1
  %cmp52 = icmp eq %struct.mem_attrs* %24, null
  br i1 %cmp52, label %cond.end59, label %cond.false54

cond.false54:                                     ; preds = %if.end48
  %offset58 = getelementptr inbounds %struct.mem_attrs* %24, i64 0, i32 2
  %25 = load %struct.rtx_def** %offset58, align 8, !tbaa !38
  br label %cond.end59

cond.end59:                                       ; preds = %if.end48, %cond.false54
  %cond60 = phi %struct.rtx_def* [ %25, %cond.false54 ], [ null, %if.end48 ]
  %code62 = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 0, i32 2
  %bf.load63 = load i32* %code62, align 8
  %bf.clear64 = and i32 %bf.load63, 255
  %cmp65 = icmp eq i32 %bf.clear64, 39
  br i1 %cmp65, label %do.body.i956, label %if.end73

do.body.i956:                                     ; preds = %cond.end59, %land.rhs.i961
  %x.addr.0.i952 = phi %union.tree_node* [ %26, %land.rhs.i961 ], [ %3, %cond.end59 ]
  %operands.i953 = getelementptr inbounds %union.tree_node* %x.addr.0.i952, i64 0, i32 0, i32 2
  %arrayidx.i954 = bitcast i32* %operands.i953 to %union.tree_node**
  %26 = load %union.tree_node** %arrayidx.i954, align 8, !tbaa !1
  %tobool.i955 = icmp eq %union.tree_node* %26, null
  br i1 %tobool.i955, label %return, label %land.rhs.i961

land.rhs.i961:                                    ; preds = %do.body.i956
  %code.i957 = getelementptr inbounds %union.tree_node* %26, i64 0, i32 0, i32 0, i32 2
  %bf.load.i958 = load i32* %code.i957, align 8
  %bf.clear.i959 = and i32 %bf.load.i958, 255
  %cmp.i960 = icmp eq i32 %bf.clear.i959, 39
  br i1 %cmp.i960, label %do.body.i956, label %land.lhs.true.i966

land.lhs.true.i966:                               ; preds = %land.rhs.i961
  %idxprom14.i962 = zext i32 %bf.clear.i959 to i64
  %arrayidx6.i963 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom14.i962
  %27 = load i8* %arrayidx6.i963, align 1, !tbaa !17
  %cmp7.i964 = icmp eq i8 %27, 100
  br i1 %cmp7.i964, label %if.end71, label %return

if.end71:                                         ; preds = %land.lhs.true.i966
  %tobool.i899 = icmp eq %struct.rtx_def* %cond60, null
  br i1 %tobool.i899, label %if.end73, label %if.end.i900

if.end.i900:                                      ; preds = %if.end71
  %rtwint.i = getelementptr inbounds %struct.rtx_def* %cond60, i64 0, i32 1, i64 0, i32 0
  %28 = load i64* %rtwint.i, align 8, !tbaa !25
  br label %do.body.i903

do.body.i903:                                     ; preds = %land.rhs.i908, %if.end.i900
  %x.addr.0.i901 = phi %union.tree_node* [ %3, %if.end.i900 ], [ %34, %land.rhs.i908 ]
  %ioffset.0.i = phi i64 [ %28, %if.end.i900 ], [ %add10.i, %land.rhs.i908 ]
  %operands.i902 = getelementptr inbounds %union.tree_node* %x.addr.0.i901, i64 0, i32 0, i32 2
  %arrayidx1.i = getelementptr inbounds i32* %operands.i902, i64 2
  %29 = bitcast i32* %arrayidx1.i to %union.tree_node**
  %30 = load %union.tree_node** %29, align 8, !tbaa !1
  %arguments.i = getelementptr inbounds %union.tree_node* %30, i64 0, i32 0, i32 10
  %31 = load %union.tree_node** %arguments.i, align 8, !tbaa !39
  %call.i = tail call i32 @host_integerp(%union.tree_node* %31, i32 1) #4
  %tobool2.i = icmp eq i32 %call.i, 0
  br i1 %tobool2.i, label %if.end73, label %if.end4.i

if.end4.i:                                        ; preds = %do.body.i903
  %32 = load %union.tree_node** %arguments.i, align 8, !tbaa !39
  %call7.i = tail call i64 @tree_low_cst(%union.tree_node* %32, i32 1) #4
  %u2.i = getelementptr inbounds %union.tree_node* %30, i64 0, i32 0, i32 19
  %t.i = bitcast %union.anon.2* %u2.i to %union.tree_node**
  %33 = load %union.tree_node** %t.i, align 8, !tbaa !1
  %call9.i = tail call i64 @tree_low_cst(%union.tree_node* %33, i32 1) #4
  %div.i = sdiv i64 %call9.i, 8
  %add.i = add i64 %call7.i, %ioffset.0.i
  %add10.i = add i64 %add.i, %div.i
  %arrayidx13.i = bitcast i32* %operands.i902 to %union.tree_node**
  %34 = load %union.tree_node** %arrayidx13.i, align 8, !tbaa !1
  %tobool14.i = icmp eq %union.tree_node* %34, null
  br i1 %tobool14.i, label %do.end.i909, label %land.rhs.i908

land.rhs.i908:                                    ; preds = %if.end4.i
  %code.i904 = getelementptr inbounds %union.tree_node* %34, i64 0, i32 0, i32 0, i32 2
  %bf.load.i905 = load i32* %code.i904, align 8
  %bf.clear.i906 = and i32 %bf.load.i905, 255
  %cmp.i907 = icmp eq i32 %bf.clear.i906, 39
  br i1 %cmp.i907, label %do.body.i903, label %do.end.i909

do.end.i909:                                      ; preds = %land.rhs.i908, %if.end4.i
  %call15.i = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %add10.i) #4
  br label %if.end73

if.end73:                                         ; preds = %do.body.i903, %do.end.i909, %if.end71, %cond.end59
  %moffsety.0 = phi %struct.rtx_def* [ %cond60, %cond.end59 ], [ %call15.i, %do.end.i909 ], [ null, %if.end71 ], [ null, %do.body.i903 ]
  %expry.0 = phi %union.tree_node* [ %3, %cond.end59 ], [ %26, %do.end.i909 ], [ %26, %if.end71 ], [ %26, %do.body.i903 ]
  %code75 = getelementptr inbounds %union.tree_node* %exprx.0, i64 0, i32 0, i32 0, i32 2
  %bf.load76 = load i32* %code75, align 8
  %bf.clear77 = and i32 %bf.load76, 255
  %idxprom886 = zext i32 %bf.clear77 to i64
  %arrayidx78 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom886
  %35 = load i8* %arrayidx78, align 1, !tbaa !17
  %cmp79 = icmp eq i8 %35, 100
  br i1 %cmp79, label %lor.lhs.false81, label %return

lor.lhs.false81:                                  ; preds = %if.end73
  %code83 = getelementptr inbounds %union.tree_node* %expry.0, i64 0, i32 0, i32 0, i32 2
  %bf.load84 = load i32* %code83, align 8
  %bf.clear85 = and i32 %bf.load84, 255
  %idxprom86887 = zext i32 %bf.clear85 to i64
  %arrayidx87 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom86887
  %36 = load i8* %arrayidx87, align 1, !tbaa !17
  %cmp89 = icmp eq i8 %36, 100
  br i1 %cmp89, label %if.end92, label %return

if.end92:                                         ; preds = %lor.lhs.false81
  %rtl = getelementptr inbounds %union.tree_node* %exprx.0, i64 0, i32 0, i32 17
  %37 = load %struct.rtx_def** %rtl, align 8, !tbaa !26
  %tobool93 = icmp eq %struct.rtx_def* %37, null
  br i1 %tobool93, label %cond.false97, label %cond.end100

cond.false97:                                     ; preds = %if.end92
  tail call void @make_decl_rtl(%union.tree_node* %exprx.0, i8* null) #4
  %38 = load %struct.rtx_def** %rtl, align 8, !tbaa !26
  br label %cond.end100

cond.end100:                                      ; preds = %if.end92, %cond.false97
  %cond101 = phi %struct.rtx_def* [ %38, %cond.false97 ], [ %37, %if.end92 ]
  %rtl103 = getelementptr inbounds %union.tree_node* %expry.0, i64 0, i32 0, i32 17
  %39 = load %struct.rtx_def** %rtl103, align 8, !tbaa !26
  %tobool104 = icmp eq %struct.rtx_def* %39, null
  br i1 %tobool104, label %cond.false108, label %cond.end111

cond.false108:                                    ; preds = %cond.end100
  tail call void @make_decl_rtl(%union.tree_node* %expry.0, i8* null) #4
  %40 = load %struct.rtx_def** %rtl103, align 8, !tbaa !26
  br label %cond.end111

cond.end111:                                      ; preds = %cond.end100, %cond.false108
  %cond112 = phi %struct.rtx_def* [ %40, %cond.false108 ], [ %39, %cond.end100 ]
  %41 = getelementptr inbounds %struct.rtx_def* %cond101, i64 0, i32 0
  %bf.load113 = load i32* %41, align 8
  %bf.clear114 = and i32 %bf.load113, 65535
  %cmp115 = icmp eq i32 %bf.clear114, 66
  br i1 %cmp115, label %lor.lhs.false117, label %land.lhs.true122

lor.lhs.false117:                                 ; preds = %cond.end111
  %42 = getelementptr inbounds %struct.rtx_def* %cond112, i64 0, i32 0
  %bf.load118 = load i32* %42, align 8
  %bf.clear119 = and i32 %bf.load118, 65535
  %cmp120 = icmp eq i32 %bf.clear119, 66
  br i1 %cmp120, label %if.end126, label %land.lhs.true122

land.lhs.true122:                                 ; preds = %lor.lhs.false117, %cond.end111
  %call123 = tail call i32 @rtx_equal_p(%struct.rtx_def* %cond101, %struct.rtx_def* %cond112) #4
  %tobool124 = icmp eq i32 %call123, 0
  br i1 %tobool124, label %return, label %land.lhs.true122.if.end126_crit_edge

land.lhs.true122.if.end126_crit_edge:             ; preds = %land.lhs.true122
  %bf.load127.pre = load i32* %41, align 8
  br label %if.end126

if.end126:                                        ; preds = %land.lhs.true122.if.end126_crit_edge, %lor.lhs.false117
  %bf.load127 = phi i32 [ %bf.load127.pre, %land.lhs.true122.if.end126_crit_edge ], [ %bf.load113, %lor.lhs.false117 ]
  %bf.clear128 = and i32 %bf.load127, 65535
  %cmp129 = icmp eq i32 %bf.clear128, 66
  br i1 %cmp129, label %cond.true131, label %cond.end135

cond.true131:                                     ; preds = %if.end126
  %arrayidx133 = getelementptr inbounds %struct.rtx_def* %cond101, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx133 to %struct.rtx_def**
  %43 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %43, i64 0, i32 0
  %bf.load137.pre = load i32* %.phi.trans.insert, align 8
  br label %cond.end135

cond.end135:                                      ; preds = %if.end126, %cond.true131
  %bf.load137 = phi i32 [ %bf.load137.pre, %cond.true131 ], [ %bf.load127, %if.end126 ]
  %cond136 = phi %struct.rtx_def* [ %43, %cond.true131 ], [ %cond101, %if.end126 ]
  %bf.clear138 = and i32 %bf.load137, 65535
  %cmp139 = icmp eq i32 %bf.clear138, 75
  br i1 %cmp139, label %land.lhs.true141, label %if.end158

land.lhs.true141:                                 ; preds = %cond.end135
  %arrayidx143 = getelementptr inbounds %struct.rtx_def* %cond136, i64 0, i32 1, i64 1
  %rtx144 = bitcast %union.rtunion_def* %arrayidx143 to %struct.rtx_def**
  %44 = load %struct.rtx_def** %rtx144, align 8, !tbaa !1
  %45 = getelementptr inbounds %struct.rtx_def* %44, i64 0, i32 0
  %bf.load145 = load i32* %45, align 8
  %bf.clear146 = and i32 %bf.load145, 65535
  %cmp147 = icmp eq i32 %bf.clear146, 54
  br i1 %cmp147, label %if.then149, label %if.end158

if.then149:                                       ; preds = %land.lhs.true141
  %rtwint = getelementptr inbounds %struct.rtx_def* %44, i64 0, i32 1, i64 0, i32 0
  %46 = load i64* %rtwint, align 8, !tbaa !25
  %arrayidx156 = getelementptr inbounds %struct.rtx_def* %cond136, i64 0, i32 1, i64 0
  %rtx157 = bitcast %union.rtunion_def* %arrayidx156 to %struct.rtx_def**
  %47 = load %struct.rtx_def** %rtx157, align 8, !tbaa !1
  br label %if.end158

if.end158:                                        ; preds = %if.then149, %land.lhs.true141, %cond.end135
  %basex.0 = phi %struct.rtx_def* [ %47, %if.then149 ], [ %cond136, %land.lhs.true141 ], [ %cond136, %cond.end135 ]
  %offsetx.0 = phi i64 [ %46, %if.then149 ], [ 0, %land.lhs.true141 ], [ 0, %cond.end135 ]
  %48 = getelementptr inbounds %struct.rtx_def* %cond112, i64 0, i32 0
  %bf.load159 = load i32* %48, align 8
  %bf.clear160 = and i32 %bf.load159, 65535
  %cmp161 = icmp eq i32 %bf.clear160, 66
  br i1 %cmp161, label %cond.true163, label %cond.end168

cond.true163:                                     ; preds = %if.end158
  %arrayidx165 = getelementptr inbounds %struct.rtx_def* %cond112, i64 0, i32 1, i64 0
  %rtx166 = bitcast %union.rtunion_def* %arrayidx165 to %struct.rtx_def**
  %49 = load %struct.rtx_def** %rtx166, align 8, !tbaa !1
  %.phi.trans.insert1001 = getelementptr inbounds %struct.rtx_def* %49, i64 0, i32 0
  %bf.load170.pre = load i32* %.phi.trans.insert1001, align 8
  br label %cond.end168

cond.end168:                                      ; preds = %if.end158, %cond.true163
  %bf.load170 = phi i32 [ %bf.load170.pre, %cond.true163 ], [ %bf.load159, %if.end158 ]
  %cond169 = phi %struct.rtx_def* [ %49, %cond.true163 ], [ %cond112, %if.end158 ]
  %bf.clear171 = and i32 %bf.load170, 65535
  %cmp172 = icmp eq i32 %bf.clear171, 75
  br i1 %cmp172, label %land.lhs.true174, label %if.end192

land.lhs.true174:                                 ; preds = %cond.end168
  %arrayidx176 = getelementptr inbounds %struct.rtx_def* %cond169, i64 0, i32 1, i64 1
  %rtx177 = bitcast %union.rtunion_def* %arrayidx176 to %struct.rtx_def**
  %50 = load %struct.rtx_def** %rtx177, align 8, !tbaa !1
  %51 = getelementptr inbounds %struct.rtx_def* %50, i64 0, i32 0
  %bf.load178 = load i32* %51, align 8
  %bf.clear179 = and i32 %bf.load178, 65535
  %cmp180 = icmp eq i32 %bf.clear179, 54
  br i1 %cmp180, label %if.then182, label %if.end192

if.then182:                                       ; preds = %land.lhs.true174
  %rtwint188 = getelementptr inbounds %struct.rtx_def* %50, i64 0, i32 1, i64 0, i32 0
  %52 = load i64* %rtwint188, align 8, !tbaa !25
  %arrayidx190 = getelementptr inbounds %struct.rtx_def* %cond169, i64 0, i32 1, i64 0
  %rtx191 = bitcast %union.rtunion_def* %arrayidx190 to %struct.rtx_def**
  %53 = load %struct.rtx_def** %rtx191, align 8, !tbaa !1
  br label %if.end192

if.end192:                                        ; preds = %if.then182, %land.lhs.true174, %cond.end168
  %basey.0 = phi %struct.rtx_def* [ %53, %if.then182 ], [ %cond169, %land.lhs.true174 ], [ %cond169, %cond.end168 ]
  %offsety.0 = phi i64 [ %52, %if.then182 ], [ 0, %land.lhs.true174 ], [ 0, %cond.end168 ]
  %call193 = tail call i32 @rtx_equal_p(%struct.rtx_def* %basex.0, %struct.rtx_def* %basey.0) #4
  %tobool194 = icmp eq i32 %call193, 0
  br i1 %tobool194, label %if.then195, label %if.end436

if.then195:                                       ; preds = %if.end192
  %54 = getelementptr inbounds %struct.rtx_def* %basex.0, i64 0, i32 0
  %bf.load196 = load i32* %54, align 8
  %bf.clear197 = and i32 %bf.load196, 65535
  switch i32 %bf.clear197, label %lor.lhs.false275.lor.rhs_crit_edge [
    i32 67, label %land.lhs.true235
    i32 68, label %land.lhs.true235
    i32 54, label %land.lhs.true235
    i32 55, label %land.lhs.true235
    i32 58, label %land.lhs.true235
    i32 134, label %land.lhs.true235
    i32 56, label %land.lhs.true235
    i32 140, label %land.lhs.true235
  ]

land.lhs.true235:                                 ; preds = %if.then195, %if.then195, %if.then195, %if.then195, %if.then195, %if.then195, %if.then195, %if.then195
  %55 = getelementptr inbounds %struct.rtx_def* %basey.0, i64 0, i32 0
  %bf.load236 = load i32* %55, align 8
  %bf.clear237 = and i32 %bf.load236, 65535
  switch i32 %bf.clear237, label %lor.lhs.false275 [
    i32 67, label %lor.end435
    i32 68, label %lor.end435
    i32 54, label %lor.end435
    i32 55, label %lor.end435
    i32 58, label %lor.end435
    i32 134, label %lor.end435
    i32 56, label %lor.end435
    i32 140, label %lor.end435
  ]

lor.lhs.false275:                                 ; preds = %land.lhs.true235
  switch i32 %bf.clear197, label %lor.lhs.false275.lor.rhs_crit_edge [
    i32 67, label %land.lhs.true315
    i32 68, label %land.lhs.true315
    i32 54, label %land.lhs.true315
    i32 55, label %land.lhs.true315
    i32 58, label %land.lhs.true315
    i32 134, label %land.lhs.true315
    i32 56, label %land.lhs.true315
    i32 140, label %land.lhs.true315
  ]

lor.lhs.false275.lor.rhs_crit_edge:               ; preds = %if.then195, %lor.lhs.false275
  %.phi.trans.insert1003 = getelementptr inbounds %struct.rtx_def* %basey.0, i64 0, i32 0
  %bf.load355.pre = load i32* %.phi.trans.insert1003, align 8
  br label %lor.rhs

land.lhs.true315:                                 ; preds = %lor.lhs.false275, %lor.lhs.false275, %lor.lhs.false275, %lor.lhs.false275, %lor.lhs.false275, %lor.lhs.false275, %lor.lhs.false275, %lor.lhs.false275
  %bf.load316.in = getelementptr inbounds %struct.rtx_def* %basey.0, i64 0, i32 0
  %bf.load316 = load i32* %bf.load316.in, align 8
  %bf.clear317 = and i32 %bf.load316, 65535
  %cmp318 = icmp eq i32 %bf.clear317, 61
  br i1 %cmp318, label %land.lhs.true320, label %lor.rhs

land.lhs.true320:                                 ; preds = %land.lhs.true315
  %arrayidx322 = getelementptr inbounds %struct.rtx_def* %basey.0, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx322 to i32*
  %56 = load i32* %rtuint, align 4, !tbaa !16
  switch i32 %56, label %lor.lhs.false343 [
    i32 7, label %lor.end435
    i32 20, label %lor.end435
    i32 6, label %lor.end435
    i32 16, label %lor.end435
  ]

lor.lhs.false343:                                 ; preds = %land.lhs.true320
  %.off977 = add i32 %56, -53
  %57 = icmp ult i32 %.off977, 5
  br i1 %57, label %lor.end435, label %lor.rhs

lor.rhs:                                          ; preds = %lor.lhs.false275.lor.rhs_crit_edge, %lor.lhs.false343, %land.lhs.true315
  %bf.load355 = phi i32 [ %bf.load355.pre, %lor.lhs.false275.lor.rhs_crit_edge ], [ %bf.load316, %lor.lhs.false343 ], [ %bf.load316, %land.lhs.true315 ]
  %bf.clear356 = and i32 %bf.load355, 65535
  switch i32 %bf.clear356, label %lor.end435 [
    i32 67, label %land.lhs.true394
    i32 68, label %land.lhs.true394
    i32 54, label %land.lhs.true394
    i32 55, label %land.lhs.true394
    i32 58, label %land.lhs.true394
    i32 134, label %land.lhs.true394
    i32 56, label %land.lhs.true394
    i32 140, label %land.lhs.true394
  ]

land.lhs.true394:                                 ; preds = %lor.rhs, %lor.rhs, %lor.rhs, %lor.rhs, %lor.rhs, %lor.rhs, %lor.rhs, %lor.rhs
  %cmp397 = icmp eq i32 %bf.clear197, 61
  br i1 %cmp397, label %land.rhs, label %lor.end435

land.rhs:                                         ; preds = %land.lhs.true394
  %arrayidx400 = getelementptr inbounds %struct.rtx_def* %basex.0, i64 0, i32 1, i64 0
  %rtuint401 = bitcast %union.rtunion_def* %arrayidx400 to i32*
  %58 = load i32* %rtuint401, align 4, !tbaa !16
  switch i32 %58, label %lor.rhs422 [
    i32 7, label %lor.end435
    i32 20, label %lor.end435
    i32 6, label %lor.end435
    i32 16, label %lor.end435
  ]

lor.rhs422:                                       ; preds = %land.rhs
  %.off = add i32 %58, -53
  %59 = icmp ult i32 %.off, 5
  br label %lor.end435

lor.end435:                                       ; preds = %lor.rhs422, %land.rhs, %land.rhs, %land.rhs, %land.rhs, %lor.rhs, %lor.lhs.false343, %land.lhs.true320, %land.lhs.true320, %land.lhs.true320, %land.lhs.true320, %land.lhs.true235, %land.lhs.true235, %land.lhs.true235, %land.lhs.true235, %land.lhs.true235, %land.lhs.true235, %land.lhs.true235, %land.lhs.true235, %land.lhs.true394
  %60 = phi i1 [ true, %land.lhs.true320 ], [ true, %land.lhs.true235 ], [ false, %land.lhs.true394 ], [ true, %land.rhs ], [ true, %land.lhs.true235 ], [ true, %land.lhs.true235 ], [ true, %land.lhs.true235 ], [ true, %land.lhs.true235 ], [ true, %land.lhs.true235 ], [ true, %land.lhs.true235 ], [ true, %land.lhs.true235 ], [ true, %land.lhs.true320 ], [ true, %land.lhs.true320 ], [ true, %land.lhs.true320 ], [ true, %lor.lhs.false343 ], [ false, %lor.rhs ], [ true, %land.rhs ], [ true, %land.rhs ], [ true, %land.rhs ], [ %59, %lor.rhs422 ]
  %lor.ext = zext i1 %60 to i32
  br label %return

if.end436:                                        ; preds = %if.end192
  %bf.load437 = load i32* %41, align 8
  %bf.clear438 = and i32 %bf.load437, 65535
  %cmp439 = icmp eq i32 %bf.clear438, 66
  br i1 %cmp439, label %cond.false448, label %cond.true441

cond.true441:                                     ; preds = %if.end436
  %bf.lshr = lshr i32 %bf.load437, 16
  %bf.clear443 = and i32 %bf.lshr, 255
  %idxprom444897 = zext i32 %bf.clear443 to i64
  %arrayidx445 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom444897
  %61 = load i8* %arrayidx445, align 1, !tbaa !17
  %conv447 = zext i8 %61 to i64
  br label %cond.end511

cond.false448:                                    ; preds = %if.end436
  %arrayidx450 = getelementptr inbounds %struct.rtx_def* %cond101, i64 0, i32 1, i64 1
  %rtmem451 = bitcast %union.rtunion_def* %arrayidx450 to %struct.mem_attrs**
  %62 = load %struct.mem_attrs** %rtmem451, align 8, !tbaa !1
  %cmp452 = icmp eq %struct.mem_attrs* %62, null
  br i1 %cmp452, label %cond.false459, label %cond.true454

cond.true454:                                     ; preds = %cond.false448
  %size = getelementptr inbounds %struct.mem_attrs* %62, i64 0, i32 3
  %63 = load %struct.rtx_def** %size, align 8, !tbaa !40
  %tobool458 = icmp eq %struct.rtx_def* %63, null
  br i1 %tobool458, label %cond.end511, label %cond.true481

cond.false459:                                    ; preds = %cond.false448
  %bf.lshr461 = lshr i32 %bf.load437, 16
  %bf.clear462 = and i32 %bf.lshr461, 255
  %cmp463 = icmp eq i32 %bf.clear462, 51
  br i1 %cmp463, label %cond.end511, label %cond.true465

cond.true465:                                     ; preds = %cond.false459
  %idxprom469895 = zext i32 %bf.clear462 to i64
  %arrayidx470 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom469895
  %64 = load i8* %arrayidx470, align 1, !tbaa !17
  %conv471 = zext i8 %64 to i64
  %call472 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv471) #4
  %tobool473 = icmp eq %struct.rtx_def* %call472, null
  br i1 %tobool473, label %cond.end511, label %cond.true475

cond.true475:                                     ; preds = %cond.true465
  %.pre = load %struct.mem_attrs** %rtmem451, align 8, !tbaa !1
  %cmp479 = icmp eq %struct.mem_attrs* %.pre, null
  br i1 %cmp479, label %cond.false486, label %cond.true481

cond.true481:                                     ; preds = %cond.true454, %cond.true475
  %65 = phi %struct.mem_attrs* [ %.pre, %cond.true475 ], [ %62, %cond.true454 ]
  %size485 = getelementptr inbounds %struct.mem_attrs* %65, i64 0, i32 3
  %66 = load %struct.rtx_def** %size485, align 8, !tbaa !40
  br label %cond.end503

cond.false486:                                    ; preds = %cond.true475
  %bf.load487 = load i32* %41, align 8
  %bf.lshr488 = lshr i32 %bf.load487, 16
  %bf.clear489 = and i32 %bf.lshr488, 255
  %idxprom496896 = zext i32 %bf.clear489 to i64
  %arrayidx497 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom496896
  %67 = load i8* %arrayidx497, align 1, !tbaa !17
  %conv498 = zext i8 %67 to i64
  %call499 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv498) #4
  br label %cond.end503

cond.end503:                                      ; preds = %cond.false486, %cond.true481
  %cond504 = phi %struct.rtx_def* [ %66, %cond.true481 ], [ %call499, %cond.false486 ]
  %rtwint507 = getelementptr inbounds %struct.rtx_def* %cond504, i64 0, i32 1, i64 0, i32 0
  %68 = load i64* %rtwint507, align 8, !tbaa !25
  br label %cond.end511

cond.end511:                                      ; preds = %cond.true454, %cond.true465, %cond.false459, %cond.end503, %cond.true441
  %cond512 = phi i64 [ %conv447, %cond.true441 ], [ %68, %cond.end503 ], [ -1, %cond.false459 ], [ -1, %cond.true465 ], [ -1, %cond.true454 ]
  %bf.load513 = load i32* %48, align 8
  %bf.clear514 = and i32 %bf.load513, 65535
  %cmp515 = icmp eq i32 %bf.clear514, 66
  br i1 %cmp515, label %cond.false525, label %cond.true517

cond.true517:                                     ; preds = %cond.end511
  %bf.lshr519 = lshr i32 %bf.load513, 16
  %bf.clear520 = and i32 %bf.lshr519, 255
  %idxprom521894 = zext i32 %bf.clear520 to i64
  %arrayidx522 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom521894
  %69 = load i8* %arrayidx522, align 1, !tbaa !17
  %conv524 = zext i8 %69 to i64
  br label %cond.end589

cond.false525:                                    ; preds = %cond.end511
  %arrayidx527 = getelementptr inbounds %struct.rtx_def* %cond112, i64 0, i32 1, i64 1
  %rtmem528 = bitcast %union.rtunion_def* %arrayidx527 to %struct.mem_attrs**
  %70 = load %struct.mem_attrs** %rtmem528, align 8, !tbaa !1
  %cmp529 = icmp eq %struct.mem_attrs* %70, null
  br i1 %cmp529, label %cond.false537, label %cond.true531

cond.true531:                                     ; preds = %cond.false525
  %size535 = getelementptr inbounds %struct.mem_attrs* %70, i64 0, i32 3
  %71 = load %struct.rtx_def** %size535, align 8, !tbaa !40
  %tobool536 = icmp eq %struct.rtx_def* %71, null
  br i1 %tobool536, label %cond.end589, label %cond.true559

cond.false537:                                    ; preds = %cond.false525
  %bf.lshr539 = lshr i32 %bf.load513, 16
  %bf.clear540 = and i32 %bf.lshr539, 255
  %cmp541 = icmp eq i32 %bf.clear540, 51
  br i1 %cmp541, label %cond.end589, label %cond.true543

cond.true543:                                     ; preds = %cond.false537
  %idxprom547892 = zext i32 %bf.clear540 to i64
  %arrayidx548 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom547892
  %72 = load i8* %arrayidx548, align 1, !tbaa !17
  %conv549 = zext i8 %72 to i64
  %call550 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv549) #4
  %tobool551 = icmp eq %struct.rtx_def* %call550, null
  br i1 %tobool551, label %cond.end589, label %cond.true553

cond.true553:                                     ; preds = %cond.true543
  %.pre1028 = load %struct.mem_attrs** %rtmem528, align 8, !tbaa !1
  %cmp557 = icmp eq %struct.mem_attrs* %.pre1028, null
  br i1 %cmp557, label %cond.false564, label %cond.true559

cond.true559:                                     ; preds = %cond.true531, %cond.true553
  %73 = phi %struct.mem_attrs* [ %.pre1028, %cond.true553 ], [ %70, %cond.true531 ]
  %size563 = getelementptr inbounds %struct.mem_attrs* %73, i64 0, i32 3
  %74 = load %struct.rtx_def** %size563, align 8, !tbaa !40
  br label %cond.end581

cond.false564:                                    ; preds = %cond.true553
  %bf.load565 = load i32* %48, align 8
  %bf.lshr566 = lshr i32 %bf.load565, 16
  %bf.clear567 = and i32 %bf.lshr566, 255
  %idxprom574893 = zext i32 %bf.clear567 to i64
  %arrayidx575 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom574893
  %75 = load i8* %arrayidx575, align 1, !tbaa !17
  %conv576 = zext i8 %75 to i64
  %call577 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv576) #4
  br label %cond.end581

cond.end581:                                      ; preds = %cond.false564, %cond.true559
  %cond582 = phi %struct.rtx_def* [ %74, %cond.true559 ], [ %call577, %cond.false564 ]
  %rtwint585 = getelementptr inbounds %struct.rtx_def* %cond582, i64 0, i32 1, i64 0, i32 0
  %76 = load i64* %rtwint585, align 8, !tbaa !25
  br label %cond.end589

cond.end589:                                      ; preds = %cond.true531, %cond.true543, %cond.false537, %cond.end581, %cond.true517
  %cond590 = phi i64 [ %conv524, %cond.true517 ], [ %76, %cond.end581 ], [ -1, %cond.false537 ], [ -1, %cond.true543 ], [ -1, %cond.true531 ]
  %tobool591 = icmp ne %struct.rtx_def* %moffsetx.0, null
  br i1 %tobool591, label %if.then592, label %if.end599

if.then592:                                       ; preds = %cond.end589
  %rtwint595 = getelementptr inbounds %struct.rtx_def* %moffsetx.0, i64 0, i32 1, i64 0, i32 0
  %77 = load i64* %rtwint595, align 8, !tbaa !25
  %add = add nsw i64 %77, %offsetx.0
  %sub = sub nsw i64 %cond512, %77
  br label %if.end599

if.end599:                                        ; preds = %if.then592, %cond.end589
  %offsetx.1 = phi i64 [ %add, %if.then592 ], [ %offsetx.0, %cond.end589 ]
  %sizex.0 = phi i64 [ %sub, %if.then592 ], [ %cond512, %cond.end589 ]
  %tobool600 = icmp ne %struct.rtx_def* %moffsety.0, null
  br i1 %tobool600, label %if.then601, label %if.end610

if.then601:                                       ; preds = %if.end599
  %rtwint604 = getelementptr inbounds %struct.rtx_def* %moffsety.0, i64 0, i32 1, i64 0, i32 0
  %78 = load i64* %rtwint604, align 8, !tbaa !25
  %add605 = add nsw i64 %78, %offsety.0
  %sub609 = sub nsw i64 %cond590, %78
  br label %if.end610

if.end610:                                        ; preds = %if.then601, %if.end599
  %offsety.1 = phi i64 [ %add605, %if.then601 ], [ %offsety.0, %if.end599 ]
  %sizey.0 = phi i64 [ %sub609, %if.then601 ], [ %cond590, %if.end599 ]
  %79 = load %struct.mem_attrs** %rtmem, align 8, !tbaa !1
  %cmp614 = icmp eq %struct.mem_attrs* %79, null
  br i1 %cmp614, label %cond.false622, label %cond.true616

cond.true616:                                     ; preds = %if.end610
  %size620 = getelementptr inbounds %struct.mem_attrs* %79, i64 0, i32 3
  %80 = load %struct.rtx_def** %size620, align 8, !tbaa !40
  %tobool621 = icmp ne %struct.rtx_def* %80, null
  %or.cond750 = and i1 %tobool621, %tobool591
  br i1 %or.cond750, label %cond.true646, label %if.end673

cond.false622:                                    ; preds = %if.end610
  %81 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 0
  %bf.load623 = load i32* %81, align 8
  %bf.lshr624 = lshr i32 %bf.load623, 16
  %bf.clear625 = and i32 %bf.lshr624, 255
  %cmp626 = icmp eq i32 %bf.clear625, 51
  br i1 %cmp626, label %if.end673, label %cond.true628

cond.true628:                                     ; preds = %cond.false622
  %idxprom632890 = zext i32 %bf.clear625 to i64
  %arrayidx633 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom632890
  %82 = load i8* %arrayidx633, align 1, !tbaa !17
  %conv634 = zext i8 %82 to i64
  %call635 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv634) #4
  %tobool636 = icmp ne %struct.rtx_def* %call635, null
  %or.cond748 = and i1 %tobool636, %tobool591
  br i1 %or.cond748, label %if.then640, label %if.end673

if.then640:                                       ; preds = %cond.true628
  %.pre1030 = load %struct.mem_attrs** %rtmem, align 8, !tbaa !1
  %cmp644 = icmp eq %struct.mem_attrs* %.pre1030, null
  br i1 %cmp644, label %cond.false651, label %cond.true646

cond.true646:                                     ; preds = %cond.true616, %if.then640
  %83 = phi %struct.mem_attrs* [ %.pre1030, %if.then640 ], [ %79, %cond.true616 ]
  %size650 = getelementptr inbounds %struct.mem_attrs* %83, i64 0, i32 3
  %84 = load %struct.rtx_def** %size650, align 8, !tbaa !40
  br label %cond.end668

cond.false651:                                    ; preds = %if.then640
  %85 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 0
  %bf.load652 = load i32* %85, align 8
  %bf.lshr653 = lshr i32 %bf.load652, 16
  %bf.clear654 = and i32 %bf.lshr653, 255
  %idxprom661891 = zext i32 %bf.clear654 to i64
  %arrayidx662 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom661891
  %86 = load i8* %arrayidx662, align 1, !tbaa !17
  %conv663 = zext i8 %86 to i64
  %call664 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv663) #4
  br label %cond.end668

cond.end668:                                      ; preds = %cond.false651, %cond.true646
  %cond669 = phi %struct.rtx_def* [ %84, %cond.true646 ], [ %call664, %cond.false651 ]
  %rtwint672 = getelementptr inbounds %struct.rtx_def* %cond669, i64 0, i32 1, i64 0, i32 0
  %87 = load i64* %rtwint672, align 8, !tbaa !25
  br label %if.end673

if.end673:                                        ; preds = %cond.false622, %cond.end668, %cond.true628, %cond.true616
  %sizex.1 = phi i64 [ %87, %cond.end668 ], [ %sizex.0, %cond.true616 ], [ %sizex.0, %cond.true628 ], [ %sizex.0, %cond.false622 ]
  %88 = load %struct.mem_attrs** %rtmem6, align 8, !tbaa !1
  %cmp677 = icmp eq %struct.mem_attrs* %88, null
  br i1 %cmp677, label %cond.false685, label %cond.true679

cond.true679:                                     ; preds = %if.end673
  %size683 = getelementptr inbounds %struct.mem_attrs* %88, i64 0, i32 3
  %89 = load %struct.rtx_def** %size683, align 8, !tbaa !40
  %tobool684 = icmp ne %struct.rtx_def* %89, null
  %or.cond754 = and i1 %tobool684, %tobool600
  br i1 %or.cond754, label %cond.true709, label %if.end736

cond.false685:                                    ; preds = %if.end673
  %90 = getelementptr inbounds %struct.rtx_def* %y, i64 0, i32 0
  %bf.load686 = load i32* %90, align 8
  %bf.lshr687 = lshr i32 %bf.load686, 16
  %bf.clear688 = and i32 %bf.lshr687, 255
  %cmp689 = icmp eq i32 %bf.clear688, 51
  br i1 %cmp689, label %if.end736, label %cond.true691

cond.true691:                                     ; preds = %cond.false685
  %idxprom695888 = zext i32 %bf.clear688 to i64
  %arrayidx696 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom695888
  %91 = load i8* %arrayidx696, align 1, !tbaa !17
  %conv697 = zext i8 %91 to i64
  %call698 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv697) #4
  %tobool699 = icmp ne %struct.rtx_def* %call698, null
  %or.cond752 = and i1 %tobool699, %tobool600
  br i1 %or.cond752, label %if.then703, label %if.end736

if.then703:                                       ; preds = %cond.true691
  %.pre1029 = load %struct.mem_attrs** %rtmem6, align 8, !tbaa !1
  %cmp707 = icmp eq %struct.mem_attrs* %.pre1029, null
  br i1 %cmp707, label %cond.false714, label %cond.true709

cond.true709:                                     ; preds = %cond.true679, %if.then703
  %92 = phi %struct.mem_attrs* [ %.pre1029, %if.then703 ], [ %88, %cond.true679 ]
  %size713 = getelementptr inbounds %struct.mem_attrs* %92, i64 0, i32 3
  %93 = load %struct.rtx_def** %size713, align 8, !tbaa !40
  br label %cond.end731

cond.false714:                                    ; preds = %if.then703
  %94 = getelementptr inbounds %struct.rtx_def* %y, i64 0, i32 0
  %bf.load715 = load i32* %94, align 8
  %bf.lshr716 = lshr i32 %bf.load715, 16
  %bf.clear717 = and i32 %bf.lshr716, 255
  %idxprom724889 = zext i32 %bf.clear717 to i64
  %arrayidx725 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom724889
  %95 = load i8* %arrayidx725, align 1, !tbaa !17
  %conv726 = zext i8 %95 to i64
  %call727 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv726) #4
  br label %cond.end731

cond.end731:                                      ; preds = %cond.false714, %cond.true709
  %cond732 = phi %struct.rtx_def* [ %93, %cond.true709 ], [ %call727, %cond.false714 ]
  %rtwint735 = getelementptr inbounds %struct.rtx_def* %cond732, i64 0, i32 1, i64 0, i32 0
  %96 = load i64* %rtwint735, align 8, !tbaa !25
  br label %if.end736

if.end736:                                        ; preds = %cond.false685, %cond.end731, %cond.true691, %cond.true679
  %sizey.1 = phi i64 [ %96, %cond.end731 ], [ %sizey.0, %cond.true679 ], [ %sizey.0, %cond.true691 ], [ %sizey.0, %cond.false685 ]
  %cmp737 = icmp sgt i64 %offsetx.1, %offsety.1
  %sizey.1.sizex.1 = select i1 %cmp737, i64 %sizey.1, i64 %sizex.1
  %cmp741 = icmp sgt i64 %sizey.1.sizex.1, -1
  br i1 %cmp741, label %land.rhs743, label %land.end747

land.rhs743:                                      ; preds = %if.end736
  %offsetx.1.offsety.1 = select i1 %cmp737, i64 %offsetx.1, i64 %offsety.1
  %offsety.1.offsetx.1 = select i1 %cmp737, i64 %offsety.1, i64 %offsetx.1
  %add744 = add nsw i64 %sizey.1.sizex.1, %offsety.1.offsetx.1
  %cmp745 = icmp sgt i64 %offsetx.1.offsety.1, %add744
  br label %land.end747

land.end747:                                      ; preds = %land.rhs743, %if.end736
  %97 = phi i1 [ false, %if.end736 ], [ %cmp745, %land.rhs743 ]
  %land.ext = zext i1 %97 to i32
  br label %return

return:                                           ; preds = %found.i, %do.body.i915, %do.body.i956, %land.lhs.true.i, %land.lhs.true.i966, %cond.end, %land.lhs.true122, %if.end73, %lor.lhs.false81, %cond.end14, %land.end747, %lor.end435
  %retval.0 = phi i32 [ %land.ext, %land.end747 ], [ %lor.ext, %lor.end435 ], [ 0, %cond.end14 ], [ 0, %lor.lhs.false81 ], [ 0, %if.end73 ], [ 1, %land.lhs.true122 ], [ 0, %cond.end ], [ 0, %land.lhs.true.i ], [ 0, %land.lhs.true.i966 ], [ 0, %do.body.i956 ], [ 0, %do.body.i915 ], [ 1, %found.i ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @find_base_term(%struct.rtx_def* %x) #0 {
entry:
  br label %tailrecurse

tailrecurse:                                      ; preds = %if.end109, %if.end98, %land.lhs.true57, %land.lhs.true57, %land.lhs.true57, %land.lhs.true57, %land.lhs.true57, %land.lhs.true57, %land.lhs.true57, %land.lhs.true57, %if.then189, %sw.bb20, %sw.bb16, %entry
  %x.tr = phi %struct.rtx_def* [ %x, %entry ], [ %10, %sw.bb16 ], [ %11, %sw.bb20 ], [ %31, %if.then189 ], [ %17, %land.lhs.true57 ], [ %17, %land.lhs.true57 ], [ %17, %land.lhs.true57 ], [ %17, %land.lhs.true57 ], [ %17, %land.lhs.true57 ], [ %17, %land.lhs.true57 ], [ %17, %land.lhs.true57 ], [ %17, %land.lhs.true57 ], [ %16, %if.end98 ], [ %17, %if.end109 ]
  %call = tail call %struct.rtx_def* @ix86_find_base_term(%struct.rtx_def* %x.tr) #4
  %0 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %return.loopexit280 [
    i32 61, label %sw.bb
    i32 122, label %sw.bb5
    i32 134, label %sw.bb16
    i32 97, label %sw.bb16
    i32 96, label %sw.bb16
    i32 99, label %sw.bb16
    i32 98, label %sw.bb16
    i32 100, label %sw.bb16
    i32 101, label %sw.bb16
    i32 121, label %sw.bb20
    i32 120, label %sw.bb20
    i32 60, label %sw.bb25
    i32 58, label %sw.bb34
    i32 135, label %sw.bb48
    i32 75, label %sw.bb48
    i32 76, label %sw.bb48
    i32 83, label %sw.bb173
    i32 68, label %return
    i32 67, label %return
    i32 70, label %sw.bb196
  ]

sw.bb:                                            ; preds = %tailrecurse
  %arrayidx = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %1 = load i32* %rtuint, align 4, !tbaa !16
  %2 = load i32* @reg_base_value_size, align 4, !tbaa !16
  %cmp = icmp ult i32 %1, %2
  br i1 %cmp, label %cond.true, label %return

cond.true:                                        ; preds = %sw.bb
  %idxprom = zext i32 %1 to i64
  %3 = load %struct.rtx_def*** @reg_base_value, align 8, !tbaa !1
  %arrayidx4 = getelementptr inbounds %struct.rtx_def** %3, i64 %idxprom
  %4 = load %struct.rtx_def** %arrayidx4, align 8, !tbaa !1
  br label %return

sw.bb5:                                           ; preds = %tailrecurse
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear7 = and i32 %bf.lshr, 255
  %idxprom8258 = zext i32 %bf.clear7 to i64
  %arrayidx9 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom8258
  %5 = load i8* %arrayidx9, align 1, !tbaa !17
  %6 = load i32* @target_flags, align 4, !tbaa !16
  %and = lshr i32 %6, 25
  %7 = and i32 %and, 1
  %8 = or i32 %7, 4
  %idxprom11259 = zext i32 %8 to i64
  %arrayidx12 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom11259
  %9 = load i8* %arrayidx12, align 1, !tbaa !17
  %cmp14 = icmp ult i8 %5, %9
  br i1 %cmp14, label %return, label %sw.bb16

sw.bb16:                                          ; preds = %sw.bb5, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse
  %arrayidx18 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx18 to %struct.rtx_def**
  %10 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  br label %tailrecurse

sw.bb20:                                          ; preds = %tailrecurse, %tailrecurse
  %arrayidx22 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 0
  %rtx23 = bitcast %union.rtunion_def* %arrayidx22 to %struct.rtx_def**
  %11 = load %struct.rtx_def** %rtx23, align 8, !tbaa !1
  br label %tailrecurse

sw.bb25:                                          ; preds = %tailrecurse
  %arrayidx27 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 0
  %rt_cselib = bitcast %union.rtunion_def* %arrayidx27 to %struct.cselib_val_struct**
  %12 = load %struct.cselib_val_struct** %rt_cselib, align 8, !tbaa !1
  %locs = getelementptr inbounds %struct.cselib_val_struct* %12, i64 0, i32 2
  %l.0269 = load %struct.elt_loc_list** %locs, align 8
  %tobool28270 = icmp eq %struct.elt_loc_list* %l.0269, null
  br i1 %tobool28270, label %return, label %for.body

for.cond:                                         ; preds = %for.body
  %next = getelementptr inbounds %struct.elt_loc_list* %l.0271, i64 0, i32 0
  %l.0 = load %struct.elt_loc_list** %next, align 8
  %tobool28 = icmp eq %struct.elt_loc_list* %l.0, null
  br i1 %tobool28, label %return, label %for.body

for.body:                                         ; preds = %sw.bb25, %for.cond
  %l.0271 = phi %struct.elt_loc_list* [ %l.0, %for.cond ], [ %l.0269, %sw.bb25 ]
  %loc = getelementptr inbounds %struct.elt_loc_list* %l.0271, i64 0, i32 1
  %13 = load %struct.rtx_def** %loc, align 8, !tbaa !34
  %call29 = tail call fastcc %struct.rtx_def* @find_base_term(%struct.rtx_def* %13)
  %cmp30 = icmp eq %struct.rtx_def* %call29, null
  br i1 %cmp30, label %for.cond, label %return

sw.bb34:                                          ; preds = %tailrecurse
  %arrayidx36 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 0
  %rtx37 = bitcast %union.rtunion_def* %arrayidx36 to %struct.rtx_def**
  %14 = load %struct.rtx_def** %rtx37, align 8, !tbaa !1
  %15 = getelementptr inbounds %struct.rtx_def* %14, i64 0, i32 0
  %bf.load38 = load i32* %15, align 8
  %bf.clear39 = and i32 %bf.load38, 65535
  %bf.clear39.off = add i32 %bf.clear39, -75
  %switch = icmp ult i32 %bf.clear39.off, 2
  br i1 %switch, label %sw.bb48, label %return

sw.bb48:                                          ; preds = %sw.bb34, %tailrecurse, %tailrecurse, %tailrecurse
  %x.addr.0 = phi %struct.rtx_def* [ %call, %tailrecurse ], [ %call, %tailrecurse ], [ %call, %tailrecurse ], [ %14, %sw.bb34 ]
  %fld49 = getelementptr inbounds %struct.rtx_def* %x.addr.0, i64 0, i32 1
  %rtx51 = bitcast [1 x %union.rtunion_def]* %fld49 to %struct.rtx_def**
  %16 = load %struct.rtx_def** %rtx51, align 8, !tbaa !1
  %arrayidx53 = getelementptr inbounds %struct.rtx_def* %x.addr.0, i64 0, i32 1, i64 1
  %rtx54 = bitcast %union.rtunion_def* %arrayidx53 to %struct.rtx_def**
  %17 = load %struct.rtx_def** %rtx54, align 8, !tbaa !1
  %18 = load %struct.rtx_def** @pic_offset_table_rtx, align 8, !tbaa !1
  %cmp55 = icmp eq %struct.rtx_def* %16, %18
  br i1 %cmp55, label %land.lhs.true57, label %if.end98

land.lhs.true57:                                  ; preds = %sw.bb48
  %19 = getelementptr inbounds %struct.rtx_def* %17, i64 0, i32 0
  %bf.load58 = load i32* %19, align 8
  %bf.clear59 = and i32 %bf.load58, 65535
  switch i32 %bf.clear59, label %if.end98 [
    i32 67, label %tailrecurse
    i32 68, label %tailrecurse
    i32 54, label %tailrecurse
    i32 55, label %tailrecurse
    i32 58, label %tailrecurse
    i32 134, label %tailrecurse
    i32 56, label %tailrecurse
    i32 140, label %tailrecurse
  ]

if.end98:                                         ; preds = %land.lhs.true57, %sw.bb48
  %20 = getelementptr inbounds %struct.rtx_def* %16, i64 0, i32 0
  %bf.load99 = load i32* %20, align 8
  %21 = and i32 %bf.load99, -2147418113
  %22 = icmp eq i32 %21, -2147483587
  br i1 %22, label %tailrecurse, label %if.end109

if.end109:                                        ; preds = %if.end98
  %23 = getelementptr inbounds %struct.rtx_def* %17, i64 0, i32 0
  %bf.load110 = load i32* %23, align 8
  %24 = and i32 %bf.load110, -2147418113
  %25 = icmp eq i32 %24, -2147483587
  br i1 %25, label %tailrecurse, label %if.end120

if.end120:                                        ; preds = %if.end109
  %call121 = tail call fastcc %struct.rtx_def* @find_base_term(%struct.rtx_def* %16)
  %call122 = tail call fastcc %struct.rtx_def* @find_base_term(%struct.rtx_def* %17)
  %cmp123 = icmp eq %struct.rtx_def* %call121, null
  br i1 %cmp123, label %if.end147, label %land.lhs.true125

land.lhs.true125:                                 ; preds = %if.end120
  %26 = getelementptr inbounds %struct.rtx_def* %call121, i64 0, i32 0
  %bf.load126 = load i32* %26, align 8
  %bf.clear127 = and i32 %bf.load126, 65535
  switch i32 %bf.clear127, label %if.end147 [
    i32 68, label %return
    i32 67, label %return
    i32 25, label %land.lhs.true140
  ]

land.lhs.true140:                                 ; preds = %land.lhs.true125
  %bf.clear143 = and i32 %bf.load126, 16711680
  %cmp144 = icmp eq i32 %bf.clear143, 0
  br i1 %cmp144, label %if.end147, label %return

if.end147:                                        ; preds = %land.lhs.true125, %land.lhs.true140, %if.end120
  %cmp148 = icmp eq %struct.rtx_def* %call122, null
  br i1 %cmp148, label %if.end172, label %land.lhs.true150

land.lhs.true150:                                 ; preds = %if.end147
  %27 = getelementptr inbounds %struct.rtx_def* %call122, i64 0, i32 0
  %bf.load151 = load i32* %27, align 8
  %bf.clear152 = and i32 %bf.load151, 65535
  switch i32 %bf.clear152, label %if.end172 [
    i32 68, label %return
    i32 67, label %return
    i32 25, label %land.lhs.true165
  ]

land.lhs.true165:                                 ; preds = %land.lhs.true150
  %bf.clear168 = and i32 %bf.load151, 16711680
  %cmp169 = icmp eq i32 %bf.clear168, 0
  br i1 %cmp169, label %if.end172, label %return

if.end172:                                        ; preds = %land.lhs.true150, %land.lhs.true165, %if.end147
  br label %return

sw.bb173:                                         ; preds = %tailrecurse
  %arrayidx175 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 1
  %rtx176 = bitcast %union.rtunion_def* %arrayidx175 to %struct.rtx_def**
  %28 = load %struct.rtx_def** %rtx176, align 8, !tbaa !1
  %29 = getelementptr inbounds %struct.rtx_def* %28, i64 0, i32 0
  %bf.load177 = load i32* %29, align 8
  %bf.clear178 = and i32 %bf.load177, 65535
  %cmp179 = icmp eq i32 %bf.clear178, 54
  br i1 %cmp179, label %land.lhs.true181, label %return

land.lhs.true181:                                 ; preds = %sw.bb173
  %rtwint = getelementptr inbounds %struct.rtx_def* %28, i64 0, i32 1, i64 0, i32 0
  %30 = load i64* %rtwint, align 8, !tbaa !25
  %cmp187 = icmp eq i64 %30, 0
  br i1 %cmp187, label %return, label %if.then189

if.then189:                                       ; preds = %land.lhs.true181
  %arrayidx191 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 0
  %rtx192 = bitcast %union.rtunion_def* %arrayidx191 to %struct.rtx_def**
  %31 = load %struct.rtx_def** %rtx192, align 8, !tbaa !1
  br label %tailrecurse

sw.bb196:                                         ; preds = %tailrecurse
  %32 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 3), align 8, !tbaa !1
  %arrayidx198 = getelementptr inbounds %struct.rtx_def* %32, i64 0, i32 1, i64 0
  %rtuint199 = bitcast %union.rtunion_def* %arrayidx198 to i32*
  %33 = load i32* %rtuint199, align 4, !tbaa !16
  %34 = load i32* @reg_base_value_size, align 4, !tbaa !16
  %cmp200 = icmp ult i32 %33, %34
  br i1 %cmp200, label %cond.true202, label %return

cond.true202:                                     ; preds = %sw.bb196
  %idxprom206 = zext i32 %33 to i64
  %35 = load %struct.rtx_def*** @reg_base_value, align 8, !tbaa !1
  %arrayidx207 = getelementptr inbounds %struct.rtx_def** %35, i64 %idxprom206
  %36 = load %struct.rtx_def** %arrayidx207, align 8, !tbaa !1
  br label %return

return.loopexit280:                               ; preds = %tailrecurse
  br label %return

return:                                           ; preds = %for.body, %for.cond, %sw.bb34, %tailrecurse, %tailrecurse, %sw.bb173, %land.lhs.true181, %sw.bb5, %return.loopexit280, %sw.bb25, %cond.true202, %sw.bb196, %land.lhs.true165, %land.lhs.true150, %land.lhs.true150, %land.lhs.true140, %land.lhs.true125, %land.lhs.true125, %cond.true, %sw.bb, %if.end172
  %retval.0 = phi %struct.rtx_def* [ null, %if.end172 ], [ %4, %cond.true ], [ null, %sw.bb ], [ %call121, %land.lhs.true125 ], [ %call121, %land.lhs.true125 ], [ %call121, %land.lhs.true140 ], [ %call122, %land.lhs.true150 ], [ %call122, %land.lhs.true150 ], [ %call122, %land.lhs.true165 ], [ %36, %cond.true202 ], [ null, %sw.bb196 ], [ null, %sw.bb25 ], [ null, %return.loopexit280 ], [ null, %sw.bb34 ], [ %call, %tailrecurse ], [ %call, %tailrecurse ], [ null, %sw.bb173 ], [ null, %land.lhs.true181 ], [ null, %sw.bb5 ], [ %call29, %for.body ], [ null, %for.cond ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @base_alias_check(%struct.rtx_def* %x, %struct.rtx_def* %y, i32 %x_mode, i32 %y_mode) #0 {
entry:
  %call = tail call fastcc %struct.rtx_def* @find_base_term(%struct.rtx_def* %x)
  %call1 = tail call fastcc %struct.rtx_def* @find_base_term(%struct.rtx_def* %y)
  %cmp = icmp eq %struct.rtx_def* %call, null
  br i1 %cmp, label %if.then, label %if.end9

if.then:                                          ; preds = %entry
  %0 = load i32* @flag_expensive_optimizations, align 4, !tbaa !16
  %tobool = icmp eq i32 %0, 0
  br i1 %tobool, label %return, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then
  %call2 = tail call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %x)
  %cmp3 = icmp eq %struct.rtx_def* %call2, %x
  br i1 %cmp3, label %return, label %if.end

if.end:                                           ; preds = %lor.lhs.false
  %call5 = tail call fastcc %struct.rtx_def* @find_base_term(%struct.rtx_def* %call2)
  %cmp6 = icmp eq %struct.rtx_def* %call5, null
  br i1 %cmp6, label %return, label %if.end9

if.end9:                                          ; preds = %if.end, %entry
  %x_base.0 = phi %struct.rtx_def* [ %call5, %if.end ], [ %call, %entry ]
  %cmp10 = icmp eq %struct.rtx_def* %call1, null
  br i1 %cmp10, label %if.then11, label %if.end22

if.then11:                                        ; preds = %if.end9
  %1 = load i32* @flag_expensive_optimizations, align 4, !tbaa !16
  %tobool12 = icmp eq i32 %1, 0
  br i1 %tobool12, label %return, label %lor.lhs.false13

lor.lhs.false13:                                  ; preds = %if.then11
  %call14 = tail call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %y)
  %cmp15 = icmp eq %struct.rtx_def* %call14, %y
  br i1 %cmp15, label %return, label %if.end17

if.end17:                                         ; preds = %lor.lhs.false13
  %call18 = tail call fastcc %struct.rtx_def* @find_base_term(%struct.rtx_def* %call14)
  %cmp19 = icmp eq %struct.rtx_def* %call18, null
  br i1 %cmp19, label %return, label %if.end22

if.end22:                                         ; preds = %if.end17, %if.end9
  %y_base.0 = phi %struct.rtx_def* [ %call18, %if.end17 ], [ %call1, %if.end9 ]
  %call23 = tail call i32 @rtx_equal_p(%struct.rtx_def* %x_base.0, %struct.rtx_def* %y_base.0) #4
  %tobool24 = icmp eq i32 %call23, 0
  br i1 %tobool24, label %if.end26, label %return

if.end26:                                         ; preds = %if.end22
  %2 = getelementptr inbounds %struct.rtx_def* %x_base.0, i64 0, i32 0
  %bf.load = load i32* %2, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp27 = icmp eq i32 %bf.clear, 25
  br i1 %cmp27, label %land.lhs.true93, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end26
  %3 = getelementptr inbounds %struct.rtx_def* %y_base.0, i64 0, i32 0
  %bf.load28 = load i32* %3, align 8
  %bf.clear29 = and i32 %bf.load28, 65535
  %cmp30 = icmp eq i32 %bf.clear29, 25
  br i1 %cmp30, label %lor.lhs.false99, label %if.then31

if.then31:                                        ; preds = %land.lhs.true
  %4 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 0
  %bf.load32 = load i32* %4, align 8
  %bf.clear33 = and i32 %bf.load32, 65535
  %cmp34 = icmp eq i32 %bf.clear33, 83
  br i1 %cmp34, label %land.lhs.true35, label %if.end59

land.lhs.true35:                                  ; preds = %if.then31
  %5 = getelementptr inbounds %struct.rtx_def* %y, i64 0, i32 0
  %bf.load36 = load i32* %5, align 8
  %bf.clear37 = and i32 %bf.load36, 65535
  %cmp38 = icmp eq i32 %bf.clear37, 83
  br i1 %cmp38, label %return, label %land.lhs.true44

land.lhs.true44:                                  ; preds = %land.lhs.true35
  %arrayidx = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 1
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %6 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %7 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 0
  %bf.load45 = load i32* %7, align 8
  %bf.clear46 = and i32 %bf.load45, 65535
  %cmp47 = icmp eq i32 %bf.clear46, 54
  br i1 %cmp47, label %lor.lhs.false48, label %return

lor.lhs.false48:                                  ; preds = %land.lhs.true44
  %idxprom = sext i32 %y_mode to i64
  %arrayidx49 = getelementptr inbounds [59 x i8]* @mode_unit_size, i64 0, i64 %idxprom
  %8 = load i8* %arrayidx49, align 1, !tbaa !17
  %conv50 = zext i8 %8 to i64
  %rtwint = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1, i64 0, i32 0
  %9 = load i64* %rtwint, align 8, !tbaa !25
  %sub = sub nsw i64 0, %9
  %cmp56 = icmp slt i64 %conv50, %sub
  br i1 %cmp56, label %return, label %if.end59

if.end59:                                         ; preds = %if.then31, %lor.lhs.false48
  %10 = getelementptr inbounds %struct.rtx_def* %y, i64 0, i32 0
  %bf.load60 = load i32* %10, align 8
  %bf.clear61 = and i32 %bf.load60, 65535
  %cmp62 = icmp eq i32 %bf.clear61, 83
  br i1 %cmp62, label %land.lhs.true64, label %if.end87

land.lhs.true64:                                  ; preds = %if.end59
  %arrayidx66 = getelementptr inbounds %struct.rtx_def* %y, i64 0, i32 1, i64 1
  %rtx67 = bitcast %union.rtunion_def* %arrayidx66 to %struct.rtx_def**
  %11 = load %struct.rtx_def** %rtx67, align 8, !tbaa !1
  %12 = getelementptr inbounds %struct.rtx_def* %11, i64 0, i32 0
  %bf.load68 = load i32* %12, align 8
  %bf.clear69 = and i32 %bf.load68, 65535
  %cmp70 = icmp eq i32 %bf.clear69, 54
  br i1 %cmp70, label %lor.lhs.false72, label %return

lor.lhs.false72:                                  ; preds = %land.lhs.true64
  %idxprom73 = sext i32 %x_mode to i64
  %arrayidx74 = getelementptr inbounds [59 x i8]* @mode_unit_size, i64 0, i64 %idxprom73
  %13 = load i8* %arrayidx74, align 1, !tbaa !17
  %conv76 = zext i8 %13 to i64
  %rtwint82 = getelementptr inbounds %struct.rtx_def* %11, i64 0, i32 1, i64 0, i32 0
  %14 = load i64* %rtwint82, align 8, !tbaa !25
  %sub83 = sub nsw i64 0, %14
  %cmp84 = icmp slt i64 %conv76, %sub83
  br i1 %cmp84, label %return, label %if.end87

if.end87:                                         ; preds = %lor.lhs.false72, %if.end59
  br label %return

land.lhs.true93:                                  ; preds = %if.end26
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear95 = and i32 %bf.lshr, 255
  %15 = load i32* @target_flags, align 4, !tbaa !16
  %and = lshr i32 %15, 25
  %16 = and i32 %and, 1
  %17 = or i32 %16, 4
  %cmp97 = icmp eq i32 %bf.clear95, %17
  br i1 %cmp97, label %return, label %lor.lhs.false99

lor.lhs.false99:                                  ; preds = %land.lhs.true, %land.lhs.true93
  %18 = getelementptr inbounds %struct.rtx_def* %y_base.0, i64 0, i32 0
  %bf.load100 = load i32* %18, align 8
  %bf.clear101 = and i32 %bf.load100, 65535
  %cmp102 = icmp eq i32 %bf.clear101, 25
  br i1 %cmp102, label %land.lhs.true104, label %if.end114

land.lhs.true104:                                 ; preds = %lor.lhs.false99
  %bf.lshr106 = lshr i32 %bf.load100, 16
  %bf.clear107 = and i32 %bf.lshr106, 255
  %19 = load i32* @target_flags, align 4, !tbaa !16
  %and108 = lshr i32 %19, 25
  %20 = and i32 %and108, 1
  %21 = or i32 %20, 4
  %cmp111 = icmp eq i32 %bf.clear107, %21
  br i1 %cmp111, label %return, label %if.end114

if.end114:                                        ; preds = %land.lhs.true104, %lor.lhs.false99
  %22 = load i32* @flag_argument_noalias, align 4, !tbaa !16
  %tobool115 = icmp eq i32 %22, 0
  br i1 %tobool115, label %return, label %if.end117

if.end117:                                        ; preds = %if.end114
  %cmp118 = icmp sgt i32 %22, 1
  br i1 %cmp118, label %return, label %if.end121

if.end121:                                        ; preds = %if.end117
  %bf.clear124 = and i32 %bf.load, 16711680
  %cmp125 = icmp eq i32 %bf.clear124, 0
  br i1 %cmp125, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.end121
  %bf.clear129 = and i32 %bf.load100, 16711680
  %phitmp = icmp ne i32 %bf.clear129, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end121
  %23 = phi i1 [ true, %if.end121 ], [ %phitmp, %land.rhs ]
  %lnot.ext = zext i1 %23 to i32
  br label %return

return:                                           ; preds = %if.end117, %if.end114, %land.lhs.true93, %land.lhs.true104, %lor.lhs.false72, %land.lhs.true64, %lor.lhs.false48, %land.lhs.true44, %land.lhs.true35, %if.end22, %if.end17, %lor.lhs.false13, %if.then11, %if.end, %lor.lhs.false, %if.then, %land.end, %if.end87
  %retval.0 = phi i32 [ 0, %if.end87 ], [ %lnot.ext, %land.end ], [ 1, %if.then ], [ 1, %lor.lhs.false ], [ 1, %if.end ], [ 1, %if.then11 ], [ 1, %lor.lhs.false13 ], [ 1, %if.end17 ], [ 1, %if.end22 ], [ 1, %land.lhs.true35 ], [ 1, %land.lhs.true44 ], [ 1, %lor.lhs.false48 ], [ 1, %land.lhs.true64 ], [ 1, %lor.lhs.false72 ], [ 0, %land.lhs.true104 ], [ 0, %land.lhs.true93 ], [ 1, %if.end114 ], [ 0, %if.end117 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @memrefs_conflict_p(i32 %xsize, %struct.rtx_def* %x, i32 %ysize, %struct.rtx_def* %y, i64 %c) #0 {
entry:
  br label %tailrecurse

tailrecurse:                                      ; preds = %if.then485, %if.then99, %if.end89, %if.then78, %if.then511, %if.then490, %if.end354, %if.end319, %if.end231, %if.then162, %if.then136, %if.then123, %if.then104, %entry
  %xsize.tr = phi i32 [ %xsize, %entry ], [ %xsize.tr, %if.then104 ], [ %xsize.tr, %if.then123 ], [ %xsize.tr, %if.then136 ], [ %xsize.tr, %if.then162 ], [ %conv236, %if.end231 ], [ %xsize.addr.0, %if.end319 ], [ %xsize.tr, %if.end354 ], [ %xsize.tr, %if.then490 ], [ %xsize.tr, %if.then511 ], [ %xsize.tr, %if.then78 ], [ %xsize.tr, %if.end89 ], [ %xsize.tr, %if.then99 ], [ %xsize.tr, %if.then485 ]
  %x.tr = phi %struct.rtx_def* [ %x, %entry ], [ %25, %if.then104 ], [ %x.addr.1, %if.then123 ], [ %25, %if.then136 ], [ %x.addr.1, %if.then162 ], [ %call199, %if.end231 ], [ %59, %if.end319 ], [ %x.addr.1, %if.end354 ], [ %call494, %if.then490 ], [ %x.addr.1, %if.then511 ], [ %25, %if.then78 ], [ %26, %if.end89 ], [ %25, %if.then99 ], [ %call494, %if.then485 ]
  %ysize.tr = phi i32 [ %ysize, %entry ], [ %ysize.tr, %if.then104 ], [ %ysize.tr, %if.then123 ], [ %ysize.tr, %if.then136 ], [ %ysize.tr, %if.then162 ], [ %conv242, %if.end231 ], [ %ysize.tr, %if.end319 ], [ %ysize.addr.0, %if.end354 ], [ %ysize.tr, %if.then490 ], [ %ysize.tr, %if.then511 ], [ %ysize.tr, %if.then78 ], [ %ysize.tr, %if.end89 ], [ %ysize.tr, %if.then99 ], [ %ysize.tr, %if.then485 ]
  %y.tr = phi %struct.rtx_def* [ %y, %entry ], [ %28, %if.then104 ], [ %28, %if.then123 ], [ %y.addr.1, %if.then136 ], [ %40, %if.then162 ], [ %call203, %if.end231 ], [ %y.addr.1, %if.end319 ], [ %63, %if.end354 ], [ %call498, %if.then490 ], [ %call515, %if.then511 ], [ %28, %if.then78 ], [ %29, %if.end89 ], [ %y.addr.1, %if.then99 ], [ %y.addr.1, %if.then485 ]
  %c.tr = phi i64 [ %c, %entry ], [ %add110, %if.then104 ], [ %add127, %if.then123 ], [ %sub140, %if.then136 ], [ %add166, %if.then162 ], [ %div246, %if.end231 ], [ %c.tr, %if.end319 ], [ %c.tr, %if.end354 ], [ %c.tr, %if.then490 ], [ %c.tr, %if.then511 ], [ %c.tr, %if.then78 ], [ %c.tr, %if.end89 ], [ %sub, %if.then99 ], [ %c.tr, %if.then485 ]
  %0 = getelementptr inbounds %struct.rtx_def* %x.tr, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 60
  br i1 %cmp, label %if.end.i, label %if.end

if.end.i:                                         ; preds = %tailrecurse
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %x.tr, i64 0, i32 1, i64 0
  %rt_cselib.i = bitcast %union.rtunion_def* %arrayidx.i to %struct.cselib_val_struct**
  %1 = load %struct.cselib_val_struct** %rt_cselib.i, align 8, !tbaa !1
  %locs.i = getelementptr inbounds %struct.cselib_val_struct* %1, i64 0, i32 2
  %l.088.i = load %struct.elt_loc_list** %locs.i, align 8
  %tobool89.i = icmp eq %struct.elt_loc_list* %l.088.i, null
  br i1 %tobool89.i, label %if.end, label %for.body.i

for.body.i:                                       ; preds = %if.end.i, %for.inc.i
  %l.090.i = phi %struct.elt_loc_list* [ %l.0.i, %for.inc.i ], [ %l.088.i, %if.end.i ]
  %loc.i = getelementptr inbounds %struct.elt_loc_list* %l.090.i, i64 0, i32 1
  %2 = load %struct.rtx_def** %loc.i, align 8, !tbaa !34
  %3 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 0
  %bf.load1.i = load i32* %3, align 8
  %bf.clear2.i = and i32 %bf.load1.i, 65535
  switch i32 %bf.clear2.i, label %for.inc.i [
    i32 67, label %if.end
    i32 68, label %if.end
    i32 54, label %if.end
    i32 55, label %if.end
    i32 58, label %if.end
    i32 134, label %if.end
    i32 56, label %if.end
    i32 140, label %if.end
  ]

for.inc.i:                                        ; preds = %for.body.i
  %next.i = getelementptr inbounds %struct.elt_loc_list* %l.090.i, i64 0, i32 0
  %l.0.i = load %struct.elt_loc_list** %next.i, align 8
  %tobool.i = icmp eq %struct.elt_loc_list* %l.0.i, null
  br i1 %tobool.i, label %for.body44.i, label %for.body.i

for.body44.i:                                     ; preds = %for.inc.i, %for.inc56.i
  %l.187.i = phi %struct.elt_loc_list* [ %l.1.i, %for.inc56.i ], [ %l.088.i, %for.inc.i ]
  %loc45.i = getelementptr inbounds %struct.elt_loc_list* %l.187.i, i64 0, i32 1
  %4 = load %struct.rtx_def** %loc45.i, align 8, !tbaa !34
  %5 = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 0
  %bf.load46.i = load i32* %5, align 8
  %bf.clear47.i = and i32 %bf.load46.i, 65535
  switch i32 %bf.clear47.i, label %if.end [
    i32 61, label %for.inc56.i
    i32 66, label %for.inc56.i
  ]

for.inc56.i:                                      ; preds = %for.body44.i, %for.body44.i
  %next57.i = getelementptr inbounds %struct.elt_loc_list* %l.187.i, i64 0, i32 0
  %l.1.i = load %struct.elt_loc_list** %next57.i, align 8
  %tobool43.i = icmp eq %struct.elt_loc_list* %l.1.i, null
  br i1 %tobool43.i, label %if.then61.i, label %for.body44.i

if.then61.i:                                      ; preds = %for.inc56.i
  %loc63.i = getelementptr inbounds %struct.elt_loc_list* %l.088.i, i64 0, i32 1
  %6 = load %struct.rtx_def** %loc63.i, align 8, !tbaa !34
  br label %if.end

if.end:                                           ; preds = %for.body.i, %for.body.i, %for.body.i, %for.body.i, %for.body.i, %for.body.i, %for.body.i, %for.body.i, %for.body44.i, %if.then61.i, %if.end.i, %tailrecurse
  %x.addr.0 = phi %struct.rtx_def* [ %x.tr, %tailrecurse ], [ %6, %if.then61.i ], [ %x.tr, %if.end.i ], [ %4, %for.body44.i ], [ %2, %for.body.i ], [ %2, %for.body.i ], [ %2, %for.body.i ], [ %2, %for.body.i ], [ %2, %for.body.i ], [ %2, %for.body.i ], [ %2, %for.body.i ], [ %2, %for.body.i ]
  %7 = getelementptr inbounds %struct.rtx_def* %y.tr, i64 0, i32 0
  %bf.load1 = load i32* %7, align 8
  %bf.clear2 = and i32 %bf.load1, 65535
  %cmp3 = icmp eq i32 %bf.clear2, 60
  br i1 %cmp3, label %if.end.i796, label %if.end6

if.end.i796:                                      ; preds = %if.end
  %arrayidx.i791 = getelementptr inbounds %struct.rtx_def* %y.tr, i64 0, i32 1, i64 0
  %rt_cselib.i792 = bitcast %union.rtunion_def* %arrayidx.i791 to %struct.cselib_val_struct**
  %8 = load %struct.cselib_val_struct** %rt_cselib.i792, align 8, !tbaa !1
  %locs.i793 = getelementptr inbounds %struct.cselib_val_struct* %8, i64 0, i32 2
  %l.088.i794 = load %struct.elt_loc_list** %locs.i793, align 8
  %tobool89.i795 = icmp eq %struct.elt_loc_list* %l.088.i794, null
  br i1 %tobool89.i795, label %if.end6, label %for.body.i802

for.body.i802:                                    ; preds = %if.end.i796, %for.inc.i806
  %l.090.i798 = phi %struct.elt_loc_list* [ %l.0.i804, %for.inc.i806 ], [ %l.088.i794, %if.end.i796 ]
  %loc.i799 = getelementptr inbounds %struct.elt_loc_list* %l.090.i798, i64 0, i32 1
  %9 = load %struct.rtx_def** %loc.i799, align 8, !tbaa !34
  %10 = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 0
  %bf.load1.i800 = load i32* %10, align 8
  %bf.clear2.i801 = and i32 %bf.load1.i800, 65535
  switch i32 %bf.clear2.i801, label %for.inc.i806 [
    i32 67, label %if.end6
    i32 68, label %if.end6
    i32 54, label %if.end6
    i32 55, label %if.end6
    i32 58, label %if.end6
    i32 134, label %if.end6
    i32 56, label %if.end6
    i32 140, label %if.end6
  ]

for.inc.i806:                                     ; preds = %for.body.i802
  %next.i803 = getelementptr inbounds %struct.elt_loc_list* %l.090.i798, i64 0, i32 0
  %l.0.i804 = load %struct.elt_loc_list** %next.i803, align 8
  %tobool.i805 = icmp eq %struct.elt_loc_list* %l.0.i804, null
  br i1 %tobool.i805, label %for.body44.i811, label %for.body.i802

for.body44.i811:                                  ; preds = %for.inc.i806, %for.inc56.i815
  %l.187.i807 = phi %struct.elt_loc_list* [ %l.1.i813, %for.inc56.i815 ], [ %l.088.i794, %for.inc.i806 ]
  %loc45.i808 = getelementptr inbounds %struct.elt_loc_list* %l.187.i807, i64 0, i32 1
  %11 = load %struct.rtx_def** %loc45.i808, align 8, !tbaa !34
  %12 = getelementptr inbounds %struct.rtx_def* %11, i64 0, i32 0
  %bf.load46.i809 = load i32* %12, align 8
  %bf.clear47.i810 = and i32 %bf.load46.i809, 65535
  switch i32 %bf.clear47.i810, label %if.end6 [
    i32 61, label %for.inc56.i815
    i32 66, label %for.inc56.i815
  ]

for.inc56.i815:                                   ; preds = %for.body44.i811, %for.body44.i811
  %next57.i812 = getelementptr inbounds %struct.elt_loc_list* %l.187.i807, i64 0, i32 0
  %l.1.i813 = load %struct.elt_loc_list** %next57.i812, align 8
  %tobool43.i814 = icmp eq %struct.elt_loc_list* %l.1.i813, null
  br i1 %tobool43.i814, label %if.then61.i818, label %for.body44.i811

if.then61.i818:                                   ; preds = %for.inc56.i815
  %loc63.i817 = getelementptr inbounds %struct.elt_loc_list* %l.088.i794, i64 0, i32 1
  %13 = load %struct.rtx_def** %loc63.i817, align 8, !tbaa !34
  br label %if.end6

if.end6:                                          ; preds = %for.body.i802, %for.body.i802, %for.body.i802, %for.body.i802, %for.body.i802, %for.body.i802, %for.body.i802, %for.body.i802, %for.body44.i811, %if.then61.i818, %if.end.i796, %if.end
  %y.addr.0 = phi %struct.rtx_def* [ %y.tr, %if.end ], [ %13, %if.then61.i818 ], [ %y.tr, %if.end.i796 ], [ %11, %for.body44.i811 ], [ %9, %for.body.i802 ], [ %9, %for.body.i802 ], [ %9, %for.body.i802 ], [ %9, %for.body.i802 ], [ %9, %for.body.i802 ], [ %9, %for.body.i802 ], [ %9, %for.body.i802 ], [ %9, %for.body.i802 ]
  %14 = getelementptr inbounds %struct.rtx_def* %x.addr.0, i64 0, i32 0
  %bf.load7 = load i32* %14, align 8
  %bf.clear8 = and i32 %bf.load7, 65535
  switch i32 %bf.clear8, label %addr_side_effect_eval.exit [
    i32 134, label %if.then10
    i32 135, label %if.then14
    i32 97, label %sw.bb.i
    i32 96, label %sw.bb1.i
    i32 99, label %sw.epilog.i
    i32 98, label %sw.epilog.i
  ]

if.then10:                                        ; preds = %if.end6
  %arrayidx = getelementptr inbounds %struct.rtx_def* %x.addr.0, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %15 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  br label %if.end22

if.then14:                                        ; preds = %if.end6
  %arrayidx16 = getelementptr inbounds %struct.rtx_def* %x.addr.0, i64 0, i32 1, i64 1
  %rtx17 = bitcast %union.rtunion_def* %arrayidx16 to %struct.rtx_def**
  %16 = load %struct.rtx_def** %rtx17, align 8, !tbaa !1
  br label %if.end22

sw.bb.i:                                          ; preds = %if.end6
  br label %sw.epilog.i

sw.bb1.i:                                         ; preds = %if.end6
  br label %sw.epilog.i

sw.epilog.i:                                      ; preds = %if.end6, %if.end6, %sw.bb1.i, %sw.bb.i
  %sub7.pn.i = phi i32 [ -1, %sw.bb1.i ], [ 1, %sw.bb.i ], [ 0, %if.end6 ], [ 0, %if.end6 ]
  %offset.0.i = mul nsw i32 %sub7.pn.i, %xsize.tr
  %tobool.i823 = icmp eq i32 %offset.0.i, 0
  br i1 %tobool.i823, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %sw.epilog.i
  %bf.lshr.i = lshr i32 %bf.load7, 16
  %bf.clear10.i = and i32 %bf.lshr.i, 255
  %arrayidx.i824 = getelementptr inbounds %struct.rtx_def* %x.addr.0, i64 0, i32 1, i64 0
  %rtx.i = bitcast %union.rtunion_def* %arrayidx.i824 to %struct.rtx_def**
  %17 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !1
  %conv.i = sext i32 %offset.0.i to i64
  %call.i = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv.i) #4
  %call11.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %bf.clear10.i, %struct.rtx_def* %17, %struct.rtx_def* %call.i) #4
  br label %addr_side_effect_eval.exit

if.else.i:                                        ; preds = %sw.epilog.i
  %arrayidx13.i = getelementptr inbounds %struct.rtx_def* %x.addr.0, i64 0, i32 1, i64 0
  %rtx14.i = bitcast %union.rtunion_def* %arrayidx13.i to %struct.rtx_def**
  %18 = load %struct.rtx_def** %rtx14.i, align 8, !tbaa !1
  br label %addr_side_effect_eval.exit

addr_side_effect_eval.exit:                       ; preds = %if.end6, %if.then.i, %if.else.i
  %retval.0.i825 = phi %struct.rtx_def* [ %call11.i, %if.then.i ], [ %18, %if.else.i ], [ %x.addr.0, %if.end6 ]
  %call20 = tail call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %retval.0.i825)
  br label %if.end22

if.end22:                                         ; preds = %if.then14, %addr_side_effect_eval.exit, %if.then10
  %x.addr.1 = phi %struct.rtx_def* [ %15, %if.then10 ], [ %16, %if.then14 ], [ %call20, %addr_side_effect_eval.exit ]
  %19 = getelementptr inbounds %struct.rtx_def* %y.addr.0, i64 0, i32 0
  %bf.load23 = load i32* %19, align 8
  %bf.clear24 = and i32 %bf.load23, 65535
  switch i32 %bf.clear24, label %addr_side_effect_eval.exit847 [
    i32 134, label %if.then26
    i32 135, label %if.then34
    i32 97, label %sw.bb.i828
    i32 96, label %sw.bb1.i829
    i32 99, label %sw.epilog.i834
    i32 98, label %sw.epilog.i834
  ]

if.then26:                                        ; preds = %if.end22
  %arrayidx28 = getelementptr inbounds %struct.rtx_def* %y.addr.0, i64 0, i32 1, i64 0
  %rtx29 = bitcast %union.rtunion_def* %arrayidx28 to %struct.rtx_def**
  %20 = load %struct.rtx_def** %rtx29, align 8, !tbaa !1
  br label %if.end42

if.then34:                                        ; preds = %if.end22
  %arrayidx36 = getelementptr inbounds %struct.rtx_def* %y.addr.0, i64 0, i32 1, i64 1
  %rtx37 = bitcast %union.rtunion_def* %arrayidx36 to %struct.rtx_def**
  %21 = load %struct.rtx_def** %rtx37, align 8, !tbaa !1
  br label %if.end42

sw.bb.i828:                                       ; preds = %if.end22
  br label %sw.epilog.i834

sw.bb1.i829:                                      ; preds = %if.end22
  br label %sw.epilog.i834

sw.epilog.i834:                                   ; preds = %if.end22, %if.end22, %sw.bb1.i829, %sw.bb.i828
  %sub7.pn.i831 = phi i32 [ -1, %sw.bb1.i829 ], [ 1, %sw.bb.i828 ], [ 0, %if.end22 ], [ 0, %if.end22 ]
  %offset.0.i832 = mul nsw i32 %sub7.pn.i831, %ysize.tr
  %tobool.i833 = icmp eq i32 %offset.0.i832, 0
  br i1 %tobool.i833, label %if.else.i845, label %if.then.i842

if.then.i842:                                     ; preds = %sw.epilog.i834
  %bf.lshr.i835 = lshr i32 %bf.load23, 16
  %bf.clear10.i836 = and i32 %bf.lshr.i835, 255
  %arrayidx.i837 = getelementptr inbounds %struct.rtx_def* %y.addr.0, i64 0, i32 1, i64 0
  %rtx.i838 = bitcast %union.rtunion_def* %arrayidx.i837 to %struct.rtx_def**
  %22 = load %struct.rtx_def** %rtx.i838, align 8, !tbaa !1
  %conv.i839 = sext i32 %offset.0.i832 to i64
  %call.i840 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv.i839) #4
  %call11.i841 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %bf.clear10.i836, %struct.rtx_def* %22, %struct.rtx_def* %call.i840) #4
  br label %addr_side_effect_eval.exit847

if.else.i845:                                     ; preds = %sw.epilog.i834
  %arrayidx13.i843 = getelementptr inbounds %struct.rtx_def* %y.addr.0, i64 0, i32 1, i64 0
  %rtx14.i844 = bitcast %union.rtunion_def* %arrayidx13.i843 to %struct.rtx_def**
  %23 = load %struct.rtx_def** %rtx14.i844, align 8, !tbaa !1
  br label %addr_side_effect_eval.exit847

addr_side_effect_eval.exit847:                    ; preds = %if.end22, %if.then.i842, %if.else.i845
  %retval.0.i846 = phi %struct.rtx_def* [ %call11.i841, %if.then.i842 ], [ %23, %if.else.i845 ], [ %y.addr.0, %if.end22 ]
  %call40 = tail call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %retval.0.i846)
  br label %if.end42

if.end42:                                         ; preds = %if.then34, %addr_side_effect_eval.exit847, %if.then26
  %y.addr.1 = phi %struct.rtx_def* [ %20, %if.then26 ], [ %21, %if.then34 ], [ %call40, %addr_side_effect_eval.exit847 ]
  %call43 = tail call fastcc i32 @rtx_equal_for_memref_p(%struct.rtx_def* %x.addr.1, %struct.rtx_def* %y.addr.1)
  %tobool = icmp eq i32 %call43, 0
  br i1 %tobool, label %if.end62, label %if.then44

if.then44:                                        ; preds = %if.end42
  %cmp45 = icmp slt i32 %xsize.tr, 1
  %cmp46 = icmp slt i32 %ysize.tr, 1
  %or.cond = or i1 %cmp45, %cmp46
  br i1 %or.cond, label %return, label %if.end48

if.end48:                                         ; preds = %if.then44
  %cmp49 = icmp sgt i64 %c.tr, -1
  %conv = sext i32 %xsize.tr to i64
  %cmp50 = icmp sgt i64 %conv, %c.tr
  %or.cond780 = and i1 %cmp49, %cmp50
  br i1 %or.cond780, label %return, label %if.end53

if.end53:                                         ; preds = %if.end48
  %cmp54 = icmp slt i64 %c.tr, 0
  br i1 %cmp54, label %land.lhs.true56, label %if.end61

land.lhs.true56:                                  ; preds = %if.end53
  %conv57 = sext i32 %ysize.tr to i64
  %add = add nsw i64 %c.tr, %conv57
  %cmp58 = icmp sgt i64 %add, 0
  br i1 %cmp58, label %return, label %if.end61

if.end61:                                         ; preds = %land.lhs.true56, %if.end53
  br label %return

if.end62:                                         ; preds = %if.end42
  %24 = getelementptr inbounds %struct.rtx_def* %x.addr.1, i64 0, i32 0
  %bf.load63 = load i32* %24, align 8
  %bf.clear64 = and i32 %bf.load63, 65535
  %cmp65 = icmp eq i32 %bf.clear64, 75
  br i1 %cmp65, label %if.then67, label %if.else144

if.then67:                                        ; preds = %if.end62
  %fld68 = getelementptr inbounds %struct.rtx_def* %x.addr.1, i64 0, i32 1
  %rtx70 = bitcast [1 x %union.rtunion_def]* %fld68 to %struct.rtx_def**
  %25 = load %struct.rtx_def** %rtx70, align 8, !tbaa !1
  %arrayidx72 = getelementptr inbounds %struct.rtx_def* %x.addr.1, i64 0, i32 1, i64 1
  %rtx73 = bitcast %union.rtunion_def* %arrayidx72 to %struct.rtx_def**
  %26 = load %struct.rtx_def** %rtx73, align 8, !tbaa !1
  %27 = getelementptr inbounds %struct.rtx_def* %y.addr.1, i64 0, i32 0
  %bf.load74 = load i32* %27, align 8
  %bf.clear75 = and i32 %bf.load74, 65535
  %cmp76 = icmp eq i32 %bf.clear75, 75
  br i1 %cmp76, label %if.then78, label %if.else131

if.then78:                                        ; preds = %if.then67
  %fld79 = getelementptr inbounds %struct.rtx_def* %y.addr.1, i64 0, i32 1
  %rtx81 = bitcast [1 x %union.rtunion_def]* %fld79 to %struct.rtx_def**
  %28 = load %struct.rtx_def** %rtx81, align 8, !tbaa !1
  %arrayidx83 = getelementptr inbounds %struct.rtx_def* %y.addr.1, i64 0, i32 1, i64 1
  %rtx84 = bitcast %union.rtunion_def* %arrayidx83 to %struct.rtx_def**
  %29 = load %struct.rtx_def** %rtx84, align 8, !tbaa !1
  %call85 = tail call fastcc i32 @rtx_equal_for_memref_p(%struct.rtx_def* %26, %struct.rtx_def* %29)
  %tobool86 = icmp eq i32 %call85, 0
  br i1 %tobool86, label %if.end89, label %tailrecurse

if.end89:                                         ; preds = %if.then78
  %call90 = tail call fastcc i32 @rtx_equal_for_memref_p(%struct.rtx_def* %25, %struct.rtx_def* %28)
  %tobool91 = icmp eq i32 %call90, 0
  br i1 %tobool91, label %if.end94, label %tailrecurse

if.end94:                                         ; preds = %if.end89
  %30 = getelementptr inbounds %struct.rtx_def* %26, i64 0, i32 0
  %bf.load95 = load i32* %30, align 8
  %bf.clear96 = and i32 %bf.load95, 65535
  %cmp97 = icmp eq i32 %bf.clear96, 54
  %31 = getelementptr inbounds %struct.rtx_def* %29, i64 0, i32 0
  %bf.load100 = load i32* %31, align 8
  %bf.clear101 = and i32 %bf.load100, 65535
  %cmp102 = icmp eq i32 %bf.clear101, 54
  br i1 %cmp97, label %if.then99, label %if.else118

if.then99:                                        ; preds = %if.end94
  %rtwint = getelementptr inbounds %struct.rtx_def* %26, i64 0, i32 1, i64 0, i32 0
  %32 = load i64* %rtwint, align 8, !tbaa !25
  %sub = sub nsw i64 %c.tr, %32
  br i1 %cmp102, label %if.then104, label %tailrecurse

if.then104:                                       ; preds = %if.then99
  %rtwint109 = getelementptr inbounds %struct.rtx_def* %29, i64 0, i32 1, i64 0, i32 0
  %33 = load i64* %rtwint109, align 8, !tbaa !25
  %add110 = add nsw i64 %33, %sub
  br label %tailrecurse

if.else118:                                       ; preds = %if.end94
  br i1 %cmp102, label %if.then123, label %return

if.then123:                                       ; preds = %if.else118
  %rtwint126 = getelementptr inbounds %struct.rtx_def* %29, i64 0, i32 1, i64 0, i32 0
  %34 = load i64* %rtwint126, align 8, !tbaa !25
  %add127 = add nsw i64 %34, %c.tr
  br label %tailrecurse

if.else131:                                       ; preds = %if.then67
  %35 = getelementptr inbounds %struct.rtx_def* %26, i64 0, i32 0
  %bf.load132 = load i32* %35, align 8
  %bf.clear133 = and i32 %bf.load132, 65535
  %cmp134 = icmp eq i32 %bf.clear133, 54
  br i1 %cmp134, label %if.then136, label %if.end170

if.then136:                                       ; preds = %if.else131
  %rtwint139 = getelementptr inbounds %struct.rtx_def* %26, i64 0, i32 1, i64 0, i32 0
  %36 = load i64* %rtwint139, align 8, !tbaa !25
  %sub140 = sub nsw i64 %c.tr, %36
  br label %tailrecurse

if.else144:                                       ; preds = %if.end62
  %37 = getelementptr inbounds %struct.rtx_def* %y.addr.1, i64 0, i32 0
  %bf.load145 = load i32* %37, align 8
  %bf.clear146 = and i32 %bf.load145, 65535
  %cmp147 = icmp eq i32 %bf.clear146, 75
  br i1 %cmp147, label %if.then149, label %if.end170

if.then149:                                       ; preds = %if.else144
  %arrayidx156 = getelementptr inbounds %struct.rtx_def* %y.addr.1, i64 0, i32 1, i64 1
  %rtx157 = bitcast %union.rtunion_def* %arrayidx156 to %struct.rtx_def**
  %38 = load %struct.rtx_def** %rtx157, align 8, !tbaa !1
  %39 = getelementptr inbounds %struct.rtx_def* %38, i64 0, i32 0
  %bf.load158 = load i32* %39, align 8
  %bf.clear159 = and i32 %bf.load158, 65535
  %cmp160 = icmp eq i32 %bf.clear159, 54
  br i1 %cmp160, label %if.then162, label %return

if.then162:                                       ; preds = %if.then149
  %fld151 = getelementptr inbounds %struct.rtx_def* %y.addr.1, i64 0, i32 1
  %rtx153 = bitcast [1 x %union.rtunion_def]* %fld151 to %struct.rtx_def**
  %40 = load %struct.rtx_def** %rtx153, align 8, !tbaa !1
  %rtwint165 = getelementptr inbounds %struct.rtx_def* %38, i64 0, i32 1, i64 0, i32 0
  %41 = load i64* %rtwint165, align 8, !tbaa !25
  %add166 = add nsw i64 %41, %c.tr
  br label %tailrecurse

if.end170:                                        ; preds = %if.else144, %if.else131
  %bf.load173 = phi i32 [ %bf.load145, %if.else144 ], [ %bf.load74, %if.else131 ]
  %42 = getelementptr inbounds %struct.rtx_def* %y.addr.1, i64 0, i32 0
  %bf.clear174 = and i32 %bf.load173, 65535
  %cmp175 = icmp eq i32 %bf.clear64, %bf.clear174
  br i1 %cmp175, label %if.then177, label %if.end289

if.then177:                                       ; preds = %if.end170
  switch i32 %bf.clear64, label %if.end289 [
    i32 78, label %sw.bb
    i32 61, label %sw.bb248
  ]

sw.bb:                                            ; preds = %if.then177
  %arrayidx184 = getelementptr inbounds %struct.rtx_def* %x.addr.1, i64 0, i32 1, i64 1
  %rtx185 = bitcast %union.rtunion_def* %arrayidx184 to %struct.rtx_def**
  %43 = load %struct.rtx_def** %rtx185, align 8, !tbaa !1
  %call186 = tail call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %43)
  %arrayidx189 = getelementptr inbounds %struct.rtx_def* %y.addr.1, i64 0, i32 1, i64 1
  %rtx190 = bitcast %union.rtunion_def* %arrayidx189 to %struct.rtx_def**
  %44 = load %struct.rtx_def** %rtx190, align 8, !tbaa !1
  %call191 = tail call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %44)
  %call192 = tail call fastcc i32 @rtx_equal_for_memref_p(%struct.rtx_def* %call186, %struct.rtx_def* %call191)
  %tobool193 = icmp eq i32 %call192, 0
  br i1 %tobool193, label %return, label %if.end195

if.end195:                                        ; preds = %sw.bb
  %arrayidx197 = getelementptr inbounds %struct.rtx_def* %x.addr.1, i64 0, i32 1, i64 0
  %rtx198 = bitcast %union.rtunion_def* %arrayidx197 to %struct.rtx_def**
  %45 = load %struct.rtx_def** %rtx198, align 8, !tbaa !1
  %call199 = tail call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %45)
  %arrayidx201 = getelementptr inbounds %struct.rtx_def* %y.addr.1, i64 0, i32 1, i64 0
  %rtx202 = bitcast %union.rtunion_def* %arrayidx201 to %struct.rtx_def**
  %46 = load %struct.rtx_def** %rtx202, align 8, !tbaa !1
  %call203 = tail call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %46)
  %call204 = tail call fastcc i32 @rtx_equal_for_memref_p(%struct.rtx_def* %call199, %struct.rtx_def* %call203)
  %tobool205 = icmp eq i32 %call204, 0
  br i1 %tobool205, label %if.end225, label %if.then206

if.then206:                                       ; preds = %if.end195
  %cmp207 = icmp eq i32 %xsize.tr, 0
  %cmp210 = icmp eq i32 %ysize.tr, 0
  %or.cond589 = or i1 %cmp207, %cmp210
  br i1 %or.cond589, label %lor.end, label %lor.lhs.false212

lor.lhs.false212:                                 ; preds = %if.then206
  %cmp213 = icmp sgt i64 %c.tr, -1
  %conv216 = sext i32 %xsize.tr to i64
  %cmp217 = icmp sgt i64 %conv216, %c.tr
  %or.cond781 = and i1 %cmp213, %cmp217
  br i1 %or.cond781, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %lor.lhs.false212
  %cmp219 = icmp slt i64 %c.tr, 0
  br i1 %cmp219, label %land.rhs, label %lor.end

land.rhs:                                         ; preds = %lor.rhs
  %conv221 = sext i32 %ysize.tr to i64
  %add222 = add nsw i64 %c.tr, %conv221
  %cmp223 = icmp sgt i64 %add222, 0
  br label %lor.end

lor.end:                                          ; preds = %lor.lhs.false212, %lor.rhs, %land.rhs, %if.then206
  %47 = phi i1 [ true, %if.then206 ], [ false, %lor.rhs ], [ %cmp223, %land.rhs ], [ true, %lor.lhs.false212 ]
  %lor.ext = zext i1 %47 to i32
  br label %return

if.end225:                                        ; preds = %if.end195
  %48 = getelementptr inbounds %struct.rtx_def* %call186, i64 0, i32 0
  %bf.load226 = load i32* %48, align 8
  %bf.clear227 = and i32 %bf.load226, 65535
  %cmp228 = icmp eq i32 %bf.clear227, 54
  br i1 %cmp228, label %if.end231, label %return

if.end231:                                        ; preds = %if.end225
  %rtwint234 = getelementptr inbounds %struct.rtx_def* %call186, i64 0, i32 1, i64 0, i32 0
  %49 = load i64* %rtwint234, align 8, !tbaa !25
  %conv235 = sext i32 %xsize.tr to i64
  %div = sdiv i64 %conv235, %49
  %conv236 = trunc i64 %div to i32
  %conv240 = sext i32 %ysize.tr to i64
  %div241 = sdiv i64 %conv240, %49
  %conv242 = trunc i64 %div241 to i32
  %div246 = sdiv i64 %c.tr, %49
  br label %tailrecurse

sw.bb248:                                         ; preds = %if.then177
  %50 = load %struct.rtx_def*** @alias_invariant, align 8, !tbaa !1
  %tobool249 = icmp eq %struct.rtx_def** %50, null
  br i1 %tobool249, label %if.end289, label %if.then250

if.then250:                                       ; preds = %sw.bb248
  %arrayidx252 = getelementptr inbounds %struct.rtx_def* %x.addr.1, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx252 to i32*
  %51 = load i32* %rtuint, align 4, !tbaa !16
  %arrayidx254 = getelementptr inbounds %struct.rtx_def* %y.addr.1, i64 0, i32 1, i64 0
  %rtuint255 = bitcast %union.rtunion_def* %arrayidx254 to i32*
  %52 = load i32* %rtuint255, align 4, !tbaa !16
  %53 = load i32* @reg_base_value_size, align 4, !tbaa !16
  %cmp256 = icmp ult i32 %51, %53
  br i1 %cmp256, label %cond.false, label %cond.end

cond.false:                                       ; preds = %if.then250
  %idxprom = zext i32 %51 to i64
  %arrayidx258 = getelementptr inbounds %struct.rtx_def** %50, i64 %idxprom
  %54 = load %struct.rtx_def** %arrayidx258, align 8, !tbaa !1
  br label %cond.end

cond.end:                                         ; preds = %if.then250, %cond.false
  %cond = phi %struct.rtx_def* [ %54, %cond.false ], [ null, %if.then250 ]
  %cmp259 = icmp ult i32 %52, %53
  br i1 %cmp259, label %cond.false262, label %cond.end265

cond.false262:                                    ; preds = %cond.end
  %idxprom263 = zext i32 %52 to i64
  %arrayidx264 = getelementptr inbounds %struct.rtx_def** %50, i64 %idxprom263
  %55 = load %struct.rtx_def** %arrayidx264, align 8, !tbaa !1
  br label %cond.end265

cond.end265:                                      ; preds = %cond.end, %cond.false262
  %cond266 = phi %struct.rtx_def* [ %55, %cond.false262 ], [ null, %cond.end ]
  %cmp267 = icmp eq %struct.rtx_def* %cond, null
  %cmp270 = icmp eq %struct.rtx_def* %cond266, null
  %or.cond590 = and i1 %cmp267, %cmp270
  br i1 %or.cond590, label %if.end289, label %if.end273

if.end273:                                        ; preds = %cond.end265
  %tobool274 = icmp ne %struct.rtx_def* %cond, null
  %cond278 = select i1 %tobool274, %struct.rtx_def* %cond, %struct.rtx_def* %x.addr.1
  %tobool279 = icmp ne %struct.rtx_def* %cond266, null
  %cond283 = select i1 %tobool279, %struct.rtx_def* %cond266, %struct.rtx_def* %y.addr.1
  %call284 = tail call fastcc i32 @memrefs_conflict_p(i32 %xsize.tr, %struct.rtx_def* %cond278, i32 %ysize.tr, %struct.rtx_def* %cond283, i64 %c.tr)
  %tobool285 = icmp eq i32 %call284, 0
  br i1 %tobool285, label %return, label %if.end273.if.end289_crit_edge

if.end273.if.end289_crit_edge:                    ; preds = %if.end273
  %bf.load290.pre = load i32* %24, align 8
  br label %if.end289

if.end289:                                        ; preds = %if.end273.if.end289_crit_edge, %sw.bb248, %cond.end265, %if.then177, %if.end170
  %bf.load481 = phi i32 [ %bf.load290.pre, %if.end273.if.end289_crit_edge ], [ %bf.load63, %sw.bb248 ], [ %bf.load63, %cond.end265 ], [ %bf.load63, %if.then177 ], [ %bf.load63, %if.end170 ]
  %bf.clear291 = and i32 %bf.load481, 65535
  %cmp292 = icmp eq i32 %bf.clear291, 83
  br i1 %cmp292, label %land.lhs.true294, label %if.end324

land.lhs.true294:                                 ; preds = %if.end289
  %arrayidx296 = getelementptr inbounds %struct.rtx_def* %x.addr.1, i64 0, i32 1, i64 1
  %rtx297 = bitcast %union.rtunion_def* %arrayidx296 to %struct.rtx_def**
  %56 = load %struct.rtx_def** %rtx297, align 8, !tbaa !1
  %57 = getelementptr inbounds %struct.rtx_def* %56, i64 0, i32 0
  %bf.load298 = load i32* %57, align 8
  %bf.clear299 = and i32 %bf.load298, 65535
  %cmp300 = icmp eq i32 %bf.clear299, 54
  br i1 %cmp300, label %if.then302, label %if.end324

if.then302:                                       ; preds = %land.lhs.true294
  %bf.load303 = load i32* %42, align 8
  %bf.clear304 = and i32 %bf.load303, 65535
  %cmp305 = icmp eq i32 %bf.clear304, 83
  br i1 %cmp305, label %if.then318, label %lor.lhs.false307

lor.lhs.false307:                                 ; preds = %if.then302
  %conv308 = sext i32 %ysize.tr to i64
  %rtwint314 = getelementptr inbounds %struct.rtx_def* %56, i64 0, i32 1, i64 0, i32 0
  %58 = load i64* %rtwint314, align 8, !tbaa !25
  %sub315 = sub nsw i64 0, %58
  %cmp316 = icmp slt i64 %conv308, %sub315
  br i1 %cmp316, label %if.then318, label %if.end319

if.then318:                                       ; preds = %lor.lhs.false307, %if.then302
  br label %if.end319

if.end319:                                        ; preds = %if.then318, %lor.lhs.false307
  %xsize.addr.0 = phi i32 [ -1, %if.then318 ], [ %xsize.tr, %lor.lhs.false307 ]
  %arrayidx321 = getelementptr inbounds %struct.rtx_def* %x.addr.1, i64 0, i32 1, i64 0
  %rtx322 = bitcast %union.rtunion_def* %arrayidx321 to %struct.rtx_def**
  %59 = load %struct.rtx_def** %rtx322, align 8, !tbaa !1
  br label %tailrecurse

if.end324:                                        ; preds = %land.lhs.true294, %if.end289
  %bf.load325 = load i32* %42, align 8
  %bf.clear326 = and i32 %bf.load325, 65535
  %cmp327 = icmp eq i32 %bf.clear326, 83
  br i1 %cmp327, label %land.lhs.true329, label %if.end359

land.lhs.true329:                                 ; preds = %if.end324
  %arrayidx331 = getelementptr inbounds %struct.rtx_def* %y.addr.1, i64 0, i32 1, i64 1
  %rtx332 = bitcast %union.rtunion_def* %arrayidx331 to %struct.rtx_def**
  %60 = load %struct.rtx_def** %rtx332, align 8, !tbaa !1
  %61 = getelementptr inbounds %struct.rtx_def* %60, i64 0, i32 0
  %bf.load333 = load i32* %61, align 8
  %bf.clear334 = and i32 %bf.load333, 65535
  %cmp335 = icmp eq i32 %bf.clear334, 54
  br i1 %cmp335, label %if.then337, label %if.end359

if.then337:                                       ; preds = %land.lhs.true329
  br i1 %cmp292, label %if.then353, label %lor.lhs.false342

lor.lhs.false342:                                 ; preds = %if.then337
  %conv343 = sext i32 %xsize.tr to i64
  %rtwint349 = getelementptr inbounds %struct.rtx_def* %60, i64 0, i32 1, i64 0, i32 0
  %62 = load i64* %rtwint349, align 8, !tbaa !25
  %sub350 = sub nsw i64 0, %62
  %cmp351 = icmp slt i64 %conv343, %sub350
  br i1 %cmp351, label %if.then353, label %if.end354

if.then353:                                       ; preds = %lor.lhs.false342, %if.then337
  br label %if.end354

if.end354:                                        ; preds = %if.then353, %lor.lhs.false342
  %ysize.addr.0 = phi i32 [ -1, %if.then353 ], [ %ysize.tr, %lor.lhs.false342 ]
  %arrayidx356 = getelementptr inbounds %struct.rtx_def* %y.addr.1, i64 0, i32 1, i64 0
  %rtx357 = bitcast %union.rtunion_def* %arrayidx356 to %struct.rtx_def**
  %63 = load %struct.rtx_def** %rtx357, align 8, !tbaa !1
  br label %tailrecurse

if.end359:                                        ; preds = %land.lhs.true329, %if.end324
  %cmp362 = icmp eq i32 %bf.clear291, 70
  %64 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 3), align 8, !tbaa !1
  br i1 %cmp362, label %if.then364, label %if.end381

if.then364:                                       ; preds = %if.end359
  %cmp365 = icmp eq %struct.rtx_def* %y.addr.1, %64
  %cmp370 = icmp eq i32 %bf.clear326, 70
  %or.cond932 = or i1 %cmp365, %cmp370
  br i1 %or.cond932, label %if.then372, label %if.end398

if.then372:                                       ; preds = %if.then364
  %cmp373 = icmp slt i32 %xsize.tr, 1
  %cmp376 = icmp slt i32 %ysize.tr, 1
  %.cmp376 = or i1 %cmp373, %cmp376
  %lor.ext379 = zext i1 %.cmp376 to i32
  br label %return

if.end381:                                        ; preds = %if.end359
  %cmp384 = icmp eq i32 %bf.clear326, 70
  %cmp387 = icmp eq %struct.rtx_def* %x.addr.1, %64
  %or.cond782 = and i1 %cmp384, %cmp387
  br i1 %or.cond782, label %if.then389, label %if.end398

if.then389:                                       ; preds = %if.end381
  %cmp390 = icmp slt i32 %xsize.tr, 1
  %cmp393 = icmp slt i32 %ysize.tr, 1
  %.cmp393 = or i1 %cmp390, %cmp393
  %lor.ext396 = zext i1 %.cmp393 to i32
  br label %return

if.end398:                                        ; preds = %if.then364, %if.end381
  switch i32 %bf.clear291, label %return [
    i32 54, label %land.lhs.true443
    i32 55, label %if.end480
    i32 56, label %if.end480
    i32 58, label %if.end480
    i32 67, label %if.end480
    i32 68, label %if.end480
    i32 134, label %if.end480
    i32 140, label %if.end480
  ]

land.lhs.true443:                                 ; preds = %if.end398
  switch i32 %bf.clear326, label %return [
    i32 54, label %if.then448
    i32 58, label %if.then511
    i32 67, label %if.then557
    i32 68, label %if.then557
    i32 55, label %if.then557
    i32 140, label %if.then557
    i32 134, label %if.then557
    i32 56, label %if.then557
  ]

if.then448:                                       ; preds = %land.lhs.true443
  %rtwint451 = getelementptr inbounds %struct.rtx_def* %y.addr.1, i64 0, i32 1, i64 0, i32 0
  %65 = load i64* %rtwint451, align 8, !tbaa !25
  %rtwint454 = getelementptr inbounds %struct.rtx_def* %x.addr.1, i64 0, i32 1, i64 0, i32 0
  %66 = load i64* %rtwint454, align 8, !tbaa !25
  %sub455 = sub nsw i64 %65, %66
  %add456 = add nsw i64 %sub455, %c.tr
  %cmp457 = icmp slt i32 %xsize.tr, 1
  %cmp460 = icmp slt i32 %ysize.tr, 1
  %or.cond591 = or i1 %cmp457, %cmp460
  br i1 %or.cond591, label %lor.end478, label %lor.lhs.false462

lor.lhs.false462:                                 ; preds = %if.then448
  %cmp463 = icmp sgt i64 %add456, -1
  %conv466 = sext i32 %xsize.tr to i64
  %cmp467 = icmp sgt i64 %conv466, %add456
  %or.cond783 = and i1 %cmp463, %cmp467
  br i1 %or.cond783, label %lor.end478, label %lor.rhs469

lor.rhs469:                                       ; preds = %lor.lhs.false462
  %cmp470 = icmp slt i64 %add456, 0
  br i1 %cmp470, label %land.rhs472, label %lor.end478

land.rhs472:                                      ; preds = %lor.rhs469
  %conv473 = sext i32 %ysize.tr to i64
  %add474 = add nsw i64 %add456, %conv473
  %cmp475 = icmp sgt i64 %add474, 0
  br label %lor.end478

lor.end478:                                       ; preds = %lor.lhs.false462, %lor.rhs469, %land.rhs472, %if.then448
  %67 = phi i1 [ true, %if.then448 ], [ false, %lor.rhs469 ], [ %cmp475, %land.rhs472 ], [ true, %lor.lhs.false462 ]
  %lor.ext479 = zext i1 %67 to i32
  br label %return

if.end480:                                        ; preds = %if.end398, %if.end398, %if.end398, %if.end398, %if.end398, %if.end398, %if.end398
  %cmp483 = icmp eq i32 %bf.clear291, 58
  %cmp488 = icmp eq i32 %bf.clear326, 58
  br i1 %cmp483, label %if.then485, label %if.end506

if.then485:                                       ; preds = %if.end480
  %arrayidx492 = getelementptr inbounds %struct.rtx_def* %x.addr.1, i64 0, i32 1, i64 0
  %rtx493 = bitcast %union.rtunion_def* %arrayidx492 to %struct.rtx_def**
  %68 = load %struct.rtx_def** %rtx493, align 8, !tbaa !1
  %call494 = tail call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %68)
  br i1 %cmp488, label %if.then490, label %tailrecurse

if.then490:                                       ; preds = %if.then485
  %arrayidx496 = getelementptr inbounds %struct.rtx_def* %y.addr.1, i64 0, i32 1, i64 0
  %rtx497 = bitcast %union.rtunion_def* %arrayidx496 to %struct.rtx_def**
  %69 = load %struct.rtx_def** %rtx497, align 8, !tbaa !1
  %call498 = tail call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %69)
  br label %tailrecurse

if.end506:                                        ; preds = %if.end480
  br i1 %cmp488, label %if.then511, label %if.end517

if.then511:                                       ; preds = %land.lhs.true443, %if.end506
  %arrayidx513 = getelementptr inbounds %struct.rtx_def* %y.addr.1, i64 0, i32 1, i64 0
  %rtx514 = bitcast %union.rtunion_def* %arrayidx513 to %struct.rtx_def**
  %70 = load %struct.rtx_def** %rtx514, align 8, !tbaa !1
  %call515 = tail call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %70)
  br label %tailrecurse

if.end517:                                        ; preds = %if.end506
  switch i32 %bf.clear326, label %return [
    i32 67, label %if.then557
    i32 68, label %if.then557
    i32 54, label %if.then557
    i32 55, label %if.then557
    i32 140, label %if.then557
    i32 134, label %if.then557
    i32 56, label %if.then557
  ]

if.then557:                                       ; preds = %land.lhs.true443, %land.lhs.true443, %land.lhs.true443, %land.lhs.true443, %land.lhs.true443, %land.lhs.true443, %if.end517, %if.end517, %if.end517, %if.end517, %if.end517, %if.end517, %if.end517
  %cmp558 = icmp slt i32 %xsize.tr, 1
  %cmp561 = icmp slt i32 %ysize.tr, 1
  %or.cond592 = or i1 %cmp558, %cmp561
  br i1 %or.cond592, label %lor.end585, label %lor.rhs563

lor.rhs563:                                       ; preds = %if.then557
  %call564 = tail call fastcc i32 @rtx_equal_for_memref_p(%struct.rtx_def* %x.addr.1, %struct.rtx_def* %y.addr.1)
  %tobool565 = icmp eq i32 %call564, 0
  br i1 %tobool565, label %lor.end585, label %land.rhs566

land.rhs566:                                      ; preds = %lor.rhs563
  %cmp567 = icmp sgt i64 %c.tr, -1
  %conv570 = sext i32 %xsize.tr to i64
  %cmp571 = icmp sgt i64 %conv570, %c.tr
  %or.cond787 = and i1 %cmp567, %cmp571
  br i1 %or.cond787, label %lor.end585, label %lor.rhs573

lor.rhs573:                                       ; preds = %land.rhs566
  %cmp574 = icmp slt i64 %c.tr, 0
  br i1 %cmp574, label %land.rhs576, label %lor.end585

land.rhs576:                                      ; preds = %lor.rhs573
  %conv577 = sext i32 %ysize.tr to i64
  %add578 = add nsw i64 %c.tr, %conv577
  %cmp579 = icmp sgt i64 %add578, 0
  br label %lor.end585

lor.end585:                                       ; preds = %land.rhs566, %lor.rhs563, %lor.rhs573, %land.rhs576, %if.then557
  %71 = phi i1 [ true, %if.then557 ], [ false, %lor.rhs563 ], [ false, %lor.rhs573 ], [ %cmp579, %land.rhs576 ], [ true, %land.rhs566 ]
  %lor.ext586 = zext i1 %71 to i32
  br label %return

return:                                           ; preds = %land.lhs.true443, %if.end398, %if.end273, %if.end225, %sw.bb, %if.then149, %if.else118, %if.end517, %land.lhs.true56, %if.end48, %if.then44, %lor.end585, %lor.end478, %if.then389, %if.then372, %lor.end, %if.end61
  %retval.0 = phi i32 [ 0, %if.end61 ], [ %lor.ext379, %if.then372 ], [ %lor.ext396, %if.then389 ], [ %lor.ext479, %lor.end478 ], [ %lor.ext586, %lor.end585 ], [ %lor.ext, %lor.end ], [ 1, %if.then44 ], [ 1, %if.end48 ], [ 1, %land.lhs.true56 ], [ 1, %if.end517 ], [ 1, %land.lhs.true443 ], [ 1, %if.end398 ], [ 0, %if.end273 ], [ 1, %if.end225 ], [ 1, %sw.bb ], [ 1, %if.then149 ], [ 1, %if.else118 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @canon_true_dependence(%struct.rtx_def* readonly %mem, i32 %mem_mode, %struct.rtx_def* %mem_addr, %struct.rtx_def* readonly %x, i32 (%struct.rtx_def*, i32)* nocapture %varies) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 134217728
  %tobool = icmp eq i32 %bf.clear, 0
  br i1 %tobool, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %1 = getelementptr inbounds %struct.rtx_def* %mem, i64 0, i32 0
  %bf.load1 = load i32* %1, align 8
  %bf.clear3 = and i32 %bf.load1, 134217728
  %tobool4 = icmp eq i32 %bf.clear3, 0
  br i1 %tobool4, label %if.end, label %return

if.end:                                           ; preds = %land.lhs.true, %entry
  %bf.clear7 = and i32 %bf.load, 16711680
  %cmp = icmp eq i32 %bf.clear7, 3342336
  br i1 %cmp, label %land.lhs.true8, label %if.end13

land.lhs.true8:                                   ; preds = %if.end
  %arrayidx = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %3 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 0
  %bf.load9 = load i32* %3, align 8
  %bf.clear10 = and i32 %bf.load9, 65535
  %cmp11 = icmp eq i32 %bf.clear10, 62
  br i1 %cmp11, label %return, label %if.end13

if.end13:                                         ; preds = %land.lhs.true8, %if.end
  %4 = getelementptr inbounds %struct.rtx_def* %mem, i64 0, i32 0
  %bf.load14 = load i32* %4, align 8
  %bf.clear16 = and i32 %bf.load14, 16711680
  %cmp17 = icmp eq i32 %bf.clear16, 3342336
  br i1 %cmp17, label %land.lhs.true18, label %if.end26

land.lhs.true18:                                  ; preds = %if.end13
  %arrayidx20 = getelementptr inbounds %struct.rtx_def* %mem, i64 0, i32 1, i64 0
  %rtx21 = bitcast %union.rtunion_def* %arrayidx20 to %struct.rtx_def**
  %5 = load %struct.rtx_def** %rtx21, align 8, !tbaa !1
  %6 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 0
  %bf.load22 = load i32* %6, align 8
  %bf.clear23 = and i32 %bf.load22, 65535
  %cmp24 = icmp eq i32 %bf.clear23, 62
  br i1 %cmp24, label %return, label %if.end26

if.end26:                                         ; preds = %land.lhs.true18, %if.end13
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 1
  %rtmem.i = bitcast %union.rtunion_def* %arrayidx.i to %struct.mem_attrs**
  %7 = load %struct.mem_attrs** %rtmem.i, align 8, !tbaa !1
  %cmp.i = icmp eq %struct.mem_attrs* %7, null
  br i1 %cmp.i, label %cond.end.i, label %cond.false.i

cond.false.i:                                     ; preds = %if.end26
  %alias.i = getelementptr inbounds %struct.mem_attrs* %7, i64 0, i32 0
  %8 = load i64* %alias.i, align 8, !tbaa !27
  br label %cond.end.i

cond.end.i:                                       ; preds = %cond.false.i, %if.end26
  %cond.i = phi i64 [ %8, %cond.false.i ], [ 0, %if.end26 ]
  %arrayidx5.i = getelementptr inbounds %struct.rtx_def* %mem, i64 0, i32 1, i64 1
  %rtmem6.i = bitcast %union.rtunion_def* %arrayidx5.i to %struct.mem_attrs**
  %9 = load %struct.mem_attrs** %rtmem6.i, align 8, !tbaa !1
  %cmp7.i = icmp eq %struct.mem_attrs* %9, null
  br i1 %cmp7.i, label %mems_in_disjoint_alias_sets_p.exit, label %cond.false9.i

cond.false9.i:                                    ; preds = %cond.end.i
  %alias13.i = getelementptr inbounds %struct.mem_attrs* %9, i64 0, i32 0
  %10 = load i64* %alias13.i, align 8, !tbaa !27
  br label %mems_in_disjoint_alias_sets_p.exit

mems_in_disjoint_alias_sets_p.exit:               ; preds = %cond.end.i, %cond.false9.i
  %cond15.i = phi i64 [ %10, %cond.false9.i ], [ 0, %cond.end.i ]
  %call.i = tail call i32 @alias_sets_conflict_p(i64 %cond.i, i64 %cond15.i) #4
  %lnot.i = icmp eq i32 %call.i, 0
  br i1 %lnot.i, label %return, label %if.end29

if.end29:                                         ; preds = %mems_in_disjoint_alias_sets_p.exit
  %bf.load30 = load i32* %0, align 8
  %bf.clear32 = and i32 %bf.load30, 67108864
  %tobool33 = icmp eq i32 %bf.clear32, 0
  br i1 %tobool33, label %if.end40, label %land.lhs.true34

land.lhs.true34:                                  ; preds = %if.end29
  %bf.load35 = load i32* %4, align 8
  %bf.clear37 = and i32 %bf.load35, 67108864
  %tobool38 = icmp eq i32 %bf.clear37, 0
  br i1 %tobool38, label %return, label %if.end40

if.end40:                                         ; preds = %land.lhs.true34, %if.end29
  %call41 = tail call fastcc i32 @nonoverlapping_memrefs_p(%struct.rtx_def* %x, %struct.rtx_def* %mem)
  %tobool42 = icmp eq i32 %call41, 0
  br i1 %tobool42, label %if.end44, label %return

if.end44:                                         ; preds = %if.end40
  %arrayidx46 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rtx47 = bitcast %union.rtunion_def* %arrayidx46 to %struct.rtx_def**
  %11 = load %struct.rtx_def** %rtx47, align 8, !tbaa !1
  %12 = getelementptr inbounds %struct.rtx_def* %11, i64 0, i32 0
  %bf.load.i = load i32* %12, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  %cmp.i120 = icmp eq i32 %bf.clear.i, 60
  br i1 %cmp.i120, label %if.end.i, label %get_addr.exit

if.end.i:                                         ; preds = %if.end44
  %arrayidx.i121 = getelementptr inbounds %struct.rtx_def* %11, i64 0, i32 1, i64 0
  %rt_cselib.i = bitcast %union.rtunion_def* %arrayidx.i121 to %struct.cselib_val_struct**
  %13 = load %struct.cselib_val_struct** %rt_cselib.i, align 8, !tbaa !1
  %locs.i = getelementptr inbounds %struct.cselib_val_struct* %13, i64 0, i32 2
  %l.088.i = load %struct.elt_loc_list** %locs.i, align 8
  %tobool89.i = icmp eq %struct.elt_loc_list* %l.088.i, null
  br i1 %tobool89.i, label %get_addr.exit, label %for.body.i

for.body.i:                                       ; preds = %if.end.i, %for.inc.i
  %l.090.i = phi %struct.elt_loc_list* [ %l.0.i, %for.inc.i ], [ %l.088.i, %if.end.i ]
  %loc.i = getelementptr inbounds %struct.elt_loc_list* %l.090.i, i64 0, i32 1
  %14 = load %struct.rtx_def** %loc.i, align 8, !tbaa !34
  %15 = getelementptr inbounds %struct.rtx_def* %14, i64 0, i32 0
  %bf.load1.i = load i32* %15, align 8
  %bf.clear2.i = and i32 %bf.load1.i, 65535
  switch i32 %bf.clear2.i, label %for.inc.i [
    i32 67, label %get_addr.exit
    i32 68, label %get_addr.exit
    i32 54, label %get_addr.exit
    i32 55, label %get_addr.exit
    i32 58, label %get_addr.exit
    i32 134, label %get_addr.exit
    i32 56, label %get_addr.exit
    i32 140, label %get_addr.exit
  ]

for.inc.i:                                        ; preds = %for.body.i
  %next.i = getelementptr inbounds %struct.elt_loc_list* %l.090.i, i64 0, i32 0
  %l.0.i = load %struct.elt_loc_list** %next.i, align 8
  %tobool.i = icmp eq %struct.elt_loc_list* %l.0.i, null
  br i1 %tobool.i, label %for.body44.i, label %for.body.i

for.body44.i:                                     ; preds = %for.inc.i, %for.inc56.i
  %l.187.i = phi %struct.elt_loc_list* [ %l.1.i, %for.inc56.i ], [ %l.088.i, %for.inc.i ]
  %loc45.i = getelementptr inbounds %struct.elt_loc_list* %l.187.i, i64 0, i32 1
  %16 = load %struct.rtx_def** %loc45.i, align 8, !tbaa !34
  %17 = getelementptr inbounds %struct.rtx_def* %16, i64 0, i32 0
  %bf.load46.i = load i32* %17, align 8
  %bf.clear47.i = and i32 %bf.load46.i, 65535
  switch i32 %bf.clear47.i, label %get_addr.exit [
    i32 61, label %for.inc56.i
    i32 66, label %for.inc56.i
  ]

for.inc56.i:                                      ; preds = %for.body44.i, %for.body44.i
  %next57.i = getelementptr inbounds %struct.elt_loc_list* %l.187.i, i64 0, i32 0
  %l.1.i = load %struct.elt_loc_list** %next57.i, align 8
  %tobool43.i = icmp eq %struct.elt_loc_list* %l.1.i, null
  br i1 %tobool43.i, label %if.then61.i, label %for.body44.i

if.then61.i:                                      ; preds = %for.inc56.i
  %loc63.i = getelementptr inbounds %struct.elt_loc_list* %l.088.i, i64 0, i32 1
  %18 = load %struct.rtx_def** %loc63.i, align 8, !tbaa !34
  br label %get_addr.exit

get_addr.exit:                                    ; preds = %for.body.i, %for.body.i, %for.body.i, %for.body.i, %for.body.i, %for.body.i, %for.body.i, %for.body.i, %for.body44.i, %if.end44, %if.end.i, %if.then61.i
  %retval.0.i = phi %struct.rtx_def* [ %18, %if.then61.i ], [ %11, %if.end44 ], [ %11, %if.end.i ], [ %16, %for.body44.i ], [ %14, %for.body.i ], [ %14, %for.body.i ], [ %14, %for.body.i ], [ %14, %for.body.i ], [ %14, %for.body.i ], [ %14, %for.body.i ], [ %14, %for.body.i ], [ %14, %for.body.i ]
  %bf.load49 = load i32* %0, align 8
  %bf.lshr50 = lshr i32 %bf.load49, 16
  %bf.clear51 = and i32 %bf.lshr50, 255
  %call52 = tail call fastcc i32 @base_alias_check(%struct.rtx_def* %retval.0.i, %struct.rtx_def* %mem_addr, i32 %bf.clear51, i32 %mem_mode)
  %tobool53 = icmp eq i32 %call52, 0
  br i1 %tobool53, label %return, label %if.end55

if.end55:                                         ; preds = %get_addr.exit
  %call56 = tail call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %retval.0.i)
  %idxprom = sext i32 %mem_mode to i64
  %arrayidx57 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom
  %19 = load i8* %arrayidx57, align 1, !tbaa !17
  %conv = zext i8 %19 to i32
  %bf.load58 = load i32* %0, align 8
  %bf.lshr59 = lshr i32 %bf.load58, 16
  %bf.clear60 = and i32 %bf.lshr59, 255
  %idxprom61118 = zext i32 %bf.clear60 to i64
  %arrayidx62 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom61118
  %20 = load i8* %arrayidx62, align 1, !tbaa !17
  %conv63 = zext i8 %20 to i32
  %call64 = tail call fastcc i32 @memrefs_conflict_p(i32 %conv, %struct.rtx_def* %mem_addr, i32 %conv63, %struct.rtx_def* %call56, i64 0)
  %tobool65 = icmp eq i32 %call64, 0
  br i1 %tobool65, label %return, label %if.end67

if.end67:                                         ; preds = %if.end55
  %21 = load %struct.rtx_def** %rtx47, align 8, !tbaa !1
  %22 = getelementptr inbounds %struct.rtx_def* %21, i64 0, i32 0
  %bf.load.i129 = load i32* %22, align 8
  %bf.clear.i130 = and i32 %bf.load.i129, 65535
  %cmp.i131 = icmp eq i32 %bf.clear.i130, 83
  %cmp72 = icmp eq i32 %mem_mode, 2
  %or.cond = or i1 %cmp.i131, %cmp72
  br i1 %or.cond, label %return, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end67
  %23 = getelementptr inbounds %struct.rtx_def* %mem_addr, i64 0, i32 0
  %bf.load74 = load i32* %23, align 8
  %bf.clear75 = and i32 %bf.load74, 65535
  %cmp76 = icmp eq i32 %bf.clear75, 83
  %cmp80 = icmp eq i32 %mem_mode, 51
  %or.cond119 = or i1 %cmp76, %cmp80
  br i1 %or.cond119, label %return, label %lor.lhs.false82

lor.lhs.false82:                                  ; preds = %lor.lhs.false
  %bf.load83 = load i32* %0, align 8
  %bf.clear85 = and i32 %bf.load83, 16711680
  %cmp86 = icmp eq i32 %bf.clear85, 3342336
  br i1 %cmp86, label %return, label %if.end89

if.end89:                                         ; preds = %lor.lhs.false82
  %24 = load i32* @flag_strict_aliasing, align 4, !tbaa !16
  %tobool.i122 = icmp eq i32 %24, 0
  br i1 %tobool.i122, label %fixed_scalar_and_varying_struct_p.exit, label %if.end.i124

if.end.i124:                                      ; preds = %if.end89
  %bf.load.i123 = load i32* %4, align 8
  %tobool1.i = icmp sgt i32 %bf.load.i123, -1
  %bf.clear.i125 = and i32 %bf.load83, 268435456
  %tobool4.i = icmp eq i32 %bf.clear.i125, 0
  %or.cond132 = or i1 %tobool1.i, %tobool4.i
  br i1 %or.cond132, label %if.end11.i, label %land.lhs.true5.i

land.lhs.true5.i:                                 ; preds = %if.end.i124
  %call.i126 = tail call i32 %varies(%struct.rtx_def* %mem_addr, i32 1) #4
  %tobool6.i = icmp eq i32 %call.i126, 0
  br i1 %tobool6.i, label %land.lhs.true7.i, label %if.end11.i

land.lhs.true7.i:                                 ; preds = %land.lhs.true5.i
  %call8.i = tail call i32 %varies(%struct.rtx_def* %call56, i32 1) #4
  %tobool9.i = icmp eq i32 %call8.i, 0
  br i1 %tobool9.i, label %if.end11.i, label %fixed_scalar_and_varying_struct_p.exit

if.end11.i:                                       ; preds = %if.end.i124, %land.lhs.true7.i, %land.lhs.true5.i
  %bf.load12.i = load i32* %4, align 8
  %bf.clear14.i = and i32 %bf.load12.i, 268435456
  %tobool15.i = icmp eq i32 %bf.clear14.i, 0
  br i1 %tobool15.i, label %if.end27.i, label %land.lhs.true16.i

land.lhs.true16.i:                                ; preds = %if.end11.i
  %bf.load17.i = load i32* %0, align 8
  %tobool19.i = icmp slt i32 %bf.load17.i, 0
  br i1 %tobool19.i, label %land.lhs.true20.i, label %if.end27.i

land.lhs.true20.i:                                ; preds = %land.lhs.true16.i
  %call21.i = tail call i32 %varies(%struct.rtx_def* %mem_addr, i32 1) #4
  %tobool22.i = icmp eq i32 %call21.i, 0
  br i1 %tobool22.i, label %if.end27.i, label %land.lhs.true23.i

land.lhs.true23.i:                                ; preds = %land.lhs.true20.i
  %call24.i = tail call i32 %varies(%struct.rtx_def* %call56, i32 1) #4
  %tobool25.i = icmp eq i32 %call24.i, 0
  br i1 %tobool25.i, label %fixed_scalar_and_varying_struct_p.exit, label %if.end27.i

if.end27.i:                                       ; preds = %land.lhs.true23.i, %land.lhs.true20.i, %land.lhs.true16.i, %if.end11.i
  br label %fixed_scalar_and_varying_struct_p.exit

fixed_scalar_and_varying_struct_p.exit:           ; preds = %if.end89, %land.lhs.true7.i, %land.lhs.true23.i, %if.end27.i
  %retval.0.i127 = phi %struct.rtx_def* [ null, %if.end27.i ], [ null, %if.end89 ], [ %mem, %land.lhs.true7.i ], [ %x, %land.lhs.true23.i ]
  %lnot = icmp eq %struct.rtx_def* %retval.0.i127, null
  %lnot.ext = zext i1 %lnot to i32
  br label %return

return:                                           ; preds = %mems_in_disjoint_alias_sets_p.exit, %if.end67, %lor.lhs.false82, %lor.lhs.false, %if.end55, %get_addr.exit, %if.end40, %land.lhs.true34, %land.lhs.true18, %land.lhs.true8, %land.lhs.true, %fixed_scalar_and_varying_struct_p.exit
  %retval.0 = phi i32 [ %lnot.ext, %fixed_scalar_and_varying_struct_p.exit ], [ 1, %land.lhs.true ], [ 1, %land.lhs.true8 ], [ 1, %land.lhs.true18 ], [ 0, %mems_in_disjoint_alias_sets_p.exit ], [ 0, %land.lhs.true34 ], [ 0, %if.end40 ], [ 0, %get_addr.exit ], [ 0, %if.end55 ], [ 1, %if.end67 ], [ 1, %lor.lhs.false ], [ 1, %lor.lhs.false82 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @anti_dependence(%struct.rtx_def* readonly %mem, %struct.rtx_def* readonly %x) #0 {
entry:
  %call = tail call fastcc i32 @write_dependence_p(%struct.rtx_def* %mem, %struct.rtx_def* %x, i32 0)
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @write_dependence_p(%struct.rtx_def* readonly %mem, %struct.rtx_def* readonly %x, i32 %writep) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 134217728
  %tobool = icmp eq i32 %bf.clear, 0
  br i1 %tobool, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %1 = getelementptr inbounds %struct.rtx_def* %mem, i64 0, i32 0
  %bf.load1 = load i32* %1, align 8
  %bf.clear3 = and i32 %bf.load1, 134217728
  %tobool4 = icmp eq i32 %bf.clear3, 0
  br i1 %tobool4, label %if.end, label %return

if.end:                                           ; preds = %land.lhs.true, %entry
  %bf.clear7 = and i32 %bf.load, 16711680
  %cmp = icmp eq i32 %bf.clear7, 3342336
  br i1 %cmp, label %land.lhs.true8, label %if.end13

land.lhs.true8:                                   ; preds = %if.end
  %arrayidx = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %3 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 0
  %bf.load9 = load i32* %3, align 8
  %bf.clear10 = and i32 %bf.load9, 65535
  %cmp11 = icmp eq i32 %bf.clear10, 62
  br i1 %cmp11, label %return, label %if.end13

if.end13:                                         ; preds = %land.lhs.true8, %if.end
  %4 = getelementptr inbounds %struct.rtx_def* %mem, i64 0, i32 0
  %bf.load14 = load i32* %4, align 8
  %bf.clear16 = and i32 %bf.load14, 16711680
  %cmp17 = icmp eq i32 %bf.clear16, 3342336
  br i1 %cmp17, label %land.lhs.true18, label %if.end26

land.lhs.true18:                                  ; preds = %if.end13
  %arrayidx20 = getelementptr inbounds %struct.rtx_def* %mem, i64 0, i32 1, i64 0
  %rtx21 = bitcast %union.rtunion_def* %arrayidx20 to %struct.rtx_def**
  %5 = load %struct.rtx_def** %rtx21, align 8, !tbaa !1
  %6 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 0
  %bf.load22 = load i32* %6, align 8
  %bf.clear23 = and i32 %bf.load22, 65535
  %cmp24 = icmp eq i32 %bf.clear23, 62
  br i1 %cmp24, label %return, label %if.end26

if.end26:                                         ; preds = %land.lhs.true18, %if.end13
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 1
  %rtmem.i = bitcast %union.rtunion_def* %arrayidx.i to %struct.mem_attrs**
  %7 = load %struct.mem_attrs** %rtmem.i, align 8, !tbaa !1
  %cmp.i = icmp eq %struct.mem_attrs* %7, null
  br i1 %cmp.i, label %cond.end.i, label %cond.false.i

cond.false.i:                                     ; preds = %if.end26
  %alias.i = getelementptr inbounds %struct.mem_attrs* %7, i64 0, i32 0
  %8 = load i64* %alias.i, align 8, !tbaa !27
  br label %cond.end.i

cond.end.i:                                       ; preds = %cond.false.i, %if.end26
  %cond.i = phi i64 [ %8, %cond.false.i ], [ 0, %if.end26 ]
  %arrayidx5.i = getelementptr inbounds %struct.rtx_def* %mem, i64 0, i32 1, i64 1
  %rtmem6.i = bitcast %union.rtunion_def* %arrayidx5.i to %struct.mem_attrs**
  %9 = load %struct.mem_attrs** %rtmem6.i, align 8, !tbaa !1
  %cmp7.i = icmp eq %struct.mem_attrs* %9, null
  br i1 %cmp7.i, label %mems_in_disjoint_alias_sets_p.exit, label %cond.false9.i

cond.false9.i:                                    ; preds = %cond.end.i
  %alias13.i = getelementptr inbounds %struct.mem_attrs* %9, i64 0, i32 0
  %10 = load i64* %alias13.i, align 8, !tbaa !27
  br label %mems_in_disjoint_alias_sets_p.exit

mems_in_disjoint_alias_sets_p.exit:               ; preds = %cond.end.i, %cond.false9.i
  %cond15.i = phi i64 [ %10, %cond.false9.i ], [ 0, %cond.end.i ]
  %call.i = tail call i32 @alias_sets_conflict_p(i64 %cond.i, i64 %cond15.i) #4
  %lnot.i = icmp eq i32 %call.i, 0
  br i1 %lnot.i, label %return, label %if.end29

if.end29:                                         ; preds = %mems_in_disjoint_alias_sets_p.exit
  %bf.load30 = load i32* %0, align 8
  %bf.lshr31 = lshr i32 %bf.load30, 26
  %bf.clear32 = and i32 %bf.lshr31, 1
  %bf.load33 = load i32* %4, align 8
  %bf.lshr34 = lshr i32 %bf.load33, 26
  %bf.clear35 = and i32 %bf.lshr34, 1
  %cmp36 = icmp eq i32 %bf.clear32, %bf.clear35
  br i1 %cmp36, label %if.end38, label %return

if.end38:                                         ; preds = %if.end29
  %tobool39 = icmp ne i32 %writep, 0
  %tobool44 = icmp eq i32 %bf.clear32, 0
  %or.cond = or i1 %tobool39, %tobool44
  br i1 %or.cond, label %if.end46, label %return

if.end46:                                         ; preds = %if.end38
  %call47 = tail call fastcc i32 @nonoverlapping_memrefs_p(%struct.rtx_def* %x, %struct.rtx_def* %mem)
  %tobool48 = icmp eq i32 %call47, 0
  br i1 %tobool48, label %if.end50, label %return

if.end50:                                         ; preds = %if.end46
  %arrayidx52 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rtx53 = bitcast %union.rtunion_def* %arrayidx52 to %struct.rtx_def**
  %11 = load %struct.rtx_def** %rtx53, align 8, !tbaa !1
  %12 = getelementptr inbounds %struct.rtx_def* %11, i64 0, i32 0
  %bf.load.i = load i32* %12, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  %cmp.i154 = icmp eq i32 %bf.clear.i, 60
  br i1 %cmp.i154, label %if.end.i, label %get_addr.exit

if.end.i:                                         ; preds = %if.end50
  %arrayidx.i155 = getelementptr inbounds %struct.rtx_def* %11, i64 0, i32 1, i64 0
  %rt_cselib.i = bitcast %union.rtunion_def* %arrayidx.i155 to %struct.cselib_val_struct**
  %13 = load %struct.cselib_val_struct** %rt_cselib.i, align 8, !tbaa !1
  %locs.i = getelementptr inbounds %struct.cselib_val_struct* %13, i64 0, i32 2
  %l.088.i = load %struct.elt_loc_list** %locs.i, align 8
  %tobool89.i = icmp eq %struct.elt_loc_list* %l.088.i, null
  br i1 %tobool89.i, label %get_addr.exit, label %for.body.i

for.body.i:                                       ; preds = %if.end.i, %for.inc.i
  %l.090.i = phi %struct.elt_loc_list* [ %l.0.i, %for.inc.i ], [ %l.088.i, %if.end.i ]
  %loc.i = getelementptr inbounds %struct.elt_loc_list* %l.090.i, i64 0, i32 1
  %14 = load %struct.rtx_def** %loc.i, align 8, !tbaa !34
  %15 = getelementptr inbounds %struct.rtx_def* %14, i64 0, i32 0
  %bf.load1.i = load i32* %15, align 8
  %bf.clear2.i = and i32 %bf.load1.i, 65535
  switch i32 %bf.clear2.i, label %for.inc.i [
    i32 67, label %get_addr.exit
    i32 68, label %get_addr.exit
    i32 54, label %get_addr.exit
    i32 55, label %get_addr.exit
    i32 58, label %get_addr.exit
    i32 134, label %get_addr.exit
    i32 56, label %get_addr.exit
    i32 140, label %get_addr.exit
  ]

for.inc.i:                                        ; preds = %for.body.i
  %next.i = getelementptr inbounds %struct.elt_loc_list* %l.090.i, i64 0, i32 0
  %l.0.i = load %struct.elt_loc_list** %next.i, align 8
  %tobool.i = icmp eq %struct.elt_loc_list* %l.0.i, null
  br i1 %tobool.i, label %for.body44.i, label %for.body.i

for.body44.i:                                     ; preds = %for.inc.i, %for.inc56.i
  %l.187.i = phi %struct.elt_loc_list* [ %l.1.i, %for.inc56.i ], [ %l.088.i, %for.inc.i ]
  %loc45.i = getelementptr inbounds %struct.elt_loc_list* %l.187.i, i64 0, i32 1
  %16 = load %struct.rtx_def** %loc45.i, align 8, !tbaa !34
  %17 = getelementptr inbounds %struct.rtx_def* %16, i64 0, i32 0
  %bf.load46.i = load i32* %17, align 8
  %bf.clear47.i = and i32 %bf.load46.i, 65535
  switch i32 %bf.clear47.i, label %get_addr.exit [
    i32 61, label %for.inc56.i
    i32 66, label %for.inc56.i
  ]

for.inc56.i:                                      ; preds = %for.body44.i, %for.body44.i
  %next57.i = getelementptr inbounds %struct.elt_loc_list* %l.187.i, i64 0, i32 0
  %l.1.i = load %struct.elt_loc_list** %next57.i, align 8
  %tobool43.i = icmp eq %struct.elt_loc_list* %l.1.i, null
  br i1 %tobool43.i, label %if.then61.i, label %for.body44.i

if.then61.i:                                      ; preds = %for.inc56.i
  %loc63.i = getelementptr inbounds %struct.elt_loc_list* %l.088.i, i64 0, i32 1
  %18 = load %struct.rtx_def** %loc63.i, align 8, !tbaa !34
  br label %get_addr.exit

get_addr.exit:                                    ; preds = %for.body.i, %for.body.i, %for.body.i, %for.body.i, %for.body.i, %for.body.i, %for.body.i, %for.body.i, %for.body44.i, %if.end50, %if.end.i, %if.then61.i
  %retval.0.i = phi %struct.rtx_def* [ %18, %if.then61.i ], [ %11, %if.end50 ], [ %11, %if.end.i ], [ %16, %for.body44.i ], [ %14, %for.body.i ], [ %14, %for.body.i ], [ %14, %for.body.i ], [ %14, %for.body.i ], [ %14, %for.body.i ], [ %14, %for.body.i ], [ %14, %for.body.i ], [ %14, %for.body.i ]
  %arrayidx56 = getelementptr inbounds %struct.rtx_def* %mem, i64 0, i32 1, i64 0
  %rtx57 = bitcast %union.rtunion_def* %arrayidx56 to %struct.rtx_def**
  %19 = load %struct.rtx_def** %rtx57, align 8, !tbaa !1
  %20 = getelementptr inbounds %struct.rtx_def* %19, i64 0, i32 0
  %bf.load.i172 = load i32* %20, align 8
  %bf.clear.i173 = and i32 %bf.load.i172, 65535
  %cmp.i174 = icmp eq i32 %bf.clear.i173, 60
  br i1 %cmp.i174, label %if.end.i180, label %get_addr.exit204

if.end.i180:                                      ; preds = %get_addr.exit
  %arrayidx.i175 = getelementptr inbounds %struct.rtx_def* %19, i64 0, i32 1, i64 0
  %rt_cselib.i176 = bitcast %union.rtunion_def* %arrayidx.i175 to %struct.cselib_val_struct**
  %21 = load %struct.cselib_val_struct** %rt_cselib.i176, align 8, !tbaa !1
  %locs.i177 = getelementptr inbounds %struct.cselib_val_struct* %21, i64 0, i32 2
  %l.088.i178 = load %struct.elt_loc_list** %locs.i177, align 8
  %tobool89.i179 = icmp eq %struct.elt_loc_list* %l.088.i178, null
  br i1 %tobool89.i179, label %get_addr.exit204, label %for.body.i186

for.body.i186:                                    ; preds = %if.end.i180, %for.inc.i190
  %l.090.i182 = phi %struct.elt_loc_list* [ %l.0.i188, %for.inc.i190 ], [ %l.088.i178, %if.end.i180 ]
  %loc.i183 = getelementptr inbounds %struct.elt_loc_list* %l.090.i182, i64 0, i32 1
  %22 = load %struct.rtx_def** %loc.i183, align 8, !tbaa !34
  %23 = getelementptr inbounds %struct.rtx_def* %22, i64 0, i32 0
  %bf.load1.i184 = load i32* %23, align 8
  %bf.clear2.i185 = and i32 %bf.load1.i184, 65535
  switch i32 %bf.clear2.i185, label %for.inc.i190 [
    i32 67, label %get_addr.exit204
    i32 68, label %get_addr.exit204
    i32 54, label %get_addr.exit204
    i32 55, label %get_addr.exit204
    i32 58, label %get_addr.exit204
    i32 134, label %get_addr.exit204
    i32 56, label %get_addr.exit204
    i32 140, label %get_addr.exit204
  ]

for.inc.i190:                                     ; preds = %for.body.i186
  %next.i187 = getelementptr inbounds %struct.elt_loc_list* %l.090.i182, i64 0, i32 0
  %l.0.i188 = load %struct.elt_loc_list** %next.i187, align 8
  %tobool.i189 = icmp eq %struct.elt_loc_list* %l.0.i188, null
  br i1 %tobool.i189, label %for.body44.i195, label %for.body.i186

for.body44.i195:                                  ; preds = %for.inc.i190, %for.inc56.i199
  %l.187.i191 = phi %struct.elt_loc_list* [ %l.1.i197, %for.inc56.i199 ], [ %l.088.i178, %for.inc.i190 ]
  %loc45.i192 = getelementptr inbounds %struct.elt_loc_list* %l.187.i191, i64 0, i32 1
  %24 = load %struct.rtx_def** %loc45.i192, align 8, !tbaa !34
  %25 = getelementptr inbounds %struct.rtx_def* %24, i64 0, i32 0
  %bf.load46.i193 = load i32* %25, align 8
  %bf.clear47.i194 = and i32 %bf.load46.i193, 65535
  switch i32 %bf.clear47.i194, label %get_addr.exit204 [
    i32 61, label %for.inc56.i199
    i32 66, label %for.inc56.i199
  ]

for.inc56.i199:                                   ; preds = %for.body44.i195, %for.body44.i195
  %next57.i196 = getelementptr inbounds %struct.elt_loc_list* %l.187.i191, i64 0, i32 0
  %l.1.i197 = load %struct.elt_loc_list** %next57.i196, align 8
  %tobool43.i198 = icmp eq %struct.elt_loc_list* %l.1.i197, null
  br i1 %tobool43.i198, label %if.then61.i202, label %for.body44.i195

if.then61.i202:                                   ; preds = %for.inc56.i199
  %loc63.i201 = getelementptr inbounds %struct.elt_loc_list* %l.088.i178, i64 0, i32 1
  %26 = load %struct.rtx_def** %loc63.i201, align 8, !tbaa !34
  br label %get_addr.exit204

get_addr.exit204:                                 ; preds = %for.body.i186, %for.body.i186, %for.body.i186, %for.body.i186, %for.body.i186, %for.body.i186, %for.body.i186, %for.body.i186, %for.body44.i195, %get_addr.exit, %if.end.i180, %if.then61.i202
  %retval.0.i203 = phi %struct.rtx_def* [ %26, %if.then61.i202 ], [ %19, %get_addr.exit ], [ %19, %if.end.i180 ], [ %24, %for.body44.i195 ], [ %22, %for.body.i186 ], [ %22, %for.body.i186 ], [ %22, %for.body.i186 ], [ %22, %for.body.i186 ], [ %22, %for.body.i186 ], [ %22, %for.body.i186 ], [ %22, %for.body.i186 ], [ %22, %for.body.i186 ]
  br i1 %tobool39, label %if.end77, label %if.then60

if.then60:                                        ; preds = %get_addr.exit204
  %call61 = tail call fastcc %struct.rtx_def* @find_base_term(%struct.rtx_def* %retval.0.i203)
  %tobool62 = icmp eq %struct.rtx_def* %call61, null
  br i1 %tobool62, label %if.end77, label %land.lhs.true63

land.lhs.true63:                                  ; preds = %if.then60
  %27 = getelementptr inbounds %struct.rtx_def* %call61, i64 0, i32 0
  %bf.load64 = load i32* %27, align 8
  %bf.clear65 = and i32 %bf.load64, 65535
  switch i32 %bf.clear65, label %if.end77 [
    i32 67, label %return
    i32 68, label %land.lhs.true70
  ]

land.lhs.true70:                                  ; preds = %land.lhs.true63
  %bf.clear73 = and i32 %bf.load64, 67108864
  %tobool74 = icmp eq i32 %bf.clear73, 0
  br i1 %tobool74, label %if.end77, label %return

if.end77:                                         ; preds = %land.lhs.true63, %land.lhs.true70, %if.then60, %get_addr.exit204
  %bf.load78 = load i32* %0, align 8
  %bf.lshr79 = lshr i32 %bf.load78, 16
  %bf.clear80 = and i32 %bf.lshr79, 255
  %bf.load81 = load i32* %4, align 8
  %bf.lshr82 = lshr i32 %bf.load81, 16
  %bf.clear83 = and i32 %bf.lshr82, 255
  %call84 = tail call fastcc i32 @base_alias_check(%struct.rtx_def* %retval.0.i, %struct.rtx_def* %retval.0.i203, i32 %bf.clear80, i32 %bf.clear83)
  %tobool85 = icmp eq i32 %call84, 0
  br i1 %tobool85, label %return, label %if.end87

if.end87:                                         ; preds = %if.end77
  %call88 = tail call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %retval.0.i)
  %call89 = tail call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %retval.0.i203)
  %bf.load90 = load i32* %4, align 8
  %bf.lshr91 = lshr i32 %bf.load90, 16
  %bf.clear92 = and i32 %bf.lshr91, 255
  %idxprom152 = zext i32 %bf.clear92 to i64
  %arrayidx93 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom152
  %28 = load i8* %arrayidx93, align 1, !tbaa !17
  %conv = zext i8 %28 to i32
  %bf.load94 = load i32* %0, align 8
  %bf.lshr95 = lshr i32 %bf.load94, 16
  %bf.clear96 = and i32 %bf.lshr95, 255
  %idxprom97153 = zext i32 %bf.clear96 to i64
  %arrayidx98 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom97153
  %29 = load i8* %arrayidx98, align 1, !tbaa !17
  %conv99 = zext i8 %29 to i32
  %call100 = tail call fastcc i32 @memrefs_conflict_p(i32 %conv, %struct.rtx_def* %call89, i32 %conv99, %struct.rtx_def* %call88, i64 0)
  %tobool101 = icmp eq i32 %call100, 0
  br i1 %tobool101, label %return, label %if.end103

if.end103:                                        ; preds = %if.end87
  %30 = load i32* @flag_strict_aliasing, align 4, !tbaa !16
  %tobool.i166 = icmp eq i32 %30, 0
  br i1 %tobool.i166, label %fixed_scalar_and_varying_struct_p.exit, label %if.end.i168

if.end.i168:                                      ; preds = %if.end103
  %bf.load.i167 = load i32* %4, align 8
  %tobool1.i = icmp slt i32 %bf.load.i167, 0
  br i1 %tobool1.i, label %land.lhs.true.i, label %if.end11.i

land.lhs.true.i:                                  ; preds = %if.end.i168
  %bf.load2.i = load i32* %0, align 8
  %bf.clear.i169 = and i32 %bf.load2.i, 268435456
  %tobool4.i = icmp eq i32 %bf.clear.i169, 0
  br i1 %tobool4.i, label %if.end11.i, label %land.lhs.true5.i

land.lhs.true5.i:                                 ; preds = %land.lhs.true.i
  %call.i170 = tail call i32 @rtx_addr_varies_p(%struct.rtx_def* %call89, i32 1) #4
  %tobool6.i = icmp eq i32 %call.i170, 0
  br i1 %tobool6.i, label %land.lhs.true7.i, label %if.end11.i

land.lhs.true7.i:                                 ; preds = %land.lhs.true5.i
  %call8.i = tail call i32 @rtx_addr_varies_p(%struct.rtx_def* %call88, i32 1) #4
  %tobool9.i = icmp eq i32 %call8.i, 0
  br i1 %tobool9.i, label %if.end11.i, label %land.lhs.true107

if.end11.i:                                       ; preds = %land.lhs.true7.i, %land.lhs.true5.i, %land.lhs.true.i, %if.end.i168
  %bf.load12.i = load i32* %4, align 8
  %bf.clear14.i = and i32 %bf.load12.i, 268435456
  %tobool15.i = icmp eq i32 %bf.clear14.i, 0
  br i1 %tobool15.i, label %if.end27.i, label %land.lhs.true16.i

land.lhs.true16.i:                                ; preds = %if.end11.i
  %bf.load17.i = load i32* %0, align 8
  %tobool19.i = icmp slt i32 %bf.load17.i, 0
  br i1 %tobool19.i, label %land.lhs.true20.i, label %if.end27.i

land.lhs.true20.i:                                ; preds = %land.lhs.true16.i
  %call21.i = tail call i32 @rtx_addr_varies_p(%struct.rtx_def* %call89, i32 1) #4
  %tobool22.i = icmp eq i32 %call21.i, 0
  br i1 %tobool22.i, label %if.end27.i, label %land.lhs.true23.i

land.lhs.true23.i:                                ; preds = %land.lhs.true20.i
  %call24.i = tail call i32 @rtx_addr_varies_p(%struct.rtx_def* %call88, i32 1) #4
  %tobool25.i = icmp eq i32 %call24.i, 0
  br i1 %tobool25.i, label %fixed_scalar_and_varying_struct_p.exit, label %if.end27.i

if.end27.i:                                       ; preds = %land.lhs.true23.i, %land.lhs.true20.i, %land.lhs.true16.i, %if.end11.i
  br label %fixed_scalar_and_varying_struct_p.exit

fixed_scalar_and_varying_struct_p.exit:           ; preds = %if.end103, %land.lhs.true23.i, %if.end27.i
  %retval.0.i171 = phi %struct.rtx_def* [ null, %if.end27.i ], [ null, %if.end103 ], [ %x, %land.lhs.true23.i ]
  %cmp105 = icmp eq %struct.rtx_def* %retval.0.i171, %mem
  br i1 %cmp105, label %land.lhs.true107, label %land.rhs

land.lhs.true107:                                 ; preds = %land.lhs.true7.i, %fixed_scalar_and_varying_struct_p.exit
  %31 = load %struct.rtx_def** %rtx53, align 8, !tbaa !1
  %32 = getelementptr inbounds %struct.rtx_def* %31, i64 0, i32 0
  %bf.load.i162 = load i32* %32, align 8
  %bf.clear.i163 = and i32 %bf.load.i162, 65535
  %cmp.i164 = icmp eq i32 %bf.clear.i163, 83
  br i1 %cmp.i164, label %land.rhs, label %land.end116

land.rhs:                                         ; preds = %land.lhs.true107, %fixed_scalar_and_varying_struct_p.exit
  %retval.0.i171206 = phi %struct.rtx_def* [ %mem, %land.lhs.true107 ], [ %retval.0.i171, %fixed_scalar_and_varying_struct_p.exit ]
  %cmp110 = icmp eq %struct.rtx_def* %retval.0.i171206, %x
  br i1 %cmp110, label %land.rhs112, label %land.end116

land.rhs112:                                      ; preds = %land.rhs
  %33 = load %struct.rtx_def** %rtx57, align 8, !tbaa !1
  %34 = getelementptr inbounds %struct.rtx_def* %33, i64 0, i32 0
  %bf.load.i157 = load i32* %34, align 8
  %bf.clear.i158 = and i32 %bf.load.i157, 65535
  %cmp.i159 = icmp eq i32 %bf.clear.i158, 83
  br label %land.end116

land.end116:                                      ; preds = %land.lhs.true107, %land.rhs, %land.rhs112
  %35 = phi i1 [ false, %land.lhs.true107 ], [ true, %land.rhs ], [ %cmp.i159, %land.rhs112 ]
  %land.ext = zext i1 %35 to i32
  br label %return

return:                                           ; preds = %mems_in_disjoint_alias_sets_p.exit, %if.end87, %if.end77, %land.lhs.true70, %land.lhs.true63, %if.end46, %if.end38, %if.end29, %land.lhs.true18, %land.lhs.true8, %land.lhs.true, %land.end116
  %retval.0 = phi i32 [ %land.ext, %land.end116 ], [ 1, %land.lhs.true ], [ 1, %land.lhs.true8 ], [ 1, %land.lhs.true18 ], [ 0, %mems_in_disjoint_alias_sets_p.exit ], [ 0, %if.end29 ], [ 0, %if.end38 ], [ 0, %if.end46 ], [ 0, %land.lhs.true63 ], [ 0, %land.lhs.true70 ], [ 0, %if.end77 ], [ 0, %if.end87 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @output_dependence(%struct.rtx_def* readonly %mem, %struct.rtx_def* readonly %x) #0 {
entry:
  %call = tail call fastcc i32 @write_dependence_p(%struct.rtx_def* %mem, %struct.rtx_def* %x, i32 1)
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define void @mark_constant_function() #0 {
entry:
  %0 = load %union.tree_node** @current_function_decl, align 8, !tbaa !1
  %public_flag = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %public_flag, align 8
  %1 = and i32 %bf.load, 528384
  %2 = icmp eq i32 %1, 0
  br i1 %2, label %lor.lhs.false6, label %if.end42

lor.lhs.false6:                                   ; preds = %entry
  %pure_flag = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 5
  %3 = bitcast i48* %pure_flag to i64*
  %bf.load7 = load i64* %3, align 8
  %bf.cast = and i64 %bf.load7, 2147483648
  %tobool10 = icmp eq i64 %bf.cast, 0
  %bf.clear15 = and i32 %bf.load, 2048
  %tobool16 = icmp eq i32 %bf.clear15, 0
  %or.cond47 = and i1 %tobool10, %tobool16
  br i1 %or.cond47, label %lor.lhs.false17, label %if.end42

lor.lhs.false17:                                  ; preds = %lor.lhs.false6
  %type = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 1
  %4 = load %union.tree_node** %type, align 8, !tbaa !13
  %type19 = bitcast %union.tree_node* %4 to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type* %type19, i64 0, i32 6
  %bf.load20 = load i32* %mode, align 4
  %bf.clear22 = and i32 %bf.load20, 65024
  %cmp = icmp eq i32 %bf.clear22, 0
  br i1 %cmp, label %if.end42, label %if.end

if.end:                                           ; preds = %lor.lhs.false17
  %call = tail call zeroext i1 @mark_dfs_back_edges() #4
  br i1 %call, label %if.end42, label %if.end24

if.end24:                                         ; preds = %if.end
  tail call void @init_alias_analysis()
  %call25 = tail call %struct.rtx_def* @get_insns() #4
  %tobool2656 = icmp eq %struct.rtx_def* %call25, null
  br i1 %tobool2656, label %if.then37.critedge, label %for.body

for.body:                                         ; preds = %if.end24, %for.inc
  %insn.057 = phi %struct.rtx_def* [ %7, %for.inc ], [ %call25, %if.end24 ]
  %5 = getelementptr inbounds %struct.rtx_def* %insn.057, i64 0, i32 0
  %bf.load27 = load i32* %5, align 8
  %bf.clear28 = and i32 %bf.load27, 65535
  %idxprom46 = zext i32 %bf.clear28 to i64
  %arrayidx = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom46
  %6 = load i8* %arrayidx, align 1, !tbaa !17
  %cmp29 = icmp eq i8 %6, 105
  br i1 %cmp29, label %land.lhs.true, label %for.inc

land.lhs.true:                                    ; preds = %for.body
  %call31 = tail call fastcc i32 @nonlocal_mentioned_p(%struct.rtx_def* %insn.057)
  %tobool32 = icmp eq i32 %call31, 0
  br i1 %tobool32, label %for.inc, label %for.end

for.inc:                                          ; preds = %land.lhs.true, %for.body
  %arrayidx35 = getelementptr inbounds %struct.rtx_def* %insn.057, i64 0, i32 1, i64 2
  %rtx = bitcast %union.rtunion_def* %arrayidx35 to %struct.rtx_def**
  %7 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %tobool26 = icmp eq %struct.rtx_def* %7, null
  br i1 %tobool26, label %if.then37.critedge, label %for.body

for.end:                                          ; preds = %land.lhs.true
  %8 = load %struct.rtx_def*** @reg_known_value, align 8, !tbaa !1
  %add.ptr.i = getelementptr inbounds %struct.rtx_def** %8, i64 53
  %9 = bitcast %struct.rtx_def** %add.ptr.i to i8*
  tail call void @free(i8* %9) #4
  store %struct.rtx_def** null, %struct.rtx_def*** @reg_known_value, align 8, !tbaa !1
  store i32 0, i32* @reg_known_value_size, align 4, !tbaa !16
  %10 = load i8** @reg_known_equiv_p, align 8, !tbaa !1
  %add.ptr1.i = getelementptr inbounds i8* %10, i64 53
  tail call void @free(i8* %add.ptr1.i) #4
  store i8* null, i8** @reg_known_equiv_p, align 8, !tbaa !1
  %11 = load %struct.rtx_def*** @reg_base_value, align 8, !tbaa !1
  %tobool.i = icmp eq %struct.rtx_def** %11, null
  br i1 %tobool.i, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %for.end
  %12 = bitcast %struct.rtx_def** %11 to i8*
  tail call void @ggc_del_root(i8* %12) #4
  %13 = load %struct.rtx_def*** @reg_base_value, align 8, !tbaa !1
  %14 = bitcast %struct.rtx_def** %13 to i8*
  tail call void @free(i8* %14) #4
  store %struct.rtx_def** null, %struct.rtx_def*** @reg_base_value, align 8, !tbaa !1
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %for.end
  store i32 0, i32* @reg_base_value_size, align 4, !tbaa !16
  %15 = load %struct.rtx_def*** @alias_invariant, align 8, !tbaa !1
  %tobool2.i = icmp eq %struct.rtx_def** %15, null
  br i1 %tobool2.i, label %if.end42, label %if.then3.i

if.then3.i:                                       ; preds = %if.end.i
  %16 = bitcast %struct.rtx_def** %15 to i8*
  tail call void @free(i8* %16) #4
  store %struct.rtx_def** null, %struct.rtx_def*** @alias_invariant, align 8, !tbaa !1
  br label %if.end42

if.then37.critedge:                               ; preds = %for.inc, %if.end24
  %17 = load %struct.rtx_def*** @reg_known_value, align 8, !tbaa !1
  %add.ptr.i48 = getelementptr inbounds %struct.rtx_def** %17, i64 53
  %18 = bitcast %struct.rtx_def** %add.ptr.i48 to i8*
  tail call void @free(i8* %18) #4
  store %struct.rtx_def** null, %struct.rtx_def*** @reg_known_value, align 8, !tbaa !1
  store i32 0, i32* @reg_known_value_size, align 4, !tbaa !16
  %19 = load i8** @reg_known_equiv_p, align 8, !tbaa !1
  %add.ptr1.i49 = getelementptr inbounds i8* %19, i64 53
  tail call void @free(i8* %add.ptr1.i49) #4
  store i8* null, i8** @reg_known_equiv_p, align 8, !tbaa !1
  %20 = load %struct.rtx_def*** @reg_base_value, align 8, !tbaa !1
  %tobool.i50 = icmp eq %struct.rtx_def** %20, null
  br i1 %tobool.i50, label %if.end.i53, label %if.then.i51

if.then.i51:                                      ; preds = %if.then37.critedge
  %21 = bitcast %struct.rtx_def** %20 to i8*
  tail call void @ggc_del_root(i8* %21) #4
  %22 = load %struct.rtx_def*** @reg_base_value, align 8, !tbaa !1
  %23 = bitcast %struct.rtx_def** %22 to i8*
  tail call void @free(i8* %23) #4
  store %struct.rtx_def** null, %struct.rtx_def*** @reg_base_value, align 8, !tbaa !1
  br label %if.end.i53

if.end.i53:                                       ; preds = %if.then.i51, %if.then37.critedge
  store i32 0, i32* @reg_base_value_size, align 4, !tbaa !16
  %24 = load %struct.rtx_def*** @alias_invariant, align 8, !tbaa !1
  %tobool2.i52 = icmp eq %struct.rtx_def** %24, null
  br i1 %tobool2.i52, label %end_alias_analysis.exit55, label %if.then3.i54

if.then3.i54:                                     ; preds = %if.end.i53
  %25 = bitcast %struct.rtx_def** %24 to i8*
  tail call void @free(i8* %25) #4
  store %struct.rtx_def** null, %struct.rtx_def*** @alias_invariant, align 8, !tbaa !1
  br label %end_alias_analysis.exit55

end_alias_analysis.exit55:                        ; preds = %if.end.i53, %if.then3.i54
  %26 = load %union.tree_node** @current_function_decl, align 8, !tbaa !1
  %readonly_flag39 = getelementptr inbounds %union.tree_node* %26, i64 0, i32 0, i32 0, i32 2
  %bf.load40 = load i32* %readonly_flag39, align 8
  %bf.set = or i32 %bf.load40, 4096
  store i32 %bf.set, i32* %readonly_flag39, align 8
  br label %if.end42

if.end42:                                         ; preds = %if.then3.i, %if.end.i, %lor.lhs.false6, %entry, %if.end, %lor.lhs.false17, %end_alias_analysis.exit55
  ret void
}

declare zeroext i1 @mark_dfs_back_edges() #1

; Function Attrs: nounwind uwtable
define void @init_alias_analysis() #0 {
entry:
  %call = tail call i32 @max_reg_num() #4
  store i32 %call, i32* @reg_known_value_size, align 4, !tbaa !16
  %sub = add nsw i32 %call, -53
  %conv = sext i32 %sub to i64
  %call1 = tail call noalias i8* @xcalloc(i64 %conv, i64 8) #4
  %add.ptr = getelementptr inbounds i8* %call1, i64 -424
  %0 = bitcast i8* %add.ptr to %struct.rtx_def**
  store %struct.rtx_def** %0, %struct.rtx_def*** @reg_known_value, align 8, !tbaa !1
  %call4 = tail call noalias i8* @xcalloc(i64 %conv, i64 1) #4
  %add.ptr5 = getelementptr inbounds i8* %call4, i64 -53
  store i8* %add.ptr5, i8** @reg_known_equiv_p, align 8, !tbaa !1
  %mul = shl nsw i32 %call, 1
  store i32 %mul, i32* @reg_base_value_size, align 4, !tbaa !16
  %conv6 = zext i32 %mul to i64
  %call7 = tail call noalias i8* @xcalloc(i64 %conv6, i64 8) #4
  %1 = bitcast i8* %call7 to %struct.rtx_def**
  store %struct.rtx_def** %1, %struct.rtx_def*** @reg_base_value, align 8, !tbaa !1
  %2 = load i32* @reg_base_value_size, align 4, !tbaa !16
  tail call void @ggc_add_rtx_root(%struct.rtx_def** %1, i32 %2) #4
  %3 = load i32* @reg_base_value_size, align 4, !tbaa !16
  %conv8 = zext i32 %3 to i64
  %mul9 = shl nuw nsw i64 %conv8, 3
  %call10 = tail call noalias i8* @xmalloc(i64 %mul9) #4
  %4 = bitcast i8* %call10 to %struct.rtx_def**
  store %struct.rtx_def** %4, %struct.rtx_def*** @new_reg_base_value, align 8, !tbaa !1
  %5 = load i32* @reg_base_value_size, align 4, !tbaa !16
  %conv11 = zext i32 %5 to i64
  %call12 = tail call noalias i8* @xmalloc(i64 %conv11) #4
  store i8* %call12, i8** @reg_seen, align 8, !tbaa !1
  %6 = load i32* @reload_completed, align 4, !tbaa !16
  %tobool = icmp eq i32 %6, 0
  %7 = load i32* @flag_unroll_loops, align 4
  %tobool13 = icmp ne i32 %7, 0
  %or.cond = and i1 %tobool, %tobool13
  br i1 %or.cond, label %if.then, label %do.body.preheader

if.then:                                          ; preds = %entry
  %8 = load %struct.rtx_def*** @alias_invariant, align 8, !tbaa !1
  %9 = bitcast %struct.rtx_def** %8 to i8*
  %10 = load i32* @reg_base_value_size, align 4, !tbaa !16
  %conv14 = zext i32 %10 to i64
  %mul15 = shl nuw nsw i64 %conv14, 3
  %call16 = tail call i8* @xrealloc(i8* %9, i64 %mul15) #4
  %11 = bitcast i8* %call16 to %struct.rtx_def**
  store %struct.rtx_def** %11, %struct.rtx_def*** @alias_invariant, align 8, !tbaa !1
  %12 = load i32* @reg_base_value_size, align 4, !tbaa !16
  %conv17 = zext i32 %12 to i64
  %mul18 = shl nuw nsw i64 %conv17, 3
  tail call void @llvm.memset.p0i8.i64(i8* %call16, i8 0, i64 %mul18, i32 1, i1 false)
  br label %do.body.preheader

do.body.preheader:                                ; preds = %entry, %if.then
  %.pre = load i32* @reg_base_value_size, align 4, !tbaa !16
  br label %do.body

do.body:                                          ; preds = %do.body.preheader, %land.rhs
  %13 = phi i32 [ %108, %land.rhs ], [ %.pre, %do.body.preheader ]
  %pass.0 = phi i32 [ %inc334, %land.rhs ], [ 0, %do.body.preheader ]
  store i32 0, i32* @unique_id, align 4, !tbaa !16
  store i1 true, i1* @copying_arguments, align 1
  %14 = load %struct.rtx_def*** @new_reg_base_value, align 8, !tbaa !1
  %15 = bitcast %struct.rtx_def** %14 to i8*
  %conv19 = zext i32 %13 to i64
  %mul20 = shl nuw nsw i64 %conv19, 3
  tail call void @llvm.memset.p0i8.i64(i8* %15, i8 0, i64 %mul20, i32 1, i1 false)
  %16 = load i8** @reg_seen, align 8, !tbaa !1
  %17 = load i32* @reg_base_value_size, align 4, !tbaa !16
  %conv21 = zext i32 %17 to i64
  tail call void @llvm.memset.p0i8.i64(i8* %16, i8 0, i64 %conv21, i32 1, i1 false)
  br label %for.body

for.body:                                         ; preds = %for.inc, %do.body
  %indvars.iv487 = phi i64 [ 0, %do.body ], [ %indvars.iv.next488, %for.inc ]
  %18 = load i64* @argument_registers, align 8, !tbaa !25
  %sh_prom = and i64 %indvars.iv487, 4294967295
  %shl = shl i64 1, %sh_prom
  %and = and i64 %18, %shl
  %tobool23 = icmp eq i64 %and, 0
  br i1 %tobool23, label %for.inc, label %if.then24

if.then24:                                        ; preds = %for.body
  %19 = trunc i64 %indvars.iv487 to i32
  %20 = load i32* @target_flags, align 4, !tbaa !16
  %and25 = lshr i32 %20, 25
  %21 = and i32 %and25, 1
  %22 = or i32 %21, 4
  %call27 = tail call %struct.rtx_def* @gen_rtx_REG(i32 %22, i32 %19) #4
  %call28 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 25, i32 0, %struct.rtx_def* %call27) #4
  %23 = load %struct.rtx_def*** @new_reg_base_value, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds %struct.rtx_def** %23, i64 %indvars.iv487
  store %struct.rtx_def* %call28, %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.then24
  %indvars.iv.next488 = add nuw nsw i64 %indvars.iv487, 1
  %exitcond489 = icmp eq i64 %indvars.iv.next488, 53
  br i1 %exitcond489, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc
  %24 = load i32* @target_flags, align 4, !tbaa !16
  %and30 = lshr i32 %24, 25
  %25 = and i32 %and30, 1
  %26 = or i32 %25, 4
  %27 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !1
  %call33 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 25, i32 %26, %struct.rtx_def* %27) #4
  %28 = load %struct.rtx_def*** @new_reg_base_value, align 8, !tbaa !1
  %arrayidx34 = getelementptr inbounds %struct.rtx_def** %28, i64 7
  store %struct.rtx_def* %call33, %struct.rtx_def** %arrayidx34, align 8, !tbaa !1
  %29 = load i32* @target_flags, align 4, !tbaa !16
  %and35 = lshr i32 %29, 25
  %30 = and i32 %and35, 1
  %31 = or i32 %30, 4
  %32 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 5), align 8, !tbaa !1
  %call38 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 25, i32 %31, %struct.rtx_def* %32) #4
  %33 = load %struct.rtx_def*** @new_reg_base_value, align 8, !tbaa !1
  %arrayidx39 = getelementptr inbounds %struct.rtx_def** %33, i64 16
  store %struct.rtx_def* %call38, %struct.rtx_def** %arrayidx39, align 8, !tbaa !1
  %34 = load i32* @target_flags, align 4, !tbaa !16
  %and40 = lshr i32 %34, 25
  %35 = and i32 %and40, 1
  %36 = or i32 %35, 4
  %37 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 3), align 8, !tbaa !1
  %call43 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 25, i32 %36, %struct.rtx_def* %37) #4
  %38 = load %struct.rtx_def*** @new_reg_base_value, align 8, !tbaa !1
  %arrayidx44 = getelementptr inbounds %struct.rtx_def** %38, i64 20
  store %struct.rtx_def* %call43, %struct.rtx_def** %arrayidx44, align 8, !tbaa !1
  %39 = load i32* @target_flags, align 4, !tbaa !16
  %and45 = lshr i32 %39, 25
  %40 = and i32 %and45, 1
  %41 = or i32 %40, 4
  %42 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 4), align 8, !tbaa !1
  %call48 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 25, i32 %41, %struct.rtx_def* %42) #4
  %43 = load %struct.rtx_def*** @new_reg_base_value, align 8, !tbaa !1
  %arrayidx49 = getelementptr inbounds %struct.rtx_def** %43, i64 6
  store %struct.rtx_def* %call48, %struct.rtx_def** %arrayidx49, align 8, !tbaa !1
  %call50 = tail call %struct.rtx_def* @get_insns() #4
  %tobool52480 = icmp eq %struct.rtx_def* %call50, null
  br i1 %tobool52480, label %for.cond303.preheader, label %for.body53

for.cond303.preheader:                            ; preds = %for.inc298, %for.end
  %44 = load i32* @reg_base_value_size, align 4, !tbaa !16
  %cmp304483 = icmp eq i32 %44, 0
  br i1 %cmp304483, label %for.cond337.preheader, label %for.body306

for.body53:                                       ; preds = %for.end, %for.inc298
  %insn.0481 = phi %struct.rtx_def* [ %100, %for.inc298 ], [ %call50, %for.end ]
  %45 = getelementptr inbounds %struct.rtx_def* %insn.0481, i64 0, i32 0
  %bf.load = load i32* %45, align 8
  %bf.clear = and i32 %bf.load, 65535
  %idxprom54471 = zext i32 %bf.clear to i64
  %arrayidx55 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom54471
  %46 = load i8* %arrayidx55, align 1, !tbaa !17
  %cmp57 = icmp eq i8 %46, 105
  br i1 %cmp57, label %if.then59, label %if.else285

if.then59:                                        ; preds = %for.body53
  %47 = load i32* @reload_completed, align 4, !tbaa !16
  %tobool60 = icmp eq i32 %47, 0
  br i1 %tobool60, label %if.end65, label %land.lhs.true61

land.lhs.true61:                                  ; preds = %if.then59
  %call62 = tail call i32 @prologue_epilogue_contains(%struct.rtx_def* %insn.0481) #4
  %tobool63 = icmp eq i32 %call62, 0
  br i1 %tobool63, label %if.end65, label %for.inc298

if.end65:                                         ; preds = %land.lhs.true61, %if.then59
  %arrayidx66 = getelementptr inbounds %struct.rtx_def* %insn.0481, i64 0, i32 1, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx66 to %struct.rtx_def**
  %48 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %49 = getelementptr inbounds %struct.rtx_def* %48, i64 0, i32 0
  %bf.load67 = load i32* %49, align 8
  %bf.clear68 = and i32 %bf.load67, 65535
  %cmp69 = icmp eq i32 %bf.clear68, 47
  br i1 %cmp69, label %land.lhs.true71, label %if.else

land.lhs.true71:                                  ; preds = %if.end65
  %arrayidx73 = getelementptr inbounds %struct.rtx_def* %insn.0481, i64 0, i32 1, i64 6
  %rtx74 = bitcast %union.rtunion_def* %arrayidx73 to %struct.rtx_def**
  %50 = load %struct.rtx_def** %rtx74, align 8, !tbaa !1
  %cmp75 = icmp eq %struct.rtx_def* %50, null
  br i1 %cmp75, label %if.else, label %land.lhs.true77

land.lhs.true77:                                  ; preds = %land.lhs.true71
  %call78 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn.0481, i32 18, %struct.rtx_def* null) #4
  %tobool79 = icmp eq %struct.rtx_def* %call78, null
  %.pre490 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  br i1 %tobool79, label %if.else, label %if.then80

if.then80:                                        ; preds = %land.lhs.true77
  %arrayidx85 = getelementptr inbounds %struct.rtx_def* %.pre490, i64 0, i32 1, i64 0
  %rtx86 = bitcast %union.rtunion_def* %arrayidx85 to %struct.rtx_def**
  %51 = load %struct.rtx_def** %rtx86, align 8, !tbaa !1
  %52 = getelementptr inbounds %struct.rtx_def* %51, i64 0, i32 0
  %bf.load.i = load i32* %52, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  %cmp.i = icmp eq i32 %bf.clear.i, 61
  br i1 %cmp.i, label %if.end.i, label %if.end90

if.end.i:                                         ; preds = %if.then80
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %51, i64 0, i32 1, i64 0
  %rtuint.i = bitcast %union.rtunion_def* %arrayidx.i to i32*
  %53 = load i32* %rtuint.i, align 4, !tbaa !16
  %54 = load i32* @reg_base_value_size, align 4, !tbaa !16
  %cmp1.i = icmp ult i32 %53, %54
  br i1 %cmp1.i, label %if.end3.i, label %if.then2.i

if.then2.i:                                       ; preds = %if.end.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([8 x i8]* @.str, i64 0, i64 0), i32 911, i8* getelementptr inbounds ([11 x i8]* @__FUNCTION__.record_set, i64 0, i64 0)) #7
  unreachable

if.end3.i:                                        ; preds = %if.end.i
  %idxprom13.i = zext i32 %53 to i64
  %55 = load i8** @reg_seen, align 8, !tbaa !1
  %arrayidx14.i = getelementptr inbounds i8* %55, i64 %idxprom13.i
  %56 = load i8* %arrayidx14.i, align 1, !tbaa !17
  %tobool15.i = icmp eq i8 %56, 0
  br i1 %tobool15.i, label %if.end19.i, label %if.then16.i

if.then16.i:                                      ; preds = %if.end3.i
  %57 = load %struct.rtx_def*** @new_reg_base_value, align 8, !tbaa !1
  %arrayidx18.i = getelementptr inbounds %struct.rtx_def** %57, i64 %idxprom13.i
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx18.i, align 8, !tbaa !1
  br label %if.end90

if.end19.i:                                       ; preds = %if.end3.i
  store i8 1, i8* %arrayidx14.i, align 1, !tbaa !17
  %58 = load i32* @target_flags, align 4, !tbaa !16
  %and.i = lshr i32 %58, 25
  %59 = and i32 %and.i, 1
  %60 = or i32 %59, 4
  %61 = load i32* @unique_id, align 4, !tbaa !16
  %inc.i = add nsw i32 %61, 1
  store i32 %inc.i, i32* @unique_id, align 4, !tbaa !16
  %conv.i = sext i32 %61 to i64
  %call.i = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv.i) #4
  %call23.i = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 25, i32 %60, %struct.rtx_def* %call.i) #4
  %62 = load %struct.rtx_def*** @new_reg_base_value, align 8, !tbaa !1
  %arrayidx25.i = getelementptr inbounds %struct.rtx_def** %62, i64 %idxprom13.i
  store %struct.rtx_def* %call23.i, %struct.rtx_def** %arrayidx25.i, align 8, !tbaa !1
  br label %if.end90

if.else:                                          ; preds = %land.lhs.true77, %land.lhs.true71, %if.end65
  %63 = phi %struct.rtx_def* [ %48, %land.lhs.true71 ], [ %48, %if.end65 ], [ %.pre490, %land.lhs.true77 ]
  tail call void @note_stores(%struct.rtx_def* %63, void (%struct.rtx_def*, %struct.rtx_def*, i8*)* @record_set, i8* null) #4
  br label %if.end90

if.end90:                                         ; preds = %if.end19.i, %if.then16.i, %if.then80, %if.else
  %bf.load91 = load i32* %45, align 8
  %bf.clear92 = and i32 %bf.load91, 65535
  %idxprom93472 = zext i32 %bf.clear92 to i64
  %arrayidx94 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom93472
  %64 = load i8* %arrayidx94, align 1, !tbaa !17
  %cmp96 = icmp eq i8 %64, 105
  br i1 %cmp96, label %cond.true, label %for.inc298

cond.true:                                        ; preds = %if.end90
  %65 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %66 = getelementptr inbounds %struct.rtx_def* %65, i64 0, i32 0
  %bf.load101 = load i32* %66, align 8
  %bf.clear102 = and i32 %bf.load101, 65535
  %cmp103 = icmp eq i32 %bf.clear102, 47
  br i1 %cmp103, label %cond.end115, label %cond.false

cond.false:                                       ; preds = %cond.true
  %call112 = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* %insn.0481, %struct.rtx_def* %65) #4
  br label %cond.end115

cond.end115:                                      ; preds = %cond.true, %cond.false
  %cond116 = phi %struct.rtx_def* [ %call112, %cond.false ], [ %65, %cond.true ]
  %cmp117 = icmp eq %struct.rtx_def* %cond116, null
  br i1 %cmp117, label %for.inc298, label %land.lhs.true119

land.lhs.true119:                                 ; preds = %cond.end115
  %fld120 = getelementptr inbounds %struct.rtx_def* %cond116, i64 0, i32 1
  %rtx122 = bitcast [1 x %union.rtunion_def]* %fld120 to %struct.rtx_def**
  %67 = load %struct.rtx_def** %rtx122, align 8, !tbaa !1
  %68 = getelementptr inbounds %struct.rtx_def* %67, i64 0, i32 0
  %bf.load123 = load i32* %68, align 8
  %bf.clear124 = and i32 %bf.load123, 65535
  %cmp125 = icmp eq i32 %bf.clear124, 61
  br i1 %cmp125, label %land.lhs.true127, label %for.inc298

land.lhs.true127:                                 ; preds = %land.lhs.true119
  %arrayidx132 = getelementptr inbounds %struct.rtx_def* %67, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx132 to i32*
  %69 = load i32* %rtuint, align 4, !tbaa !16
  %cmp133 = icmp ugt i32 %69, 52
  br i1 %cmp133, label %if.then135, label %for.inc298

if.then135:                                       ; preds = %land.lhs.true127
  %arrayidx143 = getelementptr inbounds %struct.rtx_def* %cond116, i64 0, i32 1, i64 1
  %rtx144 = bitcast %union.rtunion_def* %arrayidx143 to %struct.rtx_def**
  %70 = load %struct.rtx_def** %rtx144, align 8, !tbaa !1
  %arrayidx146 = getelementptr inbounds %struct.rtx_def* %insn.0481, i64 0, i32 1, i64 6
  %rtx147 = bitcast %union.rtunion_def* %arrayidx146 to %struct.rtx_def**
  %71 = load %struct.rtx_def** %rtx147, align 8, !tbaa !1
  %cmp148 = icmp eq %struct.rtx_def* %71, null
  br i1 %cmp148, label %if.else198, label %land.lhs.true150

land.lhs.true150:                                 ; preds = %if.then135
  %call151 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn.0481, i32 4, %struct.rtx_def* null) #4
  %cmp152 = icmp eq %struct.rtx_def* %call151, null
  br i1 %cmp152, label %lor.lhs.false, label %land.lhs.true154

land.lhs.true154:                                 ; preds = %land.lhs.true150
  %idxprom155 = zext i32 %69 to i64
  %72 = load %struct.varray_head_tag** @reg_n_info, align 8, !tbaa !1
  %data = getelementptr inbounds %struct.varray_head_tag* %72, i64 0, i32 4
  %reg = bitcast %union.varray_data_tag* %data to [1 x %struct.reg_info_def*]*
  %arrayidx156 = getelementptr inbounds [1 x %struct.reg_info_def*]* %reg, i64 0, i64 %idxprom155
  %73 = load %struct.reg_info_def** %arrayidx156, align 8, !tbaa !1
  %sets = getelementptr inbounds %struct.reg_info_def* %73, i64 0, i32 3
  %74 = load i32* %sets, align 4, !tbaa !41
  %cmp157 = icmp eq i32 %74, 1
  br i1 %cmp157, label %land.lhs.true162, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true150, %land.lhs.true154
  %call159 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn.0481, i32 3, %struct.rtx_def* null) #4
  %cmp160 = icmp eq %struct.rtx_def* %call159, null
  br i1 %cmp160, label %if.else198, label %land.lhs.true162

land.lhs.true162:                                 ; preds = %lor.lhs.false, %land.lhs.true154
  %note.0 = phi %struct.rtx_def* [ %call151, %land.lhs.true154 ], [ %call159, %lor.lhs.false ]
  %arrayidx164 = getelementptr inbounds %struct.rtx_def* %note.0, i64 0, i32 1, i64 0
  %rtx165 = bitcast %union.rtunion_def* %arrayidx164 to %struct.rtx_def**
  %75 = load %struct.rtx_def** %rtx165, align 8, !tbaa !1
  %76 = getelementptr inbounds %struct.rtx_def* %75, i64 0, i32 0
  %bf.load166 = load i32* %76, align 8
  %bf.clear167 = and i32 %bf.load166, 65535
  %cmp168 = icmp eq i32 %bf.clear167, 3
  br i1 %cmp168, label %if.else198, label %land.lhs.true170

land.lhs.true170:                                 ; preds = %land.lhs.true162
  %call174 = tail call i32 @rtx_varies_p(%struct.rtx_def* %75, i32 1) #4
  %tobool175 = icmp eq i32 %call174, 0
  br i1 %tobool175, label %land.lhs.true176, label %if.else198

land.lhs.true176:                                 ; preds = %land.lhs.true170
  %77 = load %struct.rtx_def** %rtx122, align 8, !tbaa !1
  %78 = load %struct.rtx_def** %rtx165, align 8, !tbaa !1
  %call183 = tail call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %77, %struct.rtx_def* %78) #4
  %tobool184 = icmp eq i32 %call183, 0
  br i1 %tobool184, label %if.then185, label %if.else198

if.then185:                                       ; preds = %land.lhs.true176
  %79 = load %struct.rtx_def** %rtx165, align 8, !tbaa !1
  %idxprom189 = zext i32 %69 to i64
  %80 = load %struct.rtx_def*** @reg_known_value, align 8, !tbaa !1
  %arrayidx190 = getelementptr inbounds %struct.rtx_def** %80, i64 %idxprom189
  store %struct.rtx_def* %79, %struct.rtx_def** %arrayidx190, align 8, !tbaa !1
  %81 = getelementptr inbounds %struct.rtx_def* %note.0, i64 0, i32 0
  %bf.load191 = load i32* %81, align 8
  %bf.clear192 = and i32 %bf.load191, 16711680
  %cmp193 = icmp eq i32 %bf.clear192, 196608
  %conv195 = zext i1 %cmp193 to i8
  %82 = load i8** @reg_known_equiv_p, align 8, !tbaa !1
  %arrayidx197 = getelementptr inbounds i8* %82, i64 %idxprom189
  store i8 %conv195, i8* %arrayidx197, align 1, !tbaa !17
  br label %for.inc298

if.else198:                                       ; preds = %land.lhs.true176, %land.lhs.true170, %land.lhs.true162, %lor.lhs.false, %if.then135
  %idxprom199 = zext i32 %69 to i64
  %83 = load %struct.varray_head_tag** @reg_n_info, align 8, !tbaa !1
  %data200 = getelementptr inbounds %struct.varray_head_tag* %83, i64 0, i32 4
  %reg201 = bitcast %union.varray_data_tag* %data200 to [1 x %struct.reg_info_def*]*
  %arrayidx202 = getelementptr inbounds [1 x %struct.reg_info_def*]* %reg201, i64 0, i64 %idxprom199
  %84 = load %struct.reg_info_def** %arrayidx202, align 8, !tbaa !1
  %sets203 = getelementptr inbounds %struct.reg_info_def* %84, i64 0, i32 3
  %85 = load i32* %sets203, align 4, !tbaa !41
  %cmp204 = icmp eq i32 %85, 1
  br i1 %cmp204, label %land.lhs.true206, label %for.inc298

land.lhs.true206:                                 ; preds = %if.else198
  %86 = getelementptr inbounds %struct.rtx_def* %70, i64 0, i32 0
  %bf.load207 = load i32* %86, align 8
  %bf.clear208 = and i32 %bf.load207, 65535
  %cmp209 = icmp eq i32 %bf.clear208, 75
  br i1 %cmp209, label %land.lhs.true211, label %land.lhs.true273

land.lhs.true211:                                 ; preds = %land.lhs.true206
  %fld212 = getelementptr inbounds %struct.rtx_def* %70, i64 0, i32 1
  %rtx214 = bitcast [1 x %union.rtunion_def]* %fld212 to %struct.rtx_def**
  %87 = load %struct.rtx_def** %rtx214, align 8, !tbaa !1
  %88 = getelementptr inbounds %struct.rtx_def* %87, i64 0, i32 0
  %bf.load215 = load i32* %88, align 8
  %bf.clear216 = and i32 %bf.load215, 65535
  %cmp217 = icmp eq i32 %bf.clear216, 61
  br i1 %cmp217, label %land.lhs.true219, label %if.else265

land.lhs.true219:                                 ; preds = %land.lhs.true211
  %arrayidx224 = getelementptr inbounds %struct.rtx_def* %87, i64 0, i32 1, i64 0
  %rtuint225 = bitcast %union.rtunion_def* %arrayidx224 to i32*
  %89 = load i32* %rtuint225, align 4, !tbaa !16
  %cmp226 = icmp ugt i32 %89, 52
  br i1 %cmp226, label %land.lhs.true228, label %if.else265

land.lhs.true228:                                 ; preds = %land.lhs.true219
  %idxprom235 = zext i32 %89 to i64
  %90 = load %struct.rtx_def*** @reg_known_value, align 8, !tbaa !1
  %arrayidx236 = getelementptr inbounds %struct.rtx_def** %90, i64 %idxprom235
  %91 = load %struct.rtx_def** %arrayidx236, align 8, !tbaa !1
  %tobool237 = icmp eq %struct.rtx_def* %91, null
  br i1 %tobool237, label %if.else265, label %land.lhs.true238

land.lhs.true238:                                 ; preds = %land.lhs.true228
  %arrayidx240 = getelementptr inbounds %struct.rtx_def* %70, i64 0, i32 1, i64 1
  %rtx241 = bitcast %union.rtunion_def* %arrayidx240 to %struct.rtx_def**
  %92 = load %struct.rtx_def** %rtx241, align 8, !tbaa !1
  %93 = getelementptr inbounds %struct.rtx_def* %92, i64 0, i32 0
  %bf.load242 = load i32* %93, align 8
  %bf.clear243 = and i32 %bf.load242, 65535
  %cmp244 = icmp eq i32 %bf.clear243, 54
  br i1 %cmp244, label %if.then246, label %if.else265

if.then246:                                       ; preds = %land.lhs.true238
  %rtwint = getelementptr inbounds %struct.rtx_def* %92, i64 0, i32 1, i64 0, i32 0
  %94 = load i64* %rtwint, align 8, !tbaa !25
  %call260 = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %91, i64 %94) #4
  %95 = load %struct.rtx_def*** @reg_known_value, align 8, !tbaa !1
  %arrayidx262 = getelementptr inbounds %struct.rtx_def** %95, i64 %idxprom199
  store %struct.rtx_def* %call260, %struct.rtx_def** %arrayidx262, align 8, !tbaa !1
  %96 = load i8** @reg_known_equiv_p, align 8, !tbaa !1
  %arrayidx264 = getelementptr inbounds i8* %96, i64 %idxprom199
  store i8 0, i8* %arrayidx264, align 1, !tbaa !17
  br label %for.inc298

if.else265:                                       ; preds = %land.lhs.true228, %land.lhs.true238, %land.lhs.true219, %land.lhs.true211
  br i1 %cmp204, label %land.lhs.true273, label %for.inc298

land.lhs.true273:                                 ; preds = %land.lhs.true206, %if.else265
  %call274 = tail call i32 @rtx_varies_p(%struct.rtx_def* %70, i32 1) #4
  %tobool275 = icmp eq i32 %call274, 0
  br i1 %tobool275, label %if.then276, label %for.inc298

if.then276:                                       ; preds = %land.lhs.true273
  %97 = load %struct.rtx_def*** @reg_known_value, align 8, !tbaa !1
  %arrayidx278 = getelementptr inbounds %struct.rtx_def** %97, i64 %idxprom199
  store %struct.rtx_def* %70, %struct.rtx_def** %arrayidx278, align 8, !tbaa !1
  %98 = load i8** @reg_known_equiv_p, align 8, !tbaa !1
  %arrayidx280 = getelementptr inbounds i8* %98, i64 %idxprom199
  store i8 0, i8* %arrayidx280, align 1, !tbaa !17
  br label %for.inc298

if.else285:                                       ; preds = %for.body53
  %cmp288 = icmp eq i32 %bf.clear, 37
  br i1 %cmp288, label %land.lhs.true290, label %for.inc298

land.lhs.true290:                                 ; preds = %if.else285
  %arrayidx292 = getelementptr inbounds %struct.rtx_def* %insn.0481, i64 0, i32 1, i64 4
  %rtint = bitcast %union.rtunion_def* %arrayidx292 to i32*
  %99 = load i32* %rtint, align 4, !tbaa !16
  %cmp293 = icmp eq i32 %99, -87
  br i1 %cmp293, label %if.then295, label %for.inc298

if.then295:                                       ; preds = %land.lhs.true290
  store i1 false, i1* @copying_arguments, align 1
  br label %for.inc298

for.inc298:                                       ; preds = %if.else198, %if.end90, %land.lhs.true61, %land.lhs.true273, %cond.end115, %if.then185, %if.else265, %if.then276, %if.then246, %land.lhs.true127, %land.lhs.true119, %if.then295, %land.lhs.true290, %if.else285
  %arrayidx300 = getelementptr inbounds %struct.rtx_def* %insn.0481, i64 0, i32 1, i64 2
  %rtx301 = bitcast %union.rtunion_def* %arrayidx300 to %struct.rtx_def**
  %100 = load %struct.rtx_def** %rtx301, align 8, !tbaa !1
  %tobool52 = icmp eq %struct.rtx_def* %100, null
  br i1 %tobool52, label %for.cond303.preheader, label %for.body53

for.body306:                                      ; preds = %for.cond303.preheader, %for.inc330
  %changed.0485 = phi i32 [ %changed.1, %for.inc330 ], [ 0, %for.cond303.preheader ]
  %ui.0484 = phi i32 [ %inc331, %for.inc330 ], [ 0, %for.cond303.preheader ]
  %idxprom307 = zext i32 %ui.0484 to i64
  %101 = load %struct.rtx_def*** @new_reg_base_value, align 8, !tbaa !1
  %arrayidx308 = getelementptr inbounds %struct.rtx_def** %101, i64 %idxprom307
  %102 = load %struct.rtx_def** %arrayidx308, align 8, !tbaa !1
  %tobool309 = icmp eq %struct.rtx_def* %102, null
  br i1 %tobool309, label %for.inc330, label %land.lhs.true310

land.lhs.true310:                                 ; preds = %for.body306
  %103 = load %struct.rtx_def*** @reg_base_value, align 8, !tbaa !1
  %arrayidx314 = getelementptr inbounds %struct.rtx_def** %103, i64 %idxprom307
  %104 = load %struct.rtx_def** %arrayidx314, align 8, !tbaa !1
  %cmp315 = icmp eq %struct.rtx_def* %102, %104
  br i1 %cmp315, label %for.inc330, label %land.lhs.true317

land.lhs.true317:                                 ; preds = %land.lhs.true310
  %call322 = tail call i32 @rtx_equal_p(%struct.rtx_def* %102, %struct.rtx_def* %104) #4
  %tobool323 = icmp eq i32 %call322, 0
  br i1 %tobool323, label %if.then324, label %for.inc330

if.then324:                                       ; preds = %land.lhs.true317
  %105 = load %struct.rtx_def*** @new_reg_base_value, align 8, !tbaa !1
  %arrayidx326 = getelementptr inbounds %struct.rtx_def** %105, i64 %idxprom307
  %106 = load %struct.rtx_def** %arrayidx326, align 8, !tbaa !1
  %107 = load %struct.rtx_def*** @reg_base_value, align 8, !tbaa !1
  %arrayidx328 = getelementptr inbounds %struct.rtx_def** %107, i64 %idxprom307
  store %struct.rtx_def* %106, %struct.rtx_def** %arrayidx328, align 8, !tbaa !1
  br label %for.inc330

for.inc330:                                       ; preds = %land.lhs.true317, %land.lhs.true310, %for.body306, %if.then324
  %changed.1 = phi i32 [ %changed.0485, %land.lhs.true317 ], [ 1, %if.then324 ], [ %changed.0485, %land.lhs.true310 ], [ %changed.0485, %for.body306 ]
  %inc331 = add i32 %ui.0484, 1
  %108 = load i32* @reg_base_value_size, align 4, !tbaa !16
  %cmp304 = icmp ult i32 %inc331, %108
  br i1 %cmp304, label %for.body306, label %do.cond

do.cond:                                          ; preds = %for.inc330
  %tobool333 = icmp eq i32 %changed.1, 0
  br i1 %tobool333, label %for.cond337.preheader, label %land.rhs

land.rhs:                                         ; preds = %do.cond
  %inc334 = add nsw i32 %pass.0, 1
  %cmp335 = icmp slt i32 %inc334, 10
  br i1 %cmp335, label %do.body, label %for.cond337.preheader

for.cond337.preheader:                            ; preds = %for.cond303.preheader, %do.cond, %land.rhs
  %109 = phi i32 [ %108, %do.cond ], [ %108, %land.rhs ], [ 0, %for.cond303.preheader ]
  %cmp338477 = icmp sgt i32 %call, 53
  br i1 %cmp338477, label %for.body340, label %do.body354

for.body340:                                      ; preds = %for.cond337.preheader, %for.inc351
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc351 ], [ 53, %for.cond337.preheader ]
  %110 = load %struct.rtx_def*** @reg_known_value, align 8, !tbaa !1
  %arrayidx342 = getelementptr inbounds %struct.rtx_def** %110, i64 %indvars.iv
  %111 = load %struct.rtx_def** %arrayidx342, align 8, !tbaa !1
  %cmp343 = icmp eq %struct.rtx_def* %111, null
  br i1 %cmp343, label %if.then345, label %for.inc351

if.then345:                                       ; preds = %for.body340
  %112 = load %struct.function** @cfun, align 8, !tbaa !1
  %emit = getelementptr inbounds %struct.function* %112, i64 0, i32 3
  %113 = load %struct.emit_status** %emit, align 8, !tbaa !43
  %x_regno_reg_rtx = getelementptr inbounds %struct.emit_status* %113, i64 0, i32 12
  %114 = load %struct.rtx_def*** %x_regno_reg_rtx, align 8, !tbaa !46
  %arrayidx347 = getelementptr inbounds %struct.rtx_def** %114, i64 %indvars.iv
  %115 = load %struct.rtx_def** %arrayidx347, align 8, !tbaa !1
  store %struct.rtx_def* %115, %struct.rtx_def** %arrayidx342, align 8, !tbaa !1
  br label %for.inc351

for.inc351:                                       ; preds = %for.body340, %if.then345
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %call
  br i1 %exitcond, label %do.body354, label %for.body340

do.body354:                                       ; preds = %for.cond337.preheader, %for.inc351, %do.cond387
  %pass.1 = phi i32 [ %inc355, %do.cond387 ], [ 0, %for.inc351 ], [ 0, %for.cond337.preheader ]
  %inc355 = add nsw i32 %pass.1, 1
  %cmp357474 = icmp eq i32 %109, 0
  br i1 %cmp357474, label %do.end393, label %for.body359

for.body359:                                      ; preds = %do.body354, %for.inc384
  %changed.2476 = phi i32 [ %changed.3, %for.inc384 ], [ 0, %do.body354 ]
  %ui.1475 = phi i32 [ %inc385, %for.inc384 ], [ 0, %do.body354 ]
  %idxprom360 = zext i32 %ui.1475 to i64
  %116 = load %struct.rtx_def*** @reg_base_value, align 8, !tbaa !1
  %arrayidx361 = getelementptr inbounds %struct.rtx_def** %116, i64 %idxprom360
  %117 = load %struct.rtx_def** %arrayidx361, align 8, !tbaa !1
  %tobool362 = icmp eq %struct.rtx_def* %117, null
  br i1 %tobool362, label %for.inc384, label %land.lhs.true363

land.lhs.true363:                                 ; preds = %for.body359
  %118 = getelementptr inbounds %struct.rtx_def* %117, i64 0, i32 0
  %bf.load364 = load i32* %118, align 8
  %bf.clear365 = and i32 %bf.load364, 65535
  %cmp366 = icmp eq i32 %bf.clear365, 61
  br i1 %cmp366, label %if.then368, label %for.inc384

if.then368:                                       ; preds = %land.lhs.true363
  %arrayidx370 = getelementptr inbounds %struct.rtx_def* %117, i64 0, i32 1, i64 0
  %rtuint371 = bitcast %union.rtunion_def* %arrayidx370 to i32*
  %119 = load i32* %rtuint371, align 4, !tbaa !16
  %cmp372 = icmp eq i32 %119, %ui.1475
  br i1 %cmp372, label %if.end382, label %if.else377

if.else377:                                       ; preds = %if.then368
  %idxprom378 = zext i32 %119 to i64
  %arrayidx379 = getelementptr inbounds %struct.rtx_def** %116, i64 %idxprom378
  %120 = load %struct.rtx_def** %arrayidx379, align 8, !tbaa !1
  br label %if.end382

if.end382:                                        ; preds = %if.then368, %if.else377
  %storemerge = phi %struct.rtx_def* [ %120, %if.else377 ], [ null, %if.then368 ]
  store %struct.rtx_def* %storemerge, %struct.rtx_def** %arrayidx361, align 8, !tbaa !1
  br label %for.inc384

for.inc384:                                       ; preds = %for.body359, %land.lhs.true363, %if.end382
  %changed.3 = phi i32 [ 1, %if.end382 ], [ %changed.2476, %land.lhs.true363 ], [ %changed.2476, %for.body359 ]
  %inc385 = add i32 %ui.1475, 1
  %cmp357 = icmp ult i32 %inc385, %109
  br i1 %cmp357, label %for.body359, label %do.cond387

do.cond387:                                       ; preds = %for.inc384
  %tobool388 = icmp ne i32 %changed.3, 0
  %cmp390 = icmp slt i32 %inc355, 10
  %or.cond394 = and i1 %tobool388, %cmp390
  br i1 %or.cond394, label %do.body354, label %do.end393

do.end393:                                        ; preds = %do.body354, %do.cond387
  %121 = load %struct.rtx_def*** @new_reg_base_value, align 8, !tbaa !1
  %122 = bitcast %struct.rtx_def** %121 to i8*
  tail call void @free(i8* %122)
  store %struct.rtx_def** null, %struct.rtx_def*** @new_reg_base_value, align 8, !tbaa !1
  %123 = load i8** @reg_seen, align 8, !tbaa !1
  tail call void @free(i8* %123)
  store i8* null, i8** @reg_seen, align 8, !tbaa !1
  ret void
}

declare %struct.rtx_def* @get_insns() #1

; Function Attrs: nounwind uwtable
define internal fastcc i32 @nonlocal_mentioned_p(%struct.rtx_def* %x) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %idxprom227 = zext i32 %bf.clear to i64
  %arrayidx = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom227
  %1 = load i8* %arrayidx, align 1, !tbaa !17
  %cmp = icmp eq i8 %1, 105
  br i1 %cmp, label %if.then, label %if.end17

if.then:                                          ; preds = %entry
  %2 = and i32 %bf.load, 67174399
  %3 = icmp eq i32 %2, 67108898
  br i1 %3, label %if.then6, label %if.else

if.then6:                                         ; preds = %if.then
  %arrayidx7 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 7
  %rtx = bitcast %union.rtunion_def* %arrayidx7 to %struct.rtx_def**
  %4 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %cmp8 = icmp eq %struct.rtx_def* %4, null
  br i1 %cmp8, label %return, label %if.end14

if.else:                                          ; preds = %if.then
  %arrayidx12 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 3
  %rtx13 = bitcast %union.rtunion_def* %arrayidx12 to %struct.rtx_def**
  %5 = load %struct.rtx_def** %rtx13, align 8, !tbaa !1
  br label %if.end14

if.end14:                                         ; preds = %if.then6, %if.else
  %x.addr.0 = phi %struct.rtx_def* [ %4, %if.then6 ], [ %5, %if.else ]
  %6 = getelementptr inbounds %struct.rtx_def* %x.addr.0, i64 0, i32 0
  %bf.load15 = load i32* %6, align 8
  %bf.clear16 = and i32 %bf.load15, 65535
  br label %if.end17

if.end17:                                         ; preds = %if.end14, %entry
  %bf.load126 = phi i32 [ %bf.load15, %if.end14 ], [ %bf.load, %entry ]
  %code.0 = phi i32 [ %bf.clear16, %if.end14 ], [ %bf.clear, %entry ]
  %x.addr.1 = phi %struct.rtx_def* [ %x.addr.0, %if.end14 ], [ %x, %entry ]
  switch i32 %code.0, label %sw.epilog [
    i32 63, label %sw.bb
    i32 61, label %sw.bb41
    i32 62, label %return
    i32 59, label %return
    i32 69, label %return
    i32 54, label %return
    i32 55, label %return
    i32 56, label %return
    i32 58, label %return
    i32 67, label %return
    i32 68, label %sw.bb55
    i32 50, label %sw.bb62
    i32 66, label %sw.bb63
    i32 43, label %sw.bb124
    i32 40, label %sw.bb124
    i32 41, label %sw.bb125
  ]

sw.bb:                                            ; preds = %if.end17
  %arrayidx19 = getelementptr inbounds %struct.rtx_def* %x.addr.1, i64 0, i32 1, i64 0
  %rtx20 = bitcast %union.rtunion_def* %arrayidx19 to %struct.rtx_def**
  %7 = load %struct.rtx_def** %rtx20, align 8, !tbaa !1
  %8 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 0
  %bf.load21 = load i32* %8, align 8
  %bf.clear22 = and i32 %bf.load21, 65535
  %cmp23 = icmp eq i32 %bf.clear22, 61
  br i1 %cmp23, label %if.then25, label %sw.epilog

if.then25:                                        ; preds = %sw.bb
  %arrayidx30 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx30 to i32*
  %9 = load i32* %rtuint, align 4, !tbaa !16
  %cmp31 = icmp ult i32 %9, 53
  br i1 %cmp31, label %land.lhs.true33, label %if.end39

land.lhs.true33:                                  ; preds = %if.then25
  %call = tail call i32 @subreg_regno(%struct.rtx_def* %x.addr.1) #4
  %idxprom34 = zext i32 %call to i64
  %arrayidx35 = getelementptr inbounds [53 x i8]* @global_regs, i64 0, i64 %idxprom34
  %10 = load i8* %arrayidx35, align 1, !tbaa !17
  %tobool37 = icmp eq i8 %10, 0
  br i1 %tobool37, label %if.end39, label %return

if.end39:                                         ; preds = %land.lhs.true33, %if.then25
  br label %return

sw.bb41:                                          ; preds = %if.end17
  %arrayidx43 = getelementptr inbounds %struct.rtx_def* %x.addr.1, i64 0, i32 1, i64 0
  %rtuint44 = bitcast %union.rtunion_def* %arrayidx43 to i32*
  %11 = load i32* %rtuint44, align 4, !tbaa !16
  %cmp45 = icmp slt i32 %11, 53
  br i1 %cmp45, label %land.lhs.true47, label %if.end53

land.lhs.true47:                                  ; preds = %sw.bb41
  %idxprom48 = sext i32 %11 to i64
  %arrayidx49 = getelementptr inbounds [53 x i8]* @global_regs, i64 0, i64 %idxprom48
  %12 = load i8* %arrayidx49, align 1, !tbaa !17
  %tobool51 = icmp eq i8 %12, 0
  br i1 %tobool51, label %if.end53, label %return

if.end53:                                         ; preds = %land.lhs.true47, %sw.bb41
  br label %return

sw.bb55:                                          ; preds = %if.end17
  %bf.clear58 = lshr i32 %bf.load126, 26
  %bf.clear58.lobit = and i32 %bf.clear58, 1
  %13 = xor i32 %bf.clear58.lobit, 1
  br label %return

sw.bb62:                                          ; preds = %if.end17
  br label %return

sw.bb63:                                          ; preds = %if.end17
  %bf.clear66 = and i32 %bf.load126, 134217728
  %tobool67 = icmp eq i32 %bf.clear66, 0
  br i1 %tobool67, label %if.end69, label %return

if.end69:                                         ; preds = %sw.bb63
  %arrayidx71 = getelementptr inbounds %struct.rtx_def* %x.addr.1, i64 0, i32 1, i64 0
  %rtx72 = bitcast %union.rtunion_def* %arrayidx71 to %struct.rtx_def**
  %14 = load %struct.rtx_def** %rtx72, align 8, !tbaa !1
  %call73 = tail call fastcc %struct.rtx_def* @find_base_term(%struct.rtx_def* %14)
  %tobool74 = icmp eq %struct.rtx_def* %call73, null
  br i1 %tobool74, label %if.end123, label %if.then75

if.then75:                                        ; preds = %if.end69
  %15 = getelementptr inbounds %struct.rtx_def* %call73, i64 0, i32 0
  %bf.load76 = load i32* %15, align 8
  %bf.clear77 = and i32 %bf.load76, 65535
  %cmp78 = icmp eq i32 %bf.clear77, 25
  br i1 %cmp78, label %land.lhs.true80, label %if.end111

land.lhs.true80:                                  ; preds = %if.then75
  %bf.lshr82 = lshr i32 %bf.load76, 16
  %bf.clear83 = and i32 %bf.lshr82, 255
  %16 = load i32* @target_flags, align 4, !tbaa !16
  %and = lshr i32 %16, 25
  %17 = and i32 %and, 1
  %18 = or i32 %17, 4
  %cmp85 = icmp eq i32 %bf.clear83, %18
  br i1 %cmp85, label %land.lhs.true87, label %if.end111

land.lhs.true87:                                  ; preds = %land.lhs.true80
  %arrayidx89 = getelementptr inbounds %struct.rtx_def* %call73, i64 0, i32 1, i64 0
  %rtx90 = bitcast %union.rtunion_def* %arrayidx89 to %struct.rtx_def**
  %19 = load %struct.rtx_def** %rtx90, align 8, !tbaa !1
  %20 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !1
  %cmp91 = icmp eq %struct.rtx_def* %19, %20
  %21 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 5), align 8
  %cmp96 = icmp eq %struct.rtx_def* %19, %21
  %or.cond229 = or i1 %cmp91, %cmp96
  %22 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 4), align 8
  %cmp102 = icmp eq %struct.rtx_def* %19, %22
  %or.cond230 = or i1 %or.cond229, %cmp102
  %23 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 3), align 8
  %cmp108 = icmp eq %struct.rtx_def* %19, %23
  %or.cond231 = or i1 %or.cond230, %cmp108
  %24 = and i32 %bf.load76, 67174399
  %25 = icmp eq i32 %24, 67108932
  %or.cond = or i1 %or.cond231, %25
  br i1 %or.cond, label %return, label %if.end123

if.end111:                                        ; preds = %land.lhs.true80, %if.then75
  %.old = and i32 %bf.load76, 67174399
  %.old245 = icmp eq i32 %.old, 67108932
  br i1 %.old245, label %return, label %if.end123

if.end123:                                        ; preds = %land.lhs.true87, %if.end111, %if.end69
  br label %return

sw.bb124:                                         ; preds = %if.end17, %if.end17
  br label %return

sw.bb125:                                         ; preds = %if.end17
  %bf.clear128 = and i32 %bf.load126, 134217728
  %tobool129 = icmp eq i32 %bf.clear128, 0
  br i1 %tobool129, label %sw.epilog, label %return

sw.epilog:                                        ; preds = %sw.bb125, %if.end17, %sw.bb
  %idxprom132228 = zext i32 %code.0 to i64
  %arrayidx133 = getelementptr inbounds [153 x i8*]* @rtx_format, i64 0, i64 %idxprom132228
  %26 = load i8** %arrayidx133, align 8, !tbaa !1
  %arrayidx135 = getelementptr inbounds [153 x i8]* @rtx_length, i64 0, i64 %idxprom132228
  %27 = load i8* %arrayidx135, align 1, !tbaa !17
  %cmp137238 = icmp eq i8 %27, 0
  br i1 %cmp137238, label %return, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %sw.epilog
  %28 = zext i8 %27 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.cond.backedge
  %indvars.iv241 = phi i64 [ %28, %for.body.lr.ph ], [ %indvars.iv.next242, %for.cond.backedge ]
  %indvars.iv.next242 = add nsw i64 %indvars.iv241, -1
  %arrayidx140 = getelementptr inbounds i8* %26, i64 %indvars.iv.next242
  %29 = load i8* %arrayidx140, align 1, !tbaa !17
  switch i8 %29, label %for.cond.backedge [
    i8 101, label %land.lhs.true144
    i8 69, label %for.cond166.preheader
  ]

land.lhs.true144:                                 ; preds = %for.body
  %arrayidx147 = getelementptr inbounds %struct.rtx_def* %x.addr.1, i64 0, i32 1, i64 %indvars.iv.next242
  %rtx148 = bitcast %union.rtunion_def* %arrayidx147 to %struct.rtx_def**
  %30 = load %struct.rtx_def** %rtx148, align 8, !tbaa !1
  %tobool149 = icmp eq %struct.rtx_def* %30, null
  br i1 %tobool149, label %for.cond.backedge, label %if.then150

if.then150:                                       ; preds = %land.lhs.true144
  %call155 = tail call fastcc i32 @nonlocal_mentioned_p(%struct.rtx_def* %30)
  %tobool156 = icmp eq i32 %call155, 0
  br i1 %tobool156, label %for.cond.backedge, label %return

for.cond.backedge:                                ; preds = %for.cond166, %for.body, %land.lhs.true144, %for.cond166.preheader, %if.then150
  %31 = trunc i64 %indvars.iv.next242 to i32
  %cmp137 = icmp sgt i32 %31, 0
  br i1 %cmp137, label %for.body, label %return

for.cond166.preheader:                            ; preds = %for.body
  %arrayidx169 = getelementptr inbounds %struct.rtx_def* %x.addr.1, i64 0, i32 1, i64 %indvars.iv.next242
  %rtvec = bitcast %union.rtunion_def* %arrayidx169 to %struct.rtvec_def**
  %32 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !1
  %num_elem234 = getelementptr inbounds %struct.rtvec_def* %32, i64 0, i32 0
  %33 = load i32* %num_elem234, align 4, !tbaa !48
  %cmp170235 = icmp sgt i32 %33, 0
  br i1 %cmp170235, label %for.body172, label %for.cond.backedge

for.cond166:                                      ; preds = %for.body172
  %34 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !1
  %num_elem = getelementptr inbounds %struct.rtvec_def* %34, i64 0, i32 0
  %35 = load i32* %num_elem, align 4, !tbaa !48
  %36 = trunc i64 %indvars.iv.next to i32
  %cmp170 = icmp slt i32 %36, %35
  br i1 %cmp170, label %for.body172, label %for.cond.backedge

for.body172:                                      ; preds = %for.cond166.preheader, %for.cond166
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.cond166 ], [ 0, %for.cond166.preheader ]
  %37 = phi %struct.rtvec_def* [ %34, %for.cond166 ], [ %32, %for.cond166.preheader ]
  %arrayidx178 = getelementptr inbounds %struct.rtvec_def* %37, i64 0, i32 1, i64 %indvars.iv
  %38 = load %struct.rtx_def** %arrayidx178, align 8, !tbaa !1
  %call179 = tail call fastcc i32 @nonlocal_mentioned_p(%struct.rtx_def* %38)
  %tobool180 = icmp eq i32 %call179, 0
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  br i1 %tobool180, label %for.cond166, label %return

return:                                           ; preds = %if.then150, %for.cond.backedge, %for.body172, %sw.epilog, %if.end111, %sw.bb125, %land.lhs.true87, %sw.bb63, %sw.bb55, %if.end17, %if.end17, %if.end17, %if.end17, %if.end17, %if.end17, %if.end17, %if.end17, %land.lhs.true47, %land.lhs.true33, %if.then6, %sw.bb124, %if.end123, %sw.bb62, %if.end53, %if.end39
  %retval.0 = phi i32 [ 1, %sw.bb124 ], [ 1, %if.end123 ], [ 1, %sw.bb62 ], [ 0, %if.end53 ], [ 0, %if.end39 ], [ 0, %if.then6 ], [ 1, %land.lhs.true33 ], [ 1, %land.lhs.true47 ], [ 0, %if.end17 ], [ 0, %if.end17 ], [ 0, %if.end17 ], [ 0, %if.end17 ], [ 0, %if.end17 ], [ 0, %if.end17 ], [ 0, %if.end17 ], [ 0, %if.end17 ], [ %13, %sw.bb55 ], [ 1, %sw.bb63 ], [ 0, %land.lhs.true87 ], [ 0, %if.end111 ], [ 1, %sw.bb125 ], [ 0, %sw.epilog ], [ 1, %for.body172 ], [ 1, %if.then150 ], [ 0, %for.cond.backedge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define void @end_alias_analysis() #0 {
entry:
  %0 = load %struct.rtx_def*** @reg_known_value, align 8, !tbaa !1
  %add.ptr = getelementptr inbounds %struct.rtx_def** %0, i64 53
  %1 = bitcast %struct.rtx_def** %add.ptr to i8*
  tail call void @free(i8* %1)
  store %struct.rtx_def** null, %struct.rtx_def*** @reg_known_value, align 8, !tbaa !1
  store i32 0, i32* @reg_known_value_size, align 4, !tbaa !16
  %2 = load i8** @reg_known_equiv_p, align 8, !tbaa !1
  %add.ptr1 = getelementptr inbounds i8* %2, i64 53
  tail call void @free(i8* %add.ptr1)
  store i8* null, i8** @reg_known_equiv_p, align 8, !tbaa !1
  %3 = load %struct.rtx_def*** @reg_base_value, align 8, !tbaa !1
  %tobool = icmp eq %struct.rtx_def** %3, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %4 = bitcast %struct.rtx_def** %3 to i8*
  tail call void @ggc_del_root(i8* %4) #4
  %5 = load %struct.rtx_def*** @reg_base_value, align 8, !tbaa !1
  %6 = bitcast %struct.rtx_def** %5 to i8*
  tail call void @free(i8* %6)
  store %struct.rtx_def** null, %struct.rtx_def*** @reg_base_value, align 8, !tbaa !1
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  store i32 0, i32* @reg_base_value_size, align 4, !tbaa !16
  %7 = load %struct.rtx_def*** @alias_invariant, align 8, !tbaa !1
  %tobool2 = icmp eq %struct.rtx_def** %7, null
  br i1 %tobool2, label %if.end4, label %if.then3

if.then3:                                         ; preds = %if.end
  %8 = bitcast %struct.rtx_def** %7 to i8*
  tail call void @free(i8* %8)
  store %struct.rtx_def** null, %struct.rtx_def*** @alias_invariant, align 8, !tbaa !1
  br label %if.end4

if.end4:                                          ; preds = %if.end, %if.then3
  ret void
}

; Function Attrs: nounwind uwtable
define void @init_alias_once() #0 {
entry:
  br label %for.body

for.body:                                         ; preds = %for.inc, %entry
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next, %for.inc ]
  %0 = trunc i64 %indvars.iv to i32
  %call = tail call zeroext i1 @ix86_function_arg_regno_p(i32 %0) #4
  br i1 %call, label %land.lhs.true, label %for.inc

land.lhs.true:                                    ; preds = %for.body
  %1 = load i32* @target_flags, align 4, !tbaa !16
  %and = lshr i32 %1, 25
  %2 = and i32 %and, 1
  %3 = or i32 %2, 4
  %call1 = tail call i32 @ix86_hard_regno_mode_ok(i32 %0, i32 %3) #4
  %tobool2 = icmp eq i32 %call1, 0
  br i1 %tobool2, label %for.inc, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %shl = shl i64 1, %indvars.iv
  %4 = load i64* @argument_registers, align 8, !tbaa !25
  %or = or i64 %4, %shl
  store i64 %or, i64* @argument_registers, align 8, !tbaa !25
  br label %for.inc

for.inc:                                          ; preds = %land.lhs.true, %for.body, %if.then
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 53
  br i1 %exitcond, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc
  %call3 = tail call %struct.splay_tree_s* @splay_tree_new(i32 (i64, i64)* @splay_tree_compare_ints, void (i64)* null, void (i64)* null) #4
  store %struct.splay_tree_s* %call3, %struct.splay_tree_s** @alias_sets, align 8, !tbaa !1
  ret void
}

declare zeroext i1 @ix86_function_arg_regno_p(i32) #1

declare i32 @ix86_hard_regno_mode_ok(i32, i32) #1

declare i32 @max_reg_num() #1

declare noalias i8* @xcalloc(i64, i64) #1

declare void @ggc_add_rtx_root(%struct.rtx_def**, i32) #1

declare i8* @xrealloc(i8*, i64) #1

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #4

declare %struct.rtx_def* @gen_rtx_fmt_e(i32, i32, %struct.rtx_def*) #1

declare %struct.rtx_def* @gen_rtx_REG(i32, i32) #1

declare i32 @prologue_epilogue_contains(%struct.rtx_def*) #1

declare %struct.rtx_def* @find_reg_note(%struct.rtx_def*, i32, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define internal void @record_set(%struct.rtx_def* readonly %dest, %struct.rtx_def* readonly %set, i8* nocapture readnone %data) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %dest, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 61
  br i1 %cmp, label %if.end, label %return

if.end:                                           ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %dest, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %1 = load i32* %rtuint, align 4, !tbaa !16
  %2 = load i32* @reg_base_value_size, align 4, !tbaa !16
  %cmp1 = icmp ult i32 %1, %2
  br i1 %cmp1, label %if.end3, label %if.then2

if.then2:                                         ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([8 x i8]* @.str, i64 0, i64 0), i32 911, i8* getelementptr inbounds ([11 x i8]* @__FUNCTION__.record_set, i64 0, i64 0)) #7
  unreachable

if.end3:                                          ; preds = %if.end
  %tobool = icmp eq %struct.rtx_def* %set, null
  br i1 %tobool, label %if.else, label %if.then4

if.then4:                                         ; preds = %if.end3
  %3 = getelementptr inbounds %struct.rtx_def* %set, i64 0, i32 0
  %bf.load5 = load i32* %3, align 8
  %bf.clear6 = and i32 %bf.load5, 65535
  %cmp7 = icmp eq i32 %bf.clear6, 49
  br i1 %cmp7, label %if.then8, label %if.end10

if.then8:                                         ; preds = %if.then4
  %idxprom = zext i32 %1 to i64
  %4 = load %struct.rtx_def*** @new_reg_base_value, align 8, !tbaa !1
  %arrayidx9 = getelementptr inbounds %struct.rtx_def** %4, i64 %idxprom
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx9, align 8, !tbaa !1
  br label %return

if.end10:                                         ; preds = %if.then4
  %arrayidx12 = getelementptr inbounds %struct.rtx_def* %set, i64 0, i32 1, i64 1
  %rtx = bitcast %union.rtunion_def* %arrayidx12 to %struct.rtx_def**
  %5 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %idxprom27 = zext i32 %1 to i64
  %6 = load %struct.rtx_def*** @new_reg_base_value, align 8, !tbaa !1
  %arrayidx28 = getelementptr inbounds %struct.rtx_def** %6, i64 %idxprom27
  %7 = load %struct.rtx_def** %arrayidx28, align 8, !tbaa !1
  %tobool29 = icmp eq %struct.rtx_def* %7, null
  br i1 %tobool29, label %if.else96, label %if.then30

if.else:                                          ; preds = %if.end3
  %idxprom13 = zext i32 %1 to i64
  %8 = load i8** @reg_seen, align 8, !tbaa !1
  %arrayidx14 = getelementptr inbounds i8* %8, i64 %idxprom13
  %9 = load i8* %arrayidx14, align 1, !tbaa !17
  %tobool15 = icmp eq i8 %9, 0
  br i1 %tobool15, label %if.end19, label %if.then16

if.then16:                                        ; preds = %if.else
  %10 = load %struct.rtx_def*** @new_reg_base_value, align 8, !tbaa !1
  %arrayidx18 = getelementptr inbounds %struct.rtx_def** %10, i64 %idxprom13
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx18, align 8, !tbaa !1
  br label %return

if.end19:                                         ; preds = %if.else
  store i8 1, i8* %arrayidx14, align 1, !tbaa !17
  %11 = load i32* @target_flags, align 4, !tbaa !16
  %and = lshr i32 %11, 25
  %12 = and i32 %and, 1
  %13 = or i32 %12, 4
  %14 = load i32* @unique_id, align 4, !tbaa !16
  %inc = add nsw i32 %14, 1
  store i32 %inc, i32* @unique_id, align 4, !tbaa !16
  %conv = sext i32 %14 to i64
  %call = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv) #4
  %call23 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 25, i32 %13, %struct.rtx_def* %call) #4
  %15 = load %struct.rtx_def*** @new_reg_base_value, align 8, !tbaa !1
  %arrayidx25 = getelementptr inbounds %struct.rtx_def** %15, i64 %idxprom13
  store %struct.rtx_def* %call23, %struct.rtx_def** %arrayidx25, align 8, !tbaa !1
  br label %return

if.then30:                                        ; preds = %if.end10
  %16 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 0
  %bf.load31 = load i32* %16, align 8
  %bf.clear32 = and i32 %bf.load31, 65535
  switch i32 %bf.clear32, label %sw.default [
    i32 135, label %sw.bb
    i32 76, label %sw.bb
    i32 75, label %sw.bb47
    i32 83, label %sw.bb76
  ]

sw.bb:                                            ; preds = %if.then30, %if.then30
  %fld33 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 1
  %rtx35 = bitcast [1 x %union.rtunion_def]* %fld33 to %struct.rtx_def**
  %17 = load %struct.rtx_def** %rtx35, align 8, !tbaa !1
  %cmp36 = icmp eq %struct.rtx_def* %17, %dest
  br i1 %cmp36, label %if.end117, label %land.lhs.true

land.lhs.true:                                    ; preds = %sw.bb
  %arrayidx39 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 1, i64 1
  %rtx40 = bitcast %union.rtunion_def* %arrayidx39 to %struct.rtx_def**
  %18 = load %struct.rtx_def** %rtx40, align 8, !tbaa !1
  %cmp41 = icmp eq %struct.rtx_def* %18, %dest
  br i1 %cmp41, label %if.end117, label %if.then43

if.then43:                                        ; preds = %land.lhs.true
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx28, align 8, !tbaa !1
  br label %if.end117

sw.bb47:                                          ; preds = %if.then30
  %fld48 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 1
  %rtx50 = bitcast [1 x %union.rtunion_def]* %fld48 to %struct.rtx_def**
  %19 = load %struct.rtx_def** %rtx50, align 8, !tbaa !1
  %cmp51 = icmp eq %struct.rtx_def* %19, %dest
  %arrayidx55 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 1, i64 1
  %rtx56 = bitcast %union.rtunion_def* %arrayidx55 to %struct.rtx_def**
  %20 = load %struct.rtx_def** %rtx56, align 8, !tbaa !1
  br i1 %cmp51, label %if.end68, label %if.else57

if.else57:                                        ; preds = %sw.bb47
  %cmp61 = icmp eq %struct.rtx_def* %20, %dest
  br i1 %cmp61, label %if.end68, label %if.then72

if.end68:                                         ; preds = %if.else57, %sw.bb47
  %other.0 = phi %struct.rtx_def* [ %20, %sw.bb47 ], [ %19, %if.else57 ]
  %tobool69 = icmp eq %struct.rtx_def* %other.0, null
  br i1 %tobool69, label %if.then72, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end68
  %call70 = tail call fastcc %struct.rtx_def* @find_base_value(%struct.rtx_def* %other.0)
  %tobool71 = icmp eq %struct.rtx_def* %call70, null
  br i1 %tobool71, label %if.end117, label %lor.lhs.false.if.then72_crit_edge

lor.lhs.false.if.then72_crit_edge:                ; preds = %lor.lhs.false
  %.pre = load %struct.rtx_def*** @new_reg_base_value, align 8, !tbaa !1
  br label %if.then72

if.then72:                                        ; preds = %lor.lhs.false.if.then72_crit_edge, %if.else57, %if.end68
  %21 = phi %struct.rtx_def** [ %.pre, %lor.lhs.false.if.then72_crit_edge ], [ %6, %if.else57 ], [ %6, %if.end68 ]
  %arrayidx74 = getelementptr inbounds %struct.rtx_def** %21, i64 %idxprom27
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx74, align 8, !tbaa !1
  br label %if.end117

sw.bb76:                                          ; preds = %if.then30
  %fld77 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 1
  %rtx79 = bitcast [1 x %union.rtunion_def]* %fld77 to %struct.rtx_def**
  %22 = load %struct.rtx_def** %rtx79, align 8, !tbaa !1
  %cmp80 = icmp eq %struct.rtx_def* %22, %dest
  br i1 %cmp80, label %lor.lhs.false82, label %if.then90

lor.lhs.false82:                                  ; preds = %sw.bb76
  %arrayidx84 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 1, i64 1
  %rtx85 = bitcast %union.rtunion_def* %arrayidx84 to %struct.rtx_def**
  %23 = load %struct.rtx_def** %rtx85, align 8, !tbaa !1
  %24 = getelementptr inbounds %struct.rtx_def* %23, i64 0, i32 0
  %bf.load86 = load i32* %24, align 8
  %bf.clear87 = and i32 %bf.load86, 65535
  %cmp88 = icmp eq i32 %bf.clear87, 54
  br i1 %cmp88, label %if.end117, label %if.then90

if.then90:                                        ; preds = %lor.lhs.false82, %sw.bb76
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx28, align 8, !tbaa !1
  br label %if.end117

sw.default:                                       ; preds = %if.then30
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx28, align 8, !tbaa !1
  br label %if.end117

if.else96:                                        ; preds = %if.end10
  %cmp97 = icmp ugt i32 %1, 52
  br i1 %cmp97, label %land.lhs.true103, label %lor.lhs.false99

lor.lhs.false99:                                  ; preds = %if.else96
  %arrayidx101 = getelementptr inbounds [53 x i8]* @fixed_regs, i64 0, i64 %idxprom27
  %25 = load i8* %arrayidx101, align 1, !tbaa !17
  %tobool102 = icmp eq i8 %25, 0
  br i1 %tobool102, label %land.lhs.true103, label %if.end117

land.lhs.true103:                                 ; preds = %lor.lhs.false99, %if.else96
  %26 = load i8** @reg_seen, align 8, !tbaa !1
  %arrayidx105 = getelementptr inbounds i8* %26, i64 %idxprom27
  %27 = load i8* %arrayidx105, align 1, !tbaa !17
  %tobool106 = icmp eq i8 %27, 0
  br i1 %tobool106, label %if.then112, label %if.end117

if.then112:                                       ; preds = %land.lhs.true103
  %call113 = tail call fastcc %struct.rtx_def* @find_base_value(%struct.rtx_def* %5)
  %28 = load %struct.rtx_def*** @new_reg_base_value, align 8, !tbaa !1
  %arrayidx115 = getelementptr inbounds %struct.rtx_def** %28, i64 %idxprom27
  store %struct.rtx_def* %call113, %struct.rtx_def** %arrayidx115, align 8, !tbaa !1
  br label %if.end117

if.end117:                                        ; preds = %land.lhs.true, %sw.bb, %lor.lhs.false, %lor.lhs.false82, %land.lhs.true103, %lor.lhs.false99, %if.then112, %sw.default, %if.then43, %if.then72, %if.then90
  %29 = load i8** @reg_seen, align 8, !tbaa !1
  %arrayidx119 = getelementptr inbounds i8* %29, i64 %idxprom27
  store i8 1, i8* %arrayidx119, align 1, !tbaa !17
  br label %return

return:                                           ; preds = %entry, %if.end117, %if.end19, %if.then16, %if.then8
  ret void
}

declare void @note_stores(%struct.rtx_def*, void (%struct.rtx_def*, %struct.rtx_def*, i8*)*, i8*) #1

declare %struct.rtx_def* @single_set_2(%struct.rtx_def*, %struct.rtx_def*) #1

declare i32 @rtx_varies_p(%struct.rtx_def*, i32) #1

declare i32 @reg_overlap_mentioned_p(%struct.rtx_def*, %struct.rtx_def*) #1

declare i32 @rtx_equal_p(%struct.rtx_def*, %struct.rtx_def*) #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) #5

declare void @ggc_del_root(i8*) #1

declare i32 @subreg_regno(%struct.rtx_def*) #1

declare i32 @rtx_addr_varies_p(%struct.rtx_def*, i32) #1

; Function Attrs: nounwind uwtable
define internal fastcc i32 @rtx_equal_for_memref_p(%struct.rtx_def* %x, %struct.rtx_def* %y) #0 {
entry:
  %cmp360 = icmp eq %struct.rtx_def* %x, null
  %cmp1361 = icmp eq %struct.rtx_def* %y, null
  %or.cond362 = and i1 %cmp360, %cmp1361
  br i1 %or.cond362, label %return, label %if.end

if.end:                                           ; preds = %entry, %if.then151
  %cmp1366 = phi i1 [ %cmp1, %if.then151 ], [ %cmp1361, %entry ]
  %cmp365 = phi i1 [ %cmp, %if.then151 ], [ %cmp360, %entry ]
  %y.tr364 = phi %struct.rtx_def* [ %34, %if.then151 ], [ %y, %entry ]
  %x.tr363 = phi %struct.rtx_def* [ %33, %if.then151 ], [ %x, %entry ]
  %or.cond256 = or i1 %cmp365, %cmp1366
  br i1 %or.cond256, label %return, label %if.end5

if.end5:                                          ; preds = %if.end
  %call = tail call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %x.tr363)
  %call6 = tail call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %y.tr364)
  %cmp7 = icmp eq %struct.rtx_def* %call, %call6
  br i1 %cmp7, label %return, label %if.end9

if.end9:                                          ; preds = %if.end5
  %0 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %1 = getelementptr inbounds %struct.rtx_def* %call6, i64 0, i32 0
  %bf.load10 = load i32* %1, align 8
  %bf.clear11 = and i32 %bf.load10, 65535
  %cmp12 = icmp eq i32 %bf.clear, %bf.clear11
  br i1 %cmp12, label %if.end14, label %return

if.end14:                                         ; preds = %if.end9
  %bf.lshr331 = xor i32 %bf.load10, %bf.load
  %2 = and i32 %bf.lshr331, 16711680
  %cmp20 = icmp eq i32 %2, 0
  br i1 %cmp20, label %if.end22, label %return

if.end22:                                         ; preds = %if.end14
  switch i32 %bf.clear, label %sw.epilog [
    i32 60, label %sw.bb
    i32 61, label %sw.bb27
    i32 67, label %sw.bb35
    i32 68, label %sw.bb43
    i32 54, label %return
    i32 55, label %return
    i32 70, label %sw.bb52
  ]

sw.bb:                                            ; preds = %if.end22
  %arrayidx = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 0
  %rt_cselib = bitcast %union.rtunion_def* %arrayidx to %struct.cselib_val_struct**
  %3 = load %struct.cselib_val_struct** %rt_cselib, align 8, !tbaa !1
  %arrayidx24 = getelementptr inbounds %struct.rtx_def* %call6, i64 0, i32 1, i64 0
  %rt_cselib25 = bitcast %union.rtunion_def* %arrayidx24 to %struct.cselib_val_struct**
  %4 = load %struct.cselib_val_struct** %rt_cselib25, align 8, !tbaa !1
  %cmp26 = icmp eq %struct.cselib_val_struct* %3, %4
  %conv = zext i1 %cmp26 to i32
  br label %return

sw.bb27:                                          ; preds = %if.end22
  %arrayidx29 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx29 to i32*
  %5 = load i32* %rtuint, align 4, !tbaa !16
  %arrayidx31 = getelementptr inbounds %struct.rtx_def* %call6, i64 0, i32 1, i64 0
  %rtuint32 = bitcast %union.rtunion_def* %arrayidx31 to i32*
  %6 = load i32* %rtuint32, align 4, !tbaa !16
  %cmp33 = icmp eq i32 %5, %6
  %conv34 = zext i1 %cmp33 to i32
  br label %return

sw.bb35:                                          ; preds = %if.end22
  %arrayidx37 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx37 to %struct.rtx_def**
  %7 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %arrayidx39 = getelementptr inbounds %struct.rtx_def* %call6, i64 0, i32 1, i64 0
  %rtx40 = bitcast %union.rtunion_def* %arrayidx39 to %struct.rtx_def**
  %8 = load %struct.rtx_def** %rtx40, align 8, !tbaa !1
  %cmp41 = icmp eq %struct.rtx_def* %7, %8
  %conv42 = zext i1 %cmp41 to i32
  br label %return

sw.bb43:                                          ; preds = %if.end22
  %arrayidx45 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 0
  %rtstr = bitcast %union.rtunion_def* %arrayidx45 to i8**
  %9 = load i8** %rtstr, align 8, !tbaa !1
  %arrayidx47 = getelementptr inbounds %struct.rtx_def* %call6, i64 0, i32 1, i64 0
  %rtstr48 = bitcast %union.rtunion_def* %arrayidx47 to i8**
  %10 = load i8** %rtstr48, align 8, !tbaa !1
  %cmp49 = icmp eq i8* %9, %10
  %conv50 = zext i1 %cmp49 to i32
  br label %return

sw.bb52:                                          ; preds = %if.end22
  %arrayidx54 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 1
  %rtint = bitcast %union.rtunion_def* %arrayidx54 to i32*
  %11 = load i32* %rtint, align 4, !tbaa !16
  %arrayidx56 = getelementptr inbounds %struct.rtx_def* %call6, i64 0, i32 1, i64 1
  %rtint57 = bitcast %union.rtunion_def* %arrayidx56 to i32*
  %12 = load i32* %rtint57, align 4, !tbaa !16
  %cmp58 = icmp eq i32 %11, %12
  br i1 %cmp58, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %sw.bb52
  %arrayidx61 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 0
  %rtx62 = bitcast %union.rtunion_def* %arrayidx61 to %struct.rtx_def**
  %13 = load %struct.rtx_def** %rtx62, align 8, !tbaa !1
  %arrayidx64 = getelementptr inbounds %struct.rtx_def* %call6, i64 0, i32 1, i64 0
  %rtx65 = bitcast %union.rtunion_def* %arrayidx64 to %struct.rtx_def**
  %14 = load %struct.rtx_def** %rtx65, align 8, !tbaa !1
  %call66 = tail call fastcc i32 @rtx_equal_for_memref_p(%struct.rtx_def* %13, %struct.rtx_def* %14)
  %tobool = icmp ne i32 %call66, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %sw.bb52
  %15 = phi i1 [ false, %sw.bb52 ], [ %tobool, %land.rhs ]
  %land.ext = zext i1 %15 to i32
  br label %return

sw.epilog:                                        ; preds = %if.end22
  %16 = and i32 %bf.load, 65534
  %17 = icmp eq i32 %16, 102
  br i1 %17, label %if.then77, label %lor.lhs.false72

lor.lhs.false72:                                  ; preds = %sw.epilog
  %idxprom330 = zext i32 %bf.clear to i64
  %arrayidx73 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom330
  %18 = load i8* %arrayidx73, align 1, !tbaa !17
  switch i8 %18, label %if.end161 [
    i8 99, label %if.then77
    i8 60, label %if.then125
    i8 50, label %if.then125
    i8 49, label %if.then151
  ]

if.then77:                                        ; preds = %lor.lhs.false72, %sw.epilog
  %fld78 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1
  %rtx80 = bitcast [1 x %union.rtunion_def]* %fld78 to %struct.rtx_def**
  %19 = load %struct.rtx_def** %rtx80, align 8, !tbaa !1
  %fld81 = getelementptr inbounds %struct.rtx_def* %call6, i64 0, i32 1
  %rtx83 = bitcast [1 x %union.rtunion_def]* %fld81 to %struct.rtx_def**
  %20 = load %struct.rtx_def** %rtx83, align 8, !tbaa !1
  %call84 = tail call fastcc i32 @rtx_equal_for_memref_p(%struct.rtx_def* %19, %struct.rtx_def* %20)
  %tobool85 = icmp eq i32 %call84, 0
  br i1 %tobool85, label %if.then77.lor.rhs_crit_edge, label %land.lhs.true86

if.then77.lor.rhs_crit_edge:                      ; preds = %if.then77
  %arrayidx99.pre = getelementptr inbounds %struct.rtx_def* %call6, i64 0, i32 1, i64 1
  %rtx100.pre = bitcast %union.rtunion_def* %arrayidx99.pre to %struct.rtx_def**
  br label %lor.rhs

land.lhs.true86:                                  ; preds = %if.then77
  %arrayidx88 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 1
  %rtx89 = bitcast %union.rtunion_def* %arrayidx88 to %struct.rtx_def**
  %21 = load %struct.rtx_def** %rtx89, align 8, !tbaa !1
  %arrayidx91 = getelementptr inbounds %struct.rtx_def* %call6, i64 0, i32 1, i64 1
  %rtx92 = bitcast %union.rtunion_def* %arrayidx91 to %struct.rtx_def**
  %22 = load %struct.rtx_def** %rtx92, align 8, !tbaa !1
  %call93 = tail call fastcc i32 @rtx_equal_for_memref_p(%struct.rtx_def* %21, %struct.rtx_def* %22)
  %tobool94 = icmp eq i32 %call93, 0
  br i1 %tobool94, label %lor.rhs, label %lor.end

lor.rhs:                                          ; preds = %if.then77.lor.rhs_crit_edge, %land.lhs.true86
  %rtx100.pre-phi = phi %struct.rtx_def** [ %rtx100.pre, %if.then77.lor.rhs_crit_edge ], [ %rtx92, %land.lhs.true86 ]
  %23 = load %struct.rtx_def** %rtx80, align 8, !tbaa !1
  %24 = load %struct.rtx_def** %rtx100.pre-phi, align 8, !tbaa !1
  %call101 = tail call fastcc i32 @rtx_equal_for_memref_p(%struct.rtx_def* %23, %struct.rtx_def* %24)
  %tobool102 = icmp eq i32 %call101, 0
  br i1 %tobool102, label %lor.end, label %land.rhs103

land.rhs103:                                      ; preds = %lor.rhs
  %arrayidx105 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 1
  %rtx106 = bitcast %union.rtunion_def* %arrayidx105 to %struct.rtx_def**
  %25 = load %struct.rtx_def** %rtx106, align 8, !tbaa !1
  %26 = load %struct.rtx_def** %rtx83, align 8, !tbaa !1
  %call110 = tail call fastcc i32 @rtx_equal_for_memref_p(%struct.rtx_def* %25, %struct.rtx_def* %26)
  %tobool111 = icmp ne i32 %call110, 0
  br label %lor.end

lor.end:                                          ; preds = %land.lhs.true86, %lor.rhs, %land.rhs103
  %27 = phi i1 [ true, %land.lhs.true86 ], [ false, %lor.rhs ], [ %tobool111, %land.rhs103 ]
  %lor.ext = zext i1 %27 to i32
  br label %return

if.then125:                                       ; preds = %lor.lhs.false72, %lor.lhs.false72
  %fld126 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1
  %rtx128 = bitcast [1 x %union.rtunion_def]* %fld126 to %struct.rtx_def**
  %28 = load %struct.rtx_def** %rtx128, align 8, !tbaa !1
  %fld129 = getelementptr inbounds %struct.rtx_def* %call6, i64 0, i32 1
  %rtx131 = bitcast [1 x %union.rtunion_def]* %fld129 to %struct.rtx_def**
  %29 = load %struct.rtx_def** %rtx131, align 8, !tbaa !1
  %call132 = tail call fastcc i32 @rtx_equal_for_memref_p(%struct.rtx_def* %28, %struct.rtx_def* %29)
  %tobool133 = icmp eq i32 %call132, 0
  br i1 %tobool133, label %land.end143, label %land.rhs134

land.rhs134:                                      ; preds = %if.then125
  %arrayidx136 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 1
  %rtx137 = bitcast %union.rtunion_def* %arrayidx136 to %struct.rtx_def**
  %30 = load %struct.rtx_def** %rtx137, align 8, !tbaa !1
  %arrayidx139 = getelementptr inbounds %struct.rtx_def* %call6, i64 0, i32 1, i64 1
  %rtx140 = bitcast %union.rtunion_def* %arrayidx139 to %struct.rtx_def**
  %31 = load %struct.rtx_def** %rtx140, align 8, !tbaa !1
  %call141 = tail call fastcc i32 @rtx_equal_for_memref_p(%struct.rtx_def* %30, %struct.rtx_def* %31)
  %tobool142 = icmp ne i32 %call141, 0
  br label %land.end143

land.end143:                                      ; preds = %if.then125, %land.rhs134
  %32 = phi i1 [ false, %if.then125 ], [ %tobool142, %land.rhs134 ]
  %land.ext144 = zext i1 %32 to i32
  br label %return

if.then151:                                       ; preds = %lor.lhs.false72
  %arrayidx153 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 0
  %rtx154 = bitcast %union.rtunion_def* %arrayidx153 to %struct.rtx_def**
  %33 = load %struct.rtx_def** %rtx154, align 8, !tbaa !1
  %arrayidx156 = getelementptr inbounds %struct.rtx_def* %call6, i64 0, i32 1, i64 0
  %rtx157 = bitcast %union.rtunion_def* %arrayidx156 to %struct.rtx_def**
  %34 = load %struct.rtx_def** %rtx157, align 8, !tbaa !1
  %cmp = icmp eq %struct.rtx_def* %33, null
  %cmp1 = icmp eq %struct.rtx_def* %34, null
  %or.cond = and i1 %cmp, %cmp1
  br i1 %or.cond, label %return, label %if.end

if.end161:                                        ; preds = %lor.lhs.false72
  %arrayidx163 = getelementptr inbounds [153 x i8*]* @rtx_format, i64 0, i64 %idxprom330
  %35 = load i8** %arrayidx163, align 8, !tbaa !1
  %arrayidx165 = getelementptr inbounds [153 x i8]* @rtx_length, i64 0, i64 %idxprom330
  %36 = load i8* %arrayidx165, align 1, !tbaa !17
  %cmp167354 = icmp eq i8 %36, 0
  br i1 %cmp167354, label %return, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.end161
  %37 = zext i8 %36 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.cond.backedge
  %indvars.iv403 = phi i64 [ %37, %for.body.lr.ph ], [ %indvars.iv.next404, %for.cond.backedge ]
  %indvars.iv.next404 = add nsw i64 %indvars.iv403, -1
  %arrayidx170 = getelementptr inbounds i8* %35, i64 %indvars.iv.next404
  %38 = load i8* %arrayidx170, align 1, !tbaa !17
  %conv171 = sext i8 %38 to i32
  switch i32 %conv171, label %sw.default252 [
    i32 105, label %sw.bb172
    i32 69, label %sw.bb185
    i32 101, label %sw.bb225
    i32 115, label %sw.bb239
    i32 48, label %for.cond.backedge
  ]

sw.bb172:                                         ; preds = %for.body
  %arrayidx175 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 %indvars.iv.next404
  %rtint176 = bitcast %union.rtunion_def* %arrayidx175 to i32*
  %39 = load i32* %rtint176, align 4, !tbaa !16
  %arrayidx179 = getelementptr inbounds %struct.rtx_def* %call6, i64 0, i32 1, i64 %indvars.iv.next404
  %rtint180 = bitcast %union.rtunion_def* %arrayidx179 to i32*
  %40 = load i32* %rtint180, align 4, !tbaa !16
  %cmp181 = icmp eq i32 %39, %40
  br i1 %cmp181, label %for.cond.backedge, label %return

for.cond.backedge:                                ; preds = %for.cond198, %for.cond198.preheader, %sw.bb172, %sw.bb239, %for.body, %sw.bb225
  %41 = trunc i64 %indvars.iv.next404 to i32
  %cmp167 = icmp sgt i32 %41, 0
  br i1 %cmp167, label %for.body, label %return

sw.bb185:                                         ; preds = %for.body
  %arrayidx188 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 %indvars.iv.next404
  %rtvec = bitcast %union.rtunion_def* %arrayidx188 to %struct.rtvec_def**
  %42 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !1
  %num_elem = getelementptr inbounds %struct.rtvec_def* %42, i64 0, i32 0
  %43 = load i32* %num_elem, align 4, !tbaa !48
  %arrayidx191 = getelementptr inbounds %struct.rtx_def* %call6, i64 0, i32 1, i64 %indvars.iv.next404
  %rtvec192 = bitcast %union.rtunion_def* %arrayidx191 to %struct.rtvec_def**
  %44 = load %struct.rtvec_def** %rtvec192, align 8, !tbaa !1
  %num_elem193 = getelementptr inbounds %struct.rtvec_def* %44, i64 0, i32 0
  %45 = load i32* %num_elem193, align 4, !tbaa !48
  %cmp194 = icmp eq i32 %43, %45
  br i1 %cmp194, label %for.cond198.preheader, label %return

for.cond198.preheader:                            ; preds = %sw.bb185
  %cmp204351 = icmp sgt i32 %43, 0
  br i1 %cmp204351, label %for.body206, label %for.cond.backedge

for.cond198:                                      ; preds = %for.body206
  %46 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !1
  %num_elem203 = getelementptr inbounds %struct.rtvec_def* %46, i64 0, i32 0
  %47 = load i32* %num_elem203, align 4, !tbaa !48
  %48 = trunc i64 %indvars.iv.next to i32
  %cmp204 = icmp slt i32 %48, %47
  br i1 %cmp204, label %for.cond198.for.body206_crit_edge, label %for.cond.backedge

for.cond198.for.body206_crit_edge:                ; preds = %for.cond198
  %.pre = load %struct.rtvec_def** %rtvec192, align 8, !tbaa !1
  br label %for.body206

for.body206:                                      ; preds = %for.cond198.preheader, %for.cond198.for.body206_crit_edge
  %49 = phi %struct.rtvec_def* [ %.pre, %for.cond198.for.body206_crit_edge ], [ %44, %for.cond198.preheader ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.cond198.for.body206_crit_edge ], [ 0, %for.cond198.preheader ]
  %50 = phi %struct.rtvec_def* [ %46, %for.cond198.for.body206_crit_edge ], [ %42, %for.cond198.preheader ]
  %arrayidx212 = getelementptr inbounds %struct.rtvec_def* %50, i64 0, i32 1, i64 %indvars.iv
  %51 = load %struct.rtx_def** %arrayidx212, align 8, !tbaa !1
  %arrayidx219 = getelementptr inbounds %struct.rtvec_def* %49, i64 0, i32 1, i64 %indvars.iv
  %52 = load %struct.rtx_def** %arrayidx219, align 8, !tbaa !1
  %call220 = tail call fastcc i32 @rtx_equal_for_memref_p(%struct.rtx_def* %51, %struct.rtx_def* %52)
  %cmp221 = icmp eq i32 %call220, 0
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  br i1 %cmp221, label %return, label %for.cond198

sw.bb225:                                         ; preds = %for.body
  %arrayidx228 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 %indvars.iv.next404
  %rtx229 = bitcast %union.rtunion_def* %arrayidx228 to %struct.rtx_def**
  %53 = load %struct.rtx_def** %rtx229, align 8, !tbaa !1
  %arrayidx232 = getelementptr inbounds %struct.rtx_def* %call6, i64 0, i32 1, i64 %indvars.iv.next404
  %rtx233 = bitcast %union.rtunion_def* %arrayidx232 to %struct.rtx_def**
  %54 = load %struct.rtx_def** %rtx233, align 8, !tbaa !1
  %call234 = tail call fastcc i32 @rtx_equal_for_memref_p(%struct.rtx_def* %53, %struct.rtx_def* %54)
  %cmp235 = icmp eq i32 %call234, 0
  br i1 %cmp235, label %return, label %for.cond.backedge

sw.bb239:                                         ; preds = %for.body
  %arrayidx242 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 %indvars.iv.next404
  %rtstr243 = bitcast %union.rtunion_def* %arrayidx242 to i8**
  %55 = load i8** %rtstr243, align 8, !tbaa !1
  %arrayidx246 = getelementptr inbounds %struct.rtx_def* %call6, i64 0, i32 1, i64 %indvars.iv.next404
  %rtstr247 = bitcast %union.rtunion_def* %arrayidx246 to i8**
  %56 = load i8** %rtstr247, align 8, !tbaa !1
  %call248 = tail call i32 @strcmp(i8* %55, i8* %56) #4
  %tobool249 = icmp eq i32 %call248, 0
  br i1 %tobool249, label %for.cond.backedge, label %return

sw.default252:                                    ; preds = %for.body
  tail call void @fancy_abort(i8* getelementptr inbounds ([8 x i8]* @.str, i64 0, i64 0), i32 1192, i8* getelementptr inbounds ([23 x i8]* @__FUNCTION__.rtx_equal_for_memref_p, i64 0, i64 0)) #7
  unreachable

return:                                           ; preds = %if.then151, %if.end, %if.end5, %if.end9, %if.end14, %if.end22, %if.end22, %sw.bb172, %sw.bb185, %sw.bb225, %sw.bb239, %for.cond.backedge, %for.body206, %entry, %if.end161, %land.end143, %lor.end, %land.end, %sw.bb43, %sw.bb35, %sw.bb27, %sw.bb
  %retval.0 = phi i32 [ %lor.ext, %lor.end ], [ %land.ext144, %land.end143 ], [ %land.ext, %land.end ], [ %conv50, %sw.bb43 ], [ %conv42, %sw.bb35 ], [ %conv34, %sw.bb27 ], [ %conv, %sw.bb ], [ 1, %if.end161 ], [ 1, %entry ], [ 0, %for.body206 ], [ 0, %sw.bb172 ], [ 0, %sw.bb185 ], [ 0, %sw.bb225 ], [ 0, %sw.bb239 ], [ 1, %for.cond.backedge ], [ 1, %if.then151 ], [ 0, %if.end ], [ 1, %if.end5 ], [ 0, %if.end9 ], [ 0, %if.end14 ], [ 0, %if.end22 ], [ 0, %if.end22 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) #6

declare %struct.rtx_def* @ix86_find_base_term(%struct.rtx_def*) #1

declare i32 @host_integerp(%union.tree_node*, i32) #1

declare i64 @tree_low_cst(%union.tree_node*, i32) #1

attributes #0 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readonly uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind }

!llvm.ident = !{!0}

!0 = metadata !{metadata !"clang version 3.5 (trunk)"}
!1 = metadata !{metadata !2, metadata !2, i64 0}
!2 = metadata !{metadata !"any pointer", metadata !3, i64 0}
!3 = metadata !{metadata !"omnipotent char", metadata !4, i64 0}
!4 = metadata !{metadata !"Simple C/C++ TBAA"}
!5 = metadata !{metadata !6, metadata !7, i64 8}
!6 = metadata !{metadata !"splay_tree_node_s", metadata !7, i64 0, metadata !7, i64 8, metadata !2, i64 16, metadata !2, i64 24}
!7 = metadata !{metadata !"long", metadata !3, i64 0}
!8 = metadata !{metadata !9, metadata !11, i64 16}
!9 = metadata !{metadata !"alias_set_entry", metadata !10, i64 0, metadata !2, i64 8, metadata !11, i64 16}
!10 = metadata !{metadata !"long long", metadata !3, i64 0}
!11 = metadata !{metadata !"int", metadata !3, i64 0}
!12 = metadata !{metadata !9, metadata !2, i64 8}
!13 = metadata !{metadata !14, metadata !2, i64 8}
!14 = metadata !{metadata !"tree_common", metadata !2, i64 0, metadata !2, i64 8, metadata !3, i64 16, metadata !11, i64 17, metadata !11, i64 17, metadata !11, i64 17, metadata !11, i64 17, metadata !11, i64 17, metadata !11, i64 17, metadata !11, i64 17, metadata !11, i64 17, metadata !11, i64 18, metadata !11, i64 18, metadata !11, i64 18, metadata !11, i64 18, metadata !11, i64 18, metadata !11, i64 18, metadata !11, i64 18, metadata !11, i64 18, metadata !11, i64 19, metadata !11, i64 19, metadata !11, i64 19, metadata !11, i64 19, metadata !11, i64 19, metadata !11, i64 19, metadata !11, i64 19, metadata !11, i64 19}
!15 = metadata !{metadata !14, metadata !2, i64 0}
!16 = metadata !{metadata !11, metadata !11, i64 0}
!17 = metadata !{metadata !3, metadata !3, i64 0}
!18 = metadata !{metadata !19, metadata !2, i64 64}
!19 = metadata !{metadata !"lang_hooks", metadata !2, i64 0, metadata !7, i64 8, metadata !2, i64 16, metadata !2, i64 24, metadata !2, i64 32, metadata !2, i64 40, metadata !2, i64 48, metadata !2, i64 56, metadata !2, i64 64, metadata !2, i64 72, metadata !2, i64 80, metadata !2, i64 88, metadata !20, i64 96, metadata !2, i64 104, metadata !2, i64 112, metadata !2, i64 120, metadata !2, i64 128, metadata !2, i64 136, metadata !2, i64 144, metadata !21, i64 152, metadata !22, i64 240}
!20 = metadata !{metadata !"_Bool", metadata !3, i64 0}
!21 = metadata !{metadata !"lang_hooks_for_tree_inlining", metadata !2, i64 0, metadata !2, i64 8, metadata !2, i64 16, metadata !2, i64 24, metadata !2, i64 32, metadata !2, i64 40, metadata !2, i64 48, metadata !2, i64 56, metadata !2, i64 64, metadata !2, i64 72, metadata !2, i64 80}
!22 = metadata !{metadata !"lang_hooks_for_tree_dump", metadata !2, i64 0, metadata !2, i64 8}
!23 = metadata !{metadata !24, metadata !10, i64 192}
!24 = metadata !{metadata !"tree_decl", metadata !14, i64 0, metadata !2, i64 24, metadata !11, i64 32, metadata !11, i64 36, metadata !2, i64 40, metadata !3, i64 48, metadata !11, i64 49, metadata !11, i64 49, metadata !11, i64 49, metadata !11, i64 49, metadata !11, i64 49, metadata !11, i64 49, metadata !11, i64 49, metadata !11, i64 49, metadata !11, i64 50, metadata !11, i64 50, metadata !11, i64 50, metadata !11, i64 50, metadata !11, i64 50, metadata !11, i64 50, metadata !11, i64 50, metadata !11, i64 50, metadata !11, i64 51, metadata !11, i64 51, metadata !11, i64 51, metadata !11, i64 51, metadata !11, i64 51, metadata !3, i64 51, metadata !11, i64 51, metadata !11, i64 52, metadata !11, i64 52, metadata !11, i64 52, metadata !11, i64 52, metadata !11, i64 52, metadata !11, i64 52, metadata !11, i64 52, metadata !11, i64 53, metadata !11, i64 53, metadata !11, i64 53, metadata !11, i64 53, metadata !11, i64 53, metadata !3, i64 56, metadata !2, i64 64, metadata !2, i64 72, metadata !2, i64 80, metadata !2, i64 88, metadata !2, i64 96, metadata !2, i64 104, metadata !2, i64 112, metadata !2, i64 120, metadata !2, i64 128, metadata !2, i64 136, metadata !2, i64 144, metadata !2, i64 152, metadata !3, i64 160, metadata !2, i64 168, metadata !2, i64 176, metadata !2, i64 184, metadata !10, i64 192, metadata !2, i64 200}
!25 = metadata !{metadata !10, metadata !10, i64 0}
!26 = metadata !{metadata !24, metadata !2, i64 144}
!27 = metadata !{metadata !28, metadata !10, i64 0}
!28 = metadata !{metadata !"", metadata !10, i64 0, metadata !2, i64 8, metadata !2, i64 16, metadata !2, i64 24, metadata !11, i64 32}
!29 = metadata !{metadata !30, metadata !2, i64 128}
!30 = metadata !{metadata !"tree_type", metadata !14, i64 0, metadata !2, i64 24, metadata !2, i64 32, metadata !2, i64 40, metadata !2, i64 48, metadata !11, i64 56, metadata !11, i64 60, metadata !3, i64 61, metadata !11, i64 62, metadata !11, i64 62, metadata !11, i64 62, metadata !11, i64 62, metadata !11, i64 62, metadata !11, i64 62, metadata !11, i64 62, metadata !11, i64 63, metadata !11, i64 63, metadata !11, i64 63, metadata !11, i64 63, metadata !11, i64 63, metadata !11, i64 63, metadata !11, i64 63, metadata !11, i64 63, metadata !11, i64 64, metadata !2, i64 72, metadata !2, i64 80, metadata !3, i64 88, metadata !2, i64 96, metadata !2, i64 104, metadata !2, i64 112, metadata !2, i64 120, metadata !2, i64 128, metadata !2, i64 136, metadata !2, i64 144, metadata !10, i64 152, metadata !2, i64 160}
!31 = metadata !{metadata !30, metadata !10, i64 152}
!32 = metadata !{metadata !9, metadata !10, i64 0}
!33 = metadata !{metadata !6, metadata !7, i64 0}
!34 = metadata !{metadata !35, metadata !2, i64 8}
!35 = metadata !{metadata !"elt_loc_list", metadata !2, i64 0, metadata !2, i64 8, metadata !2, i64 16}
!36 = metadata !{metadata !28, metadata !2, i64 8}
!37 = metadata !{metadata !24, metadata !2, i64 80}
!38 = metadata !{metadata !28, metadata !2, i64 16}
!39 = metadata !{metadata !24, metadata !2, i64 88}
!40 = metadata !{metadata !28, metadata !2, i64 24}
!41 = metadata !{metadata !42, metadata !11, i64 12}
!42 = metadata !{metadata !"reg_info_def", metadata !11, i64 0, metadata !11, i64 4, metadata !11, i64 8, metadata !11, i64 12, metadata !11, i64 16, metadata !11, i64 20, metadata !11, i64 24, metadata !11, i64 28, metadata !11, i64 32, metadata !11, i64 36, metadata !3, i64 40}
!43 = metadata !{metadata !44, metadata !2, i64 24}
!44 = metadata !{metadata !"function", metadata !2, i64 0, metadata !2, i64 8, metadata !2, i64 16, metadata !2, i64 24, metadata !2, i64 32, metadata !2, i64 40, metadata !2, i64 48, metadata !2, i64 56, metadata !11, i64 64, metadata !11, i64 68, metadata !11, i64 72, metadata !11, i64 76, metadata !2, i64 80, metadata !45, i64 88, metadata !2, i64 120, metadata !2, i64 128, metadata !2, i64 136, metadata !2, i64 144, metadata !11, i64 152, metadata !2, i64 160, metadata !2, i64 168, metadata !2, i64 176, metadata !2, i64 184, metadata !2, i64 192, metadata !2, i64 200, metadata !2, i64 208, metadata !2, i64 216, metadata !2, i64 224, metadata !2, i64 232, metadata !2, i64 240, metadata !2, i64 248, metadata !2, i64 256, metadata !10, i64 264, metadata !2, i64 272, metadata !2, i64 280, metadata !2, i64 288, metadata !2, i64 296, metadata !11, i64 304, metadata !2, i64 312, metadata !2, i64 320, metadata !11, i64 328, metadata !11, i64 332, metadata !11, i64 336, metadata !2, i64 344, metadata !11, i64 352, metadata !11, i64 356, metadata !2, i64 360, metadata !2, i64 368, metadata !2, i64 376, metadata !11, i64 384, metadata !11, i64 388, metadata !2, i64 392, metadata !11, i64 400, metadata !11, i64 404, metadata !2, i64 408, metadata !2, i64 416, metadata !11, i64 424, metadata !11, i64 424, metadata !11, i64 424, metadata !11, i64 424, metadata !11, i64 424, metadata !11, i64 424, metadata !11, i64 424, metadata !11, i64 424, metadata !11, i64 425, metadata !11, i64 425, metadata !11, i64 425, metadata !11, i64 425, metadata !11, i64 425, metadata !11, i64 425, metadata !11, i64 425, metadata !11, i64 425, metadata !11, i64 426, metadata !11, i64 426, metadata !11, i64 426, metadata !11, i64 426, metadata !11, i64 426, metadata !11, i64 426, metadata !11, i64 426, metadata !11, i64 426}
!45 = metadata !{metadata !"ix86_args", metadata !11, i64 0, metadata !11, i64 4, metadata !11, i64 8, metadata !11, i64 12, metadata !11, i64 16, metadata !11, i64 20, metadata !11, i64 24}
!46 = metadata !{metadata !47, metadata !2, i64 80}
!47 = metadata !{metadata !"emit_status", metadata !11, i64 0, metadata !11, i64 4, metadata !2, i64 8, metadata !2, i64 16, metadata !2, i64 24, metadata !2, i64 32, metadata !11, i64 40, metadata !11, i64 44, metadata !2, i64 48, metadata !11, i64 56, metadata !2, i64 64, metadata !2, i64 72, metadata !2, i64 80}
!48 = metadata !{metadata !49, metadata !11, i64 0}
!49 = metadata !{metadata !"rtvec_def", metadata !11, i64 0, metadata !3, i64 8}
