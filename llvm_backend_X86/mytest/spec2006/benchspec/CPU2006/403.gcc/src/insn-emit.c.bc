; ModuleID = 'insn-emit.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.rtx_def = type { i32, [1 x %union.rtunion_def] }
%union.rtunion_def = type { i64 }
%struct.function = type { %struct.eh_status*, %struct.stmt_status*, %struct.expr_status*, %struct.emit_status*, %struct.varasm_status*, i8*, %union.tree_node*, %struct.function*, i32, i32, i32, i32, %struct.rtx_def*, %struct.ix86_args, %struct.rtx_def*, %struct.rtx_def*, i8*, %struct.initial_value_struct*, i32, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i64, %union.tree_node*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, %struct.rtx_def**, %struct.temp_slot*, i32, i32, i32, %struct.var_refs_queue*, i32, i32, i8*, %union.tree_node*, %struct.rtx_def*, i32, i32, %struct.machine_function*, i32, i32, %struct.language_function*, %struct.rtx_def*, i24 }
%struct.eh_status = type opaque
%struct.stmt_status = type opaque
%struct.expr_status = type { i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def* }
%struct.emit_status = type { i32, i32, %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.sequence_stack*, i32, i32, i8*, i32, i8*, %union.tree_node**, %struct.rtx_def** }
%struct.sequence_stack = type { %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.sequence_stack* }
%struct.varasm_status = type opaque
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.initial_value_struct = type opaque
%struct.temp_slot = type opaque
%struct.var_refs_queue = type { %struct.rtx_def*, i32, i32, %struct.var_refs_queue* }
%union.tree_node = type opaque
%struct.machine_function = type opaque
%struct.language_function = type opaque
%struct.rtvec_def = type { i32, [1 x %struct.rtx_def*] }

@const_int_rtx = external global [129 x %struct.rtx_def*]
@global_rtl = external global [11 x %struct.rtx_def*]
@ix86_compare_op0 = external global %struct.rtx_def*
@ix86_compare_op1 = external global %struct.rtx_def*
@target_flags = external global i32
@.str = private unnamed_addr constant [12 x i8] c"insn-emit.c\00", align 1
@__FUNCTION__.gen_reload_outqi = private unnamed_addr constant [17 x i8] c"gen_reload_outqi\00", align 1
@.str1 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@x86_zero_extend_with_and = external constant i32
@ix86_cpu = external global i32
@optimize_size = external global i32
@x86_use_cltd = external constant i32
@__FUNCTION__.gen_split_1001 = private unnamed_addr constant [15 x i8] c"gen_split_1001\00", align 1
@__FUNCTION__.gen_split_1003 = private unnamed_addr constant [15 x i8] c"gen_split_1003\00", align 1
@mode_bitsize = external constant [59 x i16]
@mode_size = external constant [59 x i8]
@x86_cmove = external constant i32
@ix86_arch = external global i32
@flag_pic = external global i32
@pic_offset_table_rtx = external global %struct.rtx_def*
@cfun = external global %struct.function*
@__FUNCTION__.gen_call_pop = private unnamed_addr constant [13 x i8] c"gen_call_pop\00", align 1
@ix86_fpmath = external global i32
@x86_single_stringop = external constant i32
@__FUNCTION__.gen_split_1231 = private unnamed_addr constant [15 x i8] c"gen_split_1231\00", align 1
@mode_mask_array = external constant [59 x i64]
@.str2 = private unnamed_addr constant [2 x i8] c"q\00", align 1
@__FUNCTION__.gen_prefetch = private unnamed_addr constant [13 x i8] c"gen_prefetch\00", align 1
@x86_prefetch_sse = external global i32
@__FUNCTION__.add_clobbers = private unnamed_addr constant [13 x i8] c"add_clobbers\00", align 1
@__FUNCTION__.added_clobbers_hard_reg_p = private unnamed_addr constant [26 x i8] c"added_clobbers_hard_reg_p\00", align 1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_cmpdi_ccno_1_rex64(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 0, i32 17) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 74, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call1) #4
  ret %struct.rtx_def* %call2
}

declare %struct.rtx_def* @gen_rtx_fmt_ee(i32, i32, %struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @gen_rtx_REG(i32, i32) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_cmpdi_1_insn_rex64(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 0, i32 17) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 74, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call1) #4
  ret %struct.rtx_def* %call2
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_cmpqi_ext_3_insn(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 0, i32 17) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 8) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 8) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 133, i32 4, %struct.rtx_def* %operand0, %struct.rtx_def* %call1, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 2, %struct.rtx_def* %call3, i32 0) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 74, i32 0, %struct.rtx_def* %call4, %struct.rtx_def* %operand1) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call5) #4
  ret %struct.rtx_def* %call6
}

declare %struct.rtx_def* @gen_rtx_SUBREG(i32, %struct.rtx_def*, i32) #1

declare %struct.rtx_def* @gen_rtx_fmt_eee(i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @gen_rtx_CONST_INT(i32, i64) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_cmpqi_ext_3_insn_rex64(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 0, i32 17) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 8) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 8) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 133, i32 4, %struct.rtx_def* %operand0, %struct.rtx_def* %call1, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 2, %struct.rtx_def* %call3, i32 0) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 74, i32 0, %struct.rtx_def* %call4, %struct.rtx_def* %operand1) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call5) #4
  ret %struct.rtx_def* %call6
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_x86_fnstsw_1(%struct.rtx_def* %operand0) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 0, i32 18) #4
  %call1 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %call) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_Ei(i32 42, i32 3, %struct.rtvec_def* %call1, i32 9) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call2) #4
  ret %struct.rtx_def* %call3
}

declare %struct.rtx_def* @gen_rtx_fmt_Ei(i32, i32, %struct.rtvec_def*, i32) #1

declare %struct.rtvec_def* @gen_rtvec(i32, ...) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_x86_sahf_1(%struct.rtx_def* %operand0) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call1 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %operand0) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_Ei(i32 42, i32 52, %struct.rtvec_def* %call1, i32 10) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call2) #4
  ret %struct.rtx_def* %call3
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_popsi1(%struct.rtx_def* %operand0) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 4, %struct.rtx_def* %call) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 4) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %call4, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call3, %struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call2, %struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call8) #4
  ret %struct.rtx_def* %call9
}

declare %struct.rtx_def* @gen_rtx_fmt_E(i32, i32, %struct.rtvec_def*) #1

declare %struct.rtx_def* @gen_rtx_MEM(i32, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_movsi_insv_1(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 8) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 8) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 133, i32 4, %struct.rtx_def* %operand0, %struct.rtx_def* %call, %struct.rtx_def* %call1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call2, %struct.rtx_def* %operand1) #4
  ret %struct.rtx_def* %call3
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_pushdi2_rex64(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_popdi1(%struct.rtx_def* %operand0) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 7) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 5, %struct.rtx_def* %call) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 7) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 7) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 8) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 5, %struct.rtx_def* %call4, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call3, %struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call2, %struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call8) #4
  ret %struct.rtx_def* %call9
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_swapxf(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand0) #4
  %call2 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call, %struct.rtx_def* %call1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call2) #4
  ret %struct.rtx_def* %call3
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_swaptf(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand0) #4
  %call2 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call, %struct.rtx_def* %call1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call2) #4
  ret %struct.rtx_def* %call3
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_zero_extendhisi2_and(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 121, i32 4, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call1, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call4) #4
  ret %struct.rtx_def* %call5
}

declare %struct.rtx_def* @gen_rtx_fmt_e(i32, i32, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_zero_extendsidi2_32(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 121, i32 5, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call1, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call4) #4
  ret %struct.rtx_def* %call5
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_zero_extendsidi2_rex64(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 121, i32 5, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_zero_extendhidi2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 121, i32 5, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_zero_extendqidi2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 121, i32 5, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_extendsidi2_rex64(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 120, i32 5, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_extendhidi2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 120, i32 5, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_extendqidi2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 120, i32 5, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_extendhisi2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 120, i32 4, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_extendqihi2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 120, i32 3, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_extendqisi2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 120, i32 4, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_truncdfsf2_3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 124, i32 15, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_truncdfsf2_sse_only(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 124, i32 15, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_fix_truncdi_nomemory(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* %operand3, %struct.rtx_def* %operand4) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 126, i32 5, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %operand2) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %operand3) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %operand4) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_0(i32 62, i32 16) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 5, %struct.rtx_def* %call1, %struct.rtx_def* %call2, %struct.rtx_def* %call3, %struct.rtx_def* %call4, %struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call7) #4
  ret %struct.rtx_def* %call8
}

declare %struct.rtx_def* @gen_rtx_fmt_0(i32, i32) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_fix_truncdi_memory(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* %operand3) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 126, i32 5, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %operand2) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %operand3) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_0(i32 62, i32 16) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 4, %struct.rtx_def* %call1, %struct.rtx_def* %call2, %struct.rtx_def* %call3, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call6) #4
  ret %struct.rtx_def* %call7
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_fix_truncsfdi_sse(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 126, i32 5, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_fix_truncdfdi_sse(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 126, i32 5, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_fix_truncsi_nomemory(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* %operand3, %struct.rtx_def* %operand4) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 126, i32 4, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %operand2) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %operand3) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %operand4) #4
  %call5 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 4, %struct.rtx_def* %call1, %struct.rtx_def* %call2, %struct.rtx_def* %call3, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call5) #4
  ret %struct.rtx_def* %call6
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_fix_truncsi_memory(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* %operand3) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 126, i32 4, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %operand2) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %operand3) #4
  %call4 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 3, %struct.rtx_def* %call1, %struct.rtx_def* %call2, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call4) #4
  ret %struct.rtx_def* %call5
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_fix_truncsfsi_sse(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 126, i32 4, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_fix_truncdfsi_sse(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 126, i32 4, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_fix_trunchi_nomemory(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* %operand3, %struct.rtx_def* %operand4) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 126, i32 3, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %operand2) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %operand3) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %operand4) #4
  %call5 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 4, %struct.rtx_def* %call1, %struct.rtx_def* %call2, %struct.rtx_def* %call3, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call5) #4
  ret %struct.rtx_def* %call6
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_fix_trunchi_memory(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* %operand3) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 126, i32 3, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %operand2) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %operand3) #4
  %call4 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 3, %struct.rtx_def* %call1, %struct.rtx_def* %call2, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call4) #4
  ret %struct.rtx_def* %call5
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_x86_fnstcw_1(%struct.rtx_def* %operand0) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 3, i32 18) #4
  %call1 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %call) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_Ei(i32 42, i32 3, %struct.rtvec_def* %call1, i32 11) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call2) #4
  ret %struct.rtx_def* %call3
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_x86_fldcw_1(%struct.rtx_def* %operand0) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 3, i32 18) #4
  %call1 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %operand0) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_Ei(i32 42, i32 3, %struct.rtvec_def* %call1, i32 12) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call2) #4
  ret %struct.rtx_def* %call3
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_floathisf2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 125, i32 15, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_floathidf2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 125, i32 16, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_floathixf2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 125, i32 17, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_floathitf2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 125, i32 18, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_floatsixf2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 125, i32 17, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_floatsitf2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 125, i32 18, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_floatdixf2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 125, i32 17, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_floatditf2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 125, i32 18, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_addqi3_cc(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call1 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_Ei(i32 42, i32 52, %struct.rtvec_def* %call1, i32 12) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 2, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call3, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call6) #4
  ret %struct.rtx_def* %call7
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_addsi_1_zext(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 121, i32 5, %struct.rtx_def* %call) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call2, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call5) #4
  ret %struct.rtx_def* %call6
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_addqi_ext_1(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 8) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 8) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 133, i32 4, %struct.rtx_def* %operand0, %struct.rtx_def* %call, %struct.rtx_def* %call1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 8) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 8) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 133, i32 4, %struct.rtx_def* %operand1, %struct.rtx_def* %call3, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %call5, %struct.rtx_def* %operand2) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call2, %struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call8) #4
  %call10 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call7, %struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call10) #4
  ret %struct.rtx_def* %call11
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_subdi3_carry_rex64(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 111, i32 5, %struct.rtx_def* %call, %struct.rtx_def* %0) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 5, %struct.rtx_def* %call1, %struct.rtx_def* %operand2) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 76, i32 5, %struct.rtx_def* %operand1, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call4, %struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call7) #4
  ret %struct.rtx_def* %call8
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_subsi3_carry(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 111, i32 4, %struct.rtx_def* %call, %struct.rtx_def* %0) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %call1, %struct.rtx_def* %operand2) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 76, i32 4, %struct.rtx_def* %operand1, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call4, %struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call7) #4
  ret %struct.rtx_def* %call8
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_subsi3_carry_zext(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 111, i32 4, %struct.rtx_def* %call, %struct.rtx_def* %0) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %call1, %struct.rtx_def* %operand2) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 76, i32 4, %struct.rtx_def* %operand1, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 121, i32 5, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call5, %struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call8) #4
  ret %struct.rtx_def* %call9
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_divqi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 79, i32 2, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call1, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call4) #4
  ret %struct.rtx_def* %call5
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_udivqi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 81, i32 2, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call1, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call4) #4
  ret %struct.rtx_def* %call5
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_divmodhi4(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* %operand3) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 79, i32 3, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 80, i32 3, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand3, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 3, %struct.rtx_def* %call1, %struct.rtx_def* %call3, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call6) #4
  ret %struct.rtx_def* %call7
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_udivmoddi4(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* %operand3) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 81, i32 5, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 82, i32 5, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand3, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 3, %struct.rtx_def* %call1, %struct.rtx_def* %call3, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call6) #4
  ret %struct.rtx_def* %call7
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_udivmodsi4(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* %operand3) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 81, i32 4, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 82, i32 4, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand3, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 3, %struct.rtx_def* %call1, %struct.rtx_def* %call3, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call6) #4
  ret %struct.rtx_def* %call7
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_testsi_1(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 0, i32 17) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 83, i32 4, %struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #4
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 74, i32 0, %struct.rtx_def* %call1, %struct.rtx_def* %0) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call2) #4
  ret %struct.rtx_def* %call3
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_andqi_ext_0(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 8) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 8) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 133, i32 4, %struct.rtx_def* %operand0, %struct.rtx_def* %call, %struct.rtx_def* %call1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 8) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 8) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 133, i32 4, %struct.rtx_def* %operand1, %struct.rtx_def* %call3, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 83, i32 4, %struct.rtx_def* %call5, %struct.rtx_def* %operand2) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call2, %struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call8) #4
  %call10 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call7, %struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call10) #4
  ret %struct.rtx_def* %call11
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_negsf2_memory(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 77, i32 15, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call1, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call4) #4
  ret %struct.rtx_def* %call5
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_negsf2_ifs(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 77, i32 15, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %operand2) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 3, %struct.rtx_def* %call1, %struct.rtx_def* %call2, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call5) #4
  ret %struct.rtx_def* %call6
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_negdf2_memory(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 77, i32 16, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call1, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call4) #4
  ret %struct.rtx_def* %call5
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_negdf2_ifs(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 77, i32 16, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %operand2) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 3, %struct.rtx_def* %call1, %struct.rtx_def* %call2, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call5) #4
  ret %struct.rtx_def* %call6
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_abssf2_memory(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 129, i32 15, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call1, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call4) #4
  ret %struct.rtx_def* %call5
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_abssf2_ifs(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 129, i32 15, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %operand2) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 3, %struct.rtx_def* %call1, %struct.rtx_def* %call2, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call5) #4
  ret %struct.rtx_def* %call6
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_absdf2_memory(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 129, i32 16, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call1, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call4) #4
  ret %struct.rtx_def* %call5
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_absdf2_ifs(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 129, i32 16, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %operand2) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 3, %struct.rtx_def* %call1, %struct.rtx_def* %call2, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call5) #4
  ret %struct.rtx_def* %call6
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_ashldi3_1(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 87, i32 5, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_0(i32 62, i32 4) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 3, %struct.rtx_def* %call1, %struct.rtx_def* %call3, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call6) #4
  ret %struct.rtx_def* %call7
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_x86_shld_1(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 87, i32 4, %struct.rtx_def* %operand0, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 32) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 76, i32 2, %struct.rtx_def* %call1, %struct.rtx_def* %operand2) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 90, i32 4, %struct.rtx_def* %operand1, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 84, i32 4, %struct.rtx_def* %call, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call5, %struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call8) #4
  ret %struct.rtx_def* %call9
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_ashrdi3_63_rex64(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 89, i32 5, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call1, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call4) #4
  ret %struct.rtx_def* %call5
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_ashrdi3_1(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 89, i32 5, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_0(i32 62, i32 4) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 3, %struct.rtx_def* %call1, %struct.rtx_def* %call3, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call6) #4
  ret %struct.rtx_def* %call7
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_x86_shrd_1(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 89, i32 4, %struct.rtx_def* %operand0, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 32) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 76, i32 2, %struct.rtx_def* %call1, %struct.rtx_def* %operand2) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 87, i32 4, %struct.rtx_def* %operand1, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 84, i32 4, %struct.rtx_def* %call, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call5, %struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call8) #4
  ret %struct.rtx_def* %call9
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_ashrsi3_31(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 89, i32 4, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call1, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call4) #4
  ret %struct.rtx_def* %call5
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_lshrdi3_1(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 90, i32 5, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_0(i32 62, i32 4) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 3, %struct.rtx_def* %call1, %struct.rtx_def* %call3, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call6) #4
  ret %struct.rtx_def* %call7
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_setcc_2(%struct.rtx_def* %operand0, %struct.rtx_def* nocapture readonly %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 64, i32 0, %struct.rtx_def* %operand0) #4
  %0 = getelementptr inbounds %struct.rtx_def* %operand1, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %call1 = tail call %struct.rtx_def* @gen_rtx_REG(i32 0, i32 17) #4
  %1 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call2 = tail call %struct.rtx_def* (i32, i32, ...)* @gen_rtx(i32 %bf.clear, i32 2, %struct.rtx_def* %call1, %struct.rtx_def* %1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call2) #4
  ret %struct.rtx_def* %call3
}

declare %struct.rtx_def* @gen_rtx(i32, i32, ...) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_jump(%struct.rtx_def* %operand0) #0 {
entry:
  %0 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_u00(i32 67, i32 0, %struct.rtx_def* %operand0) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

declare %struct.rtx_def* @gen_rtx_fmt_u00(i32, i32, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_doloop_end_internal(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %0 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 8, !tbaa !1
  %1 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 102, i32 0, %struct.rtx_def* %operand1, %struct.rtx_def* %1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_u00(i32 67, i32 0, %struct.rtx_def* %operand0) #4
  %2 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 8, !tbaa !1
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 72, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call1, %struct.rtx_def* %2) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call2) #4
  %3 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !tbaa !1
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %operand1, %struct.rtx_def* %3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand2, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_0(i32 62, i32 4) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call8) #4
  %call10 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 4, %struct.rtx_def* %call3, %struct.rtx_def* %call5, %struct.rtx_def* %call7, %struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call10) #4
  ret %struct.rtx_def* %call11
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_blockage() #0 {
entry:
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %0) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_Ei(i32 43, i32 0, %struct.rtvec_def* %call, i32 0) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_return_internal() #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_(i32 51, i32 0) #4
  ret %struct.rtx_def* %call
}

declare %struct.rtx_def* @gen_rtx_fmt_(i32, i32) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_return_pop_internal(%struct.rtx_def* %operand0) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_(i32 51, i32 0) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %operand0) #4
  %call2 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call, %struct.rtx_def* %call1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call2) #4
  ret %struct.rtx_def* %call3
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_return_indirect_internal(%struct.rtx_def* %operand0) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_(i32 51, i32 0) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %operand0) #4
  %call2 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call, %struct.rtx_def* %call1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call2) #4
  ret %struct.rtx_def* %call3
}

; Function Attrs: nounwind readonly uwtable
define %struct.rtx_def* @gen_nop() #2 {
entry:
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  ret %struct.rtx_def* %0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_prologue_set_got(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %0 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 76, i32 4, %struct.rtx_def* %0, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %operand1, %struct.rtx_def* %call) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %operand0, %struct.rtx_def* %call1) #4
  %call3 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_Ei(i32 43, i32 4, %struct.rtvec_def* %call3, i32 1) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call5, %struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call8) #4
  ret %struct.rtx_def* %call9
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_prologue_get_pc(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %0 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %0, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %call) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_Ei(i32 43, i32 4, %struct.rtvec_def* %call1, i32 2) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call2) #4
  ret %struct.rtx_def* %call3
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_eh_return_si(%struct.rtx_def* %operand0) #0 {
entry:
  %call = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %operand0) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_Ei(i32 43, i32 0, %struct.rtvec_def* %call, i32 13) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_eh_return_di(%struct.rtx_def* %operand0) #0 {
entry:
  %call = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %operand0) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_Ei(i32 43, i32 0, %struct.rtvec_def* %call, i32 13) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_leave() #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 6) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 4) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %call1, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 6) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 6) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 4, %struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call5, %struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_0(i32 62, i32 0) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call10) #4
  %call12 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 3, %struct.rtx_def* %call4, %struct.rtx_def* %call8, %struct.rtx_def* %call11) #4
  %call13 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call12) #4
  ret %struct.rtx_def* %call13
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_leave_rex64() #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 7) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 6) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 8) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 5, %struct.rtx_def* %call1, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 6) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 6) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 5, %struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call5, %struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_0(i32 62, i32 0) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call10) #4
  %call12 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 3, %struct.rtx_def* %call4, %struct.rtx_def* %call8, %struct.rtx_def* %call11) #4
  %call13 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call12) #4
  ret %struct.rtx_def* %call13
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_ffssi_1(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 56, i32 17) #4
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 74, i32 56, %struct.rtx_def* %operand1, %struct.rtx_def* %0) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call1) #4
  %call3 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %operand1) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_Ei(i32 42, i32 4, %struct.rtvec_def* %call3, i32 5) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call2, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call6) #4
  ret %struct.rtx_def* %call7
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_sqrtsf2_1(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 130, i32 15, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_sqrtsf2_1_sse_only(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 130, i32 15, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_sqrtsf2_i387(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 130, i32 15, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_sqrtdf2_1(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 130, i32 16, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_sqrtdf2_1_sse_only(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 130, i32 16, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_sqrtdf2_i387(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 130, i32 16, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_sqrtxf2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 130, i32 17, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_sqrttf2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 130, i32 18, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_sindf2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_Ei(i32 42, i32 16, %struct.rtvec_def* %call, i32 1) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call1) #4
  ret %struct.rtx_def* %call2
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_sinsf2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_Ei(i32 42, i32 15, %struct.rtvec_def* %call, i32 1) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call1) #4
  ret %struct.rtx_def* %call2
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_sinxf2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_Ei(i32 42, i32 17, %struct.rtvec_def* %call, i32 1) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call1) #4
  ret %struct.rtx_def* %call2
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_sintf2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_Ei(i32 42, i32 18, %struct.rtvec_def* %call, i32 1) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call1) #4
  ret %struct.rtx_def* %call2
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_cosdf2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_Ei(i32 42, i32 16, %struct.rtvec_def* %call, i32 2) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call1) #4
  ret %struct.rtx_def* %call2
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_cossf2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_Ei(i32 42, i32 15, %struct.rtvec_def* %call, i32 2) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call1) #4
  ret %struct.rtx_def* %call2
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_cosxf2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_Ei(i32 42, i32 17, %struct.rtvec_def* %call, i32 2) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call1) #4
  ret %struct.rtx_def* %call2
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_costf2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_Ei(i32 42, i32 18, %struct.rtvec_def* %call, i32 2) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call1) #4
  ret %struct.rtx_def* %call2
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_cld() #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 19) #4
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %0) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_strmovdi_rex_1(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* %operand3) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_MEM(i32 5, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 5, %struct.rtx_def* %operand3) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 8) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 5, %struct.rtx_def* %operand2, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 8) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 5, %struct.rtx_def* %operand3, %struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand1, %struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 19) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 4, %struct.rtx_def* %call2, %struct.rtx_def* %call5, %struct.rtx_def* %call8, %struct.rtx_def* %call10) #4
  %call12 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call11) #4
  ret %struct.rtx_def* %call12
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_strmovsi_1(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* %operand3) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_MEM(i32 4, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 4, %struct.rtx_def* %operand3) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 4) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %operand2, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 4) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %operand3, %struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand1, %struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 19) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 4, %struct.rtx_def* %call2, %struct.rtx_def* %call5, %struct.rtx_def* %call8, %struct.rtx_def* %call10) #4
  %call12 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call11) #4
  ret %struct.rtx_def* %call12
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_strmovsi_rex_1(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* %operand3) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_MEM(i32 4, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 4, %struct.rtx_def* %operand3) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 4) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 5, %struct.rtx_def* %operand2, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 4) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 5, %struct.rtx_def* %operand3, %struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand1, %struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 19) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 4, %struct.rtx_def* %call2, %struct.rtx_def* %call5, %struct.rtx_def* %call8, %struct.rtx_def* %call10) #4
  %call12 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call11) #4
  ret %struct.rtx_def* %call12
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_strmovhi_1(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* %operand3) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_MEM(i32 3, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 3, %struct.rtx_def* %operand3) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 2) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %operand2, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 2) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %operand3, %struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand1, %struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 19) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 4, %struct.rtx_def* %call2, %struct.rtx_def* %call5, %struct.rtx_def* %call8, %struct.rtx_def* %call10) #4
  %call12 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call11) #4
  ret %struct.rtx_def* %call12
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_strmovhi_rex_1(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* %operand3) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_MEM(i32 3, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 3, %struct.rtx_def* %operand3) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 2) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 5, %struct.rtx_def* %operand2, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 2) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 5, %struct.rtx_def* %operand3, %struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand1, %struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 19) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 4, %struct.rtx_def* %call2, %struct.rtx_def* %call5, %struct.rtx_def* %call8, %struct.rtx_def* %call10) #4
  %call12 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call11) #4
  ret %struct.rtx_def* %call12
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_strmovqi_1(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* %operand3) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_MEM(i32 2, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 2, %struct.rtx_def* %operand3) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call1) #4
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %operand2, %struct.rtx_def* %0) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call3) #4
  %1 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %operand3, %struct.rtx_def* %1) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand1, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 19) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 4, %struct.rtx_def* %call2, %struct.rtx_def* %call4, %struct.rtx_def* %call6, %struct.rtx_def* %call8) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call9) #4
  ret %struct.rtx_def* %call10
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_strmovqi_rex_1(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* %operand3) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_MEM(i32 2, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 2, %struct.rtx_def* %operand3) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call1) #4
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 5, %struct.rtx_def* %operand2, %struct.rtx_def* %0) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call3) #4
  %1 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 5, %struct.rtx_def* %operand3, %struct.rtx_def* %1) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand1, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 19) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 4, %struct.rtx_def* %call2, %struct.rtx_def* %call4, %struct.rtx_def* %call6, %struct.rtx_def* %call8) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call9) #4
  ret %struct.rtx_def* %call10
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_rep_movdi_rex64(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* %operand3, %struct.rtx_def* %operand4, %struct.rtx_def* %operand5) #0 {
entry:
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand2, %struct.rtx_def* %0) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 3) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 87, i32 5, %struct.rtx_def* %operand5, %struct.rtx_def* %call1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 5, %struct.rtx_def* %call2, %struct.rtx_def* %operand3) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 3) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 87, i32 5, %struct.rtx_def* %operand5, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 5, %struct.rtx_def* %call6, %struct.rtx_def* %operand4) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand1, %struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %operand3) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %operand4) #4
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call9, %struct.rtx_def* %call10) #4
  %call12 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %operand5) #4
  %call13 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 19) #4
  %call14 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %call13) #4
  %call15 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 6, %struct.rtx_def* %call, %struct.rtx_def* %call4, %struct.rtx_def* %call8, %struct.rtx_def* %call11, %struct.rtx_def* %call12, %struct.rtx_def* %call14) #4
  %call16 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call15) #4
  ret %struct.rtx_def* %call16
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_rep_movsi(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* %operand3, %struct.rtx_def* %operand4, %struct.rtx_def* %operand5) #0 {
entry:
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand2, %struct.rtx_def* %0) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 2) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 87, i32 4, %struct.rtx_def* %operand5, %struct.rtx_def* %call1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %call2, %struct.rtx_def* %operand3) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 2) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 87, i32 4, %struct.rtx_def* %operand5, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %call6, %struct.rtx_def* %operand4) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand1, %struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %operand3) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %operand4) #4
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call9, %struct.rtx_def* %call10) #4
  %call12 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %operand5) #4
  %call13 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 19) #4
  %call14 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %call13) #4
  %call15 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 6, %struct.rtx_def* %call, %struct.rtx_def* %call4, %struct.rtx_def* %call8, %struct.rtx_def* %call11, %struct.rtx_def* %call12, %struct.rtx_def* %call14) #4
  %call16 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call15) #4
  ret %struct.rtx_def* %call16
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_rep_movsi_rex64(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* %operand3, %struct.rtx_def* %operand4, %struct.rtx_def* %operand5) #0 {
entry:
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand2, %struct.rtx_def* %0) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 2) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 87, i32 5, %struct.rtx_def* %operand5, %struct.rtx_def* %call1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 5, %struct.rtx_def* %call2, %struct.rtx_def* %operand3) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 2) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 87, i32 5, %struct.rtx_def* %operand5, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 5, %struct.rtx_def* %call6, %struct.rtx_def* %operand4) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand1, %struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %operand3) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %operand4) #4
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call9, %struct.rtx_def* %call10) #4
  %call12 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %operand5) #4
  %call13 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 19) #4
  %call14 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %call13) #4
  %call15 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 6, %struct.rtx_def* %call, %struct.rtx_def* %call4, %struct.rtx_def* %call8, %struct.rtx_def* %call11, %struct.rtx_def* %call12, %struct.rtx_def* %call14) #4
  %call16 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call15) #4
  ret %struct.rtx_def* %call16
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_rep_movqi(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* %operand3, %struct.rtx_def* %operand4, %struct.rtx_def* %operand5) #0 {
entry:
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand2, %struct.rtx_def* %0) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %operand3, %struct.rtx_def* %operand5) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %operand4, %struct.rtx_def* %operand5) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand1, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %operand3) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %operand4) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call5, %struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %operand5) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 19) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 6, %struct.rtx_def* %call, %struct.rtx_def* %call2, %struct.rtx_def* %call4, %struct.rtx_def* %call7, %struct.rtx_def* %call8, %struct.rtx_def* %call10) #4
  %call12 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call11) #4
  ret %struct.rtx_def* %call12
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_rep_movqi_rex64(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* %operand3, %struct.rtx_def* %operand4, %struct.rtx_def* %operand5) #0 {
entry:
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand2, %struct.rtx_def* %0) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 5, %struct.rtx_def* %operand3, %struct.rtx_def* %operand5) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 5, %struct.rtx_def* %operand4, %struct.rtx_def* %operand5) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand1, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %operand3) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %operand4) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call5, %struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %operand5) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 19) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 6, %struct.rtx_def* %call, %struct.rtx_def* %call2, %struct.rtx_def* %call4, %struct.rtx_def* %call7, %struct.rtx_def* %call8, %struct.rtx_def* %call10) #4
  %call12 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call11) #4
  ret %struct.rtx_def* %call12
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_strsetdi_rex_1(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_MEM(i32 4, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %operand2) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 8) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 5, %struct.rtx_def* %operand1, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 19) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 3, %struct.rtx_def* %call1, %struct.rtx_def* %call4, %struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call7) #4
  ret %struct.rtx_def* %call8
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_strsetsi_1(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_MEM(i32 4, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %operand2) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 4) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %operand1, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 19) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 3, %struct.rtx_def* %call1, %struct.rtx_def* %call4, %struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call7) #4
  ret %struct.rtx_def* %call8
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_strsetsi_rex_1(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_MEM(i32 4, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %operand2) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 4) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 5, %struct.rtx_def* %operand1, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 19) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 3, %struct.rtx_def* %call1, %struct.rtx_def* %call4, %struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call7) #4
  ret %struct.rtx_def* %call8
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_strsethi_1(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_MEM(i32 3, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %operand2) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 2) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %operand1, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 19) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 3, %struct.rtx_def* %call1, %struct.rtx_def* %call4, %struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call7) #4
  ret %struct.rtx_def* %call8
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_strsethi_rex_1(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_MEM(i32 3, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %operand2) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 2) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 5, %struct.rtx_def* %operand1, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 19) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 3, %struct.rtx_def* %call1, %struct.rtx_def* %call4, %struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call7) #4
  ret %struct.rtx_def* %call8
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_strsetqi_1(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_MEM(i32 2, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %operand2) #4
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %operand1, %struct.rtx_def* %0) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 19) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 3, %struct.rtx_def* %call1, %struct.rtx_def* %call3, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call6) #4
  ret %struct.rtx_def* %call7
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_strsetqi_rex_1(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_MEM(i32 2, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %operand2) #4
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 5, %struct.rtx_def* %operand1, %struct.rtx_def* %0) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 19) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 3, %struct.rtx_def* %call1, %struct.rtx_def* %call3, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call6) #4
  ret %struct.rtx_def* %call7
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_rep_stosdi_rex64(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* %operand3, %struct.rtx_def* %operand4) #0 {
entry:
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand1, %struct.rtx_def* %0) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 3) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 87, i32 5, %struct.rtx_def* %operand4, %struct.rtx_def* %call1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 5, %struct.rtx_def* %call2, %struct.rtx_def* %operand3) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %operand3) #4
  %1 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call5, %struct.rtx_def* %1) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %operand2) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %operand4) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 19) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 6, %struct.rtx_def* %call, %struct.rtx_def* %call4, %struct.rtx_def* %call6, %struct.rtx_def* %call7, %struct.rtx_def* %call8, %struct.rtx_def* %call10) #4
  %call12 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call11) #4
  ret %struct.rtx_def* %call12
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_rep_stossi(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* %operand3, %struct.rtx_def* %operand4) #0 {
entry:
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand1, %struct.rtx_def* %0) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 2) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 87, i32 4, %struct.rtx_def* %operand4, %struct.rtx_def* %call1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %call2, %struct.rtx_def* %operand3) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %operand3) #4
  %1 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call5, %struct.rtx_def* %1) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %operand2) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %operand4) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 19) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 6, %struct.rtx_def* %call, %struct.rtx_def* %call4, %struct.rtx_def* %call6, %struct.rtx_def* %call7, %struct.rtx_def* %call8, %struct.rtx_def* %call10) #4
  %call12 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call11) #4
  ret %struct.rtx_def* %call12
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_rep_stossi_rex64(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* %operand3, %struct.rtx_def* %operand4) #0 {
entry:
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand1, %struct.rtx_def* %0) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 2) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 87, i32 5, %struct.rtx_def* %operand4, %struct.rtx_def* %call1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 5, %struct.rtx_def* %call2, %struct.rtx_def* %operand3) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %operand3) #4
  %1 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call5, %struct.rtx_def* %1) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %operand2) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %operand4) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 19) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 6, %struct.rtx_def* %call, %struct.rtx_def* %call4, %struct.rtx_def* %call6, %struct.rtx_def* %call7, %struct.rtx_def* %call8, %struct.rtx_def* %call10) #4
  %call12 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call11) #4
  ret %struct.rtx_def* %call12
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_rep_stosqi(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* %operand3, %struct.rtx_def* %operand4) #0 {
entry:
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand1, %struct.rtx_def* %0) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %operand3, %struct.rtx_def* %operand4) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %operand3) #4
  %1 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call3, %struct.rtx_def* %1) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %operand2) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %operand4) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 19) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 6, %struct.rtx_def* %call, %struct.rtx_def* %call2, %struct.rtx_def* %call4, %struct.rtx_def* %call5, %struct.rtx_def* %call6, %struct.rtx_def* %call8) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call9) #4
  ret %struct.rtx_def* %call10
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_rep_stosqi_rex64(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* %operand3, %struct.rtx_def* %operand4) #0 {
entry:
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand1, %struct.rtx_def* %0) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 5, %struct.rtx_def* %operand3, %struct.rtx_def* %operand4) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %operand3) #4
  %1 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call3, %struct.rtx_def* %1) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %operand2) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %operand4) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 19) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 6, %struct.rtx_def* %call, %struct.rtx_def* %call2, %struct.rtx_def* %call4, %struct.rtx_def* %call5, %struct.rtx_def* %call6, %struct.rtx_def* %call8) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call9) #4
  ret %struct.rtx_def* %call10
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_cmpstrqi_nz_1(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* %operand3, %struct.rtx_def* %operand4, %struct.rtx_def* %operand5, %struct.rtx_def* %operand6) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %operand4) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %operand5) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 74, i32 52, %struct.rtx_def* %call1, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %operand6) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %operand3) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 19) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %operand0) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %operand1) #4
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %operand2) #4
  %call12 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 7, %struct.rtx_def* %call4, %struct.rtx_def* %call5, %struct.rtx_def* %call6, %struct.rtx_def* %call8, %struct.rtx_def* %call9, %struct.rtx_def* %call10, %struct.rtx_def* %call11) #4
  %call13 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call12) #4
  ret %struct.rtx_def* %call13
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_cmpstrqi_nz_rex_1(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* %operand3, %struct.rtx_def* %operand4, %struct.rtx_def* %operand5, %struct.rtx_def* %operand6) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %operand4) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %operand5) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 74, i32 52, %struct.rtx_def* %call1, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %operand6) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %operand3) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 19) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %operand0) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %operand1) #4
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %operand2) #4
  %call12 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 7, %struct.rtx_def* %call4, %struct.rtx_def* %call5, %struct.rtx_def* %call6, %struct.rtx_def* %call8, %struct.rtx_def* %call9, %struct.rtx_def* %call10, %struct.rtx_def* %call11) #4
  %call13 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call12) #4
  ret %struct.rtx_def* %call13
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_cmpstrqi_1(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* %operand3, %struct.rtx_def* %operand4, %struct.rtx_def* %operand5, %struct.rtx_def* %operand6) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 102, i32 0, %struct.rtx_def* %operand6, %struct.rtx_def* %0) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %operand4) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %operand5) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 74, i32 52, %struct.rtx_def* %call2, %struct.rtx_def* %call3) #4
  %1 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 72, i32 52, %struct.rtx_def* %call1, %struct.rtx_def* %call4, %struct.rtx_def* %1) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %operand3) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %call8) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 19) #4
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %call10) #4
  %call12 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %operand0) #4
  %call13 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %operand1) #4
  %call14 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %operand2) #4
  %call15 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 7, %struct.rtx_def* %call6, %struct.rtx_def* %call7, %struct.rtx_def* %call9, %struct.rtx_def* %call11, %struct.rtx_def* %call12, %struct.rtx_def* %call13, %struct.rtx_def* %call14) #4
  %call16 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call15) #4
  ret %struct.rtx_def* %call16
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_cmpstrqi_rex_1(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* %operand3, %struct.rtx_def* %operand4, %struct.rtx_def* %operand5, %struct.rtx_def* %operand6) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 102, i32 0, %struct.rtx_def* %operand6, %struct.rtx_def* %0) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %operand4) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %operand5) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 74, i32 52, %struct.rtx_def* %call2, %struct.rtx_def* %call3) #4
  %1 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 72, i32 52, %struct.rtx_def* %call1, %struct.rtx_def* %call4, %struct.rtx_def* %1) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %operand3) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %call8) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 19) #4
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %call10) #4
  %call12 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %operand0) #4
  %call13 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %operand1) #4
  %call14 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %operand2) #4
  %call15 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 7, %struct.rtx_def* %call6, %struct.rtx_def* %call7, %struct.rtx_def* %call9, %struct.rtx_def* %call11, %struct.rtx_def* %call12, %struct.rtx_def* %call13, %struct.rtx_def* %call14) #4
  %call16 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call15) #4
  ret %struct.rtx_def* %call16
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_strlenqi_1(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* %operand3, %struct.rtx_def* %operand4, %struct.rtx_def* %operand5) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %operand5) #4
  %call1 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 4, %struct.rtx_def* %call, %struct.rtx_def* %operand2, %struct.rtx_def* %operand3, %struct.rtx_def* %operand4) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_Ei(i32 42, i32 4, %struct.rtvec_def* %call1, i32 0) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 19) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %operand1) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 4, %struct.rtx_def* %call3, %struct.rtx_def* %call5, %struct.rtx_def* %call6, %struct.rtx_def* %call8) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call9) #4
  ret %struct.rtx_def* %call10
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_strlenqi_rex_1(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* %operand3, %struct.rtx_def* %operand4, %struct.rtx_def* %operand5) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %operand5) #4
  %call1 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 4, %struct.rtx_def* %call, %struct.rtx_def* %operand2, %struct.rtx_def* %operand3, %struct.rtx_def* %operand4) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_Ei(i32 42, i32 5, %struct.rtvec_def* %call1, i32 0) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 19) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %operand1) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 4, %struct.rtx_def* %call3, %struct.rtx_def* %call5, %struct.rtx_def* %call6, %struct.rtx_def* %call8) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call9) #4
  ret %struct.rtx_def* %call10
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_x86_movdicc_0_m1_rex64(%struct.rtx_def* %operand0) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 111, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %0) #4
  %1 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !tbaa !1
  %2 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 72, i32 5, %struct.rtx_def* %call1, %struct.rtx_def* %1, %struct.rtx_def* %2) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call3, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call6) #4
  ret %struct.rtx_def* %call7
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_x86_movsicc_0_m1(%struct.rtx_def* %operand0) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 111, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %0) #4
  %1 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !tbaa !1
  %2 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 72, i32 4, %struct.rtx_def* %call1, %struct.rtx_def* %1, %struct.rtx_def* %2) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call3, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call6) #4
  ret %struct.rtx_def* %call7
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_pro_epilogue_adjust_stack_rex64(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 5, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_0(i32 62, i32 0) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 3, %struct.rtx_def* %call1, %struct.rtx_def* %call3, %struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call7) #4
  ret %struct.rtx_def* %call8
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_sse_movsfcc(%struct.rtx_def* %operand0, %struct.rtx_def* nocapture readonly %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* %operand3, %struct.rtx_def* %operand4, %struct.rtx_def* %operand5) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %operand1, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %call = tail call %struct.rtx_def* (i32, i32, ...)* @gen_rtx(i32 %bf.clear, i32 0, %struct.rtx_def* %operand4, %struct.rtx_def* %operand5) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 72, i32 15, %struct.rtx_def* %call, %struct.rtx_def* %operand2, %struct.rtx_def* %operand3) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_0(i32 62, i32 15) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 3, %struct.rtx_def* %call2, %struct.rtx_def* %call4, %struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call7) #4
  ret %struct.rtx_def* %call8
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_sse_movsfcc_eq(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* %operand3, %struct.rtx_def* %operand4) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 103, i32 0, %struct.rtx_def* %operand3, %struct.rtx_def* %operand4) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 72, i32 15, %struct.rtx_def* %call, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_0(i32 62, i32 15) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 3, %struct.rtx_def* %call2, %struct.rtx_def* %call4, %struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call7) #4
  ret %struct.rtx_def* %call8
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_sse_movdfcc(%struct.rtx_def* %operand0, %struct.rtx_def* nocapture readonly %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* %operand3, %struct.rtx_def* %operand4, %struct.rtx_def* %operand5) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %operand1, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %call = tail call %struct.rtx_def* (i32, i32, ...)* @gen_rtx(i32 %bf.clear, i32 0, %struct.rtx_def* %operand4, %struct.rtx_def* %operand5) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 72, i32 16, %struct.rtx_def* %call, %struct.rtx_def* %operand2, %struct.rtx_def* %operand3) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_0(i32 62, i32 16) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 3, %struct.rtx_def* %call2, %struct.rtx_def* %call4, %struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call7) #4
  ret %struct.rtx_def* %call8
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_sse_movdfcc_eq(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* %operand3, %struct.rtx_def* %operand4) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 103, i32 0, %struct.rtx_def* %operand3, %struct.rtx_def* %operand4) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 72, i32 16, %struct.rtx_def* %call, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_0(i32 62, i32 16) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 3, %struct.rtx_def* %call2, %struct.rtx_def* %call4, %struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call7) #4
  ret %struct.rtx_def* %call8
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_allocate_stack_worker_1(%struct.rtx_def* %operand0) #0 {
entry:
  %call = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %operand0) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_Ei(i32 42, i32 4, %struct.rtvec_def* %call, i32 3) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 76, i32 4, %struct.rtx_def* %call3, %struct.rtx_def* %operand0) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call2, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %operand0) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 4, %struct.rtx_def* %call1, %struct.rtx_def* %call5, %struct.rtx_def* %call6, %struct.rtx_def* %call8) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call9) #4
  ret %struct.rtx_def* %call10
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_allocate_stack_worker_rex64(%struct.rtx_def* %operand0) #0 {
entry:
  %call = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %operand0) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_Ei(i32 42, i32 5, %struct.rtvec_def* %call, i32 3) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 7) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 7) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 76, i32 5, %struct.rtx_def* %call3, %struct.rtx_def* %operand0) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call2, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %operand0) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 4, %struct.rtx_def* %call1, %struct.rtx_def* %call5, %struct.rtx_def* %call6, %struct.rtx_def* %call8) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call9) #4
  ret %struct.rtx_def* %call10
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_trap() #0 {
entry:
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 5) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 52, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_movv4sf_internal(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_movv4si_internal(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_movv8qi_internal(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_movv4hi_internal(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_movv2si_internal(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_movv2sf_internal(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_movti_internal(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_sse_movaps(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_Ei(i32 42, i32 46, %struct.rtvec_def* %call, i32 38) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call1) #4
  ret %struct.rtx_def* %call2
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_sse_movups(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_Ei(i32 42, i32 46, %struct.rtvec_def* %call, i32 39) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call1) #4
  ret %struct.rtx_def* %call2
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_sse_movmskps(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_Ei(i32 42, i32 4, %struct.rtvec_def* %call, i32 33) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call1) #4
  ret %struct.rtx_def* %call2
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_mmx_pmovmskb(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_Ei(i32 42, i32 4, %struct.rtvec_def* %call, i32 33) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call1) #4
  ret %struct.rtx_def* %call2
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_mmx_maskmovq(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_MEM(i32 39, %struct.rtx_def* %operand0) #4
  %call1 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_Ei(i32 42, i32 39, %struct.rtvec_def* %call1, i32 32) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call2) #4
  ret %struct.rtx_def* %call3
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_mmx_maskmovq_rex(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_MEM(i32 39, %struct.rtx_def* %operand0) #4
  %call1 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_Ei(i32 42, i32 39, %struct.rtvec_def* %call1, i32 32) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call2) #4
  ret %struct.rtx_def* %call3
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_sse_movntv4sf(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_Ei(i32 42, i32 46, %struct.rtvec_def* %call, i32 34) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call1) #4
  ret %struct.rtx_def* %call2
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_sse_movntdi(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_Ei(i32 42, i32 5, %struct.rtvec_def* %call, i32 34) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call1) #4
  ret %struct.rtx_def* %call2
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_sse_movhlps(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 3) #4
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %1 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %call2 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 4, %struct.rtx_def* %call, %struct.rtx_def* %call1, %struct.rtx_def* %0, %struct.rtx_def* %1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 143, i32 46, %struct.rtx_def* %operand2, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 3) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 142, i32 46, %struct.rtx_def* %operand1, %struct.rtx_def* %call4, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call6) #4
  ret %struct.rtx_def* %call7
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_sse_movlhps(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 3) #4
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %1 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %call2 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 4, %struct.rtx_def* %call, %struct.rtx_def* %call1, %struct.rtx_def* %0, %struct.rtx_def* %1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 143, i32 46, %struct.rtx_def* %operand2, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 12) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 142, i32 46, %struct.rtx_def* %operand1, %struct.rtx_def* %call4, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call6) #4
  ret %struct.rtx_def* %call7
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_sse_movhps(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 12) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 142, i32 46, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* %call) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call1) #4
  ret %struct.rtx_def* %call2
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_sse_movlps(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 3) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 142, i32 46, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* %call) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call1) #4
  ret %struct.rtx_def* %call2
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_sse_loadss(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 125, i32 15, %struct.rtx_def* %0) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 145, i32 46, %struct.rtx_def* %call) #4
  %1 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 142, i32 46, %struct.rtx_def* %operand1, %struct.rtx_def* %call1, %struct.rtx_def* %1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call2) #4
  ret %struct.rtx_def* %call3
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_sse_movss(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 142, i32 46, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* %0) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_sse_storess(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %0) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 143, i32 15, %struct.rtx_def* %operand1, %struct.rtx_def* %call1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call2) #4
  ret %struct.rtx_def* %call3
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_sse_shufps(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* %operand3) #0 {
entry:
  %call = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 3, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* %operand3) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_Ei(i32 42, i32 46, %struct.rtvec_def* %call, i32 41) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call1) #4
  ret %struct.rtx_def* %call2
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_addv4sf3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 46, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_vmaddv4sf3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 46, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 142, i32 46, %struct.rtx_def* %call, %struct.rtx_def* %operand1, %struct.rtx_def* %0) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call1) #4
  ret %struct.rtx_def* %call2
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_subv4sf3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 76, i32 46, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_vmsubv4sf3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 76, i32 46, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 142, i32 46, %struct.rtx_def* %call, %struct.rtx_def* %operand1, %struct.rtx_def* %0) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call1) #4
  ret %struct.rtx_def* %call2
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_mulv4sf3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 78, i32 46, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_vmmulv4sf3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 78, i32 46, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 142, i32 46, %struct.rtx_def* %call, %struct.rtx_def* %operand1, %struct.rtx_def* %0) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call1) #4
  ret %struct.rtx_def* %call2
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_divv4sf3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 79, i32 46, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_vmdivv4sf3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 79, i32 46, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 142, i32 46, %struct.rtx_def* %call, %struct.rtx_def* %operand1, %struct.rtx_def* %0) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call1) #4
  ret %struct.rtx_def* %call2
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_rcpv4sf2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_Ei(i32 42, i32 46, %struct.rtvec_def* %call, i32 42) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call1) #4
  ret %struct.rtx_def* %call2
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_vmrcpv4sf2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_Ei(i32 42, i32 46, %struct.rtvec_def* %call, i32 42) #4
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 142, i32 46, %struct.rtx_def* %call1, %struct.rtx_def* %operand2, %struct.rtx_def* %0) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call2) #4
  ret %struct.rtx_def* %call3
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_rsqrtv4sf2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_Ei(i32 42, i32 46, %struct.rtvec_def* %call, i32 43) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call1) #4
  ret %struct.rtx_def* %call2
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_vmrsqrtv4sf2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_Ei(i32 42, i32 46, %struct.rtvec_def* %call, i32 43) #4
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 142, i32 46, %struct.rtx_def* %call1, %struct.rtx_def* %operand2, %struct.rtx_def* %0) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call2) #4
  ret %struct.rtx_def* %call3
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_sqrtv4sf2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 130, i32 46, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_vmsqrtv4sf2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 130, i32 46, %struct.rtx_def* %operand1) #4
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 142, i32 46, %struct.rtx_def* %call, %struct.rtx_def* %operand2, %struct.rtx_def* %0) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call1) #4
  ret %struct.rtx_def* %call2
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_sse_andti3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 83, i32 6, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_sse_nandti3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 86, i32 6, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 83, i32 6, %struct.rtx_def* %call, %struct.rtx_def* %operand2) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call1) #4
  ret %struct.rtx_def* %call2
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_sse_iorti3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 84, i32 6, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_sse_xorti3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 85, i32 6, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_sse_clrv4sf(%struct.rtx_def* %operand0) #0 {
entry:
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %0) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_Ei(i32 42, i32 46, %struct.rtvec_def* %call, i32 45) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call1) #4
  ret %struct.rtx_def* %call2
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_maskcmpv4sf3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* nocapture readonly %operand3) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %operand3, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %call = tail call %struct.rtx_def* (i32, i32, ...)* @gen_rtx(i32 %bf.clear, i32 37, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_maskncmpv4sf3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* nocapture readonly %operand3) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %operand3, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %call = tail call %struct.rtx_def* (i32, i32, ...)* @gen_rtx(i32 %bf.clear, i32 37, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 86, i32 37, %struct.rtx_def* %call) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call1) #4
  ret %struct.rtx_def* %call2
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_vmmaskcmpv4sf3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* nocapture readonly %operand3) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %operand3, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %call = tail call %struct.rtx_def* (i32, i32, ...)* @gen_rtx(i32 %bf.clear, i32 37, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %1 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 142, i32 37, %struct.rtx_def* %call, %struct.rtx_def* %operand1, %struct.rtx_def* %1) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call1) #4
  ret %struct.rtx_def* %call2
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_vmmaskncmpv4sf3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* nocapture readonly %operand3) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %operand3, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %call = tail call %struct.rtx_def* (i32, i32, ...)* @gen_rtx(i32 %bf.clear, i32 37, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 86, i32 37, %struct.rtx_def* %call) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 37, %struct.rtx_def* %operand1, i32 0) #4
  %1 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 142, i32 37, %struct.rtx_def* %call1, %struct.rtx_def* %call2, %struct.rtx_def* %1) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call3) #4
  ret %struct.rtx_def* %call4
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_sse_comi(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* nocapture readonly %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 57, i32 17) #4
  %0 = getelementptr inbounds %struct.rtx_def* %operand2, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %1 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call1 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %1) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 143, i32 15, %struct.rtx_def* %operand0, %struct.rtx_def* %call2) #4
  %2 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call4 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %2) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 143, i32 15, %struct.rtx_def* %operand1, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* (i32, i32, ...)* @gen_rtx(i32 %bf.clear, i32 57, %struct.rtx_def* %call3, %struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call7) #4
  ret %struct.rtx_def* %call8
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_sse_ucomi(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* nocapture readonly %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 58, i32 17) #4
  %0 = getelementptr inbounds %struct.rtx_def* %operand2, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %1 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call1 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %1) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 143, i32 15, %struct.rtx_def* %operand0, %struct.rtx_def* %call2) #4
  %2 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call4 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %2) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 143, i32 15, %struct.rtx_def* %operand1, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* (i32, i32, ...)* @gen_rtx(i32 %bf.clear, i32 58, %struct.rtx_def* %call3, %struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call7) #4
  ret %struct.rtx_def* %call8
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_sse_unpckhps(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 2) #4
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call1 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 3) #4
  %1 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %call2 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 4, %struct.rtx_def* %call, %struct.rtx_def* %0, %struct.rtx_def* %call1, %struct.rtx_def* %1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 143, i32 46, %struct.rtx_def* %operand1, %struct.rtx_def* %call3) #4
  %2 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call5 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 2) #4
  %3 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %call6 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 3) #4
  %call7 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 4, %struct.rtx_def* %2, %struct.rtx_def* %call5, %struct.rtx_def* %3, %struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 143, i32 46, %struct.rtx_def* %operand2, %struct.rtx_def* %call8) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 5) #4
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 142, i32 46, %struct.rtx_def* %call4, %struct.rtx_def* %call9, %struct.rtx_def* %call10) #4
  %call12 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call11) #4
  ret %struct.rtx_def* %call12
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_sse_unpcklps(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 2) #4
  %1 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %call1 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 3) #4
  %call2 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 4, %struct.rtx_def* %0, %struct.rtx_def* %call, %struct.rtx_def* %1, %struct.rtx_def* %call1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 143, i32 46, %struct.rtx_def* %operand1, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 2) #4
  %2 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call6 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 3) #4
  %3 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %call7 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 4, %struct.rtx_def* %call5, %struct.rtx_def* %2, %struct.rtx_def* %call6, %struct.rtx_def* %3) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 143, i32 46, %struct.rtx_def* %operand2, %struct.rtx_def* %call8) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 5) #4
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 142, i32 46, %struct.rtx_def* %call4, %struct.rtx_def* %call9, %struct.rtx_def* %call10) #4
  %call12 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call11) #4
  ret %struct.rtx_def* %call12
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_smaxv4sf3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 93, i32 46, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_vmsmaxv4sf3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 93, i32 46, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 142, i32 46, %struct.rtx_def* %call, %struct.rtx_def* %operand1, %struct.rtx_def* %0) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call1) #4
  ret %struct.rtx_def* %call2
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_sminv4sf3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 92, i32 46, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_vmsminv4sf3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 92, i32 46, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 142, i32 46, %struct.rtx_def* %call, %struct.rtx_def* %operand1, %struct.rtx_def* %0) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call1) #4
  ret %struct.rtx_def* %call2
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_cvtpi2ps(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 125, i32 44, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 145, i32 46, %struct.rtx_def* %call) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 12) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 142, i32 46, %struct.rtx_def* %operand1, %struct.rtx_def* %call1, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call3) #4
  ret %struct.rtx_def* %call4
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_cvtps2pi(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 126, i32 37, %struct.rtx_def* %operand1) #4
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %1 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %call1 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %0, %struct.rtx_def* %1) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 143, i32 33, %struct.rtx_def* %call, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call3) #4
  ret %struct.rtx_def* %call4
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_cvttps2pi(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_Ei(i32 42, i32 37, %struct.rtvec_def* %call, i32 30) #4
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %1 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %call2 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %0, %struct.rtx_def* %1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 143, i32 33, %struct.rtx_def* %call1, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call4) #4
  ret %struct.rtx_def* %call5
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_cvtsi2ss(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 125, i32 15, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 145, i32 46, %struct.rtx_def* %call) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 14) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 142, i32 46, %struct.rtx_def* %operand1, %struct.rtx_def* %call1, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call3) #4
  ret %struct.rtx_def* %call4
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_cvtss2si(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 126, i32 37, %struct.rtx_def* %operand1) #4
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call1 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %0) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 143, i32 4, %struct.rtx_def* %call, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call3) #4
  ret %struct.rtx_def* %call4
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_cvttss2si(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_Ei(i32 42, i32 37, %struct.rtvec_def* %call, i32 30) #4
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call2 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %0) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 143, i32 4, %struct.rtx_def* %call1, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call4) #4
  ret %struct.rtx_def* %call5
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_addv8qi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 39, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_addv4hi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 36, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_addv2si3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 33, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_ssaddv8qi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 146, i32 39, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_ssaddv4hi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 146, i32 36, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_usaddv8qi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 147, i32 39, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_usaddv4hi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 147, i32 36, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_subv8qi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 76, i32 39, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_subv4hi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 76, i32 36, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_subv2si3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 76, i32 33, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_sssubv8qi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 148, i32 39, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_sssubv4hi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 148, i32 36, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_ussubv8qi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 149, i32 39, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_ussubv4hi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 149, i32 36, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_mulv4hi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 78, i32 36, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_smulv4hi3_highpart(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 120, i32 37, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 120, i32 37, %struct.rtx_def* %operand2) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 78, i32 37, %struct.rtx_def* %call, %struct.rtx_def* %call1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 16) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 90, i32 37, %struct.rtx_def* %call2, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 122, i32 36, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call5) #4
  ret %struct.rtx_def* %call6
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_umulv4hi3_highpart(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 121, i32 37, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 121, i32 37, %struct.rtx_def* %operand2) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 78, i32 37, %struct.rtx_def* %call, %struct.rtx_def* %call1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 16) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 90, i32 37, %struct.rtx_def* %call2, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 122, i32 36, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call5) #4
  ret %struct.rtx_def* %call6
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_mmx_pmaddwd(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 2) #4
  %call1 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %0, %struct.rtx_def* %call) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 143, i32 32, %struct.rtx_def* %operand1, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 120, i32 33, %struct.rtx_def* %call3) #4
  %1 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call5 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 2) #4
  %call6 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %1, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 143, i32 32, %struct.rtx_def* %operand2, %struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 120, i32 33, %struct.rtx_def* %call8) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 78, i32 33, %struct.rtx_def* %call4, %struct.rtx_def* %call9) #4
  %2 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %call11 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 3) #4
  %call12 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %2, %struct.rtx_def* %call11) #4
  %call13 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call12) #4
  %call14 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 143, i32 32, %struct.rtx_def* %operand1, %struct.rtx_def* %call13) #4
  %call15 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 120, i32 33, %struct.rtx_def* %call14) #4
  %3 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %call16 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 3) #4
  %call17 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %3, %struct.rtx_def* %call16) #4
  %call18 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call17) #4
  %call19 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 143, i32 32, %struct.rtx_def* %operand2, %struct.rtx_def* %call18) #4
  %call20 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 120, i32 33, %struct.rtx_def* %call19) #4
  %call21 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 78, i32 33, %struct.rtx_def* %call15, %struct.rtx_def* %call20) #4
  %call22 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 33, %struct.rtx_def* %call10, %struct.rtx_def* %call21) #4
  %call23 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call22) #4
  ret %struct.rtx_def* %call23
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_mmx_iordi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 84, i32 5, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %call) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_Ei(i32 42, i32 5, %struct.rtvec_def* %call1, i32 45) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call2) #4
  ret %struct.rtx_def* %call3
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_mmx_xordi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 85, i32 5, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %call) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_Ei(i32 42, i32 5, %struct.rtvec_def* %call1, i32 45) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call2) #4
  ret %struct.rtx_def* %call3
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_mmx_clrdi(%struct.rtx_def* %operand0) #0 {
entry:
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %0) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_Ei(i32 42, i32 5, %struct.rtvec_def* %call, i32 45) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call1) #4
  ret %struct.rtx_def* %call2
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_mmx_anddi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 83, i32 5, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %call) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_Ei(i32 42, i32 5, %struct.rtvec_def* %call1, i32 45) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call2) #4
  ret %struct.rtx_def* %call3
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_mmx_nanddi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 86, i32 5, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 83, i32 5, %struct.rtx_def* %call, %struct.rtx_def* %operand2) #4
  %call2 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %call1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_Ei(i32 42, i32 5, %struct.rtvec_def* %call2, i32 45) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call3) #4
  ret %struct.rtx_def* %call4
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_mmx_uavgv8qi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 39, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %call1 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 8, %struct.rtx_def* %0, %struct.rtx_def* %0, %struct.rtx_def* %0, %struct.rtx_def* %0, %struct.rtx_def* %0, %struct.rtx_def* %0, %struct.rtx_def* %0, %struct.rtx_def* %0) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 56, i32 39, %struct.rtvec_def* %call1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 39, %struct.rtx_def* %call, %struct.rtx_def* %call2) #4
  %1 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 89, i32 39, %struct.rtx_def* %call3, %struct.rtx_def* %1) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call4) #4
  ret %struct.rtx_def* %call5
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_mmx_uavgv4hi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 36, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %call1 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 4, %struct.rtx_def* %0, %struct.rtx_def* %0, %struct.rtx_def* %0, %struct.rtx_def* %0) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 56, i32 36, %struct.rtvec_def* %call1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 36, %struct.rtx_def* %call, %struct.rtx_def* %call2) #4
  %1 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 89, i32 36, %struct.rtx_def* %call3, %struct.rtx_def* %1) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call4) #4
  ret %struct.rtx_def* %call5
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_mmx_psadbw(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 76, i32 39, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 129, i32 39, %struct.rtx_def* %call) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call1) #4
  ret %struct.rtx_def* %call2
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_mmx_pinsrw(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* %operand3) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 122, i32 3, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 145, i32 36, %struct.rtx_def* %call) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 142, i32 36, %struct.rtx_def* %operand1, %struct.rtx_def* %call1, %struct.rtx_def* %operand3) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call2) #4
  ret %struct.rtx_def* %call3
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_mmx_pextrw(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 143, i32 3, %struct.rtx_def* %operand1, %struct.rtx_def* %call1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 121, i32 4, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call3) #4
  ret %struct.rtx_def* %call4
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_mmx_pshufw(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_Ei(i32 42, i32 36, %struct.rtvec_def* %call, i32 41) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call1) #4
  ret %struct.rtx_def* %call2
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_eqv8qi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 103, i32 39, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_eqv4hi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 103, i32 36, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_eqv2si3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 103, i32 33, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_gtv8qi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 105, i32 39, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_gtv4hi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 105, i32 36, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_gtv2si3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 105, i32 33, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_umaxv8qi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 95, i32 39, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_smaxv4hi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 93, i32 36, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_uminv8qi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 94, i32 39, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_sminv4hi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 92, i32 36, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_ashrv4hi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 89, i32 36, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_ashrv2si3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 89, i32 33, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_lshrv4hi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 90, i32 36, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_lshrv2si3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 90, i32 33, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_mmx_lshrdi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 90, i32 5, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %call) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_Ei(i32 42, i32 5, %struct.rtvec_def* %call1, i32 45) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call2) #4
  ret %struct.rtx_def* %call3
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_ashlv4hi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 87, i32 36, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_ashlv2si3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 87, i32 33, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_mmx_ashldi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 87, i32 5, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %call) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_Ei(i32 42, i32 5, %struct.rtvec_def* %call1, i32 45) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call2) #4
  ret %struct.rtx_def* %call3
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_mmx_packsswb(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 150, i32 35, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 150, i32 35, %struct.rtx_def* %operand2) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 144, i32 39, %struct.rtx_def* %call, %struct.rtx_def* %call1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call2) #4
  ret %struct.rtx_def* %call3
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_mmx_packssdw(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 150, i32 32, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 150, i32 32, %struct.rtx_def* %operand2) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 144, i32 36, %struct.rtx_def* %call, %struct.rtx_def* %call1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call2) #4
  ret %struct.rtx_def* %call3
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_mmx_packuswb(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 151, i32 35, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 151, i32 35, %struct.rtx_def* %operand2) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 144, i32 39, %struct.rtx_def* %call, %struct.rtx_def* %call1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call2) #4
  ret %struct.rtx_def* %call3
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_mmx_punpckhbw(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 4) #4
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call1 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 5) #4
  %1 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %call2 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 6) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 2) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 7) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 3) #4
  %call6 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 8, %struct.rtx_def* %call, %struct.rtx_def* %0, %struct.rtx_def* %call1, %struct.rtx_def* %1, %struct.rtx_def* %call2, %struct.rtx_def* %call3, %struct.rtx_def* %call4, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 143, i32 39, %struct.rtx_def* %operand1, %struct.rtx_def* %call7) #4
  %2 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call9 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 4) #4
  %3 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %call10 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 5) #4
  %call11 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 2) #4
  %call12 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 6) #4
  %call13 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 3) #4
  %call14 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 7) #4
  %call15 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 8, %struct.rtx_def* %2, %struct.rtx_def* %call9, %struct.rtx_def* %3, %struct.rtx_def* %call10, %struct.rtx_def* %call11, %struct.rtx_def* %call12, %struct.rtx_def* %call13, %struct.rtx_def* %call14) #4
  %call16 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call15) #4
  %call17 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 143, i32 39, %struct.rtx_def* %operand2, %struct.rtx_def* %call16) #4
  %call18 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 85) #4
  %call19 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 142, i32 39, %struct.rtx_def* %call8, %struct.rtx_def* %call17, %struct.rtx_def* %call18) #4
  %call20 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call19) #4
  ret %struct.rtx_def* %call20
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_mmx_punpckhwd(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 2) #4
  %1 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %call1 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 3) #4
  %call2 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 4, %struct.rtx_def* %0, %struct.rtx_def* %call, %struct.rtx_def* %1, %struct.rtx_def* %call1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 143, i32 36, %struct.rtx_def* %operand1, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 2) #4
  %2 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call6 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 3) #4
  %3 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %call7 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 4, %struct.rtx_def* %call5, %struct.rtx_def* %2, %struct.rtx_def* %call6, %struct.rtx_def* %3) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 143, i32 36, %struct.rtx_def* %operand2, %struct.rtx_def* %call8) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 5) #4
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 142, i32 36, %struct.rtx_def* %call4, %struct.rtx_def* %call9, %struct.rtx_def* %call10) #4
  %call12 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call11) #4
  ret %struct.rtx_def* %call12
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_mmx_punpckhdq(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %1 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %call = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %0, %struct.rtx_def* %1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 143, i32 33, %struct.rtx_def* %operand1, %struct.rtx_def* %call1) #4
  %2 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %3 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call3 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %2, %struct.rtx_def* %3) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 143, i32 33, %struct.rtx_def* %operand2, %struct.rtx_def* %call4) #4
  %4 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 142, i32 33, %struct.rtx_def* %call2, %struct.rtx_def* %call5, %struct.rtx_def* %4) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call6) #4
  ret %struct.rtx_def* %call7
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_mmx_punpcklbw(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 4) #4
  %1 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %call1 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 5) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 2) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 6) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 7) #4
  %call6 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 8, %struct.rtx_def* %0, %struct.rtx_def* %call, %struct.rtx_def* %1, %struct.rtx_def* %call1, %struct.rtx_def* %call2, %struct.rtx_def* %call3, %struct.rtx_def* %call4, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 143, i32 39, %struct.rtx_def* %operand1, %struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 4) #4
  %2 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call10 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 5) #4
  %3 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %call11 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 6) #4
  %call12 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 2) #4
  %call13 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 7) #4
  %call14 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 3) #4
  %call15 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 8, %struct.rtx_def* %call9, %struct.rtx_def* %2, %struct.rtx_def* %call10, %struct.rtx_def* %3, %struct.rtx_def* %call11, %struct.rtx_def* %call12, %struct.rtx_def* %call13, %struct.rtx_def* %call14) #4
  %call16 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call15) #4
  %call17 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 143, i32 39, %struct.rtx_def* %operand2, %struct.rtx_def* %call16) #4
  %call18 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 85) #4
  %call19 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 142, i32 39, %struct.rtx_def* %call8, %struct.rtx_def* %call17, %struct.rtx_def* %call18) #4
  %call20 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call19) #4
  ret %struct.rtx_def* %call20
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_mmx_punpcklwd(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 2) #4
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call1 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 3) #4
  %1 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %call2 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 4, %struct.rtx_def* %call, %struct.rtx_def* %0, %struct.rtx_def* %call1, %struct.rtx_def* %1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 143, i32 36, %struct.rtx_def* %operand1, %struct.rtx_def* %call3) #4
  %2 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call5 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 2) #4
  %3 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %call6 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 3) #4
  %call7 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 4, %struct.rtx_def* %2, %struct.rtx_def* %call5, %struct.rtx_def* %3, %struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 143, i32 36, %struct.rtx_def* %operand2, %struct.rtx_def* %call8) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 5) #4
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 142, i32 36, %struct.rtx_def* %call4, %struct.rtx_def* %call9, %struct.rtx_def* %call10) #4
  %call12 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call11) #4
  ret %struct.rtx_def* %call12
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_mmx_punpckldq(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %1 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %0, %struct.rtx_def* %1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 143, i32 33, %struct.rtx_def* %operand1, %struct.rtx_def* %call1) #4
  %2 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %3 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %call3 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %2, %struct.rtx_def* %3) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 143, i32 33, %struct.rtx_def* %operand2, %struct.rtx_def* %call4) #4
  %4 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 142, i32 33, %struct.rtx_def* %call2, %struct.rtx_def* %call5, %struct.rtx_def* %4) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call6) #4
  ret %struct.rtx_def* %call7
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_emms() #0 {
entry:
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %0) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_Ei(i32 43, i32 0, %struct.rtvec_def* %call, i32 31) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_REG(i32 17, i32 8) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_REG(i32 17, i32 9) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_REG(i32 17, i32 10) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_REG(i32 17, i32 11) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call8) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_REG(i32 17, i32 12) #4
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call10) #4
  %call12 = tail call %struct.rtx_def* @gen_rtx_REG(i32 17, i32 13) #4
  %call13 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call12) #4
  %call14 = tail call %struct.rtx_def* @gen_rtx_REG(i32 17, i32 14) #4
  %call15 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call14) #4
  %call16 = tail call %struct.rtx_def* @gen_rtx_REG(i32 17, i32 15) #4
  %call17 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call16) #4
  %call18 = tail call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 29) #4
  %call19 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call18) #4
  %call20 = tail call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 30) #4
  %call21 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call20) #4
  %call22 = tail call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 31) #4
  %call23 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call22) #4
  %call24 = tail call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 32) #4
  %call25 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call24) #4
  %call26 = tail call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 33) #4
  %call27 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call26) #4
  %call28 = tail call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 34) #4
  %call29 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call28) #4
  %call30 = tail call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 35) #4
  %call31 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call30) #4
  %call32 = tail call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 36) #4
  %call33 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call32) #4
  %call34 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 17, %struct.rtx_def* %call1, %struct.rtx_def* %call3, %struct.rtx_def* %call5, %struct.rtx_def* %call7, %struct.rtx_def* %call9, %struct.rtx_def* %call11, %struct.rtx_def* %call13, %struct.rtx_def* %call15, %struct.rtx_def* %call17, %struct.rtx_def* %call19, %struct.rtx_def* %call21, %struct.rtx_def* %call23, %struct.rtx_def* %call25, %struct.rtx_def* %call27, %struct.rtx_def* %call29, %struct.rtx_def* %call31, %struct.rtx_def* %call33) #4
  %call35 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call34) #4
  ret %struct.rtx_def* %call35
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_ldmxcsr(%struct.rtx_def* %operand0) #0 {
entry:
  %call = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %operand0) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_Ei(i32 43, i32 0, %struct.rtvec_def* %call, i32 37) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_stmxcsr(%struct.rtx_def* %operand0) #0 {
entry:
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %0) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_Ei(i32 43, i32 4, %struct.rtvec_def* %call, i32 40) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call1) #4
  ret %struct.rtx_def* %call2
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_addv2sf3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 44, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_subv2sf3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 76, i32 44, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_subrv2sf3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 76, i32 44, %struct.rtx_def* %operand2, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_gtv2sf3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 105, i32 33, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_gev2sf3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 104, i32 33, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_eqv2sf3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 103, i32 33, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_pfmaxv2sf3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 93, i32 44, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_pfminv2sf3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 92, i32 44, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_mulv2sf3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 78, i32 44, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_femms() #0 {
entry:
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %0) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_Ei(i32 43, i32 0, %struct.rtvec_def* %call, i32 46) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_REG(i32 17, i32 8) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_REG(i32 17, i32 9) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_REG(i32 17, i32 10) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_REG(i32 17, i32 11) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call8) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_REG(i32 17, i32 12) #4
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call10) #4
  %call12 = tail call %struct.rtx_def* @gen_rtx_REG(i32 17, i32 13) #4
  %call13 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call12) #4
  %call14 = tail call %struct.rtx_def* @gen_rtx_REG(i32 17, i32 14) #4
  %call15 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call14) #4
  %call16 = tail call %struct.rtx_def* @gen_rtx_REG(i32 17, i32 15) #4
  %call17 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call16) #4
  %call18 = tail call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 29) #4
  %call19 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call18) #4
  %call20 = tail call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 30) #4
  %call21 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call20) #4
  %call22 = tail call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 31) #4
  %call23 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call22) #4
  %call24 = tail call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 32) #4
  %call25 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call24) #4
  %call26 = tail call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 33) #4
  %call27 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call26) #4
  %call28 = tail call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 34) #4
  %call29 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call28) #4
  %call30 = tail call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 35) #4
  %call31 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call30) #4
  %call32 = tail call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 36) #4
  %call33 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call32) #4
  %call34 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 17, %struct.rtx_def* %call1, %struct.rtx_def* %call3, %struct.rtx_def* %call5, %struct.rtx_def* %call7, %struct.rtx_def* %call9, %struct.rtx_def* %call11, %struct.rtx_def* %call13, %struct.rtx_def* %call15, %struct.rtx_def* %call17, %struct.rtx_def* %call19, %struct.rtx_def* %call21, %struct.rtx_def* %call23, %struct.rtx_def* %call25, %struct.rtx_def* %call27, %struct.rtx_def* %call29, %struct.rtx_def* %call31, %struct.rtx_def* %call33) #4
  %call35 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call34) #4
  ret %struct.rtx_def* %call35
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_pf2id(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 126, i32 33, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_pf2iw(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 126, i32 33, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 150, i32 32, %struct.rtx_def* %call) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 120, i32 33, %struct.rtx_def* %call1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call2) #4
  ret %struct.rtx_def* %call3
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_pfacc(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %0) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 143, i32 15, %struct.rtx_def* %operand1, %struct.rtx_def* %call1) #4
  %1 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %call3 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %1) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 143, i32 15, %struct.rtx_def* %operand1, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 15, %struct.rtx_def* %call2, %struct.rtx_def* %call5) #4
  %2 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call7 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %2) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 143, i32 15, %struct.rtx_def* %operand2, %struct.rtx_def* %call8) #4
  %3 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %call10 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %3) #4
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call10) #4
  %call12 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 143, i32 15, %struct.rtx_def* %operand2, %struct.rtx_def* %call11) #4
  %call13 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 15, %struct.rtx_def* %call9, %struct.rtx_def* %call12) #4
  %call14 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 144, i32 44, %struct.rtx_def* %call6, %struct.rtx_def* %call13) #4
  %call15 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call14) #4
  ret %struct.rtx_def* %call15
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_pfnacc(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %0) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 143, i32 15, %struct.rtx_def* %operand1, %struct.rtx_def* %call1) #4
  %1 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %call3 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %1) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 143, i32 15, %struct.rtx_def* %operand1, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 76, i32 15, %struct.rtx_def* %call2, %struct.rtx_def* %call5) #4
  %2 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call7 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %2) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 143, i32 15, %struct.rtx_def* %operand2, %struct.rtx_def* %call8) #4
  %3 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %call10 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %3) #4
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call10) #4
  %call12 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 143, i32 15, %struct.rtx_def* %operand2, %struct.rtx_def* %call11) #4
  %call13 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 76, i32 15, %struct.rtx_def* %call9, %struct.rtx_def* %call12) #4
  %call14 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 144, i32 44, %struct.rtx_def* %call6, %struct.rtx_def* %call13) #4
  %call15 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call14) #4
  ret %struct.rtx_def* %call15
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_pfpnacc(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %0) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 143, i32 15, %struct.rtx_def* %operand1, %struct.rtx_def* %call1) #4
  %1 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %call3 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %1) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 143, i32 15, %struct.rtx_def* %operand1, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 76, i32 15, %struct.rtx_def* %call2, %struct.rtx_def* %call5) #4
  %2 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call7 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %2) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 143, i32 15, %struct.rtx_def* %operand2, %struct.rtx_def* %call8) #4
  %3 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %call10 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %3) #4
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call10) #4
  %call12 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 143, i32 15, %struct.rtx_def* %operand2, %struct.rtx_def* %call11) #4
  %call13 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 15, %struct.rtx_def* %call9, %struct.rtx_def* %call12) #4
  %call14 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 144, i32 44, %struct.rtx_def* %call6, %struct.rtx_def* %call13) #4
  %call15 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call14) #4
  ret %struct.rtx_def* %call15
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_pi2fw(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %0) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 143, i32 4, %struct.rtx_def* %operand1, %struct.rtx_def* %call1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 122, i32 3, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 120, i32 4, %struct.rtx_def* %call3) #4
  %1 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %call5 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %1) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 143, i32 4, %struct.rtx_def* %operand1, %struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 122, i32 3, %struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 120, i32 4, %struct.rtx_def* %call8) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 144, i32 33, %struct.rtx_def* %call4, %struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 125, i32 44, %struct.rtx_def* %call10) #4
  %call12 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call11) #4
  ret %struct.rtx_def* %call12
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_floatv2si2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 125, i32 44, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_pavgusb(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_Ei(i32 42, i32 39, %struct.rtvec_def* %call, i32 49) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call1) #4
  ret %struct.rtx_def* %call2
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_pfrcpv2sf2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_Ei(i32 42, i32 44, %struct.rtvec_def* %call, i32 50) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call1) #4
  ret %struct.rtx_def* %call2
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_pfrcpit1v2sf3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_Ei(i32 42, i32 44, %struct.rtvec_def* %call, i32 51) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call1) #4
  ret %struct.rtx_def* %call2
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_pfrcpit2v2sf3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_Ei(i32 42, i32 44, %struct.rtvec_def* %call, i32 52) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call1) #4
  ret %struct.rtx_def* %call2
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_pfrsqrtv2sf2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_Ei(i32 42, i32 44, %struct.rtvec_def* %call, i32 53) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call1) #4
  ret %struct.rtx_def* %call2
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_pfrsqit1v2sf3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_Ei(i32 42, i32 44, %struct.rtvec_def* %call, i32 54) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call1) #4
  ret %struct.rtx_def* %call2
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_pmulhrwv4hi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 120, i32 37, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 120, i32 37, %struct.rtx_def* %operand2) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 78, i32 37, %struct.rtx_def* %call, %struct.rtx_def* %call1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 32768) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 32768) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 32768) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 32768) #4
  %call7 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 4, %struct.rtx_def* %call3, %struct.rtx_def* %call4, %struct.rtx_def* %call5, %struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 56, i32 37, %struct.rtvec_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 37, %struct.rtx_def* %call2, %struct.rtx_def* %call8) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 16) #4
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 90, i32 37, %struct.rtx_def* %call9, %struct.rtx_def* %call10) #4
  %call12 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 122, i32 36, %struct.rtx_def* %call11) #4
  %call13 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call12) #4
  ret %struct.rtx_def* %call13
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_pswapdv2si2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %1 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %0, %struct.rtx_def* %1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 143, i32 33, %struct.rtx_def* %operand1, %struct.rtx_def* %call1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call2) #4
  ret %struct.rtx_def* %call3
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_pswapdv2sf2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %1 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %0, %struct.rtx_def* %1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 143, i32 44, %struct.rtx_def* %operand1, %struct.rtx_def* %call1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call2) #4
  ret %struct.rtx_def* %call3
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_cmpdi(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = getelementptr inbounds %struct.rtx_def* %operand0, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 66
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %1 = getelementptr inbounds %struct.rtx_def* %operand1, i64 0, i32 0
  %bf.load4 = load i32* %1, align 8
  %bf.clear5 = and i32 %bf.load4, 65535
  %cmp6 = icmp eq i32 %bf.clear5, 66
  br i1 %cmp6, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %call = tail call %struct.rtx_def* @force_reg(i32 5, %struct.rtx_def* %operand0) #4
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %operands.sroa.0.0 = phi %struct.rtx_def* [ %call, %if.then ], [ %operand0, %land.lhs.true ], [ %operand0, %entry ]
  store %struct.rtx_def* %operands.sroa.0.0, %struct.rtx_def** @ix86_compare_op0, align 8, !tbaa !1
  store %struct.rtx_def* %operand1, %struct.rtx_def** @ix86_compare_op1, align 8, !tbaa !1
  %call11 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call11
}

declare void @start_sequence() #1

declare %struct.rtx_def* @force_reg(i32, %struct.rtx_def*) #1

declare %struct.rtx_def* @gen_sequence() #1

declare void @end_sequence() #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_cmpsi(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = getelementptr inbounds %struct.rtx_def* %operand0, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 66
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %1 = getelementptr inbounds %struct.rtx_def* %operand1, i64 0, i32 0
  %bf.load4 = load i32* %1, align 8
  %bf.clear5 = and i32 %bf.load4, 65535
  %cmp6 = icmp eq i32 %bf.clear5, 66
  br i1 %cmp6, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %call = tail call %struct.rtx_def* @force_reg(i32 4, %struct.rtx_def* %operand0) #4
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %operands.sroa.0.0 = phi %struct.rtx_def* [ %call, %if.then ], [ %operand0, %land.lhs.true ], [ %operand0, %entry ]
  store %struct.rtx_def* %operands.sroa.0.0, %struct.rtx_def** @ix86_compare_op0, align 8, !tbaa !1
  store %struct.rtx_def* %operand1, %struct.rtx_def** @ix86_compare_op1, align 8, !tbaa !1
  %call11 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call11
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_cmphi(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = getelementptr inbounds %struct.rtx_def* %operand0, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 66
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %1 = getelementptr inbounds %struct.rtx_def* %operand1, i64 0, i32 0
  %bf.load4 = load i32* %1, align 8
  %bf.clear5 = and i32 %bf.load4, 65535
  %cmp6 = icmp eq i32 %bf.clear5, 66
  br i1 %cmp6, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %call = tail call %struct.rtx_def* @force_reg(i32 3, %struct.rtx_def* %operand0) #4
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %operands.sroa.0.0 = phi %struct.rtx_def* [ %call, %if.then ], [ %operand0, %land.lhs.true ], [ %operand0, %entry ]
  store %struct.rtx_def* %operands.sroa.0.0, %struct.rtx_def** @ix86_compare_op0, align 8, !tbaa !1
  store %struct.rtx_def* %operand1, %struct.rtx_def** @ix86_compare_op1, align 8, !tbaa !1
  %call11 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call11
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_cmpqi(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = getelementptr inbounds %struct.rtx_def* %operand0, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 66
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %1 = getelementptr inbounds %struct.rtx_def* %operand1, i64 0, i32 0
  %bf.load4 = load i32* %1, align 8
  %bf.clear5 = and i32 %bf.load4, 65535
  %cmp6 = icmp eq i32 %bf.clear5, 66
  br i1 %cmp6, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %call = tail call %struct.rtx_def* @force_reg(i32 2, %struct.rtx_def* %operand0) #4
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %operands.sroa.0.0 = phi %struct.rtx_def* [ %call, %if.then ], [ %operand0, %land.lhs.true ], [ %operand0, %entry ]
  store %struct.rtx_def* %operands.sroa.0.0, %struct.rtx_def** @ix86_compare_op0, align 8, !tbaa !1
  store %struct.rtx_def* %operand1, %struct.rtx_def** @ix86_compare_op1, align 8, !tbaa !1
  %call11 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call11
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_cmpdi_1_rex64(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 74, i32 52, %struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call1) #4
  ret %struct.rtx_def* %call2
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_cmpsi_1(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 74, i32 52, %struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call1) #4
  ret %struct.rtx_def* %call2
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_cmpqi_ext_3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 8) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 8) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 133, i32 4, %struct.rtx_def* %operand0, %struct.rtx_def* %call1, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 2, %struct.rtx_def* %call3, i32 0) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 74, i32 52, %struct.rtx_def* %call4, %struct.rtx_def* %operand1) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call5) #4
  ret %struct.rtx_def* %call6
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_cmpxf(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  tail call void @start_sequence() #4
  store %struct.rtx_def* %operand0, %struct.rtx_def** @ix86_compare_op0, align 8, !tbaa !1
  store %struct.rtx_def* %operand1, %struct.rtx_def** @ix86_compare_op1, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_cmptf(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  tail call void @start_sequence() #4
  store %struct.rtx_def* %operand0, %struct.rtx_def** @ix86_compare_op0, align 8, !tbaa !1
  store %struct.rtx_def* %operand1, %struct.rtx_def** @ix86_compare_op1, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_cmpdf(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  tail call void @start_sequence() #4
  store %struct.rtx_def* %operand0, %struct.rtx_def** @ix86_compare_op0, align 8, !tbaa !1
  store %struct.rtx_def* %operand1, %struct.rtx_def** @ix86_compare_op1, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_cmpsf(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  tail call void @start_sequence() #4
  store %struct.rtx_def* %operand0, %struct.rtx_def** @ix86_compare_op0, align 8, !tbaa !1
  store %struct.rtx_def* %operand1, %struct.rtx_def** @ix86_compare_op1, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_845(%struct.rtx_def** nocapture %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load i32* @target_flags, align 4, !tbaa !5
  %and = lshr i32 %0, 25
  %1 = and i32 %and, 1
  %2 = or i32 %1, 4
  %3 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %2, %struct.rtx_def* %3) #4
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %4 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %5 = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 0
  %bf.load = load i32* %5, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 125, i32 %bf.clear, %struct.rtx_def* %call) #4
  store %struct.rtx_def* %call3, %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %6 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx6 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %7 = load %struct.rtx_def** %arrayidx6, align 8, !tbaa !1
  %call8 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 96, i32 4, %struct.rtx_def* %call8) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 4, %struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call10, %struct.rtx_def* %7) #4
  %call12 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call11) #4
  %call13 = tail call %struct.rtx_def* @gen_rtx_REG(i32 57, i32 18) #4
  %call14 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 74, i32 57, %struct.rtx_def* %6, %struct.rtx_def* %call3) #4
  %call15 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call13, %struct.rtx_def* %call14) #4
  %call16 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call15) #4
  %call17 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %7) #4
  %call18 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call19 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 4, %struct.rtx_def* %call18) #4
  %call20 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call17, %struct.rtx_def* %call19) #4
  %call21 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call22 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call23 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 4) #4
  %call24 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %call22, %struct.rtx_def* %call23) #4
  %call25 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call21, %struct.rtx_def* %call24) #4
  %call26 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call20, %struct.rtx_def* %call25) #4
  %call27 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call26) #4
  %call28 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call27) #4
  %call29 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call29
}

declare %struct.rtx_def* @emit_insn(%struct.rtx_def*) #1

declare %struct.rtx_def* @emit(%struct.rtx_def*) #1

declare %struct.rtx_def* @copy_rtx(%struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_movsi(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %operands = alloca [2 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [2 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [2 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  call void @ix86_expand_move(i32 4, %struct.rtx_def** %arrayidx) #4
  %call = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

declare void @ix86_expand_move(i32, %struct.rtx_def**) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_movhi(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %operands = alloca [2 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [2 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [2 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  call void @ix86_expand_move(i32 3, %struct.rtx_def** %arrayidx) #4
  %call = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_movstricthi(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = getelementptr inbounds %struct.rtx_def* %operand0, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 66
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %1 = getelementptr inbounds %struct.rtx_def* %operand1, i64 0, i32 0
  %bf.load4 = load i32* %1, align 8
  %bf.clear5 = and i32 %bf.load4, 65535
  %cmp6 = icmp eq i32 %bf.clear5, 66
  br i1 %cmp6, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %call = tail call %struct.rtx_def* @force_reg(i32 3, %struct.rtx_def* %operand1) #4
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %operands.sroa.3.0 = phi %struct.rtx_def* [ %call, %if.then ], [ %operand1, %land.lhs.true ], [ %operand1, %entry ]
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 64, i32 0, %struct.rtx_def* %operand0) #4
  %call12 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call11, %struct.rtx_def* %operands.sroa.3.0) #4
  %call13 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call12) #4
  %call14 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call14
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_movqi(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %operands = alloca [2 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [2 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [2 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  call void @ix86_expand_move(i32 2, %struct.rtx_def** %arrayidx) #4
  %call = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_reload_outqi(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %operands.i = alloca [2 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %call = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %operand2, %struct.rtx_def* %operand0) #4
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str, i64 0, i64 0), i32 5519, i8* getelementptr inbounds ([17 x i8]* @__FUNCTION__.gen_reload_outqi, i64 0, i64 0)) #5
  unreachable

if.end:                                           ; preds = %entry
  %call6 = call i32 @q_regs_operand(%struct.rtx_def* %operand1, i32 2) #4
  %tobool7 = icmp eq i32 %call6, 0
  %0 = bitcast [2 x %struct.rtx_def*]* %operands.i to i8*
  br i1 %tobool7, label %if.then8, label %if.end.if.end11_crit_edge

if.end.if.end11_crit_edge:                        ; preds = %if.end
  %arrayidx.i21.pre = getelementptr inbounds [2 x %struct.rtx_def*]* %operands.i, i64 0, i64 0
  %arrayidx1.i22.pre = getelementptr inbounds [2 x %struct.rtx_def*]* %operands.i, i64 0, i64 1
  br label %if.end11

if.then8:                                         ; preds = %if.end
  call void @llvm.lifetime.start(i64 16, i8* %0) #4
  call void @start_sequence() #4
  %arrayidx.i = getelementptr inbounds [2 x %struct.rtx_def*]* %operands.i, i64 0, i64 0
  store %struct.rtx_def* %operand2, %struct.rtx_def** %arrayidx.i, align 16, !tbaa !1
  %arrayidx1.i = getelementptr inbounds [2 x %struct.rtx_def*]* %operands.i, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1.i, align 8, !tbaa !1
  call void @ix86_expand_move(i32 2, %struct.rtx_def** %arrayidx.i) #4
  %call.i = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  call void @llvm.lifetime.end(i64 16, i8* %0) #4
  %call10 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call.i) #4
  br label %if.end11

if.end11:                                         ; preds = %if.end.if.end11_crit_edge, %if.then8
  %arrayidx1.i22.pre-phi = phi %struct.rtx_def** [ %arrayidx1.i22.pre, %if.end.if.end11_crit_edge ], [ %arrayidx1.i, %if.then8 ]
  %arrayidx.i21.pre-phi = phi %struct.rtx_def** [ %arrayidx.i21.pre, %if.end.if.end11_crit_edge ], [ %arrayidx.i, %if.then8 ]
  %op1.0 = phi %struct.rtx_def* [ %operand1, %if.end.if.end11_crit_edge ], [ %operand2, %if.then8 ]
  call void @llvm.lifetime.start(i64 16, i8* %0) #4
  call void @start_sequence() #4
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx.i21.pre-phi, align 16, !tbaa !1
  store %struct.rtx_def* %op1.0, %struct.rtx_def** %arrayidx1.i22.pre-phi, align 8, !tbaa !1
  call void @ix86_expand_move(i32 2, %struct.rtx_def** %arrayidx.i21.pre-phi) #4
  %call.i23 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  call void @llvm.lifetime.end(i64 16, i8* %0) #4
  %call13 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call.i23) #4
  %call14 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  ret %struct.rtx_def* %call14
}

declare i32 @reg_overlap_mentioned_p(%struct.rtx_def*, %struct.rtx_def*) #1

; Function Attrs: noreturn
declare void @fancy_abort(i8*, i32, i8*) #3

declare i32 @q_regs_operand(%struct.rtx_def*, i32) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_movstrictqi(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = getelementptr inbounds %struct.rtx_def* %operand0, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 66
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %1 = getelementptr inbounds %struct.rtx_def* %operand1, i64 0, i32 0
  %bf.load4 = load i32* %1, align 8
  %bf.clear5 = and i32 %bf.load4, 65535
  %cmp6 = icmp eq i32 %bf.clear5, 66
  br i1 %cmp6, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %call = tail call %struct.rtx_def* @force_reg(i32 2, %struct.rtx_def* %operand1) #4
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %operands.sroa.3.0 = phi %struct.rtx_def* [ %call, %if.then ], [ %operand1, %land.lhs.true ], [ %operand1, %entry ]
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 64, i32 0, %struct.rtx_def* %operand0) #4
  %call12 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call11, %struct.rtx_def* %operands.sroa.3.0) #4
  %call13 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call12) #4
  %call14 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call14
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_movdi(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %operands = alloca [2 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [2 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [2 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  call void @ix86_expand_move(i32 5, %struct.rtx_def** %arrayidx) #4
  %call = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_peephole2_853(%struct.rtx_def* nocapture readnone %curr_insn, %struct.rtx_def** nocapture %operands) #0 {
entry:
  %_regs_allocated = alloca i64, align 8
  store i64 0, i64* %_regs_allocated, align 8, !tbaa !7
  %call = call %struct.rtx_def* @peep2_find_free_register(i32 0, i32 0, i8* getelementptr inbounds ([2 x i8]* @.str1, i64 0, i64 0), i32 5, i64* %_regs_allocated) #4
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %cmp = icmp eq %struct.rtx_def* %call, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %2 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %call4 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %2, %struct.rtx_def* %1) #4
  %call5 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call4) #4
  %call6 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %2) #4
  %call7 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call6) #4
  %call8 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call7) #4
  %call9 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  br label %return

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.rtx_def* [ %call9, %if.end ], [ null, %entry ]
  ret %struct.rtx_def* %retval.0
}

declare %struct.rtx_def* @peep2_find_free_register(i32, i32, i8*, i32, i64*) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_peephole2_854(%struct.rtx_def* nocapture readnone %curr_insn, %struct.rtx_def** %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %add.ptr = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %add.ptr1 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %add.ptr2 = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  tail call void @split_di(%struct.rtx_def** %add.ptr, i32 1, %struct.rtx_def** %add.ptr1, %struct.rtx_def** %add.ptr2) #4
  %0 = load %struct.rtx_def** %add.ptr1, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_lowpart(i32 5, %struct.rtx_def* %0) #4
  store %struct.rtx_def* %call, %struct.rtx_def** %add.ptr, align 8, !tbaa !1
  %1 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !1
  %call4 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 4) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 5, %struct.rtx_def* %1, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 4, %struct.rtx_def* %call5) #4
  store %struct.rtx_def* %call6, %struct.rtx_def** %add.ptr1, align 8, !tbaa !1
  %2 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %3 = load %struct.rtx_def** %add.ptr, align 8, !tbaa !1
  %4 = load %struct.rtx_def** %add.ptr2, align 8, !tbaa !1
  %call12 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %2, %struct.rtx_def* %3) #4
  %call13 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call12) #4
  %call14 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call6, %struct.rtx_def* %4) #4
  %call15 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call14) #4
  %call16 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call16
}

declare void @split_di(%struct.rtx_def**, i32, %struct.rtx_def**, %struct.rtx_def**) #1

declare %struct.rtx_def* @gen_lowpart(i32, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_855(%struct.rtx_def** %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %add.ptr = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %add.ptr1 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %add.ptr2 = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  tail call void @split_di(%struct.rtx_def** %add.ptr, i32 1, %struct.rtx_def** %add.ptr1, %struct.rtx_def** %add.ptr2) #4
  %0 = load %struct.rtx_def** %add.ptr1, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_lowpart(i32 5, %struct.rtx_def* %0) #4
  store %struct.rtx_def* %call, %struct.rtx_def** %add.ptr, align 8, !tbaa !1
  %1 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !1
  %call4 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 4) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 5, %struct.rtx_def* %1, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 4, %struct.rtx_def* %call5) #4
  store %struct.rtx_def* %call6, %struct.rtx_def** %add.ptr1, align 8, !tbaa !1
  %2 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %3 = load %struct.rtx_def** %add.ptr, align 8, !tbaa !1
  %4 = load %struct.rtx_def** %add.ptr2, align 8, !tbaa !1
  %call12 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %2, %struct.rtx_def* %3) #4
  %call13 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call12) #4
  %call14 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call6, %struct.rtx_def* %4) #4
  %call15 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call14) #4
  %call16 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call16
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_856(%struct.rtx_def** %operands) #0 {
entry:
  tail call void @start_sequence() #4
  tail call void @ix86_split_long_move(%struct.rtx_def** %operands) #4
  %call = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

declare void @ix86_split_long_move(%struct.rtx_def**) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_857(%struct.rtx_def** %operands) #0 {
entry:
  tail call void @start_sequence() #4
  tail call void @ix86_split_long_move(%struct.rtx_def** %operands) #4
  %call = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_peephole2_858(%struct.rtx_def* nocapture readnone %curr_insn, %struct.rtx_def** nocapture %operands) #0 {
entry:
  %_regs_allocated = alloca i64, align 8
  store i64 0, i64* %_regs_allocated, align 8, !tbaa !7
  %call = call %struct.rtx_def* @peep2_find_free_register(i32 0, i32 0, i8* getelementptr inbounds ([2 x i8]* @.str1, i64 0, i64 0), i32 5, i64* %_regs_allocated) #4
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %cmp = icmp eq %struct.rtx_def* %call, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %2 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %call4 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %2, %struct.rtx_def* %1) #4
  %call5 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call4) #4
  %call6 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %2) #4
  %call7 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call6) #4
  %call8 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call7) #4
  %call9 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  br label %return

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.rtx_def* [ %call9, %if.end ], [ null, %entry ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_peephole2_859(%struct.rtx_def* nocapture readnone %curr_insn, %struct.rtx_def** %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %add.ptr = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %add.ptr1 = getelementptr inbounds %struct.rtx_def** %operands, i64 4
  tail call void @split_di(%struct.rtx_def** %operands, i32 2, %struct.rtx_def** %add.ptr, %struct.rtx_def** %add.ptr1) #4
  %0 = load %struct.rtx_def** %add.ptr, align 8, !tbaa !1
  %arrayidx4 = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  %1 = load %struct.rtx_def** %arrayidx4, align 8, !tbaa !1
  %2 = load %struct.rtx_def** %add.ptr1, align 8, !tbaa !1
  %arrayidx6 = getelementptr inbounds %struct.rtx_def** %operands, i64 5
  %3 = load %struct.rtx_def** %arrayidx6, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %1) #4
  %call7 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %2, %struct.rtx_def* %3) #4
  %call9 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call8) #4
  %call10 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call10
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_860(%struct.rtx_def** %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %add.ptr = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %add.ptr1 = getelementptr inbounds %struct.rtx_def** %operands, i64 4
  tail call void @split_di(%struct.rtx_def** %operands, i32 2, %struct.rtx_def** %add.ptr, %struct.rtx_def** %add.ptr1) #4
  %0 = load %struct.rtx_def** %add.ptr, align 8, !tbaa !1
  %arrayidx4 = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  %1 = load %struct.rtx_def** %arrayidx4, align 8, !tbaa !1
  %2 = load %struct.rtx_def** %add.ptr1, align 8, !tbaa !1
  %arrayidx6 = getelementptr inbounds %struct.rtx_def** %operands, i64 5
  %3 = load %struct.rtx_def** %arrayidx6, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %1) #4
  %call7 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %2, %struct.rtx_def* %3) #4
  %call9 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call8) #4
  %call10 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call10
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_movsf(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %operands = alloca [2 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [2 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [2 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  call void @ix86_expand_move(i32 15, %struct.rtx_def** %arrayidx) #4
  %call = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_862(%struct.rtx_def** nocapture %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %0 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx1 to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @get_pool_constant(%struct.rtx_def* %1) #4
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %2 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %2, %struct.rtx_def* %call) #4
  %call6 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call7
}

declare %struct.rtx_def* @get_pool_constant(%struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_863(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %0 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 -4) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %call2, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 15, %struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call8, %struct.rtx_def* %0) #4
  %call10 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call11
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_864(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %0 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 7) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 7) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 -8) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 5, %struct.rtx_def* %call2, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 7) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 15, %struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call8, %struct.rtx_def* %0) #4
  %call10 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call11
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_movdf(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %operands = alloca [2 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [2 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [2 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  call void @ix86_expand_move(i32 16, %struct.rtx_def** %arrayidx) #4
  %call = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_866(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %0 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 -8) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %call2, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 16, %struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call8, %struct.rtx_def* %0) #4
  %call10 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call11
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_867(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %0 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 7) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 7) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 -8) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 5, %struct.rtx_def* %call2, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 7) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 16, %struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call8, %struct.rtx_def* %0) #4
  %call10 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call11
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_868(%struct.rtx_def** %operands) #0 {
entry:
  tail call void @start_sequence() #4
  tail call void @ix86_split_long_move(%struct.rtx_def** %operands) #4
  %call = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_869(%struct.rtx_def** %operands) #0 {
entry:
  tail call void @start_sequence() #4
  tail call void @ix86_split_long_move(%struct.rtx_def** %operands) #4
  %call = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_movxf(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %operands = alloca [2 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [2 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [2 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  call void @ix86_expand_move(i32 17, %struct.rtx_def** %arrayidx) #4
  %call = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_movtf(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %operands = alloca [2 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [2 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [2 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  call void @ix86_expand_move(i32 18, %struct.rtx_def** %arrayidx) #4
  %call = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_872(%struct.rtx_def** %operands) #0 {
entry:
  tail call void @start_sequence() #4
  tail call void @ix86_split_long_move(%struct.rtx_def** %operands) #4
  %call = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_873(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %0 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 -12) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %call2, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 17, %struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call8, %struct.rtx_def* %0) #4
  %call10 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call11
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_874(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %0 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 -16) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %call2, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 18, %struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call8, %struct.rtx_def* %0) #4
  %call10 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call11
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_875(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %0 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 7) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 7) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 -16) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 5, %struct.rtx_def* %call2, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 7) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 18, %struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call8, %struct.rtx_def* %0) #4
  %call10 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call11
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_876(%struct.rtx_def** %operands) #0 {
entry:
  tail call void @start_sequence() #4
  tail call void @ix86_split_long_move(%struct.rtx_def** %operands) #4
  %call = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_877(%struct.rtx_def** nocapture %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %0 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx1 to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @get_pool_constant(%struct.rtx_def* %1) #4
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %2 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %2, %struct.rtx_def* %call) #4
  %call6 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call7
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_zero_extendhisi2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load i32* @x86_zero_extend_with_and, align 4, !tbaa !5
  %1 = load i32* @ix86_cpu, align 4, !tbaa !9
  %shl = shl i32 1, %1
  %and = and i32 %shl, %0
  %tobool = icmp eq i32 %and, 0
  %2 = load i32* @optimize_size, align 4
  %tobool2 = icmp ne i32 %2, 0
  %or.cond = or i1 %tobool, %tobool2
  br i1 %or.cond, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %call = tail call %struct.rtx_def* @force_reg(i32 3, %struct.rtx_def* %operand1) #4
  %call.i = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 121, i32 4, %struct.rtx_def* %call) #4
  %call1.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call.i) #4
  %call2.i = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call3.i = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call2.i) #4
  %call4.i = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call1.i, %struct.rtx_def* %call3.i) #4
  %call5.i = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call4.i) #4
  %call8 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call5.i) #4
  %call9 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

if.end:                                           ; preds = %entry
  %call12 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 121, i32 4, %struct.rtx_def* %operand1) #4
  %call13 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call12) #4
  %call14 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call13) #4
  %call15 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call15, %if.end ], [ %call9, %if.then ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_879(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %0) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 65535) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 83, i32 4, %struct.rtx_def* %call, %struct.rtx_def* %call1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call3, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call9
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_zero_extendqihi2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 121, i32 3, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call1, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call4) #4
  ret %struct.rtx_def* %call5
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_881(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 121, i32 3, %struct.rtx_def* %1) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call) #4
  %call3 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call4
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_882(%struct.rtx_def** nocapture %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_lowpart(i32 2, %struct.rtx_def* %0) #4
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %1 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx3 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %2 = load %struct.rtx_def** %arrayidx3, align 8, !tbaa !1
  %3 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %1, %struct.rtx_def* %3) #4
  %call6 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 64, i32 0, %struct.rtx_def* %call) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call7, %struct.rtx_def* %2) #4
  %call9 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call8) #4
  %call10 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call10
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_883(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %0) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 255) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 83, i32 3, %struct.rtx_def* %call, %struct.rtx_def* %call1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call3, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call9
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_zero_extendqisi2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 121, i32 4, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call1, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call4) #4
  ret %struct.rtx_def* %call5
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_885(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 121, i32 4, %struct.rtx_def* %1) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call) #4
  %call3 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call4
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_886(%struct.rtx_def** nocapture %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_lowpart(i32 2, %struct.rtx_def* %0) #4
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %1 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx3 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %2 = load %struct.rtx_def** %arrayidx3, align 8, !tbaa !1
  %3 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %1, %struct.rtx_def* %3) #4
  %call6 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 64, i32 0, %struct.rtx_def* %call) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call7, %struct.rtx_def* %2) #4
  %call9 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call8) #4
  %call10 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call10
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_887(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %0) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 255) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 83, i32 4, %struct.rtx_def* %call, %struct.rtx_def* %call1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call3, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call9
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_zero_extendsidi2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load i32* @target_flags, align 4, !tbaa !5
  %and = and i32 %0, 33554432
  %tobool = icmp eq i32 %and, 0
  %call.i = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 121, i32 5, %struct.rtx_def* %operand1) #4
  %call1.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call.i) #4
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call2.i = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call3.i = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call2.i) #4
  %call4.i = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call1.i, %struct.rtx_def* %call3.i) #4
  %call5.i = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call4.i) #4
  %call4 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call5.i) #4
  %call5 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

if.end:                                           ; preds = %entry
  %call10 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call1.i) #4
  %call11 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call11, %if.end ], [ %call5, %if.then ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_889(%struct.rtx_def** %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 4
  tail call void @split_di(%struct.rtx_def** %operands, i32 1, %struct.rtx_def** %arrayidx1, %struct.rtx_def** %arrayidx2) #4
  %0 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %1 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %1) #4
  %call8 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call) #4
  %call9 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call9
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_890(%struct.rtx_def** %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 4
  tail call void @split_di(%struct.rtx_def** %operands, i32 1, %struct.rtx_def** %arrayidx1, %struct.rtx_def** %arrayidx2) #4
  %0 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %1 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %1) #4
  %call8 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call) #4
  %call9 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call9
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_891(%struct.rtx_def** %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 4
  tail call void @split_di(%struct.rtx_def** %operands, i32 1, %struct.rtx_def** %arrayidx1, %struct.rtx_def** %arrayidx2) #4
  %arrayidx4 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %0 = load %struct.rtx_def** %arrayidx4, align 8, !tbaa !1
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %2 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %1, %struct.rtx_def* %0) #4
  %call8 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call) #4
  %3 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %2, %struct.rtx_def* %3) #4
  %call10 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call11
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_extendsidi2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load i32* @target_flags, align 4, !tbaa !5
  %and = and i32 %0, 33554432
  %tobool = icmp eq i32 %and, 0
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 120, i32 5, %struct.rtx_def* %operand1) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call9) #4
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %call4 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call10) #4
  %call5 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

if.end:                                           ; preds = %entry
  %call11 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call12 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call11) #4
  %call13 = tail call %struct.rtx_def* @gen_rtx_fmt_0(i32 62, i32 4) #4
  %call14 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call13) #4
  %call15 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 3, %struct.rtx_def* %call10, %struct.rtx_def* %call12, %struct.rtx_def* %call14) #4
  %call16 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call15) #4
  %call17 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call16) #4
  %call18 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call5, %if.then ], [ %call18, %if.end ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_893(%struct.rtx_def** %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 4
  tail call void @split_di(%struct.rtx_def** %operands, i32 1, %struct.rtx_def** %arrayidx1, %struct.rtx_def** %arrayidx2) #4
  %arrayidx4 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %0 = load %struct.rtx_def** %arrayidx4, align 8, !tbaa !1
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %2 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %1, %struct.rtx_def* %0) #4
  %call8 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call) #4
  %call9 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %0) #4
  %call10 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %0) #4
  %call11 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 31) #4
  %call12 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 89, i32 4, %struct.rtx_def* %call10, %struct.rtx_def* %call11) #4
  %call13 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call9, %struct.rtx_def* %call12) #4
  %call14 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call15 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call14) #4
  %call16 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call13, %struct.rtx_def* %call15) #4
  %call17 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call16) #4
  %call18 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call17) #4
  %call19 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %0) #4
  %call20 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %2, %struct.rtx_def* %call19) #4
  %call21 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call20) #4
  %call22 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call22
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_894(%struct.rtx_def** %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 4
  tail call void @split_di(%struct.rtx_def** %operands, i32 1, %struct.rtx_def** %arrayidx1, %struct.rtx_def** %arrayidx2) #4
  %0 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx4 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx4, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %0, %struct.rtx_def* %1) #4
  %2 = load %struct.rtx_def** %arrayidx4, align 8, !tbaa !1
  %call6 = tail call i32 @true_regnum(%struct.rtx_def* %2) #4
  %cmp = icmp eq i32 %call6, 0
  %arrayidx7 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  br i1 %cmp, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.rtx_def** %arrayidx7, align 8, !tbaa !1
  %call8 = tail call i32 @true_regnum(%struct.rtx_def* %3) #4
  %cmp9 = icmp eq i32 %call8, 1
  br i1 %cmp9, label %land.lhs.true10, label %if.else

land.lhs.true10:                                  ; preds = %land.lhs.true
  %4 = load i32* @optimize_size, align 4, !tbaa !5
  %tobool = icmp eq i32 %4, 0
  br i1 %tobool, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %land.lhs.true10
  %5 = load i32* @x86_use_cltd, align 4, !tbaa !5
  %6 = load i32* @ix86_cpu, align 4, !tbaa !9
  %shl = shl i32 1, %6
  %and = and i32 %shl, %5
  %tobool11 = icmp eq i32 %and, 0
  br i1 %tobool11, label %if.else, label %if.then

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true10
  %7 = load %struct.rtx_def** %arrayidx7, align 8, !tbaa !1
  %8 = load %struct.rtx_def** %arrayidx4, align 8, !tbaa !1
  %call14 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 31) #4
  %call.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 89, i32 4, %struct.rtx_def* %8, %struct.rtx_def* %call14) #4
  %call1.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %7, %struct.rtx_def* %call.i) #4
  %call2.i = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call3.i = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call2.i) #4
  %call4.i = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call1.i, %struct.rtx_def* %call3.i) #4
  %call5.i = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call4.i) #4
  %call16 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call5.i) #4
  br label %if.end

if.else:                                          ; preds = %entry, %lor.lhs.false, %land.lhs.true
  %9 = load %struct.rtx_def** %arrayidx7, align 8, !tbaa !1
  %10 = load %struct.rtx_def** %arrayidx4, align 8, !tbaa !1
  %call19 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %9, %struct.rtx_def* %10) #4
  %11 = load %struct.rtx_def** %arrayidx7, align 8, !tbaa !1
  %call22 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 31) #4
  %call.i43 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 89, i32 4, %struct.rtx_def* %11, %struct.rtx_def* %call22) #4
  %call1.i44 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %11, %struct.rtx_def* %call.i43) #4
  %call2.i45 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call3.i46 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call2.i45) #4
  %call4.i47 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call1.i44, %struct.rtx_def* %call3.i46) #4
  %call5.i48 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call4.i47) #4
  %call24 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call5.i48) #4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %12 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %arrayidx26 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %13 = load %struct.rtx_def** %arrayidx26, align 8, !tbaa !1
  %call27 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %12, %struct.rtx_def* %13) #4
  %call28 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call28
}

declare %struct.rtx_def* @emit_move_insn(%struct.rtx_def*, %struct.rtx_def*) #1

declare i32 @true_regnum(%struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_895(%struct.rtx_def** %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 4
  tail call void @split_di(%struct.rtx_def** %operands, i32 1, %struct.rtx_def** %arrayidx1, %struct.rtx_def** %arrayidx2) #4
  %0 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call = tail call i32 @true_regnum(%struct.rtx_def* %0) #4
  %arrayidx4 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx4, align 8, !tbaa !1
  %call5 = tail call i32 @true_regnum(%struct.rtx_def* %1) #4
  %cmp = icmp eq i32 %call, %call5
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %2 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %3 = load %struct.rtx_def** %arrayidx4, align 8, !tbaa !1
  %call8 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %2, %struct.rtx_def* %3) #4
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %4 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call10 = tail call i32 @true_regnum(%struct.rtx_def* %4) #4
  %cmp11 = icmp eq i32 %call10, 0
  br i1 %cmp11, label %land.lhs.true, label %if.end20

land.lhs.true:                                    ; preds = %if.end
  %5 = load i32* @optimize_size, align 4, !tbaa !5
  %tobool = icmp eq i32 %5, 0
  br i1 %tobool, label %lor.lhs.false, label %if.then13

lor.lhs.false:                                    ; preds = %land.lhs.true
  %6 = load i32* @x86_use_cltd, align 4, !tbaa !5
  %7 = load i32* @ix86_cpu, align 4, !tbaa !9
  %shl = shl i32 1, %7
  %and = and i32 %shl, %6
  %tobool12 = icmp eq i32 %and, 0
  br i1 %tobool12, label %if.end20, label %if.then13

if.then13:                                        ; preds = %lor.lhs.false, %land.lhs.true
  %8 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %9 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call16 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 31) #4
  %call.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 89, i32 4, %struct.rtx_def* %9, %struct.rtx_def* %call16) #4
  %call1.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %8, %struct.rtx_def* %call.i) #4
  %call2.i = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call3.i = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call2.i) #4
  %call4.i = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call1.i, %struct.rtx_def* %call3.i) #4
  %call5.i = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call4.i) #4
  %call18 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call5.i) #4
  %call19 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

if.end20:                                         ; preds = %lor.lhs.false, %if.end
  %10 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %call22 = tail call i32 @true_regnum(%struct.rtx_def* %10) #4
  %11 = load %struct.rtx_def** %arrayidx4, align 8, !tbaa !1
  %call24 = tail call i32 @true_regnum(%struct.rtx_def* %11) #4
  %cmp25 = icmp eq i32 %call22, %call24
  br i1 %cmp25, label %if.end30, label %if.then26

if.then26:                                        ; preds = %if.end20
  %12 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %13 = load %struct.rtx_def** %arrayidx4, align 8, !tbaa !1
  %call29 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %12, %struct.rtx_def* %13) #4
  br label %if.end30

if.end30:                                         ; preds = %if.end20, %if.then26
  %14 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %call33 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 31) #4
  %call.i53 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 89, i32 4, %struct.rtx_def* %14, %struct.rtx_def* %call33) #4
  %call1.i54 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %14, %struct.rtx_def* %call.i53) #4
  %call2.i55 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call3.i56 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call2.i55) #4
  %call4.i57 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call1.i54, %struct.rtx_def* %call3.i56) #4
  %call5.i58 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call4.i57) #4
  %call35 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call5.i58) #4
  %call36 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.end30, %if.then13
  %retval.0 = phi %struct.rtx_def* [ %call19, %if.then13 ], [ %call36, %if.end30 ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_896(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %0 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 -8) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %call2, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 16, %struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 123, i32 16, %struct.rtx_def* %0) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call8, %struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call10) #4
  %call12 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call12
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_897(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %0 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 7) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 7) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 -8) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 5, %struct.rtx_def* %call2, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 7) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 16, %struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 123, i32 16, %struct.rtx_def* %0) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call8, %struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call10) #4
  %call12 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call12
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_898(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %0 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 -12) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %call2, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 17, %struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 123, i32 17, %struct.rtx_def* %0) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call8, %struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call10) #4
  %call12 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call12
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_899(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %0 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 -16) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %call2, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 18, %struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 123, i32 18, %struct.rtx_def* %0) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call8, %struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call10) #4
  %call12 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call12
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_900(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %0 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 7) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 7) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 -16) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 5, %struct.rtx_def* %call2, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 7) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 16, %struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 123, i32 18, %struct.rtx_def* %0) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call8, %struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call10) #4
  %call12 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call12
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_901(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %0 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 -12) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %call2, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 16, %struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 123, i32 17, %struct.rtx_def* %0) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call8, %struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call10) #4
  %call12 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call12
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_902(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %0 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 -16) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %call2, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 18, %struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 123, i32 17, %struct.rtx_def* %0) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call8, %struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call10) #4
  %call12 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call12
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_903(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %0 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 7) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 7) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 -16) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 5, %struct.rtx_def* %call2, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 7) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 18, %struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 123, i32 18, %struct.rtx_def* %0) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call8, %struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call10) #4
  %call12 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call12
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_extendsfdf2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = getelementptr inbounds %struct.rtx_def* %operand0, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 66
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %1 = getelementptr inbounds %struct.rtx_def* %operand1, i64 0, i32 0
  %bf.load4 = load i32* %1, align 8
  %bf.clear5 = and i32 %bf.load4, 65535
  %cmp6 = icmp eq i32 %bf.clear5, 66
  br i1 %cmp6, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %call = tail call %struct.rtx_def* @force_reg(i32 15, %struct.rtx_def* %operand1) #4
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %operands.sroa.3.0 = phi %struct.rtx_def* [ %call, %if.then ], [ %operand1, %land.lhs.true ], [ %operand1, %entry ]
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 123, i32 16, %struct.rtx_def* %operands.sroa.3.0) #4
  %call12 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call11) #4
  %call13 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call12) #4
  %call14 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call14
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_extendsfxf2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = getelementptr inbounds %struct.rtx_def* %operand0, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 66
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %1 = getelementptr inbounds %struct.rtx_def* %operand1, i64 0, i32 0
  %bf.load4 = load i32* %1, align 8
  %bf.clear5 = and i32 %bf.load4, 65535
  %cmp6 = icmp eq i32 %bf.clear5, 66
  br i1 %cmp6, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %call = tail call %struct.rtx_def* @force_reg(i32 15, %struct.rtx_def* %operand1) #4
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %operands.sroa.3.0 = phi %struct.rtx_def* [ %call, %if.then ], [ %operand1, %land.lhs.true ], [ %operand1, %entry ]
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 123, i32 17, %struct.rtx_def* %operands.sroa.3.0) #4
  %call12 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call11) #4
  %call13 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call12) #4
  %call14 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call14
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_extendsftf2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = getelementptr inbounds %struct.rtx_def* %operand0, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 66
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %1 = getelementptr inbounds %struct.rtx_def* %operand1, i64 0, i32 0
  %bf.load4 = load i32* %1, align 8
  %bf.clear5 = and i32 %bf.load4, 65535
  %cmp6 = icmp eq i32 %bf.clear5, 66
  br i1 %cmp6, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %call = tail call %struct.rtx_def* @force_reg(i32 15, %struct.rtx_def* %operand1) #4
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %operands.sroa.3.0 = phi %struct.rtx_def* [ %call, %if.then ], [ %operand1, %land.lhs.true ], [ %operand1, %entry ]
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 123, i32 18, %struct.rtx_def* %operands.sroa.3.0) #4
  %call12 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call11) #4
  %call13 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call12) #4
  %call14 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call14
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_extenddfxf2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = getelementptr inbounds %struct.rtx_def* %operand0, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 66
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %1 = getelementptr inbounds %struct.rtx_def* %operand1, i64 0, i32 0
  %bf.load4 = load i32* %1, align 8
  %bf.clear5 = and i32 %bf.load4, 65535
  %cmp6 = icmp eq i32 %bf.clear5, 66
  br i1 %cmp6, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %call = tail call %struct.rtx_def* @force_reg(i32 16, %struct.rtx_def* %operand1) #4
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %operands.sroa.3.0 = phi %struct.rtx_def* [ %call, %if.then ], [ %operand1, %land.lhs.true ], [ %operand1, %entry ]
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 123, i32 17, %struct.rtx_def* %operands.sroa.3.0) #4
  %call12 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call11) #4
  %call13 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call12) #4
  %call14 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call14
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_extenddftf2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = getelementptr inbounds %struct.rtx_def* %operand0, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 66
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %1 = getelementptr inbounds %struct.rtx_def* %operand1, i64 0, i32 0
  %bf.load4 = load i32* %1, align 8
  %bf.clear5 = and i32 %bf.load4, 65535
  %cmp6 = icmp eq i32 %bf.clear5, 66
  br i1 %cmp6, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %call = tail call %struct.rtx_def* @force_reg(i32 16, %struct.rtx_def* %operand1) #4
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %operands.sroa.3.0 = phi %struct.rtx_def* [ %call, %if.then ], [ %operand1, %land.lhs.true ], [ %operand1, %entry ]
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 123, i32 18, %struct.rtx_def* %operands.sroa.3.0) #4
  %call12 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call11) #4
  %call13 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call12) #4
  %call14 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call14
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_truncdfsf2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load i32* @target_flags, align 4, !tbaa !5
  %and = and i32 %0, 1
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %call = tail call %struct.rtx_def* @assign_386_stack_local(i32 15, i32 0) #4
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 124, i32 15, %struct.rtx_def* %operand1) #4
  %call12 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call11) #4
  %call13 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call) #4
  %call14 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call12, %struct.rtx_def* %call13) #4
  %call15 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call14) #4
  %call16 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call15) #4
  %call17 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

if.else:                                          ; preds = %entry
  %call.i = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 124, i32 15, %struct.rtx_def* %operand1) #4
  %call1.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call.i) #4
  %call6 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call1.i) #4
  %call7 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.then, %if.else
  %retval.0 = phi %struct.rtx_def* [ %call17, %if.then ], [ %call7, %if.else ]
  ret %struct.rtx_def* %retval.0
}

declare %struct.rtx_def* @assign_386_stack_local(i32, i32) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_910(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 124, i32 15, %struct.rtx_def* %1) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call) #4
  %call3 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call4
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_911(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 124, i32 15, %struct.rtx_def* %1) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call) #4
  %call3 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call4
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_912(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %2 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 124, i32 15, %struct.rtx_def* %1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %2, %struct.rtx_def* %call) #4
  %call4 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %2) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call8
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_truncxfsf2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  tail call void @start_sequence() #4
  %call = tail call %struct.rtx_def* @assign_386_stack_local(i32 15, i32 0) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 124, i32 15, %struct.rtx_def* %operand1) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call) #4
  %call9 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call7, %struct.rtx_def* %call8) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call9) #4
  %call11 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call10) #4
  %call12 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call12
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_914(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 124, i32 15, %struct.rtx_def* %1) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call) #4
  %call3 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call4
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_915(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %2 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 124, i32 15, %struct.rtx_def* %1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %2, %struct.rtx_def* %call) #4
  %call4 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %2) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call8
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_trunctfsf2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  tail call void @start_sequence() #4
  %call = tail call %struct.rtx_def* @assign_386_stack_local(i32 15, i32 0) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 124, i32 15, %struct.rtx_def* %operand1) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call) #4
  %call9 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call7, %struct.rtx_def* %call8) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call9) #4
  %call11 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call10) #4
  %call12 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call12
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_917(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 124, i32 15, %struct.rtx_def* %1) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call) #4
  %call3 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call4
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_918(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %2 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 124, i32 15, %struct.rtx_def* %1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %2, %struct.rtx_def* %call) #4
  %call4 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %2) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call8
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_truncxfdf2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  tail call void @start_sequence() #4
  %call = tail call %struct.rtx_def* @assign_386_stack_local(i32 16, i32 0) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 124, i32 16, %struct.rtx_def* %operand1) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call) #4
  %call9 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call7, %struct.rtx_def* %call8) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call9) #4
  %call11 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call10) #4
  %call12 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call12
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_920(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 124, i32 16, %struct.rtx_def* %1) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call) #4
  %call3 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call4
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_921(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %2 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 124, i32 16, %struct.rtx_def* %1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %2, %struct.rtx_def* %call) #4
  %call4 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %2) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call8
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_trunctfdf2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  tail call void @start_sequence() #4
  %call = tail call %struct.rtx_def* @assign_386_stack_local(i32 16, i32 0) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 124, i32 16, %struct.rtx_def* %operand1) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call) #4
  %call9 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call7, %struct.rtx_def* %call8) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call9) #4
  %call11 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call10) #4
  %call12 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call12
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_923(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 124, i32 16, %struct.rtx_def* %1) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call) #4
  %call3 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call4
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_924(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %2 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 124, i32 16, %struct.rtx_def* %1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %2, %struct.rtx_def* %call) #4
  %call4 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %2) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call8
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_fix_truncxfdi2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 126, i32 5, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_fix_trunctfdi2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 126, i32 5, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_fix_truncdfdi2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load i32* @target_flags, align 4, !tbaa !5
  %1 = and i32 %0, 33816576
  %2 = icmp eq i32 %1, 33816576
  br i1 %2, label %if.then, label %if.end15

if.then:                                          ; preds = %entry
  %3 = getelementptr inbounds %struct.rtx_def* %operand0, i64 0, i32 0
  %bf.load = load i32* %3, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp4 = icmp eq i32 %bf.clear, 61
  br i1 %cmp4, label %cond.end, label %cond.false

cond.false:                                       ; preds = %if.then
  %call = tail call %struct.rtx_def* @gen_reg_rtx(i32 5) #4
  br label %cond.end

cond.end:                                         ; preds = %if.then, %cond.false
  %cond = phi %struct.rtx_def* [ %call, %cond.false ], [ %operand0, %if.then ]
  %call.i = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 126, i32 5, %struct.rtx_def* %operand1) #4
  %call1.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %cond, %struct.rtx_def* %call.i) #4
  %call8 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call1.i) #4
  %cmp10 = icmp eq %struct.rtx_def* %cond, %operand0
  br i1 %cmp10, label %if.end, label %if.then11

if.then11:                                        ; preds = %cond.end
  %call13 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %operand0, %struct.rtx_def* %cond) #4
  br label %if.end

if.end:                                           ; preds = %cond.end, %if.then11
  %call14 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

if.end15:                                         ; preds = %entry
  %call18 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 126, i32 5, %struct.rtx_def* %operand1) #4
  %call19 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call18) #4
  %call20 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call19) #4
  %call21 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.end15, %if.end
  %retval.0 = phi %struct.rtx_def* [ %call14, %if.end ], [ %call21, %if.end15 ]
  ret %struct.rtx_def* %retval.0
}

declare %struct.rtx_def* @gen_reg_rtx(i32) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_fix_truncsfdi2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load i32* @target_flags, align 4, !tbaa !5
  %and = and i32 %0, 327680
  %cmp = icmp eq i32 %and, 0
  %and2 = and i32 %0, 33554432
  %tobool = icmp eq i32 %and2, 0
  %or.cond = or i1 %cmp, %tobool
  br i1 %or.cond, label %if.end15, label %if.then

if.then:                                          ; preds = %entry
  %1 = getelementptr inbounds %struct.rtx_def* %operand0, i64 0, i32 0
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp4 = icmp eq i32 %bf.clear, 61
  br i1 %cmp4, label %cond.end, label %cond.false

cond.false:                                       ; preds = %if.then
  %call = tail call %struct.rtx_def* @gen_reg_rtx(i32 5) #4
  br label %cond.end

cond.end:                                         ; preds = %if.then, %cond.false
  %cond = phi %struct.rtx_def* [ %call, %cond.false ], [ %operand0, %if.then ]
  %call.i = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 126, i32 5, %struct.rtx_def* %operand1) #4
  %call1.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %cond, %struct.rtx_def* %call.i) #4
  %call8 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call1.i) #4
  %cmp10 = icmp eq %struct.rtx_def* %cond, %operand0
  br i1 %cmp10, label %if.end, label %if.then11

if.then11:                                        ; preds = %cond.end
  %call13 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %operand0, %struct.rtx_def* %cond) #4
  br label %if.end

if.end:                                           ; preds = %cond.end, %if.then11
  %call14 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

if.end15:                                         ; preds = %entry
  %call18 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 126, i32 5, %struct.rtx_def* %operand1) #4
  %call19 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call18) #4
  %call20 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call19) #4
  %call21 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.end15, %if.end
  %retval.0 = phi %struct.rtx_def* [ %call14, %if.end ], [ %call21, %if.end15 ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_929(%struct.rtx_def** nocapture %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %call = tail call %struct.rtx_def* @assign_386_stack_local(i32 3, i32 1) #4
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %call1 = tail call %struct.rtx_def* @assign_386_stack_local(i32 3, i32 2) #4
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  store %struct.rtx_def* %call1, %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %call4 = tail call i32 @memory_operand(%struct.rtx_def* %0, i32 0) #4
  %tobool = icmp eq i32 %call4, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %1 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx6 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %2 = load %struct.rtx_def** %arrayidx6, align 8, !tbaa !1
  %3 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %4 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %call.i = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 126, i32 5, %struct.rtx_def* %2) #4
  %call1.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %1, %struct.rtx_def* %call.i) #4
  %call2.i = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %3) #4
  %call3.i = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %4) #4
  %call4.i = tail call %struct.rtx_def* @gen_rtx_fmt_0(i32 62, i32 16) #4
  %call5.i = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call4.i) #4
  %call6.i = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 4, %struct.rtx_def* %call1.i, %struct.rtx_def* %call2.i, %struct.rtx_def* %call3.i, %struct.rtx_def* %call5.i) #4
  %call7.i = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call6.i) #4
  %call10 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call7.i) #4
  br label %if.end

if.else:                                          ; preds = %entry
  %call11 = tail call %struct.rtx_def* @assign_386_stack_local(i32 5, i32 0) #4
  %arrayidx12 = getelementptr inbounds %struct.rtx_def** %operands, i64 4
  store %struct.rtx_def* %call11, %struct.rtx_def** %arrayidx12, align 8, !tbaa !1
  %5 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx14 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %6 = load %struct.rtx_def** %arrayidx14, align 8, !tbaa !1
  %7 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %8 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %call.i33 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 126, i32 5, %struct.rtx_def* %6) #4
  %call1.i34 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %5, %struct.rtx_def* %call.i33) #4
  %call2.i35 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %7) #4
  %call3.i36 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %8) #4
  %call4.i37 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call11) #4
  %call5.i38 = tail call %struct.rtx_def* @gen_rtx_fmt_0(i32 62, i32 16) #4
  %call6.i39 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call5.i38) #4
  %call7.i40 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 5, %struct.rtx_def* %call1.i34, %struct.rtx_def* %call2.i35, %struct.rtx_def* %call3.i36, %struct.rtx_def* %call4.i37, %struct.rtx_def* %call6.i39) #4
  %call8.i = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call7.i40) #4
  %call19 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call8.i) #4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %call20 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call20
}

declare i32 @memory_operand(%struct.rtx_def*, i32) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_930(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %2 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %arrayidx3 = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  %3 = load %struct.rtx_def** %arrayidx3, align 8, !tbaa !1
  %arrayidx4 = getelementptr inbounds %struct.rtx_def** %operands, i64 4
  %4 = load %struct.rtx_def** %arrayidx4, align 8, !tbaa !1
  %arrayidx5 = getelementptr inbounds %struct.rtx_def** %operands, i64 5
  %5 = load %struct.rtx_def** %arrayidx5, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 126, i32 5, %struct.rtx_def* %1) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %4, %struct.rtx_def* %call) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %2) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %3) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %5) #4
  %call10 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 4, %struct.rtx_def* %call6, %struct.rtx_def* %call7, %struct.rtx_def* %call8, %struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call10) #4
  %call12 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call11) #4
  %call13 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %4) #4
  %call14 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call13) #4
  %call15 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call14) #4
  %call16 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call16
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_931(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %2 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %arrayidx3 = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  %3 = load %struct.rtx_def** %arrayidx3, align 8, !tbaa !1
  %arrayidx5 = getelementptr inbounds %struct.rtx_def** %operands, i64 5
  %4 = load %struct.rtx_def** %arrayidx5, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 126, i32 5, %struct.rtx_def* %1) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %2) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %3) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %4) #4
  %call10 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 4, %struct.rtx_def* %call6, %struct.rtx_def* %call7, %struct.rtx_def* %call8, %struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call10) #4
  %call12 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call11) #4
  %call13 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call13
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_fix_truncxfsi2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 126, i32 4, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_fix_trunctfsi2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 126, i32 4, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_fix_truncdfsi2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load i32* @target_flags, align 4, !tbaa !5
  %and = and i32 %0, 262144
  %cmp = icmp eq i32 %and, 0
  br i1 %cmp, label %if.end14, label %if.then

if.then:                                          ; preds = %entry
  %1 = getelementptr inbounds %struct.rtx_def* %operand0, i64 0, i32 0
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp3 = icmp eq i32 %bf.clear, 61
  br i1 %cmp3, label %cond.end, label %cond.false

cond.false:                                       ; preds = %if.then
  %call = tail call %struct.rtx_def* @gen_reg_rtx(i32 4) #4
  br label %cond.end

cond.end:                                         ; preds = %if.then, %cond.false
  %cond = phi %struct.rtx_def* [ %call, %cond.false ], [ %operand0, %if.then ]
  %call.i = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 126, i32 4, %struct.rtx_def* %operand1) #4
  %call1.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %cond, %struct.rtx_def* %call.i) #4
  %call7 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call1.i) #4
  %cmp9 = icmp eq %struct.rtx_def* %cond, %operand0
  br i1 %cmp9, label %if.end, label %if.then10

if.then10:                                        ; preds = %cond.end
  %call12 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %operand0, %struct.rtx_def* %cond) #4
  br label %if.end

if.end:                                           ; preds = %cond.end, %if.then10
  %call13 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

if.end14:                                         ; preds = %entry
  %call17 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 126, i32 4, %struct.rtx_def* %operand1) #4
  %call18 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call17) #4
  %call19 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call18) #4
  %call20 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.end14, %if.end
  %retval.0 = phi %struct.rtx_def* [ %call13, %if.end ], [ %call20, %if.end14 ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_fix_truncsfsi2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load i32* @target_flags, align 4, !tbaa !5
  %and = and i32 %0, 327680
  %cmp = icmp eq i32 %and, 0
  br i1 %cmp, label %if.end14, label %if.then

if.then:                                          ; preds = %entry
  %1 = getelementptr inbounds %struct.rtx_def* %operand0, i64 0, i32 0
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp3 = icmp eq i32 %bf.clear, 61
  br i1 %cmp3, label %cond.end, label %cond.false

cond.false:                                       ; preds = %if.then
  %call = tail call %struct.rtx_def* @gen_reg_rtx(i32 4) #4
  br label %cond.end

cond.end:                                         ; preds = %if.then, %cond.false
  %cond = phi %struct.rtx_def* [ %call, %cond.false ], [ %operand0, %if.then ]
  %call.i = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 126, i32 4, %struct.rtx_def* %operand1) #4
  %call1.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %cond, %struct.rtx_def* %call.i) #4
  %call7 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call1.i) #4
  %cmp9 = icmp eq %struct.rtx_def* %cond, %operand0
  br i1 %cmp9, label %if.end, label %if.then10

if.then10:                                        ; preds = %cond.end
  %call12 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %operand0, %struct.rtx_def* %cond) #4
  br label %if.end

if.end:                                           ; preds = %cond.end, %if.then10
  %call13 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

if.end14:                                         ; preds = %entry
  %call17 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 126, i32 4, %struct.rtx_def* %operand1) #4
  %call18 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call17) #4
  %call19 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call18) #4
  %call20 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.end14, %if.end
  %retval.0 = phi %struct.rtx_def* [ %call13, %if.end ], [ %call20, %if.end14 ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_936(%struct.rtx_def** nocapture %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %call = tail call %struct.rtx_def* @assign_386_stack_local(i32 3, i32 1) #4
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %call1 = tail call %struct.rtx_def* @assign_386_stack_local(i32 3, i32 2) #4
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  store %struct.rtx_def* %call1, %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %call4 = tail call i32 @memory_operand(%struct.rtx_def* %0, i32 0) #4
  %tobool = icmp eq i32 %call4, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %1 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx6 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %2 = load %struct.rtx_def** %arrayidx6, align 8, !tbaa !1
  %3 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %4 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %call.i = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 126, i32 4, %struct.rtx_def* %2) #4
  %call1.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %1, %struct.rtx_def* %call.i) #4
  %call2.i = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %3) #4
  %call3.i = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %4) #4
  %call4.i = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 3, %struct.rtx_def* %call1.i, %struct.rtx_def* %call2.i, %struct.rtx_def* %call3.i) #4
  %call5.i = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call4.i) #4
  %call10 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call5.i) #4
  br label %if.end

if.else:                                          ; preds = %entry
  %call11 = tail call %struct.rtx_def* @assign_386_stack_local(i32 4, i32 0) #4
  %arrayidx12 = getelementptr inbounds %struct.rtx_def** %operands, i64 4
  store %struct.rtx_def* %call11, %struct.rtx_def** %arrayidx12, align 8, !tbaa !1
  %5 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx14 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %6 = load %struct.rtx_def** %arrayidx14, align 8, !tbaa !1
  %7 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %8 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %call.i33 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 126, i32 4, %struct.rtx_def* %6) #4
  %call1.i34 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %5, %struct.rtx_def* %call.i33) #4
  %call2.i35 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %7) #4
  %call3.i36 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %8) #4
  %call4.i37 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call11) #4
  %call5.i38 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 4, %struct.rtx_def* %call1.i34, %struct.rtx_def* %call2.i35, %struct.rtx_def* %call3.i36, %struct.rtx_def* %call4.i37) #4
  %call6.i = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call5.i38) #4
  %call19 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call6.i) #4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %call20 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call20
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_937(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %2 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %arrayidx3 = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  %3 = load %struct.rtx_def** %arrayidx3, align 8, !tbaa !1
  %arrayidx4 = getelementptr inbounds %struct.rtx_def** %operands, i64 4
  %4 = load %struct.rtx_def** %arrayidx4, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 126, i32 4, %struct.rtx_def* %1) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %4, %struct.rtx_def* %call) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %2) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %3) #4
  %call8 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 3, %struct.rtx_def* %call5, %struct.rtx_def* %call6, %struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call8) #4
  %call10 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %4) #4
  %call12 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call11) #4
  %call13 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call12) #4
  %call14 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call14
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_938(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %2 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %arrayidx3 = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  %3 = load %struct.rtx_def** %arrayidx3, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 126, i32 4, %struct.rtx_def* %1) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %2) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %3) #4
  %call7 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 3, %struct.rtx_def* %call4, %struct.rtx_def* %call5, %struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call8) #4
  %call10 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call10
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_fix_truncxfhi2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 126, i32 3, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_fix_trunctfhi2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 126, i32 3, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_fix_truncdfhi2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 126, i32 3, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_fix_truncsfhi2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 126, i32 3, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_943(%struct.rtx_def** nocapture %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %call = tail call %struct.rtx_def* @assign_386_stack_local(i32 3, i32 1) #4
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %call1 = tail call %struct.rtx_def* @assign_386_stack_local(i32 3, i32 2) #4
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  store %struct.rtx_def* %call1, %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %call4 = tail call i32 @memory_operand(%struct.rtx_def* %0, i32 0) #4
  %tobool = icmp eq i32 %call4, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %1 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx6 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %2 = load %struct.rtx_def** %arrayidx6, align 8, !tbaa !1
  %3 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %4 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %call.i = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 126, i32 3, %struct.rtx_def* %2) #4
  %call1.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %1, %struct.rtx_def* %call.i) #4
  %call2.i = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %3) #4
  %call3.i = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %4) #4
  %call4.i = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 3, %struct.rtx_def* %call1.i, %struct.rtx_def* %call2.i, %struct.rtx_def* %call3.i) #4
  %call5.i = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call4.i) #4
  %call10 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call5.i) #4
  br label %if.end

if.else:                                          ; preds = %entry
  %call11 = tail call %struct.rtx_def* @assign_386_stack_local(i32 3, i32 0) #4
  %arrayidx12 = getelementptr inbounds %struct.rtx_def** %operands, i64 4
  store %struct.rtx_def* %call11, %struct.rtx_def** %arrayidx12, align 8, !tbaa !1
  %5 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx14 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %6 = load %struct.rtx_def** %arrayidx14, align 8, !tbaa !1
  %7 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %8 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %call.i33 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 126, i32 3, %struct.rtx_def* %6) #4
  %call1.i34 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %5, %struct.rtx_def* %call.i33) #4
  %call2.i35 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %7) #4
  %call3.i36 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %8) #4
  %call4.i37 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call11) #4
  %call5.i38 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 4, %struct.rtx_def* %call1.i34, %struct.rtx_def* %call2.i35, %struct.rtx_def* %call3.i36, %struct.rtx_def* %call4.i37) #4
  %call6.i = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call5.i38) #4
  %call19 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call6.i) #4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %call20 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call20
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_944(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %2 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %arrayidx3 = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  %3 = load %struct.rtx_def** %arrayidx3, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 126, i32 3, %struct.rtx_def* %1) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %2) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %3) #4
  %call7 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 3, %struct.rtx_def* %call4, %struct.rtx_def* %call5, %struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call8) #4
  %call10 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call10
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_945(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %2 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %arrayidx3 = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  %3 = load %struct.rtx_def** %arrayidx3, align 8, !tbaa !1
  %arrayidx4 = getelementptr inbounds %struct.rtx_def** %operands, i64 4
  %4 = load %struct.rtx_def** %arrayidx4, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 126, i32 3, %struct.rtx_def* %1) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %4, %struct.rtx_def* %call) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %2) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %3) #4
  %call8 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %4) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call8) #4
  %call10 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 4, %struct.rtx_def* %call5, %struct.rtx_def* %call6, %struct.rtx_def* %call7, %struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call10) #4
  %call12 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call11) #4
  %call13 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %4) #4
  %call14 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call13) #4
  %call15 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call14) #4
  %call16 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call16
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_floatsisf2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 125, i32 15, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_floatdisf2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 125, i32 15, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_floatsidf2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 125, i32 16, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_floatdidf2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 125, i32 16, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_950(%struct.rtx_def** nocapture %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %0 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %1 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 0
  %bf.load = load i32* %1, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %call = tail call %struct.rtx_def* @ix86_force_to_memory(i32 %bf.clear, %struct.rtx_def* %0) #4
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %2 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %3 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 0
  %bf.load4 = load i32* %3, align 8
  %bf.lshr5 = lshr i32 %bf.load4, 16
  %bf.clear6 = and i32 %bf.lshr5, 255
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 125, i32 %bf.clear6, %struct.rtx_def* %call) #4
  store %struct.rtx_def* %call8, %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %4 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %call12 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %4, %struct.rtx_def* %call8) #4
  %call13 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call12) #4
  %5 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %6 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 0
  %bf.load15 = load i32* %6, align 8
  %bf.lshr16 = lshr i32 %bf.load15, 16
  %bf.clear17 = and i32 %bf.lshr16, 255
  tail call void @ix86_free_from_memory(i32 %bf.clear17) #4
  %call18 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call18
}

declare %struct.rtx_def* @ix86_force_to_memory(i32, %struct.rtx_def*) #1

declare void @ix86_free_from_memory(i32) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_adddi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %operands = alloca [3 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 2
  store %struct.rtx_def* %operand2, %struct.rtx_def** %arrayidx2, align 16, !tbaa !1
  call void @ix86_expand_binary_operator(i32 75, i32 5, %struct.rtx_def** %arrayidx) #4
  %call = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

declare void @ix86_expand_binary_operator(i32, i32, %struct.rtx_def**) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_952(%struct.rtx_def** %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %add.ptr2 = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  tail call void @split_di(%struct.rtx_def** %operands, i32 1, %struct.rtx_def** %operands, %struct.rtx_def** %add.ptr2) #4
  %add.ptr3 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %add.ptr5 = getelementptr inbounds %struct.rtx_def** %operands, i64 4
  tail call void @split_di(%struct.rtx_def** %add.ptr3, i32 1, %struct.rtx_def** %add.ptr3, %struct.rtx_def** %add.ptr5) #4
  %add.ptr6 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %add.ptr8 = getelementptr inbounds %struct.rtx_def** %operands, i64 5
  tail call void @split_di(%struct.rtx_def** %add.ptr6, i32 1, %struct.rtx_def** %add.ptr6, %struct.rtx_def** %add.ptr8) #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %1 = load %struct.rtx_def** %add.ptr3, align 8, !tbaa !1
  %2 = load %struct.rtx_def** %add.ptr6, align 8, !tbaa !1
  %3 = load %struct.rtx_def** %add.ptr2, align 8, !tbaa !1
  %4 = load %struct.rtx_def** %add.ptr5, align 8, !tbaa !1
  %5 = load %struct.rtx_def** %add.ptr8, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call14 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %1, %struct.rtx_def* %2) #4
  %call15 = tail call %struct.rtx_def* @gen_rtx_fmt_Ei(i32 42, i32 52, %struct.rtvec_def* %call14, i32 12) #4
  %call16 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call15) #4
  %call17 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %1) #4
  %call18 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %2) #4
  %call19 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %call17, %struct.rtx_def* %call18) #4
  %call20 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call19) #4
  %call21 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call16, %struct.rtx_def* %call20) #4
  %call22 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call21) #4
  %call23 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call22) #4
  %call24 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %6 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call25 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 111, i32 4, %struct.rtx_def* %call24, %struct.rtx_def* %6) #4
  %call26 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %call25, %struct.rtx_def* %4) #4
  %call27 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %call26, %struct.rtx_def* %5) #4
  %call28 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %3, %struct.rtx_def* %call27) #4
  %call29 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call30 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call29) #4
  %call31 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call28, %struct.rtx_def* %call30) #4
  %call32 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call31) #4
  %call33 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call32) #4
  %call34 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call34
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_addsi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %operands = alloca [3 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 2
  store %struct.rtx_def* %operand2, %struct.rtx_def** %arrayidx2, align 16, !tbaa !1
  call void @ix86_expand_binary_operator(i32 75, i32 4, %struct.rtx_def** %arrayidx) #4
  %call = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_954(%struct.rtx_def** nocapture %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_lowpart(i32 4, %struct.rtx_def* %0) #4
  store %struct.rtx_def* %call, %struct.rtx_def** %operands, align 8, !tbaa !1
  %1 = load i32* @target_flags, align 4, !tbaa !5
  %and = lshr i32 %1, 25
  %2 = and i32 %and, 1
  %3 = or i32 %2, 4
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %4 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %call3 = tail call %struct.rtx_def* @gen_lowpart(i32 %3, %struct.rtx_def* %4) #4
  store %struct.rtx_def* %call3, %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %5 = load i32* @target_flags, align 4, !tbaa !5
  %and5 = lshr i32 %5, 25
  %6 = and i32 %and5, 1
  %7 = or i32 %6, 4
  %arrayidx8 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %8 = load %struct.rtx_def** %arrayidx8, align 8, !tbaa !1
  %call9 = tail call %struct.rtx_def* @gen_lowpart(i32 %7, %struct.rtx_def* %8) #4
  store %struct.rtx_def* %call9, %struct.rtx_def** %arrayidx8, align 8, !tbaa !1
  %9 = load i32* @target_flags, align 4, !tbaa !5
  %and11 = lshr i32 %9, 25
  %10 = and i32 %and11, 1
  %11 = or i32 %10, 4
  %arrayidx14 = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  %12 = load %struct.rtx_def** %arrayidx14, align 8, !tbaa !1
  %call15 = tail call %struct.rtx_def* @gen_lowpart(i32 %11, %struct.rtx_def* %12) #4
  store %struct.rtx_def* %call15, %struct.rtx_def** %arrayidx14, align 8, !tbaa !1
  %13 = load i32* @target_flags, align 4, !tbaa !5
  %and17 = lshr i32 %13, 25
  %14 = and i32 %and17, 1
  %15 = or i32 %14, 4
  %16 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %17 = load %struct.rtx_def** %arrayidx8, align 8, !tbaa !1
  %call25 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %15, %struct.rtx_def* %16, %struct.rtx_def* %17) #4
  %18 = load %struct.rtx_def** %arrayidx14, align 8, !tbaa !1
  %call27 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %15, %struct.rtx_def* %call25, %struct.rtx_def* %18) #4
  %19 = load i32* @target_flags, align 4, !tbaa !5
  %and28 = and i32 %19, 33554432
  %tobool29 = icmp eq i32 %and28, 0
  br i1 %tobool29, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %call31 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 4, %struct.rtx_def* %call27, i32 0) #4
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %pat.0 = phi %struct.rtx_def* [ %call31, %if.then ], [ %call27, %entry ]
  %20 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %call33 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %20, %struct.rtx_def* %pat.0) #4
  %call34 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call33) #4
  %call35 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call35
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_955(%struct.rtx_def** nocapture %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load i32* @target_flags, align 4, !tbaa !5
  %and = lshr i32 %0, 25
  %1 = and i32 %and, 1
  %2 = or i32 %1, 4
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %3 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_lowpart(i32 %2, %struct.rtx_def* %3) #4
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %4 = load i32* @target_flags, align 4, !tbaa !5
  %and2 = lshr i32 %4, 25
  %5 = and i32 %and2, 1
  %6 = or i32 %5, 4
  %arrayidx5 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %7 = load %struct.rtx_def** %arrayidx5, align 8, !tbaa !1
  %call6 = tail call %struct.rtx_def* @gen_lowpart(i32 %6, %struct.rtx_def* %7) #4
  store %struct.rtx_def* %call6, %struct.rtx_def** %arrayidx5, align 8, !tbaa !1
  %8 = load i32* @target_flags, align 4, !tbaa !5
  %and8 = lshr i32 %8, 25
  %9 = and i32 %and8, 1
  %10 = or i32 %9, 4
  %arrayidx11 = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  %11 = load %struct.rtx_def** %arrayidx11, align 8, !tbaa !1
  %call12 = tail call %struct.rtx_def* @gen_lowpart(i32 %10, %struct.rtx_def* %11) #4
  store %struct.rtx_def* %call12, %struct.rtx_def** %arrayidx11, align 8, !tbaa !1
  %12 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %13 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %14 = load %struct.rtx_def** %arrayidx5, align 8, !tbaa !1
  %call18 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 5, %struct.rtx_def* %13, %struct.rtx_def* %14) #4
  %call19 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 5, %struct.rtx_def* %call18, %struct.rtx_def* %call12) #4
  %call20 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 4, %struct.rtx_def* %call19, i32 0) #4
  %call21 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 121, i32 5, %struct.rtx_def* %call20) #4
  %call22 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %12, %struct.rtx_def* %call21) #4
  %call23 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call22) #4
  %call24 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call24
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_956(%struct.rtx_def** nocapture %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_lowpart(i32 4, %struct.rtx_def* %0) #4
  store %struct.rtx_def* %call, %struct.rtx_def** %operands, align 8, !tbaa !1
  %1 = load i32* @target_flags, align 4, !tbaa !5
  %and = lshr i32 %1, 25
  %2 = and i32 %and, 1
  %3 = or i32 %2, 4
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %4 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %call3 = tail call %struct.rtx_def* @gen_lowpart(i32 %3, %struct.rtx_def* %4) #4
  store %struct.rtx_def* %call3, %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %5 = load i32* @target_flags, align 4, !tbaa !5
  %and5 = lshr i32 %5, 25
  %6 = and i32 %and5, 1
  %7 = or i32 %6, 4
  %arrayidx8 = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  %8 = load %struct.rtx_def** %arrayidx8, align 8, !tbaa !1
  %call9 = tail call %struct.rtx_def* @gen_lowpart(i32 %7, %struct.rtx_def* %8) #4
  store %struct.rtx_def* %call9, %struct.rtx_def** %arrayidx8, align 8, !tbaa !1
  %9 = load i32* @target_flags, align 4, !tbaa !5
  %and11 = lshr i32 %9, 25
  %10 = and i32 %and11, 1
  %11 = or i32 %10, 4
  %12 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %arrayidx18 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %13 = load %struct.rtx_def** %arrayidx18, align 8, !tbaa !1
  %call19 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 78, i32 %11, %struct.rtx_def* %12, %struct.rtx_def* %13) #4
  %14 = load %struct.rtx_def** %arrayidx8, align 8, !tbaa !1
  %call21 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %11, %struct.rtx_def* %call19, %struct.rtx_def* %14) #4
  %15 = load i32* @target_flags, align 4, !tbaa !5
  %and22 = and i32 %15, 33554432
  %tobool23 = icmp eq i32 %and22, 0
  br i1 %tobool23, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %call25 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 4, %struct.rtx_def* %call21, i32 0) #4
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %pat.0 = phi %struct.rtx_def* [ %call25, %if.then ], [ %call21, %entry ]
  %16 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %call27 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %16, %struct.rtx_def* %pat.0) #4
  %call28 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call27) #4
  %call29 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call29
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_957(%struct.rtx_def** nocapture %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load i32* @target_flags, align 4, !tbaa !5
  %and = lshr i32 %0, 25
  %1 = and i32 %and, 1
  %2 = or i32 %1, 4
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %3 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_lowpart(i32 %2, %struct.rtx_def* %3) #4
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %4 = load i32* @target_flags, align 4, !tbaa !5
  %and2 = lshr i32 %4, 25
  %5 = and i32 %and2, 1
  %6 = or i32 %5, 4
  %arrayidx5 = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  %7 = load %struct.rtx_def** %arrayidx5, align 8, !tbaa !1
  %call6 = tail call %struct.rtx_def* @gen_lowpart(i32 %6, %struct.rtx_def* %7) #4
  store %struct.rtx_def* %call6, %struct.rtx_def** %arrayidx5, align 8, !tbaa !1
  %8 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %9 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %arrayidx10 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %10 = load %struct.rtx_def** %arrayidx10, align 8, !tbaa !1
  %call12 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 78, i32 5, %struct.rtx_def* %9, %struct.rtx_def* %10) #4
  %call13 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 5, %struct.rtx_def* %call12, %struct.rtx_def* %call6) #4
  %call14 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 4, %struct.rtx_def* %call13, i32 0) #4
  %call15 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 121, i32 5, %struct.rtx_def* %call14) #4
  %call16 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %8, %struct.rtx_def* %call15) #4
  %call17 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call16) #4
  %call18 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call18
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_958(%struct.rtx_def** nocapture %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_lowpart(i32 4, %struct.rtx_def* %0) #4
  store %struct.rtx_def* %call, %struct.rtx_def** %operands, align 8, !tbaa !1
  %1 = load i32* @target_flags, align 4, !tbaa !5
  %and = lshr i32 %1, 25
  %2 = and i32 %and, 1
  %3 = or i32 %2, 4
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %4 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %call3 = tail call %struct.rtx_def* @gen_lowpart(i32 %3, %struct.rtx_def* %4) #4
  store %struct.rtx_def* %call3, %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %5 = load i32* @target_flags, align 4, !tbaa !5
  %and5 = lshr i32 %5, 25
  %6 = and i32 %and5, 1
  %7 = or i32 %6, 4
  %arrayidx8 = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  %8 = load %struct.rtx_def** %arrayidx8, align 8, !tbaa !1
  %call9 = tail call %struct.rtx_def* @gen_lowpart(i32 %7, %struct.rtx_def* %8) #4
  store %struct.rtx_def* %call9, %struct.rtx_def** %arrayidx8, align 8, !tbaa !1
  %9 = load i32* @target_flags, align 4, !tbaa !5
  %and11 = lshr i32 %9, 25
  %10 = and i32 %and11, 1
  %11 = or i32 %10, 4
  %arrayidx14 = getelementptr inbounds %struct.rtx_def** %operands, i64 4
  %12 = load %struct.rtx_def** %arrayidx14, align 8, !tbaa !1
  %call15 = tail call %struct.rtx_def* @gen_lowpart(i32 %11, %struct.rtx_def* %12) #4
  store %struct.rtx_def* %call15, %struct.rtx_def** %arrayidx14, align 8, !tbaa !1
  %13 = load i32* @target_flags, align 4, !tbaa !5
  %and17 = lshr i32 %13, 25
  %14 = and i32 %and17, 1
  %15 = or i32 %14, 4
  %16 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %arrayidx27 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %17 = load %struct.rtx_def** %arrayidx27, align 8, !tbaa !1
  %call28 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 78, i32 %15, %struct.rtx_def* %16, %struct.rtx_def* %17) #4
  %18 = load %struct.rtx_def** %arrayidx8, align 8, !tbaa !1
  %call30 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %15, %struct.rtx_def* %call28, %struct.rtx_def* %18) #4
  %19 = load %struct.rtx_def** %arrayidx14, align 8, !tbaa !1
  %call32 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %15, %struct.rtx_def* %call30, %struct.rtx_def* %19) #4
  %20 = load i32* @target_flags, align 4, !tbaa !5
  %and33 = and i32 %20, 33554432
  %tobool34 = icmp eq i32 %and33, 0
  br i1 %tobool34, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %call36 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 4, %struct.rtx_def* %call32, i32 0) #4
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %pat.0 = phi %struct.rtx_def* [ %call36, %if.then ], [ %call32, %entry ]
  %21 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %call38 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %21, %struct.rtx_def* %pat.0) #4
  %call39 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call38) #4
  %call40 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call40
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_959(%struct.rtx_def** nocapture %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load i32* @target_flags, align 4, !tbaa !5
  %and = lshr i32 %0, 25
  %1 = and i32 %and, 1
  %2 = or i32 %1, 4
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %3 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_lowpart(i32 %2, %struct.rtx_def* %3) #4
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %4 = load i32* @target_flags, align 4, !tbaa !5
  %and2 = lshr i32 %4, 25
  %5 = and i32 %and2, 1
  %6 = or i32 %5, 4
  %arrayidx5 = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  %7 = load %struct.rtx_def** %arrayidx5, align 8, !tbaa !1
  %call6 = tail call %struct.rtx_def* @gen_lowpart(i32 %6, %struct.rtx_def* %7) #4
  store %struct.rtx_def* %call6, %struct.rtx_def** %arrayidx5, align 8, !tbaa !1
  %8 = load i32* @target_flags, align 4, !tbaa !5
  %and8 = lshr i32 %8, 25
  %9 = and i32 %and8, 1
  %10 = or i32 %9, 4
  %arrayidx11 = getelementptr inbounds %struct.rtx_def** %operands, i64 4
  %11 = load %struct.rtx_def** %arrayidx11, align 8, !tbaa !1
  %call12 = tail call %struct.rtx_def* @gen_lowpart(i32 %10, %struct.rtx_def* %11) #4
  store %struct.rtx_def* %call12, %struct.rtx_def** %arrayidx11, align 8, !tbaa !1
  %12 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %13 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %arrayidx16 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %14 = load %struct.rtx_def** %arrayidx16, align 8, !tbaa !1
  %15 = load %struct.rtx_def** %arrayidx5, align 8, !tbaa !1
  %call19 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 78, i32 5, %struct.rtx_def* %13, %struct.rtx_def* %14) #4
  %call20 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 5, %struct.rtx_def* %call19, %struct.rtx_def* %15) #4
  %call21 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 5, %struct.rtx_def* %call20, %struct.rtx_def* %call12) #4
  %call22 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 4, %struct.rtx_def* %call21, i32 0) #4
  %call23 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 121, i32 5, %struct.rtx_def* %call22) #4
  %call24 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %12, %struct.rtx_def* %call23) #4
  %call25 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call24) #4
  %call26 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call26
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_960(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %2 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 5, %struct.rtx_def* %1, %struct.rtx_def* %2) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call) #4
  %call4 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call5
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_961(%struct.rtx_def** nocapture %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %1 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 0
  %bf.load = load i32* %1, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %2 = load i32* @target_flags, align 4, !tbaa !5
  %and = lshr i32 %2, 25
  %3 = and i32 %and, 1
  %4 = or i32 %3, 4
  %cmp = icmp eq i32 %bf.clear, %4
  %arrayidx18.pre = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  br i1 %cmp, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  %arrayidx19.pre = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  br label %if.end

if.then:                                          ; preds = %entry
  %5 = load %struct.rtx_def** %arrayidx18.pre, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_lowpart(i32 %4, %struct.rtx_def* %5) #4
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx18.pre, align 8, !tbaa !1
  %6 = load i32* @target_flags, align 4, !tbaa !5
  %and6 = lshr i32 %6, 25
  %7 = and i32 %and6, 1
  %8 = or i32 %7, 4
  %arrayidx9 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %9 = load %struct.rtx_def** %arrayidx9, align 8, !tbaa !1
  %call10 = tail call %struct.rtx_def* @gen_lowpart(i32 %8, %struct.rtx_def* %9) #4
  store %struct.rtx_def* %call10, %struct.rtx_def** %arrayidx9, align 8, !tbaa !1
  %.pre = load %struct.rtx_def** %operands, align 8, !tbaa !1
  br label %if.end

if.end:                                           ; preds = %entry.if.end_crit_edge, %if.then
  %arrayidx19.pre-phi = phi %struct.rtx_def** [ %arrayidx19.pre, %entry.if.end_crit_edge ], [ %arrayidx9, %if.then ]
  %10 = phi %struct.rtx_def* [ %0, %entry.if.end_crit_edge ], [ %.pre, %if.then ]
  %call13 = tail call %struct.rtx_def* @gen_lowpart(i32 4, %struct.rtx_def* %10) #4
  store %struct.rtx_def* %call13, %struct.rtx_def** %operands, align 8, !tbaa !1
  %11 = load i32* @target_flags, align 4, !tbaa !5
  %and15 = lshr i32 %11, 25
  %12 = and i32 %and15, 1
  %13 = or i32 %12, 4
  %14 = load %struct.rtx_def** %arrayidx18.pre, align 8, !tbaa !1
  %15 = load %struct.rtx_def** %arrayidx19.pre-phi, align 8, !tbaa !1
  %call20 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %13, %struct.rtx_def* %14, %struct.rtx_def* %15) #4
  %16 = load i32* @target_flags, align 4, !tbaa !5
  %and21 = and i32 %16, 33554432
  %tobool22 = icmp eq i32 %and21, 0
  br i1 %tobool22, label %if.end27, label %if.then25

if.then25:                                        ; preds = %if.end
  %call26 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 4, %struct.rtx_def* %call20, i32 0) #4
  br label %if.end27

if.end27:                                         ; preds = %if.end, %if.then25
  %pat.0 = phi %struct.rtx_def* [ %call26, %if.then25 ], [ %call20, %if.end ]
  %17 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %call29 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %17, %struct.rtx_def* %pat.0) #4
  %call30 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call29) #4
  %call31 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call31
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_962(%struct.rtx_def** nocapture %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load i32* @target_flags, align 4, !tbaa !5
  %and = lshr i32 %0, 25
  %1 = and i32 %and, 1
  %2 = or i32 %1, 4
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %3 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_lowpart(i32 %2, %struct.rtx_def* %3) #4
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %4 = load i32* @target_flags, align 4, !tbaa !5
  %and2 = lshr i32 %4, 25
  %5 = and i32 %and2, 1
  %6 = or i32 %5, 4
  %arrayidx5 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %7 = load %struct.rtx_def** %arrayidx5, align 8, !tbaa !1
  %call6 = tail call %struct.rtx_def* @gen_lowpart(i32 %6, %struct.rtx_def* %7) #4
  store %struct.rtx_def* %call6, %struct.rtx_def** %arrayidx5, align 8, !tbaa !1
  %8 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %9 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 5, %struct.rtx_def* %9, %struct.rtx_def* %call6) #4
  %call12 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 4, %struct.rtx_def* %call11, i32 0) #4
  %call13 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 121, i32 5, %struct.rtx_def* %call12) #4
  %call14 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %8, %struct.rtx_def* %call13) #4
  %call15 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call14) #4
  %call16 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call16
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_addhi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %operands = alloca [3 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 2
  store %struct.rtx_def* %operand2, %struct.rtx_def** %arrayidx2, align 16, !tbaa !1
  call void @ix86_expand_binary_operator(i32 75, i32 3, %struct.rtx_def** %arrayidx) #4
  %call = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_addqi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %operands = alloca [3 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 2
  store %struct.rtx_def* %operand2, %struct.rtx_def** %arrayidx2, align 16, !tbaa !1
  call void @ix86_expand_binary_operator(i32 75, i32 2, %struct.rtx_def** %arrayidx) #4
  %call = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_addxf3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 17, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_addtf3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 18, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_adddf3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 16, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_addsf3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 15, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_subdi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %operands = alloca [3 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 2
  store %struct.rtx_def* %operand2, %struct.rtx_def** %arrayidx2, align 16, !tbaa !1
  call void @ix86_expand_binary_operator(i32 76, i32 5, %struct.rtx_def** %arrayidx) #4
  %call = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_970(%struct.rtx_def** %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %add.ptr2 = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  tail call void @split_di(%struct.rtx_def** %operands, i32 1, %struct.rtx_def** %operands, %struct.rtx_def** %add.ptr2) #4
  %add.ptr3 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %add.ptr5 = getelementptr inbounds %struct.rtx_def** %operands, i64 4
  tail call void @split_di(%struct.rtx_def** %add.ptr3, i32 1, %struct.rtx_def** %add.ptr3, %struct.rtx_def** %add.ptr5) #4
  %add.ptr6 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %add.ptr8 = getelementptr inbounds %struct.rtx_def** %operands, i64 5
  tail call void @split_di(%struct.rtx_def** %add.ptr6, i32 1, %struct.rtx_def** %add.ptr6, %struct.rtx_def** %add.ptr8) #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %1 = load %struct.rtx_def** %add.ptr3, align 8, !tbaa !1
  %2 = load %struct.rtx_def** %add.ptr6, align 8, !tbaa !1
  %3 = load %struct.rtx_def** %add.ptr2, align 8, !tbaa !1
  %4 = load %struct.rtx_def** %add.ptr5, align 8, !tbaa !1
  %5 = load %struct.rtx_def** %add.ptr8, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call14 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 74, i32 52, %struct.rtx_def* %1, %struct.rtx_def* %2) #4
  %call15 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call14) #4
  %call16 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %1) #4
  %call17 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %2) #4
  %call18 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 76, i32 4, %struct.rtx_def* %call16, %struct.rtx_def* %call17) #4
  %call19 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call18) #4
  %call20 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call15, %struct.rtx_def* %call19) #4
  %call21 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call20) #4
  %call22 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call21) #4
  %call23 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %6 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call24 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 111, i32 4, %struct.rtx_def* %call23, %struct.rtx_def* %6) #4
  %call25 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %call24, %struct.rtx_def* %5) #4
  %call26 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 76, i32 4, %struct.rtx_def* %4, %struct.rtx_def* %call25) #4
  %call27 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %3, %struct.rtx_def* %call26) #4
  %call28 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call29 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call28) #4
  %call30 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call27, %struct.rtx_def* %call29) #4
  %call31 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call30) #4
  %call32 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call31) #4
  %call33 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call33
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_subsi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %operands = alloca [3 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 2
  store %struct.rtx_def* %operand2, %struct.rtx_def** %arrayidx2, align 16, !tbaa !1
  call void @ix86_expand_binary_operator(i32 76, i32 4, %struct.rtx_def** %arrayidx) #4
  %call = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_subhi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %operands = alloca [3 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 2
  store %struct.rtx_def* %operand2, %struct.rtx_def** %arrayidx2, align 16, !tbaa !1
  call void @ix86_expand_binary_operator(i32 76, i32 3, %struct.rtx_def** %arrayidx) #4
  %call = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_subqi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %operands = alloca [3 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 2
  store %struct.rtx_def* %operand2, %struct.rtx_def** %arrayidx2, align 16, !tbaa !1
  call void @ix86_expand_binary_operator(i32 76, i32 2, %struct.rtx_def** %arrayidx) #4
  %call = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_subxf3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 76, i32 17, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_subtf3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 76, i32 18, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_subdf3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 76, i32 16, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_subsf3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 76, i32 15, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_muldi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 78, i32 5, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call1, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call4) #4
  ret %struct.rtx_def* %call5
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_mulsi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 78, i32 4, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call1, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call4) #4
  ret %struct.rtx_def* %call5
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_mulhi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 78, i32 3, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call1, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call4) #4
  ret %struct.rtx_def* %call5
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_mulqi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 78, i32 2, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call1, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call4) #4
  ret %struct.rtx_def* %call5
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_umulqihi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 121, i32 3, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 121, i32 3, %struct.rtx_def* %operand2) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 78, i32 3, %struct.rtx_def* %call, %struct.rtx_def* %call1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call3, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call6) #4
  ret %struct.rtx_def* %call7
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_mulqihi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 120, i32 3, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 120, i32 3, %struct.rtx_def* %operand2) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 78, i32 3, %struct.rtx_def* %call, %struct.rtx_def* %call1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call3, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call6) #4
  ret %struct.rtx_def* %call7
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_umulditi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 121, i32 6, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 121, i32 6, %struct.rtx_def* %operand2) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 78, i32 6, %struct.rtx_def* %call, %struct.rtx_def* %call1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call3, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call6) #4
  ret %struct.rtx_def* %call7
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_umulsidi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 121, i32 5, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 121, i32 5, %struct.rtx_def* %operand2) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 78, i32 5, %struct.rtx_def* %call, %struct.rtx_def* %call1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call3, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call6) #4
  ret %struct.rtx_def* %call7
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_mulditi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 120, i32 6, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 120, i32 6, %struct.rtx_def* %operand2) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 78, i32 6, %struct.rtx_def* %call, %struct.rtx_def* %call1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call3, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call6) #4
  ret %struct.rtx_def* %call7
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_mulsidi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 120, i32 5, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 120, i32 5, %struct.rtx_def* %operand2) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 78, i32 5, %struct.rtx_def* %call, %struct.rtx_def* %call1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call3, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call6) #4
  ret %struct.rtx_def* %call7
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_umuldi3_highpart(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 121, i32 6, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 121, i32 6, %struct.rtx_def* %operand2) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 78, i32 6, %struct.rtx_def* %call, %struct.rtx_def* %call1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 64) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 90, i32 6, %struct.rtx_def* %call2, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 122, i32 5, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_0(i32 62, i32 5) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 3, %struct.rtx_def* %call6, %struct.rtx_def* %call8, %struct.rtx_def* %call10) #4
  %call12 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call11) #4
  ret %struct.rtx_def* %call12
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_umulsi3_highpart(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 121, i32 5, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 121, i32 5, %struct.rtx_def* %operand2) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 78, i32 5, %struct.rtx_def* %call, %struct.rtx_def* %call1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 32) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 90, i32 5, %struct.rtx_def* %call2, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 122, i32 4, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_0(i32 62, i32 4) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 3, %struct.rtx_def* %call6, %struct.rtx_def* %call8, %struct.rtx_def* %call10) #4
  %call12 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call11) #4
  ret %struct.rtx_def* %call12
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_smuldi3_highpart(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 120, i32 6, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 120, i32 6, %struct.rtx_def* %operand2) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 78, i32 6, %struct.rtx_def* %call, %struct.rtx_def* %call1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 64) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 90, i32 6, %struct.rtx_def* %call2, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 122, i32 5, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_0(i32 62, i32 5) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 3, %struct.rtx_def* %call6, %struct.rtx_def* %call8, %struct.rtx_def* %call10) #4
  %call12 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call11) #4
  ret %struct.rtx_def* %call12
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_smulsi3_highpart(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 120, i32 5, %struct.rtx_def* %operand1) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 120, i32 5, %struct.rtx_def* %operand2) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 78, i32 5, %struct.rtx_def* %call, %struct.rtx_def* %call1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 32) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 90, i32 5, %struct.rtx_def* %call2, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 122, i32 4, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_0(i32 62, i32 4) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 3, %struct.rtx_def* %call6, %struct.rtx_def* %call8, %struct.rtx_def* %call10) #4
  %call12 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call11) #4
  ret %struct.rtx_def* %call12
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_mulxf3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 78, i32 17, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_multf3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 78, i32 18, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_muldf3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 78, i32 16, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_mulsf3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 78, i32 15, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_divxf3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 79, i32 17, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_divtf3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 79, i32 18, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_divdf3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 79, i32 16, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_divsf3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 79, i32 15, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_divmoddi4(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* %operand3) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 79, i32 5, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 80, i32 5, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand3, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 3, %struct.rtx_def* %call1, %struct.rtx_def* %call3, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call6) #4
  ret %struct.rtx_def* %call7
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1001(%struct.rtx_def** nocapture %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load i32* @x86_use_cltd, align 4, !tbaa !5
  %1 = load i32* @ix86_cpu, align 4, !tbaa !9
  %shl = shl i32 1, %1
  %and = and i32 %shl, %0
  %2 = load i32* @optimize_size, align 4
  %3 = or i32 %and, %2
  %4 = icmp eq i32 %3, 0
  %arrayidx13 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %5 = load %struct.rtx_def** %arrayidx13, align 8, !tbaa !1
  %call14 = tail call i32 @true_regnum(%struct.rtx_def* %5) #4
  %tobool15 = icmp ne i32 %call14, 0
  br i1 %4, label %if.then, label %if.else12

if.then:                                          ; preds = %entry
  br i1 %tobool15, label %if.then3, label %if.else

if.then3:                                         ; preds = %if.then
  %6 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %7 = load %struct.rtx_def** %arrayidx13, align 8, !tbaa !1
  %call6 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %6, %struct.rtx_def* %7) #4
  %arrayidx10.pre = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  br label %if.end

if.else:                                          ; preds = %if.then
  %arrayidx7 = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  %8 = load %struct.rtx_def** %arrayidx7, align 8, !tbaa !1
  %9 = load %struct.rtx_def** %arrayidx13, align 8, !tbaa !1
  %call9 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %8, %struct.rtx_def* %9) #4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then3
  %arrayidx10.pre-phi = phi %struct.rtx_def** [ %arrayidx7, %if.else ], [ %arrayidx10.pre, %if.then3 ]
  %10 = load %struct.rtx_def** %arrayidx10.pre-phi, align 8, !tbaa !1
  %arrayidx11 = getelementptr inbounds %struct.rtx_def** %operands, i64 4
  store %struct.rtx_def* %10, %struct.rtx_def** %arrayidx11, align 8, !tbaa !1
  br label %if.end20

if.else12:                                        ; preds = %entry
  br i1 %tobool15, label %if.then16, label %if.end17

if.then16:                                        ; preds = %if.else12
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str, i64 0, i64 0), i32 9237, i8* getelementptr inbounds ([15 x i8]* @__FUNCTION__.gen_split_1001, i64 0, i64 0)) #5
  unreachable

if.end17:                                         ; preds = %if.else12
  %11 = load %struct.rtx_def** %arrayidx13, align 8, !tbaa !1
  %arrayidx19 = getelementptr inbounds %struct.rtx_def** %operands, i64 4
  store %struct.rtx_def* %11, %struct.rtx_def** %arrayidx19, align 8, !tbaa !1
  %arrayidx24.phi.trans.insert = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  %.pre = load %struct.rtx_def** %arrayidx24.phi.trans.insert, align 8, !tbaa !1
  br label %if.end20

if.end20:                                         ; preds = %if.end17, %if.end
  %12 = phi %struct.rtx_def* [ %11, %if.end17 ], [ %10, %if.end ]
  %13 = phi %struct.rtx_def* [ %.pre, %if.end17 ], [ %10, %if.end ]
  %14 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx23 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %15 = load %struct.rtx_def** %arrayidx23, align 8, !tbaa !1
  %call26 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 63) #4
  %call27 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 89, i32 5, %struct.rtx_def* %12, %struct.rtx_def* %call26) #4
  %call28 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %13, %struct.rtx_def* %call27) #4
  %call29 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call30 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call29) #4
  %call31 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call28, %struct.rtx_def* %call30) #4
  %call32 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call31) #4
  %call33 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call32) #4
  %call34 = tail call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 0) #4
  %call35 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 79, i32 5, %struct.rtx_def* %call34, %struct.rtx_def* %15) #4
  %call36 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %14, %struct.rtx_def* %call35) #4
  %call37 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %13) #4
  %call38 = tail call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 0) #4
  %call39 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %15) #4
  %call40 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 80, i32 5, %struct.rtx_def* %call38, %struct.rtx_def* %call39) #4
  %call41 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call37, %struct.rtx_def* %call40) #4
  %call42 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %13) #4
  %call43 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %call42) #4
  %call44 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call45 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call44) #4
  %call46 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 4, %struct.rtx_def* %call36, %struct.rtx_def* %call41, %struct.rtx_def* %call43, %struct.rtx_def* %call45) #4
  %call47 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call46) #4
  %call48 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call47) #4
  %call49 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call49
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_divmodsi4(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* %operand3) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 79, i32 4, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 80, i32 4, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand3, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 3, %struct.rtx_def* %call1, %struct.rtx_def* %call3, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call6) #4
  ret %struct.rtx_def* %call7
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1003(%struct.rtx_def** nocapture %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load i32* @x86_use_cltd, align 4, !tbaa !5
  %1 = load i32* @ix86_cpu, align 4, !tbaa !9
  %shl = shl i32 1, %1
  %and = and i32 %shl, %0
  %2 = load i32* @optimize_size, align 4
  %3 = or i32 %and, %2
  %4 = icmp eq i32 %3, 0
  %arrayidx13 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %5 = load %struct.rtx_def** %arrayidx13, align 8, !tbaa !1
  %call14 = tail call i32 @true_regnum(%struct.rtx_def* %5) #4
  %tobool15 = icmp ne i32 %call14, 0
  br i1 %4, label %if.then, label %if.else12

if.then:                                          ; preds = %entry
  br i1 %tobool15, label %if.then3, label %if.else

if.then3:                                         ; preds = %if.then
  %6 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %7 = load %struct.rtx_def** %arrayidx13, align 8, !tbaa !1
  %call6 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %6, %struct.rtx_def* %7) #4
  %arrayidx10.pre = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  br label %if.end

if.else:                                          ; preds = %if.then
  %arrayidx7 = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  %8 = load %struct.rtx_def** %arrayidx7, align 8, !tbaa !1
  %9 = load %struct.rtx_def** %arrayidx13, align 8, !tbaa !1
  %call9 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %8, %struct.rtx_def* %9) #4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then3
  %arrayidx10.pre-phi = phi %struct.rtx_def** [ %arrayidx7, %if.else ], [ %arrayidx10.pre, %if.then3 ]
  %10 = load %struct.rtx_def** %arrayidx10.pre-phi, align 8, !tbaa !1
  %arrayidx11 = getelementptr inbounds %struct.rtx_def** %operands, i64 4
  store %struct.rtx_def* %10, %struct.rtx_def** %arrayidx11, align 8, !tbaa !1
  br label %if.end20

if.else12:                                        ; preds = %entry
  br i1 %tobool15, label %if.then16, label %if.end17

if.then16:                                        ; preds = %if.else12
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str, i64 0, i64 0), i32 9329, i8* getelementptr inbounds ([15 x i8]* @__FUNCTION__.gen_split_1003, i64 0, i64 0)) #5
  unreachable

if.end17:                                         ; preds = %if.else12
  %11 = load %struct.rtx_def** %arrayidx13, align 8, !tbaa !1
  %arrayidx19 = getelementptr inbounds %struct.rtx_def** %operands, i64 4
  store %struct.rtx_def* %11, %struct.rtx_def** %arrayidx19, align 8, !tbaa !1
  %arrayidx24.phi.trans.insert = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  %.pre = load %struct.rtx_def** %arrayidx24.phi.trans.insert, align 8, !tbaa !1
  br label %if.end20

if.end20:                                         ; preds = %if.end17, %if.end
  %12 = phi %struct.rtx_def* [ %11, %if.end17 ], [ %10, %if.end ]
  %13 = phi %struct.rtx_def* [ %.pre, %if.end17 ], [ %10, %if.end ]
  %14 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx23 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %15 = load %struct.rtx_def** %arrayidx23, align 8, !tbaa !1
  %call26 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 31) #4
  %call27 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 89, i32 4, %struct.rtx_def* %12, %struct.rtx_def* %call26) #4
  %call28 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %13, %struct.rtx_def* %call27) #4
  %call29 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call30 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call29) #4
  %call31 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call28, %struct.rtx_def* %call30) #4
  %call32 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call31) #4
  %call33 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call32) #4
  %call34 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 0) #4
  %call35 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 79, i32 4, %struct.rtx_def* %call34, %struct.rtx_def* %15) #4
  %call36 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %14, %struct.rtx_def* %call35) #4
  %call37 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %13) #4
  %call38 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 0) #4
  %call39 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %15) #4
  %call40 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 80, i32 4, %struct.rtx_def* %call38, %struct.rtx_def* %call39) #4
  %call41 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call37, %struct.rtx_def* %call40) #4
  %call42 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %13) #4
  %call43 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %call42) #4
  %call44 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call45 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call44) #4
  %call46 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 4, %struct.rtx_def* %call36, %struct.rtx_def* %call41, %struct.rtx_def* %call43, %struct.rtx_def* %call45) #4
  %call47 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call46) #4
  %call48 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call47) #4
  %call49 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call49
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1004(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %2 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %arrayidx3 = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  %3 = load %struct.rtx_def** %arrayidx3, align 8, !tbaa !1
  %4 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %3, %struct.rtx_def* %4) #4
  %call4 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 81, i32 5, %struct.rtx_def* %1, %struct.rtx_def* %2) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %3) #4
  %call8 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %1) #4
  %call9 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %2) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 82, i32 5, %struct.rtx_def* %call8, %struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call7, %struct.rtx_def* %call10) #4
  %call12 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %3) #4
  %call13 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %call12) #4
  %call14 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call15 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call14) #4
  %call16 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 4, %struct.rtx_def* %call6, %struct.rtx_def* %call11, %struct.rtx_def* %call13, %struct.rtx_def* %call15) #4
  %call17 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call16) #4
  %call18 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call17) #4
  %call19 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call19
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1005(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %2 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %arrayidx3 = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  %3 = load %struct.rtx_def** %arrayidx3, align 8, !tbaa !1
  %4 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %3, %struct.rtx_def* %4) #4
  %call4 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 81, i32 4, %struct.rtx_def* %1, %struct.rtx_def* %2) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %3) #4
  %call8 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %1) #4
  %call9 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %2) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 82, i32 4, %struct.rtx_def* %call8, %struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call7, %struct.rtx_def* %call10) #4
  %call12 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %3) #4
  %call13 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %call12) #4
  %call14 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call15 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call14) #4
  %call16 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 4, %struct.rtx_def* %call6, %struct.rtx_def* %call11, %struct.rtx_def* %call13, %struct.rtx_def* %call15) #4
  %call17 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call16) #4
  %call18 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call17) #4
  %call19 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call19
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_udivmodhi4(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* %operand3) #0 {
entry:
  tail call void @start_sequence() #4
  %call = tail call %struct.rtx_def* @gen_reg_rtx(i32 3) #4
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call10 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %0) #4
  %call11 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call10) #4
  %call12 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 81, i32 3, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call13 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call12) #4
  %call14 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 82, i32 3, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call15 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand3, %struct.rtx_def* %call14) #4
  %call16 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %call) #4
  %call17 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call18 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call17) #4
  %call19 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 4, %struct.rtx_def* %call13, %struct.rtx_def* %call15, %struct.rtx_def* %call16, %struct.rtx_def* %call18) #4
  %call20 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call19) #4
  %call21 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call20) #4
  %call22 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call22
}

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #4

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #4

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_testsi_ccno_1(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 55, i32 17) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 83, i32 4, %struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #4
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 74, i32 55, %struct.rtx_def* %call1, %struct.rtx_def* %0) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call2) #4
  ret %struct.rtx_def* %call3
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_testqi_ccz_1(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 56, i32 17) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 83, i32 2, %struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #4
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 74, i32 56, %struct.rtx_def* %call1, %struct.rtx_def* %0) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call2) #4
  ret %struct.rtx_def* %call3
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_testqi_ext_ccno_0(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 55, i32 17) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 8) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 8) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 133, i32 4, %struct.rtx_def* %operand0, %struct.rtx_def* %call1, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 83, i32 4, %struct.rtx_def* %call3, %struct.rtx_def* %operand1) #4
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 74, i32 55, %struct.rtx_def* %call4, %struct.rtx_def* %0) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call5) #4
  ret %struct.rtx_def* %call6
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1010(%struct.rtx_def** nocapture %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %0 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %rtwint = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 0, i32 0
  %1 = load i64* %rtwint, align 8, !tbaa !7
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %2 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %rtwint5 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 0, i32 0
  %3 = load i64* %rtwint5, align 8, !tbaa !7
  %4 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %5 = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 0
  %bf.load = load i32* %5, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %bf.clear9 = and i32 %bf.load, 65535
  switch i32 %bf.clear9, label %if.else49 [
    i32 66, label %if.then
    i32 63, label %land.lhs.true
  ]

if.then:                                          ; preds = %entry
  %bf.clear13 = and i32 %bf.load, 134217728
  %tobool = icmp eq i32 %bf.clear13, 0
  %add = add nsw i64 %3, %1
  br i1 %tobool, label %if.then14, label %if.end62

if.then14:                                        ; preds = %if.then
  %conv = trunc i64 %add to i32
  %call = tail call i32 @smallest_mode_for_size(i32 %conv, i32 1) #4
  %6 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %call16 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %6, i32 %call, i64 0, i32 1, i32 1) #4
  store %struct.rtx_def* %call16, %struct.rtx_def** %operands, align 8, !tbaa !1
  br label %if.end62

land.lhs.true:                                    ; preds = %entry
  %arrayidx25 = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx25 to %struct.rtx_def**
  %7 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %8 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 0
  %bf.load26 = load i32* %8, align 8
  %bf.lshr27 = lshr i32 %bf.load26, 16
  %bf.clear28 = and i32 %bf.lshr27, 255
  %idxprom111 = zext i32 %bf.clear to i64
  %arrayidx29 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom111
  %9 = load i16* %arrayidx29, align 2, !tbaa !10
  %idxprom31112 = zext i32 %bf.clear28 to i64
  %arrayidx32 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom31112
  %10 = load i16* %arrayidx32, align 2, !tbaa !10
  %cmp34 = icmp ugt i16 %9, %10
  br i1 %cmp34, label %land.lhs.true36, label %if.else49

land.lhs.true36:                                  ; preds = %land.lhs.true
  %add37 = add nsw i64 %3, %1
  %conv40 = zext i16 %10 to i64
  %cmp41 = icmp sgt i64 %add37, %conv40
  br i1 %cmp41, label %if.else49, label %if.then43

if.then43:                                        ; preds = %land.lhs.true36
  store %struct.rtx_def* %7, %struct.rtx_def** %operands, align 8, !tbaa !1
  br label %if.end62

if.else49:                                        ; preds = %entry, %land.lhs.true36, %land.lhs.true
  %cmp50 = icmp eq i32 %bf.clear, 3
  %add53 = add nsw i64 %3, %1
  %cmp54 = icmp slt i64 %add53, 9
  %or.cond = and i1 %cmp50, %cmp54
  br i1 %or.cond, label %if.then56, label %if.end62

if.then56:                                        ; preds = %if.else49
  %call58 = tail call %struct.rtx_def* @gen_lowpart(i32 2, %struct.rtx_def* %4) #4
  store %struct.rtx_def* %call58, %struct.rtx_def** %operands, align 8, !tbaa !1
  br label %if.end62

if.end62:                                         ; preds = %if.then, %if.then43, %if.then56, %if.else49, %if.then14
  %add63.pre-phi = phi i64 [ %add37, %if.then43 ], [ %add53, %if.then56 ], [ %add53, %if.else49 ], [ %add, %if.then14 ], [ %add, %if.then ]
  %11 = phi %struct.rtx_def* [ %7, %if.then43 ], [ %call58, %if.then56 ], [ %4, %if.else49 ], [ %call16, %if.then14 ], [ %4, %if.then ]
  %mode.0 = phi i32 [ %bf.clear28, %if.then43 ], [ 2, %if.then56 ], [ %bf.clear, %if.else49 ], [ %call, %if.then14 ], [ %bf.clear, %if.then ]
  %shl = shl i64 1, %add63.pre-phi
  %sub = add nsw i64 %shl, -1
  %neg = shl i64 -1, %3
  %and = and i64 %sub, %neg
  %call67 = tail call i64 @trunc_int_for_mode(i64 %and, i32 %mode.0) #4
  %call68 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call67) #4
  %call69 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 83, i32 %mode.0, %struct.rtx_def* %11, %struct.rtx_def* %call68) #4
  %arrayidx70 = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  store %struct.rtx_def* %call69, %struct.rtx_def** %arrayidx70, align 8, !tbaa !1
  %call75 = tail call %struct.rtx_def* @gen_rtx_REG(i32 55, i32 17) #4
  %12 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call76 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 74, i32 55, %struct.rtx_def* %call69, %struct.rtx_def* %12) #4
  %call77 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call75, %struct.rtx_def* %call76) #4
  %call78 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call77) #4
  %call79 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call79
}

declare i32 @smallest_mode_for_size(i32, i32) #1

declare %struct.rtx_def* @adjust_address_1(%struct.rtx_def*, i32, i64, i32, i32) #1

declare i64 @trunc_int_for_mode(i64, i32) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_anddi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %operands = alloca [3 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 2
  store %struct.rtx_def* %operand2, %struct.rtx_def** %arrayidx2, align 16, !tbaa !1
  call void @ix86_expand_binary_operator(i32 83, i32 5, %struct.rtx_def** %arrayidx) #4
  %call = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_andsi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %operands = alloca [3 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 2
  store %struct.rtx_def* %operand2, %struct.rtx_def** %arrayidx2, align 16, !tbaa !1
  call void @ix86_expand_binary_operator(i32 83, i32 4, %struct.rtx_def** %arrayidx) #4
  %call = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1013(%struct.rtx_def** nocapture %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_lowpart(i32 3, %struct.rtx_def* %0) #4
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 64, i32 0, %struct.rtx_def* %call) #4
  %1 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call4, %struct.rtx_def* %1) #4
  %call6 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call7
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1014(%struct.rtx_def** nocapture %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_lowpart(i32 2, %struct.rtx_def* %0) #4
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 64, i32 0, %struct.rtx_def* %call) #4
  %1 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call4, %struct.rtx_def* %1) #4
  %call6 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call7
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1015(%struct.rtx_def** nocapture %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_lowpart(i32 4, %struct.rtx_def* %0) #4
  store %struct.rtx_def* %call, %struct.rtx_def** %operands, align 8, !tbaa !1
  %call3 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 8) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 8) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 133, i32 4, %struct.rtx_def* %call, %struct.rtx_def* %call3, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %call) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 8) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 8) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 133, i32 4, %struct.rtx_def* %call6, %struct.rtx_def* %call7, %struct.rtx_def* %call8) #4
  %call10 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %call) #4
  %call11 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 8) #4
  %call12 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 8) #4
  %call13 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 133, i32 4, %struct.rtx_def* %call10, %struct.rtx_def* %call11, %struct.rtx_def* %call12) #4
  %call14 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 85, i32 4, %struct.rtx_def* %call9, %struct.rtx_def* %call13) #4
  %call15 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call5, %struct.rtx_def* %call14) #4
  %call16 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call17 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call16) #4
  %call18 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call15, %struct.rtx_def* %call17) #4
  %call19 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call18) #4
  %call20 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call19) #4
  %call21 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call21
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_andhi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %operands = alloca [3 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 2
  store %struct.rtx_def* %operand2, %struct.rtx_def** %arrayidx2, align 16, !tbaa !1
  call void @ix86_expand_binary_operator(i32 83, i32 3, %struct.rtx_def** %arrayidx) #4
  %call = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_andqi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %operands = alloca [3 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 2
  store %struct.rtx_def* %operand2, %struct.rtx_def** %arrayidx2, align 16, !tbaa !1
  call void @ix86_expand_binary_operator(i32 83, i32 2, %struct.rtx_def** %arrayidx) #4
  %call = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_iordi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %operands = alloca [3 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 2
  store %struct.rtx_def* %operand2, %struct.rtx_def** %arrayidx2, align 16, !tbaa !1
  call void @ix86_expand_binary_operator(i32 84, i32 5, %struct.rtx_def** %arrayidx) #4
  %call = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_iorsi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %operands = alloca [3 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 2
  store %struct.rtx_def* %operand2, %struct.rtx_def** %arrayidx2, align 16, !tbaa !1
  call void @ix86_expand_binary_operator(i32 84, i32 4, %struct.rtx_def** %arrayidx) #4
  %call = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_iorhi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %operands = alloca [3 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 2
  store %struct.rtx_def* %operand2, %struct.rtx_def** %arrayidx2, align 16, !tbaa !1
  call void @ix86_expand_binary_operator(i32 84, i32 3, %struct.rtx_def** %arrayidx) #4
  %call = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_iorqi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %operands = alloca [3 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 2
  store %struct.rtx_def* %operand2, %struct.rtx_def** %arrayidx2, align 16, !tbaa !1
  call void @ix86_expand_binary_operator(i32 84, i32 2, %struct.rtx_def** %arrayidx) #4
  %call = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_xordi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %operands = alloca [3 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 2
  store %struct.rtx_def* %operand2, %struct.rtx_def** %arrayidx2, align 16, !tbaa !1
  call void @ix86_expand_binary_operator(i32 85, i32 5, %struct.rtx_def** %arrayidx) #4
  %call = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_xorsi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %operands = alloca [3 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 2
  store %struct.rtx_def* %operand2, %struct.rtx_def** %arrayidx2, align 16, !tbaa !1
  call void @ix86_expand_binary_operator(i32 85, i32 4, %struct.rtx_def** %arrayidx) #4
  %call = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_xorhi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %operands = alloca [3 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 2
  store %struct.rtx_def* %operand2, %struct.rtx_def** %arrayidx2, align 16, !tbaa !1
  call void @ix86_expand_binary_operator(i32 85, i32 3, %struct.rtx_def** %arrayidx) #4
  %call = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_xorqi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %operands = alloca [3 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 2
  store %struct.rtx_def* %operand2, %struct.rtx_def** %arrayidx2, align 16, !tbaa !1
  call void @ix86_expand_binary_operator(i32 85, i32 2, %struct.rtx_def** %arrayidx) #4
  %call = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_xorqi_cc_ext_1(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 55, i32 17) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 8) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 8) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 133, i32 4, %struct.rtx_def* %operand1, %struct.rtx_def* %call1, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 85, i32 4, %struct.rtx_def* %call3, %struct.rtx_def* %operand2) #4
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 74, i32 55, %struct.rtx_def* %call4, %struct.rtx_def* %0) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 8) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 8) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 133, i32 4, %struct.rtx_def* %operand0, %struct.rtx_def* %call7, %struct.rtx_def* %call8) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 8) #4
  %call11 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 8) #4
  %call12 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 133, i32 4, %struct.rtx_def* %operand1, %struct.rtx_def* %call10, %struct.rtx_def* %call11) #4
  %call13 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 85, i32 4, %struct.rtx_def* %call12, %struct.rtx_def* %operand2) #4
  %call14 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call9, %struct.rtx_def* %call13) #4
  %call15 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call6, %struct.rtx_def* %call14) #4
  %call16 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call15) #4
  ret %struct.rtx_def* %call16
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_negdi2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %operands = alloca [2 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [2 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [2 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  call void @ix86_expand_unary_operator(i32 77, i32 5, %struct.rtx_def** %arrayidx) #4
  %call = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

declare void @ix86_expand_unary_operator(i32, i32, %struct.rtx_def**) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1028(%struct.rtx_def** %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %add.ptr = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %add.ptr1 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %add.ptr2 = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  tail call void @split_di(%struct.rtx_def** %add.ptr, i32 1, %struct.rtx_def** %add.ptr1, %struct.rtx_def** %add.ptr2) #4
  tail call void @split_di(%struct.rtx_def** %operands, i32 1, %struct.rtx_def** %operands, %struct.rtx_def** %add.ptr) #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %1 = load %struct.rtx_def** %add.ptr, align 8, !tbaa !1
  %2 = load %struct.rtx_def** %add.ptr1, align 8, !tbaa !1
  %3 = load %struct.rtx_def** %add.ptr2, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 56, i32 17) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 77, i32 4, %struct.rtx_def* %2) #4
  %4 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call10 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 74, i32 56, %struct.rtx_def* %call9, %struct.rtx_def* %4) #4
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call10) #4
  %call12 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %2) #4
  %call13 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 77, i32 4, %struct.rtx_def* %call12) #4
  %call14 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call13) #4
  %call15 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call11, %struct.rtx_def* %call14) #4
  %call16 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call15) #4
  %call17 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call16) #4
  %call18 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %5 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call19 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 111, i32 4, %struct.rtx_def* %call18, %struct.rtx_def* %5) #4
  %call20 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %call19, %struct.rtx_def* %3) #4
  %6 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call21 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %call20, %struct.rtx_def* %6) #4
  %call22 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %1, %struct.rtx_def* %call21) #4
  %call23 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call24 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call23) #4
  %call25 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call22, %struct.rtx_def* %call24) #4
  %call26 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call25) #4
  %call27 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call26) #4
  %call28 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %1) #4
  %call29 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %1) #4
  %call30 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 77, i32 4, %struct.rtx_def* %call29) #4
  %call31 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call28, %struct.rtx_def* %call30) #4
  %call32 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call33 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call32) #4
  %call34 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call31, %struct.rtx_def* %call33) #4
  %call35 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call34) #4
  %call36 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call35) #4
  %call37 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call37
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_negsi2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %operands = alloca [2 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [2 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [2 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  call void @ix86_expand_unary_operator(i32 77, i32 4, %struct.rtx_def** %arrayidx) #4
  %call = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_neghi2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %operands = alloca [2 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [2 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [2 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  call void @ix86_expand_unary_operator(i32 77, i32 3, %struct.rtx_def** %arrayidx) #4
  %call = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_negqi2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %operands = alloca [2 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [2 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [2 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  call void @ix86_expand_unary_operator(i32 77, i32 2, %struct.rtx_def** %arrayidx) #4
  %call = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_negsf2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %operands = alloca [2 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [2 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [2 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %0 = load i32* @target_flags, align 4, !tbaa !5
  %and = and i32 %0, 327680
  %cmp = icmp eq i32 %and, 0
  br i1 %cmp, label %if.end35, label %if.then

if.then:                                          ; preds = %entry
  %call = call i32 @memory_operand(%struct.rtx_def* %operand0, i32 0) #4
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.else, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.then
  %1 = load %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %2 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call5 = call i32 @rtx_equal_p(%struct.rtx_def* %1, %struct.rtx_def* %2) #4
  %tobool6 = icmp eq i32 %call5, 0
  br i1 %tobool6, label %if.else, label %if.then7

if.then7:                                         ; preds = %land.lhs.true
  %3 = load %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %4 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call.i = call %struct.rtx_def* @gen_rtx_fmt_e(i32 77, i32 15, %struct.rtx_def* %4) #4
  %call1.i = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %3, %struct.rtx_def* %call.i) #4
  %call2.i = call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call3.i = call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call2.i) #4
  %call4.i = call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call1.i, %struct.rtx_def* %call3.i) #4
  %call5.i = call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call4.i) #4
  %call11 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call5.i) #4
  br label %if.end33

if.else:                                          ; preds = %land.lhs.true, %if.then
  %call12 = call %struct.rtx_def* @gen_reg_rtx(i32 15) #4
  %5 = load %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %6 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call15 = call %struct.rtx_def* @force_reg(i32 15, %struct.rtx_def* %6) #4
  store %struct.rtx_def* %call15, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %7 = load %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %call18 = call %struct.rtx_def* @force_reg(i32 15, %struct.rtx_def* %7) #4
  store %struct.rtx_def* %call18, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %call20 = call i64 @trunc_int_for_mode(i64 2147483648, i32 4) #4
  %call21 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call20) #4
  %call22 = call %struct.rtx_def* @gen_lowpart(i32 15, %struct.rtx_def* %call21) #4
  %call23 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call12, %struct.rtx_def* %call22) #4
  %8 = load %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %9 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call.i40 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 77, i32 15, %struct.rtx_def* %9) #4
  %call1.i41 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %8, %struct.rtx_def* %call.i40) #4
  %call2.i42 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %call12) #4
  %call3.i43 = call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call4.i44 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call3.i43) #4
  %call5.i45 = call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 3, %struct.rtx_def* %call1.i41, %struct.rtx_def* %call2.i42, %struct.rtx_def* %call4.i44) #4
  %call6.i = call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call5.i45) #4
  %call27 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call6.i) #4
  %10 = load %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %cmp29 = icmp eq %struct.rtx_def* %5, %10
  br i1 %cmp29, label %if.end33, label %if.then30

if.then30:                                        ; preds = %if.else
  %call32 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %5, %struct.rtx_def* %10) #4
  br label %if.end33

if.end33:                                         ; preds = %if.else, %if.then30, %if.then7
  %call34 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  br label %return

if.end35:                                         ; preds = %entry
  call void @ix86_expand_unary_operator(i32 77, i32 15, %struct.rtx_def** %arrayidx) #4
  %call36 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.end35, %if.end33
  %retval.0 = phi %struct.rtx_def* [ %call34, %if.end33 ], [ %call36, %if.end35 ]
  ret %struct.rtx_def* %retval.0
}

declare i32 @rtx_equal_p(%struct.rtx_def*, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1033(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 77, i32 15, %struct.rtx_def* %1) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call2, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call8
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1034(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 77, i32 15, %struct.rtx_def* %1) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call2, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call8
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1035(%struct.rtx_def** nocapture %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call = tail call i32 @operands_match_p(%struct.rtx_def* %0, %struct.rtx_def* %1) #4
  %tobool = icmp eq i32 %call, 0
  %arrayidx7.phi.trans.insert = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %.pre = load %struct.rtx_def** %arrayidx7.phi.trans.insert, align 8, !tbaa !1
  %.pre24 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct.rtx_def* %.pre24, %struct.rtx_def** %arrayidx7.phi.trans.insert, align 8, !tbaa !1
  store %struct.rtx_def* %.pre, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %2 = phi %struct.rtx_def* [ %.pre, %if.then ], [ %.pre24, %entry ]
  %3 = phi %struct.rtx_def* [ %.pre24, %if.then ], [ %.pre, %entry ]
  %4 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %call9 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 6, %struct.rtx_def* %4, i32 0) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 6, %struct.rtx_def* %3, i32 0) #4
  %call11 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 6, %struct.rtx_def* %2, i32 0) #4
  %call12 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 85, i32 6, %struct.rtx_def* %call10, %struct.rtx_def* %call11) #4
  %call13 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call9, %struct.rtx_def* %call12) #4
  %call14 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call13) #4
  %call15 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call15
}

declare i32 @operands_match_p(%struct.rtx_def*, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1036(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 77, i32 15, %struct.rtx_def* %1) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call) #4
  %call3 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call4
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1037(%struct.rtx_def** nocapture %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %call = tail call i64 @trunc_int_for_mode(i64 2147483648, i32 4) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call) #4
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  store %struct.rtx_def* %call1, %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx3 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx3 to i32*
  %1 = load i32* %rtuint, align 4, !tbaa !5
  %call4 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 %1) #4
  store %struct.rtx_def* %call4, %struct.rtx_def** %operands, align 8, !tbaa !1
  %2 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %call8 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %call4) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 85, i32 4, %struct.rtx_def* %call8, %struct.rtx_def* %2) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call4, %struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call12 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call11) #4
  %call13 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call10, %struct.rtx_def* %call12) #4
  %call14 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call13) #4
  %call15 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call14) #4
  %call16 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call16
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1038(%struct.rtx_def** nocapture %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %0 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %1 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 0
  %bf.load = load i32* %1, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %idxprom27 = zext i32 %bf.clear to i64
  %arrayidx1 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom27
  %2 = load i8* %arrayidx1, align 1, !tbaa !9
  %conv = zext i8 %2 to i64
  %cmp = icmp ugt i8 %2, 11
  %3 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %conv.op = add i64 %conv, -1
  %conv4 = select i1 %cmp, i64 9, i64 %conv.op
  %call = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %3, i32 2, i64 %conv4, i32 1, i32 1) #4
  store %struct.rtx_def* %call, %struct.rtx_def** %operands, align 8, !tbaa !1
  %call6 = tail call i64 @trunc_int_for_mode(i64 128, i32 2) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call6) #4
  store %struct.rtx_def* %call7, %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %4 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %call11 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %4) #4
  %call12 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 85, i32 2, %struct.rtx_def* %call11, %struct.rtx_def* %call7) #4
  %call13 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %4, %struct.rtx_def* %call12) #4
  %call14 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call15 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call14) #4
  %call16 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call13, %struct.rtx_def* %call15) #4
  %call17 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call16) #4
  %call18 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call17) #4
  %call19 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call19
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_negdf2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %operands = alloca [2 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [2 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [2 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %0 = load i32* @target_flags, align 4, !tbaa !5
  %and = and i32 %0, 262144
  %cmp = icmp eq i32 %and, 0
  br i1 %cmp, label %if.end35, label %if.then

if.then:                                          ; preds = %entry
  %call = call i32 @memory_operand(%struct.rtx_def* %operand0, i32 0) #4
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.else, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.then
  %1 = load %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %2 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call5 = call i32 @rtx_equal_p(%struct.rtx_def* %1, %struct.rtx_def* %2) #4
  %tobool6 = icmp eq i32 %call5, 0
  br i1 %tobool6, label %if.else, label %if.then7

if.then7:                                         ; preds = %land.lhs.true
  %3 = load %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %4 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call.i = call %struct.rtx_def* @gen_rtx_fmt_e(i32 77, i32 16, %struct.rtx_def* %4) #4
  %call1.i = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %3, %struct.rtx_def* %call.i) #4
  %call2.i = call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call3.i = call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call2.i) #4
  %call4.i = call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call1.i, %struct.rtx_def* %call3.i) #4
  %call5.i = call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call4.i) #4
  %call11 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call5.i) #4
  br label %if.end33

if.else:                                          ; preds = %land.lhs.true, %if.then
  %call12 = call %struct.rtx_def* @gen_reg_rtx(i32 16) #4
  %call13 = call i64 @trunc_int_for_mode(i64 -9223372036854775808, i32 5) #4
  %call14 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call13) #4
  %5 = load %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %6 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call17 = call %struct.rtx_def* @force_reg(i32 16, %struct.rtx_def* %6) #4
  store %struct.rtx_def* %call17, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %7 = load %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %call20 = call %struct.rtx_def* @force_reg(i32 16, %struct.rtx_def* %7) #4
  store %struct.rtx_def* %call20, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %call22 = call %struct.rtx_def* @gen_lowpart(i32 16, %struct.rtx_def* %call14) #4
  %call23 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call12, %struct.rtx_def* %call22) #4
  %8 = load %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %9 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call.i40 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 77, i32 16, %struct.rtx_def* %9) #4
  %call1.i41 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %8, %struct.rtx_def* %call.i40) #4
  %call2.i42 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %call12) #4
  %call3.i43 = call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call4.i44 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call3.i43) #4
  %call5.i45 = call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 3, %struct.rtx_def* %call1.i41, %struct.rtx_def* %call2.i42, %struct.rtx_def* %call4.i44) #4
  %call6.i = call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call5.i45) #4
  %call27 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call6.i) #4
  %10 = load %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %cmp29 = icmp eq %struct.rtx_def* %5, %10
  br i1 %cmp29, label %if.end33, label %if.then30

if.then30:                                        ; preds = %if.else
  %call32 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %5, %struct.rtx_def* %10) #4
  br label %if.end33

if.end33:                                         ; preds = %if.else, %if.then30, %if.then7
  %call34 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  br label %return

if.end35:                                         ; preds = %entry
  call void @ix86_expand_unary_operator(i32 77, i32 16, %struct.rtx_def** %arrayidx) #4
  %call36 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.end35, %if.end33
  %retval.0 = phi %struct.rtx_def* [ %call34, %if.end33 ], [ %call36, %if.end35 ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1040(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 77, i32 16, %struct.rtx_def* %1) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call2, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call8
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1041(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 77, i32 16, %struct.rtx_def* %1) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call2, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call8
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1042(%struct.rtx_def** nocapture %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_lowpart(i32 5, %struct.rtx_def* %0) #4
  store %struct.rtx_def* %call, %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %call3 = tail call %struct.rtx_def* @gen_lowpart(i32 5, %struct.rtx_def* %1) #4
  store %struct.rtx_def* %call3, %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %arrayidx5 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %2 = load %struct.rtx_def** %arrayidx5, align 8, !tbaa !1
  %call6 = tail call %struct.rtx_def* @gen_lowpart(i32 5, %struct.rtx_def* %2) #4
  store %struct.rtx_def* %call6, %struct.rtx_def** %arrayidx5, align 8, !tbaa !1
  %3 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %4 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 85, i32 5, %struct.rtx_def* %4, %struct.rtx_def* %call6) #4
  %call12 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %3, %struct.rtx_def* %call11) #4
  %call13 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call14 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call13) #4
  %call15 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call12, %struct.rtx_def* %call14) #4
  %call16 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call15) #4
  %call17 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call16) #4
  %call18 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call18
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1043(%struct.rtx_def** nocapture %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call = tail call i32 @operands_match_p(%struct.rtx_def* %0, %struct.rtx_def* %1) #4
  %tobool = icmp eq i32 %call, 0
  %arrayidx7.phi.trans.insert = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %.pre = load %struct.rtx_def** %arrayidx7.phi.trans.insert, align 8, !tbaa !1
  %.pre24 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct.rtx_def* %.pre24, %struct.rtx_def** %arrayidx7.phi.trans.insert, align 8, !tbaa !1
  store %struct.rtx_def* %.pre, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %2 = phi %struct.rtx_def* [ %.pre, %if.then ], [ %.pre24, %entry ]
  %3 = phi %struct.rtx_def* [ %.pre24, %if.then ], [ %.pre, %entry ]
  %4 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %call9 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 6, %struct.rtx_def* %4, i32 0) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 6, %struct.rtx_def* %3, i32 0) #4
  %call11 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 6, %struct.rtx_def* %2, i32 0) #4
  %call12 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 85, i32 6, %struct.rtx_def* %call10, %struct.rtx_def* %call11) #4
  %call13 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call9, %struct.rtx_def* %call12) #4
  %call14 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call13) #4
  %call15 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call15
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1044(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 77, i32 16, %struct.rtx_def* %1) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call) #4
  %call3 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call4
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1045(%struct.rtx_def** %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %call = tail call i64 @trunc_int_for_mode(i64 2147483648, i32 4) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call) #4
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 4
  store %struct.rtx_def* %call1, %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %add.ptr2 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %add.ptr3 = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  tail call void @split_di(%struct.rtx_def** %operands, i32 1, %struct.rtx_def** %add.ptr2, %struct.rtx_def** %add.ptr3) #4
  %0 = load %struct.rtx_def** %add.ptr3, align 8, !tbaa !1
  %1 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %call9 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %0) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 85, i32 4, %struct.rtx_def* %call9, %struct.rtx_def* %1) #4
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call10) #4
  %call12 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call13 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call12) #4
  %call14 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call11, %struct.rtx_def* %call13) #4
  %call15 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call14) #4
  %call16 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call15) #4
  %call17 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call17
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_negxf2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %operands = alloca [2 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [2 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [2 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  call void @ix86_expand_unary_operator(i32 77, i32 17, %struct.rtx_def** %arrayidx) #4
  %call = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_negtf2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %operands = alloca [2 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [2 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [2 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  call void @ix86_expand_unary_operator(i32 77, i32 18, %struct.rtx_def** %arrayidx) #4
  %call = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1048(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 77, i32 17, %struct.rtx_def* %1) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call) #4
  %call3 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call4
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1049(%struct.rtx_def** nocapture %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %call = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 32768) #4
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %call2 = tail call i32 @true_regnum(%struct.rtx_def* %0) #4
  %1 = load i32* @target_flags, align 4, !tbaa !5
  %and = lshr i32 %1, 25
  %2 = and i32 %and, 1
  %3 = add i32 %call2, 2
  %add = sub i32 %3, %2
  %call3 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 %add) #4
  store %struct.rtx_def* %call3, %struct.rtx_def** %operands, align 8, !tbaa !1
  %4 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %call7 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %call3) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 85, i32 4, %struct.rtx_def* %call7, %struct.rtx_def* %4) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call3, %struct.rtx_def* %call8) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call10) #4
  %call12 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call9, %struct.rtx_def* %call11) #4
  %call13 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call12) #4
  %call14 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call13) #4
  %call15 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call15
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1050(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 77, i32 18, %struct.rtx_def* %1) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call) #4
  %call3 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call4
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1051(%struct.rtx_def** nocapture %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %call = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 32768) #4
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %call2 = tail call i32 @true_regnum(%struct.rtx_def* %0) #4
  %1 = load i32* @target_flags, align 4, !tbaa !5
  %and = lshr i32 %1, 25
  %2 = and i32 %and, 1
  %3 = add i32 %call2, 2
  %add = sub i32 %3, %2
  %call3 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 %add) #4
  store %struct.rtx_def* %call3, %struct.rtx_def** %operands, align 8, !tbaa !1
  %4 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %call7 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %call3) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 85, i32 4, %struct.rtx_def* %call7, %struct.rtx_def* %4) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call3, %struct.rtx_def* %call8) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call10) #4
  %call12 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call9, %struct.rtx_def* %call11) #4
  %call13 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call12) #4
  %call14 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call13) #4
  %call15 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call15
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_abssf2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %operands = alloca [2 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [2 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [2 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %0 = load i32* @target_flags, align 4, !tbaa !5
  %and = and i32 %0, 327680
  %cmp = icmp eq i32 %and, 0
  br i1 %cmp, label %if.end35, label %if.then

if.then:                                          ; preds = %entry
  %call = call i32 @memory_operand(%struct.rtx_def* %operand0, i32 0) #4
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.else, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.then
  %1 = load %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %2 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call5 = call i32 @rtx_equal_p(%struct.rtx_def* %1, %struct.rtx_def* %2) #4
  %tobool6 = icmp eq i32 %call5, 0
  br i1 %tobool6, label %if.else, label %if.then7

if.then7:                                         ; preds = %land.lhs.true
  %3 = load %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %4 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call.i = call %struct.rtx_def* @gen_rtx_fmt_e(i32 129, i32 15, %struct.rtx_def* %4) #4
  %call1.i = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %3, %struct.rtx_def* %call.i) #4
  %call2.i = call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call3.i = call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call2.i) #4
  %call4.i = call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call1.i, %struct.rtx_def* %call3.i) #4
  %call5.i = call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call4.i) #4
  %call11 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call5.i) #4
  br label %if.end33

if.else:                                          ; preds = %land.lhs.true, %if.then
  %call12 = call %struct.rtx_def* @gen_reg_rtx(i32 15) #4
  %5 = load %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %6 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call15 = call %struct.rtx_def* @force_reg(i32 15, %struct.rtx_def* %6) #4
  store %struct.rtx_def* %call15, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %7 = load %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %call18 = call %struct.rtx_def* @force_reg(i32 15, %struct.rtx_def* %7) #4
  store %struct.rtx_def* %call18, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %call20 = call i64 @trunc_int_for_mode(i64 2147483648, i32 4) #4
  %call21 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call20) #4
  %call22 = call %struct.rtx_def* @gen_lowpart(i32 15, %struct.rtx_def* %call21) #4
  %call23 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call12, %struct.rtx_def* %call22) #4
  %8 = load %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %9 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call.i40 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 129, i32 15, %struct.rtx_def* %9) #4
  %call1.i41 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %8, %struct.rtx_def* %call.i40) #4
  %call2.i42 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %call12) #4
  %call3.i43 = call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call4.i44 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call3.i43) #4
  %call5.i45 = call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 3, %struct.rtx_def* %call1.i41, %struct.rtx_def* %call2.i42, %struct.rtx_def* %call4.i44) #4
  %call6.i = call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call5.i45) #4
  %call27 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call6.i) #4
  %10 = load %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %cmp29 = icmp eq %struct.rtx_def* %5, %10
  br i1 %cmp29, label %if.end33, label %if.then30

if.then30:                                        ; preds = %if.else
  %call32 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %5, %struct.rtx_def* %10) #4
  br label %if.end33

if.end33:                                         ; preds = %if.else, %if.then30, %if.then7
  %call34 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  br label %return

if.end35:                                         ; preds = %entry
  call void @ix86_expand_unary_operator(i32 129, i32 15, %struct.rtx_def** %arrayidx) #4
  %call36 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.end35, %if.end33
  %retval.0 = phi %struct.rtx_def* [ %call34, %if.end33 ], [ %call36, %if.end35 ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1053(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 129, i32 15, %struct.rtx_def* %1) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call2, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call8
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1054(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 129, i32 15, %struct.rtx_def* %1) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call2, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call8
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1055(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %2 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 6, %struct.rtx_def* %0, i32 0) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 6, %struct.rtx_def* %2, i32 0) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 86, i32 6, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 6, %struct.rtx_def* %1, i32 0) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 83, i32 6, %struct.rtx_def* %call4, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call9
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1056(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 129, i32 15, %struct.rtx_def* %1) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call) #4
  %call3 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call4
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1057(%struct.rtx_def** nocapture %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %call = tail call i64 @trunc_int_for_mode(i64 2147483647, i32 4) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call) #4
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  store %struct.rtx_def* %call1, %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx3 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx3 to i32*
  %1 = load i32* %rtuint, align 4, !tbaa !5
  %call4 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 %1) #4
  store %struct.rtx_def* %call4, %struct.rtx_def** %operands, align 8, !tbaa !1
  %2 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %call8 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %call4) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 83, i32 4, %struct.rtx_def* %call8, %struct.rtx_def* %2) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call4, %struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call12 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call11) #4
  %call13 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call10, %struct.rtx_def* %call12) #4
  %call14 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call13) #4
  %call15 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call14) #4
  %call16 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call16
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1058(%struct.rtx_def** nocapture %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %0 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %1 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 0
  %bf.load = load i32* %1, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %idxprom27 = zext i32 %bf.clear to i64
  %arrayidx1 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom27
  %2 = load i8* %arrayidx1, align 1, !tbaa !9
  %conv = zext i8 %2 to i64
  %cmp = icmp ugt i8 %2, 11
  %3 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %conv.op = add i64 %conv, -1
  %conv4 = select i1 %cmp, i64 9, i64 %conv.op
  %call = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %3, i32 2, i64 %conv4, i32 1, i32 1) #4
  store %struct.rtx_def* %call, %struct.rtx_def** %operands, align 8, !tbaa !1
  %call6 = tail call i64 @trunc_int_for_mode(i64 -129, i32 2) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call6) #4
  store %struct.rtx_def* %call7, %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %4 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %call11 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %4) #4
  %call12 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 83, i32 2, %struct.rtx_def* %call11, %struct.rtx_def* %call7) #4
  %call13 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %4, %struct.rtx_def* %call12) #4
  %call14 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call15 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call14) #4
  %call16 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call13, %struct.rtx_def* %call15) #4
  %call17 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call16) #4
  %call18 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call17) #4
  %call19 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call19
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_absdf2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %operands = alloca [2 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [2 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [2 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %0 = load i32* @target_flags, align 4, !tbaa !5
  %and = and i32 %0, 262144
  %cmp = icmp eq i32 %and, 0
  br i1 %cmp, label %if.end35, label %if.then

if.then:                                          ; preds = %entry
  %call = call i32 @memory_operand(%struct.rtx_def* %operand0, i32 0) #4
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.else, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.then
  %1 = load %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %2 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call5 = call i32 @rtx_equal_p(%struct.rtx_def* %1, %struct.rtx_def* %2) #4
  %tobool6 = icmp eq i32 %call5, 0
  br i1 %tobool6, label %if.else, label %if.then7

if.then7:                                         ; preds = %land.lhs.true
  %3 = load %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %4 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call.i = call %struct.rtx_def* @gen_rtx_fmt_e(i32 129, i32 16, %struct.rtx_def* %4) #4
  %call1.i = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %3, %struct.rtx_def* %call.i) #4
  %call2.i = call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call3.i = call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call2.i) #4
  %call4.i = call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call1.i, %struct.rtx_def* %call3.i) #4
  %call5.i = call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call4.i) #4
  %call11 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call5.i) #4
  br label %if.end33

if.else:                                          ; preds = %land.lhs.true, %if.then
  %call12 = call %struct.rtx_def* @gen_reg_rtx(i32 16) #4
  %call13 = call i64 @trunc_int_for_mode(i64 -9223372036854775808, i32 5) #4
  %call14 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call13) #4
  %5 = load %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %6 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call17 = call %struct.rtx_def* @force_reg(i32 16, %struct.rtx_def* %6) #4
  store %struct.rtx_def* %call17, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %7 = load %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %call20 = call %struct.rtx_def* @force_reg(i32 16, %struct.rtx_def* %7) #4
  store %struct.rtx_def* %call20, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %call22 = call %struct.rtx_def* @gen_lowpart(i32 16, %struct.rtx_def* %call14) #4
  %call23 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call12, %struct.rtx_def* %call22) #4
  %8 = load %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %9 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call.i40 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 129, i32 16, %struct.rtx_def* %9) #4
  %call1.i41 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %8, %struct.rtx_def* %call.i40) #4
  %call2.i42 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %call12) #4
  %call3.i43 = call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call4.i44 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call3.i43) #4
  %call5.i45 = call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 3, %struct.rtx_def* %call1.i41, %struct.rtx_def* %call2.i42, %struct.rtx_def* %call4.i44) #4
  %call6.i = call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call5.i45) #4
  %call27 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call6.i) #4
  %10 = load %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %cmp29 = icmp eq %struct.rtx_def* %5, %10
  br i1 %cmp29, label %if.end33, label %if.then30

if.then30:                                        ; preds = %if.else
  %call32 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %5, %struct.rtx_def* %10) #4
  br label %if.end33

if.end33:                                         ; preds = %if.else, %if.then30, %if.then7
  %call34 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  br label %return

if.end35:                                         ; preds = %entry
  call void @ix86_expand_unary_operator(i32 129, i32 16, %struct.rtx_def** %arrayidx) #4
  %call36 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.end35, %if.end33
  %retval.0 = phi %struct.rtx_def* [ %call34, %if.end33 ], [ %call36, %if.end35 ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1060(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 129, i32 16, %struct.rtx_def* %1) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call2, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call8
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1061(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 129, i32 16, %struct.rtx_def* %1) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call2, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call8
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1062(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %2 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 6, %struct.rtx_def* %0, i32 0) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 6, %struct.rtx_def* %2, i32 0) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 86, i32 6, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 6, %struct.rtx_def* %1, i32 0) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 83, i32 6, %struct.rtx_def* %call4, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call9
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1063(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 129, i32 16, %struct.rtx_def* %1) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call) #4
  %call3 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call4
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1064(%struct.rtx_def** %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %call = tail call i64 @trunc_int_for_mode(i64 2147483647, i32 4) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call) #4
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 4
  store %struct.rtx_def* %call1, %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %add.ptr2 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %add.ptr3 = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  tail call void @split_di(%struct.rtx_def** %operands, i32 1, %struct.rtx_def** %add.ptr2, %struct.rtx_def** %add.ptr3) #4
  %0 = load %struct.rtx_def** %add.ptr3, align 8, !tbaa !1
  %1 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %call9 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %0) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 83, i32 4, %struct.rtx_def* %call9, %struct.rtx_def* %1) #4
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call10) #4
  %call12 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call13 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call12) #4
  %call14 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call11, %struct.rtx_def* %call13) #4
  %call15 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call14) #4
  %call16 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call15) #4
  %call17 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call17
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_absxf2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %operands = alloca [2 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [2 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [2 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  call void @ix86_expand_unary_operator(i32 129, i32 17, %struct.rtx_def** %arrayidx) #4
  %call = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_abstf2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %operands = alloca [2 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [2 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [2 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  call void @ix86_expand_unary_operator(i32 129, i32 18, %struct.rtx_def** %arrayidx) #4
  %call = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1067(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 129, i32 17, %struct.rtx_def* %1) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call) #4
  %call3 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call4
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1068(%struct.rtx_def** nocapture %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %call = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 -32769) #4
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %call2 = tail call i32 @true_regnum(%struct.rtx_def* %0) #4
  %1 = load i32* @target_flags, align 4, !tbaa !5
  %and = lshr i32 %1, 25
  %2 = and i32 %and, 1
  %3 = add i32 %call2, 2
  %add = sub i32 %3, %2
  %call3 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 %add) #4
  store %struct.rtx_def* %call3, %struct.rtx_def** %operands, align 8, !tbaa !1
  %4 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %call7 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %call3) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 83, i32 4, %struct.rtx_def* %call7, %struct.rtx_def* %4) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call3, %struct.rtx_def* %call8) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call10) #4
  %call12 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call9, %struct.rtx_def* %call11) #4
  %call13 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call12) #4
  %call14 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call13) #4
  %call15 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call15
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1069(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 129, i32 18, %struct.rtx_def* %1) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call) #4
  %call3 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call4
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1070(%struct.rtx_def** nocapture %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %call = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 -32769) #4
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %call2 = tail call i32 @true_regnum(%struct.rtx_def* %0) #4
  %1 = load i32* @target_flags, align 4, !tbaa !5
  %and = lshr i32 %1, 25
  %2 = and i32 %and, 1
  %3 = add i32 %call2, 2
  %add = sub i32 %3, %2
  %call3 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 %add) #4
  store %struct.rtx_def* %call3, %struct.rtx_def** %operands, align 8, !tbaa !1
  %4 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %call7 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %call3) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 83, i32 4, %struct.rtx_def* %call7, %struct.rtx_def* %4) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call3, %struct.rtx_def* %call8) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call10) #4
  %call12 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call9, %struct.rtx_def* %call11) #4
  %call13 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call12) #4
  %call14 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call13) #4
  %call15 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call15
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_one_cmpldi2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %operands = alloca [2 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [2 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [2 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  call void @ix86_expand_unary_operator(i32 86, i32 5, %struct.rtx_def** %arrayidx) #4
  %call = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1072(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 55, i32 17) #4
  %2 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !tbaa !1
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 85, i32 5, %struct.rtx_def* %1, %struct.rtx_def* %2) #4
  %3 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 74, i32 55, %struct.rtx_def* %call2, %struct.rtx_def* %3) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %1) #4
  %4 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !tbaa !1
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 85, i32 5, %struct.rtx_def* %call5, %struct.rtx_def* %4) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call4, %struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call8) #4
  %call10 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call11
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_one_cmplsi2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %operands = alloca [2 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [2 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [2 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  call void @ix86_expand_unary_operator(i32 86, i32 4, %struct.rtx_def** %arrayidx) #4
  %call = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1074(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 55, i32 17) #4
  %2 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !tbaa !1
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 85, i32 4, %struct.rtx_def* %1, %struct.rtx_def* %2) #4
  %3 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 74, i32 55, %struct.rtx_def* %call2, %struct.rtx_def* %3) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %1) #4
  %4 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !tbaa !1
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 85, i32 4, %struct.rtx_def* %call5, %struct.rtx_def* %4) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call4, %struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call8) #4
  %call10 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call11
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1075(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 55, i32 17) #4
  %2 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !tbaa !1
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 85, i32 4, %struct.rtx_def* %1, %struct.rtx_def* %2) #4
  %3 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 74, i32 55, %struct.rtx_def* %call2, %struct.rtx_def* %3) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %1) #4
  %4 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !tbaa !1
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 85, i32 4, %struct.rtx_def* %call5, %struct.rtx_def* %4) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 121, i32 5, %struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call4, %struct.rtx_def* %call8) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call9) #4
  %call11 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call10) #4
  %call12 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call12
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_one_cmplhi2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %operands = alloca [2 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [2 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [2 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  call void @ix86_expand_unary_operator(i32 86, i32 3, %struct.rtx_def** %arrayidx) #4
  %call = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1077(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 55, i32 17) #4
  %2 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !tbaa !1
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 85, i32 3, %struct.rtx_def* %1, %struct.rtx_def* %2) #4
  %3 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 74, i32 55, %struct.rtx_def* %call2, %struct.rtx_def* %3) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %1) #4
  %4 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !tbaa !1
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 85, i32 3, %struct.rtx_def* %call5, %struct.rtx_def* %4) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call4, %struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call8) #4
  %call10 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call11
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_one_cmplqi2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %operands = alloca [2 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [2 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [2 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  call void @ix86_expand_unary_operator(i32 86, i32 2, %struct.rtx_def** %arrayidx) #4
  %call = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1079(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 55, i32 17) #4
  %2 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !tbaa !1
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 85, i32 2, %struct.rtx_def* %1, %struct.rtx_def* %2) #4
  %3 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 74, i32 55, %struct.rtx_def* %call2, %struct.rtx_def* %3) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %1) #4
  %4 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !tbaa !1
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 85, i32 2, %struct.rtx_def* %call5, %struct.rtx_def* %4) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call4, %struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call8) #4
  %call10 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call11
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_ashldi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %operands = alloca [3 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 2
  store %struct.rtx_def* %operand2, %struct.rtx_def** %arrayidx2, align 16, !tbaa !1
  %0 = load i32* @target_flags, align 4, !tbaa !5
  %and = and i32 %0, 33554432
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %1 = load i32* @x86_cmove, align 4, !tbaa !5
  %2 = load i32* @ix86_arch, align 4, !tbaa !5
  %shl = shl i32 1, %2
  %and3 = and i32 %shl, %1
  %and5 = and i32 %0, 327680
  %3 = or i32 %and3, %and5
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %if.end, label %land.lhs.true6

land.lhs.true6:                                   ; preds = %land.lhs.true
  %call = call i32 @immediate_operand(%struct.rtx_def* %operand2, i32 2) #4
  %tobool8 = icmp eq i32 %call, 0
  br i1 %tobool8, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true6
  %5 = load %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %6 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %7 = load %struct.rtx_def** %arrayidx2, align 16, !tbaa !1
  %call.i = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 87, i32 5, %struct.rtx_def* %6, %struct.rtx_def* %7) #4
  %call1.i = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %5, %struct.rtx_def* %call.i) #4
  %call2.i = call %struct.rtx_def* @gen_rtx_fmt_0(i32 62, i32 4) #4
  %call3.i = call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call2.i) #4
  %call4.i = call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call5.i = call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call4.i) #4
  %call6.i = call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 3, %struct.rtx_def* %call1.i, %struct.rtx_def* %call3.i, %struct.rtx_def* %call5.i) #4
  %call7.i = call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call6.i) #4
  %call13 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call7.i) #4
  %call14 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  br label %return

if.end:                                           ; preds = %land.lhs.true, %land.lhs.true6, %entry
  call void @ix86_expand_binary_operator(i32 87, i32 5, %struct.rtx_def** %arrayidx) #4
  %call15 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call15, %if.end ], [ %call14, %if.then ]
  ret %struct.rtx_def* %retval.0
}

declare i32 @immediate_operand(%struct.rtx_def*, i32) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1081(%struct.rtx_def** nocapture %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %0 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %rtwint = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 0, i32 0
  %1 = load i64* %rtwint, align 8, !tbaa !7
  %sh_prom = trunc i64 %1 to i32
  %shl = shl i32 1, %sh_prom
  %conv = sext i32 %shl to i64
  %call = tail call i64 @trunc_int_for_mode(i64 %conv, i32 5) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call) #4
  store %struct.rtx_def* %call2, %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %2 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx5 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %3 = load %struct.rtx_def** %arrayidx5, align 8, !tbaa !1
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 78, i32 5, %struct.rtx_def* %3, %struct.rtx_def* %call2) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %2, %struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call8) #4
  %call10 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call10
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1082(%struct.rtx_def** %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  %0 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  tail call void @ix86_split_ashldi(%struct.rtx_def** %operands, %struct.rtx_def* %0) #4
  %call = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

declare void @ix86_split_ashldi(%struct.rtx_def**, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1083(%struct.rtx_def** %operands) #0 {
entry:
  tail call void @start_sequence() #4
  tail call void @ix86_split_ashldi(%struct.rtx_def** %operands, %struct.rtx_def* null) #4
  %call = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_x86_shift_adj_1(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* %operand3) #0 {
entry:
  tail call void @start_sequence() #4
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 56, i32 17) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 32) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 83, i32 2, %struct.rtx_def* %operand2, %struct.rtx_def* %call1) #4
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 74, i32 56, %struct.rtx_def* %call2, %struct.rtx_def* %0) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_REG(i32 56, i32 17) #4
  %1 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 102, i32 0, %struct.rtx_def* %call6, %struct.rtx_def* %1) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 72, i32 4, %struct.rtx_def* %call7, %struct.rtx_def* %operand1, %struct.rtx_def* %operand0) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call8) #4
  %call10 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtx_def* @gen_rtx_REG(i32 56, i32 17) #4
  %2 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call12 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 102, i32 0, %struct.rtx_def* %call11, %struct.rtx_def* %2) #4
  %call13 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 72, i32 4, %struct.rtx_def* %call12, %struct.rtx_def* %operand3, %struct.rtx_def* %operand1) #4
  %call14 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand1, %struct.rtx_def* %call13) #4
  %call15 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call14) #4
  %call16 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call16
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_x86_shift_adj_2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  tail call void @start_sequence() #4
  %call = tail call %struct.rtx_def* @gen_label_rtx() #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 32) #4
  %call.i = tail call %struct.rtx_def* @gen_rtx_REG(i32 56, i32 17) #4
  %call1.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 83, i32 2, %struct.rtx_def* %operand2, %struct.rtx_def* %call4) #4
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call2.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 74, i32 56, %struct.rtx_def* %call1.i, %struct.rtx_def* %0) #4
  %call3.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call.i, %struct.rtx_def* %call2.i) #4
  %call6 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call3.i) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_REG(i32 56, i32 17) #4
  %1 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 103, i32 0, %struct.rtx_def* %call7, %struct.rtx_def* %1) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_u00(i32 67, i32 0, %struct.rtx_def* %call) #4
  %2 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 8, !tbaa !1
  %call10 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 72, i32 0, %struct.rtx_def* %call8, %struct.rtx_def* %call9, %struct.rtx_def* %2) #4
  %3 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 8, !tbaa !1
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %3, %struct.rtx_def* %call10) #4
  %call12 = tail call %struct.rtx_def* @emit_jump_insn(%struct.rtx_def* %call11) #4
  %4 = getelementptr inbounds %struct.rtx_def* %call12, i64 0, i32 1, i64 7, i32 0
  %call.c = ptrtoint %struct.rtx_def* %call to i64
  store i64 %call.c, i64* %4, align 8, !tbaa !1
  %call16 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #4
  %5 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call18 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %operand1, %struct.rtx_def* %5) #4
  %call19 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call) #4
  %arrayidx21 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 3
  %rtint = bitcast %union.rtunion_def* %arrayidx21 to i32*
  store i32 1, i32* %rtint, align 4, !tbaa !5
  %call22 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call22
}

declare %struct.rtx_def* @gen_label_rtx() #1

declare %struct.rtx_def* @emit_jump_insn(%struct.rtx_def*) #1

declare %struct.rtx_def* @emit_label(%struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_ashlsi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %operands = alloca [3 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 2
  store %struct.rtx_def* %operand2, %struct.rtx_def** %arrayidx2, align 16, !tbaa !1
  call void @ix86_expand_binary_operator(i32 87, i32 4, %struct.rtx_def** %arrayidx) #4
  %call = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1087(%struct.rtx_def** nocapture %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_lowpart(i32 4, %struct.rtx_def* %0) #4
  store %struct.rtx_def* %call, %struct.rtx_def** %operands, align 8, !tbaa !1
  %1 = load i32* @target_flags, align 4, !tbaa !5
  %and = lshr i32 %1, 25
  %2 = and i32 %and, 1
  %3 = or i32 %2, 4
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %4 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %call3 = tail call %struct.rtx_def* @gen_lowpart(i32 %3, %struct.rtx_def* %4) #4
  store %struct.rtx_def* %call3, %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %arrayidx5 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %5 = load %struct.rtx_def** %arrayidx5, align 8, !tbaa !1
  %rtwint = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 1, i64 0, i32 0
  %6 = load i64* %rtwint, align 8, !tbaa !7
  %sh_prom = trunc i64 %6 to i32
  %shl = shl i32 1, %sh_prom
  %conv = sext i32 %shl to i64
  %7 = load i32* @target_flags, align 4, !tbaa !5
  %and7 = lshr i32 %7, 25
  %8 = and i32 %and7, 1
  %9 = or i32 %8, 4
  %call10 = tail call i64 @trunc_int_for_mode(i64 %conv, i32 %9) #4
  %call11 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call10) #4
  store %struct.rtx_def* %call11, %struct.rtx_def** %arrayidx5, align 8, !tbaa !1
  %10 = load i32* @target_flags, align 4, !tbaa !5
  %and13 = lshr i32 %10, 25
  %11 = and i32 %and13, 1
  %12 = or i32 %11, 4
  %13 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %call18 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 78, i32 %12, %struct.rtx_def* %13, %struct.rtx_def* %call11) #4
  %14 = load i32* @target_flags, align 4, !tbaa !5
  %and19 = and i32 %14, 33554432
  %tobool20 = icmp eq i32 %and19, 0
  br i1 %tobool20, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %call23 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 4, %struct.rtx_def* %call18, i32 0) #4
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %pat.0 = phi %struct.rtx_def* [ %call23, %if.then ], [ %call18, %entry ]
  %15 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %call25 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %15, %struct.rtx_def* %pat.0) #4
  %call26 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call25) #4
  %call27 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call27
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1088(%struct.rtx_def** nocapture %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load i32* @target_flags, align 4, !tbaa !5
  %and = lshr i32 %0, 25
  %1 = and i32 %and, 1
  %2 = or i32 %1, 4
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %3 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_lowpart(i32 %2, %struct.rtx_def* %3) #4
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %4 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %rtwint = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 1, i64 0, i32 0
  %5 = load i64* %rtwint, align 8, !tbaa !7
  %sh_prom = trunc i64 %5 to i32
  %shl = shl i32 1, %sh_prom
  %conv = sext i32 %shl to i64
  %6 = load i32* @target_flags, align 4, !tbaa !5
  %and4 = lshr i32 %6, 25
  %7 = and i32 %and4, 1
  %8 = or i32 %7, 4
  %call7 = tail call i64 @trunc_int_for_mode(i64 %conv, i32 %8) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call7) #4
  store %struct.rtx_def* %call8, %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %9 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %10 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %call13 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 78, i32 4, %struct.rtx_def* %10, %struct.rtx_def* %call8) #4
  %call14 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 4, %struct.rtx_def* %call13, i32 0) #4
  %call15 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 121, i32 5, %struct.rtx_def* %call14) #4
  %call16 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %9, %struct.rtx_def* %call15) #4
  %call17 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call16) #4
  %call18 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call18
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_ashlhi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %operands = alloca [3 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 2
  store %struct.rtx_def* %operand2, %struct.rtx_def** %arrayidx2, align 16, !tbaa !1
  call void @ix86_expand_binary_operator(i32 87, i32 3, %struct.rtx_def** %arrayidx) #4
  %call = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_ashlqi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %operands = alloca [3 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 2
  store %struct.rtx_def* %operand2, %struct.rtx_def** %arrayidx2, align 16, !tbaa !1
  call void @ix86_expand_binary_operator(i32 87, i32 2, %struct.rtx_def** %arrayidx) #4
  %call = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_ashrdi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %operands = alloca [3 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 2
  store %struct.rtx_def* %operand2, %struct.rtx_def** %arrayidx2, align 16, !tbaa !1
  %0 = load i32* @target_flags, align 4, !tbaa !5
  %and = and i32 %0, 33554432
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %1 = load i32* @x86_cmove, align 4, !tbaa !5
  %2 = load i32* @ix86_arch, align 4, !tbaa !5
  %shl = shl i32 1, %2
  %and3 = and i32 %shl, %1
  %and5 = and i32 %0, 327680
  %3 = or i32 %and3, %and5
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %if.end, label %land.lhs.true6

land.lhs.true6:                                   ; preds = %land.lhs.true
  %call = call i32 @immediate_operand(%struct.rtx_def* %operand2, i32 2) #4
  %tobool8 = icmp eq i32 %call, 0
  br i1 %tobool8, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true6
  %5 = load %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %6 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %7 = load %struct.rtx_def** %arrayidx2, align 16, !tbaa !1
  %call.i = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 89, i32 5, %struct.rtx_def* %6, %struct.rtx_def* %7) #4
  %call1.i = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %5, %struct.rtx_def* %call.i) #4
  %call2.i = call %struct.rtx_def* @gen_rtx_fmt_0(i32 62, i32 4) #4
  %call3.i = call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call2.i) #4
  %call4.i = call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call5.i = call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call4.i) #4
  %call6.i = call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 3, %struct.rtx_def* %call1.i, %struct.rtx_def* %call3.i, %struct.rtx_def* %call5.i) #4
  %call7.i = call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call6.i) #4
  %call13 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call7.i) #4
  %call14 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  br label %return

if.end:                                           ; preds = %land.lhs.true, %land.lhs.true6, %entry
  call void @ix86_expand_binary_operator(i32 89, i32 5, %struct.rtx_def** %arrayidx) #4
  %call15 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call15, %if.end ], [ %call14, %if.then ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1092(%struct.rtx_def** %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  %0 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  tail call void @ix86_split_ashrdi(%struct.rtx_def** %operands, %struct.rtx_def* %0) #4
  %call = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

declare void @ix86_split_ashrdi(%struct.rtx_def**, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1093(%struct.rtx_def** %operands) #0 {
entry:
  tail call void @start_sequence() #4
  tail call void @ix86_split_ashrdi(%struct.rtx_def** %operands, %struct.rtx_def* null) #4
  %call = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_x86_shift_adj_3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  tail call void @start_sequence() #4
  %call = tail call %struct.rtx_def* @gen_label_rtx() #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 32) #4
  %call.i = tail call %struct.rtx_def* @gen_rtx_REG(i32 56, i32 17) #4
  %call1.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 83, i32 2, %struct.rtx_def* %operand2, %struct.rtx_def* %call4) #4
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call2.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 74, i32 56, %struct.rtx_def* %call1.i, %struct.rtx_def* %0) #4
  %call3.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call.i, %struct.rtx_def* %call2.i) #4
  %call6 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call3.i) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_REG(i32 56, i32 17) #4
  %1 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 103, i32 0, %struct.rtx_def* %call7, %struct.rtx_def* %1) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_u00(i32 67, i32 0, %struct.rtx_def* %call) #4
  %2 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 8, !tbaa !1
  %call10 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 72, i32 0, %struct.rtx_def* %call8, %struct.rtx_def* %call9, %struct.rtx_def* %2) #4
  %3 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 8, !tbaa !1
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %3, %struct.rtx_def* %call10) #4
  %call12 = tail call %struct.rtx_def* @emit_jump_insn(%struct.rtx_def* %call11) #4
  %4 = getelementptr inbounds %struct.rtx_def* %call12, i64 0, i32 1, i64 7, i32 0
  %call.c = ptrtoint %struct.rtx_def* %call to i64
  store i64 %call.c, i64* %4, align 8, !tbaa !1
  %call16 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #4
  %call19 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 31) #4
  %call.i34 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 89, i32 4, %struct.rtx_def* %operand1, %struct.rtx_def* %call19) #4
  %call1.i35 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand1, %struct.rtx_def* %call.i34) #4
  %call2.i36 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call3.i37 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call2.i36) #4
  %call4.i = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call1.i35, %struct.rtx_def* %call3.i37) #4
  %call5.i = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call4.i) #4
  %call21 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call5.i) #4
  %call22 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call) #4
  %arrayidx24 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 3
  %rtint = bitcast %union.rtunion_def* %arrayidx24 to i32*
  store i32 1, i32* %rtint, align 4, !tbaa !5
  %call25 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call25
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_ashrsi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %operands = alloca [3 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 2
  store %struct.rtx_def* %operand2, %struct.rtx_def** %arrayidx2, align 16, !tbaa !1
  call void @ix86_expand_binary_operator(i32 89, i32 4, %struct.rtx_def** %arrayidx) #4
  %call = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_ashrhi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %operands = alloca [3 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 2
  store %struct.rtx_def* %operand2, %struct.rtx_def** %arrayidx2, align 16, !tbaa !1
  call void @ix86_expand_binary_operator(i32 89, i32 3, %struct.rtx_def** %arrayidx) #4
  %call = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_ashrqi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %operands = alloca [3 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 2
  store %struct.rtx_def* %operand2, %struct.rtx_def** %arrayidx2, align 16, !tbaa !1
  call void @ix86_expand_binary_operator(i32 89, i32 2, %struct.rtx_def** %arrayidx) #4
  %call = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_lshrdi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %operands = alloca [3 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 2
  store %struct.rtx_def* %operand2, %struct.rtx_def** %arrayidx2, align 16, !tbaa !1
  %0 = load i32* @target_flags, align 4, !tbaa !5
  %and = and i32 %0, 33554432
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %1 = load i32* @x86_cmove, align 4, !tbaa !5
  %2 = load i32* @ix86_arch, align 4, !tbaa !5
  %shl = shl i32 1, %2
  %and3 = and i32 %shl, %1
  %and5 = and i32 %0, 327680
  %3 = or i32 %and3, %and5
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %if.end, label %land.lhs.true6

land.lhs.true6:                                   ; preds = %land.lhs.true
  %call = call i32 @immediate_operand(%struct.rtx_def* %operand2, i32 2) #4
  %tobool8 = icmp eq i32 %call, 0
  br i1 %tobool8, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true6
  %5 = load %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %6 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %7 = load %struct.rtx_def** %arrayidx2, align 16, !tbaa !1
  %call.i = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 90, i32 5, %struct.rtx_def* %6, %struct.rtx_def* %7) #4
  %call1.i = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %5, %struct.rtx_def* %call.i) #4
  %call2.i = call %struct.rtx_def* @gen_rtx_fmt_0(i32 62, i32 4) #4
  %call3.i = call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call2.i) #4
  %call4.i = call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call5.i = call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call4.i) #4
  %call6.i = call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 3, %struct.rtx_def* %call1.i, %struct.rtx_def* %call3.i, %struct.rtx_def* %call5.i) #4
  %call7.i = call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call6.i) #4
  %call13 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call7.i) #4
  %call14 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  br label %return

if.end:                                           ; preds = %land.lhs.true, %land.lhs.true6, %entry
  call void @ix86_expand_binary_operator(i32 90, i32 5, %struct.rtx_def** %arrayidx) #4
  %call15 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call15, %if.end ], [ %call14, %if.then ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1099(%struct.rtx_def** %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  %0 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  tail call void @ix86_split_lshrdi(%struct.rtx_def** %operands, %struct.rtx_def* %0) #4
  %call = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

declare void @ix86_split_lshrdi(%struct.rtx_def**, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1100(%struct.rtx_def** %operands) #0 {
entry:
  tail call void @start_sequence() #4
  tail call void @ix86_split_lshrdi(%struct.rtx_def** %operands, %struct.rtx_def* null) #4
  %call = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_lshrsi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %operands = alloca [3 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 2
  store %struct.rtx_def* %operand2, %struct.rtx_def** %arrayidx2, align 16, !tbaa !1
  call void @ix86_expand_binary_operator(i32 90, i32 4, %struct.rtx_def** %arrayidx) #4
  %call = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_lshrhi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %operands = alloca [3 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 2
  store %struct.rtx_def* %operand2, %struct.rtx_def** %arrayidx2, align 16, !tbaa !1
  call void @ix86_expand_binary_operator(i32 90, i32 3, %struct.rtx_def** %arrayidx) #4
  %call = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_lshrqi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %operands = alloca [3 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 2
  store %struct.rtx_def* %operand2, %struct.rtx_def** %arrayidx2, align 16, !tbaa !1
  call void @ix86_expand_binary_operator(i32 90, i32 2, %struct.rtx_def** %arrayidx) #4
  %call = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_rotldi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %operands = alloca [3 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 2
  store %struct.rtx_def* %operand2, %struct.rtx_def** %arrayidx2, align 16, !tbaa !1
  call void @ix86_expand_binary_operator(i32 88, i32 5, %struct.rtx_def** %arrayidx) #4
  %call = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_rotlsi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %operands = alloca [3 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 2
  store %struct.rtx_def* %operand2, %struct.rtx_def** %arrayidx2, align 16, !tbaa !1
  call void @ix86_expand_binary_operator(i32 88, i32 4, %struct.rtx_def** %arrayidx) #4
  %call = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_rotlhi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %operands = alloca [3 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 2
  store %struct.rtx_def* %operand2, %struct.rtx_def** %arrayidx2, align 16, !tbaa !1
  call void @ix86_expand_binary_operator(i32 88, i32 3, %struct.rtx_def** %arrayidx) #4
  %call = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_rotlqi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %operands = alloca [3 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 2
  store %struct.rtx_def* %operand2, %struct.rtx_def** %arrayidx2, align 16, !tbaa !1
  call void @ix86_expand_binary_operator(i32 88, i32 2, %struct.rtx_def** %arrayidx) #4
  %call = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_rotrdi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %operands = alloca [3 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 2
  store %struct.rtx_def* %operand2, %struct.rtx_def** %arrayidx2, align 16, !tbaa !1
  call void @ix86_expand_binary_operator(i32 91, i32 5, %struct.rtx_def** %arrayidx) #4
  %call = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_rotrsi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %operands = alloca [3 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 2
  store %struct.rtx_def* %operand2, %struct.rtx_def** %arrayidx2, align 16, !tbaa !1
  call void @ix86_expand_binary_operator(i32 91, i32 4, %struct.rtx_def** %arrayidx) #4
  %call = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_rotrhi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %operands = alloca [3 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 2
  store %struct.rtx_def* %operand2, %struct.rtx_def** %arrayidx2, align 16, !tbaa !1
  call void @ix86_expand_binary_operator(i32 91, i32 3, %struct.rtx_def** %arrayidx) #4
  %call = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_rotrqi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %operands = alloca [3 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 2
  store %struct.rtx_def* %operand2, %struct.rtx_def** %arrayidx2, align 16, !tbaa !1
  call void @ix86_expand_binary_operator(i32 91, i32 2, %struct.rtx_def** %arrayidx) #4
  %call = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_extv(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* %operand3) #0 {
entry:
  tail call void @start_sequence() #4
  %rtwint = getelementptr inbounds %struct.rtx_def* %operand2, i64 0, i32 1, i64 0, i32 0
  %0 = load i64* %rtwint, align 8, !tbaa !7
  %cmp = icmp eq i64 %0, 8
  br i1 %cmp, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %entry
  %rtwint9 = getelementptr inbounds %struct.rtx_def* %operand3, i64 0, i32 1, i64 0, i32 0
  %1 = load i64* %rtwint9, align 8, !tbaa !7
  %cmp10 = icmp eq i64 %1, 8
  br i1 %cmp10, label %if.end, label %if.then

if.then:                                          ; preds = %lor.lhs.false, %entry
  tail call void @end_sequence() #4
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %call = tail call i32 @register_operand(%struct.rtx_def* %operand1, i32 0) #4
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.then12, label %if.end13

if.then12:                                        ; preds = %if.end
  tail call void @end_sequence() #4
  br label %return

if.end13:                                         ; preds = %if.end
  %call18 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 132, i32 4, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* %operand3) #4
  %call19 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call18) #4
  %call20 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call19) #4
  %call21 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.end13, %if.then12, %if.then
  %retval.0 = phi %struct.rtx_def* [ null, %if.then ], [ %call21, %if.end13 ], [ null, %if.then12 ]
  ret %struct.rtx_def* %retval.0
}

declare i32 @register_operand(%struct.rtx_def*, i32) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_extzv(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* %operand3) #0 {
entry:
  tail call void @start_sequence() #4
  %rtwint = getelementptr inbounds %struct.rtx_def* %operand2, i64 0, i32 1, i64 0, i32 0
  %0 = load i64* %rtwint, align 8, !tbaa !7
  %cmp = icmp eq i64 %0, 8
  br i1 %cmp, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %entry
  %rtwint9 = getelementptr inbounds %struct.rtx_def* %operand3, i64 0, i32 1, i64 0, i32 0
  %1 = load i64* %rtwint9, align 8, !tbaa !7
  %cmp10 = icmp eq i64 %1, 8
  br i1 %cmp10, label %if.end, label %if.then

if.then:                                          ; preds = %lor.lhs.false, %entry
  tail call void @end_sequence() #4
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %call = tail call i32 @register_operand(%struct.rtx_def* %operand1, i32 0) #4
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.then12, label %if.end13

if.then12:                                        ; preds = %if.end
  tail call void @end_sequence() #4
  br label %return

if.end13:                                         ; preds = %if.end
  %call18 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 133, i32 4, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* %operand3) #4
  %call19 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call18) #4
  %call20 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call19) #4
  %call21 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.end13, %if.then12, %if.then
  %retval.0 = phi %struct.rtx_def* [ null, %if.then ], [ %call21, %if.end13 ], [ null, %if.then12 ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_insv(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* %operand3) #0 {
entry:
  tail call void @start_sequence() #4
  %rtwint = getelementptr inbounds %struct.rtx_def* %operand1, i64 0, i32 1, i64 0, i32 0
  %0 = load i64* %rtwint, align 8, !tbaa !7
  %cmp = icmp eq i64 %0, 8
  br i1 %cmp, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %entry
  %rtwint9 = getelementptr inbounds %struct.rtx_def* %operand2, i64 0, i32 1, i64 0, i32 0
  %1 = load i64* %rtwint9, align 8, !tbaa !7
  %cmp10 = icmp eq i64 %1, 8
  br i1 %cmp10, label %if.end, label %if.then

if.then:                                          ; preds = %lor.lhs.false, %entry
  tail call void @end_sequence() #4
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %call = tail call i32 @register_operand(%struct.rtx_def* %operand0, i32 0) #4
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.then12, label %if.end13

if.then12:                                        ; preds = %if.end
  tail call void @end_sequence() #4
  br label %return

if.end13:                                         ; preds = %if.end
  %call18 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 133, i32 4, %struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call19 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call18, %struct.rtx_def* %operand3) #4
  %call20 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call19) #4
  %call21 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.end13, %if.then12, %if.then
  %retval.0 = phi %struct.rtx_def* [ null, %if.then ], [ %call21, %if.end13 ], [ null, %if.then12 ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_seq(%struct.rtx_def* %operand0) #0 {
entry:
  tail call void @start_sequence() #4
  %call = tail call i32 @ix86_expand_setcc(i32 103, %struct.rtx_def* %operand0) #4
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %call2 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

if.else:                                          ; preds = %entry
  tail call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call2, %if.then ], [ null, %if.else ]
  ret %struct.rtx_def* %retval.0
}

declare i32 @ix86_expand_setcc(i32, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_sne(%struct.rtx_def* %operand0) #0 {
entry:
  tail call void @start_sequence() #4
  %call = tail call i32 @ix86_expand_setcc(i32 102, %struct.rtx_def* %operand0) #4
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %call2 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

if.else:                                          ; preds = %entry
  tail call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call2, %if.then ], [ null, %if.else ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_sgt(%struct.rtx_def* %operand0) #0 {
entry:
  tail call void @start_sequence() #4
  %call = tail call i32 @ix86_expand_setcc(i32 105, %struct.rtx_def* %operand0) #4
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %call2 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

if.else:                                          ; preds = %entry
  tail call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call2, %if.then ], [ null, %if.else ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_sgtu(%struct.rtx_def* %operand0) #0 {
entry:
  tail call void @start_sequence() #4
  %call = tail call i32 @ix86_expand_setcc(i32 109, %struct.rtx_def* %operand0) #4
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %call2 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

if.else:                                          ; preds = %entry
  tail call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call2, %if.then ], [ null, %if.else ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_slt(%struct.rtx_def* %operand0) #0 {
entry:
  tail call void @start_sequence() #4
  %call = tail call i32 @ix86_expand_setcc(i32 107, %struct.rtx_def* %operand0) #4
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %call2 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

if.else:                                          ; preds = %entry
  tail call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call2, %if.then ], [ null, %if.else ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_sltu(%struct.rtx_def* %operand0) #0 {
entry:
  tail call void @start_sequence() #4
  %call = tail call i32 @ix86_expand_setcc(i32 111, %struct.rtx_def* %operand0) #4
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %call2 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

if.else:                                          ; preds = %entry
  tail call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call2, %if.then ], [ null, %if.else ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_sge(%struct.rtx_def* %operand0) #0 {
entry:
  tail call void @start_sequence() #4
  %call = tail call i32 @ix86_expand_setcc(i32 104, %struct.rtx_def* %operand0) #4
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %call2 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

if.else:                                          ; preds = %entry
  tail call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call2, %if.then ], [ null, %if.else ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_sgeu(%struct.rtx_def* %operand0) #0 {
entry:
  tail call void @start_sequence() #4
  %call = tail call i32 @ix86_expand_setcc(i32 108, %struct.rtx_def* %operand0) #4
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %call2 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

if.else:                                          ; preds = %entry
  tail call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call2, %if.then ], [ null, %if.else ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_sle(%struct.rtx_def* %operand0) #0 {
entry:
  tail call void @start_sequence() #4
  %call = tail call i32 @ix86_expand_setcc(i32 106, %struct.rtx_def* %operand0) #4
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %call2 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

if.else:                                          ; preds = %entry
  tail call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call2, %if.then ], [ null, %if.else ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_sleu(%struct.rtx_def* %operand0) #0 {
entry:
  tail call void @start_sequence() #4
  %call = tail call i32 @ix86_expand_setcc(i32 110, %struct.rtx_def* %operand0) #4
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %call2 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

if.else:                                          ; preds = %entry
  tail call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call2, %if.then ], [ null, %if.else ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_sunordered(%struct.rtx_def* %operand0) #0 {
entry:
  tail call void @start_sequence() #4
  %call = tail call i32 @ix86_expand_setcc(i32 112, %struct.rtx_def* %operand0) #4
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %call2 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

if.else:                                          ; preds = %entry
  tail call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call2, %if.then ], [ null, %if.else ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_sordered(%struct.rtx_def* %operand0) #0 {
entry:
  tail call void @start_sequence() #4
  %call = tail call i32 @ix86_expand_setcc(i32 113, %struct.rtx_def* %operand0) #4
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %call2 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

if.else:                                          ; preds = %entry
  tail call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call2, %if.then ], [ null, %if.else ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_suneq(%struct.rtx_def* %operand0) #0 {
entry:
  tail call void @start_sequence() #4
  %call = tail call i32 @ix86_expand_setcc(i32 114, %struct.rtx_def* %operand0) #4
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %call2 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

if.else:                                          ; preds = %entry
  tail call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call2, %if.then ], [ null, %if.else ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_sunge(%struct.rtx_def* %operand0) #0 {
entry:
  tail call void @start_sequence() #4
  %call = tail call i32 @ix86_expand_setcc(i32 115, %struct.rtx_def* %operand0) #4
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %call2 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

if.else:                                          ; preds = %entry
  tail call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call2, %if.then ], [ null, %if.else ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_sungt(%struct.rtx_def* %operand0) #0 {
entry:
  tail call void @start_sequence() #4
  %call = tail call i32 @ix86_expand_setcc(i32 116, %struct.rtx_def* %operand0) #4
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %call2 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

if.else:                                          ; preds = %entry
  tail call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call2, %if.then ], [ null, %if.else ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_sunle(%struct.rtx_def* %operand0) #0 {
entry:
  tail call void @start_sequence() #4
  %call = tail call i32 @ix86_expand_setcc(i32 117, %struct.rtx_def* %operand0) #4
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %call2 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

if.else:                                          ; preds = %entry
  tail call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call2, %if.then ], [ null, %if.else ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_sunlt(%struct.rtx_def* %operand0) #0 {
entry:
  tail call void @start_sequence() #4
  %call = tail call i32 @ix86_expand_setcc(i32 118, %struct.rtx_def* %operand0) #4
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %call2 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

if.else:                                          ; preds = %entry
  tail call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call2, %if.then ], [ null, %if.else ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_sltgt(%struct.rtx_def* %operand0) #0 {
entry:
  tail call void @start_sequence() #4
  %call = tail call i32 @ix86_expand_setcc(i32 119, %struct.rtx_def* %operand0) #4
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %call2 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

if.else:                                          ; preds = %entry
  tail call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call2, %if.then ], [ null, %if.else ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1133(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %0 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %1 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 0
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, -16711681
  %bf.set = or i32 %bf.clear, 131072
  store i32 %bf.set, i32* %1, align 8
  %2 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %3 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %2, %struct.rtx_def* %3) #4
  %call3 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call) #4
  %call4 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call4
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1134(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %0 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %1 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 0
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, -16711681
  %bf.set = or i32 %bf.clear, 131072
  store i32 %bf.set, i32* %1, align 8
  %2 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %3 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %2, %struct.rtx_def* %3) #4
  %call3 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call) #4
  %call4 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call4
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1135(%struct.rtx_def** nocapture %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %0 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %0) #4
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %1 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 0
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, -16711681
  %bf.set = or i32 %bf.clear, 131072
  store i32 %bf.set, i32* %1, align 8
  %arrayidx2 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx2 to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %3 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 0
  %bf.load3 = load i32* %3, align 8
  %bf.lshr = lshr i32 %bf.load3, 16
  %bf.clear4 = and i32 %bf.lshr, 255
  %bf.clear4.off = add i32 %bf.clear4, -57
  %switch = icmp ult i32 %bf.clear4.off, 2
  %bf.clear16 = and i32 %bf.load, 65535
  br i1 %switch, label %cond.false, label %cond.true

cond.true:                                        ; preds = %entry
  %call14 = tail call i32 @reverse_condition(i32 %bf.clear16) #4
  br label %cond.end

cond.false:                                       ; preds = %entry
  %call17 = tail call i32 @reverse_condition_maybe_unordered(i32 %bf.clear16) #4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call14, %cond.true ], [ %call17, %cond.false ]
  %bf.load18 = load i32* %1, align 8
  %bf.value = and i32 %cond, 65535
  %bf.clear19 = and i32 %bf.load18, -65536
  %bf.set20 = or i32 %bf.clear19, %bf.value
  store i32 %bf.set20, i32* %1, align 8
  %call21 = tail call i32 @ix86_comparison_operator(%struct.rtx_def* %call, i32 0) #4
  %tobool = icmp eq i32 %call21, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end
  tail call void @end_sequence() #4
  br label %return

if.end:                                           ; preds = %cond.end
  %4 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %5 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %call24 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %4, %struct.rtx_def* %5) #4
  %call25 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call24) #4
  %call26 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call26, %if.end ], [ null, %if.then ]
  ret %struct.rtx_def* %retval.0
}

declare i32 @reverse_condition(i32) #1

declare i32 @reverse_condition_maybe_unordered(i32) #1

declare i32 @ix86_comparison_operator(%struct.rtx_def*, i32) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1136(%struct.rtx_def** nocapture %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %0 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %0) #4
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %1 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 0
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, -16711681
  %bf.set = or i32 %bf.clear, 131072
  store i32 %bf.set, i32* %1, align 8
  %arrayidx2 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx2 to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %3 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 0
  %bf.load3 = load i32* %3, align 8
  %bf.lshr = lshr i32 %bf.load3, 16
  %bf.clear4 = and i32 %bf.lshr, 255
  %bf.clear4.off = add i32 %bf.clear4, -57
  %switch = icmp ult i32 %bf.clear4.off, 2
  %bf.clear16 = and i32 %bf.load, 65535
  br i1 %switch, label %cond.false, label %cond.true

cond.true:                                        ; preds = %entry
  %call14 = tail call i32 @reverse_condition(i32 %bf.clear16) #4
  br label %cond.end

cond.false:                                       ; preds = %entry
  %call17 = tail call i32 @reverse_condition_maybe_unordered(i32 %bf.clear16) #4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call14, %cond.true ], [ %call17, %cond.false ]
  %bf.load18 = load i32* %1, align 8
  %bf.value = and i32 %cond, 65535
  %bf.clear19 = and i32 %bf.load18, -65536
  %bf.set20 = or i32 %bf.clear19, %bf.value
  store i32 %bf.set20, i32* %1, align 8
  %call21 = tail call i32 @ix86_comparison_operator(%struct.rtx_def* %call, i32 0) #4
  %tobool = icmp eq i32 %call21, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end
  tail call void @end_sequence() #4
  br label %return

if.end:                                           ; preds = %cond.end
  %4 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %5 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %call24 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %4, %struct.rtx_def* %5) #4
  %call25 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call24) #4
  %call26 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call26, %if.end ], [ null, %if.then ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_beq(%struct.rtx_def* %operand0) #0 {
entry:
  tail call void @start_sequence() #4
  tail call void @ix86_expand_branch(i32 103, %struct.rtx_def* %operand0) #4
  %call = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

declare void @ix86_expand_branch(i32, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_bne(%struct.rtx_def* %operand0) #0 {
entry:
  tail call void @start_sequence() #4
  tail call void @ix86_expand_branch(i32 102, %struct.rtx_def* %operand0) #4
  %call = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_bgt(%struct.rtx_def* %operand0) #0 {
entry:
  tail call void @start_sequence() #4
  tail call void @ix86_expand_branch(i32 105, %struct.rtx_def* %operand0) #4
  %call = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_bgtu(%struct.rtx_def* %operand0) #0 {
entry:
  tail call void @start_sequence() #4
  tail call void @ix86_expand_branch(i32 109, %struct.rtx_def* %operand0) #4
  %call = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_blt(%struct.rtx_def* %operand0) #0 {
entry:
  tail call void @start_sequence() #4
  tail call void @ix86_expand_branch(i32 107, %struct.rtx_def* %operand0) #4
  %call = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_bltu(%struct.rtx_def* %operand0) #0 {
entry:
  tail call void @start_sequence() #4
  tail call void @ix86_expand_branch(i32 111, %struct.rtx_def* %operand0) #4
  %call = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_bge(%struct.rtx_def* %operand0) #0 {
entry:
  tail call void @start_sequence() #4
  tail call void @ix86_expand_branch(i32 104, %struct.rtx_def* %operand0) #4
  %call = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_bgeu(%struct.rtx_def* %operand0) #0 {
entry:
  tail call void @start_sequence() #4
  tail call void @ix86_expand_branch(i32 108, %struct.rtx_def* %operand0) #4
  %call = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_ble(%struct.rtx_def* %operand0) #0 {
entry:
  tail call void @start_sequence() #4
  tail call void @ix86_expand_branch(i32 106, %struct.rtx_def* %operand0) #4
  %call = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_bleu(%struct.rtx_def* %operand0) #0 {
entry:
  tail call void @start_sequence() #4
  tail call void @ix86_expand_branch(i32 110, %struct.rtx_def* %operand0) #4
  %call = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_bunordered(%struct.rtx_def* %operand0) #0 {
entry:
  tail call void @start_sequence() #4
  tail call void @ix86_expand_branch(i32 112, %struct.rtx_def* %operand0) #4
  %call = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_bordered(%struct.rtx_def* %operand0) #0 {
entry:
  tail call void @start_sequence() #4
  tail call void @ix86_expand_branch(i32 113, %struct.rtx_def* %operand0) #4
  %call = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_buneq(%struct.rtx_def* %operand0) #0 {
entry:
  tail call void @start_sequence() #4
  tail call void @ix86_expand_branch(i32 114, %struct.rtx_def* %operand0) #4
  %call = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_bunge(%struct.rtx_def* %operand0) #0 {
entry:
  tail call void @start_sequence() #4
  tail call void @ix86_expand_branch(i32 115, %struct.rtx_def* %operand0) #4
  %call = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_bungt(%struct.rtx_def* %operand0) #0 {
entry:
  tail call void @start_sequence() #4
  tail call void @ix86_expand_branch(i32 116, %struct.rtx_def* %operand0) #4
  %call = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_bunle(%struct.rtx_def* %operand0) #0 {
entry:
  tail call void @start_sequence() #4
  tail call void @ix86_expand_branch(i32 117, %struct.rtx_def* %operand0) #4
  %call = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_bunlt(%struct.rtx_def* %operand0) #0 {
entry:
  tail call void @start_sequence() #4
  tail call void @ix86_expand_branch(i32 118, %struct.rtx_def* %operand0) #4
  %call = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_bltgt(%struct.rtx_def* %operand0) #0 {
entry:
  tail call void @start_sequence() #4
  tail call void @ix86_expand_branch(i32 119, %struct.rtx_def* %operand0) #4
  %call = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1155(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %1 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 0
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, -16711681
  store i32 %bf.clear, i32* %1, align 8
  %2 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %3 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %4 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_u00(i32 67, i32 0, %struct.rtx_def* %3) #4
  %5 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 8, !tbaa !1
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 72, i32 0, %struct.rtx_def* %2, %struct.rtx_def* %call, %struct.rtx_def* %5) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %4, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @emit_jump_insn(%struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call6
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1156(%struct.rtx_def** nocapture %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %0) #4
  store %struct.rtx_def* %call, %struct.rtx_def** %operands, align 8, !tbaa !1
  %1 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 0
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, -16711681
  store i32 %bf.clear, i32* %1, align 8
  %arrayidx2 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx2 to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %3 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 0
  %bf.load3 = load i32* %3, align 8
  %bf.lshr = lshr i32 %bf.load3, 16
  %bf.clear4 = and i32 %bf.lshr, 255
  %bf.clear4.off = add i32 %bf.clear4, -57
  %switch = icmp ult i32 %bf.clear4.off, 2
  %bf.clear16 = and i32 %bf.load, 65535
  br i1 %switch, label %cond.false, label %cond.true

cond.true:                                        ; preds = %entry
  %call14 = tail call i32 @reverse_condition(i32 %bf.clear16) #4
  br label %cond.end

cond.false:                                       ; preds = %entry
  %call17 = tail call i32 @reverse_condition_maybe_unordered(i32 %bf.clear16) #4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call14, %cond.true ], [ %call17, %cond.false ]
  %bf.load18 = load i32* %1, align 8
  %bf.value = and i32 %cond, 65535
  %bf.clear19 = and i32 %bf.load18, -65536
  %bf.set = or i32 %bf.clear19, %bf.value
  store i32 %bf.set, i32* %1, align 8
  %call20 = tail call i32 @ix86_comparison_operator(%struct.rtx_def* %call, i32 0) #4
  %tobool = icmp eq i32 %call20, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end
  tail call void @end_sequence() #4
  br label %return

if.end:                                           ; preds = %cond.end
  %4 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx22 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %5 = load %struct.rtx_def** %arrayidx22, align 8, !tbaa !1
  %6 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 8, !tbaa !1
  %call23 = tail call %struct.rtx_def* @gen_rtx_fmt_u00(i32 67, i32 0, %struct.rtx_def* %5) #4
  %7 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 8, !tbaa !1
  %call24 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 72, i32 0, %struct.rtx_def* %4, %struct.rtx_def* %call23, %struct.rtx_def* %7) #4
  %call25 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %6, %struct.rtx_def* %call24) #4
  %call26 = tail call %struct.rtx_def* @emit_jump_insn(%struct.rtx_def* %call25) #4
  %call27 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call27, %if.end ], [ null, %if.then ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1157(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %1 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 0
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %2 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %3 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %arrayidx3 = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  %4 = load %struct.rtx_def** %arrayidx3, align 8, !tbaa !1
  %arrayidx4 = getelementptr inbounds %struct.rtx_def** %operands, i64 4
  %5 = load %struct.rtx_def** %arrayidx4, align 8, !tbaa !1
  tail call void @ix86_split_fp_branch(i32 %bf.clear, %struct.rtx_def* %2, %struct.rtx_def* %3, %struct.rtx_def* %4, %struct.rtx_def* %5, %struct.rtx_def* null) #4
  %call = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

declare void @ix86_split_fp_branch(i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1158(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %1 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 0
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %2 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %3 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %arrayidx3 = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  %4 = load %struct.rtx_def** %arrayidx3, align 8, !tbaa !1
  %arrayidx4 = getelementptr inbounds %struct.rtx_def** %operands, i64 4
  %5 = load %struct.rtx_def** %arrayidx4, align 8, !tbaa !1
  %arrayidx5 = getelementptr inbounds %struct.rtx_def** %operands, i64 5
  %6 = load %struct.rtx_def** %arrayidx5, align 8, !tbaa !1
  tail call void @ix86_split_fp_branch(i32 %bf.clear, %struct.rtx_def* %2, %struct.rtx_def* %3, %struct.rtx_def* %4, %struct.rtx_def* %5, %struct.rtx_def* %6) #4
  %call = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_indirect_jump(%struct.rtx_def* %operand0) #0 {
entry:
  %0 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %operand0) #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_tablejump(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load i32* @flag_pic, align 4, !tbaa !5
  %tobool = icmp eq i32 %0, 0
  br i1 %tobool, label %if.end19, label %if.then

if.then:                                          ; preds = %entry
  %1 = load i32* @target_flags, align 4, !tbaa !5
  %and = and i32 %1, 33554432
  %tobool2 = icmp eq i32 %and, 0
  %2 = lshr exact i32 %and, 25
  %3 = or i32 %2, 4
  br i1 %tobool2, label %if.else, label %if.then3

if.then3:                                         ; preds = %if.then
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_u00(i32 67, i32 %3, %struct.rtx_def* %operand1) #4
  %call11 = tail call %struct.rtx_def* @expand_simple_binop(i32 %3, i32 75, %struct.rtx_def* %operand0, %struct.rtx_def* %call, %struct.rtx_def* null, i32 0, i32 0) #4
  br label %if.end19

if.else:                                          ; preds = %if.then
  %4 = load %struct.rtx_def** @pic_offset_table_rtx, align 8, !tbaa !1
  %call17 = tail call %struct.rtx_def* @expand_simple_binop(i32 %3, i32 76, %struct.rtx_def* %4, %struct.rtx_def* %operand0, %struct.rtx_def* null, i32 1, i32 0) #4
  %5 = load %struct.function** @cfun, align 8, !tbaa !1
  %uses_pic_offset_table = getelementptr inbounds %struct.function* %5, i64 0, i32 56
  %6 = bitcast i24* %uses_pic_offset_table to i32*
  %bf.load = load i32* %6, align 8
  %bf.set = or i32 %bf.load, 2097152
  store i32 %bf.set, i32* %6, align 8
  br label %if.end19

if.end19:                                         ; preds = %entry, %if.then3, %if.else
  %operands.sroa.0.0 = phi %struct.rtx_def* [ %call11, %if.then3 ], [ %call17, %if.else ], [ %operand0, %entry ]
  %7 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 8, !tbaa !1
  %call22 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %7, %struct.rtx_def* %operands.sroa.0.0) #4
  %call23 = tail call %struct.rtx_def* @gen_rtx_fmt_u00(i32 67, i32 0, %struct.rtx_def* %operand1) #4
  %call24 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %call23) #4
  %call25 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call22, %struct.rtx_def* %call24) #4
  %call26 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call25) #4
  %call27 = tail call %struct.rtx_def* @emit_jump_insn(%struct.rtx_def* %call26) #4
  %call28 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call28
}

declare %struct.rtx_def* @expand_simple_binop(i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32, i32) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_doloop_end(%struct.rtx_def* %operand0, %struct.rtx_def* nocapture readnone %operand1, %struct.rtx_def* nocapture readnone %operand2, %struct.rtx_def* nocapture readonly %operand3, %struct.rtx_def* %operand4) #0 {
entry:
  tail call void @start_sequence() #4
  %rtwint = getelementptr inbounds %struct.rtx_def* %operand3, i64 0, i32 1, i64 0, i32 0
  %0 = load i64* %rtwint, align 8, !tbaa !7
  %cmp = icmp sgt i64 %0, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @end_sequence() #4
  br label %cleanup

if.end:                                           ; preds = %entry
  %1 = getelementptr inbounds %struct.rtx_def* %operand0, i64 0, i32 0
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 16711680
  %cmp8 = icmp eq i32 %bf.clear, 262144
  br i1 %cmp8, label %if.end10, label %if.then9

if.then9:                                         ; preds = %if.end
  tail call void @end_sequence() #4
  br label %cleanup

if.end10:                                         ; preds = %if.end
  %call = tail call %struct.rtx_def* @gen_doloop_end_internal(%struct.rtx_def* %operand4, %struct.rtx_def* %operand0, %struct.rtx_def* %operand0)
  %call14 = tail call %struct.rtx_def* @emit_jump_insn(%struct.rtx_def* %call) #4
  %call15 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %cleanup

cleanup:                                          ; preds = %if.end10, %if.then9, %if.then
  %retval.0 = phi %struct.rtx_def* [ null, %if.then ], [ null, %if.then9 ], [ %call15, %if.end10 ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1162(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 56, i32 17) #4
  %2 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !tbaa !1
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %1, %struct.rtx_def* %2) #4
  %3 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 74, i32 56, %struct.rtx_def* %call2, %struct.rtx_def* %3) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %1) #4
  %call6 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %1) #4
  %4 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !tbaa !1
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %call6, %struct.rtx_def* %4) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call5, %struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call4, %struct.rtx_def* %call8) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call9) #4
  %call11 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call10) #4
  %5 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 8, !tbaa !1
  %call12 = tail call %struct.rtx_def* @gen_rtx_REG(i32 56, i32 17) #4
  %6 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call13 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 102, i32 0, %struct.rtx_def* %call12, %struct.rtx_def* %6) #4
  %7 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 8, !tbaa !1
  %call14 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 72, i32 0, %struct.rtx_def* %call13, %struct.rtx_def* %0, %struct.rtx_def* %7) #4
  %call15 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %5, %struct.rtx_def* %call14) #4
  %call16 = tail call %struct.rtx_def* @emit_jump_insn(%struct.rtx_def* %call15) #4
  %call17 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call17
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1163(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %2 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %arrayidx3 = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  %3 = load %struct.rtx_def** %arrayidx3, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %3, %struct.rtx_def* %1) #4
  %call4 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_REG(i32 56, i32 17) #4
  %call6 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %3) #4
  %4 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !tbaa !1
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %call6, %struct.rtx_def* %4) #4
  %5 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 74, i32 56, %struct.rtx_def* %call7, %struct.rtx_def* %5) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call5, %struct.rtx_def* %call8) #4
  %call10 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %3) #4
  %call11 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %3) #4
  %6 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !tbaa !1
  %call12 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %call11, %struct.rtx_def* %6) #4
  %call13 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call10, %struct.rtx_def* %call12) #4
  %call14 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call9, %struct.rtx_def* %call13) #4
  %call15 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call14) #4
  %call16 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call15) #4
  %call17 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %3) #4
  %call18 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %2, %struct.rtx_def* %call17) #4
  %call19 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call18) #4
  %7 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 8, !tbaa !1
  %call20 = tail call %struct.rtx_def* @gen_rtx_REG(i32 56, i32 17) #4
  %8 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call21 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 102, i32 0, %struct.rtx_def* %call20, %struct.rtx_def* %8) #4
  %9 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 8, !tbaa !1
  %call22 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 72, i32 0, %struct.rtx_def* %call21, %struct.rtx_def* %0, %struct.rtx_def* %9) #4
  %call23 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %7, %struct.rtx_def* %call22) #4
  %call24 = tail call %struct.rtx_def* @emit_jump_insn(%struct.rtx_def* %call23) #4
  %call25 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call25
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_peephole2_1164(%struct.rtx_def* nocapture readnone %curr_insn, %struct.rtx_def** nocapture %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %1 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 0
  %bf.load = load i32* %1, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 %bf.clear, i32 17) #4
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 4
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  %2 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %arrayidx3 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx3 to i32*
  %3 = load i32* %rtuint, align 4, !tbaa !5
  %call4 = tail call %struct.rtx_def* @gen_rtx_REG(i32 2, i32 %3) #4
  %arrayidx5 = getelementptr inbounds %struct.rtx_def** %operands, i64 5
  store %struct.rtx_def* %call4, %struct.rtx_def** %arrayidx5, align 8, !tbaa !1
  %4 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  tail call void @ix86_expand_clear(%struct.rtx_def* %4) #4
  %5 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx9 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %6 = load %struct.rtx_def** %arrayidx9, align 8, !tbaa !1
  %7 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %8 = load %struct.rtx_def** %arrayidx5, align 8, !tbaa !1
  %call13 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %7, %struct.rtx_def* %5) #4
  %call14 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call13) #4
  %call15 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 64, i32 0, %struct.rtx_def* %8) #4
  %call16 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call15, %struct.rtx_def* %6) #4
  %call17 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call16) #4
  %call18 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call18
}

declare void @ix86_expand_clear(%struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_peephole2_1165(%struct.rtx_def* nocapture readnone %curr_insn, %struct.rtx_def** nocapture %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %1 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 0
  %bf.load = load i32* %1, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 %bf.clear, i32 17) #4
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 4
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  %2 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %arrayidx3 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx3 to i32*
  %3 = load i32* %rtuint, align 4, !tbaa !5
  %call4 = tail call %struct.rtx_def* @gen_rtx_REG(i32 2, i32 %3) #4
  %arrayidx5 = getelementptr inbounds %struct.rtx_def** %operands, i64 5
  store %struct.rtx_def* %call4, %struct.rtx_def** %arrayidx5, align 8, !tbaa !1
  %4 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  tail call void @ix86_expand_clear(%struct.rtx_def* %4) #4
  %5 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx9 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %6 = load %struct.rtx_def** %arrayidx9, align 8, !tbaa !1
  %7 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %8 = load %struct.rtx_def** %arrayidx5, align 8, !tbaa !1
  %call13 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %7, %struct.rtx_def* %5) #4
  %call14 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call13) #4
  %call15 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 64, i32 0, %struct.rtx_def* %8) #4
  %call16 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call15, %struct.rtx_def* %6) #4
  %call17 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call16) #4
  %call18 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call18
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_call_pop(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* nocapture readnone %operand2, %struct.rtx_def* %operand3) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %cmp = icmp eq %struct.rtx_def* %0, %operand3
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_call(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %1)
  %call7 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call) #4
  %call8 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

if.end:                                           ; preds = %entry
  %2 = load i32* @flag_pic, align 4, !tbaa !5
  %tobool = icmp eq i32 %2, 0
  %arrayidx26.pre = getelementptr inbounds %struct.rtx_def* %operand0, i64 0, i32 1, i64 0
  %rtx27.pre = bitcast %union.rtunion_def* %arrayidx26.pre to %struct.rtx_def**
  br i1 %tobool, label %if.end23, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end
  %3 = load %struct.rtx_def** %rtx27.pre, align 8, !tbaa !1
  %4 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 0
  %bf.load = load i32* %4, align 8
  %5 = and i32 %bf.load, 134283263
  %6 = icmp eq i32 %5, 68
  br i1 %6, label %if.then20, label %if.end23

if.then20:                                        ; preds = %land.lhs.true
  %7 = load %struct.function** @cfun, align 8, !tbaa !1
  %uses_pic_offset_table = getelementptr inbounds %struct.function* %7, i64 0, i32 56
  %8 = bitcast i24* %uses_pic_offset_table to i32*
  %bf.load21 = load i32* %8, align 8
  %bf.set = or i32 %bf.load21, 2097152
  store i32 %bf.set, i32* %8, align 8
  br label %if.end23

if.end23:                                         ; preds = %if.end, %if.then20, %land.lhs.true
  %9 = load %struct.rtx_def** %rtx27.pre, align 8, !tbaa !1
  %10 = load i32* @target_flags, align 4, !tbaa !5
  %and = lshr i32 %10, 25
  %11 = and i32 %and, 1
  %12 = or i32 %11, 4
  %call29 = tail call i32 @call_insn_operand(%struct.rtx_def* %9, i32 %12) #4
  %tobool30 = icmp eq i32 %call29, 0
  br i1 %tobool30, label %if.then31, label %if.end44

if.then31:                                        ; preds = %if.end23
  %13 = load i32* @target_flags, align 4, !tbaa !5
  %and32 = lshr i32 %13, 25
  %14 = and i32 %and32, 1
  %15 = or i32 %14, 4
  %16 = load %struct.rtx_def** %rtx27.pre, align 8, !tbaa !1
  %call39 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %15, %struct.rtx_def* %16) #4
  %17 = getelementptr inbounds %union.rtunion_def* %arrayidx26.pre, i64 0, i32 0
  %call39.c = ptrtoint %struct.rtx_def* %call39 to i64
  store i64 %call39.c, i64* %17, align 8, !tbaa !1
  br label %if.end44

if.end44:                                         ; preds = %if.end23, %if.then31
  %18 = load i32* @target_flags, align 4, !tbaa !5
  %and45 = and i32 %18, 33554432
  %tobool46 = icmp eq i32 %and45, 0
  br i1 %tobool46, label %if.end48, label %if.then47

if.then47:                                        ; preds = %if.end44
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str, i64 0, i64 0), i32 14203, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.gen_call_pop, i64 0, i64 0)) #5
  unreachable

if.end48:                                         ; preds = %if.end44
  %call53 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 50, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #4
  %call54 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call55 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call56 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %call55, %struct.rtx_def* %operand3) #4
  %call57 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call54, %struct.rtx_def* %call56) #4
  %call58 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call53, %struct.rtx_def* %call57) #4
  %call59 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call58) #4
  %call60 = tail call %struct.rtx_def* @emit_call_insn(%struct.rtx_def* %call59) #4
  %call61 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.end48, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call8, %if.then ], [ %call61, %if.end48 ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_call(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load i32* @flag_pic, align 4, !tbaa !5
  %tobool = icmp eq i32 %0, 0
  %arrayidx17.pre = getelementptr inbounds %struct.rtx_def* %operand0, i64 0, i32 1, i64 0
  %rtx18.pre = bitcast %union.rtunion_def* %arrayidx17.pre to %struct.rtx_def**
  br i1 %tobool, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.rtx_def** %rtx18.pre, align 8, !tbaa !1
  %2 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 0
  %bf.load = load i32* %2, align 8
  %3 = and i32 %bf.load, 134283263
  %4 = icmp eq i32 %3, 68
  br i1 %4, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %5 = load %struct.function** @cfun, align 8, !tbaa !1
  %uses_pic_offset_table = getelementptr inbounds %struct.function* %5, i64 0, i32 56
  %6 = bitcast i24* %uses_pic_offset_table to i32*
  %bf.load13 = load i32* %6, align 8
  %bf.set = or i32 %bf.load13, 2097152
  store i32 %bf.set, i32* %6, align 8
  br label %if.end

if.end:                                           ; preds = %entry, %if.then, %land.lhs.true
  %7 = load %struct.rtx_def** %rtx18.pre, align 8, !tbaa !1
  %8 = load i32* @target_flags, align 4, !tbaa !5
  %and = lshr i32 %8, 25
  %9 = and i32 %and, 1
  %10 = or i32 %9, 4
  %call = tail call i32 @call_insn_operand(%struct.rtx_def* %7, i32 %10) #4
  %tobool20 = icmp eq i32 %call, 0
  br i1 %tobool20, label %if.then21, label %if.end34

if.then21:                                        ; preds = %if.end
  %11 = load i32* @target_flags, align 4, !tbaa !5
  %and22 = lshr i32 %11, 25
  %12 = and i32 %and22, 1
  %13 = or i32 %12, 4
  %14 = load %struct.rtx_def** %rtx18.pre, align 8, !tbaa !1
  %call29 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %13, %struct.rtx_def* %14) #4
  %15 = getelementptr inbounds %union.rtunion_def* %arrayidx17.pre, i64 0, i32 0
  %call29.c = ptrtoint %struct.rtx_def* %call29 to i64
  store i64 %call29.c, i64* %15, align 8, !tbaa !1
  br label %if.end34

if.end34:                                         ; preds = %if.end, %if.then21
  %16 = load i32* @target_flags, align 4, !tbaa !5
  %and35 = and i32 %16, 33554432
  %tobool36 = icmp eq i32 %and35, 0
  br i1 %tobool36, label %if.end54, label %land.lhs.true37

land.lhs.true37:                                  ; preds = %if.end34
  %rtwint = getelementptr inbounds %struct.rtx_def* %operand2, i64 0, i32 1, i64 0, i32 0
  %17 = load i64* %rtwint, align 8, !tbaa !7
  %cmp41 = icmp sgt i64 %17, -1
  br i1 %cmp41, label %if.then42, label %if.end54

if.then42:                                        ; preds = %land.lhs.true37
  %call43 = tail call %struct.rtx_def* @gen_rtx_REG(i32 2, i32 0) #4
  %call45 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call43, %struct.rtx_def* %operand2) #4
  %call.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 50, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #4
  %call49 = tail call %struct.rtx_def* @emit_call_insn(%struct.rtx_def* %call.i) #4
  %arrayidx51 = getelementptr inbounds %struct.rtx_def* %call49, i64 0, i32 1, i64 7
  %rtx52 = bitcast %union.rtunion_def* %arrayidx51 to %struct.rtx_def**
  tail call void @use_reg(%struct.rtx_def** %rtx52, %struct.rtx_def* %call43) #4
  %call53 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

if.end54:                                         ; preds = %if.end34, %land.lhs.true37
  %call.i70 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 50, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #4
  %call58 = tail call %struct.rtx_def* @emit_call_insn(%struct.rtx_def* %call.i70) #4
  %call59 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.end54, %if.then42
  %retval.0 = phi %struct.rtx_def* [ %call53, %if.then42 ], [ %call59, %if.end54 ]
  ret %struct.rtx_def* %retval.0
}

declare i32 @call_insn_operand(%struct.rtx_def*, i32) #1

declare %struct.rtx_def* @copy_to_mode_reg(i32, %struct.rtx_def*) #1

declare %struct.rtx_def* @emit_call_insn(%struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_call_exp(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 50, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #4
  ret %struct.rtx_def* %call
}

declare void @use_reg(%struct.rtx_def**, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_call_value_pop(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* nocapture readnone %operand3, %struct.rtx_def* %operand4) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %cmp = icmp eq %struct.rtx_def* %0, %operand4
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %1 = load i32* @flag_pic, align 4, !tbaa !5
  %tobool = icmp eq i32 %1, 0
  %arrayidx28.pre = getelementptr inbounds %struct.rtx_def* %operand1, i64 0, i32 1, i64 0
  %rtx29.pre = bitcast %union.rtunion_def* %arrayidx28.pre to %struct.rtx_def**
  br i1 %tobool, label %if.end25, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end
  %2 = load %struct.rtx_def** %rtx29.pre, align 8, !tbaa !1
  %3 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 0
  %bf.load = load i32* %3, align 8
  %4 = and i32 %bf.load, 134283263
  %5 = icmp eq i32 %4, 68
  br i1 %5, label %if.then22, label %if.end25

if.then22:                                        ; preds = %land.lhs.true
  %6 = load %struct.function** @cfun, align 8, !tbaa !1
  %uses_pic_offset_table = getelementptr inbounds %struct.function* %6, i64 0, i32 56
  %7 = bitcast i24* %uses_pic_offset_table to i32*
  %bf.load23 = load i32* %7, align 8
  %bf.set = or i32 %bf.load23, 2097152
  store i32 %bf.set, i32* %7, align 8
  br label %if.end25

if.end25:                                         ; preds = %if.end, %if.then22, %land.lhs.true
  %8 = load %struct.rtx_def** %rtx29.pre, align 8, !tbaa !1
  %9 = load i32* @target_flags, align 4, !tbaa !5
  %and = lshr i32 %9, 25
  %10 = and i32 %and, 1
  %11 = or i32 %10, 4
  %call31 = tail call i32 @call_insn_operand(%struct.rtx_def* %8, i32 %11) #4
  %tobool32 = icmp eq i32 %call31, 0
  br i1 %tobool32, label %if.then33, label %cleanup.cont

if.then33:                                        ; preds = %if.end25
  %12 = load i32* @target_flags, align 4, !tbaa !5
  %and34 = lshr i32 %12, 25
  %13 = and i32 %and34, 1
  %14 = or i32 %13, 4
  %15 = load %struct.rtx_def** %rtx29.pre, align 8, !tbaa !1
  %call41 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %14, %struct.rtx_def* %15) #4
  %16 = getelementptr inbounds %union.rtunion_def* %arrayidx28.pre, i64 0, i32 0
  %call41.c = ptrtoint %struct.rtx_def* %call41 to i64
  store i64 %call41.c, i64* %16, align 8, !tbaa !1
  br label %cleanup.cont

cleanup:                                          ; preds = %entry
  %17 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_call_value(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* %17)
  %call9 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call) #4
  %call10 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

cleanup.cont:                                     ; preds = %if.end25, %if.then33
  %call52 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 50, i32 0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call53 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call52) #4
  %call54 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call55 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call56 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %call55, %struct.rtx_def* %operand4) #4
  %call57 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call54, %struct.rtx_def* %call56) #4
  %call58 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call53, %struct.rtx_def* %call57) #4
  %call59 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call58) #4
  %call60 = tail call %struct.rtx_def* @emit_call_insn(%struct.rtx_def* %call59) #4
  %call61 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

return:                                           ; preds = %cleanup, %cleanup.cont
  %retval.1 = phi %struct.rtx_def* [ %call10, %cleanup ], [ %call61, %cleanup.cont ]
  ret %struct.rtx_def* %retval.1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_call_value(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* %operand3) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load i32* @flag_pic, align 4, !tbaa !5
  %tobool = icmp eq i32 %0, 0
  %arrayidx18.pre = getelementptr inbounds %struct.rtx_def* %operand1, i64 0, i32 1, i64 0
  %rtx19.pre = bitcast %union.rtunion_def* %arrayidx18.pre to %struct.rtx_def**
  br i1 %tobool, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.rtx_def** %rtx19.pre, align 8, !tbaa !1
  %2 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 0
  %bf.load = load i32* %2, align 8
  %3 = and i32 %bf.load, 134283263
  %4 = icmp eq i32 %3, 68
  br i1 %4, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %5 = load %struct.function** @cfun, align 8, !tbaa !1
  %uses_pic_offset_table = getelementptr inbounds %struct.function* %5, i64 0, i32 56
  %6 = bitcast i24* %uses_pic_offset_table to i32*
  %bf.load14 = load i32* %6, align 8
  %bf.set = or i32 %bf.load14, 2097152
  store i32 %bf.set, i32* %6, align 8
  br label %if.end

if.end:                                           ; preds = %entry, %if.then, %land.lhs.true
  %7 = load %struct.rtx_def** %rtx19.pre, align 8, !tbaa !1
  %8 = load i32* @target_flags, align 4, !tbaa !5
  %and = lshr i32 %8, 25
  %9 = and i32 %and, 1
  %10 = or i32 %9, 4
  %call = tail call i32 @call_insn_operand(%struct.rtx_def* %7, i32 %10) #4
  %tobool21 = icmp eq i32 %call, 0
  br i1 %tobool21, label %if.then22, label %if.end35

if.then22:                                        ; preds = %if.end
  %11 = load i32* @target_flags, align 4, !tbaa !5
  %and23 = lshr i32 %11, 25
  %12 = and i32 %and23, 1
  %13 = or i32 %12, 4
  %14 = load %struct.rtx_def** %rtx19.pre, align 8, !tbaa !1
  %call30 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %13, %struct.rtx_def* %14) #4
  %15 = getelementptr inbounds %union.rtunion_def* %arrayidx18.pre, i64 0, i32 0
  %call30.c = ptrtoint %struct.rtx_def* %call30 to i64
  store i64 %call30.c, i64* %15, align 8, !tbaa !1
  br label %if.end35

if.end35:                                         ; preds = %if.end, %if.then22
  %16 = load i32* @target_flags, align 4, !tbaa !5
  %and36 = and i32 %16, 33554432
  %tobool37 = icmp eq i32 %and36, 0
  br i1 %tobool37, label %if.end56, label %land.lhs.true38

land.lhs.true38:                                  ; preds = %if.end35
  %rtwint = getelementptr inbounds %struct.rtx_def* %operand3, i64 0, i32 1, i64 0, i32 0
  %17 = load i64* %rtwint, align 8, !tbaa !7
  %cmp42 = icmp sgt i64 %17, -1
  br i1 %cmp42, label %if.then43, label %if.end56

if.then43:                                        ; preds = %land.lhs.true38
  %call44 = tail call %struct.rtx_def* @gen_rtx_REG(i32 2, i32 0) #4
  %call46 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call44, %struct.rtx_def* %operand3) #4
  %call.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 50, i32 0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call.i) #4
  %call51 = tail call %struct.rtx_def* @emit_call_insn(%struct.rtx_def* %call1.i) #4
  %arrayidx53 = getelementptr inbounds %struct.rtx_def* %call51, i64 0, i32 1, i64 7
  %rtx54 = bitcast %union.rtunion_def* %arrayidx53 to %struct.rtx_def**
  tail call void @use_reg(%struct.rtx_def** %rtx54, %struct.rtx_def* %call44) #4
  %call55 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

if.end56:                                         ; preds = %if.end35, %land.lhs.true38
  %call.i74 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 50, i32 0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1.i75 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call.i74) #4
  %call61 = tail call %struct.rtx_def* @emit_call_insn(%struct.rtx_def* %call1.i75) #4
  %call62 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.end56, %if.then43
  %retval.0 = phi %struct.rtx_def* [ %call55, %if.then43 ], [ %call62, %if.end56 ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_call_value_exp(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 50, i32 0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_untyped_call(%struct.rtx_def* %operand0, %struct.rtx_def* nocapture readnone %operand1, %struct.rtx_def* nocapture readonly %operand2) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load i32* @target_flags, align 4, !tbaa !5
  %and = and i32 %0, 32
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %cond.false, label %cond.true

cond.true:                                        ; preds = %entry
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 23, i32 8) #4
  %1 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %2 = load i32* @target_flags, align 4, !tbaa !5
  %and4 = lshr i32 %2, 22
  %3 = and i32 %and4, 8
  %sub = add nsw i32 %3, -1
  %conv = sext i32 %sub to i64
  %call6 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv) #4
  %call7 = tail call %struct.rtx_def* @gen_call_value(%struct.rtx_def* %call, %struct.rtx_def* %operand0, %struct.rtx_def* %1, %struct.rtx_def* %call6)
  br label %cond.end

cond.false:                                       ; preds = %entry
  %4 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %and9 = lshr i32 %0, 22
  %5 = and i32 %and9, 8
  %sub12 = add nsw i32 %5, -1
  %conv13 = sext i32 %sub12 to i64
  %call14 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv13) #4
  %call15 = tail call %struct.rtx_def* @gen_call(%struct.rtx_def* %operand0, %struct.rtx_def* %4, %struct.rtx_def* %call14)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond16 = phi %struct.rtx_def* [ %call7, %cond.true ], [ %call15, %cond.false ]
  %call17 = tail call %struct.rtx_def* @emit_call_insn(%struct.rtx_def* %cond16) #4
  %arrayidx19 = getelementptr inbounds %struct.rtx_def* %operand2, i64 0, i32 1, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx19 to %struct.rtvec_def**
  %6 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !1
  %num_elem40 = getelementptr inbounds %struct.rtvec_def* %6, i64 0, i32 0
  %7 = load i32* %num_elem40, align 4, !tbaa !12
  %cmp41 = icmp sgt i32 %7, 0
  br i1 %cmp41, label %for.body, label %for.end

for.body:                                         ; preds = %cond.end, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %cond.end ]
  %8 = phi %struct.rtvec_def* [ %12, %for.body ], [ %6, %cond.end ]
  %arrayidx25 = getelementptr inbounds %struct.rtvec_def* %8, i64 0, i32 1, i64 %indvars.iv
  %9 = load %struct.rtx_def** %arrayidx25, align 8, !tbaa !1
  %fld26 = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 1
  %rtx = bitcast [1 x %union.rtunion_def]* %fld26 to %struct.rtx_def**
  %10 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %arrayidx29 = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 1, i64 1
  %rtx30 = bitcast %union.rtunion_def* %arrayidx29 to %struct.rtx_def**
  %11 = load %struct.rtx_def** %rtx30, align 8, !tbaa !1
  %call31 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %10, %struct.rtx_def* %11) #4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %12 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !1
  %num_elem = getelementptr inbounds %struct.rtvec_def* %12, i64 0, i32 0
  %13 = load i32* %num_elem, align 4, !tbaa !12
  %14 = trunc i64 %indvars.iv.next to i32
  %cmp = icmp slt i32 %14, %13
  br i1 %cmp, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %cond.end
  %15 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call.i = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %15) #4
  %call1.i = tail call %struct.rtx_def* @gen_rtx_fmt_Ei(i32 43, i32 0, %struct.rtvec_def* %call.i, i32 0) #4
  %call33 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call1.i) #4
  %call34 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call34
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_return() #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.function** @cfun, align 8, !tbaa !1
  %pops_args = getelementptr inbounds %struct.function* %0, i64 0, i32 8
  %1 = load i32* %pops_args, align 4, !tbaa !14
  %tobool = icmp eq i32 %1, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %conv = sext i32 %1 to i64
  %call = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv) #4
  %call.i = tail call %struct.rtx_def* @gen_rtx_fmt_(i32 51, i32 0) #4
  %call1.i = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %call) #4
  %call2.i = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call.i, %struct.rtx_def* %call1.i) #4
  %call3.i = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call2.i) #4
  %call3 = tail call %struct.rtx_def* @emit_jump_insn(%struct.rtx_def* %call3.i) #4
  %call4 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

if.end:                                           ; preds = %entry
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_(i32 51, i32 0) #4
  %call6 = tail call %struct.rtx_def* @emit_jump_insn(%struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call4, %if.then ], [ %call7, %if.end ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_prologue() #0 {
entry:
  tail call void @start_sequence() #4
  tail call void @ix86_expand_prologue() #4
  %call = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

declare void @ix86_expand_prologue() #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_epilogue() #0 {
entry:
  tail call void @start_sequence() #4
  tail call void @ix86_expand_epilogue(i32 1) #4
  %call = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

declare void @ix86_expand_epilogue(i32) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_sibcall_epilogue() #0 {
entry:
  tail call void @start_sequence() #4
  tail call void @ix86_expand_epilogue(i32 0) #4
  %call = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_eh_return(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load i32* @target_flags, align 4, !tbaa !5
  %and = lshr i32 %0, 25
  %1 = and i32 %and, 1
  %2 = or i32 %1, 4
  %3 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 5), align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %2, %struct.rtx_def* %3, %struct.rtx_def* %operand0) #4
  %4 = load i32* @target_flags, align 4, !tbaa !5
  %and6 = lshr i32 %4, 23
  %5 = and i32 %and6, 4
  %sub = sub i32 -4, %5
  %conv = sext i32 %sub to i64
  %call9 = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %call, i64 %conv) #4
  %6 = load i32* @target_flags, align 4, !tbaa !5
  %and10 = lshr i32 %6, 25
  %7 = and i32 %and10, 1
  %8 = or i32 %7, 4
  %call13 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %8, %struct.rtx_def* %call9) #4
  %call14 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call13, %struct.rtx_def* %operand1) #4
  %call.i = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %operand0) #4
  %call1.i = tail call %struct.rtx_def* @gen_rtx_fmt_Ei(i32 43, i32 0, %struct.rtvec_def* %call.i, i32 13) #4
  %call20 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call1.i) #4
  %call23 = tail call %struct.rtx_def* @emit_barrier() #4
  %call24 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call24
}

declare %struct.rtx_def* @plus_constant_wide(%struct.rtx_def*, i64) #1

declare %struct.rtx_def* @emit_barrier() #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1178(%struct.rtx_def** nocapture readnone %operands) #0 {
entry:
  tail call void @start_sequence() #4
  tail call void @ix86_expand_epilogue(i32 2) #4
  %call = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1179(%struct.rtx_def** nocapture readnone %operands) #0 {
entry:
  tail call void @start_sequence() #4
  tail call void @ix86_expand_epilogue(i32 2) #4
  %call = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_ffssi2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %operands.i147 = alloca [2 x %struct.rtx_def*], align 16
  %operands.i = alloca [3 x %struct.rtx_def*], align 16
  %lo = alloca %struct.rtx_def*, align 8
  %hi = alloca %struct.rtx_def*, align 8
  %mem = alloca %struct.rtx_def*, align 8
  call void @start_sequence() #4
  %call = call %struct.rtx_def* @gen_reg_rtx(i32 4) #4
  %call2 = call %struct.rtx_def* @gen_reg_rtx(i32 4) #4
  %0 = load i32* @x86_cmove, align 4, !tbaa !5
  %1 = load i32* @ix86_arch, align 4, !tbaa !5
  %shl = shl i32 1, %1
  %and = and i32 %shl, %0
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %entry
  %2 = load i32* @target_flags, align 4, !tbaa !5
  %and5 = and i32 %2, 327680
  %cmp = icmp eq i32 %and5, 0
  br i1 %cmp, label %if.else, label %if.then

if.then:                                          ; preds = %lor.lhs.false, %entry
  %3 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !tbaa !1
  %call6 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call2, %struct.rtx_def* %3) #4
  %call.i = call %struct.rtx_def* @gen_rtx_REG(i32 56, i32 17) #4
  %4 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call1.i = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 74, i32 56, %struct.rtx_def* %operand1, %struct.rtx_def* %4) #4
  %call2.i = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call.i, %struct.rtx_def* %call1.i) #4
  %call3.i = call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %operand1) #4
  %call4.i = call %struct.rtx_def* @gen_rtx_fmt_Ei(i32 42, i32 4, %struct.rtvec_def* %call3.i, i32 5) #4
  %call5.i = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call4.i) #4
  %call6.i = call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call2.i, %struct.rtx_def* %call5.i) #4
  %call7.i = call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call6.i) #4
  %call8 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call7.i) #4
  %call9 = call %struct.rtx_def* @gen_rtx_REG(i32 56, i32 17) #4
  %5 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call10 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 103, i32 0, %struct.rtx_def* %call9, %struct.rtx_def* %5) #4
  %call11 = call %struct.rtx_def* @gen_rtx_fmt_eee(i32 72, i32 4, %struct.rtx_def* %call10, %struct.rtx_def* %call2, %struct.rtx_def* %call) #4
  %call12 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call11) #4
  %call13 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call12) #4
  %6 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %7 = bitcast [3 x %struct.rtx_def*]* %operands.i to i8*
  call void @llvm.lifetime.start(i64 24, i8* %7) #4
  call void @start_sequence() #4
  %arrayidx.i = getelementptr inbounds [3 x %struct.rtx_def*]* %operands.i, i64 0, i64 0
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx.i, align 16, !tbaa !1
  %arrayidx1.i = getelementptr inbounds [3 x %struct.rtx_def*]* %operands.i, i64 0, i64 1
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx1.i, align 8, !tbaa !1
  %arrayidx2.i = getelementptr inbounds [3 x %struct.rtx_def*]* %operands.i, i64 0, i64 2
  store %struct.rtx_def* %6, %struct.rtx_def** %arrayidx2.i, align 16, !tbaa !1
  call void @ix86_expand_binary_operator(i32 75, i32 4, %struct.rtx_def** %arrayidx.i) #4
  %call.i116 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  call void @llvm.lifetime.end(i64 24, i8* %7) #4
  %call15 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call.i116) #4
  %call17 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  br label %if.end74

if.else:                                          ; preds = %lor.lhs.false
  %8 = load i32* @ix86_cpu, align 4, !tbaa !9
  %cmp18 = icmp ne i32 %8, 2
  %9 = load i32* @optimize_size, align 4
  %tobool19 = icmp ne i32 %9, 0
  %or.cond = or i1 %cmp18, %tobool19
  %and21 = and i32 %2, 1
  %tobool22 = icmp eq i32 %and21, 0
  %or.cond115 = or i1 %or.cond, %tobool22
  br i1 %or.cond115, label %if.else56, label %if.then23

if.then23:                                        ; preds = %if.else
  %call25 = call %struct.rtx_def* @gen_label_rtx() #4
  %call29 = call %struct.rtx_def* @assign_386_stack_local(i32 5, i32 0) #4
  store %struct.rtx_def* %call29, %struct.rtx_def** %mem, align 8, !tbaa !1
  %call31 = call %struct.rtx_def* @gen_reg_rtx(i32 16) #4
  call void @split_di(%struct.rtx_def** %mem, i32 1, %struct.rtx_def** %lo, %struct.rtx_def** %hi) #4
  %10 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call32 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call, %struct.rtx_def* %10) #4
  %11 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  call void @emit_cmp_and_jump_insns(%struct.rtx_def* %operand1, %struct.rtx_def* %11, i32 103, %struct.rtx_def* null, i32 4, i32 1, %struct.rtx_def* %call25) #4
  %12 = load %struct.rtx_def** %hi, align 8, !tbaa !1
  %call33 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %12, %struct.rtx_def* %call) #4
  %13 = bitcast [3 x %struct.rtx_def*]* %operands.i to i8*
  call void @llvm.lifetime.start(i64 24, i8* %13) #4
  call void @start_sequence() #4
  %arrayidx.i118 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands.i, i64 0, i64 0
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx.i118, align 16, !tbaa !1
  %arrayidx1.i119 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands.i, i64 0, i64 1
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx1.i119, align 8, !tbaa !1
  %arrayidx2.i120 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands.i, i64 0, i64 2
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx2.i120, align 16, !tbaa !1
  call void @ix86_expand_binary_operator(i32 76, i32 4, %struct.rtx_def** %arrayidx.i118) #4
  %call.i121 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  call void @llvm.lifetime.end(i64 24, i8* %13) #4
  %call35 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call.i121) #4
  call void @llvm.lifetime.start(i64 24, i8* %13) #4
  call void @start_sequence() #4
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx.i118, align 16, !tbaa !1
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx1.i119, align 8, !tbaa !1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx2.i120, align 16, !tbaa !1
  call void @ix86_expand_binary_operator(i32 83, i32 4, %struct.rtx_def** %arrayidx.i118) #4
  %call.i126 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  call void @llvm.lifetime.end(i64 24, i8* %13) #4
  %call37 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call.i126) #4
  %14 = load %struct.rtx_def** %lo, align 8, !tbaa !1
  %call38 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %14, %struct.rtx_def* %call) #4
  %15 = load %struct.rtx_def** %mem, align 8, !tbaa !1
  %call.i127 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 125, i32 16, %struct.rtx_def* %15) #4
  %call1.i128 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call31, %struct.rtx_def* %call.i127) #4
  %call40 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call1.i128) #4
  %16 = load %struct.rtx_def** %mem, align 8, !tbaa !1
  %arrayidx41 = getelementptr inbounds %struct.rtx_def* %16, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx41 to %struct.rtx_def**
  %17 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %call42 = call %struct.rtx_def* @gen_rtx_MEM(i32 16, %struct.rtx_def* %17) #4
  %call43 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call42, %struct.rtx_def* %call31) #4
  %18 = load %struct.rtx_def** %hi, align 8, !tbaa !1
  %call44 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call, %struct.rtx_def* %18) #4
  %call45 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 20) #4
  call void @llvm.lifetime.start(i64 24, i8* %13) #4
  call void @start_sequence() #4
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx.i118, align 16, !tbaa !1
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx1.i119, align 8, !tbaa !1
  store %struct.rtx_def* %call45, %struct.rtx_def** %arrayidx2.i120, align 16, !tbaa !1
  call void @ix86_expand_binary_operator(i32 90, i32 4, %struct.rtx_def** %arrayidx.i118) #4
  %call.i133 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  call void @llvm.lifetime.end(i64 24, i8* %13) #4
  %call47 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call.i133) #4
  %call48 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 1022) #4
  call void @llvm.lifetime.start(i64 24, i8* %13) #4
  call void @start_sequence() #4
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx.i118, align 16, !tbaa !1
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx1.i119, align 8, !tbaa !1
  store %struct.rtx_def* %call48, %struct.rtx_def** %arrayidx2.i120, align 16, !tbaa !1
  call void @ix86_expand_binary_operator(i32 76, i32 4, %struct.rtx_def** %arrayidx.i118) #4
  %call.i138 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  call void @llvm.lifetime.end(i64 24, i8* %13) #4
  %call50 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call.i138) #4
  %call51 = call %struct.rtx_def* @emit_label(%struct.rtx_def* %call25) #4
  %arrayidx53 = getelementptr inbounds %struct.rtx_def* %call25, i64 0, i32 1, i64 3
  %rtint = bitcast %union.rtunion_def* %arrayidx53 to i32*
  store i32 1, i32* %rtint, align 4, !tbaa !5
  %call55 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  br label %if.end74

if.else56:                                        ; preds = %if.else
  %19 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call57 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call2, %struct.rtx_def* %19) #4
  %call.i139 = call %struct.rtx_def* @gen_rtx_REG(i32 56, i32 17) #4
  %20 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call1.i140 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 74, i32 56, %struct.rtx_def* %operand1, %struct.rtx_def* %20) #4
  %call2.i141 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call.i139, %struct.rtx_def* %call1.i140) #4
  %call3.i142 = call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %operand1) #4
  %call4.i143 = call %struct.rtx_def* @gen_rtx_fmt_Ei(i32 42, i32 4, %struct.rtvec_def* %call3.i142, i32 5) #4
  %call5.i144 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call4.i143) #4
  %call6.i145 = call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call2.i141, %struct.rtx_def* %call5.i144) #4
  %call7.i146 = call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call6.i145) #4
  %call59 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call7.i146) #4
  %call60 = call %struct.rtx_def* @gen_lowpart(i32 2, %struct.rtx_def* %call2) #4
  %call61 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 64, i32 0, %struct.rtx_def* %call60) #4
  %call62 = call %struct.rtx_def* @gen_rtx_REG(i32 56, i32 17) #4
  %21 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call63 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 103, i32 2, %struct.rtx_def* %call62, %struct.rtx_def* %21) #4
  %call64 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call61, %struct.rtx_def* %call63) #4
  %call65 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call64) #4
  %22 = bitcast [2 x %struct.rtx_def*]* %operands.i147 to i8*
  call void @llvm.lifetime.start(i64 16, i8* %22) #4
  call void @start_sequence() #4
  %arrayidx.i148 = getelementptr inbounds [2 x %struct.rtx_def*]* %operands.i147, i64 0, i64 0
  store %struct.rtx_def* %call2, %struct.rtx_def** %arrayidx.i148, align 16, !tbaa !1
  %arrayidx1.i149 = getelementptr inbounds [2 x %struct.rtx_def*]* %operands.i147, i64 0, i64 1
  store %struct.rtx_def* %call2, %struct.rtx_def** %arrayidx1.i149, align 8, !tbaa !1
  call void @ix86_expand_unary_operator(i32 77, i32 4, %struct.rtx_def** %arrayidx.i148) #4
  %call.i150 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  call void @llvm.lifetime.end(i64 16, i8* %22) #4
  %call67 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call.i150) #4
  %23 = bitcast [3 x %struct.rtx_def*]* %operands.i to i8*
  call void @llvm.lifetime.start(i64 24, i8* %23) #4
  call void @start_sequence() #4
  %arrayidx.i152 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands.i, i64 0, i64 0
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx.i152, align 16, !tbaa !1
  %arrayidx1.i153 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands.i, i64 0, i64 1
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx1.i153, align 8, !tbaa !1
  %arrayidx2.i154 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands.i, i64 0, i64 2
  store %struct.rtx_def* %call2, %struct.rtx_def** %arrayidx2.i154, align 16, !tbaa !1
  call void @ix86_expand_binary_operator(i32 84, i32 4, %struct.rtx_def** %arrayidx.i152) #4
  %call.i155 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  call void @llvm.lifetime.end(i64 24, i8* %23) #4
  %call69 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call.i155) #4
  %24 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  call void @llvm.lifetime.start(i64 24, i8* %23) #4
  call void @start_sequence() #4
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx.i152, align 16, !tbaa !1
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx1.i153, align 8, !tbaa !1
  store %struct.rtx_def* %24, %struct.rtx_def** %arrayidx2.i154, align 16, !tbaa !1
  call void @ix86_expand_binary_operator(i32 75, i32 4, %struct.rtx_def** %arrayidx.i152) #4
  %call.i160 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  call void @llvm.lifetime.end(i64 24, i8* %23) #4
  %call71 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call.i160) #4
  %call73 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  br label %if.end74

if.end74:                                         ; preds = %if.then23, %if.else56, %if.then
  %call75 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  ret %struct.rtx_def* %call75
}

declare void @emit_cmp_and_jump_insns(%struct.rtx_def*, %struct.rtx_def*, i32, %struct.rtx_def*, i32, i32, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1181(%struct.rtx_def** nocapture %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %0 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %1 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 0
  %bf.load = load i32* %1, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %call = tail call %struct.rtx_def* @ix86_force_to_memory(i32 %bf.clear, %struct.rtx_def* %0) #4
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 4
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %2 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %3 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 0
  %bf.load4 = load i32* %3, align 8
  %bf.lshr5 = lshr i32 %bf.load4, 16
  %bf.clear6 = and i32 %bf.lshr5, 255
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 125, i32 %bf.clear6, %struct.rtx_def* %call) #4
  store %struct.rtx_def* %call8, %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %4 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx11 = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  %5 = load %struct.rtx_def** %arrayidx11, align 8, !tbaa !1
  %6 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 0
  %bf.load12 = load i32* %6, align 8
  %bf.clear13 = and i32 %bf.load12, 65535
  %bf.lshr16 = lshr i32 %bf.load12, 16
  %bf.clear17 = and i32 %bf.lshr16, 255
  %arrayidx19 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %7 = load %struct.rtx_def** %arrayidx19, align 8, !tbaa !1
  %call20 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 %bf.clear13, i32 %bf.clear17, %struct.rtx_def* %call8, %struct.rtx_def* %7) #4
  %call21 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %4, %struct.rtx_def* %call20) #4
  %call22 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call21) #4
  %8 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %9 = getelementptr inbounds %struct.rtx_def* %8, i64 0, i32 0
  %bf.load24 = load i32* %9, align 8
  %bf.lshr25 = lshr i32 %bf.load24, 16
  %bf.clear26 = and i32 %bf.lshr25, 255
  tail call void @ix86_free_from_memory(i32 %bf.clear26) #4
  %call27 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call27
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1182(%struct.rtx_def** nocapture %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %0 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %1 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 0
  %bf.load = load i32* %1, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %call = tail call %struct.rtx_def* @ix86_force_to_memory(i32 %bf.clear, %struct.rtx_def* %0) #4
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 4
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %2 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %3 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 0
  %bf.load4 = load i32* %3, align 8
  %bf.lshr5 = lshr i32 %bf.load4, 16
  %bf.clear6 = and i32 %bf.lshr5, 255
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 125, i32 %bf.clear6, %struct.rtx_def* %call) #4
  store %struct.rtx_def* %call8, %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %4 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx11 = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  %5 = load %struct.rtx_def** %arrayidx11, align 8, !tbaa !1
  %6 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 0
  %bf.load12 = load i32* %6, align 8
  %bf.clear13 = and i32 %bf.load12, 65535
  %bf.lshr16 = lshr i32 %bf.load12, 16
  %bf.clear17 = and i32 %bf.lshr16, 255
  %arrayidx18 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %7 = load %struct.rtx_def** %arrayidx18, align 8, !tbaa !1
  %call20 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 %bf.clear13, i32 %bf.clear17, %struct.rtx_def* %7, %struct.rtx_def* %call8) #4
  %call21 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %4, %struct.rtx_def* %call20) #4
  %call22 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call21) #4
  %8 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %9 = getelementptr inbounds %struct.rtx_def* %8, i64 0, i32 0
  %bf.load24 = load i32* %9, align 8
  %bf.lshr25 = lshr i32 %bf.load24, 16
  %bf.clear26 = and i32 %bf.lshr25, 255
  tail call void @ix86_free_from_memory(i32 %bf.clear26) #4
  %call27 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call27
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_sqrtsf2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load i32* @ix86_fpmath, align 4, !tbaa !9
  %and = and i32 %0, 2
  %cmp = icmp eq i32 %and, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = tail call %struct.rtx_def* @force_reg(i32 15, %struct.rtx_def* %operand1) #4
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %operands.sroa.2.0 = phi %struct.rtx_def* [ %operand1, %entry ], [ %call, %if.then ]
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 130, i32 15, %struct.rtx_def* %operands.sroa.2.0) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call9
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_sqrtdf2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load i32* @target_flags, align 4, !tbaa !5
  %and = and i32 %0, 262144
  %cmp = icmp eq i32 %and, 0
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32* @ix86_fpmath, align 4, !tbaa !9
  %and2 = and i32 %1, 2
  %cmp3 = icmp eq i32 %and2, 0
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  %call = tail call %struct.rtx_def* @force_reg(i32 16, %struct.rtx_def* %operand1) #4
  br label %if.end

if.end:                                           ; preds = %lor.lhs.false, %if.then
  %operands.sroa.2.0 = phi %struct.rtx_def* [ %operand1, %lor.lhs.false ], [ %call, %if.then ]
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 130, i32 16, %struct.rtx_def* %operands.sroa.2.0) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call8) #4
  %call10 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call11
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_movstrsi(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* %operand3) #0 {
entry:
  tail call void @start_sequence() #4
  %call = tail call i32 @ix86_expand_movstr(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* %operand3) #4
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %call8 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

if.else:                                          ; preds = %entry
  tail call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call8, %if.then ], [ null, %if.else ]
  ret %struct.rtx_def* %retval.0
}

declare i32 @ix86_expand_movstr(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_movstrdi(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* %operand3) #0 {
entry:
  tail call void @start_sequence() #4
  %call = tail call i32 @ix86_expand_movstr(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* %operand3) #4
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %call8 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

if.else:                                          ; preds = %entry
  tail call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call8, %if.then ], [ null, %if.else ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_strmovdi_rex64(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load i32* @x86_single_stringop, align 4, !tbaa !5
  %1 = load i32* @ix86_cpu, align 4, !tbaa !9
  %shl = shl i32 1, %1
  %and = and i32 %shl, %0
  %2 = load i32* @optimize_size, align 4
  %3 = or i32 %and, %2
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %call = tail call %struct.rtx_def* @gen_strmovdi_rex_1(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand0, %struct.rtx_def* %operand1)
  %call7 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call) #4
  %call8 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

if.else:                                          ; preds = %entry
  %call9 = tail call %struct.rtx_def* @gen_reg_rtx(i32 5) #4
  %call14 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 5, %struct.rtx_def* %operand1) #4
  %call15 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call9, %struct.rtx_def* %call14) #4
  %call16 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call15) #4
  %call17 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 5, %struct.rtx_def* %operand0) #4
  %call18 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call17, %struct.rtx_def* %call9) #4
  %call19 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call18) #4
  %call20 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 8) #4
  %call21 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 5, %struct.rtx_def* %operand0, %struct.rtx_def* %call20) #4
  %call22 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call21) #4
  %call23 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call24 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call23) #4
  %call25 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call22, %struct.rtx_def* %call24) #4
  %call26 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call25) #4
  %call27 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call26) #4
  %call28 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 8) #4
  %call29 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 5, %struct.rtx_def* %operand1, %struct.rtx_def* %call28) #4
  %call30 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand1, %struct.rtx_def* %call29) #4
  %call31 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call32 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call31) #4
  %call33 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call30, %struct.rtx_def* %call32) #4
  %call34 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call33) #4
  %call35 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call34) #4
  %call36 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call8, %if.then ], [ %call36, %if.else ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_strmovsi(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load i32* @target_flags, align 4, !tbaa !5
  %and = and i32 %0, 33554432
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %call = tail call %struct.rtx_def* @gen_strmovsi_rex64(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1)
  %call4 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call) #4
  %call5 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

if.end:                                           ; preds = %entry
  %1 = load i32* @x86_single_stringop, align 4, !tbaa !5
  %2 = load i32* @ix86_cpu, align 4, !tbaa !9
  %shl = shl i32 1, %2
  %and6 = and i32 %shl, %1
  %3 = load i32* @optimize_size, align 4
  %4 = or i32 %and6, %3
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %if.else, label %if.then9

if.then9:                                         ; preds = %if.end
  %call14 = tail call %struct.rtx_def* @gen_strmovsi_1(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand0, %struct.rtx_def* %operand1)
  %call15 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call14) #4
  %call16 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

if.else:                                          ; preds = %if.end
  %call17 = tail call %struct.rtx_def* @gen_reg_rtx(i32 4) #4
  %call23 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 4, %struct.rtx_def* %operand1) #4
  %call24 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call17, %struct.rtx_def* %call23) #4
  %call25 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call24) #4
  %call26 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 4, %struct.rtx_def* %operand0) #4
  %call27 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call26, %struct.rtx_def* %call17) #4
  %call28 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call27) #4
  %call29 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 4) #4
  %call30 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %operand0, %struct.rtx_def* %call29) #4
  %call31 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call30) #4
  %call32 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call33 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call32) #4
  %call34 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call31, %struct.rtx_def* %call33) #4
  %call35 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call34) #4
  %call36 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call35) #4
  %call37 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 4) #4
  %call38 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %operand1, %struct.rtx_def* %call37) #4
  %call39 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand1, %struct.rtx_def* %call38) #4
  %call40 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call41 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call40) #4
  %call42 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call39, %struct.rtx_def* %call41) #4
  %call43 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call42) #4
  %call44 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call43) #4
  %call45 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.else, %if.then9, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call5, %if.then ], [ %call16, %if.then9 ], [ %call45, %if.else ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_strmovsi_rex64(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load i32* @x86_single_stringop, align 4, !tbaa !5
  %1 = load i32* @ix86_cpu, align 4, !tbaa !9
  %shl = shl i32 1, %1
  %and = and i32 %shl, %0
  %2 = load i32* @optimize_size, align 4
  %3 = or i32 %and, %2
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %call = tail call %struct.rtx_def* @gen_strmovsi_rex_1(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand0, %struct.rtx_def* %operand1)
  %call7 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call) #4
  %call8 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

if.else:                                          ; preds = %entry
  %call9 = tail call %struct.rtx_def* @gen_reg_rtx(i32 4) #4
  %call14 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 4, %struct.rtx_def* %operand1) #4
  %call15 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call9, %struct.rtx_def* %call14) #4
  %call16 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call15) #4
  %call17 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 4, %struct.rtx_def* %operand0) #4
  %call18 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call17, %struct.rtx_def* %call9) #4
  %call19 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call18) #4
  %call20 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 4) #4
  %call21 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 5, %struct.rtx_def* %operand0, %struct.rtx_def* %call20) #4
  %call22 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call21) #4
  %call23 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call24 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call23) #4
  %call25 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call22, %struct.rtx_def* %call24) #4
  %call26 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call25) #4
  %call27 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call26) #4
  %call28 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 4) #4
  %call29 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 5, %struct.rtx_def* %operand1, %struct.rtx_def* %call28) #4
  %call30 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand1, %struct.rtx_def* %call29) #4
  %call31 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call32 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call31) #4
  %call33 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call30, %struct.rtx_def* %call32) #4
  %call34 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call33) #4
  %call35 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call34) #4
  %call36 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call8, %if.then ], [ %call36, %if.else ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_strmovhi(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load i32* @target_flags, align 4, !tbaa !5
  %and = and i32 %0, 33554432
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %call = tail call %struct.rtx_def* @gen_strmovhi_rex64(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1)
  %call4 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call) #4
  %call5 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

if.end:                                           ; preds = %entry
  %1 = load i32* @x86_single_stringop, align 4, !tbaa !5
  %2 = load i32* @ix86_cpu, align 4, !tbaa !9
  %shl = shl i32 1, %2
  %and6 = and i32 %shl, %1
  %3 = load i32* @optimize_size, align 4
  %4 = or i32 %and6, %3
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %if.else, label %if.then9

if.then9:                                         ; preds = %if.end
  %call14 = tail call %struct.rtx_def* @gen_strmovhi_1(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand0, %struct.rtx_def* %operand1)
  %call15 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call14) #4
  %call16 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

if.else:                                          ; preds = %if.end
  %call17 = tail call %struct.rtx_def* @gen_reg_rtx(i32 3) #4
  %call23 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 3, %struct.rtx_def* %operand1) #4
  %call24 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call17, %struct.rtx_def* %call23) #4
  %call25 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call24) #4
  %call26 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 3, %struct.rtx_def* %operand0) #4
  %call27 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call26, %struct.rtx_def* %call17) #4
  %call28 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call27) #4
  %call29 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 2) #4
  %call30 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %operand0, %struct.rtx_def* %call29) #4
  %call31 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call30) #4
  %call32 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call33 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call32) #4
  %call34 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call31, %struct.rtx_def* %call33) #4
  %call35 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call34) #4
  %call36 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call35) #4
  %call37 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 2) #4
  %call38 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %operand1, %struct.rtx_def* %call37) #4
  %call39 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand1, %struct.rtx_def* %call38) #4
  %call40 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call41 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call40) #4
  %call42 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call39, %struct.rtx_def* %call41) #4
  %call43 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call42) #4
  %call44 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call43) #4
  %call45 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.else, %if.then9, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call5, %if.then ], [ %call16, %if.then9 ], [ %call45, %if.else ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_strmovhi_rex64(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load i32* @x86_single_stringop, align 4, !tbaa !5
  %1 = load i32* @ix86_cpu, align 4, !tbaa !9
  %shl = shl i32 1, %1
  %and = and i32 %shl, %0
  %2 = load i32* @optimize_size, align 4
  %3 = or i32 %and, %2
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %call = tail call %struct.rtx_def* @gen_strmovhi_rex_1(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand0, %struct.rtx_def* %operand1)
  %call7 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call) #4
  %call8 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

if.else:                                          ; preds = %entry
  %call9 = tail call %struct.rtx_def* @gen_reg_rtx(i32 3) #4
  %call14 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 3, %struct.rtx_def* %operand1) #4
  %call15 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call9, %struct.rtx_def* %call14) #4
  %call16 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call15) #4
  %call17 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 3, %struct.rtx_def* %operand0) #4
  %call18 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call17, %struct.rtx_def* %call9) #4
  %call19 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call18) #4
  %call20 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 2) #4
  %call21 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 5, %struct.rtx_def* %operand0, %struct.rtx_def* %call20) #4
  %call22 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call21) #4
  %call23 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call24 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call23) #4
  %call25 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call22, %struct.rtx_def* %call24) #4
  %call26 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call25) #4
  %call27 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call26) #4
  %call28 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 2) #4
  %call29 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 5, %struct.rtx_def* %operand1, %struct.rtx_def* %call28) #4
  %call30 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand1, %struct.rtx_def* %call29) #4
  %call31 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call32 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call31) #4
  %call33 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call30, %struct.rtx_def* %call32) #4
  %call34 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call33) #4
  %call35 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call34) #4
  %call36 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call8, %if.then ], [ %call36, %if.else ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_strmovqi(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load i32* @target_flags, align 4, !tbaa !5
  %and = and i32 %0, 33554432
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %call = tail call %struct.rtx_def* @gen_strmovqi_rex64(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1)
  %call4 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call) #4
  %call5 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

if.end:                                           ; preds = %entry
  %1 = load i32* @x86_single_stringop, align 4, !tbaa !5
  %2 = load i32* @ix86_cpu, align 4, !tbaa !9
  %shl = shl i32 1, %2
  %and6 = and i32 %shl, %1
  %3 = load i32* @optimize_size, align 4
  %4 = or i32 %and6, %3
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %if.else, label %if.then9

if.then9:                                         ; preds = %if.end
  %call14 = tail call %struct.rtx_def* @gen_strmovqi_1(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand0, %struct.rtx_def* %operand1)
  %call15 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call14) #4
  %call16 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

if.else:                                          ; preds = %if.end
  %call17 = tail call %struct.rtx_def* @gen_reg_rtx(i32 2) #4
  %call23 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 2, %struct.rtx_def* %operand1) #4
  %call24 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call17, %struct.rtx_def* %call23) #4
  %call25 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call24) #4
  %call26 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 2, %struct.rtx_def* %operand0) #4
  %call27 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call26, %struct.rtx_def* %call17) #4
  %call28 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call27) #4
  %6 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %call29 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %operand0, %struct.rtx_def* %6) #4
  %call30 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call29) #4
  %call31 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call32 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call31) #4
  %call33 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call30, %struct.rtx_def* %call32) #4
  %call34 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call33) #4
  %call35 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call34) #4
  %7 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %call36 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %operand1, %struct.rtx_def* %7) #4
  %call37 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand1, %struct.rtx_def* %call36) #4
  %call38 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call39 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call38) #4
  %call40 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call37, %struct.rtx_def* %call39) #4
  %call41 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call40) #4
  %call42 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call41) #4
  %call43 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.else, %if.then9, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call5, %if.then ], [ %call16, %if.then9 ], [ %call43, %if.else ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_strmovqi_rex64(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load i32* @x86_single_stringop, align 4, !tbaa !5
  %1 = load i32* @ix86_cpu, align 4, !tbaa !9
  %shl = shl i32 1, %1
  %and = and i32 %shl, %0
  %2 = load i32* @optimize_size, align 4
  %3 = or i32 %and, %2
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %call = tail call %struct.rtx_def* @gen_strmovqi_rex_1(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand0, %struct.rtx_def* %operand1)
  %call7 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call) #4
  %call8 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

if.else:                                          ; preds = %entry
  %call9 = tail call %struct.rtx_def* @gen_reg_rtx(i32 2) #4
  %call14 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 2, %struct.rtx_def* %operand1) #4
  %call15 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call9, %struct.rtx_def* %call14) #4
  %call16 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call15) #4
  %call17 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 2, %struct.rtx_def* %operand0) #4
  %call18 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call17, %struct.rtx_def* %call9) #4
  %call19 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call18) #4
  %5 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %call20 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 5, %struct.rtx_def* %operand0, %struct.rtx_def* %5) #4
  %call21 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call20) #4
  %call22 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call23 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call22) #4
  %call24 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call21, %struct.rtx_def* %call23) #4
  %call25 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call24) #4
  %call26 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call25) #4
  %6 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %call27 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 5, %struct.rtx_def* %operand1, %struct.rtx_def* %6) #4
  %call28 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand1, %struct.rtx_def* %call27) #4
  %call29 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call30 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call29) #4
  %call31 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call28, %struct.rtx_def* %call30) #4
  %call32 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call31) #4
  %call33 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call32) #4
  %call34 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call8, %if.then ], [ %call34, %if.else ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_clrstrsi(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  tail call void @start_sequence() #4
  %call = tail call i32 @ix86_expand_clrstr(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %call6 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

if.else:                                          ; preds = %entry
  tail call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call6, %if.then ], [ null, %if.else ]
  ret %struct.rtx_def* %retval.0
}

declare i32 @ix86_expand_clrstr(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_clrstrdi(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  tail call void @start_sequence() #4
  %call = tail call i32 @ix86_expand_clrstr(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %call6 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

if.else:                                          ; preds = %entry
  tail call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call6, %if.then ], [ null, %if.else ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_strsetdi_rex64(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load i32* @x86_single_stringop, align 4, !tbaa !5
  %1 = load i32* @ix86_cpu, align 4, !tbaa !9
  %shl = shl i32 1, %1
  %and = and i32 %shl, %0
  %2 = load i32* @optimize_size, align 4
  %3 = or i32 %and, %2
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %call.i = tail call %struct.rtx_def* @gen_rtx_MEM(i32 4, %struct.rtx_def* %operand0) #4
  %call1.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call.i, %struct.rtx_def* %operand1) #4
  %call2.i = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 8) #4
  %call3.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 5, %struct.rtx_def* %operand0, %struct.rtx_def* %call2.i) #4
  %call4.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call3.i) #4
  %call5.i = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 19) #4
  %call6.i = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %call5.i) #4
  %call7.i = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 3, %struct.rtx_def* %call1.i, %struct.rtx_def* %call4.i, %struct.rtx_def* %call6.i) #4
  %call8.i = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call7.i) #4
  %call6 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call8.i) #4
  %call7 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

if.end:                                           ; preds = %entry
  %call10 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 5, %struct.rtx_def* %operand0) #4
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call10, %struct.rtx_def* %operand1) #4
  %call12 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call11) #4
  %call13 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 8) #4
  %call14 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 5, %struct.rtx_def* %operand0, %struct.rtx_def* %call13) #4
  %call15 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call14) #4
  %call16 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call17 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call16) #4
  %call18 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call15, %struct.rtx_def* %call17) #4
  %call19 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call18) #4
  %call20 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call19) #4
  %call21 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call7, %if.then ], [ %call21, %if.end ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_strsetsi(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load i32* @target_flags, align 4, !tbaa !5
  %and = and i32 %0, 33554432
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %call = tail call %struct.rtx_def* @gen_strsetsi_rex64(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1)
  %call4 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call) #4
  %call5 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

if.else:                                          ; preds = %entry
  %1 = load i32* @x86_single_stringop, align 4, !tbaa !5
  %2 = load i32* @ix86_cpu, align 4, !tbaa !9
  %shl = shl i32 1, %2
  %and6 = and i32 %shl, %1
  %3 = load i32* @optimize_size, align 4
  %4 = or i32 %and6, %3
  %5 = icmp eq i32 %4, 0
  %call19 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 4, %struct.rtx_def* %operand0) #4
  %call20 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call19, %struct.rtx_def* %operand1) #4
  br i1 %5, label %if.end16, label %if.then9

if.then9:                                         ; preds = %if.else
  %call2.i = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 4) #4
  %call3.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %operand0, %struct.rtx_def* %call2.i) #4
  %call4.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call3.i) #4
  %call5.i = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 19) #4
  %call6.i = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %call5.i) #4
  %call7.i = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 3, %struct.rtx_def* %call20, %struct.rtx_def* %call4.i, %struct.rtx_def* %call6.i) #4
  %call8.i = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call7.i) #4
  %call14 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call8.i) #4
  %call15 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

if.end16:                                         ; preds = %if.else
  %call21 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call20) #4
  %call22 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 4) #4
  %call23 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %operand0, %struct.rtx_def* %call22) #4
  %call24 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call23) #4
  %call25 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call26 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call25) #4
  %call27 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call24, %struct.rtx_def* %call26) #4
  %call28 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call27) #4
  %call29 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call28) #4
  %call30 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.end16, %if.then9, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call5, %if.then ], [ %call15, %if.then9 ], [ %call30, %if.end16 ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_strsetsi_rex64(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load i32* @x86_single_stringop, align 4, !tbaa !5
  %1 = load i32* @ix86_cpu, align 4, !tbaa !9
  %shl = shl i32 1, %1
  %and = and i32 %shl, %0
  %2 = load i32* @optimize_size, align 4
  %3 = or i32 %and, %2
  %4 = icmp eq i32 %3, 0
  %call10 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 4, %struct.rtx_def* %operand0) #4
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call10, %struct.rtx_def* %operand1) #4
  br i1 %4, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %call2.i = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 4) #4
  %call3.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 5, %struct.rtx_def* %operand0, %struct.rtx_def* %call2.i) #4
  %call4.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call3.i) #4
  %call5.i = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 19) #4
  %call6.i = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %call5.i) #4
  %call7.i = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 3, %struct.rtx_def* %call11, %struct.rtx_def* %call4.i, %struct.rtx_def* %call6.i) #4
  %call8.i = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call7.i) #4
  %call6 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call8.i) #4
  %call7 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

if.end:                                           ; preds = %entry
  %call12 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call11) #4
  %call13 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 4) #4
  %call14 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 5, %struct.rtx_def* %operand0, %struct.rtx_def* %call13) #4
  %call15 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call14) #4
  %call16 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call17 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call16) #4
  %call18 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call15, %struct.rtx_def* %call17) #4
  %call19 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call18) #4
  %call20 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call19) #4
  %call21 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call7, %if.then ], [ %call21, %if.end ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_strsethi(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load i32* @target_flags, align 4, !tbaa !5
  %and = and i32 %0, 33554432
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %call = tail call %struct.rtx_def* @gen_strsethi_rex64(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1)
  %call4 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call) #4
  %call5 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

if.else:                                          ; preds = %entry
  %1 = load i32* @x86_single_stringop, align 4, !tbaa !5
  %2 = load i32* @ix86_cpu, align 4, !tbaa !9
  %shl = shl i32 1, %2
  %and6 = and i32 %shl, %1
  %3 = load i32* @optimize_size, align 4
  %4 = or i32 %and6, %3
  %5 = icmp eq i32 %4, 0
  %call19 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 3, %struct.rtx_def* %operand0) #4
  %call20 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call19, %struct.rtx_def* %operand1) #4
  br i1 %5, label %if.end16, label %if.then9

if.then9:                                         ; preds = %if.else
  %call2.i = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 2) #4
  %call3.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %operand0, %struct.rtx_def* %call2.i) #4
  %call4.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call3.i) #4
  %call5.i = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 19) #4
  %call6.i = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %call5.i) #4
  %call7.i = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 3, %struct.rtx_def* %call20, %struct.rtx_def* %call4.i, %struct.rtx_def* %call6.i) #4
  %call8.i = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call7.i) #4
  %call14 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call8.i) #4
  %call15 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

if.end16:                                         ; preds = %if.else
  %call21 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call20) #4
  %call22 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 2) #4
  %call23 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %operand0, %struct.rtx_def* %call22) #4
  %call24 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call23) #4
  %call25 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call26 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call25) #4
  %call27 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call24, %struct.rtx_def* %call26) #4
  %call28 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call27) #4
  %call29 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call28) #4
  %call30 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.end16, %if.then9, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call5, %if.then ], [ %call15, %if.then9 ], [ %call30, %if.end16 ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_strsethi_rex64(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load i32* @x86_single_stringop, align 4, !tbaa !5
  %1 = load i32* @ix86_cpu, align 4, !tbaa !9
  %shl = shl i32 1, %1
  %and = and i32 %shl, %0
  %2 = load i32* @optimize_size, align 4
  %3 = or i32 %and, %2
  %4 = icmp eq i32 %3, 0
  %call10 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 3, %struct.rtx_def* %operand0) #4
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call10, %struct.rtx_def* %operand1) #4
  br i1 %4, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %call2.i = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 2) #4
  %call3.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 5, %struct.rtx_def* %operand0, %struct.rtx_def* %call2.i) #4
  %call4.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call3.i) #4
  %call5.i = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 19) #4
  %call6.i = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %call5.i) #4
  %call7.i = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 3, %struct.rtx_def* %call11, %struct.rtx_def* %call4.i, %struct.rtx_def* %call6.i) #4
  %call8.i = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call7.i) #4
  %call6 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call8.i) #4
  %call7 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

if.end:                                           ; preds = %entry
  %call12 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call11) #4
  %call13 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 2) #4
  %call14 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 5, %struct.rtx_def* %operand0, %struct.rtx_def* %call13) #4
  %call15 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call14) #4
  %call16 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call17 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call16) #4
  %call18 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call15, %struct.rtx_def* %call17) #4
  %call19 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call18) #4
  %call20 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call19) #4
  %call21 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call7, %if.then ], [ %call21, %if.end ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_strsetqi(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load i32* @target_flags, align 4, !tbaa !5
  %and = and i32 %0, 33554432
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %call = tail call %struct.rtx_def* @gen_strsetqi_rex64(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1)
  %call4 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call) #4
  %call5 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

if.else:                                          ; preds = %entry
  %1 = load i32* @x86_single_stringop, align 4, !tbaa !5
  %2 = load i32* @ix86_cpu, align 4, !tbaa !9
  %shl = shl i32 1, %2
  %and6 = and i32 %shl, %1
  %3 = load i32* @optimize_size, align 4
  %4 = or i32 %and6, %3
  %5 = icmp eq i32 %4, 0
  %call19 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 2, %struct.rtx_def* %operand0) #4
  %call20 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call19, %struct.rtx_def* %operand1) #4
  br i1 %5, label %if.end16, label %if.then9

if.then9:                                         ; preds = %if.else
  %6 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %call2.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %operand0, %struct.rtx_def* %6) #4
  %call3.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call2.i) #4
  %call4.i = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 19) #4
  %call5.i = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %call4.i) #4
  %call6.i = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 3, %struct.rtx_def* %call20, %struct.rtx_def* %call3.i, %struct.rtx_def* %call5.i) #4
  %call7.i = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call6.i) #4
  %call14 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call7.i) #4
  %call15 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

if.end16:                                         ; preds = %if.else
  %call21 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call20) #4
  %7 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %call22 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %operand0, %struct.rtx_def* %7) #4
  %call23 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call22) #4
  %call24 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call25 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call24) #4
  %call26 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call23, %struct.rtx_def* %call25) #4
  %call27 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call26) #4
  %call28 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call27) #4
  %call29 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.end16, %if.then9, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call5, %if.then ], [ %call15, %if.then9 ], [ %call29, %if.end16 ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_strsetqi_rex64(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load i32* @x86_single_stringop, align 4, !tbaa !5
  %1 = load i32* @ix86_cpu, align 4, !tbaa !9
  %shl = shl i32 1, %1
  %and = and i32 %shl, %0
  %2 = load i32* @optimize_size, align 4
  %3 = or i32 %and, %2
  %4 = icmp eq i32 %3, 0
  %call10 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 2, %struct.rtx_def* %operand0) #4
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call10, %struct.rtx_def* %operand1) #4
  br i1 %4, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %5 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %call2.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 5, %struct.rtx_def* %operand0, %struct.rtx_def* %5) #4
  %call3.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call2.i) #4
  %call4.i = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 19) #4
  %call5.i = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %call4.i) #4
  %call6.i = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 3, %struct.rtx_def* %call11, %struct.rtx_def* %call3.i, %struct.rtx_def* %call5.i) #4
  %call7.i = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call6.i) #4
  %call6 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call7.i) #4
  %call7 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

if.end:                                           ; preds = %entry
  %call12 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call11) #4
  %6 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !1
  %call13 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 5, %struct.rtx_def* %operand0, %struct.rtx_def* %6) #4
  %call14 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call13) #4
  %call15 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call16 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call15) #4
  %call17 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call14, %struct.rtx_def* %call16) #4
  %call18 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call17) #4
  %call19 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call18) #4
  %call20 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call7, %if.then ], [ %call20, %if.end ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_cmpstrsi(%struct.rtx_def* %operand0, %struct.rtx_def* nocapture readonly %operand1, %struct.rtx_def* nocapture readonly %operand2, %struct.rtx_def* %operand3, %struct.rtx_def* %operand4) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = getelementptr inbounds %struct.rtx_def* %operand0, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 61
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %call = tail call %struct.rtx_def* @gen_reg_rtx(i32 4) #4
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %out.0 = phi %struct.rtx_def* [ %call, %if.then ], [ %operand0, %entry ]
  %1 = load i32* @target_flags, align 4, !tbaa !5
  %and = lshr i32 %1, 25
  %2 = and i32 %and, 1
  %3 = or i32 %2, 4
  %arrayidx7 = getelementptr inbounds %struct.rtx_def* %operand1, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx7 to %struct.rtx_def**
  %4 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %call8 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %3, %struct.rtx_def* %4) #4
  %5 = load i32* @target_flags, align 4, !tbaa !5
  %and9 = lshr i32 %5, 25
  %6 = and i32 %and9, 1
  %7 = or i32 %6, 4
  %arrayidx14 = getelementptr inbounds %struct.rtx_def* %operand2, i64 0, i32 1, i64 0
  %rtx15 = bitcast %union.rtunion_def* %arrayidx14 to %struct.rtx_def**
  %8 = load %struct.rtx_def** %rtx15, align 8, !tbaa !1
  %call16 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %7, %struct.rtx_def* %8) #4
  %call18 = tail call %struct.rtx_def* @ix86_zero_extend_to_Pmode(%struct.rtx_def* %operand3) #4
  %call.i = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 19) #4
  %9 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call1.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call.i, %struct.rtx_def* %9) #4
  %call21 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call1.i) #4
  %10 = getelementptr inbounds %struct.rtx_def* %operand3, i64 0, i32 0
  %bf.load22 = load i32* %10, align 8
  %bf.clear23 = and i32 %bf.load22, 65535
  %cmp24 = icmp eq i32 %bf.clear23, 54
  br i1 %cmp24, label %if.then25, label %if.else42

if.then25:                                        ; preds = %if.end
  %rtwint = getelementptr inbounds %struct.rtx_def* %operand3, i64 0, i32 1, i64 0, i32 0
  %11 = load i64* %rtwint, align 8, !tbaa !7
  %cmp28 = icmp eq i64 %11, 0
  br i1 %cmp28, label %if.then29, label %if.end33

if.then29:                                        ; preds = %if.then25
  %12 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call31 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %operand0, %struct.rtx_def* %12) #4
  %call32 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %cleanup

if.end33:                                         ; preds = %if.then25
  %13 = load i32* @target_flags, align 4, !tbaa !5
  %and34 = and i32 %13, 33554432
  %tobool35 = icmp eq i32 %and34, 0
  br i1 %tobool35, label %if.else, label %if.then36

if.then36:                                        ; preds = %if.end33
  %call37 = tail call %struct.rtx_def* @gen_cmpstrqi_nz_rex_1(%struct.rtx_def* %call8, %struct.rtx_def* %call16, %struct.rtx_def* %call18, %struct.rtx_def* %operand4, %struct.rtx_def* %call8, %struct.rtx_def* %call16, %struct.rtx_def* %call18)
  %call38 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call37) #4
  br label %if.end56

if.else:                                          ; preds = %if.end33
  %call39 = tail call %struct.rtx_def* @gen_cmpstrqi_nz_1(%struct.rtx_def* %call8, %struct.rtx_def* %call16, %struct.rtx_def* %call18, %struct.rtx_def* %operand4, %struct.rtx_def* %call8, %struct.rtx_def* %call16, %struct.rtx_def* %call18)
  %call40 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call39) #4
  br label %if.end56

if.else42:                                        ; preds = %if.end
  %14 = load i32* @target_flags, align 4, !tbaa !5
  %and43 = and i32 %14, 33554432
  %tobool44 = icmp eq i32 %and43, 0
  %call.i106 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call1.i107 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 74, i32 52, %struct.rtx_def* %call18, %struct.rtx_def* %call18) #4
  %call2.i108 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call.i106, %struct.rtx_def* %call1.i107) #4
  %call52 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call2.i108) #4
  br i1 %tobool44, label %if.else50, label %if.then45

if.then45:                                        ; preds = %if.else42
  %call48 = tail call %struct.rtx_def* @gen_cmpstrqi_rex_1(%struct.rtx_def* %call8, %struct.rtx_def* %call16, %struct.rtx_def* %call18, %struct.rtx_def* %operand4, %struct.rtx_def* %call8, %struct.rtx_def* %call16, %struct.rtx_def* %call18)
  %call49 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call48) #4
  br label %if.end56

if.else50:                                        ; preds = %if.else42
  %call53 = tail call %struct.rtx_def* @gen_cmpstrqi_1(%struct.rtx_def* %call8, %struct.rtx_def* %call16, %struct.rtx_def* %call18, %struct.rtx_def* %operand4, %struct.rtx_def* %call8, %struct.rtx_def* %call16, %struct.rtx_def* %call18)
  %call54 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call53) #4
  br label %if.end56

if.end56:                                         ; preds = %if.then45, %if.else50, %if.then36, %if.else
  %call57 = tail call %struct.rtx_def* @gen_lowpart(i32 2, %struct.rtx_def* %out.0) #4
  %call58 = tail call %struct.rtx_def* @gen_cmpintqi(%struct.rtx_def* %call57)
  %call59 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call58) #4
  %call60 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 120, i32 4, %struct.rtx_def* %call57) #4
  %call61 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %out.0, %struct.rtx_def* %call60) #4
  %cmp63 = icmp eq %struct.rtx_def* %out.0, %operand0
  br i1 %cmp63, label %if.end67, label %if.then64

if.then64:                                        ; preds = %if.end56
  %call66 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %operand0, %struct.rtx_def* %out.0) #4
  br label %if.end67

if.end67:                                         ; preds = %if.end56, %if.then64
  %call68 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %cleanup

cleanup:                                          ; preds = %if.end67, %if.then29
  %retval.0 = phi %struct.rtx_def* [ %call32, %if.then29 ], [ %call68, %if.end67 ]
  ret %struct.rtx_def* %retval.0
}

declare %struct.rtx_def* @ix86_zero_extend_to_Pmode(%struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_cmpintqi(%struct.rtx_def* %operand0) #0 {
entry:
  tail call void @start_sequence() #4
  %call = tail call %struct.rtx_def* @gen_reg_rtx(i32 2) #4
  %call2 = tail call %struct.rtx_def* @gen_reg_rtx(i32 2) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 109, i32 2, %struct.rtx_def* %call7, %struct.rtx_def* %0) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call8) #4
  %call10 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %1 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call12 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 111, i32 2, %struct.rtx_def* %call11, %struct.rtx_def* %1) #4
  %call13 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call2, %struct.rtx_def* %call12) #4
  %call14 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call13) #4
  %call15 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 76, i32 2, %struct.rtx_def* %call, %struct.rtx_def* %call2) #4
  %call16 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call15) #4
  %call17 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call18 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call17) #4
  %call19 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call16, %struct.rtx_def* %call18) #4
  %call20 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call19) #4
  %call21 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call20) #4
  %call22 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call22
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_strlensi(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* %operand3) #0 {
entry:
  tail call void @start_sequence() #4
  %call = tail call i32 @ix86_expand_strlen(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* %operand3) #4
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %call8 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

if.else:                                          ; preds = %entry
  tail call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call8, %if.then ], [ null, %if.else ]
  ret %struct.rtx_def* %retval.0
}

declare i32 @ix86_expand_strlen(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_strlendi(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* %operand3) #0 {
entry:
  tail call void @start_sequence() #4
  %call = tail call i32 @ix86_expand_strlen(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* %operand3) #4
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %call8 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

if.else:                                          ; preds = %entry
  tail call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call8, %if.then ], [ null, %if.else ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_peephole2_1207(%struct.rtx_def* nocapture readnone %curr_insn, %struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %2 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %arrayidx3 = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  %3 = load %struct.rtx_def** %arrayidx3, align 8, !tbaa !1
  %arrayidx4 = getelementptr inbounds %struct.rtx_def** %operands, i64 4
  %4 = load %struct.rtx_def** %arrayidx4, align 8, !tbaa !1
  %arrayidx5 = getelementptr inbounds %struct.rtx_def** %operands, i64 5
  %5 = load %struct.rtx_def** %arrayidx5, align 8, !tbaa !1
  %arrayidx6 = getelementptr inbounds %struct.rtx_def** %operands, i64 6
  %6 = load %struct.rtx_def** %arrayidx6, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %4) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %5) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 74, i32 52, %struct.rtx_def* %call7, %struct.rtx_def* %call8) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %6) #4
  %call12 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %3) #4
  %call13 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 19) #4
  %call14 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %call13) #4
  %call15 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %0) #4
  %call16 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %1) #4
  %call17 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %2) #4
  %call18 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 7, %struct.rtx_def* %call10, %struct.rtx_def* %call11, %struct.rtx_def* %call12, %struct.rtx_def* %call14, %struct.rtx_def* %call15, %struct.rtx_def* %call16, %struct.rtx_def* %call17) #4
  %call19 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call18) #4
  %call20 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call19) #4
  %call21 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call21
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_peephole2_1208(%struct.rtx_def* nocapture readnone %curr_insn, %struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %2 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %arrayidx3 = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  %3 = load %struct.rtx_def** %arrayidx3, align 8, !tbaa !1
  %arrayidx4 = getelementptr inbounds %struct.rtx_def** %operands, i64 4
  %4 = load %struct.rtx_def** %arrayidx4, align 8, !tbaa !1
  %arrayidx5 = getelementptr inbounds %struct.rtx_def** %operands, i64 5
  %5 = load %struct.rtx_def** %arrayidx5, align 8, !tbaa !1
  %arrayidx6 = getelementptr inbounds %struct.rtx_def** %operands, i64 6
  %6 = load %struct.rtx_def** %arrayidx6, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %7 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 102, i32 0, %struct.rtx_def* %6, %struct.rtx_def* %7) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %4) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %5) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 74, i32 52, %struct.rtx_def* %call8, %struct.rtx_def* %call9) #4
  %8 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 72, i32 52, %struct.rtx_def* %call7, %struct.rtx_def* %call10, %struct.rtx_def* %8) #4
  %call12 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call11) #4
  %call13 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %3) #4
  %call14 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call15 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %call14) #4
  %call16 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 19) #4
  %call17 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %call16) #4
  %call18 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %0) #4
  %call19 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %1) #4
  %call20 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %2) #4
  %call21 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 7, %struct.rtx_def* %call12, %struct.rtx_def* %call13, %struct.rtx_def* %call15, %struct.rtx_def* %call17, %struct.rtx_def* %call18, %struct.rtx_def* %call19, %struct.rtx_def* %call20) #4
  %call22 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call21) #4
  %call23 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call22) #4
  %call24 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call24
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_movdicc(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* %operand3) #0 {
entry:
  %operands = alloca [4 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [4 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [4 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds [4 x %struct.rtx_def*]* %operands, i64 0, i64 2
  store %struct.rtx_def* %operand2, %struct.rtx_def** %arrayidx2, align 16, !tbaa !1
  %arrayidx3 = getelementptr inbounds [4 x %struct.rtx_def*]* %operands, i64 0, i64 3
  store %struct.rtx_def* %operand3, %struct.rtx_def** %arrayidx3, align 8, !tbaa !1
  %call = call i32 @ix86_expand_int_movcc(%struct.rtx_def** %arrayidx) #4
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @end_sequence() #4
  br label %return

if.end:                                           ; preds = %entry
  %call4 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call4, %if.end ], [ null, %if.then ]
  ret %struct.rtx_def* %retval.0
}

declare i32 @ix86_expand_int_movcc(%struct.rtx_def**) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_movsicc(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* %operand3) #0 {
entry:
  %operands = alloca [4 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [4 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [4 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds [4 x %struct.rtx_def*]* %operands, i64 0, i64 2
  store %struct.rtx_def* %operand2, %struct.rtx_def** %arrayidx2, align 16, !tbaa !1
  %arrayidx3 = getelementptr inbounds [4 x %struct.rtx_def*]* %operands, i64 0, i64 3
  store %struct.rtx_def* %operand3, %struct.rtx_def** %arrayidx3, align 8, !tbaa !1
  %call = call i32 @ix86_expand_int_movcc(%struct.rtx_def** %arrayidx) #4
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @end_sequence() #4
  br label %return

if.end:                                           ; preds = %entry
  %call4 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call4, %if.end ], [ null, %if.then ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_movhicc(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* %operand3) #0 {
entry:
  %operands = alloca [4 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [4 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [4 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds [4 x %struct.rtx_def*]* %operands, i64 0, i64 2
  store %struct.rtx_def* %operand2, %struct.rtx_def** %arrayidx2, align 16, !tbaa !1
  %arrayidx3 = getelementptr inbounds [4 x %struct.rtx_def*]* %operands, i64 0, i64 3
  store %struct.rtx_def* %operand3, %struct.rtx_def** %arrayidx3, align 8, !tbaa !1
  %call = call i32 @ix86_expand_int_movcc(%struct.rtx_def** %arrayidx) #4
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @end_sequence() #4
  br label %return

if.end:                                           ; preds = %entry
  %call4 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call4, %if.end ], [ null, %if.then ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_movsfcc(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* %operand3) #0 {
entry:
  %operands = alloca [4 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [4 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [4 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds [4 x %struct.rtx_def*]* %operands, i64 0, i64 2
  store %struct.rtx_def* %operand2, %struct.rtx_def** %arrayidx2, align 16, !tbaa !1
  %arrayidx3 = getelementptr inbounds [4 x %struct.rtx_def*]* %operands, i64 0, i64 3
  store %struct.rtx_def* %operand3, %struct.rtx_def** %arrayidx3, align 8, !tbaa !1
  %call = call i32 @ix86_expand_fp_movcc(%struct.rtx_def** %arrayidx) #4
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @end_sequence() #4
  br label %return

if.end:                                           ; preds = %entry
  %call4 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call4, %if.end ], [ null, %if.then ]
  ret %struct.rtx_def* %retval.0
}

declare i32 @ix86_expand_fp_movcc(%struct.rtx_def**) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_movdfcc(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* %operand3) #0 {
entry:
  %operands = alloca [4 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [4 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [4 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds [4 x %struct.rtx_def*]* %operands, i64 0, i64 2
  store %struct.rtx_def* %operand2, %struct.rtx_def** %arrayidx2, align 16, !tbaa !1
  %arrayidx3 = getelementptr inbounds [4 x %struct.rtx_def*]* %operands, i64 0, i64 3
  store %struct.rtx_def* %operand3, %struct.rtx_def** %arrayidx3, align 8, !tbaa !1
  %call = call i32 @ix86_expand_fp_movcc(%struct.rtx_def** %arrayidx) #4
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @end_sequence() #4
  br label %return

if.end:                                           ; preds = %entry
  %call4 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call4, %if.end ], [ null, %if.then ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1214(%struct.rtx_def** %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %add.ptr = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %add.ptr1 = getelementptr inbounds %struct.rtx_def** %operands, i64 5
  %add.ptr2 = getelementptr inbounds %struct.rtx_def** %operands, i64 6
  tail call void @split_di(%struct.rtx_def** %add.ptr, i32 1, %struct.rtx_def** %add.ptr1, %struct.rtx_def** %add.ptr2) #4
  %add.ptr3 = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  %add.ptr4 = getelementptr inbounds %struct.rtx_def** %operands, i64 7
  %add.ptr5 = getelementptr inbounds %struct.rtx_def** %operands, i64 8
  tail call void @split_di(%struct.rtx_def** %add.ptr3, i32 1, %struct.rtx_def** %add.ptr4, %struct.rtx_def** %add.ptr5) #4
  tail call void @split_di(%struct.rtx_def** %operands, i32 1, %struct.rtx_def** %add.ptr, %struct.rtx_def** %add.ptr3) #4
  %arrayidx8 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %0 = load %struct.rtx_def** %arrayidx8, align 8, !tbaa !1
  %1 = load %struct.rtx_def** %add.ptr, align 8, !tbaa !1
  %2 = load %struct.rtx_def** %add.ptr3, align 8, !tbaa !1
  %arrayidx11 = getelementptr inbounds %struct.rtx_def** %operands, i64 4
  %3 = load %struct.rtx_def** %arrayidx11, align 8, !tbaa !1
  %4 = load %struct.rtx_def** %add.ptr1, align 8, !tbaa !1
  %5 = load %struct.rtx_def** %add.ptr2, align 8, !tbaa !1
  %6 = load %struct.rtx_def** %add.ptr4, align 8, !tbaa !1
  %7 = load %struct.rtx_def** %add.ptr5, align 8, !tbaa !1
  %8 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 0
  %bf.load = load i32* %8, align 8
  %bf.clear = and i32 %bf.load, 65535
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear17 = and i32 %bf.lshr, 255
  %9 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call = tail call %struct.rtx_def* (i32, i32, ...)* @gen_rtx(i32 %bf.clear, i32 %bf.clear17, %struct.rtx_def* %3, %struct.rtx_def* %9) #4
  %call18 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 72, i32 4, %struct.rtx_def* %call, %struct.rtx_def* %4, %struct.rtx_def* %6) #4
  %call19 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %1, %struct.rtx_def* %call18) #4
  %call20 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call19) #4
  %bf.load21 = load i32* %8, align 8
  %bf.clear22 = and i32 %bf.load21, 65535
  %bf.lshr24 = lshr i32 %bf.load21, 16
  %bf.clear25 = and i32 %bf.lshr24, 255
  %call26 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %3) #4
  %10 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call27 = tail call %struct.rtx_def* (i32, i32, ...)* @gen_rtx(i32 %bf.clear22, i32 %bf.clear25, %struct.rtx_def* %call26, %struct.rtx_def* %10) #4
  %call28 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 72, i32 4, %struct.rtx_def* %call27, %struct.rtx_def* %5, %struct.rtx_def* %7) #4
  %call29 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %2, %struct.rtx_def* %call28) #4
  %call30 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call29) #4
  %call31 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call31
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_movxfcc(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* %operand3) #0 {
entry:
  %operands = alloca [4 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [4 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [4 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds [4 x %struct.rtx_def*]* %operands, i64 0, i64 2
  store %struct.rtx_def* %operand2, %struct.rtx_def** %arrayidx2, align 16, !tbaa !1
  %arrayidx3 = getelementptr inbounds [4 x %struct.rtx_def*]* %operands, i64 0, i64 3
  store %struct.rtx_def* %operand3, %struct.rtx_def** %arrayidx3, align 8, !tbaa !1
  %call = call i32 @ix86_expand_fp_movcc(%struct.rtx_def** %arrayidx) #4
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @end_sequence() #4
  br label %return

if.end:                                           ; preds = %entry
  %call4 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call4, %if.end ], [ null, %if.then ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_movtfcc(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* %operand3) #0 {
entry:
  %operands = alloca [4 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [4 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [4 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds [4 x %struct.rtx_def*]* %operands, i64 0, i64 2
  store %struct.rtx_def* %operand2, %struct.rtx_def** %arrayidx2, align 16, !tbaa !1
  %arrayidx3 = getelementptr inbounds [4 x %struct.rtx_def*]* %operands, i64 0, i64 3
  store %struct.rtx_def* %operand3, %struct.rtx_def** %arrayidx3, align 8, !tbaa !1
  %call = call i32 @ix86_expand_fp_movcc(%struct.rtx_def** %arrayidx) #4
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @end_sequence() #4
  br label %return

if.end:                                           ; preds = %entry
  %call4 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call4, %if.end ], [ null, %if.then ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_minsf3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 107, i32 0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 72, i32 15, %struct.rtx_def* %call, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call2, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call5) #4
  ret %struct.rtx_def* %call6
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1218(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %2 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 107, i32 0, %struct.rtx_def* %1, %struct.rtx_def* %2) #4
  %call3 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %1) #4
  %call4 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %2) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 72, i32 15, %struct.rtx_def* %call, %struct.rtx_def* %call3, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call8
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1219(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %2 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 57, i32 17) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 74, i32 57, %struct.rtx_def* %2, %struct.rtx_def* %1) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_REG(i32 57, i32 17) #4
  %3 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 104, i32 0, %struct.rtx_def* %call6, %struct.rtx_def* %3) #4
  %call8 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %1) #4
  %call9 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %2) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 72, i32 15, %struct.rtx_def* %call7, %struct.rtx_def* %call8, %struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call10) #4
  %call12 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call11) #4
  %call13 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call13
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_mindf3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  tail call void @start_sequence() #4
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 107, i32 0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 72, i32 16, %struct.rtx_def* %call, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call8) #4
  %call10 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call7, %struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call10) #4
  %call12 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call11) #4
  %call13 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call13
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1221(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %2 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 107, i32 0, %struct.rtx_def* %1, %struct.rtx_def* %2) #4
  %call3 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %1) #4
  %call4 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %2) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 72, i32 16, %struct.rtx_def* %call, %struct.rtx_def* %call3, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call8
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1222(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %2 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 57, i32 17) #4
  %call3 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %2) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 74, i32 57, %struct.rtx_def* %2, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_REG(i32 57, i32 17) #4
  %3 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 104, i32 0, %struct.rtx_def* %call7, %struct.rtx_def* %3) #4
  %call9 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %2) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 72, i32 16, %struct.rtx_def* %call8, %struct.rtx_def* %1, %struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call10) #4
  %call12 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call11) #4
  %call13 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call13
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_maxsf3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  tail call void @start_sequence() #4
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 105, i32 0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 72, i32 15, %struct.rtx_def* %call, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call8) #4
  %call10 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call7, %struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call10) #4
  %call12 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call11) #4
  %call13 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call13
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1224(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %2 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 105, i32 0, %struct.rtx_def* %1, %struct.rtx_def* %2) #4
  %call3 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %1) #4
  %call4 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %2) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 72, i32 15, %struct.rtx_def* %call, %struct.rtx_def* %call3, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call8
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1225(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %2 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 57, i32 17) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 74, i32 57, %struct.rtx_def* %1, %struct.rtx_def* %2) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_REG(i32 57, i32 17) #4
  %3 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 105, i32 0, %struct.rtx_def* %call6, %struct.rtx_def* %3) #4
  %call8 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %1) #4
  %call9 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %2) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 72, i32 15, %struct.rtx_def* %call7, %struct.rtx_def* %call8, %struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call10) #4
  %call12 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call11) #4
  %call13 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call13
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_maxdf3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  tail call void @start_sequence() #4
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 105, i32 0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 72, i32 16, %struct.rtx_def* %call, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call8) #4
  %call10 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call7, %struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call10) #4
  %call12 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call11) #4
  %call13 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call13
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1227(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %2 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 105, i32 0, %struct.rtx_def* %1, %struct.rtx_def* %2) #4
  %call3 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %1) #4
  %call4 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %2) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 72, i32 16, %struct.rtx_def* %call, %struct.rtx_def* %call3, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call8
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1228(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %2 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 57, i32 17) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 74, i32 57, %struct.rtx_def* %1, %struct.rtx_def* %2) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_REG(i32 57, i32 17) #4
  %3 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 105, i32 0, %struct.rtx_def* %call6, %struct.rtx_def* %3) #4
  %call8 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %1) #4
  %call9 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %2) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 72, i32 16, %struct.rtx_def* %call7, %struct.rtx_def* %call8, %struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call10) #4
  %call12 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call11) #4
  %call13 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call13
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_pro_epilogue_adjust_stack(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load i32* @target_flags, align 4, !tbaa !5
  %and = and i32 %0, 33554432
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %call.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 5, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call1.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call.i) #4
  %call2.i = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call3.i = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call2.i) #4
  %call4.i = tail call %struct.rtx_def* @gen_rtx_fmt_0(i32 62, i32 0) #4
  %call5.i = tail call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %call4.i) #4
  %call6.i = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call5.i) #4
  %call7.i = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 3, %struct.rtx_def* %call1.i, %struct.rtx_def* %call3.i, %struct.rtx_def* %call6.i) #4
  %call8.i = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call7.i) #4
  %call6 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call8.i) #4
  %call7 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

if.end:                                           ; preds = %entry
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #4
  %call12 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call11) #4
  %call13 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call14 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call13) #4
  %call15 = tail call %struct.rtx_def* @gen_rtx_fmt_0(i32 62, i32 0) #4
  %call16 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %call15) #4
  %call17 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call16) #4
  %call18 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 3, %struct.rtx_def* %call12, %struct.rtx_def* %call14, %struct.rtx_def* %call17) #4
  %call19 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call18) #4
  %call20 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call19) #4
  %call21 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call7, %if.then ], [ %call21, %if.end ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1230(%struct.rtx_def** %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 5
  %0 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  store %struct.rtx_def* %0, %struct.rtx_def** @ix86_compare_op0, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 4
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  store %struct.rtx_def* %1, %struct.rtx_def** @ix86_compare_op1, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %2 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %3 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 0
  %bf.load = load i32* %3, align 8
  %bf.clear = and i32 %bf.load, 65535
  %call = tail call i32 @swap_condition(i32 %bf.clear) #4
  %4 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %5 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 %call, i32 0, %struct.rtx_def* %4, %struct.rtx_def* %5) #4
  store %struct.rtx_def* %call5, %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %call7 = tail call i32 @ix86_expand_fp_movcc(%struct.rtx_def** %operands) #4
  %call8 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call8
}

declare i32 @swap_condition(i32) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1231(%struct.rtx_def** nocapture %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %0 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call = tail call i32 @operands_match_p(%struct.rtx_def* %0, %struct.rtx_def* %1) #4
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str, i64 0, i64 0), i32 16727, i8* getelementptr inbounds ([15 x i8]* @__FUNCTION__.gen_split_1231, i64 0, i64 0)) #5
  unreachable

if.end:                                           ; preds = %entry
  %2 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %3 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 0
  %bf.load = load i32* %3, align 8
  %bf.clear = and i32 %bf.load, 16711680
  %arrayidx3 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %4 = load %struct.rtx_def** %arrayidx3, align 8, !tbaa !1
  %5 = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 0
  %bf.load4 = load i32* %5, align 8
  %bf.clear5 = and i32 %bf.load4, -16711681
  %bf.set = or i32 %bf.clear5, %bf.clear
  store i32 %bf.set, i32* %5, align 8
  %6 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx7 = getelementptr inbounds %struct.rtx_def** %operands, i64 4
  %7 = load %struct.rtx_def** %arrayidx7, align 8, !tbaa !1
  %call8 = tail call i32 @operands_match_p(%struct.rtx_def* %6, %struct.rtx_def* %7) #4
  %tobool9 = icmp eq i32 %call8, 0
  br i1 %tobool9, label %if.else, label %if.then10

if.then10:                                        ; preds = %if.end
  %8 = load %struct.rtx_def** %arrayidx7, align 8, !tbaa !1
  %arrayidx12 = getelementptr inbounds %struct.rtx_def** %operands, i64 6
  store %struct.rtx_def* %8, %struct.rtx_def** %arrayidx12, align 8, !tbaa !1
  %9 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %arrayidx14 = getelementptr inbounds %struct.rtx_def** %operands, i64 7
  store %struct.rtx_def* %9, %struct.rtx_def** %arrayidx14, align 8, !tbaa !1
  br label %if.end19

if.else:                                          ; preds = %if.end
  %10 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %arrayidx16 = getelementptr inbounds %struct.rtx_def** %operands, i64 6
  store %struct.rtx_def* %10, %struct.rtx_def** %arrayidx16, align 8, !tbaa !1
  %11 = load %struct.rtx_def** %arrayidx7, align 8, !tbaa !1
  %arrayidx18 = getelementptr inbounds %struct.rtx_def** %operands, i64 7
  store %struct.rtx_def* %11, %struct.rtx_def** %arrayidx18, align 8, !tbaa !1
  br label %if.end19

if.end19:                                         ; preds = %if.else, %if.then10
  %12 = phi %struct.rtx_def* [ %11, %if.else ], [ %9, %if.then10 ]
  %13 = phi %struct.rtx_def* [ %10, %if.else ], [ %8, %if.then10 ]
  %14 = phi %struct.rtx_def* [ %11, %if.else ], [ %8, %if.then10 ]
  %15 = phi %struct.rtx_def* [ %10, %if.else ], [ %9, %if.then10 ]
  %16 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %17 = load %struct.rtx_def** %arrayidx3, align 8, !tbaa !1
  %18 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx25 = getelementptr inbounds %struct.rtx_def** %operands, i64 5
  %19 = load %struct.rtx_def** %arrayidx25, align 8, !tbaa !1
  %20 = getelementptr inbounds %struct.rtx_def* %17, i64 0, i32 0
  %bf.load28 = load i32* %20, align 8
  %bf.clear29 = and i32 %bf.load28, 65535
  %bf.lshr31 = lshr i32 %bf.load28, 16
  %bf.clear32 = and i32 %bf.lshr31, 255
  %call33 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %14) #4
  %call34 = tail call %struct.rtx_def* (i32, i32, ...)* @gen_rtx(i32 %bf.clear29, i32 %bf.clear32, %struct.rtx_def* %call33, %struct.rtx_def* %19) #4
  %call35 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %14, %struct.rtx_def* %call34) #4
  %call36 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call35) #4
  %call37 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 6, %struct.rtx_def* %15, i32 0) #4
  %call38 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %15) #4
  %call39 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 6, %struct.rtx_def* %call38, i32 0) #4
  %call40 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %14) #4
  %call41 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 6, %struct.rtx_def* %call40, i32 0) #4
  %call42 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 83, i32 6, %struct.rtx_def* %call39, %struct.rtx_def* %call41) #4
  %call43 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call37, %struct.rtx_def* %call42) #4
  %call44 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call43) #4
  %call45 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %14) #4
  %call46 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 6, %struct.rtx_def* %call45, i32 0) #4
  %call47 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %14) #4
  %call48 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 6, %struct.rtx_def* %call47, i32 0) #4
  %call49 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 86, i32 6, %struct.rtx_def* %call48) #4
  %call50 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 6, %struct.rtx_def* %18, i32 0) #4
  %call51 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 83, i32 6, %struct.rtx_def* %call49, %struct.rtx_def* %call50) #4
  %call52 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call46, %struct.rtx_def* %call51) #4
  %call53 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call52) #4
  %call54 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 6, %struct.rtx_def* %16, i32 0) #4
  %call55 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 6, %struct.rtx_def* %13, i32 0) #4
  %call56 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 6, %struct.rtx_def* %12, i32 0) #4
  %call57 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 84, i32 6, %struct.rtx_def* %call55, %struct.rtx_def* %call56) #4
  %call58 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call54, %struct.rtx_def* %call57) #4
  %call59 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call58) #4
  %call60 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call60
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1232(%struct.rtx_def** nocapture %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %1 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 0
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 16711680
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %2 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %3 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 0
  %bf.load2 = load i32* %3, align 8
  %bf.clear3 = and i32 %bf.load2, -16711681
  %bf.set = or i32 %bf.clear3, %bf.clear
  store i32 %bf.set, i32* %3, align 8
  %4 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call = tail call i32 @sse_comparison_operator(%struct.rtx_def* %4, i32 0) #4
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %arrayidx5 = getelementptr inbounds %struct.rtx_def** %operands, i64 5
  %5 = load %struct.rtx_def** %arrayidx5, align 8, !tbaa !1
  %arrayidx6 = getelementptr inbounds %struct.rtx_def** %operands, i64 4
  %6 = load %struct.rtx_def** %arrayidx6, align 8, !tbaa !1
  store %struct.rtx_def* %6, %struct.rtx_def** %arrayidx5, align 8, !tbaa !1
  store %struct.rtx_def* %5, %struct.rtx_def** %arrayidx6, align 8, !tbaa !1
  %7 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %8 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 0
  %bf.load10 = load i32* %8, align 8
  %bf.clear11 = and i32 %bf.load10, 65535
  %call12 = tail call i32 @swap_condition(i32 %bf.clear11) #4
  %9 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %10 = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 0
  %bf.load14 = load i32* %10, align 8
  %bf.value15 = and i32 %call12, 65535
  %bf.clear16 = and i32 %bf.load14, -65536
  %bf.set17 = or i32 %bf.clear16, %bf.value15
  store i32 %bf.set17, i32* %10, align 8
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %arrayidx18 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %11 = load %struct.rtx_def** %arrayidx18, align 8, !tbaa !1
  %12 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %13 = getelementptr inbounds %struct.rtx_def* %12, i64 0, i32 0
  %bf.load20 = load i32* %13, align 8
  %bf.lshr21 = lshr i32 %bf.load20, 16
  %bf.clear22 = and i32 %bf.lshr21, 255
  %call23 = tail call i32 @const0_operand(%struct.rtx_def* %11, i32 %bf.clear22) #4
  %tobool24 = icmp eq i32 %call23, 0
  br i1 %tobool24, label %if.else, label %if.then25

if.then25:                                        ; preds = %if.end
  %arrayidx26 = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  %14 = load %struct.rtx_def** %arrayidx26, align 8, !tbaa !1
  %arrayidx27 = getelementptr inbounds %struct.rtx_def** %operands, i64 7
  store %struct.rtx_def* %14, %struct.rtx_def** %arrayidx27, align 8, !tbaa !1
  %15 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %call29 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 6, %struct.rtx_def* %15, i32 0) #4
  %call30 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 86, i32 6, %struct.rtx_def* %call29) #4
  %arrayidx31 = getelementptr inbounds %struct.rtx_def** %operands, i64 6
  store %struct.rtx_def* %call30, %struct.rtx_def** %arrayidx31, align 8, !tbaa !1
  br label %if.end37

if.else:                                          ; preds = %if.end
  %16 = load %struct.rtx_def** %arrayidx18, align 8, !tbaa !1
  %arrayidx33 = getelementptr inbounds %struct.rtx_def** %operands, i64 7
  store %struct.rtx_def* %16, %struct.rtx_def** %arrayidx33, align 8, !tbaa !1
  %17 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %call35 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 6, %struct.rtx_def* %17, i32 0) #4
  %arrayidx36 = getelementptr inbounds %struct.rtx_def** %operands, i64 6
  store %struct.rtx_def* %call35, %struct.rtx_def** %arrayidx36, align 8, !tbaa !1
  br label %if.end37

if.end37:                                         ; preds = %if.else, %if.then25
  %18 = phi %struct.rtx_def* [ %call35, %if.else ], [ %call30, %if.then25 ]
  %19 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %20 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %arrayidx43 = getelementptr inbounds %struct.rtx_def** %operands, i64 5
  %21 = load %struct.rtx_def** %arrayidx43, align 8, !tbaa !1
  %arrayidx45 = getelementptr inbounds %struct.rtx_def** %operands, i64 7
  %22 = load %struct.rtx_def** %arrayidx45, align 8, !tbaa !1
  %23 = getelementptr inbounds %struct.rtx_def* %20, i64 0, i32 0
  %bf.load46 = load i32* %23, align 8
  %bf.clear47 = and i32 %bf.load46, 65535
  %bf.lshr49 = lshr i32 %bf.load46, 16
  %bf.clear50 = and i32 %bf.lshr49, 255
  %call51 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %19) #4
  %call52 = tail call %struct.rtx_def* (i32, i32, ...)* @gen_rtx(i32 %bf.clear47, i32 %bf.clear50, %struct.rtx_def* %call51, %struct.rtx_def* %21) #4
  %call53 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %19, %struct.rtx_def* %call52) #4
  %call54 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call53) #4
  %call55 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %19) #4
  %call56 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 6, %struct.rtx_def* %call55, i32 0) #4
  %call57 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 6, %struct.rtx_def* %22, i32 0) #4
  %call58 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 83, i32 6, %struct.rtx_def* %18, %struct.rtx_def* %call57) #4
  %call59 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call56, %struct.rtx_def* %call58) #4
  %call60 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call59) #4
  %call61 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call61
}

declare i32 @sse_comparison_operator(%struct.rtx_def*, i32) #1

declare i32 @const0_operand(%struct.rtx_def*, i32) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_allocate_stack_worker(%struct.rtx_def* %operand0) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load i32* @target_flags, align 4, !tbaa !5
  %and = and i32 %0, 33554432
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %call = tail call %struct.rtx_def* @gen_allocate_stack_worker_rex64(%struct.rtx_def* %operand0)
  %call2 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call) #4
  br label %if.end

if.else:                                          ; preds = %entry
  %call4 = tail call %struct.rtx_def* @gen_allocate_stack_worker_1(%struct.rtx_def* %operand0)
  %call5 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call4) #4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %call6 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call6
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_allocate_stack(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  tail call void @start_sequence() #4
  %call = tail call %struct.rtx_def* @copy_to_mode_reg(i32 4, %struct.rtx_def* %operand1) #4
  tail call void @start_sequence() #4
  %0 = load i32* @target_flags, align 4, !tbaa !5
  %and.i = and i32 %0, 33554432
  %tobool.i = icmp eq i32 %and.i, 0
  br i1 %tobool.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %entry
  %call.i = tail call %struct.rtx_def* @gen_allocate_stack_worker_rex64(%struct.rtx_def* %call) #4
  %call2.i = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call.i) #4
  br label %gen_allocate_stack_worker.exit

if.else.i:                                        ; preds = %entry
  %call4.i = tail call %struct.rtx_def* @gen_allocate_stack_worker_1(%struct.rtx_def* %call) #4
  %call5.i = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call4.i) #4
  br label %gen_allocate_stack_worker.exit

gen_allocate_stack_worker.exit:                   ; preds = %if.then.i, %if.else.i
  %call6.i = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  %call4 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call6.i) #4
  %1 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 8), align 8, !tbaa !1
  %call6 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %operand0, %struct.rtx_def* %1) #4
  %call7 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call7
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_builtin_setjmp_receiver(%struct.rtx_def* nocapture readnone %operand0) #0 {
entry:
  tail call void @start_sequence() #4
  tail call void @load_pic_register() #4
  %call = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

declare void @load_pic_register() #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1236(%struct.rtx_def** nocapture %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_lowpart(i32 4, %struct.rtx_def* %0) #4
  store %struct.rtx_def* %call, %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %call3 = tail call %struct.rtx_def* @gen_lowpart(i32 4, %struct.rtx_def* %1) #4
  store %struct.rtx_def* %call3, %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %arrayidx5 = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  %2 = load %struct.rtx_def** %arrayidx5, align 8, !tbaa !1
  %3 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 0
  %bf.load = load i32* %3, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 87
  %arrayidx14.pre = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %4 = load %struct.rtx_def** %arrayidx14.pre, align 8, !tbaa !1
  %call7 = tail call %struct.rtx_def* @gen_lowpart(i32 4, %struct.rtx_def* %4) #4
  store %struct.rtx_def* %call7, %struct.rtx_def** %arrayidx14.pre, align 8, !tbaa !1
  %.pre = load %struct.rtx_def** %arrayidx5, align 8, !tbaa !1
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %.pre, i64 0, i32 0
  %bf.load10.pre = load i32* %.phi.trans.insert, align 8
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %bf.load10 = phi i32 [ %bf.load10.pre, %if.then ], [ %bf.load, %entry ]
  %5 = phi %struct.rtx_def* [ %.pre, %if.then ], [ %2, %entry ]
  %6 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 0
  %bf.clear11 = and i32 %bf.load10, -16711681
  %bf.set = or i32 %bf.clear11, 262144
  store i32 %bf.set, i32* %6, align 8
  %7 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %8 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %9 = load %struct.rtx_def** %arrayidx14.pre, align 8, !tbaa !1
  %10 = load %struct.rtx_def** %arrayidx5, align 8, !tbaa !1
  %11 = getelementptr inbounds %struct.rtx_def* %10, i64 0, i32 0
  %bf.load16 = load i32* %11, align 8
  %bf.clear17 = and i32 %bf.load16, 65535
  %bf.lshr = lshr i32 %bf.load16, 16
  %bf.clear19 = and i32 %bf.lshr, 255
  %call20 = tail call %struct.rtx_def* (i32, i32, ...)* @gen_rtx(i32 %bf.clear17, i32 %bf.clear19, %struct.rtx_def* %8, %struct.rtx_def* %9) #4
  %call21 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %7, %struct.rtx_def* %call20) #4
  %call22 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call23 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call22) #4
  %call24 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call21, %struct.rtx_def* %call23) #4
  %call25 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call24) #4
  %call26 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call25) #4
  %call27 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call27
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1237(%struct.rtx_def** nocapture %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %0 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %rtwint = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 0, i32 0
  %1 = load i64* %rtwint, align 8, !tbaa !7
  %2 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %3 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 0
  %bf.load = load i32* %3, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %idxprom38 = zext i32 %bf.clear to i64
  %arrayidx3 = getelementptr inbounds [59 x i64]* @mode_mask_array, i64 0, i64 %idxprom38
  %4 = load i64* %arrayidx3, align 8, !tbaa !7
  %and = and i64 %4, %1
  %call = tail call i64 @trunc_int_for_mode(i64 %and, i32 4) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call) #4
  store %struct.rtx_def* %call4, %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %5 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %call7 = tail call %struct.rtx_def* @gen_lowpart(i32 4, %struct.rtx_def* %5) #4
  store %struct.rtx_def* %call7, %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx9 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %6 = load %struct.rtx_def** %arrayidx9, align 8, !tbaa !1
  %call10 = tail call %struct.rtx_def* @gen_lowpart(i32 4, %struct.rtx_def* %6) #4
  store %struct.rtx_def* %call10, %struct.rtx_def** %arrayidx9, align 8, !tbaa !1
  %7 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %8 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %call15 = tail call %struct.rtx_def* @gen_rtx_REG(i32 55, i32 17) #4
  %call16 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 83, i32 4, %struct.rtx_def* %call10, %struct.rtx_def* %8) #4
  %9 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call17 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 74, i32 55, %struct.rtx_def* %call16, %struct.rtx_def* %9) #4
  %call18 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call15, %struct.rtx_def* %call17) #4
  %call19 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %call10) #4
  %call20 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %8) #4
  %call21 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 83, i32 4, %struct.rtx_def* %call19, %struct.rtx_def* %call20) #4
  %call22 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %7, %struct.rtx_def* %call21) #4
  %call23 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call18, %struct.rtx_def* %call22) #4
  %call24 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call23) #4
  %call25 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call24) #4
  %call26 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call26
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1238(%struct.rtx_def** nocapture %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %0 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %rtwint = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 0, i32 0
  %1 = load i64* %rtwint, align 8, !tbaa !7
  %2 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %3 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 0
  %bf.load = load i32* %3, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %idxprom23 = zext i32 %bf.clear to i64
  %arrayidx3 = getelementptr inbounds [59 x i64]* @mode_mask_array, i64 0, i64 %idxprom23
  %4 = load i64* %arrayidx3, align 8, !tbaa !7
  %and = and i64 %4, %1
  %call = tail call i64 @trunc_int_for_mode(i64 %and, i32 4) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call) #4
  store %struct.rtx_def* %call4, %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %5 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %call7 = tail call %struct.rtx_def* @gen_lowpart(i32 4, %struct.rtx_def* %5) #4
  store %struct.rtx_def* %call7, %struct.rtx_def** %operands, align 8, !tbaa !1
  %6 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %call11 = tail call %struct.rtx_def* @gen_rtx_REG(i32 55, i32 17) #4
  %call12 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 83, i32 4, %struct.rtx_def* %call7, %struct.rtx_def* %6) #4
  %7 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call13 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 74, i32 55, %struct.rtx_def* %call12, %struct.rtx_def* %7) #4
  %call14 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call11, %struct.rtx_def* %call13) #4
  %call15 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call14) #4
  %call16 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call16
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1239(%struct.rtx_def** nocapture %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_lowpart(i32 4, %struct.rtx_def* %0) #4
  store %struct.rtx_def* %call, %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %call3 = tail call %struct.rtx_def* @gen_lowpart(i32 4, %struct.rtx_def* %1) #4
  store %struct.rtx_def* %call3, %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %2 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 77, i32 4, %struct.rtx_def* %call3) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %2, %struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call8, %struct.rtx_def* %call10) #4
  %call12 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call11) #4
  %call13 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call12) #4
  %call14 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call14
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1240(%struct.rtx_def** nocapture %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_lowpart(i32 4, %struct.rtx_def* %0) #4
  store %struct.rtx_def* %call, %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %call3 = tail call %struct.rtx_def* @gen_lowpart(i32 4, %struct.rtx_def* %1) #4
  store %struct.rtx_def* %call3, %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %2 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 86, i32 4, %struct.rtx_def* %call3) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %2, %struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call8) #4
  %call10 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call10
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1241(%struct.rtx_def** nocapture %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_lowpart(i32 4, %struct.rtx_def* %0) #4
  store %struct.rtx_def* %call, %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %1 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %call3 = tail call %struct.rtx_def* @gen_lowpart(i32 4, %struct.rtx_def* %1) #4
  store %struct.rtx_def* %call3, %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %arrayidx5 = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  %2 = load %struct.rtx_def** %arrayidx5, align 8, !tbaa !1
  %call6 = tail call %struct.rtx_def* @gen_lowpart(i32 4, %struct.rtx_def* %2) #4
  store %struct.rtx_def* %call6, %struct.rtx_def** %arrayidx5, align 8, !tbaa !1
  %3 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx9 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %4 = load %struct.rtx_def** %arrayidx9, align 8, !tbaa !1
  %5 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %call12 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 72, i32 4, %struct.rtx_def* %4, %struct.rtx_def* %5, %struct.rtx_def* %call6) #4
  %call13 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %3, %struct.rtx_def* %call12) #4
  %call14 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call13) #4
  %call15 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call15
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_peephole2_1242(%struct.rtx_def* nocapture readnone %curr_insn, %struct.rtx_def** nocapture %operands) #0 {
entry:
  %_regs_allocated = alloca i64, align 8
  store i64 0, i64* %_regs_allocated, align 8, !tbaa !7
  %call = call %struct.rtx_def* @peep2_find_free_register(i32 1, i32 1, i8* getelementptr inbounds ([2 x i8]* @.str1, i64 0, i64 0), i32 4, i64* %_regs_allocated) #4
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %cmp = icmp eq %struct.rtx_def* %call, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %2 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %call4 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %2, %struct.rtx_def* %1) #4
  %call5 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call4) #4
  %call6 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %2) #4
  %call7 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call6) #4
  %call8 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call7) #4
  %call9 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  br label %return

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.rtx_def* [ %call9, %if.end ], [ null, %entry ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_peephole2_1243(%struct.rtx_def* nocapture readnone %curr_insn, %struct.rtx_def** nocapture %operands) #0 {
entry:
  %_regs_allocated = alloca i64, align 8
  store i64 0, i64* %_regs_allocated, align 8, !tbaa !7
  %call = call %struct.rtx_def* @peep2_find_free_register(i32 1, i32 1, i8* getelementptr inbounds ([2 x i8]* @.str1, i64 0, i64 0), i32 5, i64* %_regs_allocated) #4
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %cmp = icmp eq %struct.rtx_def* %call, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %2 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %call4 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %2, %struct.rtx_def* %1) #4
  %call5 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call4) #4
  %call6 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %2) #4
  %call7 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call6) #4
  %call8 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call7) #4
  %call9 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  br label %return

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.rtx_def* [ %call9, %if.end ], [ null, %entry ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_peephole2_1244(%struct.rtx_def* nocapture readnone %curr_insn, %struct.rtx_def** nocapture %operands) #0 {
entry:
  %_regs_allocated = alloca i64, align 8
  store i64 0, i64* %_regs_allocated, align 8, !tbaa !7
  %call = call %struct.rtx_def* @peep2_find_free_register(i32 1, i32 1, i8* getelementptr inbounds ([2 x i8]* @.str1, i64 0, i64 0), i32 15, i64* %_regs_allocated) #4
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %cmp = icmp eq %struct.rtx_def* %call, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %2 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %call4 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %2, %struct.rtx_def* %1) #4
  %call5 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call4) #4
  %call6 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %2) #4
  %call7 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call6) #4
  %call8 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call7) #4
  %call9 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  br label %return

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.rtx_def* [ %call9, %if.end ], [ null, %entry ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_peephole2_1245(%struct.rtx_def* nocapture readnone %curr_insn, %struct.rtx_def** nocapture %operands) #0 {
entry:
  %_regs_allocated = alloca i64, align 8
  store i64 0, i64* %_regs_allocated, align 8, !tbaa !7
  %call = call %struct.rtx_def* @peep2_find_free_register(i32 1, i32 1, i8* getelementptr inbounds ([2 x i8]* @.str1, i64 0, i64 0), i32 3, i64* %_regs_allocated) #4
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %cmp = icmp eq %struct.rtx_def* %call, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %2 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %call4 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %2, %struct.rtx_def* %1) #4
  %call5 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call4) #4
  %call6 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %2) #4
  %call7 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call6) #4
  %call8 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call7) #4
  %call9 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  br label %return

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.rtx_def* [ %call9, %if.end ], [ null, %entry ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_peephole2_1246(%struct.rtx_def* nocapture readnone %curr_insn, %struct.rtx_def** nocapture %operands) #0 {
entry:
  %_regs_allocated = alloca i64, align 8
  store i64 0, i64* %_regs_allocated, align 8, !tbaa !7
  %call = call %struct.rtx_def* @peep2_find_free_register(i32 1, i32 1, i8* getelementptr inbounds ([2 x i8]* @.str2, i64 0, i64 0), i32 2, i64* %_regs_allocated) #4
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %cmp = icmp eq %struct.rtx_def* %call, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %2 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %call4 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %2, %struct.rtx_def* %1) #4
  %call5 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call4) #4
  %call6 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %2) #4
  %call7 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call6) #4
  %call8 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call7) #4
  %call9 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  br label %return

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.rtx_def* [ %call9, %if.end ], [ null, %entry ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_peephole2_1247(%struct.rtx_def* nocapture readnone %curr_insn, %struct.rtx_def** nocapture %operands) #0 {
entry:
  %_regs_allocated = alloca i64, align 8
  store i64 0, i64* %_regs_allocated, align 8, !tbaa !7
  %call = call %struct.rtx_def* @peep2_find_free_register(i32 0, i32 0, i8* getelementptr inbounds ([2 x i8]* @.str1, i64 0, i64 0), i32 4, i64* %_regs_allocated) #4
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %cmp = icmp eq %struct.rtx_def* %call, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %1 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %2 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call3 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %1, %struct.rtx_def* %2) #4
  %call4 = call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call5 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call4) #4
  %call6 = call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call3, %struct.rtx_def* %call5) #4
  %call7 = call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call6) #4
  %call8 = call %struct.rtx_def* @emit(%struct.rtx_def* %call7) #4
  %call9 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %1) #4
  %call10 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call9) #4
  %call11 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call10) #4
  %call12 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  br label %return

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.rtx_def* [ %call12, %if.end ], [ null, %entry ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_peephole2_1248(%struct.rtx_def* nocapture readnone %curr_insn, %struct.rtx_def** nocapture %operands) #0 {
entry:
  %_regs_allocated = alloca i64, align 8
  store i64 0, i64* %_regs_allocated, align 8, !tbaa !7
  %call = call %struct.rtx_def* @peep2_find_free_register(i32 0, i32 0, i8* getelementptr inbounds ([2 x i8]* @.str1, i64 0, i64 0), i32 3, i64* %_regs_allocated) #4
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %cmp = icmp eq %struct.rtx_def* %call, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  call void @start_sequence() #4
  %0 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %call2 = call i32 @true_regnum(%struct.rtx_def* %0) #4
  %call3 = call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 %call2) #4
  %arrayidx4 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  store %struct.rtx_def* %call3, %struct.rtx_def** %arrayidx4, align 8, !tbaa !1
  %1 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %2 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %3 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call8 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call3, %struct.rtx_def* %3) #4
  %call9 = call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call10 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call9) #4
  %call11 = call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call8, %struct.rtx_def* %call10) #4
  %call12 = call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call11) #4
  %call13 = call %struct.rtx_def* @emit(%struct.rtx_def* %call12) #4
  %call14 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %1, %struct.rtx_def* %2) #4
  %call15 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call14) #4
  %call16 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  br label %return

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.rtx_def* [ %call16, %if.end ], [ null, %entry ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_peephole2_1249(%struct.rtx_def* nocapture readnone %curr_insn, %struct.rtx_def** nocapture %operands) #0 {
entry:
  %_regs_allocated = alloca i64, align 8
  store i64 0, i64* %_regs_allocated, align 8, !tbaa !7
  %call = call %struct.rtx_def* @peep2_find_free_register(i32 0, i32 0, i8* getelementptr inbounds ([2 x i8]* @.str2, i64 0, i64 0), i32 2, i64* %_regs_allocated) #4
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %cmp = icmp eq %struct.rtx_def* %call, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  call void @start_sequence() #4
  %0 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %call2 = call i32 @true_regnum(%struct.rtx_def* %0) #4
  %call3 = call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 %call2) #4
  %arrayidx4 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  store %struct.rtx_def* %call3, %struct.rtx_def** %arrayidx4, align 8, !tbaa !1
  %1 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %2 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %3 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call8 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call3, %struct.rtx_def* %3) #4
  %call9 = call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call10 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call9) #4
  %call11 = call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call8, %struct.rtx_def* %call10) #4
  %call12 = call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call11) #4
  %call13 = call %struct.rtx_def* @emit(%struct.rtx_def* %call12) #4
  %call14 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %1, %struct.rtx_def* %2) #4
  %call15 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call14) #4
  %call16 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  br label %return

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.rtx_def* [ %call16, %if.end ], [ null, %entry ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_peephole2_1250(%struct.rtx_def* nocapture readnone %curr_insn, %struct.rtx_def** nocapture %operands) #0 {
entry:
  %_regs_allocated = alloca i64, align 8
  store i64 0, i64* %_regs_allocated, align 8, !tbaa !7
  %call = call %struct.rtx_def* @peep2_find_free_register(i32 0, i32 0, i8* getelementptr inbounds ([2 x i8]* @.str1, i64 0, i64 0), i32 4, i64* %_regs_allocated) #4
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %cmp = icmp eq %struct.rtx_def* %call, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %2 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %call4 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %2, %struct.rtx_def* %1) #4
  %call5 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call4) #4
  %call6 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %2) #4
  %call7 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call6) #4
  %call8 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call7) #4
  %call9 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  br label %return

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.rtx_def* [ %call9, %if.end ], [ null, %entry ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_peephole2_1251(%struct.rtx_def* nocapture readnone %curr_insn, %struct.rtx_def** nocapture %operands) #0 {
entry:
  %_regs_allocated = alloca i64, align 8
  store i64 0, i64* %_regs_allocated, align 8, !tbaa !7
  %call = call %struct.rtx_def* @peep2_find_free_register(i32 0, i32 0, i8* getelementptr inbounds ([2 x i8]* @.str1, i64 0, i64 0), i32 3, i64* %_regs_allocated) #4
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %cmp = icmp eq %struct.rtx_def* %call, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %2 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %call4 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %2, %struct.rtx_def* %1) #4
  %call5 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call4) #4
  %call6 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %2) #4
  %call7 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call6) #4
  %call8 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call7) #4
  %call9 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  br label %return

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.rtx_def* [ %call9, %if.end ], [ null, %entry ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_peephole2_1252(%struct.rtx_def* nocapture readnone %curr_insn, %struct.rtx_def** nocapture %operands) #0 {
entry:
  %_regs_allocated = alloca i64, align 8
  store i64 0, i64* %_regs_allocated, align 8, !tbaa !7
  %call = call %struct.rtx_def* @peep2_find_free_register(i32 0, i32 0, i8* getelementptr inbounds ([2 x i8]* @.str2, i64 0, i64 0), i32 2, i64* %_regs_allocated) #4
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %cmp = icmp eq %struct.rtx_def* %call, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %2 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %call4 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %2, %struct.rtx_def* %1) #4
  %call5 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call4) #4
  %call6 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %2) #4
  %call7 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call6) #4
  %call8 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call7) #4
  %call9 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  br label %return

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.rtx_def* [ %call9, %if.end ], [ null, %entry ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_peephole2_1253(%struct.rtx_def* nocapture readnone %curr_insn, %struct.rtx_def** nocapture %operands) #0 {
entry:
  %_regs_allocated = alloca i64, align 8
  store i64 0, i64* %_regs_allocated, align 8, !tbaa !7
  %call = call %struct.rtx_def* @peep2_find_free_register(i32 1, i32 1, i8* getelementptr inbounds ([2 x i8]* @.str1, i64 0, i64 0), i32 4, i64* %_regs_allocated) #4
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %cmp = icmp eq %struct.rtx_def* %call, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %1 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %call5 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %1, %struct.rtx_def* %0) #4
  %call6 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call5) #4
  %call7 = call %struct.rtx_def* @gen_rtx_REG(i32 55, i32 17) #4
  %call8 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %1) #4
  %2 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call9 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 74, i32 55, %struct.rtx_def* %call8, %struct.rtx_def* %2) #4
  %call10 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call7, %struct.rtx_def* %call9) #4
  %call11 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call10) #4
  %call12 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  br label %return

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.rtx_def* [ %call12, %if.end ], [ null, %entry ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_peephole2_1254(%struct.rtx_def* nocapture readnone %curr_insn, %struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %2 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 85, i32 4, %struct.rtx_def* %1, %struct.rtx_def* %2) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call2, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call8
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_peephole2_1255(%struct.rtx_def* nocapture readnone %curr_insn, %struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %2 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 85, i32 3, %struct.rtx_def* %1, %struct.rtx_def* %2) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call2, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call8
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_peephole2_1256(%struct.rtx_def* nocapture readnone %curr_insn, %struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %2 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 85, i32 2, %struct.rtx_def* %1, %struct.rtx_def* %2) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call2, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call8
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_peephole2_1257(%struct.rtx_def* nocapture readnone %curr_insn, %struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 55, i32 17) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 83, i32 4, %struct.rtx_def* %0, %struct.rtx_def* %1) #4
  %2 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 74, i32 55, %struct.rtx_def* %call2, %struct.rtx_def* %2) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %0) #4
  %call6 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %0) #4
  %call7 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %1) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 83, i32 4, %struct.rtx_def* %call6, %struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call5, %struct.rtx_def* %call8) #4
  %call10 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call4, %struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call10) #4
  %call12 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call11) #4
  %call13 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call13
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_peephole2_1258(%struct.rtx_def* nocapture readnone %curr_insn, %struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 55, i32 17) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 83, i32 2, %struct.rtx_def* %0, %struct.rtx_def* %1) #4
  %2 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 74, i32 55, %struct.rtx_def* %call2, %struct.rtx_def* %2) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %0) #4
  %call6 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %0) #4
  %call7 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %1) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 83, i32 2, %struct.rtx_def* %call6, %struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call5, %struct.rtx_def* %call8) #4
  %call10 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call4, %struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call10) #4
  %call12 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call11) #4
  %call13 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call13
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_peephole2_1259(%struct.rtx_def* nocapture readnone %curr_insn, %struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 55, i32 17) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 8) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 8) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 133, i32 4, %struct.rtx_def* %0, %struct.rtx_def* %call2, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 83, i32 4, %struct.rtx_def* %call4, %struct.rtx_def* %1) #4
  %2 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 74, i32 55, %struct.rtx_def* %call5, %struct.rtx_def* %2) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %0) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 8) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 8) #4
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 133, i32 4, %struct.rtx_def* %call8, %struct.rtx_def* %call9, %struct.rtx_def* %call10) #4
  %call12 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %0) #4
  %call13 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 8) #4
  %call14 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 8) #4
  %call15 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 133, i32 4, %struct.rtx_def* %call12, %struct.rtx_def* %call13, %struct.rtx_def* %call14) #4
  %call16 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %1) #4
  %call17 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 83, i32 4, %struct.rtx_def* %call15, %struct.rtx_def* %call16) #4
  %call18 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call11, %struct.rtx_def* %call17) #4
  %call19 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call7, %struct.rtx_def* %call18) #4
  %call20 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call19) #4
  %call21 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call20) #4
  %call22 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call22
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_peephole2_1260(%struct.rtx_def* nocapture readnone %curr_insn, %struct.rtx_def** nocapture %operands) #0 {
entry:
  %_regs_allocated = alloca i64, align 8
  store i64 0, i64* %_regs_allocated, align 8, !tbaa !7
  %call = call %struct.rtx_def* @peep2_find_free_register(i32 0, i32 0, i8* getelementptr inbounds ([2 x i8]* @.str1, i64 0, i64 0), i32 4, i64* %_regs_allocated) #4
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %cmp = icmp eq %struct.rtx_def* %call, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %2 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %arrayidx4 = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  %3 = load %struct.rtx_def** %arrayidx4, align 8, !tbaa !1
  %call5 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %2, %struct.rtx_def* %1) #4
  %call6 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call5) #4
  %4 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 0
  %bf.load = load i32* %4, align 8
  %bf.clear = and i32 %bf.load, 65535
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear8 = and i32 %bf.lshr, 255
  %call9 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %0) #4
  %call10 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %2) #4
  %call11 = call %struct.rtx_def* (i32, i32, ...)* @gen_rtx(i32 %bf.clear, i32 %bf.clear8, %struct.rtx_def* %call9, %struct.rtx_def* %call10) #4
  %call12 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call11) #4
  %call13 = call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call14 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call13) #4
  %call15 = call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call12, %struct.rtx_def* %call14) #4
  %call16 = call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call15) #4
  %call17 = call %struct.rtx_def* @emit(%struct.rtx_def* %call16) #4
  %call18 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  br label %return

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.rtx_def* [ %call18, %if.end ], [ null, %entry ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_peephole2_1261(%struct.rtx_def* nocapture readnone %curr_insn, %struct.rtx_def** nocapture %operands) #0 {
entry:
  %_regs_allocated = alloca i64, align 8
  store i64 0, i64* %_regs_allocated, align 8, !tbaa !7
  %call = call %struct.rtx_def* @peep2_find_free_register(i32 0, i32 0, i8* getelementptr inbounds ([2 x i8]* @.str1, i64 0, i64 0), i32 4, i64* %_regs_allocated) #4
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %cmp = icmp eq %struct.rtx_def* %call, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %2 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %arrayidx4 = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  %3 = load %struct.rtx_def** %arrayidx4, align 8, !tbaa !1
  %call5 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %2, %struct.rtx_def* %1) #4
  %call6 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call5) #4
  %4 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 0
  %bf.load = load i32* %4, align 8
  %bf.clear = and i32 %bf.load, 65535
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear8 = and i32 %bf.lshr, 255
  %call9 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %2) #4
  %call10 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %0) #4
  %call11 = call %struct.rtx_def* (i32, i32, ...)* @gen_rtx(i32 %bf.clear, i32 %bf.clear8, %struct.rtx_def* %call9, %struct.rtx_def* %call10) #4
  %call12 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call11) #4
  %call13 = call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call14 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call13) #4
  %call15 = call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call12, %struct.rtx_def* %call14) #4
  %call16 = call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call15) #4
  %call17 = call %struct.rtx_def* @emit(%struct.rtx_def* %call16) #4
  %call18 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  br label %return

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.rtx_def* [ %call18, %if.end ], [ null, %entry ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_peephole2_1262(%struct.rtx_def* nocapture readnone %curr_insn, %struct.rtx_def** nocapture %operands) #0 {
entry:
  %_regs_allocated = alloca i64, align 8
  store i64 0, i64* %_regs_allocated, align 8, !tbaa !7
  %call = call %struct.rtx_def* @peep2_find_free_register(i32 0, i32 0, i8* getelementptr inbounds ([2 x i8]* @.str1, i64 0, i64 0), i32 4, i64* %_regs_allocated) #4
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %cmp = icmp eq %struct.rtx_def* %call, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %2 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %arrayidx4 = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  %3 = load %struct.rtx_def** %arrayidx4, align 8, !tbaa !1
  %call5 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %2, %struct.rtx_def* %0) #4
  %call6 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call5) #4
  %call7 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %2) #4
  %4 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 0
  %bf.load = load i32* %4, align 8
  %bf.clear = and i32 %bf.load, 65535
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear9 = and i32 %bf.lshr, 255
  %call10 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %2) #4
  %call11 = call %struct.rtx_def* (i32, i32, ...)* @gen_rtx(i32 %bf.clear, i32 %bf.clear9, %struct.rtx_def* %call10, %struct.rtx_def* %1) #4
  %call12 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call7, %struct.rtx_def* %call11) #4
  %call13 = call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call14 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call13) #4
  %call15 = call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call12, %struct.rtx_def* %call14) #4
  %call16 = call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call15) #4
  %call17 = call %struct.rtx_def* @emit(%struct.rtx_def* %call16) #4
  %call18 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %0) #4
  %call19 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %2) #4
  %call20 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call18, %struct.rtx_def* %call19) #4
  %call21 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call20) #4
  %call22 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  br label %return

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.rtx_def* [ %call22, %if.end ], [ null, %entry ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_peephole2_1263(%struct.rtx_def* nocapture readnone %curr_insn, %struct.rtx_def** nocapture %operands) #0 {
entry:
  %_regs_allocated = alloca i64, align 8
  store i64 0, i64* %_regs_allocated, align 8, !tbaa !7
  %call = call %struct.rtx_def* @peep2_find_free_register(i32 0, i32 0, i8* getelementptr inbounds ([2 x i8]* @.str1, i64 0, i64 0), i32 4, i64* %_regs_allocated) #4
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %cmp = icmp eq %struct.rtx_def* %call, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %2 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %arrayidx4 = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  %3 = load %struct.rtx_def** %arrayidx4, align 8, !tbaa !1
  %call5 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %2, %struct.rtx_def* %0) #4
  %call6 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call5) #4
  %call7 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %2) #4
  %4 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 0
  %bf.load = load i32* %4, align 8
  %bf.clear = and i32 %bf.load, 65535
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear9 = and i32 %bf.lshr, 255
  %call10 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %2) #4
  %call11 = call %struct.rtx_def* (i32, i32, ...)* @gen_rtx(i32 %bf.clear, i32 %bf.clear9, %struct.rtx_def* %1, %struct.rtx_def* %call10) #4
  %call12 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call7, %struct.rtx_def* %call11) #4
  %call13 = call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call14 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call13) #4
  %call15 = call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call12, %struct.rtx_def* %call14) #4
  %call16 = call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call15) #4
  %call17 = call %struct.rtx_def* @emit(%struct.rtx_def* %call16) #4
  %call18 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %0) #4
  %call19 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %2) #4
  %call20 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call18, %struct.rtx_def* %call19) #4
  %call21 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call20) #4
  %call22 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  br label %return

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.rtx_def* [ %call22, %if.end ], [ null, %entry ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_peephole2_1264(%struct.rtx_def* nocapture readnone %curr_insn, %struct.rtx_def** nocapture %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %1 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 0
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 16711680
  %cmp = icmp eq i32 %bf.clear, 327680
  %cond = select i1 %cmp, i32 5, i32 4
  %call = tail call i32 @true_regnum(%struct.rtx_def* %0) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_REG(i32 %cond, i32 %call) #4
  store %struct.rtx_def* %call2, %struct.rtx_def** %operands, align 8, !tbaa !1
  %2 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call2, %struct.rtx_def* %2) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call5, %struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call8) #4
  %call10 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call11
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_peephole2_1265(%struct.rtx_def* nocapture readnone %curr_insn, %struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 64, i32 0, %struct.rtx_def* %0) #4
  %1 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %1) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call1, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call7
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_peephole2_1266(%struct.rtx_def* nocapture readnone %curr_insn, %struct.rtx_def** nocapture %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %1 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 0
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 16711680
  %cmp = icmp eq i32 %bf.clear, 327680
  %cond = select i1 %cmp, i32 5, i32 4
  %call = tail call i32 @true_regnum(%struct.rtx_def* %0) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_REG(i32 %cond, i32 %call) #4
  store %struct.rtx_def* %call2, %struct.rtx_def** %operands, align 8, !tbaa !1
  %2 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !tbaa !1
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call2, %struct.rtx_def* %2) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call5, %struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call8) #4
  %call10 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call11
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_peephole2_1267(%struct.rtx_def* nocapture readnone %curr_insn, %struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %0) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %call, %struct.rtx_def* %1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call3, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call9
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_peephole2_1268(%struct.rtx_def* nocapture readnone %curr_insn, %struct.rtx_def** nocapture %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %0 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_lowpart(i32 4, %struct.rtx_def* %0) #4
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %1 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %call5 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %1) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %call5, %struct.rtx_def* %call) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %1, %struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call8) #4
  %call10 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call7, %struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call10) #4
  %call12 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call11) #4
  %call13 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call13
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_peephole2_1269(%struct.rtx_def* nocapture readnone %curr_insn, %struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %0) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 5, %struct.rtx_def* %call, %struct.rtx_def* %1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call3, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call9
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_peephole2_1270(%struct.rtx_def* nocapture readnone %curr_insn, %struct.rtx_def** nocapture %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %0 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %rtwint = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 0, i32 0
  %1 = load i64* %rtwint, align 8, !tbaa !7
  %call = tail call i32 @exact_log2_wide(i64 %1) #4
  %conv = sext i32 %call to i64
  %call2 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv) #4
  %arrayidx3 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  store %struct.rtx_def* %call2, %struct.rtx_def** %arrayidx3, align 8, !tbaa !1
  %2 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %call7 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %2) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 87, i32 4, %struct.rtx_def* %call7, %struct.rtx_def* %call2) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %2, %struct.rtx_def* %call8) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call10) #4
  %call12 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call9, %struct.rtx_def* %call11) #4
  %call13 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call12) #4
  %call14 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call13) #4
  %call15 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call15
}

declare i32 @exact_log2_wide(i64) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_peephole2_1271(%struct.rtx_def* nocapture readnone %curr_insn, %struct.rtx_def** nocapture %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %0 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %rtwint = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 0, i32 0
  %1 = load i64* %rtwint, align 8, !tbaa !7
  %call = tail call i32 @exact_log2_wide(i64 %1) #4
  %conv = sext i32 %call to i64
  %call2 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv) #4
  %arrayidx3 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  store %struct.rtx_def* %call2, %struct.rtx_def** %arrayidx3, align 8, !tbaa !1
  %2 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %call7 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %2) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 87, i32 5, %struct.rtx_def* %call7, %struct.rtx_def* %call2) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %2, %struct.rtx_def* %call8) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call10) #4
  %call12 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call9, %struct.rtx_def* %call11) #4
  %call13 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call12) #4
  %call14 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call13) #4
  %call15 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call15
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_peephole2_1272(%struct.rtx_def* nocapture readnone %curr_insn, %struct.rtx_def** nocapture %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %0 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %rtwint = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 0, i32 0
  %1 = load i64* %rtwint, align 8, !tbaa !7
  %call = tail call i32 @exact_log2_wide(i64 %1) #4
  %conv = sext i32 %call to i64
  %call2 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv) #4
  store %struct.rtx_def* %call2, %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %2 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %call7 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %2) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 87, i32 4, %struct.rtx_def* %call7, %struct.rtx_def* %call2) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %2, %struct.rtx_def* %call8) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call10) #4
  %call12 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call9, %struct.rtx_def* %call11) #4
  %call13 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call12) #4
  %call14 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call13) #4
  %call15 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call15
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_peephole2_1273(%struct.rtx_def* nocapture readnone %curr_insn, %struct.rtx_def** nocapture %operands) #0 {
entry:
  %_regs_allocated = alloca i64, align 8
  store i64 0, i64* %_regs_allocated, align 8, !tbaa !7
  %call = call %struct.rtx_def* @peep2_find_free_register(i32 0, i32 0, i8* getelementptr inbounds ([2 x i8]* @.str1, i64 0, i64 0), i32 4, i64* %_regs_allocated) #4
  store %struct.rtx_def* %call, %struct.rtx_def** %operands, align 8, !tbaa !1
  %cmp = icmp eq %struct.rtx_def* %call, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %call2 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %0) #4
  %call3 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call2) #4
  %call4 = call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call5 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 96, i32 4, %struct.rtx_def* %call4) #4
  %call6 = call %struct.rtx_def* @gen_rtx_MEM(i32 4, %struct.rtx_def* %call5) #4
  %call7 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %0) #4
  %call8 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call6, %struct.rtx_def* %call7) #4
  %call9 = call %struct.rtx_def* @gen_rtx_fmt_0(i32 62, i32 0) #4
  %call10 = call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %call9) #4
  %call11 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call10) #4
  %call12 = call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call8, %struct.rtx_def* %call11) #4
  %call13 = call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call12) #4
  %call14 = call %struct.rtx_def* @emit(%struct.rtx_def* %call13) #4
  %call15 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  br label %return

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.rtx_def* [ %call15, %if.end ], [ null, %entry ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_peephole2_1274(%struct.rtx_def* nocapture readnone %curr_insn, %struct.rtx_def** nocapture %operands) #0 {
entry:
  %_regs_allocated = alloca i64, align 8
  store i64 0, i64* %_regs_allocated, align 8, !tbaa !7
  %call = call %struct.rtx_def* @peep2_find_free_register(i32 0, i32 0, i8* getelementptr inbounds ([2 x i8]* @.str1, i64 0, i64 0), i32 4, i64* %_regs_allocated) #4
  store %struct.rtx_def* %call, %struct.rtx_def** %operands, align 8, !tbaa !1
  %cmp = icmp eq %struct.rtx_def* %call, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %call2 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %0) #4
  %call3 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call2) #4
  %call4 = call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call5 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 96, i32 4, %struct.rtx_def* %call4) #4
  %call6 = call %struct.rtx_def* @gen_rtx_MEM(i32 4, %struct.rtx_def* %call5) #4
  %call7 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %0) #4
  %call8 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call6, %struct.rtx_def* %call7) #4
  %call9 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call8) #4
  %call10 = call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call11 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 96, i32 4, %struct.rtx_def* %call10) #4
  %call12 = call %struct.rtx_def* @gen_rtx_MEM(i32 4, %struct.rtx_def* %call11) #4
  %call13 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %0) #4
  %call14 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call12, %struct.rtx_def* %call13) #4
  %call15 = call %struct.rtx_def* @gen_rtx_fmt_0(i32 62, i32 0) #4
  %call16 = call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %call15) #4
  %call17 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call16) #4
  %call18 = call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call14, %struct.rtx_def* %call17) #4
  %call19 = call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call18) #4
  %call20 = call %struct.rtx_def* @emit(%struct.rtx_def* %call19) #4
  %call21 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  br label %return

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.rtx_def* [ %call21, %if.end ], [ null, %entry ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_peephole2_1275(%struct.rtx_def* nocapture readnone %curr_insn, %struct.rtx_def** nocapture %operands) #0 {
entry:
  %_regs_allocated = alloca i64, align 8
  store i64 0, i64* %_regs_allocated, align 8, !tbaa !7
  %call = call %struct.rtx_def* @peep2_find_free_register(i32 0, i32 0, i8* getelementptr inbounds ([2 x i8]* @.str1, i64 0, i64 0), i32 4, i64* %_regs_allocated) #4
  store %struct.rtx_def* %call, %struct.rtx_def** %operands, align 8, !tbaa !1
  %cmp = icmp eq %struct.rtx_def* %call, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %call2 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %0) #4
  %call3 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call2) #4
  %call4 = call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call5 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 96, i32 4, %struct.rtx_def* %call4) #4
  %call6 = call %struct.rtx_def* @gen_rtx_MEM(i32 4, %struct.rtx_def* %call5) #4
  %call7 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %0) #4
  %call8 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call6, %struct.rtx_def* %call7) #4
  %call9 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call8) #4
  %call10 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  br label %return

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.rtx_def* [ %call10, %if.end ], [ null, %entry ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_peephole2_1276(%struct.rtx_def* nocapture readnone %curr_insn, %struct.rtx_def** nocapture %operands) #0 {
entry:
  %_regs_allocated = alloca i64, align 8
  store i64 0, i64* %_regs_allocated, align 8, !tbaa !7
  %call = call %struct.rtx_def* @peep2_find_free_register(i32 0, i32 0, i8* getelementptr inbounds ([2 x i8]* @.str1, i64 0, i64 0), i32 4, i64* %_regs_allocated) #4
  store %struct.rtx_def* %call, %struct.rtx_def** %operands, align 8, !tbaa !1
  %cmp = icmp eq %struct.rtx_def* %call, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %call2 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %0) #4
  %call3 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call2) #4
  %call4 = call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call5 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 96, i32 4, %struct.rtx_def* %call4) #4
  %call6 = call %struct.rtx_def* @gen_rtx_MEM(i32 4, %struct.rtx_def* %call5) #4
  %call7 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %0) #4
  %call8 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call6, %struct.rtx_def* %call7) #4
  %call9 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call8) #4
  %call10 = call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call11 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 96, i32 4, %struct.rtx_def* %call10) #4
  %call12 = call %struct.rtx_def* @gen_rtx_MEM(i32 4, %struct.rtx_def* %call11) #4
  %call13 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %0) #4
  %call14 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call12, %struct.rtx_def* %call13) #4
  %call15 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call14) #4
  %call16 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  br label %return

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.rtx_def* [ %call16, %if.end ], [ null, %entry ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_peephole2_1277(%struct.rtx_def* nocapture readnone %curr_insn, %struct.rtx_def** nocapture %operands) #0 {
entry:
  %_regs_allocated = alloca i64, align 8
  store i64 0, i64* %_regs_allocated, align 8, !tbaa !7
  %call = call %struct.rtx_def* @peep2_find_free_register(i32 0, i32 0, i8* getelementptr inbounds ([2 x i8]* @.str1, i64 0, i64 0), i32 4, i64* %_regs_allocated) #4
  store %struct.rtx_def* %call, %struct.rtx_def** %operands, align 8, !tbaa !1
  %cmp = icmp eq %struct.rtx_def* %call, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %call2 = call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call3 = call %struct.rtx_def* @gen_rtx_MEM(i32 4, %struct.rtx_def* %call2) #4
  %call4 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call3) #4
  %call5 = call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call6 = call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call7 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 4) #4
  %call8 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %call6, %struct.rtx_def* %call7) #4
  %call9 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call5, %struct.rtx_def* %call8) #4
  %call10 = call %struct.rtx_def* @gen_rtx_fmt_0(i32 62, i32 0) #4
  %call11 = call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %call10) #4
  %call12 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call11) #4
  %call13 = call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 3, %struct.rtx_def* %call4, %struct.rtx_def* %call9, %struct.rtx_def* %call12) #4
  %call14 = call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call13) #4
  %call15 = call %struct.rtx_def* @emit(%struct.rtx_def* %call14) #4
  %call16 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  br label %return

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.rtx_def* [ %call16, %if.end ], [ null, %entry ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_peephole2_1278(%struct.rtx_def* nocapture readnone %curr_insn, %struct.rtx_def** nocapture %operands) #0 {
entry:
  %_regs_allocated = alloca i64, align 8
  store i64 0, i64* %_regs_allocated, align 8, !tbaa !7
  %call = call %struct.rtx_def* @peep2_find_free_register(i32 0, i32 0, i8* getelementptr inbounds ([2 x i8]* @.str1, i64 0, i64 0), i32 4, i64* %_regs_allocated) #4
  store %struct.rtx_def* %call, %struct.rtx_def** %operands, align 8, !tbaa !1
  %cmp = icmp eq %struct.rtx_def* %call, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %call1 = call %struct.rtx_def* @peep2_find_free_register(i32 0, i32 0, i8* getelementptr inbounds ([2 x i8]* @.str1, i64 0, i64 0), i32 4, i64* %_regs_allocated) #4
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  store %struct.rtx_def* %call1, %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %cmp3 = icmp eq %struct.rtx_def* %call1, null
  br i1 %cmp3, label %return, label %if.end5

if.end5:                                          ; preds = %if.end
  call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %1 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %call8 = call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call9 = call %struct.rtx_def* @gen_rtx_MEM(i32 4, %struct.rtx_def* %call8) #4
  %call10 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call9) #4
  %call11 = call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call12 = call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call13 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 4) #4
  %call14 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %call12, %struct.rtx_def* %call13) #4
  %call15 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call11, %struct.rtx_def* %call14) #4
  %call16 = call %struct.rtx_def* @gen_rtx_fmt_0(i32 62, i32 0) #4
  %call17 = call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %call16) #4
  %call18 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call17) #4
  %call19 = call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 3, %struct.rtx_def* %call10, %struct.rtx_def* %call15, %struct.rtx_def* %call18) #4
  %call20 = call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call19) #4
  %call21 = call %struct.rtx_def* @emit(%struct.rtx_def* %call20) #4
  %call22 = call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call23 = call %struct.rtx_def* @gen_rtx_MEM(i32 4, %struct.rtx_def* %call22) #4
  %call24 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %1, %struct.rtx_def* %call23) #4
  %call25 = call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call26 = call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call27 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 4) #4
  %call28 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %call26, %struct.rtx_def* %call27) #4
  %call29 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call25, %struct.rtx_def* %call28) #4
  %call30 = call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call24, %struct.rtx_def* %call29) #4
  %call31 = call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call30) #4
  %call32 = call %struct.rtx_def* @emit(%struct.rtx_def* %call31) #4
  %call33 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.end, %entry, %if.end5
  %retval.0 = phi %struct.rtx_def* [ %call33, %if.end5 ], [ null, %entry ], [ null, %if.end ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_peephole2_1279(%struct.rtx_def* nocapture readnone %curr_insn, %struct.rtx_def** nocapture %operands) #0 {
entry:
  %_regs_allocated = alloca i64, align 8
  store i64 0, i64* %_regs_allocated, align 8, !tbaa !7
  %call = call %struct.rtx_def* @peep2_find_free_register(i32 0, i32 0, i8* getelementptr inbounds ([2 x i8]* @.str1, i64 0, i64 0), i32 4, i64* %_regs_allocated) #4
  store %struct.rtx_def* %call, %struct.rtx_def** %operands, align 8, !tbaa !1
  %cmp = icmp eq %struct.rtx_def* %call, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %call2 = call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call3 = call %struct.rtx_def* @gen_rtx_MEM(i32 4, %struct.rtx_def* %call2) #4
  %call4 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call3) #4
  %call5 = call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call6 = call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call7 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 4) #4
  %call8 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %call6, %struct.rtx_def* %call7) #4
  %call9 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call5, %struct.rtx_def* %call8) #4
  %call10 = call %struct.rtx_def* @gen_rtx_fmt_0(i32 62, i32 0) #4
  %call11 = call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %call10) #4
  %call12 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call11) #4
  %call13 = call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 3, %struct.rtx_def* %call4, %struct.rtx_def* %call9, %struct.rtx_def* %call12) #4
  %call14 = call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call13) #4
  %call15 = call %struct.rtx_def* @emit(%struct.rtx_def* %call14) #4
  %call16 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %0) #4
  %call17 = call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call18 = call %struct.rtx_def* @gen_rtx_MEM(i32 4, %struct.rtx_def* %call17) #4
  %call19 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call16, %struct.rtx_def* %call18) #4
  %call20 = call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call21 = call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call22 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 4) #4
  %call23 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %call21, %struct.rtx_def* %call22) #4
  %call24 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call20, %struct.rtx_def* %call23) #4
  %call25 = call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call19, %struct.rtx_def* %call24) #4
  %call26 = call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call25) #4
  %call27 = call %struct.rtx_def* @emit(%struct.rtx_def* %call26) #4
  %call28 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  br label %return

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.rtx_def* [ %call28, %if.end ], [ null, %entry ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_peephole2_1280(%struct.rtx_def* nocapture readnone %curr_insn, %struct.rtx_def** nocapture %operands) #0 {
entry:
  %_regs_allocated = alloca i64, align 8
  store i64 0, i64* %_regs_allocated, align 8, !tbaa !7
  %call = call %struct.rtx_def* @peep2_find_free_register(i32 0, i32 0, i8* getelementptr inbounds ([2 x i8]* @.str1, i64 0, i64 0), i32 4, i64* %_regs_allocated) #4
  store %struct.rtx_def* %call, %struct.rtx_def** %operands, align 8, !tbaa !1
  %cmp = icmp eq %struct.rtx_def* %call, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %call2 = call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call3 = call %struct.rtx_def* @gen_rtx_MEM(i32 4, %struct.rtx_def* %call2) #4
  %call4 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call3) #4
  %call5 = call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call6 = call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call7 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 4) #4
  %call8 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %call6, %struct.rtx_def* %call7) #4
  %call9 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call5, %struct.rtx_def* %call8) #4
  %call10 = call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call4, %struct.rtx_def* %call9) #4
  %call11 = call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call10) #4
  %call12 = call %struct.rtx_def* @emit(%struct.rtx_def* %call11) #4
  %call13 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  br label %return

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.rtx_def* [ %call13, %if.end ], [ null, %entry ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_peephole2_1281(%struct.rtx_def* nocapture readnone %curr_insn, %struct.rtx_def** nocapture %operands) #0 {
entry:
  %_regs_allocated = alloca i64, align 8
  store i64 0, i64* %_regs_allocated, align 8, !tbaa !7
  %call = call %struct.rtx_def* @peep2_find_free_register(i32 0, i32 0, i8* getelementptr inbounds ([2 x i8]* @.str1, i64 0, i64 0), i32 4, i64* %_regs_allocated) #4
  store %struct.rtx_def* %call, %struct.rtx_def** %operands, align 8, !tbaa !1
  %cmp = icmp eq %struct.rtx_def* %call, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %call1 = call %struct.rtx_def* @peep2_find_free_register(i32 0, i32 0, i8* getelementptr inbounds ([2 x i8]* @.str1, i64 0, i64 0), i32 4, i64* %_regs_allocated) #4
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  store %struct.rtx_def* %call1, %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %cmp3 = icmp eq %struct.rtx_def* %call1, null
  br i1 %cmp3, label %return, label %if.end5

if.end5:                                          ; preds = %if.end
  call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %1 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %call8 = call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call9 = call %struct.rtx_def* @gen_rtx_MEM(i32 4, %struct.rtx_def* %call8) #4
  %call10 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call9) #4
  %call11 = call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call12 = call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call13 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 4) #4
  %call14 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %call12, %struct.rtx_def* %call13) #4
  %call15 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call11, %struct.rtx_def* %call14) #4
  %call16 = call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call10, %struct.rtx_def* %call15) #4
  %call17 = call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call16) #4
  %call18 = call %struct.rtx_def* @emit(%struct.rtx_def* %call17) #4
  %call19 = call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call20 = call %struct.rtx_def* @gen_rtx_MEM(i32 4, %struct.rtx_def* %call19) #4
  %call21 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %1, %struct.rtx_def* %call20) #4
  %call22 = call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call23 = call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call24 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 4) #4
  %call25 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %call23, %struct.rtx_def* %call24) #4
  %call26 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call22, %struct.rtx_def* %call25) #4
  %call27 = call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call21, %struct.rtx_def* %call26) #4
  %call28 = call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call27) #4
  %call29 = call %struct.rtx_def* @emit(%struct.rtx_def* %call28) #4
  %call30 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.end, %entry, %if.end5
  %retval.0 = phi %struct.rtx_def* [ %call30, %if.end5 ], [ null, %entry ], [ null, %if.end ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_peephole2_1282(%struct.rtx_def* nocapture readnone %curr_insn, %struct.rtx_def** nocapture %operands) #0 {
entry:
  %_regs_allocated = alloca i64, align 8
  store i64 0, i64* %_regs_allocated, align 8, !tbaa !7
  %call = call %struct.rtx_def* @peep2_find_free_register(i32 0, i32 0, i8* getelementptr inbounds ([2 x i8]* @.str1, i64 0, i64 0), i32 4, i64* %_regs_allocated) #4
  store %struct.rtx_def* %call, %struct.rtx_def** %operands, align 8, !tbaa !1
  %cmp = icmp eq %struct.rtx_def* %call, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %call2 = call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call3 = call %struct.rtx_def* @gen_rtx_MEM(i32 4, %struct.rtx_def* %call2) #4
  %call4 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call3) #4
  %call5 = call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call6 = call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call7 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 4) #4
  %call8 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %call6, %struct.rtx_def* %call7) #4
  %call9 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call5, %struct.rtx_def* %call8) #4
  %call10 = call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call4, %struct.rtx_def* %call9) #4
  %call11 = call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call10) #4
  %call12 = call %struct.rtx_def* @emit(%struct.rtx_def* %call11) #4
  %call13 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %0) #4
  %call14 = call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call15 = call %struct.rtx_def* @gen_rtx_MEM(i32 4, %struct.rtx_def* %call14) #4
  %call16 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call13, %struct.rtx_def* %call15) #4
  %call17 = call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call18 = call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call19 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 4) #4
  %call20 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %call18, %struct.rtx_def* %call19) #4
  %call21 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call17, %struct.rtx_def* %call20) #4
  %call22 = call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call16, %struct.rtx_def* %call21) #4
  %call23 = call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call22) #4
  %call24 = call %struct.rtx_def* @emit(%struct.rtx_def* %call23) #4
  %call25 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  br label %return

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.rtx_def* [ %call25, %if.end ], [ null, %entry ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_peephole2_1283(%struct.rtx_def* nocapture readnone %curr_insn, %struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 53, i32 17) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 74, i32 53, %struct.rtx_def* %0, %struct.rtx_def* %1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %0) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call3, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call9
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_peephole2_1284(%struct.rtx_def* nocapture readnone %curr_insn, %struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 53, i32 17) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 74, i32 53, %struct.rtx_def* %0, %struct.rtx_def* %1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %0) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call3, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call9
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_peephole2_1285(%struct.rtx_def* nocapture readnone %curr_insn, %struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 53, i32 17) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 74, i32 53, %struct.rtx_def* %0, %struct.rtx_def* %1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %0) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call3, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call9
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_peephole2_1286(%struct.rtx_def* nocapture readnone %curr_insn, %struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 53, i32 17) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 128) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 74, i32 53, %struct.rtx_def* %0, %struct.rtx_def* %call1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %0) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call3, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call9
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_peephole2_1287(%struct.rtx_def* nocapture readnone %curr_insn, %struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 53, i32 17) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 128) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 74, i32 53, %struct.rtx_def* %0, %struct.rtx_def* %call1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %0) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call3, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call9
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_peephole2_1288(%struct.rtx_def* nocapture readnone %curr_insn, %struct.rtx_def** nocapture %operands) #0 {
entry:
  %_regs_allocated = alloca i64, align 8
  store i64 0, i64* %_regs_allocated, align 8, !tbaa !7
  %call = call %struct.rtx_def* @peep2_find_free_register(i32 0, i32 0, i8* getelementptr inbounds ([2 x i8]* @.str1, i64 0, i64 0), i32 5, i64* %_regs_allocated) #4
  store %struct.rtx_def* %call, %struct.rtx_def** %operands, align 8, !tbaa !1
  %cmp = icmp eq %struct.rtx_def* %call, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %call2 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %0) #4
  %call3 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call2) #4
  %call4 = call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 7) #4
  %call5 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 96, i32 5, %struct.rtx_def* %call4) #4
  %call6 = call %struct.rtx_def* @gen_rtx_MEM(i32 5, %struct.rtx_def* %call5) #4
  %call7 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %0) #4
  %call8 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call6, %struct.rtx_def* %call7) #4
  %call9 = call %struct.rtx_def* @gen_rtx_fmt_0(i32 62, i32 0) #4
  %call10 = call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %call9) #4
  %call11 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call10) #4
  %call12 = call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call8, %struct.rtx_def* %call11) #4
  %call13 = call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call12) #4
  %call14 = call %struct.rtx_def* @emit(%struct.rtx_def* %call13) #4
  %call15 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  br label %return

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.rtx_def* [ %call15, %if.end ], [ null, %entry ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_peephole2_1289(%struct.rtx_def* nocapture readnone %curr_insn, %struct.rtx_def** nocapture %operands) #0 {
entry:
  %_regs_allocated = alloca i64, align 8
  store i64 0, i64* %_regs_allocated, align 8, !tbaa !7
  %call = call %struct.rtx_def* @peep2_find_free_register(i32 0, i32 0, i8* getelementptr inbounds ([2 x i8]* @.str1, i64 0, i64 0), i32 5, i64* %_regs_allocated) #4
  store %struct.rtx_def* %call, %struct.rtx_def** %operands, align 8, !tbaa !1
  %cmp = icmp eq %struct.rtx_def* %call, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %call2 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %0) #4
  %call3 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call2) #4
  %call4 = call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 7) #4
  %call5 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 96, i32 5, %struct.rtx_def* %call4) #4
  %call6 = call %struct.rtx_def* @gen_rtx_MEM(i32 5, %struct.rtx_def* %call5) #4
  %call7 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %0) #4
  %call8 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call6, %struct.rtx_def* %call7) #4
  %call9 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call8) #4
  %call10 = call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 7) #4
  %call11 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 96, i32 5, %struct.rtx_def* %call10) #4
  %call12 = call %struct.rtx_def* @gen_rtx_MEM(i32 5, %struct.rtx_def* %call11) #4
  %call13 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %0) #4
  %call14 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call12, %struct.rtx_def* %call13) #4
  %call15 = call %struct.rtx_def* @gen_rtx_fmt_0(i32 62, i32 0) #4
  %call16 = call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %call15) #4
  %call17 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call16) #4
  %call18 = call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call14, %struct.rtx_def* %call17) #4
  %call19 = call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call18) #4
  %call20 = call %struct.rtx_def* @emit(%struct.rtx_def* %call19) #4
  %call21 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  br label %return

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.rtx_def* [ %call21, %if.end ], [ null, %entry ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_peephole2_1290(%struct.rtx_def* nocapture readnone %curr_insn, %struct.rtx_def** nocapture %operands) #0 {
entry:
  %_regs_allocated = alloca i64, align 8
  store i64 0, i64* %_regs_allocated, align 8, !tbaa !7
  %call = call %struct.rtx_def* @peep2_find_free_register(i32 0, i32 0, i8* getelementptr inbounds ([2 x i8]* @.str1, i64 0, i64 0), i32 5, i64* %_regs_allocated) #4
  store %struct.rtx_def* %call, %struct.rtx_def** %operands, align 8, !tbaa !1
  %cmp = icmp eq %struct.rtx_def* %call, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %call2 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %0) #4
  %call3 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call2) #4
  %call4 = call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 7) #4
  %call5 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 96, i32 5, %struct.rtx_def* %call4) #4
  %call6 = call %struct.rtx_def* @gen_rtx_MEM(i32 5, %struct.rtx_def* %call5) #4
  %call7 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %0) #4
  %call8 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call6, %struct.rtx_def* %call7) #4
  %call9 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call8) #4
  %call10 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  br label %return

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.rtx_def* [ %call10, %if.end ], [ null, %entry ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_peephole2_1291(%struct.rtx_def* nocapture readnone %curr_insn, %struct.rtx_def** nocapture %operands) #0 {
entry:
  %_regs_allocated = alloca i64, align 8
  store i64 0, i64* %_regs_allocated, align 8, !tbaa !7
  %call = call %struct.rtx_def* @peep2_find_free_register(i32 0, i32 0, i8* getelementptr inbounds ([2 x i8]* @.str1, i64 0, i64 0), i32 5, i64* %_regs_allocated) #4
  store %struct.rtx_def* %call, %struct.rtx_def** %operands, align 8, !tbaa !1
  %cmp = icmp eq %struct.rtx_def* %call, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %call2 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %0) #4
  %call3 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call2) #4
  %call4 = call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 7) #4
  %call5 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 96, i32 5, %struct.rtx_def* %call4) #4
  %call6 = call %struct.rtx_def* @gen_rtx_MEM(i32 5, %struct.rtx_def* %call5) #4
  %call7 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %0) #4
  %call8 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call6, %struct.rtx_def* %call7) #4
  %call9 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call8) #4
  %call10 = call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 7) #4
  %call11 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 96, i32 5, %struct.rtx_def* %call10) #4
  %call12 = call %struct.rtx_def* @gen_rtx_MEM(i32 5, %struct.rtx_def* %call11) #4
  %call13 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %0) #4
  %call14 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call12, %struct.rtx_def* %call13) #4
  %call15 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call14) #4
  %call16 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  br label %return

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.rtx_def* [ %call16, %if.end ], [ null, %entry ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_peephole2_1292(%struct.rtx_def* nocapture readnone %curr_insn, %struct.rtx_def** nocapture %operands) #0 {
entry:
  %_regs_allocated = alloca i64, align 8
  store i64 0, i64* %_regs_allocated, align 8, !tbaa !7
  %call = call %struct.rtx_def* @peep2_find_free_register(i32 0, i32 0, i8* getelementptr inbounds ([2 x i8]* @.str1, i64 0, i64 0), i32 5, i64* %_regs_allocated) #4
  store %struct.rtx_def* %call, %struct.rtx_def** %operands, align 8, !tbaa !1
  %cmp = icmp eq %struct.rtx_def* %call, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %call2 = call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 7) #4
  %call3 = call %struct.rtx_def* @gen_rtx_MEM(i32 5, %struct.rtx_def* %call2) #4
  %call4 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call3) #4
  %call5 = call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 7) #4
  %call6 = call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 7) #4
  %call7 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 8) #4
  %call8 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 5, %struct.rtx_def* %call6, %struct.rtx_def* %call7) #4
  %call9 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call5, %struct.rtx_def* %call8) #4
  %call10 = call %struct.rtx_def* @gen_rtx_fmt_0(i32 62, i32 0) #4
  %call11 = call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %call10) #4
  %call12 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call11) #4
  %call13 = call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 3, %struct.rtx_def* %call4, %struct.rtx_def* %call9, %struct.rtx_def* %call12) #4
  %call14 = call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call13) #4
  %call15 = call %struct.rtx_def* @emit(%struct.rtx_def* %call14) #4
  %call16 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  br label %return

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.rtx_def* [ %call16, %if.end ], [ null, %entry ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_peephole2_1293(%struct.rtx_def* nocapture readnone %curr_insn, %struct.rtx_def** nocapture %operands) #0 {
entry:
  %_regs_allocated = alloca i64, align 8
  store i64 0, i64* %_regs_allocated, align 8, !tbaa !7
  %call = call %struct.rtx_def* @peep2_find_free_register(i32 0, i32 0, i8* getelementptr inbounds ([2 x i8]* @.str1, i64 0, i64 0), i32 5, i64* %_regs_allocated) #4
  store %struct.rtx_def* %call, %struct.rtx_def** %operands, align 8, !tbaa !1
  %cmp = icmp eq %struct.rtx_def* %call, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %call1 = call %struct.rtx_def* @peep2_find_free_register(i32 0, i32 0, i8* getelementptr inbounds ([2 x i8]* @.str1, i64 0, i64 0), i32 5, i64* %_regs_allocated) #4
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  store %struct.rtx_def* %call1, %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %cmp3 = icmp eq %struct.rtx_def* %call1, null
  br i1 %cmp3, label %return, label %if.end5

if.end5:                                          ; preds = %if.end
  call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %1 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %call8 = call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 7) #4
  %call9 = call %struct.rtx_def* @gen_rtx_MEM(i32 5, %struct.rtx_def* %call8) #4
  %call10 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call9) #4
  %call11 = call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 7) #4
  %call12 = call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 7) #4
  %call13 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 8) #4
  %call14 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 5, %struct.rtx_def* %call12, %struct.rtx_def* %call13) #4
  %call15 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call11, %struct.rtx_def* %call14) #4
  %call16 = call %struct.rtx_def* @gen_rtx_fmt_0(i32 62, i32 0) #4
  %call17 = call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %call16) #4
  %call18 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call17) #4
  %call19 = call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 3, %struct.rtx_def* %call10, %struct.rtx_def* %call15, %struct.rtx_def* %call18) #4
  %call20 = call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call19) #4
  %call21 = call %struct.rtx_def* @emit(%struct.rtx_def* %call20) #4
  %call22 = call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 7) #4
  %call23 = call %struct.rtx_def* @gen_rtx_MEM(i32 5, %struct.rtx_def* %call22) #4
  %call24 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %1, %struct.rtx_def* %call23) #4
  %call25 = call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 7) #4
  %call26 = call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 7) #4
  %call27 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 8) #4
  %call28 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 5, %struct.rtx_def* %call26, %struct.rtx_def* %call27) #4
  %call29 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call25, %struct.rtx_def* %call28) #4
  %call30 = call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call24, %struct.rtx_def* %call29) #4
  %call31 = call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call30) #4
  %call32 = call %struct.rtx_def* @emit(%struct.rtx_def* %call31) #4
  %call33 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.end, %entry, %if.end5
  %retval.0 = phi %struct.rtx_def* [ %call33, %if.end5 ], [ null, %entry ], [ null, %if.end ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_peephole2_1294(%struct.rtx_def* nocapture readnone %curr_insn, %struct.rtx_def** nocapture %operands) #0 {
entry:
  %_regs_allocated = alloca i64, align 8
  store i64 0, i64* %_regs_allocated, align 8, !tbaa !7
  %call = call %struct.rtx_def* @peep2_find_free_register(i32 0, i32 0, i8* getelementptr inbounds ([2 x i8]* @.str1, i64 0, i64 0), i32 5, i64* %_regs_allocated) #4
  store %struct.rtx_def* %call, %struct.rtx_def** %operands, align 8, !tbaa !1
  %cmp = icmp eq %struct.rtx_def* %call, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %call2 = call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 7) #4
  %call3 = call %struct.rtx_def* @gen_rtx_MEM(i32 5, %struct.rtx_def* %call2) #4
  %call4 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call3) #4
  %call5 = call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 7) #4
  %call6 = call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 7) #4
  %call7 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 8) #4
  %call8 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 5, %struct.rtx_def* %call6, %struct.rtx_def* %call7) #4
  %call9 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call5, %struct.rtx_def* %call8) #4
  %call10 = call %struct.rtx_def* @gen_rtx_fmt_0(i32 62, i32 0) #4
  %call11 = call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %call10) #4
  %call12 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call11) #4
  %call13 = call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 3, %struct.rtx_def* %call4, %struct.rtx_def* %call9, %struct.rtx_def* %call12) #4
  %call14 = call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call13) #4
  %call15 = call %struct.rtx_def* @emit(%struct.rtx_def* %call14) #4
  %call16 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %0) #4
  %call17 = call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 7) #4
  %call18 = call %struct.rtx_def* @gen_rtx_MEM(i32 5, %struct.rtx_def* %call17) #4
  %call19 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call16, %struct.rtx_def* %call18) #4
  %call20 = call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 7) #4
  %call21 = call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 7) #4
  %call22 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 8) #4
  %call23 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 5, %struct.rtx_def* %call21, %struct.rtx_def* %call22) #4
  %call24 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call20, %struct.rtx_def* %call23) #4
  %call25 = call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call19, %struct.rtx_def* %call24) #4
  %call26 = call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call25) #4
  %call27 = call %struct.rtx_def* @emit(%struct.rtx_def* %call26) #4
  %call28 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  br label %return

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.rtx_def* [ %call28, %if.end ], [ null, %entry ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_peephole2_1295(%struct.rtx_def* nocapture readnone %curr_insn, %struct.rtx_def** nocapture %operands) #0 {
entry:
  %_regs_allocated = alloca i64, align 8
  store i64 0, i64* %_regs_allocated, align 8, !tbaa !7
  %call = call %struct.rtx_def* @peep2_find_free_register(i32 0, i32 0, i8* getelementptr inbounds ([2 x i8]* @.str1, i64 0, i64 0), i32 5, i64* %_regs_allocated) #4
  store %struct.rtx_def* %call, %struct.rtx_def** %operands, align 8, !tbaa !1
  %cmp = icmp eq %struct.rtx_def* %call, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %call2 = call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 7) #4
  %call3 = call %struct.rtx_def* @gen_rtx_MEM(i32 5, %struct.rtx_def* %call2) #4
  %call4 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call3) #4
  %call5 = call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 7) #4
  %call6 = call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 7) #4
  %call7 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 8) #4
  %call8 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 5, %struct.rtx_def* %call6, %struct.rtx_def* %call7) #4
  %call9 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call5, %struct.rtx_def* %call8) #4
  %call10 = call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call4, %struct.rtx_def* %call9) #4
  %call11 = call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call10) #4
  %call12 = call %struct.rtx_def* @emit(%struct.rtx_def* %call11) #4
  %call13 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  br label %return

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.rtx_def* [ %call13, %if.end ], [ null, %entry ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_peephole2_1296(%struct.rtx_def* nocapture readnone %curr_insn, %struct.rtx_def** nocapture %operands) #0 {
entry:
  %_regs_allocated = alloca i64, align 8
  store i64 0, i64* %_regs_allocated, align 8, !tbaa !7
  %call = call %struct.rtx_def* @peep2_find_free_register(i32 0, i32 0, i8* getelementptr inbounds ([2 x i8]* @.str1, i64 0, i64 0), i32 5, i64* %_regs_allocated) #4
  store %struct.rtx_def* %call, %struct.rtx_def** %operands, align 8, !tbaa !1
  %cmp = icmp eq %struct.rtx_def* %call, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %call1 = call %struct.rtx_def* @peep2_find_free_register(i32 0, i32 0, i8* getelementptr inbounds ([2 x i8]* @.str1, i64 0, i64 0), i32 5, i64* %_regs_allocated) #4
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  store %struct.rtx_def* %call1, %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %cmp3 = icmp eq %struct.rtx_def* %call1, null
  br i1 %cmp3, label %return, label %if.end5

if.end5:                                          ; preds = %if.end
  call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %1 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %call8 = call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 7) #4
  %call9 = call %struct.rtx_def* @gen_rtx_MEM(i32 5, %struct.rtx_def* %call8) #4
  %call10 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call9) #4
  %call11 = call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 7) #4
  %call12 = call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 7) #4
  %call13 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 8) #4
  %call14 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 5, %struct.rtx_def* %call12, %struct.rtx_def* %call13) #4
  %call15 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call11, %struct.rtx_def* %call14) #4
  %call16 = call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call10, %struct.rtx_def* %call15) #4
  %call17 = call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call16) #4
  %call18 = call %struct.rtx_def* @emit(%struct.rtx_def* %call17) #4
  %call19 = call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 7) #4
  %call20 = call %struct.rtx_def* @gen_rtx_MEM(i32 5, %struct.rtx_def* %call19) #4
  %call21 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %1, %struct.rtx_def* %call20) #4
  %call22 = call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 7) #4
  %call23 = call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 7) #4
  %call24 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 8) #4
  %call25 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 5, %struct.rtx_def* %call23, %struct.rtx_def* %call24) #4
  %call26 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call22, %struct.rtx_def* %call25) #4
  %call27 = call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call21, %struct.rtx_def* %call26) #4
  %call28 = call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call27) #4
  %call29 = call %struct.rtx_def* @emit(%struct.rtx_def* %call28) #4
  %call30 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.end, %entry, %if.end5
  %retval.0 = phi %struct.rtx_def* [ %call30, %if.end5 ], [ null, %entry ], [ null, %if.end ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_peephole2_1297(%struct.rtx_def* nocapture readnone %curr_insn, %struct.rtx_def** nocapture %operands) #0 {
entry:
  %_regs_allocated = alloca i64, align 8
  store i64 0, i64* %_regs_allocated, align 8, !tbaa !7
  %call = call %struct.rtx_def* @peep2_find_free_register(i32 0, i32 0, i8* getelementptr inbounds ([2 x i8]* @.str1, i64 0, i64 0), i32 5, i64* %_regs_allocated) #4
  store %struct.rtx_def* %call, %struct.rtx_def** %operands, align 8, !tbaa !1
  %cmp = icmp eq %struct.rtx_def* %call, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !1
  %call2 = call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 7) #4
  %call3 = call %struct.rtx_def* @gen_rtx_MEM(i32 5, %struct.rtx_def* %call2) #4
  %call4 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call3) #4
  %call5 = call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 7) #4
  %call6 = call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 7) #4
  %call7 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 8) #4
  %call8 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 5, %struct.rtx_def* %call6, %struct.rtx_def* %call7) #4
  %call9 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call5, %struct.rtx_def* %call8) #4
  %call10 = call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call4, %struct.rtx_def* %call9) #4
  %call11 = call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call10) #4
  %call12 = call %struct.rtx_def* @emit(%struct.rtx_def* %call11) #4
  %call13 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %0) #4
  %call14 = call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 7) #4
  %call15 = call %struct.rtx_def* @gen_rtx_MEM(i32 5, %struct.rtx_def* %call14) #4
  %call16 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call13, %struct.rtx_def* %call15) #4
  %call17 = call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 7) #4
  %call18 = call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 7) #4
  %call19 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 8) #4
  %call20 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 5, %struct.rtx_def* %call18, %struct.rtx_def* %call19) #4
  %call21 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call17, %struct.rtx_def* %call20) #4
  %call22 = call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call16, %struct.rtx_def* %call21) #4
  %call23 = call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call22) #4
  %call24 = call %struct.rtx_def* @emit(%struct.rtx_def* %call23) #4
  %call25 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  br label %return

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.rtx_def* [ %call25, %if.end ], [ null, %entry ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_conditional_trap(%struct.rtx_def* nocapture readonly %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = getelementptr inbounds %struct.rtx_def* %operand0, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %call = tail call %struct.rtx_def* @ix86_expand_compare(i32 %bf.clear, %struct.rtx_def** null, %struct.rtx_def** null) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 52, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %operand1) #4
  %call5 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call6
}

declare %struct.rtx_def* @ix86_expand_compare(i32, %struct.rtx_def**, %struct.rtx_def**) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_movti(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %operands = alloca [2 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [2 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [2 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %0 = load i32* @target_flags, align 4, !tbaa !5
  %and = and i32 %0, 33554432
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  call void @ix86_expand_move(i32 6, %struct.rtx_def** %arrayidx) #4
  br label %if.end

if.else:                                          ; preds = %entry
  call void @ix86_expand_vector_move(i32 6, %struct.rtx_def** %arrayidx) #4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %call = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

declare void @ix86_expand_vector_move(i32, %struct.rtx_def**) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_movv4sf(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %operands = alloca [2 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [2 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [2 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  call void @ix86_expand_vector_move(i32 46, %struct.rtx_def** %arrayidx) #4
  %call = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_movv4si(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %operands = alloca [2 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [2 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [2 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  call void @ix86_expand_vector_move(i32 37, %struct.rtx_def** %arrayidx) #4
  %call = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_movv2si(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %operands = alloca [2 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [2 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [2 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  call void @ix86_expand_vector_move(i32 33, %struct.rtx_def** %arrayidx) #4
  %call = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_movv4hi(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %operands = alloca [2 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [2 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [2 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  call void @ix86_expand_vector_move(i32 36, %struct.rtx_def** %arrayidx) #4
  %call = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_movv8qi(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %operands = alloca [2 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [2 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [2 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  call void @ix86_expand_vector_move(i32 39, %struct.rtx_def** %arrayidx) #4
  %call = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_movv2sf(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %operands = alloca [2 x %struct.rtx_def*], align 16
  call void @start_sequence() #4
  %arrayidx = getelementptr inbounds [2 x %struct.rtx_def*]* %operands, i64 0, i64 0
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !tbaa !1
  %arrayidx1 = getelementptr inbounds [2 x %struct.rtx_def*]* %operands, i64 0, i64 1
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  call void @ix86_expand_vector_move(i32 44, %struct.rtx_def** %arrayidx) #4
  %call = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1306(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %0 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 -16) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %call2, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 6, %struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call8, %struct.rtx_def* %0) #4
  %call10 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call11
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1307(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %0 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 -16) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %call2, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 46, %struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call8, %struct.rtx_def* %0) #4
  %call10 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call11
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1308(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %0 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 -16) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %call2, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 37, %struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call8, %struct.rtx_def* %0) #4
  %call10 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call11
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1309(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %0 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 -8) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %call2, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 33, %struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call8, %struct.rtx_def* %0) #4
  %call10 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call11
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1310(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %0 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 -8) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %call2, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 36, %struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call8, %struct.rtx_def* %0) #4
  %call10 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call11
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1311(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %0 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 -8) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %call2, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 39, %struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call8, %struct.rtx_def* %0) #4
  %call10 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call11
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1312(%struct.rtx_def** nocapture readonly %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %0 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 -8) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %call2, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 44, %struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call8, %struct.rtx_def* %0) #4
  %call10 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call11
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_split_1313(%struct.rtx_def** %operands) #0 {
entry:
  tail call void @start_sequence() #4
  tail call void @ix86_split_long_move(%struct.rtx_def** %operands) #4
  %call = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_sfence() #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load i32* @target_flags, align 4, !tbaa !5
  %and = lshr i32 %0, 25
  %1 = and i32 %and, 1
  %2 = or i32 %1, 4
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_0(i32 62, i32 %2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %call) #4
  %3 = getelementptr inbounds %struct.rtx_def* %call1, i64 0, i32 0
  %bf.load = load i32* %3, align 8
  %bf.set = or i32 %bf.load, 134217728
  store i32 %bf.set, i32* %3, align 8
  %call4 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %call1) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_Ei(i32 42, i32 51, %struct.rtvec_def* %call4, i32 44) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call1, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call8
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_sse_prologue_save(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* %operand3) #0 {
entry:
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 21) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 22) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 23) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 24) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 25) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 26) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 27) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 28) #4
  %call8 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 8, %struct.rtx_def* %call, %struct.rtx_def* %call1, %struct.rtx_def* %call2, %struct.rtx_def* %call3, %struct.rtx_def* %call4, %struct.rtx_def* %call5, %struct.rtx_def* %call6, %struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_Ei(i32 42, i32 51, %struct.rtvec_def* %call8, i32 13) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %operand1) #4
  %call12 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %operand2) #4
  %call13 = tail call %struct.rtx_def* @gen_rtx_fmt_u00(i32 67, i32 5, %struct.rtx_def* %operand3) #4
  %call14 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %call13) #4
  %call15 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 4, %struct.rtx_def* %call10, %struct.rtx_def* %call11, %struct.rtx_def* %call12, %struct.rtx_def* %call14) #4
  %call16 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call15) #4
  ret %struct.rtx_def* %call16
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_prefetch(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  tail call void @start_sequence() #4
  %rtwint = getelementptr inbounds %struct.rtx_def* %operand1, i64 0, i32 1, i64 0, i32 0
  %0 = load i64* %rtwint, align 8, !tbaa !7
  %conv = trunc i64 %0 to i32
  %cmp = icmp ne i32 %conv, 0
  %conv.cmp = icmp ugt i32 %conv, 1
  br i1 %conv.cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str, i64 0, i64 0), i32 19621, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.gen_prefetch, i64 0, i64 0)) #5
  unreachable

if.end:                                           ; preds = %entry
  %rtwint8 = getelementptr inbounds %struct.rtx_def* %operand2, i64 0, i32 1, i64 0, i32 0
  %1 = load i64* %rtwint8, align 8, !tbaa !7
  %conv9 = trunc i64 %1 to i32
  %2 = icmp ugt i32 %conv9, 3
  br i1 %2, label %if.then17, label %if.end18

if.then17:                                        ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str, i64 0, i64 0), i32 19623, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.gen_prefetch, i64 0, i64 0)) #5
  unreachable

if.end18:                                         ; preds = %if.end
  %3 = load i32* @target_flags, align 4, !tbaa !5
  %and = and i32 %3, 1048576
  %cmp19 = icmp eq i32 %and, 0
  br i1 %cmp19, label %if.else, label %land.lhs.true21

land.lhs.true21:                                  ; preds = %if.end18
  %4 = load i32* @x86_prefetch_sse, align 4, !tbaa !5
  %tobool = icmp eq i32 %4, 0
  %or.cond35 = or i1 %tobool, %cmp
  br i1 %or.cond35, label %if.then24, label %if.else

if.then24:                                        ; preds = %land.lhs.true21
  %call = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 3) #4
  br label %if.end27

if.else:                                          ; preds = %if.end18, %land.lhs.true21
  %5 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  br label %if.end27

if.end27:                                         ; preds = %if.else, %if.then24
  %operands.sroa.6.0 = phi %struct.rtx_def* [ %call, %if.then24 ], [ %operand2, %if.else ]
  %operands.sroa.2.0 = phi %struct.rtx_def* [ %operand1, %if.then24 ], [ %5, %if.else ]
  %call31 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 46, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %operands.sroa.2.0, %struct.rtx_def* %operands.sroa.6.0) #4
  %call32 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call31) #4
  %call33 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call33
}

; Function Attrs: nounwind uwtable
define void @add_clobbers(%struct.rtx_def* nocapture readonly %pattern, i32 %insn_code_number) #0 {
entry:
  switch i32 %insn_code_number, label %sw.default [
    i32 815, label %sw.bb
    i32 801, label %sw.bb
    i32 640, label %sw.bb108
    i32 639, label %sw.bb108
    i32 638, label %sw.bb123
    i32 637, label %sw.bb123
    i32 507, label %sw.bb138
    i32 501, label %sw.bb153
    i32 500, label %sw.bb153
    i32 499, label %sw.bb153
    i32 498, label %sw.bb153
    i32 497, label %sw.bb175
    i32 496, label %sw.bb175
    i32 495, label %sw.bb175
    i32 494, label %sw.bb175
    i32 493, label %sw.bb175
    i32 492, label %sw.bb175
    i32 650, label %sw.bb190
    i32 649, label %sw.bb190
    i32 612, label %sw.bb190
    i32 611, label %sw.bb190
    i32 279, label %sw.bb190
    i32 278, label %sw.bb190
    i32 276, label %sw.bb190
    i32 273, label %sw.bb190
    i32 270, label %sw.bb190
    i32 379, label %sw.bb198
    i32 378, label %sw.bb198
    i32 375, label %sw.bb198
    i32 360, label %sw.bb198
    i32 359, label %sw.bb198
    i32 356, label %sw.bb198
    i32 277, label %sw.bb198
    i32 275, label %sw.bb198
    i32 274, label %sw.bb198
    i32 272, label %sw.bb198
    i32 271, label %sw.bb198
    i32 269, label %sw.bb198
    i32 268, label %sw.bb198
    i32 448, label %sw.bb206
    i32 423, label %sw.bb206
    i32 405, label %sw.bb206
    i32 265, label %sw.bb206
    i32 264, label %sw.bb206
    i32 262, label %sw.bb206
    i32 261, label %sw.bb206
    i32 263, label %sw.bb221
    i32 260, label %sw.bb221
    i32 341, label %sw.bb236
    i32 324, label %sw.bb236
    i32 226, label %sw.bb236
    i32 225, label %sw.bb236
    i32 224, label %sw.bb236
    i32 337, label %sw.bb244
    i32 319, label %sw.bb244
    i32 220, label %sw.bb244
    i32 219, label %sw.bb244
    i32 218, label %sw.bb244
    i32 334, label %sw.bb252
    i32 316, label %sw.bb252
    i32 214, label %sw.bb252
    i32 213, label %sw.bb252
    i32 211, label %sw.bb252
    i32 327, label %sw.bb260
    i32 309, label %sw.bb260
    i32 206, label %sw.bb260
    i32 205, label %sw.bb260
    i32 204, label %sw.bb260
    i32 154, label %sw.bb268
    i32 153, label %sw.bb276
    i32 119, label %sw.bb284
    i32 633, label %sw.bb299
    i32 632, label %sw.bb299
    i32 630, label %sw.bb299
    i32 629, label %sw.bb299
    i32 627, label %sw.bb299
    i32 626, label %sw.bb299
    i32 624, label %sw.bb299
    i32 623, label %sw.bb299
    i32 615, label %sw.bb299
    i32 613, label %sw.bb299
    i32 518, label %sw.bb299
    i32 485, label %sw.bb299
    i32 484, label %sw.bb299
    i32 483, label %sw.bb299
    i32 482, label %sw.bb299
    i32 481, label %sw.bb299
    i32 480, label %sw.bb299
    i32 479, label %sw.bb299
    i32 478, label %sw.bb299
    i32 477, label %sw.bb299
    i32 476, label %sw.bb299
    i32 475, label %sw.bb299
    i32 474, label %sw.bb299
    i32 473, label %sw.bb299
    i32 472, label %sw.bb299
    i32 471, label %sw.bb299
    i32 470, label %sw.bb299
    i32 469, label %sw.bb299
    i32 468, label %sw.bb299
    i32 467, label %sw.bb299
    i32 466, label %sw.bb299
    i32 463, label %sw.bb299
    i32 462, label %sw.bb299
    i32 459, label %sw.bb299
    i32 458, label %sw.bb299
    i32 453, label %sw.bb299
    i32 452, label %sw.bb299
    i32 451, label %sw.bb299
    i32 450, label %sw.bb299
    i32 449, label %sw.bb299
    i32 445, label %sw.bb299
    i32 444, label %sw.bb299
    i32 441, label %sw.bb299
    i32 440, label %sw.bb299
    i32 437, label %sw.bb299
    i32 436, label %sw.bb299
    i32 431, label %sw.bb299
    i32 430, label %sw.bb299
    i32 429, label %sw.bb299
    i32 428, label %sw.bb299
    i32 427, label %sw.bb299
    i32 426, label %sw.bb299
    i32 425, label %sw.bb299
    i32 424, label %sw.bb299
    i32 420, label %sw.bb299
    i32 419, label %sw.bb299
    i32 418, label %sw.bb299
    i32 416, label %sw.bb299
    i32 415, label %sw.bb299
    i32 413, label %sw.bb299
    i32 412, label %sw.bb299
    i32 409, label %sw.bb299
    i32 408, label %sw.bb299
    i32 407, label %sw.bb299
    i32 406, label %sw.bb299
    i32 403, label %sw.bb299
    i32 383, label %sw.bb299
    i32 382, label %sw.bb299
    i32 381, label %sw.bb299
    i32 380, label %sw.bb299
    i32 377, label %sw.bb299
    i32 376, label %sw.bb299
    i32 374, label %sw.bb299
    i32 364, label %sw.bb299
    i32 363, label %sw.bb299
    i32 362, label %sw.bb299
    i32 361, label %sw.bb299
    i32 358, label %sw.bb299
    i32 357, label %sw.bb299
    i32 355, label %sw.bb299
    i32 353, label %sw.bb299
    i32 351, label %sw.bb299
    i32 348, label %sw.bb299
    i32 347, label %sw.bb299
    i32 345, label %sw.bb299
    i32 344, label %sw.bb299
    i32 339, label %sw.bb299
    i32 338, label %sw.bb299
    i32 335, label %sw.bb299
    i32 330, label %sw.bb299
    i32 329, label %sw.bb299
    i32 328, label %sw.bb299
    i32 325, label %sw.bb299
    i32 321, label %sw.bb299
    i32 320, label %sw.bb299
    i32 317, label %sw.bb299
    i32 312, label %sw.bb299
    i32 311, label %sw.bb299
    i32 310, label %sw.bb299
    i32 307, label %sw.bb299
    i32 306, label %sw.bb299
    i32 305, label %sw.bb299
    i32 304, label %sw.bb299
    i32 302, label %sw.bb299
    i32 299, label %sw.bb299
    i32 298, label %sw.bb299
    i32 296, label %sw.bb299
    i32 293, label %sw.bb299
    i32 292, label %sw.bb299
    i32 290, label %sw.bb299
    i32 267, label %sw.bb299
    i32 266, label %sw.bb299
    i32 259, label %sw.bb299
    i32 258, label %sw.bb299
    i32 257, label %sw.bb299
    i32 256, label %sw.bb299
    i32 255, label %sw.bb299
    i32 254, label %sw.bb299
    i32 253, label %sw.bb299
    i32 252, label %sw.bb299
    i32 251, label %sw.bb299
    i32 250, label %sw.bb299
    i32 249, label %sw.bb299
    i32 246, label %sw.bb299
    i32 243, label %sw.bb299
    i32 238, label %sw.bb299
    i32 237, label %sw.bb299
    i32 236, label %sw.bb299
    i32 235, label %sw.bb299
    i32 232, label %sw.bb299
    i32 231, label %sw.bb299
    i32 230, label %sw.bb299
    i32 229, label %sw.bb299
    i32 228, label %sw.bb299
    i32 227, label %sw.bb299
    i32 222, label %sw.bb299
    i32 221, label %sw.bb299
    i32 216, label %sw.bb299
    i32 215, label %sw.bb299
    i32 208, label %sw.bb299
    i32 207, label %sw.bb299
    i32 202, label %sw.bb299
    i32 189, label %sw.bb299
    i32 188, label %sw.bb299
    i32 186, label %sw.bb299
    i32 185, label %sw.bb299
    i32 115, label %sw.bb299
    i32 113, label %sw.bb299
    i32 112, label %sw.bb299
    i32 110, label %sw.bb299
    i32 109, label %sw.bb299
    i32 107, label %sw.bb299
    i32 82, label %sw.bb299
    i32 81, label %sw.bb299
    i32 63, label %sw.bb299
    i32 57, label %sw.bb299
    i32 44, label %sw.bb299
    i32 43, label %sw.bb299
  ]

sw.bb:                                            ; preds = %entry, %entry
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 17, i32 8) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call) #4
  %arrayidx = getelementptr inbounds %struct.rtx_def* %pattern, i64 0, i32 1, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx to %struct.rtvec_def**
  %0 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds %struct.rtvec_def* %0, i64 0, i32 1, i64 1
  store %struct.rtx_def* %call1, %struct.rtx_def** %arrayidx2, align 8, !tbaa !1
  %call3 = tail call %struct.rtx_def* @gen_rtx_REG(i32 17, i32 9) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call3) #4
  %1 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !1
  %arrayidx9 = getelementptr inbounds %struct.rtvec_def* %1, i64 0, i32 1, i64 2
  store %struct.rtx_def* %call4, %struct.rtx_def** %arrayidx9, align 8, !tbaa !1
  %call10 = tail call %struct.rtx_def* @gen_rtx_REG(i32 17, i32 10) #4
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call10) #4
  %2 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !1
  %arrayidx16 = getelementptr inbounds %struct.rtvec_def* %2, i64 0, i32 1, i64 3
  store %struct.rtx_def* %call11, %struct.rtx_def** %arrayidx16, align 8, !tbaa !1
  %call17 = tail call %struct.rtx_def* @gen_rtx_REG(i32 17, i32 11) #4
  %call18 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call17) #4
  %3 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !1
  %arrayidx23 = getelementptr inbounds %struct.rtvec_def* %3, i64 0, i32 1, i64 4
  store %struct.rtx_def* %call18, %struct.rtx_def** %arrayidx23, align 8, !tbaa !1
  %call24 = tail call %struct.rtx_def* @gen_rtx_REG(i32 17, i32 12) #4
  %call25 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call24) #4
  %4 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !1
  %arrayidx30 = getelementptr inbounds %struct.rtvec_def* %4, i64 0, i32 1, i64 5
  store %struct.rtx_def* %call25, %struct.rtx_def** %arrayidx30, align 8, !tbaa !1
  %call31 = tail call %struct.rtx_def* @gen_rtx_REG(i32 17, i32 13) #4
  %call32 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call31) #4
  %5 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !1
  %arrayidx37 = getelementptr inbounds %struct.rtvec_def* %5, i64 0, i32 1, i64 6
  store %struct.rtx_def* %call32, %struct.rtx_def** %arrayidx37, align 8, !tbaa !1
  %call38 = tail call %struct.rtx_def* @gen_rtx_REG(i32 17, i32 14) #4
  %call39 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call38) #4
  %6 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !1
  %arrayidx44 = getelementptr inbounds %struct.rtvec_def* %6, i64 0, i32 1, i64 7
  store %struct.rtx_def* %call39, %struct.rtx_def** %arrayidx44, align 8, !tbaa !1
  %call45 = tail call %struct.rtx_def* @gen_rtx_REG(i32 17, i32 15) #4
  %call46 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call45) #4
  %7 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !1
  %arrayidx51 = getelementptr inbounds %struct.rtvec_def* %7, i64 0, i32 1, i64 8
  store %struct.rtx_def* %call46, %struct.rtx_def** %arrayidx51, align 8, !tbaa !1
  %call52 = tail call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 29) #4
  %call53 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call52) #4
  %8 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !1
  %arrayidx58 = getelementptr inbounds %struct.rtvec_def* %8, i64 0, i32 1, i64 9
  store %struct.rtx_def* %call53, %struct.rtx_def** %arrayidx58, align 8, !tbaa !1
  %call59 = tail call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 30) #4
  %call60 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call59) #4
  %9 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !1
  %arrayidx65 = getelementptr inbounds %struct.rtvec_def* %9, i64 0, i32 1, i64 10
  store %struct.rtx_def* %call60, %struct.rtx_def** %arrayidx65, align 8, !tbaa !1
  %call66 = tail call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 31) #4
  %call67 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call66) #4
  %10 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !1
  %arrayidx72 = getelementptr inbounds %struct.rtvec_def* %10, i64 0, i32 1, i64 11
  store %struct.rtx_def* %call67, %struct.rtx_def** %arrayidx72, align 8, !tbaa !1
  %call73 = tail call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 32) #4
  %call74 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call73) #4
  %11 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !1
  %arrayidx79 = getelementptr inbounds %struct.rtvec_def* %11, i64 0, i32 1, i64 12
  store %struct.rtx_def* %call74, %struct.rtx_def** %arrayidx79, align 8, !tbaa !1
  %call80 = tail call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 33) #4
  %call81 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call80) #4
  %12 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !1
  %arrayidx86 = getelementptr inbounds %struct.rtvec_def* %12, i64 0, i32 1, i64 13
  store %struct.rtx_def* %call81, %struct.rtx_def** %arrayidx86, align 8, !tbaa !1
  %call87 = tail call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 34) #4
  %call88 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call87) #4
  %13 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !1
  %arrayidx93 = getelementptr inbounds %struct.rtvec_def* %13, i64 0, i32 1, i64 14
  store %struct.rtx_def* %call88, %struct.rtx_def** %arrayidx93, align 8, !tbaa !1
  %call94 = tail call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 35) #4
  %call95 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call94) #4
  %14 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !1
  %arrayidx100 = getelementptr inbounds %struct.rtvec_def* %14, i64 0, i32 1, i64 15
  store %struct.rtx_def* %call95, %struct.rtx_def** %arrayidx100, align 8, !tbaa !1
  %call101 = tail call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 36) #4
  %call102 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call101) #4
  %15 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !1
  %arrayidx107 = getelementptr inbounds %struct.rtvec_def* %15, i64 0, i32 1, i64 16
  store %struct.rtx_def* %call102, %struct.rtx_def** %arrayidx107, align 8, !tbaa !1
  br label %sw.epilog

sw.bb108:                                         ; preds = %entry, %entry
  %call109 = tail call %struct.rtx_def* @gen_rtx_fmt_0(i32 62, i32 16) #4
  %call110 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call109) #4
  %arrayidx112 = getelementptr inbounds %struct.rtx_def* %pattern, i64 0, i32 1, i64 0
  %rtvec113 = bitcast %union.rtunion_def* %arrayidx112 to %struct.rtvec_def**
  %16 = load %struct.rtvec_def** %rtvec113, align 8, !tbaa !1
  %arrayidx115 = getelementptr inbounds %struct.rtvec_def* %16, i64 0, i32 1, i64 1
  store %struct.rtx_def* %call110, %struct.rtx_def** %arrayidx115, align 8, !tbaa !1
  %call116 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call117 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call116) #4
  %17 = load %struct.rtvec_def** %rtvec113, align 8, !tbaa !1
  %arrayidx122 = getelementptr inbounds %struct.rtvec_def* %17, i64 0, i32 1, i64 2
  store %struct.rtx_def* %call117, %struct.rtx_def** %arrayidx122, align 8, !tbaa !1
  br label %sw.epilog

sw.bb123:                                         ; preds = %entry, %entry
  %call124 = tail call %struct.rtx_def* @gen_rtx_fmt_0(i32 62, i32 15) #4
  %call125 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call124) #4
  %arrayidx127 = getelementptr inbounds %struct.rtx_def* %pattern, i64 0, i32 1, i64 0
  %rtvec128 = bitcast %union.rtunion_def* %arrayidx127 to %struct.rtvec_def**
  %18 = load %struct.rtvec_def** %rtvec128, align 8, !tbaa !1
  %arrayidx130 = getelementptr inbounds %struct.rtvec_def* %18, i64 0, i32 1, i64 1
  store %struct.rtx_def* %call125, %struct.rtx_def** %arrayidx130, align 8, !tbaa !1
  %call131 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call132 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call131) #4
  %19 = load %struct.rtvec_def** %rtvec128, align 8, !tbaa !1
  %arrayidx137 = getelementptr inbounds %struct.rtvec_def* %19, i64 0, i32 1, i64 2
  store %struct.rtx_def* %call132, %struct.rtx_def** %arrayidx137, align 8, !tbaa !1
  br label %sw.epilog

sw.bb138:                                         ; preds = %entry
  %call139 = tail call %struct.rtx_def* @gen_rtx_fmt_0(i32 62, i32 4) #4
  %call140 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call139) #4
  %arrayidx142 = getelementptr inbounds %struct.rtx_def* %pattern, i64 0, i32 1, i64 0
  %rtvec143 = bitcast %union.rtunion_def* %arrayidx142 to %struct.rtvec_def**
  %20 = load %struct.rtvec_def** %rtvec143, align 8, !tbaa !1
  %arrayidx145 = getelementptr inbounds %struct.rtvec_def* %20, i64 0, i32 1, i64 2
  store %struct.rtx_def* %call140, %struct.rtx_def** %arrayidx145, align 8, !tbaa !1
  %call146 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call147 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call146) #4
  %21 = load %struct.rtvec_def** %rtvec143, align 8, !tbaa !1
  %arrayidx152 = getelementptr inbounds %struct.rtvec_def* %21, i64 0, i32 1, i64 3
  store %struct.rtx_def* %call147, %struct.rtx_def** %arrayidx152, align 8, !tbaa !1
  br label %sw.epilog

sw.bb153:                                         ; preds = %entry, %entry, %entry, %entry
  %call154 = tail call %struct.rtx_def* @gen_rtx_REG(i32 57, i32 18) #4
  %call155 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call154) #4
  %arrayidx157 = getelementptr inbounds %struct.rtx_def* %pattern, i64 0, i32 1, i64 0
  %rtvec158 = bitcast %union.rtunion_def* %arrayidx157 to %struct.rtvec_def**
  %22 = load %struct.rtvec_def** %rtvec158, align 8, !tbaa !1
  %arrayidx160 = getelementptr inbounds %struct.rtvec_def* %22, i64 0, i32 1, i64 1
  store %struct.rtx_def* %call155, %struct.rtx_def** %arrayidx160, align 8, !tbaa !1
  %call161 = tail call %struct.rtx_def* @gen_rtx_REG(i32 57, i32 17) #4
  %call162 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call161) #4
  %23 = load %struct.rtvec_def** %rtvec158, align 8, !tbaa !1
  %arrayidx167 = getelementptr inbounds %struct.rtvec_def* %23, i64 0, i32 1, i64 2
  store %struct.rtx_def* %call162, %struct.rtx_def** %arrayidx167, align 8, !tbaa !1
  %call168 = tail call %struct.rtx_def* @gen_rtx_fmt_0(i32 62, i32 3) #4
  %call169 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call168) #4
  %24 = load %struct.rtvec_def** %rtvec158, align 8, !tbaa !1
  %arrayidx174 = getelementptr inbounds %struct.rtvec_def* %24, i64 0, i32 1, i64 3
  store %struct.rtx_def* %call169, %struct.rtx_def** %arrayidx174, align 8, !tbaa !1
  br label %sw.epilog

sw.bb175:                                         ; preds = %entry, %entry, %entry, %entry, %entry, %entry
  %call176 = tail call %struct.rtx_def* @gen_rtx_REG(i32 57, i32 18) #4
  %call177 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call176) #4
  %arrayidx179 = getelementptr inbounds %struct.rtx_def* %pattern, i64 0, i32 1, i64 0
  %rtvec180 = bitcast %union.rtunion_def* %arrayidx179 to %struct.rtvec_def**
  %25 = load %struct.rtvec_def** %rtvec180, align 8, !tbaa !1
  %arrayidx182 = getelementptr inbounds %struct.rtvec_def* %25, i64 0, i32 1, i64 1
  store %struct.rtx_def* %call177, %struct.rtx_def** %arrayidx182, align 8, !tbaa !1
  %call183 = tail call %struct.rtx_def* @gen_rtx_REG(i32 57, i32 17) #4
  %call184 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call183) #4
  %26 = load %struct.rtvec_def** %rtvec180, align 8, !tbaa !1
  %arrayidx189 = getelementptr inbounds %struct.rtvec_def* %26, i64 0, i32 1, i64 2
  store %struct.rtx_def* %call184, %struct.rtx_def** %arrayidx189, align 8, !tbaa !1
  br label %sw.epilog

sw.bb190:                                         ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  %call191 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call192 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call191) #4
  %arrayidx194 = getelementptr inbounds %struct.rtx_def* %pattern, i64 0, i32 1, i64 0
  %rtvec195 = bitcast %union.rtunion_def* %arrayidx194 to %struct.rtvec_def**
  %27 = load %struct.rtvec_def** %rtvec195, align 8, !tbaa !1
  %arrayidx197 = getelementptr inbounds %struct.rtvec_def* %27, i64 0, i32 1, i64 3
  store %struct.rtx_def* %call192, %struct.rtx_def** %arrayidx197, align 8, !tbaa !1
  br label %sw.epilog

sw.bb198:                                         ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  %call199 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call200 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call199) #4
  %arrayidx202 = getelementptr inbounds %struct.rtx_def* %pattern, i64 0, i32 1, i64 0
  %rtvec203 = bitcast %union.rtunion_def* %arrayidx202 to %struct.rtvec_def**
  %28 = load %struct.rtvec_def** %rtvec203, align 8, !tbaa !1
  %arrayidx205 = getelementptr inbounds %struct.rtvec_def* %28, i64 0, i32 1, i64 2
  store %struct.rtx_def* %call200, %struct.rtx_def** %arrayidx205, align 8, !tbaa !1
  br label %sw.epilog

sw.bb206:                                         ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry
  %call207 = tail call %struct.rtx_def* @gen_rtx_fmt_0(i32 62, i32 4) #4
  %call208 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call207) #4
  %arrayidx210 = getelementptr inbounds %struct.rtx_def* %pattern, i64 0, i32 1, i64 0
  %rtvec211 = bitcast %union.rtunion_def* %arrayidx210 to %struct.rtvec_def**
  %29 = load %struct.rtvec_def** %rtvec211, align 8, !tbaa !1
  %arrayidx213 = getelementptr inbounds %struct.rtvec_def* %29, i64 0, i32 1, i64 1
  store %struct.rtx_def* %call208, %struct.rtx_def** %arrayidx213, align 8, !tbaa !1
  %call214 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call215 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call214) #4
  %30 = load %struct.rtvec_def** %rtvec211, align 8, !tbaa !1
  %arrayidx220 = getelementptr inbounds %struct.rtvec_def* %30, i64 0, i32 1, i64 2
  store %struct.rtx_def* %call215, %struct.rtx_def** %arrayidx220, align 8, !tbaa !1
  br label %sw.epilog

sw.bb221:                                         ; preds = %entry, %entry
  %call222 = tail call %struct.rtx_def* @gen_rtx_fmt_0(i32 62, i32 5) #4
  %call223 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call222) #4
  %arrayidx225 = getelementptr inbounds %struct.rtx_def* %pattern, i64 0, i32 1, i64 0
  %rtvec226 = bitcast %union.rtunion_def* %arrayidx225 to %struct.rtvec_def**
  %31 = load %struct.rtvec_def** %rtvec226, align 8, !tbaa !1
  %arrayidx228 = getelementptr inbounds %struct.rtvec_def* %31, i64 0, i32 1, i64 1
  store %struct.rtx_def* %call223, %struct.rtx_def** %arrayidx228, align 8, !tbaa !1
  %call229 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call230 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call229) #4
  %32 = load %struct.rtvec_def** %rtvec226, align 8, !tbaa !1
  %arrayidx235 = getelementptr inbounds %struct.rtvec_def* %32, i64 0, i32 1, i64 2
  store %struct.rtx_def* %call230, %struct.rtx_def** %arrayidx235, align 8, !tbaa !1
  br label %sw.epilog

sw.bb236:                                         ; preds = %entry, %entry, %entry, %entry, %entry
  %call237 = tail call %struct.rtx_def* @gen_rtx_fmt_0(i32 62, i32 2) #4
  %call238 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call237) #4
  %arrayidx240 = getelementptr inbounds %struct.rtx_def* %pattern, i64 0, i32 1, i64 0
  %rtvec241 = bitcast %union.rtunion_def* %arrayidx240 to %struct.rtvec_def**
  %33 = load %struct.rtvec_def** %rtvec241, align 8, !tbaa !1
  %arrayidx243 = getelementptr inbounds %struct.rtvec_def* %33, i64 0, i32 1, i64 1
  store %struct.rtx_def* %call238, %struct.rtx_def** %arrayidx243, align 8, !tbaa !1
  br label %sw.epilog

sw.bb244:                                         ; preds = %entry, %entry, %entry, %entry, %entry
  %call245 = tail call %struct.rtx_def* @gen_rtx_fmt_0(i32 62, i32 3) #4
  %call246 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call245) #4
  %arrayidx248 = getelementptr inbounds %struct.rtx_def* %pattern, i64 0, i32 1, i64 0
  %rtvec249 = bitcast %union.rtunion_def* %arrayidx248 to %struct.rtvec_def**
  %34 = load %struct.rtvec_def** %rtvec249, align 8, !tbaa !1
  %arrayidx251 = getelementptr inbounds %struct.rtvec_def* %34, i64 0, i32 1, i64 1
  store %struct.rtx_def* %call246, %struct.rtx_def** %arrayidx251, align 8, !tbaa !1
  br label %sw.epilog

sw.bb252:                                         ; preds = %entry, %entry, %entry, %entry, %entry
  %call253 = tail call %struct.rtx_def* @gen_rtx_fmt_0(i32 62, i32 4) #4
  %call254 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call253) #4
  %arrayidx256 = getelementptr inbounds %struct.rtx_def* %pattern, i64 0, i32 1, i64 0
  %rtvec257 = bitcast %union.rtunion_def* %arrayidx256 to %struct.rtvec_def**
  %35 = load %struct.rtvec_def** %rtvec257, align 8, !tbaa !1
  %arrayidx259 = getelementptr inbounds %struct.rtvec_def* %35, i64 0, i32 1, i64 1
  store %struct.rtx_def* %call254, %struct.rtx_def** %arrayidx259, align 8, !tbaa !1
  br label %sw.epilog

sw.bb260:                                         ; preds = %entry, %entry, %entry, %entry, %entry
  %call261 = tail call %struct.rtx_def* @gen_rtx_fmt_0(i32 62, i32 5) #4
  %call262 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call261) #4
  %arrayidx264 = getelementptr inbounds %struct.rtx_def* %pattern, i64 0, i32 1, i64 0
  %rtvec265 = bitcast %union.rtunion_def* %arrayidx264 to %struct.rtvec_def**
  %36 = load %struct.rtvec_def** %rtvec265, align 8, !tbaa !1
  %arrayidx267 = getelementptr inbounds %struct.rtvec_def* %36, i64 0, i32 1, i64 1
  store %struct.rtx_def* %call262, %struct.rtx_def** %arrayidx267, align 8, !tbaa !1
  br label %sw.epilog

sw.bb268:                                         ; preds = %entry
  %call269 = tail call %struct.rtx_def* @gen_rtx_fmt_0(i32 62, i32 16) #4
  %call270 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call269) #4
  %arrayidx272 = getelementptr inbounds %struct.rtx_def* %pattern, i64 0, i32 1, i64 0
  %rtvec273 = bitcast %union.rtunion_def* %arrayidx272 to %struct.rtvec_def**
  %37 = load %struct.rtvec_def** %rtvec273, align 8, !tbaa !1
  %arrayidx275 = getelementptr inbounds %struct.rtvec_def* %37, i64 0, i32 1, i64 3
  store %struct.rtx_def* %call270, %struct.rtx_def** %arrayidx275, align 8, !tbaa !1
  br label %sw.epilog

sw.bb276:                                         ; preds = %entry
  %call277 = tail call %struct.rtx_def* @gen_rtx_fmt_0(i32 62, i32 16) #4
  %call278 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call277) #4
  %arrayidx280 = getelementptr inbounds %struct.rtx_def* %pattern, i64 0, i32 1, i64 0
  %rtvec281 = bitcast %union.rtunion_def* %arrayidx280 to %struct.rtvec_def**
  %38 = load %struct.rtvec_def** %rtvec281, align 8, !tbaa !1
  %arrayidx283 = getelementptr inbounds %struct.rtvec_def* %38, i64 0, i32 1, i64 4
  store %struct.rtx_def* %call278, %struct.rtx_def** %arrayidx283, align 8, !tbaa !1
  br label %sw.epilog

sw.bb284:                                         ; preds = %entry
  %call285 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call286 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call285) #4
  %arrayidx288 = getelementptr inbounds %struct.rtx_def* %pattern, i64 0, i32 1, i64 0
  %rtvec289 = bitcast %union.rtunion_def* %arrayidx288 to %struct.rtvec_def**
  %39 = load %struct.rtvec_def** %rtvec289, align 8, !tbaa !1
  %arrayidx291 = getelementptr inbounds %struct.rtvec_def* %39, i64 0, i32 1, i64 1
  store %struct.rtx_def* %call286, %struct.rtx_def** %arrayidx291, align 8, !tbaa !1
  %call292 = tail call %struct.rtx_def* @gen_rtx_fmt_0(i32 62, i32 4) #4
  %call293 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call292) #4
  %40 = load %struct.rtvec_def** %rtvec289, align 8, !tbaa !1
  %arrayidx298 = getelementptr inbounds %struct.rtvec_def* %40, i64 0, i32 1, i64 2
  store %struct.rtx_def* %call293, %struct.rtx_def** %arrayidx298, align 8, !tbaa !1
  br label %sw.epilog

sw.bb299:                                         ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  %call300 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call301 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call300) #4
  %arrayidx303 = getelementptr inbounds %struct.rtx_def* %pattern, i64 0, i32 1, i64 0
  %rtvec304 = bitcast %union.rtunion_def* %arrayidx303 to %struct.rtvec_def**
  %41 = load %struct.rtvec_def** %rtvec304, align 8, !tbaa !1
  %arrayidx306 = getelementptr inbounds %struct.rtvec_def* %41, i64 0, i32 1, i64 1
  store %struct.rtx_def* %call301, %struct.rtx_def** %arrayidx306, align 8, !tbaa !1
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str, i64 0, i64 0), i32 20035, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.add_clobbers, i64 0, i64 0)) #5
  unreachable

sw.epilog:                                        ; preds = %sw.bb299, %sw.bb284, %sw.bb276, %sw.bb268, %sw.bb260, %sw.bb252, %sw.bb244, %sw.bb236, %sw.bb221, %sw.bb206, %sw.bb198, %sw.bb190, %sw.bb175, %sw.bb153, %sw.bb138, %sw.bb123, %sw.bb108, %sw.bb
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @added_clobbers_hard_reg_p(i32 %insn_code_number) #0 {
entry:
  switch i32 %insn_code_number, label %sw.default [
    i32 341, label %return
    i32 324, label %return
    i32 226, label %return
    i32 225, label %return
    i32 224, label %return
    i32 337, label %return
    i32 319, label %return
    i32 220, label %return
    i32 219, label %return
    i32 218, label %return
    i32 334, label %return
    i32 316, label %return
    i32 214, label %return
    i32 213, label %return
    i32 211, label %return
    i32 327, label %return
    i32 309, label %return
    i32 206, label %return
    i32 205, label %return
    i32 204, label %return
    i32 154, label %return
    i32 153, label %return
    i32 815, label %sw.bb1
    i32 801, label %sw.bb1
    i32 640, label %sw.bb1
    i32 639, label %sw.bb1
    i32 638, label %sw.bb1
    i32 637, label %sw.bb1
    i32 507, label %sw.bb1
    i32 501, label %sw.bb1
    i32 500, label %sw.bb1
    i32 499, label %sw.bb1
    i32 498, label %sw.bb1
    i32 497, label %sw.bb1
    i32 496, label %sw.bb1
    i32 495, label %sw.bb1
    i32 494, label %sw.bb1
    i32 493, label %sw.bb1
    i32 492, label %sw.bb1
    i32 650, label %sw.bb1
    i32 649, label %sw.bb1
    i32 612, label %sw.bb1
    i32 611, label %sw.bb1
    i32 279, label %sw.bb1
    i32 278, label %sw.bb1
    i32 276, label %sw.bb1
    i32 273, label %sw.bb1
    i32 270, label %sw.bb1
    i32 379, label %sw.bb1
    i32 378, label %sw.bb1
    i32 375, label %sw.bb1
    i32 360, label %sw.bb1
    i32 359, label %sw.bb1
    i32 356, label %sw.bb1
    i32 277, label %sw.bb1
    i32 275, label %sw.bb1
    i32 274, label %sw.bb1
    i32 272, label %sw.bb1
    i32 271, label %sw.bb1
    i32 269, label %sw.bb1
    i32 268, label %sw.bb1
    i32 448, label %sw.bb1
    i32 423, label %sw.bb1
    i32 405, label %sw.bb1
    i32 265, label %sw.bb1
    i32 264, label %sw.bb1
    i32 262, label %sw.bb1
    i32 261, label %sw.bb1
    i32 263, label %sw.bb1
    i32 260, label %sw.bb1
    i32 119, label %sw.bb1
    i32 633, label %sw.bb1
    i32 632, label %sw.bb1
    i32 630, label %sw.bb1
    i32 629, label %sw.bb1
    i32 627, label %sw.bb1
    i32 626, label %sw.bb1
    i32 624, label %sw.bb1
    i32 623, label %sw.bb1
    i32 615, label %sw.bb1
    i32 613, label %sw.bb1
    i32 518, label %sw.bb1
    i32 485, label %sw.bb1
    i32 484, label %sw.bb1
    i32 483, label %sw.bb1
    i32 482, label %sw.bb1
    i32 481, label %sw.bb1
    i32 480, label %sw.bb1
    i32 479, label %sw.bb1
    i32 478, label %sw.bb1
    i32 477, label %sw.bb1
    i32 476, label %sw.bb1
    i32 475, label %sw.bb1
    i32 474, label %sw.bb1
    i32 473, label %sw.bb1
    i32 472, label %sw.bb1
    i32 471, label %sw.bb1
    i32 470, label %sw.bb1
    i32 469, label %sw.bb1
    i32 468, label %sw.bb1
    i32 467, label %sw.bb1
    i32 466, label %sw.bb1
    i32 463, label %sw.bb1
    i32 462, label %sw.bb1
    i32 459, label %sw.bb1
    i32 458, label %sw.bb1
    i32 453, label %sw.bb1
    i32 452, label %sw.bb1
    i32 451, label %sw.bb1
    i32 450, label %sw.bb1
    i32 449, label %sw.bb1
    i32 445, label %sw.bb1
    i32 444, label %sw.bb1
    i32 441, label %sw.bb1
    i32 440, label %sw.bb1
    i32 437, label %sw.bb1
    i32 436, label %sw.bb1
    i32 431, label %sw.bb1
    i32 430, label %sw.bb1
    i32 429, label %sw.bb1
    i32 428, label %sw.bb1
    i32 427, label %sw.bb1
    i32 426, label %sw.bb1
    i32 425, label %sw.bb1
    i32 424, label %sw.bb1
    i32 420, label %sw.bb1
    i32 419, label %sw.bb1
    i32 418, label %sw.bb1
    i32 416, label %sw.bb1
    i32 415, label %sw.bb1
    i32 413, label %sw.bb1
    i32 412, label %sw.bb1
    i32 409, label %sw.bb1
    i32 408, label %sw.bb1
    i32 407, label %sw.bb1
    i32 406, label %sw.bb1
    i32 403, label %sw.bb1
    i32 383, label %sw.bb1
    i32 382, label %sw.bb1
    i32 381, label %sw.bb1
    i32 380, label %sw.bb1
    i32 377, label %sw.bb1
    i32 376, label %sw.bb1
    i32 374, label %sw.bb1
    i32 364, label %sw.bb1
    i32 363, label %sw.bb1
    i32 362, label %sw.bb1
    i32 361, label %sw.bb1
    i32 358, label %sw.bb1
    i32 357, label %sw.bb1
    i32 355, label %sw.bb1
    i32 353, label %sw.bb1
    i32 351, label %sw.bb1
    i32 348, label %sw.bb1
    i32 347, label %sw.bb1
    i32 345, label %sw.bb1
    i32 344, label %sw.bb1
    i32 339, label %sw.bb1
    i32 338, label %sw.bb1
    i32 335, label %sw.bb1
    i32 330, label %sw.bb1
    i32 329, label %sw.bb1
    i32 328, label %sw.bb1
    i32 325, label %sw.bb1
    i32 321, label %sw.bb1
    i32 320, label %sw.bb1
    i32 317, label %sw.bb1
    i32 312, label %sw.bb1
    i32 311, label %sw.bb1
    i32 310, label %sw.bb1
    i32 307, label %sw.bb1
    i32 306, label %sw.bb1
    i32 305, label %sw.bb1
    i32 304, label %sw.bb1
    i32 302, label %sw.bb1
    i32 299, label %sw.bb1
    i32 298, label %sw.bb1
    i32 296, label %sw.bb1
    i32 293, label %sw.bb1
    i32 292, label %sw.bb1
    i32 290, label %sw.bb1
    i32 267, label %sw.bb1
    i32 266, label %sw.bb1
    i32 259, label %sw.bb1
    i32 258, label %sw.bb1
    i32 257, label %sw.bb1
    i32 256, label %sw.bb1
    i32 255, label %sw.bb1
    i32 254, label %sw.bb1
    i32 253, label %sw.bb1
    i32 252, label %sw.bb1
    i32 251, label %sw.bb1
    i32 250, label %sw.bb1
    i32 249, label %sw.bb1
    i32 246, label %sw.bb1
    i32 243, label %sw.bb1
    i32 238, label %sw.bb1
    i32 237, label %sw.bb1
    i32 236, label %sw.bb1
    i32 235, label %sw.bb1
    i32 232, label %sw.bb1
    i32 231, label %sw.bb1
    i32 230, label %sw.bb1
    i32 229, label %sw.bb1
    i32 228, label %sw.bb1
    i32 227, label %sw.bb1
    i32 222, label %sw.bb1
    i32 221, label %sw.bb1
    i32 216, label %sw.bb1
    i32 215, label %sw.bb1
    i32 208, label %sw.bb1
    i32 207, label %sw.bb1
    i32 202, label %sw.bb1
    i32 189, label %sw.bb1
    i32 188, label %sw.bb1
    i32 186, label %sw.bb1
    i32 185, label %sw.bb1
    i32 115, label %sw.bb1
    i32 113, label %sw.bb1
    i32 112, label %sw.bb1
    i32 110, label %sw.bb1
    i32 109, label %sw.bb1
    i32 107, label %sw.bb1
    i32 82, label %sw.bb1
    i32 81, label %sw.bb1
    i32 63, label %sw.bb1
    i32 57, label %sw.bb1
    i32 44, label %sw.bb1
    i32 43, label %sw.bb1
  ]

sw.bb1:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  br label %return

sw.default:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str, i64 0, i64 0), i32 20280, i8* getelementptr inbounds ([26 x i8]* @__FUNCTION__.added_clobbers_hard_reg_p, i64 0, i64 0)) #5
  unreachable

return:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %sw.bb1
  %retval.0 = phi i32 [ 1, %sw.bb1 ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ]
  ret i32 %retval.0
}

attributes #0 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readonly uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { noreturn nounwind }

!llvm.ident = !{!0}

!0 = metadata !{metadata !"clang version 3.5 (trunk)"}
!1 = metadata !{metadata !2, metadata !2, i64 0}
!2 = metadata !{metadata !"any pointer", metadata !3, i64 0}
!3 = metadata !{metadata !"omnipotent char", metadata !4, i64 0}
!4 = metadata !{metadata !"Simple C/C++ TBAA"}
!5 = metadata !{metadata !6, metadata !6, i64 0}
!6 = metadata !{metadata !"int", metadata !3, i64 0}
!7 = metadata !{metadata !8, metadata !8, i64 0}
!8 = metadata !{metadata !"long long", metadata !3, i64 0}
!9 = metadata !{metadata !3, metadata !3, i64 0}
!10 = metadata !{metadata !11, metadata !11, i64 0}
!11 = metadata !{metadata !"short", metadata !3, i64 0}
!12 = metadata !{metadata !13, metadata !6, i64 0}
!13 = metadata !{metadata !"rtvec_def", metadata !6, i64 0, metadata !3, i64 8}
!14 = metadata !{metadata !15, metadata !6, i64 64}
!15 = metadata !{metadata !"function", metadata !2, i64 0, metadata !2, i64 8, metadata !2, i64 16, metadata !2, i64 24, metadata !2, i64 32, metadata !2, i64 40, metadata !2, i64 48, metadata !2, i64 56, metadata !6, i64 64, metadata !6, i64 68, metadata !6, i64 72, metadata !6, i64 76, metadata !2, i64 80, metadata !16, i64 88, metadata !2, i64 120, metadata !2, i64 128, metadata !2, i64 136, metadata !2, i64 144, metadata !6, i64 152, metadata !2, i64 160, metadata !2, i64 168, metadata !2, i64 176, metadata !2, i64 184, metadata !2, i64 192, metadata !2, i64 200, metadata !2, i64 208, metadata !2, i64 216, metadata !2, i64 224, metadata !2, i64 232, metadata !2, i64 240, metadata !2, i64 248, metadata !2, i64 256, metadata !8, i64 264, metadata !2, i64 272, metadata !2, i64 280, metadata !2, i64 288, metadata !2, i64 296, metadata !6, i64 304, metadata !2, i64 312, metadata !2, i64 320, metadata !6, i64 328, metadata !6, i64 332, metadata !6, i64 336, metadata !2, i64 344, metadata !6, i64 352, metadata !6, i64 356, metadata !2, i64 360, metadata !2, i64 368, metadata !2, i64 376, metadata !6, i64 384, metadata !6, i64 388, metadata !2, i64 392, metadata !6, i64 400, metadata !6, i64 404, metadata !2, i64 408, metadata !2, i64 416, metadata !6, i64 424, metadata !6, i64 424, metadata !6, i64 424, metadata !6, i64 424, metadata !6, i64 424, metadata !6, i64 424, metadata !6, i64 424, metadata !6, i64 424, metadata !6, i64 425, metadata !6, i64 425, metadata !6, i64 425, metadata !6, i64 425, metadata !6, i64 425, metadata !6, i64 425, metadata !6, i64 425, metadata !6, i64 425, metadata !6, i64 426, metadata !6, i64 426, metadata !6, i64 426, metadata !6, i64 426, metadata !6, i64 426, metadata !6, i64 426, metadata !6, i64 426, metadata !6, i64 426}
!16 = metadata !{metadata !"ix86_args", metadata !6, i64 0, metadata !6, i64 4, metadata !6, i64 8, metadata !6, i64 12, metadata !6, i64 16, metadata !6, i64 20, metadata !6, i64 24}
