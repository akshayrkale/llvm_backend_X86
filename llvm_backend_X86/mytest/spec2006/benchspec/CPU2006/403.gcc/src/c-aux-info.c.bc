; ModuleID = 'c-aux-info.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type opaque
%union.tree_node = type { %struct.tree_decl }
%struct.tree_decl = type { %struct.tree_common, i8*, i32, i32, %union.tree_node*, i48, %union.anon, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %union.anon.1, %union.tree_node*, %union.tree_node*, %union.tree_node*, i64, %struct.lang_decl* }
%struct.tree_common = type { %union.tree_node*, %union.tree_node*, i32 }
%union.anon = type { i64 }
%struct.rtx_def = type opaque
%union.anon.1 = type { %struct.function* }
%struct.function = type opaque
%struct.lang_decl = type { %struct.c_lang_decl, %union.tree_node* }
%struct.c_lang_decl = type { i8, [3 x i8] }
%struct.tree_type = type { %struct.tree_common, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32, i32, i32, %union.tree_node*, %union.tree_node*, %union.anon.2, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i64, %struct.lang_type* }
%union.anon.2 = type { i8* }
%struct.lang_type = type { i32, [1 x %union.tree_node*] }

@flag_gen_aux_info = external global i32
@gen_aux_info_record.compiled_from_record = internal unnamed_addr global i32 0, align 4
@aux_info_file = external global %struct._IO_FILE*
@.str = private unnamed_addr constant [24 x i8] c"/* compiled from: . */\0A\00", align 1
@.str1 = private unnamed_addr constant [21 x i8] c"/* %s:%d:%c%c */ %s;\00", align 1
@.str2 = private unnamed_addr constant [11 x i8] c" /*%s %s*/\00", align 1
@libiberty_optr = common global i8* null, align 8
@libiberty_nptr = common global i8* null, align 8
@libiberty_len = common global i64 0, align 8
@.str4 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str5 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str6 = private unnamed_addr constant [3 x i8] c"; \00", align 1
@.str7 = private unnamed_addr constant [5 x i8] c"void\00", align 1
@.str8 = private unnamed_addr constant [6 x i8] c", ...\00", align 1
@.str9 = private unnamed_addr constant [3 x i8] c" (\00", align 1
@.str10 = private unnamed_addr constant [2 x i8] c")\00", align 1
@global_trees = external global [51 x %union.tree_node*]
@.str11 = private unnamed_addr constant [10 x i8] c"volatile \00", align 1
@.str12 = private unnamed_addr constant [7 x i8] c"const \00", align 1
@data_type = internal unnamed_addr global i8* null, align 8
@.str13 = private unnamed_addr constant [10 x i8] c"register \00", align 1
@.str14 = private unnamed_addr constant [8 x i8] c"extern \00", align 1
@.str15 = private unnamed_addr constant [8 x i8] c"static \00", align 1
@.str16 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str17 = private unnamed_addr constant [2 x i8] c"*\00", align 1
@.str18 = private unnamed_addr constant [2 x i8] c"(\00", align 1
@.str19 = private unnamed_addr constant [3 x i8] c"[]\00", align 1
@.str20 = private unnamed_addr constant [4 x i8] c"[0]\00", align 1
@.str21 = private unnamed_addr constant [5 x i8] c"[%d]\00", align 1
@.str22 = private unnamed_addr constant [3 x i8] c"{ \00", align 1
@.str23 = private unnamed_addr constant [2 x i8] c"}\00", align 1
@.str24 = private unnamed_addr constant [8 x i8] c"struct \00", align 1
@.str25 = private unnamed_addr constant [7 x i8] c"union \00", align 1
@.str26 = private unnamed_addr constant [3 x i8] c" }\00", align 1
@.str27 = private unnamed_addr constant [6 x i8] c"enum \00", align 1
@.str28 = private unnamed_addr constant [10 x i8] c"unsigned \00", align 1
@.str29 = private unnamed_addr constant [8 x i8] c"[ERROR]\00", align 1
@.str30 = private unnamed_addr constant [13 x i8] c"c-aux-info.c\00", align 1
@__FUNCTION__.gen_type = private unnamed_addr constant [9 x i8] c"gen_type\00", align 1
@.str31 = private unnamed_addr constant [10 x i8] c"restrict \00", align 1
@.str32 = private unnamed_addr constant [3 x i8] c"()\00", align 1
@.str33 = private unnamed_addr constant [10 x i8] c"/* ??? */\00", align 1

; Function Attrs: nounwind uwtable
define void @gen_aux_info_record(%union.tree_node* nocapture readonly %fndecl, i32 %is_definition, i32 %is_implicit, i32 %is_prototyped) #0 {
entry:
  %0 = load i32* @flag_gen_aux_info, align 4, !tbaa !1
  %tobool = icmp eq i32 %0, 0
  br i1 %tobool, label %if.end18, label %if.then

if.then:                                          ; preds = %entry
  %1 = load i32* @gen_aux_info_record.compiled_from_record, align 4, !tbaa !1
  %inc = add nsw i32 %1, 1
  store i32 %inc, i32* @gen_aux_info_record.compiled_from_record, align 4, !tbaa !1
  %tobool1 = icmp eq i32 %1, 0
  br i1 %tobool1, label %if.then2, label %if.end

if.then2:                                         ; preds = %if.then
  %2 = load %struct._IO_FILE** @aux_info_file, align 8, !tbaa !5
  %3 = tail call i64 @fwrite(i8* getelementptr inbounds ([24 x i8]* @.str, i64 0, i64 0), i64 23, i64 1, %struct._IO_FILE* %2)
  br label %if.end

if.end:                                           ; preds = %if.then, %if.then2
  %4 = load %struct._IO_FILE** @aux_info_file, align 8, !tbaa !5
  %filename = getelementptr inbounds %union.tree_node* %fndecl, i64 0, i32 0, i32 1
  %5 = load i8** %filename, align 8, !tbaa !7
  %linenum = getelementptr inbounds %union.tree_node* %fndecl, i64 0, i32 0, i32 2
  %6 = load i32* %linenum, align 4, !tbaa !11
  %tobool4 = icmp eq i32 %is_implicit, 0
  br i1 %tobool4, label %cond.false, label %cond.end

cond.false:                                       ; preds = %if.end
  %tobool5 = icmp ne i32 %is_prototyped, 0
  %cond = select i1 %tobool5, i32 78, i32 79
  br label %cond.end

cond.end:                                         ; preds = %if.end, %cond.false
  %cond6 = phi i32 [ %cond, %cond.false ], [ 73, %if.end ]
  %tobool7 = icmp ne i32 %is_definition, 0
  %cond8 = select i1 %tobool7, i32 70, i32 67
  %call9 = tail call fastcc i8* @gen_decl(%union.tree_node* %fndecl, i32 %is_definition, i32 0)
  %call10 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([21 x i8]* @.str1, i64 0, i64 0), i8* %5, i32 %6, i32 %cond6, i32 %cond8, i8* %call9) #4
  br i1 %tobool7, label %if.then12, label %if.end16

if.then12:                                        ; preds = %cond.end
  %7 = load %struct._IO_FILE** @aux_info_file, align 8, !tbaa !5
  %arguments.i = getelementptr inbounds %union.tree_node* %fndecl, i64 0, i32 0, i32 10
  %formal_decl.053.i = load %union.tree_node** %arguments.i, align 8
  %tobool54.i = icmp eq %union.tree_node* %formal_decl.053.i, null
  br i1 %tobool54.i, label %gen_formal_list_for_func_def.exit, label %while.body.us.i

while.body.us.i:                                  ; preds = %if.then12, %gen_decl.exit
  %formal_decl.056.us.i = phi %union.tree_node* [ %formal_decl.0.us.i, %gen_decl.exit ], [ %formal_decl.053.i, %if.then12 ]
  %formal_list.055.us.i = phi i8* [ %call10.us.i, %gen_decl.exit ], [ getelementptr inbounds ([1 x i8]* @.str4, i64 0, i64 0), %if.then12 ]
  %8 = load i8* %formal_list.055.us.i, align 1, !tbaa !12
  %tobool1.us.i = icmp eq i8 %8, 0
  br i1 %tobool1.us.i, label %if.end11.us.i, label %if.then.us.i

if.then.us.i:                                     ; preds = %while.body.us.i
  %call.us.i = tail call noalias i8* (i8*, ...)* @concat(i8* %formal_list.055.us.i, i8* getelementptr inbounds ([3 x i8]* @.str5, i64 0, i64 0), i8* null) #4
  br label %if.end11.us.i

if.end11.us.i:                                    ; preds = %if.then.us.i, %while.body.us.i
  %formal_list.1.us.i = phi i8* [ %call.us.i, %if.then.us.i ], [ %formal_list.055.us.i, %while.body.us.i ]
  %name.i = getelementptr inbounds %union.tree_node* %formal_decl.056.us.i, i64 0, i32 0, i32 8
  %9 = load %union.tree_node** %name.i, align 8, !tbaa !13
  %tobool.i = icmp eq %union.tree_node* %9, null
  br i1 %tobool.i, label %gen_decl.exit, label %if.then.i

if.then.i:                                        ; preds = %if.end11.us.i
  %id.i = getelementptr inbounds %union.tree_node* %9, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds i8** %id.i, i64 1
  %11 = load i8** %10, align 8, !tbaa !14
  br label %gen_decl.exit

gen_decl.exit:                                    ; preds = %if.end11.us.i, %if.then.i
  %ret_val.0.i = phi i8* [ %11, %if.then.i ], [ getelementptr inbounds ([1 x i8]* @.str4, i64 0, i64 0), %if.end11.us.i ]
  %call10.us.i = tail call noalias i8* (i8*, ...)* @concat(i8* %formal_list.1.us.i, i8* %ret_val.0.i, i8* null) #4
  %chain.us.i = getelementptr inbounds %union.tree_node* %formal_decl.056.us.i, i64 0, i32 0, i32 0, i32 0
  %formal_decl.0.us.i = load %union.tree_node** %chain.us.i, align 8
  %tobool.us.i = icmp eq %union.tree_node* %formal_decl.0.us.i, null
  br i1 %tobool.us.i, label %gen_formal_list_for_func_def.exit, label %while.body.us.i

gen_formal_list_for_func_def.exit:                ; preds = %gen_decl.exit, %if.then12
  %formal_list.0.lcssa.i = phi i8* [ getelementptr inbounds ([1 x i8]* @.str4, i64 0, i64 0), %if.then12 ], [ %call10.us.i, %gen_decl.exit ]
  %call34.i = tail call noalias i8* (i8*, ...)* @concat(i8* getelementptr inbounds ([3 x i8]* @.str9, i64 0, i64 0), i8* %formal_list.0.lcssa.i, i8* getelementptr inbounds ([2 x i8]* @.str10, i64 0, i64 0), i8* null) #4
  %formal_decl.053.i26 = load %union.tree_node** %arguments.i, align 8
  %tobool54.i27 = icmp eq %union.tree_node* %formal_decl.053.i26, null
  br i1 %tobool54.i27, label %gen_formal_list_for_func_def.exit30, label %if.end11.us69.i

if.end11.us69.i:                                  ; preds = %gen_formal_list_for_func_def.exit, %if.end11.us69.i
  %formal_decl.056.us58.i = phi %union.tree_node* [ %formal_decl.0.us72.i, %if.end11.us69.i ], [ %formal_decl.053.i26, %gen_formal_list_for_func_def.exit ]
  %formal_list.055.us59.i = phi i8* [ %call9.us68.i, %if.end11.us69.i ], [ getelementptr inbounds ([1 x i8]* @.str4, i64 0, i64 0), %gen_formal_list_for_func_def.exit ]
  %call5.us64.i = tail call fastcc i8* @gen_decl(%union.tree_node* %formal_decl.056.us58.i, i32 0, i32 2) #4
  %call9.us68.i = tail call noalias i8* (i8*, ...)* @concat(i8* %formal_list.055.us59.i, i8* %call5.us64.i, i8* getelementptr inbounds ([3 x i8]* @.str6, i64 0, i64 0), i8* null) #4
  %chain.us71.i = getelementptr inbounds %union.tree_node* %formal_decl.056.us58.i, i64 0, i32 0, i32 0, i32 0
  %formal_decl.0.us72.i = load %union.tree_node** %chain.us71.i, align 8
  %tobool.us73.i = icmp eq %union.tree_node* %formal_decl.0.us72.i, null
  br i1 %tobool.us73.i, label %gen_formal_list_for_func_def.exit30, label %if.end11.us69.i

gen_formal_list_for_func_def.exit30:              ; preds = %if.end11.us69.i, %gen_formal_list_for_func_def.exit
  %formal_list.0.lcssa.i29 = phi i8* [ getelementptr inbounds ([1 x i8]* @.str4, i64 0, i64 0), %gen_formal_list_for_func_def.exit ], [ %call9.us68.i, %if.end11.us69.i ]
  %call15 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([11 x i8]* @.str2, i64 0, i64 0), i8* %call34.i, i8* %formal_list.0.lcssa.i29) #4
  br label %if.end16

if.end16:                                         ; preds = %gen_formal_list_for_func_def.exit30, %cond.end
  %12 = load %struct._IO_FILE** @aux_info_file, align 8, !tbaa !5
  %fputc = tail call i32 @fputc(i32 10, %struct._IO_FILE* %12)
  br label %if.end18

if.end18:                                         ; preds = %entry, %if.end16
  ret void
}

; Function Attrs: nounwind
declare i32 @fprintf(%struct._IO_FILE* nocapture, i8* nocapture readonly, ...) #1

; Function Attrs: nounwind uwtable
define internal fastcc i8* @gen_decl(%union.tree_node* nocapture readonly %decl, i32 %is_func_definition, i32 %style) #0 {
entry:
  %name = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 8
  %0 = load %union.tree_node** %name, align 8, !tbaa !13
  %tobool = icmp eq %union.tree_node* %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %id = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 1
  %1 = getelementptr inbounds i8** %id, i64 1
  %2 = load i8** %1, align 8, !tbaa !14
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %ret_val.0 = phi i8* [ %2, %if.then ], [ getelementptr inbounds ([1 x i8]* @.str4, i64 0, i64 0), %entry ]
  %cmp = icmp eq i32 %style, 1
  br i1 %cmp, label %return, label %if.end5

if.end5:                                          ; preds = %if.end
  %volatile_flag = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %volatile_flag, align 8
  %bf.clear = and i32 %bf.load, 2048
  %tobool6 = icmp eq i32 %bf.clear, 0
  br i1 %tobool6, label %if.end8, label %if.then7

if.then7:                                         ; preds = %if.end5
  %call = tail call noalias i8* (i8*, ...)* @concat(i8* getelementptr inbounds ([10 x i8]* @.str11, i64 0, i64 0), i8* %ret_val.0, i8* null) #4
  %bf.load10.pre = load i32* %volatile_flag, align 8
  br label %if.end8

if.end8:                                          ; preds = %if.end5, %if.then7
  %bf.load10 = phi i32 [ %bf.load10.pre, %if.then7 ], [ %bf.load, %if.end5 ]
  %ret_val.1 = phi i8* [ %call, %if.then7 ], [ %ret_val.0, %if.end5 ]
  %bf.clear12 = and i32 %bf.load10, 4096
  %tobool13 = icmp eq i32 %bf.clear12, 0
  br i1 %tobool13, label %if.end16, label %if.then14

if.then14:                                        ; preds = %if.end8
  %call15 = tail call noalias i8* (i8*, ...)* @concat(i8* getelementptr inbounds ([7 x i8]* @.str12, i64 0, i64 0), i8* %ret_val.1, i8* null) #4
  br label %if.end16

if.end16:                                         ; preds = %if.end8, %if.then14
  %ret_val.2 = phi i8* [ %call15, %if.then14 ], [ %ret_val.1, %if.end8 ]
  store i8* getelementptr inbounds ([1 x i8]* @.str4, i64 0, i64 0), i8** @data_type, align 8, !tbaa !5
  %bf.load18 = load i32* %volatile_flag, align 8
  %bf.clear19 = and i32 %bf.load18, 255
  %cmp20 = icmp eq i32 %bf.clear19, 30
  %tobool21 = icmp ne i32 %is_func_definition, 0
  %or.cond = and i1 %cmp20, %tobool21
  br i1 %or.cond, label %if.then22, label %if.else29

if.then22:                                        ; preds = %if.end16
  %call23 = tail call fastcc i8* @gen_formal_list_for_func_def(%union.tree_node* %decl, i32 0)
  %call24 = tail call noalias i8* (i8*, ...)* @concat(i8* %ret_val.2, i8* %call23, i8* null) #4
  %type = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 1
  %3 = load %union.tree_node** %type, align 8, !tbaa !17
  %type27 = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 0, i32 1
  %4 = load %union.tree_node** %type27, align 8, !tbaa !17
  %call28 = tail call fastcc i8* @gen_type(i8* %call24, %union.tree_node* %4, i32 %style)
  br label %if.end33

if.else29:                                        ; preds = %if.end16
  %type31 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 1
  %5 = load %union.tree_node** %type31, align 8, !tbaa !17
  %call32 = tail call fastcc i8* @gen_type(i8* %ret_val.2, %union.tree_node* %5, i32 %style)
  br label %if.end33

if.end33:                                         ; preds = %if.else29, %if.then22
  %ret_val.3 = phi i8* [ %call28, %if.then22 ], [ %call32, %if.else29 ]
  %call34 = tail call fastcc noalias i8* @affix_data_type(i8* %ret_val.3)
  %bf.load37 = load i32* %volatile_flag, align 8
  %bf.clear38 = and i32 %bf.load37, 255
  %cmp39 = icmp eq i32 %bf.clear38, 30
  br i1 %cmp39, label %if.end48, label %land.lhs.true40

land.lhs.true40:                                  ; preds = %if.end33
  %regdecl_flag = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 5
  %6 = bitcast i48* %regdecl_flag to i64*
  %bf.load42 = load i64* %6, align 8
  %bf.cast = and i64 %bf.load42, 1024
  %tobool45 = icmp eq i64 %bf.cast, 0
  br i1 %tobool45, label %if.end48, label %if.then46

if.then46:                                        ; preds = %land.lhs.true40
  %call47 = tail call noalias i8* (i8*, ...)* @concat(i8* getelementptr inbounds ([10 x i8]* @.str13, i64 0, i64 0), i8* %call34, i8* null) #4
  %bf.load50.pre = load i32* %volatile_flag, align 8
  br label %if.end48

if.end48:                                         ; preds = %land.lhs.true40, %if.end33, %if.then46
  %bf.load50 = phi i32 [ %bf.load50.pre, %if.then46 ], [ %bf.load37, %land.lhs.true40 ], [ %bf.load37, %if.end33 ]
  %ret_val.4 = phi i8* [ %call47, %if.then46 ], [ %call34, %land.lhs.true40 ], [ %call34, %if.end33 ]
  %bf.clear52 = and i32 %bf.load50, 524288
  %tobool53 = icmp eq i32 %bf.clear52, 0
  br i1 %tobool53, label %if.end56, label %if.then54

if.then54:                                        ; preds = %if.end48
  %call55 = tail call noalias i8* (i8*, ...)* @concat(i8* getelementptr inbounds ([8 x i8]* @.str14, i64 0, i64 0), i8* %ret_val.4, i8* null) #4
  %bf.load59.pre = load i32* %volatile_flag, align 8
  br label %if.end56

if.end56:                                         ; preds = %if.end48, %if.then54
  %bf.load59 = phi i32 [ %bf.load59.pre, %if.then54 ], [ %bf.load50, %if.end48 ]
  %ret_val.5 = phi i8* [ %call55, %if.then54 ], [ %ret_val.4, %if.end48 ]
  %7 = and i32 %bf.load59, 524543
  %8 = icmp eq i32 %7, 30
  br i1 %8, label %if.then69, label %return

if.then69:                                        ; preds = %if.end56
  %call70 = tail call noalias i8* (i8*, ...)* @concat(i8* getelementptr inbounds ([8 x i8]* @.str15, i64 0, i64 0), i8* %ret_val.5, i8* null) #4
  br label %return

return:                                           ; preds = %if.end56, %if.then69, %if.end
  %retval.0 = phi i8* [ %ret_val.0, %if.end ], [ %call70, %if.then69 ], [ %ret_val.5, %if.end56 ]
  ret i8* %retval.0
}

; Function Attrs: nounwind uwtable
define internal fastcc i8* @gen_formal_list_for_func_def(%union.tree_node* nocapture readonly %fndecl, i32 %style) #0 {
entry:
  %arguments = getelementptr inbounds %union.tree_node* %fndecl, i64 0, i32 0, i32 10
  %formal_decl.053 = load %union.tree_node** %arguments, align 8
  %tobool54 = icmp eq %union.tree_node* %formal_decl.053, null
  br i1 %tobool54, label %while.end, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %entry
  %0 = icmp ult i32 %style, 2
  br i1 %0, label %while.body.us, label %while.body.lr.ph.while.body.lr.ph.split_crit_edge

while.body.lr.ph.while.body.lr.ph.split_crit_edge: ; preds = %while.body.lr.ph
  %cmp6 = icmp eq i32 %style, 2
  br i1 %cmp6, label %if.end11.us69, label %if.end11

while.body.us:                                    ; preds = %while.body.lr.ph, %if.end11.us
  %formal_decl.056.us = phi %union.tree_node* [ %formal_decl.0.us, %if.end11.us ], [ %formal_decl.053, %while.body.lr.ph ]
  %formal_list.055.us = phi i8* [ %call10.us, %if.end11.us ], [ getelementptr inbounds ([1 x i8]* @.str4, i64 0, i64 0), %while.body.lr.ph ]
  %1 = load i8* %formal_list.055.us, align 1, !tbaa !12
  %tobool1.us = icmp eq i8 %1, 0
  br i1 %tobool1.us, label %if.end11.us, label %if.then.us

if.then.us:                                       ; preds = %while.body.us
  %call.us = tail call noalias i8* (i8*, ...)* @concat(i8* %formal_list.055.us, i8* getelementptr inbounds ([3 x i8]* @.str5, i64 0, i64 0), i8* null) #4
  br label %if.end11.us

if.end11.us:                                      ; preds = %while.body.us, %if.then.us
  %formal_list.1.us = phi i8* [ %call.us, %if.then.us ], [ %formal_list.055.us, %while.body.us ]
  %call5.us = tail call fastcc i8* @gen_decl(%union.tree_node* %formal_decl.056.us, i32 0, i32 %style)
  %call10.us = tail call noalias i8* (i8*, ...)* @concat(i8* %formal_list.1.us, i8* %call5.us, i8* null) #4
  %chain.us = getelementptr inbounds %union.tree_node* %formal_decl.056.us, i64 0, i32 0, i32 0, i32 0
  %formal_decl.0.us = load %union.tree_node** %chain.us, align 8
  %tobool.us = icmp eq %union.tree_node* %formal_decl.0.us, null
  br i1 %tobool.us, label %while.end, label %while.body.us

if.end11.us69:                                    ; preds = %while.body.lr.ph.while.body.lr.ph.split_crit_edge, %if.end11.us69
  %formal_decl.056.us58 = phi %union.tree_node* [ %formal_decl.0.us72, %if.end11.us69 ], [ %formal_decl.053, %while.body.lr.ph.while.body.lr.ph.split_crit_edge ]
  %formal_list.055.us59 = phi i8* [ %call9.us68, %if.end11.us69 ], [ getelementptr inbounds ([1 x i8]* @.str4, i64 0, i64 0), %while.body.lr.ph.while.body.lr.ph.split_crit_edge ]
  %call5.us64 = tail call fastcc i8* @gen_decl(%union.tree_node* %formal_decl.056.us58, i32 0, i32 2)
  %call9.us68 = tail call noalias i8* (i8*, ...)* @concat(i8* %formal_list.055.us59, i8* %call5.us64, i8* getelementptr inbounds ([3 x i8]* @.str6, i64 0, i64 0), i8* null) #4
  %chain.us71 = getelementptr inbounds %union.tree_node* %formal_decl.056.us58, i64 0, i32 0, i32 0, i32 0
  %formal_decl.0.us72 = load %union.tree_node** %chain.us71, align 8
  %tobool.us73 = icmp eq %union.tree_node* %formal_decl.0.us72, null
  br i1 %tobool.us73, label %while.end, label %if.end11.us69

if.end11:                                         ; preds = %while.body.lr.ph.while.body.lr.ph.split_crit_edge, %if.end11
  %formal_decl.056 = phi %union.tree_node* [ %formal_decl.0, %if.end11 ], [ %formal_decl.053, %while.body.lr.ph.while.body.lr.ph.split_crit_edge ]
  %formal_list.055 = phi i8* [ %call10, %if.end11 ], [ getelementptr inbounds ([1 x i8]* @.str4, i64 0, i64 0), %while.body.lr.ph.while.body.lr.ph.split_crit_edge ]
  %call5 = tail call fastcc i8* @gen_decl(%union.tree_node* %formal_decl.056, i32 0, i32 %style)
  %call10 = tail call noalias i8* (i8*, ...)* @concat(i8* %formal_list.055, i8* %call5, i8* null) #4
  %chain = getelementptr inbounds %union.tree_node* %formal_decl.056, i64 0, i32 0, i32 0, i32 0
  %formal_decl.0 = load %union.tree_node** %chain, align 8
  %tobool = icmp eq %union.tree_node* %formal_decl.0, null
  br i1 %tobool, label %while.end, label %if.end11

while.end:                                        ; preds = %if.end11, %if.end11.us69, %if.end11.us, %entry
  %formal_list.0.lcssa = phi i8* [ getelementptr inbounds ([1 x i8]* @.str4, i64 0, i64 0), %entry ], [ %call10.us, %if.end11.us ], [ %call9.us68, %if.end11.us69 ], [ %call10, %if.end11 ]
  %cmp12 = icmp eq i32 %style, 0
  br i1 %cmp12, label %if.then14, label %if.end27

if.then14:                                        ; preds = %while.end
  %2 = load %union.tree_node** %arguments, align 8, !tbaa !18
  %tobool17 = icmp eq %union.tree_node* %2, null
  br i1 %tobool17, label %if.then18, label %if.end20

if.then18:                                        ; preds = %if.then14
  %call19 = tail call noalias i8* (i8*, ...)* @concat(i8* %formal_list.0.lcssa, i8* getelementptr inbounds ([5 x i8]* @.str7, i64 0, i64 0), i8* null) #4
  br label %if.end20

if.end20:                                         ; preds = %if.then14, %if.then18
  %formal_list.3 = phi i8* [ %formal_list.0.lcssa, %if.then14 ], [ %call19, %if.then18 ]
  %type = getelementptr inbounds %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 1
  %3 = load %union.tree_node** %type, align 8, !tbaa !17
  %.idx = getelementptr %union.tree_node* %3, i64 0, i32 0, i32 1
  %.idx.val = load i8** %.idx, align 8
  %cond = icmp eq i8* %.idx.val, null
  br i1 %cond, label %if.end27, label %land.rhs.lr.ph.i

land.rhs.lr.ph.i:                                 ; preds = %if.end20
  %4 = bitcast i8* %.idx.val to %union.tree_node*
  %5 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 27), align 8, !tbaa !5
  br label %land.rhs.i

land.rhs.i:                                       ; preds = %while.body.i, %land.rhs.lr.ph.i
  %formal_type.02.i = phi %union.tree_node* [ %4, %land.rhs.lr.ph.i ], [ %8, %while.body.i ]
  %value.i = getelementptr inbounds %union.tree_node* %formal_type.02.i, i64 0, i32 0, i32 2
  %6 = bitcast i32* %value.i to %union.tree_node**
  %7 = load %union.tree_node** %6, align 8, !tbaa !19
  %cmp.i = icmp eq %union.tree_node* %7, %5
  br i1 %cmp.i, label %if.end27, label %while.body.i

while.body.i:                                     ; preds = %land.rhs.i
  %chain.i = getelementptr inbounds %union.tree_node* %formal_type.02.i, i64 0, i32 0, i32 0, i32 0
  %8 = load %union.tree_node** %chain.i, align 8, !tbaa !21
  %tobool.i = icmp eq %union.tree_node* %8, null
  br i1 %tobool.i, label %if.then24, label %land.rhs.i

if.then24:                                        ; preds = %while.body.i
  %call25 = tail call noalias i8* (i8*, ...)* @concat(i8* %formal_list.3, i8* getelementptr inbounds ([6 x i8]* @.str8, i64 0, i64 0), i8* null) #4
  br label %if.end27

if.end27:                                         ; preds = %land.rhs.i, %if.end20, %if.then24, %while.end
  %formal_list.4 = phi i8* [ %call25, %if.then24 ], [ %formal_list.0.lcssa, %while.end ], [ %formal_list.3, %if.end20 ], [ %formal_list.3, %land.rhs.i ]
  %9 = icmp ult i32 %style, 2
  br i1 %9, label %if.then33, label %if.end35

if.then33:                                        ; preds = %if.end27
  %call34 = tail call noalias i8* (i8*, ...)* @concat(i8* getelementptr inbounds ([3 x i8]* @.str9, i64 0, i64 0), i8* %formal_list.4, i8* getelementptr inbounds ([2 x i8]* @.str10, i64 0, i64 0), i8* null) #4
  br label %if.end35

if.end35:                                         ; preds = %if.end27, %if.then33
  %formal_list.5 = phi i8* [ %call34, %if.then33 ], [ %formal_list.4, %if.end27 ]
  ret i8* %formal_list.5
}

declare noalias i8* @concat(i8*, ...) #2

; Function Attrs: nounwind uwtable
define internal fastcc i8* @gen_type(i8* %ret_val, %union.tree_node* %t, i32 %style) #0 {
entry:
  %buff = alloca [10 x i8], align 1
  %type = bitcast %union.tree_node* %t to %struct.tree_type*
  %0 = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 11
  %1 = load %union.tree_node** %0, align 8, !tbaa !22
  %tobool = icmp eq %union.tree_node* %1, null
  br i1 %tobool, label %if.else, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %code = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 33
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true
  %name5 = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 8
  %2 = load %union.tree_node** %name5, align 8, !tbaa !13
  %id = getelementptr inbounds %union.tree_node* %2, i64 0, i32 0, i32 1
  %3 = getelementptr inbounds i8** %id, i64 1
  %4 = load i8** %3, align 8, !tbaa !14
  store i8* %4, i8** @data_type, align 8, !tbaa !5
  %readonly_flag231.pre = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 0, i32 2
  br label %if.end229

if.else:                                          ; preds = %entry, %land.lhs.true
  %code7 = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 0, i32 2
  %bf.load8 = load i32* %code7, align 8
  %bf.clear9 = and i32 %bf.load8, 255
  switch i32 %bf.clear9, label %sw.default [
    i32 13, label %sw.bb
    i32 18, label %sw.bb44
    i32 23, label %sw.bb82
    i32 1, label %sw.bb88
    i32 20, label %sw.bb92
    i32 21, label %sw.bb112
    i32 10, label %sw.bb137
    i32 33, label %sw.bb167
    i32 6, label %sw.bb173
    i32 7, label %sw.bb219
    i32 5, label %sw.bb227
    i32 0, label %sw.bb228
  ]

sw.bb:                                            ; preds = %if.else
  %bf.clear12 = and i32 %bf.load8, 4096
  %tobool13 = icmp eq i32 %bf.clear12, 0
  br i1 %tobool13, label %if.end, label %if.then14

if.then14:                                        ; preds = %sw.bb
  %call = call noalias i8* (i8*, ...)* @concat(i8* getelementptr inbounds ([7 x i8]* @.str12, i64 0, i64 0), i8* %ret_val, i8* null) #4
  %bf.load16.pre = load i32* %code7, align 8
  br label %if.end

if.end:                                           ; preds = %sw.bb, %if.then14
  %bf.load16 = phi i32 [ %bf.load16.pre, %if.then14 ], [ %bf.load8, %sw.bb ]
  %ret_val.addr.0 = phi i8* [ %call, %if.then14 ], [ %ret_val, %sw.bb ]
  %bf.clear18 = and i32 %bf.load16, 2048
  %tobool19 = icmp eq i32 %bf.clear18, 0
  br i1 %tobool19, label %if.end22, label %if.then20

if.then20:                                        ; preds = %if.end
  %call21 = call noalias i8* (i8*, ...)* @concat(i8* getelementptr inbounds ([10 x i8]* @.str11, i64 0, i64 0), i8* %ret_val.addr.0, i8* null) #4
  br label %if.end22

if.end22:                                         ; preds = %if.end, %if.then20
  %ret_val.addr.1 = phi i8* [ %call21, %if.then20 ], [ %ret_val.addr.0, %if.end ]
  %call23 = call noalias i8* (i8*, ...)* @concat(i8* getelementptr inbounds ([2 x i8]* @.str17, i64 0, i64 0), i8* %ret_val.addr.1, i8* null) #4
  %type25 = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 0, i32 1
  %5 = load %union.tree_node** %type25, align 8, !tbaa !17
  %code27 = getelementptr inbounds %union.tree_node* %5, i64 0, i32 0, i32 0, i32 2
  %bf.load28 = load i32* %code27, align 8
  %bf.clear29 = and i32 %bf.load28, 255
  switch i32 %bf.clear29, label %if.end40 [
    i32 18, label %if.then38
    i32 23, label %if.then38
  ]

if.then38:                                        ; preds = %if.end22, %if.end22
  %call39 = call noalias i8* (i8*, ...)* @concat(i8* getelementptr inbounds ([2 x i8]* @.str18, i64 0, i64 0), i8* %call23, i8* getelementptr inbounds ([2 x i8]* @.str10, i64 0, i64 0), i8* null) #4
  %.pre = load %union.tree_node** %type25, align 8, !tbaa !17
  br label %if.end40

if.end40:                                         ; preds = %if.end22, %if.then38
  %6 = phi %union.tree_node* [ %.pre, %if.then38 ], [ %5, %if.end22 ]
  %ret_val.addr.2 = phi i8* [ %call39, %if.then38 ], [ %call23, %if.end22 ]
  %call43 = call fastcc i8* @gen_type(i8* %ret_val.addr.2, %union.tree_node* %6, i32 %style)
  br label %return

sw.bb44:                                          ; preds = %if.else
  %size = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 2
  %7 = bitcast i32* %size to %union.tree_node**
  %8 = load %union.tree_node** %7, align 8, !tbaa !24
  %cmp46 = icmp eq %union.tree_node* %8, null
  br i1 %cmp46, label %if.then55, label %lor.lhs.false47

lor.lhs.false47:                                  ; preds = %sw.bb44
  %code51 = getelementptr inbounds %union.tree_node* %8, i64 0, i32 0, i32 0, i32 2
  %bf.load52 = load i32* %code51, align 8
  %bf.clear53 = and i32 %bf.load52, 255
  %cmp54 = icmp eq i32 %bf.clear53, 25
  br i1 %cmp54, label %if.else60, label %if.then55

if.then55:                                        ; preds = %lor.lhs.false47, %sw.bb44
  %call56 = call noalias i8* (i8*, ...)* @concat(i8* %ret_val, i8* getelementptr inbounds ([3 x i8]* @.str19, i64 0, i64 0), i8* null) #4
  %type58 = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 0, i32 1
  %9 = load %union.tree_node** %type58, align 8, !tbaa !17
  %call59 = call fastcc i8* @gen_type(i8* %call56, %union.tree_node* %9, i32 %style)
  br label %if.end229

if.else60:                                        ; preds = %lor.lhs.false47
  %call61 = call i64 @int_size_in_bytes(%union.tree_node* %t) #4
  %cmp62 = icmp eq i64 %call61, 0
  br i1 %cmp62, label %if.then63, label %if.else68

if.then63:                                        ; preds = %if.else60
  %call64 = call noalias i8* (i8*, ...)* @concat(i8* %ret_val, i8* getelementptr inbounds ([4 x i8]* @.str20, i64 0, i64 0), i8* null) #4
  %type66 = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 0, i32 1
  %10 = load %union.tree_node** %type66, align 8, !tbaa !17
  %call67 = call fastcc i8* @gen_type(i8* %call64, %union.tree_node* %10, i32 %style)
  br label %if.end229

if.else68:                                        ; preds = %if.else60
  %call70 = call i64 @int_size_in_bytes(%union.tree_node* %t) #4
  %type72 = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 0, i32 1
  %11 = load %union.tree_node** %type72, align 8, !tbaa !17
  %call73 = call i64 @int_size_in_bytes(%union.tree_node* %11) #4
  %div = sdiv i64 %call70, %call73
  %conv = trunc i64 %div to i32
  %arraydecay = getelementptr inbounds [10 x i8]* %buff, i64 0, i64 0
  %call74 = call i32 (i8*, i8*, ...)* @sprintf(i8* %arraydecay, i8* getelementptr inbounds ([5 x i8]* @.str21, i64 0, i64 0), i32 %conv) #4
  %call76 = call noalias i8* (i8*, ...)* @concat(i8* %ret_val, i8* %arraydecay, i8* null) #4
  %12 = load %union.tree_node** %type72, align 8, !tbaa !17
  %call79 = call fastcc i8* @gen_type(i8* %call76, %union.tree_node* %12, i32 %style)
  br label %if.end229

sw.bb82:                                          ; preds = %if.else
  %cmp.i = icmp eq i32 %style, 0
  br i1 %cmp.i, label %if.end.i, label %gen_formal_list_for_type.exit

if.end.i:                                         ; preds = %sw.bb82
  %values.i = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 1
  %13 = load i8** %values.i, align 8
  %tobool.i333 = icmp eq i8* %13, null
  br i1 %tobool.i333, label %land.end.i.thread, label %land.end.i.lr.ph

land.end.i.lr.ph:                                 ; preds = %if.end.i
  %14 = bitcast i8* %13 to %union.tree_node*
  br label %land.end.i

land.end.i.thread:                                ; preds = %cond.end.i, %if.end.i
  %formal_list.0.i.lcssa = phi i8* [ getelementptr inbounds ([1 x i8]* @.str4, i64 0, i64 0), %if.end.i ], [ %cond.i, %cond.end.i ]
  %15 = load i8* %formal_list.0.i.lcssa, align 1, !tbaa !12
  %tobool2.i326 = icmp eq i8 %15, 0
  br i1 %tobool2.i326, label %if.then14.i, label %if.then22.i

land.end.i:                                       ; preds = %cond.end.i, %land.end.i.lr.ph
  %formal_type.0.i335 = phi %union.tree_node* [ %14, %land.end.i.lr.ph ], [ %22, %cond.end.i ]
  %formal_list.0.i334 = phi i8* [ getelementptr inbounds ([1 x i8]* @.str4, i64 0, i64 0), %land.end.i.lr.ph ], [ %cond.i, %cond.end.i ]
  %value.i = getelementptr inbounds %union.tree_node* %formal_type.0.i335, i64 0, i32 0, i32 2
  %16 = bitcast i32* %value.i to %union.tree_node**
  %17 = load %union.tree_node** %16, align 8, !tbaa !19
  %18 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 27), align 8, !tbaa !5
  %cmp1.i = icmp eq %union.tree_node* %17, %18
  %19 = load i8* %formal_list.0.i334, align 1, !tbaa !12
  %tobool2.i = icmp ne i8 %19, 0
  br i1 %cmp1.i, label %while.end.i, label %while.body.i

while.body.i:                                     ; preds = %land.end.i
  br i1 %tobool2.i, label %if.then3.i, label %if.end4.i

if.then3.i:                                       ; preds = %while.body.i
  %call.i = call noalias i8* (i8*, ...)* @concat(i8* %formal_list.0.i334, i8* getelementptr inbounds ([3 x i8]* @.str5, i64 0, i64 0), i8* null) #4
  %.pre351 = load %union.tree_node** %16, align 8, !tbaa !19
  br label %if.end4.i

if.end4.i:                                        ; preds = %if.then3.i, %while.body.i
  %20 = phi %union.tree_node* [ %.pre351, %if.then3.i ], [ %17, %while.body.i ]
  %formal_list.1.i = phi i8* [ %call.i, %if.then3.i ], [ %formal_list.0.i334, %while.body.i ]
  %call7.i = call fastcc i8* @gen_type(i8* getelementptr inbounds ([1 x i8]* @.str4, i64 0, i64 0), %union.tree_node* %20, i32 0) #4
  %strlenfirst.i = load i8* %call7.i, align 1
  %tobool9.i = icmp eq i8 %strlenfirst.i, 0
  br i1 %tobool9.i, label %cond.false.i, label %cond.true.i

cond.true.i:                                      ; preds = %if.end4.i
  %call10.i = call fastcc noalias i8* @affix_data_type(i8* %call7.i) #4
  %call11.i = call noalias i8* (i8*, ...)* @concat(i8* %formal_list.1.i, i8* %call10.i, i8* null) #4
  br label %cond.end.i

cond.false.i:                                     ; preds = %if.end4.i
  %21 = load i8** @data_type, align 8, !tbaa !5
  %call12.i = call noalias i8* (i8*, ...)* @concat(i8* %formal_list.1.i, i8* %21, i8* null) #4
  br label %cond.end.i

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i8* [ %call11.i, %cond.true.i ], [ %call12.i, %cond.false.i ]
  %chain.i = getelementptr inbounds %union.tree_node* %formal_type.0.i335, i64 0, i32 0, i32 0, i32 0
  %22 = load %union.tree_node** %chain.i, align 8, !tbaa !21
  %tobool.i = icmp eq %union.tree_node* %22, null
  br i1 %tobool.i, label %land.end.i.thread, label %land.end.i

while.end.i:                                      ; preds = %land.end.i
  br i1 %tobool2.i, label %if.end25.i, label %if.then14.i

if.then14.i:                                      ; preds = %land.end.i.thread, %while.end.i
  %23 = load i8** %values.i, align 8
  %tobool17.i = icmp eq i8* %23, null
  %..i = select i1 %tobool17.i, i8* getelementptr inbounds ([10 x i8]* @.str33, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str7, i64 0, i64 0)
  br label %if.end25.i

if.then22.i:                                      ; preds = %land.end.i.thread
  %call23.i = call noalias i8* (i8*, ...)* @concat(i8* %formal_list.0.i.lcssa, i8* getelementptr inbounds ([6 x i8]* @.str8, i64 0, i64 0), i8* null) #4
  br label %if.end25.i

if.end25.i:                                       ; preds = %while.end.i, %if.then22.i, %if.then14.i
  %formal_list.2.i = phi i8* [ %call23.i, %if.then22.i ], [ %..i, %if.then14.i ], [ %formal_list.0.i334, %while.end.i ]
  %call26.i = call noalias i8* (i8*, ...)* @concat(i8* getelementptr inbounds ([3 x i8]* @.str9, i64 0, i64 0), i8* %formal_list.2.i, i8* getelementptr inbounds ([2 x i8]* @.str10, i64 0, i64 0), i8* null) #4
  br label %gen_formal_list_for_type.exit

gen_formal_list_for_type.exit:                    ; preds = %sw.bb82, %if.end25.i
  %retval.0.i = phi i8* [ %call26.i, %if.end25.i ], [ getelementptr inbounds ([3 x i8]* @.str32, i64 0, i64 0), %sw.bb82 ]
  %call84 = call noalias i8* (i8*, ...)* @concat(i8* %ret_val, i8* %retval.0.i, i8* null) #4
  %type86 = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 0, i32 1
  %24 = load %union.tree_node** %type86, align 8, !tbaa !17
  %call87 = call fastcc i8* @gen_type(i8* %call84, %union.tree_node* %24, i32 %style)
  br label %if.end229

sw.bb88:                                          ; preds = %if.else
  %id90 = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 1
  %25 = getelementptr inbounds i8** %id90, i64 1
  %26 = load i8** %25, align 8, !tbaa !14
  store i8* %26, i8** @data_type, align 8, !tbaa !5
  br label %if.end229

sw.bb92:                                          ; preds = %if.else
  br i1 %tobool, label %if.else102, label %if.then96

if.then96:                                        ; preds = %sw.bb92
  %id100 = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 1
  %27 = getelementptr inbounds i8** %id100, i64 1
  %28 = load i8** %27, align 8, !tbaa !14
  br label %if.end110

if.else102:                                       ; preds = %sw.bb92
  store i8* getelementptr inbounds ([1 x i8]* @.str4, i64 0, i64 0), i8** @data_type, align 8, !tbaa !5
  %values = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 1
  %29 = load i8** %values, align 8
  %tobool104337 = icmp eq i8* %29, null
  br i1 %tobool104337, label %while.end, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %if.else102
  %30 = bitcast i8* %29 to %union.tree_node*
  br label %while.body

while.body:                                       ; preds = %while.body.lr.ph, %while.body
  %31 = phi i8* [ getelementptr inbounds ([1 x i8]* @.str4, i64 0, i64 0), %while.body.lr.ph ], [ %call108, %while.body ]
  %chain_p.0338 = phi %union.tree_node* [ %30, %while.body.lr.ph ], [ %32, %while.body ]
  %call105 = call fastcc i8* @gen_decl(%union.tree_node* %chain_p.0338, i32 0, i32 0)
  %call106 = call noalias i8* (i8*, ...)* @concat(i8* %31, i8* %call105, i8* null) #4
  store i8* %call106, i8** @data_type, align 8, !tbaa !5
  %chain = getelementptr inbounds %union.tree_node* %chain_p.0338, i64 0, i32 0, i32 0, i32 0
  %32 = load %union.tree_node** %chain, align 8, !tbaa !21
  %call108 = call noalias i8* (i8*, ...)* @concat(i8* %call106, i8* getelementptr inbounds ([3 x i8]* @.str6, i64 0, i64 0), i8* null) #4
  store i8* %call108, i8** @data_type, align 8, !tbaa !5
  %tobool104 = icmp eq %union.tree_node* %32, null
  br i1 %tobool104, label %while.end, label %while.body

while.end:                                        ; preds = %while.body, %if.else102
  %.lcssa = phi i8* [ getelementptr inbounds ([1 x i8]* @.str4, i64 0, i64 0), %if.else102 ], [ %call108, %while.body ]
  %call109 = call noalias i8* (i8*, ...)* @concat(i8* getelementptr inbounds ([3 x i8]* @.str22, i64 0, i64 0), i8* %.lcssa, i8* getelementptr inbounds ([2 x i8]* @.str23, i64 0, i64 0), i8* null) #4
  br label %if.end110

if.end110:                                        ; preds = %while.end, %if.then96
  %storemerge325 = phi i8* [ %call109, %while.end ], [ %28, %if.then96 ]
  store i8* %storemerge325, i8** @data_type, align 8, !tbaa !5
  %call111 = call noalias i8* (i8*, ...)* @concat(i8* getelementptr inbounds ([8 x i8]* @.str24, i64 0, i64 0), i8* %storemerge325, i8* null) #4
  store i8* %call111, i8** @data_type, align 8, !tbaa !5
  br label %if.end229

sw.bb112:                                         ; preds = %if.else
  br i1 %tobool, label %if.else122, label %if.then116

if.then116:                                       ; preds = %sw.bb112
  %id120 = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 1
  %33 = getelementptr inbounds i8** %id120, i64 1
  %34 = load i8** %33, align 8, !tbaa !14
  br label %if.end135

if.else122:                                       ; preds = %sw.bb112
  store i8* getelementptr inbounds ([1 x i8]* @.str4, i64 0, i64 0), i8** @data_type, align 8, !tbaa !5
  %values124 = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 1
  %35 = load i8** %values124, align 8
  %tobool126340 = icmp eq i8* %35, null
  br i1 %tobool126340, label %while.end133, label %while.body127.lr.ph

while.body127.lr.ph:                              ; preds = %if.else122
  %36 = bitcast i8* %35 to %union.tree_node*
  br label %while.body127

while.body127:                                    ; preds = %while.body127.lr.ph, %while.body127
  %37 = phi i8* [ getelementptr inbounds ([1 x i8]* @.str4, i64 0, i64 0), %while.body127.lr.ph ], [ %call132, %while.body127 ]
  %chain_p.1341 = phi %union.tree_node* [ %36, %while.body127.lr.ph ], [ %38, %while.body127 ]
  %call128 = call fastcc i8* @gen_decl(%union.tree_node* %chain_p.1341, i32 0, i32 0)
  %call129 = call noalias i8* (i8*, ...)* @concat(i8* %37, i8* %call128, i8* null) #4
  store i8* %call129, i8** @data_type, align 8, !tbaa !5
  %chain131 = getelementptr inbounds %union.tree_node* %chain_p.1341, i64 0, i32 0, i32 0, i32 0
  %38 = load %union.tree_node** %chain131, align 8, !tbaa !21
  %call132 = call noalias i8* (i8*, ...)* @concat(i8* %call129, i8* getelementptr inbounds ([3 x i8]* @.str6, i64 0, i64 0), i8* null) #4
  store i8* %call132, i8** @data_type, align 8, !tbaa !5
  %tobool126 = icmp eq %union.tree_node* %38, null
  br i1 %tobool126, label %while.end133, label %while.body127

while.end133:                                     ; preds = %while.body127, %if.else122
  %.lcssa331 = phi i8* [ getelementptr inbounds ([1 x i8]* @.str4, i64 0, i64 0), %if.else122 ], [ %call132, %while.body127 ]
  %call134 = call noalias i8* (i8*, ...)* @concat(i8* getelementptr inbounds ([3 x i8]* @.str22, i64 0, i64 0), i8* %.lcssa331, i8* getelementptr inbounds ([2 x i8]* @.str23, i64 0, i64 0), i8* null) #4
  br label %if.end135

if.end135:                                        ; preds = %while.end133, %if.then116
  %storemerge324 = phi i8* [ %call134, %while.end133 ], [ %34, %if.then116 ]
  store i8* %storemerge324, i8** @data_type, align 8, !tbaa !5
  %call136 = call noalias i8* (i8*, ...)* @concat(i8* getelementptr inbounds ([7 x i8]* @.str25, i64 0, i64 0), i8* %storemerge324, i8* null) #4
  store i8* %call136, i8** @data_type, align 8, !tbaa !5
  br label %if.end229

sw.bb137:                                         ; preds = %if.else
  br i1 %tobool, label %if.else147, label %if.then141

if.then141:                                       ; preds = %sw.bb137
  %id145 = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 1
  %39 = getelementptr inbounds i8** %id145, i64 1
  %40 = load i8** %39, align 8, !tbaa !14
  br label %if.end165

if.else147:                                       ; preds = %sw.bb137
  store i8* getelementptr inbounds ([1 x i8]* @.str4, i64 0, i64 0), i8** @data_type, align 8, !tbaa !5
  %values149 = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 1
  %41 = load i8** %values149, align 8
  %tobool151343 = icmp eq i8* %41, null
  br i1 %tobool151343, label %while.end163, label %while.body152.lr.ph

while.body152.lr.ph:                              ; preds = %if.else147
  %42 = bitcast i8* %41 to %union.tree_node*
  br label %while.body152

while.body152:                                    ; preds = %while.cond150.backedge, %while.body152.lr.ph
  %43 = phi i8* [ getelementptr inbounds ([1 x i8]* @.str4, i64 0, i64 0), %while.body152.lr.ph ], [ %call161, %while.cond150.backedge ]
  %chain_p.2344 = phi %union.tree_node* [ %42, %while.body152.lr.ph ], [ %47, %while.cond150.backedge ]
  %purpose = getelementptr inbounds %union.tree_node* %chain_p.2344, i64 0, i32 0, i32 1
  %44 = load i8** %purpose, align 8
  %str155 = getelementptr inbounds i8* %44, i64 32
  %45 = bitcast i8* %str155 to i8**
  %46 = load i8** %45, align 8, !tbaa !14
  %call156 = call noalias i8* (i8*, ...)* @concat(i8* %43, i8* %46, i8* null) #4
  store i8* %call156, i8** @data_type, align 8, !tbaa !5
  %chain158 = getelementptr inbounds %union.tree_node* %chain_p.2344, i64 0, i32 0, i32 0, i32 0
  %47 = load %union.tree_node** %chain158, align 8, !tbaa !21
  %tobool159 = icmp eq %union.tree_node* %47, null
  br i1 %tobool159, label %while.end163, label %while.cond150.backedge

while.cond150.backedge:                           ; preds = %while.body152
  %call161 = call noalias i8* (i8*, ...)* @concat(i8* %call156, i8* getelementptr inbounds ([3 x i8]* @.str5, i64 0, i64 0), i8* null) #4
  store i8* %call161, i8** @data_type, align 8, !tbaa !5
  br label %while.body152

while.end163:                                     ; preds = %while.body152, %if.else147
  %.lcssa332 = phi i8* [ getelementptr inbounds ([1 x i8]* @.str4, i64 0, i64 0), %if.else147 ], [ %call156, %while.body152 ]
  %call164 = call noalias i8* (i8*, ...)* @concat(i8* getelementptr inbounds ([3 x i8]* @.str22, i64 0, i64 0), i8* %.lcssa332, i8* getelementptr inbounds ([3 x i8]* @.str26, i64 0, i64 0), i8* null) #4
  br label %if.end165

if.end165:                                        ; preds = %while.end163, %if.then141
  %storemerge = phi i8* [ %call164, %while.end163 ], [ %40, %if.then141 ]
  store i8* %storemerge, i8** @data_type, align 8, !tbaa !5
  %call166 = call noalias i8* (i8*, ...)* @concat(i8* getelementptr inbounds ([6 x i8]* @.str27, i64 0, i64 0), i8* %storemerge, i8* null) #4
  store i8* %call166, i8** @data_type, align 8, !tbaa !5
  br label %if.end229

sw.bb167:                                         ; preds = %if.else
  %name169 = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 8
  %48 = load %union.tree_node** %name169, align 8, !tbaa !13
  %id171 = getelementptr inbounds %union.tree_node* %48, i64 0, i32 0, i32 1
  %49 = getelementptr inbounds i8** %id171, i64 1
  %50 = load i8** %49, align 8, !tbaa !14
  store i8* %50, i8** @data_type, align 8, !tbaa !5
  br label %if.end229

sw.bb173:                                         ; preds = %if.else
  %name177 = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 8
  %51 = load %union.tree_node** %name177, align 8, !tbaa !13
  %id179 = getelementptr inbounds %union.tree_node* %51, i64 0, i32 0, i32 1
  %52 = getelementptr inbounds i8** %id179, i64 1
  %53 = load i8** %52, align 8, !tbaa !14
  store i8* %53, i8** @data_type, align 8, !tbaa !5
  %bf.load182 = load i32* %code7, align 8
  %bf.clear184 = and i32 %bf.load182, 8192
  %tobool185 = icmp eq i32 %bf.clear184, 0
  br i1 %tobool185, label %if.end229, label %land.lhs.true186

land.lhs.true186:                                 ; preds = %sw.bb173
  %bf.lshr190 = lshr i32 %bf.load182, 12
  %bf.clear191 = and i32 %bf.lshr190, 1
  %54 = lshr i32 %bf.load182, 10
  %mul197 = and i32 %54, 2
  %or = or i32 %bf.clear191, %mul197
  %restrict_flag = getelementptr inbounds %struct.tree_type* %type, i64 0, i32 6
  %bf.load199 = load i32* %restrict_flag, align 4
  %55 = lshr i32 %bf.load199, 19
  %mul202 = and i32 %55, 4
  %or203 = or i32 %or, %mul202
  %bf.clear207 = and i32 %bf.load182, 255
  %cmp208 = icmp eq i32 %bf.clear207, 20
  br i1 %cmp208, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true186
  %type211 = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 0, i32 1
  %56 = load %union.tree_node** %type211, align 8, !tbaa !17
  %tobool212 = icmp ne %union.tree_node* %56, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true186
  %57 = phi i1 [ false, %land.lhs.true186 ], [ %tobool212, %land.rhs ]
  %land.ext = zext i1 %57 to i32
  %mul213 = shl nuw nsw i32 %land.ext, 3
  %or214 = or i32 %or203, %mul213
  %tobool215 = icmp eq i32 %or214, 0
  br i1 %tobool215, label %if.end229, label %if.then216

if.then216:                                       ; preds = %land.end
  %call217 = call noalias i8* (i8*, ...)* @concat(i8* getelementptr inbounds ([10 x i8]* @.str28, i64 0, i64 0), i8* %53, i8* null) #4
  store i8* %call217, i8** @data_type, align 8, !tbaa !5
  br label %if.end229

sw.bb219:                                         ; preds = %if.else
  %name223 = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 8
  %58 = load %union.tree_node** %name223, align 8, !tbaa !13
  %id225 = getelementptr inbounds %union.tree_node* %58, i64 0, i32 0, i32 1
  %59 = getelementptr inbounds i8** %id225, i64 1
  %60 = load i8** %59, align 8, !tbaa !14
  store i8* %60, i8** @data_type, align 8, !tbaa !5
  br label %if.end229

sw.bb227:                                         ; preds = %if.else
  store i8* getelementptr inbounds ([5 x i8]* @.str7, i64 0, i64 0), i8** @data_type, align 8, !tbaa !5
  br label %if.end229

sw.bb228:                                         ; preds = %if.else
  store i8* getelementptr inbounds ([8 x i8]* @.str29, i64 0, i64 0), i8** @data_type, align 8, !tbaa !5
  br label %if.end229

sw.default:                                       ; preds = %if.else
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8]* @.str30, i64 0, i64 0), i32 471, i8* getelementptr inbounds ([9 x i8]* @__FUNCTION__.gen_type, i64 0, i64 0)) #6
  unreachable

if.end229:                                        ; preds = %land.end, %sw.bb173, %gen_formal_list_for_type.exit, %sw.bb88, %if.end110, %if.end135, %if.end165, %sw.bb167, %sw.bb219, %sw.bb227, %sw.bb228, %if.then63, %if.else68, %if.then55, %if.then216, %if.then
  %readonly_flag231.pre-phi = phi i32* [ %code7, %land.end ], [ %code7, %sw.bb173 ], [ %code7, %gen_formal_list_for_type.exit ], [ %code7, %sw.bb88 ], [ %code7, %if.end110 ], [ %code7, %if.end135 ], [ %code7, %if.end165 ], [ %code7, %sw.bb167 ], [ %code7, %sw.bb219 ], [ %code7, %sw.bb227 ], [ %code7, %sw.bb228 ], [ %code7, %if.then63 ], [ %code7, %if.else68 ], [ %code7, %if.then55 ], [ %code7, %if.then216 ], [ %readonly_flag231.pre, %if.then ]
  %ret_val.addr.3 = phi i8* [ %ret_val, %land.end ], [ %ret_val, %sw.bb173 ], [ %call87, %gen_formal_list_for_type.exit ], [ %ret_val, %sw.bb88 ], [ %ret_val, %if.end110 ], [ %ret_val, %if.end135 ], [ %ret_val, %if.end165 ], [ %ret_val, %sw.bb167 ], [ %ret_val, %sw.bb219 ], [ %ret_val, %sw.bb227 ], [ %ret_val, %sw.bb228 ], [ %call67, %if.then63 ], [ %call79, %if.else68 ], [ %call59, %if.then55 ], [ %ret_val, %if.then216 ], [ %ret_val, %if.then ]
  %bf.load232 = load i32* %readonly_flag231.pre-phi, align 8
  %bf.clear234 = and i32 %bf.load232, 4096
  %tobool235 = icmp eq i32 %bf.clear234, 0
  br i1 %tobool235, label %if.end238, label %if.then236

if.then236:                                       ; preds = %if.end229
  %call237 = call noalias i8* (i8*, ...)* @concat(i8* getelementptr inbounds ([7 x i8]* @.str12, i64 0, i64 0), i8* %ret_val.addr.3, i8* null) #4
  %bf.load241.pre = load i32* %readonly_flag231.pre-phi, align 8
  br label %if.end238

if.end238:                                        ; preds = %if.end229, %if.then236
  %bf.load241 = phi i32 [ %bf.load241.pre, %if.then236 ], [ %bf.load232, %if.end229 ]
  %ret_val.addr.4 = phi i8* [ %call237, %if.then236 ], [ %ret_val.addr.3, %if.end229 ]
  %bf.clear243 = and i32 %bf.load241, 2048
  %tobool244 = icmp eq i32 %bf.clear243, 0
  br i1 %tobool244, label %if.end247, label %if.then245

if.then245:                                       ; preds = %if.end238
  %call246 = call noalias i8* (i8*, ...)* @concat(i8* getelementptr inbounds ([10 x i8]* @.str11, i64 0, i64 0), i8* %ret_val.addr.4, i8* null) #4
  br label %if.end247

if.end247:                                        ; preds = %if.end238, %if.then245
  %ret_val.addr.5 = phi i8* [ %call246, %if.then245 ], [ %ret_val.addr.4, %if.end238 ]
  %restrict_flag249 = getelementptr inbounds %struct.tree_type* %type, i64 0, i32 6
  %bf.load250 = load i32* %restrict_flag249, align 4
  %bf.clear252 = and i32 %bf.load250, 2097152
  %tobool253 = icmp eq i32 %bf.clear252, 0
  br i1 %tobool253, label %return, label %if.then254

if.then254:                                       ; preds = %if.end247
  %call255 = call noalias i8* (i8*, ...)* @concat(i8* getelementptr inbounds ([10 x i8]* @.str31, i64 0, i64 0), i8* %ret_val.addr.5, i8* null) #4
  br label %return

return:                                           ; preds = %if.then254, %if.end247, %if.end40
  %retval.0 = phi i8* [ %call43, %if.end40 ], [ %call255, %if.then254 ], [ %ret_val.addr.5, %if.end247 ]
  ret i8* %retval.0
}

; Function Attrs: nounwind uwtable
define internal fastcc noalias i8* @affix_data_type(i8* %param) #0 {
entry:
  store i8* %param, i8** @libiberty_optr, align 8, !tbaa !5
  %call = call i64 @strlen(i8* %param) #4
  %add = add i64 %call, 1
  store i64 %add, i64* @libiberty_len, align 8, !tbaa !25
  %0 = alloca i8, i64 %add, align 1
  store i8* %0, i8** @libiberty_nptr, align 8, !tbaa !5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %param, i64 %add, i32 1, i1 false)
  br label %for.cond

for.cond:                                         ; preds = %if.then4, %if.then, %entry
  %p.0 = phi i8* [ %0, %entry ], [ %add.ptr5, %if.then4 ], [ %add.ptr, %if.then ]
  %call1 = call i32 @strncmp(i8* %p.0, i8* getelementptr inbounds ([10 x i8]* @.str11, i64 0, i64 0), i64 9) #4
  %tobool = icmp eq i32 %call1, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %for.cond
  %add.ptr = getelementptr inbounds i8* %p.0, i64 9
  br label %for.cond

if.end:                                           ; preds = %for.cond
  %call2 = call i32 @strncmp(i8* %p.0, i8* getelementptr inbounds ([7 x i8]* @.str12, i64 0, i64 0), i64 6) #4
  %tobool3 = icmp eq i32 %call2, 0
  br i1 %tobool3, label %if.then4, label %for.end

if.then4:                                         ; preds = %if.end
  %add.ptr5 = getelementptr inbounds i8* %p.0, i64 6
  br label %for.cond

for.end:                                          ; preds = %if.end
  %cmp = icmp eq i8* %p.0, %0
  br i1 %cmp, label %if.then7, label %if.end9

if.then7:                                         ; preds = %for.end
  %1 = load i8** @data_type, align 8, !tbaa !5
  %call8 = call noalias i8* (i8*, ...)* @concat(i8* %1, i8* getelementptr inbounds ([2 x i8]* @.str16, i64 0, i64 0), i8* %0, i8* null) #4
  br label %return

if.end9:                                          ; preds = %for.end
  %2 = load i8* %p.0, align 1, !tbaa !12
  store i8 0, i8* %p.0, align 1, !tbaa !12
  %3 = load i8** @data_type, align 8, !tbaa !5
  %call10 = call noalias i8* (i8*, ...)* @concat(i8* %0, i8* %3, i8* null) #4
  store i8 %2, i8* %p.0, align 1, !tbaa !12
  %call11 = call noalias i8* (i8*, i8*, ...)* @reconcat(i8* %call10, i8* %call10, i8* getelementptr inbounds ([2 x i8]* @.str16, i64 0, i64 0), i8* %p.0, i8* null) #4
  br label %return

return:                                           ; preds = %if.end9, %if.then7
  %retval.0 = phi i8* [ %call8, %if.then7 ], [ %call11, %if.end9 ]
  ret i8* %retval.0
}

; Function Attrs: nounwind readonly
declare i64 @strlen(i8* nocapture) #3

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #4

; Function Attrs: nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) #3

declare noalias i8* @reconcat(i8*, i8*, ...) #2

declare i64 @int_size_in_bytes(%union.tree_node*) #2

; Function Attrs: nounwind
declare i32 @sprintf(i8* nocapture, i8* nocapture readonly, ...) #1

; Function Attrs: noreturn
declare void @fancy_abort(i8*, i32, i8*) #5

; Function Attrs: nounwind
declare i64 @fwrite(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) #4

; Function Attrs: nounwind
declare i32 @fputc(i32, %struct._IO_FILE* nocapture) #4

attributes #0 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { noreturn "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind }

!llvm.ident = !{!0}

!0 = metadata !{metadata !"clang version 3.5 (trunk)"}
!1 = metadata !{metadata !2, metadata !2, i64 0}
!2 = metadata !{metadata !"int", metadata !3, i64 0}
!3 = metadata !{metadata !"omnipotent char", metadata !4, i64 0}
!4 = metadata !{metadata !"Simple C/C++ TBAA"}
!5 = metadata !{metadata !6, metadata !6, i64 0}
!6 = metadata !{metadata !"any pointer", metadata !3, i64 0}
!7 = metadata !{metadata !8, metadata !6, i64 24}
!8 = metadata !{metadata !"tree_decl", metadata !9, i64 0, metadata !6, i64 24, metadata !2, i64 32, metadata !2, i64 36, metadata !6, i64 40, metadata !3, i64 48, metadata !2, i64 49, metadata !2, i64 49, metadata !2, i64 49, metadata !2, i64 49, metadata !2, i64 49, metadata !2, i64 49, metadata !2, i64 49, metadata !2, i64 49, metadata !2, i64 50, metadata !2, i64 50, metadata !2, i64 50, metadata !2, i64 50, metadata !2, i64 50, metadata !2, i64 50, metadata !2, i64 50, metadata !2, i64 50, metadata !2, i64 51, metadata !2, i64 51, metadata !2, i64 51, metadata !2, i64 51, metadata !2, i64 51, metadata !3, i64 51, metadata !2, i64 51, metadata !2, i64 52, metadata !2, i64 52, metadata !2, i64 52, metadata !2, i64 52, metadata !2, i64 52, metadata !2, i64 52, metadata !2, i64 52, metadata !2, i64 53, metadata !2, i64 53, metadata !2, i64 53, metadata !2, i64 53, metadata !2, i64 53, metadata !3, i64 56, metadata !6, i64 64, metadata !6, i64 72, metadata !6, i64 80, metadata !6, i64 88, metadata !6, i64 96, metadata !6, i64 104, metadata !6, i64 112, metadata !6, i64 120, metadata !6, i64 128, metadata !6, i64 136, metadata !6, i64 144, metadata !6, i64 152, metadata !3, i64 160, metadata !6, i64 168, metadata !6, i64 176, metadata !6, i64 184, metadata !10, i64 192, metadata !6, i64 200}
!9 = metadata !{metadata !"tree_common", metadata !6, i64 0, metadata !6, i64 8, metadata !3, i64 16, metadata !2, i64 17, metadata !2, i64 17, metadata !2, i64 17, metadata !2, i64 17, metadata !2, i64 17, metadata !2, i64 17, metadata !2, i64 17, metadata !2, i64 17, metadata !2, i64 18, metadata !2, i64 18, metadata !2, i64 18, metadata !2, i64 18, metadata !2, i64 18, metadata !2, i64 18, metadata !2, i64 18, metadata !2, i64 18, metadata !2, i64 19, metadata !2, i64 19, metadata !2, i64 19, metadata !2, i64 19, metadata !2, i64 19, metadata !2, i64 19, metadata !2, i64 19, metadata !2, i64 19}
!10 = metadata !{metadata !"long long", metadata !3, i64 0}
!11 = metadata !{metadata !8, metadata !2, i64 32}
!12 = metadata !{metadata !3, metadata !3, i64 0}
!13 = metadata !{metadata !8, metadata !6, i64 72}
!14 = metadata !{metadata !15, metadata !6, i64 32}
!15 = metadata !{metadata !"tree_identifier", metadata !9, i64 0, metadata !16, i64 24}
!16 = metadata !{metadata !"ht_identifier", metadata !2, i64 0, metadata !6, i64 8}
!17 = metadata !{metadata !9, metadata !6, i64 8}
!18 = metadata !{metadata !8, metadata !6, i64 88}
!19 = metadata !{metadata !20, metadata !6, i64 32}
!20 = metadata !{metadata !"tree_list", metadata !9, i64 0, metadata !6, i64 24, metadata !6, i64 32}
!21 = metadata !{metadata !9, metadata !6, i64 0}
!22 = metadata !{metadata !23, metadata !6, i64 96}
!23 = metadata !{metadata !"tree_type", metadata !9, i64 0, metadata !6, i64 24, metadata !6, i64 32, metadata !6, i64 40, metadata !6, i64 48, metadata !2, i64 56, metadata !2, i64 60, metadata !3, i64 61, metadata !2, i64 62, metadata !2, i64 62, metadata !2, i64 62, metadata !2, i64 62, metadata !2, i64 62, metadata !2, i64 62, metadata !2, i64 62, metadata !2, i64 63, metadata !2, i64 63, metadata !2, i64 63, metadata !2, i64 63, metadata !2, i64 63, metadata !2, i64 63, metadata !2, i64 63, metadata !2, i64 63, metadata !2, i64 64, metadata !6, i64 72, metadata !6, i64 80, metadata !3, i64 88, metadata !6, i64 96, metadata !6, i64 104, metadata !6, i64 112, metadata !6, i64 120, metadata !6, i64 128, metadata !6, i64 136, metadata !6, i64 144, metadata !10, i64 152, metadata !6, i64 160}
!24 = metadata !{metadata !23, metadata !6, i64 32}
!25 = metadata !{metadata !26, metadata !26, i64 0}
!26 = metadata !{metadata !"long", metadata !3, i64 0}
