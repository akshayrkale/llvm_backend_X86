; ModuleID = 'regclass.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.rtx_def = type { i32, [1 x %union.rtunion_def] }
%union.rtunion_def = type { i64 }
%struct.reg_pref = type { i8, i8 }
%struct.costs = type { [25 x i32], i32 }
%struct.varray_head_tag = type { i64, i64, i64, i8*, %union.varray_data_tag }
%union.varray_data_tag = type { [1 x %struct.const_equiv_data] }
%struct.const_equiv_data = type { %struct.rtx_def*, i32 }
%struct.basic_block_def = type { %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %union.tree_node*, %struct.edge_def*, %struct.edge_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, i8*, i32, i32, i64, i32, i32 }
%union.tree_node = type opaque
%struct.edge_def = type { %struct.edge_def*, %struct.edge_def*, %struct.basic_block_def*, %struct.basic_block_def*, %struct.rtx_def*, i8*, i32, i32, i64 }
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32 }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.function = type { %struct.eh_status*, %struct.stmt_status*, %struct.expr_status*, %struct.emit_status*, %struct.varasm_status*, i8*, %union.tree_node*, %struct.function*, i32, i32, i32, i32, %struct.rtx_def*, %struct.ix86_args, %struct.rtx_def*, %struct.rtx_def*, i8*, %struct.initial_value_struct*, i32, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i64, %union.tree_node*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, %struct.rtx_def**, %struct.temp_slot*, i32, i32, i32, %struct.var_refs_queue*, i32, i32, i8*, %union.tree_node*, %struct.rtx_def*, i32, i32, %struct.machine_function*, i32, i32, %struct.language_function*, %struct.rtx_def*, i24 }
%struct.eh_status = type opaque
%struct.stmt_status = type opaque
%struct.expr_status = type { i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def* }
%struct.emit_status = type { i32, i32, %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.sequence_stack*, i32, i32, i8*, i32, i8*, %union.tree_node**, %struct.rtx_def** }
%struct.sequence_stack = type { %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.sequence_stack* }
%struct.varasm_status = type opaque
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.initial_value_struct = type opaque
%struct.temp_slot = type opaque
%struct.var_refs_queue = type { %struct.rtx_def*, i32, i32, %struct.var_refs_queue* }
%struct.machine_function = type opaque
%struct.language_function = type opaque
%struct.reg_info_data = type { %struct.reg_info_data*, i64, i64, i8, [1 x %struct.reg_info_def] }
%struct.reg_info_def = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }
%struct.recog_data = type { [30 x %struct.rtx_def*], [30 x %struct.rtx_def**], [30 x i8*], [30 x i32], [30 x i32], [4 x %struct.rtx_def**], [4 x i8], i8, i8, i8, %struct.rtx_def* }
%struct._IO_FILE = type opaque
%struct.rtvec_def = type { i32, [1 x %struct.rtx_def*] }

@reg_alloc_order = global [53 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 41, i32 42, i32 43, i32 44, i32 45, i32 46, i32 47, i32 48, i32 49, i32 50, i32 51, i32 52], align 16
@reg_class_contents = common global [25 x i64] zeroinitializer, align 16
@int_reg_class_contents = internal unnamed_addr constant [25 x [2 x i32]] [[2 x i32] zeroinitializer, [2 x i32] [i32 1, i32 0], [2 x i32] [i32 2, i32 0], [2 x i32] [i32 4, i32 0], [2 x i32] [i32 8, i32 0], [2 x i32] [i32 16, i32 0], [2 x i32] [i32 32, i32 0], [2 x i32] [i32 3, i32 0], [2 x i32] [i32 15, i32 0], [2 x i32] [i32 1114352, i32 8160], [2 x i32] [i32 127, i32 8160], [2 x i32] [i32 1114367, i32 0], [2 x i32] [i32 1114367, i32 8160], [2 x i32] [i32 256, i32 0], [2 x i32] [i32 512, i32 0], [2 x i32] [i32 65280, i32 0], [2 x i32] [i32 534773760, i32 2088960], [2 x i32] [i32 -536870912, i32 31], [2 x i32] [i32 534774016, i32 2088960], [2 x i32] [i32 534774272, i32 2088960], [2 x i32] [i32 534839040, i32 2088960], [2 x i32] [i32 131071, i32 8160], [2 x i32] [i32 534839551, i32 2097120], [2 x i32] [i32 534904831, i32 2097120], [2 x i32] [i32 -1, i32 2097151]], align 16
@fixed_regs = common global [53 x i8] zeroinitializer, align 16
@initial_fixed_regs = internal unnamed_addr constant [53 x i8] c"\00\00\00\00\00\00\00\03\00\00\00\00\00\00\00\00\03\03\03\03\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01", align 16
@call_used_regs = common global [53 x i8] zeroinitializer, align 16
@initial_call_used_regs = internal unnamed_addr constant [53 x i8] c"\03\03\03\00\02\02\00\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\01\01\01\01\03\03\03\03\03\03\03\03", align 16
@global_regs = common global [53 x i8] zeroinitializer, align 16
@inv_reg_alloc_order = common global [53 x i32] zeroinitializer, align 16
@global_rtl = external global [11 x %struct.rtx_def*]
@top_of_stack = internal global [59 x %struct.rtx_def*] zeroinitializer, align 16
@target_flags = external global i32
@class_narrowest_mode = external constant [9 x i32]
@mode_class = external constant [59 x i32]
@mode_size = external constant [59 x i8]
@mode_wider_mode = external constant [59 x i8]
@fix_register.what_option = internal unnamed_addr constant [2 x [2 x i8*]] [[2 x i8*] [i8* getelementptr inbounds ([11 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8]* @.str1, i32 0, i32 0)], [2 x i8*] [i8* getelementptr inbounds ([15 x i8]* @.str2, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str3, i32 0, i32 0)]], align 16
@.str = private unnamed_addr constant [11 x i8] c"call-saved\00", align 1
@.str1 = private unnamed_addr constant [10 x i8] c"call-used\00", align 1
@.str2 = private unnamed_addr constant [15 x i8] c"no-such-option\00", align 1
@.str3 = private unnamed_addr constant [6 x i8] c"fixed\00", align 1
@.str4 = private unnamed_addr constant [32 x i8] c"can't use '%s' as a %s register\00", align 1
@.str5 = private unnamed_addr constant [26 x i8] c"unknown register name: %s\00", align 1
@no_global_reg_vars = internal unnamed_addr global i1 false
@.str6 = private unnamed_addr constant [55 x i8] c"global register variable follows a function definition\00", align 1
@.str7 = private unnamed_addr constant [48 x i8] c"register used for two global register variables\00", align 1
@.str8 = private unnamed_addr constant [58 x i8] c"call-clobbered register used for global register variable\00", align 1
@call_fixed_regs = common global [53 x i8] zeroinitializer, align 16
@n_non_fixed_regs = common global i32 0, align 4
@fixed_reg_set = common global i64 0, align 8
@call_used_reg_set = common global i64 0, align 8
@call_fixed_reg_set = common global i64 0, align 8
@regs_invalidated_by_call = common global i64 0, align 8
@reg_pref = internal unnamed_addr global %struct.reg_pref* null, align 8
@init_cost = internal unnamed_addr global %struct.costs zeroinitializer, align 16
@costs = internal unnamed_addr global %struct.costs* null, align 8
@flag_expensive_optimizations = external global i32
@.str9 = private unnamed_addr constant [12 x i8] c"\0A\0APass %i\0A\0A\00", align 1
@optimize = external global i32
@frequency = internal unnamed_addr global i32 0, align 4
@n_basic_blocks = external global i32
@basic_block_info = external global %struct.varray_head_tag*
@optimize_size = external global i32
@flag_branch_probabilities = external global i32
@entry_exit_blocks = external global [2 x %struct.basic_block_def]
@reg_pref_buffer = internal unnamed_addr global %struct.reg_pref* null, align 8
@reg_n_info = external global %struct.varray_head_tag*
@cfun = external global %struct.function*
@contains_reg_of_mode = internal unnamed_addr global [25 x [59 x i8]] zeroinitializer, align 16
@reg_class_subunion = common global [25 x [25 x i32]] zeroinitializer, align 16
@reg_class_size = common global [25 x i32] zeroinitializer, align 16
@.str11 = private unnamed_addr constant [8 x i8] c"NO_REGS\00", align 1
@.str12 = private unnamed_addr constant [5 x i8] c"AREG\00", align 1
@.str13 = private unnamed_addr constant [5 x i8] c"DREG\00", align 1
@.str14 = private unnamed_addr constant [5 x i8] c"CREG\00", align 1
@.str15 = private unnamed_addr constant [5 x i8] c"BREG\00", align 1
@.str16 = private unnamed_addr constant [6 x i8] c"SIREG\00", align 1
@.str17 = private unnamed_addr constant [6 x i8] c"DIREG\00", align 1
@.str18 = private unnamed_addr constant [8 x i8] c"AD_REGS\00", align 1
@.str19 = private unnamed_addr constant [7 x i8] c"Q_REGS\00", align 1
@.str20 = private unnamed_addr constant [11 x i8] c"NON_Q_REGS\00", align 1
@.str21 = private unnamed_addr constant [11 x i8] c"INDEX_REGS\00", align 1
@.str22 = private unnamed_addr constant [12 x i8] c"LEGACY_REGS\00", align 1
@.str23 = private unnamed_addr constant [13 x i8] c"GENERAL_REGS\00", align 1
@.str24 = private unnamed_addr constant [11 x i8] c"FP_TOP_REG\00", align 1
@.str25 = private unnamed_addr constant [14 x i8] c"FP_SECOND_REG\00", align 1
@.str26 = private unnamed_addr constant [11 x i8] c"FLOAT_REGS\00", align 1
@.str27 = private unnamed_addr constant [9 x i8] c"SSE_REGS\00", align 1
@.str28 = private unnamed_addr constant [9 x i8] c"MMX_REGS\00", align 1
@.str29 = private unnamed_addr constant [16 x i8] c"FP_TOP_SSE_REGS\00", align 1
@.str30 = private unnamed_addr constant [19 x i8] c"FP_SECOND_SSE_REGS\00", align 1
@.str31 = private unnamed_addr constant [15 x i8] c"FLOAT_SSE_REGS\00", align 1
@.str32 = private unnamed_addr constant [15 x i8] c"FLOAT_INT_REGS\00", align 1
@.str33 = private unnamed_addr constant [13 x i8] c"INT_SSE_REGS\00", align 1
@.str34 = private unnamed_addr constant [19 x i8] c"FLOAT_INT_SSE_REGS\00", align 1
@.str35 = private unnamed_addr constant [9 x i8] c"ALL_REGS\00", align 1
@.str36 = private unnamed_addr constant [14 x i8] c"  Register %i\00", align 1
@.str37 = private unnamed_addr constant [10 x i8] c" pref %s\0A\00", align 1
@.str38 = private unnamed_addr constant [18 x i8] c" pref %s or none\0A\00", align 1
@.str39 = private unnamed_addr constant [19 x i8] c" pref %s, else %s\0A\00", align 1
@reg_n_max = internal unnamed_addr global i32 0, align 4
@regno_allocated = internal unnamed_addr global i64 0, align 8
@.str40 = private unnamed_addr constant [11 x i8] c"reg_n_info\00", align 1
@renumber = internal unnamed_addr global i16* null, align 8
@reg_info_head = internal unnamed_addr global %struct.reg_info_data* null, align 8
@reg_renumber = external global i16*
@max_parallel = common global i32 0, align 4
@max_set_parallel = internal unnamed_addr global i32 0, align 4
@losing_caller_save_reg_set = common global i64 0, align 8
@reg_class_superclasses = common global [25 x [25 x i32]] zeroinitializer, align 16
@reg_class_subclasses = common global [25 x [25 x i32]] zeroinitializer, align 16
@reg_class_superunion = common global [25 x [25 x i32]] zeroinitializer, align 16
@reg_raw_mode = common global [53 x i32] zeroinitializer, align 16
@rtx_format = external constant [153 x i8*]
@rtx_length = external constant [153 x i8]
@dump_regclass.reg_class_names = internal unnamed_addr constant [25 x i8*] [i8* getelementptr inbounds ([8 x i8]* @.str11, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str12, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str13, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str14, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str15, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str16, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str17, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @.str18, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8]* @.str20, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8]* @.str21, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8]* @.str22, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8]* @.str23, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8]* @.str24, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8]* @.str25, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8]* @.str26, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str27, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str28, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8]* @.str29, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8]* @.str30, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8]* @.str31, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8]* @.str32, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8]* @.str33, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8]* @.str34, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str35, i32 0, i32 0)], align 16
@max_regno = external global i32
@.str41 = private unnamed_addr constant [21 x i8] c"  Register %i costs:\00", align 1
@.str42 = private unnamed_addr constant [7 x i8] c" %s:%i\00", align 1
@.str43 = private unnamed_addr constant [9 x i8] c" MEM:%i\0A\00", align 1
@rtx_class = external constant [153 x i8]
@recog_data = external global %struct.recog_data
@x86_partial_reg_stall = external constant i32
@ix86_cpu = external global i32
@may_move_in_cost = internal unnamed_addr global [59 x [25 x [25 x i32]]] zeroinitializer, align 16
@may_move_out_cost = internal unnamed_addr global [59 x [25 x [25 x i32]]] zeroinitializer, align 16
@flag_pic = external global i32
@move_cost = internal unnamed_addr global [59 x [25 x [25 x i32]]] zeroinitializer, align 16
@regclass_map = external constant [53 x i32]
@word_mode = external global i32

; Function Attrs: nounwind uwtable
define void @init_reg_sets() #0 {
entry:
  br label %for.body

for.body:                                         ; preds = %for.inc11, %entry
  %indvars.iv43 = phi i64 [ 0, %entry ], [ %indvars.iv.next44, %for.inc11 ]
  %arrayidx = getelementptr inbounds [25 x i64]* @reg_class_contents, i64 0, i64 %indvars.iv43
  store i64 0, i64* %arrayidx, align 8, !tbaa !1
  br label %for.body3

for.body3:                                        ; preds = %for.inc, %for.body
  %0 = phi i64 [ 0, %for.body ], [ %3, %for.inc ]
  %indvars.iv40 = phi i64 [ 0, %for.body ], [ %indvars.iv.next41, %for.inc ]
  %1 = trunc i64 %indvars.iv40 to i32
  %div = sdiv i32 %1, 32
  %idxprom4 = sext i32 %div to i64
  %arrayidx7 = getelementptr inbounds [25 x [2 x i32]]* @int_reg_class_contents, i64 0, i64 %indvars.iv43, i64 %idxprom4
  %2 = load i32* %arrayidx7, align 4, !tbaa !5
  %rem36 = and i32 %1, 31
  %shl = shl i32 1, %rem36
  %and = and i32 %2, %shl
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %for.inc, label %if.then

if.then:                                          ; preds = %for.body3
  %shl8 = shl i64 1, %indvars.iv40
  %or = or i64 %0, %shl8
  store i64 %or, i64* %arrayidx, align 8, !tbaa !1
  br label %for.inc

for.inc:                                          ; preds = %for.body3, %if.then
  %3 = phi i64 [ %0, %for.body3 ], [ %or, %if.then ]
  %indvars.iv.next41 = add nuw nsw i64 %indvars.iv40, 1
  %exitcond42 = icmp eq i64 %indvars.iv.next41, 53
  br i1 %exitcond42, label %for.inc11, label %for.body3

for.inc11:                                        ; preds = %for.inc
  %indvars.iv.next44 = add nuw nsw i64 %indvars.iv43, 1
  %exitcond45 = icmp eq i64 %indvars.iv.next44, 25
  br i1 %exitcond45, label %for.end13, label %for.body

for.end13:                                        ; preds = %for.inc11
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* getelementptr inbounds ([53 x i8]* @fixed_regs, i64 0, i64 0), i8* getelementptr inbounds ([53 x i8]* @initial_fixed_regs, i64 0, i64 0), i64 53, i32 16, i1 false)
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* getelementptr inbounds ([53 x i8]* @call_used_regs, i64 0, i64 0), i8* getelementptr inbounds ([53 x i8]* @initial_call_used_regs, i64 0, i64 0), i64 53, i32 16, i1 false)
  tail call void @llvm.memset.p0i8.i64(i8* getelementptr inbounds ([53 x i8]* @global_regs, i64 0, i64 0), i8 0, i64 53, i32 16, i1 false)
  br label %for.body16

for.body16:                                       ; preds = %for.body16, %for.end13
  %indvars.iv = phi i64 [ 0, %for.end13 ], [ %indvars.iv.next, %for.body16 ]
  %arrayidx18 = getelementptr inbounds [53 x i32]* @reg_alloc_order, i64 0, i64 %indvars.iv
  %4 = load i32* %arrayidx18, align 4, !tbaa !5
  %idxprom19 = sext i32 %4 to i64
  %arrayidx20 = getelementptr inbounds [53 x i32]* @inv_reg_alloc_order, i64 0, i64 %idxprom19
  %5 = trunc i64 %indvars.iv to i32
  store i32 %5, i32* %arrayidx20, align 4, !tbaa !5
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 53
  br i1 %exitcond, label %for.end23, label %for.body16

for.end23:                                        ; preds = %for.body16
  ret void
}

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #1

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #1

; Function Attrs: nounwind uwtable
define void @init_regs() #0 {
entry:
  %allocatable_regs_of_mode.i = alloca [59 x i8], align 16
  %0 = getelementptr inbounds [59 x i8]* %allocatable_regs_of_mode.i, i64 0, i64 0
  call void @llvm.lifetime.start(i64 59, i8* %0) #1
  %1 = load i32* @target_flags, align 4, !tbaa !5
  %and.i = lshr i32 %1, 25
  %2 = and i32 %and.i, 1
  %3 = add i32 %2, 1
  %broadcast.splatinsert22 = insertelement <4 x i32> undef, i32 %3, i32 0
  %broadcast.splat23 = shufflevector <4 x i32> %broadcast.splatinsert22, <4 x i32> undef, <4 x i32> zeroinitializer
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %entry
  %index = phi i64 [ 0, %entry ], [ %index.next, %vector.body ]
  %4 = getelementptr inbounds [53 x i8]* @fixed_regs, i64 0, i64 %index
  %5 = bitcast i8* %4 to <4 x i8>*
  %wide.load = load <4 x i8>* %5, align 4
  %6 = zext <4 x i8> %wide.load to <4 x i32>
  %7 = and <4 x i32> %6, %broadcast.splat23
  %8 = icmp ne <4 x i32> %7, zeroinitializer
  %9 = zext <4 x i1> %8 to <4 x i8>
  %10 = bitcast i8* %4 to <4 x i8>*
  store <4 x i8> %9, <4 x i8>* %10, align 4
  %11 = getelementptr inbounds [53 x i8]* @call_used_regs, i64 0, i64 %index
  %12 = bitcast i8* %11 to <4 x i8>*
  %wide.load24 = load <4 x i8>* %12, align 4
  %13 = zext <4 x i8> %wide.load24 to <4 x i32>
  %14 = and <4 x i32> %13, %broadcast.splat23
  %15 = icmp ne <4 x i32> %14, zeroinitializer
  %16 = zext <4 x i1> %15 to <4 x i8>
  %17 = bitcast i8* %11 to <4 x i8>*
  store <4 x i8> %16, <4 x i8>* %17, align 4
  %index.next = add i64 %index, 4
  %18 = icmp eq i64 %index.next, 52
  br i1 %18, label %for.body.i, label %vector.body, !llvm.loop !7

for.body.i:                                       ; preds = %vector.body, %for.body.i
  %indvars.iv1045.i = phi i64 [ %indvars.iv.next1046.i, %for.body.i ], [ 52, %vector.body ]
  %arrayidx.i = getelementptr inbounds [53 x i8]* @fixed_regs, i64 0, i64 %indvars.iv1045.i
  %19 = load i8* %arrayidx.i, align 1, !tbaa !10
  %conv901.i = zext i8 %19 to i32
  %and2.i = and i32 %conv901.i, %3
  %cmp3.i = icmp ne i32 %and2.i, 0
  %conv5.i = zext i1 %cmp3.i to i8
  store i8 %conv5.i, i8* %arrayidx.i, align 1, !tbaa !10
  %arrayidx9.i = getelementptr inbounds [53 x i8]* @call_used_regs, i64 0, i64 %indvars.iv1045.i
  %20 = load i8* %arrayidx9.i, align 1, !tbaa !10
  %conv10902.i = zext i8 %20 to i32
  %and14.i = and i32 %conv10902.i, %3
  %cmp15.i = icmp ne i32 %and14.i, 0
  %conv17.i = zext i1 %cmp15.i to i8
  store i8 %conv17.i, i8* %arrayidx9.i, align 1, !tbaa !10
  %indvars.iv.next1046.i = add nuw nsw i64 %indvars.iv1045.i, 1
  %exitcond1047.i = icmp eq i64 %indvars.iv.next1046.i, 53
  br i1 %exitcond1047.i, label %for.end.i, label %for.body.i, !llvm.loop !11

for.end.i:                                        ; preds = %for.body.i
  %and20.i = and i32 %1, 33554432
  %tobool21.i = icmp eq i32 %and20.i, 0
  %21 = load i32* @flag_pic, align 4
  %not.lnot.i = icmp ne i32 %21, 0
  %or.cond.i = and i1 %tobool21.i, %not.lnot.i
  br i1 %or.cond.i, label %lor.end40.i, label %if.end.i

lor.end40.i:                                      ; preds = %for.end.i
  store i8 1, i8* getelementptr inbounds ([53 x i8]* @fixed_regs, i64 0, i64 3), align 1, !tbaa !10
  store i8 1, i8* getelementptr inbounds ([53 x i8]* @call_used_regs, i64 0, i64 3), align 1, !tbaa !10
  br label %if.end.i

if.end.i:                                         ; preds = %lor.end40.i, %for.end.i
  %and44.i = and i32 %1, 16384
  %cmp45.i = icmp eq i32 %and44.i, 0
  br i1 %cmp45.i, label %for.cond49.preheader.i, label %if.end64.i

for.cond49.preheader.i:                           ; preds = %if.end.i
  %22 = load i64* getelementptr inbounds ([25 x i64]* @reg_class_contents, i64 0, i64 17), align 8, !tbaa !1
  br label %for.body52.i

for.body52.i:                                     ; preds = %for.inc61.i, %for.cond49.preheader.i
  %indvars.iv1042.i = phi i64 [ 0, %for.cond49.preheader.i ], [ %indvars.iv.next1043.i, %for.inc61.i ]
  %shl.i = shl i64 1, %indvars.iv1042.i
  %and53.i = and i64 %shl.i, %22
  %tobool54.i = icmp eq i64 %and53.i, 0
  br i1 %tobool54.i, label %for.inc61.i, label %if.then55.i

if.then55.i:                                      ; preds = %for.body52.i
  %arrayidx57.i = getelementptr inbounds [53 x i8]* @call_used_regs, i64 0, i64 %indvars.iv1042.i
  store i8 1, i8* %arrayidx57.i, align 1, !tbaa !10
  %arrayidx59.i = getelementptr inbounds [53 x i8]* @fixed_regs, i64 0, i64 %indvars.iv1042.i
  store i8 1, i8* %arrayidx59.i, align 1, !tbaa !10
  br label %for.inc61.i

for.inc61.i:                                      ; preds = %if.then55.i, %for.body52.i
  %indvars.iv.next1043.i = add nuw nsw i64 %indvars.iv1042.i, 1
  %exitcond1044.i = icmp eq i64 %indvars.iv.next1043.i, 53
  br i1 %exitcond1044.i, label %if.end64.i, label %for.body52.i

if.end64.i:                                       ; preds = %for.inc61.i, %if.end.i
  %and65.i = and i32 %1, 327680
  %cmp66.i = icmp eq i32 %and65.i, 0
  br i1 %cmp66.i, label %for.cond70.preheader.i, label %if.end87.i

for.cond70.preheader.i:                           ; preds = %if.end64.i
  %23 = load i64* getelementptr inbounds ([25 x i64]* @reg_class_contents, i64 0, i64 16), align 16, !tbaa !1
  br label %for.body73.i

for.body73.i:                                     ; preds = %for.inc84.i, %for.cond70.preheader.i
  %indvars.iv1039.i = phi i64 [ 0, %for.cond70.preheader.i ], [ %indvars.iv.next1040.i, %for.inc84.i ]
  %shl75.i = shl i64 1, %indvars.iv1039.i
  %and76.i = and i64 %shl75.i, %23
  %tobool77.i = icmp eq i64 %and76.i, 0
  br i1 %tobool77.i, label %for.inc84.i, label %if.then78.i

if.then78.i:                                      ; preds = %for.body73.i
  %arrayidx80.i = getelementptr inbounds [53 x i8]* @call_used_regs, i64 0, i64 %indvars.iv1039.i
  store i8 1, i8* %arrayidx80.i, align 1, !tbaa !10
  %arrayidx82.i = getelementptr inbounds [53 x i8]* @fixed_regs, i64 0, i64 %indvars.iv1039.i
  store i8 1, i8* %arrayidx82.i, align 1, !tbaa !10
  br label %for.inc84.i

for.inc84.i:                                      ; preds = %if.then78.i, %for.body73.i
  %indvars.iv.next1040.i = add nuw nsw i64 %indvars.iv1039.i, 1
  %exitcond1041.i = icmp eq i64 %indvars.iv.next1040.i, 53
  br i1 %exitcond1041.i, label %if.end87.i, label %for.body73.i

if.end87.i:                                       ; preds = %for.inc84.i, %if.end64.i
  %24 = and i32 %1, 33
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %if.then92.i, label %do.end.i

if.then92.i:                                      ; preds = %if.end87.i
  %26 = load i64* getelementptr inbounds ([25 x i64]* @reg_class_contents, i64 0, i64 15), align 8, !tbaa !1
  br label %for.body97.i

for.body97.i:                                     ; preds = %for.inc108.i, %if.then92.i
  %indvars.iv1036.i = phi i64 [ 0, %if.then92.i ], [ %indvars.iv.next1037.i, %for.inc108.i ]
  %shl99.i = shl i64 1, %indvars.iv1036.i
  %and100.i = and i64 %shl99.i, %26
  %tobool101.i = icmp eq i64 %and100.i, 0
  br i1 %tobool101.i, label %for.inc108.i, label %if.then102.i

if.then102.i:                                     ; preds = %for.body97.i
  %arrayidx104.i = getelementptr inbounds [53 x i8]* @call_used_regs, i64 0, i64 %indvars.iv1036.i
  store i8 1, i8* %arrayidx104.i, align 1, !tbaa !10
  %arrayidx106.i = getelementptr inbounds [53 x i8]* @fixed_regs, i64 0, i64 %indvars.iv1036.i
  store i8 1, i8* %arrayidx106.i, align 1, !tbaa !10
  br label %for.inc108.i

for.inc108.i:                                     ; preds = %if.then102.i, %for.body97.i
  %indvars.iv.next1037.i = add nuw nsw i64 %indvars.iv1036.i, 1
  %exitcond1038.i = icmp eq i64 %indvars.iv.next1037.i, 53
  br i1 %exitcond1038.i, label %do.end.i, label %for.body97.i

do.end.i:                                         ; preds = %for.inc108.i, %if.end87.i
  tail call void @llvm.memset.p0i8.i64(i8* bitcast ([25 x i32]* @reg_class_size to i8*), i8 0, i64 100, i32 16, i1 false) #1
  br label %for.cond116.preheader.i

for.cond116.preheader.i:                          ; preds = %for.inc134.i, %do.end.i
  %indvars.iv1033.i = phi i64 [ 0, %do.end.i ], [ %indvars.iv.next1034.i, %for.inc134.i ]
  %arrayidx121.i = getelementptr inbounds [25 x i64]* @reg_class_contents, i64 0, i64 %indvars.iv1033.i
  %27 = load i64* %arrayidx121.i, align 8, !tbaa !1
  %arrayidx128.i = getelementptr inbounds [25 x i32]* @reg_class_size, i64 0, i64 %indvars.iv1033.i
  br label %for.body119.i

for.body119.i:                                    ; preds = %for.inc131.i, %for.cond116.preheader.i
  %indvars.iv1030.i = phi i64 [ 0, %for.cond116.preheader.i ], [ %indvars.iv.next1031.i, %for.inc131.i ]
  %shl123.i = shl i64 1, %indvars.iv1030.i
  %and124.i = and i64 %shl123.i, %27
  %tobool125.i = icmp eq i64 %and124.i, 0
  br i1 %tobool125.i, label %for.inc131.i, label %if.then126.i

if.then126.i:                                     ; preds = %for.body119.i
  %28 = load i32* %arrayidx128.i, align 4, !tbaa !5
  %inc129.i = add i32 %28, 1
  store i32 %inc129.i, i32* %arrayidx128.i, align 4, !tbaa !5
  br label %for.inc131.i

for.inc131.i:                                     ; preds = %if.then126.i, %for.body119.i
  %indvars.iv.next1031.i = add nuw nsw i64 %indvars.iv1030.i, 1
  %exitcond1032.i = icmp eq i64 %indvars.iv.next1031.i, 53
  br i1 %exitcond1032.i, label %for.inc134.i, label %for.body119.i

for.inc134.i:                                     ; preds = %for.inc131.i
  %indvars.iv.next1034.i = add nuw nsw i64 %indvars.iv1033.i, 1
  %exitcond1035.i = icmp eq i64 %indvars.iv.next1034.i, 25
  br i1 %exitcond1035.i, label %for.cond141.preheader.i, label %for.cond116.preheader.i

for.cond141.preheader.i:                          ; preds = %for.inc134.i, %for.inc184.i
  %indvars.iv1027.i = phi i64 [ %indvars.iv.next1028.i, %for.inc184.i ], [ 0, %for.inc134.i ]
  %arrayidx146.i = getelementptr inbounds [25 x i64]* @reg_class_contents, i64 0, i64 %indvars.iv1027.i
  %29 = load i64* %arrayidx146.i, align 8, !tbaa !1
  br label %for.body144.i

for.body144.i:                                    ; preds = %for.inc181.i, %for.cond141.preheader.i
  %indvars.iv1024.i = phi i64 [ 0, %for.cond141.preheader.i ], [ %indvars.iv.next1025.i, %for.inc181.i ]
  %arrayidx148.i = getelementptr inbounds [25 x i64]* @reg_class_contents, i64 0, i64 %indvars.iv1024.i
  %30 = load i64* %arrayidx148.i, align 8, !tbaa !1
  %or.i = or i64 %30, %29
  %neg.i = xor i64 %or.i, -1
  %arrayidx165.i = getelementptr inbounds [25 x [25 x i32]]* @reg_class_subunion, i64 0, i64 %indvars.iv1027.i, i64 %indvars.iv1024.i
  br label %for.body152.i

for.body152.i:                                    ; preds = %for.inc178.i, %for.body144.i
  %indvars.iv1021.i = phi i64 [ 0, %for.body144.i ], [ %indvars.iv.next1022.i, %for.inc178.i ]
  %arrayidx154.i = getelementptr inbounds [25 x i64]* @reg_class_contents, i64 0, i64 %indvars.iv1021.i
  %31 = load i64* %arrayidx154.i, align 8, !tbaa !1
  %and155.i = and i64 %31, %neg.i
  %cmp156.i = icmp eq i64 %and155.i, 0
  br i1 %cmp156.i, label %subclass1.i, label %for.inc178.i

subclass1.i:                                      ; preds = %for.body152.i
  %32 = load i32* %arrayidx165.i, align 4, !tbaa !10
  %idxprom166.i = sext i32 %32 to i64
  %arrayidx167.i = getelementptr inbounds [25 x i64]* @reg_class_contents, i64 0, i64 %idxprom166.i
  %33 = load i64* %arrayidx167.i, align 8, !tbaa !1
  %neg168.i = xor i64 %33, -1
  %and169.i = and i64 %31, %neg168.i
  %cmp170.i = icmp eq i64 %and169.i, 0
  br i1 %cmp170.i, label %for.inc178.i, label %if.end173.i

if.end173.i:                                      ; preds = %subclass1.i
  %34 = trunc i64 %indvars.iv1021.i to i32
  store i32 %34, i32* %arrayidx165.i, align 4, !tbaa !10
  br label %for.inc178.i

for.inc178.i:                                     ; preds = %if.end173.i, %subclass1.i, %for.body152.i
  %indvars.iv.next1022.i = add nuw nsw i64 %indvars.iv1021.i, 1
  %exitcond1023.i = icmp eq i64 %indvars.iv.next1022.i, 25
  br i1 %exitcond1023.i, label %for.inc181.i, label %for.body152.i

for.inc181.i:                                     ; preds = %for.inc178.i
  %indvars.iv.next1025.i = add nuw nsw i64 %indvars.iv1024.i, 1
  %exitcond1026.i = icmp eq i64 %indvars.iv.next1025.i, 25
  br i1 %exitcond1026.i, label %for.inc184.i, label %for.body144.i

for.inc184.i:                                     ; preds = %for.inc181.i
  %indvars.iv.next1028.i = add nuw nsw i64 %indvars.iv1027.i, 1
  %exitcond1029.i = icmp eq i64 %indvars.iv.next1028.i, 25
  br i1 %exitcond1029.i, label %for.cond191.preheader.i, label %for.cond141.preheader.i

for.cond191.preheader.i:                          ; preds = %for.inc184.i, %for.inc224.i
  %indvars.iv1018.i = phi i64 [ %indvars.iv.next1019.i, %for.inc224.i ], [ 0, %for.inc184.i ]
  %arrayidx198.i = getelementptr inbounds [25 x i64]* @reg_class_contents, i64 0, i64 %indvars.iv1018.i
  %35 = load i64* %arrayidx198.i, align 8, !tbaa !1
  br label %for.body194.i

for.body194.i:                                    ; preds = %superclass.i, %for.cond191.preheader.i
  %indvars.iv1015.i = phi i64 [ 0, %for.cond191.preheader.i ], [ %indvars.iv.next1016.i, %superclass.i ]
  %arrayidx200.i = getelementptr inbounds [25 x i64]* @reg_class_contents, i64 0, i64 %indvars.iv1015.i
  %36 = load i64* %arrayidx200.i, align 8, !tbaa !1
  %or201.i = or i64 %36, %35
  br label %for.body205.i

for.cond202.i:                                    ; preds = %for.body205.i
  %37 = trunc i64 %indvars.iv.next1014.i to i32
  %cmp203.i = icmp slt i32 %37, 25
  br i1 %cmp203.i, label %for.body205.i, label %superclass.i

for.body205.i:                                    ; preds = %for.cond202.i, %for.body194.i
  %indvars.iv1013.i = phi i64 [ 0, %for.body194.i ], [ %indvars.iv.next1014.i, %for.cond202.i ]
  %k196.0963.i = phi i32 [ 0, %for.body194.i ], [ %inc215.i, %for.cond202.i ]
  %arrayidx207.i = getelementptr inbounds [25 x i64]* @reg_class_contents, i64 0, i64 %indvars.iv1013.i
  %38 = load i64* %arrayidx207.i, align 8, !tbaa !1
  %neg208.i = xor i64 %38, -1
  %and209.i = and i64 %or201.i, %neg208.i
  %cmp210.i = icmp eq i64 %and209.i, 0
  %indvars.iv.next1014.i = add nuw nsw i64 %indvars.iv1013.i, 1
  %inc215.i = add nsw i32 %k196.0963.i, 1
  %39 = trunc i64 %indvars.iv1013.i to i32
  br i1 %cmp210.i, label %superclass.i, label %for.cond202.i

superclass.i:                                     ; preds = %for.body205.i, %for.cond202.i
  %k196.0.lcssa.i = phi i32 [ %inc215.i, %for.cond202.i ], [ %39, %for.body205.i ]
  %arrayidx220.i = getelementptr inbounds [25 x [25 x i32]]* @reg_class_superunion, i64 0, i64 %indvars.iv1018.i, i64 %indvars.iv1015.i
  store i32 %k196.0.lcssa.i, i32* %arrayidx220.i, align 4, !tbaa !10
  %indvars.iv.next1016.i = add nuw nsw i64 %indvars.iv1015.i, 1
  %exitcond1017.i = icmp eq i64 %indvars.iv.next1016.i, 25
  br i1 %exitcond1017.i, label %for.inc224.i, label %for.body194.i

for.inc224.i:                                     ; preds = %superclass.i
  %indvars.iv.next1019.i = add nuw nsw i64 %indvars.iv1018.i, 1
  %exitcond1020.i = icmp eq i64 %indvars.iv.next1019.i, 25
  br i1 %exitcond1020.i, label %for.cond231.preheader.i, label %for.cond191.preheader.i

for.cond231.preheader.i:                          ; preds = %for.inc224.i, %for.inc246.i
  %indvars.iv1010.i = phi i64 [ %indvars.iv.next1011.i, %for.inc246.i ], [ 0, %for.inc224.i ]
  br label %for.body234.i

for.body234.i:                                    ; preds = %for.body234.i, %for.cond231.preheader.i
  %indvars.iv1007.i = phi i64 [ 0, %for.cond231.preheader.i ], [ %indvars.iv.next1008.i, %for.body234.i ]
  %arrayidx238.i = getelementptr inbounds [25 x [25 x i32]]* @reg_class_superclasses, i64 0, i64 %indvars.iv1010.i, i64 %indvars.iv1007.i
  store i32 25, i32* %arrayidx238.i, align 4, !tbaa !10
  %arrayidx242.i = getelementptr inbounds [25 x [25 x i32]]* @reg_class_subclasses, i64 0, i64 %indvars.iv1010.i, i64 %indvars.iv1007.i
  store i32 25, i32* %arrayidx242.i, align 4, !tbaa !10
  %indvars.iv.next1008.i = add nuw nsw i64 %indvars.iv1007.i, 1
  %exitcond1009.i = icmp eq i64 %indvars.iv.next1008.i, 25
  br i1 %exitcond1009.i, label %for.inc246.i, label %for.body234.i

for.inc246.i:                                     ; preds = %for.body234.i
  %indvars.iv.next1011.i = add nuw nsw i64 %indvars.iv1010.i, 1
  %exitcond1012.i = icmp eq i64 %indvars.iv.next1011.i, 25
  br i1 %exitcond1012.i, label %for.body252.i, label %for.cond231.preheader.i

for.body252.i:                                    ; preds = %for.inc246.i, %for.inc288.i
  %indvars.iv1003.i = phi i64 [ %indvars.iv.next1004.pre.i, %for.inc288.i ], [ 0, %for.inc246.i ]
  %indvars.iv998.i = phi i64 [ %indvars.iv.next999.i, %for.inc288.i ], [ 1, %for.inc246.i ]
  %40 = trunc i64 %indvars.iv1003.i to i32
  %cmp253.i = icmp ne i32 %40, 0
  %indvars.iv.next1004.pre.i = add i64 %indvars.iv1003.i, 1
  %41 = trunc i64 %indvars.iv.next1004.pre.i to i32
  %cmp258956.i = icmp ult i32 %41, 25
  %or.cond1048.i = and i1 %cmp253.i, %cmp258956.i
  br i1 %or.cond1048.i, label %for.body260.lr.ph.i, label %for.inc288.i

for.body260.lr.ph.i:                              ; preds = %for.body252.i
  %arrayidx262.i = getelementptr inbounds [25 x i64]* @reg_class_contents, i64 0, i64 %indvars.iv1003.i
  %arrayidx273.i = getelementptr inbounds [25 x [25 x i32]]* @reg_class_superclasses, i64 0, i64 %indvars.iv1003.i, i64 0
  br label %for.body260.i

for.body260.i:                                    ; preds = %for.cond257.backedge.i, %for.body260.lr.ph.i
  %indvars.iv1000.i = phi i64 [ %indvars.iv998.i, %for.body260.lr.ph.i ], [ %indvars.iv.next1001.i, %for.cond257.backedge.i ]
  %42 = load i64* %arrayidx262.i, align 8, !tbaa !1
  %arrayidx264.i = getelementptr inbounds [25 x i64]* @reg_class_contents, i64 0, i64 %indvars.iv1000.i
  %43 = load i64* %arrayidx264.i, align 8, !tbaa !1
  %neg265.i = xor i64 %43, -1
  %and266.i = and i64 %42, %neg265.i
  %cmp267.i = icmp eq i64 %and266.i, 0
  br i1 %cmp267.i, label %while.cond.i, label %for.cond257.backedge.i

for.cond257.backedge.i:                           ; preds = %while.end284.i, %for.body260.i
  %indvars.iv.next1001.i = add nuw nsw i64 %indvars.iv1000.i, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next1001.i to i32
  %exitcond19 = icmp eq i32 %lftr.wideiv, 25
  br i1 %exitcond19, label %for.inc288.i, label %for.body260.i

while.cond.i:                                     ; preds = %for.body260.i, %while.cond.i
  %p.0.i = phi i32* [ %incdec.ptr.i, %while.cond.i ], [ %arrayidx273.i, %for.body260.i ]
  %44 = load i32* %p.0.i, align 4, !tbaa !10
  %cmp274.i = icmp eq i32 %44, 25
  %incdec.ptr.i = getelementptr inbounds i32* %p.0.i, i64 1
  br i1 %cmp274.i, label %while.end.i, label %while.cond.i

while.end.i:                                      ; preds = %while.cond.i
  %45 = trunc i64 %indvars.iv1000.i to i32
  store i32 %45, i32* %p.0.i, align 4, !tbaa !10
  %arrayidx278.i = getelementptr inbounds [25 x [25 x i32]]* @reg_class_subclasses, i64 0, i64 %indvars.iv1000.i, i64 0
  br label %while.cond279.i

while.cond279.i:                                  ; preds = %while.cond279.i, %while.end.i
  %p.1.i = phi i32* [ %arrayidx278.i, %while.end.i ], [ %incdec.ptr283.i, %while.cond279.i ]
  %46 = load i32* %p.1.i, align 4, !tbaa !10
  %cmp280.i = icmp eq i32 %46, 25
  %incdec.ptr283.i = getelementptr inbounds i32* %p.1.i, i64 1
  br i1 %cmp280.i, label %while.end284.i, label %while.cond279.i

while.end284.i:                                   ; preds = %while.cond279.i
  store i32 %40, i32* %p.1.i, align 4, !tbaa !10
  br label %for.cond257.backedge.i

for.inc288.i:                                     ; preds = %for.cond257.backedge.i, %for.body252.i
  %indvars.iv.next999.i = add nuw nsw i64 %indvars.iv998.i, 1
  %exitcond1006.i = icmp eq i64 %indvars.iv.next1004.pre.i, 25
  br i1 %exitcond1006.i, label %for.end290.i, label %for.body252.i

for.end290.i:                                     ; preds = %for.inc288.i
  store i64 0, i64* @fixed_reg_set, align 8, !tbaa !1
  store i64 0, i64* @call_used_reg_set, align 8, !tbaa !1
  store i64 0, i64* @call_fixed_reg_set, align 8, !tbaa !1
  store i64 0, i64* @regs_invalidated_by_call, align 8, !tbaa !1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* getelementptr inbounds ([53 x i8]* @call_fixed_regs, i64 0, i64 0), i8* getelementptr inbounds ([53 x i8]* @fixed_regs, i64 0, i64 0), i64 53, i32 16, i1 false) #1
  store i32 0, i32* @n_non_fixed_regs, align 4, !tbaa !5
  %47 = load i32* @target_flags, align 4, !tbaa !5
  %and378.i = and i32 %47, 33554432
  %tobool379.i = icmp eq i32 %and378.i, 0
  %48 = load i32* @flag_pic, align 4, !tbaa !5
  %lnot382.i = icmp eq i32 %48, 0
  %phitmp896.i = select i1 %lnot382.i, i32 -1, i32 3
  %phitmp896..i = select i1 %tobool379.i, i32 %phitmp896.i, i32 -1
  br label %for.body294.i

for.body294.i:                                    ; preds = %for.inc412.i, %for.end290.i
  %49 = phi i64 [ 0, %for.end290.i ], [ %55, %for.inc412.i ]
  %50 = phi i64 [ 0, %for.end290.i ], [ %58, %for.inc412.i ]
  %51 = phi i64 [ 0, %for.end290.i ], [ %60, %for.inc412.i ]
  %52 = phi i64 [ 0, %for.end290.i ], [ %65, %for.inc412.i ]
  %53 = phi i32 [ 0, %for.end290.i ], [ %56, %for.inc412.i ]
  %indvars.iv995.i = phi i64 [ 0, %for.end290.i ], [ %indvars.iv.next996.i, %for.inc412.i ]
  %arrayidx296.i = getelementptr inbounds [53 x i8]* @fixed_regs, i64 0, i64 %indvars.iv995.i
  %54 = load i8* %arrayidx296.i, align 1, !tbaa !10
  %tobool297.i = icmp eq i8 %54, 0
  br i1 %tobool297.i, label %if.else.i, label %if.then298.i

if.then298.i:                                     ; preds = %for.body294.i
  %shl300.i = shl i64 1, %indvars.iv995.i
  %or301.i = or i64 %shl300.i, %49
  store i64 %or301.i, i64* @fixed_reg_set, align 8, !tbaa !1
  br label %if.end303.i

if.else.i:                                        ; preds = %for.body294.i
  %inc302.i = add nsw i32 %53, 1
  store i32 %inc302.i, i32* @n_non_fixed_regs, align 4, !tbaa !5
  br label %if.end303.i

if.end303.i:                                      ; preds = %if.else.i, %if.then298.i
  %55 = phi i64 [ %49, %if.else.i ], [ %or301.i, %if.then298.i ]
  %56 = phi i32 [ %inc302.i, %if.else.i ], [ %53, %if.then298.i ]
  %arrayidx305.i = getelementptr inbounds [53 x i8]* @call_used_regs, i64 0, i64 %indvars.iv995.i
  %57 = load i8* %arrayidx305.i, align 1, !tbaa !10
  %tobool306.i = icmp eq i8 %57, 0
  br i1 %tobool306.i, label %if.end311.i, label %if.then307.i

if.then307.i:                                     ; preds = %if.end303.i
  %shl309.i = shl i64 1, %indvars.iv995.i
  %or310.i = or i64 %shl309.i, %50
  store i64 %or310.i, i64* @call_used_reg_set, align 8, !tbaa !1
  br label %if.end311.i

if.end311.i:                                      ; preds = %if.then307.i, %if.end303.i
  %58 = phi i64 [ %50, %if.end303.i ], [ %or310.i, %if.then307.i ]
  %arrayidx313.i = getelementptr inbounds [53 x i8]* @call_fixed_regs, i64 0, i64 %indvars.iv995.i
  %59 = load i8* %arrayidx313.i, align 1, !tbaa !10
  %tobool314.i = icmp eq i8 %59, 0
  br i1 %tobool314.i, label %if.end319.i, label %if.then315.i

if.then315.i:                                     ; preds = %if.end311.i
  %shl317.i = shl i64 1, %indvars.iv995.i
  %or318.i = or i64 %shl317.i, %51
  store i64 %or318.i, i64* @call_fixed_reg_set, align 8, !tbaa !1
  br label %if.end319.i

if.end319.i:                                      ; preds = %if.then315.i, %if.end311.i
  %60 = phi i64 [ %51, %if.end311.i ], [ %or318.i, %if.then315.i ]
  %arrayidx321.i = getelementptr inbounds [53 x i32]* @regclass_map, i64 0, i64 %indvars.iv995.i
  %61 = load i32* %arrayidx321.i, align 4, !tbaa !10
  %.off.i = add i32 %61, -1
  %switch.i = icmp ult i32 %.off.i, 7
  br i1 %switch.i, label %if.then353.i, label %if.end357.i

if.then353.i:                                     ; preds = %if.end319.i
  %shl355.i = shl i64 1, %indvars.iv995.i
  %62 = load i64* @losing_caller_save_reg_set, align 8, !tbaa !1
  %or356.i = or i64 %62, %shl355.i
  store i64 %or356.i, i64* @losing_caller_save_reg_set, align 8, !tbaa !1
  br label %if.end357.i

if.end357.i:                                      ; preds = %if.then353.i, %if.end319.i
  %63 = trunc i64 %indvars.iv995.i to i32
  switch i32 %63, label %if.else377.i [
    i32 20, label %for.inc412.i
    i32 7, label %for.inc412.i
    i32 6, label %for.inc412.i
    i32 16, label %land.lhs.true371.i
  ]

land.lhs.true371.i:                               ; preds = %if.end357.i
  br i1 %tobool297.i, label %if.else393.i, label %for.inc412.i

if.else377.i:                                     ; preds = %if.end357.i
  %cmp385.i = icmp ne i32 %63, %phitmp896..i
  %or.cond1049.i = or i1 %cmp385.i, %tobool297.i
  br i1 %or.cond1049.i, label %if.else393.i, label %for.inc412.i

if.else393.i:                                     ; preds = %land.lhs.true371.i, %if.else377.i
  br i1 %tobool306.i, label %lor.lhs.false398.i, label %if.then403.i

lor.lhs.false398.i:                               ; preds = %if.else393.i
  %arrayidx400.i = getelementptr inbounds [53 x i8]* @global_regs, i64 0, i64 %indvars.iv995.i
  %64 = load i8* %arrayidx400.i, align 1, !tbaa !10
  %tobool402.i = icmp eq i8 %64, 0
  br i1 %tobool402.i, label %for.inc412.i, label %if.then403.i

if.then403.i:                                     ; preds = %lor.lhs.false398.i, %if.else393.i
  %shl405.i = shl i64 1, %indvars.iv995.i
  %or406.i = or i64 %shl405.i, %52
  store i64 %or406.i, i64* @regs_invalidated_by_call, align 8, !tbaa !1
  br label %for.inc412.i

for.inc412.i:                                     ; preds = %if.then403.i, %lor.lhs.false398.i, %if.else377.i, %land.lhs.true371.i, %if.end357.i, %if.end357.i, %if.end357.i
  %65 = phi i64 [ %52, %if.end357.i ], [ %52, %if.end357.i ], [ %52, %if.end357.i ], [ %52, %land.lhs.true371.i ], [ %52, %lor.lhs.false398.i ], [ %or406.i, %if.then403.i ], [ %52, %if.else377.i ]
  %indvars.iv.next996.i = add nuw nsw i64 %indvars.iv995.i, 1
  %exitcond997.i = icmp eq i64 %indvars.iv.next996.i, 53
  br i1 %exitcond997.i, label %for.end414.i, label %for.body294.i

for.end414.i:                                     ; preds = %for.inc412.i
  tail call void @llvm.memset.p0i8.i64(i8* getelementptr inbounds ([25 x [59 x i8]]* @contains_reg_of_mode, i64 0, i64 0, i64 0), i8 0, i64 1475, i32 16, i1 false) #1
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 59, i32 16, i1 false) #1
  br label %for.cond419.preheader.i

for.cond419.preheader.i:                          ; preds = %for.inc489.i, %for.end414.i
  %indvars.iv992.i = phi i64 [ 0, %for.end414.i ], [ %indvars.iv.next993.i, %for.inc489.i ]
  %arrayidx425.i = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %indvars.iv992.i
  %66 = trunc i64 %indvars.iv992.i to i32
  %arrayidx480.i = getelementptr inbounds [59 x i8]* %allocatable_regs_of_mode.i, i64 0, i64 %indvars.iv992.i
  %cmp435.i = icmp eq i32 %66, 18
  %idxprom440.i = select i1 %cmp435.i, i64 17, i64 %indvars.iv992.i
  %arrayidx441.i = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom440.i
  br label %for.body422.i

for.body422.i:                                    ; preds = %for.inc486.i, %for.cond419.preheader.i
  %indvars.iv989.i = phi i64 [ 0, %for.cond419.preheader.i ], [ %indvars.iv.next990.i, %for.inc486.i ]
  %67 = trunc i64 %indvars.iv989.i to i32
  switch i32 %67, label %reg_classes_intersect_p.exit.i [
    i32 12, label %cond.false.i
    i32 24, label %cond.false.i
  ]

reg_classes_intersect_p.exit.i:                   ; preds = %for.body422.i
  %arrayidx.i.i = getelementptr inbounds [25 x i64]* @reg_class_contents, i64 0, i64 %indvars.iv989.i
  %68 = load i64* %arrayidx.i.i, align 8, !tbaa !1
  %69 = load i64* getelementptr inbounds ([25 x i64]* @reg_class_contents, i64 0, i64 12), align 16, !tbaa !1
  %and.i.i = and i64 %69, %68
  %70 = load i64* getelementptr inbounds ([25 x i64]* @reg_class_contents, i64 0, i64 0), align 16, !tbaa !1
  %neg.i.i = xor i64 %70, -1
  %and7.i.i = and i64 %and.i.i, %neg.i.i
  %not.cmp8.i.i = icmp eq i64 %and7.i.i, 0
  br i1 %not.cmp8.i.i, label %cond.true.i, label %cond.false.i

cond.true.i:                                      ; preds = %reg_classes_intersect_p.exit.i
  %71 = load i32* %arrayidx425.i, align 4, !tbaa !10
  %cmp426.i = icmp eq i32 %71, 5
  br i1 %cmp426.i, label %cond.end450.i, label %lor.rhs428.i

lor.rhs428.i:                                     ; preds = %cond.true.i
  %cmp431.i = icmp eq i32 %71, 6
  %phitmp.i = select i1 %cmp431.i, i32 2, i32 1
  br label %cond.end450.i

cond.false.i:                                     ; preds = %reg_classes_intersect_p.exit.i, %for.body422.i, %for.body422.i
  %72 = load i8* %arrayidx441.i, align 1, !tbaa !10
  %conv442.i = zext i8 %72 to i32
  %73 = load i32* @target_flags, align 4, !tbaa !5
  %and443.i = lshr i32 %73, 23
  %74 = and i32 %and443.i, 4
  %75 = add i32 %74, 4
  %add446.i = add i32 %conv442.i, -1
  %sub.i = add i32 %add446.i, %75
  %div.i = sdiv i32 %sub.i, %75
  br label %cond.end450.i

cond.end450.i:                                    ; preds = %cond.false.i, %lor.rhs428.i, %cond.true.i
  %cond451.i = phi i32 [ %div.i, %cond.false.i ], [ 2, %cond.true.i ], [ %phitmp.i, %lor.rhs428.i ]
  %arrayidx453.i = getelementptr inbounds [25 x i32]* @reg_class_size, i64 0, i64 %indvars.iv989.i
  %76 = load i32* %arrayidx453.i, align 4, !tbaa !5
  %cmp454.i = icmp ugt i32 %cond451.i, %76
  br i1 %cmp454.i, label %for.inc486.i, label %for.cond457.preheader.i

for.cond457.preheader.i:                          ; preds = %cond.end450.i
  %arrayidx466.i = getelementptr inbounds [25 x i64]* @reg_class_contents, i64 0, i64 %indvars.iv989.i
  br label %for.body460.i

for.body460.i:                                    ; preds = %for.inc482.i, %for.cond457.preheader.i
  %indvars.iv987.i = phi i64 [ 0, %for.cond457.preheader.i ], [ %indvars.iv.next988.i, %for.inc482.i ]
  %arrayidx462.i = getelementptr inbounds [53 x i8]* @fixed_regs, i64 0, i64 %indvars.iv987.i
  %77 = load i8* %arrayidx462.i, align 1, !tbaa !10
  %tobool463.i = icmp eq i8 %77, 0
  br i1 %tobool463.i, label %land.lhs.true464.i, label %for.inc482.i

land.lhs.true464.i:                               ; preds = %for.body460.i
  %78 = load i64* %arrayidx466.i, align 8, !tbaa !1
  %shl468.i = shl i64 1, %indvars.iv987.i
  %and469.i = and i64 %78, %shl468.i
  %tobool470.i = icmp eq i64 %and469.i, 0
  br i1 %tobool470.i, label %for.inc482.i, label %land.lhs.true471.i

land.lhs.true471.i:                               ; preds = %land.lhs.true464.i
  %79 = trunc i64 %indvars.iv987.i to i32
  %call472.i = tail call i32 @ix86_hard_regno_mode_ok(i32 %79, i32 %66) #1
  %tobool473.i = icmp eq i32 %call472.i, 0
  br i1 %tobool473.i, label %for.inc482.i, label %if.then474.i

if.then474.i:                                     ; preds = %land.lhs.true471.i
  %arrayidx478.i = getelementptr inbounds [25 x [59 x i8]]* @contains_reg_of_mode, i64 0, i64 %indvars.iv989.i, i64 %indvars.iv992.i
  store i8 1, i8* %arrayidx478.i, align 1, !tbaa !10
  store i8 1, i8* %arrayidx480.i, align 1, !tbaa !10
  br label %for.inc486.i

for.inc482.i:                                     ; preds = %land.lhs.true471.i, %land.lhs.true464.i, %for.body460.i
  %indvars.iv.next988.i = add nuw nsw i64 %indvars.iv987.i, 1
  %80 = trunc i64 %indvars.iv.next988.i to i32
  %cmp458.i = icmp ult i32 %80, 53
  br i1 %cmp458.i, label %for.body460.i, label %for.inc486.i

for.inc486.i:                                     ; preds = %for.inc482.i, %if.then474.i, %cond.end450.i
  %indvars.iv.next990.i = add nuw nsw i64 %indvars.iv989.i, 1
  %exitcond991.i = icmp eq i64 %indvars.iv.next990.i, 25
  br i1 %exitcond991.i, label %for.inc489.i, label %for.body422.i

for.inc489.i:                                     ; preds = %for.inc486.i
  %indvars.iv.next993.i = add nuw nsw i64 %indvars.iv992.i, 1
  %exitcond994.i = icmp eq i64 %indvars.iv.next993.i, 59
  br i1 %exitcond994.i, label %for.body495.i, label %for.cond419.preheader.i

for.body495.i:                                    ; preds = %for.inc489.i, %for.inc693.i
  %indvars.iv984.i = phi i64 [ %indvars.iv.next985.i, %for.inc693.i ], [ 0, %for.inc489.i ]
  %arrayidx497.i = getelementptr inbounds [59 x i8]* %allocatable_regs_of_mode.i, i64 0, i64 %indvars.iv984.i
  %81 = load i8* %arrayidx497.i, align 1, !tbaa !10
  %tobool498.i = icmp eq i8 %81, 0
  br i1 %tobool498.i, label %for.inc693.i, label %for.body503.i.preheader

for.body503.i.preheader:                          ; preds = %for.body495.i
  %82 = trunc i64 %indvars.iv984.i to i32
  br label %for.body503.i

for.body503.i:                                    ; preds = %for.body503.i.preheader, %for.inc689.i
  %indvars.iv981.i = phi i64 [ %indvars.iv.next982.i, %for.inc689.i ], [ 0, %for.body503.i.preheader ]
  %83 = trunc i64 %indvars.iv981.i to i32
  %arrayidx507.i = getelementptr inbounds [25 x [59 x i8]]* @contains_reg_of_mode, i64 0, i64 %indvars.iv981.i, i64 %indvars.iv984.i
  %84 = load i8* %arrayidx507.i, align 1, !tbaa !10
  %tobool508.i = icmp eq i8 %84, 0
  br i1 %tobool508.i, label %for.body666.i, label %for.cond510.preheader.i

for.cond510.preheader.i:                          ; preds = %for.body503.i
  %arrayidx581.i = getelementptr inbounds [25 x [25 x i32]]* @reg_class_subclasses, i64 0, i64 %indvars.iv981.i, i64 0
  %cmp1.i905.i = icmp eq i32 %83, 24
  %arrayidx5.i.i = getelementptr inbounds [25 x i64]* @reg_class_contents, i64 0, i64 %indvars.iv981.i
  br i1 %cmp1.i905.i, label %for.body513.us.i, label %for.body513.i

for.body513.us.i:                                 ; preds = %for.cond510.preheader.i, %for.inc659.us.i
  %indvars.iv978.i = phi i64 [ %indvars.iv.next979.i, %for.inc659.us.i ], [ 0, %for.cond510.preheader.i ]
  %arrayidx517.us.i = getelementptr inbounds [25 x [59 x i8]]* @contains_reg_of_mode, i64 0, i64 %indvars.iv978.i, i64 %indvars.iv984.i
  %85 = load i8* %arrayidx517.us.i, align 1, !tbaa !10
  %tobool518.us.i = icmp eq i8 %85, 0
  br i1 %tobool518.us.i, label %if.then519.us.i, label %if.else538.us.i

if.else538.us.i:                                  ; preds = %for.body513.us.i
  %86 = trunc i64 %indvars.iv978.i to i32
  %call539.us.i = tail call i32 @ix86_register_move_cost(i32 %82, i32 24, i32 %86) #1
  %arrayidx542.us.i = getelementptr inbounds [25 x [25 x i32]]* @reg_class_subclasses, i64 0, i64 %indvars.iv978.i, i64 0
  %87 = load i32* %arrayidx542.us.i, align 4, !tbaa !10
  %cmp544935.us.i = icmp eq i32 %87, 25
  br i1 %cmp544935.us.i, label %for.end578.us.i, label %for.body546.us.i

for.body546.us.i:                                 ; preds = %if.else538.us.i, %for.inc576.us.i
  %88 = phi i32 [ %91, %for.inc576.us.i ], [ %87, %if.else538.us.i ]
  %p2.0937.us.i = phi i32* [ %incdec.ptr577.us.i, %for.inc576.us.i ], [ %arrayidx542.us.i, %if.else538.us.i ]
  %cost.0936.us.i = phi i32 [ %cost.1.us.i, %for.inc576.us.i ], [ %call539.us.i, %if.else538.us.i ]
  %cmp547.us.i = icmp eq i32 %88, 24
  br i1 %cmp547.us.i, label %for.inc576.us.i, label %land.lhs.true549.us.i

land.lhs.true549.us.i:                            ; preds = %for.body546.us.i
  %idxprom551.us.i = zext i32 %88 to i64
  %arrayidx553.us.i = getelementptr inbounds [25 x [59 x i8]]* @contains_reg_of_mode, i64 0, i64 %idxprom551.us.i, i64 %indvars.iv984.i
  %89 = load i8* %arrayidx553.us.i, align 1, !tbaa !10
  %tobool555.us.i = icmp eq i8 %89, 0
  br i1 %tobool555.us.i, label %for.inc576.us.i, label %if.then556.us.i

if.then556.us.i:                                  ; preds = %land.lhs.true549.us.i
  %arrayidx562.us.i = getelementptr inbounds [59 x [25 x [25 x i32]]]* @move_cost, i64 0, i64 %indvars.iv984.i, i64 %indvars.iv981.i, i64 %idxprom551.us.i
  %90 = load i32* %arrayidx562.us.i, align 4, !tbaa !5
  %cmp563.us.i = icmp sgt i32 %cost.0936.us.i, %90
  %cost.0..us.i = select i1 %cmp563.us.i, i32 %cost.0936.us.i, i32 %90
  br label %for.inc576.us.i

for.inc576.us.i:                                  ; preds = %if.then556.us.i, %land.lhs.true549.us.i, %for.body546.us.i
  %cost.1.us.i = phi i32 [ %cost.0..us.i, %if.then556.us.i ], [ %cost.0936.us.i, %land.lhs.true549.us.i ], [ %cost.0936.us.i, %for.body546.us.i ]
  %incdec.ptr577.us.i = getelementptr inbounds i32* %p2.0937.us.i, i64 1
  %91 = load i32* %incdec.ptr577.us.i, align 4, !tbaa !10
  %cmp544.us.i = icmp eq i32 %91, 25
  br i1 %cmp544.us.i, label %for.end578.us.i, label %for.body546.us.i

for.end578.us.i:                                  ; preds = %for.inc576.us.i, %if.else538.us.i
  %cost.0.lcssa.us.i = phi i32 [ %call539.us.i, %if.else538.us.i ], [ %cost.1.us.i, %for.inc576.us.i ]
  %92 = load i32* %arrayidx581.i, align 4, !tbaa !10
  %cmp583938.us.i = icmp eq i32 %92, 25
  br i1 %cmp583938.us.i, label %for.end617.us.i, label %for.body585.us.i

for.body585.us.i:                                 ; preds = %for.end578.us.i, %for.inc615.us.i
  %93 = phi i32 [ %96, %for.inc615.us.i ], [ %92, %for.end578.us.i ]
  %p1.0940.us.i = phi i32* [ %incdec.ptr616.us.i, %for.inc615.us.i ], [ %arrayidx581.i, %for.end578.us.i ]
  %cost.2939.us.i = phi i32 [ %cost.3.us.i, %for.inc615.us.i ], [ %cost.0.lcssa.us.i, %for.end578.us.i ]
  %cmp586.us.i = icmp eq i32 %93, %86
  br i1 %cmp586.us.i, label %for.inc615.us.i, label %land.lhs.true588.us.i

land.lhs.true588.us.i:                            ; preds = %for.body585.us.i
  %idxprom590.us.i = zext i32 %93 to i64
  %arrayidx592.us.i = getelementptr inbounds [25 x [59 x i8]]* @contains_reg_of_mode, i64 0, i64 %idxprom590.us.i, i64 %indvars.iv984.i
  %94 = load i8* %arrayidx592.us.i, align 1, !tbaa !10
  %tobool594.us.i = icmp eq i8 %94, 0
  br i1 %tobool594.us.i, label %for.inc615.us.i, label %if.then595.us.i

if.then595.us.i:                                  ; preds = %land.lhs.true588.us.i
  %arrayidx601.us.i = getelementptr inbounds [59 x [25 x [25 x i32]]]* @move_cost, i64 0, i64 %indvars.iv984.i, i64 %idxprom590.us.i, i64 %indvars.iv978.i
  %95 = load i32* %arrayidx601.us.i, align 4, !tbaa !5
  %cmp602.us.i = icmp sgt i32 %cost.2939.us.i, %95
  %cost.2..us.i = select i1 %cmp602.us.i, i32 %cost.2939.us.i, i32 %95
  br label %for.inc615.us.i

for.inc615.us.i:                                  ; preds = %if.then595.us.i, %land.lhs.true588.us.i, %for.body585.us.i
  %cost.3.us.i = phi i32 [ %cost.2..us.i, %if.then595.us.i ], [ %cost.2939.us.i, %land.lhs.true588.us.i ], [ %cost.2939.us.i, %for.body585.us.i ]
  %incdec.ptr616.us.i = getelementptr inbounds i32* %p1.0940.us.i, i64 1
  %96 = load i32* %incdec.ptr616.us.i, align 4, !tbaa !10
  %cmp583.us.i = icmp eq i32 %96, 25
  br i1 %cmp583.us.i, label %for.end617.us.i, label %for.body585.us.i

for.end617.us.i:                                  ; preds = %for.inc615.us.i, %for.end578.us.i
  %cost.2.lcssa.us.i = phi i32 [ %cost.0.lcssa.us.i, %for.end578.us.i ], [ %cost.3.us.i, %for.inc615.us.i ]
  %arrayidx623.us.i = getelementptr inbounds [59 x [25 x [25 x i32]]]* @move_cost, i64 0, i64 %indvars.iv984.i, i64 %indvars.iv981.i, i64 %indvars.iv978.i
  store i32 %cost.2.lcssa.us.i, i32* %arrayidx623.us.i, align 4, !tbaa !5
  %cmp.i912.us.i = icmp eq i32 %86, 24
  br i1 %cmp.i912.us.i, label %reg_class_subset_p.exit925.thread.us.i, label %reg_class_subset_p.exit925.us.i

reg_class_subset_p.exit925.us.i:                  ; preds = %for.end617.us.i
  %97 = load i64* %arrayidx5.i.i, align 8, !tbaa !1
  %sext.i = shl i64 %indvars.iv978.i, 32
  %idxprom4.i917.us.i = ashr exact i64 %sext.i, 32
  %arrayidx5.i918.us.i = getelementptr inbounds [25 x i64]* @reg_class_contents, i64 0, i64 %idxprom4.i917.us.i
  %98 = load i64* %arrayidx5.i918.us.i, align 8, !tbaa !1
  %neg.i919.us.i = xor i64 %98, -1
  %and.i920.us.i = and i64 %97, %neg.i919.us.i
  %cmp6.i921.us.i = icmp eq i64 %and.i920.us.i, 0
  %arrayidx639.us.i = getelementptr inbounds [59 x [25 x [25 x i32]]]* @may_move_in_cost, i64 0, i64 %indvars.iv984.i, i64 %indvars.iv981.i, i64 %indvars.iv978.i
  br i1 %cmp6.i921.us.i, label %if.then626.us.i, label %if.else633.us.i

if.else633.us.i:                                  ; preds = %reg_class_subset_p.exit925.us.i
  store i32 %cost.2.lcssa.us.i, i32* %arrayidx639.us.i, align 4, !tbaa !5
  br label %if.then643.us.i

reg_class_subset_p.exit925.thread.us.i:           ; preds = %for.end617.us.i
  %arrayidx639929.us.i = getelementptr inbounds [59 x [25 x [25 x i32]]]* @may_move_in_cost, i64 0, i64 %indvars.iv984.i, i64 %indvars.iv981.i, i64 %indvars.iv978.i
  br label %if.then626.us.i

if.then626.us.i:                                  ; preds = %reg_class_subset_p.exit925.thread.us.i, %reg_class_subset_p.exit925.us.i
  %arrayidx639930.us.i = phi i32* [ %arrayidx639929.us.i, %reg_class_subset_p.exit925.thread.us.i ], [ %arrayidx639.us.i, %reg_class_subset_p.exit925.us.i ]
  store i32 0, i32* %arrayidx639930.us.i, align 4, !tbaa !5
  br label %if.then643.us.i

if.then643.us.i:                                  ; preds = %if.then626.us.i, %if.else633.us.i
  %arrayidx656932.us.i = getelementptr inbounds [59 x [25 x [25 x i32]]]* @may_move_out_cost, i64 0, i64 %indvars.iv984.i, i64 %indvars.iv981.i, i64 %indvars.iv978.i
  store i32 0, i32* %arrayidx656932.us.i, align 4, !tbaa !5
  br label %for.inc659.us.i

if.then519.us.i:                                  ; preds = %for.body513.us.i
  %arrayidx525.us.i = getelementptr inbounds [59 x [25 x [25 x i32]]]* @move_cost, i64 0, i64 %indvars.iv984.i, i64 %indvars.iv981.i, i64 %indvars.iv978.i
  store i32 65536, i32* %arrayidx525.us.i, align 4, !tbaa !5
  %arrayidx531.us.i = getelementptr inbounds [59 x [25 x [25 x i32]]]* @may_move_in_cost, i64 0, i64 %indvars.iv984.i, i64 %indvars.iv981.i, i64 %indvars.iv978.i
  store i32 65536, i32* %arrayidx531.us.i, align 4, !tbaa !5
  %arrayidx537.us.i = getelementptr inbounds [59 x [25 x [25 x i32]]]* @may_move_out_cost, i64 0, i64 %indvars.iv984.i, i64 %indvars.iv981.i, i64 %indvars.iv978.i
  store i32 65536, i32* %arrayidx537.us.i, align 4, !tbaa !5
  br label %for.inc659.us.i

for.inc659.us.i:                                  ; preds = %if.then519.us.i, %if.then643.us.i
  %indvars.iv.next979.i = add nuw nsw i64 %indvars.iv978.i, 1
  %exitcond980.i = icmp eq i64 %indvars.iv.next979.i, 25
  br i1 %exitcond980.i, label %for.inc689.i, label %for.body513.us.i

for.body513.i:                                    ; preds = %for.cond510.preheader.i, %for.inc659.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %for.inc659.i ], [ 0, %for.cond510.preheader.i ]
  %99 = trunc i64 %indvars.iv.i to i32
  %arrayidx517.i = getelementptr inbounds [25 x [59 x i8]]* @contains_reg_of_mode, i64 0, i64 %indvars.iv.i, i64 %indvars.iv984.i
  %100 = load i8* %arrayidx517.i, align 1, !tbaa !10
  %tobool518.i = icmp eq i8 %100, 0
  br i1 %tobool518.i, label %if.then519.i, label %if.else538.i

if.then519.i:                                     ; preds = %for.body513.i
  %arrayidx525.i = getelementptr inbounds [59 x [25 x [25 x i32]]]* @move_cost, i64 0, i64 %indvars.iv984.i, i64 %indvars.iv981.i, i64 %indvars.iv.i
  store i32 65536, i32* %arrayidx525.i, align 4, !tbaa !5
  %arrayidx531.i = getelementptr inbounds [59 x [25 x [25 x i32]]]* @may_move_in_cost, i64 0, i64 %indvars.iv984.i, i64 %indvars.iv981.i, i64 %indvars.iv.i
  store i32 65536, i32* %arrayidx531.i, align 4, !tbaa !5
  %arrayidx537.i = getelementptr inbounds [59 x [25 x [25 x i32]]]* @may_move_out_cost, i64 0, i64 %indvars.iv984.i, i64 %indvars.iv981.i, i64 %indvars.iv.i
  store i32 65536, i32* %arrayidx537.i, align 4, !tbaa !5
  br label %for.inc659.i

if.else538.i:                                     ; preds = %for.body513.i
  %call539.i = tail call i32 @ix86_register_move_cost(i32 %82, i32 %83, i32 %99) #1
  %arrayidx542.i = getelementptr inbounds [25 x [25 x i32]]* @reg_class_subclasses, i64 0, i64 %indvars.iv.i, i64 0
  %101 = load i32* %arrayidx542.i, align 4, !tbaa !10
  %cmp544935.i = icmp eq i32 %101, 25
  br i1 %cmp544935.i, label %for.end578.i, label %for.body546.i

for.body546.i:                                    ; preds = %if.else538.i, %for.inc576.i
  %102 = phi i32 [ %105, %for.inc576.i ], [ %101, %if.else538.i ]
  %p2.0937.i = phi i32* [ %incdec.ptr577.i, %for.inc576.i ], [ %arrayidx542.i, %if.else538.i ]
  %cost.0936.i = phi i32 [ %cost.1.i, %for.inc576.i ], [ %call539.i, %if.else538.i ]
  %cmp547.i = icmp eq i32 %102, %83
  br i1 %cmp547.i, label %for.inc576.i, label %land.lhs.true549.i

land.lhs.true549.i:                               ; preds = %for.body546.i
  %idxprom551.i = zext i32 %102 to i64
  %arrayidx553.i = getelementptr inbounds [25 x [59 x i8]]* @contains_reg_of_mode, i64 0, i64 %idxprom551.i, i64 %indvars.iv984.i
  %103 = load i8* %arrayidx553.i, align 1, !tbaa !10
  %tobool555.i = icmp eq i8 %103, 0
  br i1 %tobool555.i, label %for.inc576.i, label %if.then556.i

if.then556.i:                                     ; preds = %land.lhs.true549.i
  %arrayidx562.i = getelementptr inbounds [59 x [25 x [25 x i32]]]* @move_cost, i64 0, i64 %indvars.iv984.i, i64 %indvars.iv981.i, i64 %idxprom551.i
  %104 = load i32* %arrayidx562.i, align 4, !tbaa !5
  %cmp563.i = icmp sgt i32 %cost.0936.i, %104
  %cost.0..i = select i1 %cmp563.i, i32 %cost.0936.i, i32 %104
  br label %for.inc576.i

for.inc576.i:                                     ; preds = %if.then556.i, %land.lhs.true549.i, %for.body546.i
  %cost.1.i = phi i32 [ %cost.0..i, %if.then556.i ], [ %cost.0936.i, %land.lhs.true549.i ], [ %cost.0936.i, %for.body546.i ]
  %incdec.ptr577.i = getelementptr inbounds i32* %p2.0937.i, i64 1
  %105 = load i32* %incdec.ptr577.i, align 4, !tbaa !10
  %cmp544.i = icmp eq i32 %105, 25
  br i1 %cmp544.i, label %for.end578.i, label %for.body546.i

for.end578.i:                                     ; preds = %for.inc576.i, %if.else538.i
  %cost.0.lcssa.i = phi i32 [ %call539.i, %if.else538.i ], [ %cost.1.i, %for.inc576.i ]
  %106 = load i32* %arrayidx581.i, align 4, !tbaa !10
  %cmp583938.i = icmp eq i32 %106, 25
  br i1 %cmp583938.i, label %for.end617.i, label %for.body585.i

for.body585.i:                                    ; preds = %for.end578.i, %for.inc615.i
  %107 = phi i32 [ %110, %for.inc615.i ], [ %106, %for.end578.i ]
  %p1.0940.i = phi i32* [ %incdec.ptr616.i, %for.inc615.i ], [ %arrayidx581.i, %for.end578.i ]
  %cost.2939.i = phi i32 [ %cost.3.i, %for.inc615.i ], [ %cost.0.lcssa.i, %for.end578.i ]
  %cmp586.i = icmp eq i32 %107, %99
  br i1 %cmp586.i, label %for.inc615.i, label %land.lhs.true588.i

land.lhs.true588.i:                               ; preds = %for.body585.i
  %idxprom590.i = zext i32 %107 to i64
  %arrayidx592.i = getelementptr inbounds [25 x [59 x i8]]* @contains_reg_of_mode, i64 0, i64 %idxprom590.i, i64 %indvars.iv984.i
  %108 = load i8* %arrayidx592.i, align 1, !tbaa !10
  %tobool594.i = icmp eq i8 %108, 0
  br i1 %tobool594.i, label %for.inc615.i, label %if.then595.i

if.then595.i:                                     ; preds = %land.lhs.true588.i
  %arrayidx601.i = getelementptr inbounds [59 x [25 x [25 x i32]]]* @move_cost, i64 0, i64 %indvars.iv984.i, i64 %idxprom590.i, i64 %indvars.iv.i
  %109 = load i32* %arrayidx601.i, align 4, !tbaa !5
  %cmp602.i = icmp sgt i32 %cost.2939.i, %109
  %cost.2..i = select i1 %cmp602.i, i32 %cost.2939.i, i32 %109
  br label %for.inc615.i

for.inc615.i:                                     ; preds = %if.then595.i, %land.lhs.true588.i, %for.body585.i
  %cost.3.i = phi i32 [ %cost.2..i, %if.then595.i ], [ %cost.2939.i, %land.lhs.true588.i ], [ %cost.2939.i, %for.body585.i ]
  %incdec.ptr616.i = getelementptr inbounds i32* %p1.0940.i, i64 1
  %110 = load i32* %incdec.ptr616.i, align 4, !tbaa !10
  %cmp583.i = icmp eq i32 %110, 25
  br i1 %cmp583.i, label %for.end617.i, label %for.body585.i

for.end617.i:                                     ; preds = %for.inc615.i, %for.end578.i
  %cost.2.lcssa.i = phi i32 [ %cost.0.lcssa.i, %for.end578.i ], [ %cost.3.i, %for.inc615.i ]
  %arrayidx623.i = getelementptr inbounds [59 x [25 x [25 x i32]]]* @move_cost, i64 0, i64 %indvars.iv984.i, i64 %indvars.iv981.i, i64 %indvars.iv.i
  store i32 %cost.2.lcssa.i, i32* %arrayidx623.i, align 4, !tbaa !5
  %cmp.i912.i = icmp eq i32 %83, %99
  %cmp1.i913.i = icmp eq i32 %99, 24
  %or.cond.i914.i = or i1 %cmp.i912.i, %cmp1.i913.i
  br i1 %or.cond.i914.i, label %reg_class_subset_p.exit925.thread.i, label %reg_class_subset_p.exit925.i

reg_class_subset_p.exit925.thread.i:              ; preds = %for.end617.i
  %arrayidx639929.i = getelementptr inbounds [59 x [25 x [25 x i32]]]* @may_move_in_cost, i64 0, i64 %indvars.iv984.i, i64 %indvars.iv981.i, i64 %indvars.iv.i
  br label %if.then626.i

reg_class_subset_p.exit925.i:                     ; preds = %for.end617.i
  %111 = load i64* %arrayidx5.i.i, align 8, !tbaa !1
  %arrayidx5.i918.i = getelementptr inbounds [25 x i64]* @reg_class_contents, i64 0, i64 %indvars.iv.i
  %112 = load i64* %arrayidx5.i918.i, align 8, !tbaa !1
  %neg.i919.i = xor i64 %112, -1
  %and.i920.i = and i64 %111, %neg.i919.i
  %cmp6.i921.i = icmp eq i64 %and.i920.i, 0
  %arrayidx639.i = getelementptr inbounds [59 x [25 x [25 x i32]]]* @may_move_in_cost, i64 0, i64 %indvars.iv984.i, i64 %indvars.iv981.i, i64 %indvars.iv.i
  br i1 %cmp6.i921.i, label %if.then626.i, label %if.else633.i

if.then626.i:                                     ; preds = %reg_class_subset_p.exit925.i, %reg_class_subset_p.exit925.thread.i
  %arrayidx639930.i = phi i32* [ %arrayidx639929.i, %reg_class_subset_p.exit925.thread.i ], [ %arrayidx639.i, %reg_class_subset_p.exit925.i ]
  store i32 0, i32* %arrayidx639930.i, align 4, !tbaa !5
  br label %if.end640.i

if.else633.i:                                     ; preds = %reg_class_subset_p.exit925.i
  store i32 %cost.2.lcssa.i, i32* %arrayidx639.i, align 4, !tbaa !5
  br label %if.end640.i

if.end640.i:                                      ; preds = %if.else633.i, %if.then626.i
  br i1 %cmp.i912.i, label %reg_class_subset_p.exit.thread.i, label %reg_class_subset_p.exit.i

reg_class_subset_p.exit.thread.i:                 ; preds = %if.end640.i
  %arrayidx656932.i = getelementptr inbounds [59 x [25 x [25 x i32]]]* @may_move_out_cost, i64 0, i64 %indvars.iv984.i, i64 %indvars.iv981.i, i64 %indvars.iv.i
  br label %if.then643.i

reg_class_subset_p.exit.i:                        ; preds = %if.end640.i
  %arrayidx.i907.i = getelementptr inbounds [25 x i64]* @reg_class_contents, i64 0, i64 %indvars.iv.i
  %113 = load i64* %arrayidx.i907.i, align 8, !tbaa !1
  %114 = load i64* %arrayidx5.i.i, align 8, !tbaa !1
  %neg.i908.i = xor i64 %114, -1
  %and.i909.i = and i64 %113, %neg.i908.i
  %cmp6.i.i = icmp eq i64 %and.i909.i, 0
  %arrayidx656.i = getelementptr inbounds [59 x [25 x [25 x i32]]]* @may_move_out_cost, i64 0, i64 %indvars.iv984.i, i64 %indvars.iv981.i, i64 %indvars.iv.i
  br i1 %cmp6.i.i, label %if.then643.i, label %if.else650.i

if.then643.i:                                     ; preds = %reg_class_subset_p.exit.i, %reg_class_subset_p.exit.thread.i
  %arrayidx656933.i = phi i32* [ %arrayidx656932.i, %reg_class_subset_p.exit.thread.i ], [ %arrayidx656.i, %reg_class_subset_p.exit.i ]
  store i32 0, i32* %arrayidx656933.i, align 4, !tbaa !5
  br label %for.inc659.i

if.else650.i:                                     ; preds = %reg_class_subset_p.exit.i
  store i32 %cost.2.lcssa.i, i32* %arrayidx656.i, align 4, !tbaa !5
  br label %for.inc659.i

for.inc659.i:                                     ; preds = %if.else650.i, %if.then643.i, %if.then519.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %exitcond.i = icmp eq i64 %indvars.iv.next.i, 25
  br i1 %exitcond.i, label %for.inc689.i, label %for.body513.i

for.body666.i:                                    ; preds = %for.body503.i, %for.body666.i
  %indvars.iv975.i = phi i64 [ %indvars.iv.next976.i, %for.body666.i ], [ 0, %for.body503.i ]
  %arrayidx672.i = getelementptr inbounds [59 x [25 x [25 x i32]]]* @move_cost, i64 0, i64 %indvars.iv984.i, i64 %indvars.iv981.i, i64 %indvars.iv975.i
  store i32 65536, i32* %arrayidx672.i, align 4, !tbaa !5
  %arrayidx678.i = getelementptr inbounds [59 x [25 x [25 x i32]]]* @may_move_in_cost, i64 0, i64 %indvars.iv984.i, i64 %indvars.iv981.i, i64 %indvars.iv975.i
  store i32 65536, i32* %arrayidx678.i, align 4, !tbaa !5
  %arrayidx684.i = getelementptr inbounds [59 x [25 x [25 x i32]]]* @may_move_out_cost, i64 0, i64 %indvars.iv984.i, i64 %indvars.iv981.i, i64 %indvars.iv975.i
  store i32 65536, i32* %arrayidx684.i, align 4, !tbaa !5
  %indvars.iv.next976.i = add nuw nsw i64 %indvars.iv975.i, 1
  %exitcond977.i = icmp eq i64 %indvars.iv.next976.i, 25
  br i1 %exitcond977.i, label %for.inc689.i, label %for.body666.i

for.inc689.i:                                     ; preds = %for.inc659.i, %for.inc659.us.i, %for.body666.i
  %indvars.iv.next982.i = add nuw nsw i64 %indvars.iv981.i, 1
  %exitcond983.i = icmp eq i64 %indvars.iv.next982.i, 25
  br i1 %exitcond983.i, label %for.inc693.i, label %for.body503.i

for.inc693.i:                                     ; preds = %for.inc689.i, %for.body495.i
  %indvars.iv.next985.i = add nuw nsw i64 %indvars.iv984.i, 1
  %exitcond986.i = icmp eq i64 %indvars.iv.next985.i, 59
  br i1 %exitcond986.i, label %for.body.i7, label %for.body495.i

for.body.i7:                                      ; preds = %for.inc693.i, %for.inc.i
  %indvars.iv.i4 = phi i64 [ %indvars.iv.next.i9, %for.inc.i ], [ 0, %for.inc693.i ]
  %115 = trunc i64 %indvars.iv.i4 to i32
  %call.i = tail call i32 @choose_hard_reg_mode(i32 %115, i32 1) #1
  %arrayidx.i5 = getelementptr inbounds [53 x i32]* @reg_raw_mode, i64 0, i64 %indvars.iv.i4
  store i32 %call.i, i32* %arrayidx.i5, align 4, !tbaa !10
  %cmp3.i6 = icmp eq i32 %call.i, 0
  br i1 %cmp3.i6, label %if.then.i, label %for.inc.i

if.then.i:                                        ; preds = %for.body.i7
  %cmp4.i = icmp eq i32 %115, 0
  br i1 %cmp4.i, label %cond.end.i, label %cond.false.i8

cond.false.i8:                                    ; preds = %if.then.i
  %116 = add nsw i64 %indvars.iv.i4, -1
  %arrayidx6.i = getelementptr inbounds [53 x i32]* @reg_raw_mode, i64 0, i64 %116
  br label %cond.end.i

cond.end.i:                                       ; preds = %cond.false.i8, %if.then.i
  %cond.in.i = phi i32* [ %arrayidx6.i, %cond.false.i8 ], [ @word_mode, %if.then.i ]
  %cond.i = load i32* %cond.in.i, align 4
  store i32 %cond.i, i32* %arrayidx.i5, align 4, !tbaa !10
  br label %for.inc.i

for.inc.i:                                        ; preds = %cond.end.i, %for.body.i7
  %indvars.iv.next.i9 = add nuw nsw i64 %indvars.iv.i4, 1
  %exitcond.i10 = icmp eq i64 %indvars.iv.next.i9, 53
  br i1 %exitcond.i10, label %for.body, label %for.body.i7

for.body:                                         ; preds = %for.inc.i, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %for.inc.i ]
  %117 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !12
  %118 = trunc i64 %indvars.iv to i32
  %call = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %118, %struct.rtx_def* %117) #1
  %arrayidx = getelementptr inbounds [59 x %struct.rtx_def*]* @top_of_stack, i64 0, i64 %indvars.iv
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx, align 8, !tbaa !12
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 59
  br i1 %exitcond, label %for.end, label %for.body

for.end:                                          ; preds = %for.body
  tail call void @ggc_add_rtx_root(%struct.rtx_def** getelementptr inbounds ([59 x %struct.rtx_def*]* @top_of_stack, i64 0, i64 0), i32 59) #1
  ret void
}

declare %struct.rtx_def* @gen_rtx_MEM(i32, %struct.rtx_def*) #2

declare void @ggc_add_rtx_root(%struct.rtx_def**, i32) #2

; Function Attrs: nounwind uwtable
define i32 @memory_move_secondary_cost(i32 %mode, i32 %class, i32 %in) #0 {
entry:
  %tobool = icmp ne i32 %in, 0
  %tobool.not = xor i1 %tobool, true
  %class.off = add i32 %class, -10
  %switch = icmp ult i32 %class.off, 3
  %or.cond = and i1 %switch, %tobool.not
  br i1 %or.cond, label %land.lhs.true, label %return

land.lhs.true:                                    ; preds = %entry
  %0 = load i32* @target_flags, align 4, !tbaa !5
  %and = and i32 %0, 33554432
  %tobool4 = icmp eq i32 %and, 0
  %cmp5 = icmp eq i32 %mode, 2
  %or.cond35 = and i1 %tobool4, %cmp5
  br i1 %or.cond35, label %if.end8, label %return

if.end8:                                          ; preds = %land.lhs.true
  br i1 %tobool, label %if.then10, label %if.else11

if.then10:                                        ; preds = %if.end8
  %call = tail call i32 @ix86_register_move_cost(i32 2, i32 8, i32 %class) #1
  br label %if.end13

if.else11:                                        ; preds = %if.end8
  %call12 = tail call i32 @ix86_register_move_cost(i32 2, i32 %class, i32 8) #1
  br label %if.end13

if.end13:                                         ; preds = %if.else11, %if.then10
  %partial_cost.0 = phi i32 [ %call, %if.then10 ], [ %call12, %if.else11 ]
  %cmp14 = icmp eq i32 %class, 8
  br i1 %cmp14, label %return, label %if.end16

if.end16:                                         ; preds = %if.end13
  %call17 = tail call i32 @memory_move_secondary_cost(i32 2, i32 8, i32 %in)
  %add = add nsw i32 %call17, %partial_cost.0
  ret i32 %add

return:                                           ; preds = %land.lhs.true, %entry, %if.end13
  %retval.0 = phi i32 [ %partial_cost.0, %if.end13 ], [ 0, %entry ], [ 0, %land.lhs.true ]
  ret i32 %retval.0
}

declare i32 @ix86_register_move_cost(i32, i32, i32) #2

; Function Attrs: nounwind uwtable
define i32 @choose_hard_reg_mode(i32 %regno, i32 %nregs) #0 {
entry:
  %0 = load i32* getelementptr inbounds ([9 x i32]* @class_narrowest_mode, i64 0, i64 1), align 4, !tbaa !10
  %cmp578 = icmp eq i32 %0, 0
  br i1 %cmp578, label %if.end51, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %1 = and i32 %regno, -8
  %2 = icmp eq i32 %1, 8
  %regno.off533 = add i32 %regno, -21
  %3 = icmp ult i32 %regno.off533, 8
  %or.cond = or i1 %2, %3
  %regno.off534 = add i32 %regno, -45
  %4 = icmp ult i32 %regno.off534, 8
  %or.cond539 = or i1 %or.cond, %4
  %regno.off535 = add i32 %regno, -29
  %5 = icmp ult i32 %regno.off535, 8
  %or.cond541 = or i1 %or.cond539, %5
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %mode.0580 = phi i32 [ %0, %for.body.lr.ph ], [ %conv47, %for.inc ]
  %found_mode.0579 = phi i32 [ 0, %for.body.lr.ph ], [ %found_mode.1, %for.inc ]
  br i1 %or.cond541, label %cond.true, label %cond.false

cond.true:                                        ; preds = %for.body
  %idxprom = sext i32 %mode.0580 to i64
  %arrayidx = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom
  %6 = load i32* %arrayidx, align 4, !tbaa !10
  %cmp14 = icmp eq i32 %6, 5
  br i1 %cmp14, label %cond.end39, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true
  %cmp17 = icmp eq i32 %6, 6
  %phitmp536 = select i1 %cmp17, i32 2, i32 1
  br label %cond.end39

cond.false:                                       ; preds = %for.body
  switch i32 %mode.0580, label %cond.false27 [
    i32 18, label %cond.true19
    i32 24, label %cond.true23
  ]

cond.true19:                                      ; preds = %cond.false
  %7 = load i32* @target_flags, align 4, !tbaa !5
  %and = lshr i32 %7, 25
  %8 = and i32 %and, 1
  %9 = xor i32 %8, 3
  br label %cond.end39

cond.true23:                                      ; preds = %cond.false
  %10 = load i32* @target_flags, align 4, !tbaa !5
  %and24 = lshr i32 %10, 24
  %11 = and i32 %and24, 2
  %12 = xor i32 %11, 6
  br label %cond.end39

cond.false27:                                     ; preds = %cond.false
  %idxprom28 = sext i32 %mode.0580 to i64
  %arrayidx29 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom28
  %13 = load i8* %arrayidx29, align 1, !tbaa !10
  %conv = zext i8 %13 to i32
  %14 = load i32* @target_flags, align 4, !tbaa !5
  %and30 = lshr i32 %14, 23
  %15 = and i32 %and30, 4
  %16 = add i32 %15, 4
  %add = add i32 %conv, -1
  %sub = add i32 %add, %16
  %div = sdiv i32 %sub, %16
  br label %cond.end39

cond.end39:                                       ; preds = %cond.true, %lor.rhs, %cond.true19, %cond.false27, %cond.true23
  %cond40 = phi i32 [ %9, %cond.true19 ], [ %12, %cond.true23 ], [ %div, %cond.false27 ], [ 2, %cond.true ], [ %phitmp536, %lor.rhs ]
  %cmp41 = icmp eq i32 %cond40, %nregs
  br i1 %cmp41, label %land.lhs.true43, label %for.inc

land.lhs.true43:                                  ; preds = %cond.end39
  %call = tail call i32 @ix86_hard_regno_mode_ok(i32 %regno, i32 %mode.0580) #1
  %tobool44 = icmp eq i32 %call, 0
  %found_mode.0.mode.0 = select i1 %tobool44, i32 %found_mode.0579, i32 %mode.0580
  br label %for.inc

for.inc:                                          ; preds = %land.lhs.true43, %cond.end39
  %found_mode.1 = phi i32 [ %found_mode.0579, %cond.end39 ], [ %found_mode.0.mode.0, %land.lhs.true43 ]
  %idxprom45 = sext i32 %mode.0580 to i64
  %arrayidx46 = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom45
  %17 = load i8* %arrayidx46, align 1, !tbaa !10
  %conv47 = zext i8 %17 to i32
  %cmp = icmp eq i8 %17, 0
  br i1 %cmp, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc
  %cmp48 = icmp eq i32 %found_mode.1, 0
  br i1 %cmp48, label %if.end51, label %return

if.end51:                                         ; preds = %entry, %for.end
  %18 = load i32* getelementptr inbounds ([9 x i32]* @class_narrowest_mode, i64 0, i64 2), align 4, !tbaa !10
  %cmp53574 = icmp eq i32 %18, 0
  br i1 %cmp53574, label %if.end139, label %for.body55.lr.ph

for.body55.lr.ph:                                 ; preds = %if.end51
  %19 = and i32 %regno, -8
  %20 = icmp eq i32 %19, 8
  %regno.off528 = add i32 %regno, -21
  %21 = icmp ult i32 %regno.off528, 8
  %or.cond543 = or i1 %20, %21
  %regno.off529 = add i32 %regno, -45
  %22 = icmp ult i32 %regno.off529, 8
  %or.cond545 = or i1 %or.cond543, %22
  %regno.off530 = add i32 %regno, -29
  %23 = icmp ult i32 %regno.off530, 8
  %or.cond547 = or i1 %or.cond545, %23
  br label %for.body55

for.body55:                                       ; preds = %for.body55.lr.ph, %for.inc131
  %mode.1576 = phi i32 [ %18, %for.body55.lr.ph ], [ %conv134, %for.inc131 ]
  %found_mode.2575 = phi i32 [ 0, %for.body55.lr.ph ], [ %found_mode.3, %for.inc131 ]
  br i1 %or.cond547, label %cond.true79, label %cond.false91

cond.true79:                                      ; preds = %for.body55
  %idxprom80 = sext i32 %mode.1576 to i64
  %arrayidx81 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom80
  %24 = load i32* %arrayidx81, align 4, !tbaa !10
  %cmp82 = icmp eq i32 %24, 5
  br i1 %cmp82, label %cond.end122, label %lor.rhs84

lor.rhs84:                                        ; preds = %cond.true79
  %cmp87 = icmp eq i32 %24, 6
  %phitmp531 = select i1 %cmp87, i32 2, i32 1
  br label %cond.end122

cond.false91:                                     ; preds = %for.body55
  switch i32 %mode.1576, label %cond.false105 [
    i32 18, label %cond.true94
    i32 24, label %cond.true101
  ]

cond.true94:                                      ; preds = %cond.false91
  %25 = load i32* @target_flags, align 4, !tbaa !5
  %and95 = lshr i32 %25, 25
  %26 = and i32 %and95, 1
  %27 = xor i32 %26, 3
  br label %cond.end122

cond.true101:                                     ; preds = %cond.false91
  %28 = load i32* @target_flags, align 4, !tbaa !5
  %and102 = lshr i32 %28, 24
  %29 = and i32 %and102, 2
  %30 = xor i32 %29, 6
  br label %cond.end122

cond.false105:                                    ; preds = %cond.false91
  %idxprom106 = sext i32 %mode.1576 to i64
  %arrayidx107 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom106
  %31 = load i8* %arrayidx107, align 1, !tbaa !10
  %conv108 = zext i8 %31 to i32
  %32 = load i32* @target_flags, align 4, !tbaa !5
  %and109 = lshr i32 %32, 23
  %33 = and i32 %and109, 4
  %34 = add i32 %33, 4
  %add112 = add i32 %conv108, -1
  %sub113 = add i32 %add112, %34
  %div117 = sdiv i32 %sub113, %34
  br label %cond.end122

cond.end122:                                      ; preds = %cond.true79, %lor.rhs84, %cond.true94, %cond.false105, %cond.true101
  %cond123 = phi i32 [ %27, %cond.true94 ], [ %30, %cond.true101 ], [ %div117, %cond.false105 ], [ 2, %cond.true79 ], [ %phitmp531, %lor.rhs84 ]
  %cmp124 = icmp eq i32 %cond123, %nregs
  br i1 %cmp124, label %land.lhs.true126, label %for.inc131

land.lhs.true126:                                 ; preds = %cond.end122
  %call127 = tail call i32 @ix86_hard_regno_mode_ok(i32 %regno, i32 %mode.1576) #1
  %tobool128 = icmp eq i32 %call127, 0
  %found_mode.2.mode.1 = select i1 %tobool128, i32 %found_mode.2575, i32 %mode.1576
  br label %for.inc131

for.inc131:                                       ; preds = %land.lhs.true126, %cond.end122
  %found_mode.3 = phi i32 [ %found_mode.2575, %cond.end122 ], [ %found_mode.2.mode.1, %land.lhs.true126 ]
  %idxprom132 = sext i32 %mode.1576 to i64
  %arrayidx133 = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom132
  %35 = load i8* %arrayidx133, align 1, !tbaa !10
  %conv134 = zext i8 %35 to i32
  %cmp53 = icmp eq i8 %35, 0
  br i1 %cmp53, label %for.end135, label %for.body55

for.end135:                                       ; preds = %for.inc131
  %cmp136 = icmp eq i32 %found_mode.3, 0
  br i1 %cmp136, label %if.end139, label %return

if.end139:                                        ; preds = %if.end51, %for.end135
  %36 = load i32* getelementptr inbounds ([9 x i32]* @class_narrowest_mode, i64 0, i64 8), align 4, !tbaa !10
  %cmp141570 = icmp eq i32 %36, 0
  br i1 %cmp141570, label %if.end227, label %for.body143.lr.ph

for.body143.lr.ph:                                ; preds = %if.end139
  %37 = and i32 %regno, -8
  %38 = icmp eq i32 %37, 8
  %regno.off523 = add i32 %regno, -21
  %39 = icmp ult i32 %regno.off523, 8
  %or.cond549 = or i1 %38, %39
  %regno.off524 = add i32 %regno, -45
  %40 = icmp ult i32 %regno.off524, 8
  %or.cond551 = or i1 %or.cond549, %40
  %regno.off525 = add i32 %regno, -29
  %41 = icmp ult i32 %regno.off525, 8
  %or.cond553 = or i1 %or.cond551, %41
  br label %for.body143

for.body143:                                      ; preds = %for.body143.lr.ph, %for.inc219
  %mode.2572 = phi i32 [ %36, %for.body143.lr.ph ], [ %conv222, %for.inc219 ]
  %found_mode.4571 = phi i32 [ 0, %for.body143.lr.ph ], [ %found_mode.5, %for.inc219 ]
  br i1 %or.cond553, label %cond.true167, label %cond.false179

cond.true167:                                     ; preds = %for.body143
  %idxprom168 = sext i32 %mode.2572 to i64
  %arrayidx169 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom168
  %42 = load i32* %arrayidx169, align 4, !tbaa !10
  %cmp170 = icmp eq i32 %42, 5
  br i1 %cmp170, label %cond.end210, label %lor.rhs172

lor.rhs172:                                       ; preds = %cond.true167
  %cmp175 = icmp eq i32 %42, 6
  %phitmp526 = select i1 %cmp175, i32 2, i32 1
  br label %cond.end210

cond.false179:                                    ; preds = %for.body143
  switch i32 %mode.2572, label %cond.false193 [
    i32 18, label %cond.true182
    i32 24, label %cond.true189
  ]

cond.true182:                                     ; preds = %cond.false179
  %43 = load i32* @target_flags, align 4, !tbaa !5
  %and183 = lshr i32 %43, 25
  %44 = and i32 %and183, 1
  %45 = xor i32 %44, 3
  br label %cond.end210

cond.true189:                                     ; preds = %cond.false179
  %46 = load i32* @target_flags, align 4, !tbaa !5
  %and190 = lshr i32 %46, 24
  %47 = and i32 %and190, 2
  %48 = xor i32 %47, 6
  br label %cond.end210

cond.false193:                                    ; preds = %cond.false179
  %idxprom194 = sext i32 %mode.2572 to i64
  %arrayidx195 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom194
  %49 = load i8* %arrayidx195, align 1, !tbaa !10
  %conv196 = zext i8 %49 to i32
  %50 = load i32* @target_flags, align 4, !tbaa !5
  %and197 = lshr i32 %50, 23
  %51 = and i32 %and197, 4
  %52 = add i32 %51, 4
  %add200 = add i32 %conv196, -1
  %sub201 = add i32 %add200, %52
  %div205 = sdiv i32 %sub201, %52
  br label %cond.end210

cond.end210:                                      ; preds = %cond.true167, %lor.rhs172, %cond.true182, %cond.false193, %cond.true189
  %cond211 = phi i32 [ %45, %cond.true182 ], [ %48, %cond.true189 ], [ %div205, %cond.false193 ], [ 2, %cond.true167 ], [ %phitmp526, %lor.rhs172 ]
  %cmp212 = icmp eq i32 %cond211, %nregs
  br i1 %cmp212, label %land.lhs.true214, label %for.inc219

land.lhs.true214:                                 ; preds = %cond.end210
  %call215 = tail call i32 @ix86_hard_regno_mode_ok(i32 %regno, i32 %mode.2572) #1
  %tobool216 = icmp eq i32 %call215, 0
  %found_mode.4.mode.2 = select i1 %tobool216, i32 %found_mode.4571, i32 %mode.2572
  br label %for.inc219

for.inc219:                                       ; preds = %land.lhs.true214, %cond.end210
  %found_mode.5 = phi i32 [ %found_mode.4571, %cond.end210 ], [ %found_mode.4.mode.2, %land.lhs.true214 ]
  %idxprom220 = sext i32 %mode.2572 to i64
  %arrayidx221 = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom220
  %53 = load i8* %arrayidx221, align 1, !tbaa !10
  %conv222 = zext i8 %53 to i32
  %cmp141 = icmp eq i8 %53, 0
  br i1 %cmp141, label %for.end223, label %for.body143

for.end223:                                       ; preds = %for.inc219
  %cmp224 = icmp eq i32 %found_mode.5, 0
  br i1 %cmp224, label %if.end227, label %return

if.end227:                                        ; preds = %if.end139, %for.end223
  %54 = load i32* getelementptr inbounds ([9 x i32]* @class_narrowest_mode, i64 0, i64 7), align 4, !tbaa !10
  %cmp229567 = icmp eq i32 %54, 0
  br i1 %cmp229567, label %for.cond316.preheader, label %for.body231.lr.ph

for.body231.lr.ph:                                ; preds = %if.end227
  %55 = and i32 %regno, -8
  %56 = icmp eq i32 %55, 8
  %regno.off518 = add i32 %regno, -21
  %57 = icmp ult i32 %regno.off518, 8
  %or.cond555 = or i1 %56, %57
  %regno.off519 = add i32 %regno, -45
  %58 = icmp ult i32 %regno.off519, 8
  %or.cond557 = or i1 %or.cond555, %58
  %regno.off520 = add i32 %regno, -29
  %59 = icmp ult i32 %regno.off520, 8
  %or.cond559 = or i1 %or.cond557, %59
  br label %for.body231

for.body231:                                      ; preds = %for.body231.lr.ph, %for.inc307
  %mode.3569 = phi i32 [ %54, %for.body231.lr.ph ], [ %conv310, %for.inc307 ]
  %found_mode.6568 = phi i32 [ 0, %for.body231.lr.ph ], [ %found_mode.7, %for.inc307 ]
  br i1 %or.cond559, label %cond.true255, label %cond.false267

cond.true255:                                     ; preds = %for.body231
  %idxprom256 = sext i32 %mode.3569 to i64
  %arrayidx257 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom256
  %60 = load i32* %arrayidx257, align 4, !tbaa !10
  %cmp258 = icmp eq i32 %60, 5
  br i1 %cmp258, label %cond.end298, label %lor.rhs260

lor.rhs260:                                       ; preds = %cond.true255
  %cmp263 = icmp eq i32 %60, 6
  %phitmp521 = select i1 %cmp263, i32 2, i32 1
  br label %cond.end298

cond.false267:                                    ; preds = %for.body231
  switch i32 %mode.3569, label %cond.false281 [
    i32 18, label %cond.true270
    i32 24, label %cond.true277
  ]

cond.true270:                                     ; preds = %cond.false267
  %61 = load i32* @target_flags, align 4, !tbaa !5
  %and271 = lshr i32 %61, 25
  %62 = and i32 %and271, 1
  %63 = xor i32 %62, 3
  br label %cond.end298

cond.true277:                                     ; preds = %cond.false267
  %64 = load i32* @target_flags, align 4, !tbaa !5
  %and278 = lshr i32 %64, 24
  %65 = and i32 %and278, 2
  %66 = xor i32 %65, 6
  br label %cond.end298

cond.false281:                                    ; preds = %cond.false267
  %idxprom282 = sext i32 %mode.3569 to i64
  %arrayidx283 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom282
  %67 = load i8* %arrayidx283, align 1, !tbaa !10
  %conv284 = zext i8 %67 to i32
  %68 = load i32* @target_flags, align 4, !tbaa !5
  %and285 = lshr i32 %68, 23
  %69 = and i32 %and285, 4
  %70 = add i32 %69, 4
  %add288 = add i32 %conv284, -1
  %sub289 = add i32 %add288, %70
  %div293 = sdiv i32 %sub289, %70
  br label %cond.end298

cond.end298:                                      ; preds = %cond.true255, %lor.rhs260, %cond.true270, %cond.false281, %cond.true277
  %cond299 = phi i32 [ %63, %cond.true270 ], [ %66, %cond.true277 ], [ %div293, %cond.false281 ], [ 2, %cond.true255 ], [ %phitmp521, %lor.rhs260 ]
  %cmp300 = icmp eq i32 %cond299, %nregs
  br i1 %cmp300, label %land.lhs.true302, label %for.inc307

land.lhs.true302:                                 ; preds = %cond.end298
  %call303 = tail call i32 @ix86_hard_regno_mode_ok(i32 %regno, i32 %mode.3569) #1
  %tobool304 = icmp eq i32 %call303, 0
  %found_mode.6.mode.3 = select i1 %tobool304, i32 %found_mode.6568, i32 %mode.3569
  br label %for.inc307

for.inc307:                                       ; preds = %land.lhs.true302, %cond.end298
  %found_mode.7 = phi i32 [ %found_mode.6568, %cond.end298 ], [ %found_mode.6.mode.3, %land.lhs.true302 ]
  %idxprom308 = sext i32 %mode.3569 to i64
  %arrayidx309 = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom308
  %71 = load i8* %arrayidx309, align 1, !tbaa !10
  %conv310 = zext i8 %71 to i32
  %cmp229 = icmp eq i8 %71, 0
  br i1 %cmp229, label %for.end311, label %for.body231

for.end311:                                       ; preds = %for.inc307
  %cmp312 = icmp eq i32 %found_mode.7, 0
  br i1 %cmp312, label %for.cond316.preheader, label %return

for.cond316.preheader:                            ; preds = %if.end227, %for.end311
  %72 = and i32 %regno, -8
  %73 = icmp eq i32 %72, 8
  %regno.off = add i32 %regno, -21
  %74 = icmp ult i32 %regno.off, 8
  %or.cond561 = or i1 %73, %74
  %regno.off515 = add i32 %regno, -45
  %75 = icmp ult i32 %regno.off515, 8
  %or.cond563 = or i1 %or.cond561, %75
  %regno.off516 = add i32 %regno, -29
  %76 = icmp ult i32 %regno.off516, 8
  %or.cond565 = or i1 %or.cond563, %76
  br label %for.body319

for.body319:                                      ; preds = %for.cond316.preheader, %for.inc395
  %indvars.iv = phi i64 [ 52, %for.cond316.preheader ], [ %indvars.iv.next, %for.inc395 ]
  br i1 %or.cond565, label %cond.true343, label %cond.false355

cond.true343:                                     ; preds = %for.body319
  %arrayidx345 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %indvars.iv
  %77 = load i32* %arrayidx345, align 4, !tbaa !10
  %cmp346 = icmp eq i32 %77, 5
  br i1 %cmp346, label %cond.end386, label %lor.rhs348

lor.rhs348:                                       ; preds = %cond.true343
  %cmp351 = icmp eq i32 %77, 6
  %phitmp = select i1 %cmp351, i32 2, i32 1
  br label %cond.end386

cond.false355:                                    ; preds = %for.body319
  %78 = trunc i64 %indvars.iv to i32
  switch i32 %78, label %cond.false369 [
    i32 18, label %cond.true358
    i32 24, label %cond.true365
  ]

cond.true358:                                     ; preds = %cond.false355
  %79 = load i32* @target_flags, align 4, !tbaa !5
  %and359 = lshr i32 %79, 25
  %80 = and i32 %and359, 1
  %81 = xor i32 %80, 3
  br label %cond.end386

cond.true365:                                     ; preds = %cond.false355
  %82 = load i32* @target_flags, align 4, !tbaa !5
  %and366 = lshr i32 %82, 24
  %83 = and i32 %and366, 2
  %84 = xor i32 %83, 6
  br label %cond.end386

cond.false369:                                    ; preds = %cond.false355
  %arrayidx371 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %indvars.iv
  %85 = load i8* %arrayidx371, align 1, !tbaa !10
  %conv372 = zext i8 %85 to i32
  %86 = load i32* @target_flags, align 4, !tbaa !5
  %and373 = lshr i32 %86, 23
  %87 = and i32 %and373, 4
  %88 = add i32 %87, 4
  %add376 = add i32 %conv372, -1
  %sub377 = add i32 %add376, %88
  %div381 = sdiv i32 %sub377, %88
  br label %cond.end386

cond.end386:                                      ; preds = %cond.true343, %lor.rhs348, %cond.true358, %cond.false369, %cond.true365
  %cond387 = phi i32 [ %81, %cond.true358 ], [ %84, %cond.true365 ], [ %div381, %cond.false369 ], [ 2, %cond.true343 ], [ %phitmp, %lor.rhs348 ]
  %cmp388 = icmp eq i32 %cond387, %nregs
  br i1 %cmp388, label %land.lhs.true390, label %for.inc395

land.lhs.true390:                                 ; preds = %cond.end386
  %89 = trunc i64 %indvars.iv to i32
  %call391 = tail call i32 @ix86_hard_regno_mode_ok(i32 %regno, i32 %89) #1
  %tobool392 = icmp eq i32 %call391, 0
  br i1 %tobool392, label %for.inc395, label %return

for.inc395:                                       ; preds = %land.lhs.true390, %cond.end386
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %90 = trunc i64 %indvars.iv.next to i32
  %cmp317 = icmp ult i32 %90, 59
  br i1 %cmp317, label %for.body319, label %return

return:                                           ; preds = %for.inc395, %land.lhs.true390, %for.end311, %for.end223, %for.end135, %for.end
  %retval.0 = phi i32 [ %found_mode.1, %for.end ], [ %found_mode.3, %for.end135 ], [ %found_mode.5, %for.end223 ], [ %found_mode.7, %for.end311 ], [ 0, %for.inc395 ], [ %89, %land.lhs.true390 ]
  ret i32 %retval.0
}

declare i32 @ix86_hard_regno_mode_ok(i32, i32) #2

; Function Attrs: nounwind uwtable
define void @fix_register(i8* %name, i32 %fixed, i32 %call_used) #0 {
entry:
  %call = tail call i32 @decode_reg_name(i8* %name) #1
  %cmp = icmp sgt i32 %call, -1
  br i1 %cmp, label %if.then, label %if.else14

if.then:                                          ; preds = %entry
  %0 = and i32 %call, -2
  %1 = icmp eq i32 %0, 6
  br i1 %1, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %if.then
  %cmp3 = icmp eq i32 %fixed, 0
  %cmp5 = icmp eq i32 %call_used, 0
  %or.cond16 = or i1 %cmp3, %cmp5
  br i1 %or.cond16, label %if.then6, label %if.else

if.then6:                                         ; preds = %land.lhs.true
  %idxprom = sext i32 %call_used to i64
  %idxprom7 = sext i32 %fixed to i64
  %arrayidx8 = getelementptr inbounds [2 x [2 x i8*]]* @fix_register.what_option, i64 0, i64 %idxprom7, i64 %idxprom
  %2 = load i8** %arrayidx8, align 8, !tbaa !12
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([32 x i8]* @.str4, i64 0, i64 0), i8* %name, i8* %2) #1
  br label %if.end15

if.else:                                          ; preds = %land.lhs.true, %if.then
  %conv = trunc i32 %fixed to i8
  %idxprom9 = sext i32 %call to i64
  %arrayidx10 = getelementptr inbounds [53 x i8]* @fixed_regs, i64 0, i64 %idxprom9
  store i8 %conv, i8* %arrayidx10, align 1, !tbaa !10
  %conv11 = trunc i32 %call_used to i8
  %arrayidx13 = getelementptr inbounds [53 x i8]* @call_used_regs, i64 0, i64 %idxprom9
  store i8 %conv11, i8* %arrayidx13, align 1, !tbaa !10
  br label %if.end15

if.else14:                                        ; preds = %entry
  tail call void (i8*, ...)* @warning(i8* getelementptr inbounds ([26 x i8]* @.str5, i64 0, i64 0), i8* %name) #1
  br label %if.end15

if.end15:                                         ; preds = %if.then6, %if.else, %if.else14
  ret void
}

declare i32 @decode_reg_name(i8*) #2

declare void @error(i8*, ...) #2

declare void @warning(i8*, ...) #2

; Function Attrs: nounwind uwtable
define void @globalize_reg(i32 %i) #0 {
entry:
  %idxprom = sext i32 %i to i64
  %arrayidx = getelementptr inbounds [53 x i8]* @fixed_regs, i64 0, i64 %idxprom
  %0 = load i8* %arrayidx, align 1, !tbaa !10
  %cmp = icmp eq i8 %0, 0
  %.b = load i1* @no_global_reg_vars, align 1
  %or.cond = and i1 %cmp, %.b
  br i1 %or.cond, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([55 x i8]* @.str6, i64 0, i64 0)) #1
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %arrayidx3 = getelementptr inbounds [53 x i8]* @global_regs, i64 0, i64 %idxprom
  %1 = load i8* %arrayidx3, align 1, !tbaa !10
  %tobool4 = icmp eq i8 %1, 0
  br i1 %tobool4, label %if.end6, label %if.then5

if.then5:                                         ; preds = %if.end
  tail call void (i8*, ...)* @warning(i8* getelementptr inbounds ([48 x i8]* @.str7, i64 0, i64 0)) #1
  br label %return

if.end6:                                          ; preds = %if.end
  %arrayidx8 = getelementptr inbounds [53 x i8]* @call_used_regs, i64 0, i64 %idxprom
  %2 = load i8* %arrayidx8, align 1, !tbaa !10
  %tobool10 = icmp eq i8 %2, 0
  br i1 %tobool10, label %if.end16, label %land.lhs.true11

land.lhs.true11:                                  ; preds = %if.end6
  %3 = load i8* %arrayidx, align 1, !tbaa !10
  %tobool14 = icmp eq i8 %3, 0
  br i1 %tobool14, label %if.then15, label %if.end16

if.then15:                                        ; preds = %land.lhs.true11
  tail call void (i8*, ...)* @warning(i8* getelementptr inbounds ([58 x i8]* @.str8, i64 0, i64 0)) #1
  br label %if.end16

if.end16:                                         ; preds = %land.lhs.true11, %if.end6, %if.then15
  store i8 1, i8* %arrayidx3, align 1, !tbaa !10
  %4 = load i8* %arrayidx, align 1, !tbaa !10
  %tobool21 = icmp eq i8 %4, 0
  br i1 %tobool21, label %if.end23, label %return

if.end23:                                         ; preds = %if.end16
  %arrayidx25 = getelementptr inbounds [53 x i8]* @call_fixed_regs, i64 0, i64 %idxprom
  store i8 1, i8* %arrayidx25, align 1, !tbaa !10
  store i8 1, i8* %arrayidx8, align 1, !tbaa !10
  store i8 1, i8* %arrayidx, align 1, !tbaa !10
  %5 = load i32* @n_non_fixed_regs, align 4, !tbaa !5
  %dec = add nsw i32 %5, -1
  store i32 %dec, i32* @n_non_fixed_regs, align 4, !tbaa !5
  %sh_prom = zext i32 %i to i64
  %shl = shl i64 1, %sh_prom
  %6 = load i64* @fixed_reg_set, align 8, !tbaa !1
  %or = or i64 %6, %shl
  store i64 %or, i64* @fixed_reg_set, align 8, !tbaa !1
  %7 = load i64* @call_used_reg_set, align 8, !tbaa !1
  %or32 = or i64 %7, %shl
  store i64 %or32, i64* @call_used_reg_set, align 8, !tbaa !1
  %8 = load i64* @call_fixed_reg_set, align 8, !tbaa !1
  %or35 = or i64 %8, %shl
  store i64 %or35, i64* @call_fixed_reg_set, align 8, !tbaa !1
  %9 = load i64* @regs_invalidated_by_call, align 8, !tbaa !1
  %or38 = or i64 %9, %shl
  store i64 %or38, i64* @regs_invalidated_by_call, align 8, !tbaa !1
  br label %return

return:                                           ; preds = %if.end16, %if.end23, %if.then5
  ret void
}

; Function Attrs: nounwind readonly uwtable
define i32 @reg_preferred_class(i32 %regno) #3 {
entry:
  %0 = load %struct.reg_pref** @reg_pref, align 8, !tbaa !12
  %cmp = icmp eq %struct.reg_pref* %0, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %idxprom = sext i32 %regno to i64
  %prefclass = getelementptr inbounds %struct.reg_pref* %0, i64 %idxprom, i32 0
  %1 = load i8* %prefclass, align 1, !tbaa !14
  %conv = sext i8 %1 to i32
  br label %return

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi i32 [ %conv, %if.end ], [ 12, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind readonly uwtable
define i32 @reg_alternate_class(i32 %regno) #3 {
entry:
  %0 = load %struct.reg_pref** @reg_pref, align 8, !tbaa !12
  %cmp = icmp eq %struct.reg_pref* %0, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %idxprom = sext i32 %regno to i64
  %altclass = getelementptr inbounds %struct.reg_pref* %0, i64 %idxprom, i32 1
  %1 = load i8* %altclass, align 1, !tbaa !16
  %conv = sext i8 %1 to i32
  br label %return

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi i32 [ %conv, %if.end ], [ 24, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define void @regclass_init() #0 {
entry:
  store i32 10000, i32* getelementptr inbounds (%struct.costs* @init_cost, i64 0, i32 1), align 4, !tbaa !17
  store <4 x i32> <i32 10000, i32 10000, i32 10000, i32 10000>, <4 x i32>* bitcast (%struct.costs* @init_cost to <4 x i32>*), align 16, !tbaa !5
  store <4 x i32> <i32 10000, i32 10000, i32 10000, i32 10000>, <4 x i32>* bitcast (i32* getelementptr inbounds (%struct.costs* @init_cost, i64 0, i32 0, i64 4) to <4 x i32>*), align 16, !tbaa !5
  store <4 x i32> <i32 10000, i32 10000, i32 10000, i32 10000>, <4 x i32>* bitcast (i32* getelementptr inbounds (%struct.costs* @init_cost, i64 0, i32 0, i64 8) to <4 x i32>*), align 16, !tbaa !5
  store i32 10000, i32* getelementptr inbounds (%struct.costs* @init_cost, i64 0, i32 0, i64 12), align 16, !tbaa !5
  store i32 10000, i32* getelementptr inbounds (%struct.costs* @init_cost, i64 0, i32 0, i64 13), align 4, !tbaa !5
  store i32 10000, i32* getelementptr inbounds (%struct.costs* @init_cost, i64 0, i32 0, i64 14), align 8, !tbaa !5
  store <4 x i32> <i32 10000, i32 10000, i32 10000, i32 10000>, <4 x i32>* bitcast (i32* getelementptr inbounds (%struct.costs* @init_cost, i64 0, i32 0, i64 15) to <4 x i32>*), align 4, !tbaa !5
  store <4 x i32> <i32 10000, i32 10000, i32 10000, i32 10000>, <4 x i32>* bitcast (i32* getelementptr inbounds (%struct.costs* @init_cost, i64 0, i32 0, i64 19) to <4 x i32>*), align 4, !tbaa !5
  store i32 10000, i32* getelementptr inbounds (%struct.costs* @init_cost, i64 0, i32 0, i64 23), align 4, !tbaa !5
  store i32 10000, i32* getelementptr inbounds (%struct.costs* @init_cost, i64 0, i32 0, i64 24), align 16, !tbaa !5
  store %struct.reg_pref* null, %struct.reg_pref** @reg_pref, align 8, !tbaa !12
  store i1 true, i1* @no_global_reg_vars, align 1
  ret void
}

; Function Attrs: nounwind uwtable
define void @regclass(%struct.rtx_def* %f, i32 %nregs, %struct._IO_FILE* %dump) #0 {
entry:
  tail call void @init_recog() #1
  %conv = sext i32 %nregs to i64
  %mul = mul i64 %conv, 104
  %call = tail call noalias i8* @xmalloc(i64 %mul) #1
  %0 = bitcast i8* %call to %struct.costs*
  store %struct.costs* %0, %struct.costs** @costs, align 8, !tbaa !12
  %1 = load i32* @flag_expensive_optimizations, align 4, !tbaa !5
  %cmp282 = icmp slt i32 %1, 0
  br i1 %cmp282, label %for.end196, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %tobool = icmp ne %struct._IO_FILE* %dump, null
  %tobool8273 = icmp eq %struct.rtx_def* %f, null
  %cmp52280 = icmp sgt i32 %nregs, 53
  br label %for.body

for.body:                                         ; preds = %for.inc194, %for.body.lr.ph
  %pass.0283 = phi i32 [ 0, %for.body.lr.ph ], [ %inc195, %for.inc194 ]
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %dump, i8* getelementptr inbounds ([12 x i8]* @.str9, i64 0, i64 0), i32 %pass.0283) #1
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  %2 = load %struct.costs** @costs, align 8, !tbaa !12
  %3 = bitcast %struct.costs* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* %3, i8 0, i64 %mul, i32 1, i1 false)
  %4 = load i32* @optimize, align 4, !tbaa !5
  %tobool5 = icmp eq i32 %4, 0
  br i1 %tobool5, label %if.then6, label %for.cond11.preheader

for.cond11.preheader:                             ; preds = %if.end
  %5 = load i32* @n_basic_blocks, align 4, !tbaa !5
  %cmp12271 = icmp sgt i32 %5, 0
  br i1 %cmp12271, label %for.body14, label %if.end42

if.then6:                                         ; preds = %if.end
  store i32 1000, i32* @frequency, align 4, !tbaa !5
  br i1 %tobool8273, label %if.end42, label %for.body9

for.body9:                                        ; preds = %if.then6, %for.body9
  %insn.0274 = phi %struct.rtx_def* [ %6, %for.body9 ], [ %f, %if.then6 ]
  %call10 = tail call fastcc %struct.rtx_def* @scan_one_insn(%struct.rtx_def* %insn.0274, i32 %pass.0283)
  %arrayidx = getelementptr inbounds %struct.rtx_def* %call10, i64 0, i32 1, i64 2
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %6 = load %struct.rtx_def** %rtx, align 8, !tbaa !12
  %tobool8 = icmp eq %struct.rtx_def* %6, null
  br i1 %tobool8, label %if.end42, label %for.body9

for.body14:                                       ; preds = %for.cond11.preheader, %for.inc40
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc40 ], [ 0, %for.cond11.preheader ]
  %7 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !12
  %data = getelementptr inbounds %struct.varray_head_tag* %7, i64 0, i32 4
  %bb15 = bitcast %union.varray_data_tag* %data to [1 x %struct.basic_block_def*]*
  %arrayidx16 = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb15, i64 0, i64 %indvars.iv
  %8 = load %struct.basic_block_def** %arrayidx16, align 8, !tbaa !12
  %9 = load i32* @optimize_size, align 4, !tbaa !5
  %tobool17 = icmp eq i32 %9, 0
  br i1 %tobool17, label %lor.lhs.false, label %cond.end27

lor.lhs.false:                                    ; preds = %for.body14
  %10 = load i32* @flag_branch_probabilities, align 4, !tbaa !5
  %tobool18 = icmp eq i32 %10, 0
  %11 = load i64* getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0, i32 13), align 8
  %tobool19 = icmp ne i64 %11, 0
  %or.cond = or i1 %tobool18, %tobool19
  br i1 %or.cond, label %cond.false, label %cond.end27

cond.false:                                       ; preds = %lor.lhs.false
  %frequency = getelementptr inbounds %struct.basic_block_def* %8, i64 0, i32 14
  %12 = load i32* %frequency, align 4, !tbaa !19
  %mul20 = mul nsw i32 %12, 1000
  %mul20.off = add i32 %mul20, 9999
  %13 = icmp ugt i32 %mul20.off, 19998
  br i1 %13, label %cond.true22, label %cond.end27

cond.true22:                                      ; preds = %cond.false
  %div = sdiv i32 %mul20, 10000
  br label %cond.end27

cond.end27:                                       ; preds = %for.body14, %cond.true22, %cond.false, %lor.lhs.false
  %cond28 = phi i32 [ 1000, %lor.lhs.false ], [ 1000, %for.body14 ], [ %div, %cond.true22 ], [ 1, %cond.false ]
  store i32 %cond28, i32* @frequency, align 4, !tbaa !5
  %head = getelementptr inbounds %struct.basic_block_def* %8, i64 0, i32 0
  %insn.1267 = load %struct.rtx_def** %head, align 8
  %call30268 = tail call fastcc %struct.rtx_def* @scan_one_insn(%struct.rtx_def* %insn.1267, i32 %pass.0283)
  %end = getelementptr inbounds %struct.basic_block_def* %8, i64 0, i32 1
  %14 = load %struct.rtx_def** %end, align 8, !tbaa !21
  %cmp31269 = icmp eq %struct.rtx_def* %call30268, %14
  br i1 %cmp31269, label %for.inc40, label %for.inc35

for.inc35:                                        ; preds = %cond.end27, %for.inc35
  %call30270 = phi %struct.rtx_def* [ %call30, %for.inc35 ], [ %call30268, %cond.end27 ]
  %arrayidx37 = getelementptr inbounds %struct.rtx_def* %call30270, i64 0, i32 1, i64 2
  %rtx38 = bitcast %union.rtunion_def* %arrayidx37 to %struct.rtx_def**
  %insn.1 = load %struct.rtx_def** %rtx38, align 8
  %call30 = tail call fastcc %struct.rtx_def* @scan_one_insn(%struct.rtx_def* %insn.1, i32 %pass.0283)
  %15 = load %struct.rtx_def** %end, align 8, !tbaa !21
  %cmp31 = icmp eq %struct.rtx_def* %call30, %15
  br i1 %cmp31, label %for.inc40, label %for.inc35

for.inc40:                                        ; preds = %for.inc35, %cond.end27
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %16 = load i32* @n_basic_blocks, align 4, !tbaa !5
  %17 = trunc i64 %indvars.iv.next to i32
  %cmp12 = icmp slt i32 %17, %16
  br i1 %cmp12, label %for.body14, label %if.end42

if.end42:                                         ; preds = %for.inc40, %for.body9, %for.cond11.preheader, %if.then6
  %cmp43 = icmp eq i32 %pass.0283, 0
  br i1 %cmp43, label %if.then45, label %if.end46

if.then45:                                        ; preds = %if.end42
  %18 = load %struct.reg_pref** @reg_pref_buffer, align 8, !tbaa !12
  store %struct.reg_pref* %18, %struct.reg_pref** @reg_pref, align 8, !tbaa !12
  br label %if.end46

if.end46:                                         ; preds = %if.then45, %if.end42
  br i1 %tobool, label %if.then48, label %for.cond51.preheader

if.then48:                                        ; preds = %if.end46
  %19 = load i32* @max_regno, align 4, !tbaa !5
  %cmp39.i = icmp sgt i32 %19, 53
  br i1 %cmp39.i, label %for.body.i, label %dump_regclass.exit

for.body.i:                                       ; preds = %if.then48, %for.inc23.i
  %20 = phi i32 [ %36, %for.inc23.i ], [ %19, %if.then48 ]
  %indvars.iv41.i = phi i64 [ %indvars.iv.next42.i, %for.inc23.i ], [ 53, %if.then48 ]
  %21 = load %struct.varray_head_tag** @reg_n_info, align 8, !tbaa !12
  %data.i = getelementptr inbounds %struct.varray_head_tag* %21, i64 0, i32 4
  %reg.i = bitcast %union.varray_data_tag* %data.i to [1 x %struct.reg_info_def*]*
  %arrayidx.i = getelementptr inbounds [1 x %struct.reg_info_def*]* %reg.i, i64 0, i64 %indvars.iv41.i
  %22 = load %struct.reg_info_def** %arrayidx.i, align 8, !tbaa !12
  %refs.i = getelementptr inbounds %struct.reg_info_def* %22, i64 0, i32 4
  %23 = load i32* %refs.i, align 4, !tbaa !22
  %tobool.i = icmp eq i32 %23, 0
  br i1 %tobool.i, label %for.inc23.i, label %if.then.i

if.then.i:                                        ; preds = %for.body.i
  %24 = trunc i64 %indvars.iv41.i to i32
  %call.i = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %dump, i8* getelementptr inbounds ([21 x i8]* @.str41, i64 0, i64 0), i32 %24) #1
  br label %for.body3.i

for.body3.i:                                      ; preds = %for.inc.i, %if.then.i
  %indvars.iv.i = phi i64 [ 0, %if.then.i ], [ %indvars.iv.next.i, %for.inc.i ]
  %25 = load %struct.function** @cfun, align 8, !tbaa !12
  %emit.i = getelementptr inbounds %struct.function* %25, i64 0, i32 3
  %26 = load %struct.emit_status** %emit.i, align 8, !tbaa !24
  %x_regno_reg_rtx.i = getelementptr inbounds %struct.emit_status* %26, i64 0, i32 12
  %27 = load %struct.rtx_def*** %x_regno_reg_rtx.i, align 8, !tbaa !27
  %arrayidx5.i = getelementptr inbounds %struct.rtx_def** %27, i64 %indvars.iv41.i
  %28 = load %struct.rtx_def** %arrayidx5.i, align 8, !tbaa !12
  %29 = getelementptr inbounds %struct.rtx_def* %28, i64 0, i32 0
  %bf.load.i = load i32* %29, align 8
  %bf.lshr.i = lshr i32 %bf.load.i, 16
  %bf.clear.i = and i32 %bf.lshr.i, 255
  %idxprom6.i = zext i32 %bf.clear.i to i64
  %arrayidx9.i = getelementptr inbounds [25 x [59 x i8]]* @contains_reg_of_mode, i64 0, i64 %indvars.iv.i, i64 %idxprom6.i
  %30 = load i8* %arrayidx9.i, align 1, !tbaa !10
  %tobool10.i = icmp eq i8 %30, 0
  br i1 %tobool10.i, label %for.inc.i, label %if.then11.i

if.then11.i:                                      ; preds = %for.body3.i
  %arrayidx13.i = getelementptr inbounds [25 x i8*]* @dump_regclass.reg_class_names, i64 0, i64 %indvars.iv.i
  %31 = load i8** %arrayidx13.i, align 8, !tbaa !12
  %32 = load %struct.costs** @costs, align 8, !tbaa !12
  %arrayidx17.i = getelementptr inbounds %struct.costs* %32, i64 %indvars.iv41.i, i32 0, i64 %indvars.iv.i
  %33 = load i32* %arrayidx17.i, align 4, !tbaa !5
  %call18.i = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %dump, i8* getelementptr inbounds ([7 x i8]* @.str42, i64 0, i64 0), i8* %31, i32 %33) #1
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then11.i, %for.body3.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %exitcond.i = icmp eq i64 %indvars.iv.next.i, 25
  br i1 %exitcond.i, label %for.end.i, label %for.body3.i

for.end.i:                                        ; preds = %for.inc.i
  %34 = load %struct.costs** @costs, align 8, !tbaa !12
  %mem_cost.i = getelementptr inbounds %struct.costs* %34, i64 %indvars.iv41.i, i32 1
  %35 = load i32* %mem_cost.i, align 4, !tbaa !17
  %call21.i = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %dump, i8* getelementptr inbounds ([9 x i8]* @.str43, i64 0, i64 0), i32 %35) #1
  %.pre.i = load i32* @max_regno, align 4, !tbaa !5
  br label %for.inc23.i

for.inc23.i:                                      ; preds = %for.end.i, %for.body.i
  %36 = phi i32 [ %20, %for.body.i ], [ %.pre.i, %for.end.i ]
  %indvars.iv.next42.i = add nuw nsw i64 %indvars.iv41.i, 1
  %37 = trunc i64 %indvars.iv.next42.i to i32
  %cmp.i = icmp slt i32 %37, %36
  br i1 %cmp.i, label %for.body.i, label %dump_regclass.exit

dump_regclass.exit:                               ; preds = %for.inc23.i, %if.then48
  %fputc = tail call i32 @fputc(i32 10, %struct._IO_FILE* %dump)
  br label %for.cond51.preheader

for.cond51.preheader:                             ; preds = %dump_regclass.exit, %if.end46
  br i1 %cmp52280, label %for.body54.lr.ph, label %for.inc194

for.body54.lr.ph:                                 ; preds = %for.cond51.preheader
  %cmp102 = icmp eq i32 %pass.0283, 1
  %or.cond197 = or i1 %cmp102, %tobool
  %or.cond197.not = xor i1 %or.cond197, true
  br label %for.body54

for.body54:                                       ; preds = %for.inc191, %for.body54.lr.ph
  %indvars.iv291 = phi i64 [ 53, %for.body54.lr.ph ], [ %indvars.iv.next292, %for.inc191 ]
  %38 = load %struct.costs** @costs, align 8, !tbaa !12
  %39 = load i32* @optimize, align 4, !tbaa !5
  %tobool57 = icmp eq i32 %39, 0
  br i1 %tobool57, label %for.cond65.preheader, label %land.lhs.true58

land.lhs.true58:                                  ; preds = %for.body54
  %40 = load %struct.varray_head_tag** @reg_n_info, align 8, !tbaa !12
  %data60 = getelementptr inbounds %struct.varray_head_tag* %40, i64 0, i32 4
  %reg = bitcast %union.varray_data_tag* %data60 to [1 x %struct.reg_info_def*]*
  %arrayidx61 = getelementptr inbounds [1 x %struct.reg_info_def*]* %reg, i64 0, i64 %indvars.iv291
  %41 = load %struct.reg_info_def** %arrayidx61, align 8, !tbaa !12
  %refs = getelementptr inbounds %struct.reg_info_def* %41, i64 0, i32 4
  %42 = load i32* %refs, align 4, !tbaa !22
  %tobool62 = icmp eq i32 %42, 0
  br i1 %tobool62, label %for.inc191, label %for.cond65.preheader

for.cond65.preheader:                             ; preds = %land.lhs.true58, %for.body54
  %43 = load %struct.function** @cfun, align 8, !tbaa !12
  %emit = getelementptr inbounds %struct.function* %43, i64 0, i32 3
  %44 = load %struct.emit_status** %emit, align 8, !tbaa !24
  %x_regno_reg_rtx = getelementptr inbounds %struct.emit_status* %44, i64 0, i32 12
  %45 = load %struct.rtx_def*** %x_regno_reg_rtx, align 8, !tbaa !27
  %arrayidx70 = getelementptr inbounds %struct.rtx_def** %45, i64 %indvars.iv291
  %46 = load %struct.rtx_def** %arrayidx70, align 8, !tbaa !12
  %47 = getelementptr inbounds %struct.rtx_def* %46, i64 0, i32 0
  %bf.load = load i32* %47, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %idxprom71 = zext i32 %bf.clear to i64
  br label %for.body68

for.body68:                                       ; preds = %for.cond65.preheader, %for.inc100
  %indvars.iv287 = phi i64 [ 23, %for.cond65.preheader ], [ %indvars.iv.next288, %for.inc100 ]
  %best.0276 = phi i32 [ 24, %for.cond65.preheader ], [ %best.1, %for.inc100 ]
  %best_cost.0275 = phi i32 [ 1073741823, %for.cond65.preheader ], [ %best_cost.1, %for.inc100 ]
  %arrayidx74 = getelementptr inbounds [25 x [59 x i8]]* @contains_reg_of_mode, i64 0, i64 %indvars.iv287, i64 %idxprom71
  %48 = load i8* %arrayidx74, align 1, !tbaa !10
  %tobool75 = icmp eq i8 %48, 0
  br i1 %tobool75, label %for.inc100, label %if.else77

if.else77:                                        ; preds = %for.body68
  %arrayidx79 = getelementptr inbounds %struct.costs* %38, i64 %indvars.iv291, i32 0, i64 %indvars.iv287
  %49 = load i32* %arrayidx79, align 4, !tbaa !5
  %cmp80 = icmp slt i32 %49, %best_cost.0275
  %50 = trunc i64 %indvars.iv287 to i32
  br i1 %cmp80, label %for.inc100, label %if.else86

if.else86:                                        ; preds = %if.else77
  %cmp90 = icmp eq i32 %49, %best_cost.0275
  br i1 %cmp90, label %if.then92, label %for.inc100

if.then92:                                        ; preds = %if.else86
  %idxprom94 = sext i32 %best.0276 to i64
  %arrayidx96 = getelementptr inbounds [25 x [25 x i32]]* @reg_class_subunion, i64 0, i64 %idxprom94, i64 %indvars.iv287
  %51 = load i32* %arrayidx96, align 4, !tbaa !10
  br label %for.inc100

for.inc100:                                       ; preds = %if.else77, %for.body68, %if.else86, %if.then92
  %best_cost.1 = phi i32 [ %best_cost.0275, %if.then92 ], [ %best_cost.0275, %if.else86 ], [ %best_cost.0275, %for.body68 ], [ %49, %if.else77 ]
  %best.1 = phi i32 [ %51, %if.then92 ], [ %best.0276, %if.else86 ], [ %best.0276, %for.body68 ], [ %50, %if.else77 ]
  %indvars.iv.next288 = add nsw i64 %indvars.iv287, -1
  %52 = trunc i64 %indvars.iv.next288 to i32
  %cmp66 = icmp sgt i32 %52, 0
  br i1 %cmp66, label %for.body68, label %for.end101

for.end101:                                       ; preds = %for.inc100
  %53 = load i32* @flag_expensive_optimizations, align 4
  %tobool107 = icmp ne i32 %53, 0
  %or.cond198 = and i1 %tobool107, %or.cond197.not
  br i1 %or.cond198, label %if.end138, label %for.cond109.preheader

for.cond109.preheader:                            ; preds = %for.end101
  %mem_cost = getelementptr inbounds %struct.costs* %38, i64 %indvars.iv291, i32 1
  %54 = load i32* %mem_cost, align 4, !tbaa !17
  br label %for.body112

for.body112:                                      ; preds = %for.inc135, %for.cond109.preheader
  %indvars.iv289 = phi i64 [ 0, %for.cond109.preheader ], [ %indvars.iv.next290, %for.inc135 ]
  %alt.0278 = phi i32 [ 0, %for.cond109.preheader ], [ %alt.1, %for.inc135 ]
  %arrayidx115 = getelementptr inbounds %struct.costs* %38, i64 %indvars.iv291, i32 0, i64 %indvars.iv289
  %55 = load i32* %arrayidx115, align 4, !tbaa !5
  %cmp116 = icmp slt i32 %55, %54
  br i1 %cmp116, label %land.lhs.true118, label %for.inc135

land.lhs.true118:                                 ; preds = %for.body112
  %idxprom120 = sext i32 %alt.0278 to i64
  %arrayidx122 = getelementptr inbounds [25 x [25 x i32]]* @reg_class_subunion, i64 0, i64 %idxprom120, i64 %indvars.iv289
  %56 = load i32* %arrayidx122, align 4, !tbaa !10
  %idxprom123 = sext i32 %56 to i64
  %arrayidx124 = getelementptr inbounds [25 x i32]* @reg_class_size, i64 0, i64 %idxprom123
  %57 = load i32* %arrayidx124, align 4, !tbaa !5
  %arrayidx126 = getelementptr inbounds [25 x i32]* @reg_class_size, i64 0, i64 %idxprom120
  %58 = load i32* %arrayidx126, align 4, !tbaa !5
  %cmp127 = icmp ugt i32 %57, %58
  %.alt.0 = select i1 %cmp127, i32 %56, i32 %alt.0278
  br label %for.inc135

for.inc135:                                       ; preds = %land.lhs.true118, %for.body112
  %alt.1 = phi i32 [ %alt.0278, %for.body112 ], [ %.alt.0, %land.lhs.true118 ]
  %indvars.iv.next290 = add nuw nsw i64 %indvars.iv289, 1
  %exitcond = icmp eq i64 %indvars.iv.next290, 25
  br i1 %exitcond, label %if.end138, label %for.body112

if.end138:                                        ; preds = %for.inc135, %for.end101
  %alt.2 = phi i32 [ 0, %for.end101 ], [ %alt.1, %for.inc135 ]
  %cmp139 = icmp eq i32 %alt.2, %best.1
  %.alt.2 = select i1 %cmp139, i32 0, i32 %alt.2
  br i1 %tobool, label %land.lhs.true144, label %if.end182

land.lhs.true144:                                 ; preds = %if.end138
  %59 = load %struct.reg_pref** @reg_pref, align 8, !tbaa !12
  %prefclass = getelementptr inbounds %struct.reg_pref* %59, i64 %indvars.iv291, i32 0
  %60 = load i8* %prefclass, align 1, !tbaa !14
  %conv147 = sext i8 %60 to i32
  %cmp148 = icmp eq i32 %conv147, %best.1
  br i1 %cmp148, label %lor.lhs.false150, label %if.then156

lor.lhs.false150:                                 ; preds = %land.lhs.true144
  %altclass = getelementptr inbounds %struct.reg_pref* %59, i64 %indvars.iv291, i32 1
  %61 = load i8* %altclass, align 1, !tbaa !16
  %conv153 = sext i8 %61 to i32
  %cmp154 = icmp eq i32 %conv153, %.alt.2
  br i1 %cmp154, label %if.end182, label %if.then156

if.then156:                                       ; preds = %lor.lhs.false150, %land.lhs.true144
  %62 = trunc i64 %indvars.iv291 to i32
  %call157 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %dump, i8* getelementptr inbounds ([14 x i8]* @.str36, i64 0, i64 0), i32 %62) #1
  %cmp158 = icmp eq i32 %.alt.2, 24
  %cmp161 = icmp eq i32 %best.1, 24
  %or.cond199 = or i1 %cmp158, %cmp161
  br i1 %or.cond199, label %if.then163, label %if.else167

if.then163:                                       ; preds = %if.then156
  %idxprom164 = sext i32 %best.1 to i64
  %arrayidx165 = getelementptr inbounds [25 x i8*]* @dump_regclass.reg_class_names, i64 0, i64 %idxprom164
  %63 = load i8** %arrayidx165, align 8, !tbaa !12
  %call166 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %dump, i8* getelementptr inbounds ([10 x i8]* @.str37, i64 0, i64 0), i8* %63) #1
  br label %if.end182

if.else167:                                       ; preds = %if.then156
  %cmp168 = icmp eq i32 %.alt.2, 0
  %idxprom171 = sext i32 %best.1 to i64
  %arrayidx172 = getelementptr inbounds [25 x i8*]* @dump_regclass.reg_class_names, i64 0, i64 %idxprom171
  %64 = load i8** %arrayidx172, align 8, !tbaa !12
  br i1 %cmp168, label %if.then170, label %if.else174

if.then170:                                       ; preds = %if.else167
  %call173 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %dump, i8* getelementptr inbounds ([18 x i8]* @.str38, i64 0, i64 0), i8* %64) #1
  br label %if.end182

if.else174:                                       ; preds = %if.else167
  %idxprom177 = sext i32 %.alt.2 to i64
  %arrayidx178 = getelementptr inbounds [25 x i8*]* @dump_regclass.reg_class_names, i64 0, i64 %idxprom177
  %65 = load i8** %arrayidx178, align 8, !tbaa !12
  %call179 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %dump, i8* getelementptr inbounds ([19 x i8]* @.str39, i64 0, i64 0), i8* %64, i8* %65) #1
  br label %if.end182

if.end182:                                        ; preds = %lor.lhs.false150, %if.then163, %if.else174, %if.then170, %if.end138
  %conv183 = trunc i32 %best.1 to i8
  %66 = load %struct.reg_pref** @reg_pref, align 8, !tbaa !12
  %prefclass186 = getelementptr inbounds %struct.reg_pref* %66, i64 %indvars.iv291, i32 0
  store i8 %conv183, i8* %prefclass186, align 1, !tbaa !14
  %conv187 = trunc i32 %.alt.2 to i8
  %altclass190 = getelementptr inbounds %struct.reg_pref* %66, i64 %indvars.iv291, i32 1
  store i8 %conv187, i8* %altclass190, align 1, !tbaa !16
  br label %for.inc191

for.inc191:                                       ; preds = %land.lhs.true58, %if.end182
  %indvars.iv.next292 = add nuw nsw i64 %indvars.iv291, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next292 to i32
  %exitcond293 = icmp eq i32 %lftr.wideiv, %nregs
  br i1 %exitcond293, label %for.inc194, label %for.body54

for.inc194:                                       ; preds = %for.inc191, %for.cond51.preheader
  %inc195 = add nsw i32 %pass.0283, 1
  %67 = load i32* @flag_expensive_optimizations, align 4, !tbaa !5
  %cmp = icmp slt i32 %pass.0283, %67
  br i1 %cmp, label %for.body, label %for.cond.for.end196_crit_edge

for.cond.for.end196_crit_edge:                    ; preds = %for.inc194
  %.pre = load %struct.costs** @costs, align 8, !tbaa !12
  br label %for.end196

for.end196:                                       ; preds = %for.cond.for.end196_crit_edge, %entry
  %68 = phi %struct.costs* [ %.pre, %for.cond.for.end196_crit_edge ], [ %0, %entry ]
  %69 = bitcast %struct.costs* %68 to i8*
  tail call void @free(i8* %69)
  ret void
}

declare void @init_recog() #2

declare noalias i8* @xmalloc(i64) #2

; Function Attrs: nounwind
declare i32 @fprintf(%struct._IO_FILE* nocapture, i8* nocapture readonly, ...) #4

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @scan_one_insn(%struct.rtx_def* %insn, i32 %pass) #0 {
entry:
  %constraints.i = alloca [30 x i8*], align 16
  %modes.i = alloca [30 x i32], align 16
  %xconstraints.i = alloca [30 x i8*], align 16
  %op_costs = alloca [30 x %struct.costs], align 16
  %0 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %1 = bitcast [30 x %struct.costs]* %op_costs to i8*
  call void @llvm.lifetime.start(i64 3120, i8* %1) #1
  %idxprom429 = zext i32 %bf.clear to i64
  %arrayidx = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom429
  %2 = load i8* %arrayidx, align 1, !tbaa !10
  %cmp = icmp eq i8 %2, 105
  br i1 %cmp, label %if.end, label %cleanup

if.end:                                           ; preds = %entry
  %arrayidx2 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx2 to %struct.rtx_def**
  %3 = load %struct.rtx_def** %rtx, align 8, !tbaa !12
  %4 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 0
  %bf.load3 = load i32* %4, align 8
  %bf.clear4 = and i32 %bf.load3, 65535
  %5 = and i32 %bf.load3, 65534
  %6 = icmp eq i32 %5, 48
  %cmp10 = icmp eq i32 %bf.clear4, 40
  %or.cond383 = or i1 %6, %cmp10
  %cmp13 = icmp eq i32 %bf.clear4, 44
  %or.cond384 = or i1 %or.cond383, %cmp13
  %cmp16 = icmp eq i32 %bf.clear4, 45
  %or.cond385 = or i1 %or.cond384, %cmp16
  br i1 %or.cond385, label %cleanup, label %cond.true

cond.true:                                        ; preds = %if.end
  %cmp32 = icmp eq i32 %bf.clear4, 47
  br i1 %cmp32, label %cond.end42, label %cond.false

cond.false:                                       ; preds = %cond.true
  %call = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* %insn, %struct.rtx_def* %3) #1
  br label %cond.end42

cond.end42:                                       ; preds = %cond.true, %cond.false
  %cond43 = phi %struct.rtx_def* [ %call, %cond.false ], [ %3, %cond.true ]
  tail call void @extract_insn(%struct.rtx_def* %insn) #1
  %cmp44 = icmp eq %struct.rtx_def* %cond43, null
  br i1 %cmp44, label %if.end94, label %land.lhs.true

land.lhs.true:                                    ; preds = %cond.end42
  %fld46 = getelementptr inbounds %struct.rtx_def* %cond43, i64 0, i32 1
  %rtx48 = bitcast [1 x %union.rtunion_def]* %fld46 to %struct.rtx_def**
  %7 = load %struct.rtx_def** %rtx48, align 8, !tbaa !12
  %8 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 0
  %bf.load49 = load i32* %8, align 8
  %bf.clear50 = and i32 %bf.load49, 65535
  %cmp51 = icmp eq i32 %bf.clear50, 61
  br i1 %cmp51, label %land.lhs.true53, label %if.end94

land.lhs.true53:                                  ; preds = %land.lhs.true
  %arrayidx55 = getelementptr inbounds %struct.rtx_def* %cond43, i64 0, i32 1, i64 1
  %rtx56 = bitcast %union.rtunion_def* %arrayidx55 to %struct.rtx_def**
  %9 = load %struct.rtx_def** %rtx56, align 8, !tbaa !12
  %10 = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 0
  %bf.load57 = load i32* %10, align 8
  %bf.clear58 = and i32 %bf.load57, 65535
  %cmp59 = icmp eq i32 %bf.clear58, 66
  br i1 %cmp59, label %land.lhs.true61, label %if.end94

land.lhs.true61:                                  ; preds = %land.lhs.true53
  %call62 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn, i32 3, %struct.rtx_def* null) #1
  %cmp63 = icmp eq %struct.rtx_def* %call62, null
  br i1 %cmp63, label %if.end94, label %land.lhs.true65

land.lhs.true65:                                  ; preds = %land.lhs.true61
  %arrayidx67 = getelementptr inbounds %struct.rtx_def* %call62, i64 0, i32 1, i64 0
  %rtx68 = bitcast %union.rtunion_def* %arrayidx67 to %struct.rtx_def**
  %11 = load %struct.rtx_def** %rtx68, align 8, !tbaa !12
  %12 = getelementptr inbounds %struct.rtx_def* %11, i64 0, i32 0
  %bf.load69 = load i32* %12, align 8
  %bf.clear70 = and i32 %bf.load69, 65535
  %cmp71 = icmp eq i32 %bf.clear70, 66
  br i1 %cmp71, label %if.then73, label %if.end94

if.then73:                                        ; preds = %land.lhs.true65
  %13 = load %struct.rtx_def** %rtx48, align 8, !tbaa !12
  %14 = getelementptr inbounds %struct.rtx_def* %13, i64 0, i32 0
  %bf.load77 = load i32* %14, align 8
  %bf.lshr = lshr i32 %bf.load77, 16
  %bf.clear78 = and i32 %bf.lshr, 255
  %call79 = tail call i32 @ix86_memory_move_cost(i32 %bf.clear78, i32 12, i32 1) #1
  %15 = load i32* @frequency, align 4, !tbaa !5
  %mul = mul nsw i32 %15, %call79
  %16 = load %struct.rtx_def** %rtx48, align 8, !tbaa !12
  %arrayidx84 = getelementptr inbounds %struct.rtx_def* %16, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx84 to i32*
  %17 = load i32* %rtuint, align 4, !tbaa !5
  %idxprom85 = zext i32 %17 to i64
  %18 = load %struct.costs** @costs, align 8, !tbaa !12
  %mem_cost = getelementptr inbounds %struct.costs* %18, i64 %idxprom85, i32 1
  %19 = load i32* %mem_cost, align 4, !tbaa !17
  %sub = sub nsw i32 %19, %mul
  store i32 %sub, i32* %mem_cost, align 4, !tbaa !17
  %20 = load %struct.rtx_def** %rtx56, align 8, !tbaa !12
  %arrayidx91 = getelementptr inbounds %struct.rtx_def* %20, i64 0, i32 1, i64 0
  %rtx92 = bitcast %union.rtunion_def* %arrayidx91 to %struct.rtx_def**
  %21 = load %struct.rtx_def** %rtx92, align 8, !tbaa !12
  %22 = load i32* @frequency, align 4, !tbaa !5
  %mul93 = shl nsw i32 %22, 1
  tail call fastcc void @record_address_regs(%struct.rtx_def* %21, i32 12, i32 %mul93)
  br label %cleanup

if.end94:                                         ; preds = %land.lhs.true61, %cond.end42, %land.lhs.true65, %land.lhs.true53, %land.lhs.true
  %cmp95 = icmp eq i32 %pass, 0
  %23 = load i32* @optimize, align 4
  %tobool = icmp ne i32 %23, 0
  %or.cond386 = and i1 %cmp95, %tobool
  %24 = load i8* getelementptr inbounds (%struct.recog_data* @recog_data, i64 0, i32 7), align 4
  %cmp100 = icmp sgt i8 %24, 2
  %or.cond = and i1 %or.cond386, %cmp100
  br i1 %or.cond, label %land.lhs.true102, label %if.end331

land.lhs.true102:                                 ; preds = %if.end94
  %25 = load i8** getelementptr inbounds (%struct.recog_data* @recog_data, i64 0, i32 2, i64 1), align 8, !tbaa !12
  %26 = load i8* %25, align 1, !tbaa !10
  %cmp105 = icmp eq i8 %26, 48
  br i1 %cmp105, label %land.lhs.true107, label %if.end331

land.lhs.true107:                                 ; preds = %land.lhs.true102
  %arrayidx108 = getelementptr inbounds i8* %25, i64 1
  %27 = load i8* %arrayidx108, align 1, !tbaa !10
  %cmp110 = icmp eq i8 %27, 0
  br i1 %cmp110, label %land.lhs.true112, label %if.end331

land.lhs.true112:                                 ; preds = %land.lhs.true107
  %28 = load %struct.rtx_def** getelementptr inbounds (%struct.recog_data* @recog_data, i64 0, i32 0, i64 1), align 8, !tbaa !12
  %29 = getelementptr inbounds %struct.rtx_def* %28, i64 0, i32 0
  %bf.load113 = load i32* %29, align 8
  %bf.clear114 = and i32 %bf.load113, 65535
  switch i32 %bf.clear114, label %if.end331 [
    i32 67, label %land.lhs.true152
    i32 68, label %land.lhs.true152
    i32 54, label %land.lhs.true152
    i32 55, label %land.lhs.true152
    i32 58, label %land.lhs.true152
    i32 134, label %land.lhs.true152
    i32 56, label %land.lhs.true152
    i32 140, label %land.lhs.true152
  ]

land.lhs.true152:                                 ; preds = %land.lhs.true112, %land.lhs.true112, %land.lhs.true112, %land.lhs.true112, %land.lhs.true112, %land.lhs.true112, %land.lhs.true112, %land.lhs.true112
  %30 = load %struct.rtx_def** getelementptr inbounds (%struct.recog_data* @recog_data, i64 0, i32 0, i64 0), align 8
  %call153 = tail call i32 @rtx_equal_p(%struct.rtx_def* %30, %struct.rtx_def* %28) #1
  %tobool154 = icmp eq i32 %call153, 0
  br i1 %tobool154, label %land.lhs.true155, label %if.end331

land.lhs.true155:                                 ; preds = %land.lhs.true152
  %31 = load %struct.rtx_def** getelementptr inbounds (%struct.recog_data* @recog_data, i64 0, i32 0, i64 0), align 8, !tbaa !12
  %32 = load %struct.rtx_def** getelementptr inbounds (%struct.recog_data* @recog_data, i64 0, i32 0, i64 2), align 8, !tbaa !12
  %call156 = tail call i32 @rtx_equal_p(%struct.rtx_def* %31, %struct.rtx_def* %32) #1
  %tobool157 = icmp eq i32 %call156, 0
  br i1 %tobool157, label %land.lhs.true158, label %if.end331

land.lhs.true158:                                 ; preds = %land.lhs.true155
  %33 = load %struct.rtx_def** getelementptr inbounds (%struct.recog_data* @recog_data, i64 0, i32 0, i64 0), align 8, !tbaa !12
  %34 = getelementptr inbounds %struct.rtx_def* %33, i64 0, i32 0
  %bf.load159 = load i32* %34, align 8
  %bf.clear160 = and i32 %bf.load159, 65535
  %cmp161 = icmp eq i32 %bf.clear160, 61
  br i1 %cmp161, label %land.lhs.true163, label %if.end331

land.lhs.true163:                                 ; preds = %land.lhs.true158
  %bf.lshr165 = lshr i32 %bf.load159, 16
  %bf.clear166 = and i32 %bf.lshr165, 255
  %35 = load i32* getelementptr inbounds (%struct.recog_data* @recog_data, i64 0, i32 3, i64 1), align 4, !tbaa !10
  %cmp167 = icmp eq i32 %bf.clear166, %35
  br i1 %cmp167, label %if.then226, label %lor.lhs.false169

lor.lhs.false169:                                 ; preds = %land.lhs.true163
  switch i32 %bf.clear166, label %lor.lhs.false192 [
    i32 3, label %land.lhs.true201
    i32 4, label %land.lhs.true201
    i32 2, label %land.lhs.true187
  ]

land.lhs.true187:                                 ; preds = %lor.lhs.false169
  %36 = load i32* @target_flags, align 4, !tbaa !5
  %and = and i32 %36, 33554432
  %tobool188 = icmp eq i32 %and, 0
  br i1 %tobool188, label %lor.lhs.false189, label %land.lhs.true201

lor.lhs.false189:                                 ; preds = %land.lhs.true187
  %37 = load i32* @x86_partial_reg_stall, align 4, !tbaa !5
  %38 = load i32* @ix86_cpu, align 4, !tbaa !10
  %shl = shl i32 1, %38
  %and190 = and i32 %shl, %37
  %tobool191 = icmp eq i32 %and190, 0
  br i1 %tobool191, label %land.lhs.true201, label %lor.lhs.false192

lor.lhs.false192:                                 ; preds = %lor.lhs.false169, %lor.lhs.false189
  %bf.clear195 = and i32 %bf.load159, 16711680
  %cmp196 = icmp eq i32 %bf.clear195, 327680
  br i1 %cmp196, label %land.lhs.true198, label %if.end331

land.lhs.true198:                                 ; preds = %lor.lhs.false192
  %39 = load i32* @target_flags, align 4, !tbaa !5
  %and199 = and i32 %39, 33554432
  %tobool200 = icmp eq i32 %and199, 0
  br i1 %tobool200, label %if.end331, label %land.lhs.true201

land.lhs.true201:                                 ; preds = %lor.lhs.false169, %lor.lhs.false169, %lor.lhs.false189, %land.lhs.true187, %land.lhs.true198
  %.off = add i32 %35, -3
  %40 = icmp ult i32 %.off, 2
  br i1 %40, label %if.then226, label %lor.lhs.false207

lor.lhs.false207:                                 ; preds = %land.lhs.true201
  %bf.clear210 = and i32 %bf.load159, 16711680
  %cmp211 = icmp eq i32 %bf.clear210, 131072
  br i1 %cmp211, label %land.lhs.true213, label %lor.lhs.false220

land.lhs.true213:                                 ; preds = %lor.lhs.false207
  %41 = load i32* @target_flags, align 4, !tbaa !5
  %and214 = and i32 %41, 33554432
  %tobool215 = icmp eq i32 %and214, 0
  br i1 %tobool215, label %lor.lhs.false216, label %if.then226

lor.lhs.false216:                                 ; preds = %land.lhs.true213
  %42 = load i32* @x86_partial_reg_stall, align 4, !tbaa !5
  %43 = load i32* @ix86_cpu, align 4, !tbaa !10
  %shl217 = shl i32 1, %43
  %and218 = and i32 %shl217, %42
  %tobool219 = icmp eq i32 %and218, 0
  br i1 %tobool219, label %if.then226, label %lor.lhs.false220

lor.lhs.false220:                                 ; preds = %lor.lhs.false216, %lor.lhs.false207
  %cmp221 = icmp eq i32 %35, 5
  br i1 %cmp221, label %land.lhs.true223, label %if.end331

land.lhs.true223:                                 ; preds = %lor.lhs.false220
  %44 = load i32* @target_flags, align 4, !tbaa !5
  %and224 = and i32 %44, 33554432
  %tobool225 = icmp eq i32 %and224, 0
  br i1 %tobool225, label %if.end331, label %if.then226

if.then226:                                       ; preds = %lor.lhs.false216, %land.lhs.true213, %land.lhs.true223, %land.lhs.true201, %land.lhs.true163
  %call227 = tail call %struct.rtx_def* @prev_real_insn(%struct.rtx_def* %insn) #1
  %45 = load i32* getelementptr inbounds (%struct.recog_data* @recog_data, i64 0, i32 3, i64 1), align 4, !tbaa !10
  %46 = load %struct.rtx_def** getelementptr inbounds (%struct.recog_data* @recog_data, i64 0, i32 0, i64 0), align 8, !tbaa !12
  %call228 = tail call %struct.rtx_def* @gen_lowpart(i32 %45, %struct.rtx_def* %46) #1
  %47 = load %struct.rtx_def** getelementptr inbounds (%struct.recog_data* @recog_data, i64 0, i32 0, i64 1), align 8, !tbaa !12
  %call229 = tail call %struct.rtx_def* @gen_move_insn(%struct.rtx_def* %call228, %struct.rtx_def* %47) #1
  %call230 = tail call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %call229, %struct.rtx_def* %insn) #1
  %cmp231 = icmp eq %struct.rtx_def* %call227, null
  br i1 %cmp231, label %for.cond.preheader, label %lor.lhs.false233

lor.lhs.false233:                                 ; preds = %if.then226
  %48 = getelementptr inbounds %struct.rtx_def* %call227, i64 0, i32 0
  %bf.load234 = load i32* %48, align 8
  %bf.clear235 = and i32 %bf.load234, 65535
  %cmp236 = icmp eq i32 %bf.clear235, 33
  br i1 %cmp236, label %for.cond.preheader, label %if.end252

for.cond.preheader:                               ; preds = %lor.lhs.false233, %if.then226
  %49 = load i32* @n_basic_blocks, align 4, !tbaa !5
  %cmp239440 = icmp sgt i32 %49, 0
  br i1 %cmp239440, label %for.body, label %if.end252

for.body:                                         ; preds = %for.cond.preheader, %for.inc
  %indvars.iv447 = phi i64 [ %indvars.iv.next448, %for.inc ], [ 0, %for.cond.preheader ]
  %50 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !12
  %data = getelementptr inbounds %struct.varray_head_tag* %50, i64 0, i32 4
  %bb = bitcast %union.varray_data_tag* %data to [1 x %struct.basic_block_def*]*
  %arrayidx242 = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb, i64 0, i64 %indvars.iv447
  %51 = load %struct.basic_block_def** %arrayidx242, align 8, !tbaa !12
  %head = getelementptr inbounds %struct.basic_block_def* %51, i64 0, i32 0
  %52 = load %struct.rtx_def** %head, align 8, !tbaa !29
  %cmp243 = icmp eq %struct.rtx_def* %52, %insn
  br i1 %cmp243, label %if.then245, label %for.inc

if.then245:                                       ; preds = %for.body
  store %struct.rtx_def* %call230, %struct.rtx_def** %head, align 8, !tbaa !29
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.then245
  %indvars.iv.next448 = add nuw nsw i64 %indvars.iv447, 1
  %53 = trunc i64 %indvars.iv.next448 to i32
  %cmp239 = icmp slt i32 %53, %49
  br i1 %cmp239, label %for.body, label %if.end252

if.end252:                                        ; preds = %for.inc, %for.cond.preheader, %lor.lhs.false233
  %54 = load %struct.rtx_def** getelementptr inbounds (%struct.recog_data* @recog_data, i64 0, i32 0, i64 0), align 8, !tbaa !12
  %arrayidx254 = getelementptr inbounds %struct.rtx_def* %54, i64 0, i32 1, i64 0
  %rtuint255 = bitcast %union.rtunion_def* %arrayidx254 to i32*
  %55 = load i32* %rtuint255, align 4, !tbaa !5
  %idxprom256 = zext i32 %55 to i64
  %56 = load %struct.varray_head_tag** @reg_n_info, align 8, !tbaa !12
  %data257 = getelementptr inbounds %struct.varray_head_tag* %56, i64 0, i32 4
  %reg = bitcast %union.varray_data_tag* %data257 to [1 x %struct.reg_info_def*]*
  %arrayidx258 = getelementptr inbounds [1 x %struct.reg_info_def*]* %reg, i64 0, i64 %idxprom256
  %57 = load %struct.reg_info_def** %arrayidx258, align 8, !tbaa !12
  %sets = getelementptr inbounds %struct.reg_info_def* %57, i64 0, i32 3
  %58 = load i32* %sets, align 4, !tbaa !30
  %inc259 = add nsw i32 %58, 1
  store i32 %inc259, i32* %sets, align 4, !tbaa !30
  %59 = load i32* %rtuint255, align 4, !tbaa !5
  %idxprom263 = zext i32 %59 to i64
  %arrayidx266 = getelementptr inbounds [1 x %struct.reg_info_def*]* %reg, i64 0, i64 %idxprom263
  %60 = load %struct.reg_info_def** %arrayidx266, align 8, !tbaa !12
  %refs = getelementptr inbounds %struct.reg_info_def* %60, i64 0, i32 4
  %61 = load i32* %refs, align 4, !tbaa !22
  %inc267 = add nsw i32 %61, 1
  store i32 %inc267, i32* %refs, align 4, !tbaa !22
  %62 = load i32* @frequency, align 4, !tbaa !5
  %63 = load i32* %rtuint255, align 4, !tbaa !5
  %idxprom271 = zext i32 %63 to i64
  %arrayidx274 = getelementptr inbounds [1 x %struct.reg_info_def*]* %reg, i64 0, i64 %idxprom271
  %64 = load %struct.reg_info_def** %arrayidx274, align 8, !tbaa !12
  %freq = getelementptr inbounds %struct.reg_info_def* %64, i64 0, i32 5
  %65 = load i32* %freq, align 4, !tbaa !31
  %add = add nsw i32 %65, %62
  store i32 %add, i32* %freq, align 4, !tbaa !31
  %66 = load %struct.rtx_def*** getelementptr inbounds (%struct.recog_data* @recog_data, i64 0, i32 1, i64 1), align 8, !tbaa !12
  store %struct.rtx_def* %54, %struct.rtx_def** %66, align 8, !tbaa !12
  %67 = load %struct.rtx_def** getelementptr inbounds (%struct.recog_data* @recog_data, i64 0, i32 0, i64 0), align 8, !tbaa !12
  %arrayidx276 = getelementptr inbounds %struct.rtx_def* %67, i64 0, i32 1, i64 0
  %rtuint277 = bitcast %union.rtunion_def* %arrayidx276 to i32*
  %68 = load i32* %rtuint277, align 4, !tbaa !5
  %idxprom278 = zext i32 %68 to i64
  %69 = load %struct.varray_head_tag** @reg_n_info, align 8, !tbaa !12
  %data279 = getelementptr inbounds %struct.varray_head_tag* %69, i64 0, i32 4
  %reg280 = bitcast %union.varray_data_tag* %data279 to [1 x %struct.reg_info_def*]*
  %arrayidx281 = getelementptr inbounds [1 x %struct.reg_info_def*]* %reg280, i64 0, i64 %idxprom278
  %70 = load %struct.reg_info_def** %arrayidx281, align 8, !tbaa !12
  %refs282 = getelementptr inbounds %struct.reg_info_def* %70, i64 0, i32 4
  %71 = load i32* %refs282, align 4, !tbaa !22
  %inc283 = add nsw i32 %71, 1
  store i32 %inc283, i32* %refs282, align 4, !tbaa !22
  %72 = load i32* @frequency, align 4, !tbaa !5
  %73 = load i32* %rtuint277, align 4, !tbaa !5
  %idxprom287 = zext i32 %73 to i64
  %arrayidx290 = getelementptr inbounds [1 x %struct.reg_info_def*]* %reg280, i64 0, i64 %idxprom287
  %74 = load %struct.reg_info_def** %arrayidx290, align 8, !tbaa !12
  %freq291 = getelementptr inbounds %struct.reg_info_def* %74, i64 0, i32 5
  %75 = load i32* %freq291, align 4, !tbaa !31
  %add292 = add nsw i32 %75, %72
  store i32 %add292, i32* %freq291, align 4, !tbaa !31
  %76 = load i8* getelementptr inbounds (%struct.recog_data* @recog_data, i64 0, i32 8), align 1, !tbaa !32
  %cmp296438 = icmp sgt i8 %76, 0
  br i1 %cmp296438, label %for.body298.lr.ph, label %for.end327

for.body298.lr.ph:                                ; preds = %if.end252
  %77 = sext i8 %76 to i64
  br label %for.body298

for.body298:                                      ; preds = %for.body298.lr.ph, %for.cond295.backedge
  %78 = phi %struct.rtx_def* [ %67, %for.body298.lr.ph ], [ %80, %for.cond295.backedge ]
  %indvars.iv445 = phi i64 [ %77, %for.body298.lr.ph ], [ %indvars.iv.next446, %for.cond295.backedge ]
  %indvars.iv.next446 = add nsw i64 %indvars.iv445, -1
  %arrayidx300 = getelementptr inbounds %struct.recog_data* @recog_data, i64 0, i32 6, i64 %indvars.iv.next446
  %79 = load i8* %arrayidx300, align 1, !tbaa !10
  %cmp302 = icmp eq i8 %79, 1
  br i1 %cmp302, label %if.then304, label %for.cond295.backedge

for.cond295.backedge:                             ; preds = %for.body298, %if.then304
  %80 = phi %struct.rtx_def* [ %78, %for.body298 ], [ %83, %if.then304 ]
  %81 = trunc i64 %indvars.iv.next446 to i32
  %cmp296 = icmp sgt i32 %81, 0
  br i1 %cmp296, label %for.body298, label %for.end327

if.then304:                                       ; preds = %for.body298
  %arrayidx306 = getelementptr inbounds %struct.recog_data* @recog_data, i64 0, i32 5, i64 %indvars.iv.next446
  %82 = load %struct.rtx_def*** %arrayidx306, align 8, !tbaa !12
  store %struct.rtx_def* %78, %struct.rtx_def** %82, align 8, !tbaa !12
  %83 = load %struct.rtx_def** getelementptr inbounds (%struct.recog_data* @recog_data, i64 0, i32 0, i64 0), align 8, !tbaa !12
  %arrayidx308 = getelementptr inbounds %struct.rtx_def* %83, i64 0, i32 1, i64 0
  %rtuint309 = bitcast %union.rtunion_def* %arrayidx308 to i32*
  %84 = load i32* %rtuint309, align 4, !tbaa !5
  %idxprom310 = zext i32 %84 to i64
  %85 = load %struct.varray_head_tag** @reg_n_info, align 8, !tbaa !12
  %data311 = getelementptr inbounds %struct.varray_head_tag* %85, i64 0, i32 4
  %reg312 = bitcast %union.varray_data_tag* %data311 to [1 x %struct.reg_info_def*]*
  %arrayidx313 = getelementptr inbounds [1 x %struct.reg_info_def*]* %reg312, i64 0, i64 %idxprom310
  %86 = load %struct.reg_info_def** %arrayidx313, align 8, !tbaa !12
  %refs314 = getelementptr inbounds %struct.reg_info_def* %86, i64 0, i32 4
  %87 = load i32* %refs314, align 4, !tbaa !22
  %inc315 = add nsw i32 %87, 1
  store i32 %inc315, i32* %refs314, align 4, !tbaa !22
  %88 = load i32* @frequency, align 4, !tbaa !5
  %89 = load i32* %rtuint309, align 4, !tbaa !5
  %idxprom319 = zext i32 %89 to i64
  %arrayidx322 = getelementptr inbounds [1 x %struct.reg_info_def*]* %reg312, i64 0, i64 %idxprom319
  %90 = load %struct.reg_info_def** %arrayidx322, align 8, !tbaa !12
  %freq323 = getelementptr inbounds %struct.reg_info_def* %90, i64 0, i32 5
  %91 = load i32* %freq323, align 4, !tbaa !31
  %add324 = add nsw i32 %91, %88
  store i32 %add324, i32* %freq323, align 4, !tbaa !31
  br label %for.cond295.backedge

for.end327:                                       ; preds = %for.cond295.backedge, %if.end252
  %arrayidx329 = getelementptr inbounds %struct.rtx_def* %call230, i64 0, i32 1, i64 1
  %rtx330 = bitcast %union.rtunion_def* %arrayidx329 to %struct.rtx_def**
  %92 = load %struct.rtx_def** %rtx330, align 8, !tbaa !12
  br label %cleanup

if.end331:                                        ; preds = %land.lhs.true112, %land.lhs.true223, %land.lhs.true198, %land.lhs.true155, %land.lhs.true152, %lor.lhs.false220, %lor.lhs.false192, %land.lhs.true158, %land.lhs.true107, %land.lhs.true102, %if.end94
  %arraydecay = getelementptr inbounds [30 x %struct.costs]* %op_costs, i64 0, i64 0
  %93 = load %struct.reg_pref** @reg_pref, align 8, !tbaa !12
  %94 = bitcast [30 x i8*]* %constraints.i to i8*
  %95 = bitcast [30 x i32]* %modes.i to i8*
  %96 = bitcast [30 x i8*]* %xconstraints.i to i8*
  call void @llvm.lifetime.start(i64 240, i8* %94) #1
  call void @llvm.lifetime.start(i64 120, i8* %95) #1
  %97 = load i32* bitcast (i8* getelementptr inbounds (%struct.recog_data* @recog_data, i64 0, i32 7) to i32*), align 4
  %98 = trunc i32 %97 to i8
  %cmp134.i = icmp sgt i8 %98, 0
  br i1 %cmp134.i, label %for.body12.lr.ph.i, label %for.cond51.preheader.i

for.body12.lr.ph.i:                               ; preds = %if.end331
  %sext150.i = shl i32 %97, 24
  %conv.i = ashr exact i32 %sext150.i, 24
  %99 = icmp sgt i32 %sext150.i, 16777216
  %conv.op.i = add i32 %conv.i, -1
  %100 = zext i32 %conv.op.i to i64
  %101 = select i1 %99, i64 %100, i64 0
  %102 = shl nuw nsw i64 %101, 3
  %103 = add i64 %102, 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %94, i8* bitcast (i8** getelementptr inbounds (%struct.recog_data* @recog_data, i64 0, i32 2, i64 0) to i8*), i64 %103, i32 8, i1 false) #1
  %104 = shl nuw nsw i64 %101, 2
  %105 = add i64 %104, 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %95, i8* bitcast (i32* getelementptr inbounds (%struct.recog_data* @recog_data, i64 0, i32 3, i64 0) to i8*), i64 %105, i32 8, i1 false) #1
  br label %for.body12.i

for.cond8.for.cond51.preheader_crit_edge.i:       ; preds = %for.inc48.i
  %106 = trunc i32 %120 to i8
  br label %for.cond51.preheader.i

for.cond51.preheader.i:                           ; preds = %for.cond8.for.cond51.preheader_crit_edge.i, %if.end331
  %107 = phi i32 [ %120, %for.cond8.for.cond51.preheader_crit_edge.i ], [ %97, %if.end331 ]
  %108 = phi i8 [ %106, %for.cond8.for.cond51.preheader_crit_edge.i ], [ %98, %if.end331 ]
  %109 = lshr i32 %107, 16
  %sext.i = shl i32 %107, 24
  %conv52126.i = ashr exact i32 %sext.i, 24
  %sub127.i = add nsw i32 %conv52126.i, -1
  %cmp53128.i = icmp sgt i32 %sub127.i, 0
  %arraydecay.i = getelementptr inbounds [30 x i32]* %modes.i, i64 0, i64 0
  br i1 %cmp53128.i, label %for.body55.lr.ph.i, label %record_operand_costs.exit

for.body55.lr.ph.i:                               ; preds = %for.cond51.preheader.i
  %arraydecay86.i = getelementptr inbounds [30 x i8*]* %xconstraints.i, i64 0, i64 0
  br label %for.body55.i

for.body12.i:                                     ; preds = %for.inc48.i, %for.body12.lr.ph.i
  %indvars.iv138.i = phi i64 [ 0, %for.body12.lr.ph.i ], [ %indvars.iv.next139.i, %for.inc48.i ]
  %arrayidx14.i = getelementptr inbounds [30 x %struct.costs]* %op_costs, i64 0, i64 %indvars.iv138.i
  %110 = bitcast %struct.costs* %arrayidx14.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %110, i8* bitcast (%struct.costs* @init_cost to i8*), i64 104, i32 8, i1 false) #1, !tbaa.struct !34
  %arrayidx16.i = getelementptr inbounds %struct.recog_data* @recog_data, i64 0, i32 0, i64 %indvars.iv138.i
  %111 = load %struct.rtx_def** %arrayidx16.i, align 8, !tbaa !12
  %112 = getelementptr inbounds %struct.rtx_def* %111, i64 0, i32 0
  %bf.load.i = load i32* %112, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  %cmp17.i = icmp eq i32 %bf.clear.i, 63
  br i1 %cmp17.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %for.body12.i
  %arrayidx21.i = getelementptr inbounds %struct.rtx_def* %111, i64 0, i32 1, i64 0
  %rtx.i = bitcast %union.rtunion_def* %arrayidx21.i to %struct.rtx_def**
  %113 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !12
  store %struct.rtx_def* %113, %struct.rtx_def** %arrayidx16.i, align 8, !tbaa !12
  %.phi.trans.insert.i = getelementptr inbounds %struct.rtx_def* %113, i64 0, i32 0
  %bf.load26.pre.i = load i32* %.phi.trans.insert.i, align 8
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %for.body12.i
  %bf.load26.i = phi i32 [ %bf.load26.pre.i, %if.then.i ], [ %bf.load.i, %for.body12.i ]
  %114 = phi %struct.rtx_def* [ %113, %if.then.i ], [ %111, %for.body12.i ]
  %bf.clear27.i = and i32 %bf.load26.i, 65535
  %cmp28.i = icmp eq i32 %bf.clear27.i, 66
  br i1 %cmp28.i, label %if.then30.i, label %if.else.i

if.then30.i:                                      ; preds = %if.end.i
  %arrayidx34.i = getelementptr inbounds %struct.rtx_def* %114, i64 0, i32 1, i64 0
  %rtx35.i = bitcast %union.rtunion_def* %arrayidx34.i to %struct.rtx_def**
  %115 = load %struct.rtx_def** %rtx35.i, align 8, !tbaa !12
  %116 = load i32* @frequency, align 4, !tbaa !5
  %mul.i = shl nsw i32 %116, 1
  tail call fastcc void @record_address_regs(%struct.rtx_def* %115, i32 12, i32 %mul.i) #1
  br label %for.inc48.i

if.else.i:                                        ; preds = %if.end.i
  %arrayidx37.i = getelementptr inbounds [30 x i8*]* %constraints.i, i64 0, i64 %indvars.iv138.i
  %117 = load i8** %arrayidx37.i, align 8, !tbaa !12
  %118 = load i8* %117, align 1, !tbaa !10
  %cmp40.i = icmp eq i8 %118, 112
  br i1 %cmp40.i, label %if.then42.i, label %for.inc48.i

if.then42.i:                                      ; preds = %if.else.i
  %119 = load i32* @frequency, align 4, !tbaa !5
  %mul45.i = shl nsw i32 %119, 1
  tail call fastcc void @record_address_regs(%struct.rtx_def* %114, i32 12, i32 %mul45.i) #1
  br label %for.inc48.i

for.inc48.i:                                      ; preds = %if.then42.i, %if.else.i, %if.then30.i
  %indvars.iv.next139.i = add nuw nsw i64 %indvars.iv138.i, 1
  %120 = load i32* bitcast (i8* getelementptr inbounds (%struct.recog_data* @recog_data, i64 0, i32 7) to i32*), align 4
  %sext149.i = shl i32 %120, 24
  %conv9.i = ashr exact i32 %sext149.i, 24
  %121 = trunc i64 %indvars.iv.next139.i to i32
  %cmp10.i = icmp slt i32 %121, %conv9.i
  br i1 %cmp10.i, label %for.body12.i, label %for.cond8.for.cond51.preheader_crit_edge.i

for.body55.i:                                     ; preds = %for.inc88.i, %for.body55.lr.ph.i
  %122 = phi i32 [ %107, %for.body55.lr.ph.i ], [ %134, %for.inc88.i ]
  %123 = phi i32 [ %109, %for.body55.lr.ph.i ], [ %137, %for.inc88.i ]
  %124 = phi i8 [ %108, %for.body55.lr.ph.i ], [ %135, %for.inc88.i ]
  %indvars.iv.i = phi i64 [ 0, %for.body55.lr.ph.i ], [ %indvars.iv.next.pre-phi.i, %for.inc88.i ]
  %arrayidx57.i = getelementptr inbounds [30 x i8*]* %constraints.i, i64 0, i64 %indvars.iv.i
  %125 = load i8** %arrayidx57.i, align 8, !tbaa !12
  %126 = load i8* %125, align 1, !tbaa !10
  %cmp60.i = icmp eq i8 %126, 37
  br i1 %cmp60.i, label %if.then62.i, label %for.body55.for.inc88_crit_edge.i

for.body55.for.inc88_crit_edge.i:                 ; preds = %for.body55.i
  %indvars.iv.next.pre.i = add nuw nsw i64 %indvars.iv.i, 1
  br label %for.inc88.i

if.then62.i:                                      ; preds = %for.body55.i
  call void @llvm.lifetime.start(i64 240, i8* %96) #1
  %cmp65124.i = icmp sgt i8 %124, 0
  br i1 %cmp65124.i, label %for.body67.lr.ph.i, label %for.end74.i

for.body67.lr.ph.i:                               ; preds = %if.then62.i
  %sext148.i = shl i32 %122, 24
  %conv64.i = ashr exact i32 %sext148.i, 24
  %127 = icmp sgt i32 %sext148.i, 16777216
  %conv64.op.i = add i32 %conv64.i, -1
  %128 = zext i32 %conv64.op.i to i64
  %.op.i = shl nuw nsw i64 %128, 3
  %.op.op.i = add i64 %.op.i, 8
  %129 = select i1 %127, i64 %.op.op.i, i64 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %96, i8* %94, i64 %129, i32 16, i1 false) #1
  %130 = lshr i32 %122, 16
  br label %for.end74.i

for.end74.i:                                      ; preds = %for.body67.lr.ph.i, %if.then62.i
  %131 = phi i32 [ %130, %for.body67.lr.ph.i ], [ %123, %if.then62.i ]
  %132 = add nsw i64 %indvars.iv.i, 1
  %arrayidx76.i = getelementptr inbounds [30 x i8*]* %constraints.i, i64 0, i64 %132
  %133 = load i8** %arrayidx76.i, align 8, !tbaa !12
  %arrayidx78.i = getelementptr inbounds [30 x i8*]* %xconstraints.i, i64 0, i64 %indvars.iv.i
  store i8* %133, i8** %arrayidx78.i, align 8, !tbaa !12
  %arrayidx83.i = getelementptr inbounds [30 x i8*]* %xconstraints.i, i64 0, i64 %132
  store i8* %125, i8** %arrayidx83.i, align 8, !tbaa !12
  %sext147.i = shl i32 %131, 24
  %conv84.i = ashr exact i32 %sext147.i, 24
  %sext = shl i32 %122, 24
  %conv85.i = ashr exact i32 %sext, 24
  call fastcc void @record_reg_classes(i32 %conv84.i, i32 %conv85.i, i32* %arraydecay.i, i8** %arraydecay86.i, %struct.rtx_def* %insn, %struct.costs* %arraydecay, %struct.reg_pref* %93) #1
  call void @llvm.lifetime.end(i64 240, i8* %96) #1
  %.pre.i = load i32* bitcast (i8* getelementptr inbounds (%struct.recog_data* @recog_data, i64 0, i32 7) to i32*), align 4
  br label %for.inc88.i

for.inc88.i:                                      ; preds = %for.end74.i, %for.body55.for.inc88_crit_edge.i
  %indvars.iv.next.pre-phi.i = phi i64 [ %indvars.iv.next.pre.i, %for.body55.for.inc88_crit_edge.i ], [ %132, %for.end74.i ]
  %134 = phi i32 [ %122, %for.body55.for.inc88_crit_edge.i ], [ %.pre.i, %for.end74.i ]
  %135 = trunc i32 %134 to i8
  %sext146.i = shl i32 %134, 24
  %conv52.i = ashr exact i32 %sext146.i, 24
  %sub.i = add nsw i32 %conv52.i, -1
  %136 = trunc i64 %indvars.iv.next.pre-phi.i to i32
  %cmp53.i = icmp slt i32 %136, %sub.i
  %137 = lshr i32 %134, 16
  br i1 %cmp53.i, label %for.body55.i, label %record_operand_costs.exit

record_operand_costs.exit:                        ; preds = %for.inc88.i, %for.cond51.preheader.i
  %138 = phi i32 [ %109, %for.cond51.preheader.i ], [ %137, %for.inc88.i ]
  %conv52.lcssa.i = phi i32 [ %conv52126.i, %for.cond51.preheader.i ], [ %conv52.i, %for.inc88.i ]
  %sext145.i = shl i32 %138, 24
  %conv91.i = ashr exact i32 %sext145.i, 24
  %arraydecay94.i = getelementptr inbounds [30 x i8*]* %constraints.i, i64 0, i64 0
  call fastcc void @record_reg_classes(i32 %conv91.i, i32 %conv52.lcssa.i, i32* %arraydecay.i, i8** %arraydecay94.i, %struct.rtx_def* %insn, %struct.costs* %arraydecay, %struct.reg_pref* %93) #1
  call void @llvm.lifetime.end(i64 120, i8* %95) #1
  call void @llvm.lifetime.end(i64 240, i8* %94) #1
  %139 = load i8* getelementptr inbounds (%struct.recog_data* @recog_data, i64 0, i32 7), align 4, !tbaa !35
  %cmp334435 = icmp sgt i8 %139, 0
  br i1 %cmp334435, label %for.body336, label %cleanup

for.body336:                                      ; preds = %record_operand_costs.exit, %for.inc380
  %140 = phi i8 [ %151, %for.inc380 ], [ %139, %record_operand_costs.exit ]
  %indvars.iv443 = phi i64 [ %indvars.iv.next444, %for.inc380 ], [ 0, %record_operand_costs.exit ]
  %arrayidx338 = getelementptr inbounds %struct.recog_data* @recog_data, i64 0, i32 0, i64 %indvars.iv443
  %141 = load %struct.rtx_def** %arrayidx338, align 8, !tbaa !12
  %142 = getelementptr inbounds %struct.rtx_def* %141, i64 0, i32 0
  %bf.load339 = load i32* %142, align 8
  %bf.clear340 = and i32 %bf.load339, 65535
  %cmp341 = icmp eq i32 %bf.clear340, 61
  br i1 %cmp341, label %land.lhs.true343, label %for.inc380

land.lhs.true343:                                 ; preds = %for.body336
  %arrayidx347 = getelementptr inbounds %struct.rtx_def* %141, i64 0, i32 1, i64 0
  %rtuint348 = bitcast %union.rtunion_def* %arrayidx347 to i32*
  %143 = load i32* %rtuint348, align 4, !tbaa !5
  %cmp349 = icmp ugt i32 %143, 52
  br i1 %cmp349, label %if.then351, label %for.inc380

if.then351:                                       ; preds = %land.lhs.true343
  %idxprom357 = sext i32 %143 to i64
  %144 = load %struct.costs** @costs, align 8, !tbaa !12
  %mem_cost361 = getelementptr inbounds [30 x %struct.costs]* %op_costs, i64 0, i64 %indvars.iv443, i32 1
  %145 = load i32* %mem_cost361, align 4, !tbaa !17
  %146 = load i32* @frequency, align 4, !tbaa !5
  %mul362 = mul nsw i32 %146, %145
  %mem_cost363 = getelementptr inbounds %struct.costs* %144, i64 %idxprom357, i32 1
  %147 = load i32* %mem_cost363, align 4, !tbaa !17
  %add364 = add nsw i32 %147, %mul362
  store i32 %add364, i32* %mem_cost363, align 4, !tbaa !17
  br label %for.body368

for.body368:                                      ; preds = %for.body368, %if.then351
  %indvars.iv = phi i64 [ 0, %if.then351 ], [ %indvars.iv.next, %for.body368 ]
  %arrayidx370 = getelementptr inbounds [30 x %struct.costs]* %op_costs, i64 0, i64 %indvars.iv443, i32 0, i64 %indvars.iv
  %148 = load i32* %arrayidx370, align 4, !tbaa !5
  %149 = load i32* @frequency, align 4, !tbaa !5
  %mul371 = mul nsw i32 %149, %148
  %arrayidx374 = getelementptr inbounds %struct.costs* %144, i64 %idxprom357, i32 0, i64 %indvars.iv
  %150 = load i32* %arrayidx374, align 4, !tbaa !5
  %add375 = add nsw i32 %150, %mul371
  store i32 %add375, i32* %arrayidx374, align 4, !tbaa !5
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 25
  br i1 %exitcond, label %for.inc380.loopexit, label %for.body368

for.inc380.loopexit:                              ; preds = %for.body368
  %.pre463 = load i8* getelementptr inbounds (%struct.recog_data* @recog_data, i64 0, i32 7), align 4, !tbaa !35
  br label %for.inc380

for.inc380:                                       ; preds = %for.inc380.loopexit, %for.body336, %land.lhs.true343
  %151 = phi i8 [ %.pre463, %for.inc380.loopexit ], [ %140, %for.body336 ], [ %140, %land.lhs.true343 ]
  %indvars.iv.next444 = add nuw nsw i64 %indvars.iv443, 1
  %conv333 = sext i8 %151 to i32
  %152 = trunc i64 %indvars.iv.next444 to i32
  %cmp334 = icmp slt i32 %152, %conv333
  br i1 %cmp334, label %for.body336, label %cleanup

cleanup:                                          ; preds = %for.inc380, %record_operand_costs.exit, %if.end, %entry, %for.end327, %if.then73
  %retval.0 = phi %struct.rtx_def* [ %insn, %if.then73 ], [ %92, %for.end327 ], [ %insn, %entry ], [ %insn, %if.end ], [ %insn, %record_operand_costs.exit ], [ %insn, %for.inc380 ]
  call void @llvm.lifetime.end(i64 3120, i8* %1) #1
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) #4

; Function Attrs: nounwind uwtable
define void @allocate_reg_info(i64 %num_regs, i32 %new_p, i32 %renumber_p) #0 {
entry:
  %tobool = icmp ne i32 %new_p, 0
  %0 = load i32* @reg_n_max, align 4, !tbaa !5
  %1 = zext i32 %0 to i64
  %conv = select i1 %tobool, i64 0, i64 %1
  %2 = load i64* @regno_allocated, align 8, !tbaa !36
  %cmp = icmp ult i64 %2, %num_regs
  br i1 %cmp, label %if.then, label %if.end23

if.then:                                          ; preds = %entry
  %div = udiv i64 %num_regs, 20
  %add = add i64 %div, %num_regs
  store i64 %add, i64* @regno_allocated, align 8, !tbaa !36
  %mul = shl i64 %add, 1
  %3 = load %struct.varray_head_tag** @reg_n_info, align 8, !tbaa !12
  %tobool2 = icmp eq %struct.varray_head_tag* %3, null
  br i1 %tobool2, label %if.then3, label %if.else

if.then3:                                         ; preds = %if.then
  %call = tail call %struct.varray_head_tag* @varray_init(i64 %add, i64 8, i8* getelementptr inbounds ([11 x i8]* @.str40, i64 0, i64 0)) #1
  store %struct.varray_head_tag* %call, %struct.varray_head_tag** @reg_n_info, align 8, !tbaa !12
  %call4 = tail call noalias i8* @xmalloc(i64 %mul) #1
  %4 = bitcast i8* %call4 to i16*
  store i16* %4, i16** @renumber, align 8, !tbaa !12
  %5 = load i64* @regno_allocated, align 8, !tbaa !36
  %mul5 = shl i64 %5, 1
  %call6 = tail call noalias i8* @xmalloc(i64 %mul5) #1
  %6 = bitcast i8* %call6 to %struct.reg_pref*
  store %struct.reg_pref* %6, %struct.reg_pref** @reg_pref_buffer, align 8, !tbaa !12
  br label %if.end17

if.else:                                          ; preds = %if.then
  %call7 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %3, i64 %add) #1
  store %struct.varray_head_tag* %call7, %struct.varray_head_tag** @reg_n_info, align 8, !tbaa !12
  %7 = load i16** @renumber, align 8, !tbaa !12
  %8 = bitcast i16* %7 to i8*
  br i1 %tobool, label %if.then9, label %if.else13

if.then9:                                         ; preds = %if.else
  tail call void @free(i8* %8)
  %9 = load %struct.reg_pref** @reg_pref, align 8, !tbaa !12
  %10 = getelementptr inbounds %struct.reg_pref* %9, i64 0, i32 0
  tail call void @free(i8* %10)
  %call10 = tail call noalias i8* @xmalloc(i64 %mul) #1
  %11 = bitcast i8* %call10 to i16*
  store i16* %11, i16** @renumber, align 8, !tbaa !12
  %12 = load i64* @regno_allocated, align 8, !tbaa !36
  %mul11 = shl i64 %12, 1
  %call12 = tail call noalias i8* @xmalloc(i64 %mul11) #1
  %13 = bitcast i8* %call12 to %struct.reg_pref*
  store %struct.reg_pref* %13, %struct.reg_pref** @reg_pref_buffer, align 8, !tbaa !12
  br label %if.end17

if.else13:                                        ; preds = %if.else
  %call14 = tail call i8* @xrealloc(i8* %8, i64 %mul) #1
  %14 = bitcast i8* %call14 to i16*
  store i16* %14, i16** @renumber, align 8, !tbaa !12
  %15 = load %struct.reg_pref** @reg_pref_buffer, align 8, !tbaa !12
  %16 = getelementptr inbounds %struct.reg_pref* %15, i64 0, i32 0
  %17 = load i64* @regno_allocated, align 8, !tbaa !36
  %mul15 = shl i64 %17, 1
  %call16 = tail call i8* @xrealloc(i8* %16, i64 %mul15) #1
  %18 = bitcast i8* %call16 to %struct.reg_pref*
  store %struct.reg_pref* %18, %struct.reg_pref** @reg_pref_buffer, align 8, !tbaa !12
  br label %if.end17

if.end17:                                         ; preds = %if.then9, %if.else13, %if.then3
  %19 = load i64* @regno_allocated, align 8, !tbaa !36
  %sub = sub i64 %19, %2
  %mul18 = mul i64 %sub, 44
  %sub20 = add i64 %mul18, 28
  %call21 = tail call noalias i8* @xcalloc(i64 %sub20, i64 1) #1
  %20 = bitcast i8* %call21 to %struct.reg_info_data*
  %min_index = getelementptr inbounds i8* %call21, i64 8
  %21 = bitcast i8* %min_index to i64*
  store i64 %2, i64* %21, align 8, !tbaa !38
  %22 = load i64* @regno_allocated, align 8, !tbaa !36
  %sub22 = add i64 %22, -1
  %max_index = getelementptr inbounds i8* %call21, i64 16
  %23 = bitcast i8* %max_index to i64*
  store i64 %sub22, i64* %23, align 8, !tbaa !40
  %24 = load %struct.reg_info_data** @reg_info_head, align 8, !tbaa !12
  %next = bitcast i8* %call21 to %struct.reg_info_data**
  store %struct.reg_info_data* %24, %struct.reg_info_data** %next, align 8, !tbaa !41
  store %struct.reg_info_data* %20, %struct.reg_info_data** @reg_info_head, align 8, !tbaa !12
  br label %if.end23

if.end23:                                         ; preds = %if.end17, %entry
  %conv24 = trunc i64 %num_regs to i32
  store i32 %conv24, i32* @reg_n_max, align 4, !tbaa !5
  %cmp25 = icmp ult i64 %conv, %num_regs
  br i1 %cmp25, label %for.cond.preheader, label %if.end80

for.cond.preheader:                               ; preds = %if.end23
  %reg_data.0131 = load %struct.reg_info_data** @reg_info_head, align 8
  %tobool28132 = icmp eq %struct.reg_info_data* %reg_data.0131, null
  br i1 %tobool28132, label %if.end80, label %land.rhs

land.rhs:                                         ; preds = %for.cond.preheader, %for.inc77
  %reg_data.0133 = phi %struct.reg_info_data* [ %reg_data.0, %for.inc77 ], [ %reg_data.0131, %for.cond.preheader ]
  %max_index29 = getelementptr inbounds %struct.reg_info_data* %reg_data.0133, i64 0, i32 2
  %25 = load i64* %max_index29, align 8, !tbaa !40
  %cmp30 = icmp ult i64 %25, %conv
  br i1 %cmp30, label %if.end80, label %for.body

for.body:                                         ; preds = %land.rhs
  %min_index33 = getelementptr inbounds %struct.reg_info_data* %reg_data.0133, i64 0, i32 1
  %26 = load i64* %min_index33, align 8, !tbaa !38
  %cmp36 = icmp ult i64 %25, %num_regs
  %cond41 = select i1 %cmp36, i64 %25, i64 %num_regs
  %cmp44 = icmp ugt i64 %26, %num_regs
  br i1 %cmp44, label %for.inc77, label %if.end47

if.end47:                                         ; preds = %for.body
  %sub42 = sub i64 %conv, %26
  %cmp48 = icmp ult i64 %conv, %26
  %.sub42 = select i1 %cmp48, i64 0, i64 %sub42
  %used_p = getelementptr inbounds %struct.reg_info_data* %reg_data.0133, i64 0, i32 3
  %27 = load i8* %used_p, align 1, !tbaa !42
  %tobool52 = icmp eq i8 %27, 0
  br i1 %tobool52, label %if.then53, label %if.else55

if.then53:                                        ; preds = %if.end47
  store i8 1, i8* %used_p, align 1, !tbaa !42
  br label %if.end60

if.else55:                                        ; preds = %if.end47
  %arrayidx = getelementptr inbounds %struct.reg_info_data* %reg_data.0133, i64 0, i32 4, i64 %.sub42
  %28 = bitcast %struct.reg_info_def* %arrayidx to i8*
  %sub56 = sub i64 %cond41, %26
  %sub57 = sub i64 %sub56, %.sub42
  %29 = mul i64 %sub57, 44
  %mul59 = add i64 %29, 44
  tail call void @llvm.memset.p0i8.i64(i8* %28, i8 0, i64 %mul59, i32 1, i1 false)
  br label %if.end60

if.end60:                                         ; preds = %if.else55, %if.then53
  %add61 = add i64 %.sub42, %26
  %cmp63129 = icmp ugt i64 %add61, %cond41
  br i1 %cmp63129, label %for.inc77, label %for.body65.lr.ph

for.body65.lr.ph:                                 ; preds = %if.end60
  %.pre = load %struct.varray_head_tag** @reg_n_info, align 8, !tbaa !12
  br label %for.body65

for.body65:                                       ; preds = %for.body65.lr.ph, %for.body65
  %30 = phi %struct.varray_head_tag* [ %.pre, %for.body65.lr.ph ], [ %31, %for.body65 ]
  %i.0130 = phi i64 [ %add61, %for.body65.lr.ph ], [ %inc, %for.body65 ]
  %sub66 = sub i64 %i.0130, %26
  %arrayidx68 = getelementptr inbounds %struct.reg_info_data* %reg_data.0133, i64 0, i32 4, i64 %sub66
  %data69 = getelementptr inbounds %struct.varray_head_tag* %30, i64 0, i32 4
  %reg = bitcast %union.varray_data_tag* %data69 to [1 x %struct.reg_info_def*]*
  %arrayidx70 = getelementptr inbounds [1 x %struct.reg_info_def*]* %reg, i64 0, i64 %i.0130
  store %struct.reg_info_def* %arrayidx68, %struct.reg_info_def** %arrayidx70, align 8, !tbaa !12
  %31 = load %struct.varray_head_tag** @reg_n_info, align 8, !tbaa !12
  %data71 = getelementptr inbounds %struct.varray_head_tag* %31, i64 0, i32 4
  %reg72 = bitcast %union.varray_data_tag* %data71 to [1 x %struct.reg_info_def*]*
  %arrayidx73 = getelementptr inbounds [1 x %struct.reg_info_def*]* %reg72, i64 0, i64 %i.0130
  %32 = load %struct.reg_info_def** %arrayidx73, align 8, !tbaa !12
  %basic_block = getelementptr inbounds %struct.reg_info_def* %32, i64 0, i32 9
  store i32 -1, i32* %basic_block, align 4, !tbaa !43
  %33 = load i16** @renumber, align 8, !tbaa !12
  %arrayidx74 = getelementptr inbounds i16* %33, i64 %i.0130
  store i16 -1, i16* %arrayidx74, align 2, !tbaa !44
  %34 = load %struct.reg_pref** @reg_pref_buffer, align 8, !tbaa !12
  %prefclass = getelementptr inbounds %struct.reg_pref* %34, i64 %i.0130, i32 0
  store i8 0, i8* %prefclass, align 1, !tbaa !14
  %altclass = getelementptr inbounds %struct.reg_pref* %34, i64 %i.0130, i32 1
  store i8 0, i8* %altclass, align 1, !tbaa !16
  %inc = add i64 %i.0130, 1
  %cmp63 = icmp ugt i64 %inc, %cond41
  br i1 %cmp63, label %for.inc77, label %for.body65

for.inc77:                                        ; preds = %for.body65, %if.end60, %for.body
  %next78 = getelementptr inbounds %struct.reg_info_data* %reg_data.0133, i64 0, i32 0
  %reg_data.0 = load %struct.reg_info_data** %next78, align 8
  %tobool28 = icmp eq %struct.reg_info_data* %reg_data.0, null
  br i1 %tobool28, label %if.end80, label %land.rhs

if.end80:                                         ; preds = %for.inc77, %land.rhs, %for.cond.preheader, %if.end23
  %35 = load %struct.reg_pref** @reg_pref, align 8, !tbaa !12
  %tobool81 = icmp eq %struct.reg_pref* %35, null
  br i1 %tobool81, label %if.end83, label %if.then82

if.then82:                                        ; preds = %if.end80
  %36 = load %struct.reg_pref** @reg_pref_buffer, align 8, !tbaa !12
  store %struct.reg_pref* %36, %struct.reg_pref** @reg_pref, align 8, !tbaa !12
  br label %if.end83

if.end83:                                         ; preds = %if.end80, %if.then82
  %tobool84 = icmp eq i32 %renumber_p, 0
  br i1 %tobool84, label %if.end86, label %if.then85

if.then85:                                        ; preds = %if.end83
  %37 = load i16** @renumber, align 8, !tbaa !12
  store i16* %37, i16** @reg_renumber, align 8, !tbaa !12
  br label %if.end86

if.end86:                                         ; preds = %if.end83, %if.then85
  ret void
}

declare %struct.varray_head_tag* @varray_init(i64, i64, i8*) #2

declare %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag*, i64) #2

declare i8* @xrealloc(i8*, i64) #2

declare noalias i8* @xcalloc(i64, i64) #2

; Function Attrs: nounwind uwtable
define void @free_reg_info() #0 {
entry:
  %0 = load %struct.varray_head_tag** @reg_n_info, align 8, !tbaa !12
  %tobool = icmp eq %struct.varray_head_tag* %0, null
  br i1 %tobool, label %if.end4, label %if.then2

if.then2:                                         ; preds = %entry
  %1 = bitcast %struct.varray_head_tag* %0 to i8*
  tail call void @free(i8* %1)
  store %struct.varray_head_tag* null, %struct.varray_head_tag** @reg_n_info, align 8, !tbaa !12
  %2 = load %struct.reg_info_data** @reg_info_head, align 8, !tbaa !12
  %tobool37 = icmp eq %struct.reg_info_data* %2, null
  br i1 %tobool37, label %for.end, label %for.body

for.body:                                         ; preds = %if.then2, %for.body
  %reg_data.08 = phi %struct.reg_info_data* [ %3, %for.body ], [ %2, %if.then2 ]
  %next = getelementptr inbounds %struct.reg_info_data* %reg_data.08, i64 0, i32 0
  %3 = load %struct.reg_info_data** %next, align 8, !tbaa !41
  %4 = bitcast %struct.reg_info_data* %reg_data.08 to i8*
  tail call void @free(i8* %4)
  %tobool3 = icmp eq %struct.reg_info_data* %3, null
  br i1 %tobool3, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %if.then2
  %5 = load %struct.reg_pref** @reg_pref_buffer, align 8, !tbaa !12
  %6 = getelementptr inbounds %struct.reg_pref* %5, i64 0, i32 0
  tail call void @free(i8* %6)
  store %struct.reg_pref* null, %struct.reg_pref** @reg_pref_buffer, align 8, !tbaa !12
  store %struct.reg_info_data* null, %struct.reg_info_data** @reg_info_head, align 8, !tbaa !12
  store i16* null, i16** @renumber, align 8, !tbaa !12
  br label %if.end4

if.end4:                                          ; preds = %entry, %for.end
  store i64 0, i64* @regno_allocated, align 8, !tbaa !36
  store i32 0, i32* @reg_n_max, align 4, !tbaa !5
  ret void
}

; Function Attrs: nounwind uwtable
define void @reg_scan(%struct.rtx_def* %f, i32 %nregs, i32 %repeat) #0 {
entry:
  %conv = zext i32 %nregs to i64
  tail call void @allocate_reg_info(i64 %conv, i32 1, i32 0)
  store i32 3, i32* @max_parallel, align 4, !tbaa !5
  store i32 0, i32* @max_set_parallel, align 4, !tbaa !5
  %tobool58 = icmp eq %struct.rtx_def* %f, null
  br i1 %tobool58, label %for.end, label %for.body

for.body:                                         ; preds = %entry, %for.inc
  %insn.059 = phi %struct.rtx_def* [ %7, %for.inc ], [ %f, %entry ]
  %0 = getelementptr inbounds %struct.rtx_def* %insn.059, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %bf.clear.off = add i32 %bf.clear, -32
  %switch = icmp ult i32 %bf.clear.off, 3
  br i1 %switch, label %if.then, label %for.inc

if.then:                                          ; preds = %for.body
  %arrayidx = getelementptr inbounds %struct.rtx_def* %insn.059, i64 0, i32 1, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx, align 8, !tbaa !12
  %2 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 0
  %bf.load11 = load i32* %2, align 8
  %bf.clear12 = and i32 %bf.load11, 65535
  %cmp13 = icmp eq i32 %bf.clear12, 39
  br i1 %cmp13, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %if.then
  %arrayidx19 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx19 to %struct.rtvec_def**
  %3 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !12
  %num_elem = getelementptr inbounds %struct.rtvec_def* %3, i64 0, i32 0
  %4 = load i32* %num_elem, align 4, !tbaa !46
  %5 = load i32* @max_parallel, align 4, !tbaa !5
  %cmp20 = icmp sgt i32 %4, %5
  br i1 %cmp20, label %if.then22, label %if.end

if.then22:                                        ; preds = %land.lhs.true
  store i32 %4, i32* @max_parallel, align 4, !tbaa !5
  br label %if.end

if.end:                                           ; preds = %if.then22, %land.lhs.true, %if.then
  tail call fastcc void @reg_scan_mark_refs(%struct.rtx_def* %1, %struct.rtx_def* %insn.059, i32 0, i32 0)
  %arrayidx34 = getelementptr inbounds %struct.rtx_def* %insn.059, i64 0, i32 1, i64 6
  %rtx35 = bitcast %union.rtunion_def* %arrayidx34 to %struct.rtx_def**
  %6 = load %struct.rtx_def** %rtx35, align 8, !tbaa !12
  %tobool36 = icmp eq %struct.rtx_def* %6, null
  br i1 %tobool36, label %for.inc, label %if.then37

if.then37:                                        ; preds = %if.end
  tail call fastcc void @reg_scan_mark_refs(%struct.rtx_def* %6, %struct.rtx_def* %insn.059, i32 1, i32 0)
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.end, %if.then37
  %arrayidx44 = getelementptr inbounds %struct.rtx_def* %insn.059, i64 0, i32 1, i64 2
  %rtx45 = bitcast %union.rtunion_def* %arrayidx44 to %struct.rtx_def**
  %7 = load %struct.rtx_def** %rtx45, align 8, !tbaa !12
  %tobool = icmp eq %struct.rtx_def* %7, null
  br i1 %tobool, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.inc
  %.pre = load i32* @max_set_parallel, align 4, !tbaa !5
  %.pre61 = load i32* @max_parallel, align 4, !tbaa !5
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %entry
  %8 = phi i32 [ %.pre61, %for.cond.for.end_crit_edge ], [ 3, %entry ]
  %9 = phi i32 [ %.pre, %for.cond.for.end_crit_edge ], [ 0, %entry ]
  %add = add nsw i32 %8, %9
  store i32 %add, i32* @max_parallel, align 4, !tbaa !5
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @reg_scan_mark_refs(%struct.rtx_def* nocapture readonly %x, %struct.rtx_def* %insn, i32 %note_flag, i32 %min_regno) #0 {
entry:
  br label %tailrecurse

tailrecurse:                                      ; preds = %sw.bb47, %if.end37, %entry
  %x.tr = phi %struct.rtx_def* [ %x, %entry ], [ %9, %if.end37 ], [ %10, %sw.bb47 ]
  %0 = getelementptr inbounds %struct.rtx_def* %x.tr, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %sw.default.loopexit [
    i32 58, label %sw.epilog
    i32 54, label %sw.epilog
    i32 55, label %sw.epilog
    i32 56, label %sw.epilog
    i32 69, label %sw.epilog
    i32 59, label %sw.epilog
    i32 68, label %sw.epilog
    i32 67, label %sw.epilog
    i32 44, label %sw.epilog
    i32 45, label %sw.epilog
    i32 61, label %sw.bb1
    i32 3, label %sw.bb29
    i32 4, label %sw.bb47
    i32 47, label %sw.bb57
  ]

sw.bb1:                                           ; preds = %tailrecurse
  %arrayidx = getelementptr inbounds %struct.rtx_def* %x.tr, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %1 = load i32* %rtuint, align 4, !tbaa !5
  %cmp = icmp ult i32 %1, %min_regno
  br i1 %cmp, label %sw.epilog, label %if.then

if.then:                                          ; preds = %sw.bb1
  %arrayidx3 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 0
  %rtint = bitcast %union.rtunion_def* %arrayidx3 to i32*
  %2 = load i32* %rtint, align 4, !tbaa !5
  %idxprom = zext i32 %1 to i64
  %3 = load %struct.varray_head_tag** @reg_n_info, align 8, !tbaa !12
  %data = getelementptr inbounds %struct.varray_head_tag* %3, i64 0, i32 4
  %reg = bitcast %union.varray_data_tag* %data to [1 x %struct.reg_info_def*]*
  %arrayidx4 = getelementptr inbounds [1 x %struct.reg_info_def*]* %reg, i64 0, i64 %idxprom
  %4 = load %struct.reg_info_def** %arrayidx4, align 8, !tbaa !12
  %last_note_uid = getelementptr inbounds %struct.reg_info_def* %4, i64 0, i32 2
  store i32 %2, i32* %last_note_uid, align 4, !tbaa !48
  %tobool = icmp eq i32 %note_flag, 0
  br i1 %tobool, label %if.then5, label %if.end

if.then5:                                         ; preds = %if.then
  %5 = load i32* %rtint, align 4, !tbaa !5
  %last_uid = getelementptr inbounds %struct.reg_info_def* %4, i64 0, i32 1
  store i32 %5, i32* %last_uid, align 4, !tbaa !49
  br label %if.end

if.end:                                           ; preds = %if.then, %if.then5
  %first_uid = getelementptr inbounds %struct.reg_info_def* %4, i64 0, i32 0
  %6 = load i32* %first_uid, align 4, !tbaa !50
  %cmp17 = icmp eq i32 %6, 0
  br i1 %cmp17, label %if.then18, label %sw.epilog

if.then18:                                        ; preds = %if.end
  %7 = load i32* %rtint, align 4, !tbaa !5
  store i32 %7, i32* %first_uid, align 4, !tbaa !50
  br label %sw.epilog

sw.bb29:                                          ; preds = %tailrecurse
  %fld30 = getelementptr inbounds %struct.rtx_def* %x.tr, i64 0, i32 1
  %rtx = bitcast [1 x %union.rtunion_def]* %fld30 to %struct.rtx_def**
  %8 = load %struct.rtx_def** %rtx, align 8, !tbaa !12
  %tobool32 = icmp eq %struct.rtx_def* %8, null
  br i1 %tobool32, label %if.end37, label %if.then33

if.then33:                                        ; preds = %sw.bb29
  tail call fastcc void @reg_scan_mark_refs(%struct.rtx_def* %8, %struct.rtx_def* %insn, i32 %note_flag, i32 %min_regno)
  br label %if.end37

if.end37:                                         ; preds = %sw.bb29, %if.then33
  %arrayidx39 = getelementptr inbounds %struct.rtx_def* %x.tr, i64 0, i32 1, i64 1
  %rtx40 = bitcast %union.rtunion_def* %arrayidx39 to %struct.rtx_def**
  %9 = load %struct.rtx_def** %rtx40, align 8, !tbaa !12
  %tobool41 = icmp eq %struct.rtx_def* %9, null
  br i1 %tobool41, label %sw.epilog, label %tailrecurse

sw.bb47:                                          ; preds = %tailrecurse
  %arrayidx49 = getelementptr inbounds %struct.rtx_def* %x.tr, i64 0, i32 1, i64 1
  %rtx50 = bitcast %union.rtunion_def* %arrayidx49 to %struct.rtx_def**
  %10 = load %struct.rtx_def** %rtx50, align 8, !tbaa !12
  %tobool51 = icmp eq %struct.rtx_def* %10, null
  br i1 %tobool51, label %sw.epilog, label %tailrecurse

sw.bb57:                                          ; preds = %tailrecurse
  %fld58 = getelementptr inbounds %struct.rtx_def* %x.tr, i64 0, i32 1
  %rtx60 = bitcast [1 x %union.rtunion_def]* %fld58 to %struct.rtx_def**
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %sw.bb57
  %dest.0.in = phi %struct.rtx_def** [ %rtx60, %sw.bb57 ], [ %rtx72, %for.inc ]
  %dest.0 = load %struct.rtx_def** %dest.0.in, align 8
  %11 = getelementptr inbounds %struct.rtx_def* %dest.0, i64 0, i32 0
  %bf.load61 = load i32* %11, align 8
  %bf.clear62 = and i32 %bf.load61, 65535
  switch i32 %bf.clear62, label %if.end85 [
    i32 63, label %for.inc
    i32 64, label %for.inc
    i32 121, label %for.inc
    i32 39, label %if.then76
  ]

for.inc:                                          ; preds = %for.cond, %for.cond, %for.cond
  %arrayidx71 = getelementptr inbounds %struct.rtx_def* %dest.0, i64 0, i32 1, i64 0
  %rtx72 = bitcast %union.rtunion_def* %arrayidx71 to %struct.rtx_def**
  br label %for.cond

if.then76:                                        ; preds = %for.cond
  %12 = load i32* @max_set_parallel, align 4, !tbaa !5
  %arrayidx78 = getelementptr inbounds %struct.rtx_def* %dest.0, i64 0, i32 1, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx78 to %struct.rtvec_def**
  %13 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !12
  %num_elem = getelementptr inbounds %struct.rtvec_def* %13, i64 0, i32 0
  %14 = load i32* %num_elem, align 4, !tbaa !46
  %sub = add nsw i32 %14, -1
  %cmp79 = icmp sgt i32 %12, %sub
  %.sub = select i1 %cmp79, i32 %12, i32 %sub
  store i32 %.sub, i32* @max_set_parallel, align 4, !tbaa !5
  %bf.load86.pre = load i32* %11, align 8
  br label %if.end85

if.end85:                                         ; preds = %for.cond, %if.then76
  %bf.load86 = phi i32 [ %bf.load86.pre, %if.then76 ], [ %bf.load61, %for.cond ]
  %bf.clear87 = and i32 %bf.load86, 65535
  %cmp88 = icmp eq i32 %bf.clear87, 61
  br i1 %cmp88, label %land.lhs.true, label %if.end109

land.lhs.true:                                    ; preds = %if.end85
  %arrayidx90 = getelementptr inbounds %struct.rtx_def* %dest.0, i64 0, i32 1, i64 0
  %rtuint91 = bitcast %union.rtunion_def* %arrayidx90 to i32*
  %15 = load i32* %rtuint91, align 4, !tbaa !5
  %cmp92 = icmp ult i32 %15, %min_regno
  br i1 %cmp92, label %if.end109, label %if.then93

if.then93:                                        ; preds = %land.lhs.true
  %idxprom97 = zext i32 %15 to i64
  %16 = load %struct.varray_head_tag** @reg_n_info, align 8, !tbaa !12
  %data98 = getelementptr inbounds %struct.varray_head_tag* %16, i64 0, i32 4
  %reg99 = bitcast %union.varray_data_tag* %data98 to [1 x %struct.reg_info_def*]*
  %arrayidx100 = getelementptr inbounds [1 x %struct.reg_info_def*]* %reg99, i64 0, i64 %idxprom97
  %17 = load %struct.reg_info_def** %arrayidx100, align 8, !tbaa !12
  %sets = getelementptr inbounds %struct.reg_info_def* %17, i64 0, i32 3
  %18 = load i32* %sets, align 4, !tbaa !30
  %inc = add nsw i32 %18, 1
  store i32 %inc, i32* %sets, align 4, !tbaa !30
  %19 = load i32* %rtuint91, align 4, !tbaa !5
  %idxprom104 = zext i32 %19 to i64
  %arrayidx107 = getelementptr inbounds [1 x %struct.reg_info_def*]* %reg99, i64 0, i64 %idxprom104
  %20 = load %struct.reg_info_def** %arrayidx107, align 8, !tbaa !12
  %refs = getelementptr inbounds %struct.reg_info_def* %20, i64 0, i32 4
  %21 = load i32* %refs, align 4, !tbaa !22
  %inc108 = add nsw i32 %21, 1
  store i32 %inc108, i32* %refs, align 4, !tbaa !22
  br label %if.end109

if.end109:                                        ; preds = %land.lhs.true, %if.then93, %if.end85
  %22 = load %struct.rtx_def** %rtx60, align 8, !tbaa !12
  %23 = getelementptr inbounds %struct.rtx_def* %22, i64 0, i32 0
  %bf.load113 = load i32* %23, align 8
  %bf.clear114 = and i32 %bf.load113, 65535
  %cmp115 = icmp eq i32 %bf.clear114, 61
  br i1 %cmp115, label %land.lhs.true116, label %if.end348

land.lhs.true116:                                 ; preds = %if.end109
  %arrayidx121 = getelementptr inbounds %struct.rtx_def* %22, i64 0, i32 1, i64 0
  %rtuint122 = bitcast %union.rtunion_def* %arrayidx121 to i32*
  %24 = load i32* %rtuint122, align 4, !tbaa !5
  %cmp123 = icmp ult i32 %24, 53
  %cmp131 = icmp ult i32 %24, %min_regno
  %or.cond = or i1 %cmp123, %cmp131
  br i1 %or.cond, label %if.end348, label %land.lhs.true132

land.lhs.true132:                                 ; preds = %land.lhs.true116
  %idxprom139 = zext i32 %24 to i64
  %25 = load %struct.varray_head_tag** @reg_n_info, align 8, !tbaa !12
  %data140 = getelementptr inbounds %struct.varray_head_tag* %25, i64 0, i32 4
  %reg141 = bitcast %union.varray_data_tag* %data140 to [1 x %struct.reg_info_def*]*
  %arrayidx142 = getelementptr inbounds [1 x %struct.reg_info_def*]* %reg141, i64 0, i64 %idxprom139
  %26 = load %struct.reg_info_def** %arrayidx142, align 8, !tbaa !12
  %sets143 = getelementptr inbounds %struct.reg_info_def* %26, i64 0, i32 3
  %27 = load i32* %sets143, align 4, !tbaa !30
  %bf.clear150 = and i32 %bf.load113, 134217728
  %notlhs = icmp ne i32 %27, 1
  %notrhs = icmp ne i32 %bf.clear150, 0
  %or.cond589.not = or i1 %notrhs, %notlhs
  %tobool158 = icmp slt i32 %bf.load113, 0
  %or.cond590 = or i1 %or.cond589.not, %tobool158
  br i1 %or.cond590, label %if.end348, label %land.lhs.true159

land.lhs.true159:                                 ; preds = %land.lhs.true132
  %arrayidx161 = getelementptr inbounds %struct.rtx_def* %x.tr, i64 0, i32 1, i64 1
  %rtx162 = bitcast %union.rtunion_def* %arrayidx161 to %struct.rtx_def**
  %28 = load %struct.rtx_def** %rtx162, align 8, !tbaa !12
  %29 = getelementptr inbounds %struct.rtx_def* %28, i64 0, i32 0
  %bf.load163 = load i32* %29, align 8
  %30 = and i32 %bf.load163, -2147418113
  %31 = icmp eq i32 %30, -2147483587
  br i1 %31, label %if.then342, label %lor.lhs.false173

lor.lhs.false173:                                 ; preds = %land.lhs.true159
  %bf.clear164 = and i32 %bf.load163, 65535
  switch i32 %bf.clear164, label %lor.lhs.false319 [
    i32 75, label %land.lhs.true187
    i32 135, label %land.lhs.true187
    i32 58, label %if.then342
    i32 68, label %if.then342
    i32 67, label %if.then342
    i32 134, label %land.lhs.true245
  ]

land.lhs.true187:                                 ; preds = %lor.lhs.false173, %lor.lhs.false173
  %arrayidx192 = getelementptr inbounds %struct.rtx_def* %28, i64 0, i32 1, i64 1
  %rtx193 = bitcast %union.rtunion_def* %arrayidx192 to %struct.rtx_def**
  %32 = load %struct.rtx_def** %rtx193, align 8, !tbaa !12
  %33 = getelementptr inbounds %struct.rtx_def* %32, i64 0, i32 0
  %bf.load194 = load i32* %33, align 8
  %bf.clear195 = and i32 %bf.load194, 65535
  %cmp196 = icmp eq i32 %bf.clear195, 54
  br i1 %cmp196, label %land.lhs.true197, label %lor.lhs.false217

land.lhs.true197:                                 ; preds = %land.lhs.true187
  %arrayidx202 = getelementptr inbounds %struct.rtx_def* %28, i64 0, i32 1, i64 0
  %rtx203 = bitcast %union.rtunion_def* %arrayidx202 to %struct.rtx_def**
  %34 = load %struct.rtx_def** %rtx203, align 8, !tbaa !12
  %35 = getelementptr inbounds %struct.rtx_def* %34, i64 0, i32 0
  %bf.load204 = load i32* %35, align 8
  %36 = and i32 %bf.load204, -2147418113
  %37 = icmp eq i32 %36, -2147483587
  br i1 %37, label %if.then342, label %lor.lhs.false217

lor.lhs.false217:                                 ; preds = %land.lhs.true197, %land.lhs.true187
  switch i32 %bf.clear164, label %lor.lhs.false319 [
    i32 58, label %if.then342
    i32 68, label %if.then342
    i32 67, label %if.then342
    i32 134, label %land.lhs.true245
    i32 75, label %land.lhs.true289
    i32 135, label %land.lhs.true289
  ]

land.lhs.true245:                                 ; preds = %lor.lhs.false173, %lor.lhs.false217
  %arrayidx250 = getelementptr inbounds %struct.rtx_def* %28, i64 0, i32 1, i64 0
  %rtx251 = bitcast %union.rtunion_def* %arrayidx250 to %struct.rtx_def**
  %38 = load %struct.rtx_def** %rtx251, align 8, !tbaa !12
  %39 = getelementptr inbounds %struct.rtx_def* %38, i64 0, i32 0
  %bf.load252 = load i32* %39, align 8
  %bf.clear253 = and i32 %bf.load252, 65535
  switch i32 %bf.clear253, label %lor.lhs.false319 [
    i32 58, label %if.then342
    i32 68, label %if.then342
    i32 67, label %if.then342
  ]

land.lhs.true289:                                 ; preds = %lor.lhs.false217, %lor.lhs.false217
  %.in.in = getelementptr inbounds %struct.rtx_def* %28, i64 0, i32 1, i64 1
  %.in = bitcast %union.rtunion_def* %.in.in to %struct.rtx_def**
  %40 = load %struct.rtx_def** %.in, align 8
  %41 = getelementptr inbounds %struct.rtx_def* %40, i64 0, i32 0
  %bf.load296 = load i32* %41, align 8
  %bf.clear297 = and i32 %bf.load296, 65535
  switch i32 %bf.clear297, label %lor.lhs.false319 [
    i32 58, label %if.then342
    i32 68, label %if.then342
    i32 67, label %if.then342
  ]

lor.lhs.false319:                                 ; preds = %lor.lhs.false173, %lor.lhs.false217, %land.lhs.true245, %land.lhs.true289
  %call = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn, i32 4, %struct.rtx_def* null) #1
  %cmp320 = icmp eq %struct.rtx_def* %call, null
  br i1 %cmp320, label %if.end348, label %land.lhs.true321

land.lhs.true321:                                 ; preds = %lor.lhs.false319
  %arrayidx323 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 0
  %rtx324 = bitcast %union.rtunion_def* %arrayidx323 to %struct.rtx_def**
  %42 = load %struct.rtx_def** %rtx324, align 8, !tbaa !12
  %43 = getelementptr inbounds %struct.rtx_def* %42, i64 0, i32 0
  %bf.load325 = load i32* %43, align 8
  %bf.clear326 = and i32 %bf.load325, 65535
  switch i32 %bf.clear326, label %if.end348 [
    i32 58, label %land.lhs.true321.if.then342_crit_edge
    i32 68, label %land.lhs.true321.if.then342_crit_edge627
    i32 67, label %land.lhs.true321.if.then342_crit_edge628
  ]

land.lhs.true321.if.then342_crit_edge628:         ; preds = %land.lhs.true321
  %.pre630 = load %struct.rtx_def** %rtx60, align 8, !tbaa !12
  br label %if.then342

land.lhs.true321.if.then342_crit_edge627:         ; preds = %land.lhs.true321
  %.pre629 = load %struct.rtx_def** %rtx60, align 8, !tbaa !12
  br label %if.then342

land.lhs.true321.if.then342_crit_edge:            ; preds = %land.lhs.true321
  %.pre631 = load %struct.rtx_def** %rtx60, align 8, !tbaa !12
  br label %if.then342

if.then342:                                       ; preds = %lor.lhs.false173, %lor.lhs.false173, %lor.lhs.false173, %lor.lhs.false217, %lor.lhs.false217, %lor.lhs.false217, %land.lhs.true321.if.then342_crit_edge628, %land.lhs.true321.if.then342_crit_edge627, %land.lhs.true321.if.then342_crit_edge, %land.lhs.true289, %land.lhs.true289, %land.lhs.true289, %land.lhs.true245, %land.lhs.true245, %land.lhs.true245, %land.lhs.true197, %land.lhs.true159
  %44 = phi %struct.rtx_def* [ %.pre630, %land.lhs.true321.if.then342_crit_edge628 ], [ %.pre629, %land.lhs.true321.if.then342_crit_edge627 ], [ %.pre631, %land.lhs.true321.if.then342_crit_edge ], [ %22, %land.lhs.true289 ], [ %22, %land.lhs.true289 ], [ %22, %land.lhs.true289 ], [ %22, %land.lhs.true245 ], [ %22, %land.lhs.true245 ], [ %22, %land.lhs.true245 ], [ %22, %lor.lhs.false217 ], [ %22, %lor.lhs.false217 ], [ %22, %lor.lhs.false217 ], [ %22, %land.lhs.true197 ], [ %22, %land.lhs.true159 ], [ %22, %lor.lhs.false173 ], [ %22, %lor.lhs.false173 ], [ %22, %lor.lhs.false173 ]
  %45 = getelementptr inbounds %struct.rtx_def* %44, i64 0, i32 0
  %bf.load346 = load i32* %45, align 8
  %bf.set = or i32 %bf.load346, -2147483648
  store i32 %bf.set, i32* %45, align 8
  br label %if.end348

if.end348:                                        ; preds = %land.lhs.true321, %land.lhs.true132, %land.lhs.true116, %lor.lhs.false319, %if.then342, %if.end109
  %bf.load349 = load i32* %11, align 8
  %bf.clear350 = and i32 %bf.load349, 65535
  %cmp351 = icmp eq i32 %bf.clear350, 61
  br i1 %cmp351, label %if.then352, label %sw.default

if.then352:                                       ; preds = %if.end348
  %arrayidx354 = getelementptr inbounds %struct.rtx_def* %x.tr, i64 0, i32 1, i64 1
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.then352
  %src.0.in.in = phi %union.rtunion_def* [ %arrayidx354, %if.then352 ], [ %arrayidx375, %while.body ]
  %src.0.in = bitcast %union.rtunion_def* %src.0.in.in to %struct.rtx_def**
  %src.0 = load %struct.rtx_def** %src.0.in, align 8
  %46 = getelementptr inbounds %struct.rtx_def* %src.0, i64 0, i32 0
  %bf.load356 = load i32* %46, align 8
  %bf.clear357 = and i32 %bf.load356, 65535
  %bf.clear357.off = add i32 %bf.clear357, -120
  %switch = icmp ult i32 %bf.clear357.off, 3
  br i1 %switch, label %while.body, label %lor.rhs367

lor.rhs367:                                       ; preds = %while.cond
  %cmp370 = icmp eq i32 %bf.clear357, 63
  br i1 %cmp370, label %land.rhs, label %while.end

land.rhs:                                         ; preds = %lor.rhs367
  %call371 = tail call i32 @subreg_lowpart_p(%struct.rtx_def* %src.0) #1
  %tobool372 = icmp eq i32 %call371, 0
  br i1 %tobool372, label %land.rhs.while.end_crit_edge, label %while.body

land.rhs.while.end_crit_edge:                     ; preds = %land.rhs
  %bf.load377.pre = load i32* %46, align 8
  br label %while.end

while.body:                                       ; preds = %land.rhs, %while.cond
  %arrayidx375 = getelementptr inbounds %struct.rtx_def* %src.0, i64 0, i32 1, i64 0
  br label %while.cond

while.end:                                        ; preds = %lor.rhs367, %land.rhs.while.end_crit_edge
  %bf.load402 = phi i32 [ %bf.load377.pre, %land.rhs.while.end_crit_edge ], [ %bf.load356, %lor.rhs367 ]
  %bf.clear378 = and i32 %bf.load402, 65535
  %cmp379 = icmp eq i32 %bf.clear378, 61
  br i1 %cmp379, label %land.lhs.true380, label %sw.default

land.lhs.true380:                                 ; preds = %while.end
  %arrayidx382 = getelementptr inbounds %struct.rtx_def* %src.0, i64 0, i32 1, i64 0
  %rtuint383 = bitcast %union.rtunion_def* %arrayidx382 to i32*
  %47 = load i32* %rtuint383, align 4, !tbaa !5
  %idxprom384 = zext i32 %47 to i64
  %48 = load %struct.function** @cfun, align 8, !tbaa !12
  %emit = getelementptr inbounds %struct.function* %48, i64 0, i32 3
  %49 = load %struct.emit_status** %emit, align 8, !tbaa !24
  %regno_decl = getelementptr inbounds %struct.emit_status* %49, i64 0, i32 11
  %50 = load %union.tree_node*** %regno_decl, align 8, !tbaa !51
  %arrayidx385 = getelementptr inbounds %union.tree_node** %50, i64 %idxprom384
  %51 = load %union.tree_node** %arrayidx385, align 8, !tbaa !12
  %cmp386 = icmp eq %union.tree_node* %51, null
  %arrayidx389 = getelementptr inbounds %struct.rtx_def* %dest.0, i64 0, i32 1, i64 0
  %rtuint390 = bitcast %union.rtunion_def* %arrayidx389 to i32*
  %52 = load i32* %rtuint390, align 4, !tbaa !5
  %idxprom391 = zext i32 %52 to i64
  br i1 %cmp386, label %if.then387, label %land.lhs.true405

if.then387:                                       ; preds = %land.lhs.true380
  %arrayidx394 = getelementptr inbounds %union.tree_node** %50, i64 %idxprom391
  %53 = load %union.tree_node** %arrayidx394, align 8, !tbaa !12
  store %union.tree_node* %53, %union.tree_node** %arrayidx385, align 8, !tbaa !12
  br label %sw.default

land.lhs.true405:                                 ; preds = %land.lhs.true380
  %54 = load %struct.function** @cfun, align 8, !tbaa !12
  %emit410 = getelementptr inbounds %struct.function* %54, i64 0, i32 3
  %55 = load %struct.emit_status** %emit410, align 8, !tbaa !24
  %regno_decl411 = getelementptr inbounds %struct.emit_status* %55, i64 0, i32 11
  %56 = load %union.tree_node*** %regno_decl411, align 8, !tbaa !51
  %arrayidx412 = getelementptr inbounds %union.tree_node** %56, i64 %idxprom391
  %57 = load %union.tree_node** %arrayidx412, align 8, !tbaa !12
  %cmp413 = icmp eq %union.tree_node* %57, null
  br i1 %cmp413, label %if.then414, label %sw.default

if.then414:                                       ; preds = %land.lhs.true405
  %arrayidx416 = getelementptr inbounds %struct.rtx_def* %src.0, i64 0, i32 1, i64 0
  %rtuint417 = bitcast %union.rtunion_def* %arrayidx416 to i32*
  %58 = load i32* %rtuint417, align 4, !tbaa !5
  %idxprom418 = zext i32 %58 to i64
  %arrayidx421 = getelementptr inbounds %union.tree_node** %56, i64 %idxprom418
  %59 = load %union.tree_node** %arrayidx421, align 8, !tbaa !12
  store %union.tree_node* %59, %union.tree_node** %arrayidx412, align 8, !tbaa !12
  br label %sw.default

sw.default.loopexit:                              ; preds = %tailrecurse
  %phitmp = zext i32 %bf.clear to i64
  br label %sw.default

sw.default:                                       ; preds = %while.end, %sw.default.loopexit, %if.end348, %land.lhs.true405, %if.then414, %if.then387
  %bf.clear623 = phi i64 [ %phitmp, %sw.default.loopexit ], [ 47, %if.end348 ], [ 47, %land.lhs.true405 ], [ 47, %if.then414 ], [ 47, %if.then387 ], [ 47, %while.end ]
  %arrayidx433 = getelementptr inbounds [153 x i8*]* @rtx_format, i64 0, i64 %bf.clear623
  %60 = load i8** %arrayidx433, align 8, !tbaa !12
  %arrayidx435 = getelementptr inbounds [153 x i8]* @rtx_length, i64 0, i64 %bf.clear623
  %61 = load i8* %arrayidx435, align 1, !tbaa !10
  %cmp438610 = icmp eq i8 %61, 0
  br i1 %cmp438610, label %sw.epilog, label %for.body440.lr.ph

for.body440.lr.ph:                                ; preds = %sw.default
  %62 = zext i8 %61 to i64
  br label %for.body440

for.body440:                                      ; preds = %for.body440.lr.ph, %for.cond437.backedge
  %indvars.iv624 = phi i64 [ %62, %for.body440.lr.ph ], [ %indvars.iv.next625, %for.cond437.backedge ]
  %indvars.iv.next625 = add nsw i64 %indvars.iv624, -1
  %arrayidx442 = getelementptr inbounds i8* %60, i64 %indvars.iv.next625
  %63 = load i8* %arrayidx442, align 1, !tbaa !10
  switch i8 %63, label %for.cond437.backedge [
    i8 101, label %if.then446
    i8 69, label %land.lhs.true457
  ]

for.cond437.backedge:                             ; preds = %for.body474, %if.then464, %for.body440, %land.lhs.true457, %if.then446
  %64 = trunc i64 %indvars.iv.next625 to i32
  %cmp438 = icmp sgt i32 %64, 0
  br i1 %cmp438, label %for.body440, label %sw.epilog

if.then446:                                       ; preds = %for.body440
  %arrayidx449 = getelementptr inbounds %struct.rtx_def* %x.tr, i64 0, i32 1, i64 %indvars.iv.next625
  %rtx450 = bitcast %union.rtunion_def* %arrayidx449 to %struct.rtx_def**
  %65 = load %struct.rtx_def** %rtx450, align 8, !tbaa !12
  tail call fastcc void @reg_scan_mark_refs(%struct.rtx_def* %65, %struct.rtx_def* %insn, i32 %note_flag, i32 %min_regno)
  br label %for.cond437.backedge

land.lhs.true457:                                 ; preds = %for.body440
  %arrayidx460 = getelementptr inbounds %struct.rtx_def* %x.tr, i64 0, i32 1, i64 %indvars.iv.next625
  %rtvec461 = bitcast %union.rtunion_def* %arrayidx460 to %struct.rtvec_def**
  %66 = load %struct.rtvec_def** %rtvec461, align 8, !tbaa !12
  %cmp462 = icmp eq %struct.rtvec_def* %66, null
  br i1 %cmp462, label %for.cond437.backedge, label %if.then464

if.then464:                                       ; preds = %land.lhs.true457
  %num_elem469 = getelementptr inbounds %struct.rtvec_def* %66, i64 0, i32 0
  %67 = load i32* %num_elem469, align 4, !tbaa !46
  %cmp472607 = icmp sgt i32 %67, 0
  br i1 %cmp472607, label %for.body474.lr.ph, label %for.cond437.backedge

for.body474.lr.ph:                                ; preds = %if.then464
  %68 = sext i32 %67 to i64
  br label %for.body474

for.body474:                                      ; preds = %for.body474.for.body474_crit_edge, %for.body474.lr.ph
  %69 = phi %struct.rtvec_def* [ %66, %for.body474.lr.ph ], [ %.pre, %for.body474.for.body474_crit_edge ]
  %indvars.iv = phi i64 [ %68, %for.body474.lr.ph ], [ %indvars.iv.next, %for.body474.for.body474_crit_edge ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  %arrayidx480 = getelementptr inbounds %struct.rtvec_def* %69, i64 0, i32 1, i64 %indvars.iv.next
  %70 = load %struct.rtx_def** %arrayidx480, align 8, !tbaa !12
  tail call fastcc void @reg_scan_mark_refs(%struct.rtx_def* %70, %struct.rtx_def* %insn, i32 %note_flag, i32 %min_regno)
  %71 = trunc i64 %indvars.iv.next to i32
  %cmp472 = icmp sgt i32 %71, 0
  br i1 %cmp472, label %for.body474.for.body474_crit_edge, label %for.cond437.backedge

for.body474.for.body474_crit_edge:                ; preds = %for.body474
  %.pre = load %struct.rtvec_def** %rtvec461, align 8, !tbaa !12
  br label %for.body474

sw.epilog:                                        ; preds = %if.end37, %sw.bb47, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %for.cond437.backedge, %sw.default, %sw.bb1, %if.then18, %if.end
  ret void
}

; Function Attrs: nounwind uwtable
define void @reg_scan_update(%struct.rtx_def* %first, %struct.rtx_def* readnone %last, i32 %old_max_regno) #0 {
entry:
  %call = tail call i32 @max_reg_num() #1
  %conv = sext i32 %call to i64
  tail call void @allocate_reg_info(i64 %conv, i32 0, i32 0)
  %cmp60 = icmp eq %struct.rtx_def* %first, %last
  br i1 %cmp60, label %for.end, label %for.body

for.body:                                         ; preds = %entry, %for.inc
  %insn.061 = phi %struct.rtx_def* [ %7, %for.inc ], [ %first, %entry ]
  %0 = getelementptr inbounds %struct.rtx_def* %insn.061, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %bf.clear.off = add i32 %bf.clear, -32
  %switch = icmp ult i32 %bf.clear.off, 3
  br i1 %switch, label %if.then, label %for.inc

if.then:                                          ; preds = %for.body
  %arrayidx = getelementptr inbounds %struct.rtx_def* %insn.061, i64 0, i32 1, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx, align 8, !tbaa !12
  %2 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 0
  %bf.load13 = load i32* %2, align 8
  %bf.clear14 = and i32 %bf.load13, 65535
  %cmp15 = icmp eq i32 %bf.clear14, 39
  br i1 %cmp15, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %if.then
  %arrayidx21 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx21 to %struct.rtvec_def**
  %3 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !12
  %num_elem = getelementptr inbounds %struct.rtvec_def* %3, i64 0, i32 0
  %4 = load i32* %num_elem, align 4, !tbaa !46
  %5 = load i32* @max_parallel, align 4, !tbaa !5
  %cmp22 = icmp sgt i32 %4, %5
  br i1 %cmp22, label %if.then24, label %if.end

if.then24:                                        ; preds = %land.lhs.true
  store i32 %4, i32* @max_parallel, align 4, !tbaa !5
  br label %if.end

if.end:                                           ; preds = %if.then24, %land.lhs.true, %if.then
  tail call fastcc void @reg_scan_mark_refs(%struct.rtx_def* %1, %struct.rtx_def* %insn.061, i32 0, i32 %old_max_regno)
  %arrayidx36 = getelementptr inbounds %struct.rtx_def* %insn.061, i64 0, i32 1, i64 6
  %rtx37 = bitcast %union.rtunion_def* %arrayidx36 to %struct.rtx_def**
  %6 = load %struct.rtx_def** %rtx37, align 8, !tbaa !12
  %tobool = icmp eq %struct.rtx_def* %6, null
  br i1 %tobool, label %for.inc, label %if.then38

if.then38:                                        ; preds = %if.end
  tail call fastcc void @reg_scan_mark_refs(%struct.rtx_def* %6, %struct.rtx_def* %insn.061, i32 1, i32 %old_max_regno)
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.end, %if.then38
  %arrayidx45 = getelementptr inbounds %struct.rtx_def* %insn.061, i64 0, i32 1, i64 2
  %rtx46 = bitcast %union.rtunion_def* %arrayidx45 to %struct.rtx_def**
  %7 = load %struct.rtx_def** %rtx46, align 8, !tbaa !12
  %cmp = icmp eq %struct.rtx_def* %7, %last
  br i1 %cmp, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc, %entry
  ret void
}

declare i32 @max_reg_num() #2

; Function Attrs: nounwind readonly uwtable
define i32 @reg_class_subset_p(i32 %c1, i32 %c2) #3 {
entry:
  %cmp = icmp eq i32 %c1, %c2
  %cmp1 = icmp eq i32 %c2, 24
  %or.cond = or i1 %cmp, %cmp1
  br i1 %or.cond, label %return, label %if.end3

if.end3:                                          ; preds = %entry
  %idxprom = sext i32 %c1 to i64
  %arrayidx = getelementptr inbounds [25 x i64]* @reg_class_contents, i64 0, i64 %idxprom
  %0 = load i64* %arrayidx, align 8, !tbaa !1
  %idxprom4 = sext i32 %c2 to i64
  %arrayidx5 = getelementptr inbounds [25 x i64]* @reg_class_contents, i64 0, i64 %idxprom4
  %1 = load i64* %arrayidx5, align 8, !tbaa !1
  %neg = xor i64 %1, -1
  %and = and i64 %0, %neg
  %cmp6 = icmp eq i64 %and, 0
  %. = zext i1 %cmp6 to i32
  ret i32 %.

return:                                           ; preds = %entry
  ret i32 1
}

; Function Attrs: nounwind readonly uwtable
define i32 @reg_classes_intersect_p(i32 %c1, i32 %c2) #3 {
entry:
  %cmp = icmp eq i32 %c1, %c2
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %cmp1 = icmp eq i32 %c1, 24
  %cmp2 = icmp eq i32 %c2, 24
  %or.cond = or i1 %cmp1, %cmp2
  br i1 %or.cond, label %return, label %if.end4

if.end4:                                          ; preds = %if.end
  %idxprom = sext i32 %c1 to i64
  %arrayidx = getelementptr inbounds [25 x i64]* @reg_class_contents, i64 0, i64 %idxprom
  %0 = load i64* %arrayidx, align 8, !tbaa !1
  %idxprom5 = sext i32 %c2 to i64
  %arrayidx6 = getelementptr inbounds [25 x i64]* @reg_class_contents, i64 0, i64 %idxprom5
  %1 = load i64* %arrayidx6, align 8, !tbaa !1
  %and = and i64 %1, %0
  %2 = load i64* getelementptr inbounds ([25 x i64]* @reg_class_contents, i64 0, i64 0), align 16, !tbaa !1
  %neg = xor i64 %2, -1
  %and7 = and i64 %and, %neg
  %not.cmp8 = icmp ne i64 %and7, 0
  %. = zext i1 %not.cmp8 to i32
  br label %return

return:                                           ; preds = %if.end4, %if.end, %entry
  %retval.0 = phi i32 [ 1, %entry ], [ 1, %if.end ], [ %., %if.end4 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define void @regset_release_memory() #0 {
entry:
  tail call void @bitmap_release_memory() #1
  ret void
}

declare void @bitmap_release_memory() #2

declare %struct.rtx_def* @find_reg_note(%struct.rtx_def*, i32, %struct.rtx_def*) #2

declare i32 @subreg_lowpart_p(%struct.rtx_def*) #2

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #1

declare %struct.rtx_def* @single_set_2(%struct.rtx_def*, %struct.rtx_def*) #2

declare void @extract_insn(%struct.rtx_def*) #2

declare i32 @ix86_memory_move_cost(i32, i32, i32) #2

; Function Attrs: nounwind uwtable
define internal fastcc void @record_address_regs(%struct.rtx_def* nocapture readonly %x, i32 %class, i32 %scale) #0 {
entry:
  br label %tailrecurse

tailrecurse:                                      ; preds = %lor.lhs.false191, %lor.lhs.false103, %land.lhs.true126, %land.lhs.true126, %land.lhs.true126, %land.lhs.true126, %land.lhs.true126, %land.lhs.true126, %land.lhs.true126, %land.lhs.true126, %land.lhs.true126, %land.lhs.true126, %land.lhs.true38, %land.lhs.true38, %land.lhs.true38, %land.lhs.true38, %land.lhs.true38, %land.lhs.true38, %land.lhs.true38, %land.lhs.true38, %land.lhs.true38, %land.lhs.true38, %sw.bb234, %if.then176, %if.then176, %if.then176, %if.then176, %if.then176, %if.then176, %if.then176, %if.then176, %if.then176, %if.then176, %if.then88, %if.then88, %if.then88, %if.then88, %if.then88, %if.then88, %if.then88, %if.then88, %if.then88, %if.then88, %if.else, %if.else, %if.else, %if.end21, %if.then214, %if.else224, %if.then223, %sw.bb256, %entry
  %x.tr = phi %struct.rtx_def* [ %x, %entry ], [ %21, %sw.bb256 ], [ %arg1.0, %if.then223 ], [ %arg1.0, %if.else224 ], [ %arg1.0, %if.then214 ], [ %arg0.0, %if.end21 ], [ %arg0.0, %if.else ], [ %arg0.0, %if.else ], [ %arg0.0, %if.else ], [ %arg1.0, %if.then88 ], [ %arg1.0, %if.then88 ], [ %arg1.0, %if.then88 ], [ %arg1.0, %if.then88 ], [ %arg1.0, %if.then88 ], [ %arg1.0, %if.then88 ], [ %arg1.0, %if.then88 ], [ %arg1.0, %if.then88 ], [ %arg1.0, %if.then88 ], [ %arg1.0, %if.then88 ], [ %arg0.0, %if.then176 ], [ %arg0.0, %if.then176 ], [ %arg0.0, %if.then176 ], [ %arg0.0, %if.then176 ], [ %arg0.0, %if.then176 ], [ %arg0.0, %if.then176 ], [ %arg0.0, %if.then176 ], [ %arg0.0, %if.then176 ], [ %arg0.0, %if.then176 ], [ %arg0.0, %if.then176 ], [ %19, %sw.bb234 ], [ %arg1.0, %land.lhs.true38 ], [ %arg1.0, %land.lhs.true38 ], [ %arg1.0, %land.lhs.true38 ], [ %arg1.0, %land.lhs.true38 ], [ %arg1.0, %land.lhs.true38 ], [ %arg1.0, %land.lhs.true38 ], [ %arg1.0, %land.lhs.true38 ], [ %arg1.0, %land.lhs.true38 ], [ %arg1.0, %land.lhs.true38 ], [ %arg1.0, %land.lhs.true38 ], [ %arg0.0, %land.lhs.true126 ], [ %arg0.0, %land.lhs.true126 ], [ %arg0.0, %land.lhs.true126 ], [ %arg0.0, %land.lhs.true126 ], [ %arg0.0, %land.lhs.true126 ], [ %arg0.0, %land.lhs.true126 ], [ %arg0.0, %land.lhs.true126 ], [ %arg0.0, %land.lhs.true126 ], [ %arg0.0, %land.lhs.true126 ], [ %arg0.0, %land.lhs.true126 ], [ %arg1.0, %lor.lhs.false103 ], [ %arg0.0, %lor.lhs.false191 ]
  %class.tr = phi i32 [ %class, %entry ], [ %class.tr, %sw.bb256 ], [ 12, %if.then223 ], [ 10, %if.else224 ], [ 10, %if.then214 ], [ %class.tr, %if.end21 ], [ 10, %if.else ], [ 10, %if.else ], [ 10, %if.else ], [ 10, %if.then88 ], [ 10, %if.then88 ], [ 10, %if.then88 ], [ 10, %if.then88 ], [ 10, %if.then88 ], [ 10, %if.then88 ], [ 10, %if.then88 ], [ 10, %if.then88 ], [ 10, %if.then88 ], [ 10, %if.then88 ], [ 10, %if.then176 ], [ 10, %if.then176 ], [ 10, %if.then176 ], [ 10, %if.then176 ], [ 10, %if.then176 ], [ 10, %if.then176 ], [ 10, %if.then176 ], [ 10, %if.then176 ], [ 10, %if.then176 ], [ 10, %if.then176 ], [ 10, %sw.bb234 ], [ 10, %land.lhs.true38 ], [ 10, %land.lhs.true38 ], [ 10, %land.lhs.true38 ], [ 10, %land.lhs.true38 ], [ 10, %land.lhs.true38 ], [ 10, %land.lhs.true38 ], [ 10, %land.lhs.true38 ], [ 10, %land.lhs.true38 ], [ 10, %land.lhs.true38 ], [ 10, %land.lhs.true38 ], [ 10, %land.lhs.true126 ], [ 10, %land.lhs.true126 ], [ 10, %land.lhs.true126 ], [ 10, %land.lhs.true126 ], [ 10, %land.lhs.true126 ], [ 10, %land.lhs.true126 ], [ 10, %land.lhs.true126 ], [ 10, %land.lhs.true126 ], [ 10, %land.lhs.true126 ], [ 10, %land.lhs.true126 ], [ %., %lor.lhs.false103 ], [ %.477, %lor.lhs.false191 ]
  %scale.tr = phi i32 [ %scale, %entry ], [ %mul260, %sw.bb256 ], [ %scale.tr, %if.then223 ], [ %div, %if.else224 ], [ %scale.tr, %if.then214 ], [ %scale.tr, %if.end21 ], [ %scale.tr, %if.else ], [ %scale.tr, %if.else ], [ %scale.tr, %if.else ], [ %scale.tr, %if.then88 ], [ %scale.tr, %if.then88 ], [ %scale.tr, %if.then88 ], [ %scale.tr, %if.then88 ], [ %scale.tr, %if.then88 ], [ %scale.tr, %if.then88 ], [ %scale.tr, %if.then88 ], [ %scale.tr, %if.then88 ], [ %scale.tr, %if.then88 ], [ %scale.tr, %if.then88 ], [ %scale.tr, %if.then176 ], [ %scale.tr, %if.then176 ], [ %scale.tr, %if.then176 ], [ %scale.tr, %if.then176 ], [ %scale.tr, %if.then176 ], [ %scale.tr, %if.then176 ], [ %scale.tr, %if.then176 ], [ %scale.tr, %if.then176 ], [ %scale.tr, %if.then176 ], [ %scale.tr, %if.then176 ], [ %mul, %sw.bb234 ], [ %scale.tr, %land.lhs.true38 ], [ %scale.tr, %land.lhs.true38 ], [ %scale.tr, %land.lhs.true38 ], [ %scale.tr, %land.lhs.true38 ], [ %scale.tr, %land.lhs.true38 ], [ %scale.tr, %land.lhs.true38 ], [ %scale.tr, %land.lhs.true38 ], [ %scale.tr, %land.lhs.true38 ], [ %scale.tr, %land.lhs.true38 ], [ %scale.tr, %land.lhs.true38 ], [ %scale.tr, %land.lhs.true126 ], [ %scale.tr, %land.lhs.true126 ], [ %scale.tr, %land.lhs.true126 ], [ %scale.tr, %land.lhs.true126 ], [ %scale.tr, %land.lhs.true126 ], [ %scale.tr, %land.lhs.true126 ], [ %scale.tr, %land.lhs.true126 ], [ %scale.tr, %land.lhs.true126 ], [ %scale.tr, %land.lhs.true126 ], [ %scale.tr, %land.lhs.true126 ], [ %scale.tr, %lor.lhs.false103 ], [ %scale.tr, %lor.lhs.false191 ]
  %0 = getelementptr inbounds %struct.rtx_def* %x.tr, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %sw.default [
    i32 54, label %sw.epilog
    i32 58, label %sw.epilog
    i32 69, label %sw.epilog
    i32 59, label %sw.epilog
    i32 68, label %sw.epilog
    i32 67, label %sw.epilog
    i32 75, label %sw.bb1
    i32 101, label %sw.bb234
    i32 100, label %sw.bb234
    i32 99, label %sw.bb256
    i32 97, label %sw.bb256
    i32 98, label %sw.bb256
    i32 96, label %sw.bb256
    i32 61, label %sw.bb261
  ]

sw.bb1:                                           ; preds = %tailrecurse
  %fld = getelementptr inbounds %struct.rtx_def* %x.tr, i64 0, i32 1
  %rtx = bitcast [1 x %union.rtunion_def]* %fld to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx, align 8, !tbaa !12
  %arrayidx3 = getelementptr inbounds %struct.rtx_def* %x.tr, i64 0, i32 1, i64 1
  %rtx4 = bitcast %union.rtunion_def* %arrayidx3 to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx4, align 8, !tbaa !12
  %3 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 0
  %bf.load5 = load i32* %3, align 8
  %bf.clear6 = and i32 %bf.load5, 65535
  %4 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 0
  %bf.load7 = load i32* %4, align 8
  %bf.clear8 = and i32 %bf.load7, 65535
  %cmp = icmp eq i32 %bf.clear6, 63
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %sw.bb1
  %arrayidx10 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 0
  %rtx11 = bitcast %union.rtunion_def* %arrayidx10 to %struct.rtx_def**
  %5 = load %struct.rtx_def** %rtx11, align 8, !tbaa !12
  %6 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 0
  %bf.load12 = load i32* %6, align 8
  %bf.clear13 = and i32 %bf.load12, 65535
  br label %if.end

if.end:                                           ; preds = %if.then, %sw.bb1
  %bf.load211 = phi i32 [ %bf.load12, %if.then ], [ %bf.load5, %sw.bb1 ]
  %code0.0 = phi i32 [ %bf.clear13, %if.then ], [ %bf.clear6, %sw.bb1 ]
  %arg0.0 = phi %struct.rtx_def* [ %5, %if.then ], [ %1, %sw.bb1 ]
  %cmp14 = icmp eq i32 %bf.clear8, 63
  br i1 %cmp14, label %if.then15, label %if.end21

if.then15:                                        ; preds = %if.end
  %arrayidx17 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 0
  %rtx18 = bitcast %union.rtunion_def* %arrayidx17 to %struct.rtx_def**
  %7 = load %struct.rtx_def** %rtx18, align 8, !tbaa !12
  %8 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 0
  %bf.load19 = load i32* %8, align 8
  %bf.clear20 = and i32 %bf.load19, 65535
  br label %if.end21

if.end21:                                         ; preds = %if.then15, %if.end
  %bf.load218 = phi i32 [ %bf.load19, %if.then15 ], [ %bf.load7, %if.end ]
  %code1.0 = phi i32 [ %bf.clear20, %if.then15 ], [ %bf.clear8, %if.end ]
  %arg1.0 = phi %struct.rtx_def* [ %7, %if.then15 ], [ %2, %if.end ]
  %9 = and i32 %code1.0, 65534
  %10 = icmp eq i32 %9, 54
  br i1 %10, label %tailrecurse, label %if.else

if.else:                                          ; preds = %if.end21
  switch i32 %code1.0, label %if.else31 [
    i32 68, label %tailrecurse
    i32 67, label %tailrecurse
    i32 58, label %tailrecurse
  ]

if.else31:                                        ; preds = %if.else
  %cmp32 = icmp eq i32 %code0.0, 61
  %cmp33 = icmp eq i32 %code1.0, 61
  %or.cond309 = and i1 %cmp32, %cmp33
  br i1 %or.cond309, label %land.lhs.true34, label %if.else208

land.lhs.true34:                                  ; preds = %if.else31
  %arrayidx36 = getelementptr inbounds %struct.rtx_def* %arg0.0, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx36 to i32*
  %11 = load i32* %rtuint, align 4, !tbaa !5
  %cmp37 = icmp ult i32 %11, 53
  br i1 %cmp37, label %land.lhs.true38, label %land.lhs.true121

land.lhs.true38:                                  ; preds = %land.lhs.true34
  switch i32 %11, label %lor.lhs.false53 [
    i32 20, label %tailrecurse
    i32 16, label %tailrecurse
    i32 7, label %tailrecurse
    i32 6, label %tailrecurse
    i32 5, label %tailrecurse
    i32 4, label %tailrecurse
    i32 3, label %tailrecurse
    i32 2, label %tailrecurse
    i32 1, label %tailrecurse
    i32 0, label %tailrecurse
  ]

lor.lhs.false53:                                  ; preds = %land.lhs.true38
  %.off440 = add i32 %11, -37
  %12 = icmp ult i32 %.off440, 8
  br i1 %12, label %if.then88, label %land.lhs.true121

if.then88:                                        ; preds = %lor.lhs.false53
  switch i32 %11, label %lor.lhs.false103 [
    i32 20, label %tailrecurse
    i32 16, label %tailrecurse
    i32 7, label %tailrecurse
    i32 6, label %tailrecurse
    i32 5, label %tailrecurse
    i32 4, label %tailrecurse
    i32 3, label %tailrecurse
    i32 2, label %tailrecurse
    i32 1, label %tailrecurse
    i32 0, label %tailrecurse
  ]

lor.lhs.false103:                                 ; preds = %if.then88
  %.off439 = add i32 %11, -37
  %13 = icmp ult i32 %.off439, 8
  %. = select i1 %13, i32 10, i32 12
  br label %tailrecurse

land.lhs.true121:                                 ; preds = %lor.lhs.false53, %land.lhs.true34
  %arrayidx123 = getelementptr inbounds %struct.rtx_def* %arg1.0, i64 0, i32 1, i64 0
  %rtuint124 = bitcast %union.rtunion_def* %arrayidx123 to i32*
  %14 = load i32* %rtuint124, align 4, !tbaa !5
  %cmp125 = icmp ult i32 %14, 53
  br i1 %cmp125, label %land.lhs.true126, label %if.else208

land.lhs.true126:                                 ; preds = %land.lhs.true121
  switch i32 %14, label %lor.lhs.false141 [
    i32 20, label %tailrecurse
    i32 16, label %tailrecurse
    i32 7, label %tailrecurse
    i32 6, label %tailrecurse
    i32 5, label %tailrecurse
    i32 4, label %tailrecurse
    i32 3, label %tailrecurse
    i32 2, label %tailrecurse
    i32 1, label %tailrecurse
    i32 0, label %tailrecurse
  ]

lor.lhs.false141:                                 ; preds = %land.lhs.true126
  %.off438 = add i32 %14, -37
  %15 = icmp ult i32 %.off438, 8
  br i1 %15, label %if.then176, label %if.else208

if.then176:                                       ; preds = %lor.lhs.false141
  switch i32 %14, label %lor.lhs.false191 [
    i32 20, label %tailrecurse
    i32 16, label %tailrecurse
    i32 7, label %tailrecurse
    i32 6, label %tailrecurse
    i32 5, label %tailrecurse
    i32 4, label %tailrecurse
    i32 3, label %tailrecurse
    i32 2, label %tailrecurse
    i32 1, label %tailrecurse
    i32 0, label %tailrecurse
  ]

lor.lhs.false191:                                 ; preds = %if.then176
  %.off = add i32 %14, -37
  %16 = icmp ult i32 %.off, 8
  %.477 = select i1 %16, i32 10, i32 12
  br label %tailrecurse

if.else208:                                       ; preds = %lor.lhs.false141, %if.else31, %land.lhs.true121
  br i1 %cmp32, label %land.lhs.true210, label %lor.lhs.false212

land.lhs.true210:                                 ; preds = %if.else208
  %tobool = icmp slt i32 %bf.load211, 0
  %cmp213 = icmp eq i32 %code1.0, 78
  %or.cond311 = or i1 %tobool, %cmp213
  br i1 %or.cond311, label %if.then214, label %if.else215

lor.lhs.false212:                                 ; preds = %if.else208
  %cmp213.old = icmp eq i32 %code1.0, 78
  br i1 %cmp213.old, label %if.then214, label %if.else215

if.then214:                                       ; preds = %lor.lhs.false212, %land.lhs.true210
  tail call fastcc void @record_address_regs(%struct.rtx_def* %arg0.0, i32 12, i32 %scale.tr)
  br label %tailrecurse

if.else215:                                       ; preds = %land.lhs.true210, %lor.lhs.false212
  br i1 %cmp33, label %land.lhs.true217, label %lor.lhs.false221

land.lhs.true217:                                 ; preds = %if.else215
  %tobool220 = icmp slt i32 %bf.load218, 0
  %cmp222 = icmp eq i32 %code0.0, 78
  %or.cond313 = or i1 %tobool220, %cmp222
  br i1 %or.cond313, label %if.then223, label %if.else224

lor.lhs.false221:                                 ; preds = %if.else215
  %cmp222.old = icmp eq i32 %code0.0, 78
  br i1 %cmp222.old, label %if.then223, label %if.else224

if.then223:                                       ; preds = %lor.lhs.false221, %land.lhs.true217
  tail call fastcc void @record_address_regs(%struct.rtx_def* %arg0.0, i32 10, i32 %scale.tr)
  br label %tailrecurse

if.else224:                                       ; preds = %land.lhs.true217, %lor.lhs.false221
  %div = sdiv i32 %scale.tr, 2
  tail call fastcc void @record_address_regs(%struct.rtx_def* %arg0.0, i32 12, i32 %div)
  tail call fastcc void @record_address_regs(%struct.rtx_def* %arg0.0, i32 10, i32 %div)
  tail call fastcc void @record_address_regs(%struct.rtx_def* %arg1.0, i32 12, i32 %div)
  br label %tailrecurse

sw.bb234:                                         ; preds = %tailrecurse, %tailrecurse
  %fld235 = getelementptr inbounds %struct.rtx_def* %x.tr, i64 0, i32 1
  %rtx237 = bitcast [1 x %union.rtunion_def]* %fld235 to %struct.rtx_def**
  %17 = load %struct.rtx_def** %rtx237, align 8, !tbaa !12
  %mul = shl nsw i32 %scale.tr, 1
  tail call fastcc void @record_address_regs(%struct.rtx_def* %17, i32 12, i32 %mul)
  %arrayidx239 = getelementptr inbounds %struct.rtx_def* %x.tr, i64 0, i32 1, i64 1
  %rtx240 = bitcast %union.rtunion_def* %arrayidx239 to %struct.rtx_def**
  %18 = load %struct.rtx_def** %rtx240, align 8, !tbaa !12
  %arrayidx242 = getelementptr inbounds %struct.rtx_def* %18, i64 0, i32 1, i64 1
  %rtx243 = bitcast %union.rtunion_def* %arrayidx242 to %struct.rtx_def**
  %19 = load %struct.rtx_def** %rtx243, align 8, !tbaa !12
  %20 = getelementptr inbounds %struct.rtx_def* %19, i64 0, i32 0
  %bf.load244 = load i32* %20, align 8
  %bf.clear245 = and i32 %bf.load244, 65535
  %cmp246 = icmp eq i32 %bf.clear245, 61
  br i1 %cmp246, label %tailrecurse, label %sw.epilog

sw.bb256:                                         ; preds = %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse
  %arrayidx258 = getelementptr inbounds %struct.rtx_def* %x.tr, i64 0, i32 1, i64 0
  %rtx259 = bitcast %union.rtunion_def* %arrayidx258 to %struct.rtx_def**
  %21 = load %struct.rtx_def** %rtx259, align 8, !tbaa !12
  %mul260 = shl nsw i32 %scale.tr, 1
  br label %tailrecurse

sw.bb261:                                         ; preds = %tailrecurse
  %arrayidx263 = getelementptr inbounds %struct.rtx_def* %x.tr, i64 0, i32 1, i64 0
  %rtuint264 = bitcast %union.rtunion_def* %arrayidx263 to i32*
  %22 = load i32* %rtuint264, align 4, !tbaa !5
  %idxprom = zext i32 %22 to i64
  %23 = load %struct.costs** @costs, align 8, !tbaa !12
  %24 = load i32* @target_flags, align 4, !tbaa !5
  %and = lshr i32 %24, 25
  %25 = and i32 %and, 1
  %26 = or i32 %25, 4
  %call = tail call i32 @ix86_memory_move_cost(i32 %26, i32 %class.tr, i32 1) #1
  %mul268 = mul nsw i32 %call, %scale.tr
  %div269 = sdiv i32 %mul268, 2
  %mem_cost = getelementptr inbounds %struct.costs* %23, i64 %idxprom, i32 1
  %27 = load i32* %mem_cost, align 4, !tbaa !17
  %add = add nsw i32 %27, %div269
  store i32 %add, i32* %mem_cost, align 4, !tbaa !17
  %idxprom271 = sext i32 %class.tr to i64
  br label %for.body

for.body:                                         ; preds = %for.body, %sw.bb261
  %indvars.iv463 = phi i64 [ 0, %sw.bb261 ], [ %indvars.iv.next464, %for.body ]
  %28 = load i32* @target_flags, align 4, !tbaa !5
  %and273 = lshr i32 %28, 25
  %29 = and i32 %and273, 1
  %30 = or i32 %29, 4
  %idxprom276419 = zext i32 %30 to i64
  %arrayidx279 = getelementptr inbounds [59 x [25 x [25 x i32]]]* @may_move_in_cost, i64 0, i64 %idxprom276419, i64 %indvars.iv463, i64 %idxprom271
  %31 = load i32* %arrayidx279, align 4, !tbaa !5
  %mul280 = mul nsw i32 %31, %scale.tr
  %div281 = sdiv i32 %mul280, 2
  %arrayidx283 = getelementptr inbounds %struct.costs* %23, i64 %idxprom, i32 0, i64 %indvars.iv463
  %32 = load i32* %arrayidx283, align 4, !tbaa !5
  %add284 = add nsw i32 %32, %div281
  store i32 %add284, i32* %arrayidx283, align 4, !tbaa !5
  %indvars.iv.next464 = add nuw nsw i64 %indvars.iv463, 1
  %exitcond = icmp eq i64 %indvars.iv.next464, 25
  br i1 %exitcond, label %sw.epilog, label %for.body

sw.default:                                       ; preds = %tailrecurse
  %idxprom285421 = zext i32 %bf.clear to i64
  %arrayidx286 = getelementptr inbounds [153 x i8*]* @rtx_format, i64 0, i64 %idxprom285421
  %33 = load i8** %arrayidx286, align 8, !tbaa !12
  %arrayidx289 = getelementptr inbounds [153 x i8]* @rtx_length, i64 0, i64 %idxprom285421
  %34 = load i8* %arrayidx289, align 1, !tbaa !10
  %cmp291452 = icmp eq i8 %34, 0
  br i1 %cmp291452, label %sw.epilog, label %for.body293.lr.ph

for.body293.lr.ph:                                ; preds = %sw.default
  %35 = zext i8 %34 to i64
  br label %for.body293

for.body293:                                      ; preds = %for.body293.lr.ph, %for.cond290.backedge
  %indvars.iv = phi i64 [ %35, %for.body293.lr.ph ], [ %indvars.iv.next, %for.cond290.backedge ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  %arrayidx295 = getelementptr inbounds i8* %33, i64 %indvars.iv.next
  %36 = load i8* %arrayidx295, align 1, !tbaa !10
  %cmp297 = icmp eq i8 %36, 101
  br i1 %cmp297, label %if.then299, label %for.cond290.backedge

for.cond290.backedge:                             ; preds = %for.body293, %if.then299
  %37 = trunc i64 %indvars.iv.next to i32
  %cmp291 = icmp sgt i32 %37, 0
  br i1 %cmp291, label %for.body293, label %sw.epilog

if.then299:                                       ; preds = %for.body293
  %arrayidx302 = getelementptr inbounds %struct.rtx_def* %x.tr, i64 0, i32 1, i64 %indvars.iv.next
  %rtx303 = bitcast %union.rtunion_def* %arrayidx302 to %struct.rtx_def**
  %38 = load %struct.rtx_def** %rtx303, align 8, !tbaa !12
  tail call fastcc void @record_address_regs(%struct.rtx_def* %38, i32 %class.tr, i32 %scale.tr)
  br label %for.cond290.backedge

sw.epilog:                                        ; preds = %sw.bb234, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %for.body, %for.cond290.backedge, %sw.default
  ret void
}

declare i32 @rtx_equal_p(%struct.rtx_def*, %struct.rtx_def*) #2

declare %struct.rtx_def* @prev_real_insn(%struct.rtx_def*) #2

declare %struct.rtx_def* @gen_lowpart(i32, %struct.rtx_def*) #2

declare %struct.rtx_def* @emit_insn_before(%struct.rtx_def*, %struct.rtx_def*) #2

declare %struct.rtx_def* @gen_move_insn(%struct.rtx_def*, %struct.rtx_def*) #2

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #1

; Function Attrs: nounwind uwtable
define internal fastcc void @record_reg_classes(i32 %n_alts, i32 %n_ops, i32* nocapture readonly %modes, i8** nocapture %constraints, %struct.rtx_def* %insn, %struct.costs* nocapture %op_costs, %struct.reg_pref* readonly %reg_pref) #0 {
entry:
  %this_op_costs = alloca [30 x %struct.costs], align 16
  %classes = alloca [30 x i32], align 16
  %0 = bitcast [30 x i32]* %classes to i8*
  %allows_mem = alloca [30 x i32], align 16
  %1 = bitcast [30 x i32]* %allows_mem to i8*
  %cmp188 = icmp sgt i32 %n_alts, 0
  br i1 %cmp188, label %for.body.lr.ph, label %for.end1265

for.body.lr.ph:                                   ; preds = %entry
  %2 = bitcast [30 x %struct.costs]* %this_op_costs to i8*
  %cmp2178 = icmp sgt i32 %n_ops, 0
  %tobool184 = icmp eq %struct.reg_pref* %reg_pref, null
  br label %for.body

for.body:                                         ; preds = %cleanup, %for.body.lr.ph
  %alt.0189 = phi i32 [ 0, %for.body.lr.ph ], [ %inc1264, %cleanup ]
  call void @llvm.lifetime.start(i64 3120, i8* %2) #1
  call void @llvm.lifetime.start(i64 120, i8* %0) #1
  call void @llvm.lifetime.start(i64 120, i8* %1) #1
  br i1 %cmp2178, label %for.body3, label %cleanup

for.body3:                                        ; preds = %for.body, %for.inc1176
  %indvars.iv203 = phi i64 [ %indvars.iv.next204, %for.inc1176 ], [ 0, %for.body ]
  %alt_fail.0180 = phi i32 [ %alt_fail.2, %for.inc1176 ], [ 0, %for.body ]
  %alt_cost.0179 = phi i32 [ %alt_cost.5, %for.inc1176 ], [ 0, %for.body ]
  %arrayidx = getelementptr inbounds i8** %constraints, i64 %indvars.iv203
  %3 = load i8** %arrayidx, align 8, !tbaa !12
  %arrayidx5 = getelementptr inbounds %struct.recog_data* @recog_data, i64 0, i32 0, i64 %indvars.iv203
  %4 = load %struct.rtx_def** %arrayidx5, align 8, !tbaa !12
  %arrayidx7 = getelementptr inbounds i32* %modes, i64 %indvars.iv203
  %5 = load i32* %arrayidx7, align 4, !tbaa !10
  %arrayidx9 = getelementptr inbounds [30 x i32]* %classes, i64 0, i64 %indvars.iv203
  store i32 0, i32* %arrayidx9, align 4, !tbaa !10
  %arrayidx11 = getelementptr inbounds [30 x i32]* %allows_mem, i64 0, i64 %indvars.iv203
  store i32 0, i32* %arrayidx11, align 4, !tbaa !5
  %6 = load i8* %3, align 1, !tbaa !10
  %cmp12 = icmp eq i8 %6, 0
  br i1 %cmp12, label %if.then, label %while.cond

if.then:                                          ; preds = %for.body3
  %7 = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 0
  %bf.load = load i32* %7, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp14 = icmp eq i32 %bf.clear, 61
  br i1 %cmp14, label %land.lhs.true, label %for.inc1176

land.lhs.true:                                    ; preds = %if.then
  %arrayidx16 = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx16 to i32*
  %8 = load i32* %rtuint, align 4, !tbaa !5
  %cmp17 = icmp ugt i32 %8, 52
  br i1 %cmp17, label %if.then19, label %for.inc1176

if.then19:                                        ; preds = %land.lhs.true
  %arrayidx21 = getelementptr inbounds [30 x %struct.costs]* %this_op_costs, i64 0, i64 %indvars.iv203
  %9 = bitcast %struct.costs* %arrayidx21 to i8*
  call void @llvm.memset.p0i8.i64(i8* %9, i8 0, i64 104, i32 8, i1 false)
  br label %for.inc1176

while.cond:                                       ; preds = %for.body3, %while.body
  %10 = phi i8 [ %.pre215, %while.body ], [ %6, %for.body3 ]
  %p.0 = phi i8* [ %incdec.ptr, %while.body ], [ %3, %for.body3 ]
  switch i8 %10, label %lor.rhs [
    i8 37, label %while.body
    i8 61, label %while.body
    i8 43, label %while.body
    i8 38, label %while.body
  ]

lor.rhs:                                          ; preds = %while.cond
  %cmp38 = icmp sgt i8 %10, 47
  br i1 %cmp38, label %land.lhs.true40, label %while.cond233.preheader

while.body:                                       ; preds = %while.cond, %while.cond, %while.cond, %while.cond
  %incdec.ptr = getelementptr inbounds i8* %p.0, i64 1
  %.pre215 = load i8* %incdec.ptr, align 1, !tbaa !10
  br label %while.cond

land.lhs.true40:                                  ; preds = %lor.rhs
  %conv37 = sext i8 %10 to i32
  %11 = add nsw i64 %indvars.iv203, 48
  %12 = trunc i64 %11 to i32
  %cmp43 = icmp sgt i32 %conv37, %12
  br i1 %cmp43, label %while.cond233.preheader, label %land.lhs.true45

land.lhs.true45:                                  ; preds = %land.lhs.true40
  %arrayidx46 = getelementptr inbounds i8* %p.0, i64 1
  %13 = load i8* %arrayidx46, align 1, !tbaa !10
  switch i8 %13, label %while.cond233.preheader [
    i8 44, label %if.then55
    i8 0, label %if.then55
  ]

if.then55:                                        ; preds = %land.lhs.true45, %land.lhs.true45
  %conv57 = sext i8 %10 to i64
  %sub = add i64 %conv57, -48
  %arrayidx59 = getelementptr inbounds [30 x i32]* %classes, i64 0, i64 %sub
  %14 = load i32* %arrayidx59, align 4, !tbaa !10
  store i32 %14, i32* %arrayidx9, align 4, !tbaa !10
  %arrayidx63 = getelementptr inbounds [30 x i32]* %allows_mem, i64 0, i64 %sub
  %15 = load i32* %arrayidx63, align 4, !tbaa !5
  store i32 %15, i32* %arrayidx11, align 4, !tbaa !5
  %16 = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 0
  %bf.load66 = load i32* %16, align 8
  %bf.clear67 = and i32 %bf.load66, 65535
  %cmp68 = icmp eq i32 %bf.clear67, 61
  br i1 %cmp68, label %lor.lhs.false70, label %if.then76

lor.lhs.false70:                                  ; preds = %if.then55
  %arrayidx72 = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 1, i64 0
  %rtuint73 = bitcast %union.rtunion_def* %arrayidx72 to i32*
  %17 = load i32* %rtuint73, align 4, !tbaa !5
  %cmp74 = icmp ult i32 %17, 53
  br i1 %cmp74, label %if.then76, label %if.else91

if.then76:                                        ; preds = %if.then55, %lor.lhs.false70
  %arrayidx78 = getelementptr inbounds %struct.recog_data* @recog_data, i64 0, i32 0, i64 %sub
  %18 = load %struct.rtx_def** %arrayidx78, align 8, !tbaa !12
  %call = call i32 @rtx_equal_p(%struct.rtx_def* %18, %struct.rtx_def* %4) #1
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.else, label %while.cond233.preheader

if.else:                                          ; preds = %if.then76
  %19 = load i32* %arrayidx59, align 4, !tbaa !10
  %cmp82 = icmp eq i32 %19, 0
  br i1 %cmp82, label %while.cond233.preheader, label %if.then84

if.then84:                                        ; preds = %if.else
  %bf.load.i = load i32* %16, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  %cmp.i = icmp eq i32 %bf.clear.i, 62
  br i1 %cmp.i, label %copy_cost.exit, label %if.end.i

if.end.i:                                         ; preds = %if.then84
  %call.i = call i32 @ix86_preferred_reload_class(%struct.rtx_def* %4, i32 %19) #1
  %bf.load17.i = load i32* %16, align 8
  %bf.clear18.i = and i32 %bf.load17.i, 65535
  %cmp19.i = icmp eq i32 %bf.clear18.i, 66
  %cmp21.i = icmp eq i32 %call.i, 0
  %or.cond39.i = or i1 %cmp19.i, %cmp21.i
  br i1 %or.cond39.i, label %if.then22.i, label %if.else.i

if.then22.i:                                      ; preds = %if.end.i
  %call23.i = call i32 @ix86_memory_move_cost(i32 %5, i32 %call.i, i32 1) #1
  br label %copy_cost.exit

if.else.i:                                        ; preds = %if.end.i
  %cmp26.i = icmp eq i32 %bf.clear18.i, 61
  br i1 %cmp26.i, label %if.then27.i, label %copy_cost.exit

if.then27.i:                                      ; preds = %if.else.i
  %idxprom28.i = sext i32 %call.i to i64
  %arrayidx29.i = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 1, i64 0
  %rtuint.i = bitcast %union.rtunion_def* %arrayidx29.i to i32*
  %20 = load i32* %rtuint.i, align 4, !tbaa !5
  %idxprom30.i = zext i32 %20 to i64
  %arrayidx31.i = getelementptr inbounds [53 x i32]* @regclass_map, i64 0, i64 %idxprom30.i
  %21 = load i32* %arrayidx31.i, align 4, !tbaa !10
  %idxprom32.i = sext i32 %21 to i64
  %idxprom33.i = zext i32 %5 to i64
  %arrayidx36.i = getelementptr inbounds [59 x [25 x [25 x i32]]]* @move_cost, i64 0, i64 %idxprom33.i, i64 %idxprom32.i, i64 %idxprom28.i
  %22 = load i32* %arrayidx36.i, align 4, !tbaa !5
  br label %copy_cost.exit

copy_cost.exit:                                   ; preds = %if.then84, %if.then22.i, %if.else.i, %if.then27.i
  %retval.0.i = phi i32 [ %call23.i, %if.then22.i ], [ %22, %if.then27.i ], [ 0, %if.then84 ], [ 4, %if.else.i ]
  %add88 = add nsw i32 %retval.0.i, %alt_cost.0179
  br label %while.cond233.preheader

if.else91:                                        ; preds = %lor.lhs.false70
  %arrayidx93 = getelementptr inbounds %struct.recog_data* @recog_data, i64 0, i32 0, i64 %sub
  %23 = load %struct.rtx_def** %arrayidx93, align 8, !tbaa !12
  %24 = getelementptr inbounds %struct.rtx_def* %23, i64 0, i32 0
  %bf.load94 = load i32* %24, align 8
  %bf.clear95 = and i32 %bf.load94, 65535
  %cmp96 = icmp eq i32 %bf.clear95, 61
  br i1 %cmp96, label %lor.lhs.false98, label %if.then106

lor.lhs.false98:                                  ; preds = %if.else91
  %arrayidx102 = getelementptr inbounds %struct.rtx_def* %23, i64 0, i32 1, i64 0
  %rtuint103 = bitcast %union.rtunion_def* %arrayidx102 to i32*
  %25 = load i32* %rtuint103, align 4, !tbaa !5
  %cmp104 = icmp ult i32 %25, 53
  br i1 %cmp104, label %if.then106, label %for.cond123.preheader

for.cond123.preheader:                            ; preds = %lor.lhs.false98
  %arrayidx128 = getelementptr inbounds %struct.recog_data* @recog_data, i64 0, i32 4, i64 %indvars.iv203
  %26 = load i32* %arrayidx128, align 4, !tbaa !10
  %cmp141 = icmp eq i32 %26, 0
  %idxprom148 = zext i32 %5 to i64
  br label %for.body126

if.then106:                                       ; preds = %if.else91, %lor.lhs.false98
  %27 = load i32* %arrayidx59, align 4, !tbaa !10
  %cmp109 = icmp eq i32 %27, 0
  br i1 %cmp109, label %while.cond233.preheader, label %if.else112

while.cond233.preheader:                          ; preds = %copy_cost.exit, %copy_cost.exit68, %lor.rhs, %land.lhs.true40, %if.else, %land.lhs.true45, %if.then76, %if.then106
  %28 = phi i32 [ %15, %if.then106 ], [ %15, %if.then76 ], [ 0, %land.lhs.true45 ], [ %15, %if.else ], [ 0, %land.lhs.true40 ], [ 0, %lor.rhs ], [ %15, %copy_cost.exit68 ], [ %15, %copy_cost.exit ]
  %29 = phi i32 [ %14, %if.then106 ], [ %14, %if.then76 ], [ 0, %land.lhs.true45 ], [ %14, %if.else ], [ 0, %land.lhs.true40 ], [ 0, %lor.rhs ], [ %14, %copy_cost.exit68 ], [ %14, %copy_cost.exit ]
  %win.0.ph = phi i32 [ 0, %if.then106 ], [ 1, %if.then76 ], [ 0, %land.lhs.true45 ], [ 0, %if.else ], [ 0, %land.lhs.true40 ], [ 0, %lor.rhs ], [ 0, %copy_cost.exit68 ], [ 1, %copy_cost.exit ]
  %alt_cost.3.ph = phi i32 [ %alt_cost.0179, %if.then106 ], [ %alt_cost.0179, %if.then76 ], [ %alt_cost.0179, %land.lhs.true45 ], [ %alt_cost.0179, %if.else ], [ %alt_cost.0179, %land.lhs.true40 ], [ %alt_cost.0179, %lor.rhs ], [ %add118, %copy_cost.exit68 ], [ %add88, %copy_cost.exit ]
  %alt_fail.1.ph = phi i32 [ 1, %if.then106 ], [ %alt_fail.0180, %if.then76 ], [ %alt_fail.0180, %land.lhs.true45 ], [ %alt_fail.0180, %if.else ], [ %alt_fail.0180, %land.lhs.true40 ], [ %alt_fail.0180, %lor.rhs ], [ %alt_fail.0180, %copy_cost.exit68 ], [ %alt_fail.0180, %copy_cost.exit ]
  %30 = load i8* %p.0, align 1, !tbaa !10
  %tobool235163 = icmp eq i8 %30, 0
  %.pre272 = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 0
  br i1 %tobool235163, label %while.end966, label %land.rhs236.lr.ph

land.rhs236.lr.ph:                                ; preds = %while.cond233.preheader
  %arrayidx275 = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx275 to %struct.rtx_def**
  %rtwint = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 1, i64 0, i32 0
  br label %land.rhs236

if.else112:                                       ; preds = %if.then106
  %cmp.i44 = icmp eq i32 %bf.clear95, 62
  br i1 %cmp.i44, label %copy_cost.exit68, label %if.end.i48

if.end.i48:                                       ; preds = %if.else112
  %call.i45 = call i32 @ix86_preferred_reload_class(%struct.rtx_def* %23, i32 %27) #1
  %bf.load17.i49 = load i32* %24, align 8
  %bf.clear18.i50 = and i32 %bf.load17.i49, 65535
  %cmp19.i51 = icmp eq i32 %bf.clear18.i50, 66
  %cmp21.i52 = icmp eq i32 %call.i45, 0
  %or.cond39.i53 = or i1 %cmp19.i51, %cmp21.i52
  br i1 %or.cond39.i53, label %if.then22.i55, label %if.else.i57

if.then22.i55:                                    ; preds = %if.end.i48
  %call23.i54 = call i32 @ix86_memory_move_cost(i32 %5, i32 %call.i45, i32 1) #1
  br label %copy_cost.exit68

if.else.i57:                                      ; preds = %if.end.i48
  %cmp26.i56 = icmp eq i32 %bf.clear18.i50, 61
  br i1 %cmp26.i56, label %if.then27.i66, label %copy_cost.exit68

if.then27.i66:                                    ; preds = %if.else.i57
  %idxprom28.i58 = sext i32 %call.i45 to i64
  %arrayidx29.i59 = getelementptr inbounds %struct.rtx_def* %23, i64 0, i32 1, i64 0
  %rtuint.i60 = bitcast %union.rtunion_def* %arrayidx29.i59 to i32*
  %31 = load i32* %rtuint.i60, align 4, !tbaa !5
  %idxprom30.i61 = zext i32 %31 to i64
  %arrayidx31.i62 = getelementptr inbounds [53 x i32]* @regclass_map, i64 0, i64 %idxprom30.i61
  %32 = load i32* %arrayidx31.i62, align 4, !tbaa !10
  %idxprom32.i63 = sext i32 %32 to i64
  %idxprom33.i64 = zext i32 %5 to i64
  %arrayidx36.i65 = getelementptr inbounds [59 x [25 x [25 x i32]]]* @move_cost, i64 0, i64 %idxprom33.i64, i64 %idxprom32.i63, i64 %idxprom28.i58
  %33 = load i32* %arrayidx36.i65, align 4, !tbaa !5
  br label %copy_cost.exit68

copy_cost.exit68:                                 ; preds = %if.else112, %if.then22.i55, %if.else.i57, %if.then27.i66
  %retval.0.i67 = phi i32 [ %call23.i54, %if.then22.i55 ], [ %33, %if.then27.i66 ], [ 0, %if.else112 ], [ 4, %if.else.i57 ]
  %add118 = add nsw i32 %retval.0.i67, %alt_cost.0179
  br label %while.cond233.preheader

for.body126:                                      ; preds = %cond.end153, %for.cond123.preheader
  %indvars.iv197 = phi i64 [ 0, %for.cond123.preheader ], [ %indvars.iv.next198, %cond.end153 ]
  %cmp129 = icmp eq i32 %26, 1
  br i1 %cmp129, label %cond.end, label %cond.true

cond.true:                                        ; preds = %for.body126
  %idxprom133 = sext i32 %14 to i64
  %arrayidx138 = getelementptr inbounds [59 x [25 x [25 x i32]]]* @may_move_in_cost, i64 0, i64 %idxprom148, i64 %indvars.iv197, i64 %idxprom133
  %34 = load i32* %arrayidx138, align 4, !tbaa !5
  br label %cond.end

cond.end:                                         ; preds = %for.body126, %cond.true
  %cond = phi i32 [ %34, %cond.true ], [ 0, %for.body126 ]
  br i1 %cmp141, label %cond.end153, label %cond.true143

cond.true143:                                     ; preds = %cond.end
  %idxprom147 = sext i32 %14 to i64
  %arrayidx151 = getelementptr inbounds [59 x [25 x [25 x i32]]]* @may_move_out_cost, i64 0, i64 %idxprom148, i64 %idxprom147, i64 %indvars.iv197
  %35 = load i32* %arrayidx151, align 4, !tbaa !5
  br label %cond.end153

cond.end153:                                      ; preds = %cond.end, %cond.true143
  %cond154 = phi i32 [ %35, %cond.true143 ], [ 0, %cond.end ]
  %add155 = add nsw i32 %cond154, %cond
  %arrayidx157 = getelementptr inbounds [30 x %struct.costs]* %this_op_costs, i64 0, i64 %indvars.iv203, i32 0, i64 %indvars.iv197
  store i32 %add155, i32* %arrayidx157, align 4, !tbaa !5
  %indvars.iv.next198 = add nuw nsw i64 %indvars.iv197, 1
  %exitcond199 = icmp eq i64 %indvars.iv.next198, 25
  br i1 %exitcond199, label %for.end, label %for.body126

for.end:                                          ; preds = %cond.end153
  br i1 %cmp141, label %cond.true173, label %cond.end167

cond.end167:                                      ; preds = %for.end
  %call165 = call i32 @ix86_memory_move_cost(i32 %5, i32 %14, i32 0) #1
  %.pre216 = load i32* %arrayidx128, align 4, !tbaa !10
  %phitmp274 = icmp eq i32 %.pre216, 1
  br i1 %phitmp274, label %cond.end178, label %cond.true173

cond.true173:                                     ; preds = %for.end, %cond.end167
  %cond168275 = phi i32 [ %call165, %cond.end167 ], [ 0, %for.end ]
  %36 = load i32* %arrayidx9, align 4, !tbaa !10
  %call176 = call i32 @ix86_memory_move_cost(i32 %5, i32 %36, i32 1) #1
  br label %cond.end178

cond.end178:                                      ; preds = %cond.end167, %cond.true173
  %cond168276 = phi i32 [ %cond168275, %cond.true173 ], [ %call165, %cond.end167 ]
  %cond179 = phi i32 [ %call176, %cond.true173 ], [ 0, %cond.end167 ]
  %add180 = add nsw i32 %cond179, %cond168276
  %sub183 = sub i32 %add180, %15
  %mem_cost = getelementptr inbounds [30 x %struct.costs]* %this_op_costs, i64 0, i64 %indvars.iv203, i32 1
  store i32 %sub183, i32* %mem_cost, align 4, !tbaa !17
  br i1 %tobool184, label %if.end200, label %if.then185

if.then185:                                       ; preds = %cond.end178
  %37 = load i32* %arrayidx9, align 4, !tbaa !10
  %idxprom188 = sext i32 %37 to i64
  %38 = load i32* %rtuint73, align 4, !tbaa !5
  %idxprom192 = zext i32 %38 to i64
  %prefclass = getelementptr inbounds %struct.reg_pref* %reg_pref, i64 %idxprom192, i32 0
  %39 = load i8* %prefclass, align 1, !tbaa !14
  %idxprom194 = zext i8 %39 to i64
  %arrayidx198 = getelementptr inbounds [59 x [25 x [25 x i32]]]* @may_move_in_cost, i64 0, i64 %idxprom148, i64 %idxprom194, i64 %idxprom188
  %40 = load i32* %arrayidx198, align 4, !tbaa !5
  %add199 = add nsw i32 %40, %alt_cost.0179
  br label %if.end200

if.end200:                                        ; preds = %cond.end178, %if.then185
  %alt_cost.1 = phi i32 [ %add199, %if.then185 ], [ %alt_cost.0179, %cond.end178 ]
  %41 = load %struct.rtx_def** %arrayidx5, align 8, !tbaa !12
  %arrayidx204 = getelementptr inbounds %struct.rtx_def* %41, i64 0, i32 1, i64 0
  %rtuint205 = bitcast %union.rtunion_def* %arrayidx204 to i32*
  %42 = load i32* %rtuint205, align 4, !tbaa !5
  %43 = load %struct.rtx_def** %arrayidx93, align 8, !tbaa !12
  %arrayidx209 = getelementptr inbounds %struct.rtx_def* %43, i64 0, i32 1, i64 0
  %rtuint210 = bitcast %union.rtunion_def* %arrayidx209 to i32*
  %44 = load i32* %rtuint210, align 4, !tbaa !5
  %cmp211 = icmp eq i32 %42, %44
  br i1 %cmp211, label %while.cond219.preheader, label %land.lhs.true213

land.lhs.true213:                                 ; preds = %if.end200
  %call214 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn, i32 1, %struct.rtx_def* %4) #1
  %tobool215 = icmp eq %struct.rtx_def* %call214, null
  %add217 = add nsw i32 %alt_cost.1, 2
  %add217.alt_cost.1 = select i1 %tobool215, i32 %add217, i32 %alt_cost.1
  br label %while.cond219.preheader

while.cond219.preheader:                          ; preds = %if.end200, %land.lhs.true213
  %alt_cost.2.ph = phi i32 [ %add217.alt_cost.1, %land.lhs.true213 ], [ %alt_cost.1, %if.end200 ]
  br label %while.cond219

while.cond219:                                    ; preds = %while.cond219.preheader, %land.rhs
  %p.1 = phi i8* [ %incdec.ptr222, %land.rhs ], [ %p.0, %while.cond219.preheader ]
  %45 = load i8* %p.1, align 1, !tbaa !10
  %tobool221 = icmp eq i8 %45, 0
  br i1 %tobool221, label %while.end227, label %land.rhs

land.rhs:                                         ; preds = %while.cond219
  %incdec.ptr222 = getelementptr inbounds i8* %p.1, i64 1
  %cmp224 = icmp eq i8 %45, 44
  br i1 %cmp224, label %while.end227, label %while.cond219

while.end227:                                     ; preds = %land.rhs, %while.cond219
  %p.2 = phi i8* [ %incdec.ptr222, %land.rhs ], [ %p.1, %while.cond219 ]
  store i8* %p.2, i8** %arrayidx, align 8, !tbaa !12
  br label %for.inc1176

land.rhs236:                                      ; preds = %land.rhs236.lr.ph, %while.cond233.backedge
  %46 = phi i32 [ %28, %land.rhs236.lr.ph ], [ %89, %while.cond233.backedge ]
  %47 = phi i32 [ %29, %land.rhs236.lr.ph ], [ %90, %while.cond233.backedge ]
  %48 = phi i8 [ %30, %land.rhs236.lr.ph ], [ %91, %while.cond233.backedge ]
  %alt_cost.3168 = phi i32 [ %alt_cost.3.ph, %land.rhs236.lr.ph ], [ %alt_cost.3.be, %while.cond233.backedge ]
  %p.3167 = phi i8* [ %p.0, %land.rhs236.lr.ph ], [ %p.3.be, %while.cond233.backedge ]
  %allows_addr.0165 = phi i32 [ 0, %land.rhs236.lr.ph ], [ %allows_addr.0.be, %while.cond233.backedge ]
  %win.0164 = phi i32 [ %win.0.ph, %land.rhs236.lr.ph ], [ %win.0.be, %while.cond233.backedge ]
  %incdec.ptr237 = getelementptr inbounds i8* %p.3167, i64 1
  %cmp239 = icmp eq i8 %48, 44
  br i1 %cmp239, label %while.end966, label %while.body242

while.body242:                                    ; preds = %land.rhs236
  %conv238 = zext i8 %48 to i32
  switch i32 %conv238, label %sw.default [
    i32 42, label %sw.bb
    i32 63, label %sw.bb245
    i32 33, label %while.cond233.backedge
    i32 35, label %while.cond233.backedge
    i32 38, label %while.cond233.backedge
    i32 48, label %while.cond233.backedge
    i32 49, label %while.cond233.backedge
    i32 50, label %while.cond233.backedge
    i32 51, label %while.cond233.backedge
    i32 52, label %while.cond233.backedge
    i32 53, label %while.cond233.backedge
    i32 54, label %while.cond233.backedge
    i32 55, label %while.cond233.backedge
    i32 56, label %while.cond233.backedge
    i32 57, label %while.cond233.backedge
    i32 112, label %sw.bb248
    i32 109, label %sw.bb259
    i32 111, label %sw.bb259
    i32 86, label %sw.bb259
    i32 60, label %sw.bb268
    i32 62, label %sw.bb290
    i32 69, label %sw.bb313
    i32 70, label %sw.bb320
    i32 71, label %sw.bb327
    i32 72, label %sw.bb327
    i32 115, label %sw.bb349
    i32 105, label %while.body242.sw.bb367_crit_edge
    i32 110, label %sw.bb432
    i32 73, label %sw.bb450
    i32 74, label %sw.bb450
    i32 75, label %sw.bb450
    i32 76, label %sw.bb450
    i32 77, label %sw.bb450
    i32 78, label %sw.bb450
    i32 79, label %sw.bb450
    i32 80, label %sw.bb450
    i32 88, label %sw.bb553
    i32 103, label %sw.bb554
    i32 114, label %sw.bb626
  ]

while.body242.sw.bb367_crit_edge:                 ; preds = %while.body242
  %bf.load368.pre = load i32* %.pre272, align 8
  br label %sw.bb367

sw.bb:                                            ; preds = %while.body242
  %incdec.ptr244 = getelementptr inbounds i8* %p.3167, i64 2
  br label %while.cond233.backedge

sw.bb245:                                         ; preds = %while.body242
  %add246 = add nsw i32 %alt_cost.3168, 2
  br label %while.cond233.backedge

sw.bb248:                                         ; preds = %while.body242
  %bf.load249 = load i32* %.pre272, align 8
  %bf.lshr = lshr i32 %bf.load249, 16
  %bf.clear250 = and i32 %bf.lshr, 255
  %call251 = call i32 @address_operand(%struct.rtx_def* %4, i32 %bf.clear250) #1
  %idxprom254 = sext i32 %47 to i64
  %arrayidx256 = getelementptr inbounds [25 x [25 x i32]]* @reg_class_subunion, i64 0, i64 %idxprom254, i64 12
  %49 = load i32* %arrayidx256, align 4, !tbaa !10
  store i32 %49, i32* %arrayidx9, align 4, !tbaa !10
  br label %while.cond233.backedge

sw.bb259:                                         ; preds = %while.body242, %while.body242, %while.body242
  %bf.load262 = load i32* %.pre272, align 8
  store i32 1, i32* %arrayidx11, align 4, !tbaa !5
  %bf.clear263 = and i32 %bf.load262, 65535
  %cmp264 = icmp eq i32 %bf.clear263, 66
  %.win.0 = select i1 %cmp264, i32 1, i32 %win.0164
  br label %while.cond233.backedge

sw.bb268:                                         ; preds = %while.body242
  %bf.load269 = load i32* %.pre272, align 8
  %bf.clear270 = and i32 %bf.load269, 65535
  %cmp271 = icmp eq i32 %bf.clear270, 66
  br i1 %cmp271, label %land.lhs.true273, label %while.cond233.backedge

land.lhs.true273:                                 ; preds = %sw.bb268
  %50 = load %struct.rtx_def** %rtx, align 8, !tbaa !12
  %51 = getelementptr inbounds %struct.rtx_def* %50, i64 0, i32 0
  %bf.load276 = load i32* %51, align 8
  %bf.clear277 = and i32 %bf.load276, 65535
  switch i32 %bf.clear277, label %while.cond233.backedge [
    i32 96, label %if.then288
    i32 98, label %if.then288
  ]

if.then288:                                       ; preds = %land.lhs.true273, %land.lhs.true273
  br label %while.cond233.backedge

sw.bb290:                                         ; preds = %while.body242
  %bf.load291 = load i32* %.pre272, align 8
  %bf.clear292 = and i32 %bf.load291, 65535
  %cmp293 = icmp eq i32 %bf.clear292, 66
  br i1 %cmp293, label %land.lhs.true295, label %while.cond233.backedge

land.lhs.true295:                                 ; preds = %sw.bb290
  %52 = load %struct.rtx_def** %rtx, align 8, !tbaa !12
  %53 = getelementptr inbounds %struct.rtx_def* %52, i64 0, i32 0
  %bf.load299 = load i32* %53, align 8
  %bf.clear300 = and i32 %bf.load299, 65535
  switch i32 %bf.clear300, label %while.cond233.backedge [
    i32 97, label %if.then311
    i32 99, label %if.then311
  ]

if.then311:                                       ; preds = %land.lhs.true295, %land.lhs.true295
  br label %while.cond233.backedge

sw.bb313:                                         ; preds = %while.body242
  %bf.load314 = load i32* %.pre272, align 8
  %bf.clear315 = and i32 %bf.load314, 65535
  %cmp316 = icmp eq i32 %bf.clear315, 55
  %.win.023 = select i1 %cmp316, i32 1, i32 %win.0164
  br label %while.cond233.backedge

sw.bb320:                                         ; preds = %while.body242
  %bf.load321 = load i32* %.pre272, align 8
  %bf.clear322 = and i32 %bf.load321, 65535
  %cmp323 = icmp eq i32 %bf.clear322, 55
  %.win.024 = select i1 %cmp323, i32 1, i32 %win.0164
  br label %while.cond233.backedge

sw.bb327:                                         ; preds = %while.body242, %while.body242
  %bf.load328 = load i32* %.pre272, align 8
  %bf.clear329 = and i32 %bf.load328, 65535
  %cmp330 = icmp eq i32 %bf.clear329, 55
  br i1 %cmp330, label %land.lhs.true332, label %while.cond233.backedge

land.lhs.true332:                                 ; preds = %sw.bb327
  switch i8 %48, label %while.cond233.backedge [
    i8 71, label %cond.true336
    i8 72, label %cond.true343
  ]

cond.true336:                                     ; preds = %land.lhs.true332
  %call337 = call i32 @standard_80387_constant_p(%struct.rtx_def* %4) #1
  %tobool338 = icmp eq i32 %call337, 0
  br i1 %tobool338, label %while.cond233.backedge, label %if.then347

cond.true343:                                     ; preds = %land.lhs.true332
  %call344 = call i32 @standard_sse_constant_p(%struct.rtx_def* %4) #1
  %tobool345 = icmp eq i32 %call344, 0
  br i1 %tobool345, label %while.cond233.backedge, label %if.then347

if.then347:                                       ; preds = %cond.true336, %cond.true343
  br label %while.cond233.backedge

sw.bb349:                                         ; preds = %while.body242
  %bf.load350 = load i32* %.pre272, align 8
  %bf.clear351 = and i32 %bf.load350, 65535
  switch i32 %bf.clear351, label %sw.bb367 [
    i32 54, label %while.cond233.backedge
    i32 55, label %land.lhs.true359
  ]

land.lhs.true359:                                 ; preds = %sw.bb349
  %bf.clear362 = and i32 %bf.load350, 16711680
  %cmp363 = icmp eq i32 %bf.clear362, 0
  br i1 %cmp363, label %while.cond233.backedge, label %sw.bb367

sw.bb367:                                         ; preds = %while.body242.sw.bb367_crit_edge, %sw.bb349, %land.lhs.true359
  %bf.load410 = phi i32 [ %bf.load368.pre, %while.body242.sw.bb367_crit_edge ], [ %bf.load350, %sw.bb349 ], [ %bf.load350, %land.lhs.true359 ]
  %bf.clear369 = and i32 %bf.load410, 65535
  switch i32 %bf.clear369, label %while.cond233.backedge [
    i32 67, label %land.lhs.true407
    i32 68, label %land.lhs.true407
    i32 54, label %land.lhs.true407
    i32 55, label %land.lhs.true407
    i32 58, label %land.lhs.true407
    i32 134, label %land.lhs.true407
    i32 56, label %land.lhs.true407
    i32 140, label %land.lhs.true407
  ]

land.lhs.true407:                                 ; preds = %sw.bb367, %sw.bb367, %sw.bb367, %sw.bb367, %sw.bb367, %sw.bb367, %sw.bb367, %sw.bb367
  %54 = load i32* @flag_pic, align 4
  %tobool408 = icmp eq i32 %54, 0
  br i1 %tobool408, label %if.then430, label %lor.lhs.false409

lor.lhs.false409:                                 ; preds = %land.lhs.true407
  switch i32 %bf.clear369, label %if.then430 [
    i32 68, label %lor.lhs.false427
    i32 67, label %lor.lhs.false427
    i32 58, label %land.lhs.true424
  ]

land.lhs.true424:                                 ; preds = %lor.lhs.false409
  %call425 = call i32 @symbolic_reference_mentioned_p(%struct.rtx_def* %4) #1
  %tobool426 = icmp eq i32 %call425, 0
  br i1 %tobool426, label %if.then430, label %lor.lhs.false427

lor.lhs.false427:                                 ; preds = %lor.lhs.false409, %lor.lhs.false409, %land.lhs.true424
  %call428 = call i32 @legitimate_pic_address_disp_p(%struct.rtx_def* %4) #1
  %tobool429 = icmp eq i32 %call428, 0
  br i1 %tobool429, label %while.cond233.backedge, label %if.then430

if.then430:                                       ; preds = %lor.lhs.false409, %lor.lhs.false427, %land.lhs.true424, %land.lhs.true407
  br label %while.cond233.backedge

sw.bb432:                                         ; preds = %while.body242
  %bf.load433 = load i32* %.pre272, align 8
  %bf.clear434 = and i32 %bf.load433, 65535
  switch i32 %bf.clear434, label %while.cond233.backedge [
    i32 54, label %if.then448
    i32 55, label %land.lhs.true442
  ]

land.lhs.true442:                                 ; preds = %sw.bb432
  %bf.clear445 = and i32 %bf.load433, 16711680
  %cmp446 = icmp eq i32 %bf.clear445, 0
  br i1 %cmp446, label %if.then448, label %while.cond233.backedge

if.then448:                                       ; preds = %sw.bb432, %land.lhs.true442
  br label %while.cond233.backedge

sw.bb450:                                         ; preds = %while.body242, %while.body242, %while.body242, %while.body242, %while.body242, %while.body242, %while.body242, %while.body242
  %bf.load451 = load i32* %.pre272, align 8
  %bf.clear452 = and i32 %bf.load451, 65535
  %cmp453 = icmp eq i32 %bf.clear452, 54
  br i1 %cmp453, label %land.lhs.true455, label %while.cond233.backedge

land.lhs.true455:                                 ; preds = %sw.bb450
  switch i8 %48, label %while.cond233.backedge [
    i8 73, label %cond.true459
    i8 74, label %cond.true474
    i8 75, label %cond.true490
    i8 76, label %cond.true506
    i8 77, label %cond.true522
    i8 78, label %cond.true538
  ]

cond.true459:                                     ; preds = %land.lhs.true455
  %55 = load i64* %rtwint, align 8, !tbaa !1
  %56 = icmp ult i64 %55, 32
  br i1 %56, label %if.then551, label %while.cond233.backedge

cond.true474:                                     ; preds = %land.lhs.true455
  %57 = load i64* %rtwint, align 8, !tbaa !1
  %58 = icmp ult i64 %57, 64
  br i1 %58, label %if.then551, label %while.cond233.backedge

cond.true490:                                     ; preds = %land.lhs.true455
  %59 = load i64* %rtwint, align 8, !tbaa !1
  %.off153 = add i64 %59, 128
  %60 = icmp ult i64 %.off153, 256
  br i1 %60, label %if.then551, label %while.cond233.backedge

cond.true506:                                     ; preds = %land.lhs.true455
  %61 = load i64* %rtwint, align 8, !tbaa !1
  switch i64 %61, label %while.cond233.backedge [
    i64 255, label %if.then551
    i64 65535, label %if.then551
  ]

cond.true522:                                     ; preds = %land.lhs.true455
  %62 = load i64* %rtwint, align 8, !tbaa !1
  %63 = icmp ult i64 %62, 4
  br i1 %63, label %if.then551, label %while.cond233.backedge

cond.true538:                                     ; preds = %land.lhs.true455
  %64 = load i64* %rtwint, align 8, !tbaa !1
  %65 = icmp ult i64 %64, 256
  br i1 %65, label %if.then551, label %while.cond233.backedge

if.then551:                                       ; preds = %cond.true538, %cond.true522, %cond.true506, %cond.true506, %cond.true490, %cond.true474, %cond.true459
  br label %while.cond233.backedge

sw.bb553:                                         ; preds = %while.body242
  br label %while.cond233.backedge

sw.bb554:                                         ; preds = %while.body242
  %bf.load555 = load i32* %.pre272, align 8
  %bf.clear556 = and i32 %bf.load555, 65535
  switch i32 %bf.clear556, label %if.end623 [
    i32 66, label %if.then622
    i32 67, label %land.lhs.true599
    i32 68, label %land.lhs.true599
    i32 54, label %land.lhs.true599
    i32 55, label %land.lhs.true599
    i32 58, label %land.lhs.true599
    i32 134, label %land.lhs.true599
    i32 56, label %land.lhs.true599
    i32 140, label %land.lhs.true599
  ]

land.lhs.true599:                                 ; preds = %sw.bb554, %sw.bb554, %sw.bb554, %sw.bb554, %sw.bb554, %sw.bb554, %sw.bb554, %sw.bb554
  %66 = load i32* @flag_pic, align 4
  %tobool600 = icmp eq i32 %66, 0
  br i1 %tobool600, label %if.then622, label %lor.lhs.false601

lor.lhs.false601:                                 ; preds = %land.lhs.true599
  switch i32 %bf.clear556, label %if.then622 [
    i32 68, label %lor.lhs.false619
    i32 67, label %lor.lhs.false619
    i32 58, label %land.lhs.true616
  ]

land.lhs.true616:                                 ; preds = %lor.lhs.false601
  %call617 = call i32 @symbolic_reference_mentioned_p(%struct.rtx_def* %4) #1
  %tobool618 = icmp eq i32 %call617, 0
  br i1 %tobool618, label %if.then622, label %lor.lhs.false619

lor.lhs.false619:                                 ; preds = %lor.lhs.false601, %lor.lhs.false601, %land.lhs.true616
  %call620 = call i32 @legitimate_pic_address_disp_p(%struct.rtx_def* %4) #1
  %tobool621 = icmp eq i32 %call620, 0
  br i1 %tobool621, label %if.end623, label %if.then622

if.then622:                                       ; preds = %lor.lhs.false601, %sw.bb554, %lor.lhs.false619, %land.lhs.true616, %land.lhs.true599
  br label %if.end623

if.end623:                                        ; preds = %sw.bb554, %lor.lhs.false619, %if.then622
  %win.1 = phi i32 [ 1, %if.then622 ], [ %win.0164, %lor.lhs.false619 ], [ %win.0164, %sw.bb554 ]
  store i32 1, i32* %arrayidx11, align 4, !tbaa !5
  br label %sw.bb626

sw.bb626:                                         ; preds = %while.body242, %if.end623
  %67 = phi i32 [ %46, %while.body242 ], [ 1, %if.end623 ]
  %win.2 = phi i32 [ %win.0164, %while.body242 ], [ %win.1, %if.end623 ]
  %idxprom629 = sext i32 %47 to i64
  %arrayidx631 = getelementptr inbounds [25 x [25 x i32]]* @reg_class_subunion, i64 0, i64 %idxprom629, i64 12
  %68 = load i32* %arrayidx631, align 4, !tbaa !10
  store i32 %68, i32* %arrayidx9, align 4, !tbaa !10
  br label %while.cond233.backedge

sw.default:                                       ; preds = %while.body242
  %cmp635 = icmp eq i8 %48, 114
  br i1 %cmp635, label %cond.end938, label %cond.false638

cond.false638:                                    ; preds = %sw.default
  switch i8 %48, label %cond.false650 [
    i8 82, label %cond.end938
    i8 113, label %cond.true801
  ]

cond.false650:                                    ; preds = %cond.false638
  switch i8 %48, label %cond.false706 [
    i8 81, label %cond.end938
    i8 102, label %cond.true659
    i8 116, label %cond.true671
    i8 117, label %cond.true683
    i8 97, label %cond.false846
    i8 98, label %cond.false851
    i8 99, label %cond.false856
  ]

cond.true659:                                     ; preds = %cond.false650
  %69 = load i32* @target_flags, align 4, !tbaa !5
  %70 = and i32 %69, 33
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %while.cond233.backedge, label %cond.true814

cond.true671:                                     ; preds = %cond.false650
  %72 = load i32* @target_flags, align 4, !tbaa !5
  %73 = and i32 %72, 33
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %while.cond233.backedge, label %cond.true826

cond.true683:                                     ; preds = %cond.false650
  %75 = load i32* @target_flags, align 4, !tbaa !5
  %76 = and i32 %75, 33
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %while.cond233.backedge, label %cond.true838

cond.false706:                                    ; preds = %cond.false650
  switch i8 %48, label %cond.false743 [
    i8 100, label %cond.end938
    i8 120, label %cond.true715
    i8 89, label %cond.end783
    i8 121, label %cond.true733
    i8 65, label %cond.false893
  ]

cond.true715:                                     ; preds = %cond.false706
  %78 = load i32* @target_flags, align 4, !tbaa !5
  %and716 = and i32 %78, 327680
  %cmp717 = icmp eq i32 %and716, 0
  br i1 %cmp717, label %while.cond233.backedge, label %cond.end938

cond.true733:                                     ; preds = %cond.false706
  %79 = load i32* @target_flags, align 4, !tbaa !5
  %and734 = and i32 %79, 16384
  %cmp735 = icmp eq i32 %and734, 0
  br i1 %cmp735, label %while.cond233.backedge, label %cond.end938

cond.false743:                                    ; preds = %cond.false706
  switch i8 %48, label %while.cond233.backedge [
    i8 68, label %cond.end938
    i8 83, label %cond.false903
    i8 101, label %cond.true952
    i8 90, label %cond.true959
  ]

cond.end783:                                      ; preds = %cond.false706
  %80 = load i32* @target_flags, align 4, !tbaa !5
  %81 = and i32 %80, 262144
  %cmp785 = icmp eq i32 %81, 0
  br i1 %cmp785, label %while.cond233.backedge, label %cond.true879

cond.true801:                                     ; preds = %cond.false638
  %82 = load i32* @target_flags, align 4, !tbaa !5
  %and802 = and i32 %82, 33554432
  %83 = zext i32 %and802 to i64
  %84 = lshr exact i64 %83, 23
  %85 = or i64 %84, 8
  br label %cond.end938

cond.true814:                                     ; preds = %cond.true659
  %and815 = and i32 %69, 1
  %tobool816 = icmp eq i32 %and815, 0
  br i1 %tobool816, label %lor.rhs817, label %cond.end938

lor.rhs817:                                       ; preds = %cond.true814
  %and818 = and i32 %69, 32
  %tobool819 = icmp ne i32 %and818, 0
  %phitmp22 = select i1 %tobool819, i64 15, i64 0
  br label %cond.end938

cond.true826:                                     ; preds = %cond.true671
  %and827 = and i32 %72, 1
  %tobool828 = icmp eq i32 %and827, 0
  br i1 %tobool828, label %lor.rhs829, label %cond.end938

lor.rhs829:                                       ; preds = %cond.true826
  %and830 = and i32 %72, 32
  %tobool831 = icmp ne i32 %and830, 0
  %phitmp21 = select i1 %tobool831, i64 13, i64 0
  br label %cond.end938

cond.true838:                                     ; preds = %cond.true683
  %and839 = and i32 %75, 1
  %tobool840 = icmp eq i32 %and839, 0
  br i1 %tobool840, label %lor.rhs841, label %cond.end938

lor.rhs841:                                       ; preds = %cond.true838
  %and842 = and i32 %75, 32
  %tobool843 = icmp ne i32 %and842, 0
  %phitmp20 = select i1 %tobool843, i64 14, i64 0
  br label %cond.end938

cond.false846:                                    ; preds = %cond.false650
  br label %cond.end938

cond.false851:                                    ; preds = %cond.false650
  br label %cond.end938

cond.false856:                                    ; preds = %cond.false650
  br label %cond.end938

cond.true879:                                     ; preds = %cond.end783
  %86 = zext i32 %81 to i64
  %87 = lshr exact i64 %86, 14
  br label %cond.end938

cond.false893:                                    ; preds = %cond.false706
  br label %cond.end938

cond.false903:                                    ; preds = %cond.false743
  br label %cond.end938

cond.end938:                                      ; preds = %cond.true733, %cond.true715, %cond.false743, %cond.false706, %cond.false650, %cond.false638, %cond.false893, %cond.false856, %cond.false851, %cond.false846, %sw.default, %lor.rhs841, %cond.true838, %lor.rhs829, %cond.true826, %lor.rhs817, %cond.true814, %cond.false903, %cond.true879, %cond.true801
  %cond939 = phi i64 [ %85, %cond.true801 ], [ 1, %cond.false846 ], [ 4, %cond.false851 ], [ 3, %cond.false856 ], [ %87, %cond.true879 ], [ 7, %cond.false893 ], [ 5, %cond.false903 ], [ 15, %cond.true814 ], [ %phitmp22, %lor.rhs817 ], [ 13, %cond.true826 ], [ %phitmp21, %lor.rhs829 ], [ 14, %cond.true838 ], [ %phitmp20, %lor.rhs841 ], [ 12, %sw.default ], [ 11, %cond.false638 ], [ 8, %cond.false650 ], [ 2, %cond.false706 ], [ 6, %cond.false743 ], [ 16, %cond.true715 ], [ 17, %cond.true733 ]
  %idxprom943 = sext i32 %47 to i64
  %arrayidx945 = getelementptr inbounds [25 x [25 x i32]]* @reg_class_subunion, i64 0, i64 %idxprom943, i64 %cond939
  %88 = load i32* %arrayidx945, align 4, !tbaa !10
  store i32 %88, i32* %arrayidx9, align 4, !tbaa !10
  br label %while.cond233.backedge

while.cond233.backedge:                           ; preds = %cond.end938, %if.then963, %sw.bb450, %cond.true459, %cond.true474, %cond.true490, %cond.true522, %cond.true538, %if.then551, %land.lhs.true442, %if.then448, %if.then430, %land.lhs.true359, %sw.bb327, %if.then347, %sw.bb290, %if.then311, %sw.bb268, %if.then288, %sw.bb245, %while.body242, %while.body242, %while.body242, %while.body242, %while.body242, %while.body242, %while.body242, %while.body242, %while.body242, %while.body242, %while.body242, %while.body242, %while.body242, %sw.bb626, %sw.bb553, %sw.bb248, %sw.bb, %lor.lhs.false427, %cond.true343, %cond.true336, %cond.true959, %cond.true952, %land.lhs.true273, %land.lhs.true295, %land.lhs.true332, %sw.bb349, %sw.bb367, %sw.bb432, %cond.true506, %land.lhs.true455, %sw.bb259, %sw.bb313, %sw.bb320, %cond.end783, %cond.false743, %cond.true683, %cond.true671, %cond.true659, %cond.true733, %cond.true715
  %89 = phi i32 [ %46, %cond.end938 ], [ %46, %if.then963 ], [ %46, %cond.true952 ], [ %46, %cond.true959 ], [ %67, %sw.bb626 ], [ %46, %sw.bb553 ], [ %46, %if.then551 ], [ %46, %cond.true459 ], [ %46, %cond.true474 ], [ %46, %cond.true490 ], [ %46, %cond.true522 ], [ %46, %cond.true538 ], [ %46, %sw.bb450 ], [ %46, %if.then448 ], [ %46, %land.lhs.true442 ], [ %46, %if.then430 ], [ %46, %lor.lhs.false427 ], [ %46, %sw.bb349 ], [ %46, %land.lhs.true359 ], [ %46, %if.then347 ], [ %46, %cond.true336 ], [ %46, %cond.true343 ], [ %46, %sw.bb327 ], [ %46, %if.then311 ], [ %46, %sw.bb290 ], [ %46, %if.then288 ], [ %46, %sw.bb268 ], [ %46, %sw.bb248 ], [ %46, %while.body242 ], [ %46, %while.body242 ], [ %46, %while.body242 ], [ %46, %while.body242 ], [ %46, %while.body242 ], [ %46, %while.body242 ], [ %46, %while.body242 ], [ %46, %while.body242 ], [ %46, %while.body242 ], [ %46, %while.body242 ], [ %46, %while.body242 ], [ %46, %while.body242 ], [ %46, %while.body242 ], [ %46, %sw.bb245 ], [ %46, %sw.bb ], [ 1, %sw.bb259 ], [ %46, %land.lhs.true273 ], [ %46, %land.lhs.true295 ], [ %46, %sw.bb313 ], [ %46, %sw.bb320 ], [ %46, %land.lhs.true332 ], [ %46, %sw.bb367 ], [ %46, %sw.bb432 ], [ %46, %cond.true506 ], [ %46, %land.lhs.true455 ], [ %46, %cond.end783 ], [ %46, %cond.true715 ], [ %46, %cond.true733 ], [ %46, %cond.true659 ], [ %46, %cond.true671 ], [ %46, %cond.true683 ], [ %46, %cond.false743 ]
  %90 = phi i32 [ %88, %cond.end938 ], [ %47, %if.then963 ], [ %47, %cond.true952 ], [ %47, %cond.true959 ], [ %68, %sw.bb626 ], [ %47, %sw.bb553 ], [ %47, %if.then551 ], [ %47, %cond.true459 ], [ %47, %cond.true474 ], [ %47, %cond.true490 ], [ %47, %cond.true522 ], [ %47, %cond.true538 ], [ %47, %sw.bb450 ], [ %47, %if.then448 ], [ %47, %land.lhs.true442 ], [ %47, %if.then430 ], [ %47, %lor.lhs.false427 ], [ %47, %sw.bb349 ], [ %47, %land.lhs.true359 ], [ %47, %if.then347 ], [ %47, %cond.true336 ], [ %47, %cond.true343 ], [ %47, %sw.bb327 ], [ %47, %if.then311 ], [ %47, %sw.bb290 ], [ %47, %if.then288 ], [ %47, %sw.bb268 ], [ %49, %sw.bb248 ], [ %47, %while.body242 ], [ %47, %while.body242 ], [ %47, %while.body242 ], [ %47, %while.body242 ], [ %47, %while.body242 ], [ %47, %while.body242 ], [ %47, %while.body242 ], [ %47, %while.body242 ], [ %47, %while.body242 ], [ %47, %while.body242 ], [ %47, %while.body242 ], [ %47, %while.body242 ], [ %47, %while.body242 ], [ %47, %sw.bb245 ], [ %47, %sw.bb ], [ %47, %sw.bb259 ], [ %47, %land.lhs.true273 ], [ %47, %land.lhs.true295 ], [ %47, %sw.bb313 ], [ %47, %sw.bb320 ], [ %47, %land.lhs.true332 ], [ %47, %sw.bb367 ], [ %47, %sw.bb432 ], [ %47, %cond.true506 ], [ %47, %land.lhs.true455 ], [ %47, %cond.end783 ], [ %47, %cond.true715 ], [ %47, %cond.true733 ], [ %47, %cond.true659 ], [ %47, %cond.true671 ], [ %47, %cond.true683 ], [ %47, %cond.false743 ]
  %win.0.be = phi i32 [ %win.0164, %cond.end938 ], [ 1, %if.then963 ], [ %win.0164, %cond.true952 ], [ %win.0164, %cond.true959 ], [ %win.2, %sw.bb626 ], [ 1, %sw.bb553 ], [ 1, %if.then551 ], [ %win.0164, %cond.true459 ], [ %win.0164, %cond.true474 ], [ %win.0164, %cond.true490 ], [ %win.0164, %cond.true522 ], [ %win.0164, %cond.true538 ], [ %win.0164, %sw.bb450 ], [ 1, %if.then448 ], [ %win.0164, %land.lhs.true442 ], [ 1, %if.then430 ], [ %win.0164, %lor.lhs.false427 ], [ %win.0164, %sw.bb349 ], [ %win.0164, %land.lhs.true359 ], [ 1, %if.then347 ], [ %win.0164, %cond.true336 ], [ %win.0164, %cond.true343 ], [ %win.0164, %sw.bb327 ], [ 1, %if.then311 ], [ %win.0164, %sw.bb290 ], [ 1, %if.then288 ], [ %win.0164, %sw.bb268 ], [ %call251, %sw.bb248 ], [ %win.0164, %while.body242 ], [ %win.0164, %while.body242 ], [ %win.0164, %while.body242 ], [ %win.0164, %while.body242 ], [ %win.0164, %while.body242 ], [ %win.0164, %while.body242 ], [ %win.0164, %while.body242 ], [ %win.0164, %while.body242 ], [ %win.0164, %while.body242 ], [ %win.0164, %while.body242 ], [ %win.0164, %while.body242 ], [ %win.0164, %while.body242 ], [ %win.0164, %while.body242 ], [ %win.0164, %sw.bb245 ], [ %win.0164, %sw.bb ], [ %.win.0, %sw.bb259 ], [ %win.0164, %land.lhs.true273 ], [ %win.0164, %land.lhs.true295 ], [ %.win.023, %sw.bb313 ], [ %.win.024, %sw.bb320 ], [ %win.0164, %land.lhs.true332 ], [ %win.0164, %sw.bb367 ], [ %win.0164, %sw.bb432 ], [ %win.0164, %cond.true506 ], [ %win.0164, %land.lhs.true455 ], [ %win.0164, %cond.end783 ], [ %win.0164, %cond.true715 ], [ %win.0164, %cond.true733 ], [ %win.0164, %cond.true659 ], [ %win.0164, %cond.true671 ], [ %win.0164, %cond.true683 ], [ %win.0164, %cond.false743 ]
  %allows_addr.0.be = phi i32 [ %allows_addr.0165, %cond.end938 ], [ %allows_addr.0165, %if.then963 ], [ %allows_addr.0165, %cond.true952 ], [ %allows_addr.0165, %cond.true959 ], [ %allows_addr.0165, %sw.bb626 ], [ %allows_addr.0165, %sw.bb553 ], [ %allows_addr.0165, %if.then551 ], [ %allows_addr.0165, %cond.true459 ], [ %allows_addr.0165, %cond.true474 ], [ %allows_addr.0165, %cond.true490 ], [ %allows_addr.0165, %cond.true522 ], [ %allows_addr.0165, %cond.true538 ], [ %allows_addr.0165, %sw.bb450 ], [ %allows_addr.0165, %if.then448 ], [ %allows_addr.0165, %land.lhs.true442 ], [ %allows_addr.0165, %if.then430 ], [ %allows_addr.0165, %lor.lhs.false427 ], [ %allows_addr.0165, %sw.bb349 ], [ %allows_addr.0165, %land.lhs.true359 ], [ %allows_addr.0165, %if.then347 ], [ %allows_addr.0165, %cond.true336 ], [ %allows_addr.0165, %cond.true343 ], [ %allows_addr.0165, %sw.bb327 ], [ %allows_addr.0165, %if.then311 ], [ %allows_addr.0165, %sw.bb290 ], [ %allows_addr.0165, %if.then288 ], [ %allows_addr.0165, %sw.bb268 ], [ 1, %sw.bb248 ], [ %allows_addr.0165, %while.body242 ], [ %allows_addr.0165, %while.body242 ], [ %allows_addr.0165, %while.body242 ], [ %allows_addr.0165, %while.body242 ], [ %allows_addr.0165, %while.body242 ], [ %allows_addr.0165, %while.body242 ], [ %allows_addr.0165, %while.body242 ], [ %allows_addr.0165, %while.body242 ], [ %allows_addr.0165, %while.body242 ], [ %allows_addr.0165, %while.body242 ], [ %allows_addr.0165, %while.body242 ], [ %allows_addr.0165, %while.body242 ], [ %allows_addr.0165, %while.body242 ], [ %allows_addr.0165, %sw.bb245 ], [ %allows_addr.0165, %sw.bb ], [ %allows_addr.0165, %sw.bb259 ], [ %allows_addr.0165, %land.lhs.true273 ], [ %allows_addr.0165, %land.lhs.true295 ], [ %allows_addr.0165, %sw.bb313 ], [ %allows_addr.0165, %sw.bb320 ], [ %allows_addr.0165, %land.lhs.true332 ], [ %allows_addr.0165, %sw.bb367 ], [ %allows_addr.0165, %sw.bb432 ], [ %allows_addr.0165, %cond.true506 ], [ %allows_addr.0165, %land.lhs.true455 ], [ %allows_addr.0165, %cond.end783 ], [ %allows_addr.0165, %cond.true715 ], [ %allows_addr.0165, %cond.true733 ], [ %allows_addr.0165, %cond.true659 ], [ %allows_addr.0165, %cond.true671 ], [ %allows_addr.0165, %cond.true683 ], [ %allows_addr.0165, %cond.false743 ]
  %p.3.be = phi i8* [ %incdec.ptr237, %cond.end938 ], [ %incdec.ptr237, %if.then963 ], [ %incdec.ptr237, %cond.true952 ], [ %incdec.ptr237, %cond.true959 ], [ %incdec.ptr237, %sw.bb626 ], [ %incdec.ptr237, %sw.bb553 ], [ %incdec.ptr237, %if.then551 ], [ %incdec.ptr237, %cond.true459 ], [ %incdec.ptr237, %cond.true474 ], [ %incdec.ptr237, %cond.true490 ], [ %incdec.ptr237, %cond.true522 ], [ %incdec.ptr237, %cond.true538 ], [ %incdec.ptr237, %sw.bb450 ], [ %incdec.ptr237, %if.then448 ], [ %incdec.ptr237, %land.lhs.true442 ], [ %incdec.ptr237, %if.then430 ], [ %incdec.ptr237, %lor.lhs.false427 ], [ %incdec.ptr237, %sw.bb349 ], [ %incdec.ptr237, %land.lhs.true359 ], [ %incdec.ptr237, %if.then347 ], [ %incdec.ptr237, %cond.true336 ], [ %incdec.ptr237, %cond.true343 ], [ %incdec.ptr237, %sw.bb327 ], [ %incdec.ptr237, %if.then311 ], [ %incdec.ptr237, %sw.bb290 ], [ %incdec.ptr237, %if.then288 ], [ %incdec.ptr237, %sw.bb268 ], [ %incdec.ptr237, %sw.bb248 ], [ %incdec.ptr237, %while.body242 ], [ %incdec.ptr237, %while.body242 ], [ %incdec.ptr237, %while.body242 ], [ %incdec.ptr237, %while.body242 ], [ %incdec.ptr237, %while.body242 ], [ %incdec.ptr237, %while.body242 ], [ %incdec.ptr237, %while.body242 ], [ %incdec.ptr237, %while.body242 ], [ %incdec.ptr237, %while.body242 ], [ %incdec.ptr237, %while.body242 ], [ %incdec.ptr237, %while.body242 ], [ %incdec.ptr237, %while.body242 ], [ %incdec.ptr237, %while.body242 ], [ %incdec.ptr237, %sw.bb245 ], [ %incdec.ptr244, %sw.bb ], [ %incdec.ptr237, %sw.bb259 ], [ %incdec.ptr237, %land.lhs.true273 ], [ %incdec.ptr237, %land.lhs.true295 ], [ %incdec.ptr237, %sw.bb313 ], [ %incdec.ptr237, %sw.bb320 ], [ %incdec.ptr237, %land.lhs.true332 ], [ %incdec.ptr237, %sw.bb367 ], [ %incdec.ptr237, %sw.bb432 ], [ %incdec.ptr237, %cond.true506 ], [ %incdec.ptr237, %land.lhs.true455 ], [ %incdec.ptr237, %cond.end783 ], [ %incdec.ptr237, %cond.true715 ], [ %incdec.ptr237, %cond.true733 ], [ %incdec.ptr237, %cond.true659 ], [ %incdec.ptr237, %cond.true671 ], [ %incdec.ptr237, %cond.true683 ], [ %incdec.ptr237, %cond.false743 ]
  %alt_cost.3.be = phi i32 [ %alt_cost.3168, %cond.end938 ], [ %alt_cost.3168, %if.then963 ], [ %alt_cost.3168, %cond.true952 ], [ %alt_cost.3168, %cond.true959 ], [ %alt_cost.3168, %sw.bb626 ], [ %alt_cost.3168, %sw.bb553 ], [ %alt_cost.3168, %if.then551 ], [ %alt_cost.3168, %cond.true459 ], [ %alt_cost.3168, %cond.true474 ], [ %alt_cost.3168, %cond.true490 ], [ %alt_cost.3168, %cond.true522 ], [ %alt_cost.3168, %cond.true538 ], [ %alt_cost.3168, %sw.bb450 ], [ %alt_cost.3168, %if.then448 ], [ %alt_cost.3168, %land.lhs.true442 ], [ %alt_cost.3168, %if.then430 ], [ %alt_cost.3168, %lor.lhs.false427 ], [ %alt_cost.3168, %sw.bb349 ], [ %alt_cost.3168, %land.lhs.true359 ], [ %alt_cost.3168, %if.then347 ], [ %alt_cost.3168, %cond.true336 ], [ %alt_cost.3168, %cond.true343 ], [ %alt_cost.3168, %sw.bb327 ], [ %alt_cost.3168, %if.then311 ], [ %alt_cost.3168, %sw.bb290 ], [ %alt_cost.3168, %if.then288 ], [ %alt_cost.3168, %sw.bb268 ], [ %alt_cost.3168, %sw.bb248 ], [ %alt_cost.3168, %while.body242 ], [ %alt_cost.3168, %while.body242 ], [ %alt_cost.3168, %while.body242 ], [ %alt_cost.3168, %while.body242 ], [ %alt_cost.3168, %while.body242 ], [ %alt_cost.3168, %while.body242 ], [ %alt_cost.3168, %while.body242 ], [ %alt_cost.3168, %while.body242 ], [ %alt_cost.3168, %while.body242 ], [ %alt_cost.3168, %while.body242 ], [ %alt_cost.3168, %while.body242 ], [ %alt_cost.3168, %while.body242 ], [ %alt_cost.3168, %while.body242 ], [ %add246, %sw.bb245 ], [ %alt_cost.3168, %sw.bb ], [ %alt_cost.3168, %sw.bb259 ], [ %alt_cost.3168, %land.lhs.true273 ], [ %alt_cost.3168, %land.lhs.true295 ], [ %alt_cost.3168, %sw.bb313 ], [ %alt_cost.3168, %sw.bb320 ], [ %alt_cost.3168, %land.lhs.true332 ], [ %alt_cost.3168, %sw.bb367 ], [ %alt_cost.3168, %sw.bb432 ], [ %alt_cost.3168, %cond.true506 ], [ %alt_cost.3168, %land.lhs.true455 ], [ %alt_cost.3168, %cond.end783 ], [ %alt_cost.3168, %cond.true715 ], [ %alt_cost.3168, %cond.true733 ], [ %alt_cost.3168, %cond.true659 ], [ %alt_cost.3168, %cond.true671 ], [ %alt_cost.3168, %cond.true683 ], [ %alt_cost.3168, %cond.false743 ]
  %91 = load i8* %p.3.be, align 1, !tbaa !10
  %tobool235 = icmp eq i8 %91, 0
  br i1 %tobool235, label %while.end966, label %land.rhs236

cond.true952:                                     ; preds = %cond.false743
  %call953 = call i32 @x86_64_sign_extended_value(%struct.rtx_def* %4) #1
  %tobool954 = icmp eq i32 %call953, 0
  br i1 %tobool954, label %while.cond233.backedge, label %if.then963

cond.true959:                                     ; preds = %cond.false743
  %call960 = call i32 @x86_64_zero_extended_value(%struct.rtx_def* %4) #1
  %tobool961 = icmp eq i32 %call960, 0
  br i1 %tobool961, label %while.cond233.backedge, label %if.then963

if.then963:                                       ; preds = %cond.true952, %cond.true959
  br label %while.cond233.backedge

while.end966:                                     ; preds = %while.cond233.backedge, %land.rhs236, %while.cond233.preheader
  %92 = phi i32 [ %28, %while.cond233.preheader ], [ %89, %while.cond233.backedge ], [ %46, %land.rhs236 ]
  %93 = phi i32 [ %29, %while.cond233.preheader ], [ %90, %while.cond233.backedge ], [ %47, %land.rhs236 ]
  %alt_cost.3.lcssa = phi i32 [ %alt_cost.3.ph, %while.cond233.preheader ], [ %alt_cost.3.be, %while.cond233.backedge ], [ %alt_cost.3168, %land.rhs236 ]
  %allows_addr.0.lcssa = phi i32 [ 0, %while.cond233.preheader ], [ %allows_addr.0.be, %while.cond233.backedge ], [ %allows_addr.0165, %land.rhs236 ]
  %win.0.lcssa = phi i32 [ %win.0.ph, %while.cond233.preheader ], [ %win.0.be, %while.cond233.backedge ], [ %win.0164, %land.rhs236 ]
  %p.4 = phi i8* [ %p.0, %while.cond233.preheader ], [ %p.3.be, %while.cond233.backedge ], [ %incdec.ptr237, %land.rhs236 ]
  store i8* %p.4, i8** %arrayidx, align 8, !tbaa !12
  %bf.load969 = load i32* %.pre272, align 8
  %bf.clear970 = and i32 %bf.load969, 65535
  %cmp971 = icmp eq i32 %bf.clear970, 61
  br i1 %cmp971, label %land.lhs.true973, label %if.else1078

land.lhs.true973:                                 ; preds = %while.end966
  %arrayidx975 = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 1, i64 0
  %rtuint976 = bitcast %union.rtunion_def* %arrayidx975 to i32*
  %94 = load i32* %rtuint976, align 4, !tbaa !5
  %cmp977 = icmp ugt i32 %94, 52
  br i1 %cmp977, label %if.then979, label %if.else1078

if.then979:                                       ; preds = %land.lhs.true973
  %cmp982 = icmp eq i32 %93, 0
  br i1 %cmp982, label %for.inc1176, label %for.cond989.preheader

for.cond989.preheader:                            ; preds = %if.then979
  %arrayidx994 = getelementptr inbounds %struct.recog_data* @recog_data, i64 0, i32 4, i64 %indvars.iv203
  %95 = load i32* %arrayidx994, align 4, !tbaa !10
  %cmp1011 = icmp eq i32 %95, 0
  %idxprom1018 = zext i32 %5 to i64
  br label %for.body992

for.body992:                                      ; preds = %cond.end1023, %for.cond989.preheader
  %96 = phi i32 [ %93, %for.cond989.preheader ], [ %98, %cond.end1023 ]
  %indvars.iv200 = phi i64 [ 0, %for.cond989.preheader ], [ %indvars.iv.next201, %cond.end1023 ]
  %cmp995 = icmp eq i32 %95, 1
  br i1 %cmp995, label %cond.end1007, label %cond.true997

cond.true997:                                     ; preds = %for.body992
  %idxprom1000 = sext i32 %93 to i64
  %arrayidx1005 = getelementptr inbounds [59 x [25 x [25 x i32]]]* @may_move_in_cost, i64 0, i64 %idxprom1018, i64 %indvars.iv200, i64 %idxprom1000
  %97 = load i32* %arrayidx1005, align 4, !tbaa !5
  br label %cond.end1007

cond.end1007:                                     ; preds = %for.body992, %cond.true997
  %98 = phi i32 [ %93, %cond.true997 ], [ %96, %for.body992 ]
  %cond1008 = phi i32 [ %97, %cond.true997 ], [ 0, %for.body992 ]
  br i1 %cmp1011, label %cond.end1023, label %cond.true1013

cond.true1013:                                    ; preds = %cond.end1007
  %idxprom1017 = sext i32 %98 to i64
  %arrayidx1021 = getelementptr inbounds [59 x [25 x [25 x i32]]]* @may_move_out_cost, i64 0, i64 %idxprom1018, i64 %idxprom1017, i64 %indvars.iv200
  %99 = load i32* %arrayidx1021, align 4, !tbaa !5
  br label %cond.end1023

cond.end1023:                                     ; preds = %cond.end1007, %cond.true1013
  %cond1024 = phi i32 [ %99, %cond.true1013 ], [ 0, %cond.end1007 ]
  %add1025 = add nsw i32 %cond1024, %cond1008
  %arrayidx1028 = getelementptr inbounds [30 x %struct.costs]* %this_op_costs, i64 0, i64 %indvars.iv203, i32 0, i64 %indvars.iv200
  store i32 %add1025, i32* %arrayidx1028, align 4, !tbaa !5
  %indvars.iv.next201 = add nuw nsw i64 %indvars.iv200, 1
  %exitcond202 = icmp eq i64 %indvars.iv.next201, 25
  br i1 %exitcond202, label %for.end1031, label %for.body992

for.end1031:                                      ; preds = %cond.end1023
  br i1 %cmp1011, label %cond.true1047, label %cond.end1041

cond.end1041:                                     ; preds = %for.end1031
  %call1039 = call i32 @ix86_memory_move_cost(i32 %5, i32 %98, i32 0) #1
  %.pre217 = load i32* %arrayidx994, align 4, !tbaa !10
  %phitmp273 = icmp eq i32 %.pre217, 1
  br i1 %phitmp273, label %cond.end1052, label %cond.true1047

cond.true1047:                                    ; preds = %for.end1031, %cond.end1041
  %cond1042277 = phi i32 [ %call1039, %cond.end1041 ], [ 0, %for.end1031 ]
  %call1050 = call i32 @ix86_memory_move_cost(i32 %5, i32 %98, i32 1) #1
  br label %cond.end1052

cond.end1052:                                     ; preds = %cond.end1041, %cond.true1047
  %cond1042278 = phi i32 [ %cond1042277, %cond.true1047 ], [ %call1039, %cond.end1041 ]
  %cond1053 = phi i32 [ %call1050, %cond.true1047 ], [ 0, %cond.end1041 ]
  %add1054 = add nsw i32 %cond1053, %cond1042278
  %sub1057 = sub i32 %add1054, %92
  %mem_cost1058 = getelementptr inbounds [30 x %struct.costs]* %this_op_costs, i64 0, i64 %indvars.iv203, i32 1
  store i32 %sub1057, i32* %mem_cost1058, align 4, !tbaa !17
  br i1 %tobool184, label %for.inc1176, label %if.then1060

if.then1060:                                      ; preds = %cond.end1052
  %idxprom1063 = sext i32 %98 to i64
  %100 = load i32* %rtuint976, align 4, !tbaa !5
  %idxprom1067 = zext i32 %100 to i64
  %prefclass1069 = getelementptr inbounds %struct.reg_pref* %reg_pref, i64 %idxprom1067, i32 0
  %101 = load i8* %prefclass1069, align 1, !tbaa !14
  %idxprom1070 = zext i8 %101 to i64
  %arrayidx1074 = getelementptr inbounds [59 x [25 x [25 x i32]]]* @may_move_in_cost, i64 0, i64 %idxprom1018, i64 %idxprom1070, i64 %idxprom1063
  %102 = load i32* %arrayidx1074, align 4, !tbaa !5
  %add1075 = add nsw i32 %102, %alt_cost.3.lcssa
  br label %for.inc1176

if.else1078:                                      ; preds = %land.lhs.true973, %while.end966
  %tobool1079 = icmp eq i32 %win.0.lcssa, 0
  br i1 %tobool1079, label %lor.lhs.false1080, label %for.inc1176

lor.lhs.false1080:                                ; preds = %if.else1078
  br i1 %cmp971, label %land.lhs.true1085, label %if.else1094

land.lhs.true1085:                                ; preds = %lor.lhs.false1080
  %bf.lshr1089 = lshr i32 %bf.load969, 16
  %bf.clear1090 = and i32 %bf.lshr1089, 255
  %call1091 = call i32 @reg_fits_class_p(%struct.rtx_def* %4, i32 %93, i32 0, i32 %bf.clear1090) #1
  %tobool1092 = icmp eq i32 %call1091, 0
  br i1 %tobool1092, label %if.else1094, label %for.inc1176

if.else1094:                                      ; preds = %land.lhs.true1085, %lor.lhs.false1080
  %cmp1097 = icmp eq i32 %93, 0
  br i1 %cmp1097, label %if.else1120, label %if.then1099

if.then1099:                                      ; preds = %if.else1094
  %arrayidx1101 = getelementptr inbounds %struct.recog_data* @recog_data, i64 0, i32 4, i64 %indvars.iv203
  %103 = load i32* %arrayidx1101, align 4, !tbaa !10
  %cmp1102 = icmp eq i32 %103, 1
  br i1 %cmp1102, label %if.then1114, label %if.then1104

if.then1104:                                      ; preds = %if.then1099
  %bf.load.i69 = load i32* %.pre272, align 8
  %bf.clear.i70 = and i32 %bf.load.i69, 65535
  %cmp.i71 = icmp eq i32 %bf.clear.i70, 62
  br i1 %cmp.i71, label %if.end1109, label %if.end.i75

if.end.i75:                                       ; preds = %if.then1104
  %call.i72 = call i32 @ix86_preferred_reload_class(%struct.rtx_def* %4, i32 %93) #1
  %bf.load17.i76 = load i32* %.pre272, align 8
  %bf.clear18.i77 = and i32 %bf.load17.i76, 65535
  %cmp19.i78 = icmp eq i32 %bf.clear18.i77, 66
  %cmp21.i79 = icmp eq i32 %call.i72, 0
  %or.cond39.i80 = or i1 %cmp19.i78, %cmp21.i79
  br i1 %or.cond39.i80, label %if.then22.i82, label %if.else.i84

if.then22.i82:                                    ; preds = %if.end.i75
  %call23.i81 = call i32 @ix86_memory_move_cost(i32 %5, i32 %call.i72, i32 1) #1
  br label %if.end1109

if.else.i84:                                      ; preds = %if.end.i75
  %cmp26.i83 = icmp eq i32 %bf.clear18.i77, 61
  br i1 %cmp26.i83, label %if.then27.i93, label %if.end1109

if.then27.i93:                                    ; preds = %if.else.i84
  %idxprom28.i85 = sext i32 %call.i72 to i64
  %arrayidx29.i86 = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 1, i64 0
  %rtuint.i87 = bitcast %union.rtunion_def* %arrayidx29.i86 to i32*
  %104 = load i32* %rtuint.i87, align 4, !tbaa !5
  %idxprom30.i88 = zext i32 %104 to i64
  %arrayidx31.i89 = getelementptr inbounds [53 x i32]* @regclass_map, i64 0, i64 %idxprom30.i88
  %105 = load i32* %arrayidx31.i89, align 4, !tbaa !10
  %idxprom32.i90 = sext i32 %105 to i64
  %idxprom33.i91 = zext i32 %5 to i64
  %arrayidx36.i92 = getelementptr inbounds [59 x [25 x [25 x i32]]]* @move_cost, i64 0, i64 %idxprom33.i91, i64 %idxprom32.i90, i64 %idxprom28.i85
  %106 = load i32* %arrayidx36.i92, align 4, !tbaa !5
  br label %if.end1109

if.end1109:                                       ; preds = %if.then27.i93, %if.else.i84, %if.then22.i82, %if.then1104
  %retval.0.i94 = phi i32 [ %call23.i81, %if.then22.i82 ], [ %106, %if.then27.i93 ], [ 0, %if.then1104 ], [ 4, %if.else.i84 ]
  %add1108 = add nsw i32 %retval.0.i94, %alt_cost.3.lcssa
  %.pr = load i32* %arrayidx1101, align 4, !tbaa !10
  %cmp1112 = icmp eq i32 %.pr, 0
  br i1 %cmp1112, label %for.inc1176, label %if.then1114

if.then1114:                                      ; preds = %if.then1099, %if.end1109
  %alt_cost.4125 = phi i32 [ %add1108, %if.end1109 ], [ %alt_cost.3.lcssa, %if.then1099 ]
  %call1117 = call fastcc i32 @copy_cost(%struct.rtx_def* %4, i32 %5, i32 %93, i32 0)
  %add1118 = add nsw i32 %call1117, %alt_cost.4125
  br label %for.inc1176

if.else1120:                                      ; preds = %if.else1094
  %bf.load1121 = load i32* %.pre272, align 8
  %bf.clear1122 = and i32 %bf.load1121, 65535
  switch i32 %bf.clear1122, label %for.inc1176 [
    i32 67, label %land.lhs.true1160
    i32 68, label %land.lhs.true1160
    i32 54, label %land.lhs.true1160
    i32 55, label %land.lhs.true1160
    i32 58, label %land.lhs.true1160
    i32 134, label %land.lhs.true1160
    i32 56, label %land.lhs.true1160
    i32 140, label %land.lhs.true1160
  ]

land.lhs.true1160:                                ; preds = %if.else1120, %if.else1120, %if.else1120, %if.else1120, %if.else1120, %if.else1120, %if.else1120, %if.else1120
  %107 = or i32 %allows_addr.0.lcssa, %92
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %for.inc1176, label %if.then1166

if.then1166:                                      ; preds = %land.lhs.true1160
  %call1169 = call i32 @ix86_memory_move_cost(i32 %5, i32 0, i32 1) #1
  %add1170 = add nsw i32 %call1169, %alt_cost.3.lcssa
  br label %for.inc1176

for.inc1176:                                      ; preds = %land.lhs.true1160, %if.else1120, %if.then979, %cond.end1052, %land.lhs.true1085, %if.end1109, %if.else1078, %if.then1060, %if.then1114, %if.then1166, %if.then, %land.lhs.true, %if.then19, %while.end227
  %alt_cost.5 = phi i32 [ %alt_cost.0179, %if.then19 ], [ %alt_cost.0179, %land.lhs.true ], [ %alt_cost.0179, %if.then ], [ %add1075, %if.then1060 ], [ %alt_cost.3.lcssa, %cond.end1052 ], [ %alt_cost.3.lcssa, %if.else1078 ], [ %alt_cost.3.lcssa, %land.lhs.true1085 ], [ %add1118, %if.then1114 ], [ %add1108, %if.end1109 ], [ %add1170, %if.then1166 ], [ %alt_cost.2.ph, %while.end227 ], [ %alt_cost.3.lcssa, %if.then979 ], [ %alt_cost.3.lcssa, %if.else1120 ], [ %alt_cost.3.lcssa, %land.lhs.true1160 ]
  %alt_fail.2 = phi i32 [ %alt_fail.0180, %if.then19 ], [ %alt_fail.0180, %land.lhs.true ], [ %alt_fail.0180, %if.then ], [ %alt_fail.1.ph, %if.then1060 ], [ %alt_fail.1.ph, %cond.end1052 ], [ %alt_fail.1.ph, %if.else1078 ], [ %alt_fail.1.ph, %land.lhs.true1085 ], [ %alt_fail.1.ph, %if.then1114 ], [ %alt_fail.1.ph, %if.end1109 ], [ %alt_fail.1.ph, %if.then1166 ], [ %alt_fail.0180, %while.end227 ], [ 1, %if.then979 ], [ 1, %if.else1120 ], [ 1, %land.lhs.true1160 ]
  %indvars.iv.next204 = add nuw nsw i64 %indvars.iv203, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next204 to i32
  %exitcond206 = icmp eq i32 %lftr.wideiv, %n_ops
  br i1 %exitcond206, label %for.end1178, label %for.body3

for.end1178:                                      ; preds = %for.inc1176
  %tobool1179.not = icmp ne i32 %alt_fail.2, 0
  %cmp2178.not = xor i1 %cmp2178, true
  %brmerge = or i1 %tobool1179.not, %cmp2178.not
  br i1 %brmerge, label %cleanup, label %for.body1185

for.body1185:                                     ; preds = %for.end1178, %for.inc1258
  %indvars.iv210 = phi i64 [ %indvars.iv.next211, %for.inc1258 ], [ 0, %for.end1178 ]
  %arrayidx1187 = getelementptr inbounds %struct.recog_data* @recog_data, i64 0, i32 0, i64 %indvars.iv210
  %109 = load %struct.rtx_def** %arrayidx1187, align 8, !tbaa !12
  %110 = getelementptr inbounds %struct.rtx_def* %109, i64 0, i32 0
  %bf.load1188 = load i32* %110, align 8
  %bf.clear1189 = and i32 %bf.load1188, 65535
  %cmp1190 = icmp eq i32 %bf.clear1189, 61
  br i1 %cmp1190, label %land.lhs.true1192, label %for.inc1258

land.lhs.true1192:                                ; preds = %for.body1185
  %arrayidx1196 = getelementptr inbounds %struct.rtx_def* %109, i64 0, i32 1, i64 0
  %rtuint1197 = bitcast %union.rtunion_def* %arrayidx1196 to i32*
  %111 = load i32* %rtuint1197, align 4, !tbaa !5
  %cmp1198 = icmp ugt i32 %111, 52
  br i1 %cmp1198, label %if.then1200, label %for.inc1258

if.then1200:                                      ; preds = %land.lhs.true1192
  %arrayidx1207 = getelementptr inbounds %struct.recog_data* @recog_data, i64 0, i32 4, i64 %indvars.iv210
  %112 = load i32* %arrayidx1207, align 4, !tbaa !10
  %cmp1208 = icmp eq i32 %112, 2
  %add1210 = select i1 %cmp1208, i32 2, i32 1
  %mem_cost1211 = getelementptr inbounds %struct.costs* %op_costs, i64 %indvars.iv210, i32 1
  %113 = load i32* %mem_cost1211, align 4, !tbaa !17
  %mem_cost1212 = getelementptr inbounds [30 x %struct.costs]* %this_op_costs, i64 0, i64 %indvars.iv210, i32 1
  %114 = load i32* %mem_cost1212, align 4, !tbaa !17
  %add1213 = add nsw i32 %114, %alt_cost.5
  %mul = mul nsw i32 %add1213, %add1210
  %cmp1214 = icmp slt i32 %113, %mul
  %.mul = select i1 %cmp1214, i32 %113, i32 %mul
  store i32 %.mul, i32* %mem_cost1211, align 4, !tbaa !17
  br label %for.body1228

for.body1228:                                     ; preds = %for.body1228, %if.then1200
  %indvars.iv207 = phi i64 [ 0, %if.then1200 ], [ %indvars.iv.next208, %for.body1228 ]
  %arrayidx1231 = getelementptr inbounds %struct.costs* %op_costs, i64 %indvars.iv210, i32 0, i64 %indvars.iv207
  %115 = load i32* %arrayidx1231, align 4, !tbaa !5
  %arrayidx1234 = getelementptr inbounds [30 x %struct.costs]* %this_op_costs, i64 0, i64 %indvars.iv210, i32 0, i64 %indvars.iv207
  %116 = load i32* %arrayidx1234, align 4, !tbaa !5
  %add1235 = add nsw i32 %116, %alt_cost.5
  %mul1236 = mul nsw i32 %add1235, %add1210
  %cmp1237 = icmp slt i32 %115, %mul1236
  %.mul1236 = select i1 %cmp1237, i32 %115, i32 %mul1236
  store i32 %.mul1236, i32* %arrayidx1231, align 4, !tbaa !5
  %indvars.iv.next208 = add nuw nsw i64 %indvars.iv207, 1
  %exitcond209 = icmp eq i64 %indvars.iv.next208, 25
  br i1 %exitcond209, label %for.inc1258, label %for.body1228

for.inc1258:                                      ; preds = %for.body1228, %for.body1185, %land.lhs.true1192
  %indvars.iv.next211 = add nuw nsw i64 %indvars.iv210, 1
  %lftr.wideiv212 = trunc i64 %indvars.iv.next211 to i32
  %exitcond213 = icmp eq i32 %lftr.wideiv212, %n_ops
  br i1 %exitcond213, label %cleanup, label %for.body1185

cleanup:                                          ; preds = %for.inc1258, %for.end1178, %for.body
  call void @llvm.lifetime.end(i64 120, i8* %1) #1
  call void @llvm.lifetime.end(i64 120, i8* %0) #1
  call void @llvm.lifetime.end(i64 3120, i8* %2) #1
  %inc1264 = add nsw i32 %alt.0189, 1
  %exitcond214 = icmp eq i32 %inc1264, %n_alts
  br i1 %exitcond214, label %for.end1265, label %for.body

for.end1265:                                      ; preds = %cleanup, %entry
  %117 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 0
  %bf.load1266 = load i32* %117, align 8
  %bf.clear1267 = and i32 %bf.load1266, 65535
  %idxprom12681 = zext i32 %bf.clear1267 to i64
  %arrayidx1269 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom12681
  %118 = load i8* %arrayidx1269, align 1, !tbaa !10
  %cmp1271 = icmp eq i8 %118, 105
  br i1 %cmp1271, label %cond.true1273, label %if.end1656

cond.true1273:                                    ; preds = %for.end1265
  %arrayidx1275 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 3
  %rtx1276 = bitcast %union.rtunion_def* %arrayidx1275 to %struct.rtx_def**
  %119 = load %struct.rtx_def** %rtx1276, align 8, !tbaa !12
  %120 = getelementptr inbounds %struct.rtx_def* %119, i64 0, i32 0
  %bf.load1277 = load i32* %120, align 8
  %bf.clear1278 = and i32 %bf.load1277, 65535
  %cmp1279 = icmp eq i32 %bf.clear1278, 47
  br i1 %cmp1279, label %cond.end1293, label %cond.false1285

cond.false1285:                                   ; preds = %cond.true1273
  %call1289 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %insn, %struct.rtx_def* %119) #1
  br label %cond.end1293

cond.end1293:                                     ; preds = %cond.true1273, %cond.false1285
  %cond1294 = phi %struct.rtx_def* [ %call1289, %cond.false1285 ], [ %119, %cond.true1273 ]
  %cmp1295 = icmp eq %struct.rtx_def* %cond1294, null
  br i1 %cmp1295, label %if.end1656, label %land.lhs.true1297

land.lhs.true1297:                                ; preds = %cond.end1293
  %121 = load %struct.rtx_def** getelementptr inbounds (%struct.recog_data* @recog_data, i64 0, i32 0, i64 0), align 8, !tbaa !12
  %fld1299 = getelementptr inbounds %struct.rtx_def* %cond1294, i64 0, i32 1
  %rtx1301 = bitcast [1 x %union.rtunion_def]* %fld1299 to %struct.rtx_def**
  %122 = load %struct.rtx_def** %rtx1301, align 8, !tbaa !12
  %cmp1302 = icmp eq %struct.rtx_def* %121, %122
  br i1 %cmp1302, label %land.lhs.true1304, label %if.end1656

land.lhs.true1304:                                ; preds = %land.lhs.true1297
  %123 = load %struct.rtx_def** getelementptr inbounds (%struct.recog_data* @recog_data, i64 0, i32 0, i64 1), align 8, !tbaa !12
  %arrayidx1307 = getelementptr inbounds %struct.rtx_def* %cond1294, i64 0, i32 1, i64 1
  %rtx1308 = bitcast %union.rtunion_def* %arrayidx1307 to %struct.rtx_def**
  %124 = load %struct.rtx_def** %rtx1308, align 8, !tbaa !12
  %cmp1309 = icmp eq %struct.rtx_def* %123, %124
  br i1 %cmp1309, label %land.lhs.true1311, label %if.end1656

land.lhs.true1311:                                ; preds = %land.lhs.true1304
  %125 = getelementptr inbounds %struct.rtx_def* %121, i64 0, i32 0
  %bf.load1313 = load i32* %125, align 8
  %bf.clear1314 = and i32 %bf.load1313, 65535
  %cmp1315 = icmp eq i32 %bf.clear1314, 61
  br i1 %cmp1315, label %land.lhs.true1317, label %if.end1656

land.lhs.true1317:                                ; preds = %land.lhs.true1311
  %126 = getelementptr inbounds %struct.rtx_def* %123, i64 0, i32 0
  %bf.load1319 = load i32* %126, align 8
  %bf.clear1320 = and i32 %bf.load1319, 65535
  %cmp1321 = icmp eq i32 %bf.clear1320, 61
  br i1 %cmp1321, label %land.lhs.true1323, label %if.end1656

land.lhs.true1323:                                ; preds = %land.lhs.true1317
  %arrayidx1326 = getelementptr inbounds %struct.rtx_def* %123, i64 0, i32 1, i64 0
  %rtuint1327 = bitcast %union.rtunion_def* %arrayidx1326 to i32*
  %127 = load i32* %rtuint1327, align 4, !tbaa !5
  %call1328 = call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %insn, i32 1, i32 %127) #1
  %tobool1329 = icmp eq %struct.rtx_def* %call1328, null
  br i1 %tobool1329, label %if.end1656, label %for.cond1331.preheader

for.cond1331.preheader:                           ; preds = %land.lhs.true1323
  %cmp1362 = icmp ne %struct.reg_pref* %reg_pref, null
  br label %for.body1334

for.body1334:                                     ; preds = %for.inc1653, %for.cond1331.preheader
  %indvars.iv194 = phi i64 [ 0, %for.cond1331.preheader ], [ %indvars.iv.next195, %for.inc1653 ]
  %arrayidx1336 = getelementptr inbounds %struct.recog_data* @recog_data, i64 0, i32 0, i64 %indvars.iv194
  %128 = load %struct.rtx_def** %arrayidx1336, align 8, !tbaa !12
  %arrayidx1338 = getelementptr inbounds %struct.rtx_def* %128, i64 0, i32 1, i64 0
  %rtuint1339 = bitcast %union.rtunion_def* %arrayidx1338 to i32*
  %129 = load i32* %rtuint1339, align 4, !tbaa !5
  %cmp1340 = icmp ugt i32 %129, 52
  br i1 %cmp1340, label %if.then1342, label %for.inc1653

if.then1342:                                      ; preds = %for.body1334
  %130 = trunc i64 %indvars.iv194 to i32
  %lnot = icmp eq i32 %130, 0
  %idxprom1344 = zext i1 %lnot to i64
  %arrayidx1345 = getelementptr inbounds %struct.recog_data* @recog_data, i64 0, i32 0, i64 %idxprom1344
  %131 = load %struct.rtx_def** %arrayidx1345, align 8, !tbaa !12
  %arrayidx1347 = getelementptr inbounds %struct.rtx_def* %131, i64 0, i32 1, i64 0
  %rtuint1348 = bitcast %union.rtunion_def* %arrayidx1347 to i32*
  %132 = load i32* %rtuint1348, align 4, !tbaa !5
  %133 = getelementptr inbounds %struct.rtx_def* %131, i64 0, i32 0
  %bf.load1355 = load i32* %133, align 8
  %bf.lshr1356 = lshr i32 %bf.load1355, 16
  %bf.clear1357 = and i32 %bf.lshr1356, 255
  %cmp1359 = icmp ugt i32 %132, 52
  %or.cond = and i1 %cmp1359, %cmp1362
  br i1 %or.cond, label %if.then1364, label %if.else1420

if.then1364:                                      ; preds = %if.then1342
  %idxprom1365 = zext i32 %132 to i64
  %prefclass1367 = getelementptr inbounds %struct.reg_pref* %reg_pref, i64 %idxprom1365, i32 0
  %134 = load i8* %prefclass1367, align 1, !tbaa !14
  %conv1368 = sext i8 %134 to i32
  %idxprom1370 = zext i8 %134 to i64
  %arrayidx1371 = getelementptr inbounds [25 x i32]* @reg_class_size, i64 0, i64 %idxprom1370
  %135 = load i32* %arrayidx1371, align 4, !tbaa !5
  switch i32 %conv1368, label %reg_classes_intersect_p.exit [
    i32 12, label %cond.false1386
    i32 24, label %cond.false1386
  ]

reg_classes_intersect_p.exit:                     ; preds = %if.then1364
  %idxprom.i = sext i8 %134 to i64
  %arrayidx.i = getelementptr inbounds [25 x i64]* @reg_class_contents, i64 0, i64 %idxprom.i
  %136 = load i64* %arrayidx.i, align 8, !tbaa !1
  %137 = load i64* getelementptr inbounds ([25 x i64]* @reg_class_contents, i64 0, i64 12), align 16, !tbaa !1
  %and.i = and i64 %137, %136
  %138 = load i64* getelementptr inbounds ([25 x i64]* @reg_class_contents, i64 0, i64 0), align 16, !tbaa !1
  %neg.i = xor i64 %138, -1
  %and7.i = and i64 %and.i, %neg.i
  %not.cmp8.i = icmp eq i64 %and7.i, 0
  br i1 %not.cmp8.i, label %cond.true1374, label %cond.false1386

cond.true1374:                                    ; preds = %reg_classes_intersect_p.exit
  %idxprom137514 = zext i32 %bf.clear1357 to i64
  %arrayidx1376 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom137514
  %139 = load i32* %arrayidx1376, align 4, !tbaa !10
  %cmp1377 = icmp eq i32 %139, 5
  br i1 %cmp1377, label %cond.end1404, label %lor.rhs1379

lor.rhs1379:                                      ; preds = %cond.true1374
  %cmp1382 = icmp eq i32 %139, 6
  %phitmp15 = select i1 %cmp1382, i32 2, i32 1
  br label %cond.end1404

cond.false1386:                                   ; preds = %reg_classes_intersect_p.exit, %if.then1364, %if.then1364
  %cmp1387 = icmp eq i32 %bf.clear1357, 18
  %140 = zext i32 %bf.clear1357 to i64
  %idxprom1393 = select i1 %cmp1387, i64 17, i64 %140
  %arrayidx1394 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom1393
  %141 = load i8* %arrayidx1394, align 1, !tbaa !10
  %conv1395 = zext i8 %141 to i32
  %142 = load i32* @target_flags, align 4, !tbaa !5
  %and1396 = lshr i32 %142, 23
  %143 = and i32 %and1396, 4
  %144 = add i32 %143, 4
  %add1399 = add i32 %conv1395, -1
  %sub1400 = add i32 %add1399, %144
  %div = sdiv i32 %sub1400, %144
  br label %cond.end1404

cond.end1404:                                     ; preds = %cond.true1374, %lor.rhs1379, %cond.false1386
  %cond1405 = phi i32 [ %div, %cond.false1386 ], [ 2, %cond.true1374 ], [ %phitmp15, %lor.rhs1379 ]
  %cmp1406 = icmp eq i32 %135, %cond1405
  br i1 %cmp1406, label %land.lhs.true1408, label %for.inc1653

land.lhs.true1408:                                ; preds = %cond.end1404
  %call1409 = call i32 @ix86_register_move_cost(i32 %bf.clear1357, i32 %conv1368, i32 %conv1368) #1
  %cmp1410 = icmp slt i32 %call1409, 20
  br i1 %cmp1410, label %if.then1412, label %for.inc1653

if.then1412:                                      ; preds = %land.lhs.true1408
  %arrayidx1418 = getelementptr inbounds %struct.costs* %op_costs, i64 %indvars.iv194, i32 0, i64 %idxprom1370
  store i32 -1, i32* %arrayidx1418, align 4, !tbaa !5
  br label %for.inc1653

if.else1420:                                      ; preds = %if.then1342
  %cmp1421 = icmp ult i32 %132, 53
  br i1 %cmp1421, label %for.cond1424.preheader, label %for.inc1653

for.cond1424.preheader:                           ; preds = %if.else1420
  %sh_prom = zext i32 %132 to i64
  %shl = shl i64 1, %sh_prom
  %145 = load i64* getelementptr inbounds ([25 x i64]* @reg_class_contents, i64 0, i64 12), align 16, !tbaa !1
  %146 = load i64* getelementptr inbounds ([25 x i64]* @reg_class_contents, i64 0, i64 0), align 16, !tbaa !1
  %neg.i105 = xor i64 %146, -1
  %idxprom14382 = zext i32 %bf.clear1357 to i64
  %arrayidx1439 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom14382
  %147 = and i32 %132, -8
  %148 = icmp eq i32 %147, 8
  %.off = add i32 %132, -21
  %149 = icmp ult i32 %.off, 8
  %or.cond31 = or i1 %148, %149
  %.off3 = add i32 %132, -45
  %150 = icmp ult i32 %.off3, 8
  %or.cond33 = or i1 %or.cond31, %150
  %.off4 = add i32 %132, -29
  %151 = icmp ult i32 %.off4, 8
  %or.cond35 = or i1 %or.cond33, %151
  %arrayidx1536 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom14382
  %cmp1450 = icmp eq i32 %bf.clear1357, 18
  %idxprom1456 = select i1 %cmp1450, i64 17, i64 %idxprom14382
  %arrayidx1457 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom1456
  br label %for.body1427

for.body1427:                                     ; preds = %for.inc1647.for.body1427_crit_edge, %for.cond1424.preheader
  %152 = phi i64 [ %146, %for.cond1424.preheader ], [ %.pre, %for.inc1647.for.body1427_crit_edge ]
  %indvars.iv = phi i64 [ 0, %for.cond1424.preheader ], [ %indvars.iv.next, %for.inc1647.for.body1427_crit_edge ]
  %and1430 = and i64 %152, %shl
  %tobool1431 = icmp eq i64 %and1430, 0
  br i1 %tobool1431, label %for.inc1647, label %land.lhs.true1432

land.lhs.true1432:                                ; preds = %for.body1427
  %arrayidx1434 = getelementptr inbounds [25 x i32]* @reg_class_size, i64 0, i64 %indvars.iv
  %153 = load i32* %arrayidx1434, align 4, !tbaa !5
  %154 = trunc i64 %indvars.iv to i32
  switch i32 %154, label %reg_classes_intersect_p.exit111 [
    i32 12, label %cond.false1449
    i32 24, label %cond.false1449
  ]

reg_classes_intersect_p.exit111:                  ; preds = %land.lhs.true1432
  %and.i104 = and i64 %145, %152
  %and7.i106 = and i64 %and.i104, %neg.i105
  %not.cmp8.i107 = icmp eq i64 %and7.i106, 0
  br i1 %not.cmp8.i107, label %cond.true1437, label %cond.false1449

cond.true1437:                                    ; preds = %reg_classes_intersect_p.exit111
  %155 = load i32* %arrayidx1439, align 4, !tbaa !10
  %cmp1440 = icmp eq i32 %155, 5
  br i1 %cmp1440, label %cond.end1468, label %lor.rhs1442

lor.rhs1442:                                      ; preds = %cond.true1437
  %cmp1445 = icmp eq i32 %155, 6
  %phitmp = select i1 %cmp1445, i32 2, i32 1
  br label %cond.end1468

cond.false1449:                                   ; preds = %reg_classes_intersect_p.exit111, %land.lhs.true1432, %land.lhs.true1432
  %156 = load i8* %arrayidx1457, align 1, !tbaa !10
  %conv1458 = zext i8 %156 to i32
  %157 = load i32* @target_flags, align 4, !tbaa !5
  %and1459 = lshr i32 %157, 23
  %158 = and i32 %and1459, 4
  %159 = add i32 %158, 4
  %add1462 = add i32 %conv1458, -1
  %sub1463 = add i32 %add1462, %159
  %div1467 = sdiv i32 %sub1463, %159
  br label %cond.end1468

cond.end1468:                                     ; preds = %cond.true1437, %lor.rhs1442, %cond.false1449
  %cond1469 = phi i32 [ %div1467, %cond.false1449 ], [ 2, %cond.true1437 ], [ %phitmp, %lor.rhs1442 ]
  %cmp1470 = icmp eq i32 %153, %cond1469
  br i1 %cmp1470, label %if.then1472, label %for.inc1647

if.then1472:                                      ; preds = %cond.end1468
  %cmp1475 = icmp eq i32 %153, 1
  br i1 %cmp1475, label %if.then1477, label %for.cond1484.preheader

for.cond1484.preheader:                           ; preds = %if.then1472
  %160 = load i32* @target_flags, align 4, !tbaa !5
  %and1538 = lshr i32 %160, 23
  %161 = and i32 %and1538, 4
  %162 = add i32 %161, 4
  %and1524 = lshr i32 %160, 25
  %163 = and i32 %and1524, 1
  %164 = xor i32 %163, 3
  %and1531 = lshr i32 %160, 24
  %165 = and i32 %and1531, 2
  %166 = xor i32 %165, 6
  br label %for.cond1484

if.then1477:                                      ; preds = %if.then1472
  %arrayidx1482 = getelementptr inbounds %struct.costs* %op_costs, i64 %indvars.iv194, i32 0, i64 %indvars.iv
  store i32 -1, i32* %arrayidx1482, align 4, !tbaa !5
  br label %for.inc1647

for.cond1484:                                     ; preds = %for.body1555, %for.cond1484.preheader
  %nr.0 = phi i32 [ %inc1566, %for.body1555 ], [ 0, %for.cond1484.preheader ]
  br i1 %or.cond35, label %cond.true1508, label %cond.false1520

cond.true1508:                                    ; preds = %for.cond1484
  %167 = load i32* %arrayidx1439, align 4, !tbaa !10
  %cmp1511 = icmp eq i32 %167, 5
  br i1 %cmp1511, label %cond.end1551, label %lor.rhs1513

lor.rhs1513:                                      ; preds = %cond.true1508
  %cmp1516 = icmp eq i32 %167, 6
  %phitmp13 = select i1 %cmp1516, i32 2, i32 1
  br label %cond.end1551

cond.false1520:                                   ; preds = %for.cond1484
  switch i32 %bf.clear1357, label %cond.false1534 [
    i32 18, label %cond.end1551
    i32 24, label %cond.true1530
  ]

cond.true1530:                                    ; preds = %cond.false1520
  br label %cond.end1551

cond.false1534:                                   ; preds = %cond.false1520
  %168 = load i8* %arrayidx1536, align 1, !tbaa !10
  %conv1537 = zext i8 %168 to i32
  %add1541 = add i32 %conv1537, -1
  %sub1542 = add i32 %add1541, %162
  %div1546 = sdiv i32 %sub1542, %162
  br label %cond.end1551

cond.end1551:                                     ; preds = %cond.false1520, %cond.true1508, %lor.rhs1513, %cond.false1534, %cond.true1530
  %cond1552 = phi i32 [ %166, %cond.true1530 ], [ %div1546, %cond.false1534 ], [ 2, %cond.true1508 ], [ %phitmp13, %lor.rhs1513 ], [ %164, %cond.false1520 ]
  %cmp1553 = icmp ult i32 %nr.0, %cond1552
  br i1 %cmp1553, label %for.body1555, label %for.end1567

for.body1555:                                     ; preds = %cond.end1551
  %add1558 = add i32 %nr.0, %132
  %sh_prom1559 = zext i32 %add1558 to i64
  %shl1560 = shl i64 1, %sh_prom1559
  %and1561 = and i64 %152, %shl1560
  %tobool1562 = icmp eq i64 %and1561, 0
  %inc1566 = add i32 %nr.0, 1
  br i1 %tobool1562, label %for.end1567, label %for.cond1484

for.end1567:                                      ; preds = %for.body1555, %cond.end1551
  br i1 %or.cond35, label %cond.true1591, label %cond.false1603

cond.true1591:                                    ; preds = %for.end1567
  %169 = load i32* %arrayidx1439, align 4, !tbaa !10
  %cmp1594 = icmp eq i32 %169, 5
  br i1 %cmp1594, label %cond.end1634, label %lor.rhs1596

lor.rhs1596:                                      ; preds = %cond.true1591
  %cmp1599 = icmp eq i32 %169, 6
  %phitmp11 = select i1 %cmp1599, i32 2, i32 1
  br label %cond.end1634

cond.false1603:                                   ; preds = %for.end1567
  switch i32 %bf.clear1357, label %cond.false1617 [
    i32 18, label %cond.end1634
    i32 24, label %cond.true1613
  ]

cond.true1613:                                    ; preds = %cond.false1603
  br label %cond.end1634

cond.false1617:                                   ; preds = %cond.false1603
  %170 = load i8* %arrayidx1536, align 1, !tbaa !10
  %conv1620 = zext i8 %170 to i32
  %add1624 = add i32 %conv1620, -1
  %sub1625 = add i32 %add1624, %162
  %div1629 = sdiv i32 %sub1625, %162
  br label %cond.end1634

cond.end1634:                                     ; preds = %cond.false1603, %cond.true1591, %lor.rhs1596, %cond.false1617, %cond.true1613
  %cond1635 = phi i32 [ %166, %cond.true1613 ], [ %div1629, %cond.false1617 ], [ 2, %cond.true1591 ], [ %phitmp11, %lor.rhs1596 ], [ %164, %cond.false1603 ]
  %cmp1636 = icmp eq i32 %nr.0, %cond1635
  br i1 %cmp1636, label %if.then1638, label %for.inc1647

if.then1638:                                      ; preds = %cond.end1634
  %arrayidx1643 = getelementptr inbounds %struct.costs* %op_costs, i64 %indvars.iv194, i32 0, i64 %indvars.iv
  store i32 -1, i32* %arrayidx1643, align 4, !tbaa !5
  br label %for.inc1647

for.inc1647:                                      ; preds = %for.body1427, %cond.end1468, %cond.end1634, %if.then1638, %if.then1477
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 25
  br i1 %exitcond, label %for.inc1653, label %for.inc1647.for.body1427_crit_edge

for.inc1647.for.body1427_crit_edge:               ; preds = %for.inc1647
  %arrayidx1429.phi.trans.insert = getelementptr inbounds [25 x i64]* @reg_class_contents, i64 0, i64 %indvars.iv.next
  %.pre = load i64* %arrayidx1429.phi.trans.insert, align 8, !tbaa !1
  br label %for.body1427

for.inc1653:                                      ; preds = %for.inc1647, %for.body1334, %if.else1420, %cond.end1404, %land.lhs.true1408, %if.then1412
  %indvars.iv.next195 = add nuw nsw i64 %indvars.iv194, 1
  %exitcond196 = icmp eq i64 %indvars.iv.next195, 2
  br i1 %exitcond196, label %if.end1656, label %for.body1334

if.end1656:                                       ; preds = %for.inc1653, %for.end1265, %land.lhs.true1323, %cond.end1293, %land.lhs.true1317, %land.lhs.true1311, %land.lhs.true1304, %land.lhs.true1297
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @copy_cost(%struct.rtx_def* %x, i32 %mode, i32 %class, i32 %to_p) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 62
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %call = tail call i32 @ix86_preferred_reload_class(%struct.rtx_def* %x, i32 %class) #1
  %tobool = icmp eq i32 %to_p, 0
  %call.off = add i32 %call, -10
  %switch = icmp ult i32 %call.off, 3
  %or.cond = and i1 %tobool, %switch
  br i1 %or.cond, label %land.lhs.true, label %if.end16

land.lhs.true:                                    ; preds = %if.end
  %1 = load i32* @target_flags, align 4, !tbaa !5
  %and = and i32 %1, 33554432
  %tobool6 = icmp eq i32 %and, 0
  %cmp7 = icmp eq i32 %mode, 2
  %or.cond60 = and i1 %tobool6, %cmp7
  br i1 %or.cond60, label %if.then10, label %if.end16

if.then10:                                        ; preds = %land.lhs.true
  %idxprom = sext i32 %call to i64
  %arrayidx14 = getelementptr inbounds [59 x [25 x [25 x i32]]]* @move_cost, i64 0, i64 2, i64 8, i64 %idxprom
  %2 = load i32* %arrayidx14, align 4, !tbaa !5
  %call15 = tail call fastcc i32 @copy_cost(%struct.rtx_def* %x, i32 2, i32 8, i32 2)
  %add = add nsw i32 %call15, %2
  ret i32 %add

if.end16:                                         ; preds = %if.end, %land.lhs.true
  %bf.load17 = load i32* %0, align 8
  %bf.clear18 = and i32 %bf.load17, 65535
  %cmp19 = icmp eq i32 %bf.clear18, 66
  %cmp21 = icmp eq i32 %call, 0
  %or.cond39 = or i1 %cmp19, %cmp21
  br i1 %or.cond39, label %if.then22, label %if.else

if.then22:                                        ; preds = %if.end16
  %call23 = tail call i32 @ix86_memory_move_cost(i32 %mode, i32 %call, i32 %to_p) #1
  br label %return

if.else:                                          ; preds = %if.end16
  %cmp26 = icmp eq i32 %bf.clear18, 61
  br i1 %cmp26, label %if.then27, label %return

if.then27:                                        ; preds = %if.else
  %idxprom28 = sext i32 %call to i64
  %arrayidx29 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx29 to i32*
  %3 = load i32* %rtuint, align 4, !tbaa !5
  %idxprom30 = zext i32 %3 to i64
  %arrayidx31 = getelementptr inbounds [53 x i32]* @regclass_map, i64 0, i64 %idxprom30
  %4 = load i32* %arrayidx31, align 4, !tbaa !10
  %idxprom32 = sext i32 %4 to i64
  %idxprom33 = zext i32 %mode to i64
  %arrayidx36 = getelementptr inbounds [59 x [25 x [25 x i32]]]* @move_cost, i64 0, i64 %idxprom33, i64 %idxprom32, i64 %idxprom28
  %5 = load i32* %arrayidx36, align 4, !tbaa !5
  br label %return

return:                                           ; preds = %if.else, %entry, %if.then27, %if.then22
  %retval.0 = phi i32 [ %call23, %if.then22 ], [ %5, %if.then27 ], [ 0, %entry ], [ 4, %if.else ]
  ret i32 %retval.0
}

declare i32 @address_operand(%struct.rtx_def*, i32) #2

declare i32 @standard_80387_constant_p(%struct.rtx_def*) #2

declare i32 @standard_sse_constant_p(%struct.rtx_def*) #2

declare i32 @symbolic_reference_mentioned_p(%struct.rtx_def*) #2

declare i32 @legitimate_pic_address_disp_p(%struct.rtx_def*) #2

declare i32 @x86_64_sign_extended_value(%struct.rtx_def*) #2

declare i32 @x86_64_zero_extended_value(%struct.rtx_def*) #2

declare i32 @reg_fits_class_p(%struct.rtx_def*, i32, i32, i32) #2

declare %struct.rtx_def* @find_regno_note(%struct.rtx_def*, i32, i32) #2

declare i32 @ix86_preferred_reload_class(%struct.rtx_def*, i32) #2

; Function Attrs: nounwind
declare i32 @fputc(i32, %struct._IO_FILE* nocapture) #1

attributes #0 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }
attributes #2 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = metadata !{metadata !"clang version 3.5 (trunk)"}
!1 = metadata !{metadata !2, metadata !2, i64 0}
!2 = metadata !{metadata !"long long", metadata !3, i64 0}
!3 = metadata !{metadata !"omnipotent char", metadata !4, i64 0}
!4 = metadata !{metadata !"Simple C/C++ TBAA"}
!5 = metadata !{metadata !6, metadata !6, i64 0}
!6 = metadata !{metadata !"int", metadata !3, i64 0}
!7 = metadata !{metadata !7, metadata !8, metadata !9}
!8 = metadata !{metadata !"llvm.vectorizer.width", i32 1}
!9 = metadata !{metadata !"llvm.vectorizer.unroll", i32 1}
!10 = metadata !{metadata !3, metadata !3, i64 0}
!11 = metadata !{metadata !11, metadata !8, metadata !9}
!12 = metadata !{metadata !13, metadata !13, i64 0}
!13 = metadata !{metadata !"any pointer", metadata !3, i64 0}
!14 = metadata !{metadata !15, metadata !3, i64 0}
!15 = metadata !{metadata !"reg_pref", metadata !3, i64 0, metadata !3, i64 1}
!16 = metadata !{metadata !15, metadata !3, i64 1}
!17 = metadata !{metadata !18, metadata !6, i64 100}
!18 = metadata !{metadata !"costs", metadata !3, i64 0, metadata !6, i64 100}
!19 = metadata !{metadata !20, metadata !6, i64 104}
!20 = metadata !{metadata !"basic_block_def", metadata !13, i64 0, metadata !13, i64 8, metadata !13, i64 16, metadata !13, i64 24, metadata !13, i64 32, metadata !13, i64 40, metadata !13, i64 48, metadata !13, i64 56, metadata !13, i64 64, metadata !13, i64 72, metadata !13, i64 80, metadata !6, i64 88, metadata !6, i64 92, metadata !2, i64 96, metadata !6, i64 104, metadata !6, i64 108}
!21 = metadata !{metadata !20, metadata !13, i64 8}
!22 = metadata !{metadata !23, metadata !6, i64 16}
!23 = metadata !{metadata !"reg_info_def", metadata !6, i64 0, metadata !6, i64 4, metadata !6, i64 8, metadata !6, i64 12, metadata !6, i64 16, metadata !6, i64 20, metadata !6, i64 24, metadata !6, i64 28, metadata !6, i64 32, metadata !6, i64 36, metadata !3, i64 40}
!24 = metadata !{metadata !25, metadata !13, i64 24}
!25 = metadata !{metadata !"function", metadata !13, i64 0, metadata !13, i64 8, metadata !13, i64 16, metadata !13, i64 24, metadata !13, i64 32, metadata !13, i64 40, metadata !13, i64 48, metadata !13, i64 56, metadata !6, i64 64, metadata !6, i64 68, metadata !6, i64 72, metadata !6, i64 76, metadata !13, i64 80, metadata !26, i64 88, metadata !13, i64 120, metadata !13, i64 128, metadata !13, i64 136, metadata !13, i64 144, metadata !6, i64 152, metadata !13, i64 160, metadata !13, i64 168, metadata !13, i64 176, metadata !13, i64 184, metadata !13, i64 192, metadata !13, i64 200, metadata !13, i64 208, metadata !13, i64 216, metadata !13, i64 224, metadata !13, i64 232, metadata !13, i64 240, metadata !13, i64 248, metadata !13, i64 256, metadata !2, i64 264, metadata !13, i64 272, metadata !13, i64 280, metadata !13, i64 288, metadata !13, i64 296, metadata !6, i64 304, metadata !13, i64 312, metadata !13, i64 320, metadata !6, i64 328, metadata !6, i64 332, metadata !6, i64 336, metadata !13, i64 344, metadata !6, i64 352, metadata !6, i64 356, metadata !13, i64 360, metadata !13, i64 368, metadata !13, i64 376, metadata !6, i64 384, metadata !6, i64 388, metadata !13, i64 392, metadata !6, i64 400, metadata !6, i64 404, metadata !13, i64 408, metadata !13, i64 416, metadata !6, i64 424, metadata !6, i64 424, metadata !6, i64 424, metadata !6, i64 424, metadata !6, i64 424, metadata !6, i64 424, metadata !6, i64 424, metadata !6, i64 424, metadata !6, i64 425, metadata !6, i64 425, metadata !6, i64 425, metadata !6, i64 425, metadata !6, i64 425, metadata !6, i64 425, metadata !6, i64 425, metadata !6, i64 425, metadata !6, i64 426, metadata !6, i64 426, metadata !6, i64 426, metadata !6, i64 426, metadata !6, i64 426, metadata !6, i64 426, metadata !6, i64 426, metadata !6, i64 426}
!26 = metadata !{metadata !"ix86_args", metadata !6, i64 0, metadata !6, i64 4, metadata !6, i64 8, metadata !6, i64 12, metadata !6, i64 16, metadata !6, i64 20, metadata !6, i64 24}
!27 = metadata !{metadata !28, metadata !13, i64 80}
!28 = metadata !{metadata !"emit_status", metadata !6, i64 0, metadata !6, i64 4, metadata !13, i64 8, metadata !13, i64 16, metadata !13, i64 24, metadata !13, i64 32, metadata !6, i64 40, metadata !6, i64 44, metadata !13, i64 48, metadata !6, i64 56, metadata !13, i64 64, metadata !13, i64 72, metadata !13, i64 80}
!29 = metadata !{metadata !20, metadata !13, i64 0}
!30 = metadata !{metadata !23, metadata !6, i64 12}
!31 = metadata !{metadata !23, metadata !6, i64 20}
!32 = metadata !{metadata !33, metadata !3, i64 997}
!33 = metadata !{metadata !"recog_data", metadata !3, i64 0, metadata !3, i64 240, metadata !3, i64 480, metadata !3, i64 720, metadata !3, i64 840, metadata !3, i64 960, metadata !3, i64 992, metadata !3, i64 996, metadata !3, i64 997, metadata !3, i64 998, metadata !13, i64 1000}
!34 = metadata !{i64 0, i64 100, metadata !10, i64 100, i64 4, metadata !5}
!35 = metadata !{metadata !33, metadata !3, i64 996}
!36 = metadata !{metadata !37, metadata !37, i64 0}
!37 = metadata !{metadata !"long", metadata !3, i64 0}
!38 = metadata !{metadata !39, metadata !37, i64 8}
!39 = metadata !{metadata !"reg_info_data", metadata !13, i64 0, metadata !37, i64 8, metadata !37, i64 16, metadata !3, i64 24, metadata !3, i64 28}
!40 = metadata !{metadata !39, metadata !37, i64 16}
!41 = metadata !{metadata !39, metadata !13, i64 0}
!42 = metadata !{metadata !39, metadata !3, i64 24}
!43 = metadata !{metadata !23, metadata !6, i64 36}
!44 = metadata !{metadata !45, metadata !45, i64 0}
!45 = metadata !{metadata !"short", metadata !3, i64 0}
!46 = metadata !{metadata !47, metadata !6, i64 0}
!47 = metadata !{metadata !"rtvec_def", metadata !6, i64 0, metadata !3, i64 8}
!48 = metadata !{metadata !23, metadata !6, i64 8}
!49 = metadata !{metadata !23, metadata !6, i64 4}
!50 = metadata !{metadata !23, metadata !6, i64 0}
!51 = metadata !{metadata !28, metadata !13, i64 72}
