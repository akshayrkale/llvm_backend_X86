; ModuleID = 'c-semantics.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%union.tree_node = type { %struct.tree_decl }
%struct.tree_decl = type { %struct.tree_common, i8*, i32, i32, %union.tree_node*, i48, %union.anon, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %union.anon.1, %union.tree_node*, %union.tree_node*, %union.tree_node*, i64, %struct.lang_decl* }
%struct.tree_common = type { %union.tree_node*, %union.tree_node*, i32 }
%union.anon = type { i64 }
%struct.rtx_def = type { i32, [1 x %union.rtunion_def] }
%union.rtunion_def = type { i64 }
%union.anon.1 = type { %struct.function* }
%struct.function = type { %struct.eh_status*, %struct.stmt_status*, %struct.expr_status*, %struct.emit_status*, %struct.varasm_status*, i8*, %union.tree_node*, %struct.function*, i32, i32, i32, i32, %struct.rtx_def*, %struct.ix86_args, %struct.rtx_def*, %struct.rtx_def*, i8*, %struct.initial_value_struct*, i32, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i64, %union.tree_node*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, %struct.rtx_def**, %struct.temp_slot*, i32, i32, i32, %struct.var_refs_queue*, i32, i32, i8*, %union.tree_node*, %struct.rtx_def*, i32, i32, %struct.machine_function*, i32, i32, %struct.language_function*, %struct.rtx_def*, i24 }
%struct.eh_status = type opaque
%struct.stmt_status = type opaque
%struct.expr_status = type { i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def* }
%struct.emit_status = type { i32, i32, %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.sequence_stack*, i32, i32, i8*, i32, i8*, %union.tree_node**, %struct.rtx_def** }
%struct.sequence_stack = type { %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.sequence_stack* }
%struct.varasm_status = type opaque
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.initial_value_struct = type opaque
%struct.temp_slot = type opaque
%struct.var_refs_queue = type { %struct.rtx_def*, i32, i32, %struct.var_refs_queue* }
%struct.machine_function = type opaque
%struct.language_function = type { %struct.stmt_tree_s, %union.tree_node* }
%struct.stmt_tree_s = type { %union.tree_node*, %union.tree_node*, i8*, i32 }
%struct.lang_decl = type opaque
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.nesting = type opaque

@c_global_trees = external global [32 x %union.tree_node*]
@input_filename = external global i8*
@current_function_decl = external global %union.tree_node*
@cfun = external global %struct.function*
@lineno = external global i32
@tree_code_length = external global [256 x i32]
@lang_set_decl_assembler_name = external global void (%union.tree_node*)*
@.str = private unnamed_addr constant [14 x i8] c"c-semantics.c\00", align 1
@__FUNCTION__.genrtl_goto_stmt = private unnamed_addr constant [17 x i8] c"genrtl_goto_stmt\00", align 1
@global_trees = external global [51 x %union.tree_node*]
@lang_expand_decl_stmt = common global void (%union.tree_node*)* null, align 8
@.str1 = private unnamed_addr constant [42 x i8] c"break statement not within loop or switch\00", align 1
@.str2 = private unnamed_addr constant [37 x i8] c"continue statement not within a loop\00", align 1
@.str3 = private unnamed_addr constant [17 x i8] c"switch statement\00", align 1
@genrtl_case_label.explained = internal unnamed_addr global i1 false
@.str4 = private unnamed_addr constant [28 x i8] c"destructor needed for `%#D'\00", align 1
@.str5 = private unnamed_addr constant [30 x i8] c"where case label appears here\00", align 1
@.str6 = private unnamed_addr constant [88 x i8] c"(enclose actions of previous case statements requiring destructors in their own scope.)\00", align 1
@ridpointers = external global %union.tree_node**
@.str7 = private unnamed_addr constant [28 x i8] c"%s qualifier ignored on asm\00", align 1
@lang_expand_stmt = common global void (%union.tree_node*)* null, align 8
@__FUNCTION__.expand_stmt = private unnamed_addr constant [12 x i8] c"expand_stmt\00", align 1

; Function Attrs: nounwind uwtable
define void @begin_stmt_tree(%union.tree_node** nocapture %t) #0 {
entry:
  %0 = load %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*]* @c_global_trees, i64 0, i64 31), align 8, !tbaa !1
  %call = tail call %union.tree_node* (i32, ...)* @build_nt(i32 152, %union.tree_node* %0) #3
  store %union.tree_node* %call, %union.tree_node** %t, align 8, !tbaa !1
  %call1 = tail call %struct.stmt_tree_s* @current_stmt_tree() #3
  %x_last_stmt = getelementptr inbounds %struct.stmt_tree_s* %call1, i64 0, i32 0
  store %union.tree_node* %call, %union.tree_node** %x_last_stmt, align 8, !tbaa !5
  %call2 = tail call %struct.stmt_tree_s* @current_stmt_tree() #3
  %x_last_expr_type = getelementptr inbounds %struct.stmt_tree_s* %call2, i64 0, i32 1
  store %union.tree_node* null, %union.tree_node** %x_last_expr_type, align 8, !tbaa !8
  %1 = load i8** @input_filename, align 8, !tbaa !1
  %call3 = tail call %struct.stmt_tree_s* @current_stmt_tree() #3
  %x_last_expr_filename = getelementptr inbounds %struct.stmt_tree_s* %call3, i64 0, i32 2
  store i8* %1, i8** %x_last_expr_filename, align 8, !tbaa !9
  ret void
}

declare %union.tree_node* @build_nt(i32, ...) #1

declare %struct.stmt_tree_s* @current_stmt_tree() #1

; Function Attrs: nounwind uwtable
define %union.tree_node* @add_stmt(%union.tree_node* %t) #0 {
entry:
  %0 = load i8** @input_filename, align 8, !tbaa !1
  %call = tail call %struct.stmt_tree_s* @current_stmt_tree() #3
  %x_last_expr_filename = getelementptr inbounds %struct.stmt_tree_s* %call, i64 0, i32 2
  %1 = load i8** %x_last_expr_filename, align 8, !tbaa !9
  %cmp = icmp eq i8* %0, %1
  br i1 %cmp, label %if.end11, label %if.then

if.then:                                          ; preds = %entry
  %2 = load i8** @input_filename, align 8, !tbaa !1
  %call1 = tail call %struct.stmt_tree_s* @current_stmt_tree() #3
  %x_last_expr_filename2 = getelementptr inbounds %struct.stmt_tree_s* %call1, i64 0, i32 2
  %3 = load i8** %x_last_expr_filename2, align 8, !tbaa !9
  %call3 = tail call i32 @strcmp(i8* %2, i8* %3) #3
  %cmp4 = icmp eq i32 %call3, 0
  %4 = load i8** @input_filename, align 8, !tbaa !1
  %call5 = tail call %struct.stmt_tree_s* @current_stmt_tree() #3
  %x_last_expr_filename6 = getelementptr inbounds %struct.stmt_tree_s* %call5, i64 0, i32 2
  store i8* %4, i8** %x_last_expr_filename6, align 8, !tbaa !9
  br i1 %cmp4, label %if.end11, label %if.then7

if.then7:                                         ; preds = %if.then
  %5 = load i8** @input_filename, align 8, !tbaa !1
  %call8 = tail call %union.tree_node* @get_identifier(i8* %5) #3
  %call9 = tail call %union.tree_node* (i32, ...)* @build_nt(i32 167, %union.tree_node* %call8) #3
  %call10 = tail call %union.tree_node* @add_stmt(%union.tree_node* %call9)
  br label %if.end11

if.end11:                                         ; preds = %if.then, %entry, %if.then7
  %call12 = tail call %struct.stmt_tree_s* @current_stmt_tree() #3
  %x_last_stmt = getelementptr inbounds %struct.stmt_tree_s* %call12, i64 0, i32 0
  %6 = load %union.tree_node** %x_last_stmt, align 8, !tbaa !5
  %chain = getelementptr inbounds %union.tree_node* %6, i64 0, i32 0, i32 0, i32 0
  store %union.tree_node* %t, %union.tree_node** %chain, align 8, !tbaa !10
  %call13 = tail call %struct.stmt_tree_s* @current_stmt_tree() #3
  %x_last_stmt14 = getelementptr inbounds %struct.stmt_tree_s* %call13, i64 0, i32 0
  store %union.tree_node* %t, %union.tree_node** %x_last_stmt14, align 8, !tbaa !5
  %call15 = tail call i32 @stmts_are_full_exprs_p() #3
  %call16 = tail call %struct.stmt_tree_s* @current_stmt_tree() #3
  %x_last_stmt17 = getelementptr inbounds %struct.stmt_tree_s* %call16, i64 0, i32 0
  %7 = load %union.tree_node** %x_last_stmt17, align 8, !tbaa !5
  %lang_flag_1 = getelementptr inbounds %union.tree_node* %7, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %lang_flag_1, align 8
  %bf.value = shl i32 %call15, 25
  %bf.shl = and i32 %bf.value, 33554432
  %bf.clear = and i32 %bf.load, -33554433
  %bf.set = or i32 %bf.clear, %bf.shl
  store i32 %bf.set, i32* %lang_flag_1, align 8
  %8 = load %union.tree_node** @current_function_decl, align 8, !tbaa !1
  %tobool19 = icmp eq %union.tree_node* %8, null
  br i1 %tobool19, label %if.end21, label %if.then20

if.then20:                                        ; preds = %if.end11
  %i = getelementptr inbounds %union.tree_node* %8, i64 0, i32 0, i32 6, i32 0
  %9 = load i64* %i, align 8, !tbaa !12
  %inc = add nsw i64 %9, 1
  store i64 %inc, i64* %i, align 8, !tbaa !12
  br label %if.end21

if.end21:                                         ; preds = %if.end11, %if.then20
  ret %union.tree_node* %t
}

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) #2

declare %union.tree_node* @get_identifier(i8*) #1

declare i32 @stmts_are_full_exprs_p() #1

; Function Attrs: nounwind uwtable
define void @add_decl_stmt(%union.tree_node* %decl) #0 {
entry:
  %call = tail call %union.tree_node* (i32, ...)* @build_stmt(i32 154, %union.tree_node* %decl)
  %call1 = tail call %union.tree_node* @add_stmt(%union.tree_node* %call)
  ret void
}

; Function Attrs: nounwind uwtable
define %union.tree_node* @build_stmt(i32 %code, ...) #0 {
entry:
  %p = alloca [1 x %struct.__va_list_tag], align 16
  %arraydecay1 = bitcast [1 x %struct.__va_list_tag]* %p to i8*
  call void @llvm.va_start(i8* %arraydecay1)
  %call = call %union.tree_node* @make_node(i32 %code) #3
  %idxprom = sext i32 %code to i64
  %arrayidx = getelementptr inbounds [256 x i32]* @tree_code_length, i64 0, i64 %idxprom
  %0 = load i32* %arrayidx, align 4, !tbaa !14
  %1 = load i32* @lineno, align 4, !tbaa !14
  %complexity = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 1
  %2 = bitcast i8** %complexity to i32*
  store i32 %1, i32* %2, align 4, !tbaa !15
  %cmp13 = icmp sgt i32 %0, 0
  br i1 %cmp13, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %gp_offset_p = getelementptr inbounds [1 x %struct.__va_list_tag]* %p, i64 0, i64 0, i32 0
  %3 = getelementptr inbounds [1 x %struct.__va_list_tag]* %p, i64 0, i64 0, i32 3
  %operands = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 2
  %4 = bitcast i32* %operands to [1 x %union.tree_node*]*
  %overflow_arg_area_p = getelementptr inbounds [1 x %struct.__va_list_tag]* %p, i64 0, i64 0, i32 2
  br label %for.body

for.body:                                         ; preds = %vaarg.end, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %vaarg.end ]
  %gp_offset = load i32* %gp_offset_p, align 16
  %fits_in_gp = icmp ult i32 %gp_offset, 41
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem

vaarg.in_reg:                                     ; preds = %for.body
  %reg_save_area = load i8** %3, align 16
  %5 = sext i32 %gp_offset to i64
  %6 = getelementptr i8* %reg_save_area, i64 %5
  %7 = add i32 %gp_offset, 8
  store i32 %7, i32* %gp_offset_p, align 16
  br label %vaarg.end

vaarg.in_mem:                                     ; preds = %for.body
  %overflow_arg_area = load i8** %overflow_arg_area_p, align 8
  %overflow_arg_area.next = getelementptr i8* %overflow_arg_area, i64 8
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8
  br label %vaarg.end

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr.in = phi i8* [ %6, %vaarg.in_reg ], [ %overflow_arg_area, %vaarg.in_mem ]
  %vaarg.addr = bitcast i8* %vaarg.addr.in to %union.tree_node**
  %8 = load %union.tree_node** %vaarg.addr, align 8
  %arrayidx5 = getelementptr inbounds [1 x %union.tree_node*]* %4, i64 0, i64 %indvars.iv
  store %union.tree_node* %8, %union.tree_node** %arrayidx5, align 8, !tbaa !1
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %0
  br i1 %exitcond, label %for.end, label %for.body

for.end:                                          ; preds = %vaarg.end, %entry
  call void @llvm.va_end(i8* %arraydecay1)
  ret %union.tree_node* %call
}

; Function Attrs: nounwind uwtable
define %union.tree_node* @add_scope_stmt(i32 %begin_p, i32 %partial_p) #0 {
entry:
  %call = tail call %union.tree_node** @current_scope_stmt_stack() #3
  %0 = load %union.tree_node** %call, align 8, !tbaa !1
  %call1 = tail call %union.tree_node* (i32, ...)* @build_stmt(i32 166, %union.tree_node* null)
  %lang_flag_0 = getelementptr inbounds %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %lang_flag_0, align 8
  %bf.value = shl i32 %begin_p, 24
  %bf.shl = and i32 %bf.value, 16777216
  %bf.clear = and i32 %bf.load, -285212673
  %bf.value4 = shl i32 %partial_p, 28
  %bf.shl5 = and i32 %bf.value4, 268435456
  %bf.set = or i32 %bf.shl5, %bf.shl
  %bf.set7 = or i32 %bf.set, %bf.clear
  store i32 %bf.set7, i32* %lang_flag_0, align 8
  %tobool = icmp eq i32 %begin_p, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %call8 = tail call %union.tree_node* @tree_cons(%union.tree_node* %call1, %union.tree_node* null, %union.tree_node* %0) #3
  br label %if.end

if.else:                                          ; preds = %entry
  %value = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 2
  %1 = bitcast i32* %value to %union.tree_node**
  store %union.tree_node* %call1, %union.tree_node** %1, align 8, !tbaa !17
  %chain = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0
  %2 = load %union.tree_node** %chain, align 8, !tbaa !10
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %storemerge = phi %union.tree_node* [ %2, %if.else ], [ %call8, %if.then ]
  %top.0 = phi %union.tree_node* [ %0, %if.else ], [ %call8, %if.then ]
  store %union.tree_node* %storemerge, %union.tree_node** %call, align 8, !tbaa !1
  %call10 = tail call %union.tree_node* @add_stmt(%union.tree_node* %call1)
  ret %union.tree_node* %top.0
}

declare %union.tree_node** @current_scope_stmt_stack() #1

declare %union.tree_node* @tree_cons(%union.tree_node*, %union.tree_node*, %union.tree_node*) #1

; Function Attrs: nounwind uwtable
define void @finish_stmt_tree(%union.tree_node** nocapture %t) #0 {
entry:
  %0 = load %union.tree_node** %t, align 8, !tbaa !1
  %chain = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0
  %1 = load %union.tree_node** %chain, align 8, !tbaa !10
  store %union.tree_node* %1, %union.tree_node** %t, align 8, !tbaa !1
  %call = tail call %struct.stmt_tree_s* @current_stmt_tree() #3
  %x_last_stmt = getelementptr inbounds %struct.stmt_tree_s* %call, i64 0, i32 0
  store %union.tree_node* null, %union.tree_node** %x_last_stmt, align 8, !tbaa !5
  %2 = load %struct.function** @cfun, align 8, !tbaa !1
  %tobool = icmp ne %struct.function* %2, null
  %tobool1 = icmp ne %union.tree_node* %1, null
  %or.cond = and i1 %tobool, %tobool1
  br i1 %or.cond, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load i32* @lineno, align 4, !tbaa !14
  %complexity = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 1
  %4 = bitcast i8** %complexity to i32*
  store i32 %3, i32* %4, align 4, !tbaa !15
  %lang_flag_2 = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %lang_flag_2, align 8
  %bf.set = or i32 %bf.load, 67108864
  store i32 %bf.set, i32* %lang_flag_2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #3

declare %union.tree_node* @make_node(i32) #1

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #3

; Function Attrs: nounwind uwtable
define %union.tree_node* @expand_cond(%union.tree_node* readonly %t) #0 {
entry:
  %tobool = icmp eq %union.tree_node* %t, null
  br i1 %tobool, label %return, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %code = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 2
  br i1 %cmp, label %if.then, label %return

if.then:                                          ; preds = %land.lhs.true
  %purpose = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 1
  %0 = load i8** %purpose, align 8
  %1 = bitcast i8* %0 to %union.tree_node*
  tail call void @expand_stmt(%union.tree_node* %1)
  %value = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 2
  %2 = bitcast i32* %value to %union.tree_node**
  %3 = load %union.tree_node** %2, align 8, !tbaa !17
  br label %return

return:                                           ; preds = %land.lhs.true, %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %3, %if.then ], [ null, %entry ], [ %t, %land.lhs.true ]
  ret %union.tree_node* %retval.0
}

; Function Attrs: nounwind uwtable
define void @expand_stmt(%union.tree_node* %t) #0 {
entry:
  %duplicate.i = alloca %union.tree_node*, align 8
  %tobool163 = icmp eq %union.tree_node* %t, null
  %0 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8
  %cmp164 = icmp eq %union.tree_node* %0, %t
  %or.cond165 = or i1 %tobool163, %cmp164
  br i1 %or.cond165, label %while.end, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %entry
  %1 = bitcast %union.tree_node** %duplicate.i to i8*
  br label %while.body

while.body:                                       ; preds = %while.body.lr.ph, %sw.epilog
  %t.addr.0166 = phi %union.tree_node* [ %t, %while.body.lr.ph ], [ %73, %sw.epilog ]
  %call = call i32 @stmts_are_full_exprs_p() #3
  %lang_flag_2.i = getelementptr inbounds %union.tree_node* %t.addr.0166, i64 0, i32 0, i32 0, i32 2
  %bf.load.i141 = load i32* %lang_flag_2.i, align 8
  %bf.clear.i142 = and i32 %bf.load.i141, 67108864
  %tobool.i143 = icmp eq i32 %bf.clear.i142, 0
  br i1 %tobool.i143, label %if.then.i144, label %prep_stmt.exit

if.then.i144:                                     ; preds = %while.body
  %complexity.i = getelementptr inbounds %union.tree_node* %t.addr.0166, i64 0, i32 0, i32 1
  %2 = bitcast i8** %complexity.i to i32*
  %3 = load i32* %2, align 4, !tbaa !15
  store i32 %3, i32* @lineno, align 4, !tbaa !14
  %bf.load2.pre.i = load i32* %lang_flag_2.i, align 8
  br label %prep_stmt.exit

prep_stmt.exit:                                   ; preds = %while.body, %if.then.i144
  %bf.load2.i = phi i32 [ %bf.load.i141, %while.body ], [ %bf.load2.pre.i, %if.then.i144 ]
  %bf.lshr3.i = lshr i32 %bf.load2.i, 25
  %bf.clear4.i = and i32 %bf.lshr3.i, 1
  %call.i145 = call %struct.stmt_tree_s* @current_stmt_tree() #3
  %stmts_are_full_exprs_p.i = getelementptr inbounds %struct.stmt_tree_s* %call.i145, i64 0, i32 3
  store i32 %bf.clear4.i, i32* %stmts_are_full_exprs_p.i, align 4, !tbaa !19
  %bf.load = load i32* %lang_flag_2.i, align 8
  %bf.clear = and i32 %bf.load, 255
  switch i32 %bf.clear, label %sw.default [
    i32 167, label %sw.bb
    i32 159, label %sw.bb1
    i32 152, label %sw.bb2
    i32 154, label %sw.bb25
    i32 156, label %sw.bb26
    i32 157, label %sw.bb27
    i32 158, label %sw.bb28
    i32 155, label %sw.bb29
    i32 153, label %sw.bb30
    i32 160, label %sw.bb31
    i32 161, label %sw.bb32
    i32 162, label %sw.bb33
    i32 168, label %sw.bb34
    i32 164, label %sw.bb35
    i32 163, label %sw.bb39
    i32 165, label %sw.bb43
    i32 166, label %sw.bb63
    i32 171, label %sw.bb64
  ]

sw.bb:                                            ; preds = %prep_stmt.exit
  %operands = getelementptr inbounds %union.tree_node* %t.addr.0166, i64 0, i32 0, i32 2
  %arrayidx = bitcast i32* %operands to %union.tree_node**
  %4 = load %union.tree_node** %arrayidx, align 8, !tbaa !1
  %id = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 1
  %5 = getelementptr inbounds i8** %id, i64 1
  %6 = load i8** %5, align 8, !tbaa !20
  store i8* %6, i8** @input_filename, align 8, !tbaa !1
  br label %sw.epilog

sw.bb1:                                           ; preds = %prep_stmt.exit
  %operands.i134 = getelementptr inbounds %union.tree_node* %t.addr.0166, i64 0, i32 0, i32 2
  %arrayidx.i135 = bitcast i32* %operands.i134 to %union.tree_node**
  %7 = load %union.tree_node** %arrayidx.i135, align 8, !tbaa !1
  %8 = load i8** @input_filename, align 8, !tbaa !1
  %9 = load i32* @lineno, align 4, !tbaa !14
  %call.i136 = call %struct.rtx_def* @emit_line_note(i8* %8, i32 %9) #3
  %tobool.i137 = icmp eq %union.tree_node* %7, null
  br i1 %tobool.i137, label %if.then.i138, label %if.else.i139

if.then.i138:                                     ; preds = %sw.bb1
  call void @expand_null_return() #3
  br label %sw.epilog

if.else.i139:                                     ; preds = %sw.bb1
  call void @expand_start_target_temps() #3
  call void @expand_return(%union.tree_node* %7) #3
  call void @expand_end_target_temps() #3
  br label %sw.epilog

sw.bb2:                                           ; preds = %prep_stmt.exit
  %operands4 = getelementptr inbounds %union.tree_node* %t.addr.0166, i64 0, i32 0, i32 2
  %arrayidx5 = bitcast i32* %operands4 to %union.tree_node**
  %10 = load %union.tree_node** %arrayidx5, align 8, !tbaa !1
  %bf.lshr = lshr i32 %bf.load, 10
  %bf.clear8 = and i32 %bf.lshr, 1
  %chain = getelementptr inbounds %union.tree_node* %t.addr.0166, i64 0, i32 0, i32 0, i32 0
  %11 = load %union.tree_node** %chain, align 8, !tbaa !10
  %cmp10 = icmp eq %union.tree_node* %11, null
  br i1 %cmp10, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %sw.bb2
  %code14 = getelementptr inbounds %union.tree_node* %11, i64 0, i32 0, i32 0, i32 2
  %bf.load15 = load i32* %code14, align 8
  %bf.clear16 = and i32 %bf.load15, 255
  %cmp17 = icmp eq i32 %bf.clear16, 166
  br i1 %cmp17, label %land.rhs18, label %lor.end

land.rhs18:                                       ; preds = %lor.rhs
  %chain22 = getelementptr inbounds %union.tree_node* %11, i64 0, i32 0, i32 0, i32 0
  %12 = load %union.tree_node** %chain22, align 8, !tbaa !10
  %cmp23 = icmp eq %union.tree_node* %12, null
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %land.rhs18, %sw.bb2
  %13 = phi i1 [ true, %sw.bb2 ], [ false, %lor.rhs ], [ %cmp23, %land.rhs18 ]
  %lor.ext = zext i1 %13 to i32
  %cmp.i125 = icmp eq %union.tree_node* %10, null
  br i1 %cmp.i125, label %sw.epilog, label %if.then.i129

if.then.i129:                                     ; preds = %lor.end
  %14 = load i8** @input_filename, align 8, !tbaa !1
  %15 = load i32* @lineno, align 4, !tbaa !14
  %call.i126 = call %struct.rtx_def* @emit_line_note(i8* %14, i32 %15) #3
  %call1.i127 = call i32 @stmts_are_full_exprs_p() #3
  %tobool.i128 = icmp eq i32 %call1.i127, 0
  br i1 %tobool.i128, label %if.end.i132, label %if.then2.i130

if.then2.i130:                                    ; preds = %if.then.i129
  call void @expand_start_target_temps() #3
  br label %if.end.i132

if.end.i132:                                      ; preds = %if.then2.i130, %if.then.i129
  %16 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !1
  %cmp3.i131 = icmp eq %union.tree_node* %16, %10
  br i1 %cmp3.i131, label %if.end5.i, label %if.then4.i

if.then4.i:                                       ; preds = %if.end.i132
  call void @expand_expr_stmt_value(%union.tree_node* %10, i32 %bf.clear8, i32 %lor.ext) #3
  br label %if.end5.i

if.end5.i:                                        ; preds = %if.then4.i, %if.end.i132
  %call6.i = call i32 @stmts_are_full_exprs_p() #3
  %tobool7.i = icmp eq i32 %call6.i, 0
  br i1 %tobool7.i, label %sw.epilog, label %if.then8.i

if.then8.i:                                       ; preds = %if.end5.i
  call void @expand_end_target_temps() #3
  br label %sw.epilog

sw.bb25:                                          ; preds = %prep_stmt.exit
  call void @genrtl_decl_stmt(%union.tree_node* %t.addr.0166)
  br label %sw.epilog

sw.bb26:                                          ; preds = %prep_stmt.exit
  call void @genrtl_for_stmt(%union.tree_node* %t.addr.0166)
  br label %sw.epilog

sw.bb27:                                          ; preds = %prep_stmt.exit
  call void @genrtl_while_stmt(%union.tree_node* %t.addr.0166)
  br label %sw.epilog

sw.bb28:                                          ; preds = %prep_stmt.exit
  call void @genrtl_do_stmt(%union.tree_node* %t.addr.0166)
  br label %sw.epilog

sw.bb29:                                          ; preds = %prep_stmt.exit
  call void @genrtl_if_stmt(%union.tree_node* %t.addr.0166)
  br label %sw.epilog

sw.bb30:                                          ; preds = %prep_stmt.exit
  %operands.i147 = getelementptr inbounds %union.tree_node* %t.addr.0166, i64 0, i32 0, i32 2
  %arrayidx.i148 = bitcast i32* %operands.i147 to %union.tree_node**
  %17 = load %union.tree_node** %arrayidx.i148, align 8, !tbaa !1
  call void @expand_stmt(%union.tree_node* %17) #3
  br label %sw.epilog

sw.bb31:                                          ; preds = %prep_stmt.exit
  %18 = load i8** @input_filename, align 8, !tbaa !1
  %19 = load i32* @lineno, align 4, !tbaa !14
  %call.i120 = call %struct.rtx_def* @emit_line_note(i8* %18, i32 %19) #3
  %call1.i121 = call i32 @expand_exit_something() #3
  %tobool.i122 = icmp eq i32 %call1.i121, 0
  br i1 %tobool.i122, label %if.then.i123, label %sw.epilog

if.then.i123:                                     ; preds = %sw.bb31
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([42 x i8]* @.str1, i64 0, i64 0)) #3
  br label %sw.epilog

sw.bb32:                                          ; preds = %prep_stmt.exit
  %20 = load i8** @input_filename, align 8, !tbaa !1
  %21 = load i32* @lineno, align 4, !tbaa !14
  %call.i116 = call %struct.rtx_def* @emit_line_note(i8* %20, i32 %21) #3
  %call1.i = call i32 @expand_continue_loop(%struct.nesting* null) #3
  %tobool.i117 = icmp eq i32 %call1.i, 0
  br i1 %tobool.i117, label %if.then.i118, label %sw.epilog

if.then.i118:                                     ; preds = %sw.bb32
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([37 x i8]* @.str2, i64 0, i64 0)) #3
  br label %sw.epilog

sw.bb33:                                          ; preds = %prep_stmt.exit
  %22 = load i8** @input_filename, align 8, !tbaa !1
  %23 = load i32* @lineno, align 4, !tbaa !14
  %call.i.i = call %struct.rtx_def* @emit_line_note(i8* %22, i32 %23) #3
  call void @clear_last_expr() #3
  %operands.i149 = getelementptr inbounds %union.tree_node* %t.addr.0166, i64 0, i32 0, i32 2
  %arrayidx.i150 = bitcast i32* %operands.i149 to %union.tree_node**
  %24 = load %union.tree_node** %arrayidx.i150, align 8, !tbaa !1
  %tobool.i155 = icmp eq %union.tree_node* %24, null
  br i1 %tobool.i155, label %expand_cond.exit, label %land.lhs.true.i160

land.lhs.true.i160:                               ; preds = %sw.bb33
  %code.i156 = getelementptr inbounds %union.tree_node* %24, i64 0, i32 0, i32 0, i32 2
  %bf.load.i157 = load i32* %code.i156, align 8
  %bf.clear.i158 = and i32 %bf.load.i157, 255
  %cmp.i159 = icmp eq i32 %bf.clear.i158, 2
  br i1 %cmp.i159, label %if.then.i162, label %expand_cond.exit

if.then.i162:                                     ; preds = %land.lhs.true.i160
  %purpose.i161 = getelementptr inbounds %union.tree_node* %24, i64 0, i32 0, i32 1
  %25 = load i8** %purpose.i161, align 8
  %26 = bitcast i8* %25 to %union.tree_node*
  call void @expand_stmt(%union.tree_node* %26) #3
  %value.i = getelementptr inbounds %union.tree_node* %24, i64 0, i32 0, i32 2
  %27 = bitcast i32* %value.i to %union.tree_node**
  %28 = load %union.tree_node** %27, align 8, !tbaa !17
  br label %expand_cond.exit

expand_cond.exit:                                 ; preds = %sw.bb33, %land.lhs.true.i160, %if.then.i162
  %retval.0.i = phi %union.tree_node* [ %28, %if.then.i162 ], [ null, %sw.bb33 ], [ %24, %land.lhs.true.i160 ]
  %29 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !1
  %cmp.i152 = icmp eq %union.tree_node* %retval.0.i, %29
  %30 = load %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*]* @c_global_trees, i64 0, i64 18), align 8, !tbaa !1
  %.call.i = select i1 %cmp.i152, %union.tree_node* %30, %union.tree_node* %retval.0.i
  %31 = load i8** @input_filename, align 8, !tbaa !1
  %32 = load i32* @lineno, align 4, !tbaa !14
  %call1.i153 = call %struct.rtx_def* @emit_line_note(i8* %31, i32 %32) #3
  %type.i154 = getelementptr inbounds %union.tree_node* %.call.i, i64 0, i32 0, i32 0, i32 1
  %33 = load %union.tree_node** %type.i154, align 8, !tbaa !23
  call void @expand_start_case(i32 1, %union.tree_node* %.call.i, %union.tree_node* %33, i8* getelementptr inbounds ([17 x i8]* @.str3, i64 0, i64 0)) #3
  %arrayidx4.i = getelementptr inbounds i32* %operands.i149, i64 2
  %34 = bitcast i32* %arrayidx4.i to %union.tree_node**
  %35 = load %union.tree_node** %34, align 8, !tbaa !1
  call void @expand_stmt(%union.tree_node* %35) #3
  %arrayidx7.i = getelementptr inbounds i32* %operands.i149, i64 4
  %36 = bitcast i32* %arrayidx7.i to %union.tree_node**
  %37 = load %union.tree_node** %36, align 8, !tbaa !1
  call void @expand_end_case_type(%union.tree_node* %.call.i, %union.tree_node* %37) #3
  br label %sw.epilog

sw.bb34:                                          ; preds = %prep_stmt.exit
  call void @llvm.lifetime.start(i64 8, i8* %1) #3
  %call.i110 = call %union.tree_node* @last_cleanup_this_contour() #3
  %tobool.i111 = icmp eq %union.tree_node* %call.i110, null
  br i1 %tobool.i111, label %genrtl_case_label.exit, label %if.then.i112

if.then.i112:                                     ; preds = %sw.bb34
  %purpose.i = getelementptr inbounds %union.tree_node* %call.i110, i64 0, i32 0, i32 1
  %38 = load i8** %purpose.i, align 8
  %39 = bitcast i8* %38 to %union.tree_node*
  call void (%union.tree_node*, i8*, ...)* @warning_with_decl(%union.tree_node* %39, i8* getelementptr inbounds ([28 x i8]* @.str4, i64 0, i64 0)) #3
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([30 x i8]* @.str5, i64 0, i64 0)) #3
  %.b.i = load i1* @genrtl_case_label.explained, align 1
  br i1 %.b.i, label %genrtl_case_label.exit, label %if.then2.i113

if.then2.i113:                                    ; preds = %if.then.i112
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([88 x i8]* @.str6, i64 0, i64 0)) #3
  store i1 true, i1* @genrtl_case_label.explained, align 1
  br label %genrtl_case_label.exit

genrtl_case_label.exit:                           ; preds = %sw.bb34, %if.then.i112, %if.then2.i113
  %operands.i114 = getelementptr inbounds %union.tree_node* %t.addr.0166, i64 0, i32 0, i32 2
  %arrayidx.i115 = bitcast i32* %operands.i114 to %union.tree_node**
  %40 = load %union.tree_node** %arrayidx.i115, align 8, !tbaa !1
  %arrayidx6.i = getelementptr inbounds i32* %operands.i114, i64 2
  %41 = bitcast i32* %arrayidx6.i to %union.tree_node**
  %42 = load %union.tree_node** %41, align 8, !tbaa !1
  %arrayidx9.i = getelementptr inbounds i32* %operands.i114, i64 4
  %43 = bitcast i32* %arrayidx9.i to %union.tree_node**
  %44 = load %union.tree_node** %43, align 8, !tbaa !1
  %call10.i = call i32 @add_case_node(%union.tree_node* %40, %union.tree_node* %42, %union.tree_node* %44, %union.tree_node** %duplicate.i) #3
  call void @llvm.lifetime.end(i64 8, i8* %1) #3
  br label %sw.epilog

sw.bb35:                                          ; preds = %prep_stmt.exit
  %operands37 = getelementptr inbounds %union.tree_node* %t.addr.0166, i64 0, i32 0, i32 2
  %arrayidx38 = bitcast i32* %operands37 to %union.tree_node**
  %45 = load %union.tree_node** %arrayidx38, align 8, !tbaa !1
  call void @expand_label(%union.tree_node* %45) #3
  br label %sw.epilog

sw.bb39:                                          ; preds = %prep_stmt.exit
  %operands41 = getelementptr inbounds %union.tree_node* %t.addr.0166, i64 0, i32 0, i32 2
  %arrayidx42 = bitcast i32* %operands41 to %union.tree_node**
  %46 = load %union.tree_node** %arrayidx42, align 8, !tbaa !1
  %code.i = getelementptr inbounds %union.tree_node* %46, i64 0, i32 0, i32 0, i32 2
  %bf.load.i105 = load i32* %code.i, align 8
  %bf.clear.i106 = and i32 %bf.load.i105, 255
  switch i32 %bf.clear.i106, label %if.end10.i [
    i32 1, label %if.then.i107
    i32 31, label %if.then6.i
  ]

if.then.i107:                                     ; preds = %sw.bb39
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8]* @.str, i64 0, i64 0), i32 304, i8* getelementptr inbounds ([17 x i8]* @__FUNCTION__.genrtl_goto_stmt, i64 0, i64 0)) #5
  unreachable

if.then6.i:                                       ; preds = %sw.bb39
  %bf.set.i = or i32 %bf.load.i105, 65536
  store i32 %bf.set.i, i32* %code.i, align 8
  br label %if.end10.i

if.end10.i:                                       ; preds = %if.then6.i, %sw.bb39
  %47 = load i8** @input_filename, align 8, !tbaa !1
  %48 = load i32* @lineno, align 4, !tbaa !14
  %call.i108 = call %struct.rtx_def* @emit_line_note(i8* %47, i32 %48) #3
  %bf.load13.i = load i32* %code.i, align 8
  %bf.clear14.i = and i32 %bf.load13.i, 255
  %cmp15.i = icmp eq i32 %bf.clear14.i, 31
  br i1 %cmp15.i, label %if.then16.i, label %if.else.i109

if.then16.i:                                      ; preds = %if.end10.i
  %call17.i = call %struct.rtx_def* @label_rtx(%union.tree_node* %46) #3
  call void @expand_goto(%union.tree_node* %46) #3
  br label %sw.epilog

if.else.i109:                                     ; preds = %if.end10.i
  call void @expand_computed_goto(%union.tree_node* %46) #3
  br label %sw.epilog

sw.bb43:                                          ; preds = %prep_stmt.exit
  %operands45 = getelementptr inbounds %union.tree_node* %t.addr.0166, i64 0, i32 0, i32 2
  %arrayidx46 = bitcast i32* %operands45 to %union.tree_node**
  %49 = load %union.tree_node** %arrayidx46, align 8, !tbaa !1
  %arrayidx49 = getelementptr inbounds i32* %operands45, i64 2
  %50 = bitcast i32* %arrayidx49 to %union.tree_node**
  %51 = load %union.tree_node** %50, align 8, !tbaa !1
  %arrayidx52 = getelementptr inbounds i32* %operands45, i64 4
  %52 = bitcast i32* %arrayidx52 to %union.tree_node**
  %53 = load %union.tree_node** %52, align 8, !tbaa !1
  %arrayidx55 = getelementptr inbounds i32* %operands45, i64 6
  %54 = bitcast i32* %arrayidx55 to %union.tree_node**
  %55 = load %union.tree_node** %54, align 8, !tbaa !1
  %arrayidx58 = getelementptr inbounds i32* %operands45, i64 8
  %56 = bitcast i32* %arrayidx58 to %union.tree_node**
  %57 = load %union.tree_node** %56, align 8, !tbaa !1
  %bf.clear62 = and i32 %bf.load, 16777216
  %cmp.i99 = icmp eq %union.tree_node* %49, null
  br i1 %cmp.i99, label %if.end.i, label %land.lhs.true.i101

land.lhs.true.i101:                               ; preds = %sw.bb43
  %58 = load %union.tree_node*** @ridpointers, align 8, !tbaa !1
  %arrayidx.i100 = getelementptr inbounds %union.tree_node** %58, i64 9
  %59 = load %union.tree_node** %arrayidx.i100, align 8, !tbaa !1
  %cmp1.i = icmp eq %union.tree_node* %59, %49
  br i1 %cmp1.i, label %if.end.i, label %if.then.i102

if.then.i102:                                     ; preds = %land.lhs.true.i101
  %id.i = getelementptr inbounds %union.tree_node* %49, i64 0, i32 0, i32 1
  %60 = getelementptr inbounds i8** %id.i, i64 1
  %61 = load i8** %60, align 8, !tbaa !20
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([28 x i8]* @.str7, i64 0, i64 0), i8* %61) #3
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i102, %land.lhs.true.i101, %sw.bb43
  %cv_qualifier.addr.0.i = phi %union.tree_node* [ null, %if.then.i102 ], [ %49, %land.lhs.true.i101 ], [ null, %sw.bb43 ]
  %62 = load i8** @input_filename, align 8, !tbaa !1
  %63 = load i32* @lineno, align 4, !tbaa !14
  %call.i103 = call %struct.rtx_def* @emit_line_note(i8* %62, i32 %63) #3
  %tobool.i104 = icmp eq i32 %bf.clear62, 0
  br i1 %tobool.i104, label %if.else.i, label %if.then2.i

if.then2.i:                                       ; preds = %if.end.i
  call void @expand_asm(%union.tree_node* %51) #3
  br label %sw.epilog

if.else.i:                                        ; preds = %if.end.i
  %cmp3.i = icmp ne %union.tree_node* %cv_qualifier.addr.0.i, null
  %conv.i = zext i1 %cmp3.i to i32
  %64 = load i8** @input_filename, align 8, !tbaa !1
  %65 = load i32* @lineno, align 4, !tbaa !14
  call void @c_expand_asm_operands(%union.tree_node* %51, %union.tree_node* %53, %union.tree_node* %55, %union.tree_node* %57, i32 %conv.i, i8* %64, i32 %65) #3
  br label %sw.epilog

sw.bb63:                                          ; preds = %prep_stmt.exit
  call void @genrtl_scope_stmt(%union.tree_node* %t.addr.0166)
  br label %sw.epilog

sw.bb64:                                          ; preds = %prep_stmt.exit
  %operands.i = getelementptr inbounds %union.tree_node* %t.addr.0166, i64 0, i32 0, i32 2
  %arrayidx.i = bitcast i32* %operands.i to %union.tree_node**
  %66 = load %union.tree_node** %arrayidx.i, align 8, !tbaa !1
  %tobool.i = icmp eq %union.tree_node* %66, null
  br i1 %tobool.i, label %if.then.i, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %sw.bb64
  %size.i = getelementptr inbounds %union.tree_node* %66, i64 0, i32 0, i32 4
  %67 = load %union.tree_node** %size.i, align 8, !tbaa !24
  %tobool2.i = icmp eq %union.tree_node* %67, null
  br i1 %tobool2.i, label %sw.epilog, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %lor.lhs.false.i
  %type.i = getelementptr inbounds %union.tree_node* %66, i64 0, i32 0, i32 0, i32 1
  %68 = load %union.tree_node** %type.i, align 8, !tbaa !23
  %69 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !1
  %cmp.i = icmp eq %union.tree_node* %68, %69
  br i1 %cmp.i, label %sw.epilog, label %if.then.i

if.then.i:                                        ; preds = %land.lhs.true.i, %sw.bb64
  %arrayidx5.i = getelementptr inbounds i32* %operands.i, i64 2
  %70 = bitcast i32* %arrayidx5.i to %union.tree_node**
  %71 = load %union.tree_node** %70, align 8, !tbaa !1
  %bf.lshr.i = lshr i32 %bf.load, 18
  %bf.clear.i = and i32 %bf.lshr.i, 1
  %call.i = call i32 @expand_decl_cleanup_eh(%union.tree_node* %66, %union.tree_node* %71, i32 %bf.clear.i) #3
  br label %sw.epilog

sw.default:                                       ; preds = %prep_stmt.exit
  %72 = load void (%union.tree_node*)** @lang_expand_stmt, align 8, !tbaa !1
  %tobool65 = icmp eq void (%union.tree_node*)* %72, null
  br i1 %tobool65, label %if.else, label %if.then

if.then:                                          ; preds = %sw.default
  call void %72(%union.tree_node* %t.addr.0166) #3
  br label %sw.epilog

if.else:                                          ; preds = %sw.default
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8]* @.str, i64 0, i64 0), i32 858, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.expand_stmt, i64 0, i64 0)) #5
  unreachable

sw.epilog:                                        ; preds = %if.then.i, %land.lhs.true.i, %lor.lhs.false.i, %if.else.i, %if.then2.i, %if.else.i109, %if.then16.i, %if.then.i118, %sw.bb32, %if.then.i123, %sw.bb31, %if.then8.i, %if.end5.i, %lor.end, %if.else.i139, %if.then.i138, %if.then, %sw.bb63, %sw.bb35, %genrtl_case_label.exit, %expand_cond.exit, %sw.bb30, %sw.bb29, %sw.bb28, %sw.bb27, %sw.bb26, %sw.bb25, %sw.bb
  %call66 = call %struct.stmt_tree_s* @current_stmt_tree() #3
  %stmts_are_full_exprs_p = getelementptr inbounds %struct.stmt_tree_s* %call66, i64 0, i32 3
  store i32 %call, i32* %stmts_are_full_exprs_p, align 4, !tbaa !19
  %chain68 = getelementptr inbounds %union.tree_node* %t.addr.0166, i64 0, i32 0, i32 0, i32 0
  %73 = load %union.tree_node** %chain68, align 8, !tbaa !10
  %tobool = icmp eq %union.tree_node* %73, null
  %74 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8
  %cmp = icmp eq %union.tree_node* %73, %74
  %or.cond = or i1 %tobool, %cmp
  br i1 %or.cond, label %while.end, label %while.body

while.end:                                        ; preds = %sw.epilog, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define void @make_rtl_for_local_static(%union.tree_node* %decl) #0 {
entry:
  %asm_written_flag = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %asm_written_flag, align 8
  %bf.clear = and i32 %bf.load, 16384
  %tobool = icmp eq i32 %bf.clear, 0
  br i1 %tobool, label %if.end, label %return

if.end:                                           ; preds = %entry
  %assembler_name = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 14
  %0 = load %union.tree_node** %assembler_name, align 8, !tbaa !26
  %cmp = icmp eq %union.tree_node* %0, null
  br i1 %cmp, label %cond.false, label %cond.end

cond.false:                                       ; preds = %if.end
  %1 = load void (%union.tree_node*)** @lang_set_decl_assembler_name, align 8, !tbaa !1
  tail call void %1(%union.tree_node* %decl) #3
  %.pr = load %union.tree_node** %assembler_name, align 8, !tbaa !26
  br label %cond.end

cond.end:                                         ; preds = %if.end, %cond.false
  %2 = phi %union.tree_node* [ %0, %if.end ], [ %.pr, %cond.false ]
  %name = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 8
  %3 = load %union.tree_node** %name, align 8, !tbaa !27
  %cmp5 = icmp eq %union.tree_node* %2, %3
  br i1 %cmp5, label %if.end17, label %land.lhs.true

land.lhs.true:                                    ; preds = %cond.end
  %rtl = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 17
  %4 = load %struct.rtx_def** %rtl, align 8, !tbaa !28
  %cmp7 = icmp eq %struct.rtx_def* %4, null
  br i1 %cmp7, label %if.then8, label %if.end17

if.then8:                                         ; preds = %land.lhs.true
  %cmp11 = icmp eq %union.tree_node* %2, null
  br i1 %cmp11, label %cond.false13, label %cond.end14

cond.false13:                                     ; preds = %if.then8
  %5 = load void (%union.tree_node*)** @lang_set_decl_assembler_name, align 8, !tbaa !1
  tail call void %5(%union.tree_node* %decl) #3
  %.pre = load %union.tree_node** %assembler_name, align 8, !tbaa !26
  br label %cond.end14

cond.end14:                                       ; preds = %if.then8, %cond.false13
  %6 = phi %union.tree_node* [ %2, %if.then8 ], [ %.pre, %cond.false13 ]
  %id = getelementptr inbounds %union.tree_node* %6, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds i8** %id, i64 1
  %8 = load i8** %7, align 8, !tbaa !20
  br label %if.end17

if.end17:                                         ; preds = %land.lhs.true, %cond.end, %cond.end14
  %asmspec.0 = phi i8* [ null, %land.lhs.true ], [ %8, %cond.end14 ], [ null, %cond.end ]
  tail call void @rest_of_decl_compilation(%union.tree_node* %decl, i8* %asmspec.0, i32 0, i32 0) #3
  br label %return

return:                                           ; preds = %entry, %if.end17
  ret void
}

declare void @rest_of_decl_compilation(%union.tree_node*, i8*, i32, i32) #1

; Function Attrs: nounwind uwtable
define void @emit_local_var(%union.tree_node* %decl) #0 {
entry:
  %rtl = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 17
  %0 = load %struct.rtx_def** %rtl, align 8, !tbaa !28
  %cmp = icmp eq %struct.rtx_def* %0, null
  br i1 %cmp, label %if.then, label %if.end8

if.then:                                          ; preds = %entry
  %lang_flag_4 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 5
  %1 = bitcast i48* %lang_flag_4 to i64*
  %bf.load = load i64* %1, align 8
  %bf.cast = and i64 %bf.load, 2199023255552
  %tobool = icmp eq i64 %bf.cast, 0
  br i1 %tobool, label %if.else, label %if.then3

if.then3:                                         ; preds = %if.then
  %assembler_name = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 14
  %2 = load %union.tree_node** %assembler_name, align 8, !tbaa !26
  %cmp5 = icmp eq %union.tree_node* %2, null
  br i1 %cmp5, label %cond.false, label %cond.end

cond.false:                                       ; preds = %if.then3
  %3 = load void (%union.tree_node*)** @lang_set_decl_assembler_name, align 8, !tbaa !1
  tail call void %3(%union.tree_node* %decl) #3
  %.pre = load %union.tree_node** %assembler_name, align 8, !tbaa !26
  br label %cond.end

cond.end:                                         ; preds = %if.then3, %cond.false
  %4 = phi %union.tree_node* [ %2, %if.then3 ], [ %.pre, %cond.false ]
  %id = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 1
  %5 = getelementptr inbounds i8** %id, i64 1
  %6 = load i8** %5, align 8, !tbaa !20
  tail call void @rest_of_decl_compilation(%union.tree_node* %decl, i8* %6, i32 0, i32 0) #3
  br label %if.end8

if.else:                                          ; preds = %if.then
  tail call void @expand_decl(%union.tree_node* %decl) #3
  br label %if.end8

if.end8:                                          ; preds = %entry, %cond.end, %if.else
  %call = tail call i32 @stmts_are_full_exprs_p() #3
  %tobool9 = icmp eq i32 %call, 0
  br i1 %tobool9, label %if.end11, label %if.then10

if.then10:                                        ; preds = %if.end8
  tail call void @expand_start_target_temps() #3
  br label %if.end11

if.end11:                                         ; preds = %if.end8, %if.then10
  tail call void @expand_decl_init(%union.tree_node* %decl) #3
  %call12 = tail call i32 @stmts_are_full_exprs_p() #3
  %tobool13 = icmp eq i32 %call12, 0
  br i1 %tobool13, label %if.end15, label %if.then14

if.then14:                                        ; preds = %if.end11
  tail call void @expand_end_target_temps() #3
  br label %if.end15

if.end15:                                         ; preds = %if.end11, %if.then14
  ret void
}

declare void @expand_decl(%union.tree_node*) #1

declare void @expand_start_target_temps() #1

declare void @expand_decl_init(%union.tree_node*) #1

declare void @expand_end_target_temps() #1

; Function Attrs: nounwind uwtable
define void @genrtl_do_pushlevel() #0 {
entry:
  %0 = load i8** @input_filename, align 8, !tbaa !1
  %1 = load i32* @lineno, align 4, !tbaa !14
  %call = tail call %struct.rtx_def* @emit_line_note(i8* %0, i32 %1) #3
  tail call void @clear_last_expr() #3
  ret void
}

declare %struct.rtx_def* @emit_line_note(i8*, i32) #1

declare void @clear_last_expr() #1

; Function Attrs: nounwind uwtable
define void @genrtl_goto_stmt(%union.tree_node* %destination) #0 {
entry:
  %code = getelementptr inbounds %union.tree_node* %destination, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  switch i32 %bf.clear, label %if.end10 [
    i32 1, label %if.then
    i32 31, label %if.then6
  ]

if.then:                                          ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8]* @.str, i64 0, i64 0), i32 304, i8* getelementptr inbounds ([17 x i8]* @__FUNCTION__.genrtl_goto_stmt, i64 0, i64 0)) #5
  unreachable

if.then6:                                         ; preds = %entry
  %bf.set = or i32 %bf.load, 65536
  store i32 %bf.set, i32* %code, align 8
  br label %if.end10

if.end10:                                         ; preds = %entry, %if.then6
  %0 = load i8** @input_filename, align 8, !tbaa !1
  %1 = load i32* @lineno, align 4, !tbaa !14
  %call = tail call %struct.rtx_def* @emit_line_note(i8* %0, i32 %1) #3
  %bf.load13 = load i32* %code, align 8
  %bf.clear14 = and i32 %bf.load13, 255
  %cmp15 = icmp eq i32 %bf.clear14, 31
  br i1 %cmp15, label %if.then16, label %if.else

if.then16:                                        ; preds = %if.end10
  %call17 = tail call %struct.rtx_def* @label_rtx(%union.tree_node* %destination) #3
  tail call void @expand_goto(%union.tree_node* %destination) #3
  br label %if.end18

if.else:                                          ; preds = %if.end10
  tail call void @expand_computed_goto(%union.tree_node* %destination) #3
  br label %if.end18

if.end18:                                         ; preds = %if.else, %if.then16
  ret void
}

; Function Attrs: noreturn
declare void @fancy_abort(i8*, i32, i8*) #4

declare %struct.rtx_def* @label_rtx(%union.tree_node*) #1

declare void @expand_goto(%union.tree_node*) #1

declare void @expand_computed_goto(%union.tree_node*) #1

; Function Attrs: nounwind uwtable
define void @genrtl_expr_stmt(%union.tree_node* %expr) #0 {
entry:
  %cmp.i = icmp eq %union.tree_node* %expr, null
  br i1 %cmp.i, label %genrtl_expr_stmt_value.exit, label %if.then.i

if.then.i:                                        ; preds = %entry
  %0 = load i8** @input_filename, align 8, !tbaa !1
  %1 = load i32* @lineno, align 4, !tbaa !14
  %call.i = tail call %struct.rtx_def* @emit_line_note(i8* %0, i32 %1) #3
  %call1.i = tail call i32 @stmts_are_full_exprs_p() #3
  %tobool.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.i, label %if.end.i, label %if.then2.i

if.then2.i:                                       ; preds = %if.then.i
  tail call void @expand_start_target_temps() #3
  br label %if.end.i

if.end.i:                                         ; preds = %if.then2.i, %if.then.i
  %2 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !1
  %cmp3.i = icmp eq %union.tree_node* %2, %expr
  br i1 %cmp3.i, label %if.end5.i, label %if.then4.i

if.then4.i:                                       ; preds = %if.end.i
  tail call void @expand_expr_stmt_value(%union.tree_node* %expr, i32 -1, i32 1) #3
  br label %if.end5.i

if.end5.i:                                        ; preds = %if.then4.i, %if.end.i
  %call6.i = tail call i32 @stmts_are_full_exprs_p() #3
  %tobool7.i = icmp eq i32 %call6.i, 0
  br i1 %tobool7.i, label %genrtl_expr_stmt_value.exit, label %if.then8.i

if.then8.i:                                       ; preds = %if.end5.i
  tail call void @expand_end_target_temps() #3
  br label %genrtl_expr_stmt_value.exit

genrtl_expr_stmt_value.exit:                      ; preds = %entry, %if.end5.i, %if.then8.i
  ret void
}

; Function Attrs: nounwind uwtable
define void @genrtl_expr_stmt_value(%union.tree_node* %expr, i32 %want_value, i32 %maybe_last) #0 {
entry:
  %cmp = icmp eq %union.tree_node* %expr, null
  br i1 %cmp, label %if.end10, label %if.then

if.then:                                          ; preds = %entry
  %0 = load i8** @input_filename, align 8, !tbaa !1
  %1 = load i32* @lineno, align 4, !tbaa !14
  %call = tail call %struct.rtx_def* @emit_line_note(i8* %0, i32 %1) #3
  %call1 = tail call i32 @stmts_are_full_exprs_p() #3
  %tobool = icmp eq i32 %call1, 0
  br i1 %tobool, label %if.end, label %if.then2

if.then2:                                         ; preds = %if.then
  tail call void @expand_start_target_temps() #3
  br label %if.end

if.end:                                           ; preds = %if.then, %if.then2
  %2 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !1
  %cmp3 = icmp eq %union.tree_node* %2, %expr
  br i1 %cmp3, label %if.end5, label %if.then4

if.then4:                                         ; preds = %if.end
  tail call void @expand_expr_stmt_value(%union.tree_node* %expr, i32 %want_value, i32 %maybe_last) #3
  br label %if.end5

if.end5:                                          ; preds = %if.end, %if.then4
  %call6 = tail call i32 @stmts_are_full_exprs_p() #3
  %tobool7 = icmp eq i32 %call6, 0
  br i1 %tobool7, label %if.end10, label %if.then8

if.then8:                                         ; preds = %if.end5
  tail call void @expand_end_target_temps() #3
  br label %if.end10

if.end10:                                         ; preds = %if.end5, %entry, %if.then8
  ret void
}

declare void @expand_expr_stmt_value(%union.tree_node*, i32, i32) #1

; Function Attrs: nounwind uwtable
define void @genrtl_decl_stmt(%union.tree_node* %t) #0 {
entry:
  %0 = load i8** @input_filename, align 8, !tbaa !1
  %1 = load i32* @lineno, align 4, !tbaa !14
  %call = tail call %struct.rtx_def* @emit_line_note(i8* %0, i32 %1) #3
  %operands = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 2
  %arrayidx = bitcast i32* %operands to %union.tree_node**
  %2 = load %union.tree_node** %arrayidx, align 8, !tbaa !1
  %code = getelementptr inbounds %union.tree_node* %2, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %3 = and i32 %bf.load, 262399
  switch i32 %3, label %if.else29 [
    i32 34, label %land.lhs.true4
    i32 262178, label %if.then28
  ]

land.lhs.true4:                                   ; preds = %entry
  %external_flag = getelementptr inbounds %union.tree_node* %2, i64 0, i32 0, i32 5
  %4 = bitcast i48* %external_flag to i64*
  %bf.load6 = load i64* %4, align 8
  %bf.cast = and i64 %bf.load6, 256
  %tobool9 = icmp eq i64 %bf.cast, 0
  br i1 %tobool9, label %if.then, label %if.else29

if.then:                                          ; preds = %land.lhs.true4
  %type = getelementptr inbounds %union.tree_node* %2, i64 0, i32 0, i32 0, i32 1
  %5 = load %union.tree_node** %type, align 8, !tbaa !23
  %call11 = tail call i32 @anon_aggr_type_p(%union.tree_node* %5) #3
  %tobool12 = icmp eq i32 %call11, 0
  br i1 %tobool12, label %if.then13, label %if.else

if.then13:                                        ; preds = %if.then
  tail call void @emit_local_var(%union.tree_node* %2)
  br label %if.end48

if.else:                                          ; preds = %if.then
  %arguments = getelementptr inbounds %union.tree_node* %2, i64 0, i32 0, i32 10
  %6 = load %union.tree_node** %arguments, align 8, !tbaa !29
  tail call void @expand_anon_union_decl(%union.tree_node* %2, %union.tree_node* null, %union.tree_node* %6) #3
  br label %if.end48

if.then28:                                        ; preds = %entry
  %bf.clear.i = and i32 %bf.load, 16384
  %tobool.i = icmp eq i32 %bf.clear.i, 0
  br i1 %tobool.i, label %if.end.i, label %if.end48

if.end.i:                                         ; preds = %if.then28
  %assembler_name.i = getelementptr inbounds %union.tree_node* %2, i64 0, i32 0, i32 14
  %7 = load %union.tree_node** %assembler_name.i, align 8, !tbaa !26
  %cmp.i = icmp eq %union.tree_node* %7, null
  br i1 %cmp.i, label %cond.false.i, label %cond.end.i

cond.false.i:                                     ; preds = %if.end.i
  %8 = load void (%union.tree_node*)** @lang_set_decl_assembler_name, align 8, !tbaa !1
  tail call void %8(%union.tree_node* %2) #3
  %.pr.i = load %union.tree_node** %assembler_name.i, align 8, !tbaa !26
  br label %cond.end.i

cond.end.i:                                       ; preds = %cond.false.i, %if.end.i
  %9 = phi %union.tree_node* [ %7, %if.end.i ], [ %.pr.i, %cond.false.i ]
  %name.i = getelementptr inbounds %union.tree_node* %2, i64 0, i32 0, i32 8
  %10 = load %union.tree_node** %name.i, align 8, !tbaa !27
  %cmp5.i = icmp eq %union.tree_node* %9, %10
  br i1 %cmp5.i, label %if.end17.i, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %cond.end.i
  %rtl.i = getelementptr inbounds %union.tree_node* %2, i64 0, i32 0, i32 17
  %11 = load %struct.rtx_def** %rtl.i, align 8, !tbaa !28
  %cmp7.i = icmp eq %struct.rtx_def* %11, null
  br i1 %cmp7.i, label %if.then8.i, label %if.end17.i

if.then8.i:                                       ; preds = %land.lhs.true.i
  %cmp11.i = icmp eq %union.tree_node* %9, null
  br i1 %cmp11.i, label %cond.false13.i, label %cond.end14.i

cond.false13.i:                                   ; preds = %if.then8.i
  %12 = load void (%union.tree_node*)** @lang_set_decl_assembler_name, align 8, !tbaa !1
  tail call void %12(%union.tree_node* %2) #3
  %.pre.i = load %union.tree_node** %assembler_name.i, align 8, !tbaa !26
  br label %cond.end14.i

cond.end14.i:                                     ; preds = %cond.false13.i, %if.then8.i
  %13 = phi %union.tree_node* [ %9, %if.then8.i ], [ %.pre.i, %cond.false13.i ]
  %id.i = getelementptr inbounds %union.tree_node* %13, i64 0, i32 0, i32 1
  %14 = getelementptr inbounds i8** %id.i, i64 1
  %15 = load i8** %14, align 8, !tbaa !20
  br label %if.end17.i

if.end17.i:                                       ; preds = %cond.end14.i, %land.lhs.true.i, %cond.end.i
  %asmspec.0.i = phi i8* [ null, %land.lhs.true.i ], [ %15, %cond.end14.i ], [ null, %cond.end.i ]
  tail call void @rest_of_decl_compilation(%union.tree_node* %2, i8* %asmspec.0.i, i32 0, i32 0) #3
  br label %if.end48

if.else29:                                        ; preds = %entry, %land.lhs.true4
  %16 = and i32 %bf.load, 33554687
  %17 = icmp eq i32 %16, 33554463
  br i1 %17, label %if.then41, label %if.else42

if.then41:                                        ; preds = %if.else29
  tail call void @declare_nonlocal_label(%union.tree_node* %2) #3
  br label %if.end48

if.else42:                                        ; preds = %if.else29
  %18 = load void (%union.tree_node*)** @lang_expand_decl_stmt, align 8, !tbaa !1
  %tobool43 = icmp eq void (%union.tree_node*)* %18, null
  br i1 %tobool43, label %if.end48, label %if.then44

if.then44:                                        ; preds = %if.else42
  tail call void %18(%union.tree_node* %t) #3
  br label %if.end48

if.end48:                                         ; preds = %if.end17.i, %if.then28, %if.else42, %if.then44, %if.then41, %if.then13, %if.else
  ret void
}

declare i32 @anon_aggr_type_p(%union.tree_node*) #1

declare void @expand_anon_union_decl(%union.tree_node*, %union.tree_node*, %union.tree_node*) #1

declare void @declare_nonlocal_label(%union.tree_node*) #1

; Function Attrs: nounwind uwtable
define void @genrtl_if_stmt(%union.tree_node* nocapture readonly %t) #0 {
entry:
  %0 = load i8** @input_filename, align 8, !tbaa !1
  %1 = load i32* @lineno, align 4, !tbaa !14
  %call.i = tail call %struct.rtx_def* @emit_line_note(i8* %0, i32 %1) #3
  tail call void @clear_last_expr() #3
  %operands = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 2
  %arrayidx = bitcast i32* %operands to %union.tree_node**
  %2 = load %union.tree_node** %arrayidx, align 8, !tbaa !1
  %tobool.i = icmp eq %union.tree_node* %2, null
  br i1 %tobool.i, label %expand_cond.exit, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %entry
  %code.i = getelementptr inbounds %union.tree_node* %2, i64 0, i32 0, i32 0, i32 2
  %bf.load.i = load i32* %code.i, align 8
  %bf.clear.i = and i32 %bf.load.i, 255
  %cmp.i = icmp eq i32 %bf.clear.i, 2
  br i1 %cmp.i, label %if.then.i, label %expand_cond.exit

if.then.i:                                        ; preds = %land.lhs.true.i
  %purpose.i = getelementptr inbounds %union.tree_node* %2, i64 0, i32 0, i32 1
  %3 = load i8** %purpose.i, align 8
  %4 = bitcast i8* %3 to %union.tree_node*
  tail call void @expand_stmt(%union.tree_node* %4) #3
  %value.i = getelementptr inbounds %union.tree_node* %2, i64 0, i32 0, i32 2
  %5 = bitcast i32* %value.i to %union.tree_node**
  %6 = load %union.tree_node** %5, align 8, !tbaa !17
  br label %expand_cond.exit

expand_cond.exit:                                 ; preds = %entry, %land.lhs.true.i, %if.then.i
  %retval.0.i = phi %union.tree_node* [ %6, %if.then.i ], [ null, %entry ], [ %2, %land.lhs.true.i ]
  %7 = load i8** @input_filename, align 8, !tbaa !1
  %8 = load i32* @lineno, align 4, !tbaa !14
  %call1 = tail call %struct.rtx_def* @emit_line_note(i8* %7, i32 %8) #3
  tail call void @expand_start_cond(%union.tree_node* %retval.0.i, i32 0) #3
  %arrayidx4 = getelementptr inbounds i32* %operands, i64 2
  %9 = bitcast i32* %arrayidx4 to %union.tree_node**
  %10 = load %union.tree_node** %9, align 8, !tbaa !1
  %tobool = icmp eq %union.tree_node* %10, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %expand_cond.exit
  tail call void @expand_stmt(%union.tree_node* %10)
  br label %if.end

if.end:                                           ; preds = %expand_cond.exit, %if.then
  %arrayidx10 = getelementptr inbounds i32* %operands, i64 4
  %11 = bitcast i32* %arrayidx10 to %union.tree_node**
  %12 = load %union.tree_node** %11, align 8, !tbaa !1
  %tobool11 = icmp eq %union.tree_node* %12, null
  br i1 %tobool11, label %if.end16, label %if.then12

if.then12:                                        ; preds = %if.end
  tail call void @expand_start_else() #3
  %13 = load %union.tree_node** %11, align 8, !tbaa !1
  tail call void @expand_stmt(%union.tree_node* %13)
  br label %if.end16

if.end16:                                         ; preds = %if.end, %if.then12
  tail call void @expand_end_cond() #3
  ret void
}

declare void @expand_start_cond(%union.tree_node*, i32) #1

declare void @expand_start_else() #1

declare void @expand_end_cond() #1

; Function Attrs: nounwind uwtable
define void @genrtl_while_stmt(%union.tree_node* nocapture readonly %t) #0 {
entry:
  tail call void @emit_nop() #3
  %0 = load i8** @input_filename, align 8, !tbaa !1
  %1 = load i32* @lineno, align 4, !tbaa !14
  %call = tail call %struct.rtx_def* @emit_line_note(i8* %0, i32 %1) #3
  %call1 = tail call %struct.nesting* @expand_start_loop(i32 1) #3
  %2 = load i8** @input_filename, align 8, !tbaa !1
  %3 = load i32* @lineno, align 4, !tbaa !14
  %call.i = tail call %struct.rtx_def* @emit_line_note(i8* %2, i32 %3) #3
  tail call void @clear_last_expr() #3
  %operands = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 2
  %arrayidx = bitcast i32* %operands to %union.tree_node**
  %4 = load %union.tree_node** %arrayidx, align 8, !tbaa !1
  %tobool.i = icmp eq %union.tree_node* %4, null
  br i1 %tobool.i, label %expand_cond.exit, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %entry
  %code.i = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 0, i32 2
  %bf.load.i = load i32* %code.i, align 8
  %bf.clear.i = and i32 %bf.load.i, 255
  %cmp.i = icmp eq i32 %bf.clear.i, 2
  br i1 %cmp.i, label %if.then.i, label %expand_cond.exit

if.then.i:                                        ; preds = %land.lhs.true.i
  %purpose.i = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 1
  %5 = load i8** %purpose.i, align 8
  %6 = bitcast i8* %5 to %union.tree_node*
  tail call void @expand_stmt(%union.tree_node* %6) #3
  %value.i = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 2
  %7 = bitcast i32* %value.i to %union.tree_node**
  %8 = load %union.tree_node** %7, align 8, !tbaa !17
  br label %expand_cond.exit

expand_cond.exit:                                 ; preds = %entry, %land.lhs.true.i, %if.then.i
  %retval.0.i = phi %union.tree_node* [ %8, %if.then.i ], [ null, %entry ], [ %4, %land.lhs.true.i ]
  %9 = load i8** @input_filename, align 8, !tbaa !1
  %10 = load i32* @lineno, align 4, !tbaa !14
  %call3 = tail call %struct.rtx_def* @emit_line_note(i8* %9, i32 %10) #3
  %call4 = tail call i32 @expand_exit_loop_top_cond(%struct.nesting* null, %union.tree_node* %retval.0.i) #3
  %11 = load i8** @input_filename, align 8, !tbaa !1
  %12 = load i32* @lineno, align 4, !tbaa !14
  %call.i9 = tail call %struct.rtx_def* @emit_line_note(i8* %11, i32 %12) #3
  tail call void @clear_last_expr() #3
  %arrayidx7 = getelementptr inbounds i32* %operands, i64 2
  %13 = bitcast i32* %arrayidx7 to %union.tree_node**
  %14 = load %union.tree_node** %13, align 8, !tbaa !1
  tail call void @expand_stmt(%union.tree_node* %14)
  tail call void @expand_end_loop() #3
  ret void
}

declare void @emit_nop() #1

declare %struct.nesting* @expand_start_loop(i32) #1

declare i32 @expand_exit_loop_top_cond(%struct.nesting*, %union.tree_node*) #1

declare void @expand_end_loop() #1

; Function Attrs: nounwind uwtable
define void @genrtl_do_stmt(%union.tree_node* nocapture readonly %t) #0 {
entry:
  %operands = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 2
  %arrayidx = bitcast i32* %operands to %union.tree_node**
  %0 = load %union.tree_node** %arrayidx, align 8, !tbaa !1
  %call = tail call i32 @integer_zerop(%union.tree_node* %0) #3
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %call1 = tail call %struct.nesting* @expand_start_null_loop() #3
  %arrayidx4 = getelementptr inbounds i32* %operands, i64 2
  %1 = bitcast i32* %arrayidx4 to %union.tree_node**
  %2 = load %union.tree_node** %1, align 8, !tbaa !1
  tail call void @expand_stmt(%union.tree_node* %2)
  tail call void @expand_end_null_loop() #3
  br label %if.end

if.else:                                          ; preds = %entry
  tail call void @emit_nop() #3
  %3 = load i8** @input_filename, align 8, !tbaa !1
  %4 = load i32* @lineno, align 4, !tbaa !14
  %call5 = tail call %struct.rtx_def* @emit_line_note(i8* %3, i32 %4) #3
  %call6 = tail call %struct.nesting* @expand_start_loop_continue_elsewhere(i32 1) #3
  %arrayidx9 = getelementptr inbounds i32* %operands, i64 2
  %5 = bitcast i32* %arrayidx9 to %union.tree_node**
  %6 = load %union.tree_node** %5, align 8, !tbaa !1
  tail call void @expand_stmt(%union.tree_node* %6)
  tail call void @expand_loop_continue_here() #3
  %tobool.i = icmp eq %union.tree_node* %0, null
  br i1 %tobool.i, label %expand_cond.exit, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %if.else
  %code.i = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2
  %bf.load.i = load i32* %code.i, align 8
  %bf.clear.i = and i32 %bf.load.i, 255
  %cmp.i = icmp eq i32 %bf.clear.i, 2
  br i1 %cmp.i, label %if.then.i, label %expand_cond.exit

if.then.i:                                        ; preds = %land.lhs.true.i
  %purpose.i = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 1
  %7 = load i8** %purpose.i, align 8
  %8 = bitcast i8* %7 to %union.tree_node*
  tail call void @expand_stmt(%union.tree_node* %8) #3
  %value.i = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 2
  %9 = bitcast i32* %value.i to %union.tree_node**
  %10 = load %union.tree_node** %9, align 8, !tbaa !17
  br label %expand_cond.exit

expand_cond.exit:                                 ; preds = %if.else, %land.lhs.true.i, %if.then.i
  %retval.0.i = phi %union.tree_node* [ %10, %if.then.i ], [ null, %if.else ], [ %0, %land.lhs.true.i ]
  %11 = load i8** @input_filename, align 8, !tbaa !1
  %12 = load i32* @lineno, align 4, !tbaa !14
  %call11 = tail call %struct.rtx_def* @emit_line_note(i8* %11, i32 %12) #3
  %call12 = tail call i32 @expand_exit_loop_if_false(%struct.nesting* null, %union.tree_node* %retval.0.i) #3
  tail call void @expand_end_loop() #3
  br label %if.end

if.end:                                           ; preds = %expand_cond.exit, %if.then
  ret void
}

declare i32 @integer_zerop(%union.tree_node*) #1

declare %struct.nesting* @expand_start_null_loop() #1

declare void @expand_end_null_loop() #1

declare %struct.nesting* @expand_start_loop_continue_elsewhere(i32) #1

declare void @expand_loop_continue_here() #1

declare i32 @expand_exit_loop_if_false(%struct.nesting*, %union.tree_node*) #1

; Function Attrs: nounwind uwtable
define %union.tree_node* @build_return_stmt(%union.tree_node* %expr) #0 {
entry:
  %call = tail call %union.tree_node* (i32, ...)* @build_stmt(i32 159, %union.tree_node* %expr)
  ret %union.tree_node* %call
}

; Function Attrs: nounwind uwtable
define void @genrtl_return_stmt(%union.tree_node* nocapture readonly %stmt) #0 {
entry:
  %operands = getelementptr inbounds %union.tree_node* %stmt, i64 0, i32 0, i32 2
  %arrayidx = bitcast i32* %operands to %union.tree_node**
  %0 = load %union.tree_node** %arrayidx, align 8, !tbaa !1
  %1 = load i8** @input_filename, align 8, !tbaa !1
  %2 = load i32* @lineno, align 4, !tbaa !14
  %call = tail call %struct.rtx_def* @emit_line_note(i8* %1, i32 %2) #3
  %tobool = icmp eq %union.tree_node* %0, null
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  tail call void @expand_null_return() #3
  br label %if.end

if.else:                                          ; preds = %entry
  tail call void @expand_start_target_temps() #3
  tail call void @expand_return(%union.tree_node* %0) #3
  tail call void @expand_end_target_temps() #3
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void
}

declare void @expand_null_return() #1

declare void @expand_return(%union.tree_node*) #1

; Function Attrs: nounwind uwtable
define void @genrtl_for_stmt(%union.tree_node* nocapture readonly %t) #0 {
entry:
  %lang_flag_0 = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %lang_flag_0, align 8
  %bf.clear = and i32 %bf.load, 16777216
  %tobool = icmp eq i32 %bf.clear, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %0 = load i8** @input_filename, align 8, !tbaa !1
  %1 = load i32* @lineno, align 4, !tbaa !14
  %call.i = tail call %struct.rtx_def* @emit_line_note(i8* %0, i32 %1) #3
  tail call void @clear_last_expr() #3
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %operands = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 2
  %arrayidx = bitcast i32* %operands to %union.tree_node**
  %2 = load %union.tree_node** %arrayidx, align 8, !tbaa !1
  tail call void @expand_stmt(%union.tree_node* %2)
  tail call void @emit_nop() #3
  %3 = load i8** @input_filename, align 8, !tbaa !1
  %4 = load i32* @lineno, align 4, !tbaa !14
  %call = tail call %struct.rtx_def* @emit_line_note(i8* %3, i32 %4) #3
  %call1 = tail call %struct.nesting* @expand_start_loop_continue_elsewhere(i32 1) #3
  %5 = load i8** @input_filename, align 8, !tbaa !1
  %6 = load i32* @lineno, align 4, !tbaa !14
  %call.i30 = tail call %struct.rtx_def* @emit_line_note(i8* %5, i32 %6) #3
  tail call void @clear_last_expr() #3
  %arrayidx4 = getelementptr inbounds i32* %operands, i64 2
  %7 = bitcast i32* %arrayidx4 to %union.tree_node**
  %8 = load %union.tree_node** %7, align 8, !tbaa !1
  %tobool.i = icmp eq %union.tree_node* %8, null
  br i1 %tobool.i, label %expand_cond.exit, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %if.end
  %code.i = getelementptr inbounds %union.tree_node* %8, i64 0, i32 0, i32 0, i32 2
  %bf.load.i = load i32* %code.i, align 8
  %bf.clear.i = and i32 %bf.load.i, 255
  %cmp.i = icmp eq i32 %bf.clear.i, 2
  br i1 %cmp.i, label %if.then.i, label %expand_cond.exit

if.then.i:                                        ; preds = %land.lhs.true.i
  %purpose.i = getelementptr inbounds %union.tree_node* %8, i64 0, i32 0, i32 1
  %9 = load i8** %purpose.i, align 8
  %10 = bitcast i8* %9 to %union.tree_node*
  tail call void @expand_stmt(%union.tree_node* %10) #3
  %value.i = getelementptr inbounds %union.tree_node* %8, i64 0, i32 0, i32 2
  %11 = bitcast i32* %value.i to %union.tree_node**
  %12 = load %union.tree_node** %11, align 8, !tbaa !17
  br label %expand_cond.exit

expand_cond.exit:                                 ; preds = %if.end, %land.lhs.true.i, %if.then.i
  %retval.0.i = phi %union.tree_node* [ %12, %if.then.i ], [ null, %if.end ], [ %8, %land.lhs.true.i ]
  %13 = load i8** @input_filename, align 8, !tbaa !1
  %14 = load i32* @lineno, align 4, !tbaa !14
  %call6 = tail call %struct.rtx_def* @emit_line_note(i8* %13, i32 %14) #3
  %tobool7 = icmp eq %union.tree_node* %retval.0.i, null
  br i1 %tobool7, label %if.end10, label %if.then8

if.then8:                                         ; preds = %expand_cond.exit
  %call9 = tail call i32 @expand_exit_loop_top_cond(%struct.nesting* null, %union.tree_node* %retval.0.i) #3
  br label %if.end10

if.end10:                                         ; preds = %expand_cond.exit, %if.then8
  %15 = load i8** @input_filename, align 8, !tbaa !1
  %16 = load i32* @lineno, align 4, !tbaa !14
  %call.i31 = tail call %struct.rtx_def* @emit_line_note(i8* %15, i32 %16) #3
  tail call void @clear_last_expr() #3
  %arrayidx13 = getelementptr inbounds i32* %operands, i64 6
  %17 = bitcast i32* %arrayidx13 to %union.tree_node**
  %18 = load %union.tree_node** %17, align 8, !tbaa !1
  tail call void @expand_stmt(%union.tree_node* %18)
  store i8* %13, i8** @input_filename, align 8, !tbaa !1
  store i32 %14, i32* @lineno, align 4, !tbaa !14
  %call14 = tail call %struct.rtx_def* @emit_line_note(i8* %13, i32 %14) #3
  tail call void @expand_loop_continue_here() #3
  %arrayidx17 = getelementptr inbounds i32* %operands, i64 4
  %19 = bitcast i32* %arrayidx17 to %union.tree_node**
  %20 = load %union.tree_node** %19, align 8, !tbaa !1
  %tobool18 = icmp eq %union.tree_node* %20, null
  br i1 %tobool18, label %if.end23, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.end10
  %21 = load i8** @input_filename, align 8, !tbaa !1
  %22 = load i32* @lineno, align 4, !tbaa !14
  %call.i.i = tail call %struct.rtx_def* @emit_line_note(i8* %21, i32 %22) #3
  %call1.i.i = tail call i32 @stmts_are_full_exprs_p() #3
  %tobool.i.i = icmp eq i32 %call1.i.i, 0
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then2.i.i

if.then2.i.i:                                     ; preds = %if.then.i.i
  tail call void @expand_start_target_temps() #3
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then2.i.i, %if.then.i.i
  %23 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !1
  %cmp3.i.i = icmp eq %union.tree_node* %23, %20
  br i1 %cmp3.i.i, label %if.end5.i.i, label %if.then4.i.i

if.then4.i.i:                                     ; preds = %if.end.i.i
  tail call void @expand_expr_stmt_value(%union.tree_node* %20, i32 -1, i32 1) #3
  br label %if.end5.i.i

if.end5.i.i:                                      ; preds = %if.then4.i.i, %if.end.i.i
  %call6.i.i = tail call i32 @stmts_are_full_exprs_p() #3
  %tobool7.i.i = icmp eq i32 %call6.i.i, 0
  br i1 %tobool7.i.i, label %if.end23, label %if.then8.i.i

if.then8.i.i:                                     ; preds = %if.end5.i.i
  tail call void @expand_end_target_temps() #3
  br label %if.end23

if.end23:                                         ; preds = %if.then8.i.i, %if.end5.i.i, %if.end10
  tail call void @expand_end_loop() #3
  ret void
}

; Function Attrs: nounwind uwtable
define %union.tree_node* @build_break_stmt() #0 {
entry:
  %call = tail call %union.tree_node* (i32, ...)* @build_stmt(i32 160)
  ret %union.tree_node* %call
}

; Function Attrs: nounwind uwtable
define void @genrtl_break_stmt() #0 {
entry:
  %0 = load i8** @input_filename, align 8, !tbaa !1
  %1 = load i32* @lineno, align 4, !tbaa !14
  %call = tail call %struct.rtx_def* @emit_line_note(i8* %0, i32 %1) #3
  %call1 = tail call i32 @expand_exit_something() #3
  %tobool = icmp eq i32 %call1, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([42 x i8]* @.str1, i64 0, i64 0)) #3
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  ret void
}

declare i32 @expand_exit_something() #1

declare void @error(i8*, ...) #1

; Function Attrs: nounwind uwtable
define %union.tree_node* @build_continue_stmt() #0 {
entry:
  %call = tail call %union.tree_node* (i32, ...)* @build_stmt(i32 161)
  ret %union.tree_node* %call
}

; Function Attrs: nounwind uwtable
define void @genrtl_continue_stmt() #0 {
entry:
  %0 = load i8** @input_filename, align 8, !tbaa !1
  %1 = load i32* @lineno, align 4, !tbaa !14
  %call = tail call %struct.rtx_def* @emit_line_note(i8* %0, i32 %1) #3
  %call1 = tail call i32 @expand_continue_loop(%struct.nesting* null) #3
  %tobool = icmp eq i32 %call1, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([37 x i8]* @.str2, i64 0, i64 0)) #3
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  ret void
}

declare i32 @expand_continue_loop(%struct.nesting*) #1

; Function Attrs: nounwind uwtable
define void @genrtl_scope_stmt(%union.tree_node* nocapture readonly %t) #0 {
entry:
  %operands = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 2
  %arrayidx = bitcast i32* %operands to %union.tree_node**
  %0 = load %union.tree_node** %arrayidx, align 8, !tbaa !1
  %lang_flag_3 = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %lang_flag_3, align 8
  %bf.clear = and i32 %bf.load, 134217728
  %tobool = icmp eq i32 %bf.clear, 0
  br i1 %tobool, label %if.then, label %if.else23

if.then:                                          ; preds = %entry
  %bf.clear4 = and i32 %bf.load, 16777216
  %tobool5 = icmp eq i32 %bf.clear4, 0
  br i1 %tobool5, label %if.then16, label %if.then6

if.then6:                                         ; preds = %if.then
  %cmp = icmp eq %union.tree_node* %0, null
  %conv = zext i1 %cmp to i32
  %mul = shl nuw nsw i32 %conv, 1
  tail call void @expand_start_bindings_and_block(i32 %mul, %union.tree_node* %0) #3
  br label %if.end38

if.then16:                                        ; preds = %if.then
  %lnot = icmp ne %union.tree_node* %0, null
  %lnot.ext = zext i1 %lnot to i32
  tail call void @expand_end_bindings(%union.tree_node* null, i32 %lnot.ext, i32 0) #3
  br label %if.end38

if.else23:                                        ; preds = %entry
  %cond = icmp eq %union.tree_node* %0, null
  br i1 %cond, label %if.end72, label %if.end38.thread

if.end38.thread:                                  ; preds = %if.else23
  %magicptr = ptrtoint %union.tree_node* %0 to i64
  %bf.clear34 = lshr i32 %bf.load, 24
  %1 = and i32 %bf.clear34, 1
  %2 = xor i32 %1, -97
  %call = tail call %struct.rtx_def* @emit_note(i8* null, i32 %2) #3
  %3 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 3, i32 0
  store i64 %magicptr, i64* %3, align 8, !tbaa !1
  br label %land.lhs.true

if.end38:                                         ; preds = %if.then6, %if.then16
  %tobool39 = icmp eq %union.tree_node* %0, null
  br i1 %tobool39, label %if.end72, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end38.thread, %if.end38
  %bf.load42 = load i32* %lang_flag_3, align 8
  %bf.clear44 = and i32 %bf.load42, 16777216
  %tobool45 = icmp eq i32 %bf.clear44, 0
  br i1 %tobool45, label %if.then46, label %if.end72

if.then46:                                        ; preds = %land.lhs.true
  %vars = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 2
  %4 = bitcast i32* %vars to %union.tree_node**
  %fn.089 = load %union.tree_node** %4, align 8
  %tobool4890 = icmp eq %union.tree_node* %fn.089, null
  br i1 %tobool4890, label %if.end72, label %for.body

for.body:                                         ; preds = %if.then46, %for.inc
  %fn.091 = phi %union.tree_node* [ %fn.0, %for.inc ], [ %fn.089, %if.then46 ]
  %code = getelementptr inbounds %union.tree_node* %fn.091, i64 0, i32 0, i32 0, i32 2
  %bf.load50 = load i32* %code, align 8
  %bf.clear51 = and i32 %bf.load50, 255
  %cmp52 = icmp eq i32 %bf.clear51, 30
  br i1 %cmp52, label %land.lhs.true54, label %for.inc

land.lhs.true54:                                  ; preds = %for.body
  %context = getelementptr inbounds %union.tree_node* %fn.091, i64 0, i32 0, i32 9
  %5 = load %union.tree_node** %context, align 8, !tbaa !30
  %6 = load %union.tree_node** @current_function_decl, align 8, !tbaa !1
  %bf.clear61 = and i32 %bf.load50, 16384
  %notlhs = icmp ne %union.tree_node* %5, %6
  %notrhs = icmp ne i32 %bf.clear61, 0
  %or.cond.not = or i1 %notrhs, %notlhs
  %bf.clear67 = and i32 %bf.load50, 1024
  %tobool68 = icmp eq i32 %bf.clear67, 0
  %or.cond88 = or i1 %or.cond.not, %tobool68
  br i1 %or.cond88, label %for.inc, label %if.then69

if.then69:                                        ; preds = %land.lhs.true54
  tail call void @push_function_context() #3
  tail call void @output_inline_function(%union.tree_node* %fn.091) #3
  tail call void @pop_function_context() #3
  br label %for.inc

for.inc:                                          ; preds = %land.lhs.true54, %for.body, %if.then69
  %chain = getelementptr inbounds %union.tree_node* %fn.091, i64 0, i32 0, i32 0, i32 0
  %fn.0 = load %union.tree_node** %chain, align 8
  %tobool48 = icmp eq %union.tree_node* %fn.0, null
  br i1 %tobool48, label %if.end72, label %for.body

if.end72:                                         ; preds = %for.inc, %if.then46, %if.else23, %land.lhs.true, %if.end38
  ret void
}

declare void @expand_start_bindings_and_block(i32, %union.tree_node*) #1

declare void @expand_end_bindings(%union.tree_node*, i32, i32) #1

declare %struct.rtx_def* @emit_note(i8*, i32) #1

declare void @push_function_context() #1

declare void @output_inline_function(%union.tree_node*) #1

declare void @pop_function_context() #1

; Function Attrs: nounwind uwtable
define void @genrtl_switch_stmt(%union.tree_node* nocapture readonly %t) #0 {
entry:
  %0 = load i8** @input_filename, align 8, !tbaa !1
  %1 = load i32* @lineno, align 4, !tbaa !14
  %call.i = tail call %struct.rtx_def* @emit_line_note(i8* %0, i32 %1) #3
  tail call void @clear_last_expr() #3
  %operands = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 2
  %arrayidx = bitcast i32* %operands to %union.tree_node**
  %2 = load %union.tree_node** %arrayidx, align 8, !tbaa !1
  %tobool.i = icmp eq %union.tree_node* %2, null
  br i1 %tobool.i, label %expand_cond.exit, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %entry
  %code.i = getelementptr inbounds %union.tree_node* %2, i64 0, i32 0, i32 0, i32 2
  %bf.load.i = load i32* %code.i, align 8
  %bf.clear.i = and i32 %bf.load.i, 255
  %cmp.i = icmp eq i32 %bf.clear.i, 2
  br i1 %cmp.i, label %if.then.i, label %expand_cond.exit

if.then.i:                                        ; preds = %land.lhs.true.i
  %purpose.i = getelementptr inbounds %union.tree_node* %2, i64 0, i32 0, i32 1
  %3 = load i8** %purpose.i, align 8
  %4 = bitcast i8* %3 to %union.tree_node*
  tail call void @expand_stmt(%union.tree_node* %4) #3
  %value.i = getelementptr inbounds %union.tree_node* %2, i64 0, i32 0, i32 2
  %5 = bitcast i32* %value.i to %union.tree_node**
  %6 = load %union.tree_node** %5, align 8, !tbaa !17
  br label %expand_cond.exit

expand_cond.exit:                                 ; preds = %entry, %land.lhs.true.i, %if.then.i
  %retval.0.i = phi %union.tree_node* [ %6, %if.then.i ], [ null, %entry ], [ %2, %land.lhs.true.i ]
  %7 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !1
  %cmp = icmp eq %union.tree_node* %retval.0.i, %7
  %8 = load %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*]* @c_global_trees, i64 0, i64 18), align 8, !tbaa !1
  %.call = select i1 %cmp, %union.tree_node* %8, %union.tree_node* %retval.0.i
  %9 = load i8** @input_filename, align 8, !tbaa !1
  %10 = load i32* @lineno, align 4, !tbaa !14
  %call1 = tail call %struct.rtx_def* @emit_line_note(i8* %9, i32 %10) #3
  %type = getelementptr inbounds %union.tree_node* %.call, i64 0, i32 0, i32 0, i32 1
  %11 = load %union.tree_node** %type, align 8, !tbaa !23
  tail call void @expand_start_case(i32 1, %union.tree_node* %.call, %union.tree_node* %11, i8* getelementptr inbounds ([17 x i8]* @.str3, i64 0, i64 0)) #3
  %arrayidx4 = getelementptr inbounds i32* %operands, i64 2
  %12 = bitcast i32* %arrayidx4 to %union.tree_node**
  %13 = load %union.tree_node** %12, align 8, !tbaa !1
  tail call void @expand_stmt(%union.tree_node* %13)
  %arrayidx7 = getelementptr inbounds i32* %operands, i64 4
  %14 = bitcast i32* %arrayidx7 to %union.tree_node**
  %15 = load %union.tree_node** %14, align 8, !tbaa !1
  tail call void @expand_end_case_type(%union.tree_node* %.call, %union.tree_node* %15) #3
  ret void
}

declare void @expand_start_case(i32, %union.tree_node*, %union.tree_node*, i8*) #1

declare void @expand_end_case_type(%union.tree_node*, %union.tree_node*) #1

; Function Attrs: nounwind uwtable
define %union.tree_node* @build_case_label(%union.tree_node* %low_value, %union.tree_node* %high_value, %union.tree_node* %label_decl) #0 {
entry:
  %call = tail call %union.tree_node* (i32, ...)* @build_stmt(i32 168, %union.tree_node* %low_value, %union.tree_node* %high_value, %union.tree_node* %label_decl)
  ret %union.tree_node* %call
}

; Function Attrs: nounwind uwtable
define void @genrtl_case_label(%union.tree_node* nocapture readonly %case_label) #0 {
entry:
  %duplicate = alloca %union.tree_node*, align 8
  %call = call %union.tree_node* @last_cleanup_this_contour() #3
  %tobool = icmp eq %union.tree_node* %call, null
  br i1 %tobool, label %if.end3, label %if.then

if.then:                                          ; preds = %entry
  %purpose = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 1
  %0 = load i8** %purpose, align 8
  %1 = bitcast i8* %0 to %union.tree_node*
  call void (%union.tree_node*, i8*, ...)* @warning_with_decl(%union.tree_node* %1, i8* getelementptr inbounds ([28 x i8]* @.str4, i64 0, i64 0)) #3
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([30 x i8]* @.str5, i64 0, i64 0)) #3
  %.b = load i1* @genrtl_case_label.explained, align 1
  br i1 %.b, label %if.end3, label %if.then2

if.then2:                                         ; preds = %if.then
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([88 x i8]* @.str6, i64 0, i64 0)) #3
  store i1 true, i1* @genrtl_case_label.explained, align 1
  br label %if.end3

if.end3:                                          ; preds = %entry, %if.then, %if.then2
  %operands = getelementptr inbounds %union.tree_node* %case_label, i64 0, i32 0, i32 2
  %arrayidx = bitcast i32* %operands to %union.tree_node**
  %2 = load %union.tree_node** %arrayidx, align 8, !tbaa !1
  %arrayidx6 = getelementptr inbounds i32* %operands, i64 2
  %3 = bitcast i32* %arrayidx6 to %union.tree_node**
  %4 = load %union.tree_node** %3, align 8, !tbaa !1
  %arrayidx9 = getelementptr inbounds i32* %operands, i64 4
  %5 = bitcast i32* %arrayidx9 to %union.tree_node**
  %6 = load %union.tree_node** %5, align 8, !tbaa !1
  %call10 = call i32 @add_case_node(%union.tree_node* %2, %union.tree_node* %4, %union.tree_node* %6, %union.tree_node** %duplicate) #3
  ret void
}

declare %union.tree_node* @last_cleanup_this_contour() #1

declare void @warning_with_decl(%union.tree_node*, i8*, ...) #1

declare void @warning(i8*, ...) #1

declare i32 @add_case_node(%union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node**) #1

; Function Attrs: nounwind uwtable
define void @genrtl_compound_stmt(%union.tree_node* nocapture readonly %t) #0 {
entry:
  %operands = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 2
  %arrayidx = bitcast i32* %operands to %union.tree_node**
  %0 = load %union.tree_node** %arrayidx, align 8, !tbaa !1
  tail call void @expand_stmt(%union.tree_node* %0)
  ret void
}

; Function Attrs: nounwind uwtable
define void @genrtl_asm_stmt(%union.tree_node* readonly %cv_qualifier, %union.tree_node* %string, %union.tree_node* %output_operands, %union.tree_node* %input_operands, %union.tree_node* %clobbers, i32 %asm_input_p) #0 {
entry:
  %cmp = icmp eq %union.tree_node* %cv_qualifier, null
  br i1 %cmp, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %0 = load %union.tree_node*** @ridpointers, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds %union.tree_node** %0, i64 9
  %1 = load %union.tree_node** %arrayidx, align 8, !tbaa !1
  %cmp1 = icmp eq %union.tree_node* %1, %cv_qualifier
  br i1 %cmp1, label %if.end, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %id = getelementptr inbounds %union.tree_node* %cv_qualifier, i64 0, i32 0, i32 1
  %2 = getelementptr inbounds i8** %id, i64 1
  %3 = load i8** %2, align 8, !tbaa !20
  tail call void (i8*, ...)* @warning(i8* getelementptr inbounds ([28 x i8]* @.str7, i64 0, i64 0), i8* %3) #3
  br label %if.end

if.end:                                           ; preds = %land.lhs.true, %entry, %if.then
  %cv_qualifier.addr.0 = phi %union.tree_node* [ null, %if.then ], [ %cv_qualifier, %land.lhs.true ], [ null, %entry ]
  %4 = load i8** @input_filename, align 8, !tbaa !1
  %5 = load i32* @lineno, align 4, !tbaa !14
  %call = tail call %struct.rtx_def* @emit_line_note(i8* %4, i32 %5) #3
  %tobool = icmp eq i32 %asm_input_p, 0
  br i1 %tobool, label %if.else, label %if.then2

if.then2:                                         ; preds = %if.end
  tail call void @expand_asm(%union.tree_node* %string) #3
  br label %if.end4

if.else:                                          ; preds = %if.end
  %cmp3 = icmp ne %union.tree_node* %cv_qualifier.addr.0, null
  %conv = zext i1 %cmp3 to i32
  %6 = load i8** @input_filename, align 8, !tbaa !1
  %7 = load i32* @lineno, align 4, !tbaa !14
  tail call void @c_expand_asm_operands(%union.tree_node* %string, %union.tree_node* %output_operands, %union.tree_node* %input_operands, %union.tree_node* %clobbers, i32 %conv, i8* %6, i32 %7) #3
  br label %if.end4

if.end4:                                          ; preds = %if.else, %if.then2
  ret void
}

declare void @expand_asm(%union.tree_node*) #1

declare void @c_expand_asm_operands(%union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32, i8*, i32) #1

; Function Attrs: nounwind uwtable
define void @genrtl_decl_cleanup(%union.tree_node* nocapture readonly %t) #0 {
entry:
  %operands = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 2
  %arrayidx = bitcast i32* %operands to %union.tree_node**
  %0 = load %union.tree_node** %arrayidx, align 8, !tbaa !1
  %tobool = icmp eq %union.tree_node* %0, null
  br i1 %tobool, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %size = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 4
  %1 = load %union.tree_node** %size, align 8, !tbaa !24
  %tobool2 = icmp eq %union.tree_node* %1, null
  br i1 %tobool2, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %lor.lhs.false
  %type = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 1
  %2 = load %union.tree_node** %type, align 8, !tbaa !23
  %3 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !1
  %cmp = icmp eq %union.tree_node* %2, %3
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %land.lhs.true, %entry
  %arrayidx5 = getelementptr inbounds i32* %operands, i64 2
  %4 = bitcast i32* %arrayidx5 to %union.tree_node**
  %5 = load %union.tree_node** %4, align 8, !tbaa !1
  %static_flag = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %static_flag, align 8
  %bf.lshr = lshr i32 %bf.load, 18
  %bf.clear = and i32 %bf.lshr, 1
  %call = tail call i32 @expand_decl_cleanup_eh(%union.tree_node* %0, %union.tree_node* %5, i32 %bf.clear) #3
  br label %if.end

if.end:                                           ; preds = %land.lhs.true, %lor.lhs.false, %if.then
  ret void
}

declare i32 @expand_decl_cleanup_eh(%union.tree_node*, %union.tree_node*, i32) #1

; Function Attrs: nounwind uwtable
define void @prep_stmt(%union.tree_node* nocapture readonly %t) #0 {
entry:
  %lang_flag_2 = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %lang_flag_2, align 8
  %bf.clear = and i32 %bf.load, 67108864
  %tobool = icmp eq i32 %bf.clear, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %complexity = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 1
  %0 = bitcast i8** %complexity to i32*
  %1 = load i32* %0, align 4, !tbaa !15
  store i32 %1, i32* @lineno, align 4, !tbaa !14
  %bf.load2.pre = load i32* %lang_flag_2, align 8
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %bf.load2 = phi i32 [ %bf.load, %entry ], [ %bf.load2.pre, %if.then ]
  %bf.lshr3 = lshr i32 %bf.load2, 25
  %bf.clear4 = and i32 %bf.lshr3, 1
  %call = tail call %struct.stmt_tree_s* @current_stmt_tree() #3
  %stmts_are_full_exprs_p = getelementptr inbounds %struct.stmt_tree_s* %call, i64 0, i32 3
  store i32 %bf.clear4, i32* %stmts_are_full_exprs_p, align 4, !tbaa !19
  ret void
}

declare void @expand_label(%union.tree_node*) #1

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #3

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #3

attributes #0 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readonly "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { noreturn "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind }

!llvm.ident = !{!0}

!0 = metadata !{metadata !"clang version 3.5 (trunk)"}
!1 = metadata !{metadata !2, metadata !2, i64 0}
!2 = metadata !{metadata !"any pointer", metadata !3, i64 0}
!3 = metadata !{metadata !"omnipotent char", metadata !4, i64 0}
!4 = metadata !{metadata !"Simple C/C++ TBAA"}
!5 = metadata !{metadata !6, metadata !2, i64 0}
!6 = metadata !{metadata !"stmt_tree_s", metadata !2, i64 0, metadata !2, i64 8, metadata !2, i64 16, metadata !7, i64 24}
!7 = metadata !{metadata !"int", metadata !3, i64 0}
!8 = metadata !{metadata !6, metadata !2, i64 8}
!9 = metadata !{metadata !6, metadata !2, i64 16}
!10 = metadata !{metadata !11, metadata !2, i64 0}
!11 = metadata !{metadata !"tree_common", metadata !2, i64 0, metadata !2, i64 8, metadata !3, i64 16, metadata !7, i64 17, metadata !7, i64 17, metadata !7, i64 17, metadata !7, i64 17, metadata !7, i64 17, metadata !7, i64 17, metadata !7, i64 17, metadata !7, i64 17, metadata !7, i64 18, metadata !7, i64 18, metadata !7, i64 18, metadata !7, i64 18, metadata !7, i64 18, metadata !7, i64 18, metadata !7, i64 18, metadata !7, i64 18, metadata !7, i64 19, metadata !7, i64 19, metadata !7, i64 19, metadata !7, i64 19, metadata !7, i64 19, metadata !7, i64 19, metadata !7, i64 19, metadata !7, i64 19}
!12 = metadata !{metadata !13, metadata !13, i64 0}
!13 = metadata !{metadata !"long long", metadata !3, i64 0}
!14 = metadata !{metadata !7, metadata !7, i64 0}
!15 = metadata !{metadata !16, metadata !7, i64 24}
!16 = metadata !{metadata !"tree_exp", metadata !11, i64 0, metadata !7, i64 24, metadata !3, i64 32}
!17 = metadata !{metadata !18, metadata !2, i64 32}
!18 = metadata !{metadata !"tree_list", metadata !11, i64 0, metadata !2, i64 24, metadata !2, i64 32}
!19 = metadata !{metadata !6, metadata !7, i64 24}
!20 = metadata !{metadata !21, metadata !2, i64 32}
!21 = metadata !{metadata !"tree_identifier", metadata !11, i64 0, metadata !22, i64 24}
!22 = metadata !{metadata !"ht_identifier", metadata !7, i64 0, metadata !2, i64 8}
!23 = metadata !{metadata !11, metadata !2, i64 8}
!24 = metadata !{metadata !25, metadata !2, i64 40}
!25 = metadata !{metadata !"tree_decl", metadata !11, i64 0, metadata !2, i64 24, metadata !7, i64 32, metadata !7, i64 36, metadata !2, i64 40, metadata !3, i64 48, metadata !7, i64 49, metadata !7, i64 49, metadata !7, i64 49, metadata !7, i64 49, metadata !7, i64 49, metadata !7, i64 49, metadata !7, i64 49, metadata !7, i64 49, metadata !7, i64 50, metadata !7, i64 50, metadata !7, i64 50, metadata !7, i64 50, metadata !7, i64 50, metadata !7, i64 50, metadata !7, i64 50, metadata !7, i64 50, metadata !7, i64 51, metadata !7, i64 51, metadata !7, i64 51, metadata !7, i64 51, metadata !7, i64 51, metadata !3, i64 51, metadata !7, i64 51, metadata !7, i64 52, metadata !7, i64 52, metadata !7, i64 52, metadata !7, i64 52, metadata !7, i64 52, metadata !7, i64 52, metadata !7, i64 52, metadata !7, i64 53, metadata !7, i64 53, metadata !7, i64 53, metadata !7, i64 53, metadata !7, i64 53, metadata !3, i64 56, metadata !2, i64 64, metadata !2, i64 72, metadata !2, i64 80, metadata !2, i64 88, metadata !2, i64 96, metadata !2, i64 104, metadata !2, i64 112, metadata !2, i64 120, metadata !2, i64 128, metadata !2, i64 136, metadata !2, i64 144, metadata !2, i64 152, metadata !3, i64 160, metadata !2, i64 168, metadata !2, i64 176, metadata !2, i64 184, metadata !13, i64 192, metadata !2, i64 200}
!26 = metadata !{metadata !25, metadata !2, i64 120}
!27 = metadata !{metadata !25, metadata !2, i64 72}
!28 = metadata !{metadata !25, metadata !2, i64 144}
!29 = metadata !{metadata !25, metadata !2, i64 88}
!30 = metadata !{metadata !25, metadata !2, i64 80}
