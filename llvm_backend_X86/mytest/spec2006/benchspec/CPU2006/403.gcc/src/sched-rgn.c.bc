; ModuleID = 'sched-rgn.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type opaque
%struct.region = type { i32, i32 }
%struct.candidate = type { i8, i8, i32, %struct.bitlst, %struct.bitlst }
%struct.bitlst = type { i32*, i32 }
%struct.function_unit_desc = type { i8*, i32, i32, i32, i32, i32, i32 (%struct.rtx_def*)*, i32 (%struct.rtx_def*, %struct.rtx_def*)*, i32, i32 (%struct.rtx_def*)*, i32 (%struct.rtx_def*, %struct.rtx_def*)* }
%struct.rtx_def = type { i32, [1 x %union.rtunion_def] }
%union.rtunion_def = type { i64 }
%struct.varray_head_tag = type { i64, i64, i64, i8*, %union.varray_data_tag }
%union.varray_data_tag = type { [1 x %struct.const_equiv_data] }
%struct.const_equiv_data = type { %struct.rtx_def*, i32 }
%struct.haifa_insn_data = type { %struct.rtx_def*, %struct.rtx_def*, i32, i32, i32, i32, i32, i32, i16, i16, i16, i8 }
%struct.sched_info = type { void (%struct.ready_list*)*, i32 (%struct.rtx_def*)*, i32 ()*, i32 (%struct.rtx_def*)*, i32 (%struct.rtx_def*, %struct.rtx_def*)*, i8* (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, %struct.rtx_def*)*, void (%struct.rtx_def*, %struct.bitmap_head_def*)*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i8 }
%struct.ready_list = type opaque
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32 }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.haifa_edge = type { i32, i32, i32, i32 }
%struct.deps = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i8, i32, %struct.deps_reg*, %struct.bitmap_head_def }
%struct.deps_reg = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32, i32 }
%struct.simple_bitmap_def = type { i32, i32, i32, [1 x i64] }
%struct.basic_block_def = type { %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %union.tree_node*, %struct.edge_def*, %struct.edge_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, i8*, i32, i32, i64, i32, i32 }
%union.tree_node = type opaque
%struct.edge_def = type { %struct.edge_def*, %struct.edge_def*, %struct.basic_block_def*, %struct.basic_block_def*, %struct.rtx_def*, i8*, i32, i32, i64 }
%struct.function = type { %struct.eh_status*, %struct.stmt_status*, %struct.expr_status*, %struct.emit_status*, %struct.varasm_status*, i8*, %union.tree_node*, %struct.function*, i32, i32, i32, i32, %struct.rtx_def*, %struct.ix86_args, %struct.rtx_def*, %struct.rtx_def*, i8*, %struct.initial_value_struct*, i32, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i64, %union.tree_node*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, %struct.rtx_def**, %struct.temp_slot*, i32, i32, i32, %struct.var_refs_queue*, i32, i32, i8*, %union.tree_node*, %struct.rtx_def*, i32, i32, %struct.machine_function*, i32, i32, %struct.language_function*, %struct.rtx_def*, i24 }
%struct.eh_status = type opaque
%struct.stmt_status = type opaque
%struct.expr_status = type { i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def* }
%struct.emit_status = type { i32, i32, %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.sequence_stack*, i32, i32, i8*, i32, i8*, %union.tree_node**, %struct.rtx_def** }
%struct.sequence_stack = type { %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.sequence_stack* }
%struct.varasm_status = type opaque
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.initial_value_struct = type opaque
%struct.temp_slot = type opaque
%struct.var_refs_queue = type { %struct.rtx_def*, i32, i32, %struct.var_refs_queue* }
%struct.machine_function = type opaque
%struct.language_function = type opaque
%struct.edge_list = type { i32, i32, %struct.edge_def** }
%struct.rtvec_def = type { i32, [1 x %struct.rtx_def*] }

@sched_dump = external global %struct._IO_FILE*
@.str = private unnamed_addr constant [40 x i8] c"\0A;;   ------------ REGIONS ----------\0A\0A\00", align 1
@nr_regions = internal unnamed_addr global i32 0, align 4
@.str1 = private unnamed_addr constant [25 x i8] c";;\09rgn %d nr_blocks %d:\0A\00", align 1
@rgn_table = internal unnamed_addr global %struct.region* null, align 8
@.str2 = private unnamed_addr constant [14 x i8] c";;\09bb/block: \00", align 1
@current_blocks = internal unnamed_addr global i32 0, align 4
@rgn_bb_table = internal unnamed_addr global i32* null, align 8
@block_to_bb = internal unnamed_addr global i32* null, align 8
@.str3 = private unnamed_addr constant [12 x i8] c"sched-rgn.c\00", align 1
@__FUNCTION__.debug_regions = private unnamed_addr constant [14 x i8] c"debug_regions\00", align 1
@.str4 = private unnamed_addr constant [8 x i8] c" %d/%d \00", align 1
@.str5 = private unnamed_addr constant [3 x i8] c"\0A\0A\00", align 1
@candidate_table = internal unnamed_addr global %struct.candidate* null, align 8
@.str6 = private unnamed_addr constant [29 x i8] c"src b %d bb %d speculative \0A\00", align 1
@.str7 = private unnamed_addr constant [13 x i8] c"split path: \00", align 1
@.str8 = private unnamed_addr constant [5 x i8] c" %d \00", align 1
@.str10 = private unnamed_addr constant [14 x i8] c"update path: \00", align 1
@.str11 = private unnamed_addr constant [20 x i8] c" src %d equivalent\0A\00", align 1
@.str12 = private unnamed_addr constant [53 x i8] c"----------- candidate table: target: b=%d bb=%d ---\0A\00", align 1
@current_nr_blocks = internal unnamed_addr global i32 0, align 4
@.str13 = private unnamed_addr constant [57 x i8] c";;   --------------- forward dependences: ------------ \0A\00", align 1
@.str14 = private unnamed_addr constant [46 x i8] c"\0A;;   --- Region Dependences --- b %d bb %d \0A\00", align 1
@.str15 = private unnamed_addr constant [32 x i8] c";;   %7s%6s%6s%6s%6s%6s%11s%6s\0A\00", align 1
@.str16 = private unnamed_addr constant [5 x i8] c"insn\00", align 1
@.str17 = private unnamed_addr constant [5 x i8] c"code\00", align 1
@.str18 = private unnamed_addr constant [3 x i8] c"bb\00", align 1
@.str19 = private unnamed_addr constant [4 x i8] c"dep\00", align 1
@.str20 = private unnamed_addr constant [5 x i8] c"prio\00", align 1
@.str21 = private unnamed_addr constant [5 x i8] c"cost\00", align 1
@.str22 = private unnamed_addr constant [9 x i8] c"blockage\00", align 1
@.str23 = private unnamed_addr constant [6 x i8] c"units\00", align 1
@.str24 = private unnamed_addr constant [5 x i8] c"----\00", align 1
@.str25 = private unnamed_addr constant [3 x i8] c"--\00", align 1
@.str26 = private unnamed_addr constant [4 x i8] c"---\00", align 1
@.str27 = private unnamed_addr constant [9 x i8] c"--------\00", align 1
@.str28 = private unnamed_addr constant [6 x i8] c"-----\00", align 1
@rtx_class = external constant [153 x i8]
@.str29 = private unnamed_addr constant [10 x i8] c";;   %6d \00", align 1
@.str30 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@note_insn_name = external constant [22 x i8*]
@.str31 = private unnamed_addr constant [18 x i8] c"line %d, file %s\0A\00", align 1
@.str32 = private unnamed_addr constant [7 x i8] c" {%s}\0A\00", align 1
@rtx_name = external constant [153 x i8*]
@function_units = external constant [0 x %struct.function_unit_desc]
@.str33 = private unnamed_addr constant [39 x i8] c";;   %s%5d%6d%6d%6d%6d%6d  %3d -%3d   \00", align 1
@.str34 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str35 = private unnamed_addr constant [2 x i8] c" \00", align 1
@basic_block_for_insn = external global %struct.varray_head_tag*
@h_i_d = external global %struct.haifa_insn_data*
@.str36 = private unnamed_addr constant [4 x i8] c"\09: \00", align 1
@.str37 = private unnamed_addr constant [4 x i8] c"%d \00", align 1
@n_basic_blocks = external global i32
@nr_inter = internal unnamed_addr global i32 0, align 4
@nr_spec = internal unnamed_addr global i32 0, align 4
@current_sched_info = external global %struct.sched_info*
@reload_completed = external global i32
@write_symbols = external global i32
@sched_verbose = external global i32
@flag_schedule_interblock = external global i32
@.str38 = private unnamed_addr constant [56 x i8] c"\0A;; Procedure interblock/speculative motions == %d/%d \0A\00", align 1
@__FUNCTION__.schedule_insns = private unnamed_addr constant [15 x i8] c"schedule_insns\00", align 1
@containing_rgn = internal unnamed_addr global i32* null, align 8
@edge_table = internal unnamed_addr global %struct.haifa_edge* null, align 8
@in_edges = internal unnamed_addr global i32* null, align 8
@out_edges = internal unnamed_addr global i32* null, align 8
@bb_deps = internal unnamed_addr global %struct.deps* null, align 8
@prob = internal unnamed_addr global float* null, align 8
@dom = internal unnamed_addr global %struct.simple_bitmap_def** null, align 8
@rgn_nr_edges = internal unnamed_addr global i32 0, align 4
@nr_edges = internal unnamed_addr global i32 0, align 4
@edge_to_bit = internal unnamed_addr global i32* null, align 8
@rgn_edges = internal unnamed_addr global i32* null, align 8
@pot_split = internal unnamed_addr global %struct.simple_bitmap_def** null, align 8
@ancestor_edges = internal unnamed_addr global %struct.simple_bitmap_def** null, align 8
@target_bb = internal unnamed_addr global i32 0, align 4
@sched_n_insns = internal unnamed_addr global i32 0, align 4
@basic_block_info = external global %struct.varray_head_tag*
@bblst_table = internal unnamed_addr global i32* null, align 8
@bitlst_table = internal unnamed_addr global i32* null, align 8
@__FUNCTION__.schedule_region = private unnamed_addr constant [16 x i8] c"schedule_region\00", align 1
@.str39 = private unnamed_addr constant [27 x i8] c";;  bb_prob(%d, %d) = %3d\0A\00", align 1
@regclass_map = external constant [53 x i32]
@region_sched_info = internal global { void (%struct.ready_list*)*, i32 (%struct.rtx_def*)*, i32 ()*, i32 (%struct.rtx_def*)*, i32 (%struct.rtx_def*, %struct.rtx_def*)*, i8* (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, %struct.rtx_def*)*, void (%struct.rtx_def*, %struct.bitmap_head_def*)*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i8, [7 x i8] } { void (%struct.ready_list*)* @init_ready_list, i32 (%struct.rtx_def*)* @can_schedule_ready_p, i32 ()* @schedule_more_p, i32 (%struct.rtx_def*)* @new_ready, i32 (%struct.rtx_def*, %struct.rtx_def*)* @rgn_rank, i8* (%struct.rtx_def*, i32)* @rgn_print_insn, i32 (%struct.rtx_def*, %struct.rtx_def*)* @contributes_to_priority, void (%struct.rtx_def*, %struct.bitmap_head_def*)* @compute_jump_reg_dependencies, %struct.rtx_def* null, %struct.rtx_def* null, %struct.rtx_def* null, %struct.rtx_def* null, i8 0, [7 x i8] undef }, align 8
@rgn_print_insn.tmp = internal global [80 x i8] zeroinitializer, align 16
@.str40 = private unnamed_addr constant [11 x i8] c"b%3d: i%4d\00", align 1
@.str41 = private unnamed_addr constant [7 x i8] c"%d/b%d\00", align 1
@.str42 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@flag_schedule_speculative_load = external global i32
@flag_schedule_speculative_load_dangerous = external global i32
@rtx_format = external constant [153 x i8*]
@rtx_length = external constant [153 x i8]
@global_regs = external global [53 x i8]
@mode_class = external constant [59 x i32]
@target_flags = external global i32
@mode_size = external constant [59 x i8]
@last_was_jump = internal unnamed_addr global i1 false
@sched_target_n_insns = internal unnamed_addr global i32 0, align 4
@target_n_insns = internal unnamed_addr global i32 0, align 4
@bblst_last = internal unnamed_addr global i32 0, align 4
@bblst_size = internal unnamed_addr global i32 0, align 4
@bitlst_table_last = internal unnamed_addr global i32 0, align 4
@flag_schedule_speculative = external global i32
@__FUNCTION__.compute_trg_info = private unnamed_addr constant [17 x i8] c"compute_trg_info\00", align 1
@entry_exit_blocks = external global [2 x %struct.basic_block_def]
@cfun = external global %struct.function*

; Function Attrs: nounwind uwtable
define void @debug_regions() #0 {
entry:
  %0 = load %struct._IO_FILE** @sched_dump, align 8, !tbaa !1
  %1 = tail call i64 @fwrite(i8* getelementptr inbounds ([40 x i8]* @.str, i64 0, i64 0), i64 39, i64 1, %struct._IO_FILE* %0)
  %2 = load i32* @nr_regions, align 4, !tbaa !5
  %cmp37 = icmp sgt i32 %2, 0
  br i1 %cmp37, label %for.body, label %for.end23

for.body:                                         ; preds = %entry, %for.end
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.end ], [ 0, %entry ]
  %3 = load %struct._IO_FILE** @sched_dump, align 8, !tbaa !1
  %4 = load %struct.region** @rgn_table, align 8, !tbaa !1
  %rgn_nr_blocks = getelementptr inbounds %struct.region* %4, i64 %indvars.iv, i32 0
  %5 = load i32* %rgn_nr_blocks, align 4, !tbaa !7
  %6 = trunc i64 %indvars.iv to i32
  %call1 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([25 x i8]* @.str1, i64 0, i64 0), i32 %6, i32 %5) #4
  %7 = load %struct._IO_FILE** @sched_dump, align 8, !tbaa !1
  %8 = tail call i64 @fwrite(i8* getelementptr inbounds ([14 x i8]* @.str2, i64 0, i64 0), i64 13, i64 1, %struct._IO_FILE* %7)
  %9 = load %struct.region** @rgn_table, align 8, !tbaa !1
  %rgn_nr_blocks634 = getelementptr inbounds %struct.region* %9, i64 %indvars.iv, i32 0
  %10 = load i32* %rgn_nr_blocks634, align 4, !tbaa !7
  %cmp735 = icmp sgt i32 %10, 0
  br i1 %cmp735, label %for.body8, label %for.end

for.body8:                                        ; preds = %for.body, %if.end
  %11 = phi %struct.region* [ %18, %if.end ], [ %9, %for.body ]
  %bb.036 = phi i32 [ %inc, %if.end ], [ 0, %for.body ]
  %rgn_blocks = getelementptr inbounds %struct.region* %11, i64 %indvars.iv, i32 1
  %12 = load i32* %rgn_blocks, align 4, !tbaa !9
  store i32 %12, i32* @current_blocks, align 4, !tbaa !5
  %add = add nsw i32 %12, %bb.036
  %idxprom11 = sext i32 %add to i64
  %13 = load i32** @rgn_bb_table, align 8, !tbaa !1
  %arrayidx12 = getelementptr inbounds i32* %13, i64 %idxprom11
  %14 = load i32* %arrayidx12, align 4, !tbaa !5
  %idxprom13 = sext i32 %14 to i64
  %15 = load i32** @block_to_bb, align 8, !tbaa !1
  %arrayidx14 = getelementptr inbounds i32* %15, i64 %idxprom13
  %16 = load i32* %arrayidx14, align 4, !tbaa !5
  %cmp15 = icmp eq i32 %bb.036, %16
  br i1 %cmp15, label %if.end, label %if.then

if.then:                                          ; preds = %for.body8
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str3, i64 0, i64 0), i32 530, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.debug_regions, i64 0, i64 0)) #7
  unreachable

if.end:                                           ; preds = %for.body8
  %17 = load %struct._IO_FILE** @sched_dump, align 8, !tbaa !1
  %call19 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %17, i8* getelementptr inbounds ([8 x i8]* @.str4, i64 0, i64 0), i32 %bb.036, i32 %14) #4
  %inc = add nsw i32 %bb.036, 1
  %18 = load %struct.region** @rgn_table, align 8, !tbaa !1
  %rgn_nr_blocks6 = getelementptr inbounds %struct.region* %18, i64 %indvars.iv, i32 0
  %19 = load i32* %rgn_nr_blocks6, align 4, !tbaa !7
  %cmp7 = icmp slt i32 %inc, %19
  br i1 %cmp7, label %for.body8, label %for.end

for.end:                                          ; preds = %if.end, %for.body
  %20 = load %struct._IO_FILE** @sched_dump, align 8, !tbaa !1
  %21 = tail call i64 @fwrite(i8* getelementptr inbounds ([3 x i8]* @.str5, i64 0, i64 0), i64 2, i64 1, %struct._IO_FILE* %20)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %22 = load i32* @nr_regions, align 4, !tbaa !5
  %23 = trunc i64 %indvars.iv.next to i32
  %cmp = icmp slt i32 %23, %22
  br i1 %cmp, label %for.body, label %for.end23

for.end23:                                        ; preds = %for.end, %entry
  ret void
}

; Function Attrs: nounwind
declare i32 @fprintf(%struct._IO_FILE* nocapture, i8* nocapture readonly, ...) #1

; Function Attrs: noreturn
declare void @fancy_abort(i8*, i32, i8*) #2

; Function Attrs: nounwind uwtable
define void @debug_candidate(i32 %i) #0 {
entry:
  %idxprom = sext i32 %i to i64
  %0 = load %struct.candidate** @candidate_table, align 8, !tbaa !1
  %is_valid = getelementptr inbounds %struct.candidate* %0, i64 %idxprom, i32 0
  %1 = load i8* %is_valid, align 1, !tbaa !10
  %tobool = icmp eq i8 %1, 0
  br i1 %tobool, label %if.end40, label %if.end

if.end:                                           ; preds = %entry
  %is_speculative = getelementptr inbounds %struct.candidate* %0, i64 %idxprom, i32 1
  %2 = load i8* %is_speculative, align 1, !tbaa !13
  %tobool3 = icmp eq i8 %2, 0
  %3 = load %struct._IO_FILE** @sched_dump, align 8, !tbaa !1
  %4 = load i32* @current_blocks, align 4, !tbaa !5
  %add = add nsw i32 %4, %i
  %idxprom5 = sext i32 %add to i64
  %5 = load i32** @rgn_bb_table, align 8, !tbaa !1
  %arrayidx6 = getelementptr inbounds i32* %5, i64 %idxprom5
  %6 = load i32* %arrayidx6, align 4, !tbaa !5
  br i1 %tobool3, label %if.else, label %if.then4

if.then4:                                         ; preds = %if.end
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([29 x i8]* @.str6, i64 0, i64 0), i32 %6, i32 %i) #4
  %7 = load %struct._IO_FILE** @sched_dump, align 8, !tbaa !1
  %8 = tail call i64 @fwrite(i8* getelementptr inbounds ([13 x i8]* @.str7, i64 0, i64 0), i64 12, i64 1, %struct._IO_FILE* %7)
  %9 = load %struct.candidate** @candidate_table, align 8, !tbaa !1
  %nr_members59 = getelementptr inbounds %struct.candidate* %9, i64 %idxprom, i32 3, i32 1
  %10 = load i32* %nr_members59, align 4, !tbaa !14
  %cmp60 = icmp sgt i32 %10, 0
  br i1 %cmp60, label %for.body, label %for.end

for.body:                                         ; preds = %if.then4, %for.body
  %indvars.iv62 = phi i64 [ %indvars.iv.next63, %for.body ], [ 0, %if.then4 ]
  %11 = phi %struct.candidate* [ %15, %for.body ], [ %9, %if.then4 ]
  %first_member = getelementptr inbounds %struct.candidate* %11, i64 %idxprom, i32 3, i32 0
  %12 = load i32** %first_member, align 8, !tbaa !15
  %arrayidx14 = getelementptr inbounds i32* %12, i64 %indvars.iv62
  %13 = load i32* %arrayidx14, align 4, !tbaa !5
  %14 = load %struct._IO_FILE** @sched_dump, align 8, !tbaa !1
  %call15 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %14, i8* getelementptr inbounds ([5 x i8]* @.str8, i64 0, i64 0), i32 %13) #4
  %indvars.iv.next63 = add nuw nsw i64 %indvars.iv62, 1
  %15 = load %struct.candidate** @candidate_table, align 8, !tbaa !1
  %nr_members = getelementptr inbounds %struct.candidate* %15, i64 %idxprom, i32 3, i32 1
  %16 = load i32* %nr_members, align 4, !tbaa !14
  %17 = trunc i64 %indvars.iv.next63 to i32
  %cmp = icmp slt i32 %17, %16
  br i1 %cmp, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %if.then4
  %18 = load %struct._IO_FILE** @sched_dump, align 8, !tbaa !1
  %fputc = tail call i32 @fputc(i32 10, %struct._IO_FILE* %18)
  %19 = load %struct._IO_FILE** @sched_dump, align 8, !tbaa !1
  %20 = tail call i64 @fwrite(i8* getelementptr inbounds ([14 x i8]* @.str10, i64 0, i64 0), i64 13, i64 1, %struct._IO_FILE* %19)
  %21 = load %struct.candidate** @candidate_table, align 8, !tbaa !1
  %nr_members2156 = getelementptr inbounds %struct.candidate* %21, i64 %idxprom, i32 4, i32 1
  %22 = load i32* %nr_members2156, align 4, !tbaa !16
  %cmp2257 = icmp sgt i32 %22, 0
  br i1 %cmp2257, label %for.body23, label %for.end34

for.body23:                                       ; preds = %for.end, %for.body23
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body23 ], [ 0, %for.end ]
  %23 = phi %struct.candidate* [ %27, %for.body23 ], [ %21, %for.end ]
  %first_member29 = getelementptr inbounds %struct.candidate* %23, i64 %idxprom, i32 4, i32 0
  %24 = load i32** %first_member29, align 8, !tbaa !17
  %arrayidx30 = getelementptr inbounds i32* %24, i64 %indvars.iv
  %25 = load i32* %arrayidx30, align 4, !tbaa !5
  %26 = load %struct._IO_FILE** @sched_dump, align 8, !tbaa !1
  %call31 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %26, i8* getelementptr inbounds ([5 x i8]* @.str8, i64 0, i64 0), i32 %25) #4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %27 = load %struct.candidate** @candidate_table, align 8, !tbaa !1
  %nr_members21 = getelementptr inbounds %struct.candidate* %27, i64 %idxprom, i32 4, i32 1
  %28 = load i32* %nr_members21, align 4, !tbaa !16
  %29 = trunc i64 %indvars.iv.next to i32
  %cmp22 = icmp slt i32 %29, %28
  br i1 %cmp22, label %for.body23, label %for.end34

for.end34:                                        ; preds = %for.body23, %for.end
  %30 = load %struct._IO_FILE** @sched_dump, align 8, !tbaa !1
  %fputc55 = tail call i32 @fputc(i32 10, %struct._IO_FILE* %30)
  br label %if.end40

if.else:                                          ; preds = %if.end
  %call39 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([20 x i8]* @.str11, i64 0, i64 0), i32 %6) #4
  br label %if.end40

if.end40:                                         ; preds = %entry, %if.else, %for.end34
  ret void
}

; Function Attrs: nounwind uwtable
define void @debug_candidates(i32 %trg) #0 {
entry:
  %0 = load %struct._IO_FILE** @sched_dump, align 8, !tbaa !1
  %1 = load i32* @current_blocks, align 4, !tbaa !5
  %add = add nsw i32 %1, %trg
  %idxprom = sext i32 %add to i64
  %2 = load i32** @rgn_bb_table, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds i32* %2, i64 %idxprom
  %3 = load i32* %arrayidx, align 4, !tbaa !5
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([53 x i8]* @.str12, i64 0, i64 0), i32 %3, i32 %trg) #4
  %i.06 = add nsw i32 %trg, 1
  %4 = load i32* @current_nr_blocks, align 4, !tbaa !5
  %cmp7 = icmp slt i32 %i.06, %4
  br i1 %cmp7, label %for.body, label %for.end

for.body:                                         ; preds = %entry, %for.body
  %i.08 = phi i32 [ %i.0, %for.body ], [ %i.06, %entry ]
  tail call void @debug_candidate(i32 %i.08)
  %i.0 = add nsw i32 %i.08, 1
  %5 = load i32* @current_nr_blocks, align 4, !tbaa !5
  %cmp = icmp slt i32 %i.0, %5
  br i1 %cmp, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define void @debug_dependencies() #0 {
entry:
  %head = alloca %struct.rtx_def*, align 8
  %tail = alloca %struct.rtx_def*, align 8
  %0 = load %struct._IO_FILE** @sched_dump, align 8, !tbaa !1
  %1 = call i64 @fwrite(i8* getelementptr inbounds ([57 x i8]* @.str13, i64 0, i64 0), i64 56, i64 1, %struct._IO_FILE* %0)
  %2 = load i32* @current_nr_blocks, align 4, !tbaa !5
  %cmp152 = icmp sgt i32 %2, 0
  br i1 %cmp152, label %for.body, label %for.end110

for.body:                                         ; preds = %entry, %for.inc109
  %bb.0153 = phi i32 [ %inc, %for.inc109 ], [ 0, %entry ]
  %3 = load i32* @current_blocks, align 4, !tbaa !5
  %add = add nsw i32 %3, %bb.0153
  %idxprom = sext i32 %add to i64
  %4 = load i32** @rgn_bb_table, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds i32* %4, i64 %idxprom
  %5 = load i32* %arrayidx, align 4, !tbaa !5
  call void @get_block_head_tail(i32 %5, %struct.rtx_def** %head, %struct.rtx_def** %tail) #4
  %6 = load %struct.rtx_def** %tail, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1, i64 2
  %rtx = bitcast %union.rtunion_def* %arrayidx1 to %struct.rtx_def**
  %7 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %8 = load %struct._IO_FILE** @sched_dump, align 8, !tbaa !1
  %9 = load i32* @current_blocks, align 4, !tbaa !5
  %add2 = add nsw i32 %9, %bb.0153
  %idxprom3 = sext i32 %add2 to i64
  %10 = load i32** @rgn_bb_table, align 8, !tbaa !1
  %arrayidx4 = getelementptr inbounds i32* %10, i64 %idxprom3
  %11 = load i32* %arrayidx4, align 4, !tbaa !5
  %call5 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([46 x i8]* @.str14, i64 0, i64 0), i32 %11, i32 %bb.0153) #4
  %12 = load %struct._IO_FILE** @sched_dump, align 8, !tbaa !1
  %call6 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([32 x i8]* @.str15, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str16, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str17, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8]* @.str18, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8]* @.str19, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str20, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str21, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str22, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8]* @.str23, i64 0, i64 0)) #4
  %13 = load %struct._IO_FILE** @sched_dump, align 8, !tbaa !1
  %call7 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %13, i8* getelementptr inbounds ([32 x i8]* @.str15, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str24, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str24, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8]* @.str25, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8]* @.str26, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str24, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str24, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str27, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8]* @.str28, i64 0, i64 0)) #4
  %insn.0148 = load %struct.rtx_def** %head, align 8
  %cmp9149 = icmp eq %struct.rtx_def* %insn.0148, %7
  br i1 %cmp9149, label %for.inc109, label %for.body10

for.body10:                                       ; preds = %for.body, %for.inc104
  %insn.0150 = phi %struct.rtx_def* [ %insn.0, %for.inc104 ], [ %insn.0148, %for.body ]
  %14 = getelementptr inbounds %struct.rtx_def* %insn.0150, i64 0, i32 0
  %bf.load = load i32* %14, align 8
  %bf.clear = and i32 %bf.load, 65535
  %idxprom11140 = zext i32 %bf.clear to i64
  %arrayidx12 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom11140
  %15 = load i8* %arrayidx12, align 1, !tbaa !18
  %cmp13 = icmp eq i8 %15, 105
  br i1 %cmp13, label %if.end42, label %if.then

if.then:                                          ; preds = %for.body10
  %16 = load %struct._IO_FILE** @sched_dump, align 8, !tbaa !1
  %fld15 = getelementptr inbounds %struct.rtx_def* %insn.0150, i64 0, i32 1
  %rtint = bitcast [1 x %union.rtunion_def]* %fld15 to i32*
  %17 = load i32* %rtint, align 4, !tbaa !5
  %call17 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %16, i8* getelementptr inbounds ([10 x i8]* @.str29, i64 0, i64 0), i32 %17) #4
  %bf.load18 = load i32* %14, align 8
  %bf.clear19 = and i32 %bf.load18, 65535
  %cmp20 = icmp eq i32 %bf.clear19, 37
  br i1 %cmp20, label %if.then22, label %if.else35

if.then22:                                        ; preds = %if.then
  %arrayidx24 = getelementptr inbounds %struct.rtx_def* %insn.0150, i64 0, i32 1, i64 4
  %rtint25 = bitcast %union.rtunion_def* %arrayidx24 to i32*
  %18 = load i32* %rtint25, align 4, !tbaa !5
  %cmp26 = icmp slt i32 %18, 0
  %19 = load %struct._IO_FILE** @sched_dump, align 8, !tbaa !1
  br i1 %cmp26, label %if.then28, label %if.else

if.then28:                                        ; preds = %if.then22
  %sub = add nsw i32 %18, 100
  %idxprom29 = sext i32 %sub to i64
  %arrayidx30 = getelementptr inbounds [22 x i8*]* @note_insn_name, i64 0, i64 %idxprom29
  %20 = load i8** %arrayidx30, align 8, !tbaa !1
  %call31 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %19, i8* getelementptr inbounds ([4 x i8]* @.str30, i64 0, i64 0), i8* %20) #4
  br label %for.inc104

if.else:                                          ; preds = %if.then22
  %arrayidx33 = getelementptr inbounds %struct.rtx_def* %insn.0150, i64 0, i32 1, i64 3
  %rtstr = bitcast %union.rtunion_def* %arrayidx33 to i8**
  %21 = load i8** %rtstr, align 8, !tbaa !1
  %call34 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %19, i8* getelementptr inbounds ([18 x i8]* @.str31, i64 0, i64 0), i32 %18, i8* %21) #4
  br label %for.inc104

if.else35:                                        ; preds = %if.then
  %22 = load %struct._IO_FILE** @sched_dump, align 8, !tbaa !1
  %idxprom38141 = zext i32 %bf.clear19 to i64
  %arrayidx39 = getelementptr inbounds [153 x i8*]* @rtx_name, i64 0, i64 %idxprom38141
  %23 = load i8** %arrayidx39, align 8, !tbaa !1
  %call40 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %22, i8* getelementptr inbounds ([7 x i8]* @.str32, i64 0, i64 0), i8* %23) #4
  br label %for.inc104

if.end42:                                         ; preds = %for.body10
  %call43 = call i32 @insn_unit(%struct.rtx_def* %insn.0150) #4
  %cmp44 = icmp slt i32 %call43, 0
  br i1 %cmp44, label %cond.end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end42
  %idxprom46 = sext i32 %call43 to i64
  %blockage_range_function = getelementptr inbounds [0 x %struct.function_unit_desc]* @function_units, i64 0, i64 %idxprom46, i32 9
  %24 = load i32 (%struct.rtx_def*)** %blockage_range_function, align 8, !tbaa !19
  %cmp48 = icmp eq i32 (%struct.rtx_def*)* %24, null
  br i1 %cmp48, label %cond.end, label %cond.false

cond.false:                                       ; preds = %lor.lhs.false
  %call53 = call i32 %24(%struct.rtx_def* %insn.0150) #4
  br label %cond.end

cond.end:                                         ; preds = %if.end42, %lor.lhs.false, %cond.false
  %cond = phi i32 [ %call53, %cond.false ], [ 0, %lor.lhs.false ], [ 0, %if.end42 ]
  %25 = load %struct._IO_FILE** @sched_dump, align 8, !tbaa !1
  %bf.load54 = load i32* %14, align 8
  %bf.clear55 = and i32 %bf.load54, 268435456
  %tobool = icmp ne i32 %bf.clear55, 0
  %cond56 = select i1 %tobool, i8* getelementptr inbounds ([2 x i8]* @.str34, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8]* @.str35, i64 0, i64 0)
  %fld57 = getelementptr inbounds %struct.rtx_def* %insn.0150, i64 0, i32 1
  %rtint59 = bitcast [1 x %union.rtunion_def]* %fld57 to i32*
  %26 = load i32* %rtint59, align 4, !tbaa !5
  %arrayidx61 = getelementptr inbounds %struct.rtx_def* %insn.0150, i64 0, i32 1, i64 4
  %rtint62 = bitcast %union.rtunion_def* %arrayidx61 to i32*
  %27 = load i32* %rtint62, align 4, !tbaa !5
  %idxprom66 = sext i32 %26 to i64
  %28 = load %struct.varray_head_tag** @basic_block_for_insn, align 8, !tbaa !1
  %data = getelementptr inbounds %struct.varray_head_tag* %28, i64 0, i32 4
  %bb67 = bitcast %union.varray_data_tag* %data to [1 x %struct.basic_block_def*]*
  %arrayidx68 = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb67, i64 0, i64 %idxprom66
  %29 = load %struct.basic_block_def** %arrayidx68, align 8, !tbaa !1
  %index = getelementptr inbounds %struct.basic_block_def* %29, i64 0, i32 11
  %30 = load i32* %index, align 4, !tbaa !21
  %idxprom70 = sext i32 %30 to i64
  %31 = load i32** @block_to_bb, align 8, !tbaa !1
  %arrayidx71 = getelementptr inbounds i32* %31, i64 %idxprom70
  %32 = load i32* %arrayidx71, align 4, !tbaa !5
  %33 = load %struct.haifa_insn_data** @h_i_d, align 8, !tbaa !1
  %dep_count = getelementptr inbounds %struct.haifa_insn_data* %33, i64 %idxprom66, i32 4
  %34 = load i32* %dep_count, align 4, !tbaa !24
  %priority = getelementptr inbounds %struct.haifa_insn_data* %33, i64 %idxprom66, i32 3
  %35 = load i32* %priority, align 4, !tbaa !27
  %call82 = call i32 @insn_cost(%struct.rtx_def* %insn.0150, %struct.rtx_def* null, %struct.rtx_def* null) #4
  %shr = ashr i32 %cond, 16
  %and = and i32 %cond, 65535
  %call83 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %25, i8* getelementptr inbounds ([39 x i8]* @.str33, i64 0, i64 0), i8* %cond56, i32 %26, i32 %27, i32 %32, i32 %34, i32 %35, i32 %call82, i32 %shr, i32 %and) #4
  call void @insn_print_units(%struct.rtx_def* %insn.0150) #4
  %36 = load %struct._IO_FILE** @sched_dump, align 8, !tbaa !1
  %37 = call i64 @fwrite(i8* getelementptr inbounds ([4 x i8]* @.str36, i64 0, i64 0), i64 3, i64 1, %struct._IO_FILE* %36)
  %38 = load i32* %rtint59, align 4, !tbaa !5
  %idxprom88 = sext i32 %38 to i64
  %39 = load %struct.haifa_insn_data** @h_i_d, align 8, !tbaa !1
  %depend = getelementptr inbounds %struct.haifa_insn_data* %39, i64 %idxprom88, i32 0
  %link.0145 = load %struct.rtx_def** %depend, align 8
  %tobool91146 = icmp eq %struct.rtx_def* %link.0145, null
  %40 = load %struct._IO_FILE** @sched_dump, align 8, !tbaa !1
  br i1 %tobool91146, label %for.end, label %for.body92

for.body92:                                       ; preds = %cond.end, %for.body92
  %41 = phi %struct._IO_FILE* [ %44, %for.body92 ], [ %40, %cond.end ]
  %link.0147 = phi %struct.rtx_def* [ %link.0, %for.body92 ], [ %link.0145, %cond.end ]
  %fld93 = getelementptr inbounds %struct.rtx_def* %link.0147, i64 0, i32 1
  %rtx95 = bitcast [1 x %union.rtunion_def]* %fld93 to %struct.rtx_def**
  %42 = load %struct.rtx_def** %rtx95, align 8, !tbaa !1
  %arrayidx97 = getelementptr inbounds %struct.rtx_def* %42, i64 0, i32 1, i64 0
  %rtint98 = bitcast %union.rtunion_def* %arrayidx97 to i32*
  %43 = load i32* %rtint98, align 4, !tbaa !5
  %call99 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %41, i8* getelementptr inbounds ([4 x i8]* @.str37, i64 0, i64 0), i32 %43) #4
  %arrayidx101 = getelementptr inbounds %struct.rtx_def* %link.0147, i64 0, i32 1, i64 1
  %rtx102 = bitcast %union.rtunion_def* %arrayidx101 to %struct.rtx_def**
  %link.0 = load %struct.rtx_def** %rtx102, align 8
  %tobool91 = icmp eq %struct.rtx_def* %link.0, null
  %44 = load %struct._IO_FILE** @sched_dump, align 8, !tbaa !1
  br i1 %tobool91, label %for.end, label %for.body92

for.end:                                          ; preds = %for.body92, %cond.end
  %.lcssa = phi %struct._IO_FILE* [ %40, %cond.end ], [ %44, %for.body92 ]
  %fputc144 = call i32 @fputc(i32 10, %struct._IO_FILE* %.lcssa)
  br label %for.inc104

for.inc104:                                       ; preds = %if.else35, %if.else, %if.then28, %for.end
  %arrayidx106 = getelementptr inbounds %struct.rtx_def* %insn.0150, i64 0, i32 1, i64 2
  %rtx107 = bitcast %union.rtunion_def* %arrayidx106 to %struct.rtx_def**
  %insn.0 = load %struct.rtx_def** %rtx107, align 8
  %cmp9 = icmp eq %struct.rtx_def* %insn.0, %7
  br i1 %cmp9, label %for.inc109, label %for.body10

for.inc109:                                       ; preds = %for.inc104, %for.body
  %inc = add nsw i32 %bb.0153, 1
  %45 = load i32* @current_nr_blocks, align 4, !tbaa !5
  %cmp = icmp slt i32 %inc, %45
  br i1 %cmp, label %for.body, label %for.end110

for.end110:                                       ; preds = %for.inc109, %entry
  %46 = load %struct._IO_FILE** @sched_dump, align 8, !tbaa !1
  %fputc = call i32 @fputc(i32 10, %struct._IO_FILE* %46)
  ret void
}

declare void @get_block_head_tail(i32, %struct.rtx_def**, %struct.rtx_def**) #3

declare i32 @insn_unit(%struct.rtx_def*) #3

declare i32 @insn_cost(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #3

declare void @insn_print_units(%struct.rtx_def*) #3

; Function Attrs: nounwind uwtable
define void @schedule_insns(%struct._IO_FILE* %dump_file) #0 {
entry:
  %ret.i.i.i.i = alloca i8, align 1
  %head.i.i88 = alloca %struct.rtx_def*, align 8
  %tail.i.i = alloca %struct.rtx_def*, align 8
  %tmp_deps.i.i = alloca %struct.deps, align 8
  %head.i = alloca %struct.rtx_def*, align 8
  %tail.i = alloca %struct.rtx_def*, align 8
  %head23.i = alloca %struct.rtx_def*, align 8
  %tail24.i = alloca %struct.rtx_def*, align 8
  %head95.i = alloca %struct.rtx_def*, align 8
  %tail96.i = alloca %struct.rtx_def*, align 8
  %head190.i = alloca %struct.rtx_def*, align 8
  %tail191.i = alloca %struct.rtx_def*, align 8
  %0 = load i32* @n_basic_blocks, align 4, !tbaa !5
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  call void @scope_to_insns_initialize() #4
  store i32 0, i32* @nr_inter, align 4, !tbaa !5
  store i32 0, i32* @nr_spec, align 4, !tbaa !5
  call void @sched_init(%struct._IO_FILE* %dump_file) #4
  store i32 0, i32* @nr_regions, align 4, !tbaa !5
  %1 = load i32* @n_basic_blocks, align 4, !tbaa !5
  %conv.i = sext i32 %1 to i64
  %mul.i = shl nsw i64 %conv.i, 3
  %call.i = call noalias i8* @xmalloc(i64 %mul.i) #4
  %2 = bitcast i8* %call.i to %struct.region*
  store %struct.region* %2, %struct.region** @rgn_table, align 8, !tbaa !1
  %3 = load i32* @n_basic_blocks, align 4, !tbaa !5
  %conv1.i = sext i32 %3 to i64
  %mul2.i = shl nsw i64 %conv1.i, 2
  %call3.i = call noalias i8* @xmalloc(i64 %mul2.i) #4
  %4 = bitcast i8* %call3.i to i32*
  store i32* %4, i32** @rgn_bb_table, align 8, !tbaa !1
  %5 = load i32* @n_basic_blocks, align 4, !tbaa !5
  %conv4.i = sext i32 %5 to i64
  %mul5.i = shl nsw i64 %conv4.i, 2
  %call6.i = call noalias i8* @xmalloc(i64 %mul5.i) #4
  %6 = bitcast i8* %call6.i to i32*
  store i32* %6, i32** @block_to_bb, align 8, !tbaa !1
  %7 = load i32* @n_basic_blocks, align 4, !tbaa !5
  %conv7.i = sext i32 %7 to i64
  %mul8.i = shl nsw i64 %conv7.i, 2
  %call9.i = call noalias i8* @xmalloc(i64 %mul8.i) #4
  %8 = bitcast i8* %call9.i to i32*
  store i32* %8, i32** @containing_rgn, align 8, !tbaa !1
  %9 = load i32* @reload_completed, align 4, !tbaa !5
  %10 = load i32* @n_basic_blocks, align 4
  %notlhs.i = icmp eq i32 %9, 0
  %notrhs.i = icmp ne i32 %10, 1
  %or.cond.not.i = and i1 %notrhs.i, %notlhs.i
  %11 = load i32* @flag_schedule_interblock, align 4
  %tobool12.i = icmp ne i32 %11, 0
  %or.cond31.i = and i1 %or.cond.not.i, %tobool12.i
  br i1 %or.cond31.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %if.end
  %cmp18.i.i = icmp sgt i32 %10, 0
  br i1 %cmp18.i.i, label %for.body.lr.ph.i.i, label %find_single_block_region.exit.i

for.body.lr.ph.i.i:                               ; preds = %if.then.i
  %12 = load i32** @rgn_bb_table, align 8, !tbaa !1
  %13 = load %struct.region** @rgn_table, align 8, !tbaa !1
  %14 = load i32** @block_to_bb, align 8, !tbaa !1
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.body.i.i, %for.body.lr.ph.i.i
  %indvars.iv.i.i = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %indvars.iv.next.i.i, %for.body.i.i ]
  %arrayidx.i.i = getelementptr inbounds i32* %12, i64 %indvars.iv.i.i
  %15 = trunc i64 %indvars.iv.i.i to i32
  store i32 %15, i32* %arrayidx.i.i, align 4, !tbaa !5
  %rgn_nr_blocks.i.i = getelementptr inbounds %struct.region* %13, i64 %indvars.iv.i.i, i32 0
  store i32 1, i32* %rgn_nr_blocks.i.i, align 4, !tbaa !7
  %rgn_blocks.i.i = getelementptr inbounds %struct.region* %13, i64 %indvars.iv.i.i, i32 1
  store i32 %15, i32* %rgn_blocks.i.i, align 4, !tbaa !9
  %arrayidx6.i.i = getelementptr inbounds i32* %8, i64 %indvars.iv.i.i
  store i32 %15, i32* %arrayidx6.i.i, align 4, !tbaa !5
  %arrayidx8.i.i = getelementptr inbounds i32* %14, i64 %indvars.iv.i.i
  store i32 0, i32* %arrayidx8.i.i, align 4, !tbaa !5
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %16 = load i32* @n_basic_blocks, align 4, !tbaa !5
  %17 = trunc i64 %indvars.iv.next.i.i to i32
  %cmp.i.i = icmp slt i32 %17, %16
  br i1 %cmp.i.i, label %for.body.i.i, label %find_single_block_region.exit.i

find_single_block_region.exit.i:                  ; preds = %for.body.i.i, %if.then.i
  %.lcssa.i.i = phi i32 [ %10, %if.then.i ], [ %16, %for.body.i.i ]
  store i32 %.lcssa.i.i, i32* @nr_regions, align 4, !tbaa !5
  br label %init_regions.exit

if.else.i:                                        ; preds = %if.end
  %18 = load %struct.function** @cfun, align 8, !tbaa !1
  %x_nonlocal_goto_handler_labels.i.i = getelementptr inbounds %struct.function* %18, i64 0, i32 21
  %19 = load %struct.rtx_def** %x_nonlocal_goto_handler_labels.i.i, align 8, !tbaa !28
  %tobool.i.i = icmp eq %struct.rtx_def* %19, null
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then15.i

if.end.i.i:                                       ; preds = %if.else.i
  %expr.i.i = getelementptr inbounds %struct.function* %18, i64 0, i32 2
  %20 = load %struct.expr_status** %expr.i.i, align 8, !tbaa !31
  %x_forced_labels.i.i = getelementptr inbounds %struct.expr_status* %20, i64 0, i32 5
  %21 = load %struct.rtx_def** %x_forced_labels.i.i, align 8, !tbaa !32
  %tobool1.i.i = icmp eq %struct.rtx_def* %21, null
  br i1 %tobool1.i.i, label %if.end3.i.i, label %if.then15.i

if.end3.i.i:                                      ; preds = %if.end.i.i
  %has_computed_jump.i.i = getelementptr inbounds %struct.function* %18, i64 0, i32 56
  %22 = bitcast i24* %has_computed_jump.i.i to i32*
  %bf.load.i.i = load i32* %22, align 8
  %bf.clear.i.i = and i32 %bf.load.i.i, 2048
  %tobool4.i.i = icmp eq i32 %bf.clear.i.i, 0
  br i1 %tobool4.i.i, label %if.end6.i.i, label %if.then15.i

if.end6.i.i:                                      ; preds = %if.end3.i.i
  %call.i.i = call zeroext i1 @current_function_has_exception_handlers() #4
  br i1 %call.i.i, label %if.then15.i, label %for.cond.preheader.i.i

for.cond.preheader.i.i:                           ; preds = %if.end6.i.i
  %23 = load i32* @n_basic_blocks, align 4, !tbaa !5
  %cmp64.i.i = icmp sgt i32 %23, 0
  br i1 %cmp64.i.i, label %for.body.lr.ph.i36.i, label %if.else16.i

for.body.lr.ph.i36.i:                             ; preds = %for.cond.preheader.i.i
  %.pre.i.i = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !1
  br label %for.body.i39.i

for.body.i39.i:                                   ; preds = %for.inc50.i.i, %for.body.lr.ph.i36.i
  %24 = phi %struct.varray_head_tag* [ %.pre.i.i, %for.body.lr.ph.i36.i ], [ %31, %for.inc50.i.i ]
  %indvars.iv.i37.i = phi i64 [ 0, %for.body.lr.ph.i36.i ], [ %indvars.iv.next.i40.i, %for.inc50.i.i ]
  %data.i.i = getelementptr inbounds %struct.varray_head_tag* %24, i64 0, i32 4
  %bb.i.i = bitcast %union.varray_data_tag* %data.i.i to [1 x %struct.basic_block_def*]*
  %arrayidx.i38.i = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb.i.i, i64 0, i64 %indvars.iv.i37.i
  %25 = load %struct.basic_block_def** %arrayidx.i38.i, align 8, !tbaa !1
  %head.i.i = getelementptr inbounds %struct.basic_block_def* %25, i64 0, i32 0
  br label %for.cond9.i.i

for.cond9.i.i:                                    ; preds = %for.inc.i.i, %for.body.i39.i
  %insn.0.in.i.i = phi %struct.rtx_def** [ %head.i.i, %for.body.i39.i ], [ %rtx49.i.i, %for.inc.i.i ]
  %insn.0.i.i = load %struct.rtx_def** %insn.0.in.i.i, align 8
  %26 = getelementptr inbounds %struct.rtx_def* %insn.0.i.i, i64 0, i32 0
  %bf.load10.i.i = load i32* %26, align 8
  %bf.clear11.i.i = and i32 %bf.load10.i.i, 65535
  %idxprom1262.i.i = zext i32 %bf.clear11.i.i to i64
  %arrayidx13.i.i = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom1262.i.i
  %27 = load i8* %arrayidx13.i.i, align 1, !tbaa !18
  %cmp14.i.i = icmp eq i8 %27, 105
  %cmp16.i.i = icmp ne i32 %bf.clear11.i.i, 33
  %or.cond.i.i = and i1 %cmp14.i.i, %cmp16.i.i
  br i1 %or.cond.i.i, label %if.then18.i.i, label %if.end38.i.i

if.then18.i.i:                                    ; preds = %for.cond9.i.i
  %call19.i.i = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn.0.i.i, i32 13, %struct.rtx_def* null) #4
  %tobool20.i.i = icmp eq %struct.rtx_def* %call19.i.i, null
  br i1 %tobool20.i.i, label %if.end38.i.i, label %land.lhs.true21.i.i

land.lhs.true21.i.i:                              ; preds = %if.then18.i.i
  %arrayidx22.i.i = getelementptr inbounds %struct.rtx_def* %insn.0.i.i, i64 0, i32 1, i64 2
  %rtx.i.i = bitcast %union.rtunion_def* %arrayidx22.i.i to %struct.rtx_def**
  %28 = load %struct.rtx_def** %rtx.i.i, align 8, !tbaa !1
  %29 = getelementptr inbounds %struct.rtx_def* %28, i64 0, i32 0
  %bf.load23.i.i = load i32* %29, align 8
  %bf.clear24.i.i = and i32 %bf.load23.i.i, 65535
  %cmp25.i.i = icmp eq i32 %bf.clear24.i.i, 33
  br i1 %cmp25.i.i, label %land.lhs.true27.i.i, label %if.then15.i

land.lhs.true27.i.i:                              ; preds = %land.lhs.true21.i.i
  %arrayidx32.i.i = getelementptr inbounds %struct.rtx_def* %call19.i.i, i64 0, i32 1, i64 0
  %rtx33.i.i = bitcast %union.rtunion_def* %arrayidx32.i.i to %struct.rtx_def**
  %30 = load %struct.rtx_def** %rtx33.i.i, align 8, !tbaa !1
  %call34.i.i = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %28, i32 13, %struct.rtx_def* %30) #4
  %tobool35.i.i = icmp eq %struct.rtx_def* %call34.i.i, null
  br i1 %tobool35.i.i, label %if.then15.i, label %if.end38.i.i

if.end38.i.i:                                     ; preds = %land.lhs.true27.i.i, %if.then18.i.i, %for.cond9.i.i
  %31 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !1
  %data40.i.i = getelementptr inbounds %struct.varray_head_tag* %31, i64 0, i32 4
  %bb41.i.i = bitcast %union.varray_data_tag* %data40.i.i to [1 x %struct.basic_block_def*]*
  %arrayidx42.i.i = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb41.i.i, i64 0, i64 %indvars.iv.i37.i
  %32 = load %struct.basic_block_def** %arrayidx42.i.i, align 8, !tbaa !1
  %end.i.i = getelementptr inbounds %struct.basic_block_def* %32, i64 0, i32 1
  %33 = load %struct.rtx_def** %end.i.i, align 8, !tbaa !34
  %cmp43.i.i = icmp eq %struct.rtx_def* %insn.0.i.i, %33
  br i1 %cmp43.i.i, label %for.inc50.i.i, label %for.inc.i.i

for.inc.i.i:                                      ; preds = %if.end38.i.i
  %arrayidx48.i.i = getelementptr inbounds %struct.rtx_def* %insn.0.i.i, i64 0, i32 1, i64 2
  %rtx49.i.i = bitcast %union.rtunion_def* %arrayidx48.i.i to %struct.rtx_def**
  br label %for.cond9.i.i

for.inc50.i.i:                                    ; preds = %if.end38.i.i
  %indvars.iv.next.i40.i = add nuw nsw i64 %indvars.iv.i37.i, 1
  %34 = load i32* @n_basic_blocks, align 4, !tbaa !5
  %35 = trunc i64 %indvars.iv.next.i40.i to i32
  %cmp.i41.i = icmp slt i32 %35, %34
  br i1 %cmp.i41.i, label %for.body.i39.i, label %if.else16.i

if.then15.i:                                      ; preds = %land.lhs.true27.i.i, %land.lhs.true21.i.i, %if.end6.i.i, %if.end3.i.i, %if.end.i.i, %if.else.i
  %36 = load i32* @n_basic_blocks, align 4, !tbaa !5
  %cmp18.i42.i = icmp sgt i32 %36, 0
  br i1 %cmp18.i42.i, label %for.body.lr.ph.i43.i, label %find_single_block_region.exit54.i

for.body.lr.ph.i43.i:                             ; preds = %if.then15.i
  %37 = load i32** @rgn_bb_table, align 8, !tbaa !1
  %38 = load %struct.region** @rgn_table, align 8, !tbaa !1
  %39 = load i32** @containing_rgn, align 8, !tbaa !1
  %40 = load i32** @block_to_bb, align 8, !tbaa !1
  br label %for.body.i52.i

for.body.i52.i:                                   ; preds = %for.body.i52.i, %for.body.lr.ph.i43.i
  %indvars.iv.i44.i = phi i64 [ 0, %for.body.lr.ph.i43.i ], [ %indvars.iv.next.i50.i, %for.body.i52.i ]
  %arrayidx.i45.i = getelementptr inbounds i32* %37, i64 %indvars.iv.i44.i
  %41 = trunc i64 %indvars.iv.i44.i to i32
  store i32 %41, i32* %arrayidx.i45.i, align 4, !tbaa !5
  %rgn_nr_blocks.i46.i = getelementptr inbounds %struct.region* %38, i64 %indvars.iv.i44.i, i32 0
  store i32 1, i32* %rgn_nr_blocks.i46.i, align 4, !tbaa !7
  %rgn_blocks.i47.i = getelementptr inbounds %struct.region* %38, i64 %indvars.iv.i44.i, i32 1
  store i32 %41, i32* %rgn_blocks.i47.i, align 4, !tbaa !9
  %arrayidx6.i48.i = getelementptr inbounds i32* %39, i64 %indvars.iv.i44.i
  store i32 %41, i32* %arrayidx6.i48.i, align 4, !tbaa !5
  %arrayidx8.i49.i = getelementptr inbounds i32* %40, i64 %indvars.iv.i44.i
  store i32 0, i32* %arrayidx8.i49.i, align 4, !tbaa !5
  %indvars.iv.next.i50.i = add nuw nsw i64 %indvars.iv.i44.i, 1
  %42 = load i32* @n_basic_blocks, align 4, !tbaa !5
  %43 = trunc i64 %indvars.iv.next.i50.i to i32
  %cmp.i51.i = icmp slt i32 %43, %42
  br i1 %cmp.i51.i, label %for.body.i52.i, label %find_single_block_region.exit54.i

find_single_block_region.exit54.i:                ; preds = %for.body.i52.i, %if.then15.i
  %.lcssa.i53.i = phi i32 [ %36, %if.then15.i ], [ %42, %for.body.i52.i ]
  store i32 %.lcssa.i53.i, i32* @nr_regions, align 4, !tbaa !5
  br label %init_regions.exit

if.else16.i:                                      ; preds = %for.inc50.i.i, %for.cond.preheader.i.i
  %44 = phi i32 [ %23, %for.cond.preheader.i.i ], [ %34, %for.inc50.i.i ]
  %call17.i = call %struct.simple_bitmap_def** @sbitmap_vector_alloc(i32 %44, i32 %44) #4
  %call18.i = call %struct.edge_list* @create_edge_list() #4
  call void @calculate_dominance_info(i32* null, %struct.simple_bitmap_def** %call17.i, i32 0) #4
  %num_edges1.i.i = getelementptr inbounds %struct.edge_list* %call18.i, i64 0, i32 1
  %45 = load i32* %num_edges1.i.i, align 4, !tbaa !35
  %46 = load i32* @n_basic_blocks, align 4, !tbaa !5
  %cmp47.i.i = icmp sgt i32 %46, 0
  br i1 %cmp47.i.i, label %for.body.lr.ph.i57.i, label %for.end.i.i

for.body.lr.ph.i57.i:                             ; preds = %if.else16.i
  %47 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !1
  %data.i55.i = getelementptr inbounds %struct.varray_head_tag* %47, i64 0, i32 4
  %bb.i56.i = bitcast %union.varray_data_tag* %data.i55.i to [1 x %struct.basic_block_def*]*
  br label %for.body.i59.i

for.body.i59.i:                                   ; preds = %for.inc.i61.i, %for.body.lr.ph.i57.i
  %indvars.iv51.i.i = phi i64 [ 0, %for.body.lr.ph.i57.i ], [ %indvars.iv.next52.i.i, %for.inc.i61.i ]
  %unreachable.048.i.i = phi i32 [ 0, %for.body.lr.ph.i57.i ], [ %unreachable.1.i.i, %for.inc.i61.i ]
  %arrayidx.i58.i = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb.i56.i, i64 0, i64 %indvars.iv51.i.i
  %48 = load %struct.basic_block_def** %arrayidx.i58.i, align 8, !tbaa !1
  %pred.i.i = getelementptr inbounds %struct.basic_block_def* %48, i64 0, i32 4
  %49 = load %struct.edge_def** %pred.i.i, align 8, !tbaa !37
  %cmp2.i.i = icmp eq %struct.edge_def* %49, null
  br i1 %cmp2.i.i, label %if.then.i.i, label %lor.lhs.false.i.i

lor.lhs.false.i.i:                                ; preds = %for.body.i59.i
  %src.i.i = getelementptr inbounds %struct.edge_def* %49, i64 0, i32 2
  %50 = load %struct.basic_block_def** %src.i.i, align 8, !tbaa !38
  %cmp4.i.i = icmp eq %struct.basic_block_def* %50, %48
  br i1 %cmp4.i.i, label %land.lhs.true.i.i, label %for.inc.i61.i

land.lhs.true.i.i:                                ; preds = %lor.lhs.false.i.i
  %pred_next.i.i = getelementptr inbounds %struct.edge_def* %49, i64 0, i32 0
  %51 = load %struct.edge_def** %pred_next.i.i, align 8, !tbaa !40
  %cmp6.i.i = icmp eq %struct.edge_def* %51, null
  br i1 %cmp6.i.i, label %if.then.i.i, label %for.inc.i61.i

if.then.i.i:                                      ; preds = %land.lhs.true.i.i, %for.body.i59.i
  br label %for.inc.i61.i

for.inc.i61.i:                                    ; preds = %if.then.i.i, %land.lhs.true.i.i, %lor.lhs.false.i.i
  %unreachable.1.i.i = phi i32 [ 1, %if.then.i.i ], [ %unreachable.048.i.i, %land.lhs.true.i.i ], [ %unreachable.048.i.i, %lor.lhs.false.i.i ]
  %indvars.iv.next52.i.i = add nuw nsw i64 %indvars.iv51.i.i, 1
  %lftr.wideiv239 = trunc i64 %indvars.iv.next52.i.i to i32
  %exitcond240 = icmp eq i32 %lftr.wideiv239, %46
  br i1 %exitcond240, label %for.end.i.i, label %for.body.i59.i

for.end.i.i:                                      ; preds = %for.inc.i61.i, %if.else16.i
  %unreachable.0.lcssa.i.i = phi i32 [ 0, %if.else16.i ], [ %unreachable.1.i.i, %for.inc.i61.i ]
  %conv.i.i = sext i32 %46 to i64
  %call.i62.i = call noalias i8* @xcalloc(i64 %conv.i.i, i64 4) #4
  %52 = bitcast i8* %call.i62.i to i32*
  store i32* %52, i32** @in_edges, align 8, !tbaa !1
  %53 = load i32* @n_basic_blocks, align 4, !tbaa !5
  %conv7.i.i = sext i32 %53 to i64
  %call8.i.i = call noalias i8* @xcalloc(i64 %conv7.i.i, i64 4) #4
  %54 = bitcast i8* %call8.i.i to i32*
  store i32* %54, i32** @out_edges, align 8, !tbaa !1
  %conv9.i.i = sext i32 %45 to i64
  %call10.i.i = call noalias i8* @xcalloc(i64 %conv9.i.i, i64 16) #4
  %55 = bitcast i8* %call10.i.i to %struct.haifa_edge*
  store %struct.haifa_edge* %55, %struct.haifa_edge** @edge_table, align 8, !tbaa !1
  store i32 0, i32* @nr_edges, align 4, !tbaa !5
  %cmp1245.i.i = icmp sgt i32 %45, 0
  br i1 %cmp1245.i.i, label %for.body14.lr.ph.i.i, label %build_control_flow.exit.i

for.body14.lr.ph.i.i:                             ; preds = %for.end.i.i
  %index_to_edge.i.i = getelementptr inbounds %struct.edge_list* %call18.i, i64 0, i32 2
  %56 = load %struct.edge_def*** %index_to_edge.i.i, align 8, !tbaa !41
  %57 = load i32** @out_edges, align 8, !tbaa !1
  %58 = load i32** @in_edges, align 8, !tbaa !1
  br label %for.body14.i.i

for.body14.i.i:                                   ; preds = %for.inc28.i.i, %for.body14.lr.ph.i.i
  %indvars.iv.i63.i = phi i64 [ 0, %for.body14.lr.ph.i.i ], [ %indvars.iv.next.i64.i, %for.inc28.i.i ]
  %arrayidx16.i.i = getelementptr inbounds %struct.edge_def** %56, i64 %indvars.iv.i63.i
  %59 = load %struct.edge_def** %arrayidx16.i.i, align 8, !tbaa !1
  %dest.i.i = getelementptr inbounds %struct.edge_def* %59, i64 0, i32 3
  %60 = load %struct.basic_block_def** %dest.i.i, align 8, !tbaa !42
  %cmp17.i.i = icmp eq %struct.basic_block_def* %60, getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1)
  br i1 %cmp17.i.i, label %for.inc28.i.i, label %land.lhs.true19.i.i

land.lhs.true19.i.i:                              ; preds = %for.body14.i.i
  %src20.i.i = getelementptr inbounds %struct.edge_def* %59, i64 0, i32 2
  %61 = load %struct.basic_block_def** %src20.i.i, align 8, !tbaa !38
  %cmp21.i.i = icmp eq %struct.basic_block_def* %61, getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0)
  br i1 %cmp21.i.i, label %for.inc28.i.i, label %if.then23.i.i

if.then23.i.i:                                    ; preds = %land.lhs.true19.i.i
  %index.i.i = getelementptr inbounds %struct.basic_block_def* %61, i64 0, i32 11
  %62 = load i32* %index.i.i, align 4, !tbaa !21
  %index26.i.i = getelementptr inbounds %struct.basic_block_def* %60, i64 0, i32 11
  %63 = load i32* %index26.i.i, align 4, !tbaa !21
  %idxprom.i.i.i = sext i32 %62 to i64
  %arrayidx.i.i.i = getelementptr inbounds i32* %57, i64 %idxprom.i.i.i
  %64 = load i32* %arrayidx.i.i.i, align 4, !tbaa !5
  %tobool.old.i.i.i = icmp eq i32 %64, 0
  br i1 %tobool.old.i.i.i, label %while.end.i.i.i, label %while.body.i.i.i

while.body.i.i.i:                                 ; preds = %if.then23.i.i, %if.end.i.i.i
  %curr_edge.0.i.i.i = phi i32 [ %67, %if.end.i.i.i ], [ %64, %if.then23.i.i ]
  %idxprom1.i.i.i = sext i32 %curr_edge.0.i.i.i to i64
  %from_block.i.i.i = getelementptr inbounds %struct.haifa_edge* %55, i64 %idxprom1.i.i.i, i32 0
  %65 = load i32* %from_block.i.i.i, align 4, !tbaa !43
  %cmp.i.i.i = icmp eq i32 %65, %62
  br i1 %cmp.i.i.i, label %land.lhs.true.i.i.i, label %if.end.i.i.i

land.lhs.true.i.i.i:                              ; preds = %while.body.i.i.i
  %to_block.i.i.i = getelementptr inbounds %struct.haifa_edge* %55, i64 %idxprom1.i.i.i, i32 1
  %66 = load i32* %to_block.i.i.i, align 4, !tbaa !45
  %cmp5.i.i.i = icmp eq i32 %66, %63
  br i1 %cmp5.i.i.i, label %for.inc28.i.i, label %if.end.i.i.i

if.end.i.i.i:                                     ; preds = %land.lhs.true.i.i.i, %while.body.i.i.i
  %next_out.i.i.i = getelementptr inbounds %struct.haifa_edge* %55, i64 %idxprom1.i.i.i, i32 3
  %67 = load i32* %next_out.i.i.i, align 4, !tbaa !46
  %cmp8.i.i.i = icmp ne i32 %64, %67
  %tobool.i.i.i = icmp ne i32 %67, 0
  %or.cond.i.i.i = and i1 %cmp8.i.i.i, %tobool.i.i.i
  br i1 %or.cond.i.i.i, label %while.body.i.i.i, label %while.end.i.i.i

while.end.i.i.i:                                  ; preds = %if.end.i.i.i, %if.then23.i.i
  %68 = load i32* @nr_edges, align 4, !tbaa !5
  %inc.i.i.i = add nsw i32 %68, 1
  store i32 %inc.i.i.i, i32* @nr_edges, align 4, !tbaa !5
  %idxprom11.i.i.i = sext i32 %inc.i.i.i to i64
  %from_block13.i.i.i = getelementptr inbounds %struct.haifa_edge* %55, i64 %idxprom11.i.i.i, i32 0
  store i32 %62, i32* %from_block13.i.i.i, align 4, !tbaa !43
  %to_block16.i.i.i = getelementptr inbounds %struct.haifa_edge* %55, i64 %idxprom11.i.i.i, i32 1
  store i32 %63, i32* %to_block16.i.i.i, align 4, !tbaa !45
  %69 = load i32* %arrayidx.i.i.i, align 4, !tbaa !5
  %tobool19.i.i.i = icmp eq i32 %69, 0
  br i1 %tobool19.i.i.i, label %if.else.i.i.i, label %if.then20.i.i.i

if.then20.i.i.i:                                  ; preds = %while.end.i.i.i
  %idxprom23.i.i.i = sext i32 %69 to i64
  %next_out25.i.i.i = getelementptr inbounds %struct.haifa_edge* %55, i64 %idxprom23.i.i.i, i32 3
  %70 = load i32* %next_out25.i.i.i, align 4, !tbaa !46
  store i32 %inc.i.i.i, i32* %next_out25.i.i.i, align 4, !tbaa !46
  %next_out33.i.i.i = getelementptr inbounds %struct.haifa_edge* %55, i64 %idxprom11.i.i.i, i32 3
  store i32 %70, i32* %next_out33.i.i.i, align 4, !tbaa !46
  br label %if.end39.i.i.i

if.else.i.i.i:                                    ; preds = %while.end.i.i.i
  store i32 %inc.i.i.i, i32* %arrayidx.i.i.i, align 4, !tbaa !5
  %next_out38.i.i.i = getelementptr inbounds %struct.haifa_edge* %55, i64 %idxprom11.i.i.i, i32 3
  store i32 %inc.i.i.i, i32* %next_out38.i.i.i, align 4, !tbaa !46
  br label %if.end39.i.i.i

if.end39.i.i.i:                                   ; preds = %if.else.i.i.i, %if.then20.i.i.i
  %idxprom40.i.i.i = sext i32 %63 to i64
  %arrayidx41.i.i.i = getelementptr inbounds i32* %58, i64 %idxprom40.i.i.i
  %71 = load i32* %arrayidx41.i.i.i, align 4, !tbaa !5
  %tobool42.i.i.i = icmp eq i32 %71, 0
  br i1 %tobool42.i.i.i, label %if.else56.i.i.i, label %if.then43.i.i.i

if.then43.i.i.i:                                  ; preds = %if.end39.i.i.i
  %idxprom46.i.i.i = sext i32 %71 to i64
  %next_in.i.i.i = getelementptr inbounds %struct.haifa_edge* %55, i64 %idxprom46.i.i.i, i32 2
  %72 = load i32* %next_in.i.i.i, align 4, !tbaa !47
  store i32 %inc.i.i.i, i32* %next_in.i.i.i, align 4, !tbaa !47
  %next_in55.i.i.i = getelementptr inbounds %struct.haifa_edge* %55, i64 %idxprom11.i.i.i, i32 2
  store i32 %72, i32* %next_in55.i.i.i, align 4, !tbaa !47
  br label %for.inc28.i.i

if.else56.i.i.i:                                  ; preds = %if.end39.i.i.i
  store i32 %inc.i.i.i, i32* %arrayidx41.i.i.i, align 4, !tbaa !5
  %next_in61.i.i.i = getelementptr inbounds %struct.haifa_edge* %55, i64 %idxprom11.i.i.i, i32 2
  store i32 %inc.i.i.i, i32* %next_in61.i.i.i, align 4, !tbaa !47
  br label %for.inc28.i.i

for.inc28.i.i:                                    ; preds = %land.lhs.true.i.i.i, %if.else56.i.i.i, %if.then43.i.i.i, %land.lhs.true19.i.i, %for.body14.i.i
  %indvars.iv.next.i64.i = add nuw nsw i64 %indvars.iv.i63.i, 1
  %lftr.wideiv237 = trunc i64 %indvars.iv.next.i64.i to i32
  %exitcond238 = icmp eq i32 %lftr.wideiv237, %45
  br i1 %exitcond238, label %for.cond11.for.end30_crit_edge.i.i, label %for.body14.i.i

for.cond11.for.end30_crit_edge.i.i:               ; preds = %for.inc28.i.i
  %.pre.i65.i = load i32* @nr_edges, align 4, !tbaa !5
  %phitmp.i.i = add i32 %.pre.i65.i, 1
  br label %build_control_flow.exit.i

build_control_flow.exit.i:                        ; preds = %for.cond11.for.end30_crit_edge.i.i, %for.end.i.i
  %73 = phi i32 [ %phitmp.i.i, %for.cond11.for.end30_crit_edge.i.i ], [ 1, %for.end.i.i ]
  store i32 %73, i32* @nr_edges, align 4, !tbaa !5
  %cmp20.i = icmp eq i32 %unreachable.0.lcssa.i.i, 0
  br i1 %cmp20.i, label %if.else23.i, label %if.then22.i

if.then22.i:                                      ; preds = %build_control_flow.exit.i
  %74 = load i32* @n_basic_blocks, align 4, !tbaa !5
  %cmp18.i66.i = icmp sgt i32 %74, 0
  br i1 %cmp18.i66.i, label %for.body.lr.ph.i67.i, label %find_single_block_region.exit79.i

for.body.lr.ph.i67.i:                             ; preds = %if.then22.i
  %75 = load i32** @rgn_bb_table, align 8, !tbaa !1
  %76 = load %struct.region** @rgn_table, align 8, !tbaa !1
  %77 = load i32** @containing_rgn, align 8, !tbaa !1
  %78 = load i32** @block_to_bb, align 8, !tbaa !1
  br label %for.body.i76.i

for.body.i76.i:                                   ; preds = %for.body.i76.i, %for.body.lr.ph.i67.i
  %indvars.iv.i68.i = phi i64 [ 0, %for.body.lr.ph.i67.i ], [ %indvars.iv.next.i74.i, %for.body.i76.i ]
  %arrayidx.i69.i = getelementptr inbounds i32* %75, i64 %indvars.iv.i68.i
  %79 = trunc i64 %indvars.iv.i68.i to i32
  store i32 %79, i32* %arrayidx.i69.i, align 4, !tbaa !5
  %rgn_nr_blocks.i70.i = getelementptr inbounds %struct.region* %76, i64 %indvars.iv.i68.i, i32 0
  store i32 1, i32* %rgn_nr_blocks.i70.i, align 4, !tbaa !7
  %rgn_blocks.i71.i = getelementptr inbounds %struct.region* %76, i64 %indvars.iv.i68.i, i32 1
  store i32 %79, i32* %rgn_blocks.i71.i, align 4, !tbaa !9
  %arrayidx6.i72.i = getelementptr inbounds i32* %77, i64 %indvars.iv.i68.i
  store i32 %79, i32* %arrayidx6.i72.i, align 4, !tbaa !5
  %arrayidx8.i73.i = getelementptr inbounds i32* %78, i64 %indvars.iv.i68.i
  store i32 0, i32* %arrayidx8.i73.i, align 4, !tbaa !5
  %indvars.iv.next.i74.i = add nuw nsw i64 %indvars.iv.i68.i, 1
  %80 = load i32* @n_basic_blocks, align 4, !tbaa !5
  %81 = trunc i64 %indvars.iv.next.i74.i to i32
  %cmp.i75.i = icmp slt i32 %81, %80
  br i1 %cmp.i75.i, label %for.body.i76.i, label %find_single_block_region.exit79.i

find_single_block_region.exit79.i:                ; preds = %for.body.i76.i, %if.then22.i
  %.lcssa.i77.i = phi i32 [ %74, %if.then22.i ], [ %80, %for.body.i76.i ]
  store i32 %.lcssa.i77.i, i32* @nr_regions, align 4, !tbaa !5
  br label %if.end.i

if.else23.i:                                      ; preds = %build_control_flow.exit.i
  %82 = load i32** @out_edges, align 8, !tbaa !1
  %83 = load i32* %82, align 4, !tbaa !5
  %84 = load i32* %num_edges1.i.i, align 4, !tbaa !35
  %85 = load i32* @n_basic_blocks, align 4, !tbaa !5
  %conv.i81.i = sext i32 %85 to i64
  %mul.i.i = shl nsw i64 %conv.i81.i, 2
  %call.i82.i = call noalias i8* @xmalloc(i64 %mul.i.i) #4
  %86 = bitcast i8* %call.i82.i to i32*
  %87 = load i32* @n_basic_blocks, align 4, !tbaa !5
  %conv2.i.i = sext i32 %87 to i64
  %call3.i.i = call noalias i8* @xcalloc(i64 %conv2.i.i, i64 4) #4
  %88 = bitcast i8* %call3.i.i to i32*
  %89 = load i32* @nr_edges, align 4, !tbaa !5
  %conv4.i.i = sext i32 %89 to i64
  %mul5.i.i = shl nsw i64 %conv4.i.i, 2
  %call6.i.i = call noalias i8* @xmalloc(i64 %mul5.i.i) #4
  %90 = bitcast i8* %call6.i.i to i32*
  %91 = load i32* @n_basic_blocks, align 4, !tbaa !5
  %call7.i.i = call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %91) #4
  call void @sbitmap_ones(%struct.simple_bitmap_def* %call7.i.i) #4
  %92 = load i32* @n_basic_blocks, align 4, !tbaa !5
  %call8.i83.i = call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %92) #4
  call void @sbitmap_zero(%struct.simple_bitmap_def* %call8.i83.i) #4
  %93 = load i32* @nr_edges, align 4, !tbaa !5
  %call9.i.i = call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %93) #4
  call void @sbitmap_zero(%struct.simple_bitmap_def* %call9.i.i) #4
  %94 = load i32* @n_basic_blocks, align 4, !tbaa !5
  %call10.i84.i = call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %94) #4
  call void @sbitmap_zero(%struct.simple_bitmap_def* %call10.i84.i) #4
  %95 = load i32* @n_basic_blocks, align 4, !tbaa !5
  %call11.i.i = call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %95) #4
  call void @sbitmap_zero(%struct.simple_bitmap_def* %call11.i.i) #4
  %96 = load i32* @n_basic_blocks, align 4, !tbaa !5
  %cmp1298.i.i = icmp sgt i32 %96, 0
  br i1 %cmp1298.i.i, label %for.body.lr.ph.i85.i, label %while.body.preheader.i.i

for.body.lr.ph.i85.i:                             ; preds = %if.else23.i
  %97 = icmp sgt i32 %96, 1
  %.op1392.i.i = add i32 %96, -1
  %98 = zext i32 %.op1392.i.i to i64
  %.op1393.i.i = shl nuw nsw i64 %98, 2
  %.op1393.op.i.i = add i64 %.op1393.i.i, 4
  %99 = select i1 %97, i64 %.op1393.op.i.i, i64 4
  call void @llvm.memset.p0i8.i64(i8* %call.i82.i, i8 -1, i64 %99, i32 4, i1 false) #4
  br label %while.body.preheader.i.i

while.body.preheader.i.i:                         ; preds = %for.body.lr.ph.i85.i, %if.else23.i
  %100 = load %struct.haifa_edge** @edge_table, align 8, !tbaa !1
  %101 = load i32** @out_edges, align 8, !tbaa !1
  br label %while.body.outer.i.i

lor.lhs.false.i87.i:                              ; preds = %if.end335.i.i, %lor.lhs.false.lr.ph.i.i
  %count.01276.i.i = phi i32 [ %count.0.ph11551288.i.i, %lor.lhs.false.lr.ph.i.i ], [ %inc159.i.i, %if.end335.i.i ]
  %current_edge.01275.i.i = phi i32 [ %current_edge.0.ph11541287.i.i, %lor.lhs.false.lr.ph.i.i ], [ %148, %if.end335.i.i ]
  %div.i.i = lshr i32 %current_edge.01275.i.i, 6
  %idxprom16.i.i = zext i32 %div.i.i to i64
  %arrayidx17.i.i = getelementptr inbounds %struct.simple_bitmap_def* %call9.i.i, i64 0, i32 3, i64 %idxprom16.i.i
  %102 = load i64* %arrayidx17.i.i, align 8, !tbaa !48
  %rem.i.i = and i32 %current_edge.01275.i.i, 63
  %sh_prom.i.i = zext i32 %rem.i.i to i64
  %103 = shl i64 1, %sh_prom.i.i
  %and1072.i.i = and i64 %103, %102
  %tobool.i86.i = icmp eq i64 %and1072.i.i, 0
  br i1 %tobool.i86.i, label %if.end145.i.i, label %while.cond18.preheader.i.i

while.cond18.preheader.i.i:                       ; preds = %if.end233.i.i, %if.end335.i.i, %lor.lhs.false.i87.i, %while.body.outer.i.i
  %no_loops.0.ph1156.lcssa.i.i = phi i8 [ %no_loops.0.ph.i.i, %while.body.outer.i.i ], [ %no_loops.0.ph11561289.i.i, %lor.lhs.false.i87.i ], [ %no_loops.0.ph11561289.i.i, %if.end335.i.i ], [ 0, %if.end233.i.i ]
  %count.0.lcssa.i.i = phi i32 [ %count.0.ph.i.i, %while.body.outer.i.i ], [ %inc159.i.i, %if.end335.i.i ], [ %count.01276.i.i, %lor.lhs.false.i87.i ], [ %inc159.i.i, %if.end233.i.i ]
  %current_edge.1.ph.i.i = phi i32 [ 0, %while.body.outer.i.i ], [ 0, %if.end335.i.i ], [ %current_edge.01275.i.i, %lor.lhs.false.i87.i ], [ 0, %if.end233.i.i ]
  %cmp191293.i.i = icmp sgt i32 %sp.0.ph.i.i, -1
  br i1 %cmp191293.i.i, label %land.rhs.lr.ph.i.i, label %land.lhs.true133.i.i

land.rhs.lr.ph.i.i:                               ; preds = %while.cond18.preheader.i.i
  %104 = sext i32 %sp.0.ph.i.i to i64
  br label %land.rhs.i.i

land.rhs.i.i:                                     ; preds = %if.end128.i.i, %land.rhs.lr.ph.i.i
  %indvars.iv1383.i.i = phi i64 [ %104, %land.rhs.lr.ph.i.i ], [ %indvars.iv.next1384.i.i, %if.end128.i.i ]
  %current_edge.11294.i.i = phi i32 [ %current_edge.1.ph.i.i, %land.rhs.lr.ph.i.i ], [ %119, %if.end128.i.i ]
  %cmp21.i88.i = icmp eq i32 %current_edge.11294.i.i, 0
  br i1 %cmp21.i88.i, label %while.body32.i.i, label %lor.rhs.i.i

lor.rhs.i.i:                                      ; preds = %land.rhs.i.i
  %div23.i.i = lshr i32 %current_edge.11294.i.i, 6
  %idxprom24.i.i = zext i32 %div23.i.i to i64
  %arrayidx26.i.i = getelementptr inbounds %struct.simple_bitmap_def* %call9.i.i, i64 0, i32 3, i64 %idxprom24.i.i
  %105 = load i64* %arrayidx26.i.i, align 8, !tbaa !48
  %rem27.i.i = and i32 %current_edge.11294.i.i, 63
  %sh_prom28.i.i = zext i32 %rem27.i.i to i64
  %106 = shl i64 1, %sh_prom28.i.i
  %and301081.i.i = and i64 %105, %106
  %tobool31.i.i = icmp eq i64 %and301081.i.i, 0
  br i1 %tobool31.i.i, label %while.end.i.i, label %while.body32.i.i

while.body32.i.i:                                 ; preds = %lor.rhs.i.i, %land.rhs.i.i
  %indvars.iv.next1384.i.i = add nsw i64 %indvars.iv1383.i.i, -1
  %arrayidx34.i.i = getelementptr inbounds i32* %90, i64 %indvars.iv1383.i.i
  %107 = load i32* %arrayidx34.i.i, align 4, !tbaa !5
  %idxprom35.i.i = sext i32 %107 to i64
  %from_block.i.i = getelementptr inbounds %struct.haifa_edge* %100, i64 %idxprom35.i.i, i32 0
  %108 = load i32* %from_block.i.i, align 4, !tbaa !43
  %to_block.i.i = getelementptr inbounds %struct.haifa_edge* %100, i64 %idxprom35.i.i, i32 1
  %109 = load i32* %to_block.i.i, align 4, !tbaa !45
  %rem39.i.i = and i32 %109, 63
  %sh_prom40.i.i = zext i32 %rem39.i.i to i64
  %shl.i.i = shl i64 1, %sh_prom40.i.i
  %neg.i.i = xor i64 %shl.i.i, -1
  %div41.i.i = lshr i32 %109, 6
  %idxprom42.i.i = zext i32 %div41.i.i to i64
  %arrayidx44.i.i = getelementptr inbounds %struct.simple_bitmap_def* %call11.i.i, i64 0, i32 3, i64 %idxprom42.i.i
  %110 = load i64* %arrayidx44.i.i, align 8, !tbaa !48
  %and45.i.i = and i64 %110, %neg.i.i
  store i64 %and45.i.i, i64* %arrayidx44.i.i, align 8, !tbaa !48
  %idxprom46.i.i = sext i32 %109 to i64
  %arrayidx47.i.i = getelementptr inbounds i32* %86, i64 %idxprom46.i.i
  %111 = load i32* %arrayidx47.i.i, align 4, !tbaa !5
  %cmp48.i.i = icmp sgt i32 %111, -1
  br i1 %cmp48.i.i, label %land.lhs.true.i89.i, label %if.end128.i.i

land.lhs.true.i89.i:                              ; preds = %while.body32.i.i
  %div52.i.i = lshr i32 %111, 6
  %idxprom53.i.i = zext i32 %div52.i.i to i64
  %arrayidx55.i.i = getelementptr inbounds %struct.simple_bitmap_def* %call11.i.i, i64 0, i32 3, i64 %idxprom53.i.i
  %112 = load i64* %arrayidx55.i.i, align 8, !tbaa !48
  %rem58.i.i = and i32 %111, 63
  %sh_prom59.i.i = zext i32 %rem58.i.i to i64
  %113 = shl i64 1, %sh_prom59.i.i
  %and611080.i.i = and i64 %112, %113
  %tobool62.i.i = icmp eq i64 %and611080.i.i, 0
  br i1 %tobool62.i.i, label %if.end128.i.i, label %if.then63.i.i

if.then63.i.i:                                    ; preds = %land.lhs.true.i89.i
  %idxprom64.i.i = sext i32 %108 to i64
  %arrayidx65.i.i = getelementptr inbounds i32* %86, i64 %idxprom64.i.i
  %114 = load i32* %arrayidx65.i.i, align 4, !tbaa !5
  %cmp66.i.i = icmp eq i32 %114, -1
  br i1 %cmp66.i.i, label %if.then68.i.i, label %if.else.i.i

if.then68.i.i:                                    ; preds = %if.then63.i.i
  store i32 %111, i32* %arrayidx65.i.i, align 4, !tbaa !5
  br label %if.end128.i.i

if.else.i.i:                                      ; preds = %if.then63.i.i
  %idxprom75.i.i = sext i32 %114 to i64
  %arrayidx76.i.i = getelementptr inbounds i32* %88, i64 %idxprom75.i.i
  %115 = load i32* %arrayidx76.i.i, align 4, !tbaa !5
  %idxprom79.i.i = sext i32 %111 to i64
  %arrayidx80.i.i = getelementptr inbounds i32* %88, i64 %idxprom79.i.i
  %116 = load i32* %arrayidx80.i.i, align 4, !tbaa !5
  %cmp81.i.i = icmp sgt i32 %115, %116
  br i1 %cmp81.i.i, label %if.then83.i.i, label %if.else97.i.i

if.then83.i.i:                                    ; preds = %if.else.i.i
  %neg89.i.i = xor i64 %113, -1
  %arrayidx95.i.i = getelementptr inbounds %struct.simple_bitmap_def* %call7.i.i, i64 0, i32 3, i64 %idxprom53.i.i
  %117 = load i64* %arrayidx95.i.i, align 8, !tbaa !48
  %and96.i.i = and i64 %117, %neg89.i.i
  store i64 %and96.i.i, i64* %arrayidx95.i.i, align 8, !tbaa !48
  br label %if.end128.i.i

if.else97.i.i:                                    ; preds = %if.else.i.i
  %cmp106.i.i = icmp slt i32 %115, %116
  br i1 %cmp106.i.i, label %if.then108.i.i, label %if.end128.i.i

if.then108.i.i:                                   ; preds = %if.else97.i.i
  %rem111.i.i = and i32 %114, 63
  %sh_prom112.i.i = zext i32 %rem111.i.i to i64
  %shl113.i.i = shl i64 1, %sh_prom112.i.i
  %neg114.i.i = xor i64 %shl113.i.i, -1
  %div117.i.i = lshr i32 %114, 6
  %idxprom118.i.i = zext i32 %div117.i.i to i64
  %arrayidx120.i.i = getelementptr inbounds %struct.simple_bitmap_def* %call7.i.i, i64 0, i32 3, i64 %idxprom118.i.i
  %118 = load i64* %arrayidx120.i.i, align 8, !tbaa !48
  %and121.i.i = and i64 %118, %neg114.i.i
  store i64 %and121.i.i, i64* %arrayidx120.i.i, align 8, !tbaa !48
  store i32 %111, i32* %arrayidx65.i.i, align 4, !tbaa !5
  br label %if.end128.i.i

if.end128.i.i:                                    ; preds = %if.then108.i.i, %if.else97.i.i, %if.then83.i.i, %if.then68.i.i, %land.lhs.true.i89.i, %while.body32.i.i
  %next_out.i.i = getelementptr inbounds %struct.haifa_edge* %100, i64 %idxprom35.i.i, i32 3
  %119 = load i32* %next_out.i.i, align 4, !tbaa !46
  %120 = trunc i64 %indvars.iv1383.i.i to i32
  %cmp19.i.i = icmp sgt i32 %120, 0
  br i1 %cmp19.i.i, label %land.rhs.i.i, label %while.cond18.land.lhs.true133.loopexit_crit_edge.i.i

while.end.i.i:                                    ; preds = %lor.rhs.i.i
  %121 = trunc i64 %indvars.iv1383.i.i to i32
  %cmp131.i.i = icmp slt i32 %121, 0
  br i1 %cmp131.i.i, label %land.lhs.true133.i.i, label %while.body.outer.i.i

while.body.outer.i.i:                             ; preds = %if.then363.i.i, %if.end347.i.i, %land.lhs.true133.i.i, %while.end.i.i, %while.body.preheader.i.i
  %current_edge.0.ph.i.i = phi i32 [ %83, %while.body.preheader.i.i ], [ %current_edge.11176.i.i, %land.lhs.true133.i.i ], [ %current_edge.11294.i.i, %while.end.i.i ], [ 0, %if.then363.i.i ], [ %150, %if.end347.i.i ]
  %sp.0.ph.i.i = phi i32 [ -1, %while.body.preheader.i.i ], [ %sp.11178.i.i, %land.lhs.true133.i.i ], [ %121, %while.end.i.i ], [ %inc348.i.i, %if.then363.i.i ], [ %inc348.i.i, %if.end347.i.i ]
  %count.0.ph.i.i = phi i32 [ 0, %while.body.preheader.i.i ], [ %count.0.lcssa.i.i, %land.lhs.true133.i.i ], [ %count.0.lcssa.i.i, %while.end.i.i ], [ %inc364.i.i, %if.then363.i.i ], [ %inc159.i.i, %if.end347.i.i ]
  %no_loops.0.ph.i.i = phi i8 [ 1, %while.body.preheader.i.i ], [ %no_loops.0.ph1156.lcssa.i.i, %land.lhs.true133.i.i ], [ %no_loops.0.ph1156.lcssa.i.i, %while.end.i.i ], [ %no_loops.0.ph11561289.i.i, %if.then363.i.i ], [ %no_loops.0.ph11561289.i.i, %if.end347.i.i ]
  %cmp1412741286.i.i = icmp eq i32 %current_edge.0.ph.i.i, 0
  br i1 %cmp1412741286.i.i, label %while.cond18.preheader.i.i, label %lor.lhs.false.lr.ph.i.i

while.cond18.land.lhs.true133.loopexit_crit_edge.i.i: ; preds = %if.end128.i.i
  %122 = trunc i64 %indvars.iv.next1384.i.i to i32
  br label %land.lhs.true133.i.i

land.lhs.true133.i.i:                             ; preds = %while.cond18.land.lhs.true133.loopexit_crit_edge.i.i, %while.end.i.i, %while.cond18.preheader.i.i
  %sp.11178.i.i = phi i32 [ %121, %while.end.i.i ], [ %122, %while.cond18.land.lhs.true133.loopexit_crit_edge.i.i ], [ %sp.0.ph.i.i, %while.cond18.preheader.i.i ]
  %current_edge.11176.i.i = phi i32 [ %current_edge.11294.i.i, %while.end.i.i ], [ %119, %while.cond18.land.lhs.true133.loopexit_crit_edge.i.i ], [ %current_edge.1.ph.i.i, %while.cond18.preheader.i.i ]
  %div134.i.i = lshr i32 %current_edge.11176.i.i, 6
  %idxprom135.i.i = zext i32 %div134.i.i to i64
  %arrayidx137.i.i = getelementptr inbounds %struct.simple_bitmap_def* %call9.i.i, i64 0, i32 3, i64 %idxprom135.i.i
  %123 = load i64* %arrayidx137.i.i, align 8, !tbaa !48
  %rem138.i.i = and i32 %current_edge.11176.i.i, 63
  %sh_prom139.i.i = zext i32 %rem138.i.i to i64
  %124 = shl i64 1, %sh_prom139.i.i
  %and1411075.i.i = and i64 %124, %123
  %tobool142.i.i = icmp eq i64 %and1411075.i.i, 0
  br i1 %tobool142.i.i, label %while.body.outer.i.i, label %for.cond369.preheader.i.i

for.cond369.preheader.i.i:                        ; preds = %land.lhs.true133.i.i
  br i1 %cmp1298.i.i, label %for.body372.i.i, label %for.cond391.preheader.i.i

if.end145.i.i:                                    ; preds = %lor.lhs.false.i87.i
  %idxprom146.i.i = sext i32 %current_edge.01275.i.i to i64
  %from_block148.i.i = getelementptr inbounds %struct.haifa_edge* %100, i64 %idxprom146.i.i, i32 0
  %125 = load i32* %from_block148.i.i, align 4, !tbaa !43
  %to_block151.i.i = getelementptr inbounds %struct.haifa_edge* %100, i64 %idxprom146.i.i, i32 1
  %126 = load i32* %to_block151.i.i, align 4, !tbaa !45
  %rem152.i.i = and i32 %125, 63
  %sh_prom153.i.i = zext i32 %rem152.i.i to i64
  %shl154.i.i = shl i64 1, %sh_prom153.i.i
  %div155.i.i = lshr i32 %125, 6
  %idxprom156.i.i = zext i32 %div155.i.i to i64
  %arrayidx158.i.i = getelementptr inbounds %struct.simple_bitmap_def* %call11.i.i, i64 0, i32 3, i64 %idxprom156.i.i
  %127 = load i64* %arrayidx158.i.i, align 8, !tbaa !48
  %or.i.i = or i64 %shl154.i.i, %127
  store i64 %or.i.i, i64* %arrayidx158.i.i, align 8, !tbaa !48
  %inc159.i.i = add nsw i32 %count.01276.i.i, 1
  %idxprom160.i.i = sext i32 %125 to i64
  %arrayidx161.i.i = getelementptr inbounds i32* %88, i64 %idxprom160.i.i
  store i32 %inc159.i.i, i32* %arrayidx161.i.i, align 4, !tbaa !5
  %div162.i.i = lshr i32 %126, 6
  %idxprom163.i.i = zext i32 %div162.i.i to i64
  %arrayidx165.i.i = getelementptr inbounds %struct.simple_bitmap_def* %call11.i.i, i64 0, i32 3, i64 %idxprom163.i.i
  %128 = load i64* %arrayidx165.i.i, align 8, !tbaa !48
  %rem166.i.i = and i32 %126, 63
  %sh_prom167.i.i = zext i32 %rem166.i.i to i64
  %129 = shl i64 1, %sh_prom167.i.i
  %and1691073.i.i = and i64 %129, %128
  %tobool170.i.i = icmp eq i64 %and1691073.i.i, 0
  br i1 %tobool170.i.i, label %if.end245.i.i, label %if.then171.i.i

if.then171.i.i:                                   ; preds = %if.end145.i.i
  %arrayidx178.i.i = getelementptr inbounds %struct.simple_bitmap_def* %call8.i83.i, i64 0, i32 3, i64 %idxprom163.i.i
  %130 = load i64* %arrayidx178.i.i, align 8, !tbaa !48
  %or179.i.i = or i64 %130, %129
  store i64 %or179.i.i, i64* %arrayidx178.i.i, align 8, !tbaa !48
  %arrayidx181.i.i = getelementptr inbounds i32* %86, i64 %idxprom160.i.i
  %131 = load i32* %arrayidx181.i.i, align 4, !tbaa !5
  %cmp182.i.i = icmp eq i32 %131, -1
  br i1 %cmp182.i.i, label %if.then184.i.i, label %if.else187.i.i

if.then184.i.i:                                   ; preds = %if.then171.i.i
  store i32 %126, i32* %arrayidx181.i.i, align 4, !tbaa !5
  br label %if.end233.i.i

if.else187.i.i:                                   ; preds = %if.then171.i.i
  %idxprom190.i.i = sext i32 %131 to i64
  %arrayidx191.i.i = getelementptr inbounds i32* %88, i64 %idxprom190.i.i
  %132 = load i32* %arrayidx191.i.i, align 4, !tbaa !5
  %idxprom192.i.i = sext i32 %126 to i64
  %arrayidx193.i.i = getelementptr inbounds i32* %88, i64 %idxprom192.i.i
  %133 = load i32* %arrayidx193.i.i, align 4, !tbaa !5
  %cmp194.i.i = icmp sgt i32 %132, %133
  br i1 %cmp194.i.i, label %if.then196.i.i, label %if.else206.i.i

if.then196.i.i:                                   ; preds = %if.else187.i.i
  %neg200.i.i = xor i64 %129, -1
  %arrayidx204.i.i = getelementptr inbounds %struct.simple_bitmap_def* %call7.i.i, i64 0, i32 3, i64 %idxprom163.i.i
  %134 = load i64* %arrayidx204.i.i, align 8, !tbaa !48
  %and205.i.i = and i64 %134, %neg200.i.i
  store i64 %and205.i.i, i64* %arrayidx204.i.i, align 8, !tbaa !48
  br label %if.end233.i.i

if.else206.i.i:                                   ; preds = %if.else187.i.i
  %cmp213.i.i = icmp slt i32 %132, %133
  br i1 %cmp213.i.i, label %if.then215.i.i, label %if.end233.i.i

if.then215.i.i:                                   ; preds = %if.else206.i.i
  %rem218.i.i = and i32 %131, 63
  %sh_prom219.i.i = zext i32 %rem218.i.i to i64
  %shl220.i.i = shl i64 1, %sh_prom219.i.i
  %neg221.i.i = xor i64 %shl220.i.i, -1
  %div224.i.i = lshr i32 %131, 6
  %idxprom225.i.i = zext i32 %div224.i.i to i64
  %arrayidx227.i.i = getelementptr inbounds %struct.simple_bitmap_def* %call7.i.i, i64 0, i32 3, i64 %idxprom225.i.i
  %135 = load i64* %arrayidx227.i.i, align 8, !tbaa !48
  %and228.i.i = and i64 %135, %neg221.i.i
  store i64 %and228.i.i, i64* %arrayidx227.i.i, align 8, !tbaa !48
  store i32 %126, i32* %arrayidx181.i.i, align 4, !tbaa !5
  br label %if.end233.i.i

if.end233.i.i:                                    ; preds = %if.then215.i.i, %if.else206.i.i, %if.then196.i.i, %if.then184.i.i
  %136 = load i64* %arrayidx17.i.i, align 8, !tbaa !48
  %or241.i.i = or i64 %136, %103
  store i64 %or241.i.i, i64* %arrayidx17.i.i, align 8, !tbaa !48
  %next_out244.i.i = getelementptr inbounds %struct.haifa_edge* %100, i64 %idxprom146.i.i, i32 3
  %137 = load i32* %next_out244.i.i, align 4, !tbaa !46
  %cmp141274.i.i = icmp eq i32 %137, 0
  br i1 %cmp141274.i.i, label %while.cond18.preheader.i.i, label %lor.lhs.false.lr.ph.i.i

lor.lhs.false.lr.ph.i.i:                          ; preds = %while.body.outer.i.i, %if.end233.i.i
  %no_loops.0.ph11561289.i.i = phi i8 [ 0, %if.end233.i.i ], [ %no_loops.0.ph.i.i, %while.body.outer.i.i ]
  %count.0.ph11551288.i.i = phi i32 [ %inc159.i.i, %if.end233.i.i ], [ %count.0.ph.i.i, %while.body.outer.i.i ]
  %current_edge.0.ph11541287.i.i = phi i32 [ %137, %if.end233.i.i ], [ %current_edge.0.ph.i.i, %while.body.outer.i.i ]
  br label %lor.lhs.false.i87.i

if.end245.i.i:                                    ; preds = %if.end145.i.i
  %idxprom246.i.i = sext i32 %126 to i64
  %arrayidx247.i.i = getelementptr inbounds i32* %88, i64 %idxprom246.i.i
  %138 = load i32* %arrayidx247.i.i, align 4, !tbaa !5
  %tobool248.i.i = icmp eq i32 %138, 0
  br i1 %tobool248.i.i, label %if.end347.i.i, label %if.then249.i.i

if.then249.i.i:                                   ; preds = %if.end245.i.i
  %arrayidx251.i.i = getelementptr inbounds i32* %86, i64 %idxprom246.i.i
  %139 = load i32* %arrayidx251.i.i, align 4, !tbaa !5
  %cmp252.i.i = icmp sgt i32 %139, -1
  br i1 %cmp252.i.i, label %land.lhs.true254.i.i, label %if.end335.i.i

land.lhs.true254.i.i:                             ; preds = %if.then249.i.i
  %div257.i.i = lshr i32 %139, 6
  %idxprom258.i.i = zext i32 %div257.i.i to i64
  %arrayidx260.i.i = getelementptr inbounds %struct.simple_bitmap_def* %call11.i.i, i64 0, i32 3, i64 %idxprom258.i.i
  %140 = load i64* %arrayidx260.i.i, align 8, !tbaa !48
  %rem263.i.i = and i32 %139, 63
  %sh_prom264.i.i = zext i32 %rem263.i.i to i64
  %141 = shl i64 1, %sh_prom264.i.i
  %and2661074.i.i = and i64 %140, %141
  %tobool267.i.i = icmp eq i64 %and2661074.i.i, 0
  br i1 %tobool267.i.i, label %if.end335.i.i, label %if.then268.i.i

if.then268.i.i:                                   ; preds = %land.lhs.true254.i.i
  %arrayidx270.i.i = getelementptr inbounds i32* %86, i64 %idxprom160.i.i
  %142 = load i32* %arrayidx270.i.i, align 4, !tbaa !5
  %cmp271.i.i = icmp eq i32 %142, -1
  br i1 %cmp271.i.i, label %if.then273.i.i, label %if.else278.i.i

if.then273.i.i:                                   ; preds = %if.then268.i.i
  store i32 %139, i32* %arrayidx270.i.i, align 4, !tbaa !5
  br label %if.end335.i.i

if.else278.i.i:                                   ; preds = %if.then268.i.i
  %idxprom281.i.i = sext i32 %142 to i64
  %arrayidx282.i.i = getelementptr inbounds i32* %88, i64 %idxprom281.i.i
  %143 = load i32* %arrayidx282.i.i, align 4, !tbaa !5
  %idxprom285.i.i = sext i32 %139 to i64
  %arrayidx286.i.i = getelementptr inbounds i32* %88, i64 %idxprom285.i.i
  %144 = load i32* %arrayidx286.i.i, align 4, !tbaa !5
  %cmp287.i.i = icmp sgt i32 %143, %144
  br i1 %cmp287.i.i, label %if.then289.i.i, label %if.else303.i.i

if.then289.i.i:                                   ; preds = %if.else278.i.i
  %neg295.i.i = xor i64 %141, -1
  %arrayidx301.i.i = getelementptr inbounds %struct.simple_bitmap_def* %call7.i.i, i64 0, i32 3, i64 %idxprom258.i.i
  %145 = load i64* %arrayidx301.i.i, align 8, !tbaa !48
  %and302.i.i = and i64 %145, %neg295.i.i
  store i64 %and302.i.i, i64* %arrayidx301.i.i, align 8, !tbaa !48
  br label %if.end335.i.i

if.else303.i.i:                                   ; preds = %if.else278.i.i
  %cmp312.i.i = icmp slt i32 %143, %144
  br i1 %cmp312.i.i, label %if.then314.i.i, label %if.end335.i.i

if.then314.i.i:                                   ; preds = %if.else303.i.i
  %rem317.i.i = and i32 %142, 63
  %sh_prom318.i.i = zext i32 %rem317.i.i to i64
  %shl319.i.i = shl i64 1, %sh_prom318.i.i
  %neg320.i.i = xor i64 %shl319.i.i, -1
  %div323.i.i = lshr i32 %142, 6
  %idxprom324.i.i = zext i32 %div323.i.i to i64
  %arrayidx326.i.i = getelementptr inbounds %struct.simple_bitmap_def* %call7.i.i, i64 0, i32 3, i64 %idxprom324.i.i
  %146 = load i64* %arrayidx326.i.i, align 8, !tbaa !48
  %and327.i.i = and i64 %146, %neg320.i.i
  store i64 %and327.i.i, i64* %arrayidx326.i.i, align 8, !tbaa !48
  store i32 %139, i32* %arrayidx270.i.i, align 4, !tbaa !5
  br label %if.end335.i.i

if.end335.i.i:                                    ; preds = %if.then314.i.i, %if.else303.i.i, %if.then289.i.i, %if.then273.i.i, %land.lhs.true254.i.i, %if.then249.i.i
  %147 = load i64* %arrayidx17.i.i, align 8, !tbaa !48
  %or343.i.i = or i64 %147, %103
  store i64 %or343.i.i, i64* %arrayidx17.i.i, align 8, !tbaa !48
  %next_out346.i.i = getelementptr inbounds %struct.haifa_edge* %100, i64 %idxprom146.i.i, i32 3
  %148 = load i32* %next_out346.i.i, align 4, !tbaa !46
  %cmp14.i90.i = icmp eq i32 %148, 0
  br i1 %cmp14.i90.i, label %while.cond18.preheader.i.i, label %lor.lhs.false.i87.i

if.end347.i.i:                                    ; preds = %if.end245.i.i
  %inc348.i.i = add nsw i32 %sp.0.ph.i.i, 1
  %idxprom349.i.i = sext i32 %inc348.i.i to i64
  %arrayidx350.i.i = getelementptr inbounds i32* %90, i64 %idxprom349.i.i
  store i32 %current_edge.01275.i.i, i32* %arrayidx350.i.i, align 4, !tbaa !5
  %149 = load i64* %arrayidx17.i.i, align 8, !tbaa !48
  %or358.i.i = or i64 %149, %103
  store i64 %or358.i.i, i64* %arrayidx17.i.i, align 8, !tbaa !48
  %arrayidx360.i.i = getelementptr inbounds i32* %101, i64 %idxprom246.i.i
  %150 = load i32* %arrayidx360.i.i, align 4, !tbaa !5
  %cmp361.i.i = icmp eq i32 %150, 0
  br i1 %cmp361.i.i, label %if.then363.i.i, label %while.body.outer.i.i

if.then363.i.i:                                   ; preds = %if.end347.i.i
  %inc364.i.i = add nsw i32 %count.01276.i.i, 2
  store i32 %inc364.i.i, i32* %arrayidx247.i.i, align 4, !tbaa !5
  br label %while.body.outer.i.i

for.cond369.i.i:                                  ; preds = %for.body372.i.i
  %151 = trunc i64 %indvars.iv.next1382.i.i to i32
  %cmp370.i.i = icmp slt i32 %151, %96
  br i1 %cmp370.i.i, label %for.body372.i.i, label %for.body385.lr.ph.i.i

for.body372.i.i:                                  ; preds = %for.cond369.preheader.i.i, %for.cond369.i.i
  %indvars.iv1381.i.i = phi i64 [ %indvars.iv.next1382.i.i, %for.cond369.i.i ], [ 0, %for.cond369.preheader.i.i ]
  %arrayidx374.i.i = getelementptr inbounds i32* %88, i64 %indvars.iv1381.i.i
  %152 = load i32* %arrayidx374.i.i, align 4, !tbaa !5
  %cmp375.i.i = icmp eq i32 %152, 0
  %indvars.iv.next1382.i.i = add nuw nsw i64 %indvars.iv1381.i.i, 1
  br i1 %cmp375.i.i, label %for.body385.lr.ph.i.i, label %for.cond369.i.i

for.body385.lr.ph.i.i:                            ; preds = %for.body372.i.i, %for.cond369.i.i
  %unreachable.0.i.i = phi i32 [ 1, %for.body372.i.i ], [ 0, %for.cond369.i.i ]
  %153 = icmp sgt i32 %96, 1
  %.op.i.i = add i32 %96, -1
  %154 = zext i32 %.op.i.i to i64
  %.op1391.i.i = shl nuw nsw i64 %154, 2
  %.op1391.op.i.i = add i64 %.op1391.i.i, 4
  %155 = select i1 %153, i64 %.op1391.op.i.i, i64 4
  call void @llvm.memset.p0i8.i64(i8* %call3.i.i, i8 0, i64 %155, i32 4, i1 false) #4
  br label %for.cond391.preheader.i.i

for.cond391.preheader.i.i:                        ; preds = %for.body385.lr.ph.i.i, %for.cond369.preheader.i.i
  %unreachable.01394.i.i = phi i32 [ %unreachable.0.i.i, %for.body385.lr.ph.i.i ], [ 0, %for.cond369.preheader.i.i ]
  %cmp3921266.i.i = icmp sgt i32 %84, 0
  br i1 %cmp3921266.i.i, label %for.body394.lr.ph.i.i, label %for.end407.i.i

for.body394.lr.ph.i.i:                            ; preds = %for.cond391.preheader.i.i
  %index_to_edge.i91.i = getelementptr inbounds %struct.edge_list* %call18.i, i64 0, i32 2
  %156 = load %struct.edge_def*** %index_to_edge.i91.i, align 8, !tbaa !41
  br label %for.body394.i.i

for.body394.i.i:                                  ; preds = %for.inc405.i.i, %for.body394.lr.ph.i.i
  %indvars.iv1377.i.i = phi i64 [ 0, %for.body394.lr.ph.i.i ], [ %indvars.iv.next1378.i.i, %for.inc405.i.i ]
  %arrayidx396.i.i = getelementptr inbounds %struct.edge_def** %156, i64 %indvars.iv1377.i.i
  %157 = load %struct.edge_def** %arrayidx396.i.i, align 8, !tbaa !1
  %dest.i92.i = getelementptr inbounds %struct.edge_def* %157, i64 0, i32 3
  %158 = load %struct.basic_block_def** %dest.i92.i, align 8, !tbaa !42
  %cmp397.i.i = icmp eq %struct.basic_block_def* %158, getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1)
  br i1 %cmp397.i.i, label %for.inc405.i.i, label %if.then399.i.i

if.then399.i.i:                                   ; preds = %for.body394.i.i
  %index.i93.i = getelementptr inbounds %struct.basic_block_def* %158, i64 0, i32 11
  %159 = load i32* %index.i93.i, align 4, !tbaa !21
  %idxprom401.i.i = sext i32 %159 to i64
  %arrayidx402.i.i = getelementptr inbounds i32* %88, i64 %idxprom401.i.i
  %160 = load i32* %arrayidx402.i.i, align 4, !tbaa !5
  %inc403.i.i = add nsw i32 %160, 1
  store i32 %inc403.i.i, i32* %arrayidx402.i.i, align 4, !tbaa !5
  br label %for.inc405.i.i

for.inc405.i.i:                                   ; preds = %if.then399.i.i, %for.body394.i.i
  %indvars.iv.next1378.i.i = add nuw nsw i64 %indvars.iv1377.i.i, 1
  %lftr.wideiv235 = trunc i64 %indvars.iv.next1378.i.i to i32
  %exitcond236 = icmp eq i32 %lftr.wideiv235, %84
  br i1 %exitcond236, label %for.end407.i.i, label %for.body394.i.i

for.end407.i.i:                                   ; preds = %for.inc405.i.i, %for.cond391.preheader.i.i
  %tobool408.i.i = icmp eq i32 %unreachable.01394.i.i, 0
  br i1 %tobool408.i.i, label %if.then409.i.i, label %for.cond751.preheader.i.i

if.then409.i.i:                                   ; preds = %for.end407.i.i
  %tobool410.i.i = icmp ne i8 %no_loops.0.ph1156.lcssa.i.i, 0
  br i1 %tobool410.i.i, label %if.then411.i.i, label %if.end415.i.i

if.then411.i.i:                                   ; preds = %if.then409.i.i
  %arrayidx413.i.i = getelementptr inbounds %struct.simple_bitmap_def* %call8.i83.i, i64 0, i32 3, i64 0
  %161 = load i64* %arrayidx413.i.i, align 8, !tbaa !48
  %or414.i.i = or i64 %161, 1
  store i64 %or414.i.i, i64* %arrayidx413.i.i, align 8, !tbaa !48
  br label %if.end415.i.i

if.end415.i.i:                                    ; preds = %if.then411.i.i, %if.then409.i.i
  %conv416.i.i = sext i32 %96 to i64
  %mul417.i.i = shl nsw i64 %conv416.i.i, 2
  %call418.i.i = call noalias i8* @xmalloc(i64 %mul417.i.i) #4
  %162 = bitcast i8* %call418.i.i to i32*
  %163 = load i32* @n_basic_blocks, align 4, !tbaa !5
  %cmp4201260.i.i = icmp sgt i32 %163, 0
  br i1 %cmp4201260.i.i, label %for.body422.i.i, label %for.end749.i.i

for.body422.i.i:                                  ; preds = %if.end415.i.i, %for.inc747.i.i
  %164 = phi i32 [ %256, %for.inc747.i.i ], [ %163, %if.end415.i.i ]
  %indvars.iv1375.i.i = phi i64 [ %indvars.iv.next1376.i.i, %for.inc747.i.i ], [ 0, %if.end415.i.i ]
  %idx.01261.i.i = phi i32 [ %idx.2.i.i, %for.inc747.i.i ], [ 0, %if.end415.i.i ]
  %165 = trunc i64 %indvars.iv1375.i.i to i32
  %div423.i.i = lshr i64 %indvars.iv1375.i.i, 6
  %idxprom424.i.i = and i64 %div423.i.i, 67108863
  %arrayidx426.i.i = getelementptr inbounds %struct.simple_bitmap_def* %call8.i83.i, i64 0, i32 3, i64 %idxprom424.i.i
  %166 = load i64* %arrayidx426.i.i, align 8, !tbaa !48
  %rem427.i.i = and i64 %indvars.iv1375.i.i, 63
  %167 = shl i64 1, %rem427.i.i
  %and4301076.i.i = and i64 %166, %167
  %tobool431.i.i = icmp eq i64 %and4301076.i.i, 0
  br i1 %tobool431.i.i, label %for.inc747.i.i, label %land.lhs.true432.i.i

land.lhs.true432.i.i:                             ; preds = %for.body422.i.i
  %arrayidx436.i.i = getelementptr inbounds %struct.simple_bitmap_def* %call7.i.i, i64 0, i32 3, i64 %idxprom424.i.i
  %168 = load i64* %arrayidx436.i.i, align 8, !tbaa !48
  %and4401077.i.i = and i64 %168, %167
  %tobool441.i.i = icmp eq i64 %and4401077.i.i, 0
  br i1 %tobool441.i.i, label %for.inc747.i.i, label %for.cond444.preheader.i.i

for.cond444.preheader.i.i:                        ; preds = %land.lhs.true432.i.i
  %cmp4451182.i.i = icmp sgt i32 %164, 0
  br i1 %cmp4451182.i.i, label %for.body447.i.i, label %for.end472.i.i

for.body447.i.i:                                  ; preds = %for.cond444.preheader.i.i, %for.inc470.i.i
  %indvars.iv1364.i.i = phi i64 [ %indvars.iv.next1365.i.i, %for.inc470.i.i ], [ 0, %for.cond444.preheader.i.i ]
  %arrayidx449.i.i = getelementptr inbounds i32* %86, i64 %indvars.iv1364.i.i
  %169 = load i32* %arrayidx449.i.i, align 4, !tbaa !5
  %cmp450.i.i = icmp ne i32 %165, %169
  %170 = trunc i64 %indvars.iv1364.i.i to i32
  %cmp453.i.i = icmp eq i32 %165, %170
  %or.cond1082.i.i = or i1 %cmp450.i.i, %cmp453.i.i
  br i1 %or.cond1082.i.i, label %for.inc470.i.i, label %if.then455.i.i

if.then455.i.i:                                   ; preds = %for.body447.i.i
  %arrayidx459.i.i = getelementptr inbounds %struct.simple_bitmap_def** %call17.i, i64 %indvars.iv1364.i.i
  %171 = load %struct.simple_bitmap_def** %arrayidx459.i.i, align 8, !tbaa !1
  %arrayidx461.i.i = getelementptr inbounds %struct.simple_bitmap_def* %171, i64 0, i32 3, i64 %idxprom424.i.i
  %172 = load i64* %arrayidx461.i.i, align 8, !tbaa !48
  %and4651079.i.i = and i64 %172, %167
  %tobool466.i.i = icmp eq i64 %and4651079.i.i, 0
  br i1 %tobool466.i.i, label %for.end472.i.i, label %for.inc470.i.i

for.inc470.i.i:                                   ; preds = %if.then455.i.i, %for.body447.i.i
  %indvars.iv.next1365.i.i = add nuw nsw i64 %indvars.iv1364.i.i, 1
  %173 = trunc i64 %indvars.iv.next1365.i.i to i32
  %cmp445.i.i = icmp slt i32 %173, %164
  br i1 %cmp445.i.i, label %for.body447.i.i, label %for.end472.i.i

for.end472.i.i:                                   ; preds = %for.inc470.i.i, %if.then455.i.i, %for.cond444.preheader.i.i
  %j.0.lcssa.i.i = phi i32 [ 0, %for.cond444.preheader.i.i ], [ %173, %for.inc470.i.i ], [ %170, %if.then455.i.i ]
  %cmp473.i.i = icmp eq i32 %j.0.lcssa.i.i, %164
  br i1 %cmp473.i.i, label %if.end476.i.i, label %for.inc747.i.i

if.end476.i.i:                                    ; preds = %for.end472.i.i
  %arrayidx478.i.i = getelementptr inbounds i32* %86, i64 %indvars.iv1375.i.i
  %174 = load i32* %arrayidx478.i.i, align 4, !tbaa !5
  %175 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !1
  %data.i96.i = getelementptr inbounds %struct.varray_head_tag* %175, i64 0, i32 4
  %bb.i97.i = bitcast %union.varray_data_tag* %data.i96.i to [1 x %struct.basic_block_def*]*
  %arrayidx480.i.i = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb.i97.i, i64 0, i64 %indvars.iv1375.i.i
  %176 = load %struct.basic_block_def** %arrayidx480.i.i, align 8, !tbaa !1
  %succ.i.i = getelementptr inbounds %struct.basic_block_def* %176, i64 0, i32 5
  %e443.01185.i.i = load %struct.edge_def** %succ.i.i, align 8
  %tobool4821186.i.i = icmp eq %struct.edge_def* %e443.01185.i.i, null
  br i1 %tobool4821186.i.i, label %for.end495.i.i, label %for.body483.i.i

for.body483.i.i:                                  ; preds = %if.end476.i.i, %for.inc494.i.i
  %e443.01187.i.i = phi %struct.edge_def* [ %e443.0.i.i, %for.inc494.i.i ], [ %e443.01185.i.i, %if.end476.i.i ]
  %dest484.i.i = getelementptr inbounds %struct.edge_def* %e443.01187.i.i, i64 0, i32 3
  %177 = load %struct.basic_block_def** %dest484.i.i, align 8, !tbaa !42
  %cmp485.i.i = icmp eq %struct.basic_block_def* %177, getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1)
  br i1 %cmp485.i.i, label %for.inc494.i.i, label %if.then487.i.i

if.then487.i.i:                                   ; preds = %for.body483.i.i
  %index489.i.i = getelementptr inbounds %struct.basic_block_def* %177, i64 0, i32 11
  %178 = load i32* %index489.i.i, align 4, !tbaa !21
  %idxprom490.i.i = sext i32 %178 to i64
  %arrayidx491.i.i = getelementptr inbounds i32* %88, i64 %idxprom490.i.i
  %179 = load i32* %arrayidx491.i.i, align 4, !tbaa !5
  %dec492.i.i = add nsw i32 %179, -1
  store i32 %dec492.i.i, i32* %arrayidx491.i.i, align 4, !tbaa !5
  br label %for.inc494.i.i

for.inc494.i.i:                                   ; preds = %if.then487.i.i, %for.body483.i.i
  %succ_next.i.i = getelementptr inbounds %struct.edge_def* %e443.01187.i.i, i64 0, i32 1
  %e443.0.i.i = load %struct.edge_def** %succ_next.i.i, align 8
  %tobool482.i.i = icmp eq %struct.edge_def* %e443.0.i.i, null
  br i1 %tobool482.i.i, label %for.end495.i.i, label %for.body483.i.i

for.end495.i.i:                                   ; preds = %for.inc494.i.i, %if.end476.i.i
  %end.i98.i = getelementptr inbounds %struct.basic_block_def* %176, i64 0, i32 1
  %180 = load %struct.rtx_def** %end.i98.i, align 8, !tbaa !34
  %arrayidx500.i.i = getelementptr inbounds %struct.rtx_def* %180, i64 0, i32 1, i64 0
  %rtint.i.i = bitcast %union.rtunion_def* %arrayidx500.i.i to i32*
  %181 = load i32* %rtint.i.i, align 4, !tbaa !5
  %idxprom501.i.i = sext i32 %181 to i64
  %182 = load %struct.haifa_insn_data** @h_i_d, align 8, !tbaa !1
  %luid.i.i = getelementptr inbounds %struct.haifa_insn_data* %182, i64 %idxprom501.i.i, i32 2
  %183 = load i32* %luid.i.i, align 4, !tbaa !49
  %head507.i.i = getelementptr inbounds %struct.basic_block_def* %176, i64 0, i32 0
  %184 = load %struct.rtx_def** %head507.i.i, align 8, !tbaa !50
  %arrayidx509.i.i = getelementptr inbounds %struct.rtx_def* %184, i64 0, i32 1, i64 0
  %rtint510.i.i = bitcast %union.rtunion_def* %arrayidx509.i.i to i32*
  %185 = load i32* %rtint510.i.i, align 4, !tbaa !5
  %idxprom511.i.i = sext i32 %185 to i64
  %luid513.i.i = getelementptr inbounds %struct.haifa_insn_data* %182, i64 %idxprom511.i.i, i32 2
  %186 = load i32* %luid513.i.i, align 4, !tbaa !49
  %sub.i.i = sub nsw i32 %183, %186
  br i1 %tobool410.i.i, label %for.cond516.preheader.i.i, label %if.else564.i.i

for.cond516.preheader.i.i:                        ; preds = %for.end495.i.i
  br i1 %cmp4451182.i.i, label %for.body519.i.i, label %for.inc747.i.i

for.body519.i.i:                                  ; preds = %for.cond516.preheader.i.i, %for.inc561.i.i
  %indvars.iv1366.i.i = phi i64 [ %indvars.iv.next1367.i.i, %for.inc561.i.i ], [ 0, %for.cond516.preheader.i.i ]
  %tail.01203.i.i = phi i32 [ %tail.1.i.i, %for.inc561.i.i ], [ -1, %for.cond516.preheader.i.i ]
  %sub11371202.i.i = phi i32 [ %sub1136.i.i, %for.inc561.i.i ], [ %sub.i.i, %for.cond516.preheader.i.i ]
  %187 = phi i32 [ %200, %for.inc561.i.i ], [ 1, %for.cond516.preheader.i.i ]
  %arrayidx523.i.i = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb.i97.i, i64 0, i64 %indvars.iv1366.i.i
  %188 = load %struct.basic_block_def** %arrayidx523.i.i, align 8, !tbaa !1
  %succ524.i.i = getelementptr inbounds %struct.basic_block_def* %188, i64 0, i32 5
  %189 = load %struct.edge_def** %succ524.i.i, align 8, !tbaa !51
  %tobool525.i.i = icmp eq %struct.edge_def* %189, null
  br i1 %tobool525.i.i, label %for.inc561.i.i, label %land.lhs.true526.i.i

land.lhs.true526.i.i:                             ; preds = %for.body519.i.i
  %dest532.i.i = getelementptr inbounds %struct.edge_def* %189, i64 0, i32 3
  %190 = load %struct.basic_block_def** %dest532.i.i, align 8, !tbaa !42
  %cmp533.i.i = icmp eq %struct.basic_block_def* %190, getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1)
  br i1 %cmp533.i.i, label %land.lhs.true535.i.i, label %for.inc561.i.i

land.lhs.true535.i.i:                             ; preds = %land.lhs.true526.i.i
  %succ_next541.i.i = getelementptr inbounds %struct.edge_def* %189, i64 0, i32 1
  %191 = load %struct.edge_def** %succ_next541.i.i, align 8, !tbaa !52
  %cmp542.i.i = icmp eq %struct.edge_def* %191, null
  br i1 %cmp542.i.i, label %if.then544.i.i, label %for.inc561.i.i

if.then544.i.i:                                   ; preds = %land.lhs.true535.i.i
  %inc545.i.i = add nsw i32 %tail.01203.i.i, 1
  %idxprom546.i.i = sext i32 %inc545.i.i to i64
  %arrayidx547.i.i = getelementptr inbounds i32* %162, i64 %idxprom546.i.i
  %192 = trunc i64 %indvars.iv1366.i.i to i32
  store i32 %192, i32* %arrayidx547.i.i, align 4, !tbaa !5
  %rem548.i.i = and i64 %indvars.iv1366.i.i, 63
  %shl550.i.i = shl i64 1, %rem548.i.i
  %div551.i.i = lshr i64 %indvars.iv1366.i.i, 6
  %idxprom552.i.i = and i64 %div551.i.i, 67108863
  %arrayidx554.i.i = getelementptr inbounds %struct.simple_bitmap_def* %call10.i84.i, i64 0, i32 3, i64 %idxprom552.i.i
  %193 = load i64* %arrayidx554.i.i, align 8, !tbaa !48
  %or555.i.i = or i64 %193, %shl550.i.i
  store i64 %or555.i.i, i64* %arrayidx554.i.i, align 8, !tbaa !48
  %inc.i.i99.i = add nsw i32 %187, 1
  %end.i.i.i = getelementptr inbounds %struct.basic_block_def* %188, i64 0, i32 1
  %194 = load %struct.rtx_def** %end.i.i.i, align 8, !tbaa !34
  %arrayidx1.i.i.i = getelementptr inbounds %struct.rtx_def* %194, i64 0, i32 1, i64 0
  %rtint.i.i.i = bitcast %union.rtunion_def* %arrayidx1.i.i.i to i32*
  %195 = load i32* %rtint.i.i.i, align 4, !tbaa !5
  %idxprom2.i.i.i = sext i32 %195 to i64
  %luid.i.i.i = getelementptr inbounds %struct.haifa_insn_data* %182, i64 %idxprom2.i.i.i, i32 2
  %196 = load i32* %luid.i.i.i, align 4, !tbaa !49
  %head.i.i.i = getelementptr inbounds %struct.basic_block_def* %188, i64 0, i32 0
  %197 = load %struct.rtx_def** %head.i.i.i, align 8, !tbaa !50
  %arrayidx9.i.i.i = getelementptr inbounds %struct.rtx_def* %197, i64 0, i32 1, i64 0
  %rtint10.i.i.i = bitcast %union.rtunion_def* %arrayidx9.i.i.i to i32*
  %198 = load i32* %rtint10.i.i.i, align 4, !tbaa !5
  %idxprom11.i.i100.i = sext i32 %198 to i64
  %luid13.i.i.i = getelementptr inbounds %struct.haifa_insn_data* %182, i64 %idxprom11.i.i100.i, i32 2
  %199 = load i32* %luid13.i.i.i, align 4, !tbaa !49
  %sub.i.i.i = sub nsw i32 %196, %199
  %add.i.i.i = add nsw i32 %sub.i.i.i, %sub11371202.i.i
  %cmp.i.i101.i = icmp sgt i32 %187, 9
  %cmp14.i.i.i = icmp sgt i32 %add.i.i.i, 100
  %tobool557.demorgan.i.i = or i1 %cmp.i.i101.i, %cmp14.i.i.i
  br i1 %tobool557.demorgan.i.i, label %for.inc747.i.i, label %for.inc561.i.i

while.cond.preheader.i.i:                         ; preds = %for.inc603.i.i, %for.inc561.i.i
  %.ph1144.i.i = phi i32 [ %200, %for.inc561.i.i ], [ %214, %for.inc603.i.i ]
  %sub1139.ph1145.i.i = phi i32 [ %sub1136.i.i, %for.inc561.i.i ], [ %sub1142.i.i, %for.inc603.i.i ]
  %tail.4.ph1147.i.i = phi i32 [ %tail.1.i.i, %for.inc561.i.i ], [ %tail.3.i.i, %for.inc603.i.i ]
  %cmp6061234.i.i = icmp sgt i32 %tail.4.ph1147.i.i, -1
  br i1 %cmp6061234.i.i, label %while.body611.i.i, label %for.inc747.i.i

for.inc561.i.i:                                   ; preds = %if.then544.i.i, %land.lhs.true535.i.i, %land.lhs.true526.i.i, %for.body519.i.i
  %200 = phi i32 [ %inc.i.i99.i, %if.then544.i.i ], [ %187, %land.lhs.true535.i.i ], [ %187, %land.lhs.true526.i.i ], [ %187, %for.body519.i.i ]
  %sub1136.i.i = phi i32 [ %add.i.i.i, %if.then544.i.i ], [ %sub11371202.i.i, %land.lhs.true535.i.i ], [ %sub11371202.i.i, %land.lhs.true526.i.i ], [ %sub11371202.i.i, %for.body519.i.i ]
  %tail.1.i.i = phi i32 [ %inc545.i.i, %if.then544.i.i ], [ %tail.01203.i.i, %land.lhs.true535.i.i ], [ %tail.01203.i.i, %land.lhs.true526.i.i ], [ %tail.01203.i.i, %for.body519.i.i ]
  %indvars.iv.next1367.i.i = add nuw nsw i64 %indvars.iv1366.i.i, 1
  %201 = trunc i64 %indvars.iv.next1367.i.i to i32
  %cmp517.i.i = icmp slt i32 %201, %164
  br i1 %cmp517.i.i, label %for.body519.i.i, label %while.cond.preheader.i.i

if.else564.i.i:                                   ; preds = %for.end495.i.i
  %pred.i102.i = getelementptr inbounds %struct.basic_block_def* %176, i64 0, i32 4
  %e565.01188.i.i = load %struct.edge_def** %pred.i102.i, align 8
  %tobool5711189.i.i = icmp eq %struct.edge_def* %e565.01188.i.i, null
  br i1 %tobool5711189.i.i, label %for.inc747.i.i, label %for.body572.i.i

for.body572.i.i:                                  ; preds = %if.else564.i.i, %for.inc603.i.i
  %e565.01192.i.i = phi %struct.edge_def* [ %e565.0.i.i, %for.inc603.i.i ], [ %e565.01188.i.i, %if.else564.i.i ]
  %tail.21191.i.i = phi i32 [ %tail.3.i.i, %for.inc603.i.i ], [ -1, %if.else564.i.i ]
  %sub11411190.i.i = phi i32 [ %sub1142.i.i, %for.inc603.i.i ], [ %sub.i.i, %if.else564.i.i ]
  %202 = phi i32 [ %214, %for.inc603.i.i ], [ 1, %if.else564.i.i ]
  %src.i103.i = getelementptr inbounds %struct.edge_def* %e565.01192.i.i, i64 0, i32 2
  %203 = load %struct.basic_block_def** %src.i103.i, align 8, !tbaa !38
  %cmp573.i.i = icmp eq %struct.basic_block_def* %203, getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0)
  br i1 %cmp573.i.i, label %for.inc603.i.i, label %if.end576.i.i

if.end576.i.i:                                    ; preds = %for.body572.i.i
  %index578.i.i = getelementptr inbounds %struct.basic_block_def* %203, i64 0, i32 11
  %204 = load i32* %index578.i.i, align 4, !tbaa !21
  %idxprom579.i.i = sext i32 %204 to i64
  %arrayidx580.i.i = getelementptr inbounds i32* %86, i64 %idxprom579.i.i
  %205 = load i32* %arrayidx580.i.i, align 4, !tbaa !5
  %cmp581.i.i = icmp ne i32 %205, %174
  %cmp584.i.i = icmp eq i32 %204, %165
  %or.cond1083.i.i = or i1 %cmp581.i.i, %cmp584.i.i
  br i1 %or.cond1083.i.i, label %for.inc603.i.i, label %if.then586.i.i

if.then586.i.i:                                   ; preds = %if.end576.i.i
  %inc587.i.i = add nsw i32 %tail.21191.i.i, 1
  %idxprom588.i.i = sext i32 %inc587.i.i to i64
  %arrayidx589.i.i = getelementptr inbounds i32* %162, i64 %idxprom588.i.i
  store i32 %204, i32* %arrayidx589.i.i, align 4, !tbaa !5
  %rem590.i.i = and i32 %204, 63
  %sh_prom591.i.i = zext i32 %rem590.i.i to i64
  %shl592.i.i = shl i64 1, %sh_prom591.i.i
  %div593.i.i = lshr i32 %204, 6
  %idxprom594.i.i = zext i32 %div593.i.i to i64
  %arrayidx596.i.i = getelementptr inbounds %struct.simple_bitmap_def* %call10.i84.i, i64 0, i32 3, i64 %idxprom594.i.i
  %206 = load i64* %arrayidx596.i.i, align 8, !tbaa !48
  %or597.i.i = or i64 %206, %shl592.i.i
  store i64 %or597.i.i, i64* %arrayidx596.i.i, align 8, !tbaa !48
  %inc.i1107.i.i = add nsw i32 %202, 1
  %arrayidx.i1111.i.i = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb.i97.i, i64 0, i64 %idxprom579.i.i
  %207 = load %struct.basic_block_def** %arrayidx.i1111.i.i, align 8, !tbaa !1
  %end.i1112.i.i = getelementptr inbounds %struct.basic_block_def* %207, i64 0, i32 1
  %208 = load %struct.rtx_def** %end.i1112.i.i, align 8, !tbaa !34
  %arrayidx1.i1113.i.i = getelementptr inbounds %struct.rtx_def* %208, i64 0, i32 1, i64 0
  %rtint.i1114.i.i = bitcast %union.rtunion_def* %arrayidx1.i1113.i.i to i32*
  %209 = load i32* %rtint.i1114.i.i, align 4, !tbaa !5
  %idxprom2.i1115.i.i = sext i32 %209 to i64
  %luid.i1116.i.i = getelementptr inbounds %struct.haifa_insn_data* %182, i64 %idxprom2.i1115.i.i, i32 2
  %210 = load i32* %luid.i1116.i.i, align 4, !tbaa !49
  %head.i1117.i.i = getelementptr inbounds %struct.basic_block_def* %207, i64 0, i32 0
  %211 = load %struct.rtx_def** %head.i1117.i.i, align 8, !tbaa !50
  %arrayidx9.i1118.i.i = getelementptr inbounds %struct.rtx_def* %211, i64 0, i32 1, i64 0
  %rtint10.i1119.i.i = bitcast %union.rtunion_def* %arrayidx9.i1118.i.i to i32*
  %212 = load i32* %rtint10.i1119.i.i, align 4, !tbaa !5
  %idxprom11.i1120.i.i = sext i32 %212 to i64
  %luid13.i1121.i.i = getelementptr inbounds %struct.haifa_insn_data* %182, i64 %idxprom11.i1120.i.i, i32 2
  %213 = load i32* %luid13.i1121.i.i, align 4, !tbaa !49
  %sub.i1122.i.i = sub nsw i32 %210, %213
  %add.i1123.i.i = add nsw i32 %sub.i1122.i.i, %sub11411190.i.i
  %cmp.i1124.i.i = icmp sgt i32 %202, 9
  %cmp14.i1125.i.i = icmp sgt i32 %add.i1123.i.i, 100
  %tobool599.demorgan.i.i = or i1 %cmp.i1124.i.i, %cmp14.i1125.i.i
  br i1 %tobool599.demorgan.i.i, label %for.inc747.i.i, label %for.inc603.i.i

for.inc603.i.i:                                   ; preds = %if.then586.i.i, %if.end576.i.i, %for.body572.i.i
  %214 = phi i32 [ %202, %for.body572.i.i ], [ %inc.i1107.i.i, %if.then586.i.i ], [ %202, %if.end576.i.i ]
  %sub1142.i.i = phi i32 [ %sub11411190.i.i, %for.body572.i.i ], [ %add.i1123.i.i, %if.then586.i.i ], [ %sub11411190.i.i, %if.end576.i.i ]
  %tail.3.i.i = phi i32 [ %tail.21191.i.i, %for.body572.i.i ], [ %inc587.i.i, %if.then586.i.i ], [ %tail.21191.i.i, %if.end576.i.i ]
  %pred_next.i104.i = getelementptr inbounds %struct.edge_def* %e565.01192.i.i, i64 0, i32 0
  %e565.0.i.i = load %struct.edge_def** %pred_next.i104.i, align 8
  %tobool571.i.i = icmp eq %struct.edge_def* %e565.0.i.i, null
  br i1 %tobool571.i.i, label %while.cond.preheader.i.i, label %for.body572.i.i

while.cond.loopexit.i.i:                          ; preds = %for.inc666.i.i, %lor.lhs.false629.i.i, %for.body623.i.i, %while.body611.i.i
  %.ph.i.i = phi i32 [ %216, %while.body611.i.i ], [ %232, %for.inc666.i.i ], [ %219, %lor.lhs.false629.i.i ], [ %219, %for.body623.i.i ]
  %sub1139.ph.i.i = phi i32 [ %sub11391237.i.i, %while.body611.i.i ], [ %sub1140.i.i, %for.inc666.i.i ], [ %sub11381215.i.i, %lor.lhs.false629.i.i ], [ %sub11381215.i.i, %for.body623.i.i ]
  %tail.4.ph.i.i = phi i32 [ %tail.41239.i.i, %while.body611.i.i ], [ %tail.6.i.i, %for.inc666.i.i ], [ -1, %lor.lhs.false629.i.i ], [ -1, %for.body623.i.i ]
  %215 = trunc i64 %indvars.iv.next1369.i.i to i32
  %cmp606.i.i = icmp slt i32 %215, %tail.4.ph.i.i
  br i1 %cmp606.i.i, label %while.body611.i.i, label %while.end669.i.i

while.body611.i.i:                                ; preds = %while.cond.preheader.i.i, %while.cond.loopexit.i.i
  %indvars.iv1368.i.i = phi i64 [ %indvars.iv.next1369.i.i, %while.cond.loopexit.i.i ], [ -1, %while.cond.preheader.i.i ]
  %tail.41239.i.i = phi i32 [ %tail.4.ph.i.i, %while.cond.loopexit.i.i ], [ %tail.4.ph1147.i.i, %while.cond.preheader.i.i ]
  %sub11391237.i.i = phi i32 [ %sub1139.ph.i.i, %while.cond.loopexit.i.i ], [ %sub1139.ph1145.i.i, %while.cond.preheader.i.i ]
  %216 = phi i32 [ %.ph.i.i, %while.cond.loopexit.i.i ], [ %.ph1144.i.i, %while.cond.preheader.i.i ]
  %indvars.iv.next1369.i.i = add nsw i64 %indvars.iv1368.i.i, 1
  %arrayidx615.i.i = getelementptr inbounds i32* %162, i64 %indvars.iv.next1369.i.i
  %217 = load i32* %arrayidx615.i.i, align 4, !tbaa !5
  %idxprom616.i.i = sext i32 %217 to i64
  %arrayidx619.i.i = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb.i97.i, i64 0, i64 %idxprom616.i.i
  %218 = load %struct.basic_block_def** %arrayidx619.i.i, align 8, !tbaa !1
  %pred620.i.i = getelementptr inbounds %struct.basic_block_def* %218, i64 0, i32 4
  %e612.01213.i.i = load %struct.edge_def** %pred620.i.i, align 8
  %tobool6221214.i.i = icmp eq %struct.edge_def* %e612.01213.i.i, null
  br i1 %tobool6221214.i.i, label %while.cond.loopexit.i.i, label %for.body623.i.i

for.body623.i.i:                                  ; preds = %while.body611.i.i, %for.inc666.i.i
  %e612.01217.i.i = phi %struct.edge_def* [ %e612.0.i.i, %for.inc666.i.i ], [ %e612.01213.i.i, %while.body611.i.i ]
  %tail.51216.i.i = phi i32 [ %tail.6.i.i, %for.inc666.i.i ], [ %tail.41239.i.i, %while.body611.i.i ]
  %sub11381215.i.i = phi i32 [ %sub1140.i.i, %for.inc666.i.i ], [ %sub11391237.i.i, %while.body611.i.i ]
  %219 = phi i32 [ %232, %for.inc666.i.i ], [ %216, %while.body611.i.i ]
  %src624.i.i = getelementptr inbounds %struct.edge_def* %e612.01217.i.i, i64 0, i32 2
  %220 = load %struct.basic_block_def** %src624.i.i, align 8, !tbaa !38
  %index625.i.i = getelementptr inbounds %struct.basic_block_def* %220, i64 0, i32 11
  %221 = load i32* %index625.i.i, align 4, !tbaa !21
  %cmp627.i.i = icmp eq %struct.basic_block_def* %220, getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0)
  br i1 %cmp627.i.i, label %while.cond.loopexit.i.i, label %lor.lhs.false629.i.i

lor.lhs.false629.i.i:                             ; preds = %for.body623.i.i
  %idxprom630.i.i = sext i32 %221 to i64
  %arrayidx631.i.i = getelementptr inbounds i32* %86, i64 %idxprom630.i.i
  %222 = load i32* %arrayidx631.i.i, align 4, !tbaa !5
  %cmp632.i.i = icmp eq i32 %222, %174
  br i1 %cmp632.i.i, label %if.else635.i.i, label %while.cond.loopexit.i.i

if.else635.i.i:                                   ; preds = %lor.lhs.false629.i.i
  %div636.i.i = lshr i32 %221, 6
  %idxprom637.i.i = zext i32 %div636.i.i to i64
  %arrayidx639.i.i = getelementptr inbounds %struct.simple_bitmap_def* %call10.i84.i, i64 0, i32 3, i64 %idxprom637.i.i
  %223 = load i64* %arrayidx639.i.i, align 8, !tbaa !48
  %rem640.i.i = and i32 %221, 63
  %sh_prom641.i.i = zext i32 %rem640.i.i to i64
  %224 = shl i64 1, %sh_prom641.i.i
  %and6431078.i.i = and i64 %223, %224
  %tobool644.i.i = icmp ne i64 %and6431078.i.i, 0
  %cmp646.i.i = icmp eq i32 %221, %165
  %or.cond1085.i.i = or i1 %tobool644.i.i, %cmp646.i.i
  br i1 %or.cond1085.i.i, label %for.inc666.i.i, label %if.then648.i.i

if.then648.i.i:                                   ; preds = %if.else635.i.i
  %inc649.i.i = add nsw i32 %tail.51216.i.i, 1
  %idxprom650.i.i = sext i32 %inc649.i.i to i64
  %arrayidx651.i.i = getelementptr inbounds i32* %162, i64 %idxprom650.i.i
  store i32 %221, i32* %arrayidx651.i.i, align 4, !tbaa !5
  %or659.i.i = or i64 %223, %224
  store i64 %or659.i.i, i64* %arrayidx639.i.i, align 8, !tbaa !48
  %inc.i1086.i.i = add nsw i32 %219, 1
  %arrayidx.i1090.i.i = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb.i97.i, i64 0, i64 %idxprom630.i.i
  %225 = load %struct.basic_block_def** %arrayidx.i1090.i.i, align 8, !tbaa !1
  %end.i1091.i.i = getelementptr inbounds %struct.basic_block_def* %225, i64 0, i32 1
  %226 = load %struct.rtx_def** %end.i1091.i.i, align 8, !tbaa !34
  %arrayidx1.i1092.i.i = getelementptr inbounds %struct.rtx_def* %226, i64 0, i32 1, i64 0
  %rtint.i1093.i.i = bitcast %union.rtunion_def* %arrayidx1.i1092.i.i to i32*
  %227 = load i32* %rtint.i1093.i.i, align 4, !tbaa !5
  %idxprom2.i1094.i.i = sext i32 %227 to i64
  %luid.i1095.i.i = getelementptr inbounds %struct.haifa_insn_data* %182, i64 %idxprom2.i1094.i.i, i32 2
  %228 = load i32* %luid.i1095.i.i, align 4, !tbaa !49
  %head.i1096.i.i = getelementptr inbounds %struct.basic_block_def* %225, i64 0, i32 0
  %229 = load %struct.rtx_def** %head.i1096.i.i, align 8, !tbaa !50
  %arrayidx9.i1097.i.i = getelementptr inbounds %struct.rtx_def* %229, i64 0, i32 1, i64 0
  %rtint10.i1098.i.i = bitcast %union.rtunion_def* %arrayidx9.i1097.i.i to i32*
  %230 = load i32* %rtint10.i1098.i.i, align 4, !tbaa !5
  %idxprom11.i1099.i.i = sext i32 %230 to i64
  %luid13.i1100.i.i = getelementptr inbounds %struct.haifa_insn_data* %182, i64 %idxprom11.i1099.i.i, i32 2
  %231 = load i32* %luid13.i1100.i.i, align 4, !tbaa !49
  %sub.i1101.i.i = sub nsw i32 %228, %231
  %add.i1102.i.i = add nsw i32 %sub.i1101.i.i, %sub11381215.i.i
  %cmp.i1103.i.i = icmp sgt i32 %219, 9
  %cmp14.i1104.i.i = icmp sgt i32 %add.i1102.i.i, 100
  %tobool661.demorgan.i.i = or i1 %cmp.i1103.i.i, %cmp14.i1104.i.i
  br i1 %tobool661.demorgan.i.i, label %for.inc747.i.i, label %for.inc666.i.i

for.inc666.i.i:                                   ; preds = %if.then648.i.i, %if.else635.i.i
  %232 = phi i32 [ %219, %if.else635.i.i ], [ %inc.i1086.i.i, %if.then648.i.i ]
  %sub1140.i.i = phi i32 [ %sub11381215.i.i, %if.else635.i.i ], [ %add.i1102.i.i, %if.then648.i.i ]
  %tail.6.i.i = phi i32 [ %tail.51216.i.i, %if.else635.i.i ], [ %inc649.i.i, %if.then648.i.i ]
  %pred_next667.i.i = getelementptr inbounds %struct.edge_def* %e612.01217.i.i, i64 0, i32 0
  %e612.0.i.i = load %struct.edge_def** %pred_next667.i.i, align 8
  %tobool622.i.i = icmp eq %struct.edge_def* %e612.0.i.i, null
  br i1 %tobool622.i.i, label %while.cond.loopexit.i.i, label %for.body623.i.i

while.end669.i.i:                                 ; preds = %while.cond.loopexit.i.i
  %cmp670.i.i = icmp slt i32 %tail.4.ph.i.i, 0
  br i1 %cmp670.i.i, label %for.inc747.i.i, label %while.body691.lr.ph.lr.ph.i.i

while.body691.lr.ph.lr.ph.i.i:                    ; preds = %while.end669.i.i
  %arrayidx676.i.i = getelementptr inbounds i32* %88, i64 %indvars.iv1375.i.i
  store i32 -1, i32* %arrayidx676.i.i, align 4, !tbaa !5
  %idxprom677.i.i = sext i32 %idx.01261.i.i to i64
  %233 = load i32** @rgn_bb_table, align 8, !tbaa !1
  %arrayidx678.i.i = getelementptr inbounds i32* %233, i64 %idxprom677.i.i
  store i32 %165, i32* %arrayidx678.i.i, align 4, !tbaa !5
  %234 = load i32* @nr_regions, align 4, !tbaa !5
  %idxprom679.i.i = sext i32 %234 to i64
  %235 = load %struct.region** @rgn_table, align 8, !tbaa !1
  %rgn_nr_blocks.i106.i = getelementptr inbounds %struct.region* %235, i64 %idxprom679.i.i, i32 0
  store i32 %.ph.i.i, i32* %rgn_nr_blocks.i106.i, align 4, !tbaa !7
  %inc681.i.i = add i32 %idx.01261.i.i, 1
  %236 = load i32* @nr_regions, align 4, !tbaa !5
  %idxprom682.i.i = sext i32 %236 to i64
  %rgn_blocks.i107.i = getelementptr inbounds %struct.region* %235, i64 %idxprom682.i.i, i32 1
  store i32 %idx.01261.i.i, i32* %rgn_blocks.i107.i, align 4, !tbaa !9
  %237 = load i32* @nr_regions, align 4, !tbaa !5
  %238 = load i32** @containing_rgn, align 8, !tbaa !1
  %arrayidx685.i.i = getelementptr inbounds i32* %238, i64 %indvars.iv1375.i.i
  store i32 %237, i32* %arrayidx685.i.i, align 4, !tbaa !5
  %239 = load i32** @block_to_bb, align 8, !tbaa !1
  %arrayidx687.i.i = getelementptr inbounds i32* %239, i64 %indvars.iv1375.i.i
  store i32 0, i32* %arrayidx687.i.i, align 4, !tbaa !5
  %240 = sext i32 %tail.4.ph.i.i to i64
  %241 = sext i32 %inc681.i.i to i64
  %242 = xor i32 %tail.4.ph.i.i, -1
  %243 = icmp sgt i32 %242, -1
  br label %while.body691.lr.ph.split.us.i.i

while.cond688.loopexit.i.i:                       ; preds = %for.inc737.i.i, %if.then702.i.i
  %cmp689.i.i = icmp sgt i32 %244, 0
  %indvars.iv.next1373.i.i = add nsw i64 %indvars.iv1372.i.i, 1
  br i1 %cmp689.i.i, label %while.body691.lr.ph.split.us.i.i, label %while.end743.i.i

while.body691.lr.ph.split.us.i.i:                 ; preds = %while.cond688.loopexit.i.i, %while.body691.lr.ph.lr.ph.i.i
  %indvars.iv1372.i.i = phi i64 [ %241, %while.body691.lr.ph.lr.ph.i.i ], [ %indvars.iv.next1373.i.i, %while.cond688.loopexit.i.i ]
  %indvars.iv1370.i.i = phi i64 [ %240, %while.body691.lr.ph.lr.ph.i.i ], [ %indvars.iv.next1371.i.i, %while.cond688.loopexit.i.i ]
  %head.1.ph1257.i.i = phi i32 [ %215, %while.body691.lr.ph.lr.ph.i.i ], [ %tail.7.head.1.us.i.i, %while.cond688.loopexit.i.i ]
  %count.1.ph1254.i.i = phi i32 [ 0, %while.body691.lr.ph.lr.ph.i.i ], [ %inc709.i.i, %while.cond688.loopexit.i.i ]
  %244 = trunc i64 %indvars.iv1370.i.i to i32
  br label %while.body691.us.i.i

while.body691.us.i.i:                             ; preds = %while.body691.us.i.i, %while.body691.lr.ph.split.us.i.i
  %head.11245.us.i.i = phi i32 [ %head.1.ph1257.i.i, %while.body691.lr.ph.split.us.i.i ], [ %dec741.us.i.i, %while.body691.us.i.i ]
  %cmp692.us.i.i = icmp slt i32 %head.11245.us.i.i, 0
  %tail.7.head.1.us.i.i = select i1 %cmp692.us.i.i, i32 %244, i32 %head.11245.us.i.i
  %idxprom696.us.i.i = sext i32 %tail.7.head.1.us.i.i to i64
  %arrayidx697.us.i.i = getelementptr inbounds i32* %162, i64 %idxprom696.us.i.i
  %245 = load i32* %arrayidx697.us.i.i, align 4, !tbaa !5
  %idxprom698.us.i.i = sext i32 %245 to i64
  %arrayidx699.us.i.i = getelementptr inbounds i32* %88, i64 %idxprom698.us.i.i
  %246 = load i32* %arrayidx699.us.i.i, align 4, !tbaa !5
  %cmp700.us.i.i = icmp eq i32 %246, 0
  %dec741.us.i.i = add nsw i32 %tail.7.head.1.us.i.i, -1
  br i1 %cmp700.us.i.i, label %if.then702.i.i, label %while.body691.us.i.i

if.then702.i.i:                                   ; preds = %while.body691.us.i.i
  %arrayidx722.phi.trans.insert.i.i = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb.i97.i, i64 0, i64 %idxprom698.us.i.i
  %.pre1390.i.i = load %struct.basic_block_def** %arrayidx722.phi.trans.insert.i.i, align 8, !tbaa !1
  store i32 -1, i32* %arrayidx699.us.i.i, align 4, !tbaa !5
  %arrayidx708.i.i = getelementptr inbounds i32* %233, i64 %indvars.iv1372.i.i
  store i32 %245, i32* %arrayidx708.i.i, align 4, !tbaa !5
  %inc709.i.i = add nsw i32 %count.1.ph1254.i.i, 1
  %arrayidx711.i.i = getelementptr inbounds i32* %239, i64 %idxprom698.us.i.i
  store i32 %inc709.i.i, i32* %arrayidx711.i.i, align 4, !tbaa !5
  %247 = load i32* @nr_regions, align 4, !tbaa !5
  %arrayidx713.i.i = getelementptr inbounds i32* %238, i64 %idxprom698.us.i.i
  store i32 %247, i32* %arrayidx713.i.i, align 4, !tbaa !5
  %indvars.iv.next1371.i.i = add nsw i64 %indvars.iv1370.i.i, -1
  %arrayidx716.i.i = getelementptr inbounds i32* %162, i64 %indvars.iv1370.i.i
  %248 = load i32* %arrayidx716.i.i, align 4, !tbaa !5
  store i32 %248, i32* %arrayidx697.us.i.i, align 4, !tbaa !5
  %succ723.i.i = getelementptr inbounds %struct.basic_block_def* %.pre1390.i.i, i64 0, i32 5
  %e703.01248.i.i = load %struct.edge_def** %succ723.i.i, align 8
  %tobool7251249.i.i = icmp eq %struct.edge_def* %e703.01248.i.i, null
  br i1 %tobool7251249.i.i, label %while.cond688.loopexit.i.i, label %for.body726.i.i

for.body726.i.i:                                  ; preds = %if.then702.i.i, %for.inc737.i.i
  %e703.01250.i.i = phi %struct.edge_def* [ %e703.0.i.i, %for.inc737.i.i ], [ %e703.01248.i.i, %if.then702.i.i ]
  %dest727.i.i = getelementptr inbounds %struct.edge_def* %e703.01250.i.i, i64 0, i32 3
  %249 = load %struct.basic_block_def** %dest727.i.i, align 8, !tbaa !42
  %cmp728.i.i = icmp eq %struct.basic_block_def* %249, getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1)
  br i1 %cmp728.i.i, label %for.inc737.i.i, label %if.then730.i.i

if.then730.i.i:                                   ; preds = %for.body726.i.i
  %index732.i.i = getelementptr inbounds %struct.basic_block_def* %249, i64 0, i32 11
  %250 = load i32* %index732.i.i, align 4, !tbaa !21
  %idxprom733.i.i = sext i32 %250 to i64
  %arrayidx734.i.i = getelementptr inbounds i32* %88, i64 %idxprom733.i.i
  %251 = load i32* %arrayidx734.i.i, align 4, !tbaa !5
  %dec735.i.i = add nsw i32 %251, -1
  store i32 %dec735.i.i, i32* %arrayidx734.i.i, align 4, !tbaa !5
  br label %for.inc737.i.i

for.inc737.i.i:                                   ; preds = %if.then730.i.i, %for.body726.i.i
  %succ_next738.i.i = getelementptr inbounds %struct.edge_def* %e703.01250.i.i, i64 0, i32 1
  %e703.0.i.i = load %struct.edge_def** %succ_next738.i.i, align 8
  %tobool725.i.i = icmp eq %struct.edge_def* %e703.0.i.i, null
  br i1 %tobool725.i.i, label %while.cond688.loopexit.i.i, label %for.body726.i.i

while.end743.i.i:                                 ; preds = %while.cond688.loopexit.i.i
  %252 = add i32 %idx.01261.i.i, 3
  %smax.i = select i1 %243, i32 %242, i32 -1
  %253 = add i32 %252, %tail.4.ph.i.i
  %254 = add i32 %253, %smax.i
  %255 = load i32* @nr_regions, align 4, !tbaa !5
  %inc744.i.i = add nsw i32 %255, 1
  store i32 %inc744.i.i, i32* @nr_regions, align 4, !tbaa !5
  %.pre.i108.i = load i32* @n_basic_blocks, align 4, !tbaa !5
  br label %for.inc747.i.i

for.inc747.i.i:                                   ; preds = %if.then586.i.i, %if.then544.i.i, %if.then648.i.i, %while.end743.i.i, %while.end669.i.i, %if.else564.i.i, %while.cond.preheader.i.i, %for.cond516.preheader.i.i, %for.end472.i.i, %land.lhs.true432.i.i, %for.body422.i.i
  %256 = phi i32 [ %164, %for.end472.i.i ], [ %164, %while.end669.i.i ], [ %.pre.i108.i, %while.end743.i.i ], [ %164, %land.lhs.true432.i.i ], [ %164, %for.body422.i.i ], [ %164, %for.cond516.preheader.i.i ], [ %164, %if.else564.i.i ], [ %164, %while.cond.preheader.i.i ], [ %164, %if.then648.i.i ], [ %164, %if.then544.i.i ], [ %164, %if.then586.i.i ]
  %idx.2.i.i = phi i32 [ %idx.01261.i.i, %for.end472.i.i ], [ %idx.01261.i.i, %while.end669.i.i ], [ %254, %while.end743.i.i ], [ %idx.01261.i.i, %land.lhs.true432.i.i ], [ %idx.01261.i.i, %for.body422.i.i ], [ %idx.01261.i.i, %for.cond516.preheader.i.i ], [ %idx.01261.i.i, %if.else564.i.i ], [ %idx.01261.i.i, %while.cond.preheader.i.i ], [ %idx.01261.i.i, %if.then648.i.i ], [ %idx.01261.i.i, %if.then544.i.i ], [ %idx.01261.i.i, %if.then586.i.i ]
  %indvars.iv.next1376.i.i = add nuw nsw i64 %indvars.iv1375.i.i, 1
  %257 = trunc i64 %indvars.iv.next1376.i.i to i32
  %cmp420.i.i = icmp slt i32 %257, %256
  br i1 %cmp420.i.i, label %for.body422.i.i, label %for.end749.i.i

for.end749.i.i:                                   ; preds = %for.inc747.i.i, %if.end415.i.i
  %idx.0.lcssa.i.i = phi i32 [ 0, %if.end415.i.i ], [ %idx.2.i.i, %for.inc747.i.i ]
  call void @free(i8* %call418.i.i) #4
  %.pre1388.i.i = load i32* @n_basic_blocks, align 4, !tbaa !5
  br label %for.cond751.preheader.i.i

for.cond751.preheader.i.i:                        ; preds = %for.end749.i.i, %for.end407.i.i
  %258 = phi i32 [ %.pre1388.i.i, %for.end749.i.i ], [ %96, %for.end407.i.i ]
  %idx.4.ph.i.i = phi i32 [ %idx.0.lcssa.i.i, %for.end749.i.i ], [ 0, %for.end407.i.i ]
  %cmp7521179.i.i = icmp sgt i32 %258, 0
  br i1 %cmp7521179.i.i, label %for.body754.lr.ph.i.i, label %find_rgns.exit.i

for.body754.lr.ph.i.i:                            ; preds = %for.cond751.preheader.i.i
  %259 = load i32** @rgn_bb_table, align 8, !tbaa !1
  %260 = load %struct.region** @rgn_table, align 8, !tbaa !1
  %261 = load i32** @containing_rgn, align 8, !tbaa !1
  %262 = load i32** @block_to_bb, align 8, !tbaa !1
  br label %for.body754.i.i

for.body754.i.i:                                  ; preds = %for.inc775.i.i, %for.body754.lr.ph.i.i
  %263 = phi i32 [ %258, %for.body754.lr.ph.i.i ], [ %269, %for.inc775.i.i ]
  %indvars.iv.i109.i = phi i64 [ 0, %for.body754.lr.ph.i.i ], [ %indvars.iv.next.i110.i, %for.inc775.i.i ]
  %idx.41180.i.i = phi i32 [ %idx.4.ph.i.i, %for.body754.lr.ph.i.i ], [ %idx.5.i.i, %for.inc775.i.i ]
  %arrayidx756.i.i = getelementptr inbounds i32* %88, i64 %indvars.iv.i109.i
  %264 = load i32* %arrayidx756.i.i, align 4, !tbaa !5
  %cmp757.i.i = icmp sgt i32 %264, -1
  br i1 %cmp757.i.i, label %if.then759.i.i, label %for.inc775.i.i

if.then759.i.i:                                   ; preds = %for.body754.i.i
  %idxprom760.i.i = sext i32 %idx.41180.i.i to i64
  %arrayidx761.i.i = getelementptr inbounds i32* %259, i64 %idxprom760.i.i
  %265 = trunc i64 %indvars.iv.i109.i to i32
  store i32 %265, i32* %arrayidx761.i.i, align 4, !tbaa !5
  %266 = load i32* @nr_regions, align 4, !tbaa !5
  %idxprom762.i.i = sext i32 %266 to i64
  %rgn_nr_blocks764.i.i = getelementptr inbounds %struct.region* %260, i64 %idxprom762.i.i, i32 0
  store i32 1, i32* %rgn_nr_blocks764.i.i, align 4, !tbaa !7
  %inc765.i.i = add nsw i32 %idx.41180.i.i, 1
  %267 = load i32* @nr_regions, align 4, !tbaa !5
  %idxprom766.i.i = sext i32 %267 to i64
  %rgn_blocks768.i.i = getelementptr inbounds %struct.region* %260, i64 %idxprom766.i.i, i32 1
  store i32 %idx.41180.i.i, i32* %rgn_blocks768.i.i, align 4, !tbaa !9
  %268 = load i32* @nr_regions, align 4, !tbaa !5
  %inc769.i.i = add nsw i32 %268, 1
  store i32 %inc769.i.i, i32* @nr_regions, align 4, !tbaa !5
  %arrayidx771.i.i = getelementptr inbounds i32* %261, i64 %indvars.iv.i109.i
  store i32 %268, i32* %arrayidx771.i.i, align 4, !tbaa !5
  %arrayidx773.i.i = getelementptr inbounds i32* %262, i64 %indvars.iv.i109.i
  store i32 0, i32* %arrayidx773.i.i, align 4, !tbaa !5
  %.pre1389.i.i = load i32* @n_basic_blocks, align 4, !tbaa !5
  br label %for.inc775.i.i

for.inc775.i.i:                                   ; preds = %if.then759.i.i, %for.body754.i.i
  %269 = phi i32 [ %.pre1389.i.i, %if.then759.i.i ], [ %263, %for.body754.i.i ]
  %idx.5.i.i = phi i32 [ %inc765.i.i, %if.then759.i.i ], [ %idx.41180.i.i, %for.body754.i.i ]
  %indvars.iv.next.i110.i = add nuw nsw i64 %indvars.iv.i109.i, 1
  %270 = trunc i64 %indvars.iv.next.i110.i to i32
  %cmp752.i.i = icmp slt i32 %270, %269
  br i1 %cmp752.i.i, label %for.body754.i.i, label %find_rgns.exit.i

find_rgns.exit.i:                                 ; preds = %for.inc775.i.i, %for.cond751.preheader.i.i
  call void @free(i8* %call.i82.i) #4
  call void @free(i8* %call3.i.i) #4
  call void @free(i8* %call6.i.i) #4
  %271 = bitcast %struct.simple_bitmap_def* %call9.i.i to i8*
  call void @free(i8* %271) #4
  %272 = bitcast %struct.simple_bitmap_def* %call8.i83.i to i8*
  call void @free(i8* %272) #4
  %273 = bitcast %struct.simple_bitmap_def* %call7.i.i to i8*
  call void @free(i8* %273) #4
  %274 = bitcast %struct.simple_bitmap_def* %call10.i84.i to i8*
  call void @free(i8* %274) #4
  %275 = bitcast %struct.simple_bitmap_def* %call11.i.i to i8*
  call void @free(i8* %275) #4
  br label %if.end.i

if.end.i:                                         ; preds = %find_rgns.exit.i, %find_single_block_region.exit79.i
  %276 = load i32* @sched_verbose, align 4, !tbaa !5
  %cmp24.i = icmp sgt i32 %276, 2
  br i1 %cmp24.i, label %if.then26.i, label %if.end27.i

if.then26.i:                                      ; preds = %if.end.i
  call void @debug_regions() #4
  br label %if.end27.i

if.end27.i:                                       ; preds = %if.then26.i, %if.end.i
  call void @free_edge_list(%struct.edge_list* %call18.i) #4
  %277 = bitcast %struct.simple_bitmap_def** %call17.i to i8*
  call void @free(i8* %277) #4
  br label %init_regions.exit

init_regions.exit:                                ; preds = %find_single_block_region.exit.i, %find_single_block_region.exit54.i, %if.end27.i
  %call30.i = call i32 @count_or_remove_death_notes(%struct.simple_bitmap_def* null, i32 1) #4
  store %struct.sched_info* bitcast ({ void (%struct.ready_list*)*, i32 (%struct.rtx_def*)*, i32 ()*, i32 (%struct.rtx_def*)*, i32 (%struct.rtx_def*, %struct.rtx_def*)*, i8* (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, %struct.rtx_def*)*, void (%struct.rtx_def*, %struct.bitmap_head_def*)*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i8, [7 x i8] }* @region_sched_info to %struct.sched_info*), %struct.sched_info** @current_sched_info, align 8, !tbaa !1
  %278 = load i32* @nr_regions, align 4, !tbaa !5
  %cmp1186 = icmp sgt i32 %278, 0
  br i1 %cmp1186, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %init_regions.exit
  %279 = bitcast %struct.rtx_def** %head.i to i8*
  %280 = bitcast %struct.rtx_def** %tail.i to i8*
  %281 = bitcast %struct.rtx_def** %head23.i to i8*
  %282 = bitcast %struct.rtx_def** %tail24.i to i8*
  %283 = bitcast %struct.rtx_def** %head95.i to i8*
  %284 = bitcast %struct.rtx_def** %tail96.i to i8*
  %285 = bitcast %struct.rtx_def** %head190.i to i8*
  %286 = bitcast %struct.rtx_def** %tail191.i to i8*
  %287 = bitcast %struct.rtx_def** %head.i.i88 to i8*
  %288 = bitcast %struct.rtx_def** %tail.i.i to i8*
  %289 = bitcast %struct.deps* %tmp_deps.i.i to i8*
  %reg_last_in_use.i.i.i = getelementptr inbounds %struct.deps* %tmp_deps.i.i, i64 0, i32 12
  %first.i.i.i = getelementptr inbounds %struct.bitmap_head_def* %reg_last_in_use.i.i.i, i64 0, i32 0
  %pending_read_insns.i.i.i = getelementptr inbounds %struct.deps* %tmp_deps.i.i, i64 0, i32 0
  %pending_read_mems.i.i.i = getelementptr inbounds %struct.deps* %tmp_deps.i.i, i64 0, i32 1
  %pending_write_insns.i.i.i = getelementptr inbounds %struct.deps* %tmp_deps.i.i, i64 0, i32 2
  %pending_write_mems.i.i.i = getelementptr inbounds %struct.deps* %tmp_deps.i.i, i64 0, i32 3
  %last_pending_memory_flush.i.i.i = getelementptr inbounds %struct.deps* %tmp_deps.i.i, i64 0, i32 6
  %pending_lists_length.i.i.i = getelementptr inbounds %struct.deps* %tmp_deps.i.i, i64 0, i32 4
  %last_function_call.i.i.i = getelementptr inbounds %struct.deps* %tmp_deps.i.i, i64 0, i32 7
  %sched_before_next_call.i.i.i = getelementptr inbounds %struct.deps* %tmp_deps.i.i, i64 0, i32 8
  %reg_last.i.i.i = getelementptr inbounds %struct.deps* %tmp_deps.i.i, i64 0, i32 11
  %290 = bitcast i32* %pending_lists_length.i.i.i to i64*
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %schedule_region.exit
  %indvars.iv233 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next234, %schedule_region.exit ]
  call void @llvm.lifetime.start(i64 8, i8* %279) #4
  call void @llvm.lifetime.start(i64 8, i8* %280) #4
  call void @llvm.lifetime.start(i64 8, i8* %281) #4
  call void @llvm.lifetime.start(i64 8, i8* %282) #4
  call void @llvm.lifetime.start(i64 8, i8* %283) #4
  call void @llvm.lifetime.start(i64 8, i8* %284) #4
  call void @llvm.lifetime.start(i64 8, i8* %285) #4
  call void @llvm.lifetime.start(i64 8, i8* %286) #4
  %291 = load %struct.region** @rgn_table, align 8, !tbaa !1
  %rgn_nr_blocks.i = getelementptr inbounds %struct.region* %291, i64 %indvars.iv233, i32 0
  %292 = load i32* %rgn_nr_blocks.i, align 4, !tbaa !7
  store i32 %292, i32* @current_nr_blocks, align 4, !tbaa !5
  %rgn_blocks.i = getelementptr inbounds %struct.region* %291, i64 %indvars.iv233, i32 1
  %293 = load i32* %rgn_blocks.i, align 4, !tbaa !9
  store i32 %293, i32* @current_blocks, align 4, !tbaa !5
  call void @init_deps_global() #4
  %294 = load i32* @current_nr_blocks, align 4, !tbaa !5
  %conv.i89 = sext i32 %294 to i64
  %mul.i90 = mul i64 %conv.i89, 104
  %call.i91 = call noalias i8* @xmalloc(i64 %mul.i90) #4
  %295 = bitcast i8* %call.i91 to %struct.deps*
  store %struct.deps* %295, %struct.deps** @bb_deps, align 8, !tbaa !1
  %296 = load i32* @current_nr_blocks, align 4, !tbaa !5
  %cmp289.i = icmp sgt i32 %296, 0
  br i1 %cmp289.i, label %for.body.i.preheader, label %if.end182.i

for.body.i.preheader:                             ; preds = %for.body
  call void @init_deps(%struct.deps* %295) #4
  %297 = load i32* @current_nr_blocks, align 4, !tbaa !5
  %cmp.i183 = icmp sgt i32 %297, 1
  br i1 %cmp.i183, label %for.body.for.body_crit_edge.i, label %for.cond4.preheader.i

for.cond4.preheader.i:                            ; preds = %for.body.for.body_crit_edge.i, %for.body.i.preheader
  %.lcssa = phi i32 [ %297, %for.body.i.preheader ], [ %298, %for.body.for.body_crit_edge.i ]
  %cmp5284.i = icmp sgt i32 %.lcssa, 0
  br i1 %cmp5284.i, label %for.body7.i, label %if.end182.i

for.body.for.body_crit_edge.i:                    ; preds = %for.body.i.preheader, %for.body.for.body_crit_edge.i
  %indvars.iv.next302.i184 = phi i64 [ %indvars.iv.next302.i, %for.body.for.body_crit_edge.i ], [ 1, %for.body.i.preheader ]
  %.pre308.i = load %struct.deps** @bb_deps, align 8, !tbaa !1
  %add.ptr.i = getelementptr inbounds %struct.deps* %.pre308.i, i64 %indvars.iv.next302.i184
  call void @init_deps(%struct.deps* %add.ptr.i) #4
  %indvars.iv.next302.i = add nuw nsw i64 %indvars.iv.next302.i184, 1
  %298 = load i32* @current_nr_blocks, align 4, !tbaa !5
  %299 = trunc i64 %indvars.iv.next302.i to i32
  %cmp.i = icmp slt i32 %299, %298
  br i1 %cmp.i, label %for.body.for.body_crit_edge.i, label %for.cond4.preheader.i

for.cond11.preheader.i:                           ; preds = %compute_block_backward_dependences.exit.i
  %cmp12282.i = icmp sgt i32 %406, 0
  br i1 %cmp12282.i, label %for.body14.i, label %if.end182.i

for.body7.i:                                      ; preds = %for.cond4.preheader.i, %compute_block_backward_dependences.exit.i
  %indvars.iv299.i = phi i64 [ %indvars.iv.next300.i, %compute_block_backward_dependences.exit.i ], [ 0, %for.cond4.preheader.i ]
  call void @llvm.lifetime.start(i64 8, i8* %287) #4
  call void @llvm.lifetime.start(i64 8, i8* %288) #4
  call void @llvm.lifetime.start(i64 104, i8* %289) #4
  %300 = load %struct.deps** @bb_deps, align 8, !tbaa !1
  %arrayidx.i.i92 = getelementptr inbounds %struct.deps* %300, i64 %indvars.iv299.i
  %301 = bitcast %struct.deps* %arrayidx.i.i92 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %289, i8* %301, i64 104, i32 8, i1 false) #4, !tbaa.struct !53
  %302 = load i32* @current_blocks, align 4, !tbaa !5
  %303 = trunc i64 %indvars.iv299.i to i32
  %add.i.i = add nsw i32 %302, %303
  %idxprom1.i.i = sext i32 %add.i.i to i64
  %304 = load i32** @rgn_bb_table, align 8, !tbaa !1
  %arrayidx2.i.i = getelementptr inbounds i32* %304, i64 %idxprom1.i.i
  %305 = load i32* %arrayidx2.i.i, align 4, !tbaa !5
  call void @get_block_head_tail(i32 %305, %struct.rtx_def** %head.i.i88, %struct.rtx_def** %tail.i.i) #4
  %306 = load %struct.rtx_def** %head.i.i88, align 8, !tbaa !1
  %307 = load %struct.rtx_def** %tail.i.i, align 8, !tbaa !1
  call void @sched_analyze(%struct.deps* %tmp_deps.i.i, %struct.rtx_def* %306, %struct.rtx_def* %307) #4
  %308 = load %struct.rtx_def** %head.i.i88, align 8, !tbaa !1
  br label %while.cond.i.i.i

while.cond.i.i.i:                                 ; preds = %if.end58.i.i.i, %for.body7.i
  %last.0.i.i.i = phi %struct.rtx_def* [ null, %for.body7.i ], [ %last.1.i.i.i, %if.end58.i.i.i ]
  %insn.0.i.in.i.i = phi %struct.rtx_def** [ %tail.i.i, %for.body7.i ], [ %rtx61.i.i.i, %if.end58.i.i.i ]
  %insn.0.i.i.i = load %struct.rtx_def** %insn.0.i.in.i.i, align 8
  %309 = getelementptr inbounds %struct.rtx_def* %insn.0.i.i.i, i64 0, i32 0
  %bf.load.i.i.i = load i32* %309, align 8
  %bf.clear.i.i.i = and i32 %bf.load.i.i.i, 65535
  switch i32 %bf.clear.i.i.i, label %lor.rhs.i.i.i [
    i32 34, label %while.body.i.i.i96
    i32 33, label %while.body.i.i.i96
    i32 32, label %land.lhs.true.i.i.i94
  ]

land.lhs.true.i.i.i94:                            ; preds = %while.cond.i.i.i
  %arrayidx.i.i.i93 = getelementptr inbounds %struct.rtx_def* %insn.0.i.i.i, i64 0, i32 1, i64 3
  %rtx.i.i.i = bitcast %union.rtunion_def* %arrayidx.i.i.i93 to %struct.rtx_def**
  %310 = load %struct.rtx_def** %rtx.i.i.i, align 8, !tbaa !1
  %311 = getelementptr inbounds %struct.rtx_def* %310, i64 0, i32 0
  %bf.load8.i.i.i = load i32* %311, align 8
  %312 = and i32 %bf.load8.i.i.i, 65534
  %switch.i.i.i = icmp eq i32 %312, 48
  br i1 %switch.i.i.i, label %while.body.i.i.i96, label %lor.lhs.false18.i.i.i

lor.lhs.false18.i.i.i:                            ; preds = %land.lhs.true.i.i.i94
  %call.i.i.i = call zeroext i1 @can_throw_internal(%struct.rtx_def* %insn.0.i.i.i) #4
  br i1 %call.i.i.i, label %while.body.i.i.i96, label %lor.lhs.false19.i.i.i

lor.lhs.false19.i.i.i:                            ; preds = %lor.lhs.false18.i.i.i
  %313 = load i32* @reload_completed, align 4, !tbaa !5
  %tobool.i.i.i95 = icmp eq i32 %313, 0
  br i1 %tobool.i.i.i95, label %land.lhs.true20.i.i.i, label %lor.rhs.i.i.i

land.lhs.true20.i.i.i:                            ; preds = %lor.lhs.false19.i.i.i
  %314 = load %struct.rtx_def** %rtx.i.i.i, align 8, !tbaa !1
  call void @llvm.lifetime.start(i64 1, i8* %ret.i.i.i.i) #4
  store i8 0, i8* %ret.i.i.i.i, align 1, !tbaa !54
  call void @note_stores(%struct.rtx_def* %314, void (%struct.rtx_def*, %struct.rtx_def*, i8*)* @sets_likely_spilled_1, i8* %ret.i.i.i.i) #4
  %315 = load i8* %ret.i.i.i.i, align 1, !tbaa !54, !range !56
  %tobool.i.i.i.i = icmp eq i8 %315, 0
  call void @llvm.lifetime.end(i64 1, i8* %ret.i.i.i.i) #4
  br i1 %tobool.i.i.i.i, label %lor.rhs.i.i.i, label %while.body.i.i.i96

lor.rhs.i.i.i:                                    ; preds = %land.lhs.true20.i.i.i, %lor.lhs.false19.i.i.i, %while.cond.i.i.i
  %bf.load25.i.i.i = load i32* %309, align 8
  %bf.clear26.i.i.i = and i32 %bf.load25.i.i.i, 65535
  %cmp27.i.i.i = icmp eq i32 %bf.clear26.i.i.i, 37
  br i1 %cmp27.i.i.i, label %while.body.i.i.i96, label %while.end62.i.i.i

while.body.i.i.i96:                               ; preds = %lor.rhs.i.i.i, %land.lhs.true20.i.i.i, %lor.lhs.false18.i.i.i, %land.lhs.true.i.i.i94, %while.cond.i.i.i, %while.cond.i.i.i
  %bf.load28.i.i.i = load i32* %309, align 8
  %bf.clear29.i.i.i = and i32 %bf.load28.i.i.i, 65535
  %cmp30.i.i.i = icmp eq i32 %bf.clear29.i.i.i, 37
  br i1 %cmp30.i.i.i, label %if.end55.i.i.i, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %while.body.i.i.i96
  %cmp31.i.i.i = icmp eq %struct.rtx_def* %last.0.i.i.i, null
  br i1 %cmp31.i.i.i, label %if.end.i.i.i100, label %land.lhs.true32.i.i.i

land.lhs.true32.i.i.i:                            ; preds = %if.then.i.i.i
  %arrayidx34.i.i.i = getelementptr inbounds %struct.rtx_def* %last.0.i.i.i, i64 0, i32 1, i64 5
  %rtx35.i.i.i = bitcast %union.rtunion_def* %arrayidx34.i.i.i to %struct.rtx_def**
  %316 = load %struct.rtx_def** %rtx35.i.i.i, align 8, !tbaa !1
  %call36.i.i.i = call %struct.rtx_def* @find_insn_list(%struct.rtx_def* %insn.0.i.i.i, %struct.rtx_def* %316) #4
  %tobool37.i.i.i = icmp eq %struct.rtx_def* %call36.i.i.i, null
  br i1 %tobool37.i.i.i, label %if.then38.i.i.i, label %if.end.i.i.i100

if.then38.i.i.i:                                  ; preds = %land.lhs.true32.i.i.i
  call void @add_dependence(%struct.rtx_def* %last.0.i.i.i, %struct.rtx_def* %insn.0.i.i.i, i32 14) #4
  %arrayidx40.i.i.i = getelementptr inbounds %struct.rtx_def* %insn.0.i.i.i, i64 0, i32 1, i64 0
  %rtint.i.i.i97 = bitcast %union.rtunion_def* %arrayidx40.i.i.i to i32*
  %317 = load i32* %rtint.i.i.i97, align 4, !tbaa !5
  %idxprom.i.i.i98 = sext i32 %317 to i64
  %318 = load %struct.haifa_insn_data** @h_i_d, align 8, !tbaa !1
  %ref_count.i.i.i = getelementptr inbounds %struct.haifa_insn_data* %318, i64 %idxprom.i.i.i98, i32 6
  %319 = load i32* %ref_count.i.i.i, align 4, !tbaa !57
  %inc.i.i.i99 = add nsw i32 %319, 1
  store i32 %inc.i.i.i99, i32* %ref_count.i.i.i, align 4, !tbaa !57
  br label %if.end.i.i.i100

if.end.i.i.i100:                                  ; preds = %if.then38.i.i.i, %land.lhs.true32.i.i.i, %if.then.i.i.i
  %arrayidx43.i.i.i = getelementptr inbounds %struct.rtx_def* %insn.0.i.i.i, i64 0, i32 1, i64 0
  %rtint44.i.i.i = bitcast %union.rtunion_def* %arrayidx43.i.i.i to i32*
  %320 = load i32* %rtint44.i.i.i, align 4, !tbaa !5
  %idxprom45.i.i.i = sext i32 %320 to i64
  %321 = load %struct.haifa_insn_data** @h_i_d, align 8, !tbaa !1
  %cant_move.i.i.i = getelementptr inbounds %struct.haifa_insn_data* %321, i64 %idxprom45.i.i.i, i32 11
  %bf.load47.i.i.i = load i8* %cant_move.i.i.i, align 2
  %bf.set.i.i.i = or i8 %bf.load47.i.i.i, 1
  store i8 %bf.set.i.i.i, i8* %cant_move.i.i.i, align 2
  %bf.load50137.i.i.i = load i32* %309, align 8
  %bf.clear51138.i.i.i = and i32 %bf.load50137.i.i.i, 268435456
  %tobool52139.i.i.i = icmp eq i32 %bf.clear51138.i.i.i, 0
  br i1 %tobool52139.i.i.i, label %if.end55.i.i.i, label %while.body53.i.i.i

while.body53.i.i.i:                               ; preds = %if.end.i.i.i100, %while.body53.i.i.i
  %insn.1140.i.i.i = phi %struct.rtx_def* [ %call54.i.i.i, %while.body53.i.i.i ], [ %insn.0.i.i.i, %if.end.i.i.i100 ]
  %call54.i.i.i = call %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def* %insn.1140.i.i.i) #4
  call void @add_dependence(%struct.rtx_def* %insn.1140.i.i.i, %struct.rtx_def* %call54.i.i.i, i32 14) #4
  %322 = getelementptr inbounds %struct.rtx_def* %call54.i.i.i, i64 0, i32 0
  %bf.load50.i.i.i = load i32* %322, align 8
  %bf.clear51.i.i.i = and i32 %bf.load50.i.i.i, 268435456
  %tobool52.i.i.i = icmp eq i32 %bf.clear51.i.i.i, 0
  br i1 %tobool52.i.i.i, label %if.end55.i.i.i, label %while.body53.i.i.i

if.end55.i.i.i:                                   ; preds = %while.body53.i.i.i, %if.end.i.i.i100, %while.body.i.i.i96
  %last.1.i.i.i = phi %struct.rtx_def* [ %last.0.i.i.i, %while.body.i.i.i96 ], [ %insn.0.i.i.i, %if.end.i.i.i100 ], [ %insn.0.i.i.i, %while.body53.i.i.i ]
  %insn.2.i.i.i = phi %struct.rtx_def* [ %insn.0.i.i.i, %while.body.i.i.i96 ], [ %insn.0.i.i.i, %if.end.i.i.i100 ], [ %call54.i.i.i, %while.body53.i.i.i ]
  %cmp56.i.i.i = icmp eq %struct.rtx_def* %insn.2.i.i.i, %308
  br i1 %cmp56.i.i.i, label %while.end62.i.i.i, label %if.end58.i.i.i

if.end58.i.i.i:                                   ; preds = %if.end55.i.i.i
  %arrayidx60.i.i.i = getelementptr inbounds %struct.rtx_def* %insn.2.i.i.i, i64 0, i32 1, i64 1
  %rtx61.i.i.i = bitcast %union.rtunion_def* %arrayidx60.i.i.i to %struct.rtx_def**
  br label %while.cond.i.i.i

while.end62.i.i.i:                                ; preds = %if.end55.i.i.i, %lor.rhs.i.i.i
  %last.2.i.i.i = phi %struct.rtx_def* [ %last.1.i.i.i, %if.end55.i.i.i ], [ %last.0.i.i.i, %lor.rhs.i.i.i ]
  %cmp63.i.i.i = icmp eq %struct.rtx_def* %last.2.i.i.i, null
  %cmp66135.i.i.i = icmp eq %struct.rtx_def* %last.2.i.i.i, %308
  %or.cond.i.i.i101 = or i1 %cmp63.i.i.i, %cmp66135.i.i.i
  br i1 %or.cond.i.i.i101, label %add_branch_dependences.exit.i.i, label %while.body67.i.i.i

while.body67.i.i.i:                               ; preds = %while.end62.i.i.i, %while.cond65.backedge.i.i.i
  %insn.3136.i.i.i = phi %struct.rtx_def* [ %insn.3.be.i.i.i, %while.cond65.backedge.i.i.i ], [ %last.2.i.i.i, %while.end62.i.i.i ]
  %call68.i.i.i = call %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def* %insn.3136.i.i.i) #4
  %arrayidx70.i.i.i = getelementptr inbounds %struct.rtx_def* %call68.i.i.i, i64 0, i32 1, i64 0
  %rtint71.i.i.i = bitcast %union.rtunion_def* %arrayidx70.i.i.i to i32*
  %323 = load i32* %rtint71.i.i.i, align 4, !tbaa !5
  %idxprom72.i.i.i = sext i32 %323 to i64
  %324 = load %struct.haifa_insn_data** @h_i_d, align 8, !tbaa !1
  %ref_count74.i.i.i = getelementptr inbounds %struct.haifa_insn_data* %324, i64 %idxprom72.i.i.i, i32 6
  %325 = load i32* %ref_count74.i.i.i, align 4, !tbaa !57
  %cmp75.i.i.i = icmp eq i32 %325, 0
  br i1 %cmp75.i.i.i, label %if.end77.i.i.i, label %while.cond65.backedge.i.i.i

while.cond65.backedge.i.i.i:                      ; preds = %while.body89.i.i.i, %if.end77.i.i.i, %while.body67.i.i.i
  %insn.3.be.i.i.i = phi %struct.rtx_def* [ %call68.i.i.i, %while.body67.i.i.i ], [ %call68.i.i.i, %if.end77.i.i.i ], [ %call90.i.i.i, %while.body89.i.i.i ]
  %cmp66.i.i.i = icmp eq %struct.rtx_def* %insn.3.be.i.i.i, %308
  br i1 %cmp66.i.i.i, label %add_branch_dependences.exit.i.i, label %while.body67.i.i.i

if.end77.i.i.i:                                   ; preds = %while.body67.i.i.i
  call void @add_dependence(%struct.rtx_def* %last.2.i.i.i, %struct.rtx_def* %call68.i.i.i, i32 14) #4
  %326 = load i32* %rtint71.i.i.i, align 4, !tbaa !5
  %idxprom81.i.i.i = sext i32 %326 to i64
  %327 = load %struct.haifa_insn_data** @h_i_d, align 8, !tbaa !1
  %ref_count83.i.i.i = getelementptr inbounds %struct.haifa_insn_data* %327, i64 %idxprom81.i.i.i, i32 6
  store i32 1, i32* %ref_count83.i.i.i, align 4, !tbaa !57
  %328 = getelementptr inbounds %struct.rtx_def* %call68.i.i.i, i64 0, i32 0
  %bf.load85131.i.i.i = load i32* %328, align 8
  %bf.clear87132.i.i.i = and i32 %bf.load85131.i.i.i, 268435456
  %tobool88133.i.i.i = icmp eq i32 %bf.clear87132.i.i.i, 0
  br i1 %tobool88133.i.i.i, label %while.cond65.backedge.i.i.i, label %while.body89.i.i.i

while.body89.i.i.i:                               ; preds = %if.end77.i.i.i, %while.body89.i.i.i
  %insn.4134.i.i.i = phi %struct.rtx_def* [ %call90.i.i.i, %while.body89.i.i.i ], [ %call68.i.i.i, %if.end77.i.i.i ]
  %call90.i.i.i = call %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def* %insn.4134.i.i.i) #4
  %329 = getelementptr inbounds %struct.rtx_def* %call90.i.i.i, i64 0, i32 0
  %bf.load85.i.i.i = load i32* %329, align 8
  %bf.clear87.i.i.i = and i32 %bf.load85.i.i.i, 268435456
  %tobool88.i.i.i = icmp eq i32 %bf.clear87.i.i.i, 0
  br i1 %tobool88.i.i.i, label %while.cond65.backedge.i.i.i, label %while.body89.i.i.i

add_branch_dependences.exit.i.i:                  ; preds = %while.cond65.backedge.i.i.i, %while.end62.i.i.i
  %330 = load i32* @current_nr_blocks, align 4, !tbaa !5
  %cmp.i.i102 = icmp sgt i32 %330, 1
  br i1 %cmp.i.i102, label %if.then.i.i106, label %compute_block_backward_dependences.exit.i

if.then.i.i106:                                   ; preds = %add_branch_dependences.exit.i.i
  %331 = load i32* @current_blocks, align 4, !tbaa !5
  %add.i.i.i103 = add nsw i32 %331, %303
  %idxprom.i5.i.i = sext i32 %add.i.i.i103 to i64
  %332 = load i32** @rgn_bb_table, align 8, !tbaa !1
  %arrayidx.i6.i.i = getelementptr inbounds i32* %332, i64 %idxprom.i5.i.i
  %333 = load i32* %arrayidx.i6.i.i, align 4, !tbaa !5
  %idxprom1.i.i.i104 = sext i32 %333 to i64
  %334 = load i32** @out_edges, align 8, !tbaa !1
  %arrayidx2.i.i.i = getelementptr inbounds i32* %334, i64 %idxprom1.i.i.i104
  %335 = load i32* %arrayidx2.i.i.i, align 4, !tbaa !5
  %cmp.i.i.i105 = icmp sgt i32 %335, 0
  br i1 %cmp.i.i.i105, label %do.body.preheader.i.i.i, label %propagate_deps.exit.i.i

do.body.preheader.i.i.i:                          ; preds = %if.then.i.i106
  %.pre.i.i.i = load %struct.haifa_edge** @edge_table, align 8, !tbaa !1
  br label %do.body.i.i.i

do.body.i.i.i:                                    ; preds = %do.cond.i.i.i, %do.body.preheader.i.i.i
  %336 = phi %struct.haifa_edge* [ %.pn.i.i.i, %do.cond.i.i.i ], [ %.pre.i.i.i, %do.body.preheader.i.i.i ]
  %e.0.i.i.i = phi i32 [ %e.1.i.i.i, %do.cond.i.i.i ], [ %335, %do.body.preheader.i.i.i ]
  %idxprom3.i.i.i = sext i32 %e.0.i.i.i to i64
  %to_block.i.i.i107 = getelementptr inbounds %struct.haifa_edge* %336, i64 %idxprom3.i.i.i, i32 1
  %337 = load i32* %to_block.i.i.i107, align 4, !tbaa !45
  %idxprom5.i.i.i = sext i32 %337 to i64
  %338 = load i32** @block_to_bb, align 8, !tbaa !1
  %arrayidx6.i.i.i = getelementptr inbounds i32* %338, i64 %idxprom5.i.i.i
  %339 = load i32* %arrayidx6.i.i.i, align 4, !tbaa !5
  %340 = load %struct.deps** @bb_deps, align 8, !tbaa !1
  %idx.ext.i.i.i = sext i32 %339 to i64
  %341 = load i32** @containing_rgn, align 8, !tbaa !1
  %arrayidx8.i.i.i = getelementptr inbounds i32* %341, i64 %idxprom1.i.i.i104
  %342 = load i32* %arrayidx8.i.i.i, align 4, !tbaa !5
  %arrayidx10.i.i.i = getelementptr inbounds i32* %341, i64 %idxprom5.i.i.i
  %343 = load i32* %arrayidx10.i.i.i, align 4, !tbaa !5
  %cmp11.i.i.i = icmp eq i32 %342, %343
  %cmp12.i.i.i = icmp sgt i32 %339, %303
  %or.cond.i7.i.i = and i1 %cmp11.i.i.i, %cmp12.i.i.i
  br i1 %or.cond.i7.i.i, label %do.body16.i.i.i, label %do.cond.i.i.i

do.body16.i.i.i:                                  ; preds = %do.body.i.i.i
  %ptr_.1279.i.i.i = load %struct.bitmap_element_def** %first.i.i.i, align 8
  %cmp24280.i.i.i = icmp eq %struct.bitmap_element_def* %ptr_.1279.i.i.i, null
  br i1 %cmp24280.i.i.i, label %do.end.i.i.i, label %for.cond25.preheader.lr.ph.i.i.i

for.cond25.preheader.lr.ph.i.i.i:                 ; preds = %do.body16.i.i.i
  %reg_last45.i.i.i = getelementptr inbounds %struct.deps* %340, i64 %idx.ext.i.i.i, i32 11
  br label %for.cond25.preheader.i.i.i

for.cond25.preheader.i.i.i:                       ; preds = %for.end66.i.i.i, %for.cond25.preheader.lr.ph.i.i.i
  %ptr_.1281.i.i.i = phi %struct.bitmap_element_def* [ %ptr_.1279.i.i.i, %for.cond25.preheader.lr.ph.i.i.i ], [ %ptr_.1.i.i.i, %for.end66.i.i.i ]
  %indx38.i.i.i = getelementptr inbounds %struct.bitmap_element_def* %ptr_.1281.i.i.i, i64 0, i32 2
  br label %for.body27.i.i.i

for.body27.i.i.i:                                 ; preds = %if.end63.i.i.i, %for.cond25.preheader.i.i.i
  %indvars.iv283.i.i.i = phi i64 [ 0, %for.cond25.preheader.i.i.i ], [ %indvars.iv.next284.i.i.i, %if.end63.i.i.i ]
  %arrayidx29.i.i.i = getelementptr inbounds %struct.bitmap_element_def* %ptr_.1281.i.i.i, i64 0, i32 3, i64 %indvars.iv283.i.i.i
  %344 = load i64* %arrayidx29.i.i.i, align 8, !tbaa !48
  %cmp30.i8.i.i = icmp eq i64 %344, 0
  br i1 %cmp30.i8.i.i, label %if.end63.i.i.i, label %for.body34.preheader.i.i.i

for.body34.preheader.i.i.i:                       ; preds = %for.body27.i.i.i
  %345 = shl i64 %indvars.iv283.i.i.i, 6
  br label %for.body34.i.i.i

for.body34.i.i.i:                                 ; preds = %for.inc.i.i.i, %for.body34.preheader.i.i.i
  %indvars.iv.i.i.i = phi i64 [ 0, %for.body34.preheader.i.i.i ], [ %indvars.iv.next.i.i.i, %for.inc.i.i.i ]
  %word_.0.i.i.i = phi i64 [ %344, %for.body34.preheader.i.i.i ], [ %word_.1.i.i.i, %for.inc.i.i.i ]
  %shl.i.i.i = shl i64 1, %indvars.iv.i.i.i
  %and.i.i.i = and i64 %shl.i.i.i, %word_.0.i.i.i
  %cmp35.i.i.i = icmp eq i64 %and.i.i.i, 0
  br i1 %cmp35.i.i.i, label %for.inc.i.i.i, label %if.then36.i.i.i

if.then36.i.i.i:                                  ; preds = %for.body34.i.i.i
  %neg.i.i.i = xor i64 %shl.i.i.i, -1
  %and37.i.i.i = and i64 %word_.0.i.i.i, %neg.i.i.i
  %346 = load i32* %indx38.i.i.i, align 4, !tbaa !58
  %mul.i.i.i = shl i32 %346, 7
  %347 = add i64 %indvars.iv.i.i.i, %345
  %348 = trunc i64 %347 to i32
  %add41.i.i.i = add i32 %mul.i.i.i, %348
  %idxprom42.i.i.i = sext i32 %add41.i.i.i to i64
  %349 = load %struct.deps_reg** %reg_last.i.i.i, align 8, !tbaa !60
  %350 = load %struct.deps_reg** %reg_last45.i.i.i, align 8, !tbaa !60
  %uses.i.i.i = getelementptr inbounds %struct.deps_reg* %349, i64 %idxprom42.i.i.i, i32 0
  %351 = load %struct.rtx_def** %uses.i.i.i, align 8, !tbaa !63
  %uses47.i.i.i = getelementptr inbounds %struct.deps_reg* %350, i64 %idxprom42.i.i.i, i32 0
  %352 = load %struct.rtx_def** %uses47.i.i.i, align 8, !tbaa !63
  %tobool7.i.i.i.i = icmp eq %struct.rtx_def* %351, null
  br i1 %tobool7.i.i.i.i, label %concat_INSN_LIST.exit.i.i.i, label %for.body.i.i.i.i

for.body.i.i.i.i:                                 ; preds = %if.then36.i.i.i, %for.body.i.i.i.i
  %new.09.i.i.i.i = phi %struct.rtx_def* [ %call.i.i.i.i, %for.body.i.i.i.i ], [ %352, %if.then36.i.i.i ]
  %copy.addr.08.i.i.i.i = phi %struct.rtx_def* [ %354, %for.body.i.i.i.i ], [ %351, %if.then36.i.i.i ]
  %fld.i.i.i.i = getelementptr inbounds %struct.rtx_def* %copy.addr.08.i.i.i.i, i64 0, i32 1
  %rtx.i.i.i.i = bitcast [1 x %union.rtunion_def]* %fld.i.i.i.i to %struct.rtx_def**
  %353 = load %struct.rtx_def** %rtx.i.i.i.i, align 8, !tbaa !1
  %call.i.i.i.i = call %struct.rtx_def* @alloc_INSN_LIST(%struct.rtx_def* %353, %struct.rtx_def* %new.09.i.i.i.i) #4
  %arrayidx2.i.i.i.i = getelementptr inbounds %struct.rtx_def* %copy.addr.08.i.i.i.i, i64 0, i32 1, i64 1
  %rtx3.i.i.i.i = bitcast %union.rtunion_def* %arrayidx2.i.i.i.i to %struct.rtx_def**
  %354 = load %struct.rtx_def** %rtx3.i.i.i.i, align 8, !tbaa !1
  %tobool.i.i9.i.i = icmp eq %struct.rtx_def* %354, null
  br i1 %tobool.i.i9.i.i, label %concat_INSN_LIST.exit.i.i.i, label %for.body.i.i.i.i

concat_INSN_LIST.exit.i.i.i:                      ; preds = %for.body.i.i.i.i, %if.then36.i.i.i
  %new.0.lcssa.i.i.i.i = phi %struct.rtx_def* [ %352, %if.then36.i.i.i ], [ %call.i.i.i.i, %for.body.i.i.i.i ]
  store %struct.rtx_def* %new.0.lcssa.i.i.i.i, %struct.rtx_def** %uses47.i.i.i, align 8, !tbaa !63
  %sets.i.i.i = getelementptr inbounds %struct.deps_reg* %349, i64 %idxprom42.i.i.i, i32 1
  %355 = load %struct.rtx_def** %sets.i.i.i, align 8, !tbaa !65
  %sets49.i.i.i = getelementptr inbounds %struct.deps_reg* %350, i64 %idxprom42.i.i.i, i32 1
  %356 = load %struct.rtx_def** %sets49.i.i.i, align 8, !tbaa !65
  %tobool7.i193.i.i.i = icmp eq %struct.rtx_def* %355, null
  br i1 %tobool7.i193.i.i.i, label %concat_INSN_LIST.exit204.i.i.i, label %for.body.i202.i.i.i

for.body.i202.i.i.i:                              ; preds = %concat_INSN_LIST.exit.i.i.i, %for.body.i202.i.i.i
  %new.09.i194.i.i.i = phi %struct.rtx_def* [ %call.i198.i.i.i, %for.body.i202.i.i.i ], [ %356, %concat_INSN_LIST.exit.i.i.i ]
  %copy.addr.08.i195.i.i.i = phi %struct.rtx_def* [ %358, %for.body.i202.i.i.i ], [ %355, %concat_INSN_LIST.exit.i.i.i ]
  %fld.i196.i.i.i = getelementptr inbounds %struct.rtx_def* %copy.addr.08.i195.i.i.i, i64 0, i32 1
  %rtx.i197.i.i.i = bitcast [1 x %union.rtunion_def]* %fld.i196.i.i.i to %struct.rtx_def**
  %357 = load %struct.rtx_def** %rtx.i197.i.i.i, align 8, !tbaa !1
  %call.i198.i.i.i = call %struct.rtx_def* @alloc_INSN_LIST(%struct.rtx_def* %357, %struct.rtx_def* %new.09.i194.i.i.i) #4
  %arrayidx2.i199.i.i.i = getelementptr inbounds %struct.rtx_def* %copy.addr.08.i195.i.i.i, i64 0, i32 1, i64 1
  %rtx3.i200.i.i.i = bitcast %union.rtunion_def* %arrayidx2.i199.i.i.i to %struct.rtx_def**
  %358 = load %struct.rtx_def** %rtx3.i200.i.i.i, align 8, !tbaa !1
  %tobool.i201.i.i.i = icmp eq %struct.rtx_def* %358, null
  br i1 %tobool.i201.i.i.i, label %concat_INSN_LIST.exit204.i.i.i, label %for.body.i202.i.i.i

concat_INSN_LIST.exit204.i.i.i:                   ; preds = %for.body.i202.i.i.i, %concat_INSN_LIST.exit.i.i.i
  %new.0.lcssa.i203.i.i.i = phi %struct.rtx_def* [ %356, %concat_INSN_LIST.exit.i.i.i ], [ %call.i198.i.i.i, %for.body.i202.i.i.i ]
  store %struct.rtx_def* %new.0.lcssa.i203.i.i.i, %struct.rtx_def** %sets49.i.i.i, align 8, !tbaa !65
  %clobbers.i.i.i = getelementptr inbounds %struct.deps_reg* %349, i64 %idxprom42.i.i.i, i32 2
  %359 = load %struct.rtx_def** %clobbers.i.i.i, align 8, !tbaa !66
  %clobbers52.i.i.i = getelementptr inbounds %struct.deps_reg* %350, i64 %idxprom42.i.i.i, i32 2
  %360 = load %struct.rtx_def** %clobbers52.i.i.i, align 8, !tbaa !66
  %tobool7.i205.i.i.i = icmp eq %struct.rtx_def* %359, null
  br i1 %tobool7.i205.i.i.i, label %concat_INSN_LIST.exit216.i.i.i, label %for.body.i214.i.i.i

for.body.i214.i.i.i:                              ; preds = %concat_INSN_LIST.exit204.i.i.i, %for.body.i214.i.i.i
  %new.09.i206.i.i.i = phi %struct.rtx_def* [ %call.i210.i.i.i, %for.body.i214.i.i.i ], [ %360, %concat_INSN_LIST.exit204.i.i.i ]
  %copy.addr.08.i207.i.i.i = phi %struct.rtx_def* [ %362, %for.body.i214.i.i.i ], [ %359, %concat_INSN_LIST.exit204.i.i.i ]
  %fld.i208.i.i.i = getelementptr inbounds %struct.rtx_def* %copy.addr.08.i207.i.i.i, i64 0, i32 1
  %rtx.i209.i.i.i = bitcast [1 x %union.rtunion_def]* %fld.i208.i.i.i to %struct.rtx_def**
  %361 = load %struct.rtx_def** %rtx.i209.i.i.i, align 8, !tbaa !1
  %call.i210.i.i.i = call %struct.rtx_def* @alloc_INSN_LIST(%struct.rtx_def* %361, %struct.rtx_def* %new.09.i206.i.i.i) #4
  %arrayidx2.i211.i.i.i = getelementptr inbounds %struct.rtx_def* %copy.addr.08.i207.i.i.i, i64 0, i32 1, i64 1
  %rtx3.i212.i.i.i = bitcast %union.rtunion_def* %arrayidx2.i211.i.i.i to %struct.rtx_def**
  %362 = load %struct.rtx_def** %rtx3.i212.i.i.i, align 8, !tbaa !1
  %tobool.i213.i.i.i = icmp eq %struct.rtx_def* %362, null
  br i1 %tobool.i213.i.i.i, label %concat_INSN_LIST.exit216.i.i.i, label %for.body.i214.i.i.i

concat_INSN_LIST.exit216.i.i.i:                   ; preds = %for.body.i214.i.i.i, %concat_INSN_LIST.exit204.i.i.i
  %new.0.lcssa.i215.i.i.i = phi %struct.rtx_def* [ %360, %concat_INSN_LIST.exit204.i.i.i ], [ %call.i210.i.i.i, %for.body.i214.i.i.i ]
  store %struct.rtx_def* %new.0.lcssa.i215.i.i.i, %struct.rtx_def** %clobbers52.i.i.i, align 8, !tbaa !66
  %uses_length.i.i.i = getelementptr inbounds %struct.deps_reg* %349, i64 %idxprom42.i.i.i, i32 3
  %363 = load i32* %uses_length.i.i.i, align 4, !tbaa !67
  %uses_length55.i.i.i = getelementptr inbounds %struct.deps_reg* %350, i64 %idxprom42.i.i.i, i32 3
  %364 = load i32* %uses_length55.i.i.i, align 4, !tbaa !67
  %add56.i.i.i = add nsw i32 %364, %363
  store i32 %add56.i.i.i, i32* %uses_length55.i.i.i, align 4, !tbaa !67
  %clobbers_length.i.i.i = getelementptr inbounds %struct.deps_reg* %349, i64 %idxprom42.i.i.i, i32 4
  %365 = load i32* %clobbers_length.i.i.i, align 4, !tbaa !68
  %clobbers_length57.i.i.i = getelementptr inbounds %struct.deps_reg* %350, i64 %idxprom42.i.i.i, i32 4
  %366 = load i32* %clobbers_length57.i.i.i, align 4, !tbaa !68
  %add58.i.i.i = add nsw i32 %366, %365
  store i32 %add58.i.i.i, i32* %clobbers_length57.i.i.i, align 4, !tbaa !68
  %cmp59.i.i.i = icmp eq i64 %and37.i.i.i, 0
  br i1 %cmp59.i.i.i, label %if.end63.i.i.i, label %for.inc.i.i.i

for.inc.i.i.i:                                    ; preds = %concat_INSN_LIST.exit216.i.i.i, %for.body34.i.i.i
  %word_.1.i.i.i = phi i64 [ %and37.i.i.i, %concat_INSN_LIST.exit216.i.i.i ], [ %word_.0.i.i.i, %for.body34.i.i.i ]
  %indvars.iv.next.i.i.i = add nuw nsw i64 %indvars.iv.i.i.i, 1
  %367 = trunc i64 %indvars.iv.next.i.i.i to i32
  %cmp33.old.i.i.i = icmp ult i32 %367, 64
  br i1 %cmp33.old.i.i.i, label %for.body34.i.i.i, label %if.end63.i.i.i

if.end63.i.i.i:                                   ; preds = %for.inc.i.i.i, %concat_INSN_LIST.exit216.i.i.i, %for.body27.i.i.i
  %indvars.iv.next284.i.i.i = add nuw nsw i64 %indvars.iv283.i.i.i, 1
  %exitcond.i.i.i = icmp eq i64 %indvars.iv.next284.i.i.i, 2
  br i1 %exitcond.i.i.i, label %for.end66.i.i.i, label %for.body27.i.i.i

for.end66.i.i.i:                                  ; preds = %if.end63.i.i.i
  %next68.i.i.i = getelementptr inbounds %struct.bitmap_element_def* %ptr_.1281.i.i.i, i64 0, i32 0
  %ptr_.1.i.i.i = load %struct.bitmap_element_def** %next68.i.i.i, align 8
  %cmp24.i.i.i = icmp eq %struct.bitmap_element_def* %ptr_.1.i.i.i, null
  br i1 %cmp24.i.i.i, label %do.end.i.i.i, label %for.cond25.preheader.i.i.i

do.end.i.i.i:                                     ; preds = %for.end66.i.i.i, %do.body16.i.i.i
  %reg_last_in_use70.i.i.i = getelementptr inbounds %struct.deps* %340, i64 %idx.ext.i.i.i, i32 12
  %call73.i.i.i = call i32 @bitmap_operation(%struct.bitmap_head_def* %reg_last_in_use70.i.i.i, %struct.bitmap_head_def* %reg_last_in_use70.i.i.i, %struct.bitmap_head_def* %reg_last_in_use.i.i.i, i32 2) #4
  %368 = load %struct.rtx_def** %pending_read_insns.i.i.i, align 8, !tbaa !69
  %pending_read_insns74.i.i.i = getelementptr inbounds %struct.deps* %340, i64 %idx.ext.i.i.i, i32 0
  %pending_read_mems75.i.i.i = getelementptr inbounds %struct.deps* %340, i64 %idx.ext.i.i.i, i32 1
  %369 = load %struct.rtx_def** %pending_read_insns74.i.i.i, align 8, !tbaa !1
  %370 = load %struct.rtx_def** %pending_read_mems75.i.i.i, align 8, !tbaa !1
  %tobool18.i.i.i.i = icmp eq %struct.rtx_def* %368, null
  br i1 %tobool18.i.i.i.i, label %concat_insn_mem_list.exit.i.i.i, label %while.body.i.i.i.i

while.body.i.i.i.i:                               ; preds = %do.end.i.i.i, %while.body.i.i.i.i
  %new_mems.022.i.i.i.i = phi %struct.rtx_def* [ %call4.i.i.i.i, %while.body.i.i.i.i ], [ %370, %do.end.i.i.i ]
  %new_insns.021.i.i.i.i = phi %struct.rtx_def* [ %call.i219.i.i.i, %while.body.i.i.i.i ], [ %369, %do.end.i.i.i ]
  %copy_insns.addr.020.i.i.i.i = phi %struct.rtx_def* [ %373, %while.body.i.i.i.i ], [ %368, %do.end.i.i.i ]
  %copy_mems.addr.019.i.in.i.i.i = phi %struct.rtx_def** [ %rtx10.i.i.i.i, %while.body.i.i.i.i ], [ %pending_read_mems.i.i.i, %do.end.i.i.i ]
  %copy_mems.addr.019.i.i.i.i = load %struct.rtx_def** %copy_mems.addr.019.i.in.i.i.i, align 8
  %fld.i217.i.i.i = getelementptr inbounds %struct.rtx_def* %copy_insns.addr.020.i.i.i.i, i64 0, i32 1
  %rtx.i218.i.i.i = bitcast [1 x %union.rtunion_def]* %fld.i217.i.i.i to %struct.rtx_def**
  %371 = load %struct.rtx_def** %rtx.i218.i.i.i, align 8, !tbaa !1
  %call.i219.i.i.i = call %struct.rtx_def* @alloc_INSN_LIST(%struct.rtx_def* %371, %struct.rtx_def* %new_insns.021.i.i.i.i) #4
  %fld1.i.i.i.i = getelementptr inbounds %struct.rtx_def* %copy_mems.addr.019.i.i.i.i, i64 0, i32 1
  %rtx3.i220.i.i.i = bitcast [1 x %union.rtunion_def]* %fld1.i.i.i.i to %struct.rtx_def**
  %372 = load %struct.rtx_def** %rtx3.i220.i.i.i, align 8, !tbaa !1
  %call4.i.i.i.i = call %struct.rtx_def* @alloc_EXPR_LIST(i32 0, %struct.rtx_def* %372, %struct.rtx_def* %new_mems.022.i.i.i.i) #4
  %arrayidx6.i.i.i.i = getelementptr inbounds %struct.rtx_def* %copy_insns.addr.020.i.i.i.i, i64 0, i32 1, i64 1
  %rtx7.i.i.i.i = bitcast %union.rtunion_def* %arrayidx6.i.i.i.i to %struct.rtx_def**
  %373 = load %struct.rtx_def** %rtx7.i.i.i.i, align 8, !tbaa !1
  %arrayidx9.i.i.i.i = getelementptr inbounds %struct.rtx_def* %copy_mems.addr.019.i.i.i.i, i64 0, i32 1, i64 1
  %rtx10.i.i.i.i = bitcast %union.rtunion_def* %arrayidx9.i.i.i.i to %struct.rtx_def**
  %tobool.i221.i.i.i = icmp eq %struct.rtx_def* %373, null
  br i1 %tobool.i221.i.i.i, label %concat_insn_mem_list.exit.i.i.i, label %while.body.i.i.i.i

concat_insn_mem_list.exit.i.i.i:                  ; preds = %while.body.i.i.i.i, %do.end.i.i.i
  %new_mems.0.lcssa.i.i.i.i = phi %struct.rtx_def* [ %370, %do.end.i.i.i ], [ %call4.i.i.i.i, %while.body.i.i.i.i ]
  %new_insns.0.lcssa.i.i.i.i = phi %struct.rtx_def* [ %369, %do.end.i.i.i ], [ %call.i219.i.i.i, %while.body.i.i.i.i ]
  store %struct.rtx_def* %new_insns.0.lcssa.i.i.i.i, %struct.rtx_def** %pending_read_insns74.i.i.i, align 8, !tbaa !1
  store %struct.rtx_def* %new_mems.0.lcssa.i.i.i.i, %struct.rtx_def** %pending_read_mems75.i.i.i, align 8, !tbaa !1
  %374 = load %struct.rtx_def** %pending_write_insns.i.i.i, align 8, !tbaa !70
  %pending_write_insns76.i.i.i = getelementptr inbounds %struct.deps* %340, i64 %idx.ext.i.i.i, i32 2
  %pending_write_mems77.i.i.i = getelementptr inbounds %struct.deps* %340, i64 %idx.ext.i.i.i, i32 3
  %375 = load %struct.rtx_def** %pending_write_insns76.i.i.i, align 8, !tbaa !1
  %376 = load %struct.rtx_def** %pending_write_mems77.i.i.i, align 8, !tbaa !1
  %tobool18.i222.i.i.i = icmp eq %struct.rtx_def* %374, null
  br i1 %tobool18.i222.i.i.i, label %concat_insn_mem_list.exit241.i.i.i, label %while.body.i238.i.i.i

while.body.i238.i.i.i:                            ; preds = %concat_insn_mem_list.exit.i.i.i, %while.body.i238.i.i.i
  %new_mems.022.i223.i.i.i = phi %struct.rtx_def* [ %call4.i232.i.i.i, %while.body.i238.i.i.i ], [ %376, %concat_insn_mem_list.exit.i.i.i ]
  %new_insns.021.i224.i.i.i = phi %struct.rtx_def* [ %call.i229.i.i.i, %while.body.i238.i.i.i ], [ %375, %concat_insn_mem_list.exit.i.i.i ]
  %copy_insns.addr.020.i225.i.i.i = phi %struct.rtx_def* [ %379, %while.body.i238.i.i.i ], [ %374, %concat_insn_mem_list.exit.i.i.i ]
  %copy_mems.addr.019.i226.in.i.i.i = phi %struct.rtx_def** [ %rtx10.i236.i.i.i, %while.body.i238.i.i.i ], [ %pending_write_mems.i.i.i, %concat_insn_mem_list.exit.i.i.i ]
  %copy_mems.addr.019.i226.i.i.i = load %struct.rtx_def** %copy_mems.addr.019.i226.in.i.i.i, align 8
  %fld.i227.i.i.i = getelementptr inbounds %struct.rtx_def* %copy_insns.addr.020.i225.i.i.i, i64 0, i32 1
  %rtx.i228.i.i.i = bitcast [1 x %union.rtunion_def]* %fld.i227.i.i.i to %struct.rtx_def**
  %377 = load %struct.rtx_def** %rtx.i228.i.i.i, align 8, !tbaa !1
  %call.i229.i.i.i = call %struct.rtx_def* @alloc_INSN_LIST(%struct.rtx_def* %377, %struct.rtx_def* %new_insns.021.i224.i.i.i) #4
  %fld1.i230.i.i.i = getelementptr inbounds %struct.rtx_def* %copy_mems.addr.019.i226.i.i.i, i64 0, i32 1
  %rtx3.i231.i.i.i = bitcast [1 x %union.rtunion_def]* %fld1.i230.i.i.i to %struct.rtx_def**
  %378 = load %struct.rtx_def** %rtx3.i231.i.i.i, align 8, !tbaa !1
  %call4.i232.i.i.i = call %struct.rtx_def* @alloc_EXPR_LIST(i32 0, %struct.rtx_def* %378, %struct.rtx_def* %new_mems.022.i223.i.i.i) #4
  %arrayidx6.i233.i.i.i = getelementptr inbounds %struct.rtx_def* %copy_insns.addr.020.i225.i.i.i, i64 0, i32 1, i64 1
  %rtx7.i234.i.i.i = bitcast %union.rtunion_def* %arrayidx6.i233.i.i.i to %struct.rtx_def**
  %379 = load %struct.rtx_def** %rtx7.i234.i.i.i, align 8, !tbaa !1
  %arrayidx9.i235.i.i.i = getelementptr inbounds %struct.rtx_def* %copy_mems.addr.019.i226.i.i.i, i64 0, i32 1, i64 1
  %rtx10.i236.i.i.i = bitcast %union.rtunion_def* %arrayidx9.i235.i.i.i to %struct.rtx_def**
  %tobool.i237.i.i.i = icmp eq %struct.rtx_def* %379, null
  br i1 %tobool.i237.i.i.i, label %concat_insn_mem_list.exit241.i.i.i, label %while.body.i238.i.i.i

concat_insn_mem_list.exit241.i.i.i:               ; preds = %while.body.i238.i.i.i, %concat_insn_mem_list.exit.i.i.i
  %new_mems.0.lcssa.i239.i.i.i = phi %struct.rtx_def* [ %376, %concat_insn_mem_list.exit.i.i.i ], [ %call4.i232.i.i.i, %while.body.i238.i.i.i ]
  %new_insns.0.lcssa.i240.i.i.i = phi %struct.rtx_def* [ %375, %concat_insn_mem_list.exit.i.i.i ], [ %call.i229.i.i.i, %while.body.i238.i.i.i ]
  store %struct.rtx_def* %new_insns.0.lcssa.i240.i.i.i, %struct.rtx_def** %pending_write_insns76.i.i.i, align 8, !tbaa !1
  store %struct.rtx_def* %new_mems.0.lcssa.i239.i.i.i, %struct.rtx_def** %pending_write_mems77.i.i.i, align 8, !tbaa !1
  %380 = load %struct.rtx_def** %last_pending_memory_flush.i.i.i, align 8, !tbaa !71
  %last_pending_memory_flush78.i.i.i = getelementptr inbounds %struct.deps* %340, i64 %idx.ext.i.i.i, i32 6
  %381 = load %struct.rtx_def** %last_pending_memory_flush78.i.i.i, align 8, !tbaa !71
  %tobool7.i242.i.i.i = icmp eq %struct.rtx_def* %380, null
  br i1 %tobool7.i242.i.i.i, label %concat_INSN_LIST.exit253.i.i.i, label %for.body.i251.i.i.i

for.body.i251.i.i.i:                              ; preds = %concat_insn_mem_list.exit241.i.i.i, %for.body.i251.i.i.i
  %new.09.i243.i.i.i = phi %struct.rtx_def* [ %call.i247.i.i.i, %for.body.i251.i.i.i ], [ %381, %concat_insn_mem_list.exit241.i.i.i ]
  %copy.addr.08.i244.i.i.i = phi %struct.rtx_def* [ %383, %for.body.i251.i.i.i ], [ %380, %concat_insn_mem_list.exit241.i.i.i ]
  %fld.i245.i.i.i = getelementptr inbounds %struct.rtx_def* %copy.addr.08.i244.i.i.i, i64 0, i32 1
  %rtx.i246.i.i.i = bitcast [1 x %union.rtunion_def]* %fld.i245.i.i.i to %struct.rtx_def**
  %382 = load %struct.rtx_def** %rtx.i246.i.i.i, align 8, !tbaa !1
  %call.i247.i.i.i = call %struct.rtx_def* @alloc_INSN_LIST(%struct.rtx_def* %382, %struct.rtx_def* %new.09.i243.i.i.i) #4
  %arrayidx2.i248.i.i.i = getelementptr inbounds %struct.rtx_def* %copy.addr.08.i244.i.i.i, i64 0, i32 1, i64 1
  %rtx3.i249.i.i.i = bitcast %union.rtunion_def* %arrayidx2.i248.i.i.i to %struct.rtx_def**
  %383 = load %struct.rtx_def** %rtx3.i249.i.i.i, align 8, !tbaa !1
  %tobool.i250.i.i.i = icmp eq %struct.rtx_def* %383, null
  br i1 %tobool.i250.i.i.i, label %concat_INSN_LIST.exit253.i.i.i, label %for.body.i251.i.i.i

concat_INSN_LIST.exit253.i.i.i:                   ; preds = %for.body.i251.i.i.i, %concat_insn_mem_list.exit241.i.i.i
  %new.0.lcssa.i252.i.i.i = phi %struct.rtx_def* [ %381, %concat_insn_mem_list.exit241.i.i.i ], [ %call.i247.i.i.i, %for.body.i251.i.i.i ]
  store %struct.rtx_def* %new.0.lcssa.i252.i.i.i, %struct.rtx_def** %last_pending_memory_flush78.i.i.i, align 8, !tbaa !71
  %384 = load i64* %290, align 8
  %385 = trunc i64 %384 to i32
  %pending_lists_length81.i.i.i = getelementptr inbounds %struct.deps* %340, i64 %idx.ext.i.i.i, i32 4
  %386 = load i32* %pending_lists_length81.i.i.i, align 4, !tbaa !72
  %add82.i.i.i = add nsw i32 %386, %385
  store i32 %add82.i.i.i, i32* %pending_lists_length81.i.i.i, align 4, !tbaa !72
  %387 = lshr i64 %384, 32
  %388 = trunc i64 %387 to i32
  %pending_flush_length83.i.i.i = getelementptr inbounds %struct.deps* %340, i64 %idx.ext.i.i.i, i32 5
  %389 = load i32* %pending_flush_length83.i.i.i, align 4, !tbaa !73
  %add84.i.i.i = add nsw i32 %389, %388
  store i32 %add84.i.i.i, i32* %pending_flush_length83.i.i.i, align 4, !tbaa !73
  %390 = load %struct.rtx_def** %last_function_call.i.i.i, align 8, !tbaa !74
  %last_function_call85.i.i.i = getelementptr inbounds %struct.deps* %340, i64 %idx.ext.i.i.i, i32 7
  %391 = load %struct.rtx_def** %last_function_call85.i.i.i, align 8, !tbaa !74
  %tobool7.i254.i.i.i = icmp eq %struct.rtx_def* %390, null
  br i1 %tobool7.i254.i.i.i, label %concat_INSN_LIST.exit265.i.i.i, label %for.body.i263.i.i.i

for.body.i263.i.i.i:                              ; preds = %concat_INSN_LIST.exit253.i.i.i, %for.body.i263.i.i.i
  %new.09.i255.i.i.i = phi %struct.rtx_def* [ %call.i259.i.i.i, %for.body.i263.i.i.i ], [ %391, %concat_INSN_LIST.exit253.i.i.i ]
  %copy.addr.08.i256.i.i.i = phi %struct.rtx_def* [ %393, %for.body.i263.i.i.i ], [ %390, %concat_INSN_LIST.exit253.i.i.i ]
  %fld.i257.i.i.i = getelementptr inbounds %struct.rtx_def* %copy.addr.08.i256.i.i.i, i64 0, i32 1
  %rtx.i258.i.i.i = bitcast [1 x %union.rtunion_def]* %fld.i257.i.i.i to %struct.rtx_def**
  %392 = load %struct.rtx_def** %rtx.i258.i.i.i, align 8, !tbaa !1
  %call.i259.i.i.i = call %struct.rtx_def* @alloc_INSN_LIST(%struct.rtx_def* %392, %struct.rtx_def* %new.09.i255.i.i.i) #4
  %arrayidx2.i260.i.i.i = getelementptr inbounds %struct.rtx_def* %copy.addr.08.i256.i.i.i, i64 0, i32 1, i64 1
  %rtx3.i261.i.i.i = bitcast %union.rtunion_def* %arrayidx2.i260.i.i.i to %struct.rtx_def**
  %393 = load %struct.rtx_def** %rtx3.i261.i.i.i, align 8, !tbaa !1
  %tobool.i262.i.i.i = icmp eq %struct.rtx_def* %393, null
  br i1 %tobool.i262.i.i.i, label %concat_INSN_LIST.exit265.i.i.i, label %for.body.i263.i.i.i

concat_INSN_LIST.exit265.i.i.i:                   ; preds = %for.body.i263.i.i.i, %concat_INSN_LIST.exit253.i.i.i
  %new.0.lcssa.i264.i.i.i = phi %struct.rtx_def* [ %391, %concat_INSN_LIST.exit253.i.i.i ], [ %call.i259.i.i.i, %for.body.i263.i.i.i ]
  store %struct.rtx_def* %new.0.lcssa.i264.i.i.i, %struct.rtx_def** %last_function_call85.i.i.i, align 8, !tbaa !74
  %394 = load %struct.rtx_def** %sched_before_next_call.i.i.i, align 8, !tbaa !75
  %sched_before_next_call88.i.i.i = getelementptr inbounds %struct.deps* %340, i64 %idx.ext.i.i.i, i32 8
  %395 = load %struct.rtx_def** %sched_before_next_call88.i.i.i, align 8, !tbaa !75
  %tobool7.i266.i.i.i = icmp eq %struct.rtx_def* %394, null
  br i1 %tobool7.i266.i.i.i, label %concat_INSN_LIST.exit277.i.i.i, label %for.body.i275.i.i.i

for.body.i275.i.i.i:                              ; preds = %concat_INSN_LIST.exit265.i.i.i, %for.body.i275.i.i.i
  %new.09.i267.i.i.i = phi %struct.rtx_def* [ %call.i271.i.i.i, %for.body.i275.i.i.i ], [ %395, %concat_INSN_LIST.exit265.i.i.i ]
  %copy.addr.08.i268.i.i.i = phi %struct.rtx_def* [ %397, %for.body.i275.i.i.i ], [ %394, %concat_INSN_LIST.exit265.i.i.i ]
  %fld.i269.i.i.i = getelementptr inbounds %struct.rtx_def* %copy.addr.08.i268.i.i.i, i64 0, i32 1
  %rtx.i270.i.i.i = bitcast [1 x %union.rtunion_def]* %fld.i269.i.i.i to %struct.rtx_def**
  %396 = load %struct.rtx_def** %rtx.i270.i.i.i, align 8, !tbaa !1
  %call.i271.i.i.i = call %struct.rtx_def* @alloc_INSN_LIST(%struct.rtx_def* %396, %struct.rtx_def* %new.09.i267.i.i.i) #4
  %arrayidx2.i272.i.i.i = getelementptr inbounds %struct.rtx_def* %copy.addr.08.i268.i.i.i, i64 0, i32 1, i64 1
  %rtx3.i273.i.i.i = bitcast %union.rtunion_def* %arrayidx2.i272.i.i.i to %struct.rtx_def**
  %397 = load %struct.rtx_def** %rtx3.i273.i.i.i, align 8, !tbaa !1
  %tobool.i274.i.i.i = icmp eq %struct.rtx_def* %397, null
  br i1 %tobool.i274.i.i.i, label %concat_INSN_LIST.exit277.i.i.i, label %for.body.i275.i.i.i

concat_INSN_LIST.exit277.i.i.i:                   ; preds = %for.body.i275.i.i.i, %concat_INSN_LIST.exit265.i.i.i
  %new.0.lcssa.i276.i.i.i = phi %struct.rtx_def* [ %395, %concat_INSN_LIST.exit265.i.i.i ], [ %call.i271.i.i.i, %for.body.i275.i.i.i ]
  store %struct.rtx_def* %new.0.lcssa.i276.i.i.i, %struct.rtx_def** %sched_before_next_call88.i.i.i, align 8, !tbaa !75
  %.pn.pre.i.i.i = load %struct.haifa_edge** @edge_table, align 8
  br label %do.cond.i.i.i

do.cond.i.i.i:                                    ; preds = %concat_INSN_LIST.exit277.i.i.i, %do.body.i.i.i
  %.pn.i.i.i = phi %struct.haifa_edge* [ %336, %do.body.i.i.i ], [ %.pn.pre.i.i.i, %concat_INSN_LIST.exit277.i.i.i ]
  %e.1.in.i.i.i = getelementptr inbounds %struct.haifa_edge* %.pn.i.i.i, i64 %idxprom3.i.i.i, i32 3
  %e.1.i.i.i = load i32* %e.1.in.i.i.i, align 4
  %cmp94.i.i.i = icmp eq i32 %e.1.i.i.i, %335
  br i1 %cmp94.i.i.i, label %propagate_deps.exit.i.i, label %do.body.i.i.i

propagate_deps.exit.i.i:                          ; preds = %do.cond.i.i.i, %if.then.i.i106
  %398 = load %struct.rtx_def** %pending_read_insns.i.i.i, align 8, !tbaa !69
  %399 = load %struct.deps** @bb_deps, align 8, !tbaa !1
  %pending_read_insns100.i.i.i = getelementptr inbounds %struct.deps* %399, i64 %indvars.iv299.i, i32 0
  store %struct.rtx_def* %398, %struct.rtx_def** %pending_read_insns100.i.i.i, align 8, !tbaa !69
  %400 = load %struct.rtx_def** %pending_read_mems.i.i.i, align 8, !tbaa !76
  %401 = load %struct.deps** @bb_deps, align 8, !tbaa !1
  %pending_read_mems104.i.i.i = getelementptr inbounds %struct.deps* %401, i64 %indvars.iv299.i, i32 1
  store %struct.rtx_def* %400, %struct.rtx_def** %pending_read_mems104.i.i.i, align 8, !tbaa !76
  %402 = load %struct.rtx_def** %pending_write_insns.i.i.i, align 8, !tbaa !70
  %403 = load %struct.deps** @bb_deps, align 8, !tbaa !1
  %pending_write_insns108.i.i.i = getelementptr inbounds %struct.deps* %403, i64 %indvars.iv299.i, i32 2
  store %struct.rtx_def* %402, %struct.rtx_def** %pending_write_insns108.i.i.i, align 8, !tbaa !70
  %404 = load %struct.rtx_def** %pending_write_mems.i.i.i, align 8, !tbaa !77
  %405 = load %struct.deps** @bb_deps, align 8, !tbaa !1
  %pending_write_mems112.i.i.i = getelementptr inbounds %struct.deps* %405, i64 %indvars.iv299.i, i32 3
  store %struct.rtx_def* %404, %struct.rtx_def** %pending_write_mems112.i.i.i, align 8, !tbaa !77
  call void @llvm.memset.p0i8.i64(i8* %289, i8 0, i64 32, i32 8, i1 false) #4
  br label %compute_block_backward_dependences.exit.i

compute_block_backward_dependences.exit.i:        ; preds = %propagate_deps.exit.i.i, %add_branch_dependences.exit.i.i
  call void @free_deps(%struct.deps* %tmp_deps.i.i) #4
  call void @llvm.lifetime.end(i64 104, i8* %289) #4
  call void @llvm.lifetime.end(i64 8, i8* %287) #4
  call void @llvm.lifetime.end(i64 8, i8* %288) #4
  %indvars.iv.next300.i = add nuw nsw i64 %indvars.iv299.i, 1
  %406 = load i32* @current_nr_blocks, align 4, !tbaa !5
  %407 = trunc i64 %indvars.iv.next300.i to i32
  %cmp5.i = icmp slt i32 %407, %406
  br i1 %cmp5.i, label %for.body7.i, label %for.cond11.preheader.i

for.cond19.preheader.i:                           ; preds = %for.body14.i
  %.pre.i = load i32* @current_nr_blocks, align 4, !tbaa !5
  %cmp20276.i = icmp sgt i32 %.pre.i, 0
  br i1 %cmp20276.i, label %for.body22.i, label %if.end182.i

for.body14.i:                                     ; preds = %for.cond11.preheader.i, %for.body14.i
  %bb.2283.in.i = phi i32 [ %bb.2283.i, %for.body14.i ], [ %406, %for.cond11.preheader.i ]
  %bb.2283.i = add nsw i32 %bb.2283.in.i, -1
  %408 = load i32* @current_blocks, align 4, !tbaa !5
  %add.i = add nsw i32 %408, %bb.2283.i
  %idxprom15.i = sext i32 %add.i to i64
  %409 = load i32** @rgn_bb_table, align 8, !tbaa !1
  %arrayidx16.i = getelementptr inbounds i32* %409, i64 %idxprom15.i
  %410 = load i32* %arrayidx16.i, align 4, !tbaa !5
  call void @get_block_head_tail(i32 %410, %struct.rtx_def** %head.i, %struct.rtx_def** %tail.i) #4
  %411 = load %struct.rtx_def** %head.i, align 8, !tbaa !1
  %412 = load %struct.rtx_def** %tail.i, align 8, !tbaa !1
  call void @compute_forward_dependences(%struct.rtx_def* %411, %struct.rtx_def* %412) #4
  %cmp12.i = icmp sgt i32 %bb.2283.i, 0
  br i1 %cmp12.i, label %for.body14.i, label %for.cond19.preheader.i

for.body22.i:                                     ; preds = %for.cond19.preheader.i, %for.body22.i
  %bb.3278.i = phi i32 [ %inc31.i, %for.body22.i ], [ 0, %for.cond19.preheader.i ]
  %rgn_n_insns.0277.i = phi i32 [ %add29.i, %for.body22.i ], [ 0, %for.cond19.preheader.i ]
  %413 = load i32* @current_blocks, align 4, !tbaa !5
  %add25.i = add nsw i32 %413, %bb.3278.i
  %idxprom26.i = sext i32 %add25.i to i64
  %414 = load i32** @rgn_bb_table, align 8, !tbaa !1
  %arrayidx27.i = getelementptr inbounds i32* %414, i64 %idxprom26.i
  %415 = load i32* %arrayidx27.i, align 4, !tbaa !5
  call void @get_block_head_tail(i32 %415, %struct.rtx_def** %head23.i, %struct.rtx_def** %tail24.i) #4
  %416 = load %struct.rtx_def** %head23.i, align 8, !tbaa !1
  %417 = load %struct.rtx_def** %tail24.i, align 8, !tbaa !1
  %call28.i = call i32 @set_priorities(%struct.rtx_def* %416, %struct.rtx_def* %417) #4
  %add29.i = add nsw i32 %call28.i, %rgn_n_insns.0277.i
  %inc31.i = add nsw i32 %bb.3278.i, 1
  %418 = load i32* @current_nr_blocks, align 4, !tbaa !5
  %cmp20.i108 = icmp slt i32 %inc31.i, %418
  br i1 %cmp20.i108, label %for.body22.i, label %for.end32.i

for.end32.i:                                      ; preds = %for.body22.i
  %cmp33.i = icmp sgt i32 %418, 1
  br i1 %cmp33.i, label %if.then.i109, label %for.cond91.preheader.i

for.cond91.preheader.i:                           ; preds = %compute_dom_prob_ps.exit.i, %for.end32.i
  %419 = phi i32 [ %418, %for.end32.i ], [ %524, %compute_dom_prob_ps.exit.i ]
  %cmp92264.i = icmp sgt i32 %419, 0
  br i1 %cmp92264.i, label %for.body94.i, label %for.end178.i

if.then.i109:                                     ; preds = %for.end32.i
  %conv35.i = sext i32 %418 to i64
  %mul36.i = shl nsw i64 %conv35.i, 2
  %call37.i = call noalias i8* @xmalloc(i64 %mul36.i) #4
  %420 = bitcast i8* %call37.i to float*
  store float* %420, float** @prob, align 8, !tbaa !1
  %421 = load i32* @current_nr_blocks, align 4, !tbaa !5
  %call38.i = call %struct.simple_bitmap_def** @sbitmap_vector_alloc(i32 %421, i32 %421) #4
  store %struct.simple_bitmap_def** %call38.i, %struct.simple_bitmap_def*** @dom, align 8, !tbaa !1
  %422 = load i32* @current_nr_blocks, align 4, !tbaa !5
  call void @sbitmap_vector_zero(%struct.simple_bitmap_def** %call38.i, i32 %422) #4
  store i32 0, i32* @rgn_nr_edges, align 4, !tbaa !5
  %423 = load i32* @nr_edges, align 4, !tbaa !5
  %conv39.i = sext i32 %423 to i64
  %mul40.i = shl nsw i64 %conv39.i, 2
  %call41.i = call noalias i8* @xmalloc(i64 %mul40.i) #4
  %424 = bitcast i8* %call41.i to i32*
  store i32* %424, i32** @edge_to_bit, align 8, !tbaa !1
  %425 = load i32* @nr_edges, align 4, !tbaa !5
  %cmp43274.i = icmp sgt i32 %425, 1
  br i1 %cmp43274.i, label %for.body45.lr.ph.i, label %for.end58.i

for.body45.lr.ph.i:                               ; preds = %if.then.i109
  %426 = load %struct.haifa_edge** @edge_table, align 8, !tbaa !1
  %427 = load i32** @containing_rgn, align 8, !tbaa !1
  br label %for.body45.i

for.body45.i:                                     ; preds = %for.inc56.i, %for.body45.lr.ph.i
  %indvars.iv297.i = phi i64 [ 1, %for.body45.lr.ph.i ], [ %indvars.iv.next298.i, %for.inc56.i ]
  %from_block.i = getelementptr inbounds %struct.haifa_edge* %426, i64 %indvars.iv297.i, i32 0
  %428 = load i32* %from_block.i, align 4, !tbaa !43
  %idxprom48.i = sext i32 %428 to i64
  %arrayidx49.i = getelementptr inbounds i32* %427, i64 %idxprom48.i
  %429 = load i32* %arrayidx49.i, align 4, !tbaa !5
  %430 = trunc i64 %indvars.iv233 to i32
  %cmp50.i = icmp eq i32 %429, %430
  br i1 %cmp50.i, label %if.then52.i, label %for.inc56.i

if.then52.i:                                      ; preds = %for.body45.i
  %431 = load i32* @rgn_nr_edges, align 4, !tbaa !5
  %inc53.i = add nsw i32 %431, 1
  store i32 %inc53.i, i32* @rgn_nr_edges, align 4, !tbaa !5
  %arrayidx55.i = getelementptr inbounds i32* %424, i64 %indvars.iv297.i
  store i32 %431, i32* %arrayidx55.i, align 4, !tbaa !5
  br label %for.inc56.i

for.inc56.i:                                      ; preds = %if.then52.i, %for.body45.i
  %indvars.iv.next298.i = add nuw nsw i64 %indvars.iv297.i, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next298.i to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %425
  br i1 %exitcond, label %for.end58.i, label %for.body45.i

for.end58.i:                                      ; preds = %for.inc56.i, %if.then.i109
  %432 = load i32* @rgn_nr_edges, align 4, !tbaa !5
  %conv59.i = sext i32 %432 to i64
  %mul60.i = shl nsw i64 %conv59.i, 2
  %call61.i = call noalias i8* @xmalloc(i64 %mul60.i) #4
  %433 = bitcast i8* %call61.i to i32*
  store i32* %433, i32** @rgn_edges, align 8, !tbaa !1
  store i32 0, i32* @rgn_nr_edges, align 4, !tbaa !5
  %434 = load i32* @nr_edges, align 4, !tbaa !5
  %cmp63272.i = icmp sgt i32 %434, 1
  br i1 %cmp63272.i, label %for.body65.lr.ph.i, label %for.end80.i

for.body65.lr.ph.i:                               ; preds = %for.end58.i
  %435 = load %struct.haifa_edge** @edge_table, align 8, !tbaa !1
  %436 = load i32** @containing_rgn, align 8, !tbaa !1
  br label %for.body65.i

for.body65.i:                                     ; preds = %for.inc78.i, %for.body65.lr.ph.i
  %437 = phi i32 [ 0, %for.body65.lr.ph.i ], [ %.pre303.i, %for.inc78.i ]
  %indvars.iv295.i = phi i64 [ 1, %for.body65.lr.ph.i ], [ %indvars.iv.next296.i, %for.inc78.i ]
  %from_block68.i = getelementptr inbounds %struct.haifa_edge* %435, i64 %indvars.iv295.i, i32 0
  %438 = load i32* %from_block68.i, align 4, !tbaa !43
  %idxprom69.i = sext i32 %438 to i64
  %arrayidx70.i = getelementptr inbounds i32* %436, i64 %idxprom69.i
  %439 = load i32* %arrayidx70.i, align 4, !tbaa !5
  %440 = trunc i64 %indvars.iv233 to i32
  %cmp71.i = icmp eq i32 %439, %440
  br i1 %cmp71.i, label %if.then73.i, label %for.inc78.i

if.then73.i:                                      ; preds = %for.body65.i
  %inc74.i = add nsw i32 %437, 1
  store i32 %inc74.i, i32* @rgn_nr_edges, align 4, !tbaa !5
  %idxprom75.i = sext i32 %437 to i64
  %arrayidx76.i = getelementptr inbounds i32* %433, i64 %idxprom75.i
  %441 = trunc i64 %indvars.iv295.i to i32
  store i32 %441, i32* %arrayidx76.i, align 4, !tbaa !5
  br label %for.inc78.i

for.inc78.i:                                      ; preds = %if.then73.i, %for.body65.i
  %.pre303.i = phi i32 [ %437, %for.body65.i ], [ %inc74.i, %if.then73.i ]
  %indvars.iv.next296.i = add nuw nsw i64 %indvars.iv295.i, 1
  %lftr.wideiv231 = trunc i64 %indvars.iv.next296.i to i32
  %exitcond232 = icmp eq i32 %lftr.wideiv231, %434
  br i1 %exitcond232, label %for.end80.i, label %for.body65.i

for.end80.i:                                      ; preds = %for.inc78.i, %for.end58.i
  %442 = phi i32 [ 0, %for.end58.i ], [ %.pre303.i, %for.inc78.i ]
  %443 = load i32* @current_nr_blocks, align 4, !tbaa !5
  %call81.i = call %struct.simple_bitmap_def** @sbitmap_vector_alloc(i32 %443, i32 %442) #4
  store %struct.simple_bitmap_def** %call81.i, %struct.simple_bitmap_def*** @pot_split, align 8, !tbaa !1
  %444 = load i32* @current_nr_blocks, align 4, !tbaa !5
  call void @sbitmap_vector_zero(%struct.simple_bitmap_def** %call81.i, i32 %444) #4
  %445 = load i32* @current_nr_blocks, align 4, !tbaa !5
  %446 = load i32* @rgn_nr_edges, align 4, !tbaa !5
  %call82.i = call %struct.simple_bitmap_def** @sbitmap_vector_alloc(i32 %445, i32 %446) #4
  store %struct.simple_bitmap_def** %call82.i, %struct.simple_bitmap_def*** @ancestor_edges, align 8, !tbaa !1
  %447 = load i32* @current_nr_blocks, align 4, !tbaa !5
  call void @sbitmap_vector_zero(%struct.simple_bitmap_def** %call82.i, i32 %447) #4
  %448 = load i32* @current_nr_blocks, align 4, !tbaa !5
  %cmp84269.i = icmp sgt i32 %448, 0
  br i1 %cmp84269.i, label %for.body86.i, label %for.end178.i

for.body86.i:                                     ; preds = %for.end80.i, %compute_dom_prob_ps.exit.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %compute_dom_prob_ps.exit.i ], [ 0, %for.end80.i ]
  %449 = load float** @prob, align 8, !tbaa !1
  %arrayidx.i250.i = getelementptr inbounds float* %449, i64 %indvars.iv.i
  store float 0.000000e+00, float* %arrayidx.i250.i, align 4, !tbaa !78
  %450 = trunc i64 %indvars.iv.i to i32
  %tobool.i.i110 = icmp eq i32 %450, 0
  br i1 %tobool.i.i110, label %if.then.i252.i, label %if.end.i.i113

if.then.i252.i:                                   ; preds = %for.body86.i
  %451 = load %struct.simple_bitmap_def*** @dom, align 8, !tbaa !1
  %arrayidx2.i251.i = getelementptr inbounds %struct.simple_bitmap_def** %451, i64 %indvars.iv.i
  %452 = load %struct.simple_bitmap_def** %arrayidx2.i251.i, align 8, !tbaa !1
  %arrayidx3.i.i = getelementptr inbounds %struct.simple_bitmap_def* %452, i64 0, i32 3, i64 0
  %453 = load i64* %arrayidx3.i.i, align 8, !tbaa !48
  %or.i.i111 = or i64 %453, 1
  store i64 %or.i.i111, i64* %arrayidx3.i.i, align 8, !tbaa !48
  store float 1.000000e+00, float* %arrayidx.i250.i, align 4, !tbaa !78
  br label %compute_dom_prob_ps.exit.i

if.end.i.i113:                                    ; preds = %for.body86.i
  %454 = load i32* @current_blocks, align 4, !tbaa !5
  %add.i253.i = add nsw i32 %454, %450
  %idxprom6.i.i = sext i32 %add.i253.i to i64
  %455 = load i32** @rgn_bb_table, align 8, !tbaa !1
  %arrayidx7.i.i = getelementptr inbounds i32* %455, i64 %idxprom6.i.i
  %456 = load i32* %arrayidx7.i.i, align 4, !tbaa !5
  %idxprom8.i.i = sext i32 %456 to i64
  %457 = load i32** @in_edges, align 8, !tbaa !1
  %arrayidx9.i.i = getelementptr inbounds i32* %457, i64 %idxprom8.i.i
  %458 = load i32* %arrayidx9.i.i, align 4, !tbaa !5
  %459 = load %struct.simple_bitmap_def*** @dom, align 8, !tbaa !1
  %arrayidx11.i.i = getelementptr inbounds %struct.simple_bitmap_def** %459, i64 %indvars.iv.i
  %460 = load %struct.simple_bitmap_def** %arrayidx11.i.i, align 8, !tbaa !1
  call void @sbitmap_ones(%struct.simple_bitmap_def* %460) #4
  %.pre.i.i112 = load %struct.haifa_edge** @edge_table, align 8, !tbaa !1
  %.pre222.i.i = load i32** @block_to_bb, align 8, !tbaa !1
  br label %do.body.i.i

do.body.i.i:                                      ; preds = %if.end134.i.i, %if.end.i.i113
  %461 = phi i32* [ %.pre222.i.i, %if.end.i.i113 ], [ %505, %if.end134.i.i ]
  %462 = phi %struct.haifa_edge* [ %.pre.i.i112, %if.end.i.i113 ], [ %492, %if.end134.i.i ]
  %nxt_in_edge.0.i.i = phi i32 [ %458, %if.end.i.i113 ], [ %511, %if.end134.i.i ]
  %idxprom12.i.i = sext i32 %nxt_in_edge.0.i.i to i64
  %from_block.i.i114 = getelementptr inbounds %struct.haifa_edge* %462, i64 %idxprom12.i.i, i32 0
  %463 = load i32* %from_block.i.i114, align 4, !tbaa !43
  %464 = load %struct.simple_bitmap_def*** @dom, align 8, !tbaa !1
  %arrayidx15.i.i = getelementptr inbounds %struct.simple_bitmap_def** %464, i64 %indvars.iv.i
  %465 = load %struct.simple_bitmap_def** %arrayidx15.i.i, align 8, !tbaa !1
  %idxprom18.i.i = sext i32 %463 to i64
  %arrayidx19.i.i = getelementptr inbounds i32* %461, i64 %idxprom18.i.i
  %466 = load i32* %arrayidx19.i.i, align 4, !tbaa !5
  %idxprom20.i.i = sext i32 %466 to i64
  %arrayidx21.i.i = getelementptr inbounds %struct.simple_bitmap_def** %464, i64 %idxprom20.i.i
  %467 = load %struct.simple_bitmap_def** %arrayidx21.i.i, align 8, !tbaa !1
  %call.i.i115 = call i32 @sbitmap_a_and_b(%struct.simple_bitmap_def* %465, %struct.simple_bitmap_def* %465, %struct.simple_bitmap_def* %467) #4
  %468 = load %struct.simple_bitmap_def*** @ancestor_edges, align 8, !tbaa !1
  %arrayidx23.i.i = getelementptr inbounds %struct.simple_bitmap_def** %468, i64 %indvars.iv.i
  %469 = load %struct.simple_bitmap_def** %arrayidx23.i.i, align 8, !tbaa !1
  %470 = load i32** @block_to_bb, align 8, !tbaa !1
  %arrayidx27.i.i = getelementptr inbounds i32* %470, i64 %idxprom18.i.i
  %471 = load i32* %arrayidx27.i.i, align 4, !tbaa !5
  %idxprom28.i.i = sext i32 %471 to i64
  %arrayidx29.i.i = getelementptr inbounds %struct.simple_bitmap_def** %468, i64 %idxprom28.i.i
  %472 = load %struct.simple_bitmap_def** %arrayidx29.i.i, align 8, !tbaa !1
  %call30.i.i = call i32 @sbitmap_a_or_b(%struct.simple_bitmap_def* %469, %struct.simple_bitmap_def* %469, %struct.simple_bitmap_def* %472) #4
  %473 = load i32** @edge_to_bit, align 8, !tbaa !1
  %arrayidx32.i.i116 = getelementptr inbounds i32* %473, i64 %idxprom12.i.i
  %474 = load i32* %arrayidx32.i.i116, align 4, !tbaa !5
  %rem.i.i117 = and i32 %474, 63
  %sh_prom.i.i118 = zext i32 %rem.i.i117 to i64
  %shl.i.i119 = shl i64 1, %sh_prom.i.i118
  %div.i.i120 = lshr i32 %474, 6
  %idxprom35.i.i121 = zext i32 %div.i.i120 to i64
  %475 = load %struct.simple_bitmap_def*** @ancestor_edges, align 8, !tbaa !1
  %arrayidx37.i.i = getelementptr inbounds %struct.simple_bitmap_def** %475, i64 %indvars.iv.i
  %476 = load %struct.simple_bitmap_def** %arrayidx37.i.i, align 8, !tbaa !1
  %arrayidx39.i.i = getelementptr inbounds %struct.simple_bitmap_def* %476, i64 0, i32 3, i64 %idxprom35.i.i121
  %477 = load i64* %arrayidx39.i.i, align 8, !tbaa !48
  %or40.i.i = or i64 %477, %shl.i.i119
  store i64 %or40.i.i, i64* %arrayidx39.i.i, align 8, !tbaa !48
  %478 = load i32** @out_edges, align 8, !tbaa !1
  %arrayidx42.i.i122 = getelementptr inbounds i32* %478, i64 %idxprom18.i.i
  %479 = load i32* %arrayidx42.i.i122, align 4, !tbaa !5
  %idxprom43.i.i = sext i32 %479 to i64
  %480 = load %struct.haifa_edge** @edge_table, align 8, !tbaa !1
  %next_out.i.i123 = getelementptr inbounds %struct.haifa_edge* %480, i64 %idxprom43.i.i, i32 3
  %481 = load i32* %next_out.i.i123, align 4, !tbaa !46
  %482 = load %struct.simple_bitmap_def*** @pot_split, align 8, !tbaa !1
  %arrayidx46.i.i = getelementptr inbounds %struct.simple_bitmap_def** %482, i64 %indvars.iv.i
  %483 = load %struct.simple_bitmap_def** %arrayidx46.i.i, align 8, !tbaa !1
  %484 = load i32** @block_to_bb, align 8, !tbaa !1
  %arrayidx50.i.i = getelementptr inbounds i32* %484, i64 %idxprom18.i.i
  %485 = load i32* %arrayidx50.i.i, align 4, !tbaa !5
  %idxprom51.i.i = sext i32 %485 to i64
  %arrayidx52.i.i = getelementptr inbounds %struct.simple_bitmap_def** %482, i64 %idxprom51.i.i
  %486 = load %struct.simple_bitmap_def** %arrayidx52.i.i, align 8, !tbaa !1
  %call53.i.i = call i32 @sbitmap_a_or_b(%struct.simple_bitmap_def* %483, %struct.simple_bitmap_def* %483, %struct.simple_bitmap_def* %486) #4
  %487 = load i32** @edge_to_bit, align 8, !tbaa !1
  %arrayidx55.i.i124 = getelementptr inbounds i32* %487, i64 %idxprom43.i.i
  %488 = load i32* %arrayidx55.i.i124, align 4, !tbaa !5
  %rem56.i.i = and i32 %488, 63
  %sh_prom57.i.i = zext i32 %rem56.i.i to i64
  %shl58.i.i = shl i64 1, %sh_prom57.i.i
  %div61.i.i = lshr i32 %488, 6
  %idxprom62.i.i = zext i32 %div61.i.i to i64
  %489 = load %struct.simple_bitmap_def*** @pot_split, align 8, !tbaa !1
  %arrayidx64.i.i = getelementptr inbounds %struct.simple_bitmap_def** %489, i64 %indvars.iv.i
  %490 = load %struct.simple_bitmap_def** %arrayidx64.i.i, align 8, !tbaa !1
  %arrayidx66.i.i = getelementptr inbounds %struct.simple_bitmap_def* %490, i64 0, i32 3, i64 %idxprom62.i.i
  %491 = load i64* %arrayidx66.i.i, align 8, !tbaa !48
  %or67.i.i = or i64 %491, %shl58.i.i
  store i64 %or67.i.i, i64* %arrayidx66.i.i, align 8, !tbaa !48
  %492 = load %struct.haifa_edge** @edge_table, align 8, !tbaa !1
  %to_block.i.i125 = getelementptr inbounds %struct.haifa_edge* %492, i64 %idxprom43.i.i, i32 1
  %493 = load i32* %to_block.i.i125, align 4, !tbaa !45
  %idxprom70.i.i = sext i32 %493 to i64
  %494 = load i32** @containing_rgn, align 8, !tbaa !1
  %arrayidx71.i.i = getelementptr inbounds i32* %494, i64 %idxprom70.i.i
  %495 = load i32* %arrayidx71.i.i, align 4, !tbaa !5
  %496 = load i32* @current_blocks, align 4, !tbaa !5
  %add72.i.i = add nsw i32 %496, %450
  %idxprom73.i.i = sext i32 %add72.i.i to i64
  %497 = load i32** @rgn_bb_table, align 8, !tbaa !1
  %arrayidx74.i.i = getelementptr inbounds i32* %497, i64 %idxprom73.i.i
  %498 = load i32* %arrayidx74.i.i, align 4, !tbaa !5
  %idxprom75.i.i126 = sext i32 %498 to i64
  %arrayidx76.i.i127 = getelementptr inbounds i32* %494, i64 %idxprom75.i.i126
  %499 = load i32* %arrayidx76.i.i127, align 4, !tbaa !5
  %not.cmp.i.i = icmp ne i32 %495, %499
  %..i.i = zext i1 %not.cmp.i.i to i32
  %cmp79217.i.i = icmp eq i32 %479, %481
  br i1 %cmp79217.i.i, label %while.end.i.i129, label %while.body.i.i

while.body.i.i:                                   ; preds = %do.body.i.i, %while.body.i.i
  %nr_rgn_out_edges.0220.i.i = phi i32 [ %nr_rgn_out_edges.0.inc93.i.i, %while.body.i.i ], [ %..i.i, %do.body.i.i ]
  %nr_out_edges.0219.i.i = phi i32 [ %inc80.i.i, %while.body.i.i ], [ 1, %do.body.i.i ]
  %nxt_out_edge.0218.i.i = phi i32 [ %504, %while.body.i.i ], [ %481, %do.body.i.i ]
  %inc80.i.i = add nsw i32 %nr_out_edges.0219.i.i, 1
  %idxprom81.i.i = sext i32 %nxt_out_edge.0218.i.i to i64
  %to_block83.i.i = getelementptr inbounds %struct.haifa_edge* %492, i64 %idxprom81.i.i, i32 1
  %500 = load i32* %to_block83.i.i, align 4, !tbaa !45
  %idxprom84.i.i = sext i32 %500 to i64
  %arrayidx85.i.i = getelementptr inbounds i32* %494, i64 %idxprom84.i.i
  %501 = load i32* %arrayidx85.i.i, align 4, !tbaa !5
  %not.cmp91.i.i = icmp ne i32 %501, %499
  %inc93.i.i = zext i1 %not.cmp91.i.i to i32
  %nr_rgn_out_edges.0.inc93.i.i = add nsw i32 %inc93.i.i, %nr_rgn_out_edges.0220.i.i
  %arrayidx96.i.i = getelementptr inbounds i32* %487, i64 %idxprom81.i.i
  %502 = load i32* %arrayidx96.i.i, align 4, !tbaa !5
  %rem97.i.i = and i32 %502, 63
  %sh_prom98.i.i = zext i32 %rem97.i.i to i64
  %shl99.i.i = shl i64 1, %sh_prom98.i.i
  %div102.i.i = lshr i32 %502, 6
  %idxprom103.i.i = zext i32 %div102.i.i to i64
  %arrayidx107.i.i = getelementptr inbounds %struct.simple_bitmap_def* %490, i64 0, i32 3, i64 %idxprom103.i.i
  %503 = load i64* %arrayidx107.i.i, align 8, !tbaa !48
  %or108.i.i = or i64 %shl99.i.i, %503
  store i64 %or108.i.i, i64* %arrayidx107.i.i, align 8, !tbaa !48
  %next_out111.i.i = getelementptr inbounds %struct.haifa_edge* %492, i64 %idxprom81.i.i, i32 3
  %504 = load i32* %next_out111.i.i, align 4, !tbaa !46
  %cmp79.i.i = icmp eq i32 %479, %504
  br i1 %cmp79.i.i, label %while.end.i.i129, label %while.body.i.i

while.end.i.i129:                                 ; preds = %while.body.i.i, %do.body.i.i
  %nr_rgn_out_edges.0.lcssa.i.i = phi i32 [ %..i.i, %do.body.i.i ], [ %nr_rgn_out_edges.0.inc93.i.i, %while.body.i.i ]
  %nr_out_edges.0.lcssa.i.i = phi i32 [ 1, %do.body.i.i ], [ %inc80.i.i, %while.body.i.i ]
  %sub.i.i128 = sub nsw i32 %nr_out_edges.0.lcssa.i.i, %nr_rgn_out_edges.0.lcssa.i.i
  %cmp112.i.i = icmp sgt i32 %nr_rgn_out_edges.0.lcssa.i.i, 0
  %505 = load i32** @block_to_bb, align 8, !tbaa !1
  %arrayidx115.i.i = getelementptr inbounds i32* %505, i64 %idxprom18.i.i
  %506 = load i32* %arrayidx115.i.i, align 4, !tbaa !5
  %idxprom116.i.i = sext i32 %506 to i64
  %507 = load float** @prob, align 8, !tbaa !1
  %arrayidx117.i.i = getelementptr inbounds float* %507, i64 %idxprom116.i.i
  %508 = load float* %arrayidx117.i.i, align 4, !tbaa !78
  br i1 %cmp112.i.i, label %if.then113.i.i, label %if.else.i.i132

if.then113.i.i:                                   ; preds = %while.end.i.i129
  %conv.i.i130 = fpext float %508 to double
  %mul.i.i131 = fmul double %conv.i.i130, 9.000000e-01
  %conv118.i.i = sitofp i32 %sub.i.i128 to double
  %div119.i.i = fdiv double %mul.i.i131, %conv118.i.i
  %arrayidx121.i.i = getelementptr inbounds float* %507, i64 %indvars.iv.i
  %509 = load float* %arrayidx121.i.i, align 4, !tbaa !78
  %conv122.i.i = fpext float %509 to double
  %add123.i.i = fadd double %div119.i.i, %conv122.i.i
  %conv124.i.i = fptrunc double %add123.i.i to float
  store float %conv124.i.i, float* %arrayidx121.i.i, align 4, !tbaa !78
  br label %if.end134.i.i

if.else.i.i132:                                   ; preds = %while.end.i.i129
  %conv129.i.i = sitofp i32 %sub.i.i128 to float
  %div130.i.i = fdiv float %508, %conv129.i.i
  %arrayidx132.i.i = getelementptr inbounds float* %507, i64 %indvars.iv.i
  %510 = load float* %arrayidx132.i.i, align 4, !tbaa !78
  %add133.i.i = fadd float %div130.i.i, %510
  store float %add133.i.i, float* %arrayidx132.i.i, align 4, !tbaa !78
  br label %if.end134.i.i

if.end134.i.i:                                    ; preds = %if.else.i.i132, %if.then113.i.i
  %next_in.i.i = getelementptr inbounds %struct.haifa_edge* %492, i64 %idxprom12.i.i, i32 2
  %511 = load i32* %next_in.i.i, align 4, !tbaa !47
  %cmp137.i.i = icmp eq i32 %458, %511
  br i1 %cmp137.i.i, label %do.end.i.i, label %do.body.i.i

do.end.i.i:                                       ; preds = %if.end134.i.i
  %rem139.i.i = and i64 %indvars.iv.i, 63
  %shl141.i.i = shl i64 1, %rem139.i.i
  %div142.i.i = lshr i64 %indvars.iv.i, 6
  %idxprom143.i.i = and i64 %div142.i.i, 67108863
  %512 = load %struct.simple_bitmap_def*** @dom, align 8, !tbaa !1
  %arrayidx145.i.i = getelementptr inbounds %struct.simple_bitmap_def** %512, i64 %indvars.iv.i
  %513 = load %struct.simple_bitmap_def** %arrayidx145.i.i, align 8, !tbaa !1
  %arrayidx147.i.i = getelementptr inbounds %struct.simple_bitmap_def* %513, i64 0, i32 3, i64 %idxprom143.i.i
  %514 = load i64* %arrayidx147.i.i, align 8, !tbaa !48
  %or148.i.i = or i64 %514, %shl141.i.i
  store i64 %or148.i.i, i64* %arrayidx147.i.i, align 8, !tbaa !48
  %515 = load %struct.simple_bitmap_def*** @ancestor_edges, align 8, !tbaa !1
  %arrayidx154.i.i = getelementptr inbounds %struct.simple_bitmap_def** %515, i64 %indvars.iv.i
  %516 = load %struct.simple_bitmap_def** %arrayidx154.i.i, align 8, !tbaa !1
  call void @sbitmap_difference(%struct.simple_bitmap_def* %490, %struct.simple_bitmap_def* %490, %struct.simple_bitmap_def* %516) #4
  %517 = load i32* @sched_verbose, align 4, !tbaa !5
  %cmp155.i.i = icmp sgt i32 %517, 1
  br i1 %cmp155.i.i, label %if.then157.i.i, label %compute_dom_prob_ps.exit.i

if.then157.i.i:                                   ; preds = %do.end.i.i
  %518 = load %struct._IO_FILE** @sched_dump, align 8, !tbaa !1
  %519 = load i32* @current_blocks, align 4, !tbaa !5
  %add158.i.i = add nsw i32 %519, %450
  %idxprom159.i.i = sext i32 %add158.i.i to i64
  %520 = load i32** @rgn_bb_table, align 8, !tbaa !1
  %arrayidx160.i.i = getelementptr inbounds i32* %520, i64 %idxprom159.i.i
  %521 = load i32* %arrayidx160.i.i, align 4, !tbaa !5
  %522 = load float** @prob, align 8, !tbaa !1
  %arrayidx162.i.i = getelementptr inbounds float* %522, i64 %indvars.iv.i
  %523 = load float* %arrayidx162.i.i, align 4, !tbaa !78
  %conv163.i.i = fpext float %523 to double
  %mul164.i.i = fmul double %conv163.i.i, 1.000000e+02
  %conv165.i.i = fptosi double %mul164.i.i to i32
  %call166.i.i = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %518, i8* getelementptr inbounds ([27 x i8]* @.str39, i64 0, i64 0), i32 %450, i32 %521, i32 %conv165.i.i) #4
  br label %compute_dom_prob_ps.exit.i

compute_dom_prob_ps.exit.i:                       ; preds = %if.then157.i.i, %do.end.i.i, %if.then.i252.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %524 = load i32* @current_nr_blocks, align 4, !tbaa !5
  %525 = trunc i64 %indvars.iv.next.i to i32
  %cmp84.i = icmp slt i32 %525, %524
  br i1 %cmp84.i, label %for.body86.i, label %for.cond91.preheader.i

for.body94.i:                                     ; preds = %for.cond91.preheader.i, %for.inc176.i
  %bb.5266.i = phi i32 [ %inc177.i, %for.inc176.i ], [ 0, %for.cond91.preheader.i ]
  %sched_rgn_n_insns.0265.i = phi i32 [ %sched_rgn_n_insns.1.i, %for.inc176.i ], [ 0, %for.cond91.preheader.i ]
  %526 = load i32* @current_blocks, align 4, !tbaa !5
  %add97.i = add nsw i32 %526, %bb.5266.i
  %idxprom98.i = sext i32 %add97.i to i64
  %527 = load i32** @rgn_bb_table, align 8, !tbaa !1
  %arrayidx99.i = getelementptr inbounds i32* %527, i64 %idxprom98.i
  %528 = load i32* %arrayidx99.i, align 4, !tbaa !5
  call void @get_block_head_tail(i32 %528, %struct.rtx_def** %head95.i, %struct.rtx_def** %tail96.i) #4
  %529 = load %struct.rtx_def** %head95.i, align 8, !tbaa !1
  %530 = load %struct.rtx_def** %tail96.i, align 8, !tbaa !1
  %call100.i = call i32 @no_real_insns_p(%struct.rtx_def* %529, %struct.rtx_def* %530) #4
  %tobool.i = icmp eq i32 %call100.i, 0
  br i1 %tobool.i, label %if.end102.i, label %for.inc176.i

if.end102.i:                                      ; preds = %for.body94.i
  %531 = load %struct.rtx_def** %head95.i, align 8, !tbaa !1
  %arrayidx103.i = getelementptr inbounds %struct.rtx_def* %531, i64 0, i32 1, i64 1
  %rtx.i = bitcast %union.rtunion_def* %arrayidx103.i to %struct.rtx_def**
  %532 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !1
  %533 = load %struct.sched_info** @current_sched_info, align 8, !tbaa !1
  %prev_head.i = getelementptr inbounds %struct.sched_info* %533, i64 0, i32 8
  store %struct.rtx_def* %532, %struct.rtx_def** %prev_head.i, align 8, !tbaa !80
  %534 = load %struct.rtx_def** %tail96.i, align 8, !tbaa !1
  %arrayidx105.i = getelementptr inbounds %struct.rtx_def* %534, i64 0, i32 1, i64 2
  %rtx106.i = bitcast %union.rtunion_def* %arrayidx105.i to %struct.rtx_def**
  %535 = load %struct.rtx_def** %rtx106.i, align 8, !tbaa !1
  %536 = load %struct.sched_info** @current_sched_info, align 8, !tbaa !1
  %next_tail.i = getelementptr inbounds %struct.sched_info* %536, i64 0, i32 9
  store %struct.rtx_def* %535, %struct.rtx_def** %next_tail.i, align 8, !tbaa !82
  %537 = load i32* @write_symbols, align 4, !tbaa !18
  %cmp107.i = icmp eq i32 %537, 0
  br i1 %cmp107.i, label %if.end110.i, label %if.then109.i

if.then109.i:                                     ; preds = %if.end102.i
  %538 = load %struct.rtx_def** %head95.i, align 8, !tbaa !1
  %539 = load %struct.rtx_def** %tail96.i, align 8, !tbaa !1
  call void @save_line_notes(i32 %528, %struct.rtx_def* %538, %struct.rtx_def* %539) #4
  %540 = load %struct.rtx_def** %head95.i, align 8, !tbaa !1
  %541 = load %struct.rtx_def** %tail96.i, align 8, !tbaa !1
  call void @rm_line_notes(%struct.rtx_def* %540, %struct.rtx_def* %541) #4
  br label %if.end110.i

if.end110.i:                                      ; preds = %if.then109.i, %if.end102.i
  %542 = load %struct.rtx_def** %head95.i, align 8, !tbaa !1
  %543 = getelementptr inbounds %struct.rtx_def* %542, i64 0, i32 0
  %bf.load.i = load i32* %543, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  %idxprom111248.i = zext i32 %bf.clear.i to i64
  %arrayidx112.i = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom111248.i
  %544 = load i8* %arrayidx112.i, align 1, !tbaa !18
  %cmp114.i = icmp eq i8 %544, 105
  br i1 %cmp114.i, label %if.then116.i, label %if.end137.i

if.then116.i:                                     ; preds = %if.end110.i
  %arrayidx118.i = getelementptr inbounds %struct.rtx_def* %542, i64 0, i32 1, i64 6
  %note.0.in260.i = bitcast %union.rtunion_def* %arrayidx118.i to %struct.rtx_def**
  %note.0261.i = load %struct.rtx_def** %note.0.in260.i, align 8
  %tobool121262.i = icmp eq %struct.rtx_def* %note.0261.i, null
  br i1 %tobool121262.i, label %if.end137.i, label %for.body122.i

for.body122.i:                                    ; preds = %if.then116.i, %for.inc132.i
  %note.0263.i = phi %struct.rtx_def* [ %note.0.i, %for.inc132.i ], [ %note.0261.i, %if.then116.i ]
  %545 = getelementptr inbounds %struct.rtx_def* %note.0263.i, i64 0, i32 0
  %bf.load123.i = load i32* %545, align 8
  %bf.clear124.i = and i32 %bf.load123.i, 16711680
  %cmp125.i = icmp eq i32 %bf.clear124.i, 1572864
  br i1 %cmp125.i, label %if.then127.i, label %for.inc132.i

if.then127.i:                                     ; preds = %for.body122.i
  %546 = load %struct.rtx_def** %head95.i, align 8, !tbaa !1
  call void @remove_note(%struct.rtx_def* %546, %struct.rtx_def* %note.0263.i) #4
  %arrayidx129.i = getelementptr inbounds %struct.rtx_def* %note.0263.i, i64 0, i32 1, i64 1
  %rtx130.i = bitcast %union.rtunion_def* %arrayidx129.i to %struct.rtx_def**
  %547 = load %struct.rtx_def** %rtx130.i, align 8, !tbaa !1
  %548 = load %struct.rtx_def** %head95.i, align 8, !tbaa !1
  call void @remove_note(%struct.rtx_def* %548, %struct.rtx_def* %547) #4
  br label %for.inc132.i

for.inc132.i:                                     ; preds = %if.then127.i, %for.body122.i
  %note.1.i = phi %struct.rtx_def* [ %547, %if.then127.i ], [ %note.0263.i, %for.body122.i ]
  %arrayidx134.i = getelementptr inbounds %struct.rtx_def* %note.1.i, i64 0, i32 1, i64 1
  %note.0.in.i = bitcast %union.rtunion_def* %arrayidx134.i to %struct.rtx_def**
  %note.0.i = load %struct.rtx_def** %note.0.in.i, align 8
  %tobool121.i = icmp eq %struct.rtx_def* %note.0.i, null
  br i1 %tobool121.i, label %for.cond120.if.end137.loopexit_crit_edge.i, label %for.body122.i

for.cond120.if.end137.loopexit_crit_edge.i:       ; preds = %for.inc132.i
  %.pre305.pre.i = load %struct.rtx_def** %head95.i, align 8, !tbaa !1
  br label %if.end137.i

if.end137.i:                                      ; preds = %for.cond120.if.end137.loopexit_crit_edge.i, %if.then116.i, %if.end110.i
  %549 = phi %struct.rtx_def* [ %542, %if.end110.i ], [ %.pre305.pre.i, %for.cond120.if.end137.loopexit_crit_edge.i ], [ %542, %if.then116.i ]
  %550 = load %struct.rtx_def** %tail96.i, align 8, !tbaa !1
  call void @rm_other_notes(%struct.rtx_def* %549, %struct.rtx_def* %550) #4
  store i32 %bb.5266.i, i32* @target_bb, align 4, !tbaa !5
  %551 = load i32* @current_nr_blocks, align 4, !tbaa !5
  %cmp138.i = icmp sgt i32 %551, 1
  br i1 %cmp138.i, label %land.rhs.i, label %land.end.i

land.rhs.i:                                       ; preds = %if.end137.i
  %552 = load i32* @flag_schedule_interblock, align 4, !tbaa !5
  %lnot.i = icmp eq i32 %552, 0
  br label %land.end.i

land.end.i:                                       ; preds = %land.rhs.i, %if.end137.i
  %553 = phi i1 [ false, %if.end137.i ], [ %lnot.i, %land.rhs.i ]
  %554 = load %struct.sched_info** @current_sched_info, align 8, !tbaa !1
  %queue_must_finish_empty.i = getelementptr inbounds %struct.sched_info* %554, i64 0, i32 12
  %555 = zext i1 %553 to i8
  %bf.load141.i = load i8* %queue_must_finish_empty.i, align 8
  %bf.clear142.i = and i8 %bf.load141.i, -2
  %bf.set.i = or i8 %bf.clear142.i, %555
  store i8 %bf.set.i, i8* %queue_must_finish_empty.i, align 8
  call void @schedule_block(i32 %528, i32 %add29.i) #4
  %556 = load i32* @sched_n_insns, align 4, !tbaa !5
  %add143.i = add nsw i32 %556, %sched_rgn_n_insns.0265.i
  %557 = load %struct.rtx_def** %head95.i, align 8, !tbaa !1
  %idxprom144.i = sext i32 %528 to i64
  %558 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !1
  %data.i = getelementptr inbounds %struct.varray_head_tag* %558, i64 0, i32 4
  %bb145.i = bitcast %union.varray_data_tag* %data.i to [1 x %struct.basic_block_def*]*
  %arrayidx146.i = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb145.i, i64 0, i64 %idxprom144.i
  %559 = load %struct.basic_block_def** %arrayidx146.i, align 8, !tbaa !1
  %head147.i = getelementptr inbounds %struct.basic_block_def* %559, i64 0, i32 0
  %560 = load %struct.rtx_def** %head147.i, align 8, !tbaa !50
  %cmp148.i = icmp eq %struct.rtx_def* %557, %560
  br i1 %cmp148.i, label %if.then150.i, label %if.end157.i

if.then150.i:                                     ; preds = %land.end.i
  %561 = load %struct.sched_info** @current_sched_info, align 8, !tbaa !1
  %head151.i = getelementptr inbounds %struct.sched_info* %561, i64 0, i32 10
  %562 = load %struct.rtx_def** %head151.i, align 8, !tbaa !83
  store %struct.rtx_def* %562, %struct.rtx_def** %head147.i, align 8, !tbaa !50
  %.pre306.i = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !1
  %data159.phi.trans.insert.i = getelementptr inbounds %struct.varray_head_tag* %.pre306.i, i64 0, i32 4
  %bb160.phi.trans.insert.i = bitcast %union.varray_data_tag* %data159.phi.trans.insert.i to [1 x %struct.basic_block_def*]*
  %arrayidx161.phi.trans.insert.i = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb160.phi.trans.insert.i, i64 0, i64 %idxprom144.i
  %.pre307.i = load %struct.basic_block_def** %arrayidx161.phi.trans.insert.i, align 8, !tbaa !1
  br label %if.end157.i

if.end157.i:                                      ; preds = %if.then150.i, %land.end.i
  %563 = phi %struct.basic_block_def* [ %.pre307.i, %if.then150.i ], [ %559, %land.end.i ]
  %564 = load %struct.rtx_def** %tail96.i, align 8, !tbaa !1
  %end.i = getelementptr inbounds %struct.basic_block_def* %563, i64 0, i32 1
  %565 = load %struct.rtx_def** %end.i, align 8, !tbaa !34
  %cmp162.i = icmp eq %struct.rtx_def* %564, %565
  br i1 %cmp162.i, label %if.then164.i, label %if.end171.i

if.then164.i:                                     ; preds = %if.end157.i
  %566 = load %struct.sched_info** @current_sched_info, align 8, !tbaa !1
  %tail165.i = getelementptr inbounds %struct.sched_info* %566, i64 0, i32 11
  %567 = load %struct.rtx_def** %tail165.i, align 8, !tbaa !84
  store %struct.rtx_def* %567, %struct.rtx_def** %end.i, align 8, !tbaa !34
  br label %if.end171.i

if.end171.i:                                      ; preds = %if.then164.i, %if.end157.i
  %568 = load i32* @current_nr_blocks, align 4, !tbaa !5
  %cmp172.i = icmp sgt i32 %568, 1
  br i1 %cmp172.i, label %if.then174.i, label %for.inc176.i

if.then174.i:                                     ; preds = %if.end171.i
  %569 = load %struct.candidate** @candidate_table, align 8, !tbaa !1
  %570 = getelementptr inbounds %struct.candidate* %569, i64 0, i32 0
  call void @free(i8* %570) #4
  %571 = load i32** @bblst_table, align 8, !tbaa !1
  %572 = bitcast i32* %571 to i8*
  call void @free(i8* %572) #4
  %573 = load i32** @bitlst_table, align 8, !tbaa !1
  %574 = bitcast i32* %573 to i8*
  call void @free(i8* %574) #4
  br label %for.inc176.i

for.inc176.i:                                     ; preds = %if.then174.i, %if.end171.i, %for.body94.i
  %sched_rgn_n_insns.1.i = phi i32 [ %sched_rgn_n_insns.0265.i, %for.body94.i ], [ %add143.i, %if.then174.i ], [ %add143.i, %if.end171.i ]
  %inc177.i = add nsw i32 %bb.5266.i, 1
  %575 = load i32* @current_nr_blocks, align 4, !tbaa !5
  %cmp92.i = icmp slt i32 %inc177.i, %575
  br i1 %cmp92.i, label %for.body94.i, label %for.end178.i

for.end178.i:                                     ; preds = %for.inc176.i, %for.end80.i, %for.cond91.preheader.i
  %576 = phi i32 [ %419, %for.cond91.preheader.i ], [ %448, %for.end80.i ], [ %575, %for.inc176.i ]
  %sched_rgn_n_insns.0.lcssa.i = phi i32 [ 0, %for.cond91.preheader.i ], [ 0, %for.end80.i ], [ %sched_rgn_n_insns.1.i, %for.inc176.i ]
  %cmp179.i = icmp eq i32 %sched_rgn_n_insns.0.lcssa.i, %add29.i
  br i1 %cmp179.i, label %if.end182.i, label %if.then181.i

if.then181.i:                                     ; preds = %for.end178.i
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str3, i64 0, i64 0), i32 2792, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.schedule_region, i64 0, i64 0)) #7
  unreachable

if.end182.i:                                      ; preds = %for.cond11.preheader.i, %for.end178.i, %for.cond19.preheader.i, %for.cond4.preheader.i, %for.body
  %577 = phi i32 [ %576, %for.end178.i ], [ %.pre.i, %for.cond19.preheader.i ], [ %.lcssa, %for.cond4.preheader.i ], [ %296, %for.body ], [ %406, %for.cond11.preheader.i ]
  %578 = load i32* @write_symbols, align 4, !tbaa !18
  %cmp183.i = icmp eq i32 %578, 0
  br i1 %cmp183.i, label %if.end198.i, label %for.cond186.preheader.i

for.cond186.preheader.i:                          ; preds = %if.end182.i
  %cmp187258.i = icmp sgt i32 %577, 0
  br i1 %cmp187258.i, label %for.body189.i, label %free_pending_lists.exit.i

for.body189.i:                                    ; preds = %for.cond186.preheader.i, %for.body189.i
  %bb.6259.i = phi i32 [ %inc196.i, %for.body189.i ], [ 0, %for.cond186.preheader.i ]
  %579 = load i32* @current_blocks, align 4, !tbaa !5
  %add192.i = add nsw i32 %579, %bb.6259.i
  %idxprom193.i = sext i32 %add192.i to i64
  %580 = load i32** @rgn_bb_table, align 8, !tbaa !1
  %arrayidx194.i = getelementptr inbounds i32* %580, i64 %idxprom193.i
  %581 = load i32* %arrayidx194.i, align 4, !tbaa !5
  call void @get_block_head_tail(i32 %581, %struct.rtx_def** %head190.i, %struct.rtx_def** %tail191.i) #4
  %582 = load %struct.rtx_def** %head190.i, align 8, !tbaa !1
  %583 = load %struct.rtx_def** %tail191.i, align 8, !tbaa !1
  call void @restore_line_notes(%struct.rtx_def* %582, %struct.rtx_def* %583) #4
  %inc196.i = add nsw i32 %bb.6259.i, 1
  %584 = load i32* @current_nr_blocks, align 4, !tbaa !5
  %cmp187.i = icmp slt i32 %inc196.i, %584
  br i1 %cmp187.i, label %for.body189.i, label %if.end198.i

if.end198.i:                                      ; preds = %for.body189.i, %if.end182.i
  %585 = phi i32 [ %577, %if.end182.i ], [ %584, %for.body189.i ]
  %cmp12.i.i = icmp sgt i32 %585, 0
  br i1 %cmp12.i.i, label %for.body.i.i135, label %free_pending_lists.exit.i

for.body.i.i135:                                  ; preds = %if.end198.i, %for.body.i.i135
  %indvars.iv.i.i133 = phi i64 [ %indvars.iv.next.i.i134, %for.body.i.i135 ], [ 0, %if.end198.i ]
  %586 = load %struct.deps** @bb_deps, align 8, !tbaa !1
  %pending_read_insns.i.i = getelementptr inbounds %struct.deps* %586, i64 %indvars.iv.i.i133, i32 0
  call void @free_INSN_LIST_list(%struct.rtx_def** %pending_read_insns.i.i) #4
  %587 = load %struct.deps** @bb_deps, align 8, !tbaa !1
  %pending_write_insns.i.i = getelementptr inbounds %struct.deps* %587, i64 %indvars.iv.i.i133, i32 2
  call void @free_INSN_LIST_list(%struct.rtx_def** %pending_write_insns.i.i) #4
  %588 = load %struct.deps** @bb_deps, align 8, !tbaa !1
  %pending_read_mems.i.i = getelementptr inbounds %struct.deps* %588, i64 %indvars.iv.i.i133, i32 1
  call void @free_EXPR_LIST_list(%struct.rtx_def** %pending_read_mems.i.i) #4
  %589 = load %struct.deps** @bb_deps, align 8, !tbaa !1
  %pending_write_mems.i.i = getelementptr inbounds %struct.deps* %589, i64 %indvars.iv.i.i133, i32 3
  call void @free_EXPR_LIST_list(%struct.rtx_def** %pending_write_mems.i.i) #4
  %indvars.iv.next.i.i134 = add nuw nsw i64 %indvars.iv.i.i133, 1
  %590 = load i32* @current_nr_blocks, align 4, !tbaa !5
  %591 = trunc i64 %indvars.iv.next.i.i134 to i32
  %cmp.i254.i = icmp slt i32 %591, %590
  br i1 %cmp.i254.i, label %for.body.i.i135, label %free_pending_lists.exit.i

free_pending_lists.exit.i:                        ; preds = %for.body.i.i135, %if.end198.i, %for.cond186.preheader.i
  call void @finish_deps_global() #4
  %592 = load %struct.deps** @bb_deps, align 8, !tbaa !1
  %593 = bitcast %struct.deps* %592 to i8*
  call void @free(i8* %593) #4
  %594 = load i32* @current_nr_blocks, align 4, !tbaa !5
  %cmp199.i = icmp sgt i32 %594, 1
  br i1 %cmp199.i, label %if.then201.i, label %schedule_region.exit

if.then201.i:                                     ; preds = %free_pending_lists.exit.i
  %595 = load float** @prob, align 8, !tbaa !1
  %596 = bitcast float* %595 to i8*
  call void @free(i8* %596) #4
  %597 = load %struct.simple_bitmap_def*** @dom, align 8, !tbaa !1
  %598 = bitcast %struct.simple_bitmap_def** %597 to i8*
  call void @free(i8* %598) #4
  %599 = load %struct.simple_bitmap_def*** @pot_split, align 8, !tbaa !1
  %600 = bitcast %struct.simple_bitmap_def** %599 to i8*
  call void @free(i8* %600) #4
  %601 = load %struct.simple_bitmap_def*** @ancestor_edges, align 8, !tbaa !1
  %602 = bitcast %struct.simple_bitmap_def** %601 to i8*
  call void @free(i8* %602) #4
  %603 = load i32** @edge_to_bit, align 8, !tbaa !1
  %604 = bitcast i32* %603 to i8*
  call void @free(i8* %604) #4
  %605 = load i32** @rgn_edges, align 8, !tbaa !1
  %606 = bitcast i32* %605 to i8*
  call void @free(i8* %606) #4
  br label %schedule_region.exit

schedule_region.exit:                             ; preds = %free_pending_lists.exit.i, %if.then201.i
  call void @llvm.lifetime.end(i64 8, i8* %279) #4
  call void @llvm.lifetime.end(i64 8, i8* %280) #4
  call void @llvm.lifetime.end(i64 8, i8* %281) #4
  call void @llvm.lifetime.end(i64 8, i8* %282) #4
  call void @llvm.lifetime.end(i64 8, i8* %283) #4
  call void @llvm.lifetime.end(i64 8, i8* %284) #4
  call void @llvm.lifetime.end(i64 8, i8* %285) #4
  call void @llvm.lifetime.end(i64 8, i8* %286) #4
  %indvars.iv.next234 = add nuw nsw i64 %indvars.iv233, 1
  %607 = load i32* @nr_regions, align 4, !tbaa !5
  %608 = trunc i64 %indvars.iv.next234 to i32
  %cmp1 = icmp slt i32 %608, %607
  br i1 %cmp1, label %for.body, label %for.end

for.end:                                          ; preds = %schedule_region.exit, %init_regions.exit
  call void @allocate_reg_life_data() #4
  %call = call i32 @get_max_uid() #4
  call void @compute_bb_for_insn(i32 %call) #4
  %609 = load i32* @n_basic_blocks, align 4, !tbaa !5
  %call2 = call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %609) #4
  call void @sbitmap_ones(%struct.simple_bitmap_def* %call2) #4
  %610 = load i32* @n_basic_blocks, align 4, !tbaa !5
  %call3 = call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %610) #4
  call void @sbitmap_zero(%struct.simple_bitmap_def* %call3) #4
  %611 = load i32* @nr_regions, align 4, !tbaa !5
  %cmp5179 = icmp sgt i32 %611, 0
  br i1 %cmp5179, label %for.body6.lr.ph, label %for.end40

for.body6.lr.ph:                                  ; preds = %for.end
  %612 = load %struct.region** @rgn_table, align 8, !tbaa !1
  %613 = load i32** @rgn_bb_table, align 8, !tbaa !1
  br label %for.body6

for.body6:                                        ; preds = %for.body6.lr.ph, %for.inc38
  %indvars.iv = phi i64 [ 0, %for.body6.lr.ph ], [ %indvars.iv.next, %for.inc38 ]
  %any_large_regions.0181 = phi i32 [ 0, %for.body6.lr.ph ], [ %any_large_regions.1, %for.inc38 ]
  %rgn_nr_blocks = getelementptr inbounds %struct.region* %612, i64 %indvars.iv, i32 0
  %614 = load i32* %rgn_nr_blocks, align 4, !tbaa !7
  %cmp7 = icmp sgt i32 %614, 1
  br i1 %cmp7, label %for.inc38, label %if.else

if.else:                                          ; preds = %for.body6
  %rgn_blocks = getelementptr inbounds %struct.region* %612, i64 %indvars.iv, i32 1
  %615 = load i32* %rgn_blocks, align 4, !tbaa !9
  %idxprom11 = sext i32 %615 to i64
  %arrayidx12 = getelementptr inbounds i32* %613, i64 %idxprom11
  %616 = load i32* %arrayidx12, align 4, !tbaa !5
  %rem = and i32 %616, 63
  %sh_prom = zext i32 %rem to i64
  %shl = shl i64 1, %sh_prom
  %div = lshr i32 %616, 6
  %idxprom18 = zext i32 %div to i64
  %arrayidx19 = getelementptr inbounds %struct.simple_bitmap_def* %call3, i64 0, i32 3, i64 %idxprom18
  %617 = load i64* %arrayidx19, align 8, !tbaa !48
  %or = or i64 %shl, %617
  store i64 %or, i64* %arrayidx19, align 8, !tbaa !48
  %neg = xor i64 %shl, -1
  %arrayidx36 = getelementptr inbounds %struct.simple_bitmap_def* %call2, i64 0, i32 3, i64 %idxprom18
  %618 = load i64* %arrayidx36, align 8, !tbaa !48
  %and = and i64 %618, %neg
  store i64 %and, i64* %arrayidx36, align 8, !tbaa !48
  br label %for.inc38

for.inc38:                                        ; preds = %for.body6, %if.else
  %any_large_regions.1 = phi i32 [ %any_large_regions.0181, %if.else ], [ 1, %for.body6 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %619 = trunc i64 %indvars.iv.next to i32
  %cmp5 = icmp slt i32 %619, %611
  br i1 %cmp5, label %for.body6, label %for.end40

for.end40:                                        ; preds = %for.inc38, %for.end
  %any_large_regions.0.lcssa = phi i32 [ 0, %for.end ], [ %any_large_regions.1, %for.inc38 ]
  %620 = load i32* @reload_completed, align 4, !tbaa !5
  %tobool = icmp ne i32 %620, 0
  %cond = select i1 %tobool, i32 1, i32 5
  call void @update_life_info(%struct.simple_bitmap_def* %call3, i32 0, i32 %cond) #4
  %tobool41 = icmp eq i32 %any_large_regions.0.lcssa, 0
  br i1 %tobool41, label %if.end43, label %if.then42

if.then42:                                        ; preds = %for.end40
  call void @update_life_info(%struct.simple_bitmap_def* %call2, i32 1, i32 5) #4
  br label %if.end43

if.end43:                                         ; preds = %for.end40, %if.then42
  %621 = load i32* @reload_completed, align 4, !tbaa !5
  %tobool44 = icmp eq i32 %621, 0
  br i1 %tobool44, label %if.end47, label %if.then45

if.then45:                                        ; preds = %if.end43
  %call46 = call %struct.rtx_def* @get_insns() #4
  call void @reposition_prologue_and_epilogue_notes(%struct.rtx_def* %call46) #4
  br label %if.end47

if.end47:                                         ; preds = %if.end43, %if.then45
  %622 = load i32* @write_symbols, align 4, !tbaa !18
  %cmp48 = icmp eq i32 %622, 0
  br i1 %cmp48, label %if.end50, label %if.then49

if.then49:                                        ; preds = %if.end47
  call void @rm_redundant_line_notes() #4
  br label %if.end50

if.end50:                                         ; preds = %if.end47, %if.then49
  call void @scope_to_insns_finalize() #4
  %623 = load i32* @sched_verbose, align 4, !tbaa !5
  %tobool51 = icmp eq i32 %623, 0
  br i1 %tobool51, label %if.end63, label %if.then52

if.then52:                                        ; preds = %if.end50
  %624 = load i32* @reload_completed, align 4, !tbaa !5
  %cmp53 = icmp eq i32 %624, 0
  %625 = load i32* @flag_schedule_interblock, align 4
  %tobool54 = icmp ne i32 %625, 0
  %or.cond = and i1 %cmp53, %tobool54
  br i1 %or.cond, label %if.then55, label %if.else57

if.then55:                                        ; preds = %if.then52
  %626 = load %struct._IO_FILE** @sched_dump, align 8, !tbaa !1
  %627 = load i32* @nr_inter, align 4, !tbaa !5
  %628 = load i32* @nr_spec, align 4, !tbaa !5
  %call56 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %626, i8* getelementptr inbounds ([56 x i8]* @.str38, i64 0, i64 0), i32 %627, i32 %628) #4
  br label %if.end61

if.else57:                                        ; preds = %if.then52
  %629 = load i32* @nr_inter, align 4, !tbaa !5
  %cmp58 = icmp sgt i32 %629, 0
  br i1 %cmp58, label %if.then59, label %if.end61

if.then59:                                        ; preds = %if.else57
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str3, i64 0, i64 0), i32 3037, i8* getelementptr inbounds ([15 x i8]* @__FUNCTION__.schedule_insns, i64 0, i64 0)) #7
  unreachable

if.end61:                                         ; preds = %if.else57, %if.then55
  %630 = load %struct._IO_FILE** @sched_dump, align 8, !tbaa !1
  %631 = call i64 @fwrite(i8* getelementptr inbounds ([3 x i8]* @.str5, i64 0, i64 0), i64 2, i64 1, %struct._IO_FILE* %630)
  br label %if.end63

if.end63:                                         ; preds = %if.end50, %if.end61
  %632 = load %struct.region** @rgn_table, align 8, !tbaa !1
  %633 = bitcast %struct.region* %632 to i8*
  call void @free(i8* %633)
  %634 = load i32** @rgn_bb_table, align 8, !tbaa !1
  %635 = bitcast i32* %634 to i8*
  call void @free(i8* %635)
  %636 = load i32** @block_to_bb, align 8, !tbaa !1
  %637 = bitcast i32* %636 to i8*
  call void @free(i8* %637)
  %638 = load i32** @containing_rgn, align 8, !tbaa !1
  %639 = bitcast i32* %638 to i8*
  call void @free(i8* %639)
  call void @sched_finish() #4
  %640 = load %struct.haifa_edge** @edge_table, align 8, !tbaa !1
  %tobool64 = icmp eq %struct.haifa_edge* %640, null
  br i1 %tobool64, label %if.end66, label %if.then65

if.then65:                                        ; preds = %if.end63
  %641 = bitcast %struct.haifa_edge* %640 to i8*
  call void @free(i8* %641)
  store %struct.haifa_edge* null, %struct.haifa_edge** @edge_table, align 8, !tbaa !1
  br label %if.end66

if.end66:                                         ; preds = %if.end63, %if.then65
  %642 = load i32** @in_edges, align 8, !tbaa !1
  %tobool67 = icmp eq i32* %642, null
  br i1 %tobool67, label %if.end69, label %if.then68

if.then68:                                        ; preds = %if.end66
  %643 = bitcast i32* %642 to i8*
  call void @free(i8* %643)
  store i32* null, i32** @in_edges, align 8, !tbaa !1
  br label %if.end69

if.end69:                                         ; preds = %if.end66, %if.then68
  %644 = load i32** @out_edges, align 8, !tbaa !1
  %tobool70 = icmp eq i32* %644, null
  br i1 %tobool70, label %if.end72, label %if.then71

if.then71:                                        ; preds = %if.end69
  %645 = bitcast i32* %644 to i8*
  call void @free(i8* %645)
  store i32* null, i32** @out_edges, align 8, !tbaa !1
  br label %if.end72

if.end72:                                         ; preds = %if.end69, %if.then71
  %646 = bitcast %struct.simple_bitmap_def* %call3 to i8*
  call void @free(i8* %646)
  %647 = bitcast %struct.simple_bitmap_def* %call2 to i8*
  call void @free(i8* %647)
  br label %return

return:                                           ; preds = %entry, %if.end72
  ret void
}

declare void @scope_to_insns_initialize() #3

declare void @sched_init(%struct._IO_FILE*) #3

declare void @allocate_reg_life_data() #3

declare void @compute_bb_for_insn(i32) #3

declare i32 @get_max_uid() #3

declare %struct.simple_bitmap_def* @sbitmap_alloc(i32) #3

declare void @sbitmap_ones(%struct.simple_bitmap_def*) #3

declare void @sbitmap_zero(%struct.simple_bitmap_def*) #3

declare void @update_life_info(%struct.simple_bitmap_def*, i32, i32) #3

declare void @reposition_prologue_and_epilogue_notes(%struct.rtx_def*) #3

declare %struct.rtx_def* @get_insns() #3

declare void @rm_redundant_line_notes() #3

declare void @scope_to_insns_finalize() #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) #1

declare void @sched_finish() #3

declare void @init_deps_global() #3

declare noalias i8* @xmalloc(i64) #3

declare void @init_deps(%struct.deps*) #3

declare void @compute_forward_dependences(%struct.rtx_def*, %struct.rtx_def*) #3

declare i32 @set_priorities(%struct.rtx_def*, %struct.rtx_def*) #3

declare %struct.simple_bitmap_def** @sbitmap_vector_alloc(i32, i32) #3

declare void @sbitmap_vector_zero(%struct.simple_bitmap_def**, i32) #3

declare i32 @no_real_insns_p(%struct.rtx_def*, %struct.rtx_def*) #3

declare void @save_line_notes(i32, %struct.rtx_def*, %struct.rtx_def*) #3

declare void @rm_line_notes(%struct.rtx_def*, %struct.rtx_def*) #3

declare void @remove_note(%struct.rtx_def*, %struct.rtx_def*) #3

declare void @rm_other_notes(%struct.rtx_def*, %struct.rtx_def*) #3

declare void @schedule_block(i32, i32) #3

declare void @restore_line_notes(%struct.rtx_def*, %struct.rtx_def*) #3

declare void @finish_deps_global() #3

declare void @free_INSN_LIST_list(%struct.rtx_def**) #3

declare void @free_EXPR_LIST_list(%struct.rtx_def**) #3

declare i32 @sbitmap_a_and_b(%struct.simple_bitmap_def*, %struct.simple_bitmap_def*, %struct.simple_bitmap_def*) #3

declare i32 @sbitmap_a_or_b(%struct.simple_bitmap_def*, %struct.simple_bitmap_def*, %struct.simple_bitmap_def*) #3

declare void @sbitmap_difference(%struct.simple_bitmap_def*, %struct.simple_bitmap_def*, %struct.simple_bitmap_def*) #3

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #4

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #4

declare void @sched_analyze(%struct.deps*, %struct.rtx_def*, %struct.rtx_def*) #3

declare void @free_deps(%struct.deps*) #3

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #4

declare i32 @bitmap_operation(%struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, i32) #3

declare %struct.rtx_def* @alloc_INSN_LIST(%struct.rtx_def*, %struct.rtx_def*) #3

declare %struct.rtx_def* @alloc_EXPR_LIST(i32, %struct.rtx_def*, %struct.rtx_def*) #3

declare zeroext i1 @can_throw_internal(%struct.rtx_def*) #3

declare %struct.rtx_def* @find_insn_list(%struct.rtx_def*, %struct.rtx_def*) #3

declare void @add_dependence(%struct.rtx_def*, %struct.rtx_def*, i32) #3

declare %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def*) #3

declare void @note_stores(%struct.rtx_def*, void (%struct.rtx_def*, %struct.rtx_def*, i8*)*, i8*) #3

; Function Attrs: nounwind uwtable
define internal void @sets_likely_spilled_1(%struct.rtx_def* nocapture readonly %x, %struct.rtx_def* nocapture readonly %pat, i8* nocapture %data) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %pat, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 47
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %1 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 0
  %bf.load1 = load i32* %1, align 8
  %bf.clear2 = and i32 %bf.load1, 65535
  %cmp3 = icmp eq i32 %bf.clear2, 61
  br i1 %cmp3, label %land.lhs.true4, label %if.end

land.lhs.true4:                                   ; preds = %land.lhs.true
  %arrayidx = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %2 = load i32* %rtuint, align 4, !tbaa !5
  %cmp5 = icmp ult i32 %2, 53
  br i1 %cmp5, label %land.lhs.true6, label %if.end

land.lhs.true6:                                   ; preds = %land.lhs.true4
  %idxprom = zext i32 %2 to i64
  %arrayidx10 = getelementptr inbounds [53 x i32]* @regclass_map, i64 0, i64 %idxprom
  %3 = load i32* %arrayidx10, align 4, !tbaa !18
  %.off = add i32 %3, -1
  %switch = icmp ult i32 %.off, 7
  br i1 %switch, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true6
  store i8 1, i8* %data, align 1, !tbaa !54
  br label %if.end

if.end:                                           ; preds = %land.lhs.true6, %if.then, %land.lhs.true4, %land.lhs.true, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @init_ready_list(%struct.ready_list* %ready) #0 {
entry:
  %tail = alloca %struct.rtx_def*, align 8
  %head = alloca %struct.rtx_def*, align 8
  %0 = load %struct.sched_info** @current_sched_info, align 8, !tbaa !1
  %prev_head1 = getelementptr inbounds %struct.sched_info* %0, i64 0, i32 8
  %1 = load %struct.rtx_def** %prev_head1, align 8, !tbaa !80
  %next_tail2 = getelementptr inbounds %struct.sched_info* %0, i64 0, i32 9
  %2 = load %struct.rtx_def** %next_tail2, align 8, !tbaa !82
  store i32 0, i32* @target_n_insns, align 4, !tbaa !5
  store i32 0, i32* @sched_target_n_insns, align 4, !tbaa !5
  store i32 0, i32* @sched_n_insns, align 4, !tbaa !5
  store i1 false, i1* @last_was_jump, align 1
  %3 = load i32* @sched_verbose, align 4, !tbaa !5
  %cmp = icmp sgt i32 %3, 4
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @debug_dependencies()
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %4 = load i32* @current_nr_blocks, align 4, !tbaa !5
  %cmp3 = icmp sgt i32 %4, 1
  br i1 %cmp3, label %if.then4, label %for.cond.preheader

if.then4:                                         ; preds = %if.end
  %conv = sext i32 %4 to i64
  %mul = mul i64 %conv, 40
  %call = call noalias i8* @xmalloc(i64 %mul) #4
  %5 = bitcast i8* %call to %struct.candidate*
  store %struct.candidate* %5, %struct.candidate** @candidate_table, align 8, !tbaa !1
  store i32 0, i32* @bblst_last, align 4, !tbaa !5
  %6 = load i32* @current_nr_blocks, align 4, !tbaa !5
  %7 = load i32* @target_bb, align 4, !tbaa !5
  %sub = sub nsw i32 %6, %7
  %8 = load i32* @rgn_nr_edges, align 4, !tbaa !5
  %mul5 = mul nsw i32 %sub, %8
  store i32 %mul5, i32* @bblst_size, align 4, !tbaa !5
  %conv6 = sext i32 %mul5 to i64
  %mul7 = shl nsw i64 %conv6, 2
  %call8 = call noalias i8* @xmalloc(i64 %mul7) #4
  %9 = bitcast i8* %call8 to i32*
  store i32* %9, i32** @bblst_table, align 8, !tbaa !1
  store i32 0, i32* @bitlst_table_last, align 4, !tbaa !5
  %10 = load i32* @rgn_nr_edges, align 4, !tbaa !5
  %conv9 = sext i32 %10 to i64
  %mul10 = shl nsw i64 %conv9, 2
  %call11 = call noalias i8* @xmalloc(i64 %mul10) #4
  %11 = bitcast i8* %call11 to i32*
  store i32* %11, i32** @bitlst_table, align 8, !tbaa !1
  %12 = load i32* @target_bb, align 4, !tbaa !5
  call fastcc void @compute_trg_info(i32 %12)
  br label %for.cond.preheader

for.cond.preheader:                               ; preds = %if.then4, %if.end
  %insn.0.in.in186 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 2
  %insn.0.in187 = bitcast %union.rtunion_def* %insn.0.in.in186 to %struct.rtx_def**
  %insn.0188 = load %struct.rtx_def** %insn.0.in187, align 8
  %cmp13189 = icmp eq %struct.rtx_def* %insn.0188, %2
  br i1 %cmp13189, label %for.end, label %for.body

for.body:                                         ; preds = %for.cond.preheader, %for.cond.backedge
  %insn.0190 = phi %struct.rtx_def* [ %insn.0, %for.cond.backedge ], [ %insn.0188, %for.cond.preheader ]
  %13 = getelementptr inbounds %struct.rtx_def* %insn.0190, i64 0, i32 0
  %bf.load = load i32* %13, align 8
  %bf.clear = and i32 %bf.load, 65535
  %idxprom175 = zext i32 %bf.clear to i64
  %arrayidx15 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom175
  %14 = load i8* %arrayidx15, align 1, !tbaa !18
  %cmp17 = icmp eq i8 %14, 105
  br i1 %cmp17, label %if.end20, label %for.cond.backedge

if.end20:                                         ; preds = %for.body
  %arrayidx25 = getelementptr inbounds %struct.rtx_def* %insn.0190, i64 0, i32 1, i64 0
  %rtint = bitcast %union.rtunion_def* %arrayidx25 to i32*
  %15 = load i32* %rtint, align 4, !tbaa !5
  %idxprom26 = sext i32 %15 to i64
  %16 = load %struct.haifa_insn_data** @h_i_d, align 8, !tbaa !1
  %dep_count = getelementptr inbounds %struct.haifa_insn_data* %16, i64 %idxprom26, i32 4
  %17 = load i32* %dep_count, align 4, !tbaa !24
  %cmp28 = icmp eq i32 %17, 0
  br i1 %cmp28, label %land.lhs.true, label %if.end42

land.lhs.true:                                    ; preds = %if.end20
  %arrayidx22 = getelementptr inbounds %struct.rtx_def* %insn.0190, i64 0, i32 1, i64 2
  %rtx23 = bitcast %union.rtunion_def* %arrayidx22 to %struct.rtx_def**
  %18 = load %struct.rtx_def** %rtx23, align 8, !tbaa !1
  %19 = getelementptr inbounds %struct.rtx_def* %18, i64 0, i32 0
  %bf.load30 = load i32* %19, align 8
  %bf.clear31 = and i32 %bf.load30, 268435456
  %cmp32 = icmp eq i32 %bf.clear31, 0
  br i1 %cmp32, label %if.then41, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true
  %bf.clear35 = and i32 %bf.load30, 65535
  %idxprom36176 = zext i32 %bf.clear35 to i64
  %arrayidx37 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom36176
  %20 = load i8* %arrayidx37, align 1, !tbaa !18
  %cmp39 = icmp eq i8 %20, 105
  br i1 %cmp39, label %if.end42, label %if.then41

if.then41:                                        ; preds = %lor.lhs.false, %land.lhs.true
  call void @ready_add(%struct.ready_list* %ready, %struct.rtx_def* %insn.0190) #4
  %bf.load43.pre = load i32* %13, align 8
  br label %if.end42

if.end42:                                         ; preds = %if.then41, %lor.lhs.false, %if.end20
  %bf.load43 = phi i32 [ %bf.load43.pre, %if.then41 ], [ %bf.load, %lor.lhs.false ], [ %bf.load, %if.end20 ]
  %bf.clear45 = and i32 %bf.load43, 268435456
  %tobool = icmp eq i32 %bf.clear45, 0
  br i1 %tobool, label %if.then46, label %for.cond.backedge

for.cond.backedge:                                ; preds = %if.end42, %if.then46, %for.body
  %insn.0.in.in = getelementptr inbounds %struct.rtx_def* %insn.0190, i64 0, i32 1, i64 2
  %insn.0.in = bitcast %union.rtunion_def* %insn.0.in.in to %struct.rtx_def**
  %insn.0 = load %struct.rtx_def** %insn.0.in, align 8
  %cmp13 = icmp eq %struct.rtx_def* %insn.0, %2
  br i1 %cmp13, label %for.end, label %for.body

if.then46:                                        ; preds = %if.end42
  %21 = load i32* @target_n_insns, align 4, !tbaa !5
  %inc = add nsw i32 %21, 1
  store i32 %inc, i32* @target_n_insns, align 4, !tbaa !5
  br label %for.cond.backedge

for.end:                                          ; preds = %for.cond.backedge, %for.cond.preheader
  %22 = load i32* @target_bb, align 4, !tbaa !5
  %bb_src.0183 = add i32 %22, 1
  %23 = load i32* @current_nr_blocks, align 4, !tbaa !5
  %cmp52184 = icmp slt i32 %bb_src.0183, %23
  br i1 %cmp52184, label %for.body54.lr.ph, label %for.end146

for.body54.lr.ph:                                 ; preds = %for.end
  %24 = sext i32 %bb_src.0183 to i64
  br label %for.body54

for.cond51.loopexit:                              ; preds = %for.inc138, %if.then58
  %.pre = load i32* @current_nr_blocks, align 4, !tbaa !5
  br label %for.cond51.backedge

for.body54:                                       ; preds = %for.body54.lr.ph, %for.cond51.backedge
  %25 = phi i32 [ %23, %for.body54.lr.ph ], [ %28, %for.cond51.backedge ]
  %indvars.iv = phi i64 [ %24, %for.body54.lr.ph ], [ %indvars.iv.next, %for.cond51.backedge ]
  %bb_src.0185 = phi i32 [ %bb_src.0183, %for.body54.lr.ph ], [ %bb_src.0, %for.cond51.backedge ]
  %26 = load %struct.candidate** @candidate_table, align 8, !tbaa !1
  %is_valid = getelementptr inbounds %struct.candidate* %26, i64 %indvars.iv, i32 0
  %27 = load i8* %is_valid, align 1, !tbaa !10
  %tobool57 = icmp eq i8 %27, 0
  br i1 %tobool57, label %for.cond51.backedge, label %if.then58

for.cond51.backedge:                              ; preds = %for.body54, %for.cond51.loopexit
  %28 = phi i32 [ %25, %for.body54 ], [ %.pre, %for.cond51.loopexit ]
  %bb_src.0 = add nsw i32 %bb_src.0185, 1
  %cmp52 = icmp slt i32 %bb_src.0, %28
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  br i1 %cmp52, label %for.body54, label %for.end146

if.then58:                                        ; preds = %for.body54
  %29 = load i32* @current_blocks, align 4, !tbaa !5
  %30 = trunc i64 %indvars.iv to i32
  %add59 = add nsw i32 %29, %30
  %idxprom60 = sext i32 %add59 to i64
  %31 = load i32** @rgn_bb_table, align 8, !tbaa !1
  %arrayidx61 = getelementptr inbounds i32* %31, i64 %idxprom60
  %32 = load i32* %arrayidx61, align 4, !tbaa !5
  call void @get_block_head_tail(i32 %32, %struct.rtx_def** %head, %struct.rtx_def** %tail) #4
  %33 = load %struct.rtx_def** %tail, align 8, !tbaa !1
  %arrayidx63 = getelementptr inbounds %struct.rtx_def* %33, i64 0, i32 1, i64 2
  %rtx64 = bitcast %union.rtunion_def* %arrayidx63 to %struct.rtx_def**
  %34 = load %struct.rtx_def** %rtx64, align 8, !tbaa !1
  %insn.1180 = load %struct.rtx_def** %head, align 8
  %cmp66181 = icmp eq %struct.rtx_def* %insn.1180, %34
  br i1 %cmp66181, label %for.cond51.loopexit, label %for.body68

for.body68:                                       ; preds = %if.then58, %for.inc138
  %insn.1182 = phi %struct.rtx_def* [ %insn.1, %for.inc138 ], [ %insn.1180, %if.then58 ]
  %35 = getelementptr inbounds %struct.rtx_def* %insn.1182, i64 0, i32 0
  %bf.load69 = load i32* %35, align 8
  %bf.clear70 = and i32 %bf.load69, 65535
  %idxprom71173 = zext i32 %bf.clear70 to i64
  %arrayidx72 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom71173
  %36 = load i8* %arrayidx72, align 1, !tbaa !18
  %cmp74 = icmp eq i8 %36, 105
  br i1 %cmp74, label %if.end77, label %for.inc138

if.end77:                                         ; preds = %for.body68
  %arrayidx79 = getelementptr inbounds %struct.rtx_def* %insn.1182, i64 0, i32 1, i64 0
  %rtint80 = bitcast %union.rtunion_def* %arrayidx79 to i32*
  %37 = load i32* %rtint80, align 4, !tbaa !5
  %idxprom81 = sext i32 %37 to i64
  %38 = load %struct.haifa_insn_data** @h_i_d, align 8, !tbaa !1
  %cant_move = getelementptr inbounds %struct.haifa_insn_data* %38, i64 %idxprom81, i32 11
  %bf.load83 = load i8* %cant_move, align 2
  %bf.clear84 = and i8 %bf.load83, 1
  %tobool85 = icmp eq i8 %bf.clear84, 0
  br i1 %tobool85, label %land.lhs.true86, label %for.inc138

land.lhs.true86:                                  ; preds = %if.end77
  %39 = load %struct.varray_head_tag** @basic_block_for_insn, align 8, !tbaa !1
  %data = getelementptr inbounds %struct.varray_head_tag* %39, i64 0, i32 4
  %bb = bitcast %union.varray_data_tag* %data to [1 x %struct.basic_block_def*]*
  %arrayidx91 = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb, i64 0, i64 %idxprom81
  %40 = load %struct.basic_block_def** %arrayidx91, align 8, !tbaa !1
  %index = getelementptr inbounds %struct.basic_block_def* %40, i64 0, i32 11
  %41 = load i32* %index, align 4, !tbaa !21
  %idxprom93 = sext i32 %41 to i64
  %42 = load i32** @block_to_bb, align 8, !tbaa !1
  %arrayidx94 = getelementptr inbounds i32* %42, i64 %idxprom93
  %43 = load i32* %arrayidx94, align 4, !tbaa !5
  %idxprom95 = sext i32 %43 to i64
  %44 = load %struct.candidate** @candidate_table, align 8, !tbaa !1
  %is_speculative = getelementptr inbounds %struct.candidate* %44, i64 %idxprom95, i32 1
  %45 = load i8* %is_speculative, align 1, !tbaa !13
  %tobool97 = icmp eq i8 %45, 0
  br i1 %tobool97, label %if.then108, label %lor.lhs.false98

lor.lhs.false98:                                  ; preds = %land.lhs.true86
  %call99 = call i32 @insn_issue_delay(%struct.rtx_def* %insn.1182) #4
  %cmp100 = icmp slt i32 %call99, 4
  br i1 %cmp100, label %land.lhs.true102, label %for.inc138

land.lhs.true102:                                 ; preds = %lor.lhs.false98
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %insn.1182, i64 0, i32 1, i64 3
  %rtx.i = bitcast %union.rtunion_def* %arrayidx.i to %struct.rtx_def**
  %46 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !1
  %47 = getelementptr inbounds %struct.rtx_def* %46, i64 0, i32 0
  %bf.load.i = load i32* %47, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  switch i32 %bf.clear.i, label %land.lhs.true105 [
    i32 47, label %check_live.exit
    i32 49, label %check_live.exit
    i32 39, label %if.then16.i
  ]

if.then16.i:                                      ; preds = %land.lhs.true102
  %arrayidx21.i = getelementptr inbounds %struct.rtx_def* %46, i64 0, i32 1, i64 0
  %rtvec.i = bitcast %union.rtunion_def* %arrayidx21.i to %struct.rtvec_def**
  %48 = load %struct.rtvec_def** %rtvec.i, align 8, !tbaa !1
  %num_elem.i = getelementptr inbounds %struct.rtvec_def* %48, i64 0, i32 0
  %49 = load i32* %num_elem.i, align 4, !tbaa !85
  %cmp2272.i = icmp sgt i32 %49, 0
  br i1 %cmp2272.i, label %for.body.lr.ph.i, label %land.lhs.true105

for.body.lr.ph.i:                                 ; preds = %if.then16.i
  %50 = sext i32 %49 to i64
  br label %for.body.i

for.body.i:                                       ; preds = %for.cond.backedge.for.body_crit_edge.i, %for.body.lr.ph.i
  %51 = phi %struct.rtvec_def* [ %48, %for.body.lr.ph.i ], [ %.pre75.i, %for.cond.backedge.for.body_crit_edge.i ]
  %indvars.iv.i = phi i64 [ %50, %for.body.lr.ph.i ], [ %indvars.iv.next.i, %for.cond.backedge.for.body_crit_edge.i ]
  %indvars.iv.next.i = add nsw i64 %indvars.iv.i, -1
  %arrayidx29.i = getelementptr inbounds %struct.rtvec_def* %51, i64 0, i32 1, i64 %indvars.iv.next.i
  %52 = load %struct.rtx_def** %arrayidx29.i, align 8, !tbaa !1
  %53 = getelementptr inbounds %struct.rtx_def* %52, i64 0, i32 0
  %bf.load30.i = load i32* %53, align 8
  %bf.clear31.i = and i32 %bf.load30.i, 65535
  switch i32 %bf.clear31.i, label %for.cond.backedge.i [
    i32 47, label %land.lhs.true.i
    i32 49, label %land.lhs.true.i
  ]

for.cond.backedge.i:                              ; preds = %land.lhs.true.i, %for.body.i
  %54 = trunc i64 %indvars.iv.next.i to i32
  %cmp22.i = icmp sgt i32 %54, 0
  br i1 %cmp22.i, label %for.cond.backedge.for.body_crit_edge.i, label %land.lhs.true105

for.cond.backedge.for.body_crit_edge.i:           ; preds = %for.cond.backedge.i
  %.pre.i = load %struct.rtx_def** %rtx.i, align 8, !tbaa !1
  %arrayidx27.phi.trans.insert.i = getelementptr inbounds %struct.rtx_def* %.pre.i, i64 0, i32 1, i64 0
  %rtvec28.phi.trans.insert.i = bitcast %union.rtunion_def* %arrayidx27.phi.trans.insert.i to %struct.rtvec_def**
  %.pre75.i = load %struct.rtvec_def** %rtvec28.phi.trans.insert.i, align 8, !tbaa !1
  br label %for.body.i

land.lhs.true.i:                                  ; preds = %for.body.i, %for.body.i
  %call55.i = call fastcc i32 @check_live_1(i32 %30, %struct.rtx_def* %52) #4
  %tobool.i = icmp eq i32 %call55.i, 0
  br i1 %tobool.i, label %for.inc138, label %for.cond.backedge.i

check_live.exit:                                  ; preds = %land.lhs.true102, %land.lhs.true102
  %call.i = call fastcc i32 @check_live_1(i32 %30, %struct.rtx_def* %46) #4
  %tobool104 = icmp eq i32 %call.i, 0
  br i1 %tobool104, label %for.inc138, label %land.lhs.true105

land.lhs.true105:                                 ; preds = %for.cond.backedge.i, %if.then16.i, %land.lhs.true102, %check_live.exit
  %55 = load i32* @target_bb, align 4, !tbaa !5
  %call106 = call fastcc i32 @is_exception_free(%struct.rtx_def* %insn.1182, i32 %30, i32 %55)
  %tobool107 = icmp eq i32 %call106, 0
  br i1 %tobool107, label %for.inc138, label %if.then108

if.then108:                                       ; preds = %land.lhs.true105, %land.lhs.true86
  %call110 = call %struct.rtx_def* @next_nonnote_insn(%struct.rtx_def* %insn.1182) #4
  %56 = load i32* %rtint80, align 4, !tbaa !5
  %idxprom114 = sext i32 %56 to i64
  %57 = load %struct.haifa_insn_data** @h_i_d, align 8, !tbaa !1
  %dep_count116 = getelementptr inbounds %struct.haifa_insn_data* %57, i64 %idxprom114, i32 4
  %58 = load i32* %dep_count116, align 4, !tbaa !24
  %cmp117 = icmp eq i32 %58, 0
  br i1 %cmp117, label %land.lhs.true119, label %for.inc138

land.lhs.true119:                                 ; preds = %if.then108
  %tobool120 = icmp eq %struct.rtx_def* %call110, null
  br i1 %tobool120, label %if.then135, label %lor.lhs.false121

lor.lhs.false121:                                 ; preds = %land.lhs.true119
  %59 = getelementptr inbounds %struct.rtx_def* %call110, i64 0, i32 0
  %bf.load122 = load i32* %59, align 8
  %bf.clear124 = and i32 %bf.load122, 268435456
  %cmp125 = icmp eq i32 %bf.clear124, 0
  br i1 %cmp125, label %if.then135, label %lor.lhs.false127

lor.lhs.false127:                                 ; preds = %lor.lhs.false121
  %bf.clear129 = and i32 %bf.load122, 65535
  %idxprom130174 = zext i32 %bf.clear129 to i64
  %arrayidx131 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom130174
  %60 = load i8* %arrayidx131, align 1, !tbaa !18
  %cmp133 = icmp eq i8 %60, 105
  br i1 %cmp133, label %for.inc138, label %if.then135

if.then135:                                       ; preds = %land.lhs.true119, %lor.lhs.false127, %lor.lhs.false121
  call void @ready_add(%struct.ready_list* %ready, %struct.rtx_def* %insn.1182) #4
  br label %for.inc138

for.inc138:                                       ; preds = %land.lhs.true.i, %land.lhs.true105, %check_live.exit, %if.end77, %lor.lhs.false98, %if.then135, %lor.lhs.false127, %if.then108, %for.body68
  %arrayidx140 = getelementptr inbounds %struct.rtx_def* %insn.1182, i64 0, i32 1, i64 2
  %rtx141 = bitcast %union.rtunion_def* %arrayidx140 to %struct.rtx_def**
  %insn.1 = load %struct.rtx_def** %rtx141, align 8
  %cmp66 = icmp eq %struct.rtx_def* %insn.1, %34
  br i1 %cmp66, label %for.cond51.loopexit, label %for.body68

for.end146:                                       ; preds = %for.cond51.backedge, %for.end
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @can_schedule_ready_p(%struct.rtx_def* %insn) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 33
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i1 true, i1* @last_was_jump, align 1
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %fld = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1
  %rtint = bitcast [1 x %union.rtunion_def]* %fld to i32*
  %1 = load i32* %rtint, align 4, !tbaa !5
  %idxprom = sext i32 %1 to i64
  %2 = load %struct.varray_head_tag** @basic_block_for_insn, align 8, !tbaa !1
  %data = getelementptr inbounds %struct.varray_head_tag* %2, i64 0, i32 4
  %bb = bitcast %union.varray_data_tag* %data to [1 x %struct.basic_block_def*]*
  %arrayidx1 = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb, i64 0, i64 %idxprom
  %3 = load %struct.basic_block_def** %arrayidx1, align 8, !tbaa !1
  %index = getelementptr inbounds %struct.basic_block_def* %3, i64 0, i32 11
  %4 = load i32* %index, align 4, !tbaa !21
  %idxprom2 = sext i32 %4 to i64
  %5 = load i32** @block_to_bb, align 8, !tbaa !1
  %arrayidx3 = getelementptr inbounds i32* %5, i64 %idxprom2
  %6 = load i32* %arrayidx3, align 4, !tbaa !5
  %7 = load i32* @target_bb, align 4, !tbaa !5
  %cmp4 = icmp eq i32 %6, %7
  br i1 %cmp4, label %if.else104, label %if.then5

if.then5:                                         ; preds = %if.end
  %idxprom17 = sext i32 %6 to i64
  %8 = load %struct.candidate** @candidate_table, align 8, !tbaa !1
  %is_speculative = getelementptr inbounds %struct.candidate* %8, i64 %idxprom17, i32 1
  %9 = load i8* %is_speculative, align 1, !tbaa !13
  %tobool = icmp eq i8 %9, 0
  br i1 %tobool, label %if.end65, label %if.then19

if.then19:                                        ; preds = %if.then5
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 3
  %rtx.i = bitcast %union.rtunion_def* %arrayidx.i to %struct.rtx_def**
  %10 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !1
  %11 = getelementptr inbounds %struct.rtx_def* %10, i64 0, i32 0
  %bf.load.i = load i32* %11, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  switch i32 %bf.clear.i, label %if.end33 [
    i32 47, label %check_live.exit
    i32 49, label %check_live.exit
    i32 39, label %if.then16.i
  ]

if.then16.i:                                      ; preds = %if.then19
  %arrayidx21.i = getelementptr inbounds %struct.rtx_def* %10, i64 0, i32 1, i64 0
  %rtvec.i = bitcast %union.rtunion_def* %arrayidx21.i to %struct.rtvec_def**
  %12 = load %struct.rtvec_def** %rtvec.i, align 8, !tbaa !1
  %num_elem.i = getelementptr inbounds %struct.rtvec_def* %12, i64 0, i32 0
  %13 = load i32* %num_elem.i, align 4, !tbaa !85
  %cmp2272.i = icmp sgt i32 %13, 0
  br i1 %cmp2272.i, label %for.body.lr.ph.i, label %if.end33

for.body.lr.ph.i:                                 ; preds = %if.then16.i
  %14 = sext i32 %13 to i64
  br label %for.body.i

for.body.i:                                       ; preds = %for.cond.backedge.for.body_crit_edge.i, %for.body.lr.ph.i
  %15 = phi %struct.rtvec_def* [ %12, %for.body.lr.ph.i ], [ %.pre75.i, %for.cond.backedge.for.body_crit_edge.i ]
  %indvars.iv.i = phi i64 [ %14, %for.body.lr.ph.i ], [ %indvars.iv.next.i, %for.cond.backedge.for.body_crit_edge.i ]
  %indvars.iv.next.i = add nsw i64 %indvars.iv.i, -1
  %arrayidx29.i = getelementptr inbounds %struct.rtvec_def* %15, i64 0, i32 1, i64 %indvars.iv.next.i
  %16 = load %struct.rtx_def** %arrayidx29.i, align 8, !tbaa !1
  %17 = getelementptr inbounds %struct.rtx_def* %16, i64 0, i32 0
  %bf.load30.i = load i32* %17, align 8
  %bf.clear31.i = and i32 %bf.load30.i, 65535
  switch i32 %bf.clear31.i, label %for.cond.backedge.i [
    i32 47, label %land.lhs.true.i
    i32 49, label %land.lhs.true.i
  ]

for.cond.backedge.i:                              ; preds = %land.lhs.true.i, %for.body.i
  %18 = trunc i64 %indvars.iv.next.i to i32
  %cmp22.i = icmp sgt i32 %18, 0
  br i1 %cmp22.i, label %for.cond.backedge.for.body_crit_edge.i, label %if.end33

for.cond.backedge.for.body_crit_edge.i:           ; preds = %for.cond.backedge.i
  %.pre.i = load %struct.rtx_def** %rtx.i, align 8, !tbaa !1
  %arrayidx27.phi.trans.insert.i = getelementptr inbounds %struct.rtx_def* %.pre.i, i64 0, i32 1, i64 0
  %rtvec28.phi.trans.insert.i = bitcast %union.rtunion_def* %arrayidx27.phi.trans.insert.i to %struct.rtvec_def**
  %.pre75.i = load %struct.rtvec_def** %rtvec28.phi.trans.insert.i, align 8, !tbaa !1
  br label %for.body.i

land.lhs.true.i:                                  ; preds = %for.body.i, %for.body.i
  %call55.i = tail call fastcc i32 @check_live_1(i32 %6, %struct.rtx_def* %16) #4
  %tobool.i = icmp eq i32 %call55.i, 0
  br i1 %tobool.i, label %return, label %for.cond.backedge.i

check_live.exit:                                  ; preds = %if.then19, %if.then19
  %call.i = tail call fastcc i32 @check_live_1(i32 %6, %struct.rtx_def* %10) #4
  %tobool31 = icmp eq i32 %call.i, 0
  br i1 %tobool31, label %return, label %if.end33

if.end33:                                         ; preds = %for.cond.backedge.i, %if.then16.i, %if.then19, %check_live.exit
  %19 = load i32* %rtint, align 4, !tbaa !5
  %idxprom37 = sext i32 %19 to i64
  %20 = load %struct.varray_head_tag** @basic_block_for_insn, align 8, !tbaa !1
  %data38 = getelementptr inbounds %struct.varray_head_tag* %20, i64 0, i32 4
  %bb39 = bitcast %union.varray_data_tag* %data38 to [1 x %struct.basic_block_def*]*
  %arrayidx40 = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb39, i64 0, i64 %idxprom37
  %21 = load %struct.basic_block_def** %arrayidx40, align 8, !tbaa !1
  %index41 = getelementptr inbounds %struct.basic_block_def* %21, i64 0, i32 11
  %22 = load i32* %index41, align 4, !tbaa !21
  %idxprom43 = sext i32 %22 to i64
  %23 = load i32** @block_to_bb, align 8, !tbaa !1
  %arrayidx44 = getelementptr inbounds i32* %23, i64 %idxprom43
  %24 = load i32* %arrayidx44, align 4, !tbaa !5
  %25 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !1
  %26 = getelementptr inbounds %struct.rtx_def* %25, i64 0, i32 0
  %bf.load.i135 = load i32* %26, align 8
  %bf.clear.i136 = and i32 %bf.load.i135, 65535
  switch i32 %bf.clear.i136, label %update_live.exit [
    i32 47, label %if.then.i137
    i32 49, label %if.then.i137
    i32 39, label %if.then16.i141
  ]

if.then.i137:                                     ; preds = %if.end33, %if.end33
  tail call fastcc void @update_live_1(i32 %24, %struct.rtx_def* %25) #4
  br label %update_live.exit

if.then16.i141:                                   ; preds = %if.end33
  %arrayidx21.i138 = getelementptr inbounds %struct.rtx_def* %25, i64 0, i32 1, i64 0
  %rtvec.i139 = bitcast %union.rtunion_def* %arrayidx21.i138 to %struct.rtvec_def**
  %27 = load %struct.rtvec_def** %rtvec.i139, align 8, !tbaa !1
  %num_elem.i140 = getelementptr inbounds %struct.rtvec_def* %27, i64 0, i32 0
  %28 = load i32* %num_elem.i140, align 4, !tbaa !85
  %cmp2271.i = icmp sgt i32 %28, 0
  br i1 %cmp2271.i, label %for.body.lr.ph.i142, label %update_live.exit

for.body.lr.ph.i142:                              ; preds = %if.then16.i141
  %29 = sext i32 %28 to i64
  br label %for.body.i148

for.body.i148:                                    ; preds = %for.cond.backedge.for.body_crit_edge.i154, %for.body.lr.ph.i142
  %30 = phi %struct.rtvec_def* [ %27, %for.body.lr.ph.i142 ], [ %.pre73.i, %for.cond.backedge.for.body_crit_edge.i154 ]
  %indvars.iv.i143 = phi i64 [ %29, %for.body.lr.ph.i142 ], [ %indvars.iv.next.i144, %for.cond.backedge.for.body_crit_edge.i154 ]
  %indvars.iv.next.i144 = add nsw i64 %indvars.iv.i143, -1
  %arrayidx29.i145 = getelementptr inbounds %struct.rtvec_def* %30, i64 0, i32 1, i64 %indvars.iv.next.i144
  %31 = load %struct.rtx_def** %arrayidx29.i145, align 8, !tbaa !1
  %32 = getelementptr inbounds %struct.rtx_def* %31, i64 0, i32 0
  %bf.load30.i146 = load i32* %32, align 8
  %bf.clear31.i147 = and i32 %bf.load30.i146, 65535
  switch i32 %bf.clear31.i147, label %for.cond.backedge.i150 [
    i32 47, label %if.then46.i
    i32 49, label %if.then46.i
  ]

for.cond.backedge.i150:                           ; preds = %if.then46.i, %for.body.i148
  %33 = trunc i64 %indvars.iv.next.i144 to i32
  %cmp22.i149 = icmp sgt i32 %33, 0
  br i1 %cmp22.i149, label %for.cond.backedge.for.body_crit_edge.i154, label %update_live.exit

for.cond.backedge.for.body_crit_edge.i154:        ; preds = %for.cond.backedge.i150
  %.pre.i151 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !1
  %arrayidx27.phi.trans.insert.i152 = getelementptr inbounds %struct.rtx_def* %.pre.i151, i64 0, i32 1, i64 0
  %rtvec28.phi.trans.insert.i153 = bitcast %union.rtunion_def* %arrayidx27.phi.trans.insert.i152 to %struct.rtvec_def**
  %.pre73.i = load %struct.rtvec_def** %rtvec28.phi.trans.insert.i153, align 8, !tbaa !1
  br label %for.body.i148

if.then46.i:                                      ; preds = %for.body.i148, %for.body.i148
  tail call fastcc void @update_live_1(i32 %24, %struct.rtx_def* %31) #4
  br label %for.cond.backedge.i150

update_live.exit:                                 ; preds = %for.cond.backedge.i150, %if.end33, %if.then.i137, %if.then16.i141
  %34 = load i32* %rtint, align 4, !tbaa !5
  %idxprom48 = sext i32 %34 to i64
  %35 = load %struct.haifa_insn_data** @h_i_d, align 8, !tbaa !1
  %is_load_insn = getelementptr inbounds %struct.haifa_insn_data* %35, i64 %idxprom48, i32 11
  %bf.load50 = load i8* %is_load_insn, align 2
  %36 = and i8 %bf.load50, 6
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %if.end64, label %if.then63

if.then63:                                        ; preds = %update_live.exit
  %depend.i = getelementptr inbounds %struct.haifa_insn_data* %35, i64 %idxprom48, i32 0
  %link.017.i = load %struct.rtx_def** %depend.i, align 8
  %tobool18.i = icmp eq %struct.rtx_def* %link.017.i, null
  br i1 %tobool18.i, label %if.end64, label %for.body.i158

for.body.i158:                                    ; preds = %if.then63, %for.inc.i
  %link.019.i = phi %struct.rtx_def* [ %link.0.i, %for.inc.i ], [ %link.017.i, %if.then63 ]
  %38 = getelementptr inbounds %struct.rtx_def* %link.019.i, i64 0, i32 0
  %bf.load.i156 = load i32* %38, align 8
  %bf.clear.i157 = and i32 %bf.load.i156, 16711680
  %cmp.i = icmp eq i32 %bf.clear.i157, 0
  br i1 %cmp.i, label %if.then.i160, label %for.inc.i

if.then.i160:                                     ; preds = %for.body.i158
  %arrayidx3.i = getelementptr inbounds %struct.rtx_def* %link.019.i, i64 0, i32 1, i64 0
  %rtx.i159 = bitcast %union.rtunion_def* %arrayidx3.i to %struct.rtx_def**
  %39 = load %struct.rtx_def** %rtx.i159, align 8, !tbaa !1
  %arrayidx5.i = getelementptr inbounds %struct.rtx_def* %39, i64 0, i32 1, i64 0
  %rtint6.i = bitcast %union.rtunion_def* %arrayidx5.i to i32*
  %40 = load i32* %rtint6.i, align 4, !tbaa !5
  %idxprom7.i = sext i32 %40 to i64
  %41 = load %struct.haifa_insn_data** @h_i_d, align 8, !tbaa !1
  %fed_by_spec_load.i = getelementptr inbounds %struct.haifa_insn_data* %41, i64 %idxprom7.i, i32 11
  %bf.load9.i = load i8* %fed_by_spec_load.i, align 2
  %bf.set.i = or i8 %bf.load9.i, 2
  store i8 %bf.set.i, i8* %fed_by_spec_load.i, align 2
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then.i160, %for.body.i158
  %arrayidx12.i = getelementptr inbounds %struct.rtx_def* %link.019.i, i64 0, i32 1, i64 1
  %rtx13.i = bitcast %union.rtunion_def* %arrayidx12.i to %struct.rtx_def**
  %link.0.i = load %struct.rtx_def** %rtx13.i, align 8
  %tobool.i161 = icmp eq %struct.rtx_def* %link.0.i, null
  br i1 %tobool.i161, label %if.end64, label %for.body.i158

if.end64:                                         ; preds = %for.inc.i, %if.then63, %update_live.exit
  %42 = load i32* @nr_spec, align 4, !tbaa !5
  %inc = add nsw i32 %42, 1
  store i32 %inc, i32* @nr_spec, align 4, !tbaa !5
  br label %if.end65

if.end65:                                         ; preds = %if.then5, %if.end64
  %43 = load i32* @nr_inter, align 4, !tbaa !5
  %inc66 = add nsw i32 %43, 1
  store i32 %inc66, i32* @nr_inter, align 4, !tbaa !5
  %bf.load67165 = load i32* %0, align 8
  %bf.clear69166 = and i32 %bf.load67165, 268435456
  %tobool70167 = icmp eq i32 %bf.clear69166, 0
  br i1 %tobool70167, label %while.end, label %while.body

while.body:                                       ; preds = %if.end65, %while.body
  %temp.0168 = phi %struct.rtx_def* [ %44, %while.body ], [ %insn, %if.end65 ]
  %arrayidx72 = getelementptr inbounds %struct.rtx_def* %temp.0168, i64 0, i32 1, i64 1
  %rtx = bitcast %union.rtunion_def* %arrayidx72 to %struct.rtx_def**
  %44 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %45 = getelementptr inbounds %struct.rtx_def* %44, i64 0, i32 0
  %bf.load67 = load i32* %45, align 8
  %bf.clear69 = and i32 %bf.load67, 268435456
  %tobool70 = icmp eq i32 %bf.clear69, 0
  br i1 %tobool70, label %while.end, label %while.body

while.end:                                        ; preds = %while.body, %if.end65
  %temp.0.lcssa = phi %struct.rtx_def* [ %insn, %if.end65 ], [ %44, %while.body ]
  %fld71 = getelementptr inbounds %struct.rtx_def* %temp.0.lcssa, i64 0, i32 1
  %rtint75 = bitcast [1 x %union.rtunion_def]* %fld71 to i32*
  %46 = load i32* %rtint75, align 4, !tbaa !5
  %idxprom76 = sext i32 %46 to i64
  %47 = load %struct.varray_head_tag** @basic_block_for_insn, align 8, !tbaa !1
  %data77 = getelementptr inbounds %struct.varray_head_tag* %47, i64 0, i32 4
  %bb78 = bitcast %union.varray_data_tag* %data77 to [1 x %struct.basic_block_def*]*
  %arrayidx79 = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb78, i64 0, i64 %idxprom76
  %48 = load %struct.basic_block_def** %arrayidx79, align 8, !tbaa !1
  %head = getelementptr inbounds %struct.basic_block_def* %48, i64 0, i32 0
  %49 = load %struct.rtx_def** %head, align 8, !tbaa !50
  %cmp80 = icmp eq %struct.rtx_def* %temp.0.lcssa, %49
  %end = getelementptr inbounds %struct.basic_block_def* %48, i64 0, i32 1
  %50 = load %struct.rtx_def** %end, align 8, !tbaa !34
  %cmp81 = icmp eq %struct.rtx_def* %50, %insn
  %or.cond = and i1 %cmp80, %cmp81
  br i1 %or.cond, label %if.then82, label %if.else

if.then82:                                        ; preds = %while.end
  %call83 = tail call %struct.rtx_def* @emit_note_after(i32 -99, %struct.rtx_def* %insn) #4
  store %struct.rtx_def* %call83, %struct.rtx_def** %head, align 8, !tbaa !50
  store %struct.rtx_def* %call83, %struct.rtx_def** %end, align 8, !tbaa !34
  br label %if.end106

if.else:                                          ; preds = %while.end
  %cmp87 = icmp eq %struct.rtx_def* %50, %insn
  br i1 %cmp87, label %if.then88, label %if.else93

if.then88:                                        ; preds = %if.else
  %end86 = getelementptr inbounds %struct.basic_block_def* %48, i64 0, i32 1
  %arrayidx90 = getelementptr inbounds %struct.rtx_def* %temp.0.lcssa, i64 0, i32 1, i64 1
  %rtx91 = bitcast %union.rtunion_def* %arrayidx90 to %struct.rtx_def**
  %51 = load %struct.rtx_def** %rtx91, align 8, !tbaa !1
  store %struct.rtx_def* %51, %struct.rtx_def** %end86, align 8, !tbaa !34
  br label %if.end106

if.else93:                                        ; preds = %if.else
  br i1 %cmp80, label %if.then96, label %if.end106

if.then96:                                        ; preds = %if.else93
  %arrayidx98 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 2
  %rtx99 = bitcast %union.rtunion_def* %arrayidx98 to %struct.rtx_def**
  %52 = load %struct.rtx_def** %rtx99, align 8, !tbaa !1
  store %struct.rtx_def* %52, %struct.rtx_def** %head, align 8, !tbaa !50
  br label %if.end106

if.else104:                                       ; preds = %if.end
  %53 = load i32* @sched_target_n_insns, align 4, !tbaa !5
  %inc105 = add nsw i32 %53, 1
  store i32 %inc105, i32* @sched_target_n_insns, align 4, !tbaa !5
  br label %if.end106

if.end106:                                        ; preds = %if.then82, %if.else93, %if.then96, %if.then88, %if.else104
  %54 = load i32* @sched_n_insns, align 4, !tbaa !5
  %inc107 = add nsw i32 %54, 1
  store i32 %inc107, i32* @sched_n_insns, align 4, !tbaa !5
  br label %return

return:                                           ; preds = %land.lhs.true.i, %check_live.exit, %if.end106
  %retval.0 = phi i32 [ 1, %if.end106 ], [ 0, %check_live.exit ], [ 0, %land.lhs.true.i ]
  ret i32 %retval.0
}

; Function Attrs: nounwind readonly uwtable
define internal i32 @schedule_more_p() #5 {
entry:
  %.b = load i1* @last_was_jump, align 1
  br i1 %.b, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %entry
  %0 = load i32* @sched_target_n_insns, align 4, !tbaa !5
  %1 = load i32* @target_n_insns, align 4, !tbaa !5
  %cmp = icmp slt i32 %0, %1
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %cmp, %land.rhs ]
  %land.ext = zext i1 %2 to i32
  ret i32 %land.ext
}

; Function Attrs: nounwind uwtable
define internal i32 @new_ready(%struct.rtx_def* %next) #0 {
entry:
  %arrayidx = getelementptr inbounds %struct.rtx_def* %next, i64 0, i32 1, i64 0
  %rtint = bitcast %union.rtunion_def* %arrayidx to i32*
  %0 = load i32* %rtint, align 4, !tbaa !5
  %idxprom = sext i32 %0 to i64
  %1 = load %struct.varray_head_tag** @basic_block_for_insn, align 8, !tbaa !1
  %data = getelementptr inbounds %struct.varray_head_tag* %1, i64 0, i32 4
  %bb = bitcast %union.varray_data_tag* %data to [1 x %struct.basic_block_def*]*
  %arrayidx1 = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb, i64 0, i64 %idxprom
  %2 = load %struct.basic_block_def** %arrayidx1, align 8, !tbaa !1
  %index = getelementptr inbounds %struct.basic_block_def* %2, i64 0, i32 11
  %3 = load i32* %index, align 4, !tbaa !21
  %idxprom2 = sext i32 %3 to i64
  %4 = load i32** @block_to_bb, align 8, !tbaa !1
  %arrayidx3 = getelementptr inbounds i32* %4, i64 %idxprom2
  %5 = load i32* %arrayidx3, align 4, !tbaa !5
  %6 = load i32* @target_bb, align 4, !tbaa !5
  %cmp = icmp eq i32 %5, %6
  br i1 %cmp, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %idxprom15 = sext i32 %5 to i64
  %7 = load %struct.candidate** @candidate_table, align 8, !tbaa !1
  %is_valid = getelementptr inbounds %struct.candidate* %7, i64 %idxprom15, i32 0
  %8 = load i8* %is_valid, align 1, !tbaa !10
  %tobool = icmp eq i8 %8, 0
  br i1 %tobool, label %return, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true
  %9 = load %struct.haifa_insn_data** @h_i_d, align 8, !tbaa !1
  %cant_move = getelementptr inbounds %struct.haifa_insn_data* %9, i64 %idxprom, i32 11
  %bf.load = load i8* %cant_move, align 2
  %bf.clear = and i8 %bf.load, 1
  %tobool22 = icmp eq i8 %bf.clear, 0
  br i1 %tobool22, label %lor.lhs.false23, label %return

lor.lhs.false23:                                  ; preds = %lor.lhs.false
  %is_speculative = getelementptr inbounds %struct.candidate* %7, i64 %idxprom15, i32 1
  %10 = load i8* %is_speculative, align 1, !tbaa !13
  %tobool37 = icmp eq i8 %10, 0
  br i1 %tobool37, label %if.end, label %land.lhs.true38

land.lhs.true38:                                  ; preds = %lor.lhs.false23
  %call = tail call i32 @insn_issue_delay(%struct.rtx_def* %next) #4
  %cmp39 = icmp sgt i32 %call, 3
  br i1 %cmp39, label %return, label %lor.lhs.false41

lor.lhs.false41:                                  ; preds = %land.lhs.true38
  %11 = load i32* %rtint, align 4, !tbaa !5
  %idxprom45 = sext i32 %11 to i64
  %12 = load %struct.varray_head_tag** @basic_block_for_insn, align 8, !tbaa !1
  %data46 = getelementptr inbounds %struct.varray_head_tag* %12, i64 0, i32 4
  %bb47 = bitcast %union.varray_data_tag* %data46 to [1 x %struct.basic_block_def*]*
  %arrayidx48 = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb47, i64 0, i64 %idxprom45
  %13 = load %struct.basic_block_def** %arrayidx48, align 8, !tbaa !1
  %index49 = getelementptr inbounds %struct.basic_block_def* %13, i64 0, i32 11
  %14 = load i32* %index49, align 4, !tbaa !21
  %idxprom51 = sext i32 %14 to i64
  %15 = load i32** @block_to_bb, align 8, !tbaa !1
  %arrayidx52 = getelementptr inbounds i32* %15, i64 %idxprom51
  %16 = load i32* %arrayidx52, align 4, !tbaa !5
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %next, i64 0, i32 1, i64 3
  %rtx.i = bitcast %union.rtunion_def* %arrayidx.i to %struct.rtx_def**
  %17 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !1
  %18 = getelementptr inbounds %struct.rtx_def* %17, i64 0, i32 0
  %bf.load.i = load i32* %18, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  switch i32 %bf.clear.i, label %lor.lhs.false55 [
    i32 47, label %check_live.exit
    i32 49, label %check_live.exit
    i32 39, label %if.then16.i
  ]

if.then16.i:                                      ; preds = %lor.lhs.false41
  %arrayidx21.i = getelementptr inbounds %struct.rtx_def* %17, i64 0, i32 1, i64 0
  %rtvec.i = bitcast %union.rtunion_def* %arrayidx21.i to %struct.rtvec_def**
  %19 = load %struct.rtvec_def** %rtvec.i, align 8, !tbaa !1
  %num_elem.i = getelementptr inbounds %struct.rtvec_def* %19, i64 0, i32 0
  %20 = load i32* %num_elem.i, align 4, !tbaa !85
  %cmp2272.i = icmp sgt i32 %20, 0
  br i1 %cmp2272.i, label %for.body.lr.ph.i, label %lor.lhs.false55

for.body.lr.ph.i:                                 ; preds = %if.then16.i
  %21 = sext i32 %20 to i64
  br label %for.body.i

for.body.i:                                       ; preds = %for.cond.backedge.for.body_crit_edge.i, %for.body.lr.ph.i
  %22 = phi %struct.rtvec_def* [ %19, %for.body.lr.ph.i ], [ %.pre75.i, %for.cond.backedge.for.body_crit_edge.i ]
  %indvars.iv.i = phi i64 [ %21, %for.body.lr.ph.i ], [ %indvars.iv.next.i, %for.cond.backedge.for.body_crit_edge.i ]
  %indvars.iv.next.i = add nsw i64 %indvars.iv.i, -1
  %arrayidx29.i = getelementptr inbounds %struct.rtvec_def* %22, i64 0, i32 1, i64 %indvars.iv.next.i
  %23 = load %struct.rtx_def** %arrayidx29.i, align 8, !tbaa !1
  %24 = getelementptr inbounds %struct.rtx_def* %23, i64 0, i32 0
  %bf.load30.i = load i32* %24, align 8
  %bf.clear31.i = and i32 %bf.load30.i, 65535
  switch i32 %bf.clear31.i, label %for.cond.backedge.i [
    i32 47, label %land.lhs.true.i
    i32 49, label %land.lhs.true.i
  ]

for.cond.backedge.i:                              ; preds = %land.lhs.true.i, %for.body.i
  %25 = trunc i64 %indvars.iv.next.i to i32
  %cmp22.i = icmp sgt i32 %25, 0
  br i1 %cmp22.i, label %for.cond.backedge.for.body_crit_edge.i, label %lor.lhs.false55

for.cond.backedge.for.body_crit_edge.i:           ; preds = %for.cond.backedge.i
  %.pre.i = load %struct.rtx_def** %rtx.i, align 8, !tbaa !1
  %arrayidx27.phi.trans.insert.i = getelementptr inbounds %struct.rtx_def* %.pre.i, i64 0, i32 1, i64 0
  %rtvec28.phi.trans.insert.i = bitcast %union.rtunion_def* %arrayidx27.phi.trans.insert.i to %struct.rtvec_def**
  %.pre75.i = load %struct.rtvec_def** %rtvec28.phi.trans.insert.i, align 8, !tbaa !1
  br label %for.body.i

land.lhs.true.i:                                  ; preds = %for.body.i, %for.body.i
  %call55.i = tail call fastcc i32 @check_live_1(i32 %16, %struct.rtx_def* %23) #4
  %tobool.i = icmp eq i32 %call55.i, 0
  br i1 %tobool.i, label %return, label %for.cond.backedge.i

check_live.exit:                                  ; preds = %lor.lhs.false41, %lor.lhs.false41
  %call.i = tail call fastcc i32 @check_live_1(i32 %16, %struct.rtx_def* %17) #4
  %tobool54 = icmp eq i32 %call.i, 0
  br i1 %tobool54, label %return, label %lor.lhs.false55

lor.lhs.false55:                                  ; preds = %for.cond.backedge.i, %if.then16.i, %lor.lhs.false41, %check_live.exit
  %26 = load i32* %rtint, align 4, !tbaa !5
  %idxprom59 = sext i32 %26 to i64
  %27 = load %struct.varray_head_tag** @basic_block_for_insn, align 8, !tbaa !1
  %data60 = getelementptr inbounds %struct.varray_head_tag* %27, i64 0, i32 4
  %bb61 = bitcast %union.varray_data_tag* %data60 to [1 x %struct.basic_block_def*]*
  %arrayidx62 = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb61, i64 0, i64 %idxprom59
  %28 = load %struct.basic_block_def** %arrayidx62, align 8, !tbaa !1
  %index63 = getelementptr inbounds %struct.basic_block_def* %28, i64 0, i32 11
  %29 = load i32* %index63, align 4, !tbaa !21
  %idxprom65 = sext i32 %29 to i64
  %30 = load i32** @block_to_bb, align 8, !tbaa !1
  %arrayidx66 = getelementptr inbounds i32* %30, i64 %idxprom65
  %31 = load i32* %arrayidx66, align 4, !tbaa !5
  %32 = load i32* @target_bb, align 4, !tbaa !5
  %call67 = tail call fastcc i32 @is_exception_free(%struct.rtx_def* %next, i32 %31, i32 %32)
  %tobool68 = icmp eq i32 %call67, 0
  br i1 %tobool68, label %return, label %if.end

if.end:                                           ; preds = %lor.lhs.false55, %lor.lhs.false23, %entry
  br label %return

return:                                           ; preds = %land.lhs.true.i, %land.lhs.true38, %land.lhs.true, %lor.lhs.false, %check_live.exit, %lor.lhs.false55, %if.end
  %retval.0 = phi i32 [ 1, %if.end ], [ 0, %lor.lhs.false55 ], [ 0, %check_live.exit ], [ 0, %lor.lhs.false ], [ 0, %land.lhs.true ], [ 0, %land.lhs.true38 ], [ 0, %land.lhs.true.i ]
  ret i32 %retval.0
}

; Function Attrs: nounwind readonly uwtable
define internal i32 @rgn_rank(%struct.rtx_def* nocapture readonly %insn1, %struct.rtx_def* nocapture readonly %insn2) #5 {
entry:
  %arrayidx = getelementptr inbounds %struct.rtx_def* %insn1, i64 0, i32 1, i64 0
  %rtint = bitcast %union.rtunion_def* %arrayidx to i32*
  %0 = load i32* %rtint, align 4, !tbaa !5
  %idxprom = sext i32 %0 to i64
  %1 = load %struct.varray_head_tag** @basic_block_for_insn, align 8, !tbaa !1
  %data = getelementptr inbounds %struct.varray_head_tag* %1, i64 0, i32 4
  %bb = bitcast %union.varray_data_tag* %data to [1 x %struct.basic_block_def*]*
  %arrayidx1 = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb, i64 0, i64 %idxprom
  %2 = load %struct.basic_block_def** %arrayidx1, align 8, !tbaa !1
  %index = getelementptr inbounds %struct.basic_block_def* %2, i64 0, i32 11
  %3 = load i32* %index, align 4, !tbaa !21
  %idxprom2 = sext i32 %3 to i64
  %4 = load i32** @block_to_bb, align 8, !tbaa !1
  %arrayidx3 = getelementptr inbounds i32* %4, i64 %idxprom2
  %5 = load i32* %arrayidx3, align 4, !tbaa !5
  %arrayidx5 = getelementptr inbounds %struct.rtx_def* %insn2, i64 0, i32 1, i64 0
  %rtint6 = bitcast %union.rtunion_def* %arrayidx5 to i32*
  %6 = load i32* %rtint6, align 4, !tbaa !5
  %idxprom7 = sext i32 %6 to i64
  %arrayidx10 = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb, i64 0, i64 %idxprom7
  %7 = load %struct.basic_block_def** %arrayidx10, align 8, !tbaa !1
  %index11 = getelementptr inbounds %struct.basic_block_def* %7, i64 0, i32 11
  %8 = load i32* %index11, align 4, !tbaa !21
  %idxprom13 = sext i32 %8 to i64
  %arrayidx14 = getelementptr inbounds i32* %4, i64 %idxprom13
  %9 = load i32* %arrayidx14, align 4, !tbaa !5
  %cmp = icmp eq i32 %5, %9
  br i1 %cmp, label %return, label %if.then

if.then:                                          ; preds = %entry
  %10 = load i32* @target_bb, align 4, !tbaa !5
  %cmp26 = icmp ne i32 %9, %10
  %cmp38 = icmp eq i32 %5, %10
  %or.cond = or i1 %cmp26, %cmp38
  br i1 %or.cond, label %if.end, label %return

if.end:                                           ; preds = %if.then
  %cmp38.not = xor i1 %cmp38, true
  %cmp64 = icmp eq i32 %9, %10
  %or.cond139 = or i1 %cmp64, %cmp38.not
  br i1 %or.cond139, label %if.end66, label %return

if.end66:                                         ; preds = %if.end
  %idxprom78 = sext i32 %5 to i64
  %11 = load %struct.candidate** @candidate_table, align 8, !tbaa !1
  %is_speculative = getelementptr inbounds %struct.candidate* %11, i64 %idxprom78, i32 1
  %12 = load i8* %is_speculative, align 1, !tbaa !13
  %idxprom91 = sext i32 %9 to i64
  %is_speculative93 = getelementptr inbounds %struct.candidate* %11, i64 %idxprom91, i32 1
  %13 = load i8* %is_speculative93, align 1, !tbaa !13
  %tobool = icmp eq i8 %12, %13
  br i1 %tobool, label %if.end96, label %if.then95

if.then95:                                        ; preds = %if.end66
  %conv = sext i8 %12 to i32
  %conv94 = sext i8 %13 to i32
  %sub = sub nsw i32 %conv, %conv94
  br label %return

if.end96:                                         ; preds = %if.end66
  %src_prob = getelementptr inbounds %struct.candidate* %11, i64 %idxprom91, i32 2
  %14 = load i32* %src_prob, align 4, !tbaa !87
  %src_prob123 = getelementptr inbounds %struct.candidate* %11, i64 %idxprom78, i32 2
  %15 = load i32* %src_prob123, align 4, !tbaa !87
  %sub124 = sub nsw i32 %14, %15
  ret i32 %sub124

return:                                           ; preds = %if.end, %entry, %if.then, %if.then95
  %retval.0 = phi i32 [ %sub, %if.then95 ], [ 1, %if.then ], [ 0, %entry ], [ -1, %if.end ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i8* @rgn_print_insn(%struct.rtx_def* nocapture readonly %insn, i32 %aligned) #0 {
entry:
  %tobool = icmp eq i32 %aligned, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 0
  %rtint = bitcast %union.rtunion_def* %arrayidx to i32*
  %0 = load i32* %rtint, align 4, !tbaa !5
  %idxprom = sext i32 %0 to i64
  %1 = load %struct.varray_head_tag** @basic_block_for_insn, align 8, !tbaa !1
  %data = getelementptr inbounds %struct.varray_head_tag* %1, i64 0, i32 4
  %bb = bitcast %union.varray_data_tag* %data to [1 x %struct.basic_block_def*]*
  %arrayidx1 = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb, i64 0, i64 %idxprom
  %2 = load %struct.basic_block_def** %arrayidx1, align 8, !tbaa !1
  %index = getelementptr inbounds %struct.basic_block_def* %2, i64 0, i32 11
  %3 = load i32* %index, align 4, !tbaa !21
  %idxprom2 = sext i32 %3 to i64
  %4 = load i32** @block_to_bb, align 8, !tbaa !1
  %arrayidx3 = getelementptr inbounds i32* %4, i64 %idxprom2
  %5 = load i32* %arrayidx3, align 4, !tbaa !5
  %call = tail call i32 (i8*, i8*, ...)* @sprintf(i8* getelementptr inbounds ([80 x i8]* @rgn_print_insn.tmp, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8]* @.str40, i64 0, i64 0), i32 %5, i32 %0) #4
  br label %if.end40

if.else:                                          ; preds = %entry
  %6 = load i32* @current_nr_blocks, align 4, !tbaa !5
  %cmp = icmp sgt i32 %6, 1
  %arrayidx8 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 0
  %rtint9 = bitcast %union.rtunion_def* %arrayidx8 to i32*
  %7 = load i32* %rtint9, align 4, !tbaa !5
  br i1 %cmp, label %land.lhs.true, label %if.else35

land.lhs.true:                                    ; preds = %if.else
  %idxprom10 = sext i32 %7 to i64
  %8 = load %struct.varray_head_tag** @basic_block_for_insn, align 8, !tbaa !1
  %data11 = getelementptr inbounds %struct.varray_head_tag* %8, i64 0, i32 4
  %bb12 = bitcast %union.varray_data_tag* %data11 to [1 x %struct.basic_block_def*]*
  %arrayidx13 = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb12, i64 0, i64 %idxprom10
  %9 = load %struct.basic_block_def** %arrayidx13, align 8, !tbaa !1
  %index14 = getelementptr inbounds %struct.basic_block_def* %9, i64 0, i32 11
  %10 = load i32* %index14, align 4, !tbaa !21
  %idxprom16 = sext i32 %10 to i64
  %11 = load i32** @block_to_bb, align 8, !tbaa !1
  %arrayidx17 = getelementptr inbounds i32* %11, i64 %idxprom16
  %12 = load i32* %arrayidx17, align 4, !tbaa !5
  %13 = load i32* @target_bb, align 4, !tbaa !5
  %cmp18 = icmp eq i32 %12, %13
  br i1 %cmp18, label %if.else35, label %if.then19

if.then19:                                        ; preds = %land.lhs.true
  %call34 = tail call i32 (i8*, i8*, ...)* @sprintf(i8* getelementptr inbounds ([80 x i8]* @rgn_print_insn.tmp, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str41, i64 0, i64 0), i32 %7, i32 %12) #4
  br label %if.end40

if.else35:                                        ; preds = %if.else, %land.lhs.true
  %call39 = tail call i32 (i8*, i8*, ...)* @sprintf(i8* getelementptr inbounds ([80 x i8]* @rgn_print_insn.tmp, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8]* @.str42, i64 0, i64 0), i32 %7) #4
  br label %if.end40

if.end40:                                         ; preds = %if.then19, %if.else35, %if.then
  ret i8* getelementptr inbounds ([80 x i8]* @rgn_print_insn.tmp, i64 0, i64 0)
}

; Function Attrs: nounwind readonly uwtable
define internal i32 @contributes_to_priority(%struct.rtx_def* nocapture readonly %next, %struct.rtx_def* nocapture readonly %insn) #5 {
entry:
  %arrayidx = getelementptr inbounds %struct.rtx_def* %next, i64 0, i32 1, i64 0
  %rtint = bitcast %union.rtunion_def* %arrayidx to i32*
  %0 = load i32* %rtint, align 4, !tbaa !5
  %idxprom = sext i32 %0 to i64
  %1 = load %struct.varray_head_tag** @basic_block_for_insn, align 8, !tbaa !1
  %data = getelementptr inbounds %struct.varray_head_tag* %1, i64 0, i32 4
  %bb = bitcast %union.varray_data_tag* %data to [1 x %struct.basic_block_def*]*
  %arrayidx1 = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb, i64 0, i64 %idxprom
  %2 = load %struct.basic_block_def** %arrayidx1, align 8, !tbaa !1
  %index = getelementptr inbounds %struct.basic_block_def* %2, i64 0, i32 11
  %3 = load i32* %index, align 4, !tbaa !21
  %arrayidx3 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 0
  %rtint4 = bitcast %union.rtunion_def* %arrayidx3 to i32*
  %4 = load i32* %rtint4, align 4, !tbaa !5
  %idxprom5 = sext i32 %4 to i64
  %arrayidx8 = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb, i64 0, i64 %idxprom5
  %5 = load %struct.basic_block_def** %arrayidx8, align 8, !tbaa !1
  %index9 = getelementptr inbounds %struct.basic_block_def* %5, i64 0, i32 11
  %6 = load i32* %index9, align 4, !tbaa !21
  %cmp = icmp eq i32 %3, %6
  %conv = zext i1 %cmp to i32
  ret i32 %conv
}

; Function Attrs: nounwind readnone uwtable
define internal void @compute_jump_reg_dependencies(%struct.rtx_def* nocapture %insn, %struct.bitmap_head_def* nocapture %set) #6 {
entry:
  ret void
}

; Function Attrs: nounwind
declare i32 @sprintf(i8* nocapture, i8* nocapture readonly, ...) #1

declare i32 @insn_issue_delay(%struct.rtx_def*) #3

; Function Attrs: nounwind uwtable
define internal fastcc i32 @is_exception_free(%struct.rtx_def* nocapture readonly %insn, i32 %bb_src, i32 %bb_trg) #0 {
entry:
  %call = tail call fastcc i32 @haifa_classify_insn(%struct.rtx_def* %insn)
  switch i32 %call, label %sw.epilog [
    i32 0, label %return
    i32 5, label %sw.bb1
  ]

sw.bb1:                                           ; preds = %entry
  br label %return

sw.epilog:                                        ; preds = %entry
  %0 = load i32* @flag_schedule_speculative_load, align 4, !tbaa !5
  %tobool = icmp eq i32 %0, 0
  br i1 %tobool, label %return, label %if.end

if.end:                                           ; preds = %sw.epilog
  %arrayidx = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 0
  %rtint = bitcast %union.rtunion_def* %arrayidx to i32*
  %1 = load i32* %rtint, align 4, !tbaa !5
  %idxprom = sext i32 %1 to i64
  %2 = load %struct.haifa_insn_data** @h_i_d, align 8, !tbaa !1
  %is_load_insn = getelementptr inbounds %struct.haifa_insn_data* %2, i64 %idxprom, i32 11
  %bf.load = load i8* %is_load_insn, align 2
  %bf.set = or i8 %bf.load, 4
  store i8 %bf.set, i8* %is_load_insn, align 2
  switch i32 %call, label %if.end.sw.epilog17_crit_edge [
    i32 1, label %return
    i32 4, label %sw.bb4
    i32 2, label %sw.bb5
    i32 3, label %sw.bb10
  ]

if.end.sw.epilog17_crit_edge:                     ; preds = %if.end
  %.pre = load i32* @flag_schedule_speculative_load_dangerous, align 4, !tbaa !5
  br label %return

sw.bb4:                                           ; preds = %if.end
  br label %return

sw.bb5:                                           ; preds = %if.end
  %3 = load %struct.candidate** @candidate_table, align 8, !tbaa !1
  %idx.ext.i = sext i32 %bb_src to i64
  %nr_members.i = getelementptr inbounds %struct.candidate* %3, i64 %idx.ext.i, i32 3, i32 1
  %4 = load i32* %nr_members.i, align 4, !tbaa !14
  %cmp.i = icmp eq i32 %4, 1
  br i1 %cmp.i, label %if.end.i, label %sw.bb10

if.end.i:                                         ; preds = %sw.bb5
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 5
  %back_link.0.in69.i = bitcast %union.rtunion_def* %arrayidx.i to %struct.rtx_def**
  %back_link.070.i = load %struct.rtx_def** %back_link.0.in69.i, align 8
  %tobool71.i = icmp eq %struct.rtx_def* %back_link.070.i, null
  br i1 %tobool71.i, label %sw.bb10, label %for.body.lr.ph.i

for.body.lr.ph.i:                                 ; preds = %if.end.i
  %first_member.i = getelementptr inbounds %struct.candidate* %3, i64 %idx.ext.i, i32 3, i32 0
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc51.i, %for.body.lr.ph.i
  %back_link.072.i = phi %struct.rtx_def* [ %back_link.070.i, %for.body.lr.ph.i ], [ %back_link.0.i, %for.inc51.i ]
  %5 = getelementptr inbounds %struct.rtx_def* %back_link.072.i, i64 0, i32 0
  %bf.load.i = load i32* %5, align 8
  %bf.clear.i = and i32 %bf.load.i, 16711680
  %cmp4.i = icmp eq i32 %bf.clear.i, 0
  br i1 %cmp4.i, label %if.then5.i, label %for.inc51.i

if.then5.i:                                       ; preds = %for.body.i
  %fld1.i = getelementptr inbounds %struct.rtx_def* %back_link.072.i, i64 0, i32 1
  %rtx3.i = bitcast [1 x %union.rtunion_def]* %fld1.i to %struct.rtx_def**
  %6 = load %struct.rtx_def** %rtx3.i, align 8, !tbaa !1
  %arrayidx7.i = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1, i64 0
  %rtint.i = bitcast %union.rtunion_def* %arrayidx7.i to i32*
  %7 = load i32* %rtint.i, align 4, !tbaa !5
  %idxprom.i = sext i32 %7 to i64
  %8 = load %struct.haifa_insn_data** @h_i_d, align 8, !tbaa !1
  %depend.i = getelementptr inbounds %struct.haifa_insn_data* %8, i64 %idxprom.i, i32 0
  %fore_link.066.i = load %struct.rtx_def** %depend.i, align 8
  %tobool1067.i = icmp eq %struct.rtx_def* %fore_link.066.i, null
  br i1 %tobool1067.i, label %for.inc51.i, label %for.body11.i

for.body11.i:                                     ; preds = %if.then5.i, %for.inc.i
  %fore_link.068.i = phi %struct.rtx_def* [ %fore_link.0.i, %for.inc.i ], [ %fore_link.066.i, %if.then5.i ]
  %fld12.i = getelementptr inbounds %struct.rtx_def* %fore_link.068.i, i64 0, i32 1
  %rtx14.i = bitcast [1 x %union.rtunion_def]* %fld12.i to %struct.rtx_def**
  %9 = load %struct.rtx_def** %rtx14.i, align 8, !tbaa !1
  %10 = getelementptr inbounds %struct.rtx_def* %fore_link.068.i, i64 0, i32 0
  %bf.load15.i = load i32* %10, align 8
  %bf.clear17.i = and i32 %bf.load15.i, 16711680
  %cmp18.i = icmp eq i32 %bf.clear17.i, 0
  br i1 %cmp18.i, label %if.then19.i, label %for.inc.i

if.then19.i:                                      ; preds = %for.body11.i
  %call.i = tail call fastcc i32 @haifa_classify_insn(%struct.rtx_def* %9) #4
  %cmp20.i = icmp eq i32 %call.i, 2
  br i1 %cmp20.i, label %if.end22.i, label %for.inc.i

if.end22.i:                                       ; preds = %if.then19.i
  %arrayidx24.i = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 1, i64 0
  %rtint25.i = bitcast %union.rtunion_def* %arrayidx24.i to i32*
  %11 = load i32* %rtint25.i, align 4, !tbaa !5
  %idxprom26.i = sext i32 %11 to i64
  %12 = load %struct.varray_head_tag** @basic_block_for_insn, align 8, !tbaa !1
  %data.i = getelementptr inbounds %struct.varray_head_tag* %12, i64 0, i32 4
  %bb.i = bitcast %union.varray_data_tag* %data.i to [1 x %struct.basic_block_def*]*
  %arrayidx27.i = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb.i, i64 0, i64 %idxprom26.i
  %13 = load %struct.basic_block_def** %arrayidx27.i, align 8, !tbaa !1
  %index.i = getelementptr inbounds %struct.basic_block_def* %13, i64 0, i32 11
  %14 = load i32* %index.i, align 4, !tbaa !21
  %idxprom28.i = sext i32 %14 to i64
  %15 = load i32** @block_to_bb, align 8, !tbaa !1
  %arrayidx29.i = getelementptr inbounds i32* %15, i64 %idxprom28.i
  %16 = load i32* %arrayidx29.i, align 4, !tbaa !5
  %cmp30.i = icmp eq i32 %16, %bb_trg
  br i1 %cmp30.i, label %return, label %if.end32.i

if.end32.i:                                       ; preds = %if.end22.i
  %17 = load i32** %first_member.i, align 8, !tbaa !15
  %18 = load i32* %17, align 4, !tbaa !5
  %cmp43.i = icmp eq i32 %18, %14
  br i1 %cmp43.i, label %return, label %for.inc.i

for.inc.i:                                        ; preds = %if.end32.i, %if.then19.i, %for.body11.i
  %arrayidx48.i = getelementptr inbounds %struct.rtx_def* %fore_link.068.i, i64 0, i32 1, i64 1
  %rtx49.i = bitcast %union.rtunion_def* %arrayidx48.i to %struct.rtx_def**
  %fore_link.0.i = load %struct.rtx_def** %rtx49.i, align 8
  %tobool10.i = icmp eq %struct.rtx_def* %fore_link.0.i, null
  br i1 %tobool10.i, label %for.inc51.i, label %for.body11.i

for.inc51.i:                                      ; preds = %for.inc.i, %if.then5.i, %for.body.i
  %arrayidx53.i = getelementptr inbounds %struct.rtx_def* %back_link.072.i, i64 0, i32 1, i64 1
  %back_link.0.in.i = bitcast %union.rtunion_def* %arrayidx53.i to %struct.rtx_def**
  %back_link.0.i = load %struct.rtx_def** %back_link.0.in.i, align 8
  %tobool.i = icmp eq %struct.rtx_def* %back_link.0.i, null
  br i1 %tobool.i, label %sw.bb10, label %for.body.i

sw.bb10:                                          ; preds = %for.inc51.i, %if.end.i, %sw.bb5, %if.end
  %19 = load i32* @flag_schedule_speculative_load_dangerous, align 4, !tbaa !5
  %tobool11 = icmp eq i32 %19, 0
  br i1 %tobool11, label %return, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %sw.bb10
  %fld.i = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1
  %rtint.i24 = bitcast [1 x %union.rtunion_def]* %fld.i to i32*
  %20 = load i32* %rtint.i24, align 4, !tbaa !5
  %idxprom.i25 = sext i32 %20 to i64
  %21 = load %struct.haifa_insn_data** @h_i_d, align 8, !tbaa !1
  %fed_by_spec_load.i = getelementptr inbounds %struct.haifa_insn_data* %21, i64 %idxprom.i25, i32 11
  %bf.load.i26 = load i8* %fed_by_spec_load.i, align 2
  %bf.clear.i27 = and i8 %bf.load.i26, 2
  %tobool.i28 = icmp eq i8 %bf.clear.i27, 0
  br i1 %tobool.i28, label %if.end.i30, label %return

if.end.i30:                                       ; preds = %lor.lhs.false
  %arrayidx3.i = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 5
  %rtx.i = bitcast %union.rtunion_def* %arrayidx3.i to %struct.rtx_def**
  %22 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !1
  %cmp.i29 = icmp eq %struct.rtx_def* %22, null
  br i1 %cmp.i29, label %return, label %for.body.lr.ph.i.i.lr.ph

for.body.lr.ph.i.i.lr.ph:                         ; preds = %if.end.i30
  %23 = load %struct.varray_head_tag** @basic_block_for_insn, align 8, !tbaa !1
  %data.i.i = getelementptr inbounds %struct.varray_head_tag* %23, i64 0, i32 4
  %bb.i.i = bitcast %union.varray_data_tag* %data.i.i to [1 x %struct.basic_block_def*]*
  %24 = load i32** @block_to_bb, align 8, !tbaa !1
  %25 = load i32** @containing_rgn, align 8, !tbaa !1
  %26 = load i32* @current_blocks, align 4, !tbaa !5
  %add25.i.i = add nsw i32 %26, %bb_src
  %idxprom26.i.i = sext i32 %add25.i.i to i64
  %27 = load i32** @rgn_bb_table, align 8, !tbaa !1
  %arrayidx27.i.i = getelementptr inbounds i32* %27, i64 %idxprom26.i.i
  %tobool45.i.i = icmp eq i32 %bb_trg, 0
  %add47.i.i = add nsw i32 %26, %bb_trg
  %idxprom48.i.i = sext i32 %add47.i.i to i64
  %arrayidx49.i.i = getelementptr inbounds i32* %27, i64 %idxprom48.i.i
  %28 = load i32** @in_edges, align 8, !tbaa !1
  %29 = load i32** @edge_to_bit, align 8, !tbaa !1
  %30 = load %struct.simple_bitmap_def*** @ancestor_edges, align 8, !tbaa !1
  %idxprom123.i.i = sext i32 %bb_trg to i64
  %arrayidx124.i.i = getelementptr inbounds %struct.simple_bitmap_def** %30, i64 %idxprom123.i.i
  br label %for.body.lr.ph.i.i

for.body.lr.ph.i.i:                               ; preds = %for.body.lr.ph.i.i.lr.ph, %if.end151.i.tailrecurse.i_crit_edge.i
  %link.0187.i.i48 = phi %struct.rtx_def* [ %22, %for.body.lr.ph.i.i.lr.ph ], [ %link.0187.i.pre.i, %if.end151.i.tailrecurse.i_crit_edge.i ]
  br i1 %tobool45.i.i, label %for.body.i.i, label %for.body.us.i.i

for.body.us.i.i:                                  ; preds = %for.body.lr.ph.i.i, %for.inc.us.i.i
  %link.0189.us.i.i = phi %struct.rtx_def* [ %link.0.us.i.i, %for.inc.us.i.i ], [ %link.0187.i.i48, %for.body.lr.ph.i.i ]
  %fld1.us.i.i = getelementptr inbounds %struct.rtx_def* %link.0189.us.i.i, i64 0, i32 1
  %rtx3.us.i.i = bitcast [1 x %union.rtunion_def]* %fld1.us.i.i to %struct.rtx_def**
  %31 = load %struct.rtx_def** %rtx3.us.i.i, align 8, !tbaa !1
  %32 = getelementptr inbounds %struct.rtx_def* %link.0189.us.i.i, i64 0, i32 0
  %bf.load.us.i.i = load i32* %32, align 8
  %bf.clear.us.i.i = and i32 %bf.load.us.i.i, 16711680
  %cmp.us.i.i = icmp eq i32 %bf.clear.us.i.i, 0
  br i1 %cmp.us.i.i, label %lor.lhs.false.us.i.i, label %for.inc.us.i.i

lor.lhs.false.us.i.i:                             ; preds = %for.body.us.i.i
  %33 = getelementptr inbounds %struct.rtx_def* %31, i64 0, i32 0
  %bf.load4.us.i.i = load i32* %33, align 8
  %bf.clear5.us.i.i = and i32 %bf.load4.us.i.i, 65535
  %cmp6.us.i.i = icmp eq i32 %bf.clear5.us.i.i, 33
  br i1 %cmp6.us.i.i, label %for.inc.us.i.i, label %if.end.us.i.i

if.end.us.i.i:                                    ; preds = %lor.lhs.false.us.i.i
  %arrayidx8.us.i.i = getelementptr inbounds %struct.rtx_def* %31, i64 0, i32 1, i64 0
  %rtint.us.i.i = bitcast %union.rtunion_def* %arrayidx8.us.i.i to i32*
  %34 = load i32* %rtint.us.i.i, align 4, !tbaa !5
  %idxprom.us.i.i = sext i32 %34 to i64
  %arrayidx9.us.i.i = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb.i.i, i64 0, i64 %idxprom.us.i.i
  %35 = load %struct.basic_block_def** %arrayidx9.us.i.i, align 8, !tbaa !1
  %index.us.i.i = getelementptr inbounds %struct.basic_block_def* %35, i64 0, i32 11
  %36 = load i32* %index.us.i.i, align 4, !tbaa !21
  %idxprom10.us.i.i = sext i32 %36 to i64
  %arrayidx11.us.i.i = getelementptr inbounds i32* %24, i64 %idxprom10.us.i.i
  %37 = load i32* %arrayidx11.us.i.i, align 4, !tbaa !5
  %cmp12.us.i.i = icmp eq i32 %37, %bb_src
  br i1 %cmp12.us.i.i, label %for.inc.us.i.i, label %lor.lhs.false13.us.i.i

lor.lhs.false13.us.i.i:                           ; preds = %if.end.us.i.i
  %arrayidx24.us.i.i = getelementptr inbounds i32* %25, i64 %idxprom10.us.i.i
  %38 = load i32* %arrayidx24.us.i.i, align 4, !tbaa !5
  %39 = load i32* %arrayidx27.i.i, align 4, !tbaa !5
  %idxprom28.us.i.i = sext i32 %39 to i64
  %arrayidx29.us.i.i = getelementptr inbounds i32* %25, i64 %idxprom28.us.i.i
  %40 = load i32* %arrayidx29.us.i.i, align 4, !tbaa !5
  %cmp30.us.i.i = icmp eq i32 %38, %40
  br i1 %cmp30.us.i.i, label %lor.lhs.false31.us.i.i, label %for.inc.us.i.i

lor.lhs.false31.us.i.i:                           ; preds = %lor.lhs.false13.us.i.i
  %cmp43.us.i.i = icmp eq i32 %37, %bb_trg
  br i1 %cmp43.us.i.i, label %if.end151.i.i, label %lor.lhs.false46.us.i.i

lor.lhs.false46.us.i.i:                           ; preds = %lor.lhs.false31.us.i.i
  %41 = load i32* %arrayidx49.i.i, align 4, !tbaa !5
  %idxprom50.us.i.i = sext i32 %41 to i64
  %arrayidx51.us.i.i = getelementptr inbounds i32* %28, i64 %idxprom50.us.i.i
  %42 = load i32* %arrayidx51.us.i.i, align 4, !tbaa !5
  %idxprom52.us.i.i = sext i32 %42 to i64
  %arrayidx53.us.i.i = getelementptr inbounds i32* %29, i64 %idxprom52.us.i.i
  %43 = load i32* %arrayidx53.us.i.i, align 4, !tbaa !5
  %div.us.i.i = lshr i32 %43, 6
  %idxprom54.us.i.i = zext i32 %div.us.i.i to i64
  %idxprom66.us.i.i = sext i32 %37 to i64
  %arrayidx67.us.i.i = getelementptr inbounds %struct.simple_bitmap_def** %30, i64 %idxprom66.us.i.i
  %44 = load %struct.simple_bitmap_def** %arrayidx67.us.i.i, align 8, !tbaa !1
  %arrayidx68.us.i.i = getelementptr inbounds %struct.simple_bitmap_def* %44, i64 0, i32 3, i64 %idxprom54.us.i.i
  %45 = load i64* %arrayidx68.us.i.i, align 8, !tbaa !48
  %rem.us.i.i = and i32 %43, 63
  %sh_prom.us.i.i = zext i32 %rem.us.i.i to i64
  %46 = shl i64 1, %sh_prom.us.i.i
  %and181.us.i.i = and i64 %46, %45
  %tobool76.us.i.i = icmp ne i64 %and181.us.i.i, 0
  %tobool101.us.i.i = icmp eq i32 %37, 0
  %or.cond184.us.i.i = or i1 %tobool76.us.i.i, %tobool101.us.i.i
  br i1 %or.cond184.us.i.i, label %if.end151.i.i, label %lor.lhs.false102.us.i.i

lor.lhs.false102.us.i.i:                          ; preds = %lor.lhs.false46.us.i.i
  %add114.us.i.i = add nsw i32 %37, %26
  %idxprom115.us.i.i = sext i32 %add114.us.i.i to i64
  %arrayidx116.us.i.i = getelementptr inbounds i32* %27, i64 %idxprom115.us.i.i
  %47 = load i32* %arrayidx116.us.i.i, align 4, !tbaa !5
  %idxprom117.us.i.i = sext i32 %47 to i64
  %arrayidx118.us.i.i = getelementptr inbounds i32* %28, i64 %idxprom117.us.i.i
  %48 = load i32* %arrayidx118.us.i.i, align 4, !tbaa !5
  %idxprom119.us.i.i = sext i32 %48 to i64
  %arrayidx120.us.i.i = getelementptr inbounds i32* %29, i64 %idxprom119.us.i.i
  %49 = load i32* %arrayidx120.us.i.i, align 4, !tbaa !5
  %div121.us.i.i = lshr i32 %49, 6
  %idxprom122.us.i.i = zext i32 %div121.us.i.i to i64
  %50 = load %struct.simple_bitmap_def** %arrayidx124.i.i, align 8, !tbaa !1
  %arrayidx126.us.i.i = getelementptr inbounds %struct.simple_bitmap_def* %50, i64 0, i32 3, i64 %idxprom122.us.i.i
  %51 = load i64* %arrayidx126.us.i.i, align 8, !tbaa !48
  %rem145.us.i.i = and i32 %49, 63
  %sh_prom146.us.i.i = zext i32 %rem145.us.i.i to i64
  %52 = shl i64 1, %sh_prom146.us.i.i
  %and148182.us.i.i = and i64 %52, %51
  %tobool149.us.i.i = icmp eq i64 %and148182.us.i.i, 0
  br i1 %tobool149.us.i.i, label %for.inc.us.i.i, label %if.end151.i.i

for.inc.us.i.i:                                   ; preds = %lor.lhs.false102.us.i.i, %lor.lhs.false13.us.i.i, %if.end.us.i.i, %lor.lhs.false.us.i.i, %for.body.us.i.i
  %arrayidx157.us.i.i = getelementptr inbounds %struct.rtx_def* %link.0189.us.i.i, i64 0, i32 1, i64 1
  %link.0.in.us.i.i = bitcast %union.rtunion_def* %arrayidx157.us.i.i to %struct.rtx_def**
  %link.0.us.i.i = load %struct.rtx_def** %link.0.in.us.i.i, align 8
  %tobool.us.i.i = icmp eq %struct.rtx_def* %link.0.us.i.i, null
  br i1 %tobool.us.i.i, label %return, label %for.body.us.i.i

for.body.i.i:                                     ; preds = %for.body.lr.ph.i.i, %for.inc.i.i
  %link.0189.i.i = phi %struct.rtx_def* [ %link.0.i.i, %for.inc.i.i ], [ %link.0187.i.i48, %for.body.lr.ph.i.i ]
  %fld1.i.i = getelementptr inbounds %struct.rtx_def* %link.0189.i.i, i64 0, i32 1
  %rtx3.i.i = bitcast [1 x %union.rtunion_def]* %fld1.i.i to %struct.rtx_def**
  %53 = load %struct.rtx_def** %rtx3.i.i, align 8, !tbaa !1
  %54 = getelementptr inbounds %struct.rtx_def* %link.0189.i.i, i64 0, i32 0
  %bf.load.i.i = load i32* %54, align 8
  %bf.clear.i.i = and i32 %bf.load.i.i, 16711680
  %cmp.i.i = icmp eq i32 %bf.clear.i.i, 0
  br i1 %cmp.i.i, label %lor.lhs.false.i.i, label %for.inc.i.i

lor.lhs.false.i.i:                                ; preds = %for.body.i.i
  %55 = getelementptr inbounds %struct.rtx_def* %53, i64 0, i32 0
  %bf.load4.i.i = load i32* %55, align 8
  %bf.clear5.i.i = and i32 %bf.load4.i.i, 65535
  %cmp6.i.i = icmp eq i32 %bf.clear5.i.i, 33
  br i1 %cmp6.i.i, label %for.inc.i.i, label %if.end.i.i

if.end.i.i:                                       ; preds = %lor.lhs.false.i.i
  %arrayidx8.i.i = getelementptr inbounds %struct.rtx_def* %53, i64 0, i32 1, i64 0
  %rtint.i.i = bitcast %union.rtunion_def* %arrayidx8.i.i to i32*
  %56 = load i32* %rtint.i.i, align 4, !tbaa !5
  %idxprom.i.i = sext i32 %56 to i64
  %arrayidx9.i.i = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb.i.i, i64 0, i64 %idxprom.i.i
  %57 = load %struct.basic_block_def** %arrayidx9.i.i, align 8, !tbaa !1
  %index.i.i = getelementptr inbounds %struct.basic_block_def* %57, i64 0, i32 11
  %58 = load i32* %index.i.i, align 4, !tbaa !21
  %idxprom10.i.i = sext i32 %58 to i64
  %arrayidx11.i.i = getelementptr inbounds i32* %24, i64 %idxprom10.i.i
  %59 = load i32* %arrayidx11.i.i, align 4, !tbaa !5
  %cmp12.i.i = icmp eq i32 %59, %bb_src
  br i1 %cmp12.i.i, label %for.inc.i.i, label %lor.lhs.false13.i.i

lor.lhs.false13.i.i:                              ; preds = %if.end.i.i
  %arrayidx24.i.i = getelementptr inbounds i32* %25, i64 %idxprom10.i.i
  %60 = load i32* %arrayidx24.i.i, align 4, !tbaa !5
  %61 = load i32* %arrayidx27.i.i, align 4, !tbaa !5
  %idxprom28.i.i = sext i32 %61 to i64
  %arrayidx29.i.i = getelementptr inbounds i32* %25, i64 %idxprom28.i.i
  %62 = load i32* %arrayidx29.i.i, align 4, !tbaa !5
  %cmp30.i.i = icmp eq i32 %60, %62
  br i1 %cmp30.i.i, label %if.end151.i.i, label %for.inc.i.i

if.end151.i.i:                                    ; preds = %lor.lhs.false102.us.i.i, %lor.lhs.false46.us.i.i, %lor.lhs.false31.us.i.i, %lor.lhs.false13.i.i
  %.lcssa.i.i = phi %struct.rtx_def* [ %53, %lor.lhs.false13.i.i ], [ %31, %lor.lhs.false31.us.i.i ], [ %31, %lor.lhs.false46.us.i.i ], [ %31, %lor.lhs.false102.us.i.i ]
  %call.i.i = tail call fastcc i32 @find_conditional_protection(%struct.rtx_def* %.lcssa.i.i, i32 %bb_src) #4
  %tobool152.i.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool152.i.i, label %if.end151.i.tailrecurse.i_crit_edge.i, label %return

if.end151.i.tailrecurse.i_crit_edge.i:            ; preds = %if.end151.i.i
  %arrayidx.i.phi.trans.insert.i = getelementptr inbounds %struct.rtx_def* %.lcssa.i.i, i64 0, i32 1, i64 5
  %link.0.in186.i.phi.trans.insert.i = bitcast %union.rtunion_def* %arrayidx.i.phi.trans.insert.i to %struct.rtx_def**
  %link.0187.i.pre.i = load %struct.rtx_def** %link.0.in186.i.phi.trans.insert.i, align 8
  %tobool188.i.i = icmp eq %struct.rtx_def* %link.0187.i.pre.i, null
  br i1 %tobool188.i.i, label %return, label %for.body.lr.ph.i.i

for.inc.i.i:                                      ; preds = %lor.lhs.false13.i.i, %if.end.i.i, %lor.lhs.false.i.i, %for.body.i.i
  %arrayidx157.i.i = getelementptr inbounds %struct.rtx_def* %link.0189.i.i, i64 0, i32 1, i64 1
  %link.0.in.i.i = bitcast %union.rtunion_def* %arrayidx157.i.i to %struct.rtx_def**
  %link.0.i.i = load %struct.rtx_def** %link.0.in.i.i, align 8
  %tobool.i.i = icmp eq %struct.rtx_def* %link.0.i.i, null
  br i1 %tobool.i.i, label %return, label %for.body.i.i

return:                                           ; preds = %if.end32.i, %if.end22.i, %if.end151.i.i, %if.end151.i.tailrecurse.i_crit_edge.i, %for.inc.us.i.i, %for.inc.i.i, %if.end.sw.epilog17_crit_edge, %if.end.i30, %lor.lhs.false, %sw.bb10, %if.end, %sw.epilog, %entry, %sw.bb4, %sw.bb1
  %retval.0 = phi i32 [ 0, %sw.bb4 ], [ 0, %sw.bb1 ], [ 1, %entry ], [ 0, %sw.epilog ], [ 1, %if.end ], [ 0, %sw.bb10 ], [ 0, %lor.lhs.false ], [ 0, %if.end.i30 ], [ %.pre, %if.end.sw.epilog17_crit_edge ], [ %19, %for.inc.i.i ], [ %19, %for.inc.us.i.i ], [ 0, %if.end151.i.i ], [ %19, %if.end151.i.tailrecurse.i_crit_edge.i ], [ 1, %if.end22.i ], [ 1, %if.end32.i ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @haifa_classify_insn(%struct.rtx_def* nocapture readonly %insn) #0 {
entry:
  %arrayidx = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %0 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %1 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 0
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %if.end94 [
    i32 39, label %if.then
    i32 49, label %sw.bb65
    i32 47, label %sw.bb70
    i32 38, label %sw.bb91
    i32 52, label %sw.bb91
  ]

if.then:                                          ; preds = %entry
  %arrayidx2 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx2 to %struct.rtvec_def**
  %2 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !1
  %num_elem = getelementptr inbounds %struct.rtvec_def* %2, i64 0, i32 0
  %3 = load i32* %num_elem, align 4, !tbaa !85
  %4 = sext i32 %3 to i64
  br label %for.cond

for.cond:                                         ; preds = %sw.epilog, %if.then
  %indvars.iv = phi i64 [ %indvars.iv.next, %sw.epilog ], [ %4, %if.then ]
  %insn_class.0 = phi i32 [ %cond58, %sw.epilog ], [ 0, %if.then ]
  %tmp_class.0 = phi i32 [ %tmp_class.1, %sw.epilog ], [ 0, %if.then ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  %5 = trunc i64 %indvars.iv to i32
  %cmp3 = icmp sgt i32 %5, 0
  br i1 %cmp3, label %for.body, label %if.end94

for.body:                                         ; preds = %for.cond
  %6 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !1
  %arrayidx7 = getelementptr inbounds %struct.rtvec_def* %6, i64 0, i32 1, i64 %indvars.iv.next
  %7 = load %struct.rtx_def** %arrayidx7, align 8, !tbaa !1
  %8 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 0
  %bf.load8 = load i32* %8, align 8
  %bf.clear9 = and i32 %bf.load8, 65535
  switch i32 %bf.clear9, label %sw.epilog [
    i32 49, label %sw.bb
    i32 47, label %sw.bb19
    i32 38, label %sw.bb53
    i32 52, label %sw.bb53
  ]

sw.bb:                                            ; preds = %for.body
  %arrayidx17 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 1, i64 0
  %rtx18 = bitcast %union.rtunion_def* %arrayidx17 to %struct.rtx_def**
  %9 = load %struct.rtx_def** %rtx18, align 8, !tbaa !1
  %cmp.i = icmp eq %struct.rtx_def* %9, null
  br i1 %cmp.i, label %sw.epilog, label %if.end.i

if.end.i:                                         ; preds = %sw.bb
  %10 = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 0
  %bf.load.i = load i32* %10, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  %cmp2.i = icmp eq i32 %bf.clear.i, 66
  br i1 %cmp2.i, label %land.lhs.true.i, label %if.else.i

land.lhs.true.i:                                  ; preds = %if.end.i
  %call.i = tail call i32 @may_trap_p(%struct.rtx_def* %9) #4
  %tobool3.i = icmp eq i32 %call.i, 0
  br i1 %tobool3.i, label %if.else.i, label %sw.epilog

if.else.i:                                        ; preds = %land.lhs.true.i, %if.end.i
  br label %sw.epilog

sw.bb19:                                          ; preds = %for.body
  %arrayidx27 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 1, i64 0
  %rtx28 = bitcast %union.rtunion_def* %arrayidx27 to %struct.rtx_def**
  %11 = load %struct.rtx_def** %rtx28, align 8, !tbaa !1
  %cmp.i124 = icmp eq %struct.rtx_def* %11, null
  br i1 %cmp.i124, label %if.end, label %if.end.i128

if.end.i128:                                      ; preds = %sw.bb19
  %12 = getelementptr inbounds %struct.rtx_def* %11, i64 0, i32 0
  %bf.load.i125 = load i32* %12, align 8
  %bf.clear.i126 = and i32 %bf.load.i125, 65535
  %cmp2.i127 = icmp eq i32 %bf.clear.i126, 66
  br i1 %cmp2.i127, label %land.lhs.true.i131, label %if.end

land.lhs.true.i131:                               ; preds = %if.end.i128
  %call.i129 = tail call i32 @may_trap_p(%struct.rtx_def* %11) #4
  %tobool3.i130 = icmp eq i32 %call.i129, 0
  br i1 %tobool3.i130, label %land.lhs.true.i131.if.end_crit_edge, label %sw.epilog

land.lhs.true.i131.if.end_crit_edge:              ; preds = %land.lhs.true.i131
  %.pre = load %struct.rtvec_def** %rtvec, align 8, !tbaa !1
  %arrayidx37.phi.trans.insert = getelementptr inbounds %struct.rtvec_def* %.pre, i64 0, i32 1, i64 %indvars.iv.next
  %.pre165 = load %struct.rtx_def** %arrayidx37.phi.trans.insert, align 8, !tbaa !1
  br label %if.end

if.end:                                           ; preds = %land.lhs.true.i131.if.end_crit_edge, %if.end.i128, %sw.bb19
  %13 = phi %struct.rtx_def* [ %.pre165, %land.lhs.true.i131.if.end_crit_edge ], [ %7, %if.end.i128 ], [ %7, %sw.bb19 ]
  %arrayidx39 = getelementptr inbounds %struct.rtx_def* %13, i64 0, i32 1, i64 1
  %rtx40 = bitcast %union.rtunion_def* %arrayidx39 to %struct.rtx_def**
  %14 = load %struct.rtx_def** %rtx40, align 8, !tbaa !1
  %call41 = tail call fastcc i32 @may_trap_exp(%struct.rtx_def* %14, i32 0)
  %cmp42 = icmp slt i32 %call41, 0
  br i1 %cmp42, label %sw.epilog, label %cond.false

cond.false:                                       ; preds = %if.end
  %15 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !1
  %arrayidx48 = getelementptr inbounds %struct.rtvec_def* %15, i64 0, i32 1, i64 %indvars.iv.next
  %16 = load %struct.rtx_def** %arrayidx48, align 8, !tbaa !1
  %arrayidx50 = getelementptr inbounds %struct.rtx_def* %16, i64 0, i32 1, i64 1
  %rtx51 = bitcast %union.rtunion_def* %arrayidx50 to %struct.rtx_def**
  %17 = load %struct.rtx_def** %rtx51, align 8, !tbaa !1
  %call52 = tail call fastcc i32 @may_trap_exp(%struct.rtx_def* %17, i32 0)
  br label %sw.epilog

sw.bb53:                                          ; preds = %for.body, %for.body
  br label %sw.epilog

sw.epilog:                                        ; preds = %land.lhs.true.i131, %if.else.i, %land.lhs.true.i, %sw.bb, %cond.false, %if.end, %for.body, %sw.bb53
  %tmp_class.1 = phi i32 [ %tmp_class.0, %for.body ], [ 5, %sw.bb53 ], [ %call52, %cond.false ], [ 0, %if.end ], [ 0, %if.else.i ], [ 0, %sw.bb ], [ 5, %land.lhs.true.i ], [ 5, %land.lhs.true.i131 ]
  %cmp54 = icmp sgt i32 %insn_class.0, %tmp_class.1
  %cond58 = select i1 %cmp54, i32 %insn_class.0, i32 %tmp_class.1
  %18 = and i32 %cond58, -2
  %19 = icmp eq i32 %18, 4
  br i1 %19, label %if.end94, label %for.cond

sw.bb65:                                          ; preds = %entry
  %arrayidx67 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 0
  %rtx68 = bitcast %union.rtunion_def* %arrayidx67 to %struct.rtx_def**
  %20 = load %struct.rtx_def** %rtx68, align 8, !tbaa !1
  %cmp.i135 = icmp eq %struct.rtx_def* %20, null
  br i1 %cmp.i135, label %if.end94, label %if.end.i139

if.end.i139:                                      ; preds = %sw.bb65
  %21 = getelementptr inbounds %struct.rtx_def* %20, i64 0, i32 0
  %bf.load.i136 = load i32* %21, align 8
  %bf.clear.i137 = and i32 %bf.load.i136, 65535
  %cmp2.i138 = icmp eq i32 %bf.clear.i137, 66
  br i1 %cmp2.i138, label %land.lhs.true.i142, label %if.else.i143

land.lhs.true.i142:                               ; preds = %if.end.i139
  %call.i140 = tail call i32 @may_trap_p(%struct.rtx_def* %20) #4
  %tobool3.i141 = icmp eq i32 %call.i140, 0
  br i1 %tobool3.i141, label %if.else.i143, label %if.end94

if.else.i143:                                     ; preds = %land.lhs.true.i142, %if.end.i139
  br label %if.end94

sw.bb70:                                          ; preds = %entry
  %fld71 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1
  %rtx73 = bitcast [1 x %union.rtunion_def]* %fld71 to %struct.rtx_def**
  %22 = load %struct.rtx_def** %rtx73, align 8, !tbaa !1
  %cmp.i146 = icmp eq %struct.rtx_def* %22, null
  br i1 %cmp.i146, label %if.end77, label %if.end.i150

if.end.i150:                                      ; preds = %sw.bb70
  %23 = getelementptr inbounds %struct.rtx_def* %22, i64 0, i32 0
  %bf.load.i147 = load i32* %23, align 8
  %bf.clear.i148 = and i32 %bf.load.i147, 65535
  %cmp2.i149 = icmp eq i32 %bf.clear.i148, 66
  br i1 %cmp2.i149, label %land.lhs.true.i153, label %if.end77

land.lhs.true.i153:                               ; preds = %if.end.i150
  %call.i151 = tail call i32 @may_trap_p(%struct.rtx_def* %22) #4
  %tobool3.i152 = icmp eq i32 %call.i151, 0
  br i1 %tobool3.i152, label %if.end77, label %if.end94

if.end77:                                         ; preds = %if.end.i150, %land.lhs.true.i153, %sw.bb70
  %arrayidx79 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 1
  %rtx80 = bitcast %union.rtunion_def* %arrayidx79 to %struct.rtx_def**
  %24 = load %struct.rtx_def** %rtx80, align 8, !tbaa !1
  %call81 = tail call fastcc i32 @may_trap_exp(%struct.rtx_def* %24, i32 0)
  %cmp82 = icmp slt i32 %call81, 0
  br i1 %cmp82, label %if.end94, label %cond.false84

cond.false84:                                     ; preds = %if.end77
  %25 = load %struct.rtx_def** %rtx80, align 8, !tbaa !1
  %call88 = tail call fastcc i32 @may_trap_exp(%struct.rtx_def* %25, i32 0)
  br label %if.end94

sw.bb91:                                          ; preds = %entry, %entry
  br label %if.end94

if.end94:                                         ; preds = %for.cond, %sw.epilog, %land.lhs.true.i153, %if.else.i143, %land.lhs.true.i142, %sw.bb65, %sw.bb91, %entry, %if.end77, %cond.false84
  %insn_class.1 = phi i32 [ 5, %sw.bb91 ], [ 0, %entry ], [ %call88, %cond.false84 ], [ 0, %if.end77 ], [ 0, %if.else.i143 ], [ 0, %sw.bb65 ], [ 5, %land.lhs.true.i142 ], [ 5, %land.lhs.true.i153 ], [ %insn_class.0, %for.cond ], [ %cond58, %sw.epilog ]
  ret i32 %insn_class.1
}

; Function Attrs: nounwind readonly uwtable
define internal fastcc i32 @find_conditional_protection(%struct.rtx_def* nocapture readonly %insn, i32 %load_insn_bb) #5 {
entry:
  %arrayidx = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 0
  %rtint = bitcast %union.rtunion_def* %arrayidx to i32*
  %0 = load i32* %rtint, align 4, !tbaa !5
  %idxprom = sext i32 %0 to i64
  %1 = load %struct.haifa_insn_data** @h_i_d, align 8, !tbaa !1
  %depend = getelementptr inbounds %struct.haifa_insn_data* %1, i64 %idxprom, i32 0
  %link.0121 = load %struct.rtx_def** %depend, align 8
  %tobool122 = icmp eq %struct.rtx_def* %link.0121, null
  br i1 %tobool122, label %return, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %2 = load %struct.varray_head_tag** @basic_block_for_insn, align 8, !tbaa !1
  %data = getelementptr inbounds %struct.varray_head_tag* %2, i64 0, i32 4
  %bb = bitcast %union.varray_data_tag* %data to [1 x %struct.basic_block_def*]*
  %3 = load i32** @containing_rgn, align 8, !tbaa !1
  %4 = load i32* @current_blocks, align 4, !tbaa !5
  %add11 = add nsw i32 %4, %load_insn_bb
  %idxprom12 = sext i32 %add11 to i64
  %5 = load i32** @rgn_bb_table, align 8, !tbaa !1
  %arrayidx13 = getelementptr inbounds i32* %5, i64 %idxprom12
  %6 = load i32* %arrayidx13, align 4, !tbaa !5
  %idxprom14 = sext i32 %6 to i64
  %arrayidx15 = getelementptr inbounds i32* %3, i64 %idxprom14
  %7 = load i32* %arrayidx15, align 4, !tbaa !5
  %8 = load i32** @block_to_bb, align 8, !tbaa !1
  %9 = load i32** @in_edges, align 8, !tbaa !1
  %10 = load i32** @edge_to_bit, align 8, !tbaa !1
  %idxprom60 = sext i32 %load_insn_bb to i64
  %11 = load %struct.simple_bitmap_def*** @ancestor_edges, align 8, !tbaa !1
  %arrayidx61 = getelementptr inbounds %struct.simple_bitmap_def** %11, i64 %idxprom60
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %link.0123 = phi %struct.rtx_def* [ %link.0121, %for.body.lr.ph ], [ %link.0, %for.inc ]
  %fld2 = getelementptr inbounds %struct.rtx_def* %link.0123, i64 0, i32 1
  %rtx = bitcast [1 x %union.rtunion_def]* %fld2 to %struct.rtx_def**
  %12 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %arrayidx5 = getelementptr inbounds %struct.rtx_def* %12, i64 0, i32 1, i64 0
  %rtint6 = bitcast %union.rtunion_def* %arrayidx5 to i32*
  %13 = load i32* %rtint6, align 4, !tbaa !5
  %idxprom7 = sext i32 %13 to i64
  %arrayidx8 = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb, i64 0, i64 %idxprom7
  %14 = load %struct.basic_block_def** %arrayidx8, align 8, !tbaa !1
  %index = getelementptr inbounds %struct.basic_block_def* %14, i64 0, i32 11
  %15 = load i32* %index, align 4, !tbaa !21
  %idxprom9 = sext i32 %15 to i64
  %arrayidx10 = getelementptr inbounds i32* %3, i64 %idxprom9
  %16 = load i32* %arrayidx10, align 4, !tbaa !5
  %cmp = icmp eq i32 %16, %7
  br i1 %cmp, label %land.lhs.true, label %for.inc

land.lhs.true:                                    ; preds = %for.body
  %arrayidx26 = getelementptr inbounds i32* %8, i64 %idxprom9
  %17 = load i32* %arrayidx26, align 4, !tbaa !5
  %cmp27 = icmp eq i32 %17, %load_insn_bb
  %tobool39 = icmp eq i32 %17, 0
  %or.cond = or i1 %cmp27, %tobool39
  br i1 %or.cond, label %land.lhs.true82, label %lor.lhs.false40

lor.lhs.false40:                                  ; preds = %land.lhs.true
  %add52 = add nsw i32 %17, %4
  %idxprom53 = sext i32 %add52 to i64
  %arrayidx54 = getelementptr inbounds i32* %5, i64 %idxprom53
  %18 = load i32* %arrayidx54, align 4, !tbaa !5
  %idxprom55 = sext i32 %18 to i64
  %arrayidx56 = getelementptr inbounds i32* %9, i64 %idxprom55
  %19 = load i32* %arrayidx56, align 4, !tbaa !5
  %idxprom57 = sext i32 %19 to i64
  %arrayidx58 = getelementptr inbounds i32* %10, i64 %idxprom57
  %20 = load i32* %arrayidx58, align 4, !tbaa !5
  %div = lshr i32 %20, 6
  %idxprom59 = zext i32 %div to i64
  %21 = load %struct.simple_bitmap_def** %arrayidx61, align 8, !tbaa !1
  %arrayidx62 = getelementptr inbounds %struct.simple_bitmap_def* %21, i64 0, i32 3, i64 %idxprom59
  %22 = load i64* %arrayidx62, align 8, !tbaa !48
  %rem = and i32 %20, 63
  %sh_prom = zext i32 %rem to i64
  %23 = shl i64 1, %sh_prom
  %and120 = and i64 %22, %23
  %tobool81 = icmp eq i64 %and120, 0
  %brmerge = or i1 %tobool81, %cmp27
  br i1 %brmerge, label %for.inc, label %land.lhs.true95

land.lhs.true82:                                  ; preds = %land.lhs.true
  br i1 %cmp27, label %for.inc, label %land.lhs.true95

land.lhs.true95:                                  ; preds = %lor.lhs.false40, %land.lhs.true82
  %24 = getelementptr inbounds %struct.rtx_def* %link.0123, i64 0, i32 0
  %bf.load = load i32* %24, align 8
  %bf.clear = and i32 %bf.load, 16711680
  %cmp96 = icmp eq i32 %bf.clear, 0
  br i1 %cmp96, label %land.lhs.true97, label %for.inc

land.lhs.true97:                                  ; preds = %land.lhs.true95
  %25 = getelementptr inbounds %struct.rtx_def* %12, i64 0, i32 0
  %bf.load98 = load i32* %25, align 8
  %bf.clear99 = and i32 %bf.load98, 65535
  %cmp100 = icmp eq i32 %bf.clear99, 33
  br i1 %cmp100, label %return, label %lor.lhs.false101

lor.lhs.false101:                                 ; preds = %land.lhs.true97
  %call = tail call fastcc i32 @find_conditional_protection(%struct.rtx_def* %12, i32 %load_insn_bb)
  %tobool102 = icmp eq i32 %call, 0
  br i1 %tobool102, label %for.inc, label %return

for.inc:                                          ; preds = %lor.lhs.false40, %lor.lhs.false101, %land.lhs.true82, %for.body, %land.lhs.true95
  %arrayidx104 = getelementptr inbounds %struct.rtx_def* %link.0123, i64 0, i32 1, i64 1
  %rtx105 = bitcast %union.rtunion_def* %arrayidx104 to %struct.rtx_def**
  %link.0 = load %struct.rtx_def** %rtx105, align 8
  %tobool = icmp eq %struct.rtx_def* %link.0, null
  br i1 %tobool, label %return, label %for.body

return:                                           ; preds = %lor.lhs.false101, %land.lhs.true97, %for.inc, %entry
  %retval.0 = phi i32 [ 0, %entry ], [ 1, %lor.lhs.false101 ], [ 1, %land.lhs.true97 ], [ 0, %for.inc ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @may_trap_exp(%struct.rtx_def* %x, i32 %is_store) #0 {
entry:
  %cmp = icmp eq %struct.rtx_def* %x, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %tobool = icmp eq i32 %is_store, 0
  %cmp2 = icmp eq i32 %bf.clear, 66
  br i1 %tobool, label %if.end5, label %if.then1

if.then1:                                         ; preds = %if.end
  br i1 %cmp2, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %if.then1
  %call = tail call i32 @may_trap_p(%struct.rtx_def* %x) #4
  %tobool3 = icmp eq i32 %call, 0
  br i1 %tobool3, label %if.else, label %return

if.else:                                          ; preds = %land.lhs.true, %if.then1
  br label %return

if.end5:                                          ; preds = %if.end
  br i1 %cmp2, label %if.then7, label %if.else202

if.then7:                                         ; preds = %if.end5
  %bf.clear9 = and i32 %bf.load, 134217728
  %tobool10 = icmp eq i32 %bf.clear9, 0
  br i1 %tobool10, label %if.end12, label %return

if.end12:                                         ; preds = %if.then7
  %call13 = tail call i32 @may_trap_p(%struct.rtx_def* %x) #4
  %tobool14 = icmp eq i32 %call13, 0
  br i1 %tobool14, label %return, label %if.end16

if.end16:                                         ; preds = %if.end12
  %arrayidx = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %2 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 0
  %bf.load17 = load i32* %2, align 8
  %bf.clear18 = and i32 %bf.load17, 65535
  switch i32 %bf.clear18, label %if.end201 [
    i32 61, label %return
    i32 75, label %land.lhs.true40
    i32 76, label %land.lhs.true40
    i32 135, label %land.lhs.true40
  ]

land.lhs.true40:                                  ; preds = %if.end16, %if.end16, %if.end16
  %fld44 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1
  %rtx46 = bitcast [1 x %union.rtunion_def]* %fld44 to %struct.rtx_def**
  %3 = load %struct.rtx_def** %rtx46, align 8, !tbaa !1
  %4 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 0
  %bf.load47 = load i32* %4, align 8
  %bf.clear48 = and i32 %bf.load47, 65535
  switch i32 %bf.clear48, label %lor.lhs.false120 [
    i32 67, label %return
    i32 68, label %return
    i32 54, label %return
    i32 55, label %return
    i32 58, label %return
    i32 134, label %return
    i32 56, label %return
    i32 140, label %return
  ]

lor.lhs.false120:                                 ; preds = %land.lhs.true40
  %arrayidx125 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 1
  %rtx126 = bitcast %union.rtunion_def* %arrayidx125 to %struct.rtx_def**
  %5 = load %struct.rtx_def** %rtx126, align 8, !tbaa !1
  %6 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 0
  %bf.load127 = load i32* %6, align 8
  %bf.clear128 = and i32 %bf.load127, 65535
  switch i32 %bf.clear128, label %if.end201 [
    i32 67, label %return
    i32 68, label %return
    i32 54, label %return
    i32 55, label %return
    i32 58, label %return
    i32 134, label %return
    i32 56, label %return
    i32 140, label %return
  ]

if.end201:                                        ; preds = %lor.lhs.false120, %if.end16
  br label %return

if.else202:                                       ; preds = %if.end5
  %call203 = tail call i32 @may_trap_p(%struct.rtx_def* %x) #4
  %tobool204 = icmp eq i32 %call203, 0
  br i1 %tobool204, label %if.end206, label %return

if.end206:                                        ; preds = %if.else202
  %idxprom322 = zext i32 %bf.clear to i64
  %arrayidx207 = getelementptr inbounds [153 x i8*]* @rtx_format, i64 0, i64 %idxprom322
  %7 = load i8** %arrayidx207, align 8, !tbaa !1
  %arrayidx209 = getelementptr inbounds [153 x i8]* @rtx_length, i64 0, i64 %idxprom322
  %8 = load i8* %arrayidx209, align 1, !tbaa !18
  %9 = zext i8 %8 to i64
  br label %for.cond

for.cond:                                         ; preds = %if.end261, %if.end206
  %indvars.iv329 = phi i64 [ %indvars.iv.next330, %if.end261 ], [ %9, %if.end206 ]
  %insn_class.0 = phi i32 [ %insn_class.2, %if.end261 ], [ 0, %if.end206 ]
  %indvars.iv.next330 = add nsw i64 %indvars.iv329, -1
  %10 = trunc i64 %indvars.iv329 to i32
  %cmp210 = icmp sgt i32 %10, 0
  br i1 %cmp210, label %for.body, label %return

for.body:                                         ; preds = %for.cond
  %arrayidx213 = getelementptr inbounds i8* %7, i64 %indvars.iv.next330
  %11 = load i8* %arrayidx213, align 1, !tbaa !18
  switch i8 %11, label %if.end261 [
    i8 101, label %if.then217
    i8 69, label %for.cond232.preheader
  ]

for.cond232.preheader:                            ; preds = %for.body
  %arrayidx235 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 %indvars.iv.next330
  %rtvec = bitcast %union.rtunion_def* %arrayidx235 to %struct.rtvec_def**
  %12 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !1
  %num_elem323 = getelementptr inbounds %struct.rtvec_def* %12, i64 0, i32 0
  %13 = load i32* %num_elem323, align 4, !tbaa !85
  %cmp236324 = icmp sgt i32 %13, 0
  br i1 %cmp236324, label %for.body238, label %if.end261

if.then217:                                       ; preds = %for.body
  %arrayidx220 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 %indvars.iv.next330
  %rtx221 = bitcast %union.rtunion_def* %arrayidx220 to %struct.rtx_def**
  %14 = load %struct.rtx_def** %rtx221, align 8, !tbaa !1
  %call222 = tail call fastcc i32 @may_trap_exp(%struct.rtx_def* %14, i32 0)
  %cmp223 = icmp sgt i32 %insn_class.0, %call222
  %cond = select i1 %cmp223, i32 %insn_class.0, i32 %call222
  br label %if.end261

for.cond232:                                      ; preds = %for.body238
  %15 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !1
  %num_elem = getelementptr inbounds %struct.rtvec_def* %15, i64 0, i32 0
  %16 = load i32* %num_elem, align 4, !tbaa !85
  %17 = trunc i64 %indvars.iv.next to i32
  %cmp236 = icmp slt i32 %17, %16
  br i1 %cmp236, label %for.body238, label %if.end261

for.body238:                                      ; preds = %for.cond232.preheader, %for.cond232
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.cond232 ], [ 0, %for.cond232.preheader ]
  %18 = phi %struct.rtvec_def* [ %15, %for.cond232 ], [ %12, %for.cond232.preheader ]
  %insn_class.1325 = phi i32 [ %cond252, %for.cond232 ], [ %insn_class.0, %for.cond232.preheader ]
  %arrayidx245 = getelementptr inbounds %struct.rtvec_def* %18, i64 0, i32 1, i64 %indvars.iv
  %19 = load %struct.rtx_def** %arrayidx245, align 8, !tbaa !1
  %call246 = tail call fastcc i32 @may_trap_exp(%struct.rtx_def* %19, i32 0)
  %cmp247 = icmp sgt i32 %insn_class.1325, %call246
  %cond252 = select i1 %cmp247, i32 %insn_class.1325, i32 %call246
  %20 = and i32 %cond252, -2
  %21 = icmp eq i32 %20, 4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  br i1 %21, label %if.end261, label %for.cond232

if.end261:                                        ; preds = %for.cond232, %for.body238, %for.cond232.preheader, %for.body, %if.then217
  %insn_class.2 = phi i32 [ %cond, %if.then217 ], [ %insn_class.0, %for.body ], [ %insn_class.0, %for.cond232.preheader ], [ %cond252, %for.body238 ], [ %cond252, %for.cond232 ]
  %22 = and i32 %insn_class.2, -2
  %23 = icmp eq i32 %22, 4
  br i1 %23, label %return, label %for.cond

return:                                           ; preds = %for.cond, %if.end261, %if.else202, %if.end16, %land.lhs.true40, %land.lhs.true40, %land.lhs.true40, %land.lhs.true40, %land.lhs.true40, %land.lhs.true40, %land.lhs.true40, %land.lhs.true40, %lor.lhs.false120, %lor.lhs.false120, %lor.lhs.false120, %lor.lhs.false120, %lor.lhs.false120, %lor.lhs.false120, %lor.lhs.false120, %lor.lhs.false120, %if.end12, %if.then7, %land.lhs.true, %entry, %if.end201, %if.else
  %retval.0 = phi i32 [ 0, %if.else ], [ 3, %if.end201 ], [ 0, %entry ], [ 5, %land.lhs.true ], [ 4, %if.then7 ], [ 1, %if.end12 ], [ 2, %lor.lhs.false120 ], [ 2, %lor.lhs.false120 ], [ 2, %lor.lhs.false120 ], [ 2, %lor.lhs.false120 ], [ 2, %lor.lhs.false120 ], [ 2, %lor.lhs.false120 ], [ 2, %lor.lhs.false120 ], [ 2, %lor.lhs.false120 ], [ 2, %land.lhs.true40 ], [ 2, %land.lhs.true40 ], [ 2, %land.lhs.true40 ], [ 2, %land.lhs.true40 ], [ 2, %land.lhs.true40 ], [ 2, %land.lhs.true40 ], [ 2, %land.lhs.true40 ], [ 2, %land.lhs.true40 ], [ 2, %if.end16 ], [ 5, %if.else202 ], [ %insn_class.0, %for.cond ], [ %insn_class.2, %if.end261 ]
  ret i32 %retval.0
}

declare i32 @may_trap_p(%struct.rtx_def*) #3

; Function Attrs: nounwind uwtable
define internal fastcc i32 @check_live_1(i32 %src, %struct.rtx_def* nocapture readonly %x) #0 {
entry:
  %arrayidx = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %0 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %cmp = icmp eq %struct.rtx_def* %0, null
  br i1 %cmp, label %return, label %while.cond

while.cond:                                       ; preds = %entry, %while.body
  %reg.0 = phi %struct.rtx_def* [ %2, %while.body ], [ %0, %entry ]
  %1 = getelementptr inbounds %struct.rtx_def* %reg.0, i64 0, i32 0
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %return [
    i32 63, label %while.body
    i32 133, label %while.body
    i32 132, label %while.body
    i32 64, label %while.body
    i32 39, label %if.then18
    i32 61, label %if.end49
  ]

while.body:                                       ; preds = %while.cond, %while.cond, %while.cond, %while.cond
  %arrayidx13 = getelementptr inbounds %struct.rtx_def* %reg.0, i64 0, i32 1, i64 0
  %rtx14 = bitcast %union.rtunion_def* %arrayidx13 to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx14, align 8, !tbaa !1
  br label %while.cond

if.then18:                                        ; preds = %while.cond
  %arrayidx21 = getelementptr inbounds %struct.rtx_def* %reg.0, i64 0, i32 1, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx21 to %struct.rtvec_def**
  %3 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !1
  %num_elem = getelementptr inbounds %struct.rtvec_def* %3, i64 0, i32 0
  %4 = load i32* %num_elem, align 4, !tbaa !85
  %cmp22252 = icmp sgt i32 %4, 0
  br i1 %cmp22252, label %for.body.lr.ph, label %return

for.body.lr.ph:                                   ; preds = %if.then18
  %5 = sext i32 %4 to i64
  br label %for.body

for.body:                                         ; preds = %for.cond.backedge.for.body_crit_edge, %for.body.lr.ph
  %6 = phi %struct.rtvec_def* [ %3, %for.body.lr.ph ], [ %.pre, %for.cond.backedge.for.body_crit_edge ]
  %indvars.iv = phi i64 [ %5, %for.body.lr.ph ], [ %indvars.iv.next, %for.cond.backedge.for.body_crit_edge ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  %arrayidx26 = getelementptr inbounds %struct.rtvec_def* %6, i64 0, i32 1, i64 %indvars.iv.next
  %7 = load %struct.rtx_def** %arrayidx26, align 8, !tbaa !1
  %arrayidx28 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 1, i64 0
  %rtx29 = bitcast %union.rtunion_def* %arrayidx28 to %struct.rtx_def**
  %8 = load %struct.rtx_def** %rtx29, align 8, !tbaa !1
  %cmp30 = icmp eq %struct.rtx_def* %8, null
  br i1 %cmp30, label %for.cond.backedge, label %if.then31

if.then31:                                        ; preds = %for.body
  %call = tail call fastcc i32 @check_live_1(i32 %src, %struct.rtx_def* %8)
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %for.cond.backedge, label %return

for.cond.backedge:                                ; preds = %if.then31, %for.body
  %9 = trunc i64 %indvars.iv.next to i32
  %cmp22 = icmp sgt i32 %9, 0
  br i1 %cmp22, label %for.cond.backedge.for.body_crit_edge, label %return

for.cond.backedge.for.body_crit_edge:             ; preds = %for.cond.backedge
  %.pre = load %struct.rtvec_def** %rtvec, align 8, !tbaa !1
  br label %for.body

if.end49:                                         ; preds = %while.cond
  %arrayidx51 = getelementptr inbounds %struct.rtx_def* %reg.0, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx51 to i32*
  %10 = load i32* %rtuint, align 4, !tbaa !5
  %cmp52 = icmp slt i32 %10, 53
  br i1 %cmp52, label %land.lhs.true, label %for.cond162.preheader

for.cond162.preheader:                            ; preds = %if.end49
  %idxprom163 = sext i32 %src to i64
  %11 = load %struct.candidate** @candidate_table, align 8, !tbaa !1
  %nr_members166261 = getelementptr inbounds %struct.candidate* %11, i64 %idxprom163, i32 3, i32 1
  %12 = load i32* %nr_members166261, align 4, !tbaa !14
  %cmp167262 = icmp sgt i32 %12, 0
  br i1 %cmp167262, label %for.body169, label %return

land.lhs.true:                                    ; preds = %if.end49
  %idxprom53 = sext i32 %10 to i64
  %arrayidx54 = getelementptr inbounds [53 x i8]* @global_regs, i64 0, i64 %idxprom53
  %13 = load i8* %arrayidx54, align 1, !tbaa !18
  %tobool55 = icmp eq i8 %13, 0
  br i1 %tobool55, label %if.then59, label %return

if.then59:                                        ; preds = %land.lhs.true
  %14 = and i32 %10, -8
  %15 = icmp eq i32 %14, 8
  %.off = add i32 %10, -21
  %16 = icmp ult i32 %.off, 8
  %or.cond = or i1 %15, %16
  %.off233 = add i32 %10, -45
  %17 = icmp ult i32 %.off233, 8
  %or.cond239 = or i1 %or.cond, %17
  %.off234 = add i32 %10, -29
  %18 = icmp ult i32 %.off234, 8
  %or.cond241 = or i1 %or.cond239, %18
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear84 = and i32 %bf.lshr, 255
  br i1 %or.cond241, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then59
  %idxprom85236 = zext i32 %bf.clear84 to i64
  %arrayidx86 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom85236
  %19 = load i32* %arrayidx86, align 4, !tbaa !18
  %cmp87 = icmp eq i32 %19, 5
  br i1 %cmp87, label %for.cond140.preheader.lr.ph, label %lor.rhs89

lor.rhs89:                                        ; preds = %cond.true
  %cmp95 = icmp eq i32 %19, 6
  %phitmp = select i1 %cmp95, i32 2, i32 1
  br label %for.cond140.preheader.lr.ph

cond.false:                                       ; preds = %if.then59
  switch i32 %bf.clear84, label %while.cond135.preheader [
    i32 18, label %cond.true103
    i32 24, label %cond.true112
  ]

cond.true103:                                     ; preds = %cond.false
  %20 = load i32* @target_flags, align 4, !tbaa !5
  %and = lshr i32 %20, 25
  %21 = and i32 %and, 1
  %22 = xor i32 %21, 3
  br label %for.cond140.preheader.lr.ph

cond.true112:                                     ; preds = %cond.false
  %23 = load i32* @target_flags, align 4, !tbaa !5
  %and113 = lshr i32 %23, 24
  %24 = and i32 %and113, 2
  %25 = xor i32 %24, 6
  br label %for.cond140.preheader.lr.ph

while.cond135.preheader:                          ; preds = %cond.false
  %idxprom120235 = zext i32 %bf.clear84 to i64
  %arrayidx121 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom120235
  %26 = load i8* %arrayidx121, align 1, !tbaa !18
  %conv122 = zext i8 %26 to i32
  %27 = load i32* @target_flags, align 4, !tbaa !5
  %and123 = lshr i32 %27, 23
  %28 = and i32 %and123, 4
  %29 = add i32 %28, 4
  %add = add i32 %conv122, -1
  %sub126 = add i32 %add, %29
  %div = sdiv i32 %sub126, %29
  %cmp137259 = icmp sgt i32 %div, 0
  br i1 %cmp137259, label %for.cond140.preheader.lr.ph, label %return

for.cond140.preheader.lr.ph:                      ; preds = %cond.true, %lor.rhs89, %cond.true103, %cond.true112, %while.cond135.preheader
  %j.0.ph276 = phi i32 [ %div, %while.cond135.preheader ], [ %25, %cond.true112 ], [ %22, %cond.true103 ], [ %phitmp, %lor.rhs89 ], [ 2, %cond.true ]
  %idxprom141 = sext i32 %src to i64
  %.pre274 = load %struct.candidate** @candidate_table, align 8, !tbaa !1
  br label %for.cond140.preheader

while.cond135.loopexit:                           ; preds = %for.cond140, %for.cond140.preheader
  %30 = phi %struct.candidate* [ %31, %for.cond140.preheader ], [ %33, %for.cond140 ]
  %cmp137 = icmp sgt i32 %dec136260, 0
  br i1 %cmp137, label %for.cond140.preheader, label %return

for.cond140.preheader:                            ; preds = %for.cond140.preheader.lr.ph, %while.cond135.loopexit
  %31 = phi %struct.candidate* [ %.pre274, %for.cond140.preheader.lr.ph ], [ %30, %while.cond135.loopexit ]
  %dec136260.in = phi i32 [ %j.0.ph276, %for.cond140.preheader.lr.ph ], [ %dec136260, %while.cond135.loopexit ]
  %dec136260 = add nsw i32 %dec136260.in, -1
  %nr_members255 = getelementptr inbounds %struct.candidate* %31, i64 %idxprom141, i32 3, i32 1
  %32 = load i32* %nr_members255, align 4, !tbaa !14
  %cmp143256 = icmp sgt i32 %32, 0
  br i1 %cmp143256, label %for.body145.lr.ph, label %while.cond135.loopexit

for.body145.lr.ph:                                ; preds = %for.cond140.preheader
  %add153 = add nsw i32 %dec136260, %10
  br label %for.body145

for.cond140:                                      ; preds = %for.body145
  %33 = load %struct.candidate** @candidate_table, align 8, !tbaa !1
  %nr_members = getelementptr inbounds %struct.candidate* %33, i64 %idxprom141, i32 3, i32 1
  %34 = load i32* %nr_members, align 4, !tbaa !14
  %35 = trunc i64 %indvars.iv.next271 to i32
  %cmp143 = icmp slt i32 %35, %34
  br i1 %cmp143, label %for.body145, label %while.cond135.loopexit

for.body145:                                      ; preds = %for.body145.lr.ph, %for.cond140
  %indvars.iv270 = phi i64 [ 0, %for.body145.lr.ph ], [ %indvars.iv.next271, %for.cond140 ]
  %36 = phi %struct.candidate* [ %31, %for.body145.lr.ph ], [ %33, %for.cond140 ]
  %first_member = getelementptr inbounds %struct.candidate* %36, i64 %idxprom141, i32 3, i32 0
  %37 = load i32** %first_member, align 8, !tbaa !15
  %arrayidx150 = getelementptr inbounds i32* %37, i64 %indvars.iv270
  %38 = load i32* %arrayidx150, align 4, !tbaa !5
  %idxprom151 = sext i32 %38 to i64
  %39 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !1
  %data = getelementptr inbounds %struct.varray_head_tag* %39, i64 0, i32 4
  %bb = bitcast %union.varray_data_tag* %data to [1 x %struct.basic_block_def*]*
  %arrayidx152 = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb, i64 0, i64 %idxprom151
  %40 = load %struct.basic_block_def** %arrayidx152, align 8, !tbaa !1
  %global_live_at_start = getelementptr inbounds %struct.basic_block_def* %40, i64 0, i32 8
  %41 = load %struct.bitmap_head_def** %global_live_at_start, align 8, !tbaa !88
  %call154 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %41, i32 %add153) #4
  %tobool155 = icmp eq i32 %call154, 0
  %indvars.iv.next271 = add nuw nsw i64 %indvars.iv270, 1
  br i1 %tobool155, label %for.cond140, label %return

for.cond162:                                      ; preds = %for.body169
  %42 = load %struct.candidate** @candidate_table, align 8, !tbaa !1
  %nr_members166 = getelementptr inbounds %struct.candidate* %42, i64 %idxprom163, i32 3, i32 1
  %43 = load i32* %nr_members166, align 4, !tbaa !14
  %44 = trunc i64 %indvars.iv.next273 to i32
  %cmp167 = icmp slt i32 %44, %43
  br i1 %cmp167, label %for.body169, label %return

for.body169:                                      ; preds = %for.cond162.preheader, %for.cond162
  %indvars.iv272 = phi i64 [ %indvars.iv.next273, %for.cond162 ], [ 0, %for.cond162.preheader ]
  %45 = phi %struct.candidate* [ %42, %for.cond162 ], [ %11, %for.cond162.preheader ]
  %first_member175 = getelementptr inbounds %struct.candidate* %45, i64 %idxprom163, i32 3, i32 0
  %46 = load i32** %first_member175, align 8, !tbaa !15
  %arrayidx176 = getelementptr inbounds i32* %46, i64 %indvars.iv272
  %47 = load i32* %arrayidx176, align 4, !tbaa !5
  %idxprom177 = sext i32 %47 to i64
  %48 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !1
  %data178 = getelementptr inbounds %struct.varray_head_tag* %48, i64 0, i32 4
  %bb179 = bitcast %union.varray_data_tag* %data178 to [1 x %struct.basic_block_def*]*
  %arrayidx180 = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb179, i64 0, i64 %idxprom177
  %49 = load %struct.basic_block_def** %arrayidx180, align 8, !tbaa !1
  %global_live_at_start181 = getelementptr inbounds %struct.basic_block_def* %49, i64 0, i32 8
  %50 = load %struct.bitmap_head_def** %global_live_at_start181, align 8, !tbaa !88
  %call182 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %50, i32 %10) #4
  %tobool183 = icmp eq i32 %call182, 0
  %indvars.iv.next273 = add nuw nsw i64 %indvars.iv272, 1
  br i1 %tobool183, label %for.cond162, label %return

return:                                           ; preds = %while.cond, %for.body169, %for.cond162, %while.cond135.loopexit, %for.body145, %if.then31, %for.cond.backedge, %for.cond162.preheader, %while.cond135.preheader, %if.then18, %land.lhs.true, %entry
  %retval.0 = phi i32 [ 1, %entry ], [ 0, %land.lhs.true ], [ 0, %if.then18 ], [ 1, %while.cond135.preheader ], [ 1, %for.cond162.preheader ], [ 1, %if.then31 ], [ 0, %for.cond.backedge ], [ 0, %for.body145 ], [ 1, %while.cond135.loopexit ], [ 0, %for.body169 ], [ 1, %for.cond162 ], [ 1, %while.cond ]
  ret i32 %retval.0
}

declare i32 @bitmap_bit_p(%struct.bitmap_head_def*, i32) #3

declare %struct.rtx_def* @emit_note_after(i32, %struct.rtx_def*) #3

; Function Attrs: nounwind uwtable
define internal fastcc void @update_live_1(i32 %src, %struct.rtx_def* nocapture readonly %x) #0 {
entry:
  %arrayidx = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %0 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %cmp = icmp eq %struct.rtx_def* %0, null
  br i1 %cmp, label %if.end164, label %while.cond

while.cond:                                       ; preds = %entry, %while.body
  %reg.0 = phi %struct.rtx_def* [ %2, %while.body ], [ %0, %entry ]
  %1 = getelementptr inbounds %struct.rtx_def* %reg.0, i64 0, i32 0
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %if.end164 [
    i32 63, label %while.body
    i32 133, label %while.body
    i32 132, label %while.body
    i32 64, label %while.body
    i32 39, label %if.then18
    i32 61, label %if.end47
  ]

while.body:                                       ; preds = %while.cond, %while.cond, %while.cond, %while.cond
  %arrayidx13 = getelementptr inbounds %struct.rtx_def* %reg.0, i64 0, i32 1, i64 0
  %rtx14 = bitcast %union.rtunion_def* %arrayidx13 to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx14, align 8, !tbaa !1
  br label %while.cond

if.then18:                                        ; preds = %while.cond
  %arrayidx21 = getelementptr inbounds %struct.rtx_def* %reg.0, i64 0, i32 1, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx21 to %struct.rtvec_def**
  %3 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !1
  %num_elem = getelementptr inbounds %struct.rtvec_def* %3, i64 0, i32 0
  %4 = load i32* %num_elem, align 4, !tbaa !85
  %cmp22225 = icmp sgt i32 %4, 0
  br i1 %cmp22225, label %for.body.lr.ph, label %if.end164

for.body.lr.ph:                                   ; preds = %if.then18
  %5 = sext i32 %4 to i64
  br label %for.body

for.body:                                         ; preds = %for.cond.backedge.for.body_crit_edge, %for.body.lr.ph
  %6 = phi %struct.rtvec_def* [ %3, %for.body.lr.ph ], [ %.pre, %for.cond.backedge.for.body_crit_edge ]
  %indvars.iv = phi i64 [ %5, %for.body.lr.ph ], [ %indvars.iv.next, %for.cond.backedge.for.body_crit_edge ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  %arrayidx26 = getelementptr inbounds %struct.rtvec_def* %6, i64 0, i32 1, i64 %indvars.iv.next
  %7 = load %struct.rtx_def** %arrayidx26, align 8, !tbaa !1
  %arrayidx28 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 1, i64 0
  %rtx29 = bitcast %union.rtunion_def* %arrayidx28 to %struct.rtx_def**
  %8 = load %struct.rtx_def** %rtx29, align 8, !tbaa !1
  %cmp30 = icmp eq %struct.rtx_def* %8, null
  br i1 %cmp30, label %for.cond.backedge, label %if.then31

for.cond.backedge:                                ; preds = %for.body, %if.then31
  %9 = trunc i64 %indvars.iv.next to i32
  %cmp22 = icmp sgt i32 %9, 0
  br i1 %cmp22, label %for.cond.backedge.for.body_crit_edge, label %if.end164

for.cond.backedge.for.body_crit_edge:             ; preds = %for.cond.backedge
  %.pre = load %struct.rtvec_def** %rtvec, align 8, !tbaa !1
  br label %for.body

if.then31:                                        ; preds = %for.body
  tail call fastcc void @update_live_1(i32 %src, %struct.rtx_def* %8)
  br label %for.cond.backedge

if.end47:                                         ; preds = %while.cond
  %arrayidx49 = getelementptr inbounds %struct.rtx_def* %reg.0, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx49 to i32*
  %10 = load i32* %rtuint, align 4, !tbaa !5
  %cmp50 = icmp sgt i32 %10, 52
  br i1 %cmp50, label %for.cond140.preheader, label %lor.lhs.false51

for.cond140.preheader:                            ; preds = %if.end47
  %idxprom141 = sext i32 %src to i64
  %11 = load %struct.candidate** @candidate_table, align 8, !tbaa !1
  %nr_members144227 = getelementptr inbounds %struct.candidate* %11, i64 %idxprom141, i32 4, i32 1
  %12 = load i32* %nr_members144227, align 4, !tbaa !16
  %cmp145228 = icmp sgt i32 %12, 0
  br i1 %cmp145228, label %for.body147, label %if.end164

lor.lhs.false51:                                  ; preds = %if.end47
  %idxprom52 = sext i32 %10 to i64
  %arrayidx53 = getelementptr inbounds [53 x i8]* @global_regs, i64 0, i64 %idxprom52
  %13 = load i8* %arrayidx53, align 1, !tbaa !18
  %tobool = icmp eq i8 %13, 0
  br i1 %tobool, label %if.then56, label %if.end164

if.then56:                                        ; preds = %lor.lhs.false51
  %14 = and i32 %10, -8
  %15 = icmp eq i32 %14, 8
  %.off = add i32 %10, -21
  %16 = icmp ult i32 %.off, 8
  %or.cond = or i1 %15, %16
  %.off207 = add i32 %10, -45
  %17 = icmp ult i32 %.off207, 8
  %or.cond213 = or i1 %or.cond, %17
  %.off208 = add i32 %10, -29
  %18 = icmp ult i32 %.off208, 8
  %or.cond215 = or i1 %or.cond213, %18
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear72 = and i32 %bf.lshr, 255
  br i1 %or.cond215, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then56
  %idxprom73210 = zext i32 %bf.clear72 to i64
  %arrayidx74 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom73210
  %19 = load i32* %arrayidx74, align 4, !tbaa !18
  %cmp75 = icmp eq i32 %19, 5
  br i1 %cmp75, label %for.cond123.preheader.lr.ph, label %lor.rhs76

lor.rhs76:                                        ; preds = %cond.true
  %cmp82 = icmp eq i32 %19, 6
  %phitmp = select i1 %cmp82, i32 2, i32 1
  br label %for.cond123.preheader.lr.ph

cond.false:                                       ; preds = %if.then56
  switch i32 %bf.clear72, label %while.cond118.preheader [
    i32 18, label %cond.true88
    i32 24, label %cond.true96
  ]

cond.true88:                                      ; preds = %cond.false
  %20 = load i32* @target_flags, align 4, !tbaa !5
  %and = lshr i32 %20, 25
  %21 = and i32 %and, 1
  %22 = xor i32 %21, 3
  br label %for.cond123.preheader.lr.ph

cond.true96:                                      ; preds = %cond.false
  %23 = load i32* @target_flags, align 4, !tbaa !5
  %and97 = lshr i32 %23, 24
  %24 = and i32 %and97, 2
  %25 = xor i32 %24, 6
  br label %for.cond123.preheader.lr.ph

while.cond118.preheader:                          ; preds = %cond.false
  %idxprom104209 = zext i32 %bf.clear72 to i64
  %arrayidx105 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom104209
  %26 = load i8* %arrayidx105, align 1, !tbaa !18
  %conv = zext i8 %26 to i32
  %27 = load i32* @target_flags, align 4, !tbaa !5
  %and106 = lshr i32 %27, 23
  %28 = and i32 %and106, 4
  %29 = add i32 %28, 4
  %add = add i32 %conv, -1
  %sub109 = add i32 %add, %29
  %div = sdiv i32 %sub109, %29
  %cmp120234 = icmp sgt i32 %div, 0
  br i1 %cmp120234, label %for.cond123.preheader.lr.ph, label %if.end164

for.cond123.preheader.lr.ph:                      ; preds = %cond.true, %lor.rhs76, %cond.true88, %cond.true96, %while.cond118.preheader
  %j.0.ph246 = phi i32 [ %div, %while.cond118.preheader ], [ %25, %cond.true96 ], [ %22, %cond.true88 ], [ %phitmp, %lor.rhs76 ], [ 2, %cond.true ]
  %idxprom124 = sext i32 %src to i64
  %.pre244 = load %struct.candidate** @candidate_table, align 8, !tbaa !1
  br label %for.cond123.preheader

while.cond118.loopexit:                           ; preds = %for.body128, %for.cond123.preheader
  %30 = phi %struct.candidate* [ %31, %for.cond123.preheader ], [ %39, %for.body128 ]
  %cmp120 = icmp sgt i32 %dec119235, 0
  br i1 %cmp120, label %for.cond123.preheader, label %if.end164

for.cond123.preheader:                            ; preds = %for.cond123.preheader.lr.ph, %while.cond118.loopexit
  %31 = phi %struct.candidate* [ %.pre244, %for.cond123.preheader.lr.ph ], [ %30, %while.cond118.loopexit ]
  %dec119235.in = phi i32 [ %j.0.ph246, %for.cond123.preheader.lr.ph ], [ %dec119235, %while.cond118.loopexit ]
  %dec119235 = add nsw i32 %dec119235.in, -1
  %nr_members230 = getelementptr inbounds %struct.candidate* %31, i64 %idxprom124, i32 4, i32 1
  %32 = load i32* %nr_members230, align 4, !tbaa !16
  %cmp126231 = icmp sgt i32 %32, 0
  br i1 %cmp126231, label %for.body128.lr.ph, label %while.cond118.loopexit

for.body128.lr.ph:                                ; preds = %for.cond123.preheader
  %add136 = add nsw i32 %dec119235, %10
  br label %for.body128

for.body128:                                      ; preds = %for.body128.lr.ph, %for.body128
  %indvars.iv242 = phi i64 [ 0, %for.body128.lr.ph ], [ %indvars.iv.next243, %for.body128 ]
  %33 = phi %struct.candidate* [ %31, %for.body128.lr.ph ], [ %39, %for.body128 ]
  %first_member = getelementptr inbounds %struct.candidate* %33, i64 %idxprom124, i32 4, i32 0
  %34 = load i32** %first_member, align 8, !tbaa !17
  %arrayidx133 = getelementptr inbounds i32* %34, i64 %indvars.iv242
  %35 = load i32* %arrayidx133, align 4, !tbaa !5
  %idxprom134 = sext i32 %35 to i64
  %36 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !1
  %data = getelementptr inbounds %struct.varray_head_tag* %36, i64 0, i32 4
  %bb = bitcast %union.varray_data_tag* %data to [1 x %struct.basic_block_def*]*
  %arrayidx135 = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb, i64 0, i64 %idxprom134
  %37 = load %struct.basic_block_def** %arrayidx135, align 8, !tbaa !1
  %global_live_at_start = getelementptr inbounds %struct.basic_block_def* %37, i64 0, i32 8
  %38 = load %struct.bitmap_head_def** %global_live_at_start, align 8, !tbaa !88
  tail call void @bitmap_set_bit(%struct.bitmap_head_def* %38, i32 %add136) #4
  %indvars.iv.next243 = add nuw nsw i64 %indvars.iv242, 1
  %39 = load %struct.candidate** @candidate_table, align 8, !tbaa !1
  %nr_members = getelementptr inbounds %struct.candidate* %39, i64 %idxprom124, i32 4, i32 1
  %40 = load i32* %nr_members, align 4, !tbaa !16
  %41 = trunc i64 %indvars.iv.next243 to i32
  %cmp126 = icmp slt i32 %41, %40
  br i1 %cmp126, label %for.body128, label %while.cond118.loopexit

for.body147:                                      ; preds = %for.cond140.preheader, %for.body147
  %indvars.iv240 = phi i64 [ %indvars.iv.next241, %for.body147 ], [ 0, %for.cond140.preheader ]
  %42 = phi %struct.candidate* [ %48, %for.body147 ], [ %11, %for.cond140.preheader ]
  %first_member153 = getelementptr inbounds %struct.candidate* %42, i64 %idxprom141, i32 4, i32 0
  %43 = load i32** %first_member153, align 8, !tbaa !17
  %arrayidx154 = getelementptr inbounds i32* %43, i64 %indvars.iv240
  %44 = load i32* %arrayidx154, align 4, !tbaa !5
  %idxprom155 = sext i32 %44 to i64
  %45 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !1
  %data156 = getelementptr inbounds %struct.varray_head_tag* %45, i64 0, i32 4
  %bb157 = bitcast %union.varray_data_tag* %data156 to [1 x %struct.basic_block_def*]*
  %arrayidx158 = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb157, i64 0, i64 %idxprom155
  %46 = load %struct.basic_block_def** %arrayidx158, align 8, !tbaa !1
  %global_live_at_start159 = getelementptr inbounds %struct.basic_block_def* %46, i64 0, i32 8
  %47 = load %struct.bitmap_head_def** %global_live_at_start159, align 8, !tbaa !88
  tail call void @bitmap_set_bit(%struct.bitmap_head_def* %47, i32 %10) #4
  %indvars.iv.next241 = add nuw nsw i64 %indvars.iv240, 1
  %48 = load %struct.candidate** @candidate_table, align 8, !tbaa !1
  %nr_members144 = getelementptr inbounds %struct.candidate* %48, i64 %idxprom141, i32 4, i32 1
  %49 = load i32* %nr_members144, align 4, !tbaa !16
  %50 = trunc i64 %indvars.iv.next241 to i32
  %cmp145 = icmp slt i32 %50, %49
  br i1 %cmp145, label %for.body147, label %if.end164

if.end164:                                        ; preds = %while.cond, %while.cond118.loopexit, %for.body147, %for.cond.backedge, %while.cond118.preheader, %for.cond140.preheader, %if.then18, %lor.lhs.false51, %entry
  ret void
}

declare void @bitmap_set_bit(%struct.bitmap_head_def*, i32) #3

; Function Attrs: nounwind uwtable
define internal fastcc void @compute_trg_info(i32 %trg) #0 {
entry:
  %0 = load %struct.candidate** @candidate_table, align 8, !tbaa !1
  %idx.ext = sext i32 %trg to i64
  %is_valid = getelementptr inbounds %struct.candidate* %0, i64 %idx.ext, i32 0
  store i8 1, i8* %is_valid, align 1, !tbaa !10
  %is_speculative = getelementptr inbounds %struct.candidate* %0, i64 %idx.ext, i32 1
  store i8 0, i8* %is_speculative, align 1, !tbaa !13
  %src_prob = getelementptr inbounds %struct.candidate* %0, i64 %idx.ext, i32 2
  store i32 100, i32* %src_prob, align 4, !tbaa !87
  %i.0219 = add i32 %trg, 1
  %1 = load i32* @current_nr_blocks, align 4, !tbaa !5
  %cmp220 = icmp slt i32 %i.0219, %1
  br i1 %cmp220, label %for.body.lr.ph, label %for.end140

for.body.lr.ph:                                   ; preds = %entry
  %div = lshr i32 %trg, 6
  %idxprom = zext i32 %div to i64
  %rem = and i32 %trg, 63
  %sh_prom = zext i32 %rem to i64
  %2 = sext i32 %i.0219 to i64
  br label %for.body

for.body:                                         ; preds = %for.cond.backedge.for.body_crit_edge, %for.body.lr.ph
  %3 = phi %struct.candidate* [ %0, %for.body.lr.ph ], [ %.pre, %for.cond.backedge.for.body_crit_edge ]
  %indvars.iv233 = phi i64 [ %2, %for.body.lr.ph ], [ %indvars.iv.next234, %for.cond.backedge.for.body_crit_edge ]
  %i.0223 = phi i32 [ %i.0219, %for.body.lr.ph ], [ %i.0, %for.cond.backedge.for.body_crit_edge ]
  %4 = load %struct.simple_bitmap_def*** @dom, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds %struct.simple_bitmap_def** %4, i64 %indvars.iv233
  %5 = load %struct.simple_bitmap_def** %arrayidx, align 8, !tbaa !1
  %arrayidx4 = getelementptr inbounds %struct.simple_bitmap_def* %5, i64 0, i32 3, i64 %idxprom
  %6 = load i64* %arrayidx4, align 8, !tbaa !48
  %shr = lshr i64 %6, %sh_prom
  %shr.tr = trunc i64 %shr to i8
  %conv = and i8 %shr.tr, 1
  %is_valid5 = getelementptr inbounds %struct.candidate* %3, i64 %indvars.iv233, i32 0
  store i8 %conv, i8* %is_valid5, align 1, !tbaa !10
  %tobool = icmp eq i8 %conv, 0
  br i1 %tobool, label %for.body.if.else_crit_edge, label %if.end

for.body.if.else_crit_edge:                       ; preds = %for.body
  %src_prob136.pre = getelementptr inbounds %struct.candidate* %3, i64 %indvars.iv233, i32 2
  br label %if.else

if.end:                                           ; preds = %for.body
  %7 = load float** @prob, align 8, !tbaa !1
  %arrayidx8 = getelementptr inbounds float* %7, i64 %indvars.iv233
  %8 = load float* %arrayidx8, align 4, !tbaa !78
  %arrayidx10 = getelementptr inbounds float* %7, i64 %idx.ext
  %9 = load float* %arrayidx10, align 4, !tbaa !78
  %div11 = fdiv float %8, %9
  %conv12 = fpext float %div11 to double
  %mul = fmul double %conv12, 1.000000e+02
  %conv13 = fptosi double %mul to i32
  %src_prob14 = getelementptr inbounds %struct.candidate* %3, i64 %indvars.iv233, i32 2
  store i32 %conv13, i32* %src_prob14, align 4, !tbaa !87
  %cmp16 = icmp sgt i32 %conv13, 39
  %conv18 = zext i1 %cmp16 to i8
  store i8 %conv18, i8* %is_valid5, align 1, !tbaa !10
  br i1 %cmp16, label %if.then22, label %if.else

if.then22:                                        ; preds = %if.end
  %10 = load %struct.simple_bitmap_def*** @pot_split, align 8, !tbaa !1
  %arrayidx.i = getelementptr inbounds %struct.simple_bitmap_def** %10, i64 %indvars.iv233
  %11 = load %struct.simple_bitmap_def** %arrayidx.i, align 8, !tbaa !1
  %n_bits.i = getelementptr inbounds %struct.simple_bitmap_def* %11, i64 0, i32 0
  %12 = load i32* %n_bits.i, align 4, !tbaa !89
  %call.i = tail call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %12) #4
  %13 = load %struct.simple_bitmap_def*** @pot_split, align 8, !tbaa !1
  %arrayidx2.i = getelementptr inbounds %struct.simple_bitmap_def** %13, i64 %indvars.iv233
  %14 = load %struct.simple_bitmap_def** %arrayidx2.i, align 8, !tbaa !1
  tail call void @sbitmap_copy(%struct.simple_bitmap_def* %call.i, %struct.simple_bitmap_def* %14) #4
  %15 = load %struct.simple_bitmap_def*** @pot_split, align 8, !tbaa !1
  %arrayidx4.i = getelementptr inbounds %struct.simple_bitmap_def** %15, i64 %idx.ext
  %16 = load %struct.simple_bitmap_def** %arrayidx4.i, align 8, !tbaa !1
  tail call void @sbitmap_difference(%struct.simple_bitmap_def* %call.i, %struct.simple_bitmap_def* %call.i, %struct.simple_bitmap_def* %16) #4
  store i32 0, i32* @bitlst_table_last, align 4, !tbaa !5
  %17 = load i32** @bitlst_table, align 8, !tbaa !1
  %size.i.i = getelementptr inbounds %struct.simple_bitmap_def* %call.i, i64 0, i32 1
  %18 = load i32* %size.i.i, align 4, !tbaa !91
  %cmp36.i.i = icmp eq i32 %18, 0
  br i1 %cmp36.i.i, label %split_edges.exit, label %for.body.i.i

for.body.i.i:                                     ; preds = %if.then22, %for.inc19.i.i
  %el.sroa.4.8.load200 = phi i32 [ %el.sroa.4.8.load199, %for.inc19.i.i ], [ 0, %if.then22 ]
  %indvars.iv38.i.i = phi i64 [ %indvars.iv.next39.i.i, %for.inc19.i.i ], [ 0, %if.then22 ]
  %arrayidx2.i.i = getelementptr inbounds %struct.simple_bitmap_def* %call.i, i64 0, i32 3, i64 %indvars.iv38.i.i
  %19 = load i64* %arrayidx2.i.i, align 8, !tbaa !48
  %cmp3.i.i = icmp eq i64 %19, 0
  br i1 %cmp3.i.i, label %for.inc19.i.i, label %for.body6.preheader.i.i

for.body6.preheader.i.i:                          ; preds = %for.body.i.i
  %20 = trunc i64 %indvars.iv38.i.i to i32
  %mul.i.i = shl i32 %20, 6
  br label %for.body6.i.i

for.body6.i.i:                                    ; preds = %for.inc.i.i, %for.body6.preheader.i.i
  %el.sroa.4.8.load198 = phi i32 [ %el.sroa.4.8.load200, %for.body6.preheader.i.i ], [ %el.sroa.4.8.load197, %for.inc.i.i ]
  %indvars.iv.i.i = phi i64 [ 0, %for.body6.preheader.i.i ], [ %indvars.iv.next.i.i, %for.inc.i.i ]
  %word_.0.i.i = phi i64 [ %19, %for.body6.preheader.i.i ], [ %word_.1.i.i, %for.inc.i.i ]
  %shl.i.i = shl i64 1, %indvars.iv.i.i
  %and.i.i = and i64 %shl.i.i, %word_.0.i.i
  %cmp7.i.i = icmp eq i64 %and.i.i, 0
  br i1 %cmp7.i.i, label %for.inc.i.i, label %if.then8.i.i

if.then8.i.i:                                     ; preds = %for.body6.i.i
  %neg.i.i = xor i64 %shl.i.i, -1
  %and9.i.i = and i64 %word_.0.i.i, %neg.i.i
  %21 = trunc i64 %indvars.iv.i.i to i32
  %add.i.i = add i32 %21, %mul.i.i
  %22 = load i32* @bitlst_table_last, align 4, !tbaa !5
  %inc.i.i = add nsw i32 %22, 1
  store i32 %inc.i.i, i32* @bitlst_table_last, align 4, !tbaa !5
  %idxprom10.i.i = sext i32 %22 to i64
  %arrayidx11.i.i = getelementptr inbounds i32* %17, i64 %idxprom10.i.i
  store i32 %add.i.i, i32* %arrayidx11.i.i, align 4, !tbaa !5
  %inc13.i.i = add nsw i32 %el.sroa.4.8.load198, 1
  %cmp14.i.i = icmp eq i64 %and9.i.i, 0
  br i1 %cmp14.i.i, label %for.inc19.i.i, label %for.inc.i.i

for.inc.i.i:                                      ; preds = %if.then8.i.i, %for.body6.i.i
  %el.sroa.4.8.load197 = phi i32 [ %inc13.i.i, %if.then8.i.i ], [ %el.sroa.4.8.load198, %for.body6.i.i ]
  %word_.1.i.i = phi i64 [ %and9.i.i, %if.then8.i.i ], [ %word_.0.i.i, %for.body6.i.i ]
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %23 = trunc i64 %indvars.iv.next.i.i to i32
  %cmp5.old.i.i = icmp ult i32 %23, 64
  br i1 %cmp5.old.i.i, label %for.body6.i.i, label %for.inc19.i.i

for.inc19.i.i:                                    ; preds = %for.inc.i.i, %if.then8.i.i, %for.body.i.i
  %el.sroa.4.8.load199 = phi i32 [ %el.sroa.4.8.load200, %for.body.i.i ], [ %el.sroa.4.8.load197, %for.inc.i.i ], [ %inc13.i.i, %if.then8.i.i ]
  %indvars.iv.next39.i.i = add nuw nsw i64 %indvars.iv38.i.i, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next39.i.i to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %18
  br i1 %exitcond, label %split_edges.exit, label %for.body.i.i

split_edges.exit:                                 ; preds = %for.inc19.i.i, %if.then22
  %el.sroa.4.8.load201 = phi i32 [ 0, %if.then22 ], [ %el.sroa.4.8.load199, %for.inc19.i.i ]
  %24 = bitcast %struct.simple_bitmap_def* %call.i to i8*
  tail call void @free(i8* %24) #4
  %tobool23 = icmp ne i32 %el.sroa.4.8.load201, 0
  %conv24 = zext i1 %tobool23 to i8
  %is_speculative25 = getelementptr inbounds %struct.candidate* %3, i64 %indvars.iv233, i32 1
  store i8 %conv24, i8* %is_speculative25, align 1, !tbaa !13
  %tobool28 = xor i1 %tobool23, true
  %25 = load i32* @flag_schedule_speculative, align 4
  %tobool29 = icmp ne i32 %25, 0
  %or.cond = or i1 %tobool29, %tobool28
  br i1 %or.cond, label %if.end33, label %if.then30

if.then30:                                        ; preds = %split_edges.exit
  store i8 0, i8* %is_valid5, align 1, !tbaa !10
  br label %if.else

if.end33:                                         ; preds = %split_edges.exit
  %.pr.pr = load i8* %is_valid5, align 1, !tbaa !10
  %tobool35 = icmp eq i8 %.pr.pr, 0
  br i1 %tobool35, label %if.else, label %if.then36

if.then36:                                        ; preds = %if.end33
  %26 = load i32* @bblst_last, align 4, !tbaa !5
  %idxprom37 = sext i32 %26 to i64
  %27 = load i32** @bblst_table, align 8, !tbaa !1
  %arrayidx38 = getelementptr inbounds i32* %27, i64 %idxprom37
  %first_member = getelementptr inbounds %struct.candidate* %3, i64 %indvars.iv233, i32 3, i32 0
  store i32* %arrayidx38, i32** %first_member, align 8, !tbaa !15
  %nr_members41 = getelementptr inbounds %struct.candidate* %3, i64 %indvars.iv233, i32 3, i32 1
  store i32 %el.sroa.4.8.load201, i32* %nr_members41, align 4, !tbaa !14
  %cmp44212 = icmp sgt i32 %el.sroa.4.8.load201, 0
  br i1 %cmp44212, label %for.body46.lr.ph, label %if.then36.for.end_crit_edge

if.then36.for.end_crit_edge:                      ; preds = %if.then36
  %.pre237 = load i32* @bblst_last, align 4, !tbaa !5
  %.pre238 = load i32** @bblst_table, align 8, !tbaa !1
  br label %for.end

for.body46.lr.ph:                                 ; preds = %if.then36
  %28 = load i32** @rgn_edges, align 8, !tbaa !1
  %29 = load %struct.haifa_edge** @edge_table, align 8, !tbaa !1
  %30 = load i32** @bblst_table, align 8, !tbaa !1
  %.pre236 = load i32* @bblst_last, align 4, !tbaa !5
  br label %for.body46

for.body46:                                       ; preds = %for.body46, %for.body46.lr.ph
  %31 = phi i32 [ %.pre236, %for.body46.lr.ph ], [ %inc, %for.body46 ]
  %indvars.iv = phi i64 [ 0, %for.body46.lr.ph ], [ %indvars.iv.next, %for.body46 ]
  %arrayidx49 = getelementptr inbounds i32* %17, i64 %indvars.iv
  %32 = load i32* %arrayidx49, align 4, !tbaa !5
  %idxprom50 = sext i32 %32 to i64
  %arrayidx51 = getelementptr inbounds i32* %28, i64 %idxprom50
  %33 = load i32* %arrayidx51, align 4, !tbaa !5
  %idxprom52 = sext i32 %33 to i64
  %to_block = getelementptr inbounds %struct.haifa_edge* %29, i64 %idxprom52, i32 1
  %34 = load i32* %to_block, align 4, !tbaa !45
  %idxprom54 = sext i32 %31 to i64
  %arrayidx55 = getelementptr inbounds i32* %30, i64 %idxprom54
  store i32 %34, i32* %arrayidx55, align 4, !tbaa !5
  %35 = load i32* @bblst_last, align 4, !tbaa !5
  %inc = add nsw i32 %35, 1
  store i32 %inc, i32* @bblst_last, align 4, !tbaa !5
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %lftr.wideiv225 = trunc i64 %indvars.iv.next to i32
  %exitcond226 = icmp eq i32 %lftr.wideiv225, %el.sroa.4.8.load201
  br i1 %exitcond226, label %for.end, label %for.body46

for.end:                                          ; preds = %for.body46, %if.then36.for.end_crit_edge
  %36 = phi i32* [ %.pre238, %if.then36.for.end_crit_edge ], [ %30, %for.body46 ]
  %37 = phi i32 [ %.pre237, %if.then36.for.end_crit_edge ], [ %inc, %for.body46 ]
  %idxprom57 = sext i32 %37 to i64
  %arrayidx58 = getelementptr inbounds i32* %36, i64 %idxprom57
  %first_member59 = getelementptr inbounds %struct.candidate* %3, i64 %indvars.iv233, i32 4, i32 0
  store i32* %arrayidx58, i32** %first_member59, align 8, !tbaa !17
  %38 = load i32* @n_basic_blocks, align 4, !tbaa !5
  %conv60 = sext i32 %38 to i64
  %39 = alloca i8, i64 %conv60, align 1
  call void @llvm.memset.p0i8.i64(i8* %39, i8 0, i64 %conv60, i32 1, i1 false)
  br i1 %cmp44212, label %for.body66.lr.ph, label %for.end124

for.body66.lr.ph:                                 ; preds = %for.end
  %40 = load i32** @rgn_edges, align 8, !tbaa !1
  %41 = load %struct.haifa_edge** @edge_table, align 8, !tbaa !1
  %42 = load i32** @out_edges, align 8, !tbaa !1
  %43 = load i32** @bblst_table, align 8, !tbaa !1
  %44 = load i32** @edge_to_bit, align 8, !tbaa !1
  br label %for.body66.split.us

for.body66.split.us:                              ; preds = %for.body66.lr.ph, %for.inc122
  %indvars.iv229 = phi i64 [ 0, %for.body66.lr.ph ], [ %indvars.iv.next230, %for.inc122 ]
  %update_idx.0218 = phi i32 [ 0, %for.body66.lr.ph ], [ %update_idx.2.us, %for.inc122 ]
  %arrayidx69 = getelementptr inbounds i32* %17, i64 %indvars.iv229
  %45 = load i32* %arrayidx69, align 4, !tbaa !5
  %idxprom70 = sext i32 %45 to i64
  %arrayidx71 = getelementptr inbounds i32* %40, i64 %idxprom70
  %46 = load i32* %arrayidx71, align 4, !tbaa !5
  %idxprom72 = sext i32 %46 to i64
  %from_block = getelementptr inbounds %struct.haifa_edge* %41, i64 %idxprom72, i32 0
  %47 = load i32* %from_block, align 4, !tbaa !43
  %idxprom74 = sext i32 %47 to i64
  %arrayidx75 = getelementptr inbounds i32* %42, i64 %idxprom74
  %48 = load i32* %arrayidx75, align 4, !tbaa !5
  br label %do.body.us

do.body.us:                                       ; preds = %if.end117.us, %for.body66.split.us
  %update_idx.1.us = phi i32 [ %update_idx.0218, %for.body66.split.us ], [ %update_idx.2.us, %if.end117.us ]
  %nxt_edge.0.us = phi i32 [ %48, %for.body66.split.us ], [ %55, %if.end117.us ]
  %idxprom76.us = sext i32 %nxt_edge.0.us to i64
  %to_block78.us = getelementptr inbounds %struct.haifa_edge* %41, i64 %idxprom76.us, i32 1
  %49 = load i32* %to_block78.us, align 4, !tbaa !45
  %idxprom79.us = sext i32 %49 to i64
  %arrayidx80.us = getelementptr inbounds i8* %39, i64 %idxprom79.us
  %50 = load i8* %arrayidx80.us, align 1, !tbaa !18
  %tobool81.us = icmp eq i8 %50, 0
  br i1 %tobool81.us, label %for.body87.lr.ph.us, label %if.end117.us

for.cond83.us:                                    ; preds = %for.body87.us
  %51 = trunc i64 %indvars.iv.next228 to i32
  %cmp85.us = icmp slt i32 %51, %el.sroa.4.8.load201
  br i1 %cmp85.us, label %for.body87.us, label %if.then103.us

if.then103.us:                                    ; preds = %for.cond83.us
  %52 = load i32* @bblst_last, align 4, !tbaa !5
  %inc107.us = add nsw i32 %52, 1
  store i32 %inc107.us, i32* @bblst_last, align 4, !tbaa !5
  %idxprom108.us = sext i32 %52 to i64
  %arrayidx109.us = getelementptr inbounds i32* %43, i64 %idxprom108.us
  store i32 %49, i32* %arrayidx109.us, align 4, !tbaa !5
  %53 = load i32* %to_block78.us, align 4, !tbaa !45
  %idxprom113.us = sext i32 %53 to i64
  %arrayidx114.us = getelementptr inbounds i8* %39, i64 %idxprom113.us
  store i8 1, i8* %arrayidx114.us, align 1, !tbaa !18
  %inc115.us = add nsw i32 %update_idx.1.us, 1
  br label %if.end117.us

for.body87.us:                                    ; preds = %for.body87.lr.ph.us, %for.cond83.us
  %indvars.iv227 = phi i64 [ 0, %for.body87.lr.ph.us ], [ %indvars.iv.next228, %for.cond83.us ]
  %arrayidx92.us = getelementptr inbounds i32* %17, i64 %indvars.iv227
  %54 = load i32* %arrayidx92.us, align 4, !tbaa !5
  %cmp93.us = icmp eq i32 %56, %54
  %indvars.iv.next228 = add nuw nsw i64 %indvars.iv227, 1
  br i1 %cmp93.us, label %if.end117.us, label %for.cond83.us

if.end117.us:                                     ; preds = %for.body87.us, %if.then103.us, %do.body.us
  %update_idx.2.us = phi i32 [ %update_idx.1.us, %do.body.us ], [ %inc115.us, %if.then103.us ], [ %update_idx.1.us, %for.body87.us ]
  %next_out.us = getelementptr inbounds %struct.haifa_edge* %41, i64 %idxprom76.us, i32 3
  %55 = load i32* %next_out.us, align 4, !tbaa !46
  %cmp120.us = icmp eq i32 %48, %55
  br i1 %cmp120.us, label %for.inc122, label %do.body.us

for.body87.lr.ph.us:                              ; preds = %do.body.us
  %arrayidx89.us = getelementptr inbounds i32* %44, i64 %idxprom76.us
  %56 = load i32* %arrayidx89.us, align 4, !tbaa !5
  br label %for.body87.us

for.inc122:                                       ; preds = %if.end117.us
  %indvars.iv.next230 = add nuw nsw i64 %indvars.iv229, 1
  %lftr.wideiv231 = trunc i64 %indvars.iv.next230 to i32
  %exitcond232 = icmp eq i32 %lftr.wideiv231, %el.sroa.4.8.load201
  br i1 %exitcond232, label %for.end124, label %for.body66.split.us

for.end124:                                       ; preds = %for.inc122, %for.end
  %update_idx.0.lcssa = phi i32 [ 0, %for.end ], [ %update_idx.2.us, %for.inc122 ]
  %nr_members126 = getelementptr inbounds %struct.candidate* %3, i64 %indvars.iv233, i32 4, i32 1
  store i32 %update_idx.0.lcssa, i32* %nr_members126, align 4, !tbaa !16
  %57 = load i32* @bblst_last, align 4, !tbaa !5
  %58 = load i32* @bblst_size, align 4, !tbaa !5
  %cmp127 = icmp sgt i32 %57, %58
  br i1 %cmp127, label %if.then129, label %for.cond.backedge

if.then129:                                       ; preds = %for.end124
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str3, i64 0, i64 0), i32 1229, i8* getelementptr inbounds ([17 x i8]* @__FUNCTION__.compute_trg_info, i64 0, i64 0)) #7
  unreachable

if.else:                                          ; preds = %for.body.if.else_crit_edge, %if.end, %if.then30, %if.end33
  %src_prob136.pre-phi = phi i32* [ %src_prob136.pre, %for.body.if.else_crit_edge ], [ %src_prob14, %if.end ], [ %src_prob14, %if.then30 ], [ %src_prob14, %if.end33 ]
  %nr_members132 = getelementptr inbounds %struct.candidate* %3, i64 %indvars.iv233, i32 4, i32 1
  store i32 0, i32* %nr_members132, align 4, !tbaa !16
  %nr_members134 = getelementptr inbounds %struct.candidate* %3, i64 %indvars.iv233, i32 3, i32 1
  store i32 0, i32* %nr_members134, align 4, !tbaa !14
  %is_speculative135 = getelementptr inbounds %struct.candidate* %3, i64 %indvars.iv233, i32 1
  store i8 0, i8* %is_speculative135, align 1, !tbaa !13
  store i32 0, i32* %src_prob136.pre-phi, align 4, !tbaa !87
  br label %for.cond.backedge

for.cond.backedge:                                ; preds = %if.else, %for.end124
  %i.0 = add nsw i32 %i.0223, 1
  %59 = load i32* @current_nr_blocks, align 4, !tbaa !5
  %cmp = icmp slt i32 %i.0, %59
  br i1 %cmp, label %for.cond.backedge.for.body_crit_edge, label %for.end140

for.cond.backedge.for.body_crit_edge:             ; preds = %for.cond.backedge
  %indvars.iv.next234 = add nsw i64 %indvars.iv233, 1
  %.pre = load %struct.candidate** @candidate_table, align 8, !tbaa !1
  br label %for.body

for.end140:                                       ; preds = %for.cond.backedge, %entry
  ret void
}

declare void @ready_add(%struct.ready_list*, %struct.rtx_def*) #3

declare %struct.rtx_def* @next_nonnote_insn(%struct.rtx_def*) #3

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #4

declare void @sbitmap_copy(%struct.simple_bitmap_def*, %struct.simple_bitmap_def*) #3

declare %struct.edge_list* @create_edge_list() #3

declare void @calculate_dominance_info(i32*, %struct.simple_bitmap_def**, i32) #3

declare void @free_edge_list(%struct.edge_list*) #3

declare i32 @count_or_remove_death_notes(%struct.simple_bitmap_def*, i32) #3

declare noalias i8* @xcalloc(i64, i64) #3

declare zeroext i1 @current_function_has_exception_handlers() #3

declare %struct.rtx_def* @find_reg_note(%struct.rtx_def*, i32, %struct.rtx_def*) #3

; Function Attrs: nounwind
declare i64 @fwrite(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) #4

; Function Attrs: nounwind
declare i32 @fputc(i32, %struct._IO_FILE* nocapture) #4

attributes #0 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { nounwind readonly uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind }

!llvm.ident = !{!0}

!0 = metadata !{metadata !"clang version 3.5 (trunk)"}
!1 = metadata !{metadata !2, metadata !2, i64 0}
!2 = metadata !{metadata !"any pointer", metadata !3, i64 0}
!3 = metadata !{metadata !"omnipotent char", metadata !4, i64 0}
!4 = metadata !{metadata !"Simple C/C++ TBAA"}
!5 = metadata !{metadata !6, metadata !6, i64 0}
!6 = metadata !{metadata !"int", metadata !3, i64 0}
!7 = metadata !{metadata !8, metadata !6, i64 0}
!8 = metadata !{metadata !"", metadata !6, i64 0, metadata !6, i64 4}
!9 = metadata !{metadata !8, metadata !6, i64 4}
!10 = metadata !{metadata !11, metadata !3, i64 0}
!11 = metadata !{metadata !"", metadata !3, i64 0, metadata !3, i64 1, metadata !6, i64 4, metadata !12, i64 8, metadata !12, i64 24}
!12 = metadata !{metadata !"", metadata !2, i64 0, metadata !6, i64 8}
!13 = metadata !{metadata !11, metadata !3, i64 1}
!14 = metadata !{metadata !11, metadata !6, i64 16}
!15 = metadata !{metadata !11, metadata !2, i64 8}
!16 = metadata !{metadata !11, metadata !6, i64 32}
!17 = metadata !{metadata !11, metadata !2, i64 24}
!18 = metadata !{metadata !3, metadata !3, i64 0}
!19 = metadata !{metadata !20, metadata !2, i64 56}
!20 = metadata !{metadata !"function_unit_desc", metadata !2, i64 0, metadata !6, i64 8, metadata !6, i64 12, metadata !6, i64 16, metadata !6, i64 20, metadata !6, i64 24, metadata !2, i64 32, metadata !2, i64 40, metadata !6, i64 48, metadata !2, i64 56, metadata !2, i64 64}
!21 = metadata !{metadata !22, metadata !6, i64 88}
!22 = metadata !{metadata !"basic_block_def", metadata !2, i64 0, metadata !2, i64 8, metadata !2, i64 16, metadata !2, i64 24, metadata !2, i64 32, metadata !2, i64 40, metadata !2, i64 48, metadata !2, i64 56, metadata !2, i64 64, metadata !2, i64 72, metadata !2, i64 80, metadata !6, i64 88, metadata !6, i64 92, metadata !23, i64 96, metadata !6, i64 104, metadata !6, i64 108}
!23 = metadata !{metadata !"long long", metadata !3, i64 0}
!24 = metadata !{metadata !25, metadata !6, i64 24}
!25 = metadata !{metadata !"haifa_insn_data", metadata !2, i64 0, metadata !2, i64 8, metadata !6, i64 16, metadata !6, i64 20, metadata !6, i64 24, metadata !6, i64 28, metadata !6, i64 32, metadata !6, i64 36, metadata !26, i64 40, metadata !26, i64 42, metadata !26, i64 44, metadata !6, i64 46, metadata !6, i64 46, metadata !6, i64 46, metadata !6, i64 46}
!26 = metadata !{metadata !"short", metadata !3, i64 0}
!27 = metadata !{metadata !25, metadata !6, i64 20}
!28 = metadata !{metadata !29, metadata !2, i64 176}
!29 = metadata !{metadata !"function", metadata !2, i64 0, metadata !2, i64 8, metadata !2, i64 16, metadata !2, i64 24, metadata !2, i64 32, metadata !2, i64 40, metadata !2, i64 48, metadata !2, i64 56, metadata !6, i64 64, metadata !6, i64 68, metadata !6, i64 72, metadata !6, i64 76, metadata !2, i64 80, metadata !30, i64 88, metadata !2, i64 120, metadata !2, i64 128, metadata !2, i64 136, metadata !2, i64 144, metadata !6, i64 152, metadata !2, i64 160, metadata !2, i64 168, metadata !2, i64 176, metadata !2, i64 184, metadata !2, i64 192, metadata !2, i64 200, metadata !2, i64 208, metadata !2, i64 216, metadata !2, i64 224, metadata !2, i64 232, metadata !2, i64 240, metadata !2, i64 248, metadata !2, i64 256, metadata !23, i64 264, metadata !2, i64 272, metadata !2, i64 280, metadata !2, i64 288, metadata !2, i64 296, metadata !6, i64 304, metadata !2, i64 312, metadata !2, i64 320, metadata !6, i64 328, metadata !6, i64 332, metadata !6, i64 336, metadata !2, i64 344, metadata !6, i64 352, metadata !6, i64 356, metadata !2, i64 360, metadata !2, i64 368, metadata !2, i64 376, metadata !6, i64 384, metadata !6, i64 388, metadata !2, i64 392, metadata !6, i64 400, metadata !6, i64 404, metadata !2, i64 408, metadata !2, i64 416, metadata !6, i64 424, metadata !6, i64 424, metadata !6, i64 424, metadata !6, i64 424, metadata !6, i64 424, metadata !6, i64 424, metadata !6, i64 424, metadata !6, i64 424, metadata !6, i64 425, metadata !6, i64 425, metadata !6, i64 425, metadata !6, i64 425, metadata !6, i64 425, metadata !6, i64 425, metadata !6, i64 425, metadata !6, i64 425, metadata !6, i64 426, metadata !6, i64 426, metadata !6, i64 426, metadata !6, i64 426, metadata !6, i64 426, metadata !6, i64 426, metadata !6, i64 426, metadata !6, i64 426}
!30 = metadata !{metadata !"ix86_args", metadata !6, i64 0, metadata !6, i64 4, metadata !6, i64 8, metadata !6, i64 12, metadata !6, i64 16, metadata !6, i64 20, metadata !6, i64 24}
!31 = metadata !{metadata !29, metadata !2, i64 16}
!32 = metadata !{metadata !33, metadata !2, i64 32}
!33 = metadata !{metadata !"expr_status", metadata !6, i64 0, metadata !6, i64 4, metadata !6, i64 8, metadata !2, i64 16, metadata !2, i64 24, metadata !2, i64 32, metadata !2, i64 40}
!34 = metadata !{metadata !22, metadata !2, i64 8}
!35 = metadata !{metadata !36, metadata !6, i64 4}
!36 = metadata !{metadata !"edge_list", metadata !6, i64 0, metadata !6, i64 4, metadata !2, i64 8}
!37 = metadata !{metadata !22, metadata !2, i64 32}
!38 = metadata !{metadata !39, metadata !2, i64 16}
!39 = metadata !{metadata !"edge_def", metadata !2, i64 0, metadata !2, i64 8, metadata !2, i64 16, metadata !2, i64 24, metadata !2, i64 32, metadata !2, i64 40, metadata !6, i64 48, metadata !6, i64 52, metadata !23, i64 56}
!40 = metadata !{metadata !39, metadata !2, i64 0}
!41 = metadata !{metadata !36, metadata !2, i64 8}
!42 = metadata !{metadata !39, metadata !2, i64 24}
!43 = metadata !{metadata !44, metadata !6, i64 0}
!44 = metadata !{metadata !"", metadata !6, i64 0, metadata !6, i64 4, metadata !6, i64 8, metadata !6, i64 12}
!45 = metadata !{metadata !44, metadata !6, i64 4}
!46 = metadata !{metadata !44, metadata !6, i64 12}
!47 = metadata !{metadata !44, metadata !6, i64 8}
!48 = metadata !{metadata !23, metadata !23, i64 0}
!49 = metadata !{metadata !25, metadata !6, i64 16}
!50 = metadata !{metadata !22, metadata !2, i64 0}
!51 = metadata !{metadata !22, metadata !2, i64 40}
!52 = metadata !{metadata !39, metadata !2, i64 8}
!53 = metadata !{i64 0, i64 8, metadata !1, i64 8, i64 8, metadata !1, i64 16, i64 8, metadata !1, i64 24, i64 8, metadata !1, i64 32, i64 4, metadata !5, i64 36, i64 4, metadata !5, i64 40, i64 8, metadata !1, i64 48, i64 8, metadata !1, i64 56, i64 8, metadata !1, i64 64, i64 1, metadata !54, i64 68, i64 4, metadata !5, i64 72, i64 8, metadata !1, i64 80, i64 8, metadata !1, i64 88, i64 8, metadata !1, i64 96, i64 4, metadata !5}
!54 = metadata !{metadata !55, metadata !55, i64 0}
!55 = metadata !{metadata !"_Bool", metadata !3, i64 0}
!56 = metadata !{i8 0, i8 2}
!57 = metadata !{metadata !25, metadata !6, i64 32}
!58 = metadata !{metadata !59, metadata !6, i64 16}
!59 = metadata !{metadata !"bitmap_element_def", metadata !2, i64 0, metadata !2, i64 8, metadata !6, i64 16, metadata !3, i64 24}
!60 = metadata !{metadata !61, metadata !2, i64 72}
!61 = metadata !{metadata !"deps", metadata !2, i64 0, metadata !2, i64 8, metadata !2, i64 16, metadata !2, i64 24, metadata !6, i64 32, metadata !6, i64 36, metadata !2, i64 40, metadata !2, i64 48, metadata !2, i64 56, metadata !55, i64 64, metadata !6, i64 68, metadata !2, i64 72, metadata !62, i64 80}
!62 = metadata !{metadata !"bitmap_head_def", metadata !2, i64 0, metadata !2, i64 8, metadata !6, i64 16}
!63 = metadata !{metadata !64, metadata !2, i64 0}
!64 = metadata !{metadata !"deps_reg", metadata !2, i64 0, metadata !2, i64 8, metadata !2, i64 16, metadata !6, i64 24, metadata !6, i64 28}
!65 = metadata !{metadata !64, metadata !2, i64 8}
!66 = metadata !{metadata !64, metadata !2, i64 16}
!67 = metadata !{metadata !64, metadata !6, i64 24}
!68 = metadata !{metadata !64, metadata !6, i64 28}
!69 = metadata !{metadata !61, metadata !2, i64 0}
!70 = metadata !{metadata !61, metadata !2, i64 16}
!71 = metadata !{metadata !61, metadata !2, i64 40}
!72 = metadata !{metadata !61, metadata !6, i64 32}
!73 = metadata !{metadata !61, metadata !6, i64 36}
!74 = metadata !{metadata !61, metadata !2, i64 48}
!75 = metadata !{metadata !61, metadata !2, i64 56}
!76 = metadata !{metadata !61, metadata !2, i64 8}
!77 = metadata !{metadata !61, metadata !2, i64 24}
!78 = metadata !{metadata !79, metadata !79, i64 0}
!79 = metadata !{metadata !"float", metadata !3, i64 0}
!80 = metadata !{metadata !81, metadata !2, i64 64}
!81 = metadata !{metadata !"sched_info", metadata !2, i64 0, metadata !2, i64 8, metadata !2, i64 16, metadata !2, i64 24, metadata !2, i64 32, metadata !2, i64 40, metadata !2, i64 48, metadata !2, i64 56, metadata !2, i64 64, metadata !2, i64 72, metadata !2, i64 80, metadata !2, i64 88, metadata !6, i64 96, metadata !6, i64 96}
!82 = metadata !{metadata !81, metadata !2, i64 72}
!83 = metadata !{metadata !81, metadata !2, i64 80}
!84 = metadata !{metadata !81, metadata !2, i64 88}
!85 = metadata !{metadata !86, metadata !6, i64 0}
!86 = metadata !{metadata !"rtvec_def", metadata !6, i64 0, metadata !3, i64 8}
!87 = metadata !{metadata !11, metadata !6, i64 4}
!88 = metadata !{metadata !22, metadata !2, i64 64}
!89 = metadata !{metadata !90, metadata !6, i64 0}
!90 = metadata !{metadata !"simple_bitmap_def", metadata !6, i64 0, metadata !6, i64 4, metadata !6, i64 8, metadata !3, i64 16}
!91 = metadata !{metadata !90, metadata !6, i64 4}
