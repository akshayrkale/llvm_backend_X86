; ModuleID = 'splay-tree.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.splay_tree_s = type { %struct.splay_tree_node_s*, i32 (i64, i64)*, void (i64)*, void (i64)*, i8* (i32, i8*)*, void (i8*, i8*)*, i8* }
%struct.splay_tree_node_s = type { i64, i64, %struct.splay_tree_node_s*, %struct.splay_tree_node_s* }

; Function Attrs: nounwind uwtable
define noalias %struct.splay_tree_s* @splay_tree_new(i32 (i64, i64)* %compare_fn, void (i64)* %delete_key_fn, void (i64)* %delete_value_fn) #0 {
entry:
  %call.i1 = tail call noalias i8* @xmalloc(i64 56) #5
  %0 = bitcast i8* %call.i1 to %struct.splay_tree_s*
  %root.i = bitcast i8* %call.i1 to %struct.splay_tree_node_s**
  store %struct.splay_tree_node_s* null, %struct.splay_tree_node_s** %root.i, align 8, !tbaa !1
  %comp.i = getelementptr inbounds i8* %call.i1, i64 8
  %1 = bitcast i8* %comp.i to i32 (i64, i64)**
  store i32 (i64, i64)* %compare_fn, i32 (i64, i64)** %1, align 8, !tbaa !6
  %delete_key.i = getelementptr inbounds i8* %call.i1, i64 16
  %2 = bitcast i8* %delete_key.i to void (i64)**
  store void (i64)* %delete_key_fn, void (i64)** %2, align 8, !tbaa !7
  %delete_value.i = getelementptr inbounds i8* %call.i1, i64 24
  %3 = bitcast i8* %delete_value.i to void (i64)**
  store void (i64)* %delete_value_fn, void (i64)** %3, align 8, !tbaa !8
  %allocate.i = getelementptr inbounds i8* %call.i1, i64 32
  %4 = bitcast i8* %allocate.i to i8* (i32, i8*)**
  store i8* (i32, i8*)* @splay_tree_xmalloc_allocate, i8* (i32, i8*)** %4, align 8, !tbaa !9
  %deallocate.i = getelementptr inbounds i8* %call.i1, i64 40
  %5 = bitcast i8* %deallocate.i to void (i8*, i8*)**
  store void (i8*, i8*)* @splay_tree_xmalloc_deallocate, void (i8*, i8*)** %5, align 8, !tbaa !10
  %allocate_data1.i = getelementptr inbounds i8* %call.i1, i64 48
  %6 = bitcast i8* %allocate_data1.i to i8**
  store i8* null, i8** %6, align 8, !tbaa !11
  ret %struct.splay_tree_s* %0
}

; Function Attrs: nounwind uwtable
define %struct.splay_tree_s* @splay_tree_new_with_allocator(i32 (i64, i64)* %compare_fn, void (i64)* %delete_key_fn, void (i64)* %delete_value_fn, i8* (i32, i8*)* %allocate_fn, void (i8*, i8*)* %deallocate_fn, i8* %allocate_data) #0 {
entry:
  %call = tail call i8* %allocate_fn(i32 56, i8* %allocate_data) #5
  %0 = bitcast i8* %call to %struct.splay_tree_s*
  %root = bitcast i8* %call to %struct.splay_tree_node_s**
  store %struct.splay_tree_node_s* null, %struct.splay_tree_node_s** %root, align 8, !tbaa !1
  %comp = getelementptr inbounds i8* %call, i64 8
  %1 = bitcast i8* %comp to i32 (i64, i64)**
  store i32 (i64, i64)* %compare_fn, i32 (i64, i64)** %1, align 8, !tbaa !6
  %delete_key = getelementptr inbounds i8* %call, i64 16
  %2 = bitcast i8* %delete_key to void (i64)**
  store void (i64)* %delete_key_fn, void (i64)** %2, align 8, !tbaa !7
  %delete_value = getelementptr inbounds i8* %call, i64 24
  %3 = bitcast i8* %delete_value to void (i64)**
  store void (i64)* %delete_value_fn, void (i64)** %3, align 8, !tbaa !8
  %allocate = getelementptr inbounds i8* %call, i64 32
  %4 = bitcast i8* %allocate to i8* (i32, i8*)**
  store i8* (i32, i8*)* %allocate_fn, i8* (i32, i8*)** %4, align 8, !tbaa !9
  %deallocate = getelementptr inbounds i8* %call, i64 40
  %5 = bitcast i8* %deallocate to void (i8*, i8*)**
  store void (i8*, i8*)* %deallocate_fn, void (i8*, i8*)** %5, align 8, !tbaa !10
  %allocate_data1 = getelementptr inbounds i8* %call, i64 48
  %6 = bitcast i8* %allocate_data1 to i8**
  store i8* %allocate_data, i8** %6, align 8, !tbaa !11
  ret %struct.splay_tree_s* %0
}

; Function Attrs: nounwind uwtable
define internal noalias i8* @splay_tree_xmalloc_allocate(i32 %size, i8* nocapture readnone %data) #0 {
entry:
  %conv = sext i32 %size to i64
  %call = tail call noalias i8* @xmalloc(i64 %conv) #5
  ret i8* %call
}

; Function Attrs: nounwind uwtable
define internal void @splay_tree_xmalloc_deallocate(i8* nocapture %object, i8* nocapture readnone %data) #0 {
entry:
  tail call void @free(i8* %object)
  ret void
}

; Function Attrs: nounwind uwtable
define void @splay_tree_delete(%struct.splay_tree_s* %sp) #0 {
entry:
  %root = getelementptr inbounds %struct.splay_tree_s* %sp, i64 0, i32 0
  %0 = load %struct.splay_tree_node_s** %root, align 8, !tbaa !1
  tail call fastcc void @splay_tree_delete_helper(%struct.splay_tree_s* %sp, %struct.splay_tree_node_s* %0)
  %deallocate = getelementptr inbounds %struct.splay_tree_s* %sp, i64 0, i32 5
  %1 = load void (i8*, i8*)** %deallocate, align 8, !tbaa !10
  %2 = bitcast %struct.splay_tree_s* %sp to i8*
  %allocate_data = getelementptr inbounds %struct.splay_tree_s* %sp, i64 0, i32 6
  %3 = load i8** %allocate_data, align 8, !tbaa !11
  tail call void %1(i8* %2, i8* %3) #5
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @splay_tree_delete_helper(%struct.splay_tree_s* readonly %sp, %struct.splay_tree_node_s* %node) #0 {
entry:
  %tobool = icmp eq %struct.splay_tree_node_s* %node, null
  br i1 %tobool, label %return, label %if.end

if.end:                                           ; preds = %entry
  %left = getelementptr inbounds %struct.splay_tree_node_s* %node, i64 0, i32 2
  %0 = load %struct.splay_tree_node_s** %left, align 8, !tbaa !12
  tail call fastcc void @splay_tree_delete_helper(%struct.splay_tree_s* %sp, %struct.splay_tree_node_s* %0)
  %right = getelementptr inbounds %struct.splay_tree_node_s* %node, i64 0, i32 3
  %1 = load %struct.splay_tree_node_s** %right, align 8, !tbaa !15
  tail call fastcc void @splay_tree_delete_helper(%struct.splay_tree_s* %sp, %struct.splay_tree_node_s* %1)
  %delete_key = getelementptr inbounds %struct.splay_tree_s* %sp, i64 0, i32 2
  %2 = load void (i64)** %delete_key, align 8, !tbaa !7
  %tobool1 = icmp eq void (i64)* %2, null
  br i1 %tobool1, label %if.end4, label %if.then2

if.then2:                                         ; preds = %if.end
  %key = getelementptr inbounds %struct.splay_tree_node_s* %node, i64 0, i32 0
  %3 = load i64* %key, align 8, !tbaa !16
  tail call void %2(i64 %3) #5
  br label %if.end4

if.end4:                                          ; preds = %if.end, %if.then2
  %delete_value = getelementptr inbounds %struct.splay_tree_s* %sp, i64 0, i32 3
  %4 = load void (i64)** %delete_value, align 8, !tbaa !8
  %tobool5 = icmp eq void (i64)* %4, null
  br i1 %tobool5, label %if.end8, label %if.then6

if.then6:                                         ; preds = %if.end4
  %value = getelementptr inbounds %struct.splay_tree_node_s* %node, i64 0, i32 1
  %5 = load i64* %value, align 8, !tbaa !17
  tail call void %4(i64 %5) #5
  br label %if.end8

if.end8:                                          ; preds = %if.end4, %if.then6
  %deallocate = getelementptr inbounds %struct.splay_tree_s* %sp, i64 0, i32 5
  %6 = load void (i8*, i8*)** %deallocate, align 8, !tbaa !10
  %7 = bitcast %struct.splay_tree_node_s* %node to i8*
  %allocate_data = getelementptr inbounds %struct.splay_tree_s* %sp, i64 0, i32 6
  %8 = load i8** %allocate_data, align 8, !tbaa !11
  tail call void %6(i8* %7, i8* %8) #5
  br label %return

return:                                           ; preds = %entry, %if.end8
  ret void
}

; Function Attrs: nounwind uwtable
define %struct.splay_tree_node_s* @splay_tree_insert(%struct.splay_tree_s* %sp, i64 %key, i64 %value) #0 {
entry:
  %root.i = getelementptr inbounds %struct.splay_tree_s* %sp, i64 0, i32 0
  %0 = load %struct.splay_tree_node_s** %root.i, align 8, !tbaa !1
  %cmp.i = icmp eq %struct.splay_tree_node_s* %0, null
  br i1 %cmp.i, label %if.else, label %splay_tree_splay.exit

splay_tree_splay.exit:                            ; preds = %entry
  %call.i = tail call fastcc %struct.splay_tree_node_s* @splay_tree_splay_helper(%struct.splay_tree_s* %sp, i64 %key, %struct.splay_tree_node_s** %root.i, %struct.splay_tree_node_s** null, %struct.splay_tree_node_s** null) #5
  %.pr = load %struct.splay_tree_node_s** %root.i, align 8, !tbaa !1
  %tobool = icmp eq %struct.splay_tree_node_s* %.pr, null
  br i1 %tobool, label %if.else, label %if.end

if.end:                                           ; preds = %splay_tree_splay.exit
  %comp = getelementptr inbounds %struct.splay_tree_s* %sp, i64 0, i32 1
  %1 = load i32 (i64, i64)** %comp, align 8, !tbaa !6
  %key2 = getelementptr inbounds %struct.splay_tree_node_s* %.pr, i64 0, i32 0
  %2 = load i64* %key2, align 8, !tbaa !16
  %call = tail call i32 %1(i64 %2, i64 %key) #5
  %.pre = load %struct.splay_tree_node_s** %root.i, align 8, !tbaa !1
  %tobool4 = icmp ne %struct.splay_tree_node_s* %.pre, null
  %cmp = icmp eq i32 %call, 0
  %or.cond = and i1 %tobool4, %cmp
  br i1 %or.cond, label %if.then5, label %if.else

if.then5:                                         ; preds = %if.end
  %delete_value = getelementptr inbounds %struct.splay_tree_s* %sp, i64 0, i32 3
  %3 = load void (i64)** %delete_value, align 8, !tbaa !8
  %tobool6 = icmp eq void (i64)* %3, null
  br i1 %tobool6, label %if.end11, label %if.then7

if.then7:                                         ; preds = %if.then5
  %value10 = getelementptr inbounds %struct.splay_tree_node_s* %.pre, i64 0, i32 1
  %4 = load i64* %value10, align 8, !tbaa !17
  tail call void %3(i64 %4) #5
  %.pre72 = load %struct.splay_tree_node_s** %root.i, align 8, !tbaa !1
  br label %if.end11

if.end11:                                         ; preds = %if.then5, %if.then7
  %5 = phi %struct.splay_tree_node_s* [ %.pre, %if.then5 ], [ %.pre72, %if.then7 ]
  %value13 = getelementptr inbounds %struct.splay_tree_node_s* %5, i64 0, i32 1
  store i64 %value, i64* %value13, align 8, !tbaa !17
  br label %if.end41

if.else:                                          ; preds = %entry, %splay_tree_splay.exit, %if.end
  %comparison.076 = phi i32 [ %call, %if.end ], [ 0, %splay_tree_splay.exit ], [ 0, %entry ]
  %allocate = getelementptr inbounds %struct.splay_tree_s* %sp, i64 0, i32 4
  %6 = load i8* (i32, i8*)** %allocate, align 8, !tbaa !9
  %allocate_data = getelementptr inbounds %struct.splay_tree_s* %sp, i64 0, i32 6
  %7 = load i8** %allocate_data, align 8, !tbaa !11
  %call14 = tail call i8* %6(i32 32, i8* %7) #5
  %8 = bitcast i8* %call14 to %struct.splay_tree_node_s*
  %key15 = bitcast i8* %call14 to i64*
  store i64 %key, i64* %key15, align 8, !tbaa !16
  %value16 = getelementptr inbounds i8* %call14, i64 8
  %9 = bitcast i8* %value16 to i64*
  store i64 %value, i64* %9, align 8, !tbaa !17
  %10 = load %struct.splay_tree_node_s** %root.i, align 8, !tbaa !1
  %tobool18 = icmp eq %struct.splay_tree_node_s* %10, null
  br i1 %tobool18, label %if.then19, label %if.else20

if.then19:                                        ; preds = %if.else
  %left = getelementptr inbounds i8* %call14, i64 16
  call void @llvm.memset.p0i8.i64(i8* %left, i8 0, i64 16, i32 8, i1 false)
  br label %if.end39

if.else20:                                        ; preds = %if.else
  %cmp21 = icmp slt i32 %comparison.076, 0
  br i1 %cmp21, label %if.then22, label %if.else30

if.then22:                                        ; preds = %if.else20
  %left24 = getelementptr inbounds i8* %call14, i64 16
  %11 = bitcast i8* %left24 to %struct.splay_tree_node_s**
  store %struct.splay_tree_node_s* %10, %struct.splay_tree_node_s** %11, align 8, !tbaa !12
  %right26 = getelementptr inbounds %struct.splay_tree_node_s* %10, i64 0, i32 3
  %12 = load %struct.splay_tree_node_s** %right26, align 8, !tbaa !15
  %right27 = getelementptr inbounds i8* %call14, i64 24
  %13 = bitcast i8* %right27 to %struct.splay_tree_node_s**
  store %struct.splay_tree_node_s* %12, %struct.splay_tree_node_s** %13, align 8, !tbaa !15
  store %struct.splay_tree_node_s* null, %struct.splay_tree_node_s** %right26, align 8, !tbaa !15
  br label %if.end39

if.else30:                                        ; preds = %if.else20
  %right32 = getelementptr inbounds i8* %call14, i64 24
  %14 = bitcast i8* %right32 to %struct.splay_tree_node_s**
  store %struct.splay_tree_node_s* %10, %struct.splay_tree_node_s** %14, align 8, !tbaa !15
  %left34 = getelementptr inbounds %struct.splay_tree_node_s* %10, i64 0, i32 2
  %15 = load %struct.splay_tree_node_s** %left34, align 8, !tbaa !12
  %left35 = getelementptr inbounds i8* %call14, i64 16
  %16 = bitcast i8* %left35 to %struct.splay_tree_node_s**
  store %struct.splay_tree_node_s* %15, %struct.splay_tree_node_s** %16, align 8, !tbaa !12
  store %struct.splay_tree_node_s* null, %struct.splay_tree_node_s** %left34, align 8, !tbaa !12
  br label %if.end39

if.end39:                                         ; preds = %if.then22, %if.else30, %if.then19
  store %struct.splay_tree_node_s* %8, %struct.splay_tree_node_s** %root.i, align 8, !tbaa !1
  br label %if.end41

if.end41:                                         ; preds = %if.end39, %if.end11
  %17 = phi %struct.splay_tree_node_s* [ %8, %if.end39 ], [ %5, %if.end11 ]
  ret %struct.splay_tree_node_s* %17
}

; Function Attrs: nounwind uwtable
define void @splay_tree_remove(%struct.splay_tree_s* %sp, i64 %key) #0 {
entry:
  %root.i = getelementptr inbounds %struct.splay_tree_s* %sp, i64 0, i32 0
  %0 = load %struct.splay_tree_node_s** %root.i, align 8, !tbaa !1
  %cmp.i = icmp eq %struct.splay_tree_node_s* %0, null
  br i1 %cmp.i, label %if.end24, label %splay_tree_splay.exit

splay_tree_splay.exit:                            ; preds = %entry
  %call.i = tail call fastcc %struct.splay_tree_node_s* @splay_tree_splay_helper(%struct.splay_tree_s* %sp, i64 %key, %struct.splay_tree_node_s** %root.i, %struct.splay_tree_node_s** null, %struct.splay_tree_node_s** null) #5
  %.pr = load %struct.splay_tree_node_s** %root.i, align 8, !tbaa !1
  %tobool = icmp eq %struct.splay_tree_node_s* %.pr, null
  br i1 %tobool, label %if.end24, label %land.lhs.true

land.lhs.true:                                    ; preds = %splay_tree_splay.exit
  %comp = getelementptr inbounds %struct.splay_tree_s* %sp, i64 0, i32 1
  %1 = load i32 (i64, i64)** %comp, align 8, !tbaa !6
  %key2 = getelementptr inbounds %struct.splay_tree_node_s* %.pr, i64 0, i32 0
  %2 = load i64* %key2, align 8, !tbaa !16
  %call = tail call i32 %1(i64 %2, i64 %key) #5
  %cmp = icmp eq i32 %call, 0
  br i1 %cmp, label %if.then, label %if.end24

if.then:                                          ; preds = %land.lhs.true
  %3 = load %struct.splay_tree_node_s** %root.i, align 8, !tbaa !1
  %left4 = getelementptr inbounds %struct.splay_tree_node_s* %3, i64 0, i32 2
  %4 = load %struct.splay_tree_node_s** %left4, align 8, !tbaa !12
  %right6 = getelementptr inbounds %struct.splay_tree_node_s* %3, i64 0, i32 3
  %5 = load %struct.splay_tree_node_s** %right6, align 8, !tbaa !15
  %delete_value = getelementptr inbounds %struct.splay_tree_s* %sp, i64 0, i32 3
  %6 = load void (i64)** %delete_value, align 8, !tbaa !8
  %tobool7 = icmp eq void (i64)* %6, null
  br i1 %tobool7, label %if.end, label %if.then8

if.then8:                                         ; preds = %if.then
  %value = getelementptr inbounds %struct.splay_tree_node_s* %3, i64 0, i32 1
  %7 = load i64* %value, align 8, !tbaa !17
  tail call void %6(i64 %7) #5
  %.pre = load %struct.splay_tree_node_s** %root.i, align 8, !tbaa !1
  br label %if.end

if.end:                                           ; preds = %if.then, %if.then8
  %8 = phi %struct.splay_tree_node_s* [ %3, %if.then ], [ %.pre, %if.then8 ]
  %deallocate = getelementptr inbounds %struct.splay_tree_s* %sp, i64 0, i32 5
  %9 = load void (i8*, i8*)** %deallocate, align 8, !tbaa !10
  %10 = bitcast %struct.splay_tree_node_s* %8 to i8*
  %allocate_data = getelementptr inbounds %struct.splay_tree_s* %sp, i64 0, i32 6
  %11 = load i8** %allocate_data, align 8, !tbaa !11
  tail call void %9(i8* %10, i8* %11) #5
  %tobool12 = icmp eq %struct.splay_tree_node_s* %4, null
  br i1 %tobool12, label %if.else, label %if.then13

if.then13:                                        ; preds = %if.end
  store %struct.splay_tree_node_s* %4, %struct.splay_tree_node_s** %root.i, align 8, !tbaa !1
  %tobool15 = icmp eq %struct.splay_tree_node_s* %5, null
  br i1 %tobool15, label %if.end24, label %while.cond

while.cond:                                       ; preds = %if.then13, %while.cond
  %left.0 = phi %struct.splay_tree_node_s* [ %12, %while.cond ], [ %4, %if.then13 ]
  %right17 = getelementptr inbounds %struct.splay_tree_node_s* %left.0, i64 0, i32 3
  %12 = load %struct.splay_tree_node_s** %right17, align 8, !tbaa !15
  %tobool18 = icmp eq %struct.splay_tree_node_s* %12, null
  br i1 %tobool18, label %while.end, label %while.cond

while.end:                                        ; preds = %while.cond
  store %struct.splay_tree_node_s* %5, %struct.splay_tree_node_s** %right17, align 8, !tbaa !15
  br label %if.end24

if.else:                                          ; preds = %if.end
  store %struct.splay_tree_node_s* %5, %struct.splay_tree_node_s** %root.i, align 8, !tbaa !1
  br label %if.end24

if.end24:                                         ; preds = %entry, %if.then13, %splay_tree_splay.exit, %if.else, %while.end, %land.lhs.true
  ret void
}

; Function Attrs: nounwind uwtable
define %struct.splay_tree_node_s* @splay_tree_lookup(%struct.splay_tree_s* %sp, i64 %key) #0 {
entry:
  %root.i = getelementptr inbounds %struct.splay_tree_s* %sp, i64 0, i32 0
  %0 = load %struct.splay_tree_node_s** %root.i, align 8, !tbaa !1
  %cmp.i = icmp eq %struct.splay_tree_node_s* %0, null
  br i1 %cmp.i, label %return, label %splay_tree_splay.exit

splay_tree_splay.exit:                            ; preds = %entry
  %call.i = tail call fastcc %struct.splay_tree_node_s* @splay_tree_splay_helper(%struct.splay_tree_s* %sp, i64 %key, %struct.splay_tree_node_s** %root.i, %struct.splay_tree_node_s** null, %struct.splay_tree_node_s** null) #5
  %.pr = load %struct.splay_tree_node_s** %root.i, align 8, !tbaa !1
  %tobool = icmp eq %struct.splay_tree_node_s* %.pr, null
  br i1 %tobool, label %return, label %land.lhs.true

land.lhs.true:                                    ; preds = %splay_tree_splay.exit
  %comp = getelementptr inbounds %struct.splay_tree_s* %sp, i64 0, i32 1
  %1 = load i32 (i64, i64)** %comp, align 8, !tbaa !6
  %key2 = getelementptr inbounds %struct.splay_tree_node_s* %.pr, i64 0, i32 0
  %2 = load i64* %key2, align 8, !tbaa !16
  %call = tail call i32 %1(i64 %2, i64 %key) #5
  %cmp = icmp eq i32 %call, 0
  br i1 %cmp, label %if.then, label %return

if.then:                                          ; preds = %land.lhs.true
  %3 = load %struct.splay_tree_node_s** %root.i, align 8, !tbaa !1
  br label %return

return:                                           ; preds = %entry, %land.lhs.true, %splay_tree_splay.exit, %if.then
  %retval.0 = phi %struct.splay_tree_node_s* [ %3, %if.then ], [ null, %splay_tree_splay.exit ], [ null, %land.lhs.true ], [ null, %entry ]
  ret %struct.splay_tree_node_s* %retval.0
}

; Function Attrs: nounwind readonly uwtable
define %struct.splay_tree_node_s* @splay_tree_max(%struct.splay_tree_s* nocapture readonly %sp) #1 {
entry:
  %root = getelementptr inbounds %struct.splay_tree_s* %sp, i64 0, i32 0
  %0 = load %struct.splay_tree_node_s** %root, align 8, !tbaa !1
  %tobool = icmp eq %struct.splay_tree_node_s* %0, null
  br i1 %tobool, label %return, label %while.cond

while.cond:                                       ; preds = %entry, %while.cond
  %n.0 = phi %struct.splay_tree_node_s* [ %1, %while.cond ], [ %0, %entry ]
  %right = getelementptr inbounds %struct.splay_tree_node_s* %n.0, i64 0, i32 3
  %1 = load %struct.splay_tree_node_s** %right, align 8, !tbaa !15
  %tobool1 = icmp eq %struct.splay_tree_node_s* %1, null
  br i1 %tobool1, label %return, label %while.cond

return:                                           ; preds = %while.cond, %entry
  %retval.0 = phi %struct.splay_tree_node_s* [ null, %entry ], [ %n.0, %while.cond ]
  ret %struct.splay_tree_node_s* %retval.0
}

; Function Attrs: nounwind readonly uwtable
define %struct.splay_tree_node_s* @splay_tree_min(%struct.splay_tree_s* nocapture readonly %sp) #1 {
entry:
  %root = getelementptr inbounds %struct.splay_tree_s* %sp, i64 0, i32 0
  %0 = load %struct.splay_tree_node_s** %root, align 8, !tbaa !1
  %tobool = icmp eq %struct.splay_tree_node_s* %0, null
  br i1 %tobool, label %return, label %while.cond

while.cond:                                       ; preds = %entry, %while.cond
  %n.0 = phi %struct.splay_tree_node_s* [ %1, %while.cond ], [ %0, %entry ]
  %left = getelementptr inbounds %struct.splay_tree_node_s* %n.0, i64 0, i32 2
  %1 = load %struct.splay_tree_node_s** %left, align 8, !tbaa !12
  %tobool1 = icmp eq %struct.splay_tree_node_s* %1, null
  br i1 %tobool1, label %return, label %while.cond

return:                                           ; preds = %while.cond, %entry
  %retval.0 = phi %struct.splay_tree_node_s* [ null, %entry ], [ %n.0, %while.cond ]
  ret %struct.splay_tree_node_s* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.splay_tree_node_s* @splay_tree_predecessor(%struct.splay_tree_s* %sp, i64 %key) #0 {
entry:
  %root = getelementptr inbounds %struct.splay_tree_s* %sp, i64 0, i32 0
  %0 = load %struct.splay_tree_node_s** %root, align 8, !tbaa !1
  %tobool = icmp eq %struct.splay_tree_node_s* %0, null
  br i1 %tobool, label %return, label %splay_tree_splay.exit

splay_tree_splay.exit:                            ; preds = %entry
  %call.i = tail call fastcc %struct.splay_tree_node_s* @splay_tree_splay_helper(%struct.splay_tree_s* %sp, i64 %key, %struct.splay_tree_node_s** %root, %struct.splay_tree_node_s** null, %struct.splay_tree_node_s** null) #5
  %comp = getelementptr inbounds %struct.splay_tree_s* %sp, i64 0, i32 1
  %1 = load i32 (i64, i64)** %comp, align 8, !tbaa !6
  %2 = load %struct.splay_tree_node_s** %root, align 8, !tbaa !1
  %key2 = getelementptr inbounds %struct.splay_tree_node_s* %2, i64 0, i32 0
  %3 = load i64* %key2, align 8, !tbaa !16
  %call = tail call i32 %1(i64 %3, i64 %key) #5
  %cmp = icmp slt i32 %call, 0
  %4 = load %struct.splay_tree_node_s** %root, align 8, !tbaa !1
  br i1 %cmp, label %return, label %if.end5

if.end5:                                          ; preds = %splay_tree_splay.exit
  %left = getelementptr inbounds %struct.splay_tree_node_s* %4, i64 0, i32 2
  %5 = load %struct.splay_tree_node_s** %left, align 8, !tbaa !12
  %tobool7 = icmp eq %struct.splay_tree_node_s* %5, null
  br i1 %tobool7, label %return, label %while.cond

while.cond:                                       ; preds = %if.end5, %while.cond
  %node.0 = phi %struct.splay_tree_node_s* [ %6, %while.cond ], [ %5, %if.end5 ]
  %right = getelementptr inbounds %struct.splay_tree_node_s* %node.0, i64 0, i32 3
  %6 = load %struct.splay_tree_node_s** %right, align 8, !tbaa !15
  %tobool9 = icmp eq %struct.splay_tree_node_s* %6, null
  br i1 %tobool9, label %return, label %while.cond

return:                                           ; preds = %while.cond, %if.end5, %splay_tree_splay.exit, %entry
  %retval.0 = phi %struct.splay_tree_node_s* [ null, %entry ], [ %4, %splay_tree_splay.exit ], [ null, %if.end5 ], [ %node.0, %while.cond ]
  ret %struct.splay_tree_node_s* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.splay_tree_node_s* @splay_tree_successor(%struct.splay_tree_s* %sp, i64 %key) #0 {
entry:
  %root = getelementptr inbounds %struct.splay_tree_s* %sp, i64 0, i32 0
  %0 = load %struct.splay_tree_node_s** %root, align 8, !tbaa !1
  %tobool = icmp eq %struct.splay_tree_node_s* %0, null
  br i1 %tobool, label %return, label %splay_tree_splay.exit

splay_tree_splay.exit:                            ; preds = %entry
  %call.i = tail call fastcc %struct.splay_tree_node_s* @splay_tree_splay_helper(%struct.splay_tree_s* %sp, i64 %key, %struct.splay_tree_node_s** %root, %struct.splay_tree_node_s** null, %struct.splay_tree_node_s** null) #5
  %comp = getelementptr inbounds %struct.splay_tree_s* %sp, i64 0, i32 1
  %1 = load i32 (i64, i64)** %comp, align 8, !tbaa !6
  %2 = load %struct.splay_tree_node_s** %root, align 8, !tbaa !1
  %key2 = getelementptr inbounds %struct.splay_tree_node_s* %2, i64 0, i32 0
  %3 = load i64* %key2, align 8, !tbaa !16
  %call = tail call i32 %1(i64 %3, i64 %key) #5
  %cmp = icmp sgt i32 %call, 0
  %4 = load %struct.splay_tree_node_s** %root, align 8, !tbaa !1
  br i1 %cmp, label %return, label %if.end5

if.end5:                                          ; preds = %splay_tree_splay.exit
  %right = getelementptr inbounds %struct.splay_tree_node_s* %4, i64 0, i32 3
  %5 = load %struct.splay_tree_node_s** %right, align 8, !tbaa !15
  %tobool7 = icmp eq %struct.splay_tree_node_s* %5, null
  br i1 %tobool7, label %return, label %while.cond

while.cond:                                       ; preds = %if.end5, %while.cond
  %node.0 = phi %struct.splay_tree_node_s* [ %6, %while.cond ], [ %5, %if.end5 ]
  %left = getelementptr inbounds %struct.splay_tree_node_s* %node.0, i64 0, i32 2
  %6 = load %struct.splay_tree_node_s** %left, align 8, !tbaa !12
  %tobool9 = icmp eq %struct.splay_tree_node_s* %6, null
  br i1 %tobool9, label %return, label %while.cond

return:                                           ; preds = %while.cond, %if.end5, %splay_tree_splay.exit, %entry
  %retval.0 = phi %struct.splay_tree_node_s* [ null, %entry ], [ %4, %splay_tree_splay.exit ], [ null, %if.end5 ], [ %node.0, %while.cond ]
  ret %struct.splay_tree_node_s* %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @splay_tree_foreach(%struct.splay_tree_s* nocapture readonly %sp, i32 (%struct.splay_tree_node_s*, i8*)* %fn, i8* %data) #0 {
entry:
  %root = getelementptr inbounds %struct.splay_tree_s* %sp, i64 0, i32 0
  %0 = load %struct.splay_tree_node_s** %root, align 8, !tbaa !1
  %call = tail call fastcc i32 @splay_tree_foreach_helper(%struct.splay_tree_node_s* %0, i32 (%struct.splay_tree_node_s*, i8*)* %fn, i8* %data)
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @splay_tree_foreach_helper(%struct.splay_tree_node_s* %node, i32 (%struct.splay_tree_node_s*, i8*)* %fn, i8* %data) #0 {
entry:
  %tobool2 = icmp eq %struct.splay_tree_node_s* %node, null
  br i1 %tobool2, label %return, label %if.end

if.end:                                           ; preds = %entry, %if.end7
  %node.tr3 = phi %struct.splay_tree_node_s* [ %1, %if.end7 ], [ %node, %entry ]
  %left = getelementptr inbounds %struct.splay_tree_node_s* %node.tr3, i64 0, i32 2
  %0 = load %struct.splay_tree_node_s** %left, align 8, !tbaa !12
  %call = tail call fastcc i32 @splay_tree_foreach_helper(%struct.splay_tree_node_s* %0, i32 (%struct.splay_tree_node_s*, i8*)* %fn, i8* %data)
  %tobool1 = icmp eq i32 %call, 0
  br i1 %tobool1, label %if.end3, label %return

if.end3:                                          ; preds = %if.end
  %call4 = tail call i32 %fn(%struct.splay_tree_node_s* %node.tr3, i8* %data) #5
  %tobool5 = icmp eq i32 %call4, 0
  br i1 %tobool5, label %if.end7, label %return

if.end7:                                          ; preds = %if.end3
  %right = getelementptr inbounds %struct.splay_tree_node_s* %node.tr3, i64 0, i32 3
  %1 = load %struct.splay_tree_node_s** %right, align 8, !tbaa !15
  %tobool = icmp eq %struct.splay_tree_node_s* %1, null
  br i1 %tobool, label %return, label %if.end

return:                                           ; preds = %if.end7, %if.end, %if.end3, %entry
  %retval.0 = phi i32 [ 0, %entry ], [ 0, %if.end7 ], [ %call, %if.end ], [ %call4, %if.end3 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind readnone uwtable
define i32 @splay_tree_compare_ints(i64 %k1, i64 %k2) #2 {
entry:
  %conv = trunc i64 %k1 to i32
  %conv1 = trunc i64 %k2 to i32
  %cmp = icmp slt i32 %conv, %conv1
  br i1 %cmp, label %return, label %if.else

if.else:                                          ; preds = %entry
  %cmp5 = icmp sgt i32 %conv, %conv1
  %. = zext i1 %cmp5 to i32
  br label %return

return:                                           ; preds = %if.else, %entry
  %retval.0 = phi i32 [ -1, %entry ], [ %., %if.else ]
  ret i32 %retval.0
}

; Function Attrs: nounwind readnone uwtable
define i32 @splay_tree_compare_pointers(i64 %k1, i64 %k2) #2 {
entry:
  %0 = inttoptr i64 %k1 to i8*
  %1 = inttoptr i64 %k2 to i8*
  %cmp = icmp ult i8* %0, %1
  br i1 %cmp, label %return, label %if.else

if.else:                                          ; preds = %entry
  %cmp1 = icmp ugt i8* %0, %1
  %. = zext i1 %cmp1 to i32
  br label %return

return:                                           ; preds = %if.else, %entry
  %retval.0 = phi i32 [ -1, %entry ], [ %., %if.else ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.splay_tree_node_s* @splay_tree_splay_helper(%struct.splay_tree_s* nocapture readonly %sp, i64 %key, %struct.splay_tree_node_s** %node, %struct.splay_tree_node_s** %parent, %struct.splay_tree_node_s** %grandparent) #0 {
entry:
  %0 = load %struct.splay_tree_node_s** %node, align 8, !tbaa !18
  %tobool = icmp eq %struct.splay_tree_node_s* %0, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load %struct.splay_tree_node_s** %parent, align 8, !tbaa !18
  br label %return

if.end:                                           ; preds = %entry
  %comp = getelementptr inbounds %struct.splay_tree_s* %sp, i64 0, i32 1
  %2 = load i32 (i64, i64)** %comp, align 8, !tbaa !6
  %key1 = getelementptr inbounds %struct.splay_tree_node_s* %0, i64 0, i32 0
  %3 = load i64* %key1, align 8, !tbaa !16
  %call = tail call i32 %2(i64 %key, i64 %3) #5
  %cmp = icmp eq i32 %call, 0
  br i1 %cmp, label %if.end14, label %if.else

if.else:                                          ; preds = %if.end
  %cmp3 = icmp slt i32 %call, 0
  %left = getelementptr inbounds %struct.splay_tree_node_s* %0, i64 0, i32 2
  %right = getelementptr inbounds %struct.splay_tree_node_s* %0, i64 0, i32 3
  %next.0.ph = select i1 %cmp3, %struct.splay_tree_node_s** %left, %struct.splay_tree_node_s** %right
  %call10 = tail call fastcc %struct.splay_tree_node_s* @splay_tree_splay_helper(%struct.splay_tree_s* %sp, i64 %key, %struct.splay_tree_node_s** %next.0.ph, %struct.splay_tree_node_s** %node, %struct.splay_tree_node_s** %parent)
  %4 = load %struct.splay_tree_node_s** %node, align 8, !tbaa !18
  %cmp11 = icmp eq %struct.splay_tree_node_s* %4, %call10
  br i1 %cmp11, label %if.end14, label %return

if.end14:                                         ; preds = %if.end, %if.else
  %n.0 = phi %struct.splay_tree_node_s* [ %call10, %if.else ], [ %0, %if.end ]
  %tobool15 = icmp eq %struct.splay_tree_node_s** %parent, null
  br i1 %tobool15, label %return, label %if.end17

if.end17:                                         ; preds = %if.end14
  %tobool18 = icmp eq %struct.splay_tree_node_s** %grandparent, null
  %5 = load %struct.splay_tree_node_s** %parent, align 8, !tbaa !18
  %left30 = getelementptr inbounds %struct.splay_tree_node_s* %5, i64 0, i32 2
  %6 = load %struct.splay_tree_node_s** %left30, align 8, !tbaa !12
  %cmp31 = icmp eq %struct.splay_tree_node_s* %n.0, %6
  br i1 %tobool18, label %if.then19, label %if.end29

if.then19:                                        ; preds = %if.end17
  br i1 %cmp31, label %if.then22, label %if.else25

if.then22:                                        ; preds = %if.then19
  %right23 = getelementptr inbounds %struct.splay_tree_node_s* %n.0, i64 0, i32 3
  %7 = load %struct.splay_tree_node_s** %right23, align 8, !tbaa !15
  store %struct.splay_tree_node_s* %7, %struct.splay_tree_node_s** %node, align 8, !tbaa !18
  %8 = load %struct.splay_tree_node_s** %parent, align 8, !tbaa !18
  store %struct.splay_tree_node_s* %8, %struct.splay_tree_node_s** %right23, align 8, !tbaa !15
  br label %if.end28

if.else25:                                        ; preds = %if.then19
  %left26 = getelementptr inbounds %struct.splay_tree_node_s* %n.0, i64 0, i32 2
  %9 = load %struct.splay_tree_node_s** %left26, align 8, !tbaa !12
  store %struct.splay_tree_node_s* %9, %struct.splay_tree_node_s** %node, align 8, !tbaa !18
  %10 = load %struct.splay_tree_node_s** %parent, align 8, !tbaa !18
  store %struct.splay_tree_node_s* %10, %struct.splay_tree_node_s** %left26, align 8, !tbaa !12
  br label %if.end28

if.end28:                                         ; preds = %if.else25, %if.then22
  store %struct.splay_tree_node_s* %n.0, %struct.splay_tree_node_s** %parent, align 8, !tbaa !18
  br label %return

if.end29:                                         ; preds = %if.end17
  br i1 %cmp31, label %land.lhs.true, label %if.else41

land.lhs.true:                                    ; preds = %if.end29
  %11 = load %struct.splay_tree_node_s** %grandparent, align 8, !tbaa !18
  %left32 = getelementptr inbounds %struct.splay_tree_node_s* %11, i64 0, i32 2
  %12 = load %struct.splay_tree_node_s** %left32, align 8, !tbaa !12
  %cmp33 = icmp eq %struct.splay_tree_node_s* %5, %12
  br i1 %cmp33, label %if.then34, label %if.else41

if.then34:                                        ; preds = %land.lhs.true
  %right35 = getelementptr inbounds %struct.splay_tree_node_s* %5, i64 0, i32 3
  %13 = load %struct.splay_tree_node_s** %right35, align 8, !tbaa !15
  store %struct.splay_tree_node_s* %13, %struct.splay_tree_node_s** %left32, align 8, !tbaa !12
  %14 = load %struct.splay_tree_node_s** %grandparent, align 8, !tbaa !18
  store %struct.splay_tree_node_s* %14, %struct.splay_tree_node_s** %right35, align 8, !tbaa !15
  %right38 = getelementptr inbounds %struct.splay_tree_node_s* %n.0, i64 0, i32 3
  %15 = load %struct.splay_tree_node_s** %right38, align 8, !tbaa !15
  store %struct.splay_tree_node_s* %15, %struct.splay_tree_node_s** %left30, align 8, !tbaa !12
  store %struct.splay_tree_node_s* %5, %struct.splay_tree_node_s** %right38, align 8, !tbaa !15
  store %struct.splay_tree_node_s* %n.0, %struct.splay_tree_node_s** %grandparent, align 8, !tbaa !18
  br label %return

if.else41:                                        ; preds = %land.lhs.true, %if.end29
  %right42 = getelementptr inbounds %struct.splay_tree_node_s* %5, i64 0, i32 3
  %16 = load %struct.splay_tree_node_s** %right42, align 8, !tbaa !15
  %cmp43 = icmp eq %struct.splay_tree_node_s* %n.0, %16
  br i1 %cmp43, label %land.lhs.true44, label %if.end56

land.lhs.true44:                                  ; preds = %if.else41
  %17 = load %struct.splay_tree_node_s** %grandparent, align 8, !tbaa !18
  %right45 = getelementptr inbounds %struct.splay_tree_node_s* %17, i64 0, i32 3
  %18 = load %struct.splay_tree_node_s** %right45, align 8, !tbaa !15
  %cmp46 = icmp eq %struct.splay_tree_node_s* %5, %18
  br i1 %cmp46, label %if.then47, label %if.end56

if.then47:                                        ; preds = %land.lhs.true44
  store %struct.splay_tree_node_s* %6, %struct.splay_tree_node_s** %right45, align 8, !tbaa !15
  %19 = load %struct.splay_tree_node_s** %grandparent, align 8, !tbaa !18
  store %struct.splay_tree_node_s* %19, %struct.splay_tree_node_s** %left30, align 8, !tbaa !12
  %left52 = getelementptr inbounds %struct.splay_tree_node_s* %n.0, i64 0, i32 2
  %20 = load %struct.splay_tree_node_s** %left52, align 8, !tbaa !12
  store %struct.splay_tree_node_s* %20, %struct.splay_tree_node_s** %right42, align 8, !tbaa !15
  store %struct.splay_tree_node_s* %5, %struct.splay_tree_node_s** %left52, align 8, !tbaa !12
  store %struct.splay_tree_node_s* %n.0, %struct.splay_tree_node_s** %grandparent, align 8, !tbaa !18
  br label %return

if.end56:                                         ; preds = %if.else41, %land.lhs.true44
  br i1 %cmp31, label %if.then59, label %if.else66

if.then59:                                        ; preds = %if.end56
  %right60 = getelementptr inbounds %struct.splay_tree_node_s* %n.0, i64 0, i32 3
  %21 = load %struct.splay_tree_node_s** %right60, align 8, !tbaa !15
  store %struct.splay_tree_node_s* %21, %struct.splay_tree_node_s** %left30, align 8, !tbaa !12
  %22 = load %struct.splay_tree_node_s** %parent, align 8, !tbaa !18
  store %struct.splay_tree_node_s* %22, %struct.splay_tree_node_s** %right60, align 8, !tbaa !15
  %left63 = getelementptr inbounds %struct.splay_tree_node_s* %n.0, i64 0, i32 2
  %23 = load %struct.splay_tree_node_s** %left63, align 8, !tbaa !12
  %24 = load %struct.splay_tree_node_s** %grandparent, align 8, !tbaa !18
  %right64 = getelementptr inbounds %struct.splay_tree_node_s* %24, i64 0, i32 3
  store %struct.splay_tree_node_s* %23, %struct.splay_tree_node_s** %right64, align 8, !tbaa !15
  %25 = load %struct.splay_tree_node_s** %grandparent, align 8, !tbaa !18
  store %struct.splay_tree_node_s* %25, %struct.splay_tree_node_s** %left63, align 8, !tbaa !12
  store %struct.splay_tree_node_s* %n.0, %struct.splay_tree_node_s** %grandparent, align 8, !tbaa !18
  br label %return

if.else66:                                        ; preds = %if.end56
  %left67 = getelementptr inbounds %struct.splay_tree_node_s* %n.0, i64 0, i32 2
  %26 = load %struct.splay_tree_node_s** %left67, align 8, !tbaa !12
  store %struct.splay_tree_node_s* %26, %struct.splay_tree_node_s** %right42, align 8, !tbaa !15
  %27 = load %struct.splay_tree_node_s** %parent, align 8, !tbaa !18
  store %struct.splay_tree_node_s* %27, %struct.splay_tree_node_s** %left67, align 8, !tbaa !12
  %right70 = getelementptr inbounds %struct.splay_tree_node_s* %n.0, i64 0, i32 3
  %28 = load %struct.splay_tree_node_s** %right70, align 8, !tbaa !15
  %29 = load %struct.splay_tree_node_s** %grandparent, align 8, !tbaa !18
  %left71 = getelementptr inbounds %struct.splay_tree_node_s* %29, i64 0, i32 2
  store %struct.splay_tree_node_s* %28, %struct.splay_tree_node_s** %left71, align 8, !tbaa !12
  %30 = load %struct.splay_tree_node_s** %grandparent, align 8, !tbaa !18
  store %struct.splay_tree_node_s* %30, %struct.splay_tree_node_s** %right70, align 8, !tbaa !15
  store %struct.splay_tree_node_s* %n.0, %struct.splay_tree_node_s** %grandparent, align 8, !tbaa !18
  br label %return

return:                                           ; preds = %if.end14, %if.else, %if.else66, %if.then59, %if.then47, %if.then34, %if.end28, %if.then
  %retval.0 = phi %struct.splay_tree_node_s* [ %n.0, %if.then34 ], [ %n.0, %if.then47 ], [ %n.0, %if.then59 ], [ %n.0, %if.else66 ], [ %n.0, %if.end28 ], [ %1, %if.then ], [ %call10, %if.else ], [ %n.0, %if.end14 ]
  ret %struct.splay_tree_node_s* %retval.0
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) #3

declare noalias i8* @xmalloc(i64) #4

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #5

attributes #0 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readonly uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.ident = !{!0}

!0 = metadata !{metadata !"clang version 3.5 (trunk)"}
!1 = metadata !{metadata !2, metadata !3, i64 0}
!2 = metadata !{metadata !"splay_tree_s", metadata !3, i64 0, metadata !3, i64 8, metadata !3, i64 16, metadata !3, i64 24, metadata !3, i64 32, metadata !3, i64 40, metadata !3, i64 48}
!3 = metadata !{metadata !"any pointer", metadata !4, i64 0}
!4 = metadata !{metadata !"omnipotent char", metadata !5, i64 0}
!5 = metadata !{metadata !"Simple C/C++ TBAA"}
!6 = metadata !{metadata !2, metadata !3, i64 8}
!7 = metadata !{metadata !2, metadata !3, i64 16}
!8 = metadata !{metadata !2, metadata !3, i64 24}
!9 = metadata !{metadata !2, metadata !3, i64 32}
!10 = metadata !{metadata !2, metadata !3, i64 40}
!11 = metadata !{metadata !2, metadata !3, i64 48}
!12 = metadata !{metadata !13, metadata !3, i64 16}
!13 = metadata !{metadata !"splay_tree_node_s", metadata !14, i64 0, metadata !14, i64 8, metadata !3, i64 16, metadata !3, i64 24}
!14 = metadata !{metadata !"long", metadata !4, i64 0}
!15 = metadata !{metadata !13, metadata !3, i64 24}
!16 = metadata !{metadata !13, metadata !14, i64 0}
!17 = metadata !{metadata !13, metadata !14, i64 8}
!18 = metadata !{metadata !3, metadata !3, i64 0}
