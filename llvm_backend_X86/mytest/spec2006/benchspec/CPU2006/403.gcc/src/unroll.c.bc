; ModuleID = 'unroll.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type opaque
%struct._factor = type { i32, i32 }
%struct.rtx_def = type { i32, [1 x %union.rtunion_def] }
%union.rtunion_def = type { i64 }
%struct.induction = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32, %struct.rtx_def*, %struct.rtx_def**, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32, %struct.rtx_def*, i32, i16, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.induction*, %struct.induction*, i64, %struct.induction*, %struct.rtx_def* }
%struct.varray_head_tag = type { i64, i64, i64, i8*, %union.varray_data_tag }
%union.varray_data_tag = type { [1 x %struct.const_equiv_data] }
%struct.const_equiv_data = type { %struct.rtx_def*, i32 }
%struct.function = type { %struct.eh_status*, %struct.stmt_status*, %struct.expr_status*, %struct.emit_status*, %struct.varasm_status*, i8*, %union.tree_node*, %struct.function*, i32, i32, i32, i32, %struct.rtx_def*, %struct.ix86_args, %struct.rtx_def*, %struct.rtx_def*, i8*, %struct.initial_value_struct*, i32, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i64, %union.tree_node*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, %struct.rtx_def**, %struct.temp_slot*, i32, i32, i32, %struct.var_refs_queue*, i32, i32, i8*, %union.tree_node*, %struct.rtx_def*, i32, i32, %struct.machine_function*, i32, i32, %struct.language_function*, %struct.rtx_def*, i24 }
%struct.eh_status = type opaque
%struct.stmt_status = type opaque
%struct.expr_status = type { i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def* }
%struct.emit_status = type { i32, i32, %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.sequence_stack*, i32, i32, i8*, i32, i8*, %union.tree_node**, %struct.rtx_def** }
%struct.sequence_stack = type { %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.sequence_stack* }
%struct.varasm_status = type opaque
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.initial_value_struct = type opaque
%struct.temp_slot = type opaque
%struct.var_refs_queue = type { %struct.rtx_def*, i32, i32, %struct.var_refs_queue* }
%union.tree_node = type opaque
%struct.machine_function = type opaque
%struct.language_function = type opaque
%struct.loop = type { i32, %struct.basic_block_def*, %struct.basic_block_def*, %struct.basic_block_def*, %struct.edge_def**, i32, %struct.basic_block_def*, %struct.basic_block_def*, %struct.simple_bitmap_def*, i32, %struct.edge_def**, i32, %struct.edge_def**, i32, %struct.simple_bitmap_def*, i32, i32, %struct.loop*, %struct.loop*, %struct.loop*, i32, i32, i8*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32 }
%struct.basic_block_def = type { %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %union.tree_node*, %struct.edge_def*, %struct.edge_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, i8*, i32, i32, i64, i32, i32 }
%struct.edge_def = type { %struct.edge_def*, %struct.edge_def*, %struct.basic_block_def*, %struct.basic_block_def*, %struct.rtx_def*, i8*, i32, i32, i64 }
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32 }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.simple_bitmap_def = type { i32, i32, i32, [1 x i64] }
%struct.inline_remap = type { i32, %union.tree_node*, %struct.rtx_def*, %struct.varray_head_tag*, %struct.rtx_def**, %struct.rtx_def**, %struct.rtx_def**, i32, i32, %struct.varray_head_tag*, i32, %struct.rtx_def*, %struct.rtvec_def*, %struct.rtvec_def*, %struct.rtvec_def*, %struct.rtx_def*, i8*, %struct.rtx_def**, i32, [30 x %struct.equiv_table], %struct.rtx_def*, %struct.rtx_def*, i32 }
%struct.rtvec_def = type { i32, [1 x %struct.rtx_def*] }
%struct.equiv_table = type { %struct.rtx_def*, %struct.rtx_def* }
%struct.reg_info_def = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }
%struct.iv_class = type { i32, i32, %struct.induction*, i32, %struct.induction*, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.iv_class*, %struct.rtx_def*, %struct.rtx_def*, i8 }
%struct.iv = type { i32, %union.anon }
%union.anon = type { %struct.iv_class* }

@loop_dump_stream = external global %struct._IO_FILE*
@.str = private unnamed_addr constant [34 x i8] c"Unrolling failure: Loop too big.\0A\00", align 1
@.str1 = private unnamed_addr constant [46 x i8] c"Unrolling failure: cannot unroll EH regions.\0A\00", align 1
@.str2 = private unnamed_addr constant [44 x i8] c"Unrolling failure: Unbalanced block notes.\0A\00", align 1
@.str3 = private unnamed_addr constant [17 x i8] c"Loop unrolling: \00", align 1
@.str4 = private unnamed_addr constant [5 x i8] c"%lld\00", align 1
@.str5 = private unnamed_addr constant [14 x i8] c" iterations.\0A\00", align 1
@factors = internal unnamed_addr global [4 x %struct._factor] [%struct._factor { i32 2, i32 0 }, %struct._factor { i32 3, i32 0 }, %struct._factor { i32 5, i32 0 }, %struct._factor { i32 7, i32 0 }], align 16
@.str6 = private unnamed_addr constant [35 x i8] c"Loop unrolling: No factors found.\0A\00", align 1
@.str7 = private unnamed_addr constant [26 x i8] c"Unrolling loop %d times.\0A\00", align 1
@.str8 = private unnamed_addr constant [56 x i8] c"Unrolling failure: loop does not end with a JUMP_INSN.\0A\00", align 1
@.str9 = private unnamed_addr constant [54 x i8] c"Splitting not safe, because loop not entered at top.\0A\00", align 1
@.str10 = private unnamed_addr constant [67 x i8] c"Unrolling failure: unknown insns between BEG note and loop label.\0A\00", align 1
@.str11 = private unnamed_addr constant [45 x i8] c"Unrolling failure: loop start label is gone\0A\00", align 1
@.str12 = private unnamed_addr constant [63 x i8] c"Unrolling failure: final conditional branch not to loop start\0A\00", align 1
@splittable_regs = internal unnamed_addr global %struct.rtx_def** null, align 8
@splittable_regs_updates = internal unnamed_addr global i32* null, align 8
@addr_combined_regs = internal unnamed_addr global %struct.induction** null, align 8
@max_uid_for_loop = external global i32
@uid_luid = external global i32*
@.str13 = private unnamed_addr constant [9 x i8] c"unroll.c\00", align 1
@__FUNCTION__.unroll_loop = private unnamed_addr constant [12 x i8] c"unroll_loop\00", align 1
@max_reg_before_loop = external global i32
@reg_n_info = external global %struct.varray_head_tag*
@.str14 = private unnamed_addr constant [24 x i8] c"Marked reg %d as local\0A\00", align 1
@.str15 = private unnamed_addr constant [30 x i8] c"Did not mark reg %d as local\0A\00", align 1
@.str16 = private unnamed_addr constant [25 x i8] c"unroll_loop_precondition\00", align 1
@global_const_equiv_varray = external global %struct.varray_head_tag*
@cfun = external global %struct.function*
@flag_unroll_all_loops = external global i32
@.str17 = private unnamed_addr constant [52 x i8] c"Unrolling failure: Naive unrolling not being done.\0A\00", align 1
@const_int_rtx = external global [129 x %struct.rtx_def*]
@word_mode = external global i32
@.str18 = private unnamed_addr constant [55 x i8] c"Preconditioning: Success, number of iterations known, \00", align 1
@.str19 = private unnamed_addr constant [3 x i8] c".\0A\00", align 1
@.str20 = private unnamed_addr constant [53 x i8] c"Preconditioning: Could not find iteration variable.\0A\00", align 1
@.str21 = private unnamed_addr constant [48 x i8] c"Preconditioning: Could not find initial value.\0A\00", align 1
@.str22 = private unnamed_addr constant [50 x i8] c"Preconditioning: Could not find increment value.\0A\00", align 1
@.str23 = private unnamed_addr constant [44 x i8] c"Preconditioning: Increment not a constant.\0A\00", align 1
@.str24 = private unnamed_addr constant [55 x i8] c"Preconditioning: Increment not a constant power of 2.\0A\00", align 1
@.str25 = private unnamed_addr constant [38 x i8] c"Preconditioning: EQ comparison loop.\0A\00", align 1
@.str26 = private unnamed_addr constant [45 x i8] c"Preconditioning: Final value not invariant.\0A\00", align 1
@mode_class = external constant [59 x i32]
@.str27 = private unnamed_addr constant [57 x i8] c"Preconditioning: Floating point final or initial value.\0A\00", align 1
@__FUNCTION__.precondition_loop_p = private unnamed_addr constant [20 x i8] c"precondition_loop_p\00", align 1
@.str28 = private unnamed_addr constant [60 x i8] c"Preconditioning: Iteration var not live before loop start.\0A\00", align 1
@mode_size = external constant [59 x i8]
@.str29 = private unnamed_addr constant [30 x i8] c"Preconditioning: Successful.\0A\00", align 1
@.str30 = private unnamed_addr constant [39 x i8] c"Final biv value for %d, reversed biv.\0A\00", align 1
@.str31 = private unnamed_addr constant [37 x i8] c"Final biv value for %d, calculated.\0A\00", align 1
@.str32 = private unnamed_addr constant [51 x i8] c"Final biv value for %d, biv dead after loop exit.\0A\00", align 1
@.str33 = private unnamed_addr constant [49 x i8] c"Final giv value for %d, depends on reversed biv\0A\00", align 1
@.str34 = private unnamed_addr constant [48 x i8] c"Final giv value for %d, calc from biv's value.\0A\00", align 1
@__FUNCTION__.final_giv_value = private unnamed_addr constant [16 x i8] c"final_giv_value\00", align 1
@.str35 = private unnamed_addr constant [51 x i8] c"Final giv value for %d, giv dead after loop exit.\0A\00", align 1
@.str36 = private unnamed_addr constant [53 x i8] c"Loop iterations: No final conditional branch found.\0A\00", align 1
@.str37 = private unnamed_addr constant [48 x i8] c"Loop iterations: Loop has multiple back edges.\0A\00", align 1
@.str38 = private unnamed_addr constant [49 x i8] c"Loop iterations: Jump insn has null JUMP_LABEL.\0A\00", align 1
@__FUNCTION__.loop_iterations = private unnamed_addr constant [16 x i8] c"loop_iterations\00", align 1
@.str39 = private unnamed_addr constant [45 x i8] c"Loop iterations: No final comparison found.\0A\00", align 1
@.str40 = private unnamed_addr constant [51 x i8] c"Loop iterations: Comparison not against register.\0A\00", align 1
@.str41 = private unnamed_addr constant [58 x i8] c"Loop iterations: No reg_iv_type entry for iteration var.\0A\00", align 1
@mode_bitsize = external constant [59 x i16]
@.str42 = private unnamed_addr constant [65 x i8] c"Loop iterations: Iteration var rejected because mode too large.\0A\00", align 1
@.str43 = private unnamed_addr constant [48 x i8] c"Loop iterations: Iteration var not an integer.\0A\00", align 1
@.str44 = private unnamed_addr constant [70 x i8] c"Loop iterations: Basic induction var not set once in each iteration.\0A\00", align 1
@.str45 = private unnamed_addr constant [72 x i8] c"Loop iterations: General induction var not set once in each iteration.\0A\00", align 1
@.str46 = private unnamed_addr constant [57 x i8] c"Loop iterations: Basic induction var add_val is REG %d.\0A\00", align 1
@.str47 = private unnamed_addr constant [56 x i8] c"Loop iterations: Giv iterator, initial value bias %ld.\0A\00", align 1
@.str48 = private unnamed_addr constant [54 x i8] c"Loop iterations: Not basic or general induction var.\0A\00", align 1
@.str49 = private unnamed_addr constant [55 x i8] c"Loop iterations: Increment value can't be calculated.\0A\00", align 1
@.str50 = private unnamed_addr constant [47 x i8] c"Loop iterations: Increment value not constant \00", align 1
@.str51 = private unnamed_addr constant [45 x i8] c"Loop iterations: Initial value not constant \00", align 1
@.str52 = private unnamed_addr constant [38 x i8] c"Loop iterations: EQ comparison loop.\0A\00", align 1
@.str53 = private unnamed_addr constant [43 x i8] c"Loop iterations: Final value not constant \00", align 1
@.str54 = private unnamed_addr constant [35 x i8] c"Loop iterations: Not normal loop.\0A\00", align 1
@rtx_class = external constant [153 x i8]
@rtx_format = external constant [153 x i8*]
@rtx_length = external constant [153 x i8]
@__FUNCTION__.subtract_reg_term = private unnamed_addr constant [18 x i8] c"subtract_reg_term\00", align 1
@__FUNCTION__.find_splittable_regs = private unnamed_addr constant [21 x i8] c"find_splittable_regs\00", align 1
@.str55 = private unnamed_addr constant [38 x i8] c"Biv %d initial value remapped to %d.\0A\00", align 1
@.str56 = private unnamed_addr constant [23 x i8] c"Biv %d safe to split.\0A\00", align 1
@.str57 = private unnamed_addr constant [32 x i8] c"Biv %d mapped to %d for split.\0A\00", align 1
@__FUNCTION__.find_splittable_givs = private unnamed_addr constant [21 x i8] c"find_splittable_givs\00", align 1
@.str58 = private unnamed_addr constant [44 x i8] c"giv combined with unreduced giv not split.\0A\00", align 1
@.str59 = private unnamed_addr constant [33 x i8] c"Sharing address givs in insn %d\0A\00", align 1
@.str60 = private unnamed_addr constant [34 x i8] c"Eliminating constant from giv %d\0A\00", align 1
@.str61 = private unnamed_addr constant [36 x i8] c"Invalid address for giv at insn %d\0A\00", align 1
@.str62 = private unnamed_addr constant [31 x i8] c"Invalid init insn, rewritten.\0A\00", align 1
@.str63 = private unnamed_addr constant [28 x i8] c"DEST_ADDR giv being split.\0A\00", align 1
@.str64 = private unnamed_addr constant [34 x i8] c"Giv %d at insn %d safe to split.\0A\00", align 1
@__FUNCTION__.verify_addresses = private unnamed_addr constant [17 x i8] c"verify_addresses\00", align 1
@__FUNCTION__.fold_rtx_mult_add = private unnamed_addr constant [18 x i8] c"fold_rtx_mult_add\00", align 1
@__FUNCTION__.copy_loop_body = private unnamed_addr constant [15 x i8] c"copy_loop_body\00", align 1
@global_rtl = external global [11 x %struct.rtx_def*]
@__FUNCTION__.final_reg_note_copy = private unnamed_addr constant [20 x i8] c"final_reg_note_copy\00", align 1
@__FUNCTION__.initial_reg_note_copy = private unnamed_addr constant [22 x i8] c"initial_reg_note_copy\00", align 1
@__FUNCTION__.calculate_giv_inc = private unnamed_addr constant [18 x i8] c"calculate_giv_inc\00", align 1

; Function Attrs: nounwind uwtable
define void @unroll_loop(%struct.loop* %loop, i32 %insn_count, i32 %strength_reduce_p) #0 {
entry:
  %initial_value = alloca %struct.rtx_def*, align 8
  %final_value = alloca %struct.rtx_def*, align 8
  %increment = alloca %struct.rtx_def*, align 8
  %mode = alloca i32, align 4
  %aux = getelementptr inbounds %struct.loop* %loop, i64 0, i32 22
  %0 = load i8** %aux, align 8, !tbaa !1
  %start = getelementptr inbounds %struct.loop* %loop, i64 0, i32 26
  %1 = load %struct.rtx_def** %start, align 8, !tbaa !7
  %end = getelementptr inbounds %struct.loop* %loop, i64 0, i32 27
  %2 = load %struct.rtx_def** %end, align 8, !tbaa !8
  %cmp = icmp sgt i32 %insn_count, 50
  br i1 %cmp, label %if.then, label %for.cond.preheader

for.cond.preheader:                               ; preds = %entry
  %cmp51873 = icmp eq %struct.rtx_def* %1, %2
  br i1 %cmp51873, label %if.end41, label %for.body

if.then:                                          ; preds = %entry
  %3 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !9
  %tobool = icmp eq %struct._IO_FILE* %3, null
  br i1 %tobool, label %return, label %if.then3

if.then3:                                         ; preds = %if.then
  %4 = tail call i64 @fwrite(i8* getelementptr inbounds ([34 x i8]* @.str, i64 0, i64 0), i64 33, i64 1, %struct._IO_FILE* %3)
  br label %return

for.body:                                         ; preds = %for.cond.preheader, %for.inc
  %insn.01876 = phi %struct.rtx_def* [ %10, %for.inc ], [ %1, %for.cond.preheader ]
  %block_ends.01875 = phi i32 [ %block_ends.2, %for.inc ], [ 0, %for.cond.preheader ]
  %block_begins.01874 = phi i32 [ %block_begins.2, %for.inc ], [ 0, %for.cond.preheader ]
  %5 = getelementptr inbounds %struct.rtx_def* %insn.01876, i64 0, i32 0
  %bf.load = load i32* %5, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp6 = icmp eq i32 %bf.clear, 37
  br i1 %cmp6, label %if.then7, label %for.inc

if.then7:                                         ; preds = %for.body
  %arrayidx = getelementptr inbounds %struct.rtx_def* %insn.01876, i64 0, i32 1, i64 4
  %rtint = bitcast %union.rtunion_def* %arrayidx to i32*
  %6 = load i32* %rtint, align 4, !tbaa !10
  switch i32 %6, label %if.end17 [
    i32 -98, label %if.then9
    i32 -97, label %if.then14
  ]

if.then9:                                         ; preds = %if.then7
  %inc = add nsw i32 %block_begins.01874, 1
  br label %for.inc

if.then14:                                        ; preds = %if.then7
  %inc15 = add nsw i32 %block_ends.01875, 1
  br label %for.inc

if.end17:                                         ; preds = %if.then7
  %7 = and i32 %6, -2
  %switch = icmp eq i32 %7, -86
  br i1 %switch, label %if.then26, label %for.inc

if.then26:                                        ; preds = %if.end17
  %8 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !9
  %tobool27 = icmp eq %struct._IO_FILE* %8, null
  br i1 %tobool27, label %return, label %if.then28

if.then28:                                        ; preds = %if.then26
  %9 = tail call i64 @fwrite(i8* getelementptr inbounds ([46 x i8]* @.str1, i64 0, i64 0), i64 45, i64 1, %struct._IO_FILE* %8)
  br label %return

for.inc:                                          ; preds = %if.then9, %if.then14, %if.end17, %for.body
  %block_begins.2 = phi i32 [ %block_begins.01874, %for.body ], [ %block_begins.01874, %if.end17 ], [ %block_begins.01874, %if.then14 ], [ %inc, %if.then9 ]
  %block_ends.2 = phi i32 [ %block_ends.01875, %for.body ], [ %block_ends.01875, %if.end17 ], [ %inc15, %if.then14 ], [ %block_ends.01875, %if.then9 ]
  %arrayidx34 = getelementptr inbounds %struct.rtx_def* %insn.01876, i64 0, i32 1, i64 2
  %rtx = bitcast %union.rtunion_def* %arrayidx34 to %struct.rtx_def**
  %10 = load %struct.rtx_def** %rtx, align 8, !tbaa !9
  %cmp5 = icmp eq %struct.rtx_def* %10, %2
  br i1 %cmp5, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc
  %cmp35 = icmp eq i32 %block_begins.2, %block_ends.2
  br i1 %cmp35, label %if.end41, label %if.then36

if.then36:                                        ; preds = %for.end
  %11 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !9
  %tobool37 = icmp eq %struct._IO_FILE* %11, null
  br i1 %tobool37, label %return, label %if.then38

if.then38:                                        ; preds = %if.then36
  %12 = tail call i64 @fwrite(i8* getelementptr inbounds ([44 x i8]* @.str2, i64 0, i64 0), i64 43, i64 1, %struct._IO_FILE* %11)
  br label %return

if.end41:                                         ; preds = %for.cond.preheader, %for.end
  %tobool42 = icmp ne i32 %strength_reduce_p, 0
  br i1 %tobool42, label %if.end44, label %if.then43

if.then43:                                        ; preds = %if.end41
  %n_iterations = getelementptr inbounds i8* %0, i64 96
  %13 = bitcast i8* %n_iterations to i64*
  store i64 0, i64* %13, align 8, !tbaa !11
  br label %if.end44

if.end44:                                         ; preds = %if.then43, %if.end41
  %14 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !9
  %tobool45 = icmp eq %struct._IO_FILE* %14, null
  %n_iterations55.pre = getelementptr inbounds i8* %0, i64 96
  %.pre1928 = bitcast i8* %n_iterations55.pre to i64*
  br i1 %tobool45, label %if.end53, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end44
  %15 = load i64* %.pre1928, align 8, !tbaa !11
  %cmp47 = icmp eq i64 %15, 0
  br i1 %cmp47, label %if.end53, label %if.then48

if.then48:                                        ; preds = %land.lhs.true
  %16 = tail call i64 @fwrite(i8* getelementptr inbounds ([17 x i8]* @.str3, i64 0, i64 0), i64 16, i64 1, %struct._IO_FILE* %14)
  %17 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !9
  %18 = load i64* %.pre1928, align 8, !tbaa !11
  %call51 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %17, i8* getelementptr inbounds ([5 x i8]* @.str4, i64 0, i64 0), i64 %18) #4
  %19 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !9
  %20 = tail call i64 @fwrite(i8* getelementptr inbounds ([14 x i8]* @.str5, i64 0, i64 0), i64 13, i64 1, %struct._IO_FILE* %19)
  br label %if.end53

if.end53:                                         ; preds = %if.end44, %land.lhs.true, %if.then48
  %call54 = tail call %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def* %2) #4
  %21 = load i64* %.pre1928, align 8, !tbaa !11
  switch i64 %21, label %land.lhs.true102 [
    i64 1, label %if.then57
    i64 0, label %if.then194
  ]

if.then57:                                        ; preds = %if.end53
  %22 = load %struct.rtx_def** %start, align 8, !tbaa !7
  %cont = getelementptr inbounds %struct.loop* %loop, i64 0, i32 24
  %23 = load %struct.rtx_def** %cont, align 8, !tbaa !17
  %call.i = tail call %struct.rtx_def* @next_nonnote_insn(%struct.rtx_def* %22) #4
  %call1.i = tail call %struct.rtx_def* @pc_set(%struct.rtx_def* %call.i) #4
  %tobool.i = icmp eq %struct.rtx_def* %call1.i, null
  br i1 %tobool.i, label %if.end63, label %if.end.i

if.end.i:                                         ; preds = %if.then57
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %call1.i, i64 0, i32 1, i64 1
  %rtx.i = bitcast %union.rtunion_def* %arrayidx.i to %struct.rtx_def**
  %24 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !9
  %tobool2.i = icmp eq %struct.rtx_def* %24, null
  br i1 %tobool2.i, label %if.end63, label %if.end4.i

if.end4.i:                                        ; preds = %if.end.i
  %call5.i = tail call %struct.rtx_def* @next_nonnote_insn(%struct.rtx_def* %23) #4
  %cmp.i = icmp eq %struct.rtx_def* %call5.i, null
  br i1 %cmp.i, label %if.end63, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %if.end4.i
  %25 = getelementptr inbounds %struct.rtx_def* %call5.i, i64 0, i32 0
  %bf.load.i = load i32* %25, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  %cmp6.i = icmp eq i32 %bf.clear.i, 36
  br i1 %cmp6.i, label %if.end8.i, label %if.end63

if.end8.i:                                        ; preds = %lor.lhs.false.i
  %arrayidx10.i = getelementptr inbounds %struct.rtx_def* %call5.i, i64 0, i32 1, i64 5
  %rtint.i = bitcast %union.rtunion_def* %arrayidx10.i to i32*
  %26 = load i32* %rtint.i, align 4, !tbaa !10
  %arrayidx12.i = getelementptr inbounds %struct.rtx_def* %24, i64 0, i32 1, i64 0
  %rtx13.i = bitcast %union.rtunion_def* %arrayidx12.i to %struct.rtx_def**
  %27 = load %struct.rtx_def** %rtx13.i, align 8, !tbaa !9
  %arrayidx15.i = getelementptr inbounds %struct.rtx_def* %27, i64 0, i32 1, i64 5
  %rtint16.i = bitcast %union.rtunion_def* %arrayidx15.i to i32*
  %28 = load i32* %rtint16.i, align 4, !tbaa !10
  %cmp17.i = icmp ne i32 %26, %28
  %tobool60 = icmp eq %struct.rtx_def* %call.i, null
  %or.cond1811 = or i1 %cmp17.i, %tobool60
  br i1 %or.cond1811, label %if.end63, label %if.then61

if.then61:                                        ; preds = %if.end8.i
  %call62 = tail call %struct.rtx_def* @delete_related_insns(%struct.rtx_def* %call.i) #4
  br label %if.end63

if.end63:                                         ; preds = %if.end8.i, %if.end4.i, %lor.lhs.false.i, %if.end.i, %if.then57, %if.then61
  %29 = getelementptr inbounds %struct.rtx_def* %call54, i64 0, i32 0
  %bf.load64 = load i32* %29, align 8
  %bf.clear65 = and i32 %bf.load64, 65535
  switch i32 %bf.clear65, label %if.end79 [
    i32 35, label %if.then67
    i32 33, label %if.then76
  ]

if.then67:                                        ; preds = %if.end63
  %arrayidx69 = getelementptr inbounds %struct.rtx_def* %call54, i64 0, i32 1, i64 1
  %rtx70 = bitcast %union.rtunion_def* %arrayidx69 to %struct.rtx_def**
  %30 = load %struct.rtx_def** %rtx70, align 8, !tbaa !9
  %call71 = tail call %struct.rtx_def* @delete_related_insns(%struct.rtx_def* %30) #4
  br label %if.end79

if.then76:                                        ; preds = %if.end63
  %call77 = tail call %struct.rtx_def* @delete_related_insns(%struct.rtx_def* %call54) #4
  br label %if.end79

if.end79:                                         ; preds = %if.end63, %if.then76, %if.then67
  %vtop = getelementptr inbounds %struct.loop* %loop, i64 0, i32 23
  %31 = load %struct.rtx_def** %vtop, align 8, !tbaa !18
  %tobool80 = icmp eq %struct.rtx_def* %31, null
  br i1 %tobool80, label %if.end84, label %if.then81

if.then81:                                        ; preds = %if.end79
  %call83 = tail call %struct.rtx_def* @delete_related_insns(%struct.rtx_def* %31) #4
  br label %if.end84

if.end84:                                         ; preds = %if.end79, %if.then81
  %32 = load %struct.rtx_def** %cont, align 8, !tbaa !17
  %tobool86 = icmp eq %struct.rtx_def* %32, null
  br i1 %tobool86, label %if.end90, label %if.then87

if.then87:                                        ; preds = %if.end84
  %call89 = tail call %struct.rtx_def* @delete_related_insns(%struct.rtx_def* %32) #4
  br label %if.end90

if.end90:                                         ; preds = %if.end84, %if.then87
  %tobool91 = icmp eq %struct.rtx_def* %1, null
  br i1 %tobool91, label %if.end94, label %if.then92

if.then92:                                        ; preds = %if.end90
  %call93 = tail call %struct.rtx_def* @delete_related_insns(%struct.rtx_def* %1) #4
  br label %if.end94

if.end94:                                         ; preds = %if.end90, %if.then92
  %tobool95 = icmp eq %struct.rtx_def* %2, null
  br i1 %tobool95, label %return, label %if.then96

if.then96:                                        ; preds = %if.end94
  %call97 = tail call %struct.rtx_def* @delete_related_insns(%struct.rtx_def* %2) #4
  br label %return

land.lhs.true102:                                 ; preds = %if.end53
  %cmp104 = icmp ult i64 %21, 100
  br i1 %cmp104, label %land.lhs.true105, label %for.cond117.preheader

land.lhs.true105:                                 ; preds = %land.lhs.true102
  %conv = sext i32 %insn_count to i64
  %mul = mul i64 %21, %conv
  %cmp107 = icmp ult i64 %mul, 100
  br i1 %cmp107, label %if.then109, label %if.else112

if.then109:                                       ; preds = %land.lhs.true105
  %conv111 = trunc i64 %21 to i32
  br label %if.end207

if.else112:                                       ; preds = %land.lhs.true105
  %cmp114 = icmp eq i64 %21, 0
  br i1 %cmp114, label %if.then194, label %for.cond117.preheader

for.cond117.preheader:                            ; preds = %land.lhs.true102, %if.else112
  store i32 0, i32* getelementptr inbounds ([4 x %struct._factor]* @factors, i64 0, i64 0, i32 1), align 4, !tbaa !19
  store i32 0, i32* getelementptr inbounds ([4 x %struct._factor]* @factors, i64 0, i64 1, i32 1), align 4, !tbaa !19
  store i32 0, i32* getelementptr inbounds ([4 x %struct._factor]* @factors, i64 0, i64 2, i32 1), align 4, !tbaa !19
  store i32 0, i32* getelementptr inbounds ([4 x %struct._factor]* @factors, i64 0, i64 3, i32 1), align 4, !tbaa !19
  %33 = load i64* bitcast (i32* getelementptr inbounds ([4 x %struct._factor]* @factors, i64 0, i64 3, i32 0) to i64*), align 8
  %34 = trunc i64 %33 to i32
  %sext = shl i64 %33, 32
  %conv1321865 = ashr exact i64 %sext, 32
  %rem1866 = urem i64 %21, %conv1321865
  %cmp1331867 = icmp eq i64 %rem1866, 0
  %35 = lshr i64 %33, 32
  %36 = trunc i64 %35 to i32
  br i1 %cmp1331867, label %while.body, label %for.inc143

while.body:                                       ; preds = %for.cond117.preheader, %while.body
  %37 = phi i32 [ %inc138, %while.body ], [ %36, %for.cond117.preheader ]
  %temp.11868 = phi i64 [ %div, %while.body ], [ %21, %for.cond117.preheader ]
  %inc138 = add nsw i32 %37, 1
  %div = udiv i64 %temp.11868, %conv1321865
  %rem = urem i64 %div, %conv1321865
  %cmp133 = icmp eq i64 %rem, 0
  br i1 %cmp133, label %while.body, label %while.cond.for.inc143_crit_edge

while.cond.for.inc143_crit_edge:                  ; preds = %while.body
  store i32 %inc138, i32* getelementptr inbounds ([4 x %struct._factor]* @factors, i64 0, i64 3, i32 1), align 4, !tbaa !19
  br label %for.inc143

for.inc143:                                       ; preds = %while.cond.for.inc143_crit_edge, %for.cond117.preheader
  %38 = phi i32 [ %inc138, %while.cond.for.inc143_crit_edge ], [ %36, %for.cond117.preheader ]
  %temp.1.lcssa = phi i64 [ %div, %while.cond.for.inc143_crit_edge ], [ %21, %for.cond117.preheader ]
  %39 = load i64* bitcast (i32* getelementptr inbounds ([4 x %struct._factor]* @factors, i64 0, i64 2, i32 0) to i64*), align 16
  %40 = trunc i64 %39 to i32
  %sext1930 = shl i64 %39, 32
  %conv1321865.1 = ashr exact i64 %sext1930, 32
  %rem1866.1 = urem i64 %temp.1.lcssa, %conv1321865.1
  %cmp1331867.1 = icmp eq i64 %rem1866.1, 0
  %41 = lshr i64 %39, 32
  %42 = trunc i64 %41 to i32
  br i1 %cmp1331867.1, label %while.body.1, label %for.inc143.1

while.body156:                                    ; preds = %for.inc143.3, %if.then164
  %43 = phi i32 [ %dec154, %if.then164 ], [ %dec1541854, %for.inc143.3 ]
  %temp.31857 = phi i64 [ %mul161, %if.then164 ], [ %conv145, %for.inc143.3 ]
  %unroll_number.11856 = phi i32 [ %mul168, %if.then164 ], [ 1, %for.inc143.3 ]
  %mul161 = mul i64 %conv1321865, %temp.31857
  %cmp162 = icmp ult i64 %mul161, 100
  br i1 %cmp162, label %if.then164, label %for.inc177

if.then164:                                       ; preds = %while.body156
  %mul168 = mul nsw i32 %34, %unroll_number.11856
  %dec154 = add nsw i32 %43, -1
  store i32 %dec154, i32* getelementptr inbounds ([4 x %struct._factor]* @factors, i64 0, i64 3, i32 1), align 4, !tbaa !19
  %tobool155 = icmp eq i32 %43, 0
  br i1 %tobool155, label %for.inc177, label %while.body156

for.inc177:                                       ; preds = %while.body156, %if.then164, %for.inc143.3
  %temp.3.lcssa = phi i64 [ %conv145, %for.inc143.3 ], [ %temp.31857, %while.body156 ], [ %mul161, %if.then164 ]
  %unroll_number.1.lcssa = phi i32 [ 1, %for.inc143.3 ], [ %unroll_number.11856, %while.body156 ], [ %mul168, %if.then164 ]
  %dec1541854.1 = add nsw i32 %593, -1
  store i32 %dec1541854.1, i32* getelementptr inbounds ([4 x %struct._factor]* @factors, i64 0, i64 2, i32 1), align 4, !tbaa !19
  %tobool1551855.1 = icmp eq i32 %593, 0
  br i1 %tobool1551855.1, label %for.inc177.1, label %while.body156.1

if.then182:                                       ; preds = %for.inc177.3
  %44 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !9
  %tobool183 = icmp eq %struct._IO_FILE* %44, null
  br i1 %tobool183, label %if.then194, label %if.then184

if.then184:                                       ; preds = %if.then182
  %45 = tail call i64 @fwrite(i8* getelementptr inbounds ([35 x i8]* @.str6, i64 0, i64 0), i64 34, i64 1, %struct._IO_FILE* %44)
  br label %if.then194

if.then194:                                       ; preds = %if.end53, %if.then184, %if.then182, %if.else112
  %mul195 = shl nsw i32 %insn_count, 3
  %cmp196 = icmp slt i32 %mul195, 100
  br i1 %cmp196, label %if.end207, label %if.else199

if.else199:                                       ; preds = %if.then194
  %46 = trunc i32 %insn_count to i30
  %cmp201 = icmp slt i30 %46, 25
  %. = select i1 %cmp201, i32 4, i32 2
  br label %if.end207

if.end207:                                        ; preds = %for.inc177.3, %if.then109, %if.else199, %if.then194
  %cmp1921786 = phi i1 [ true, %if.then194 ], [ true, %if.else199 ], [ false, %if.then109 ], [ false, %for.inc177.3 ]
  %unroll_type.01784 = phi i32 [ 2, %if.then194 ], [ 2, %if.else199 ], [ 0, %if.then109 ], [ 1, %for.inc177.3 ]
  %unroll_number.3 = phi i32 [ 8, %if.then194 ], [ %., %if.else199 ], [ %conv111, %if.then109 ], [ %unroll_number.1.lcssa.3, %for.inc177.3 ]
  %47 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !9
  %tobool208 = icmp eq %struct._IO_FILE* %47, null
  br i1 %tobool208, label %if.end211, label %if.then209

if.then209:                                       ; preds = %if.end207
  %call210 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %47, i8* getelementptr inbounds ([26 x i8]* @.str7, i64 0, i64 0), i32 %unroll_number.3) #4
  br label %if.end211

if.end211:                                        ; preds = %if.end207, %if.then209
  %48 = and i32 %unroll_type.01784, 2
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %while.cond218, label %if.end238

while.cond218:                                    ; preds = %if.end211, %while.body227
  %insn.1 = phi %struct.rtx_def* [ %51, %while.body227 ], [ %1, %if.end211 ]
  %50 = getelementptr inbounds %struct.rtx_def* %insn.1, i64 0, i32 0
  %bf.load219 = load i32* %50, align 8
  %bf.clear220 = and i32 %bf.load219, 65535
  switch i32 %bf.clear220, label %while.body227 [
    i32 33, label %return
    i32 36, label %if.end238
  ]

while.body227:                                    ; preds = %while.cond218
  %arrayidx229 = getelementptr inbounds %struct.rtx_def* %insn.1, i64 0, i32 1, i64 2
  %rtx230 = bitcast %union.rtunion_def* %arrayidx229 to %struct.rtx_def**
  %51 = load %struct.rtx_def** %rtx230, align 8, !tbaa !9
  br label %while.cond218

if.end238:                                        ; preds = %while.cond218, %if.end211
  switch i32 %unroll_type.01784, label %if.else303 [
    i32 0, label %if.then241
    i32 1, label %if.then275
  ]

if.then241:                                       ; preds = %if.end238
  %arrayidx243 = getelementptr inbounds %struct.rtx_def* %call54, i64 0, i32 1, i64 2
  %rtx244 = bitcast %union.rtunion_def* %arrayidx243 to %struct.rtx_def**
  %52 = load %struct.rtx_def** %rtx244, align 8, !tbaa !9
  %53 = getelementptr inbounds %struct.rtx_def* %call54, i64 0, i32 0
  %bf.load245 = load i32* %53, align 8
  %bf.clear246 = and i32 %bf.load245, 65535
  switch i32 %bf.clear246, label %if.else265 [
    i32 35, label %if.then249
    i32 33, label %if.then261
  ]

if.then249:                                       ; preds = %if.then241
  %arrayidx251 = getelementptr inbounds %struct.rtx_def* %call54, i64 0, i32 1, i64 1
  %rtx252 = bitcast %union.rtunion_def* %arrayidx251 to %struct.rtx_def**
  %54 = load %struct.rtx_def** %rtx252, align 8, !tbaa !9
  %arrayidx254 = getelementptr inbounds %struct.rtx_def* %54, i64 0, i32 1, i64 1
  %rtx255 = bitcast %union.rtunion_def* %arrayidx254 to %struct.rtx_def**
  %55 = load %struct.rtx_def** %rtx255, align 8, !tbaa !9
  br label %if.end363

if.then261:                                       ; preds = %if.then241
  %arrayidx263 = getelementptr inbounds %struct.rtx_def* %call54, i64 0, i32 1, i64 1
  %rtx264 = bitcast %union.rtunion_def* %arrayidx263 to %struct.rtx_def**
  %56 = load %struct.rtx_def** %rtx264, align 8, !tbaa !9
  br label %if.end363

if.else265:                                       ; preds = %if.then241
  %57 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !9
  %tobool266 = icmp eq %struct._IO_FILE* %57, null
  br i1 %tobool266, label %return, label %if.then267

if.then267:                                       ; preds = %if.else265
  %58 = tail call i64 @fwrite(i8* getelementptr inbounds ([56 x i8]* @.str8, i64 0, i64 0), i64 55, i64 1, %struct._IO_FILE* %57)
  br label %return

if.then275:                                       ; preds = %if.end238
  %59 = getelementptr inbounds %struct.rtx_def* %call54, i64 0, i32 0
  %bf.load276 = load i32* %59, align 8
  %bf.clear277 = and i32 %bf.load276, 65535
  switch i32 %bf.clear277, label %if.else296 [
    i32 35, label %if.then280
    i32 33, label %if.then292
  ]

if.then280:                                       ; preds = %if.then275
  %arrayidx282 = getelementptr inbounds %struct.rtx_def* %call54, i64 0, i32 1, i64 1
  %rtx283 = bitcast %union.rtunion_def* %arrayidx282 to %struct.rtx_def**
  %60 = load %struct.rtx_def** %rtx283, align 8, !tbaa !9
  %arrayidx285 = getelementptr inbounds %struct.rtx_def* %60, i64 0, i32 1, i64 1
  %rtx286 = bitcast %union.rtunion_def* %arrayidx285 to %struct.rtx_def**
  %61 = load %struct.rtx_def** %rtx286, align 8, !tbaa !9
  br label %if.end363

if.then292:                                       ; preds = %if.then275
  %arrayidx294 = getelementptr inbounds %struct.rtx_def* %call54, i64 0, i32 1, i64 1
  %rtx295 = bitcast %union.rtunion_def* %arrayidx294 to %struct.rtx_def**
  %62 = load %struct.rtx_def** %rtx295, align 8, !tbaa !9
  br label %if.end363

if.else296:                                       ; preds = %if.then275
  %63 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !9
  %tobool297 = icmp eq %struct._IO_FILE* %63, null
  br i1 %tobool297, label %return, label %if.then298

if.then298:                                       ; preds = %if.else296
  %64 = tail call i64 @fwrite(i8* getelementptr inbounds ([56 x i8]* @.str8, i64 0, i64 0), i64 55, i64 1, %struct._IO_FILE* %63)
  br label %return

if.else303:                                       ; preds = %if.end238
  %65 = getelementptr inbounds %struct.rtx_def* %call54, i64 0, i32 0
  %bf.load304 = load i32* %65, align 8
  %bf.clear305 = and i32 %bf.load304, 65535
  switch i32 %bf.clear305, label %if.else324 [
    i32 35, label %if.then308
    i32 33, label %if.then320
  ]

if.then308:                                       ; preds = %if.else303
  %arrayidx310 = getelementptr inbounds %struct.rtx_def* %call54, i64 0, i32 1, i64 1
  %rtx311 = bitcast %union.rtunion_def* %arrayidx310 to %struct.rtx_def**
  %66 = load %struct.rtx_def** %rtx311, align 8, !tbaa !9
  %arrayidx313 = getelementptr inbounds %struct.rtx_def* %66, i64 0, i32 1, i64 1
  %rtx314 = bitcast %union.rtunion_def* %arrayidx313 to %struct.rtx_def**
  %67 = load %struct.rtx_def** %rtx314, align 8, !tbaa !9
  br label %if.end330

if.then320:                                       ; preds = %if.else303
  %arrayidx322 = getelementptr inbounds %struct.rtx_def* %call54, i64 0, i32 1, i64 2
  %rtx323 = bitcast %union.rtunion_def* %arrayidx322 to %struct.rtx_def**
  %68 = load %struct.rtx_def** %rtx323, align 8, !tbaa !9
  br label %if.end330

if.else324:                                       ; preds = %if.else303
  %69 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !9
  %tobool325 = icmp eq %struct._IO_FILE* %69, null
  br i1 %tobool325, label %return, label %if.then326

if.then326:                                       ; preds = %if.else324
  %70 = tail call i64 @fwrite(i8* getelementptr inbounds ([56 x i8]* @.str8, i64 0, i64 0), i64 55, i64 1, %struct._IO_FILE* %69)
  br label %return

if.end330:                                        ; preds = %if.then320, %if.then308
  %insert_before.0 = phi %struct.rtx_def* [ %66, %if.then308 ], [ %68, %if.then320 ]
  %copy_end.0 = phi %struct.rtx_def* [ %67, %if.then308 ], [ %call54, %if.then320 ]
  %call331 = tail call %struct.rtx_def* @gen_label_rtx() #4
  br label %while.cond332

while.cond332:                                    ; preds = %while.body343, %if.end330
  %insn.2 = phi %struct.rtx_def* [ %1, %if.end330 ], [ %72, %while.body343 ]
  %71 = getelementptr inbounds %struct.rtx_def* %insn.2, i64 0, i32 0
  %bf.load333 = load i32* %71, align 8
  %bf.clear334 = and i32 %bf.load333, 65535
  switch i32 %bf.clear334, label %while.body343 [
    i32 33, label %if.then352
    i32 36, label %if.end363
  ]

while.body343:                                    ; preds = %while.cond332
  %arrayidx345 = getelementptr inbounds %struct.rtx_def* %insn.2, i64 0, i32 1, i64 2
  %rtx346 = bitcast %union.rtunion_def* %arrayidx345 to %struct.rtx_def**
  %72 = load %struct.rtx_def** %rtx346, align 8, !tbaa !9
  br label %while.cond332

if.then352:                                       ; preds = %while.cond332
  %arrayidx354 = getelementptr inbounds %struct.rtx_def* %insn.2, i64 0, i32 1, i64 2
  %rtx355 = bitcast %union.rtunion_def* %arrayidx354 to %struct.rtx_def**
  %73 = load %struct.rtx_def** %rtx355, align 8, !tbaa !9
  %74 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !9
  %tobool356 = icmp eq %struct._IO_FILE* %74, null
  br i1 %tobool356, label %if.end363, label %if.then357

if.then357:                                       ; preds = %if.then352
  %75 = tail call i64 @fwrite(i8* getelementptr inbounds ([54 x i8]* @.str9, i64 0, i64 0), i64 53, i64 1, %struct._IO_FILE* %74)
  br label %if.end363

if.end363:                                        ; preds = %while.cond332, %if.then352, %if.then292, %if.then280, %if.then357, %if.then249, %if.then261
  %splitting_not_safe.0 = phi i32 [ 0, %if.then249 ], [ 0, %if.then261 ], [ 0, %if.then280 ], [ 0, %if.then292 ], [ 1, %if.then357 ], [ 1, %if.then352 ], [ 0, %while.cond332 ]
  %exit_label.0 = phi %struct.rtx_def* [ null, %if.then249 ], [ null, %if.then261 ], [ null, %if.then280 ], [ null, %if.then292 ], [ %call331, %if.then357 ], [ %call331, %if.then352 ], [ %call331, %while.cond332 ]
  %insert_before.1 = phi %struct.rtx_def* [ %52, %if.then249 ], [ %52, %if.then261 ], [ %60, %if.then280 ], [ %call54, %if.then292 ], [ %insert_before.0, %if.then357 ], [ %insert_before.0, %if.then352 ], [ %insert_before.0, %while.cond332 ]
  %copy_end.1 = phi %struct.rtx_def* [ %55, %if.then249 ], [ %56, %if.then261 ], [ %61, %if.then280 ], [ %62, %if.then292 ], [ %copy_end.0, %if.then357 ], [ %copy_end.0, %if.then352 ], [ %copy_end.0, %while.cond332 ]
  %copy_start.0 = phi %struct.rtx_def* [ %1, %if.then249 ], [ %1, %if.then261 ], [ %1, %if.then280 ], [ %1, %if.then292 ], [ %73, %if.then357 ], [ %73, %if.then352 ], [ %1, %while.cond332 ]
  %arrayidx365 = getelementptr inbounds %struct.rtx_def* %copy_start.0, i64 0, i32 1, i64 2
  %rtx366 = bitcast %union.rtunion_def* %arrayidx365 to %struct.rtx_def**
  br label %while.cond367

while.cond367:                                    ; preds = %while.body372, %if.end363
  %start_label.0.in = phi %struct.rtx_def** [ %rtx366, %if.end363 ], [ %rtx375, %while.body372 ]
  %start_label.0 = load %struct.rtx_def** %start_label.0.in, align 8
  %76 = getelementptr inbounds %struct.rtx_def* %start_label.0, i64 0, i32 0
  %bf.load368 = load i32* %76, align 8
  %bf.clear369 = and i32 %bf.load368, 65535
  switch i32 %bf.clear369, label %if.then381 [
    i32 37, label %while.body372
    i32 36, label %if.end386
  ]

while.body372:                                    ; preds = %while.cond367
  %arrayidx374 = getelementptr inbounds %struct.rtx_def* %start_label.0, i64 0, i32 1, i64 2
  %rtx375 = bitcast %union.rtunion_def* %arrayidx374 to %struct.rtx_def**
  br label %while.cond367

if.then381:                                       ; preds = %while.cond367
  %77 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !9
  %tobool382 = icmp eq %struct._IO_FILE* %77, null
  br i1 %tobool382, label %return, label %if.then383

if.then383:                                       ; preds = %if.then381
  %78 = tail call i64 @fwrite(i8* getelementptr inbounds ([67 x i8]* @.str10, i64 0, i64 0), i64 66, i64 1, %struct._IO_FILE* %77)
  br label %return

if.end386:                                        ; preds = %while.cond367
  %arrayidx388 = getelementptr inbounds %struct.rtx_def* %start_label.0, i64 0, i32 1, i64 6
  %rtstr = bitcast %union.rtunion_def* %arrayidx388 to i8**
  %79 = load i8** %rtstr, align 8, !tbaa !9
  %tobool389 = icmp eq i8* %79, null
  br i1 %tobool389, label %if.end395, label %if.then390

if.then390:                                       ; preds = %if.end386
  %80 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !9
  %tobool391 = icmp eq %struct._IO_FILE* %80, null
  br i1 %tobool391, label %return, label %if.then392

if.then392:                                       ; preds = %if.then390
  %81 = tail call i64 @fwrite(i8* getelementptr inbounds ([45 x i8]* @.str11, i64 0, i64 0), i64 44, i64 1, %struct._IO_FILE* %80)
  br label %return

if.end395:                                        ; preds = %if.end386
  br i1 %cmp1921786, label %land.lhs.true398, label %if.end443

land.lhs.true398:                                 ; preds = %if.end395
  %82 = getelementptr inbounds %struct.rtx_def* %call54, i64 0, i32 0
  %bf.load399 = load i32* %82, align 8
  %bf.clear400 = and i32 %bf.load399, 65535
  %cmp401 = icmp eq i32 %bf.clear400, 35
  br i1 %cmp401, label %land.lhs.true403, label %land.lhs.true427

land.lhs.true403:                                 ; preds = %land.lhs.true398
  %arrayidx405 = getelementptr inbounds %struct.rtx_def* %call54, i64 0, i32 1, i64 1
  %rtx406 = bitcast %union.rtunion_def* %arrayidx405 to %struct.rtx_def**
  %83 = load %struct.rtx_def** %rtx406, align 8, !tbaa !9
  %84 = getelementptr inbounds %struct.rtx_def* %83, i64 0, i32 0
  %bf.load407 = load i32* %84, align 8
  %bf.clear408 = and i32 %bf.load407, 65535
  %cmp409 = icmp eq i32 %bf.clear408, 33
  br i1 %cmp409, label %land.lhs.true411, label %if.end443

land.lhs.true411:                                 ; preds = %land.lhs.true403
  %arrayidx416 = getelementptr inbounds %struct.rtx_def* %83, i64 0, i32 1, i64 7
  %rtx417 = bitcast %union.rtunion_def* %arrayidx416 to %struct.rtx_def**
  %85 = load %struct.rtx_def** %rtx417, align 8, !tbaa !9
  %cmp418 = icmp eq %struct.rtx_def* %start_label.0, %85
  br i1 %cmp418, label %if.end443, label %if.then420

if.then420:                                       ; preds = %land.lhs.true411
  %arrayidx422 = getelementptr inbounds %struct.rtx_def* %call54, i64 0, i32 1, i64 2
  %rtx423 = bitcast %union.rtunion_def* %arrayidx422 to %struct.rtx_def**
  %86 = load %struct.rtx_def** %rtx423, align 8, !tbaa !9
  br label %land.lhs.true427

land.lhs.true427:                                 ; preds = %if.then420, %land.lhs.true398
  %copy_end.21795 = phi %struct.rtx_def* [ %copy_end.1, %land.lhs.true398 ], [ %call54, %if.then420 ]
  %insert_before.21793 = phi %struct.rtx_def* [ %insert_before.1, %land.lhs.true398 ], [ %86, %if.then420 ]
  %cmp430 = icmp eq i32 %bf.clear400, 33
  br i1 %cmp430, label %land.lhs.true432, label %if.end443

land.lhs.true432:                                 ; preds = %land.lhs.true427
  %arrayidx434 = getelementptr inbounds %struct.rtx_def* %call54, i64 0, i32 1, i64 7
  %rtx435 = bitcast %union.rtunion_def* %arrayidx434 to %struct.rtx_def**
  %87 = load %struct.rtx_def** %rtx435, align 8, !tbaa !9
  %cmp436 = icmp eq %struct.rtx_def* %start_label.0, %87
  br i1 %cmp436, label %if.end443, label %if.then438

if.then438:                                       ; preds = %land.lhs.true432
  %88 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !9
  %tobool439 = icmp eq %struct._IO_FILE* %88, null
  br i1 %tobool439, label %return, label %if.then440

if.then440:                                       ; preds = %if.then438
  %89 = tail call i64 @fwrite(i8* getelementptr inbounds ([63 x i8]* @.str12, i64 0, i64 0), i64 62, i64 1, %struct._IO_FILE* %88)
  br label %return

if.end443:                                        ; preds = %land.lhs.true411, %land.lhs.true403, %if.end395, %land.lhs.true432, %land.lhs.true427
  %copy_end.21794 = phi %struct.rtx_def* [ %copy_end.21795, %land.lhs.true432 ], [ %copy_end.21795, %land.lhs.true427 ], [ %copy_end.1, %if.end395 ], [ %copy_end.1, %land.lhs.true403 ], [ %copy_end.1, %land.lhs.true411 ]
  %insert_before.21792 = phi %struct.rtx_def* [ %insert_before.21793, %land.lhs.true432 ], [ %insert_before.21793, %land.lhs.true427 ], [ %insert_before.1, %if.end395 ], [ %insert_before.1, %land.lhs.true403 ], [ %insert_before.1, %land.lhs.true411 ]
  %call444 = tail call i32 @max_label_num() #4
  %call445 = tail call i32 @get_max_uid() #4
  %call446 = tail call noalias i8* @xcalloc(i64 1, i64 648) #4
  %90 = bitcast i8* %call446 to %struct.inline_remap*
  %cmp447 = icmp sgt i32 %call444, 0
  br i1 %cmp447, label %if.then449, label %if.end454

if.then449:                                       ; preds = %if.end443
  %conv450 = sext i32 %call444 to i64
  %call451 = tail call noalias i8* @xcalloc(i64 %conv450, i64 8) #4
  %91 = bitcast i8* %call451 to %struct.rtx_def**
  %label_map = getelementptr inbounds i8* %call446, i64 40
  %92 = bitcast i8* %label_map to %struct.rtx_def***
  store %struct.rtx_def** %91, %struct.rtx_def*** %92, align 8, !tbaa !21
  %call453 = tail call noalias i8* @xcalloc(i64 %conv450, i64 1) #4
  br label %if.end454

if.end454:                                        ; preds = %if.then449, %if.end443
  %local_label.0 = phi i8* [ %call453, %if.then449 ], [ null, %if.end443 ]
  %cmp4561852 = icmp eq %struct.rtx_def* %copy_start.0, %2
  br i1 %cmp4561852, label %for.end568, label %for.body458.lr.ph

for.body458.lr.ph:                                ; preds = %if.end454
  %label_map561 = getelementptr inbounds i8* %call446, i64 40
  %93 = bitcast i8* %label_map561 to %struct.rtx_def***
  br label %for.body458

for.body458:                                      ; preds = %for.body458.lr.ph, %for.inc564
  %insn.31853 = phi %struct.rtx_def* [ %copy_start.0, %for.body458.lr.ph ], [ %112, %for.inc564 ]
  %94 = getelementptr inbounds %struct.rtx_def* %insn.31853, i64 0, i32 0
  %bf.load459 = load i32* %94, align 8
  %bf.clear460 = and i32 %bf.load459, 65535
  switch i32 %bf.clear460, label %if.end547 [
    i32 36, label %if.then463
    i32 33, label %if.then474
  ]

if.then463:                                       ; preds = %for.body458
  %arrayidx465 = getelementptr inbounds %struct.rtx_def* %insn.31853, i64 0, i32 1, i64 5
  %rtint466 = bitcast %union.rtunion_def* %arrayidx465 to i32*
  %95 = load i32* %rtint466, align 4, !tbaa !10
  %idxprom467 = sext i32 %95 to i64
  %arrayidx468 = getelementptr inbounds i8* %local_label.0, i64 %idxprom467
  store i8 1, i8* %arrayidx468, align 1, !tbaa !23
  br label %if.end547

if.then474:                                       ; preds = %for.body458
  %arrayidx476 = getelementptr inbounds %struct.rtx_def* %insn.31853, i64 0, i32 1, i64 7
  %rtx477 = bitcast %union.rtunion_def* %arrayidx476 to %struct.rtx_def**
  %96 = load %struct.rtx_def** %rtx477, align 8, !tbaa !9
  %tobool478 = icmp eq %struct.rtx_def* %96, null
  br i1 %tobool478, label %if.else492, label %if.then479

if.then479:                                       ; preds = %if.then474
  %arrayidx487 = getelementptr inbounds %struct.rtx_def* %96, i64 0, i32 1, i64 5
  %rtint488 = bitcast %union.rtunion_def* %arrayidx487 to i32*
  %97 = load i32* %rtint488, align 4, !tbaa !10
  %idxprom489 = sext i32 %97 to i64
  %98 = load %struct.rtx_def*** %93, align 8, !tbaa !21
  %arrayidx491 = getelementptr inbounds %struct.rtx_def** %98, i64 %idxprom489
  store %struct.rtx_def* %96, %struct.rtx_def** %arrayidx491, align 8, !tbaa !9
  br label %if.end547

if.else492:                                       ; preds = %if.then474
  %arrayidx494 = getelementptr inbounds %struct.rtx_def* %insn.31853, i64 0, i32 1, i64 3
  %rtx495 = bitcast %union.rtunion_def* %arrayidx494 to %struct.rtx_def**
  %99 = load %struct.rtx_def** %rtx495, align 8, !tbaa !9
  %100 = getelementptr inbounds %struct.rtx_def* %99, i64 0, i32 0
  %bf.load496 = load i32* %100, align 8
  %101 = and i32 %bf.load496, 65534
  %switch1717 = icmp eq i32 %101, 44
  br i1 %switch1717, label %if.then508, label %if.end547

if.then508:                                       ; preds = %if.else492
  %bf.clear497 = and i32 %bf.load496, 65535
  %cmp517 = icmp eq i32 %bf.clear497, 45
  %idxprom519 = zext i1 %cmp517 to i64
  %arrayidx521 = getelementptr inbounds %struct.rtx_def* %99, i64 0, i32 1, i64 %idxprom519
  %rtvec = bitcast %union.rtunion_def* %arrayidx521 to %struct.rtvec_def**
  %102 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !9
  %num_elem = getelementptr inbounds %struct.rtvec_def* %102, i64 0, i32 0
  %103 = load i32* %num_elem, align 4, !tbaa !24
  %cmp5231850 = icmp sgt i32 %103, 0
  br i1 %cmp5231850, label %for.body525, label %if.end547

for.body525:                                      ; preds = %if.then508, %for.body525.for.body525_crit_edge
  %104 = phi %struct.rtvec_def* [ %.pre1927, %for.body525.for.body525_crit_edge ], [ %102, %if.then508 ]
  %indvars.iv1916 = phi i64 [ %indvars.iv.next1917, %for.body525.for.body525_crit_edge ], [ 0, %if.then508 ]
  %arrayidx531 = getelementptr inbounds %struct.rtvec_def* %104, i64 0, i32 1, i64 %indvars.iv1916
  %105 = load %struct.rtx_def** %arrayidx531, align 8, !tbaa !9
  %arrayidx533 = getelementptr inbounds %struct.rtx_def* %105, i64 0, i32 1, i64 0
  %rtx534 = bitcast %union.rtunion_def* %arrayidx533 to %struct.rtx_def**
  %106 = load %struct.rtx_def** %rtx534, align 8, !tbaa !9
  %arrayidx536 = getelementptr inbounds %struct.rtx_def* %106, i64 0, i32 1, i64 5
  %rtint537 = bitcast %union.rtunion_def* %arrayidx536 to i32*
  %107 = load i32* %rtint537, align 4, !tbaa !10
  %idxprom538 = sext i32 %107 to i64
  %108 = load %struct.rtx_def*** %93, align 8, !tbaa !21
  %arrayidx540 = getelementptr inbounds %struct.rtx_def** %108, i64 %idxprom538
  store %struct.rtx_def* %106, %struct.rtx_def** %arrayidx540, align 8, !tbaa !9
  %indvars.iv.next1917 = add nuw nsw i64 %indvars.iv1916, 1
  %lftr.wideiv1918 = trunc i64 %indvars.iv.next1917 to i32
  %exitcond1919 = icmp eq i32 %lftr.wideiv1918, %103
  br i1 %exitcond1919, label %if.end547, label %for.body525.for.body525_crit_edge

for.body525.for.body525_crit_edge:                ; preds = %for.body525
  %.pre1927 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !9
  br label %for.body525

if.end547:                                        ; preds = %for.body525, %if.then508, %if.else492, %for.body458, %if.then479, %if.then463
  %call548 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn.31853, i32 13, %struct.rtx_def* null) #4
  %tobool549 = icmp eq %struct.rtx_def* %call548, null
  br i1 %tobool549, label %for.inc564, label %if.then550

if.then550:                                       ; preds = %if.end547
  %arrayidx552 = getelementptr inbounds %struct.rtx_def* %call548, i64 0, i32 1, i64 0
  %rtx553 = bitcast %union.rtunion_def* %arrayidx552 to %struct.rtx_def**
  %109 = load %struct.rtx_def** %rtx553, align 8, !tbaa !9
  %arrayidx558 = getelementptr inbounds %struct.rtx_def* %109, i64 0, i32 1, i64 5
  %rtint559 = bitcast %union.rtunion_def* %arrayidx558 to i32*
  %110 = load i32* %rtint559, align 4, !tbaa !10
  %idxprom560 = sext i32 %110 to i64
  %111 = load %struct.rtx_def*** %93, align 8, !tbaa !21
  %arrayidx562 = getelementptr inbounds %struct.rtx_def** %111, i64 %idxprom560
  store %struct.rtx_def* %109, %struct.rtx_def** %arrayidx562, align 8, !tbaa !9
  br label %for.inc564

for.inc564:                                       ; preds = %if.end547, %if.then550
  %arrayidx566 = getelementptr inbounds %struct.rtx_def* %insn.31853, i64 0, i32 1, i64 2
  %rtx567 = bitcast %union.rtunion_def* %arrayidx566 to %struct.rtx_def**
  %112 = load %struct.rtx_def** %rtx567, align 8, !tbaa !9
  %cmp456 = icmp eq %struct.rtx_def* %112, %2
  br i1 %cmp456, label %for.end568, label %for.body458

for.end568:                                       ; preds = %for.inc564, %if.end454
  %conv569 = sext i32 %call445 to i64
  %mul570 = shl nsw i64 %conv569, 3
  %call571 = tail call noalias i8* @xmalloc(i64 %mul570) #4
  %113 = bitcast i8* %call571 to %struct.rtx_def**
  %insn_map = getelementptr inbounds i8* %call446, i64 48
  %114 = bitcast i8* %insn_map to %struct.rtx_def***
  store %struct.rtx_def** %113, %struct.rtx_def*** %114, align 8, !tbaa !26
  %inline_target = getelementptr inbounds i8* %call446, i64 80
  %115 = bitcast i8* %inline_target to %struct.rtx_def**
  store %struct.rtx_def* null, %struct.rtx_def** %115, align 8, !tbaa !27
  %call572 = tail call i32 @max_reg_num() #4
  %conv573 = zext i32 %call572 to i64
  %call574 = tail call noalias i8* @xcalloc(i64 %conv573, i64 8) #4
  %116 = bitcast i8* %call574 to %struct.rtx_def**
  store %struct.rtx_def** %116, %struct.rtx_def*** @splittable_regs, align 8, !tbaa !9
  %call576 = tail call noalias i8* @xcalloc(i64 %conv573, i64 4) #4
  %117 = bitcast i8* %call576 to i32*
  store i32* %117, i32** @splittable_regs_updates, align 8, !tbaa !9
  %call578 = tail call noalias i8* @xcalloc(i64 %conv573, i64 8) #4
  %118 = bitcast i8* %call578 to %struct.induction**
  store %struct.induction** %118, %struct.induction*** @addr_combined_regs, align 8, !tbaa !9
  %call580 = tail call noalias i8* @xcalloc(i64 %conv573, i64 1) #4
  %arrayidx582 = getelementptr inbounds %struct.rtx_def* %copy_end.21794, i64 0, i32 1, i64 0
  %rtint583 = bitcast %union.rtunion_def* %arrayidx582 to i32*
  %119 = load i32* %rtint583, align 4, !tbaa !10
  %120 = load i32* @max_uid_for_loop, align 4, !tbaa !10
  %cmp584 = icmp slt i32 %119, %120
  br i1 %cmp584, label %if.then586, label %if.end706

if.then586:                                       ; preds = %for.end568
  %arrayidx588 = getelementptr inbounds %struct.rtx_def* %copy_start.0, i64 0, i32 1, i64 0
  %rtint589 = bitcast %union.rtunion_def* %arrayidx588 to i32*
  %121 = load i32* %rtint589, align 4, !tbaa !10
  %cmp590 = icmp slt i32 %121, %120
  br i1 %cmp590, label %cond.true602, label %cond.false

cond.false:                                       ; preds = %if.then586
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str13, i64 0, i64 0), i32 811, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.unroll_loop, i64 0, i64 0)) #5
  unreachable

cond.true602:                                     ; preds = %if.then586
  %idxprom5951797 = sext i32 %121 to i64
  %122 = load i32** @uid_luid, align 8, !tbaa !9
  %arrayidx5961798 = getelementptr inbounds i32* %122, i64 %idxprom5951797
  %123 = load i32* %arrayidx5961798, align 4, !tbaa !10
  %idxprom606 = sext i32 %119 to i64
  %arrayidx607 = getelementptr inbounds i32* %122, i64 %idxprom606
  %124 = load i32* %arrayidx607, align 4, !tbaa !10
  %125 = getelementptr inbounds %struct.rtx_def* %copy_end.21794, i64 0, i32 0
  %bf.load611 = load i32* %125, align 8
  %bf.clear612 = and i32 %bf.load611, 65535
  %cmp613 = icmp eq i32 %bf.clear612, 33
  %dec616 = sext i1 %cmp613 to i32
  %dec616. = add nsw i32 %dec616, %124
  %cmp618 = icmp eq %struct.rtx_def* %copy_start.0, %1
  %inc621 = zext i1 %cmp618 to i32
  %copy_start_luid.0 = add nsw i32 %123, %inc621
  %126 = load i32* @max_reg_before_loop, align 4, !tbaa !10
  %cmp6241847 = icmp ugt i32 %126, 53
  br i1 %cmp6241847, label %for.body626, label %if.end706

for.body626:                                      ; preds = %cond.true602, %for.inc703
  %r.01848 = phi i32 [ %inc704, %for.inc703 ], [ 53, %cond.true602 ]
  %idxprom627 = zext i32 %r.01848 to i64
  %127 = load %struct.varray_head_tag** @reg_n_info, align 8, !tbaa !9
  %data = getelementptr inbounds %struct.varray_head_tag* %127, i64 0, i32 4
  %reg = bitcast %union.varray_data_tag* %data to [1 x %struct.reg_info_def*]*
  %arrayidx628 = getelementptr inbounds [1 x %struct.reg_info_def*]* %reg, i64 0, i64 %idxprom627
  %128 = load %struct.reg_info_def** %arrayidx628, align 8, !tbaa !9
  %first_uid = getelementptr inbounds %struct.reg_info_def* %128, i64 0, i32 0
  %129 = load i32* %first_uid, align 4, !tbaa !28
  %cmp629 = icmp sgt i32 %129, 0
  br i1 %cmp629, label %land.lhs.true631, label %for.inc703

land.lhs.true631:                                 ; preds = %for.body626
  %130 = load i32* @max_uid_for_loop, align 4, !tbaa !10
  %cmp637 = icmp sgt i32 %129, %130
  br i1 %cmp637, label %for.inc703, label %land.lhs.true639

land.lhs.true639:                                 ; preds = %land.lhs.true631
  %idxprom645 = sext i32 %129 to i64
  %131 = load i32** @uid_luid, align 8, !tbaa !9
  %arrayidx646 = getelementptr inbounds i32* %131, i64 %idxprom645
  %132 = load i32* %arrayidx646, align 4, !tbaa !10
  %cmp647 = icmp slt i32 %132, %copy_start_luid.0
  br i1 %cmp647, label %for.inc703, label %land.lhs.true649

land.lhs.true649:                                 ; preds = %land.lhs.true639
  %last_uid = getelementptr inbounds %struct.reg_info_def* %128, i64 0, i32 1
  %133 = load i32* %last_uid, align 4, !tbaa !30
  %cmp654 = icmp slt i32 %133, 1
  %cmp662 = icmp sgt i32 %133, %130
  %or.cond = or i1 %cmp654, %cmp662
  br i1 %or.cond, label %for.inc703, label %land.lhs.true664

land.lhs.true664:                                 ; preds = %land.lhs.true649
  %idxprom670 = sext i32 %133 to i64
  %arrayidx671 = getelementptr inbounds i32* %131, i64 %idxprom670
  %134 = load i32* %arrayidx671, align 4, !tbaa !10
  %cmp672 = icmp sgt i32 %134, %dec616.
  br i1 %cmp672, label %for.inc703, label %while.cond.i

while.cond.i:                                     ; preds = %land.lhs.true664, %while.body.i
  %passed_jump.0.i = phi i32 [ %.passed_jump.0.i, %while.body.i ], [ 0, %land.lhs.true664 ]
  %copy_start.pn.i = phi %struct.rtx_def* [ %p.0.i, %while.body.i ], [ %copy_start.0, %land.lhs.true664 ]
  %p.0.in.in.i = getelementptr inbounds %struct.rtx_def* %copy_start.pn.i, i64 0, i32 1, i64 2
  %p.0.in.i = bitcast %union.rtunion_def* %p.0.in.in.i to %struct.rtx_def**
  %p.0.i = load %struct.rtx_def** %p.0.in.i, align 8
  %fld1.i = getelementptr inbounds %struct.rtx_def* %p.0.i, i64 0, i32 1
  %rtint.i1723 = bitcast [1 x %union.rtunion_def]* %fld1.i to i32*
  %135 = load i32* %rtint.i1723, align 4, !tbaa !10
  %cmp.i1724 = icmp eq i32 %135, %129
  %136 = getelementptr inbounds %struct.rtx_def* %p.0.i, i64 0, i32 0
  %bf.load.i1725 = load i32* %136, align 8
  %bf.clear.i1726 = and i32 %bf.load.i1725, 65535
  br i1 %cmp.i1724, label %while.end.i, label %while.body.i

while.body.i:                                     ; preds = %while.cond.i
  %cmp3.i = icmp eq i32 %bf.clear.i1726, 33
  %.passed_jump.0.i = select i1 %cmp3.i, i32 1, i32 %passed_jump.0.i
  %cmp4.i = icmp eq %struct.rtx_def* %p.0.i, %copy_end.21794
  br i1 %cmp4.i, label %if.end690, label %while.cond.i

while.end.i:                                      ; preds = %while.cond.i
  %idxprom51.i = zext i32 %bf.clear.i1726 to i64
  %arrayidx12.i1727 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom51.i
  %137 = load i8* %arrayidx12.i1727, align 1, !tbaa !23
  %cmp13.i = icmp eq i8 %137, 105
  br i1 %cmp13.i, label %lor.lhs.false.i1730, label %if.end690

lor.lhs.false.i1730:                              ; preds = %while.end.i
  %call.i1728 = tail call i32 @dead_or_set_regno_p(%struct.rtx_def* %p.0.i, i32 %r.01848) #4
  %tobool.i1729 = icmp eq i32 %call.i1728, 0
  br i1 %tobool.i1729, label %if.end690, label %if.end16.i

if.end16.i:                                       ; preds = %lor.lhs.false.i1730
  %cmp17.i1731 = icmp eq i32 %passed_jump.0.i, 0
  br i1 %cmp17.i1731, label %if.then687, label %while.cond21.preheader.i

while.cond21.preheader.i:                         ; preds = %if.end16.i
  %138 = load i32* %rtint.i1723, align 4, !tbaa !10
  %cmp2558.i = icmp eq i32 %138, %133
  br i1 %cmp2558.i, label %if.then687, label %while.body27.i

while.body27.i:                                   ; preds = %while.cond21.preheader.i, %if.end37.i
  %p.159.i = phi %struct.rtx_def* [ %140, %if.end37.i ], [ %p.0.i, %while.cond21.preheader.i ]
  %139 = getelementptr inbounds %struct.rtx_def* %p.159.i, i64 0, i32 0
  %bf.load28.i = load i32* %139, align 8
  %bf.clear29.i = and i32 %bf.load28.i, 65535
  %cmp30.i = icmp eq i32 %bf.clear29.i, 36
  br i1 %cmp30.i, label %if.end690, label %if.else.i

if.else.i:                                        ; preds = %while.body27.i
  %cmp33.i = icmp eq %struct.rtx_def* %p.159.i, %copy_end.21794
  br i1 %cmp33.i, label %if.then687, label %if.end37.i

if.end37.i:                                       ; preds = %if.else.i
  %arrayidx39.i = getelementptr inbounds %struct.rtx_def* %p.159.i, i64 0, i32 1, i64 2
  %rtx40.i = bitcast %union.rtunion_def* %arrayidx39.i to %struct.rtx_def**
  %140 = load %struct.rtx_def** %rtx40.i, align 8, !tbaa !9
  %fld22.i = getelementptr inbounds %struct.rtx_def* %140, i64 0, i32 1
  %rtint24.i = bitcast [1 x %union.rtunion_def]* %fld22.i to i32*
  %141 = load i32* %rtint24.i, align 4, !tbaa !10
  %cmp25.i = icmp eq i32 %141, %133
  br i1 %cmp25.i, label %if.then687, label %while.body27.i

if.then687:                                       ; preds = %if.else.i, %if.end37.i, %if.end16.i, %while.cond21.preheader.i
  %arrayidx689 = getelementptr inbounds i8* %call580, i64 %idxprom627
  store i8 1, i8* %arrayidx689, align 1, !tbaa !23
  br label %if.end690

if.end690:                                        ; preds = %while.body.i, %while.body27.i, %while.end.i, %lor.lhs.false.i1730, %if.then687
  %142 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !9
  %tobool691 = icmp eq %struct._IO_FILE* %142, null
  br i1 %tobool691, label %for.inc703, label %if.then692

if.then692:                                       ; preds = %if.end690
  %arrayidx694 = getelementptr inbounds i8* %call580, i64 %idxprom627
  %143 = load i8* %arrayidx694, align 1, !tbaa !23
  %tobool695 = icmp eq i8 %143, 0
  br i1 %tobool695, label %if.else698, label %if.then696

if.then696:                                       ; preds = %if.then692
  %call697 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %142, i8* getelementptr inbounds ([24 x i8]* @.str14, i64 0, i64 0), i32 %r.01848) #4
  br label %for.inc703

if.else698:                                       ; preds = %if.then692
  %call699 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %142, i8* getelementptr inbounds ([30 x i8]* @.str15, i64 0, i64 0), i32 %r.01848) #4
  br label %for.inc703

for.inc703:                                       ; preds = %land.lhs.true649, %if.end690, %land.lhs.true664, %land.lhs.true639, %land.lhs.true631, %for.body626, %if.then696, %if.else698
  %inc704 = add i32 %r.01848, 1
  %144 = load i32* @max_reg_before_loop, align 4, !tbaa !10
  %cmp624 = icmp ult i32 %inc704, %144
  br i1 %cmp624, label %for.body626, label %if.end706

if.end706:                                        ; preds = %for.inc703, %cond.true602, %for.end568
  %cmp707 = icmp ne i32 %unroll_type.01784, 2
  %tobool710 = icmp ne i32 %splitting_not_safe.0, 0
  %or.cond1319 = or i1 %cmp707, %tobool710
  %or.cond1319.not = xor i1 %or.cond1319, true
  %or.cond1320 = and i1 %tobool42, %or.cond1319.not
  br i1 %or.cond1320, label %if.then713, label %if.end1028

if.then713:                                       ; preds = %if.end706
  %call714 = call i32 @precondition_loop_p(%struct.loop* %loop, %struct.rtx_def** %initial_value, %struct.rtx_def** %final_value, %struct.rtx_def** %increment, i32* %mode)
  %tobool715 = icmp eq i32 %call714, 0
  br i1 %tobool715, label %if.end1028, label %if.then716

if.then716:                                       ; preds = %if.then713
  %comparison_code = getelementptr inbounds i8* %0, i64 88
  %145 = bitcast i8* %comparison_code to i32*
  %146 = load i32* %145, align 4, !tbaa !31
  %switch.tableidx = add i32 %146, -106
  %147 = icmp ult i32 %switch.tableidx, 6
  br i1 %147, label %switch.lookup, label %lor.end

switch.lookup:                                    ; preds = %if.then716
  %switch.cast = trunc i32 %switch.tableidx to i6
  %switch.downshift = lshr i6 -13, %switch.cast
  %148 = and i6 %switch.downshift, 1
  %switch.masked = icmp ne i6 %148, 0
  br label %lor.end

lor.end:                                          ; preds = %if.then716, %switch.lookup
  %149 = phi i1 [ %switch.masked, %switch.lookup ], [ false, %if.then716 ]
  %lor.ext = zext i1 %149 to i32
  %150 = and i32 %146, -4
  %151 = icmp eq i32 %150, 108
  %lor.ext739 = zext i1 %151 to i32
  %mul741 = shl nuw nsw i64 %conv573, 3
  %call742 = tail call noalias i8* @xmalloc(i64 %mul741) #4
  %152 = bitcast i8* %call742 to %struct.rtx_def**
  %reg_map = getelementptr inbounds i8* %call446, i64 32
  %153 = bitcast i8* %reg_map to %struct.rtx_def***
  store %struct.rtx_def** %152, %struct.rtx_def*** %153, align 8, !tbaa !32
  %call744 = tail call %struct.varray_head_tag* @varray_init(i64 %conv573, i64 16, i8* getelementptr inbounds ([25 x i8]* @.str16, i64 0, i64 0)) #4
  %const_equiv_varray = getelementptr inbounds i8* %call446, i64 64
  %154 = bitcast i8* %const_equiv_varray to %struct.varray_head_tag**
  store %struct.varray_head_tag* %call744, %struct.varray_head_tag** %154, align 8, !tbaa !33
  store %struct.varray_head_tag* %call744, %struct.varray_head_tag** @global_const_equiv_varray, align 8, !tbaa !9
  %i.032.i = add i32 %call572, -1
  %cmp33.i1733 = icmp sgt i32 %i.032.i, 57
  br i1 %cmp33.i1733, label %for.body.lr.ph.i, label %for.body5.i

for.body.lr.ph.i:                                 ; preds = %lor.end
  %155 = sext i32 %i.032.i to i64
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i, %for.body.lr.ph.i
  %indvars.iv35.i = phi i64 [ %155, %for.body.lr.ph.i ], [ %indvars.iv.next36.i, %for.body.i ]
  %i.034.i = phi i32 [ %i.032.i, %for.body.lr.ph.i ], [ %i.0.i, %for.body.i ]
  %156 = load %struct.function** @cfun, align 8, !tbaa !9
  %emit.i = getelementptr inbounds %struct.function* %156, i64 0, i32 3
  %157 = load %struct.emit_status** %emit.i, align 8, !tbaa !34
  %x_regno_reg_rtx.i = getelementptr inbounds %struct.emit_status* %157, i64 0, i32 12
  %158 = load %struct.rtx_def*** %x_regno_reg_rtx.i, align 8, !tbaa !37
  %arrayidx.i1734 = getelementptr inbounds %struct.rtx_def** %158, i64 %indvars.iv35.i
  %159 = load %struct.rtx_def** %arrayidx.i1734, align 8, !tbaa !9
  %160 = load %struct.rtx_def*** %153, align 8, !tbaa !32
  %arrayidx2.i = getelementptr inbounds %struct.rtx_def** %160, i64 %indvars.iv35.i
  store %struct.rtx_def* %159, %struct.rtx_def** %arrayidx2.i, align 8, !tbaa !9
  %i.0.i = add nsw i32 %i.034.i, -1
  %cmp.i1735 = icmp sgt i32 %i.0.i, 57
  %indvars.iv.next36.i = add nsw i64 %indvars.iv35.i, -1
  br i1 %cmp.i1735, label %for.body.i, label %for.body5.i

for.body5.i:                                      ; preds = %lor.end, %for.body.i, %for.body5.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %for.body5.i ], [ 57, %for.body.i ], [ 57, %lor.end ]
  %161 = load %struct.rtx_def*** %153, align 8, !tbaa !32
  %arrayidx8.i = getelementptr inbounds %struct.rtx_def** %161, i64 %indvars.iv.i
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx8.i, align 8, !tbaa !9
  %indvars.iv.next.i = add nsw i64 %indvars.iv.i, -1
  %162 = trunc i64 %indvars.iv.i to i32
  %cmp4.i1736 = icmp sgt i32 %162, 0
  br i1 %cmp4.i1736, label %for.body5.i, label %init_reg_map.exit

init_reg_map.exit:                                ; preds = %for.body5.i
  %163 = load %struct.function** @cfun, align 8, !tbaa !9
  %emit12.i = getelementptr inbounds %struct.function* %163, i64 0, i32 3
  %164 = load %struct.emit_status** %emit12.i, align 8, !tbaa !34
  %x_regno_reg_rtx13.i = getelementptr inbounds %struct.emit_status* %164, i64 0, i32 12
  %165 = load %struct.rtx_def*** %x_regno_reg_rtx13.i, align 8, !tbaa !37
  %arrayidx14.i = getelementptr inbounds %struct.rtx_def** %165, i64 54
  %166 = load %struct.rtx_def** %arrayidx14.i, align 8, !tbaa !9
  %167 = load %struct.rtx_def*** %153, align 8, !tbaa !32
  %arrayidx16.i = getelementptr inbounds %struct.rtx_def** %167, i64 54
  store %struct.rtx_def* %166, %struct.rtx_def** %arrayidx16.i, align 8, !tbaa !9
  %168 = load %struct.function** @cfun, align 8, !tbaa !9
  %emit17.i = getelementptr inbounds %struct.function* %168, i64 0, i32 3
  %169 = load %struct.emit_status** %emit17.i, align 8, !tbaa !34
  %x_regno_reg_rtx18.i = getelementptr inbounds %struct.emit_status* %169, i64 0, i32 12
  %170 = load %struct.rtx_def*** %x_regno_reg_rtx18.i, align 8, !tbaa !37
  %arrayidx19.i = getelementptr inbounds %struct.rtx_def** %170, i64 53
  %171 = load %struct.rtx_def** %arrayidx19.i, align 8, !tbaa !9
  %172 = load %struct.rtx_def*** %153, align 8, !tbaa !32
  %arrayidx21.i = getelementptr inbounds %struct.rtx_def** %172, i64 53
  store %struct.rtx_def* %171, %struct.rtx_def** %arrayidx21.i, align 8, !tbaa !9
  %cmp746 = icmp sgt i32 %unroll_number.3, 4
  %.unroll_number.3 = select i1 %cmp746, i32 4, i32 %unroll_number.3
  %173 = load %struct.rtx_def** %increment, align 8, !tbaa !9
  %rtwint = getelementptr inbounds %struct.rtx_def* %173, i64 0, i32 1, i64 0, i32 0
  %174 = load i64* %rtwint, align 8, !tbaa !39
  %conv752 = trunc i64 %174 to i32
  %cmp753 = icmp slt i32 %conv752, 0
  %sub = sub nsw i32 0, %conv752
  %abs_inc.0 = select i1 %cmp753, i32 %sub, i32 %conv752
  %conv752.lobit = lshr i32 %conv752, 31
  tail call void @start_sequence() #4
  %175 = load %struct.rtx_def** %final_value, align 8, !tbaa !9
  %176 = getelementptr inbounds %struct.rtx_def* %175, i64 0, i32 0
  %bf.load757 = load i32* %176, align 8
  %bf.clear758 = and i32 %bf.load757, 65535
  %cmp759 = icmp eq i32 %bf.clear758, 75
  br i1 %cmp759, label %if.then761, label %if.end771

if.then761:                                       ; preds = %init_reg_map.exit
  %177 = load i32* %mode, align 4, !tbaa !23
  %arrayidx763 = getelementptr inbounds %struct.rtx_def* %175, i64 0, i32 1, i64 0
  %rtx764 = bitcast %union.rtunion_def* %arrayidx763 to %struct.rtx_def**
  %178 = load %struct.rtx_def** %rtx764, align 8, !tbaa !9
  %call765 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %178) #4
  %arrayidx767 = getelementptr inbounds %struct.rtx_def* %175, i64 0, i32 1, i64 1
  %rtx768 = bitcast %union.rtunion_def* %arrayidx767 to %struct.rtx_def**
  %179 = load %struct.rtx_def** %rtx768, align 8, !tbaa !9
  %call769 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %179) #4
  %call770 = tail call %struct.rtx_def* @expand_simple_binop(i32 %177, i32 75, %struct.rtx_def* %call765, %struct.rtx_def* %call769, %struct.rtx_def* null, i32 0, i32 3) #4
  store %struct.rtx_def* %call770, %struct.rtx_def** %final_value, align 8, !tbaa !9
  br label %if.end771

if.end771:                                        ; preds = %if.then761, %init_reg_map.exit
  %180 = phi %struct.rtx_def* [ %call770, %if.then761 ], [ %175, %init_reg_map.exit ]
  %call772 = tail call i32 @nonmemory_operand(%struct.rtx_def* %180, i32 0) #4
  %tobool773 = icmp eq i32 %call772, 0
  br i1 %tobool773, label %if.then774, label %if.end777

if.then774:                                       ; preds = %if.end771
  %181 = load i32* %mode, align 4, !tbaa !23
  %call775 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %180) #4
  %call776 = tail call %struct.rtx_def* @force_reg(i32 %181, %struct.rtx_def* %call775) #4
  store %struct.rtx_def* %call776, %struct.rtx_def** %final_value, align 8, !tbaa !9
  br label %if.end777

if.end777:                                        ; preds = %if.end771, %if.then774
  %182 = phi %struct.rtx_def* [ %180, %if.end771 ], [ %call776, %if.then774 ]
  %cmp778 = icmp ne i32 %146, 102
  %cmp781 = icmp eq i32 %lor.ext, %conv752.lobit
  %or.cond1715 = and i1 %cmp778, %cmp781
  %183 = load i32* %mode, align 4, !tbaa !23
  br i1 %or.cond1715, label %if.else786, label %if.then783

if.then783:                                       ; preds = %if.end777
  %184 = load %struct.rtx_def** %initial_value, align 8, !tbaa !9
  %call784 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %184) #4
  %call785 = tail call %struct.rtx_def* @expand_simple_binop(i32 %183, i32 76, %struct.rtx_def* %182, %struct.rtx_def* %call784, %struct.rtx_def* null, i32 0, i32 3) #4
  br label %if.end791

if.else786:                                       ; preds = %if.end777
  %185 = ashr i32 %conv752, 31
  %186 = and i32 %185, 9
  %187 = add i32 %186, 77
  %188 = load %struct.rtx_def** %initial_value, align 8, !tbaa !9
  %call789 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %188) #4
  %call790 = tail call %struct.rtx_def* @expand_simple_unop(i32 %183, i32 %187, %struct.rtx_def* %call789, %struct.rtx_def* null, i32 0) #4
  br label %if.end791

if.end791:                                        ; preds = %if.else786, %if.then783
  %189 = phi %struct.rtx_def* [ %184, %if.then783 ], [ %188, %if.else786 ]
  %diff.0 = phi %struct.rtx_def* [ %call785, %if.then783 ], [ %call790, %if.else786 ]
  %190 = getelementptr inbounds %struct.rtx_def* %diff.0, i64 0, i32 0
  %bf.load792 = load i32* %190, align 8
  %bf.lshr = lshr i32 %bf.load792, 16
  %bf.clear793 = and i32 %bf.lshr, 255
  %mul794 = mul nsw i32 %abs_inc.0, %.unroll_number.3
  %sub795 = add nsw i32 %mul794, -1
  %conv796 = sext i32 %sub795 to i64
  %call797 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv796) #4
  %call798 = tail call %struct.rtx_def* @expand_simple_binop(i32 %bf.clear793, i32 83, %struct.rtx_def* %diff.0, %struct.rtx_def* %call797, %struct.rtx_def* null, i32 0, i32 3) #4
  %conv799 = sext i32 %.unroll_number.3 to i64
  %mul800 = shl nsw i64 %conv799, 3
  %call801 = tail call noalias i8* @xmalloc(i64 %mul800) #4
  %191 = bitcast i8* %call801 to %struct.rtx_def**
  %cmp8031845 = icmp sgt i32 %.unroll_number.3, 0
  br i1 %cmp8031845, label %for.body805.lr.ph, label %for.end811

for.body805.lr.ph:                                ; preds = %if.end791
  %192 = icmp slt i32 %unroll_number.3, 4
  %193 = select i1 %192, i32 %unroll_number.3, i32 4
  br label %for.body805

for.body805:                                      ; preds = %for.body805, %for.body805.lr.ph
  %indvars.iv1911 = phi i64 [ 0, %for.body805.lr.ph ], [ %indvars.iv.next1912, %for.body805 ]
  %call806 = tail call %struct.rtx_def* @gen_label_rtx() #4
  %arrayidx808 = getelementptr inbounds %struct.rtx_def** %191, i64 %indvars.iv1911
  store %struct.rtx_def* %call806, %struct.rtx_def** %arrayidx808, align 8, !tbaa !9
  %indvars.iv.next1912 = add nuw nsw i64 %indvars.iv1911, 1
  %lftr.wideiv1914 = trunc i64 %indvars.iv.next1912 to i32
  %exitcond1915 = icmp eq i32 %lftr.wideiv1914, %193
  br i1 %exitcond1915, label %for.end811, label %for.body805

for.end811:                                       ; preds = %for.body805, %if.end791
  %cmp812 = icmp eq i32 %146, 102
  br i1 %cmp812, label %for.cond831.preheader, label %if.then814

if.then814:                                       ; preds = %for.end811
  %call815 = tail call %struct.rtx_def* @expand_simple_binop(i32 %183, i32 75, %struct.rtx_def* %189, %struct.rtx_def* %173, %struct.rtx_def* null, i32 0, i32 3) #4
  %cond817 = select i1 %149, i32 104, i32 106
  %arrayidx818 = getelementptr inbounds i8* %call801, i64 8
  %194 = bitcast i8* %arrayidx818 to %struct.rtx_def**
  %195 = load %struct.rtx_def** %194, align 8, !tbaa !9
  tail call void @emit_cmp_and_jump_insns(%struct.rtx_def* %call815, %struct.rtx_def* %182, i32 %cond817, %struct.rtx_def* null, i32 %183, i32 %lor.ext739, %struct.rtx_def* %195) #4
  %call819 = tail call %struct.rtx_def* @get_last_insn() #4
  tail call void @predict_insn_def(%struct.rtx_def* %call819, i32 10, i32 1) #4
  %call821 = tail call %struct.rtx_def* @get_last_insn() #4
  %196 = getelementptr inbounds %struct.rtx_def* %call821, i64 0, i32 1, i64 7, i32 0
  %.c1712 = ptrtoint %struct.rtx_def* %195 to i64
  store i64 %.c1712, i64* %196, align 8, !tbaa !9
  %arrayidx827 = getelementptr inbounds %struct.rtx_def* %195, i64 0, i32 1, i64 3
  %rtint828 = bitcast %union.rtunion_def* %arrayidx827 to i32*
  %197 = load i32* %rtint828, align 4, !tbaa !10
  %inc829 = add nsw i32 %197, 1
  store i32 %inc829, i32* %rtint828, align 4, !tbaa !10
  br label %for.cond831.preheader

for.cond831.preheader:                            ; preds = %for.end811, %if.then814
  %sub832 = add nsw i32 %.unroll_number.3, -1
  %cmp8331843 = icmp sgt i32 %sub832, 0
  br i1 %cmp8331843, label %for.body835.lr.ph, label %for.end868

for.body835.lr.ph:                                ; preds = %for.cond831.preheader
  %tobool840 = icmp eq i32 %conv752.lobit, 0
  %.1721 = select i1 %tobool840, i32 106, i32 104
  %198 = icmp slt i32 %unroll_number.3, 4
  %.op = add i32 %unroll_number.3, -1
  %199 = select i1 %198, i32 %.op, i32 3
  br label %for.body835

for.body835:                                      ; preds = %if.end845, %for.body835.lr.ph
  %indvars.iv1906 = phi i64 [ 0, %for.body835.lr.ph ], [ %indvars.iv.next1907, %if.end845 ]
  %200 = trunc i64 %indvars.iv1906 to i32
  %cmp836 = icmp eq i32 %200, 0
  %sub864.pre = sub nsw i32 %.unroll_number.3, %200
  br i1 %cmp836, label %if.end845, label %if.else839

if.else839:                                       ; preds = %for.body835
  %i.5.sub842 = select i1 %tobool840, i32 %200, i32 %sub864.pre
  br label %if.end845

if.end845:                                        ; preds = %for.body835, %if.else839
  %cmp_const.0 = phi i32 [ %i.5.sub842, %if.else839 ], [ 0, %for.body835 ]
  %cmp_code.0 = phi i32 [ %.1721, %if.else839 ], [ 103, %for.body835 ]
  %mul846 = mul nsw i32 %cmp_const.0, %abs_inc.0
  %conv847 = sext i32 %mul846 to i64
  %call848 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv847) #4
  %arrayidx850 = getelementptr inbounds %struct.rtx_def** %191, i64 %indvars.iv1906
  %201 = load %struct.rtx_def** %arrayidx850, align 8, !tbaa !9
  tail call void @emit_cmp_and_jump_insns(%struct.rtx_def* %call798, %struct.rtx_def* %call848, i32 %cmp_code.0, %struct.rtx_def* null, i32 %183, i32 0, %struct.rtx_def* %201) #4
  %call853 = tail call %struct.rtx_def* @get_last_insn() #4
  %202 = getelementptr inbounds %struct.rtx_def* %call853, i64 0, i32 1, i64 7, i32 0
  %.c1711 = ptrtoint %struct.rtx_def* %201 to i64
  store i64 %.c1711, i64* %202, align 8, !tbaa !9
  %arrayidx860 = getelementptr inbounds %struct.rtx_def* %201, i64 0, i32 1, i64 3
  %rtint861 = bitcast %union.rtunion_def* %arrayidx860 to i32*
  %203 = load i32* %rtint861, align 4, !tbaa !10
  %inc862 = add nsw i32 %203, 1
  store i32 %inc862, i32* %rtint861, align 4, !tbaa !10
  %call863 = tail call %struct.rtx_def* @get_last_insn() #4
  %div865 = sdiv i32 10000, %sub864.pre
  tail call void @predict_insn(%struct.rtx_def* %call863, i32 11, i32 %div865) #4
  %indvars.iv.next1907 = add nuw nsw i64 %indvars.iv1906, 1
  %lftr.wideiv1909 = trunc i64 %indvars.iv.next1907 to i32
  %exitcond1910 = icmp eq i32 %lftr.wideiv1909, %199
  br i1 %exitcond1910, label %for.end868, label %for.body835

for.end868:                                       ; preds = %if.end845, %for.cond831.preheader
  %cmp869 = icmp eq i32 %abs_inc.0, 1
  br i1 %cmp869, label %if.end894, label %if.then871

if.then871:                                       ; preds = %for.end868
  %tobool874 = icmp eq i32 %conv752.lobit, 0
  br i1 %tobool874, label %if.else877, label %if.then875

if.then875:                                       ; preds = %if.then871
  %sub876 = add nsw i32 %abs_inc.0, -1
  br label %if.end880

if.else877:                                       ; preds = %if.then871
  %mul879 = mul nsw i32 %abs_inc.0, %sub832
  %add = add nsw i32 %mul879, 1
  br label %if.end880

if.end880:                                        ; preds = %if.else877, %if.then875
  %cmp_const872.0 = phi i32 [ %sub876, %if.then875 ], [ %add, %if.else877 ]
  %cmp_code873.0 = phi i32 [ 106, %if.then875 ], [ 104, %if.else877 ]
  %conv881 = sext i32 %cmp_const872.0 to i64
  %call882 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv881) #4
  %204 = load %struct.rtx_def** %191, align 8, !tbaa !9
  tail call void @emit_cmp_and_jump_insns(%struct.rtx_def* %call798, %struct.rtx_def* %call882, i32 %cmp_code873.0, %struct.rtx_def* null, i32 %183, i32 0, %struct.rtx_def* %204) #4
  %call885 = tail call %struct.rtx_def* @get_last_insn() #4
  %205 = getelementptr inbounds %struct.rtx_def* %call885, i64 0, i32 1, i64 7, i32 0
  %.c = ptrtoint %struct.rtx_def* %204 to i64
  store i64 %.c, i64* %205, align 8, !tbaa !9
  %arrayidx891 = getelementptr inbounds %struct.rtx_def* %204, i64 0, i32 1, i64 3
  %rtint892 = bitcast %union.rtunion_def* %arrayidx891 to i32*
  %206 = load i32* %rtint892, align 4, !tbaa !10
  %inc893 = add nsw i32 %206, 1
  store i32 %inc893, i32* %rtint892, align 4, !tbaa !10
  br label %if.end894

if.end894:                                        ; preds = %for.end868, %if.end880
  %call895 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  %call896 = tail call %struct.rtx_def* @loop_insn_hoist(%struct.loop* %loop, %struct.rtx_def* %call895) #4
  %207 = getelementptr inbounds %struct.rtx_def* %call54, i64 0, i32 0
  %bf.load897 = load i32* %207, align 8
  %bf.clear898 = and i32 %bf.load897, 65535
  switch i32 %bf.clear898, label %if.else917 [
    i32 35, label %if.then901
    i32 33, label %if.end919
  ]

if.then901:                                       ; preds = %if.end894
  %arrayidx903 = getelementptr inbounds %struct.rtx_def* %call54, i64 0, i32 1, i64 1
  %rtx904 = bitcast %union.rtunion_def* %arrayidx903 to %struct.rtx_def**
  %208 = load %struct.rtx_def** %rtx904, align 8, !tbaa !9
  br label %if.end919

if.else917:                                       ; preds = %if.end894
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str13, i64 0, i64 0), i32 1104, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.unroll_loop, i64 0, i64 0)) #5
  unreachable

if.end919:                                        ; preds = %if.end894, %if.then901
  %.pn = phi %struct.rtx_def* [ %208, %if.then901 ], [ %call54, %if.end894 ]
  %cmp9211840 = icmp sgt i32 %.unroll_number.3, 1
  br i1 %cmp9211840, label %for.body923.lr.ph, label %if.end919.for.end1005_crit_edge

if.end919.for.end1005_crit_edge:                  ; preds = %if.end919
  %arrayidx1008.pre = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 1
  %rtx1009.pre = bitcast %union.rtunion_def* %arrayidx1008.pre to %struct.rtx_def**
  br label %for.end1005

for.body923.lr.ph:                                ; preds = %if.end919
  %copy_end.3.in.in = getelementptr inbounds %struct.rtx_def* %.pn, i64 0, i32 1, i64 1
  %copy_end.3.in = bitcast %union.rtunion_def* %copy_end.3.in.in to %struct.rtx_def**
  %copy_end.3 = load %struct.rtx_def** %copy_end.3.in, align 8
  %arrayidx928 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 1
  %rtx929 = bitcast %union.rtunion_def* %arrayidx928 to %struct.rtx_def**
  %const_age = getelementptr inbounds i8* %call446, i64 72
  %209 = bitcast i8* %const_age to i32*
  %cmp9561838 = icmp ugt i32 %call572, 53
  %arrayidx995 = getelementptr inbounds %struct.rtx_def* %call54, i64 0, i32 1, i64 1
  %rtx996 = bitcast %union.rtunion_def* %arrayidx995 to %struct.rtx_def**
  %label_map949 = getelementptr inbounds i8* %call446, i64 40
  %210 = bitcast i8* %label_map949 to %struct.rtx_def***
  %211 = icmp slt i32 %unroll_number.3, 4
  %212 = select i1 %211, i32 %unroll_number.3, i32 4
  br label %for.body923

for.body923:                                      ; preds = %if.end1002, %for.body923.lr.ph
  %indvars.iv1902 = phi i64 [ 1, %for.body923.lr.ph ], [ %indvars.iv.next1903, %if.end1002 ]
  %copy_end.41841 = phi %struct.rtx_def* [ %copy_end.3, %for.body923.lr.ph ], [ %copy_end.5, %if.end1002 ]
  %213 = trunc i64 %indvars.iv1902 to i32
  %sub924 = sub nsw i32 %.unroll_number.3, %213
  %idxprom925 = sext i32 %sub924 to i64
  %arrayidx926 = getelementptr inbounds %struct.rtx_def** %191, i64 %idxprom925
  %214 = load %struct.rtx_def** %arrayidx926, align 8, !tbaa !9
  %215 = load %struct.rtx_def** %rtx929, align 8, !tbaa !9
  %call930 = tail call %struct.rtx_def* @emit_label_after(%struct.rtx_def* %214, %struct.rtx_def* %215) #4
  %216 = load %struct.rtx_def*** %114, align 8, !tbaa !26
  %217 = bitcast %struct.rtx_def** %216 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* %217, i8 0, i64 %mul570, i32 1, i1 false)
  %218 = load %struct.varray_head_tag** %154, align 8, !tbaa !33
  %arrayidx936 = getelementptr inbounds %struct.varray_head_tag* %218, i64 0, i32 4, i32 0, i64 0
  %219 = bitcast %struct.const_equiv_data* %arrayidx936 to i8*
  %num_elements = getelementptr inbounds %struct.varray_head_tag* %218, i64 0, i32 0
  %220 = load i64* %num_elements, align 8, !tbaa !40
  %mul938 = shl i64 %220, 4
  tail call void @llvm.memset.p0i8.i64(i8* %219, i8 0, i64 %mul938, i32 1, i1 false)
  store i32 0, i32* %209, align 4, !tbaa !43
  br i1 %cmp447, label %for.body942, label %for.cond955.preheader

for.cond955.preheader:                            ; preds = %for.inc952, %for.body923
  br i1 %cmp9561838, label %for.body958, label %for.end984

for.body942:                                      ; preds = %for.body923, %for.inc952
  %indvars.iv1894 = phi i64 [ %indvars.iv.next1895, %for.inc952 ], [ 0, %for.body923 ]
  %arrayidx944 = getelementptr inbounds i8* %local_label.0, i64 %indvars.iv1894
  %221 = load i8* %arrayidx944, align 1, !tbaa !23
  %tobool945 = icmp eq i8 %221, 0
  br i1 %tobool945, label %for.inc952, label %if.then946

if.then946:                                       ; preds = %for.body942
  %call947 = tail call %struct.rtx_def* @gen_label_rtx() #4
  %222 = load %struct.rtx_def*** %210, align 8, !tbaa !21
  %arrayidx950 = getelementptr inbounds %struct.rtx_def** %222, i64 %indvars.iv1894
  store %struct.rtx_def* %call947, %struct.rtx_def** %arrayidx950, align 8, !tbaa !9
  br label %for.inc952

for.inc952:                                       ; preds = %for.body942, %if.then946
  %indvars.iv.next1895 = add nuw nsw i64 %indvars.iv1894, 1
  %lftr.wideiv1896 = trunc i64 %indvars.iv.next1895 to i32
  %exitcond1897 = icmp eq i32 %lftr.wideiv1896, %call444
  br i1 %exitcond1897, label %for.cond955.preheader, label %for.body942

for.body958:                                      ; preds = %for.cond955.preheader, %for.inc982
  %indvars.iv1898 = phi i64 [ %indvars.iv.next1899, %for.inc982 ], [ 53, %for.cond955.preheader ]
  %arrayidx960 = getelementptr inbounds i8* %call580, i64 %indvars.iv1898
  %223 = load i8* %arrayidx960, align 1, !tbaa !23
  %tobool961 = icmp eq i8 %223, 0
  br i1 %tobool961, label %for.inc982, label %if.then962

if.then962:                                       ; preds = %for.body958
  %224 = load %struct.function** @cfun, align 8, !tbaa !9
  %emit = getelementptr inbounds %struct.function* %224, i64 0, i32 3
  %225 = load %struct.emit_status** %emit, align 8, !tbaa !34
  %x_regno_reg_rtx = getelementptr inbounds %struct.emit_status* %225, i64 0, i32 12
  %226 = load %struct.rtx_def*** %x_regno_reg_rtx, align 8, !tbaa !37
  %arrayidx964 = getelementptr inbounds %struct.rtx_def** %226, i64 %indvars.iv1898
  %227 = load %struct.rtx_def** %arrayidx964, align 8, !tbaa !9
  %228 = getelementptr inbounds %struct.rtx_def* %227, i64 0, i32 0
  %bf.load965 = load i32* %228, align 8
  %bf.lshr966 = lshr i32 %bf.load965, 16
  %bf.clear967 = and i32 %bf.lshr966, 255
  %call968 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear967) #4
  %229 = load %struct.rtx_def*** %153, align 8, !tbaa !32
  %arrayidx971 = getelementptr inbounds %struct.rtx_def** %229, i64 %indvars.iv1898
  store %struct.rtx_def* %call968, %struct.rtx_def** %arrayidx971, align 8, !tbaa !9
  %230 = load %struct.rtx_def*** %153, align 8, !tbaa !32
  %arrayidx974 = getelementptr inbounds %struct.rtx_def** %230, i64 %indvars.iv1898
  %231 = load %struct.rtx_def** %arrayidx974, align 8, !tbaa !9
  %arrayidx976 = getelementptr inbounds %struct.rtx_def* %231, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx976 to i32*
  %232 = load i32* %rtuint, align 4, !tbaa !10
  %233 = load %struct.function** @cfun, align 8, !tbaa !9
  %emit978 = getelementptr inbounds %struct.function* %233, i64 0, i32 3
  %234 = load %struct.emit_status** %emit978, align 8, !tbaa !34
  %x_regno_reg_rtx979 = getelementptr inbounds %struct.emit_status* %234, i64 0, i32 12
  %235 = load %struct.rtx_def*** %x_regno_reg_rtx979, align 8, !tbaa !37
  %arrayidx980 = getelementptr inbounds %struct.rtx_def** %235, i64 %indvars.iv1898
  %236 = load %struct.rtx_def** %arrayidx980, align 8, !tbaa !9
  tail call void @record_base_value(i32 %232, %struct.rtx_def* %236, i32 0) #4
  br label %for.inc982

for.inc982:                                       ; preds = %for.body958, %if.then962
  %indvars.iv.next1899 = add nuw nsw i64 %indvars.iv1898, 1
  %lftr.wideiv1900 = trunc i64 %indvars.iv.next1899 to i32
  %exitcond1901 = icmp eq i32 %lftr.wideiv1900, %call572
  br i1 %exitcond1901, label %for.end984, label %for.body958

for.end984:                                       ; preds = %for.inc982, %for.cond955.preheader
  %cmp986 = icmp eq i32 %213, %sub832
  br i1 %cmp986, label %if.then988, label %if.end1002

if.then988:                                       ; preds = %for.end984
  %bf.load989 = load i32* %207, align 8
  %bf.clear990 = and i32 %bf.load989, 65535
  %cmp991 = icmp eq i32 %bf.clear990, 35
  br i1 %cmp991, label %if.then993, label %if.end1002

if.then993:                                       ; preds = %if.then988
  %237 = load %struct.rtx_def** %rtx996, align 8, !tbaa !9
  %arrayidx998 = getelementptr inbounds %struct.rtx_def* %237, i64 0, i32 1, i64 1
  %rtx999 = bitcast %union.rtunion_def* %arrayidx998 to %struct.rtx_def**
  %238 = load %struct.rtx_def** %rtx999, align 8, !tbaa !9
  br label %if.end1002

if.end1002:                                       ; preds = %if.then988, %if.then993, %for.end984
  %copy_end.5 = phi %struct.rtx_def* [ %238, %if.then993 ], [ %copy_end.41841, %for.end984 ], [ %call54, %if.then988 ]
  tail call fastcc void @copy_loop_body(%struct.loop* %loop, %struct.rtx_def* %copy_start.0, %struct.rtx_def* %copy_end.5, %struct.inline_remap* %90, %struct.rtx_def* %exit_label.0, i32 0, i32 %unroll_type.01784, %struct.rtx_def* %start_label.0, %struct.rtx_def* %2, %struct.rtx_def* %1, %struct.rtx_def* %copy_end.5)
  %indvars.iv.next1903 = add nuw nsw i64 %indvars.iv1902, 1
  %lftr.wideiv1904 = trunc i64 %indvars.iv.next1903 to i32
  %exitcond1905 = icmp eq i32 %lftr.wideiv1904, %212
  br i1 %exitcond1905, label %for.end1005, label %for.body923

for.end1005:                                      ; preds = %if.end1002, %if.end919.for.end1005_crit_edge
  %rtx1009.pre-phi = phi %struct.rtx_def** [ %rtx1009.pre, %if.end919.for.end1005_crit_edge ], [ %rtx929, %if.end1002 ]
  %239 = load %struct.rtx_def** %191, align 8, !tbaa !9
  %240 = load %struct.rtx_def** %rtx1009.pre-phi, align 8, !tbaa !9
  %call1010 = tail call %struct.rtx_def* @emit_label_after(%struct.rtx_def* %239, %struct.rtx_def* %240) #4
  %bf.load1011 = load i32* %207, align 8
  %bf.clear1012 = and i32 %bf.load1011, 65535
  %cmp1013 = icmp eq i32 %bf.clear1012, 35
  br i1 %cmp1013, label %if.then1015, label %if.end1028.thread

if.then1015:                                      ; preds = %for.end1005
  %arrayidx1017 = getelementptr inbounds %struct.rtx_def* %call54, i64 0, i32 1, i64 1
  %rtx1018 = bitcast %union.rtunion_def* %arrayidx1017 to %struct.rtx_def**
  %241 = load %struct.rtx_def** %rtx1018, align 8, !tbaa !9
  br label %if.end1028.thread

if.end1028.thread:                                ; preds = %if.then1015, %for.end1005
  %insert_before.3 = phi %struct.rtx_def* [ %241, %if.then1015 ], [ %call54, %for.end1005 ]
  %copy_end.6.in.in = getelementptr inbounds %struct.rtx_def* %insert_before.3, i64 0, i32 1, i64 1
  %copy_end.6.in = bitcast %union.rtunion_def* %copy_end.6.in.in to %struct.rtx_def**
  %copy_end.6 = load %struct.rtx_def** %copy_end.6.in, align 8
  tail call void @free(i8* %call801)
  br label %if.end1038

if.end1028:                                       ; preds = %if.then713, %if.end706
  %242 = load i32* @flag_unroll_all_loops, align 4
  %tobool1032 = icmp ne i32 %242, 0
  %or.cond1325 = or i1 %cmp707, %tobool1032
  br i1 %or.cond1325, label %if.end1038, label %if.then1033

if.then1033:                                      ; preds = %if.end1028
  %243 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !9
  %tobool1034 = icmp eq %struct._IO_FILE* %243, null
  br i1 %tobool1034, label %if.end1297, label %if.then1035

if.then1035:                                      ; preds = %if.then1033
  %244 = tail call i64 @fwrite(i8* getelementptr inbounds ([52 x i8]* @.str17, i64 0, i64 0), i64 51, i64 1, %struct._IO_FILE* %243)
  br label %if.end1297

if.end1038:                                       ; preds = %if.end1028.thread, %if.end1028
  %unroll_number.51810 = phi i32 [ %.unroll_number.3, %if.end1028.thread ], [ %unroll_number.3, %if.end1028 ]
  %copy_end.71809 = phi %struct.rtx_def* [ %copy_end.6, %if.end1028.thread ], [ %copy_end.21794, %if.end1028 ]
  %insert_before.41808 = phi %struct.rtx_def* [ %insert_before.3, %if.end1028.thread ], [ %insert_before.21792, %if.end1028 ]
  %unroll_type.11806 = phi i32 [ 1, %if.end1028.thread ], [ %unroll_type.01784, %if.end1028 ]
  %unroll_number1039 = getelementptr inbounds i8* %0, i64 104
  %245 = bitcast i8* %unroll_number1039 to i32*
  store i32 %unroll_number.51810, i32* %245, align 4, !tbaa !44
  br i1 %tobool710, label %if.end1045, label %if.else1042

if.else1042:                                      ; preds = %if.end1038
  %246 = load i8** %aux, align 8, !tbaa !1
  %list.i = getelementptr inbounds i8* %246, i64 224
  %247 = bitcast i8* %list.i to %struct.iv_class**
  %bl.0347.i = load %struct.iv_class** %247, align 8
  %tobool348.i = icmp eq %struct.iv_class* %bl.0347.i, null
  br i1 %tobool348.i, label %find_splittable_regs.exit, label %for.body.lr.ph.i1738

for.body.lr.ph.i1738:                             ; preds = %if.else1042
  %cmp3.i1737 = icmp eq i32 %unroll_type.11806, 0
  %exit_count202.i = getelementptr inbounds %struct.loop* %loop, i64 0, i32 32
  %cmp19.i.i = icmp ne i32 %unroll_type.11806, 0
  %cmp48.i.i = icmp eq i32 %unroll_type.11806, 2
  br label %for.body.i1739

for.body.i1739:                                   ; preds = %for.inc243.i, %for.body.lr.ph.i1738
  %bl.0351.i = phi %struct.iv_class* [ %bl.0347.i, %for.body.lr.ph.i1738 ], [ %bl.0.i, %for.inc243.i ]
  %result.0349.i = phi i32 [ 0, %for.body.lr.ph.i1738 ], [ %result.2.i, %for.inc243.i ]
  %248 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !9
  %biv.i.i = getelementptr inbounds %struct.iv_class* %bl.0351.i, i64 0, i32 2
  %v.015.i.i = load %struct.induction** %biv.i.i, align 8
  %tobool16.i.i = icmp eq %struct.induction* %v.015.i.i, null
  br i1 %tobool16.i.i, label %biv_total_increment.exit.i, label %for.body.i.i

for.body.i.i:                                     ; preds = %for.body.i1739, %if.then.i.i
  %v.018.i.i = phi %struct.induction* [ %v.0.i.i, %if.then.i.i ], [ %v.015.i.i, %for.body.i1739 ]
  %result.017.i.i = phi %struct.rtx_def* [ %call.i.i, %if.then.i.i ], [ %248, %for.body.i1739 ]
  %always_computable.i.i = getelementptr inbounds %struct.induction* %v.018.i.i, i64 0, i32 13
  %bf.load.i.i = load i16* %always_computable.i.i, align 4
  %bf.clear.i.i = and i16 %bf.load.i.i, 8
  %tobool1.i.i = icmp eq i16 %bf.clear.i.i, 0
  br i1 %tobool1.i.i, label %for.inc243.i, label %land.lhs.true.i.i

land.lhs.true.i.i:                                ; preds = %for.body.i.i
  %mult_val.i.i = getelementptr inbounds %struct.induction* %v.018.i.i, i64 0, i32 8
  %249 = load %struct.rtx_def** %mult_val.i.i, align 8, !tbaa !45
  %250 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !9
  %cmp.i.i = icmp eq %struct.rtx_def* %249, %250
  %bf.clear5.i.i = and i16 %bf.load.i.i, 32
  %tobool7.i.i = icmp eq i16 %bf.clear5.i.i, 0
  %or.cond.i.i = and i1 %cmp.i.i, %tobool7.i.i
  br i1 %or.cond.i.i, label %if.then.i.i, label %for.inc243.i

if.then.i.i:                                      ; preds = %land.lhs.true.i.i
  %add_val.i.i = getelementptr inbounds %struct.induction* %v.018.i.i, i64 0, i32 9
  %251 = load %struct.rtx_def** %add_val.i.i, align 8, !tbaa !47
  %mode.i.i = getelementptr inbounds %struct.induction* %v.018.i.i, i64 0, i32 6
  %252 = load i32* %mode.i.i, align 4, !tbaa !48
  %call.i.i = tail call fastcc %struct.rtx_def* @fold_rtx_mult_add(%struct.rtx_def* %result.017.i.i, %struct.rtx_def* %249, %struct.rtx_def* %251, i32 %252) #4
  %next_iv.i.i = getelementptr inbounds %struct.induction* %v.018.i.i, i64 0, i32 17
  %v.0.i.i = load %struct.induction** %next_iv.i.i, align 8
  %tobool.i.i = icmp eq %struct.induction* %v.0.i.i, null
  br i1 %tobool.i.i, label %biv_total_increment.exit.i, label %for.body.i.i

biv_total_increment.exit.i:                       ; preds = %if.then.i.i, %for.body.i1739
  %retval.0.i.i = phi %struct.rtx_def* [ %248, %for.body.i1739 ], [ %call.i.i, %if.then.i.i ]
  %tobool2.i1740 = icmp eq %struct.rtx_def* %retval.0.i.i, null
  br i1 %tobool2.i1740, label %for.inc243.i, label %lor.lhs.false.i1744

lor.lhs.false.i1744:                              ; preds = %biv_total_increment.exit.i
  %253 = getelementptr inbounds %struct.rtx_def* %retval.0.i.i, i64 0, i32 0
  %bf.load.i1741 = load i32* %253, align 8
  %bf.clear.i1742 = and i32 %bf.load.i1741, 65535
  %cmp.i1743 = icmp eq i32 %bf.clear.i1742, 54
  br i1 %cmp.i1743, label %if.end.i1745, label %for.inc243.i

if.end.i1745:                                     ; preds = %lor.lhs.false.i1744
  br i1 %cmp3.i1737, label %if.end60.i, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %if.end.i1745
  %254 = load i32* %exit_count202.i, align 4, !tbaa !49
  %tobool4.i = icmp ne i32 %254, 0
  %or.cond.i = or i1 %tobool4.i, %cmp48.i.i
  br i1 %or.cond.i, label %land.lhs.true7.i, label %if.end60.i

land.lhs.true7.i:                                 ; preds = %land.lhs.true.i
  %regno.i = getelementptr inbounds %struct.iv_class* %bl.0351.i, i64 0, i32 0
  %255 = load i32* %regno.i, align 4, !tbaa !50
  %idxprom.i = zext i32 %255 to i64
  %256 = load %struct.varray_head_tag** @reg_n_info, align 8, !tbaa !9
  %data.i = getelementptr inbounds %struct.varray_head_tag* %256, i64 0, i32 4
  %reg.i = bitcast %union.varray_data_tag* %data.i to [1 x %struct.reg_info_def*]*
  %arrayidx.i1746 = getelementptr inbounds [1 x %struct.reg_info_def*]* %reg.i, i64 0, i64 %idxprom.i
  %257 = load %struct.reg_info_def** %arrayidx.i1746, align 8, !tbaa !9
  %258 = load i32** @uid_luid, align 8, !tbaa !9
  %259 = load %struct.rtx_def** %end, align 8, !tbaa !8
  %arrayidx10.i1747 = getelementptr inbounds %struct.rtx_def* %259, i64 0, i32 1, i64 0
  %rtint.i1748 = bitcast %union.rtunion_def* %arrayidx10.i1747 to i32*
  %260 = load i32* %rtint.i1748, align 4, !tbaa !10
  %261 = load i32* @max_uid_for_loop, align 4, !tbaa !10
  %cmp11.i = icmp slt i32 %260, %261
  br i1 %cmp11.i, label %cond.true.i, label %cond.false.i

cond.true.i:                                      ; preds = %land.lhs.true7.i
  %last_uid.i = getelementptr inbounds %struct.reg_info_def* %257, i64 0, i32 1
  %262 = load i32* %last_uid.i, align 4, !tbaa !30
  %idxprom8.i = sext i32 %262 to i64
  %arrayidx9.i = getelementptr inbounds i32* %258, i64 %idxprom8.i
  %263 = load i32* %arrayidx9.i, align 4, !tbaa !10
  %idxprom16.i = sext i32 %260 to i64
  %arrayidx17.i = getelementptr inbounds i32* %258, i64 %idxprom16.i
  %264 = load i32* %arrayidx17.i, align 4, !tbaa !10
  %cmp18.i = icmp slt i32 %263, %264
  br i1 %cmp18.i, label %lor.lhs.false19.i, label %land.lhs.true56.i

cond.false.i:                                     ; preds = %land.lhs.true7.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str13, i64 0, i64 0), i32 2545, i8* getelementptr inbounds ([21 x i8]* @__FUNCTION__.find_splittable_regs, i64 0, i64 0)) #5
  unreachable

lor.lhs.false19.i:                                ; preds = %cond.true.i
  %init_insn.i = getelementptr inbounds %struct.iv_class* %bl.0351.i, i64 0, i32 10
  %265 = load %struct.rtx_def** %init_insn.i, align 8, !tbaa !52
  %tobool20.i = icmp eq %struct.rtx_def* %265, null
  br i1 %tobool20.i, label %land.lhs.true56.i, label %lor.lhs.false21.i

lor.lhs.false21.i:                                ; preds = %lor.lhs.false19.i
  %arrayidx24.i = getelementptr inbounds %struct.rtx_def* %265, i64 0, i32 1, i64 0
  %rtint25.i = bitcast %union.rtunion_def* %arrayidx24.i to i32*
  %266 = load i32* %rtint25.i, align 4, !tbaa !10
  %cmp26.i = icmp slt i32 %266, %261
  br i1 %cmp26.i, label %cond.true40.i, label %land.lhs.true56.i

cond.true40.i:                                    ; preds = %lor.lhs.false21.i
  %first_uid.i = getelementptr inbounds %struct.reg_info_def* %257, i64 0, i32 0
  %267 = load i32* %first_uid.i, align 4, !tbaa !28
  %idxprom33.i = sext i32 %267 to i64
  %arrayidx34.i = getelementptr inbounds i32* %258, i64 %idxprom33.i
  %268 = load i32* %arrayidx34.i, align 4, !tbaa !10
  %idxprom45.i = sext i32 %266 to i64
  %arrayidx46.i = getelementptr inbounds i32* %258, i64 %idxprom45.i
  %269 = load i32* %arrayidx46.i, align 4, !tbaa !10
  %cmp50.i = icmp slt i32 %268, %269
  br i1 %cmp50.i, label %land.lhs.true56.i, label %lor.lhs.false51.i

lor.lhs.false51.i:                                ; preds = %cond.true40.i
  %270 = load %struct.induction** %biv.i.i, align 8, !tbaa !53
  %dest_reg.i = getelementptr inbounds %struct.induction* %270, i64 0, i32 4
  %271 = load %struct.rtx_def** %dest_reg.i, align 8, !tbaa !54
  %init_set.i = getelementptr inbounds %struct.iv_class* %bl.0351.i, i64 0, i32 11
  %272 = load %struct.rtx_def** %init_set.i, align 8, !tbaa !55
  %arrayidx53.i = getelementptr inbounds %struct.rtx_def* %272, i64 0, i32 1, i64 1
  %rtx.i1749 = bitcast %union.rtunion_def* %arrayidx53.i to %struct.rtx_def**
  %273 = load %struct.rtx_def** %rtx.i1749, align 8, !tbaa !9
  %call54.i = tail call i32 @reg_mentioned_p(%struct.rtx_def* %271, %struct.rtx_def* %273) #4
  %tobool55.i = icmp eq i32 %call54.i, 0
  br i1 %tobool55.i, label %if.end60.i, label %land.lhs.true56.i

land.lhs.true56.i:                                ; preds = %lor.lhs.false51.i, %cond.true40.i, %lor.lhs.false21.i, %lor.lhs.false19.i, %cond.true.i
  %call57.i = tail call %struct.rtx_def* @final_biv_value(%struct.loop* %loop, %struct.iv_class* %bl.0351.i) #4
  %not.tobool58.i = icmp ne %struct.rtx_def* %call57.i, null
  %..i = zext i1 %not.tobool58.i to i32
  br label %if.end60.i

if.end60.i:                                       ; preds = %land.lhs.true56.i, %lor.lhs.false51.i, %land.lhs.true.i, %if.end.i1745
  %biv_final_value.0.i = phi %struct.rtx_def* [ null, %lor.lhs.false51.i ], [ null, %land.lhs.true.i ], [ null, %if.end.i1745 ], [ %call57.i, %land.lhs.true56.i ]
  %biv_splittable.0.i = phi i32 [ 1, %lor.lhs.false51.i ], [ 1, %land.lhs.true.i ], [ 1, %if.end.i1745 ], [ %..i, %land.lhs.true56.i ]
  %v.0341.i = load %struct.induction** %biv.i.i, align 8
  %tobool63342.i = icmp ne i32 %biv_splittable.0.i, 0
  %tobool64343.i = icmp ne %struct.induction* %v.0341.i, null
  %or.cond245344.i = and i1 %tobool63342.i, %tobool64343.i
  br i1 %or.cond245344.i, label %for.body65.lr.ph.i, label %for.end.i

for.body65.lr.ph.i:                               ; preds = %if.end60.i
  %regno114.i = getelementptr inbounds %struct.iv_class* %bl.0351.i, i64 0, i32 0
  br label %for.body65.i

for.body65.i:                                     ; preds = %for.inc.i, %for.body65.lr.ph.i
  %v.0346.i = phi %struct.induction* [ %v.0341.i, %for.body65.lr.ph.i ], [ %v.0.i, %for.inc.i ]
  %insn.i = getelementptr inbounds %struct.induction* %v.0346.i, i64 0, i32 0
  %274 = load %struct.rtx_def** %insn.i, align 8, !tbaa !56
  %275 = getelementptr inbounds %struct.rtx_def* %274, i64 0, i32 0
  %bf.load66.i = load i32* %275, align 8
  %bf.clear67.i = and i32 %bf.load66.i, 65535
  %idxprom68318.i = zext i32 %bf.clear67.i to i64
  %arrayidx69.i = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom68318.i
  %276 = load i8* %arrayidx69.i, align 1, !tbaa !23
  %cmp70.i = icmp eq i8 %276, 105
  br i1 %cmp70.i, label %cond.true72.i, label %if.end197.i

cond.true72.i:                                    ; preds = %for.body65.i
  %arrayidx75.i = getelementptr inbounds %struct.rtx_def* %274, i64 0, i32 1, i64 3
  %rtx76.i = bitcast %union.rtunion_def* %arrayidx75.i to %struct.rtx_def**
  %277 = load %struct.rtx_def** %rtx76.i, align 8, !tbaa !9
  %278 = getelementptr inbounds %struct.rtx_def* %277, i64 0, i32 0
  %bf.load77.i = load i32* %278, align 8
  %bf.clear78.i = and i32 %bf.load77.i, 65535
  %cmp79.i = icmp eq i32 %bf.clear78.i, 47
  br i1 %cmp79.i, label %cond.end96.i, label %cond.false86.i

cond.false86.i:                                   ; preds = %cond.true72.i
  %call92.i = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* %274, %struct.rtx_def* %277) #4
  br label %cond.end96.i

cond.end96.i:                                     ; preds = %cond.false86.i, %cond.true72.i
  %cond97.i = phi %struct.rtx_def* [ %call92.i, %cond.false86.i ], [ %277, %cond.true72.i ]
  %cmp98.i = icmp eq %struct.rtx_def* %cond97.i, null
  br i1 %cmp98.i, label %if.end197.i, label %lor.lhs.false100.i

lor.lhs.false100.i:                               ; preds = %cond.end96.i
  %fld101.i = getelementptr inbounds %struct.rtx_def* %cond97.i, i64 0, i32 1
  %rtx103.i = bitcast [1 x %union.rtunion_def]* %fld101.i to %struct.rtx_def**
  %279 = load %struct.rtx_def** %rtx103.i, align 8, !tbaa !9
  %280 = getelementptr inbounds %struct.rtx_def* %279, i64 0, i32 0
  %bf.load104.i = load i32* %280, align 8
  %bf.clear105.i = and i32 %bf.load104.i, 65535
  %cmp106.i = icmp eq i32 %bf.clear105.i, 61
  br i1 %cmp106.i, label %lor.lhs.false108.i, label %if.end197.i

lor.lhs.false108.i:                               ; preds = %lor.lhs.false100.i
  %arrayidx113.i = getelementptr inbounds %struct.rtx_def* %279, i64 0, i32 1, i64 0
  %rtuint.i = bitcast %union.rtunion_def* %arrayidx113.i to i32*
  %281 = load i32* %rtuint.i, align 4, !tbaa !10
  %282 = load i32* %regno114.i, align 4, !tbaa !50
  %cmp115.i = icmp eq i32 %281, %282
  br i1 %cmp115.i, label %lor.lhs.false117.i, label %if.end197.i

lor.lhs.false117.i:                               ; preds = %lor.lhs.false108.i
  %arrayidx119.i = getelementptr inbounds %struct.rtx_def* %cond97.i, i64 0, i32 1, i64 1
  %rtx120.i = bitcast %union.rtunion_def* %arrayidx119.i to %struct.rtx_def**
  %283 = load %struct.rtx_def** %rtx120.i, align 8, !tbaa !9
  %284 = getelementptr inbounds %struct.rtx_def* %283, i64 0, i32 0
  %bf.load121.i = load i32* %284, align 8
  %bf.clear122.i = and i32 %bf.load121.i, 65535
  %cmp123.i = icmp eq i32 %bf.clear122.i, 75
  br i1 %cmp123.i, label %for.inc.i, label %if.end197.i

for.inc.i:                                        ; preds = %lor.lhs.false117.i
  %next_iv.i = getelementptr inbounds %struct.induction* %v.0346.i, i64 0, i32 17
  %v.0.i = load %struct.induction** %next_iv.i, align 8
  %tobool64.i = icmp eq %struct.induction* %v.0.i, null
  br i1 %tobool64.i, label %for.end.i, label %for.body65.i

for.end.i:                                        ; preds = %for.inc.i, %if.end60.i
  %cmp127.i = icmp eq i32 %biv_splittable.0.i, 1
  br i1 %cmp127.i, label %if.then129.i, label %if.end197.i

if.then129.i:                                     ; preds = %for.end.i
  br i1 %cmp3.i1737, label %if.then132.i, label %if.else183.i

if.then132.i:                                     ; preds = %if.then129.i
  %initial_value.i = getelementptr inbounds %struct.iv_class* %bl.0351.i, i64 0, i32 6
  %285 = load %struct.rtx_def** %initial_value.i, align 8, !tbaa !57
  %286 = getelementptr inbounds %struct.rtx_def* %285, i64 0, i32 0
  %bf.load133.i = load i32* %286, align 8
  %bf.clear134.i = and i32 %bf.load133.i, 65535
  %cmp135.i = icmp eq i32 %bf.clear134.i, 61
  br i1 %cmp135.i, label %land.lhs.true137.i, label %if.then132.if.else_crit_edge.i

if.then132.if.else_crit_edge.i:                   ; preds = %if.then132.i
  %regno179.pre.i = getelementptr inbounds %struct.iv_class* %bl.0351.i, i64 0, i32 0
  br label %if.else.i1750

land.lhs.true137.i:                               ; preds = %if.then132.i
  %arrayidx140.i = getelementptr inbounds %struct.rtx_def* %285, i64 0, i32 1, i64 0
  %rtuint141.i = bitcast %union.rtunion_def* %arrayidx140.i to i32*
  %287 = load i32* %rtuint141.i, align 4, !tbaa !10
  %regno142.i = getelementptr inbounds %struct.iv_class* %bl.0351.i, i64 0, i32 0
  %288 = load i32* %regno142.i, align 4, !tbaa !50
  %cmp143.i = icmp eq i32 %287, %288
  %cmp150.i = icmp ult i32 %287, 53
  %or.cond319.i = or i1 %cmp143.i, %cmp150.i
  br i1 %or.cond319.i, label %if.then156.i, label %lor.lhs.false152.i

lor.lhs.false152.i:                               ; preds = %land.lhs.true137.i
  %call154.i = tail call i32 @loop_invariant_p(%struct.loop* %loop, %struct.rtx_def* %285) #4
  %tobool155.i = icmp eq i32 %call154.i, 0
  br i1 %tobool155.i, label %if.then156.i, label %lor.lhs.false152.if.else_crit_edge.i

lor.lhs.false152.if.else_crit_edge.i:             ; preds = %lor.lhs.false152.i
  %.pre.i = load %struct.rtx_def** %initial_value.i, align 8, !tbaa !57
  br label %if.else.i1750

if.then156.i:                                     ; preds = %lor.lhs.false152.i, %land.lhs.true137.i
  %289 = load %struct.induction** %biv.i.i, align 8, !tbaa !53
  %mode.i = getelementptr inbounds %struct.induction* %289, i64 0, i32 6
  %290 = load i32* %mode.i, align 4, !tbaa !48
  %call159.i = tail call %struct.rtx_def* @gen_reg_rtx(i32 %290) #4
  %arrayidx161.i = getelementptr inbounds %struct.rtx_def* %call159.i, i64 0, i32 1, i64 0
  %rtuint162.i = bitcast %union.rtunion_def* %arrayidx161.i to i32*
  %291 = load i32* %rtuint162.i, align 4, !tbaa !10
  %292 = load %struct.induction** %biv.i.i, align 8, !tbaa !53
  %add_val.i = getelementptr inbounds %struct.induction* %292, i64 0, i32 9
  %293 = load %struct.rtx_def** %add_val.i, align 8, !tbaa !47
  tail call void @record_base_value(i32 %291, %struct.rtx_def* %293, i32 0) #4
  %294 = load %struct.induction** %biv.i.i, align 8, !tbaa !53
  %src_reg.i = getelementptr inbounds %struct.induction* %294, i64 0, i32 2
  %295 = load %struct.rtx_def** %src_reg.i, align 8, !tbaa !58
  %call165.i = tail call %struct.rtx_def* @gen_move_insn(%struct.rtx_def* %call159.i, %struct.rtx_def* %295) #4
  %call166.i = tail call %struct.rtx_def* @loop_insn_hoist(%struct.loop* %loop, %struct.rtx_def* %call165.i) #4
  %296 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !9
  %tobool167.i = icmp eq %struct._IO_FILE* %296, null
  br i1 %tobool167.i, label %if.end174.i, label %if.then168.i

if.then168.i:                                     ; preds = %if.then156.i
  %297 = load i32* %regno142.i, align 4, !tbaa !50
  %298 = load i32* %rtuint162.i, align 4, !tbaa !10
  %call173.i = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %296, i8* getelementptr inbounds ([38 x i8]* @.str55, i64 0, i64 0), i32 %297, i32 %298) #4
  br label %if.end174.i

if.end174.i:                                      ; preds = %if.then168.i, %if.then156.i
  %299 = load i32* %regno142.i, align 4, !tbaa !50
  %idxprom176.i = zext i32 %299 to i64
  %300 = load %struct.rtx_def*** @splittable_regs, align 8, !tbaa !9
  %arrayidx177.i = getelementptr inbounds %struct.rtx_def** %300, i64 %idxprom176.i
  store %struct.rtx_def* %call159.i, %struct.rtx_def** %arrayidx177.i, align 8, !tbaa !9
  br label %if.end187.i

if.else.i1750:                                    ; preds = %lor.lhs.false152.if.else_crit_edge.i, %if.then132.if.else_crit_edge.i
  %regno179.pre-phi.i = phi i32* [ %regno179.pre.i, %if.then132.if.else_crit_edge.i ], [ %regno142.i, %lor.lhs.false152.if.else_crit_edge.i ]
  %301 = phi %struct.rtx_def* [ %285, %if.then132.if.else_crit_edge.i ], [ %.pre.i, %lor.lhs.false152.if.else_crit_edge.i ]
  %302 = load i32* %regno179.pre-phi.i, align 4, !tbaa !50
  %idxprom180.i = zext i32 %302 to i64
  %303 = load %struct.rtx_def*** @splittable_regs, align 8, !tbaa !9
  %arrayidx181.i = getelementptr inbounds %struct.rtx_def** %303, i64 %idxprom180.i
  store %struct.rtx_def* %301, %struct.rtx_def** %arrayidx181.i, align 8, !tbaa !9
  br label %if.end187.i

if.else183.i:                                     ; preds = %if.then129.i
  %304 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !9
  %regno184.i = getelementptr inbounds %struct.iv_class* %bl.0351.i, i64 0, i32 0
  %305 = load i32* %regno184.i, align 4, !tbaa !50
  %idxprom185.i = zext i32 %305 to i64
  %306 = load %struct.rtx_def*** @splittable_regs, align 8, !tbaa !9
  %arrayidx186.i = getelementptr inbounds %struct.rtx_def** %306, i64 %idxprom185.i
  store %struct.rtx_def* %304, %struct.rtx_def** %arrayidx186.i, align 8, !tbaa !9
  br label %if.end187.i

if.end187.i:                                      ; preds = %if.else183.i, %if.else.i1750, %if.end174.i
  %307 = phi i32 [ %299, %if.end174.i ], [ %302, %if.else.i1750 ], [ %305, %if.else183.i ]
  %biv_count.i = getelementptr inbounds %struct.iv_class* %bl.0351.i, i64 0, i32 1
  %308 = load i32* %biv_count.i, align 4, !tbaa !59
  %idxprom189.i = zext i32 %307 to i64
  %309 = load i32** @splittable_regs_updates, align 8, !tbaa !9
  %arrayidx190.i = getelementptr inbounds i32* %309, i64 %idxprom189.i
  store i32 %308, i32* %arrayidx190.i, align 4, !tbaa !10
  %310 = load i32* %biv_count.i, align 4, !tbaa !59
  %add.i = add nsw i32 %310, %result.0349.i
  %311 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !9
  %tobool192.i = icmp eq %struct._IO_FILE* %311, null
  br i1 %tobool192.i, label %if.end197.i, label %if.then193.i

if.then193.i:                                     ; preds = %if.end187.i
  %regno188.i = getelementptr inbounds %struct.iv_class* %bl.0351.i, i64 0, i32 0
  %312 = load i32* %regno188.i, align 4, !tbaa !50
  %call195.i = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %311, i8* getelementptr inbounds ([23 x i8]* @.str56, i64 0, i64 0), i32 %312) #4
  br label %if.end197.i

if.end197.i:                                      ; preds = %lor.lhs.false117.i, %lor.lhs.false108.i, %lor.lhs.false100.i, %cond.end96.i, %for.body65.i, %if.then193.i, %if.end187.i, %for.end.i
  %result.1.i = phi i32 [ %add.i, %if.then193.i ], [ %add.i, %if.end187.i ], [ %result.0349.i, %for.end.i ], [ %result.0349.i, %for.body65.i ], [ %result.0349.i, %cond.end96.i ], [ %result.0349.i, %lor.lhs.false100.i ], [ %result.0349.i, %lor.lhs.false108.i ], [ %result.0349.i, %lor.lhs.false117.i ]
  %313 = load i8** %aux, align 8, !tbaa !1
  %ivs1.i.i = getelementptr inbounds i8* %313, i64 208
  %giv.i.i = getelementptr inbounds %struct.iv_class* %bl.0351.i, i64 0, i32 4
  %v.0764.i.i = load %struct.induction** %giv.i.i, align 8
  %tobool765.i.i = icmp eq %struct.induction* %v.0764.i.i, null
  br i1 %tobool765.i.i, label %find_splittable_givs.exit.i, label %for.body.i323.i

for.cond.loopexit.i.i:                            ; preds = %for.inc.i.i
  %v.0.pre.i.i = load %struct.induction** %next_iv.i322.i, align 8
  %tobool.i320.i = icmp eq %struct.induction* %v.0.pre.i.i, null
  br i1 %tobool.i320.i, label %for.cond16.preheader.i.i, label %for.body.i323.i

for.cond16.preheader.i.i:                         ; preds = %for.body.i323.i, %for.cond.loopexit.i.i
  %v.1746.pre.i.i = load %struct.induction** %giv.i.i, align 8
  %tobool17747.i.i = icmp eq %struct.induction* %v.1746.pre.i.i, null
  br i1 %tobool17747.i.i, label %find_splittable_givs.exit.i, label %for.body18.lr.ph.i.i

for.body18.lr.ph.i.i:                             ; preds = %for.cond16.preheader.i.i
  %regno.i.i = getelementptr inbounds %struct.iv_class* %bl.0351.i, i64 0, i32 0
  %initial_value.i.i = getelementptr inbounds %struct.iv_class* %bl.0351.i, i64 0, i32 6
  %regs.i.i = bitcast i8* %ivs1.i.i to %struct.iv**
  br label %for.body18.i.i

for.body.i323.i:                                  ; preds = %if.end197.i, %for.cond.loopexit.i.i
  %v.0766.i.i = phi %struct.induction* [ %v.0.pre.i.i, %for.cond.loopexit.i.i ], [ %v.0764.i.i, %if.end197.i ]
  %next_iv.i322.i = getelementptr inbounds %struct.induction* %v.0766.i.i, i64 0, i32 17
  %v2.0761.i.i = load %struct.induction** %next_iv.i322.i, align 8
  %tobool3762.i.i = icmp eq %struct.induction* %v2.0761.i.i, null
  br i1 %tobool3762.i.i, label %for.cond16.preheader.i.i, label %for.body4.lr.ph.i.i

for.body4.lr.ph.i.i:                              ; preds = %for.body.i323.i
  %insn.i.i = getelementptr inbounds %struct.induction* %v.0766.i.i, i64 0, i32 0
  %new_reg.i.i = getelementptr inbounds %struct.induction* %v.0766.i.i, i64 0, i32 1
  br label %for.body4.i.i

for.body4.i.i:                                    ; preds = %for.inc.i.i, %for.body4.lr.ph.i.i
  %v2.0763.i.i = phi %struct.induction* [ %v2.0761.i.i, %for.body4.lr.ph.i.i ], [ %v2.0.i.i, %for.inc.i.i ]
  %314 = load %struct.rtx_def** %insn.i.i, align 8, !tbaa !56
  %insn5.i.i = getelementptr inbounds %struct.induction* %v2.0763.i.i, i64 0, i32 0
  %315 = load %struct.rtx_def** %insn5.i.i, align 8, !tbaa !56
  %cmp.i324.i = icmp eq %struct.rtx_def* %314, %315
  br i1 %cmp.i324.i, label %land.lhs.true.i327.i, label %for.inc.i.i

land.lhs.true.i327.i:                             ; preds = %for.body4.i.i
  %316 = load %struct.rtx_def** %new_reg.i.i, align 8, !tbaa !60
  %new_reg6.i.i = getelementptr inbounds %struct.induction* %v2.0763.i.i, i64 0, i32 1
  %317 = load %struct.rtx_def** %new_reg6.i.i, align 8, !tbaa !60
  %call.i325.i = tail call i32 @rtx_equal_p(%struct.rtx_def* %316, %struct.rtx_def* %317) #4
  %tobool7.i326.i = icmp eq i32 %call.i325.i, 0
  br i1 %tobool7.i326.i, label %for.inc.i.i, label %land.lhs.true8.i.i

land.lhs.true8.i.i:                               ; preds = %land.lhs.true.i327.i
  %same_insn.i.i = getelementptr inbounds %struct.induction* %v2.0763.i.i, i64 0, i32 20
  %318 = load %struct.induction** %same_insn.i.i, align 8, !tbaa !61
  %tobool9.i.i = icmp eq %struct.induction* %318, null
  br i1 %tobool9.i.i, label %if.then.i328.i, label %for.inc.i.i

if.then.i328.i:                                   ; preds = %land.lhs.true8.i.i
  store %struct.induction* %v.0766.i.i, %struct.induction** %same_insn.i.i, align 8, !tbaa !61
  br label %for.inc.i.i

for.inc.i.i:                                      ; preds = %if.then.i328.i, %land.lhs.true8.i.i, %land.lhs.true.i327.i, %for.body4.i.i
  %next_iv11.i.i = getelementptr inbounds %struct.induction* %v2.0763.i.i, i64 0, i32 17
  %v2.0.i.i = load %struct.induction** %next_iv11.i.i, align 8
  %tobool3.i.i = icmp eq %struct.induction* %v2.0.i.i, null
  br i1 %tobool3.i.i, label %for.cond.loopexit.i.i, label %for.body4.i.i

for.body18.i.i:                                   ; preds = %for.inc549.i.i, %for.body18.lr.ph.i.i
  %v.1756.i.i = phi %struct.induction* [ %v.1746.pre.i.i, %for.body18.lr.ph.i.i ], [ %v.1.i.i, %for.inc549.i.i ]
  %result.0748.i.i = phi i32 [ 0, %for.body18.lr.ph.i.i ], [ %result.1.i.i, %for.inc549.i.i ]
  br i1 %cmp19.i.i, label %land.lhs.true20.i.i, label %if.end23.i.i

land.lhs.true20.i.i:                              ; preds = %for.body18.i.i
  %ignore.i.i = getelementptr inbounds %struct.induction* %v.1756.i.i, i64 0, i32 13
  %bf.load.i329.i = load i16* %ignore.i.i, align 4
  %bf.clear.i330.i = and i16 %bf.load.i329.i, 4
  %tobool21.i.i = icmp eq i16 %bf.clear.i330.i, 0
  br i1 %tobool21.i.i, label %if.end23.i.i, label %for.inc549.i.i

if.end23.i.i:                                     ; preds = %land.lhs.true20.i.i, %for.body18.i.i
  %giv_type.i.i = getelementptr inbounds %struct.induction* %v.1756.i.i, i64 0, i32 3
  %319 = load i32* %giv_type.i.i, align 4, !tbaa !62
  %cmp24.i.i = icmp eq i32 %319, 0
  br i1 %cmp24.i.i, label %if.end35.i.i, label %land.lhs.true25.i.i

land.lhs.true25.i.i:                              ; preds = %if.end23.i.i
  %always_computable.i331.i = getelementptr inbounds %struct.induction* %v.1756.i.i, i64 0, i32 13
  %bf.load26.i.i = load i16* %always_computable.i331.i, align 4
  %bf.clear28.i.i = and i16 %bf.load26.i.i, 8
  %tobool30.i.i = icmp eq i16 %bf.clear28.i.i, 0
  br i1 %tobool30.i.i, label %for.inc549.i.i, label %lor.lhs.false.i.i

lor.lhs.false.i.i:                                ; preds = %land.lhs.true25.i.i
  %insn31.i.i = getelementptr inbounds %struct.induction* %v.1756.i.i, i64 0, i32 0
  %320 = load %struct.rtx_def** %insn31.i.i, align 8, !tbaa !56
  %321 = load %struct.rtx_def** %start, align 8, !tbaa !7
  %322 = load %struct.rtx_def** %end, align 8, !tbaa !8
  %call.i.i.i = tail call %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def* %322) #4
  %323 = getelementptr inbounds %struct.rtx_def* %call.i.i.i, i64 0, i32 0
  %bf.load.i.i.i = load i32* %323, align 8
  %bf.clear.i.i.i = and i32 %bf.load.i.i.i, 65535
  %cmp.i.i.i = icmp eq i32 %bf.clear.i.i.i, 35
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %while.cond.preheader.i.i.i

if.then.i.i.i:                                    ; preds = %lor.lhs.false.i.i
  %arrayidx.i.i.i = getelementptr inbounds %struct.rtx_def* %call.i.i.i, i64 0, i32 1, i64 1
  %rtx.i.i.i = bitcast %union.rtunion_def* %arrayidx.i.i.i to %struct.rtx_def**
  %324 = load %struct.rtx_def** %rtx.i.i.i, align 8, !tbaa !9
  br label %while.cond.preheader.i.i.i

while.cond.preheader.i.i.i:                       ; preds = %if.then.i.i.i, %lor.lhs.false.i.i
  %loop_end.0.ph.i.i.i = phi %struct.rtx_def* [ %call.i.i.i, %lor.lhs.false.i.i ], [ %324, %if.then.i.i.i ]
  %325 = getelementptr inbounds %struct.rtx_def* %320, i64 0, i32 0
  %bf.load260.i.i.i = load i32* %325, align 8
  %bf.clear361.i.i.i = and i32 %bf.load260.i.i.i, 134217728
  %tobool62.i.i.i = icmp eq i32 %bf.clear361.i.i.i, 0
  br i1 %tobool62.i.i.i, label %while.end.i.i.i, label %while.body.i.i.i

while.body.i.i.i:                                 ; preds = %while.cond.preheader.i.i.i, %while.body.i.i.i
  %insn.addr.063.i.i.i = phi %struct.rtx_def* [ %326, %while.body.i.i.i ], [ %320, %while.cond.preheader.i.i.i ]
  %arrayidx5.i.i.i = getelementptr inbounds %struct.rtx_def* %insn.addr.063.i.i.i, i64 0, i32 1, i64 2
  %rtx6.i.i.i = bitcast %union.rtunion_def* %arrayidx5.i.i.i to %struct.rtx_def**
  %326 = load %struct.rtx_def** %rtx6.i.i.i, align 8, !tbaa !9
  %327 = getelementptr inbounds %struct.rtx_def* %326, i64 0, i32 0
  %bf.load2.i.i.i = load i32* %327, align 8
  %bf.clear3.i.i.i = and i32 %bf.load2.i.i.i, 134217728
  %tobool.i.i.i = icmp eq i32 %bf.clear3.i.i.i, 0
  br i1 %tobool.i.i.i, label %while.end.i.i.i, label %while.body.i.i.i

while.end.i.i.i:                                  ; preds = %while.body.i.i.i, %while.cond.preheader.i.i.i
  %insn.addr.0.lcssa.i.i.i = phi %struct.rtx_def* [ %320, %while.cond.preheader.i.i.i ], [ %326, %while.body.i.i.i ]
  %cmp7.i.i.i = icmp eq %struct.rtx_def* %insn.addr.0.lcssa.i.i.i, %loop_end.0.ph.i.i.i
  %cmp8.i.i.i = icmp eq %struct.rtx_def* %insn.addr.0.lcssa.i.i.i, %322
  %or.cond.i.i.i = or i1 %cmp7.i.i.i, %cmp8.i.i.i
  br i1 %or.cond.i.i.i, label %if.end35.i.i, label %for.cond.preheader.i.i.i

for.cond.preheader.i.i.i:                         ; preds = %while.end.i.i.i
  %p.0.in.in55.i.i.i = getelementptr inbounds %struct.rtx_def* %insn.addr.0.lcssa.i.i.i, i64 0, i32 1, i64 2
  %p.0.in56.i.i.i = bitcast %union.rtunion_def* %p.0.in.in55.i.i.i to %struct.rtx_def**
  %p.057.i.i.i = load %struct.rtx_def** %p.0.in56.i.i.i, align 8
  %cmp1458.i.i.i = icmp eq %struct.rtx_def* %p.057.i.i.i, %loop_end.0.ph.i.i.i
  br i1 %cmp1458.i.i.i, label %if.end35.i.i, label %for.body.lr.ph.i.i.i

for.body.lr.ph.i.i.i:                             ; preds = %for.cond.preheader.i.i.i
  %cmp2353.i.i.i = icmp eq %struct.rtx_def* %321, %insn.addr.0.lcssa.i.i.i
  br i1 %cmp2353.i.i.i, label %for.cond.backedge.us.i.i.i, label %for.body.i.i.i

for.cond.backedge.us.i.i.i:                       ; preds = %for.body.lr.ph.i.i.i, %for.cond.backedge.us.i.i.i
  %p.059.us.i.i.i = phi %struct.rtx_def* [ %p.0.us.i.i.i, %for.cond.backedge.us.i.i.i ], [ %p.057.i.i.i, %for.body.lr.ph.i.i.i ]
  %p.0.in.in.us.i.i.i = getelementptr inbounds %struct.rtx_def* %p.059.us.i.i.i, i64 0, i32 1, i64 2
  %p.0.in.us.i.i.i = bitcast %union.rtunion_def* %p.0.in.in.us.i.i.i to %struct.rtx_def**
  %p.0.us.i.i.i = load %struct.rtx_def** %p.0.in.us.i.i.i, align 8
  %cmp14.us.i.i.i = icmp eq %struct.rtx_def* %p.0.us.i.i.i, %loop_end.0.ph.i.i.i
  br i1 %cmp14.us.i.i.i, label %if.end35.i.i, label %for.cond.backedge.us.i.i.i

for.body.i.i.i:                                   ; preds = %for.body.lr.ph.i.i.i, %for.cond.backedge.i.i.i
  %p.059.i.i.i = phi %struct.rtx_def* [ %p.0.i.i.i, %for.cond.backedge.i.i.i ], [ %p.057.i.i.i, %for.body.lr.ph.i.i.i ]
  %328 = getelementptr inbounds %struct.rtx_def* %p.059.i.i.i, i64 0, i32 0
  %bf.load15.i.i.i = load i32* %328, align 8
  %bf.clear16.i.i.i = and i32 %bf.load15.i.i.i, 65535
  %cmp17.i.i.i = icmp eq i32 %bf.clear16.i.i.i, 33
  br i1 %cmp17.i.i.i, label %for.body24.lr.ph.i.i.i, label %for.cond.backedge.i.i.i

for.cond.backedge.i.i.i:                          ; preds = %for.inc.i.i.i, %for.body.i.i.i
  %p.0.in.in.i.i.i = getelementptr inbounds %struct.rtx_def* %p.059.i.i.i, i64 0, i32 1, i64 2
  %p.0.in.i.i.i = bitcast %union.rtunion_def* %p.0.in.in.i.i.i to %struct.rtx_def**
  %p.0.i.i.i = load %struct.rtx_def** %p.0.in.i.i.i, align 8
  %cmp14.i.i.i = icmp eq %struct.rtx_def* %p.0.i.i.i, %loop_end.0.ph.i.i.i
  br i1 %cmp14.i.i.i, label %if.end35.i.i, label %for.body.i.i.i

for.body24.lr.ph.i.i.i:                           ; preds = %for.body.i.i.i
  %arrayidx20.i.i.i = getelementptr inbounds %struct.rtx_def* %p.059.i.i.i, i64 0, i32 1, i64 7
  %rtx21.i.i.i = bitcast %union.rtunion_def* %arrayidx20.i.i.i to %struct.rtx_def**
  %329 = load %struct.rtx_def** %rtx21.i.i.i, align 8, !tbaa !9
  br label %for.body24.i.i.i

for.body24.i.i.i:                                 ; preds = %for.inc.i.i.i, %for.body24.lr.ph.i.i.i
  %q.054.i.i.i = phi %struct.rtx_def* [ %321, %for.body24.lr.ph.i.i.i ], [ %330, %for.inc.i.i.i ]
  %cmp25.i.i.i = icmp eq %struct.rtx_def* %q.054.i.i.i, %329
  br i1 %cmp25.i.i.i, label %for.inc549.i.i, label %for.inc.i.i.i

for.inc.i.i.i:                                    ; preds = %for.body24.i.i.i
  %arrayidx29.i.i.i = getelementptr inbounds %struct.rtx_def* %q.054.i.i.i, i64 0, i32 1, i64 2
  %rtx30.i.i.i = bitcast %union.rtunion_def* %arrayidx29.i.i.i to %struct.rtx_def**
  %330 = load %struct.rtx_def** %rtx30.i.i.i, align 8, !tbaa !9
  %cmp23.i.i.i = icmp eq %struct.rtx_def* %330, %insn.addr.0.lcssa.i.i.i
  br i1 %cmp23.i.i.i, label %for.cond.backedge.i.i.i, label %for.body24.i.i.i

if.end35.i.i:                                     ; preds = %for.cond.backedge.i.i.i, %for.cond.backedge.us.i.i.i, %for.cond.preheader.i.i.i, %while.end.i.i.i, %if.end23.i.i
  %mult_val.i332.i = getelementptr inbounds %struct.induction* %v.1756.i.i, i64 0, i32 8
  %331 = load %struct.rtx_def** %mult_val.i332.i, align 8, !tbaa !45
  %332 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !9
  %mode.i333.i = getelementptr inbounds %struct.induction* %v.1756.i.i, i64 0, i32 6
  %333 = load i32* %mode.i333.i, align 4, !tbaa !48
  %call36.i.i = tail call fastcc %struct.rtx_def* @fold_rtx_mult_add(%struct.rtx_def* %331, %struct.rtx_def* %retval.0.i.i, %struct.rtx_def* %332, i32 %333) #4
  %tobool37.i.i = icmp eq %struct.rtx_def* %call36.i.i, null
  br i1 %tobool37.i.i, label %for.inc549.i.i, label %lor.lhs.false38.i.i

lor.lhs.false38.i.i:                              ; preds = %if.end35.i.i
  %334 = getelementptr inbounds %struct.rtx_def* %call36.i.i, i64 0, i32 0
  %bf.load39.i.i = load i32* %334, align 8
  %bf.clear40.i.i = and i32 %bf.load39.i.i, 65535
  %cmp41.i.i = icmp eq i32 %bf.clear40.i.i, 54
  br i1 %cmp41.i.i, label %if.end43.i.i, label %for.inc549.i.i

if.end43.i.i:                                     ; preds = %lor.lhs.false38.i.i
  br i1 %cmp19.i.i, label %land.lhs.true45.i.i, label %if.then112.i.i

land.lhs.true45.i.i:                              ; preds = %if.end43.i.i
  %335 = load i32* %exit_count202.i, align 4, !tbaa !49
  %tobool46.i.i = icmp ne i32 %335, 0
  %or.cond.i334.i = or i1 %tobool46.i.i, %cmp48.i.i
  br i1 %or.cond.i334.i, label %land.lhs.true49.i.i, label %if.else156.i.i

land.lhs.true49.i.i:                              ; preds = %land.lhs.true45.i.i
  %336 = load i32* %giv_type.i.i, align 4, !tbaa !62
  %cmp51.i.i = icmp eq i32 %336, 0
  br i1 %cmp51.i.i, label %if.else156.i.i, label %land.lhs.true52.i.i

land.lhs.true52.i.i:                              ; preds = %land.lhs.true49.i.i
  %dest_reg.i.i = getelementptr inbounds %struct.induction* %v.1756.i.i, i64 0, i32 4
  %337 = load %struct.rtx_def** %dest_reg.i.i, align 8, !tbaa !54
  %arrayidx.i.i = getelementptr inbounds %struct.rtx_def* %337, i64 0, i32 1, i64 0
  %rtuint.i.i = bitcast %union.rtunion_def* %arrayidx.i.i to i32*
  %338 = load i32* %rtuint.i.i, align 4, !tbaa !10
  %339 = load i32* @max_reg_before_loop, align 4, !tbaa !10
  %cmp53.i.i = icmp ult i32 %338, %339
  br i1 %cmp53.i.i, label %lor.lhs.false54.i.i, label %land.lhs.true106.i.i

lor.lhs.false54.i.i:                              ; preds = %land.lhs.true52.i.i
  %idxprom.i.i = zext i32 %338 to i64
  %340 = load %struct.varray_head_tag** @reg_n_info, align 8, !tbaa !9
  %data.i.i = getelementptr inbounds %struct.varray_head_tag* %340, i64 0, i32 4
  %reg.i.i = bitcast %union.varray_data_tag* %data.i.i to [1 x %struct.reg_info_def*]*
  %arrayidx59.i.i = getelementptr inbounds [1 x %struct.reg_info_def*]* %reg.i.i, i64 0, i64 %idxprom.i.i
  %341 = load %struct.reg_info_def** %arrayidx59.i.i, align 8, !tbaa !9
  %first_uid.i.i = getelementptr inbounds %struct.reg_info_def* %341, i64 0, i32 0
  %342 = load i32* %first_uid.i.i, align 4, !tbaa !28
  %insn60.i.i = getelementptr inbounds %struct.induction* %v.1756.i.i, i64 0, i32 0
  %343 = load %struct.rtx_def** %insn60.i.i, align 8, !tbaa !56
  %arrayidx62.i.i = getelementptr inbounds %struct.rtx_def* %343, i64 0, i32 1, i64 0
  %rtint.i.i = bitcast %union.rtunion_def* %arrayidx62.i.i to i32*
  %344 = load i32* %rtint.i.i, align 4, !tbaa !10
  %cmp63.i.i = icmp eq i32 %342, %344
  br i1 %cmp63.i.i, label %lor.lhs.false84.i.i, label %land.lhs.true64.i.i

land.lhs.true64.i.i:                              ; preds = %lor.lhs.false54.i.i
  %call66.i.i = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %343, i32 6, %struct.rtx_def* null) #4
  %tobool67.i.i = icmp eq %struct.rtx_def* %call66.i.i, null
  br i1 %tobool67.i.i, label %land.lhs.true106.i.i, label %lor.lhs.false68.i.i

lor.lhs.false68.i.i:                              ; preds = %land.lhs.true64.i.i
  %345 = load %struct.rtx_def** %dest_reg.i.i, align 8, !tbaa !54
  %arrayidx71.i.i = getelementptr inbounds %struct.rtx_def* %345, i64 0, i32 1, i64 0
  %rtuint72.i.i = bitcast %union.rtunion_def* %arrayidx71.i.i to i32*
  %346 = load i32* %rtuint72.i.i, align 4, !tbaa !10
  %idxprom73.i.i = zext i32 %346 to i64
  %347 = load %struct.varray_head_tag** @reg_n_info, align 8, !tbaa !9
  %data74.i.i = getelementptr inbounds %struct.varray_head_tag* %347, i64 0, i32 4
  %reg75.i.i = bitcast %union.varray_data_tag* %data74.i.i to [1 x %struct.reg_info_def*]*
  %arrayidx76.i.i = getelementptr inbounds [1 x %struct.reg_info_def*]* %reg75.i.i, i64 0, i64 %idxprom73.i.i
  %348 = load %struct.reg_info_def** %arrayidx76.i.i, align 8, !tbaa !9
  %first_uid77.i.i = getelementptr inbounds %struct.reg_info_def* %348, i64 0, i32 0
  %349 = load i32* %first_uid77.i.i, align 4, !tbaa !28
  %arrayidx79.i.i = getelementptr inbounds %struct.rtx_def* %call66.i.i, i64 0, i32 1, i64 0
  %rtx.i.i = bitcast %union.rtunion_def* %arrayidx79.i.i to %struct.rtx_def**
  %350 = load %struct.rtx_def** %rtx.i.i, align 8, !tbaa !9
  %arrayidx81.i.i = getelementptr inbounds %struct.rtx_def* %350, i64 0, i32 1, i64 0
  %rtint82.i.i = bitcast %union.rtunion_def* %arrayidx81.i.i to i32*
  %351 = load i32* %rtint82.i.i, align 4, !tbaa !10
  %cmp83.i.i = icmp eq i32 %349, %351
  br i1 %cmp83.i.i, label %lor.lhs.false84.i.i, label %land.lhs.true106.i.i

lor.lhs.false84.i.i:                              ; preds = %lor.lhs.false68.i.i, %lor.lhs.false54.i.i
  %352 = phi %struct.reg_info_def* [ %348, %lor.lhs.false68.i.i ], [ %341, %lor.lhs.false54.i.i ]
  %353 = load i32** @uid_luid, align 8, !tbaa !9
  %354 = load %struct.rtx_def** %end, align 8, !tbaa !8
  %arrayidx96.i.i = getelementptr inbounds %struct.rtx_def* %354, i64 0, i32 1, i64 0
  %rtint97.i.i = bitcast %union.rtunion_def* %arrayidx96.i.i to i32*
  %355 = load i32* %rtint97.i.i, align 4, !tbaa !10
  %356 = load i32* @max_uid_for_loop, align 4, !tbaa !10
  %cmp98.i.i = icmp slt i32 %355, %356
  br i1 %cmp98.i.i, label %cond.true.i.i, label %cond.false.i.i

cond.true.i.i:                                    ; preds = %lor.lhs.false84.i.i
  %last_uid.i.i = getelementptr inbounds %struct.reg_info_def* %352, i64 0, i32 1
  %357 = load i32* %last_uid.i.i, align 4, !tbaa !30
  %idxprom93.i.i = sext i32 %357 to i64
  %arrayidx94.i.i = getelementptr inbounds i32* %353, i64 %idxprom93.i.i
  %358 = load i32* %arrayidx94.i.i, align 4, !tbaa !10
  %idxprom103.i.i = sext i32 %355 to i64
  %arrayidx104.i.i = getelementptr inbounds i32* %353, i64 %idxprom103.i.i
  %359 = load i32* %arrayidx104.i.i, align 4, !tbaa !10
  %cmp105.i.i = icmp slt i32 %358, %359
  br i1 %cmp105.i.i, label %if.else156.i.i, label %land.lhs.true106.i.i

cond.false.i.i:                                   ; preds = %lor.lhs.false84.i.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str13, i64 0, i64 0), i32 2772, i8* getelementptr inbounds ([21 x i8]* @__FUNCTION__.find_splittable_givs, i64 0, i64 0)) #5
  unreachable

land.lhs.true106.i.i:                             ; preds = %cond.true.i.i, %lor.lhs.false68.i.i, %land.lhs.true64.i.i, %land.lhs.true52.i.i
  %final_value107.i.i = getelementptr inbounds %struct.induction* %v.1756.i.i, i64 0, i32 11
  %360 = load %struct.rtx_def** %final_value107.i.i, align 8, !tbaa !63
  %tobool108.i.i = icmp eq %struct.rtx_def* %360, null
  br i1 %tobool108.i.i, label %for.inc549.i.i, label %if.else156.i.i

if.then112.i.i:                                   ; preds = %if.end43.i.i
  %361 = load i32* %regno.i.i, align 4, !tbaa !50
  %idxprom113.i.i = zext i32 %361 to i64
  %362 = load %struct.rtx_def*** @splittable_regs, align 8, !tbaa !9
  %arrayidx114.i.i = getelementptr inbounds %struct.rtx_def** %362, i64 %idxprom113.i.i
  %363 = load %struct.rtx_def** %arrayidx114.i.i, align 8, !tbaa !9
  %tobool115.i.i = icmp eq %struct.rtx_def* %363, null
  br i1 %tobool115.i.i, label %if.else.i.i, label %if.end150.i.i

if.else.i.i:                                      ; preds = %if.then112.i.i
  %364 = load %struct.rtx_def** %initial_value.i.i, align 8, !tbaa !57
  %365 = getelementptr inbounds %struct.rtx_def* %364, i64 0, i32 0
  %bf.load120.i.i = load i32* %365, align 8
  %bf.clear121.i.i = and i32 %bf.load120.i.i, 65535
  %cmp122.i.i = icmp eq i32 %bf.clear121.i.i, 61
  br i1 %cmp122.i.i, label %lor.lhs.false123.i.i, label %if.end150.i.i

lor.lhs.false123.i.i:                             ; preds = %if.else.i.i
  %arrayidx126.i.i = getelementptr inbounds %struct.rtx_def* %364, i64 0, i32 1, i64 0
  %rtuint127.i.i = bitcast %union.rtunion_def* %arrayidx126.i.i to i32*
  %366 = load i32* %rtuint127.i.i, align 4, !tbaa !10
  %cmp129.i.i = icmp ne i32 %366, %361
  %cmp135.i.i = icmp ugt i32 %366, 52
  %or.cond725.i.i = and i1 %cmp129.i.i, %cmp135.i.i
  br i1 %or.cond725.i.i, label %if.end150.i.i, label %if.else138.i.i

if.else138.i.i:                                   ; preds = %lor.lhs.false123.i.i
  %367 = load %struct.induction** %biv.i.i, align 8, !tbaa !53
  %mode140.i.i = getelementptr inbounds %struct.induction* %367, i64 0, i32 6
  %368 = load i32* %mode140.i.i, align 4, !tbaa !48
  %call141.i.i = tail call %struct.rtx_def* @gen_reg_rtx(i32 %368) #4
  %arrayidx143.i.i = getelementptr inbounds %struct.rtx_def* %call141.i.i, i64 0, i32 1, i64 0
  %rtuint144.i.i = bitcast %union.rtunion_def* %arrayidx143.i.i to i32*
  %369 = load i32* %rtuint144.i.i, align 4, !tbaa !10
  %370 = load %struct.induction** %biv.i.i, align 8, !tbaa !53
  %add_val.i335.i = getelementptr inbounds %struct.induction* %370, i64 0, i32 9
  %371 = load %struct.rtx_def** %add_val.i335.i, align 8, !tbaa !47
  tail call void @record_base_value(i32 %369, %struct.rtx_def* %371, i32 0) #4
  %372 = load %struct.induction** %biv.i.i, align 8, !tbaa !53
  %src_reg.i.i = getelementptr inbounds %struct.induction* %372, i64 0, i32 2
  %373 = load %struct.rtx_def** %src_reg.i.i, align 8, !tbaa !58
  %call147.i.i = tail call %struct.rtx_def* @gen_move_insn(%struct.rtx_def* %call141.i.i, %struct.rtx_def* %373) #4
  %call148.i.i = tail call %struct.rtx_def* @loop_insn_hoist(%struct.loop* %loop, %struct.rtx_def* %call147.i.i) #4
  br label %if.end150.i.i

if.end150.i.i:                                    ; preds = %if.else138.i.i, %lor.lhs.false123.i.i, %if.else.i.i, %if.then112.i.i
  %biv_initial_value.0.i.i = phi %struct.rtx_def* [ %call141.i.i, %if.else138.i.i ], [ %363, %if.then112.i.i ], [ %364, %lor.lhs.false123.i.i ], [ %364, %if.else.i.i ]
  %call151.i.i = tail call %struct.rtx_def* @extend_value_for_giv(%struct.induction* %v.1756.i.i, %struct.rtx_def* %biv_initial_value.0.i.i) #4
  %374 = load %struct.rtx_def** %mult_val.i332.i, align 8, !tbaa !45
  %add_val153.i.i = getelementptr inbounds %struct.induction* %v.1756.i.i, i64 0, i32 9
  %375 = load %struct.rtx_def** %add_val153.i.i, align 8, !tbaa !47
  %376 = load i32* %mode.i333.i, align 4, !tbaa !48
  %call155.i.i = tail call fastcc %struct.rtx_def* @fold_rtx_mult_add(%struct.rtx_def* %374, %struct.rtx_def* %call151.i.i, %struct.rtx_def* %375, i32 %376) #4
  br label %if.end157.i.i

if.else156.i.i:                                   ; preds = %land.lhs.true106.i.i, %cond.true.i.i, %land.lhs.true49.i.i, %land.lhs.true45.i.i
  %377 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !9
  br label %if.end157.i.i

if.end157.i.i:                                    ; preds = %if.else156.i.i, %if.end150.i.i
  %cmp111733.i.i = phi i1 [ true, %if.end150.i.i ], [ false, %if.else156.i.i ]
  %value.0.i.i = phi %struct.rtx_def* [ %call155.i.i, %if.end150.i.i ], [ %377, %if.else156.i.i ]
  %new_reg158.i.i = getelementptr inbounds %struct.induction* %v.1756.i.i, i64 0, i32 1
  %378 = load %struct.rtx_def** %new_reg158.i.i, align 8, !tbaa !60
  %tobool159.i.i = icmp eq %struct.rtx_def* %378, null
  br i1 %tobool159.i.i, label %for.inc549.i.i, label %if.then160.i.i

if.then160.i.i:                                   ; preds = %if.end157.i.i
  %same.i.i = getelementptr inbounds %struct.induction* %v.1756.i.i, i64 0, i32 18
  %379 = load %struct.induction** %same.i.i, align 8, !tbaa !64
  %tobool161.i.i = icmp eq %struct.induction* %379, null
  br i1 %tobool161.i.i, label %if.else171.i.i, label %land.lhs.true162.i.i

land.lhs.true162.i.i:                             ; preds = %if.then160.i.i
  %new_reg164.i.i = getelementptr inbounds %struct.induction* %379, i64 0, i32 1
  %380 = load %struct.rtx_def** %new_reg164.i.i, align 8, !tbaa !60
  %tobool165.i.i = icmp eq %struct.rtx_def* %380, null
  br i1 %tobool165.i.i, label %if.then166.i.i, label %if.else171.i.i

if.then166.i.i:                                   ; preds = %land.lhs.true162.i.i
  %381 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !9
  %tobool167.i.i = icmp eq %struct._IO_FILE* %381, null
  br i1 %tobool167.i.i, label %for.inc549.i.i, label %if.then168.i.i

if.then168.i.i:                                   ; preds = %if.then166.i.i
  %382 = tail call i64 @fwrite(i8* getelementptr inbounds ([44 x i8]* @.str58, i64 0, i64 0), i64 43, i64 1, %struct._IO_FILE* %381) #4
  br label %for.inc549.i.i

if.else171.i.i:                                   ; preds = %land.lhs.true162.i.i, %if.then160.i.i
  %383 = load i32* %giv_type.i.i, align 4, !tbaa !62
  %cmp173.i.i = icmp eq i32 %383, 1
  br i1 %cmp173.i.i, label %if.then174.i.i, label %if.else220.i.i

if.then174.i.i:                                   ; preds = %if.else171.i.i
  br i1 %cmp111733.i.i, label %land.lhs.true176.i.i, label %if.end213.i.i

land.lhs.true176.i.i:                             ; preds = %if.then174.i.i
  %384 = getelementptr inbounds %struct.rtx_def* %value.0.i.i, i64 0, i32 0
  %bf.load177.i.i = load i32* %384, align 8
  %bf.clear178.i.i = and i32 %bf.load177.i.i, 65535
  switch i32 %bf.clear178.i.i, label %if.then202.i.i [
    i32 54, label %if.end213.i.i
    i32 61, label %if.end213.i.i
    i32 75, label %lor.lhs.false188.i.i
  ]

lor.lhs.false188.i.i:                             ; preds = %land.lhs.true176.i.i
  %fld189.i.i = getelementptr inbounds %struct.rtx_def* %value.0.i.i, i64 0, i32 1
  %rtx191.i.i = bitcast [1 x %union.rtunion_def]* %fld189.i.i to %struct.rtx_def**
  %385 = load %struct.rtx_def** %rtx191.i.i, align 8, !tbaa !9
  %386 = getelementptr inbounds %struct.rtx_def* %385, i64 0, i32 0
  %bf.load192.i.i = load i32* %386, align 8
  %bf.clear193.i.i = and i32 %bf.load192.i.i, 65535
  %cmp194.i.i = icmp eq i32 %bf.clear193.i.i, 61
  br i1 %cmp194.i.i, label %lor.lhs.false195.i.i, label %if.then202.i.i

lor.lhs.false195.i.i:                             ; preds = %lor.lhs.false188.i.i
  %arrayidx197.i.i = getelementptr inbounds %struct.rtx_def* %value.0.i.i, i64 0, i32 1, i64 1
  %rtx198.i.i = bitcast %union.rtunion_def* %arrayidx197.i.i to %struct.rtx_def**
  %387 = load %struct.rtx_def** %rtx198.i.i, align 8, !tbaa !9
  %388 = getelementptr inbounds %struct.rtx_def* %387, i64 0, i32 0
  %bf.load199.i.i = load i32* %388, align 8
  %bf.clear200.i.i = and i32 %bf.load199.i.i, 65535
  %cmp201.i.i = icmp eq i32 %bf.clear200.i.i, 54
  br i1 %cmp201.i.i, label %if.end213.i.i, label %if.then202.i.i

if.then202.i.i:                                   ; preds = %lor.lhs.false195.i.i, %lor.lhs.false188.i.i, %land.lhs.true176.i.i
  %389 = load i32* %mode.i333.i, align 4, !tbaa !48
  %call205.i.i = tail call %struct.rtx_def* @gen_reg_rtx(i32 %389) #4
  %arrayidx207.i.i = getelementptr inbounds %struct.rtx_def* %call205.i.i, i64 0, i32 1, i64 0
  %rtuint208.i.i = bitcast %union.rtunion_def* %arrayidx207.i.i to i32*
  %390 = load i32* %rtuint208.i.i, align 4, !tbaa !10
  %add_val209.i.i = getelementptr inbounds %struct.induction* %v.1756.i.i, i64 0, i32 9
  %391 = load %struct.rtx_def** %add_val209.i.i, align 8, !tbaa !47
  tail call void @record_base_value(i32 %390, %struct.rtx_def* %391, i32 0) #4
  %392 = load %struct.rtx_def** %initial_value.i.i, align 8, !tbaa !57
  %393 = load %struct.rtx_def** %mult_val.i332.i, align 8, !tbaa !45
  %394 = load %struct.rtx_def** %add_val209.i.i, align 8, !tbaa !47
  tail call void @loop_iv_add_mult_hoist(%struct.loop* %loop, %struct.rtx_def* %392, %struct.rtx_def* %393, %struct.rtx_def* %394, %struct.rtx_def* %call205.i.i) #4
  %.pre.i.i = load %struct.rtx_def** %new_reg158.i.i, align 8, !tbaa !60
  br label %if.end213.i.i

if.end213.i.i:                                    ; preds = %if.then202.i.i, %lor.lhs.false195.i.i, %land.lhs.true176.i.i, %land.lhs.true176.i.i, %if.then174.i.i
  %395 = phi %struct.rtx_def* [ %.pre.i.i, %if.then202.i.i ], [ %378, %lor.lhs.false195.i.i ], [ %378, %land.lhs.true176.i.i ], [ %378, %if.then174.i.i ], [ %378, %land.lhs.true176.i.i ]
  %value.1.i.i = phi %struct.rtx_def* [ %call205.i.i, %if.then202.i.i ], [ %value.0.i.i, %lor.lhs.false195.i.i ], [ %value.0.i.i, %land.lhs.true176.i.i ], [ %value.0.i.i, %if.then174.i.i ], [ %value.0.i.i, %land.lhs.true176.i.i ]
  %arrayidx216.i.i = getelementptr inbounds %struct.rtx_def* %395, i64 0, i32 1, i64 0
  %rtuint217.i.i = bitcast %union.rtunion_def* %arrayidx216.i.i to i32*
  %396 = load i32* %rtuint217.i.i, align 4, !tbaa !10
  %idxprom218.i.i = zext i32 %396 to i64
  %397 = load %struct.rtx_def*** @splittable_regs, align 8, !tbaa !9
  %arrayidx219.i.i = getelementptr inbounds %struct.rtx_def** %397, i64 %idxprom218.i.i
  store %struct.rtx_def* %value.1.i.i, %struct.rtx_def** %arrayidx219.i.i, align 8, !tbaa !9
  br label %if.end489.i.i

if.else220.i.i:                                   ; preds = %if.else171.i.i
  %const_adjust.i.i = getelementptr inbounds %struct.induction* %v.1756.i.i, i64 0, i32 19
  store i64 0, i64* %const_adjust.i.i, align 8, !tbaa !65
  %same_insn221.i.i = getelementptr inbounds %struct.induction* %v.1756.i.i, i64 0, i32 20
  %398 = load %struct.induction** %same_insn221.i.i, align 8, !tbaa !61
  %tobool222.i.i = icmp eq %struct.induction* %398, null
  br i1 %tobool222.i.i, label %if.else235.i.i, label %if.then223.i.i

if.then223.i.i:                                   ; preds = %if.else220.i.i
  %dest_reg225.i.i = getelementptr inbounds %struct.induction* %398, i64 0, i32 4
  %399 = load %struct.rtx_def** %dest_reg225.i.i, align 8, !tbaa !54
  %dest_reg226.i.i = getelementptr inbounds %struct.induction* %v.1756.i.i, i64 0, i32 4
  store %struct.rtx_def* %399, %struct.rtx_def** %dest_reg226.i.i, align 8, !tbaa !54
  %400 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !9
  %tobool227.i.i = icmp eq %struct._IO_FILE* %400, null
  br i1 %tobool227.i.i, label %if.end441.i.i, label %if.then228.i.i

if.then228.i.i:                                   ; preds = %if.then223.i.i
  %insn229.i.i = getelementptr inbounds %struct.induction* %v.1756.i.i, i64 0, i32 0
  %401 = load %struct.rtx_def** %insn229.i.i, align 8, !tbaa !56
  %arrayidx231.i.i = getelementptr inbounds %struct.rtx_def* %401, i64 0, i32 1, i64 0
  %rtint232.i.i = bitcast %union.rtunion_def* %arrayidx231.i.i to i32*
  %402 = load i32* %rtint232.i.i, align 4, !tbaa !10
  %call233.i.i = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %400, i8* getelementptr inbounds ([33 x i8]* @.str59, i64 0, i64 0), i32 %402) #4
  br label %if.end441.i.i

if.else235.i.i:                                   ; preds = %if.else220.i.i
  br i1 %cmp19.i.i, label %land.lhs.true237.i.i, label %if.else413.i.i

land.lhs.true237.i.i:                             ; preds = %if.else235.i.i
  %cmp239.not.i.i = icmp ne i32 %383, 0
  %brmerge.i.i = or i1 %cmp239.not.i.i, %tobool161.i.i
  br i1 %brmerge.i.i, label %if.then277.i.i, label %land.lhs.true243.i.i

land.lhs.true243.i.i:                             ; preds = %land.lhs.true237.i.i
  %giv_type245.i.i = getelementptr inbounds %struct.induction* %379, i64 0, i32 3
  %403 = load i32* %giv_type245.i.i, align 4, !tbaa !62
  %cmp246.i.i = icmp eq i32 %403, 0
  br i1 %cmp246.i.i, label %land.lhs.true247.i.i, label %if.then277.i.i

land.lhs.true247.i.i:                             ; preds = %land.lhs.true243.i.i
  %unrolled.i.i = getelementptr inbounds %struct.induction* %379, i64 0, i32 13
  %bf.load249.i.i = load i16* %unrolled.i.i, align 4
  %bf.clear251.i.i = and i16 %bf.load249.i.i, 512
  %tobool253.i.i = icmp eq i16 %bf.clear251.i.i, 0
  br i1 %tobool253.i.i, label %if.then277.i.i, label %land.lhs.true254.i.i

land.lhs.true254.i.i:                             ; preds = %land.lhs.true247.i.i
  %mult_val256.i.i = getelementptr inbounds %struct.induction* %379, i64 0, i32 8
  %404 = load %struct.rtx_def** %mult_val256.i.i, align 8, !tbaa !45
  %405 = load %struct.rtx_def** %mult_val.i332.i, align 8, !tbaa !45
  %call258.i.i = tail call i32 @rtx_equal_p(%struct.rtx_def* %404, %struct.rtx_def* %405) #4
  %tobool259.i.i = icmp eq i32 %call258.i.i, 0
  br i1 %tobool259.i.i, label %if.then277.i.i, label %land.lhs.true260.i.i

land.lhs.true260.i.i:                             ; preds = %land.lhs.true254.i.i
  %406 = load %struct.induction** %same.i.i, align 8, !tbaa !64
  %add_val262.i.i = getelementptr inbounds %struct.induction* %406, i64 0, i32 9
  %407 = load %struct.rtx_def** %add_val262.i.i, align 8, !tbaa !47
  %add_val263.i.i = getelementptr inbounds %struct.induction* %v.1756.i.i, i64 0, i32 9
  %408 = load %struct.rtx_def** %add_val263.i.i, align 8, !tbaa !47
  %call264.i.i = tail call i32 @rtx_equal_p(%struct.rtx_def* %407, %struct.rtx_def* %408) #4
  %tobool265.i.i = icmp eq i32 %call264.i.i, 0
  br i1 %tobool265.i.i, label %if.then277.i.i, label %land.lhs.true266.i.i

land.lhs.true266.i.i:                             ; preds = %land.lhs.true260.i.i
  %call36.idx728.i.i = getelementptr %struct.rtx_def* %call36.i.i, i64 0, i32 1, i64 0, i32 0
  %call36.idx728.val.i.i = load i64* %call36.idx728.i.i, align 8, !tbaa !39
  %call267.i.i = tail call fastcc i32 @verify_addresses(%struct.induction* %v.1756.i.i, i64 %call36.idx728.val.i.i, i32 %unroll_number.51810) #4
  %tobool268.i.i = icmp eq i32 %call267.i.i, 0
  br i1 %tobool268.i.i, label %if.then277.i.i, label %if.then269.i.i

if.then269.i.i:                                   ; preds = %land.lhs.true266.i.i
  %409 = load %struct.induction** %same.i.i, align 8, !tbaa !64
  %dest_reg271.i.i = getelementptr inbounds %struct.induction* %409, i64 0, i32 4
  %410 = load %struct.rtx_def** %dest_reg271.i.i, align 8, !tbaa !54
  %dest_reg272.i.i = getelementptr inbounds %struct.induction* %v.1756.i.i, i64 0, i32 4
  store %struct.rtx_def* %410, %struct.rtx_def** %dest_reg272.i.i, align 8, !tbaa !54
  %shared.i.i = getelementptr inbounds %struct.induction* %v.1756.i.i, i64 0, i32 13
  %bf.load273.i.i = load i16* %shared.i.i, align 4
  %bf.set.i.i = or i16 %bf.load273.i.i, 1024
  store i16 %bf.set.i.i, i16* %shared.i.i, align 4
  br label %if.end441.i.i

if.then277.i.i:                                   ; preds = %land.lhs.true266.i.i, %land.lhs.true260.i.i, %land.lhs.true254.i.i, %land.lhs.true247.i.i, %land.lhs.true243.i.i, %land.lhs.true237.i.i
  %411 = load i32* %mode.i333.i, align 4, !tbaa !48
  %call280.i.i = tail call %struct.rtx_def* @gen_reg_rtx(i32 %411) #4
  %412 = load %struct.induction** %same.i.i, align 8, !tbaa !64
  %413 = load %struct.rtx_def** %new_reg158.i.i, align 8, !tbaa !60
  %arrayidx286.i.i = getelementptr inbounds %struct.rtx_def* %call280.i.i, i64 0, i32 1, i64 0
  %rtuint287.i.i = bitcast %union.rtunion_def* %arrayidx286.i.i to i32*
  %414 = load i32* %rtuint287.i.i, align 4, !tbaa !10
  %add_val288.i.i = getelementptr inbounds %struct.induction* %v.1756.i.i, i64 0, i32 9
  %415 = load %struct.rtx_def** %add_val288.i.i, align 8, !tbaa !47
  tail call void @record_base_value(i32 %414, %struct.rtx_def* %415, i32 0) #4
  %416 = getelementptr inbounds %struct.rtx_def* %413, i64 0, i32 0
  %bf.load289.i.i = load i32* %416, align 8
  %bf.clear290.i.i = and i32 %bf.load289.i.i, 65535
  %cmp291.i.i = icmp eq i32 %bf.clear290.i.i, 75
  br i1 %cmp291.i.i, label %land.lhs.true292.i.i, label %if.else330.i.i

land.lhs.true292.i.i:                             ; preds = %if.then277.i.i
  %arrayidx294.i.i = getelementptr inbounds %struct.rtx_def* %413, i64 0, i32 1, i64 1
  %rtx295.i.i = bitcast %union.rtunion_def* %arrayidx294.i.i to %struct.rtx_def**
  %417 = load %struct.rtx_def** %rtx295.i.i, align 8, !tbaa !9
  %418 = getelementptr inbounds %struct.rtx_def* %417, i64 0, i32 0
  %bf.load296.i.i = load i32* %418, align 8
  %bf.clear297.i.i = and i32 %bf.load296.i.i, 65535
  %cmp298.i.i = icmp eq i32 %bf.clear297.i.i, 54
  br i1 %cmp298.i.i, label %if.then299.i.i, label %if.else330.i.i

if.then299.i.i:                                   ; preds = %land.lhs.true292.i.i
  %rtwint.i.i = getelementptr inbounds %struct.rtx_def* %417, i64 0, i32 1, i64 0, i32 0
  %419 = load i64* %rtwint.i.i, align 8, !tbaa !39
  %call305.i.i = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %call280.i.i, i64 %419) #4
  %dest_reg306.i.i = getelementptr inbounds %struct.induction* %v.1756.i.i, i64 0, i32 4
  store %struct.rtx_def* %call305.i.i, %struct.rtx_def** %dest_reg306.i.i, align 8, !tbaa !54
  %call36.idx727.i.i = getelementptr %struct.rtx_def* %call36.i.i, i64 0, i32 1, i64 0, i32 0
  %call36.idx727.val.i.i = load i64* %call36.idx727.i.i, align 8, !tbaa !39
  %call307.i.i = tail call fastcc i32 @verify_addresses(%struct.induction* %v.1756.i.i, i64 %call36.idx727.val.i.i, i32 %unroll_number.51810) #4
  %tobool308.i.i = icmp eq i32 %call307.i.i, 0
  br i1 %tobool308.i.i, label %if.else327.i.i, label %if.then309.i.i

if.then309.i.i:                                   ; preds = %if.then299.i.i
  %420 = load %struct.rtx_def** %rtx295.i.i, align 8, !tbaa !9
  %rtwint315.i.i = getelementptr inbounds %struct.rtx_def* %420, i64 0, i32 1, i64 0, i32 0
  %421 = load i64* %rtwint315.i.i, align 8, !tbaa !39
  %sub.i.i = sub nsw i64 0, %421
  store i64 %sub.i.i, i64* %const_adjust.i.i, align 8, !tbaa !65
  %arrayidx318.i.i = getelementptr inbounds %struct.rtx_def* %413, i64 0, i32 1, i64 0
  %rtx319.i.i = bitcast %union.rtunion_def* %arrayidx318.i.i to %struct.rtx_def**
  %422 = load %struct.rtx_def** %rtx319.i.i, align 8, !tbaa !9
  %423 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !9
  %tobool320.i.i = icmp eq %struct._IO_FILE* %423, null
  br i1 %tobool320.i.i, label %if.end332.i.i, label %if.then321.i.i

if.then321.i.i:                                   ; preds = %if.then309.i.i
  %424 = load i32* %rtuint287.i.i, align 4, !tbaa !10
  %call325.i.i = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %423, i8* getelementptr inbounds ([34 x i8]* @.str60, i64 0, i64 0), i32 %424) #4
  br label %if.end332.i.i

if.else327.i.i:                                   ; preds = %if.then299.i.i
  store %struct.rtx_def* %call280.i.i, %struct.rtx_def** %dest_reg306.i.i, align 8, !tbaa !54
  br label %if.end332.i.i

if.else330.i.i:                                   ; preds = %land.lhs.true292.i.i, %if.then277.i.i
  %dest_reg331.i.i = getelementptr inbounds %struct.induction* %v.1756.i.i, i64 0, i32 4
  store %struct.rtx_def* %call280.i.i, %struct.rtx_def** %dest_reg331.i.i, align 8, !tbaa !54
  br label %if.end332.i.i

if.end332.i.i:                                    ; preds = %if.else330.i.i, %if.else327.i.i, %if.then321.i.i, %if.then309.i.i
  %new_reg283.0.i.i = phi %struct.rtx_def* [ %422, %if.then321.i.i ], [ %422, %if.then309.i.i ], [ %413, %if.else327.i.i ], [ %413, %if.else330.i.i ]
  %dest_reg333.i.i = getelementptr inbounds %struct.induction* %v.1756.i.i, i64 0, i32 4
  %425 = load %struct.rtx_def** %dest_reg333.i.i, align 8, !tbaa !54
  %cmp334.i.i = icmp eq %struct.rtx_def* %425, %call280.i.i
  br i1 %cmp334.i.i, label %land.lhs.true335.i.i, label %if.end359.i.i

land.lhs.true335.i.i:                             ; preds = %if.end332.i.i
  %call36.idx726.i.i = getelementptr %struct.rtx_def* %call36.i.i, i64 0, i32 1, i64 0, i32 0
  %call36.idx726.val.i.i = load i64* %call36.idx726.i.i, align 8, !tbaa !39
  %call336.i.i = tail call fastcc i32 @verify_addresses(%struct.induction* %v.1756.i.i, i64 %call36.idx726.val.i.i, i32 %unroll_number.51810) #4
  %tobool337.i.i = icmp eq i32 %call336.i.i, 0
  br i1 %tobool337.i.i, label %for.cond340.preheader.i.i, label %if.end359.i.i

for.cond340.preheader.i.i:                        ; preds = %land.lhs.true335.i.i
  %v2.1.in742.i.i = getelementptr inbounds %struct.induction* %v.1756.i.i, i64 0, i32 17
  %v2.1743.i.i = load %struct.induction** %v2.1.in742.i.i, align 8
  %tobool341744.i.i = icmp eq %struct.induction* %v2.1743.i.i, null
  br i1 %tobool341744.i.i, label %for.end350.i.i, label %for.body342.i.i

for.body342.i.i:                                  ; preds = %for.cond340.preheader.i.i, %for.cond340.backedge.i.i
  %v2.1745.i.i = phi %struct.induction* [ %v2.1.i.i, %for.cond340.backedge.i.i ], [ %v2.1743.i.i, %for.cond340.preheader.i.i ]
  %same_insn343.i.i = getelementptr inbounds %struct.induction* %v2.1745.i.i, i64 0, i32 20
  %426 = load %struct.induction** %same_insn343.i.i, align 8, !tbaa !61
  %cmp344.i.i = icmp eq %struct.induction* %426, %v.1756.i.i
  br i1 %cmp344.i.i, label %if.then345.i.i, label %for.cond340.backedge.i.i

for.cond340.backedge.i.i:                         ; preds = %if.then345.i.i, %for.body342.i.i
  %v2.1.in.i.i = getelementptr inbounds %struct.induction* %v2.1745.i.i, i64 0, i32 17
  %v2.1.i.i = load %struct.induction** %v2.1.in.i.i, align 8
  %tobool341.i.i = icmp eq %struct.induction* %v2.1.i.i, null
  br i1 %tobool341.i.i, label %for.end350.i.i, label %for.body342.i.i

if.then345.i.i:                                   ; preds = %for.body342.i.i
  store %struct.induction* null, %struct.induction** %same_insn343.i.i, align 8, !tbaa !61
  br label %for.cond340.backedge.i.i

for.end350.i.i:                                   ; preds = %for.cond340.backedge.i.i, %for.cond340.preheader.i.i
  %427 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !9
  %tobool351.i.i = icmp eq %struct._IO_FILE* %427, null
  br i1 %tobool351.i.i, label %for.inc549.i.i, label %if.then352.i.i

if.then352.i.i:                                   ; preds = %for.end350.i.i
  %insn353.i.i = getelementptr inbounds %struct.induction* %v.1756.i.i, i64 0, i32 0
  %428 = load %struct.rtx_def** %insn353.i.i, align 8, !tbaa !56
  %arrayidx355.i.i = getelementptr inbounds %struct.rtx_def* %428, i64 0, i32 1, i64 0
  %rtint356.i.i = bitcast %union.rtunion_def* %arrayidx355.i.i to i32*
  %429 = load i32* %rtint356.i.i, align 4, !tbaa !10
  %call357.i.i = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %427, i8* getelementptr inbounds ([36 x i8]* @.str61, i64 0, i64 0), i32 %429) #4
  br label %for.inc549.i.i

if.end359.i.i:                                    ; preds = %land.lhs.true335.i.i, %if.end332.i.i
  store %struct.rtx_def* %new_reg283.0.i.i, %struct.rtx_def** %new_reg158.i.i, align 8, !tbaa !60
  store %struct.induction* %412, %struct.induction** %same.i.i, align 8, !tbaa !64
  %unrolled362.i.i = getelementptr inbounds %struct.induction* %v.1756.i.i, i64 0, i32 13
  %bf.load363.i.i = load i16* %unrolled362.i.i, align 4
  %bf.set365.i.i = or i16 %bf.load363.i.i, 512
  store i16 %bf.set365.i.i, i16* %unrolled362.i.i, align 4
  %call367.i.i = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %new_reg283.0.i.i) #4
  %call368.i.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call280.i.i, %struct.rtx_def* %call367.i.i) #4
  %call369.i.i = tail call %struct.rtx_def* @loop_insn_hoist(%struct.loop* %loop, %struct.rtx_def* %call368.i.i) #4
  %430 = load %struct.rtx_def** %start, align 8, !tbaa !7
  %arrayidx371.i.i = getelementptr inbounds %struct.rtx_def* %430, i64 0, i32 1, i64 1
  %rtx372.i.i = bitcast %union.rtunion_def* %arrayidx371.i.i to %struct.rtx_def**
  %431 = load %struct.rtx_def** %rtx372.i.i, align 8, !tbaa !9
  %arrayidx374.i.i = getelementptr inbounds %struct.rtx_def* %431, i64 0, i32 1, i64 4
  %rtint375.i.i = bitcast %union.rtunion_def* %arrayidx374.i.i to i32*
  %432 = load i32* %rtint375.i.i, align 4, !tbaa !10
  %cmp376.i.i = icmp sgt i32 %432, -1
  br i1 %cmp376.i.i, label %if.end441.i.i, label %cond.end391.i.i

cond.end391.i.i:                                  ; preds = %if.end359.i.i
  %call390.i.i = tail call i32 @recog_memoized_1(%struct.rtx_def* %431) #4
  %cmp393.i.i = icmp slt i32 %call390.i.i, 0
  br i1 %cmp393.i.i, label %if.then394.i.i, label %if.end441.i.i

if.then394.i.i:                                   ; preds = %cond.end391.i.i
  %433 = load %struct.rtx_def** %start, align 8, !tbaa !7
  %arrayidx397.i.i = getelementptr inbounds %struct.rtx_def* %433, i64 0, i32 1, i64 1
  %rtx398.i.i = bitcast %union.rtunion_def* %arrayidx397.i.i to %struct.rtx_def**
  %434 = load %struct.rtx_def** %rtx398.i.i, align 8, !tbaa !9
  %call399.i.i = tail call %struct.rtx_def* @delete_related_insns(%struct.rtx_def* %434) #4
  tail call void @start_sequence() #4
  %435 = load %struct.rtx_def** %new_reg158.i.i, align 8, !tbaa !60
  %call401.i.i = tail call %struct.rtx_def* @force_operand(%struct.rtx_def* %435, %struct.rtx_def* %call280.i.i) #4
  %cmp402.i.i = icmp eq %struct.rtx_def* %call401.i.i, %call280.i.i
  br i1 %cmp402.i.i, label %if.end405.i.i, label %if.then403.i.i

if.then403.i.i:                                   ; preds = %if.then394.i.i
  %call404.i.i = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call280.i.i, %struct.rtx_def* %call401.i.i) #4
  br label %if.end405.i.i

if.end405.i.i:                                    ; preds = %if.then403.i.i, %if.then394.i.i
  %call406.i.i = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  %call407.i.i = tail call %struct.rtx_def* @loop_insn_hoist(%struct.loop* %loop, %struct.rtx_def* %call406.i.i) #4
  %436 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !9
  %tobool408.i.i = icmp eq %struct._IO_FILE* %436, null
  br i1 %tobool408.i.i, label %if.end441.i.i, label %if.then409.i.i

if.then409.i.i:                                   ; preds = %if.end405.i.i
  %437 = tail call i64 @fwrite(i8* getelementptr inbounds ([31 x i8]* @.str62, i64 0, i64 0), i64 30, i64 1, %struct._IO_FILE* %436) #4
  br label %if.end441.i.i

if.else413.i.i:                                   ; preds = %if.else235.i.i
  %dest_reg414.i.i = getelementptr inbounds %struct.induction* %v.1756.i.i, i64 0, i32 4
  store %struct.rtx_def* %value.0.i.i, %struct.rtx_def** %dest_reg414.i.i, align 8, !tbaa !54
  %call36.idx.i.i = getelementptr %struct.rtx_def* %call36.i.i, i64 0, i32 1, i64 0, i32 0
  %call36.idx.val.i.i = load i64* %call36.idx.i.i, align 8, !tbaa !39
  %call415.i.i = tail call fastcc i32 @verify_addresses(%struct.induction* %v.1756.i.i, i64 %call36.idx.val.i.i, i32 %unroll_number.51810) #4
  %tobool416.i.i = icmp eq i32 %call415.i.i, 0
  br i1 %tobool416.i.i, label %for.cond419.preheader.i.i, label %if.end441.i.i

for.cond419.preheader.i.i:                        ; preds = %if.else413.i.i
  %v2.2.in738.i.i = getelementptr inbounds %struct.induction* %v.1756.i.i, i64 0, i32 17
  %v2.2739.i.i = load %struct.induction** %v2.2.in738.i.i, align 8
  %tobool420740.i.i = icmp eq %struct.induction* %v2.2739.i.i, null
  br i1 %tobool420740.i.i, label %for.end429.i.i, label %for.body421.i.i

for.body421.i.i:                                  ; preds = %for.cond419.preheader.i.i, %for.cond419.backedge.i.i
  %v2.2741.i.i = phi %struct.induction* [ %v2.2.i.i, %for.cond419.backedge.i.i ], [ %v2.2739.i.i, %for.cond419.preheader.i.i ]
  %same_insn422.i.i = getelementptr inbounds %struct.induction* %v2.2741.i.i, i64 0, i32 20
  %438 = load %struct.induction** %same_insn422.i.i, align 8, !tbaa !61
  %cmp423.i.i = icmp eq %struct.induction* %438, %v.1756.i.i
  br i1 %cmp423.i.i, label %if.then424.i.i, label %for.cond419.backedge.i.i

for.cond419.backedge.i.i:                         ; preds = %if.then424.i.i, %for.body421.i.i
  %v2.2.in.i.i = getelementptr inbounds %struct.induction* %v2.2741.i.i, i64 0, i32 17
  %v2.2.i.i = load %struct.induction** %v2.2.in.i.i, align 8
  %tobool420.i.i = icmp eq %struct.induction* %v2.2.i.i, null
  br i1 %tobool420.i.i, label %for.end429.i.i, label %for.body421.i.i

if.then424.i.i:                                   ; preds = %for.body421.i.i
  store %struct.induction* null, %struct.induction** %same_insn422.i.i, align 8, !tbaa !61
  br label %for.cond419.backedge.i.i

for.end429.i.i:                                   ; preds = %for.cond419.backedge.i.i, %for.cond419.preheader.i.i
  %439 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !9
  %tobool430.i.i = icmp eq %struct._IO_FILE* %439, null
  br i1 %tobool430.i.i, label %for.inc549.i.i, label %if.then431.i.i

if.then431.i.i:                                   ; preds = %for.end429.i.i
  %insn432.i.i = getelementptr inbounds %struct.induction* %v.1756.i.i, i64 0, i32 0
  %440 = load %struct.rtx_def** %insn432.i.i, align 8, !tbaa !56
  %arrayidx434.i.i = getelementptr inbounds %struct.rtx_def* %440, i64 0, i32 1, i64 0
  %rtint435.i.i = bitcast %union.rtunion_def* %arrayidx434.i.i to i32*
  %441 = load i32* %rtint435.i.i, align 4, !tbaa !10
  %call436.i.i = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %439, i8* getelementptr inbounds ([36 x i8]* @.str61, i64 0, i64 0), i32 %441) #4
  br label %for.inc549.i.i

if.end441.i.i:                                    ; preds = %if.else413.i.i, %if.then409.i.i, %if.end405.i.i, %cond.end391.i.i, %if.end359.i.i, %if.then269.i.i, %if.then228.i.i, %if.then223.i.i
  %dest_reg442.i.i = getelementptr inbounds %struct.induction* %v.1756.i.i, i64 0, i32 4
  %442 = load %struct.rtx_def** %dest_reg442.i.i, align 8, !tbaa !54
  %location.i.i = getelementptr inbounds %struct.induction* %v.1756.i.i, i64 0, i32 5
  %443 = load %struct.rtx_def*** %location.i.i, align 8, !tbaa !66
  store %struct.rtx_def* %442, %struct.rtx_def** %443, align 8, !tbaa !9
  %444 = load %struct.induction** %same.i.i, align 8, !tbaa !64
  %tobool444.i.i = icmp eq %struct.induction* %444, null
  br i1 %tobool444.i.i, label %if.end458.i.i, label %land.lhs.true445.i.i

land.lhs.true445.i.i:                             ; preds = %if.end441.i.i
  %giv_type447.i.i = getelementptr inbounds %struct.induction* %444, i64 0, i32 3
  %445 = load i32* %giv_type447.i.i, align 4, !tbaa !62
  %cmp448.i.i = icmp eq i32 %445, 1
  br i1 %cmp448.i.i, label %if.then449.i.i, label %if.end458.i.i

if.then449.i.i:                                   ; preds = %land.lhs.true445.i.i
  %new_reg452.i.i = getelementptr inbounds %struct.induction* %444, i64 0, i32 1
  %446 = load %struct.rtx_def** %new_reg452.i.i, align 8, !tbaa !60
  %arrayidx454.i.i = getelementptr inbounds %struct.rtx_def* %446, i64 0, i32 1, i64 0
  %rtuint455.i.i = bitcast %union.rtunion_def* %arrayidx454.i.i to i32*
  %447 = load i32* %rtuint455.i.i, align 4, !tbaa !10
  %idxprom456.i.i = zext i32 %447 to i64
  %448 = load %struct.induction*** @addr_combined_regs, align 8, !tbaa !9
  %arrayidx457.i.i = getelementptr inbounds %struct.induction** %448, i64 %idxprom456.i.i
  store %struct.induction* %444, %struct.induction** %arrayidx457.i.i, align 8, !tbaa !9
  br label %if.end458.i.i

if.end458.i.i:                                    ; preds = %if.then449.i.i, %land.lhs.true445.i.i, %if.end441.i.i
  %449 = load %struct.rtx_def** %new_reg158.i.i, align 8, !tbaa !60
  %450 = getelementptr inbounds %struct.rtx_def* %449, i64 0, i32 0
  %bf.load460.i.i = load i32* %450, align 8
  %bf.clear461.i.i = and i32 %bf.load460.i.i, 65535
  %cmp462.i.i = icmp eq i32 %bf.clear461.i.i, 61
  br i1 %cmp462.i.i, label %if.then463.i.i, label %if.end481.i.i

if.then463.i.i:                                   ; preds = %if.end458.i.i
  %arrayidx466.i.i = getelementptr inbounds %struct.rtx_def* %449, i64 0, i32 1, i64 0
  %rtuint467.i.i = bitcast %union.rtunion_def* %arrayidx466.i.i to i32*
  %451 = load i32* %rtuint467.i.i, align 4, !tbaa !10
  %idxprom468.i.i = zext i32 %451 to i64
  %452 = load %struct.rtx_def*** @splittable_regs, align 8, !tbaa !9
  %arrayidx469.i.i = getelementptr inbounds %struct.rtx_def** %452, i64 %idxprom468.i.i
  store %struct.rtx_def* %value.0.i.i, %struct.rtx_def** %arrayidx469.i.i, align 8, !tbaa !9
  %453 = load %struct.induction** %same.i.i, align 8, !tbaa !64
  %tobool471.i.i = icmp eq %struct.induction* %453, null
  br i1 %tobool471.i.i, label %if.then472.i.i, label %if.end481.i.i

if.then472.i.i:                                   ; preds = %if.then463.i.i
  store %struct.induction* %v.1756.i.i, %struct.induction** %same.i.i, align 8, !tbaa !64
  %454 = load %struct.rtx_def** %new_reg158.i.i, align 8, !tbaa !60
  %arrayidx476.i.i = getelementptr inbounds %struct.rtx_def* %454, i64 0, i32 1, i64 0
  %rtuint477.i.i = bitcast %union.rtunion_def* %arrayidx476.i.i to i32*
  %455 = load i32* %rtuint477.i.i, align 4, !tbaa !10
  %idxprom478.i.i = zext i32 %455 to i64
  %456 = load %struct.induction*** @addr_combined_regs, align 8, !tbaa !9
  %arrayidx479.i.i = getelementptr inbounds %struct.induction** %456, i64 %idxprom478.i.i
  store %struct.induction* %v.1756.i.i, %struct.induction** %arrayidx479.i.i, align 8, !tbaa !9
  br label %if.end481.i.i

if.end481.i.i:                                    ; preds = %if.then472.i.i, %if.then463.i.i, %if.end458.i.i
  %457 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !9
  %tobool482.i.i = icmp eq %struct._IO_FILE* %457, null
  br i1 %tobool482.i.i, label %if.end489.i.i, label %if.then483.i.i

if.then483.i.i:                                   ; preds = %if.end481.i.i
  %458 = tail call i64 @fwrite(i8* getelementptr inbounds ([28 x i8]* @.str63, i64 0, i64 0), i64 27, i64 1, %struct._IO_FILE* %457) #4
  br label %if.end489.i.i

if.end489.i.i:                                    ; preds = %if.then483.i.i, %if.end481.i.i, %if.end213.i.i
  %459 = load %struct.rtx_def** %new_reg158.i.i, align 8, !tbaa !60
  %460 = getelementptr inbounds %struct.rtx_def* %459, i64 0, i32 0
  %bf.load491.i.i = load i32* %460, align 8
  %bf.clear492.i.i = and i32 %bf.load491.i.i, 65535
  %cmp493.i.i = icmp eq i32 %bf.clear492.i.i, 61
  br i1 %cmp493.i.i, label %if.then494.i.i, label %if.end515.i.i

if.then494.i.i:                                   ; preds = %if.end489.i.i
  %ignore495.i.i = getelementptr inbounds %struct.induction* %v.1756.i.i, i64 0, i32 13
  %bf.load496.i.i = load i16* %ignore495.i.i, align 4
  %bf.clear498.i.i = and i16 %bf.load496.i.i, 4
  %tobool500.i.i = icmp eq i16 %bf.clear498.i.i, 0
  br i1 %tobool500.i.i, label %if.then501.i.i, label %if.end508.i.i

if.then501.i.i:                                   ; preds = %if.then494.i.i
  %src_reg502.i.i = getelementptr inbounds %struct.induction* %v.1756.i.i, i64 0, i32 2
  %461 = load %struct.rtx_def** %src_reg502.i.i, align 8, !tbaa !58
  %arrayidx504.i.i = getelementptr inbounds %struct.rtx_def* %461, i64 0, i32 1, i64 0
  %rtuint505.i.i = bitcast %union.rtunion_def* %arrayidx504.i.i to i32*
  %462 = load i32* %rtuint505.i.i, align 4, !tbaa !10
  %idxprom506.i.i = zext i32 %462 to i64
  %463 = load %struct.iv** %regs.i.i, align 8, !tbaa !67
  %class.i.i = getelementptr inbounds %struct.iv* %463, i64 %idxprom506.i.i, i32 1, i32 0
  %464 = load %struct.iv_class** %class.i.i, align 8, !tbaa !9
  %biv_count.i.i = getelementptr inbounds %struct.iv_class* %464, i64 0, i32 1
  %465 = load i32* %biv_count.i.i, align 4, !tbaa !59
  br label %if.end508.i.i

if.end508.i.i:                                    ; preds = %if.then501.i.i, %if.then494.i.i
  %count.0.i.i = phi i32 [ 1, %if.then494.i.i ], [ %465, %if.then501.i.i ]
  %arrayidx511.i.i = getelementptr inbounds %struct.rtx_def* %459, i64 0, i32 1, i64 0
  %rtuint512.i.i = bitcast %union.rtunion_def* %arrayidx511.i.i to i32*
  %466 = load i32* %rtuint512.i.i, align 4, !tbaa !10
  %idxprom513.i.i = zext i32 %466 to i64
  %467 = load i32** @splittable_regs_updates, align 8, !tbaa !9
  %arrayidx514.i.i = getelementptr inbounds i32* %467, i64 %idxprom513.i.i
  store i32 %count.0.i.i, i32* %arrayidx514.i.i, align 4, !tbaa !10
  br label %if.end515.i.i

if.end515.i.i:                                    ; preds = %if.end508.i.i, %if.end489.i.i
  %inc.i.i = add nsw i32 %result.0748.i.i, 1
  %468 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !9
  %tobool516.i.i = icmp eq %struct._IO_FILE* %468, null
  br i1 %tobool516.i.i, label %for.inc549.i.i, label %if.then517.i.i

if.then517.i.i:                                   ; preds = %if.end515.i.i
  %dest_reg518.i.i = getelementptr inbounds %struct.induction* %v.1756.i.i, i64 0, i32 4
  %469 = load %struct.rtx_def** %dest_reg518.i.i, align 8, !tbaa !54
  %470 = getelementptr inbounds %struct.rtx_def* %469, i64 0, i32 0
  %bf.load519.i.i = load i32* %470, align 8
  %bf.clear520.i.i = and i32 %bf.load519.i.i, 65535
  %cmp521.i.i = icmp eq i32 %bf.clear520.i.i, 54
  br i1 %cmp521.i.i, label %if.end542.i.i, label %if.else523.i.i

if.else523.i.i:                                   ; preds = %if.then517.i.i
  %cmp527.i.i = icmp eq i32 %bf.clear520.i.i, 61
  %arrayidx531.i.i = getelementptr inbounds %struct.rtx_def* %469, i64 0, i32 1, i64 0
  br i1 %cmp527.i.i, label %if.else536.i.i, label %if.then528.i.i

if.then528.i.i:                                   ; preds = %if.else523.i.i
  %rtx532.i.i = bitcast %union.rtunion_def* %arrayidx531.i.i to %struct.rtx_def**
  %471 = load %struct.rtx_def** %rtx532.i.i, align 8, !tbaa !9
  %arrayidx534.i.i = getelementptr inbounds %struct.rtx_def* %471, i64 0, i32 1, i64 0
  %rtuint535.i.i = bitcast %union.rtunion_def* %arrayidx534.i.i to i32*
  %472 = load i32* %rtuint535.i.i, align 4, !tbaa !10
  br label %if.end542.i.i

if.else536.i.i:                                   ; preds = %if.else523.i.i
  %rtuint540.i.i = bitcast %union.rtunion_def* %arrayidx531.i.i to i32*
  %473 = load i32* %rtuint540.i.i, align 4, !tbaa !10
  br label %if.end542.i.i

if.end542.i.i:                                    ; preds = %if.else536.i.i, %if.then528.i.i, %if.then517.i.i
  %regnum.0.i.i = phi i32 [ %472, %if.then528.i.i ], [ %473, %if.else536.i.i ], [ -1, %if.then517.i.i ]
  %insn543.i.i = getelementptr inbounds %struct.induction* %v.1756.i.i, i64 0, i32 0
  %474 = load %struct.rtx_def** %insn543.i.i, align 8, !tbaa !56
  %arrayidx545.i.i = getelementptr inbounds %struct.rtx_def* %474, i64 0, i32 1, i64 0
  %rtint546.i.i = bitcast %union.rtunion_def* %arrayidx545.i.i to i32*
  %475 = load i32* %rtint546.i.i, align 4, !tbaa !10
  %call547.i.i = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %468, i8* getelementptr inbounds ([34 x i8]* @.str64, i64 0, i64 0), i32 %regnum.0.i.i, i32 %475) #4
  br label %for.inc549.i.i

for.inc549.i.i:                                   ; preds = %for.body24.i.i.i, %if.end542.i.i, %if.end515.i.i, %if.then431.i.i, %for.end429.i.i, %if.then352.i.i, %for.end350.i.i, %if.then168.i.i, %if.then166.i.i, %if.end157.i.i, %land.lhs.true106.i.i, %lor.lhs.false38.i.i, %if.end35.i.i, %land.lhs.true25.i.i, %land.lhs.true20.i.i
  %result.1.i.i = phi i32 [ %result.0748.i.i, %land.lhs.true20.i.i ], [ %result.0748.i.i, %lor.lhs.false38.i.i ], [ %inc.i.i, %if.end542.i.i ], [ %inc.i.i, %if.end515.i.i ], [ %result.0748.i.i, %if.then352.i.i ], [ %result.0748.i.i, %for.end350.i.i ], [ %result.0748.i.i, %if.then431.i.i ], [ %result.0748.i.i, %for.end429.i.i ], [ %result.0748.i.i, %if.then168.i.i ], [ %result.0748.i.i, %if.then166.i.i ], [ %result.0748.i.i, %if.end157.i.i ], [ %result.0748.i.i, %land.lhs.true106.i.i ], [ %result.0748.i.i, %if.end35.i.i ], [ %result.0748.i.i, %land.lhs.true25.i.i ], [ %result.0748.i.i, %for.body24.i.i.i ]
  %next_iv550.i.i = getelementptr inbounds %struct.induction* %v.1756.i.i, i64 0, i32 17
  %v.1.i.i = load %struct.induction** %next_iv550.i.i, align 8
  %tobool17.i.i = icmp eq %struct.induction* %v.1.i.i, null
  br i1 %tobool17.i.i, label %find_splittable_givs.exit.i, label %for.body18.i.i

find_splittable_givs.exit.i:                      ; preds = %for.inc549.i.i, %for.cond16.preheader.i.i, %if.end197.i
  %result.0.lcssa.i.i = phi i32 [ 0, %for.cond16.preheader.i.i ], [ 0, %if.end197.i ], [ %result.1.i.i, %for.inc549.i.i ]
  %add199.i = add nsw i32 %result.0.lcssa.i.i, %result.1.i
  %tobool200.i = icmp eq %struct.rtx_def* %biv_final_value.0.i, null
  br i1 %tobool200.i, label %for.inc243.i, label %if.then201.i

if.then201.i:                                     ; preds = %find_splittable_givs.exit.i
  %476 = load i32* %exit_count202.i, align 4, !tbaa !49
  %tobool203.i = icmp eq i32 %476, 0
  %477 = load %struct.induction** %biv.i.i, align 8, !tbaa !53
  br i1 %tobool203.i, label %if.then204.i, label %if.else209.i

if.then204.i:                                     ; preds = %if.then201.i
  %src_reg206.i = getelementptr inbounds %struct.induction* %477, i64 0, i32 2
  %478 = load %struct.rtx_def** %src_reg206.i, align 8, !tbaa !58
  %call207.i = tail call %struct.rtx_def* @gen_move_insn(%struct.rtx_def* %478, %struct.rtx_def* %biv_final_value.0.i) #4
  %call208.i = tail call %struct.rtx_def* @loop_insn_sink(%struct.loop* %loop, %struct.rtx_def* %call207.i) #4
  br label %for.inc243.i

if.else209.i:                                     ; preds = %if.then201.i
  %mode212.i = getelementptr inbounds %struct.induction* %477, i64 0, i32 6
  %479 = load i32* %mode212.i, align 4, !tbaa !48
  %call213.i = tail call %struct.rtx_def* @gen_reg_rtx(i32 %479) #4
  %arrayidx215.i = getelementptr inbounds %struct.rtx_def* %call213.i, i64 0, i32 1, i64 0
  %rtuint216.i = bitcast %union.rtunion_def* %arrayidx215.i to i32*
  %480 = load i32* %rtuint216.i, align 4, !tbaa !10
  %481 = load %struct.induction** %biv.i.i, align 8, !tbaa !53
  %add_val218.i = getelementptr inbounds %struct.induction* %481, i64 0, i32 9
  %482 = load %struct.rtx_def** %add_val218.i, align 8, !tbaa !47
  tail call void @record_base_value(i32 %480, %struct.rtx_def* %482, i32 0) #4
  %483 = load %struct.induction** %biv.i.i, align 8, !tbaa !53
  %src_reg220.i = getelementptr inbounds %struct.induction* %483, i64 0, i32 2
  %484 = load %struct.rtx_def** %src_reg220.i, align 8, !tbaa !58
  %call221.i = tail call %struct.rtx_def* @gen_move_insn(%struct.rtx_def* %call213.i, %struct.rtx_def* %484) #4
  %call222.i = tail call %struct.rtx_def* @loop_insn_hoist(%struct.loop* %loop, %struct.rtx_def* %call221.i) #4
  %485 = load %struct.induction** %biv.i.i, align 8, !tbaa !53
  %src_reg224.i = getelementptr inbounds %struct.induction* %485, i64 0, i32 2
  %486 = load %struct.rtx_def** %src_reg224.i, align 8, !tbaa !58
  %call225.i = tail call %struct.rtx_def* @gen_move_insn(%struct.rtx_def* %486, %struct.rtx_def* %biv_final_value.0.i) #4
  %call226.i = tail call %struct.rtx_def* @loop_insn_hoist(%struct.loop* %loop, %struct.rtx_def* %call225.i) #4
  %487 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !9
  %tobool227.i = icmp eq %struct._IO_FILE* %487, null
  br i1 %tobool227.i, label %if.end238.i, label %if.then228.i

if.then228.i:                                     ; preds = %if.else209.i
  %488 = load %struct.induction** %biv.i.i, align 8, !tbaa !53
  %src_reg230.i = getelementptr inbounds %struct.induction* %488, i64 0, i32 2
  %489 = load %struct.rtx_def** %src_reg230.i, align 8, !tbaa !58
  %arrayidx232.i = getelementptr inbounds %struct.rtx_def* %489, i64 0, i32 1, i64 0
  %rtuint233.i = bitcast %union.rtunion_def* %arrayidx232.i to i32*
  %490 = load i32* %rtuint233.i, align 4, !tbaa !10
  %491 = load i32* %rtuint216.i, align 4, !tbaa !10
  %call237.i = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %487, i8* getelementptr inbounds ([32 x i8]* @.str57, i64 0, i64 0), i32 %490, i32 %491) #4
  br label %if.end238.i

if.end238.i:                                      ; preds = %if.then228.i, %if.else209.i
  %492 = load %struct.induction** %biv.i.i, align 8, !tbaa !53
  %src_reg240.i = getelementptr inbounds %struct.induction* %492, i64 0, i32 2
  store %struct.rtx_def* %call213.i, %struct.rtx_def** %src_reg240.i, align 8, !tbaa !58
  br label %for.inc243.i

for.inc243.i:                                     ; preds = %land.lhs.true.i.i, %for.body.i.i, %if.end238.i, %if.then204.i, %find_splittable_givs.exit.i, %lor.lhs.false.i1744, %biv_total_increment.exit.i
  %result.2.i = phi i32 [ %result.0349.i, %lor.lhs.false.i1744 ], [ %add199.i, %if.end238.i ], [ %add199.i, %if.then204.i ], [ %add199.i, %find_splittable_givs.exit.i ], [ %result.0349.i, %biv_total_increment.exit.i ], [ %result.0349.i, %for.body.i.i ], [ %result.0349.i, %land.lhs.true.i.i ]
  %next.i = getelementptr inbounds %struct.iv_class* %bl.0351.i, i64 0, i32 9
  %bl.0.i = load %struct.iv_class** %next.i, align 8
  %tobool.i1751 = icmp eq %struct.iv_class* %bl.0.i, null
  br i1 %tobool.i1751, label %find_splittable_regs.exit, label %for.body.i1739

find_splittable_regs.exit:                        ; preds = %for.inc243.i, %if.else1042
  %result.0.lcssa.i = phi i32 [ 0, %if.else1042 ], [ %result.2.i, %for.inc243.i ]
  %conv1044 = sext i32 %result.0.lcssa.i to i64
  br label %if.end1045

if.end1045:                                       ; preds = %if.end1038, %find_splittable_regs.exit
  %temp.4 = phi i64 [ %conv1044, %find_splittable_regs.exit ], [ 0, %if.end1038 ]
  %call1046 = tail call i32 @max_reg_num() #4
  %conv1047 = zext i32 %call1046 to i64
  %mul1048 = shl nuw nsw i64 %conv1047, 3
  %call1049 = tail call noalias i8* @xmalloc(i64 %mul1048) #4
  %493 = bitcast i8* %call1049 to %struct.rtx_def**
  %reg_map1050 = getelementptr inbounds i8* %call446, i64 32
  %494 = bitcast i8* %reg_map1050 to %struct.rtx_def***
  store %struct.rtx_def** %493, %struct.rtx_def*** %494, align 8, !tbaa !32
  %i.032.i1752 = add i32 %call1046, -1
  %cmp33.i1753 = icmp sgt i32 %i.032.i1752, 57
  br i1 %cmp33.i1753, label %for.body.lr.ph.i1755, label %for.body5.i1771

for.body.lr.ph.i1755:                             ; preds = %if.end1045
  %495 = sext i32 %i.032.i1752 to i64
  br label %for.body.i1766

for.body.i1766:                                   ; preds = %for.body.i1766.for.body.i1766_crit_edge, %for.body.lr.ph.i1755
  %496 = phi %struct.rtx_def** [ %493, %for.body.lr.ph.i1755 ], [ %.pre, %for.body.i1766.for.body.i1766_crit_edge ]
  %indvars.iv35.i1757 = phi i64 [ %495, %for.body.lr.ph.i1755 ], [ %indvars.iv.next36.i1765, %for.body.i1766.for.body.i1766_crit_edge ]
  %i.034.i1758 = phi i32 [ %i.032.i1752, %for.body.lr.ph.i1755 ], [ %i.0.i1763, %for.body.i1766.for.body.i1766_crit_edge ]
  %497 = load %struct.function** @cfun, align 8, !tbaa !9
  %emit.i1759 = getelementptr inbounds %struct.function* %497, i64 0, i32 3
  %498 = load %struct.emit_status** %emit.i1759, align 8, !tbaa !34
  %x_regno_reg_rtx.i1760 = getelementptr inbounds %struct.emit_status* %498, i64 0, i32 12
  %499 = load %struct.rtx_def*** %x_regno_reg_rtx.i1760, align 8, !tbaa !37
  %arrayidx.i1761 = getelementptr inbounds %struct.rtx_def** %499, i64 %indvars.iv35.i1757
  %500 = load %struct.rtx_def** %arrayidx.i1761, align 8, !tbaa !9
  %arrayidx2.i1762 = getelementptr inbounds %struct.rtx_def** %496, i64 %indvars.iv35.i1757
  store %struct.rtx_def* %500, %struct.rtx_def** %arrayidx2.i1762, align 8, !tbaa !9
  %i.0.i1763 = add nsw i32 %i.034.i1758, -1
  %cmp.i1764 = icmp sgt i32 %i.0.i1763, 57
  br i1 %cmp.i1764, label %for.body.i1766.for.body.i1766_crit_edge, label %for.body5.i1771

for.body.i1766.for.body.i1766_crit_edge:          ; preds = %for.body.i1766
  %indvars.iv.next36.i1765 = add nsw i64 %indvars.iv35.i1757, -1
  %.pre = load %struct.rtx_def*** %494, align 8, !tbaa !32
  br label %for.body.i1766

for.body5.i1771:                                  ; preds = %if.end1045, %for.body.i1766, %for.body5.i1771
  %indvars.iv.i1767 = phi i64 [ %indvars.iv.next.i1769, %for.body5.i1771 ], [ 57, %for.body.i1766 ], [ 57, %if.end1045 ]
  %501 = load %struct.rtx_def*** %494, align 8, !tbaa !32
  %arrayidx8.i1768 = getelementptr inbounds %struct.rtx_def** %501, i64 %indvars.iv.i1767
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx8.i1768, align 8, !tbaa !9
  %indvars.iv.next.i1769 = add nsw i64 %indvars.iv.i1767, -1
  %502 = trunc i64 %indvars.iv.i1767 to i32
  %cmp4.i1770 = icmp sgt i32 %502, 0
  br i1 %cmp4.i1770, label %for.body5.i1771, label %init_reg_map.exit1780

init_reg_map.exit1780:                            ; preds = %for.body5.i1771
  %503 = load %struct.function** @cfun, align 8, !tbaa !9
  %emit12.i1772 = getelementptr inbounds %struct.function* %503, i64 0, i32 3
  %504 = load %struct.emit_status** %emit12.i1772, align 8, !tbaa !34
  %x_regno_reg_rtx13.i1773 = getelementptr inbounds %struct.emit_status* %504, i64 0, i32 12
  %505 = load %struct.rtx_def*** %x_regno_reg_rtx13.i1773, align 8, !tbaa !37
  %arrayidx14.i1774 = getelementptr inbounds %struct.rtx_def** %505, i64 54
  %506 = load %struct.rtx_def** %arrayidx14.i1774, align 8, !tbaa !9
  %507 = load %struct.rtx_def*** %494, align 8, !tbaa !32
  %arrayidx16.i1775 = getelementptr inbounds %struct.rtx_def** %507, i64 54
  store %struct.rtx_def* %506, %struct.rtx_def** %arrayidx16.i1775, align 8, !tbaa !9
  %508 = load %struct.function** @cfun, align 8, !tbaa !9
  %emit17.i1776 = getelementptr inbounds %struct.function* %508, i64 0, i32 3
  %509 = load %struct.emit_status** %emit17.i1776, align 8, !tbaa !34
  %x_regno_reg_rtx18.i1777 = getelementptr inbounds %struct.emit_status* %509, i64 0, i32 12
  %510 = load %struct.rtx_def*** %x_regno_reg_rtx18.i1777, align 8, !tbaa !37
  %arrayidx19.i1778 = getelementptr inbounds %struct.rtx_def** %510, i64 53
  %511 = load %struct.rtx_def** %arrayidx19.i1778, align 8, !tbaa !9
  %512 = load %struct.rtx_def*** %494, align 8, !tbaa !32
  %arrayidx21.i1779 = getelementptr inbounds %struct.rtx_def** %512, i64 53
  store %struct.rtx_def* %511, %struct.rtx_def** %arrayidx21.i1779, align 8, !tbaa !9
  %const_equiv_varray1051 = getelementptr inbounds i8* %call446, i64 64
  %513 = bitcast i8* %const_equiv_varray1051 to %struct.varray_head_tag**
  %514 = load %struct.varray_head_tag** %513, align 8, !tbaa !33
  %cmp1052 = icmp eq %struct.varray_head_tag* %514, null
  br i1 %cmp1052, label %if.then1054, label %if.end1062

if.then1054:                                      ; preds = %init_reg_map.exit1780
  %conv1056 = sext i32 %unroll_number.51810 to i64
  %mul1057 = shl nsw i64 %conv1056, 1
  %mul1058 = mul i64 %mul1057, %temp.4
  %add1059 = add i64 %conv1047, %mul1058
  %call1060 = tail call %struct.varray_head_tag* @varray_init(i64 %add1059, i64 16, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.unroll_loop, i64 0, i64 0)) #4
  store %struct.varray_head_tag* %call1060, %struct.varray_head_tag** %513, align 8, !tbaa !33
  br label %if.end1062

if.end1062:                                       ; preds = %if.then1054, %init_reg_map.exit1780
  %515 = phi %struct.varray_head_tag* [ %call1060, %if.then1054 ], [ %514, %init_reg_map.exit1780 ]
  store %struct.varray_head_tag* %515, %struct.varray_head_tag** @global_const_equiv_varray, align 8, !tbaa !9
  %list = getelementptr inbounds i8* %0, i64 224
  %516 = bitcast i8* %list to %struct.iv_class**
  %bl.01833 = load %struct.iv_class** %516, align 8
  %tobool10651834 = icmp eq %struct.iv_class* %bl.01833, null
  br i1 %tobool10651834, label %for.end1081, label %for.body1066

for.body1066:                                     ; preds = %if.end1062, %for.inc1080
  %bl.01835 = phi %struct.iv_class* [ %bl.0, %for.inc1080 ], [ %bl.01833, %if.end1062 ]
  %biv = getelementptr inbounds %struct.iv_class* %bl.01835, i64 0, i32 2
  %517 = load %struct.induction** %biv, align 8, !tbaa !53
  %src_reg = getelementptr inbounds %struct.induction* %517, i64 0, i32 2
  %518 = load %struct.rtx_def** %src_reg, align 8, !tbaa !58
  %arrayidx1068 = getelementptr inbounds %struct.rtx_def* %518, i64 0, i32 1, i64 0
  %rtuint1069 = bitcast %union.rtunion_def* %arrayidx1068 to i32*
  %519 = load i32* %rtuint1069, align 4, !tbaa !10
  %regno = getelementptr inbounds %struct.iv_class* %bl.01835, i64 0, i32 0
  %520 = load i32* %regno, align 4, !tbaa !50
  %cmp1070 = icmp eq i32 %519, %520
  br i1 %cmp1070, label %for.inc1080, label %if.then1072

if.then1072:                                      ; preds = %for.body1066
  %idxprom1076 = zext i32 %520 to i64
  %521 = load %struct.rtx_def*** %494, align 8, !tbaa !32
  %arrayidx1078 = getelementptr inbounds %struct.rtx_def** %521, i64 %idxprom1076
  store %struct.rtx_def* %518, %struct.rtx_def** %arrayidx1078, align 8, !tbaa !9
  br label %for.inc1080

for.inc1080:                                      ; preds = %for.body1066, %if.then1072
  %next = getelementptr inbounds %struct.iv_class* %bl.01835, i64 0, i32 9
  %bl.0 = load %struct.iv_class** %next, align 8
  %tobool1065 = icmp eq %struct.iv_class* %bl.0, null
  br i1 %tobool1065, label %for.end1081, label %for.body1066

for.end1081:                                      ; preds = %for.inc1080, %if.end1062
  %522 = load %struct.function** @cfun, align 8, !tbaa !9
  %emit1082 = getelementptr inbounds %struct.function* %522, i64 0, i32 3
  %523 = load %struct.emit_status** %emit1082, align 8, !tbaa !34
  %regno_pointer_align = getelementptr inbounds %struct.emit_status* %523, i64 0, i32 10
  %524 = load i8** %regno_pointer_align, align 8, !tbaa !68
  %regno_pointer_align1083 = getelementptr inbounds i8* %call446, i64 120
  %525 = bitcast i8* %regno_pointer_align1083 to i8**
  store i8* %524, i8** %525, align 8, !tbaa !69
  %x_regno_reg_rtx1085 = getelementptr inbounds %struct.emit_status* %523, i64 0, i32 12
  %526 = load %struct.rtx_def*** %x_regno_reg_rtx1085, align 8, !tbaa !37
  %x_regno_reg_rtx1086 = getelementptr inbounds i8* %call446, i64 128
  %527 = bitcast i8* %x_regno_reg_rtx1086 to %struct.rtx_def***
  store %struct.rtx_def** %526, %struct.rtx_def*** %527, align 8, !tbaa !70
  %cmp1087 = icmp eq i32 %unroll_type.11806, 1
  br i1 %cmp1087, label %if.then1089, label %for.cond1112.preheader

if.then1089:                                      ; preds = %for.end1081
  %arrayidx1091 = getelementptr inbounds %struct.rtx_def* %copy_end.71809, i64 0, i32 1, i64 2
  %rtx1092 = bitcast %union.rtunion_def* %arrayidx1091 to %struct.rtx_def**
  %528 = load %struct.rtx_def** %rtx1092, align 8, !tbaa !9
  %529 = getelementptr inbounds %struct.rtx_def* %528, i64 0, i32 0
  %bf.load1093 = load i32* %529, align 8
  %530 = and i32 %bf.load1093, 65534
  %switch1722 = icmp eq i32 %530, 32
  br i1 %switch1722, label %if.then1102, label %for.cond1112.preheader

if.then1102:                                      ; preds = %if.then1089
  %arrayidx1104 = getelementptr inbounds %struct.rtx_def* %528, i64 0, i32 1, i64 3
  %rtx1105 = bitcast %union.rtunion_def* %arrayidx1104 to %struct.rtx_def**
  %531 = load %struct.rtx_def** %rtx1105, align 8, !tbaa !9
  %call1106 = tail call fastcc %struct.rtx_def* @remap_split_bivs(%struct.loop* %loop, %struct.rtx_def* %531)
  %532 = getelementptr inbounds %union.rtunion_def* %arrayidx1104, i64 0, i32 0
  %call1106.c = ptrtoint %struct.rtx_def* %call1106 to i64
  store i64 %call1106.c, i64* %532, align 8, !tbaa !9
  br label %for.cond1112.preheader

for.cond1112.preheader:                           ; preds = %if.then1102, %for.end1081, %if.then1089
  %cmp11131831 = icmp sgt i32 %unroll_number.51810, 0
  br i1 %cmp11131831, label %for.body1115.lr.ph, label %for.end1215

for.body1115.lr.ph:                               ; preds = %for.cond1112.preheader
  %const_age1126 = getelementptr inbounds i8* %call446, i64 72
  %533 = bitcast i8* %const_age1126 to i32*
  %cmp11441829 = icmp ugt i32 %call572, 53
  %cmp1179 = icmp eq %struct.rtx_def* %1, %copy_start.0
  %sub1210 = add nsw i32 %unroll_number.51810, -1
  %arrayidx1183 = getelementptr inbounds %struct.rtx_def* %copy_start.0, i64 0, i32 1, i64 1
  %rtx1184 = bitcast %union.rtunion_def* %arrayidx1183 to %struct.rtx_def**
  %label_map1137 = getelementptr inbounds i8* %call446, i64 40
  %534 = bitcast i8* %label_map1137 to %struct.rtx_def***
  br label %for.body1115

for.body1115:                                     ; preds = %if.end1209, %for.body1115.lr.ph
  %i.71832 = phi i32 [ 0, %for.body1115.lr.ph ], [ %inc1214, %if.end1209 ]
  %535 = load %struct.rtx_def*** %114, align 8, !tbaa !26
  %536 = bitcast %struct.rtx_def** %535 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* %536, i8 0, i64 %mul570, i32 1, i1 false)
  %537 = load %struct.varray_head_tag** %513, align 8, !tbaa !33
  %arrayidx1122 = getelementptr inbounds %struct.varray_head_tag* %537, i64 0, i32 4, i32 0, i64 0
  %538 = bitcast %struct.const_equiv_data* %arrayidx1122 to i8*
  %num_elements1124 = getelementptr inbounds %struct.varray_head_tag* %537, i64 0, i32 0
  %539 = load i64* %num_elements1124, align 8, !tbaa !40
  %mul1125 = shl i64 %539, 4
  tail call void @llvm.memset.p0i8.i64(i8* %538, i8 0, i64 %mul1125, i32 1, i1 false)
  store i32 0, i32* %533, align 4, !tbaa !43
  br i1 %cmp447, label %for.body1130, label %for.cond1143.preheader

for.cond1143.preheader:                           ; preds = %for.inc1140, %for.body1115
  br i1 %cmp11441829, label %for.body1146, label %for.end1175

for.body1130:                                     ; preds = %for.body1115, %for.inc1140
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc1140 ], [ 0, %for.body1115 ]
  %arrayidx1132 = getelementptr inbounds i8* %local_label.0, i64 %indvars.iv
  %540 = load i8* %arrayidx1132, align 1, !tbaa !23
  %tobool1133 = icmp eq i8 %540, 0
  br i1 %tobool1133, label %for.inc1140, label %if.then1134

if.then1134:                                      ; preds = %for.body1130
  %call1135 = tail call %struct.rtx_def* @gen_label_rtx() #4
  %541 = load %struct.rtx_def*** %534, align 8, !tbaa !21
  %arrayidx1138 = getelementptr inbounds %struct.rtx_def** %541, i64 %indvars.iv
  store %struct.rtx_def* %call1135, %struct.rtx_def** %arrayidx1138, align 8, !tbaa !9
  br label %for.inc1140

for.inc1140:                                      ; preds = %for.body1130, %if.then1134
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %call444
  br i1 %exitcond, label %for.cond1143.preheader, label %for.body1130

for.body1146:                                     ; preds = %for.cond1143.preheader, %for.inc1173
  %indvars.iv1889 = phi i64 [ %indvars.iv.next1890, %for.inc1173 ], [ 53, %for.cond1143.preheader ]
  %arrayidx1148 = getelementptr inbounds i8* %call580, i64 %indvars.iv1889
  %542 = load i8* %arrayidx1148, align 1, !tbaa !23
  %tobool1149 = icmp eq i8 %542, 0
  br i1 %tobool1149, label %for.inc1173, label %if.then1150

if.then1150:                                      ; preds = %for.body1146
  %543 = load %struct.function** @cfun, align 8, !tbaa !9
  %emit1152 = getelementptr inbounds %struct.function* %543, i64 0, i32 3
  %544 = load %struct.emit_status** %emit1152, align 8, !tbaa !34
  %x_regno_reg_rtx1153 = getelementptr inbounds %struct.emit_status* %544, i64 0, i32 12
  %545 = load %struct.rtx_def*** %x_regno_reg_rtx1153, align 8, !tbaa !37
  %arrayidx1154 = getelementptr inbounds %struct.rtx_def** %545, i64 %indvars.iv1889
  %546 = load %struct.rtx_def** %arrayidx1154, align 8, !tbaa !9
  %547 = getelementptr inbounds %struct.rtx_def* %546, i64 0, i32 0
  %bf.load1155 = load i32* %547, align 8
  %bf.lshr1156 = lshr i32 %bf.load1155, 16
  %bf.clear1157 = and i32 %bf.lshr1156, 255
  %call1158 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear1157) #4
  %548 = load %struct.rtx_def*** %494, align 8, !tbaa !32
  %arrayidx1161 = getelementptr inbounds %struct.rtx_def** %548, i64 %indvars.iv1889
  store %struct.rtx_def* %call1158, %struct.rtx_def** %arrayidx1161, align 8, !tbaa !9
  %549 = load %struct.rtx_def*** %494, align 8, !tbaa !32
  %arrayidx1164 = getelementptr inbounds %struct.rtx_def** %549, i64 %indvars.iv1889
  %550 = load %struct.rtx_def** %arrayidx1164, align 8, !tbaa !9
  %arrayidx1166 = getelementptr inbounds %struct.rtx_def* %550, i64 0, i32 1, i64 0
  %rtuint1167 = bitcast %union.rtunion_def* %arrayidx1166 to i32*
  %551 = load i32* %rtuint1167, align 4, !tbaa !10
  %552 = load %struct.function** @cfun, align 8, !tbaa !9
  %emit1169 = getelementptr inbounds %struct.function* %552, i64 0, i32 3
  %553 = load %struct.emit_status** %emit1169, align 8, !tbaa !34
  %x_regno_reg_rtx1170 = getelementptr inbounds %struct.emit_status* %553, i64 0, i32 12
  %554 = load %struct.rtx_def*** %x_regno_reg_rtx1170, align 8, !tbaa !37
  %arrayidx1171 = getelementptr inbounds %struct.rtx_def** %554, i64 %indvars.iv1889
  %555 = load %struct.rtx_def** %arrayidx1171, align 8, !tbaa !9
  tail call void @record_base_value(i32 %551, %struct.rtx_def* %555, i32 0) #4
  br label %for.inc1173

for.inc1173:                                      ; preds = %for.body1146, %if.then1150
  %indvars.iv.next1890 = add nuw nsw i64 %indvars.iv1889, 1
  %lftr.wideiv1891 = trunc i64 %indvars.iv.next1890 to i32
  %exitcond1892 = icmp eq i32 %lftr.wideiv1891, %call572
  br i1 %exitcond1892, label %for.end1175, label %for.body1146

for.end1175:                                      ; preds = %for.inc1173, %for.cond1143.preheader
  %cmp1176 = icmp ne i32 %i.71832, 0
  %or.cond1716 = or i1 %cmp1176, %cmp1179
  br i1 %or.cond1716, label %if.end1209, label %if.then1181

if.then1181:                                      ; preds = %for.end1175
  %556 = load %struct.rtx_def** %rtx1184, align 8, !tbaa !9
  %arrayidx1186 = getelementptr inbounds %struct.rtx_def* %556, i64 0, i32 1, i64 3
  %rtx1187 = bitcast %union.rtunion_def* %arrayidx1186 to %struct.rtx_def**
  %557 = load %struct.rtx_def** %rtx1187, align 8, !tbaa !9
  %arrayidx1189 = getelementptr inbounds %struct.rtx_def* %557, i64 0, i32 1, i64 1
  %rtx1190 = bitcast %union.rtunion_def* %arrayidx1189 to %struct.rtx_def**
  %558 = load %struct.rtx_def** %rtx1190, align 8, !tbaa !9
  %arrayidx1192 = getelementptr inbounds %struct.rtx_def* %558, i64 0, i32 1, i64 0
  %rtx1193 = bitcast %union.rtunion_def* %arrayidx1192 to %struct.rtx_def**
  %559 = load %struct.rtx_def** %rtx1193, align 8, !tbaa !9
  %arrayidx1195 = getelementptr inbounds %struct.rtx_def* %559, i64 0, i32 1, i64 5
  %rtint1196 = bitcast %union.rtunion_def* %arrayidx1195 to i32*
  %560 = load i32* %rtint1196, align 4, !tbaa !10
  %call1197 = tail call %struct.rtx_def* @get_label_from_map(%struct.inline_remap* %90, i32 %560) #4
  %call1198 = tail call %struct.rtx_def* @gen_rtx_fmt_u00(i32 67, i32 0, %struct.rtx_def* %call1197) #4
  %561 = getelementptr inbounds %union.rtunion_def* %arrayidx1189, i64 0, i32 0
  %call1198.c = ptrtoint %struct.rtx_def* %call1198 to i64
  store i64 %call1198.c, i64* %561, align 8, !tbaa !9
  %562 = getelementptr inbounds %struct.rtx_def* %556, i64 0, i32 1, i64 7, i32 0
  %call1197.c = ptrtoint %struct.rtx_def* %call1197 to i64
  store i64 %call1197.c, i64* %562, align 8, !tbaa !9
  %arrayidx1206 = getelementptr inbounds %struct.rtx_def* %call1197, i64 0, i32 1, i64 3
  %rtint1207 = bitcast %union.rtunion_def* %arrayidx1206 to i32*
  %563 = load i32* %rtint1207, align 4, !tbaa !10
  %inc1208 = add nsw i32 %563, 1
  store i32 %inc1208, i32* %rtint1207, align 4, !tbaa !10
  br label %if.end1209

if.end1209:                                       ; preds = %for.end1175, %if.then1181
  %cmp1211 = icmp eq i32 %i.71832, %sub1210
  %conv1212 = zext i1 %cmp1211 to i32
  tail call fastcc void @copy_loop_body(%struct.loop* %loop, %struct.rtx_def* %copy_start.0, %struct.rtx_def* %copy_end.71809, %struct.inline_remap* %90, %struct.rtx_def* %exit_label.0, i32 %conv1212, i32 %unroll_type.11806, %struct.rtx_def* %start_label.0, %struct.rtx_def* %2, %struct.rtx_def* %insert_before.41808, %struct.rtx_def* %insert_before.41808)
  %inc1214 = add nsw i32 %i.71832, 1
  %exitcond1893 = icmp eq i32 %inc1214, %unroll_number.51810
  br i1 %exitcond1893, label %for.end1215, label %for.body1115

for.end1215:                                      ; preds = %if.end1209, %for.cond1112.preheader
  %cmp1216 = icmp eq i32 %unroll_type.11806, 0
  %call1219 = tail call %struct.rtx_def* @gen_label_rtx() #4
  br i1 %cmp1216, label %if.then1218, label %if.else1221

if.then1218:                                      ; preds = %for.end1215
  %call1220 = tail call %struct.rtx_def* @emit_label_after(%struct.rtx_def* %call1219, %struct.rtx_def* %call54) #4
  br label %if.end1224

if.else1221:                                      ; preds = %for.end1215
  %call1223 = tail call %struct.rtx_def* @emit_label_after(%struct.rtx_def* %call1219, %struct.rtx_def* %copy_end.71809) #4
  br label %if.end1224

if.end1224:                                       ; preds = %if.else1221, %if.then1218
  %safety_label.0 = phi %struct.rtx_def* [ %call1220, %if.then1218 ], [ %call1223, %if.else1221 ]
  %564 = load %struct.rtx_def** %rtx366, align 8, !tbaa !9
  %cmp12291824 = icmp eq %struct.rtx_def* %564, %safety_label.0
  br i1 %cmp12291824, label %while.end1262, label %while.body1231

while.body1231:                                   ; preds = %if.end1224, %while.cond1228.backedge
  %insn.41825 = phi %struct.rtx_def* [ %insn.4.be, %while.cond1228.backedge ], [ %564, %if.end1224 ]
  %cmp1232 = icmp eq %struct.rtx_def* %insn.41825, %start_label.0
  br i1 %cmp1232, label %if.else1257, label %land.lhs.true1234

land.lhs.true1234:                                ; preds = %while.body1231
  %565 = getelementptr inbounds %struct.rtx_def* %insn.41825, i64 0, i32 0
  %bf.load1235 = load i32* %565, align 8
  %bf.clear1236 = and i32 %bf.load1235, 65535
  switch i32 %bf.clear1236, label %if.then1255 [
    i32 36, label %land.lhs.true1239
    i32 37, label %land.lhs.true1249
  ]

land.lhs.true1239:                                ; preds = %land.lhs.true1234
  %arrayidx1241 = getelementptr inbounds %struct.rtx_def* %insn.41825, i64 0, i32 1, i64 6
  %rtstr1242 = bitcast %union.rtunion_def* %arrayidx1241 to i8**
  %566 = load i8** %rtstr1242, align 8, !tbaa !9
  %tobool1243 = icmp eq i8* %566, null
  br i1 %tobool1243, label %if.then1255, label %if.else1257

land.lhs.true1249:                                ; preds = %land.lhs.true1234
  %arrayidx1251 = getelementptr inbounds %struct.rtx_def* %insn.41825, i64 0, i32 1, i64 4
  %rtint1252 = bitcast %union.rtunion_def* %arrayidx1251 to i32*
  %567 = load i32* %rtint1252, align 4, !tbaa !10
  %cmp1253 = icmp eq i32 %567, -88
  br i1 %cmp1253, label %if.else1257, label %if.then1255

if.then1255:                                      ; preds = %land.lhs.true1234, %land.lhs.true1239, %land.lhs.true1249
  %call1256 = tail call %struct.rtx_def* @delete_related_insns(%struct.rtx_def* %insn.41825) #4
  br label %while.cond1228.backedge

if.else1257:                                      ; preds = %land.lhs.true1239, %while.body1231, %land.lhs.true1249
  %arrayidx1259 = getelementptr inbounds %struct.rtx_def* %insn.41825, i64 0, i32 1, i64 2
  %rtx1260 = bitcast %union.rtunion_def* %arrayidx1259 to %struct.rtx_def**
  %568 = load %struct.rtx_def** %rtx1260, align 8, !tbaa !9
  br label %while.cond1228.backedge

while.cond1228.backedge:                          ; preds = %if.else1257, %if.then1255
  %insn.4.be = phi %struct.rtx_def* [ %568, %if.else1257 ], [ %call1256, %if.then1255 ]
  %cmp1229 = icmp eq %struct.rtx_def* %insn.4.be, %safety_label.0
  br i1 %cmp1229, label %while.end1262, label %while.body1231

while.end1262:                                    ; preds = %while.cond1228.backedge, %if.end1224
  %569 = getelementptr inbounds %struct.rtx_def* %safety_label.0, i64 0, i32 0
  %bf.load1263 = load i32* %569, align 8
  %bf.clear1265 = and i32 %bf.load1263, 134217728
  %tobool1266 = icmp eq i32 %bf.clear1265, 0
  br i1 %tobool1266, label %if.end1268, label %if.then1267

if.then1267:                                      ; preds = %while.end1262
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str13, i64 0, i64 0), i32 1337, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.unroll_loop, i64 0, i64 0)) #5
  unreachable

if.end1268:                                       ; preds = %while.end1262
  %call1269 = tail call %struct.rtx_def* @delete_related_insns(%struct.rtx_def* %safety_label.0) #4
  %tobool1270 = icmp eq %struct.rtx_def* %exit_label.0, null
  br i1 %tobool1270, label %egress, label %if.then1271

if.then1271:                                      ; preds = %if.end1268
  %call1272 = tail call %struct.rtx_def* @emit_label_after(%struct.rtx_def* %exit_label.0, %struct.rtx_def* %2) #4
  br label %egress

egress:                                           ; preds = %if.end1268, %if.then1271
  %cmp1274 = icmp eq i32 %unroll_type.11806, 0
  br i1 %cmp1274, label %if.then1276, label %if.end1297

if.then1276:                                      ; preds = %egress
  %vtop1277 = getelementptr inbounds %struct.loop* %loop, i64 0, i32 23
  %570 = load %struct.rtx_def** %vtop1277, align 8, !tbaa !18
  %tobool1278 = icmp eq %struct.rtx_def* %570, null
  br i1 %tobool1278, label %if.end1282, label %if.then1279

if.then1279:                                      ; preds = %if.then1276
  %call1281 = tail call %struct.rtx_def* @delete_related_insns(%struct.rtx_def* %570) #4
  br label %if.end1282

if.end1282:                                       ; preds = %if.then1276, %if.then1279
  %cont1283 = getelementptr inbounds %struct.loop* %loop, i64 0, i32 24
  %571 = load %struct.rtx_def** %cont1283, align 8, !tbaa !17
  %tobool1284 = icmp eq %struct.rtx_def* %571, null
  br i1 %tobool1284, label %if.end1288, label %if.then1285

if.then1285:                                      ; preds = %if.end1282
  %call1287 = tail call %struct.rtx_def* @delete_related_insns(%struct.rtx_def* %571) #4
  br label %if.end1288

if.end1288:                                       ; preds = %if.end1282, %if.then1285
  %tobool1289 = icmp eq %struct.rtx_def* %1, null
  br i1 %tobool1289, label %if.end1292, label %if.then1290

if.then1290:                                      ; preds = %if.end1288
  %call1291 = tail call %struct.rtx_def* @delete_related_insns(%struct.rtx_def* %1) #4
  br label %if.end1292

if.end1292:                                       ; preds = %if.end1288, %if.then1290
  %tobool1293 = icmp eq %struct.rtx_def* %2, null
  br i1 %tobool1293, label %if.end1297, label %if.then1294

if.then1294:                                      ; preds = %if.end1292
  %call1295 = tail call %struct.rtx_def* @delete_related_insns(%struct.rtx_def* %2) #4
  br label %if.end1297

if.end1297:                                       ; preds = %if.then1035, %if.then1033, %if.end1292, %if.then1294, %egress
  %const_equiv_varray1298 = getelementptr inbounds i8* %call446, i64 64
  %572 = bitcast i8* %const_equiv_varray1298 to %struct.varray_head_tag**
  %573 = load %struct.varray_head_tag** %572, align 8, !tbaa !33
  %tobool1299 = icmp eq %struct.varray_head_tag* %573, null
  br i1 %tobool1299, label %if.end1307, label %if.then1303

if.then1303:                                      ; preds = %if.end1297
  %574 = bitcast %struct.varray_head_tag* %573 to i8*
  tail call void @free(i8* %574)
  store %struct.varray_head_tag* null, %struct.varray_head_tag** %572, align 8, !tbaa !33
  br label %if.end1307

if.end1307:                                       ; preds = %if.end1297, %if.then1303
  %label_map1308 = getelementptr inbounds i8* %call446, i64 40
  %575 = bitcast i8* %label_map1308 to %struct.rtx_def***
  %576 = load %struct.rtx_def*** %575, align 8, !tbaa !21
  %tobool1309 = icmp eq %struct.rtx_def** %576, null
  br i1 %tobool1309, label %if.end1312, label %if.then1310

if.then1310:                                      ; preds = %if.end1307
  %577 = bitcast %struct.rtx_def** %576 to i8*
  tail call void @free(i8* %577)
  tail call void @free(i8* %local_label.0)
  br label %if.end1312

if.end1312:                                       ; preds = %if.end1307, %if.then1310
  %578 = load %struct.rtx_def*** %114, align 8, !tbaa !26
  %579 = bitcast %struct.rtx_def** %578 to i8*
  tail call void @free(i8* %579)
  %580 = load %struct.rtx_def*** @splittable_regs, align 8, !tbaa !9
  %581 = bitcast %struct.rtx_def** %580 to i8*
  tail call void @free(i8* %581)
  %582 = load i32** @splittable_regs_updates, align 8, !tbaa !9
  %583 = bitcast i32* %582 to i8*
  tail call void @free(i8* %583)
  %584 = load %struct.induction*** @addr_combined_regs, align 8, !tbaa !9
  %585 = bitcast %struct.induction** %584 to i8*
  tail call void @free(i8* %585)
  tail call void @free(i8* %call580)
  %reg_map1314 = getelementptr inbounds i8* %call446, i64 32
  %586 = bitcast i8* %reg_map1314 to %struct.rtx_def***
  %587 = load %struct.rtx_def*** %586, align 8, !tbaa !32
  %tobool1315 = icmp eq %struct.rtx_def** %587, null
  br i1 %tobool1315, label %if.end1318, label %if.then1316

if.then1316:                                      ; preds = %if.end1312
  %588 = bitcast %struct.rtx_def** %587 to i8*
  tail call void @free(i8* %588)
  br label %if.end1318

if.end1318:                                       ; preds = %if.end1312, %if.then1316
  tail call void @free(i8* %call446)
  br label %return

return:                                           ; preds = %while.cond218, %if.then, %if.then26, %if.then36, %if.end94, %if.else265, %if.else296, %if.then381, %if.then390, %if.then438, %if.else324, %if.then440, %if.then392, %if.then383, %if.then326, %if.then298, %if.then267, %if.then96, %if.then38, %if.then28, %if.then3, %if.end1318
  ret void

while.body156.1:                                  ; preds = %for.inc177, %if.then164.1
  %589 = phi i32 [ %dec154.1, %if.then164.1 ], [ %dec1541854.1, %for.inc177 ]
  %temp.31857.1 = phi i64 [ %mul161.1, %if.then164.1 ], [ %temp.3.lcssa, %for.inc177 ]
  %unroll_number.11856.1 = phi i32 [ %mul168.1, %if.then164.1 ], [ %unroll_number.1.lcssa, %for.inc177 ]
  %mul161.1 = mul i64 %conv1321865.1, %temp.31857.1
  %cmp162.1 = icmp ult i64 %mul161.1, 100
  br i1 %cmp162.1, label %if.then164.1, label %for.inc177.1

if.then164.1:                                     ; preds = %while.body156.1
  %mul168.1 = mul nsw i32 %40, %unroll_number.11856.1
  %dec154.1 = add nsw i32 %589, -1
  store i32 %dec154.1, i32* getelementptr inbounds ([4 x %struct._factor]* @factors, i64 0, i64 2, i32 1), align 4, !tbaa !19
  %tobool155.1 = icmp eq i32 %589, 0
  br i1 %tobool155.1, label %for.inc177.1, label %while.body156.1

for.inc177.1:                                     ; preds = %if.then164.1, %while.body156.1, %for.inc177
  %temp.3.lcssa.1 = phi i64 [ %temp.3.lcssa, %for.inc177 ], [ %mul161.1, %if.then164.1 ], [ %temp.31857.1, %while.body156.1 ]
  %unroll_number.1.lcssa.1 = phi i32 [ %unroll_number.1.lcssa, %for.inc177 ], [ %mul168.1, %if.then164.1 ], [ %unroll_number.11856.1, %while.body156.1 ]
  %dec1541854.2 = add nsw i32 %599, -1
  store i32 %dec1541854.2, i32* getelementptr inbounds ([4 x %struct._factor]* @factors, i64 0, i64 1, i32 1), align 4, !tbaa !19
  %tobool1551855.2 = icmp eq i32 %599, 0
  br i1 %tobool1551855.2, label %for.inc177.2, label %while.body156.2

while.body156.2:                                  ; preds = %for.inc177.1, %if.then164.2
  %590 = phi i32 [ %dec154.2, %if.then164.2 ], [ %dec1541854.2, %for.inc177.1 ]
  %temp.31857.2 = phi i64 [ %mul161.2, %if.then164.2 ], [ %temp.3.lcssa.1, %for.inc177.1 ]
  %unroll_number.11856.2 = phi i32 [ %mul168.2, %if.then164.2 ], [ %unroll_number.1.lcssa.1, %for.inc177.1 ]
  %mul161.2 = mul i64 %conv1321865.2, %temp.31857.2
  %cmp162.2 = icmp ult i64 %mul161.2, 100
  br i1 %cmp162.2, label %if.then164.2, label %for.inc177.2

if.then164.2:                                     ; preds = %while.body156.2
  %mul168.2 = mul nsw i32 %595, %unroll_number.11856.2
  %dec154.2 = add nsw i32 %590, -1
  store i32 %dec154.2, i32* getelementptr inbounds ([4 x %struct._factor]* @factors, i64 0, i64 1, i32 1), align 4, !tbaa !19
  %tobool155.2 = icmp eq i32 %590, 0
  br i1 %tobool155.2, label %for.inc177.2, label %while.body156.2

for.inc177.2:                                     ; preds = %if.then164.2, %while.body156.2, %for.inc177.1
  %temp.3.lcssa.2 = phi i64 [ %temp.3.lcssa.1, %for.inc177.1 ], [ %mul161.2, %if.then164.2 ], [ %temp.31857.2, %while.body156.2 ]
  %unroll_number.1.lcssa.2 = phi i32 [ %unroll_number.1.lcssa.1, %for.inc177.1 ], [ %mul168.2, %if.then164.2 ], [ %unroll_number.11856.2, %while.body156.2 ]
  %dec1541854.3 = add nsw i32 %605, -1
  store i32 %dec1541854.3, i32* getelementptr inbounds ([4 x %struct._factor]* @factors, i64 0, i64 0, i32 1), align 4, !tbaa !19
  %tobool1551855.3 = icmp eq i32 %605, 0
  br i1 %tobool1551855.3, label %for.inc177.3, label %while.body156.3

while.body156.3:                                  ; preds = %for.inc177.2, %if.then164.3
  %591 = phi i32 [ %dec154.3, %if.then164.3 ], [ %dec1541854.3, %for.inc177.2 ]
  %temp.31857.3 = phi i64 [ %mul161.3, %if.then164.3 ], [ %temp.3.lcssa.2, %for.inc177.2 ]
  %unroll_number.11856.3 = phi i32 [ %mul168.3, %if.then164.3 ], [ %unroll_number.1.lcssa.2, %for.inc177.2 ]
  %mul161.3 = mul i64 %conv1321865.3, %temp.31857.3
  %cmp162.3 = icmp ult i64 %mul161.3, 100
  br i1 %cmp162.3, label %if.then164.3, label %for.inc177.3

if.then164.3:                                     ; preds = %while.body156.3
  %mul168.3 = mul nsw i32 %601, %unroll_number.11856.3
  %dec154.3 = add nsw i32 %591, -1
  store i32 %dec154.3, i32* getelementptr inbounds ([4 x %struct._factor]* @factors, i64 0, i64 0, i32 1), align 4, !tbaa !19
  %tobool155.3 = icmp eq i32 %591, 0
  br i1 %tobool155.3, label %for.inc177.3, label %while.body156.3

for.inc177.3:                                     ; preds = %if.then164.3, %while.body156.3, %for.inc177.2
  %unroll_number.1.lcssa.3 = phi i32 [ %unroll_number.1.lcssa.2, %for.inc177.2 ], [ %mul168.3, %if.then164.3 ], [ %unroll_number.11856.3, %while.body156.3 ]
  %cmp180 = icmp eq i32 %unroll_number.1.lcssa.3, 1
  br i1 %cmp180, label %if.then182, label %if.end207

while.body.1:                                     ; preds = %for.inc143, %while.body.1
  %592 = phi i32 [ %inc138.1, %while.body.1 ], [ %42, %for.inc143 ]
  %temp.11868.1 = phi i64 [ %div.1, %while.body.1 ], [ %temp.1.lcssa, %for.inc143 ]
  %inc138.1 = add nsw i32 %592, 1
  %div.1 = udiv i64 %temp.11868.1, %conv1321865.1
  %rem.1 = urem i64 %div.1, %conv1321865.1
  %cmp133.1 = icmp eq i64 %rem.1, 0
  br i1 %cmp133.1, label %while.body.1, label %while.cond.for.inc143_crit_edge.1

while.cond.for.inc143_crit_edge.1:                ; preds = %while.body.1
  store i32 %inc138.1, i32* getelementptr inbounds ([4 x %struct._factor]* @factors, i64 0, i64 2, i32 1), align 4, !tbaa !19
  br label %for.inc143.1

for.inc143.1:                                     ; preds = %while.cond.for.inc143_crit_edge.1, %for.inc143
  %593 = phi i32 [ %inc138.1, %while.cond.for.inc143_crit_edge.1 ], [ %42, %for.inc143 ]
  %temp.1.lcssa.1 = phi i64 [ %div.1, %while.cond.for.inc143_crit_edge.1 ], [ %temp.1.lcssa, %for.inc143 ]
  %594 = load i64* bitcast (i32* getelementptr inbounds ([4 x %struct._factor]* @factors, i64 0, i64 1, i32 0) to i64*), align 8
  %595 = trunc i64 %594 to i32
  %sext1931 = shl i64 %594, 32
  %conv1321865.2 = ashr exact i64 %sext1931, 32
  %rem1866.2 = urem i64 %temp.1.lcssa.1, %conv1321865.2
  %cmp1331867.2 = icmp eq i64 %rem1866.2, 0
  %596 = lshr i64 %594, 32
  %597 = trunc i64 %596 to i32
  br i1 %cmp1331867.2, label %while.body.2, label %for.inc143.2

while.body.2:                                     ; preds = %for.inc143.1, %while.body.2
  %598 = phi i32 [ %inc138.2, %while.body.2 ], [ %597, %for.inc143.1 ]
  %temp.11868.2 = phi i64 [ %div.2, %while.body.2 ], [ %temp.1.lcssa.1, %for.inc143.1 ]
  %inc138.2 = add nsw i32 %598, 1
  %div.2 = udiv i64 %temp.11868.2, %conv1321865.2
  %rem.2 = urem i64 %div.2, %conv1321865.2
  %cmp133.2 = icmp eq i64 %rem.2, 0
  br i1 %cmp133.2, label %while.body.2, label %while.cond.for.inc143_crit_edge.2

while.cond.for.inc143_crit_edge.2:                ; preds = %while.body.2
  store i32 %inc138.2, i32* getelementptr inbounds ([4 x %struct._factor]* @factors, i64 0, i64 1, i32 1), align 4, !tbaa !19
  br label %for.inc143.2

for.inc143.2:                                     ; preds = %while.cond.for.inc143_crit_edge.2, %for.inc143.1
  %599 = phi i32 [ %inc138.2, %while.cond.for.inc143_crit_edge.2 ], [ %597, %for.inc143.1 ]
  %temp.1.lcssa.2 = phi i64 [ %div.2, %while.cond.for.inc143_crit_edge.2 ], [ %temp.1.lcssa.1, %for.inc143.1 ]
  %600 = load i64* bitcast ([4 x %struct._factor]* @factors to i64*), align 16
  %601 = trunc i64 %600 to i32
  %sext1932 = shl i64 %600, 32
  %conv1321865.3 = ashr exact i64 %sext1932, 32
  %rem1866.3 = urem i64 %temp.1.lcssa.2, %conv1321865.3
  %cmp1331867.3 = icmp eq i64 %rem1866.3, 0
  %602 = lshr i64 %600, 32
  %603 = trunc i64 %602 to i32
  br i1 %cmp1331867.3, label %while.body.3, label %for.inc143.3

while.body.3:                                     ; preds = %for.inc143.2, %while.body.3
  %604 = phi i32 [ %inc138.3, %while.body.3 ], [ %603, %for.inc143.2 ]
  %temp.11868.3 = phi i64 [ %div.3, %while.body.3 ], [ %temp.1.lcssa.2, %for.inc143.2 ]
  %inc138.3 = add nsw i32 %604, 1
  %div.3 = udiv i64 %temp.11868.3, %conv1321865.3
  %rem.3 = urem i64 %div.3, %conv1321865.3
  %cmp133.3 = icmp eq i64 %rem.3, 0
  br i1 %cmp133.3, label %while.body.3, label %while.cond.for.inc143_crit_edge.3

while.cond.for.inc143_crit_edge.3:                ; preds = %while.body.3
  store i32 %inc138.3, i32* getelementptr inbounds ([4 x %struct._factor]* @factors, i64 0, i64 0, i32 1), align 4, !tbaa !19
  br label %for.inc143.3

for.inc143.3:                                     ; preds = %while.cond.for.inc143_crit_edge.3, %for.inc143.2
  %605 = phi i32 [ %inc138.3, %while.cond.for.inc143_crit_edge.3 ], [ %603, %for.inc143.2 ]
  %conv145 = sext i32 %insn_count to i64
  %dec1541854 = add nsw i32 %38, -1
  store i32 %dec1541854, i32* getelementptr inbounds ([4 x %struct._factor]* @factors, i64 0, i64 3, i32 1), align 4, !tbaa !19
  %tobool1551855 = icmp eq i32 %38, 0
  br i1 %tobool1551855, label %for.inc177, label %while.body156
}

; Function Attrs: nounwind
declare i32 @fprintf(%struct._IO_FILE* nocapture, i8* nocapture readonly, ...) #1

declare %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def*) #2

declare %struct.rtx_def* @delete_related_insns(%struct.rtx_def*) #2

declare %struct.rtx_def* @gen_label_rtx() #2

declare i32 @max_label_num() #2

declare i32 @get_max_uid() #2

declare noalias i8* @xcalloc(i64, i64) #2

declare %struct.rtx_def* @find_reg_note(%struct.rtx_def*, i32, %struct.rtx_def*) #2

declare noalias i8* @xmalloc(i64) #2

declare i32 @max_reg_num() #2

; Function Attrs: noreturn
declare void @fancy_abort(i8*, i32, i8*) #3

; Function Attrs: nounwind uwtable
define i32 @set_dominates_use(i32 %regno, i32 %first_uid, i32 %last_uid, %struct.rtx_def* nocapture readonly %copy_start, %struct.rtx_def* readnone %copy_end) #0 {
entry:
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %passed_jump.0 = phi i32 [ 0, %entry ], [ %.passed_jump.0, %while.body ]
  %copy_start.pn = phi %struct.rtx_def* [ %copy_start, %entry ], [ %p.0, %while.body ]
  %p.0.in.in = getelementptr inbounds %struct.rtx_def* %copy_start.pn, i64 0, i32 1, i64 2
  %p.0.in = bitcast %union.rtunion_def* %p.0.in.in to %struct.rtx_def**
  %p.0 = load %struct.rtx_def** %p.0.in, align 8
  %fld1 = getelementptr inbounds %struct.rtx_def* %p.0, i64 0, i32 1
  %rtint = bitcast [1 x %union.rtunion_def]* %fld1 to i32*
  %0 = load i32* %rtint, align 4, !tbaa !10
  %cmp = icmp eq i32 %0, %first_uid
  %1 = getelementptr inbounds %struct.rtx_def* %p.0, i64 0, i32 0
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  br i1 %cmp, label %while.end, label %while.body

while.body:                                       ; preds = %while.cond
  %cmp3 = icmp eq i32 %bf.clear, 33
  %.passed_jump.0 = select i1 %cmp3, i32 1, i32 %passed_jump.0
  %cmp4 = icmp eq %struct.rtx_def* %p.0, %copy_end
  br i1 %cmp4, label %return, label %while.cond

while.end:                                        ; preds = %while.cond
  %idxprom51 = zext i32 %bf.clear to i64
  %arrayidx12 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom51
  %2 = load i8* %arrayidx12, align 1, !tbaa !23
  %cmp13 = icmp eq i8 %2, 105
  br i1 %cmp13, label %lor.lhs.false, label %return

lor.lhs.false:                                    ; preds = %while.end
  %call = tail call i32 @dead_or_set_regno_p(%struct.rtx_def* %p.0, i32 %regno) #4
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %return, label %if.end16

if.end16:                                         ; preds = %lor.lhs.false
  %cmp17 = icmp eq i32 %passed_jump.0, 0
  br i1 %cmp17, label %return, label %while.cond21.preheader

while.cond21.preheader:                           ; preds = %if.end16
  %3 = load i32* %rtint, align 4, !tbaa !10
  %cmp2558 = icmp eq i32 %3, %last_uid
  br i1 %cmp2558, label %return, label %while.body27

while.body27:                                     ; preds = %while.cond21.preheader, %if.end37
  %p.159 = phi %struct.rtx_def* [ %5, %if.end37 ], [ %p.0, %while.cond21.preheader ]
  %4 = getelementptr inbounds %struct.rtx_def* %p.159, i64 0, i32 0
  %bf.load28 = load i32* %4, align 8
  %bf.clear29 = and i32 %bf.load28, 65535
  %cmp30 = icmp eq i32 %bf.clear29, 36
  br i1 %cmp30, label %return, label %if.else

if.else:                                          ; preds = %while.body27
  %cmp33 = icmp eq %struct.rtx_def* %p.159, %copy_end
  br i1 %cmp33, label %return, label %if.end37

if.end37:                                         ; preds = %if.else
  %arrayidx39 = getelementptr inbounds %struct.rtx_def* %p.159, i64 0, i32 1, i64 2
  %rtx40 = bitcast %union.rtunion_def* %arrayidx39 to %struct.rtx_def**
  %5 = load %struct.rtx_def** %rtx40, align 8, !tbaa !9
  %fld22 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 1
  %rtint24 = bitcast [1 x %union.rtunion_def]* %fld22 to i32*
  %6 = load i32* %rtint24, align 4, !tbaa !10
  %cmp25 = icmp eq i32 %6, %last_uid
  br i1 %cmp25, label %return, label %while.body27

return:                                           ; preds = %while.body, %while.body27, %if.else, %if.end37, %while.cond21.preheader, %if.end16, %while.end, %lor.lhs.false
  %retval.0 = phi i32 [ 0, %lor.lhs.false ], [ 0, %while.end ], [ 1, %if.end16 ], [ 1, %while.cond21.preheader ], [ 0, %while.body27 ], [ 1, %if.else ], [ 1, %if.end37 ], [ 0, %while.body ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @precondition_loop_p(%struct.loop* %loop, %struct.rtx_def** nocapture %initial_value, %struct.rtx_def** nocapture %final_value, %struct.rtx_def** nocapture %increment, i32* nocapture %mode) #0 {
entry:
  %start = getelementptr inbounds %struct.loop* %loop, i64 0, i32 26
  %0 = load %struct.rtx_def** %start, align 8, !tbaa !7
  %aux = getelementptr inbounds %struct.loop* %loop, i64 0, i32 22
  %1 = load i8** %aux, align 8, !tbaa !1
  %n_iterations = getelementptr inbounds i8* %1, i64 96
  %2 = bitcast i8* %n_iterations to i64*
  %3 = load i64* %2, align 8, !tbaa !11
  %cmp = icmp eq i64 %3, 0
  br i1 %cmp, label %if.end13, label %if.then

if.then:                                          ; preds = %entry
  %increment1 = getelementptr inbounds i8* %1, i64 80
  %4 = bitcast i8* %increment1 to %struct.rtx_def**
  %5 = load %struct.rtx_def** %4, align 8, !tbaa !71
  %rtwint = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 1, i64 0, i32 0
  %6 = load i64* %rtwint, align 8, !tbaa !39
  %cmp2 = icmp sgt i64 %6, 0
  br i1 %cmp2, label %if.then3, label %if.else

if.then3:                                         ; preds = %if.then
  %7 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !9
  store %struct.rtx_def* %7, %struct.rtx_def** %initial_value, align 8, !tbaa !9
  %8 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !9
  store %struct.rtx_def* %8, %struct.rtx_def** %increment, align 8, !tbaa !9
  %call = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %3) #4
  br label %if.end

if.else:                                          ; preds = %if.then
  %call6 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %3) #4
  store %struct.rtx_def* %call6, %struct.rtx_def** %initial_value, align 8, !tbaa !9
  %9 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !tbaa !9
  store %struct.rtx_def* %9, %struct.rtx_def** %increment, align 8, !tbaa !9
  %10 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !9
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then3
  %storemerge = phi %struct.rtx_def* [ %10, %if.else ], [ %call, %if.then3 ]
  store %struct.rtx_def* %storemerge, %struct.rtx_def** %final_value, align 8, !tbaa !9
  %11 = load i32* @word_mode, align 4, !tbaa !23
  store i32 %11, i32* %mode, align 4, !tbaa !23
  %12 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !9
  %tobool = icmp eq %struct._IO_FILE* %12, null
  br i1 %tobool, label %return, label %if.then7

if.then7:                                         ; preds = %if.end
  %13 = tail call i64 @fwrite(i8* getelementptr inbounds ([55 x i8]* @.str18, i64 0, i64 0), i64 54, i64 1, %struct._IO_FILE* %12)
  %14 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !9
  %15 = load i64* %2, align 8, !tbaa !11
  %call10 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %14, i8* getelementptr inbounds ([5 x i8]* @.str4, i64 0, i64 0), i64 %15) #4
  %16 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !9
  %17 = tail call i64 @fwrite(i8* getelementptr inbounds ([3 x i8]* @.str19, i64 0, i64 0), i64 2, i64 1, %struct._IO_FILE* %16)
  br label %return

if.end13:                                         ; preds = %entry
  %iteration_var = getelementptr inbounds i8* %1, i64 72
  %18 = bitcast i8* %iteration_var to %struct.rtx_def**
  %19 = load %struct.rtx_def** %18, align 8, !tbaa !72
  %cmp14 = icmp eq %struct.rtx_def* %19, null
  br i1 %cmp14, label %if.then15, label %if.else20

if.then15:                                        ; preds = %if.end13
  %20 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !9
  %tobool16 = icmp eq %struct._IO_FILE* %20, null
  br i1 %tobool16, label %return, label %if.then17

if.then17:                                        ; preds = %if.then15
  %21 = tail call i64 @fwrite(i8* getelementptr inbounds ([53 x i8]* @.str20, i64 0, i64 0), i64 52, i64 1, %struct._IO_FILE* %20)
  br label %return

if.else20:                                        ; preds = %if.end13
  %initial_value21 = getelementptr inbounds i8* %1, i64 32
  %22 = bitcast i8* %initial_value21 to %struct.rtx_def**
  %23 = load %struct.rtx_def** %22, align 8, !tbaa !73
  %cmp22 = icmp eq %struct.rtx_def* %23, null
  br i1 %cmp22, label %if.then23, label %if.else28

if.then23:                                        ; preds = %if.else20
  %24 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !9
  %tobool24 = icmp eq %struct._IO_FILE* %24, null
  br i1 %tobool24, label %return, label %if.then25

if.then25:                                        ; preds = %if.then23
  %25 = tail call i64 @fwrite(i8* getelementptr inbounds ([48 x i8]* @.str21, i64 0, i64 0), i64 47, i64 1, %struct._IO_FILE* %24)
  br label %return

if.else28:                                        ; preds = %if.else20
  %increment29 = getelementptr inbounds i8* %1, i64 80
  %26 = bitcast i8* %increment29 to %struct.rtx_def**
  %27 = load %struct.rtx_def** %26, align 8, !tbaa !71
  %cmp30 = icmp eq %struct.rtx_def* %27, null
  br i1 %cmp30, label %if.then31, label %if.else36

if.then31:                                        ; preds = %if.else28
  %28 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !9
  %tobool32 = icmp eq %struct._IO_FILE* %28, null
  br i1 %tobool32, label %return, label %if.then33

if.then33:                                        ; preds = %if.then31
  %29 = tail call i64 @fwrite(i8* getelementptr inbounds ([50 x i8]* @.str22, i64 0, i64 0), i64 49, i64 1, %struct._IO_FILE* %28)
  br label %return

if.else36:                                        ; preds = %if.else28
  %30 = getelementptr inbounds %struct.rtx_def* %27, i64 0, i32 0
  %bf.load = load i32* %30, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp38 = icmp eq i32 %bf.clear, 54
  br i1 %cmp38, label %if.else44, label %if.then39

if.then39:                                        ; preds = %if.else36
  %31 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !9
  %tobool40 = icmp eq %struct._IO_FILE* %31, null
  br i1 %tobool40, label %return, label %if.then41

if.then41:                                        ; preds = %if.then39
  %32 = tail call i64 @fwrite(i8* getelementptr inbounds ([44 x i8]* @.str23, i64 0, i64 0), i64 43, i64 1, %struct._IO_FILE* %31)
  br label %return

if.else44:                                        ; preds = %if.else36
  %rtwint48 = getelementptr inbounds %struct.rtx_def* %27, i64 0, i32 1, i64 0, i32 0
  %33 = load i64* %rtwint48, align 8, !tbaa !39
  %call49 = tail call i32 @exact_log2_wide(i64 %33) #4
  %cmp50 = icmp slt i32 %call49, 0
  br i1 %cmp50, label %land.lhs.true, label %if.end66

land.lhs.true:                                    ; preds = %if.else44
  %34 = load %struct.rtx_def** %26, align 8, !tbaa !71
  %rtwint54 = getelementptr inbounds %struct.rtx_def* %34, i64 0, i32 1, i64 0, i32 0
  %35 = load i64* %rtwint54, align 8, !tbaa !39
  %sub = sub nsw i64 0, %35
  %call55 = tail call i32 @exact_log2_wide(i64 %sub) #4
  %cmp56 = icmp slt i32 %call55, 0
  br i1 %cmp56, label %if.then57, label %if.end66

if.then57:                                        ; preds = %land.lhs.true
  %36 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !9
  %tobool58 = icmp eq %struct._IO_FILE* %36, null
  br i1 %tobool58, label %return, label %if.then59

if.then59:                                        ; preds = %if.then57
  %37 = tail call i64 @fwrite(i8* getelementptr inbounds ([55 x i8]* @.str24, i64 0, i64 0), i64 54, i64 1, %struct._IO_FILE* %36)
  br label %return

if.end66:                                         ; preds = %land.lhs.true, %if.else44
  %final_value67 = getelementptr inbounds i8* %1, i64 48
  %38 = bitcast i8* %final_value67 to %struct.rtx_def**
  %39 = load %struct.rtx_def** %38, align 8, !tbaa !74
  %cmp68 = icmp eq %struct.rtx_def* %39, null
  br i1 %cmp68, label %if.then69, label %if.end74

if.then69:                                        ; preds = %if.end66
  %40 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !9
  %tobool70 = icmp eq %struct._IO_FILE* %40, null
  br i1 %tobool70, label %return, label %if.then71

if.then71:                                        ; preds = %if.then69
  %41 = tail call i64 @fwrite(i8* getelementptr inbounds ([38 x i8]* @.str25, i64 0, i64 0), i64 37, i64 1, %struct._IO_FILE* %40)
  br label %return

if.end74:                                         ; preds = %if.end66
  %42 = getelementptr inbounds %struct.rtx_def* %39, i64 0, i32 0
  %bf.load76 = load i32* %42, align 8
  %bf.clear77 = and i32 %bf.load76, 65535
  switch i32 %bf.clear77, label %lor.lhs.false96 [
    i32 61, label %land.lhs.true79
    i32 75, label %land.lhs.true88
  ]

land.lhs.true79:                                  ; preds = %if.end74
  %arrayidx82 = getelementptr inbounds %struct.rtx_def* %39, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx82 to i32*
  %43 = load i32* %rtuint, align 4, !tbaa !10
  %44 = load i32* @max_reg_before_loop, align 4, !tbaa !10
  %cmp83 = icmp ult i32 %43, %44
  br i1 %cmp83, label %lor.lhs.false96, label %if.then100

land.lhs.true88:                                  ; preds = %if.end74
  %arrayidx91 = getelementptr inbounds %struct.rtx_def* %39, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx91 to %struct.rtx_def**
  %45 = load %struct.rtx_def** %rtx, align 8, !tbaa !9
  %arrayidx93 = getelementptr inbounds %struct.rtx_def* %45, i64 0, i32 1, i64 0
  %rtuint94 = bitcast %union.rtunion_def* %arrayidx93 to i32*
  %46 = load i32* %rtuint94, align 4, !tbaa !10
  %47 = load i32* @max_reg_before_loop, align 4, !tbaa !10
  %cmp95 = icmp ult i32 %46, %47
  br i1 %cmp95, label %lor.lhs.false96, label %if.then100

lor.lhs.false96:                                  ; preds = %if.end74, %land.lhs.true79, %land.lhs.true88
  %call98 = tail call i32 @loop_invariant_p(%struct.loop* %loop, %struct.rtx_def* %39) #4
  %tobool99 = icmp eq i32 %call98, 0
  br i1 %tobool99, label %if.then100, label %if.end105

if.then100:                                       ; preds = %land.lhs.true79, %land.lhs.true88, %lor.lhs.false96
  %48 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !9
  %tobool101 = icmp eq %struct._IO_FILE* %48, null
  br i1 %tobool101, label %return, label %if.then102

if.then102:                                       ; preds = %if.then100
  %49 = tail call i64 @fwrite(i8* getelementptr inbounds ([45 x i8]* @.str26, i64 0, i64 0), i64 44, i64 1, %struct._IO_FILE* %48)
  br label %return

if.end105:                                        ; preds = %lor.lhs.false96
  %50 = load %struct.rtx_def** %38, align 8, !tbaa !74
  %51 = getelementptr inbounds %struct.rtx_def* %50, i64 0, i32 0
  %bf.load107 = load i32* %51, align 8
  %bf.lshr = lshr i32 %bf.load107, 16
  %bf.clear108 = and i32 %bf.lshr, 255
  %idxprom231 = zext i32 %bf.clear108 to i64
  %arrayidx109 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom231
  %52 = load i32* %arrayidx109, align 4, !tbaa !23
  %cmp110 = icmp eq i32 %52, 2
  br i1 %cmp110, label %if.then119, label %lor.lhs.false111

lor.lhs.false111:                                 ; preds = %if.end105
  %53 = load %struct.rtx_def** %22, align 8, !tbaa !73
  %54 = getelementptr inbounds %struct.rtx_def* %53, i64 0, i32 0
  %bf.load113 = load i32* %54, align 8
  %bf.lshr114 = lshr i32 %bf.load113, 16
  %bf.clear115 = and i32 %bf.lshr114, 255
  %idxprom116232 = zext i32 %bf.clear115 to i64
  %arrayidx117 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom116232
  %55 = load i32* %arrayidx117, align 4, !tbaa !23
  %cmp118 = icmp eq i32 %55, 2
  br i1 %cmp118, label %if.then119, label %if.end124

if.then119:                                       ; preds = %lor.lhs.false111, %if.end105
  %56 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !9
  %tobool120 = icmp eq %struct._IO_FILE* %56, null
  br i1 %tobool120, label %return, label %if.then121

if.then121:                                       ; preds = %if.then119
  %57 = tail call i64 @fwrite(i8* getelementptr inbounds ([57 x i8]* @.str27, i64 0, i64 0), i64 56, i64 1, %struct._IO_FILE* %56)
  br label %return

if.end124:                                        ; preds = %lor.lhs.false111
  %58 = load i32** @uid_luid, align 8, !tbaa !9
  %arrayidx134 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 0
  %rtint = bitcast %union.rtunion_def* %arrayidx134 to i32*
  %59 = load i32* %rtint, align 4, !tbaa !10
  %60 = load i32* @max_uid_for_loop, align 4, !tbaa !10
  %cmp135 = icmp slt i32 %59, %60
  br i1 %cmp135, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end124
  %61 = load %struct.rtx_def** %18, align 8, !tbaa !72
  %arrayidx127 = getelementptr inbounds %struct.rtx_def* %61, i64 0, i32 1, i64 0
  %62 = load %struct.varray_head_tag** @reg_n_info, align 8, !tbaa !9
  %rtuint128 = bitcast %union.rtunion_def* %arrayidx127 to i32*
  %data = getelementptr inbounds %struct.varray_head_tag* %62, i64 0, i32 4
  %63 = load i32* %rtuint128, align 4, !tbaa !10
  %reg = bitcast %union.varray_data_tag* %data to [1 x %struct.reg_info_def*]*
  %idxprom129 = zext i32 %63 to i64
  %arrayidx130 = getelementptr inbounds [1 x %struct.reg_info_def*]* %reg, i64 0, i64 %idxprom129
  %64 = load %struct.reg_info_def** %arrayidx130, align 8, !tbaa !9
  %first_uid = getelementptr inbounds %struct.reg_info_def* %64, i64 0, i32 0
  %65 = load i32* %first_uid, align 4, !tbaa !28
  %idxprom131 = sext i32 %65 to i64
  %arrayidx132 = getelementptr inbounds i32* %58, i64 %idxprom131
  %66 = load i32* %arrayidx132, align 4, !tbaa !10
  %idxprom139 = sext i32 %59 to i64
  %arrayidx140 = getelementptr inbounds i32* %58, i64 %idxprom139
  %67 = load i32* %arrayidx140, align 4, !tbaa !10
  %cmp141 = icmp sgt i32 %66, %67
  br i1 %cmp141, label %if.then142, label %if.end147

cond.false:                                       ; preds = %if.end124
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str13, i64 0, i64 0), i32 1512, i8* getelementptr inbounds ([20 x i8]* @__FUNCTION__.precondition_loop_p, i64 0, i64 0)) #5
  unreachable

if.then142:                                       ; preds = %cond.true
  %68 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !9
  %tobool143 = icmp eq %struct._IO_FILE* %68, null
  br i1 %tobool143, label %return, label %if.then144

if.then144:                                       ; preds = %if.then142
  %69 = tail call i64 @fwrite(i8* getelementptr inbounds ([60 x i8]* @.str28, i64 0, i64 0), i64 59, i64 1, %struct._IO_FILE* %68)
  br label %return

if.end147:                                        ; preds = %cond.true
  store %struct.rtx_def* %53, %struct.rtx_def** %initial_value, align 8, !tbaa !9
  %70 = load %struct.rtx_def** %26, align 8, !tbaa !71
  store %struct.rtx_def* %70, %struct.rtx_def** %increment, align 8, !tbaa !9
  %71 = load %struct.rtx_def** %38, align 8, !tbaa !74
  store %struct.rtx_def* %71, %struct.rtx_def** %final_value, align 8, !tbaa !9
  %72 = getelementptr inbounds %struct.rtx_def* %71, i64 0, i32 0
  %bf.load151 = load i32* %72, align 8
  %bf.lshr152 = lshr i32 %bf.load151, 16
  %bf.clear153 = and i32 %bf.lshr152, 255
  store i32 %bf.clear153, i32* %mode, align 4, !tbaa !23
  %cmp154 = icmp eq i32 %bf.clear153, 0
  %73 = load %struct.rtx_def** %initial_value, align 8, !tbaa !9
  %74 = getelementptr inbounds %struct.rtx_def* %73, i64 0, i32 0
  %bf.load156 = load i32* %74, align 8
  %bf.lshr157 = lshr i32 %bf.load156, 16
  %bf.clear158 = and i32 %bf.lshr157, 255
  br i1 %cmp154, label %if.then155, label %if.else162

if.then155:                                       ; preds = %if.end147
  store i32 %bf.clear158, i32* %mode, align 4, !tbaa !23
  %cmp159 = icmp eq i32 %bf.clear158, 0
  br i1 %cmp159, label %if.then160, label %if.end183

if.then160:                                       ; preds = %if.then155
  %75 = load i32* @word_mode, align 4, !tbaa !23
  store i32 %75, i32* %mode, align 4, !tbaa !23
  br label %if.end183

if.else162:                                       ; preds = %if.end147
  %cmp166 = icmp eq i32 %bf.clear153, %bf.clear158
  br i1 %cmp166, label %if.end183, label %land.lhs.true167

land.lhs.true167:                                 ; preds = %if.else162
  %idxprom168233 = zext i32 %bf.clear153 to i64
  %arrayidx169 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom168233
  %76 = load i8* %arrayidx169, align 1, !tbaa !23
  %idxprom173234 = zext i32 %bf.clear158 to i64
  %arrayidx174 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom173234
  %77 = load i8* %arrayidx174, align 1, !tbaa !23
  %cmp176 = icmp ult i8 %76, %77
  br i1 %cmp176, label %if.then178, label %if.end183

if.then178:                                       ; preds = %land.lhs.true167
  store i32 %bf.clear158, i32* %mode, align 4, !tbaa !23
  br label %if.end183

if.end183:                                        ; preds = %if.else162, %land.lhs.true167, %if.then178, %if.then155, %if.then160
  %78 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !9
  %tobool184 = icmp eq %struct._IO_FILE* %78, null
  br i1 %tobool184, label %return, label %if.then185

if.then185:                                       ; preds = %if.end183
  %79 = tail call i64 @fwrite(i8* getelementptr inbounds ([30 x i8]* @.str29, i64 0, i64 0), i64 29, i64 1, %struct._IO_FILE* %78)
  br label %return

return:                                           ; preds = %if.then185, %if.end183, %if.then144, %if.then142, %if.then121, %if.then119, %if.then102, %if.then100, %if.then71, %if.then69, %if.then59, %if.then57, %if.then41, %if.then39, %if.then33, %if.then31, %if.then25, %if.then23, %if.then17, %if.then15, %if.then7, %if.end
  %retval.0 = phi i32 [ 1, %if.end ], [ 1, %if.then7 ], [ 0, %if.then15 ], [ 0, %if.then17 ], [ 0, %if.then23 ], [ 0, %if.then25 ], [ 0, %if.then31 ], [ 0, %if.then33 ], [ 0, %if.then39 ], [ 0, %if.then41 ], [ 0, %if.then57 ], [ 0, %if.then59 ], [ 0, %if.then69 ], [ 0, %if.then71 ], [ 0, %if.then100 ], [ 0, %if.then102 ], [ 0, %if.then119 ], [ 0, %if.then121 ], [ 0, %if.then142 ], [ 0, %if.then144 ], [ 1, %if.end183 ], [ 1, %if.then185 ]
  ret i32 %retval.0
}

declare %struct.varray_head_tag* @varray_init(i64, i64, i8*) #2

declare void @start_sequence() #2

declare %struct.rtx_def* @expand_simple_binop(i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32, i32) #2

declare %struct.rtx_def* @copy_rtx(%struct.rtx_def*) #2

declare i32 @nonmemory_operand(%struct.rtx_def*, i32) #2

declare %struct.rtx_def* @force_reg(i32, %struct.rtx_def*) #2

declare %struct.rtx_def* @expand_simple_unop(i32, i32, %struct.rtx_def*, %struct.rtx_def*, i32) #2

declare %struct.rtx_def* @gen_rtx_CONST_INT(i32, i64) #2

declare void @emit_cmp_and_jump_insns(%struct.rtx_def*, %struct.rtx_def*, i32, %struct.rtx_def*, i32, i32, %struct.rtx_def*) #2

declare void @predict_insn_def(%struct.rtx_def*, i32, i32) #2

declare %struct.rtx_def* @get_last_insn() #2

declare void @predict_insn(%struct.rtx_def*, i32, i32) #2

declare %struct.rtx_def* @gen_sequence() #2

declare void @end_sequence() #2

declare %struct.rtx_def* @loop_insn_hoist(%struct.loop*, %struct.rtx_def*) #2

declare %struct.rtx_def* @emit_label_after(%struct.rtx_def*, %struct.rtx_def*) #2

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #4

declare %struct.rtx_def* @gen_reg_rtx(i32) #2

declare void @record_base_value(i32, %struct.rtx_def*, i32) #2

; Function Attrs: nounwind uwtable
define internal fastcc void @copy_loop_body(%struct.loop* %loop, %struct.rtx_def* nocapture readonly %copy_start, %struct.rtx_def* readnone %copy_end, %struct.inline_remap* %map, %struct.rtx_def* %exit_label, i32 %last_iteration, i32 %unroll_type, %struct.rtx_def* %start_label, %struct.rtx_def* readnone %loop_end, %struct.rtx_def* %insert_before, %struct.rtx_def* readonly %copy_notes_from) #0 {
entry:
  %aux = getelementptr inbounds %struct.loop* %loop, i64 0, i32 22
  %0 = load i8** %aux, align 8, !tbaa !1
  %ivs1 = getelementptr inbounds i8* %0, i64 208
  %tobool = icmp ne i32 %last_iteration, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %call = tail call %struct.rtx_def* @gen_label_rtx() #4
  %arrayidx = getelementptr inbounds %struct.rtx_def* %start_label, i64 0, i32 1, i64 5
  %rtint = bitcast %union.rtunion_def* %arrayidx to i32*
  %1 = load i32* %rtint, align 4, !tbaa !10
  %idxprom = sext i32 %1 to i64
  %label_map = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 5
  %2 = load %struct.rtx_def*** %label_map, align 8, !tbaa !21
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %2, i64 %idxprom
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx2, align 8, !tbaa !9
  br label %if.end

if.else:                                          ; preds = %entry
  %arrayidx4 = getelementptr inbounds %struct.rtx_def* %start_label, i64 0, i32 1, i64 5
  %rtint5 = bitcast %union.rtunion_def* %arrayidx4 to i32*
  %3 = load i32* %rtint5, align 4, !tbaa !10
  %idxprom6 = sext i32 %3 to i64
  %label_map7 = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 5
  %4 = load %struct.rtx_def*** %label_map7, align 8, !tbaa !21
  %arrayidx8 = getelementptr inbounds %struct.rtx_def** %4, i64 %idxprom6
  store %struct.rtx_def* %start_label, %struct.rtx_def** %arrayidx8, align 8, !tbaa !9
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %final_label.0 = phi %struct.rtx_def* [ null, %if.else ], [ %call, %if.then ]
  tail call void @start_sequence() #4
  %call9 = tail call %struct.rtx_def* @emit_note(i8* null, i32 -99) #4
  %orig_asm_operands_vector = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 12
  %regs = bitcast i8* %ivs1 to %struct.iv**
  %cmp113 = icmp ne i32 %unroll_type, 0
  %or.cond = and i1 %tobool, %cmp113
  %cmp226 = icmp eq i32 %unroll_type, 0
  %n_regs = getelementptr inbounds i8* %0, i64 216
  %5 = bitcast i8* %n_regs to i32*
  %reg_map312 = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 4
  %const_equiv_varray = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 9
  %const_age = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 10
  %insn_map = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 6
  %last_pc_value = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 20
  %exit_label.c = ptrtoint %struct.rtx_def* %exit_label to i64
  %arrayidx414 = getelementptr inbounds %struct.rtx_def* %exit_label, i64 0, i32 1, i64 3
  %rtint415 = bitcast %union.rtunion_def* %arrayidx414 to i32*
  br label %do.body

do.body:                                          ; preds = %sw.epilog, %if.end
  %copy.0 = phi %struct.rtx_def* [ null, %if.end ], [ %copy.2, %sw.epilog ]
  %insn.0 = phi %struct.rtx_def* [ %copy_start, %if.end ], [ %6, %sw.epilog ]
  %arrayidx11 = getelementptr inbounds %struct.rtx_def* %insn.0, i64 0, i32 1, i64 2
  %rtx = bitcast %union.rtunion_def* %arrayidx11 to %struct.rtx_def**
  %6 = load %struct.rtx_def** %rtx, align 8, !tbaa !9
  store %struct.rtvec_def* null, %struct.rtvec_def** %orig_asm_operands_vector, align 8, !tbaa !75
  %7 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 0
  %bf.load = load i32* %7, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %sw.default [
    i32 32, label %sw.bb
    i32 33, label %sw.bb358
    i32 34, label %sw.bb600
    i32 36, label %sw.bb638
    i32 35, label %sw.bb650
    i32 37, label %sw.bb652
  ]

sw.bb:                                            ; preds = %do.body
  %arrayidx13 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1, i64 3
  %rtx14 = bitcast %union.rtunion_def* %arrayidx13 to %struct.rtx_def**
  %8 = load %struct.rtx_def** %rtx14, align 8, !tbaa !9
  %9 = load i8* getelementptr inbounds ([153 x i8]* @rtx_class, i64 0, i64 32), align 1, !tbaa !23
  %cmp = icmp eq i8 %9, 105
  br i1 %cmp, label %cond.true, label %if.end158

cond.true:                                        ; preds = %sw.bb
  %10 = getelementptr inbounds %struct.rtx_def* %8, i64 0, i32 0
  %bf.load23 = load i32* %10, align 8
  %bf.clear24 = and i32 %bf.load23, 65535
  %cmp25 = icmp eq i32 %bf.clear24, 47
  br i1 %cmp25, label %cond.end36, label %cond.false

cond.false:                                       ; preds = %cond.true
  %call34 = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* %6, %struct.rtx_def* %8) #4
  br label %cond.end36

cond.end36:                                       ; preds = %cond.true, %cond.false
  %cond37 = phi %struct.rtx_def* [ %call34, %cond.false ], [ %8, %cond.true ]
  %tobool38 = icmp eq %struct.rtx_def* %cond37, null
  br i1 %tobool38, label %if.end158, label %land.lhs.true

land.lhs.true:                                    ; preds = %cond.end36
  %arrayidx40 = getelementptr inbounds %struct.rtx_def* %cond37, i64 0, i32 1, i64 0
  %rtx41 = bitcast %union.rtunion_def* %arrayidx40 to %struct.rtx_def**
  %11 = load %struct.rtx_def** %rtx41, align 8, !tbaa !9
  %12 = getelementptr inbounds %struct.rtx_def* %11, i64 0, i32 0
  %bf.load42 = load i32* %12, align 8
  %bf.clear43 = and i32 %bf.load42, 65535
  %cmp44 = icmp eq i32 %bf.clear43, 61
  br i1 %cmp44, label %land.lhs.true46, label %if.end158

land.lhs.true46:                                  ; preds = %land.lhs.true
  %arrayidx51 = getelementptr inbounds %struct.rtx_def* %11, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx51 to i32*
  %13 = load i32* %rtuint, align 4, !tbaa !10
  %idxprom52 = zext i32 %13 to i64
  %14 = load %struct.induction*** @addr_combined_regs, align 8, !tbaa !9
  %arrayidx53 = getelementptr inbounds %struct.induction** %14, i64 %idxprom52
  %15 = load %struct.induction** %arrayidx53, align 8, !tbaa !9
  %tobool54 = icmp eq %struct.induction* %15, null
  br i1 %tobool54, label %if.end158, label %if.then55

if.then55:                                        ; preds = %land.lhs.true46
  %src_reg = getelementptr inbounds %struct.induction* %15, i64 0, i32 2
  %16 = load %struct.rtx_def** %src_reg, align 8, !tbaa !58
  %arrayidx71 = getelementptr inbounds %struct.rtx_def* %16, i64 0, i32 1, i64 0
  %rtuint72 = bitcast %union.rtunion_def* %arrayidx71 to i32*
  %17 = load i32* %rtuint72, align 4, !tbaa !10
  %idxprom73 = zext i32 %17 to i64
  %18 = load %struct.iv** %regs, align 8, !tbaa !67
  %class = getelementptr inbounds %struct.iv* %18, i64 %idxprom73, i32 1, i32 0
  %19 = load %struct.iv_class** %class, align 8, !tbaa !9
  %call75 = tail call fastcc %struct.rtx_def* @calculate_giv_inc(%struct.rtx_def* %cond37, %struct.rtx_def* %6, i32 %13)
  %giv = getelementptr inbounds %struct.iv_class* %19, i64 0, i32 4
  %tv.01057 = load %struct.induction** %giv, align 8
  %tobool761058 = icmp eq %struct.induction* %tv.01057, null
  br i1 %tobool761058, label %if.end158, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.then55
  %rtwint = getelementptr inbounds %struct.rtx_def* %call75, i64 0, i32 1, i64 0, i32 0
  %mult_val90 = getelementptr inbounds %struct.induction* %15, i64 0, i32 8
  br i1 %or.cond, label %for.body.us, label %for.body

for.body.us:                                      ; preds = %for.body.lr.ph, %for.inc.us
  %tv.01059.us = phi %struct.induction* [ %tv.0.us, %for.inc.us ], [ %tv.01057, %for.body.lr.ph ]
  %giv_type.us = getelementptr inbounds %struct.induction* %tv.01059.us, i64 0, i32 3
  %20 = load i32* %giv_type.us, align 4, !tbaa !62
  %cmp77.us = icmp eq i32 %20, 0
  br i1 %cmp77.us, label %land.lhs.true79.us, label %for.inc.us

land.lhs.true79.us:                               ; preds = %for.body.us
  %same.us = getelementptr inbounds %struct.induction* %tv.01059.us, i64 0, i32 18
  %21 = load %struct.induction** %same.us, align 8, !tbaa !64
  %cmp80.us = icmp eq %struct.induction* %21, %15
  br i1 %cmp80.us, label %if.then82.us, label %for.inc.us

if.then82.us:                                     ; preds = %land.lhs.true79.us
  %location.us = getelementptr inbounds %struct.induction* %tv.01059.us, i64 0, i32 5
  %22 = load %struct.rtx_def*** %location.us, align 8, !tbaa !66
  %23 = load %struct.rtx_def** %22, align 8, !tbaa !9
  %dest_reg.us = getelementptr inbounds %struct.induction* %tv.01059.us, i64 0, i32 4
  %24 = load %struct.rtx_def** %dest_reg.us, align 8, !tbaa !54
  %cmp83.us = icmp eq %struct.rtx_def* %23, %24
  br i1 %cmp83.us, label %if.end86.us, label %for.inc.us

if.end86.us:                                      ; preds = %if.then82.us
  %25 = load i64* %rtwint, align 8, !tbaa !39
  %mult_val.us = getelementptr inbounds %struct.induction* %tv.01059.us, i64 0, i32 8
  %26 = load %struct.rtx_def** %mult_val.us, align 8, !tbaa !45
  %27 = load %struct.rtx_def** %mult_val90, align 8, !tbaa !45
  %cmp91.us = icmp eq %struct.rtx_def* %26, %27
  br i1 %cmp91.us, label %if.then115.us, label %if.then93.us

if.then93.us:                                     ; preds = %if.end86.us
  %sext1026.us = shl i64 %25, 32
  %conv94.us = ashr exact i64 %sext1026.us, 32
  %rtwint98.us = getelementptr inbounds %struct.rtx_def* %27, i64 0, i32 1, i64 0, i32 0
  %28 = load i64* %rtwint98.us, align 8, !tbaa !39
  %div.us = sdiv i64 %conv94.us, %28
  %rtwint102.us = getelementptr inbounds %struct.rtx_def* %26, i64 0, i32 1, i64 0, i32 0
  %29 = load i64* %rtwint102.us, align 8, !tbaa !39
  %mul.us = mul nsw i64 %29, %div.us
  br label %if.then115.us

if.then115.us:                                    ; preds = %if.end86.us, %if.then93.us
  %this_giv_inc.0.us = phi i64 [ %mul.us, %if.then93.us ], [ %25, %if.end86.us ]
  %sext.us = shl i64 %this_giv_inc.0.us, 32
  %conv106.us = ashr exact i64 %sext.us, 32
  %call107.us = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %23, i64 %conv106.us) #4
  store %struct.rtx_def* %call107.us, %struct.rtx_def** %dest_reg.us, align 8, !tbaa !54
  %30 = load %struct.rtx_def*** %location.us, align 8, !tbaa !66
  store %struct.rtx_def* %call107.us, %struct.rtx_def** %30, align 8, !tbaa !9
  %31 = load %struct.rtx_def** %dest_reg.us, align 8, !tbaa !54
  %32 = getelementptr inbounds %struct.rtx_def* %31, i64 0, i32 0
  %bf.load118.us = load i32* %32, align 8
  %bf.clear119.us = and i32 %bf.load118.us, 65535
  %cmp120.us = icmp eq i32 %bf.clear119.us, 61
  br i1 %cmp120.us, label %if.end129.us, label %if.else124.us

if.else124.us:                                    ; preds = %if.then115.us
  %arrayidx127.us = getelementptr inbounds %struct.rtx_def* %31, i64 0, i32 1, i64 0
  %rtx128.us = bitcast %union.rtunion_def* %arrayidx127.us to %struct.rtx_def**
  %33 = load %struct.rtx_def** %rtx128.us, align 8, !tbaa !9
  br label %if.end129.us

if.end129.us:                                     ; preds = %if.else124.us, %if.then115.us
  %dest_reg116.0.us = phi %struct.rtx_def* [ %33, %if.else124.us ], [ %31, %if.then115.us ]
  %same_insn.us = getelementptr inbounds %struct.induction* %tv.01059.us, i64 0, i32 20
  %34 = load %struct.induction** %same_insn.us, align 8, !tbaa !61
  %tobool130.us = icmp eq %struct.induction* %34, null
  br i1 %tobool130.us, label %land.lhs.true131.us, label %if.end150.us

land.lhs.true131.us:                              ; preds = %if.end129.us
  %shared.us = getelementptr inbounds %struct.induction* %tv.01059.us, i64 0, i32 13
  %bf.load132.us = load i16* %shared.us, align 4
  %bf.clear133.us = and i16 %bf.load132.us, 1024
  %tobool134.us = icmp eq i16 %bf.clear133.us, 0
  br i1 %tobool134.us, label %if.then135.us, label %if.end150.us

if.then135.us:                                    ; preds = %land.lhs.true131.us
  %const_adjust.us = getelementptr inbounds %struct.induction* %tv.01059.us, i64 0, i32 19
  %35 = load i64* %const_adjust.us, align 8, !tbaa !65
  %call137.us = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %31, i64 %35) #4
  %36 = getelementptr inbounds %struct.rtx_def* %call137.us, i64 0, i32 0
  %bf.load138.us = load i32* %36, align 8
  %bf.clear139.us = and i32 %bf.load138.us, 65535
  %cmp140.us = icmp eq i32 %bf.clear139.us, 75
  br i1 %cmp140.us, label %if.then142.us, label %if.end150.us

if.then142.us:                                    ; preds = %if.then135.us
  %fld143.us = getelementptr inbounds %struct.rtx_def* %call137.us, i64 0, i32 1
  %rtx145.us = bitcast [1 x %union.rtunion_def]* %fld143.us to %struct.rtx_def**
  %37 = load %struct.rtx_def** %rtx145.us, align 8, !tbaa !9
  %arrayidx147.us = getelementptr inbounds %struct.rtx_def* %call137.us, i64 0, i32 1, i64 1
  %rtx148.us = bitcast %union.rtunion_def* %arrayidx147.us to %struct.rtx_def**
  %38 = load %struct.rtx_def** %rtx148.us, align 8, !tbaa !9
  %39 = getelementptr inbounds %struct.rtx_def* %dest_reg116.0.us, i64 0, i32 0
  %bf.load.i.us = load i32* %39, align 8
  %bf.lshr.i.us = lshr i32 %bf.load.i.us, 16
  %bf.clear.i.us = and i32 %bf.lshr.i.us, 255
  %call.i.us = tail call %struct.rtx_def* @expand_simple_binop(i32 %bf.clear.i.us, i32 75, %struct.rtx_def* %37, %struct.rtx_def* %38, %struct.rtx_def* %dest_reg116.0.us, i32 0, i32 3) #4
  %cmp.i.us = icmp eq %struct.rtx_def* %call.i.us, %dest_reg116.0.us
  br i1 %cmp.i.us, label %if.end150.us, label %if.then.i.us

if.then.i.us:                                     ; preds = %if.then142.us
  %call1.i.us = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %dest_reg116.0.us, %struct.rtx_def* %call.i.us) #4
  br label %if.end150.us

if.end150.us:                                     ; preds = %if.then.i.us, %if.then142.us, %if.then135.us, %land.lhs.true131.us, %if.end129.us
  %const_adjust151.us = getelementptr inbounds %struct.induction* %tv.01059.us, i64 0, i32 19
  %40 = load i64* %const_adjust151.us, align 8, !tbaa !65
  %sub.us = sub nsw i64 0, %40
  %call152.us = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %dest_reg116.0.us, i64 %sub.us) #4
  store %struct.rtx_def* %call152.us, %struct.rtx_def** %dest_reg.us, align 8, !tbaa !54
  %41 = load %struct.rtx_def*** %location.us, align 8, !tbaa !66
  store %struct.rtx_def* %call152.us, %struct.rtx_def** %41, align 8, !tbaa !9
  br label %for.inc.us

for.inc.us:                                       ; preds = %if.end150.us, %if.then82.us, %land.lhs.true79.us, %for.body.us
  %next_iv.us = getelementptr inbounds %struct.induction* %tv.01059.us, i64 0, i32 17
  %tv.0.us = load %struct.induction** %next_iv.us, align 8
  %tobool76.us = icmp eq %struct.induction* %tv.0.us, null
  br i1 %tobool76.us, label %if.end158, label %for.body.us

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %tv.01059 = phi %struct.induction* [ %tv.0, %for.inc ], [ %tv.01057, %for.body.lr.ph ]
  %giv_type = getelementptr inbounds %struct.induction* %tv.01059, i64 0, i32 3
  %42 = load i32* %giv_type, align 4, !tbaa !62
  %cmp77 = icmp eq i32 %42, 0
  br i1 %cmp77, label %land.lhs.true79, label %for.inc

land.lhs.true79:                                  ; preds = %for.body
  %same = getelementptr inbounds %struct.induction* %tv.01059, i64 0, i32 18
  %43 = load %struct.induction** %same, align 8, !tbaa !64
  %cmp80 = icmp eq %struct.induction* %43, %15
  br i1 %cmp80, label %if.then82, label %for.inc

if.then82:                                        ; preds = %land.lhs.true79
  %location = getelementptr inbounds %struct.induction* %tv.01059, i64 0, i32 5
  %44 = load %struct.rtx_def*** %location, align 8, !tbaa !66
  %45 = load %struct.rtx_def** %44, align 8, !tbaa !9
  %dest_reg = getelementptr inbounds %struct.induction* %tv.01059, i64 0, i32 4
  %46 = load %struct.rtx_def** %dest_reg, align 8, !tbaa !54
  %cmp83 = icmp eq %struct.rtx_def* %45, %46
  br i1 %cmp83, label %if.end86, label %for.inc

if.end86:                                         ; preds = %if.then82
  %47 = load i64* %rtwint, align 8, !tbaa !39
  %mult_val = getelementptr inbounds %struct.induction* %tv.01059, i64 0, i32 8
  %48 = load %struct.rtx_def** %mult_val, align 8, !tbaa !45
  %49 = load %struct.rtx_def** %mult_val90, align 8, !tbaa !45
  %cmp91 = icmp eq %struct.rtx_def* %48, %49
  br i1 %cmp91, label %if.end104, label %if.then93

if.then93:                                        ; preds = %if.end86
  %sext1026 = shl i64 %47, 32
  %conv94 = ashr exact i64 %sext1026, 32
  %rtwint98 = getelementptr inbounds %struct.rtx_def* %49, i64 0, i32 1, i64 0, i32 0
  %50 = load i64* %rtwint98, align 8, !tbaa !39
  %div = sdiv i64 %conv94, %50
  %rtwint102 = getelementptr inbounds %struct.rtx_def* %48, i64 0, i32 1, i64 0, i32 0
  %51 = load i64* %rtwint102, align 8, !tbaa !39
  %mul = mul nsw i64 %51, %div
  br label %if.end104

if.end104:                                        ; preds = %if.end86, %if.then93
  %this_giv_inc.0 = phi i64 [ %mul, %if.then93 ], [ %47, %if.end86 ]
  %sext = shl i64 %this_giv_inc.0, 32
  %conv106 = ashr exact i64 %sext, 32
  %call107 = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %45, i64 %conv106) #4
  store %struct.rtx_def* %call107, %struct.rtx_def** %dest_reg, align 8, !tbaa !54
  %52 = load %struct.rtx_def*** %location, align 8, !tbaa !66
  store %struct.rtx_def* %call107, %struct.rtx_def** %52, align 8, !tbaa !9
  br label %for.inc

for.inc:                                          ; preds = %if.end104, %if.then82, %for.body, %land.lhs.true79
  %next_iv = getelementptr inbounds %struct.induction* %tv.01059, i64 0, i32 17
  %tv.0 = load %struct.induction** %next_iv, align 8
  %tobool76 = icmp eq %struct.induction* %tv.0, null
  br i1 %tobool76, label %if.end158, label %for.body

if.end158:                                        ; preds = %for.inc, %for.inc.us, %if.then55, %sw.bb, %land.lhs.true46, %cond.end36, %land.lhs.true
  %giv_inc.0 = phi %struct.rtx_def* [ null, %land.lhs.true46 ], [ null, %land.lhs.true ], [ null, %cond.end36 ], [ null, %sw.bb ], [ %call75, %if.then55 ], [ %call75, %for.inc.us ], [ %call75, %for.inc ]
  %bf.load159 = load i32* %7, align 8
  %bf.clear160 = and i32 %bf.load159, 65535
  %idxprom1611025 = zext i32 %bf.clear160 to i64
  %arrayidx162 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom1611025
  %53 = load i8* %arrayidx162, align 1, !tbaa !23
  %cmp164 = icmp eq i8 %53, 105
  br i1 %cmp164, label %cond.true166, label %if.else320

cond.true166:                                     ; preds = %if.end158
  %54 = load %struct.rtx_def** %rtx14, align 8, !tbaa !9
  %55 = getelementptr inbounds %struct.rtx_def* %54, i64 0, i32 0
  %bf.load170 = load i32* %55, align 8
  %bf.clear171 = and i32 %bf.load170, 65535
  %cmp172 = icmp eq i32 %bf.clear171, 47
  br i1 %cmp172, label %cond.end186, label %cond.false178

cond.false178:                                    ; preds = %cond.true166
  %call182 = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* %6, %struct.rtx_def* %54) #4
  br label %cond.end186

cond.end186:                                      ; preds = %cond.true166, %cond.false178
  %cond187 = phi %struct.rtx_def* [ %call182, %cond.false178 ], [ %54, %cond.true166 ]
  %tobool188 = icmp eq %struct.rtx_def* %cond187, null
  br i1 %tobool188, label %if.else320, label %land.lhs.true189

land.lhs.true189:                                 ; preds = %cond.end186
  %arrayidx191 = getelementptr inbounds %struct.rtx_def* %cond187, i64 0, i32 1, i64 0
  %rtx192 = bitcast %union.rtunion_def* %arrayidx191 to %struct.rtx_def**
  %56 = load %struct.rtx_def** %rtx192, align 8, !tbaa !9
  %57 = getelementptr inbounds %struct.rtx_def* %56, i64 0, i32 0
  %bf.load193 = load i32* %57, align 8
  %bf.clear194 = and i32 %bf.load193, 65535
  %cmp195 = icmp eq i32 %bf.clear194, 61
  br i1 %cmp195, label %land.lhs.true197, label %if.else320

land.lhs.true197:                                 ; preds = %land.lhs.true189
  %arrayidx202 = getelementptr inbounds %struct.rtx_def* %56, i64 0, i32 1, i64 0
  %rtuint203 = bitcast %union.rtunion_def* %arrayidx202 to i32*
  %58 = load i32* %rtuint203, align 4, !tbaa !10
  %idxprom204 = zext i32 %58 to i64
  %59 = load %struct.rtx_def*** @splittable_regs, align 8, !tbaa !9
  %arrayidx205 = getelementptr inbounds %struct.rtx_def** %59, i64 %idxprom204
  %60 = load %struct.rtx_def** %arrayidx205, align 8, !tbaa !9
  %tobool206 = icmp eq %struct.rtx_def* %60, null
  br i1 %tobool206, label %if.else320, label %if.then207

if.then207:                                       ; preds = %land.lhs.true197
  %cmp218 = icmp eq %struct.rtx_def* %giv_inc.0, null
  br i1 %cmp218, label %if.then220, label %if.end222

if.then220:                                       ; preds = %if.then207
  %call221 = tail call fastcc %struct.rtx_def* @calculate_giv_inc(%struct.rtx_def* %cond187, %struct.rtx_def* %6, i32 %58)
  %.pre = load i32* %rtuint203, align 4, !tbaa !10
  br label %if.end222

if.end222:                                        ; preds = %if.then220, %if.then207
  %61 = phi i32 [ %.pre, %if.then220 ], [ %58, %if.then207 ]
  %giv_inc.1 = phi %struct.rtx_def* [ %call221, %if.then220 ], [ %giv_inc.0, %if.then207 ]
  br i1 %cmp226, label %if.then228, label %if.else258

if.then228:                                       ; preds = %if.end222
  %idxprom229 = zext i32 %61 to i64
  %62 = load %struct.rtx_def*** @splittable_regs, align 8, !tbaa !9
  %arrayidx230 = getelementptr inbounds %struct.rtx_def** %62, i64 %idxprom229
  %63 = load %struct.rtx_def** %arrayidx230, align 8, !tbaa !9
  %rtwint233 = getelementptr inbounds %struct.rtx_def* %giv_inc.1, i64 0, i32 1, i64 0, i32 0
  %64 = load i64* %rtwint233, align 8, !tbaa !39
  %call234 = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %63, i64 %64) #4
  %65 = load %struct.rtx_def*** @splittable_regs, align 8, !tbaa !9
  %arrayidx236 = getelementptr inbounds %struct.rtx_def** %65, i64 %idxprom204
  store %struct.rtx_def* %call234, %struct.rtx_def** %arrayidx236, align 8, !tbaa !9
  %66 = load %struct.rtx_def*** @splittable_regs, align 8, !tbaa !9
  %arrayidx238 = getelementptr inbounds %struct.rtx_def** %66, i64 %idxprom204
  %67 = load %struct.rtx_def** %arrayidx238, align 8, !tbaa !9
  %68 = getelementptr inbounds %struct.rtx_def* %67, i64 0, i32 0
  %bf.load239 = load i32* %68, align 8
  %bf.clear240 = and i32 %bf.load239, 65535
  %cmp241 = icmp eq i32 %bf.clear240, 75
  br i1 %cmp241, label %if.then243, label %if.else254

if.then243:                                       ; preds = %if.then228
  %fld246 = getelementptr inbounds %struct.rtx_def* %67, i64 0, i32 1
  %rtx248 = bitcast [1 x %union.rtunion_def]* %fld246 to %struct.rtx_def**
  %69 = load %struct.rtx_def** %rtx248, align 8, !tbaa !9
  %arrayidx252 = getelementptr inbounds %struct.rtx_def* %67, i64 0, i32 1, i64 1
  %rtx253 = bitcast %union.rtunion_def* %arrayidx252 to %struct.rtx_def**
  %70 = load %struct.rtx_def** %rtx253, align 8, !tbaa !9
  br label %if.end315

if.else254:                                       ; preds = %if.then228
  %71 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !9
  br label %if.end315

if.else258:                                       ; preds = %if.end222
  %72 = load i32* %5, align 4, !tbaa !76
  %cmp259 = icmp ult i32 %58, %72
  br i1 %cmp259, label %land.lhs.true261, label %if.end274

land.lhs.true261:                                 ; preds = %if.else258
  %73 = load %struct.iv** %regs, align 8, !tbaa !67
  %type = getelementptr inbounds %struct.iv* %73, i64 %idxprom204, i32 0
  %74 = load i32* %type, align 4, !tbaa !77
  %cmp265 = icmp eq i32 %74, 1
  br i1 %cmp265, label %if.then267, label %if.end274

if.then267:                                       ; preds = %land.lhs.true261
  %class272 = getelementptr inbounds %struct.iv* %73, i64 %idxprom204, i32 1, i32 0
  %75 = load %struct.iv_class** %class272, align 8, !tbaa !9
  %biv = getelementptr inbounds %struct.iv_class* %75, i64 0, i32 2
  %76 = load %struct.induction** %biv, align 8, !tbaa !53
  %src_reg273 = getelementptr inbounds %struct.induction* %76, i64 0, i32 2
  %77 = load %struct.rtx_def** %src_reg273, align 8, !tbaa !58
  br label %if.end274

if.end274:                                        ; preds = %if.then267, %land.lhs.true261, %if.else258
  %giv_src_reg.0 = phi %struct.rtx_def* [ %77, %if.then267 ], [ %56, %land.lhs.true261 ], [ %56, %if.else258 ]
  %78 = getelementptr inbounds %struct.rtx_def* %giv_src_reg.0, i64 0, i32 0
  %bf.load275 = load i32* %78, align 8
  %bf.lshr276 = lshr i32 %bf.load275, 16
  %bf.clear277 = and i32 %bf.lshr276, 255
  %idxprom278 = zext i32 %61 to i64
  %79 = load %struct.rtx_def*** @splittable_regs, align 8, !tbaa !9
  %arrayidx279 = getelementptr inbounds %struct.rtx_def** %79, i64 %idxprom278
  %80 = load %struct.rtx_def** %arrayidx279, align 8, !tbaa !9
  %call280 = tail call %struct.rtx_def* @simplify_gen_binary(i32 75, i32 %bf.clear277, %struct.rtx_def* %giv_inc.1, %struct.rtx_def* %80) #4
  %81 = load %struct.rtx_def*** @splittable_regs, align 8, !tbaa !9
  %arrayidx282 = getelementptr inbounds %struct.rtx_def** %81, i64 %idxprom204
  store %struct.rtx_def* %call280, %struct.rtx_def** %arrayidx282, align 8, !tbaa !9
  %82 = load %struct.rtx_def*** @splittable_regs, align 8, !tbaa !9
  %arrayidx284 = getelementptr inbounds %struct.rtx_def** %82, i64 %idxprom204
  %83 = load %struct.rtx_def** %arrayidx284, align 8, !tbaa !9
  br i1 %tobool, label %lor.lhs.false, label %if.then290

lor.lhs.false:                                    ; preds = %if.end274
  %84 = load i32** @splittable_regs_updates, align 8, !tbaa !9
  %arrayidx287 = getelementptr inbounds i32* %84, i64 %idxprom204
  %85 = load i32* %arrayidx287, align 4, !tbaa !10
  %dec = add nsw i32 %85, -1
  store i32 %dec, i32* %arrayidx287, align 4, !tbaa !10
  %cmp288 = icmp eq i32 %85, 1
  br i1 %cmp288, label %if.else310, label %if.then290

if.then290:                                       ; preds = %lor.lhs.false, %if.end274
  %bf.load291 = load i32* %78, align 8
  %bf.lshr292 = lshr i32 %bf.load291, 16
  %bf.clear293 = and i32 %bf.lshr292, 255
  %call294 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear293) #4
  %86 = load %struct.rtx_def*** %reg_map312, align 8, !tbaa !32
  %arrayidx296 = getelementptr inbounds %struct.rtx_def** %86, i64 %idxprom204
  store %struct.rtx_def* %call294, %struct.rtx_def** %arrayidx296, align 8, !tbaa !9
  %arrayidx298 = getelementptr inbounds %struct.rtx_def* %call294, i64 0, i32 1, i64 0
  %rtuint299 = bitcast %union.rtunion_def* %arrayidx298 to i32*
  %87 = load i32* %rtuint299, align 4, !tbaa !10
  %88 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !9
  %cmp300 = icmp eq %struct.rtx_def* %83, %88
  br i1 %cmp300, label %cond.end308, label %cond.false303

cond.false303:                                    ; preds = %if.then290
  %bf.load304 = load i32* %78, align 8
  %bf.lshr305 = lshr i32 %bf.load304, 16
  %bf.clear306 = and i32 %bf.lshr305, 255
  %call307 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %bf.clear306, %struct.rtx_def* %giv_src_reg.0, %struct.rtx_def* %83) #4
  br label %cond.end308

cond.end308:                                      ; preds = %if.then290, %cond.false303
  %cond309 = phi %struct.rtx_def* [ %call307, %cond.false303 ], [ %giv_src_reg.0, %if.then290 ]
  tail call void @record_base_value(i32 %87, %struct.rtx_def* %cond309, i32 1) #4
  br label %if.end315

if.else310:                                       ; preds = %lor.lhs.false
  %89 = load %struct.rtx_def*** %reg_map312, align 8, !tbaa !32
  %arrayidx313 = getelementptr inbounds %struct.rtx_def** %89, i64 %idxprom204
  store %struct.rtx_def* %giv_src_reg.0, %struct.rtx_def** %arrayidx313, align 8, !tbaa !9
  br label %if.end315

if.end315:                                        ; preds = %cond.end308, %if.else310, %if.then243, %if.else254
  %giv_src_reg.1 = phi %struct.rtx_def* [ %69, %if.then243 ], [ %67, %if.else254 ], [ %giv_src_reg.0, %cond.end308 ], [ %giv_src_reg.0, %if.else310 ]
  %giv_dest_reg.1 = phi %struct.rtx_def* [ %56, %if.then243 ], [ %56, %if.else254 ], [ %call294, %cond.end308 ], [ %giv_src_reg.0, %if.else310 ]
  %giv_inc.2 = phi %struct.rtx_def* [ %70, %if.then243 ], [ %71, %if.else254 ], [ %83, %cond.end308 ], [ %83, %if.else310 ]
  %90 = getelementptr inbounds %struct.rtx_def* %giv_dest_reg.1, i64 0, i32 0
  %bf.load.i1029 = load i32* %90, align 8
  %bf.lshr.i1030 = lshr i32 %bf.load.i1029, 16
  %bf.clear.i1031 = and i32 %bf.lshr.i1030, 255
  %call.i1032 = tail call %struct.rtx_def* @expand_simple_binop(i32 %bf.clear.i1031, i32 75, %struct.rtx_def* %giv_src_reg.1, %struct.rtx_def* %giv_inc.2, %struct.rtx_def* %giv_dest_reg.1, i32 0, i32 3) #4
  %cmp.i1033 = icmp eq %struct.rtx_def* %call.i1032, %giv_dest_reg.1
  br i1 %cmp.i1033, label %emit_unrolled_add.exit1036, label %if.then.i1035

if.then.i1035:                                    ; preds = %if.end315
  %call1.i1034 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %giv_dest_reg.1, %struct.rtx_def* %call.i1032) #4
  br label %emit_unrolled_add.exit1036

emit_unrolled_add.exit1036:                       ; preds = %if.end315, %if.then.i1035
  %call316 = tail call %struct.rtx_def* @get_last_insn() #4
  br label %if.end323

if.else320:                                       ; preds = %if.end158, %land.lhs.true197, %cond.end186, %land.lhs.true189
  %cond1871045 = phi %struct.rtx_def* [ %cond187, %land.lhs.true197 ], [ null, %cond.end186 ], [ %cond187, %land.lhs.true189 ], [ null, %if.end158 ]
  %call321 = tail call %struct.rtx_def* @copy_rtx_and_substitute(%struct.rtx_def* %8, %struct.inline_remap* %map, i32 0) #4
  %call322 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call321) #4
  br label %if.end323

if.end323:                                        ; preds = %if.else320, %emit_unrolled_add.exit1036
  %cond1871044 = phi %struct.rtx_def* [ %cond187, %emit_unrolled_add.exit1036 ], [ %cond1871045, %if.else320 ]
  %dest_reg_was_split.0 = phi i1 [ true, %emit_unrolled_add.exit1036 ], [ false, %if.else320 ]
  %copy.1 = phi %struct.rtx_def* [ %call316, %emit_unrolled_add.exit1036 ], [ %call322, %if.else320 ]
  %arrayidx325 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1, i64 6
  %rtx326 = bitcast %union.rtunion_def* %arrayidx325 to %struct.rtx_def**
  %91 = load %struct.rtx_def** %rtx326, align 8, !tbaa !9
  %call327 = tail call fastcc %struct.rtx_def* @initial_reg_note_copy(%struct.rtx_def* %91, %struct.inline_remap* %map)
  %92 = getelementptr inbounds %struct.rtx_def* %copy.1, i64 0, i32 1, i64 6, i32 0
  %call327.c = ptrtoint %struct.rtx_def* %call327 to i64
  store i64 %call327.c, i64* %92, align 8, !tbaa !9
  tail call void @try_constants(%struct.rtx_def* %copy.1, %struct.inline_remap* %map) #4
  br i1 %dest_reg_was_split.0, label %if.then332, label %sw.epilog

if.then332:                                       ; preds = %if.end323
  %arrayidx335 = getelementptr inbounds %struct.rtx_def* %cond1871044, i64 0, i32 1, i64 0
  %rtx336 = bitcast %union.rtunion_def* %arrayidx335 to %struct.rtx_def**
  %93 = load %struct.rtx_def** %rtx336, align 8, !tbaa !9
  %arrayidx338 = getelementptr inbounds %struct.rtx_def* %93, i64 0, i32 1, i64 0
  %rtuint339 = bitcast %union.rtunion_def* %arrayidx338 to i32*
  %94 = load i32* %rtuint339, align 4, !tbaa !10
  %conv340 = sext i32 %94 to i64
  %95 = load %struct.varray_head_tag** %const_equiv_varray, align 8, !tbaa !33
  %num_elements = getelementptr inbounds %struct.varray_head_tag* %95, i64 0, i32 0
  %96 = load i64* %num_elements, align 8, !tbaa !40
  %cmp341 = icmp ult i64 %conv340, %96
  br i1 %cmp341, label %land.lhs.true343, label %sw.epilog

land.lhs.true343:                                 ; preds = %if.then332
  %age = getelementptr inbounds %struct.varray_head_tag* %95, i64 0, i32 4, i32 0, i64 %conv340, i32 1
  %97 = load i32* %age, align 4, !tbaa !79
  %98 = load i32* %const_age, align 4, !tbaa !43
  %cmp347 = icmp eq i32 %97, %98
  br i1 %cmp347, label %if.then349, label %sw.epilog

if.then349:                                       ; preds = %land.lhs.true343
  store i32 -1, i32* %age, align 4, !tbaa !79
  br label %sw.epilog

sw.bb358:                                         ; preds = %do.body
  %arrayidx360 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1, i64 3
  %rtx361 = bitcast %union.rtunion_def* %arrayidx360 to %struct.rtx_def**
  %99 = load %struct.rtx_def** %rtx361, align 8, !tbaa !9
  %call362 = tail call %struct.rtx_def* @copy_rtx_and_substitute(%struct.rtx_def* %99, %struct.inline_remap* %map, i32 0) #4
  %call363 = tail call %struct.rtx_def* @emit_jump_insn(%struct.rtx_def* %call362) #4
  %arrayidx365 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1, i64 6
  %rtx366 = bitcast %union.rtunion_def* %arrayidx365 to %struct.rtx_def**
  %100 = load %struct.rtx_def** %rtx366, align 8, !tbaa !9
  %call367 = tail call fastcc %struct.rtx_def* @initial_reg_note_copy(%struct.rtx_def* %100, %struct.inline_remap* %map)
  %101 = getelementptr inbounds %struct.rtx_def* %call363, i64 0, i32 1, i64 6, i32 0
  %call367.c = ptrtoint %struct.rtx_def* %call367 to i64
  store i64 %call367.c, i64* %101, align 8, !tbaa !9
  %arrayidx372 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1, i64 7
  %rtx373 = bitcast %union.rtunion_def* %arrayidx372 to %struct.rtx_def**
  %102 = load %struct.rtx_def** %rtx373, align 8, !tbaa !9
  %tobool374 = icmp eq %struct.rtx_def* %102, null
  br i1 %tobool374, label %if.end392, label %if.then375

if.then375:                                       ; preds = %sw.bb358
  %arrayidx380 = getelementptr inbounds %struct.rtx_def* %102, i64 0, i32 1, i64 5
  %rtint381 = bitcast %union.rtunion_def* %arrayidx380 to i32*
  %103 = load i32* %rtint381, align 4, !tbaa !10
  %call382 = tail call %struct.rtx_def* @get_label_from_map(%struct.inline_remap* %map, i32 %103) #4
  %104 = getelementptr inbounds %struct.rtx_def* %call363, i64 0, i32 1, i64 7, i32 0
  %call382.c = ptrtoint %struct.rtx_def* %call382 to i64
  store i64 %call382.c, i64* %104, align 8, !tbaa !9
  %arrayidx390 = getelementptr inbounds %struct.rtx_def* %call382, i64 0, i32 1, i64 3
  %rtint391 = bitcast %union.rtunion_def* %arrayidx390 to i32*
  %105 = load i32* %rtint391, align 4, !tbaa !10
  %inc = add nsw i32 %105, 1
  store i32 %inc, i32* %rtint391, align 4, !tbaa !10
  %.pre1066 = load %struct.rtx_def** %rtx373, align 8, !tbaa !9
  br label %if.end392

if.end392:                                        ; preds = %sw.bb358, %if.then375
  %106 = phi %struct.rtx_def* [ null, %sw.bb358 ], [ %.pre1066, %if.then375 ]
  %cmp396 = icmp ne %struct.rtx_def* %106, %start_label
  %cmp399 = icmp ne %struct.rtx_def* %6, %copy_end
  %or.cond799 = or i1 %cmp399, %tobool
  %or.cond1027 = or i1 %cmp396, %or.cond799
  br i1 %or.cond1027, label %if.end427, label %if.then403

if.then403:                                       ; preds = %if.end392
  %call404 = tail call i32 @invert_jump(%struct.rtx_def* %call363, %struct.rtx_def* %exit_label, i32 0) #4
  %tobool405 = icmp eq i32 %call404, 0
  br i1 %tobool405, label %if.then406, label %if.end427

if.then406:                                       ; preds = %if.then403
  %call407 = tail call %struct.rtx_def* @gen_label_rtx() #4
  %call408 = tail call %struct.rtx_def* @gen_jump(%struct.rtx_def* %exit_label) #4
  %call409 = tail call %struct.rtx_def* @emit_jump_insn_after(%struct.rtx_def* %call408, %struct.rtx_def* %call363) #4
  %107 = getelementptr inbounds %struct.rtx_def* %call409, i64 0, i32 1, i64 7, i32 0
  store i64 %exit_label.c, i64* %107, align 8, !tbaa !9
  %108 = load i32* %rtint415, align 4, !tbaa !10
  %inc416 = add nsw i32 %108, 1
  store i32 %inc416, i32* %rtint415, align 4, !tbaa !10
  %call417 = tail call %struct.rtx_def* @emit_barrier_after(%struct.rtx_def* %call409) #4
  %call418 = tail call %struct.rtx_def* @emit_label_after(%struct.rtx_def* %call407, %struct.rtx_def* %call417) #4
  %arrayidx420 = getelementptr inbounds %struct.rtx_def* %call407, i64 0, i32 1, i64 3
  %rtint421 = bitcast %union.rtunion_def* %arrayidx420 to i32*
  store i32 0, i32* %rtint421, align 4, !tbaa !10
  %call422 = tail call i32 @redirect_jump(%struct.rtx_def* %call363, %struct.rtx_def* %call407, i32 0) #4
  %tobool423 = icmp eq i32 %call422, 0
  br i1 %tobool423, label %if.then424, label %if.end427

if.then424:                                       ; preds = %if.then406
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str13, i64 0, i64 0), i32 2134, i8* getelementptr inbounds ([15 x i8]* @__FUNCTION__.copy_loop_body, i64 0, i64 0)) #5
  unreachable

if.end427:                                        ; preds = %if.end392, %if.then406, %if.then403
  tail call void @try_constants(%struct.rtx_def* %call363, %struct.inline_remap* %map) #4
  %109 = load %struct.rtx_def** %rtx373, align 8, !tbaa !9
  %tobool431 = icmp eq %struct.rtx_def* %109, null
  br i1 %tobool431, label %if.else533, label %if.then432

if.then432:                                       ; preds = %if.end427
  %110 = getelementptr inbounds %struct.rtx_def* %call363, i64 0, i32 0
  %bf.load433 = load i32* %110, align 8
  %bf.clear434 = and i32 %bf.load433, 65535
  %idxprom4351023 = zext i32 %bf.clear434 to i64
  %arrayidx436 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom4351023
  %111 = load i8* %arrayidx436, align 1, !tbaa !23
  %cmp438 = icmp eq i8 %111, 105
  br i1 %cmp438, label %cond.true440, label %if.else514

cond.true440:                                     ; preds = %if.then432
  %arrayidx442 = getelementptr inbounds %struct.rtx_def* %call363, i64 0, i32 1, i64 3
  %rtx443 = bitcast %union.rtunion_def* %arrayidx442 to %struct.rtx_def**
  %112 = load %struct.rtx_def** %rtx443, align 8, !tbaa !9
  %113 = getelementptr inbounds %struct.rtx_def* %112, i64 0, i32 0
  %bf.load444 = load i32* %113, align 8
  %bf.clear445 = and i32 %bf.load444, 65535
  %cmp446 = icmp eq i32 %bf.clear445, 47
  br i1 %cmp446, label %cond.end460, label %cond.false452

cond.false452:                                    ; preds = %cond.true440
  %call456 = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* %call363, %struct.rtx_def* %112) #4
  br label %cond.end460

cond.end460:                                      ; preds = %cond.true440, %cond.false452
  %cond461 = phi %struct.rtx_def* [ %call456, %cond.false452 ], [ %112, %cond.true440 ]
  %tobool462 = icmp eq %struct.rtx_def* %cond461, null
  br i1 %tobool462, label %if.else514, label %if.then463

if.then463:                                       ; preds = %cond.end460
  %arrayidx465 = getelementptr inbounds %struct.rtx_def* %cond461, i64 0, i32 1, i64 1
  %rtx466 = bitcast %union.rtunion_def* %arrayidx465 to %struct.rtx_def**
  %114 = load %struct.rtx_def** %rtx466, align 8, !tbaa !9
  %115 = getelementptr inbounds %struct.rtx_def* %114, i64 0, i32 0
  %bf.load467 = load i32* %115, align 8
  %bf.clear468 = and i32 %bf.load467, 65535
  switch i32 %bf.clear468, label %if.else514 [
    i32 67, label %if.then471
    i32 72, label %if.then480
  ]

if.then471:                                       ; preds = %if.then463
  %arrayidx473 = getelementptr inbounds %struct.rtx_def* %114, i64 0, i32 1, i64 0
  br label %if.end503

if.then480:                                       ; preds = %if.then463
  %arrayidx482 = getelementptr inbounds %struct.rtx_def* %114, i64 0, i32 1, i64 1
  %rtx483 = bitcast %union.rtunion_def* %arrayidx482 to %struct.rtx_def**
  %116 = load %struct.rtx_def** %rtx483, align 8, !tbaa !9
  %117 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 8, !tbaa !9
  %cmp484 = icmp eq %struct.rtx_def* %116, %117
  br i1 %cmp484, label %if.else493, label %if.then486

if.then486:                                       ; preds = %if.then480
  %arrayidx491 = getelementptr inbounds %struct.rtx_def* %116, i64 0, i32 1, i64 0
  br label %if.end503

if.else493:                                       ; preds = %if.then480
  %arrayidx495 = getelementptr inbounds %struct.rtx_def* %114, i64 0, i32 1, i64 2
  %rtx496 = bitcast %union.rtunion_def* %arrayidx495 to %struct.rtx_def**
  %118 = load %struct.rtx_def** %rtx496, align 8, !tbaa !9
  %arrayidx498 = getelementptr inbounds %struct.rtx_def* %118, i64 0, i32 1, i64 0
  br label %if.end503

if.end503:                                        ; preds = %if.then471, %if.then486, %if.else493
  %label.0.in.in = phi %union.rtunion_def* [ %arrayidx473, %if.then471 ], [ %arrayidx491, %if.then486 ], [ %arrayidx498, %if.else493 ]
  %label.0.in = bitcast %union.rtunion_def* %label.0.in.in to %struct.rtx_def**
  %label.0 = load %struct.rtx_def** %label.0.in, align 8
  %tobool504 = icmp eq %struct.rtx_def* %label.0, null
  br i1 %tobool504, label %if.else514, label %land.lhs.true505

land.lhs.true505:                                 ; preds = %if.end503
  %119 = getelementptr inbounds %struct.rtx_def* %label.0, i64 0, i32 0
  %bf.load506 = load i32* %119, align 8
  %bf.clear507 = and i32 %bf.load506, 65535
  %cmp508 = icmp eq i32 %bf.clear507, 36
  br i1 %cmp508, label %if.then510, label %if.else514

if.then510:                                       ; preds = %land.lhs.true505
  %120 = getelementptr inbounds %struct.rtx_def* %call363, i64 0, i32 1, i64 7, i32 0
  %label.0.c = ptrtoint %struct.rtx_def* %label.0 to i64
  store i64 %label.0.c, i64* %120, align 8, !tbaa !9
  br label %if.end525

if.else514:                                       ; preds = %if.then432, %if.then463, %cond.end460, %if.end503, %land.lhs.true505
  %121 = load %struct.rtx_def** %rtx373, align 8, !tbaa !9
  %arrayidx519 = getelementptr inbounds %struct.rtx_def* %121, i64 0, i32 1, i64 5
  %rtint520 = bitcast %union.rtunion_def* %arrayidx519 to i32*
  %122 = load i32* %rtint520, align 4, !tbaa !10
  %call521 = tail call %struct.rtx_def* @get_label_from_map(%struct.inline_remap* %map, i32 %122) #4
  %123 = getelementptr inbounds %struct.rtx_def* %call363, i64 0, i32 1, i64 7, i32 0
  %call521.c = ptrtoint %struct.rtx_def* %call521 to i64
  store i64 %call521.c, i64* %123, align 8, !tbaa !9
  br label %if.end525

if.end525:                                        ; preds = %if.else514, %if.then510
  %124 = phi %struct.rtx_def* [ %call521, %if.else514 ], [ %label.0, %if.then510 ]
  %arrayidx530 = getelementptr inbounds %struct.rtx_def* %124, i64 0, i32 1, i64 3
  %rtint531 = bitcast %union.rtunion_def* %arrayidx530 to i32*
  %125 = load i32* %rtint531, align 4, !tbaa !10
  %inc532 = add nsw i32 %125, 1
  store i32 %inc532, i32* %rtint531, align 4, !tbaa !10
  br label %if.end582

if.else533:                                       ; preds = %if.end427
  %arrayidx535 = getelementptr inbounds %struct.rtx_def* %call363, i64 0, i32 1, i64 3
  %rtx536 = bitcast %union.rtunion_def* %arrayidx535 to %struct.rtx_def**
  %126 = load %struct.rtx_def** %rtx536, align 8, !tbaa !9
  %127 = getelementptr inbounds %struct.rtx_def* %126, i64 0, i32 0
  %bf.load537 = load i32* %127, align 8
  %128 = and i32 %bf.load537, 65534
  %switch = icmp eq i32 %128, 44
  br i1 %switch, label %if.then549, label %if.end582

if.then549:                                       ; preds = %if.else533
  %bf.clear538 = and i32 %bf.load537, 65535
  %cmp555 = icmp eq i32 %bf.clear538, 45
  %idxprom557 = zext i1 %cmp555 to i64
  %arrayidx559 = getelementptr inbounds %struct.rtx_def* %126, i64 0, i32 1, i64 %idxprom557
  %rtvec = bitcast %union.rtunion_def* %arrayidx559 to %struct.rtvec_def**
  %129 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !9
  %num_elem = getelementptr inbounds %struct.rtvec_def* %129, i64 0, i32 0
  %130 = load i32* %num_elem, align 4, !tbaa !24
  %cmp5621055 = icmp sgt i32 %130, 0
  br i1 %cmp5621055, label %for.body564, label %if.end582

for.body564:                                      ; preds = %if.then549, %for.body564
  %indvars.iv1063 = phi i64 [ %indvars.iv.next1064, %for.body564 ], [ 0, %if.then549 ]
  %arrayidx570 = getelementptr inbounds %struct.rtvec_def* %129, i64 0, i32 1, i64 %indvars.iv1063
  %131 = load %struct.rtx_def** %arrayidx570, align 8, !tbaa !9
  %arrayidx572 = getelementptr inbounds %struct.rtx_def* %131, i64 0, i32 1, i64 0
  %rtx573 = bitcast %union.rtunion_def* %arrayidx572 to %struct.rtx_def**
  %132 = load %struct.rtx_def** %rtx573, align 8, !tbaa !9
  %arrayidx575 = getelementptr inbounds %struct.rtx_def* %132, i64 0, i32 1, i64 3
  %rtint576 = bitcast %union.rtunion_def* %arrayidx575 to i32*
  %133 = load i32* %rtint576, align 4, !tbaa !10
  %inc577 = add nsw i32 %133, 1
  store i32 %inc577, i32* %rtint576, align 4, !tbaa !10
  %indvars.iv.next1064 = add nuw nsw i64 %indvars.iv1063, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next1064 to i32
  %exitcond1065 = icmp eq i32 %lftr.wideiv, %130
  br i1 %exitcond1065, label %if.end582, label %for.body564

if.end582:                                        ; preds = %for.body564, %if.then549, %if.else533, %if.end525
  %call583 = tail call i32 @any_condjump_p(%struct.rtx_def* %6) #4
  %tobool584 = icmp eq i32 %call583, 0
  br i1 %tobool584, label %sw.epilog, label %land.lhs.true585

land.lhs.true585:                                 ; preds = %if.end582
  %call586 = tail call i32 @onlyjump_p(%struct.rtx_def* %6) #4
  %tobool587 = icmp eq i32 %call586, 0
  br i1 %tobool587, label %sw.epilog, label %land.lhs.true588

land.lhs.true588:                                 ; preds = %land.lhs.true585
  %134 = load %struct.rtx_def** %last_pc_value, align 8, !tbaa !81
  %tobool589 = icmp eq %struct.rtx_def* %134, null
  br i1 %tobool589, label %sw.epilog, label %if.then590

if.then590:                                       ; preds = %land.lhs.true588
  %135 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 8, !tbaa !9
  %cmp592 = icmp eq %struct.rtx_def* %134, %135
  br i1 %cmp592, label %if.then594, label %if.else596

if.then594:                                       ; preds = %if.then590
  %call595 = tail call %struct.rtx_def* @delete_insn(%struct.rtx_def* %call363) #4
  br label %sw.epilog

if.else596:                                       ; preds = %if.then590
  %call597 = tail call %struct.rtx_def* @emit_barrier() #4
  br label %sw.epilog

sw.bb600:                                         ; preds = %do.body
  %arrayidx602 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1, i64 3
  %rtx603 = bitcast %union.rtunion_def* %arrayidx602 to %struct.rtx_def**
  %136 = load %struct.rtx_def** %rtx603, align 8, !tbaa !9
  %call604 = tail call %struct.rtx_def* @copy_rtx_and_substitute(%struct.rtx_def* %136, %struct.inline_remap* %map, i32 0) #4
  %call605 = tail call %struct.rtx_def* @emit_call_insn(%struct.rtx_def* %call604) #4
  %arrayidx607 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1, i64 6
  %rtx608 = bitcast %union.rtunion_def* %arrayidx607 to %struct.rtx_def**
  %137 = load %struct.rtx_def** %rtx608, align 8, !tbaa !9
  %call609 = tail call fastcc %struct.rtx_def* @initial_reg_note_copy(%struct.rtx_def* %137, %struct.inline_remap* %map)
  %138 = getelementptr inbounds %struct.rtx_def* %call605, i64 0, i32 1, i64 6, i32 0
  %call609.c = ptrtoint %struct.rtx_def* %call609 to i64
  store i64 %call609.c, i64* %138, align 8, !tbaa !9
  %bf.load613 = load i32* %7, align 8
  %bf.clear615 = and i32 %bf.load613, 16777216
  %139 = getelementptr inbounds %struct.rtx_def* %call605, i64 0, i32 0
  %bf.load616 = load i32* %139, align 8
  %bf.clear617 = and i32 %bf.load616, -16777217
  %bf.set = or i32 %bf.clear617, %bf.clear615
  store i32 %bf.set, i32* %139, align 8
  %arrayidx619 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1, i64 7
  %rtx620 = bitcast %union.rtunion_def* %arrayidx619 to %struct.rtx_def**
  %140 = load %struct.rtx_def** %rtx620, align 8, !tbaa !9
  %call621 = tail call %struct.rtx_def* @copy_rtx_and_substitute(%struct.rtx_def* %140, %struct.inline_remap* %map, i32 0) #4
  %141 = getelementptr inbounds %struct.rtx_def* %call605, i64 0, i32 1, i64 7, i32 0
  %call621.c = ptrtoint %struct.rtx_def* %call621 to i64
  store i64 %call621.c, i64* %141, align 8, !tbaa !9
  tail call void @try_constants(%struct.rtx_def* %call605, %struct.inline_remap* %map) #4
  %142 = load %struct.varray_head_tag** %const_equiv_varray, align 8, !tbaa !33
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %sw.bb600
  %index = phi i64 [ 0, %sw.bb600 ], [ %index.next, %vector.body ]
  %broadcast.splatinsert = insertelement <4 x i64> undef, i64 %index, i32 0
  %broadcast.splat = shufflevector <4 x i64> %broadcast.splatinsert, <4 x i64> undef, <4 x i32> zeroinitializer
  %induction = add <4 x i64> %broadcast.splat, <i64 0, i64 1, i64 2, i64 3>
  %143 = getelementptr inbounds %struct.varray_head_tag* %142, i64 0, i32 4, i32 0, i64 %index, i32 0
  %144 = extractelement <4 x i64> %induction, i32 1
  %145 = getelementptr inbounds %struct.varray_head_tag* %142, i64 0, i32 4, i32 0, i64 %144, i32 0
  %146 = extractelement <4 x i64> %induction, i32 2
  %147 = getelementptr inbounds %struct.varray_head_tag* %142, i64 0, i32 4, i32 0, i64 %146, i32 0
  %148 = extractelement <4 x i64> %induction, i32 3
  %149 = getelementptr inbounds %struct.varray_head_tag* %142, i64 0, i32 4, i32 0, i64 %148, i32 0
  store %struct.rtx_def* null, %struct.rtx_def** %143, align 8, !tbaa !82
  store %struct.rtx_def* null, %struct.rtx_def** %145, align 8, !tbaa !82
  store %struct.rtx_def* null, %struct.rtx_def** %147, align 8, !tbaa !82
  store %struct.rtx_def* null, %struct.rtx_def** %149, align 8, !tbaa !82
  %index.next = add i64 %index, 4
  %150 = icmp eq i64 %index.next, 52
  br i1 %150, label %for.body628, label %vector.body, !llvm.loop !83

for.body628:                                      ; preds = %vector.body, %for.body628
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body628 ], [ 52, %vector.body ]
  %rtx634 = getelementptr inbounds %struct.varray_head_tag* %142, i64 0, i32 4, i32 0, i64 %indvars.iv, i32 0
  store %struct.rtx_def* null, %struct.rtx_def** %rtx634, align 8, !tbaa !82
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 53
  br i1 %exitcond, label %sw.epilog, label %for.body628, !llvm.loop !86

sw.bb638:                                         ; preds = %do.body
  %cmp639 = icmp eq %struct.rtx_def* %6, %start_label
  br i1 %cmp639, label %sw.epilog, label %if.then641

if.then641:                                       ; preds = %sw.bb638
  %arrayidx643 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1, i64 5
  %rtint644 = bitcast %union.rtunion_def* %arrayidx643 to i32*
  %151 = load i32* %rtint644, align 4, !tbaa !10
  %call645 = tail call %struct.rtx_def* @get_label_from_map(%struct.inline_remap* %map, i32 %151) #4
  %call646 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call645) #4
  %152 = load i32* %const_age, align 4, !tbaa !43
  %inc648 = add i32 %152, 1
  store i32 %inc648, i32* %const_age, align 4, !tbaa !43
  br label %sw.epilog

sw.bb650:                                         ; preds = %do.body
  %call651 = tail call %struct.rtx_def* @emit_barrier() #4
  br label %sw.epilog

sw.bb652:                                         ; preds = %do.body
  %arrayidx654 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1, i64 4
  %rtint655 = bitcast %union.rtunion_def* %arrayidx654 to i32*
  %153 = load i32* %rtint655, align 4, !tbaa !10
  switch i32 %153, label %if.then687 [
    i32 -99, label %sw.epilog
    i32 -88, label %sw.epilog
    i32 -80, label %sw.epilog
    i32 -93, label %lor.lhs.false682
    i32 -94, label %lor.lhs.false682
  ]

lor.lhs.false682:                                 ; preds = %sw.bb652, %sw.bb652
  br i1 %or.cond, label %if.then687, label %sw.epilog

if.then687:                                       ; preds = %sw.bb652, %lor.lhs.false682
  %arrayidx689 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1, i64 3
  %rtstr = bitcast %union.rtunion_def* %arrayidx689 to i8**
  %154 = load i8** %rtstr, align 8, !tbaa !9
  %call693 = tail call %struct.rtx_def* @emit_note(i8* %154, i32 %153) #4
  br label %sw.epilog

sw.default:                                       ; preds = %do.body
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str13, i64 0, i64 0), i32 2280, i8* getelementptr inbounds ([15 x i8]* @__FUNCTION__.copy_loop_body, i64 0, i64 0)) #5
  unreachable

sw.epilog:                                        ; preds = %for.body628, %lor.lhs.false682, %sw.bb652, %sw.bb652, %sw.bb652, %land.lhs.true588, %land.lhs.true585, %if.end582, %sw.bb638, %if.then687, %if.then641, %if.else596, %if.then594, %if.end323, %if.then349, %land.lhs.true343, %if.then332, %sw.bb650
  %copy.2 = phi %struct.rtx_def* [ %call693, %if.then687 ], [ %call651, %sw.bb650 ], [ %call646, %if.then641 ], [ %copy.0, %sw.bb638 ], [ null, %if.then594 ], [ %call363, %if.else596 ], [ %call363, %land.lhs.true588 ], [ %call363, %land.lhs.true585 ], [ %call363, %if.end582 ], [ %copy.1, %if.then349 ], [ %copy.1, %land.lhs.true343 ], [ %copy.1, %if.then332 ], [ %copy.1, %if.end323 ], [ null, %sw.bb652 ], [ null, %sw.bb652 ], [ null, %sw.bb652 ], [ null, %lor.lhs.false682 ], [ %call605, %for.body628 ]
  %arrayidx697 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1, i64 0
  %rtint698 = bitcast %union.rtunion_def* %arrayidx697 to i32*
  %155 = load i32* %rtint698, align 4, !tbaa !10
  %idxprom699 = sext i32 %155 to i64
  %156 = load %struct.rtx_def*** %insn_map, align 8, !tbaa !26
  %arrayidx700 = getelementptr inbounds %struct.rtx_def** %156, i64 %idxprom699
  store %struct.rtx_def* %copy.2, %struct.rtx_def** %arrayidx700, align 8, !tbaa !9
  %cmp701 = icmp eq %struct.rtx_def* %6, %copy_end
  br i1 %cmp701, label %do.body703, label %do.body

do.body703:                                       ; preds = %sw.epilog, %do.cond740
  %insn.1 = phi %struct.rtx_def* [ %157, %do.cond740 ], [ %copy_start, %sw.epilog ]
  %arrayidx705 = getelementptr inbounds %struct.rtx_def* %insn.1, i64 0, i32 1, i64 2
  %rtx706 = bitcast %union.rtunion_def* %arrayidx705 to %struct.rtx_def**
  %157 = load %struct.rtx_def** %rtx706, align 8, !tbaa !9
  %158 = getelementptr inbounds %struct.rtx_def* %157, i64 0, i32 0
  %bf.load707 = load i32* %158, align 8
  %bf.clear708 = and i32 %bf.load707, 65535
  %bf.clear708.off = add i32 %bf.clear708, -32
  %switch1028 = icmp ult i32 %bf.clear708.off, 3
  br i1 %switch1028, label %land.lhs.true721, label %do.cond740

land.lhs.true721:                                 ; preds = %do.body703
  %arrayidx723 = getelementptr inbounds %struct.rtx_def* %157, i64 0, i32 1, i64 0
  %rtint724 = bitcast %union.rtunion_def* %arrayidx723 to i32*
  %159 = load i32* %rtint724, align 4, !tbaa !10
  %idxprom725 = sext i32 %159 to i64
  %160 = load %struct.rtx_def*** %insn_map, align 8, !tbaa !26
  %arrayidx727 = getelementptr inbounds %struct.rtx_def** %160, i64 %idxprom725
  %161 = load %struct.rtx_def** %arrayidx727, align 8, !tbaa !9
  %tobool728 = icmp eq %struct.rtx_def* %161, null
  br i1 %tobool728, label %do.cond740, label %if.then729

if.then729:                                       ; preds = %land.lhs.true721
  %arrayidx737 = getelementptr inbounds %struct.rtx_def* %161, i64 0, i32 1, i64 6
  %rtx738 = bitcast %union.rtunion_def* %arrayidx737 to %struct.rtx_def**
  %162 = load %struct.rtx_def** %rtx738, align 8, !tbaa !9
  %tobool3839.i = icmp eq %struct.rtx_def* %162, null
  br i1 %tobool3839.i, label %do.cond740, label %while.body.lr.ph.i

while.body.lr.ph.i:                               ; preds = %if.then729, %if.end24.i
  %163 = phi %struct.rtx_def* [ %172, %if.end24.i ], [ %162, %if.then729 ]
  %notesp.addr.0.ph40.i = phi %struct.rtx_def** [ %rtx27.i, %if.end24.i ], [ %rtx738, %if.then729 ]
  br label %while.body.i

while.body.i:                                     ; preds = %if.then4.i, %while.body.lr.ph.i
  %164 = phi %struct.rtx_def* [ %163, %while.body.lr.ph.i ], [ %166, %if.then4.i ]
  %165 = getelementptr inbounds %struct.rtx_def* %164, i64 0, i32 0
  %bf.load.i1037 = load i32* %165, align 8
  %bf.clear.i1038 = and i32 %bf.load.i1037, 65535
  %cmp.i1039 = icmp eq i32 %bf.clear.i1038, 4
  br i1 %cmp.i1039, label %if.then.i1041, label %if.end24.i

if.then.i1041:                                    ; preds = %while.body.i
  %bf.lshr.i1040 = lshr i32 %bf.load.i1037, 16
  %bf.clear2.i = and i32 %bf.lshr.i1040, 255
  %cmp3.i = icmp eq i32 %bf.clear2.i, 5
  br i1 %cmp3.i, label %if.then4.i, label %if.else.i

if.then4.i:                                       ; preds = %if.then.i1041
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %164, i64 0, i32 1, i64 1
  %rtx.i = bitcast %union.rtunion_def* %arrayidx.i to %struct.rtx_def**
  %166 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !9
  store %struct.rtx_def* %166, %struct.rtx_def** %notesp.addr.0.ph40.i, align 8, !tbaa !9
  %tobool.i = icmp eq %struct.rtx_def* %166, null
  br i1 %tobool.i, label %do.cond740, label %while.body.i

if.else.i:                                        ; preds = %if.then.i1041
  %fld.le.i = getelementptr inbounds %struct.rtx_def* %164, i64 0, i32 1
  %rtx7.i = bitcast [1 x %union.rtunion_def]* %fld.le.i to %struct.rtx_def**
  %167 = load %struct.rtx_def** %rtx7.i, align 8, !tbaa !9
  %arrayidx9.i = getelementptr inbounds %struct.rtx_def* %167, i64 0, i32 1, i64 0
  %rtint.i = bitcast %union.rtunion_def* %arrayidx9.i to i32*
  %168 = load i32* %rtint.i, align 4, !tbaa !10
  %idxprom.i = sext i32 %168 to i64
  %169 = load %struct.rtx_def*** %insn_map, align 8, !tbaa !26
  %arrayidx10.i = getelementptr inbounds %struct.rtx_def** %169, i64 %idxprom.i
  %170 = load %struct.rtx_def** %arrayidx10.i, align 8, !tbaa !9
  %tobool11.i = icmp eq %struct.rtx_def* %170, null
  br i1 %tobool11.i, label %if.then12.i, label %if.else18.i

if.then12.i:                                      ; preds = %if.else.i
  %cmp16.i = icmp eq i32 %bf.clear2.i, 13
  br i1 %cmp16.i, label %if.end24.i, label %if.then17.i

if.then17.i:                                      ; preds = %if.then12.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str13, i64 0, i64 0), i32 1762, i8* getelementptr inbounds ([20 x i8]* @__FUNCTION__.final_reg_note_copy, i64 0, i64 0)) #5
  unreachable

if.else18.i:                                      ; preds = %if.else.i
  %171 = getelementptr inbounds [1 x %union.rtunion_def]* %fld.le.i, i64 0, i64 0, i32 0
  %.c.i = ptrtoint %struct.rtx_def* %170 to i64
  store i64 %.c.i, i64* %171, align 8, !tbaa !9
  br label %if.end24.i

if.end24.i:                                       ; preds = %while.body.i, %if.else18.i, %if.then12.i
  %arrayidx26.i = getelementptr inbounds %struct.rtx_def* %164, i64 0, i32 1, i64 1
  %rtx27.i = bitcast %union.rtunion_def* %arrayidx26.i to %struct.rtx_def**
  %172 = load %struct.rtx_def** %rtx27.i, align 8, !tbaa !9
  %tobool38.i = icmp eq %struct.rtx_def* %172, null
  br i1 %tobool38.i, label %do.cond740, label %while.body.lr.ph.i

do.cond740:                                       ; preds = %if.end24.i, %if.then4.i, %if.then729, %do.body703, %land.lhs.true721
  %cmp741 = icmp eq %struct.rtx_def* %157, %copy_end
  br i1 %cmp741, label %do.end743, label %do.body703

do.end743:                                        ; preds = %do.cond740
  %cmp7471052 = icmp eq %struct.rtx_def* %copy_notes_from, %loop_end
  %or.cond1067 = or i1 %tobool, %cmp7471052
  br i1 %or.cond1067, label %if.end786, label %for.body749

for.body749:                                      ; preds = %do.end743, %for.inc781
  %insn.21053 = phi %struct.rtx_def* [ %176, %for.inc781 ], [ %copy_notes_from, %do.end743 ]
  %173 = getelementptr inbounds %struct.rtx_def* %insn.21053, i64 0, i32 0
  %bf.load750 = load i32* %173, align 8
  %bf.clear751 = and i32 %bf.load750, 65535
  %cmp752 = icmp eq i32 %bf.clear751, 37
  br i1 %cmp752, label %land.lhs.true754, label %for.inc781

land.lhs.true754:                                 ; preds = %for.body749
  %arrayidx756 = getelementptr inbounds %struct.rtx_def* %insn.21053, i64 0, i32 1, i64 4
  %rtint757 = bitcast %union.rtunion_def* %arrayidx756 to i32*
  %174 = load i32* %rtint757, align 4, !tbaa !10
  switch i32 %174, label %if.then772 [
    i32 -99, label %for.inc781
    i32 -80, label %for.inc781
    i32 -93, label %for.inc781
  ]

if.then772:                                       ; preds = %land.lhs.true754
  %arrayidx774 = getelementptr inbounds %struct.rtx_def* %insn.21053, i64 0, i32 1, i64 3
  %rtstr775 = bitcast %union.rtunion_def* %arrayidx774 to i8**
  %175 = load i8** %rtstr775, align 8, !tbaa !9
  %call779 = tail call %struct.rtx_def* @emit_note(i8* %175, i32 %174) #4
  br label %for.inc781

for.inc781:                                       ; preds = %land.lhs.true754, %land.lhs.true754, %land.lhs.true754, %for.body749, %if.then772
  %arrayidx783 = getelementptr inbounds %struct.rtx_def* %insn.21053, i64 0, i32 1, i64 2
  %rtx784 = bitcast %union.rtunion_def* %arrayidx783 to %struct.rtx_def**
  %176 = load %struct.rtx_def** %rtx784, align 8, !tbaa !9
  %cmp747 = icmp eq %struct.rtx_def* %176, %loop_end
  br i1 %cmp747, label %if.end786, label %for.body749

if.end786:                                        ; preds = %for.inc781, %do.end743
  %tobool787 = icmp eq %struct.rtx_def* %final_label.0, null
  br i1 %tobool787, label %if.end796, label %land.lhs.true788

land.lhs.true788:                                 ; preds = %if.end786
  %arrayidx790 = getelementptr inbounds %struct.rtx_def* %final_label.0, i64 0, i32 1, i64 3
  %rtint791 = bitcast %union.rtunion_def* %arrayidx790 to i32*
  %177 = load i32* %rtint791, align 4, !tbaa !10
  %cmp792 = icmp sgt i32 %177, 0
  br i1 %cmp792, label %if.then794, label %if.end796

if.then794:                                       ; preds = %land.lhs.true788
  %call795 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %final_label.0) #4
  br label %if.end796

if.end796:                                        ; preds = %if.end786, %if.then794, %land.lhs.true788
  %call797 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  %call798 = tail call %struct.rtx_def* @loop_insn_emit_before(%struct.loop* %loop, %struct.basic_block_def* null, %struct.rtx_def* %insert_before, %struct.rtx_def* %call797) #4
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) #1

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @remap_split_bivs(%struct.loop* readonly %loop, %struct.rtx_def* %x) #0 {
entry:
  %aux = getelementptr inbounds %struct.loop* %loop, i64 0, i32 22
  %0 = load i8** %aux, align 8, !tbaa !1
  %ivs1 = getelementptr inbounds i8* %0, i64 208
  %cmp = icmp eq %struct.rtx_def* %x, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %1 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 0
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %sw.epilog [
    i32 62, label %return
    i32 59, label %return
    i32 69, label %return
    i32 54, label %return
    i32 55, label %return
    i32 58, label %return
    i32 68, label %return
    i32 67, label %return
    i32 61, label %sw.bb2
  ]

sw.bb2:                                           ; preds = %if.end
  %arrayidx = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %2 = load i32* %rtuint, align 4, !tbaa !10
  %n_regs = getelementptr inbounds i8* %0, i64 216
  %3 = bitcast i8* %n_regs to i32*
  %4 = load i32* %3, align 4, !tbaa !76
  %cmp3 = icmp ult i32 %2, %4
  br i1 %cmp3, label %land.lhs.true, label %sw.epilog

land.lhs.true:                                    ; preds = %sw.bb2
  %idxprom = zext i32 %2 to i64
  %regs = bitcast i8* %ivs1 to %struct.iv**
  %5 = load %struct.iv** %regs, align 8, !tbaa !67
  %type = getelementptr inbounds %struct.iv* %5, i64 %idxprom, i32 0
  %6 = load i32* %type, align 4, !tbaa !77
  %cmp8 = icmp eq i32 %6, 1
  br i1 %cmp8, label %if.then9, label %sw.epilog

if.then9:                                         ; preds = %land.lhs.true
  %class = getelementptr inbounds %struct.iv* %5, i64 %idxprom, i32 1, i32 0
  %7 = load %struct.iv_class** %class, align 8, !tbaa !9
  %biv = getelementptr inbounds %struct.iv_class* %7, i64 0, i32 2
  %8 = load %struct.induction** %biv, align 8, !tbaa !53
  %src_reg = getelementptr inbounds %struct.induction* %8, i64 0, i32 2
  %9 = load %struct.rtx_def** %src_reg, align 8, !tbaa !58
  br label %return

sw.epilog:                                        ; preds = %if.end, %sw.bb2, %land.lhs.true
  %idxprom1796 = zext i32 %bf.clear to i64
  %arrayidx18 = getelementptr inbounds [153 x i8*]* @rtx_format, i64 0, i64 %idxprom1796
  %10 = load i8** %arrayidx18, align 8, !tbaa !9
  %arrayidx20 = getelementptr inbounds [153 x i8]* @rtx_length, i64 0, i64 %idxprom1796
  %11 = load i8* %arrayidx20, align 1, !tbaa !23
  %cmp21101 = icmp eq i8 %11, 0
  br i1 %cmp21101, label %return, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %sw.epilog
  %12 = zext i8 %11 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.cond.backedge
  %indvars.iv103 = phi i64 [ %12, %for.body.lr.ph ], [ %indvars.iv.next104, %for.cond.backedge ]
  %indvars.iv.next104 = add nsw i64 %indvars.iv103, -1
  %arrayidx24 = getelementptr inbounds i8* %10, i64 %indvars.iv.next104
  %13 = load i8* %arrayidx24, align 1, !tbaa !23
  switch i8 %13, label %for.cond.backedge [
    i8 101, label %if.then28
    i8 69, label %for.cond42.preheader
  ]

for.cond.backedge:                                ; preds = %for.body48, %for.cond42.preheader, %for.body, %if.then28
  %14 = trunc i64 %indvars.iv.next104 to i32
  %cmp21 = icmp sgt i32 %14, 0
  br i1 %cmp21, label %for.body, label %return

for.cond42.preheader:                             ; preds = %for.body
  %arrayidx45 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 %indvars.iv.next104
  %rtvec = bitcast %union.rtunion_def* %arrayidx45 to %struct.rtvec_def**
  %15 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !9
  %num_elem97 = getelementptr inbounds %struct.rtvec_def* %15, i64 0, i32 0
  %16 = load i32* %num_elem97, align 4, !tbaa !24
  %cmp4698 = icmp sgt i32 %16, 0
  br i1 %cmp4698, label %for.body48, label %for.cond.backedge

if.then28:                                        ; preds = %for.body
  %arrayidx31 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 %indvars.iv.next104
  %rtx = bitcast %union.rtunion_def* %arrayidx31 to %struct.rtx_def**
  %17 = load %struct.rtx_def** %rtx, align 8, !tbaa !9
  %call = tail call fastcc %struct.rtx_def* @remap_split_bivs(%struct.loop* %loop, %struct.rtx_def* %17)
  %18 = getelementptr inbounds %union.rtunion_def* %arrayidx31, i64 0, i32 0
  %call.c = ptrtoint %struct.rtx_def* %call to i64
  store i64 %call.c, i64* %18, align 8, !tbaa !9
  br label %for.cond.backedge

for.body48:                                       ; preds = %for.cond42.preheader, %for.body48
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body48 ], [ 0, %for.cond42.preheader ]
  %19 = phi %struct.rtvec_def* [ %22, %for.body48 ], [ %15, %for.cond42.preheader ]
  %arrayidx54 = getelementptr inbounds %struct.rtvec_def* %19, i64 0, i32 1, i64 %indvars.iv
  %20 = load %struct.rtx_def** %arrayidx54, align 8, !tbaa !9
  %call55 = tail call fastcc %struct.rtx_def* @remap_split_bivs(%struct.loop* %loop, %struct.rtx_def* %20)
  %21 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !9
  %arrayidx62 = getelementptr inbounds %struct.rtvec_def* %21, i64 0, i32 1, i64 %indvars.iv
  store %struct.rtx_def* %call55, %struct.rtx_def** %arrayidx62, align 8, !tbaa !9
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %22 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !9
  %num_elem = getelementptr inbounds %struct.rtvec_def* %22, i64 0, i32 0
  %23 = load i32* %num_elem, align 4, !tbaa !24
  %24 = trunc i64 %indvars.iv.next to i32
  %cmp46 = icmp slt i32 %24, %23
  br i1 %cmp46, label %for.body48, label %for.cond.backedge

return:                                           ; preds = %for.cond.backedge, %sw.epilog, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %entry, %if.then9
  %retval.0 = phi %struct.rtx_def* [ %9, %if.then9 ], [ null, %entry ], [ %x, %if.end ], [ %x, %if.end ], [ %x, %if.end ], [ %x, %if.end ], [ %x, %if.end ], [ %x, %if.end ], [ %x, %if.end ], [ %x, %if.end ], [ %x, %sw.epilog ], [ %x, %for.cond.backedge ]
  ret %struct.rtx_def* %retval.0
}

declare %struct.rtx_def* @get_label_from_map(%struct.inline_remap*, i32) #2

declare %struct.rtx_def* @gen_rtx_fmt_u00(i32, i32, %struct.rtx_def*) #2

declare i32 @exact_log2_wide(i64) #2

declare i32 @loop_invariant_p(%struct.loop*, %struct.rtx_def*) #2

; Function Attrs: nounwind uwtable
define void @emit_unrolled_add(%struct.rtx_def* %dest_reg, %struct.rtx_def* %src_reg, %struct.rtx_def* %increment) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %dest_reg, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %call = tail call %struct.rtx_def* @expand_simple_binop(i32 %bf.clear, i32 75, %struct.rtx_def* %src_reg, %struct.rtx_def* %increment, %struct.rtx_def* %dest_reg, i32 0, i32 3) #4
  %cmp = icmp eq %struct.rtx_def* %call, %dest_reg
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %call1 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %dest_reg, %struct.rtx_def* %call) #4
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  ret void
}

declare %struct.rtx_def* @emit_move_insn(%struct.rtx_def*, %struct.rtx_def*) #2

; Function Attrs: nounwind uwtable
define i32 @back_branch_in_range_p(%struct.loop* nocapture readonly %loop, %struct.rtx_def* readonly %insn) #0 {
entry:
  %start = getelementptr inbounds %struct.loop* %loop, i64 0, i32 26
  %0 = load %struct.rtx_def** %start, align 8, !tbaa !7
  %end = getelementptr inbounds %struct.loop* %loop, i64 0, i32 27
  %1 = load %struct.rtx_def** %end, align 8, !tbaa !8
  %call = tail call %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def* %1) #4
  %2 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 0
  %bf.load = load i32* %2, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 35
  br i1 %cmp, label %if.then, label %while.cond.preheader

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 1
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %3 = load %struct.rtx_def** %rtx, align 8, !tbaa !9
  br label %while.cond.preheader

while.cond.preheader:                             ; preds = %if.then, %entry
  %loop_end.0.ph = phi %struct.rtx_def* [ %call, %entry ], [ %3, %if.then ]
  %4 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 0
  %bf.load260 = load i32* %4, align 8
  %bf.clear361 = and i32 %bf.load260, 134217728
  %tobool62 = icmp eq i32 %bf.clear361, 0
  br i1 %tobool62, label %while.end, label %while.body

while.body:                                       ; preds = %while.cond.preheader, %while.body
  %insn.addr.063 = phi %struct.rtx_def* [ %5, %while.body ], [ %insn, %while.cond.preheader ]
  %arrayidx5 = getelementptr inbounds %struct.rtx_def* %insn.addr.063, i64 0, i32 1, i64 2
  %rtx6 = bitcast %union.rtunion_def* %arrayidx5 to %struct.rtx_def**
  %5 = load %struct.rtx_def** %rtx6, align 8, !tbaa !9
  %6 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 0
  %bf.load2 = load i32* %6, align 8
  %bf.clear3 = and i32 %bf.load2, 134217728
  %tobool = icmp eq i32 %bf.clear3, 0
  br i1 %tobool, label %while.end, label %while.body

while.end:                                        ; preds = %while.body, %while.cond.preheader
  %insn.addr.0.lcssa = phi %struct.rtx_def* [ %insn, %while.cond.preheader ], [ %5, %while.body ]
  %cmp7 = icmp eq %struct.rtx_def* %insn.addr.0.lcssa, %loop_end.0.ph
  %cmp8 = icmp eq %struct.rtx_def* %insn.addr.0.lcssa, %1
  %or.cond = or i1 %cmp7, %cmp8
  br i1 %or.cond, label %return, label %for.cond.preheader

for.cond.preheader:                               ; preds = %while.end
  %p.0.in.in55 = getelementptr inbounds %struct.rtx_def* %insn.addr.0.lcssa, i64 0, i32 1, i64 2
  %p.0.in56 = bitcast %union.rtunion_def* %p.0.in.in55 to %struct.rtx_def**
  %p.057 = load %struct.rtx_def** %p.0.in56, align 8
  %cmp1458 = icmp eq %struct.rtx_def* %p.057, %loop_end.0.ph
  br i1 %cmp1458, label %return, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %cmp2353 = icmp eq %struct.rtx_def* %0, %insn.addr.0.lcssa
  br i1 %cmp2353, label %for.cond.backedge.us, label %for.body

for.cond.backedge.us:                             ; preds = %for.body.lr.ph, %for.cond.backedge.us
  %p.059.us = phi %struct.rtx_def* [ %p.0.us, %for.cond.backedge.us ], [ %p.057, %for.body.lr.ph ]
  %p.0.in.in.us = getelementptr inbounds %struct.rtx_def* %p.059.us, i64 0, i32 1, i64 2
  %p.0.in.us = bitcast %union.rtunion_def* %p.0.in.in.us to %struct.rtx_def**
  %p.0.us = load %struct.rtx_def** %p.0.in.us, align 8
  %cmp14.us = icmp eq %struct.rtx_def* %p.0.us, %loop_end.0.ph
  br i1 %cmp14.us, label %return, label %for.cond.backedge.us

for.body:                                         ; preds = %for.body.lr.ph, %for.cond.backedge
  %p.059 = phi %struct.rtx_def* [ %p.0, %for.cond.backedge ], [ %p.057, %for.body.lr.ph ]
  %7 = getelementptr inbounds %struct.rtx_def* %p.059, i64 0, i32 0
  %bf.load15 = load i32* %7, align 8
  %bf.clear16 = and i32 %bf.load15, 65535
  %cmp17 = icmp eq i32 %bf.clear16, 33
  br i1 %cmp17, label %for.body24.lr.ph, label %for.cond.backedge

for.cond.backedge:                                ; preds = %for.inc, %for.body
  %p.0.in.in = getelementptr inbounds %struct.rtx_def* %p.059, i64 0, i32 1, i64 2
  %p.0.in = bitcast %union.rtunion_def* %p.0.in.in to %struct.rtx_def**
  %p.0 = load %struct.rtx_def** %p.0.in, align 8
  %cmp14 = icmp eq %struct.rtx_def* %p.0, %loop_end.0.ph
  br i1 %cmp14, label %return, label %for.body

for.body24.lr.ph:                                 ; preds = %for.body
  %arrayidx20 = getelementptr inbounds %struct.rtx_def* %p.059, i64 0, i32 1, i64 7
  %rtx21 = bitcast %union.rtunion_def* %arrayidx20 to %struct.rtx_def**
  %8 = load %struct.rtx_def** %rtx21, align 8, !tbaa !9
  br label %for.body24

for.body24:                                       ; preds = %for.body24.lr.ph, %for.inc
  %q.054 = phi %struct.rtx_def* [ %0, %for.body24.lr.ph ], [ %9, %for.inc ]
  %cmp25 = icmp eq %struct.rtx_def* %q.054, %8
  br i1 %cmp25, label %return, label %for.inc

for.inc:                                          ; preds = %for.body24
  %arrayidx29 = getelementptr inbounds %struct.rtx_def* %q.054, i64 0, i32 1, i64 2
  %rtx30 = bitcast %union.rtunion_def* %arrayidx29 to %struct.rtx_def**
  %9 = load %struct.rtx_def** %rtx30, align 8, !tbaa !9
  %cmp23 = icmp eq %struct.rtx_def* %9, %insn.addr.0.lcssa
  br i1 %cmp23, label %for.cond.backedge, label %for.body24

return:                                           ; preds = %for.cond.backedge, %for.body24, %for.cond.backedge.us, %for.cond.preheader, %while.end
  %retval.0 = phi i32 [ 0, %while.end ], [ 0, %for.cond.preheader ], [ 0, %for.cond.backedge.us ], [ 1, %for.body24 ], [ 0, %for.cond.backedge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @biv_total_increment(%struct.iv_class* nocapture readonly %bl) #0 {
entry:
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !9
  %biv = getelementptr inbounds %struct.iv_class* %bl, i64 0, i32 2
  %v.015 = load %struct.induction** %biv, align 8
  %tobool16 = icmp eq %struct.induction* %v.015, null
  br i1 %tobool16, label %return, label %for.body

for.body:                                         ; preds = %entry, %if.then
  %v.018 = phi %struct.induction* [ %v.0, %if.then ], [ %v.015, %entry ]
  %result.017 = phi %struct.rtx_def* [ %call, %if.then ], [ %0, %entry ]
  %always_computable = getelementptr inbounds %struct.induction* %v.018, i64 0, i32 13
  %bf.load = load i16* %always_computable, align 4
  %bf.clear = and i16 %bf.load, 8
  %tobool1 = icmp eq i16 %bf.clear, 0
  br i1 %tobool1, label %return, label %land.lhs.true

land.lhs.true:                                    ; preds = %for.body
  %mult_val = getelementptr inbounds %struct.induction* %v.018, i64 0, i32 8
  %1 = load %struct.rtx_def** %mult_val, align 8, !tbaa !45
  %2 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !9
  %cmp = icmp eq %struct.rtx_def* %1, %2
  %bf.clear5 = and i16 %bf.load, 32
  %tobool7 = icmp eq i16 %bf.clear5, 0
  %or.cond = and i1 %cmp, %tobool7
  br i1 %or.cond, label %if.then, label %return

if.then:                                          ; preds = %land.lhs.true
  %add_val = getelementptr inbounds %struct.induction* %v.018, i64 0, i32 9
  %3 = load %struct.rtx_def** %add_val, align 8, !tbaa !47
  %mode = getelementptr inbounds %struct.induction* %v.018, i64 0, i32 6
  %4 = load i32* %mode, align 4, !tbaa !48
  %call = tail call fastcc %struct.rtx_def* @fold_rtx_mult_add(%struct.rtx_def* %result.017, %struct.rtx_def* %1, %struct.rtx_def* %3, i32 %4)
  %next_iv = getelementptr inbounds %struct.induction* %v.018, i64 0, i32 17
  %v.0 = load %struct.induction** %next_iv, align 8
  %tobool = icmp eq %struct.induction* %v.0, null
  br i1 %tobool, label %return, label %for.body

return:                                           ; preds = %for.body, %land.lhs.true, %if.then, %entry
  %retval.0 = phi %struct.rtx_def* [ %0, %entry ], [ null, %for.body ], [ null, %land.lhs.true ], [ %call, %if.then ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @fold_rtx_mult_add(%struct.rtx_def* %mult1, %struct.rtx_def* %mult2, %struct.rtx_def* %add1, i32 %mode) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %mult1, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %cmp = icmp eq i32 %bf.clear, %mode
  %cmp4 = icmp eq i32 %bf.clear, 0
  %or.cond = or i1 %cmp, %cmp4
  br i1 %or.cond, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %entry
  %1 = getelementptr inbounds %struct.rtx_def* %mult2, i64 0, i32 0
  %bf.load5 = load i32* %1, align 8
  %bf.lshr6 = lshr i32 %bf.load5, 16
  %bf.clear7 = and i32 %bf.lshr6, 255
  %cmp8 = icmp eq i32 %bf.clear7, %mode
  %cmp13 = icmp eq i32 %bf.clear7, 0
  %or.cond67 = or i1 %cmp8, %cmp13
  br i1 %or.cond67, label %lor.lhs.false14, label %if.then

lor.lhs.false14:                                  ; preds = %lor.lhs.false
  %2 = getelementptr inbounds %struct.rtx_def* %add1, i64 0, i32 0
  %bf.load15 = load i32* %2, align 8
  %bf.lshr16 = lshr i32 %bf.load15, 16
  %bf.clear17 = and i32 %bf.lshr16, 255
  %cmp18 = icmp eq i32 %bf.clear17, %mode
  %cmp23 = icmp eq i32 %bf.clear17, 0
  %or.cond68 = or i1 %cmp18, %cmp23
  br i1 %or.cond68, label %if.end, label %if.then

if.then:                                          ; preds = %lor.lhs.false14, %lor.lhs.false, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str13, i64 0, i64 0), i32 2422, i8* getelementptr inbounds ([18 x i8]* @__FUNCTION__.fold_rtx_mult_add, i64 0, i64 0)) #5
  unreachable

if.end:                                           ; preds = %lor.lhs.false14
  %bf.clear25 = and i32 %bf.load, 65535
  %cmp26 = icmp eq i32 %bf.clear25, 54
  %mult1.mult2 = select i1 %cmp26, %struct.rtx_def* %mult1, %struct.rtx_def* %mult2
  %mult2.mult1 = select i1 %cmp26, %struct.rtx_def* %mult2, %struct.rtx_def* %mult1
  %call = tail call %struct.rtx_def* @simplify_binary_operation(i32 78, i32 %mode, %struct.rtx_def* %mult2.mult1, %struct.rtx_def* %mult1.mult2) #4
  %tobool = icmp eq %struct.rtx_def* %call, null
  br i1 %tobool, label %if.then29, label %if.end31

if.then29:                                        ; preds = %if.end
  %call30 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 78, i32 %mode, %struct.rtx_def* %mult2.mult1, %struct.rtx_def* %mult1.mult2) #4
  br label %if.end31

if.end31:                                         ; preds = %if.end, %if.then29
  %mult_res.0 = phi %struct.rtx_def* [ %call, %if.end ], [ %call30, %if.then29 ]
  %bf.load32 = load i32* %2, align 8
  %bf.clear33 = and i32 %bf.load32, 65535
  %cmp34 = icmp eq i32 %bf.clear33, 54
  %mult_res.0.add1 = select i1 %cmp34, %struct.rtx_def* %mult_res.0, %struct.rtx_def* %add1
  %add1.mult_res.0 = select i1 %cmp34, %struct.rtx_def* %add1, %struct.rtx_def* %mult_res.0
  %call37 = tail call %struct.rtx_def* @simplify_binary_operation(i32 75, i32 %mode, %struct.rtx_def* %mult_res.0.add1, %struct.rtx_def* %add1.mult_res.0) #4
  %tobool38 = icmp eq %struct.rtx_def* %call37, null
  br i1 %tobool38, label %if.then39, label %if.end41

if.then39:                                        ; preds = %if.end31
  %call40 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %mode, %struct.rtx_def* %mult_res.0.add1, %struct.rtx_def* %add1.mult_res.0) #4
  br label %if.end41

if.end41:                                         ; preds = %if.end31, %if.then39
  %result.0 = phi %struct.rtx_def* [ %call37, %if.end31 ], [ %call40, %if.then39 ]
  ret %struct.rtx_def* %result.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @final_biv_value(%struct.loop* %loop, %struct.iv_class* nocapture readonly %bl) #0 {
entry:
  %aux = getelementptr inbounds %struct.loop* %loop, i64 0, i32 22
  %0 = load i8** %aux, align 8, !tbaa !1
  %n_iterations1 = getelementptr inbounds i8* %0, i64 96
  %1 = bitcast i8* %n_iterations1 to i64*
  %2 = load i64* %1, align 8, !tbaa !11
  %biv = getelementptr inbounds %struct.iv_class* %bl, i64 0, i32 2
  %3 = load %struct.induction** %biv, align 8, !tbaa !53
  %mode = getelementptr inbounds %struct.induction* %3, i64 0, i32 6
  %4 = load i32* %mode, align 4, !tbaa !48
  %idxprom = sext i32 %4 to i64
  %arrayidx = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom
  %5 = load i32* %arrayidx, align 4, !tbaa !23
  %cmp = icmp eq i32 %5, 1
  br i1 %cmp, label %if.end, label %return

if.end:                                           ; preds = %entry
  %reversed = getelementptr inbounds %struct.iv_class* %bl, i64 0, i32 12
  %bf.load = load i8* %reversed, align 8
  %bf.clear = and i8 %bf.load, 8
  %tobool = icmp eq i8 %bf.clear, 0
  br i1 %tobool, label %if.end6, label %if.then2

if.then2:                                         ; preds = %if.end
  %6 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !9
  %tobool3 = icmp eq %struct._IO_FILE* %6, null
  br i1 %tobool3, label %if.end5, label %if.then4

if.then4:                                         ; preds = %if.then2
  %regno = getelementptr inbounds %struct.iv_class* %bl, i64 0, i32 0
  %7 = load i32* %regno, align 4, !tbaa !50
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([39 x i8]* @.str30, i64 0, i64 0), i32 %7) #4
  br label %if.end5

if.end5:                                          ; preds = %if.then2, %if.then4
  %8 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !9
  br label %return

if.end6:                                          ; preds = %if.end
  %cmp7 = icmp eq i64 %2, 0
  br i1 %cmp7, label %if.end32, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end6
  %exit_count = getelementptr inbounds %struct.loop* %loop, i64 0, i32 32
  %9 = load i32* %exit_count, align 4, !tbaa !49
  %tobool8 = icmp eq i32 %9, 0
  br i1 %tobool8, label %land.lhs.true9, label %if.end32

land.lhs.true9:                                   ; preds = %land.lhs.true
  %initial_value = getelementptr inbounds %struct.iv_class* %bl, i64 0, i32 6
  %10 = load %struct.rtx_def** %initial_value, align 8, !tbaa !57
  %call10 = tail call i32 @loop_invariant_p(%struct.loop* %loop, %struct.rtx_def* %10) #4
  %tobool11 = icmp eq i32 %call10, 0
  br i1 %tobool11, label %if.end32, label %if.then12

if.then12:                                        ; preds = %land.lhs.true9
  %11 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !9
  %v.015.i = load %struct.induction** %biv, align 8
  %tobool16.i = icmp eq %struct.induction* %v.015.i, null
  br i1 %tobool16.i, label %biv_total_increment.exit, label %for.body.i

for.body.i:                                       ; preds = %if.then12, %if.then.i
  %v.018.i = phi %struct.induction* [ %v.0.i, %if.then.i ], [ %v.015.i, %if.then12 ]
  %result.017.i = phi %struct.rtx_def* [ %call.i, %if.then.i ], [ %11, %if.then12 ]
  %always_computable.i = getelementptr inbounds %struct.induction* %v.018.i, i64 0, i32 13
  %bf.load.i = load i16* %always_computable.i, align 4
  %bf.clear.i = and i16 %bf.load.i, 8
  %tobool1.i = icmp eq i16 %bf.clear.i, 0
  br i1 %tobool1.i, label %if.end32, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %for.body.i
  %mult_val.i = getelementptr inbounds %struct.induction* %v.018.i, i64 0, i32 8
  %12 = load %struct.rtx_def** %mult_val.i, align 8, !tbaa !45
  %13 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !9
  %cmp.i = icmp eq %struct.rtx_def* %12, %13
  %bf.clear5.i = and i16 %bf.load.i, 32
  %tobool7.i = icmp eq i16 %bf.clear5.i, 0
  %or.cond.i = and i1 %cmp.i, %tobool7.i
  br i1 %or.cond.i, label %if.then.i, label %if.end32

if.then.i:                                        ; preds = %land.lhs.true.i
  %add_val.i = getelementptr inbounds %struct.induction* %v.018.i, i64 0, i32 9
  %14 = load %struct.rtx_def** %add_val.i, align 8, !tbaa !47
  %mode.i = getelementptr inbounds %struct.induction* %v.018.i, i64 0, i32 6
  %15 = load i32* %mode.i, align 4, !tbaa !48
  %call.i = tail call fastcc %struct.rtx_def* @fold_rtx_mult_add(%struct.rtx_def* %result.017.i, %struct.rtx_def* %12, %struct.rtx_def* %14, i32 %15) #4
  %next_iv.i = getelementptr inbounds %struct.induction* %v.018.i, i64 0, i32 17
  %v.0.i = load %struct.induction** %next_iv.i, align 8
  %tobool.i = icmp eq %struct.induction* %v.0.i, null
  br i1 %tobool.i, label %biv_total_increment.exit, label %for.body.i

biv_total_increment.exit:                         ; preds = %if.then.i, %if.then12
  %retval.0.i = phi %struct.rtx_def* [ %11, %if.then12 ], [ %call.i, %if.then.i ]
  %tobool14 = icmp eq %struct.rtx_def* %retval.0.i, null
  br i1 %tobool14, label %if.end32, label %land.lhs.true15

land.lhs.true15:                                  ; preds = %biv_total_increment.exit
  %call16 = tail call i32 @loop_invariant_p(%struct.loop* %loop, %struct.rtx_def* %retval.0.i) #4
  %tobool17 = icmp eq i32 %call16, 0
  br i1 %tobool17, label %if.end32, label %if.then18

if.then18:                                        ; preds = %land.lhs.true15
  %16 = load %struct.induction** %biv, align 8, !tbaa !53
  %mode20 = getelementptr inbounds %struct.induction* %16, i64 0, i32 6
  %17 = load i32* %mode20, align 4, !tbaa !48
  %call21 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %17) #4
  %arrayidx22 = getelementptr inbounds %struct.rtx_def* %call21, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx22 to i32*
  %18 = load i32* %rtuint, align 4, !tbaa !10
  %19 = load %struct.induction** %biv, align 8, !tbaa !53
  %add_val = getelementptr inbounds %struct.induction* %19, i64 0, i32 9
  %20 = load %struct.rtx_def** %add_val, align 8, !tbaa !47
  tail call void @record_base_value(i32 %18, %struct.rtx_def* %20, i32 0) #4
  %call24 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %2) #4
  %21 = load %struct.rtx_def** %initial_value, align 8, !tbaa !57
  tail call void @loop_iv_add_mult_sink(%struct.loop* %loop, %struct.rtx_def* %retval.0.i, %struct.rtx_def* %call24, %struct.rtx_def* %21, %struct.rtx_def* %call21) #4
  %22 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !9
  %tobool26 = icmp eq %struct._IO_FILE* %22, null
  br i1 %tobool26, label %return, label %if.then27

if.then27:                                        ; preds = %if.then18
  %regno28 = getelementptr inbounds %struct.iv_class* %bl, i64 0, i32 0
  %23 = load i32* %regno28, align 4, !tbaa !50
  %call29 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %22, i8* getelementptr inbounds ([37 x i8]* @.str31, i64 0, i64 0), i32 %23) #4
  br label %return

if.end32:                                         ; preds = %for.body.i, %land.lhs.true.i, %land.lhs.true15, %biv_total_increment.exit, %land.lhs.true9, %land.lhs.true, %if.end6
  %24 = load %struct.induction** %biv, align 8, !tbaa !53
  %src_reg = getelementptr inbounds %struct.induction* %24, i64 0, i32 2
  %25 = load %struct.rtx_def** %src_reg, align 8, !tbaa !58
  %call34 = tail call fastcc i32 @reg_dead_after_loop(%struct.loop* %loop, %struct.rtx_def* %25)
  %tobool35 = icmp eq i32 %call34, 0
  br i1 %tobool35, label %return, label %if.then36

if.then36:                                        ; preds = %if.end32
  %26 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !9
  %tobool37 = icmp eq %struct._IO_FILE* %26, null
  br i1 %tobool37, label %if.end41, label %if.then38

if.then38:                                        ; preds = %if.then36
  %regno39 = getelementptr inbounds %struct.iv_class* %bl, i64 0, i32 0
  %27 = load i32* %regno39, align 4, !tbaa !50
  %call40 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %26, i8* getelementptr inbounds ([51 x i8]* @.str32, i64 0, i64 0), i32 %27) #4
  br label %if.end41

if.end41:                                         ; preds = %if.then36, %if.then38
  %28 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !9
  br label %return

return:                                           ; preds = %if.end32, %if.then27, %if.then18, %entry, %if.end41, %if.end5
  %retval.0 = phi %struct.rtx_def* [ %8, %if.end5 ], [ %28, %if.end41 ], [ null, %entry ], [ %call21, %if.then18 ], [ %call21, %if.then27 ], [ null, %if.end32 ]
  ret %struct.rtx_def* %retval.0
}

declare void @loop_iv_add_mult_sink(%struct.loop*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @reg_dead_after_loop(%struct.loop* nocapture readonly %loop, %struct.rtx_def* %reg) #0 {
entry:
  %exit_labels = getelementptr inbounds %struct.loop* %loop, i64 0, i32 31
  %label.0128 = load %struct.rtx_def** %exit_labels, align 8
  %tobool129 = icmp eq %struct.rtx_def* %label.0128, null
  br i1 %tobool129, label %for.end, label %for.body

for.body:                                         ; preds = %entry, %for.body
  %label.0131 = phi %struct.rtx_def* [ %label.0, %for.body ], [ %label.0128, %entry ]
  %label_count.0130 = phi i32 [ %inc, %for.body ], [ 0, %entry ]
  %inc = add nsw i32 %label_count.0130, 1
  %arrayidx = getelementptr inbounds %struct.rtx_def* %label.0131, i64 0, i32 1, i64 1
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %label.0 = load %struct.rtx_def** %rtx, align 8
  %tobool = icmp eq %struct.rtx_def* %label.0, null
  br i1 %tobool, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %entry
  %label_count.0.lcssa = phi i32 [ 0, %entry ], [ %inc, %for.body ]
  %exit_count = getelementptr inbounds %struct.loop* %loop, i64 0, i32 32
  %0 = load i32* %exit_count, align 4, !tbaa !49
  %cmp = icmp eq i32 %label_count.0.lcssa, %0
  br i1 %cmp, label %if.end, label %return

if.end:                                           ; preds = %for.end
  %end = getelementptr inbounds %struct.loop* %loop, i64 0, i32 27
  %1 = load %struct.rtx_def** %end, align 8, !tbaa !8
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_u00(i32 67, i32 0, %struct.rtx_def* %1) #4
  %2 = load %struct.rtx_def** %exit_labels, align 8, !tbaa !87
  %3 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 1, i32 0
  %.c = ptrtoint %struct.rtx_def* %2 to i64
  store i64 %.c, i64* %3, align 8, !tbaa !9
  %tobool6125 = icmp eq %struct.rtx_def* %call, null
  br i1 %tobool6125, label %return, label %for.body7

for.body7:                                        ; preds = %if.end, %for.inc87
  %jump_count.0127 = phi i32 [ %jump_count.1.ph, %for.inc87 ], [ 0, %if.end ]
  %label.1126 = phi %struct.rtx_def* [ %13, %for.inc87 ], [ %call, %if.end ]
  %fld8 = getelementptr inbounds %struct.rtx_def* %label.1126, i64 0, i32 1
  %rtx10 = bitcast [1 x %union.rtunion_def]* %fld8 to %struct.rtx_def**
  br label %while.cond.outer

while.cond.outer:                                 ; preds = %if.else77, %for.body7
  %.pn.ph.in = phi %struct.rtx_def** [ %rtx10, %for.body7 ], [ %rtx80, %if.else77 ]
  %jump_count.1.ph = phi i32 [ %jump_count.0127, %for.body7 ], [ %inc73, %if.else77 ]
  %.pn.ph = load %struct.rtx_def** %.pn.ph.in, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.cond.outer, %if.end59
  %.pn = phi %struct.rtx_def* [ %insn.0, %if.end59 ], [ %.pn.ph, %while.cond.outer ]
  %insn.0.in.in = getelementptr inbounds %struct.rtx_def* %.pn, i64 0, i32 1, i64 2
  %insn.0.in = bitcast %union.rtunion_def* %insn.0.in.in to %struct.rtx_def**
  %insn.0 = load %struct.rtx_def** %insn.0.in, align 8
  %tobool14 = icmp eq %struct.rtx_def* %insn.0, null
  br i1 %tobool14, label %for.inc87, label %while.body

while.body:                                       ; preds = %while.cond
  %4 = getelementptr inbounds %struct.rtx_def* %insn.0, i64 0, i32 0
  %bf.load = load i32* %4, align 8
  %bf.clear = and i32 %bf.load, 65535
  %idxprom113 = zext i32 %bf.clear to i64
  %arrayidx15 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom113
  %5 = load i8* %arrayidx15, align 1, !tbaa !23
  %cmp16 = icmp eq i8 %5, 105
  br i1 %cmp16, label %if.then18, label %if.end59

if.then18:                                        ; preds = %while.body
  %arrayidx20 = getelementptr inbounds %struct.rtx_def* %insn.0, i64 0, i32 1, i64 3
  %rtx21 = bitcast %union.rtunion_def* %arrayidx20 to %struct.rtx_def**
  %6 = load %struct.rtx_def** %rtx21, align 8, !tbaa !9
  %call22 = tail call i32 @reg_referenced_p(%struct.rtx_def* %reg, %struct.rtx_def* %6) #4
  %tobool23 = icmp eq i32 %call22, 0
  br i1 %tobool23, label %if.end25, label %return

if.end25:                                         ; preds = %if.then18
  %bf.load26 = load i32* %4, align 8
  %bf.clear27 = and i32 %bf.load26, 65535
  %idxprom28114 = zext i32 %bf.clear27 to i64
  %arrayidx29 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom28114
  %7 = load i8* %arrayidx29, align 1, !tbaa !23
  %cmp31 = icmp eq i8 %7, 105
  br i1 %cmp31, label %cond.true, label %if.end59

cond.true:                                        ; preds = %if.end25
  %8 = load %struct.rtx_def** %rtx21, align 8, !tbaa !9
  %9 = getelementptr inbounds %struct.rtx_def* %8, i64 0, i32 0
  %bf.load36 = load i32* %9, align 8
  %bf.clear37 = and i32 %bf.load36, 65535
  %cmp38 = icmp eq i32 %bf.clear37, 47
  br i1 %cmp38, label %cond.end49, label %cond.false

cond.false:                                       ; preds = %cond.true
  %call47 = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* %insn.0, %struct.rtx_def* %8) #4
  br label %cond.end49

cond.end49:                                       ; preds = %cond.true, %cond.false
  %cond50 = phi %struct.rtx_def* [ %call47, %cond.false ], [ %8, %cond.true ]
  %tobool51 = icmp eq %struct.rtx_def* %cond50, null
  br i1 %tobool51, label %if.end59, label %land.lhs.true

land.lhs.true:                                    ; preds = %cond.end49
  %arrayidx53 = getelementptr inbounds %struct.rtx_def* %cond50, i64 0, i32 1, i64 0
  %rtx54 = bitcast %union.rtunion_def* %arrayidx53 to %struct.rtx_def**
  %10 = load %struct.rtx_def** %rtx54, align 8, !tbaa !9
  %call55 = tail call i32 @rtx_equal_p(%struct.rtx_def* %10, %struct.rtx_def* %reg) #4
  %tobool56 = icmp eq i32 %call55, 0
  br i1 %tobool56, label %if.end59, label %for.inc87

if.end59:                                         ; preds = %if.end25, %land.lhs.true, %cond.end49, %while.body
  %cmp60 = icmp eq i32 %bf.clear, 33
  br i1 %cmp60, label %if.then62, label %while.cond

if.then62:                                        ; preds = %if.end59
  %arrayidx64 = getelementptr inbounds %struct.rtx_def* %insn.0, i64 0, i32 1, i64 3
  %rtx65 = bitcast %union.rtunion_def* %arrayidx64 to %struct.rtx_def**
  %11 = load %struct.rtx_def** %rtx65, align 8, !tbaa !9
  %12 = getelementptr inbounds %struct.rtx_def* %11, i64 0, i32 0
  %bf.load66 = load i32* %12, align 8
  %bf.clear67 = and i32 %bf.load66, 65535
  %cmp68 = icmp eq i32 %bf.clear67, 51
  br i1 %cmp68, label %for.inc87, label %if.else

if.else:                                          ; preds = %if.then62
  %call71 = tail call i32 @any_uncondjump_p(%struct.rtx_def* %insn.0) #4
  %tobool72 = icmp eq i32 %call71, 0
  %cmp74 = icmp sgt i32 %jump_count.1.ph, 20
  %or.cond = or i1 %tobool72, %cmp74
  br i1 %or.cond, label %return, label %if.else77

if.else77:                                        ; preds = %if.else
  %inc73 = add nsw i32 %jump_count.1.ph, 1
  %arrayidx79 = getelementptr inbounds %struct.rtx_def* %insn.0, i64 0, i32 1, i64 7
  %rtx80 = bitcast %union.rtunion_def* %arrayidx79 to %struct.rtx_def**
  br label %while.cond.outer

for.inc87:                                        ; preds = %if.then62, %land.lhs.true, %while.cond
  %arrayidx89 = getelementptr inbounds %struct.rtx_def* %label.1126, i64 0, i32 1, i64 1
  %rtx90 = bitcast %union.rtunion_def* %arrayidx89 to %struct.rtx_def**
  %13 = load %struct.rtx_def** %rtx90, align 8, !tbaa !9
  %tobool6 = icmp eq %struct.rtx_def* %13, null
  br i1 %tobool6, label %return, label %for.body7

return:                                           ; preds = %for.inc87, %if.else, %if.then18, %if.end, %for.end
  %retval.0 = phi i32 [ 0, %for.end ], [ 1, %if.end ], [ 0, %if.then18 ], [ 0, %if.else ], [ 1, %for.inc87 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @final_giv_value(%struct.loop* %loop, %struct.induction* %v) #0 {
entry:
  %aux = getelementptr inbounds %struct.loop* %loop, i64 0, i32 22
  %0 = load i8** %aux, align 8, !tbaa !1
  %ivs1 = getelementptr inbounds i8* %0, i64 208
  %end = getelementptr inbounds %struct.loop* %loop, i64 0, i32 27
  %1 = load %struct.rtx_def** %end, align 8, !tbaa !8
  %n_iterations3 = getelementptr inbounds i8* %0, i64 96
  %2 = bitcast i8* %n_iterations3 to i64*
  %3 = load i64* %2, align 8, !tbaa !11
  %src_reg = getelementptr inbounds %struct.induction* %v, i64 0, i32 2
  %4 = load %struct.rtx_def** %src_reg, align 8, !tbaa !58
  %arrayidx = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %5 = load i32* %rtuint, align 4, !tbaa !10
  %idxprom = zext i32 %5 to i64
  %regs = bitcast i8* %ivs1 to %struct.iv**
  %6 = load %struct.iv** %regs, align 8, !tbaa !67
  %class = getelementptr inbounds %struct.iv* %6, i64 %idxprom, i32 1, i32 0
  %7 = load %struct.iv_class** %class, align 8, !tbaa !9
  %reversed = getelementptr inbounds %struct.iv_class* %7, i64 0, i32 12
  %bf.load = load i8* %reversed, align 8
  %bf.clear = and i8 %bf.load, 8
  %tobool = icmp eq i8 %bf.clear, 0
  br i1 %tobool, label %if.end10, label %if.then

if.then:                                          ; preds = %entry
  %8 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !9
  %tobool5 = icmp eq %struct._IO_FILE* %8, null
  br i1 %tobool5, label %if.end, label %if.then6

if.then6:                                         ; preds = %if.then
  %dest_reg = getelementptr inbounds %struct.induction* %v, i64 0, i32 4
  %9 = load %struct.rtx_def** %dest_reg, align 8, !tbaa !54
  %arrayidx8 = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 1, i64 0
  %rtuint9 = bitcast %union.rtunion_def* %arrayidx8 to i32*
  %10 = load i32* %rtuint9, align 4, !tbaa !10
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([49 x i8]* @.str33, i64 0, i64 0), i32 %10) #4
  br label %if.end

if.end:                                           ; preds = %if.then, %if.then6
  %11 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !9
  br label %return

if.end10:                                         ; preds = %entry
  %cmp = icmp eq i64 %3, 0
  br i1 %cmp, label %if.end71, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end10
  %exit_count = getelementptr inbounds %struct.loop* %loop, i64 0, i32 32
  %12 = load i32* %exit_count, align 4, !tbaa !49
  %tobool11 = icmp eq i32 %12, 0
  br i1 %tobool11, label %land.lhs.true12, label %if.end71

land.lhs.true12:                                  ; preds = %land.lhs.true
  %always_executed = getelementptr inbounds %struct.induction* %v, i64 0, i32 13
  %bf.load13 = load i16* %always_executed, align 4
  %bf.clear15 = and i16 %bf.load13, 16
  %tobool17 = icmp eq i16 %bf.clear15, 0
  br i1 %tobool17, label %if.end71, label %if.then18

if.then18:                                        ; preds = %land.lhs.true12
  %13 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !9
  %biv.i = getelementptr inbounds %struct.iv_class* %7, i64 0, i32 2
  %v.015.i = load %struct.induction** %biv.i, align 8
  %tobool16.i = icmp eq %struct.induction* %v.015.i, null
  br i1 %tobool16.i, label %biv_total_increment.exit, label %for.body.i

for.body.i:                                       ; preds = %if.then18, %if.then.i
  %v.018.i = phi %struct.induction* [ %v.0.i, %if.then.i ], [ %v.015.i, %if.then18 ]
  %result.017.i = phi %struct.rtx_def* [ %call.i, %if.then.i ], [ %13, %if.then18 ]
  %always_computable.i = getelementptr inbounds %struct.induction* %v.018.i, i64 0, i32 13
  %bf.load.i = load i16* %always_computable.i, align 4
  %bf.clear.i = and i16 %bf.load.i, 8
  %tobool1.i = icmp eq i16 %bf.clear.i, 0
  br i1 %tobool1.i, label %if.end71, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %for.body.i
  %mult_val.i = getelementptr inbounds %struct.induction* %v.018.i, i64 0, i32 8
  %14 = load %struct.rtx_def** %mult_val.i, align 8, !tbaa !45
  %15 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !9
  %cmp.i = icmp eq %struct.rtx_def* %14, %15
  %bf.clear5.i = and i16 %bf.load.i, 32
  %tobool7.i = icmp eq i16 %bf.clear5.i, 0
  %or.cond.i = and i1 %cmp.i, %tobool7.i
  br i1 %or.cond.i, label %if.then.i, label %if.end71

if.then.i:                                        ; preds = %land.lhs.true.i
  %add_val.i = getelementptr inbounds %struct.induction* %v.018.i, i64 0, i32 9
  %16 = load %struct.rtx_def** %add_val.i, align 8, !tbaa !47
  %mode.i = getelementptr inbounds %struct.induction* %v.018.i, i64 0, i32 6
  %17 = load i32* %mode.i, align 4, !tbaa !48
  %call.i = tail call fastcc %struct.rtx_def* @fold_rtx_mult_add(%struct.rtx_def* %result.017.i, %struct.rtx_def* %14, %struct.rtx_def* %16, i32 %17) #4
  %next_iv.i = getelementptr inbounds %struct.induction* %v.018.i, i64 0, i32 17
  %v.0.i = load %struct.induction** %next_iv.i, align 8
  %tobool.i = icmp eq %struct.induction* %v.0.i, null
  br i1 %tobool.i, label %biv_total_increment.exit, label %for.body.i

biv_total_increment.exit:                         ; preds = %if.then.i, %if.then18
  %retval.0.i = phi %struct.rtx_def* [ %13, %if.then18 ], [ %call.i, %if.then.i ]
  %tobool20 = icmp eq %struct.rtx_def* %retval.0.i, null
  br i1 %tobool20, label %if.end71, label %land.lhs.true21

land.lhs.true21:                                  ; preds = %biv_total_increment.exit
  %call22 = tail call i32 @loop_invariant_p(%struct.loop* %loop, %struct.rtx_def* %retval.0.i) #4
  %tobool23 = icmp eq i32 %call22, 0
  br i1 %tobool23, label %if.end71, label %land.lhs.true24

land.lhs.true24:                                  ; preds = %land.lhs.true21
  %initial_value = getelementptr inbounds %struct.iv_class* %7, i64 0, i32 6
  %18 = load %struct.rtx_def** %initial_value, align 8, !tbaa !57
  %call25 = tail call i32 @loop_invariant_p(%struct.loop* %loop, %struct.rtx_def* %18) #4
  %tobool26 = icmp eq i32 %call25, 0
  br i1 %tobool26, label %if.end71, label %if.then27

if.then27:                                        ; preds = %land.lhs.true24
  %mode = getelementptr inbounds %struct.induction* %v, i64 0, i32 6
  %19 = load i32* %mode, align 4, !tbaa !48
  %call28 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %19) #4
  %arrayidx30 = getelementptr inbounds %struct.rtx_def* %call28, i64 0, i32 1, i64 0
  %rtuint31 = bitcast %union.rtunion_def* %arrayidx30 to i32*
  %20 = load i32* %rtuint31, align 4, !tbaa !10
  %21 = load %struct.induction** %biv.i, align 8, !tbaa !53
  %add_val = getelementptr inbounds %struct.induction* %21, i64 0, i32 9
  %22 = load %struct.rtx_def** %add_val, align 8, !tbaa !47
  tail call void @record_base_value(i32 %20, %struct.rtx_def* %22, i32 0) #4
  %call32 = tail call %struct.rtx_def* @extend_value_for_giv(%struct.induction* %v, %struct.rtx_def* %retval.0.i) #4
  %call33 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %3) #4
  %23 = load %struct.rtx_def** %initial_value, align 8, !tbaa !57
  %call35 = tail call %struct.rtx_def* @extend_value_for_giv(%struct.induction* %v, %struct.rtx_def* %23) #4
  tail call void @loop_iv_add_mult_sink(%struct.loop* %loop, %struct.rtx_def* %call32, %struct.rtx_def* %call33, %struct.rtx_def* %call35, %struct.rtx_def* %call28) #4
  %insn36 = getelementptr inbounds %struct.induction* %v, i64 0, i32 0
  %24 = load %struct.rtx_def** %insn36, align 8, !tbaa !56
  %insn.0.in.in136 = getelementptr inbounds %struct.rtx_def* %24, i64 0, i32 1, i64 2
  %insn.0.in137 = bitcast %union.rtunion_def* %insn.0.in.in136 to %struct.rtx_def**
  %insn.0138 = load %struct.rtx_def** %insn.0.in137, align 8
  %cmp39139 = icmp eq %struct.rtx_def* %insn.0138, %1
  br i1 %cmp39139, label %for.end60, label %for.cond42.preheader

for.cond.loopexit:                                ; preds = %for.inc, %for.cond42.preheader
  %tem.1.lcssa = phi %struct.rtx_def* [ %tem.0140, %for.cond42.preheader ], [ %tem.2, %for.inc ]
  %insn.0.in.in = getelementptr inbounds %struct.rtx_def* %insn.0141, i64 0, i32 1, i64 2
  %insn.0.in = bitcast %union.rtunion_def* %insn.0.in.in to %struct.rtx_def**
  %insn.0 = load %struct.rtx_def** %insn.0.in, align 8
  %cmp39 = icmp eq %struct.rtx_def* %insn.0, %1
  br i1 %cmp39, label %for.end60, label %for.cond42.preheader

for.cond42.preheader:                             ; preds = %if.then27, %for.cond.loopexit
  %insn.0141 = phi %struct.rtx_def* [ %insn.0, %for.cond.loopexit ], [ %insn.0138, %if.then27 ]
  %tem.0140 = phi %struct.rtx_def* [ %tem.1.lcssa, %for.cond.loopexit ], [ %call28, %if.then27 ]
  %biv40.0132 = load %struct.induction** %biv.i, align 8
  %tobool43133 = icmp eq %struct.induction* %biv40.0132, null
  br i1 %tobool43133, label %for.cond.loopexit, label %for.body44

for.body44:                                       ; preds = %for.cond42.preheader, %for.inc
  %biv40.0135 = phi %struct.induction* [ %biv40.0, %for.inc ], [ %biv40.0132, %for.cond42.preheader ]
  %tem.1134 = phi %struct.rtx_def* [ %tem.2, %for.inc ], [ %tem.0140, %for.cond42.preheader ]
  %insn45 = getelementptr inbounds %struct.induction* %biv40.0135, i64 0, i32 0
  %25 = load %struct.rtx_def** %insn45, align 8, !tbaa !56
  %cmp46 = icmp eq %struct.rtx_def* %25, %insn.0141
  br i1 %cmp46, label %if.then47, label %for.inc

if.then47:                                        ; preds = %for.body44
  tail call void @start_sequence() #4
  %26 = getelementptr inbounds %struct.rtx_def* %tem.1134, i64 0, i32 0
  %bf.load48 = load i32* %26, align 8
  %bf.lshr49 = lshr i32 %bf.load48, 16
  %bf.clear50 = and i32 %bf.lshr49, 255
  %add_val51 = getelementptr inbounds %struct.induction* %biv40.0135, i64 0, i32 9
  %27 = load %struct.rtx_def** %add_val51, align 8, !tbaa !47
  %call52 = tail call %struct.rtx_def* @expand_simple_binop(i32 %bf.clear50, i32 76, %struct.rtx_def* %tem.1134, %struct.rtx_def* %27, %struct.rtx_def* null, i32 0, i32 3) #4
  %call53 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  %call54 = tail call %struct.rtx_def* @loop_insn_sink(%struct.loop* %loop, %struct.rtx_def* %call53) #4
  br label %for.inc

for.inc:                                          ; preds = %for.body44, %if.then47
  %tem.2 = phi %struct.rtx_def* [ %call52, %if.then47 ], [ %tem.1134, %for.body44 ]
  %next_iv = getelementptr inbounds %struct.induction* %biv40.0135, i64 0, i32 17
  %biv40.0 = load %struct.induction** %next_iv, align 8
  %tobool43 = icmp eq %struct.induction* %biv40.0, null
  br i1 %tobool43, label %for.cond.loopexit, label %for.body44

for.end60:                                        ; preds = %for.cond.loopexit, %if.then27
  %tem.0.lcssa = phi %struct.rtx_def* [ %call28, %if.then27 ], [ %tem.1.lcssa, %for.cond.loopexit ]
  %mult_val = getelementptr inbounds %struct.induction* %v, i64 0, i32 8
  %28 = load %struct.rtx_def** %mult_val, align 8, !tbaa !45
  %add_val61 = getelementptr inbounds %struct.induction* %v, i64 0, i32 9
  %29 = load %struct.rtx_def** %add_val61, align 8, !tbaa !47
  tail call void @loop_iv_add_mult_sink(%struct.loop* %loop, %struct.rtx_def* %tem.0.lcssa, %struct.rtx_def* %28, %struct.rtx_def* %29, %struct.rtx_def* %tem.0.lcssa) #4
  %30 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !9
  %tobool62 = icmp eq %struct._IO_FILE* %30, null
  br i1 %tobool62, label %return, label %if.then63

if.then63:                                        ; preds = %for.end60
  %dest_reg64 = getelementptr inbounds %struct.induction* %v, i64 0, i32 4
  %31 = load %struct.rtx_def** %dest_reg64, align 8, !tbaa !54
  %arrayidx66 = getelementptr inbounds %struct.rtx_def* %31, i64 0, i32 1, i64 0
  %rtuint67 = bitcast %union.rtunion_def* %arrayidx66 to i32*
  %32 = load i32* %rtuint67, align 4, !tbaa !10
  %call68 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %30, i8* getelementptr inbounds ([48 x i8]* @.str34, i64 0, i64 0), i32 %32) #4
  br label %return

if.end71:                                         ; preds = %for.body.i, %land.lhs.true.i, %land.lhs.true24, %land.lhs.true21, %biv_total_increment.exit, %land.lhs.true12, %land.lhs.true, %if.end10
  %replaceable = getelementptr inbounds %struct.induction* %v, i64 0, i32 13
  %bf.load72 = load i16* %replaceable, align 4
  %bf.clear73 = and i16 %bf.load72, 1
  %tobool75 = icmp eq i16 %bf.clear73, 0
  br i1 %tobool75, label %if.end77, label %if.then76

if.then76:                                        ; preds = %if.end71
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str13, i64 0, i64 0), i32 3387, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.final_giv_value, i64 0, i64 0)) #5
  unreachable

if.end77:                                         ; preds = %if.end71
  %dest_reg78 = getelementptr inbounds %struct.induction* %v, i64 0, i32 4
  %33 = load %struct.rtx_def** %dest_reg78, align 8, !tbaa !54
  %call79 = tail call fastcc i32 @reg_dead_after_loop(%struct.loop* %loop, %struct.rtx_def* %33)
  %tobool80 = icmp eq i32 %call79, 0
  br i1 %tobool80, label %return, label %if.then81

if.then81:                                        ; preds = %if.end77
  %34 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !9
  %tobool82 = icmp eq %struct._IO_FILE* %34, null
  br i1 %tobool82, label %if.end89, label %if.then83

if.then83:                                        ; preds = %if.then81
  %35 = load %struct.rtx_def** %dest_reg78, align 8, !tbaa !54
  %arrayidx86 = getelementptr inbounds %struct.rtx_def* %35, i64 0, i32 1, i64 0
  %rtuint87 = bitcast %union.rtunion_def* %arrayidx86 to i32*
  %36 = load i32* %rtuint87, align 4, !tbaa !10
  %call88 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %34, i8* getelementptr inbounds ([51 x i8]* @.str35, i64 0, i64 0), i32 %36) #4
  br label %if.end89

if.end89:                                         ; preds = %if.then81, %if.then83
  %37 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !9
  br label %return

return:                                           ; preds = %if.end77, %if.then63, %for.end60, %if.end89, %if.end
  %retval.0 = phi %struct.rtx_def* [ %11, %if.end ], [ %37, %if.end89 ], [ %tem.0.lcssa, %for.end60 ], [ %tem.0.lcssa, %if.then63 ], [ null, %if.end77 ]
  ret %struct.rtx_def* %retval.0
}

declare %struct.rtx_def* @extend_value_for_giv(%struct.induction*, %struct.rtx_def*) #2

declare %struct.rtx_def* @loop_insn_sink(%struct.loop*, %struct.rtx_def*) #2

; Function Attrs: nounwind uwtable
define i64 @loop_iterations(%struct.loop* %loop) #0 {
entry:
  %aux = getelementptr inbounds %struct.loop* %loop, i64 0, i32 22
  %0 = load i8** %aux, align 8, !tbaa !1
  %ivs2 = getelementptr inbounds i8* %0, i64 208
  %n_iterations = getelementptr inbounds i8* %0, i64 96
  %1 = bitcast i8* %n_iterations to i64*
  store i64 0, i64* %1, align 8, !tbaa !11
  %initial_value3 = getelementptr inbounds i8* %0, i64 32
  %2 = bitcast i8* %initial_value3 to %struct.rtx_def**
  %initial_equiv_value = getelementptr inbounds i8* %0, i64 56
  %3 = bitcast i8* %initial_equiv_value to %struct.rtx_def**
  %comparison_value4 = getelementptr inbounds i8* %0, i64 40
  %4 = bitcast i8* %comparison_value4 to %struct.rtx_def**
  %final_value5 = getelementptr inbounds i8* %0, i64 48
  %5 = bitcast i8* %final_value5 to %struct.rtx_def**
  %final_equiv_value = getelementptr inbounds i8* %0, i64 64
  %6 = bitcast i8* %final_equiv_value to %struct.rtx_def**
  %increment6 = getelementptr inbounds i8* %0, i64 80
  %7 = bitcast i8* %increment6 to %struct.rtx_def**
  %iteration_var7 = getelementptr inbounds i8* %0, i64 72
  %8 = bitcast i8* %iteration_var7 to %struct.rtx_def**
  %unroll_number = getelementptr inbounds i8* %0, i64 104
  %9 = bitcast i8* %unroll_number to i32*
  call void @llvm.memset.p0i8.i64(i8* %initial_value3, i8 0, i64 56, i32 8, i1 false)
  store i32 1, i32* %9, align 4, !tbaa !44
  %iv = getelementptr inbounds i8* %0, i64 112
  %10 = bitcast i8* %iv to %struct.iv_class**
  store %struct.iv_class* null, %struct.iv_class** %10, align 8, !tbaa !88
  %end = getelementptr inbounds %struct.loop* %loop, i64 0, i32 27
  %11 = load %struct.rtx_def** %end, align 8, !tbaa !8
  %arrayidx = getelementptr inbounds %struct.rtx_def* %11, i64 0, i32 1, i64 1
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %12 = load %struct.rtx_def** %rtx, align 8, !tbaa !9
  %13 = getelementptr inbounds %struct.rtx_def* %12, i64 0, i32 0
  %bf.load = load i32* %13, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 33
  br i1 %cmp, label %if.end9, label %if.then

if.then:                                          ; preds = %entry
  %14 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !9
  %tobool = icmp eq %struct._IO_FILE* %14, null
  br i1 %tobool, label %return, label %if.then8

if.then8:                                         ; preds = %if.then
  %15 = tail call i64 @fwrite(i8* getelementptr inbounds ([53 x i8]* @.str36, i64 0, i64 0), i64 52, i64 1, %struct._IO_FILE* %14)
  br label %return

if.end9:                                          ; preds = %entry
  %arrayidx11 = getelementptr inbounds %struct.rtx_def* %12, i64 0, i32 1, i64 7
  %rtx12 = bitcast %union.rtunion_def* %arrayidx11 to %struct.rtx_def**
  %16 = load %struct.rtx_def** %rtx12, align 8, !tbaa !9
  %arrayidx14 = getelementptr inbounds %struct.rtx_def* %16, i64 0, i32 1, i64 3
  %rtint = bitcast %union.rtunion_def* %arrayidx14 to i32*
  %17 = load i32* %rtint, align 4, !tbaa !10
  %cmp15 = icmp sgt i32 %17, 1
  br i1 %cmp15, label %if.then16, label %if.end21

if.then16:                                        ; preds = %if.end9
  %18 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !9
  %tobool17 = icmp eq %struct._IO_FILE* %18, null
  br i1 %tobool17, label %return, label %if.then18

if.then18:                                        ; preds = %if.then16
  %19 = tail call i64 @fwrite(i8* getelementptr inbounds ([48 x i8]* @.str37, i64 0, i64 0), i64 47, i64 1, %struct._IO_FILE* %18)
  br label %return

if.end21:                                         ; preds = %if.end9
  %top = getelementptr inbounds %struct.loop* %loop, i64 0, i32 28
  %20 = load %struct.rtx_def** %top, align 8, !tbaa !89
  %tobool22 = icmp eq %struct.rtx_def* %20, null
  br i1 %tobool22, label %if.end128, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end21
  %cont = getelementptr inbounds %struct.loop* %loop, i64 0, i32 24
  %21 = load %struct.rtx_def** %cont, align 8, !tbaa !17
  %tobool23 = icmp eq %struct.rtx_def* %21, null
  br i1 %tobool23, label %if.end128, label %if.then24

if.then24:                                        ; preds = %land.lhs.true
  %arrayidx26 = getelementptr inbounds %struct.rtx_def* %12, i64 0, i32 1, i64 1
  %rtx27 = bitcast %union.rtunion_def* %arrayidx26 to %struct.rtx_def**
  %22 = load %struct.rtx_def** %rtx27, align 8, !tbaa !9
  %23 = load i32* @max_uid_for_loop, align 4, !tbaa !10
  %24 = load i32** @uid_luid, align 8, !tbaa !9
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then24
  %temp.0 = phi %struct.rtx_def* [ %22, %if.then24 ], [ %37, %do.cond ]
  %25 = getelementptr inbounds %struct.rtx_def* %temp.0, i64 0, i32 0
  %bf.load28 = load i32* %25, align 8
  %bf.clear29 = and i32 %bf.load28, 65535
  %cmp30 = icmp eq i32 %bf.clear29, 33
  br i1 %cmp30, label %if.then31, label %do.cond

if.then31:                                        ; preds = %do.body
  %arrayidx33 = getelementptr inbounds %struct.rtx_def* %temp.0, i64 0, i32 1, i64 7
  %rtx34 = bitcast %union.rtunion_def* %arrayidx33 to %struct.rtx_def**
  %26 = load %struct.rtx_def** %rtx34, align 8, !tbaa !9
  %cmp35 = icmp eq %struct.rtx_def* %26, null
  br i1 %cmp35, label %if.then36, label %if.end41

if.then36:                                        ; preds = %if.then31
  %27 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !9
  %tobool37 = icmp eq %struct._IO_FILE* %27, null
  br i1 %tobool37, label %return, label %if.then38

if.then38:                                        ; preds = %if.then36
  %28 = tail call i64 @fwrite(i8* getelementptr inbounds ([49 x i8]* @.str38, i64 0, i64 0), i64 48, i64 1, %struct._IO_FILE* %27)
  br label %return

if.end41:                                         ; preds = %if.then31
  %arrayidx46 = getelementptr inbounds %struct.rtx_def* %26, i64 0, i32 1, i64 0
  %rtint47 = bitcast %union.rtunion_def* %arrayidx46 to i32*
  %29 = load i32* %rtint47, align 4, !tbaa !10
  %cmp48 = icmp slt i32 %29, %23
  br i1 %cmp48, label %cond.true, label %do.cond

cond.true:                                        ; preds = %if.end41
  %idxprom = sext i32 %29 to i64
  %arrayidx63 = getelementptr inbounds i32* %24, i64 %idxprom
  %30 = load i32* %arrayidx63, align 4, !tbaa !10
  %arrayidx66 = getelementptr inbounds %struct.rtx_def* %20, i64 0, i32 1, i64 0
  %rtint67 = bitcast %union.rtunion_def* %arrayidx66 to i32*
  %31 = load i32* %rtint67, align 4, !tbaa !10
  %cmp68 = icmp slt i32 %31, %23
  br i1 %cmp68, label %cond.true69, label %cond.false76

cond.true69:                                      ; preds = %cond.true
  %idxprom74 = sext i32 %31 to i64
  %arrayidx75 = getelementptr inbounds i32* %24, i64 %idxprom74
  %32 = load i32* %arrayidx75, align 4, !tbaa !10
  %cmp79 = icmp sgt i32 %30, %32
  br i1 %cmp79, label %cond.true88, label %do.cond

cond.false76:                                     ; preds = %cond.true
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str13, i64 0, i64 0), i32 3601, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.loop_iterations, i64 0, i64 0)) #5
  unreachable

cond.true88:                                      ; preds = %cond.true69
  %arrayidx102 = getelementptr inbounds %struct.rtx_def* %21, i64 0, i32 1, i64 0
  %rtint103 = bitcast %union.rtunion_def* %arrayidx102 to i32*
  %33 = load i32* %rtint103, align 4, !tbaa !10
  %cmp104 = icmp slt i32 %33, %23
  br i1 %cmp104, label %cond.true105, label %cond.false112

cond.true105:                                     ; preds = %cond.true88
  %idxprom110 = sext i32 %33 to i64
  %arrayidx111 = getelementptr inbounds i32* %24, i64 %idxprom110
  %34 = load i32* %arrayidx111, align 4, !tbaa !10
  %cmp115 = icmp slt i32 %30, %34
  br i1 %cmp115, label %if.then116, label %do.cond

cond.false112:                                    ; preds = %cond.true88
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str13, i64 0, i64 0), i32 3602, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.loop_iterations, i64 0, i64 0)) #5
  unreachable

if.then116:                                       ; preds = %cond.true105
  %35 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !9
  %tobool117 = icmp eq %struct._IO_FILE* %35, null
  br i1 %tobool117, label %return, label %if.then118

if.then118:                                       ; preds = %if.then116
  %36 = tail call i64 @fwrite(i8* getelementptr inbounds ([48 x i8]* @.str37, i64 0, i64 0), i64 47, i64 1, %struct._IO_FILE* %35)
  br label %return

do.cond:                                          ; preds = %do.body, %cond.true105, %cond.true69, %if.end41
  %arrayidx124 = getelementptr inbounds %struct.rtx_def* %temp.0, i64 0, i32 1, i64 1
  %rtx125 = bitcast %union.rtunion_def* %arrayidx124 to %struct.rtx_def**
  %37 = load %struct.rtx_def** %rtx125, align 8, !tbaa !9
  %cmp127 = icmp eq %struct.rtx_def* %37, %21
  br i1 %cmp127, label %if.end128, label %do.body

if.end128:                                        ; preds = %do.cond, %land.lhs.true, %if.end21
  %call129 = tail call %struct.rtx_def* @get_condition_for_loop(%struct.loop* %loop, %struct.rtx_def* %12) #4
  %cmp130 = icmp eq %struct.rtx_def* %call129, null
  br i1 %cmp130, label %if.then131, label %if.end136

if.then131:                                       ; preds = %if.end128
  %38 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !9
  %tobool132 = icmp eq %struct._IO_FILE* %38, null
  br i1 %tobool132, label %return, label %if.then133

if.then133:                                       ; preds = %if.then131
  %39 = tail call i64 @fwrite(i8* getelementptr inbounds ([45 x i8]* @.str39, i64 0, i64 0), i64 44, i64 1, %struct._IO_FILE* %38)
  br label %return

if.end136:                                        ; preds = %if.end128
  %40 = getelementptr inbounds %struct.rtx_def* %call129, i64 0, i32 0
  %bf.load137 = load i32* %40, align 8
  %bf.clear138 = and i32 %bf.load137, 65535
  %fld139 = getelementptr inbounds %struct.rtx_def* %call129, i64 0, i32 1
  %rtx141 = bitcast [1 x %union.rtunion_def]* %fld139 to %struct.rtx_def**
  %41 = load %struct.rtx_def** %rtx141, align 8, !tbaa !9
  %arrayidx143 = getelementptr inbounds %struct.rtx_def* %call129, i64 0, i32 1, i64 1
  %rtx144 = bitcast %union.rtunion_def* %arrayidx143 to %struct.rtx_def**
  %42 = load %struct.rtx_def** %rtx144, align 8, !tbaa !9
  %43 = getelementptr inbounds %struct.rtx_def* %41, i64 0, i32 0
  %bf.load145 = load i32* %43, align 8
  %bf.clear146 = and i32 %bf.load145, 65535
  %cmp147 = icmp eq i32 %bf.clear146, 61
  br i1 %cmp147, label %if.end153, label %if.then148

if.then148:                                       ; preds = %if.end136
  %44 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !9
  %tobool149 = icmp eq %struct._IO_FILE* %44, null
  br i1 %tobool149, label %return, label %if.then150

if.then150:                                       ; preds = %if.then148
  %45 = tail call i64 @fwrite(i8* getelementptr inbounds ([51 x i8]* @.str40, i64 0, i64 0), i64 50, i64 1, %struct._IO_FILE* %44)
  br label %return

if.end153:                                        ; preds = %if.end136
  %arrayidx155 = getelementptr inbounds %struct.rtx_def* %41, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx155 to i32*
  %46 = load i32* %rtuint, align 4, !tbaa !10
  %n_regs = getelementptr inbounds i8* %0, i64 216
  %47 = bitcast i8* %n_regs to i32*
  %48 = load i32* %47, align 4, !tbaa !76
  %cmp156 = icmp uge i32 %46, %48
  %bf.clear159 = and i32 %bf.load145, 134217728
  %tobool160 = icmp eq i32 %bf.clear159, 0
  %or.cond884 = and i1 %cmp156, %tobool160
  br i1 %or.cond884, label %if.then161, label %if.end162

if.then161:                                       ; preds = %if.end153
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str13, i64 0, i64 0), i32 3651, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.loop_iterations, i64 0, i64 0)) #5
  unreachable

if.end162:                                        ; preds = %if.end153
  br i1 %cmp156, label %if.then168, label %if.else

if.then168:                                       ; preds = %if.end162
  %49 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !9
  %tobool169 = icmp eq %struct._IO_FILE* %49, null
  br i1 %tobool169, label %return, label %if.then170

if.then170:                                       ; preds = %if.then168
  %50 = tail call i64 @fwrite(i8* getelementptr inbounds ([58 x i8]* @.str41, i64 0, i64 0), i64 57, i64 1, %struct._IO_FILE* %49)
  br label %return

if.else:                                          ; preds = %if.end162
  %bf.lshr174 = lshr i32 %bf.load145, 16
  %bf.clear175 = and i32 %bf.lshr174, 255
  %idxprom176882 = zext i32 %bf.clear175 to i64
  %arrayidx177 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom176882
  %51 = load i16* %arrayidx177, align 2, !tbaa !90
  %cmp178 = icmp ugt i16 %51, 64
  br i1 %cmp178, label %if.then180, label %if.else185

if.then180:                                       ; preds = %if.else
  %52 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !9
  %tobool181 = icmp eq %struct._IO_FILE* %52, null
  br i1 %tobool181, label %return, label %if.then182

if.then182:                                       ; preds = %if.then180
  %53 = tail call i64 @fwrite(i8* getelementptr inbounds ([65 x i8]* @.str42, i64 0, i64 0), i64 64, i64 1, %struct._IO_FILE* %52)
  br label %return

if.else185:                                       ; preds = %if.else
  %arrayidx190 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom176882
  %54 = load i32* %arrayidx190, align 4, !tbaa !23
  %cmp191 = icmp eq i32 %54, 1
  br i1 %cmp191, label %if.else198, label %if.then193

if.then193:                                       ; preds = %if.else185
  %55 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !9
  %tobool194 = icmp eq %struct._IO_FILE* %55, null
  br i1 %tobool194, label %return, label %if.then195

if.then195:                                       ; preds = %if.then193
  %56 = tail call i64 @fwrite(i8* getelementptr inbounds ([48 x i8]* @.str43, i64 0, i64 0), i64 47, i64 1, %struct._IO_FILE* %55)
  br label %return

if.else198:                                       ; preds = %if.else185
  %idxprom202 = zext i32 %46 to i64
  %regs = bitcast i8* %ivs2 to %struct.iv**
  %57 = load %struct.iv** %regs, align 8, !tbaa !67
  %type = getelementptr inbounds %struct.iv* %57, i64 %idxprom202, i32 0
  %58 = load i32* %type, align 4, !tbaa !77
  switch i32 %58, label %if.else335 [
    i32 1, label %if.end214
    i32 3, label %if.then250
  ]

if.end214:                                        ; preds = %if.else198
  %class = getelementptr inbounds %struct.iv* %57, i64 %idxprom202, i32 1, i32 0
  %59 = load %struct.iv_class** %class, align 8, !tbaa !9
  %initial_value222 = getelementptr inbounds %struct.iv_class* %59, i64 0, i32 6
  %60 = load %struct.rtx_def** %initial_value222, align 8, !tbaa !57
  %biv = getelementptr inbounds %struct.iv_class* %59, i64 0, i32 2
  %61 = load %struct.induction** %biv, align 8, !tbaa !53
  %always_executed = getelementptr inbounds %struct.induction* %61, i64 0, i32 13
  %bf.load223 = load i16* %always_executed, align 4
  %62 = and i16 %bf.load223, 48
  %63 = icmp eq i16 %62, 16
  br i1 %63, label %if.end238, label %if.then233

if.then233:                                       ; preds = %if.end214
  %64 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !9
  %tobool234 = icmp eq %struct._IO_FILE* %64, null
  br i1 %tobool234, label %return, label %if.then235

if.then235:                                       ; preds = %if.then233
  %65 = tail call i64 @fwrite(i8* getelementptr inbounds ([70 x i8]* @.str44, i64 0, i64 0), i64 69, i64 1, %struct._IO_FILE* %64)
  br label %return

if.end238:                                        ; preds = %if.end214
  %66 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !9
  %tobool16.i = icmp eq %struct.induction* %61, null
  br i1 %tobool16.i, label %if.end344, label %for.body.i

for.body.i:                                       ; preds = %if.end238, %if.then.i.for.body.i_crit_edge
  %bf.load.i = phi i16 [ %bf.load.i.pre, %if.then.i.for.body.i_crit_edge ], [ %bf.load223, %if.end238 ]
  %v.018.i = phi %struct.induction* [ %v.0.i, %if.then.i.for.body.i_crit_edge ], [ %61, %if.end238 ]
  %result.017.i = phi %struct.rtx_def* [ %call.i, %if.then.i.for.body.i_crit_edge ], [ %66, %if.end238 ]
  %bf.clear.i = and i16 %bf.load.i, 8
  %tobool1.i = icmp eq i16 %bf.clear.i, 0
  br i1 %tobool1.i, label %if.end344, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %for.body.i
  %mult_val.i = getelementptr inbounds %struct.induction* %v.018.i, i64 0, i32 8
  %67 = load %struct.rtx_def** %mult_val.i, align 8, !tbaa !45
  %68 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !9
  %cmp.i = icmp eq %struct.rtx_def* %67, %68
  %bf.clear5.i = and i16 %bf.load.i, 32
  %tobool7.i = icmp eq i16 %bf.clear5.i, 0
  %or.cond.i = and i1 %cmp.i, %tobool7.i
  br i1 %or.cond.i, label %if.then.i, label %if.end344

if.then.i:                                        ; preds = %land.lhs.true.i
  %add_val.i = getelementptr inbounds %struct.induction* %v.018.i, i64 0, i32 9
  %69 = load %struct.rtx_def** %add_val.i, align 8, !tbaa !47
  %mode.i = getelementptr inbounds %struct.induction* %v.018.i, i64 0, i32 6
  %70 = load i32* %mode.i, align 4, !tbaa !48
  %call.i = tail call fastcc %struct.rtx_def* @fold_rtx_mult_add(%struct.rtx_def* %result.017.i, %struct.rtx_def* %67, %struct.rtx_def* %69, i32 %70) #4
  %next_iv.i = getelementptr inbounds %struct.induction* %v.018.i, i64 0, i32 17
  %v.0.i = load %struct.induction** %next_iv.i, align 8
  %tobool.i = icmp eq %struct.induction* %v.0.i, null
  br i1 %tobool.i, label %if.end344, label %if.then.i.for.body.i_crit_edge

if.then.i.for.body.i_crit_edge:                   ; preds = %if.then.i
  %always_computable.i.phi.trans.insert = getelementptr inbounds %struct.induction* %v.0.i, i64 0, i32 13
  %bf.load.i.pre = load i16* %always_computable.i.phi.trans.insert, align 4
  br label %for.body.i

if.then250:                                       ; preds = %if.else198
  %iv257 = getelementptr inbounds %struct.iv* %57, i64 %idxprom202, i32 1
  %info = bitcast %union.anon* %iv257 to %struct.induction**
  %71 = load %struct.induction** %info, align 8, !tbaa !9
  %src_reg = getelementptr inbounds %struct.induction* %71, i64 0, i32 2
  %72 = load %struct.rtx_def** %src_reg, align 8, !tbaa !58
  %arrayidx259 = getelementptr inbounds %struct.rtx_def* %72, i64 0, i32 1, i64 0
  %rtuint260 = bitcast %union.rtunion_def* %arrayidx259 to i32*
  %73 = load i32* %rtuint260, align 4, !tbaa !10
  %cmp262 = icmp ult i32 %73, %48
  br i1 %cmp262, label %if.end265, label %if.then264

if.then264:                                       ; preds = %if.then250
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str13, i64 0, i64 0), i32 3718, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.loop_iterations, i64 0, i64 0)) #5
  unreachable

if.end265:                                        ; preds = %if.then250
  %always_executed266 = getelementptr inbounds %struct.induction* %71, i64 0, i32 13
  %bf.load267 = load i16* %always_executed266, align 4
  %74 = and i16 %bf.load267, 48
  %75 = icmp eq i16 %74, 16
  br i1 %75, label %if.end284, label %if.then279

if.then279:                                       ; preds = %if.end265
  %76 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !9
  %tobool280 = icmp eq %struct._IO_FILE* %76, null
  br i1 %tobool280, label %return, label %if.then281

if.then281:                                       ; preds = %if.then279
  %77 = tail call i64 @fwrite(i8* getelementptr inbounds ([72 x i8]* @.str45, i64 0, i64 0), i64 71, i64 1, %struct._IO_FILE* %76)
  br label %return

if.end284:                                        ; preds = %if.end265
  %idxprom289 = zext i32 %73 to i64
  %class293 = getelementptr inbounds %struct.iv* %57, i64 %idxprom289, i32 1, i32 0
  %78 = load %struct.iv_class** %class293, align 8, !tbaa !9
  %79 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !9
  %biv.i893 = getelementptr inbounds %struct.iv_class* %78, i64 0, i32 2
  %v.015.i894 = load %struct.induction** %biv.i893, align 8
  %tobool16.i895 = icmp eq %struct.induction* %v.015.i894, null
  br i1 %tobool16.i895, label %biv_total_increment.exit917, label %for.body.i902

for.body.i902:                                    ; preds = %if.end284, %if.then.i915
  %v.018.i896 = phi %struct.induction* [ %v.0.i913, %if.then.i915 ], [ %v.015.i894, %if.end284 ]
  %result.017.i897 = phi %struct.rtx_def* [ %call.i911, %if.then.i915 ], [ %79, %if.end284 ]
  %always_computable.i898 = getelementptr inbounds %struct.induction* %v.018.i896, i64 0, i32 13
  %bf.load.i899 = load i16* %always_computable.i898, align 4
  %bf.clear.i900 = and i16 %bf.load.i899, 8
  %tobool1.i901 = icmp eq i16 %bf.clear.i900, 0
  br i1 %tobool1.i901, label %if.end323, label %land.lhs.true.i908

land.lhs.true.i908:                               ; preds = %for.body.i902
  %mult_val.i903 = getelementptr inbounds %struct.induction* %v.018.i896, i64 0, i32 8
  %80 = load %struct.rtx_def** %mult_val.i903, align 8, !tbaa !45
  %81 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !9
  %cmp.i904 = icmp eq %struct.rtx_def* %80, %81
  %bf.clear5.i905 = and i16 %bf.load.i899, 32
  %tobool7.i906 = icmp eq i16 %bf.clear5.i905, 0
  %or.cond.i907 = and i1 %cmp.i904, %tobool7.i906
  br i1 %or.cond.i907, label %if.then.i915, label %if.end323

if.then.i915:                                     ; preds = %land.lhs.true.i908
  %add_val.i909 = getelementptr inbounds %struct.induction* %v.018.i896, i64 0, i32 9
  %82 = load %struct.rtx_def** %add_val.i909, align 8, !tbaa !47
  %mode.i910 = getelementptr inbounds %struct.induction* %v.018.i896, i64 0, i32 6
  %83 = load i32* %mode.i910, align 4, !tbaa !48
  %call.i911 = tail call fastcc %struct.rtx_def* @fold_rtx_mult_add(%struct.rtx_def* %result.017.i897, %struct.rtx_def* %80, %struct.rtx_def* %82, i32 %83) #4
  %next_iv.i912 = getelementptr inbounds %struct.induction* %v.018.i896, i64 0, i32 17
  %v.0.i913 = load %struct.induction** %next_iv.i912, align 8
  %tobool.i914 = icmp eq %struct.induction* %v.0.i913, null
  br i1 %tobool.i914, label %biv_total_increment.exit917, label %for.body.i902

biv_total_increment.exit917:                      ; preds = %if.then.i915, %if.end284
  %retval.0.i916 = phi %struct.rtx_def* [ %79, %if.end284 ], [ %call.i911, %if.then.i915 ]
  %tobool295 = icmp eq %struct.rtx_def* %retval.0.i916, null
  br i1 %tobool295, label %if.end323, label %if.then296

if.then296:                                       ; preds = %biv_total_increment.exit917
  %mult_val = getelementptr inbounds %struct.induction* %71, i64 0, i32 8
  %84 = load %struct.rtx_def** %mult_val, align 8, !tbaa !45
  %call297 = tail call %struct.rtx_def* @extend_value_for_giv(%struct.induction* %71, %struct.rtx_def* %retval.0.i916) #4
  %85 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !9
  %mode = getelementptr inbounds %struct.induction* %71, i64 0, i32 6
  %86 = load i32* %mode, align 4, !tbaa !48
  %call298 = tail call fastcc %struct.rtx_def* @fold_rtx_mult_add(%struct.rtx_def* %84, %struct.rtx_def* %call297, %struct.rtx_def* %85, i32 %86)
  %biv_inc.0999 = load %struct.induction** %biv.i893, align 8
  %tobool3001000 = icmp eq %struct.induction* %biv_inc.0999, null
  br i1 %tobool3001000, label %if.end323, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.then296
  %insn = getelementptr inbounds %struct.induction* %71, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %biv_inc.01002 = phi %struct.induction* [ %biv_inc.0999, %for.body.lr.ph ], [ %biv_inc.0, %for.inc ]
  %offset.01001 = phi i64 [ 0, %for.body.lr.ph ], [ %offset.1, %for.inc ]
  %87 = load %struct.rtx_def** %insn, align 8, !tbaa !56
  %insn301 = getelementptr inbounds %struct.induction* %biv_inc.01002, i64 0, i32 0
  %88 = load %struct.rtx_def** %insn301, align 8, !tbaa !56
  %call302 = tail call i32 @loop_insn_first_p(%struct.rtx_def* %87, %struct.rtx_def* %88) #4
  %tobool303 = icmp eq i32 %call302, 0
  br i1 %tobool303, label %for.inc, label %if.then304

if.then304:                                       ; preds = %for.body
  %add_val = getelementptr inbounds %struct.induction* %biv_inc.01002, i64 0, i32 9
  %89 = load %struct.rtx_def** %add_val, align 8, !tbaa !47
  %90 = getelementptr inbounds %struct.rtx_def* %89, i64 0, i32 0
  %bf.load305 = load i32* %90, align 8
  %bf.clear306 = and i32 %bf.load305, 65535
  %cmp307 = icmp eq i32 %bf.clear306, 61
  br i1 %cmp307, label %if.then309, label %if.end318

if.then309:                                       ; preds = %if.then304
  %91 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !9
  %tobool310 = icmp eq %struct._IO_FILE* %91, null
  br i1 %tobool310, label %return, label %if.then311

if.then311:                                       ; preds = %if.then309
  %arrayidx314 = getelementptr inbounds %struct.rtx_def* %89, i64 0, i32 1, i64 0
  %rtuint315 = bitcast %union.rtunion_def* %arrayidx314 to i32*
  %92 = load i32* %rtuint315, align 4, !tbaa !10
  %call316 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %91, i8* getelementptr inbounds ([57 x i8]* @.str46, i64 0, i64 0), i32 %92) #4
  br label %return

if.end318:                                        ; preds = %if.then304
  %rtwint = getelementptr inbounds %struct.rtx_def* %89, i64 0, i32 1, i64 0, i32 0
  %93 = load i64* %rtwint, align 8, !tbaa !39
  %sub = sub nsw i64 %offset.01001, %93
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.end318
  %offset.1 = phi i64 [ %sub, %if.end318 ], [ %offset.01001, %for.body ]
  %next_iv = getelementptr inbounds %struct.induction* %biv_inc.01002, i64 0, i32 17
  %biv_inc.0 = load %struct.induction** %next_iv, align 8
  %tobool300 = icmp eq %struct.induction* %biv_inc.0, null
  br i1 %tobool300, label %if.end323, label %for.body

if.end323:                                        ; preds = %for.body.i902, %land.lhs.true.i908, %for.inc, %if.then296, %biv_total_increment.exit917
  %offset.2 = phi i64 [ 0, %biv_total_increment.exit917 ], [ 0, %if.then296 ], [ %offset.1, %for.inc ], [ 0, %land.lhs.true.i908 ], [ 0, %for.body.i902 ]
  %increment.0 = phi %struct.rtx_def* [ null, %biv_total_increment.exit917 ], [ %call298, %if.then296 ], [ %call298, %for.inc ], [ null, %land.lhs.true.i908 ], [ null, %for.body.i902 ]
  %94 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !9
  %tobool324 = icmp eq %struct._IO_FILE* %94, null
  br i1 %tobool324, label %if.end327, label %if.then325

if.then325:                                       ; preds = %if.end323
  %call326 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %94, i8* getelementptr inbounds ([56 x i8]* @.str47, i64 0, i64 0), i64 %offset.2) #4
  br label %if.end327

if.end327:                                        ; preds = %if.end323, %if.then325
  %initial_value328 = getelementptr inbounds %struct.iv_class* %78, i64 0, i32 6
  %95 = load %struct.rtx_def** %initial_value328, align 8, !tbaa !57
  %call329 = tail call %struct.rtx_def* @extend_value_for_giv(%struct.induction* %71, %struct.rtx_def* %95) #4
  %mult_val330 = getelementptr inbounds %struct.induction* %71, i64 0, i32 8
  %96 = load %struct.rtx_def** %mult_val330, align 8, !tbaa !45
  %call331 = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %call329, i64 %offset.2) #4
  %add_val332 = getelementptr inbounds %struct.induction* %71, i64 0, i32 9
  %97 = load %struct.rtx_def** %add_val332, align 8, !tbaa !47
  %mode333 = getelementptr inbounds %struct.induction* %71, i64 0, i32 6
  %98 = load i32* %mode333, align 4, !tbaa !48
  %call334 = tail call fastcc %struct.rtx_def* @fold_rtx_mult_add(%struct.rtx_def* %96, %struct.rtx_def* %call331, %struct.rtx_def* %97, i32 %98)
  br label %if.end344

if.else335:                                       ; preds = %if.else198
  %99 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !9
  %tobool336 = icmp eq %struct._IO_FILE* %99, null
  br i1 %tobool336, label %return, label %if.then337

if.then337:                                       ; preds = %if.else335
  %100 = tail call i64 @fwrite(i8* getelementptr inbounds ([54 x i8]* @.str48, i64 0, i64 0), i64 53, i64 1, %struct._IO_FILE* %99)
  br label %return

if.end344:                                        ; preds = %if.then.i, %land.lhs.true.i, %for.body.i, %if.end238, %if.end327
  %bl.0 = phi %struct.iv_class* [ %78, %if.end327 ], [ %59, %if.end238 ], [ %59, %for.body.i ], [ %59, %land.lhs.true.i ], [ %59, %if.then.i ]
  %increment.1 = phi %struct.rtx_def* [ %increment.0, %if.end327 ], [ %66, %if.end238 ], [ %call.i, %if.then.i ], [ null, %land.lhs.true.i ], [ null, %for.body.i ]
  %initial_value.0 = phi %struct.rtx_def* [ %call334, %if.end327 ], [ %60, %if.end238 ], [ %60, %for.body.i ], [ %60, %land.lhs.true.i ], [ %60, %if.then.i ]
  %cmp345 = icmp eq %struct.rtx_def* %initial_value.0, null
  br i1 %cmp345, label %return, label %if.end348

if.end348:                                        ; preds = %if.end344
  switch i32 %bf.clear138, label %sw.default [
    i32 110, label %sw.bb
    i32 106, label %sw.epilog
    i32 108, label %sw.bb350
    i32 104, label %sw.bb351
    i32 103, label %sw.bb352
    i32 111, label %sw.bb353
    i32 107, label %sw.bb354
    i32 109, label %sw.bb355
    i32 105, label %sw.bb357
    i32 102, label %sw.bb357
  ]

sw.bb:                                            ; preds = %if.end348
  br label %sw.epilog

sw.bb350:                                         ; preds = %if.end348
  br label %sw.bb351

sw.bb351:                                         ; preds = %if.end348, %sw.bb350
  %unsigned_p.1 = phi i32 [ 0, %if.end348 ], [ 1, %sw.bb350 ]
  br label %sw.epilog

sw.bb352:                                         ; preds = %if.end348
  br label %sw.epilog

sw.bb353:                                         ; preds = %if.end348
  br label %sw.bb354

sw.bb354:                                         ; preds = %if.end348, %sw.bb353
  %unsigned_p.2 = phi i32 [ 0, %if.end348 ], [ 1, %sw.bb353 ]
  br label %sw.epilog

sw.bb355:                                         ; preds = %if.end348
  br label %sw.bb357

sw.bb357:                                         ; preds = %sw.bb355, %if.end348, %if.end348
  %unsigned_p.4 = phi i32 [ 0, %if.end348 ], [ 0, %if.end348 ], [ 1, %sw.bb355 ]
  br label %sw.epilog

sw.default:                                       ; preds = %if.end348
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str13, i64 0, i64 0), i32 3820, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.loop_iterations, i64 0, i64 0)) #5
  unreachable

sw.epilog:                                        ; preds = %sw.bb, %if.end348, %sw.bb357, %sw.bb354, %sw.bb352, %sw.bb351
  %unsigned_p.5 = phi i32 [ %unsigned_p.4, %sw.bb357 ], [ %unsigned_p.2, %sw.bb354 ], [ 0, %sw.bb352 ], [ %unsigned_p.1, %sw.bb351 ], [ 0, %if.end348 ], [ 1, %sw.bb ]
  %compare_dir.0 = phi i32 [ 0, %sw.bb357 ], [ 1, %sw.bb354 ], [ 0, %sw.bb352 ], [ -1, %sw.bb351 ], [ 1, %if.end348 ], [ 1, %sw.bb ]
  %off_by_one.0 = phi i32 [ 0, %sw.bb357 ], [ 0, %sw.bb354 ], [ 0, %sw.bb352 ], [ -1, %sw.bb351 ], [ 1, %if.end348 ], [ 1, %sw.bb ]
  %101 = getelementptr inbounds %struct.rtx_def* %42, i64 0, i32 0
  %bf.load358 = load i32* %101, align 8
  %bf.clear359 = and i32 %bf.load358, 65535
  %cmp360 = icmp eq i32 %bf.clear359, 61
  br i1 %cmp360, label %land.lhs.true362, label %if.end371

land.lhs.true362:                                 ; preds = %sw.epilog
  %call363 = tail call i32 @loop_invariant_p(%struct.loop* %loop, %struct.rtx_def* %42) #4
  %tobool364 = icmp eq i32 %call363, 0
  br i1 %tobool364, label %if.end371, label %if.then365

if.then365:                                       ; preds = %land.lhs.true362
  %loop.idx892 = getelementptr %struct.loop* %loop, i64 0, i32 26
  %loop.idx892.val = load %struct.rtx_def** %loop.idx892, align 8, !tbaa !7
  %call366 = tail call fastcc %struct.rtx_def* @loop_find_equiv_value(%struct.rtx_def* %loop.idx892.val, %struct.rtx_def* %42)
  %call367 = tail call i32 @loop_invariant_p(%struct.loop* %loop, %struct.rtx_def* %call366) #4
  %tobool368 = icmp eq i32 %call367, 0
  %.call366 = select i1 %tobool368, %struct.rtx_def* %42, %struct.rtx_def* %call366
  br label %if.end371

if.end371:                                        ; preds = %if.then365, %land.lhs.true362, %sw.epilog
  %final_value.0 = phi %struct.rtx_def* [ %42, %land.lhs.true362 ], [ %42, %sw.epilog ], [ %.call366, %if.then365 ]
  %tobool372 = icmp eq i32 %off_by_one.0, 0
  %conv379.pre = sext i32 %off_by_one.0 to i64
  br i1 %tobool372, label %if.end376, label %if.then373

if.then373:                                       ; preds = %if.end371
  %call375 = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %final_value.0, i64 %conv379.pre) #4
  br label %if.end376

if.end376:                                        ; preds = %if.end371, %if.then373
  %final_value.1 = phi %struct.rtx_def* [ %call375, %if.then373 ], [ %final_value.0, %if.end371 ]
  store %struct.rtx_def* %initial_value.0, %struct.rtx_def** %2, align 8, !tbaa !73
  store %struct.rtx_def* %42, %struct.rtx_def** %4, align 8, !tbaa !92
  %call380 = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %42, i64 %conv379.pre) #4
  store %struct.rtx_def* %call380, %struct.rtx_def** %5, align 8, !tbaa !74
  store %struct.rtx_def* %increment.1, %struct.rtx_def** %7, align 8, !tbaa !71
  store %struct.rtx_def* %41, %struct.rtx_def** %8, align 8, !tbaa !72
  %comparison_code384 = getelementptr inbounds i8* %0, i64 88
  %102 = bitcast i8* %comparison_code384 to i32*
  store i32 %bf.clear138, i32* %102, align 4, !tbaa !31
  store %struct.iv_class* %bl.0, %struct.iv_class** %10, align 8, !tbaa !88
  %103 = getelementptr inbounds %struct.rtx_def* %initial_value.0, i64 0, i32 0
  %bf.load386 = load i32* %103, align 8
  %bf.clear387 = and i32 %bf.load386, 65535
  %cmp388 = icmp eq i32 %bf.clear387, 61
  br i1 %cmp388, label %if.then390, label %if.end487

if.then390:                                       ; preds = %if.end376
  %104 = getelementptr inbounds %struct.rtx_def* %final_value.1, i64 0, i32 0
  %bf.load391 = load i32* %104, align 8
  %bf.clear392 = and i32 %bf.load391, 65535
  %cmp393 = icmp eq i32 %bf.clear392, 75
  br i1 %cmp393, label %if.then395, label %if.end403

if.then395:                                       ; preds = %if.then390
  %fld396 = getelementptr inbounds %struct.rtx_def* %final_value.1, i64 0, i32 1
  %rtx398 = bitcast [1 x %union.rtunion_def]* %fld396 to %struct.rtx_def**
  %105 = load %struct.rtx_def** %rtx398, align 8, !tbaa !9
  %arrayidx400 = getelementptr inbounds %struct.rtx_def* %final_value.1, i64 0, i32 1, i64 1
  %rtx401 = bitcast %union.rtunion_def* %arrayidx400 to %struct.rtx_def**
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %105, i64 0, i32 0
  %bf.load404.pre = load i32* %.phi.trans.insert, align 8
  br label %if.end403

if.end403:                                        ; preds = %if.then390, %if.then395
  %bf.load404 = phi i32 [ %bf.load404.pre, %if.then395 ], [ %bf.load391, %if.then390 ]
  %reg2.0 = phi %struct.rtx_def* [ %105, %if.then395 ], [ %final_value.1, %if.then390 ]
  %const2.0.in = phi %struct.rtx_def** [ %rtx401, %if.then395 ], [ getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), %if.then390 ]
  %const2.0 = load %struct.rtx_def** %const2.0.in, align 8
  %106 = getelementptr inbounds %struct.rtx_def* %reg2.0, i64 0, i32 0
  %bf.clear405 = and i32 %bf.load404, 65535
  %cmp406 = icmp ne i32 %bf.clear405, 61
  %cmp409 = icmp eq %struct.rtx_def* %reg2.0, %initial_value.0
  %or.cond887 = or i1 %cmp406, %cmp409
  br i1 %or.cond887, label %if.else439, label %if.then411

if.then411:                                       ; preds = %if.end403
  %loop.idx891 = getelementptr %struct.loop* %loop, i64 0, i32 26
  %loop.idx891.val = load %struct.rtx_def** %loop.idx891, align 8, !tbaa !7
  %call413 = tail call fastcc %struct.rtx_def* @loop_find_equiv_value(%struct.rtx_def* %loop.idx891.val, %struct.rtx_def* %initial_value.0)
  %107 = getelementptr inbounds %struct.rtx_def* %call413, i64 0, i32 0
  %bf.load.i918 = load i32* %107, align 8
  %bf.clear.i919 = and i32 %bf.load.i918, 65535
  switch i32 %bf.clear.i919, label %if.else417 [
    i32 61, label %land.lhs.true.i921
    i32 75, label %land.lhs.true.i921
  ]

land.lhs.true.i921:                               ; preds = %if.then411, %if.then411
  %bf.load4.i = load i32* %106, align 8
  %bf.clear5.i920 = and i32 %bf.load4.i, 65535
  switch i32 %bf.clear5.i920, label %if.else417 [
    i32 61, label %if.then.i922
    i32 75, label %if.then.i922
  ]

if.then.i922:                                     ; preds = %land.lhs.true.i921, %land.lhs.true.i921
  %cmp13.i = icmp eq i32 %bf.clear.i919, 75
  br i1 %cmp13.i, label %if.then14.i, label %if.end.i

if.then14.i:                                      ; preds = %if.then.i922
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %call413, i64 0, i32 1, i64 1
  %rtx.i = bitcast %union.rtunion_def* %arrayidx.i to %struct.rtx_def**
  %arrayidx16.i = getelementptr inbounds %struct.rtx_def* %call413, i64 0, i32 1, i64 0
  %rtx17.i = bitcast %union.rtunion_def* %arrayidx16.i to %struct.rtx_def**
  %108 = load %struct.rtx_def** %rtx17.i, align 8, !tbaa !9
  br label %if.end.i

if.end.i:                                         ; preds = %if.then14.i, %if.then.i922
  %op00.0.i = phi %struct.rtx_def* [ %108, %if.then14.i ], [ %call413, %if.then.i922 ]
  %op01.0.in.i = phi %struct.rtx_def** [ %rtx.i, %if.then14.i ], [ getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), %if.then.i922 ]
  %op01.0.i = load %struct.rtx_def** %op01.0.in.i, align 8
  %cmp20.i = icmp eq i32 %bf.clear5.i920, 75
  br i1 %cmp20.i, label %if.then21.i, label %if.end29.i

if.then21.i:                                      ; preds = %if.end.i
  %arrayidx23.i = getelementptr inbounds %struct.rtx_def* %reg2.0, i64 0, i32 1, i64 1
  %rtx24.i = bitcast %union.rtunion_def* %arrayidx23.i to %struct.rtx_def**
  %arrayidx26.i = getelementptr inbounds %struct.rtx_def* %reg2.0, i64 0, i32 1, i64 0
  %rtx27.i = bitcast %union.rtunion_def* %arrayidx26.i to %struct.rtx_def**
  %109 = load %struct.rtx_def** %rtx27.i, align 8, !tbaa !9
  br label %if.end29.i

if.end29.i:                                       ; preds = %if.then21.i, %if.end.i
  %op10.0.i = phi %struct.rtx_def* [ %109, %if.then21.i ], [ %reg2.0, %if.end.i ]
  %op11.0.in.i = phi %struct.rtx_def** [ %rtx24.i, %if.then21.i ], [ getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), %if.end.i ]
  %op11.0.i = load %struct.rtx_def** %op11.0.in.i, align 8
  %110 = getelementptr inbounds %struct.rtx_def* %op00.0.i, i64 0, i32 0
  %bf.load30.i = load i32* %110, align 8
  %bf.clear31.i = and i32 %bf.load30.i, 65535
  %cmp32.i = icmp eq i32 %bf.clear31.i, 61
  br i1 %cmp32.i, label %land.lhs.true33.i, label %if.else38.i

land.lhs.true33.i:                                ; preds = %if.end29.i
  %cmp34.i = icmp eq %struct.rtx_def* %op00.0.i, %op10.0.i
  %cmp36.i = icmp eq %struct.rtx_def* %op00.0.i, %op11.0.i
  %or.cond.i923 = or i1 %cmp34.i, %cmp36.i
  br i1 %or.cond.i923, label %find_common_reg_term.exit, label %if.else38.i

if.else38.i:                                      ; preds = %land.lhs.true33.i, %if.end29.i
  %111 = getelementptr inbounds %struct.rtx_def* %op01.0.i, i64 0, i32 0
  %bf.load39.i = load i32* %111, align 8
  %bf.clear40.i = and i32 %bf.load39.i, 65535
  %cmp41.i = icmp eq i32 %bf.clear40.i, 61
  br i1 %cmp41.i, label %land.lhs.true42.i, label %if.else417

land.lhs.true42.i:                                ; preds = %if.else38.i
  %cmp43.i = icmp eq %struct.rtx_def* %op01.0.i, %op10.0.i
  %cmp45.i = icmp eq %struct.rtx_def* %op01.0.i, %op11.0.i
  %or.cond68.i = or i1 %cmp43.i, %cmp45.i
  br i1 %or.cond68.i, label %find_common_reg_term.exit, label %if.else417

find_common_reg_term.exit:                        ; preds = %land.lhs.true33.i, %land.lhs.true42.i
  %retval.0.i924 = phi %struct.rtx_def* [ %op00.0.i, %land.lhs.true33.i ], [ %op01.0.i, %land.lhs.true42.i ]
  %tobool415 = icmp eq %struct.rtx_def* %retval.0.i924, null
  br i1 %tobool415, label %if.else417, label %if.end487

if.else417:                                       ; preds = %land.lhs.true42.i, %if.else38.i, %land.lhs.true.i921, %if.then411, %find_common_reg_term.exit
  %loop.idx890.val = load %struct.rtx_def** %loop.idx891, align 8, !tbaa !7
  %call418 = tail call fastcc %struct.rtx_def* @loop_find_equiv_value(%struct.rtx_def* %loop.idx890.val, %struct.rtx_def* %reg2.0)
  %112 = load %struct.rtx_def** %8, align 8, !tbaa !72
  %cmp420 = icmp eq %struct.rtx_def* %call418, %112
  %initial_value.0.call418 = select i1 %cmp420, %struct.rtx_def* %initial_value.0, %struct.rtx_def* %call418
  %cmp424 = icmp eq %struct.rtx_def* %initial_value.0.call418, %initial_value.0
  br i1 %cmp424, label %if.then426, label %if.end487

if.then426:                                       ; preds = %if.else417
  %113 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !9
  %cmp427 = icmp eq %struct.rtx_def* %const2.0, %113
  br i1 %cmp427, label %if.end487, label %cond.false430

cond.false430:                                    ; preds = %if.then426
  %bf.load431 = load i32* %103, align 8
  %bf.lshr432 = lshr i32 %bf.load431, 16
  %bf.clear433 = and i32 %bf.lshr432, 255
  %call434 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %bf.clear433, %struct.rtx_def* %initial_value.0, %struct.rtx_def* %const2.0) #4
  br label %if.end487

if.else439:                                       ; preds = %if.end403
  %vtop = getelementptr inbounds %struct.loop* %loop, i64 0, i32 23
  %114 = load %struct.rtx_def** %vtop, align 8, !tbaa !18
  %tobool440 = icmp ne %struct.rtx_def* %114, null
  %cmp444 = icmp eq i32 %bf.clear405, 54
  %or.cond996 = and i1 %tobool440, %cmp444
  br i1 %or.cond996, label %if.then446, label %if.end487

if.then446:                                       ; preds = %if.else439
  %loop.idx889 = getelementptr %struct.loop* %loop, i64 0, i32 26
  %loop.idx889.val = load %struct.rtx_def** %loop.idx889, align 8, !tbaa !7
  %call448 = tail call fastcc %struct.rtx_def* @loop_find_equiv_value(%struct.rtx_def* %loop.idx889.val, %struct.rtx_def* %initial_value.0)
  %115 = getelementptr inbounds %struct.rtx_def* %call448, i64 0, i32 0
  %bf.load449 = load i32* %115, align 8
  %bf.clear450 = and i32 %bf.load449, 65535
  %cmp451 = icmp eq i32 %bf.clear450, 76
  br i1 %cmp451, label %land.lhs.true453, label %if.end487

land.lhs.true453:                                 ; preds = %if.then446
  %fld454 = getelementptr inbounds %struct.rtx_def* %call448, i64 0, i32 1
  %rtx456 = bitcast [1 x %union.rtunion_def]* %fld454 to %struct.rtx_def**
  %116 = load %struct.rtx_def** %rtx456, align 8, !tbaa !9
  %117 = getelementptr inbounds %struct.rtx_def* %116, i64 0, i32 0
  %bf.load457 = load i32* %117, align 8
  %bf.clear458 = and i32 %bf.load457, 65535
  %cmp459 = icmp eq i32 %bf.clear458, 61
  br i1 %cmp459, label %if.then461, label %if.end487

if.then461:                                       ; preds = %land.lhs.true453
  %loop.idx888.val = load %struct.rtx_def** %loop.idx889, align 8, !tbaa !7
  %call465 = tail call fastcc %struct.rtx_def* @loop_find_equiv_value(%struct.rtx_def* %loop.idx888.val, %struct.rtx_def* %116)
  %118 = getelementptr inbounds %struct.rtx_def* %call465, i64 0, i32 0
  %bf.load466 = load i32* %118, align 8
  %bf.clear467 = and i32 %bf.load466, 65535
  %cmp468 = icmp eq i32 %bf.clear467, 75
  br i1 %cmp468, label %land.lhs.true470, label %if.end487

land.lhs.true470:                                 ; preds = %if.then461
  %fld471 = getelementptr inbounds %struct.rtx_def* %call465, i64 0, i32 1
  %rtx473 = bitcast [1 x %union.rtunion_def]* %fld471 to %struct.rtx_def**
  %119 = load %struct.rtx_def** %rtx473, align 8, !tbaa !9
  %arrayidx475 = getelementptr inbounds %struct.rtx_def* %call448, i64 0, i32 1, i64 1
  %rtx476 = bitcast %union.rtunion_def* %arrayidx475 to %struct.rtx_def**
  %120 = load %struct.rtx_def** %rtx476, align 8, !tbaa !9
  %cmp477 = icmp eq %struct.rtx_def* %119, %120
  br i1 %cmp477, label %if.then479, label %if.end487

if.then479:                                       ; preds = %land.lhs.true470
  %arrayidx481 = getelementptr inbounds %struct.rtx_def* %call465, i64 0, i32 1, i64 1
  %rtx482 = bitcast %union.rtunion_def* %arrayidx481 to %struct.rtx_def**
  %121 = load %struct.rtx_def** %rtx482, align 8, !tbaa !9
  br label %if.end487

if.end487:                                        ; preds = %if.else439, %cond.false430, %if.then426, %find_common_reg_term.exit, %if.else417, %if.then446, %land.lhs.true453, %if.then479, %land.lhs.true470, %if.then461, %if.end376
  %final_value.2 = phi %struct.rtx_def* [ %final_value.1, %if.else417 ], [ %final_value.1, %if.then479 ], [ %final_value.1, %land.lhs.true470 ], [ %final_value.1, %if.then461 ], [ %final_value.1, %land.lhs.true453 ], [ %final_value.1, %if.then446 ], [ %final_value.1, %if.else439 ], [ %final_value.1, %if.end376 ], [ %final_value.1, %find_common_reg_term.exit ], [ %call434, %cond.false430 ], [ %initial_value.0, %if.then426 ]
  %initial_value.1 = phi %struct.rtx_def* [ %initial_value.0, %if.else417 ], [ %121, %if.then479 ], [ %initial_value.0, %land.lhs.true470 ], [ %initial_value.0, %if.then461 ], [ %initial_value.0, %land.lhs.true453 ], [ %initial_value.0, %if.then446 ], [ %initial_value.0, %if.else439 ], [ %initial_value.0, %if.end376 ], [ %call413, %find_common_reg_term.exit ], [ %initial_value.0, %cond.false430 ], [ %initial_value.0, %if.then426 ]
  %vtop488 = getelementptr inbounds %struct.loop* %loop, i64 0, i32 23
  %122 = load %struct.rtx_def** %vtop488, align 8, !tbaa !18
  %tobool489 = icmp eq %struct.rtx_def* %122, null
  br i1 %tobool489, label %if.end496, label %land.lhs.true490

land.lhs.true490:                                 ; preds = %if.end487
  %123 = getelementptr inbounds %struct.rtx_def* %initial_value.1, i64 0, i32 0
  %bf.load.i925 = load i32* %123, align 8
  %bf.clear.i926 = and i32 %bf.load.i925, 65535
  switch i32 %bf.clear.i926, label %if.end496 [
    i32 61, label %land.lhs.true.i929
    i32 75, label %land.lhs.true.i929
  ]

land.lhs.true.i929:                               ; preds = %land.lhs.true490, %land.lhs.true490
  %bf.load.i971.in = getelementptr inbounds %struct.rtx_def* %final_value.2, i64 0, i32 0
  %bf.load.i971 = load i32* %bf.load.i971.in, align 8
  %bf.clear5.i928 = and i32 %bf.load.i971, 65535
  switch i32 %bf.clear5.i928, label %if.end496 [
    i32 61, label %if.then.i931
    i32 75, label %if.then.i931
  ]

if.then.i931:                                     ; preds = %land.lhs.true.i929, %land.lhs.true.i929
  %cmp13.i930 = icmp eq i32 %bf.clear.i926, 75
  br i1 %cmp13.i930, label %if.then14.i936, label %if.end.i941

if.then14.i936:                                   ; preds = %if.then.i931
  %arrayidx.i932 = getelementptr inbounds %struct.rtx_def* %initial_value.1, i64 0, i32 1, i64 1
  %rtx.i933 = bitcast %union.rtunion_def* %arrayidx.i932 to %struct.rtx_def**
  %arrayidx16.i934 = getelementptr inbounds %struct.rtx_def* %initial_value.1, i64 0, i32 1, i64 0
  %rtx17.i935 = bitcast %union.rtunion_def* %arrayidx16.i934 to %struct.rtx_def**
  %124 = load %struct.rtx_def** %rtx17.i935, align 8, !tbaa !9
  br label %if.end.i941

if.end.i941:                                      ; preds = %if.then14.i936, %if.then.i931
  %op00.0.i937 = phi %struct.rtx_def* [ %124, %if.then14.i936 ], [ %initial_value.1, %if.then.i931 ]
  %op01.0.in.i938 = phi %struct.rtx_def** [ %rtx.i933, %if.then14.i936 ], [ getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), %if.then.i931 ]
  %op01.0.i939 = load %struct.rtx_def** %op01.0.in.i938, align 8
  %cmp20.i940 = icmp eq i32 %bf.clear5.i928, 75
  br i1 %cmp20.i940, label %if.then21.i946, label %if.end29.i953

if.then21.i946:                                   ; preds = %if.end.i941
  %arrayidx23.i942 = getelementptr inbounds %struct.rtx_def* %final_value.2, i64 0, i32 1, i64 1
  %rtx24.i943 = bitcast %union.rtunion_def* %arrayidx23.i942 to %struct.rtx_def**
  %arrayidx26.i944 = getelementptr inbounds %struct.rtx_def* %final_value.2, i64 0, i32 1, i64 0
  %rtx27.i945 = bitcast %union.rtunion_def* %arrayidx26.i944 to %struct.rtx_def**
  %125 = load %struct.rtx_def** %rtx27.i945, align 8, !tbaa !9
  br label %if.end29.i953

if.end29.i953:                                    ; preds = %if.then21.i946, %if.end.i941
  %op10.0.i947 = phi %struct.rtx_def* [ %125, %if.then21.i946 ], [ %final_value.2, %if.end.i941 ]
  %op11.0.in.i948 = phi %struct.rtx_def** [ %rtx24.i943, %if.then21.i946 ], [ getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), %if.end.i941 ]
  %op11.0.i949 = load %struct.rtx_def** %op11.0.in.i948, align 8
  %126 = getelementptr inbounds %struct.rtx_def* %op00.0.i937, i64 0, i32 0
  %bf.load30.i950 = load i32* %126, align 8
  %bf.clear31.i951 = and i32 %bf.load30.i950, 65535
  %cmp32.i952 = icmp eq i32 %bf.clear31.i951, 61
  br i1 %cmp32.i952, label %land.lhs.true33.i957, label %if.else38.i961

land.lhs.true33.i957:                             ; preds = %if.end29.i953
  %cmp34.i954 = icmp eq %struct.rtx_def* %op00.0.i937, %op10.0.i947
  %cmp36.i955 = icmp eq %struct.rtx_def* %op00.0.i937, %op11.0.i949
  %or.cond.i956 = or i1 %cmp34.i954, %cmp36.i955
  br i1 %or.cond.i956, label %find_common_reg_term.exit968, label %if.else38.i961

if.else38.i961:                                   ; preds = %land.lhs.true33.i957, %if.end29.i953
  %127 = getelementptr inbounds %struct.rtx_def* %op01.0.i939, i64 0, i32 0
  %bf.load39.i958 = load i32* %127, align 8
  %bf.clear40.i959 = and i32 %bf.load39.i958, 65535
  %cmp41.i960 = icmp eq i32 %bf.clear40.i959, 61
  br i1 %cmp41.i960, label %land.lhs.true42.i965, label %if.end496

land.lhs.true42.i965:                             ; preds = %if.else38.i961
  %cmp43.i962 = icmp eq %struct.rtx_def* %op01.0.i939, %op10.0.i947
  %cmp45.i963 = icmp eq %struct.rtx_def* %op01.0.i939, %op11.0.i949
  %or.cond68.i964 = or i1 %cmp43.i962, %cmp45.i963
  br i1 %or.cond68.i964, label %find_common_reg_term.exit968, label %if.end496

find_common_reg_term.exit968:                     ; preds = %land.lhs.true33.i957, %land.lhs.true42.i965
  %retval.0.i967 = phi %struct.rtx_def* [ %op00.0.i937, %land.lhs.true33.i957 ], [ %op01.0.i939, %land.lhs.true42.i965 ]
  %tobool492 = icmp eq %struct.rtx_def* %retval.0.i967, null
  br i1 %tobool492, label %if.end496, label %if.then493

if.then493:                                       ; preds = %find_common_reg_term.exit968
  %cmp.i976 = icmp eq %struct.rtx_def* %initial_value.1, %retval.0.i967
  br i1 %cmp.i976, label %if.then.i977, label %if.end.i981

if.then.i977:                                     ; preds = %if.then493
  %128 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !9
  br label %subtract_reg_term.exit992

if.end.i981:                                      ; preds = %if.then493
  br i1 %cmp13.i930, label %if.then2.i987, label %if.end18.i990

if.then2.i987:                                    ; preds = %if.end.i981
  %fld.i982 = getelementptr inbounds %struct.rtx_def* %initial_value.1, i64 0, i32 1
  %rtx.i983 = bitcast [1 x %union.rtunion_def]* %fld.i982 to %struct.rtx_def**
  %129 = load %struct.rtx_def** %rtx.i983, align 8, !tbaa !9
  %cmp3.i984 = icmp eq %struct.rtx_def* %129, %retval.0.i967
  %arrayidx6.i985 = getelementptr inbounds %struct.rtx_def* %initial_value.1, i64 0, i32 1, i64 1
  %rtx7.i986 = bitcast %union.rtunion_def* %arrayidx6.i985 to %struct.rtx_def**
  %130 = load %struct.rtx_def** %rtx7.i986, align 8, !tbaa !9
  br i1 %cmp3.i984, label %subtract_reg_term.exit992, label %if.else.i989

if.else.i989:                                     ; preds = %if.then2.i987
  %cmp11.i988 = icmp eq %struct.rtx_def* %130, %retval.0.i967
  br i1 %cmp11.i988, label %subtract_reg_term.exit992, label %if.end18.i990

if.end18.i990:                                    ; preds = %if.else.i989, %if.end.i981
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str13, i64 0, i64 0), i32 3476, i8* getelementptr inbounds ([18 x i8]* @__FUNCTION__.subtract_reg_term, i64 0, i64 0)) #5
  unreachable

subtract_reg_term.exit992:                        ; preds = %if.then.i977, %if.then2.i987, %if.else.i989
  %retval.0.i991 = phi %struct.rtx_def* [ %128, %if.then.i977 ], [ %130, %if.then2.i987 ], [ %129, %if.else.i989 ]
  %cmp.i969 = icmp eq %struct.rtx_def* %final_value.2, %retval.0.i967
  br i1 %cmp.i969, label %if.then.i970, label %if.end.i973

if.then.i970:                                     ; preds = %subtract_reg_term.exit992
  %131 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !9
  br label %if.end496

if.end.i973:                                      ; preds = %subtract_reg_term.exit992
  br i1 %cmp20.i940, label %if.then2.i, label %if.end18.i

if.then2.i:                                       ; preds = %if.end.i973
  %fld.i = getelementptr inbounds %struct.rtx_def* %final_value.2, i64 0, i32 1
  %rtx.i974 = bitcast [1 x %union.rtunion_def]* %fld.i to %struct.rtx_def**
  %132 = load %struct.rtx_def** %rtx.i974, align 8, !tbaa !9
  %cmp3.i = icmp eq %struct.rtx_def* %132, %retval.0.i967
  %arrayidx6.i = getelementptr inbounds %struct.rtx_def* %final_value.2, i64 0, i32 1, i64 1
  %rtx7.i = bitcast %union.rtunion_def* %arrayidx6.i to %struct.rtx_def**
  %133 = load %struct.rtx_def** %rtx7.i, align 8, !tbaa !9
  br i1 %cmp3.i, label %if.end496, label %if.else.i

if.else.i:                                        ; preds = %if.then2.i
  %cmp11.i = icmp eq %struct.rtx_def* %133, %retval.0.i967
  br i1 %cmp11.i, label %if.end496, label %if.end18.i

if.end18.i:                                       ; preds = %if.else.i, %if.end.i973
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str13, i64 0, i64 0), i32 3476, i8* getelementptr inbounds ([18 x i8]* @__FUNCTION__.subtract_reg_term, i64 0, i64 0)) #5
  unreachable

if.end496:                                        ; preds = %land.lhs.true42.i965, %if.else38.i961, %land.lhs.true.i929, %land.lhs.true490, %if.else.i, %if.then2.i, %if.then.i970, %find_common_reg_term.exit968, %if.end487
  %final_value.3 = phi %struct.rtx_def* [ %final_value.2, %find_common_reg_term.exit968 ], [ %final_value.2, %if.end487 ], [ %131, %if.then.i970 ], [ %133, %if.then2.i ], [ %132, %if.else.i ], [ %final_value.2, %land.lhs.true490 ], [ %final_value.2, %land.lhs.true.i929 ], [ %final_value.2, %if.else38.i961 ], [ %final_value.2, %land.lhs.true42.i965 ]
  %initial_value.2 = phi %struct.rtx_def* [ %initial_value.1, %find_common_reg_term.exit968 ], [ %initial_value.1, %if.end487 ], [ %retval.0.i991, %if.then.i970 ], [ %retval.0.i991, %if.then2.i ], [ %retval.0.i991, %if.else.i ], [ %initial_value.1, %land.lhs.true490 ], [ %initial_value.1, %land.lhs.true.i929 ], [ %initial_value.1, %if.else38.i961 ], [ %initial_value.1, %land.lhs.true42.i965 ]
  store %struct.rtx_def* %initial_value.2, %struct.rtx_def** %3, align 8, !tbaa !93
  store %struct.rtx_def* %final_value.3, %struct.rtx_def** %6, align 8, !tbaa !94
  %cmp499 = icmp eq i32 %bf.clear138, 103
  br i1 %cmp499, label %if.then501, label %if.end504

if.then501:                                       ; preds = %if.end496
  store %struct.rtx_def* null, %struct.rtx_def** %5, align 8, !tbaa !74
  store %struct.rtx_def* null, %struct.rtx_def** %6, align 8, !tbaa !94
  br label %if.end504

if.end504:                                        ; preds = %if.then501, %if.end496
  %cmp505 = icmp eq %struct.rtx_def* %increment.1, null
  br i1 %cmp505, label %if.then507, label %if.end512

if.then507:                                       ; preds = %if.end504
  %134 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !9
  %tobool508 = icmp eq %struct._IO_FILE* %134, null
  br i1 %tobool508, label %return, label %if.then509

if.then509:                                       ; preds = %if.then507
  %135 = tail call i64 @fwrite(i8* getelementptr inbounds ([55 x i8]* @.str49, i64 0, i64 0), i64 54, i64 1, %struct._IO_FILE* %134)
  br label %return

if.end512:                                        ; preds = %if.end504
  %136 = getelementptr inbounds %struct.rtx_def* %increment.1, i64 0, i32 0
  %bf.load513 = load i32* %136, align 8
  %bf.clear514 = and i32 %bf.load513, 65535
  switch i32 %bf.clear514, label %if.end529 [
    i32 54, label %if.end542
    i32 61, label %if.then527
    i32 63, label %if.then527
  ]

if.then527:                                       ; preds = %if.end512, %if.end512
  %loop.idx = getelementptr %struct.loop* %loop, i64 0, i32 26
  %loop.idx.val = load %struct.rtx_def** %loop.idx, align 8, !tbaa !7
  %call528 = tail call fastcc %struct.rtx_def* @loop_find_equiv_value(%struct.rtx_def* %loop.idx.val, %struct.rtx_def* %increment.1)
  %.phi.trans.insert1005 = getelementptr inbounds %struct.rtx_def* %call528, i64 0, i32 0
  %bf.load530.pre = load i32* %.phi.trans.insert1005, align 8
  br label %if.end529

if.end529:                                        ; preds = %if.end512, %if.then527
  %bf.load530 = phi i32 [ %bf.load530.pre, %if.then527 ], [ %bf.load513, %if.end512 ]
  %increment.2 = phi %struct.rtx_def* [ %call528, %if.then527 ], [ %increment.1, %if.end512 ]
  %bf.clear531 = and i32 %bf.load530, 65535
  %cmp532 = icmp eq i32 %bf.clear531, 54
  br i1 %cmp532, label %if.end540, label %if.then534

if.then534:                                       ; preds = %if.end529
  %137 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !9
  %tobool535 = icmp eq %struct._IO_FILE* %137, null
  br i1 %tobool535, label %return, label %if.then536

if.then536:                                       ; preds = %if.then534
  %138 = tail call i64 @fwrite(i8* getelementptr inbounds ([47 x i8]* @.str50, i64 0, i64 0), i64 46, i64 1, %struct._IO_FILE* %137)
  %139 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !9
  tail call void @print_simple_rtl(%struct._IO_FILE* %139, %struct.rtx_def* %increment.2) #4
  %140 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !9
  %141 = tail call i64 @fwrite(i8* getelementptr inbounds ([3 x i8]* @.str19, i64 0, i64 0), i64 2, i64 1, %struct._IO_FILE* %140)
  br label %return

if.end540:                                        ; preds = %if.end529
  store %struct.rtx_def* %increment.2, %struct.rtx_def** %7, align 8, !tbaa !71
  br label %if.end542

if.end542:                                        ; preds = %if.end512, %if.end540
  %increment.3 = phi %struct.rtx_def* [ %increment.2, %if.end540 ], [ %increment.1, %if.end512 ]
  %142 = getelementptr inbounds %struct.rtx_def* %initial_value.2, i64 0, i32 0
  %bf.load543 = load i32* %142, align 8
  %bf.clear544 = and i32 %bf.load543, 65535
  %cmp545 = icmp eq i32 %bf.clear544, 54
  br i1 %cmp545, label %if.else553, label %if.then547

if.then547:                                       ; preds = %if.end542
  %143 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !9
  %tobool548 = icmp eq %struct._IO_FILE* %143, null
  br i1 %tobool548, label %return, label %if.then549

if.then549:                                       ; preds = %if.then547
  %144 = tail call i64 @fwrite(i8* getelementptr inbounds ([45 x i8]* @.str51, i64 0, i64 0), i64 44, i64 1, %struct._IO_FILE* %143)
  %145 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !9
  tail call void @print_simple_rtl(%struct._IO_FILE* %145, %struct.rtx_def* %initial_value.2) #4
  %146 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !9
  %147 = tail call i64 @fwrite(i8* getelementptr inbounds ([3 x i8]* @.str19, i64 0, i64 0), i64 2, i64 1, %struct._IO_FILE* %146)
  br label %return

if.else553:                                       ; preds = %if.end542
  br i1 %cmp499, label %if.then556, label %if.else561

if.then556:                                       ; preds = %if.else553
  %148 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !9
  %tobool557 = icmp eq %struct._IO_FILE* %148, null
  br i1 %tobool557, label %return, label %if.then558

if.then558:                                       ; preds = %if.then556
  %149 = tail call i64 @fwrite(i8* getelementptr inbounds ([38 x i8]* @.str52, i64 0, i64 0), i64 37, i64 1, %struct._IO_FILE* %148)
  br label %return

if.else561:                                       ; preds = %if.else553
  %150 = getelementptr inbounds %struct.rtx_def* %final_value.3, i64 0, i32 0
  %bf.load562 = load i32* %150, align 8
  %bf.clear563 = and i32 %bf.load562, 65535
  %cmp564 = icmp eq i32 %bf.clear563, 54
  br i1 %cmp564, label %if.end574, label %if.then566

if.then566:                                       ; preds = %if.else561
  %151 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !9
  %tobool567 = icmp eq %struct._IO_FILE* %151, null
  br i1 %tobool567, label %return, label %if.then568

if.then568:                                       ; preds = %if.then566
  %152 = tail call i64 @fwrite(i8* getelementptr inbounds ([43 x i8]* @.str53, i64 0, i64 0), i64 42, i64 1, %struct._IO_FILE* %151)
  %153 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !9
  tail call void @print_simple_rtl(%struct._IO_FILE* %153, %struct.rtx_def* %final_value.3) #4
  %154 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !9
  %155 = tail call i64 @fwrite(i8* getelementptr inbounds ([3 x i8]* @.str19, i64 0, i64 0), i64 2, i64 1, %struct._IO_FILE* %154)
  br label %return

if.end574:                                        ; preds = %if.else561
  %tobool575 = icmp eq i32 %unsigned_p.5, 0
  %rtwint579 = getelementptr inbounds %struct.rtx_def* %final_value.3, i64 0, i32 1, i64 0, i32 0
  %156 = load i64* %rtwint579, align 8, !tbaa !39
  %rtwint582 = getelementptr inbounds %struct.rtx_def* %initial_value.2, i64 0, i32 1, i64 0, i32 0
  %157 = load i64* %rtwint582, align 8, !tbaa !39
  br i1 %tobool575, label %if.else594, label %if.then576

if.then576:                                       ; preds = %if.end574
  %cmp583 = icmp ugt i64 %156, %157
  %conv584 = zext i1 %cmp583 to i32
  %cmp591 = icmp ult i64 %156, %157
  %conv592 = zext i1 %cmp591 to i32
  %sub593 = sub nsw i32 %conv584, %conv592
  br label %if.end612

if.else594:                                       ; preds = %if.end574
  %cmp601 = icmp sgt i64 %156, %157
  %conv602 = zext i1 %cmp601 to i32
  %cmp609 = icmp slt i64 %156, %157
  %conv610 = zext i1 %cmp609 to i32
  %sub611 = sub nsw i32 %conv602, %conv610
  br label %if.end612

if.end612:                                        ; preds = %if.else594, %if.then576
  %final_larger.0 = phi i32 [ %sub593, %if.then576 ], [ %sub611, %if.else594 ]
  %rtwint615 = getelementptr inbounds %struct.rtx_def* %increment.3, i64 0, i32 1, i64 0, i32 0
  %158 = load i64* %rtwint615, align 8, !tbaa !39
  %cmp616 = icmp sgt i64 %158, 0
  br i1 %cmp616, label %if.end628, label %if.else619

if.else619:                                       ; preds = %if.end612
  %not.cmp623 = icmp ne i64 %158, 0
  %. = sext i1 %not.cmp623 to i32
  br label %if.end628

if.end628:                                        ; preds = %if.else619, %if.end612
  %increment_dir.0 = phi i32 [ 1, %if.end612 ], [ %., %if.else619 ]
  %cmp629 = icmp eq i32 %final_larger.0, %increment_dir.0
  %cmp632 = icmp ne i32 %final_larger.0, 0
  %or.cond = and i1 %cmp629, %cmp632
  br i1 %or.cond, label %land.lhs.true634, label %if.else641

land.lhs.true634:                                 ; preds = %if.end628
  %cmp635 = icmp eq i32 %final_larger.0, %compare_dir.0
  %cmp638 = icmp eq i32 %compare_dir.0, 0
  %or.cond697 = or i1 %cmp635, %cmp638
  br i1 %or.cond697, label %if.end646, label %if.else641

if.else641:                                       ; preds = %land.lhs.true634, %if.end628
  %159 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !9
  %tobool642 = icmp eq %struct._IO_FILE* %159, null
  br i1 %tobool642, label %return, label %if.then643

if.then643:                                       ; preds = %if.else641
  %160 = tail call i64 @fwrite(i8* getelementptr inbounds ([35 x i8]* @.str54, i64 0, i64 0), i64 34, i64 1, %struct._IO_FILE* %159)
  br label %return

if.end646:                                        ; preds = %land.lhs.true634
  br i1 %cmp616, label %if.then652, label %if.else660

if.then652:                                       ; preds = %if.end646
  %sub659 = sub nsw i64 %156, %157
  br label %if.end674

if.else660:                                       ; preds = %if.end646
  %cmp661 = icmp slt i64 %158, 0
  br i1 %cmp661, label %if.then663, label %if.else672

if.then663:                                       ; preds = %if.else660
  %sub670 = sub nsw i64 %157, %156
  %sub671 = sub nsw i64 0, %158
  br label %if.end674

if.else672:                                       ; preds = %if.else660
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str13, i64 0, i64 0), i32 4090, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.loop_iterations, i64 0, i64 0)) #5
  unreachable

if.end674:                                        ; preds = %if.then663, %if.then652
  %abs_diff.0 = phi i64 [ %sub659, %if.then652 ], [ %sub670, %if.then663 ]
  %abs_inc.0 = phi i64 [ %158, %if.then652 ], [ %sub671, %if.then663 ]
  %bf.load675 = load i32* %43, align 8
  %bf.lshr676 = lshr i32 %bf.load675, 16
  %bf.clear677 = and i32 %bf.lshr676, 255
  %idxprom678883 = zext i32 %bf.clear677 to i64
  %arrayidx679 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom678883
  %161 = load i16* %arrayidx679, align 2, !tbaa !90
  %conv680 = zext i16 %161 to i64
  %sub681 = add i64 %conv680, 4294967295
  %sh_prom = and i64 %sub681, 4294967295
  %shl682 = shl i64 2, %sh_prom
  %sub683 = add i64 %shl682, -1
  %and = and i64 %sub683, %abs_diff.0
  %rem = urem i64 %and, %abs_inc.0
  br i1 %cmp638, label %land.lhs.true686, label %if.end690

land.lhs.true686:                                 ; preds = %if.end674
  %cmp687 = icmp eq i64 %rem, 0
  br i1 %cmp687, label %if.end690, label %return

if.end690:                                        ; preds = %if.end674, %land.lhs.true686
  %rem691.pre-phi = phi i64 [ 0, %land.lhs.true686 ], [ %rem, %if.end674 ]
  %div = udiv i64 %and, %abs_inc.0
  %cmp692 = icmp ne i64 %rem691.pre-phi, 0
  %conv694 = zext i1 %cmp692 to i64
  %add = add i64 %conv694, %div
  store i64 %add, i64* %1, align 8, !tbaa !11
  br label %return

return:                                           ; preds = %land.lhs.true686, %if.then643, %if.else641, %if.then568, %if.then566, %if.then558, %if.then556, %if.then549, %if.then547, %if.then536, %if.then534, %if.then509, %if.then507, %if.end344, %if.then337, %if.else335, %if.then311, %if.then309, %if.then281, %if.then279, %if.then235, %if.then233, %if.then195, %if.then193, %if.then182, %if.then180, %if.then170, %if.then168, %if.then150, %if.then148, %if.then133, %if.then131, %if.then118, %if.then116, %if.then38, %if.then36, %if.then18, %if.then16, %if.then8, %if.then, %if.end690
  %retval.0 = phi i64 [ %add, %if.end690 ], [ 0, %if.then ], [ 0, %if.then8 ], [ 0, %if.then16 ], [ 0, %if.then18 ], [ 0, %if.then36 ], [ 0, %if.then38 ], [ 0, %if.then116 ], [ 0, %if.then118 ], [ 0, %if.then131 ], [ 0, %if.then133 ], [ 0, %if.then148 ], [ 0, %if.then150 ], [ 0, %if.then168 ], [ 0, %if.then170 ], [ 0, %if.then180 ], [ 0, %if.then182 ], [ 0, %if.then193 ], [ 0, %if.then195 ], [ 0, %if.then233 ], [ 0, %if.then235 ], [ 0, %if.then279 ], [ 0, %if.then281 ], [ 0, %if.then309 ], [ 0, %if.then311 ], [ 0, %if.else335 ], [ 0, %if.then337 ], [ 0, %if.end344 ], [ 0, %if.then507 ], [ 0, %if.then509 ], [ 0, %if.then534 ], [ 0, %if.then536 ], [ 0, %if.then547 ], [ 0, %if.then549 ], [ 0, %if.then556 ], [ 0, %if.then558 ], [ 0, %if.then566 ], [ 0, %if.then568 ], [ 0, %if.else641 ], [ 0, %if.then643 ], [ 0, %land.lhs.true686 ]
  ret i64 %retval.0
}

declare %struct.rtx_def* @get_condition_for_loop(%struct.loop*, %struct.rtx_def*) #2

declare i32 @loop_insn_first_p(%struct.rtx_def*, %struct.rtx_def*) #2

declare %struct.rtx_def* @plus_constant_wide(%struct.rtx_def*, i64) #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @loop_find_equiv_value(%struct.rtx_def* %loop.0.26.val, %struct.rtx_def* %reg) #0 {
entry:
  %insn.0.in.in3 = getelementptr inbounds %struct.rtx_def* %loop.0.26.val, i64 0, i32 1, i64 1
  %insn.0.in4 = bitcast %union.rtunion_def* %insn.0.in.in3 to %struct.rtx_def**
  %insn.05 = load %struct.rtx_def** %insn.0.in4, align 8
  %tobool7 = icmp eq %struct.rtx_def* %insn.05, null
  br i1 %tobool7, label %for.end, label %for.body

for.body:                                         ; preds = %entry, %for.cond.backedge
  %insn.08 = phi %struct.rtx_def* [ %insn.0, %for.cond.backedge ], [ %insn.05, %entry ]
  %0 = getelementptr inbounds %struct.rtx_def* %insn.08, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 36
  br i1 %cmp, label %for.end, label %if.else

if.else:                                          ; preds = %for.body
  %idxprom158 = zext i32 %bf.clear to i64
  %arrayidx3 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom158
  %1 = load i8* %arrayidx3, align 1, !tbaa !23
  %cmp4 = icmp eq i8 %1, 105
  br i1 %cmp4, label %land.lhs.true, label %for.cond.backedge

land.lhs.true:                                    ; preds = %if.else
  %call = tail call i32 @reg_set_p(%struct.rtx_def* %reg, %struct.rtx_def* %insn.08) #4
  %tobool6 = icmp eq i32 %call, 0
  br i1 %tobool6, label %for.cond.backedge, label %if.then7

for.cond.backedge:                                ; preds = %land.lhs.true, %if.else
  %insn.0.in.in = getelementptr inbounds %struct.rtx_def* %insn.08, i64 0, i32 1, i64 1
  %insn.0.in = bitcast %union.rtunion_def* %insn.0.in.in to %struct.rtx_def**
  %insn.0 = load %struct.rtx_def** %insn.0.in, align 8
  %tobool = icmp eq %struct.rtx_def* %insn.0, null
  br i1 %tobool, label %for.end, label %for.body

if.then7:                                         ; preds = %land.lhs.true
  %bf.load8 = load i32* %0, align 8
  %bf.clear9 = and i32 %bf.load8, 65535
  %idxprom10159 = zext i32 %bf.clear9 to i64
  %arrayidx11 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom10159
  %2 = load i8* %arrayidx11, align 1, !tbaa !23
  %cmp13 = icmp eq i8 %2, 105
  br i1 %cmp13, label %cond.true, label %for.end

cond.true:                                        ; preds = %if.then7
  %arrayidx16 = getelementptr inbounds %struct.rtx_def* %insn.08, i64 0, i32 1, i64 3
  %rtx17 = bitcast %union.rtunion_def* %arrayidx16 to %struct.rtx_def**
  %3 = load %struct.rtx_def** %rtx17, align 8, !tbaa !9
  %4 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 0
  %bf.load18 = load i32* %4, align 8
  %bf.clear19 = and i32 %bf.load18, 65535
  %cmp20 = icmp eq i32 %bf.clear19, 47
  br i1 %cmp20, label %cond.end31, label %cond.false

cond.false:                                       ; preds = %cond.true
  %call29 = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* %insn.08, %struct.rtx_def* %3) #4
  br label %cond.end31

cond.end31:                                       ; preds = %cond.true, %cond.false
  %cond32 = phi %struct.rtx_def* [ %call29, %cond.false ], [ %3, %cond.true ]
  %tobool33 = icmp eq %struct.rtx_def* %cond32, null
  br i1 %tobool33, label %for.end, label %land.lhs.true34

land.lhs.true34:                                  ; preds = %cond.end31
  %fld35 = getelementptr inbounds %struct.rtx_def* %cond32, i64 0, i32 1
  %rtx37 = bitcast [1 x %union.rtunion_def]* %fld35 to %struct.rtx_def**
  %5 = load %struct.rtx_def** %rtx37, align 8, !tbaa !9
  %cmp38 = icmp eq %struct.rtx_def* %5, %reg
  br i1 %cmp38, label %if.then40, label %for.end

if.then40:                                        ; preds = %land.lhs.true34
  %call41 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn.08, i32 4, %struct.rtx_def* null) #4
  %tobool42 = icmp eq %struct.rtx_def* %call41, null
  br i1 %tobool42, label %if.else118, label %land.lhs.true43

land.lhs.true43:                                  ; preds = %if.then40
  %arrayidx45 = getelementptr inbounds %struct.rtx_def* %call41, i64 0, i32 1, i64 0
  %rtx46 = bitcast %union.rtunion_def* %arrayidx45 to %struct.rtx_def**
  %6 = load %struct.rtx_def** %rtx46, align 8, !tbaa !9
  %7 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 0
  %bf.load47 = load i32* %7, align 8
  %bf.clear48 = and i32 %bf.load47, 65535
  switch i32 %bf.clear48, label %if.else118 [
    i32 140, label %if.end
    i32 67, label %if.end
    i32 68, label %if.end
    i32 54, label %if.end
    i32 55, label %if.end
    i32 58, label %if.end
    i32 134, label %if.end
    i32 56, label %if.end
  ]

if.else118:                                       ; preds = %land.lhs.true43, %if.then40
  %arrayidx120 = getelementptr inbounds %struct.rtx_def* %cond32, i64 0, i32 1, i64 1
  %rtx121 = bitcast %union.rtunion_def* %arrayidx120 to %struct.rtx_def**
  %ret.0.pre = load %struct.rtx_def** %rtx121, align 8
  br label %if.end

if.end:                                           ; preds = %land.lhs.true43, %land.lhs.true43, %land.lhs.true43, %land.lhs.true43, %land.lhs.true43, %land.lhs.true43, %land.lhs.true43, %land.lhs.true43, %if.else118
  %ret.0 = phi %struct.rtx_def* [ %ret.0.pre, %if.else118 ], [ %6, %land.lhs.true43 ], [ %6, %land.lhs.true43 ], [ %6, %land.lhs.true43 ], [ %6, %land.lhs.true43 ], [ %6, %land.lhs.true43 ], [ %6, %land.lhs.true43 ], [ %6, %land.lhs.true43 ], [ %6, %land.lhs.true43 ]
  %call122 = tail call i32 @modified_between_p(%struct.rtx_def* %ret.0, %struct.rtx_def* %insn.08, %struct.rtx_def* %loop.0.26.val) #4
  %tobool123 = icmp eq i32 %call122, 0
  %ret.0.reg = select i1 %tobool123, %struct.rtx_def* %ret.0, %struct.rtx_def* %reg
  ret %struct.rtx_def* %ret.0.reg

for.end:                                          ; preds = %for.body, %for.cond.backedge, %entry, %if.then7, %cond.end31, %land.lhs.true34
  ret %struct.rtx_def* %reg
}

declare %struct.rtx_def* @gen_rtx_fmt_ee(i32, i32, %struct.rtx_def*, %struct.rtx_def*) #2

declare void @print_simple_rtl(%struct._IO_FILE*, %struct.rtx_def*) #2

declare i32 @dead_or_set_regno_p(%struct.rtx_def*, i32) #2

declare %struct.rtx_def* @next_nonnote_insn(%struct.rtx_def*) #2

declare %struct.rtx_def* @pc_set(%struct.rtx_def*) #2

declare i32 @reg_set_p(%struct.rtx_def*, %struct.rtx_def*) #2

declare %struct.rtx_def* @single_set_2(%struct.rtx_def*, %struct.rtx_def*) #2

declare i32 @modified_between_p(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #2

declare i32 @reg_referenced_p(%struct.rtx_def*, %struct.rtx_def*) #2

declare i32 @rtx_equal_p(%struct.rtx_def*, %struct.rtx_def*) #2

declare i32 @any_uncondjump_p(%struct.rtx_def*) #2

declare i32 @reg_mentioned_p(%struct.rtx_def*, %struct.rtx_def*) #2

declare %struct.rtx_def* @gen_move_insn(%struct.rtx_def*, %struct.rtx_def*) #2

declare void @loop_iv_add_mult_hoist(%struct.loop*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @verify_addresses(%struct.induction* nocapture readonly %v, i64 %giv_inc.0.1.0.0.val, i32 %unroll_number) #0 {
entry:
  %location = getelementptr inbounds %struct.induction* %v, i64 0, i32 5
  %0 = load %struct.rtx_def*** %location, align 8, !tbaa !66
  %1 = load %struct.rtx_def** %0, align 8, !tbaa !9
  %dest_reg = getelementptr inbounds %struct.induction* %v, i64 0, i32 4
  %2 = load %struct.rtx_def** %dest_reg, align 8, !tbaa !54
  %sub = add nsw i32 %unroll_number, -1
  %conv = sext i32 %sub to i64
  %mul = mul nsw i64 %conv, %giv_inc.0.1.0.0.val
  %call = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %2, i64 %mul) #4
  %3 = load %struct.rtx_def*** %location, align 8, !tbaa !66
  %4 = load %struct.rtx_def** %3, align 8, !tbaa !9
  %5 = load %struct.rtx_def** %dest_reg, align 8, !tbaa !54
  %insn = getelementptr inbounds %struct.induction* %v, i64 0, i32 0
  %6 = load %struct.rtx_def** %insn, align 8, !tbaa !56
  %call3 = tail call i32 @validate_replace_rtx(%struct.rtx_def* %4, %struct.rtx_def* %5, %struct.rtx_def* %6) #4
  %tobool = icmp eq i32 %call3, 0
  br i1 %tobool, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %7 = load %struct.rtx_def*** %location, align 8, !tbaa !66
  %8 = load %struct.rtx_def** %7, align 8, !tbaa !9
  %9 = load %struct.rtx_def** %insn, align 8, !tbaa !56
  %call6 = tail call i32 @validate_replace_rtx(%struct.rtx_def* %8, %struct.rtx_def* %call, %struct.rtx_def* %9) #4
  %tobool7 = icmp eq i32 %call6, 0
  br i1 %tobool7, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %if.end

if.end:                                           ; preds = %lor.lhs.false, %if.then
  %ret.0 = phi i32 [ 1, %lor.lhs.false ], [ 0, %if.then ]
  %10 = load %struct.rtx_def*** %location, align 8, !tbaa !66
  %11 = load %struct.rtx_def** %10, align 8, !tbaa !9
  %12 = load %struct.rtx_def** %insn, align 8, !tbaa !56
  %call10 = tail call i32 @validate_replace_rtx(%struct.rtx_def* %11, %struct.rtx_def* %1, %struct.rtx_def* %12) #4
  %tobool11 = icmp eq i32 %call10, 0
  br i1 %tobool11, label %if.then12, label %if.end13

if.then12:                                        ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str13, i64 0, i64 0), i32 2687, i8* getelementptr inbounds ([17 x i8]* @__FUNCTION__.verify_addresses, i64 0, i64 0)) #5
  unreachable

if.end13:                                         ; preds = %if.end
  ret i32 %ret.0
}

declare i32 @recog_memoized_1(%struct.rtx_def*) #2

declare %struct.rtx_def* @force_operand(%struct.rtx_def*, %struct.rtx_def*) #2

declare i32 @validate_replace_rtx(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #2

declare %struct.rtx_def* @simplify_binary_operation(i32, i32, %struct.rtx_def*, %struct.rtx_def*) #2

declare %struct.rtx_def* @emit_note(i8*, i32) #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @calculate_giv_inc(%struct.rtx_def* nocapture readonly %pattern, %struct.rtx_def* %src_insn, i32 %regno) #0 {
entry:
  %src_insn.addr = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %src_insn, %struct.rtx_def** %src_insn.addr, align 8, !tbaa !9
  br label %retry

retry:                                            ; preds = %cond.end214, %entry
  %tries.0 = phi i32 [ 0, %entry ], [ 1, %cond.end214 ]
  %increment_total.0 = phi %struct.rtx_def* [ null, %entry ], [ %increment_total.1, %cond.end214 ]
  %pattern.addr.0 = phi %struct.rtx_def* [ %pattern, %entry ], [ %cond215, %cond.end214 ]
  %arrayidx = getelementptr inbounds %struct.rtx_def* %pattern.addr.0, i64 0, i32 1, i64 1
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %0 = load %struct.rtx_def** %rtx, align 8, !tbaa !9
  %1 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 0
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 75
  br i1 %cmp, label %if.end36, label %if.then

if.then:                                          ; preds = %retry
  %2 = load %struct.rtx_def** %src_insn.addr, align 8, !tbaa !9
  %arrayidx2 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 1
  %rtx3 = bitcast %union.rtunion_def* %arrayidx2 to %struct.rtx_def**
  %3 = load %struct.rtx_def** %rtx3, align 8, !tbaa !9
  store %struct.rtx_def* %3, %struct.rtx_def** %src_insn.addr, align 8, !tbaa !9
  %arrayidx10 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 1, i64 3
  %rtx11 = bitcast %union.rtunion_def* %arrayidx10 to %struct.rtx_def**
  %4 = load %struct.rtx_def** %rtx11, align 8, !tbaa !9
  %5 = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 0
  %bf.load12 = load i32* %5, align 8
  %bf.clear13 = and i32 %bf.load12, 65535
  %cmp14 = icmp eq i32 %bf.clear13, 47
  br i1 %cmp14, label %cond.end24, label %cond.false

cond.false:                                       ; preds = %if.then
  %call = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %3, %struct.rtx_def* %4) #4
  br label %cond.end24

cond.end24:                                       ; preds = %if.then, %cond.false
  %cond25 = phi %struct.rtx_def* [ %call, %cond.false ], [ %4, %if.then ]
  %arrayidx27 = getelementptr inbounds %struct.rtx_def* %cond25, i64 0, i32 1, i64 1
  %rtx28 = bitcast %union.rtunion_def* %arrayidx27 to %struct.rtx_def**
  %6 = load %struct.rtx_def** %rtx28, align 8, !tbaa !9
  %7 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 0
  %bf.load29 = load i32* %7, align 8
  %bf.clear30 = and i32 %bf.load29, 65535
  %cmp31 = icmp eq i32 %bf.clear30, 75
  br i1 %cmp31, label %if.end, label %if.then33

if.then33:                                        ; preds = %cond.end24
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str13, i64 0, i64 0), i32 1605, i8* getelementptr inbounds ([18 x i8]* @__FUNCTION__.calculate_giv_inc, i64 0, i64 0)) #5
  unreachable

if.end:                                           ; preds = %cond.end24
  %call34 = call %struct.rtx_def* @get_last_insn() #4
  %call35 = call %struct.rtx_def* @delete_related_insns(%struct.rtx_def* %call34) #4
  %.pre = load %struct.rtx_def** %rtx28, align 8, !tbaa !9
  br label %if.end36

if.end36:                                         ; preds = %retry, %if.end
  %8 = phi %struct.rtx_def* [ %.pre, %if.end ], [ %0, %retry ]
  %pattern.addr.1 = phi %struct.rtx_def* [ %cond25, %if.end ], [ %pattern.addr.0, %retry ]
  %arrayidx38 = getelementptr inbounds %struct.rtx_def* %pattern.addr.1, i64 0, i32 1, i64 1
  %rtx39 = bitcast %union.rtunion_def* %arrayidx38 to %struct.rtx_def**
  %arrayidx41 = getelementptr inbounds %struct.rtx_def* %8, i64 0, i32 1, i64 1
  %rtx42 = bitcast %union.rtunion_def* %arrayidx41 to %struct.rtx_def**
  %9 = load %struct.rtx_def** %rtx42, align 8, !tbaa !9
  %10 = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 0
  %bf.load43 = load i32* %10, align 8
  %bf.clear44 = and i32 %bf.load43, 65535
  %cmp45 = icmp eq i32 %bf.clear44, 54
  br i1 %cmp45, label %if.end146, label %if.then47

if.then47:                                        ; preds = %if.end36
  %call48 = call %struct.rtx_def* @find_last_value(%struct.rtx_def* %9, %struct.rtx_def** %src_insn.addr, %struct.rtx_def* null, i32 0) #4
  %11 = getelementptr inbounds %struct.rtx_def* %call48, i64 0, i32 0
  %bf.load49 = load i32* %11, align 8
  %bf.clear50 = and i32 %bf.load49, 65535
  switch i32 %bf.clear50, label %if.end137 [
    i32 135, label %if.then53
    i32 66, label %if.then61
    i32 84, label %if.then82
    i32 87, label %if.then82
    i32 75, label %if.then82
  ]

if.then53:                                        ; preds = %if.then47
  %arrayidx55 = getelementptr inbounds %struct.rtx_def* %call48, i64 0, i32 1, i64 1
  %rtx56 = bitcast %union.rtunion_def* %arrayidx55 to %struct.rtx_def**
  %12 = load %struct.rtx_def** %rtx56, align 8, !tbaa !9
  br label %if.end137

if.then61:                                        ; preds = %if.then47
  %13 = load %struct.rtx_def** %src_insn.addr, align 8, !tbaa !9
  %call62 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %13, i32 4, %struct.rtx_def* null) #4
  %tobool = icmp eq %struct.rtx_def* %call62, null
  br i1 %tobool, label %if.end137, label %if.then63

if.then63:                                        ; preds = %if.then61
  %arrayidx65 = getelementptr inbounds %struct.rtx_def* %call62, i64 0, i32 1, i64 0
  %rtx66 = bitcast %union.rtunion_def* %arrayidx65 to %struct.rtx_def**
  %14 = load %struct.rtx_def** %rtx66, align 8, !tbaa !9
  br label %if.end137

if.then82:                                        ; preds = %if.then47, %if.then47, %if.then47
  %arrayidx84 = getelementptr inbounds %struct.rtx_def* %call48, i64 0, i32 1, i64 1
  %rtx85 = bitcast %union.rtunion_def* %arrayidx84 to %struct.rtx_def**
  %15 = load %struct.rtx_def** %rtx85, align 8, !tbaa !9
  %arrayidx89 = getelementptr inbounds %struct.rtx_def* %call48, i64 0, i32 1, i64 0
  %rtx90 = bitcast %union.rtunion_def* %arrayidx89 to %struct.rtx_def**
  %16 = load %struct.rtx_def** %rtx90, align 8, !tbaa !9
  %call91 = call %struct.rtx_def* @find_last_value(%struct.rtx_def* %16, %struct.rtx_def** %src_insn.addr, %struct.rtx_def* null, i32 0) #4
  %call92 = call %struct.rtx_def* @get_last_insn() #4
  %call93 = call %struct.rtx_def* @delete_related_insns(%struct.rtx_def* %call92) #4
  %17 = getelementptr inbounds %struct.rtx_def* %15, i64 0, i32 0
  %bf.load94 = load i32* %17, align 8
  %bf.clear95 = and i32 %bf.load94, 65535
  %cmp96 = icmp eq i32 %bf.clear95, 54
  br i1 %cmp96, label %lor.lhs.false98, label %if.then103

lor.lhs.false98:                                  ; preds = %if.then82
  %18 = getelementptr inbounds %struct.rtx_def* %call91, i64 0, i32 0
  %bf.load99 = load i32* %18, align 8
  %bf.clear100 = and i32 %bf.load99, 65535
  %cmp101 = icmp eq i32 %bf.clear100, 54
  br i1 %cmp101, label %if.end104, label %if.then103

if.then103:                                       ; preds = %lor.lhs.false98, %if.then82
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str13, i64 0, i64 0), i32 1651, i8* getelementptr inbounds ([18 x i8]* @__FUNCTION__.calculate_giv_inc, i64 0, i64 0)) #5
  unreachable

if.end104:                                        ; preds = %lor.lhs.false98
  %cmp105 = icmp eq i32 %bf.clear50, 84
  br i1 %cmp105, label %if.then107, label %if.else114

if.then107:                                       ; preds = %if.end104
  %rtwint = getelementptr inbounds %struct.rtx_def* %call91, i64 0, i32 1, i64 0, i32 0
  %19 = load i64* %rtwint, align 8, !tbaa !39
  %rtwint112 = getelementptr inbounds %struct.rtx_def* %15, i64 0, i32 1, i64 0, i32 0
  %20 = load i64* %rtwint112, align 8, !tbaa !39
  %or = or i64 %20, %19
  %call113 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %or) #4
  br label %if.end137

if.else114:                                       ; preds = %if.end104
  %cmp115 = icmp eq i32 %bf.clear50, 75
  %rtwint120 = getelementptr inbounds %struct.rtx_def* %call91, i64 0, i32 1, i64 0, i32 0
  %21 = load i64* %rtwint120, align 8, !tbaa !39
  %rtwint123 = getelementptr inbounds %struct.rtx_def* %15, i64 0, i32 1, i64 0, i32 0
  %22 = load i64* %rtwint123, align 8, !tbaa !39
  br i1 %cmp115, label %if.then117, label %if.else125

if.then117:                                       ; preds = %if.else114
  %add = add nsw i64 %22, %21
  %call124 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %add) #4
  br label %if.end137

if.else125:                                       ; preds = %if.else114
  %shl = shl i64 %21, %22
  %call132 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %shl) #4
  br label %if.end137

if.end137:                                        ; preds = %if.then47, %if.then61, %if.then63, %if.then107, %if.else125, %if.then117, %if.then53
  %increment.0 = phi %struct.rtx_def* [ %12, %if.then53 ], [ %14, %if.then63 ], [ %call48, %if.then61 ], [ %call113, %if.then107 ], [ %call124, %if.then117 ], [ %call132, %if.else125 ], [ %call48, %if.then47 ]
  %23 = getelementptr inbounds %struct.rtx_def* %increment.0, i64 0, i32 0
  %bf.load138 = load i32* %23, align 8
  %bf.clear139 = and i32 %bf.load138, 65535
  %cmp140 = icmp eq i32 %bf.clear139, 54
  br i1 %cmp140, label %if.end143, label %if.then142

if.then142:                                       ; preds = %if.end137
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str13, i64 0, i64 0), i32 1662, i8* getelementptr inbounds ([18 x i8]* @__FUNCTION__.calculate_giv_inc, i64 0, i64 0)) #5
  unreachable

if.end143:                                        ; preds = %if.end137
  %call144 = call %struct.rtx_def* @get_last_insn() #4
  %call145 = call %struct.rtx_def* @delete_related_insns(%struct.rtx_def* %call144) #4
  br label %if.end146

if.end146:                                        ; preds = %if.end36, %if.end143
  %increment.1 = phi %struct.rtx_def* [ %increment.0, %if.end143 ], [ %9, %if.end36 ]
  %tobool147 = icmp eq %struct.rtx_def* %increment_total.0, null
  br i1 %tobool147, label %if.end158, label %if.then148

if.then148:                                       ; preds = %if.end146
  %rtwint151 = getelementptr inbounds %struct.rtx_def* %increment_total.0, i64 0, i32 1, i64 0, i32 0
  %24 = load i64* %rtwint151, align 8, !tbaa !39
  %rtwint154 = getelementptr inbounds %struct.rtx_def* %increment.1, i64 0, i32 1, i64 0, i32 0
  %25 = load i64* %rtwint154, align 8, !tbaa !39
  %add155 = add nsw i64 %25, %24
  %call156 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %add155) #4
  br label %if.end158

if.end158:                                        ; preds = %if.end146, %if.then148
  %increment_total.1 = phi %struct.rtx_def* [ %call156, %if.then148 ], [ %increment.1, %if.end146 ]
  %26 = load %struct.rtx_def** %rtx39, align 8, !tbaa !9
  %arrayidx163 = getelementptr inbounds %struct.rtx_def* %26, i64 0, i32 1, i64 0
  %rtx164 = bitcast %union.rtunion_def* %arrayidx163 to %struct.rtx_def**
  %27 = load %struct.rtx_def** %rtx164, align 8, !tbaa !9
  %28 = getelementptr inbounds %struct.rtx_def* %27, i64 0, i32 0
  %bf.load165 = load i32* %28, align 8
  %bf.clear166 = and i32 %bf.load165, 65535
  %cmp167 = icmp eq i32 %bf.clear166, 61
  br i1 %cmp167, label %lor.lhs.false169, label %if.then180

lor.lhs.false169:                                 ; preds = %if.end158
  %arrayidx177 = getelementptr inbounds %struct.rtx_def* %27, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx177 to i32*
  %29 = load i32* %rtuint, align 4, !tbaa !10
  %cmp178 = icmp eq i32 %29, %regno
  br i1 %cmp178, label %if.end219, label %if.then180

if.then180:                                       ; preds = %lor.lhs.false169, %if.end158
  %cmp181 = icmp eq i32 %tries.0, 0
  br i1 %cmp181, label %if.then183, label %if.end218

if.then183:                                       ; preds = %if.then180
  %30 = load %struct.rtx_def** %src_insn.addr, align 8, !tbaa !9
  %arrayidx185 = getelementptr inbounds %struct.rtx_def* %30, i64 0, i32 1, i64 1
  %rtx186 = bitcast %union.rtunion_def* %arrayidx185 to %struct.rtx_def**
  %31 = load %struct.rtx_def** %rtx186, align 8, !tbaa !9
  store %struct.rtx_def* %31, %struct.rtx_def** %src_insn.addr, align 8, !tbaa !9
  %32 = getelementptr inbounds %struct.rtx_def* %31, i64 0, i32 0
  %bf.load187 = load i32* %32, align 8
  %bf.clear188 = and i32 %bf.load187, 65535
  %idxprom189246 = zext i32 %bf.clear188 to i64
  %arrayidx190 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom189246
  %33 = load i8* %arrayidx190, align 1, !tbaa !23
  %cmp192 = icmp eq i8 %33, 105
  br i1 %cmp192, label %cond.true194, label %cond.end214

cond.true194:                                     ; preds = %if.then183
  %arrayidx196 = getelementptr inbounds %struct.rtx_def* %31, i64 0, i32 1, i64 3
  %rtx197 = bitcast %union.rtunion_def* %arrayidx196 to %struct.rtx_def**
  %34 = load %struct.rtx_def** %rtx197, align 8, !tbaa !9
  %35 = getelementptr inbounds %struct.rtx_def* %34, i64 0, i32 0
  %bf.load198 = load i32* %35, align 8
  %bf.clear199 = and i32 %bf.load198, 65535
  %cmp200 = icmp eq i32 %bf.clear199, 47
  br i1 %cmp200, label %cond.end214, label %cond.false206

cond.false206:                                    ; preds = %cond.true194
  %call210 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %31, %struct.rtx_def* %34) #4
  br label %cond.end214

cond.end214:                                      ; preds = %cond.true194, %if.then183, %cond.false206
  %cond215 = phi %struct.rtx_def* [ %call210, %cond.false206 ], [ null, %if.then183 ], [ %34, %cond.true194 ]
  %call216 = call %struct.rtx_def* @get_last_insn() #4
  %call217 = call %struct.rtx_def* @delete_related_insns(%struct.rtx_def* %call216) #4
  br label %retry

if.end218:                                        ; preds = %if.then180
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str13, i64 0, i64 0), i32 1695, i8* getelementptr inbounds ([18 x i8]* @__FUNCTION__.calculate_giv_inc, i64 0, i64 0)) #5
  unreachable

if.end219:                                        ; preds = %lor.lhs.false169
  ret %struct.rtx_def* %increment_total.1
}

declare %struct.rtx_def* @simplify_gen_binary(i32, i32, %struct.rtx_def*, %struct.rtx_def*) #2

declare %struct.rtx_def* @copy_rtx_and_substitute(%struct.rtx_def*, %struct.inline_remap*, i32) #2

declare %struct.rtx_def* @emit_insn(%struct.rtx_def*) #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @initial_reg_note_copy(%struct.rtx_def* readonly %notes, %struct.inline_remap* %map) #0 {
entry:
  %cmp = icmp eq %struct.rtx_def* %notes, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds %struct.rtx_def* %notes, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %call = tail call %struct.rtx_def* @rtx_alloc(i32 %bf.clear) #4
  %bf.load1 = load i32* %0, align 8
  %bf.clear2 = and i32 %bf.load1, 16711680
  %1 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 0
  %bf.load3 = load i32* %1, align 8
  %bf.clear4 = and i32 %bf.load3, -16711681
  %bf.set = or i32 %bf.clear4, %bf.clear2
  store i32 %bf.set, i32* %1, align 8
  %bf.load5 = load i32* %0, align 8
  %bf.clear6 = and i32 %bf.load5, 65535
  switch i32 %bf.clear6, label %if.else24 [
    i32 3, label %if.then8
    i32 4, label %if.then16
  ]

if.then8:                                         ; preds = %if.end
  %arrayidx = getelementptr inbounds %struct.rtx_def* %notes, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx, align 8, !tbaa !9
  %call9 = tail call %struct.rtx_def* @copy_rtx_and_substitute(%struct.rtx_def* %2, %struct.inline_remap* %map, i32 0) #4
  %3 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 0, i32 0
  %call9.c = ptrtoint %struct.rtx_def* %call9 to i64
  store i64 %call9.c, i64* %3, align 8, !tbaa !9
  br label %if.end26

if.then16:                                        ; preds = %if.end
  %arrayidx18 = getelementptr inbounds %struct.rtx_def* %notes, i64 0, i32 1, i64 0
  %rtx19 = bitcast %union.rtunion_def* %arrayidx18 to %struct.rtx_def**
  %4 = load %struct.rtx_def** %rtx19, align 8, !tbaa !9
  %call20 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %4) #4
  %5 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 0, i32 0
  %call20.c = ptrtoint %struct.rtx_def* %call20 to i64
  store i64 %call20.c, i64* %5, align 8, !tbaa !9
  br label %if.end26

if.else24:                                        ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str13, i64 0, i64 0), i32 1724, i8* getelementptr inbounds ([22 x i8]* @__FUNCTION__.initial_reg_note_copy, i64 0, i64 0)) #5
  unreachable

if.end26:                                         ; preds = %if.then16, %if.then8
  %arrayidx28 = getelementptr inbounds %struct.rtx_def* %notes, i64 0, i32 1, i64 1
  %rtx29 = bitcast %union.rtunion_def* %arrayidx28 to %struct.rtx_def**
  %6 = load %struct.rtx_def** %rtx29, align 8, !tbaa !9
  %call30 = tail call fastcc %struct.rtx_def* @initial_reg_note_copy(%struct.rtx_def* %6, %struct.inline_remap* %map)
  %7 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 1, i32 0
  %call30.c = ptrtoint %struct.rtx_def* %call30 to i64
  store i64 %call30.c, i64* %7, align 8, !tbaa !9
  ret %struct.rtx_def* %call

return:                                           ; preds = %entry
  ret %struct.rtx_def* null
}

declare void @try_constants(%struct.rtx_def*, %struct.inline_remap*) #2

declare %struct.rtx_def* @emit_jump_insn(%struct.rtx_def*) #2

declare i32 @invert_jump(%struct.rtx_def*, %struct.rtx_def*, i32) #2

declare %struct.rtx_def* @emit_jump_insn_after(%struct.rtx_def*, %struct.rtx_def*) #2

declare %struct.rtx_def* @gen_jump(%struct.rtx_def*) #2

declare %struct.rtx_def* @emit_barrier_after(%struct.rtx_def*) #2

declare i32 @redirect_jump(%struct.rtx_def*, %struct.rtx_def*, i32) #2

declare i32 @any_condjump_p(%struct.rtx_def*) #2

declare i32 @onlyjump_p(%struct.rtx_def*) #2

declare %struct.rtx_def* @delete_insn(%struct.rtx_def*) #2

declare %struct.rtx_def* @emit_barrier() #2

declare %struct.rtx_def* @emit_call_insn(%struct.rtx_def*) #2

declare %struct.rtx_def* @emit_label(%struct.rtx_def*) #2

declare %struct.rtx_def* @loop_insn_emit_before(%struct.loop*, %struct.basic_block_def*, %struct.rtx_def*, %struct.rtx_def*) #2

declare %struct.rtx_def* @rtx_alloc(i32) #2

declare %struct.rtx_def* @find_last_value(%struct.rtx_def*, %struct.rtx_def**, %struct.rtx_def*, i32) #2

; Function Attrs: nounwind
declare i64 @fwrite(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) #4

attributes #0 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { noreturn nounwind }

!llvm.ident = !{!0}

!0 = metadata !{metadata !"clang version 3.5 (trunk)"}
!1 = metadata !{metadata !2, metadata !6, i64 160}
!2 = metadata !{metadata !"loop", metadata !3, i64 0, metadata !6, i64 8, metadata !6, i64 16, metadata !6, i64 24, metadata !6, i64 32, metadata !3, i64 40, metadata !6, i64 48, metadata !6, i64 56, metadata !6, i64 64, metadata !3, i64 72, metadata !6, i64 80, metadata !3, i64 88, metadata !6, i64 96, metadata !3, i64 104, metadata !6, i64 112, metadata !3, i64 120, metadata !3, i64 124, metadata !6, i64 128, metadata !6, i64 136, metadata !6, i64 144, metadata !3, i64 152, metadata !3, i64 156, metadata !6, i64 160, metadata !6, i64 168, metadata !6, i64 176, metadata !6, i64 184, metadata !6, i64 192, metadata !6, i64 200, metadata !6, i64 208, metadata !6, i64 216, metadata !6, i64 224, metadata !6, i64 232, metadata !3, i64 240}
!3 = metadata !{metadata !"int", metadata !4, i64 0}
!4 = metadata !{metadata !"omnipotent char", metadata !5, i64 0}
!5 = metadata !{metadata !"Simple C/C++ TBAA"}
!6 = metadata !{metadata !"any pointer", metadata !4, i64 0}
!7 = metadata !{metadata !2, metadata !6, i64 192}
!8 = metadata !{metadata !2, metadata !6, i64 200}
!9 = metadata !{metadata !6, metadata !6, i64 0}
!10 = metadata !{metadata !3, metadata !3, i64 0}
!11 = metadata !{metadata !12, metadata !13, i64 96}
!12 = metadata !{metadata !"loop_info", metadata !3, i64 0, metadata !3, i64 4, metadata !3, i64 8, metadata !3, i64 12, metadata !3, i64 16, metadata !3, i64 20, metadata !3, i64 24, metadata !6, i64 32, metadata !6, i64 40, metadata !6, i64 48, metadata !6, i64 56, metadata !6, i64 64, metadata !6, i64 72, metadata !6, i64 80, metadata !4, i64 88, metadata !13, i64 96, metadata !3, i64 104, metadata !3, i64 108, metadata !6, i64 112, metadata !6, i64 120, metadata !6, i64 128, metadata !3, i64 136, metadata !3, i64 140, metadata !3, i64 144, metadata !3, i64 148, metadata !3, i64 152, metadata !6, i64 160, metadata !14, i64 168, metadata !15, i64 184, metadata !16, i64 208, metadata !3, i64 232}
!13 = metadata !{metadata !"long long", metadata !4, i64 0}
!14 = metadata !{metadata !"loop_movables", metadata !6, i64 0, metadata !6, i64 8}
!15 = metadata !{metadata !"loop_regs", metadata !3, i64 0, metadata !3, i64 4, metadata !6, i64 8, metadata !3, i64 16}
!16 = metadata !{metadata !"loop_ivs", metadata !6, i64 0, metadata !3, i64 8, metadata !6, i64 16}
!17 = metadata !{metadata !2, metadata !6, i64 176}
!18 = metadata !{metadata !2, metadata !6, i64 168}
!19 = metadata !{metadata !20, metadata !3, i64 4}
!20 = metadata !{metadata !"_factor", metadata !3, i64 0, metadata !3, i64 4}
!21 = metadata !{metadata !22, metadata !6, i64 40}
!22 = metadata !{metadata !"inline_remap", metadata !3, i64 0, metadata !6, i64 8, metadata !6, i64 16, metadata !6, i64 24, metadata !6, i64 32, metadata !6, i64 40, metadata !6, i64 48, metadata !3, i64 56, metadata !3, i64 60, metadata !6, i64 64, metadata !3, i64 72, metadata !6, i64 80, metadata !6, i64 88, metadata !6, i64 96, metadata !6, i64 104, metadata !6, i64 112, metadata !6, i64 120, metadata !6, i64 128, metadata !3, i64 136, metadata !4, i64 144, metadata !6, i64 624, metadata !6, i64 632, metadata !4, i64 640}
!23 = metadata !{metadata !4, metadata !4, i64 0}
!24 = metadata !{metadata !25, metadata !3, i64 0}
!25 = metadata !{metadata !"rtvec_def", metadata !3, i64 0, metadata !4, i64 8}
!26 = metadata !{metadata !22, metadata !6, i64 48}
!27 = metadata !{metadata !22, metadata !6, i64 80}
!28 = metadata !{metadata !29, metadata !3, i64 0}
!29 = metadata !{metadata !"reg_info_def", metadata !3, i64 0, metadata !3, i64 4, metadata !3, i64 8, metadata !3, i64 12, metadata !3, i64 16, metadata !3, i64 20, metadata !3, i64 24, metadata !3, i64 28, metadata !3, i64 32, metadata !3, i64 36, metadata !4, i64 40}
!30 = metadata !{metadata !29, metadata !3, i64 4}
!31 = metadata !{metadata !12, metadata !4, i64 88}
!32 = metadata !{metadata !22, metadata !6, i64 32}
!33 = metadata !{metadata !22, metadata !6, i64 64}
!34 = metadata !{metadata !35, metadata !6, i64 24}
!35 = metadata !{metadata !"function", metadata !6, i64 0, metadata !6, i64 8, metadata !6, i64 16, metadata !6, i64 24, metadata !6, i64 32, metadata !6, i64 40, metadata !6, i64 48, metadata !6, i64 56, metadata !3, i64 64, metadata !3, i64 68, metadata !3, i64 72, metadata !3, i64 76, metadata !6, i64 80, metadata !36, i64 88, metadata !6, i64 120, metadata !6, i64 128, metadata !6, i64 136, metadata !6, i64 144, metadata !3, i64 152, metadata !6, i64 160, metadata !6, i64 168, metadata !6, i64 176, metadata !6, i64 184, metadata !6, i64 192, metadata !6, i64 200, metadata !6, i64 208, metadata !6, i64 216, metadata !6, i64 224, metadata !6, i64 232, metadata !6, i64 240, metadata !6, i64 248, metadata !6, i64 256, metadata !13, i64 264, metadata !6, i64 272, metadata !6, i64 280, metadata !6, i64 288, metadata !6, i64 296, metadata !3, i64 304, metadata !6, i64 312, metadata !6, i64 320, metadata !3, i64 328, metadata !3, i64 332, metadata !3, i64 336, metadata !6, i64 344, metadata !3, i64 352, metadata !3, i64 356, metadata !6, i64 360, metadata !6, i64 368, metadata !6, i64 376, metadata !3, i64 384, metadata !3, i64 388, metadata !6, i64 392, metadata !3, i64 400, metadata !3, i64 404, metadata !6, i64 408, metadata !6, i64 416, metadata !3, i64 424, metadata !3, i64 424, metadata !3, i64 424, metadata !3, i64 424, metadata !3, i64 424, metadata !3, i64 424, metadata !3, i64 424, metadata !3, i64 424, metadata !3, i64 425, metadata !3, i64 425, metadata !3, i64 425, metadata !3, i64 425, metadata !3, i64 425, metadata !3, i64 425, metadata !3, i64 425, metadata !3, i64 425, metadata !3, i64 426, metadata !3, i64 426, metadata !3, i64 426, metadata !3, i64 426, metadata !3, i64 426, metadata !3, i64 426, metadata !3, i64 426, metadata !3, i64 426}
!36 = metadata !{metadata !"ix86_args", metadata !3, i64 0, metadata !3, i64 4, metadata !3, i64 8, metadata !3, i64 12, metadata !3, i64 16, metadata !3, i64 20, metadata !3, i64 24}
!37 = metadata !{metadata !38, metadata !6, i64 80}
!38 = metadata !{metadata !"emit_status", metadata !3, i64 0, metadata !3, i64 4, metadata !6, i64 8, metadata !6, i64 16, metadata !6, i64 24, metadata !6, i64 32, metadata !3, i64 40, metadata !3, i64 44, metadata !6, i64 48, metadata !3, i64 56, metadata !6, i64 64, metadata !6, i64 72, metadata !6, i64 80}
!39 = metadata !{metadata !13, metadata !13, i64 0}
!40 = metadata !{metadata !41, metadata !42, i64 0}
!41 = metadata !{metadata !"varray_head_tag", metadata !42, i64 0, metadata !42, i64 8, metadata !42, i64 16, metadata !6, i64 24, metadata !4, i64 32}
!42 = metadata !{metadata !"long", metadata !4, i64 0}
!43 = metadata !{metadata !22, metadata !3, i64 72}
!44 = metadata !{metadata !12, metadata !3, i64 104}
!45 = metadata !{metadata !46, metadata !6, i64 64}
!46 = metadata !{metadata !"induction", metadata !6, i64 0, metadata !6, i64 8, metadata !6, i64 16, metadata !4, i64 24, metadata !6, i64 32, metadata !6, i64 40, metadata !4, i64 48, metadata !6, i64 56, metadata !6, i64 64, metadata !6, i64 72, metadata !3, i64 80, metadata !6, i64 88, metadata !3, i64 96, metadata !3, i64 100, metadata !3, i64 100, metadata !3, i64 100, metadata !3, i64 100, metadata !3, i64 100, metadata !3, i64 100, metadata !3, i64 100, metadata !3, i64 100, metadata !3, i64 101, metadata !3, i64 101, metadata !3, i64 101, metadata !3, i64 101, metadata !3, i64 104, metadata !6, i64 112, metadata !6, i64 120, metadata !6, i64 128, metadata !6, i64 136, metadata !13, i64 144, metadata !6, i64 152, metadata !6, i64 160}
!47 = metadata !{metadata !46, metadata !6, i64 72}
!48 = metadata !{metadata !46, metadata !4, i64 48}
!49 = metadata !{metadata !2, metadata !3, i64 240}
!50 = metadata !{metadata !51, metadata !3, i64 0}
!51 = metadata !{metadata !"iv_class", metadata !3, i64 0, metadata !3, i64 4, metadata !6, i64 8, metadata !3, i64 16, metadata !6, i64 24, metadata !3, i64 32, metadata !6, i64 40, metadata !6, i64 48, metadata !6, i64 56, metadata !6, i64 64, metadata !6, i64 72, metadata !6, i64 80, metadata !3, i64 88, metadata !3, i64 88, metadata !3, i64 88, metadata !3, i64 88, metadata !3, i64 88}
!52 = metadata !{metadata !51, metadata !6, i64 72}
!53 = metadata !{metadata !51, metadata !6, i64 8}
!54 = metadata !{metadata !46, metadata !6, i64 32}
!55 = metadata !{metadata !51, metadata !6, i64 80}
!56 = metadata !{metadata !46, metadata !6, i64 0}
!57 = metadata !{metadata !51, metadata !6, i64 40}
!58 = metadata !{metadata !46, metadata !6, i64 16}
!59 = metadata !{metadata !51, metadata !3, i64 4}
!60 = metadata !{metadata !46, metadata !6, i64 8}
!61 = metadata !{metadata !46, metadata !6, i64 152}
!62 = metadata !{metadata !46, metadata !4, i64 24}
!63 = metadata !{metadata !46, metadata !6, i64 88}
!64 = metadata !{metadata !46, metadata !6, i64 136}
!65 = metadata !{metadata !46, metadata !13, i64 144}
!66 = metadata !{metadata !46, metadata !6, i64 40}
!67 = metadata !{metadata !16, metadata !6, i64 0}
!68 = metadata !{metadata !38, metadata !6, i64 64}
!69 = metadata !{metadata !22, metadata !6, i64 120}
!70 = metadata !{metadata !22, metadata !6, i64 128}
!71 = metadata !{metadata !12, metadata !6, i64 80}
!72 = metadata !{metadata !12, metadata !6, i64 72}
!73 = metadata !{metadata !12, metadata !6, i64 32}
!74 = metadata !{metadata !12, metadata !6, i64 48}
!75 = metadata !{metadata !22, metadata !6, i64 88}
!76 = metadata !{metadata !16, metadata !3, i64 8}
!77 = metadata !{metadata !78, metadata !4, i64 0}
!78 = metadata !{metadata !"iv", metadata !4, i64 0, metadata !4, i64 8}
!79 = metadata !{metadata !80, metadata !3, i64 8}
!80 = metadata !{metadata !"const_equiv_data", metadata !6, i64 0, metadata !3, i64 8}
!81 = metadata !{metadata !22, metadata !6, i64 624}
!82 = metadata !{metadata !80, metadata !6, i64 0}
!83 = metadata !{metadata !83, metadata !84, metadata !85}
!84 = metadata !{metadata !"llvm.vectorizer.width", i32 1}
!85 = metadata !{metadata !"llvm.vectorizer.unroll", i32 1}
!86 = metadata !{metadata !86, metadata !84, metadata !85}
!87 = metadata !{metadata !2, metadata !6, i64 232}
!88 = metadata !{metadata !12, metadata !6, i64 112}
!89 = metadata !{metadata !2, metadata !6, i64 208}
!90 = metadata !{metadata !91, metadata !91, i64 0}
!91 = metadata !{metadata !"short", metadata !4, i64 0}
!92 = metadata !{metadata !12, metadata !6, i64 40}
!93 = metadata !{metadata !12, metadata !6, i64 56}
!94 = metadata !{metadata !12, metadata !6, i64 64}
