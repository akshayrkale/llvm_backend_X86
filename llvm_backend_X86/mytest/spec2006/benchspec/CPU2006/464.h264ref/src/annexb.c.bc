; ModuleID = 'annexb.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type opaque
%struct.Picture = type { i32, i32, [100 x %struct.Slice*], i32, float, float, float }
%struct.Slice = type { i32, i32, i32, i32, i32, i32, %struct.datapartition*, %struct.MotionInfoContexts*, %struct.TextureInfoContexts*, %struct.RMPNIbuffer_s*, i32, i32*, i32*, i32*, i32, i32*, i32*, i32*, i32 (i32)*, [3 x [2 x i32]] }
%struct.datapartition = type { %struct.Bitstream*, %struct.EncodingEnvironment, i32 (%struct.syntaxelement*, %struct.datapartition*)* }
%struct.Bitstream = type { i32, i32, i8, i32, i32, i8, i8, i32, i32, i8*, i32 }
%struct.EncodingEnvironment = type { i32, i32, i32, i32, i32, i8*, i32*, i32, i32, i32, i32, i32, i8*, i32*, i32, i32, i32, i32, i32, i32 }
%struct.syntaxelement = type { i32, i32, i32, i32, i32, i32, i32, i32, void (i32, i32, i32*, i32*)*, void (%struct.syntaxelement*, %struct.EncodingEnvironment*)* }
%struct.MotionInfoContexts = type { [3 x [11 x %struct.BiContextType]], [2 x [9 x %struct.BiContextType]], [2 x [10 x %struct.BiContextType]], [2 x [6 x %struct.BiContextType]], [4 x %struct.BiContextType], [4 x %struct.BiContextType], [3 x %struct.BiContextType] }
%struct.BiContextType = type { i16, i8, i64 }
%struct.TextureInfoContexts = type { [2 x %struct.BiContextType], [4 x %struct.BiContextType], [3 x [4 x %struct.BiContextType]], [10 x [4 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]], [10 x [5 x %struct.BiContextType]], [10 x [5 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]] }
%struct.RMPNIbuffer_s = type { i32, i32, %struct.RMPNIbuffer_s* }
%struct.pic_parameter_set_rbsp_t = type { i32, i32, i32, i32, i32, i32, [8 x i32], i32, i32, i32, [8 x i32], [8 x i32], [8 x i32], i32, i32, i32, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.seq_parameter_set_rbsp_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [8 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, [256 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.vui_seq_parameters_t }
%struct.vui_seq_parameters_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.hrd_parameters_t, i32, %struct.hrd_parameters_t, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.hrd_parameters_t = type { i32, i32, i32, [32 x i32], [32 x i32], [32 x i32], i32, i32, i32, i32 }
%struct.GOP_DATA = type { i32, i32, i32, i32, i32, i32 }
%struct.RD_DATA = type { double, [16 x [16 x i32]], [16 x [16 x i32]], [16 x [16 x i32]], i32****, i32***, i32, i32, [4 x i32], [4 x i32], i32**, [16 x i32], i32, i64, i32, i16******, i16******, i16******, i16******, [2 x [4 x [4 x i16]]], i32, i32, i32, i32, i32, i32, i32 }
%struct.NALU_t = type { i32, i32, i32, i32, i32, i32, i8* }

@.str = private unnamed_addr constant [10 x i8] c"n != NULL\00", align 1
@.str1 = private unnamed_addr constant [9 x i8] c"annexb.c\00", align 1
@__func__.WriteAnnexbNALU = private unnamed_addr constant [16 x i8] c"WriteAnnexbNALU\00", align 1
@.str2 = private unnamed_addr constant [22 x i8] c"n->forbidden_bit == 0\00", align 1
@f = internal unnamed_addr global %struct._IO_FILE* null, align 8
@.str3 = private unnamed_addr constant [10 x i8] c"f != NULL\00", align 1
@.str4 = private unnamed_addr constant [59 x i8] c"n->startcodeprefix_len == 3 || n->startcodeprefix_len == 4\00", align 1
@.str5 = private unnamed_addr constant [59 x i8] c"Fatal: cannot write %d bytes to bitstream file, exit (-1)\0A\00", align 1
@.str6 = private unnamed_addr constant [3 x i8] c"wb\00", align 1
@.str7 = private unnamed_addr constant [60 x i8] c"Fatal: cannot open Annex B bytestream file '%s', exit (-1)\0A\00", align 1
@top_pic = common global %struct.Picture* null, align 8
@bottom_pic = common global %struct.Picture* null, align 8
@frame_pic = common global %struct.Picture* null, align 8
@frame_pic2 = common global %struct.Picture* null, align 8
@frame_pic3 = common global %struct.Picture* null, align 8
@imgY_org = common global i16** null, align 8
@imgUV_org = common global i16*** null, align 8
@img4Y_tmp = common global i32** null, align 8
@log2_max_frame_num_minus4 = common global i32 0, align 4
@log2_max_pic_order_cnt_lsb_minus4 = common global i32 0, align 4
@me_tot_time = common global i32 0, align 4
@me_time = common global i32 0, align 4
@active_pps = common global %struct.pic_parameter_set_rbsp_t* null, align 8
@active_sps = common global %struct.seq_parameter_set_rbsp_t* null, align 8
@mb_adaptive = common global i32 0, align 4
@MBPairIsField = common global i32 0, align 4
@wp_weight = common global i32*** null, align 8
@wp_offset = common global i32*** null, align 8
@wbp_weight = common global i32**** null, align 8
@luma_log_weight_denom = common global i32 0, align 4
@chroma_log_weight_denom = common global i32 0, align 4
@wp_luma_round = common global i32 0, align 4
@wp_chroma_round = common global i32 0, align 4
@imgY_org_top = common global i16** null, align 8
@imgY_org_bot = common global i16** null, align 8
@imgUV_org_top = common global i16*** null, align 8
@imgUV_org_bot = common global i16*** null, align 8
@imgY_org_frm = common global i16** null, align 8
@imgUV_org_frm = common global i16*** null, align 8
@imgY_com = common global i16** null, align 8
@imgUV_com = common global i16*** null, align 8
@direct_ref_idx = common global i16*** null, align 8
@direct_pdir = common global i16** null, align 8
@pixel_map = common global i8** null, align 8
@refresh_map = common global i8** null, align 8
@intras = common global i32 0, align 4
@Iframe_ctr = common global i32 0, align 4
@Pframe_ctr = common global i32 0, align 4
@Bframe_ctr = common global i32 0, align 4
@frame_no = common global i32 0, align 4
@nextP_tr_fld = common global i32 0, align 4
@nextP_tr_frm = common global i32 0, align 4
@tot_time = common global i32 0, align 4
@errortext = common global [300 x i8] zeroinitializer, align 16
@resTrans_R = common global [16 x [16 x i32]] zeroinitializer, align 16
@resTrans_G = common global [16 x [16 x i32]] zeroinitializer, align 16
@resTrans_B = common global [16 x [16 x i32]] zeroinitializer, align 16
@rec_resR = common global [16 x [16 x i32]] zeroinitializer, align 16
@rec_resG = common global [16 x [16 x i32]] zeroinitializer, align 16
@rec_resB = common global [16 x [16 x i32]] zeroinitializer, align 16
@mprRGB = common global [3 x [16 x [16 x i32]]] zeroinitializer, align 16
@dc_level = common global [2 x [4 x [4 x i32]]] zeroinitializer, align 16
@dc_level_temp = common global [2 x [4 x [4 x i32]]] zeroinitializer, align 16
@cbp_chroma_block = common global [2 x [4 x [4 x i32]]] zeroinitializer, align 16
@cbp_chroma_block_temp = common global [2 x [4 x [4 x i32]]] zeroinitializer, align 16
@b8_ipredmode8x8 = common global [4 x [4 x i32]] zeroinitializer, align 16
@b8_intra_pred_modes8x8 = common global [16 x i32] zeroinitializer, align 16
@gop_structure = common global %struct.GOP_DATA* null, align 8
@rdopt = common global %struct.RD_DATA* null, align 8
@rddata_top_frame_mb = common global %struct.RD_DATA zeroinitializer, align 8
@rddata_bot_frame_mb = common global %struct.RD_DATA zeroinitializer, align 8
@rddata_top_field_mb = common global %struct.RD_DATA zeroinitializer, align 8
@rddata_bot_field_mb = common global %struct.RD_DATA zeroinitializer, align 8
@p_stat = common global %struct._IO_FILE* null, align 8
@p_log = common global %struct._IO_FILE* null, align 8
@p_trace = common global %struct._IO_FILE* null, align 8
@p_in = common global i32 0, align 4
@p_dec = common global i32 0, align 4
@glob_remapping_of_pic_nums_idc_l0 = common global [20 x i32] zeroinitializer, align 16
@glob_abs_diff_pic_num_minus1_l0 = common global [20 x i32] zeroinitializer, align 16
@glob_long_term_pic_idx_l0 = common global [20 x i32] zeroinitializer, align 16
@glob_remapping_of_pic_nums_idc_l1 = common global [20 x i32] zeroinitializer, align 16
@glob_abs_diff_pic_num_minus1_l1 = common global [20 x i32] zeroinitializer, align 16
@glob_long_term_pic_idx_l1 = common global [20 x i32] zeroinitializer, align 16
@Bytes_After_Header = common global i32 0, align 4
@rpc_bytes_to_go = common global i32 0, align 4
@rpc_bits_to_go = common global i32 0, align 4
@str = private unnamed_addr constant [55 x i8] c"Fatal: cannot close Annex B bytestream file, exit (-1)\00"

; Function Attrs: nounwind uwtable
define i32 @WriteAnnexbNALU(%struct.NALU_t* readonly %n) #0 {
entry:
  %cmp = icmp eq %struct.NALU_t* %n, null
  br i1 %cmp, label %lor.rhs, label %lor.end

lor.rhs:                                          ; preds = %entry
  tail call void @__assert_fail(i8* getelementptr inbounds ([10 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1, i64 0, i64 0), i32 38, i8* getelementptr inbounds ([16 x i8]* @__func__.WriteAnnexbNALU, i64 0, i64 0)) #4
  br label %lor.end

lor.end:                                          ; preds = %entry, %lor.rhs
  %forbidden_bit = getelementptr inbounds %struct.NALU_t* %n, i64 0, i32 5
  %0 = load i32* %forbidden_bit, align 4, !tbaa !1
  %cmp1 = icmp eq i32 %0, 0
  br i1 %cmp1, label %lor.end3, label %lor.rhs2

lor.rhs2:                                         ; preds = %lor.end
  tail call void @__assert_fail(i8* getelementptr inbounds ([22 x i8]* @.str2, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1, i64 0, i64 0), i32 39, i8* getelementptr inbounds ([16 x i8]* @__func__.WriteAnnexbNALU, i64 0, i64 0)) #4
  br label %lor.end3

lor.end3:                                         ; preds = %lor.rhs2, %lor.end
  %1 = load %struct._IO_FILE** @f, align 8, !tbaa !7
  %cmp5 = icmp eq %struct._IO_FILE* %1, null
  br i1 %cmp5, label %lor.rhs6, label %lor.end7

lor.rhs6:                                         ; preds = %lor.end3
  tail call void @__assert_fail(i8* getelementptr inbounds ([10 x i8]* @.str3, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1, i64 0, i64 0), i32 40, i8* getelementptr inbounds ([16 x i8]* @__func__.WriteAnnexbNALU, i64 0, i64 0)) #4
  br label %lor.end7

lor.end7:                                         ; preds = %lor.end3, %lor.rhs6
  %startcodeprefix_len = getelementptr inbounds %struct.NALU_t* %n, i64 0, i32 0
  %2 = load i32* %startcodeprefix_len, align 4, !tbaa !8
  %.off = add i32 %2, -3
  %switch = icmp ult i32 %.off, 2
  br i1 %switch, label %lor.end13, label %lor.rhs12

lor.rhs12:                                        ; preds = %lor.end7
  tail call void @__assert_fail(i8* getelementptr inbounds ([59 x i8]* @.str4, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1, i64 0, i64 0), i32 41, i8* getelementptr inbounds ([16 x i8]* @__func__.WriteAnnexbNALU, i64 0, i64 0)) #4
  %.pr = load i32* %startcodeprefix_len, align 4, !tbaa !8
  br label %lor.end13

lor.end13:                                        ; preds = %lor.end7, %lor.rhs12
  %3 = phi i32 [ %2, %lor.end7 ], [ %.pr, %lor.rhs12 ]
  %cmp16 = icmp sgt i32 %3, 3
  br i1 %cmp16, label %if.then, label %if.end

if.then:                                          ; preds = %lor.end13
  %4 = load %struct._IO_FILE** @f, align 8, !tbaa !7
  %call = tail call i32 @putc(i32 0, %struct._IO_FILE* %4) #4
  br label %if.end

if.end:                                           ; preds = %if.then, %lor.end13
  %BitsWritten.0 = phi i32 [ 32, %if.then ], [ 24, %lor.end13 ]
  %5 = load %struct._IO_FILE** @f, align 8, !tbaa !7
  %call17 = tail call i32 @putc(i32 0, %struct._IO_FILE* %5) #4
  %6 = load %struct._IO_FILE** @f, align 8, !tbaa !7
  %call18 = tail call i32 @putc(i32 0, %struct._IO_FILE* %6) #4
  %7 = load %struct._IO_FILE** @f, align 8, !tbaa !7
  %call19 = tail call i32 @putc(i32 1, %struct._IO_FILE* %7) #4
  %8 = load i32* %forbidden_bit, align 4, !tbaa !1
  %shl = shl i32 %8, 7
  %nal_reference_idc = getelementptr inbounds %struct.NALU_t* %n, i64 0, i32 4
  %9 = load i32* %nal_reference_idc, align 4, !tbaa !9
  %shl21 = shl i32 %9, 5
  %or = or i32 %shl21, %shl
  %nal_unit_type = getelementptr inbounds %struct.NALU_t* %n, i64 0, i32 3
  %10 = load i32* %nal_unit_type, align 4, !tbaa !10
  %or22 = or i32 %or, %10
  %conv = trunc i32 %or22 to i8
  %buf = getelementptr inbounds %struct.NALU_t* %n, i64 0, i32 6
  %11 = load i8** %buf, align 8, !tbaa !11
  store i8 %conv, i8* %11, align 1, !tbaa !12
  %len = getelementptr inbounds %struct.NALU_t* %n, i64 0, i32 1
  %12 = load i32* %len, align 4, !tbaa !13
  %conv23 = zext i32 %12 to i64
  %13 = load i8** %buf, align 8, !tbaa !11
  %14 = load %struct._IO_FILE** @f, align 8, !tbaa !7
  %call27 = tail call i64 @fwrite(i8* %13, i64 1, i64 %conv23, %struct._IO_FILE* %14) #4
  %cmp28 = icmp eq i64 %conv23, %call27
  %15 = load i32* %len, align 4, !tbaa !13
  br i1 %cmp28, label %if.end33, label %if.then30

if.then30:                                        ; preds = %if.end
  %call32 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([59 x i8]* @.str5, i64 0, i64 0), i32 %15) #4
  tail call void @exit(i32 -1) #5
  unreachable

if.end33:                                         ; preds = %if.end
  %mul = shl i32 %15, 3
  %add35 = add i32 %mul, %BitsWritten.0
  %16 = load %struct._IO_FILE** @f, align 8, !tbaa !7
  %call36 = tail call i32 @fflush(%struct._IO_FILE* %16) #4
  ret i32 %add35
}

declare void @__assert_fail(i8*, i8*, i32, i8*) #1

; Function Attrs: nounwind
declare i32 @putc(i32, %struct._IO_FILE* nocapture) #2

; Function Attrs: nounwind
declare i64 @fwrite(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) #2

; Function Attrs: nounwind
declare i32 @printf(i8* nocapture readonly, ...) #2

; Function Attrs: noreturn
declare void @exit(i32) #3

; Function Attrs: nounwind
declare i32 @fflush(%struct._IO_FILE* nocapture) #2

; Function Attrs: nounwind uwtable
define void @OpenAnnexbFile(i8* %Filename) #0 {
entry:
  %call = tail call %struct._IO_FILE* @fopen(i8* %Filename, i8* getelementptr inbounds ([3 x i8]* @.str6, i64 0, i64 0)) #4
  store %struct._IO_FILE* %call, %struct._IO_FILE** @f, align 8, !tbaa !7
  %cmp = icmp eq %struct._IO_FILE* %call, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call1 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([60 x i8]* @.str7, i64 0, i64 0), i8* %Filename) #4
  tail call void @exit(i32 -1) #5
  unreachable

if.end:                                           ; preds = %entry
  ret void
}

; Function Attrs: nounwind
declare noalias %struct._IO_FILE* @fopen(i8* nocapture readonly, i8* nocapture readonly) #2

; Function Attrs: nounwind uwtable
define void @CloseAnnexbFile() #0 {
entry:
  %0 = load %struct._IO_FILE** @f, align 8, !tbaa !7
  %call = tail call i32 @fclose(%struct._IO_FILE* %0) #4
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %puts = tail call i32 @puts(i8* getelementptr inbounds ([55 x i8]* @str, i64 0, i64 0))
  tail call void @exit(i32 -1) #5
  unreachable

if.end:                                           ; preds = %entry
  ret void
}

; Function Attrs: nounwind
declare i32 @fclose(%struct._IO_FILE* nocapture) #2

; Function Attrs: nounwind
declare i32 @puts(i8* nocapture readonly) #4

attributes #0 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { noreturn nounwind }

!llvm.ident = !{!0}

!0 = metadata !{metadata !"clang version 3.5 (trunk)"}
!1 = metadata !{metadata !2, metadata !3, i64 20}
!2 = metadata !{metadata !"", metadata !3, i64 0, metadata !3, i64 4, metadata !3, i64 8, metadata !3, i64 12, metadata !3, i64 16, metadata !3, i64 20, metadata !6, i64 24}
!3 = metadata !{metadata !"int", metadata !4, i64 0}
!4 = metadata !{metadata !"omnipotent char", metadata !5, i64 0}
!5 = metadata !{metadata !"Simple C/C++ TBAA"}
!6 = metadata !{metadata !"any pointer", metadata !4, i64 0}
!7 = metadata !{metadata !6, metadata !6, i64 0}
!8 = metadata !{metadata !2, metadata !3, i64 0}
!9 = metadata !{metadata !2, metadata !3, i64 16}
!10 = metadata !{metadata !2, metadata !3, i64 12}
!11 = metadata !{metadata !2, metadata !6, i64 24}
!12 = metadata !{metadata !4, metadata !4, i64 0}
!13 = metadata !{metadata !2, metadata !3, i64 4}
