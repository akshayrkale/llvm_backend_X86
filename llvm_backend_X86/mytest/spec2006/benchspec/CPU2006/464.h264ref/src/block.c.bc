; ModuleID = 'block.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.storable_picture = type { i32, i32, i32, i32, i32, i32, [6 x [33 x i64]], [6 x [33 x i64]], [6 x [33 x i64]], [6 x [33 x i64]], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16**, i16*, i16*, i16**, i16**, i16***, i8*, i16***, i64***, i64***, i16****, i8**, i8**, %struct.storable_picture*, %struct.storable_picture*, %struct.storable_picture*, i32, i32, i32, i32, i32, i32, i32 }
%struct.ImageParameters = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32**, i32**, i32, i32***, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [9 x [16 x [16 x i16]]], [5 x [16 x [16 x i16]]], [9 x [8 x [8 x i16]]], [2 x [4 x [16 x [16 x i16]]]], [16 x [16 x i16]], [16 x [16 x i32]], i32****, i32***, %struct.Picture*, %struct.Slice*, %struct.macroblock*, [1200 x %struct.syntaxelement], i32*, i32*, i32, i32, i32, i32, [4 x [4 x i32]], i32, i32, i32, i32, i32, double, i32, i32, i32, i32, i16******, i16******, i16******, i16******, [15 x i16], i32, i32, i32, i32, i32, i32, i32, i32, [6 x [15 x i32]], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1 x i32], i32, i32, [2 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.DecRefPicMarking_s*, i32, i32, i32, i32, i32, double, i32, i32, i32, i32, i32, i32, i32, double*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32], i32, i32, i32 }
%struct.Picture = type { i32, i32, [100 x %struct.Slice*], i32, float, float, float }
%struct.Slice = type { i32, i32, i32, i32, i32, i32, %struct.datapartition*, %struct.MotionInfoContexts*, %struct.TextureInfoContexts*, %struct.RMPNIbuffer_s*, i32, i32*, i32*, i32*, i32, i32*, i32*, i32*, i32 (i32)*, [3 x [2 x i32]] }
%struct.datapartition = type { %struct.Bitstream*, %struct.EncodingEnvironment, i32 (%struct.syntaxelement*, %struct.datapartition*)* }
%struct.Bitstream = type { i32, i32, i8, i32, i32, i8, i8, i32, i32, i8*, i32 }
%struct.EncodingEnvironment = type { i32, i32, i32, i32, i32, i8*, i32*, i32, i32, i32, i32, i32, i8*, i32*, i32, i32, i32, i32, i32, i32 }
%struct.syntaxelement = type { i32, i32, i32, i32, i32, i32, i32, i32, void (i32, i32, i32*, i32*)*, void (%struct.syntaxelement*, %struct.EncodingEnvironment*)* }
%struct.MotionInfoContexts = type { [3 x [11 x %struct.BiContextType]], [2 x [9 x %struct.BiContextType]], [2 x [10 x %struct.BiContextType]], [2 x [6 x %struct.BiContextType]], [4 x %struct.BiContextType], [4 x %struct.BiContextType], [3 x %struct.BiContextType] }
%struct.BiContextType = type { i16, i8, i64 }
%struct.TextureInfoContexts = type { [2 x %struct.BiContextType], [4 x %struct.BiContextType], [3 x [4 x %struct.BiContextType]], [10 x [4 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]], [10 x [5 x %struct.BiContextType]], [10 x [5 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]] }
%struct.RMPNIbuffer_s = type { i32, i32, %struct.RMPNIbuffer_s* }
%struct.macroblock = type { i32, i32, i32, i32, i32, [8 x i32], %struct.macroblock*, %struct.macroblock*, i32, [2 x [4 x [4 x [2 x i32]]]], [16 x i32], [16 x i32], i32, i64, [4 x i32], [4 x i32], i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, double, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.DecRefPicMarking_s = type { i32, i32, i32, i32, i32, %struct.DecRefPicMarking_s* }
%struct.InputParameters = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [8 x [2 x i32]], [8 x [2 x i32]], i32, i32, i32, i32, [200 x i8], [200 x i8], [200 x i8], [200 x i8], [200 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1024 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [200 x i8], [200 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [200 x i8], i32, i32, i32*, i32*, i8*, i32*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [8 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [6 x double], [200 x i8], i32 }
%struct.pic_parameter_set_rbsp_t = type { i32, i32, i32, i32, i32, i32, [8 x i32], i32, i32, i32, [8 x i32], [8 x i32], [8 x i32], i32, i32, i32, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.seq_parameter_set_rbsp_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [8 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, [256 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.vui_seq_parameters_t }
%struct.vui_seq_parameters_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.hrd_parameters_t, i32, %struct.hrd_parameters_t, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.hrd_parameters_t = type { i32, i32, i32, [32 x i32], [32 x i32], [32 x i32], i32, i32, i32, i32 }
%struct.GOP_DATA = type { i32, i32, i32, i32, i32, i32 }
%struct.RD_DATA = type { double, [16 x [16 x i32]], [16 x [16 x i32]], [16 x [16 x i32]], i32****, i32***, i32, i32, [4 x i32], [4 x i32], i32**, [16 x i32], i32, i64, i32, i16******, i16******, i16******, i16******, [2 x [4 x [4 x i16]]], i32, i32, i32, i32, i32, i32, i32 }
%struct._IO_FILE = type opaque
%struct.pix_pos = type { i32, i32, i32, i32, i32, i32 }

@QP_SCALE_CR = constant [52 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F\10\11\12\13\14\15\16\17\18\19\1A\1B\1C\1D\1D\1E\1F  !\22\22##$$%%%&&&''''", align 16
@SNGL_SCAN = constant [16 x [2 x i8]] [[2 x i8] zeroinitializer, [2 x i8] c"\01\00", [2 x i8] c"\00\01", [2 x i8] c"\00\02", [2 x i8] c"\01\01", [2 x i8] c"\02\00", [2 x i8] c"\03\00", [2 x i8] c"\02\01", [2 x i8] c"\01\02", [2 x i8] c"\00\03", [2 x i8] c"\01\03", [2 x i8] c"\02\02", [2 x i8] c"\03\01", [2 x i8] c"\03\02", [2 x i8] c"\02\03", [2 x i8] c"\03\03"], align 16
@FIELD_SCAN = constant [16 x [2 x i8]] [[2 x i8] zeroinitializer, [2 x i8] c"\00\01", [2 x i8] c"\01\00", [2 x i8] c"\00\02", [2 x i8] c"\00\03", [2 x i8] c"\01\01", [2 x i8] c"\01\02", [2 x i8] c"\01\03", [2 x i8] c"\02\00", [2 x i8] c"\02\01", [2 x i8] c"\02\02", [2 x i8] c"\02\03", [2 x i8] c"\03\00", [2 x i8] c"\03\01", [2 x i8] c"\03\02", [2 x i8] c"\03\03"], align 16
@COEFF_COST = constant [2 x [16 x i8]] [[16 x i8] c"\03\02\02\01\01\01\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09"], align 16
@COEFF_BIT_COST = constant [3 x [16 x [16 x i8]]] [[16 x [16 x i8]] [[16 x i8] c"\03\05\07\09\09\0B\0B\0B\0B\0D\0D\0D\0D\0D\0D\0D", [16 x i8] c"\05\07\09\09\0B\0B\0B\0B\0D\0D\0D\0D\0D\0D\0D\0D", [16 x i8] c"\07\09\09\0B\0B\0B\0B\0D\0D\0D\0D\0D\0D\0D\0D\0F", [16 x i8] c"\07\09\09\0B\0B\0B\0B\0D\0D\0D\0D\0D\0D\0D\0D\0F", [16 x i8] c"\07\07\09\09\09\09\0B\0B\0B\0B\0B\0B\0B\0B\0D\0D", [16 x i8] c"\07\07\09\09\09\09\0B\0B\0B\0B\0B\0B\0B\0B\0D\0D", [16 x i8] c"\07\07\09\09\09\09\0B\0B\0B\0B\0B\0B\0B\0B\0D\0D", [16 x i8] c"\07\07\09\09\09\09\0B\0B\0B\0B\0B\0B\0B\0B\0D\0D", [16 x i8] c"\07\07\09\09\09\09\0B\0B\0B\0B\0B\0B\0B\0B\0D\0D", [16 x i8] c"\07\07\09\09\09\09\0B\0B\0B\0B\0B\0B\0B\0B\0D\0D", [16 x i8] c"\07\07\09\09\09\09\0B\0B\0B\0B\0B\0B\0B\0B\0D\0D", [16 x i8] c"\07\07\09\09\09\09\0B\0B\0B\0B\0B\0B\0B\0B\0D\0D", [16 x i8] c"\07\07\09\09\09\09\0B\0B\0B\0B\0B\0B\0B\0B\0D\0D", [16 x i8] c"\07\07\09\09\09\09\0B\0B\0B\0B\0B\0B\0B\0B\0D\0D", [16 x i8] c"\07\07\09\09\09\09\0B\0B\0B\0B\0B\0B\0B\0B\0D\0D", [16 x i8] c"\07\07\09\09\09\09\0B\0B\0B\0B\0B\0B\0B\0B\0D\0D"], [16 x [16 x i8]] [[16 x i8] c"\03\05\07\07\07\09\09\09\09\0B\0B\0D\0D\0D\0D\0F", [16 x i8] c"\05\09\09\0B\0B\0D\0D\0D\0D\0F\0F\0F\0F\0F\0F\0F", [16 x i8] c"\07\0B\0B\0D\0D\0D\0D\0F\0F\0F\0F\0F\0F\0F\0F\11", [16 x i8] c"\09\0B\0B\0D\0D\0D\0D\0F\0F\0F\0F\0F\0F\0F\0F\11", [16 x i8] c"\09\0B\0B\0D\0D\0D\0D\0F\0F\0F\0F\0F\0F\0F\0F\11", [16 x i8] c"\0B\0B\0D\0D\0D\0D\0F\0F\0F\0F\0F\0F\0F\0F\11\11", [16 x i8] c"\0B\0B\0D\0D\0D\0D\0F\0F\0F\0F\0F\0F\0F\0F\11\11", [16 x i8] c"\0B\0B\0D\0D\0D\0D\0F\0F\0F\0F\0F\0F\0F\0F\11\11", [16 x i8] c"\0B\0B\0D\0D\0D\0D\0F\0F\0F\0F\0F\0F\0F\0F\11\11", [16 x i8] c"\0B\0B\0D\0D\0D\0D\0F\0F\0F\0F\0F\0F\0F\0F\11\11", [16 x i8] c"\0B\0B\0D\0D\0D\0D\0F\0F\0F\0F\0F\0F\0F\0F\11\11", [16 x i8] c"\0B\0B\0D\0D\0D\0D\0F\0F\0F\0F\0F\0F\0F\0F\11\11", [16 x i8] c"\0B\0B\0D\0D\0D\0D\0F\0F\0F\0F\0F\0F\0F\0F\11\11", [16 x i8] c"\0B\0B\0D\0D\0D\0D\0F\0F\0F\0F\0F\0F\0F\0F\11\11", [16 x i8] zeroinitializer, [16 x i8] zeroinitializer], [16 x [16 x i8]] [[16 x i8] c"\03\07\09\09\0B\0D\0D\0F\0F\0F\0F\11\11\11\11\11", [16 x i8] c"\05\09\0B\0D\0D\0F\0F\0F\0F\11\11\11\11\11\11\11", [16 x i8] c"\05\09\0B\0D\0D\0F\0F\0F\0F\11\11\11\11\11\11\11", [16 x i8] c"\07\0B\0D\0D\0F\0F\0F\0F\11\11\11\11\11\11\11\11", [16 x i8] c"\07\0B\0D\0D\0F\0F\0F\0F\11\11\11\11\11\11\11\11", [16 x i8] c"\07\0B\0D\0D\0F\0F\0F\0F\11\11\11\11\11\11\11\11", [16 x i8] c"\09\0B\0D\0D\0F\0F\0F\0F\11\11\11\11\11\11\11\11", [16 x i8] c"\09\0B\0D\0D\0F\0F\0F\0F\11\11\11\11\11\11\11\11", [16 x i8] c"\09\0B\0D\0D\0F\0F\0F\0F\11\11\11\11\11\11\11\11", [16 x i8] c"\09\0B\0D\0D\0F\0F\0F\0F\11\11\11\11\11\11\11\11", [16 x i8] c"\0B\0D\0D\0F\0F\0F\0F\11\11\11\11\11\11\11\11\13", [16 x i8] c"\0B\0D\0D\0F\0F\0F\0F\11\11\11\11\11\11\11\11\13", [16 x i8] c"\0B\0D\0D\0F\0F\0F\0F\11\11\11\11\11\11\11\11\13", [16 x i8] c"\0B\0D\0D\0F\0F\0F\0F\11\11\11\11\11\11\11\11\13", [16 x i8] c"\0B\0D\0D\0F\0F\0F\0F\11\11\11\11\11\11\11\11\13", [16 x i8] c"\0B\0D\0D\0F\0F\0F\0F\11\11\11\11\11\11\11\11\13"]], align 16
@SCAN_YUV422 = constant [8 x [2 x i8]] [[2 x i8] zeroinitializer, [2 x i8] c"\00\01", [2 x i8] c"\01\00", [2 x i8] c"\00\02", [2 x i8] c"\00\03", [2 x i8] c"\01\01", [2 x i8] c"\01\02", [2 x i8] c"\01\03"], align 16
@hor_offset = constant [4 x [4 x [4 x i8]]] [[4 x [4 x i8]] zeroinitializer, [4 x [4 x i8]] [[4 x i8] c"\00\04\00\04", [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer], [4 x [4 x i8]] [[4 x i8] c"\00\04\00\04", [4 x i8] c"\00\04\00\04", [4 x i8] zeroinitializer, [4 x i8] zeroinitializer], [4 x [4 x i8]] [[4 x i8] c"\00\04\00\04", [4 x i8] c"\08\0C\08\0C", [4 x i8] c"\00\04\00\04", [4 x i8] c"\08\0C\08\0C"]], align 16
@ver_offset = constant [4 x [4 x [4 x i8]]] [[4 x [4 x i8]] zeroinitializer, [4 x [4 x i8]] [[4 x i8] c"\00\00\04\04", [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer], [4 x [4 x i8]] [[4 x i8] c"\00\00\04\04", [4 x i8] c"\08\08\0C\0C", [4 x i8] zeroinitializer, [4 x i8] zeroinitializer], [4 x [4 x i8]] [[4 x i8] c"\00\00\04\04", [4 x i8] c"\00\00\04\04", [4 x i8] c"\08\08\0C\0C", [4 x i8] c"\08\08\0C\0C"]], align 16
@quant_coef = constant [6 x [4 x [4 x i32]]] [[4 x [4 x i32]] [[4 x i32] [i32 13107, i32 8066, i32 13107, i32 8066], [4 x i32] [i32 8066, i32 5243, i32 8066, i32 5243], [4 x i32] [i32 13107, i32 8066, i32 13107, i32 8066], [4 x i32] [i32 8066, i32 5243, i32 8066, i32 5243]], [4 x [4 x i32]] [[4 x i32] [i32 11916, i32 7490, i32 11916, i32 7490], [4 x i32] [i32 7490, i32 4660, i32 7490, i32 4660], [4 x i32] [i32 11916, i32 7490, i32 11916, i32 7490], [4 x i32] [i32 7490, i32 4660, i32 7490, i32 4660]], [4 x [4 x i32]] [[4 x i32] [i32 10082, i32 6554, i32 10082, i32 6554], [4 x i32] [i32 6554, i32 4194, i32 6554, i32 4194], [4 x i32] [i32 10082, i32 6554, i32 10082, i32 6554], [4 x i32] [i32 6554, i32 4194, i32 6554, i32 4194]], [4 x [4 x i32]] [[4 x i32] [i32 9362, i32 5825, i32 9362, i32 5825], [4 x i32] [i32 5825, i32 3647, i32 5825, i32 3647], [4 x i32] [i32 9362, i32 5825, i32 9362, i32 5825], [4 x i32] [i32 5825, i32 3647, i32 5825, i32 3647]], [4 x [4 x i32]] [[4 x i32] [i32 8192, i32 5243, i32 8192, i32 5243], [4 x i32] [i32 5243, i32 3355, i32 5243, i32 3355], [4 x i32] [i32 8192, i32 5243, i32 8192, i32 5243], [4 x i32] [i32 5243, i32 3355, i32 5243, i32 3355]], [4 x [4 x i32]] [[4 x i32] [i32 7282, i32 4559, i32 7282, i32 4559], [4 x i32] [i32 4559, i32 2893, i32 4559, i32 2893], [4 x i32] [i32 7282, i32 4559, i32 7282, i32 4559], [4 x i32] [i32 4559, i32 2893, i32 4559, i32 2893]]], align 16
@dequant_coef = constant [6 x [4 x [4 x i32]]] [[4 x [4 x i32]] [[4 x i32] [i32 10, i32 13, i32 10, i32 13], [4 x i32] [i32 13, i32 16, i32 13, i32 16], [4 x i32] [i32 10, i32 13, i32 10, i32 13], [4 x i32] [i32 13, i32 16, i32 13, i32 16]], [4 x [4 x i32]] [[4 x i32] [i32 11, i32 14, i32 11, i32 14], [4 x i32] [i32 14, i32 18, i32 14, i32 18], [4 x i32] [i32 11, i32 14, i32 11, i32 14], [4 x i32] [i32 14, i32 18, i32 14, i32 18]], [4 x [4 x i32]] [[4 x i32] [i32 13, i32 16, i32 13, i32 16], [4 x i32] [i32 16, i32 20, i32 16, i32 20], [4 x i32] [i32 13, i32 16, i32 13, i32 16], [4 x i32] [i32 16, i32 20, i32 16, i32 20]], [4 x [4 x i32]] [[4 x i32] [i32 14, i32 18, i32 14, i32 18], [4 x i32] [i32 18, i32 23, i32 18, i32 23], [4 x i32] [i32 14, i32 18, i32 14, i32 18], [4 x i32] [i32 18, i32 23, i32 18, i32 23]], [4 x [4 x i32]] [[4 x i32] [i32 16, i32 20, i32 16, i32 20], [4 x i32] [i32 20, i32 25, i32 20, i32 25], [4 x i32] [i32 16, i32 20, i32 16, i32 20], [4 x i32] [i32 20, i32 25, i32 20, i32 25]], [4 x [4 x i32]] [[4 x i32] [i32 18, i32 23, i32 18, i32 23], [4 x i32] [i32 23, i32 29, i32 23, i32 29], [4 x i32] [i32 18, i32 23, i32 18, i32 23], [4 x i32] [i32 23, i32 29, i32 23, i32 29]]], align 16
@enc_picture = external global %struct.storable_picture*
@img = external global %struct.ImageParameters*
@input = external global %struct.InputParameters*
@imgY_org = common global i16** null, align 8
@mb_adaptive = common global i32 0, align 4
@LevelScale4x4Luma_Intra = external global [6 x [4 x [4 x i32]]]
@LevelOffset4x4Luma_Intra = external global [13 x [4 x [4 x i32]]]
@InvLevelScale4x4Luma_Intra = external global [6 x [4 x [4 x i32]]]
@LevelScale4x4Luma_Inter = external global [6 x [4 x [4 x i32]]]
@LevelOffset4x4Luma_Inter = external global [13 x [4 x [4 x i32]]]
@InvLevelScale4x4Luma_Inter = external global [6 x [4 x [4 x i32]]]
@dct_chroma.cbpblk_pattern = private unnamed_addr constant [4 x i64] [i64 0, i64 983040, i64 16711680, i64 4294901760], align 16
@LevelScale4x4Chroma_Intra = external global [2 x [6 x [4 x [4 x i32]]]]
@LevelOffset4x4Chroma_Intra = external global [2 x [13 x [4 x [4 x i32]]]]
@LevelScale4x4Chroma_Inter = external global [2 x [6 x [4 x [4 x i32]]]]
@LevelOffset4x4Chroma_Inter = external global [2 x [13 x [4 x [4 x i32]]]]
@InvLevelScale4x4Chroma_Intra = external global [2 x [6 x [4 x [4 x i32]]]]
@InvLevelScale4x4Chroma_Inter = external global [2 x [6 x [4 x [4 x i32]]]]
@cbp_blk_chroma = internal unnamed_addr constant [8 x [4 x i8]] [[4 x i8] c"\10\11\12\13", [4 x i8] c"\14\15\16\17", [4 x i8] c"\18\19\1A\1B", [4 x i8] c"\1C\1D\1E\1F", [4 x i8] c" !\22#", [4 x i8] c"$%&'", [4 x i8] c"()*+", [4 x i8] c",-./"], align 16
@dc_level_temp = common global [2 x [4 x [4 x i32]]] zeroinitializer, align 16
@dc_level = common global [2 x [4 x [4 x i32]]] zeroinitializer, align 16
@A = internal unnamed_addr constant [4 x [4 x i32]] [[4 x i32] [i32 16, i32 20, i32 16, i32 20], [4 x i32] [i32 20, i32 25, i32 20, i32 25], [4 x i32] [i32 16, i32 20, i32 16, i32 20], [4 x i32] [i32 20, i32 25, i32 20, i32 25]], align 16
@active_pps = common global %struct.pic_parameter_set_rbsp_t* null, align 8
@top_pic = common global %struct.Picture* null, align 8
@bottom_pic = common global %struct.Picture* null, align 8
@frame_pic = common global %struct.Picture* null, align 8
@frame_pic2 = common global %struct.Picture* null, align 8
@frame_pic3 = common global %struct.Picture* null, align 8
@imgUV_org = common global i16*** null, align 8
@img4Y_tmp = common global i32** null, align 8
@log2_max_frame_num_minus4 = common global i32 0, align 4
@log2_max_pic_order_cnt_lsb_minus4 = common global i32 0, align 4
@me_tot_time = common global i32 0, align 4
@me_time = common global i32 0, align 4
@active_sps = common global %struct.seq_parameter_set_rbsp_t* null, align 8
@MBPairIsField = common global i32 0, align 4
@wp_weight = common global i32*** null, align 8
@wp_offset = common global i32*** null, align 8
@wbp_weight = common global i32**** null, align 8
@luma_log_weight_denom = common global i32 0, align 4
@chroma_log_weight_denom = common global i32 0, align 4
@wp_luma_round = common global i32 0, align 4
@wp_chroma_round = common global i32 0, align 4
@imgY_org_top = common global i16** null, align 8
@imgY_org_bot = common global i16** null, align 8
@imgUV_org_top = common global i16*** null, align 8
@imgUV_org_bot = common global i16*** null, align 8
@imgY_org_frm = common global i16** null, align 8
@imgUV_org_frm = common global i16*** null, align 8
@imgY_com = common global i16** null, align 8
@imgUV_com = common global i16*** null, align 8
@direct_ref_idx = common global i16*** null, align 8
@direct_pdir = common global i16** null, align 8
@pixel_map = common global i8** null, align 8
@refresh_map = common global i8** null, align 8
@intras = common global i32 0, align 4
@Iframe_ctr = common global i32 0, align 4
@Pframe_ctr = common global i32 0, align 4
@Bframe_ctr = common global i32 0, align 4
@frame_no = common global i32 0, align 4
@nextP_tr_fld = common global i32 0, align 4
@nextP_tr_frm = common global i32 0, align 4
@tot_time = common global i32 0, align 4
@errortext = common global [300 x i8] zeroinitializer, align 16
@resTrans_R = common global [16 x [16 x i32]] zeroinitializer, align 16
@resTrans_G = common global [16 x [16 x i32]] zeroinitializer, align 16
@resTrans_B = common global [16 x [16 x i32]] zeroinitializer, align 16
@rec_resR = common global [16 x [16 x i32]] zeroinitializer, align 16
@rec_resG = common global [16 x [16 x i32]] zeroinitializer, align 16
@rec_resB = common global [16 x [16 x i32]] zeroinitializer, align 16
@mprRGB = common global [3 x [16 x [16 x i32]]] zeroinitializer, align 16
@cbp_chroma_block = common global [2 x [4 x [4 x i32]]] zeroinitializer, align 16
@cbp_chroma_block_temp = common global [2 x [4 x [4 x i32]]] zeroinitializer, align 16
@b8_ipredmode8x8 = common global [4 x [4 x i32]] zeroinitializer, align 16
@b8_intra_pred_modes8x8 = common global [16 x i32] zeroinitializer, align 16
@gop_structure = common global %struct.GOP_DATA* null, align 8
@rdopt = common global %struct.RD_DATA* null, align 8
@rddata_top_frame_mb = common global %struct.RD_DATA zeroinitializer, align 8
@rddata_bot_frame_mb = common global %struct.RD_DATA zeroinitializer, align 8
@rddata_top_field_mb = common global %struct.RD_DATA zeroinitializer, align 8
@rddata_bot_field_mb = common global %struct.RD_DATA zeroinitializer, align 8
@p_stat = common global %struct._IO_FILE* null, align 8
@p_log = common global %struct._IO_FILE* null, align 8
@p_trace = common global %struct._IO_FILE* null, align 8
@p_in = common global i32 0, align 4
@p_dec = common global i32 0, align 4
@glob_remapping_of_pic_nums_idc_l0 = common global [20 x i32] zeroinitializer, align 16
@glob_abs_diff_pic_num_minus1_l0 = common global [20 x i32] zeroinitializer, align 16
@glob_long_term_pic_idx_l0 = common global [20 x i32] zeroinitializer, align 16
@glob_remapping_of_pic_nums_idc_l1 = common global [20 x i32] zeroinitializer, align 16
@glob_abs_diff_pic_num_minus1_l1 = common global [20 x i32] zeroinitializer, align 16
@glob_long_term_pic_idx_l1 = common global [20 x i32] zeroinitializer, align 16
@Bytes_After_Header = common global i32 0, align 4
@rpc_bytes_to_go = common global i32 0, align 4
@rpc_bits_to_go = common global i32 0, align 4

; Function Attrs: nounwind uwtable
define void @intrapred_luma(i32 %img_x, i32 %img_y, i32* nocapture %left_available, i32* nocapture %up_available, i32* nocapture %all_available) #0 {
entry:
  %PredPel = alloca [13 x i32], align 16
  %pix_a = alloca [4 x %struct.pix_pos], align 16
  %pix_b = alloca %struct.pix_pos, align 4
  %pix_c = alloca %struct.pix_pos, align 4
  %pix_d = alloca %struct.pix_pos, align 4
  %0 = bitcast [13 x i32]* %PredPel to i8*
  call void @llvm.lifetime.start(i64 52, i8* %0) #1
  %1 = load %struct.storable_picture** @enc_picture, align 8, !tbaa !1
  %imgY1 = getelementptr inbounds %struct.storable_picture* %1, i64 0, i32 25
  %2 = load i16*** %imgY1, align 8, !tbaa !5
  %and = and i32 %img_x, 15
  %and2 = and i32 %img_y, 15
  %3 = load %struct.ImageParameters** @img, align 8, !tbaa !1
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters* %3, i64 0, i32 3
  %4 = load i32* %current_mb_nr, align 4, !tbaa !8
  %5 = bitcast [4 x %struct.pix_pos]* %pix_a to i8*
  call void @llvm.lifetime.start(i64 96, i8* %5) #1
  %sub = add nsw i32 %and, -1
  %arrayidx = getelementptr inbounds [4 x %struct.pix_pos]* %pix_a, i64 0, i64 0
  call void @getNeighbour(i32 %4, i32 %sub, i32 %and2, i32 1, %struct.pix_pos* %arrayidx) #1
  %6 = add i32 %and2, 1
  %arrayidx.1 = getelementptr inbounds [4 x %struct.pix_pos]* %pix_a, i64 0, i64 1
  call void @getNeighbour(i32 %4, i32 %sub, i32 %6, i32 1, %struct.pix_pos* %arrayidx.1) #1
  %7 = add i32 %and2, 2
  %arrayidx.2 = getelementptr inbounds [4 x %struct.pix_pos]* %pix_a, i64 0, i64 2
  call void @getNeighbour(i32 %4, i32 %sub, i32 %7, i32 1, %struct.pix_pos* %arrayidx.2) #1
  %8 = add i32 %and2, 3
  %arrayidx.3 = getelementptr inbounds [4 x %struct.pix_pos]* %pix_a, i64 0, i64 3
  call void @getNeighbour(i32 %4, i32 %sub, i32 %8, i32 1, %struct.pix_pos* %arrayidx.3) #1
  %sub3 = add nsw i32 %and2, -1
  call void @getNeighbour(i32 %4, i32 %and, i32 %sub3, i32 1, %struct.pix_pos* %pix_b) #1
  %add4 = add nsw i32 %and, 4
  call void @getNeighbour(i32 %4, i32 %add4, i32 %sub3, i32 1, %struct.pix_pos* %pix_c) #1
  call void @getNeighbour(i32 %4, i32 %sub, i32 %sub3, i32 1, %struct.pix_pos* %pix_d) #1
  %available = getelementptr inbounds %struct.pix_pos* %pix_c, i64 0, i32 0
  %9 = load i32* %available, align 4, !tbaa !12
  %tobool = icmp eq i32 %9, 0
  br i1 %tobool, label %land.end13, label %land.rhs

land.rhs:                                         ; preds = %entry
  %10 = and i32 %img_x, 7
  %11 = icmp eq i32 %10, 4
  br i1 %11, label %land.rhs10, label %land.end13

land.rhs10:                                       ; preds = %land.rhs
  %phitmp = icmp ne i32 %and2, 12
  %not.cmp11 = icmp ne i32 %and2, 4
  %.phitmp = and i1 %phitmp, %not.cmp11
  br label %land.end13

land.end13:                                       ; preds = %land.rhs10, %land.rhs, %entry
  %12 = phi i1 [ false, %entry ], [ true, %land.rhs ], [ %.phitmp, %land.rhs10 ]
  %land.ext = zext i1 %12 to i32
  store i32 %land.ext, i32* %available, align 4, !tbaa !12
  %13 = load %struct.InputParameters** @input, align 8, !tbaa !1
  %UseConstrainedIntraPred = getelementptr inbounds %struct.InputParameters* %13, i64 0, i32 24
  %14 = load i32* %UseConstrainedIntraPred, align 4, !tbaa !14
  %tobool15 = icmp eq i32 %14, 0
  br i1 %tobool15, label %if.else, label %for.cond16.preheader

for.cond16.preheader:                             ; preds = %land.end13
  %15 = load %struct.ImageParameters** @img, align 8, !tbaa !1
  %intra_block = getelementptr inbounds %struct.ImageParameters* %15, i64 0, i32 54
  %16 = bitcast [4 x %struct.pix_pos]* %pix_a to i64*
  %17 = load i64* %16, align 16
  %18 = trunc i64 %17 to i32
  %tobool22 = icmp eq i32 %18, 0
  br i1 %tobool22, label %cond.end, label %cond.true

cond.true:                                        ; preds = %for.cond16.preheader
  %idxprom25 = ashr i64 %17, 32
  %19 = load i32** %intra_block, align 8, !tbaa !16
  %arrayidx26 = getelementptr inbounds i32* %19, i64 %idxprom25
  %20 = load i32* %arrayidx26, align 4, !tbaa !17
  %phitmp1289 = and i32 %20, 1
  br label %cond.end

cond.end:                                         ; preds = %for.cond16.preheader, %cond.true
  %cond = phi i32 [ %phitmp1289, %cond.true ], [ 0, %for.cond16.preheader ]
  %available21.1 = getelementptr inbounds [4 x %struct.pix_pos]* %pix_a, i64 0, i64 1, i32 0
  %21 = bitcast i32* %available21.1 to i64*
  %22 = load i64* %21, align 8
  %23 = trunc i64 %22 to i32
  %tobool22.1 = icmp eq i32 %23, 0
  br i1 %tobool22.1, label %cond.end.1, label %cond.true.1

cond.true33:                                      ; preds = %cond.end.3
  %mb_addr34 = getelementptr inbounds %struct.pix_pos* %pix_b, i64 0, i32 1
  %24 = load i32* %mb_addr34, align 4, !tbaa !18
  %idxprom35 = sext i32 %24 to i64
  %25 = load i32** %intra_block, align 8, !tbaa !16
  %arrayidx37 = getelementptr inbounds i32* %25, i64 %idxprom35
  %26 = load i32* %arrayidx37, align 4, !tbaa !17
  br label %cond.end39

cond.end39:                                       ; preds = %cond.end.3, %cond.true33
  %cond40 = phi i32 [ %26, %cond.true33 ], [ 0, %cond.end.3 ]
  br i1 %12, label %cond.true43, label %cond.end49

cond.true43:                                      ; preds = %cond.end39
  %mb_addr44 = getelementptr inbounds %struct.pix_pos* %pix_c, i64 0, i32 1
  %27 = load i32* %mb_addr44, align 4, !tbaa !18
  %idxprom45 = sext i32 %27 to i64
  %28 = load i32** %intra_block, align 8, !tbaa !16
  %arrayidx47 = getelementptr inbounds i32* %28, i64 %idxprom45
  %29 = load i32* %arrayidx47, align 4, !tbaa !17
  br label %cond.end49

cond.end49:                                       ; preds = %cond.end39, %cond.true43
  %cond50 = phi i32 [ %29, %cond.true43 ], [ 0, %cond.end39 ]
  %available51 = getelementptr inbounds %struct.pix_pos* %pix_d, i64 0, i32 0
  %30 = load i32* %available51, align 4, !tbaa !12
  %tobool52 = icmp eq i32 %30, 0
  br i1 %tobool52, label %if.end, label %cond.true53

cond.true53:                                      ; preds = %cond.end49
  %mb_addr54 = getelementptr inbounds %struct.pix_pos* %pix_d, i64 0, i32 1
  %31 = load i32* %mb_addr54, align 4, !tbaa !18
  %idxprom55 = sext i32 %31 to i64
  %32 = load i32** %intra_block, align 8, !tbaa !16
  %arrayidx57 = getelementptr inbounds i32* %32, i64 %idxprom55
  %33 = load i32* %arrayidx57, align 4, !tbaa !17
  br label %if.end

if.else:                                          ; preds = %land.end13
  %available62 = getelementptr inbounds [4 x %struct.pix_pos]* %pix_a, i64 0, i64 0, i32 0
  %34 = load i32* %available62, align 16, !tbaa !12
  %available63 = getelementptr inbounds %struct.pix_pos* %pix_b, i64 0, i32 0
  %35 = load i32* %available63, align 4, !tbaa !12
  %available65 = getelementptr inbounds %struct.pix_pos* %pix_d, i64 0, i32 0
  %36 = load i32* %available65, align 4, !tbaa !12
  br label %if.end

if.end:                                           ; preds = %cond.true53, %cond.end49, %if.else
  %block_available_up.0 = phi i32 [ %35, %if.else ], [ %cond40, %cond.end49 ], [ %cond40, %cond.true53 ]
  %block_available_left.1 = phi i32 [ %34, %if.else ], [ %and27.3, %cond.end49 ], [ %and27.3, %cond.true53 ]
  %block_available_up_left.0 = phi i32 [ %36, %if.else ], [ 0, %cond.end49 ], [ %33, %cond.true53 ]
  %block_available_up_right.0 = phi i32 [ %land.ext, %if.else ], [ %cond50, %cond.end49 ], [ %cond50, %cond.true53 ]
  store i32 %block_available_left.1, i32* %left_available, align 4, !tbaa !17
  store i32 %block_available_up.0, i32* %up_available, align 4, !tbaa !17
  %tobool66 = icmp ne i32 %block_available_up.0, 0
  %tobool67 = icmp ne i32 %block_available_left.1, 0
  %or.cond1175 = and i1 %tobool66, %tobool67
  %tobool69 = icmp ne i32 %block_available_up_left.0, 0
  %tobool69. = and i1 %or.cond1175, %tobool69
  %land.ext71 = zext i1 %tobool69. to i32
  store i32 %land.ext71, i32* %all_available, align 4, !tbaa !17
  br i1 %tobool66, label %if.then75, label %if.else109

if.then75:                                        ; preds = %if.end
  %pos_x = getelementptr inbounds %struct.pix_pos* %pix_b, i64 0, i32 4
  %37 = load i32* %pos_x, align 4, !tbaa !19
  %idxprom77 = sext i32 %37 to i64
  %pos_y = getelementptr inbounds %struct.pix_pos* %pix_b, i64 0, i32 5
  %38 = load i32* %pos_y, align 4, !tbaa !20
  %idxprom78 = sext i32 %38 to i64
  %arrayidx79 = getelementptr inbounds i16** %2, i64 %idxprom78
  %39 = load i16** %arrayidx79, align 8, !tbaa !1
  %arrayidx80 = getelementptr inbounds i16* %39, i64 %idxprom77
  %40 = load i16* %arrayidx80, align 2, !tbaa !21
  %conv = zext i16 %40 to i32
  %arrayidx81 = getelementptr inbounds [13 x i32]* %PredPel, i64 0, i64 1
  store i32 %conv, i32* %arrayidx81, align 4, !tbaa !17
  %add83 = add nsw i32 %37, 1
  %idxprom84 = sext i32 %add83 to i64
  %arrayidx88 = getelementptr inbounds i16* %39, i64 %idxprom84
  %41 = load i16* %arrayidx88, align 2, !tbaa !21
  %conv89 = zext i16 %41 to i32
  %arrayidx90 = getelementptr inbounds [13 x i32]* %PredPel, i64 0, i64 2
  store i32 %conv89, i32* %arrayidx90, align 8, !tbaa !17
  %add92 = add nsw i32 %37, 2
  %idxprom93 = sext i32 %add92 to i64
  %arrayidx97 = getelementptr inbounds i16* %39, i64 %idxprom93
  %42 = load i16* %arrayidx97, align 2, !tbaa !21
  %conv98 = zext i16 %42 to i32
  %arrayidx99 = getelementptr inbounds [13 x i32]* %PredPel, i64 0, i64 3
  store i32 %conv98, i32* %arrayidx99, align 4, !tbaa !17
  %add101 = add nsw i32 %37, 3
  %idxprom102 = sext i32 %add101 to i64
  %arrayidx106 = getelementptr inbounds i16* %39, i64 %idxprom102
  %43 = load i16* %arrayidx106, align 2, !tbaa !21
  %conv107 = zext i16 %43 to i32
  %arrayidx108 = getelementptr inbounds [13 x i32]* %PredPel, i64 0, i64 4
  store i32 %conv107, i32* %arrayidx108, align 16, !tbaa !17
  br label %if.end114

if.else109:                                       ; preds = %if.end
  %44 = load %struct.ImageParameters** @img, align 8, !tbaa !1
  %dc_pred_value = getelementptr inbounds %struct.ImageParameters* %44, i64 0, i32 154
  %45 = load i32* %dc_pred_value, align 4, !tbaa !23
  %arrayidx113 = getelementptr inbounds [13 x i32]* %PredPel, i64 0, i64 1
  %46 = insertelement <4 x i32> undef, i32 %45, i32 0
  %47 = insertelement <4 x i32> %46, i32 %45, i32 1
  %48 = insertelement <4 x i32> %47, i32 %45, i32 2
  %49 = insertelement <4 x i32> %48, i32 %45, i32 3
  %50 = bitcast i32* %arrayidx113 to <4 x i32>*
  store <4 x i32> %49, <4 x i32>* %50, align 4, !tbaa !17
  br label %if.end114

if.end114:                                        ; preds = %if.else109, %if.then75
  %51 = phi i32 [ %45, %if.else109 ], [ %conv98, %if.then75 ]
  %52 = phi i32 [ %45, %if.else109 ], [ %conv89, %if.then75 ]
  %53 = phi i32 [ %45, %if.else109 ], [ %conv, %if.then75 ]
  %54 = phi i32 [ %45, %if.else109 ], [ %conv107, %if.then75 ]
  %tobool115 = icmp eq i32 %block_available_up_right.0, 0
  br i1 %tobool115, label %if.else153, label %if.then116

if.then116:                                       ; preds = %if.end114
  %pos_x117 = getelementptr inbounds %struct.pix_pos* %pix_c, i64 0, i32 4
  %55 = load i32* %pos_x117, align 4, !tbaa !19
  %idxprom119 = sext i32 %55 to i64
  %pos_y120 = getelementptr inbounds %struct.pix_pos* %pix_c, i64 0, i32 5
  %56 = load i32* %pos_y120, align 4, !tbaa !20
  %idxprom121 = sext i32 %56 to i64
  %arrayidx122 = getelementptr inbounds i16** %2, i64 %idxprom121
  %57 = load i16** %arrayidx122, align 8, !tbaa !1
  %arrayidx123 = getelementptr inbounds i16* %57, i64 %idxprom119
  %58 = load i16* %arrayidx123, align 2, !tbaa !21
  %arrayidx125 = getelementptr inbounds [13 x i32]* %PredPel, i64 0, i64 5
  %add127 = add nsw i32 %55, 1
  %idxprom128 = sext i32 %add127 to i64
  %arrayidx132 = getelementptr inbounds i16* %57, i64 %idxprom128
  %59 = load i16* %arrayidx132, align 2, !tbaa !21
  %add136 = add nsw i32 %55, 2
  %idxprom137 = sext i32 %add136 to i64
  %arrayidx141 = getelementptr inbounds i16* %57, i64 %idxprom137
  %60 = load i16* %arrayidx141, align 2, !tbaa !21
  %add145 = add nsw i32 %55, 3
  %idxprom146 = sext i32 %add145 to i64
  %arrayidx150 = getelementptr inbounds i16* %57, i64 %idxprom146
  %61 = load i16* %arrayidx150, align 2, !tbaa !21
  %62 = insertelement <4 x i16> undef, i16 %58, i32 0
  %63 = insertelement <4 x i16> %62, i16 %59, i32 1
  %64 = insertelement <4 x i16> %63, i16 %60, i32 2
  %65 = insertelement <4 x i16> %64, i16 %61, i32 3
  %66 = zext <4 x i16> %65 to <4 x i32>
  %67 = bitcast i32* %arrayidx125 to <4 x i32>*
  store <4 x i32> %66, <4 x i32>* %67, align 4, !tbaa !17
  br label %if.end159

if.else153:                                       ; preds = %if.end114
  %arrayidx158 = getelementptr inbounds [13 x i32]* %PredPel, i64 0, i64 5
  %68 = insertelement <4 x i32> undef, i32 %54, i32 0
  %69 = insertelement <4 x i32> %68, i32 %54, i32 1
  %70 = insertelement <4 x i32> %69, i32 %54, i32 2
  %71 = insertelement <4 x i32> %70, i32 %54, i32 3
  %72 = bitcast i32* %arrayidx158 to <4 x i32>*
  store <4 x i32> %71, <4 x i32>* %72, align 4, !tbaa !17
  br label %if.end159

if.end159:                                        ; preds = %if.else153, %if.then116
  br i1 %tobool67, label %if.then161, label %if.else202

if.then161:                                       ; preds = %if.end159
  %pos_x163 = getelementptr inbounds [4 x %struct.pix_pos]* %pix_a, i64 0, i64 0, i32 4
  %73 = bitcast i32* %pos_x163 to i64*
  %74 = load i64* %73, align 16
  %sext = shl i64 %74, 32
  %idxprom164 = ashr exact i64 %sext, 32
  %idxprom167 = ashr i64 %74, 32
  %arrayidx168 = getelementptr inbounds i16** %2, i64 %idxprom167
  %75 = load i16** %arrayidx168, align 8, !tbaa !1
  %arrayidx169 = getelementptr inbounds i16* %75, i64 %idxprom164
  %76 = load i16* %arrayidx169, align 2, !tbaa !21
  %conv170 = zext i16 %76 to i32
  %arrayidx171 = getelementptr inbounds [13 x i32]* %PredPel, i64 0, i64 9
  store i32 %conv170, i32* %arrayidx171, align 4, !tbaa !17
  %pos_x173 = getelementptr inbounds [4 x %struct.pix_pos]* %pix_a, i64 0, i64 1, i32 4
  %77 = bitcast i32* %pos_x173 to i64*
  %78 = load i64* %77, align 8
  %sext1302 = shl i64 %78, 32
  %idxprom174 = ashr exact i64 %sext1302, 32
  %idxprom177 = ashr i64 %78, 32
  %arrayidx178 = getelementptr inbounds i16** %2, i64 %idxprom177
  %79 = load i16** %arrayidx178, align 8, !tbaa !1
  %arrayidx179 = getelementptr inbounds i16* %79, i64 %idxprom174
  %80 = load i16* %arrayidx179, align 2, !tbaa !21
  %conv180 = zext i16 %80 to i32
  %arrayidx181 = getelementptr inbounds [13 x i32]* %PredPel, i64 0, i64 10
  store i32 %conv180, i32* %arrayidx181, align 8, !tbaa !17
  %pos_x183 = getelementptr inbounds [4 x %struct.pix_pos]* %pix_a, i64 0, i64 2, i32 4
  %81 = bitcast i32* %pos_x183 to i64*
  %82 = load i64* %81, align 16
  %sext1304 = shl i64 %82, 32
  %idxprom184 = ashr exact i64 %sext1304, 32
  %idxprom187 = ashr i64 %82, 32
  %arrayidx188 = getelementptr inbounds i16** %2, i64 %idxprom187
  %83 = load i16** %arrayidx188, align 8, !tbaa !1
  %arrayidx189 = getelementptr inbounds i16* %83, i64 %idxprom184
  %84 = load i16* %arrayidx189, align 2, !tbaa !21
  %conv190 = zext i16 %84 to i32
  %arrayidx191 = getelementptr inbounds [13 x i32]* %PredPel, i64 0, i64 11
  store i32 %conv190, i32* %arrayidx191, align 4, !tbaa !17
  %pos_x193 = getelementptr inbounds [4 x %struct.pix_pos]* %pix_a, i64 0, i64 3, i32 4
  %85 = bitcast i32* %pos_x193 to i64*
  %86 = load i64* %85, align 8
  %sext1306 = shl i64 %86, 32
  %idxprom194 = ashr exact i64 %sext1306, 32
  %idxprom197 = ashr i64 %86, 32
  %arrayidx198 = getelementptr inbounds i16** %2, i64 %idxprom197
  %87 = load i16** %arrayidx198, align 8, !tbaa !1
  %arrayidx199 = getelementptr inbounds i16* %87, i64 %idxprom194
  %88 = load i16* %arrayidx199, align 2, !tbaa !21
  %conv200 = zext i16 %88 to i32
  %arrayidx201 = getelementptr inbounds [13 x i32]* %PredPel, i64 0, i64 12
  store i32 %conv200, i32* %arrayidx201, align 16, !tbaa !17
  br label %if.end208

if.else202:                                       ; preds = %if.end159
  %89 = load %struct.ImageParameters** @img, align 8, !tbaa !1
  %dc_pred_value203 = getelementptr inbounds %struct.ImageParameters* %89, i64 0, i32 154
  %90 = load i32* %dc_pred_value203, align 4, !tbaa !23
  %arrayidx207 = getelementptr inbounds [13 x i32]* %PredPel, i64 0, i64 9
  %91 = insertelement <4 x i32> undef, i32 %90, i32 0
  %92 = insertelement <4 x i32> %91, i32 %90, i32 1
  %93 = insertelement <4 x i32> %92, i32 %90, i32 2
  %94 = insertelement <4 x i32> %93, i32 %90, i32 3
  %95 = bitcast i32* %arrayidx207 to <4 x i32>*
  store <4 x i32> %94, <4 x i32>* %95, align 4, !tbaa !17
  br label %if.end208

if.end208:                                        ; preds = %if.else202, %if.then161
  %96 = phi i32 [ %90, %if.else202 ], [ %conv200, %if.then161 ]
  %97 = phi i32 [ %90, %if.else202 ], [ %conv190, %if.then161 ]
  %98 = phi i32 [ %90, %if.else202 ], [ %conv180, %if.then161 ]
  %99 = phi i32 [ %90, %if.else202 ], [ %conv170, %if.then161 ]
  br i1 %tobool69, label %if.then210, label %if.else219

if.then210:                                       ; preds = %if.end208
  %pos_x211 = getelementptr inbounds %struct.pix_pos* %pix_d, i64 0, i32 4
  %100 = load i32* %pos_x211, align 4, !tbaa !19
  %idxprom212 = sext i32 %100 to i64
  %pos_y213 = getelementptr inbounds %struct.pix_pos* %pix_d, i64 0, i32 5
  %101 = load i32* %pos_y213, align 4, !tbaa !20
  %idxprom214 = sext i32 %101 to i64
  %arrayidx215 = getelementptr inbounds i16** %2, i64 %idxprom214
  %102 = load i16** %arrayidx215, align 8, !tbaa !1
  %arrayidx216 = getelementptr inbounds i16* %102, i64 %idxprom212
  %103 = load i16* %arrayidx216, align 2, !tbaa !21
  %conv217 = zext i16 %103 to i32
  %arrayidx218 = getelementptr inbounds [13 x i32]* %PredPel, i64 0, i64 0
  store i32 %conv217, i32* %arrayidx218, align 16, !tbaa !17
  %.pre = load %struct.ImageParameters** @img, align 8, !tbaa !1
  br label %for.cond223.preheader

if.else219:                                       ; preds = %if.end208
  %104 = load %struct.ImageParameters** @img, align 8, !tbaa !1
  %dc_pred_value220 = getelementptr inbounds %struct.ImageParameters* %104, i64 0, i32 154
  %105 = load i32* %dc_pred_value220, align 4, !tbaa !23
  %arrayidx221 = getelementptr inbounds [13 x i32]* %PredPel, i64 0, i64 0
  store i32 %105, i32* %arrayidx221, align 16, !tbaa !17
  br label %for.cond223.preheader

for.cond223.preheader:                            ; preds = %if.else219, %if.then210
  %106 = phi %struct.ImageParameters* [ %104, %if.else219 ], [ %.pre, %if.then210 ]
  %arrayidx230 = getelementptr inbounds %struct.ImageParameters* %106, i64 0, i32 41, i64 0, i64 0, i64 0
  store i16 -1, i16* %arrayidx230, align 2, !tbaa !21
  %arrayidx230.1 = getelementptr inbounds %struct.ImageParameters* %106, i64 0, i32 41, i64 1, i64 0, i64 0
  store i16 -1, i16* %arrayidx230.1, align 2, !tbaa !21
  %arrayidx230.2 = getelementptr inbounds %struct.ImageParameters* %106, i64 0, i32 41, i64 2, i64 0, i64 0
  store i16 -1, i16* %arrayidx230.2, align 2, !tbaa !21
  %arrayidx230.3 = getelementptr inbounds %struct.ImageParameters* %106, i64 0, i32 41, i64 3, i64 0, i64 0
  store i16 -1, i16* %arrayidx230.3, align 2, !tbaa !21
  %arrayidx230.4 = getelementptr inbounds %struct.ImageParameters* %106, i64 0, i32 41, i64 4, i64 0, i64 0
  store i16 -1, i16* %arrayidx230.4, align 2, !tbaa !21
  %arrayidx230.5 = getelementptr inbounds %struct.ImageParameters* %106, i64 0, i32 41, i64 5, i64 0, i64 0
  store i16 -1, i16* %arrayidx230.5, align 2, !tbaa !21
  %arrayidx230.6 = getelementptr inbounds %struct.ImageParameters* %106, i64 0, i32 41, i64 6, i64 0, i64 0
  store i16 -1, i16* %arrayidx230.6, align 2, !tbaa !21
  %arrayidx230.7 = getelementptr inbounds %struct.ImageParameters* %106, i64 0, i32 41, i64 7, i64 0, i64 0
  store i16 -1, i16* %arrayidx230.7, align 2, !tbaa !21
  %arrayidx230.8 = getelementptr inbounds %struct.ImageParameters* %106, i64 0, i32 41, i64 8, i64 0, i64 0
  store i16 -1, i16* %arrayidx230.8, align 2, !tbaa !21
  br i1 %or.cond1175, label %if.then237, label %if.else254

if.then237:                                       ; preds = %for.cond223.preheader
  %add240 = add i32 %53, 4
  %add242 = add i32 %add240, %52
  %add244 = add i32 %add242, %51
  %add246 = add i32 %add244, %54
  %add248 = add i32 %add246, %99
  %add250 = add i32 %add248, %98
  %add252 = add i32 %add250, %97
  %add253 = add i32 %add252, %96
  %div = sdiv i32 %add253, 8
  br label %if.end286

if.else254:                                       ; preds = %for.cond223.preheader
  %tobool255 = icmp eq i32 %block_available_up.0, 0
  %or.cond1177 = and i1 %tobool255, %tobool67
  br i1 %or.cond1177, label %if.then258, label %if.else268

if.then258:                                       ; preds = %if.else254
  %add261 = add i32 %99, 2
  %add263 = add i32 %add261, %98
  %add265 = add i32 %add263, %97
  %add266 = add i32 %add265, %96
  %div267 = sdiv i32 %add266, 4
  br label %if.end286

if.else268:                                       ; preds = %if.else254
  %or.cond1178 = or i1 %tobool255, %tobool67
  br i1 %or.cond1178, label %if.else282, label %if.then272

if.then272:                                       ; preds = %if.else268
  %add275 = add i32 %53, 2
  %add277 = add i32 %add275, %52
  %add279 = add i32 %add277, %51
  %add280 = add i32 %add279, %54
  %div281 = sdiv i32 %add280, 4
  br label %if.end286

if.else282:                                       ; preds = %if.else268
  %dc_pred_value283 = getelementptr inbounds %struct.ImageParameters* %106, i64 0, i32 154
  %107 = load i32* %dc_pred_value283, align 4, !tbaa !23
  br label %if.end286

if.end286:                                        ; preds = %if.then258, %if.else282, %if.then272, %if.then237
  %s0.0 = phi i32 [ %div, %if.then237 ], [ %div267, %if.then258 ], [ %107, %if.else282 ], [ %div281, %if.then272 ]
  %conv295 = trunc i32 %s0.0 to i16
  store i16 %conv295, i16* %arrayidx230.2, align 2, !tbaa !21
  %arrayidx301.1 = getelementptr inbounds %struct.ImageParameters* %106, i64 0, i32 41, i64 2, i64 1, i64 0
  store i16 %conv295, i16* %arrayidx301.1, align 2, !tbaa !21
  %arrayidx301.2 = getelementptr inbounds %struct.ImageParameters* %106, i64 0, i32 41, i64 2, i64 2, i64 0
  store i16 %conv295, i16* %arrayidx301.2, align 2, !tbaa !21
  %arrayidx301.3 = getelementptr inbounds %struct.ImageParameters* %106, i64 0, i32 41, i64 2, i64 3, i64 0
  store i16 %conv295, i16* %arrayidx301.3, align 2, !tbaa !21
  %arrayidx301.11259 = getelementptr inbounds %struct.ImageParameters* %106, i64 0, i32 41, i64 2, i64 0, i64 1
  store i16 %conv295, i16* %arrayidx301.11259, align 2, !tbaa !21
  %arrayidx301.1.1 = getelementptr inbounds %struct.ImageParameters* %106, i64 0, i32 41, i64 2, i64 1, i64 1
  store i16 %conv295, i16* %arrayidx301.1.1, align 2, !tbaa !21
  %arrayidx301.2.1 = getelementptr inbounds %struct.ImageParameters* %106, i64 0, i32 41, i64 2, i64 2, i64 1
  store i16 %conv295, i16* %arrayidx301.2.1, align 2, !tbaa !21
  %arrayidx301.3.1 = getelementptr inbounds %struct.ImageParameters* %106, i64 0, i32 41, i64 2, i64 3, i64 1
  store i16 %conv295, i16* %arrayidx301.3.1, align 2, !tbaa !21
  %arrayidx301.21260 = getelementptr inbounds %struct.ImageParameters* %106, i64 0, i32 41, i64 2, i64 0, i64 2
  store i16 %conv295, i16* %arrayidx301.21260, align 2, !tbaa !21
  %arrayidx301.1.2 = getelementptr inbounds %struct.ImageParameters* %106, i64 0, i32 41, i64 2, i64 1, i64 2
  store i16 %conv295, i16* %arrayidx301.1.2, align 2, !tbaa !21
  %arrayidx301.2.2 = getelementptr inbounds %struct.ImageParameters* %106, i64 0, i32 41, i64 2, i64 2, i64 2
  store i16 %conv295, i16* %arrayidx301.2.2, align 2, !tbaa !21
  %arrayidx301.3.2 = getelementptr inbounds %struct.ImageParameters* %106, i64 0, i32 41, i64 2, i64 3, i64 2
  store i16 %conv295, i16* %arrayidx301.3.2, align 2, !tbaa !21
  %arrayidx301.31261 = getelementptr inbounds %struct.ImageParameters* %106, i64 0, i32 41, i64 2, i64 0, i64 3
  store i16 %conv295, i16* %arrayidx301.31261, align 2, !tbaa !21
  %arrayidx301.1.3 = getelementptr inbounds %struct.ImageParameters* %106, i64 0, i32 41, i64 2, i64 1, i64 3
  store i16 %conv295, i16* %arrayidx301.1.3, align 2, !tbaa !21
  %arrayidx301.2.3 = getelementptr inbounds %struct.ImageParameters* %106, i64 0, i32 41, i64 2, i64 2, i64 3
  store i16 %conv295, i16* %arrayidx301.2.3, align 2, !tbaa !21
  %arrayidx301.3.3 = getelementptr inbounds %struct.ImageParameters* %106, i64 0, i32 41, i64 2, i64 3, i64 3
  store i16 %conv295, i16* %arrayidx301.3.3, align 2, !tbaa !21
  %arrayidx314 = getelementptr inbounds [13 x i32]* %PredPel, i64 0, i64 1
  %conv315 = trunc i32 %53 to i16
  %arrayidx320 = getelementptr inbounds %struct.ImageParameters* %106, i64 0, i32 41, i64 0, i64 3, i64 0
  store i16 %conv315, i16* %arrayidx320, align 2, !tbaa !21
  %arrayidx325 = getelementptr inbounds %struct.ImageParameters* %106, i64 0, i32 41, i64 0, i64 2, i64 0
  store i16 %conv315, i16* %arrayidx325, align 2, !tbaa !21
  %arrayidx330 = getelementptr inbounds %struct.ImageParameters* %106, i64 0, i32 41, i64 0, i64 1, i64 0
  store i16 %conv315, i16* %arrayidx330, align 2, !tbaa !21
  store i16 %conv315, i16* %arrayidx230, align 2, !tbaa !21
  %arrayidx338 = getelementptr inbounds [13 x i32]* %PredPel, i64 0, i64 9
  %conv339 = trunc i32 %99 to i16
  %arrayidx344 = getelementptr inbounds %struct.ImageParameters* %106, i64 0, i32 41, i64 1, i64 0, i64 3
  store i16 %conv339, i16* %arrayidx344, align 2, !tbaa !21
  %arrayidx349 = getelementptr inbounds %struct.ImageParameters* %106, i64 0, i32 41, i64 1, i64 0, i64 2
  store i16 %conv339, i16* %arrayidx349, align 2, !tbaa !21
  %arrayidx354 = getelementptr inbounds %struct.ImageParameters* %106, i64 0, i32 41, i64 1, i64 0, i64 1
  store i16 %conv339, i16* %arrayidx354, align 2, !tbaa !21
  store i16 %conv339, i16* %arrayidx230.1, align 2, !tbaa !21
  %arrayidx314.1 = getelementptr inbounds [13 x i32]* %PredPel, i64 0, i64 2
  %conv315.1 = trunc i32 %52 to i16
  %arrayidx320.1 = getelementptr inbounds %struct.ImageParameters* %106, i64 0, i32 41, i64 0, i64 3, i64 1
  store i16 %conv315.1, i16* %arrayidx320.1, align 2, !tbaa !21
  %arrayidx325.1 = getelementptr inbounds %struct.ImageParameters* %106, i64 0, i32 41, i64 0, i64 2, i64 1
  store i16 %conv315.1, i16* %arrayidx325.1, align 2, !tbaa !21
  %arrayidx330.1 = getelementptr inbounds %struct.ImageParameters* %106, i64 0, i32 41, i64 0, i64 1, i64 1
  store i16 %conv315.1, i16* %arrayidx330.1, align 2, !tbaa !21
  %arrayidx335.1 = getelementptr inbounds %struct.ImageParameters* %106, i64 0, i32 41, i64 0, i64 0, i64 1
  store i16 %conv315.1, i16* %arrayidx335.1, align 2, !tbaa !21
  %arrayidx338.1 = getelementptr inbounds [13 x i32]* %PredPel, i64 0, i64 10
  %conv339.1 = trunc i32 %98 to i16
  %arrayidx344.1 = getelementptr inbounds %struct.ImageParameters* %106, i64 0, i32 41, i64 1, i64 1, i64 3
  store i16 %conv339.1, i16* %arrayidx344.1, align 2, !tbaa !21
  %arrayidx349.1 = getelementptr inbounds %struct.ImageParameters* %106, i64 0, i32 41, i64 1, i64 1, i64 2
  store i16 %conv339.1, i16* %arrayidx349.1, align 2, !tbaa !21
  %arrayidx354.1 = getelementptr inbounds %struct.ImageParameters* %106, i64 0, i32 41, i64 1, i64 1, i64 1
  store i16 %conv339.1, i16* %arrayidx354.1, align 2, !tbaa !21
  %arrayidx359.1 = getelementptr inbounds %struct.ImageParameters* %106, i64 0, i32 41, i64 1, i64 1, i64 0
  store i16 %conv339.1, i16* %arrayidx359.1, align 2, !tbaa !21
  %arrayidx314.2 = getelementptr inbounds [13 x i32]* %PredPel, i64 0, i64 3
  %conv315.2 = trunc i32 %51 to i16
  %arrayidx320.2 = getelementptr inbounds %struct.ImageParameters* %106, i64 0, i32 41, i64 0, i64 3, i64 2
  store i16 %conv315.2, i16* %arrayidx320.2, align 2, !tbaa !21
  %arrayidx325.2 = getelementptr inbounds %struct.ImageParameters* %106, i64 0, i32 41, i64 0, i64 2, i64 2
  store i16 %conv315.2, i16* %arrayidx325.2, align 2, !tbaa !21
  %arrayidx330.2 = getelementptr inbounds %struct.ImageParameters* %106, i64 0, i32 41, i64 0, i64 1, i64 2
  store i16 %conv315.2, i16* %arrayidx330.2, align 2, !tbaa !21
  %arrayidx335.2 = getelementptr inbounds %struct.ImageParameters* %106, i64 0, i32 41, i64 0, i64 0, i64 2
  store i16 %conv315.2, i16* %arrayidx335.2, align 2, !tbaa !21
  %arrayidx338.2 = getelementptr inbounds [13 x i32]* %PredPel, i64 0, i64 11
  %conv339.2 = trunc i32 %97 to i16
  %arrayidx344.2 = getelementptr inbounds %struct.ImageParameters* %106, i64 0, i32 41, i64 1, i64 2, i64 3
  store i16 %conv339.2, i16* %arrayidx344.2, align 2, !tbaa !21
  %arrayidx349.2 = getelementptr inbounds %struct.ImageParameters* %106, i64 0, i32 41, i64 1, i64 2, i64 2
  store i16 %conv339.2, i16* %arrayidx349.2, align 2, !tbaa !21
  %arrayidx354.2 = getelementptr inbounds %struct.ImageParameters* %106, i64 0, i32 41, i64 1, i64 2, i64 1
  store i16 %conv339.2, i16* %arrayidx354.2, align 2, !tbaa !21
  %arrayidx359.2 = getelementptr inbounds %struct.ImageParameters* %106, i64 0, i32 41, i64 1, i64 2, i64 0
  store i16 %conv339.2, i16* %arrayidx359.2, align 2, !tbaa !21
  %arrayidx314.3 = getelementptr inbounds [13 x i32]* %PredPel, i64 0, i64 4
  %108 = load i32* %arrayidx314.3, align 16, !tbaa !17
  %conv315.3 = trunc i32 %108 to i16
  %arrayidx320.3 = getelementptr inbounds %struct.ImageParameters* %106, i64 0, i32 41, i64 0, i64 3, i64 3
  store i16 %conv315.3, i16* %arrayidx320.3, align 2, !tbaa !21
  %arrayidx325.3 = getelementptr inbounds %struct.ImageParameters* %106, i64 0, i32 41, i64 0, i64 2, i64 3
  store i16 %conv315.3, i16* %arrayidx325.3, align 2, !tbaa !21
  %arrayidx330.3 = getelementptr inbounds %struct.ImageParameters* %106, i64 0, i32 41, i64 0, i64 1, i64 3
  store i16 %conv315.3, i16* %arrayidx330.3, align 2, !tbaa !21
  %arrayidx335.3 = getelementptr inbounds %struct.ImageParameters* %106, i64 0, i32 41, i64 0, i64 0, i64 3
  store i16 %conv315.3, i16* %arrayidx335.3, align 2, !tbaa !21
  %arrayidx338.3 = getelementptr inbounds [13 x i32]* %PredPel, i64 0, i64 12
  %109 = load i32* %arrayidx338.3, align 16, !tbaa !17
  %conv339.3 = trunc i32 %109 to i16
  %arrayidx344.3 = getelementptr inbounds %struct.ImageParameters* %106, i64 0, i32 41, i64 1, i64 3, i64 3
  store i16 %conv339.3, i16* %arrayidx344.3, align 2, !tbaa !21
  %arrayidx349.3 = getelementptr inbounds %struct.ImageParameters* %106, i64 0, i32 41, i64 1, i64 3, i64 2
  store i16 %conv339.3, i16* %arrayidx349.3, align 2, !tbaa !21
  %arrayidx354.3 = getelementptr inbounds %struct.ImageParameters* %106, i64 0, i32 41, i64 1, i64 3, i64 1
  store i16 %conv339.3, i16* %arrayidx354.3, align 2, !tbaa !21
  %arrayidx359.3 = getelementptr inbounds %struct.ImageParameters* %106, i64 0, i32 41, i64 1, i64 3, i64 0
  store i16 %conv339.3, i16* %arrayidx359.3, align 2, !tbaa !21
  br i1 %tobool66, label %if.end369, label %if.then364

if.then364:                                       ; preds = %if.end286
  %110 = load %struct.ImageParameters** @img, align 8, !tbaa !1
  %arrayidx368 = getelementptr inbounds %struct.ImageParameters* %110, i64 0, i32 41, i64 0, i64 0, i64 0
  store i16 -1, i16* %arrayidx368, align 2, !tbaa !21
  br label %if.end369

if.end369:                                        ; preds = %if.then364, %if.end286
  br i1 %tobool67, label %if.end376, label %if.then371

if.then371:                                       ; preds = %if.end369
  %111 = load %struct.ImageParameters** @img, align 8, !tbaa !1
  %arrayidx375 = getelementptr inbounds %struct.ImageParameters* %111, i64 0, i32 41, i64 1, i64 0, i64 0
  store i16 -1, i16* %arrayidx375, align 2, !tbaa !21
  br label %if.end376

if.end376:                                        ; preds = %if.then371, %if.end369
  br i1 %tobool66, label %if.then378, label %if.end642

if.then378:                                       ; preds = %if.end376
  %112 = load i32* %arrayidx314, align 4, !tbaa !17
  %113 = load i32* %arrayidx314.2, align 4, !tbaa !17
  %114 = bitcast i32* %arrayidx314.1 to i64*
  %115 = load i64* %114, align 8
  %116 = trunc i64 %115 to i32
  %mul = shl i32 %116, 1
  %add381 = add i32 %112, 2
  %add383 = add i32 %add381, %113
  %add384 = add i32 %add383, %mul
  %div385 = sdiv i32 %add384, 4
  %conv386 = trunc i32 %div385 to i16
  %117 = load %struct.ImageParameters** @img, align 8, !tbaa !1
  %arrayidx390 = getelementptr inbounds %struct.ImageParameters* %117, i64 0, i32 41, i64 3, i64 0, i64 0
  store i16 %conv386, i16* %arrayidx390, align 2, !tbaa !21
  %118 = lshr i64 %115, 32
  %119 = trunc i64 %118 to i32
  %mul3951297 = shl nuw nsw i64 %118, 1
  %mul395 = trunc i64 %mul3951297 to i32
  %add393 = add i32 %116, 2
  %add396 = add i32 %add393, %108
  %add397 = add i32 %add396, %mul395
  %div398 = sdiv i32 %add397, 4
  %conv399 = trunc i32 %div398 to i16
  %arrayidx403 = getelementptr inbounds %struct.ImageParameters* %117, i64 0, i32 41, i64 3, i64 1, i64 0
  store i16 %conv399, i16* %arrayidx403, align 2, !tbaa !21
  %arrayidx407 = getelementptr inbounds %struct.ImageParameters* %117, i64 0, i32 41, i64 3, i64 0, i64 1
  store i16 %conv399, i16* %arrayidx407, align 2, !tbaa !21
  %arrayidx409 = getelementptr inbounds [13 x i32]* %PredPel, i64 0, i64 5
  %120 = load i32* %arrayidx409, align 4, !tbaa !17
  %mul412 = shl i32 %108, 1
  %add410 = add i32 %119, 2
  %add413 = add i32 %add410, %120
  %add414 = add i32 %add413, %mul412
  %div415 = sdiv i32 %add414, 4
  %conv416 = trunc i32 %div415 to i16
  %arrayidx420 = getelementptr inbounds %struct.ImageParameters* %117, i64 0, i32 41, i64 3, i64 2, i64 0
  store i16 %conv416, i16* %arrayidx420, align 2, !tbaa !21
  %arrayidx424 = getelementptr inbounds %struct.ImageParameters* %117, i64 0, i32 41, i64 3, i64 1, i64 1
  store i16 %conv416, i16* %arrayidx424, align 2, !tbaa !21
  %arrayidx428 = getelementptr inbounds %struct.ImageParameters* %117, i64 0, i32 41, i64 3, i64 0, i64 2
  store i16 %conv416, i16* %arrayidx428, align 2, !tbaa !21
  %arrayidx430 = getelementptr inbounds [13 x i32]* %PredPel, i64 0, i64 6
  %121 = bitcast i32* %arrayidx430 to i64*
  %122 = load i64* %121, align 8
  %123 = trunc i64 %122 to i32
  %mul433 = shl i32 %120, 1
  %add431 = add i32 %108, 2
  %add434 = add i32 %add431, %123
  %add435 = add i32 %add434, %mul433
  %div436 = sdiv i32 %add435, 4
  %conv437 = trunc i32 %div436 to i16
  %arrayidx441 = getelementptr inbounds %struct.ImageParameters* %117, i64 0, i32 41, i64 3, i64 3, i64 0
  store i16 %conv437, i16* %arrayidx441, align 2, !tbaa !21
  %arrayidx445 = getelementptr inbounds %struct.ImageParameters* %117, i64 0, i32 41, i64 3, i64 2, i64 1
  store i16 %conv437, i16* %arrayidx445, align 2, !tbaa !21
  %arrayidx449 = getelementptr inbounds %struct.ImageParameters* %117, i64 0, i32 41, i64 3, i64 1, i64 2
  store i16 %conv437, i16* %arrayidx449, align 2, !tbaa !21
  %arrayidx453 = getelementptr inbounds %struct.ImageParameters* %117, i64 0, i32 41, i64 3, i64 0, i64 3
  store i16 %conv437, i16* %arrayidx453, align 2, !tbaa !21
  %124 = lshr i64 %122, 32
  %125 = trunc i64 %124 to i32
  %mul458 = shl i32 %123, 1
  %add456 = add i32 %120, 2
  %add459 = add i32 %add456, %125
  %add460 = add i32 %add459, %mul458
  %div461 = sdiv i32 %add460, 4
  %conv462 = trunc i32 %div461 to i16
  %arrayidx466 = getelementptr inbounds %struct.ImageParameters* %117, i64 0, i32 41, i64 3, i64 3, i64 1
  store i16 %conv462, i16* %arrayidx466, align 2, !tbaa !21
  %arrayidx470 = getelementptr inbounds %struct.ImageParameters* %117, i64 0, i32 41, i64 3, i64 2, i64 2
  store i16 %conv462, i16* %arrayidx470, align 2, !tbaa !21
  %arrayidx474 = getelementptr inbounds %struct.ImageParameters* %117, i64 0, i32 41, i64 3, i64 1, i64 3
  store i16 %conv462, i16* %arrayidx474, align 2, !tbaa !21
  %arrayidx476 = getelementptr inbounds [13 x i32]* %PredPel, i64 0, i64 8
  %126 = load i32* %arrayidx476, align 16, !tbaa !17
  %mul4791298 = shl nuw nsw i64 %124, 1
  %mul479 = trunc i64 %mul4791298 to i32
  %add477 = add i32 %123, 2
  %add480 = add i32 %add477, %126
  %add481 = add i32 %add480, %mul479
  %div482 = sdiv i32 %add481, 4
  %conv483 = trunc i32 %div482 to i16
  %arrayidx487 = getelementptr inbounds %struct.ImageParameters* %117, i64 0, i32 41, i64 3, i64 3, i64 2
  store i16 %conv483, i16* %arrayidx487, align 2, !tbaa !21
  %arrayidx491 = getelementptr inbounds %struct.ImageParameters* %117, i64 0, i32 41, i64 3, i64 2, i64 3
  store i16 %conv483, i16* %arrayidx491, align 2, !tbaa !21
  %mul494 = mul nsw i32 %126, 3
  %add495 = add i32 %125, 2
  %add496 = add i32 %add495, %mul494
  %div497 = sdiv i32 %add496, 4
  %conv498 = trunc i32 %div497 to i16
  %arrayidx502 = getelementptr inbounds %struct.ImageParameters* %117, i64 0, i32 41, i64 3, i64 3, i64 3
  store i16 %conv498, i16* %arrayidx502, align 2, !tbaa !21
  %127 = load i32* %arrayidx314, align 4, !tbaa !17
  %128 = load i64* %114, align 8
  %129 = trunc i64 %128 to i32
  %add505 = add i32 %127, 1
  %add506 = add i32 %add505, %129
  %div507 = sdiv i32 %add506, 2
  %conv508 = trunc i32 %div507 to i16
  %130 = load %struct.ImageParameters** @img, align 8, !tbaa !1
  %arrayidx512 = getelementptr inbounds %struct.ImageParameters* %130, i64 0, i32 41, i64 7, i64 0, i64 0
  store i16 %conv508, i16* %arrayidx512, align 2, !tbaa !21
  %131 = lshr i64 %128, 32
  %132 = trunc i64 %131 to i32
  %add515 = add i32 %129, 1
  %add516 = add i32 %add515, %132
  %div517 = sdiv i32 %add516, 2
  %conv518 = trunc i32 %div517 to i16
  %arrayidx522 = getelementptr inbounds %struct.ImageParameters* %130, i64 0, i32 41, i64 7, i64 2, i64 0
  store i16 %conv518, i16* %arrayidx522, align 2, !tbaa !21
  %arrayidx526 = getelementptr inbounds %struct.ImageParameters* %130, i64 0, i32 41, i64 7, i64 0, i64 1
  store i16 %conv518, i16* %arrayidx526, align 2, !tbaa !21
  %133 = bitcast i32* %arrayidx314.3 to i64*
  %134 = load i64* %133, align 16
  %135 = trunc i64 %134 to i32
  %add529 = add i32 %132, 1
  %add530 = add i32 %add529, %135
  %div531 = sdiv i32 %add530, 2
  %conv532 = trunc i32 %div531 to i16
  %arrayidx536 = getelementptr inbounds %struct.ImageParameters* %130, i64 0, i32 41, i64 7, i64 2, i64 1
  store i16 %conv532, i16* %arrayidx536, align 2, !tbaa !21
  %arrayidx540 = getelementptr inbounds %struct.ImageParameters* %130, i64 0, i32 41, i64 7, i64 0, i64 2
  store i16 %conv532, i16* %arrayidx540, align 2, !tbaa !21
  %136 = lshr i64 %134, 32
  %137 = trunc i64 %136 to i32
  %add543 = add i32 %135, 1
  %add544 = add i32 %add543, %137
  %div545 = sdiv i32 %add544, 2
  %conv546 = trunc i32 %div545 to i16
  %arrayidx550 = getelementptr inbounds %struct.ImageParameters* %130, i64 0, i32 41, i64 7, i64 2, i64 2
  store i16 %conv546, i16* %arrayidx550, align 2, !tbaa !21
  %arrayidx554 = getelementptr inbounds %struct.ImageParameters* %130, i64 0, i32 41, i64 7, i64 0, i64 3
  store i16 %conv546, i16* %arrayidx554, align 2, !tbaa !21
  %138 = load i64* %121, align 8
  %139 = trunc i64 %138 to i32
  %add557 = add i32 %137, 1
  %add558 = add i32 %add557, %139
  %div559 = sdiv i32 %add558, 2
  %conv560 = trunc i32 %div559 to i16
  %arrayidx564 = getelementptr inbounds %struct.ImageParameters* %130, i64 0, i32 41, i64 7, i64 2, i64 3
  store i16 %conv560, i16* %arrayidx564, align 2, !tbaa !21
  %mul567 = shl i32 %129, 1
  %add568 = add i32 %127, 2
  %add570 = add i32 %add568, %mul567
  %add571 = add i32 %add570, %132
  %div572 = sdiv i32 %add571, 4
  %conv573 = trunc i32 %div572 to i16
  %arrayidx577 = getelementptr inbounds %struct.ImageParameters* %130, i64 0, i32 41, i64 7, i64 1, i64 0
  store i16 %conv573, i16* %arrayidx577, align 2, !tbaa !21
  %mul5801299 = shl nuw nsw i64 %131, 1
  %mul580 = trunc i64 %mul5801299 to i32
  %add581 = add i32 %129, 2
  %add583 = add i32 %add581, %mul580
  %add584 = add i32 %add583, %135
  %div585 = sdiv i32 %add584, 4
  %conv586 = trunc i32 %div585 to i16
  %arrayidx590 = getelementptr inbounds %struct.ImageParameters* %130, i64 0, i32 41, i64 7, i64 3, i64 0
  store i16 %conv586, i16* %arrayidx590, align 2, !tbaa !21
  %arrayidx594 = getelementptr inbounds %struct.ImageParameters* %130, i64 0, i32 41, i64 7, i64 1, i64 1
  store i16 %conv586, i16* %arrayidx594, align 2, !tbaa !21
  %mul597 = shl i32 %135, 1
  %add598 = add i32 %132, 2
  %add600 = add i32 %add598, %mul597
  %add601 = add i32 %add600, %137
  %div602 = sdiv i32 %add601, 4
  %conv603 = trunc i32 %div602 to i16
  %arrayidx607 = getelementptr inbounds %struct.ImageParameters* %130, i64 0, i32 41, i64 7, i64 3, i64 1
  store i16 %conv603, i16* %arrayidx607, align 2, !tbaa !21
  %arrayidx611 = getelementptr inbounds %struct.ImageParameters* %130, i64 0, i32 41, i64 7, i64 1, i64 2
  store i16 %conv603, i16* %arrayidx611, align 2, !tbaa !21
  %mul6141300 = shl nuw nsw i64 %136, 1
  %mul614 = trunc i64 %mul6141300 to i32
  %add615 = add i32 %135, 2
  %add617 = add i32 %add615, %mul614
  %add618 = add i32 %add617, %139
  %div619 = sdiv i32 %add618, 4
  %conv620 = trunc i32 %div619 to i16
  %140 = load %struct.ImageParameters** @img, align 8, !tbaa !1
  %arrayidx624 = getelementptr inbounds %struct.ImageParameters* %140, i64 0, i32 41, i64 7, i64 3, i64 2
  store i16 %conv620, i16* %arrayidx624, align 2, !tbaa !21
  %arrayidx628 = getelementptr inbounds %struct.ImageParameters* %140, i64 0, i32 41, i64 7, i64 1, i64 3
  store i16 %conv620, i16* %arrayidx628, align 2, !tbaa !21
  %mul631 = shl i32 %139, 1
  %141 = lshr i64 %138, 32
  %142 = trunc i64 %141 to i32
  %add632 = add i32 %137, 2
  %add634 = add i32 %add632, %mul631
  %add635 = add i32 %add634, %142
  %div636 = sdiv i32 %add635, 4
  %conv637 = trunc i32 %div636 to i16
  %arrayidx641 = getelementptr inbounds %struct.ImageParameters* %140, i64 0, i32 41, i64 7, i64 3, i64 3
  store i16 %conv637, i16* %arrayidx641, align 2, !tbaa !21
  br label %if.end642

if.end642:                                        ; preds = %if.then378, %if.end376
  br i1 %tobool67, label %if.then644, label %if.end756

if.then644:                                       ; preds = %if.end642
  %143 = load i32* %arrayidx338, align 4, !tbaa !17
  %144 = bitcast i32* %arrayidx338.1 to i64*
  %145 = load i64* %144, align 8
  %146 = trunc i64 %145 to i32
  %add647 = add i32 %143, 1
  %add648 = add i32 %add647, %146
  %div649 = sdiv i32 %add648, 2
  %conv650 = trunc i32 %div649 to i16
  %147 = load %struct.ImageParameters** @img, align 8, !tbaa !1
  %arrayidx654 = getelementptr inbounds %struct.ImageParameters* %147, i64 0, i32 41, i64 8, i64 0, i64 0
  store i16 %conv650, i16* %arrayidx654, align 2, !tbaa !21
  %mul657 = shl i32 %146, 1
  %148 = lshr i64 %145, 32
  %149 = trunc i64 %148 to i32
  %add658 = add i32 %143, 2
  %add660 = add i32 %add658, %mul657
  %add661 = add i32 %add660, %149
  %div662 = sdiv i32 %add661, 4
  %conv663 = trunc i32 %div662 to i16
  %arrayidx667 = getelementptr inbounds %struct.ImageParameters* %147, i64 0, i32 41, i64 8, i64 0, i64 1
  store i16 %conv663, i16* %arrayidx667, align 2, !tbaa !21
  %add670 = add i32 %146, 1
  %add671 = add i32 %add670, %149
  %div672 = sdiv i32 %add671, 2
  %conv673 = trunc i32 %div672 to i16
  %arrayidx677 = getelementptr inbounds %struct.ImageParameters* %147, i64 0, i32 41, i64 8, i64 1, i64 0
  store i16 %conv673, i16* %arrayidx677, align 2, !tbaa !21
  %arrayidx681 = getelementptr inbounds %struct.ImageParameters* %147, i64 0, i32 41, i64 8, i64 0, i64 2
  store i16 %conv673, i16* %arrayidx681, align 2, !tbaa !21
  %mul6841296 = shl nuw nsw i64 %148, 1
  %mul684 = trunc i64 %mul6841296 to i32
  %150 = load i32* %arrayidx338.3, align 16, !tbaa !17
  %add685 = add i32 %146, 2
  %add687 = add i32 %add685, %mul684
  %add688 = add i32 %add687, %150
  %div689 = sdiv i32 %add688, 4
  %conv690 = trunc i32 %div689 to i16
  %arrayidx694 = getelementptr inbounds %struct.ImageParameters* %147, i64 0, i32 41, i64 8, i64 1, i64 1
  store i16 %conv690, i16* %arrayidx694, align 2, !tbaa !21
  %arrayidx698 = getelementptr inbounds %struct.ImageParameters* %147, i64 0, i32 41, i64 8, i64 0, i64 3
  store i16 %conv690, i16* %arrayidx698, align 2, !tbaa !21
  %add701 = add i32 %149, 1
  %add702 = add i32 %add701, %150
  %div703 = sdiv i32 %add702, 2
  %conv704 = trunc i32 %div703 to i16
  %arrayidx708 = getelementptr inbounds %struct.ImageParameters* %147, i64 0, i32 41, i64 8, i64 2, i64 0
  store i16 %conv704, i16* %arrayidx708, align 2, !tbaa !21
  %arrayidx712 = getelementptr inbounds %struct.ImageParameters* %147, i64 0, i32 41, i64 8, i64 1, i64 2
  store i16 %conv704, i16* %arrayidx712, align 2, !tbaa !21
  %mul715 = shl i32 %150, 1
  %add716 = add i32 %149, 2
  %add718 = add i32 %add716, %150
  %add719 = add i32 %add718, %mul715
  %div720 = sdiv i32 %add719, 4
  %conv721 = trunc i32 %div720 to i16
  %arrayidx725 = getelementptr inbounds %struct.ImageParameters* %147, i64 0, i32 41, i64 8, i64 2, i64 1
  store i16 %conv721, i16* %arrayidx725, align 2, !tbaa !21
  %arrayidx729 = getelementptr inbounds %struct.ImageParameters* %147, i64 0, i32 41, i64 8, i64 1, i64 3
  store i16 %conv721, i16* %arrayidx729, align 2, !tbaa !21
  %conv731 = trunc i32 %150 to i16
  %arrayidx735 = getelementptr inbounds %struct.ImageParameters* %147, i64 0, i32 41, i64 8, i64 3, i64 3
  store i16 %conv731, i16* %arrayidx735, align 2, !tbaa !21
  %arrayidx739 = getelementptr inbounds %struct.ImageParameters* %147, i64 0, i32 41, i64 8, i64 3, i64 2
  store i16 %conv731, i16* %arrayidx739, align 2, !tbaa !21
  %arrayidx743 = getelementptr inbounds %struct.ImageParameters* %147, i64 0, i32 41, i64 8, i64 3, i64 1
  store i16 %conv731, i16* %arrayidx743, align 2, !tbaa !21
  %arrayidx747 = getelementptr inbounds %struct.ImageParameters* %147, i64 0, i32 41, i64 8, i64 2, i64 3
  store i16 %conv731, i16* %arrayidx747, align 2, !tbaa !21
  %arrayidx751 = getelementptr inbounds %struct.ImageParameters* %147, i64 0, i32 41, i64 8, i64 2, i64 2
  store i16 %conv731, i16* %arrayidx751, align 2, !tbaa !21
  %arrayidx755 = getelementptr inbounds %struct.ImageParameters* %147, i64 0, i32 41, i64 8, i64 3, i64 0
  store i16 %conv731, i16* %arrayidx755, align 2, !tbaa !21
  br label %if.end756

if.end756:                                        ; preds = %if.then644, %if.end642
  br i1 %tobool69., label %if.then762, label %if.end1174

if.then762:                                       ; preds = %if.end756
  %151 = load i32* %arrayidx338.3, align 16, !tbaa !17
  %152 = load i32* %arrayidx338.2, align 4, !tbaa !17
  %mul765 = shl i32 %152, 1
  %153 = bitcast i32* %arrayidx338.1 to i64*
  %154 = load i64* %153, align 8
  %155 = trunc i64 %154 to i32
  %add766 = add i32 %151, 2
  %add768 = add i32 %add766, %mul765
  %add769 = add i32 %add768, %155
  %div770 = sdiv i32 %add769, 4
  %conv771 = trunc i32 %div770 to i16
  %156 = load %struct.ImageParameters** @img, align 8, !tbaa !1
  %arrayidx775 = getelementptr inbounds %struct.ImageParameters* %156, i64 0, i32 41, i64 4, i64 3, i64 0
  store i16 %conv771, i16* %arrayidx775, align 2, !tbaa !21
  %157 = lshr i64 %154, 32
  %158 = trunc i64 %157 to i32
  %mul778 = shl i32 %155, 1
  %159 = load i32* %arrayidx338, align 4, !tbaa !17
  %add779 = add i32 %158, 2
  %add781 = add i32 %add779, %mul778
  %add782 = add i32 %add781, %159
  %div783 = sdiv i32 %add782, 4
  %conv784 = trunc i32 %div783 to i16
  %arrayidx788 = getelementptr inbounds %struct.ImageParameters* %156, i64 0, i32 41, i64 4, i64 3, i64 1
  store i16 %conv784, i16* %arrayidx788, align 2, !tbaa !21
  %arrayidx792 = getelementptr inbounds %struct.ImageParameters* %156, i64 0, i32 41, i64 4, i64 2, i64 0
  store i16 %conv784, i16* %arrayidx792, align 2, !tbaa !21
  %mul795 = shl i32 %159, 1
  %160 = bitcast [13 x i32]* %PredPel to i64*
  %161 = load i64* %160, align 16
  %162 = trunc i64 %161 to i32
  %add796 = add i32 %155, 2
  %add798 = add i32 %add796, %mul795
  %add799 = add i32 %add798, %162
  %div800 = sdiv i32 %add799, 4
  %conv801 = trunc i32 %div800 to i16
  %arrayidx805 = getelementptr inbounds %struct.ImageParameters* %156, i64 0, i32 41, i64 4, i64 3, i64 2
  store i16 %conv801, i16* %arrayidx805, align 2, !tbaa !21
  %arrayidx809 = getelementptr inbounds %struct.ImageParameters* %156, i64 0, i32 41, i64 4, i64 2, i64 1
  store i16 %conv801, i16* %arrayidx809, align 2, !tbaa !21
  %arrayidx813 = getelementptr inbounds %struct.ImageParameters* %156, i64 0, i32 41, i64 4, i64 1, i64 0
  store i16 %conv801, i16* %arrayidx813, align 2, !tbaa !21
  %mul816 = shl i32 %162, 1
  %163 = lshr i64 %161, 32
  %164 = trunc i64 %163 to i32
  %add817 = add i32 %159, 2
  %add819 = add i32 %add817, %mul816
  %add820 = add i32 %add819, %164
  %div821 = sdiv i32 %add820, 4
  %conv822 = trunc i32 %div821 to i16
  %arrayidx826 = getelementptr inbounds %struct.ImageParameters* %156, i64 0, i32 41, i64 4, i64 3, i64 3
  store i16 %conv822, i16* %arrayidx826, align 2, !tbaa !21
  %arrayidx830 = getelementptr inbounds %struct.ImageParameters* %156, i64 0, i32 41, i64 4, i64 2, i64 2
  store i16 %conv822, i16* %arrayidx830, align 2, !tbaa !21
  %arrayidx834 = getelementptr inbounds %struct.ImageParameters* %156, i64 0, i32 41, i64 4, i64 1, i64 1
  store i16 %conv822, i16* %arrayidx834, align 2, !tbaa !21
  %arrayidx838 = getelementptr inbounds %struct.ImageParameters* %156, i64 0, i32 41, i64 4, i64 0, i64 0
  store i16 %conv822, i16* %arrayidx838, align 2, !tbaa !21
  %mul8411290 = shl nuw nsw i64 %163, 1
  %mul841 = trunc i64 %mul8411290 to i32
  %165 = bitcast i32* %arrayidx314.1 to i64*
  %166 = load i64* %165, align 8
  %167 = trunc i64 %166 to i32
  %add842 = add i32 %162, 2
  %add844 = add i32 %add842, %mul841
  %add845 = add i32 %add844, %167
  %div846 = sdiv i32 %add845, 4
  %conv847 = trunc i32 %div846 to i16
  %arrayidx851 = getelementptr inbounds %struct.ImageParameters* %156, i64 0, i32 41, i64 4, i64 2, i64 3
  store i16 %conv847, i16* %arrayidx851, align 2, !tbaa !21
  %arrayidx855 = getelementptr inbounds %struct.ImageParameters* %156, i64 0, i32 41, i64 4, i64 1, i64 2
  store i16 %conv847, i16* %arrayidx855, align 2, !tbaa !21
  %arrayidx859 = getelementptr inbounds %struct.ImageParameters* %156, i64 0, i32 41, i64 4, i64 0, i64 1
  store i16 %conv847, i16* %arrayidx859, align 2, !tbaa !21
  %mul862 = shl i32 %167, 1
  %168 = lshr i64 %166, 32
  %169 = trunc i64 %168 to i32
  %add863 = add i32 %164, 2
  %add865 = add i32 %add863, %mul862
  %add866 = add i32 %add865, %169
  %div867 = sdiv i32 %add866, 4
  %conv868 = trunc i32 %div867 to i16
  %arrayidx872 = getelementptr inbounds %struct.ImageParameters* %156, i64 0, i32 41, i64 4, i64 1, i64 3
  store i16 %conv868, i16* %arrayidx872, align 2, !tbaa !21
  %arrayidx876 = getelementptr inbounds %struct.ImageParameters* %156, i64 0, i32 41, i64 4, i64 0, i64 2
  store i16 %conv868, i16* %arrayidx876, align 2, !tbaa !21
  %mul8791291 = shl nuw nsw i64 %168, 1
  %mul879 = trunc i64 %mul8791291 to i32
  %170 = load i32* %arrayidx314.3, align 16, !tbaa !17
  %add880 = add i32 %167, 2
  %add882 = add i32 %add880, %mul879
  %add883 = add i32 %add882, %170
  %div884 = sdiv i32 %add883, 4
  %conv885 = trunc i32 %div884 to i16
  %171 = load %struct.ImageParameters** @img, align 8, !tbaa !1
  %arrayidx889 = getelementptr inbounds %struct.ImageParameters* %171, i64 0, i32 41, i64 4, i64 0, i64 3
  store i16 %conv885, i16* %arrayidx889, align 2, !tbaa !21
  %add892 = add i32 %162, 1
  %add893 = add i32 %add892, %164
  %div894 = sdiv i32 %add893, 2
  %conv895 = trunc i32 %div894 to i16
  %arrayidx899 = getelementptr inbounds %struct.ImageParameters* %171, i64 0, i32 41, i64 5, i64 2, i64 1
  store i16 %conv895, i16* %arrayidx899, align 2, !tbaa !21
  %arrayidx903 = getelementptr inbounds %struct.ImageParameters* %171, i64 0, i32 41, i64 5, i64 0, i64 0
  store i16 %conv895, i16* %arrayidx903, align 2, !tbaa !21
  %172 = load i32* %arrayidx314, align 4, !tbaa !17
  %add906 = add i32 %172, 1
  %add907 = add i32 %add906, %167
  %div908 = sdiv i32 %add907, 2
  %conv909 = trunc i32 %div908 to i16
  %arrayidx913 = getelementptr inbounds %struct.ImageParameters* %171, i64 0, i32 41, i64 5, i64 2, i64 2
  store i16 %conv909, i16* %arrayidx913, align 2, !tbaa !21
  %arrayidx917 = getelementptr inbounds %struct.ImageParameters* %171, i64 0, i32 41, i64 5, i64 0, i64 1
  store i16 %conv909, i16* %arrayidx917, align 2, !tbaa !21
  %add920 = add i32 %167, 1
  %add921 = add i32 %add920, %169
  %div922 = sdiv i32 %add921, 2
  %conv923 = trunc i32 %div922 to i16
  %arrayidx927 = getelementptr inbounds %struct.ImageParameters* %171, i64 0, i32 41, i64 5, i64 2, i64 3
  store i16 %conv923, i16* %arrayidx927, align 2, !tbaa !21
  %arrayidx931 = getelementptr inbounds %struct.ImageParameters* %171, i64 0, i32 41, i64 5, i64 0, i64 2
  store i16 %conv923, i16* %arrayidx931, align 2, !tbaa !21
  %add934 = add i32 %169, 1
  %add935 = add i32 %add934, %170
  %div936 = sdiv i32 %add935, 2
  %conv937 = trunc i32 %div936 to i16
  %arrayidx941 = getelementptr inbounds %struct.ImageParameters* %171, i64 0, i32 41, i64 5, i64 0, i64 3
  store i16 %conv937, i16* %arrayidx941, align 2, !tbaa !21
  %173 = load i32* %arrayidx338, align 4, !tbaa !17
  %174 = load i64* %160, align 16
  %175 = trunc i64 %174 to i32
  %mul944 = shl i32 %175, 1
  %176 = lshr i64 %174, 32
  %177 = trunc i64 %176 to i32
  %add945 = add i32 %173, 2
  %add947 = add i32 %add945, %mul944
  %add948 = add i32 %add947, %177
  %div949 = sdiv i32 %add948, 4
  %conv950 = trunc i32 %div949 to i16
  %arrayidx954 = getelementptr inbounds %struct.ImageParameters* %171, i64 0, i32 41, i64 5, i64 3, i64 1
  store i16 %conv950, i16* %arrayidx954, align 2, !tbaa !21
  %arrayidx958 = getelementptr inbounds %struct.ImageParameters* %171, i64 0, i32 41, i64 5, i64 1, i64 0
  store i16 %conv950, i16* %arrayidx958, align 2, !tbaa !21
  %mul9611292 = shl nuw nsw i64 %176, 1
  %mul961 = trunc i64 %mul9611292 to i32
  %178 = load i64* %165, align 8
  %179 = trunc i64 %178 to i32
  %add962 = add i32 %175, 2
  %add964 = add i32 %add962, %mul961
  %add965 = add i32 %add964, %179
  %div966 = sdiv i32 %add965, 4
  %conv967 = trunc i32 %div966 to i16
  %arrayidx971 = getelementptr inbounds %struct.ImageParameters* %171, i64 0, i32 41, i64 5, i64 3, i64 2
  store i16 %conv967, i16* %arrayidx971, align 2, !tbaa !21
  %arrayidx975 = getelementptr inbounds %struct.ImageParameters* %171, i64 0, i32 41, i64 5, i64 1, i64 1
  store i16 %conv967, i16* %arrayidx975, align 2, !tbaa !21
  %mul978 = shl i32 %179, 1
  %180 = lshr i64 %178, 32
  %181 = trunc i64 %180 to i32
  %add979 = add i32 %177, 2
  %add981 = add i32 %add979, %mul978
  %add982 = add i32 %add981, %181
  %div983 = sdiv i32 %add982, 4
  %conv984 = trunc i32 %div983 to i16
  %arrayidx988 = getelementptr inbounds %struct.ImageParameters* %171, i64 0, i32 41, i64 5, i64 3, i64 3
  store i16 %conv984, i16* %arrayidx988, align 2, !tbaa !21
  %arrayidx992 = getelementptr inbounds %struct.ImageParameters* %171, i64 0, i32 41, i64 5, i64 1, i64 2
  store i16 %conv984, i16* %arrayidx992, align 2, !tbaa !21
  %mul9951293 = shl nuw nsw i64 %180, 1
  %mul995 = trunc i64 %mul9951293 to i32
  %182 = load i32* %arrayidx314.3, align 16, !tbaa !17
  %add996 = add i32 %179, 2
  %add998 = add i32 %add996, %mul995
  %add999 = add i32 %add998, %182
  %div1000 = sdiv i32 %add999, 4
  %conv1001 = trunc i32 %div1000 to i16
  %183 = load %struct.ImageParameters** @img, align 8, !tbaa !1
  %arrayidx1005 = getelementptr inbounds %struct.ImageParameters* %183, i64 0, i32 41, i64 5, i64 1, i64 3
  store i16 %conv1001, i16* %arrayidx1005, align 2, !tbaa !21
  %mul1008 = shl i32 %173, 1
  %184 = load i64* %153, align 8
  %185 = trunc i64 %184 to i32
  %add1011 = add i32 %add962, %mul1008
  %add1012 = add i32 %add1011, %185
  %div1013 = sdiv i32 %add1012, 4
  %conv1014 = trunc i32 %div1013 to i16
  %arrayidx1018 = getelementptr inbounds %struct.ImageParameters* %183, i64 0, i32 41, i64 5, i64 2, i64 0
  store i16 %conv1014, i16* %arrayidx1018, align 2, !tbaa !21
  %mul1021 = shl i32 %185, 1
  %186 = lshr i64 %184, 32
  %187 = trunc i64 %186 to i32
  %add1024 = add i32 %add945, %mul1021
  %add1025 = add i32 %add1024, %187
  %div1026 = sdiv i32 %add1025, 4
  %conv1027 = trunc i32 %div1026 to i16
  %arrayidx1031 = getelementptr inbounds %struct.ImageParameters* %183, i64 0, i32 41, i64 5, i64 3, i64 0
  store i16 %conv1027, i16* %arrayidx1031, align 2, !tbaa !21
  %add1034 = add i32 %175, 1
  %add1035 = add i32 %add1034, %173
  %div1036 = sdiv i32 %add1035, 2
  %conv1037 = trunc i32 %div1036 to i16
  %arrayidx1041 = getelementptr inbounds %struct.ImageParameters* %183, i64 0, i32 41, i64 6, i64 1, i64 2
  store i16 %conv1037, i16* %arrayidx1041, align 2, !tbaa !21
  %arrayidx1045 = getelementptr inbounds %struct.ImageParameters* %183, i64 0, i32 41, i64 6, i64 0, i64 0
  store i16 %conv1037, i16* %arrayidx1045, align 2, !tbaa !21
  %188 = load i32* %arrayidx338, align 4, !tbaa !17
  %189 = load i32* %arrayidx314, align 4, !tbaa !17
  %add1049 = add i32 %188, 2
  %add1051 = add i32 %add1049, %mul944
  %add1052 = add i32 %add1051, %189
  %div1053 = sdiv i32 %add1052, 4
  %conv1054 = trunc i32 %div1053 to i16
  %arrayidx1058 = getelementptr inbounds %struct.ImageParameters* %183, i64 0, i32 41, i64 6, i64 1, i64 3
  store i16 %conv1054, i16* %arrayidx1058, align 2, !tbaa !21
  %arrayidx1062 = getelementptr inbounds %struct.ImageParameters* %183, i64 0, i32 41, i64 6, i64 0, i64 1
  store i16 %conv1054, i16* %arrayidx1062, align 2, !tbaa !21
  %190 = load i64* %160, align 16
  %191 = trunc i64 %190 to i32
  %192 = lshr i64 %190, 32
  %193 = trunc i64 %192 to i32
  %mul10651294 = shl nuw nsw i64 %192, 1
  %mul1065 = trunc i64 %mul10651294 to i32
  %add1066 = add i32 %191, 2
  %add1068 = add i32 %add1066, %mul1065
  %add1069 = add i32 %add1068, %179
  %div1070 = sdiv i32 %add1069, 4
  %conv1071 = trunc i32 %div1070 to i16
  %arrayidx1075 = getelementptr inbounds %struct.ImageParameters* %183, i64 0, i32 41, i64 6, i64 0, i64 2
  store i16 %conv1071, i16* %arrayidx1075, align 2, !tbaa !21
  %194 = load i64* %165, align 8
  %195 = trunc i64 %194 to i32
  %mul1078 = shl i32 %195, 1
  %196 = lshr i64 %194, 32
  %197 = trunc i64 %196 to i32
  %add1079 = add i32 %193, 2
  %add1081 = add i32 %add1079, %mul1078
  %add1082 = add i32 %add1081, %197
  %div1083 = sdiv i32 %add1082, 4
  %conv1084 = trunc i32 %div1083 to i16
  %arrayidx1088 = getelementptr inbounds %struct.ImageParameters* %183, i64 0, i32 41, i64 6, i64 0, i64 3
  store i16 %conv1084, i16* %arrayidx1088, align 2, !tbaa !21
  %add1091 = add i32 %188, 1
  %add1092 = add i32 %add1091, %185
  %div1093 = sdiv i32 %add1092, 2
  %conv1094 = trunc i32 %div1093 to i16
  %arrayidx1098 = getelementptr inbounds %struct.ImageParameters* %183, i64 0, i32 41, i64 6, i64 2, i64 2
  store i16 %conv1094, i16* %arrayidx1098, align 2, !tbaa !21
  %arrayidx1102 = getelementptr inbounds %struct.ImageParameters* %183, i64 0, i32 41, i64 6, i64 1, i64 0
  store i16 %conv1094, i16* %arrayidx1102, align 2, !tbaa !21
  %mul1105 = shl i32 %188, 1
  %add1108 = add i32 %add1066, %mul1105
  %add1109 = add i32 %add1108, %185
  %div1110 = sdiv i32 %add1109, 4
  %conv1111 = trunc i32 %div1110 to i16
  %arrayidx1115 = getelementptr inbounds %struct.ImageParameters* %183, i64 0, i32 41, i64 6, i64 2, i64 3
  store i16 %conv1111, i16* %arrayidx1115, align 2, !tbaa !21
  %arrayidx1119 = getelementptr inbounds %struct.ImageParameters* %183, i64 0, i32 41, i64 6, i64 1, i64 1
  store i16 %conv1111, i16* %arrayidx1119, align 2, !tbaa !21
  %add1122 = add i32 %185, 1
  %add1123 = add i32 %add1122, %187
  %div1124 = sdiv i32 %add1123, 2
  %conv1125 = trunc i32 %div1124 to i16
  %198 = load %struct.ImageParameters** @img, align 8, !tbaa !1
  %arrayidx1129 = getelementptr inbounds %struct.ImageParameters* %198, i64 0, i32 41, i64 6, i64 3, i64 2
  store i16 %conv1125, i16* %arrayidx1129, align 2, !tbaa !21
  %arrayidx1133 = getelementptr inbounds %struct.ImageParameters* %198, i64 0, i32 41, i64 6, i64 2, i64 0
  store i16 %conv1125, i16* %arrayidx1133, align 2, !tbaa !21
  %199 = load i64* %153, align 8
  %200 = trunc i64 %199 to i32
  %mul1136 = shl i32 %200, 1
  %201 = lshr i64 %199, 32
  %202 = trunc i64 %201 to i32
  %add1139 = add i32 %add1049, %mul1136
  %add1140 = add i32 %add1139, %202
  %div1141 = sdiv i32 %add1140, 4
  %conv1142 = trunc i32 %div1141 to i16
  %arrayidx1146 = getelementptr inbounds %struct.ImageParameters* %198, i64 0, i32 41, i64 6, i64 3, i64 3
  store i16 %conv1142, i16* %arrayidx1146, align 2, !tbaa !21
  %arrayidx1150 = getelementptr inbounds %struct.ImageParameters* %198, i64 0, i32 41, i64 6, i64 2, i64 1
  store i16 %conv1142, i16* %arrayidx1150, align 2, !tbaa !21
  %203 = load i32* %arrayidx338.3, align 16, !tbaa !17
  %add1153 = add i32 %202, 1
  %add1154 = add i32 %add1153, %203
  %div1155 = sdiv i32 %add1154, 2
  %conv1156 = trunc i32 %div1155 to i16
  %arrayidx1160 = getelementptr inbounds %struct.ImageParameters* %198, i64 0, i32 41, i64 6, i64 3, i64 0
  store i16 %conv1156, i16* %arrayidx1160, align 2, !tbaa !21
  %mul11631295 = shl nuw nsw i64 %201, 1
  %mul1163 = trunc i64 %mul11631295 to i32
  %add1164 = add i32 %200, 2
  %add1166 = add i32 %add1164, %mul1163
  %add1167 = add i32 %add1166, %203
  %div1168 = sdiv i32 %add1167, 4
  %conv1169 = trunc i32 %div1168 to i16
  %arrayidx1173 = getelementptr inbounds %struct.ImageParameters* %198, i64 0, i32 41, i64 6, i64 3, i64 1
  store i16 %conv1169, i16* %arrayidx1173, align 2, !tbaa !21
  br label %if.end1174

if.end1174:                                       ; preds = %if.then762, %if.end756
  call void @llvm.lifetime.end(i64 96, i8* %5) #1
  call void @llvm.lifetime.end(i64 52, i8* %0) #1
  ret void

cond.true.1:                                      ; preds = %cond.end
  %idxprom25.1 = ashr i64 %22, 32
  %204 = load i32** %intra_block, align 8, !tbaa !16
  %arrayidx26.1 = getelementptr inbounds i32* %204, i64 %idxprom25.1
  %205 = load i32* %arrayidx26.1, align 4, !tbaa !17
  br label %cond.end.1

cond.end.1:                                       ; preds = %cond.true.1, %cond.end
  %cond.1 = phi i32 [ %205, %cond.true.1 ], [ 0, %cond.end ]
  %and27.1 = and i32 %cond.1, %cond
  %available21.2 = getelementptr inbounds [4 x %struct.pix_pos]* %pix_a, i64 0, i64 2, i32 0
  %206 = bitcast i32* %available21.2 to i64*
  %207 = load i64* %206, align 16
  %208 = trunc i64 %207 to i32
  %tobool22.2 = icmp eq i32 %208, 0
  br i1 %tobool22.2, label %cond.end.2, label %cond.true.2

cond.true.2:                                      ; preds = %cond.end.1
  %idxprom25.2 = ashr i64 %207, 32
  %209 = load i32** %intra_block, align 8, !tbaa !16
  %arrayidx26.2 = getelementptr inbounds i32* %209, i64 %idxprom25.2
  %210 = load i32* %arrayidx26.2, align 4, !tbaa !17
  br label %cond.end.2

cond.end.2:                                       ; preds = %cond.true.2, %cond.end.1
  %cond.2 = phi i32 [ %210, %cond.true.2 ], [ 0, %cond.end.1 ]
  %and27.2 = and i32 %cond.2, %and27.1
  %available21.3 = getelementptr inbounds [4 x %struct.pix_pos]* %pix_a, i64 0, i64 3, i32 0
  %211 = bitcast i32* %available21.3 to i64*
  %212 = load i64* %211, align 8
  %213 = trunc i64 %212 to i32
  %tobool22.3 = icmp eq i32 %213, 0
  br i1 %tobool22.3, label %cond.end.3, label %cond.true.3

cond.true.3:                                      ; preds = %cond.end.2
  %idxprom25.3 = ashr i64 %212, 32
  %214 = load i32** %intra_block, align 8, !tbaa !16
  %arrayidx26.3 = getelementptr inbounds i32* %214, i64 %idxprom25.3
  %215 = load i32* %arrayidx26.3, align 4, !tbaa !17
  br label %cond.end.3

cond.end.3:                                       ; preds = %cond.true.3, %cond.end.2
  %cond.3 = phi i32 [ %215, %cond.true.3 ], [ 0, %cond.end.2 ]
  %and27.3 = and i32 %cond.3, %and27.2
  %available31 = getelementptr inbounds %struct.pix_pos* %pix_b, i64 0, i32 0
  %216 = load i32* %available31, align 4, !tbaa !12
  %tobool32 = icmp eq i32 %216, 0
  br i1 %tobool32, label %cond.end39, label %cond.true33
}

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #1

declare void @getNeighbour(i32, i32, i32, i32, %struct.pix_pos*) #2

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #1

; Function Attrs: nounwind uwtable
define void @intrapred_luma_16x16() #0 {
entry:
  %s = alloca [16 x [2 x i32]], align 16
  %up = alloca %struct.pix_pos, align 4
  %left = alloca [17 x %struct.pix_pos], align 16
  %0 = bitcast [16 x [2 x i32]]* %s to i8*
  call void @llvm.lifetime.start(i64 128, i8* %0) #1
  %1 = load %struct.storable_picture** @enc_picture, align 8, !tbaa !1
  %imgY = getelementptr inbounds %struct.storable_picture* %1, i64 0, i32 25
  %2 = load i16*** %imgY, align 8, !tbaa !5
  %3 = load %struct.ImageParameters** @img, align 8, !tbaa !1
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters* %3, i64 0, i32 3
  %4 = load i32* %current_mb_nr, align 4, !tbaa !8
  %5 = bitcast [17 x %struct.pix_pos]* %left to i8*
  call void @llvm.lifetime.start(i64 408, i8* %5) #1
  br label %for.body

for.body:                                         ; preds = %for.body, %entry
  %indvars.iv527 = phi i64 [ 0, %entry ], [ %indvars.iv.next528, %for.body ]
  %6 = add nsw i64 %indvars.iv527, 4294967295
  %arrayidx = getelementptr inbounds [17 x %struct.pix_pos]* %left, i64 0, i64 %indvars.iv527
  %7 = trunc i64 %6 to i32
  call void @getNeighbour(i32 %4, i32 -1, i32 %7, i32 1, %struct.pix_pos* %arrayidx) #1
  %indvars.iv.next528 = add nuw nsw i64 %indvars.iv527, 1
  %exitcond530 = icmp eq i64 %indvars.iv.next528, 17
  br i1 %exitcond530, label %for.end, label %for.body

for.end:                                          ; preds = %for.body
  call void @getNeighbour(i32 %4, i32 0, i32 -1, i32 1, %struct.pix_pos* %up) #1
  %8 = load %struct.InputParameters** @input, align 8, !tbaa !1
  %UseConstrainedIntraPred = getelementptr inbounds %struct.InputParameters* %8, i64 0, i32 24
  %9 = load i32* %UseConstrainedIntraPred, align 4, !tbaa !14
  %tobool = icmp eq i32 %9, 0
  %available5 = getelementptr inbounds %struct.pix_pos* %up, i64 0, i32 0
  %10 = load i32* %available5, align 4, !tbaa !12
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %for.end
  %available2 = getelementptr inbounds [17 x %struct.pix_pos]* %left, i64 0, i64 1, i32 0
  %11 = load i32* %available2, align 8, !tbaa !12
  %available4 = getelementptr inbounds [17 x %struct.pix_pos]* %left, i64 0, i64 0, i32 0
  %12 = load i32* %available4, align 16, !tbaa !12
  br label %if.end

if.else:                                          ; preds = %for.end
  %tobool6 = icmp eq i32 %10, 0
  br i1 %tobool6, label %if.else.cond.end_crit_edge, label %cond.true

if.else.cond.end_crit_edge:                       ; preds = %if.else
  %.pre = load %struct.ImageParameters** @img, align 8, !tbaa !1
  br label %cond.end

cond.true:                                        ; preds = %if.else
  %mb_addr = getelementptr inbounds %struct.pix_pos* %up, i64 0, i32 1
  %13 = load i32* %mb_addr, align 4, !tbaa !18
  %idxprom7 = sext i32 %13 to i64
  %14 = load %struct.ImageParameters** @img, align 8, !tbaa !1
  %intra_block = getelementptr inbounds %struct.ImageParameters* %14, i64 0, i32 54
  %15 = load i32** %intra_block, align 8, !tbaa !16
  %arrayidx8 = getelementptr inbounds i32* %15, i64 %idxprom7
  %16 = load i32* %arrayidx8, align 4, !tbaa !17
  br label %cond.end

cond.end:                                         ; preds = %if.else.cond.end_crit_edge, %cond.true
  %17 = phi %struct.ImageParameters* [ %14, %cond.true ], [ %.pre, %if.else.cond.end_crit_edge ]
  %cond = phi i32 [ %16, %cond.true ], [ 0, %if.else.cond.end_crit_edge ]
  %intra_block21 = getelementptr inbounds %struct.ImageParameters* %17, i64 0, i32 54
  br label %for.body11

for.body11:                                       ; preds = %cond.end24, %cond.end
  %indvars.iv524 = phi i64 [ 1, %cond.end ], [ %indvars.iv.next525, %cond.end24 ]
  %left_avail.0500 = phi i32 [ 1, %cond.end ], [ %and, %cond.end24 ]
  %available14 = getelementptr inbounds [17 x %struct.pix_pos]* %left, i64 0, i64 %indvars.iv524, i32 0
  %18 = load i32* %available14, align 8, !tbaa !12
  %tobool15 = icmp eq i32 %18, 0
  br i1 %tobool15, label %cond.end24, label %cond.true16

cond.true16:                                      ; preds = %for.body11
  %mb_addr19 = getelementptr inbounds [17 x %struct.pix_pos]* %left, i64 0, i64 %indvars.iv524, i32 1
  %19 = load i32* %mb_addr19, align 4, !tbaa !18
  %idxprom20 = sext i32 %19 to i64
  %20 = load i32** %intra_block21, align 8, !tbaa !16
  %arrayidx22 = getelementptr inbounds i32* %20, i64 %idxprom20
  %21 = load i32* %arrayidx22, align 4, !tbaa !17
  br label %cond.end24

cond.end24:                                       ; preds = %for.body11, %cond.true16
  %cond25 = phi i32 [ %21, %cond.true16 ], [ 0, %for.body11 ]
  %and = and i32 %cond25, %left_avail.0500
  %indvars.iv.next525 = add nuw nsw i64 %indvars.iv524, 1
  %exitcond526 = icmp eq i64 %indvars.iv.next525, 17
  br i1 %exitcond526, label %for.end28, label %for.body11

for.end28:                                        ; preds = %cond.end24
  %22 = bitcast [17 x %struct.pix_pos]* %left to i64*
  %23 = load i64* %22, align 16
  %24 = trunc i64 %23 to i32
  %tobool31 = icmp eq i32 %24, 0
  br i1 %tobool31, label %if.end, label %cond.true32

cond.true32:                                      ; preds = %for.end28
  %idxprom35 = ashr i64 %23, 32
  %25 = load i32** %intra_block21, align 8, !tbaa !16
  %arrayidx37 = getelementptr inbounds i32* %25, i64 %idxprom35
  %26 = load i32* %arrayidx37, align 4, !tbaa !17
  br label %if.end

if.end:                                           ; preds = %cond.true32, %for.end28, %if.then
  %up_avail.0 = phi i32 [ %10, %if.then ], [ %cond, %for.end28 ], [ %cond, %cond.true32 ]
  %left_avail.1 = phi i32 [ %11, %if.then ], [ %and, %for.end28 ], [ %and, %cond.true32 ]
  %left_up_avail.0 = phi i32 [ %12, %if.then ], [ 0, %for.end28 ], [ %26, %cond.true32 ]
  %tobool44 = icmp ne i32 %up_avail.0, 0
  %pos_x = getelementptr inbounds %struct.pix_pos* %up, i64 0, i32 4
  %27 = load i32* %pos_x, align 4, !tbaa !19
  %pos_y = getelementptr inbounds %struct.pix_pos* %up, i64 0, i32 5
  %28 = load i32* %pos_y, align 4, !tbaa !20
  %idxprom47 = sext i32 %28 to i64
  %arrayidx48 = getelementptr inbounds i16** %2, i64 %idxprom47
  %tobool52 = icmp eq i32 %left_avail.1, 0
  br i1 %tobool44, label %if.end.split.us, label %if.end51

if.end.split.us:                                  ; preds = %if.end
  %29 = sext i32 %27 to i64
  br label %if.end51.us

if.end51.us:                                      ; preds = %for.inc69.us, %if.end.split.us
  %indvars.iv539 = phi i64 [ %indvars.iv.next540.pre, %for.inc69.us ], [ 0, %if.end.split.us ]
  %s1.0498.us = phi i32 [ %add50.us, %for.inc69.us ], [ 0, %if.end.split.us ]
  %s2.0497.us = phi i32 [ %s2.1.us, %for.inc69.us ], [ 0, %if.end.split.us ]
  %30 = add nsw i64 %29, %indvars.iv539
  %31 = load i16** %arrayidx48, align 8, !tbaa !1
  %arrayidx49.us = getelementptr inbounds i16* %31, i64 %30
  %32 = load i16* %arrayidx49.us, align 2, !tbaa !21
  %conv.us = zext i16 %32 to i32
  %add50.us = add nsw i32 %conv.us, %s1.0498.us
  %indvars.iv.next540.pre = add nsw i64 %indvars.iv539, 1
  br i1 %tobool52, label %for.inc69.us, label %if.then53.us

if.then53.us:                                     ; preds = %if.end51.us
  %pos_x57.us = getelementptr inbounds [17 x %struct.pix_pos]* %left, i64 0, i64 %indvars.iv.next540.pre, i32 4
  %33 = load i32* %pos_x57.us, align 8, !tbaa !19
  %idxprom58.us = sext i32 %33 to i64
  %pos_y62.us = getelementptr inbounds [17 x %struct.pix_pos]* %left, i64 0, i64 %indvars.iv.next540.pre, i32 5
  %34 = load i32* %pos_y62.us, align 4, !tbaa !20
  %idxprom63.us = sext i32 %34 to i64
  %arrayidx64.us = getelementptr inbounds i16** %2, i64 %idxprom63.us
  %35 = load i16** %arrayidx64.us, align 8, !tbaa !1
  %arrayidx65.us = getelementptr inbounds i16* %35, i64 %idxprom58.us
  %36 = load i16* %arrayidx65.us, align 2, !tbaa !21
  %conv66.us = zext i16 %36 to i32
  %add67.us = add nsw i32 %conv66.us, %s2.0497.us
  br label %for.inc69.us

for.inc69.us:                                     ; preds = %if.end51.us, %if.then53.us
  %s2.1.us = phi i32 [ %add67.us, %if.then53.us ], [ %s2.0497.us, %if.end51.us ]
  %exitcond543 = icmp eq i64 %indvars.iv.next540.pre, 16
  br i1 %exitcond543, label %for.end71, label %if.end51.us

if.end51:                                         ; preds = %if.end, %for.inc69
  %indvars.iv520 = phi i64 [ %indvars.iv.next521.pre, %for.inc69 ], [ 0, %if.end ]
  %s2.0497 = phi i32 [ %s2.1, %for.inc69 ], [ 0, %if.end ]
  %indvars.iv.next521.pre = add nsw i64 %indvars.iv520, 1
  br i1 %tobool52, label %for.inc69, label %if.then53

if.then53:                                        ; preds = %if.end51
  %pos_x57 = getelementptr inbounds [17 x %struct.pix_pos]* %left, i64 0, i64 %indvars.iv.next521.pre, i32 4
  %37 = load i32* %pos_x57, align 8, !tbaa !19
  %idxprom58 = sext i32 %37 to i64
  %pos_y62 = getelementptr inbounds [17 x %struct.pix_pos]* %left, i64 0, i64 %indvars.iv.next521.pre, i32 5
  %38 = load i32* %pos_y62, align 4, !tbaa !20
  %idxprom63 = sext i32 %38 to i64
  %arrayidx64 = getelementptr inbounds i16** %2, i64 %idxprom63
  %39 = load i16** %arrayidx64, align 8, !tbaa !1
  %arrayidx65 = getelementptr inbounds i16* %39, i64 %idxprom58
  %40 = load i16* %arrayidx65, align 2, !tbaa !21
  %conv66 = zext i16 %40 to i32
  %add67 = add nsw i32 %conv66, %s2.0497
  br label %for.inc69

for.inc69:                                        ; preds = %if.end51, %if.then53
  %s2.1 = phi i32 [ %add67, %if.then53 ], [ %s2.0497, %if.end51 ]
  %exitcond523 = icmp eq i64 %indvars.iv.next521.pre, 16
  br i1 %exitcond523, label %for.end71, label %if.end51

for.end71:                                        ; preds = %for.inc69, %for.inc69.us
  %s1.0.lcssa = phi i32 [ %add50.us, %for.inc69.us ], [ 0, %for.inc69 ]
  %s2.0.lcssa = phi i32 [ %s2.1.us, %for.inc69.us ], [ %s2.1, %for.inc69 ]
  %tobool73 = icmp ne i32 %left_avail.1, 0
  %or.cond = and i1 %tobool44, %tobool73
  br i1 %or.cond, label %if.then74, label %if.end77

if.then74:                                        ; preds = %for.end71
  %add75 = add i32 %s2.0.lcssa, 16
  %add76 = add i32 %add75, %s1.0.lcssa
  %div = sdiv i32 %add76, 32
  br label %if.end77

if.end77:                                         ; preds = %if.then74, %for.end71
  %s0.0 = phi i32 [ %div, %if.then74 ], [ 0, %for.end71 ]
  %tobool78 = icmp eq i32 %up_avail.0, 0
  %or.cond364 = and i1 %tobool78, %tobool73
  br i1 %or.cond364, label %if.then81, label %if.end84

if.then81:                                        ; preds = %if.end77
  %add82 = add nsw i32 %s2.0.lcssa, 8
  %div83 = sdiv i32 %add82, 16
  br label %if.end84

if.end84:                                         ; preds = %if.end77, %if.then81
  %s0.1 = phi i32 [ %div83, %if.then81 ], [ %s0.0, %if.end77 ]
  %or.cond365 = or i1 %tobool78, %tobool73
  br i1 %or.cond365, label %if.end91, label %if.then88

if.then88:                                        ; preds = %if.end84
  %add89 = add nsw i32 %s1.0.lcssa, 8
  %div90 = sdiv i32 %add89, 16
  br label %if.end91

if.end91:                                         ; preds = %if.end84, %if.then88
  %s0.2 = phi i32 [ %s0.1, %if.end84 ], [ %div90, %if.then88 ]
  %41 = or i32 %left_avail.1, %up_avail.0
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %if.then95, label %if.end96

if.then95:                                        ; preds = %if.end91
  %43 = load %struct.ImageParameters** @img, align 8, !tbaa !1
  %dc_pred_value = getelementptr inbounds %struct.ImageParameters* %43, i64 0, i32 154
  %44 = load i32* %dc_pred_value, align 4, !tbaa !23
  br label %if.end96

if.end96:                                         ; preds = %if.end91, %if.then95
  %s0.3 = phi i32 [ %s0.2, %if.end91 ], [ %44, %if.then95 ]
  br i1 %tobool44, label %if.end96.split.us, label %if.end96.if.end96.split_crit_edge

if.end96.if.end96.split_crit_edge:                ; preds = %if.end96
  br i1 %tobool73, label %for.inc134.us493, label %for.cond137.preheader

if.end96.split.us:                                ; preds = %if.end96
  %45 = sext i32 %27 to i64
  br i1 %tobool73, label %for.inc134.us.us, label %for.inc134.us

for.inc134.us.us:                                 ; preds = %if.end96.split.us, %for.inc134.us.us
  %indvars.iv544 = phi i64 [ %49, %for.inc134.us.us ], [ 0, %if.end96.split.us ]
  %46 = add nsw i64 %45, %indvars.iv544
  %47 = load i16** %arrayidx48, align 8, !tbaa !1
  %arrayidx109.us.us = getelementptr inbounds i16* %47, i64 %46
  %48 = load i16* %arrayidx109.us.us, align 2, !tbaa !21
  %conv110.us.us = zext i16 %48 to i32
  %arrayidx113.us.us = getelementptr inbounds [16 x [2 x i32]]* %s, i64 0, i64 %indvars.iv544, i64 0
  store i32 %conv110.us.us, i32* %arrayidx113.us.us, align 8, !tbaa !17
  %49 = add nsw i64 %indvars.iv544, 1
  %pos_x120.us.us = getelementptr inbounds [17 x %struct.pix_pos]* %left, i64 0, i64 %49, i32 4
  %50 = load i32* %pos_x120.us.us, align 8, !tbaa !19
  %idxprom121.us.us = sext i32 %50 to i64
  %pos_y125.us.us = getelementptr inbounds [17 x %struct.pix_pos]* %left, i64 0, i64 %49, i32 5
  %51 = load i32* %pos_y125.us.us, align 4, !tbaa !20
  %idxprom126.us.us = sext i32 %51 to i64
  %arrayidx127.us.us = getelementptr inbounds i16** %2, i64 %idxprom126.us.us
  %52 = load i16** %arrayidx127.us.us, align 8, !tbaa !1
  %arrayidx128.us.us = getelementptr inbounds i16* %52, i64 %idxprom121.us.us
  %53 = load i16* %arrayidx128.us.us, align 2, !tbaa !21
  %conv129.us.us = zext i16 %53 to i32
  %arrayidx132.us.us = getelementptr inbounds [16 x [2 x i32]]* %s, i64 0, i64 %indvars.iv544, i64 1
  store i32 %conv129.us.us, i32* %arrayidx132.us.us, align 4, !tbaa !17
  %exitcond548 = icmp eq i64 %49, 16
  br i1 %exitcond548, label %for.cond137.preheader, label %for.inc134.us.us

for.inc134.us:                                    ; preds = %if.end96.split.us, %for.inc134.us
  %indvars.iv531 = phi i64 [ %indvars.iv.next532, %for.inc134.us ], [ 0, %if.end96.split.us ]
  %54 = add nsw i64 %45, %indvars.iv531
  %55 = load i16** %arrayidx48, align 8, !tbaa !1
  %arrayidx109.us = getelementptr inbounds i16* %55, i64 %54
  %56 = load i16* %arrayidx109.us, align 2, !tbaa !21
  %conv110.us = zext i16 %56 to i32
  %arrayidx113.us = getelementptr inbounds [16 x [2 x i32]]* %s, i64 0, i64 %indvars.iv531, i64 0
  store i32 %conv110.us, i32* %arrayidx113.us, align 8, !tbaa !17
  %indvars.iv.next532 = add nuw nsw i64 %indvars.iv531, 1
  %exitcond534 = icmp eq i64 %indvars.iv.next532, 16
  br i1 %exitcond534, label %for.cond137.preheader, label %for.inc134.us

for.inc134.us493:                                 ; preds = %if.end96.if.end96.split_crit_edge, %for.inc134.us493
  %indvars.iv535 = phi i64 [ %57, %for.inc134.us493 ], [ 0, %if.end96.if.end96.split_crit_edge ]
  %57 = add nsw i64 %indvars.iv535, 1
  %pos_x120.us484 = getelementptr inbounds [17 x %struct.pix_pos]* %left, i64 0, i64 %57, i32 4
  %58 = load i32* %pos_x120.us484, align 8, !tbaa !19
  %idxprom121.us485 = sext i32 %58 to i64
  %pos_y125.us486 = getelementptr inbounds [17 x %struct.pix_pos]* %left, i64 0, i64 %57, i32 5
  %59 = load i32* %pos_y125.us486, align 4, !tbaa !20
  %idxprom126.us487 = sext i32 %59 to i64
  %arrayidx127.us488 = getelementptr inbounds i16** %2, i64 %idxprom126.us487
  %60 = load i16** %arrayidx127.us488, align 8, !tbaa !1
  %arrayidx128.us489 = getelementptr inbounds i16* %60, i64 %idxprom121.us485
  %61 = load i16* %arrayidx128.us489, align 2, !tbaa !21
  %conv129.us490 = zext i16 %61 to i32
  %arrayidx132.us492 = getelementptr inbounds [16 x [2 x i32]]* %s, i64 0, i64 %indvars.iv535, i64 1
  store i32 %conv129.us490, i32* %arrayidx132.us492, align 4, !tbaa !17
  %exitcond538 = icmp eq i64 %57, 16
  br i1 %exitcond538, label %for.cond137.preheader, label %for.inc134.us493

for.cond137.preheader:                            ; preds = %for.inc134.us493, %for.inc134.us, %for.inc134.us.us, %if.end96.if.end96.split_crit_edge
  %62 = load %struct.ImageParameters** @img, align 8, !tbaa !1
  %conv164 = trunc i32 %s0.3 to i16
  br label %for.cond141.preheader

for.cond141.preheader:                            ; preds = %for.inc174, %for.cond137.preheader
  %indvars.iv516 = phi i64 [ 0, %for.cond137.preheader ], [ %indvars.iv.next517, %for.inc174 ]
  %arrayidx156 = getelementptr inbounds [16 x [2 x i32]]* %s, i64 0, i64 %indvars.iv516, i64 1
  %63 = load i32* %arrayidx156, align 4, !tbaa !17
  %conv157 = trunc i32 %63 to i16
  br label %for.body144

for.body144:                                      ; preds = %for.body144, %for.cond141.preheader
  %indvars.iv513 = phi i64 [ 0, %for.cond141.preheader ], [ %indvars.iv.next514, %for.body144 ]
  %arrayidx147 = getelementptr inbounds [16 x [2 x i32]]* %s, i64 0, i64 %indvars.iv513, i64 0
  %64 = load i32* %arrayidx147, align 8, !tbaa !17
  %conv148 = trunc i32 %64 to i16
  %arrayidx153 = getelementptr inbounds %struct.ImageParameters* %62, i64 0, i32 42, i64 0, i64 %indvars.iv516, i64 %indvars.iv513
  store i16 %conv148, i16* %arrayidx153, align 2, !tbaa !21
  %arrayidx163 = getelementptr inbounds %struct.ImageParameters* %62, i64 0, i32 42, i64 1, i64 %indvars.iv516, i64 %indvars.iv513
  store i16 %conv157, i16* %arrayidx163, align 2, !tbaa !21
  %arrayidx170 = getelementptr inbounds %struct.ImageParameters* %62, i64 0, i32 42, i64 2, i64 %indvars.iv516, i64 %indvars.iv513
  store i16 %conv164, i16* %arrayidx170, align 2, !tbaa !21
  %indvars.iv.next514 = add nuw nsw i64 %indvars.iv513, 1
  %exitcond515 = icmp eq i64 %indvars.iv.next514, 16
  br i1 %exitcond515, label %for.inc174, label %for.body144

for.inc174:                                       ; preds = %for.body144
  %indvars.iv.next517 = add nuw nsw i64 %indvars.iv516, 1
  %exitcond518 = icmp eq i64 %indvars.iv.next517, 16
  br i1 %exitcond518, label %for.end176, label %for.cond141.preheader

for.end176:                                       ; preds = %for.inc174
  %tobool180 = icmp ne i32 %left_up_avail.0, 0
  %or.cond368 = and i1 %or.cond, %tobool180
  br i1 %or.cond368, label %for.cond183.preheader, label %cleanup

for.cond183.preheader:                            ; preds = %for.end176
  %add191 = add nsw i32 %27, 7
  %65 = load i16** %arrayidx48, align 8, !tbaa !1
  %pos_x221 = getelementptr inbounds [17 x %struct.pix_pos]* %left, i64 0, i64 0, i32 4
  %66 = bitcast i32* %pos_x221 to i64*
  %67 = load i64* %66, align 16
  %sext = shl i64 %67, 32
  %idxprom222 = ashr exact i64 %sext, 32
  %idxprom225 = ashr i64 %67, 32
  %arrayidx226 = getelementptr inbounds i16** %2, i64 %idxprom225
  %68 = sext i32 %add191 to i64
  br label %for.body186

for.body186:                                      ; preds = %if.end232, %for.cond183.preheader
  %indvars.iv507 = phi i64 [ 1, %for.cond183.preheader ], [ %indvars.iv.next508, %if.end232 ]
  %iv.0466 = phi i32 [ 0, %for.cond183.preheader ], [ %add261, %if.end232 ]
  %ih.0465 = phi i32 [ 0, %for.cond183.preheader ], [ %ih.1, %if.end232 ]
  %69 = trunc i64 %indvars.iv507 to i32
  %cmp187 = icmp slt i32 %69, 8
  %70 = add nsw i64 %68, %indvars.iv507
  %arrayidx197 = getelementptr inbounds i16* %65, i64 %70
  %71 = load i16* %arrayidx197, align 2, !tbaa !21
  %conv198 = zext i16 %71 to i32
  br i1 %cmp187, label %if.then189, label %if.else210

if.then189:                                       ; preds = %for.body186
  %sub201 = sub nsw i32 %add191, %69
  %idxprom202 = sext i32 %sub201 to i64
  %arrayidx206 = getelementptr inbounds i16* %65, i64 %idxprom202
  br label %if.end232

if.else210:                                       ; preds = %for.body186
  %72 = load i16** %arrayidx226, align 8, !tbaa !1
  %arrayidx227 = getelementptr inbounds i16* %72, i64 %idxprom222
  br label %if.end232

if.end232:                                        ; preds = %if.else210, %if.then189
  %conv207.pn.in.in = phi i16* [ %arrayidx206, %if.then189 ], [ %arrayidx227, %if.else210 ]
  %conv207.pn.in = load i16* %conv207.pn.in.in, align 2
  %conv207.pn = zext i16 %conv207.pn.in to i32
  %sub208.pn = sub nsw i32 %conv198, %conv207.pn
  %mul.pn = mul nsw i32 %sub208.pn, %69
  %ih.1 = add nsw i32 %mul.pn, %ih.0465
  %73 = add nsw i64 %indvars.iv507, 8
  %pos_x236 = getelementptr inbounds [17 x %struct.pix_pos]* %left, i64 0, i64 %73, i32 4
  %74 = load i32* %pos_x236, align 8, !tbaa !19
  %idxprom237 = sext i32 %74 to i64
  %pos_y241 = getelementptr inbounds [17 x %struct.pix_pos]* %left, i64 0, i64 %73, i32 5
  %75 = load i32* %pos_y241, align 4, !tbaa !20
  %idxprom242 = sext i32 %75 to i64
  %arrayidx243 = getelementptr inbounds i16** %2, i64 %idxprom242
  %76 = load i16** %arrayidx243, align 8, !tbaa !1
  %arrayidx244 = getelementptr inbounds i16* %76, i64 %idxprom237
  %77 = load i16* %arrayidx244, align 2, !tbaa !21
  %conv245 = zext i16 %77 to i32
  %78 = sub nsw i64 8, %indvars.iv507
  %pos_x249 = getelementptr inbounds [17 x %struct.pix_pos]* %left, i64 0, i64 %78, i32 4
  %79 = load i32* %pos_x249, align 8, !tbaa !19
  %idxprom250 = sext i32 %79 to i64
  %pos_y254 = getelementptr inbounds [17 x %struct.pix_pos]* %left, i64 0, i64 %78, i32 5
  %80 = load i32* %pos_y254, align 4, !tbaa !20
  %idxprom255 = sext i32 %80 to i64
  %arrayidx256 = getelementptr inbounds i16** %2, i64 %idxprom255
  %81 = load i16** %arrayidx256, align 8, !tbaa !1
  %arrayidx257 = getelementptr inbounds i16* %81, i64 %idxprom250
  %82 = load i16* %arrayidx257, align 2, !tbaa !21
  %conv258 = zext i16 %82 to i32
  %sub259 = sub nsw i32 %conv245, %conv258
  %mul260 = mul nsw i32 %sub259, %69
  %add261 = add nsw i32 %mul260, %iv.0466
  %indvars.iv.next508 = add nuw nsw i64 %indvars.iv507, 1
  %exitcond512 = icmp eq i64 %indvars.iv.next508, 9
  br i1 %exitcond512, label %for.end264, label %for.body186

for.end264:                                       ; preds = %if.end232
  %mul265 = mul nsw i32 %ih.1, 5
  %add266 = add nsw i32 %mul265, 32
  %shr = ashr i32 %add266, 6
  %mul267 = mul nsw i32 %add261, 5
  %add268 = add nsw i32 %mul267, 32
  %shr269 = ashr i32 %add268, 6
  %add271 = add nsw i32 %27, 15
  %idxprom272 = sext i32 %add271 to i64
  %arrayidx276 = getelementptr inbounds i16* %65, i64 %idxprom272
  %83 = load i16* %arrayidx276, align 2, !tbaa !21
  %conv277 = zext i16 %83 to i32
  %pos_x279 = getelementptr inbounds [17 x %struct.pix_pos]* %left, i64 0, i64 16, i32 4
  %84 = bitcast i32* %pos_x279 to i64*
  %85 = load i64* %84, align 16
  %sext550 = shl i64 %85, 32
  %idxprom280 = ashr exact i64 %sext550, 32
  %idxprom283 = ashr i64 %85, 32
  %arrayidx284 = getelementptr inbounds i16** %2, i64 %idxprom283
  %86 = load i16** %arrayidx284, align 8, !tbaa !1
  %arrayidx285 = getelementptr inbounds i16* %86, i64 %idxprom280
  %87 = load i16* %arrayidx285, align 2, !tbaa !21
  %conv286 = zext i16 %87 to i32
  %add287 = add nsw i32 %conv286, %conv277
  %mul288 = shl nsw i32 %add287, 4
  %max_imgpel_value = getelementptr inbounds %struct.ImageParameters* %62, i64 0, i32 155
  %88 = load i32* %max_imgpel_value, align 4, !tbaa !24
  %add299 = add i32 %mul288, 16
  br label %for.cond293.preheader

for.cond293.preheader:                            ; preds = %for.inc360, %for.end264
  %indvars.iv503 = phi i64 [ 0, %for.end264 ], [ %indvars.iv.next504, %for.inc360 ]
  %89 = add nsw i64 %indvars.iv503, 4294967289
  %90 = trunc i64 %89 to i32
  %mul301 = mul nsw i32 %90, %shr269
  %add302 = add i32 %add299, %mul301
  %broadcast.splatinsert555 = insertelement <2 x i32> undef, i32 %shr, i32 0
  %broadcast.splat556 = shufflevector <2 x i32> %broadcast.splatinsert555, <2 x i32> undef, <2 x i32> zeroinitializer
  %broadcast.splatinsert557 = insertelement <2 x i32> undef, i32 %add302, i32 0
  %broadcast.splat558 = shufflevector <2 x i32> %broadcast.splatinsert557, <2 x i32> undef, <2 x i32> zeroinitializer
  %broadcast.splatinsert559 = insertelement <2 x i32> undef, i32 %88, i32 0
  %broadcast.splat560 = shufflevector <2 x i32> %broadcast.splatinsert559, <2 x i32> undef, <2 x i32> zeroinitializer
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %for.cond293.preheader
  %index = phi i64 [ 0, %for.cond293.preheader ], [ %index.next, %vector.body ]
  %broadcast.splatinsert = insertelement <2 x i64> undef, i64 %index, i32 0
  %broadcast.splat = shufflevector <2 x i64> %broadcast.splatinsert, <2 x i64> undef, <2 x i32> zeroinitializer
  %91 = add <2 x i64> %broadcast.splat, <i64 4294967289, i64 4294967290>
  %92 = trunc <2 x i64> %91 to <2 x i32>
  %93 = mul nsw <2 x i32> %92, %broadcast.splat556
  %94 = add <2 x i32> %broadcast.splat558, %93
  %95 = sdiv <2 x i32> %94, <i32 32, i32 32>
  %96 = icmp slt <2 x i32> %broadcast.splat560, %95
  %97 = select <2 x i1> %96, <2 x i32> %broadcast.splat560, <2 x i32> %95
  %98 = icmp slt <2 x i32> %97, zeroinitializer
  %99 = trunc <2 x i32> %97 to <2 x i16>
  %100 = select <2 x i1> %98, <2 x i16> zeroinitializer, <2 x i16> %99
  %101 = getelementptr inbounds %struct.ImageParameters* %62, i64 0, i32 42, i64 3, i64 %indvars.iv503, i64 %index
  %102 = bitcast i16* %101 to <2 x i16>*
  store <2 x i16> %100, <2 x i16>* %102, align 2
  %index.next = add i64 %index, 2
  %103 = icmp eq i64 %index.next, 16
  br i1 %103, label %for.inc360, label %vector.body, !llvm.loop !25

for.inc360:                                       ; preds = %vector.body
  %indvars.iv.next504 = add nuw nsw i64 %indvars.iv503, 1
  %exitcond506 = icmp eq i64 %indvars.iv.next504, 16
  br i1 %exitcond506, label %cleanup, label %for.cond293.preheader

cleanup:                                          ; preds = %for.inc360, %for.end176
  call void @llvm.lifetime.end(i64 408, i8* %5) #1
  call void @llvm.lifetime.end(i64 128, i8* %0) #1
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @dct_luma_16x16(i32 %new_intra_mode) #0 {
entry:
  %M1 = alloca [16 x [16 x i32]], align 16
  %M4 = alloca [4 x [4 x i32]], align 16
  %0 = bitcast [4 x [4 x i32]]* %M4 to i8*
  %M5 = alloca [4 x i32], align 16
  %M51775 = bitcast [4 x i32]* %M5 to i8*
  %M6 = alloca [4 x i32], align 16
  %M0 = alloca [4 x [4 x [4 x [4 x i32]]]], align 16
  %1 = bitcast [16 x [16 x i32]]* %M1 to i8*
  call void @llvm.lifetime.start(i64 1024, i8* %1) #1
  call void @llvm.lifetime.start(i64 64, i8* %0) #1
  %2 = bitcast [4 x [4 x [4 x [4 x i32]]]]* %M0 to i8*
  call void @llvm.lifetime.start(i64 1024, i8* %2) #1
  %3 = load %struct.ImageParameters** @img, align 8, !tbaa !1
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters* %3, i64 0, i32 3
  %4 = load i32* %current_mb_nr, align 4, !tbaa !8
  %idxprom = sext i32 %4 to i64
  %mb_data = getelementptr inbounds %struct.ImageParameters* %3, i64 0, i32 51
  %5 = load %struct.macroblock** %mb_data, align 8, !tbaa !28
  %cofDC = getelementptr inbounds %struct.ImageParameters* %3, i64 0, i32 48
  %6 = load i32**** %cofDC, align 8, !tbaa !29
  %7 = load i32*** %6, align 8, !tbaa !1
  %8 = load i32** %7, align 8, !tbaa !1
  %arrayidx5 = getelementptr inbounds i32** %7, i64 1
  %9 = load i32** %arrayidx5, align 8, !tbaa !1
  %qp = getelementptr inbounds %struct.macroblock* %5, i64 %idxprom, i32 3
  %10 = load i32* %qp, align 4, !tbaa !30
  %bitdepth_luma_qp_scale = getelementptr inbounds %struct.ImageParameters* %3, i64 0, i32 151
  %11 = load i32* %bitdepth_luma_qp_scale, align 4, !tbaa !33
  %add = sub i32 0, %11
  %cmp = icmp eq i32 %10, %add
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %entry
  %lossless_qpprime_flag = getelementptr inbounds %struct.ImageParameters* %3, i64 0, i32 160
  %12 = load i32* %lossless_qpprime_flag, align 4, !tbaa !34
  %cmp6 = icmp eq i32 %12, 1
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %13 = phi i1 [ false, %entry ], [ %cmp6, %land.rhs ]
  %add9 = add nsw i32 %11, %10
  %rem = srem i32 %add9, 6
  %residue_transform_flag = getelementptr inbounds %struct.ImageParameters* %3, i64 0, i32 164
  %opix_x = getelementptr inbounds %struct.ImageParameters* %3, i64 0, i32 37
  %opix_y = getelementptr inbounds %struct.ImageParameters* %3, i64 0, i32 38
  %14 = load i16*** @imgY_org, align 8, !tbaa !1
  %idxprom27 = sext i32 %new_intra_mode to i64
  br label %for.cond16.preheader

for.cond16.preheader:                             ; preds = %for.inc61, %land.end
  %indvars.iv1847 = phi i64 [ 0, %land.end ], [ %indvars.iv.next1848, %for.inc61 ]
  %15 = trunc i64 %indvars.iv1847 to i32
  %div49 = sdiv i32 %15, 4
  %idxprom50 = sext i32 %div49 to i64
  %rem51 = srem i32 %15, 4
  %idxprom52 = sext i32 %rem51 to i64
  br label %for.body18

for.cond64.preheader:                             ; preds = %for.inc61
  %div = sdiv i32 %add9, 6
  %add14 = add nsw i32 %div, 15
  br i1 %13, label %for.cond271.preheader, label %for.cond72.preheader.lr.ph

for.cond72.preheader.lr.ph:                       ; preds = %for.cond64.preheader
  %arrayidx126 = getelementptr inbounds [4 x i32]* %M5, i64 0, i64 0
  %arrayidx127 = getelementptr inbounds [4 x i32]* %M5, i64 0, i64 1
  %arrayidx146 = getelementptr inbounds [4 x i32]* %M5, i64 0, i64 3
  %arrayidx147 = getelementptr inbounds [4 x i32]* %M5, i64 0, i64 2
  br label %for.cond72.preheader

for.body18:                                       ; preds = %if.end, %for.cond16.preheader
  %indvars.iv1844 = phi i64 [ 0, %for.cond16.preheader ], [ %indvars.iv.next1845, %if.end ]
  %16 = load i32* %residue_transform_flag, align 4, !tbaa !35
  %tobool = icmp eq i32 %16, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %for.body18
  %17 = load i32* %opix_x, align 4, !tbaa !36
  %18 = trunc i64 %indvars.iv1844 to i32
  %add19 = add nsw i32 %17, %18
  %idxprom20 = sext i32 %add19 to i64
  %19 = load i32* %opix_y, align 4, !tbaa !37
  %add21 = add nsw i32 %19, %15
  %idxprom22 = sext i32 %add21 to i64
  %arrayidx23 = getelementptr inbounds i16** %14, i64 %idxprom22
  %20 = load i16** %arrayidx23, align 8, !tbaa !1
  %arrayidx24 = getelementptr inbounds i16* %20, i64 %idxprom20
  %21 = load i16* %arrayidx24, align 2, !tbaa !21
  %conv = zext i16 %21 to i32
  %arrayidx30 = getelementptr inbounds %struct.ImageParameters* %3, i64 0, i32 42, i64 %idxprom27, i64 %indvars.iv1847, i64 %indvars.iv1844
  %22 = load i16* %arrayidx30, align 2, !tbaa !21
  %conv31 = zext i16 %22 to i32
  %sub32 = sub nsw i32 %conv, %conv31
  %arrayidx36 = getelementptr inbounds [16 x [16 x i32]]* %M1, i64 0, i64 %indvars.iv1844, i64 %indvars.iv1847
  store i32 %sub32, i32* %arrayidx36, align 4, !tbaa !17
  br label %if.end

if.else:                                          ; preds = %for.body18
  %arrayidx40 = getelementptr inbounds %struct.ImageParameters* %3, i64 0, i32 46, i64 %indvars.iv1844, i64 %indvars.iv1847
  %23 = load i32* %arrayidx40, align 4, !tbaa !17
  %arrayidx44 = getelementptr inbounds [16 x [16 x i32]]* %M1, i64 0, i64 %indvars.iv1844, i64 %indvars.iv1847
  store i32 %23, i32* %arrayidx44, align 4, !tbaa !17
  %.pre1856 = trunc i64 %indvars.iv1844 to i32
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %.pre-phi = phi i32 [ %.pre1856, %if.else ], [ %18, %if.then ]
  %24 = phi i32 [ %23, %if.else ], [ %sub32, %if.then ]
  %div53 = sdiv i32 %.pre-phi, 4
  %idxprom54 = sext i32 %div53 to i64
  %rem55 = srem i32 %.pre-phi, 4
  %idxprom56 = sext i32 %rem55 to i64
  %arrayidx60 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]]* %M0, i64 0, i64 %idxprom56, i64 %idxprom54, i64 %idxprom52, i64 %idxprom50
  store i32 %24, i32* %arrayidx60, align 4, !tbaa !17
  %indvars.iv.next1845 = add nuw nsw i64 %indvars.iv1844, 1
  %exitcond1846 = icmp eq i64 %indvars.iv.next1845, 16
  br i1 %exitcond1846, label %for.inc61, label %for.body18

for.inc61:                                        ; preds = %if.end
  %indvars.iv.next1848 = add nuw nsw i64 %indvars.iv1847, 1
  %exitcond1849 = icmp eq i64 %indvars.iv.next1848, 16
  br i1 %exitcond1849, label %for.cond64.preheader, label %for.cond16.preheader

for.cond72.preheader:                             ; preds = %for.cond72.preheader.lr.ph, %for.inc268
  %indvars.iv1842 = phi i64 [ 0, %for.cond72.preheader.lr.ph ], [ %indvars.iv.next1843, %for.inc268 ]
  br label %for.cond76.preheader

for.cond271.preheader:                            ; preds = %for.inc268, %for.cond64.preheader
  %arrayidx284.1 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]]* %M0, i64 0, i64 0, i64 1, i64 0, i64 0
  %arrayidx288.1 = getelementptr inbounds [4 x [4 x i32]]* %M4, i64 0, i64 1, i64 0
  %arrayidx284.2 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]]* %M0, i64 0, i64 0, i64 2, i64 0, i64 0
  %arrayidx288.2 = getelementptr inbounds [4 x [4 x i32]]* %M4, i64 0, i64 2, i64 0
  %arrayidx284.3 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]]* %M0, i64 0, i64 0, i64 3, i64 0, i64 0
  %arrayidx288.3 = getelementptr inbounds [4 x [4 x i32]]* %M4, i64 0, i64 3, i64 0
  %25 = bitcast [4 x [4 x [4 x [4 x i32]]]]* %M0 to <4 x i32>*
  %26 = load <4 x i32>* %25, align 16, !tbaa !17
  %27 = bitcast [4 x [4 x i32]]* %M4 to <4 x i32>*
  store <4 x i32> %26, <4 x i32>* %27, align 16, !tbaa !17
  %28 = bitcast i32* %arrayidx284.1 to <4 x i32>*
  %29 = load <4 x i32>* %28, align 16, !tbaa !17
  %30 = bitcast i32* %arrayidx288.1 to <4 x i32>*
  store <4 x i32> %29, <4 x i32>* %30, align 16, !tbaa !17
  %31 = bitcast i32* %arrayidx284.2 to <4 x i32>*
  %32 = load <4 x i32>* %31, align 16, !tbaa !17
  %33 = bitcast i32* %arrayidx288.2 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %33, align 16, !tbaa !17
  %34 = bitcast i32* %arrayidx284.3 to <4 x i32>*
  %35 = load <4 x i32>* %34, align 16, !tbaa !17
  %36 = bitcast i32* %arrayidx288.3 to <4 x i32>*
  store <4 x i32> %35, <4 x i32>* %36, align 16, !tbaa !17
  br i1 %13, label %for.cond430.preheader, label %for.cond304.preheader.lr.ph

for.cond76.preheader:                             ; preds = %for.inc265, %for.cond72.preheader
  %indvars.iv1839 = phi i64 [ 0, %for.cond72.preheader ], [ %indvars.iv.next1840, %for.inc265 ]
  br label %for.cond80.preheader

for.cond80.preheader:                             ; preds = %for.cond80.preheader, %for.cond76.preheader
  %indvars.iv1829 = phi i64 [ 0, %for.cond76.preheader ], [ %indvars.iv.next1830, %for.cond80.preheader ]
  %arrayidx92 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]]* %M0, i64 0, i64 0, i64 %indvars.iv1839, i64 %indvars.iv1829, i64 %indvars.iv1842
  %37 = load i32* %arrayidx92, align 4, !tbaa !17
  %arrayidx100 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]]* %M0, i64 0, i64 3, i64 %indvars.iv1839, i64 %indvars.iv1829, i64 %indvars.iv1842
  %38 = load i32* %arrayidx100, align 4, !tbaa !17
  %add101 = add nsw i32 %38, %37
  store i32 %add101, i32* %arrayidx126, align 16, !tbaa !17
  %sub120 = sub nsw i32 %37, %38
  store i32 %sub120, i32* %arrayidx146, align 4, !tbaa !17
  %arrayidx92.1 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]]* %M0, i64 0, i64 1, i64 %indvars.iv1839, i64 %indvars.iv1829, i64 %indvars.iv1842
  %39 = load i32* %arrayidx92.1, align 4, !tbaa !17
  %arrayidx100.1 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]]* %M0, i64 0, i64 2, i64 %indvars.iv1839, i64 %indvars.iv1829, i64 %indvars.iv1842
  %40 = load i32* %arrayidx100.1, align 4, !tbaa !17
  %add101.1 = add nsw i32 %40, %39
  store i32 %add101.1, i32* %arrayidx127, align 4, !tbaa !17
  %sub120.1 = sub nsw i32 %39, %40
  store i32 %sub120.1, i32* %arrayidx147, align 8, !tbaa !17
  %add128 = add nsw i32 %add101.1, %add101
  store i32 %add128, i32* %arrayidx92, align 4, !tbaa !17
  %sub138 = sub nsw i32 %add101, %add101.1
  store i32 %sub138, i32* %arrayidx100.1, align 4, !tbaa !17
  %mul = shl i32 %sub120, 1
  %add148 = add nsw i32 %mul, %sub120.1
  store i32 %add148, i32* %arrayidx92.1, align 4, !tbaa !17
  %mul158 = shl nsw i32 %sub120.1, 1
  %sub159 = sub nsw i32 %sub120, %mul158
  store i32 %sub159, i32* %arrayidx100, align 4, !tbaa !17
  %indvars.iv.next1830 = add nuw nsw i64 %indvars.iv1829, 1
  %exitcond1831 = icmp eq i64 %indvars.iv.next1830, 4
  br i1 %exitcond1831, label %for.cond174.preheader, label %for.cond80.preheader

for.cond174.preheader:                            ; preds = %for.cond80.preheader, %for.cond174.preheader
  %indvars.iv1836 = phi i64 [ %indvars.iv.next1837, %for.cond174.preheader ], [ 0, %for.cond80.preheader ]
  %arrayidx186 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]]* %M0, i64 0, i64 %indvars.iv1836, i64 %indvars.iv1839, i64 0, i64 %indvars.iv1842
  %41 = load i32* %arrayidx186, align 4, !tbaa !17
  %arrayidx194 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]]* %M0, i64 0, i64 %indvars.iv1836, i64 %indvars.iv1839, i64 3, i64 %indvars.iv1842
  %42 = load i32* %arrayidx194, align 4, !tbaa !17
  %add195 = add nsw i32 %42, %41
  store i32 %add195, i32* %arrayidx126, align 16, !tbaa !17
  %sub214 = sub nsw i32 %41, %42
  store i32 %sub214, i32* %arrayidx146, align 4, !tbaa !17
  %arrayidx186.1 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]]* %M0, i64 0, i64 %indvars.iv1836, i64 %indvars.iv1839, i64 1, i64 %indvars.iv1842
  %43 = load i32* %arrayidx186.1, align 4, !tbaa !17
  %arrayidx194.1 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]]* %M0, i64 0, i64 %indvars.iv1836, i64 %indvars.iv1839, i64 2, i64 %indvars.iv1842
  %44 = load i32* %arrayidx194.1, align 4, !tbaa !17
  %add195.1 = add nsw i32 %44, %43
  store i32 %add195.1, i32* %arrayidx127, align 4, !tbaa !17
  %sub214.1 = sub nsw i32 %43, %44
  store i32 %sub214.1, i32* %arrayidx147, align 8, !tbaa !17
  %add222 = add nsw i32 %add195.1, %add195
  store i32 %add222, i32* %arrayidx186, align 4, !tbaa !17
  %sub232 = sub nsw i32 %add195, %add195.1
  store i32 %sub232, i32* %arrayidx194.1, align 4, !tbaa !17
  %mul241 = shl i32 %sub214, 1
  %add243 = add nsw i32 %mul241, %sub214.1
  store i32 %add243, i32* %arrayidx186.1, align 4, !tbaa !17
  %mul253 = shl nsw i32 %sub214.1, 1
  %sub254 = sub nsw i32 %sub214, %mul253
  store i32 %sub254, i32* %arrayidx194, align 4, !tbaa !17
  %indvars.iv.next1837 = add nuw nsw i64 %indvars.iv1836, 1
  %exitcond1838 = icmp eq i64 %indvars.iv.next1837, 4
  br i1 %exitcond1838, label %for.inc265, label %for.cond174.preheader

for.inc265:                                       ; preds = %for.cond174.preheader
  %indvars.iv.next1840 = add nuw nsw i64 %indvars.iv1839, 1
  %exitcond1841 = icmp eq i64 %indvars.iv.next1840, 4
  br i1 %exitcond1841, label %for.inc268, label %for.cond76.preheader

for.inc268:                                       ; preds = %for.inc265
  %indvars.iv.next1843 = add nuw nsw i64 %indvars.iv1842, 1
  %45 = trunc i64 %indvars.iv1842 to i32
  %cmp65.not = icmp sgt i32 %45, 2
  br i1 %cmp65.not, label %for.cond271.preheader, label %for.cond72.preheader

for.cond304.preheader.lr.ph:                      ; preds = %for.cond271.preheader
  %arrayidx334 = getelementptr inbounds [4 x i32]* %M5, i64 0, i64 0
  %arrayidx335 = getelementptr inbounds [4 x i32]* %M5, i64 0, i64 1
  %arrayidx346 = getelementptr inbounds [4 x i32]* %M5, i64 0, i64 3
  %arrayidx347 = getelementptr inbounds [4 x i32]* %M5, i64 0, i64 2
  %46 = extractelement <4 x i32> %26, i32 0
  %47 = extractelement <4 x i32> %29, i32 0
  %48 = extractelement <4 x i32> %32, i32 0
  %49 = extractelement <4 x i32> %35, i32 0
  br label %for.cond304.preheader

for.cond304.preheader:                            ; preds = %for.cond304.preheader.for.cond304.preheader_crit_edge, %for.cond304.preheader.lr.ph
  %50 = phi i32 [ %48, %for.cond304.preheader.lr.ph ], [ %.pre1855, %for.cond304.preheader.for.cond304.preheader_crit_edge ]
  %51 = phi i32 [ %47, %for.cond304.preheader.lr.ph ], [ %.pre1854, %for.cond304.preheader.for.cond304.preheader_crit_edge ]
  %52 = phi i32 [ %49, %for.cond304.preheader.lr.ph ], [ %.pre1853, %for.cond304.preheader.for.cond304.preheader_crit_edge ]
  %53 = phi i32 [ %46, %for.cond304.preheader.lr.ph ], [ %.pre1852, %for.cond304.preheader.for.cond304.preheader_crit_edge ]
  %indvars.iv1805 = phi i64 [ 0, %for.cond304.preheader.lr.ph ], [ %indvars.iv.next1806, %for.cond304.preheader.for.cond304.preheader_crit_edge ]
  %arrayidx312 = getelementptr inbounds [4 x [4 x i32]]* %M4, i64 0, i64 0, i64 %indvars.iv1805
  %arrayidx316 = getelementptr inbounds [4 x [4 x i32]]* %M4, i64 0, i64 3, i64 %indvars.iv1805
  %add317 = add nsw i32 %52, %53
  store i32 %add317, i32* %arrayidx334, align 16, !tbaa !17
  %sub328 = sub nsw i32 %53, %52
  store i32 %sub328, i32* %arrayidx346, align 4, !tbaa !17
  %arrayidx312.1 = getelementptr inbounds [4 x [4 x i32]]* %M4, i64 0, i64 1, i64 %indvars.iv1805
  %arrayidx316.1 = getelementptr inbounds [4 x [4 x i32]]* %M4, i64 0, i64 2, i64 %indvars.iv1805
  %add317.1 = add nsw i32 %50, %51
  store i32 %add317.1, i32* %arrayidx335, align 4, !tbaa !17
  %sub328.1 = sub nsw i32 %51, %50
  store i32 %sub328.1, i32* %arrayidx347, align 8, !tbaa !17
  %add336 = add nsw i32 %add317.1, %add317
  store i32 %add336, i32* %arrayidx312, align 4, !tbaa !17
  %sub342 = sub nsw i32 %add317, %add317.1
  store i32 %sub342, i32* %arrayidx316.1, align 4, !tbaa !17
  %add348 = add nsw i32 %sub328.1, %sub328
  store i32 %add348, i32* %arrayidx312.1, align 4, !tbaa !17
  %sub354 = sub nsw i32 %sub328, %sub328.1
  store i32 %sub354, i32* %arrayidx316, align 4, !tbaa !17
  %indvars.iv.next1806 = add nuw nsw i64 %indvars.iv1805, 1
  %54 = trunc i64 %indvars.iv1805 to i32
  %cmp296.not = icmp sgt i32 %54, 2
  br i1 %cmp296.not, label %for.cond361.preheader, label %for.cond304.preheader.for.cond304.preheader_crit_edge

for.cond304.preheader.for.cond304.preheader_crit_edge: ; preds = %for.cond304.preheader
  %arrayidx312.phi.trans.insert = getelementptr inbounds [4 x [4 x i32]]* %M4, i64 0, i64 0, i64 %indvars.iv.next1806
  %.pre1852 = load i32* %arrayidx312.phi.trans.insert, align 4, !tbaa !17
  %arrayidx316.phi.trans.insert = getelementptr inbounds [4 x [4 x i32]]* %M4, i64 0, i64 3, i64 %indvars.iv.next1806
  %.pre1853 = load i32* %arrayidx316.phi.trans.insert, align 4, !tbaa !17
  %arrayidx312.1.phi.trans.insert = getelementptr inbounds [4 x [4 x i32]]* %M4, i64 0, i64 1, i64 %indvars.iv.next1806
  %.pre1854 = load i32* %arrayidx312.1.phi.trans.insert, align 4, !tbaa !17
  %arrayidx316.1.phi.trans.insert = getelementptr inbounds [4 x [4 x i32]]* %M4, i64 0, i64 2, i64 %indvars.iv.next1806
  %.pre1855 = load i32* %arrayidx316.1.phi.trans.insert, align 4, !tbaa !17
  br label %for.cond304.preheader

for.cond361.preheader:                            ; preds = %for.cond304.preheader
  br i1 %13, label %for.cond430.preheader, label %for.cond370.preheader.lr.ph

for.cond370.preheader.lr.ph:                      ; preds = %for.cond361.preheader
  %arrayidx400 = getelementptr inbounds [4 x i32]* %M5, i64 0, i64 0
  %arrayidx401 = getelementptr inbounds [4 x i32]* %M5, i64 0, i64 1
  %arrayidx413 = getelementptr inbounds [4 x i32]* %M5, i64 0, i64 3
  %arrayidx414 = getelementptr inbounds [4 x i32]* %M5, i64 0, i64 2
  br label %for.cond370.preheader

for.cond370.preheader:                            ; preds = %for.cond370.preheader.lr.ph, %for.cond370.preheader
  %indvars.iv1799 = phi i64 [ 0, %for.cond370.preheader.lr.ph ], [ %indvars.iv.next1800, %for.cond370.preheader ]
  %arrayidx378 = getelementptr inbounds [4 x [4 x i32]]* %M4, i64 0, i64 %indvars.iv1799, i64 0
  %55 = load i32* %arrayidx378, align 16, !tbaa !17
  %arrayidx382 = getelementptr inbounds [4 x [4 x i32]]* %M4, i64 0, i64 %indvars.iv1799, i64 3
  %56 = load i32* %arrayidx382, align 4, !tbaa !17
  %add383 = add nsw i32 %56, %55
  store i32 %add383, i32* %arrayidx400, align 16, !tbaa !17
  %sub394 = sub nsw i32 %55, %56
  store i32 %sub394, i32* %arrayidx413, align 4, !tbaa !17
  %arrayidx378.1 = getelementptr inbounds [4 x [4 x i32]]* %M4, i64 0, i64 %indvars.iv1799, i64 1
  %57 = load i32* %arrayidx378.1, align 4, !tbaa !17
  %arrayidx382.1 = getelementptr inbounds [4 x [4 x i32]]* %M4, i64 0, i64 %indvars.iv1799, i64 2
  %58 = load i32* %arrayidx382.1, align 8, !tbaa !17
  %add383.1 = add nsw i32 %58, %57
  store i32 %add383.1, i32* %arrayidx401, align 4, !tbaa !17
  %sub394.1 = sub nsw i32 %57, %58
  store i32 %sub394.1, i32* %arrayidx414, align 8, !tbaa !17
  %add402 = add nsw i32 %add383.1, %add383
  %sub408 = sub nsw i32 %add383, %add383.1
  %add415 = add nsw i32 %sub394.1, %sub394
  %sub422 = sub nsw i32 %sub394, %sub394.1
  %59 = insertelement <4 x i32> undef, i32 %add402, i32 0
  %60 = insertelement <4 x i32> %59, i32 %add415, i32 1
  %61 = insertelement <4 x i32> %60, i32 %sub408, i32 2
  %62 = insertelement <4 x i32> %61, i32 %sub422, i32 3
  %63 = ashr <4 x i32> %62, <i32 1, i32 1, i32 1, i32 1>
  %64 = bitcast i32* %arrayidx378 to <4 x i32>*
  store <4 x i32> %63, <4 x i32>* %64, align 16, !tbaa !17
  %indvars.iv.next1800 = add nuw nsw i64 %indvars.iv1799, 1
  %65 = trunc i64 %indvars.iv1799 to i32
  %cmp362.not = icmp sgt i32 %65, 2
  br i1 %cmp362.not, label %for.cond430.preheader, label %for.cond370.preheader

for.cond430.preheader:                            ; preds = %for.cond370.preheader, %for.cond271.preheader, %for.cond361.preheader
  %idxprom469 = sext i32 %rem to i64
  %arrayidx472 = getelementptr inbounds [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Intra, i64 0, i64 %idxprom469, i64 0, i64 0
  %idxprom474 = sext i32 %div to i64
  %arrayidx477 = getelementptr inbounds [13 x [4 x [4 x i32]]]* @LevelOffset4x4Luma_Intra, i64 0, i64 %idxprom474, i64 0, i64 0
  %add479 = add nsw i32 %div, 16
  br label %for.body433

for.body433:                                      ; preds = %for.inc520.for.body433_crit_edge, %for.cond430.preheader
  %66 = phi %struct.ImageParameters* [ %3, %for.cond430.preheader ], [ %.pre, %for.inc520.for.body433_crit_edge ]
  %indvars.iv1792 = phi i64 [ 0, %for.cond430.preheader ], [ %indvars.iv.next1793, %for.inc520.for.body433_crit_edge ]
  %run.01715 = phi i32 [ -1, %for.cond430.preheader ], [ %run.1, %for.inc520.for.body433_crit_edge ]
  %scan_pos.01713 = phi i32 [ 0, %for.cond430.preheader ], [ %scan_pos.1, %for.inc520.for.body433_crit_edge ]
  %field_picture = getelementptr inbounds %struct.ImageParameters* %66, i64 0, i32 100
  %67 = load i32* %field_picture, align 4, !tbaa !38
  %tobool434 = icmp eq i32 %67, 0
  br i1 %tobool434, label %lor.lhs.false, label %if.end455

lor.lhs.false:                                    ; preds = %for.body433
  %68 = load i32* @mb_adaptive, align 4, !tbaa !17
  %tobool435 = icmp eq i32 %68, 0
  br i1 %tobool435, label %if.else446, label %land.lhs.true

land.lhs.true:                                    ; preds = %lor.lhs.false
  %field_mode = getelementptr inbounds %struct.ImageParameters* %66, i64 0, i32 81
  %69 = load i32* %field_mode, align 4, !tbaa !39
  %tobool436 = icmp eq i32 %69, 0
  br i1 %tobool436, label %if.else446, label %if.end455

if.else446:                                       ; preds = %land.lhs.true, %lor.lhs.false
  br label %if.end455

if.end455:                                        ; preds = %for.body433, %land.lhs.true, %if.else446
  %FIELD_SCAN.pn = phi [16 x [2 x i8]]* [ @SNGL_SCAN, %if.else446 ], [ @FIELD_SCAN, %land.lhs.true ], [ @FIELD_SCAN, %for.body433 ]
  %i.6.in.in = getelementptr inbounds [16 x [2 x i8]]* %FIELD_SCAN.pn, i64 0, i64 %indvars.iv1792, i64 0
  %j.6.in.in = getelementptr inbounds [16 x [2 x i8]]* %FIELD_SCAN.pn, i64 0, i64 %indvars.iv1792, i64 1
  %i.6.in = load i8* %i.6.in.in, align 2
  %j.6.in = load i8* %j.6.in.in, align 1
  %inc456 = add nsw i32 %run.01715, 1
  %idxprom459 = zext i8 %j.6.in to i64
  %idxprom460 = zext i8 %i.6.in to i64
  %arrayidx462 = getelementptr inbounds [4 x [4 x i32]]* %M4, i64 0, i64 %idxprom460, i64 %idxprom459
  %70 = load i32* %arrayidx462, align 4, !tbaa !17
  %ispos1672 = icmp sgt i32 %70, -1
  %neg1673 = sub i32 0, %70
  %71 = select i1 %ispos1672, i32 %70, i32 %neg1673
  br i1 %13, label %if.end481, label %if.else463

if.else463:                                       ; preds = %if.end455
  %72 = load i32* %arrayidx472, align 4, !tbaa !17
  %mul473 = mul nsw i32 %72, %71
  %73 = load i32* %arrayidx477, align 4, !tbaa !17
  %shl = shl i32 %73, 1
  %add478 = add nsw i32 %shl, %mul473
  %shr480 = ashr i32 %add478, %add479
  br label %if.end481

if.end481:                                        ; preds = %if.end455, %if.else463
  %level.0 = phi i32 [ %shr480, %if.else463 ], [ %71, %if.end455 ]
  %74 = load %struct.InputParameters** @input, align 8, !tbaa !1
  %symbol_mode = getelementptr inbounds %struct.InputParameters* %74, i64 0, i32 59
  %75 = load i32* %symbol_mode, align 4, !tbaa !40
  %cmp482 = icmp eq i32 %75, 0
  br i1 %cmp482, label %land.lhs.true484, label %if.end493

land.lhs.true484:                                 ; preds = %if.end481
  %qp485 = getelementptr inbounds %struct.ImageParameters* %66, i64 0, i32 10
  %76 = load i32* %qp485, align 4, !tbaa !41
  %cmp486 = icmp slt i32 %76, 10
  %cmp489 = icmp sgt i32 %level.0, 2063
  %or.cond = and i1 %cmp486, %cmp489
  br i1 %or.cond, label %if.then496, label %if.end493

if.end493:                                        ; preds = %land.lhs.true484, %if.end481
  %cmp494 = icmp eq i32 %level.0, 0
  br i1 %cmp494, label %if.end507, label %if.then496

if.then496:                                       ; preds = %land.lhs.true484, %if.end493
  %level.11681 = phi i32 [ %level.0, %if.end493 ], [ 2063, %land.lhs.true484 ]
  %call501 = call i32 @sign(i32 %level.11681, i32 %70) #1
  %idxprom502 = sext i32 %scan_pos.01713 to i64
  %arrayidx503 = getelementptr inbounds i32* %8, i64 %idxprom502
  store i32 %call501, i32* %arrayidx503, align 4, !tbaa !17
  %arrayidx505 = getelementptr inbounds i32* %9, i64 %idxprom502
  store i32 %inc456, i32* %arrayidx505, align 4, !tbaa !17
  %inc506 = add nsw i32 %scan_pos.01713, 1
  br label %if.end507

if.end507:                                        ; preds = %if.end493, %if.then496
  %level.11682 = phi i32 [ %level.11681, %if.then496 ], [ 0, %if.end493 ]
  %scan_pos.1 = phi i32 [ %inc506, %if.then496 ], [ %scan_pos.01713, %if.end493 ]
  %run.1 = phi i32 [ -1, %if.then496 ], [ %inc456, %if.end493 ]
  br i1 %13, label %for.inc520, label %if.then509

if.then509:                                       ; preds = %if.end507
  %77 = load i32* %arrayidx462, align 4, !tbaa !17
  %call514 = call i32 @sign(i32 %level.11682, i32 %77) #1
  store i32 %call514, i32* %arrayidx462, align 4, !tbaa !17
  br label %for.inc520

for.inc520:                                       ; preds = %if.end507, %if.then509
  %indvars.iv.next1793 = add nuw nsw i64 %indvars.iv1792, 1
  %exitcond1794 = icmp eq i64 %indvars.iv.next1793, 16
  br i1 %exitcond1794, label %for.end522, label %for.inc520.for.body433_crit_edge

for.inc520.for.body433_crit_edge:                 ; preds = %for.inc520
  %.pre = load %struct.ImageParameters** @img, align 8, !tbaa !1
  br label %for.body433

for.end522:                                       ; preds = %for.inc520
  %idxprom523 = sext i32 %scan_pos.1 to i64
  %arrayidx524 = getelementptr inbounds i32* %8, i64 %idxprom523
  store i32 0, i32* %arrayidx524, align 4, !tbaa !17
  br i1 %13, label %for.cond592.preheader.for.cond724.preheader_crit_edge, label %for.cond534.preheader.lr.ph

for.cond534.preheader.lr.ph:                      ; preds = %for.end522
  %arrayidx547 = getelementptr inbounds [4 x i32]* %M5, i64 0, i64 0
  %arrayidx548 = getelementptr inbounds [4 x i32]* %M5, i64 0, i64 2
  %arrayidx550 = getelementptr inbounds [4 x i32]* %M6, i64 0, i64 0
  %arrayidx554 = getelementptr inbounds [4 x i32]* %M6, i64 0, i64 1
  %arrayidx555 = getelementptr inbounds [4 x i32]* %M5, i64 0, i64 1
  %arrayidx556 = getelementptr inbounds [4 x i32]* %M5, i64 0, i64 3
  %arrayidx558 = getelementptr inbounds [4 x i32]* %M6, i64 0, i64 2
  %arrayidx562 = getelementptr inbounds [4 x i32]* %M6, i64 0, i64 3
  br label %for.cond534.preheader

for.cond534.preheader:                            ; preds = %for.cond534.preheader.lr.ph, %for.cond534.preheader
  %indvars.iv1790 = phi i64 [ 0, %for.cond534.preheader.lr.ph ], [ %indvars.iv.next1791, %for.cond534.preheader ]
  %arrayidx541 = getelementptr inbounds [4 x [4 x i32]]* %M4, i64 0, i64 0, i64 %indvars.iv1790
  %78 = load i32* %arrayidx541, align 4, !tbaa !17
  store i32 %78, i32* %arrayidx547, align 16, !tbaa !17
  %arrayidx541.1 = getelementptr inbounds [4 x [4 x i32]]* %M4, i64 0, i64 1, i64 %indvars.iv1790
  %79 = load i32* %arrayidx541.1, align 4, !tbaa !17
  store i32 %79, i32* %arrayidx555, align 4, !tbaa !17
  %arrayidx541.2 = getelementptr inbounds [4 x [4 x i32]]* %M4, i64 0, i64 2, i64 %indvars.iv1790
  %80 = load i32* %arrayidx541.2, align 4, !tbaa !17
  store i32 %80, i32* %arrayidx548, align 8, !tbaa !17
  %arrayidx541.3 = getelementptr inbounds [4 x [4 x i32]]* %M4, i64 0, i64 3, i64 %indvars.iv1790
  %81 = load i32* %arrayidx541.3, align 4, !tbaa !17
  store i32 %81, i32* %arrayidx556, align 4, !tbaa !17
  %add549 = add nsw i32 %80, %78
  store i32 %add549, i32* %arrayidx550, align 16, !tbaa !17
  %sub553 = sub nsw i32 %78, %80
  store i32 %sub553, i32* %arrayidx554, align 4, !tbaa !17
  %sub557 = sub nsw i32 %79, %81
  store i32 %sub557, i32* %arrayidx558, align 8, !tbaa !17
  %add561 = add nsw i32 %81, %79
  store i32 %add561, i32* %arrayidx562, align 4, !tbaa !17
  %add572 = add nsw i32 %add561, %add549
  store i32 %add572, i32* %arrayidx541, align 4, !tbaa !17
  %sub581 = sub nsw i32 %add549, %add561
  store i32 %sub581, i32* %arrayidx541.3, align 4, !tbaa !17
  %add572.1 = add nsw i32 %sub557, %sub553
  store i32 %add572.1, i32* %arrayidx541.1, align 4, !tbaa !17
  %sub581.1 = sub nsw i32 %sub553, %sub557
  store i32 %sub581.1, i32* %arrayidx541.2, align 4, !tbaa !17
  %indvars.iv.next1791 = add nuw nsw i64 %indvars.iv1790, 1
  %82 = trunc i64 %indvars.iv1790 to i32
  %cmp526.not = icmp sgt i32 %82, 2
  br i1 %cmp526.not, label %for.cond592.preheader, label %for.cond534.preheader

for.cond592.preheader:                            ; preds = %for.cond534.preheader
  br i1 %13, label %for.cond592.preheader.for.cond724.preheader_crit_edge, label %for.cond601.preheader.lr.ph

for.cond592.preheader.for.cond724.preheader_crit_edge: ; preds = %for.end522, %for.cond592.preheader
  %arrayidx1003.pre = getelementptr inbounds [4 x i32]* %M5, i64 0, i64 0
  %arrayidx1004.pre = getelementptr inbounds [4 x i32]* %M5, i64 0, i64 2
  %arrayidx1006.pre = getelementptr inbounds [4 x i32]* %M6, i64 0, i64 0
  %arrayidx1010.pre = getelementptr inbounds [4 x i32]* %M6, i64 0, i64 1
  %arrayidx1011.pre = getelementptr inbounds [4 x i32]* %M5, i64 0, i64 1
  %arrayidx1013.pre = getelementptr inbounds [4 x i32]* %M5, i64 0, i64 3
  %arrayidx1015.pre = getelementptr inbounds [4 x i32]* %M6, i64 0, i64 2
  %arrayidx1020.pre = getelementptr inbounds [4 x i32]* %M6, i64 0, i64 3
  br label %for.cond724.preheader

for.cond601.preheader.lr.ph:                      ; preds = %for.cond592.preheader
  %arrayidx614 = getelementptr inbounds [4 x i32]* %M5, i64 0, i64 0
  %arrayidx615 = getelementptr inbounds [4 x i32]* %M5, i64 0, i64 2
  %arrayidx617 = getelementptr inbounds [4 x i32]* %M6, i64 0, i64 0
  %arrayidx621 = getelementptr inbounds [4 x i32]* %M6, i64 0, i64 1
  %arrayidx622 = getelementptr inbounds [4 x i32]* %M5, i64 0, i64 1
  %arrayidx623 = getelementptr inbounds [4 x i32]* %M5, i64 0, i64 3
  %arrayidx625 = getelementptr inbounds [4 x i32]* %M6, i64 0, i64 2
  %arrayidx629 = getelementptr inbounds [4 x i32]* %M6, i64 0, i64 3
  %cmp635 = icmp slt i32 %add9, 36
  %arrayidx646 = getelementptr inbounds [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Intra, i64 0, i64 %idxprom469, i64 0, i64 0
  %83 = load i32* %arrayidx646, align 4, !tbaa !17
  %sub648 = sub nsw i32 5, %div
  %shl649 = shl i32 1, %sub648
  %sub651 = sub nsw i32 6, %div
  %sub691 = add nsw i32 %div, -6
  %84 = insertelement <4 x i32> undef, i32 %shl649, i32 0
  %85 = insertelement <4 x i32> %84, i32 %shl649, i32 1
  %86 = insertelement <4 x i32> %85, i32 %shl649, i32 2
  %87 = insertelement <4 x i32> %86, i32 %shl649, i32 3
  %88 = insertelement <4 x i32> undef, i32 %sub651, i32 0
  %89 = insertelement <4 x i32> %88, i32 %sub651, i32 1
  %90 = insertelement <4 x i32> %89, i32 %sub651, i32 2
  %91 = insertelement <4 x i32> %90, i32 %sub651, i32 3
  %92 = insertelement <4 x i32> undef, i32 %sub691, i32 0
  %93 = insertelement <4 x i32> %92, i32 %sub691, i32 1
  %94 = insertelement <4 x i32> %93, i32 %sub691, i32 2
  %95 = insertelement <4 x i32> %94, i32 %sub691, i32 3
  br label %for.cond601.preheader

for.cond601.preheader:                            ; preds = %for.cond601.preheader.lr.ph, %for.inc718.1
  %indvars.iv1781 = phi i64 [ 0, %for.cond601.preheader.lr.ph ], [ %indvars.iv.next1782, %for.inc718.1 ]
  %scevgep = getelementptr [4 x [4 x i32]]* %M4, i64 0, i64 %indvars.iv1781, i64 0
  %scevgep1776 = bitcast i32* %scevgep to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %M51775, i8* %scevgep1776, i64 16, i32 16, i1 false)
  %96 = bitcast [4 x i32]* %M5 to i64*
  %97 = load i64* %96, align 16
  %98 = trunc i64 %97 to i32
  %99 = bitcast i32* %arrayidx615 to i64*
  %100 = load i64* %99, align 8
  %101 = trunc i64 %100 to i32
  %add616 = add nsw i32 %101, %98
  store i32 %add616, i32* %arrayidx617, align 16, !tbaa !17
  %sub620 = sub nsw i32 %98, %101
  store i32 %sub620, i32* %arrayidx621, align 4, !tbaa !17
  %102 = lshr i64 %97, 32
  %103 = trunc i64 %102 to i32
  %104 = lshr i64 %100, 32
  %105 = trunc i64 %104 to i32
  %sub624 = sub nsw i32 %103, %105
  store i32 %sub624, i32* %arrayidx625, align 8, !tbaa !17
  %add628 = add nsw i32 %105, %103
  store i32 %add628, i32* %arrayidx629, align 4, !tbaa !17
  %add642 = add nsw i32 %add628, %add616
  %mul647 = mul nsw i32 %add642, %83
  %arrayidx658 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]]* %M0, i64 0, i64 0, i64 %indvars.iv1781, i64 0, i64 0
  %sub663 = sub nsw i32 %add616, %add628
  %mul668 = mul nsw i32 %sub663, %83
  %add642.11860 = add nsw i32 %sub624, %sub620
  %mul647.11861 = mul nsw i32 %add642.11860, %83
  %sub663.1 = sub nsw i32 %sub620, %sub624
  %mul668.1 = mul nsw i32 %sub663.1, %83
  %106 = insertelement <4 x i32> undef, i32 %mul647, i32 0
  %107 = insertelement <4 x i32> %106, i32 %mul647.11861, i32 1
  %108 = insertelement <4 x i32> %107, i32 %mul668.1, i32 2
  %109 = insertelement <4 x i32> %108, i32 %mul668, i32 3
  br i1 %cmp635, label %if.then637.1, label %if.else680.1

for.cond724.preheader:                            ; preds = %for.inc718.1, %for.cond592.preheader.for.cond724.preheader_crit_edge
  %arrayidx1020.pre-phi = phi i32* [ %arrayidx1020.pre, %for.cond592.preheader.for.cond724.preheader_crit_edge ], [ %arrayidx629, %for.inc718.1 ]
  %arrayidx1015.pre-phi = phi i32* [ %arrayidx1015.pre, %for.cond592.preheader.for.cond724.preheader_crit_edge ], [ %arrayidx625, %for.inc718.1 ]
  %arrayidx1013.pre-phi = phi i32* [ %arrayidx1013.pre, %for.cond592.preheader.for.cond724.preheader_crit_edge ], [ %arrayidx623, %for.inc718.1 ]
  %arrayidx1011.pre-phi = phi i32* [ %arrayidx1011.pre, %for.cond592.preheader.for.cond724.preheader_crit_edge ], [ %arrayidx622, %for.inc718.1 ]
  %arrayidx1010.pre-phi = phi i32* [ %arrayidx1010.pre, %for.cond592.preheader.for.cond724.preheader_crit_edge ], [ %arrayidx621, %for.inc718.1 ]
  %arrayidx1006.pre-phi = phi i32* [ %arrayidx1006.pre, %for.cond592.preheader.for.cond724.preheader_crit_edge ], [ %arrayidx617, %for.inc718.1 ]
  %arrayidx1004.pre-phi = phi i32* [ %arrayidx1004.pre, %for.cond592.preheader.for.cond724.preheader_crit_edge ], [ %arrayidx615, %for.inc718.1 ]
  %arrayidx1003.pre-phi = phi i32* [ %arrayidx1003.pre, %for.cond592.preheader.for.cond724.preheader_crit_edge ], [ %arrayidx614, %for.inc718.1 ]
  %cmp848 = icmp slt i32 %add9, 24
  %sub858 = sub nsw i32 3, %div
  %shl859 = shl i32 1, %sub858
  %sub861 = sub nsw i32 4, %div
  %sub879 = add nsw i32 %div, -4
  br label %for.cond728.preheader

for.cond728.preheader:                            ; preds = %for.inc1061, %for.cond724.preheader
  %indvars.iv1769 = phi i64 [ 0, %for.cond724.preheader ], [ %indvars.iv.next1770, %for.inc1061 ]
  %ac_coef.01703 = phi i32 [ 0, %for.cond724.preheader ], [ %ac_coef.3, %for.inc1061 ]
  %110 = trunc i64 %indvars.iv1769 to i32
  %div732 = sdiv i32 %110, 2
  %mul733 = shl i32 %div732, 1
  %rem736 = srem i32 %110, 2
  %mul737 = shl i32 %rem736, 1
  br label %for.body731

for.body731:                                      ; preds = %for.inc1058, %for.cond728.preheader
  %indvars.iv1766 = phi i64 [ 0, %for.cond728.preheader ], [ %indvars.iv.next1767, %for.inc1058 ]
  %ac_coef.11701 = phi i32 [ %ac_coef.01703, %for.cond728.preheader ], [ %ac_coef.3, %for.inc1058 ]
  %111 = trunc i64 %indvars.iv1766 to i32
  %div734 = sdiv i32 %111, 2
  %add735 = add nsw i32 %mul733, %div734
  %rem738 = srem i32 %111, 2
  %add739 = add nsw i32 %mul737, %rem738
  %idxprom740 = sext i32 %add739 to i64
  %idxprom741 = sext i32 %add735 to i64
  %112 = load %struct.ImageParameters** @img, align 8, !tbaa !1
  %cofAC = getelementptr inbounds %struct.ImageParameters* %112, i64 0, i32 47
  %113 = load i32***** %cofAC, align 8, !tbaa !42
  %arrayidx742 = getelementptr inbounds i32**** %113, i64 %idxprom741
  %114 = load i32**** %arrayidx742, align 8, !tbaa !1
  %arrayidx743 = getelementptr inbounds i32*** %114, i64 %idxprom740
  %115 = load i32*** %arrayidx743, align 8, !tbaa !1
  %116 = load i32** %115, align 8, !tbaa !1
  %arrayidx750 = getelementptr inbounds i32** %115, i64 1
  %117 = load i32** %arrayidx750, align 8, !tbaa !1
  br label %for.body754

for.body754:                                      ; preds = %for.inc891.for.body754_crit_edge, %for.body731
  %118 = phi %struct.ImageParameters* [ %112, %for.body731 ], [ %.pre1850, %for.inc891.for.body754_crit_edge ]
  %indvars.iv1745 = phi i64 [ 1, %for.body731 ], [ %indvars.iv.next1746, %for.inc891.for.body754_crit_edge ]
  %run.21694 = phi i32 [ -1, %for.body731 ], [ %run.3, %for.inc891.for.body754_crit_edge ]
  %scan_pos.21693 = phi i32 [ 0, %for.body731 ], [ %scan_pos.3, %for.inc891.for.body754_crit_edge ]
  %ac_coef.21690 = phi i32 [ %ac_coef.11701, %for.body731 ], [ %ac_coef.3, %for.inc891.for.body754_crit_edge ]
  %field_picture755 = getelementptr inbounds %struct.ImageParameters* %118, i64 0, i32 100
  %119 = load i32* %field_picture755, align 4, !tbaa !38
  %tobool756 = icmp eq i32 %119, 0
  br i1 %tobool756, label %lor.lhs.false757, label %if.end780

lor.lhs.false757:                                 ; preds = %for.body754
  %120 = load i32* @mb_adaptive, align 4, !tbaa !17
  %tobool758 = icmp eq i32 %120, 0
  br i1 %tobool758, label %if.else771, label %land.lhs.true759

land.lhs.true759:                                 ; preds = %lor.lhs.false757
  %field_mode760 = getelementptr inbounds %struct.ImageParameters* %118, i64 0, i32 81
  %121 = load i32* %field_mode760, align 4, !tbaa !39
  %tobool761 = icmp eq i32 %121, 0
  br i1 %tobool761, label %if.else771, label %if.end780

if.else771:                                       ; preds = %land.lhs.true759, %lor.lhs.false757
  br label %if.end780

if.end780:                                        ; preds = %for.body754, %land.lhs.true759, %if.else771
  %FIELD_SCAN.pn1858 = phi [16 x [2 x i8]]* [ @SNGL_SCAN, %if.else771 ], [ @FIELD_SCAN, %land.lhs.true759 ], [ @FIELD_SCAN, %for.body754 ]
  %i.10.in.in = getelementptr inbounds [16 x [2 x i8]]* %FIELD_SCAN.pn1858, i64 0, i64 %indvars.iv1745, i64 0
  %j.10.in.in = getelementptr inbounds [16 x [2 x i8]]* %FIELD_SCAN.pn1858, i64 0, i64 %indvars.iv1745, i64 1
  %i.10.in = load i8* %i.10.in.in, align 2
  %j.10.in = load i8* %j.10.in.in, align 1
  %inc781 = add nsw i32 %run.21694, 1
  %idxprom785 = zext i8 %j.10.in to i64
  %idxprom787 = zext i8 %i.10.in to i64
  %arrayidx791 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]]* %M0, i64 0, i64 %idxprom787, i64 %indvars.iv1766, i64 %idxprom785, i64 %indvars.iv1769
  %122 = load i32* %arrayidx791, align 4, !tbaa !17
  %ispos = icmp sgt i32 %122, -1
  %neg = sub i32 0, %122
  %123 = select i1 %ispos, i32 %122, i32 %neg
  br i1 %13, label %if.end818, label %if.else793

if.else793:                                       ; preds = %if.end780
  %arrayidx808 = getelementptr inbounds [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Intra, i64 0, i64 %idxprom469, i64 %idxprom787, i64 %idxprom785
  %124 = load i32* %arrayidx808, align 4, !tbaa !17
  %mul809 = mul nsw i32 %124, %123
  %arrayidx815 = getelementptr inbounds [13 x [4 x [4 x i32]]]* @LevelOffset4x4Luma_Intra, i64 0, i64 %idxprom474, i64 %idxprom787, i64 %idxprom785
  %125 = load i32* %arrayidx815, align 4, !tbaa !17
  %add816 = add nsw i32 %mul809, %125
  %shr817 = ashr i32 %add816, %add14
  br label %if.end818

if.end818:                                        ; preds = %if.end780, %if.else793
  %level.2 = phi i32 [ %shr817, %if.else793 ], [ %123, %if.end780 ]
  %cmp819 = icmp eq i32 %level.2, 0
  br i1 %cmp819, label %if.end836, label %if.then821

if.then821:                                       ; preds = %if.end818
  %call830 = call i32 @sign(i32 %level.2, i32 %122) #1
  %idxprom831 = sext i32 %scan_pos.21693 to i64
  %arrayidx832 = getelementptr inbounds i32* %116, i64 %idxprom831
  store i32 %call830, i32* %arrayidx832, align 4, !tbaa !17
  %arrayidx834 = getelementptr inbounds i32* %117, i64 %idxprom831
  store i32 %inc781, i32* %arrayidx834, align 4, !tbaa !17
  %inc835 = add nsw i32 %scan_pos.21693, 1
  br label %if.end836

if.end836:                                        ; preds = %if.end818, %if.then821
  %ac_coef.3 = phi i32 [ 15, %if.then821 ], [ %ac_coef.21690, %if.end818 ]
  %scan_pos.3 = phi i32 [ %inc835, %if.then821 ], [ %scan_pos.21693, %if.end818 ]
  %run.3 = phi i32 [ -1, %if.then821 ], [ %inc781, %if.end818 ]
  br i1 %13, label %for.inc891, label %if.then838

if.then838:                                       ; preds = %if.end836
  %126 = load i32* %arrayidx791, align 4, !tbaa !17
  %call847 = call i32 @sign(i32 %level.2, i32 %126) #1
  %arrayidx856 = getelementptr inbounds [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Intra, i64 0, i64 %idxprom469, i64 %idxprom787, i64 %idxprom785
  %127 = load i32* %arrayidx856, align 4, !tbaa !17
  %mul857 = mul nsw i32 %127, %call847
  br i1 %cmp848, label %if.then850, label %if.else871

if.then850:                                       ; preds = %if.then838
  %add860 = add nsw i32 %mul857, %shl859
  %shr862 = ashr i32 %add860, %sub861
  store i32 %shr862, i32* %arrayidx791, align 4, !tbaa !17
  br label %for.inc891

if.else871:                                       ; preds = %if.then838
  %shl880 = shl i32 %mul857, %sub879
  store i32 %shl880, i32* %arrayidx791, align 4, !tbaa !17
  br label %for.inc891

for.inc891:                                       ; preds = %if.end836, %if.else871, %if.then850
  %indvars.iv.next1746 = add nuw nsw i64 %indvars.iv1745, 1
  %exitcond1747 = icmp eq i64 %indvars.iv.next1746, 16
  br i1 %exitcond1747, label %for.end893, label %for.inc891.for.body754_crit_edge

for.inc891.for.body754_crit_edge:                 ; preds = %for.inc891
  %.pre1850 = load %struct.ImageParameters** @img, align 8, !tbaa !1
  br label %for.body754

for.end893:                                       ; preds = %for.inc891
  %idxprom894 = sext i32 %scan_pos.3 to i64
  %arrayidx895 = getelementptr inbounds i32* %116, i64 %idxprom894
  store i32 0, i32* %arrayidx895, align 4, !tbaa !17
  br i1 %13, label %for.inc1058, label %for.cond905.preheader

for.cond977.preheader:                            ; preds = %for.cond905.preheader
  br i1 %13, label %for.inc1058, label %for.cond986.preheader

for.cond905.preheader:                            ; preds = %for.end893, %for.cond905.preheader
  %indvars.iv1755 = phi i64 [ %indvars.iv.next1756, %for.cond905.preheader ], [ 0, %for.end893 ]
  %arrayidx916 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]]* %M0, i64 0, i64 0, i64 %indvars.iv1766, i64 %indvars.iv1755, i64 %indvars.iv1769
  %128 = load i32* %arrayidx916, align 4, !tbaa !17
  store i32 %128, i32* %arrayidx1003.pre-phi, align 4, !tbaa !17
  %arrayidx916.1 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]]* %M0, i64 0, i64 1, i64 %indvars.iv1766, i64 %indvars.iv1755, i64 %indvars.iv1769
  %129 = load i32* %arrayidx916.1, align 4, !tbaa !17
  store i32 %129, i32* %arrayidx1011.pre-phi, align 4, !tbaa !17
  %arrayidx916.2 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]]* %M0, i64 0, i64 2, i64 %indvars.iv1766, i64 %indvars.iv1755, i64 %indvars.iv1769
  %130 = load i32* %arrayidx916.2, align 4, !tbaa !17
  store i32 %130, i32* %arrayidx1004.pre-phi, align 4, !tbaa !17
  %arrayidx916.3 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]]* %M0, i64 0, i64 3, i64 %indvars.iv1766, i64 %indvars.iv1755, i64 %indvars.iv1769
  %131 = load i32* %arrayidx916.3, align 4, !tbaa !17
  store i32 %131, i32* %arrayidx1013.pre-phi, align 4, !tbaa !17
  %add924 = add nsw i32 %130, %128
  store i32 %add924, i32* %arrayidx1006.pre-phi, align 16, !tbaa !17
  %sub928 = sub nsw i32 %128, %130
  store i32 %sub928, i32* %arrayidx1010.pre-phi, align 4, !tbaa !17
  %shr931 = ashr i32 %129, 1
  %sub933 = sub nsw i32 %shr931, %131
  store i32 %sub933, i32* %arrayidx1015.pre-phi, align 8, !tbaa !17
  %shr937 = ashr i32 %131, 1
  %add938 = add nsw i32 %shr937, %129
  store i32 %add938, i32* %arrayidx1020.pre-phi, align 4, !tbaa !17
  %add949 = add nsw i32 %add938, %add924
  store i32 %add949, i32* %arrayidx916, align 4, !tbaa !17
  %sub962 = sub nsw i32 %add924, %add938
  store i32 %sub962, i32* %arrayidx916.3, align 4, !tbaa !17
  %add949.1 = add nsw i32 %sub933, %sub928
  store i32 %add949.1, i32* %arrayidx916.1, align 4, !tbaa !17
  %sub962.1 = sub nsw i32 %sub928, %sub933
  store i32 %sub962.1, i32* %arrayidx916.2, align 4, !tbaa !17
  %indvars.iv.next1756 = add nuw nsw i64 %indvars.iv1755, 1
  %132 = trunc i64 %indvars.iv1755 to i32
  %cmp897.not = icmp sgt i32 %132, 2
  br i1 %cmp897.not, label %for.cond977.preheader, label %for.cond905.preheader

for.cond986.preheader:                            ; preds = %for.cond977.preheader, %for.cond986.preheader
  %indvars.iv1764 = phi i64 [ %indvars.iv.next1765, %for.cond986.preheader ], [ 0, %for.cond977.preheader ]
  %arrayidx997 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]]* %M0, i64 0, i64 %indvars.iv1764, i64 %indvars.iv1766, i64 0, i64 %indvars.iv1769
  %133 = load i32* %arrayidx997, align 4, !tbaa !17
  store i32 %133, i32* %arrayidx1003.pre-phi, align 4, !tbaa !17
  %arrayidx997.1 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]]* %M0, i64 0, i64 %indvars.iv1764, i64 %indvars.iv1766, i64 1, i64 %indvars.iv1769
  %134 = load i32* %arrayidx997.1, align 4, !tbaa !17
  store i32 %134, i32* %arrayidx1011.pre-phi, align 4, !tbaa !17
  %arrayidx997.2 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]]* %M0, i64 0, i64 %indvars.iv1764, i64 %indvars.iv1766, i64 2, i64 %indvars.iv1769
  %135 = load i32* %arrayidx997.2, align 4, !tbaa !17
  store i32 %135, i32* %arrayidx1004.pre-phi, align 4, !tbaa !17
  %arrayidx997.3 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]]* %M0, i64 0, i64 %indvars.iv1764, i64 %indvars.iv1766, i64 3, i64 %indvars.iv1769
  %136 = load i32* %arrayidx997.3, align 4, !tbaa !17
  store i32 %136, i32* %arrayidx1013.pre-phi, align 4, !tbaa !17
  %add1005 = add nsw i32 %135, %133
  store i32 %add1005, i32* %arrayidx1006.pre-phi, align 16, !tbaa !17
  %sub1009 = sub nsw i32 %133, %135
  store i32 %sub1009, i32* %arrayidx1010.pre-phi, align 4, !tbaa !17
  %shr1012 = ashr i32 %134, 1
  %sub1014 = sub nsw i32 %shr1012, %136
  store i32 %sub1014, i32* %arrayidx1015.pre-phi, align 8, !tbaa !17
  %shr1018 = ashr i32 %136, 1
  %add1019 = add nsw i32 %shr1018, %134
  store i32 %add1019, i32* %arrayidx1020.pre-phi, align 4, !tbaa !17
  %add1030 = add nsw i32 %add1019, %add1005
  store i32 %add1030, i32* %arrayidx997, align 4, !tbaa !17
  %sub1043 = sub nsw i32 %add1005, %add1019
  store i32 %sub1043, i32* %arrayidx997.3, align 4, !tbaa !17
  %add1030.1 = add nsw i32 %sub1014, %sub1009
  store i32 %add1030.1, i32* %arrayidx997.1, align 4, !tbaa !17
  %sub1043.1 = sub nsw i32 %sub1009, %sub1014
  store i32 %sub1043.1, i32* %arrayidx997.2, align 4, !tbaa !17
  %indvars.iv.next1765 = add nuw nsw i64 %indvars.iv1764, 1
  %137 = trunc i64 %indvars.iv1764 to i32
  %cmp978.not = icmp sgt i32 %137, 2
  br i1 %cmp978.not, label %for.inc1058, label %for.cond986.preheader

for.inc1058:                                      ; preds = %for.cond986.preheader, %for.end893, %for.cond977.preheader
  %indvars.iv.next1767 = add nuw nsw i64 %indvars.iv1766, 1
  %exitcond1768 = icmp eq i64 %indvars.iv.next1767, 4
  br i1 %exitcond1768, label %for.inc1061, label %for.body731

for.inc1061:                                      ; preds = %for.inc1058
  %indvars.iv.next1770 = add nuw nsw i64 %indvars.iv1769, 1
  %exitcond1771 = icmp eq i64 %indvars.iv.next1770, 4
  br i1 %exitcond1771, label %for.end1063, label %for.cond728.preheader

for.end1063:                                      ; preds = %for.inc1061
  %138 = load %struct.ImageParameters** @img, align 8, !tbaa !1
  %residue_transform_flag1064 = getelementptr inbounds %struct.ImageParameters* %138, i64 0, i32 164
  %139 = load i32* %residue_transform_flag1064, align 4, !tbaa !35
  %tobool1065 = icmp eq i32 %139, 0
  br i1 %tobool1065, label %for.cond1071.preheader, label %for.cond1102.preheader

for.cond1071.preheader:                           ; preds = %for.end1063, %for.inc1094
  %indvars.iv1736 = phi i64 [ %indvars.iv.next1737, %for.inc1094 ], [ 0, %for.end1063 ]
  %140 = trunc i64 %indvars.iv1736 to i32
  %div1075 = sdiv i32 %140, 4
  %idxprom1076 = sext i32 %div1075 to i64
  %rem1077 = srem i32 %140, 4
  %idxprom1078 = sext i32 %rem1077 to i64
  br label %for.body1074

for.body1074:                                     ; preds = %for.body1074, %for.cond1071.preheader
  %indvars.iv1733 = phi i64 [ 0, %for.cond1071.preheader ], [ %indvars.iv.next1734, %for.body1074 ]
  %141 = trunc i64 %indvars.iv1733 to i32
  %div1079 = sdiv i32 %141, 4
  %idxprom1080 = sext i32 %div1079 to i64
  %rem1081 = srem i32 %141, 4
  %idxprom1082 = sext i32 %rem1081 to i64
  %arrayidx1086 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]]* %M0, i64 0, i64 %idxprom1082, i64 %idxprom1080, i64 %idxprom1078, i64 %idxprom1076
  %142 = load i32* %arrayidx1086, align 4, !tbaa !17
  %arrayidx1090 = getelementptr inbounds [16 x [16 x i32]]* %M1, i64 0, i64 %indvars.iv1733, i64 %indvars.iv1736
  store i32 %142, i32* %arrayidx1090, align 4, !tbaa !17
  %indvars.iv.next1734 = add nuw nsw i64 %indvars.iv1733, 1
  %exitcond1735 = icmp eq i64 %indvars.iv.next1734, 16
  br i1 %exitcond1735, label %for.inc1094, label %for.body1074

for.inc1094:                                      ; preds = %for.body1074
  %indvars.iv.next1737 = add nuw nsw i64 %indvars.iv1736, 1
  %exitcond1738 = icmp eq i64 %indvars.iv.next1737, 16
  br i1 %exitcond1738, label %for.cond1156.preheader, label %for.cond1071.preheader

for.cond1102.preheader:                           ; preds = %for.end1063, %for.inc1149
  %indvars.iv1742 = phi i64 [ %indvars.iv.next1743, %for.inc1149 ], [ 0, %for.end1063 ]
  %143 = trunc i64 %indvars.iv1742 to i32
  %div1108 = sdiv i32 %143, 4
  %idxprom1109 = sext i32 %div1108 to i64
  %rem1110 = srem i32 %143, 4
  %idxprom1111 = sext i32 %rem1110 to i64
  br label %for.body1105

for.body1105:                                     ; preds = %for.inc1146, %for.cond1102.preheader
  %indvars.iv1739 = phi i64 [ 0, %for.cond1102.preheader ], [ %indvars.iv.next1740, %for.inc1146 ]
  %144 = trunc i64 %indvars.iv1739 to i32
  %div1112 = sdiv i32 %144, 4
  %idxprom1113 = sext i32 %div1112 to i64
  %rem1114 = srem i32 %144, 4
  %idxprom1115 = sext i32 %rem1114 to i64
  %arrayidx1119 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]]* %M0, i64 0, i64 %idxprom1115, i64 %idxprom1113, i64 %idxprom1111, i64 %idxprom1109
  %145 = load i32* %arrayidx1119, align 4, !tbaa !17
  br i1 %13, label %if.then1107, label %if.else1125

if.then1107:                                      ; preds = %for.body1105
  %arrayidx1124 = getelementptr inbounds %struct.ImageParameters* %138, i64 0, i32 46, i64 %indvars.iv1739, i64 %indvars.iv1742
  store i32 %145, i32* %arrayidx1124, align 4, !tbaa !17
  br label %for.inc1146

if.else1125:                                      ; preds = %for.body1105
  %add1138 = add nsw i32 %145, 32
  %shr1139 = ashr i32 %add1138, 6
  %arrayidx1144 = getelementptr inbounds %struct.ImageParameters* %138, i64 0, i32 46, i64 %indvars.iv1739, i64 %indvars.iv1742
  store i32 %shr1139, i32* %arrayidx1144, align 4, !tbaa !17
  br label %for.inc1146

for.inc1146:                                      ; preds = %if.then1107, %if.else1125
  %indvars.iv.next1740 = add nuw nsw i64 %indvars.iv1739, 1
  %exitcond1741 = icmp eq i64 %indvars.iv.next1740, 16
  br i1 %exitcond1741, label %for.inc1149, label %for.body1105

for.inc1149:                                      ; preds = %for.inc1146
  %indvars.iv.next1743 = add nuw nsw i64 %indvars.iv1742, 1
  %exitcond1744 = icmp eq i64 %indvars.iv.next1743, 16
  br i1 %exitcond1744, label %if.end1152, label %for.cond1102.preheader

if.end1152:                                       ; preds = %for.inc1149
  %.pre1851 = load i32* %residue_transform_flag1064, align 4, !tbaa !35
  %phitmp = icmp eq i32 %.pre1851, 0
  br i1 %phitmp, label %for.cond1156.preheader, label %if.end1289

for.cond1156.preheader:                           ; preds = %for.inc1094, %if.end1152
  %pix_x = getelementptr inbounds %struct.ImageParameters* %138, i64 0, i32 33
  %pix_y = getelementptr inbounds %struct.ImageParameters* %138, i64 0, i32 34
  %146 = load %struct.storable_picture** @enc_picture, align 8, !tbaa !1
  %imgY = getelementptr inbounds %struct.storable_picture* %146, i64 0, i32 25
  %max_imgpel_value = getelementptr inbounds %struct.ImageParameters* %138, i64 0, i32 155
  br label %for.cond1160.preheader

for.cond1160.preheader:                           ; preds = %for.inc1286, %for.cond1156.preheader
  %indvars.iv1730 = phi i64 [ 0, %for.cond1156.preheader ], [ %indvars.iv.next1731, %for.inc1286 ]
  br label %for.body1163

for.body1163:                                     ; preds = %for.inc1283, %for.cond1160.preheader
  %indvars.iv = phi i64 [ 0, %for.cond1160.preheader ], [ %indvars.iv.next, %for.inc1283 ]
  br i1 %13, label %if.then1165, label %if.else1186

if.then1165:                                      ; preds = %for.body1163
  %arrayidx1169 = getelementptr inbounds [16 x [16 x i32]]* %M1, i64 0, i64 %indvars.iv, i64 %indvars.iv1730
  %147 = load i32* %arrayidx1169, align 4, !tbaa !17
  %arrayidx1176 = getelementptr inbounds %struct.ImageParameters* %138, i64 0, i32 42, i64 %idxprom27, i64 %indvars.iv1730, i64 %indvars.iv
  %148 = load i16* %arrayidx1176, align 2, !tbaa !21
  %conv1177 = zext i16 %148 to i32
  %add1178 = add nsw i32 %conv1177, %147
  %conv1179 = trunc i32 %add1178 to i16
  %149 = load i32* %pix_x, align 4, !tbaa !43
  %150 = trunc i64 %indvars.iv to i32
  %add1180 = add nsw i32 %149, %150
  %idxprom1181 = sext i32 %add1180 to i64
  %151 = load i32* %pix_y, align 4, !tbaa !44
  %152 = trunc i64 %indvars.iv1730 to i32
  %add1182 = add nsw i32 %151, %152
  %idxprom1183 = sext i32 %add1182 to i64
  %153 = load i16*** %imgY, align 8, !tbaa !5
  %arrayidx1184 = getelementptr inbounds i16** %153, i64 %idxprom1183
  %154 = load i16** %arrayidx1184, align 8, !tbaa !1
  %arrayidx1185 = getelementptr inbounds i16* %154, i64 %idxprom1181
  store i16 %conv1179, i16* %arrayidx1185, align 2, !tbaa !21
  br label %for.inc1283

if.else1186:                                      ; preds = %for.body1163
  %155 = load i32* %max_imgpel_value, align 4, !tbaa !24
  %conv1187 = sext i32 %155 to i64
  %arrayidx1191 = getelementptr inbounds [16 x [16 x i32]]* %M1, i64 0, i64 %indvars.iv, i64 %indvars.iv1730
  %156 = load i32* %arrayidx1191, align 4, !tbaa !17
  %conv1192 = sext i32 %156 to i64
  %arrayidx1199 = getelementptr inbounds %struct.ImageParameters* %138, i64 0, i32 42, i64 %idxprom27, i64 %indvars.iv1730, i64 %indvars.iv
  %157 = load i16* %arrayidx1199, align 2, !tbaa !21
  %conv1200 = zext i16 %157 to i64
  %shl1201 = shl nuw nsw i64 %conv1200, 6
  %add1202 = add i64 %conv1192, 32
  %add1203 = add i64 %add1202, %shl1201
  %shr1204 = ashr i64 %add1203, 6
  %cmp1205 = icmp slt i64 %shr1204, 0
  %.shr1204 = select i1 %cmp1205, i64 0, i64 %shr1204
  %cmp1224 = icmp slt i64 %conv1187, %.shr1204
  %conv1187..shr1204 = select i1 %cmp1224, i64 %conv1187, i64 %.shr1204
  %conv1272 = trunc i64 %conv1187..shr1204 to i16
  %158 = load i32* %pix_x, align 4, !tbaa !43
  %159 = trunc i64 %indvars.iv to i32
  %add1274 = add nsw i32 %158, %159
  %idxprom1275 = sext i32 %add1274 to i64
  %160 = load i32* %pix_y, align 4, !tbaa !44
  %161 = trunc i64 %indvars.iv1730 to i32
  %add1277 = add nsw i32 %160, %161
  %idxprom1278 = sext i32 %add1277 to i64
  %162 = load i16*** %imgY, align 8, !tbaa !5
  %arrayidx1280 = getelementptr inbounds i16** %162, i64 %idxprom1278
  %163 = load i16** %arrayidx1280, align 8, !tbaa !1
  %arrayidx1281 = getelementptr inbounds i16* %163, i64 %idxprom1275
  store i16 %conv1272, i16* %arrayidx1281, align 2, !tbaa !21
  br label %for.inc1283

for.inc1283:                                      ; preds = %if.then1165, %if.else1186
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 16
  br i1 %exitcond, label %for.inc1286, label %for.body1163

for.inc1286:                                      ; preds = %for.inc1283
  %indvars.iv.next1731 = add nuw nsw i64 %indvars.iv1730, 1
  %exitcond1732 = icmp eq i64 %indvars.iv.next1731, 16
  br i1 %exitcond1732, label %if.end1289, label %for.cond1160.preheader

if.end1289:                                       ; preds = %for.inc1286, %if.end1152
  call void @llvm.lifetime.end(i64 1024, i8* %2) #1
  call void @llvm.lifetime.end(i64 64, i8* %0) #1
  call void @llvm.lifetime.end(i64 1024, i8* %1) #1
  ret i32 %ac_coef.3

if.else680.1:                                     ; preds = %for.cond601.preheader
  %164 = shl <4 x i32> %109, %95
  %165 = bitcast i32* %arrayidx658 to <4 x i32>*
  store <4 x i32> %164, <4 x i32>* %165, align 16, !tbaa !17
  br label %for.inc718.1

if.then637.1:                                     ; preds = %for.cond601.preheader
  %166 = add <4 x i32> %109, %87
  %167 = ashr <4 x i32> %166, %91
  %168 = bitcast i32* %arrayidx658 to <4 x i32>*
  store <4 x i32> %167, <4 x i32>* %168, align 16, !tbaa !17
  br label %for.inc718.1

for.inc718.1:                                     ; preds = %if.then637.1, %if.else680.1
  %indvars.iv.next1782 = add nuw nsw i64 %indvars.iv1781, 1
  %169 = trunc i64 %indvars.iv1781 to i32
  %cmp593.not = icmp sgt i32 %169, 2
  br i1 %cmp593.not, label %for.cond724.preheader, label %for.cond601.preheader
}

declare i32 @sign(i32, i32) #2

; Function Attrs: nounwind uwtable
define i32 @dct_luma(i32 %block_x, i32 %block_y, i32* nocapture %coeff_cost, i32 %intra) #0 {
entry:
  %m6 = alloca [4 x i32], align 16
  %div = sdiv i32 %block_x, 4
  %div1 = sdiv i32 %block_y, 4
  %div2 = sdiv i32 %block_y, 8
  %mul = shl i32 %div2, 1
  %div3 = sdiv i32 %block_x, 8
  %add = add nsw i32 %mul, %div3
  %rem = srem i32 %div1, 2
  %mul4 = shl i32 %rem, 1
  %rem5 = srem i32 %div, 2
  %add6 = add nsw i32 %mul4, %rem5
  %idxprom = sext i32 %add6 to i64
  %idxprom7 = sext i32 %add to i64
  %0 = load %struct.ImageParameters** @img, align 8, !tbaa !1
  %cofAC = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 47
  %1 = load i32***** %cofAC, align 8, !tbaa !42
  %arrayidx = getelementptr inbounds i32**** %1, i64 %idxprom7
  %2 = load i32**** %arrayidx, align 8, !tbaa !1
  %arrayidx8 = getelementptr inbounds i32*** %2, i64 %idxprom
  %3 = load i32*** %arrayidx8, align 8, !tbaa !1
  %4 = load i32** %3, align 8, !tbaa !1
  %arrayidx15 = getelementptr inbounds i32** %3, i64 1
  %5 = load i32** %arrayidx15, align 8, !tbaa !1
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 3
  %6 = load i32* %current_mb_nr, align 4, !tbaa !8
  %idxprom16 = sext i32 %6 to i64
  %mb_data = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 51
  %7 = load %struct.macroblock** %mb_data, align 8, !tbaa !28
  %qp = getelementptr inbounds %struct.macroblock* %7, i64 %idxprom16, i32 3
  %8 = load i32* %qp, align 4, !tbaa !30
  %bitdepth_luma_qp_scale = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 151
  %9 = load i32* %bitdepth_luma_qp_scale, align 4, !tbaa !33
  %add18 = sub i32 0, %9
  %cmp = icmp eq i32 %8, %add18
  br i1 %cmp, label %land.end, label %land.end.thread

land.end.thread:                                  ; preds = %entry
  %add221067 = add nsw i32 %9, %8
  %div231068 = sdiv i32 %add221067, 6
  %rem281069 = srem i32 %add221067, 6
  %add291070 = add nsw i32 %div231068, 15
  br label %for.cond34.preheader.lr.ph

land.end:                                         ; preds = %entry
  %lossless_qpprime_flag = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 160
  %10 = load i32* %lossless_qpprime_flag, align 4, !tbaa !34
  %cmp19 = icmp eq i32 %10, 1
  %add22 = add nsw i32 %9, %8
  %div23 = sdiv i32 %add22, 6
  %rem28 = srem i32 %add22, 6
  %add29 = add nsw i32 %div23, 15
  br i1 %cmp19, label %for.cond170.preheader, label %for.cond34.preheader.lr.ph

for.cond34.preheader.lr.ph:                       ; preds = %land.end.thread, %land.end
  %add291077 = phi i32 [ %add291070, %land.end.thread ], [ %add29, %land.end ]
  %rem281075 = phi i32 [ %rem281069, %land.end.thread ], [ %rem28, %land.end ]
  %div231073 = phi i32 [ %div231068, %land.end.thread ], [ %div23, %land.end ]
  %add221071 = phi i32 [ %add221067, %land.end.thread ], [ %add22, %land.end ]
  br label %for.cond34.preheader

for.cond34.preheader:                             ; preds = %for.cond34.preheader.lr.ph, %for.cond34.preheader
  %indvars.iv1063 = phi i64 [ 0, %for.cond34.preheader.lr.ph ], [ %indvars.iv.next1064, %for.cond34.preheader ]
  %arrayidx41 = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 46, i64 0, i64 %indvars.iv1063
  %11 = load i32* %arrayidx41, align 4, !tbaa !17
  %arrayidx46 = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 46, i64 3, i64 %indvars.iv1063
  %12 = load i32* %arrayidx46, align 4, !tbaa !17
  %add47 = add nsw i32 %12, %11
  %sub60 = sub nsw i32 %11, %12
  %arrayidx41.1 = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 46, i64 1, i64 %indvars.iv1063
  %13 = load i32* %arrayidx41.1, align 4, !tbaa !17
  %arrayidx46.1 = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 46, i64 2, i64 %indvars.iv1063
  %14 = load i32* %arrayidx46.1, align 4, !tbaa !17
  %add47.1 = add nsw i32 %14, %13
  %sub60.1 = sub nsw i32 %13, %14
  %add65 = add nsw i32 %add47.1, %add47
  store i32 %add65, i32* %arrayidx41, align 4, !tbaa !17
  %sub72 = sub nsw i32 %add47, %add47.1
  store i32 %sub72, i32* %arrayidx46.1, align 4, !tbaa !17
  %mul78 = shl i32 %sub60, 1
  %add80 = add nsw i32 %mul78, %sub60.1
  store i32 %add80, i32* %arrayidx41.1, align 4, !tbaa !17
  %mul87 = shl nsw i32 %sub60.1, 1
  %sub88 = sub nsw i32 %sub60, %mul87
  store i32 %sub88, i32* %arrayidx46, align 4, !tbaa !17
  %indvars.iv.next1064 = add nuw nsw i64 %indvars.iv1063, 1
  %15 = trunc i64 %indvars.iv1063 to i32
  %cmp30.not = icmp sgt i32 %15, 2
  br i1 %cmp30.not, label %for.cond104.preheader, label %for.cond34.preheader

for.cond104.preheader:                            ; preds = %for.cond34.preheader, %for.cond104.preheader
  %indvars.iv1057 = phi i64 [ %indvars.iv.next1058, %for.cond104.preheader ], [ 0, %for.cond34.preheader ]
  %arrayidx112 = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 46, i64 %indvars.iv1057, i64 0
  %16 = load i32* %arrayidx112, align 4, !tbaa !17
  %arrayidx117 = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 46, i64 %indvars.iv1057, i64 3
  %17 = load i32* %arrayidx117, align 4, !tbaa !17
  %add118 = add nsw i32 %17, %16
  %sub131 = sub nsw i32 %16, %17
  %arrayidx112.1 = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 46, i64 %indvars.iv1057, i64 1
  %18 = load i32* %arrayidx112.1, align 4, !tbaa !17
  %arrayidx117.1 = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 46, i64 %indvars.iv1057, i64 2
  %19 = load i32* %arrayidx117.1, align 4, !tbaa !17
  %add118.1 = add nsw i32 %19, %18
  %sub131.1 = sub nsw i32 %18, %19
  %add139 = add nsw i32 %add118.1, %add118
  store i32 %add139, i32* %arrayidx112, align 4, !tbaa !17
  %sub146 = sub nsw i32 %add118, %add118.1
  store i32 %sub146, i32* %arrayidx117.1, align 4, !tbaa !17
  %mul152 = shl i32 %sub131, 1
  %add154 = add nsw i32 %mul152, %sub131.1
  store i32 %add154, i32* %arrayidx112.1, align 4, !tbaa !17
  %mul161 = shl nsw i32 %sub131.1, 1
  %sub162 = sub nsw i32 %sub131, %mul161
  store i32 %sub162, i32* %arrayidx117, align 4, !tbaa !17
  %indvars.iv.next1058 = add nuw nsw i64 %indvars.iv1057, 1
  %20 = trunc i64 %indvars.iv1057 to i32
  %cmp97.not = icmp sgt i32 %20, 2
  br i1 %cmp97.not, label %for.cond170.preheader, label %for.cond104.preheader

for.cond170.preheader:                            ; preds = %for.cond104.preheader, %land.end
  %21 = phi i1 [ true, %land.end ], [ false, %for.cond104.preheader ]
  %add2210721082 = phi i32 [ %add22, %land.end ], [ %add221071, %for.cond104.preheader ]
  %div2310741081 = phi i32 [ %div23, %land.end ], [ %div231073, %for.cond104.preheader ]
  %rem2810761080 = phi i32 [ %rem28, %land.end ], [ %rem281075, %for.cond104.preheader ]
  %add2910781079 = phi i32 [ %add29, %land.end ], [ %add291077, %for.cond104.preheader ]
  %mb_field = getelementptr inbounds %struct.macroblock* %7, i64 %idxprom16, i32 22
  %cmp284 = icmp slt i32 %add2210721082, 24
  %cmp287 = icmp eq i32 %intra, 1
  %idxprom292 = sext i32 %rem2810761080 to i64
  %sub297 = sub nsw i32 3, %div2310741081
  %shl = shl i32 1, %sub297
  %sub299 = sub nsw i32 4, %div2310741081
  %sub326 = add nsw i32 %div2310741081, -4
  %idxprom218 = sext i32 %div2310741081 to i64
  br label %for.body172

for.body172:                                      ; preds = %for.inc350.for.body172_crit_edge, %for.cond170.preheader
  %22 = phi %struct.ImageParameters* [ %0, %for.cond170.preheader ], [ %.pre, %for.inc350.for.body172_crit_edge ]
  %indvars.iv1050 = phi i64 [ 0, %for.cond170.preheader ], [ %indvars.iv.next1051, %for.inc350.for.body172_crit_edge ]
  %scan_pos.01019 = phi i32 [ 0, %for.cond170.preheader ], [ %scan_pos.11003, %for.inc350.for.body172_crit_edge ]
  %run.01018 = phi i32 [ -1, %for.cond170.preheader ], [ %run.11002, %for.inc350.for.body172_crit_edge ]
  %nonzero.01017 = phi i32 [ 0, %for.cond170.preheader ], [ %nonzero.11001, %for.inc350.for.body172_crit_edge ]
  %field_picture = getelementptr inbounds %struct.ImageParameters* %22, i64 0, i32 100
  %23 = load i32* %field_picture, align 4, !tbaa !38
  %tobool173 = icmp eq i32 %23, 0
  br i1 %tobool173, label %lor.lhs.false, label %if.end

lor.lhs.false:                                    ; preds = %for.body172
  %MbaffFrameFlag = getelementptr inbounds %struct.ImageParameters* %22, i64 0, i32 90
  %24 = load i32* %MbaffFrameFlag, align 4, !tbaa !45
  %tobool174 = icmp eq i32 %24, 0
  br i1 %tobool174, label %if.else, label %land.lhs.true

land.lhs.true:                                    ; preds = %lor.lhs.false
  %25 = load i32* %mb_field, align 4, !tbaa !46
  %tobool175 = icmp eq i32 %25, 0
  br i1 %tobool175, label %if.else, label %if.end

if.else:                                          ; preds = %land.lhs.true, %lor.lhs.false
  br label %if.end

if.end:                                           ; preds = %for.body172, %land.lhs.true, %if.else
  %FIELD_SCAN.pn = phi [16 x [2 x i8]]* [ @SNGL_SCAN, %if.else ], [ @FIELD_SCAN, %land.lhs.true ], [ @FIELD_SCAN, %for.body172 ]
  %i.2.in.in = getelementptr inbounds [16 x [2 x i8]]* %FIELD_SCAN.pn, i64 0, i64 %indvars.iv1050, i64 0
  %j.2.in.in = getelementptr inbounds [16 x [2 x i8]]* %FIELD_SCAN.pn, i64 0, i64 %indvars.iv1050, i64 1
  %i.2.in = load i8* %i.2.in.in, align 2
  %j.2.in = load i8* %j.2.in.in, align 1
  %inc191 = add nsw i32 %run.01018, 1
  %idxprom194 = zext i8 %j.2.in to i64
  %idxprom195 = zext i8 %i.2.in to i64
  %arrayidx198 = getelementptr inbounds %struct.ImageParameters* %22, i64 0, i32 46, i64 %idxprom195, i64 %idxprom194
  %26 = load i32* %arrayidx198, align 4, !tbaa !17
  %ispos996 = icmp sgt i32 %26, -1
  %neg997 = sub i32 0, %26
  %27 = select i1 %ispos996, i32 %26, i32 %neg997
  br i1 %21, label %if.end246, label %if.else199

if.else199:                                       ; preds = %if.end
  br i1 %cmp287, label %if.then202, label %if.else223

if.then202:                                       ; preds = %if.else199
  %arrayidx214 = getelementptr inbounds [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Intra, i64 0, i64 %idxprom292, i64 %idxprom195, i64 %idxprom194
  %28 = load i32* %arrayidx214, align 4, !tbaa !17
  %mul215 = mul nsw i32 %28, %27
  %arrayidx221 = getelementptr inbounds [13 x [4 x [4 x i32]]]* @LevelOffset4x4Luma_Intra, i64 0, i64 %idxprom218, i64 %idxprom195, i64 %idxprom194
  %29 = load i32* %arrayidx221, align 4, !tbaa !17
  %add222 = add nsw i32 %mul215, %29
  %shr = ashr i32 %add222, %add2910781079
  br label %if.end246

if.else223:                                       ; preds = %if.else199
  %arrayidx235 = getelementptr inbounds [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Inter, i64 0, i64 %idxprom292, i64 %idxprom195, i64 %idxprom194
  %30 = load i32* %arrayidx235, align 4, !tbaa !17
  %mul236 = mul nsw i32 %30, %27
  %arrayidx242 = getelementptr inbounds [13 x [4 x [4 x i32]]]* @LevelOffset4x4Luma_Inter, i64 0, i64 %idxprom218, i64 %idxprom195, i64 %idxprom194
  %31 = load i32* %arrayidx242, align 4, !tbaa !17
  %add243 = add nsw i32 %mul236, %31
  %shr244 = ashr i32 %add243, %add2910781079
  br label %if.end246

if.end246:                                        ; preds = %if.end, %if.then202, %if.else223
  %level.0 = phi i32 [ %shr, %if.then202 ], [ %shr244, %if.else223 ], [ %27, %if.end ]
  %cmp247 = icmp eq i32 %level.0, 0
  br i1 %cmp247, label %if.end341, label %if.then249

if.then249:                                       ; preds = %if.end246
  %cmp250 = icmp sgt i32 %level.0, 1
  %or.cond = or i1 %cmp250, %21
  br i1 %or.cond, label %if.then254, label %if.else256

if.then254:                                       ; preds = %if.then249
  %32 = load i32* %coeff_cost, align 4, !tbaa !17
  %add255 = add nsw i32 %32, 999999
  br label %if.end263

if.else256:                                       ; preds = %if.then249
  %idxprom257 = sext i32 %inc191 to i64
  %33 = load %struct.InputParameters** @input, align 8, !tbaa !1
  %disthres = getelementptr inbounds %struct.InputParameters* %33, i64 0, i32 86
  %34 = load i32* %disthres, align 4, !tbaa !47
  %idxprom258 = sext i32 %34 to i64
  %arrayidx260 = getelementptr inbounds [2 x [16 x i8]]* @COEFF_COST, i64 0, i64 %idxprom258, i64 %idxprom257
  %35 = load i8* %arrayidx260, align 1, !tbaa !48
  %conv261 = zext i8 %35 to i32
  %36 = load i32* %coeff_cost, align 4, !tbaa !17
  %add262 = add nsw i32 %36, %conv261
  br label %if.end263

if.end263:                                        ; preds = %if.else256, %if.then254
  %storemerge = phi i32 [ %add262, %if.else256 ], [ %add255, %if.then254 ]
  store i32 %storemerge, i32* %coeff_cost, align 4, !tbaa !17
  %idxprom264 = zext i8 %j.2.in to i64
  %idxprom265 = zext i8 %i.2.in to i64
  %arrayidx268 = getelementptr inbounds %struct.ImageParameters* %22, i64 0, i32 46, i64 %idxprom265, i64 %idxprom264
  %37 = load i32* %arrayidx268, align 4, !tbaa !17
  %call269 = call i32 @sign(i32 %level.0, i32 %37) #1
  %idxprom270 = sext i32 %scan_pos.01019 to i64
  %arrayidx271 = getelementptr inbounds i32* %4, i64 %idxprom270
  store i32 %call269, i32* %arrayidx271, align 4, !tbaa !17
  %arrayidx273 = getelementptr inbounds i32* %5, i64 %idxprom270
  store i32 %inc191, i32* %arrayidx273, align 4, !tbaa !17
  %inc274 = add nsw i32 %scan_pos.01019, 1
  %38 = load %struct.ImageParameters** @img, align 8, !tbaa !1
  %arrayidx279 = getelementptr inbounds %struct.ImageParameters* %38, i64 0, i32 46, i64 %idxprom265, i64 %idxprom264
  %39 = load i32* %arrayidx279, align 4, !tbaa !17
  %call280 = call i32 @sign(i32 %level.0, i32 %39) #1
  br i1 %21, label %for.inc350, label %if.else283

if.else283:                                       ; preds = %if.end263
  br i1 %cmp284, label %if.then286, label %if.else315

if.then286:                                       ; preds = %if.else283
  br i1 %cmp287, label %if.then289, label %if.end341.thread1004

if.then289:                                       ; preds = %if.then286
  %arrayidx295 = getelementptr inbounds [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Intra, i64 0, i64 %idxprom292, i64 %idxprom265, i64 %idxprom264
  %40 = load i32* %arrayidx295, align 4, !tbaa !17
  %mul296 = mul nsw i32 %40, %call280
  %add298 = add nsw i32 %mul296, %shl
  %shr300 = ashr i32 %add298, %sub299
  br label %if.end341

if.end341.thread1004:                             ; preds = %if.then286
  %arrayidx307 = getelementptr inbounds [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Inter, i64 0, i64 %idxprom292, i64 %idxprom265, i64 %idxprom264
  %41 = load i32* %arrayidx307, align 4, !tbaa !17
  %mul308 = mul nsw i32 %41, %call280
  %add311 = add nsw i32 %mul308, %shl
  %shr313 = ashr i32 %add311, %sub299
  br label %if.then343

if.else315:                                       ; preds = %if.else283
  br i1 %cmp287, label %if.then318, label %if.end341.thread

if.then318:                                       ; preds = %if.else315
  %arrayidx324 = getelementptr inbounds [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Intra, i64 0, i64 %idxprom292, i64 %idxprom265, i64 %idxprom264
  %42 = load i32* %arrayidx324, align 4, !tbaa !17
  %mul325 = mul nsw i32 %42, %call280
  %shl327 = shl i32 %mul325, %sub326
  br label %if.end341

if.end341.thread:                                 ; preds = %if.else315
  %arrayidx334 = getelementptr inbounds [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Inter, i64 0, i64 %idxprom292, i64 %idxprom265, i64 %idxprom264
  %43 = load i32* %arrayidx334, align 4, !tbaa !17
  %mul335 = mul nsw i32 %43, %call280
  %shl337 = shl i32 %mul335, %sub326
  br label %if.end341.if.then343_crit_edge

if.end341:                                        ; preds = %if.end246, %if.then318, %if.then289
  %nonzero.1 = phi i32 [ 1, %if.then289 ], [ 1, %if.then318 ], [ %nonzero.01017, %if.end246 ]
  %run.1 = phi i32 [ -1, %if.then289 ], [ -1, %if.then318 ], [ %inc191, %if.end246 ]
  %scan_pos.1 = phi i32 [ %inc274, %if.then289 ], [ %inc274, %if.then318 ], [ %scan_pos.01019, %if.end246 ]
  %ilev.0 = phi i32 [ %shr300, %if.then289 ], [ %shl327, %if.then318 ], [ 0, %if.end246 ]
  br i1 %21, label %for.inc350, label %if.end341.if.then343_crit_edge

if.end341.if.then343_crit_edge:                   ; preds = %if.end341.thread, %if.end341
  %ilev.01086 = phi i32 [ %shl337, %if.end341.thread ], [ %ilev.0, %if.end341 ]
  %scan_pos.11085 = phi i32 [ %inc274, %if.end341.thread ], [ %scan_pos.1, %if.end341 ]
  %run.11084 = phi i32 [ -1, %if.end341.thread ], [ %run.1, %if.end341 ]
  %nonzero.11083 = phi i32 [ 1, %if.end341.thread ], [ %nonzero.1, %if.end341 ]
  %idxprom344.pre = zext i8 %j.2.in to i64
  %idxprom345.pre = zext i8 %i.2.in to i64
  br label %if.then343

if.then343:                                       ; preds = %if.end341.if.then343_crit_edge, %if.end341.thread1004
  %idxprom345.pre-phi = phi i64 [ %idxprom345.pre, %if.end341.if.then343_crit_edge ], [ %idxprom265, %if.end341.thread1004 ]
  %idxprom344.pre-phi = phi i64 [ %idxprom344.pre, %if.end341.if.then343_crit_edge ], [ %idxprom264, %if.end341.thread1004 ]
  %ilev.01008 = phi i32 [ %ilev.01086, %if.end341.if.then343_crit_edge ], [ %shr313, %if.end341.thread1004 ]
  %scan_pos.11007 = phi i32 [ %scan_pos.11085, %if.end341.if.then343_crit_edge ], [ %inc274, %if.end341.thread1004 ]
  %run.11006 = phi i32 [ %run.11084, %if.end341.if.then343_crit_edge ], [ -1, %if.end341.thread1004 ]
  %nonzero.11005 = phi i32 [ %nonzero.11083, %if.end341.if.then343_crit_edge ], [ 1, %if.end341.thread1004 ]
  %44 = load %struct.ImageParameters** @img, align 8, !tbaa !1
  %arrayidx348 = getelementptr inbounds %struct.ImageParameters* %44, i64 0, i32 46, i64 %idxprom345.pre-phi, i64 %idxprom344.pre-phi
  store i32 %ilev.01008, i32* %arrayidx348, align 4, !tbaa !17
  br label %for.inc350

for.inc350:                                       ; preds = %if.end263, %if.end341, %if.then343
  %scan_pos.11003 = phi i32 [ %scan_pos.1, %if.end341 ], [ %scan_pos.11007, %if.then343 ], [ %inc274, %if.end263 ]
  %run.11002 = phi i32 [ %run.1, %if.end341 ], [ %run.11006, %if.then343 ], [ -1, %if.end263 ]
  %nonzero.11001 = phi i32 [ %nonzero.1, %if.end341 ], [ %nonzero.11005, %if.then343 ], [ 1, %if.end263 ]
  %indvars.iv.next1051 = add nuw nsw i64 %indvars.iv1050, 1
  %exitcond1052 = icmp eq i64 %indvars.iv.next1051, 16
  br i1 %exitcond1052, label %for.end352, label %for.inc350.for.body172_crit_edge

for.inc350.for.body172_crit_edge:                 ; preds = %for.inc350
  %.pre = load %struct.ImageParameters** @img, align 8, !tbaa !1
  br label %for.body172

for.end352:                                       ; preds = %for.inc350
  %idxprom353 = sext i32 %scan_pos.11003 to i64
  %arrayidx354 = getelementptr inbounds i32* %4, i64 %idxprom353
  store i32 0, i32* %arrayidx354, align 4, !tbaa !17
  br i1 %21, label %for.cond427.preheader.for.end724_crit_edge, label %for.cond364.preheader.lr.ph

for.cond364.preheader.lr.ph:                      ; preds = %for.end352
  %45 = load %struct.ImageParameters** @img, align 8, !tbaa !1
  %arrayidx381 = getelementptr inbounds [4 x i32]* %m6, i64 0, i64 0
  %arrayidx385 = getelementptr inbounds [4 x i32]* %m6, i64 0, i64 1
  %arrayidx390 = getelementptr inbounds [4 x i32]* %m6, i64 0, i64 2
  %arrayidx395 = getelementptr inbounds [4 x i32]* %m6, i64 0, i64 3
  br label %for.cond364.preheader

for.cond364.preheader:                            ; preds = %for.cond364.preheader.lr.ph, %for.cond364.preheader
  %indvars.iv1048 = phi i64 [ 0, %for.cond364.preheader.lr.ph ], [ %indvars.iv.next1049, %for.cond364.preheader ]
  %arrayidx372 = getelementptr inbounds %struct.ImageParameters* %45, i64 0, i32 46, i64 0, i64 %indvars.iv1048
  %46 = load i32* %arrayidx372, align 4, !tbaa !17
  %arrayidx372.1 = getelementptr inbounds %struct.ImageParameters* %45, i64 0, i32 46, i64 1, i64 %indvars.iv1048
  %47 = load i32* %arrayidx372.1, align 4, !tbaa !17
  %arrayidx372.2 = getelementptr inbounds %struct.ImageParameters* %45, i64 0, i32 46, i64 2, i64 %indvars.iv1048
  %48 = load i32* %arrayidx372.2, align 4, !tbaa !17
  %arrayidx372.3 = getelementptr inbounds %struct.ImageParameters* %45, i64 0, i32 46, i64 3, i64 %indvars.iv1048
  %49 = load i32* %arrayidx372.3, align 4, !tbaa !17
  %add380 = add nsw i32 %48, %46
  store i32 %add380, i32* %arrayidx381, align 16, !tbaa !17
  %sub384 = sub nsw i32 %46, %48
  store i32 %sub384, i32* %arrayidx385, align 4, !tbaa !17
  %shr387 = ashr i32 %47, 1
  %sub389 = sub nsw i32 %shr387, %49
  store i32 %sub389, i32* %arrayidx390, align 8, !tbaa !17
  %shr393 = ashr i32 %49, 1
  %add394 = add nsw i32 %shr393, %47
  store i32 %add394, i32* %arrayidx395, align 4, !tbaa !17
  %add405 = add nsw i32 %add394, %add380
  store i32 %add405, i32* %arrayidx372, align 4, !tbaa !17
  %sub415 = sub nsw i32 %add380, %add394
  store i32 %sub415, i32* %arrayidx372.3, align 4, !tbaa !17
  %add405.1 = add nsw i32 %sub389, %sub384
  store i32 %add405.1, i32* %arrayidx372.1, align 4, !tbaa !17
  %sub415.1 = sub nsw i32 %sub384, %sub389
  store i32 %sub415.1, i32* %arrayidx372.2, align 4, !tbaa !17
  %indvars.iv.next1049 = add nuw nsw i64 %indvars.iv1048, 1
  %50 = trunc i64 %indvars.iv1048 to i32
  %cmp356.not = icmp sgt i32 %50, 2
  br i1 %cmp356.not, label %for.cond427.preheader, label %for.cond364.preheader

for.cond427.preheader:                            ; preds = %for.cond364.preheader
  br i1 %21, label %for.cond427.preheader.for.end724_crit_edge, label %for.cond436.preheader.lr.ph

for.cond427.preheader.for.end724_crit_edge:       ; preds = %for.end352, %for.cond427.preheader
  %.pre1065 = load %struct.ImageParameters** @img, align 8, !tbaa !1
  br label %for.end724

for.cond436.preheader.lr.ph:                      ; preds = %for.cond427.preheader
  %51 = load %struct.ImageParameters** @img, align 8, !tbaa !1
  %arrayidx453 = getelementptr inbounds [4 x i32]* %m6, i64 0, i64 0
  %arrayidx457 = getelementptr inbounds [4 x i32]* %m6, i64 0, i64 1
  %arrayidx462 = getelementptr inbounds [4 x i32]* %m6, i64 0, i64 2
  %arrayidx467 = getelementptr inbounds [4 x i32]* %m6, i64 0, i64 3
  %residue_transform_flag = getelementptr inbounds %struct.ImageParameters* %51, i64 0, i32 164
  %max_imgpel_value = getelementptr inbounds %struct.ImageParameters* %51, i64 0, i32 155
  %52 = sext i32 %block_y to i64
  %53 = sext i32 %block_x to i64
  br label %for.cond436.preheader

for.cond436.preheader:                            ; preds = %for.cond436.preheader.lr.ph, %for.inc722
  %indvars.iv1038 = phi i64 [ 0, %for.cond436.preheader.lr.ph ], [ %indvars.iv.next1039, %for.inc722 ]
  %arrayidx444 = getelementptr inbounds %struct.ImageParameters* %51, i64 0, i32 46, i64 %indvars.iv1038, i64 0
  %54 = load i32* %arrayidx444, align 4, !tbaa !17
  %arrayidx444.1 = getelementptr inbounds %struct.ImageParameters* %51, i64 0, i32 46, i64 %indvars.iv1038, i64 1
  %55 = load i32* %arrayidx444.1, align 4, !tbaa !17
  %arrayidx444.2 = getelementptr inbounds %struct.ImageParameters* %51, i64 0, i32 46, i64 %indvars.iv1038, i64 2
  %56 = load i32* %arrayidx444.2, align 4, !tbaa !17
  %arrayidx444.3 = getelementptr inbounds %struct.ImageParameters* %51, i64 0, i32 46, i64 %indvars.iv1038, i64 3
  %57 = load i32* %arrayidx444.3, align 4, !tbaa !17
  %add452 = add nsw i32 %56, %54
  store i32 %add452, i32* %arrayidx453, align 16, !tbaa !17
  %sub456 = sub nsw i32 %54, %56
  store i32 %sub456, i32* %arrayidx457, align 4, !tbaa !17
  %shr459 = ashr i32 %55, 1
  %sub461 = sub nsw i32 %shr459, %57
  store i32 %sub461, i32* %arrayidx462, align 8, !tbaa !17
  %shr465 = ashr i32 %57, 1
  %add466 = add nsw i32 %shr465, %55
  store i32 %add466, i32* %arrayidx467, align 4, !tbaa !17
  %58 = add nsw i64 %indvars.iv1038, %53
  br label %for.body471

for.body471:                                      ; preds = %for.inc719, %for.cond436.preheader
  %indvars.iv1032 = phi i64 [ 0, %for.cond436.preheader ], [ %indvars.iv.next1033, %for.inc719 ]
  %59 = sub nsw i64 3, %indvars.iv1032
  %60 = load i32* %residue_transform_flag, align 4, !tbaa !35
  %tobool473 = icmp eq i32 %60, 0
  br i1 %tobool473, label %if.then474, label %if.else692

if.then474:                                       ; preds = %for.body471
  %61 = load i32* %max_imgpel_value, align 4, !tbaa !24
  %conv475 = sext i32 %61 to i64
  %arrayidx477 = getelementptr inbounds [4 x i32]* %m6, i64 0, i64 %indvars.iv1032
  %62 = load i32* %arrayidx477, align 4, !tbaa !17
  %arrayidx479 = getelementptr inbounds [4 x i32]* %m6, i64 0, i64 %59
  %63 = load i32* %arrayidx479, align 4, !tbaa !17
  %add480 = add nsw i32 %63, %62
  %conv481 = sext i32 %add480 to i64
  %64 = add nsw i64 %indvars.iv1032, %52
  %arrayidx487 = getelementptr inbounds %struct.ImageParameters* %51, i64 0, i32 45, i64 %58, i64 %64
  %65 = load i16* %arrayidx487, align 2, !tbaa !21
  %conv488 = zext i16 %65 to i64
  %shl489 = shl nuw nsw i64 %conv488, 6
  %add490 = add i64 %conv481, 32
  %add491 = add i64 %add490, %shl489
  %shr492 = ashr i64 %add491, 6
  %cmp493 = icmp slt i64 %shr492, 0
  %.shr492 = select i1 %cmp493, i64 0, i64 %shr492
  %cmp513 = icmp slt i64 %conv475, %.shr492
  %conv475..shr492 = select i1 %cmp513, i64 %conv475, i64 %.shr492
  %conv563 = trunc i64 %conv475..shr492 to i32
  %arrayidx568 = getelementptr inbounds %struct.ImageParameters* %51, i64 0, i32 46, i64 %indvars.iv1038, i64 %indvars.iv1032
  store i32 %conv563, i32* %arrayidx568, align 4, !tbaa !17
  %66 = load i32* %max_imgpel_value, align 4, !tbaa !24
  %conv570 = sext i32 %66 to i64
  %sub575 = sub nsw i32 %62, %63
  %conv576 = sext i32 %sub575 to i64
  %67 = add nsw i64 %59, %52
  %arrayidx583 = getelementptr inbounds %struct.ImageParameters* %51, i64 0, i32 45, i64 %58, i64 %67
  %68 = load i16* %arrayidx583, align 2, !tbaa !21
  %conv584 = zext i16 %68 to i64
  %shl585 = shl nuw nsw i64 %conv584, 6
  %add586 = add i64 %conv576, 32
  %add587 = add i64 %add586, %shl585
  %shr588 = ashr i64 %add587, 6
  %cmp589 = icmp slt i64 %shr588, 0
  %.shr588 = select i1 %cmp589, i64 0, i64 %shr588
  %cmp613 = icmp slt i64 %conv570, %.shr588
  %cond662 = select i1 %cmp613, i64 %conv570, i64 %.shr588
  %conv663 = trunc i64 %cond662 to i32
  %arrayidx668 = getelementptr inbounds %struct.ImageParameters* %51, i64 0, i32 46, i64 %indvars.iv1038, i64 %59
  store i32 %conv663, i32* %arrayidx668, align 4, !tbaa !17
  br label %for.inc719

if.else692:                                       ; preds = %for.body471
  %arrayidx673 = getelementptr inbounds [4 x i32]* %m6, i64 0, i64 %indvars.iv1032
  %69 = load i32* %arrayidx673, align 4, !tbaa !17
  %arrayidx675 = getelementptr inbounds [4 x i32]* %m6, i64 0, i64 %59
  %70 = load i32* %arrayidx675, align 4, !tbaa !17
  %add676 = add nsw i32 %70, %69
  %add698 = add nsw i32 %add676, 32
  %shr699 = ashr i32 %add698, 6
  %arrayidx704 = getelementptr inbounds %struct.ImageParameters* %51, i64 0, i32 46, i64 %indvars.iv1038, i64 %indvars.iv1032
  store i32 %shr699, i32* %arrayidx704, align 4, !tbaa !17
  %sub709 = add i32 %69, 32
  %add710 = sub i32 %sub709, %70
  %shr711 = ashr i32 %add710, 6
  %arrayidx716 = getelementptr inbounds %struct.ImageParameters* %51, i64 0, i32 46, i64 %indvars.iv1038, i64 %59
  store i32 %shr711, i32* %arrayidx716, align 4, !tbaa !17
  br label %for.inc719

for.inc719:                                       ; preds = %if.then474, %if.else692
  %indvars.iv.next1033 = add nuw nsw i64 %indvars.iv1032, 1
  %exitcond1037 = icmp eq i64 %indvars.iv.next1033, 2
  br i1 %exitcond1037, label %for.inc722, label %for.body471

for.inc722:                                       ; preds = %for.inc719
  %indvars.iv.next1039 = add nuw nsw i64 %indvars.iv1038, 1
  %71 = trunc i64 %indvars.iv1038 to i32
  %cmp428.not = icmp sgt i32 %71, 2
  br i1 %cmp428.not, label %for.end724, label %for.cond436.preheader

for.end724:                                       ; preds = %for.inc722, %for.cond427.preheader.for.end724_crit_edge
  %72 = phi %struct.ImageParameters* [ %.pre1065, %for.cond427.preheader.for.end724_crit_edge ], [ %51, %for.inc722 ]
  %residue_transform_flag725 = getelementptr inbounds %struct.ImageParameters* %72, i64 0, i32 164
  %73 = load i32* %residue_transform_flag725, align 4, !tbaa !35
  %tobool726 = icmp eq i32 %73, 0
  br i1 %tobool726, label %for.cond728.preheader, label %if.end786

for.cond728.preheader:                            ; preds = %for.end724
  %pix_x = getelementptr inbounds %struct.ImageParameters* %72, i64 0, i32 33
  %pix_y = getelementptr inbounds %struct.ImageParameters* %72, i64 0, i32 34
  %74 = load %struct.storable_picture** @enc_picture, align 8, !tbaa !1
  %imgY = getelementptr inbounds %struct.storable_picture* %74, i64 0, i32 25
  %75 = sext i32 %block_x to i64
  %76 = sext i32 %block_y to i64
  br label %for.cond732.preheader

for.cond732.preheader:                            ; preds = %for.inc780.3, %for.cond728.preheader
  %indvars.iv = phi i64 [ 0, %for.cond728.preheader ], [ %indvars.iv.next, %for.inc780.3 ]
  %77 = add nsw i64 %indvars.iv, %76
  %78 = trunc i64 %indvars.iv to i32
  %add756 = add i32 %78, %block_y
  %arrayidx742 = getelementptr inbounds %struct.ImageParameters* %72, i64 0, i32 46, i64 0, i64 %indvars.iv
  %79 = load i32* %arrayidx742, align 4, !tbaa !17
  br i1 %21, label %for.inc780.thread, label %for.inc780

for.inc780.thread:                                ; preds = %for.cond732.preheader
  %arrayidx749 = getelementptr inbounds %struct.ImageParameters* %72, i64 0, i32 45, i64 %75, i64 %77
  %80 = load i16* %arrayidx749, align 2, !tbaa !21
  %conv750 = zext i16 %80 to i32
  %add751 = add nsw i32 %conv750, %79
  %conv752 = trunc i32 %add751 to i16
  %81 = load i32* %pix_x, align 4, !tbaa !43
  %add754 = add i32 %81, %block_x
  %idxprom755 = sext i32 %add754 to i64
  %82 = load i32* %pix_y, align 4, !tbaa !44
  %add757 = add i32 %add756, %82
  %idxprom758 = sext i32 %add757 to i64
  %83 = load i16*** %imgY, align 8, !tbaa !5
  %arrayidx759 = getelementptr inbounds i16** %83, i64 %idxprom758
  %84 = load i16** %arrayidx759, align 8, !tbaa !1
  %arrayidx760 = getelementptr inbounds i16* %84, i64 %idxprom755
  store i16 %conv752, i16* %arrayidx760, align 2, !tbaa !21
  %arrayidx742.11087 = getelementptr inbounds %struct.ImageParameters* %72, i64 0, i32 46, i64 1, i64 %indvars.iv
  %85 = load i32* %arrayidx742.11087, align 4, !tbaa !17
  %86 = add nsw i64 %75, 1
  %arrayidx749.1 = getelementptr inbounds %struct.ImageParameters* %72, i64 0, i32 45, i64 %86, i64 %77
  %87 = load i16* %arrayidx749.1, align 2, !tbaa !21
  %conv750.1 = zext i16 %87 to i32
  %add751.1 = add nsw i32 %conv750.1, %85
  %conv752.1 = trunc i32 %add751.1 to i16
  %add753.1 = add i32 %block_x, 1
  %add754.1 = add i32 %add753.1, %81
  %idxprom755.1 = sext i32 %add754.1 to i64
  %add757.1 = add i32 %add756, %82
  %idxprom758.1 = sext i32 %add757.1 to i64
  %arrayidx759.1 = getelementptr inbounds i16** %83, i64 %idxprom758.1
  %88 = load i16** %arrayidx759.1, align 8, !tbaa !1
  %arrayidx760.1 = getelementptr inbounds i16* %88, i64 %idxprom755.1
  store i16 %conv752.1, i16* %arrayidx760.1, align 2, !tbaa !21
  %arrayidx742.2 = getelementptr inbounds %struct.ImageParameters* %72, i64 0, i32 46, i64 2, i64 %indvars.iv
  %89 = load i32* %arrayidx742.2, align 4, !tbaa !17
  %90 = add nsw i64 %75, 2
  %arrayidx749.2 = getelementptr inbounds %struct.ImageParameters* %72, i64 0, i32 45, i64 %90, i64 %77
  %91 = load i16* %arrayidx749.2, align 2, !tbaa !21
  %conv750.2 = zext i16 %91 to i32
  %add751.2 = add nsw i32 %conv750.2, %89
  %conv752.2 = trunc i32 %add751.2 to i16
  %add753.2 = add i32 %block_x, 2
  %add754.2 = add i32 %add753.2, %81
  %idxprom755.2 = sext i32 %add754.2 to i64
  %add757.2 = add i32 %add756, %82
  %idxprom758.2 = sext i32 %add757.2 to i64
  %arrayidx759.2 = getelementptr inbounds i16** %83, i64 %idxprom758.2
  %92 = load i16** %arrayidx759.2, align 8, !tbaa !1
  %arrayidx760.2 = getelementptr inbounds i16* %92, i64 %idxprom755.2
  store i16 %conv752.2, i16* %arrayidx760.2, align 2, !tbaa !21
  %arrayidx742.31089 = getelementptr inbounds %struct.ImageParameters* %72, i64 0, i32 46, i64 3, i64 %indvars.iv
  %93 = load i32* %arrayidx742.31089, align 4, !tbaa !17
  %94 = add nsw i64 %75, 3
  %arrayidx749.3 = getelementptr inbounds %struct.ImageParameters* %72, i64 0, i32 45, i64 %94, i64 %77
  %95 = load i16* %arrayidx749.3, align 2, !tbaa !21
  %conv750.3 = zext i16 %95 to i32
  %add751.3 = add nsw i32 %conv750.3, %93
  %conv752.3 = trunc i32 %add751.3 to i16
  %add753.3 = add i32 %block_x, 3
  %add754.3 = add i32 %add753.3, %81
  %idxprom755.3 = sext i32 %add754.3 to i64
  %add757.3 = add i32 %add756, %82
  %idxprom758.3 = sext i32 %add757.3 to i64
  %arrayidx759.3 = getelementptr inbounds i16** %83, i64 %idxprom758.3
  %96 = load i16** %arrayidx759.3, align 8, !tbaa !1
  %arrayidx760.3 = getelementptr inbounds i16* %96, i64 %idxprom755.3
  store i16 %conv752.3, i16* %arrayidx760.3, align 2, !tbaa !21
  br label %for.inc780.3

for.inc780:                                       ; preds = %for.cond732.preheader
  %conv767 = trunc i32 %79 to i16
  %97 = load i32* %pix_x, align 4, !tbaa !43
  %add770 = add i32 %97, %block_x
  %idxprom771 = sext i32 %add770 to i64
  %98 = load i32* %pix_y, align 4, !tbaa !44
  %add774 = add i32 %add756, %98
  %idxprom775 = sext i32 %add774 to i64
  %99 = load i16*** %imgY, align 8, !tbaa !5
  %arrayidx777 = getelementptr inbounds i16** %99, i64 %idxprom775
  %100 = load i16** %arrayidx777, align 8, !tbaa !1
  %arrayidx778 = getelementptr inbounds i16* %100, i64 %idxprom771
  store i16 %conv767, i16* %arrayidx778, align 2, !tbaa !21
  %arrayidx742.1 = getelementptr inbounds %struct.ImageParameters* %72, i64 0, i32 46, i64 1, i64 %indvars.iv
  %101 = load i32* %arrayidx742.1, align 4, !tbaa !17
  %conv767.1 = trunc i32 %101 to i16
  %add769.1 = add i32 %block_x, 1
  %add770.1 = add i32 %add769.1, %97
  %idxprom771.1 = sext i32 %add770.1 to i64
  %add774.1 = add i32 %add756, %98
  %idxprom775.1 = sext i32 %add774.1 to i64
  %arrayidx777.1 = getelementptr inbounds i16** %99, i64 %idxprom775.1
  %102 = load i16** %arrayidx777.1, align 8, !tbaa !1
  %arrayidx778.1 = getelementptr inbounds i16* %102, i64 %idxprom771.1
  store i16 %conv767.1, i16* %arrayidx778.1, align 2, !tbaa !21
  %arrayidx742.21088 = getelementptr inbounds %struct.ImageParameters* %72, i64 0, i32 46, i64 2, i64 %indvars.iv
  %103 = load i32* %arrayidx742.21088, align 4, !tbaa !17
  %conv767.2 = trunc i32 %103 to i16
  %add769.2 = add i32 %block_x, 2
  %add770.2 = add i32 %add769.2, %97
  %idxprom771.2 = sext i32 %add770.2 to i64
  %add774.2 = add i32 %add756, %98
  %idxprom775.2 = sext i32 %add774.2 to i64
  %arrayidx777.2 = getelementptr inbounds i16** %99, i64 %idxprom775.2
  %104 = load i16** %arrayidx777.2, align 8, !tbaa !1
  %arrayidx778.2 = getelementptr inbounds i16* %104, i64 %idxprom771.2
  store i16 %conv767.2, i16* %arrayidx778.2, align 2, !tbaa !21
  %arrayidx742.3 = getelementptr inbounds %struct.ImageParameters* %72, i64 0, i32 46, i64 3, i64 %indvars.iv
  %105 = load i32* %arrayidx742.3, align 4, !tbaa !17
  %conv767.3 = trunc i32 %105 to i16
  %add769.3 = add i32 %block_x, 3
  %add770.3 = add i32 %add769.3, %97
  %idxprom771.3 = sext i32 %add770.3 to i64
  %add774.3 = add i32 %add756, %98
  %idxprom775.3 = sext i32 %add774.3 to i64
  %arrayidx777.3 = getelementptr inbounds i16** %99, i64 %idxprom775.3
  %106 = load i16** %arrayidx777.3, align 8, !tbaa !1
  %arrayidx778.3 = getelementptr inbounds i16* %106, i64 %idxprom771.3
  store i16 %conv767.3, i16* %arrayidx778.3, align 2, !tbaa !21
  br label %for.inc780.3

if.end786:                                        ; preds = %for.inc780.3, %for.end724
  ret i32 %nonzero.11001

for.inc780.3:                                     ; preds = %for.inc780.thread, %for.inc780
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 4
  br i1 %exitcond, label %if.end786, label %for.cond732.preheader
}

; Function Attrs: nounwind uwtable
define i32 @dct_chroma(i32 %uv, i32 %cr_cbp) #0 {
entry:
  %m1 = alloca [4 x i32], align 16
  %m5 = alloca [4 x i32], align 16
  %m53430 = bitcast [4 x i32]* %m5 to i8*
  %m6 = alloca [4 x i32], align 16
  %m3 = alloca [4 x [4 x i32]], align 16
  %m4 = alloca [4 x [4 x i32]], align 16
  %0 = load %struct.ImageParameters** @img, align 8, !tbaa !1
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 3
  %1 = load i32* %current_mb_nr, align 4, !tbaa !8
  %idxprom = sext i32 %1 to i64
  %mb_data = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 51
  %2 = load %struct.macroblock** %mb_data, align 8, !tbaa !28
  %add = add nsw i32 %uv, 1
  %idxprom1 = sext i32 %add to i64
  %cofDC = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 48
  %3 = load i32**** %cofDC, align 8, !tbaa !29
  %arrayidx2 = getelementptr inbounds i32*** %3, i64 %idxprom1
  %4 = load i32*** %arrayidx2, align 8, !tbaa !1
  %5 = load i32** %4, align 8, !tbaa !1
  %arrayidx8 = getelementptr inbounds i32** %4, i64 1
  %6 = load i32** %arrayidx8, align 8, !tbaa !1
  %mb_type = getelementptr inbounds %struct.macroblock* %2, i64 %idxprom, i32 8
  %7 = load i32* %mb_type, align 4, !tbaa !49
  %switch.tableidx = add i32 %7, -9
  %8 = icmp ult i32 %switch.tableidx, 5
  br i1 %8, label %switch.lookup, label %lor.end

switch.lookup:                                    ; preds = %entry
  %switch.cast = trunc i32 %switch.tableidx to i5
  %switch.downshift = lshr i5 -13, %switch.cast
  %9 = and i5 %switch.downshift, 1
  %switch.masked = icmp ne i5 %9, 0
  br label %lor.end

lor.end:                                          ; preds = %entry, %switch.lookup
  %10 = phi i1 [ %switch.masked, %switch.lookup ], [ false, %entry ]
  %num_blk8x8_uv = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 157
  %11 = load i32* %num_blk8x8_uv, align 4, !tbaa !50
  %div = sdiv i32 %11, 2
  %mul = mul nsw i32 %div, %uv
  %yuv_format = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 159
  %12 = load i32* %yuv_format, align 4, !tbaa !51
  %13 = bitcast [4 x [4 x i32]]* %m3 to i8*
  call void @llvm.lifetime.start(i64 64, i8* %13) #1
  %14 = bitcast [4 x [4 x i32]]* %m4 to i8*
  call void @llvm.lifetime.start(i64 64, i8* %14) #1
  %qp = getelementptr inbounds %struct.macroblock* %2, i64 %idxprom, i32 3
  %15 = load i32* %qp, align 4, !tbaa !30
  %bitdepth_luma_qp_scale = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 151
  %16 = load i32* %bitdepth_luma_qp_scale, align 4, !tbaa !33
  %add13 = sub i32 0, %16
  %cmp14 = icmp eq i32 %15, %add13
  br i1 %cmp14, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %lor.end
  %lossless_qpprime_flag = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 160
  %17 = load i32* %lossless_qpprime_flag, align 4, !tbaa !34
  %cmp15 = icmp eq i32 %17, 1
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.end
  %18 = phi i1 [ false, %lor.end ], [ %cmp15, %land.rhs ]
  %idxprom17 = sext i32 %uv to i64
  %arrayidx18 = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 163, i64 %idxprom17
  %19 = load i32* %arrayidx18, align 4, !tbaa !17
  %add19 = add nsw i32 %19, %15
  %bitdepth_chroma_qp_scale = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 152
  %20 = load i32* %bitdepth_chroma_qp_scale, align 4, !tbaa !52
  %sub = sub nsw i32 0, %20
  %cmp20 = icmp slt i32 %add19, %sub
  br i1 %cmp20, label %cond.end26, label %cond.false

cond.false:                                       ; preds = %land.end
  %cmp23 = icmp sgt i32 %add19, 51
  br i1 %cmp23, label %cond.false30, label %cond.end26

cond.end26:                                       ; preds = %cond.false, %land.end
  %cond27 = phi i32 [ %add19, %cond.false ], [ %sub, %land.end ]
  %cmp28 = icmp slt i32 %cond27, 0
  br i1 %cmp28, label %cond.end34, label %cond.false30

cond.false30:                                     ; preds = %cond.false, %cond.end26
  %cond273234 = phi i32 [ %cond27, %cond.end26 ], [ 51, %cond.false ]
  %idxprom32 = sext i32 %cond273234 to i64
  %arrayidx33 = getelementptr inbounds [52 x i8]* @QP_SCALE_CR, i64 0, i64 %idxprom32
  %21 = load i8* %arrayidx33, align 1, !tbaa !48
  %conv = zext i8 %21 to i32
  br label %cond.end34

cond.end34:                                       ; preds = %cond.end26, %cond.false30
  %cond35 = phi i32 [ %conv, %cond.false30 ], [ %cond27, %cond.end26 ]
  %add37 = add nsw i32 %20, %cond35
  %div38 = sdiv i32 %add37, 6
  %rem = srem i32 %add37, 6
  %add41 = add nsw i32 %div38, 15
  %cmp43 = icmp eq i32 %12, 2
  br i1 %cmp43, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end34
  %add45 = add nsw i32 %cond35, 3
  %add47 = add nsw i32 %add45, %20
  %div48 = sdiv i32 %add47, 6
  %rem52 = srem i32 %add47, 6
  %phitmp = sext i32 %rem52 to i64
  %phitmp3217 = add i32 %div48, 16
  br label %if.end

if.end:                                           ; preds = %if.then, %cond.end34
  %qp_per_dc.0 = phi i32 [ %div48, %if.then ], [ 0, %cond.end34 ]
  %qp_rem_dc.0 = phi i64 [ %phitmp, %if.then ], [ 0, %cond.end34 ]
  %q_bits_422.0 = phi i32 [ %phitmp3217, %if.then ], [ 1, %cond.end34 ]
  %mb_cr_size_y3359 = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 162
  %22 = load i32* %mb_cr_size_y3359, align 4, !tbaa !53
  %cmp543360 = icmp sgt i32 %22, 0
  br i1 %cmp543360, label %for.cond56.preheader.lr.ph, label %for.end236

for.cond56.preheader.lr.ph:                       ; preds = %if.end
  %mb_cr_size_x3355 = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 161
  %arrayidx190 = getelementptr inbounds [4 x i32]* %m5, i64 0, i64 0
  %arrayidx191 = getelementptr inbounds [4 x i32]* %m5, i64 0, i64 1
  %arrayidx208 = getelementptr inbounds [4 x i32]* %m5, i64 0, i64 3
  %arrayidx210 = getelementptr inbounds [4 x i32]* %m5, i64 0, i64 2
  %.pre = load i32* %mb_cr_size_x3355, align 4, !tbaa !54
  br label %for.cond56.preheader

for.cond56.preheader:                             ; preds = %for.cond56.preheader.lr.ph, %for.inc234
  %23 = phi i32 [ %22, %for.cond56.preheader.lr.ph ], [ %71, %for.inc234 ]
  %24 = phi i32 [ %.pre, %for.cond56.preheader.lr.ph ], [ %72, %for.inc234 ]
  %indvars.iv3542 = phi i64 [ 0, %for.cond56.preheader.lr.ph ], [ %indvars.iv.next3543, %for.inc234 ]
  %cmp573356 = icmp sgt i32 %24, 0
  br i1 %cmp573356, label %for.cond60.preheader.lr.ph, label %for.inc234

for.cond60.preheader.lr.ph:                       ; preds = %for.cond56.preheader
  %add2023220 = shl i64 %indvars.iv3542, 32
  %sext = ashr exact i64 %add2023220, 32
  %idxprom203 = or i64 %sext, 2
  %add2123221 = shl i64 %indvars.iv3542, 32
  %sext3585 = ashr exact i64 %add2123221, 32
  %idxprom213 = or i64 %sext3585, 1
  %add2223222 = shl i64 %indvars.iv3542, 32
  %sext3586 = ashr exact i64 %add2223222, 32
  %idxprom223 = or i64 %sext3586, 3
  br label %for.cond60.preheader

for.cond60.preheader:                             ; preds = %for.cond60.preheader.lr.ph, %for.inc231
  %indvars.iv3540 = phi i64 [ 0, %for.cond60.preheader.lr.ph ], [ %indvars.iv.next3541, %for.inc231 ]
  br i1 %18, label %for.inc231, label %for.body66.lr.ph

for.body66.lr.ph:                                 ; preds = %for.cond60.preheader
  %add1143223 = shl i64 %indvars.iv3540, 32
  %sext3587 = ashr exact i64 %add1143223, 32
  %idxprom115 = or i64 %sext3587, 2
  %add1243224 = shl i64 %indvars.iv3540, 32
  %sext3588 = ashr exact i64 %add1243224, 32
  %idxprom125 = or i64 %sext3588, 1
  %add1343225 = shl i64 %indvars.iv3540, 32
  %sext3589 = ashr exact i64 %add1343225, 32
  %idxprom135 = or i64 %sext3589, 3
  br label %for.body66

for.cond142.preheader:                            ; preds = %for.body66
  br i1 %18, label %for.inc231, label %for.body150

for.body66:                                       ; preds = %for.body66.lr.ph, %for.body66
  %indvars.iv3528 = phi i64 [ 0, %for.body66.lr.ph ], [ %indvars.iv.next3529, %for.body66 ]
  %25 = add nsw i64 %indvars.iv3528, %indvars.iv3542
  %arrayidx77 = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 46, i64 %indvars.iv3540, i64 %25
  %26 = load i32* %arrayidx77, align 4, !tbaa !17
  %27 = or i64 %indvars.iv3540, 3
  %arrayidx83 = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 46, i64 %27, i64 %25
  %28 = load i32* %arrayidx83, align 4, !tbaa !17
  %add84 = add nsw i32 %28, %26
  store i32 %add84, i32* %arrayidx190, align 16, !tbaa !17
  %29 = load i32* %arrayidx77, align 4, !tbaa !17
  %30 = load i32* %arrayidx83, align 4, !tbaa !17
  %sub99 = sub nsw i32 %29, %30
  store i32 %sub99, i32* %arrayidx208, align 4, !tbaa !17
  %31 = or i64 %indvars.iv3540, 1
  %arrayidx77.1 = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 46, i64 %31, i64 %25
  %32 = load i32* %arrayidx77.1, align 4, !tbaa !17
  %33 = or i64 %indvars.iv3540, 2
  %arrayidx83.1 = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 46, i64 %33, i64 %25
  %34 = load i32* %arrayidx83.1, align 4, !tbaa !17
  %add84.1 = add nsw i32 %34, %32
  store i32 %add84.1, i32* %arrayidx191, align 4, !tbaa !17
  %35 = load i32* %arrayidx77.1, align 4, !tbaa !17
  %36 = load i32* %arrayidx83.1, align 4, !tbaa !17
  %sub99.1 = sub nsw i32 %35, %36
  store i32 %sub99.1, i32* %arrayidx210, align 8, !tbaa !17
  %add104 = add nsw i32 %add84.1, %add84
  store i32 %add104, i32* %arrayidx77, align 4, !tbaa !17
  %37 = bitcast [4 x i32]* %m5 to i64*
  %38 = load i64* %37, align 16
  %39 = trunc i64 %38 to i32
  %40 = lshr i64 %38, 32
  %41 = trunc i64 %40 to i32
  %sub112 = sub nsw i32 %39, %41
  %arrayidx118 = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 46, i64 %idxprom115, i64 %25
  store i32 %sub112, i32* %arrayidx118, align 4, !tbaa !17
  %42 = load i32* %arrayidx208, align 4, !tbaa !17
  %mul120 = shl i32 %42, 1
  %43 = load i32* %arrayidx210, align 8, !tbaa !17
  %add122 = add nsw i32 %mul120, %43
  %arrayidx128 = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 46, i64 %idxprom125, i64 %25
  store i32 %add122, i32* %arrayidx128, align 4, !tbaa !17
  %44 = load i32* %arrayidx208, align 4, !tbaa !17
  %45 = load i32* %arrayidx210, align 8, !tbaa !17
  %mul131 = shl nsw i32 %45, 1
  %sub132 = sub nsw i32 %44, %mul131
  %arrayidx138 = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 46, i64 %idxprom135, i64 %25
  store i32 %sub132, i32* %arrayidx138, align 4, !tbaa !17
  %indvars.iv.next3529 = add nuw nsw i64 %indvars.iv3528, 1
  %46 = trunc i64 %indvars.iv3528 to i32
  %cmp61.not = icmp sgt i32 %46, 2
  br i1 %cmp61.not, label %for.cond142.preheader, label %for.body66

for.body150:                                      ; preds = %for.cond142.preheader, %for.body150
  %indvars.iv3537 = phi i64 [ %indvars.iv.next3538, %for.body150 ], [ 0, %for.cond142.preheader ]
  %47 = add nsw i64 %indvars.iv3537, %indvars.iv3540
  %arrayidx162 = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 46, i64 %47, i64 %indvars.iv3542
  %48 = load i32* %arrayidx162, align 4, !tbaa !17
  %49 = or i64 %indvars.iv3542, 3
  %arrayidx168 = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 46, i64 %47, i64 %49
  %50 = load i32* %arrayidx168, align 4, !tbaa !17
  %add169 = add nsw i32 %50, %48
  store i32 %add169, i32* %arrayidx190, align 16, !tbaa !17
  %51 = load i32* %arrayidx162, align 4, !tbaa !17
  %52 = load i32* %arrayidx168, align 4, !tbaa !17
  %sub184 = sub nsw i32 %51, %52
  store i32 %sub184, i32* %arrayidx208, align 4, !tbaa !17
  %53 = or i64 %indvars.iv3542, 1
  %arrayidx162.1 = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 46, i64 %47, i64 %53
  %54 = load i32* %arrayidx162.1, align 4, !tbaa !17
  %55 = or i64 %indvars.iv3542, 2
  %arrayidx168.1 = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 46, i64 %47, i64 %55
  %56 = load i32* %arrayidx168.1, align 4, !tbaa !17
  %add169.1 = add nsw i32 %56, %54
  store i32 %add169.1, i32* %arrayidx191, align 4, !tbaa !17
  %57 = load i32* %arrayidx162.1, align 4, !tbaa !17
  %58 = load i32* %arrayidx168.1, align 4, !tbaa !17
  %sub184.1 = sub nsw i32 %57, %58
  store i32 %sub184.1, i32* %arrayidx210, align 8, !tbaa !17
  %add192 = add nsw i32 %add169.1, %add169
  store i32 %add192, i32* %arrayidx162, align 4, !tbaa !17
  %59 = bitcast [4 x i32]* %m5 to i64*
  %60 = load i64* %59, align 16
  %61 = trunc i64 %60 to i32
  %62 = lshr i64 %60, 32
  %63 = trunc i64 %62 to i32
  %sub201 = sub nsw i32 %61, %63
  %arrayidx207 = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 46, i64 %47, i64 %idxprom203
  store i32 %sub201, i32* %arrayidx207, align 4, !tbaa !17
  %64 = load i32* %arrayidx208, align 4, !tbaa !17
  %mul209 = shl i32 %64, 1
  %65 = load i32* %arrayidx210, align 8, !tbaa !17
  %add211 = add nsw i32 %mul209, %65
  %arrayidx217 = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 46, i64 %47, i64 %idxprom213
  store i32 %add211, i32* %arrayidx217, align 4, !tbaa !17
  %66 = load i32* %arrayidx208, align 4, !tbaa !17
  %67 = load i32* %arrayidx210, align 8, !tbaa !17
  %mul220 = shl nsw i32 %67, 1
  %sub221 = sub nsw i32 %66, %mul220
  %arrayidx227 = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 46, i64 %47, i64 %idxprom223
  store i32 %sub221, i32* %arrayidx227, align 4, !tbaa !17
  %indvars.iv.next3538 = add nuw nsw i64 %indvars.iv3537, 1
  %68 = trunc i64 %indvars.iv3537 to i32
  %cmp143.not = icmp sgt i32 %68, 2
  br i1 %cmp143.not, label %for.inc231, label %for.body150

for.inc231:                                       ; preds = %for.body150, %for.cond60.preheader, %for.cond142.preheader
  %indvars.iv.next3541 = add nuw nsw i64 %indvars.iv3540, 4
  %69 = load i32* %mb_cr_size_x3355, align 4, !tbaa !54
  %70 = trunc i64 %indvars.iv.next3541 to i32
  %cmp57 = icmp slt i32 %70, %69
  br i1 %cmp57, label %for.cond60.preheader, label %for.cond56.for.inc234_crit_edge

for.cond56.for.inc234_crit_edge:                  ; preds = %for.inc231
  %.pre3544 = load i32* %mb_cr_size_y3359, align 4, !tbaa !53
  br label %for.inc234

for.inc234:                                       ; preds = %for.cond56.for.inc234_crit_edge, %for.cond56.preheader
  %71 = phi i32 [ %.pre3544, %for.cond56.for.inc234_crit_edge ], [ %23, %for.cond56.preheader ]
  %72 = phi i32 [ %69, %for.cond56.for.inc234_crit_edge ], [ %24, %for.cond56.preheader ]
  %indvars.iv.next3543 = add nuw nsw i64 %indvars.iv3542, 4
  %73 = trunc i64 %indvars.iv.next3543 to i32
  %cmp54 = icmp slt i32 %73, %71
  br i1 %cmp54, label %for.cond56.preheader, label %for.end236

for.end236:                                       ; preds = %for.inc234, %if.end
  %74 = phi i32 [ %22, %if.end ], [ %71, %for.inc234 ]
  switch i32 %12, label %if.end1682 [
    i32 1, label %if.then239
    i32 2, label %for.cond518.preheader
    i32 3, label %for.cond1078.preheader
  ]

for.cond1078.preheader:                           ; preds = %for.end236
  %cmp10803349 = icmp sgt i32 %74, 0
  br i1 %cmp10803349, label %for.cond1083.preheader.lr.ph, label %for.cond1105.preheader

for.cond1083.preheader.lr.ph:                     ; preds = %for.cond1078.preheader
  %mb_cr_size_x10843345 = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 161
  %.pre3575 = load i32* %mb_cr_size_x10843345, align 4, !tbaa !54
  br label %for.cond1083.preheader

for.cond518.preheader:                            ; preds = %for.end236
  %cmp5203328 = icmp sgt i32 %74, 0
  br i1 %cmp5203328, label %for.cond523.preheader.lr.ph, label %for.cond518.preheader.for.end544_crit_edge

for.cond518.preheader.for.end544_crit_edge:       ; preds = %for.cond518.preheader
  %arrayidx546.pre = getelementptr inbounds [4 x [4 x i32]]* %m3, i64 0, i64 0, i64 0
  %arrayidx548.pre = getelementptr inbounds [4 x [4 x i32]]* %m3, i64 0, i64 1, i64 0
  %arrayidx560.pre = getelementptr inbounds [4 x [4 x i32]]* %m3, i64 0, i64 0, i64 2
  %arrayidx562.pre = getelementptr inbounds [4 x [4 x i32]]* %m3, i64 0, i64 1, i64 2
  br label %for.end544

for.cond523.preheader.lr.ph:                      ; preds = %for.cond518.preheader
  %mb_cr_size_x5243324 = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 161
  %75 = load i32* %mb_cr_size_x5243324, align 4, !tbaa !54
  %cmp5253325 = icmp sgt i32 %75, 0
  br label %for.cond523.preheader

if.then239:                                       ; preds = %for.end236
  %arrayidx242 = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 46, i64 0, i64 0
  %76 = load i32* %arrayidx242, align 4, !tbaa !17
  %arrayidx245 = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 46, i64 4, i64 0
  %77 = load i32* %arrayidx245, align 4, !tbaa !17
  %add246 = add nsw i32 %77, %76
  %arrayidx249 = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 46, i64 0, i64 4
  %78 = load i32* %arrayidx249, align 4, !tbaa !17
  %add250 = add nsw i32 %add246, %78
  %arrayidx253 = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 46, i64 4, i64 4
  %79 = load i32* %arrayidx253, align 4, !tbaa !17
  %add254 = add nsw i32 %add250, %79
  %arrayidx255 = getelementptr inbounds [4 x i32]* %m1, i64 0, i64 0
  store i32 %add254, i32* %arrayidx255, align 16, !tbaa !17
  %80 = load i32* %arrayidx242, align 4, !tbaa !17
  %81 = load i32* %arrayidx245, align 4, !tbaa !17
  %sub262 = sub i32 %80, %81
  %82 = load i32* %arrayidx249, align 4, !tbaa !17
  %add266 = add nsw i32 %sub262, %82
  %83 = load i32* %arrayidx253, align 4, !tbaa !17
  %sub270 = sub i32 %add266, %83
  %arrayidx271 = getelementptr inbounds [4 x i32]* %m1, i64 0, i64 1
  store i32 %sub270, i32* %arrayidx271, align 4, !tbaa !17
  %84 = load i32* %arrayidx242, align 4, !tbaa !17
  %85 = load i32* %arrayidx245, align 4, !tbaa !17
  %add278 = add nsw i32 %85, %84
  %86 = load i32* %arrayidx249, align 4, !tbaa !17
  %sub282 = sub i32 %add278, %86
  %87 = load i32* %arrayidx253, align 4, !tbaa !17
  %sub286 = sub i32 %sub282, %87
  %arrayidx287 = getelementptr inbounds [4 x i32]* %m1, i64 0, i64 2
  store i32 %sub286, i32* %arrayidx287, align 8, !tbaa !17
  %88 = load i32* %arrayidx242, align 4, !tbaa !17
  %89 = load i32* %arrayidx245, align 4, !tbaa !17
  %sub294 = sub i32 %88, %89
  %90 = load i32* %arrayidx249, align 4, !tbaa !17
  %sub298 = sub i32 %sub294, %90
  %91 = load i32* %arrayidx253, align 4, !tbaa !17
  %add302 = add nsw i32 %sub298, %91
  %arrayidx303 = getelementptr inbounds [4 x i32]* %m1, i64 0, i64 3
  store i32 %add302, i32* %arrayidx303, align 4, !tbaa !17
  %idxprom314 = sext i32 %rem to i64
  %arrayidx319 = getelementptr inbounds [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 %idxprom17, i64 %idxprom314, i64 0, i64 0
  %idxprom321 = sext i32 %div38 to i64
  %arrayidx326 = getelementptr inbounds [2 x [13 x [4 x [4 x i32]]]]* @LevelOffset4x4Chroma_Intra, i64 0, i64 %idxprom17, i64 %idxprom321, i64 0, i64 0
  %add328 = add nsw i32 %div38, 16
  %shl364 = shl i32 %uv, 2
  %shl365 = shl i32 983040, %shl364
  %conv366 = sext i32 %shl365 to i64
  %cbp_blk = getelementptr inbounds %struct.macroblock* %2, i64 %idxprom, i32 13
  %arrayidx337 = getelementptr inbounds [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 %idxprom17, i64 %idxprom314, i64 0, i64 0
  %arrayidx344 = getelementptr inbounds [2 x [13 x [4 x [4 x i32]]]]* @LevelOffset4x4Chroma_Inter, i64 0, i64 %idxprom17, i64 %idxprom321, i64 0, i64 0
  br label %for.body307

for.body307:                                      ; preds = %if.end384.for.body307_crit_edge, %if.then239
  %92 = phi i32 [ %add254, %if.then239 ], [ %.pre3551, %if.end384.for.body307_crit_edge ]
  %indvars.iv3424 = phi i64 [ 0, %if.then239 ], [ %indvars.iv.next3425, %if.end384.for.body307_crit_edge ]
  %cr_cbp.addr.03313 = phi i32 [ %cr_cbp, %if.then239 ], [ %cr_cbp.addr.1, %if.end384.for.body307_crit_edge ]
  %DCcoded.03311 = phi i32 [ 0, %if.then239 ], [ %DCcoded.1, %if.end384.for.body307_crit_edge ]
  %run.03310 = phi i32 [ -1, %if.then239 ], [ %run.1, %if.end384.for.body307_crit_edge ]
  %scan_pos.03308 = phi i32 [ 0, %if.then239 ], [ %scan_pos.1, %if.end384.for.body307_crit_edge ]
  %inc308 = add nsw i32 %run.03310, 1
  %arrayidx313 = getelementptr inbounds [4 x i32]* %m1, i64 0, i64 %indvars.iv3424
  %ispos3218 = icmp sgt i32 %92, -1
  %neg3219 = sub i32 0, %92
  %93 = select i1 %ispos3218, i32 %92, i32 %neg3219
  br i1 %10, label %if.then311, label %if.else

if.then311:                                       ; preds = %for.body307
  %94 = load i32* %arrayidx319, align 4, !tbaa !17
  %mul320 = mul nsw i32 %94, %93
  %95 = load i32* %arrayidx326, align 4, !tbaa !17
  %shl = shl i32 %95, 1
  %add327 = add nsw i32 %shl, %mul320
  br label %if.end349

if.else:                                          ; preds = %for.body307
  %96 = load i32* %arrayidx337, align 4, !tbaa !17
  %mul338 = mul nsw i32 %96, %93
  %97 = load i32* %arrayidx344, align 4, !tbaa !17
  %shl345 = shl i32 %97, 1
  %add346 = add nsw i32 %shl345, %mul338
  br label %if.end349

if.end349:                                        ; preds = %if.else, %if.then311
  %add327.pn = phi i32 [ %add327, %if.then311 ], [ %add346, %if.else ]
  %level.0 = ashr i32 %add327.pn, %add328
  %98 = load %struct.InputParameters** @input, align 8, !tbaa !1
  %symbol_mode = getelementptr inbounds %struct.InputParameters* %98, i64 0, i32 59
  %99 = load i32* %symbol_mode, align 4, !tbaa !40
  %cmp350 = icmp eq i32 %99, 0
  br i1 %cmp350, label %land.lhs.true, label %if.end360

land.lhs.true:                                    ; preds = %if.end349
  %100 = load %struct.ImageParameters** @img, align 8, !tbaa !1
  %qp352 = getelementptr inbounds %struct.ImageParameters* %100, i64 0, i32 10
  %101 = load i32* %qp352, align 4, !tbaa !41
  %cmp353 = icmp slt i32 %101, 4
  %cmp356 = icmp sgt i32 %level.0, 2063
  %or.cond2545 = and i1 %cmp353, %cmp356
  br i1 %or.cond2545, label %if.then363, label %if.end360

if.end360:                                        ; preds = %land.lhs.true, %if.end349
  %cmp361 = icmp eq i32 %level.0, 0
  br i1 %cmp361, label %if.end384, label %if.then363

if.then363:                                       ; preds = %land.lhs.true, %if.end360
  %level.13237 = phi i32 [ %level.0, %if.end360 ], [ 2063, %land.lhs.true ]
  %102 = load i64* %cbp_blk, align 8, !tbaa !55
  %or = or i64 %102, %conv366
  store i64 %or, i64* %cbp_blk, align 8, !tbaa !55
  %cmp367 = icmp slt i32 %cr_cbp.addr.03313, 1
  %cond372 = select i1 %cmp367, i32 1, i32 %cr_cbp.addr.03313
  %call375 = call i32 @sign(i32 %level.13237, i32 %92) #1
  %idxprom376 = sext i32 %scan_pos.03308 to i64
  %arrayidx377 = getelementptr inbounds i32* %5, i64 %idxprom376
  store i32 %call375, i32* %arrayidx377, align 4, !tbaa !17
  %arrayidx379 = getelementptr inbounds i32* %6, i64 %idxprom376
  store i32 %inc308, i32* %arrayidx379, align 4, !tbaa !17
  %inc380 = add nsw i32 %scan_pos.03308, 1
  %103 = load i32* %arrayidx313, align 4, !tbaa !17
  %call383 = call i32 @sign(i32 %level.13237, i32 %103) #1
  br label %if.end384

if.end384:                                        ; preds = %if.end360, %if.then363
  %scan_pos.1 = phi i32 [ %inc380, %if.then363 ], [ %scan_pos.03308, %if.end360 ]
  %run.1 = phi i32 [ -1, %if.then363 ], [ %inc308, %if.end360 ]
  %DCcoded.1 = phi i32 [ 1, %if.then363 ], [ %DCcoded.03311, %if.end360 ]
  %ilev.0 = phi i32 [ %call383, %if.then363 ], [ 0, %if.end360 ]
  %cr_cbp.addr.1 = phi i32 [ %cond372, %if.then363 ], [ %cr_cbp.addr.03313, %if.end360 ]
  store i32 %ilev.0, i32* %arrayidx313, align 4, !tbaa !17
  %indvars.iv.next3425 = add nuw nsw i64 %indvars.iv3424, 1
  %exitcond3426 = icmp eq i64 %indvars.iv.next3425, 4
  br i1 %exitcond3426, label %for.end389, label %if.end384.for.body307_crit_edge

if.end384.for.body307_crit_edge:                  ; preds = %if.end384
  %arrayidx313.phi.trans.insert = getelementptr inbounds [4 x i32]* %m1, i64 0, i64 %indvars.iv.next3425
  %.pre3551 = load i32* %arrayidx313.phi.trans.insert, align 4, !tbaa !17
  br label %for.body307

for.end389:                                       ; preds = %if.end384
  %idxprom390 = sext i32 %scan_pos.1 to i64
  %arrayidx391 = getelementptr inbounds i32* %5, i64 %idxprom390
  store i32 0, i32* %arrayidx391, align 4, !tbaa !17
  %104 = bitcast [4 x i32]* %m1 to i64*
  %105 = load i64* %104, align 16
  %106 = trunc i64 %105 to i32
  %107 = lshr i64 %105, 32
  %108 = trunc i64 %107 to i32
  %add394 = add nsw i32 %108, %106
  %109 = bitcast i32* %arrayidx287 to i64*
  %110 = load i64* %109, align 8
  %111 = trunc i64 %110 to i32
  %add396 = add nsw i32 %add394, %111
  %112 = lshr i64 %110, 32
  %113 = trunc i64 %112 to i32
  %add398 = add nsw i32 %add396, %113
  %arrayidx399 = getelementptr inbounds [4 x i32]* %m5, i64 0, i64 0
  store i32 %add398, i32* %arrayidx399, align 16, !tbaa !17
  %sub402 = sub i32 %106, %108
  %add404 = add nsw i32 %sub402, %111
  %sub406 = sub i32 %add404, %113
  %arrayidx407 = getelementptr inbounds [4 x i32]* %m5, i64 0, i64 1
  store i32 %sub406, i32* %arrayidx407, align 4, !tbaa !17
  %sub412 = sub i32 %add394, %111
  %sub414 = sub i32 %sub412, %113
  %arrayidx415 = getelementptr inbounds [4 x i32]* %m5, i64 0, i64 2
  store i32 %sub414, i32* %arrayidx415, align 8, !tbaa !17
  %sub420 = sub i32 %sub402, %111
  %add422 = add nsw i32 %sub420, %113
  %arrayidx423 = getelementptr inbounds [4 x i32]* %m5, i64 0, i64 3
  store i32 %add422, i32* %arrayidx423, align 4, !tbaa !17
  %cmp428 = icmp slt i32 %add37, 30
  %arrayidx441 = getelementptr inbounds [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 %idxprom17, i64 %idxprom314, i64 0, i64 0
  %sub443 = sub nsw i32 5, %div38
  %arrayidx455 = getelementptr inbounds [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 %idxprom17, i64 %idxprom314, i64 0, i64 0
  %sub475 = add nsw i32 %div38, -5
  br i1 %cmp428, label %if.then430, label %if.else462

if.then430:                                       ; preds = %for.end389
  br i1 %10, label %for.inc495.thread, label %if.else447

for.inc495.thread:                                ; preds = %if.then430
  %114 = load i32* %arrayidx441, align 4, !tbaa !17
  %mul442 = mul nsw i32 %114, %add398
  %shr444 = ashr i32 %mul442, %sub443
  store i32 %shr444, i32* %arrayidx255, align 16, !tbaa !17
  br label %if.then430.1

if.else447:                                       ; preds = %if.then430
  %115 = load i32* %arrayidx455, align 4, !tbaa !17
  %mul456 = mul nsw i32 %115, %add398
  %shr458 = ashr i32 %mul456, %sub443
  br label %for.inc495

if.else462:                                       ; preds = %for.end389
  br i1 %10, label %for.inc495.thread3590, label %if.else479

for.inc495.thread3590:                            ; preds = %if.else462
  %116 = load i32* %arrayidx441, align 4, !tbaa !17
  %mul474 = mul nsw i32 %116, %add398
  %shl476 = shl i32 %mul474, %sub475
  store i32 %shl476, i32* %arrayidx255, align 16, !tbaa !17
  br label %if.else462.1

if.else479:                                       ; preds = %if.else462
  %117 = load i32* %arrayidx455, align 4, !tbaa !17
  %mul488 = mul nsw i32 %117, %add398
  %shl490 = shl i32 %mul488, %sub475
  br label %for.inc495

for.inc495:                                       ; preds = %if.else447, %if.else479
  %storemerge = phi i32 [ %shl490, %if.else479 ], [ %shr458, %if.else447 ]
  store i32 %storemerge, i32* %arrayidx255, align 16, !tbaa !17
  br i1 %cmp428, label %if.then430.1, label %if.else462.1

for.cond523.preheader:                            ; preds = %for.cond523.preheader.lr.ph, %for.inc542
  %indvars.iv3469 = phi i64 [ 0, %for.cond523.preheader.lr.ph ], [ %indvars.iv.next3470, %for.inc542 ]
  br i1 %cmp5253325, label %for.body527.lr.ph, label %for.inc542

for.body527.lr.ph:                                ; preds = %for.cond523.preheader
  %118 = trunc i64 %indvars.iv3469 to i32
  %shr533 = ashr exact i32 %118, 2
  %idxprom534 = sext i32 %shr533 to i64
  br label %for.body527

for.body527:                                      ; preds = %for.body527.lr.ph, %for.body527
  %indvars.iv3467 = phi i64 [ 0, %for.body527.lr.ph ], [ %indvars.iv.next3468, %for.body527 ]
  %arrayidx532 = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 46, i64 %indvars.iv3467, i64 %indvars.iv3469
  %119 = load i32* %arrayidx532, align 4, !tbaa !17
  %120 = trunc i64 %indvars.iv3467 to i32
  %shr535 = ashr exact i32 %120, 2
  %idxprom536 = sext i32 %shr535 to i64
  %arrayidx538 = getelementptr inbounds [4 x [4 x i32]]* %m3, i64 0, i64 %idxprom536, i64 %idxprom534
  store i32 %119, i32* %arrayidx538, align 4, !tbaa !17
  %indvars.iv.next3468 = add nuw nsw i64 %indvars.iv3467, 4
  %121 = trunc i64 %indvars.iv.next3468 to i32
  %cmp525 = icmp slt i32 %121, %75
  br i1 %cmp525, label %for.body527, label %for.inc542

for.inc542:                                       ; preds = %for.body527, %for.cond523.preheader
  %indvars.iv.next3470 = add nuw nsw i64 %indvars.iv3469, 4
  %122 = trunc i64 %indvars.iv.next3470 to i32
  %cmp520 = icmp slt i32 %122, %74
  br i1 %cmp520, label %for.cond523.preheader, label %for.cond518.for.end544_crit_edge

for.cond518.for.end544_crit_edge:                 ; preds = %for.inc542
  %arrayidx546.phi.trans.insert = getelementptr inbounds [4 x [4 x i32]]* %m3, i64 0, i64 0, i64 0
  %123 = bitcast [4 x [4 x i32]]* %m3 to i64*
  %124 = load i64* %123, align 16
  %125 = trunc i64 %124 to i32
  %arrayidx548.phi.trans.insert = getelementptr inbounds [4 x [4 x i32]]* %m3, i64 0, i64 1, i64 0
  %126 = bitcast i32* %arrayidx548.phi.trans.insert to i64*
  %127 = load i64* %126, align 16
  %128 = trunc i64 %127 to i32
  %129 = lshr i64 %124, 32
  %130 = trunc i64 %129 to i32
  %131 = lshr i64 %127, 32
  %132 = trunc i64 %131 to i32
  %arrayidx560.phi.trans.insert = getelementptr inbounds [4 x [4 x i32]]* %m3, i64 0, i64 0, i64 2
  %133 = bitcast i32* %arrayidx560.phi.trans.insert to i64*
  %134 = load i64* %133, align 8
  %135 = trunc i64 %134 to i32
  %arrayidx562.phi.trans.insert = getelementptr inbounds [4 x [4 x i32]]* %m3, i64 0, i64 1, i64 2
  %136 = bitcast i32* %arrayidx562.phi.trans.insert to i64*
  %137 = load i64* %136, align 8
  %138 = trunc i64 %137 to i32
  %139 = lshr i64 %134, 32
  %140 = trunc i64 %139 to i32
  %141 = lshr i64 %137, 32
  %142 = trunc i64 %141 to i32
  br label %for.end544

for.end544:                                       ; preds = %for.cond518.preheader.for.end544_crit_edge, %for.cond518.for.end544_crit_edge
  %arrayidx562.pre-phi = phi i32* [ %arrayidx562.pre, %for.cond518.preheader.for.end544_crit_edge ], [ %arrayidx562.phi.trans.insert, %for.cond518.for.end544_crit_edge ]
  %arrayidx560.pre-phi = phi i32* [ %arrayidx560.pre, %for.cond518.preheader.for.end544_crit_edge ], [ %arrayidx560.phi.trans.insert, %for.cond518.for.end544_crit_edge ]
  %arrayidx548.pre-phi = phi i32* [ %arrayidx548.pre, %for.cond518.preheader.for.end544_crit_edge ], [ %arrayidx548.phi.trans.insert, %for.cond518.for.end544_crit_edge ]
  %arrayidx546.pre-phi = phi i32* [ %arrayidx546.pre, %for.cond518.preheader.for.end544_crit_edge ], [ %arrayidx546.phi.trans.insert, %for.cond518.for.end544_crit_edge ]
  %143 = phi i32 [ undef, %for.cond518.preheader.for.end544_crit_edge ], [ %142, %for.cond518.for.end544_crit_edge ]
  %144 = phi i32 [ undef, %for.cond518.preheader.for.end544_crit_edge ], [ %140, %for.cond518.for.end544_crit_edge ]
  %145 = phi i32 [ undef, %for.cond518.preheader.for.end544_crit_edge ], [ %138, %for.cond518.for.end544_crit_edge ]
  %146 = phi i32 [ undef, %for.cond518.preheader.for.end544_crit_edge ], [ %135, %for.cond518.for.end544_crit_edge ]
  %147 = phi i32 [ undef, %for.cond518.preheader.for.end544_crit_edge ], [ %132, %for.cond518.for.end544_crit_edge ]
  %148 = phi i32 [ undef, %for.cond518.preheader.for.end544_crit_edge ], [ %130, %for.cond518.for.end544_crit_edge ]
  %149 = phi i32 [ undef, %for.cond518.preheader.for.end544_crit_edge ], [ %128, %for.cond518.for.end544_crit_edge ]
  %150 = phi i32 [ undef, %for.cond518.preheader.for.end544_crit_edge ], [ %125, %for.cond518.for.end544_crit_edge ]
  %add549 = add nsw i32 %149, %150
  %arrayidx551 = getelementptr inbounds [4 x [4 x i32]]* %m4, i64 0, i64 0, i64 0
  %add556 = add nsw i32 %147, %148
  %arrayidx558 = getelementptr inbounds [4 x [4 x i32]]* %m4, i64 0, i64 0, i64 1
  %add563 = add nsw i32 %145, %146
  %arrayidx565 = getelementptr inbounds [4 x [4 x i32]]* %m4, i64 0, i64 0, i64 2
  %add570 = add nsw i32 %143, %144
  %arrayidx572 = getelementptr inbounds [4 x [4 x i32]]* %m4, i64 0, i64 0, i64 3
  %sub577 = sub nsw i32 %150, %149
  %arrayidx579 = getelementptr inbounds [4 x [4 x i32]]* %m4, i64 0, i64 1, i64 0
  %sub584 = sub nsw i32 %148, %147
  %arrayidx586 = getelementptr inbounds [4 x [4 x i32]]* %m4, i64 0, i64 1, i64 1
  %sub591 = sub nsw i32 %146, %145
  %arrayidx593 = getelementptr inbounds [4 x [4 x i32]]* %m4, i64 0, i64 1, i64 2
  %sub598 = sub nsw i32 %144, %143
  %arrayidx600 = getelementptr inbounds [4 x [4 x i32]]* %m4, i64 0, i64 1, i64 3
  %arrayidx635 = getelementptr inbounds [4 x i32]* %m5, i64 0, i64 0
  %arrayidx636 = getelementptr inbounds [4 x i32]* %m5, i64 0, i64 1
  %arrayidx647 = getelementptr inbounds [4 x i32]* %m5, i64 0, i64 3
  %arrayidx648 = getelementptr inbounds [4 x i32]* %m5, i64 0, i64 2
  %add618 = add nsw i32 %add570, %add549
  %sub629 = sub nsw i32 %add549, %add570
  %add618.1 = add nsw i32 %add563, %add556
  %sub629.1 = sub nsw i32 %add556, %add563
  %add637 = add nsw i32 %add618.1, %add618
  store i32 %add637, i32* %arrayidx551, align 16, !tbaa !17
  %sub643 = sub nsw i32 %add618, %add618.1
  store i32 %sub643, i32* %arrayidx565, align 8, !tbaa !17
  %add649 = add nsw i32 %sub629.1, %sub629
  store i32 %add649, i32* %arrayidx558, align 4, !tbaa !17
  %sub655 = sub nsw i32 %sub629, %sub629.1
  store i32 %sub655, i32* %arrayidx572, align 4, !tbaa !17
  %add618.13463 = add nsw i32 %sub598, %sub577
  store i32 %add618.13463, i32* %arrayidx635, align 16, !tbaa !17
  %sub629.13465 = sub nsw i32 %sub577, %sub598
  store i32 %sub629.13465, i32* %arrayidx647, align 4, !tbaa !17
  %add618.1.1 = add nsw i32 %sub591, %sub584
  store i32 %add618.1.1, i32* %arrayidx636, align 4, !tbaa !17
  %sub629.1.1 = sub nsw i32 %sub584, %sub591
  store i32 %sub629.1.1, i32* %arrayidx648, align 8, !tbaa !17
  %add637.1 = add nsw i32 %add618.1.1, %add618.13463
  store i32 %add637.1, i32* %arrayidx579, align 16, !tbaa !17
  %sub643.1 = sub nsw i32 %add618.13463, %add618.1.1
  store i32 %sub643.1, i32* %arrayidx593, align 8, !tbaa !17
  %add649.1 = add nsw i32 %sub629.1.1, %sub629.13465
  store i32 %add649.1, i32* %arrayidx586, align 4, !tbaa !17
  %sub655.1 = sub nsw i32 %sub629.13465, %sub629.1.1
  store i32 %sub655.1, i32* %arrayidx600, align 4, !tbaa !17
  %arrayidx688 = getelementptr inbounds [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 %idxprom17, i64 %qp_rem_dc.0, i64 0, i64 0
  %idxprom690 = sext i32 %qp_per_dc.0 to i64
  %arrayidx695 = getelementptr inbounds [2 x [13 x [4 x [4 x i32]]]]* @LevelOffset4x4Chroma_Intra, i64 0, i64 %idxprom17, i64 %idxprom690, i64 0, i64 0
  %shl727 = shl i32 %uv, 3
  %shl728 = shl i32 16711680, %shl727
  %conv729 = sext i32 %shl728 to i64
  %cbp_blk730 = getelementptr inbounds %struct.macroblock* %2, i64 %idxprom, i32 13
  %arrayidx711 = getelementptr inbounds [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 %idxprom17, i64 %qp_rem_dc.0, i64 0, i64 0
  %arrayidx718 = getelementptr inbounds [2 x [13 x [4 x [4 x i32]]]]* @LevelOffset4x4Chroma_Inter, i64 0, i64 %idxprom17, i64 %idxprom690, i64 0, i64 0
  br label %for.body665

for.body665:                                      ; preds = %if.end748, %for.end544
  %indvars.iv3451 = phi i64 [ 0, %for.end544 ], [ %indvars.iv.next3452, %if.end748 ]
  %cr_cbp.addr.23321 = phi i32 [ %cr_cbp, %for.end544 ], [ %cr_cbp.addr.3, %if.end748 ]
  %DCcoded.23319 = phi i32 [ 0, %for.end544 ], [ %DCcoded.3, %if.end748 ]
  %run.23318 = phi i32 [ -1, %for.end544 ], [ %run.3, %if.end748 ]
  %scan_pos.23317 = phi i32 [ 0, %for.end544 ], [ %scan_pos.3, %if.end748 ]
  %arrayidx668 = getelementptr inbounds [8 x [2 x i8]]* @SCAN_YUV422, i64 0, i64 %indvars.iv3451, i64 0
  %151 = load i8* %arrayidx668, align 2, !tbaa !48
  %arrayidx672 = getelementptr inbounds [8 x [2 x i8]]* @SCAN_YUV422, i64 0, i64 %indvars.iv3451, i64 1
  %152 = load i8* %arrayidx672, align 1, !tbaa !48
  %inc674 = add nsw i32 %run.23318, 1
  %idxprom678 = zext i8 %152 to i64
  %idxprom679 = zext i8 %151 to i64
  %arrayidx681 = getelementptr inbounds [4 x [4 x i32]]* %m4, i64 0, i64 %idxprom679, i64 %idxprom678
  %153 = load i32* %arrayidx681, align 4, !tbaa !17
  %ispos3215 = icmp sgt i32 %153, -1
  %neg3216 = sub i32 0, %153
  %154 = select i1 %ispos3215, i32 %153, i32 %neg3216
  br i1 %10, label %if.then677, label %if.else700

if.then677:                                       ; preds = %for.body665
  %155 = load i32* %arrayidx688, align 4, !tbaa !17
  %mul689 = mul nsw i32 %155, %154
  %156 = load i32* %arrayidx695, align 4, !tbaa !17
  %mul696 = shl i32 %156, 1
  %add697 = add nsw i32 %mul696, %mul689
  br label %if.end723

if.else700:                                       ; preds = %for.body665
  %157 = load i32* %arrayidx711, align 4, !tbaa !17
  %mul712 = mul nsw i32 %157, %154
  %158 = load i32* %arrayidx718, align 4, !tbaa !17
  %mul719 = shl i32 %158, 1
  %add720 = add nsw i32 %mul719, %mul712
  br label %if.end723

if.end723:                                        ; preds = %if.else700, %if.then677
  %add697.pn = phi i32 [ %add697, %if.then677 ], [ %add720, %if.else700 ]
  %level.2 = ashr i32 %add697.pn, %q_bits_422.0
  %cmp724 = icmp eq i32 %level.2, 0
  br i1 %cmp724, label %if.end748, label %if.then726

if.then726:                                       ; preds = %if.end723
  %159 = load i64* %cbp_blk730, align 8, !tbaa !55
  %or731 = or i64 %159, %conv729
  store i64 %or731, i64* %cbp_blk730, align 8, !tbaa !55
  %cmp732 = icmp slt i32 %cr_cbp.addr.23321, 1
  %cond737 = select i1 %cmp732, i32 1, i32 %cr_cbp.addr.23321
  %call742 = call i32 @sign(i32 %level.2, i32 %153) #1
  %idxprom743 = sext i32 %scan_pos.23317 to i64
  %arrayidx744 = getelementptr inbounds i32* %5, i64 %idxprom743
  store i32 %call742, i32* %arrayidx744, align 4, !tbaa !17
  %arrayidx746 = getelementptr inbounds i32* %6, i64 %idxprom743
  store i32 %inc674, i32* %arrayidx746, align 4, !tbaa !17
  %inc747 = add nsw i32 %scan_pos.23317, 1
  %.pre3569 = load i32* %arrayidx681, align 4, !tbaa !17
  br label %if.end748

if.end748:                                        ; preds = %if.end723, %if.then726
  %160 = phi i32 [ %.pre3569, %if.then726 ], [ %153, %if.end723 ]
  %scan_pos.3 = phi i32 [ %inc747, %if.then726 ], [ %scan_pos.23317, %if.end723 ]
  %run.3 = phi i32 [ -1, %if.then726 ], [ %inc674, %if.end723 ]
  %DCcoded.3 = phi i32 [ 1, %if.then726 ], [ %DCcoded.23319, %if.end723 ]
  %cr_cbp.addr.3 = phi i32 [ %cond737, %if.then726 ], [ %cr_cbp.addr.23321, %if.end723 ]
  %call753 = call i32 @sign(i32 %level.2, i32 %160) #1
  %arrayidx757 = getelementptr inbounds [4 x [4 x i32]]* %m3, i64 0, i64 %idxprom679, i64 %idxprom678
  store i32 %call753, i32* %arrayidx757, align 4, !tbaa !17
  %indvars.iv.next3452 = add nuw nsw i64 %indvars.iv3451, 1
  %exitcond3453 = icmp eq i64 %indvars.iv.next3452, 8
  br i1 %exitcond3453, label %for.end760, label %for.body665

for.end760:                                       ; preds = %if.end748
  %idxprom761 = sext i32 %scan_pos.3 to i64
  %arrayidx762 = getelementptr inbounds i32* %5, i64 %idxprom761
  store i32 0, i32* %arrayidx762, align 4, !tbaa !17
  %161 = bitcast i32* %arrayidx546.pre-phi to i64*
  %162 = load i64* %161, align 16
  %163 = trunc i64 %162 to i32
  %164 = bitcast i32* %arrayidx548.pre-phi to i64*
  %165 = load i64* %164, align 16
  %166 = trunc i64 %165 to i32
  %add767 = add nsw i32 %166, %163
  store i32 %add767, i32* %arrayidx551, align 16, !tbaa !17
  %167 = lshr i64 %162, 32
  %168 = trunc i64 %167 to i32
  %169 = lshr i64 %165, 32
  %170 = trunc i64 %169 to i32
  %add774 = add nsw i32 %170, %168
  store i32 %add774, i32* %arrayidx558, align 4, !tbaa !17
  %171 = bitcast i32* %arrayidx560.pre-phi to i64*
  %172 = load i64* %171, align 8
  %173 = trunc i64 %172 to i32
  %174 = bitcast i32* %arrayidx562.pre-phi to i64*
  %175 = load i64* %174, align 8
  %176 = trunc i64 %175 to i32
  %add781 = add nsw i32 %176, %173
  store i32 %add781, i32* %arrayidx565, align 8, !tbaa !17
  %177 = lshr i64 %172, 32
  %178 = trunc i64 %177 to i32
  %179 = lshr i64 %175, 32
  %180 = trunc i64 %179 to i32
  %add788 = add nsw i32 %180, %178
  store i32 %add788, i32* %arrayidx572, align 4, !tbaa !17
  %sub795 = sub nsw i32 %163, %166
  store i32 %sub795, i32* %arrayidx579, align 16, !tbaa !17
  %sub802 = sub nsw i32 %168, %170
  store i32 %sub802, i32* %arrayidx586, align 4, !tbaa !17
  %sub809 = sub nsw i32 %173, %176
  store i32 %sub809, i32* %arrayidx593, align 8, !tbaa !17
  %sub816 = sub nsw i32 %178, %180
  store i32 %sub816, i32* %arrayidx600, align 4, !tbaa !17
  %arrayidx839 = getelementptr inbounds [4 x i32]* %m6, i64 0, i64 0
  %arrayidx843 = getelementptr inbounds [4 x i32]* %m6, i64 0, i64 1
  %arrayidx847 = getelementptr inbounds [4 x i32]* %m6, i64 0, i64 2
  %arrayidx851 = getelementptr inbounds [4 x i32]* %m6, i64 0, i64 3
  %cmp857 = icmp slt i32 %qp_per_dc.0, 4
  %arrayidx873 = getelementptr inbounds [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 %idxprom17, i64 %qp_rem_dc.0, i64 0, i64 0
  %sub875 = sub nsw i32 3, %qp_per_dc.0
  %shl876 = shl i32 1, %sub875
  %sub878 = sub nsw i32 4, %qp_per_dc.0
  %181 = load %struct.ImageParameters** @img, align 8, !tbaa !1
  %arrayidx926 = getelementptr inbounds [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 %idxprom17, i64 %qp_rem_dc.0, i64 0, i64 0
  %sub985 = add nsw i32 %qp_per_dc.0, -4
  br label %for.cond823.preheader

for.cond823.preheader:                            ; preds = %for.inc1071, %for.end760
  %indvars.iv3444 = phi i64 [ 0, %for.end760 ], [ %indvars.iv.next3445, %for.inc1071 ]
  %scevgep = getelementptr [4 x [4 x i32]]* %m4, i64 0, i64 %indvars.iv3444, i64 0
  %scevgep3431 = bitcast i32* %scevgep to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %m53430, i8* %scevgep3431, i64 16, i32 16, i1 false)
  %182 = bitcast [4 x i32]* %m5 to i64*
  %183 = load i64* %182, align 16
  %184 = trunc i64 %183 to i32
  %185 = bitcast i32* %arrayidx648 to i64*
  %186 = load i64* %185, align 8
  %187 = trunc i64 %186 to i32
  %add838 = add nsw i32 %187, %184
  store i32 %add838, i32* %arrayidx839, align 16, !tbaa !17
  %sub842 = sub nsw i32 %184, %187
  store i32 %sub842, i32* %arrayidx843, align 4, !tbaa !17
  %188 = lshr i64 %183, 32
  %189 = trunc i64 %188 to i32
  %190 = lshr i64 %186, 32
  %191 = trunc i64 %190 to i32
  %sub846 = sub nsw i32 %189, %191
  store i32 %sub846, i32* %arrayidx847, align 8, !tbaa !17
  %add850 = add nsw i32 %191, %189
  store i32 %add850, i32* %arrayidx851, align 4, !tbaa !17
  %192 = shl nsw i64 %indvars.iv3444, 2
  br label %for.body855

for.body855:                                      ; preds = %for.inc1068.for.body855_crit_edge, %for.cond823.preheader
  %193 = phi i32 [ %add838, %for.cond823.preheader ], [ %.pre3574, %for.inc1068.for.body855_crit_edge ]
  %indvars.iv3432 = phi i64 [ 0, %for.cond823.preheader ], [ %indvars.iv.next3433, %for.inc1068.for.body855_crit_edge ]
  %194 = sub nsw i64 3, %indvars.iv3432
  %arrayidx864 = getelementptr inbounds [4 x i32]* %m6, i64 0, i64 %indvars.iv3432
  %arrayidx866 = getelementptr inbounds [4 x i32]* %m6, i64 0, i64 %194
  %195 = load i32* %arrayidx866, align 4, !tbaa !17
  %add867 = add nsw i32 %195, %193
  br i1 %cmp857, label %if.then859, label %if.else969

if.then859:                                       ; preds = %for.body855
  br i1 %10, label %if.then862, label %if.else915

if.then862:                                       ; preds = %if.then859
  %196 = load i32* %arrayidx873, align 4, !tbaa !17
  %mul874 = mul nsw i32 %196, %add867
  %add877 = add nsw i32 %mul874, %shl876
  %shr879 = ashr i32 %add877, %sub878
  %add880 = add nsw i32 %shr879, 2
  %shr881 = ashr i32 %add880, 2
  %197 = shl nsw i64 %indvars.iv3432, 2
  %arrayidx888 = getelementptr inbounds %struct.ImageParameters* %181, i64 0, i32 46, i64 %192, i64 %197
  store i32 %shr881, i32* %arrayidx888, align 4, !tbaa !17
  %198 = load i32* %arrayidx864, align 4, !tbaa !17
  %199 = load i32* %arrayidx866, align 4, !tbaa !17
  %sub893 = sub nsw i32 %198, %199
  %200 = load i32* %arrayidx873, align 4, !tbaa !17
  %mul900 = mul nsw i32 %sub893, %200
  %add903 = add nsw i32 %mul900, %shl876
  %shr905 = ashr i32 %add903, %sub878
  %add906 = add nsw i32 %shr905, 2
  %shr907 = ashr i32 %add906, 2
  %201 = shl nsw i64 %194, 2
  %arrayidx914 = getelementptr inbounds %struct.ImageParameters* %181, i64 0, i32 46, i64 %192, i64 %201
  store i32 %shr907, i32* %arrayidx914, align 4, !tbaa !17
  br label %for.inc1068

if.else915:                                       ; preds = %if.then859
  %202 = load i32* %arrayidx926, align 4, !tbaa !17
  %mul927 = mul nsw i32 %202, %add867
  %add930 = add nsw i32 %mul927, %shl876
  %shr932 = ashr i32 %add930, %sub878
  %add933 = add nsw i32 %shr932, 2
  %shr934 = ashr i32 %add933, 2
  %203 = shl nsw i64 %indvars.iv3432, 2
  %arrayidx941 = getelementptr inbounds %struct.ImageParameters* %181, i64 0, i32 46, i64 %192, i64 %203
  store i32 %shr934, i32* %arrayidx941, align 4, !tbaa !17
  %204 = load i32* %arrayidx864, align 4, !tbaa !17
  %205 = load i32* %arrayidx866, align 4, !tbaa !17
  %sub946 = sub nsw i32 %204, %205
  %206 = load i32* %arrayidx926, align 4, !tbaa !17
  %mul953 = mul nsw i32 %sub946, %206
  %add956 = add nsw i32 %mul953, %shl876
  %shr958 = ashr i32 %add956, %sub878
  %add959 = add nsw i32 %shr958, 2
  %shr960 = ashr i32 %add959, 2
  %207 = shl nsw i64 %194, 2
  %arrayidx967 = getelementptr inbounds %struct.ImageParameters* %181, i64 0, i32 46, i64 %192, i64 %207
  store i32 %shr960, i32* %arrayidx967, align 4, !tbaa !17
  br label %for.inc1068

if.else969:                                       ; preds = %for.body855
  br i1 %10, label %if.then972, label %if.else1019

if.then972:                                       ; preds = %if.else969
  %208 = load i32* %arrayidx873, align 4, !tbaa !17
  %mul984 = mul nsw i32 %208, %add867
  %shl986 = shl i32 %mul984, %sub985
  %add987 = add nsw i32 %shl986, 2
  %shr988 = ashr i32 %add987, 2
  %209 = shl nsw i64 %indvars.iv3432, 2
  %arrayidx995 = getelementptr inbounds %struct.ImageParameters* %181, i64 0, i32 46, i64 %192, i64 %209
  store i32 %shr988, i32* %arrayidx995, align 4, !tbaa !17
  %210 = load i32* %arrayidx864, align 4, !tbaa !17
  %211 = load i32* %arrayidx866, align 4, !tbaa !17
  %sub1000 = sub nsw i32 %210, %211
  %212 = load i32* %arrayidx873, align 4, !tbaa !17
  %mul1007 = mul nsw i32 %sub1000, %212
  %shl1009 = shl i32 %mul1007, %sub985
  %add1010 = add nsw i32 %shl1009, 2
  %shr1011 = ashr i32 %add1010, 2
  %213 = shl nsw i64 %194, 2
  %arrayidx1018 = getelementptr inbounds %struct.ImageParameters* %181, i64 0, i32 46, i64 %192, i64 %213
  store i32 %shr1011, i32* %arrayidx1018, align 4, !tbaa !17
  br label %for.inc1068

if.else1019:                                      ; preds = %if.else969
  %214 = load i32* %arrayidx926, align 4, !tbaa !17
  %mul1031 = mul nsw i32 %214, %add867
  %shl1033 = shl i32 %mul1031, %sub985
  %add1034 = add nsw i32 %shl1033, 2
  %shr1035 = ashr i32 %add1034, 2
  %215 = shl nsw i64 %indvars.iv3432, 2
  %arrayidx1042 = getelementptr inbounds %struct.ImageParameters* %181, i64 0, i32 46, i64 %192, i64 %215
  store i32 %shr1035, i32* %arrayidx1042, align 4, !tbaa !17
  %216 = load i32* %arrayidx864, align 4, !tbaa !17
  %217 = load i32* %arrayidx866, align 4, !tbaa !17
  %sub1047 = sub nsw i32 %216, %217
  %218 = load i32* %arrayidx926, align 4, !tbaa !17
  %mul1054 = mul nsw i32 %sub1047, %218
  %shl1056 = shl i32 %mul1054, %sub985
  %add1057 = add nsw i32 %shl1056, 2
  %shr1058 = ashr i32 %add1057, 2
  %219 = shl nsw i64 %194, 2
  %arrayidx1065 = getelementptr inbounds %struct.ImageParameters* %181, i64 0, i32 46, i64 %192, i64 %219
  store i32 %shr1058, i32* %arrayidx1065, align 4, !tbaa !17
  br label %for.inc1068

for.inc1068:                                      ; preds = %if.else915, %if.then862, %if.else1019, %if.then972
  %indvars.iv.next3433 = add nuw nsw i64 %indvars.iv3432, 1
  %exitcond3443 = icmp eq i64 %indvars.iv.next3433, 2
  br i1 %exitcond3443, label %for.inc1071, label %for.inc1068.for.body855_crit_edge

for.inc1068.for.body855_crit_edge:                ; preds = %for.inc1068
  %arrayidx864.phi.trans.insert = getelementptr inbounds [4 x i32]* %m6, i64 0, i64 %indvars.iv.next3433
  %.pre3574 = load i32* %arrayidx864.phi.trans.insert, align 4, !tbaa !17
  br label %for.body855

for.inc1071:                                      ; preds = %for.inc1068
  %indvars.iv.next3445 = add nuw nsw i64 %indvars.iv3444, 1
  %exitcond3450 = icmp eq i64 %indvars.iv.next3445, 2
  br i1 %exitcond3450, label %if.end1682, label %for.cond823.preheader

for.cond1083.preheader:                           ; preds = %for.cond1083.preheader.lr.ph, %for.inc1102
  %220 = phi i32 [ %74, %for.cond1083.preheader.lr.ph ], [ %227, %for.inc1102 ]
  %221 = phi i32 [ %.pre3575, %for.cond1083.preheader.lr.ph ], [ %228, %for.inc1102 ]
  %indvars.iv3520 = phi i64 [ 0, %for.cond1083.preheader.lr.ph ], [ %indvars.iv.next3521, %for.inc1102 ]
  %cmp10853346 = icmp sgt i32 %221, 0
  br i1 %cmp10853346, label %for.body1087.lr.ph, label %for.inc1102

for.body1087.lr.ph:                               ; preds = %for.cond1083.preheader
  %222 = trunc i64 %indvars.iv3520 to i32
  %shr1093 = ashr exact i32 %222, 2
  %idxprom1094 = sext i32 %shr1093 to i64
  br label %for.body1087

for.cond1105.preheader:                           ; preds = %for.inc1102, %for.cond1078.preheader
  br i1 %18, label %for.cond1241.preheader, label %for.cond1114.preheader.lr.ph

for.cond1114.preheader.lr.ph:                     ; preds = %for.cond1105.preheader
  %arrayidx1144 = getelementptr inbounds [4 x i32]* %m5, i64 0, i64 0
  %arrayidx1145 = getelementptr inbounds [4 x i32]* %m5, i64 0, i64 1
  %arrayidx1156 = getelementptr inbounds [4 x i32]* %m5, i64 0, i64 3
  %arrayidx1157 = getelementptr inbounds [4 x i32]* %m5, i64 0, i64 2
  br label %for.cond1114.preheader

for.body1087:                                     ; preds = %for.body1087.lr.ph, %for.body1087
  %indvars.iv3518 = phi i64 [ 0, %for.body1087.lr.ph ], [ %indvars.iv.next3519, %for.body1087 ]
  %arrayidx1092 = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 46, i64 %indvars.iv3518, i64 %indvars.iv3520
  %223 = load i32* %arrayidx1092, align 4, !tbaa !17
  %224 = trunc i64 %indvars.iv3518 to i32
  %shr1095 = ashr exact i32 %224, 2
  %idxprom1096 = sext i32 %shr1095 to i64
  %arrayidx1098 = getelementptr inbounds [4 x [4 x i32]]* %m4, i64 0, i64 %idxprom1096, i64 %idxprom1094
  store i32 %223, i32* %arrayidx1098, align 4, !tbaa !17
  %indvars.iv.next3519 = add nuw nsw i64 %indvars.iv3518, 4
  %225 = load i32* %mb_cr_size_x10843345, align 4, !tbaa !54
  %226 = trunc i64 %indvars.iv.next3519 to i32
  %cmp1085 = icmp slt i32 %226, %225
  br i1 %cmp1085, label %for.body1087, label %for.cond1083.for.inc1102_crit_edge

for.cond1083.for.inc1102_crit_edge:               ; preds = %for.body1087
  %.pre3576 = load i32* %mb_cr_size_y3359, align 4, !tbaa !53
  br label %for.inc1102

for.inc1102:                                      ; preds = %for.cond1083.for.inc1102_crit_edge, %for.cond1083.preheader
  %227 = phi i32 [ %.pre3576, %for.cond1083.for.inc1102_crit_edge ], [ %220, %for.cond1083.preheader ]
  %228 = phi i32 [ %225, %for.cond1083.for.inc1102_crit_edge ], [ %221, %for.cond1083.preheader ]
  %indvars.iv.next3521 = add nuw nsw i64 %indvars.iv3520, 4
  %229 = trunc i64 %indvars.iv.next3521 to i32
  %cmp1080 = icmp slt i32 %229, %227
  br i1 %cmp1080, label %for.cond1083.preheader, label %for.cond1105.preheader

for.cond1114.preheader:                           ; preds = %for.cond1114.preheader.lr.ph, %for.cond1114.preheader
  %indvars.iv3516 = phi i64 [ 0, %for.cond1114.preheader.lr.ph ], [ %indvars.iv.next3517, %for.cond1114.preheader ]
  %arrayidx1122 = getelementptr inbounds [4 x [4 x i32]]* %m4, i64 0, i64 0, i64 %indvars.iv3516
  %230 = load i32* %arrayidx1122, align 4, !tbaa !17
  %arrayidx1126 = getelementptr inbounds [4 x [4 x i32]]* %m4, i64 0, i64 3, i64 %indvars.iv3516
  %231 = load i32* %arrayidx1126, align 4, !tbaa !17
  %add1127 = add nsw i32 %231, %230
  store i32 %add1127, i32* %arrayidx1144, align 16, !tbaa !17
  %sub1138 = sub nsw i32 %230, %231
  store i32 %sub1138, i32* %arrayidx1156, align 4, !tbaa !17
  %arrayidx1122.1 = getelementptr inbounds [4 x [4 x i32]]* %m4, i64 0, i64 1, i64 %indvars.iv3516
  %232 = load i32* %arrayidx1122.1, align 4, !tbaa !17
  %arrayidx1126.1 = getelementptr inbounds [4 x [4 x i32]]* %m4, i64 0, i64 2, i64 %indvars.iv3516
  %233 = load i32* %arrayidx1126.1, align 4, !tbaa !17
  %add1127.1 = add nsw i32 %233, %232
  store i32 %add1127.1, i32* %arrayidx1145, align 4, !tbaa !17
  %sub1138.1 = sub nsw i32 %232, %233
  store i32 %sub1138.1, i32* %arrayidx1157, align 8, !tbaa !17
  %add1146 = add nsw i32 %add1127.1, %add1127
  store i32 %add1146, i32* %arrayidx1122, align 4, !tbaa !17
  %sub1152 = sub nsw i32 %add1127, %add1127.1
  store i32 %sub1152, i32* %arrayidx1126.1, align 4, !tbaa !17
  %add1158 = add nsw i32 %sub1138.1, %sub1138
  store i32 %add1158, i32* %arrayidx1122.1, align 4, !tbaa !17
  %sub1164 = sub nsw i32 %sub1138, %sub1138.1
  store i32 %sub1164, i32* %arrayidx1126, align 4, !tbaa !17
  %indvars.iv.next3517 = add nuw nsw i64 %indvars.iv3516, 1
  %234 = trunc i64 %indvars.iv3516 to i32
  %cmp1106.not = icmp sgt i32 %234, 2
  br i1 %cmp1106.not, label %for.cond1171.preheader, label %for.cond1114.preheader

for.cond1171.preheader:                           ; preds = %for.cond1114.preheader
  br i1 %18, label %for.cond1241.preheader, label %for.cond1180.preheader.lr.ph

for.cond1180.preheader.lr.ph:                     ; preds = %for.cond1171.preheader
  %arrayidx1210 = getelementptr inbounds [4 x i32]* %m5, i64 0, i64 0
  %arrayidx1211 = getelementptr inbounds [4 x i32]* %m5, i64 0, i64 1
  %arrayidx1224 = getelementptr inbounds [4 x i32]* %m5, i64 0, i64 3
  %arrayidx1225 = getelementptr inbounds [4 x i32]* %m5, i64 0, i64 2
  br label %for.cond1180.preheader

for.cond1180.preheader:                           ; preds = %for.cond1180.preheader.lr.ph, %for.cond1180.preheader
  %indvars.iv3510 = phi i64 [ 0, %for.cond1180.preheader.lr.ph ], [ %indvars.iv.next3511, %for.cond1180.preheader ]
  %arrayidx1188 = getelementptr inbounds [4 x [4 x i32]]* %m4, i64 0, i64 %indvars.iv3510, i64 0
  %235 = load i32* %arrayidx1188, align 16, !tbaa !17
  %arrayidx1192 = getelementptr inbounds [4 x [4 x i32]]* %m4, i64 0, i64 %indvars.iv3510, i64 3
  %236 = load i32* %arrayidx1192, align 4, !tbaa !17
  %add1193 = add nsw i32 %236, %235
  store i32 %add1193, i32* %arrayidx1210, align 16, !tbaa !17
  %sub1204 = sub nsw i32 %235, %236
  store i32 %sub1204, i32* %arrayidx1224, align 4, !tbaa !17
  %arrayidx1188.1 = getelementptr inbounds [4 x [4 x i32]]* %m4, i64 0, i64 %indvars.iv3510, i64 1
  %237 = load i32* %arrayidx1188.1, align 4, !tbaa !17
  %arrayidx1192.1 = getelementptr inbounds [4 x [4 x i32]]* %m4, i64 0, i64 %indvars.iv3510, i64 2
  %238 = load i32* %arrayidx1192.1, align 8, !tbaa !17
  %add1193.1 = add nsw i32 %238, %237
  store i32 %add1193.1, i32* %arrayidx1211, align 4, !tbaa !17
  %sub1204.1 = sub nsw i32 %237, %238
  store i32 %sub1204.1, i32* %arrayidx1225, align 8, !tbaa !17
  %add1212 = add nsw i32 %add1193.1, %add1193
  %sub1219 = sub nsw i32 %add1193, %add1193.1
  %add1226 = add nsw i32 %sub1204.1, %sub1204
  %sub1233 = sub nsw i32 %sub1204, %sub1204.1
  %239 = insertelement <4 x i32> undef, i32 %add1212, i32 0
  %240 = insertelement <4 x i32> %239, i32 %add1226, i32 1
  %241 = insertelement <4 x i32> %240, i32 %sub1219, i32 2
  %242 = insertelement <4 x i32> %241, i32 %sub1233, i32 3
  %243 = ashr <4 x i32> %242, <i32 1, i32 1, i32 1, i32 1>
  %244 = bitcast i32* %arrayidx1188 to <4 x i32>*
  store <4 x i32> %243, <4 x i32>* %244, align 16, !tbaa !17
  %indvars.iv.next3511 = add nuw nsw i64 %indvars.iv3510, 1
  %245 = trunc i64 %indvars.iv3510 to i32
  %cmp1172.not = icmp sgt i32 %245, 2
  br i1 %cmp1172.not, label %for.cond1241.preheader, label %for.cond1180.preheader

for.cond1241.preheader:                           ; preds = %for.cond1180.preheader, %for.cond1105.preheader, %for.cond1171.preheader
  %shl1315 = shl i32 %uv, 4
  %sh_prom = zext i32 %shl1315 to i64
  %shl1316 = shl i64 4294901760, %sh_prom
  %cbp_blk1317 = getelementptr inbounds %struct.macroblock* %2, i64 %idxprom, i32 13
  %idxprom1270 = sext i32 %rem to i64
  %arrayidx1275 = getelementptr inbounds [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 %idxprom17, i64 %idxprom1270, i64 0, i64 0
  %idxprom1277 = sext i32 %div38 to i64
  %arrayidx1282 = getelementptr inbounds [2 x [13 x [4 x [4 x i32]]]]* @LevelOffset4x4Chroma_Intra, i64 0, i64 %idxprom17, i64 %idxprom1277, i64 0, i64 0
  %add1285 = add nsw i32 %div38, 16
  %arrayidx1298 = getelementptr inbounds [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 %idxprom17, i64 %idxprom1270, i64 0, i64 0
  %arrayidx1305 = getelementptr inbounds [2 x [13 x [4 x [4 x i32]]]]* @LevelOffset4x4Chroma_Inter, i64 0, i64 %idxprom17, i64 %idxprom1277, i64 0, i64 0
  br label %for.body1244

for.body1244:                                     ; preds = %for.inc1348, %for.cond1241.preheader
  %indvars.iv3503 = phi i64 [ 0, %for.cond1241.preheader ], [ %indvars.iv.next3504, %for.inc1348 ]
  %cr_cbp.addr.43340 = phi i32 [ %cr_cbp, %for.cond1241.preheader ], [ %cr_cbp.addr.5, %for.inc1348 ]
  %DCcoded.43338 = phi i32 [ 0, %for.cond1241.preheader ], [ %DCcoded.5, %for.inc1348 ]
  %run.43337 = phi i32 [ -1, %for.cond1241.preheader ], [ %run.5, %for.inc1348 ]
  %scan_pos.43336 = phi i32 [ 0, %for.cond1241.preheader ], [ %scan_pos.5, %for.inc1348 ]
  %arrayidx1247 = getelementptr inbounds [16 x [2 x i8]]* @SNGL_SCAN, i64 0, i64 %indvars.iv3503, i64 0
  %246 = load i8* %arrayidx1247, align 2, !tbaa !48
  %arrayidx1251 = getelementptr inbounds [16 x [2 x i8]]* @SNGL_SCAN, i64 0, i64 %indvars.iv3503, i64 1
  %247 = load i8* %arrayidx1251, align 1, !tbaa !48
  %inc1253 = add nsw i32 %run.43337, 1
  %idxprom1256 = zext i8 %247 to i64
  %idxprom1257 = zext i8 %246 to i64
  %arrayidx1259 = getelementptr inbounds [4 x [4 x i32]]* %m4, i64 0, i64 %idxprom1257, i64 %idxprom1256
  %248 = load i32* %arrayidx1259, align 4, !tbaa !17
  %ispos3213 = icmp sgt i32 %248, -1
  %neg3214 = sub i32 0, %248
  %249 = select i1 %ispos3213, i32 %248, i32 %neg3214
  br i1 %18, label %if.end1311, label %if.else1261

if.else1261:                                      ; preds = %for.body1244
  br i1 %10, label %if.then1264, label %if.else1287

if.then1264:                                      ; preds = %if.else1261
  %250 = load i32* %arrayidx1275, align 4, !tbaa !17
  %mul1276 = mul nsw i32 %250, %249
  %251 = load i32* %arrayidx1282, align 4, !tbaa !17
  %mul1283 = shl i32 %251, 1
  %add1284 = add nsw i32 %mul1283, %mul1276
  %shr1286 = ashr i32 %add1284, %add1285
  br label %if.end1311

if.else1287:                                      ; preds = %if.else1261
  %252 = load i32* %arrayidx1298, align 4, !tbaa !17
  %mul1299 = mul nsw i32 %252, %249
  %253 = load i32* %arrayidx1305, align 4, !tbaa !17
  %mul1306 = shl i32 %253, 1
  %add1307 = add nsw i32 %mul1306, %mul1299
  %shr1309 = ashr i32 %add1307, %add1285
  br label %if.end1311

if.end1311:                                       ; preds = %for.body1244, %if.then1264, %if.else1287
  %level.3 = phi i32 [ %shr1286, %if.then1264 ], [ %shr1309, %if.else1287 ], [ %249, %for.body1244 ]
  %cmp1312 = icmp eq i32 %level.3, 0
  br i1 %cmp1312, label %if.end1335, label %if.then1314

if.then1314:                                      ; preds = %if.end1311
  %254 = load i64* %cbp_blk1317, align 8, !tbaa !55
  %or1318 = or i64 %254, %shl1316
  store i64 %or1318, i64* %cbp_blk1317, align 8, !tbaa !55
  %cmp1319 = icmp slt i32 %cr_cbp.addr.43340, 1
  %cond1324 = select i1 %cmp1319, i32 1, i32 %cr_cbp.addr.43340
  %call1329 = call i32 @sign(i32 %level.3, i32 %248) #1
  %idxprom1330 = sext i32 %scan_pos.43336 to i64
  %arrayidx1331 = getelementptr inbounds i32* %5, i64 %idxprom1330
  store i32 %call1329, i32* %arrayidx1331, align 4, !tbaa !17
  %arrayidx1333 = getelementptr inbounds i32* %6, i64 %idxprom1330
  store i32 %inc1253, i32* %arrayidx1333, align 4, !tbaa !17
  %inc1334 = add nsw i32 %scan_pos.43336, 1
  br label %if.end1335

if.end1335:                                       ; preds = %if.end1311, %if.then1314
  %scan_pos.5 = phi i32 [ %inc1334, %if.then1314 ], [ %scan_pos.43336, %if.end1311 ]
  %run.5 = phi i32 [ -1, %if.then1314 ], [ %inc1253, %if.end1311 ]
  %DCcoded.5 = phi i32 [ 1, %if.then1314 ], [ %DCcoded.43338, %if.end1311 ]
  %cr_cbp.addr.5 = phi i32 [ %cond1324, %if.then1314 ], [ %cr_cbp.addr.43340, %if.end1311 ]
  br i1 %18, label %for.inc1348, label %if.then1337

if.then1337:                                      ; preds = %if.end1335
  %255 = load i32* %arrayidx1259, align 4, !tbaa !17
  %call1342 = call i32 @sign(i32 %level.3, i32 %255) #1
  store i32 %call1342, i32* %arrayidx1259, align 4, !tbaa !17
  br label %for.inc1348

for.inc1348:                                      ; preds = %if.end1335, %if.then1337
  %indvars.iv.next3504 = add nuw nsw i64 %indvars.iv3503, 1
  %exitcond3505 = icmp eq i64 %indvars.iv.next3504, 16
  br i1 %exitcond3505, label %for.end1350, label %for.body1244

for.end1350:                                      ; preds = %for.inc1348
  %idxprom1351 = sext i32 %scan_pos.5 to i64
  %arrayidx1352 = getelementptr inbounds i32* %5, i64 %idxprom1351
  store i32 0, i32* %arrayidx1352, align 4, !tbaa !17
  br i1 %18, label %for.cond1420.preheader.if.end1682.loopexit3260_crit_edge, label %for.cond1362.preheader.lr.ph

for.cond1362.preheader.lr.ph:                     ; preds = %for.end1350
  %arrayidx1375 = getelementptr inbounds [4 x i32]* %m5, i64 0, i64 0
  %arrayidx1376 = getelementptr inbounds [4 x i32]* %m5, i64 0, i64 2
  %arrayidx1378 = getelementptr inbounds [4 x i32]* %m6, i64 0, i64 0
  %arrayidx1382 = getelementptr inbounds [4 x i32]* %m6, i64 0, i64 1
  %arrayidx1383 = getelementptr inbounds [4 x i32]* %m5, i64 0, i64 1
  %arrayidx1384 = getelementptr inbounds [4 x i32]* %m5, i64 0, i64 3
  %arrayidx1386 = getelementptr inbounds [4 x i32]* %m6, i64 0, i64 2
  %arrayidx1390 = getelementptr inbounds [4 x i32]* %m6, i64 0, i64 3
  br label %for.cond1362.preheader

for.cond1362.preheader:                           ; preds = %for.cond1362.preheader.lr.ph, %for.cond1362.preheader
  %indvars.iv3501 = phi i64 [ 0, %for.cond1362.preheader.lr.ph ], [ %indvars.iv.next3502, %for.cond1362.preheader ]
  %arrayidx1369 = getelementptr inbounds [4 x [4 x i32]]* %m4, i64 0, i64 0, i64 %indvars.iv3501
  %256 = load i32* %arrayidx1369, align 4, !tbaa !17
  store i32 %256, i32* %arrayidx1375, align 16, !tbaa !17
  %arrayidx1369.1 = getelementptr inbounds [4 x [4 x i32]]* %m4, i64 0, i64 1, i64 %indvars.iv3501
  %257 = load i32* %arrayidx1369.1, align 4, !tbaa !17
  store i32 %257, i32* %arrayidx1383, align 4, !tbaa !17
  %arrayidx1369.2 = getelementptr inbounds [4 x [4 x i32]]* %m4, i64 0, i64 2, i64 %indvars.iv3501
  %258 = load i32* %arrayidx1369.2, align 4, !tbaa !17
  store i32 %258, i32* %arrayidx1376, align 8, !tbaa !17
  %arrayidx1369.3 = getelementptr inbounds [4 x [4 x i32]]* %m4, i64 0, i64 3, i64 %indvars.iv3501
  %259 = load i32* %arrayidx1369.3, align 4, !tbaa !17
  store i32 %259, i32* %arrayidx1384, align 4, !tbaa !17
  %add1377 = add nsw i32 %258, %256
  store i32 %add1377, i32* %arrayidx1378, align 16, !tbaa !17
  %sub1381 = sub nsw i32 %256, %258
  store i32 %sub1381, i32* %arrayidx1382, align 4, !tbaa !17
  %sub1385 = sub nsw i32 %257, %259
  store i32 %sub1385, i32* %arrayidx1386, align 8, !tbaa !17
  %add1389 = add nsw i32 %259, %257
  store i32 %add1389, i32* %arrayidx1390, align 4, !tbaa !17
  %add1400 = add nsw i32 %add1389, %add1377
  store i32 %add1400, i32* %arrayidx1369, align 4, !tbaa !17
  %sub1409 = sub nsw i32 %add1377, %add1389
  store i32 %sub1409, i32* %arrayidx1369.3, align 4, !tbaa !17
  %add1400.1 = add nsw i32 %sub1385, %sub1381
  store i32 %add1400.1, i32* %arrayidx1369.1, align 4, !tbaa !17
  %sub1409.1 = sub nsw i32 %sub1381, %sub1385
  store i32 %sub1409.1, i32* %arrayidx1369.2, align 4, !tbaa !17
  %indvars.iv.next3502 = add nuw nsw i64 %indvars.iv3501, 1
  %260 = trunc i64 %indvars.iv3501 to i32
  %cmp1354.not = icmp sgt i32 %260, 2
  br i1 %cmp1354.not, label %for.cond1420.preheader, label %for.cond1362.preheader

for.cond1420.preheader:                           ; preds = %for.cond1362.preheader
  br i1 %18, label %for.cond1420.preheader.if.end1682.loopexit3260_crit_edge, label %for.cond1429.preheader.lr.ph

for.cond1420.preheader.if.end1682.loopexit3260_crit_edge: ; preds = %for.end1350, %for.cond1420.preheader
  %.pre3545.pre = load %struct.ImageParameters** @img, align 8, !tbaa !1
  br label %if.end1682

for.cond1429.preheader.lr.ph:                     ; preds = %for.cond1420.preheader
  %arrayidx1443 = getelementptr inbounds [4 x i32]* %m5, i64 0, i64 2
  %arrayidx1445 = getelementptr inbounds [4 x i32]* %m6, i64 0, i64 0
  %arrayidx1449 = getelementptr inbounds [4 x i32]* %m6, i64 0, i64 1
  %arrayidx1453 = getelementptr inbounds [4 x i32]* %m6, i64 0, i64 2
  %arrayidx1457 = getelementptr inbounds [4 x i32]* %m6, i64 0, i64 3
  %cmp1463 = icmp slt i32 %add37, 24
  %arrayidx1479 = getelementptr inbounds [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 %idxprom17, i64 %idxprom1270, i64 0, i64 0
  %sub1481 = sub nsw i32 3, %div38
  %shl1482 = shl i32 1, %sub1481
  %sub1484 = sub nsw i32 4, %div38
  %261 = load %struct.ImageParameters** @img, align 8, !tbaa !1
  %arrayidx1532 = getelementptr inbounds [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 %idxprom17, i64 %idxprom1270, i64 0, i64 0
  %sub1591 = add nsw i32 %div38, -4
  br label %for.cond1429.preheader

for.cond1429.preheader:                           ; preds = %for.cond1429.preheader.lr.ph, %for.inc1677
  %indvars.iv3488 = phi i64 [ 0, %for.cond1429.preheader.lr.ph ], [ %indvars.iv.next3489, %for.inc1677 ]
  %scevgep3474 = getelementptr [4 x [4 x i32]]* %m4, i64 0, i64 %indvars.iv3488, i64 0
  %scevgep34743475 = bitcast i32* %scevgep3474 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %m53430, i8* %scevgep34743475, i64 16, i32 16, i1 false)
  %262 = bitcast [4 x i32]* %m5 to i64*
  %263 = load i64* %262, align 16
  %264 = trunc i64 %263 to i32
  %265 = bitcast i32* %arrayidx1443 to i64*
  %266 = load i64* %265, align 8
  %267 = trunc i64 %266 to i32
  %add1444 = add nsw i32 %267, %264
  store i32 %add1444, i32* %arrayidx1445, align 16, !tbaa !17
  %sub1448 = sub nsw i32 %264, %267
  store i32 %sub1448, i32* %arrayidx1449, align 4, !tbaa !17
  %268 = lshr i64 %263, 32
  %269 = trunc i64 %268 to i32
  %270 = lshr i64 %266, 32
  %271 = trunc i64 %270 to i32
  %sub1452 = sub nsw i32 %269, %271
  store i32 %sub1452, i32* %arrayidx1453, align 8, !tbaa !17
  %add1456 = add nsw i32 %271, %269
  store i32 %add1456, i32* %arrayidx1457, align 4, !tbaa !17
  %272 = shl nsw i64 %indvars.iv3488, 2
  br label %for.body1461

for.body1461:                                     ; preds = %for.inc1674.for.body1461_crit_edge, %for.cond1429.preheader
  %273 = phi i32 [ %add1444, %for.cond1429.preheader ], [ %.pre3578, %for.inc1674.for.body1461_crit_edge ]
  %indvars.iv3476 = phi i64 [ 0, %for.cond1429.preheader ], [ %indvars.iv.next3477, %for.inc1674.for.body1461_crit_edge ]
  %274 = sub nsw i64 3, %indvars.iv3476
  %arrayidx1470 = getelementptr inbounds [4 x i32]* %m6, i64 0, i64 %indvars.iv3476
  %arrayidx1472 = getelementptr inbounds [4 x i32]* %m6, i64 0, i64 %274
  %275 = load i32* %arrayidx1472, align 4, !tbaa !17
  %add1473 = add nsw i32 %275, %273
  br i1 %cmp1463, label %if.then1465, label %if.else1575

if.then1465:                                      ; preds = %for.body1461
  br i1 %10, label %if.then1468, label %if.else1521

if.then1468:                                      ; preds = %if.then1465
  %276 = load i32* %arrayidx1479, align 4, !tbaa !17
  %mul1480 = mul nsw i32 %276, %add1473
  %add1483 = add nsw i32 %mul1480, %shl1482
  %shr1485 = ashr i32 %add1483, %sub1484
  %add1486 = add nsw i32 %shr1485, 2
  %shr1487 = ashr i32 %add1486, 2
  %277 = shl nsw i64 %indvars.iv3476, 2
  %arrayidx1494 = getelementptr inbounds %struct.ImageParameters* %261, i64 0, i32 46, i64 %272, i64 %277
  store i32 %shr1487, i32* %arrayidx1494, align 4, !tbaa !17
  %278 = load i32* %arrayidx1470, align 4, !tbaa !17
  %279 = load i32* %arrayidx1472, align 4, !tbaa !17
  %sub1499 = sub nsw i32 %278, %279
  %280 = load i32* %arrayidx1479, align 4, !tbaa !17
  %mul1506 = mul nsw i32 %sub1499, %280
  %add1509 = add nsw i32 %mul1506, %shl1482
  %shr1511 = ashr i32 %add1509, %sub1484
  %add1512 = add nsw i32 %shr1511, 2
  %shr1513 = ashr i32 %add1512, 2
  %281 = shl nsw i64 %274, 2
  %arrayidx1520 = getelementptr inbounds %struct.ImageParameters* %261, i64 0, i32 46, i64 %272, i64 %281
  store i32 %shr1513, i32* %arrayidx1520, align 4, !tbaa !17
  br label %for.inc1674

if.else1521:                                      ; preds = %if.then1465
  %282 = load i32* %arrayidx1532, align 4, !tbaa !17
  %mul1533 = mul nsw i32 %282, %add1473
  %add1536 = add nsw i32 %mul1533, %shl1482
  %shr1538 = ashr i32 %add1536, %sub1484
  %add1539 = add nsw i32 %shr1538, 2
  %shr1540 = ashr i32 %add1539, 2
  %283 = shl nsw i64 %indvars.iv3476, 2
  %arrayidx1547 = getelementptr inbounds %struct.ImageParameters* %261, i64 0, i32 46, i64 %272, i64 %283
  store i32 %shr1540, i32* %arrayidx1547, align 4, !tbaa !17
  %284 = load i32* %arrayidx1470, align 4, !tbaa !17
  %285 = load i32* %arrayidx1472, align 4, !tbaa !17
  %sub1552 = sub nsw i32 %284, %285
  %286 = load i32* %arrayidx1532, align 4, !tbaa !17
  %mul1559 = mul nsw i32 %sub1552, %286
  %add1562 = add nsw i32 %mul1559, %shl1482
  %shr1564 = ashr i32 %add1562, %sub1484
  %add1565 = add nsw i32 %shr1564, 2
  %shr1566 = ashr i32 %add1565, 2
  %287 = shl nsw i64 %274, 2
  %arrayidx1573 = getelementptr inbounds %struct.ImageParameters* %261, i64 0, i32 46, i64 %272, i64 %287
  store i32 %shr1566, i32* %arrayidx1573, align 4, !tbaa !17
  br label %for.inc1674

if.else1575:                                      ; preds = %for.body1461
  br i1 %10, label %if.then1578, label %if.else1625

if.then1578:                                      ; preds = %if.else1575
  %288 = load i32* %arrayidx1479, align 4, !tbaa !17
  %mul1590 = mul nsw i32 %288, %add1473
  %shl1592 = shl i32 %mul1590, %sub1591
  %add1593 = add nsw i32 %shl1592, 2
  %shr1594 = ashr i32 %add1593, 2
  %289 = shl nsw i64 %indvars.iv3476, 2
  %arrayidx1601 = getelementptr inbounds %struct.ImageParameters* %261, i64 0, i32 46, i64 %272, i64 %289
  store i32 %shr1594, i32* %arrayidx1601, align 4, !tbaa !17
  %290 = load i32* %arrayidx1470, align 4, !tbaa !17
  %291 = load i32* %arrayidx1472, align 4, !tbaa !17
  %sub1606 = sub nsw i32 %290, %291
  %292 = load i32* %arrayidx1479, align 4, !tbaa !17
  %mul1613 = mul nsw i32 %sub1606, %292
  %shl1615 = shl i32 %mul1613, %sub1591
  %add1616 = add nsw i32 %shl1615, 2
  %shr1617 = ashr i32 %add1616, 2
  %293 = shl nsw i64 %274, 2
  %arrayidx1624 = getelementptr inbounds %struct.ImageParameters* %261, i64 0, i32 46, i64 %272, i64 %293
  store i32 %shr1617, i32* %arrayidx1624, align 4, !tbaa !17
  br label %for.inc1674

if.else1625:                                      ; preds = %if.else1575
  %294 = load i32* %arrayidx1532, align 4, !tbaa !17
  %mul1637 = mul nsw i32 %294, %add1473
  %shl1639 = shl i32 %mul1637, %sub1591
  %add1640 = add nsw i32 %shl1639, 2
  %shr1641 = ashr i32 %add1640, 2
  %295 = shl nsw i64 %indvars.iv3476, 2
  %arrayidx1648 = getelementptr inbounds %struct.ImageParameters* %261, i64 0, i32 46, i64 %272, i64 %295
  store i32 %shr1641, i32* %arrayidx1648, align 4, !tbaa !17
  %296 = load i32* %arrayidx1470, align 4, !tbaa !17
  %297 = load i32* %arrayidx1472, align 4, !tbaa !17
  %sub1653 = sub nsw i32 %296, %297
  %298 = load i32* %arrayidx1532, align 4, !tbaa !17
  %mul1660 = mul nsw i32 %sub1653, %298
  %shl1662 = shl i32 %mul1660, %sub1591
  %add1663 = add nsw i32 %shl1662, 2
  %shr1664 = ashr i32 %add1663, 2
  %299 = shl nsw i64 %274, 2
  %arrayidx1671 = getelementptr inbounds %struct.ImageParameters* %261, i64 0, i32 46, i64 %272, i64 %299
  store i32 %shr1664, i32* %arrayidx1671, align 4, !tbaa !17
  br label %for.inc1674

for.inc1674:                                      ; preds = %if.else1521, %if.then1468, %if.else1625, %if.then1578
  %indvars.iv.next3477 = add nuw nsw i64 %indvars.iv3476, 1
  %exitcond3487 = icmp eq i64 %indvars.iv.next3477, 2
  br i1 %exitcond3487, label %for.inc1677, label %for.inc1674.for.body1461_crit_edge

for.inc1674.for.body1461_crit_edge:               ; preds = %for.inc1674
  %arrayidx1470.phi.trans.insert = getelementptr inbounds [4 x i32]* %m6, i64 0, i64 %indvars.iv.next3477
  %.pre3578 = load i32* %arrayidx1470.phi.trans.insert, align 4, !tbaa !17
  br label %for.body1461

for.inc1677:                                      ; preds = %for.inc1674
  %indvars.iv.next3489 = add nuw nsw i64 %indvars.iv3488, 1
  %300 = trunc i64 %indvars.iv3488 to i32
  %cmp1421.not = icmp sgt i32 %300, 2
  br i1 %cmp1421.not, label %if.end1682, label %for.cond1429.preheader

if.end1682:                                       ; preds = %for.inc1677, %for.inc1071, %for.cond1420.preheader.if.end1682.loopexit3260_crit_edge, %for.end236, %for.inc495.3
  %301 = phi %struct.ImageParameters* [ %446, %for.inc495.3 ], [ %0, %for.end236 ], [ %.pre3545.pre, %for.cond1420.preheader.if.end1682.loopexit3260_crit_edge ], [ %181, %for.inc1071 ], [ %261, %for.inc1677 ]
  %DCcoded.6 = phi i32 [ %DCcoded.1, %for.inc495.3 ], [ 0, %for.end236 ], [ %DCcoded.5, %for.cond1420.preheader.if.end1682.loopexit3260_crit_edge ], [ %DCcoded.3, %for.inc1071 ], [ %DCcoded.5, %for.inc1677 ]
  %cr_cbp.addr.6 = phi i32 [ %cr_cbp.addr.1, %for.inc495.3 ], [ %cr_cbp, %for.end236 ], [ %cr_cbp.addr.5, %for.cond1420.preheader.if.end1682.loopexit3260_crit_edge ], [ %cr_cbp.addr.3, %for.inc1071 ], [ %cr_cbp.addr.5, %for.inc1677 ]
  %num_blk8x8_uv16843299 = getelementptr inbounds %struct.ImageParameters* %301, i64 0, i32 157
  %302 = load i32* %num_blk8x8_uv16843299, align 4, !tbaa !50
  %cmp16863301 = icmp sgt i32 %302, 1
  br i1 %cmp16863301, label %for.cond1689.preheader.lr.ph, label %for.end1960

for.cond1689.preheader.lr.ph:                     ; preds = %if.end1682
  %idxprom1695 = sext i32 %12 to i64
  %add1708 = add i32 %mul, 4
  %mb_field = getelementptr inbounds %struct.macroblock* %2, i64 %idxprom, i32 22
  %cbp_blk1833 = getelementptr inbounds %struct.macroblock* %2, i64 %idxprom, i32 13
  %cmp1873 = icmp slt i32 %add37, 24
  %idxprom1881 = sext i32 %rem to i64
  %sub1888 = sub nsw i32 3, %div38
  %shl1889 = shl i32 1, %sub1888
  %sub1891 = sub nsw i32 4, %div38
  %sub1922 = add nsw i32 %div38, -4
  %idxprom1784 = sext i32 %div38 to i64
  %303 = sext i32 %mul to i64
  br label %for.cond1689.preheader

for.cond1689.preheader:                           ; preds = %for.cond1689.preheader.lr.ph, %for.inc1958
  %304 = phi %struct.ImageParameters* [ %301, %for.cond1689.preheader.lr.ph ], [ %337, %for.inc1958 ]
  %indvars.iv3418 = phi i64 [ 0, %for.cond1689.preheader.lr.ph ], [ %indvars.iv.next3419, %for.inc1958 ]
  %cr_cbp_tmp.03303 = phi i32 [ 0, %for.cond1689.preheader.lr.ph ], [ %cr_cbp_tmp.33241, %for.inc1958 ]
  %coeff_cost.03302 = phi i32 [ 0, %for.cond1689.preheader.lr.ph ], [ %coeff_cost.43240, %for.inc1958 ]
  %305 = trunc i64 %indvars.iv3418 to i32
  %add1709 = add i32 %add1708, %305
  %idxprom1710 = sext i32 %add1709 to i64
  %306 = add nsw i64 %indvars.iv3418, %303
  br label %for.body1692

for.body1692:                                     ; preds = %for.end1952.for.body1692_crit_edge, %for.cond1689.preheader
  %307 = phi %struct.ImageParameters* [ %304, %for.cond1689.preheader ], [ %.pre3546, %for.end1952.for.body1692_crit_edge ]
  %indvars.iv3415 = phi i64 [ 0, %for.cond1689.preheader ], [ %indvars.iv.next3416, %for.end1952.for.body1692_crit_edge ]
  %cr_cbp_tmp.13297 = phi i32 [ %cr_cbp_tmp.03303, %for.cond1689.preheader ], [ %cr_cbp_tmp.33241, %for.end1952.for.body1692_crit_edge ]
  %coeff_cost.13296 = phi i32 [ %coeff_cost.03302, %for.cond1689.preheader ], [ %coeff_cost.43240, %for.end1952.for.body1692_crit_edge ]
  %arrayidx1698 = getelementptr inbounds [4 x [4 x [4 x i8]]]* @hor_offset, i64 0, i64 %idxprom1695, i64 %indvars.iv3418, i64 %indvars.iv3415
  %308 = load i8* %arrayidx1698, align 1, !tbaa !48
  %conv1699 = zext i8 %308 to i64
  %arrayidx1705 = getelementptr inbounds [4 x [4 x [4 x i8]]]* @ver_offset, i64 0, i64 %idxprom1695, i64 %indvars.iv3418, i64 %indvars.iv3415
  %309 = load i8* %arrayidx1705, align 1, !tbaa !48
  %conv1706 = zext i8 %309 to i64
  %cofAC = getelementptr inbounds %struct.ImageParameters* %307, i64 0, i32 47
  %310 = load i32***** %cofAC, align 8, !tbaa !42
  %arrayidx1711 = getelementptr inbounds i32**** %310, i64 %idxprom1710
  %311 = load i32**** %arrayidx1711, align 8, !tbaa !1
  %arrayidx1712 = getelementptr inbounds i32*** %311, i64 %indvars.iv3415
  %312 = load i32*** %arrayidx1712, align 8, !tbaa !1
  %313 = load i32** %312, align 8, !tbaa !1
  %arrayidx1721 = getelementptr inbounds i32** %312, i64 1
  %314 = load i32** %arrayidx1721, align 8, !tbaa !1
  %arrayidx1829 = getelementptr inbounds [8 x [4 x i8]]* @cbp_blk_chroma, i64 0, i64 %306, i64 %indvars.iv3415
  br label %for.body1725

for.body1725:                                     ; preds = %for.inc1950.for.body1725_crit_edge, %for.body1692
  %315 = phi %struct.ImageParameters* [ %307, %for.body1692 ], [ %.pre3547, %for.inc1950.for.body1725_crit_edge ]
  %indvars.iv3412 = phi i64 [ 1, %for.body1692 ], [ %indvars.iv.next3413, %for.inc1950.for.body1725_crit_edge ]
  %cr_cbp_tmp.23293 = phi i32 [ %cr_cbp_tmp.13297, %for.body1692 ], [ %cr_cbp_tmp.33241, %for.inc1950.for.body1725_crit_edge ]
  %coeff_cost.23292 = phi i32 [ %coeff_cost.13296, %for.body1692 ], [ %coeff_cost.43240, %for.inc1950.for.body1725_crit_edge ]
  %run.63291 = phi i32 [ -1, %for.body1692 ], [ %run.73239, %for.inc1950.for.body1725_crit_edge ]
  %scan_pos.63290 = phi i32 [ 0, %for.body1692 ], [ %scan_pos.73238, %for.inc1950.for.body1725_crit_edge ]
  %field_picture = getelementptr inbounds %struct.ImageParameters* %315, i64 0, i32 100
  %316 = load i32* %field_picture, align 4, !tbaa !38
  %tobool1726 = icmp eq i32 %316, 0
  br i1 %tobool1726, label %lor.lhs.false1727, label %if.end1749

lor.lhs.false1727:                                ; preds = %for.body1725
  %MbaffFrameFlag = getelementptr inbounds %struct.ImageParameters* %315, i64 0, i32 90
  %317 = load i32* %MbaffFrameFlag, align 4, !tbaa !45
  %tobool1728 = icmp eq i32 %317, 0
  br i1 %tobool1728, label %if.else1740, label %land.lhs.true1729

land.lhs.true1729:                                ; preds = %lor.lhs.false1727
  %318 = load i32* %mb_field, align 4, !tbaa !46
  %tobool1730 = icmp eq i32 %318, 0
  br i1 %tobool1730, label %if.else1740, label %if.end1749

if.else1740:                                      ; preds = %land.lhs.true1729, %lor.lhs.false1727
  br label %if.end1749

if.end1749:                                       ; preds = %for.body1725, %land.lhs.true1729, %if.else1740
  %FIELD_SCAN.pn3583 = phi [16 x [2 x i8]]* [ @SNGL_SCAN, %if.else1740 ], [ @FIELD_SCAN, %land.lhs.true1729 ], [ @FIELD_SCAN, %for.body1725 ]
  %i.12.in.in = getelementptr inbounds [16 x [2 x i8]]* %FIELD_SCAN.pn3583, i64 0, i64 %indvars.iv3412, i64 0
  %j.12.in.in = getelementptr inbounds [16 x [2 x i8]]* %FIELD_SCAN.pn3583, i64 0, i64 %indvars.iv3412, i64 1
  %i.12.in = load i8* %i.12.in.in, align 2
  %j.12.in = load i8* %j.12.in.in, align 1
  %i.12 = zext i8 %i.12.in to i64
  %j.12 = zext i8 %j.12.in to i64
  %inc1750 = add nsw i32 %run.63291, 1
  %add1753 = add i64 %j.12, %conv1706
  %add1755 = add i64 %i.12, %conv1699
  %arrayidx1759 = getelementptr inbounds %struct.ImageParameters* %315, i64 0, i32 46, i64 %add1755, i64 %add1753
  %319 = load i32* %arrayidx1759, align 4, !tbaa !17
  %ispos3209 = icmp sgt i32 %319, -1
  %neg3210 = sub i32 0, %319
  %320 = select i1 %ispos3209, i32 %319, i32 %neg3210
  br i1 %18, label %if.end1821, label %if.else1761

if.else1761:                                      ; preds = %if.end1749
  br i1 %10, label %if.then1764, label %if.else1792

if.then1764:                                      ; preds = %if.else1761
  %arrayidx1780 = getelementptr inbounds [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 %idxprom17, i64 %idxprom1881, i64 %i.12, i64 %j.12
  %321 = load i32* %arrayidx1780, align 4, !tbaa !17
  %mul1781 = mul nsw i32 %321, %320
  %arrayidx1789 = getelementptr inbounds [2 x [13 x [4 x [4 x i32]]]]* @LevelOffset4x4Chroma_Intra, i64 0, i64 %idxprom17, i64 %idxprom1784, i64 %i.12, i64 %j.12
  %322 = load i32* %arrayidx1789, align 4, !tbaa !17
  %add1790 = add nsw i32 %mul1781, %322
  %shr1791 = ashr i32 %add1790, %add41
  br label %if.end1821

if.else1792:                                      ; preds = %if.else1761
  %arrayidx1808 = getelementptr inbounds [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 %idxprom17, i64 %idxprom1881, i64 %i.12, i64 %j.12
  %323 = load i32* %arrayidx1808, align 4, !tbaa !17
  %mul1809 = mul nsw i32 %323, %320
  %arrayidx1817 = getelementptr inbounds [2 x [13 x [4 x [4 x i32]]]]* @LevelOffset4x4Chroma_Inter, i64 0, i64 %idxprom17, i64 %idxprom1784, i64 %i.12, i64 %j.12
  %324 = load i32* %arrayidx1817, align 4, !tbaa !17
  %add1818 = add nsw i32 %mul1809, %324
  %shr1819 = ashr i32 %add1818, %add41
  br label %if.end1821

if.end1821:                                       ; preds = %if.end1749, %if.then1764, %if.else1792
  %level.4 = phi i32 [ %shr1791, %if.then1764 ], [ %shr1819, %if.else1792 ], [ %320, %if.end1749 ]
  %cmp1822 = icmp eq i32 %level.4, 0
  br i1 %cmp1822, label %if.end1939, label %if.then1824

if.then1824:                                      ; preds = %if.end1821
  %325 = load i8* %arrayidx1829, align 1, !tbaa !48
  %sh_prom1831 = zext i8 %325 to i64
  %shl1832 = shl i64 1, %sh_prom1831
  %326 = load i64* %cbp_blk1833, align 8, !tbaa !55
  %or1834 = or i64 %shl1832, %326
  store i64 %or1834, i64* %cbp_blk1833, align 8, !tbaa !55
  %cmp1835 = icmp sgt i32 %level.4, 1
  %or.cond = or i1 %cmp1835, %18
  br i1 %or.cond, label %if.then1839, label %if.else1841

if.then1839:                                      ; preds = %if.then1824
  %add1840 = add nsw i32 %coeff_cost.23292, 999999
  br label %if.end1848

if.else1841:                                      ; preds = %if.then1824
  %idxprom1842 = sext i32 %inc1750 to i64
  %327 = load %struct.InputParameters** @input, align 8, !tbaa !1
  %disthres = getelementptr inbounds %struct.InputParameters* %327, i64 0, i32 86
  %328 = load i32* %disthres, align 4, !tbaa !47
  %idxprom1843 = sext i32 %328 to i64
  %arrayidx1845 = getelementptr inbounds [2 x [16 x i8]]* @COEFF_COST, i64 0, i64 %idxprom1843, i64 %idxprom1842
  %329 = load i8* %arrayidx1845, align 1, !tbaa !48
  %conv1846 = zext i8 %329 to i32
  %add1847 = add nsw i32 %conv1846, %coeff_cost.23292
  br label %if.end1848

if.end1848:                                       ; preds = %if.else1841, %if.then1839
  %coeff_cost.3 = phi i32 [ %add1840, %if.then1839 ], [ %add1847, %if.else1841 ]
  %call1856 = call i32 @sign(i32 %level.4, i32 %319) #1
  %idxprom1857 = sext i32 %scan_pos.63290 to i64
  %arrayidx1858 = getelementptr inbounds i32* %313, i64 %idxprom1857
  store i32 %call1856, i32* %arrayidx1858, align 4, !tbaa !17
  %arrayidx1860 = getelementptr inbounds i32* %314, i64 %idxprom1857
  store i32 %inc1750, i32* %arrayidx1860, align 4, !tbaa !17
  %inc1861 = add nsw i32 %scan_pos.63290, 1
  %330 = load %struct.ImageParameters** @img, align 8, !tbaa !1
  %arrayidx1868 = getelementptr inbounds %struct.ImageParameters* %330, i64 0, i32 46, i64 %add1755, i64 %add1753
  %331 = load i32* %arrayidx1868, align 4, !tbaa !17
  %call1869 = call i32 @sign(i32 %level.4, i32 %331) #1
  br i1 %18, label %for.inc1950, label %if.else1872

if.else1872:                                      ; preds = %if.end1848
  br i1 %cmp1873, label %if.then1875, label %if.else1909

if.then1875:                                      ; preds = %if.else1872
  br i1 %10, label %if.then1878, label %if.end1939.thread3242

if.then1878:                                      ; preds = %if.then1875
  %arrayidx1886 = getelementptr inbounds [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 %idxprom17, i64 %idxprom1881, i64 %i.12, i64 %j.12
  %332 = load i32* %arrayidx1886, align 4, !tbaa !17
  %mul1887 = mul nsw i32 %332, %call1869
  %add1890 = add nsw i32 %mul1887, %shl1889
  %shr1892 = ashr i32 %add1890, %sub1891
  br label %if.end1939

if.end1939.thread3242:                            ; preds = %if.then1875
  %arrayidx1901 = getelementptr inbounds [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 %idxprom17, i64 %idxprom1881, i64 %i.12, i64 %j.12
  %333 = load i32* %arrayidx1901, align 4, !tbaa !17
  %mul1902 = mul nsw i32 %333, %call1869
  %add1905 = add nsw i32 %mul1902, %shl1889
  %shr1907 = ashr i32 %add1905, %sub1891
  br label %if.then1941

if.else1909:                                      ; preds = %if.else1872
  br i1 %10, label %if.then1912, label %if.end1939.thread

if.then1912:                                      ; preds = %if.else1909
  %arrayidx1920 = getelementptr inbounds [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 %idxprom17, i64 %idxprom1881, i64 %i.12, i64 %j.12
  %334 = load i32* %arrayidx1920, align 4, !tbaa !17
  %mul1921 = mul nsw i32 %334, %call1869
  %shl1923 = shl i32 %mul1921, %sub1922
  br label %if.end1939

if.end1939.thread:                                ; preds = %if.else1909
  %arrayidx1932 = getelementptr inbounds [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 %idxprom17, i64 %idxprom1881, i64 %i.12, i64 %j.12
  %335 = load i32* %arrayidx1932, align 4, !tbaa !17
  %mul1933 = mul nsw i32 %335, %call1869
  %shl1935 = shl i32 %mul1933, %sub1922
  br label %if.then1941

if.end1939:                                       ; preds = %if.end1821, %if.then1912, %if.then1878
  %scan_pos.7 = phi i32 [ %inc1861, %if.then1878 ], [ %inc1861, %if.then1912 ], [ %scan_pos.63290, %if.end1821 ]
  %run.7 = phi i32 [ -1, %if.then1878 ], [ -1, %if.then1912 ], [ %inc1750, %if.end1821 ]
  %coeff_cost.4 = phi i32 [ %coeff_cost.3, %if.then1878 ], [ %coeff_cost.3, %if.then1912 ], [ %coeff_cost.23292, %if.end1821 ]
  %cr_cbp_tmp.3 = phi i32 [ 2, %if.then1878 ], [ 2, %if.then1912 ], [ %cr_cbp_tmp.23293, %if.end1821 ]
  %ilev.1 = phi i32 [ %shr1892, %if.then1878 ], [ %shl1923, %if.then1912 ], [ 0, %if.end1821 ]
  br i1 %18, label %for.inc1950, label %if.then1941

if.then1941:                                      ; preds = %if.end1939.thread, %if.end1939.thread3242, %if.end1939
  %ilev.13247 = phi i32 [ %shr1907, %if.end1939.thread3242 ], [ %ilev.1, %if.end1939 ], [ %shl1935, %if.end1939.thread ]
  %cr_cbp_tmp.33246 = phi i32 [ 2, %if.end1939.thread3242 ], [ %cr_cbp_tmp.3, %if.end1939 ], [ 2, %if.end1939.thread ]
  %coeff_cost.43245 = phi i32 [ %coeff_cost.3, %if.end1939.thread3242 ], [ %coeff_cost.4, %if.end1939 ], [ %coeff_cost.3, %if.end1939.thread ]
  %run.73244 = phi i32 [ -1, %if.end1939.thread3242 ], [ %run.7, %if.end1939 ], [ -1, %if.end1939.thread ]
  %scan_pos.73243 = phi i32 [ %inc1861, %if.end1939.thread3242 ], [ %scan_pos.7, %if.end1939 ], [ %inc1861, %if.end1939.thread ]
  %336 = load %struct.ImageParameters** @img, align 8, !tbaa !1
  %arrayidx1948 = getelementptr inbounds %struct.ImageParameters* %336, i64 0, i32 46, i64 %add1755, i64 %add1753
  store i32 %ilev.13247, i32* %arrayidx1948, align 4, !tbaa !17
  br label %for.inc1950

for.inc1950:                                      ; preds = %if.end1848, %if.end1939, %if.then1941
  %cr_cbp_tmp.33241 = phi i32 [ %cr_cbp_tmp.3, %if.end1939 ], [ %cr_cbp_tmp.33246, %if.then1941 ], [ 2, %if.end1848 ]
  %coeff_cost.43240 = phi i32 [ %coeff_cost.4, %if.end1939 ], [ %coeff_cost.43245, %if.then1941 ], [ %coeff_cost.3, %if.end1848 ]
  %run.73239 = phi i32 [ %run.7, %if.end1939 ], [ %run.73244, %if.then1941 ], [ -1, %if.end1848 ]
  %scan_pos.73238 = phi i32 [ %scan_pos.7, %if.end1939 ], [ %scan_pos.73243, %if.then1941 ], [ %inc1861, %if.end1848 ]
  %indvars.iv.next3413 = add nuw nsw i64 %indvars.iv3412, 1
  %exitcond3414 = icmp eq i64 %indvars.iv.next3413, 16
  br i1 %exitcond3414, label %for.end1952, label %for.inc1950.for.body1725_crit_edge

for.inc1950.for.body1725_crit_edge:               ; preds = %for.inc1950
  %.pre3547 = load %struct.ImageParameters** @img, align 8, !tbaa !1
  br label %for.body1725

for.end1952:                                      ; preds = %for.inc1950
  %idxprom1953 = sext i32 %scan_pos.73238 to i64
  %arrayidx1954 = getelementptr inbounds i32* %313, i64 %idxprom1953
  store i32 0, i32* %arrayidx1954, align 4, !tbaa !17
  %indvars.iv.next3416 = add nuw nsw i64 %indvars.iv3415, 1
  %exitcond3417 = icmp eq i64 %indvars.iv.next3416, 4
  br i1 %exitcond3417, label %for.inc1958, label %for.end1952.for.body1692_crit_edge

for.end1952.for.body1692_crit_edge:               ; preds = %for.end1952
  %.pre3546 = load %struct.ImageParameters** @img, align 8, !tbaa !1
  br label %for.body1692

for.inc1958:                                      ; preds = %for.end1952
  %indvars.iv.next3419 = add nuw nsw i64 %indvars.iv3418, 1
  %337 = load %struct.ImageParameters** @img, align 8, !tbaa !1
  %num_blk8x8_uv1684 = getelementptr inbounds %struct.ImageParameters* %337, i64 0, i32 157
  %338 = load i32* %num_blk8x8_uv1684, align 4, !tbaa !50
  %div1685 = sdiv i32 %338, 2
  %339 = trunc i64 %indvars.iv.next3419 to i32
  %cmp1686 = icmp slt i32 %339, %div1685
  br i1 %cmp1686, label %for.cond1689.preheader, label %for.end1960

for.end1960:                                      ; preds = %for.inc1958, %if.end1682
  %340 = phi i32 [ %302, %if.end1682 ], [ %338, %for.inc1958 ]
  %341 = phi %struct.ImageParameters* [ %301, %if.end1682 ], [ %337, %for.inc1958 ]
  %cr_cbp_tmp.0.lcssa = phi i32 [ 0, %if.end1682 ], [ %cr_cbp_tmp.33241, %for.inc1958 ]
  %coeff_cost.0.lcssa = phi i32 [ 0, %if.end1682 ], [ %coeff_cost.43240, %for.inc1958 ]
  %cmp1961 = icmp sgt i32 %coeff_cost.0.lcssa, 3
  %or.cond2544 = or i1 %cmp1961, %18
  br i1 %or.cond2544, label %if.end2067, label %for.cond1966.preheader

for.cond1966.preheader:                           ; preds = %for.end1960
  %num_blk8x8_uv19673286 = getelementptr inbounds %struct.ImageParameters* %341, i64 0, i32 157
  %cmp19693288 = icmp sgt i32 %340, 1
  br i1 %cmp19693288, label %for.cond1972.preheader.lr.ph, label %if.end2067

for.cond1972.preheader.lr.ph:                     ; preds = %for.cond1966.preheader
  %idxprom1978 = sext i32 %12 to i64
  %add1991 = add i32 %mul, 4
  %cmp2006 = icmp eq i32 %DCcoded.6, 0
  %arrayidx2010 = getelementptr inbounds [4 x i64]* @dct_chroma.cbpblk_pattern, i64 0, i64 %idxprom1978
  %add2011 = add nsw i32 %12, 1
  %shl2012 = shl i32 %uv, %add2011
  %sh_prom2013 = zext i32 %shl2012 to i64
  %cbp_blk2015 = getelementptr inbounds %struct.macroblock* %2, i64 %idxprom, i32 13
  %mb_field2028 = getelementptr inbounds %struct.macroblock* %2, i64 %idxprom, i32 22
  br label %for.cond1972.preheader

for.cond1972.preheader:                           ; preds = %for.cond1972.preheader.lr.ph, %for.inc2064
  %indvars.iv3410 = phi i64 [ 0, %for.cond1972.preheader.lr.ph ], [ %indvars.iv.next3411, %for.inc2064 ]
  %342 = trunc i64 %indvars.iv3410 to i32
  %add1992 = add i32 %add1991, %342
  %idxprom1993 = sext i32 %add1992 to i64
  br label %for.body1975

for.body1975:                                     ; preds = %for.inc2061, %for.cond1972.preheader
  %indvars.iv3407 = phi i64 [ 0, %for.cond1972.preheader ], [ %indvars.iv.next3408, %for.inc2061 ]
  %arrayidx1981 = getelementptr inbounds [4 x [4 x [4 x i8]]]* @hor_offset, i64 0, i64 %idxprom1978, i64 %indvars.iv3410, i64 %indvars.iv3407
  %343 = load i8* %arrayidx1981, align 1, !tbaa !48
  %conv1982 = zext i8 %343 to i64
  %arrayidx1988 = getelementptr inbounds [4 x [4 x [4 x i8]]]* @ver_offset, i64 0, i64 %idxprom1978, i64 %indvars.iv3410, i64 %indvars.iv3407
  %344 = load i8* %arrayidx1988, align 1, !tbaa !48
  %conv1989 = zext i8 %344 to i64
  %cofAC1994 = getelementptr inbounds %struct.ImageParameters* %341, i64 0, i32 47
  %345 = load i32***** %cofAC1994, align 8, !tbaa !42
  %arrayidx1995 = getelementptr inbounds i32**** %345, i64 %idxprom1993
  %346 = load i32**** %arrayidx1995, align 8, !tbaa !1
  %arrayidx1996 = getelementptr inbounds i32*** %346, i64 %indvars.iv3407
  %347 = load i32*** %arrayidx1996, align 8, !tbaa !1
  %348 = load i32** %347, align 8, !tbaa !1
  br i1 %cmp2006, label %if.then2008, label %if.end2016

if.then2008:                                      ; preds = %for.body1975
  %349 = load i64* %arrayidx2010, align 8, !tbaa !56
  %shl2014 = shl i64 %349, %sh_prom2013
  %neg = xor i64 %shl2014, -1
  %350 = load i64* %cbp_blk2015, align 8, !tbaa !55
  %and = and i64 %350, %neg
  store i64 %and, i64* %cbp_blk2015, align 8, !tbaa !55
  br label %if.end2016

if.end2016:                                       ; preds = %if.then2008, %for.body1975
  store i32 0, i32* %348, align 4, !tbaa !17
  %field_picture2022 = getelementptr inbounds %struct.ImageParameters* %341, i64 0, i32 100
  %MbaffFrameFlag2025 = getelementptr inbounds %struct.ImageParameters* %341, i64 0, i32 90
  br label %for.body2021

for.body2021:                                     ; preds = %if.end2048, %if.end2016
  %indvars.iv3403 = phi i64 [ 1, %if.end2016 ], [ %indvars.iv.next3404, %if.end2048 ]
  %351 = load i32* %field_picture2022, align 4, !tbaa !38
  %tobool2023 = icmp eq i32 %351, 0
  br i1 %tobool2023, label %lor.lhs.false2024, label %if.end2048

lor.lhs.false2024:                                ; preds = %for.body2021
  %352 = load i32* %MbaffFrameFlag2025, align 4, !tbaa !45
  %tobool2026 = icmp eq i32 %352, 0
  br i1 %tobool2026, label %if.else2039, label %land.lhs.true2027

land.lhs.true2027:                                ; preds = %lor.lhs.false2024
  %353 = load i32* %mb_field2028, align 4, !tbaa !46
  %tobool2029 = icmp eq i32 %353, 0
  br i1 %tobool2029, label %if.else2039, label %if.end2048

if.else2039:                                      ; preds = %land.lhs.true2027, %lor.lhs.false2024
  br label %if.end2048

if.end2048:                                       ; preds = %for.body2021, %land.lhs.true2027, %if.else2039
  %FIELD_SCAN.pn = phi [16 x [2 x i8]]* [ @SNGL_SCAN, %if.else2039 ], [ @FIELD_SCAN, %land.lhs.true2027 ], [ @FIELD_SCAN, %for.body2021 ]
  %i.13.in.in = getelementptr inbounds [16 x [2 x i8]]* %FIELD_SCAN.pn, i64 0, i64 %indvars.iv3403, i64 0
  %j.13.in.in = getelementptr inbounds [16 x [2 x i8]]* %FIELD_SCAN.pn, i64 0, i64 %indvars.iv3403, i64 1
  %i.13.in = load i8* %i.13.in.in, align 2
  %j.13.in = load i8* %j.13.in.in, align 1
  %i.13 = zext i8 %i.13.in to i64
  %j.13 = zext i8 %j.13.in to i64
  %add2049 = add i64 %j.13, %conv1989
  %add2051 = add i64 %i.13, %conv1982
  %arrayidx2055 = getelementptr inbounds %struct.ImageParameters* %341, i64 0, i32 46, i64 %add2051, i64 %add2049
  store i32 0, i32* %arrayidx2055, align 4, !tbaa !17
  %arrayidx2057 = getelementptr inbounds i32* %348, i64 %indvars.iv3403
  store i32 0, i32* %arrayidx2057, align 4, !tbaa !17
  %indvars.iv.next3404 = add nuw nsw i64 %indvars.iv3403, 1
  %exitcond3405 = icmp eq i64 %indvars.iv.next3404, 16
  br i1 %exitcond3405, label %for.inc2061, label %for.body2021

for.inc2061:                                      ; preds = %if.end2048
  %indvars.iv.next3408 = add nuw nsw i64 %indvars.iv3407, 1
  %exitcond3409 = icmp eq i64 %indvars.iv.next3408, 4
  br i1 %exitcond3409, label %for.inc2064, label %for.body1975

for.inc2064:                                      ; preds = %for.inc2061
  %indvars.iv.next3411 = add nuw nsw i64 %indvars.iv3410, 1
  %354 = load i32* %num_blk8x8_uv19673286, align 4, !tbaa !50
  %div1968 = sdiv i32 %354, 2
  %355 = trunc i64 %indvars.iv.next3411 to i32
  %cmp1969 = icmp slt i32 %355, %div1968
  br i1 %cmp1969, label %for.cond1972.preheader, label %if.end2067

if.end2067:                                       ; preds = %for.inc2064, %for.cond1966.preheader, %for.end1960
  %cr_cbp_tmp.4 = phi i32 [ %cr_cbp_tmp.0.lcssa, %for.end1960 ], [ 0, %for.cond1966.preheader ], [ 0, %for.inc2064 ]
  %cmp2068 = icmp eq i32 %cr_cbp_tmp.4, 2
  %.cr_cbp.addr.6 = select i1 %cmp2068, i32 2, i32 %cr_cbp.addr.6
  %mb_cr_size_y20733278 = getelementptr inbounds %struct.ImageParameters* %341, i64 0, i32 162
  %356 = load i32* %mb_cr_size_y20733278, align 4, !tbaa !53
  %cmp2074.not3279 = icmp slt i32 %356, 1
  %brmerge32293280 = or i1 %cmp2074.not3279, %18
  br i1 %brmerge32293280, label %if.end2067.for.end2481_crit_edge, label %for.cond2082.preheader.lr.ph

if.end2067.for.end2481_crit_edge:                 ; preds = %if.end2067
  %residue_transform_flag2482.pre = getelementptr inbounds %struct.ImageParameters* %341, i64 0, i32 164
  br label %for.end2481

for.cond2082.preheader.lr.ph:                     ; preds = %if.end2067
  %mb_cr_size_x20833274 = getelementptr inbounds %struct.ImageParameters* %341, i64 0, i32 161
  %arrayidx2107 = getelementptr inbounds [4 x i32]* %m5, i64 0, i64 0
  %arrayidx2108 = getelementptr inbounds [4 x i32]* %m5, i64 0, i64 2
  %arrayidx2110 = getelementptr inbounds [4 x i32]* %m6, i64 0, i64 0
  %arrayidx2114 = getelementptr inbounds [4 x i32]* %m6, i64 0, i64 1
  %arrayidx2115 = getelementptr inbounds [4 x i32]* %m5, i64 0, i64 1
  %arrayidx2117 = getelementptr inbounds [4 x i32]* %m5, i64 0, i64 3
  %arrayidx2119 = getelementptr inbounds [4 x i32]* %m6, i64 0, i64 2
  %arrayidx2124 = getelementptr inbounds [4 x i32]* %m6, i64 0, i64 3
  %residue_transform_flag = getelementptr inbounds %struct.ImageParameters* %341, i64 0, i32 164
  %max_imgpel_value_uv = getelementptr inbounds %struct.ImageParameters* %341, i64 0, i32 156
  %.pre3549 = load i32* %mb_cr_size_x20833274, align 4, !tbaa !54
  br label %for.cond2082.preheader

for.cond2082.preheader:                           ; preds = %for.inc2479, %for.cond2082.preheader.lr.ph
  %357 = phi i32 [ %356, %for.cond2082.preheader.lr.ph ], [ %402, %for.inc2479 ]
  %358 = phi i32 [ %.pre3549, %for.cond2082.preheader.lr.ph ], [ %403, %for.inc2479 ]
  %indvars.iv3401 = phi i64 [ 0, %for.cond2082.preheader.lr.ph ], [ %indvars.iv.next3402, %for.inc2479 ]
  %cmp20843275 = icmp sgt i32 %358, 0
  br i1 %cmp20843275, label %for.cond2087.preheader, label %for.inc2479

for.cond2087.preheader:                           ; preds = %for.cond2082.preheader, %for.inc2476
  %indvars.iv3399 = phi i64 [ %indvars.iv.next3400, %for.inc2476 ], [ 0, %for.cond2082.preheader ]
  br label %for.cond2091.preheader

for.cond2091.preheader:                           ; preds = %for.cond2091.preheader, %for.cond2087.preheader
  %indvars.iv3374 = phi i64 [ 0, %for.cond2087.preheader ], [ %indvars.iv.next3375, %for.cond2091.preheader ]
  %359 = add nsw i64 %indvars.iv3374, %indvars.iv3401
  %arrayidx2101 = getelementptr inbounds %struct.ImageParameters* %341, i64 0, i32 46, i64 %indvars.iv3399, i64 %359
  %360 = load i32* %arrayidx2101, align 4, !tbaa !17
  store i32 %360, i32* %arrayidx2107, align 16, !tbaa !17
  %361 = or i64 %indvars.iv3399, 1
  %arrayidx2101.1 = getelementptr inbounds %struct.ImageParameters* %341, i64 0, i32 46, i64 %361, i64 %359
  %362 = load i32* %arrayidx2101.1, align 4, !tbaa !17
  store i32 %362, i32* %arrayidx2115, align 4, !tbaa !17
  %363 = or i64 %indvars.iv3399, 2
  %arrayidx2101.2 = getelementptr inbounds %struct.ImageParameters* %341, i64 0, i32 46, i64 %363, i64 %359
  %364 = load i32* %arrayidx2101.2, align 4, !tbaa !17
  store i32 %364, i32* %arrayidx2108, align 8, !tbaa !17
  %365 = or i64 %indvars.iv3399, 3
  %arrayidx2101.3 = getelementptr inbounds %struct.ImageParameters* %341, i64 0, i32 46, i64 %365, i64 %359
  %366 = load i32* %arrayidx2101.3, align 4, !tbaa !17
  store i32 %366, i32* %arrayidx2117, align 4, !tbaa !17
  %add2109 = add nsw i32 %364, %360
  store i32 %add2109, i32* %arrayidx2110, align 16, !tbaa !17
  %sub2113 = sub nsw i32 %360, %364
  store i32 %sub2113, i32* %arrayidx2114, align 4, !tbaa !17
  %shr2116 = ashr i32 %362, 1
  %sub2118 = sub nsw i32 %shr2116, %366
  store i32 %sub2118, i32* %arrayidx2119, align 8, !tbaa !17
  %shr2122 = ashr i32 %366, 1
  %add2123 = add nsw i32 %shr2122, %362
  store i32 %add2123, i32* %arrayidx2124, align 4, !tbaa !17
  %add2134 = add nsw i32 %add2123, %add2109
  store i32 %add2134, i32* %arrayidx2101, align 4, !tbaa !17
  %367 = load i32* %arrayidx2110, align 16, !tbaa !17
  %368 = load i32* %arrayidx2124, align 4, !tbaa !17
  %sub2146 = sub nsw i32 %367, %368
  store i32 %sub2146, i32* %arrayidx2101.3, align 4, !tbaa !17
  %369 = load i32* %arrayidx2114, align 4, !tbaa !17
  %370 = load i32* %arrayidx2119, align 8, !tbaa !17
  %add2134.1 = add nsw i32 %370, %369
  store i32 %add2134.1, i32* %arrayidx2101.1, align 4, !tbaa !17
  %371 = load i32* %arrayidx2114, align 4, !tbaa !17
  %372 = load i32* %arrayidx2119, align 8, !tbaa !17
  %sub2146.1 = sub nsw i32 %371, %372
  store i32 %sub2146.1, i32* %arrayidx2101.2, align 4, !tbaa !17
  %indvars.iv.next3375 = add nuw nsw i64 %indvars.iv3374, 1
  %exitcond = icmp eq i64 %indvars.iv.next3375, 4
  br i1 %exitcond, label %for.cond2169.preheader, label %for.cond2091.preheader

for.cond2169.preheader:                           ; preds = %for.cond2091.preheader, %for.inc2473
  %indvars.iv3393 = phi i64 [ %indvars.iv.next3394, %for.inc2473 ], [ 0, %for.cond2091.preheader ]
  %373 = add nsw i64 %indvars.iv3393, %indvars.iv3399
  %arrayidx2179 = getelementptr inbounds %struct.ImageParameters* %341, i64 0, i32 46, i64 %373, i64 %indvars.iv3401
  %374 = load i32* %arrayidx2179, align 4, !tbaa !17
  store i32 %374, i32* %arrayidx2107, align 16, !tbaa !17
  %375 = or i64 %indvars.iv3401, 1
  %arrayidx2179.1 = getelementptr inbounds %struct.ImageParameters* %341, i64 0, i32 46, i64 %373, i64 %375
  %376 = load i32* %arrayidx2179.1, align 4, !tbaa !17
  store i32 %376, i32* %arrayidx2115, align 4, !tbaa !17
  %377 = or i64 %indvars.iv3401, 2
  %arrayidx2179.2 = getelementptr inbounds %struct.ImageParameters* %341, i64 0, i32 46, i64 %373, i64 %377
  %378 = load i32* %arrayidx2179.2, align 4, !tbaa !17
  store i32 %378, i32* %arrayidx2108, align 8, !tbaa !17
  %379 = or i64 %indvars.iv3401, 3
  %arrayidx2179.3 = getelementptr inbounds %struct.ImageParameters* %341, i64 0, i32 46, i64 %373, i64 %379
  %380 = load i32* %arrayidx2179.3, align 4, !tbaa !17
  store i32 %380, i32* %arrayidx2117, align 4, !tbaa !17
  %add2187 = add nsw i32 %378, %374
  store i32 %add2187, i32* %arrayidx2110, align 16, !tbaa !17
  %sub2191 = sub nsw i32 %374, %378
  store i32 %sub2191, i32* %arrayidx2114, align 4, !tbaa !17
  %shr2194 = ashr i32 %376, 1
  %sub2196 = sub nsw i32 %shr2194, %380
  store i32 %sub2196, i32* %arrayidx2119, align 8, !tbaa !17
  %shr2200 = ashr i32 %380, 1
  %add2201 = add nsw i32 %shr2200, %376
  store i32 %add2201, i32* %arrayidx2124, align 4, !tbaa !17
  br label %for.body2206

for.body2206:                                     ; preds = %for.inc2470, %for.cond2169.preheader
  %indvars.iv3383 = phi i64 [ 0, %for.cond2169.preheader ], [ %indvars.iv.next3384, %for.inc2470 ]
  %381 = sub nsw i64 3, %indvars.iv3383
  %382 = load i32* %residue_transform_flag, align 4, !tbaa !35
  %tobool2208 = icmp eq i32 %382, 0
  br i1 %tobool2208, label %if.then2209, label %if.else2439

if.then2209:                                      ; preds = %for.body2206
  %383 = load i32* %max_imgpel_value_uv, align 4, !tbaa !57
  %conv2210 = sext i32 %383 to i64
  %arrayidx2212 = getelementptr inbounds [4 x i32]* %m6, i64 0, i64 %indvars.iv3383
  %384 = load i32* %arrayidx2212, align 4, !tbaa !17
  %arrayidx2214 = getelementptr inbounds [4 x i32]* %m6, i64 0, i64 %381
  %385 = load i32* %arrayidx2214, align 4, !tbaa !17
  %add2215 = add nsw i32 %385, %384
  %conv2216 = sext i32 %add2215 to i64
  %386 = add nsw i64 %indvars.iv3383, %indvars.iv3401
  %arrayidx2222 = getelementptr inbounds %struct.ImageParameters* %341, i64 0, i32 45, i64 %373, i64 %386
  %387 = load i16* %arrayidx2222, align 2, !tbaa !21
  %conv2223 = zext i16 %387 to i64
  %shl2224 = shl nuw nsw i64 %conv2223, 6
  %add2225 = add i64 %conv2216, 32
  %add2226 = add i64 %add2225, %shl2224
  %shr2227 = ashr i64 %add2226, 6
  %cmp2228 = icmp slt i64 %shr2227, 0
  %.shr2227 = select i1 %cmp2228, i64 0, i64 %shr2227
  %cmp2252 = icmp slt i64 %conv2210, %.shr2227
  %conv2210..shr2227 = select i1 %cmp2252, i64 %conv2210, i64 %.shr2227
  %conv2302 = trunc i64 %conv2210..shr2227 to i32
  %arrayidx2309 = getelementptr inbounds %struct.ImageParameters* %341, i64 0, i32 46, i64 %373, i64 %386
  store i32 %conv2302, i32* %arrayidx2309, align 4, !tbaa !17
  %388 = load i32* %max_imgpel_value_uv, align 4, !tbaa !57
  %conv2311 = sext i32 %388 to i64
  %389 = load i32* %arrayidx2212, align 4, !tbaa !17
  %390 = load i32* %arrayidx2214, align 4, !tbaa !17
  %sub2316 = sub nsw i32 %389, %390
  %conv2317 = sext i32 %sub2316 to i64
  %391 = add nsw i64 %381, %indvars.iv3401
  %arrayidx2324 = getelementptr inbounds %struct.ImageParameters* %341, i64 0, i32 45, i64 %373, i64 %391
  %392 = load i16* %arrayidx2324, align 2, !tbaa !21
  %conv2325 = zext i16 %392 to i64
  %shl2326 = shl nuw nsw i64 %conv2325, 6
  %add2327 = add i64 %conv2317, 32
  %add2328 = add i64 %add2327, %shl2326
  %shr2329 = ashr i64 %add2328, 6
  %cmp2330 = icmp slt i64 %shr2329, 0
  %.shr2329 = select i1 %cmp2330, i64 0, i64 %shr2329
  %cmp2354 = icmp slt i64 %conv2311, %.shr2329
  %cond2403 = select i1 %cmp2354, i64 %conv2311, i64 %.shr2329
  %conv2404 = trunc i64 %cond2403 to i32
  %arrayidx2411 = getelementptr inbounds %struct.ImageParameters* %341, i64 0, i32 46, i64 %373, i64 %391
  store i32 %conv2404, i32* %arrayidx2411, align 4, !tbaa !17
  br label %for.inc2470

if.else2439:                                      ; preds = %for.body2206
  %arrayidx2416 = getelementptr inbounds [4 x i32]* %m6, i64 0, i64 %indvars.iv3383
  %arrayidx2418 = getelementptr inbounds [4 x i32]* %m6, i64 0, i64 %381
  %393 = load i32* %arrayidx2418, align 4, !tbaa !17
  %394 = load i32* %arrayidx2416, align 4, !tbaa !17
  %add2419 = add nsw i32 %393, %394
  %add2445 = add nsw i32 %add2419, 32
  %shr2446 = ashr i32 %add2445, 6
  %395 = add nsw i64 %indvars.iv3383, %indvars.iv3401
  %arrayidx2453 = getelementptr inbounds %struct.ImageParameters* %341, i64 0, i32 46, i64 %373, i64 %395
  store i32 %shr2446, i32* %arrayidx2453, align 4, !tbaa !17
  %396 = load i32* %arrayidx2416, align 4, !tbaa !17
  %397 = load i32* %arrayidx2418, align 4, !tbaa !17
  %sub2458 = add i32 %396, 32
  %add2459 = sub i32 %sub2458, %397
  %shr2460 = ashr i32 %add2459, 6
  %398 = add nsw i64 %381, %indvars.iv3401
  %arrayidx2467 = getelementptr inbounds %struct.ImageParameters* %341, i64 0, i32 46, i64 %373, i64 %398
  store i32 %shr2460, i32* %arrayidx2467, align 4, !tbaa !17
  br label %for.inc2470

for.inc2470:                                      ; preds = %if.then2209, %if.else2439
  %indvars.iv.next3384 = add nuw nsw i64 %indvars.iv3383, 1
  %exitcond3392 = icmp eq i64 %indvars.iv.next3384, 2
  br i1 %exitcond3392, label %for.inc2473, label %for.body2206

for.inc2473:                                      ; preds = %for.inc2470
  %indvars.iv.next3394 = add nuw nsw i64 %indvars.iv3393, 1
  %399 = trunc i64 %indvars.iv3393 to i32
  %cmp2161.not = icmp sgt i32 %399, 2
  br i1 %cmp2161.not, label %for.inc2476, label %for.cond2169.preheader

for.inc2476:                                      ; preds = %for.inc2473
  %indvars.iv.next3400 = add nuw nsw i64 %indvars.iv3399, 4
  %400 = load i32* %mb_cr_size_x20833274, align 4, !tbaa !54
  %401 = trunc i64 %indvars.iv.next3400 to i32
  %cmp2084 = icmp slt i32 %401, %400
  br i1 %cmp2084, label %for.cond2087.preheader, label %for.cond2082.for.inc2479_crit_edge

for.cond2082.for.inc2479_crit_edge:               ; preds = %for.inc2476
  %.pre3550 = load i32* %mb_cr_size_y20733278, align 4, !tbaa !53
  br label %for.inc2479

for.inc2479:                                      ; preds = %for.cond2082.for.inc2479_crit_edge, %for.cond2082.preheader
  %402 = phi i32 [ %.pre3550, %for.cond2082.for.inc2479_crit_edge ], [ %357, %for.cond2082.preheader ]
  %403 = phi i32 [ %400, %for.cond2082.for.inc2479_crit_edge ], [ %358, %for.cond2082.preheader ]
  %indvars.iv.next3402 = add nuw nsw i64 %indvars.iv3401, 4
  %404 = trunc i64 %indvars.iv.next3402 to i32
  %cmp2074.not = icmp slt i32 %404, %402
  br i1 %cmp2074.not, label %for.cond2082.preheader, label %for.end2481

for.end2481:                                      ; preds = %for.inc2479, %if.end2067.for.end2481_crit_edge
  %residue_transform_flag2482.pre-phi = phi i32* [ %residue_transform_flag2482.pre, %if.end2067.for.end2481_crit_edge ], [ %residue_transform_flag, %for.inc2479 ]
  %405 = phi i32 [ %356, %if.end2067.for.end2481_crit_edge ], [ %402, %for.inc2479 ]
  %406 = load i32* %residue_transform_flag2482.pre-phi, align 4, !tbaa !35
  %tobool2483 = icmp eq i32 %406, 0
  %cmp24873266 = icmp sgt i32 %405, 0
  %or.cond3592 = and i1 %tobool2483, %cmp24873266
  br i1 %or.cond3592, label %for.cond2490.preheader.lr.ph, label %if.end2543

for.cond2490.preheader.lr.ph:                     ; preds = %for.end2481
  %mb_cr_size_x24913262 = getelementptr inbounds %struct.ImageParameters* %341, i64 0, i32 161
  %407 = load %struct.storable_picture** @enc_picture, align 8, !tbaa !1
  %imgUV = getelementptr inbounds %struct.storable_picture* %407, i64 0, i32 30
  %.pre3548 = load i32* %mb_cr_size_x24913262, align 4, !tbaa !54
  br label %for.cond2490.preheader

for.cond2490.preheader:                           ; preds = %for.cond2490.preheader.lr.ph, %for.inc2540
  %indvars.iv3364 = phi i64 [ 0, %for.cond2490.preheader.lr.ph ], [ %indvars.iv.next3365, %for.inc2540 ]
  %cmp24923263 = icmp sgt i32 %.pre3548, 0
  br i1 %cmp24923263, label %for.body2494, label %for.inc2540

for.body2494:                                     ; preds = %for.cond2490.preheader, %for.inc2537
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc2537 ], [ 0, %for.cond2490.preheader ]
  %arrayidx2501 = getelementptr inbounds %struct.ImageParameters* %341, i64 0, i32 46, i64 %indvars.iv, i64 %indvars.iv3364
  %408 = load i32* %arrayidx2501, align 4, !tbaa !17
  br i1 %18, label %if.then2496, label %if.else2518

if.then2496:                                      ; preds = %for.body2494
  %arrayidx2506 = getelementptr inbounds %struct.ImageParameters* %341, i64 0, i32 45, i64 %indvars.iv, i64 %indvars.iv3364
  %409 = load i16* %arrayidx2506, align 2, !tbaa !21
  %conv2507 = zext i16 %409 to i32
  %add2508 = add nsw i32 %conv2507, %408
  %conv2509 = trunc i32 %add2508 to i16
  %pix_c_x = getelementptr inbounds %struct.ImageParameters* %341, i64 0, i32 35
  %410 = load i32* %pix_c_x, align 4, !tbaa !58
  %411 = trunc i64 %indvars.iv to i32
  %add2510 = add nsw i32 %410, %411
  %idxprom2511 = sext i32 %add2510 to i64
  %pix_c_y = getelementptr inbounds %struct.ImageParameters* %341, i64 0, i32 36
  %412 = load i32* %pix_c_y, align 4, !tbaa !59
  %413 = trunc i64 %indvars.iv3364 to i32
  %add2512 = add nsw i32 %412, %413
  %idxprom2513 = sext i32 %add2512 to i64
  %414 = load i16**** %imgUV, align 8, !tbaa !60
  %arrayidx2515 = getelementptr inbounds i16*** %414, i64 %idxprom17
  %415 = load i16*** %arrayidx2515, align 8, !tbaa !1
  %arrayidx2516 = getelementptr inbounds i16** %415, i64 %idxprom2513
  %416 = load i16** %arrayidx2516, align 8, !tbaa !1
  %arrayidx2517 = getelementptr inbounds i16* %416, i64 %idxprom2511
  store i16 %conv2509, i16* %arrayidx2517, align 2, !tbaa !21
  br label %for.inc2537

if.else2518:                                      ; preds = %for.body2494
  %conv2524 = trunc i32 %408 to i16
  %pix_c_x2525 = getelementptr inbounds %struct.ImageParameters* %341, i64 0, i32 35
  %417 = load i32* %pix_c_x2525, align 4, !tbaa !58
  %418 = trunc i64 %indvars.iv to i32
  %add2526 = add nsw i32 %417, %418
  %idxprom2527 = sext i32 %add2526 to i64
  %pix_c_y2528 = getelementptr inbounds %struct.ImageParameters* %341, i64 0, i32 36
  %419 = load i32* %pix_c_y2528, align 4, !tbaa !59
  %420 = trunc i64 %indvars.iv3364 to i32
  %add2529 = add nsw i32 %419, %420
  %idxprom2530 = sext i32 %add2529 to i64
  %421 = load i16**** %imgUV, align 8, !tbaa !60
  %arrayidx2533 = getelementptr inbounds i16*** %421, i64 %idxprom17
  %422 = load i16*** %arrayidx2533, align 8, !tbaa !1
  %arrayidx2534 = getelementptr inbounds i16** %422, i64 %idxprom2530
  %423 = load i16** %arrayidx2534, align 8, !tbaa !1
  %arrayidx2535 = getelementptr inbounds i16* %423, i64 %idxprom2527
  store i16 %conv2524, i16* %arrayidx2535, align 2, !tbaa !21
  br label %for.inc2537

for.inc2537:                                      ; preds = %if.then2496, %if.else2518
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %424 = trunc i64 %indvars.iv.next to i32
  %cmp2492 = icmp slt i32 %424, %.pre3548
  br i1 %cmp2492, label %for.body2494, label %for.inc2540

for.inc2540:                                      ; preds = %for.inc2537, %for.cond2490.preheader
  %indvars.iv.next3365 = add nuw nsw i64 %indvars.iv3364, 1
  %425 = trunc i64 %indvars.iv.next3365 to i32
  %cmp2487 = icmp slt i32 %425, %405
  br i1 %cmp2487, label %for.cond2490.preheader, label %if.end2543

if.end2543:                                       ; preds = %for.inc2540, %for.end2481
  call void @llvm.lifetime.end(i64 64, i8* %14) #1
  call void @llvm.lifetime.end(i64 64, i8* %13) #1
  ret i32 %.cr_cbp.addr.6

if.else462.1:                                     ; preds = %for.inc495.thread3590, %for.inc495
  %426 = phi i32 [ %shl476, %for.inc495.thread3590 ], [ %storemerge, %for.inc495 ]
  br i1 %10, label %if.then465.1, label %if.else479.1

if.else479.1:                                     ; preds = %if.else462.1
  %427 = load i32* %arrayidx455, align 4, !tbaa !17
  %mul488.1 = mul nsw i32 %427, %sub406
  %shl490.1 = shl i32 %mul488.1, %sub475
  store i32 %shl490.1, i32* %arrayidx271, align 4, !tbaa !17
  br label %for.inc495.1

if.then465.1:                                     ; preds = %if.else462.1
  %428 = load i32* %arrayidx441, align 4, !tbaa !17
  %mul474.1 = mul nsw i32 %428, %sub406
  %shl476.1 = shl i32 %mul474.1, %sub475
  store i32 %shl476.1, i32* %arrayidx271, align 4, !tbaa !17
  br label %for.inc495.1

if.then430.1:                                     ; preds = %for.inc495.thread, %for.inc495
  %429 = phi i32 [ %shr444, %for.inc495.thread ], [ %storemerge, %for.inc495 ]
  br i1 %10, label %if.then433.1, label %if.else447.1

if.else447.1:                                     ; preds = %if.then430.1
  %430 = load i32* %arrayidx455, align 4, !tbaa !17
  %mul456.1 = mul nsw i32 %430, %sub406
  %shr458.1 = ashr i32 %mul456.1, %sub443
  store i32 %shr458.1, i32* %arrayidx271, align 4, !tbaa !17
  br label %for.inc495.1

if.then433.1:                                     ; preds = %if.then430.1
  %431 = load i32* %arrayidx441, align 4, !tbaa !17
  %mul442.1 = mul nsw i32 %431, %sub406
  %shr444.1 = ashr i32 %mul442.1, %sub443
  store i32 %shr444.1, i32* %arrayidx271, align 4, !tbaa !17
  br label %for.inc495.1

for.inc495.1:                                     ; preds = %if.then433.1, %if.else447.1, %if.then465.1, %if.else479.1
  %432 = phi i32 [ %429, %if.then433.1 ], [ %429, %if.else447.1 ], [ %426, %if.then465.1 ], [ %426, %if.else479.1 ]
  %433 = phi i32 [ %shr444.1, %if.then433.1 ], [ %shr458.1, %if.else447.1 ], [ %shl476.1, %if.then465.1 ], [ %shl490.1, %if.else479.1 ]
  br i1 %cmp428, label %if.then430.2, label %if.else462.2

if.else462.2:                                     ; preds = %for.inc495.1
  br i1 %10, label %if.then465.2, label %for.inc495.2.thread3591

for.inc495.2.thread3591:                          ; preds = %if.else462.2
  %434 = load i32* %arrayidx455, align 4, !tbaa !17
  %mul488.2 = mul nsw i32 %434, %sub414
  %shl490.2 = shl i32 %mul488.2, %sub475
  store i32 %shl490.2, i32* %arrayidx287, align 8, !tbaa !17
  br label %if.else462.3

if.then465.2:                                     ; preds = %if.else462.2
  %435 = load i32* %arrayidx441, align 4, !tbaa !17
  %mul474.2 = mul nsw i32 %435, %sub414
  %shl476.2 = shl i32 %mul474.2, %sub475
  br label %for.inc495.2

if.then430.2:                                     ; preds = %for.inc495.1
  br i1 %10, label %if.then433.2, label %for.inc495.2.thread

for.inc495.2.thread:                              ; preds = %if.then430.2
  %436 = load i32* %arrayidx455, align 4, !tbaa !17
  %mul456.2 = mul nsw i32 %436, %sub414
  %shr458.2 = ashr i32 %mul456.2, %sub443
  store i32 %shr458.2, i32* %arrayidx287, align 8, !tbaa !17
  br label %if.then430.3

if.then433.2:                                     ; preds = %if.then430.2
  %437 = load i32* %arrayidx441, align 4, !tbaa !17
  %mul442.2 = mul nsw i32 %437, %sub414
  %shr444.2 = ashr i32 %mul442.2, %sub443
  br label %for.inc495.2

for.inc495.2:                                     ; preds = %if.then433.2, %if.then465.2
  %storemerge3593 = phi i32 [ %shl476.2, %if.then465.2 ], [ %shr444.2, %if.then433.2 ]
  store i32 %storemerge3593, i32* %arrayidx287, align 8, !tbaa !17
  br i1 %cmp428, label %if.then430.3, label %if.else462.3

if.else462.3:                                     ; preds = %for.inc495.2.thread3591, %for.inc495.2
  %438 = phi i32 [ %shl490.2, %for.inc495.2.thread3591 ], [ %storemerge3593, %for.inc495.2 ]
  br i1 %10, label %if.then465.3, label %if.else479.3

if.else479.3:                                     ; preds = %if.else462.3
  %439 = load i32* %arrayidx455, align 4, !tbaa !17
  %mul488.3 = mul nsw i32 %439, %add422
  %shl490.3 = shl i32 %mul488.3, %sub475
  store i32 %shl490.3, i32* %arrayidx303, align 4, !tbaa !17
  br label %for.inc495.3

if.then465.3:                                     ; preds = %if.else462.3
  %440 = load i32* %arrayidx441, align 4, !tbaa !17
  %mul474.3 = mul nsw i32 %440, %add422
  %shl476.3 = shl i32 %mul474.3, %sub475
  store i32 %shl476.3, i32* %arrayidx303, align 4, !tbaa !17
  br label %for.inc495.3

if.then430.3:                                     ; preds = %for.inc495.2.thread, %for.inc495.2
  %441 = phi i32 [ %shr458.2, %for.inc495.2.thread ], [ %storemerge3593, %for.inc495.2 ]
  br i1 %10, label %if.then433.3, label %if.else447.3

if.else447.3:                                     ; preds = %if.then430.3
  %442 = load i32* %arrayidx455, align 4, !tbaa !17
  %mul456.3 = mul nsw i32 %442, %add422
  %shr458.3 = ashr i32 %mul456.3, %sub443
  store i32 %shr458.3, i32* %arrayidx303, align 4, !tbaa !17
  br label %for.inc495.3

if.then433.3:                                     ; preds = %if.then430.3
  %443 = load i32* %arrayidx441, align 4, !tbaa !17
  %mul442.3 = mul nsw i32 %443, %add422
  %shr444.3 = ashr i32 %mul442.3, %sub443
  store i32 %shr444.3, i32* %arrayidx303, align 4, !tbaa !17
  br label %for.inc495.3

for.inc495.3:                                     ; preds = %if.then433.3, %if.else447.3, %if.then465.3, %if.else479.3
  %444 = phi i32 [ %441, %if.then433.3 ], [ %441, %if.else447.3 ], [ %438, %if.then465.3 ], [ %438, %if.else479.3 ]
  %445 = phi i32 [ %shr444.3, %if.then433.3 ], [ %shr458.3, %if.else447.3 ], [ %shl476.3, %if.then465.3 ], [ %shl490.3, %if.else479.3 ]
  %446 = load %struct.ImageParameters** @img, align 8, !tbaa !1
  %arrayidx501 = getelementptr inbounds %struct.ImageParameters* %446, i64 0, i32 46, i64 0, i64 0
  store i32 %432, i32* %arrayidx501, align 4, !tbaa !17
  %arrayidx505 = getelementptr inbounds %struct.ImageParameters* %446, i64 0, i32 46, i64 4, i64 0
  store i32 %433, i32* %arrayidx505, align 4, !tbaa !17
  %arrayidx509 = getelementptr inbounds %struct.ImageParameters* %446, i64 0, i32 46, i64 0, i64 4
  store i32 %444, i32* %arrayidx509, align 4, !tbaa !17
  %arrayidx513 = getelementptr inbounds %struct.ImageParameters* %446, i64 0, i32 46, i64 4, i64 4
  store i32 %445, i32* %arrayidx513, align 4, !tbaa !17
  br label %if.end1682
}

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #1

; Function Attrs: nounwind uwtable
define i32 @dct_chroma4x4(i32 %uv, i32 %b8, i32 %b4) #0 {
entry:
  %0 = load %struct.ImageParameters** @img, align 8, !tbaa !1
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 3
  %1 = load i32* %current_mb_nr, align 4, !tbaa !8
  %idxprom = sext i32 %1 to i64
  %mb_data = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 51
  %2 = load %struct.macroblock** %mb_data, align 8, !tbaa !28
  %mb_type = getelementptr inbounds %struct.macroblock* %2, i64 %idxprom, i32 8
  %3 = load i32* %mb_type, align 4, !tbaa !49
  %switch.tableidx = add i32 %3, -9
  %4 = icmp ult i32 %switch.tableidx, 5
  br i1 %4, label %switch.lookup, label %lor.end

switch.lookup:                                    ; preds = %entry
  %switch.cast = trunc i32 %switch.tableidx to i5
  %switch.downshift = lshr i5 -13, %switch.cast
  %5 = and i5 %switch.downshift, 1
  %switch.masked = icmp ne i5 %5, 0
  br label %lor.end

lor.end:                                          ; preds = %entry, %switch.lookup
  %6 = phi i1 [ %switch.masked, %switch.lookup ], [ false, %entry ]
  %idxprom5 = sext i32 %b4 to i64
  %idxprom6 = sext i32 %b8 to i64
  %cofAC = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 47
  %7 = load i32***** %cofAC, align 8, !tbaa !42
  %arrayidx7 = getelementptr inbounds i32**** %7, i64 %idxprom6
  %8 = load i32**** %arrayidx7, align 8, !tbaa !1
  %arrayidx8 = getelementptr inbounds i32*** %8, i64 %idxprom5
  %9 = load i32*** %arrayidx8, align 8, !tbaa !1
  %10 = load i32** %9, align 8, !tbaa !1
  %arrayidx15 = getelementptr inbounds i32** %9, i64 1
  %11 = load i32** %arrayidx15, align 8, !tbaa !1
  %qp = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 10
  %12 = load i32* %qp, align 4, !tbaa !41
  %bitdepth_luma_qp_scale = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 151
  %13 = load i32* %bitdepth_luma_qp_scale, align 4, !tbaa !33
  %add = sub i32 0, %13
  %cmp16 = icmp eq i32 %12, %add
  br i1 %cmp16, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %lor.end
  %lossless_qpprime_flag = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 160
  %14 = load i32* %lossless_qpprime_flag, align 4, !tbaa !34
  %cmp17 = icmp eq i32 %14, 1
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.end
  %15 = phi i1 [ false, %lor.end ], [ %cmp17, %land.rhs ]
  %qp18 = getelementptr inbounds %struct.macroblock* %2, i64 %idxprom, i32 3
  %16 = load i32* %qp18, align 4, !tbaa !30
  %idxprom19 = sext i32 %uv to i64
  %arrayidx20 = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 163, i64 %idxprom19
  %17 = load i32* %arrayidx20, align 4, !tbaa !17
  %add21 = add nsw i32 %17, %16
  %cmp22 = icmp slt i32 %add21, 0
  br i1 %cmp22, label %cond.end, label %cond.false

cond.false:                                       ; preds = %land.end
  %idxprom23 = sext i32 %add21 to i64
  %arrayidx24 = getelementptr inbounds [52 x i8]* @QP_SCALE_CR, i64 0, i64 %idxprom23
  %18 = load i8* %arrayidx24, align 1, !tbaa !48
  %conv = zext i8 %18 to i32
  br label %cond.end

cond.end:                                         ; preds = %land.end, %cond.false
  %cond = phi i32 [ %conv, %cond.false ], [ %add21, %land.end ]
  %bitdepth_chroma_qp_scale = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 152
  %19 = load i32* %bitdepth_chroma_qp_scale, align 4, !tbaa !52
  %add25 = add nsw i32 %19, %cond
  %div = sdiv i32 %add25, 6
  %rem = srem i32 %add25, 6
  %add28 = add nsw i32 %div, 15
  br i1 %15, label %if.end166.thread, label %for.cond31.preheader

for.cond31.preheader:                             ; preds = %cond.end, %for.cond31.preheader
  %indvars.iv881 = phi i64 [ %indvars.iv.next882, %for.cond31.preheader ], [ 0, %cond.end ]
  %arrayidx39 = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 46, i64 0, i64 %indvars.iv881
  %20 = load i32* %arrayidx39, align 4, !tbaa !17
  %arrayidx44 = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 46, i64 3, i64 %indvars.iv881
  %21 = load i32* %arrayidx44, align 4, !tbaa !17
  %add45 = add nsw i32 %21, %20
  %sub58 = sub nsw i32 %20, %21
  %arrayidx39.1 = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 46, i64 1, i64 %indvars.iv881
  %22 = load i32* %arrayidx39.1, align 4, !tbaa !17
  %arrayidx44.1 = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 46, i64 2, i64 %indvars.iv881
  %23 = load i32* %arrayidx44.1, align 4, !tbaa !17
  %add45.1 = add nsw i32 %23, %22
  %sub58.1 = sub nsw i32 %22, %23
  %add63 = add nsw i32 %add45.1, %add45
  store i32 %add63, i32* %arrayidx39, align 4, !tbaa !17
  %sub70 = sub nsw i32 %add45, %add45.1
  store i32 %sub70, i32* %arrayidx44.1, align 4, !tbaa !17
  %mul = shl i32 %sub58, 1
  %add77 = add nsw i32 %mul, %sub58.1
  store i32 %add77, i32* %arrayidx39.1, align 4, !tbaa !17
  %mul84 = shl nsw i32 %sub58.1, 1
  %sub85 = sub nsw i32 %sub58, %mul84
  store i32 %sub85, i32* %arrayidx44, align 4, !tbaa !17
  %indvars.iv.next882 = add nuw nsw i64 %indvars.iv881, 1
  %exitcond883 = icmp eq i64 %indvars.iv.next882, 4
  br i1 %exitcond883, label %for.cond99.preheader, label %for.cond31.preheader

for.cond99.preheader:                             ; preds = %for.cond31.preheader, %for.cond99.preheader
  %indvars.iv874 = phi i64 [ %indvars.iv.next875, %for.cond99.preheader ], [ 0, %for.cond31.preheader ]
  %arrayidx108 = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 46, i64 %indvars.iv874, i64 0
  %24 = load i32* %arrayidx108, align 4, !tbaa !17
  %arrayidx113 = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 46, i64 %indvars.iv874, i64 3
  %25 = load i32* %arrayidx113, align 4, !tbaa !17
  %add114 = add nsw i32 %25, %24
  %sub127 = sub nsw i32 %24, %25
  %arrayidx108.1 = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 46, i64 %indvars.iv874, i64 1
  %26 = load i32* %arrayidx108.1, align 4, !tbaa !17
  %arrayidx113.1 = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 46, i64 %indvars.iv874, i64 2
  %27 = load i32* %arrayidx113.1, align 4, !tbaa !17
  %add114.1 = add nsw i32 %27, %26
  %sub127.1 = sub nsw i32 %26, %27
  %add135 = add nsw i32 %add114.1, %add114
  store i32 %add135, i32* %arrayidx108, align 4, !tbaa !17
  %sub142 = sub nsw i32 %add114, %add114.1
  store i32 %sub142, i32* %arrayidx113.1, align 4, !tbaa !17
  %mul148 = shl i32 %sub127, 1
  %add150 = add nsw i32 %mul148, %sub127.1
  store i32 %add150, i32* %arrayidx108.1, align 4, !tbaa !17
  %mul157 = shl nsw i32 %sub127.1, 1
  %sub158 = sub nsw i32 %sub127, %mul157
  store i32 %sub158, i32* %arrayidx113, align 4, !tbaa !17
  %indvars.iv.next875 = add nuw nsw i64 %indvars.iv874, 1
  %exitcond876 = icmp eq i64 %indvars.iv.next875, 4
  br i1 %exitcond876, label %if.else, label %for.cond99.preheader

if.end166.thread:                                 ; preds = %cond.end
  %arrayidx171830 = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 46, i64 0, i64 0
  %28 = load i32* %arrayidx171830, align 4, !tbaa !17
  %ispos828831 = icmp sgt i32 %28, -1
  %neg829832 = sub i32 0, %28
  %29 = select i1 %ispos828831, i32 %28, i32 %neg829832
  br label %if.end214

if.else:                                          ; preds = %for.cond99.preheader
  %arrayidx171 = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 46, i64 0, i64 0
  %30 = load i32* %arrayidx171, align 4, !tbaa !17
  %ispos828 = icmp sgt i32 %30, -1
  %neg829 = sub i32 0, %30
  %31 = select i1 %ispos828, i32 %30, i32 %neg829
  %idxprom179 = sext i32 %rem to i64
  br i1 %6, label %if.then174, label %if.else193

if.then174:                                       ; preds = %if.else
  %arrayidx184 = getelementptr inbounds [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 %idxprom19, i64 %idxprom179, i64 0, i64 0
  %32 = load i32* %arrayidx184, align 4, !tbaa !17
  %mul185 = mul nsw i32 %32, %31
  %idxprom186 = sext i32 %div to i64
  %arrayidx191 = getelementptr inbounds [2 x [13 x [4 x [4 x i32]]]]* @LevelOffset4x4Chroma_Intra, i64 0, i64 %idxprom19, i64 %idxprom186, i64 0, i64 0
  %33 = load i32* %arrayidx191, align 4, !tbaa !17
  %add192 = add nsw i32 %mul185, %33
  %shr = ashr i32 %add192, %add28
  br label %if.end214

if.else193:                                       ; preds = %if.else
  %arrayidx203 = getelementptr inbounds [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 %idxprom19, i64 %idxprom179, i64 0, i64 0
  %34 = load i32* %arrayidx203, align 4, !tbaa !17
  %mul204 = mul nsw i32 %34, %31
  %idxprom205 = sext i32 %div to i64
  %arrayidx210 = getelementptr inbounds [2 x [13 x [4 x [4 x i32]]]]* @LevelOffset4x4Chroma_Inter, i64 0, i64 %idxprom19, i64 %idxprom205, i64 0, i64 0
  %35 = load i32* %arrayidx210, align 4, !tbaa !17
  %add211 = add nsw i32 %mul204, %35
  %shr212 = ashr i32 %add211, %add28
  br label %if.end214

if.end214:                                        ; preds = %if.end166.thread, %if.then174, %if.else193
  %36 = phi i32 [ %30, %if.then174 ], [ %30, %if.else193 ], [ %28, %if.end166.thread ]
  %level.0 = phi i32 [ %shr, %if.then174 ], [ %shr212, %if.else193 ], [ %29, %if.end166.thread ]
  %add215 = shl i32 %uv, 2
  %mul216.neg = sub i32 -4, %add215
  %sub217 = add i32 %mul216.neg, %b8
  %call221 = call i32 @sign(i32 %level.0, i32 %36) #1
  %div222 = sdiv i32 %sub217, 2
  %mul223 = shl i32 %div222, 1
  %div224 = sdiv i32 %b4, 2
  %add225 = add nsw i32 %mul223, %div224
  %idxprom226 = sext i32 %add225 to i64
  %rem227 = srem i32 %sub217, 2
  %mul228 = shl i32 %rem227, 1
  %rem229 = srem i32 %b4, 2
  %add230 = add nsw i32 %mul228, %rem229
  %idxprom231 = sext i32 %add230 to i64
  %arrayidx235 = getelementptr inbounds [2 x [4 x [4 x i32]]]* @dc_level_temp, i64 0, i64 %idxprom19, i64 %idxprom231, i64 %idxprom226
  store i32 %call221, i32* %arrayidx235, align 4, !tbaa !17
  br i1 %15, label %if.then237, label %if.else245

if.then237:                                       ; preds = %if.end214
  %37 = load %struct.ImageParameters** @img, align 8, !tbaa !1
  %arrayidx240 = getelementptr inbounds %struct.ImageParameters* %37, i64 0, i32 46, i64 0, i64 0
  %38 = load i32* %arrayidx240, align 4, !tbaa !17
  %call241 = call i32 @sign(i32 %level.0, i32 %38) #1
  %39 = load %struct.ImageParameters** @img, align 8, !tbaa !1
  %arrayidx244 = getelementptr inbounds %struct.ImageParameters* %39, i64 0, i32 46, i64 0, i64 0
  store i32 %call241, i32* %arrayidx244, align 4, !tbaa !17
  %idxprom445.pre = sext i32 %rem to i64
  br label %for.cond331.preheader

if.else245:                                       ; preds = %if.end214
  %cmp246 = icmp slt i32 %add25, 24
  %idxprom252 = sext i32 %rem to i64
  br i1 %cmp246, label %if.then248, label %if.else291

if.then248:                                       ; preds = %if.else245
  br i1 %6, label %if.then251, label %if.else270

if.then251:                                       ; preds = %if.then248
  %arrayidx257 = getelementptr inbounds [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 %idxprom19, i64 %idxprom252, i64 0, i64 0
  %40 = load i32* %arrayidx257, align 4, !tbaa !17
  %mul258 = mul nsw i32 %40, %level.0
  %sub259 = sub nsw i32 3, %div
  %shl = shl i32 1, %sub259
  %add260 = add nsw i32 %mul258, %shl
  %sub261 = sub nsw i32 4, %div
  %shr262 = ashr i32 %add260, %sub261
  %41 = load %struct.ImageParameters** @img, align 8, !tbaa !1
  %arrayidx265 = getelementptr inbounds %struct.ImageParameters* %41, i64 0, i32 46, i64 0, i64 0
  %42 = load i32* %arrayidx265, align 4, !tbaa !17
  %call266 = call i32 @sign(i32 %shr262, i32 %42) #1
  %43 = load %struct.ImageParameters** @img, align 8, !tbaa !1
  %arrayidx269 = getelementptr inbounds %struct.ImageParameters* %43, i64 0, i32 46, i64 0, i64 0
  store i32 %call266, i32* %arrayidx269, align 4, !tbaa !17
  br label %for.cond331.preheader

if.else270:                                       ; preds = %if.then248
  %arrayidx276 = getelementptr inbounds [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 %idxprom19, i64 %idxprom252, i64 0, i64 0
  %44 = load i32* %arrayidx276, align 4, !tbaa !17
  %mul277 = mul nsw i32 %44, %level.0
  %sub278 = sub nsw i32 3, %div
  %shl279 = shl i32 1, %sub278
  %add280 = add nsw i32 %mul277, %shl279
  %sub281 = sub nsw i32 4, %div
  %shr282 = ashr i32 %add280, %sub281
  %45 = load %struct.ImageParameters** @img, align 8, !tbaa !1
  %arrayidx285 = getelementptr inbounds %struct.ImageParameters* %45, i64 0, i32 46, i64 0, i64 0
  %46 = load i32* %arrayidx285, align 4, !tbaa !17
  %call286 = call i32 @sign(i32 %shr282, i32 %46) #1
  %47 = load %struct.ImageParameters** @img, align 8, !tbaa !1
  %arrayidx289 = getelementptr inbounds %struct.ImageParameters* %47, i64 0, i32 46, i64 0, i64 0
  store i32 %call286, i32* %arrayidx289, align 4, !tbaa !17
  br label %for.cond331.preheader

if.else291:                                       ; preds = %if.else245
  br i1 %6, label %if.then294, label %if.else311

if.then294:                                       ; preds = %if.else291
  %arrayidx300 = getelementptr inbounds [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 %idxprom19, i64 %idxprom252, i64 0, i64 0
  %48 = load i32* %arrayidx300, align 4, !tbaa !17
  %mul301 = mul nsw i32 %48, %level.0
  %sub302 = add nsw i32 %div, -4
  %shl303 = shl i32 %mul301, %sub302
  %49 = load %struct.ImageParameters** @img, align 8, !tbaa !1
  %arrayidx306 = getelementptr inbounds %struct.ImageParameters* %49, i64 0, i32 46, i64 0, i64 0
  %50 = load i32* %arrayidx306, align 4, !tbaa !17
  %call307 = call i32 @sign(i32 %shl303, i32 %50) #1
  %51 = load %struct.ImageParameters** @img, align 8, !tbaa !1
  %arrayidx310 = getelementptr inbounds %struct.ImageParameters* %51, i64 0, i32 46, i64 0, i64 0
  store i32 %call307, i32* %arrayidx310, align 4, !tbaa !17
  br label %for.cond331.preheader

if.else311:                                       ; preds = %if.else291
  %arrayidx317 = getelementptr inbounds [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 %idxprom19, i64 %idxprom252, i64 0, i64 0
  %52 = load i32* %arrayidx317, align 4, !tbaa !17
  %mul318 = mul nsw i32 %52, %level.0
  %sub319 = add nsw i32 %div, -4
  %shl320 = shl i32 %mul318, %sub319
  %53 = load %struct.ImageParameters** @img, align 8, !tbaa !1
  %arrayidx323 = getelementptr inbounds %struct.ImageParameters* %53, i64 0, i32 46, i64 0, i64 0
  %54 = load i32* %arrayidx323, align 4, !tbaa !17
  %call324 = call i32 @sign(i32 %shl320, i32 %54) #1
  %55 = load %struct.ImageParameters** @img, align 8, !tbaa !1
  %arrayidx327 = getelementptr inbounds %struct.ImageParameters* %55, i64 0, i32 46, i64 0, i64 0
  store i32 %call324, i32* %arrayidx327, align 4, !tbaa !17
  br label %for.cond331.preheader

for.cond331.preheader:                            ; preds = %if.else270, %if.then251, %if.else311, %if.then294, %if.then237
  %idxprom445.pre-phi = phi i64 [ %idxprom252, %if.else270 ], [ %idxprom252, %if.then251 ], [ %idxprom252, %if.else311 ], [ %idxprom252, %if.then294 ], [ %idxprom445.pre, %if.then237 ]
  %56 = phi %struct.ImageParameters* [ %47, %if.else270 ], [ %43, %if.then251 ], [ %55, %if.else311 ], [ %51, %if.then294 ], [ %39, %if.then237 ]
  %cmp437 = icmp slt i32 %add25, 24
  %sub452 = sub nsw i32 3, %div
  %shl453 = shl i32 1, %sub452
  %sub455 = sub nsw i32 4, %div
  %sub486 = add nsw i32 %div, -4
  %idxprom373 = sext i32 %div to i64
  br label %for.body334

for.body334:                                      ; preds = %for.inc512.for.body334_crit_edge, %for.cond331.preheader
  %57 = phi %struct.ImageParameters* [ %56, %for.cond331.preheader ], [ %.pre, %for.inc512.for.body334_crit_edge ]
  %indvars.iv867 = phi i64 [ 1, %for.cond331.preheader ], [ %indvars.iv.next868, %for.inc512.for.body334_crit_edge ]
  %nonzeroAC.0849 = phi i32 [ 0, %for.cond331.preheader ], [ %nonzeroAC.2835, %for.inc512.for.body334_crit_edge ]
  %run.0848 = phi i32 [ -1, %for.cond331.preheader ], [ %run.1834, %for.inc512.for.body334_crit_edge ]
  %scan_pos.0847 = phi i32 [ 0, %for.cond331.preheader ], [ %scan_pos.1833, %for.inc512.for.body334_crit_edge ]
  %arrayidx337 = getelementptr inbounds [16 x [2 x i8]]* @SNGL_SCAN, i64 0, i64 %indvars.iv867, i64 0
  %58 = load i8* %arrayidx337, align 2, !tbaa !48
  %arrayidx341 = getelementptr inbounds [16 x [2 x i8]]* @SNGL_SCAN, i64 0, i64 %indvars.iv867, i64 1
  %59 = load i8* %arrayidx341, align 1, !tbaa !48
  %inc343 = add nsw i32 %run.0848, 1
  %idxprom346 = zext i8 %59 to i64
  %idxprom347 = zext i8 %58 to i64
  %arrayidx350 = getelementptr inbounds %struct.ImageParameters* %57, i64 0, i32 46, i64 %idxprom347, i64 %idxprom346
  %60 = load i32* %arrayidx350, align 4, !tbaa !17
  %ispos826 = icmp sgt i32 %60, -1
  %neg827 = sub i32 0, %60
  %61 = select i1 %ispos826, i32 %60, i32 %neg827
  br i1 %15, label %if.end408, label %if.else352

if.else352:                                       ; preds = %for.body334
  br i1 %6, label %if.then355, label %if.else381

if.then355:                                       ; preds = %if.else352
  %arrayidx369 = getelementptr inbounds [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 %idxprom19, i64 %idxprom445.pre-phi, i64 %idxprom347, i64 %idxprom346
  %62 = load i32* %arrayidx369, align 4, !tbaa !17
  %mul370 = mul nsw i32 %62, %61
  %arrayidx378 = getelementptr inbounds [2 x [13 x [4 x [4 x i32]]]]* @LevelOffset4x4Chroma_Intra, i64 0, i64 %idxprom19, i64 %idxprom373, i64 %idxprom347, i64 %idxprom346
  %63 = load i32* %arrayidx378, align 4, !tbaa !17
  %add379 = add nsw i32 %mul370, %63
  %shr380 = ashr i32 %add379, %add28
  br label %if.end408

if.else381:                                       ; preds = %if.else352
  %arrayidx395 = getelementptr inbounds [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 %idxprom19, i64 %idxprom445.pre-phi, i64 %idxprom347, i64 %idxprom346
  %64 = load i32* %arrayidx395, align 4, !tbaa !17
  %mul396 = mul nsw i32 %64, %61
  %arrayidx404 = getelementptr inbounds [2 x [13 x [4 x [4 x i32]]]]* @LevelOffset4x4Chroma_Inter, i64 0, i64 %idxprom19, i64 %idxprom373, i64 %idxprom347, i64 %idxprom346
  %65 = load i32* %arrayidx404, align 4, !tbaa !17
  %add405 = add nsw i32 %mul396, %65
  %shr406 = ashr i32 %add405, %add28
  br label %if.end408

if.end408:                                        ; preds = %for.body334, %if.then355, %if.else381
  %level.1 = phi i32 [ %shr380, %if.then355 ], [ %shr406, %if.else381 ], [ %61, %for.body334 ]
  %cmp409 = icmp eq i32 %level.1, 0
  br i1 %cmp409, label %if.end503, label %if.then411

if.then411:                                       ; preds = %if.end408
  %66 = lshr i64 65534, %indvars.iv867
  %67 = and i64 %66, 1
  %68 = icmp eq i64 %67, 0
  %nonzeroAC.0. = select i1 %68, i32 %nonzeroAC.0849, i32 1
  %call422 = call i32 @sign(i32 %level.1, i32 %60) #1
  %idxprom423 = sext i32 %scan_pos.0847 to i64
  %arrayidx424 = getelementptr inbounds i32* %10, i64 %idxprom423
  store i32 %call422, i32* %arrayidx424, align 4, !tbaa !17
  %arrayidx426 = getelementptr inbounds i32* %11, i64 %idxprom423
  store i32 %inc343, i32* %arrayidx426, align 4, !tbaa !17
  %inc427 = add nsw i32 %scan_pos.0847, 1
  %69 = load %struct.ImageParameters** @img, align 8, !tbaa !1
  %arrayidx432 = getelementptr inbounds %struct.ImageParameters* %69, i64 0, i32 46, i64 %idxprom347, i64 %idxprom346
  %70 = load i32* %arrayidx432, align 4, !tbaa !17
  %call433 = call i32 @sign(i32 %level.1, i32 %70) #1
  br i1 %15, label %for.inc512, label %if.else436

if.else436:                                       ; preds = %if.then411
  br i1 %cmp437, label %if.then439, label %if.else473

if.then439:                                       ; preds = %if.else436
  br i1 %6, label %if.then442, label %if.end503.thread836

if.then442:                                       ; preds = %if.then439
  %arrayidx450 = getelementptr inbounds [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 %idxprom19, i64 %idxprom445.pre-phi, i64 %idxprom347, i64 %idxprom346
  %71 = load i32* %arrayidx450, align 4, !tbaa !17
  %mul451 = mul nsw i32 %71, %call433
  %add454 = add nsw i32 %mul451, %shl453
  %shr456 = ashr i32 %add454, %sub455
  br label %if.end503

if.end503.thread836:                              ; preds = %if.then439
  %arrayidx465 = getelementptr inbounds [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 %idxprom19, i64 %idxprom445.pre-phi, i64 %idxprom347, i64 %idxprom346
  %72 = load i32* %arrayidx465, align 4, !tbaa !17
  %mul466 = mul nsw i32 %72, %call433
  %add469 = add nsw i32 %mul466, %shl453
  %shr471 = ashr i32 %add469, %sub455
  br label %if.then505

if.else473:                                       ; preds = %if.else436
  br i1 %6, label %if.then476, label %if.else488

if.then476:                                       ; preds = %if.else473
  %arrayidx484 = getelementptr inbounds [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 %idxprom19, i64 %idxprom445.pre-phi, i64 %idxprom347, i64 %idxprom346
  %73 = load i32* %arrayidx484, align 4, !tbaa !17
  %mul485 = mul nsw i32 %73, %call433
  %shl487 = shl i32 %mul485, %sub486
  br label %if.end503

if.else488:                                       ; preds = %if.else473
  %arrayidx496 = getelementptr inbounds [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 %idxprom19, i64 %idxprom445.pre-phi, i64 %idxprom347, i64 %idxprom346
  %74 = load i32* %arrayidx496, align 4, !tbaa !17
  %mul497 = mul nsw i32 %74, %call433
  %shl499 = shl i32 %mul497, %sub486
  br label %if.end503

if.end503:                                        ; preds = %if.end408, %if.then476, %if.else488, %if.then442
  %scan_pos.1 = phi i32 [ %inc427, %if.then442 ], [ %inc427, %if.then476 ], [ %inc427, %if.else488 ], [ %scan_pos.0847, %if.end408 ]
  %run.1 = phi i32 [ -1, %if.then442 ], [ -1, %if.then476 ], [ -1, %if.else488 ], [ %inc343, %if.end408 ]
  %nonzeroAC.2 = phi i32 [ %nonzeroAC.0., %if.then442 ], [ %nonzeroAC.0., %if.then476 ], [ %nonzeroAC.0., %if.else488 ], [ %nonzeroAC.0849, %if.end408 ]
  %ilev.0 = phi i32 [ %shr456, %if.then442 ], [ %shl487, %if.then476 ], [ %shl499, %if.else488 ], [ 0, %if.end408 ]
  br i1 %15, label %for.inc512, label %if.then505

if.then505:                                       ; preds = %if.end503.thread836, %if.end503
  %ilev.0840 = phi i32 [ %shr471, %if.end503.thread836 ], [ %ilev.0, %if.end503 ]
  %nonzeroAC.2839 = phi i32 [ %nonzeroAC.0., %if.end503.thread836 ], [ %nonzeroAC.2, %if.end503 ]
  %run.1838 = phi i32 [ -1, %if.end503.thread836 ], [ %run.1, %if.end503 ]
  %scan_pos.1837 = phi i32 [ %inc427, %if.end503.thread836 ], [ %scan_pos.1, %if.end503 ]
  %75 = load %struct.ImageParameters** @img, align 8, !tbaa !1
  %arrayidx510 = getelementptr inbounds %struct.ImageParameters* %75, i64 0, i32 46, i64 %idxprom347, i64 %idxprom346
  store i32 %ilev.0840, i32* %arrayidx510, align 4, !tbaa !17
  br label %for.inc512

for.inc512:                                       ; preds = %if.then411, %if.end503, %if.then505
  %nonzeroAC.2835 = phi i32 [ %nonzeroAC.2, %if.end503 ], [ %nonzeroAC.2839, %if.then505 ], [ %nonzeroAC.0., %if.then411 ]
  %run.1834 = phi i32 [ %run.1, %if.end503 ], [ %run.1838, %if.then505 ], [ -1, %if.then411 ]
  %scan_pos.1833 = phi i32 [ %scan_pos.1, %if.end503 ], [ %scan_pos.1837, %if.then505 ], [ %inc427, %if.then411 ]
  %indvars.iv.next868 = add nuw nsw i64 %indvars.iv867, 1
  %exitcond869 = icmp eq i64 %indvars.iv.next868, 16
  br i1 %exitcond869, label %for.end514, label %for.inc512.for.body334_crit_edge

for.inc512.for.body334_crit_edge:                 ; preds = %for.inc512
  %.pre = load %struct.ImageParameters** @img, align 8, !tbaa !1
  br label %for.body334

for.end514:                                       ; preds = %for.inc512
  %idxprom515 = sext i32 %scan_pos.1833 to i64
  %arrayidx516 = getelementptr inbounds i32* %10, i64 %idxprom515
  store i32 0, i32* %arrayidx516, align 4, !tbaa !17
  br i1 %15, label %if.end660, label %for.cond519.preheader

for.cond519.preheader:                            ; preds = %for.end514
  %76 = load %struct.ImageParameters** @img, align 8, !tbaa !1
  br label %for.cond523.preheader

for.cond523.preheader:                            ; preds = %for.cond523.preheader, %for.cond519.preheader
  %indvars.iv864 = phi i64 [ 0, %for.cond519.preheader ], [ %indvars.iv.next865, %for.cond523.preheader ]
  %arrayidx531 = getelementptr inbounds %struct.ImageParameters* %76, i64 0, i32 46, i64 0, i64 %indvars.iv864
  %77 = load i32* %arrayidx531, align 4, !tbaa !17
  %arrayidx531.1 = getelementptr inbounds %struct.ImageParameters* %76, i64 0, i32 46, i64 1, i64 %indvars.iv864
  %78 = load i32* %arrayidx531.1, align 4, !tbaa !17
  %arrayidx531.2 = getelementptr inbounds %struct.ImageParameters* %76, i64 0, i32 46, i64 2, i64 %indvars.iv864
  %79 = load i32* %arrayidx531.2, align 4, !tbaa !17
  %arrayidx531.3 = getelementptr inbounds %struct.ImageParameters* %76, i64 0, i32 46, i64 3, i64 %indvars.iv864
  %80 = load i32* %arrayidx531.3, align 4, !tbaa !17
  %add539 = add nsw i32 %79, %77
  %sub543 = sub nsw i32 %77, %79
  %shr546 = ashr i32 %78, 1
  %sub548 = sub nsw i32 %shr546, %80
  %shr552 = ashr i32 %80, 1
  %add553 = add nsw i32 %shr552, %78
  %add564 = add nsw i32 %add553, %add539
  store i32 %add564, i32* %arrayidx531, align 4, !tbaa !17
  %sub574 = sub nsw i32 %add539, %add553
  store i32 %sub574, i32* %arrayidx531.3, align 4, !tbaa !17
  %add564.1 = add nsw i32 %sub548, %sub543
  store i32 %add564.1, i32* %arrayidx531.1, align 4, !tbaa !17
  %sub574.1 = sub nsw i32 %sub543, %sub548
  store i32 %sub574.1, i32* %arrayidx531.2, align 4, !tbaa !17
  %indvars.iv.next865 = add nuw nsw i64 %indvars.iv864, 1
  %exitcond866 = icmp eq i64 %indvars.iv.next865, 4
  br i1 %exitcond866, label %for.cond593.preheader, label %for.cond523.preheader

for.cond593.preheader:                            ; preds = %for.cond523.preheader, %for.cond593.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.cond593.preheader ], [ 0, %for.cond523.preheader ]
  %arrayidx601 = getelementptr inbounds %struct.ImageParameters* %76, i64 0, i32 46, i64 %indvars.iv, i64 0
  %81 = load i32* %arrayidx601, align 4, !tbaa !17
  %arrayidx601.1 = getelementptr inbounds %struct.ImageParameters* %76, i64 0, i32 46, i64 %indvars.iv, i64 1
  %82 = load i32* %arrayidx601.1, align 4, !tbaa !17
  %arrayidx601.2 = getelementptr inbounds %struct.ImageParameters* %76, i64 0, i32 46, i64 %indvars.iv, i64 2
  %83 = load i32* %arrayidx601.2, align 4, !tbaa !17
  %arrayidx601.3 = getelementptr inbounds %struct.ImageParameters* %76, i64 0, i32 46, i64 %indvars.iv, i64 3
  %84 = load i32* %arrayidx601.3, align 4, !tbaa !17
  %add609 = add nsw i32 %83, %81
  %sub613 = sub nsw i32 %81, %83
  %shr616 = ashr i32 %82, 1
  %sub618 = sub nsw i32 %shr616, %84
  %shr622 = ashr i32 %84, 1
  %add623 = add nsw i32 %shr622, %82
  %add634 = add i32 %add609, 32
  %add635 = add i32 %add634, %add623
  %add647 = sub i32 %add634, %add623
  %add634.1 = add i32 %sub613, 32
  %add635.1 = add i32 %add634.1, %sub618
  %add647.1 = sub i32 %add634.1, %sub618
  %85 = insertelement <4 x i32> undef, i32 %add635, i32 0
  %86 = insertelement <4 x i32> %85, i32 %add635.1, i32 1
  %87 = insertelement <4 x i32> %86, i32 %add647.1, i32 2
  %88 = insertelement <4 x i32> %87, i32 %add647, i32 3
  %89 = ashr <4 x i32> %88, <i32 6, i32 6, i32 6, i32 6>
  %90 = bitcast i32* %arrayidx601 to <4 x i32>*
  store <4 x i32> %89, <4 x i32>* %90, align 4, !tbaa !17
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 4
  br i1 %exitcond, label %if.end660, label %for.cond593.preheader

if.end660:                                        ; preds = %for.cond593.preheader, %for.end514
  ret i32 %nonzeroAC.2835
}

; Function Attrs: nounwind uwtable
define i32 @dct_chroma_DC(i32 %uv, i32 %cr_cbp) #0 {
entry:
  %add = add nsw i32 %uv, 1
  %idxprom = sext i32 %add to i64
  %0 = load %struct.ImageParameters** @img, align 8, !tbaa !1
  %cofDC = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 48
  %1 = load i32**** %cofDC, align 8, !tbaa !29
  %arrayidx = getelementptr inbounds i32*** %1, i64 %idxprom
  %2 = load i32*** %arrayidx, align 8, !tbaa !1
  %3 = load i32** %2, align 8, !tbaa !1
  %arrayidx6 = getelementptr inbounds i32** %2, i64 1
  %4 = load i32** %arrayidx6, align 8, !tbaa !1
  %idxprom16 = sext i32 %uv to i64
  br label %for.body

for.body:                                         ; preds = %for.inc, %entry
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next, %for.inc ]
  %cr_cbp.addr.058 = phi i32 [ %cr_cbp, %entry ], [ %cr_cbp.addr.1, %for.inc ]
  %run.057 = phi i32 [ -1, %entry ], [ %run.1, %for.inc ]
  %scan_pos.056 = phi i32 [ 0, %entry ], [ %scan_pos.1, %for.inc ]
  %arrayidx9 = getelementptr inbounds [16 x [2 x i8]]* @SNGL_SCAN, i64 0, i64 %indvars.iv, i64 0
  %5 = load i8* %arrayidx9, align 2, !tbaa !48
  %arrayidx12 = getelementptr inbounds [16 x [2 x i8]]* @SNGL_SCAN, i64 0, i64 %indvars.iv, i64 1
  %6 = load i8* %arrayidx12, align 1, !tbaa !48
  %inc = add nsw i32 %run.057, 1
  %idxprom14 = zext i8 %6 to i64
  %idxprom15 = zext i8 %5 to i64
  %arrayidx19 = getelementptr inbounds [2 x [4 x [4 x i32]]]* @dc_level, i64 0, i64 %idxprom16, i64 %idxprom15, i64 %idxprom14
  %7 = load i32* %arrayidx19, align 4, !tbaa !17
  %cmp20 = icmp eq i32 %7, 0
  br i1 %cmp20, label %for.inc, label %if.then

if.then:                                          ; preds = %for.body
  %neg = sub i32 0, %7
  %ispos = icmp sgt i32 %7, -1
  %8 = select i1 %ispos, i32 %7, i32 %neg
  %cmp22 = icmp slt i32 %cr_cbp.addr.058, 1
  %cond = select i1 %cmp22, i32 1, i32 %cr_cbp.addr.058
  %call30 = tail call i32 @sign(i32 %8, i32 %7) #1
  %idxprom31 = sext i32 %scan_pos.056 to i64
  %arrayidx32 = getelementptr inbounds i32* %3, i64 %idxprom31
  store i32 %call30, i32* %arrayidx32, align 4, !tbaa !17
  %arrayidx34 = getelementptr inbounds i32* %4, i64 %idxprom31
  store i32 %inc, i32* %arrayidx34, align 4, !tbaa !17
  %inc35 = add nsw i32 %scan_pos.056, 1
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.then
  %scan_pos.1 = phi i32 [ %inc35, %if.then ], [ %scan_pos.056, %for.body ]
  %run.1 = phi i32 [ -1, %if.then ], [ %inc, %for.body ]
  %cr_cbp.addr.1 = phi i32 [ %cond, %if.then ], [ %cr_cbp.addr.058, %for.body ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 16
  br i1 %exitcond, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc
  %idxprom37 = sext i32 %scan_pos.1 to i64
  %arrayidx38 = getelementptr inbounds i32* %3, i64 %idxprom37
  store i32 0, i32* %arrayidx38, align 4, !tbaa !17
  ret i32 %cr_cbp.addr.1
}

; Function Attrs: nounwind uwtable
define i32 @dct_luma_sp(i32 %block_x, i32 %block_y, i32* nocapture %coeff_cost) #0 {
entry:
  %m5 = alloca <4 x i32>, align 16
  %tmpcast = bitcast <4 x i32>* %m5 to [4 x i32]*
  %predicted_block = alloca [4 x [4 x i32]], align 16
  %len = alloca i32, align 4
  %info = alloca i32, align 4
  %0 = bitcast [4 x [4 x i32]]* %predicted_block to i8*
  call void @llvm.lifetime.start(i64 64, i8* %0) #1
  %div = sdiv i32 %block_x, 4
  %div1 = sdiv i32 %block_y, 4
  %div2 = sdiv i32 %block_y, 8
  %mul = shl i32 %div2, 1
  %div3 = sdiv i32 %block_x, 8
  %add = add nsw i32 %mul, %div3
  %rem = srem i32 %div1, 2
  %mul4 = shl i32 %rem, 1
  %rem5 = srem i32 %div, 2
  %add6 = add nsw i32 %mul4, %rem5
  %idxprom = sext i32 %add6 to i64
  %idxprom7 = sext i32 %add to i64
  %1 = load %struct.ImageParameters** @img, align 8, !tbaa !1
  %cofAC = getelementptr inbounds %struct.ImageParameters* %1, i64 0, i32 47
  %2 = load i32***** %cofAC, align 8, !tbaa !42
  %arrayidx = getelementptr inbounds i32**** %2, i64 %idxprom7
  %3 = load i32**** %arrayidx, align 8, !tbaa !1
  %arrayidx8 = getelementptr inbounds i32*** %3, i64 %idxprom
  %4 = load i32*** %arrayidx8, align 8, !tbaa !1
  %5 = load i32** %4, align 8, !tbaa !1
  %arrayidx15 = getelementptr inbounds i32** %4, i64 1
  %6 = load i32** %arrayidx15, align 8, !tbaa !1
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters* %1, i64 0, i32 3
  %7 = load i32* %current_mb_nr, align 4, !tbaa !8
  %idxprom16 = sext i32 %7 to i64
  %mb_data = getelementptr inbounds %struct.ImageParameters* %1, i64 0, i32 51
  %8 = load %struct.macroblock** %mb_data, align 8, !tbaa !28
  %qp = getelementptr inbounds %struct.macroblock* %8, i64 %idxprom16, i32 3
  %9 = load i32* %qp, align 4, !tbaa !30
  %sub = add nsw i32 %9, -12
  %conv = sitofp i32 %sub to double
  %div18 = fdiv double %conv, 3.000000e+00
  %exp2 = call double @exp2(double %div18) #3
  %mul19 = fmul double %exp2, 8.500000e-01
  %10 = load i32* %qp, align 4, !tbaa !30
  %div23 = sdiv i32 %10, 6
  %add27 = add nsw i32 %div23, 15
  %qpsp = getelementptr inbounds %struct.macroblock* %8, i64 %idxprom16, i32 4
  %11 = load i32* %qpsp, align 4, !tbaa !61
  %div29 = sdiv i32 %11, 6
  %add33 = add nsw i32 %div29, 15
  %shl = shl i32 1, %add27
  %shl35 = shl i32 1, %add33
  %12 = load %struct.ImageParameters** @img, align 8, !tbaa !1
  %13 = sext i32 %block_x to i64
  %14 = sext i32 %block_y to i64
  br label %for.cond38.preheader

for.cond38.preheader:                             ; preds = %for.cond38.preheader, %entry
  %indvars.iv1221 = phi i64 [ 0, %entry ], [ %indvars.iv.next1222, %for.cond38.preheader ]
  %15 = add nsw i64 %indvars.iv1221, %14
  %arrayidx47 = getelementptr inbounds %struct.ImageParameters* %12, i64 0, i32 45, i64 %13, i64 %15
  %16 = load i16* %arrayidx47, align 2, !tbaa !21
  %conv48 = zext i16 %16 to i32
  %arrayidx52 = getelementptr inbounds %struct.ImageParameters* %12, i64 0, i32 46, i64 0, i64 %indvars.iv1221
  %17 = load i32* %arrayidx52, align 4, !tbaa !17
  %add53 = add nsw i32 %17, %conv48
  store i32 %add53, i32* %arrayidx52, align 4, !tbaa !17
  %18 = load i16* %arrayidx47, align 2, !tbaa !21
  %conv61 = zext i16 %18 to i32
  %arrayidx65 = getelementptr inbounds [4 x [4 x i32]]* %predicted_block, i64 0, i64 0, i64 %indvars.iv1221
  store i32 %conv61, i32* %arrayidx65, align 4, !tbaa !17
  %19 = add nsw i64 %13, 1
  %arrayidx47.1 = getelementptr inbounds %struct.ImageParameters* %12, i64 0, i32 45, i64 %19, i64 %15
  %20 = load i16* %arrayidx47.1, align 2, !tbaa !21
  %conv48.1 = zext i16 %20 to i32
  %arrayidx52.1 = getelementptr inbounds %struct.ImageParameters* %12, i64 0, i32 46, i64 1, i64 %indvars.iv1221
  %21 = load i32* %arrayidx52.1, align 4, !tbaa !17
  %add53.1 = add nsw i32 %21, %conv48.1
  store i32 %add53.1, i32* %arrayidx52.1, align 4, !tbaa !17
  %22 = load i16* %arrayidx47.1, align 2, !tbaa !21
  %conv61.1 = zext i16 %22 to i32
  %arrayidx65.1 = getelementptr inbounds [4 x [4 x i32]]* %predicted_block, i64 0, i64 1, i64 %indvars.iv1221
  store i32 %conv61.1, i32* %arrayidx65.1, align 4, !tbaa !17
  %23 = add nsw i64 %13, 2
  %arrayidx47.2 = getelementptr inbounds %struct.ImageParameters* %12, i64 0, i32 45, i64 %23, i64 %15
  %24 = load i16* %arrayidx47.2, align 2, !tbaa !21
  %conv48.2 = zext i16 %24 to i32
  %arrayidx52.2 = getelementptr inbounds %struct.ImageParameters* %12, i64 0, i32 46, i64 2, i64 %indvars.iv1221
  %25 = load i32* %arrayidx52.2, align 4, !tbaa !17
  %add53.2 = add nsw i32 %25, %conv48.2
  store i32 %add53.2, i32* %arrayidx52.2, align 4, !tbaa !17
  %26 = load i16* %arrayidx47.2, align 2, !tbaa !21
  %conv61.2 = zext i16 %26 to i32
  %arrayidx65.2 = getelementptr inbounds [4 x [4 x i32]]* %predicted_block, i64 0, i64 2, i64 %indvars.iv1221
  store i32 %conv61.2, i32* %arrayidx65.2, align 4, !tbaa !17
  %27 = add nsw i64 %13, 3
  %arrayidx47.3 = getelementptr inbounds %struct.ImageParameters* %12, i64 0, i32 45, i64 %27, i64 %15
  %28 = load i16* %arrayidx47.3, align 2, !tbaa !21
  %conv48.3 = zext i16 %28 to i32
  %arrayidx52.3 = getelementptr inbounds %struct.ImageParameters* %12, i64 0, i32 46, i64 3, i64 %indvars.iv1221
  %29 = load i32* %arrayidx52.3, align 4, !tbaa !17
  %add53.3 = add nsw i32 %29, %conv48.3
  store i32 %add53.3, i32* %arrayidx52.3, align 4, !tbaa !17
  %30 = load i16* %arrayidx47.3, align 2, !tbaa !21
  %conv61.3 = zext i16 %30 to i32
  %arrayidx65.3 = getelementptr inbounds [4 x [4 x i32]]* %predicted_block, i64 0, i64 3, i64 %indvars.iv1221
  store i32 %conv61.3, i32* %arrayidx65.3, align 4, !tbaa !17
  %indvars.iv.next1222 = add nuw nsw i64 %indvars.iv1221, 1
  %exitcond1224 = icmp eq i64 %indvars.iv.next1222, 4
  br i1 %exitcond1224, label %for.cond69.preheader, label %for.cond38.preheader

for.cond69.preheader:                             ; preds = %for.cond38.preheader
  %mul20 = fmul double %mul19, 4.000000e+00
  %rem26 = srem i32 %10, 6
  %rem32 = srem i32 %11, 6
  %div34 = sdiv i32 %shl, 6
  %div36 = sdiv i32 %shl35, 2
  %arrayidx107 = getelementptr inbounds <4 x i32>* %m5, i64 0, i64 0
  %arrayidx108 = getelementptr inbounds [4 x i32]* %tmpcast, i64 0, i64 1
  %arrayidx121 = getelementptr inbounds [4 x i32]* %tmpcast, i64 0, i64 3
  %arrayidx123 = getelementptr inbounds [4 x i32]* %tmpcast, i64 0, i64 2
  br label %for.cond73.preheader

for.cond73.preheader:                             ; preds = %for.cond73.preheader, %for.cond69.preheader
  %indvars.iv1214 = phi i64 [ 0, %for.cond69.preheader ], [ %indvars.iv.next1215, %for.cond73.preheader ]
  %arrayidx82 = getelementptr inbounds %struct.ImageParameters* %12, i64 0, i32 46, i64 0, i64 %indvars.iv1214
  %31 = load i32* %arrayidx82, align 4, !tbaa !17
  %arrayidx87 = getelementptr inbounds %struct.ImageParameters* %12, i64 0, i32 46, i64 3, i64 %indvars.iv1214
  %32 = load i32* %arrayidx87, align 4, !tbaa !17
  %add88 = add nsw i32 %32, %31
  store i32 %add88, i32* %arrayidx107, align 16, !tbaa !17
  %33 = load i32* %arrayidx82, align 4, !tbaa !17
  %34 = load i32* %arrayidx87, align 4, !tbaa !17
  %sub101 = sub nsw i32 %33, %34
  store i32 %sub101, i32* %arrayidx121, align 4, !tbaa !17
  %arrayidx82.1 = getelementptr inbounds %struct.ImageParameters* %12, i64 0, i32 46, i64 1, i64 %indvars.iv1214
  %35 = load i32* %arrayidx82.1, align 4, !tbaa !17
  %arrayidx87.1 = getelementptr inbounds %struct.ImageParameters* %12, i64 0, i32 46, i64 2, i64 %indvars.iv1214
  %36 = load i32* %arrayidx87.1, align 4, !tbaa !17
  %add88.1 = add nsw i32 %36, %35
  store i32 %add88.1, i32* %arrayidx108, align 4, !tbaa !17
  %37 = load i32* %arrayidx82.1, align 4, !tbaa !17
  %38 = load i32* %arrayidx87.1, align 4, !tbaa !17
  %sub101.1 = sub nsw i32 %37, %38
  store i32 %sub101.1, i32* %arrayidx123, align 8, !tbaa !17
  %add109 = add nsw i32 %add88.1, %add88
  store i32 %add109, i32* %arrayidx82, align 4, !tbaa !17
  %39 = bitcast <4 x i32>* %m5 to i64*
  %40 = load i64* %39, align 16
  %41 = trunc i64 %40 to i32
  %42 = lshr i64 %40, 32
  %43 = trunc i64 %42 to i32
  %sub116 = sub nsw i32 %41, %43
  store i32 %sub116, i32* %arrayidx87.1, align 4, !tbaa !17
  %44 = load i32* %arrayidx121, align 4, !tbaa !17
  %mul122 = shl i32 %44, 1
  %45 = load i32* %arrayidx123, align 8, !tbaa !17
  %add124 = add nsw i32 %mul122, %45
  store i32 %add124, i32* %arrayidx82.1, align 4, !tbaa !17
  %46 = load i32* %arrayidx121, align 4, !tbaa !17
  %47 = load i32* %arrayidx123, align 8, !tbaa !17
  %mul131 = shl nsw i32 %47, 1
  %sub132 = sub nsw i32 %46, %mul131
  store i32 %sub132, i32* %arrayidx87, align 4, !tbaa !17
  %indvars.iv.next1215 = add nuw nsw i64 %indvars.iv1214, 1
  %exitcond1216 = icmp eq i64 %indvars.iv.next1215, 4
  br i1 %exitcond1216, label %for.cond144.preheader, label %for.cond73.preheader

for.cond144.preheader:                            ; preds = %for.cond73.preheader, %for.cond144.preheader
  %indvars.iv1207 = phi i64 [ %indvars.iv.next1208, %for.cond144.preheader ], [ 0, %for.cond73.preheader ]
  %arrayidx153 = getelementptr inbounds %struct.ImageParameters* %12, i64 0, i32 46, i64 %indvars.iv1207, i64 0
  %48 = load i32* %arrayidx153, align 4, !tbaa !17
  %arrayidx158 = getelementptr inbounds %struct.ImageParameters* %12, i64 0, i32 46, i64 %indvars.iv1207, i64 3
  %49 = load i32* %arrayidx158, align 4, !tbaa !17
  %add159 = add nsw i32 %49, %48
  store i32 %add159, i32* %arrayidx107, align 16, !tbaa !17
  %50 = load i32* %arrayidx153, align 4, !tbaa !17
  %51 = load i32* %arrayidx158, align 4, !tbaa !17
  %sub172 = sub nsw i32 %50, %51
  store i32 %sub172, i32* %arrayidx121, align 4, !tbaa !17
  %arrayidx153.1 = getelementptr inbounds %struct.ImageParameters* %12, i64 0, i32 46, i64 %indvars.iv1207, i64 1
  %52 = load i32* %arrayidx153.1, align 4, !tbaa !17
  %arrayidx158.1 = getelementptr inbounds %struct.ImageParameters* %12, i64 0, i32 46, i64 %indvars.iv1207, i64 2
  %53 = load i32* %arrayidx158.1, align 4, !tbaa !17
  %add159.1 = add nsw i32 %53, %52
  store i32 %add159.1, i32* %arrayidx108, align 4, !tbaa !17
  %54 = load i32* %arrayidx153.1, align 4, !tbaa !17
  %55 = load i32* %arrayidx158.1, align 4, !tbaa !17
  %sub172.1 = sub nsw i32 %54, %55
  store i32 %sub172.1, i32* %arrayidx123, align 8, !tbaa !17
  %add180 = add nsw i32 %add159.1, %add159
  store i32 %add180, i32* %arrayidx153, align 4, !tbaa !17
  %56 = load i64* %39, align 16
  %57 = trunc i64 %56 to i32
  %58 = lshr i64 %56, 32
  %59 = trunc i64 %58 to i32
  %sub187 = sub nsw i32 %57, %59
  store i32 %sub187, i32* %arrayidx158.1, align 4, !tbaa !17
  %60 = load i32* %arrayidx121, align 4, !tbaa !17
  %mul193 = shl i32 %60, 1
  %61 = load i32* %arrayidx123, align 8, !tbaa !17
  %add195 = add nsw i32 %mul193, %61
  store i32 %add195, i32* %arrayidx153.1, align 4, !tbaa !17
  %62 = load i32* %arrayidx121, align 4, !tbaa !17
  %63 = load i32* %arrayidx123, align 8, !tbaa !17
  %mul202 = shl nsw i32 %63, 1
  %sub203 = sub nsw i32 %62, %mul202
  store i32 %sub203, i32* %arrayidx158, align 4, !tbaa !17
  %indvars.iv.next1208 = add nuw nsw i64 %indvars.iv1207, 1
  %exitcond1209 = icmp eq i64 %indvars.iv.next1208, 4
  br i1 %exitcond1209, label %for.cond215.preheader, label %for.cond144.preheader

for.cond215.preheader:                            ; preds = %for.cond144.preheader, %for.cond215.preheader
  %indvars.iv1200 = phi i64 [ %indvars.iv.next1201, %for.cond215.preheader ], [ 0, %for.cond144.preheader ]
  %arrayidx223 = getelementptr inbounds [4 x [4 x i32]]* %predicted_block, i64 0, i64 0, i64 %indvars.iv1200
  %64 = load i32* %arrayidx223, align 4, !tbaa !17
  %arrayidx227 = getelementptr inbounds [4 x [4 x i32]]* %predicted_block, i64 0, i64 3, i64 %indvars.iv1200
  %65 = load i32* %arrayidx227, align 4, !tbaa !17
  %add228 = add nsw i32 %65, %64
  store i32 %add228, i32* %arrayidx107, align 16, !tbaa !17
  %sub239 = sub nsw i32 %64, %65
  store i32 %sub239, i32* %arrayidx121, align 4, !tbaa !17
  %arrayidx223.1 = getelementptr inbounds [4 x [4 x i32]]* %predicted_block, i64 0, i64 1, i64 %indvars.iv1200
  %66 = load i32* %arrayidx223.1, align 4, !tbaa !17
  %arrayidx227.1 = getelementptr inbounds [4 x [4 x i32]]* %predicted_block, i64 0, i64 2, i64 %indvars.iv1200
  %67 = load i32* %arrayidx227.1, align 4, !tbaa !17
  %add228.1 = add nsw i32 %67, %66
  store i32 %add228.1, i32* %arrayidx108, align 4, !tbaa !17
  %sub239.1 = sub nsw i32 %66, %67
  store i32 %sub239.1, i32* %arrayidx123, align 8, !tbaa !17
  %add247 = add nsw i32 %add228.1, %add228
  store i32 %add247, i32* %arrayidx223, align 4, !tbaa !17
  %sub253 = sub nsw i32 %add228, %add228.1
  store i32 %sub253, i32* %arrayidx227.1, align 4, !tbaa !17
  %mul258 = shl i32 %sub239, 1
  %add260 = add nsw i32 %mul258, %sub239.1
  store i32 %add260, i32* %arrayidx223.1, align 4, !tbaa !17
  %mul266 = shl nsw i32 %sub239.1, 1
  %sub267 = sub nsw i32 %sub239, %mul266
  store i32 %sub267, i32* %arrayidx227, align 4, !tbaa !17
  %indvars.iv.next1201 = add nuw nsw i64 %indvars.iv1200, 1
  %exitcond1202 = icmp eq i64 %indvars.iv.next1201, 4
  br i1 %exitcond1202, label %for.cond278.preheader, label %for.cond215.preheader

for.cond278.preheader:                            ; preds = %for.cond215.preheader, %for.cond278.preheader
  %indvars.iv1193 = phi i64 [ %indvars.iv.next1194, %for.cond278.preheader ], [ 0, %for.cond215.preheader ]
  %arrayidx286 = getelementptr inbounds [4 x [4 x i32]]* %predicted_block, i64 0, i64 %indvars.iv1193, i64 0
  %68 = load i32* %arrayidx286, align 16, !tbaa !17
  %arrayidx290 = getelementptr inbounds [4 x [4 x i32]]* %predicted_block, i64 0, i64 %indvars.iv1193, i64 3
  %69 = load i32* %arrayidx290, align 4, !tbaa !17
  %add291 = add nsw i32 %69, %68
  store i32 %add291, i32* %arrayidx107, align 16, !tbaa !17
  %sub302 = sub nsw i32 %68, %69
  store i32 %sub302, i32* %arrayidx121, align 4, !tbaa !17
  %arrayidx286.1 = getelementptr inbounds [4 x [4 x i32]]* %predicted_block, i64 0, i64 %indvars.iv1193, i64 1
  %70 = load i32* %arrayidx286.1, align 4, !tbaa !17
  %arrayidx290.1 = getelementptr inbounds [4 x [4 x i32]]* %predicted_block, i64 0, i64 %indvars.iv1193, i64 2
  %71 = load i32* %arrayidx290.1, align 8, !tbaa !17
  %add291.1 = add nsw i32 %71, %70
  store i32 %add291.1, i32* %arrayidx108, align 4, !tbaa !17
  %sub302.1 = sub nsw i32 %70, %71
  store i32 %sub302.1, i32* %arrayidx123, align 8, !tbaa !17
  %add310 = add nsw i32 %add291.1, %add291
  store i32 %add310, i32* %arrayidx286, align 16, !tbaa !17
  %sub316 = sub nsw i32 %add291, %add291.1
  store i32 %sub316, i32* %arrayidx290.1, align 8, !tbaa !17
  %mul321 = shl i32 %sub302, 1
  %add323 = add nsw i32 %mul321, %sub302.1
  store i32 %add323, i32* %arrayidx286.1, align 4, !tbaa !17
  %mul329 = shl nsw i32 %sub302.1, 1
  %sub330 = sub nsw i32 %sub302, %mul329
  store i32 %sub330, i32* %arrayidx290, align 4, !tbaa !17
  %indvars.iv.next1194 = add nuw nsw i64 %indvars.iv1193, 1
  %exitcond1195 = icmp eq i64 %indvars.iv.next1194, 4
  br i1 %exitcond1195, label %for.cond337.preheader, label %for.cond278.preheader

for.cond337.preheader:                            ; preds = %for.cond278.preheader
  %idxprom367 = sext i32 %rem32 to i64
  %idxprom395 = sext i32 %rem26 to i64
  br label %for.body340

for.body340:                                      ; preds = %if.end568, %for.cond337.preheader
  %72 = phi %struct.ImageParameters* [ %12, %for.cond337.preheader ], [ %102, %if.end568 ]
  %indvars.iv1186 = phi i64 [ 0, %for.cond337.preheader ], [ %indvars.iv.next1187, %if.end568 ]
  %scan_pos.01146 = phi i32 [ 0, %for.cond337.preheader ], [ %scan_pos.1, %if.end568 ]
  %run.01145 = phi i32 [ -1, %for.cond337.preheader ], [ %run.1, %if.end568 ]
  %nonzero.01144 = phi i32 [ 0, %for.cond337.preheader ], [ %nonzero.1, %if.end568 ]
  %field_picture = getelementptr inbounds %struct.ImageParameters* %72, i64 0, i32 100
  %73 = load i32* %field_picture, align 4, !tbaa !38
  %tobool = icmp eq i32 %73, 0
  br i1 %tobool, label %lor.lhs.false, label %if.end

lor.lhs.false:                                    ; preds = %for.body340
  %74 = load i32* @mb_adaptive, align 4, !tbaa !17
  %tobool341 = icmp eq i32 %74, 0
  br i1 %tobool341, label %if.else, label %land.lhs.true

land.lhs.true:                                    ; preds = %lor.lhs.false
  %field_mode = getelementptr inbounds %struct.ImageParameters* %72, i64 0, i32 81
  %75 = load i32* %field_mode, align 4, !tbaa !39
  %tobool342 = icmp eq i32 %75, 0
  br i1 %tobool342, label %if.else, label %if.end

if.else:                                          ; preds = %land.lhs.true, %lor.lhs.false
  br label %if.end

if.end:                                           ; preds = %for.body340, %land.lhs.true, %if.else
  %FIELD_SCAN.pn = phi [16 x [2 x i8]]* [ @SNGL_SCAN, %if.else ], [ @FIELD_SCAN, %land.lhs.true ], [ @FIELD_SCAN, %for.body340 ]
  %i.5.in.in = getelementptr inbounds [16 x [2 x i8]]* %FIELD_SCAN.pn, i64 0, i64 %indvars.iv1186, i64 0
  %j.5.in.in = getelementptr inbounds [16 x [2 x i8]]* %FIELD_SCAN.pn, i64 0, i64 %indvars.iv1186, i64 1
  %i.5.in = load i8* %i.5.in.in, align 2
  %j.5.in = load i8* %j.5.in.in, align 1
  %inc359 = add nsw i32 %run.01145, 1
  %idxprom360 = zext i8 %j.5.in to i64
  %idxprom361 = zext i8 %i.5.in to i64
  %arrayidx363 = getelementptr inbounds [4 x [4 x i32]]* %predicted_block, i64 0, i64 %idxprom361, i64 %idxprom360
  %76 = load i32* %arrayidx363, align 4, !tbaa !17
  %ispos = icmp sgt i32 %76, -1
  %neg = sub i32 0, %76
  %77 = select i1 %ispos, i32 %76, i32 %neg
  %arrayidx370 = getelementptr inbounds [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom367, i64 %idxprom361, i64 %idxprom360
  %78 = load i32* %arrayidx370, align 4, !tbaa !17
  %mul371 = mul nsw i32 %77, %78
  %add372 = add nsw i32 %mul371, %div36
  %shr = ashr i32 %add372, %add33
  %shl373 = shl i32 %shr, %add33
  %div380 = sdiv i32 %shl373, %78
  %arrayidx385 = getelementptr inbounds %struct.ImageParameters* %72, i64 0, i32 46, i64 %idxprom361, i64 %idxprom360
  %79 = load i32* %arrayidx385, align 4, !tbaa !17
  %call390 = call i32 @sign(i32 %div380, i32 %76) #1
  %sub391 = sub nsw i32 %79, %call390
  %ispos1123 = icmp sgt i32 %sub391, -1
  %neg1124 = sub i32 0, %sub391
  %80 = select i1 %ispos1123, i32 %sub391, i32 %neg1124
  %arrayidx398 = getelementptr inbounds [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom395, i64 %idxprom361, i64 %idxprom360
  %81 = load i32* %arrayidx398, align 4, !tbaa !17
  %mul399 = mul nsw i32 %80, %81
  %add400 = add nsw i32 %mul399, %div34
  %shr401 = ashr i32 %add400, %add27
  %82 = load %struct.ImageParameters** @img, align 8, !tbaa !1
  %arrayidx406 = getelementptr inbounds %struct.ImageParameters* %82, i64 0, i32 46, i64 %idxprom361, i64 %idxprom360
  %83 = load i32* %arrayidx406, align 4, !tbaa !17
  %sub411 = sub i32 %83, %76
  %ispos1125 = icmp sgt i32 %sub411, -1
  %neg1126 = sub i32 0, %sub411
  %84 = select i1 %ispos1125, i32 %sub411, i32 %neg1126
  %mul419 = mul nsw i32 %84, %81
  %add420 = add nsw i32 %mul419, %div34
  %shr421 = ashr i32 %add420, %add27
  %cmp422 = icmp ne i32 %shr401, %shr421
  %cmp425 = icmp ne i32 %shr401, 0
  %or.cond = and i1 %cmp422, %cmp425
  %cmp428 = icmp ne i32 %shr421, 0
  %or.cond850 = and i1 %or.cond, %cmp428
  br i1 %or.cond850, label %if.then430, label %if.else513

if.then430:                                       ; preds = %if.end
  %call436 = call i32 @sign(i32 %shr401, i32 %sub391) #1
  %arrayidx442 = getelementptr inbounds [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom395, i64 %idxprom361, i64 %idxprom360
  %85 = load i32* %arrayidx442, align 4, !tbaa !17
  %mul443 = mul nsw i32 %85, %call436
  %arrayidx447 = getelementptr inbounds [4 x [4 x i32]]* @A, i64 0, i64 %idxprom361, i64 %idxprom360
  %86 = load i32* %arrayidx447, align 4, !tbaa !17
  %mul448 = mul nsw i32 %mul443, %86
  %shl449 = shl i32 %mul448, %div23
  %shr450 = ashr i32 %shl449, 6
  %sub456 = sub i32 %sub411, %shr450
  %conv457 = sitofp i32 %sub456 to double
  call void @levrun_linfo_inter(i32 %shr401, i32 %inc359, i32* %len, i32* %info) #1
  %mul458 = fmul double %conv457, %conv457
  %87 = load i32* %len, align 4, !tbaa !17
  %conv459 = sitofp i32 %87 to double
  %mul460 = fmul double %mul20, %conv459
  %add461 = fadd double %mul460, %mul458
  %88 = load %struct.ImageParameters** @img, align 8, !tbaa !1
  %arrayidx466 = getelementptr inbounds %struct.ImageParameters* %88, i64 0, i32 46, i64 %idxprom361, i64 %idxprom360
  %89 = load i32* %arrayidx466, align 4, !tbaa !17
  %call467 = call i32 @sign(i32 %shr421, i32 %sub411) #1
  %mul474 = mul nsw i32 %85, %call467
  %mul479 = mul nsw i32 %mul474, %86
  %shl480 = shl i32 %mul479, %div23
  %shr481 = ashr i32 %shl480, 6
  %sub482 = sub i32 %89, %76
  %sub487 = sub i32 %sub482, %shr481
  %conv488 = sitofp i32 %sub487 to double
  call void @levrun_linfo_inter(i32 %shr421, i32 %inc359, i32* %len, i32* %info) #1
  %mul489 = fmul double %conv488, %conv488
  %90 = load i32* %len, align 4, !tbaa !17
  %conv490 = sitofp i32 %90 to double
  %mul491 = fmul double %mul20, %conv490
  %add492 = fadd double %mul491, %mul489
  %cmp493 = fcmp oeq double %add461, %add492
  br i1 %cmp493, label %if.then495, label %if.else500

if.then495:                                       ; preds = %if.then430
  %ispos1129 = icmp sgt i32 %shr401, -1
  %neg1130 = sub i32 0, %shr401
  %91 = select i1 %ispos1129, i32 %shr401, i32 %neg1130
  %ispos1131 = icmp sgt i32 %shr421, -1
  %neg1132 = sub i32 0, %shr421
  %92 = select i1 %ispos1131, i32 %shr421, i32 %neg1132
  %cmp498 = icmp slt i32 %91, %92
  br label %if.end506

if.else500:                                       ; preds = %if.then430
  %cmp501 = fcmp olt double %add461, %add492
  br label %if.end506

if.end506:                                        ; preds = %if.else500, %if.then495
  %cmp498.sink = phi i1 [ %cmp498, %if.then495 ], [ %cmp501, %if.else500 ]
  %cond = select i1 %cmp498.sink, i32 %shr401, i32 %shr421
  %cmp507 = icmp eq i32 %cond, %shr401
  %cond512 = select i1 %cmp507, i32 %sub391, i32 %sub411
  br label %if.end531

if.else513:                                       ; preds = %if.end
  %cmp514 = icmp eq i32 %shr401, %shr421
  br i1 %cmp514, label %if.end531, label %if.else517

if.else517:                                       ; preds = %if.else513
  %cmp518 = icmp eq i32 %shr401, 0
  %cond529 = select i1 %cmp518, i32 %sub391, i32 %sub411
  br i1 %cmp518, label %if.end568, label %if.end531

if.end531:                                        ; preds = %if.else517, %if.else513, %if.end506
  %c_err.0 = phi i32 [ %cond512, %if.end506 ], [ %cond529, %if.else517 ], [ %sub391, %if.else513 ]
  %level.1 = phi i32 [ %cond, %if.end506 ], [ %shr421, %if.else517 ], [ %shr401, %if.else513 ]
  %cmp532 = icmp eq i32 %level.1, 0
  br i1 %cmp532, label %if.end568, label %if.then534

if.then534:                                       ; preds = %if.end531
  %cmp535 = icmp sgt i32 %level.1, 1
  br i1 %cmp535, label %if.then537, label %if.else539

if.then537:                                       ; preds = %if.then534
  %93 = load i32* %coeff_cost, align 4, !tbaa !17
  %add538 = add nsw i32 %93, 999999
  br label %if.end546

if.else539:                                       ; preds = %if.then534
  %idxprom540 = sext i32 %inc359 to i64
  %94 = load %struct.InputParameters** @input, align 8, !tbaa !1
  %disthres = getelementptr inbounds %struct.InputParameters* %94, i64 0, i32 86
  %95 = load i32* %disthres, align 4, !tbaa !47
  %idxprom541 = sext i32 %95 to i64
  %arrayidx543 = getelementptr inbounds [2 x [16 x i8]]* @COEFF_COST, i64 0, i64 %idxprom541, i64 %idxprom540
  %96 = load i8* %arrayidx543, align 1, !tbaa !48
  %conv544 = zext i8 %96 to i32
  %97 = load i32* %coeff_cost, align 4, !tbaa !17
  %add545 = add nsw i32 %97, %conv544
  br label %if.end546

if.end546:                                        ; preds = %if.else539, %if.then537
  %storemerge = phi i32 [ %add545, %if.else539 ], [ %add538, %if.then537 ]
  store i32 %storemerge, i32* %coeff_cost, align 4, !tbaa !17
  %call547 = call i32 @sign(i32 %level.1, i32 %c_err.0) #1
  %idxprom548 = sext i32 %scan_pos.01146 to i64
  %arrayidx549 = getelementptr inbounds i32* %5, i64 %idxprom548
  store i32 %call547, i32* %arrayidx549, align 4, !tbaa !17
  %arrayidx551 = getelementptr inbounds i32* %6, i64 %idxprom548
  store i32 %inc359, i32* %arrayidx551, align 4, !tbaa !17
  %inc552 = add nsw i32 %scan_pos.01146, 1
  %call553 = call i32 @sign(i32 %level.1, i32 %c_err.0) #1
  %arrayidx559 = getelementptr inbounds [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom395, i64 %idxprom361, i64 %idxprom360
  %98 = load i32* %arrayidx559, align 4, !tbaa !17
  %mul560 = mul nsw i32 %98, %call553
  %arrayidx564 = getelementptr inbounds [4 x [4 x i32]]* @A, i64 0, i64 %idxprom361, i64 %idxprom360
  %99 = load i32* %arrayidx564, align 4, !tbaa !17
  %mul565 = mul nsw i32 %mul560, %99
  %shl566 = shl i32 %mul565, %div23
  %shr567 = ashr i32 %shl566, 6
  br label %if.end568

if.end568:                                        ; preds = %if.else517, %if.end531, %if.end546
  %nonzero.1 = phi i32 [ 1, %if.end546 ], [ %nonzero.01144, %if.end531 ], [ %nonzero.01144, %if.else517 ]
  %run.1 = phi i32 [ -1, %if.end546 ], [ %inc359, %if.end531 ], [ %inc359, %if.else517 ]
  %scan_pos.1 = phi i32 [ %inc552, %if.end546 ], [ %scan_pos.01146, %if.end531 ], [ %scan_pos.01146, %if.else517 ]
  %ilev.0 = phi i32 [ %shr567, %if.end546 ], [ 0, %if.end531 ], [ 0, %if.else517 ]
  %add573 = add nsw i32 %76, %ilev.0
  %ispos1127 = icmp sgt i32 %add573, -1
  %neg1128 = sub i32 0, %add573
  %100 = select i1 %ispos1127, i32 %add573, i32 %neg1128
  %mul581 = mul nsw i32 %100, %78
  %add582 = add nsw i32 %mul581, %div36
  %shr583 = ashr i32 %add582, %add33
  %call584 = call i32 @sign(i32 %shr583, i32 %add573) #1
  %arrayidx590 = getelementptr inbounds [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom367, i64 %idxprom361, i64 %idxprom360
  %101 = load i32* %arrayidx590, align 4, !tbaa !17
  %mul591 = mul nsw i32 %101, %call584
  %shl592 = shl i32 %mul591, %div29
  %102 = load %struct.ImageParameters** @img, align 8, !tbaa !1
  %arrayidx597 = getelementptr inbounds %struct.ImageParameters* %102, i64 0, i32 46, i64 %idxprom361, i64 %idxprom360
  store i32 %shl592, i32* %arrayidx597, align 4, !tbaa !17
  %indvars.iv.next1187 = add nuw nsw i64 %indvars.iv1186, 1
  %exitcond1188 = icmp eq i64 %indvars.iv.next1187, 16
  br i1 %exitcond1188, label %for.end600, label %for.body340

for.end600:                                       ; preds = %if.end568
  %idxprom601 = sext i32 %scan_pos.1 to i64
  %arrayidx602 = getelementptr inbounds i32* %5, i64 %idxprom601
  store i32 0, i32* %arrayidx602, align 4, !tbaa !17
  br label %for.cond607.preheader

for.cond607.preheader:                            ; preds = %for.cond607.preheader, %for.end600
  %indvars.iv1183 = phi i64 [ 0, %for.end600 ], [ %indvars.iv.next1184, %for.cond607.preheader ]
  %arrayidx615 = getelementptr inbounds %struct.ImageParameters* %102, i64 0, i32 46, i64 0, i64 %indvars.iv1183
  %103 = load i32* %arrayidx615, align 4, !tbaa !17
  store i32 %103, i32* %arrayidx107, align 16, !tbaa !17
  %arrayidx615.1 = getelementptr inbounds %struct.ImageParameters* %102, i64 0, i32 46, i64 1, i64 %indvars.iv1183
  %104 = load i32* %arrayidx615.1, align 4, !tbaa !17
  store i32 %104, i32* %arrayidx108, align 4, !tbaa !17
  %arrayidx615.2 = getelementptr inbounds %struct.ImageParameters* %102, i64 0, i32 46, i64 2, i64 %indvars.iv1183
  %105 = load i32* %arrayidx615.2, align 4, !tbaa !17
  store i32 %105, i32* %arrayidx123, align 8, !tbaa !17
  %arrayidx615.3 = getelementptr inbounds %struct.ImageParameters* %102, i64 0, i32 46, i64 3, i64 %indvars.iv1183
  %106 = load i32* %arrayidx615.3, align 4, !tbaa !17
  store i32 %106, i32* %arrayidx121, align 4, !tbaa !17
  %add623 = add nsw i32 %105, %103
  %sub627 = sub nsw i32 %103, %105
  %shr630 = ashr i32 %104, 1
  %sub632 = sub nsw i32 %shr630, %106
  %shr636 = ashr i32 %106, 1
  %add637 = add nsw i32 %shr636, %104
  %add648 = add nsw i32 %add637, %add623
  store i32 %add648, i32* %arrayidx615, align 4, !tbaa !17
  %sub658 = sub nsw i32 %add623, %add637
  store i32 %sub658, i32* %arrayidx615.3, align 4, !tbaa !17
  %add648.1 = add nsw i32 %sub632, %sub627
  store i32 %add648.1, i32* %arrayidx615.1, align 4, !tbaa !17
  %sub658.1 = sub nsw i32 %sub627, %sub632
  store i32 %sub658.1, i32* %arrayidx615.2, align 4, !tbaa !17
  %indvars.iv.next1184 = add nuw nsw i64 %indvars.iv1183, 1
  %exitcond1185 = icmp eq i64 %indvars.iv.next1184, 4
  br i1 %exitcond1185, label %for.cond670.preheader, label %for.cond607.preheader

for.cond670.preheader:                            ; preds = %for.cond607.preheader
  %max_imgpel_value = getelementptr inbounds %struct.ImageParameters* %102, i64 0, i32 155
  %.pre = load i32* %max_imgpel_value, align 4, !tbaa !24
  %107 = insertelement <4 x i32> undef, i32 %.pre, i32 0
  %108 = insertelement <4 x i32> %107, i32 %.pre, i32 1
  %109 = insertelement <4 x i32> %108, i32 %.pre, i32 2
  %110 = insertelement <4 x i32> %109, i32 %.pre, i32 3
  %111 = insertelement <4 x i32> undef, i32 %.pre, i32 0
  %112 = insertelement <4 x i32> %111, i32 %.pre, i32 1
  %113 = insertelement <4 x i32> %112, i32 %.pre, i32 2
  %114 = insertelement <4 x i32> %113, i32 %.pre, i32 3
  br label %for.cond674.preheader

for.cond674.preheader:                            ; preds = %for.cond674.preheader, %for.cond670.preheader
  %indvars.iv = phi i64 [ 0, %for.cond670.preheader ], [ %indvars.iv.next, %for.cond674.preheader ]
  %arrayidx682 = getelementptr inbounds %struct.ImageParameters* %102, i64 0, i32 46, i64 %indvars.iv, i64 0
  %115 = bitcast i32* %arrayidx682 to <4 x i32>*
  %116 = load <4 x i32>* %115, align 4, !tbaa !17
  store <4 x i32> %116, <4 x i32>* %m5, align 16, !tbaa !17
  %117 = extractelement <4 x i32> %116, i32 0
  %118 = extractelement <4 x i32> %116, i32 2
  %add690 = add nsw i32 %118, %117
  %sub694 = sub nsw i32 %117, %118
  %119 = extractelement <4 x i32> %116, i32 1
  %shr697 = ashr i32 %119, 1
  %120 = extractelement <4 x i32> %116, i32 3
  %sub699 = sub nsw i32 %shr697, %120
  %shr703 = ashr i32 %120, 1
  %add704 = add nsw i32 %shr703, %119
  %add715 = add i32 %add690, 32
  %add716 = add i32 %add715, %add704
  %add769 = sub i32 %add715, %add704
  %add715.1 = add i32 %sub694, 32
  %add716.1 = add i32 %add715.1, %sub699
  %add769.1 = sub i32 %add715.1, %sub699
  %121 = insertelement <4 x i32> undef, i32 %add716, i32 0
  %122 = insertelement <4 x i32> %121, i32 %add716.1, i32 1
  %123 = insertelement <4 x i32> %122, i32 %add769.1, i32 2
  %124 = insertelement <4 x i32> %123, i32 %add769, i32 3
  %125 = ashr <4 x i32> %124, <i32 6, i32 6, i32 6, i32 6>
  %126 = icmp slt <4 x i32> %125, zeroinitializer
  %127 = select <4 x i1> %126, <4 x i32> zeroinitializer, <4 x i32> %125
  %128 = icmp slt <4 x i32> %110, %127
  %129 = select <4 x i1> %128, <4 x i32> %114, <4 x i32> %127
  %130 = bitcast i32* %arrayidx682 to <4 x i32>*
  store <4 x i32> %129, <4 x i32>* %130, align 4, !tbaa !17
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 4
  br i1 %exitcond, label %for.cond822.preheader, label %for.cond674.preheader

for.cond822.preheader:                            ; preds = %for.cond674.preheader
  %pix_x = getelementptr inbounds %struct.ImageParameters* %102, i64 0, i32 33
  %131 = load i32* %pix_x, align 4, !tbaa !43
  %pix_y = getelementptr inbounds %struct.ImageParameters* %102, i64 0, i32 34
  %132 = load i32* %pix_y, align 4, !tbaa !44
  %133 = load %struct.storable_picture** @enc_picture, align 8, !tbaa !1
  %imgY = getelementptr inbounds %struct.storable_picture* %133, i64 0, i32 25
  %134 = load i16*** %imgY, align 8, !tbaa !5
  %add840 = add i32 %132, %block_y
  %idxprom841 = sext i32 %add840 to i64
  %arrayidx842 = getelementptr inbounds i16** %134, i64 %idxprom841
  %135 = load i16** %arrayidx842, align 8, !tbaa !1
  %arrayidx834 = getelementptr inbounds %struct.ImageParameters* %102, i64 0, i32 46, i64 0, i64 0
  %136 = load i32* %arrayidx834, align 4, !tbaa !17
  %conv835 = trunc i32 %136 to i16
  %add837 = add i32 %131, %block_x
  %idxprom838 = sext i32 %add837 to i64
  %arrayidx843 = getelementptr inbounds i16* %135, i64 %idxprom838
  store i16 %conv835, i16* %arrayidx843, align 2, !tbaa !21
  %arrayidx834.1 = getelementptr inbounds %struct.ImageParameters* %102, i64 0, i32 46, i64 1, i64 0
  %137 = load i32* %arrayidx834.1, align 4, !tbaa !17
  %conv835.1 = trunc i32 %137 to i16
  %add836.1 = add i32 %block_x, 1
  %add837.1 = add i32 %add836.1, %131
  %idxprom838.1 = sext i32 %add837.1 to i64
  %arrayidx843.1 = getelementptr inbounds i16* %135, i64 %idxprom838.1
  store i16 %conv835.1, i16* %arrayidx843.1, align 2, !tbaa !21
  %arrayidx834.2 = getelementptr inbounds %struct.ImageParameters* %102, i64 0, i32 46, i64 2, i64 0
  %138 = load i32* %arrayidx834.2, align 4, !tbaa !17
  %conv835.2 = trunc i32 %138 to i16
  %add836.2 = add i32 %block_x, 2
  %add837.2 = add i32 %add836.2, %131
  %idxprom838.2 = sext i32 %add837.2 to i64
  %arrayidx843.2 = getelementptr inbounds i16* %135, i64 %idxprom838.2
  store i16 %conv835.2, i16* %arrayidx843.2, align 2, !tbaa !21
  %arrayidx834.3 = getelementptr inbounds %struct.ImageParameters* %102, i64 0, i32 46, i64 3, i64 0
  %139 = load i32* %arrayidx834.3, align 4, !tbaa !17
  %conv835.3 = trunc i32 %139 to i16
  %add836.3 = add i32 %block_x, 3
  %add837.3 = add i32 %add836.3, %131
  %idxprom838.3 = sext i32 %add837.3 to i64
  %arrayidx843.3 = getelementptr inbounds i16* %135, i64 %idxprom838.3
  store i16 %conv835.3, i16* %arrayidx843.3, align 2, !tbaa !21
  %add839.1 = add i32 %block_y, 1
  %add840.1 = add i32 %add839.1, %132
  %idxprom841.1 = sext i32 %add840.1 to i64
  %arrayidx842.1 = getelementptr inbounds i16** %134, i64 %idxprom841.1
  %140 = load i16** %arrayidx842.1, align 8, !tbaa !1
  %arrayidx834.11159 = getelementptr inbounds %struct.ImageParameters* %102, i64 0, i32 46, i64 0, i64 1
  %141 = load i32* %arrayidx834.11159, align 4, !tbaa !17
  %conv835.11160 = trunc i32 %141 to i16
  %arrayidx843.11163 = getelementptr inbounds i16* %140, i64 %idxprom838
  store i16 %conv835.11160, i16* %arrayidx843.11163, align 2, !tbaa !21
  %arrayidx834.1.1 = getelementptr inbounds %struct.ImageParameters* %102, i64 0, i32 46, i64 1, i64 1
  %142 = load i32* %arrayidx834.1.1, align 4, !tbaa !17
  %conv835.1.1 = trunc i32 %142 to i16
  %arrayidx843.1.1 = getelementptr inbounds i16* %140, i64 %idxprom838.1
  store i16 %conv835.1.1, i16* %arrayidx843.1.1, align 2, !tbaa !21
  %arrayidx834.2.1 = getelementptr inbounds %struct.ImageParameters* %102, i64 0, i32 46, i64 2, i64 1
  %143 = load i32* %arrayidx834.2.1, align 4, !tbaa !17
  %conv835.2.1 = trunc i32 %143 to i16
  %arrayidx843.2.1 = getelementptr inbounds i16* %140, i64 %idxprom838.2
  store i16 %conv835.2.1, i16* %arrayidx843.2.1, align 2, !tbaa !21
  %arrayidx834.3.1 = getelementptr inbounds %struct.ImageParameters* %102, i64 0, i32 46, i64 3, i64 1
  %144 = load i32* %arrayidx834.3.1, align 4, !tbaa !17
  %conv835.3.1 = trunc i32 %144 to i16
  %arrayidx843.3.1 = getelementptr inbounds i16* %140, i64 %idxprom838.3
  store i16 %conv835.3.1, i16* %arrayidx843.3.1, align 2, !tbaa !21
  %add839.2 = add i32 %block_y, 2
  %add840.2 = add i32 %add839.2, %132
  %idxprom841.2 = sext i32 %add840.2 to i64
  %arrayidx842.2 = getelementptr inbounds i16** %134, i64 %idxprom841.2
  %145 = load i16** %arrayidx842.2, align 8, !tbaa !1
  %arrayidx834.21164 = getelementptr inbounds %struct.ImageParameters* %102, i64 0, i32 46, i64 0, i64 2
  %146 = load i32* %arrayidx834.21164, align 4, !tbaa !17
  %conv835.21165 = trunc i32 %146 to i16
  %arrayidx843.21168 = getelementptr inbounds i16* %145, i64 %idxprom838
  store i16 %conv835.21165, i16* %arrayidx843.21168, align 2, !tbaa !21
  %arrayidx834.1.2 = getelementptr inbounds %struct.ImageParameters* %102, i64 0, i32 46, i64 1, i64 2
  %147 = load i32* %arrayidx834.1.2, align 4, !tbaa !17
  %conv835.1.2 = trunc i32 %147 to i16
  %arrayidx843.1.2 = getelementptr inbounds i16* %145, i64 %idxprom838.1
  store i16 %conv835.1.2, i16* %arrayidx843.1.2, align 2, !tbaa !21
  %arrayidx834.2.2 = getelementptr inbounds %struct.ImageParameters* %102, i64 0, i32 46, i64 2, i64 2
  %148 = load i32* %arrayidx834.2.2, align 4, !tbaa !17
  %conv835.2.2 = trunc i32 %148 to i16
  %arrayidx843.2.2 = getelementptr inbounds i16* %145, i64 %idxprom838.2
  store i16 %conv835.2.2, i16* %arrayidx843.2.2, align 2, !tbaa !21
  %arrayidx834.3.2 = getelementptr inbounds %struct.ImageParameters* %102, i64 0, i32 46, i64 3, i64 2
  %149 = load i32* %arrayidx834.3.2, align 4, !tbaa !17
  %conv835.3.2 = trunc i32 %149 to i16
  %arrayidx843.3.2 = getelementptr inbounds i16* %145, i64 %idxprom838.3
  store i16 %conv835.3.2, i16* %arrayidx843.3.2, align 2, !tbaa !21
  %add839.3 = add i32 %block_y, 3
  %add840.3 = add i32 %add839.3, %132
  %idxprom841.3 = sext i32 %add840.3 to i64
  %arrayidx842.3 = getelementptr inbounds i16** %134, i64 %idxprom841.3
  %150 = load i16** %arrayidx842.3, align 8, !tbaa !1
  %arrayidx834.31169 = getelementptr inbounds %struct.ImageParameters* %102, i64 0, i32 46, i64 0, i64 3
  %151 = load i32* %arrayidx834.31169, align 4, !tbaa !17
  %conv835.31170 = trunc i32 %151 to i16
  %arrayidx843.31173 = getelementptr inbounds i16* %150, i64 %idxprom838
  store i16 %conv835.31170, i16* %arrayidx843.31173, align 2, !tbaa !21
  %arrayidx834.1.3 = getelementptr inbounds %struct.ImageParameters* %102, i64 0, i32 46, i64 1, i64 3
  %152 = load i32* %arrayidx834.1.3, align 4, !tbaa !17
  %conv835.1.3 = trunc i32 %152 to i16
  %arrayidx843.1.3 = getelementptr inbounds i16* %150, i64 %idxprom838.1
  store i16 %conv835.1.3, i16* %arrayidx843.1.3, align 2, !tbaa !21
  %arrayidx834.2.3 = getelementptr inbounds %struct.ImageParameters* %102, i64 0, i32 46, i64 2, i64 3
  %153 = load i32* %arrayidx834.2.3, align 4, !tbaa !17
  %conv835.2.3 = trunc i32 %153 to i16
  %arrayidx843.2.3 = getelementptr inbounds i16* %150, i64 %idxprom838.2
  store i16 %conv835.2.3, i16* %arrayidx843.2.3, align 2, !tbaa !21
  %arrayidx834.3.3 = getelementptr inbounds %struct.ImageParameters* %102, i64 0, i32 46, i64 3, i64 3
  %154 = load i32* %arrayidx834.3.3, align 4, !tbaa !17
  %conv835.3.3 = trunc i32 %154 to i16
  %arrayidx843.3.3 = getelementptr inbounds i16* %150, i64 %idxprom838.3
  store i16 %conv835.3.3, i16* %arrayidx843.3.3, align 2, !tbaa !21
  call void @llvm.lifetime.end(i64 64, i8* %0) #1
  ret i32 %nonzero.1
}

declare void @levrun_linfo_inter(i32, i32, i32*, i32*) #2

; Function Attrs: nounwind uwtable
define i32 @dct_chroma_sp(i32 %uv, i32 %cr_cbp) #0 {
entry:
  %m1 = alloca [4 x i32], align 16
  %m5 = alloca <4 x i32>, align 16
  %tmpcast = bitcast <4 x i32>* %m5 to [4 x i32]*
  %predicted_chroma_block = alloca [8 x [8 x i32]], align 16
  %mp1 = alloca [4 x i32], align 16
  %len = alloca i32, align 4
  %info = alloca i32, align 4
  %0 = bitcast [8 x [8 x i32]]* %predicted_chroma_block to i8*
  call void @llvm.lifetime.start(i64 256, i8* %0) #1
  %1 = load %struct.ImageParameters** @img, align 8, !tbaa !1
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters* %1, i64 0, i32 3
  %2 = load i32* %current_mb_nr, align 4, !tbaa !8
  %idxprom = sext i32 %2 to i64
  %mb_data = getelementptr inbounds %struct.ImageParameters* %1, i64 0, i32 51
  %3 = load %struct.macroblock** %mb_data, align 8, !tbaa !28
  %add = add nsw i32 %uv, 1
  %idxprom1 = sext i32 %add to i64
  %cofDC = getelementptr inbounds %struct.ImageParameters* %1, i64 0, i32 48
  %4 = load i32**** %cofDC, align 8, !tbaa !29
  %arrayidx2 = getelementptr inbounds i32*** %4, i64 %idxprom1
  %5 = load i32*** %arrayidx2, align 8, !tbaa !1
  %6 = load i32** %5, align 8, !tbaa !1
  %arrayidx8 = getelementptr inbounds i32** %5, i64 1
  %7 = load i32** %arrayidx8, align 8, !tbaa !1
  %qp = getelementptr inbounds %struct.macroblock* %3, i64 %idxprom, i32 3
  %8 = load i32* %qp, align 4, !tbaa !30
  %sub = add nsw i32 %8, -12
  %conv = sitofp i32 %sub to double
  %div = fdiv double %conv, 3.000000e+00
  %exp2 = call double @exp2(double %div) #3
  %mul = fmul double %exp2, 8.500000e-01
  %mul9 = fmul double %mul, 4.000000e+00
  %9 = load i32* %qp, align 4, !tbaa !30
  %10 = load %struct.pic_parameter_set_rbsp_t** @active_pps, align 8, !tbaa !1
  %chroma_qp_index_offset = getelementptr inbounds %struct.pic_parameter_set_rbsp_t* %10, i64 0, i32 23
  %11 = load i32* %chroma_qp_index_offset, align 4, !tbaa !62
  %add11 = add nsw i32 %11, %9
  %cmp = icmp slt i32 %add11, 0
  br i1 %cmp, label %cond.end23, label %cond.false

cond.false:                                       ; preds = %entry
  %cmp16 = icmp sgt i32 %add11, 51
  %.add11 = select i1 %cmp16, i32 51, i32 %add11
  br label %cond.end23

cond.end23:                                       ; preds = %cond.false, %entry
  %cond24 = phi i32 [ 0, %entry ], [ %.add11, %cond.false ]
  %qpsp = getelementptr inbounds %struct.macroblock* %3, i64 %idxprom, i32 4
  %12 = load i32* %qpsp, align 4, !tbaa !61
  %add26 = add nsw i32 %11, %12
  %cmp27 = icmp slt i32 %add26, 0
  br i1 %cmp27, label %cond.end43, label %cond.false30

cond.false30:                                     ; preds = %cond.end23
  %cmp34 = icmp sgt i32 %add26, 51
  %.add26 = select i1 %cmp34, i32 51, i32 %add26
  br label %cond.end43

cond.end43:                                       ; preds = %cond.false30, %cond.end23
  %cond44 = phi i32 [ 0, %cond.end23 ], [ %.add26, %cond.false30 ]
  %cmp45 = icmp slt i32 %cond24, 0
  br i1 %cmp45, label %cond.end52.thread, label %cond.false59

cond.end52.thread:                                ; preds = %cond.end43
  %div551954 = sdiv i32 %cond24, 6
  br label %cond.end63

cond.false59:                                     ; preds = %cond.end43
  %idxprom49 = sext i32 %cond24 to i64
  %arrayidx50 = getelementptr inbounds [52 x i8]* @QP_SCALE_CR, i64 0, i64 %idxprom49
  %13 = load i8* %arrayidx50, align 1, !tbaa !48
  %div1963 = udiv i8 %13, 6
  %div55 = zext i8 %div1963 to i32
  %conv62 = zext i8 %13 to i32
  br label %cond.end63

cond.end63:                                       ; preds = %cond.end52.thread, %cond.false59
  %div551955 = phi i32 [ %div55, %cond.false59 ], [ %div551954, %cond.end52.thread ]
  %cond64 = phi i32 [ %conv62, %cond.false59 ], [ %cond24, %cond.end52.thread ]
  %rem = srem i32 %cond64, 6
  %add66 = add nsw i32 %div551955, 15
  %shl = shl i32 1, %add66
  %div67 = sdiv i32 %shl, 6
  %cmp68 = icmp slt i32 %cond44, 0
  br i1 %cmp68, label %cond.true82, label %cond.false84

cond.true82:                                      ; preds = %cond.end63
  %div791956 = sdiv i32 %12, 6
  br label %cond.end88

cond.false84:                                     ; preds = %cond.end63
  %idxprom73 = sext i32 %cond44 to i64
  %arrayidx74 = getelementptr inbounds [52 x i8]* @QP_SCALE_CR, i64 0, i64 %idxprom73
  %14 = load i8* %arrayidx74, align 1, !tbaa !48
  %div1964 = udiv i8 %14, 6
  %div79 = zext i8 %div1964 to i32
  %conv87 = zext i8 %14 to i32
  br label %cond.end88

cond.end88:                                       ; preds = %cond.false84, %cond.true82
  %div791957 = phi i32 [ %div791956, %cond.true82 ], [ %div79, %cond.false84 ]
  %cond89 = phi i32 [ %12, %cond.true82 ], [ %conv87, %cond.false84 ]
  %add92 = add nsw i32 %div791957, 15
  %shl93 = shl i32 1, %add92
  %15 = load %struct.ImageParameters** @img, align 8, !tbaa !1
  br label %for.cond97.preheader

for.cond97.preheader:                             ; preds = %for.cond97.preheader, %cond.end88
  %indvars.iv2134 = phi i64 [ 0, %cond.end88 ], [ %indvars.iv.next2135, %for.cond97.preheader ]
  %arrayidx104 = getelementptr inbounds %struct.ImageParameters* %15, i64 0, i32 45, i64 0, i64 %indvars.iv2134
  %16 = load i16* %arrayidx104, align 2, !tbaa !21
  %conv105 = zext i16 %16 to i32
  %arrayidx109 = getelementptr inbounds %struct.ImageParameters* %15, i64 0, i32 46, i64 0, i64 %indvars.iv2134
  %17 = load i32* %arrayidx109, align 4, !tbaa !17
  %add110 = add nsw i32 %17, %conv105
  store i32 %add110, i32* %arrayidx109, align 4, !tbaa !17
  %18 = load i16* %arrayidx104, align 2, !tbaa !21
  %conv116 = zext i16 %18 to i32
  %arrayidx120 = getelementptr inbounds [8 x [8 x i32]]* %predicted_chroma_block, i64 0, i64 0, i64 %indvars.iv2134
  store i32 %conv116, i32* %arrayidx120, align 4, !tbaa !17
  %arrayidx104.1 = getelementptr inbounds %struct.ImageParameters* %15, i64 0, i32 45, i64 1, i64 %indvars.iv2134
  %19 = load i16* %arrayidx104.1, align 2, !tbaa !21
  %conv105.1 = zext i16 %19 to i32
  %arrayidx109.1 = getelementptr inbounds %struct.ImageParameters* %15, i64 0, i32 46, i64 1, i64 %indvars.iv2134
  %20 = load i32* %arrayidx109.1, align 4, !tbaa !17
  %add110.1 = add nsw i32 %20, %conv105.1
  store i32 %add110.1, i32* %arrayidx109.1, align 4, !tbaa !17
  %21 = load i16* %arrayidx104.1, align 2, !tbaa !21
  %conv116.1 = zext i16 %21 to i32
  %arrayidx120.1 = getelementptr inbounds [8 x [8 x i32]]* %predicted_chroma_block, i64 0, i64 1, i64 %indvars.iv2134
  store i32 %conv116.1, i32* %arrayidx120.1, align 4, !tbaa !17
  %arrayidx104.2 = getelementptr inbounds %struct.ImageParameters* %15, i64 0, i32 45, i64 2, i64 %indvars.iv2134
  %22 = load i16* %arrayidx104.2, align 2, !tbaa !21
  %conv105.2 = zext i16 %22 to i32
  %arrayidx109.2 = getelementptr inbounds %struct.ImageParameters* %15, i64 0, i32 46, i64 2, i64 %indvars.iv2134
  %23 = load i32* %arrayidx109.2, align 4, !tbaa !17
  %add110.2 = add nsw i32 %23, %conv105.2
  store i32 %add110.2, i32* %arrayidx109.2, align 4, !tbaa !17
  %24 = load i16* %arrayidx104.2, align 2, !tbaa !21
  %conv116.2 = zext i16 %24 to i32
  %arrayidx120.2 = getelementptr inbounds [8 x [8 x i32]]* %predicted_chroma_block, i64 0, i64 2, i64 %indvars.iv2134
  store i32 %conv116.2, i32* %arrayidx120.2, align 4, !tbaa !17
  %arrayidx104.3 = getelementptr inbounds %struct.ImageParameters* %15, i64 0, i32 45, i64 3, i64 %indvars.iv2134
  %25 = load i16* %arrayidx104.3, align 2, !tbaa !21
  %conv105.3 = zext i16 %25 to i32
  %arrayidx109.3 = getelementptr inbounds %struct.ImageParameters* %15, i64 0, i32 46, i64 3, i64 %indvars.iv2134
  %26 = load i32* %arrayidx109.3, align 4, !tbaa !17
  %add110.3 = add nsw i32 %26, %conv105.3
  store i32 %add110.3, i32* %arrayidx109.3, align 4, !tbaa !17
  %27 = load i16* %arrayidx104.3, align 2, !tbaa !21
  %conv116.3 = zext i16 %27 to i32
  %arrayidx120.3 = getelementptr inbounds [8 x [8 x i32]]* %predicted_chroma_block, i64 0, i64 3, i64 %indvars.iv2134
  store i32 %conv116.3, i32* %arrayidx120.3, align 4, !tbaa !17
  %arrayidx104.4 = getelementptr inbounds %struct.ImageParameters* %15, i64 0, i32 45, i64 4, i64 %indvars.iv2134
  %28 = load i16* %arrayidx104.4, align 2, !tbaa !21
  %conv105.4 = zext i16 %28 to i32
  %arrayidx109.4 = getelementptr inbounds %struct.ImageParameters* %15, i64 0, i32 46, i64 4, i64 %indvars.iv2134
  %29 = load i32* %arrayidx109.4, align 4, !tbaa !17
  %add110.4 = add nsw i32 %29, %conv105.4
  store i32 %add110.4, i32* %arrayidx109.4, align 4, !tbaa !17
  %30 = load i16* %arrayidx104.4, align 2, !tbaa !21
  %conv116.4 = zext i16 %30 to i32
  %arrayidx120.4 = getelementptr inbounds [8 x [8 x i32]]* %predicted_chroma_block, i64 0, i64 4, i64 %indvars.iv2134
  store i32 %conv116.4, i32* %arrayidx120.4, align 4, !tbaa !17
  %arrayidx104.5 = getelementptr inbounds %struct.ImageParameters* %15, i64 0, i32 45, i64 5, i64 %indvars.iv2134
  %31 = load i16* %arrayidx104.5, align 2, !tbaa !21
  %conv105.5 = zext i16 %31 to i32
  %arrayidx109.5 = getelementptr inbounds %struct.ImageParameters* %15, i64 0, i32 46, i64 5, i64 %indvars.iv2134
  %32 = load i32* %arrayidx109.5, align 4, !tbaa !17
  %add110.5 = add nsw i32 %32, %conv105.5
  store i32 %add110.5, i32* %arrayidx109.5, align 4, !tbaa !17
  %33 = load i16* %arrayidx104.5, align 2, !tbaa !21
  %conv116.5 = zext i16 %33 to i32
  %arrayidx120.5 = getelementptr inbounds [8 x [8 x i32]]* %predicted_chroma_block, i64 0, i64 5, i64 %indvars.iv2134
  store i32 %conv116.5, i32* %arrayidx120.5, align 4, !tbaa !17
  %arrayidx104.6 = getelementptr inbounds %struct.ImageParameters* %15, i64 0, i32 45, i64 6, i64 %indvars.iv2134
  %34 = load i16* %arrayidx104.6, align 2, !tbaa !21
  %conv105.6 = zext i16 %34 to i32
  %arrayidx109.6 = getelementptr inbounds %struct.ImageParameters* %15, i64 0, i32 46, i64 6, i64 %indvars.iv2134
  %35 = load i32* %arrayidx109.6, align 4, !tbaa !17
  %add110.6 = add nsw i32 %35, %conv105.6
  store i32 %add110.6, i32* %arrayidx109.6, align 4, !tbaa !17
  %36 = load i16* %arrayidx104.6, align 2, !tbaa !21
  %conv116.6 = zext i16 %36 to i32
  %arrayidx120.6 = getelementptr inbounds [8 x [8 x i32]]* %predicted_chroma_block, i64 0, i64 6, i64 %indvars.iv2134
  store i32 %conv116.6, i32* %arrayidx120.6, align 4, !tbaa !17
  %arrayidx104.7 = getelementptr inbounds %struct.ImageParameters* %15, i64 0, i32 45, i64 7, i64 %indvars.iv2134
  %37 = load i16* %arrayidx104.7, align 2, !tbaa !21
  %conv105.7 = zext i16 %37 to i32
  %arrayidx109.7 = getelementptr inbounds %struct.ImageParameters* %15, i64 0, i32 46, i64 7, i64 %indvars.iv2134
  %38 = load i32* %arrayidx109.7, align 4, !tbaa !17
  %add110.7 = add nsw i32 %38, %conv105.7
  store i32 %add110.7, i32* %arrayidx109.7, align 4, !tbaa !17
  %39 = load i16* %arrayidx104.7, align 2, !tbaa !21
  %conv116.7 = zext i16 %39 to i32
  %arrayidx120.7 = getelementptr inbounds [8 x [8 x i32]]* %predicted_chroma_block, i64 0, i64 7, i64 %indvars.iv2134
  store i32 %conv116.7, i32* %arrayidx120.7, align 4, !tbaa !17
  %indvars.iv.next2135 = add nuw nsw i64 %indvars.iv2134, 1
  %exitcond2136 = icmp eq i64 %indvars.iv.next2135, 8
  br i1 %exitcond2136, label %for.cond124.preheader, label %for.cond97.preheader

for.cond124.preheader:                            ; preds = %for.cond97.preheader
  %rem91 = srem i32 %cond89, 6
  %div94 = sdiv i32 %shl93, 2
  %arrayidx175 = getelementptr inbounds <4 x i32>* %m5, i64 0, i64 0
  %arrayidx176 = getelementptr inbounds [4 x i32]* %tmpcast, i64 0, i64 1
  %arrayidx192 = getelementptr inbounds [4 x i32]* %tmpcast, i64 0, i64 3
  %arrayidx194 = getelementptr inbounds [4 x i32]* %tmpcast, i64 0, i64 2
  br label %for.cond128.preheader

for.cond128.preheader:                            ; preds = %for.cond124.preheader, %for.inc302
  %indvars.iv2126 = phi i64 [ 0, %for.cond124.preheader ], [ %indvars.iv.next2127, %for.inc302 ]
  %40 = or i64 %indvars.iv2126, 2
  %41 = or i64 %indvars.iv2126, 1
  %42 = or i64 %indvars.iv2126, 3
  br label %for.cond132.preheader

for.cond132.preheader:                            ; preds = %for.cond128.preheader, %for.inc299
  %indvars.iv2121 = phi i64 [ 0, %for.cond128.preheader ], [ %indvars.iv.next2122, %for.inc299 ]
  %43 = or i64 %indvars.iv2121, 2
  %44 = or i64 %indvars.iv2121, 1
  %45 = or i64 %indvars.iv2121, 3
  br label %for.body135

for.body135:                                      ; preds = %for.body135, %for.cond132.preheader
  %indvars.iv2107 = phi i64 [ 0, %for.cond132.preheader ], [ %indvars.iv.next2108, %for.body135 ]
  %46 = add nsw i64 %indvars.iv2107, %indvars.iv2126
  %arrayidx147 = getelementptr inbounds %struct.ImageParameters* %15, i64 0, i32 46, i64 %indvars.iv2121, i64 %46
  %47 = load i32* %arrayidx147, align 4, !tbaa !17
  %48 = or i64 %indvars.iv2121, 3
  %arrayidx153 = getelementptr inbounds %struct.ImageParameters* %15, i64 0, i32 46, i64 %48, i64 %46
  %49 = load i32* %arrayidx153, align 4, !tbaa !17
  %add154 = add nsw i32 %49, %47
  store i32 %add154, i32* %arrayidx175, align 16, !tbaa !17
  %50 = load i32* %arrayidx147, align 4, !tbaa !17
  %51 = load i32* %arrayidx153, align 4, !tbaa !17
  %sub169 = sub nsw i32 %50, %51
  store i32 %sub169, i32* %arrayidx192, align 4, !tbaa !17
  %52 = or i64 %indvars.iv2121, 1
  %arrayidx147.1 = getelementptr inbounds %struct.ImageParameters* %15, i64 0, i32 46, i64 %52, i64 %46
  %53 = load i32* %arrayidx147.1, align 4, !tbaa !17
  %54 = or i64 %indvars.iv2121, 2
  %arrayidx153.1 = getelementptr inbounds %struct.ImageParameters* %15, i64 0, i32 46, i64 %54, i64 %46
  %55 = load i32* %arrayidx153.1, align 4, !tbaa !17
  %add154.1 = add nsw i32 %55, %53
  store i32 %add154.1, i32* %arrayidx176, align 4, !tbaa !17
  %56 = load i32* %arrayidx147.1, align 4, !tbaa !17
  %57 = load i32* %arrayidx153.1, align 4, !tbaa !17
  %sub169.1 = sub nsw i32 %56, %57
  store i32 %sub169.1, i32* %arrayidx194, align 8, !tbaa !17
  %add177 = add nsw i32 %add154.1, %add154
  store i32 %add177, i32* %arrayidx147, align 4, !tbaa !17
  %58 = bitcast <4 x i32>* %m5 to i64*
  %59 = load i64* %58, align 16
  %60 = trunc i64 %59 to i32
  %61 = lshr i64 %59, 32
  %62 = trunc i64 %61 to i32
  %sub185 = sub nsw i32 %60, %62
  %arrayidx191 = getelementptr inbounds %struct.ImageParameters* %15, i64 0, i32 46, i64 %43, i64 %46
  store i32 %sub185, i32* %arrayidx191, align 4, !tbaa !17
  %63 = load i32* %arrayidx192, align 4, !tbaa !17
  %mul193 = shl i32 %63, 1
  %64 = load i32* %arrayidx194, align 8, !tbaa !17
  %add195 = add nsw i32 %mul193, %64
  %arrayidx201 = getelementptr inbounds %struct.ImageParameters* %15, i64 0, i32 46, i64 %44, i64 %46
  store i32 %add195, i32* %arrayidx201, align 4, !tbaa !17
  %65 = load i32* %arrayidx192, align 4, !tbaa !17
  %66 = load i32* %arrayidx194, align 8, !tbaa !17
  %mul204 = shl nsw i32 %66, 1
  %sub205 = sub nsw i32 %65, %mul204
  %arrayidx211 = getelementptr inbounds %struct.ImageParameters* %15, i64 0, i32 46, i64 %45, i64 %46
  store i32 %sub205, i32* %arrayidx211, align 4, !tbaa !17
  %indvars.iv.next2108 = add nuw nsw i64 %indvars.iv2107, 1
  %exitcond2110 = icmp eq i64 %indvars.iv.next2108, 4
  br i1 %exitcond2110, label %for.body218, label %for.body135

for.body218:                                      ; preds = %for.body135, %for.body218
  %indvars.iv2117 = phi i64 [ %indvars.iv.next2118, %for.body218 ], [ 0, %for.body135 ]
  %67 = add nsw i64 %indvars.iv2117, %indvars.iv2121
  %arrayidx230 = getelementptr inbounds %struct.ImageParameters* %15, i64 0, i32 46, i64 %67, i64 %indvars.iv2126
  %68 = load i32* %arrayidx230, align 4, !tbaa !17
  %69 = or i64 %indvars.iv2126, 3
  %arrayidx236 = getelementptr inbounds %struct.ImageParameters* %15, i64 0, i32 46, i64 %67, i64 %69
  %70 = load i32* %arrayidx236, align 4, !tbaa !17
  %add237 = add nsw i32 %70, %68
  store i32 %add237, i32* %arrayidx175, align 16, !tbaa !17
  %71 = load i32* %arrayidx230, align 4, !tbaa !17
  %72 = load i32* %arrayidx236, align 4, !tbaa !17
  %sub252 = sub nsw i32 %71, %72
  store i32 %sub252, i32* %arrayidx192, align 4, !tbaa !17
  %73 = or i64 %indvars.iv2126, 1
  %arrayidx230.1 = getelementptr inbounds %struct.ImageParameters* %15, i64 0, i32 46, i64 %67, i64 %73
  %74 = load i32* %arrayidx230.1, align 4, !tbaa !17
  %75 = or i64 %indvars.iv2126, 2
  %arrayidx236.1 = getelementptr inbounds %struct.ImageParameters* %15, i64 0, i32 46, i64 %67, i64 %75
  %76 = load i32* %arrayidx236.1, align 4, !tbaa !17
  %add237.1 = add nsw i32 %76, %74
  store i32 %add237.1, i32* %arrayidx176, align 4, !tbaa !17
  %77 = load i32* %arrayidx230.1, align 4, !tbaa !17
  %78 = load i32* %arrayidx236.1, align 4, !tbaa !17
  %sub252.1 = sub nsw i32 %77, %78
  store i32 %sub252.1, i32* %arrayidx194, align 8, !tbaa !17
  %add260 = add nsw i32 %add237.1, %add237
  store i32 %add260, i32* %arrayidx230, align 4, !tbaa !17
  %79 = load i64* %58, align 16
  %80 = trunc i64 %79 to i32
  %81 = lshr i64 %79, 32
  %82 = trunc i64 %81 to i32
  %sub269 = sub nsw i32 %80, %82
  %arrayidx275 = getelementptr inbounds %struct.ImageParameters* %15, i64 0, i32 46, i64 %67, i64 %40
  store i32 %sub269, i32* %arrayidx275, align 4, !tbaa !17
  %83 = load i32* %arrayidx192, align 4, !tbaa !17
  %mul277 = shl i32 %83, 1
  %84 = load i32* %arrayidx194, align 8, !tbaa !17
  %add279 = add nsw i32 %mul277, %84
  %arrayidx285 = getelementptr inbounds %struct.ImageParameters* %15, i64 0, i32 46, i64 %67, i64 %41
  store i32 %add279, i32* %arrayidx285, align 4, !tbaa !17
  %85 = load i32* %arrayidx192, align 4, !tbaa !17
  %86 = load i32* %arrayidx194, align 8, !tbaa !17
  %mul288 = shl nsw i32 %86, 1
  %sub289 = sub nsw i32 %85, %mul288
  %arrayidx295 = getelementptr inbounds %struct.ImageParameters* %15, i64 0, i32 46, i64 %67, i64 %42
  store i32 %sub289, i32* %arrayidx295, align 4, !tbaa !17
  %indvars.iv.next2118 = add nuw nsw i64 %indvars.iv2117, 1
  %exitcond2120 = icmp eq i64 %indvars.iv.next2118, 4
  br i1 %exitcond2120, label %for.inc299, label %for.body218

for.inc299:                                       ; preds = %for.body218
  %indvars.iv.next2122 = add nuw nsw i64 %indvars.iv2121, 4
  %87 = trunc i64 %indvars.iv.next2122 to i32
  %cmp129 = icmp slt i32 %87, 5
  br i1 %cmp129, label %for.cond132.preheader, label %for.inc302

for.inc302:                                       ; preds = %for.inc299
  %indvars.iv.next2127 = add nuw nsw i64 %indvars.iv2126, 4
  %88 = trunc i64 %indvars.iv.next2127 to i32
  %cmp125 = icmp slt i32 %88, 5
  br i1 %cmp125, label %for.cond128.preheader, label %for.cond309.preheader

for.cond309.preheader:                            ; preds = %for.inc302, %for.inc467
  %indvars.iv2096 = phi i64 [ %indvars.iv.next2097, %for.inc467 ], [ 0, %for.inc302 ]
  %89 = or i64 %indvars.iv2096, 2
  %90 = or i64 %indvars.iv2096, 1
  %91 = or i64 %indvars.iv2096, 3
  br label %for.cond313.preheader

for.cond313.preheader:                            ; preds = %for.cond309.preheader, %for.inc464
  %indvars.iv2091 = phi i64 [ 0, %for.cond309.preheader ], [ %indvars.iv.next2092, %for.inc464 ]
  %92 = or i64 %indvars.iv2091, 2
  %93 = or i64 %indvars.iv2091, 1
  %94 = or i64 %indvars.iv2091, 3
  br label %for.body316

for.body316:                                      ; preds = %for.body316, %for.cond313.preheader
  %indvars.iv2077 = phi i64 [ 0, %for.cond313.preheader ], [ %indvars.iv.next2078, %for.body316 ]
  %95 = add nsw i64 %indvars.iv2077, %indvars.iv2096
  %arrayidx327 = getelementptr inbounds [8 x [8 x i32]]* %predicted_chroma_block, i64 0, i64 %indvars.iv2091, i64 %95
  %96 = load i32* %arrayidx327, align 4, !tbaa !17
  %97 = or i64 %indvars.iv2091, 3
  %arrayidx332 = getelementptr inbounds [8 x [8 x i32]]* %predicted_chroma_block, i64 0, i64 %97, i64 %95
  %98 = load i32* %arrayidx332, align 4, !tbaa !17
  %add333 = add nsw i32 %98, %96
  store i32 %add333, i32* %arrayidx175, align 16, !tbaa !17
  %sub346 = sub nsw i32 %96, %98
  store i32 %sub346, i32* %arrayidx192, align 4, !tbaa !17
  %99 = or i64 %indvars.iv2091, 1
  %arrayidx327.1 = getelementptr inbounds [8 x [8 x i32]]* %predicted_chroma_block, i64 0, i64 %99, i64 %95
  %100 = load i32* %arrayidx327.1, align 4, !tbaa !17
  %101 = or i64 %indvars.iv2091, 2
  %arrayidx332.1 = getelementptr inbounds [8 x [8 x i32]]* %predicted_chroma_block, i64 0, i64 %101, i64 %95
  %102 = load i32* %arrayidx332.1, align 4, !tbaa !17
  %add333.1 = add nsw i32 %102, %100
  store i32 %add333.1, i32* %arrayidx176, align 4, !tbaa !17
  %sub346.1 = sub nsw i32 %100, %102
  store i32 %sub346.1, i32* %arrayidx194, align 8, !tbaa !17
  %add354 = add nsw i32 %add333.1, %add333
  store i32 %add354, i32* %arrayidx327, align 4, !tbaa !17
  %sub361 = sub nsw i32 %add333, %add333.1
  %arrayidx366 = getelementptr inbounds [8 x [8 x i32]]* %predicted_chroma_block, i64 0, i64 %92, i64 %95
  store i32 %sub361, i32* %arrayidx366, align 4, !tbaa !17
  %mul368 = shl i32 %sub346, 1
  %add370 = add nsw i32 %mul368, %sub346.1
  %arrayidx375 = getelementptr inbounds [8 x [8 x i32]]* %predicted_chroma_block, i64 0, i64 %93, i64 %95
  store i32 %add370, i32* %arrayidx375, align 4, !tbaa !17
  %mul378 = shl nsw i32 %sub346.1, 1
  %sub379 = sub nsw i32 %sub346, %mul378
  %arrayidx384 = getelementptr inbounds [8 x [8 x i32]]* %predicted_chroma_block, i64 0, i64 %94, i64 %95
  store i32 %sub379, i32* %arrayidx384, align 4, !tbaa !17
  %indvars.iv.next2078 = add nuw nsw i64 %indvars.iv2077, 1
  %exitcond2080 = icmp eq i64 %indvars.iv.next2078, 4
  br i1 %exitcond2080, label %for.body391, label %for.body316

for.body391:                                      ; preds = %for.body316, %for.body391
  %indvars.iv2087 = phi i64 [ %indvars.iv.next2088, %for.body391 ], [ 0, %for.body316 ]
  %103 = add nsw i64 %indvars.iv2087, %indvars.iv2091
  %arrayidx402 = getelementptr inbounds [8 x [8 x i32]]* %predicted_chroma_block, i64 0, i64 %103, i64 %indvars.iv2096
  %104 = load i32* %arrayidx402, align 16, !tbaa !17
  %105 = or i64 %indvars.iv2096, 3
  %arrayidx407 = getelementptr inbounds [8 x [8 x i32]]* %predicted_chroma_block, i64 0, i64 %103, i64 %105
  %106 = load i32* %arrayidx407, align 4, !tbaa !17
  %add408 = add nsw i32 %106, %104
  store i32 %add408, i32* %arrayidx175, align 16, !tbaa !17
  %sub421 = sub nsw i32 %104, %106
  store i32 %sub421, i32* %arrayidx192, align 4, !tbaa !17
  %107 = or i64 %indvars.iv2096, 1
  %arrayidx402.1 = getelementptr inbounds [8 x [8 x i32]]* %predicted_chroma_block, i64 0, i64 %103, i64 %107
  %108 = load i32* %arrayidx402.1, align 4, !tbaa !17
  %109 = or i64 %indvars.iv2096, 2
  %arrayidx407.1 = getelementptr inbounds [8 x [8 x i32]]* %predicted_chroma_block, i64 0, i64 %103, i64 %109
  %110 = load i32* %arrayidx407.1, align 8, !tbaa !17
  %add408.1 = add nsw i32 %110, %108
  store i32 %add408.1, i32* %arrayidx176, align 4, !tbaa !17
  %sub421.1 = sub nsw i32 %108, %110
  store i32 %sub421.1, i32* %arrayidx194, align 8, !tbaa !17
  %add429 = add nsw i32 %add408.1, %add408
  store i32 %add429, i32* %arrayidx402, align 16, !tbaa !17
  %sub437 = sub nsw i32 %add408, %add408.1
  %arrayidx442 = getelementptr inbounds [8 x [8 x i32]]* %predicted_chroma_block, i64 0, i64 %103, i64 %89
  store i32 %sub437, i32* %arrayidx442, align 8, !tbaa !17
  %mul444 = shl i32 %sub421, 1
  %add446 = add nsw i32 %mul444, %sub421.1
  %arrayidx451 = getelementptr inbounds [8 x [8 x i32]]* %predicted_chroma_block, i64 0, i64 %103, i64 %90
  store i32 %add446, i32* %arrayidx451, align 4, !tbaa !17
  %mul454 = shl nsw i32 %sub421.1, 1
  %sub455 = sub nsw i32 %sub421, %mul454
  %arrayidx460 = getelementptr inbounds [8 x [8 x i32]]* %predicted_chroma_block, i64 0, i64 %103, i64 %91
  store i32 %sub455, i32* %arrayidx460, align 4, !tbaa !17
  %indvars.iv.next2088 = add nuw nsw i64 %indvars.iv2087, 1
  %exitcond2090 = icmp eq i64 %indvars.iv.next2088, 4
  br i1 %exitcond2090, label %for.inc464, label %for.body391

for.inc464:                                       ; preds = %for.body391
  %indvars.iv.next2092 = add nuw nsw i64 %indvars.iv2091, 4
  %111 = trunc i64 %indvars.iv.next2092 to i32
  %cmp310 = icmp slt i32 %111, 5
  br i1 %cmp310, label %for.cond313.preheader, label %for.inc467

for.inc467:                                       ; preds = %for.inc464
  %indvars.iv.next2097 = add nuw nsw i64 %indvars.iv2096, 4
  %112 = trunc i64 %indvars.iv.next2097 to i32
  %cmp306 = icmp slt i32 %112, 5
  br i1 %cmp306, label %for.cond309.preheader, label %for.end469

for.end469:                                       ; preds = %for.inc467
  %arrayidx472 = getelementptr inbounds %struct.ImageParameters* %15, i64 0, i32 46, i64 0, i64 0
  %113 = load i32* %arrayidx472, align 4, !tbaa !17
  %arrayidx475 = getelementptr inbounds %struct.ImageParameters* %15, i64 0, i32 46, i64 4, i64 0
  %114 = load i32* %arrayidx475, align 4, !tbaa !17
  %add476 = add nsw i32 %114, %113
  %arrayidx479 = getelementptr inbounds %struct.ImageParameters* %15, i64 0, i32 46, i64 0, i64 4
  %115 = load i32* %arrayidx479, align 4, !tbaa !17
  %add480 = add nsw i32 %add476, %115
  %arrayidx483 = getelementptr inbounds %struct.ImageParameters* %15, i64 0, i32 46, i64 4, i64 4
  %116 = load i32* %arrayidx483, align 4, !tbaa !17
  %add484 = add nsw i32 %add480, %116
  %arrayidx485 = getelementptr inbounds [4 x i32]* %m1, i64 0, i64 0
  store i32 %add484, i32* %arrayidx485, align 16, !tbaa !17
  %sub492 = sub i32 %113, %114
  %add496 = add nsw i32 %sub492, %115
  %sub500 = sub i32 %add496, %116
  %arrayidx501 = getelementptr inbounds [4 x i32]* %m1, i64 0, i64 1
  store i32 %sub500, i32* %arrayidx501, align 4, !tbaa !17
  %sub512 = sub i32 %add476, %115
  %sub516 = sub i32 %sub512, %116
  %arrayidx517 = getelementptr inbounds [4 x i32]* %m1, i64 0, i64 2
  store i32 %sub516, i32* %arrayidx517, align 8, !tbaa !17
  %sub528 = sub i32 %sub492, %115
  %add532 = add nsw i32 %sub528, %116
  %arrayidx533 = getelementptr inbounds [4 x i32]* %m1, i64 0, i64 3
  store i32 %add532, i32* %arrayidx533, align 4, !tbaa !17
  %arrayidx535 = getelementptr inbounds [8 x [8 x i32]]* %predicted_chroma_block, i64 0, i64 0, i64 0
  %117 = load i32* %arrayidx535, align 16, !tbaa !17
  %arrayidx537 = getelementptr inbounds [8 x [8 x i32]]* %predicted_chroma_block, i64 0, i64 4, i64 0
  %118 = load i32* %arrayidx537, align 16, !tbaa !17
  %add538 = add nsw i32 %118, %117
  %arrayidx540 = getelementptr inbounds [8 x [8 x i32]]* %predicted_chroma_block, i64 0, i64 0, i64 4
  %119 = load i32* %arrayidx540, align 16, !tbaa !17
  %add541 = add nsw i32 %add538, %119
  %arrayidx543 = getelementptr inbounds [8 x [8 x i32]]* %predicted_chroma_block, i64 0, i64 4, i64 4
  %120 = load i32* %arrayidx543, align 16, !tbaa !17
  %add544 = add nsw i32 %add541, %120
  %arrayidx545 = getelementptr inbounds [4 x i32]* %mp1, i64 0, i64 0
  store i32 %add544, i32* %arrayidx545, align 16, !tbaa !17
  %sub550 = sub i32 %117, %118
  %add553 = add nsw i32 %sub550, %119
  %sub556 = sub i32 %add553, %120
  %arrayidx557 = getelementptr inbounds [4 x i32]* %mp1, i64 0, i64 1
  store i32 %sub556, i32* %arrayidx557, align 4, !tbaa !17
  %sub565 = sub i32 %add538, %119
  %sub568 = sub i32 %sub565, %120
  %arrayidx569 = getelementptr inbounds [4 x i32]* %mp1, i64 0, i64 2
  store i32 %sub568, i32* %arrayidx569, align 8, !tbaa !17
  %sub577 = sub i32 %sub550, %119
  %add580 = add nsw i32 %sub577, %120
  %arrayidx581 = getelementptr inbounds [4 x i32]* %mp1, i64 0, i64 3
  store i32 %add580, i32* %arrayidx581, align 4, !tbaa !17
  %idxprom590 = sext i32 %rem91 to i64
  %arrayidx593 = getelementptr inbounds [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom590, i64 0, i64 0
  %121 = load i32* %arrayidx593, align 16, !tbaa !17
  %mul595 = shl nsw i32 %div94, 1
  %add597 = add nsw i32 %div791957, 16
  %idxprom612 = sext i32 %rem to i64
  %arrayidx615 = getelementptr inbounds [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom612, i64 0, i64 0
  %122 = load i32* %arrayidx615, align 16, !tbaa !17
  %mul617 = shl nsw i32 %div67, 1
  %add619 = add nsw i32 %div551955, 16
  %arrayidx649 = getelementptr inbounds [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom612, i64 0, i64 0
  %shl739 = shl i32 %uv, 2
  %shl740 = shl i32 983040, %shl739
  %conv741 = sext i32 %shl740 to i64
  %cbp_blk = getelementptr inbounds %struct.macroblock* %3, i64 %idxprom, i32 13
  %arrayidx781 = getelementptr inbounds [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom590, i64 0, i64 0
  %123 = load i32* %arrayidx781, align 16, !tbaa !17
  br label %for.body585

for.body585:                                      ; preds = %if.end763.for.body585_crit_edge, %for.end469
  %124 = phi i32 [ %add484, %for.end469 ], [ %.pre2137, %if.end763.for.body585_crit_edge ]
  %125 = phi i32 [ %add544, %for.end469 ], [ %.pre, %if.end763.for.body585_crit_edge ]
  %indvars.iv2068 = phi i64 [ 0, %for.end469 ], [ %indvars.iv.next2069, %if.end763.for.body585_crit_edge ]
  %cr_cbp.addr.02013 = phi i32 [ %cr_cbp, %for.end469 ], [ %cr_cbp.addr.1, %if.end763.for.body585_crit_edge ]
  %scan_pos.02010 = phi i32 [ 0, %for.end469 ], [ %scan_pos.1, %if.end763.for.body585_crit_edge ]
  %run.02009 = phi i32 [ -1, %for.end469 ], [ %run.1, %if.end763.for.body585_crit_edge ]
  %inc586 = add nsw i32 %run.02009, 1
  %ispos1930 = icmp sgt i32 %125, -1
  %neg1931 = sub i32 0, %125
  %126 = select i1 %ispos1930, i32 %125, i32 %neg1931
  %mul594 = mul nsw i32 %126, %121
  %add596 = add nsw i32 %mul594, %mul595
  %shr = ashr i32 %add596, %add597
  %shl599 = shl i32 %shr, %add597
  %div604 = sdiv i32 %shl599, %121
  %arrayidx606 = getelementptr inbounds [4 x i32]* %m1, i64 0, i64 %indvars.iv2068
  %call609 = call i32 @sign(i32 %div604, i32 %125) #1
  %sub610 = sub nsw i32 %124, %call609
  %ispos1932 = icmp sgt i32 %sub610, -1
  %neg1933 = sub i32 0, %sub610
  %127 = select i1 %ispos1932, i32 %sub610, i32 %neg1933
  %mul616 = mul nsw i32 %127, %122
  %add618 = add nsw i32 %mul616, %mul617
  %shr620 = ashr i32 %add618, %add619
  %sub625 = sub i32 %124, %125
  %ispos1934 = icmp sgt i32 %sub625, -1
  %neg1935 = sub i32 0, %sub625
  %128 = select i1 %ispos1934, i32 %sub625, i32 %neg1935
  %mul631 = mul nsw i32 %128, %122
  %add633 = add nsw i32 %mul631, %mul617
  %shr635 = ashr i32 %add633, %add619
  %cmp636 = icmp ne i32 %shr620, %shr635
  %cmp638 = icmp ne i32 %shr620, 0
  %or.cond = and i1 %cmp636, %cmp638
  %cmp641 = icmp ne i32 %shr635, 0
  %or.cond1450 = and i1 %or.cond, %cmp641
  br i1 %or.cond1450, label %if.then, label %if.else705

if.then:                                          ; preds = %for.body585
  %call645 = call i32 @sign(i32 %shr620, i32 %sub610) #1
  %129 = load i32* %arrayidx649, align 16, !tbaa !17
  %mul650 = shl i32 %call645, 4
  %mul651 = mul i32 %mul650, %129
  %shl652 = shl i32 %mul651, %div551955
  %shr653 = ashr i32 %shl652, 5
  %sub657 = sub i32 %sub625, %shr653
  %conv658 = sitofp i32 %sub657 to double
  call void @levrun_linfo_c2x2(i32 %shr620, i32 %inc586, i32* %len, i32* %info) #1
  %mul659 = fmul double %conv658, %conv658
  %130 = load i32* %len, align 4, !tbaa !17
  %conv660 = sitofp i32 %130 to double
  %mul661 = fmul double %mul9, %conv660
  %add662 = fadd double %mul661, %mul659
  %call665 = call i32 @sign(i32 %shr635, i32 %sub625) #1
  %mul670 = shl i32 %call665, 4
  %mul671 = mul i32 %mul670, %129
  %shl672 = shl i32 %mul671, %div551955
  %shr673 = ashr i32 %shl672, 5
  %sub677 = sub i32 %sub625, %shr673
  %conv678 = sitofp i32 %sub677 to double
  call void @levrun_linfo_c2x2(i32 %shr635, i32 %inc586, i32* %len, i32* %info) #1
  %mul679 = fmul double %conv678, %conv678
  %131 = load i32* %len, align 4, !tbaa !17
  %conv680 = sitofp i32 %131 to double
  %mul681 = fmul double %mul9, %conv680
  %add682 = fadd double %mul681, %mul679
  %cmp683 = fcmp oeq double %add662, %add682
  br i1 %cmp683, label %if.then685, label %if.else

if.then685:                                       ; preds = %if.then
  %ispos1938 = icmp sgt i32 %shr620, -1
  %neg1939 = sub i32 0, %shr620
  %132 = select i1 %ispos1938, i32 %shr620, i32 %neg1939
  %ispos1940 = icmp sgt i32 %shr635, -1
  %neg1941 = sub i32 0, %shr635
  %133 = select i1 %ispos1940, i32 %shr635, i32 %neg1941
  %cmp688 = icmp slt i32 %132, %133
  br label %if.end698

if.else:                                          ; preds = %if.then
  %cmp694 = fcmp olt double %add662, %add682
  br label %if.end698

if.end698:                                        ; preds = %if.else, %if.then685
  %cmp688.sink = phi i1 [ %cmp688, %if.then685 ], [ %cmp694, %if.else ]
  %cond693 = select i1 %cmp688.sink, i32 %shr620, i32 %shr635
  %cmp699 = icmp eq i32 %cond693, %shr620
  %cond704 = select i1 %cmp699, i32 %sub610, i32 %sub625
  br label %if.end723

if.else705:                                       ; preds = %for.body585
  %cmp706 = icmp eq i32 %shr620, %shr635
  br i1 %cmp706, label %if.end723, label %if.else709

if.else709:                                       ; preds = %if.else705
  %cmp710 = icmp eq i32 %shr620, 0
  %cond715 = select i1 %cmp710, i32 0, i32 %shr635
  %cond721 = select i1 %cmp710, i32 %sub610, i32 %sub625
  br label %if.end723

if.end723:                                        ; preds = %if.else705, %if.else709, %if.end698
  %level.1 = phi i32 [ %cond693, %if.end698 ], [ %cond715, %if.else709 ], [ %shr620, %if.else705 ]
  %c_err.0 = phi i32 [ %cond704, %if.end698 ], [ %cond721, %if.else709 ], [ %sub610, %if.else705 ]
  %134 = load %struct.InputParameters** @input, align 8, !tbaa !1
  %symbol_mode = getelementptr inbounds %struct.InputParameters* %134, i64 0, i32 59
  %135 = load i32* %symbol_mode, align 4, !tbaa !40
  %cmp724 = icmp eq i32 %135, 0
  br i1 %cmp724, label %land.lhs.true726, label %if.end735

land.lhs.true726:                                 ; preds = %if.end723
  %136 = load %struct.ImageParameters** @img, align 8, !tbaa !1
  %qp727 = getelementptr inbounds %struct.ImageParameters* %136, i64 0, i32 10
  %137 = load i32* %qp727, align 4, !tbaa !41
  %cmp728 = icmp slt i32 %137, 4
  %cmp731 = icmp sgt i32 %level.1, 2063
  %or.cond1453 = and i1 %cmp728, %cmp731
  br i1 %or.cond1453, label %if.then738, label %if.end735

if.end735:                                        ; preds = %land.lhs.true726, %if.end723
  %cmp736 = icmp eq i32 %level.1, 0
  br i1 %cmp736, label %if.end763, label %if.then738

if.then738:                                       ; preds = %land.lhs.true726, %if.end735
  %level.21960 = phi i32 [ %level.1, %if.end735 ], [ 2063, %land.lhs.true726 ]
  %138 = load i64* %cbp_blk, align 8, !tbaa !55
  %or = or i64 %138, %conv741
  store i64 %or, i64* %cbp_blk, align 8, !tbaa !55
  %cmp742 = icmp slt i32 %cr_cbp.addr.02013, 1
  %cond747 = select i1 %cmp742, i32 1, i32 %cr_cbp.addr.02013
  %call748 = call i32 @sign(i32 %level.21960, i32 %c_err.0) #1
  %idxprom749 = sext i32 %scan_pos.02010 to i64
  %arrayidx750 = getelementptr inbounds i32* %6, i64 %idxprom749
  store i32 %call748, i32* %arrayidx750, align 4, !tbaa !17
  %arrayidx752 = getelementptr inbounds i32* %7, i64 %idxprom749
  store i32 %inc586, i32* %arrayidx752, align 4, !tbaa !17
  %inc753 = add nsw i32 %scan_pos.02010, 1
  %call754 = call i32 @sign(i32 %level.21960, i32 %c_err.0) #1
  %139 = load i32* %arrayidx649, align 16, !tbaa !17
  %mul759 = shl i32 %call754, 4
  %mul760 = mul i32 %mul759, %139
  %shl761 = shl i32 %mul760, %div551955
  %shr762 = ashr i32 %shl761, 5
  br label %if.end763

if.end763:                                        ; preds = %if.end735, %if.then738
  %run.1 = phi i32 [ -1, %if.then738 ], [ %inc586, %if.end735 ]
  %scan_pos.1 = phi i32 [ %inc753, %if.then738 ], [ %scan_pos.02010, %if.end735 ]
  %ilev.0 = phi i32 [ %shr762, %if.then738 ], [ 0, %if.end735 ]
  %cr_cbp.addr.1 = phi i32 [ %cond747, %if.then738 ], [ %cr_cbp.addr.02013, %if.end735 ]
  %add766 = add nsw i32 %125, %ilev.0
  %ispos1936 = icmp sgt i32 %add766, -1
  %neg1937 = sub i32 0, %add766
  %140 = select i1 %ispos1936, i32 %add766, i32 %neg1937
  %mul772 = mul nsw i32 %140, %121
  %add774 = add nsw i32 %mul772, %mul595
  %shr776 = ashr i32 %add774, %add597
  %call777 = call i32 @sign(i32 %shr776, i32 %add766) #1
  %mul782 = mul nsw i32 %123, %call777
  %shl783 = shl i32 %mul782, %div791957
  store i32 %shl783, i32* %arrayidx606, align 4, !tbaa !17
  %indvars.iv.next2069 = add nuw nsw i64 %indvars.iv2068, 1
  %exitcond2070 = icmp eq i64 %indvars.iv.next2069, 4
  br i1 %exitcond2070, label %for.end788, label %if.end763.for.body585_crit_edge

if.end763.for.body585_crit_edge:                  ; preds = %if.end763
  %arrayidx588.phi.trans.insert = getelementptr inbounds [4 x i32]* %mp1, i64 0, i64 %indvars.iv.next2069
  %.pre = load i32* %arrayidx588.phi.trans.insert, align 4, !tbaa !17
  %arrayidx606.phi.trans.insert = getelementptr inbounds [4 x i32]* %m1, i64 0, i64 %indvars.iv.next2069
  %.pre2137 = load i32* %arrayidx606.phi.trans.insert, align 4, !tbaa !17
  br label %for.body585

for.end788:                                       ; preds = %if.end763
  %idxprom789 = sext i32 %scan_pos.1 to i64
  %arrayidx790 = getelementptr inbounds i32* %6, i64 %idxprom789
  store i32 0, i32* %arrayidx790, align 4, !tbaa !17
  %141 = bitcast [4 x i32]* %m1 to i64*
  %142 = load i64* %141, align 16
  %143 = trunc i64 %142 to i32
  %144 = lshr i64 %142, 32
  %145 = trunc i64 %144 to i32
  %add793 = add nsw i32 %145, %143
  %146 = bitcast i32* %arrayidx517 to i64*
  %147 = load i64* %146, align 8
  %148 = trunc i64 %147 to i32
  %add795 = add nsw i32 %add793, %148
  %149 = lshr i64 %147, 32
  %150 = trunc i64 %149 to i32
  %add797 = add nsw i32 %add795, %150
  %div798 = sdiv i32 %add797, 2
  %151 = load %struct.ImageParameters** @img, align 8, !tbaa !1
  %arrayidx801 = getelementptr inbounds %struct.ImageParameters* %151, i64 0, i32 46, i64 0, i64 0
  store i32 %div798, i32* %arrayidx801, align 4, !tbaa !17
  %sub804 = sub i32 %143, %145
  %add806 = add nsw i32 %sub804, %148
  %sub808 = sub i32 %add806, %150
  %div809 = sdiv i32 %sub808, 2
  %arrayidx812 = getelementptr inbounds %struct.ImageParameters* %151, i64 0, i32 46, i64 4, i64 0
  store i32 %div809, i32* %arrayidx812, align 4, !tbaa !17
  %sub817 = sub i32 %add793, %148
  %sub819 = sub i32 %sub817, %150
  %div820 = sdiv i32 %sub819, 2
  %arrayidx823 = getelementptr inbounds %struct.ImageParameters* %151, i64 0, i32 46, i64 0, i64 4
  store i32 %div820, i32* %arrayidx823, align 4, !tbaa !17
  %sub828 = sub i32 %sub804, %148
  %add830 = add nsw i32 %sub828, %150
  %div831 = sdiv i32 %add830, 2
  %arrayidx834 = getelementptr inbounds %struct.ImageParameters* %151, i64 0, i32 46, i64 4, i64 4
  store i32 %div831, i32* %arrayidx834, align 4, !tbaa !17
  %add848 = add nsw i32 %uv, 4
  %idxprom849 = sext i32 %add848 to i64
  %add1089 = add i32 %shl739, 16
  br label %for.cond839.preheader

for.cond839.preheader:                            ; preds = %for.end788, %for.inc1170
  %152 = phi %struct.ImageParameters* [ %151, %for.end788 ], [ %189, %for.inc1170 ]
  %n2.22008 = phi i32 [ 0, %for.end788 ], [ %add1171, %for.inc1170 ]
  %cr_cbp_tmp.02006 = phi i32 [ 0, %for.end788 ], [ %cr_cbp_tmp.3, %for.inc1170 ]
  %div843 = sdiv i32 %n2.22008, 4
  %mul844 = shl i32 %div843, 1
  %shr1087 = ashr exact i32 %n2.22008, 1
  %add1086 = add i32 %add1089, %shr1087
  br label %for.body842

for.body842:                                      ; preds = %for.cond839.preheader, %for.end1164
  %153 = phi %struct.ImageParameters* [ %152, %for.cond839.preheader ], [ %189, %for.end1164 ]
  %n1.22005 = phi i32 [ 0, %for.cond839.preheader ], [ %add1168, %for.end1164 ]
  %cr_cbp_tmp.12003 = phi i32 [ %cr_cbp_tmp.02006, %for.cond839.preheader ], [ %cr_cbp_tmp.3, %for.end1164 ]
  %div845 = sdiv i32 %n1.22005, 4
  %add846 = add nsw i32 %mul844, %div845
  %idxprom847 = sext i32 %add846 to i64
  %cofAC = getelementptr inbounds %struct.ImageParameters* %153, i64 0, i32 47
  %154 = load i32***** %cofAC, align 8, !tbaa !42
  %arrayidx850 = getelementptr inbounds i32**** %154, i64 %idxprom849
  %155 = load i32**** %arrayidx850, align 8, !tbaa !1
  %arrayidx851 = getelementptr inbounds i32*** %155, i64 %idxprom847
  %156 = load i32*** %arrayidx851, align 8, !tbaa !1
  %157 = load i32** %156, align 8, !tbaa !1
  %arrayidx859 = getelementptr inbounds i32** %156, i64 1
  %158 = load i32** %arrayidx859, align 8, !tbaa !1
  %shr1088 = ashr exact i32 %n1.22005, 2
  %add1090 = add i32 %add1086, %shr1088
  %shl1091 = shl i32 1, %add1090
  %conv1092 = sext i32 %shl1091 to i64
  br label %for.body863

for.body863:                                      ; preds = %if.end1128, %for.body842
  %159 = phi %struct.ImageParameters* [ %153, %for.body842 ], [ %189, %if.end1128 ]
  %indvars.iv2065 = phi i64 [ 1, %for.body842 ], [ %indvars.iv.next2066, %if.end1128 ]
  %scan_pos.22000 = phi i32 [ 0, %for.body842 ], [ %scan_pos.3, %if.end1128 ]
  %run.21999 = phi i32 [ -1, %for.body842 ], [ %run.3, %if.end1128 ]
  %cr_cbp_tmp.21997 = phi i32 [ %cr_cbp_tmp.12003, %for.body842 ], [ %cr_cbp_tmp.3, %if.end1128 ]
  %field_picture = getelementptr inbounds %struct.ImageParameters* %159, i64 0, i32 100
  %160 = load i32* %field_picture, align 4, !tbaa !38
  %tobool = icmp eq i32 %160, 0
  br i1 %tobool, label %lor.lhs.false, label %if.end885

lor.lhs.false:                                    ; preds = %for.body863
  %161 = load i32* @mb_adaptive, align 4, !tbaa !17
  %tobool864 = icmp eq i32 %161, 0
  br i1 %tobool864, label %if.else876, label %land.lhs.true865

land.lhs.true865:                                 ; preds = %lor.lhs.false
  %field_mode = getelementptr inbounds %struct.ImageParameters* %159, i64 0, i32 81
  %162 = load i32* %field_mode, align 4, !tbaa !39
  %tobool866 = icmp eq i32 %162, 0
  br i1 %tobool866, label %if.else876, label %if.end885

if.else876:                                       ; preds = %land.lhs.true865, %lor.lhs.false
  br label %if.end885

if.end885:                                        ; preds = %for.body863, %land.lhs.true865, %if.else876
  %FIELD_SCAN.pn = phi [16 x [2 x i8]]* [ @SNGL_SCAN, %if.else876 ], [ @FIELD_SCAN, %land.lhs.true865 ], [ @FIELD_SCAN, %for.body863 ]
  %i.5.in.in = getelementptr inbounds [16 x [2 x i8]]* %FIELD_SCAN.pn, i64 0, i64 %indvars.iv2065, i64 0
  %j.5.in.in = getelementptr inbounds [16 x [2 x i8]]* %FIELD_SCAN.pn, i64 0, i64 %indvars.iv2065, i64 1
  %i.5.in = load i8* %i.5.in.in, align 2
  %j.5.in = load i8* %j.5.in.in, align 1
  %i.5 = zext i8 %i.5.in to i32
  %j.5 = zext i8 %j.5.in to i32
  %inc886 = add nsw i32 %run.21999, 1
  %add887 = add nsw i32 %j.5, %n2.22008
  %idxprom888 = sext i32 %add887 to i64
  %add889 = add nsw i32 %i.5, %n1.22005
  %idxprom890 = sext i32 %add889 to i64
  %arrayidx892 = getelementptr inbounds [8 x [8 x i32]]* %predicted_chroma_block, i64 0, i64 %idxprom890, i64 %idxprom888
  %163 = load i32* %arrayidx892, align 4, !tbaa !17
  %ispos = icmp sgt i32 %163, -1
  %neg = sub i32 0, %163
  %164 = select i1 %ispos, i32 %163, i32 %neg
  %idxprom894 = zext i8 %j.5.in to i64
  %idxprom895 = zext i8 %i.5.in to i64
  %arrayidx899 = getelementptr inbounds [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom590, i64 %idxprom895, i64 %idxprom894
  %165 = load i32* %arrayidx899, align 4, !tbaa !17
  %mul900 = mul nsw i32 %164, %165
  %add901 = add nsw i32 %mul900, %div94
  %shr902 = ashr i32 %add901, %add92
  %shl903 = shl i32 %shr902, %add92
  %div910 = sdiv i32 %shl903, %165
  %arrayidx917 = getelementptr inbounds %struct.ImageParameters* %159, i64 0, i32 46, i64 %idxprom890, i64 %idxprom888
  %166 = load i32* %arrayidx917, align 4, !tbaa !17
  %call924 = call i32 @sign(i32 %div910, i32 %163) #1
  %sub925 = sub nsw i32 %166, %call924
  %ispos1920 = icmp sgt i32 %sub925, -1
  %neg1921 = sub i32 0, %sub925
  %167 = select i1 %ispos1920, i32 %sub925, i32 %neg1921
  %arrayidx932 = getelementptr inbounds [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom612, i64 %idxprom895, i64 %idxprom894
  %168 = load i32* %arrayidx932, align 4, !tbaa !17
  %mul933 = mul nsw i32 %167, %168
  %add934 = add nsw i32 %mul933, %div67
  %shr935 = ashr i32 %add934, %add66
  %169 = load %struct.ImageParameters** @img, align 8, !tbaa !1
  %arrayidx942 = getelementptr inbounds %struct.ImageParameters* %169, i64 0, i32 46, i64 %idxprom890, i64 %idxprom888
  %170 = load i32* %arrayidx942, align 4, !tbaa !17
  %171 = load i32* %arrayidx892, align 4, !tbaa !17
  %sub949 = sub nsw i32 %170, %171
  %ispos1922 = icmp sgt i32 %sub949, -1
  %neg1923 = sub i32 0, %sub949
  %172 = select i1 %ispos1922, i32 %sub949, i32 %neg1923
  %mul957 = mul nsw i32 %172, %168
  %add958 = add nsw i32 %mul957, %div67
  %shr959 = ashr i32 %add958, %add66
  %cmp960 = icmp ne i32 %shr935, %shr959
  %cmp963 = icmp ne i32 %shr935, 0
  %or.cond1451 = and i1 %cmp960, %cmp963
  %cmp966 = icmp ne i32 %shr959, 0
  %or.cond1452 = and i1 %or.cond1451, %cmp966
  br i1 %or.cond1452, label %if.then968, label %if.else1063

if.then968:                                       ; preds = %if.end885
  %call976 = call i32 @sign(i32 %shr935, i32 %sub925) #1
  %arrayidx982 = getelementptr inbounds [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom612, i64 %idxprom895, i64 %idxprom894
  %173 = load i32* %arrayidx982, align 4, !tbaa !17
  %mul983 = mul nsw i32 %173, %call976
  %arrayidx987 = getelementptr inbounds [4 x [4 x i32]]* @A, i64 0, i64 %idxprom895, i64 %idxprom894
  %174 = load i32* %arrayidx987, align 4, !tbaa !17
  %mul988 = mul nsw i32 %mul983, %174
  %shl989 = shl i32 %mul988, %div551955
  %shr990 = ashr i32 %shl989, 6
  %175 = load i32* %arrayidx892, align 4, !tbaa !17
  %sub991 = sub i32 %170, %175
  %sub998 = sub i32 %sub991, %shr990
  %conv999 = sitofp i32 %sub998 to double
  call void @levrun_linfo_inter(i32 %shr935, i32 %inc886, i32* %len, i32* %info) #1
  %mul1000 = fmul double %conv999, %conv999
  %176 = load i32* %len, align 4, !tbaa !17
  %conv1001 = sitofp i32 %176 to double
  %mul1002 = fmul double %mul9, %conv1001
  %add1003 = fadd double %mul1002, %mul1000
  %177 = load %struct.ImageParameters** @img, align 8, !tbaa !1
  %arrayidx1010 = getelementptr inbounds %struct.ImageParameters* %177, i64 0, i32 46, i64 %idxprom890, i64 %idxprom888
  %178 = load i32* %arrayidx1010, align 4, !tbaa !17
  %call1011 = call i32 @sign(i32 %shr959, i32 %sub949) #1
  %mul1018 = mul nsw i32 %173, %call1011
  %mul1023 = mul nsw i32 %mul1018, %174
  %shl1024 = shl i32 %mul1023, %div551955
  %shr1025 = ashr i32 %shl1024, 6
  %179 = load i32* %arrayidx892, align 4, !tbaa !17
  %sub1026 = sub i32 %178, %179
  %sub1033 = sub i32 %sub1026, %shr1025
  %conv1034 = sitofp i32 %sub1033 to double
  call void @levrun_linfo_inter(i32 %shr959, i32 %inc886, i32* %len, i32* %info) #1
  %mul1035 = fmul double %conv1034, %conv1034
  %180 = load i32* %len, align 4, !tbaa !17
  %conv1036 = sitofp i32 %180 to double
  %mul1037 = fmul double %mul9, %conv1036
  %add1038 = fadd double %mul1037, %mul1035
  %cmp1039 = fcmp oeq double %add1003, %add1038
  br i1 %cmp1039, label %if.then1041, label %if.else1050

if.then1041:                                      ; preds = %if.then968
  %ispos1926 = icmp sgt i32 %shr935, -1
  %neg1927 = sub i32 0, %shr935
  %181 = select i1 %ispos1926, i32 %shr935, i32 %neg1927
  %ispos1928 = icmp sgt i32 %shr959, -1
  %neg1929 = sub i32 0, %shr959
  %182 = select i1 %ispos1928, i32 %shr959, i32 %neg1929
  %cmp1044 = icmp slt i32 %181, %182
  br label %if.end1056

if.else1050:                                      ; preds = %if.then968
  %cmp1051 = fcmp olt double %add1003, %add1038
  br label %if.end1056

if.end1056:                                       ; preds = %if.else1050, %if.then1041
  %cmp1044.sink = phi i1 [ %cmp1044, %if.then1041 ], [ %cmp1051, %if.else1050 ]
  %cond1049 = select i1 %cmp1044.sink, i32 %shr935, i32 %shr959
  %cmp1057 = icmp eq i32 %cond1049, %shr935
  %cond1062 = select i1 %cmp1057, i32 %sub925, i32 %sub949
  br label %if.end1081

if.else1063:                                      ; preds = %if.end885
  %cmp1064 = icmp eq i32 %shr935, %shr959
  br i1 %cmp1064, label %if.end1081, label %if.else1067

if.else1067:                                      ; preds = %if.else1063
  %cmp1068 = icmp eq i32 %shr935, 0
  %cond1079 = select i1 %cmp1068, i32 %sub925, i32 %sub949
  br i1 %cmp1068, label %if.end1128, label %if.end1081

if.end1081:                                       ; preds = %if.else1067, %if.else1063, %if.end1056
  %level.4 = phi i32 [ %cond1049, %if.end1056 ], [ %shr959, %if.else1067 ], [ %shr935, %if.else1063 ]
  %c_err.1 = phi i32 [ %cond1062, %if.end1056 ], [ %cond1079, %if.else1067 ], [ %sub925, %if.else1063 ]
  %cmp1082 = icmp eq i32 %level.4, 0
  br i1 %cmp1082, label %if.end1128, label %if.then1084

if.then1084:                                      ; preds = %if.end1081
  %183 = load i64* %cbp_blk, align 8, !tbaa !55
  %or1094 = or i64 %183, %conv1092
  store i64 %or1094, i64* %cbp_blk, align 8, !tbaa !55
  %call1107 = call i32 @sign(i32 %level.4, i32 %c_err.1) #1
  %idxprom1108 = sext i32 %scan_pos.22000 to i64
  %arrayidx1109 = getelementptr inbounds i32* %157, i64 %idxprom1108
  store i32 %call1107, i32* %arrayidx1109, align 4, !tbaa !17
  %arrayidx1111 = getelementptr inbounds i32* %158, i64 %idxprom1108
  store i32 %inc886, i32* %arrayidx1111, align 4, !tbaa !17
  %inc1112 = add nsw i32 %scan_pos.22000, 1
  %call1113 = call i32 @sign(i32 %level.4, i32 %c_err.1) #1
  %arrayidx1119 = getelementptr inbounds [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom612, i64 %idxprom895, i64 %idxprom894
  %184 = load i32* %arrayidx1119, align 4, !tbaa !17
  %mul1120 = mul nsw i32 %184, %call1113
  %arrayidx1124 = getelementptr inbounds [4 x [4 x i32]]* @A, i64 0, i64 %idxprom895, i64 %idxprom894
  %185 = load i32* %arrayidx1124, align 4, !tbaa !17
  %mul1125 = mul nsw i32 %mul1120, %185
  %shl1126 = shl i32 %mul1125, %div551955
  %shr1127 = ashr i32 %shl1126, 6
  br label %if.end1128

if.end1128:                                       ; preds = %if.else1067, %if.end1081, %if.then1084
  %cr_cbp_tmp.3 = phi i32 [ 2, %if.then1084 ], [ %cr_cbp_tmp.21997, %if.end1081 ], [ %cr_cbp_tmp.21997, %if.else1067 ]
  %run.3 = phi i32 [ -1, %if.then1084 ], [ %inc886, %if.end1081 ], [ %inc886, %if.else1067 ]
  %scan_pos.3 = phi i32 [ %inc1112, %if.then1084 ], [ %scan_pos.22000, %if.end1081 ], [ %scan_pos.22000, %if.else1067 ]
  %ilev.1 = phi i32 [ %shr1127, %if.then1084 ], [ 0, %if.end1081 ], [ 0, %if.else1067 ]
  %186 = load i32* %arrayidx892, align 4, !tbaa !17
  %add1135 = add nsw i32 %186, %ilev.1
  %ispos1924 = icmp sgt i32 %add1135, -1
  %neg1925 = sub i32 0, %add1135
  %187 = select i1 %ispos1924, i32 %add1135, i32 %neg1925
  %mul1143 = mul nsw i32 %187, %165
  %add1144 = add nsw i32 %mul1143, %div94
  %shr1145 = ashr i32 %add1144, %add92
  %call1146 = call i32 @sign(i32 %shr1145, i32 %add1135) #1
  %arrayidx1152 = getelementptr inbounds [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom590, i64 %idxprom895, i64 %idxprom894
  %188 = load i32* %arrayidx1152, align 4, !tbaa !17
  %mul1153 = mul nsw i32 %188, %call1146
  %shl1154 = shl i32 %mul1153, %div791957
  %189 = load %struct.ImageParameters** @img, align 8, !tbaa !1
  %arrayidx1161 = getelementptr inbounds %struct.ImageParameters* %189, i64 0, i32 46, i64 %idxprom890, i64 %idxprom888
  store i32 %shl1154, i32* %arrayidx1161, align 4, !tbaa !17
  %indvars.iv.next2066 = add nuw nsw i64 %indvars.iv2065, 1
  %exitcond2067 = icmp eq i64 %indvars.iv.next2066, 16
  br i1 %exitcond2067, label %for.end1164, label %for.body863

for.end1164:                                      ; preds = %if.end1128
  %idxprom1165 = sext i32 %scan_pos.3 to i64
  %arrayidx1166 = getelementptr inbounds i32* %157, i64 %idxprom1165
  store i32 0, i32* %arrayidx1166, align 4, !tbaa !17
  %add1168 = add nsw i32 %n1.22005, 4
  %cmp840 = icmp slt i32 %add1168, 5
  br i1 %cmp840, label %for.body842, label %for.inc1170

for.inc1170:                                      ; preds = %for.end1164
  %add1171 = add nsw i32 %n2.22008, 4
  %cmp836 = icmp slt i32 %add1171, 5
  br i1 %cmp836, label %for.cond839.preheader, label %for.end1172

for.end1172:                                      ; preds = %for.inc1170
  %cmp1173 = icmp eq i32 %cr_cbp_tmp.3, 2
  %max_imgpel_value_uv = getelementptr inbounds %struct.ImageParameters* %189, i64 0, i32 156
  br label %for.cond1181.preheader

for.cond1181.preheader:                           ; preds = %for.end1172, %for.inc1419
  %indvars.iv2063 = phi i64 [ 0, %for.end1172 ], [ %indvars.iv.next2064, %for.inc1419 ]
  br label %for.cond1185.preheader

for.cond1422.preheader:                           ; preds = %for.inc1419
  %.cr_cbp.addr.0 = select i1 %cmp1173, i32 2, i32 %cr_cbp.addr.1
  %pix_c_x = getelementptr inbounds %struct.ImageParameters* %189, i64 0, i32 35
  %190 = load i32* %pix_c_x, align 4, !tbaa !58
  %pix_c_y = getelementptr inbounds %struct.ImageParameters* %189, i64 0, i32 36
  %191 = load i32* %pix_c_y, align 4, !tbaa !59
  %idxprom1440 = sext i32 %uv to i64
  %192 = load %struct.storable_picture** @enc_picture, align 8, !tbaa !1
  %imgUV = getelementptr inbounds %struct.storable_picture* %192, i64 0, i32 30
  %193 = load i16**** %imgUV, align 8, !tbaa !60
  %arrayidx1441 = getelementptr inbounds i16*** %193, i64 %idxprom1440
  %194 = load i16*** %arrayidx1441, align 8, !tbaa !1
  %195 = sext i32 %190 to i64
  %196 = sext i32 %191 to i64
  br label %for.cond1426.preheader

for.cond1185.preheader:                           ; preds = %for.cond1181.preheader, %for.inc1416
  %indvars.iv2061 = phi i64 [ 0, %for.cond1181.preheader ], [ %indvars.iv.next2062, %for.inc1416 ]
  br label %for.cond1189.preheader

for.cond1189.preheader:                           ; preds = %for.cond1189.preheader, %for.cond1185.preheader
  %indvars.iv2040 = phi i64 [ 0, %for.cond1185.preheader ], [ %indvars.iv.next2041, %for.cond1189.preheader ]
  %197 = add nsw i64 %indvars.iv2040, %indvars.iv2063
  %arrayidx1199 = getelementptr inbounds %struct.ImageParameters* %189, i64 0, i32 46, i64 %indvars.iv2061, i64 %197
  %198 = load i32* %arrayidx1199, align 4, !tbaa !17
  store i32 %198, i32* %arrayidx175, align 16, !tbaa !17
  %199 = or i64 %indvars.iv2061, 1
  %arrayidx1199.1 = getelementptr inbounds %struct.ImageParameters* %189, i64 0, i32 46, i64 %199, i64 %197
  %200 = load i32* %arrayidx1199.1, align 4, !tbaa !17
  store i32 %200, i32* %arrayidx176, align 4, !tbaa !17
  %201 = or i64 %indvars.iv2061, 2
  %arrayidx1199.2 = getelementptr inbounds %struct.ImageParameters* %189, i64 0, i32 46, i64 %201, i64 %197
  %202 = load i32* %arrayidx1199.2, align 4, !tbaa !17
  store i32 %202, i32* %arrayidx194, align 8, !tbaa !17
  %203 = or i64 %indvars.iv2061, 3
  %arrayidx1199.3 = getelementptr inbounds %struct.ImageParameters* %189, i64 0, i32 46, i64 %203, i64 %197
  %204 = load i32* %arrayidx1199.3, align 4, !tbaa !17
  store i32 %204, i32* %arrayidx192, align 4, !tbaa !17
  %add1207 = add nsw i32 %202, %198
  %sub1211 = sub nsw i32 %198, %202
  %shr1214 = ashr i32 %200, 1
  %sub1216 = sub nsw i32 %shr1214, %204
  %shr1220 = ashr i32 %204, 1
  %add1221 = add nsw i32 %shr1220, %200
  %add1232 = add nsw i32 %add1221, %add1207
  store i32 %add1232, i32* %arrayidx1199, align 4, !tbaa !17
  %sub1244 = sub nsw i32 %add1207, %add1221
  store i32 %sub1244, i32* %arrayidx1199.3, align 4, !tbaa !17
  %add1232.1 = add nsw i32 %sub1216, %sub1211
  store i32 %add1232.1, i32* %arrayidx1199.1, align 4, !tbaa !17
  %sub1244.1 = sub nsw i32 %sub1211, %sub1216
  store i32 %sub1244.1, i32* %arrayidx1199.2, align 4, !tbaa !17
  %indvars.iv.next2041 = add nuw nsw i64 %indvars.iv2040, 1
  %exitcond2044 = icmp eq i64 %indvars.iv.next2041, 4
  br i1 %exitcond2044, label %for.cond1262.preheader, label %for.cond1189.preheader

for.cond1262.preheader:                           ; preds = %for.cond1189.preheader, %for.cond1262.preheader
  %indvars.iv2056 = phi i64 [ %indvars.iv.next2057, %for.cond1262.preheader ], [ 0, %for.cond1189.preheader ]
  %205 = add nsw i64 %indvars.iv2056, %indvars.iv2061
  %arrayidx1272 = getelementptr inbounds %struct.ImageParameters* %189, i64 0, i32 46, i64 %205, i64 %indvars.iv2063
  %206 = or i64 %indvars.iv2063, 1
  %arrayidx1272.1 = getelementptr inbounds %struct.ImageParameters* %189, i64 0, i32 46, i64 %205, i64 %206
  %207 = or i64 %indvars.iv2063, 2
  %arrayidx1272.2 = getelementptr inbounds %struct.ImageParameters* %189, i64 0, i32 46, i64 %205, i64 %207
  %208 = or i64 %indvars.iv2063, 3
  %arrayidx1272.3 = getelementptr inbounds %struct.ImageParameters* %189, i64 0, i32 46, i64 %205, i64 %208
  %209 = bitcast i32* %arrayidx1272 to <4 x i32>*
  %210 = load <4 x i32>* %209, align 4, !tbaa !17
  store <4 x i32> %210, <4 x i32>* %m5, align 16, !tbaa !17
  %211 = extractelement <4 x i32> %210, i32 0
  %212 = extractelement <4 x i32> %210, i32 2
  %add1280 = add nsw i32 %212, %211
  %sub1284 = sub nsw i32 %211, %212
  %213 = extractelement <4 x i32> %210, i32 1
  %shr1287 = ashr i32 %213, 1
  %214 = extractelement <4 x i32> %210, i32 3
  %sub1289 = sub nsw i32 %shr1287, %214
  %shr1293 = ashr i32 %214, 1
  %add1294 = add nsw i32 %shr1293, %213
  %215 = load i32* %max_imgpel_value_uv, align 4, !tbaa !57
  %add1305 = add i32 %add1280, 32
  %add1306 = add i32 %add1305, %add1294
  %shr1307 = ashr i32 %add1306, 6
  %cmp1308 = icmp slt i32 %shr1307, 0
  %.shr1307 = select i1 %cmp1308, i32 0, i32 %shr1307
  %cmp1321 = icmp slt i32 %215, %.shr1307
  %..shr1307 = select i1 %cmp1321, i32 %215, i32 %.shr1307
  store i32 %..shr1307, i32* %arrayidx1272, align 4, !tbaa !17
  %216 = load i32* %max_imgpel_value_uv, align 4, !tbaa !57
  %add1361 = sub i32 %add1305, %add1294
  %shr1362 = ashr i32 %add1361, 6
  %cmp1363 = icmp slt i32 %shr1362, 0
  %.shr1362 = select i1 %cmp1363, i32 0, i32 %shr1362
  %cmp1376 = icmp slt i32 %216, %.shr1362
  %cond1402 = select i1 %cmp1376, i32 %216, i32 %.shr1362
  store i32 %cond1402, i32* %arrayidx1272.3, align 4, !tbaa !17
  %217 = load i32* %max_imgpel_value_uv, align 4, !tbaa !57
  %add1305.1 = add i32 %sub1284, 32
  %add1306.1 = add i32 %add1305.1, %sub1289
  %shr1307.1 = ashr i32 %add1306.1, 6
  %cmp1308.1 = icmp slt i32 %shr1307.1, 0
  %.shr1307.1 = select i1 %cmp1308.1, i32 0, i32 %shr1307.1
  %cmp1321.1 = icmp slt i32 %217, %.shr1307.1
  %..shr1307.1 = select i1 %cmp1321.1, i32 %217, i32 %.shr1307.1
  store i32 %..shr1307.1, i32* %arrayidx1272.1, align 4, !tbaa !17
  %218 = load i32* %max_imgpel_value_uv, align 4, !tbaa !57
  %add1361.1 = sub i32 %add1305.1, %sub1289
  %shr1362.1 = ashr i32 %add1361.1, 6
  %cmp1363.1 = icmp slt i32 %shr1362.1, 0
  %.shr1362.1 = select i1 %cmp1363.1, i32 0, i32 %shr1362.1
  %cmp1376.1 = icmp slt i32 %218, %.shr1362.1
  %cond1402.1 = select i1 %cmp1376.1, i32 %218, i32 %.shr1362.1
  store i32 %cond1402.1, i32* %arrayidx1272.2, align 4, !tbaa !17
  %indvars.iv.next2057 = add nuw nsw i64 %indvars.iv2056, 1
  %exitcond2060 = icmp eq i64 %indvars.iv.next2057, 4
  br i1 %exitcond2060, label %for.inc1416, label %for.cond1262.preheader

for.inc1416:                                      ; preds = %for.cond1262.preheader
  %indvars.iv.next2062 = add nuw nsw i64 %indvars.iv2061, 4
  %219 = trunc i64 %indvars.iv.next2062 to i32
  %cmp1182 = icmp slt i32 %219, 5
  br i1 %cmp1182, label %for.cond1185.preheader, label %for.inc1419

for.inc1419:                                      ; preds = %for.inc1416
  %indvars.iv.next2064 = add nuw nsw i64 %indvars.iv2063, 4
  %220 = trunc i64 %indvars.iv.next2064 to i32
  %cmp1178 = icmp slt i32 %220, 5
  br i1 %cmp1178, label %for.cond1181.preheader, label %for.cond1422.preheader

for.cond1426.preheader:                           ; preds = %for.cond1426.preheader, %for.cond1422.preheader
  %indvars.iv = phi i64 [ 0, %for.cond1422.preheader ], [ %indvars.iv.next, %for.cond1426.preheader ]
  %221 = add nsw i64 %196, %indvars.iv
  %arrayidx1442 = getelementptr inbounds i16** %194, i64 %221
  %222 = load i16** %arrayidx1442, align 8, !tbaa !1
  %arrayidx1434 = getelementptr inbounds %struct.ImageParameters* %189, i64 0, i32 46, i64 0, i64 %indvars.iv
  %223 = load i32* %arrayidx1434, align 4, !tbaa !17
  %arrayidx1443 = getelementptr inbounds i16* %222, i64 %195
  %arrayidx1434.1 = getelementptr inbounds %struct.ImageParameters* %189, i64 0, i32 46, i64 1, i64 %indvars.iv
  %224 = load i32* %arrayidx1434.1, align 4, !tbaa !17
  %arrayidx1434.2 = getelementptr inbounds %struct.ImageParameters* %189, i64 0, i32 46, i64 2, i64 %indvars.iv
  %225 = load i32* %arrayidx1434.2, align 4, !tbaa !17
  %arrayidx1434.3 = getelementptr inbounds %struct.ImageParameters* %189, i64 0, i32 46, i64 3, i64 %indvars.iv
  %226 = load i32* %arrayidx1434.3, align 4, !tbaa !17
  %arrayidx1434.4 = getelementptr inbounds %struct.ImageParameters* %189, i64 0, i32 46, i64 4, i64 %indvars.iv
  %227 = load i32* %arrayidx1434.4, align 4, !tbaa !17
  %arrayidx1434.5 = getelementptr inbounds %struct.ImageParameters* %189, i64 0, i32 46, i64 5, i64 %indvars.iv
  %228 = load i32* %arrayidx1434.5, align 4, !tbaa !17
  %arrayidx1434.6 = getelementptr inbounds %struct.ImageParameters* %189, i64 0, i32 46, i64 6, i64 %indvars.iv
  %229 = load i32* %arrayidx1434.6, align 4, !tbaa !17
  %arrayidx1434.7 = getelementptr inbounds %struct.ImageParameters* %189, i64 0, i32 46, i64 7, i64 %indvars.iv
  %230 = load i32* %arrayidx1434.7, align 4, !tbaa !17
  %231 = insertelement <8 x i32> undef, i32 %223, i32 0
  %232 = insertelement <8 x i32> %231, i32 %224, i32 1
  %233 = insertelement <8 x i32> %232, i32 %225, i32 2
  %234 = insertelement <8 x i32> %233, i32 %226, i32 3
  %235 = insertelement <8 x i32> %234, i32 %227, i32 4
  %236 = insertelement <8 x i32> %235, i32 %228, i32 5
  %237 = insertelement <8 x i32> %236, i32 %229, i32 6
  %238 = insertelement <8 x i32> %237, i32 %230, i32 7
  %239 = trunc <8 x i32> %238 to <8 x i16>
  %240 = bitcast i16* %arrayidx1443 to <8 x i16>*
  store <8 x i16> %239, <8 x i16>* %240, align 2, !tbaa !21
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 8
  br i1 %exitcond, label %for.end1449, label %for.cond1426.preheader

for.end1449:                                      ; preds = %for.cond1426.preheader
  call void @llvm.lifetime.end(i64 256, i8* %0) #1
  ret i32 %.cr_cbp.addr.0
}

declare void @levrun_linfo_c2x2(i32, i32, i32*, i32*) #2

; Function Attrs: nounwind uwtable
define void @copyblock_sp(i32 %block_x, i32 %block_y) #0 {
entry:
  %predicted_block = alloca [4 x [4 x i32]], align 16
  %0 = load %struct.ImageParameters** @img, align 8, !tbaa !1
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 3
  %1 = load i32* %current_mb_nr, align 4, !tbaa !8
  %idxprom = sext i32 %1 to i64
  %mb_data = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 51
  %2 = load %struct.macroblock** %mb_data, align 8, !tbaa !28
  %3 = bitcast [4 x [4 x i32]]* %predicted_block to i8*
  call void @llvm.lifetime.start(i64 64, i8* %3) #1
  %qpsp = getelementptr inbounds %struct.macroblock* %2, i64 %idxprom, i32 4
  %4 = load i32* %qpsp, align 4, !tbaa !61
  %div = sdiv i32 %4, 6
  %add = add nsw i32 %div, 15
  %shl = shl i32 1, %add
  %5 = sext i32 %block_x to i64
  %6 = sext i32 %block_y to i64
  %arrayidx12 = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 45, i64 %5, i64 %6
  %7 = add nsw i64 %5, 1
  %arrayidx12.1 = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 45, i64 %7, i64 %6
  %arrayidx16.1 = getelementptr inbounds [4 x [4 x i32]]* %predicted_block, i64 0, i64 1, i64 0
  %8 = add nsw i64 %5, 2
  %arrayidx12.2 = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 45, i64 %8, i64 %6
  %arrayidx16.2 = getelementptr inbounds [4 x [4 x i32]]* %predicted_block, i64 0, i64 2, i64 0
  %9 = add nsw i64 %5, 3
  %arrayidx12.3 = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 45, i64 %9, i64 %6
  %arrayidx16.3 = getelementptr inbounds [4 x [4 x i32]]* %predicted_block, i64 0, i64 3, i64 0
  %10 = bitcast i16* %arrayidx12 to <4 x i16>*
  %11 = load <4 x i16>* %10, align 2, !tbaa !21
  %12 = zext <4 x i16> %11 to <4 x i32>
  %13 = bitcast [4 x [4 x i32]]* %predicted_block to <4 x i32>*
  store <4 x i32> %12, <4 x i32>* %13, align 16, !tbaa !17
  %14 = bitcast i16* %arrayidx12.1 to <4 x i16>*
  %15 = load <4 x i16>* %14, align 2, !tbaa !21
  %16 = zext <4 x i16> %15 to <4 x i32>
  %17 = bitcast i32* %arrayidx16.1 to <4 x i32>*
  store <4 x i32> %16, <4 x i32>* %17, align 16, !tbaa !17
  %18 = bitcast i16* %arrayidx12.2 to <4 x i16>*
  %19 = load <4 x i16>* %18, align 2, !tbaa !21
  %20 = zext <4 x i16> %19 to <4 x i32>
  %21 = bitcast i32* %arrayidx16.2 to <4 x i32>*
  store <4 x i32> %20, <4 x i32>* %21, align 16, !tbaa !17
  %22 = bitcast i16* %arrayidx12.3 to <4 x i16>*
  %23 = load <4 x i16>* %22, align 2, !tbaa !21
  %24 = zext <4 x i16> %23 to <4 x i32>
  %25 = bitcast i32* %arrayidx16.3 to <4 x i32>*
  store <4 x i32> %24, <4 x i32>* %25, align 16, !tbaa !17
  %rem = srem i32 %4, 6
  %div3 = sdiv i32 %shl, 2
  %26 = extractelement <4 x i32> %12, i32 0
  %27 = extractelement <4 x i32> %16, i32 0
  %28 = extractelement <4 x i32> %20, i32 0
  %29 = extractelement <4 x i32> %24, i32 0
  br label %for.cond24.preheader

for.cond24.preheader:                             ; preds = %for.cond24.preheader.for.cond24.preheader_crit_edge, %entry
  %30 = phi i32 [ %28, %entry ], [ %.pre628, %for.cond24.preheader.for.cond24.preheader_crit_edge ]
  %31 = phi i32 [ %27, %entry ], [ %.pre627, %for.cond24.preheader.for.cond24.preheader_crit_edge ]
  %32 = phi i32 [ %29, %entry ], [ %.pre626, %for.cond24.preheader.for.cond24.preheader_crit_edge ]
  %33 = phi i32 [ %26, %entry ], [ %.pre, %for.cond24.preheader.for.cond24.preheader_crit_edge ]
  %indvars.iv606 = phi i64 [ 0, %entry ], [ %indvars.iv.next607, %for.cond24.preheader.for.cond24.preheader_crit_edge ]
  %arrayidx32 = getelementptr inbounds [4 x [4 x i32]]* %predicted_block, i64 0, i64 0, i64 %indvars.iv606
  %arrayidx36 = getelementptr inbounds [4 x [4 x i32]]* %predicted_block, i64 0, i64 3, i64 %indvars.iv606
  %add37 = add nsw i32 %32, %33
  %sub48 = sub nsw i32 %33, %32
  %arrayidx32.1 = getelementptr inbounds [4 x [4 x i32]]* %predicted_block, i64 0, i64 1, i64 %indvars.iv606
  %arrayidx36.1 = getelementptr inbounds [4 x [4 x i32]]* %predicted_block, i64 0, i64 2, i64 %indvars.iv606
  %add37.1 = add nsw i32 %30, %31
  %sub48.1 = sub nsw i32 %31, %30
  %add56 = add nsw i32 %add37.1, %add37
  store i32 %add56, i32* %arrayidx32, align 4, !tbaa !17
  %sub62 = sub nsw i32 %add37, %add37.1
  store i32 %sub62, i32* %arrayidx36.1, align 4, !tbaa !17
  %mul = shl i32 %sub48, 1
  %add68 = add nsw i32 %mul, %sub48.1
  store i32 %add68, i32* %arrayidx32.1, align 4, !tbaa !17
  %mul74 = shl nsw i32 %sub48.1, 1
  %sub75 = sub nsw i32 %sub48, %mul74
  store i32 %sub75, i32* %arrayidx36, align 4, !tbaa !17
  %indvars.iv.next607 = add nuw nsw i64 %indvars.iv606, 1
  %exitcond608 = icmp eq i64 %indvars.iv.next607, 4
  br i1 %exitcond608, label %for.cond86.preheader, label %for.cond24.preheader.for.cond24.preheader_crit_edge

for.cond24.preheader.for.cond24.preheader_crit_edge: ; preds = %for.cond24.preheader
  %arrayidx32.phi.trans.insert = getelementptr inbounds [4 x [4 x i32]]* %predicted_block, i64 0, i64 0, i64 %indvars.iv.next607
  %.pre = load i32* %arrayidx32.phi.trans.insert, align 4, !tbaa !17
  %arrayidx36.phi.trans.insert = getelementptr inbounds [4 x [4 x i32]]* %predicted_block, i64 0, i64 3, i64 %indvars.iv.next607
  %.pre626 = load i32* %arrayidx36.phi.trans.insert, align 4, !tbaa !17
  %arrayidx32.1.phi.trans.insert = getelementptr inbounds [4 x [4 x i32]]* %predicted_block, i64 0, i64 1, i64 %indvars.iv.next607
  %.pre627 = load i32* %arrayidx32.1.phi.trans.insert, align 4, !tbaa !17
  %arrayidx36.1.phi.trans.insert = getelementptr inbounds [4 x [4 x i32]]* %predicted_block, i64 0, i64 2, i64 %indvars.iv.next607
  %.pre628 = load i32* %arrayidx36.1.phi.trans.insert, align 4, !tbaa !17
  br label %for.cond24.preheader

for.cond86.preheader:                             ; preds = %for.cond24.preheader, %for.cond86.preheader
  %indvars.iv599 = phi i64 [ %indvars.iv.next600, %for.cond86.preheader ], [ 0, %for.cond24.preheader ]
  %arrayidx94 = getelementptr inbounds [4 x [4 x i32]]* %predicted_block, i64 0, i64 %indvars.iv599, i64 0
  %34 = load i32* %arrayidx94, align 16, !tbaa !17
  %arrayidx98 = getelementptr inbounds [4 x [4 x i32]]* %predicted_block, i64 0, i64 %indvars.iv599, i64 3
  %35 = load i32* %arrayidx98, align 4, !tbaa !17
  %add99 = add nsw i32 %35, %34
  %sub110 = sub nsw i32 %34, %35
  %arrayidx94.1 = getelementptr inbounds [4 x [4 x i32]]* %predicted_block, i64 0, i64 %indvars.iv599, i64 1
  %36 = load i32* %arrayidx94.1, align 4, !tbaa !17
  %arrayidx98.1 = getelementptr inbounds [4 x [4 x i32]]* %predicted_block, i64 0, i64 %indvars.iv599, i64 2
  %37 = load i32* %arrayidx98.1, align 8, !tbaa !17
  %add99.1 = add nsw i32 %37, %36
  %sub110.1 = sub nsw i32 %36, %37
  %add118 = add nsw i32 %add99.1, %add99
  store i32 %add118, i32* %arrayidx94, align 16, !tbaa !17
  %sub124 = sub nsw i32 %add99, %add99.1
  store i32 %sub124, i32* %arrayidx98.1, align 8, !tbaa !17
  %mul129 = shl i32 %sub110, 1
  %add131 = add nsw i32 %mul129, %sub110.1
  store i32 %add131, i32* %arrayidx94.1, align 4, !tbaa !17
  %mul137 = shl nsw i32 %sub110.1, 1
  %sub138 = sub nsw i32 %sub110, %mul137
  store i32 %sub138, i32* %arrayidx98, align 4, !tbaa !17
  %indvars.iv.next600 = add nuw nsw i64 %indvars.iv599, 1
  %exitcond601 = icmp eq i64 %indvars.iv.next600, 4
  br i1 %exitcond601, label %for.cond145.preheader, label %for.cond86.preheader

for.cond145.preheader:                            ; preds = %for.cond86.preheader
  %idxprom159 = sext i32 %rem to i64
  br label %for.cond149.preheader

for.cond149.preheader:                            ; preds = %for.cond149.preheader, %for.cond145.preheader
  %indvars.iv592 = phi i64 [ 0, %for.cond145.preheader ], [ %indvars.iv.next593, %for.cond149.preheader ]
  %arrayidx156 = getelementptr inbounds [4 x [4 x i32]]* %predicted_block, i64 0, i64 0, i64 %indvars.iv592
  %38 = load i32* %arrayidx156, align 4, !tbaa !17
  %ispos = icmp sgt i32 %38, -1
  %neg = sub i32 0, %38
  %39 = select i1 %ispos, i32 %38, i32 %neg
  %arrayidx162 = getelementptr inbounds [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom159, i64 0, i64 %indvars.iv592
  %40 = load i32* %arrayidx162, align 4, !tbaa !17
  %mul163 = mul nsw i32 %39, %40
  %add164 = add nsw i32 %mul163, %div3
  %shr = ashr i32 %add164, %add
  %call169 = call i32 @sign(i32 %shr, i32 %38) #1
  %arrayidx175 = getelementptr inbounds [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom159, i64 0, i64 %indvars.iv592
  %41 = load i32* %arrayidx175, align 4, !tbaa !17
  %mul176 = mul nsw i32 %41, %call169
  %shl177 = shl i32 %mul176, %div
  %42 = load %struct.ImageParameters** @img, align 8, !tbaa !1
  %arrayidx181 = getelementptr inbounds %struct.ImageParameters* %42, i64 0, i32 46, i64 0, i64 %indvars.iv592
  store i32 %shl177, i32* %arrayidx181, align 4, !tbaa !17
  %arrayidx156.1 = getelementptr inbounds [4 x [4 x i32]]* %predicted_block, i64 0, i64 1, i64 %indvars.iv592
  %43 = load i32* %arrayidx156.1, align 4, !tbaa !17
  %ispos.1 = icmp sgt i32 %43, -1
  %neg.1 = sub i32 0, %43
  %44 = select i1 %ispos.1, i32 %43, i32 %neg.1
  %arrayidx162.1 = getelementptr inbounds [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom159, i64 1, i64 %indvars.iv592
  %45 = load i32* %arrayidx162.1, align 4, !tbaa !17
  %mul163.1 = mul nsw i32 %44, %45
  %add164.1 = add nsw i32 %mul163.1, %div3
  %shr.1 = ashr i32 %add164.1, %add
  %call169.1 = call i32 @sign(i32 %shr.1, i32 %43) #1
  %arrayidx175.1 = getelementptr inbounds [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom159, i64 1, i64 %indvars.iv592
  %46 = load i32* %arrayidx175.1, align 4, !tbaa !17
  %mul176.1 = mul nsw i32 %46, %call169.1
  %shl177.1 = shl i32 %mul176.1, %div
  %47 = load %struct.ImageParameters** @img, align 8, !tbaa !1
  %arrayidx181.1 = getelementptr inbounds %struct.ImageParameters* %47, i64 0, i32 46, i64 1, i64 %indvars.iv592
  store i32 %shl177.1, i32* %arrayidx181.1, align 4, !tbaa !17
  %arrayidx156.2 = getelementptr inbounds [4 x [4 x i32]]* %predicted_block, i64 0, i64 2, i64 %indvars.iv592
  %48 = load i32* %arrayidx156.2, align 4, !tbaa !17
  %ispos.2 = icmp sgt i32 %48, -1
  %neg.2 = sub i32 0, %48
  %49 = select i1 %ispos.2, i32 %48, i32 %neg.2
  %arrayidx162.2 = getelementptr inbounds [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom159, i64 2, i64 %indvars.iv592
  %50 = load i32* %arrayidx162.2, align 4, !tbaa !17
  %mul163.2 = mul nsw i32 %49, %50
  %add164.2 = add nsw i32 %mul163.2, %div3
  %shr.2 = ashr i32 %add164.2, %add
  %call169.2 = call i32 @sign(i32 %shr.2, i32 %48) #1
  %arrayidx175.2 = getelementptr inbounds [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom159, i64 2, i64 %indvars.iv592
  %51 = load i32* %arrayidx175.2, align 4, !tbaa !17
  %mul176.2 = mul nsw i32 %51, %call169.2
  %shl177.2 = shl i32 %mul176.2, %div
  %52 = load %struct.ImageParameters** @img, align 8, !tbaa !1
  %arrayidx181.2 = getelementptr inbounds %struct.ImageParameters* %52, i64 0, i32 46, i64 2, i64 %indvars.iv592
  store i32 %shl177.2, i32* %arrayidx181.2, align 4, !tbaa !17
  %arrayidx156.3 = getelementptr inbounds [4 x [4 x i32]]* %predicted_block, i64 0, i64 3, i64 %indvars.iv592
  %53 = load i32* %arrayidx156.3, align 4, !tbaa !17
  %ispos.3 = icmp sgt i32 %53, -1
  %neg.3 = sub i32 0, %53
  %54 = select i1 %ispos.3, i32 %53, i32 %neg.3
  %arrayidx162.3 = getelementptr inbounds [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom159, i64 3, i64 %indvars.iv592
  %55 = load i32* %arrayidx162.3, align 4, !tbaa !17
  %mul163.3 = mul nsw i32 %54, %55
  %add164.3 = add nsw i32 %mul163.3, %div3
  %shr.3 = ashr i32 %add164.3, %add
  %call169.3 = call i32 @sign(i32 %shr.3, i32 %53) #1
  %arrayidx175.3 = getelementptr inbounds [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom159, i64 3, i64 %indvars.iv592
  %56 = load i32* %arrayidx175.3, align 4, !tbaa !17
  %mul176.3 = mul nsw i32 %56, %call169.3
  %shl177.3 = shl i32 %mul176.3, %div
  %57 = load %struct.ImageParameters** @img, align 8, !tbaa !1
  %arrayidx181.3 = getelementptr inbounds %struct.ImageParameters* %57, i64 0, i32 46, i64 3, i64 %indvars.iv592
  store i32 %shl177.3, i32* %arrayidx181.3, align 4, !tbaa !17
  %indvars.iv.next593 = add nuw nsw i64 %indvars.iv592, 1
  %exitcond594 = icmp eq i64 %indvars.iv.next593, 4
  br i1 %exitcond594, label %for.cond192.preheader, label %for.cond149.preheader

for.cond192.preheader:                            ; preds = %for.cond149.preheader, %for.cond192.preheader
  %indvars.iv586 = phi i64 [ %indvars.iv.next587, %for.cond192.preheader ], [ 0, %for.cond149.preheader ]
  %arrayidx200 = getelementptr inbounds %struct.ImageParameters* %57, i64 0, i32 46, i64 0, i64 %indvars.iv586
  %58 = load i32* %arrayidx200, align 4, !tbaa !17
  %arrayidx200.1 = getelementptr inbounds %struct.ImageParameters* %57, i64 0, i32 46, i64 1, i64 %indvars.iv586
  %59 = load i32* %arrayidx200.1, align 4, !tbaa !17
  %arrayidx200.2 = getelementptr inbounds %struct.ImageParameters* %57, i64 0, i32 46, i64 2, i64 %indvars.iv586
  %60 = load i32* %arrayidx200.2, align 4, !tbaa !17
  %arrayidx200.3 = getelementptr inbounds %struct.ImageParameters* %57, i64 0, i32 46, i64 3, i64 %indvars.iv586
  %61 = load i32* %arrayidx200.3, align 4, !tbaa !17
  %add208 = add nsw i32 %60, %58
  %sub212 = sub nsw i32 %58, %60
  %shr215 = ashr i32 %59, 1
  %sub217 = sub nsw i32 %shr215, %61
  %shr221 = ashr i32 %61, 1
  %add222 = add nsw i32 %shr221, %59
  %add233 = add nsw i32 %add222, %add208
  store i32 %add233, i32* %arrayidx200, align 4, !tbaa !17
  %sub243 = sub nsw i32 %add208, %add222
  store i32 %sub243, i32* %arrayidx200.3, align 4, !tbaa !17
  %add233.1 = add nsw i32 %sub217, %sub212
  store i32 %add233.1, i32* %arrayidx200.1, align 4, !tbaa !17
  %sub243.1 = sub nsw i32 %sub212, %sub217
  store i32 %sub243.1, i32* %arrayidx200.2, align 4, !tbaa !17
  %indvars.iv.next587 = add nuw nsw i64 %indvars.iv586, 1
  %exitcond588 = icmp eq i64 %indvars.iv.next587, 4
  br i1 %exitcond588, label %for.cond255.preheader, label %for.cond192.preheader

for.cond255.preheader:                            ; preds = %for.cond192.preheader
  %max_imgpel_value = getelementptr inbounds %struct.ImageParameters* %57, i64 0, i32 155
  %.pre629 = load i32* %max_imgpel_value, align 4, !tbaa !24
  %62 = insertelement <4 x i32> undef, i32 %.pre629, i32 0
  %63 = insertelement <4 x i32> %62, i32 %.pre629, i32 1
  %64 = insertelement <4 x i32> %63, i32 %.pre629, i32 2
  %65 = insertelement <4 x i32> %64, i32 %.pre629, i32 3
  %66 = insertelement <4 x i32> undef, i32 %.pre629, i32 0
  %67 = insertelement <4 x i32> %66, i32 %.pre629, i32 1
  %68 = insertelement <4 x i32> %67, i32 %.pre629, i32 2
  %69 = insertelement <4 x i32> %68, i32 %.pre629, i32 3
  br label %for.cond259.preheader

for.cond259.preheader:                            ; preds = %for.cond259.preheader, %for.cond255.preheader
  %indvars.iv = phi i64 [ 0, %for.cond255.preheader ], [ %indvars.iv.next, %for.cond259.preheader ]
  %arrayidx267 = getelementptr inbounds %struct.ImageParameters* %57, i64 0, i32 46, i64 %indvars.iv, i64 0
  %70 = load i32* %arrayidx267, align 4, !tbaa !17
  %arrayidx267.1 = getelementptr inbounds %struct.ImageParameters* %57, i64 0, i32 46, i64 %indvars.iv, i64 1
  %71 = load i32* %arrayidx267.1, align 4, !tbaa !17
  %arrayidx267.2 = getelementptr inbounds %struct.ImageParameters* %57, i64 0, i32 46, i64 %indvars.iv, i64 2
  %72 = load i32* %arrayidx267.2, align 4, !tbaa !17
  %arrayidx267.3 = getelementptr inbounds %struct.ImageParameters* %57, i64 0, i32 46, i64 %indvars.iv, i64 3
  %73 = load i32* %arrayidx267.3, align 4, !tbaa !17
  %add275 = add nsw i32 %72, %70
  %sub279 = sub nsw i32 %70, %72
  %shr282 = ashr i32 %71, 1
  %sub284 = sub nsw i32 %shr282, %73
  %shr288 = ashr i32 %73, 1
  %add289 = add nsw i32 %shr288, %71
  %add300 = add i32 %add275, 32
  %add301 = add i32 %add300, %add289
  %add350 = sub i32 %add300, %add289
  %add300.1 = add i32 %sub279, 32
  %add301.1 = add i32 %add300.1, %sub284
  %add350.1 = sub i32 %add300.1, %sub284
  %74 = insertelement <4 x i32> undef, i32 %add301, i32 0
  %75 = insertelement <4 x i32> %74, i32 %add301.1, i32 1
  %76 = insertelement <4 x i32> %75, i32 %add350.1, i32 2
  %77 = insertelement <4 x i32> %76, i32 %add350, i32 3
  %78 = ashr <4 x i32> %77, <i32 6, i32 6, i32 6, i32 6>
  %79 = icmp slt <4 x i32> %78, zeroinitializer
  %80 = select <4 x i1> %79, <4 x i32> zeroinitializer, <4 x i32> %78
  %81 = icmp slt <4 x i32> %65, %80
  %82 = select <4 x i1> %81, <4 x i32> %69, <4 x i32> %80
  %83 = bitcast i32* %arrayidx267 to <4 x i32>*
  store <4 x i32> %82, <4 x i32>* %83, align 4, !tbaa !17
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 4
  br i1 %exitcond, label %for.cond403.preheader, label %for.cond259.preheader

for.cond403.preheader:                            ; preds = %for.cond259.preheader
  %pix_x = getelementptr inbounds %struct.ImageParameters* %57, i64 0, i32 33
  %84 = load i32* %pix_x, align 4, !tbaa !43
  %pix_y = getelementptr inbounds %struct.ImageParameters* %57, i64 0, i32 34
  %85 = load i32* %pix_y, align 4, !tbaa !44
  %86 = load %struct.storable_picture** @enc_picture, align 8, !tbaa !1
  %imgY = getelementptr inbounds %struct.storable_picture* %86, i64 0, i32 25
  %87 = load i16*** %imgY, align 8, !tbaa !5
  %add421 = add i32 %85, %block_y
  %idxprom422 = sext i32 %add421 to i64
  %arrayidx423 = getelementptr inbounds i16** %87, i64 %idxprom422
  %88 = load i16** %arrayidx423, align 8, !tbaa !1
  %arrayidx415 = getelementptr inbounds %struct.ImageParameters* %57, i64 0, i32 46, i64 0, i64 0
  %89 = load i32* %arrayidx415, align 4, !tbaa !17
  %conv416 = trunc i32 %89 to i16
  %add418 = add i32 %84, %block_x
  %idxprom419 = sext i32 %add418 to i64
  %arrayidx424 = getelementptr inbounds i16* %88, i64 %idxprom419
  store i16 %conv416, i16* %arrayidx424, align 2, !tbaa !21
  %arrayidx415.1 = getelementptr inbounds %struct.ImageParameters* %57, i64 0, i32 46, i64 1, i64 0
  %90 = load i32* %arrayidx415.1, align 4, !tbaa !17
  %conv416.1 = trunc i32 %90 to i16
  %add417.1 = add i32 %block_x, 1
  %add418.1 = add i32 %add417.1, %84
  %idxprom419.1 = sext i32 %add418.1 to i64
  %arrayidx424.1 = getelementptr inbounds i16* %88, i64 %idxprom419.1
  store i16 %conv416.1, i16* %arrayidx424.1, align 2, !tbaa !21
  %arrayidx415.2 = getelementptr inbounds %struct.ImageParameters* %57, i64 0, i32 46, i64 2, i64 0
  %91 = load i32* %arrayidx415.2, align 4, !tbaa !17
  %conv416.2 = trunc i32 %91 to i16
  %add417.2 = add i32 %block_x, 2
  %add418.2 = add i32 %add417.2, %84
  %idxprom419.2 = sext i32 %add418.2 to i64
  %arrayidx424.2 = getelementptr inbounds i16* %88, i64 %idxprom419.2
  store i16 %conv416.2, i16* %arrayidx424.2, align 2, !tbaa !21
  %arrayidx415.3 = getelementptr inbounds %struct.ImageParameters* %57, i64 0, i32 46, i64 3, i64 0
  %92 = load i32* %arrayidx415.3, align 4, !tbaa !17
  %conv416.3 = trunc i32 %92 to i16
  %add417.3 = add i32 %block_x, 3
  %add418.3 = add i32 %add417.3, %84
  %idxprom419.3 = sext i32 %add418.3 to i64
  %arrayidx424.3 = getelementptr inbounds i16* %88, i64 %idxprom419.3
  store i16 %conv416.3, i16* %arrayidx424.3, align 2, !tbaa !21
  %add420.1 = add i32 %block_y, 1
  %add421.1 = add i32 %add420.1, %85
  %idxprom422.1 = sext i32 %add421.1 to i64
  %arrayidx423.1 = getelementptr inbounds i16** %87, i64 %idxprom422.1
  %93 = load i16** %arrayidx423.1, align 8, !tbaa !1
  %arrayidx415.1562 = getelementptr inbounds %struct.ImageParameters* %57, i64 0, i32 46, i64 0, i64 1
  %94 = load i32* %arrayidx415.1562, align 4, !tbaa !17
  %conv416.1563 = trunc i32 %94 to i16
  %arrayidx424.1566 = getelementptr inbounds i16* %93, i64 %idxprom419
  store i16 %conv416.1563, i16* %arrayidx424.1566, align 2, !tbaa !21
  %arrayidx415.1.1 = getelementptr inbounds %struct.ImageParameters* %57, i64 0, i32 46, i64 1, i64 1
  %95 = load i32* %arrayidx415.1.1, align 4, !tbaa !17
  %conv416.1.1 = trunc i32 %95 to i16
  %arrayidx424.1.1 = getelementptr inbounds i16* %93, i64 %idxprom419.1
  store i16 %conv416.1.1, i16* %arrayidx424.1.1, align 2, !tbaa !21
  %arrayidx415.2.1 = getelementptr inbounds %struct.ImageParameters* %57, i64 0, i32 46, i64 2, i64 1
  %96 = load i32* %arrayidx415.2.1, align 4, !tbaa !17
  %conv416.2.1 = trunc i32 %96 to i16
  %arrayidx424.2.1 = getelementptr inbounds i16* %93, i64 %idxprom419.2
  store i16 %conv416.2.1, i16* %arrayidx424.2.1, align 2, !tbaa !21
  %arrayidx415.3.1 = getelementptr inbounds %struct.ImageParameters* %57, i64 0, i32 46, i64 3, i64 1
  %97 = load i32* %arrayidx415.3.1, align 4, !tbaa !17
  %conv416.3.1 = trunc i32 %97 to i16
  %arrayidx424.3.1 = getelementptr inbounds i16* %93, i64 %idxprom419.3
  store i16 %conv416.3.1, i16* %arrayidx424.3.1, align 2, !tbaa !21
  %add420.2 = add i32 %block_y, 2
  %add421.2 = add i32 %add420.2, %85
  %idxprom422.2 = sext i32 %add421.2 to i64
  %arrayidx423.2 = getelementptr inbounds i16** %87, i64 %idxprom422.2
  %98 = load i16** %arrayidx423.2, align 8, !tbaa !1
  %arrayidx415.2567 = getelementptr inbounds %struct.ImageParameters* %57, i64 0, i32 46, i64 0, i64 2
  %99 = load i32* %arrayidx415.2567, align 4, !tbaa !17
  %conv416.2568 = trunc i32 %99 to i16
  %arrayidx424.2571 = getelementptr inbounds i16* %98, i64 %idxprom419
  store i16 %conv416.2568, i16* %arrayidx424.2571, align 2, !tbaa !21
  %arrayidx415.1.2 = getelementptr inbounds %struct.ImageParameters* %57, i64 0, i32 46, i64 1, i64 2
  %100 = load i32* %arrayidx415.1.2, align 4, !tbaa !17
  %conv416.1.2 = trunc i32 %100 to i16
  %arrayidx424.1.2 = getelementptr inbounds i16* %98, i64 %idxprom419.1
  store i16 %conv416.1.2, i16* %arrayidx424.1.2, align 2, !tbaa !21
  %arrayidx415.2.2 = getelementptr inbounds %struct.ImageParameters* %57, i64 0, i32 46, i64 2, i64 2
  %101 = load i32* %arrayidx415.2.2, align 4, !tbaa !17
  %conv416.2.2 = trunc i32 %101 to i16
  %arrayidx424.2.2 = getelementptr inbounds i16* %98, i64 %idxprom419.2
  store i16 %conv416.2.2, i16* %arrayidx424.2.2, align 2, !tbaa !21
  %arrayidx415.3.2 = getelementptr inbounds %struct.ImageParameters* %57, i64 0, i32 46, i64 3, i64 2
  %102 = load i32* %arrayidx415.3.2, align 4, !tbaa !17
  %conv416.3.2 = trunc i32 %102 to i16
  %arrayidx424.3.2 = getelementptr inbounds i16* %98, i64 %idxprom419.3
  store i16 %conv416.3.2, i16* %arrayidx424.3.2, align 2, !tbaa !21
  %add420.3 = add i32 %block_y, 3
  %add421.3 = add i32 %add420.3, %85
  %idxprom422.3 = sext i32 %add421.3 to i64
  %arrayidx423.3 = getelementptr inbounds i16** %87, i64 %idxprom422.3
  %103 = load i16** %arrayidx423.3, align 8, !tbaa !1
  %arrayidx415.3572 = getelementptr inbounds %struct.ImageParameters* %57, i64 0, i32 46, i64 0, i64 3
  %104 = load i32* %arrayidx415.3572, align 4, !tbaa !17
  %conv416.3573 = trunc i32 %104 to i16
  %arrayidx424.3576 = getelementptr inbounds i16* %103, i64 %idxprom419
  store i16 %conv416.3573, i16* %arrayidx424.3576, align 2, !tbaa !21
  %arrayidx415.1.3 = getelementptr inbounds %struct.ImageParameters* %57, i64 0, i32 46, i64 1, i64 3
  %105 = load i32* %arrayidx415.1.3, align 4, !tbaa !17
  %conv416.1.3 = trunc i32 %105 to i16
  %arrayidx424.1.3 = getelementptr inbounds i16* %103, i64 %idxprom419.1
  store i16 %conv416.1.3, i16* %arrayidx424.1.3, align 2, !tbaa !21
  %arrayidx415.2.3 = getelementptr inbounds %struct.ImageParameters* %57, i64 0, i32 46, i64 2, i64 3
  %106 = load i32* %arrayidx415.2.3, align 4, !tbaa !17
  %conv416.2.3 = trunc i32 %106 to i16
  %arrayidx424.2.3 = getelementptr inbounds i16* %103, i64 %idxprom419.2
  store i16 %conv416.2.3, i16* %arrayidx424.2.3, align 2, !tbaa !21
  %arrayidx415.3.3 = getelementptr inbounds %struct.ImageParameters* %57, i64 0, i32 46, i64 3, i64 3
  %107 = load i32* %arrayidx415.3.3, align 4, !tbaa !17
  %conv416.3.3 = trunc i32 %107 to i16
  %arrayidx424.3.3 = getelementptr inbounds i16* %103, i64 %idxprom419.3
  store i16 %conv416.3.3, i16* %arrayidx424.3.3, align 2, !tbaa !21
  call void @llvm.lifetime.end(i64 64, i8* %3) #1
  ret void
}

declare double @exp2(double)

attributes #0 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }
attributes #2 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = metadata !{metadata !"clang version 3.5 (trunk)"}
!1 = metadata !{metadata !2, metadata !2, i64 0}
!2 = metadata !{metadata !"any pointer", metadata !3, i64 0}
!3 = metadata !{metadata !"omnipotent char", metadata !4, i64 0}
!4 = metadata !{metadata !"Simple C/C++ TBAA"}
!5 = metadata !{metadata !6, metadata !2, i64 6424}
!6 = metadata !{metadata !"storable_picture", metadata !3, i64 0, metadata !7, i64 4, metadata !7, i64 8, metadata !7, i64 12, metadata !7, i64 16, metadata !7, i64 20, metadata !3, i64 24, metadata !3, i64 1608, metadata !3, i64 3192, metadata !3, i64 4776, metadata !7, i64 6360, metadata !7, i64 6364, metadata !7, i64 6368, metadata !7, i64 6372, metadata !7, i64 6376, metadata !7, i64 6380, metadata !7, i64 6384, metadata !7, i64 6388, metadata !7, i64 6392, metadata !7, i64 6396, metadata !7, i64 6400, metadata !7, i64 6404, metadata !7, i64 6408, metadata !7, i64 6412, metadata !7, i64 6416, metadata !2, i64 6424, metadata !2, i64 6432, metadata !2, i64 6440, metadata !2, i64 6448, metadata !2, i64 6456, metadata !2, i64 6464, metadata !2, i64 6472, metadata !2, i64 6480, metadata !2, i64 6488, metadata !2, i64 6496, metadata !2, i64 6504, metadata !2, i64 6512, metadata !2, i64 6520, metadata !2, i64 6528, metadata !2, i64 6536, metadata !2, i64 6544, metadata !7, i64 6552, metadata !7, i64 6556, metadata !7, i64 6560, metadata !7, i64 6564, metadata !7, i64 6568, metadata !7, i64 6572, metadata !7, i64 6576}
!7 = metadata !{metadata !"int", metadata !3, i64 0}
!8 = metadata !{metadata !9, metadata !7, i64 12}
!9 = metadata !{metadata !"", metadata !7, i64 0, metadata !7, i64 4, metadata !7, i64 8, metadata !7, i64 12, metadata !7, i64 16, metadata !7, i64 20, metadata !7, i64 24, metadata !7, i64 28, metadata !7, i64 32, metadata !7, i64 36, metadata !7, i64 40, metadata !7, i64 44, metadata !10, i64 48, metadata !7, i64 52, metadata !7, i64 56, metadata !7, i64 60, metadata !7, i64 64, metadata !7, i64 68, metadata !7, i64 72, metadata !7, i64 76, metadata !7, i64 80, metadata !7, i64 84, metadata !7, i64 88, metadata !7, i64 92, metadata !7, i64 96, metadata !2, i64 104, metadata !2, i64 112, metadata !7, i64 120, metadata !2, i64 128, metadata !7, i64 136, metadata !7, i64 140, metadata !7, i64 144, metadata !7, i64 148, metadata !7, i64 152, metadata !7, i64 156, metadata !7, i64 160, metadata !7, i64 164, metadata !7, i64 168, metadata !7, i64 172, metadata !7, i64 176, metadata !7, i64 180, metadata !3, i64 184, metadata !3, i64 4792, metadata !3, i64 7352, metadata !3, i64 8504, metadata !3, i64 12600, metadata !3, i64 13112, metadata !2, i64 14136, metadata !2, i64 14144, metadata !2, i64 14152, metadata !2, i64 14160, metadata !2, i64 14168, metadata !3, i64 14176, metadata !2, i64 71776, metadata !2, i64 71784, metadata !7, i64 71792, metadata !7, i64 71796, metadata !7, i64 71800, metadata !7, i64 71804, metadata !3, i64 71808, metadata !7, i64 71872, metadata !7, i64 71876, metadata !7, i64 71880, metadata !7, i64 71884, metadata !7, i64 71888, metadata !11, i64 71896, metadata !7, i64 71904, metadata !7, i64 71908, metadata !7, i64 71912, metadata !7, i64 71916, metadata !2, i64 71920, metadata !2, i64 71928, metadata !2, i64 71936, metadata !2, i64 71944, metadata !3, i64 71952, metadata !7, i64 71984, metadata !7, i64 71988, metadata !7, i64 71992, metadata !7, i64 71996, metadata !7, i64 72000, metadata !7, i64 72004, metadata !7, i64 72008, metadata !7, i64 72012, metadata !3, i64 72016, metadata !7, i64 72376, metadata !7, i64 72380, metadata !7, i64 72384, metadata !7, i64 72388, metadata !7, i64 72392, metadata !7, i64 72396, metadata !7, i64 72400, metadata !7, i64 72404, metadata !7, i64 72408, metadata !7, i64 72412, metadata !7, i64 72416, metadata !7, i64 72420, metadata !3, i64 72424, metadata !7, i64 72428, metadata !7, i64 72432, metadata !3, i64 72436, metadata !7, i64 72444, metadata !7, i64 72448, metadata !7, i64 72452, metadata !7, i64 72456, metadata !7, i64 72460, metadata !7, i64 72464, metadata !7, i64 72468, metadata !7, i64 72472, metadata !7, i64 72476, metadata !7, i64 72480, metadata !7, i64 72484, metadata !7, i64 72488, metadata !7, i64 72492, metadata !7, i64 72496, metadata !7, i64 72500, metadata !7, i64 72504, metadata !7, i64 72508, metadata !2, i64 72512, metadata !7, i64 72520, metadata !7, i64 72524, metadata !7, i64 72528, metadata !7, i64 72532, metadata !7, i64 72536, metadata !11, i64 72544, metadata !7, i64 72552, metadata !7, i64 72556, metadata !7, i64 72560, metadata !7, i64 72564, metadata !7, i64 72568, metadata !7, i64 72572, metadata !7, i64 72576, metadata !2, i64 72584, metadata !7, i64 72592, metadata !7, i64 72596, metadata !7, i64 72600, metadata !7, i64 72604, metadata !7, i64 72608, metadata !7, i64 72612, metadata !7, i64 72616, metadata !7, i64 72620, metadata !7, i64 72624, metadata !7, i64 72628, metadata !7, i64 72632, metadata !7, i64 72636, metadata !7, i64 72640, metadata !7, i64 72644, metadata !7, i64 72648, metadata !7, i64 72652, metadata !7, i64 72656, metadata !7, i64 72660, metadata !7, i64 72664, metadata !7, i64 72668, metadata !7, i64 72672, metadata !7, i64 72676, metadata !7, i64 72680, metadata !7, i64 72684, metadata !7, i64 72688, metadata !7, i64 72692, metadata !7, i64 72696, metadata !7, i64 72700, metadata !7, i64 72704, metadata !7, i64 72708, metadata !7, i64 72712, metadata !3, i64 72716, metadata !7, i64 72724, metadata !7, i64 72728, metadata !7, i64 72732}
!10 = metadata !{metadata !"float", metadata !3, i64 0}
!11 = metadata !{metadata !"double", metadata !3, i64 0}
!12 = metadata !{metadata !13, metadata !7, i64 0}
!13 = metadata !{metadata !"pix_pos", metadata !7, i64 0, metadata !7, i64 4, metadata !7, i64 8, metadata !7, i64 12, metadata !7, i64 16, metadata !7, i64 20}
!14 = metadata !{metadata !15, metadata !7, i64 216}
!15 = metadata !{metadata !"", metadata !7, i64 0, metadata !7, i64 4, metadata !7, i64 8, metadata !7, i64 12, metadata !7, i64 16, metadata !7, i64 20, metadata !7, i64 24, metadata !7, i64 28, metadata !7, i64 32, metadata !7, i64 36, metadata !7, i64 40, metadata !7, i64 44, metadata !7, i64 48, metadata !7, i64 52, metadata !7, i64 56, metadata !7, i64 60, metadata !7, i64 64, metadata !7, i64 68, metadata !7, i64 72, metadata !7, i64 76, metadata !3, i64 80, metadata !3, i64 144, metadata !7, i64 208, metadata !7, i64 212, metadata !7, i64 216, metadata !7, i64 220, metadata !3, i64 224, metadata !3, i64 424, metadata !3, i64 624, metadata !3, i64 824, metadata !3, i64 1024, metadata !7, i64 1224, metadata !7, i64 1228, metadata !7, i64 1232, metadata !7, i64 1236, metadata !7, i64 1240, metadata !7, i64 1244, metadata !7, i64 1248, metadata !7, i64 1252, metadata !7, i64 1256, metadata !7, i64 1260, metadata !7, i64 1264, metadata !7, i64 1268, metadata !7, i64 1272, metadata !7, i64 1276, metadata !7, i64 1280, metadata !7, i64 1284, metadata !7, i64 1288, metadata !7, i64 1292, metadata !7, i64 1296, metadata !7, i64 1300, metadata !7, i64 1304, metadata !7, i64 1308, metadata !7, i64 1312, metadata !7, i64 1316, metadata !7, i64 1320, metadata !3, i64 1324, metadata !7, i64 2348, metadata !7, i64 2352, metadata !7, i64 2356, metadata !7, i64 2360, metadata !7, i64 2364, metadata !7, i64 2368, metadata !7, i64 2372, metadata !7, i64 2376, metadata !7, i64 2380, metadata !7, i64 2384, metadata !7, i64 2388, metadata !7, i64 2392, metadata !7, i64 2396, metadata !7, i64 2400, metadata !7, i64 2404, metadata !7, i64 2408, metadata !7, i64 2412, metadata !7, i64 2416, metadata !7, i64 2420, metadata !11, i64 2424, metadata !7, i64 2432, metadata !7, i64 2436, metadata !7, i64 2440, metadata !7, i64 2444, metadata !7, i64 2448, metadata !7, i64 2452, metadata !7, i64 2456, metadata !7, i64 2460, metadata !7, i64 2464, metadata !7, i64 2468, metadata !7, i64 2472, metadata !7, i64 2476, metadata !3, i64 2480, metadata !3, i64 2680, metadata !7, i64 2880, metadata !7, i64 2884, metadata !7, i64 2888, metadata !7, i64 2892, metadata !7, i64 2896, metadata !7, i64 2900, metadata !7, i64 2904, metadata !7, i64 2908, metadata !7, i64 2912, metadata !7, i64 2916, metadata !7, i64 2920, metadata !7, i64 2924, metadata !7, i64 2928, metadata !7, i64 2932, metadata !7, i64 2936, metadata !7, i64 2940, metadata !7, i64 2944, metadata !7, i64 2948, metadata !3, i64 2952, metadata !7, i64 3152, metadata !7, i64 3156, metadata !2, i64 3160, metadata !2, i64 3168, metadata !2, i64 3176, metadata !2, i64 3184, metadata !7, i64 3192, metadata !7, i64 3196, metadata !7, i64 3200, metadata !7, i64 3204, metadata !7, i64 3208, metadata !7, i64 3212, metadata !7, i64 3216, metadata !7, i64 3220, metadata !7, i64 3224, metadata !7, i64 3228, metadata !7, i64 3232, metadata !7, i64 3236, metadata !7, i64 3240, metadata !7, i64 3244, metadata !7, i64 3248, metadata !7, i64 3252, metadata !7, i64 3256, metadata !3, i64 3260, metadata !7, i64 3292, metadata !7, i64 3296, metadata !7, i64 3300, metadata !7, i64 3304, metadata !7, i64 3308, metadata !7, i64 3312, metadata !7, i64 3316, metadata !7, i64 3320, metadata !7, i64 3324, metadata !7, i64 3328, metadata !7, i64 3332, metadata !3, i64 3336, metadata !3, i64 3384, metadata !7, i64 3584}
!16 = metadata !{metadata !9, metadata !2, i64 71784}
!17 = metadata !{metadata !7, metadata !7, i64 0}
!18 = metadata !{metadata !13, metadata !7, i64 4}
!19 = metadata !{metadata !13, metadata !7, i64 16}
!20 = metadata !{metadata !13, metadata !7, i64 20}
!21 = metadata !{metadata !22, metadata !22, i64 0}
!22 = metadata !{metadata !"short", metadata !3, i64 0}
!23 = metadata !{metadata !9, metadata !7, i64 72680}
!24 = metadata !{metadata !9, metadata !7, i64 72684}
!25 = metadata !{metadata !25, metadata !26, metadata !27}
!26 = metadata !{metadata !"llvm.vectorizer.width", i32 1}
!27 = metadata !{metadata !"llvm.vectorizer.unroll", i32 1}
!28 = metadata !{metadata !9, metadata !2, i64 14168}
!29 = metadata !{metadata !9, metadata !2, i64 14144}
!30 = metadata !{metadata !31, metadata !7, i64 12}
!31 = metadata !{metadata !"macroblock", metadata !7, i64 0, metadata !7, i64 4, metadata !7, i64 8, metadata !7, i64 12, metadata !7, i64 16, metadata !3, i64 20, metadata !2, i64 56, metadata !2, i64 64, metadata !7, i64 72, metadata !3, i64 76, metadata !3, i64 332, metadata !3, i64 396, metadata !7, i64 460, metadata !32, i64 464, metadata !3, i64 472, metadata !3, i64 488, metadata !32, i64 504, metadata !7, i64 512, metadata !7, i64 516, metadata !7, i64 520, metadata !7, i64 524, metadata !7, i64 528, metadata !7, i64 532, metadata !7, i64 536, metadata !7, i64 540, metadata !7, i64 544, metadata !7, i64 548, metadata !7, i64 552, metadata !7, i64 556, metadata !7, i64 560, metadata !7, i64 564, metadata !7, i64 568, metadata !7, i64 572, metadata !7, i64 576, metadata !7, i64 580, metadata !11, i64 584, metadata !7, i64 592, metadata !7, i64 596, metadata !7, i64 600, metadata !7, i64 604, metadata !7, i64 608, metadata !7, i64 612, metadata !7, i64 616, metadata !7, i64 620, metadata !7, i64 624}
!32 = metadata !{metadata !"long", metadata !3, i64 0}
!33 = metadata !{metadata !9, metadata !7, i64 72668}
!34 = metadata !{metadata !9, metadata !7, i64 72704}
!35 = metadata !{metadata !9, metadata !7, i64 72724}
!36 = metadata !{metadata !9, metadata !7, i64 168}
!37 = metadata !{metadata !9, metadata !7, i64 172}
!38 = metadata !{metadata !9, metadata !7, i64 72444}
!39 = metadata !{metadata !9, metadata !7, i64 72008}
!40 = metadata !{metadata !15, metadata !7, i64 2356}
!41 = metadata !{metadata !9, metadata !7, i64 40}
!42 = metadata !{metadata !9, metadata !2, i64 14136}
!43 = metadata !{metadata !9, metadata !7, i64 152}
!44 = metadata !{metadata !9, metadata !7, i64 156}
!45 = metadata !{metadata !9, metadata !7, i64 72400}
!46 = metadata !{metadata !31, metadata !7, i64 532}
!47 = metadata !{metadata !15, metadata !7, i64 2468}
!48 = metadata !{metadata !3, metadata !3, i64 0}
!49 = metadata !{metadata !31, metadata !7, i64 72}
!50 = metadata !{metadata !9, metadata !7, i64 72692}
!51 = metadata !{metadata !9, metadata !7, i64 72700}
!52 = metadata !{metadata !9, metadata !7, i64 72672}
!53 = metadata !{metadata !9, metadata !7, i64 72712}
!54 = metadata !{metadata !9, metadata !7, i64 72708}
!55 = metadata !{metadata !31, metadata !32, i64 464}
!56 = metadata !{metadata !32, metadata !32, i64 0}
!57 = metadata !{metadata !9, metadata !7, i64 72688}
!58 = metadata !{metadata !9, metadata !7, i64 160}
!59 = metadata !{metadata !9, metadata !7, i64 164}
!60 = metadata !{metadata !6, metadata !2, i64 6464}
!61 = metadata !{metadata !31, metadata !7, i64 16}
!62 = metadata !{metadata !63, metadata !7, i64 208}
!63 = metadata !{metadata !"", metadata !3, i64 0, metadata !7, i64 4, metadata !7, i64 8, metadata !3, i64 12, metadata !3, i64 16, metadata !3, i64 20, metadata !3, i64 24, metadata !3, i64 56, metadata !7, i64 60, metadata !7, i64 64, metadata !3, i64 68, metadata !3, i64 100, metadata !3, i64 132, metadata !3, i64 164, metadata !7, i64 168, metadata !7, i64 172, metadata !2, i64 176, metadata !7, i64 184, metadata !7, i64 188, metadata !3, i64 192, metadata !7, i64 196, metadata !7, i64 200, metadata !7, i64 204, metadata !7, i64 208, metadata !7, i64 212, metadata !7, i64 216, metadata !3, i64 220, metadata !3, i64 224, metadata !3, i64 228, metadata !3, i64 232}
