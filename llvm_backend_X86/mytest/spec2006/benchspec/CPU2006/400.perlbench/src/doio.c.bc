; ModuleID = 'doio.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.op = type { %struct.op*, %struct.op*, %struct.op* ()*, i64, i16, i16, i8, i8 }
%struct.gv = type { %struct.xpvgv*, i64, i64 }
%struct.xpvgv = type { i8*, i64, i64, i64, double, %struct.magic*, %struct.hv*, %struct.gp*, i8*, i64, %struct.hv*, i8 }
%struct.magic = type { %struct.magic*, %struct.mgvtbl*, i16, i8, i8, %struct.sv*, i8*, i64 }
%struct.mgvtbl = type { i32 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*)*, i64 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*, %struct.sv*, i8*, i32)*, i32 (%struct.magic*, %struct.clone_params*)* }
%struct.clone_params = type { %struct.av*, i64, %struct.interpreter* }
%struct.av = type { %struct.xpvav*, i64, i64 }
%struct.xpvav = type { i8*, i64, i64, i64, double, %struct.magic*, %struct.hv*, %struct.sv**, %struct.sv*, i8 }
%struct.interpreter = type { i8 }
%struct.sv = type { i8*, i64, i64 }
%struct.gp = type { %struct.sv*, i64, %struct.io*, %struct.cv*, %struct.av*, %struct.hv*, %struct.gv*, %struct.cv*, i64, i64, i64, i8* }
%struct.io = type { %struct.xpvio*, i64, i64 }
%struct.xpvio = type { i8*, i64, i64, i64, double, %struct.magic*, %struct.hv*, %struct._PerlIO**, %struct._PerlIO**, %union.anon, i64, i64, i64, i64, i8*, %struct.gv*, i8*, %struct.gv*, i8*, %struct.gv*, i16, i8, i8 }
%struct._PerlIO = type opaque
%union.anon = type { %struct.__dirstream* }
%struct.__dirstream = type opaque
%struct.cv = type { %struct.xpvcv*, i64, i64 }
%struct.xpvcv = type { i8*, i64, i64, i64, double, %struct.magic*, %struct.hv*, %struct.hv*, %struct.op*, %struct.op*, void (%struct.cv*)*, %union.any, %struct.gv*, i8*, i64, %struct.av*, %struct.cv*, i16, i64 }
%union.any = type { i8* }
%struct.hv = type { %struct.xpvhv*, i64, i64 }
%struct.xpvhv = type { i8*, i64, i64, i64, double, %struct.magic*, %struct.hv*, i64, %struct.he*, %struct.pmop*, i8* }
%struct.he = type { %struct.he*, %struct.hek*, %struct.sv* }
%struct.hek = type { i64, i64, [1 x i8] }
%struct.pmop = type { %struct.op*, %struct.op*, %struct.op* ()*, i64, i16, i16, i8, i8, %struct.op*, %struct.op*, %struct.op*, %struct.op*, %struct.pmop*, %struct.regexp*, i64, i64, i8, %struct.hv* }
%struct.regexp = type { i64*, i64*, %struct.regnode*, %struct.reg_substr_data*, i8*, %struct.reg_data*, i8*, i64*, i64, i64, i64, i64, i64, i64, i64, i64, [1 x %struct.regnode] }
%struct.regnode = type { i8, i8, i16 }
%struct.reg_substr_data = type opaque
%struct.reg_data = type opaque
%struct.cop = type { %struct.op*, %struct.op*, %struct.op* ()*, i64, i16, i16, i8, i8, i8*, %struct.hv*, %struct.gv*, i64, i64, i64, %struct.sv*, %struct.sv* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }

@PL_forkprocess = external global i32
@PL_op = external global %struct.op*
@PL_maxsysfd = external global i64
@PL_stderrgv = external global %struct.gv*
@.str = private unnamed_addr constant [50 x i8] c"Warning: unable to close filehandle %s properly.\0A\00", align 1
@.str1 = private unnamed_addr constant [34 x i8] c"panic: sysopen with multiple args\00", align 1
@PL_tainting = external global i8
@.str2 = private unnamed_addr constant [8 x i8] c"sysopen\00", align 1
@.str3 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str4 = private unnamed_addr constant [5 x i8] c"open\00", align 1
@.str5 = private unnamed_addr constant [27 x i8] c"Unknown open() mode '%.*s'\00", align 1
@PL_curcop = external global %struct.cop*
@PL_dowarn = external global i8
@.str6 = private unnamed_addr constant [30 x i8] c"Missing command in piped open\00", align 1
@.str7 = private unnamed_addr constant [11 x i8] c"piped open\00", align 1
@.str8 = private unnamed_addr constant [30 x i8] c"Can't open bidirectional pipe\00", align 1
@.str11 = private unnamed_addr constant [37 x i8] c"More than one argument to '%c&' open\00", align 1
@.str12 = private unnamed_addr constant [37 x i8] c"More than one argument to '>%c' open\00", align 1
@.str13 = private unnamed_addr constant [37 x i8] c"More than one argument to '<%c' open\00", align 1
@PL_warn_nl = external constant [0 x i8]
@.str14 = private unnamed_addr constant [47 x i8] c"Filehandle STD%s reopened as %s only for input\00", align 1
@.str15 = private unnamed_addr constant [4 x i8] c"OUT\00", align 1
@.str16 = private unnamed_addr constant [4 x i8] c"ERR\00", align 1
@.str17 = private unnamed_addr constant [48 x i8] c"Filehandle STDIN reopened as %s only for output\00", align 1
@PL_statbuf = external global %struct.stat
@PL_fdpid = external global %struct.av*
@PL_argvoutgv = external global %struct.gv*
@.str18 = private unnamed_addr constant [8 x i8] c"ARGVOUT\00", align 1
@PL_inplace = external global i8*
@PL_argvout_stack = external global %struct.av*
@PL_defoutgv = external global %struct.gv*
@PL_Sv = external global %struct.sv*
@PL_filemode = external global i32
@PL_oldname = external global i8*
@PL_lastfd = external global i32
@.str19 = private unnamed_addr constant [13 x i8] c"inplace open\00", align 1
@.str20 = private unnamed_addr constant [7 x i8] c"STDOUT\00", align 1
@.str21 = private unnamed_addr constant [48 x i8] c"Can't do inplace edit: %s is not a regular file\00", align 1
@.str22 = private unnamed_addr constant [41 x i8] c"Can't rename %s to %_: %s, skipping file\00", align 1
@.str23 = private unnamed_addr constant [35 x i8] c"Can't remove %s: %s, skipping file\00", align 1
@.str24 = private unnamed_addr constant [2 x i8] c">\00", align 1
@.str25 = private unnamed_addr constant [32 x i8] c"Can't do inplace edit on %s: %s\00", align 1
@.str26 = private unnamed_addr constant [18 x i8] c"Can't open %s: %s\00", align 1
@PL_argvgv = external global %struct.gv*
@PL_statusvalue = external global i64
@.str27 = private unnamed_addr constant [5 x i8] c":raw\00", align 1
@PL_ofmt = external global i8*
@.str28 = private unnamed_addr constant [4 x i8] c"%lu\00", align 1
@.str29 = private unnamed_addr constant [4 x i8] c"%ld\00", align 1
@.str30 = private unnamed_addr constant [24 x i8] c"Wide character in print\00", align 1
@PL_stack_sp = external global %struct.sv**
@PL_stack_max = external global %struct.sv**
@PL_statgv = external global %struct.gv*
@PL_statname = external global %struct.sv*
@PL_laststype = external global i64
@PL_statcache = external global %struct.stat
@PL_laststatval = external global i32
@PL_defgv = external global %struct.gv*
@.str31 = private unnamed_addr constant [5 x i8] c"stat\00", align 1
@.str32 = private unnamed_addr constant [40 x i8] c"The stat preceding -l _ wasn't an lstat\00", align 1
@.str33 = private unnamed_addr constant [27 x i8] c"Use of -l on filehandle %s\00", align 1
@.str34 = private unnamed_addr constant [6 x i8] c"lstat\00", align 1
@PL_Argv = external global i8**
@.str35 = private unnamed_addr constant [20 x i8] c"Can't exec \22%s\22: %s\00", align 1
@PL_Cmd = external global i8*
@PL_cshname = external global i8*
@PL_cshlen = external global i64
@.str36 = private unnamed_addr constant [4 x i8] c" -c\00", align 1
@.str37 = private unnamed_addr constant [3 x i8] c"-c\00", align 1
@.str39 = private unnamed_addr constant [4 x i8] c"csh\00", align 1
@.str40 = private unnamed_addr constant [5 x i8] c"exec\00", align 1
@.str41 = private unnamed_addr constant [21 x i8] c"$&*(){}[]'\22;\5C|?<>~`\0A\00", align 1
@PL_sh_path = external global i8*
@.str42 = private unnamed_addr constant [3 x i8] c"sh\00", align 1
@PL_tainted = external global i8
@.str43 = private unnamed_addr constant [6 x i8] c"chmod\00", align 1
@.str44 = private unnamed_addr constant [7 x i8] c"unlink\00", align 1
@PL_euid = external global i32
@PL_unsafe = external global i8
@PL_uid = external global i32
@PL_egid = external global i32
@PL_gid = external global i32
@.str45 = private unnamed_addr constant [27 x i8] c" -cf 'set nonomatch; glob \00", align 1
@.str46 = private unnamed_addr constant [16 x i8] c"' 2>/dev/null |\00", align 1
@PL_last_in_gv = external global %struct.gv*

; Function Attrs: nounwind uwtable
define signext i8 @Perl_do_open(%struct.gv* %gv, i8* %name, i64 %len, i32 %as_raw, i32 %rawmode, i32 %rawperm, %struct._PerlIO** %supplied_fp) #0 {
entry:
  %call = tail call signext i8 @Perl_do_openn(%struct.gv* %gv, i8* %name, i64 %len, i32 %as_raw, i32 %rawmode, i32 %rawperm, %struct._PerlIO** %supplied_fp, %struct.sv** null, i64 0)
  ret i8 %call
}

; Function Attrs: nounwind uwtable
define signext i8 @Perl_do_openn(%struct.gv* %gv, i8* %name, i64 %len, i32 %as_raw, i32 %rawmode, i32 %rawperm, %struct._PerlIO** %supplied_fp, %struct.sv** %svp, i64 %num_svs) #0 {
entry:
  %writing = alloca i32, align 4
  %mode = alloca i64, align 8
  %tmpcast = bitcast i64* %mode to [8 x i8]*
  %namesv = alloca %struct.sv*, align 8
  %tobool = icmp eq %struct.gv* %gv, null
  br i1 %tobool, label %cond.false10, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %0 = getelementptr inbounds %struct.gv* %gv, i64 0, i32 2
  %1 = load i64* %0, align 8, !tbaa !1
  %and = and i64 %1, 255
  %cmp = icmp eq i64 %and, 13
  br i1 %cmp, label %land.lhs.true1, label %cond.false10

land.lhs.true1:                                   ; preds = %land.lhs.true
  %sv_any = getelementptr inbounds %struct.gv* %gv, i64 0, i32 0
  %2 = load %struct.xpvgv** %sv_any, align 8, !tbaa !7
  %xgv_gp = getelementptr inbounds %struct.xpvgv* %2, i64 0, i32 7
  %3 = load %struct.gp** %xgv_gp, align 8, !tbaa !9
  %tobool2 = icmp eq %struct.gp* %3, null
  br i1 %tobool2, label %cond.false10, label %cond.true

cond.true:                                        ; preds = %land.lhs.true1
  %gp_io = getelementptr inbounds %struct.gp* %3, i64 0, i32 2
  %4 = load %struct.io** %gp_io, align 8, !tbaa !12
  %tobool5 = icmp eq %struct.io* %4, null
  br i1 %tobool5, label %cond.false10, label %cond.end

cond.false10:                                     ; preds = %cond.true, %land.lhs.true1, %entry, %land.lhs.true
  %call = call %struct.gv* @Perl_gv_IOadd(%struct.gv* %gv) #2
  %sv_any11 = getelementptr inbounds %struct.gv* %call, i64 0, i32 0
  %5 = load %struct.xpvgv** %sv_any11, align 8, !tbaa !7
  %xgv_gp12 = getelementptr inbounds %struct.xpvgv* %5, i64 0, i32 7
  %6 = load %struct.gp** %xgv_gp12, align 8, !tbaa !9
  %gp_io13 = getelementptr inbounds %struct.gp* %6, i64 0, i32 2
  %7 = load %struct.io** %gp_io13, align 8, !tbaa !12
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %cond.false10
  %cond = phi %struct.io* [ %7, %cond.false10 ], [ %4, %cond.true ]
  store i32 0, i32* %writing, align 4, !tbaa !14
  %arraydecay = bitcast i64* %mode to i8*
  store i64 0, i64* %mode, align 8
  store i32 1, i32* @PL_forkprocess, align 4, !tbaa !14
  %8 = load %struct.op** @PL_op, align 8, !tbaa !16
  %tobool14 = icmp eq %struct.op* %8, null
  br i1 %tobool14, label %if.end, label %land.lhs.true15

land.lhs.true15:                                  ; preds = %cond.end
  %op_type = getelementptr inbounds %struct.op* %8, i64 0, i32 4
  %9 = load i16* %op_type, align 2, !tbaa !17
  %cmp16 = icmp eq i16 %9, 191
  br i1 %cmp16, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true15
  %op_private = getelementptr inbounds %struct.op* %8, i64 0, i32 7
  %10 = load i8* %op_private, align 1, !tbaa !20
  %and19 = and i8 %10, 16
  %and22 = and i8 %10, 32
  %and25 = and i8 %10, 64
  %and28 = and i8 %10, -128
  br label %if.end

if.end:                                           ; preds = %cond.end, %if.then, %land.lhs.true15
  %in_raw.0 = phi i8 [ %and19, %if.then ], [ 0, %land.lhs.true15 ], [ 0, %cond.end ]
  %in_crlf.0 = phi i8 [ %and22, %if.then ], [ 0, %land.lhs.true15 ], [ 0, %cond.end ]
  %out_raw.0 = phi i8 [ %and25, %if.then ], [ 0, %land.lhs.true15 ], [ 0, %cond.end ]
  %out_crlf.0 = phi i8 [ %and28, %if.then ], [ 0, %land.lhs.true15 ], [ 0, %cond.end ]
  %sv_any30 = getelementptr inbounds %struct.io* %cond, i64 0, i32 0
  %11 = load %struct.xpvio** %sv_any30, align 8, !tbaa !21
  %xio_ifp = getelementptr inbounds %struct.xpvio* %11, i64 0, i32 7
  %12 = load %struct._PerlIO*** %xio_ifp, align 8, !tbaa !23
  %tobool31 = icmp eq %struct._PerlIO** %12, null
  br i1 %tobool31, label %if.end147, label %if.then32

if.then32:                                        ; preds = %if.end
  %call35 = call i32 @Perl_PerlIO_fileno(%struct._PerlIO** %12) #2
  %13 = load %struct.xpvio** %sv_any30, align 8, !tbaa !21
  %xio_type = getelementptr inbounds %struct.xpvio* %13, i64 0, i32 21
  %14 = load i8* %xio_type, align 1, !tbaa !25
  %cmp38 = icmp eq i8 %14, 45
  br i1 %cmp38, label %if.end142, label %if.else

if.else:                                          ; preds = %if.then32
  %cmp41 = icmp sgt i32 %call35, -1
  br i1 %cmp41, label %land.lhs.true43, label %if.else53

land.lhs.true43:                                  ; preds = %if.else
  %conv44 = sext i32 %call35 to i64
  %15 = load i64* @PL_maxsysfd, align 8, !tbaa !26
  %cmp45 = icmp sgt i64 %conv44, %15
  br i1 %cmp45, label %if.else53, label %if.then47

if.then47:                                        ; preds = %land.lhs.true43
  %xio_ifp49 = getelementptr inbounds %struct.xpvio* %13, i64 0, i32 7
  %16 = load %struct._PerlIO*** %xio_ifp49, align 8, !tbaa !23
  %xio_ofp = getelementptr inbounds %struct.xpvio* %13, i64 0, i32 8
  %17 = load %struct._PerlIO*** %xio_ofp, align 8, !tbaa !27
  br label %if.end142

if.else53:                                        ; preds = %land.lhs.true43, %if.else
  %cmp57 = icmp eq i8 %14, 124
  %xio_ifp61 = getelementptr inbounds %struct.xpvio* %13, i64 0, i32 7
  %18 = load %struct._PerlIO*** %xio_ifp61, align 8, !tbaa !23
  br i1 %cmp57, label %if.then59, label %if.else64

if.then59:                                        ; preds = %if.else53
  %call62 = call i64 @Perl_my_pclose(%struct._PerlIO** %18) #2
  %conv63 = trunc i64 %call62 to i32
  br label %if.end94

if.else64:                                        ; preds = %if.else53
  %xio_ofp68 = getelementptr inbounds %struct.xpvio* %13, i64 0, i32 8
  %19 = load %struct._PerlIO*** %xio_ofp68, align 8, !tbaa !27
  %cmp69 = icmp eq %struct._PerlIO** %18, %19
  br i1 %cmp69, label %if.else87, label %if.then71

if.then71:                                        ; preds = %if.else64
  %tobool74 = icmp eq %struct._PerlIO** %19, null
  br i1 %tobool74, label %if.else82, label %if.then75

if.then75:                                        ; preds = %if.then71
  %call78 = call i32 @Perl_PerlIO_close(%struct._PerlIO** %19) #2
  %20 = load %struct.xpvio** %sv_any30, align 8, !tbaa !21
  %xio_ifp80 = getelementptr inbounds %struct.xpvio* %20, i64 0, i32 7
  %21 = load %struct._PerlIO*** %xio_ifp80, align 8, !tbaa !23
  %call81 = call i32 @Perl_PerlIO_close(%struct._PerlIO** %21) #2
  br label %if.end94

if.else82:                                        ; preds = %if.then71
  %call85 = call i32 @Perl_PerlIO_close(%struct._PerlIO** %18) #2
  br label %if.end94

if.else87:                                        ; preds = %if.else64
  %call90 = call i32 @Perl_PerlIO_close(%struct._PerlIO** %18) #2
  br label %if.end94

if.end94:                                         ; preds = %if.else87, %if.else82, %if.then75, %if.then59
  %result.0 = phi i32 [ %conv63, %if.then59 ], [ %call78, %if.then75 ], [ %call85, %if.else82 ], [ %call90, %if.else87 ]
  %cmp95 = icmp eq i32 %result.0, -1
  br i1 %cmp95, label %land.lhs.true97, label %if.end142

land.lhs.true97:                                  ; preds = %if.end94
  %conv98 = sext i32 %call35 to i64
  %22 = load i64* @PL_maxsysfd, align 8, !tbaa !26
  %cmp99 = icmp sgt i64 %conv98, %22
  br i1 %cmp99, label %if.then101, label %if.end142

if.then101:                                       ; preds = %land.lhs.true97
  %23 = load %struct.gv** @PL_stderrgv, align 8, !tbaa !16
  %tobool102 = icmp eq %struct.gv* %23, null
  br i1 %tobool102, label %cond.false126, label %land.lhs.true103

land.lhs.true103:                                 ; preds = %if.then101
  %sv_flags104 = getelementptr inbounds %struct.gv* %23, i64 0, i32 2
  %24 = load i64* %sv_flags104, align 8, !tbaa !28
  %and105 = and i64 %24, 255
  %cmp106 = icmp eq i64 %and105, 13
  br i1 %cmp106, label %land.lhs.true108, label %cond.false126

land.lhs.true108:                                 ; preds = %land.lhs.true103
  %sv_any109 = getelementptr inbounds %struct.gv* %23, i64 0, i32 0
  %25 = load %struct.xpvgv** %sv_any109, align 8, !tbaa !7
  %xgv_gp110 = getelementptr inbounds %struct.xpvgv* %25, i64 0, i32 7
  %26 = load %struct.gp** %xgv_gp110, align 8, !tbaa !9
  %gp_io111 = getelementptr inbounds %struct.gp* %26, i64 0, i32 2
  %27 = load %struct.io** %gp_io111, align 8, !tbaa !12
  %tobool112 = icmp eq %struct.io* %27, null
  br i1 %tobool112, label %cond.false126, label %land.lhs.true113

land.lhs.true113:                                 ; preds = %land.lhs.true108
  %sv_any117 = getelementptr inbounds %struct.io* %27, i64 0, i32 0
  %28 = load %struct.xpvio** %sv_any117, align 8, !tbaa !21
  %xio_ofp118 = getelementptr inbounds %struct.xpvio* %28, i64 0, i32 8
  %29 = load %struct._PerlIO*** %xio_ofp118, align 8, !tbaa !27
  %tobool119 = icmp eq %struct._PerlIO** %29, null
  br i1 %tobool119, label %cond.false126, label %cond.end128

cond.false126:                                    ; preds = %land.lhs.true113, %land.lhs.true108, %if.then101, %land.lhs.true103
  %call127 = call %struct._PerlIO** @Perl_PerlIO_stderr() #2
  br label %cond.end128

cond.end128:                                      ; preds = %land.lhs.true113, %cond.false126
  %cond129 = phi %struct._PerlIO** [ %call127, %cond.false126 ], [ %29, %land.lhs.true113 ]
  %sv_any130 = getelementptr inbounds %struct.gv* %gv, i64 0, i32 0
  %30 = load %struct.xpvgv** %sv_any130, align 8, !tbaa !7
  %xgv_gp131 = getelementptr inbounds %struct.xpvgv* %30, i64 0, i32 7
  %31 = load %struct.gp** %xgv_gp131, align 8, !tbaa !9
  %gp_egv = getelementptr inbounds %struct.gp* %31, i64 0, i32 6
  %32 = load %struct.gv** %gp_egv, align 8, !tbaa !29
  %tobool132 = icmp eq %struct.gv* %32, null
  %gv. = select i1 %tobool132, %struct.gv* %gv, %struct.gv* %32
  %sv_any140 = getelementptr inbounds %struct.gv* %gv., i64 0, i32 0
  %33 = load %struct.xpvgv** %sv_any140, align 8, !tbaa !7
  %xgv_name = getelementptr inbounds %struct.xpvgv* %33, i64 0, i32 8
  %34 = load i8** %xgv_name, align 8, !tbaa !30
  %call141 = call i32 (%struct._PerlIO**, i8*, ...)* @PerlIO_printf(%struct._PerlIO** %cond129, i8* getelementptr inbounds ([50 x i8]* @.str, i64 0, i64 0), i8* %34) #2
  br label %if.end142

if.end142:                                        ; preds = %if.then32, %if.then47, %cond.end128, %land.lhs.true97, %if.end94
  %saveifp.01915 = phi %struct._PerlIO** [ null, %cond.end128 ], [ null, %land.lhs.true97 ], [ null, %if.end94 ], [ %16, %if.then47 ], [ null, %if.then32 ]
  %saveofp.01914 = phi %struct._PerlIO** [ null, %cond.end128 ], [ null, %land.lhs.true97 ], [ null, %if.end94 ], [ %17, %if.then47 ], [ null, %if.then32 ]
  %savefd.01913 = phi i32 [ -1, %cond.end128 ], [ -1, %land.lhs.true97 ], [ -1, %if.end94 ], [ %call35, %if.then47 ], [ -1, %if.then32 ]
  %savetype.01912 = phi i8 [ 32, %cond.end128 ], [ 32, %land.lhs.true97 ], [ 32, %if.end94 ], [ %14, %if.then47 ], [ 32, %if.then32 ]
  %35 = load %struct.xpvio** %sv_any30, align 8, !tbaa !21
  %xio_ifp144 = getelementptr inbounds %struct.xpvio* %35, i64 0, i32 7
  %36 = bitcast %struct._PerlIO*** %xio_ifp144 to i8*
  call void @llvm.memset.p0i8.i64(i8* %36, i8 0, i64 16, i32 8, i1 false)
  br label %if.end147

if.end147:                                        ; preds = %if.end, %if.end142
  %savetype.1 = phi i8 [ %savetype.01912, %if.end142 ], [ 32, %if.end ]
  %savefd.1 = phi i32 [ %savefd.01913, %if.end142 ], [ -1, %if.end ]
  %saveofp.1 = phi %struct._PerlIO** [ %saveofp.01914, %if.end142 ], [ null, %if.end ]
  %saveifp.1 = phi %struct._PerlIO** [ %saveifp.01915, %if.end142 ], [ null, %if.end ]
  %tobool148 = icmp eq i32 %as_raw, 0
  br i1 %tobool148, label %if.else184, label %if.then149

if.then149:                                       ; preds = %if.end147
  %cmp150 = icmp eq i64 %num_svs, 0
  br i1 %cmp150, label %if.end153, label %if.then152

if.then152:                                       ; preds = %if.then149
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([34 x i8]* @.str1, i64 0, i64 0)) #2
  br label %if.end153

if.end153:                                        ; preds = %if.then149, %if.then152
  %and154 = and i32 %rawmode, 67
  %tobool155 = icmp eq i32 %and154, 0
  br i1 %tobool155, label %if.end172, label %if.then156

if.then156:                                       ; preds = %if.end153
  %37 = and i32 %rawmode, 3
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %lor.lhs.false163, label %if.then167

lor.lhs.false163:                                 ; preds = %if.then156
  %and165 = and i32 %rawmode, 64
  %tobool166 = icmp ne i32 %and165, 0
  %39 = load i8* @PL_tainting, align 1
  %tobool168 = icmp ne i8 %39, 0
  %or.cond1506 = and i1 %tobool166, %tobool168
  br i1 %or.cond1506, label %if.then169, label %if.end172

if.then167:                                       ; preds = %if.then156
  %.old1505 = load i8* @PL_tainting, align 1, !tbaa !31
  %tobool168.old = icmp eq i8 %.old1505, 0
  br i1 %tobool168.old, label %if.end172, label %if.then169

if.then169:                                       ; preds = %if.then167, %lor.lhs.false163
  call void @Perl_taint_proper(i8* null, i8* getelementptr inbounds ([8 x i8]* @.str2, i64 0, i64 0)) #2
  br label %if.end172

if.end172:                                        ; preds = %if.then167, %if.end153, %lor.lhs.false163, %if.then169
  store i8 35, i8* %arraydecay, align 8, !tbaa !31
  %arrayidx173 = getelementptr inbounds [8 x i8]* %tmpcast, i64 0, i64 1
  %call174 = call i32 @PerlIO_intmode2str(i32 %rawmode, i8* %arrayidx173, i32* %writing) #2
  %conv175 = trunc i32 %call174 to i8
  %40 = load %struct.xpvio** %sv_any30, align 8, !tbaa !21
  %xio_type177 = getelementptr inbounds %struct.xpvio* %40, i64 0, i32 21
  store i8 %conv175, i8* %xio_type177, align 1, !tbaa !25
  %call178 = call i64 @strlen(i8* %name) #2
  %call179 = call %struct.sv* @Perl_newSVpvn(i8* %name, i64 %call178) #2
  %call180 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call179) #2
  store %struct.sv* %call180, %struct.sv** %namesv, align 8, !tbaa !16
  %call183 = call %struct._PerlIO** @PerlIO_openn(i8* null, i8* %arraydecay, i32 -1, i32 %rawmode, i32 %rawperm, %struct._PerlIO** null, i32 1, %struct.sv** %namesv) #2
  br label %if.end1179

if.else184:                                       ; preds = %if.end147
  %call185 = call i8* @Perl_savepvn(i8* %name, i64 %len) #2
  call void @Perl_save_freepv(i8* %call185) #2
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.else184
  %type.0 = phi i8* [ %call185, %if.else184 ], [ %incdec.ptr, %for.inc ]
  %41 = load i8* %type.0, align 1, !tbaa !31
  switch i8 %41, label %while.cond.preheader [
    i8 32, label %for.inc
    i8 9, label %for.inc
    i8 10, label %for.inc
    i8 13, label %for.inc
    i8 12, label %for.inc
  ]

while.cond.preheader:                             ; preds = %for.cond
  %add.ptr = getelementptr inbounds i8* %call185, i64 %len
  %cmp2041949 = icmp ugt i8* %add.ptr, %type.0
  br i1 %cmp2041949, label %land.rhs, label %while.end

for.inc:                                          ; preds = %for.cond, %for.cond, %for.cond, %for.cond, %for.cond
  %incdec.ptr = getelementptr inbounds i8* %type.0, i64 1
  br label %for.cond

land.rhs:                                         ; preds = %while.cond.preheader, %while.body
  %tend.01950 = phi i8* [ %arrayidx206, %while.body ], [ %add.ptr, %while.cond.preheader ]
  %arrayidx206 = getelementptr inbounds i8* %tend.01950, i64 -1
  %42 = load i8* %arrayidx206, align 1, !tbaa !31
  switch i8 %42, label %while.end [
    i8 32, label %while.body
    i8 9, label %while.body
    i8 10, label %while.body
    i8 13, label %while.body
    i8 12, label %while.body
  ]

while.body:                                       ; preds = %land.rhs, %land.rhs, %land.rhs, %land.rhs, %land.rhs
  store i8 0, i8* %arrayidx206, align 1, !tbaa !31
  %cmp204 = icmp ugt i8* %arrayidx206, %type.0
  br i1 %cmp204, label %land.rhs, label %while.end

while.end:                                        ; preds = %while.body, %land.rhs, %while.cond.preheader
  %tend.0.lcssa = phi i8* [ %add.ptr, %while.cond.preheader ], [ %arrayidx206, %while.body ], [ %tend.01950, %land.rhs ]
  %tobool232 = icmp ne i64 %num_svs, 0
  br i1 %tobool232, label %if.then233, label %if.else243

if.then233:                                       ; preds = %while.end
  %43 = load %struct.sv** %svp, align 8, !tbaa !16
  %sv_flags234 = getelementptr inbounds %struct.sv* %43, i64 0, i32 2
  %44 = load i64* %sv_flags234, align 8, !tbaa !1
  %and235 = and i64 %44, 118423552
  %tobool236 = icmp eq i64 %and235, 0
  br i1 %tobool236, label %cond.false239, label %cond.true237

cond.true237:                                     ; preds = %if.then233
  %call238 = call i8* @Perl_savesvpv(%struct.sv* %43) #2
  br label %cond.end241

cond.false239:                                    ; preds = %if.then233
  %call240 = call i8* @Perl_savepvn(i8* getelementptr inbounds ([1 x i8]* @.str3, i64 0, i64 0), i64 0) #2
  br label %cond.end241

cond.end241:                                      ; preds = %cond.false239, %cond.true237
  %cond242 = phi i8* [ %call238, %cond.true237 ], [ %call240, %cond.false239 ]
  call void @Perl_save_freepv(i8* %cond242) #2
  br label %if.end244

if.else243:                                       ; preds = %while.end
  %sub.ptr.lhs.cast = ptrtoint i8* %tend.0.lcssa to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %type.0 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  br label %if.end244

if.end244:                                        ; preds = %if.else243, %cond.end241
  %len.addr.0 = phi i64 [ %len, %cond.end241 ], [ %sub.ptr.sub, %if.else243 ]
  %name.addr.0 = phi i8* [ %cond242, %cond.end241 ], [ %type.0, %if.else243 ]
  %45 = load i8* %type.0, align 1, !tbaa !31
  %46 = load %struct.xpvio** %sv_any30, align 8, !tbaa !21
  %xio_type246 = getelementptr inbounds %struct.xpvio* %46, i64 0, i32 21
  store i8 %45, i8* %xio_type246, align 1, !tbaa !25
  %47 = load i8* %type.0, align 1, !tbaa !31
  %cmp248 = icmp eq i8 %47, 43
  br i1 %cmp248, label %land.lhs.true250, label %if.end277

land.lhs.true250:                                 ; preds = %if.end244
  %add.ptr251 = getelementptr inbounds i8* %type.0, i64 1
  %48 = load i8* %add.ptr251, align 1, !tbaa !31
  switch i8 %48, label %if.else904.lor.lhs.false916_crit_edge [
    i8 60, label %land.lhs.true260
    i8 62, label %land.lhs.true260
  ]

land.lhs.true260:                                 ; preds = %land.lhs.true250, %land.lhs.true250
  br i1 %tobool232, label %lor.lhs.false262, label %if.then271

lor.lhs.false262:                                 ; preds = %land.lhs.true260
  %cmp264 = icmp ugt i8* %tend.0.lcssa, %add.ptr251
  br i1 %cmp264, label %land.lhs.true266, label %if.else904.lor.lhs.false916_crit_edge

land.lhs.true266:                                 ; preds = %lor.lhs.false262
  %arrayidx267 = getelementptr inbounds i8* %tend.0.lcssa, i64 -1
  %49 = load i8* %arrayidx267, align 1, !tbaa !31
  %cmp269 = icmp eq i8 %49, 124
  br i1 %cmp269, label %if.else904.lor.lhs.false916_crit_edge, label %if.then271

if.then271:                                       ; preds = %land.lhs.true266, %land.lhs.true260
  %50 = load i8* @PL_tainting, align 1, !tbaa !31
  %tobool272 = icmp eq i8 %50, 0
  br i1 %tobool272, label %if.end274, label %if.then273

if.then273:                                       ; preds = %if.then271
  call void @Perl_taint_proper(i8* null, i8* getelementptr inbounds ([5 x i8]* @.str4, i64 0, i64 0)) #2
  %.pre = load i8* %type.0, align 1, !tbaa !31
  br label %if.end274

if.end274:                                        ; preds = %if.then271, %if.then273
  %51 = phi i8 [ 43, %if.then271 ], [ %.pre, %if.then273 ]
  %arrayidx276 = getelementptr inbounds [8 x i8]* %tmpcast, i64 0, i64 1
  store i8 %51, i8* %arrayidx276, align 1, !tbaa !31
  store i32 1, i32* %writing, align 4, !tbaa !14
  %.pre1957 = load i8* %add.ptr251, align 1, !tbaa !31
  br label %if.end277

if.end277:                                        ; preds = %if.end274, %if.end244
  %52 = phi i8 [ %.pre1957, %if.end274 ], [ %47, %if.end244 ]
  %type.1 = phi i8* [ %add.ptr251, %if.end274 ], [ %type.0, %if.end244 ]
  switch i8 %52, label %if.else904 [
    i8 124, label %if.then281
    i8 62, label %if.then452
    i8 60, label %for.cond774
  ]

if.then281:                                       ; preds = %if.end277
  br i1 %tobool232, label %if.then283, label %if.end292

if.then283:                                       ; preds = %if.then281
  %arrayidx284 = getelementptr inbounds i8* %type.1, i64 1
  %53 = load i8* %arrayidx284, align 1, !tbaa !31
  %cmp286 = icmp eq i8 %53, 45
  br i1 %cmp286, label %if.end290, label %unknown_open_mode

unknown_open_mode:                                ; preds = %lor.lhs.false890, %lor.lhs.false754, %if.then283, %if.else1109
  %was_fdopen.0 = phi i8 [ 0, %if.then283 ], [ 0, %if.else1109 ], [ %was_fdopen.4, %lor.lhs.false754 ], [ 0, %lor.lhs.false890 ]
  %type.2 = phi i8* [ %type.1, %if.then283 ], [ %type.119651970, %if.else1109 ], [ %type.13, %lor.lhs.false754 ], [ %type.16, %lor.lhs.false890 ]
  %num_svs.addr.0 = phi i64 [ %num_svs, %if.then283 ], [ %num_svs, %if.else1109 ], [ %num_svs.addr.5, %lor.lhs.false754 ], [ %num_svs.addr.7, %lor.lhs.false890 ]
  %svp.addr.0 = phi %struct.sv** [ %svp, %if.then283 ], [ %svp, %if.else1109 ], [ %svp.addr.4, %lor.lhs.false754 ], [ %svp.addr.6, %lor.lhs.false890 ]
  %conv289 = trunc i64 %len to i32
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([27 x i8]* @.str5, i64 0, i64 0), i32 %conv289, i8* %name) #2
  br label %if.end290

if.end290:                                        ; preds = %if.then283, %unknown_open_mode
  %was_fdopen.1 = phi i8 [ %was_fdopen.0, %unknown_open_mode ], [ 0, %if.then283 ]
  %type.3 = phi i8* [ %type.2, %unknown_open_mode ], [ %type.1, %if.then283 ]
  %num_svs.addr.1 = phi i64 [ %num_svs.addr.0, %unknown_open_mode ], [ %num_svs, %if.then283 ]
  %svp.addr.1 = phi %struct.sv** [ %svp.addr.0, %unknown_open_mode ], [ %svp, %if.then283 ]
  %incdec.ptr291 = getelementptr inbounds i8* %type.3, i64 1
  br label %if.end292

if.end292:                                        ; preds = %if.end290, %if.then281
  %was_fdopen.2 = phi i8 [ %was_fdopen.1, %if.end290 ], [ 0, %if.then281 ]
  %type.4 = phi i8* [ %incdec.ptr291, %if.end290 ], [ %type.1, %if.then281 ]
  %num_svs.addr.2 = phi i64 [ %num_svs.addr.1, %if.end290 ], [ 0, %if.then281 ]
  %svp.addr.2 = phi %struct.sv** [ %svp.addr.1, %if.end290 ], [ %svp, %if.then281 ]
  br label %for.cond294

for.cond294:                                      ; preds = %for.cond294, %for.cond294, %for.cond294, %for.cond294, %for.cond294, %if.end292
  %type.4.pn = phi i8* [ %type.4, %if.end292 ], [ %type.5, %for.cond294 ], [ %type.5, %for.cond294 ], [ %type.5, %for.cond294 ], [ %type.5, %for.cond294 ], [ %type.5, %for.cond294 ]
  %type.5 = getelementptr inbounds i8* %type.4.pn, i64 1
  %54 = load i8* %type.5, align 1, !tbaa !31
  switch i8 %54, label %for.end318 [
    i8 32, label %for.cond294
    i8 9, label %for.cond294
    i8 10, label %for.cond294
    i8 13, label %for.cond294
    i8 12, label %for.cond294
  ]

for.end318:                                       ; preds = %for.cond294
  %tobool319 = icmp ne i64 %num_svs.addr.2, 0
  br i1 %tobool319, label %if.end324, label %if.then320

if.then320:                                       ; preds = %for.end318
  %sub.ptr.lhs.cast321 = ptrtoint i8* %tend.0.lcssa to i64
  %sub.ptr.rhs.cast322 = ptrtoint i8* %type.5 to i64
  %sub.ptr.sub323 = sub i64 %sub.ptr.lhs.cast321, %sub.ptr.rhs.cast322
  br label %if.end324

if.end324:                                        ; preds = %if.then320, %for.end318
  %len.addr.1 = phi i64 [ %len.addr.0, %for.end318 ], [ %sub.ptr.sub323, %if.then320 ]
  %name.addr.1 = phi i8* [ %name.addr.0, %for.end318 ], [ %type.5, %if.then320 ]
  %55 = load i8* %name.addr.1, align 1, !tbaa !31
  switch i8 %55, label %lor.lhs.false366 [
    i8 0, label %if.then328
    i8 45, label %land.lhs.true361
  ]

if.then328:                                       ; preds = %if.end324
  %56 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings = getelementptr inbounds %struct.cop* %56, i64 0, i32 14
  %57 = load %struct.sv** %cop_warnings, align 8, !tbaa !32
  %cmp329 = icmp eq %struct.sv* %57, null
  br i1 %cmp329, label %lor.lhs.false346, label %land.lhs.true331

land.lhs.true331:                                 ; preds = %if.then328
  %58 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings332 = getelementptr inbounds %struct.cop* %58, i64 0, i32 14
  %59 = load %struct.sv** %cop_warnings332, align 8, !tbaa !32
  %cmp333 = icmp eq %struct.sv* %59, inttoptr (i64 48 to %struct.sv*)
  br i1 %cmp333, label %lor.lhs.false346, label %land.lhs.true335

land.lhs.true335:                                 ; preds = %land.lhs.true331
  %60 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings336 = getelementptr inbounds %struct.cop* %60, i64 0, i32 14
  %61 = load %struct.sv** %cop_warnings336, align 8, !tbaa !32
  %cmp337 = icmp eq %struct.sv* %61, inttoptr (i64 24 to %struct.sv*)
  br i1 %cmp337, label %if.then354, label %lor.lhs.false339

lor.lhs.false339:                                 ; preds = %land.lhs.true335
  %62 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings340 = getelementptr inbounds %struct.cop* %62, i64 0, i32 14
  %63 = load %struct.sv** %cop_warnings340, align 8, !tbaa !32
  %sv_any341 = getelementptr inbounds %struct.sv* %63, i64 0, i32 0
  %64 = load i8** %sv_any341, align 8, !tbaa !34
  %xpv_pv = bitcast i8* %64 to i8**
  %65 = load i8** %xpv_pv, align 8, !tbaa !35
  %arrayidx342 = getelementptr inbounds i8* %65, i64 2
  %66 = load i8* %arrayidx342, align 1, !tbaa !31
  %and344 = and i8 %66, 16
  %tobool345 = icmp eq i8 %and344, 0
  br i1 %tobool345, label %lor.lhs.false346, label %if.then354

lor.lhs.false346:                                 ; preds = %lor.lhs.false339, %land.lhs.true331, %if.then328
  %67 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings347 = getelementptr inbounds %struct.cop* %67, i64 0, i32 14
  %68 = load %struct.sv** %cop_warnings347, align 8, !tbaa !32
  %cmp348 = icmp eq %struct.sv* %68, null
  br i1 %cmp348, label %land.lhs.true350, label %if.end355

land.lhs.true350:                                 ; preds = %lor.lhs.false346
  %69 = load i8* @PL_dowarn, align 1, !tbaa !31
  %and352 = and i8 %69, 1
  %tobool353 = icmp eq i8 %and352, 0
  br i1 %tobool353, label %if.end355, label %if.then354

if.then354:                                       ; preds = %lor.lhs.false339, %land.lhs.true350, %land.lhs.true335
  call void (i64, i8*, ...)* @Perl_warner(i64 10, i8* getelementptr inbounds ([30 x i8]* @.str6, i64 0, i64 0)) #2
  br label %if.end355

if.end355:                                        ; preds = %land.lhs.true350, %if.then354, %lor.lhs.false346
  %call356 = call i32* @__errno_location() #2
  store i32 32, i32* %call356, align 4, !tbaa !14
  br label %say_false

land.lhs.true361:                                 ; preds = %if.end324
  %arrayidx362 = getelementptr inbounds i8* %name.addr.1, i64 1
  %70 = load i8* %arrayidx362, align 1, !tbaa !31
  %cmp364 = icmp eq i8 %70, 0
  %or.cond = or i1 %cmp364, %tobool319
  %.old1507 = load i8* @PL_tainting, align 1
  %tobool369.old = icmp ne i8 %.old1507, 0
  %or.cond1510 = and i1 %or.cond, %tobool369.old
  br i1 %or.cond1510, label %if.then370, label %if.end372

lor.lhs.false366:                                 ; preds = %if.end324
  %71 = load i8* @PL_tainting, align 1
  %tobool369 = icmp ne i8 %71, 0
  %or.cond1508 = and i1 %tobool319, %tobool369
  br i1 %or.cond1508, label %if.then370, label %if.end372

if.then370:                                       ; preds = %land.lhs.true361, %lor.lhs.false366
  call void @Perl_taint_env() #2
  %.pr = load i8* @PL_tainting, align 1
  br label %if.end372

if.end372:                                        ; preds = %if.then370, %land.lhs.true361, %lor.lhs.false366
  %72 = phi i8 [ %.pr, %if.then370 ], [ %.old1507, %land.lhs.true361 ], [ %71, %lor.lhs.false366 ]
  %tobool373 = icmp eq i8 %72, 0
  br i1 %tobool373, label %if.end375, label %if.then374

if.then374:                                       ; preds = %if.end372
  call void @Perl_taint_proper(i8* null, i8* getelementptr inbounds ([11 x i8]* @.str7, i64 0, i64 0)) #2
  br label %if.end375

if.end375:                                        ; preds = %if.end372, %if.then374
  br i1 %tobool319, label %if.end413, label %land.lhs.true377

land.lhs.true377:                                 ; preds = %if.end375
  %sub = add nsw i64 %len.addr.1, -1
  %arrayidx378 = getelementptr inbounds i8* %name.addr.1, i64 %sub
  %73 = load i8* %arrayidx378, align 1, !tbaa !31
  %cmp380 = icmp eq i8 %73, 124
  br i1 %cmp380, label %if.then382, label %if.end413

if.then382:                                       ; preds = %land.lhs.true377
  store i8 0, i8* %arrayidx378, align 1, !tbaa !31
  %74 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings384 = getelementptr inbounds %struct.cop* %74, i64 0, i32 14
  %75 = load %struct.sv** %cop_warnings384, align 8, !tbaa !32
  %cmp385 = icmp eq %struct.sv* %75, null
  br i1 %cmp385, label %lor.lhs.false403, label %land.lhs.true387

land.lhs.true387:                                 ; preds = %if.then382
  %76 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings388 = getelementptr inbounds %struct.cop* %76, i64 0, i32 14
  %77 = load %struct.sv** %cop_warnings388, align 8, !tbaa !32
  %cmp389 = icmp eq %struct.sv* %77, inttoptr (i64 48 to %struct.sv*)
  br i1 %cmp389, label %lor.lhs.false403, label %land.lhs.true391

land.lhs.true391:                                 ; preds = %land.lhs.true387
  %78 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings392 = getelementptr inbounds %struct.cop* %78, i64 0, i32 14
  %79 = load %struct.sv** %cop_warnings392, align 8, !tbaa !32
  %cmp393 = icmp eq %struct.sv* %79, inttoptr (i64 24 to %struct.sv*)
  br i1 %cmp393, label %if.then411, label %lor.lhs.false395

lor.lhs.false395:                                 ; preds = %land.lhs.true391
  %80 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings396 = getelementptr inbounds %struct.cop* %80, i64 0, i32 14
  %81 = load %struct.sv** %cop_warnings396, align 8, !tbaa !32
  %sv_any397 = getelementptr inbounds %struct.sv* %81, i64 0, i32 0
  %82 = load i8** %sv_any397, align 8, !tbaa !34
  %xpv_pv398 = bitcast i8* %82 to i8**
  %83 = load i8** %xpv_pv398, align 8, !tbaa !35
  %arrayidx399 = getelementptr inbounds i8* %83, i64 2
  %84 = load i8* %arrayidx399, align 1, !tbaa !31
  %and401 = and i8 %84, 16
  %tobool402 = icmp eq i8 %and401, 0
  br i1 %tobool402, label %lor.lhs.false403, label %if.then411

lor.lhs.false403:                                 ; preds = %lor.lhs.false395, %land.lhs.true387, %if.then382
  %85 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings404 = getelementptr inbounds %struct.cop* %85, i64 0, i32 14
  %86 = load %struct.sv** %cop_warnings404, align 8, !tbaa !32
  %cmp405 = icmp eq %struct.sv* %86, null
  br i1 %cmp405, label %land.lhs.true407, label %if.end413

land.lhs.true407:                                 ; preds = %lor.lhs.false403
  %87 = load i8* @PL_dowarn, align 1, !tbaa !31
  %and409 = and i8 %87, 1
  %tobool410 = icmp eq i8 %and409, 0
  br i1 %tobool410, label %if.end413, label %if.then411

if.then411:                                       ; preds = %lor.lhs.false395, %land.lhs.true407, %land.lhs.true391
  call void (i64, i8*, ...)* @Perl_warner(i64 10, i8* getelementptr inbounds ([30 x i8]* @.str8, i64 0, i64 0)) #2
  br label %if.end413

if.end413:                                        ; preds = %land.lhs.true407, %lor.lhs.false403, %if.then411, %land.lhs.true377, %if.end375
  store i8 119, i8* %arraydecay, align 8, !tbaa !31
  store i32 1, i32* %writing, align 4, !tbaa !14
  %tobool415 = icmp eq i8 %out_raw.0, 0
  br i1 %tobool415, label %if.else419, label %if.then416

if.then416:                                       ; preds = %if.end413
  %strlen1884 = call i64 @strlen(i8* %arraydecay) #2
  %endptr1885 = getelementptr i8* %arraydecay, i64 %strlen1884
  %88 = bitcast i8* %endptr1885 to i16*
  store i16 98, i16* %88, align 1
  br label %if.end425

if.else419:                                       ; preds = %if.end413
  %tobool420 = icmp eq i8 %out_crlf.0, 0
  br i1 %tobool420, label %if.end425, label %if.then421

if.then421:                                       ; preds = %if.else419
  %strlen1882 = call i64 @strlen(i8* %arraydecay) #2
  %endptr1883 = getelementptr i8* %arraydecay, i64 %strlen1882
  %89 = bitcast i8* %endptr1883 to i16*
  store i16 116, i16* %89, align 1
  br label %if.end425

if.end425:                                        ; preds = %if.else419, %if.then421, %if.then416
  %cmp426 = icmp sgt i64 %num_svs.addr.2, 1
  br i1 %cmp426, label %if.then428, label %if.else432

if.then428:                                       ; preds = %if.end425
  %conv430 = trunc i64 %num_svs.addr.2 to i32
  %call431 = call %struct._PerlIO** @Perl_my_popen_list(i8* %arraydecay, i32 %conv430, %struct.sv** %svp.addr.2) #2
  br label %if.end435

if.else432:                                       ; preds = %if.end425
  %call434 = call %struct._PerlIO** @Perl_my_popen(i8* %name.addr.1, i8* %arraydecay) #2
  br label %if.end435

if.end435:                                        ; preds = %if.else432, %if.then428
  %fp.0 = phi %struct._PerlIO** [ %call431, %if.then428 ], [ %call434, %if.else432 ]
  br i1 %tobool319, label %if.then437, label %if.end1179

if.then437:                                       ; preds = %if.end435
  %90 = load i8* %type.5, align 1, !tbaa !31
  %tobool438 = icmp eq i8 %90, 0
  br i1 %tobool438, label %if.end1179, label %if.then439

if.then439:                                       ; preds = %if.then437
  %call441 = call i32 @PerlIO_apply_layers(%struct._PerlIO** %fp.0, i8* %arraydecay, i8* %type.5) #2
  %cmp442 = icmp eq i32 %call441, 0
  br i1 %cmp442, label %if.end1179, label %say_false

if.then452:                                       ; preds = %if.end277
  %91 = load i8* @PL_tainting, align 1, !tbaa !31
  %tobool453 = icmp eq i8 %91, 0
  br i1 %tobool453, label %if.end455, label %if.then454

if.then454:                                       ; preds = %if.then452
  call void @Perl_taint_proper(i8* null, i8* getelementptr inbounds ([5 x i8]* @.str4, i64 0, i64 0)) #2
  br label %if.end455

if.end455:                                        ; preds = %if.then452, %if.then454
  %incdec.ptr456 = getelementptr inbounds i8* %type.1, i64 1
  %92 = load i8* %incdec.ptr456, align 1, !tbaa !31
  %cmp458 = icmp eq i8 %92, 62
  br i1 %cmp458, label %if.then460, label %if.else465

if.then460:                                       ; preds = %if.end455
  %93 = load %struct.xpvio** %sv_any30, align 8, !tbaa !21
  %xio_type462 = getelementptr inbounds %struct.xpvio* %93, i64 0, i32 21
  store i8 97, i8* %xio_type462, align 1, !tbaa !25
  store i8 97, i8* %arraydecay, align 8, !tbaa !31
  %incdec.ptr464 = getelementptr inbounds i8* %type.1, i64 2
  br label %if.end467

if.else465:                                       ; preds = %if.end455
  store i8 119, i8* %arraydecay, align 8, !tbaa !31
  br label %if.end467

if.end467:                                        ; preds = %if.else465, %if.then460
  %type.6 = phi i8* [ %incdec.ptr464, %if.then460 ], [ %incdec.ptr456, %if.else465 ]
  store i32 1, i32* %writing, align 4, !tbaa !14
  %tobool468 = icmp eq i8 %out_raw.0, 0
  br i1 %tobool468, label %if.else472, label %if.then469

if.then469:                                       ; preds = %if.end467
  %strlen1899 = call i64 @strlen(i8* %arraydecay) #2
  %endptr1900 = getelementptr i8* %arraydecay, i64 %strlen1899
  %94 = bitcast i8* %endptr1900 to i16*
  store i16 98, i16* %94, align 1
  br label %if.end478

if.else472:                                       ; preds = %if.end467
  %tobool473 = icmp eq i8 %out_crlf.0, 0
  br i1 %tobool473, label %if.end478, label %if.then474

if.then474:                                       ; preds = %if.else472
  %strlen1897 = call i64 @strlen(i8* %arraydecay) #2
  %endptr1898 = getelementptr i8* %arraydecay, i64 %strlen1897
  %95 = bitcast i8* %endptr1898 to i16*
  store i16 116, i16* %95, align 1
  br label %if.end478

if.end478:                                        ; preds = %if.else472, %if.then474, %if.then469
  %96 = load i8* %type.6, align 1, !tbaa !31
  %cmp480 = icmp eq i8 %96, 38
  br i1 %cmp480, label %duplicity, label %for.cond654

duplicity:                                        ; preds = %if.end810, %if.end478
  %type.7 = phi i8* [ %type.6, %if.end478 ], [ %type.14, %if.end810 ]
  %incdec.ptr483 = getelementptr inbounds i8* %type.7, i64 1
  %97 = load i8* %incdec.ptr483, align 1, !tbaa !31
  %cmp485 = icmp eq i8 %97, 61
  %incdec.ptr488 = getelementptr inbounds i8* %type.7, i64 2
  %incdec.ptr488.incdec.ptr483 = select i1 %cmp485, i8* %incdec.ptr488, i8* %incdec.ptr483
  %. = select i1 %cmp485, i32 0, i32 2
  br i1 %tobool232, label %if.else496, label %land.lhs.true491

land.lhs.true491:                                 ; preds = %duplicity
  %98 = load i8* %incdec.ptr488.incdec.ptr483, align 1, !tbaa !31
  %tobool492 = icmp eq i8 %98, 0
  %tobool494 = icmp ne %struct._PerlIO** %supplied_fp, null
  %or.cond1473 = and i1 %tobool492, %tobool494
  br i1 %or.cond1473, label %if.end735, label %for.cond504

if.else496:                                       ; preds = %duplicity
  %cmp497 = icmp sgt i64 %num_svs, 1
  br i1 %cmp497, label %if.then499, label %for.cond504

if.then499:                                       ; preds = %if.else496
  %99 = load %struct.xpvio** %sv_any30, align 8, !tbaa !21
  %xio_type501 = getelementptr inbounds %struct.xpvio* %99, i64 0, i32 21
  %100 = load i8* %xio_type501, align 1, !tbaa !25
  %conv502 = sext i8 %100 to i32
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([37 x i8]* @.str11, i64 0, i64 0), i32 %conv502) #2
  br label %for.cond504

for.cond504:                                      ; preds = %land.lhs.true491, %if.else496, %if.then499, %for.inc526
  %type.9 = phi i8* [ %incdec.ptr527, %for.inc526 ], [ %incdec.ptr488.incdec.ptr483, %if.then499 ], [ %incdec.ptr488.incdec.ptr483, %if.else496 ], [ %incdec.ptr488.incdec.ptr483, %land.lhs.true491 ]
  %101 = load i8* %type.9, align 1, !tbaa !31
  switch i8 %101, label %for.end528 [
    i8 32, label %for.inc526
    i8 9, label %for.inc526
    i8 10, label %for.inc526
    i8 13, label %for.inc526
    i8 12, label %for.inc526
  ]

for.inc526:                                       ; preds = %for.cond504, %for.cond504, %for.cond504, %for.cond504, %for.cond504
  %incdec.ptr527 = getelementptr inbounds i8* %type.9, i64 1
  br label %for.cond504

for.end528:                                       ; preds = %for.cond504
  br i1 %tobool232, label %land.lhs.true530, label %if.else552

land.lhs.true530:                                 ; preds = %for.end528
  %102 = load %struct.sv** %svp, align 8, !tbaa !16
  %sv_flags531 = getelementptr inbounds %struct.sv* %102, i64 0, i32 2
  %103 = load i64* %sv_flags531, align 8, !tbaa !1
  %and532 = and i64 %103, 65536
  %tobool533 = icmp eq i64 %and532, 0
  br i1 %tobool533, label %lor.lhs.false534, label %if.then541

lor.lhs.false534:                                 ; preds = %land.lhs.true530
  %and536 = and i64 %103, 262144
  %tobool537 = icmp eq i64 %and536, 0
  br i1 %tobool537, label %if.else552, label %land.lhs.true538

land.lhs.true538:                                 ; preds = %lor.lhs.false534
  %call539 = call i64 @Perl_looks_like_number(%struct.sv* %102) #2
  %tobool540 = icmp eq i64 %call539, 0
  br i1 %tobool540, label %land.lhs.true538.if.else552_crit_edge, label %land.lhs.true538.if.then541_crit_edge

land.lhs.true538.if.else552_crit_edge:            ; preds = %land.lhs.true538
  %.pre1962 = load i8* %type.9, align 1, !tbaa !31
  br label %if.else552

land.lhs.true538.if.then541_crit_edge:            ; preds = %land.lhs.true538
  %.pre1960 = load %struct.sv** %svp, align 8, !tbaa !16
  %sv_flags542.phi.trans.insert = getelementptr inbounds %struct.sv* %.pre1960, i64 0, i32 2
  %.pre1961 = load i64* %sv_flags542.phi.trans.insert, align 8, !tbaa !1
  br label %if.then541

if.then541:                                       ; preds = %land.lhs.true538.if.then541_crit_edge, %land.lhs.true530
  %104 = phi i64 [ %.pre1961, %land.lhs.true538.if.then541_crit_edge ], [ %103, %land.lhs.true530 ]
  %105 = phi %struct.sv* [ %.pre1960, %land.lhs.true538.if.then541_crit_edge ], [ %102, %land.lhs.true530 ]
  %and543 = and i64 %104, 65536
  %tobool544 = icmp eq i64 %and543, 0
  br i1 %tobool544, label %cond.false547, label %cond.true545

cond.true545:                                     ; preds = %if.then541
  %sv_any546 = getelementptr inbounds %struct.sv* %105, i64 0, i32 0
  %106 = load i8** %sv_any546, align 8, !tbaa !34
  %xuv_uv = getelementptr inbounds i8* %106, i64 24
  %107 = bitcast i8* %xuv_uv to i64*
  %108 = load i64* %107, align 8, !tbaa !37
  br label %cond.end549

cond.false547:                                    ; preds = %if.then541
  %call548 = call i64 @Perl_sv_2uv(%struct.sv* %105) #2
  br label %cond.end549

cond.end549:                                      ; preds = %cond.false547, %cond.true545
  %cond550 = phi i64 [ %108, %cond.true545 ], [ %call548, %cond.false547 ]
  %conv551 = trunc i64 %cond550 to i32
  br label %if.else635

if.else552:                                       ; preds = %land.lhs.true538.if.else552_crit_edge, %lor.lhs.false534, %for.end528
  %109 = phi i8 [ %.pre1962, %land.lhs.true538.if.else552_crit_edge ], [ %101, %lor.lhs.false534 ], [ %101, %for.end528 ]
  %.off1936 = add i8 %109, -48
  %110 = icmp ult i8 %.off1936, 10
  br i1 %110, label %if.then560, label %if.else562

if.then560:                                       ; preds = %if.else552
  %call561 = call i32 @atoi(i8* %type.9) #2
  br label %if.else635

if.else562:                                       ; preds = %if.else552
  br i1 %tobool232, label %if.then564, label %if.else566

if.then564:                                       ; preds = %if.else562
  %111 = load %struct.sv** %svp, align 8, !tbaa !16
  %call565 = call %struct.io* @Perl_sv_2io(%struct.sv* %111) #2
  br label %if.end585

if.else566:                                       ; preds = %if.else562
  %call567 = call %struct.gv* @Perl_gv_fetchpv(i8* %type.9, i64 0, i64 15) #2
  %tobool568 = icmp eq %struct.gv* %call567, null
  br i1 %tobool568, label %if.then587, label %land.lhs.true569

land.lhs.true569:                                 ; preds = %if.else566
  %112 = getelementptr inbounds %struct.gv* %call567, i64 0, i32 2
  %113 = load i64* %112, align 8, !tbaa !1
  %and571 = and i64 %113, 255
  %cmp572 = icmp eq i64 %and571, 13
  br i1 %cmp572, label %land.lhs.true574, label %if.then587

land.lhs.true574:                                 ; preds = %land.lhs.true569
  %sv_any575 = getelementptr inbounds %struct.gv* %call567, i64 0, i32 0
  %114 = load %struct.xpvgv** %sv_any575, align 8, !tbaa !7
  %xgv_gp576 = getelementptr inbounds %struct.xpvgv* %114, i64 0, i32 7
  %115 = load %struct.gp** %xgv_gp576, align 8, !tbaa !9
  %tobool577 = icmp eq %struct.gp* %115, null
  br i1 %tobool577, label %if.then587, label %cond.true578

cond.true578:                                     ; preds = %land.lhs.true574
  %gp_io581 = getelementptr inbounds %struct.gp* %115, i64 0, i32 2
  %116 = load %struct.io** %gp_io581, align 8, !tbaa !12
  br label %if.end585

if.end585:                                        ; preds = %cond.true578, %if.then564
  %thatio.0 = phi %struct.io* [ %call565, %if.then564 ], [ %116, %cond.true578 ]
  %tobool586 = icmp eq %struct.io* %thatio.0, null
  br i1 %tobool586, label %if.then587, label %if.end589

if.then587:                                       ; preds = %if.else566, %land.lhs.true569, %land.lhs.true574, %if.end585
  %call588 = call i32* @__errno_location() #2
  store i32 22, i32* %call588, align 4, !tbaa !14
  br label %say_false

if.end589:                                        ; preds = %if.end585
  %sv_any590 = getelementptr inbounds %struct.io* %thatio.0, i64 0, i32 0
  %117 = load %struct.xpvio** %sv_any590, align 8, !tbaa !21
  %xio_ifp591 = getelementptr inbounds %struct.xpvio* %117, i64 0, i32 7
  %118 = load %struct._PerlIO*** %xio_ifp591, align 8, !tbaa !23
  %tobool592 = icmp eq %struct._PerlIO** %118, null
  br i1 %tobool592, label %if.else635, label %if.then593

if.then593:                                       ; preds = %if.end589
  %call594 = call i32 @Perl_PerlIO_flush(%struct._PerlIO** %118) #2
  %call595 = call i32 @Perl_PerlIO_fileno(%struct._PerlIO** %118) #2
  %call596 = call %struct._PerlIO** @Perl_PerlIO_stdout() #2
  %cmp597 = icmp eq %struct._PerlIO** %118, %call596
  br i1 %cmp597, label %if.then603, label %lor.lhs.false599

lor.lhs.false599:                                 ; preds = %if.then593
  %call600 = call %struct._PerlIO** @Perl_PerlIO_stderr() #2
  %cmp601 = icmp eq %struct._PerlIO** %118, %call600
  br i1 %cmp601, label %if.then603, label %if.else606

if.then603:                                       ; preds = %lor.lhs.false599, %if.then593
  %119 = load %struct.xpvio** %sv_any30, align 8, !tbaa !21
  %xio_type605 = getelementptr inbounds %struct.xpvio* %119, i64 0, i32 21
  store i8 62, i8* %xio_type605, align 1, !tbaa !25
  br label %if.then633

if.else606:                                       ; preds = %lor.lhs.false599
  %call607 = call %struct._PerlIO** @Perl_PerlIO_stdin() #2
  %cmp608 = icmp eq %struct._PerlIO** %118, %call607
  br i1 %cmp608, label %if.then610, label %if.else613

if.then610:                                       ; preds = %if.else606
  %120 = load %struct.xpvio** %sv_any30, align 8, !tbaa !21
  %xio_type612 = getelementptr inbounds %struct.xpvio* %120, i64 0, i32 21
  store i8 60, i8* %xio_type612, align 1, !tbaa !25
  br label %if.then633

if.else613:                                       ; preds = %if.else606
  %121 = load %struct.xpvio** %sv_any590, align 8, !tbaa !21
  %xio_type615 = getelementptr inbounds %struct.xpvio* %121, i64 0, i32 21
  %122 = load i8* %xio_type615, align 1, !tbaa !25
  %cmp617 = icmp eq i8 %122, 115
  br i1 %cmp617, label %if.then619, label %if.then633

if.then619:                                       ; preds = %if.else613
  %123 = load %struct.xpvio** %sv_any30, align 8, !tbaa !21
  %xio_type621 = getelementptr inbounds %struct.xpvio* %123, i64 0, i32 21
  store i8 115, i8* %xio_type621, align 1, !tbaa !25
  br label %if.then633

if.then633:                                       ; preds = %if.else613, %if.then610, %if.then619, %if.then603
  %tobool6291925 = icmp eq i64 %num_svs, 0
  %.type.91926 = select i1 %tobool6291925, i8* null, i8* %type.9
  %call634 = call %struct._PerlIO** @PerlIO_fdupopen(%struct._PerlIO** %118, %struct.clone_params* null, i32 %.) #2
  br label %if.end735

if.else635:                                       ; preds = %if.end589, %if.then560, %cond.end549
  %fd.0.ph = phi i32 [ %conv551, %cond.end549 ], [ %call561, %if.then560 ], [ -1, %if.end589 ]
  %num_svs.addr.3.ph = phi i64 [ 0, %cond.end549 ], [ %num_svs, %if.then560 ], [ %num_svs, %if.end589 ]
  %tobool6291918 = icmp eq i64 %num_svs.addr.3.ph, 0
  %.type.91919 = select i1 %tobool6291918, i8* null, i8* %type.9
  %not.cmp485 = xor i1 %cmp485, true
  br i1 %cmp485, label %if.end640, label %if.then637

if.then637:                                       ; preds = %if.else635
  %call638 = call i32 @dup(i32 %fd.0.ph) #2
  br label %if.end640

if.end640:                                        ; preds = %if.else635, %if.then637
  %fd.1 = phi i32 [ %call638, %if.then637 ], [ %fd.0.ph, %if.else635 ]
  %was_fdopen.3 = phi i8 [ 0, %if.then637 ], [ 1, %if.else635 ]
  %conv642 = trunc i64 %num_svs.addr.3.ph to i32
  %call643 = call %struct._PerlIO** @PerlIO_openn(i8* %.type.91919, i8* %arraydecay, i32 %fd.1, i32 0, i32 0, %struct._PerlIO** null, i32 %conv642, %struct.sv** %svp) #2
  %tobool644 = icmp eq %struct._PerlIO** %call643, null
  %or.cond1512 = and i1 %tobool644, %not.cmp485
  br i1 %or.cond1512, label %if.then647, label %if.end735

if.then647:                                       ; preds = %if.end640
  %call648 = call i32 @close(i32 %fd.1) #2
  br label %if.end735

for.cond654:                                      ; preds = %if.end478, %for.inc676
  %124 = phi i8 [ %.pre1959, %for.inc676 ], [ %96, %if.end478 ]
  %type.11 = phi i8* [ %incdec.ptr677, %for.inc676 ], [ %type.6, %if.end478 ]
  switch i8 %124, label %if.else724 [
    i8 32, label %for.inc676
    i8 9, label %for.inc676
    i8 10, label %for.inc676
    i8 13, label %for.inc676
    i8 12, label %for.inc676
    i8 45, label %land.lhs.true682
  ]

for.inc676:                                       ; preds = %for.cond654, %for.cond654, %for.cond654, %for.cond654, %for.cond654
  %incdec.ptr677 = getelementptr inbounds i8* %type.11, i64 1
  %.pre1959 = load i8* %incdec.ptr677, align 1, !tbaa !31
  br label %for.cond654

land.lhs.true682:                                 ; preds = %for.cond654
  %arrayidx683 = getelementptr inbounds i8* %type.11, i64 1
  %125 = load i8* %arrayidx683, align 1, !tbaa !31
  switch i8 %125, label %if.else724 [
    i8 0, label %if.then715
    i8 32, label %if.then715
    i8 9, label %if.then715
    i8 10, label %if.then715
    i8 13, label %if.then715
    i8 12, label %if.then715
    i8 58, label %if.then715
  ]

if.then715:                                       ; preds = %land.lhs.true682, %land.lhs.true682, %land.lhs.true682, %land.lhs.true682, %land.lhs.true682, %land.lhs.true682, %land.lhs.true682
  %call717 = call %struct._PerlIO** @Perl_PerlIO_stdout() #2
  %126 = load %struct.xpvio** %sv_any30, align 8, !tbaa !21
  %xio_type719 = getelementptr inbounds %struct.xpvio* %126, i64 0, i32 21
  store i8 45, i8* %xio_type719, align 1, !tbaa !25
  %cmp720 = icmp sgt i64 %num_svs, 1
  br i1 %cmp720, label %if.then722, label %if.end735

if.then722:                                       ; preds = %if.then715
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([37 x i8]* @.str12, i64 0, i64 0), i32 45) #2
  br label %if.end735

if.else724:                                       ; preds = %for.cond654, %land.lhs.true682
  br i1 %tobool232, label %if.end730, label %if.then726

if.then726:                                       ; preds = %if.else724
  %call727 = call i64 @strlen(i8* %type.11) #2
  %call728 = call %struct.sv* @Perl_newSVpvn(i8* %type.11, i64 %call727) #2
  %call729 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call728) #2
  store %struct.sv* %call729, %struct.sv** %namesv, align 8, !tbaa !16
  br label %if.end730

if.end730:                                        ; preds = %if.then726, %if.else724
  %type.12 = phi i8* [ %type.11, %if.else724 ], [ null, %if.then726 ]
  %num_svs.addr.4 = phi i64 [ %num_svs, %if.else724 ], [ 1, %if.then726 ]
  %svp.addr.3 = phi %struct.sv** [ %svp, %if.else724 ], [ %namesv, %if.then726 ]
  %conv732 = trunc i64 %num_svs.addr.4 to i32
  %call733 = call %struct._PerlIO** @PerlIO_openn(i8* %type.12, i8* %arraydecay, i32 -1, i32 0, i32 0, %struct._PerlIO** null, i32 %conv732, %struct.sv** %svp.addr.3) #2
  br label %if.end735

if.end735:                                        ; preds = %land.lhs.true491, %if.end640, %if.end730, %if.then722, %if.then715, %if.then647, %if.then633
  %was_fdopen.4 = phi i8 [ 0, %if.then633 ], [ %was_fdopen.3, %if.then647 ], [ %was_fdopen.3, %if.end640 ], [ 0, %if.then722 ], [ 0, %if.then715 ], [ 0, %if.end730 ], [ 0, %land.lhs.true491 ]
  %type.13 = phi i8* [ %.type.91926, %if.then633 ], [ %.type.91919, %if.then647 ], [ %.type.91919, %if.end640 ], [ %arrayidx683, %if.then722 ], [ %arrayidx683, %if.then715 ], [ %type.12, %if.end730 ], [ %incdec.ptr488.incdec.ptr483, %land.lhs.true491 ]
  %fp.1 = phi %struct._PerlIO** [ %call634, %if.then633 ], [ null, %if.then647 ], [ %call643, %if.end640 ], [ %call717, %if.then722 ], [ %call717, %if.then715 ], [ %call733, %if.end730 ], [ %supplied_fp, %land.lhs.true491 ]
  %num_svs.addr.5 = phi i64 [ %num_svs, %if.then633 ], [ %num_svs.addr.3.ph, %if.then647 ], [ %num_svs.addr.3.ph, %if.end640 ], [ %num_svs, %if.then722 ], [ %num_svs, %if.then715 ], [ %num_svs.addr.4, %if.end730 ], [ 0, %land.lhs.true491 ]
  %svp.addr.4 = phi %struct.sv** [ %svp, %if.then633 ], [ %svp, %if.then647 ], [ %svp, %if.end640 ], [ %svp, %if.then722 ], [ %svp, %if.then715 ], [ %svp.addr.3, %if.end730 ], [ %svp, %land.lhs.true491 ]
  %tobool736 = icmp eq %struct._PerlIO** %fp.1, null
  %tobool738 = icmp ne i8* %type.13, null
  %or.cond1481 = and i1 %tobool736, %tobool738
  br i1 %or.cond1481, label %land.lhs.true739, label %if.end1179

land.lhs.true739:                                 ; preds = %if.end735
  %127 = load i8* %type.13, align 1, !tbaa !31
  switch i8 %127, label %land.lhs.true746 [
    i8 0, label %if.end1179.thread
    i8 58, label %if.end1179.thread
  ]

land.lhs.true746:                                 ; preds = %land.lhs.true739
  %.off1937 = add i8 %127, -65
  %128 = icmp ult i8 %.off1937, 26
  br i1 %128, label %if.end1179.thread, label %lor.lhs.false754

lor.lhs.false754:                                 ; preds = %land.lhs.true746
  %.off1938 = add i8 %127, -97
  %129 = icmp ult i8 %.off1938, 26
  %cmp764 = icmp eq i8 %127, 95
  %or.cond1933 = or i1 %129, %cmp764
  br i1 %or.cond1933, label %if.end1179.thread, label %unknown_open_mode

for.cond774:                                      ; preds = %for.cond774, %for.cond774, %for.cond774, %for.cond774, %for.cond774, %if.end277
  %type.1.pn = phi i8* [ %type.1, %if.end277 ], [ %type.14, %for.cond774 ], [ %type.14, %for.cond774 ], [ %type.14, %for.cond774 ], [ %type.14, %for.cond774 ], [ %type.14, %for.cond774 ]
  %type.14 = getelementptr inbounds i8* %type.1.pn, i64 1
  %130 = load i8* %type.14, align 1, !tbaa !31
  switch i8 %130, label %for.end798 [
    i8 32, label %for.cond774
    i8 9, label %for.cond774
    i8 10, label %for.cond774
    i8 13, label %for.cond774
    i8 12, label %for.cond774
  ]

for.end798:                                       ; preds = %for.cond774
  store i8 114, i8* %arraydecay, align 8, !tbaa !31
  %tobool800 = icmp eq i8 %in_raw.0, 0
  br i1 %tobool800, label %if.else804, label %if.then801

if.then801:                                       ; preds = %for.end798
  %strlen1895 = call i64 @strlen(i8* %arraydecay) #2
  %endptr1896 = getelementptr i8* %arraydecay, i64 %strlen1895
  %131 = bitcast i8* %endptr1896 to i16*
  store i16 98, i16* %131, align 1
  br label %if.end810

if.else804:                                       ; preds = %for.end798
  %tobool805 = icmp eq i8 %in_crlf.0, 0
  br i1 %tobool805, label %if.end810, label %if.then806

if.then806:                                       ; preds = %if.else804
  %strlen1893 = call i64 @strlen(i8* %arraydecay) #2
  %endptr1894 = getelementptr i8* %arraydecay, i64 %strlen1893
  %132 = bitcast i8* %endptr1894 to i16*
  store i16 116, i16* %132, align 1
  br label %if.end810

if.end810:                                        ; preds = %if.else804, %if.then806, %if.then801
  %133 = load i8* %type.14, align 1, !tbaa !31
  switch i8 %133, label %if.else861 [
    i8 38, label %duplicity
    i8 45, label %land.lhs.true819
  ]

land.lhs.true819:                                 ; preds = %if.end810
  %arrayidx820 = getelementptr inbounds i8* %type.1.pn, i64 2
  %134 = load i8* %arrayidx820, align 1, !tbaa !31
  switch i8 %134, label %if.else861 [
    i8 0, label %if.then852
    i8 32, label %if.then852
    i8 9, label %if.then852
    i8 10, label %if.then852
    i8 13, label %if.then852
    i8 12, label %if.then852
    i8 58, label %if.then852
  ]

if.then852:                                       ; preds = %land.lhs.true819, %land.lhs.true819, %land.lhs.true819, %land.lhs.true819, %land.lhs.true819, %land.lhs.true819, %land.lhs.true819
  %call854 = call %struct._PerlIO** @Perl_PerlIO_stdin() #2
  %135 = load %struct.xpvio** %sv_any30, align 8, !tbaa !21
  %xio_type856 = getelementptr inbounds %struct.xpvio* %135, i64 0, i32 21
  store i8 45, i8* %xio_type856, align 1, !tbaa !25
  %cmp857 = icmp sgt i64 %num_svs, 1
  br i1 %cmp857, label %if.then859, label %if.end871

if.then859:                                       ; preds = %if.then852
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([37 x i8]* @.str13, i64 0, i64 0), i32 45) #2
  br label %if.end871

if.else861:                                       ; preds = %land.lhs.true819, %if.end810
  br i1 %tobool232, label %if.end867, label %if.then863

if.then863:                                       ; preds = %if.else861
  %call864 = call i64 @strlen(i8* %type.14) #2
  %call865 = call %struct.sv* @Perl_newSVpvn(i8* %type.14, i64 %call864) #2
  %call866 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call865) #2
  store %struct.sv* %call866, %struct.sv** %namesv, align 8, !tbaa !16
  br label %if.end867

if.end867:                                        ; preds = %if.then863, %if.else861
  %type.15 = phi i8* [ %type.14, %if.else861 ], [ null, %if.then863 ]
  %num_svs.addr.6 = phi i64 [ %num_svs, %if.else861 ], [ 1, %if.then863 ]
  %svp.addr.5 = phi %struct.sv** [ %svp, %if.else861 ], [ %namesv, %if.then863 ]
  %conv869 = trunc i64 %num_svs.addr.6 to i32
  %call870 = call %struct._PerlIO** @PerlIO_openn(i8* %type.15, i8* %arraydecay, i32 -1, i32 0, i32 0, %struct._PerlIO** null, i32 %conv869, %struct.sv** %svp.addr.5) #2
  br label %if.end871

if.end871:                                        ; preds = %if.then852, %if.then859, %if.end867
  %type.16 = phi i8* [ %arrayidx820, %if.then859 ], [ %arrayidx820, %if.then852 ], [ %type.15, %if.end867 ]
  %fp.2 = phi %struct._PerlIO** [ %call854, %if.then859 ], [ %call854, %if.then852 ], [ %call870, %if.end867 ]
  %num_svs.addr.7 = phi i64 [ %num_svs, %if.then859 ], [ %num_svs, %if.then852 ], [ %num_svs.addr.6, %if.end867 ]
  %svp.addr.6 = phi %struct.sv** [ %svp, %if.then859 ], [ %svp, %if.then852 ], [ %svp.addr.5, %if.end867 ]
  %tobool872 = icmp eq %struct._PerlIO** %fp.2, null
  %tobool874 = icmp ne i8* %type.16, null
  %or.cond1486 = and i1 %tobool872, %tobool874
  br i1 %or.cond1486, label %land.lhs.true875, label %if.end1179

land.lhs.true875:                                 ; preds = %if.end871
  %136 = load i8* %type.16, align 1, !tbaa !31
  switch i8 %136, label %land.lhs.true882 [
    i8 0, label %if.end1179.thread
    i8 58, label %if.end1179.thread
  ]

land.lhs.true882:                                 ; preds = %land.lhs.true875
  %.off = add i8 %136, -65
  %137 = icmp ult i8 %.off, 26
  br i1 %137, label %if.end1179.thread, label %lor.lhs.false890

lor.lhs.false890:                                 ; preds = %land.lhs.true882
  %.off1935 = add i8 %136, -97
  %138 = icmp ult i8 %.off1935, 26
  %cmp900 = icmp eq i8 %136, 95
  %or.cond1934 = or i1 %138, %cmp900
  br i1 %or.cond1934, label %if.end1179.thread, label %unknown_open_mode

if.else904:                                       ; preds = %if.end277
  %cmp909 = icmp eq i8 %52, 45
  %or.cond1907 = and i1 %tobool232, %cmp909
  br i1 %or.cond1907, label %land.lhs.true911, label %if.else904.lor.lhs.false916_crit_edge

if.else904.lor.lhs.false916_crit_edge:            ; preds = %land.lhs.true266, %lor.lhs.false262, %land.lhs.true250, %if.else904
  %type.119651971 = phi i8* [ %type.1, %if.else904 ], [ %type.0, %land.lhs.true250 ], [ %type.0, %lor.lhs.false262 ], [ %type.0, %land.lhs.true266 ]
  %add.ptr919.pre = getelementptr inbounds i8* %type.119651971, i64 1
  br label %lor.lhs.false916

land.lhs.true911:                                 ; preds = %if.else904
  %arrayidx912 = getelementptr inbounds i8* %type.1, i64 1
  %139 = load i8* %arrayidx912, align 1, !tbaa !31
  %cmp914 = icmp eq i8 %139, 124
  br i1 %cmp914, label %if.then927, label %lor.lhs.false916

lor.lhs.false916:                                 ; preds = %if.else904.lor.lhs.false916_crit_edge, %land.lhs.true911
  %type.119651970 = phi i8* [ %type.119651971, %if.else904.lor.lhs.false916_crit_edge ], [ %type.1, %land.lhs.true911 ]
  %add.ptr919.pre-phi = phi i8* [ %add.ptr919.pre, %if.else904.lor.lhs.false916_crit_edge ], [ %arrayidx912, %land.lhs.true911 ]
  %tobool232.not = xor i1 %tobool232, true
  %cmp920 = icmp ugt i8* %tend.0.lcssa, %add.ptr919.pre-phi
  %or.cond1908 = and i1 %cmp920, %tobool232.not
  br i1 %or.cond1908, label %land.lhs.true922, label %if.else1109

land.lhs.true922:                                 ; preds = %lor.lhs.false916
  %arrayidx923 = getelementptr inbounds i8* %tend.0.lcssa, i64 -1
  %140 = load i8* %arrayidx923, align 1, !tbaa !31
  %cmp925 = icmp eq i8 %140, 124
  br i1 %cmp925, label %if.then927, label %if.else1109

if.then927:                                       ; preds = %land.lhs.true922, %land.lhs.true911
  %type.119651969 = phi i8* [ %type.119651970, %land.lhs.true922 ], [ %type.1, %land.lhs.true911 ]
  br i1 %tobool232, label %if.then929, label %if.else931

if.then929:                                       ; preds = %if.then927
  %add.ptr930 = getelementptr inbounds i8* %type.119651969, i64 2
  %.pre1958 = load i8* %name.addr.0, align 1, !tbaa !31
  br label %if.end994

if.else931:                                       ; preds = %if.then927
  %incdec.ptr932 = getelementptr inbounds i8* %tend.0.lcssa, i64 -1
  store i8 0, i8* %incdec.ptr932, align 1, !tbaa !31
  %cmp9341947 = icmp ugt i8* %incdec.ptr932, %type.119651969
  br i1 %cmp9341947, label %land.rhs936, label %for.cond966

land.rhs936:                                      ; preds = %if.else931, %while.body963
  %tend.11948 = phi i8* [ %arrayidx937, %while.body963 ], [ %incdec.ptr932, %if.else931 ]
  %arrayidx937 = getelementptr inbounds i8* %tend.11948, i64 -1
  %141 = load i8* %arrayidx937, align 1, !tbaa !31
  switch i8 %141, label %for.cond966 [
    i8 32, label %while.body963
    i8 9, label %while.body963
    i8 10, label %while.body963
    i8 13, label %while.body963
    i8 12, label %while.body963
  ]

while.body963:                                    ; preds = %land.rhs936, %land.rhs936, %land.rhs936, %land.rhs936, %land.rhs936
  store i8 0, i8* %arrayidx937, align 1, !tbaa !31
  %cmp934 = icmp ugt i8* %arrayidx937, %type.119651969
  br i1 %cmp934, label %land.rhs936, label %for.cond966

for.cond966:                                      ; preds = %if.else931, %while.body963, %land.rhs936, %for.inc988
  %type.17 = phi i8* [ %incdec.ptr989, %for.inc988 ], [ %type.119651969, %land.rhs936 ], [ %type.119651969, %while.body963 ], [ %type.119651969, %if.else931 ]
  %142 = load i8* %type.17, align 1, !tbaa !31
  switch i8 %142, label %if.end994 [
    i8 32, label %for.inc988
    i8 9, label %for.inc988
    i8 10, label %for.inc988
    i8 13, label %for.inc988
    i8 12, label %for.inc988
  ]

for.inc988:                                       ; preds = %for.cond966, %for.cond966, %for.cond966, %for.cond966, %for.cond966
  %incdec.ptr989 = getelementptr inbounds i8* %type.17, i64 1
  br label %for.cond966

if.end994:                                        ; preds = %for.cond966, %if.then929
  %143 = phi i8 [ %.pre1958, %if.then929 ], [ %142, %for.cond966 ]
  %type.18 = phi i8* [ %add.ptr930, %if.then929 ], [ %type.17, %for.cond966 ]
  %name.addr.2 = phi i8* [ %name.addr.0, %if.then929 ], [ %type.17, %for.cond966 ]
  switch i8 %143, label %if.then1040 [
    i8 0, label %if.then998
    i8 45, label %land.lhs.true1033
  ]

if.then998:                                       ; preds = %if.end994
  %144 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings999 = getelementptr inbounds %struct.cop* %144, i64 0, i32 14
  %145 = load %struct.sv** %cop_warnings999, align 8, !tbaa !32
  %cmp1000 = icmp eq %struct.sv* %145, null
  br i1 %cmp1000, label %lor.lhs.false1018, label %land.lhs.true1002

land.lhs.true1002:                                ; preds = %if.then998
  %146 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings1003 = getelementptr inbounds %struct.cop* %146, i64 0, i32 14
  %147 = load %struct.sv** %cop_warnings1003, align 8, !tbaa !32
  %cmp1004 = icmp eq %struct.sv* %147, inttoptr (i64 48 to %struct.sv*)
  br i1 %cmp1004, label %lor.lhs.false1018, label %land.lhs.true1006

land.lhs.true1006:                                ; preds = %land.lhs.true1002
  %148 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings1007 = getelementptr inbounds %struct.cop* %148, i64 0, i32 14
  %149 = load %struct.sv** %cop_warnings1007, align 8, !tbaa !32
  %cmp1008 = icmp eq %struct.sv* %149, inttoptr (i64 24 to %struct.sv*)
  br i1 %cmp1008, label %if.then1026, label %lor.lhs.false1010

lor.lhs.false1010:                                ; preds = %land.lhs.true1006
  %150 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings1011 = getelementptr inbounds %struct.cop* %150, i64 0, i32 14
  %151 = load %struct.sv** %cop_warnings1011, align 8, !tbaa !32
  %sv_any1012 = getelementptr inbounds %struct.sv* %151, i64 0, i32 0
  %152 = load i8** %sv_any1012, align 8, !tbaa !34
  %xpv_pv1013 = bitcast i8* %152 to i8**
  %153 = load i8** %xpv_pv1013, align 8, !tbaa !35
  %arrayidx1014 = getelementptr inbounds i8* %153, i64 2
  %154 = load i8* %arrayidx1014, align 1, !tbaa !31
  %and1016 = and i8 %154, 16
  %tobool1017 = icmp eq i8 %and1016, 0
  br i1 %tobool1017, label %lor.lhs.false1018, label %if.then1026

lor.lhs.false1018:                                ; preds = %lor.lhs.false1010, %land.lhs.true1002, %if.then998
  %155 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings1019 = getelementptr inbounds %struct.cop* %155, i64 0, i32 14
  %156 = load %struct.sv** %cop_warnings1019, align 8, !tbaa !32
  %cmp1020 = icmp eq %struct.sv* %156, null
  br i1 %cmp1020, label %land.lhs.true1022, label %if.end1027

land.lhs.true1022:                                ; preds = %lor.lhs.false1018
  %157 = load i8* @PL_dowarn, align 1, !tbaa !31
  %and1024 = and i8 %157, 1
  %tobool1025 = icmp eq i8 %and1024, 0
  br i1 %tobool1025, label %if.end1027, label %if.then1026

if.then1026:                                      ; preds = %lor.lhs.false1010, %land.lhs.true1022, %land.lhs.true1006
  call void (i64, i8*, ...)* @Perl_warner(i64 10, i8* getelementptr inbounds ([30 x i8]* @.str6, i64 0, i64 0)) #2
  br label %if.end1027

if.end1027:                                       ; preds = %land.lhs.true1022, %if.then1026, %lor.lhs.false1018
  %call1028 = call i32* @__errno_location() #2
  store i32 32, i32* %call1028, align 4, !tbaa !14
  br label %say_false

land.lhs.true1033:                                ; preds = %if.end994
  %arrayidx1034 = getelementptr inbounds i8* %name.addr.2, i64 1
  %158 = load i8* %arrayidx1034, align 1, !tbaa !31
  %cmp1036 = icmp ne i8 %158, 0
  %or.cond1494 = or i1 %cmp1036, %tobool232
  %159 = load i8* @PL_tainting, align 1
  %tobool1041 = icmp ne i8 %159, 0
  %or.cond1514 = and i1 %or.cond1494, %tobool1041
  br i1 %or.cond1514, label %if.then1042, label %if.end1044

if.then1040:                                      ; preds = %if.end994
  %.old1513 = load i8* @PL_tainting, align 1, !tbaa !31
  %tobool1041.old = icmp eq i8 %.old1513, 0
  br i1 %tobool1041.old, label %if.end1047, label %if.then1042

if.then1042:                                      ; preds = %if.then1040, %land.lhs.true1033
  call void @Perl_taint_env() #2
  %.pr1931 = load i8* @PL_tainting, align 1
  br label %if.end1044

if.end1044:                                       ; preds = %if.then1042, %land.lhs.true1033
  %160 = phi i8 [ %.pr1931, %if.then1042 ], [ %159, %land.lhs.true1033 ]
  %tobool1045 = icmp eq i8 %160, 0
  br i1 %tobool1045, label %if.end1047, label %if.then1046

if.then1046:                                      ; preds = %if.end1044
  call void @Perl_taint_proper(i8* null, i8* getelementptr inbounds ([11 x i8]* @.str7, i64 0, i64 0)) #2
  br label %if.end1047

if.end1047:                                       ; preds = %if.then1040, %if.end1044, %if.then1046
  store i8 114, i8* %arraydecay, align 8, !tbaa !31
  %tobool1049 = icmp eq i8 %in_raw.0, 0
  br i1 %tobool1049, label %if.else1053, label %if.then1050

if.then1050:                                      ; preds = %if.end1047
  %strlen1890 = call i64 @strlen(i8* %arraydecay) #2
  %endptr1891 = getelementptr i8* %arraydecay, i64 %strlen1890
  %161 = bitcast i8* %endptr1891 to i16*
  store i16 98, i16* %161, align 1
  br label %if.end1059

if.else1053:                                      ; preds = %if.end1047
  %tobool1054 = icmp eq i8 %in_crlf.0, 0
  br i1 %tobool1054, label %if.end1059, label %if.then1055

if.then1055:                                      ; preds = %if.else1053
  %strlen1888 = call i64 @strlen(i8* %arraydecay) #2
  %endptr1889 = getelementptr i8* %arraydecay, i64 %strlen1888
  %162 = bitcast i8* %endptr1889 to i16*
  store i16 116, i16* %162, align 1
  br label %if.end1059

if.end1059:                                       ; preds = %if.else1053, %if.then1055, %if.then1050
  %cmp1060 = icmp sgt i64 %num_svs, 1
  br i1 %cmp1060, label %if.then1062, label %if.else1066

if.then1062:                                      ; preds = %if.end1059
  %conv1064 = trunc i64 %num_svs to i32
  %call1065 = call %struct._PerlIO** @Perl_my_popen_list(i8* %arraydecay, i32 %conv1064, %struct.sv** %svp) #2
  br label %if.end1069

if.else1066:                                      ; preds = %if.end1059
  %call1068 = call %struct._PerlIO** @Perl_my_popen(i8* %name.addr.2, i8* %arraydecay) #2
  br label %if.end1069

if.end1069:                                       ; preds = %if.else1066, %if.then1062
  %fp.3 = phi %struct._PerlIO** [ %call1065, %if.then1062 ], [ %call1068, %if.else1066 ]
  %163 = load %struct.xpvio** %sv_any30, align 8, !tbaa !21
  %xio_type1071 = getelementptr inbounds %struct.xpvio* %163, i64 0, i32 21
  store i8 124, i8* %xio_type1071, align 1, !tbaa !25
  br i1 %tobool232, label %for.cond1074, label %if.end1179

for.cond1074:                                     ; preds = %if.end1069, %for.inc1096
  %type.19 = phi i8* [ %incdec.ptr1097, %for.inc1096 ], [ %type.18, %if.end1069 ]
  %164 = load i8* %type.19, align 1, !tbaa !31
  switch i8 %164, label %if.then1100 [
    i8 32, label %for.inc1096
    i8 9, label %for.inc1096
    i8 10, label %for.inc1096
    i8 13, label %for.inc1096
    i8 12, label %for.inc1096
    i8 0, label %if.end1179
  ]

for.inc1096:                                      ; preds = %for.cond1074, %for.cond1074, %for.cond1074, %for.cond1074, %for.cond1074
  %incdec.ptr1097 = getelementptr inbounds i8* %type.19, i64 1
  br label %for.cond1074

if.then1100:                                      ; preds = %for.cond1074
  %call1102 = call i32 @PerlIO_apply_layers(%struct._PerlIO** %fp.3, i8* %arraydecay, i8* %type.19) #2
  %cmp1103 = icmp eq i32 %call1102, 0
  br i1 %cmp1103, label %if.end1179, label %say_false

if.else1109:                                      ; preds = %lor.lhs.false916, %land.lhs.true922
  br i1 %tobool232, label %unknown_open_mode, label %if.end1112

if.end1112:                                       ; preds = %if.else1109
  %165 = load %struct.xpvio** %sv_any30, align 8, !tbaa !21
  %xio_type1114 = getelementptr inbounds %struct.xpvio* %165, i64 0, i32 21
  store i8 60, i8* %xio_type1114, align 1, !tbaa !25
  br label %for.cond1115

for.cond1115:                                     ; preds = %for.inc1137, %if.end1112
  %name.addr.3 = phi i8* [ %type.119651970, %if.end1112 ], [ %incdec.ptr1138, %for.inc1137 ]
  %166 = load i8* %name.addr.3, align 1, !tbaa !31
  switch i8 %166, label %for.end1139 [
    i8 32, label %for.inc1137
    i8 9, label %for.inc1137
    i8 10, label %for.inc1137
    i8 13, label %for.inc1137
    i8 12, label %for.inc1137
  ]

for.inc1137:                                      ; preds = %for.cond1115, %for.cond1115, %for.cond1115, %for.cond1115, %for.cond1115
  %incdec.ptr1138 = getelementptr inbounds i8* %name.addr.3, i64 1
  br label %for.cond1115

for.end1139:                                      ; preds = %for.cond1115
  store i8 114, i8* %arraydecay, align 8, !tbaa !31
  %tobool1141 = icmp eq i8 %in_raw.0, 0
  br i1 %tobool1141, label %if.else1145, label %if.then1142

if.then1142:                                      ; preds = %for.end1139
  %strlen1880 = call i64 @strlen(i8* %arraydecay) #2
  %endptr1881 = getelementptr i8* %arraydecay, i64 %strlen1880
  %167 = bitcast i8* %endptr1881 to i16*
  store i16 98, i16* %167, align 1
  br label %if.end1151

if.else1145:                                      ; preds = %for.end1139
  %tobool1146 = icmp eq i8 %in_crlf.0, 0
  br i1 %tobool1146, label %if.end1151, label %if.then1147

if.then1147:                                      ; preds = %if.else1145
  %strlen = call i64 @strlen(i8* %arraydecay) #2
  %endptr = getelementptr i8* %arraydecay, i64 %strlen
  %168 = bitcast i8* %endptr to i16*
  store i16 116, i16* %168, align 1
  br label %if.end1151

if.end1151:                                       ; preds = %if.else1145, %if.then1147, %if.then1142
  %169 = load i8* %name.addr.3, align 1, !tbaa !31
  %cmp1153 = icmp eq i8 %169, 45
  br i1 %cmp1153, label %land.lhs.true1155, label %if.end1170

land.lhs.true1155:                                ; preds = %if.end1151
  %arrayidx1156 = getelementptr inbounds i8* %name.addr.3, i64 1
  %170 = load i8* %arrayidx1156, align 1, !tbaa !31
  %cmp1158 = icmp eq i8 %170, 0
  br i1 %cmp1158, label %if.then1160, label %if.end1170

if.then1160:                                      ; preds = %land.lhs.true1155
  %call1161 = call %struct._PerlIO** @Perl_PerlIO_stdin() #2
  %171 = load %struct.xpvio** %sv_any30, align 8, !tbaa !21
  %xio_type1163 = getelementptr inbounds %struct.xpvio* %171, i64 0, i32 21
  store i8 45, i8* %xio_type1163, align 1, !tbaa !25
  br label %if.end1179

if.end1170:                                       ; preds = %land.lhs.true1155, %if.end1151
  %call1167 = call i64 @strlen(i8* %type.119651970) #2
  %call1168 = call %struct.sv* @Perl_newSVpvn(i8* %type.119651970, i64 %call1167) #2
  %call1169 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call1168) #2
  store %struct.sv* %call1169, %struct.sv** %namesv, align 8, !tbaa !16
  %call1173 = call %struct._PerlIO** @PerlIO_openn(i8* null, i8* %arraydecay, i32 -1, i32 0, i32 0, %struct._PerlIO** null, i32 1, %struct.sv** %namesv) #2
  br label %if.end1179

if.end1179.thread:                                ; preds = %land.lhs.true739, %land.lhs.true739, %land.lhs.true875, %land.lhs.true875, %land.lhs.true746, %lor.lhs.false754, %land.lhs.true882, %lor.lhs.false890
  %172 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings12211973 = getelementptr inbounds %struct.cop* %172, i64 0, i32 14
  %173 = load %struct.sv** %cop_warnings12211973, align 8, !tbaa !32
  %cmp12221974 = icmp eq %struct.sv* %173, null
  br i1 %cmp12221974, label %lor.lhs.false1201, label %land.lhs.true1185

if.end1179:                                       ; preds = %for.cond1074, %if.then1100, %if.then439, %if.then437, %if.end435, %if.end871, %if.then1160, %if.end1170, %if.end1069, %if.end735, %if.end172
  %was_fdopen.5 = phi i8 [ 0, %if.end172 ], [ %was_fdopen.2, %if.then439 ], [ %was_fdopen.2, %if.then437 ], [ %was_fdopen.2, %if.end435 ], [ %was_fdopen.4, %if.end735 ], [ 0, %if.end871 ], [ 0, %if.then1100 ], [ 0, %if.end1069 ], [ 0, %if.then1160 ], [ 0, %if.end1170 ], [ 0, %for.cond1074 ]
  %type.21 = phi i8* [ null, %if.end172 ], [ %type.5, %if.then439 ], [ %type.5, %if.then437 ], [ %type.5, %if.end435 ], [ %type.13, %if.end735 ], [ %type.16, %if.end871 ], [ %type.19, %if.then1100 ], [ %type.18, %if.end1069 ], [ %type.119651970, %if.then1160 ], [ null, %if.end1170 ], [ %type.19, %for.cond1074 ]
  %fp.4 = phi %struct._PerlIO** [ %call183, %if.end172 ], [ %fp.0, %if.then439 ], [ %fp.0, %if.then437 ], [ %fp.0, %if.end435 ], [ %fp.1, %if.end735 ], [ %fp.2, %if.end871 ], [ %fp.3, %if.then1100 ], [ %fp.3, %if.end1069 ], [ %call1161, %if.then1160 ], [ %call1173, %if.end1170 ], [ %fp.3, %for.cond1074 ]
  %svp.addr.8 = phi %struct.sv** [ %namesv, %if.end172 ], [ %svp.addr.2, %if.then439 ], [ %svp.addr.2, %if.then437 ], [ %svp.addr.2, %if.end435 ], [ %svp.addr.4, %if.end735 ], [ %svp.addr.6, %if.end871 ], [ %svp, %if.then1100 ], [ %svp, %if.end1069 ], [ %svp, %if.then1160 ], [ %namesv, %if.end1170 ], [ %svp, %for.cond1074 ]
  %name.addr.4 = phi i8* [ %name, %if.end172 ], [ %name.addr.1, %if.then439 ], [ %name.addr.1, %if.then437 ], [ %name.addr.1, %if.end435 ], [ %name.addr.0, %if.end735 ], [ %name.addr.0, %if.end871 ], [ %name.addr.2, %if.then1100 ], [ %name.addr.2, %if.end1069 ], [ %name.addr.3, %if.then1160 ], [ %name.addr.3, %if.end1170 ], [ %name.addr.2, %for.cond1074 ]
  %tobool1180 = icmp eq %struct._PerlIO** %fp.4, null
  %174 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings1221 = getelementptr inbounds %struct.cop* %174, i64 0, i32 14
  %175 = load %struct.sv** %cop_warnings1221, align 8, !tbaa !32
  %cmp1222 = icmp ne %struct.sv* %175, null
  br i1 %tobool1180, label %if.then1181, label %if.end1220

if.then1181:                                      ; preds = %if.end1179
  br i1 %cmp1222, label %land.lhs.true1185, label %lor.lhs.false1201

land.lhs.true1185:                                ; preds = %if.end1179.thread, %if.then1181
  %name.addr.419761980 = phi i8* [ %name.addr.0, %if.end1179.thread ], [ %name.addr.4, %if.then1181 ]
  %176 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings1186 = getelementptr inbounds %struct.cop* %176, i64 0, i32 14
  %177 = load %struct.sv** %cop_warnings1186, align 8, !tbaa !32
  %cmp1187 = icmp eq %struct.sv* %177, inttoptr (i64 48 to %struct.sv*)
  br i1 %cmp1187, label %lor.lhs.false1201, label %land.lhs.true1189

land.lhs.true1189:                                ; preds = %land.lhs.true1185
  %178 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings1190 = getelementptr inbounds %struct.cop* %178, i64 0, i32 14
  %179 = load %struct.sv** %cop_warnings1190, align 8, !tbaa !32
  %cmp1191 = icmp eq %struct.sv* %179, inttoptr (i64 24 to %struct.sv*)
  br i1 %cmp1191, label %land.lhs.true1209, label %lor.lhs.false1193

lor.lhs.false1193:                                ; preds = %land.lhs.true1189
  %180 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings1194 = getelementptr inbounds %struct.cop* %180, i64 0, i32 14
  %181 = load %struct.sv** %cop_warnings1194, align 8, !tbaa !32
  %sv_any1195 = getelementptr inbounds %struct.sv* %181, i64 0, i32 0
  %182 = load i8** %sv_any1195, align 8, !tbaa !34
  %xpv_pv1196 = bitcast i8* %182 to i8**
  %183 = load i8** %xpv_pv1196, align 8, !tbaa !35
  %arrayidx1197 = getelementptr inbounds i8* %183, i64 2
  %184 = load i8* %arrayidx1197, align 1, !tbaa !31
  %and1199 = and i8 %184, 4
  %tobool1200 = icmp eq i8 %and1199, 0
  br i1 %tobool1200, label %lor.lhs.false1201, label %land.lhs.true1209

lor.lhs.false1201:                                ; preds = %if.end1179.thread, %lor.lhs.false1193, %land.lhs.true1185, %if.then1181
  %name.addr.419761979 = phi i8* [ %name.addr.0, %if.end1179.thread ], [ %name.addr.419761980, %lor.lhs.false1193 ], [ %name.addr.419761980, %land.lhs.true1185 ], [ %name.addr.4, %if.then1181 ]
  %185 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings1202 = getelementptr inbounds %struct.cop* %185, i64 0, i32 14
  %186 = load %struct.sv** %cop_warnings1202, align 8, !tbaa !32
  %cmp1203 = icmp eq %struct.sv* %186, null
  br i1 %cmp1203, label %land.lhs.true1205, label %say_false

land.lhs.true1205:                                ; preds = %lor.lhs.false1201
  %187 = load i8* @PL_dowarn, align 1, !tbaa !31
  %and1207 = and i8 %187, 1
  %tobool1208 = icmp eq i8 %and1207, 0
  br i1 %tobool1208, label %say_false, label %land.lhs.true1209

land.lhs.true1209:                                ; preds = %lor.lhs.false1193, %land.lhs.true1205, %land.lhs.true1189
  %name.addr.419761978 = phi i8* [ %name.addr.419761980, %lor.lhs.false1193 ], [ %name.addr.419761979, %land.lhs.true1205 ], [ %name.addr.419761980, %land.lhs.true1189 ]
  %188 = load %struct.xpvio** %sv_any30, align 8, !tbaa !21
  %xio_type1211 = getelementptr inbounds %struct.xpvio* %188, i64 0, i32 21
  %189 = load i8* %xio_type1211, align 1, !tbaa !25
  %cmp1213 = icmp eq i8 %189, 60
  br i1 %cmp1213, label %land.lhs.true1215, label %say_false

land.lhs.true1215:                                ; preds = %land.lhs.true1209
  %call1216 = call i8* @strchr(i8* %name.addr.419761978, i32 10) #2
  %tobool1217 = icmp eq i8* %call1216, null
  br i1 %tobool1217, label %say_false, label %if.then1218

if.then1218:                                      ; preds = %land.lhs.true1215
  call void (i64, i8*, ...)* @Perl_warner(i64 9, i8* getelementptr inbounds ([0 x i8]* @PL_warn_nl, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str4, i64 0, i64 0)) #2
  br label %say_false

if.end1220:                                       ; preds = %if.end1179
  br i1 %cmp1222, label %land.lhs.true1224, label %lor.lhs.false1240

land.lhs.true1224:                                ; preds = %if.end1220
  %190 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings1225 = getelementptr inbounds %struct.cop* %190, i64 0, i32 14
  %191 = load %struct.sv** %cop_warnings1225, align 8, !tbaa !32
  %cmp1226 = icmp eq %struct.sv* %191, inttoptr (i64 48 to %struct.sv*)
  br i1 %cmp1226, label %lor.lhs.false1240, label %land.lhs.true1228

land.lhs.true1228:                                ; preds = %land.lhs.true1224
  %192 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings1229 = getelementptr inbounds %struct.cop* %192, i64 0, i32 14
  %193 = load %struct.sv** %cop_warnings1229, align 8, !tbaa !32
  %cmp1230 = icmp eq %struct.sv* %193, inttoptr (i64 24 to %struct.sv*)
  br i1 %cmp1230, label %if.then1248, label %lor.lhs.false1232

lor.lhs.false1232:                                ; preds = %land.lhs.true1228
  %194 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings1233 = getelementptr inbounds %struct.cop* %194, i64 0, i32 14
  %195 = load %struct.sv** %cop_warnings1233, align 8, !tbaa !32
  %sv_any1234 = getelementptr inbounds %struct.sv* %195, i64 0, i32 0
  %196 = load i8** %sv_any1234, align 8, !tbaa !34
  %xpv_pv1235 = bitcast i8* %196 to i8**
  %197 = load i8** %xpv_pv1235, align 8, !tbaa !35
  %arrayidx1236 = getelementptr inbounds i8* %197, i64 1
  %198 = load i8* %arrayidx1236, align 1, !tbaa !31
  %and1238 = and i8 %198, 4
  %tobool1239 = icmp eq i8 %and1238, 0
  br i1 %tobool1239, label %lor.lhs.false1240, label %if.then1248

lor.lhs.false1240:                                ; preds = %lor.lhs.false1232, %land.lhs.true1224, %if.end1220
  %199 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings1241 = getelementptr inbounds %struct.cop* %199, i64 0, i32 14
  %200 = load %struct.sv** %cop_warnings1241, align 8, !tbaa !32
  %cmp1242 = icmp eq %struct.sv* %200, null
  br i1 %cmp1242, label %land.lhs.true1244, label %if.end1306

land.lhs.true1244:                                ; preds = %lor.lhs.false1240
  %201 = load i8* @PL_dowarn, align 1, !tbaa !31
  %and1246 = and i8 %201, 1
  %tobool1247 = icmp eq i8 %and1246, 0
  br i1 %tobool1247, label %if.end1306, label %if.then1248

if.then1248:                                      ; preds = %lor.lhs.false1232, %land.lhs.true1244, %land.lhs.true1228
  %202 = load %struct.xpvio** %sv_any30, align 8, !tbaa !21
  %xio_type1250 = getelementptr inbounds %struct.xpvio* %202, i64 0, i32 21
  %203 = load i8* %xio_type1250, align 1, !tbaa !25
  %cmp1252 = icmp eq i8 %203, 60
  br i1 %cmp1252, label %land.lhs.true1254, label %if.else1280

land.lhs.true1254:                                ; preds = %if.then1248
  %call1255 = call %struct._PerlIO** @Perl_PerlIO_stdout() #2
  %cmp1256 = icmp eq %struct._PerlIO** %fp.4, %call1255
  br i1 %cmp1256, label %if.then1262, label %lor.lhs.false1258

lor.lhs.false1258:                                ; preds = %land.lhs.true1254
  %call1259 = call %struct._PerlIO** @Perl_PerlIO_stderr() #2
  %cmp1260 = icmp eq %struct._PerlIO** %fp.4, %call1259
  br i1 %cmp1260, label %if.then1262, label %lor.lhs.false1258.if.else1280_crit_edge

lor.lhs.false1258.if.else1280_crit_edge:          ; preds = %lor.lhs.false1258
  %.pre1963 = load %struct.xpvio** %sv_any30, align 8, !tbaa !21
  %xio_type1282.phi.trans.insert = getelementptr inbounds %struct.xpvio* %.pre1963, i64 0, i32 21
  %.pre1964 = load i8* %xio_type1282.phi.trans.insert, align 1, !tbaa !25
  br label %if.else1280

if.then1262:                                      ; preds = %lor.lhs.false1258, %land.lhs.true1254
  %call1263 = call %struct._PerlIO** @Perl_PerlIO_stdout() #2
  %cmp1264 = icmp eq %struct._PerlIO** %fp.4, %call1263
  %cond1266 = select i1 %cmp1264, i8* getelementptr inbounds ([4 x i8]* @.str15, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8]* @.str16, i64 0, i64 0)
  %sv_any1267 = getelementptr inbounds %struct.gv* %gv, i64 0, i32 0
  %204 = load %struct.xpvgv** %sv_any1267, align 8, !tbaa !7
  %xgv_gp1268 = getelementptr inbounds %struct.xpvgv* %204, i64 0, i32 7
  %205 = load %struct.gp** %xgv_gp1268, align 8, !tbaa !9
  %gp_egv1269 = getelementptr inbounds %struct.gp* %205, i64 0, i32 6
  %206 = load %struct.gv** %gp_egv1269, align 8, !tbaa !29
  %tobool1270 = icmp eq %struct.gv* %206, null
  %gv.1909 = select i1 %tobool1270, %struct.gv* %gv, %struct.gv* %206
  %sv_any1278 = getelementptr inbounds %struct.gv* %gv.1909, i64 0, i32 0
  %207 = load %struct.xpvgv** %sv_any1278, align 8, !tbaa !7
  %xgv_name1279 = getelementptr inbounds %struct.xpvgv* %207, i64 0, i32 8
  %208 = load i8** %xgv_name1279, align 8, !tbaa !30
  call void (i64, i8*, ...)* @Perl_warner(i64 5, i8* getelementptr inbounds ([47 x i8]* @.str14, i64 0, i64 0), i8* %cond1266, i8* %208) #2
  br label %if.end1306

if.else1280:                                      ; preds = %lor.lhs.false1258.if.else1280_crit_edge, %if.then1248
  %209 = phi i8 [ %.pre1964, %lor.lhs.false1258.if.else1280_crit_edge ], [ %203, %if.then1248 ]
  %cmp1284 = icmp eq i8 %209, 62
  br i1 %cmp1284, label %land.lhs.true1286, label %if.end1306

land.lhs.true1286:                                ; preds = %if.else1280
  %call1287 = call %struct._PerlIO** @Perl_PerlIO_stdin() #2
  %cmp1288 = icmp eq %struct._PerlIO** %fp.4, %call1287
  br i1 %cmp1288, label %if.then1290, label %if.end1306

if.then1290:                                      ; preds = %land.lhs.true1286
  %sv_any1291 = getelementptr inbounds %struct.gv* %gv, i64 0, i32 0
  %210 = load %struct.xpvgv** %sv_any1291, align 8, !tbaa !7
  %xgv_gp1292 = getelementptr inbounds %struct.xpvgv* %210, i64 0, i32 7
  %211 = load %struct.gp** %xgv_gp1292, align 8, !tbaa !9
  %gp_egv1293 = getelementptr inbounds %struct.gp* %211, i64 0, i32 6
  %212 = load %struct.gv** %gp_egv1293, align 8, !tbaa !29
  %tobool1294 = icmp eq %struct.gv* %212, null
  %gv.1910 = select i1 %tobool1294, %struct.gv* %gv, %struct.gv* %212
  %sv_any1302 = getelementptr inbounds %struct.gv* %gv.1910, i64 0, i32 0
  %213 = load %struct.xpvgv** %sv_any1302, align 8, !tbaa !7
  %xgv_name1303 = getelementptr inbounds %struct.xpvgv* %213, i64 0, i32 8
  %214 = load i8** %xgv_name1303, align 8, !tbaa !30
  call void (i64, i8*, ...)* @Perl_warner(i64 5, i8* getelementptr inbounds ([48 x i8]* @.str17, i64 0, i64 0), i8* %214) #2
  br label %if.end1306

if.end1306:                                       ; preds = %land.lhs.true1244, %if.then1262, %if.then1290, %land.lhs.true1286, %if.else1280, %lor.lhs.false1240
  %call1307 = call i32 @Perl_PerlIO_fileno(%struct._PerlIO** %fp.4) #2
  %215 = load %struct.xpvio** %sv_any30, align 8, !tbaa !21
  %xio_type1309 = getelementptr inbounds %struct.xpvio* %215, i64 0, i32 21
  %216 = load i8* %xio_type1309, align 1, !tbaa !25
  switch i8 %216, label %land.lhs.true1318 [
    i8 0, label %if.end1341
    i8 124, label %if.end1341
  ]

land.lhs.true1318:                                ; preds = %if.end1306
  %cmp1322 = icmp ne i8 %216, 45
  %cmp1325 = icmp sgt i32 %call1307, -1
  %or.cond1502 = and i1 %cmp1322, %cmp1325
  br i1 %or.cond1502, label %if.then1327, label %if.end1341

if.then1327:                                      ; preds = %land.lhs.true1318
  %call1328 = call i32 @fstat(i32 %call1307, %struct.stat* @PL_statbuf) #2
  %cmp1329 = icmp slt i32 %call1328, 0
  br i1 %cmp1329, label %if.then1331, label %if.end1333

if.then1331:                                      ; preds = %if.then1327
  %call1332 = call i32 @Perl_PerlIO_close(%struct._PerlIO** %fp.4) #2
  br label %say_false

if.end1333:                                       ; preds = %if.then1327
  %217 = load i32* getelementptr inbounds (%struct.stat* @PL_statbuf, i64 0, i32 3), align 8, !tbaa !39
  %and1334 = and i32 %217, 61440
  %cmp1335 = icmp eq i32 %and1334, 49152
  br i1 %cmp1335, label %if.then1337, label %if.end1341

if.then1337:                                      ; preds = %if.end1333
  %218 = load %struct.xpvio** %sv_any30, align 8, !tbaa !21
  %xio_type1339 = getelementptr inbounds %struct.xpvio* %218, i64 0, i32 21
  store i8 115, i8* %xio_type1339, align 1, !tbaa !25
  br label %if.end1341

if.end1341:                                       ; preds = %if.end1306, %if.end1306, %if.end1333, %if.then1337, %land.lhs.true1318
  %tobool1342 = icmp eq %struct._PerlIO** %saveifp.1, null
  br i1 %tobool1342, label %if.end1404, label %if.then1343

if.then1343:                                      ; preds = %if.end1341
  %tobool1344 = icmp eq %struct._PerlIO** %saveofp.1, null
  br i1 %tobool1344, label %if.end1352, label %if.then1345

if.then1345:                                      ; preds = %if.then1343
  %call1346 = call i32 @Perl_PerlIO_flush(%struct._PerlIO** %saveofp.1) #2
  %cmp1347 = icmp eq %struct._PerlIO** %saveofp.1, %saveifp.1
  br i1 %cmp1347, label %if.end1352, label %if.then1349

if.then1349:                                      ; preds = %if.then1345
  %call1350 = call i32 @Perl_PerlIO_close(%struct._PerlIO** %saveofp.1) #2
  br label %if.end1352

if.end1352:                                       ; preds = %if.then1345, %if.then1343, %if.then1349
  %cmp1353 = icmp eq i32 %savefd.1, %call1307
  br i1 %cmp1353, label %if.end1402, label %if.then1355

if.then1355:                                      ; preds = %if.end1352
  %call1356 = call i32 @dup2(i32 %call1307, i32 %savefd.1) #2
  %cmp1357 = icmp slt i32 %call1356, 0
  br i1 %cmp1357, label %if.then1359, label %if.end1361

if.then1359:                                      ; preds = %if.then1355
  %call1360 = call i32 @Perl_PerlIO_close(%struct._PerlIO** %fp.4) #2
  br label %say_false

if.end1361:                                       ; preds = %if.then1355
  %219 = load %struct.av** @PL_fdpid, align 8, !tbaa !16
  %conv1362 = sext i32 %call1307 to i64
  %call1363 = call %struct.sv** @Perl_av_fetch(%struct.av* %219, i64 %conv1362, i64 1) #2
  %220 = load %struct.sv** %call1363, align 8, !tbaa !16
  %sv_flags1364 = getelementptr inbounds %struct.sv* %220, i64 0, i32 2
  %221 = load i64* %sv_flags1364, align 8, !tbaa !1
  %and1365 = and i64 %221, 255
  %cmp1366 = icmp eq i64 %and1365, 0
  br i1 %cmp1366, label %lor.rhs1368, label %lor.end1372

lor.rhs1368:                                      ; preds = %if.end1361
  %call1369 = call signext i8 @Perl_sv_upgrade(%struct.sv* %220, i64 1) #2
  br label %lor.end1372

lor.end1372:                                      ; preds = %if.end1361, %lor.rhs1368
  %sv_any1373 = getelementptr inbounds %struct.sv* %220, i64 0, i32 0
  %222 = load i8** %sv_any1373, align 8, !tbaa !34
  %xiv_iv = getelementptr inbounds i8* %222, i64 24
  %223 = bitcast i8* %xiv_iv to i64*
  %224 = load i64* %223, align 8, !tbaa !42
  store i64 0, i64* %223, align 8, !tbaa !42
  %225 = load %struct.av** @PL_fdpid, align 8, !tbaa !16
  %conv1377 = sext i32 %savefd.1 to i64
  %call1378 = call %struct.sv** @Perl_av_fetch(%struct.av* %225, i64 %conv1377, i64 1) #2
  %226 = load %struct.sv** %call1378, align 8, !tbaa !16
  %sv_flags1379 = getelementptr inbounds %struct.sv* %226, i64 0, i32 2
  %227 = load i64* %sv_flags1379, align 8, !tbaa !1
  %and1380 = and i64 %227, 255
  %cmp1381 = icmp eq i64 %and1380, 0
  br i1 %cmp1381, label %lor.rhs1383, label %lor.end1387

lor.rhs1383:                                      ; preds = %lor.end1372
  %call1384 = call signext i8 @Perl_sv_upgrade(%struct.sv* %226, i64 1) #2
  br label %lor.end1387

lor.end1387:                                      ; preds = %lor.end1372, %lor.rhs1383
  %sext = shl i64 %224, 32
  %conv1389 = ashr exact i64 %sext, 32
  %sv_any1390 = getelementptr inbounds %struct.sv* %226, i64 0, i32 0
  %228 = load i8** %sv_any1390, align 8, !tbaa !34
  %xiv_iv1391 = getelementptr inbounds i8* %228, i64 24
  %229 = bitcast i8* %xiv_iv1391 to i64*
  store i64 %conv1389, i64* %229, align 8, !tbaa !42
  %tobool1392 = icmp eq i8 %was_fdopen.5, 0
  br i1 %tobool1392, label %if.else1399, label %if.then1393

if.then1393:                                      ; preds = %lor.end1387
  %call1394 = call i32 @Perl_PerlIO_fileno(%struct._PerlIO** %fp.4) #2
  %call1395 = call i32 @dup(i32 %call1394) #2
  %call1396 = call i32 @Perl_PerlIO_close(%struct._PerlIO** %fp.4) #2
  %call1397 = call i32 @dup2(i32 %call1395, i32 %call1394) #2
  %call1398 = call i32 @close(i32 %call1395) #2
  br label %if.end1402

if.else1399:                                      ; preds = %lor.end1387
  %call1400 = call i32 @Perl_PerlIO_close(%struct._PerlIO** %fp.4) #2
  br label %if.end1402

if.end1402:                                       ; preds = %if.end1352, %if.then1393, %if.else1399
  call void @Perl_PerlIO_clearerr(%struct._PerlIO** %saveifp.1) #2
  %call1403 = call i32 @Perl_PerlIO_fileno(%struct._PerlIO** %saveifp.1) #2
  br label %if.end1404

if.end1404:                                       ; preds = %if.end1341, %if.end1402
  %fd.2 = phi i32 [ %call1403, %if.end1402 ], [ %call1307, %if.end1341 ]
  %fp.5 = phi %struct._PerlIO** [ %saveifp.1, %if.end1402 ], [ %fp.4, %if.end1341 ]
  %230 = load %struct.xpvio** %sv_any30, align 8, !tbaa !21
  %xio_ifp1406 = getelementptr inbounds %struct.xpvio* %230, i64 0, i32 7
  store %struct._PerlIO** %fp.5, %struct._PerlIO*** %xio_ifp1406, align 8, !tbaa !23
  %xio_flags = getelementptr inbounds %struct.xpvio* %230, i64 0, i32 22
  %231 = load i8* %xio_flags, align 1, !tbaa !44
  %and1409 = and i8 %231, -33
  store i8 %and1409, i8* %xio_flags, align 1, !tbaa !44
  %232 = load i32* %writing, align 4, !tbaa !14
  %tobool1411 = icmp eq i32 %232, 0
  br i1 %tobool1411, label %return, label %if.then1412

if.then1412:                                      ; preds = %if.end1404
  %xio_type1414 = getelementptr inbounds %struct.xpvio* %230, i64 0, i32 21
  %233 = load i8* %xio_type1414, align 1, !tbaa !25
  %cmp1416 = icmp eq i8 %233, 115
  br i1 %cmp1416, label %if.then1431, label %lor.lhs.false1418

lor.lhs.false1418:                                ; preds = %if.then1412
  %cmp1422 = icmp eq i8 %233, 62
  %cmp1425 = icmp sgt i32 %fd.2, -1
  %or.cond1504 = and i1 %cmp1422, %cmp1425
  br i1 %or.cond1504, label %land.lhs.true1427, label %if.else1452

land.lhs.true1427:                                ; preds = %lor.lhs.false1418
  %234 = load i32* getelementptr inbounds (%struct.stat* @PL_statbuf, i64 0, i32 3), align 8, !tbaa !39
  %and1428 = and i32 %234, 61440
  %cmp1429 = icmp eq i32 %and1428, 8192
  br i1 %cmp1429, label %if.then1431, label %if.else1452

if.then1431:                                      ; preds = %land.lhs.true1427, %if.then1412
  %235 = load i8* %arraydecay, align 8, !tbaa !31
  switch i8 %235, label %if.end1442 [
    i8 73, label %if.then1440
    i8 35, label %if.then1440
  ]

if.then1440:                                      ; preds = %if.then1431, %if.then1431
  %incdec.ptr1441 = getelementptr inbounds i8* %arraydecay, i64 1
  br label %if.end1442

if.end1442:                                       ; preds = %if.then1431, %if.then1440
  %s.0 = phi i8* [ %incdec.ptr1441, %if.then1440 ], [ %arraydecay, %if.then1431 ]
  store i8 119, i8* %s.0, align 1, !tbaa !31
  %call1443 = call %struct._PerlIO** @PerlIO_openn(i8* %type.21, i8* %s.0, i32 %fd.2, i32 0, i32 0, %struct._PerlIO** null, i32 0, %struct.sv** %svp.addr.8) #2
  %236 = load %struct.xpvio** %sv_any30, align 8, !tbaa !21
  %xio_ofp1445 = getelementptr inbounds %struct.xpvio* %236, i64 0, i32 8
  store %struct._PerlIO** %call1443, %struct._PerlIO*** %xio_ofp1445, align 8, !tbaa !27
  %tobool1446 = icmp eq %struct._PerlIO** %call1443, null
  br i1 %tobool1446, label %if.then1447, label %return

if.then1447:                                      ; preds = %if.end1442
  %call1448 = call i32 @Perl_PerlIO_close(%struct._PerlIO** %fp.5) #2
  %237 = load %struct.xpvio** %sv_any30, align 8, !tbaa !21
  %xio_ifp1450 = getelementptr inbounds %struct.xpvio* %237, i64 0, i32 7
  store %struct._PerlIO** null, %struct._PerlIO*** %xio_ifp1450, align 8, !tbaa !23
  br label %say_false

if.else1452:                                      ; preds = %land.lhs.true1427, %lor.lhs.false1418
  %xio_ofp1454 = getelementptr inbounds %struct.xpvio* %230, i64 0, i32 8
  store %struct._PerlIO** %fp.5, %struct._PerlIO*** %xio_ofp1454, align 8, !tbaa !27
  br label %return

say_false:                                        ; preds = %if.then1100, %if.then439, %land.lhs.true1215, %land.lhs.true1205, %lor.lhs.false1201, %land.lhs.true1209, %if.then1218, %if.then1447, %if.then1359, %if.then1331, %if.end1027, %if.then587, %if.end355
  %238 = load %struct.xpvio** %sv_any30, align 8, !tbaa !21
  %xio_ifp1458 = getelementptr inbounds %struct.xpvio* %238, i64 0, i32 7
  store %struct._PerlIO** %saveifp.1, %struct._PerlIO*** %xio_ifp1458, align 8, !tbaa !23
  %xio_ofp1460 = getelementptr inbounds %struct.xpvio* %238, i64 0, i32 8
  store %struct._PerlIO** %saveofp.1, %struct._PerlIO*** %xio_ofp1460, align 8, !tbaa !27
  %xio_type1462 = getelementptr inbounds %struct.xpvio* %238, i64 0, i32 21
  store i8 %savetype.1, i8* %xio_type1462, align 1, !tbaa !25
  br label %return

return:                                           ; preds = %if.else1452, %if.end1404, %if.end1442, %say_false
  %retval.0 = phi i8 [ 0, %say_false ], [ 1, %if.end1442 ], [ 1, %if.end1404 ], [ 1, %if.else1452 ]
  ret i8 %retval.0
}

; Function Attrs: nounwind uwtable
define signext i8 @Perl_do_open9(%struct.gv* %gv, i8* %name, i64 %len, i32 %as_raw, i32 %rawmode, i32 %rawperm, %struct._PerlIO** %supplied_fp, %struct.sv* %svs, i64 %num_svs) #0 {
entry:
  %svs.addr = alloca %struct.sv*, align 8
  store %struct.sv* %svs, %struct.sv** %svs.addr, align 8, !tbaa !16
  %call = call signext i8 @Perl_do_openn(%struct.gv* %gv, i8* %name, i64 %len, i32 %as_raw, i32 %rawmode, i32 %rawperm, %struct._PerlIO** %supplied_fp, %struct.sv** %svs.addr, i64 1)
  ret i8 %call
}

declare %struct.gv* @Perl_gv_IOadd(%struct.gv*) #1

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #2

declare i32 @Perl_PerlIO_fileno(%struct._PerlIO**) #1

declare i64 @Perl_my_pclose(%struct._PerlIO**) #1

declare i32 @Perl_PerlIO_close(%struct._PerlIO**) #1

declare i32 @PerlIO_printf(%struct._PerlIO**, i8*, ...) #1

declare %struct._PerlIO** @Perl_PerlIO_stderr() #1

declare void @Perl_croak(i8*, ...) #1

declare void @Perl_taint_proper(i8*, i8*) #1

declare i32 @PerlIO_intmode2str(i32, i8*, i32*) #1

declare %struct.sv* @Perl_sv_2mortal(%struct.sv*) #1

declare %struct.sv* @Perl_newSVpvn(i8*, i64) #1

; Function Attrs: nounwind readonly
declare i64 @strlen(i8* nocapture) #3

declare %struct._PerlIO** @PerlIO_openn(i8*, i8*, i32, i32, i32, %struct._PerlIO**, i32, %struct.sv**) #1

declare i8* @Perl_savepvn(i8*, i64) #1

declare void @Perl_save_freepv(i8*) #1

declare i8* @Perl_savesvpv(%struct.sv*) #1

declare void @Perl_warner(i64, i8*, ...) #1

declare i32* @__errno_location() #1

declare void @Perl_taint_env() #1

declare %struct._PerlIO** @Perl_my_popen_list(i8*, i32, %struct.sv**) #1

declare %struct._PerlIO** @Perl_my_popen(i8*, i8*) #1

declare i32 @PerlIO_apply_layers(%struct._PerlIO**, i8*, i8*) #1

declare i64 @Perl_looks_like_number(%struct.sv*) #1

declare i64 @Perl_sv_2uv(%struct.sv*) #1

; Function Attrs: nounwind readonly
declare i32 @atoi(i8* nocapture) #3

declare %struct.io* @Perl_sv_2io(%struct.sv*) #1

declare %struct.gv* @Perl_gv_fetchpv(i8*, i64, i64) #1

declare i32 @Perl_PerlIO_flush(%struct._PerlIO**) #1

declare %struct._PerlIO** @Perl_PerlIO_stdout() #1

declare %struct._PerlIO** @Perl_PerlIO_stdin() #1

declare %struct._PerlIO** @PerlIO_fdupopen(%struct._PerlIO**, %struct.clone_params*, i32) #1

declare i32 @dup(i32) #1

declare i32 @close(i32) #1

; Function Attrs: nounwind readonly
declare i8* @strchr(i8*, i32) #3

; Function Attrs: nounwind
declare i32 @fstat(i32, %struct.stat* nocapture) #4

declare i32 @dup2(i32, i32) #1

declare %struct.sv** @Perl_av_fetch(%struct.av*, i64, i64) #1

declare signext i8 @Perl_sv_upgrade(%struct.sv*, i64) #1

declare void @Perl_PerlIO_clearerr(%struct._PerlIO**) #1

; Function Attrs: nounwind uwtable
define %struct._PerlIO** @Perl_nextargv(%struct.gv* %gv) #0 {
entry:
  %oldlen = alloca i64, align 8
  %sv_any = getelementptr inbounds %struct.gv* %gv, i64 0, i32 0
  %0 = load %struct.xpvgv** %sv_any, align 8, !tbaa !7
  %xgv_gp = getelementptr inbounds %struct.xpvgv* %0, i64 0, i32 7
  %1 = load %struct.gp** %xgv_gp, align 8, !tbaa !9
  %gp_io = getelementptr inbounds %struct.gp* %1, i64 0, i32 2
  %2 = load %struct.io** %gp_io, align 8, !tbaa !12
  %3 = load %struct.gv** @PL_argvoutgv, align 8, !tbaa !16
  %tobool = icmp eq %struct.gv* %3, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = call %struct.gv* @Perl_gv_fetchpv(i8* getelementptr inbounds ([8 x i8]* @.str18, i64 0, i64 0), i64 1, i64 15) #2
  store %struct.gv* %call, %struct.gv** @PL_argvoutgv, align 8, !tbaa !16
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %tobool1 = icmp ne %struct.io* %2, null
  br i1 %tobool1, label %land.lhs.true, label %if.end25

land.lhs.true:                                    ; preds = %if.end
  %sv_any2 = getelementptr inbounds %struct.io* %2, i64 0, i32 0
  %4 = load %struct.xpvio** %sv_any2, align 8, !tbaa !21
  %xio_flags = getelementptr inbounds %struct.xpvio* %4, i64 0, i32 22
  %5 = load i8* %xio_flags, align 1, !tbaa !44
  %6 = and i8 %5, 3
  %7 = icmp eq i8 %6, 3
  br i1 %7, label %if.then10, label %if.end25

if.then10:                                        ; preds = %land.lhs.true
  %and14 = and i8 %5, -3
  store i8 %and14, i8* %xio_flags, align 1, !tbaa !44
  %8 = load i8** @PL_inplace, align 8, !tbaa !16
  %tobool16 = icmp eq i8* %8, null
  br i1 %tobool16, label %if.end25, label %if.then17

if.then17:                                        ; preds = %if.then10
  %9 = load %struct.av** @PL_argvout_stack, align 8, !tbaa !16
  %tobool18 = icmp eq %struct.av* %9, null
  br i1 %tobool18, label %if.then19, label %if.end21

if.then19:                                        ; preds = %if.then17
  %call20 = call %struct.av* @Perl_newAV() #2
  store %struct.av* %call20, %struct.av** @PL_argvout_stack, align 8, !tbaa !16
  br label %if.end21

if.end21:                                         ; preds = %if.then17, %if.then19
  %10 = phi %struct.av* [ %9, %if.then17 ], [ %call20, %if.then19 ]
  %11 = load %struct.gv** @PL_defoutgv, align 8, !tbaa !16
  %12 = bitcast %struct.gv* %11 to %struct.sv*
  store %struct.sv* %12, %struct.sv** @PL_Sv, align 8, !tbaa !16
  %tobool22 = icmp eq %struct.gv* %11, null
  br i1 %tobool22, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %if.end21
  %13 = getelementptr inbounds %struct.gv* %11, i64 0, i32 1
  %14 = load i64* %13, align 8, !tbaa !45
  %inc = add i64 %14, 1
  store i64 %inc, i64* %13, align 8, !tbaa !45
  br label %land.end

land.end:                                         ; preds = %if.end21, %land.rhs
  call void @Perl_av_push(%struct.av* %10, %struct.sv* %12) #2
  br label %if.end25

if.end25:                                         ; preds = %land.lhs.true, %if.then10, %land.end, %if.end
  %15 = load i32* @PL_filemode, align 4, !tbaa !14
  %and26 = and i32 %15, 3072
  %tobool27 = icmp eq i32 %and26, 0
  br i1 %tobool27, label %if.end53, label %if.then28

if.then28:                                        ; preds = %if.end25
  %16 = load %struct.gv** @PL_argvoutgv, align 8, !tbaa !16
  %tobool29 = icmp eq %struct.gv* %16, null
  br i1 %tobool29, label %cond.false45, label %land.lhs.true30

land.lhs.true30:                                  ; preds = %if.then28
  %17 = getelementptr inbounds %struct.gv* %16, i64 0, i32 2
  %18 = load i64* %17, align 8, !tbaa !1
  %and31 = and i64 %18, 255
  %cmp = icmp eq i64 %and31, 13
  br i1 %cmp, label %land.lhs.true33, label %cond.false45

land.lhs.true33:                                  ; preds = %land.lhs.true30
  %sv_any34 = getelementptr inbounds %struct.gv* %16, i64 0, i32 0
  %19 = load %struct.xpvgv** %sv_any34, align 8, !tbaa !7
  %xgv_gp35 = getelementptr inbounds %struct.xpvgv* %19, i64 0, i32 7
  %20 = load %struct.gp** %xgv_gp35, align 8, !tbaa !9
  %tobool36 = icmp eq %struct.gp* %20, null
  br i1 %tobool36, label %cond.false45, label %cond.true

cond.true:                                        ; preds = %land.lhs.true33
  %gp_io39 = getelementptr inbounds %struct.gp* %20, i64 0, i32 2
  %21 = load %struct.io** %gp_io39, align 8, !tbaa !12
  %tobool40 = icmp eq %struct.io* %21, null
  br i1 %tobool40, label %cond.false45, label %cond.end

cond.false45:                                     ; preds = %cond.true, %land.lhs.true33, %if.then28, %land.lhs.true30
  %call46 = call %struct.gv* @Perl_gv_IOadd(%struct.gv* %16) #2
  %sv_any47 = getelementptr inbounds %struct.gv* %call46, i64 0, i32 0
  %22 = load %struct.xpvgv** %sv_any47, align 8, !tbaa !7
  %xgv_gp48 = getelementptr inbounds %struct.xpvgv* %22, i64 0, i32 7
  %23 = load %struct.gp** %xgv_gp48, align 8, !tbaa !9
  %gp_io49 = getelementptr inbounds %struct.gp* %23, i64 0, i32 2
  %24 = load %struct.io** %gp_io49, align 8, !tbaa !12
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %cond.false45
  %cond = phi %struct.io* [ %24, %cond.false45 ], [ %21, %cond.true ]
  %sv_any50 = getelementptr inbounds %struct.io* %cond, i64 0, i32 0
  %25 = load %struct.xpvio** %sv_any50, align 8, !tbaa !21
  %xio_ifp = getelementptr inbounds %struct.xpvio* %25, i64 0, i32 7
  %26 = load %struct._PerlIO*** %xio_ifp, align 8, !tbaa !23
  %call51 = call i32 @Perl_PerlIO_flush(%struct._PerlIO** %26) #2
  %27 = load i8** @PL_oldname, align 8, !tbaa !16
  %28 = load i32* @PL_filemode, align 4, !tbaa !14
  %call52 = call i32 @chmod(i8* %27, i32 %28) #2
  br label %if.end53

if.end53:                                         ; preds = %if.end25, %cond.end
  store i32 -1, i32* @PL_lastfd, align 4, !tbaa !14
  store i32 0, i32* @PL_filemode, align 4, !tbaa !14
  %29 = load %struct.xpvgv** %sv_any, align 8, !tbaa !7
  %xgv_gp55 = getelementptr inbounds %struct.xpvgv* %29, i64 0, i32 7
  %30 = load %struct.gp** %xgv_gp55, align 8, !tbaa !9
  %gp_av = getelementptr inbounds %struct.gp* %30, i64 0, i32 4
  %31 = load %struct.av** %gp_av, align 8, !tbaa !46
  %tobool56 = icmp eq %struct.av* %31, null
  br i1 %tobool56, label %return, label %while.cond.preheader

while.cond.preheader:                             ; preds = %if.end53
  %call62503 = call i64 @Perl_av_len(%struct.av* %31) #2
  %cmp63504 = icmp sgt i64 %call62503, -1
  br i1 %cmp63504, label %while.body.lr.ph, label %while.end

while.body.lr.ph:                                 ; preds = %while.cond.preheader
  %tobool.i427 = icmp eq %struct.gv* %gv, null
  br label %while.body

while.body:                                       ; preds = %while.body.lr.ph, %while.cond.backedge
  %32 = load %struct.xpvgv** %sv_any, align 8, !tbaa !7
  %xgv_gp66 = getelementptr inbounds %struct.xpvgv* %32, i64 0, i32 7
  %33 = load %struct.gp** %xgv_gp66, align 8, !tbaa !9
  %gp_av67 = getelementptr inbounds %struct.gp* %33, i64 0, i32 4
  %34 = load %struct.av** %gp_av67, align 8, !tbaa !46
  %call68 = call %struct.sv* @Perl_av_shift(%struct.av* %34) #2
  call void @Perl_save_freesv(%struct.sv* %call68) #2
  %35 = load %struct.xpvgv** %sv_any, align 8, !tbaa !7
  %xgv_gp70 = getelementptr inbounds %struct.xpvgv* %35, i64 0, i32 7
  %36 = load %struct.gp** %xgv_gp70, align 8, !tbaa !9
  %gp_sv = getelementptr inbounds %struct.gp* %36, i64 0, i32 0
  %37 = load %struct.sv** %gp_sv, align 8, !tbaa !47
  call void @Perl_sv_setsv_flags(%struct.sv* %37, %struct.sv* %call68, i64 2) #2
  %38 = load %struct.xpvgv** %sv_any, align 8, !tbaa !7
  %xgv_gp72 = getelementptr inbounds %struct.xpvgv* %38, i64 0, i32 7
  %39 = load %struct.gp** %xgv_gp72, align 8, !tbaa !9
  %gp_sv73 = getelementptr inbounds %struct.gp* %39, i64 0, i32 0
  %40 = load %struct.sv** %gp_sv73, align 8, !tbaa !47
  %sv_flags74 = getelementptr inbounds %struct.sv* %40, i64 0, i32 2
  %41 = load i64* %sv_flags74, align 8, !tbaa !1
  %and75 = and i64 %41, 16384
  %tobool76 = icmp eq i64 %and75, 0
  br i1 %tobool76, label %if.end82, label %if.then77

if.then77:                                        ; preds = %while.body
  %call81 = call i32 @Perl_mg_set(%struct.sv* %40) #2
  %.pre = load %struct.xpvgv** %sv_any, align 8, !tbaa !7
  %xgv_gp84.phi.trans.insert = getelementptr inbounds %struct.xpvgv* %.pre, i64 0, i32 7
  %.pre505 = load %struct.gp** %xgv_gp84.phi.trans.insert, align 8, !tbaa !9
  %gp_sv85.phi.trans.insert = getelementptr inbounds %struct.gp* %.pre505, i64 0, i32 0
  %.pre506 = load %struct.sv** %gp_sv85.phi.trans.insert, align 8, !tbaa !47
  %sv_flags86.phi.trans.insert = getelementptr inbounds %struct.sv* %.pre506, i64 0, i32 2
  %.pre507 = load i64* %sv_flags86.phi.trans.insert, align 8, !tbaa !1
  br label %if.end82

if.end82:                                         ; preds = %while.body, %if.then77
  %42 = phi i64 [ %41, %while.body ], [ %.pre507, %if.then77 ]
  %43 = phi %struct.sv* [ %40, %while.body ], [ %.pre506, %if.then77 ]
  store %struct.sv* %43, %struct.sv** @PL_Sv, align 8, !tbaa !16
  %and87 = and i64 %42, 262144
  %cmp88 = icmp eq i64 %and87, 0
  br i1 %cmp88, label %cond.false93, label %cond.true90

cond.true90:                                      ; preds = %if.end82
  %sv_any91 = getelementptr inbounds %struct.sv* %43, i64 0, i32 0
  %44 = load i8** %sv_any91, align 8, !tbaa !34
  %xpv_cur = getelementptr inbounds i8* %44, i64 8
  %45 = bitcast i8* %xpv_cur to i64*
  %46 = load i64* %45, align 8, !tbaa !48
  store i64 %46, i64* %oldlen, align 8, !tbaa !26
  %xpv_pv = bitcast i8* %44 to i8**
  %47 = load i8** %xpv_pv, align 8, !tbaa !35
  br label %cond.end95

cond.false93:                                     ; preds = %if.end82
  %call94 = call i8* @Perl_sv_2pv_flags(%struct.sv* %43, i64* %oldlen, i64 2) #2
  %.pre508 = load i64* %oldlen, align 8, !tbaa !26
  br label %cond.end95

cond.end95:                                       ; preds = %cond.false93, %cond.true90
  %48 = phi i64 [ %46, %cond.true90 ], [ %.pre508, %cond.false93 ]
  %cond96 = phi i8* [ %47, %cond.true90 ], [ %call94, %cond.false93 ]
  store i8* %cond96, i8** @PL_oldname, align 8, !tbaa !16
  %49 = load i8** @PL_inplace, align 8, !tbaa !16
  %cmp97 = icmp ne i8* %49, null
  %conv98 = zext i1 %cmp97 to i32
  %call.i = call signext i8 @Perl_do_openn(%struct.gv* %gv, i8* %cond96, i64 %48, i32 %conv98, i32 0, i32 0, %struct._PerlIO** null, %struct.sv** null, i64 0) #2
  %tobool100 = icmp eq i8 %call.i, 0
  br i1 %tobool100, label %if.else282, label %if.then101

if.then101:                                       ; preds = %cond.end95
  %50 = load i8** @PL_inplace, align 8, !tbaa !16
  %tobool102 = icmp eq i8* %50, null
  br i1 %tobool102, label %if.end276, label %if.then103

if.then103:                                       ; preds = %if.then101
  %51 = load i8* @PL_tainting, align 1, !tbaa !31
  %tobool104 = icmp eq i8 %51, 0
  br i1 %tobool104, label %if.end106, label %if.then105

if.then105:                                       ; preds = %if.then103
  call void @Perl_taint_proper(i8* null, i8* getelementptr inbounds ([13 x i8]* @.str19, i64 0, i64 0)) #2
  br label %if.end106

if.end106:                                        ; preds = %if.then103, %if.then105
  %52 = load i64* %oldlen, align 8, !tbaa !26
  %cmp107 = icmp eq i64 %52, 1
  br i1 %cmp107, label %land.lhs.true109, label %if.end121

land.lhs.true109:                                 ; preds = %if.end106
  %53 = load i8** @PL_oldname, align 8, !tbaa !16
  %54 = load i8* %53, align 1, !tbaa !31
  %cmp111 = icmp eq i8 %54, 45
  br i1 %cmp111, label %if.then113, label %if.end121

if.then113:                                       ; preds = %land.lhs.true109
  %call114 = call %struct.gv* @Perl_gv_fetchpv(i8* getelementptr inbounds ([7 x i8]* @.str20, i64 0, i64 0), i64 1, i64 15) #2
  %call115 = call i32 (%struct.gv*, ...)* bitcast (i32 (...)* @setdefout to i32 (%struct.gv*, ...)*)(%struct.gv* %call114) #2
  %55 = load %struct.xpvgv** %sv_any, align 8, !tbaa !7
  %xgv_gp117 = getelementptr inbounds %struct.xpvgv* %55, i64 0, i32 7
  %56 = load %struct.gp** %xgv_gp117, align 8, !tbaa !9
  %gp_io118 = getelementptr inbounds %struct.gp* %56, i64 0, i32 2
  %57 = load %struct.io** %gp_io118, align 8, !tbaa !12
  %sv_any119 = getelementptr inbounds %struct.io* %57, i64 0, i32 0
  %58 = load %struct.xpvio** %sv_any119, align 8, !tbaa !21
  %xio_ifp120 = getelementptr inbounds %struct.xpvio* %58, i64 0, i32 7
  %59 = load %struct._PerlIO*** %xio_ifp120, align 8, !tbaa !23
  br label %return

if.end121:                                        ; preds = %land.lhs.true109, %if.end106
  %60 = load i32* getelementptr inbounds (%struct.stat* @PL_statbuf, i64 0, i32 3), align 8, !tbaa !39
  store i32 %60, i32* @PL_filemode, align 4, !tbaa !14
  %and122 = and i32 %60, 61440
  %cmp123 = icmp eq i32 %and122, 32768
  br i1 %cmp123, label %if.end145, label %if.then125

if.then125:                                       ; preds = %if.end121
  %61 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings = getelementptr inbounds %struct.cop* %61, i64 0, i32 14
  %62 = load %struct.sv** %cop_warnings, align 8, !tbaa !32
  %cmp126 = icmp eq %struct.sv* %62, null
  br i1 %cmp126, label %if.then142, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then125
  %63 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings128 = getelementptr inbounds %struct.cop* %63, i64 0, i32 14
  %64 = load %struct.sv** %cop_warnings128, align 8, !tbaa !32
  %cmp129 = icmp eq %struct.sv* %64, inttoptr (i64 24 to %struct.sv*)
  br i1 %cmp129, label %if.then142, label %lor.lhs.false131

lor.lhs.false131:                                 ; preds = %lor.lhs.false
  %65 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings132 = getelementptr inbounds %struct.cop* %65, i64 0, i32 14
  %66 = load %struct.sv** %cop_warnings132, align 8, !tbaa !32
  %cmp133 = icmp eq %struct.sv* %66, inttoptr (i64 48 to %struct.sv*)
  br i1 %cmp133, label %if.end143, label %land.lhs.true135

land.lhs.true135:                                 ; preds = %lor.lhs.false131
  %67 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings136 = getelementptr inbounds %struct.cop* %67, i64 0, i32 14
  %68 = load %struct.sv** %cop_warnings136, align 8, !tbaa !32
  %sv_any137 = getelementptr inbounds %struct.sv* %68, i64 0, i32 0
  %69 = load i8** %sv_any137, align 8, !tbaa !34
  %xpv_pv138 = bitcast i8* %69 to i8**
  %70 = load i8** %xpv_pv138, align 8, !tbaa !35
  %arrayidx = getelementptr inbounds i8* %70, i64 5
  %71 = load i8* %arrayidx, align 1, !tbaa !31
  %and140 = and i8 %71, 64
  %tobool141 = icmp eq i8 %and140, 0
  br i1 %tobool141, label %if.end143, label %if.then142

if.then142:                                       ; preds = %land.lhs.true135, %lor.lhs.false, %if.then125
  %72 = load i8** @PL_oldname, align 8, !tbaa !16
  call void (i64, i8*, ...)* @Perl_warner(i64 23, i8* getelementptr inbounds ([48 x i8]* @.str21, i64 0, i64 0), i8* %72) #2
  br label %if.end143

if.end143:                                        ; preds = %land.lhs.true135, %lor.lhs.false131, %if.then142
  %73 = load %struct.gv** @PL_argvgv, align 8, !tbaa !16
  %.gv.i = select i1 %tobool.i427, %struct.gv* %73, %struct.gv* %gv
  %tobool2.i = icmp eq %struct.gv* %.gv.i, null
  br i1 %tobool2.i, label %while.cond.backedge, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %if.end143
  %sv_flags.i = getelementptr inbounds %struct.gv* %.gv.i, i64 0, i32 2
  %74 = load i64* %sv_flags.i, align 8, !tbaa !28
  %and.i = and i64 %74, 255
  %cmp.i = icmp eq i64 %and.i, 13
  br i1 %cmp.i, label %land.lhs.true12.i, label %while.cond.backedge

land.lhs.true12.i:                                ; preds = %lor.lhs.false.i
  %sv_any.i = getelementptr inbounds %struct.gv* %.gv.i, i64 0, i32 0
  %75 = load %struct.xpvgv** %sv_any.i, align 8, !tbaa !7
  %xgv_gp.i = getelementptr inbounds %struct.xpvgv* %75, i64 0, i32 7
  %76 = load %struct.gp** %xgv_gp.i, align 8, !tbaa !9
  %tobool13.i = icmp eq %struct.gp* %76, null
  br i1 %tobool13.i, label %while.cond.backedge, label %cond.end.i

cond.end.i:                                       ; preds = %land.lhs.true12.i
  %gp_io.i = getelementptr inbounds %struct.gp* %76, i64 0, i32 2
  %77 = load %struct.io** %gp_io.i, align 8, !tbaa !12
  %tobool16.i = icmp eq %struct.io* %77, null
  br i1 %tobool16.i, label %while.cond.backedge, label %if.end46.i

if.end46.i:                                       ; preds = %cond.end.i
  %call48.i = call i32 (%struct.io*, i32, ...)* bitcast (i32 (...)* @io_close to i32 (%struct.io*, i32, ...)*)(%struct.io* %77, i32 0) #2
  %sv_any57.phi.trans.insert.i = getelementptr inbounds %struct.io* %77, i64 0, i32 0
  %.pre.i = load %struct.xpvio** %sv_any57.phi.trans.insert.i, align 8, !tbaa !21
  %xio_type.i = getelementptr inbounds %struct.xpvio* %.pre.i, i64 0, i32 21
  store i8 32, i8* %xio_type.i, align 1, !tbaa !25
  br label %while.cond.backedge

if.end145:                                        ; preds = %if.end121
  %78 = load i8** @PL_inplace, align 8, !tbaa !16
  %79 = load i8* %78, align 1, !tbaa !31
  %tobool146 = icmp eq i8 %79, 0
  br i1 %tobool146, label %if.else192, label %if.then147

if.then147:                                       ; preds = %if.end145
  %call148 = call i8* @strchr(i8* %78, i32 42) #2
  %tobool149 = icmp eq i8* %call148, null
  br i1 %tobool149, label %if.else, label %if.then150

if.then150:                                       ; preds = %if.then147
  call void @Perl_sv_setpvn(%struct.sv* %call68, i8* getelementptr inbounds ([1 x i8]* @.str3, i64 0, i64 0), i64 0) #2
  br label %do.body

do.body:                                          ; preds = %do.body, %if.then150
  %begin.0 = phi i8* [ %78, %if.then150 ], [ %incdec.ptr, %do.body ]
  %star.0 = phi i8* [ %call148, %if.then150 ], [ %call151, %do.body ]
  %sub.ptr.lhs.cast = ptrtoint i8* %star.0 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %begin.0 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  call void @Perl_sv_catpvn_flags(%struct.sv* %call68, i8* %begin.0, i64 %sub.ptr.sub, i64 2) #2
  %80 = load i8** @PL_oldname, align 8, !tbaa !16
  %81 = load i64* %oldlen, align 8, !tbaa !26
  call void @Perl_sv_catpvn_flags(%struct.sv* %call68, i8* %80, i64 %81, i64 2) #2
  %incdec.ptr = getelementptr inbounds i8* %star.0, i64 1
  %call151 = call i8* @strchr(i8* %incdec.ptr, i32 42) #2
  %tobool152 = icmp eq i8* %call151, null
  br i1 %tobool152, label %do.end, label %do.body

do.end:                                           ; preds = %do.body
  %82 = load i8* %incdec.ptr, align 1, !tbaa !31
  %tobool153 = icmp eq i8 %82, 0
  br i1 %tobool153, label %if.end156, label %if.then154

if.then154:                                       ; preds = %do.end
  call void @Perl_sv_catpv(%struct.sv* %call68, i8* %incdec.ptr) #2
  br label %if.end156

if.else:                                          ; preds = %if.then147
  call void @Perl_sv_catpv(%struct.sv* %call68, i8* %78) #2
  br label %if.end156

if.end156:                                        ; preds = %do.end, %if.then154, %if.else
  %sv_any157 = getelementptr inbounds %struct.sv* %call68, i64 0, i32 0
  %83 = load i8** %sv_any157, align 8, !tbaa !34
  %xpv_pv158 = bitcast i8* %83 to i8**
  %84 = load i8** %xpv_pv158, align 8, !tbaa !35
  %call159 = call i32 @unlink(i8* %84) #2
  %85 = load i8** @PL_oldname, align 8, !tbaa !16
  %86 = load i8** %sv_any157, align 8, !tbaa !34
  %xpv_pv161 = bitcast i8* %86 to i8**
  %87 = load i8** %xpv_pv161, align 8, !tbaa !35
  %call162 = call i32 @link(i8* %85, i8* %87) #2
  %cmp163 = icmp slt i32 %call162, 0
  br i1 %cmp163, label %if.then165, label %if.end190

if.then165:                                       ; preds = %if.end156
  %88 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings166 = getelementptr inbounds %struct.cop* %88, i64 0, i32 14
  %89 = load %struct.sv** %cop_warnings166, align 8, !tbaa !32
  %cmp167 = icmp eq %struct.sv* %89, null
  br i1 %cmp167, label %if.then185, label %lor.lhs.false169

lor.lhs.false169:                                 ; preds = %if.then165
  %90 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings170 = getelementptr inbounds %struct.cop* %90, i64 0, i32 14
  %91 = load %struct.sv** %cop_warnings170, align 8, !tbaa !32
  %cmp171 = icmp eq %struct.sv* %91, inttoptr (i64 24 to %struct.sv*)
  br i1 %cmp171, label %if.then185, label %lor.lhs.false173

lor.lhs.false173:                                 ; preds = %lor.lhs.false169
  %92 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings174 = getelementptr inbounds %struct.cop* %92, i64 0, i32 14
  %93 = load %struct.sv** %cop_warnings174, align 8, !tbaa !32
  %cmp175 = icmp eq %struct.sv* %93, inttoptr (i64 48 to %struct.sv*)
  br i1 %cmp175, label %if.end188, label %land.lhs.true177

land.lhs.true177:                                 ; preds = %lor.lhs.false173
  %94 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings178 = getelementptr inbounds %struct.cop* %94, i64 0, i32 14
  %95 = load %struct.sv** %cop_warnings178, align 8, !tbaa !32
  %sv_any179 = getelementptr inbounds %struct.sv* %95, i64 0, i32 0
  %96 = load i8** %sv_any179, align 8, !tbaa !34
  %xpv_pv180 = bitcast i8* %96 to i8**
  %97 = load i8** %xpv_pv180, align 8, !tbaa !35
  %arrayidx181 = getelementptr inbounds i8* %97, i64 5
  %98 = load i8* %arrayidx181, align 1, !tbaa !31
  %and183 = and i8 %98, 64
  %tobool184 = icmp eq i8 %and183, 0
  br i1 %tobool184, label %if.end188, label %if.then185

if.then185:                                       ; preds = %land.lhs.true177, %lor.lhs.false169, %if.then165
  %99 = load i8** @PL_oldname, align 8, !tbaa !16
  %call186 = call i32* @__errno_location() #2
  %100 = load i32* %call186, align 4, !tbaa !14
  %call187 = call i8* @strerror(i32 %100) #2
  call void (i64, i8*, ...)* @Perl_warner(i64 23, i8* getelementptr inbounds ([41 x i8]* @.str22, i64 0, i64 0), i8* %99, %struct.sv* %call68, i8* %call187) #2
  br label %if.end188

if.end188:                                        ; preds = %land.lhs.true177, %lor.lhs.false173, %if.then185
  %101 = load %struct.gv** @PL_argvgv, align 8, !tbaa !16
  %.gv.i404 = select i1 %tobool.i427, %struct.gv* %101, %struct.gv* %gv
  %tobool2.i405 = icmp eq %struct.gv* %.gv.i404, null
  br i1 %tobool2.i405, label %while.cond.backedge, label %lor.lhs.false.i409

lor.lhs.false.i409:                               ; preds = %if.end188
  %sv_flags.i406 = getelementptr inbounds %struct.gv* %.gv.i404, i64 0, i32 2
  %102 = load i64* %sv_flags.i406, align 8, !tbaa !28
  %and.i407 = and i64 %102, 255
  %cmp.i408 = icmp eq i64 %and.i407, 13
  br i1 %cmp.i408, label %land.lhs.true12.i414, label %while.cond.backedge

land.lhs.true12.i414:                             ; preds = %lor.lhs.false.i409
  %sv_any.i411 = getelementptr inbounds %struct.gv* %.gv.i404, i64 0, i32 0
  %103 = load %struct.xpvgv** %sv_any.i411, align 8, !tbaa !7
  %xgv_gp.i412 = getelementptr inbounds %struct.xpvgv* %103, i64 0, i32 7
  %104 = load %struct.gp** %xgv_gp.i412, align 8, !tbaa !9
  %tobool13.i413 = icmp eq %struct.gp* %104, null
  br i1 %tobool13.i413, label %while.cond.backedge, label %cond.end.i417

cond.end.i417:                                    ; preds = %land.lhs.true12.i414
  %gp_io.i415 = getelementptr inbounds %struct.gp* %104, i64 0, i32 2
  %105 = load %struct.io** %gp_io.i415, align 8, !tbaa !12
  %tobool16.i416 = icmp eq %struct.io* %105, null
  br i1 %tobool16.i416, label %while.cond.backedge, label %if.end46.i423

if.end46.i423:                                    ; preds = %cond.end.i417
  %call48.i419 = call i32 (%struct.io*, i32, ...)* bitcast (i32 (...)* @io_close to i32 (%struct.io*, i32, ...)*)(%struct.io* %105, i32 0) #2
  %sv_any57.phi.trans.insert.i421 = getelementptr inbounds %struct.io* %105, i64 0, i32 0
  %.pre.i422 = load %struct.xpvio** %sv_any57.phi.trans.insert.i421, align 8, !tbaa !21
  %xio_type.i424 = getelementptr inbounds %struct.xpvio* %.pre.i422, i64 0, i32 21
  store i8 32, i8* %xio_type.i424, align 1, !tbaa !25
  br label %while.cond.backedge

if.end190:                                        ; preds = %if.end156
  %106 = load i8** @PL_oldname, align 8, !tbaa !16
  %call191 = call i32 @unlink(i8* %106) #2
  br label %if.end222

if.else192:                                       ; preds = %if.end145
  %107 = load i8** @PL_oldname, align 8, !tbaa !16
  %call193 = call i32 @unlink(i8* %107) #2
  %cmp194 = icmp slt i32 %call193, 0
  br i1 %cmp194, label %if.then196, label %if.else192.if.end222_crit_edge

if.else192.if.end222_crit_edge:                   ; preds = %if.else192
  %sv_any226.pre = getelementptr inbounds %struct.sv* %call68, i64 0, i32 0
  br label %if.end222

if.then196:                                       ; preds = %if.else192
  %108 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings197 = getelementptr inbounds %struct.cop* %108, i64 0, i32 14
  %109 = load %struct.sv** %cop_warnings197, align 8, !tbaa !32
  %cmp198 = icmp eq %struct.sv* %109, null
  br i1 %cmp198, label %if.then216, label %lor.lhs.false200

lor.lhs.false200:                                 ; preds = %if.then196
  %110 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings201 = getelementptr inbounds %struct.cop* %110, i64 0, i32 14
  %111 = load %struct.sv** %cop_warnings201, align 8, !tbaa !32
  %cmp202 = icmp eq %struct.sv* %111, inttoptr (i64 24 to %struct.sv*)
  br i1 %cmp202, label %if.then216, label %lor.lhs.false204

lor.lhs.false204:                                 ; preds = %lor.lhs.false200
  %112 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings205 = getelementptr inbounds %struct.cop* %112, i64 0, i32 14
  %113 = load %struct.sv** %cop_warnings205, align 8, !tbaa !32
  %cmp206 = icmp eq %struct.sv* %113, inttoptr (i64 48 to %struct.sv*)
  br i1 %cmp206, label %if.end219, label %land.lhs.true208

land.lhs.true208:                                 ; preds = %lor.lhs.false204
  %114 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings209 = getelementptr inbounds %struct.cop* %114, i64 0, i32 14
  %115 = load %struct.sv** %cop_warnings209, align 8, !tbaa !32
  %sv_any210 = getelementptr inbounds %struct.sv* %115, i64 0, i32 0
  %116 = load i8** %sv_any210, align 8, !tbaa !34
  %xpv_pv211 = bitcast i8* %116 to i8**
  %117 = load i8** %xpv_pv211, align 8, !tbaa !35
  %arrayidx212 = getelementptr inbounds i8* %117, i64 5
  %118 = load i8* %arrayidx212, align 1, !tbaa !31
  %and214 = and i8 %118, 64
  %tobool215 = icmp eq i8 %and214, 0
  br i1 %tobool215, label %if.end219, label %if.then216

if.then216:                                       ; preds = %land.lhs.true208, %lor.lhs.false200, %if.then196
  %119 = load i8** @PL_oldname, align 8, !tbaa !16
  %call217 = call i32* @__errno_location() #2
  %120 = load i32* %call217, align 4, !tbaa !14
  %call218 = call i8* @strerror(i32 %120) #2
  call void (i64, i8*, ...)* @Perl_warner(i64 23, i8* getelementptr inbounds ([35 x i8]* @.str23, i64 0, i64 0), i8* %119, i8* %call218) #2
  br label %if.end219

if.end219:                                        ; preds = %land.lhs.true208, %lor.lhs.false204, %if.then216
  %121 = load %struct.gv** @PL_argvgv, align 8, !tbaa !16
  %.gv.i428 = select i1 %tobool.i427, %struct.gv* %121, %struct.gv* %gv
  %tobool2.i429 = icmp eq %struct.gv* %.gv.i428, null
  br i1 %tobool2.i429, label %while.cond.backedge, label %lor.lhs.false.i433

lor.lhs.false.i433:                               ; preds = %if.end219
  %sv_flags.i430 = getelementptr inbounds %struct.gv* %.gv.i428, i64 0, i32 2
  %122 = load i64* %sv_flags.i430, align 8, !tbaa !28
  %and.i431 = and i64 %122, 255
  %cmp.i432 = icmp eq i64 %and.i431, 13
  br i1 %cmp.i432, label %land.lhs.true12.i438, label %while.cond.backedge

land.lhs.true12.i438:                             ; preds = %lor.lhs.false.i433
  %sv_any.i435 = getelementptr inbounds %struct.gv* %.gv.i428, i64 0, i32 0
  %123 = load %struct.xpvgv** %sv_any.i435, align 8, !tbaa !7
  %xgv_gp.i436 = getelementptr inbounds %struct.xpvgv* %123, i64 0, i32 7
  %124 = load %struct.gp** %xgv_gp.i436, align 8, !tbaa !9
  %tobool13.i437 = icmp eq %struct.gp* %124, null
  br i1 %tobool13.i437, label %while.cond.backedge, label %cond.end.i441

cond.end.i441:                                    ; preds = %land.lhs.true12.i438
  %gp_io.i439 = getelementptr inbounds %struct.gp* %124, i64 0, i32 2
  %125 = load %struct.io** %gp_io.i439, align 8, !tbaa !12
  %tobool16.i440 = icmp eq %struct.io* %125, null
  br i1 %tobool16.i440, label %while.cond.backedge, label %if.end46.i447

if.end46.i447:                                    ; preds = %cond.end.i441
  %call48.i443 = call i32 (%struct.io*, i32, ...)* bitcast (i32 (...)* @io_close to i32 (%struct.io*, i32, ...)*)(%struct.io* %125, i32 0) #2
  %sv_any57.phi.trans.insert.i445 = getelementptr inbounds %struct.io* %125, i64 0, i32 0
  %.pre.i446 = load %struct.xpvio** %sv_any57.phi.trans.insert.i445, align 8, !tbaa !21
  %xio_type.i448 = getelementptr inbounds %struct.xpvio* %.pre.i446, i64 0, i32 21
  store i8 32, i8* %xio_type.i448, align 1, !tbaa !25
  br label %while.cond.backedge

if.end222:                                        ; preds = %if.else192.if.end222_crit_edge, %if.end190
  %sv_any226.pre-phi = phi i8** [ %sv_any226.pre, %if.else192.if.end222_crit_edge ], [ %sv_any157, %if.end190 ]
  %126 = load i8** @PL_inplace, align 8, !tbaa !16
  %lnot = icmp eq i8* %126, null
  %conv224 = zext i1 %lnot to i64
  call void @Perl_sv_setpvn(%struct.sv* %call68, i8* getelementptr inbounds ([2 x i8]* @.str24, i64 0, i64 0), i64 %conv224) #2
  %127 = load i8** @PL_oldname, align 8, !tbaa !16
  %128 = load i64* %oldlen, align 8, !tbaa !26
  call void @Perl_sv_catpvn_flags(%struct.sv* %call68, i8* %127, i64 %128, i64 2) #2
  %call225 = call i32* @__errno_location() #2
  store i32 0, i32* %call225, align 4, !tbaa !14
  %129 = load %struct.gv** @PL_argvoutgv, align 8, !tbaa !16
  %130 = load i8** %sv_any226.pre-phi, align 8, !tbaa !34
  %xpv_pv227 = bitcast i8* %130 to i8**
  %131 = load i8** %xpv_pv227, align 8, !tbaa !35
  %xpv_cur229 = getelementptr inbounds i8* %130, i64 8
  %132 = bitcast i8* %xpv_cur229 to i64*
  %133 = load i64* %132, align 8, !tbaa !48
  %134 = load i8** @PL_inplace, align 8, !tbaa !16
  %cmp230 = icmp ne i8* %134, null
  %conv231 = zext i1 %cmp230 to i32
  %call.i451 = call signext i8 @Perl_do_openn(%struct.gv* %129, i8* %131, i64 %133, i32 %conv231, i32 65, i32 438, %struct._PerlIO** null, %struct.sv** null, i64 0) #2
  %tobool233 = icmp eq i8 %call.i451, 0
  br i1 %tobool233, label %if.then234, label %if.end259

if.then234:                                       ; preds = %if.end222
  %135 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings235 = getelementptr inbounds %struct.cop* %135, i64 0, i32 14
  %136 = load %struct.sv** %cop_warnings235, align 8, !tbaa !32
  %cmp236 = icmp eq %struct.sv* %136, null
  br i1 %cmp236, label %if.then254, label %lor.lhs.false238

lor.lhs.false238:                                 ; preds = %if.then234
  %137 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings239 = getelementptr inbounds %struct.cop* %137, i64 0, i32 14
  %138 = load %struct.sv** %cop_warnings239, align 8, !tbaa !32
  %cmp240 = icmp eq %struct.sv* %138, inttoptr (i64 24 to %struct.sv*)
  br i1 %cmp240, label %if.then254, label %lor.lhs.false242

lor.lhs.false242:                                 ; preds = %lor.lhs.false238
  %139 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings243 = getelementptr inbounds %struct.cop* %139, i64 0, i32 14
  %140 = load %struct.sv** %cop_warnings243, align 8, !tbaa !32
  %cmp244 = icmp eq %struct.sv* %140, inttoptr (i64 48 to %struct.sv*)
  br i1 %cmp244, label %if.end257, label %land.lhs.true246

land.lhs.true246:                                 ; preds = %lor.lhs.false242
  %141 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings247 = getelementptr inbounds %struct.cop* %141, i64 0, i32 14
  %142 = load %struct.sv** %cop_warnings247, align 8, !tbaa !32
  %sv_any248 = getelementptr inbounds %struct.sv* %142, i64 0, i32 0
  %143 = load i8** %sv_any248, align 8, !tbaa !34
  %xpv_pv249 = bitcast i8* %143 to i8**
  %144 = load i8** %xpv_pv249, align 8, !tbaa !35
  %arrayidx250 = getelementptr inbounds i8* %144, i64 5
  %145 = load i8* %arrayidx250, align 1, !tbaa !31
  %and252 = and i8 %145, 64
  %tobool253 = icmp eq i8 %and252, 0
  br i1 %tobool253, label %if.end257, label %if.then254

if.then254:                                       ; preds = %land.lhs.true246, %lor.lhs.false238, %if.then234
  %146 = load i8** @PL_oldname, align 8, !tbaa !16
  %call255 = call i32* @__errno_location() #2
  %147 = load i32* %call255, align 4, !tbaa !14
  %call256 = call i8* @strerror(i32 %147) #2
  call void (i64, i8*, ...)* @Perl_warner(i64 23, i8* getelementptr inbounds ([32 x i8]* @.str25, i64 0, i64 0), i8* %146, i8* %call256) #2
  br label %if.end257

if.end257:                                        ; preds = %land.lhs.true246, %lor.lhs.false242, %if.then254
  %148 = load %struct.gv** @PL_argvgv, align 8, !tbaa !16
  %.gv.i453 = select i1 %tobool.i427, %struct.gv* %148, %struct.gv* %gv
  %tobool2.i454 = icmp eq %struct.gv* %.gv.i453, null
  br i1 %tobool2.i454, label %while.cond.backedge, label %lor.lhs.false.i458

lor.lhs.false.i458:                               ; preds = %if.end257
  %sv_flags.i455 = getelementptr inbounds %struct.gv* %.gv.i453, i64 0, i32 2
  %149 = load i64* %sv_flags.i455, align 8, !tbaa !28
  %and.i456 = and i64 %149, 255
  %cmp.i457 = icmp eq i64 %and.i456, 13
  br i1 %cmp.i457, label %land.lhs.true12.i463, label %while.cond.backedge

land.lhs.true12.i463:                             ; preds = %lor.lhs.false.i458
  %sv_any.i460 = getelementptr inbounds %struct.gv* %.gv.i453, i64 0, i32 0
  %150 = load %struct.xpvgv** %sv_any.i460, align 8, !tbaa !7
  %xgv_gp.i461 = getelementptr inbounds %struct.xpvgv* %150, i64 0, i32 7
  %151 = load %struct.gp** %xgv_gp.i461, align 8, !tbaa !9
  %tobool13.i462 = icmp eq %struct.gp* %151, null
  br i1 %tobool13.i462, label %while.cond.backedge, label %cond.end.i466

cond.end.i466:                                    ; preds = %land.lhs.true12.i463
  %gp_io.i464 = getelementptr inbounds %struct.gp* %151, i64 0, i32 2
  %152 = load %struct.io** %gp_io.i464, align 8, !tbaa !12
  %tobool16.i465 = icmp eq %struct.io* %152, null
  br i1 %tobool16.i465, label %while.cond.backedge, label %if.end46.i472

if.end46.i472:                                    ; preds = %cond.end.i466
  %call48.i468 = call i32 (%struct.io*, i32, ...)* bitcast (i32 (...)* @io_close to i32 (%struct.io*, i32, ...)*)(%struct.io* %152, i32 0) #2
  %sv_any57.phi.trans.insert.i470 = getelementptr inbounds %struct.io* %152, i64 0, i32 0
  %.pre.i471 = load %struct.xpvio** %sv_any57.phi.trans.insert.i470, align 8, !tbaa !21
  %xio_type.i473 = getelementptr inbounds %struct.xpvio* %.pre.i471, i64 0, i32 21
  store i8 32, i8* %xio_type.i473, align 1, !tbaa !25
  br label %while.cond.backedge

if.end259:                                        ; preds = %if.end222
  %153 = load %struct.gv** @PL_argvoutgv, align 8, !tbaa !16
  %call260 = call i32 (%struct.gv*, ...)* bitcast (i32 (...)* @setdefout to i32 (%struct.gv*, ...)*)(%struct.gv* %153) #2
  %154 = load %struct.gv** @PL_argvoutgv, align 8, !tbaa !16
  %sv_any261 = getelementptr inbounds %struct.gv* %154, i64 0, i32 0
  %155 = load %struct.xpvgv** %sv_any261, align 8, !tbaa !7
  %xgv_gp262 = getelementptr inbounds %struct.xpvgv* %155, i64 0, i32 7
  %156 = load %struct.gp** %xgv_gp262, align 8, !tbaa !9
  %gp_io263 = getelementptr inbounds %struct.gp* %156, i64 0, i32 2
  %157 = load %struct.io** %gp_io263, align 8, !tbaa !12
  %sv_any264 = getelementptr inbounds %struct.io* %157, i64 0, i32 0
  %158 = load %struct.xpvio** %sv_any264, align 8, !tbaa !21
  %xio_ifp265 = getelementptr inbounds %struct.xpvio* %158, i64 0, i32 7
  %159 = load %struct._PerlIO*** %xio_ifp265, align 8, !tbaa !23
  %call266 = call i32 @Perl_PerlIO_fileno(%struct._PerlIO** %159) #2
  store i32 %call266, i32* @PL_lastfd, align 4, !tbaa !14
  %call267 = call i32 @fstat(i32 %call266, %struct.stat* @PL_statbuf) #2
  %160 = load i8** @PL_oldname, align 8, !tbaa !16
  %161 = load i32* @PL_filemode, align 4, !tbaa !14
  %call268 = call i32 @chmod(i8* %160, i32 %161) #2
  br label %if.end276

if.end276:                                        ; preds = %if.then101, %if.end259
  %162 = load %struct.xpvgv** %sv_any, align 8, !tbaa !7
  %xgv_gp278 = getelementptr inbounds %struct.xpvgv* %162, i64 0, i32 7
  %163 = load %struct.gp** %xgv_gp278, align 8, !tbaa !9
  %gp_io279 = getelementptr inbounds %struct.gp* %163, i64 0, i32 2
  %164 = load %struct.io** %gp_io279, align 8, !tbaa !12
  %sv_any280 = getelementptr inbounds %struct.io* %164, i64 0, i32 0
  %165 = load %struct.xpvio** %sv_any280, align 8, !tbaa !21
  %xio_ifp281 = getelementptr inbounds %struct.xpvio* %165, i64 0, i32 7
  %166 = load %struct._PerlIO*** %xio_ifp281, align 8, !tbaa !23
  br label %return

if.else282:                                       ; preds = %cond.end95
  %167 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings283 = getelementptr inbounds %struct.cop* %167, i64 0, i32 14
  %168 = load %struct.sv** %cop_warnings283, align 8, !tbaa !32
  %cmp284 = icmp eq %struct.sv* %168, null
  br i1 %cmp284, label %if.then302, label %lor.lhs.false286

lor.lhs.false286:                                 ; preds = %if.else282
  %169 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings287 = getelementptr inbounds %struct.cop* %169, i64 0, i32 14
  %170 = load %struct.sv** %cop_warnings287, align 8, !tbaa !32
  %cmp288 = icmp eq %struct.sv* %170, inttoptr (i64 24 to %struct.sv*)
  br i1 %cmp288, label %if.then302, label %lor.lhs.false290

lor.lhs.false290:                                 ; preds = %lor.lhs.false286
  %171 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings291 = getelementptr inbounds %struct.cop* %171, i64 0, i32 14
  %172 = load %struct.sv** %cop_warnings291, align 8, !tbaa !32
  %cmp292 = icmp eq %struct.sv* %172, inttoptr (i64 48 to %struct.sv*)
  br i1 %cmp292, label %while.cond.backedge, label %land.lhs.true294

land.lhs.true294:                                 ; preds = %lor.lhs.false290
  %173 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings295 = getelementptr inbounds %struct.cop* %173, i64 0, i32 14
  %174 = load %struct.sv** %cop_warnings295, align 8, !tbaa !32
  %sv_any296 = getelementptr inbounds %struct.sv* %174, i64 0, i32 0
  %175 = load i8** %sv_any296, align 8, !tbaa !34
  %xpv_pv297 = bitcast i8* %175 to i8**
  %176 = load i8** %xpv_pv297, align 8, !tbaa !35
  %arrayidx298 = getelementptr inbounds i8* %176, i64 5
  %177 = load i8* %arrayidx298, align 1, !tbaa !31
  %and300 = and i8 %177, 64
  %tobool301 = icmp eq i8 %and300, 0
  br i1 %tobool301, label %while.cond.backedge, label %if.then302

if.then302:                                       ; preds = %land.lhs.true294, %lor.lhs.false286, %if.else282
  %call303 = call i32* @__errno_location() #2
  %178 = load i32* %call303, align 4, !tbaa !14
  %179 = load i8** @PL_oldname, align 8, !tbaa !16
  %call304 = call i32 @stat(i8* %179, %struct.stat* @PL_statbuf) #2
  %cmp305 = icmp sgt i32 %call304, -1
  br i1 %cmp305, label %land.lhs.true307, label %if.else312

land.lhs.true307:                                 ; preds = %if.then302
  %180 = load i32* getelementptr inbounds (%struct.stat* @PL_statbuf, i64 0, i32 3), align 8, !tbaa !39
  %and308 = and i32 %180, 61440
  %cmp309 = icmp eq i32 %and308, 32768
  br i1 %cmp309, label %if.else312, label %if.then311

if.then311:                                       ; preds = %land.lhs.true307
  %181 = load i8** @PL_oldname, align 8, !tbaa !16
  call void (i64, i8*, ...)* @Perl_warner(i64 23, i8* getelementptr inbounds ([48 x i8]* @.str21, i64 0, i64 0), i8* %181) #2
  br label %while.cond.backedge

if.else312:                                       ; preds = %land.lhs.true307, %if.then302
  %182 = load i8** @PL_oldname, align 8, !tbaa !16
  %call313 = call i8* @strerror(i32 %178) #2
  call void (i64, i8*, ...)* @Perl_warner(i64 23, i8* getelementptr inbounds ([18 x i8]* @.str26, i64 0, i64 0), i8* %182, i8* %call313) #2
  br label %while.cond.backedge

while.cond.backedge:                              ; preds = %if.else312, %if.then311, %lor.lhs.false290, %land.lhs.true294, %land.lhs.true12.i, %cond.end.i, %if.end143, %lor.lhs.false.i, %if.end46.i, %land.lhs.true12.i414, %cond.end.i417, %if.end188, %lor.lhs.false.i409, %if.end46.i423, %land.lhs.true12.i438, %cond.end.i441, %if.end219, %lor.lhs.false.i433, %if.end46.i447, %land.lhs.true12.i463, %cond.end.i466, %if.end257, %lor.lhs.false.i458, %if.end46.i472
  %183 = load %struct.xpvgv** %sv_any, align 8, !tbaa !7
  %xgv_gp60 = getelementptr inbounds %struct.xpvgv* %183, i64 0, i32 7
  %184 = load %struct.gp** %xgv_gp60, align 8, !tbaa !9
  %gp_av61 = getelementptr inbounds %struct.gp* %184, i64 0, i32 4
  %185 = load %struct.av** %gp_av61, align 8, !tbaa !46
  %call62 = call i64 @Perl_av_len(%struct.av* %185) #2
  %cmp63 = icmp sgt i64 %call62, -1
  br i1 %cmp63, label %while.body, label %while.end

while.end:                                        ; preds = %while.cond.backedge, %while.cond.preheader
  br i1 %tobool1, label %land.lhs.true318, label %if.end329

land.lhs.true318:                                 ; preds = %while.end
  %sv_any319 = getelementptr inbounds %struct.io* %2, i64 0, i32 0
  %186 = load %struct.xpvio** %sv_any319, align 8, !tbaa !21
  %xio_flags320 = getelementptr inbounds %struct.xpvio* %186, i64 0, i32 22
  %187 = load i8* %xio_flags320, align 1, !tbaa !44
  %and322 = and i8 %187, 1
  %tobool323 = icmp eq i8 %and322, 0
  br i1 %tobool323, label %if.end329, label %if.then324

if.then324:                                       ; preds = %land.lhs.true318
  %or = or i8 %187, 2
  store i8 %or, i8* %xio_flags320, align 1, !tbaa !44
  br label %if.end329

if.end329:                                        ; preds = %land.lhs.true318, %if.then324, %while.end
  %188 = load i8** @PL_inplace, align 8, !tbaa !16
  %tobool330 = icmp eq i8* %188, null
  br i1 %tobool330, label %return, label %if.then331

if.then331:                                       ; preds = %if.end329
  %189 = load %struct.gv** @PL_argvoutgv, align 8, !tbaa !16
  %tobool.i476 = icmp eq %struct.gv* %189, null
  %190 = load %struct.gv** @PL_argvgv, align 8, !tbaa !16
  %.gv.i477 = select i1 %tobool.i476, %struct.gv* %190, %struct.gv* %189
  %tobool2.i478 = icmp eq %struct.gv* %.gv.i477, null
  br i1 %tobool2.i478, label %Perl_do_close.exit499, label %lor.lhs.false.i482

lor.lhs.false.i482:                               ; preds = %if.then331
  %sv_flags.i479 = getelementptr inbounds %struct.gv* %.gv.i477, i64 0, i32 2
  %191 = load i64* %sv_flags.i479, align 8, !tbaa !28
  %and.i480 = and i64 %191, 255
  %cmp.i481 = icmp eq i64 %and.i480, 13
  br i1 %cmp.i481, label %land.lhs.true12.i487, label %Perl_do_close.exit499

land.lhs.true12.i487:                             ; preds = %lor.lhs.false.i482
  %sv_any.i484 = getelementptr inbounds %struct.gv* %.gv.i477, i64 0, i32 0
  %192 = load %struct.xpvgv** %sv_any.i484, align 8, !tbaa !7
  %xgv_gp.i485 = getelementptr inbounds %struct.xpvgv* %192, i64 0, i32 7
  %193 = load %struct.gp** %xgv_gp.i485, align 8, !tbaa !9
  %tobool13.i486 = icmp eq %struct.gp* %193, null
  br i1 %tobool13.i486, label %Perl_do_close.exit499, label %cond.end.i490

cond.end.i490:                                    ; preds = %land.lhs.true12.i487
  %gp_io.i488 = getelementptr inbounds %struct.gp* %193, i64 0, i32 2
  %194 = load %struct.io** %gp_io.i488, align 8, !tbaa !12
  %tobool16.i489 = icmp eq %struct.io* %194, null
  br i1 %tobool16.i489, label %Perl_do_close.exit499, label %if.end46.i496

if.end46.i496:                                    ; preds = %cond.end.i490
  %call48.i492 = call i32 (%struct.io*, i32, ...)* bitcast (i32 (...)* @io_close to i32 (%struct.io*, i32, ...)*)(%struct.io* %194, i32 0) #2
  %sv_any57.phi.trans.insert.i494 = getelementptr inbounds %struct.io* %194, i64 0, i32 0
  %.pre.i495 = load %struct.xpvio** %sv_any57.phi.trans.insert.i494, align 8, !tbaa !21
  %xio_type.i497 = getelementptr inbounds %struct.xpvio* %.pre.i495, i64 0, i32 21
  store i8 32, i8* %xio_type.i497, align 1, !tbaa !25
  br label %Perl_do_close.exit499

Perl_do_close.exit499:                            ; preds = %land.lhs.true12.i487, %cond.end.i490, %if.then331, %lor.lhs.false.i482, %if.end46.i496
  br i1 %tobool1, label %land.lhs.true334, label %if.end349

land.lhs.true334:                                 ; preds = %Perl_do_close.exit499
  %sv_any335 = getelementptr inbounds %struct.io* %2, i64 0, i32 0
  %195 = load %struct.xpvio** %sv_any335, align 8, !tbaa !21
  %xio_flags336 = getelementptr inbounds %struct.xpvio* %195, i64 0, i32 22
  %196 = load i8* %xio_flags336, align 1, !tbaa !44
  %and338 = and i8 %196, 1
  %tobool339 = icmp ne i8 %and338, 0
  %197 = load %struct.av** @PL_argvout_stack, align 8
  %tobool341 = icmp ne %struct.av* %197, null
  %or.cond = and i1 %tobool339, %tobool341
  br i1 %or.cond, label %land.lhs.true342, label %if.end349

land.lhs.true342:                                 ; preds = %land.lhs.true334
  %sv_any343 = getelementptr inbounds %struct.av* %197, i64 0, i32 0
  %198 = load %struct.xpvav** %sv_any343, align 8, !tbaa !49
  %xav_fill = getelementptr inbounds %struct.xpvav* %198, i64 0, i32 1
  %199 = load i64* %xav_fill, align 8, !tbaa !51
  %cmp344 = icmp sgt i64 %199, -1
  br i1 %cmp344, label %if.then346, label %if.end349

if.then346:                                       ; preds = %land.lhs.true342
  %call347 = call %struct.sv* @Perl_av_pop(%struct.av* %197) #2
  %200 = bitcast %struct.sv* %call347 to %struct.gv*
  %call348 = call i32 (%struct.gv*, ...)* bitcast (i32 (...)* @setdefout to i32 (%struct.gv*, ...)*)(%struct.gv* %200) #2
  call void @Perl_sv_free(%struct.sv* %call347) #2
  br label %return

if.end349:                                        ; preds = %land.lhs.true342, %land.lhs.true334, %Perl_do_close.exit499
  %call350 = call %struct.gv* @Perl_gv_fetchpv(i8* getelementptr inbounds ([7 x i8]* @.str20, i64 0, i64 0), i64 1, i64 15) #2
  %call351 = call i32 (%struct.gv*, ...)* bitcast (i32 (...)* @setdefout to i32 (%struct.gv*, ...)*)(%struct.gv* %call350) #2
  br label %return

return:                                           ; preds = %if.end349, %if.end329, %if.end53, %if.then346, %if.end276, %if.then113
  %retval.0 = phi %struct._PerlIO** [ %59, %if.then113 ], [ %166, %if.end276 ], [ null, %if.then346 ], [ null, %if.end53 ], [ null, %if.end329 ], [ null, %if.end349 ]
  ret %struct._PerlIO** %retval.0
}

declare %struct.av* @Perl_newAV() #1

declare void @Perl_av_push(%struct.av*, %struct.sv*) #1

; Function Attrs: nounwind
declare i32 @chmod(i8* nocapture readonly, i32) #4

declare i64 @Perl_av_len(%struct.av*) #1

declare %struct.sv* @Perl_av_shift(%struct.av*) #1

declare void @Perl_save_freesv(%struct.sv*) #1

declare void @Perl_sv_setsv_flags(%struct.sv*, %struct.sv*, i64) #1

declare i32 @Perl_mg_set(%struct.sv*) #1

declare i8* @Perl_sv_2pv_flags(%struct.sv*, i64*, i64) #1

declare i32 @setdefout(...) #1

; Function Attrs: nounwind uwtable
define signext i8 @Perl_do_close(%struct.gv* %gv, i8 signext %not_implicit) #0 {
entry:
  %tobool = icmp eq %struct.gv* %gv, null
  %0 = load %struct.gv** @PL_argvgv, align 8, !tbaa !16
  %.gv = select i1 %tobool, %struct.gv* %0, %struct.gv* %gv
  %tobool2 = icmp eq %struct.gv* %.gv, null
  br i1 %tobool2, label %if.then3, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %sv_flags = getelementptr inbounds %struct.gv* %.gv, i64 0, i32 2
  %1 = load i64* %sv_flags, align 8, !tbaa !28
  %and = and i64 %1, 255
  %cmp = icmp eq i64 %and, 13
  br i1 %cmp, label %land.lhs.true12, label %if.then3

if.then3:                                         ; preds = %entry, %lor.lhs.false
  %tobool4 = icmp eq i8 %not_implicit, 0
  br i1 %tobool4, label %return, label %if.then5

if.then5:                                         ; preds = %if.then3
  %call = tail call i32* @__errno_location() #2
  store i32 9, i32* %call, align 4, !tbaa !14
  br label %return

land.lhs.true12:                                  ; preds = %lor.lhs.false
  %sv_any = getelementptr inbounds %struct.gv* %.gv, i64 0, i32 0
  %2 = load %struct.xpvgv** %sv_any, align 8, !tbaa !7
  %xgv_gp = getelementptr inbounds %struct.xpvgv* %2, i64 0, i32 7
  %3 = load %struct.gp** %xgv_gp, align 8, !tbaa !9
  %tobool13 = icmp eq %struct.gp* %3, null
  br i1 %tobool13, label %if.then17, label %cond.end

cond.end:                                         ; preds = %land.lhs.true12
  %gp_io = getelementptr inbounds %struct.gp* %3, i64 0, i32 2
  %4 = load %struct.io** %gp_io, align 8, !tbaa !12
  %tobool16 = icmp eq %struct.io* %4, null
  br i1 %tobool16, label %if.then17, label %if.end46

if.then17:                                        ; preds = %land.lhs.true12, %cond.end
  %tobool18 = icmp eq i8 %not_implicit, 0
  br i1 %tobool18, label %return, label %if.then19

if.then19:                                        ; preds = %if.then17
  %5 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings = getelementptr inbounds %struct.cop* %5, i64 0, i32 14
  %6 = load %struct.sv** %cop_warnings, align 8, !tbaa !32
  %cmp20 = icmp eq %struct.sv* %6, null
  br i1 %cmp20, label %lor.lhs.false32, label %land.lhs.true21

land.lhs.true21:                                  ; preds = %if.then19
  %7 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings22 = getelementptr inbounds %struct.cop* %7, i64 0, i32 14
  %8 = load %struct.sv** %cop_warnings22, align 8, !tbaa !32
  %cmp23 = icmp eq %struct.sv* %8, inttoptr (i64 48 to %struct.sv*)
  br i1 %cmp23, label %lor.lhs.false32, label %land.lhs.true24

land.lhs.true24:                                  ; preds = %land.lhs.true21
  %9 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings25 = getelementptr inbounds %struct.cop* %9, i64 0, i32 14
  %10 = load %struct.sv** %cop_warnings25, align 8, !tbaa !32
  %cmp26 = icmp eq %struct.sv* %10, inttoptr (i64 24 to %struct.sv*)
  br i1 %cmp26, label %if.then40, label %lor.lhs.false27

lor.lhs.false27:                                  ; preds = %land.lhs.true24
  %11 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings28 = getelementptr inbounds %struct.cop* %11, i64 0, i32 14
  %12 = load %struct.sv** %cop_warnings28, align 8, !tbaa !32
  %sv_any29 = getelementptr inbounds %struct.sv* %12, i64 0, i32 0
  %13 = load i8** %sv_any29, align 8, !tbaa !34
  %xpv_pv = bitcast i8* %13 to i8**
  %14 = load i8** %xpv_pv, align 8, !tbaa !35
  %arrayidx = getelementptr inbounds i8* %14, i64 2
  %15 = load i8* %arrayidx, align 1, !tbaa !31
  %and30 = and i8 %15, 64
  %tobool31 = icmp eq i8 %and30, 0
  br i1 %tobool31, label %lor.lhs.false32, label %if.then40

lor.lhs.false32:                                  ; preds = %lor.lhs.false27, %land.lhs.true21, %if.then19
  %16 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings33 = getelementptr inbounds %struct.cop* %16, i64 0, i32 14
  %17 = load %struct.sv** %cop_warnings33, align 8, !tbaa !32
  %cmp34 = icmp eq %struct.sv* %17, null
  br i1 %cmp34, label %land.lhs.true36, label %if.end43

land.lhs.true36:                                  ; preds = %lor.lhs.false32
  %18 = load i8* @PL_dowarn, align 1, !tbaa !31
  %and38 = and i8 %18, 1
  %tobool39 = icmp eq i8 %and38, 0
  br i1 %tobool39, label %if.end43, label %if.then40

if.then40:                                        ; preds = %lor.lhs.false27, %land.lhs.true36, %land.lhs.true24
  %19 = load %struct.op** @PL_op, align 8, !tbaa !16
  %op_type = getelementptr inbounds %struct.op* %19, i64 0, i32 4
  %20 = load i16* %op_type, align 2, !tbaa !17
  %conv41 = zext i16 %20 to i32
  %call42 = tail call i32 (%struct.gv*, %struct.io*, i32, ...)* bitcast (i32 (...)* @report_evil_fh to i32 (%struct.gv*, %struct.io*, i32, ...)*)(%struct.gv* %.gv, %struct.io* null, i32 %conv41) #2
  br label %if.end43

if.end43:                                         ; preds = %land.lhs.true36, %if.then40, %lor.lhs.false32
  %call44 = tail call i32* @__errno_location() #2
  store i32 9, i32* %call44, align 4, !tbaa !14
  br label %return

if.end46:                                         ; preds = %cond.end
  %conv47 = sext i8 %not_implicit to i32
  %call48 = tail call i32 (%struct.io*, i32, ...)* bitcast (i32 (...)* @io_close to i32 (%struct.io*, i32, ...)*)(%struct.io* %4, i32 %conv47) #2
  %conv49 = trunc i32 %call48 to i8
  %tobool50 = icmp eq i8 %not_implicit, 0
  %sv_any57.phi.trans.insert = getelementptr inbounds %struct.io* %4, i64 0, i32 0
  %.pre = load %struct.xpvio** %sv_any57.phi.trans.insert, align 8, !tbaa !21
  br i1 %tobool50, label %if.end56, label %if.then51

if.then51:                                        ; preds = %if.end46
  %xio_lines = getelementptr inbounds %struct.xpvio* %.pre, i64 0, i32 10
  %xio_page_len = getelementptr inbounds %struct.xpvio* %.pre, i64 0, i32 12
  %21 = bitcast i64* %xio_lines to i8*
  call void @llvm.memset.p0i8.i64(i8* %21, i8 0, i64 16, i32 8, i1 false)
  %22 = load i64* %xio_page_len, align 8, !tbaa !53
  %xio_lines_left = getelementptr inbounds %struct.xpvio* %.pre, i64 0, i32 13
  store i64 %22, i64* %xio_lines_left, align 8, !tbaa !54
  br label %if.end56

if.end56:                                         ; preds = %if.end46, %if.then51
  %xio_type = getelementptr inbounds %struct.xpvio* %.pre, i64 0, i32 21
  store i8 32, i8* %xio_type, align 1, !tbaa !25
  br label %return

return:                                           ; preds = %if.end43, %if.then17, %if.then5, %if.then3, %if.end56
  %retval.0 = phi i8 [ %conv49, %if.end56 ], [ 0, %if.then3 ], [ 0, %if.then5 ], [ 0, %if.then17 ], [ 0, %if.end43 ]
  ret i8 %retval.0
}

declare void @Perl_sv_setpvn(%struct.sv*, i8*, i64) #1

declare void @Perl_sv_catpvn_flags(%struct.sv*, i8*, i64, i64) #1

declare void @Perl_sv_catpv(%struct.sv*, i8*) #1

; Function Attrs: nounwind
declare i32 @unlink(i8* nocapture readonly) #4

declare i32 @link(i8*, i8*) #1

declare i8* @strerror(i32) #1

; Function Attrs: nounwind
declare i32 @stat(i8* nocapture readonly, %struct.stat* nocapture) #4

declare %struct.sv* @Perl_av_pop(%struct.av*) #1

declare void @Perl_sv_free(%struct.sv*) #1

declare i32 @report_evil_fh(...) #1

declare i32 @io_close(...) #1

; Function Attrs: nounwind uwtable
define signext i8 @Perl_io_close(%struct.io* nocapture readonly %io, i8 signext %not_implicit) #0 {
entry:
  %sv_any = getelementptr inbounds %struct.io* %io, i64 0, i32 0
  %0 = load %struct.xpvio** %sv_any, align 8, !tbaa !21
  %xio_ifp = getelementptr inbounds %struct.xpvio* %0, i64 0, i32 7
  %1 = load %struct._PerlIO*** %xio_ifp, align 8, !tbaa !23
  %tobool = icmp eq %struct._PerlIO** %1, null
  br i1 %tobool, label %if.else76, label %if.then

if.then:                                          ; preds = %entry
  %xio_type = getelementptr inbounds %struct.xpvio* %0, i64 0, i32 21
  %2 = load i8* %xio_type, align 1, !tbaa !25
  switch i8 %2, label %if.else28 [
    i8 124, label %if.then4
    i8 45, label %if.end71
  ]

if.then4:                                         ; preds = %if.then
  %call = tail call i64 @Perl_my_pclose(%struct._PerlIO** %1) #2
  %tobool8 = icmp eq i8 %not_implicit, 0
  br i1 %tobool8, label %if.else, label %if.then9

if.then9:                                         ; preds = %if.then4
  %sext = shl i64 %call, 32
  %conv10 = ashr exact i64 %sext, 32
  %cmp11 = icmp eq i64 %conv10, -1
  %and = and i64 %conv10, 65535
  %conv10.and = select i1 %cmp11, i64 -1, i64 %and
  store i64 %conv10.and, i64* @PL_statusvalue, align 8, !tbaa !26
  %cmp14 = icmp eq i64 %conv10.and, 0
  %conv16 = zext i1 %cmp14 to i8
  br label %if.end71

if.else:                                          ; preds = %if.then4
  %conv7 = trunc i64 %call to i32
  %cmp17 = icmp ne i32 %conv7, -1
  %conv19 = zext i1 %cmp17 to i8
  br label %if.end71

if.else28:                                        ; preds = %if.then
  %xio_ofp = getelementptr inbounds %struct.xpvio* %0, i64 0, i32 8
  %3 = load %struct._PerlIO*** %xio_ofp, align 8, !tbaa !27
  %tobool30 = icmp eq %struct._PerlIO** %3, null
  %cmp35 = icmp eq %struct._PerlIO** %3, %1
  %or.cond = or i1 %tobool30, %cmp35
  br i1 %or.cond, label %if.else52, label %if.then37

if.then37:                                        ; preds = %if.else28
  %call40 = tail call i32 @Perl_PerlIO_error(%struct._PerlIO** %3) #2
  %4 = load %struct.xpvio** %sv_any, align 8, !tbaa !21
  %xio_ofp43 = getelementptr inbounds %struct.xpvio* %4, i64 0, i32 8
  %5 = load %struct._PerlIO*** %xio_ofp43, align 8, !tbaa !27
  %call44 = tail call i32 @Perl_PerlIO_close(%struct._PerlIO** %5) #2
  %cmp45 = icmp eq i32 %call44, -1
  br i1 %cmp45, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %if.then37
  %conv41 = trunc i32 %call40 to i8
  %lnot = icmp eq i8 %conv41, 0
  br label %land.end

land.end:                                         ; preds = %if.then37, %land.rhs
  %6 = phi i1 [ false, %if.then37 ], [ %lnot, %land.rhs ]
  %conv48 = zext i1 %6 to i8
  %7 = load %struct.xpvio** %sv_any, align 8, !tbaa !21
  %xio_ifp50 = getelementptr inbounds %struct.xpvio* %7, i64 0, i32 7
  %8 = load %struct._PerlIO*** %xio_ifp50, align 8, !tbaa !23
  %call51 = tail call i32 @Perl_PerlIO_close(%struct._PerlIO** %8) #2
  br label %if.end71

if.else52:                                        ; preds = %if.else28
  %call56 = tail call i32 @Perl_PerlIO_error(%struct._PerlIO** %1) #2
  %9 = load %struct.xpvio** %sv_any, align 8, !tbaa !21
  %xio_ifp59 = getelementptr inbounds %struct.xpvio* %9, i64 0, i32 7
  %10 = load %struct._PerlIO*** %xio_ifp59, align 8, !tbaa !23
  %call60 = tail call i32 @Perl_PerlIO_close(%struct._PerlIO** %10) #2
  %cmp61 = icmp eq i32 %call60, -1
  br i1 %cmp61, label %land.end66, label %land.rhs63

land.rhs63:                                       ; preds = %if.else52
  %conv57 = trunc i32 %call56 to i8
  %lnot65 = icmp eq i8 %conv57, 0
  br label %land.end66

land.end66:                                       ; preds = %if.else52, %land.rhs63
  %11 = phi i1 [ false, %if.else52 ], [ %lnot65, %land.rhs63 ]
  %conv68 = zext i1 %11 to i8
  br label %if.end71

if.end71:                                         ; preds = %if.then, %land.end66, %land.end, %if.then9, %if.else
  %retval1.0 = phi i8 [ %conv16, %if.then9 ], [ %conv19, %if.else ], [ %conv48, %land.end ], [ %conv68, %land.end66 ], [ 1, %if.then ]
  %12 = load %struct.xpvio** %sv_any, align 8, !tbaa !21
  %xio_ifp73 = getelementptr inbounds %struct.xpvio* %12, i64 0, i32 7
  %13 = bitcast %struct._PerlIO*** %xio_ifp73 to i8*
  call void @llvm.memset.p0i8.i64(i8* %13, i8 0, i64 16, i32 8, i1 false)
  br label %if.end81

if.else76:                                        ; preds = %entry
  %tobool77 = icmp eq i8 %not_implicit, 0
  br i1 %tobool77, label %if.end81, label %if.then78

if.then78:                                        ; preds = %if.else76
  %call79 = tail call i32* @__errno_location() #2
  store i32 9, i32* %call79, align 4, !tbaa !14
  br label %if.end81

if.end81:                                         ; preds = %if.else76, %if.then78, %if.end71
  %retval1.1 = phi i8 [ %retval1.0, %if.end71 ], [ 0, %if.then78 ], [ 0, %if.else76 ]
  ret i8 %retval1.1
}

declare i32 @Perl_PerlIO_error(%struct._PerlIO**) #1

; Function Attrs: nounwind uwtable
define signext i8 @Perl_do_eof(%struct.gv* %gv) #0 {
entry:
  %tobool = icmp eq %struct.gv* %gv, null
  br i1 %tobool, label %return, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %0 = getelementptr inbounds %struct.gv* %gv, i64 0, i32 2
  %1 = load i64* %0, align 8, !tbaa !1
  %and = and i64 %1, 255
  %cmp = icmp eq i64 %and, 13
  br i1 %cmp, label %land.lhs.true1, label %return

land.lhs.true1:                                   ; preds = %land.lhs.true
  %sv_any = getelementptr inbounds %struct.gv* %gv, i64 0, i32 0
  %2 = load %struct.xpvgv** %sv_any, align 8, !tbaa !7
  %xgv_gp = getelementptr inbounds %struct.xpvgv* %2, i64 0, i32 7
  %3 = load %struct.gp** %xgv_gp, align 8, !tbaa !9
  %tobool2 = icmp eq %struct.gp* %3, null
  br i1 %tobool2, label %return, label %cond.end

cond.end:                                         ; preds = %land.lhs.true1
  %gp_io = getelementptr inbounds %struct.gp* %3, i64 0, i32 2
  %4 = load %struct.io** %gp_io, align 8, !tbaa !12
  %tobool5 = icmp eq %struct.io* %4, null
  br i1 %tobool5, label %return, label %if.else

if.else:                                          ; preds = %cond.end
  %5 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings = getelementptr inbounds %struct.cop* %5, i64 0, i32 14
  %6 = load %struct.sv** %cop_warnings, align 8, !tbaa !32
  %cmp6 = icmp eq %struct.sv* %6, null
  br i1 %cmp6, label %lor.lhs.false17, label %land.lhs.true7

land.lhs.true7:                                   ; preds = %if.else
  %7 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings8 = getelementptr inbounds %struct.cop* %7, i64 0, i32 14
  %8 = load %struct.sv** %cop_warnings8, align 8, !tbaa !32
  %cmp9 = icmp eq %struct.sv* %8, inttoptr (i64 48 to %struct.sv*)
  br i1 %cmp9, label %lor.lhs.false17, label %land.lhs.true10

land.lhs.true10:                                  ; preds = %land.lhs.true7
  %9 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings11 = getelementptr inbounds %struct.cop* %9, i64 0, i32 14
  %10 = load %struct.sv** %cop_warnings11, align 8, !tbaa !32
  %cmp12 = icmp eq %struct.sv* %10, inttoptr (i64 24 to %struct.sv*)
  br i1 %cmp12, label %land.lhs.true25, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true10
  %11 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings13 = getelementptr inbounds %struct.cop* %11, i64 0, i32 14
  %12 = load %struct.sv** %cop_warnings13, align 8, !tbaa !32
  %sv_any14 = getelementptr inbounds %struct.sv* %12, i64 0, i32 0
  %13 = load i8** %sv_any14, align 8, !tbaa !34
  %xpv_pv = bitcast i8* %13 to i8**
  %14 = load i8** %xpv_pv, align 8, !tbaa !35
  %arrayidx = getelementptr inbounds i8* %14, i64 1
  %15 = load i8* %arrayidx, align 1, !tbaa !31
  %and15 = and i8 %15, 4
  %tobool16 = icmp eq i8 %and15, 0
  br i1 %tobool16, label %lor.lhs.false17, label %land.lhs.true25

lor.lhs.false17:                                  ; preds = %lor.lhs.false, %land.lhs.true7, %if.else
  %16 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings18 = getelementptr inbounds %struct.cop* %16, i64 0, i32 14
  %17 = load %struct.sv** %cop_warnings18, align 8, !tbaa !32
  %cmp19 = icmp eq %struct.sv* %17, null
  br i1 %cmp19, label %land.lhs.true21, label %while.cond.preheader

land.lhs.true21:                                  ; preds = %lor.lhs.false17
  %18 = load i8* @PL_dowarn, align 1, !tbaa !31
  %and23 = and i8 %18, 1
  %tobool24 = icmp eq i8 %and23, 0
  br i1 %tobool24, label %while.cond.preheader, label %land.lhs.true25

land.lhs.true25:                                  ; preds = %lor.lhs.false, %land.lhs.true21, %land.lhs.true10
  %sv_any26 = getelementptr inbounds %struct.io* %4, i64 0, i32 0
  %19 = load %struct.xpvio** %sv_any26, align 8, !tbaa !21
  %xio_type = getelementptr inbounds %struct.xpvio* %19, i64 0, i32 21
  %20 = load i8* %xio_type, align 1, !tbaa !25
  %cmp28 = icmp eq i8 %20, 62
  br i1 %cmp28, label %if.then30, label %while.cond.preheader

if.then30:                                        ; preds = %land.lhs.true25
  %call = tail call i32 (%struct.gv*, %struct.io*, i32, ...)* bitcast (i32 (...)* @report_evil_fh to i32 (%struct.gv*, %struct.io*, i32, ...)*)(%struct.gv* %gv, %struct.io* %4, i32 -2) #2
  br label %while.cond.preheader

while.cond.preheader:                             ; preds = %lor.lhs.false17, %land.lhs.true25, %if.then30, %land.lhs.true21
  %sv_any32 = getelementptr inbounds %struct.io* %4, i64 0, i32 0
  br label %while.cond

while.cond:                                       ; preds = %while.cond.preheader, %lor.lhs.false86
  %21 = load %struct.xpvio** %sv_any32, align 8, !tbaa !21
  %xio_ifp = getelementptr inbounds %struct.xpvio* %21, i64 0, i32 7
  %22 = load %struct._PerlIO*** %xio_ifp, align 8, !tbaa !23
  %tobool33 = icmp eq %struct._PerlIO** %22, null
  br i1 %tobool33, label %return, label %while.body

while.body:                                       ; preds = %while.cond
  %call36 = tail call i32 @PerlIO_has_cntptr(%struct._PerlIO** %22) #2
  %tobool37 = icmp eq i32 %call36, 0
  br i1 %tobool37, label %if.end46, label %if.then38

if.then38:                                        ; preds = %while.body
  %23 = load %struct.xpvio** %sv_any32, align 8, !tbaa !21
  %xio_ifp40 = getelementptr inbounds %struct.xpvio* %23, i64 0, i32 7
  %24 = load %struct._PerlIO*** %xio_ifp40, align 8, !tbaa !23
  %call41 = tail call i32 @Perl_PerlIO_get_cnt(%struct._PerlIO** %24) #2
  %cmp42 = icmp sgt i32 %call41, 0
  br i1 %cmp42, label %return, label %if.end46

if.end46:                                         ; preds = %while.body, %if.then38
  %call47 = tail call i32* @__errno_location() #2
  %25 = load i32* %call47, align 4, !tbaa !14
  %26 = load %struct.xpvio** %sv_any32, align 8, !tbaa !21
  %xio_ifp49 = getelementptr inbounds %struct.xpvio* %26, i64 0, i32 7
  %27 = load %struct._PerlIO*** %xio_ifp49, align 8, !tbaa !23
  %call50 = tail call i32 @PerlIO_getc(%struct._PerlIO** %27) #2
  %cmp51 = icmp eq i32 %call50, -1
  br i1 %cmp51, label %if.end58, label %if.then53

if.then53:                                        ; preds = %if.end46
  %28 = load %struct.xpvio** %sv_any32, align 8, !tbaa !21
  %xio_ifp55 = getelementptr inbounds %struct.xpvio* %28, i64 0, i32 7
  %29 = load %struct._PerlIO*** %xio_ifp55, align 8, !tbaa !23
  %call56 = tail call i32 @PerlIO_ungetc(%struct._PerlIO** %29, i32 %call50) #2
  %call57 = tail call i32* @__errno_location() #2
  store i32 %25, i32* %call57, align 4, !tbaa !14
  br label %return

if.end58:                                         ; preds = %if.end46
  %call59 = tail call i32* @__errno_location() #2
  store i32 %25, i32* %call59, align 4, !tbaa !14
  %30 = load %struct.xpvio** %sv_any32, align 8, !tbaa !21
  %xio_ifp61 = getelementptr inbounds %struct.xpvio* %30, i64 0, i32 7
  %31 = load %struct._PerlIO*** %xio_ifp61, align 8, !tbaa !23
  %call62 = tail call i32 @PerlIO_has_cntptr(%struct._PerlIO** %31) #2
  %tobool63 = icmp eq i32 %call62, 0
  br i1 %tobool63, label %if.end79, label %land.lhs.true64

land.lhs.true64:                                  ; preds = %if.end58
  %32 = load %struct.xpvio** %sv_any32, align 8, !tbaa !21
  %xio_ifp66 = getelementptr inbounds %struct.xpvio* %32, i64 0, i32 7
  %33 = load %struct._PerlIO*** %xio_ifp66, align 8, !tbaa !23
  %call67 = tail call i32 @PerlIO_canset_cnt(%struct._PerlIO** %33) #2
  %tobool68 = icmp eq i32 %call67, 0
  br i1 %tobool68, label %if.end79, label %if.then69

if.then69:                                        ; preds = %land.lhs.true64
  %34 = load %struct.xpvio** %sv_any32, align 8, !tbaa !21
  %xio_ifp71 = getelementptr inbounds %struct.xpvio* %34, i64 0, i32 7
  %35 = load %struct._PerlIO*** %xio_ifp71, align 8, !tbaa !23
  %call72 = tail call i32 @Perl_PerlIO_get_cnt(%struct._PerlIO** %35) #2
  %cmp73 = icmp slt i32 %call72, -1
  br i1 %cmp73, label %if.then75, label %if.end79

if.then75:                                        ; preds = %if.then69
  %36 = load %struct.xpvio** %sv_any32, align 8, !tbaa !21
  %xio_ifp77 = getelementptr inbounds %struct.xpvio* %36, i64 0, i32 7
  %37 = load %struct._PerlIO*** %xio_ifp77, align 8, !tbaa !23
  tail call void @Perl_PerlIO_set_cnt(%struct._PerlIO** %37, i32 -1) #2
  br label %if.end79

if.end79:                                         ; preds = %land.lhs.true64, %if.end58, %if.then69, %if.then75
  %38 = load %struct.op** @PL_op, align 8, !tbaa !16
  %op_flags = getelementptr inbounds %struct.op* %38, i64 0, i32 6
  %39 = load i8* %op_flags, align 1, !tbaa !55
  %tobool82 = icmp slt i8 %39, 0
  %40 = load %struct.gv** @PL_argvgv, align 8
  %cmp84 = icmp eq %struct.gv* %40, %gv
  %or.cond = and i1 %tobool82, %cmp84
  br i1 %or.cond, label %lor.lhs.false86, label %return

lor.lhs.false86:                                  ; preds = %if.end79
  %call87 = tail call i32 (%struct.gv*, ...)* bitcast (i32 (...)* @nextargv to i32 (%struct.gv*, ...)*)(%struct.gv* %gv) #2
  %tobool88 = icmp eq i32 %call87, 0
  br i1 %tobool88, label %return, label %while.cond

return:                                           ; preds = %while.cond, %if.end79, %lor.lhs.false86, %if.then38, %entry, %land.lhs.true, %land.lhs.true1, %cond.end, %if.then53
  %retval.0 = phi i8 [ 0, %if.then53 ], [ 1, %cond.end ], [ 1, %land.lhs.true1 ], [ 1, %land.lhs.true ], [ 1, %entry ], [ 1, %while.cond ], [ 1, %if.end79 ], [ 1, %lor.lhs.false86 ], [ 0, %if.then38 ]
  ret i8 %retval.0
}

declare i32 @PerlIO_has_cntptr(%struct._PerlIO**) #1

declare i32 @Perl_PerlIO_get_cnt(%struct._PerlIO**) #1

declare i32 @PerlIO_getc(%struct._PerlIO**) #1

declare i32 @PerlIO_ungetc(%struct._PerlIO**, i32) #1

declare i32 @PerlIO_canset_cnt(%struct._PerlIO**) #1

declare void @Perl_PerlIO_set_cnt(%struct._PerlIO**, i32) #1

declare i32 @nextargv(...) #1

; Function Attrs: nounwind uwtable
define i64 @Perl_do_tell(%struct.gv* %gv) #0 {
entry:
  %tobool = icmp eq %struct.gv* %gv, null
  br i1 %tobool, label %if.end, label %land.lhs.true2

land.lhs.true2:                                   ; preds = %entry
  %0 = getelementptr inbounds %struct.gv* %gv, i64 0, i32 2
  %1 = load i64* %0, align 8, !tbaa !1
  %and = and i64 %1, 255
  %cmp = icmp eq i64 %and, 13
  br i1 %cmp, label %land.lhs.true3, label %if.end

land.lhs.true3:                                   ; preds = %land.lhs.true2
  %sv_any = getelementptr inbounds %struct.gv* %gv, i64 0, i32 0
  %2 = load %struct.xpvgv** %sv_any, align 8, !tbaa !7
  %xgv_gp = getelementptr inbounds %struct.xpvgv* %2, i64 0, i32 7
  %3 = load %struct.gp** %xgv_gp, align 8, !tbaa !9
  %tobool4 = icmp eq %struct.gp* %3, null
  br i1 %tobool4, label %if.end, label %cond.end

cond.end:                                         ; preds = %land.lhs.true3
  %gp_io = getelementptr inbounds %struct.gp* %3, i64 0, i32 2
  %4 = load %struct.io** %gp_io, align 8, !tbaa !12
  %tobool7 = icmp eq %struct.io* %4, null
  br i1 %tobool7, label %if.end, label %land.lhs.true8

land.lhs.true8:                                   ; preds = %cond.end
  %sv_any9 = getelementptr inbounds %struct.io* %4, i64 0, i32 0
  %5 = load %struct.xpvio** %sv_any9, align 8, !tbaa !21
  %xio_ifp = getelementptr inbounds %struct.xpvio* %5, i64 0, i32 7
  %6 = load %struct._PerlIO*** %xio_ifp, align 8, !tbaa !23
  %tobool10 = icmp eq %struct._PerlIO** %6, null
  br i1 %tobool10, label %if.end, label %if.then

if.then:                                          ; preds = %land.lhs.true8
  %call = tail call i64 @Perl_PerlIO_tell(%struct._PerlIO** %6) #2
  br label %return

if.end:                                           ; preds = %entry, %land.lhs.true2, %land.lhs.true3, %land.lhs.true8, %cond.end
  %io.0 = phi %struct.io* [ %4, %land.lhs.true8 ], [ null, %cond.end ], [ null, %entry ], [ null, %land.lhs.true3 ], [ null, %land.lhs.true2 ]
  %7 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings = getelementptr inbounds %struct.cop* %7, i64 0, i32 14
  %8 = load %struct.sv** %cop_warnings, align 8, !tbaa !32
  %cmp11 = icmp eq %struct.sv* %8, null
  br i1 %cmp11, label %lor.lhs.false30, label %land.lhs.true12

land.lhs.true12:                                  ; preds = %if.end
  %9 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings13 = getelementptr inbounds %struct.cop* %9, i64 0, i32 14
  %10 = load %struct.sv** %cop_warnings13, align 8, !tbaa !32
  %cmp14 = icmp eq %struct.sv* %10, inttoptr (i64 48 to %struct.sv*)
  br i1 %cmp14, label %lor.lhs.false30, label %land.lhs.true15

land.lhs.true15:                                  ; preds = %land.lhs.true12
  %11 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings16 = getelementptr inbounds %struct.cop* %11, i64 0, i32 14
  %12 = load %struct.sv** %cop_warnings16, align 8, !tbaa !32
  %cmp17 = icmp eq %struct.sv* %12, inttoptr (i64 24 to %struct.sv*)
  br i1 %cmp17, label %if.then38, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true15
  %13 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings18 = getelementptr inbounds %struct.cop* %13, i64 0, i32 14
  %14 = load %struct.sv** %cop_warnings18, align 8, !tbaa !32
  %sv_any19 = getelementptr inbounds %struct.sv* %14, i64 0, i32 0
  %15 = load i8** %sv_any19, align 8, !tbaa !34
  %xpv_pv = bitcast i8* %15 to i8**
  %16 = load i8** %xpv_pv, align 8, !tbaa !35
  %arrayidx = getelementptr inbounds i8* %16, i64 2
  %17 = load i8* %arrayidx, align 1, !tbaa !31
  %and20 = and i8 %17, 64
  %tobool21 = icmp eq i8 %and20, 0
  br i1 %tobool21, label %lor.lhs.false22, label %if.then38

lor.lhs.false22:                                  ; preds = %lor.lhs.false
  %18 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings23 = getelementptr inbounds %struct.cop* %18, i64 0, i32 14
  %19 = load %struct.sv** %cop_warnings23, align 8, !tbaa !32
  %sv_any24 = getelementptr inbounds %struct.sv* %19, i64 0, i32 0
  %20 = load i8** %sv_any24, align 8, !tbaa !34
  %xpv_pv25 = bitcast i8* %20 to i8**
  %21 = load i8** %xpv_pv25, align 8, !tbaa !35
  %arrayidx26 = getelementptr inbounds i8* %21, i64 1
  %22 = load i8* %arrayidx26, align 1, !tbaa !31
  %and28 = and i8 %22, 16
  %tobool29 = icmp eq i8 %and28, 0
  br i1 %tobool29, label %lor.lhs.false30, label %if.then38

lor.lhs.false30:                                  ; preds = %lor.lhs.false22, %land.lhs.true12, %if.end
  %23 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings31 = getelementptr inbounds %struct.cop* %23, i64 0, i32 14
  %24 = load %struct.sv** %cop_warnings31, align 8, !tbaa !32
  %cmp32 = icmp eq %struct.sv* %24, null
  br i1 %cmp32, label %land.lhs.true34, label %if.end41

land.lhs.true34:                                  ; preds = %lor.lhs.false30
  %25 = load i8* @PL_dowarn, align 1, !tbaa !31
  %and36 = and i8 %25, 1
  %tobool37 = icmp eq i8 %and36, 0
  br i1 %tobool37, label %if.end41, label %if.then38

if.then38:                                        ; preds = %lor.lhs.false22, %lor.lhs.false, %land.lhs.true34, %land.lhs.true15
  %26 = load %struct.op** @PL_op, align 8, !tbaa !16
  %op_type = getelementptr inbounds %struct.op* %26, i64 0, i32 4
  %27 = load i16* %op_type, align 2, !tbaa !17
  %conv39 = zext i16 %27 to i32
  %call40 = tail call i32 (%struct.gv*, %struct.io*, i32, ...)* bitcast (i32 (...)* @report_evil_fh to i32 (%struct.gv*, %struct.io*, i32, ...)*)(%struct.gv* %gv, %struct.io* %io.0, i32 %conv39) #2
  br label %if.end41

if.end41:                                         ; preds = %land.lhs.true34, %if.then38, %lor.lhs.false30
  %call42 = tail call i32* @__errno_location() #2
  store i32 9, i32* %call42, align 4, !tbaa !14
  br label %return

return:                                           ; preds = %if.end41, %if.then
  %retval.0 = phi i64 [ %call, %if.then ], [ -1, %if.end41 ]
  ret i64 %retval.0
}

declare i64 @Perl_PerlIO_tell(%struct._PerlIO**) #1

; Function Attrs: nounwind uwtable
define signext i8 @Perl_do_seek(%struct.gv* %gv, i64 %pos, i32 %whence) #0 {
entry:
  %tobool = icmp eq %struct.gv* %gv, null
  br i1 %tobool, label %if.end, label %land.lhs.true2

land.lhs.true2:                                   ; preds = %entry
  %0 = getelementptr inbounds %struct.gv* %gv, i64 0, i32 2
  %1 = load i64* %0, align 8, !tbaa !1
  %and = and i64 %1, 255
  %cmp = icmp eq i64 %and, 13
  br i1 %cmp, label %land.lhs.true3, label %if.end

land.lhs.true3:                                   ; preds = %land.lhs.true2
  %sv_any = getelementptr inbounds %struct.gv* %gv, i64 0, i32 0
  %2 = load %struct.xpvgv** %sv_any, align 8, !tbaa !7
  %xgv_gp = getelementptr inbounds %struct.xpvgv* %2, i64 0, i32 7
  %3 = load %struct.gp** %xgv_gp, align 8, !tbaa !9
  %tobool4 = icmp eq %struct.gp* %3, null
  br i1 %tobool4, label %if.end, label %cond.end

cond.end:                                         ; preds = %land.lhs.true3
  %gp_io = getelementptr inbounds %struct.gp* %3, i64 0, i32 2
  %4 = load %struct.io** %gp_io, align 8, !tbaa !12
  %tobool7 = icmp eq %struct.io* %4, null
  br i1 %tobool7, label %if.end, label %land.lhs.true8

land.lhs.true8:                                   ; preds = %cond.end
  %sv_any9 = getelementptr inbounds %struct.io* %4, i64 0, i32 0
  %5 = load %struct.xpvio** %sv_any9, align 8, !tbaa !21
  %xio_ifp = getelementptr inbounds %struct.xpvio* %5, i64 0, i32 7
  %6 = load %struct._PerlIO*** %xio_ifp, align 8, !tbaa !23
  %tobool10 = icmp eq %struct._PerlIO** %6, null
  br i1 %tobool10, label %if.end, label %if.then

if.then:                                          ; preds = %land.lhs.true8
  %call = tail call i32 @Perl_PerlIO_seek(%struct._PerlIO** %6, i64 %pos, i32 %whence) #2
  %call.lobit = lshr i32 %call, 31
  %7 = trunc i32 %call.lobit to i8
  %.not = xor i8 %7, 1
  br label %return

if.end:                                           ; preds = %entry, %land.lhs.true2, %land.lhs.true3, %land.lhs.true8, %cond.end
  %io.0 = phi %struct.io* [ %4, %land.lhs.true8 ], [ null, %cond.end ], [ null, %entry ], [ null, %land.lhs.true3 ], [ null, %land.lhs.true2 ]
  %8 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings = getelementptr inbounds %struct.cop* %8, i64 0, i32 14
  %9 = load %struct.sv** %cop_warnings, align 8, !tbaa !32
  %cmp13 = icmp eq %struct.sv* %9, null
  br i1 %cmp13, label %lor.lhs.false36, label %land.lhs.true15

land.lhs.true15:                                  ; preds = %if.end
  %10 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings16 = getelementptr inbounds %struct.cop* %10, i64 0, i32 14
  %11 = load %struct.sv** %cop_warnings16, align 8, !tbaa !32
  %cmp17 = icmp eq %struct.sv* %11, inttoptr (i64 48 to %struct.sv*)
  br i1 %cmp17, label %lor.lhs.false36, label %land.lhs.true19

land.lhs.true19:                                  ; preds = %land.lhs.true15
  %12 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings20 = getelementptr inbounds %struct.cop* %12, i64 0, i32 14
  %13 = load %struct.sv** %cop_warnings20, align 8, !tbaa !32
  %cmp21 = icmp eq %struct.sv* %13, inttoptr (i64 24 to %struct.sv*)
  br i1 %cmp21, label %if.then44, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true19
  %14 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings23 = getelementptr inbounds %struct.cop* %14, i64 0, i32 14
  %15 = load %struct.sv** %cop_warnings23, align 8, !tbaa !32
  %sv_any24 = getelementptr inbounds %struct.sv* %15, i64 0, i32 0
  %16 = load i8** %sv_any24, align 8, !tbaa !34
  %xpv_pv = bitcast i8* %16 to i8**
  %17 = load i8** %xpv_pv, align 8, !tbaa !35
  %arrayidx = getelementptr inbounds i8* %17, i64 2
  %18 = load i8* %arrayidx, align 1, !tbaa !31
  %and26 = and i8 %18, 64
  %tobool27 = icmp eq i8 %and26, 0
  br i1 %tobool27, label %lor.lhs.false28, label %if.then44

lor.lhs.false28:                                  ; preds = %lor.lhs.false
  %19 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings29 = getelementptr inbounds %struct.cop* %19, i64 0, i32 14
  %20 = load %struct.sv** %cop_warnings29, align 8, !tbaa !32
  %sv_any30 = getelementptr inbounds %struct.sv* %20, i64 0, i32 0
  %21 = load i8** %sv_any30, align 8, !tbaa !34
  %xpv_pv31 = bitcast i8* %21 to i8**
  %22 = load i8** %xpv_pv31, align 8, !tbaa !35
  %arrayidx32 = getelementptr inbounds i8* %22, i64 1
  %23 = load i8* %arrayidx32, align 1, !tbaa !31
  %and34 = and i8 %23, 16
  %tobool35 = icmp eq i8 %and34, 0
  br i1 %tobool35, label %lor.lhs.false36, label %if.then44

lor.lhs.false36:                                  ; preds = %lor.lhs.false28, %land.lhs.true15, %if.end
  %24 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings37 = getelementptr inbounds %struct.cop* %24, i64 0, i32 14
  %25 = load %struct.sv** %cop_warnings37, align 8, !tbaa !32
  %cmp38 = icmp eq %struct.sv* %25, null
  br i1 %cmp38, label %land.lhs.true40, label %if.end47

land.lhs.true40:                                  ; preds = %lor.lhs.false36
  %26 = load i8* @PL_dowarn, align 1, !tbaa !31
  %and42 = and i8 %26, 1
  %tobool43 = icmp eq i8 %and42, 0
  br i1 %tobool43, label %if.end47, label %if.then44

if.then44:                                        ; preds = %lor.lhs.false28, %lor.lhs.false, %land.lhs.true40, %land.lhs.true19
  %27 = load %struct.op** @PL_op, align 8, !tbaa !16
  %op_type = getelementptr inbounds %struct.op* %27, i64 0, i32 4
  %28 = load i16* %op_type, align 2, !tbaa !17
  %conv45 = zext i16 %28 to i32
  %call46 = tail call i32 (%struct.gv*, %struct.io*, i32, ...)* bitcast (i32 (...)* @report_evil_fh to i32 (%struct.gv*, %struct.io*, i32, ...)*)(%struct.gv* %gv, %struct.io* %io.0, i32 %conv45) #2
  br label %if.end47

if.end47:                                         ; preds = %land.lhs.true40, %if.then44, %lor.lhs.false36
  %call48 = tail call i32* @__errno_location() #2
  store i32 9, i32* %call48, align 4, !tbaa !14
  br label %return

return:                                           ; preds = %if.end47, %if.then
  %retval.0 = phi i8 [ %.not, %if.then ], [ 0, %if.end47 ]
  ret i8 %retval.0
}

declare i32 @Perl_PerlIO_seek(%struct._PerlIO**, i64, i32) #1

; Function Attrs: nounwind uwtable
define i64 @Perl_do_sysseek(%struct.gv* %gv, i64 %pos, i32 %whence) #0 {
entry:
  %tobool = icmp eq %struct.gv* %gv, null
  br i1 %tobool, label %if.end, label %land.lhs.true2

land.lhs.true2:                                   ; preds = %entry
  %0 = getelementptr inbounds %struct.gv* %gv, i64 0, i32 2
  %1 = load i64* %0, align 8, !tbaa !1
  %and = and i64 %1, 255
  %cmp = icmp eq i64 %and, 13
  br i1 %cmp, label %land.lhs.true3, label %if.end

land.lhs.true3:                                   ; preds = %land.lhs.true2
  %sv_any = getelementptr inbounds %struct.gv* %gv, i64 0, i32 0
  %2 = load %struct.xpvgv** %sv_any, align 8, !tbaa !7
  %xgv_gp = getelementptr inbounds %struct.xpvgv* %2, i64 0, i32 7
  %3 = load %struct.gp** %xgv_gp, align 8, !tbaa !9
  %tobool4 = icmp eq %struct.gp* %3, null
  br i1 %tobool4, label %if.end, label %cond.end

cond.end:                                         ; preds = %land.lhs.true3
  %gp_io = getelementptr inbounds %struct.gp* %3, i64 0, i32 2
  %4 = load %struct.io** %gp_io, align 8, !tbaa !12
  %tobool7 = icmp eq %struct.io* %4, null
  br i1 %tobool7, label %if.end, label %land.lhs.true8

land.lhs.true8:                                   ; preds = %cond.end
  %sv_any9 = getelementptr inbounds %struct.io* %4, i64 0, i32 0
  %5 = load %struct.xpvio** %sv_any9, align 8, !tbaa !21
  %xio_ifp = getelementptr inbounds %struct.xpvio* %5, i64 0, i32 7
  %6 = load %struct._PerlIO*** %xio_ifp, align 8, !tbaa !23
  %tobool10 = icmp eq %struct._PerlIO** %6, null
  br i1 %tobool10, label %if.end, label %if.then

if.then:                                          ; preds = %land.lhs.true8
  %call = tail call i32 @Perl_PerlIO_fileno(%struct._PerlIO** %6) #2
  %call11 = tail call i64 @lseek(i32 %call, i64 %pos, i32 %whence) #2
  br label %return

if.end:                                           ; preds = %entry, %land.lhs.true2, %land.lhs.true3, %land.lhs.true8, %cond.end
  %io.0 = phi %struct.io* [ %4, %land.lhs.true8 ], [ null, %cond.end ], [ null, %entry ], [ null, %land.lhs.true3 ], [ null, %land.lhs.true2 ]
  %7 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings = getelementptr inbounds %struct.cop* %7, i64 0, i32 14
  %8 = load %struct.sv** %cop_warnings, align 8, !tbaa !32
  %cmp12 = icmp eq %struct.sv* %8, null
  br i1 %cmp12, label %lor.lhs.false31, label %land.lhs.true13

land.lhs.true13:                                  ; preds = %if.end
  %9 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings14 = getelementptr inbounds %struct.cop* %9, i64 0, i32 14
  %10 = load %struct.sv** %cop_warnings14, align 8, !tbaa !32
  %cmp15 = icmp eq %struct.sv* %10, inttoptr (i64 48 to %struct.sv*)
  br i1 %cmp15, label %lor.lhs.false31, label %land.lhs.true16

land.lhs.true16:                                  ; preds = %land.lhs.true13
  %11 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings17 = getelementptr inbounds %struct.cop* %11, i64 0, i32 14
  %12 = load %struct.sv** %cop_warnings17, align 8, !tbaa !32
  %cmp18 = icmp eq %struct.sv* %12, inttoptr (i64 24 to %struct.sv*)
  br i1 %cmp18, label %if.then39, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true16
  %13 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings19 = getelementptr inbounds %struct.cop* %13, i64 0, i32 14
  %14 = load %struct.sv** %cop_warnings19, align 8, !tbaa !32
  %sv_any20 = getelementptr inbounds %struct.sv* %14, i64 0, i32 0
  %15 = load i8** %sv_any20, align 8, !tbaa !34
  %xpv_pv = bitcast i8* %15 to i8**
  %16 = load i8** %xpv_pv, align 8, !tbaa !35
  %arrayidx = getelementptr inbounds i8* %16, i64 2
  %17 = load i8* %arrayidx, align 1, !tbaa !31
  %and21 = and i8 %17, 64
  %tobool22 = icmp eq i8 %and21, 0
  br i1 %tobool22, label %lor.lhs.false23, label %if.then39

lor.lhs.false23:                                  ; preds = %lor.lhs.false
  %18 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings24 = getelementptr inbounds %struct.cop* %18, i64 0, i32 14
  %19 = load %struct.sv** %cop_warnings24, align 8, !tbaa !32
  %sv_any25 = getelementptr inbounds %struct.sv* %19, i64 0, i32 0
  %20 = load i8** %sv_any25, align 8, !tbaa !34
  %xpv_pv26 = bitcast i8* %20 to i8**
  %21 = load i8** %xpv_pv26, align 8, !tbaa !35
  %arrayidx27 = getelementptr inbounds i8* %21, i64 1
  %22 = load i8* %arrayidx27, align 1, !tbaa !31
  %and29 = and i8 %22, 16
  %tobool30 = icmp eq i8 %and29, 0
  br i1 %tobool30, label %lor.lhs.false31, label %if.then39

lor.lhs.false31:                                  ; preds = %lor.lhs.false23, %land.lhs.true13, %if.end
  %23 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings32 = getelementptr inbounds %struct.cop* %23, i64 0, i32 14
  %24 = load %struct.sv** %cop_warnings32, align 8, !tbaa !32
  %cmp33 = icmp eq %struct.sv* %24, null
  br i1 %cmp33, label %land.lhs.true35, label %if.end42

land.lhs.true35:                                  ; preds = %lor.lhs.false31
  %25 = load i8* @PL_dowarn, align 1, !tbaa !31
  %and37 = and i8 %25, 1
  %tobool38 = icmp eq i8 %and37, 0
  br i1 %tobool38, label %if.end42, label %if.then39

if.then39:                                        ; preds = %lor.lhs.false23, %lor.lhs.false, %land.lhs.true35, %land.lhs.true16
  %26 = load %struct.op** @PL_op, align 8, !tbaa !16
  %op_type = getelementptr inbounds %struct.op* %26, i64 0, i32 4
  %27 = load i16* %op_type, align 2, !tbaa !17
  %conv40 = zext i16 %27 to i32
  %call41 = tail call i32 (%struct.gv*, %struct.io*, i32, ...)* bitcast (i32 (...)* @report_evil_fh to i32 (%struct.gv*, %struct.io*, i32, ...)*)(%struct.gv* %gv, %struct.io* %io.0, i32 %conv40) #2
  br label %if.end42

if.end42:                                         ; preds = %land.lhs.true35, %if.then39, %lor.lhs.false31
  %call43 = tail call i32* @__errno_location() #2
  store i32 9, i32* %call43, align 4, !tbaa !14
  br label %return

return:                                           ; preds = %if.end42, %if.then
  %retval.0 = phi i64 [ %call11, %if.then ], [ -1, %if.end42 ]
  ret i64 %retval.0
}

declare i64 @lseek(i32, i64, i32) #1

; Function Attrs: nounwind uwtable
define i32 @Perl_mode_from_discipline(%struct.sv* %discp) #0 {
entry:
  %len = alloca i64, align 8
  %tobool = icmp eq %struct.sv* %discp, null
  br i1 %tobool, label %if.end130, label %if.then

if.then:                                          ; preds = %entry
  %sv_flags = getelementptr inbounds %struct.sv* %discp, i64 0, i32 2
  %0 = load i64* %sv_flags, align 8, !tbaa !1
  %and = and i64 %0, 262144
  %cmp = icmp eq i64 %and, 0
  br i1 %cmp, label %cond.false, label %cond.true

cond.true:                                        ; preds = %if.then
  %sv_any = getelementptr inbounds %struct.sv* %discp, i64 0, i32 0
  %1 = load i8** %sv_any, align 8, !tbaa !34
  %xpv_cur = getelementptr inbounds i8* %1, i64 8
  %2 = bitcast i8* %xpv_cur to i64*
  %3 = load i64* %2, align 8, !tbaa !48
  store i64 %3, i64* %len, align 8, !tbaa !26
  %xpv_pv = bitcast i8* %1 to i8**
  %4 = load i8** %xpv_pv, align 8, !tbaa !35
  br label %while.cond

cond.false:                                       ; preds = %if.then
  %call = call i8* @Perl_sv_2pv_flags(%struct.sv* %discp, i64* %len, i64 2) #2
  br label %while.cond

while.cond:                                       ; preds = %if.then96, %if.then47, %if.end126, %if.then119, %cond.true, %cond.false
  %s.0 = phi i8* [ %4, %cond.true ], [ %call, %cond.false ], [ %end.0, %if.end126 ], [ %arrayidx64, %if.then96 ], [ %arrayidx16, %if.then47 ], [ %incdec.ptr, %if.then119 ]
  %5 = load i8* %s.0, align 1, !tbaa !31
  switch i8 %5, label %while.cond.fail_discipline_crit_edge [
    i8 0, label %if.end130
    i8 58, label %if.then5
    i8 32, label %if.then119
    i8 9, label %if.then119
    i8 10, label %if.then119
    i8 13, label %if.then119
    i8 12, label %if.then119
  ]

while.cond.fail_discipline_crit_edge:             ; preds = %while.cond
  %add.ptr121.pre = getelementptr inbounds i8* %s.0, i64 1
  br label %fail_discipline

if.then5:                                         ; preds = %while.cond
  %arrayidx = getelementptr inbounds i8* %s.0, i64 1
  %6 = load i8* %arrayidx, align 1, !tbaa !31
  %conv6 = sext i8 %6 to i32
  switch i32 %conv6, label %fail_discipline [
    i32 114, label %sw.bb
    i32 99, label %if.then5.sw.bb48_crit_edge
  ]

if.then5.sw.bb48_crit_edge:                       ; preds = %if.then5
  %arrayidx49.phi.trans.insert = getelementptr inbounds i8* %s.0, i64 2
  %.pre181 = load i8* %arrayidx49.phi.trans.insert, align 1, !tbaa !31
  br label %sw.bb48

sw.bb:                                            ; preds = %if.then5
  %arrayidx7 = getelementptr inbounds i8* %s.0, i64 2
  %7 = load i8* %arrayidx7, align 1, !tbaa !31
  %cmp9 = icmp eq i8 %7, 97
  br i1 %cmp9, label %land.lhs.true, label %sw.bb48

land.lhs.true:                                    ; preds = %sw.bb
  %arrayidx11 = getelementptr inbounds i8* %s.0, i64 3
  %8 = load i8* %arrayidx11, align 1, !tbaa !31
  %cmp13 = icmp eq i8 %8, 119
  br i1 %cmp13, label %land.lhs.true15, label %fail_discipline

land.lhs.true15:                                  ; preds = %land.lhs.true
  %arrayidx16 = getelementptr inbounds i8* %s.0, i64 4
  %9 = load i8* %arrayidx16, align 1, !tbaa !31
  switch i8 %9, label %fail_discipline [
    i8 0, label %if.then47
    i8 58, label %if.then47
    i8 32, label %if.then47
    i8 9, label %if.then47
    i8 10, label %if.then47
    i8 13, label %if.then47
    i8 12, label %if.then47
  ]

if.then47:                                        ; preds = %land.lhs.true15, %land.lhs.true15, %land.lhs.true15, %land.lhs.true15, %land.lhs.true15, %land.lhs.true15, %land.lhs.true15
  %10 = load i64* %len, align 8
  %sub = add i64 %10, -4
  store i64 %sub, i64* %len, align 8, !tbaa !26
  br label %while.cond

sw.bb48:                                          ; preds = %if.then5.sw.bb48_crit_edge, %sw.bb
  %11 = phi i8 [ %.pre181, %if.then5.sw.bb48_crit_edge ], [ %7, %sw.bb ]
  %cmp51 = icmp eq i8 %11, 114
  br i1 %cmp51, label %land.lhs.true53, label %fail_discipline

land.lhs.true53:                                  ; preds = %sw.bb48
  %arrayidx54 = getelementptr inbounds i8* %s.0, i64 3
  %12 = load i8* %arrayidx54, align 1, !tbaa !31
  %cmp56 = icmp eq i8 %12, 108
  br i1 %cmp56, label %land.lhs.true58, label %fail_discipline

land.lhs.true58:                                  ; preds = %land.lhs.true53
  %arrayidx59 = getelementptr inbounds i8* %s.0, i64 4
  %13 = load i8* %arrayidx59, align 1, !tbaa !31
  %cmp61 = icmp eq i8 %13, 102
  br i1 %cmp61, label %land.lhs.true63, label %fail_discipline

land.lhs.true63:                                  ; preds = %land.lhs.true58
  %arrayidx64 = getelementptr inbounds i8* %s.0, i64 5
  %14 = load i8* %arrayidx64, align 1, !tbaa !31
  switch i8 %14, label %fail_discipline [
    i8 0, label %if.then96
    i8 58, label %if.then96
    i8 32, label %if.then96
    i8 9, label %if.then96
    i8 10, label %if.then96
    i8 13, label %if.then96
    i8 12, label %if.then96
  ]

if.then96:                                        ; preds = %land.lhs.true63, %land.lhs.true63, %land.lhs.true63, %land.lhs.true63, %land.lhs.true63, %land.lhs.true63, %land.lhs.true63
  %15 = load i64* %len, align 8
  %sub98 = add i64 %15, -5
  store i64 %sub98, i64* %len, align 8, !tbaa !26
  br label %while.cond

if.then119:                                       ; preds = %while.cond, %while.cond, %while.cond, %while.cond, %while.cond
  %16 = load i64* %len, align 8
  %incdec.ptr = getelementptr inbounds i8* %s.0, i64 1
  %dec = add i64 %16, -1
  store i64 %dec, i64* %len, align 8, !tbaa !26
  br label %while.cond

fail_discipline:                                  ; preds = %land.lhs.true, %land.lhs.true15, %while.cond.fail_discipline_crit_edge, %land.lhs.true63, %if.then5, %land.lhs.true58, %land.lhs.true53, %sw.bb48
  %add.ptr121.pre-phi = phi i8* [ %add.ptr121.pre, %while.cond.fail_discipline_crit_edge ], [ %arrayidx, %land.lhs.true63 ], [ %arrayidx, %if.then5 ], [ %arrayidx, %land.lhs.true58 ], [ %arrayidx, %land.lhs.true53 ], [ %arrayidx, %sw.bb48 ], [ %arrayidx, %land.lhs.true15 ], [ %arrayidx, %land.lhs.true ]
  %call122 = call i8* @strchr(i8* %add.ptr121.pre-phi, i32 58) #2
  %tobool123 = icmp eq i8* %call122, null
  %17 = load i64* %len, align 8, !tbaa !26
  br i1 %tobool123, label %if.then124, label %if.end126

if.then124:                                       ; preds = %fail_discipline
  %add.ptr125 = getelementptr inbounds i8* %s.0, i64 %17
  br label %if.end126

if.end126:                                        ; preds = %fail_discipline, %if.then124
  %end.0 = phi i8* [ %add.ptr125, %if.then124 ], [ %call122, %fail_discipline ]
  %sub.ptr.lhs.cast = ptrtoint i8* %end.0 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %s.0 to i64
  %sub.ptr.sub167 = sub i64 %sub.ptr.rhs.cast, %sub.ptr.lhs.cast
  %sub127 = add i64 %sub.ptr.sub167, %17
  store i64 %sub127, i64* %len, align 8, !tbaa !26
  br label %while.cond

if.end130:                                        ; preds = %while.cond, %entry
  ret i32 0
}

; Function Attrs: nounwind uwtable
define i32 @Perl_do_binmode(%struct._PerlIO** %fp, i32 %iotype, i32 %mode) #0 {
entry:
  %call = tail call i32 @PerlIO_binmode(%struct._PerlIO** %fp, i32 %iotype, i32 %mode, i8* getelementptr inbounds ([5 x i8]* @.str27, i64 0, i64 0)) #2
  ret i32 %call
}

declare i32 @PerlIO_binmode(%struct._PerlIO**, i32, i32, i8*) #1

; Function Attrs: nounwind uwtable
define signext i8 @Perl_do_print(%struct.sv* %sv, %struct._PerlIO** %fp) #0 {
entry:
  %len = alloca i64, align 8
  %tobool = icmp eq %struct.sv* %sv, null
  br i1 %tobool, label %return, label %if.end

if.end:                                           ; preds = %entry
  %0 = load i8** @PL_ofmt, align 8, !tbaa !16
  %tobool1 = icmp eq i8* %0, null
  %sv_flags41.pre = getelementptr inbounds %struct.sv* %sv, i64 0, i32 2
  br i1 %tobool1, label %if.end40, label %if.then2

if.then2:                                         ; preds = %if.end
  %1 = load i64* %sv_flags41.pre, align 8, !tbaa !1
  %and = and i64 %1, 8192
  %tobool3 = icmp eq i64 %and, 0
  br i1 %tobool3, label %if.end5, label %if.then4

if.then4:                                         ; preds = %if.then2
  %call = call i32 @Perl_mg_get(%struct.sv* %sv) #2
  %.pre195 = load i64* %sv_flags41.pre, align 8, !tbaa !1
  br label %if.end5

if.end5:                                          ; preds = %if.then2, %if.then4
  %2 = phi i64 [ %1, %if.then2 ], [ %.pre195, %if.then4 ]
  %and7 = and i64 %2, 65536
  %tobool8 = icmp eq i64 %and7, 0
  br i1 %tobool8, label %if.end16, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end5
  %sv_any = getelementptr inbounds %struct.sv* %sv, i64 0, i32 0
  %3 = load i8** %sv_any, align 8, !tbaa !34
  %xiv_iv = getelementptr inbounds i8* %3, i64 24
  %4 = bitcast i8* %xiv_iv to i64*
  %5 = load i64* %4, align 8, !tbaa !42
  %cmp = icmp eq i64 %5, 0
  br i1 %cmp, label %if.end16, label %if.then9

if.then9:                                         ; preds = %land.lhs.true
  %6 = load i8** @PL_ofmt, align 8, !tbaa !16
  %conv = sitofp i64 %5 to double
  %call12 = call i32 (%struct._PerlIO**, i8*, ...)* @PerlIO_printf(%struct._PerlIO** %fp, i8* %6, double %conv) #2
  %call13 = call i32 @Perl_PerlIO_error(%struct._PerlIO** %fp) #2
  %lnot = icmp eq i32 %call13, 0
  %conv15 = zext i1 %lnot to i8
  br label %return

if.end16:                                         ; preds = %land.lhs.true, %if.end5
  %and18 = and i64 %2, 131072
  %tobool19 = icmp eq i64 %and18, 0
  br i1 %tobool19, label %lor.lhs.false, label %land.lhs.true20

land.lhs.true20:                                  ; preds = %if.end16
  %sv_any21 = getelementptr inbounds %struct.sv* %sv, i64 0, i32 0
  %7 = load i8** %sv_any21, align 8, !tbaa !34
  %xnv_nv = getelementptr inbounds i8* %7, i64 32
  %8 = bitcast i8* %xnv_nv to double*
  %9 = load double* %8, align 8, !tbaa !56
  %cmp22 = fcmp une double %9, 0.000000e+00
  br i1 %cmp22, label %if.then30, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end16, %land.lhs.true20
  %call24 = call i64 @Perl_looks_like_number(%struct.sv* %sv) #2
  %tobool25 = icmp eq i64 %call24, 0
  br i1 %tobool25, label %if.end40, label %land.lhs.true26

land.lhs.true26:                                  ; preds = %lor.lhs.false
  %call27 = call double @Perl_sv_2nv(%struct.sv* %sv) #2
  %cmp28 = fcmp une double %call27, 0.000000e+00
  br i1 %cmp28, label %land.lhs.true26.if.then30_crit_edge, label %if.end40

land.lhs.true26.if.then30_crit_edge:              ; preds = %land.lhs.true26
  %sv_any31.phi.trans.insert = getelementptr inbounds %struct.sv* %sv, i64 0, i32 0
  %.pre196 = load i8** %sv_any31.phi.trans.insert, align 8, !tbaa !34
  %xnv_nv32.phi.trans.insert = getelementptr inbounds i8* %.pre196, i64 32
  %.phi.trans.insert = bitcast i8* %xnv_nv32.phi.trans.insert to double*
  %.pre197 = load double* %.phi.trans.insert, align 8, !tbaa !56
  br label %if.then30

if.then30:                                        ; preds = %land.lhs.true26.if.then30_crit_edge, %land.lhs.true20
  %10 = phi double [ %.pre197, %land.lhs.true26.if.then30_crit_edge ], [ %9, %land.lhs.true20 ]
  %11 = load i8** @PL_ofmt, align 8, !tbaa !16
  %call33 = call i32 (%struct._PerlIO**, i8*, ...)* @PerlIO_printf(%struct._PerlIO** %fp, i8* %11, double %10) #2
  %call34 = call i32 @Perl_PerlIO_error(%struct._PerlIO** %fp) #2
  %lnot36 = icmp eq i32 %call34, 0
  %conv38 = zext i1 %lnot36 to i8
  br label %return

if.end40:                                         ; preds = %if.end, %lor.lhs.false, %land.lhs.true26
  %12 = load i64* %sv_flags41.pre, align 8, !tbaa !1
  %and42 = and i64 %12, 255
  switch i64 %and42, label %sw.default [
    i64 0, label %sw.bb
    i64 1, label %sw.bb70
  ]

sw.bb:                                            ; preds = %if.end40
  %13 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings = getelementptr inbounds %struct.cop* %13, i64 0, i32 14
  %14 = load %struct.sv** %cop_warnings, align 8, !tbaa !32
  %cmp43 = icmp eq %struct.sv* %14, null
  br i1 %cmp43, label %lor.lhs.false59, label %land.lhs.true45

land.lhs.true45:                                  ; preds = %sw.bb
  %15 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings46 = getelementptr inbounds %struct.cop* %15, i64 0, i32 14
  %16 = load %struct.sv** %cop_warnings46, align 8, !tbaa !32
  %cmp47 = icmp eq %struct.sv* %16, inttoptr (i64 48 to %struct.sv*)
  br i1 %cmp47, label %lor.lhs.false59, label %land.lhs.true49

land.lhs.true49:                                  ; preds = %land.lhs.true45
  %17 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings50 = getelementptr inbounds %struct.cop* %17, i64 0, i32 14
  %18 = load %struct.sv** %cop_warnings50, align 8, !tbaa !32
  %cmp51 = icmp eq %struct.sv* %18, inttoptr (i64 24 to %struct.sv*)
  br i1 %cmp51, label %if.then67, label %lor.lhs.false53

lor.lhs.false53:                                  ; preds = %land.lhs.true49
  %19 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings54 = getelementptr inbounds %struct.cop* %19, i64 0, i32 14
  %20 = load %struct.sv** %cop_warnings54, align 8, !tbaa !32
  %sv_any55 = getelementptr inbounds %struct.sv* %20, i64 0, i32 0
  %21 = load i8** %sv_any55, align 8, !tbaa !34
  %xpv_pv = bitcast i8* %21 to i8**
  %22 = load i8** %xpv_pv, align 8, !tbaa !35
  %arrayidx = getelementptr inbounds i8* %22, i64 10
  %23 = load i8* %arrayidx, align 1, !tbaa !31
  %and57 = and i8 %23, 4
  %tobool58 = icmp eq i8 %and57, 0
  br i1 %tobool58, label %lor.lhs.false59, label %if.then67

lor.lhs.false59:                                  ; preds = %lor.lhs.false53, %land.lhs.true45, %sw.bb
  %24 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings60 = getelementptr inbounds %struct.cop* %24, i64 0, i32 14
  %25 = load %struct.sv** %cop_warnings60, align 8, !tbaa !32
  %cmp61 = icmp eq %struct.sv* %25, null
  br i1 %cmp61, label %land.lhs.true63, label %return

land.lhs.true63:                                  ; preds = %lor.lhs.false59
  %26 = load i8* @PL_dowarn, align 1, !tbaa !31
  %and65 = and i8 %26, 1
  %tobool66 = icmp eq i8 %and65, 0
  br i1 %tobool66, label %return, label %if.then67

if.then67:                                        ; preds = %lor.lhs.false53, %land.lhs.true63, %land.lhs.true49
  %call68 = call i32 (...)* @report_uninit() #2
  br label %return

sw.bb70:                                          ; preds = %if.end40
  %and72 = and i64 %12, 65536
  %tobool73 = icmp eq i64 %and72, 0
  br i1 %tobool73, label %sw.default, label %if.then74

if.then74:                                        ; preds = %sw.bb70
  %and76 = and i64 %12, 8192
  %tobool77 = icmp eq i64 %and76, 0
  br i1 %tobool77, label %if.end80, label %if.then78

if.then78:                                        ; preds = %if.then74
  %call79 = call i32 @Perl_mg_get(%struct.sv* %sv) #2
  %.pre = load i64* %sv_flags41.pre, align 8, !tbaa !1
  br label %if.end80

if.end80:                                         ; preds = %if.then74, %if.then78
  %27 = phi i64 [ %12, %if.then74 ], [ %.pre, %if.then78 ]
  %and82 = and i64 %27, 2147483648
  %tobool83 = icmp eq i64 %and82, 0
  %sv_any85 = getelementptr inbounds %struct.sv* %sv, i64 0, i32 0
  %28 = load i8** %sv_any85, align 8, !tbaa !34
  %xiv_iv88 = getelementptr inbounds i8* %28, i64 24
  %29 = bitcast i8* %xiv_iv88 to i64*
  %30 = load i64* %29, align 8, !tbaa !42
  br i1 %tobool83, label %if.else, label %if.then84

if.then84:                                        ; preds = %if.end80
  %call86 = call i32 (%struct._PerlIO**, i8*, ...)* @PerlIO_printf(%struct._PerlIO** %fp, i8* getelementptr inbounds ([4 x i8]* @.str28, i64 0, i64 0), i64 %30) #2
  br label %if.end90

if.else:                                          ; preds = %if.end80
  %call89 = call i32 (%struct._PerlIO**, i8*, ...)* @PerlIO_printf(%struct._PerlIO** %fp, i8* getelementptr inbounds ([4 x i8]* @.str29, i64 0, i64 0), i64 %30) #2
  br label %if.end90

if.end90:                                         ; preds = %if.else, %if.then84
  %call91 = call i32 @Perl_PerlIO_error(%struct._PerlIO** %fp) #2
  %lnot93 = icmp eq i32 %call91, 0
  %conv95 = zext i1 %lnot93 to i8
  br label %return

sw.default:                                       ; preds = %sw.bb70, %if.end40
  %call97 = call i32 @PerlIO_isutf8(%struct._PerlIO** %fp) #2
  %tobool98 = icmp eq i32 %call97, 0
  %31 = load i64* %sv_flags41.pre, align 8, !tbaa !1
  %and101 = and i64 %31, 536870912
  %tobool102 = icmp ne i64 %and101, 0
  br i1 %tobool98, label %if.else107, label %if.then99

if.then99:                                        ; preds = %sw.default
  br i1 %tobool102, label %if.end142, label %if.then103

if.then103:                                       ; preds = %if.then99
  %call104 = call %struct.sv* @Perl_sv_mortalcopy(%struct.sv* %sv) #2
  %call105 = call i64 @Perl_sv_utf8_upgrade_flags(%struct.sv* %call104, i64 10) #2
  br label %if.end142

if.else107:                                       ; preds = %sw.default
  br i1 %tobool102, label %land.lhs.true111, label %if.end142

land.lhs.true111:                                 ; preds = %if.else107
  %32 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %op_private = getelementptr inbounds %struct.cop* %32, i64 0, i32 7
  %33 = load i8* %op_private, align 1, !tbaa !58
  %and113 = and i8 %33, 8
  %tobool114 = icmp eq i8 %and113, 0
  br i1 %tobool114, label %if.then115, label %if.end142

if.then115:                                       ; preds = %land.lhs.true111
  %call116 = call %struct.sv* @Perl_sv_mortalcopy(%struct.sv* %sv) #2
  %call117 = call signext i8 @Perl_sv_utf8_downgrade(%struct.sv* %call116, i8 signext 1) #2
  %tobool118 = icmp eq i8 %call117, 0
  br i1 %tobool118, label %land.lhs.true119, label %if.end142

land.lhs.true119:                                 ; preds = %if.then115
  %34 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings120 = getelementptr inbounds %struct.cop* %34, i64 0, i32 14
  %35 = load %struct.sv** %cop_warnings120, align 8, !tbaa !32
  %cmp121 = icmp eq %struct.sv* %35, null
  br i1 %cmp121, label %if.then139, label %lor.lhs.false123

lor.lhs.false123:                                 ; preds = %land.lhs.true119
  %36 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings124 = getelementptr inbounds %struct.cop* %36, i64 0, i32 14
  %37 = load %struct.sv** %cop_warnings124, align 8, !tbaa !32
  %cmp125 = icmp eq %struct.sv* %37, inttoptr (i64 24 to %struct.sv*)
  br i1 %cmp125, label %if.then139, label %lor.lhs.false127

lor.lhs.false127:                                 ; preds = %lor.lhs.false123
  %38 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings128 = getelementptr inbounds %struct.cop* %38, i64 0, i32 14
  %39 = load %struct.sv** %cop_warnings128, align 8, !tbaa !32
  %cmp129 = icmp eq %struct.sv* %39, inttoptr (i64 48 to %struct.sv*)
  br i1 %cmp129, label %if.end142, label %land.lhs.true131

land.lhs.true131:                                 ; preds = %lor.lhs.false127
  %40 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings132 = getelementptr inbounds %struct.cop* %40, i64 0, i32 14
  %41 = load %struct.sv** %cop_warnings132, align 8, !tbaa !32
  %sv_any133 = getelementptr inbounds %struct.sv* %41, i64 0, i32 0
  %42 = load i8** %sv_any133, align 8, !tbaa !34
  %xpv_pv134 = bitcast i8* %42 to i8**
  %43 = load i8** %xpv_pv134, align 8, !tbaa !35
  %arrayidx135 = getelementptr inbounds i8* %43, i64 11
  %44 = load i8* %arrayidx135, align 1, !tbaa !31
  %and137 = and i8 %44, 1
  %tobool138 = icmp eq i8 %and137, 0
  br i1 %tobool138, label %if.end142, label %if.then139

if.then139:                                       ; preds = %land.lhs.true131, %lor.lhs.false123, %land.lhs.true119
  call void (i64, i8*, ...)* @Perl_warner(i64 44, i8* getelementptr inbounds ([24 x i8]* @.str30, i64 0, i64 0)) #2
  br label %if.end142

if.end142:                                        ; preds = %land.lhs.true131, %lor.lhs.false127, %if.then115, %land.lhs.true111, %if.else107, %if.then139, %if.then99, %if.then103
  %sv.addr.0 = phi %struct.sv* [ %sv, %if.then99 ], [ %call104, %if.then103 ], [ %sv, %land.lhs.true111 ], [ %call116, %if.then115 ], [ %call116, %if.then139 ], [ %call116, %land.lhs.true131 ], [ %call116, %lor.lhs.false127 ], [ %sv, %if.else107 ]
  %sv_flags143 = getelementptr inbounds %struct.sv* %sv.addr.0, i64 0, i32 2
  %45 = load i64* %sv_flags143, align 8, !tbaa !1
  %and144 = and i64 %45, 262144
  %cmp145 = icmp eq i64 %and144, 0
  br i1 %cmp145, label %cond.false, label %cond.true

cond.true:                                        ; preds = %if.end142
  %sv_any147 = getelementptr inbounds %struct.sv* %sv.addr.0, i64 0, i32 0
  %46 = load i8** %sv_any147, align 8, !tbaa !34
  %xpv_cur = getelementptr inbounds i8* %46, i64 8
  %47 = bitcast i8* %xpv_cur to i64*
  %48 = load i64* %47, align 8, !tbaa !48
  store i64 %48, i64* %len, align 8, !tbaa !26
  %xpv_pv149 = bitcast i8* %46 to i8**
  %49 = load i8** %xpv_pv149, align 8, !tbaa !35
  br label %cond.end

cond.false:                                       ; preds = %if.end142
  %call150 = call i8* @Perl_sv_2pv_flags(%struct.sv* %sv.addr.0, i64* %len, i64 2) #2
  %.pr = load i64* %len, align 8, !tbaa !26
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %50 = phi i64 [ %.pr, %cond.false ], [ %48, %cond.true ]
  %cond = phi i8* [ %call150, %cond.false ], [ %49, %cond.true ]
  %tobool151 = icmp eq i64 %50, 0
  br i1 %tobool151, label %if.end157, label %land.lhs.true152

land.lhs.true152:                                 ; preds = %cond.end
  %call153 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %fp, i8* %cond, i64 %50) #2
  %cmp154 = icmp eq i64 %call153, 0
  br i1 %cmp154, label %return, label %if.end157

if.end157:                                        ; preds = %cond.end, %land.lhs.true152
  %call158 = call i32 @Perl_PerlIO_error(%struct._PerlIO** %fp) #2
  %lnot160 = icmp eq i32 %call158, 0
  %conv162 = zext i1 %lnot160 to i8
  br label %return

return:                                           ; preds = %land.lhs.true152, %lor.lhs.false59, %if.then67, %land.lhs.true63, %entry, %if.end157, %if.end90, %if.then30, %if.then9
  %retval.0 = phi i8 [ %conv15, %if.then9 ], [ %conv38, %if.then30 ], [ %conv162, %if.end157 ], [ %conv95, %if.end90 ], [ 1, %entry ], [ 1, %land.lhs.true63 ], [ 1, %if.then67 ], [ 1, %lor.lhs.false59 ], [ 0, %land.lhs.true152 ]
  ret i8 %retval.0
}

declare i32 @Perl_mg_get(%struct.sv*) #1

declare double @Perl_sv_2nv(%struct.sv*) #1

declare i32 @report_uninit(...) #1

declare i32 @PerlIO_isutf8(%struct._PerlIO**) #1

declare i64 @Perl_sv_utf8_upgrade_flags(%struct.sv*, i64) #1

declare %struct.sv* @Perl_sv_mortalcopy(%struct.sv*) #1

declare signext i8 @Perl_sv_utf8_downgrade(%struct.sv*, i8 signext) #1

declare i64 @Perl_PerlIO_write(%struct._PerlIO**, i8*, i64) #1

; Function Attrs: nounwind uwtable
define i64 @Perl_my_stat() #0 {
entry:
  %len = alloca i64, align 8
  %0 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !16
  %1 = load %struct.op** @PL_op, align 8, !tbaa !16
  %op_flags = getelementptr inbounds %struct.op* %1, i64 0, i32 6
  %2 = load i8* %op_flags, align 1, !tbaa !55
  %and = and i8 %2, 16
  %tobool = icmp eq i8 %and, 0
  br i1 %tobool, label %if.else61, label %if.then

if.then:                                          ; preds = %entry
  %3 = load %struct.sv*** @PL_stack_max, align 8, !tbaa !16
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %3 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %0 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %cmp = icmp slt i64 %sub.ptr.sub, 8
  br i1 %cmp, label %if.then2, label %if.end

if.then2:                                         ; preds = %if.then
  %call = call %struct.sv** @Perl_stack_grow(%struct.sv** %0, %struct.sv** %0, i32 1) #2
  %.pre159 = load %struct.op** @PL_op, align 8, !tbaa !16
  br label %if.end

if.end:                                           ; preds = %if.then2, %if.then
  %4 = phi %struct.op* [ %.pre159, %if.then2 ], [ %1, %if.then ]
  %op_sv = getelementptr inbounds %struct.op* %4, i64 1
  %5 = bitcast %struct.op* %op_sv to %struct.sv**
  %6 = load %struct.sv** %5, align 8, !tbaa !59
  br label %do_fstat

do_fstat:                                         ; preds = %land.lhs.true71, %if.else61, %if.end
  %gv.0.in = phi %struct.sv* [ %6, %if.end ], [ %40, %if.else61 ], [ %43, %land.lhs.true71 ]
  %gv.0 = bitcast %struct.sv* %gv.0.in to %struct.gv*
  %tobool3 = icmp eq %struct.sv* %gv.0.in, null
  br i1 %tobool3, label %if.else, label %land.lhs.true

land.lhs.true:                                    ; preds = %do_fstat
  %sv_flags = getelementptr inbounds %struct.sv* %gv.0.in, i64 0, i32 2
  %7 = load i64* %sv_flags, align 8, !tbaa !1
  %and4 = and i64 %7, 255
  %cmp5 = icmp eq i64 %and4, 13
  br i1 %cmp5, label %land.lhs.true7, label %if.else

land.lhs.true7:                                   ; preds = %land.lhs.true
  %sv_any = bitcast %struct.sv* %gv.0.in to %struct.xpvgv**
  %8 = load %struct.xpvgv** %sv_any, align 8, !tbaa !7
  %xgv_gp = getelementptr inbounds %struct.xpvgv* %8, i64 0, i32 7
  %9 = load %struct.gp** %xgv_gp, align 8, !tbaa !9
  %tobool8 = icmp eq %struct.gp* %9, null
  br i1 %tobool8, label %if.else, label %cond.end

cond.end:                                         ; preds = %land.lhs.true7
  %gp_io = getelementptr inbounds %struct.gp* %9, i64 0, i32 2
  %10 = load %struct.io** %gp_io, align 8, !tbaa !12
  %tobool11 = icmp eq %struct.io* %10, null
  br i1 %tobool11, label %if.else, label %land.lhs.true12

land.lhs.true12:                                  ; preds = %cond.end
  %sv_any13 = getelementptr inbounds %struct.io* %10, i64 0, i32 0
  %11 = load %struct.xpvio** %sv_any13, align 8, !tbaa !21
  %xio_ifp = getelementptr inbounds %struct.xpvio* %11, i64 0, i32 7
  %12 = load %struct._PerlIO*** %xio_ifp, align 8, !tbaa !23
  %tobool14 = icmp eq %struct._PerlIO** %12, null
  br i1 %tobool14, label %if.else, label %if.then15

if.then15:                                        ; preds = %land.lhs.true12
  store %struct.gv* %gv.0, %struct.gv** @PL_statgv, align 8, !tbaa !16
  %13 = load %struct.sv** @PL_statname, align 8, !tbaa !16
  call void @Perl_sv_setpv(%struct.sv* %13, i8* getelementptr inbounds ([1 x i8]* @.str3, i64 0, i64 0)) #2
  store i64 235, i64* @PL_laststype, align 8, !tbaa !26
  %14 = load %struct.xpvio** %sv_any13, align 8, !tbaa !21
  %xio_ifp17 = getelementptr inbounds %struct.xpvio* %14, i64 0, i32 7
  %15 = load %struct._PerlIO*** %xio_ifp17, align 8, !tbaa !23
  %call18 = call i32 @Perl_PerlIO_fileno(%struct._PerlIO** %15) #2
  %call19 = call i32 @fstat(i32 %call18, %struct.stat* @PL_statcache) #2
  store i32 %call19, i32* @PL_laststatval, align 4, !tbaa !14
  %conv20 = sext i32 %call19 to i64
  br label %return

if.else:                                          ; preds = %do_fstat, %land.lhs.true, %land.lhs.true7, %land.lhs.true12, %cond.end
  %cond158 = phi %struct.io* [ %10, %land.lhs.true12 ], [ null, %cond.end ], [ null, %land.lhs.true7 ], [ null, %land.lhs.true ], [ null, %do_fstat ]
  %16 = load %struct.gv** @PL_defgv, align 8, !tbaa !16
  %cmp21 = icmp eq %struct.gv* %gv.0, %16
  br i1 %cmp21, label %if.then23, label %if.end25

if.then23:                                        ; preds = %if.else
  %17 = load i32* @PL_laststatval, align 4, !tbaa !14
  %conv24 = sext i32 %17 to i64
  br label %return

if.end25:                                         ; preds = %if.else
  %18 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings = getelementptr inbounds %struct.cop* %18, i64 0, i32 14
  %19 = load %struct.sv** %cop_warnings, align 8, !tbaa !32
  %cmp26 = icmp eq %struct.sv* %19, null
  br i1 %cmp26, label %lor.lhs.false49, label %land.lhs.true28

land.lhs.true28:                                  ; preds = %if.end25
  %20 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings29 = getelementptr inbounds %struct.cop* %20, i64 0, i32 14
  %21 = load %struct.sv** %cop_warnings29, align 8, !tbaa !32
  %cmp30 = icmp eq %struct.sv* %21, inttoptr (i64 48 to %struct.sv*)
  br i1 %cmp30, label %lor.lhs.false49, label %land.lhs.true32

land.lhs.true32:                                  ; preds = %land.lhs.true28
  %22 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings33 = getelementptr inbounds %struct.cop* %22, i64 0, i32 14
  %23 = load %struct.sv** %cop_warnings33, align 8, !tbaa !32
  %cmp34 = icmp eq %struct.sv* %23, inttoptr (i64 24 to %struct.sv*)
  br i1 %cmp34, label %if.then57, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true32
  %24 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings36 = getelementptr inbounds %struct.cop* %24, i64 0, i32 14
  %25 = load %struct.sv** %cop_warnings36, align 8, !tbaa !32
  %sv_any37 = getelementptr inbounds %struct.sv* %25, i64 0, i32 0
  %26 = load i8** %sv_any37, align 8, !tbaa !34
  %xpv_pv = bitcast i8* %26 to i8**
  %27 = load i8** %xpv_pv, align 8, !tbaa !35
  %arrayidx = getelementptr inbounds i8* %27, i64 2
  %28 = load i8* %arrayidx, align 1, !tbaa !31
  %and39 = and i8 %28, 64
  %tobool40 = icmp eq i8 %and39, 0
  br i1 %tobool40, label %lor.lhs.false41, label %if.then57

lor.lhs.false41:                                  ; preds = %lor.lhs.false
  %29 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings42 = getelementptr inbounds %struct.cop* %29, i64 0, i32 14
  %30 = load %struct.sv** %cop_warnings42, align 8, !tbaa !32
  %sv_any43 = getelementptr inbounds %struct.sv* %30, i64 0, i32 0
  %31 = load i8** %sv_any43, align 8, !tbaa !34
  %xpv_pv44 = bitcast i8* %31 to i8**
  %32 = load i8** %xpv_pv44, align 8, !tbaa !35
  %arrayidx45 = getelementptr inbounds i8* %32, i64 1
  %33 = load i8* %arrayidx45, align 1, !tbaa !31
  %and47 = and i8 %33, 16
  %tobool48 = icmp eq i8 %and47, 0
  br i1 %tobool48, label %lor.lhs.false49, label %if.then57

lor.lhs.false49:                                  ; preds = %lor.lhs.false41, %land.lhs.true28, %if.end25
  %34 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings50 = getelementptr inbounds %struct.cop* %34, i64 0, i32 14
  %35 = load %struct.sv** %cop_warnings50, align 8, !tbaa !32
  %cmp51 = icmp eq %struct.sv* %35, null
  br i1 %cmp51, label %land.lhs.true53, label %if.end60

land.lhs.true53:                                  ; preds = %lor.lhs.false49
  %36 = load i8* @PL_dowarn, align 1, !tbaa !31
  %and55 = and i8 %36, 1
  %tobool56 = icmp eq i8 %and55, 0
  br i1 %tobool56, label %if.end60, label %if.then57

if.then57:                                        ; preds = %lor.lhs.false41, %lor.lhs.false, %land.lhs.true53, %land.lhs.true32
  %37 = load %struct.op** @PL_op, align 8, !tbaa !16
  %op_type = getelementptr inbounds %struct.op* %37, i64 0, i32 4
  %38 = load i16* %op_type, align 2, !tbaa !17
  %conv58 = zext i16 %38 to i32
  %call59 = call i32 (%struct.gv*, %struct.io*, i32, ...)* bitcast (i32 (...)* @report_evil_fh to i32 (%struct.gv*, %struct.io*, i32, ...)*)(%struct.gv* %gv.0, %struct.io* %cond158, i32 %conv58) #2
  br label %if.end60

if.end60:                                         ; preds = %land.lhs.true53, %if.then57, %lor.lhs.false49
  store %struct.gv* null, %struct.gv** @PL_statgv, align 8, !tbaa !16
  %39 = load %struct.sv** @PL_statname, align 8, !tbaa !16
  call void @Perl_sv_setpv(%struct.sv* %39, i8* getelementptr inbounds ([1 x i8]* @.str3, i64 0, i64 0)) #2
  store i32 -1, i32* @PL_laststatval, align 4, !tbaa !14
  br label %return

if.else61:                                        ; preds = %entry
  %incdec.ptr = getelementptr inbounds %struct.sv** %0, i64 -1
  %40 = load %struct.sv** %0, align 8, !tbaa !16
  store %struct.sv** %incdec.ptr, %struct.sv*** @PL_stack_sp, align 8, !tbaa !16
  %sv_flags62 = getelementptr inbounds %struct.sv* %40, i64 0, i32 2
  %41 = load i64* %sv_flags62, align 8, !tbaa !1
  %and63 = and i64 %41, 255
  %cmp64 = icmp eq i64 %and63, 13
  br i1 %cmp64, label %do_fstat, label %if.else67

if.else67:                                        ; preds = %if.else61
  %and69 = and i64 %41, 524288
  %tobool70 = icmp eq i64 %and69, 0
  br i1 %tobool70, label %if.end81, label %land.lhs.true71

land.lhs.true71:                                  ; preds = %if.else67
  %sv_any72 = getelementptr inbounds %struct.sv* %40, i64 0, i32 0
  %42 = load i8** %sv_any72, align 8, !tbaa !34
  %xrv_rv = bitcast i8* %42 to %struct.sv**
  %43 = load %struct.sv** %xrv_rv, align 8, !tbaa !61
  %sv_flags73 = getelementptr inbounds %struct.sv* %43, i64 0, i32 2
  %44 = load i64* %sv_flags73, align 8, !tbaa !1
  %and74 = and i64 %44, 255
  %cmp75 = icmp eq i64 %and74, 13
  br i1 %cmp75, label %do_fstat, label %if.end81

if.end81:                                         ; preds = %if.else67, %land.lhs.true71
  %and83 = and i64 %41, 262144
  %cmp84 = icmp eq i64 %and83, 0
  br i1 %cmp84, label %cond.false90, label %cond.true86

cond.true86:                                      ; preds = %if.end81
  %sv_any87 = getelementptr inbounds %struct.sv* %40, i64 0, i32 0
  %45 = load i8** %sv_any87, align 8, !tbaa !34
  %xpv_cur = getelementptr inbounds i8* %45, i64 8
  %46 = bitcast i8* %xpv_cur to i64*
  %47 = load i64* %46, align 8, !tbaa !48
  store i64 %47, i64* %len, align 8, !tbaa !26
  %xpv_pv89 = bitcast i8* %45 to i8**
  %48 = load i8** %xpv_pv89, align 8, !tbaa !35
  br label %cond.end92

cond.false90:                                     ; preds = %if.end81
  %call91 = call i8* @Perl_sv_2pv_flags(%struct.sv* %40, i64* %len, i64 2) #2
  %.pre = load i64* %len, align 8, !tbaa !26
  br label %cond.end92

cond.end92:                                       ; preds = %cond.false90, %cond.true86
  %49 = phi i64 [ %47, %cond.true86 ], [ %.pre, %cond.false90 ]
  %cond93 = phi i8* [ %48, %cond.true86 ], [ %call91, %cond.false90 ]
  store %struct.gv* null, %struct.gv** @PL_statgv, align 8, !tbaa !16
  %50 = load %struct.sv** @PL_statname, align 8, !tbaa !16
  call void @Perl_sv_setpvn(%struct.sv* %50, i8* %cond93, i64 %49) #2
  %51 = load %struct.sv** @PL_statname, align 8, !tbaa !16
  %sv_any94 = getelementptr inbounds %struct.sv* %51, i64 0, i32 0
  %52 = load i8** %sv_any94, align 8, !tbaa !34
  %xpv_pv95 = bitcast i8* %52 to i8**
  %53 = load i8** %xpv_pv95, align 8, !tbaa !35
  store i64 235, i64* @PL_laststype, align 8, !tbaa !26
  %call96 = call i32 @stat(i8* %53, %struct.stat* @PL_statcache) #2
  store i32 %call96, i32* @PL_laststatval, align 4, !tbaa !14
  %cmp97 = icmp slt i32 %call96, 0
  br i1 %cmp97, label %land.lhs.true99, label %if.end131

land.lhs.true99:                                  ; preds = %cond.end92
  %54 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings100 = getelementptr inbounds %struct.cop* %54, i64 0, i32 14
  %55 = load %struct.sv** %cop_warnings100, align 8, !tbaa !32
  %cmp101 = icmp eq %struct.sv* %55, null
  br i1 %cmp101, label %lor.lhs.false119, label %land.lhs.true103

land.lhs.true103:                                 ; preds = %land.lhs.true99
  %56 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings104 = getelementptr inbounds %struct.cop* %56, i64 0, i32 14
  %57 = load %struct.sv** %cop_warnings104, align 8, !tbaa !32
  %cmp105 = icmp eq %struct.sv* %57, inttoptr (i64 48 to %struct.sv*)
  br i1 %cmp105, label %lor.lhs.false119, label %land.lhs.true107

land.lhs.true107:                                 ; preds = %land.lhs.true103
  %58 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings108 = getelementptr inbounds %struct.cop* %58, i64 0, i32 14
  %59 = load %struct.sv** %cop_warnings108, align 8, !tbaa !32
  %cmp109 = icmp eq %struct.sv* %59, inttoptr (i64 24 to %struct.sv*)
  br i1 %cmp109, label %land.lhs.true127, label %lor.lhs.false111

lor.lhs.false111:                                 ; preds = %land.lhs.true107
  %60 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings112 = getelementptr inbounds %struct.cop* %60, i64 0, i32 14
  %61 = load %struct.sv** %cop_warnings112, align 8, !tbaa !32
  %sv_any113 = getelementptr inbounds %struct.sv* %61, i64 0, i32 0
  %62 = load i8** %sv_any113, align 8, !tbaa !34
  %xpv_pv114 = bitcast i8* %62 to i8**
  %63 = load i8** %xpv_pv114, align 8, !tbaa !35
  %arrayidx115 = getelementptr inbounds i8* %63, i64 2
  %64 = load i8* %arrayidx115, align 1, !tbaa !31
  %and117 = and i8 %64, 4
  %tobool118 = icmp eq i8 %and117, 0
  br i1 %tobool118, label %lor.lhs.false119, label %land.lhs.true127

lor.lhs.false119:                                 ; preds = %lor.lhs.false111, %land.lhs.true103, %land.lhs.true99
  %65 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings120 = getelementptr inbounds %struct.cop* %65, i64 0, i32 14
  %66 = load %struct.sv** %cop_warnings120, align 8, !tbaa !32
  %cmp121 = icmp eq %struct.sv* %66, null
  br i1 %cmp121, label %land.lhs.true123, label %if.end131

land.lhs.true123:                                 ; preds = %lor.lhs.false119
  %67 = load i8* @PL_dowarn, align 1, !tbaa !31
  %and125 = and i8 %67, 1
  %tobool126 = icmp eq i8 %and125, 0
  br i1 %tobool126, label %if.end131, label %land.lhs.true127

land.lhs.true127:                                 ; preds = %lor.lhs.false111, %land.lhs.true123, %land.lhs.true107
  %call128 = call i8* @strchr(i8* %53, i32 10) #2
  %tobool129 = icmp eq i8* %call128, null
  br i1 %tobool129, label %if.end131, label %if.then130

if.then130:                                       ; preds = %land.lhs.true127
  call void (i64, i8*, ...)* @Perl_warner(i64 9, i8* getelementptr inbounds ([0 x i8]* @PL_warn_nl, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str31, i64 0, i64 0)) #2
  br label %if.end131

if.end131:                                        ; preds = %land.lhs.true127, %land.lhs.true123, %if.then130, %lor.lhs.false119, %cond.end92
  %68 = load i32* @PL_laststatval, align 4, !tbaa !14
  %conv132 = sext i32 %68 to i64
  br label %return

return:                                           ; preds = %if.end131, %if.end60, %if.then23, %if.then15
  %retval.0 = phi i64 [ %conv20, %if.then15 ], [ %conv24, %if.then23 ], [ -1, %if.end60 ], [ %conv132, %if.end131 ]
  ret i64 %retval.0
}

declare %struct.sv** @Perl_stack_grow(%struct.sv**, %struct.sv**, i32) #1

declare void @Perl_sv_setpv(%struct.sv*, i8*) #1

; Function Attrs: nounwind uwtable
define i64 @Perl_my_lstat() #0 {
entry:
  %n_a = alloca i64, align 8
  %0 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !16
  %1 = load %struct.op** @PL_op, align 8, !tbaa !16
  %op_flags = getelementptr inbounds %struct.op* %1, i64 0, i32 6
  %2 = load i8* %op_flags, align 1, !tbaa !55
  %and = and i8 %2, 16
  %tobool = icmp eq i8 %and, 0
  br i1 %tobool, label %if.end44, label %if.then

if.then:                                          ; preds = %entry
  %3 = load %struct.sv*** @PL_stack_max, align 8, !tbaa !16
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %3 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %0 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %cmp = icmp slt i64 %sub.ptr.sub, 8
  br i1 %cmp, label %if.then2, label %if.end

if.then2:                                         ; preds = %if.then
  %call = call %struct.sv** @Perl_stack_grow(%struct.sv** %0, %struct.sv** %0, i32 1) #2
  %.pre = load %struct.op** @PL_op, align 8, !tbaa !16
  br label %if.end

if.end:                                           ; preds = %if.then2, %if.then
  %4 = phi %struct.op* [ %.pre, %if.then2 ], [ %1, %if.then ]
  %sp.0 = phi %struct.sv** [ %call, %if.then2 ], [ %0, %if.then ]
  %op_sv = getelementptr inbounds %struct.op* %4, i64 1
  %5 = bitcast %struct.op* %op_sv to %struct.sv**
  %6 = load %struct.sv** %5, align 8, !tbaa !59
  %7 = bitcast %struct.sv* %6 to %struct.gv*
  %8 = load %struct.gv** @PL_defgv, align 8, !tbaa !16
  %cmp3 = icmp eq %struct.gv* %7, %8
  br i1 %cmp3, label %if.then5, label %if.end11

if.then5:                                         ; preds = %if.end
  %9 = load i64* @PL_laststype, align 8, !tbaa !26
  %cmp6 = icmp eq i64 %9, 234
  br i1 %cmp6, label %if.end9, label %if.then8

if.then8:                                         ; preds = %if.then5
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([40 x i8]* @.str32, i64 0, i64 0)) #2
  br label %if.end9

if.end9:                                          ; preds = %if.then5, %if.then8
  %10 = load i32* @PL_laststatval, align 4, !tbaa !14
  %conv10 = sext i32 %10 to i64
  br label %return

if.end11:                                         ; preds = %if.end
  %11 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings = getelementptr inbounds %struct.cop* %11, i64 0, i32 14
  %12 = load %struct.sv** %cop_warnings, align 8, !tbaa !32
  %cmp12 = icmp eq %struct.sv* %12, null
  br i1 %cmp12, label %lor.lhs.false25, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end11
  %13 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings14 = getelementptr inbounds %struct.cop* %13, i64 0, i32 14
  %14 = load %struct.sv** %cop_warnings14, align 8, !tbaa !32
  %cmp15 = icmp eq %struct.sv* %14, inttoptr (i64 48 to %struct.sv*)
  br i1 %cmp15, label %lor.lhs.false25, label %land.lhs.true17

land.lhs.true17:                                  ; preds = %land.lhs.true
  %15 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings18 = getelementptr inbounds %struct.cop* %15, i64 0, i32 14
  %16 = load %struct.sv** %cop_warnings18, align 8, !tbaa !32
  %cmp19 = icmp eq %struct.sv* %16, inttoptr (i64 24 to %struct.sv*)
  br i1 %cmp19, label %if.then33, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true17
  %17 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings21 = getelementptr inbounds %struct.cop* %17, i64 0, i32 14
  %18 = load %struct.sv** %cop_warnings21, align 8, !tbaa !32
  %sv_any = getelementptr inbounds %struct.sv* %18, i64 0, i32 0
  %19 = load i8** %sv_any, align 8, !tbaa !34
  %xpv_pv = bitcast i8* %19 to i8**
  %20 = load i8** %xpv_pv, align 8, !tbaa !35
  %arrayidx = getelementptr inbounds i8* %20, i64 1
  %21 = load i8* %arrayidx, align 1, !tbaa !31
  %and23 = and i8 %21, 4
  %tobool24 = icmp eq i8 %and23, 0
  br i1 %tobool24, label %lor.lhs.false25, label %if.then33

lor.lhs.false25:                                  ; preds = %lor.lhs.false, %land.lhs.true, %if.end11
  %22 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings26 = getelementptr inbounds %struct.cop* %22, i64 0, i32 14
  %23 = load %struct.sv** %cop_warnings26, align 8, !tbaa !32
  %cmp27 = icmp eq %struct.sv* %23, null
  br i1 %cmp27, label %land.lhs.true29, label %if.end44

land.lhs.true29:                                  ; preds = %lor.lhs.false25
  %24 = load i8* @PL_dowarn, align 1, !tbaa !31
  %and31 = and i8 %24, 1
  %tobool32 = icmp eq i8 %and31, 0
  br i1 %tobool32, label %if.end44, label %if.then33

if.then33:                                        ; preds = %lor.lhs.false, %land.lhs.true29, %land.lhs.true17
  %25 = load %struct.op** @PL_op, align 8, !tbaa !16
  %op_sv34 = getelementptr inbounds %struct.op* %25, i64 1
  %26 = bitcast %struct.op* %op_sv34 to %struct.sv**
  %27 = load %struct.sv** %26, align 8, !tbaa !59
  %28 = bitcast %struct.sv* %27 to %struct.gv*
  %sv_any35 = bitcast %struct.sv* %27 to %struct.xpvgv**
  %29 = load %struct.xpvgv** %sv_any35, align 8, !tbaa !7
  %xgv_gp = getelementptr inbounds %struct.xpvgv* %29, i64 0, i32 7
  %30 = load %struct.gp** %xgv_gp, align 8, !tbaa !9
  %gp_egv = getelementptr inbounds %struct.gp* %30, i64 0, i32 6
  %31 = load %struct.gv** %gp_egv, align 8, !tbaa !29
  %tobool36 = icmp eq %struct.gv* %31, null
  %. = select i1 %tobool36, %struct.gv* %28, %struct.gv* %31
  %sv_any42 = getelementptr inbounds %struct.gv* %., i64 0, i32 0
  %32 = load %struct.xpvgv** %sv_any42, align 8, !tbaa !7
  %xgv_name = getelementptr inbounds %struct.xpvgv* %32, i64 0, i32 8
  %33 = load i8** %xgv_name, align 8, !tbaa !30
  call void (i64, i8*, ...)* @Perl_warner(i64 5, i8* getelementptr inbounds ([27 x i8]* @.str33, i64 0, i64 0), i8* %33) #2
  store i32 -1, i32* @PL_laststatval, align 4, !tbaa !14
  br label %return

if.end44:                                         ; preds = %land.lhs.true29, %entry, %lor.lhs.false25
  %sp.1 = phi %struct.sv** [ %sp.0, %land.lhs.true29 ], [ %sp.0, %lor.lhs.false25 ], [ %0, %entry ]
  store i64 234, i64* @PL_laststype, align 8, !tbaa !26
  store %struct.gv* null, %struct.gv** @PL_statgv, align 8, !tbaa !16
  %incdec.ptr = getelementptr inbounds %struct.sv** %sp.1, i64 -1
  %34 = load %struct.sv** %sp.1, align 8, !tbaa !16
  store %struct.sv** %incdec.ptr, %struct.sv*** @PL_stack_sp, align 8, !tbaa !16
  %sv_flags = getelementptr inbounds %struct.sv* %34, i64 0, i32 2
  %35 = load i64* %sv_flags, align 8, !tbaa !1
  %and45 = and i64 %35, 524288
  %tobool46 = icmp eq i64 %and45, 0
  br i1 %tobool46, label %if.end101, label %land.lhs.true47

land.lhs.true47:                                  ; preds = %if.end44
  %sv_any48 = getelementptr inbounds %struct.sv* %34, i64 0, i32 0
  %36 = load i8** %sv_any48, align 8, !tbaa !34
  %xrv_rv = bitcast i8* %36 to %struct.sv**
  %37 = load %struct.sv** %xrv_rv, align 8, !tbaa !61
  %sv_flags49 = getelementptr inbounds %struct.sv* %37, i64 0, i32 2
  %38 = load i64* %sv_flags49, align 8, !tbaa !1
  %and50 = and i64 %38, 255
  %cmp51 = icmp eq i64 %and50, 13
  br i1 %cmp51, label %land.lhs.true53, label %if.end101

land.lhs.true53:                                  ; preds = %land.lhs.true47
  %39 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings54 = getelementptr inbounds %struct.cop* %39, i64 0, i32 14
  %40 = load %struct.sv** %cop_warnings54, align 8, !tbaa !32
  %cmp55 = icmp eq %struct.sv* %40, null
  br i1 %cmp55, label %lor.lhs.false73, label %land.lhs.true57

land.lhs.true57:                                  ; preds = %land.lhs.true53
  %41 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings58 = getelementptr inbounds %struct.cop* %41, i64 0, i32 14
  %42 = load %struct.sv** %cop_warnings58, align 8, !tbaa !32
  %cmp59 = icmp eq %struct.sv* %42, inttoptr (i64 48 to %struct.sv*)
  br i1 %cmp59, label %lor.lhs.false73, label %land.lhs.true61

land.lhs.true61:                                  ; preds = %land.lhs.true57
  %43 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings62 = getelementptr inbounds %struct.cop* %43, i64 0, i32 14
  %44 = load %struct.sv** %cop_warnings62, align 8, !tbaa !32
  %cmp63 = icmp eq %struct.sv* %44, inttoptr (i64 24 to %struct.sv*)
  br i1 %cmp63, label %if.then81, label %lor.lhs.false65

lor.lhs.false65:                                  ; preds = %land.lhs.true61
  %45 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings66 = getelementptr inbounds %struct.cop* %45, i64 0, i32 14
  %46 = load %struct.sv** %cop_warnings66, align 8, !tbaa !32
  %sv_any67 = getelementptr inbounds %struct.sv* %46, i64 0, i32 0
  %47 = load i8** %sv_any67, align 8, !tbaa !34
  %xpv_pv68 = bitcast i8* %47 to i8**
  %48 = load i8** %xpv_pv68, align 8, !tbaa !35
  %arrayidx69 = getelementptr inbounds i8* %48, i64 1
  %49 = load i8* %arrayidx69, align 1, !tbaa !31
  %and71 = and i8 %49, 4
  %tobool72 = icmp eq i8 %and71, 0
  br i1 %tobool72, label %lor.lhs.false73, label %if.then81

lor.lhs.false73:                                  ; preds = %lor.lhs.false65, %land.lhs.true57, %land.lhs.true53
  %50 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings74 = getelementptr inbounds %struct.cop* %50, i64 0, i32 14
  %51 = load %struct.sv** %cop_warnings74, align 8, !tbaa !32
  %cmp75 = icmp eq %struct.sv* %51, null
  br i1 %cmp75, label %land.lhs.true77, label %if.end101

land.lhs.true77:                                  ; preds = %lor.lhs.false73
  %52 = load i8* @PL_dowarn, align 1, !tbaa !31
  %and79 = and i8 %52, 1
  %tobool80 = icmp eq i8 %and79, 0
  br i1 %tobool80, label %if.end101, label %if.then81

if.then81:                                        ; preds = %lor.lhs.false65, %land.lhs.true77, %land.lhs.true61
  %53 = load i8** %sv_any48, align 8, !tbaa !34
  %xrv_rv83 = bitcast i8* %53 to %struct.sv**
  %54 = load %struct.sv** %xrv_rv83, align 8, !tbaa !61
  %55 = bitcast %struct.sv* %54 to %struct.gv*
  %sv_any84 = bitcast %struct.sv* %54 to %struct.xpvgv**
  %56 = load %struct.xpvgv** %sv_any84, align 8, !tbaa !7
  %xgv_gp85 = getelementptr inbounds %struct.xpvgv* %56, i64 0, i32 7
  %57 = load %struct.gp** %xgv_gp85, align 8, !tbaa !9
  %gp_egv86 = getelementptr inbounds %struct.gp* %57, i64 0, i32 6
  %58 = load %struct.gv** %gp_egv86, align 8, !tbaa !29
  %tobool87 = icmp eq %struct.gv* %58, null
  %.196 = select i1 %tobool87, %struct.gv* %55, %struct.gv* %58
  %sv_any99 = getelementptr inbounds %struct.gv* %.196, i64 0, i32 0
  %59 = load %struct.xpvgv** %sv_any99, align 8, !tbaa !7
  %xgv_name100 = getelementptr inbounds %struct.xpvgv* %59, i64 0, i32 8
  %60 = load i8** %xgv_name100, align 8, !tbaa !30
  call void (i64, i8*, ...)* @Perl_warner(i64 5, i8* getelementptr inbounds ([27 x i8]* @.str33, i64 0, i64 0), i8* %60) #2
  store i32 -1, i32* @PL_laststatval, align 4, !tbaa !14
  br label %return

if.end101:                                        ; preds = %land.lhs.true77, %if.end44, %lor.lhs.false73, %land.lhs.true47
  %61 = load %struct.sv** @PL_statname, align 8, !tbaa !16
  %62 = load i64* %sv_flags, align 8, !tbaa !1
  %and103 = and i64 %62, 262144
  %cmp104 = icmp eq i64 %and103, 0
  br i1 %cmp104, label %cond.false110, label %cond.true106

cond.true106:                                     ; preds = %if.end101
  %sv_any107 = getelementptr inbounds %struct.sv* %34, i64 0, i32 0
  %63 = load i8** %sv_any107, align 8, !tbaa !34
  %xpv_cur = getelementptr inbounds i8* %63, i64 8
  %64 = bitcast i8* %xpv_cur to i64*
  %65 = load i64* %64, align 8, !tbaa !48
  store i64 %65, i64* %n_a, align 8, !tbaa !26
  %xpv_pv109 = bitcast i8* %63 to i8**
  %66 = load i8** %xpv_pv109, align 8, !tbaa !35
  br label %cond.end112

cond.false110:                                    ; preds = %if.end101
  %call111 = call i8* @Perl_sv_2pv_flags(%struct.sv* %34, i64* %n_a, i64 2) #2
  br label %cond.end112

cond.end112:                                      ; preds = %cond.false110, %cond.true106
  %cond113 = phi i8* [ %66, %cond.true106 ], [ %call111, %cond.false110 ]
  call void @Perl_sv_setpv(%struct.sv* %61, i8* %cond113) #2
  %67 = load i64* %sv_flags, align 8, !tbaa !1
  %and115 = and i64 %67, 262144
  %cmp116 = icmp eq i64 %and115, 0
  br i1 %cmp116, label %cond.false123, label %cond.true118

cond.true118:                                     ; preds = %cond.end112
  %sv_any119 = getelementptr inbounds %struct.sv* %34, i64 0, i32 0
  %68 = load i8** %sv_any119, align 8, !tbaa !34
  %xpv_cur120 = getelementptr inbounds i8* %68, i64 8
  %69 = bitcast i8* %xpv_cur120 to i64*
  %70 = load i64* %69, align 8, !tbaa !48
  store i64 %70, i64* %n_a, align 8, !tbaa !26
  %xpv_pv122 = bitcast i8* %68 to i8**
  %71 = load i8** %xpv_pv122, align 8, !tbaa !35
  br label %cond.end125

cond.false123:                                    ; preds = %cond.end112
  %call124 = call i8* @Perl_sv_2pv_flags(%struct.sv* %34, i64* %n_a, i64 2) #2
  br label %cond.end125

cond.end125:                                      ; preds = %cond.false123, %cond.true118
  %cond126 = phi i8* [ %71, %cond.true118 ], [ %call124, %cond.false123 ]
  %call127 = call i32 @stat(i8* %cond126, %struct.stat* @PL_statcache) #2
  store i32 %call127, i32* @PL_laststatval, align 4, !tbaa !14
  %cmp128 = icmp slt i32 %call127, 0
  br i1 %cmp128, label %land.lhs.true130, label %if.end175

land.lhs.true130:                                 ; preds = %cond.end125
  %72 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings131 = getelementptr inbounds %struct.cop* %72, i64 0, i32 14
  %73 = load %struct.sv** %cop_warnings131, align 8, !tbaa !32
  %cmp132 = icmp eq %struct.sv* %73, null
  br i1 %cmp132, label %lor.lhs.false150, label %land.lhs.true134

land.lhs.true134:                                 ; preds = %land.lhs.true130
  %74 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings135 = getelementptr inbounds %struct.cop* %74, i64 0, i32 14
  %75 = load %struct.sv** %cop_warnings135, align 8, !tbaa !32
  %cmp136 = icmp eq %struct.sv* %75, inttoptr (i64 48 to %struct.sv*)
  br i1 %cmp136, label %lor.lhs.false150, label %land.lhs.true138

land.lhs.true138:                                 ; preds = %land.lhs.true134
  %76 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings139 = getelementptr inbounds %struct.cop* %76, i64 0, i32 14
  %77 = load %struct.sv** %cop_warnings139, align 8, !tbaa !32
  %cmp140 = icmp eq %struct.sv* %77, inttoptr (i64 24 to %struct.sv*)
  br i1 %cmp140, label %land.lhs.true158, label %lor.lhs.false142

lor.lhs.false142:                                 ; preds = %land.lhs.true138
  %78 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings143 = getelementptr inbounds %struct.cop* %78, i64 0, i32 14
  %79 = load %struct.sv** %cop_warnings143, align 8, !tbaa !32
  %sv_any144 = getelementptr inbounds %struct.sv* %79, i64 0, i32 0
  %80 = load i8** %sv_any144, align 8, !tbaa !34
  %xpv_pv145 = bitcast i8* %80 to i8**
  %81 = load i8** %xpv_pv145, align 8, !tbaa !35
  %arrayidx146 = getelementptr inbounds i8* %81, i64 2
  %82 = load i8* %arrayidx146, align 1, !tbaa !31
  %and148 = and i8 %82, 4
  %tobool149 = icmp eq i8 %and148, 0
  br i1 %tobool149, label %lor.lhs.false150, label %land.lhs.true158

lor.lhs.false150:                                 ; preds = %lor.lhs.false142, %land.lhs.true134, %land.lhs.true130
  %83 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings151 = getelementptr inbounds %struct.cop* %83, i64 0, i32 14
  %84 = load %struct.sv** %cop_warnings151, align 8, !tbaa !32
  %cmp152 = icmp eq %struct.sv* %84, null
  br i1 %cmp152, label %land.lhs.true154, label %if.end175

land.lhs.true154:                                 ; preds = %lor.lhs.false150
  %85 = load i8* @PL_dowarn, align 1, !tbaa !31
  %and156 = and i8 %85, 1
  %tobool157 = icmp eq i8 %and156, 0
  br i1 %tobool157, label %if.end175, label %land.lhs.true158

land.lhs.true158:                                 ; preds = %lor.lhs.false142, %land.lhs.true154, %land.lhs.true138
  %86 = load i64* %sv_flags, align 8, !tbaa !1
  %and160 = and i64 %86, 262144
  %cmp161 = icmp eq i64 %and160, 0
  br i1 %cmp161, label %cond.false168, label %cond.true163

cond.true163:                                     ; preds = %land.lhs.true158
  %sv_any164 = getelementptr inbounds %struct.sv* %34, i64 0, i32 0
  %87 = load i8** %sv_any164, align 8, !tbaa !34
  %xpv_cur165 = getelementptr inbounds i8* %87, i64 8
  %88 = bitcast i8* %xpv_cur165 to i64*
  %89 = load i64* %88, align 8, !tbaa !48
  store i64 %89, i64* %n_a, align 8, !tbaa !26
  %xpv_pv167 = bitcast i8* %87 to i8**
  %90 = load i8** %xpv_pv167, align 8, !tbaa !35
  br label %cond.end170

cond.false168:                                    ; preds = %land.lhs.true158
  %call169 = call i8* @Perl_sv_2pv_flags(%struct.sv* %34, i64* %n_a, i64 2) #2
  br label %cond.end170

cond.end170:                                      ; preds = %cond.false168, %cond.true163
  %cond171 = phi i8* [ %90, %cond.true163 ], [ %call169, %cond.false168 ]
  %call172 = call i8* @strchr(i8* %cond171, i32 10) #2
  %tobool173 = icmp eq i8* %call172, null
  br i1 %tobool173, label %if.end175, label %if.then174

if.then174:                                       ; preds = %cond.end170
  call void (i64, i8*, ...)* @Perl_warner(i64 9, i8* getelementptr inbounds ([0 x i8]* @PL_warn_nl, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8]* @.str34, i64 0, i64 0)) #2
  br label %if.end175

if.end175:                                        ; preds = %cond.end170, %land.lhs.true154, %if.then174, %lor.lhs.false150, %cond.end125
  %91 = load i32* @PL_laststatval, align 4, !tbaa !14
  %conv176 = sext i32 %91 to i64
  br label %return

return:                                           ; preds = %if.end175, %if.then81, %if.then33, %if.end9
  %retval.0 = phi i64 [ %conv10, %if.end9 ], [ -1, %if.then33 ], [ -1, %if.then81 ], [ %conv176, %if.end175 ]
  ret i64 %retval.0
}

; Function Attrs: nounwind uwtable
define signext i8 @Perl_do_aexec(%struct.sv* %really, %struct.sv** %mark, %struct.sv** %sp) #0 {
entry:
  %call = tail call i32 (%struct.sv*, %struct.sv**, %struct.sv**, i32, i32, ...)* bitcast (i32 (...)* @do_aexec5 to i32 (%struct.sv*, %struct.sv**, %struct.sv**, i32, i32, ...)*)(%struct.sv* %really, %struct.sv** %mark, %struct.sv** %sp, i32 0, i32 0) #2
  %conv = trunc i32 %call to i8
  ret i8 %conv
}

declare i32 @do_aexec5(...) #1

; Function Attrs: nounwind uwtable
define signext i8 @Perl_do_aexec5(%struct.sv* %really, %struct.sv** %mark, %struct.sv** %sp, i32 %fd, i32 %do_report) #0 {
entry:
  %n_a = alloca i64, align 8
  %e = alloca i32, align 4
  %cmp = icmp ugt %struct.sv** %sp, %mark
  br i1 %cmp, label %if.then, label %if.end88

if.then:                                          ; preds = %entry
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %sp to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %mark to i64
  %sub.ptr.sub = sub i64 8, %sub.ptr.rhs.cast
  %sub.ptr.div109110 = add i64 %sub.ptr.sub, %sub.ptr.lhs.cast
  %mul = and i64 %sub.ptr.div109110, -8
  %call = call i8* @Perl_safesysmalloc(i64 %mul) #2
  %0 = bitcast i8* %call to i8**
  store i8** %0, i8*** @PL_Argv, align 8, !tbaa !16
  %incdec.ptr119 = getelementptr inbounds %struct.sv** %mark, i64 1
  %cmp1120 = icmp ugt %struct.sv** %incdec.ptr119, %sp
  br i1 %cmp1120, label %while.end, label %while.body

while.body:                                       ; preds = %if.then, %while.cond.backedge
  %incdec.ptr122 = phi %struct.sv** [ %incdec.ptr, %while.cond.backedge ], [ %incdec.ptr119, %if.then ]
  %a.0121 = phi i8** [ %a.0.be, %while.cond.backedge ], [ %0, %if.then ]
  %1 = load %struct.sv** %incdec.ptr122, align 8, !tbaa !16
  %tobool = icmp eq %struct.sv* %1, null
  br i1 %tobool, label %while.cond.backedge, label %if.then2

if.then2:                                         ; preds = %while.body
  store %struct.sv* %1, %struct.sv** @PL_Sv, align 8, !tbaa !16
  %sv_flags = getelementptr inbounds %struct.sv* %1, i64 0, i32 2
  %2 = load i64* %sv_flags, align 8, !tbaa !1
  %and = and i64 %2, 262144
  %cmp3 = icmp eq i64 %and, 0
  br i1 %cmp3, label %cond.false, label %cond.true

cond.true:                                        ; preds = %if.then2
  %sv_any = getelementptr inbounds %struct.sv* %1, i64 0, i32 0
  %3 = load i8** %sv_any, align 8, !tbaa !34
  %xpv_cur = getelementptr inbounds i8* %3, i64 8
  %4 = bitcast i8* %xpv_cur to i64*
  %5 = load i64* %4, align 8, !tbaa !48
  store i64 %5, i64* %n_a, align 8, !tbaa !26
  %xpv_pv = bitcast i8* %3 to i8**
  %6 = load i8** %xpv_pv, align 8, !tbaa !35
  br label %while.cond.backedge

cond.false:                                       ; preds = %if.then2
  %call5 = call i8* @Perl_sv_2pv_flags(%struct.sv* %1, i64* %n_a, i64 2) #2
  br label %while.cond.backedge

while.cond.backedge:                              ; preds = %while.body, %cond.true, %cond.false
  %storemerge = phi i8* [ %6, %cond.true ], [ %call5, %cond.false ], [ getelementptr inbounds ([1 x i8]* @.str3, i64 0, i64 0), %while.body ]
  %a.0.be = getelementptr inbounds i8** %a.0121, i64 1
  store i8* %storemerge, i8** %a.0121, align 8, !tbaa !16
  %incdec.ptr = getelementptr inbounds %struct.sv** %incdec.ptr122, i64 1
  %cmp1 = icmp ugt %struct.sv** %incdec.ptr, %sp
  br i1 %cmp1, label %while.end, label %while.body

while.end:                                        ; preds = %while.cond.backedge, %if.then
  %a.0.lcssa = phi i8** [ %0, %if.then ], [ %a.0.be, %while.cond.backedge ]
  store i8* null, i8** %a.0.lcssa, align 8, !tbaa !16
  %tobool8 = icmp ne %struct.sv* %really, null
  br i1 %tobool8, label %if.then9, label %land.lhs.true

if.then9:                                         ; preds = %while.end
  %sv_flags10 = getelementptr inbounds %struct.sv* %really, i64 0, i32 2
  %7 = load i64* %sv_flags10, align 8, !tbaa !1
  %and11 = and i64 %7, 262144
  %cmp12 = icmp eq i64 %and11, 0
  br i1 %cmp12, label %if.end22.thread, label %if.end22

if.end22.thread:                                  ; preds = %if.then9
  %call19 = call i8* @Perl_sv_2pv_flags(%struct.sv* %really, i64* %n_a, i64 2) #2
  br label %land.lhs.true27

if.end22:                                         ; preds = %if.then9
  %sv_any14 = getelementptr inbounds %struct.sv* %really, i64 0, i32 0
  %8 = load i8** %sv_any14, align 8, !tbaa !34
  %xpv_cur15 = getelementptr inbounds i8* %8, i64 8
  %9 = bitcast i8* %xpv_cur15 to i64*
  %10 = load i64* %9, align 8, !tbaa !48
  store i64 %10, i64* %n_a, align 8, !tbaa !26
  %xpv_pv17 = bitcast i8* %8 to i8**
  %11 = load i8** %xpv_pv17, align 8, !tbaa !35
  br label %land.lhs.true27

land.lhs.true:                                    ; preds = %while.end
  %12 = load i8*** @PL_Argv, align 8, !tbaa !16
  %13 = load i8** %12, align 8, !tbaa !16
  %14 = load i8* %13, align 1, !tbaa !31
  %cmp24 = icmp eq i8 %14, 47
  br i1 %cmp24, label %if.else42, label %if.then31

land.lhs.true27:                                  ; preds = %if.end22, %if.end22.thread
  %tmps.0112 = phi i8* [ %call19, %if.end22.thread ], [ %11, %if.end22 ]
  %15 = load i8* %tmps.0112, align 1, !tbaa !31
  %cmp29 = icmp ne i8 %15, 47
  %16 = load i8* @PL_tainting, align 1
  %tobool32 = icmp ne i8 %16, 0
  %or.cond = and i1 %cmp29, %tobool32
  br i1 %or.cond, label %if.then33, label %if.end35

if.then31:                                        ; preds = %land.lhs.true
  %.old = load i8* @PL_tainting, align 1, !tbaa !31
  %tobool32.old = icmp eq i8 %.old, 0
  br i1 %tobool32.old, label %if.end35, label %if.then33

if.then33:                                        ; preds = %if.then31, %land.lhs.true27
  %tmps.0114 = phi i8* [ null, %if.then31 ], [ %tmps.0112, %land.lhs.true27 ]
  call void @Perl_taint_env() #2
  br label %if.end35

if.end35:                                         ; preds = %if.then31, %if.then33, %land.lhs.true27
  %tmps.0113 = phi i8* [ null, %if.then31 ], [ %tmps.0114, %if.then33 ], [ %tmps.0112, %land.lhs.true27 ]
  br i1 %tobool8, label %land.lhs.true37, label %if.else42

land.lhs.true37:                                  ; preds = %if.end35
  %17 = load i8* %tmps.0113, align 1, !tbaa !31
  %tobool39 = icmp eq i8 %17, 0
  br i1 %tobool39, label %if.else42, label %if.then40

if.then40:                                        ; preds = %land.lhs.true37
  %18 = load i8*** @PL_Argv, align 8, !tbaa !16
  %call41 = call i32 @execvp(i8* %tmps.0113, i8** %18) #2
  br label %if.end45

if.else42:                                        ; preds = %land.lhs.true, %land.lhs.true37, %if.end35
  %tmps.0116 = phi i8* [ %tmps.0113, %land.lhs.true37 ], [ %tmps.0113, %if.end35 ], [ null, %land.lhs.true ]
  %19 = load i8*** @PL_Argv, align 8, !tbaa !16
  %20 = load i8** %19, align 8, !tbaa !16
  %call44 = call i32 @execvp(i8* %20, i8** %19) #2
  br label %if.end45

if.end45:                                         ; preds = %if.else42, %if.then40
  %tmps.0115 = phi i8* [ %tmps.0116, %if.else42 ], [ %tmps.0113, %if.then40 ]
  %21 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings = getelementptr inbounds %struct.cop* %21, i64 0, i32 14
  %22 = load %struct.sv** %cop_warnings, align 8, !tbaa !32
  %cmp46 = icmp eq %struct.sv* %22, null
  br i1 %cmp46, label %lor.lhs.false64, label %land.lhs.true48

land.lhs.true48:                                  ; preds = %if.end45
  %23 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings49 = getelementptr inbounds %struct.cop* %23, i64 0, i32 14
  %24 = load %struct.sv** %cop_warnings49, align 8, !tbaa !32
  %cmp50 = icmp eq %struct.sv* %24, inttoptr (i64 48 to %struct.sv*)
  br i1 %cmp50, label %lor.lhs.false64, label %land.lhs.true52

land.lhs.true52:                                  ; preds = %land.lhs.true48
  %25 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings53 = getelementptr inbounds %struct.cop* %25, i64 0, i32 14
  %26 = load %struct.sv** %cop_warnings53, align 8, !tbaa !32
  %cmp54 = icmp eq %struct.sv* %26, inttoptr (i64 24 to %struct.sv*)
  br i1 %cmp54, label %if.then72, label %lor.lhs.false56

lor.lhs.false56:                                  ; preds = %land.lhs.true52
  %27 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings57 = getelementptr inbounds %struct.cop* %27, i64 0, i32 14
  %28 = load %struct.sv** %cop_warnings57, align 8, !tbaa !32
  %sv_any58 = getelementptr inbounds %struct.sv* %28, i64 0, i32 0
  %29 = load i8** %sv_any58, align 8, !tbaa !34
  %xpv_pv59 = bitcast i8* %29 to i8**
  %30 = load i8** %xpv_pv59, align 8, !tbaa !35
  %arrayidx60 = getelementptr inbounds i8* %30, i64 1
  %31 = load i8* %arrayidx60, align 1, !tbaa !31
  %and62 = and i8 %31, 64
  %tobool63 = icmp eq i8 %and62, 0
  br i1 %tobool63, label %lor.lhs.false64, label %if.then72

lor.lhs.false64:                                  ; preds = %lor.lhs.false56, %land.lhs.true48, %if.end45
  %32 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings65 = getelementptr inbounds %struct.cop* %32, i64 0, i32 14
  %33 = load %struct.sv** %cop_warnings65, align 8, !tbaa !32
  %cmp66 = icmp eq %struct.sv* %33, null
  br i1 %cmp66, label %land.lhs.true68, label %if.end81

land.lhs.true68:                                  ; preds = %lor.lhs.false64
  %34 = load i8* @PL_dowarn, align 1, !tbaa !31
  %and70 = and i8 %34, 1
  %tobool71 = icmp eq i8 %and70, 0
  br i1 %tobool71, label %if.end81, label %if.then72

if.then72:                                        ; preds = %lor.lhs.false56, %land.lhs.true68, %land.lhs.true52
  br i1 %tobool8, label %cond.end77, label %cond.false75

cond.false75:                                     ; preds = %if.then72
  %35 = load i8*** @PL_Argv, align 8, !tbaa !16
  %36 = load i8** %35, align 8, !tbaa !16
  br label %cond.end77

cond.end77:                                       ; preds = %if.then72, %cond.false75
  %cond78 = phi i8* [ %36, %cond.false75 ], [ %tmps.0115, %if.then72 ]
  %call79 = call i32* @__errno_location() #2
  %37 = load i32* %call79, align 4, !tbaa !14
  %call80 = call i8* @strerror(i32 %37) #2
  call void (i64, i8*, ...)* @Perl_warner(i64 7, i8* getelementptr inbounds ([20 x i8]* @.str35, i64 0, i64 0), i8* %cond78, i8* %call80) #2
  br label %if.end81

if.end81:                                         ; preds = %land.lhs.true68, %cond.end77, %lor.lhs.false64
  %tobool82 = icmp eq i32 %do_report, 0
  br i1 %tobool82, label %if.end88, label %if.then83

if.then83:                                        ; preds = %if.end81
  %call84 = call i32* @__errno_location() #2
  %38 = load i32* %call84, align 4, !tbaa !14
  store i32 %38, i32* %e, align 4, !tbaa !14
  %39 = bitcast i32* %e to i8*
  %call85 = call i64 @write(i32 %fd, i8* %39, i64 4) #2
  %call86 = call i32 @close(i32 %fd) #2
  br label %if.end88

if.end88:                                         ; preds = %if.end81, %if.then83, %entry
  %call89 = call i32 (...)* @do_execfree() #2
  ret i8 0
}

declare i8* @Perl_safesysmalloc(i64) #1

declare i32 @execvp(i8*, i8**) #1

declare i64 @write(i32, i8* nocapture readonly, i64) #1

declare i32 @do_execfree(...) #1

; Function Attrs: nounwind uwtable
define void @Perl_do_execfree() #0 {
entry:
  %0 = load i8*** @PL_Argv, align 8, !tbaa !16
  %tobool = icmp eq i8** %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = bitcast i8** %0 to i8*
  tail call void @Perl_safesysfree(i8* %1) #2
  store i8** null, i8*** @PL_Argv, align 8, !tbaa !16
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %2 = load i8** @PL_Cmd, align 8, !tbaa !16
  %tobool1 = icmp eq i8* %2, null
  br i1 %tobool1, label %if.end3, label %if.then2

if.then2:                                         ; preds = %if.end
  tail call void @Perl_safesysfree(i8* %2) #2
  store i8* null, i8** @PL_Cmd, align 8, !tbaa !16
  br label %if.end3

if.end3:                                          ; preds = %if.end, %if.then2
  ret void
}

declare void @Perl_safesysfree(i8*) #1

; Function Attrs: nounwind uwtable
define signext i8 @Perl_do_exec(i8* %cmd) #0 {
entry:
  %call = tail call i32 (i8*, i32, i32, ...)* bitcast (i32 (...)* @do_exec3 to i32 (i8*, i32, i32, ...)*)(i8* %cmd, i32 0, i32 0) #2
  %conv = trunc i32 %call to i8
  ret i8 %conv
}

declare i32 @do_exec3(...) #1

; Function Attrs: nounwind uwtable
define signext i8 @Perl_do_exec3(i8* %cmd, i32 %fd, i32 %do_report) #0 {
entry:
  %flags = alloca [10 x i8], align 1
  %e = alloca i32, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %cmd.addr.0 = phi i8* [ %cmd, %entry ], [ %incdec.ptr, %while.body ]
  %0 = load i8* %cmd.addr.0, align 1, !tbaa !31
  switch i8 %0, label %while.end [
    i8 12, label %while.body
    i8 32, label %while.body
    i8 9, label %while.body
    i8 10, label %while.body
    i8 13, label %while.body
  ]

while.body:                                       ; preds = %while.cond, %while.cond, %while.cond, %while.cond, %while.cond
  %incdec.ptr = getelementptr inbounds i8* %cmd.addr.0, i64 1
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %1 = load i8** @PL_cshname, align 8, !tbaa !16
  %2 = load i64* @PL_cshlen, align 8, !tbaa !26
  %call = call i32 @strncmp(i8* %cmd.addr.0, i8* %1, i64 %2) #2
  %tobool17 = icmp eq i32 %call, 0
  br i1 %tobool17, label %land.lhs.true, label %if.end62

land.lhs.true:                                    ; preds = %while.end
  %add.ptr = getelementptr inbounds i8* %cmd.addr.0, i64 %2
  %call18 = call i32 @strncmp(i8* %add.ptr, i8* getelementptr inbounds ([4 x i8]* @.str36, i64 0, i64 0), i64 3) #2
  %tobool19 = icmp eq i32 %call18, 0
  br i1 %tobool19, label %if.then, label %if.end62

if.then:                                          ; preds = %land.lhs.true
  %arraydecay = getelementptr inbounds [10 x i8]* %flags, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* getelementptr inbounds ([3 x i8]* @.str37, i64 0, i64 0), i64 3, i32 1, i1 false)
  %add.ptr21.sum = add i64 %2, 3
  %add.ptr22 = getelementptr inbounds i8* %cmd.addr.0, i64 %add.ptr21.sum
  %3 = load i8* %add.ptr22, align 1, !tbaa !31
  %cmp24 = icmp eq i8 %3, 102
  br i1 %cmp24, label %if.then26, label %if.end

if.then26:                                        ; preds = %if.then
  %add.ptr22.sum = add i64 %2, 4
  %incdec.ptr27 = getelementptr inbounds i8* %cmd.addr.0, i64 %add.ptr22.sum
  %strlen = call i64 @strlen(i8* %arraydecay) #2
  %endptr = getelementptr [10 x i8]* %flags, i64 0, i64 %strlen
  %4 = bitcast i8* %endptr to i16*
  store i16 102, i16* %4, align 1
  %.pre = load i8* %incdec.ptr27, align 1, !tbaa !31
  br label %if.end

if.end:                                           ; preds = %if.then26, %if.then
  %5 = phi i8 [ %.pre, %if.then26 ], [ %3, %if.then ]
  %s.0 = phi i8* [ %incdec.ptr27, %if.then26 ], [ %add.ptr22, %if.then ]
  %cmp31 = icmp eq i8 %5, 32
  %incdec.ptr34 = getelementptr inbounds i8* %s.0, i64 1
  %incdec.ptr34.s.0 = select i1 %cmp31, i8* %incdec.ptr34, i8* %s.0
  %incdec.ptr36 = getelementptr inbounds i8* %incdec.ptr34.s.0, i64 1
  %6 = load i8* %incdec.ptr34.s.0, align 1, !tbaa !31
  %cmp38 = icmp eq i8 %6, 39
  br i1 %cmp38, label %while.cond41, label %if.end62

while.cond41:                                     ; preds = %if.end, %while.cond41
  %s.2 = phi i8* [ %incdec.ptr44, %while.cond41 ], [ %incdec.ptr36, %if.end ]
  %7 = load i8* %s.2, align 1, !tbaa !31
  %tobool42 = icmp eq i8 %7, 0
  %incdec.ptr44 = getelementptr inbounds i8* %s.2, i64 1
  br i1 %tobool42, label %while.end45, label %while.cond41

while.end45:                                      ; preds = %while.cond41
  %arrayidx = getelementptr inbounds i8* %s.2, i64 -1
  %8 = load i8* %arrayidx, align 1, !tbaa !31
  %cmp47 = icmp eq i8 %8, 10
  br i1 %cmp47, label %if.then49, label %if.end51

if.then49:                                        ; preds = %while.end45
  store i8 0, i8* %arrayidx, align 1, !tbaa !31
  %arrayidx52.phi.trans.insert = getelementptr inbounds i8* %s.2, i64 -2
  %.pre582 = load i8* %arrayidx52.phi.trans.insert, align 1, !tbaa !31
  br label %if.end51

if.end51:                                         ; preds = %if.then49, %while.end45
  %9 = phi i8 [ %.pre582, %if.then49 ], [ %8, %while.end45 ]
  %s.3 = phi i8* [ %arrayidx, %if.then49 ], [ %s.2, %while.end45 ]
  %arrayidx52 = getelementptr inbounds i8* %s.3, i64 -1
  %cmp54 = icmp eq i8 %9, 39
  br i1 %cmp54, label %if.then56, label %if.end62

if.then56:                                        ; preds = %if.end51
  store i8 0, i8* %arrayidx52, align 1, !tbaa !31
  %10 = load i8** @PL_cshname, align 8, !tbaa !16
  %call59 = call i32 (i8*, i8*, ...)* @execl(i8* %10, i8* getelementptr inbounds ([4 x i8]* @.str39, i64 0, i64 0), i8* %arraydecay, i8* %incdec.ptr36, i8* null) #2
  store i8 39, i8* %arrayidx52, align 1, !tbaa !31
  br label %return

if.end62:                                         ; preds = %land.lhs.true, %while.end, %if.end, %if.end51
  %11 = load i8* %cmd.addr.0, align 1, !tbaa !31
  %cmp64 = icmp eq i8 %11, 46
  br i1 %cmp64, label %land.lhs.true66, label %if.end92

land.lhs.true66:                                  ; preds = %if.end62
  %arrayidx67 = getelementptr inbounds i8* %cmd.addr.0, i64 1
  %12 = load i8* %arrayidx67, align 1, !tbaa !31
  switch i8 %12, label %if.end92 [
    i8 32, label %doshell
    i8 9, label %doshell
    i8 10, label %doshell
    i8 13, label %doshell
    i8 12, label %doshell
  ]

if.end92:                                         ; preds = %land.lhs.true66, %if.end62
  %call93 = call i32 @strncmp(i8* %cmd.addr.0, i8* getelementptr inbounds ([5 x i8]* @.str40, i64 0, i64 0), i64 4) #2
  %tobool94 = icmp eq i32 %call93, 0
  br i1 %tobool94, label %land.lhs.true95, label %for.cond.preheader

land.lhs.true95:                                  ; preds = %if.end92
  %arrayidx96 = getelementptr inbounds i8* %cmd.addr.0, i64 4
  %13 = load i8* %arrayidx96, align 1, !tbaa !31
  switch i8 %13, label %for.cond.preheader [
    i8 32, label %doshell
    i8 9, label %doshell
    i8 10, label %doshell
    i8 13, label %doshell
    i8 12, label %doshell
  ]

for.cond.preheader:                               ; preds = %land.lhs.true95, %if.end92
  %tobool123573 = icmp eq i8 %11, 0
  br i1 %tobool123573, label %for.cond160, label %land.rhs124

land.rhs124:                                      ; preds = %for.cond.preheader, %for.inc
  %.pr = phi i8 [ %17, %for.inc ], [ %11, %for.cond.preheader ]
  %s.4574 = phi i8* [ %incdec.ptr154, %for.inc ], [ %cmd.addr.0, %for.cond.preheader ]
  %.off = add i8 %.pr, -65
  %14 = icmp ult i8 %.off, 26
  %.off554 = add i8 %.pr, -97
  %15 = icmp ult i8 %.off554, 26
  %or.cond = or i1 %14, %15
  br i1 %or.cond, label %for.inc, label %lor.lhs.false140

lor.lhs.false140:                                 ; preds = %land.rhs124
  %.off555 = add i8 %.pr, -48
  %16 = icmp ult i8 %.off555, 10
  %cmp150 = icmp eq i8 %.pr, 95
  %or.cond553 = or i1 %16, %cmp150
  br i1 %or.cond553, label %for.inc, label %for.end

for.inc:                                          ; preds = %lor.lhs.false140, %land.rhs124
  %incdec.ptr154 = getelementptr inbounds i8* %s.4574, i64 1
  %17 = load i8* %incdec.ptr154, align 1, !tbaa !31
  %tobool123 = icmp eq i8 %17, 0
  br i1 %tobool123, label %for.cond160, label %land.rhs124

for.end:                                          ; preds = %lor.lhs.false140
  %cmp156 = icmp eq i8 %.pr, 61
  br i1 %cmp156, label %doshell, label %for.cond160

for.cond160:                                      ; preds = %for.end, %for.cond.preheader, %for.inc, %for.inc311
  %18 = phi i8 [ %.pre583, %for.inc311 ], [ %11, %for.end ], [ 0, %for.cond.preheader ], [ %11, %for.inc ]
  %s.5 = phi i8* [ %incdec.ptr312, %for.inc311 ], [ %cmd.addr.0, %for.inc ], [ %cmd.addr.0, %for.cond.preheader ], [ %cmd.addr.0, %for.end ]
  switch i8 %18, label %land.lhs.true166 [
    i8 0, label %for.end313
    i8 32, label %for.inc311
  ]

land.lhs.true166:                                 ; preds = %for.cond160
  %.off556 = add i8 %18, -65
  %19 = icmp ult i8 %.off556, 26
  %.off557 = add i8 %18, -97
  %20 = icmp ult i8 %.off557, 26
  %or.cond560 = or i1 %19, %20
  br i1 %or.cond560, label %for.inc311, label %land.lhs.true182

land.lhs.true182:                                 ; preds = %land.lhs.true166
  %conv183 = sext i8 %18 to i32
  %memchr = call i8* @memchr(i8* getelementptr inbounds ([21 x i8]* @.str41, i64 0, i64 0), i32 %conv183, i64 21)
  %tobool185 = icmp eq i8* %memchr, null
  br i1 %tobool185, label %for.inc311, label %if.then186

if.then186:                                       ; preds = %land.lhs.true182
  switch i8 %18, label %doshell [
    i8 10, label %land.lhs.true190
    i8 62, label %land.lhs.true198
  ]

land.lhs.true190:                                 ; preds = %if.then186
  %arrayidx191 = getelementptr inbounds i8* %s.5, i64 1
  %21 = load i8* %arrayidx191, align 1, !tbaa !31
  %tobool192 = icmp eq i8 %21, 0
  br i1 %tobool192, label %if.then193, label %doshell

if.then193:                                       ; preds = %land.lhs.true190
  store i8 0, i8* %s.5, align 1, !tbaa !31
  br label %for.end313

land.lhs.true198:                                 ; preds = %if.then186
  %arrayidx199 = getelementptr inbounds i8* %s.5, i64 1
  %22 = load i8* %arrayidx199, align 1, !tbaa !31
  %cmp201 = icmp eq i8 %22, 38
  br i1 %cmp201, label %land.lhs.true203, label %doshell

land.lhs.true203:                                 ; preds = %land.lhs.true198
  %arrayidx204 = getelementptr inbounds i8* %s.5, i64 2
  %23 = load i8* %arrayidx204, align 1, !tbaa !31
  %cmp206 = icmp eq i8 %23, 49
  %add.ptr209 = getelementptr inbounds i8* %cmd.addr.0, i64 1
  %cmp210 = icmp ugt i8* %s.5, %add.ptr209
  %or.cond546 = and i1 %cmp206, %cmp210
  br i1 %or.cond546, label %land.lhs.true212, label %doshell

land.lhs.true212:                                 ; preds = %land.lhs.true203
  %arrayidx213 = getelementptr inbounds i8* %s.5, i64 -1
  %24 = load i8* %arrayidx213, align 1, !tbaa !31
  %cmp215 = icmp eq i8 %24, 50
  br i1 %cmp215, label %land.lhs.true217, label %doshell

land.lhs.true217:                                 ; preds = %land.lhs.true212
  %arrayidx218 = getelementptr inbounds i8* %s.5, i64 -2
  %25 = load i8* %arrayidx218, align 1, !tbaa !31
  switch i8 %25, label %doshell [
    i8 32, label %land.lhs.true242
    i8 9, label %land.lhs.true242
    i8 10, label %land.lhs.true242
    i8 13, label %land.lhs.true242
    i8 12, label %land.lhs.true242
  ]

land.lhs.true242:                                 ; preds = %land.lhs.true217, %land.lhs.true217, %land.lhs.true217, %land.lhs.true217, %land.lhs.true217
  %arrayidx243 = getelementptr inbounds i8* %s.5, i64 3
  %26 = load i8* %arrayidx243, align 1, !tbaa !31
  switch i8 %26, label %doshell [
    i8 0, label %while.cond272
    i8 32, label %while.cond272
    i8 9, label %while.cond272
    i8 10, label %while.cond272
    i8 13, label %while.cond272
    i8 12, label %while.cond272
  ]

while.cond272:                                    ; preds = %land.lhs.true242, %land.lhs.true242, %land.lhs.true242, %land.lhs.true242, %land.lhs.true242, %land.lhs.true242, %while.body297
  %27 = phi i8 [ %.pre584, %while.body297 ], [ %26, %land.lhs.true242 ], [ %26, %land.lhs.true242 ], [ %26, %land.lhs.true242 ], [ %26, %land.lhs.true242 ], [ %26, %land.lhs.true242 ], [ %26, %land.lhs.true242 ]
  %t.0 = phi i8* [ %incdec.ptr298, %while.body297 ], [ %arrayidx243, %land.lhs.true242 ], [ %arrayidx243, %land.lhs.true242 ], [ %arrayidx243, %land.lhs.true242 ], [ %arrayidx243, %land.lhs.true242 ], [ %arrayidx243, %land.lhs.true242 ], [ %arrayidx243, %land.lhs.true242 ]
  switch i8 %27, label %doshell [
    i8 12, label %while.body297
    i8 32, label %while.body297
    i8 9, label %while.body297
    i8 10, label %while.body297
    i8 13, label %while.body297
    i8 0, label %land.lhs.true301
  ]

while.body297:                                    ; preds = %while.cond272, %while.cond272, %while.cond272, %while.cond272, %while.cond272
  %incdec.ptr298 = getelementptr inbounds i8* %t.0, i64 1
  %.pre584 = load i8* %incdec.ptr298, align 1, !tbaa !31
  br label %while.cond272

land.lhs.true301:                                 ; preds = %while.cond272
  %call302 = call i32 @dup2(i32 1, i32 2) #2
  %cmp303 = icmp eq i32 %call302, -1
  br i1 %cmp303, label %doshell, label %if.then305

if.then305:                                       ; preds = %land.lhs.true301
  store i8 0, i8* %arrayidx218, align 1, !tbaa !31
  br label %for.end313

doshell:                                          ; preds = %while.cond272, %if.then186, %land.lhs.true190, %land.lhs.true242, %land.lhs.true217, %land.lhs.true95, %land.lhs.true95, %land.lhs.true95, %land.lhs.true95, %land.lhs.true95, %land.lhs.true66, %land.lhs.true66, %land.lhs.true66, %land.lhs.true66, %land.lhs.true66, %land.lhs.true301, %land.lhs.true198, %land.lhs.true203, %land.lhs.true212, %for.end, %if.then395
  %28 = load i8** @PL_sh_path, align 8, !tbaa !16
  %call309 = call i32 (i8*, i8*, ...)* @execl(i8* %28, i8* getelementptr inbounds ([3 x i8]* @.str42, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8]* @.str37, i64 0, i64 0), i8* %cmd.addr.0, i8* null) #2
  br label %return

for.inc311:                                       ; preds = %land.lhs.true166, %for.cond160, %land.lhs.true182
  %incdec.ptr312 = getelementptr inbounds i8* %s.5, i64 1
  %.pre583 = load i8* %incdec.ptr312, align 1, !tbaa !31
  br label %for.cond160

for.end313:                                       ; preds = %for.cond160, %if.then305, %if.then193
  %sub.ptr.lhs.cast = ptrtoint i8* %s.5 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %cmd.addr.0 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %div = sdiv i64 %sub.ptr.sub, 2
  %add = shl i64 %div, 3
  %mul = add i64 %add, 16
  %call314 = call i8* @Perl_safesysmalloc(i64 %mul) #2
  %29 = bitcast i8* %call314 to i8**
  store i8** %29, i8*** @PL_Argv, align 8, !tbaa !16
  %call318 = call i8* @Perl_savepvn(i8* %cmd.addr.0, i64 %sub.ptr.sub) #2
  store i8* %call318, i8** @PL_Cmd, align 8, !tbaa !16
  %30 = load i8*** @PL_Argv, align 8, !tbaa !16
  %31 = load i8* %call318, align 1, !tbaa !31
  %tobool320570 = icmp eq i8 %31, 0
  br i1 %tobool320570, label %for.end386, label %while.cond322.preheader

while.cond322.preheader:                          ; preds = %for.end313, %for.cond319.backedge
  %32 = phi i8 [ %35, %for.cond319.backedge ], [ %31, %for.end313 ]
  %s.6572 = phi i8* [ %s.6.be, %for.cond319.backedge ], [ %call318, %for.end313 ]
  %a.0571 = phi i8** [ %a.1.ph, %for.cond319.backedge ], [ %30, %for.end313 ]
  br label %while.cond322

while.cond322:                                    ; preds = %while.cond322.preheader, %while.body347
  %33 = phi i8 [ %.pre585, %while.body347 ], [ %32, %while.cond322.preheader ]
  %s.7 = phi i8* [ %incdec.ptr348, %while.body347 ], [ %s.6572, %while.cond322.preheader ]
  switch i8 %33, label %if.then351 [
    i8 12, label %while.body347
    i8 32, label %while.body347
    i8 9, label %while.body347
    i8 10, label %while.body347
    i8 13, label %while.body347
    i8 0, label %while.cond354.preheader
  ]

while.body347:                                    ; preds = %while.cond322, %while.cond322, %while.cond322, %while.cond322, %while.cond322
  %incdec.ptr348 = getelementptr inbounds i8* %s.7, i64 1
  %.pre585 = load i8* %incdec.ptr348, align 1, !tbaa !31
  br label %while.cond322

if.then351:                                       ; preds = %while.cond322
  %incdec.ptr352 = getelementptr inbounds i8** %a.0571, i64 1
  store i8* %s.7, i8** %a.0571, align 8, !tbaa !16
  br label %while.cond354.preheader

while.cond354.preheader:                          ; preds = %while.cond322, %if.then351
  %a.1.ph = phi i8** [ %incdec.ptr352, %if.then351 ], [ %a.0571, %while.cond322 ]
  br label %while.cond354

while.cond354:                                    ; preds = %while.cond354.preheader, %while.body379.critedge
  %s.8 = phi i8* [ %incdec.ptr380, %while.body379.critedge ], [ %s.7, %while.cond354.preheader ]
  %34 = load i8* %s.8, align 1, !tbaa !31
  switch i8 %34, label %while.body379.critedge [
    i8 0, label %for.cond319.backedge
    i8 9, label %if.then383
    i8 10, label %if.then383
    i8 12, label %if.then383
    i8 13, label %if.then383
    i8 32, label %if.then383
  ]

while.body379.critedge:                           ; preds = %while.cond354
  %incdec.ptr380 = getelementptr inbounds i8* %s.8, i64 1
  br label %while.cond354

if.then383:                                       ; preds = %while.cond354, %while.cond354, %while.cond354, %while.cond354, %while.cond354
  %incdec.ptr384 = getelementptr inbounds i8* %s.8, i64 1
  store i8 0, i8* %s.8, align 1, !tbaa !31
  br label %for.cond319.backedge

for.cond319.backedge:                             ; preds = %while.cond354, %if.then383
  %s.6.be = phi i8* [ %incdec.ptr384, %if.then383 ], [ %s.8, %while.cond354 ]
  %35 = load i8* %s.6.be, align 1, !tbaa !31
  %tobool320 = icmp eq i8 %35, 0
  br i1 %tobool320, label %for.end386, label %while.cond322.preheader

for.end386:                                       ; preds = %for.cond319.backedge, %for.end313
  %a.0.lcssa = phi i8** [ %30, %for.end313 ], [ %a.1.ph, %for.cond319.backedge ]
  store i8* null, i8** %a.0.lcssa, align 8, !tbaa !16
  %36 = load i8*** @PL_Argv, align 8, !tbaa !16
  %37 = load i8** %36, align 8, !tbaa !16
  %tobool388 = icmp eq i8* %37, null
  br i1 %tobool388, label %if.end432, label %if.then389

if.then389:                                       ; preds = %for.end386
  %call391 = call i32 @execvp(i8* %37, i8** %36) #2
  %call392 = call i32* @__errno_location() #2
  %38 = load i32* %call392, align 4, !tbaa !14
  %cmp393 = icmp eq i32 %38, 8
  br i1 %cmp393, label %if.then395, label %if.end397

if.then395:                                       ; preds = %if.then389
  %call396 = call i32 (...)* @do_execfree() #2
  br label %doshell

if.end397:                                        ; preds = %if.then389
  %call398 = call i32* @__errno_location() #2
  %39 = load i32* %call398, align 4, !tbaa !14
  store i32 %39, i32* %e, align 4, !tbaa !14
  %40 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings = getelementptr inbounds %struct.cop* %40, i64 0, i32 14
  %41 = load %struct.sv** %cop_warnings, align 8, !tbaa !32
  %cmp399 = icmp eq %struct.sv* %41, null
  br i1 %cmp399, label %lor.lhs.false414, label %land.lhs.true401

land.lhs.true401:                                 ; preds = %if.end397
  %42 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings402 = getelementptr inbounds %struct.cop* %42, i64 0, i32 14
  %43 = load %struct.sv** %cop_warnings402, align 8, !tbaa !32
  %cmp403 = icmp eq %struct.sv* %43, inttoptr (i64 48 to %struct.sv*)
  br i1 %cmp403, label %lor.lhs.false414, label %land.lhs.true405

land.lhs.true405:                                 ; preds = %land.lhs.true401
  %44 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings406 = getelementptr inbounds %struct.cop* %44, i64 0, i32 14
  %45 = load %struct.sv** %cop_warnings406, align 8, !tbaa !32
  %cmp407 = icmp eq %struct.sv* %45, inttoptr (i64 24 to %struct.sv*)
  br i1 %cmp407, label %if.then422, label %lor.lhs.false409

lor.lhs.false409:                                 ; preds = %land.lhs.true405
  %46 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings410 = getelementptr inbounds %struct.cop* %46, i64 0, i32 14
  %47 = load %struct.sv** %cop_warnings410, align 8, !tbaa !32
  %sv_any = getelementptr inbounds %struct.sv* %47, i64 0, i32 0
  %48 = load i8** %sv_any, align 8, !tbaa !34
  %xpv_pv = bitcast i8* %48 to i8**
  %49 = load i8** %xpv_pv, align 8, !tbaa !35
  %arrayidx411 = getelementptr inbounds i8* %49, i64 1
  %50 = load i8* %arrayidx411, align 1, !tbaa !31
  %and = and i8 %50, 64
  %tobool413 = icmp eq i8 %and, 0
  br i1 %tobool413, label %lor.lhs.false414, label %if.then422

lor.lhs.false414:                                 ; preds = %lor.lhs.false409, %land.lhs.true401, %if.end397
  %51 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !16
  %cop_warnings415 = getelementptr inbounds %struct.cop* %51, i64 0, i32 14
  %52 = load %struct.sv** %cop_warnings415, align 8, !tbaa !32
  %cmp416 = icmp eq %struct.sv* %52, null
  br i1 %cmp416, label %land.lhs.true418, label %if.end426

land.lhs.true418:                                 ; preds = %lor.lhs.false414
  %53 = load i8* @PL_dowarn, align 1, !tbaa !31
  %and420 = and i8 %53, 1
  %tobool421 = icmp eq i8 %and420, 0
  br i1 %tobool421, label %if.end426, label %if.then422

if.then422:                                       ; preds = %lor.lhs.false409, %land.lhs.true418, %land.lhs.true405
  %54 = load i8*** @PL_Argv, align 8, !tbaa !16
  %55 = load i8** %54, align 8, !tbaa !16
  %call424 = call i32* @__errno_location() #2
  %56 = load i32* %call424, align 4, !tbaa !14
  %call425 = call i8* @strerror(i32 %56) #2
  call void (i64, i8*, ...)* @Perl_warner(i64 7, i8* getelementptr inbounds ([20 x i8]* @.str35, i64 0, i64 0), i8* %55, i8* %call425) #2
  br label %if.end426

if.end426:                                        ; preds = %land.lhs.true418, %if.then422, %lor.lhs.false414
  %tobool427 = icmp eq i32 %do_report, 0
  br i1 %tobool427, label %if.end432, label %if.then428

if.then428:                                       ; preds = %if.end426
  %57 = bitcast i32* %e to i8*
  %call429 = call i64 @write(i32 %fd, i8* %57, i64 4) #2
  %call430 = call i32 @close(i32 %fd) #2
  br label %if.end432

if.end432:                                        ; preds = %if.end426, %for.end386, %if.then428
  %call433 = call i32 (...)* @do_execfree() #2
  br label %return

return:                                           ; preds = %if.end432, %doshell, %if.then56
  ret i8 0
}

; Function Attrs: nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) #3

declare i32 @execl(i8*, i8*, ...) #1

; Function Attrs: nounwind uwtable
define i64 @Perl_apply(i64 %type, %struct.sv** %mark, %struct.sv** %sp) #0 {
entry:
  %n_a = alloca i64, align 8
  %0 = load i8* @PL_tainting, align 1, !tbaa !31
  %tobool = icmp eq i8 %0, 0
  br i1 %tobool, label %if.end4, label %while.cond.preheader

while.cond.preheader:                             ; preds = %entry
  %incdec.ptr157 = getelementptr inbounds %struct.sv** %mark, i64 1
  %cmp158 = icmp ugt %struct.sv** %incdec.ptr157, %sp
  br i1 %cmp158, label %if.end4, label %while.body

while.body:                                       ; preds = %while.cond.preheader, %while.cond.backedge
  %incdec.ptr159 = phi %struct.sv** [ %incdec.ptr, %while.cond.backedge ], [ %incdec.ptr157, %while.cond.preheader ]
  %1 = load %struct.sv** %incdec.ptr159, align 8, !tbaa !16
  %sv_flags = getelementptr inbounds %struct.sv* %1, i64 0, i32 2
  %2 = load i64* %sv_flags, align 8, !tbaa !1
  %and = and i64 %2, 57344
  %tobool1 = icmp eq i64 %and, 0
  br i1 %tobool1, label %while.cond.backedge, label %land.lhs.true

while.cond.backedge:                              ; preds = %while.body, %land.lhs.true
  %incdec.ptr = getelementptr inbounds %struct.sv** %incdec.ptr159, i64 1
  %cmp = icmp ugt %struct.sv** %incdec.ptr, %sp
  br i1 %cmp, label %if.end4, label %while.body

land.lhs.true:                                    ; preds = %while.body
  %call = call signext i8 @Perl_sv_tainted(%struct.sv* %1) #2
  %tobool2 = icmp eq i8 %call, 0
  br i1 %tobool2, label %while.cond.backedge, label %if.then3

if.then3:                                         ; preds = %land.lhs.true
  store i8 1, i8* @PL_tainted, align 1, !tbaa !31
  br label %if.end4

if.end4:                                          ; preds = %while.cond.backedge, %while.cond.preheader, %if.then3, %entry
  switch i64 %type, label %sw.epilog [
    i64 267, label %sw.bb
    i64 266, label %sw.bb54
  ]

sw.bb:                                            ; preds = %if.end4
  %3 = load i8* @PL_tainted, align 1, !tbaa !31
  %tobool5 = icmp ne i8 %3, 0
  %4 = load i8* @PL_tainting, align 1
  %tobool7 = icmp ne i8 %4, 0
  %or.cond = and i1 %tobool5, %tobool7
  br i1 %or.cond, label %if.then8, label %if.end10

if.then8:                                         ; preds = %sw.bb
  call void @Perl_taint_proper(i8* null, i8* getelementptr inbounds ([6 x i8]* @.str43, i64 0, i64 0)) #2
  br label %if.end10

if.end10:                                         ; preds = %if.then8, %sw.bb
  %incdec.ptr11 = getelementptr inbounds %struct.sv** %mark, i64 1
  %cmp12 = icmp ugt %struct.sv** %incdec.ptr11, %sp
  br i1 %cmp12, label %sw.epilog, label %if.then14

if.then14:                                        ; preds = %if.end10
  %5 = load %struct.sv** %incdec.ptr11, align 8, !tbaa !16
  store %struct.sv* %5, %struct.sv** @PL_Sv, align 8, !tbaa !16
  %sv_flags15 = getelementptr inbounds %struct.sv* %5, i64 0, i32 2
  %6 = load i64* %sv_flags15, align 8, !tbaa !1
  %and16 = and i64 %6, 65536
  %tobool17 = icmp eq i64 %and16, 0
  br i1 %tobool17, label %cond.false, label %cond.true

cond.true:                                        ; preds = %if.then14
  %sv_any = getelementptr inbounds %struct.sv* %5, i64 0, i32 0
  %7 = load i8** %sv_any, align 8, !tbaa !34
  %xiv_iv = getelementptr inbounds i8* %7, i64 24
  %8 = bitcast i8* %xiv_iv to i64*
  %9 = load i64* %8, align 8, !tbaa !42
  br label %cond.end

cond.false:                                       ; preds = %if.then14
  %call18 = call i64 @Perl_sv_2iv(%struct.sv* %5) #2
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %9, %cond.true ], [ %call18, %cond.false ]
  %10 = load i8* @PL_tainted, align 1, !tbaa !31
  %tobool19 = icmp ne i8 %10, 0
  %11 = load i8* @PL_tainting, align 1
  %tobool21 = icmp ne i8 %11, 0
  %or.cond116 = and i1 %tobool19, %tobool21
  br i1 %or.cond116, label %if.then22, label %if.end24

if.then22:                                        ; preds = %cond.end
  call void @Perl_taint_proper(i8* null, i8* getelementptr inbounds ([6 x i8]* @.str43, i64 0, i64 0)) #2
  br label %if.end24

if.end24:                                         ; preds = %if.then22, %cond.end
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %sp to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %incdec.ptr11 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = ashr exact i64 %sub.ptr.sub, 3
  %incdec.ptr26148 = getelementptr inbounds %struct.sv** %mark, i64 2
  %cmp27149 = icmp ugt %struct.sv** %incdec.ptr26148, %sp
  br i1 %cmp27149, label %sw.epilog, label %while.body29.lr.ph

while.body29.lr.ph:                               ; preds = %if.end24
  %conv47 = trunc i64 %cond to i32
  br label %while.body29

while.body29:                                     ; preds = %while.body29.lr.ph, %if.end46
  %incdec.ptr26151 = phi %struct.sv** [ %incdec.ptr26148, %while.body29.lr.ph ], [ %incdec.ptr26, %if.end46 ]
  %tot.0150 = phi i64 [ %sub.ptr.div, %while.body29.lr.ph ], [ %tot.0.dec, %if.end46 ]
  %12 = load %struct.sv** %incdec.ptr26151, align 8, !tbaa !16
  store %struct.sv* %12, %struct.sv** @PL_Sv, align 8, !tbaa !16
  %sv_flags30 = getelementptr inbounds %struct.sv* %12, i64 0, i32 2
  %13 = load i64* %sv_flags30, align 8, !tbaa !1
  %and31 = and i64 %13, 262144
  %cmp32 = icmp eq i64 %and31, 0
  br i1 %cmp32, label %cond.false37, label %cond.true34

cond.true34:                                      ; preds = %while.body29
  %sv_any35 = getelementptr inbounds %struct.sv* %12, i64 0, i32 0
  %14 = load i8** %sv_any35, align 8, !tbaa !34
  %xpv_cur = getelementptr inbounds i8* %14, i64 8
  %15 = bitcast i8* %xpv_cur to i64*
  %16 = load i64* %15, align 8, !tbaa !48
  store i64 %16, i64* %n_a, align 8, !tbaa !26
  %xpv_pv = bitcast i8* %14 to i8**
  %17 = load i8** %xpv_pv, align 8, !tbaa !35
  br label %cond.end39

cond.false37:                                     ; preds = %while.body29
  %call38 = call i8* @Perl_sv_2pv_flags(%struct.sv* %12, i64* %n_a, i64 2) #2
  br label %cond.end39

cond.end39:                                       ; preds = %cond.false37, %cond.true34
  %cond40 = phi i8* [ %17, %cond.true34 ], [ %call38, %cond.false37 ]
  %18 = load i8* @PL_tainted, align 1, !tbaa !31
  %tobool41 = icmp ne i8 %18, 0
  %19 = load i8* @PL_tainting, align 1
  %tobool43 = icmp ne i8 %19, 0
  %or.cond117 = and i1 %tobool41, %tobool43
  br i1 %or.cond117, label %if.then44, label %if.end46

if.then44:                                        ; preds = %cond.end39
  call void @Perl_taint_proper(i8* null, i8* getelementptr inbounds ([6 x i8]* @.str43, i64 0, i64 0)) #2
  br label %if.end46

if.end46:                                         ; preds = %if.then44, %cond.end39
  %call48 = call i32 @chmod(i8* %cond40, i32 %conv47) #2
  %not.tobool49 = icmp ne i32 %call48, 0
  %dec = sext i1 %not.tobool49 to i64
  %tot.0.dec = add nsw i64 %dec, %tot.0150
  %incdec.ptr26 = getelementptr inbounds %struct.sv** %incdec.ptr26151, i64 1
  %cmp27 = icmp ugt %struct.sv** %incdec.ptr26, %sp
  br i1 %cmp27, label %sw.epilog, label %while.body29

sw.bb54:                                          ; preds = %if.end4
  %20 = load i8* @PL_tainted, align 1, !tbaa !31
  %tobool55 = icmp ne i8 %20, 0
  %21 = load i8* @PL_tainting, align 1
  %tobool57 = icmp ne i8 %21, 0
  %or.cond118 = and i1 %tobool55, %tobool57
  br i1 %or.cond118, label %if.then58, label %if.end60

if.then58:                                        ; preds = %sw.bb54
  call void @Perl_taint_proper(i8* null, i8* getelementptr inbounds ([7 x i8]* @.str44, i64 0, i64 0)) #2
  br label %if.end60

if.end60:                                         ; preds = %if.then58, %sw.bb54
  %sub.ptr.lhs.cast61 = ptrtoint %struct.sv** %sp to i64
  %sub.ptr.rhs.cast62 = ptrtoint %struct.sv** %mark to i64
  %sub.ptr.sub63 = sub i64 %sub.ptr.lhs.cast61, %sub.ptr.rhs.cast62
  %sub.ptr.div64 = ashr exact i64 %sub.ptr.sub63, 3
  %incdec.ptr66152 = getelementptr inbounds %struct.sv** %mark, i64 1
  %cmp67153 = icmp ugt %struct.sv** %incdec.ptr66152, %sp
  br i1 %cmp67153, label %sw.epilog, label %while.body69

while.body69:                                     ; preds = %if.end60, %while.cond65.backedge
  %incdec.ptr66155 = phi %struct.sv** [ %incdec.ptr66, %while.cond65.backedge ], [ %incdec.ptr66152, %if.end60 ]
  %tot.1154 = phi i64 [ %tot.1.be, %while.cond65.backedge ], [ %sub.ptr.div64, %if.end60 ]
  %22 = load %struct.sv** %incdec.ptr66155, align 8, !tbaa !16
  store %struct.sv* %22, %struct.sv** @PL_Sv, align 8, !tbaa !16
  %sv_flags70 = getelementptr inbounds %struct.sv* %22, i64 0, i32 2
  %23 = load i64* %sv_flags70, align 8, !tbaa !1
  %and71 = and i64 %23, 262144
  %cmp72 = icmp eq i64 %and71, 0
  br i1 %cmp72, label %cond.false79, label %cond.true74

cond.true74:                                      ; preds = %while.body69
  %sv_any75 = getelementptr inbounds %struct.sv* %22, i64 0, i32 0
  %24 = load i8** %sv_any75, align 8, !tbaa !34
  %xpv_cur76 = getelementptr inbounds i8* %24, i64 8
  %25 = bitcast i8* %xpv_cur76 to i64*
  %26 = load i64* %25, align 8, !tbaa !48
  store i64 %26, i64* %n_a, align 8, !tbaa !26
  %xpv_pv78 = bitcast i8* %24 to i8**
  %27 = load i8** %xpv_pv78, align 8, !tbaa !35
  br label %cond.end81

cond.false79:                                     ; preds = %while.body69
  %call80 = call i8* @Perl_sv_2pv_flags(%struct.sv* %22, i64* %n_a, i64 2) #2
  br label %cond.end81

cond.end81:                                       ; preds = %cond.false79, %cond.true74
  %cond82 = phi i8* [ %27, %cond.true74 ], [ %call80, %cond.false79 ]
  %28 = load i8* @PL_tainted, align 1, !tbaa !31
  %tobool83 = icmp ne i8 %28, 0
  %29 = load i8* @PL_tainting, align 1
  %tobool85 = icmp ne i8 %29, 0
  %or.cond119 = and i1 %tobool83, %tobool85
  br i1 %or.cond119, label %if.then86, label %if.end88

if.then86:                                        ; preds = %cond.end81
  call void @Perl_taint_proper(i8* null, i8* getelementptr inbounds ([7 x i8]* @.str44, i64 0, i64 0)) #2
  br label %if.end88

if.end88:                                         ; preds = %if.then86, %cond.end81
  %30 = load i32* @PL_euid, align 4, !tbaa !14
  %tobool89 = icmp eq i32 %30, 0
  %31 = load i8* @PL_unsafe, align 1
  %tobool91 = icmp eq i8 %31, 0
  %or.cond146 = and i1 %tobool89, %tobool91
  br i1 %or.cond146, label %if.else, label %if.then92

if.then92:                                        ; preds = %if.end88
  %call93 = call i32 @unlink(i8* %cond82) #2
  %not.tobool94 = icmp ne i32 %call93, 0
  %dec96 = sext i1 %not.tobool94 to i64
  %tot.1.dec96 = add nsw i64 %dec96, %tot.1154
  br label %while.cond65.backedge

if.else:                                          ; preds = %if.end88
  %call98 = call i32 @stat(i8* %cond82, %struct.stat* @PL_statbuf) #2
  %cmp99 = icmp slt i32 %call98, 0
  br i1 %cmp99, label %if.then105, label %lor.lhs.false101

lor.lhs.false101:                                 ; preds = %if.else
  %32 = load i32* getelementptr inbounds (%struct.stat* @PL_statbuf, i64 0, i32 3), align 8, !tbaa !39
  %and102 = and i32 %32, 61440
  %cmp103 = icmp eq i32 %and102, 16384
  br i1 %cmp103, label %if.then105, label %if.else107

if.then105:                                       ; preds = %lor.lhs.false101, %if.else
  %dec106 = add nsw i64 %tot.1154, -1
  br label %while.cond65.backedge

while.cond65.backedge:                            ; preds = %if.then105, %if.then92, %if.else107
  %tot.1.be = phi i64 [ %dec106, %if.then105 ], [ %tot.1.dec96, %if.then92 ], [ %tot.1.dec111, %if.else107 ]
  %incdec.ptr66 = getelementptr inbounds %struct.sv** %incdec.ptr66155, i64 1
  %cmp67 = icmp ugt %struct.sv** %incdec.ptr66, %sp
  br i1 %cmp67, label %sw.epilog, label %while.body69

if.else107:                                       ; preds = %lor.lhs.false101
  %call108 = call i32 @unlink(i8* %cond82) #2
  %not.tobool109 = icmp ne i32 %call108, 0
  %dec111 = sext i1 %not.tobool109 to i64
  %tot.1.dec111 = add nsw i64 %dec111, %tot.1154
  br label %while.cond65.backedge

sw.epilog:                                        ; preds = %while.cond65.backedge, %if.end46, %if.end60, %if.end24, %if.end10, %if.end4
  %tot.2 = phi i64 [ 0, %if.end4 ], [ 0, %if.end10 ], [ %sub.ptr.div, %if.end24 ], [ %sub.ptr.div64, %if.end60 ], [ %tot.0.dec, %if.end46 ], [ %tot.1.be, %while.cond65.backedge ]
  ret i64 %tot.2
}

declare signext i8 @Perl_sv_tainted(%struct.sv*) #1

declare i64 @Perl_sv_2iv(%struct.sv*) #1

; Function Attrs: nounwind uwtable
define signext i8 @Perl_cando(i32 %mode, i32 %effective, %struct.stat* nocapture readonly %statbufp) #0 {
entry:
  %tobool = icmp ne i32 %effective, 0
  %0 = load i32* @PL_euid, align 4, !tbaa !14
  %1 = load i32* @PL_uid, align 4, !tbaa !14
  %cond = select i1 %tobool, i32 %0, i32 %1
  %cmp = icmp eq i32 %cond, 0
  br i1 %cmp, label %if.then, label %if.end9

if.then:                                          ; preds = %entry
  %cmp1 = icmp eq i32 %mode, 64
  br i1 %cmp1, label %if.then2, label %return

if.then2:                                         ; preds = %if.then
  %st_mode = getelementptr inbounds %struct.stat* %statbufp, i64 0, i32 3
  %2 = load i32* %st_mode, align 4, !tbaa !39
  %and = and i32 %2, 73
  %tobool3 = icmp ne i32 %and, 0
  %and5 = and i32 %2, 61440
  %cmp6 = icmp eq i32 %and5, 16384
  %or.cond = or i1 %tobool3, %cmp6
  %. = zext i1 %or.cond to i8
  ret i8 %.

if.end9:                                          ; preds = %entry
  %st_uid = getelementptr inbounds %struct.stat* %statbufp, i64 0, i32 4
  %3 = load i32* %st_uid, align 4, !tbaa !63
  %cmp15 = icmp eq i32 %3, %cond
  br i1 %cmp15, label %if.then16, label %if.else22

if.then16:                                        ; preds = %if.end9
  %st_mode17 = getelementptr inbounds %struct.stat* %statbufp, i64 0, i32 3
  %4 = load i32* %st_mode17, align 4, !tbaa !39
  %and18 = and i32 %4, %mode
  %tobool19 = icmp eq i32 %and18, 0
  br i1 %tobool19, label %if.end38, label %return

if.else22:                                        ; preds = %if.end9
  %st_gid = getelementptr inbounds %struct.stat* %statbufp, i64 0, i32 5
  %5 = load i32* %st_gid, align 4, !tbaa !64
  %call = tail call i32 (i32, i32, ...)* bitcast (i32 (...)* @ingroup to i32 (i32, i32, ...)*)(i32 %5, i32 %effective) #2
  %tobool23 = icmp eq i32 %call, 0
  %st_mode25 = getelementptr inbounds %struct.stat* %statbufp, i64 0, i32 3
  %6 = load i32* %st_mode25, align 4, !tbaa !39
  br i1 %tobool23, label %if.else30, label %if.then24

if.then24:                                        ; preds = %if.else22
  %shr = lshr i32 %mode, 3
  %and26 = and i32 %6, %shr
  %tobool27 = icmp eq i32 %and26, 0
  br i1 %tobool27, label %if.end38, label %return

if.else30:                                        ; preds = %if.else22
  %shr32 = lshr i32 %mode, 6
  %and33 = and i32 %6, %shr32
  %tobool34 = icmp eq i32 %and33, 0
  br i1 %tobool34, label %if.end38, label %return

if.end38:                                         ; preds = %if.then16, %if.then24, %if.else30
  br label %return

return:                                           ; preds = %if.else30, %if.then24, %if.then16, %if.then, %if.end38
  %retval.0 = phi i8 [ 0, %if.end38 ], [ 1, %if.then ], [ 1, %if.then16 ], [ 1, %if.then24 ], [ 1, %if.else30 ]
  ret i8 %retval.0
}

declare i32 @ingroup(...) #1

; Function Attrs: nounwind readonly uwtable
define signext i8 @Perl_ingroup(i32 %testgid, i32 %effective) #5 {
entry:
  %tobool = icmp ne i32 %effective, 0
  %0 = load i32* @PL_egid, align 4, !tbaa !14
  %1 = load i32* @PL_gid, align 4, !tbaa !14
  %cond = select i1 %tobool, i32 %0, i32 %1
  %cmp = icmp eq i32 %cond, %testgid
  %. = zext i1 %cmp to i8
  ret i8 %.
}

; Function Attrs: nounwind uwtable
define %struct._PerlIO** @Perl_start_glob(%struct.sv* %tmpglob, %struct.io* nocapture readonly %io) #0 {
entry:
  %call = tail call %struct.sv* @Perl_newSV(i64 0) #2
  tail call void @Perl_push_scope() #2
  tail call void @Perl_save_freesv(%struct.sv* %call) #2
  %0 = load i8** @PL_cshname, align 8, !tbaa !16
  %1 = load i64* @PL_cshlen, align 8, !tbaa !26
  tail call void @Perl_sv_setpvn(%struct.sv* %call, i8* %0, i64 %1) #2
  tail call void @Perl_sv_catpv(%struct.sv* %call, i8* getelementptr inbounds ([27 x i8]* @.str45, i64 0, i64 0)) #2
  tail call void @Perl_sv_catsv_flags(%struct.sv* %call, %struct.sv* %tmpglob, i64 2) #2
  tail call void @Perl_sv_catpv(%struct.sv* %call, i8* getelementptr inbounds ([16 x i8]* @.str46, i64 0, i64 0)) #2
  %2 = load %struct.gv** @PL_last_in_gv, align 8, !tbaa !16
  %sv_any = getelementptr inbounds %struct.sv* %call, i64 0, i32 0
  %3 = load i8** %sv_any, align 8, !tbaa !34
  %xpv_pv = bitcast i8* %3 to i8**
  %4 = load i8** %xpv_pv, align 8, !tbaa !35
  %xpv_cur = getelementptr inbounds i8* %3, i64 8
  %5 = bitcast i8* %xpv_cur to i64*
  %6 = load i64* %5, align 8, !tbaa !48
  %call.i = tail call signext i8 @Perl_do_openn(%struct.gv* %2, i8* %4, i64 %6, i32 0, i32 0, i32 0, %struct._PerlIO** null, %struct.sv** null, i64 0) #2
  %sv_any3 = getelementptr inbounds %struct.io* %io, i64 0, i32 0
  %7 = load %struct.xpvio** %sv_any3, align 8, !tbaa !21
  %xio_ifp = getelementptr inbounds %struct.xpvio* %7, i64 0, i32 7
  %8 = load %struct._PerlIO*** %xio_ifp, align 8, !tbaa !23
  tail call void @Perl_pop_scope() #2
  ret %struct._PerlIO** %8
}

declare %struct.sv* @Perl_newSV(i64) #1

declare void @Perl_push_scope() #1

declare void @Perl_sv_catsv_flags(%struct.sv*, %struct.sv*, i64) #1

declare void @Perl_pop_scope() #1

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #2

; Function Attrs: nounwind readonly
declare i8* @memchr(i8*, i32, i64) #6

attributes #0 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }
attributes #3 = { nounwind readonly "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly }

!llvm.ident = !{!0}

!0 = metadata !{metadata !"clang version 3.5 (trunk)"}
!1 = metadata !{metadata !2, metadata !6, i64 16}
!2 = metadata !{metadata !"sv", metadata !3, i64 0, metadata !6, i64 8, metadata !6, i64 16}
!3 = metadata !{metadata !"any pointer", metadata !4, i64 0}
!4 = metadata !{metadata !"omnipotent char", metadata !5, i64 0}
!5 = metadata !{metadata !"Simple C/C++ TBAA"}
!6 = metadata !{metadata !"long", metadata !4, i64 0}
!7 = metadata !{metadata !8, metadata !3, i64 0}
!8 = metadata !{metadata !"gv", metadata !3, i64 0, metadata !6, i64 8, metadata !6, i64 16}
!9 = metadata !{metadata !10, metadata !3, i64 56}
!10 = metadata !{metadata !"xpvgv", metadata !3, i64 0, metadata !6, i64 8, metadata !6, i64 16, metadata !6, i64 24, metadata !11, i64 32, metadata !3, i64 40, metadata !3, i64 48, metadata !3, i64 56, metadata !3, i64 64, metadata !6, i64 72, metadata !3, i64 80, metadata !4, i64 88}
!11 = metadata !{metadata !"double", metadata !4, i64 0}
!12 = metadata !{metadata !13, metadata !3, i64 16}
!13 = metadata !{metadata !"gp", metadata !3, i64 0, metadata !6, i64 8, metadata !3, i64 16, metadata !3, i64 24, metadata !3, i64 32, metadata !3, i64 40, metadata !3, i64 48, metadata !3, i64 56, metadata !6, i64 64, metadata !6, i64 72, metadata !6, i64 80, metadata !3, i64 88}
!14 = metadata !{metadata !15, metadata !15, i64 0}
!15 = metadata !{metadata !"int", metadata !4, i64 0}
!16 = metadata !{metadata !3, metadata !3, i64 0}
!17 = metadata !{metadata !18, metadata !19, i64 32}
!18 = metadata !{metadata !"op", metadata !3, i64 0, metadata !3, i64 8, metadata !3, i64 16, metadata !6, i64 24, metadata !19, i64 32, metadata !19, i64 34, metadata !4, i64 36, metadata !4, i64 37}
!19 = metadata !{metadata !"short", metadata !4, i64 0}
!20 = metadata !{metadata !18, metadata !4, i64 37}
!21 = metadata !{metadata !22, metadata !3, i64 0}
!22 = metadata !{metadata !"io", metadata !3, i64 0, metadata !6, i64 8, metadata !6, i64 16}
!23 = metadata !{metadata !24, metadata !3, i64 56}
!24 = metadata !{metadata !"xpvio", metadata !3, i64 0, metadata !6, i64 8, metadata !6, i64 16, metadata !6, i64 24, metadata !11, i64 32, metadata !3, i64 40, metadata !3, i64 48, metadata !3, i64 56, metadata !3, i64 64, metadata !4, i64 72, metadata !6, i64 80, metadata !6, i64 88, metadata !6, i64 96, metadata !6, i64 104, metadata !3, i64 112, metadata !3, i64 120, metadata !3, i64 128, metadata !3, i64 136, metadata !3, i64 144, metadata !3, i64 152, metadata !19, i64 160, metadata !4, i64 162, metadata !4, i64 163}
!25 = metadata !{metadata !24, metadata !4, i64 162}
!26 = metadata !{metadata !6, metadata !6, i64 0}
!27 = metadata !{metadata !24, metadata !3, i64 64}
!28 = metadata !{metadata !8, metadata !6, i64 16}
!29 = metadata !{metadata !13, metadata !3, i64 48}
!30 = metadata !{metadata !10, metadata !3, i64 64}
!31 = metadata !{metadata !4, metadata !4, i64 0}
!32 = metadata !{metadata !33, metadata !3, i64 88}
!33 = metadata !{metadata !"cop", metadata !3, i64 0, metadata !3, i64 8, metadata !3, i64 16, metadata !6, i64 24, metadata !19, i64 32, metadata !19, i64 34, metadata !4, i64 36, metadata !4, i64 37, metadata !3, i64 40, metadata !3, i64 48, metadata !3, i64 56, metadata !6, i64 64, metadata !6, i64 72, metadata !6, i64 80, metadata !3, i64 88, metadata !3, i64 96}
!34 = metadata !{metadata !2, metadata !3, i64 0}
!35 = metadata !{metadata !36, metadata !3, i64 0}
!36 = metadata !{metadata !"xpv", metadata !3, i64 0, metadata !6, i64 8, metadata !6, i64 16}
!37 = metadata !{metadata !38, metadata !6, i64 24}
!38 = metadata !{metadata !"xpvuv", metadata !3, i64 0, metadata !6, i64 8, metadata !6, i64 16, metadata !6, i64 24}
!39 = metadata !{metadata !40, metadata !15, i64 24}
!40 = metadata !{metadata !"stat", metadata !6, i64 0, metadata !6, i64 8, metadata !6, i64 16, metadata !15, i64 24, metadata !15, i64 28, metadata !15, i64 32, metadata !15, i64 36, metadata !6, i64 40, metadata !6, i64 48, metadata !6, i64 56, metadata !6, i64 64, metadata !41, i64 72, metadata !41, i64 88, metadata !41, i64 104, metadata !4, i64 120}
!41 = metadata !{metadata !"timespec", metadata !6, i64 0, metadata !6, i64 8}
!42 = metadata !{metadata !43, metadata !6, i64 24}
!43 = metadata !{metadata !"xpviv", metadata !3, i64 0, metadata !6, i64 8, metadata !6, i64 16, metadata !6, i64 24}
!44 = metadata !{metadata !24, metadata !4, i64 163}
!45 = metadata !{metadata !2, metadata !6, i64 8}
!46 = metadata !{metadata !13, metadata !3, i64 32}
!47 = metadata !{metadata !13, metadata !3, i64 0}
!48 = metadata !{metadata !36, metadata !6, i64 8}
!49 = metadata !{metadata !50, metadata !3, i64 0}
!50 = metadata !{metadata !"av", metadata !3, i64 0, metadata !6, i64 8, metadata !6, i64 16}
!51 = metadata !{metadata !52, metadata !6, i64 8}
!52 = metadata !{metadata !"xpvav", metadata !3, i64 0, metadata !6, i64 8, metadata !6, i64 16, metadata !6, i64 24, metadata !11, i64 32, metadata !3, i64 40, metadata !3, i64 48, metadata !3, i64 56, metadata !3, i64 64, metadata !4, i64 72}
!53 = metadata !{metadata !24, metadata !6, i64 96}
!54 = metadata !{metadata !24, metadata !6, i64 104}
!55 = metadata !{metadata !18, metadata !4, i64 36}
!56 = metadata !{metadata !57, metadata !11, i64 32}
!57 = metadata !{metadata !"xpvnv", metadata !3, i64 0, metadata !6, i64 8, metadata !6, i64 16, metadata !6, i64 24, metadata !11, i64 32}
!58 = metadata !{metadata !33, metadata !4, i64 37}
!59 = metadata !{metadata !60, metadata !3, i64 40}
!60 = metadata !{metadata !"svop", metadata !3, i64 0, metadata !3, i64 8, metadata !3, i64 16, metadata !6, i64 24, metadata !19, i64 32, metadata !19, i64 34, metadata !4, i64 36, metadata !4, i64 37, metadata !3, i64 40}
!61 = metadata !{metadata !62, metadata !3, i64 0}
!62 = metadata !{metadata !"xrv", metadata !3, i64 0}
!63 = metadata !{metadata !40, metadata !15, i64 28}
!64 = metadata !{metadata !40, metadata !15, i64 32}
