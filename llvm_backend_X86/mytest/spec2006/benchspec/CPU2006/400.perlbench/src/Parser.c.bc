; ModuleID = 'Parser.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.sv = type { i8*, i64, i64 }
%struct.magic = type { %struct.magic*, %struct.mgvtbl*, i16, i8, i8, %struct.sv*, i8*, i64 }
%struct.mgvtbl = type { {}*, {}*, i64 (%struct.sv*, %struct.magic*)*, {}*, {}*, i32 (%struct.sv*, %struct.magic*, %struct.sv*, i8*, i32)*, i32 (%struct.magic*, %struct.clone_params*)* }
%struct.clone_params = type { %struct.av*, i64, %struct.interpreter* }
%struct.av = type { %struct.xpvav*, i64, i64 }
%struct.xpvav = type { i8*, i64, i64, i64, double, %struct.magic*, %struct.hv*, %struct.sv**, %struct.sv*, i8 }
%struct.hv = type { %struct.xpvhv*, i64, i64 }
%struct.xpvhv = type { i8*, i64, i64, i64, double, %struct.magic*, %struct.hv*, i64, %struct.he*, %struct.pmop*, i8* }
%struct.he = type { %struct.he*, %struct.hek*, %struct.sv* }
%struct.hek = type { i64, i64, [1 x i8] }
%struct.pmop = type { %struct.op*, %struct.op*, %struct.op* ()*, i64, i16, i16, i8, i8, %struct.op*, %struct.op*, %struct.op*, %struct.op*, %struct.pmop*, %struct.regexp*, i64, i64, i8, %struct.hv* }
%struct.op = type { %struct.op*, %struct.op*, %struct.op* ()*, i64, i16, i16, i8, i8 }
%struct.regexp = type { i64*, i64*, %struct.regnode*, %struct.reg_substr_data*, i8*, %struct.reg_data*, i8*, i64*, i64, i64, i64, i64, i64, i64, i64, i64, [1 x %struct.regnode] }
%struct.regnode = type { i8, i8, i16 }
%struct.reg_substr_data = type opaque
%struct.reg_data = type opaque
%struct.interpreter = type { i8 }
%struct.gv = type { %struct.xpvgv*, i64, i64 }
%struct.xpvgv = type { i8*, i64, i64, i64, double, %struct.magic*, %struct.hv*, %struct.gp*, i8*, i64, %struct.hv*, i8 }
%struct.gp = type { %struct.sv*, i64, %struct.io*, %struct.cv*, %struct.av*, %struct.hv*, %struct.gv*, %struct.cv*, i64, i64, i64, i8* }
%struct.io = type { %struct.xpvio*, i64, i64 }
%struct.xpvio = type { i8*, i64, i64, i64, double, %struct.magic*, %struct.hv*, %struct._PerlIO**, %struct._PerlIO**, %union.anon, i64, i64, i64, i64, i8*, %struct.gv*, i8*, %struct.gv*, i8*, %struct.gv*, i16, i8, i8 }
%struct._PerlIO = type opaque
%union.anon = type { %struct.__dirstream* }
%struct.__dirstream = type opaque
%struct.cv = type { %struct.xpvcv*, i64, i64 }
%struct.xpvcv = type { i8*, i64, i64, i64, double, %struct.magic*, %struct.hv*, %struct.hv*, %struct.op*, %struct.op*, {}*, %union.any, %struct.gv*, i8*, i64, %struct.av*, %struct.cv*, i16, i64 }
%union.any = type { i8* }
%struct.xpv = type { i8*, i64, i64 }
%struct.p_state = type { i64, %struct.sv*, i64, i64, i64, i8, i8, i8*, i8, i8, i8*, %struct.sv*, i8, i64, i64, i64, %struct.sv*, i32, %struct.av*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %struct.sv*, [9 x %struct.p_handler], i8, %struct.hv*, %struct.hv*, %struct.hv*, %struct.sv*, i32, %struct.hv*, %struct.sv* }
%struct.p_handler = type { %struct.sv*, %struct.sv* }
%struct.token_pos = type { i8*, i8* }
%struct.literal_tag = type { i32, i8*, i32 }

@.str = private unnamed_addr constant [5 x i8] c"self\00", align 1
@.str1 = private unnamed_addr constant [7 x i8] c"tokens\00", align 1
@.str2 = private unnamed_addr constant [9 x i8] c"tokenpos\00", align 1
@.str3 = private unnamed_addr constant [7 x i8] c"token0\00", align 1
@.str4 = private unnamed_addr constant [8 x i8] c"tagname\00", align 1
@.str5 = private unnamed_addr constant [4 x i8] c"tag\00", align 1
@.str6 = private unnamed_addr constant [5 x i8] c"attr\00", align 1
@.str7 = private unnamed_addr constant [6 x i8] c"@attr\00", align 1
@.str8 = private unnamed_addr constant [8 x i8] c"attrseq\00", align 1
@.str9 = private unnamed_addr constant [5 x i8] c"text\00", align 1
@.str10 = private unnamed_addr constant [6 x i8] c"dtext\00", align 1
@.str11 = private unnamed_addr constant [9 x i8] c"is_cdata\00", align 1
@.str12 = private unnamed_addr constant [13 x i8] c"skipped_text\00", align 1
@.str13 = private unnamed_addr constant [7 x i8] c"offset\00", align 1
@.str14 = private unnamed_addr constant [11 x i8] c"offset_end\00", align 1
@.str15 = private unnamed_addr constant [7 x i8] c"length\00", align 1
@.str16 = private unnamed_addr constant [5 x i8] c"line\00", align 1
@.str17 = private unnamed_addr constant [7 x i8] c"column\00", align 1
@.str18 = private unnamed_addr constant [6 x i8] c"event\00", align 1
@.str19 = private unnamed_addr constant [6 x i8] c"undef\00", align 1
@argname = global [20 x i8*] [i8* getelementptr inbounds ([5 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str1, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str2, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str3, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @.str4, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str5, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str6, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str7, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @.str8, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str9, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str10, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str11, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8]* @.str12, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str13, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8]* @.str14, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str15, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str16, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str17, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str18, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str19, i32 0, i32 0)], align 16
@vtbl_free_pstate = global { i32 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*)*, i64 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*, %struct.sv*, i8*, i32)*, i32 (%struct.magic*, %struct.clone_params*)* } { i32 (%struct.sv*, %struct.magic*)* null, i32 (%struct.sv*, %struct.magic*)* null, i64 (%struct.sv*, %struct.magic*)* null, i32 (%struct.sv*, %struct.magic*)* null, i32 (%struct.sv*, %struct.magic*)* @magic_free_pstate, i32 (%struct.sv*, %struct.magic*, %struct.sv*, i8*, i32)* null, i32 (%struct.magic*, %struct.clone_params*)* null }, align 8
@PL_stack_sp = external global %struct.sv**
@PL_stack_base = external global %struct.sv**
@PL_markstack_ptr = external global i64*
@.str20 = private unnamed_addr constant [41 x i8] c"Usage: HTML::Parser::_alloc_pstate(self)\00", align 1
@.str21 = private unnamed_addr constant [26 x i8] c"Not a reference to a hash\00", align 1
@.str22 = private unnamed_addr constant [28 x i8] c"HTML::Entities::entity2char\00", align 1
@.str23 = private unnamed_addr constant [18 x i8] c"_hparser_xs_state\00", align 1
@.str24 = private unnamed_addr constant [40 x i8] c"Usage: HTML::Parser::parse(self, chunk)\00", align 1
@.str25 = private unnamed_addr constant [23 x i8] c"Parse loop not allowed\00", align 1
@PL_markstack_max = external global i64*
@PL_errgv = external global %struct.gv*
@PL_Xpv = external global %struct.xpv*
@.str26 = private unnamed_addr constant [31 x i8] c"Usage: HTML::Parser::eof(self)\00", align 1
@.str27 = private unnamed_addr constant [23 x i8] c"Usage: %s(pstate, ...)\00", align 1
@.str28 = private unnamed_addr constant [31 x i8] c"Unknown boolean attribute (%d)\00", align 1
@PL_sv_yes = external global %struct.sv
@PL_sv_no = external global %struct.sv
@.str29 = private unnamed_addr constant [58 x i8] c"Usage: HTML::Parser::boolean_attribute_value(pstate, ...)\00", align 1
@PL_sv_undef = external global %struct.sv
@.str30 = private unnamed_addr constant [32 x i8] c"Unknown tag-list attribute (%d)\00", align 1
@PL_op = external global %struct.op*
@.str31 = private unnamed_addr constant [27 x i8] c"Can't report tag lists yet\00", align 1
@.str32 = private unnamed_addr constant [42 x i8] c"Tag list must be plain scalars and arrays\00", align 1
@.str33 = private unnamed_addr constant [53 x i8] c"Usage: HTML::Parser::handler(pstate, eventname, ...)\00", align 1
@event_id_str = internal unnamed_addr constant [9 x i8*] [i8* getelementptr inbounds ([12 x i8]* @.str72, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @.str73, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str74, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str75, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str9, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @.str76, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8]* @.str77, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8]* @.str78, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @.str79, i32 0, i32 0)], align 16
@.str34 = private unnamed_addr constant [25 x i8] c"No handler for %s events\00", align 1
@.str35 = private unnamed_addr constant [36 x i8] c"Can't inline decode readonly string\00", align 1
@.str36 = private unnamed_addr constant [63 x i8] c"Usage: HTML::Entities::_decode_entities(string, entities, ...)\00", align 1
@.str37 = private unnamed_addr constant [36 x i8] c"2nd argument must be hash reference\00", align 1
@.str38 = private unnamed_addr constant [52 x i8] c"Usage: HTML::Entities::_probably_utf8_chunk(string)\00", align 1
@.str39 = private unnamed_addr constant [41 x i8] c"Usage: HTML::Entities::UNICODE_SUPPORT()\00", align 1
@PL_curpad = external global %struct.sv**
@.str40 = private unnamed_addr constant [9 x i8] c"Parser.c\00", align 1
@.str41 = private unnamed_addr constant [28 x i8] c"HTML::Parser::_alloc_pstate\00", align 1
@.str42 = private unnamed_addr constant [20 x i8] c"HTML::Parser::parse\00", align 1
@.str43 = private unnamed_addr constant [18 x i8] c"HTML::Parser::eof\00", align 1
@.str44 = private unnamed_addr constant [32 x i8] c"HTML::Parser::closing_plaintext\00", align 1
@.str45 = private unnamed_addr constant [25 x i8] c"HTML::Parser::strict_end\00", align 1
@.str46 = private unnamed_addr constant [30 x i8] c"HTML::Parser::marked_sections\00", align 1
@.str47 = private unnamed_addr constant [29 x i8] c"HTML::Parser::case_sensitive\00", align 1
@.str48 = private unnamed_addr constant [28 x i8] c"HTML::Parser::unbroken_text\00", align 1
@.str49 = private unnamed_addr constant [29 x i8] c"HTML::Parser::strict_comment\00", align 1
@.str50 = private unnamed_addr constant [23 x i8] c"HTML::Parser::xml_mode\00", align 1
@.str51 = private unnamed_addr constant [27 x i8] c"HTML::Parser::attr_encoded\00", align 1
@.str52 = private unnamed_addr constant [27 x i8] c"HTML::Parser::strict_names\00", align 1
@.str53 = private unnamed_addr constant [24 x i8] c"HTML::Parser::utf8_mode\00", align 1
@.str54 = private unnamed_addr constant [38 x i8] c"HTML::Parser::boolean_attribute_value\00", align 1
@.str55 = private unnamed_addr constant [26 x i8] c"HTML::Parser::ignore_tags\00", align 1
@.str56 = private unnamed_addr constant [30 x i8] c"HTML::Parser::ignore_elements\00", align 1
@.str57 = private unnamed_addr constant [26 x i8] c"HTML::Parser::report_tags\00", align 1
@.str58 = private unnamed_addr constant [22 x i8] c"HTML::Parser::handler\00", align 1
@.str59 = private unnamed_addr constant [32 x i8] c"HTML::Entities::decode_entities\00", align 1
@.str60 = private unnamed_addr constant [33 x i8] c"HTML::Entities::_decode_entities\00", align 1
@.str61 = private unnamed_addr constant [37 x i8] c"HTML::Entities::_probably_utf8_chunk\00", align 1
@.str62 = private unnamed_addr constant [32 x i8] c"HTML::Entities::UNICODE_SUPPORT\00", align 1
@.str63 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@PL_utf8skip = external constant [0 x i8]
@PL_hexdigit = external global i8*
@PL_Sv = external global %struct.sv*
@.str64 = private unnamed_addr constant [49 x i8] c"Only code or array references allowed as handler\00", align 1
@hctype = internal unnamed_addr constant [256 x i8] c"xxxxxxxxx\01\01x\01\01xxxxxxxxxxxxxxxxxx\01xxxxxxxxxxxx||X||||||||||~xx(\00xx~~~~~~~~~~~~~~~~~~~~~~~~~~xxxx~x~~~~~~~~~~~~~~~~~~~~~~~~~~xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\01xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx", align 16
@.str65 = private unnamed_addr constant [40 x i8] c"Unrecognized identifier %.*s in argspec\00", align 1
@.str66 = private unnamed_addr constant [51 x i8] c"Literal string is longer than 255 chars in argspec\00", align 1
@.str67 = private unnamed_addr constant [49 x i8] c"Backslash reserved for literal string in argspec\00", align 1
@.str68 = private unnamed_addr constant [39 x i8] c"Unterminated literal string in argspec\00", align 1
@.str69 = private unnamed_addr constant [17 x i8] c"Bad argspec (%s)\00", align 1
@.str70 = private unnamed_addr constant [37 x i8] c"Bad argspec: stuff after @{...} (%s)\00", align 1
@.str71 = private unnamed_addr constant [35 x i8] c"Missing comma separator in argspec\00", align 1
@.str72 = private unnamed_addr constant [12 x i8] c"declaration\00", align 1
@.str73 = private unnamed_addr constant [8 x i8] c"comment\00", align 1
@.str74 = private unnamed_addr constant [6 x i8] c"start\00", align 1
@.str75 = private unnamed_addr constant [4 x i8] c"end\00", align 1
@.str76 = private unnamed_addr constant [8 x i8] c"process\00", align 1
@.str77 = private unnamed_addr constant [15 x i8] c"start_document\00", align 1
@.str78 = private unnamed_addr constant [13 x i8] c"end_document\00", align 1
@.str79 = private unnamed_addr constant [8 x i8] c"default\00", align 1
@.str80 = private unnamed_addr constant [10 x i8] c"plaintext\00", align 1
@PL_dowarn = external global i8
@.str81 = private unnamed_addr constant [4 x i8] c"\EF\BB\BF\00", align 1
@.str82 = private unnamed_addr constant [7 x i8] c"\C3\AF\C2\BB\C2\BF\00", align 1
@.str83 = private unnamed_addr constant [68 x i8] c"Parsing of undecoded UTF-8 will give garbage when decoding entities\00", align 1
@.str84 = private unnamed_addr constant [3 x i8] c"\FF\FE\00", align 1
@.str85 = private unnamed_addr constant [44 x i8] c"Parsing string decoded with wrong endianess\00", align 1
@.str87 = private unnamed_addr constant [5 x i8] c"\FE\FF\00\00\00", align 1
@.str88 = private unnamed_addr constant [28 x i8] c"Parsing of undecoded UTF-32\00", align 1
@.str89 = private unnamed_addr constant [3 x i8] c"\FE\FF\00", align 1
@.str90 = private unnamed_addr constant [28 x i8] c"Parsing of undecoded UTF-16\00", align 1
@PL_tmps_floor = external global i64
@PL_tmps_ix = external global i64
@.str91 = private unnamed_addr constant [8 x i8] c"!##/#?#\00", align 1
@PL_stack_max = external global %struct.sv**
@.str92 = private unnamed_addr constant [15 x i8] c"Bad argspec %d\00", align 1
@.str93 = private unnamed_addr constant [7 x i8] c"script\00", align 1
@.str94 = private unnamed_addr constant [6 x i8] c"style\00", align 1
@.str95 = private unnamed_addr constant [8 x i8] c"DOCTYPE\00", align 1
@.str96 = private unnamed_addr constant [7 x i8] c"ENTITY\00", align 1
@.str97 = private unnamed_addr constant [8 x i8] c"include\00", align 1
@.str98 = private unnamed_addr constant [4 x i8] c"xmp\00", align 1
@.str99 = private unnamed_addr constant [6 x i8] c"title\00", align 1
@.str100 = private unnamed_addr constant [9 x i8] c"textarea\00", align 1
@literal_mode_elem = internal unnamed_addr constant <{ { i32, i8*, i32, [4 x i8] }, { i32, i8*, i32, [4 x i8] }, { i32, i8*, i32, [4 x i8] }, { i32, i8*, i32, [4 x i8] }, { i32, i8*, i32, [4 x i8] }, { i32, i8*, i32, [4 x i8] }, { i32, i8*, i32, [4 x i8] } }> <{ { i32, i8*, i32, [4 x i8] } { i32 6, i8* getelementptr inbounds ([7 x i8]* @.str93, i32 0, i32 0), i32 1, [4 x i8] undef }, { i32, i8*, i32, [4 x i8] } { i32 5, i8* getelementptr inbounds ([6 x i8]* @.str94, i32 0, i32 0), i32 1, [4 x i8] undef }, { i32, i8*, i32, [4 x i8] } { i32 3, i8* getelementptr inbounds ([4 x i8]* @.str98, i32 0, i32 0), i32 1, [4 x i8] undef }, { i32, i8*, i32, [4 x i8] } { i32 9, i8* getelementptr inbounds ([10 x i8]* @.str80, i32 0, i32 0), i32 1, [4 x i8] undef }, { i32, i8*, i32, [4 x i8] } { i32 5, i8* getelementptr inbounds ([6 x i8]* @.str99, i32 0, i32 0), i32 0, [4 x i8] undef }, { i32, i8*, i32, [4 x i8] } { i32 8, i8* getelementptr inbounds ([9 x i8]* @.str100, i32 0, i32 0), i32 0, [4 x i8] undef }, { i32, i8*, i32, [4 x i8] } { i32 0, i8* null, i32 0, [4 x i8] undef } }>, align 16
@.str101 = private unnamed_addr constant [7 x i8] c"rcdata\00", align 1
@.str102 = private unnamed_addr constant [6 x i8] c"cdata\00", align 1
@.str103 = private unnamed_addr constant [7 x i8] c"ignore\00", align 1
@.str104 = private unnamed_addr constant [45 x i8] c"_hparser_xs_state element is not a reference\00", align 1
@.str105 = private unnamed_addr constant [60 x i8] c"Can't find '_hparser_xs_state' element in HTML::Parser hash\00", align 1
@.str106 = private unnamed_addr constant [43 x i8] c"Bad signature in parser state object at %p\00", align 1

; Function Attrs: nounwind uwtable
define internal i32 @magic_free_pstate(%struct.sv* %sv, %struct.magic* nocapture readnone %mg) #0 {
entry:
  %sv_flags.i = getelementptr inbounds %struct.sv* %sv, i64 0, i32 2
  %0 = load i64* %sv_flags.i, align 8, !tbaa !1
  %and.i = and i64 %0, 65536
  %tobool.i = icmp eq i64 %and.i, 0
  br i1 %tobool.i, label %cond.false.i, label %cond.true.i

cond.true.i:                                      ; preds = %entry
  %sv_any.i = getelementptr inbounds %struct.sv* %sv, i64 0, i32 0
  %1 = load i8** %sv_any.i, align 8, !tbaa !7
  %xiv_iv.i = getelementptr inbounds i8* %1, i64 24
  %2 = bitcast i8* %xiv_iv.i to i64*
  %3 = load i64* %2, align 8, !tbaa !8
  br label %cond.end.i

cond.false.i:                                     ; preds = %entry
  %call.i = tail call i64 @Perl_sv_2iv(%struct.sv* %sv) #2
  br label %cond.end.i

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i64 [ %3, %cond.true.i ], [ %call.i, %cond.false.i ]
  %4 = inttoptr i64 %cond.i to %struct.p_state*
  %signature.i = getelementptr inbounds %struct.p_state* %4, i64 0, i32 0
  %5 = load i64* %signature.i, align 8, !tbaa !10
  %cmp.i = icmp eq i64 %5, 369695076
  br i1 %cmp.i, label %get_pstate_iv.exit, label %if.then.i

if.then.i:                                        ; preds = %cond.end.i
  tail call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([43 x i8]* @.str106, i64 0, i64 0), %struct.p_state* %4) #2
  br label %get_pstate_iv.exit

get_pstate_iv.exit:                               ; preds = %cond.end.i, %if.then.i
  %buf.i = getelementptr inbounds %struct.p_state* %4, i64 0, i32 1
  %6 = load %struct.sv** %buf.i, align 8, !tbaa !13
  tail call void @Perl_sv_free(%struct.sv* %6) #2
  %pend_text.i = getelementptr inbounds %struct.p_state* %4, i64 0, i32 11
  %7 = load %struct.sv** %pend_text.i, align 8, !tbaa !14
  tail call void @Perl_sv_free(%struct.sv* %7) #2
  %skipped_text.i = getelementptr inbounds %struct.p_state* %4, i64 0, i32 16
  %8 = load %struct.sv** %skipped_text.i, align 8, !tbaa !15
  tail call void @Perl_sv_free(%struct.sv* %8) #2
  %ms_stack.i = getelementptr inbounds %struct.p_state* %4, i64 0, i32 18
  %9 = load %struct.av** %ms_stack.i, align 8, !tbaa !16
  %10 = bitcast %struct.av* %9 to %struct.sv*
  tail call void @Perl_sv_free(%struct.sv* %10) #2
  %bool_attr_val.i = getelementptr inbounds %struct.p_state* %4, i64 0, i32 29
  %11 = load %struct.sv** %bool_attr_val.i, align 8, !tbaa !17
  tail call void @Perl_sv_free(%struct.sv* %11) #2
  %cb.i = getelementptr inbounds %struct.p_state* %4, i64 0, i32 30, i64 0, i32 0
  %12 = load %struct.sv** %cb.i, align 8, !tbaa !18
  tail call void @Perl_sv_free(%struct.sv* %12) #2
  %argspec.i = getelementptr inbounds %struct.p_state* %4, i64 0, i32 30, i64 0, i32 1
  %13 = load %struct.sv** %argspec.i, align 8, !tbaa !20
  tail call void @Perl_sv_free(%struct.sv* %13) #2
  %cb.1.i = getelementptr inbounds %struct.p_state* %4, i64 0, i32 30, i64 1, i32 0
  %14 = load %struct.sv** %cb.1.i, align 8, !tbaa !18
  tail call void @Perl_sv_free(%struct.sv* %14) #2
  %argspec.1.i = getelementptr inbounds %struct.p_state* %4, i64 0, i32 30, i64 1, i32 1
  %15 = load %struct.sv** %argspec.1.i, align 8, !tbaa !20
  tail call void @Perl_sv_free(%struct.sv* %15) #2
  %cb.2.i = getelementptr inbounds %struct.p_state* %4, i64 0, i32 30, i64 2, i32 0
  %16 = load %struct.sv** %cb.2.i, align 8, !tbaa !18
  tail call void @Perl_sv_free(%struct.sv* %16) #2
  %argspec.2.i = getelementptr inbounds %struct.p_state* %4, i64 0, i32 30, i64 2, i32 1
  %17 = load %struct.sv** %argspec.2.i, align 8, !tbaa !20
  tail call void @Perl_sv_free(%struct.sv* %17) #2
  %cb.3.i = getelementptr inbounds %struct.p_state* %4, i64 0, i32 30, i64 3, i32 0
  %18 = load %struct.sv** %cb.3.i, align 8, !tbaa !18
  tail call void @Perl_sv_free(%struct.sv* %18) #2
  %argspec.3.i = getelementptr inbounds %struct.p_state* %4, i64 0, i32 30, i64 3, i32 1
  %19 = load %struct.sv** %argspec.3.i, align 8, !tbaa !20
  tail call void @Perl_sv_free(%struct.sv* %19) #2
  %cb.4.i = getelementptr inbounds %struct.p_state* %4, i64 0, i32 30, i64 4, i32 0
  %20 = load %struct.sv** %cb.4.i, align 8, !tbaa !18
  tail call void @Perl_sv_free(%struct.sv* %20) #2
  %argspec.4.i = getelementptr inbounds %struct.p_state* %4, i64 0, i32 30, i64 4, i32 1
  %21 = load %struct.sv** %argspec.4.i, align 8, !tbaa !20
  tail call void @Perl_sv_free(%struct.sv* %21) #2
  %cb.5.i = getelementptr inbounds %struct.p_state* %4, i64 0, i32 30, i64 5, i32 0
  %22 = load %struct.sv** %cb.5.i, align 8, !tbaa !18
  tail call void @Perl_sv_free(%struct.sv* %22) #2
  %argspec.5.i = getelementptr inbounds %struct.p_state* %4, i64 0, i32 30, i64 5, i32 1
  %23 = load %struct.sv** %argspec.5.i, align 8, !tbaa !20
  tail call void @Perl_sv_free(%struct.sv* %23) #2
  %cb.6.i = getelementptr inbounds %struct.p_state* %4, i64 0, i32 30, i64 6, i32 0
  %24 = load %struct.sv** %cb.6.i, align 8, !tbaa !18
  tail call void @Perl_sv_free(%struct.sv* %24) #2
  %argspec.6.i = getelementptr inbounds %struct.p_state* %4, i64 0, i32 30, i64 6, i32 1
  %25 = load %struct.sv** %argspec.6.i, align 8, !tbaa !20
  tail call void @Perl_sv_free(%struct.sv* %25) #2
  %cb.7.i = getelementptr inbounds %struct.p_state* %4, i64 0, i32 30, i64 7, i32 0
  %26 = load %struct.sv** %cb.7.i, align 8, !tbaa !18
  tail call void @Perl_sv_free(%struct.sv* %26) #2
  %argspec.7.i = getelementptr inbounds %struct.p_state* %4, i64 0, i32 30, i64 7, i32 1
  %27 = load %struct.sv** %argspec.7.i, align 8, !tbaa !20
  tail call void @Perl_sv_free(%struct.sv* %27) #2
  %cb.8.i = getelementptr inbounds %struct.p_state* %4, i64 0, i32 30, i64 8, i32 0
  %28 = load %struct.sv** %cb.8.i, align 8, !tbaa !18
  tail call void @Perl_sv_free(%struct.sv* %28) #2
  %argspec.8.i = getelementptr inbounds %struct.p_state* %4, i64 0, i32 30, i64 8, i32 1
  %29 = load %struct.sv** %argspec.8.i, align 8, !tbaa !20
  tail call void @Perl_sv_free(%struct.sv* %29) #2
  %report_tags.i = getelementptr inbounds %struct.p_state* %4, i64 0, i32 32
  %30 = load %struct.hv** %report_tags.i, align 8, !tbaa !21
  %31 = bitcast %struct.hv* %30 to %struct.sv*
  tail call void @Perl_sv_free(%struct.sv* %31) #2
  %ignore_tags.i = getelementptr inbounds %struct.p_state* %4, i64 0, i32 33
  %32 = load %struct.hv** %ignore_tags.i, align 8, !tbaa !22
  %33 = bitcast %struct.hv* %32 to %struct.sv*
  tail call void @Perl_sv_free(%struct.sv* %33) #2
  %ignore_elements.i = getelementptr inbounds %struct.p_state* %4, i64 0, i32 34
  %34 = load %struct.hv** %ignore_elements.i, align 8, !tbaa !23
  %35 = bitcast %struct.hv* %34 to %struct.sv*
  tail call void @Perl_sv_free(%struct.sv* %35) #2
  %ignoring_element.i = getelementptr inbounds %struct.p_state* %4, i64 0, i32 35
  %36 = load %struct.sv** %ignoring_element.i, align 8, !tbaa !24
  tail call void @Perl_sv_free(%struct.sv* %36) #2
  %tmp.i = getelementptr inbounds %struct.p_state* %4, i64 0, i32 38
  %37 = load %struct.sv** %tmp.i, align 8, !tbaa !25
  tail call void @Perl_sv_free(%struct.sv* %37) #2
  store i64 0, i64* %signature.i, align 8, !tbaa !10
  %38 = inttoptr i64 %cond.i to i8*
  tail call void @Perl_safesysfree(i8* %38) #2
  ret i32 0
}

; Function Attrs: nounwind uwtable
define void @XS_HTML__Parser__alloc_pstate(%struct.cv* nocapture readnone %cv) #0 {
entry:
  %0 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !26
  %1 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !26
  %2 = load i64** @PL_markstack_ptr, align 8, !tbaa !26
  %incdec.ptr = getelementptr inbounds i64* %2, i64 -1
  store i64* %incdec.ptr, i64** @PL_markstack_ptr, align 8, !tbaa !26
  %3 = load i64* %2, align 8, !tbaa !27
  %add.ptr = getelementptr inbounds %struct.sv** %1, i64 %3
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %add.ptr to i64
  %add.ptr.idx = shl nuw i64 %3, 3
  %sub.ptr.div = ashr exact i64 %add.ptr.idx, 3
  %add = add nsw i64 %sub.ptr.div, 1
  %sub.ptr.lhs.cast1 = ptrtoint %struct.sv** %0 to i64
  %sub.ptr.sub3 = sub i64 %sub.ptr.lhs.cast1, %sub.ptr.lhs.cast
  %cmp = icmp eq i64 %sub.ptr.sub3, 8
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([41 x i8]* @.str20, i64 0, i64 0)) #2
  %.pre = load %struct.sv*** @PL_stack_base, align 8, !tbaa !26
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %4 = phi %struct.sv** [ %1, %entry ], [ %.pre, %if.then ]
  %arrayidx = getelementptr inbounds %struct.sv** %4, i64 %add
  %5 = load %struct.sv** %arrayidx, align 8, !tbaa !26
  %sv_any = getelementptr inbounds %struct.sv* %5, i64 0, i32 0
  %6 = load i8** %sv_any, align 8, !tbaa !7
  %xrv_rv = bitcast i8* %6 to %struct.sv**
  %7 = load %struct.sv** %xrv_rv, align 8, !tbaa !28
  %tobool = icmp eq %struct.sv* %7, null
  br i1 %tobool, label %if.then7, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %sv_flags = getelementptr inbounds %struct.sv* %7, i64 0, i32 2
  %8 = load i64* %sv_flags, align 8, !tbaa !1
  %and = and i64 %8, 255
  %cmp6 = icmp eq i64 %and, 11
  br i1 %cmp6, label %if.end8, label %if.then7

if.then7:                                         ; preds = %lor.lhs.false, %if.end
  tail call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([26 x i8]* @.str21, i64 0, i64 0)) #2
  br label %if.end8

if.end8:                                          ; preds = %lor.lhs.false, %if.then7
  %9 = bitcast %struct.sv* %7 to %struct.hv*
  %call = tail call i8* @Perl_safesysmalloc(i64 368) #2
  tail call void @llvm.memset.p0i8.i64(i8* %call, i8 0, i64 368, i32 1, i1 false)
  %signature = bitcast i8* %call to i64*
  store i64 369695076, i64* %signature, align 8, !tbaa !10
  %call9 = tail call %struct.hv* @Perl_get_hv(i8* getelementptr inbounds ([28 x i8]* @.str22, i64 0, i64 0), i64 1) #2
  %entity2char = getelementptr inbounds i8* %call, i64 352
  %10 = bitcast i8* %entity2char to %struct.hv**
  store %struct.hv* %call9, %struct.hv** %10, align 8, !tbaa !30
  %call10 = tail call %struct.sv* @Perl_newSV(i64 20) #2
  %tmp = getelementptr inbounds i8* %call, i64 360
  %11 = bitcast i8* %tmp to %struct.sv**
  store %struct.sv* %call10, %struct.sv** %11, align 8, !tbaa !25
  %12 = ptrtoint i8* %call to i64
  %call11 = tail call %struct.sv* @Perl_newSViv(i64 %12) #2
  tail call void @Perl_sv_magic(%struct.sv* %call11, %struct.sv* null, i32 126, i8* null, i64 0) #2
  %call12 = tail call %struct.magic* @Perl_mg_find(%struct.sv* %call11, i32 126) #2
  %mg_virtual = getelementptr inbounds %struct.magic* %call12, i64 0, i32 1
  store %struct.mgvtbl* bitcast ({ i32 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*)*, i64 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*, %struct.sv*, i8*, i32)*, i32 (%struct.magic*, %struct.clone_params*)* }* @vtbl_free_pstate to %struct.mgvtbl*), %struct.mgvtbl** %mg_virtual, align 8, !tbaa !31
  %sv_flags13 = getelementptr inbounds %struct.sv* %call11, i64 0, i32 2
  %13 = load i64* %sv_flags13, align 8, !tbaa !1
  %or = or i64 %13, 8388608
  store i64 %or, i64* %sv_flags13, align 8, !tbaa !1
  %call14 = tail call %struct.sv* @Perl_newRV_noinc(%struct.sv* %call11) #2
  %call15 = tail call %struct.sv** @Perl_hv_store(%struct.hv* %9, i8* getelementptr inbounds ([18 x i8]* @.str23, i64 0, i64 0), i64 17, %struct.sv* %call14, i64 0) #2
  %14 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !26
  %add.ptr18 = getelementptr inbounds %struct.sv** %14, i64 %sub.ptr.div
  store %struct.sv** %add.ptr18, %struct.sv*** @PL_stack_sp, align 8, !tbaa !26
  ret void
}

declare void @Perl_croak(i8*, ...) #1

declare i8* @Perl_safesysmalloc(i64) #1

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #2

declare %struct.hv* @Perl_get_hv(i8*, i64) #1

declare %struct.sv* @Perl_newSV(i64) #1

declare %struct.sv* @Perl_newSViv(i64) #1

declare void @Perl_sv_magic(%struct.sv*, %struct.sv*, i32, i8*, i64) #1

declare %struct.magic* @Perl_mg_find(%struct.sv*, i32) #1

declare %struct.sv** @Perl_hv_store(%struct.hv*, i8*, i64, %struct.sv*, i64) #1

declare %struct.sv* @Perl_newRV_noinc(%struct.sv*) #1

; Function Attrs: nounwind uwtable
define void @XS_HTML__Parser_parse(%struct.cv* nocapture readnone %cv) #0 {
entry:
  %len = alloca i64, align 8
  %0 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !26
  %1 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !26
  %2 = load i64** @PL_markstack_ptr, align 8, !tbaa !26
  %incdec.ptr = getelementptr inbounds i64* %2, i64 -1
  store i64* %incdec.ptr, i64** @PL_markstack_ptr, align 8, !tbaa !26
  %3 = load i64* %2, align 8, !tbaa !27
  %add.ptr = getelementptr inbounds %struct.sv** %1, i64 %3
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %add.ptr to i64
  %add.ptr.idx = shl nuw i64 %3, 3
  %sub.ptr.div = ashr exact i64 %add.ptr.idx, 3
  %add = add nsw i64 %sub.ptr.div, 1
  %sub.ptr.lhs.cast1 = ptrtoint %struct.sv** %0 to i64
  %sub.ptr.sub3 = sub i64 %sub.ptr.lhs.cast1, %sub.ptr.lhs.cast
  %sub.ptr.div4 = ashr exact i64 %sub.ptr.sub3, 3
  %cmp = icmp eq i64 %sub.ptr.div4, 2
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([40 x i8]* @.str24, i64 0, i64 0)) #2
  %.pre = load %struct.sv*** @PL_stack_base, align 8, !tbaa !26
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %4 = phi %struct.sv** [ %1, %entry ], [ %.pre, %if.then ]
  %idx.neg = sub i64 0, %sub.ptr.div4
  %add.ptr5 = getelementptr inbounds %struct.sv** %0, i64 %idx.neg
  %arrayidx = getelementptr inbounds %struct.sv** %4, i64 %add
  %5 = load %struct.sv** %arrayidx, align 8, !tbaa !26
  %add7 = add nsw i64 %sub.ptr.div, 2
  %arrayidx8 = getelementptr inbounds %struct.sv** %4, i64 %add7
  %6 = load %struct.sv** %arrayidx8, align 8, !tbaa !26
  %.idx = getelementptr %struct.sv* %5, i64 0, i32 0
  %.idx.val = load i8** %.idx, align 8, !tbaa !7
  %call = call fastcc %struct.p_state* @get_pstate_hv(i8* %.idx.val)
  %parsing = getelementptr inbounds %struct.p_state* %call, i64 0, i32 5
  %7 = load i8* %parsing, align 1, !tbaa !34
  %tobool = icmp eq i8 %7, 0
  br i1 %tobool, label %if.end10, label %if.then9

if.then9:                                         ; preds = %if.end
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([23 x i8]* @.str25, i64 0, i64 0)) #2
  br label %if.end10

if.end10:                                         ; preds = %if.end, %if.then9
  store i8 1, i8* %parsing, align 1, !tbaa !34
  %sv_flags = getelementptr inbounds %struct.sv* %6, i64 0, i32 2
  %8 = load i64* %sv_flags, align 8, !tbaa !1
  %and = and i64 %8, 524288
  %tobool12 = icmp eq i64 %and, 0
  br i1 %tobool12, label %if.else121, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end10
  %sv_any = getelementptr inbounds %struct.sv* %6, i64 0, i32 0
  %9 = load i8** %sv_any, align 8, !tbaa !7
  %xrv_rv = bitcast i8* %9 to %struct.sv**
  %10 = load %struct.sv** %xrv_rv, align 8, !tbaa !28
  %sv_flags13 = getelementptr inbounds %struct.sv* %10, i64 0, i32 2
  %11 = load i64* %sv_flags13, align 8, !tbaa !1
  %and14 = and i64 %11, 255
  %cmp15 = icmp eq i64 %and14, 12
  br i1 %cmp15, label %do.body.preheader, label %if.else121

do.body.preheader:                                ; preds = %land.lhs.true
  %eof119 = getelementptr inbounds %struct.p_state* %call, i64 0, i32 6
  br label %do.body

do.body:                                          ; preds = %do.body.preheader, %land.rhs
  %sp.0 = phi %struct.sv** [ %40, %land.rhs ], [ %add.ptr5, %do.body.preheader ]
  %12 = load i64** @PL_markstack_ptr, align 8, !tbaa !26
  %incdec.ptr17 = getelementptr inbounds i64* %12, i64 1
  store i64* %incdec.ptr17, i64** @PL_markstack_ptr, align 8, !tbaa !26
  %13 = load i64** @PL_markstack_max, align 8, !tbaa !26
  %cmp18 = icmp eq i64* %incdec.ptr17, %13
  br i1 %cmp18, label %if.then19, label %if.end20

if.then19:                                        ; preds = %do.body
  call void @Perl_markstack_grow() #2
  %.pre164 = load i64** @PL_markstack_ptr, align 8, !tbaa !26
  br label %if.end20

if.end20:                                         ; preds = %if.then19, %do.body
  %14 = phi i64* [ %.pre164, %if.then19 ], [ %incdec.ptr17, %do.body ]
  %15 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !26
  %sub.ptr.lhs.cast21 = ptrtoint %struct.sv** %sp.0 to i64
  %sub.ptr.rhs.cast22 = ptrtoint %struct.sv** %15 to i64
  %sub.ptr.sub23 = sub i64 %sub.ptr.lhs.cast21, %sub.ptr.rhs.cast22
  %sub.ptr.div24 = ashr exact i64 %sub.ptr.sub23, 3
  store i64 %sub.ptr.div24, i64* %14, align 8, !tbaa !27
  %call25 = call i64 @Perl_call_sv(%struct.sv* %6, i64 4) #2
  %conv = trunc i64 %call25 to i32
  %16 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !26
  %tobool26 = icmp eq i32 %conv, 0
  br i1 %tobool26, label %cond.end, label %cond.true

cond.true:                                        ; preds = %if.end20
  %incdec.ptr27 = getelementptr inbounds %struct.sv** %16, i64 -1
  %17 = load %struct.sv** %16, align 8, !tbaa !26
  br label %cond.end

cond.end:                                         ; preds = %if.end20, %cond.true
  %sp.1 = phi %struct.sv** [ %incdec.ptr27, %cond.true ], [ %16, %if.end20 ]
  %cond = phi %struct.sv* [ %17, %cond.true ], [ null, %if.end20 ]
  store %struct.sv** %sp.1, %struct.sv*** @PL_stack_sp, align 8, !tbaa !26
  %18 = load %struct.gv** @PL_errgv, align 8, !tbaa !26
  %sv_any28 = getelementptr inbounds %struct.gv* %18, i64 0, i32 0
  %19 = load %struct.xpvgv** %sv_any28, align 8, !tbaa !35
  %xgv_gp = getelementptr inbounds %struct.xpvgv* %19, i64 0, i32 7
  %20 = load %struct.gp** %xgv_gp, align 8, !tbaa !37
  %gp_sv = getelementptr inbounds %struct.gp* %20, i64 0, i32 0
  %21 = load %struct.sv** %gp_sv, align 8, !tbaa !40
  %tobool29 = icmp eq %struct.sv* %21, null
  br i1 %tobool29, label %if.end92, label %cond.false31

cond.false31:                                     ; preds = %cond.end
  %sv_flags35 = getelementptr inbounds %struct.sv* %21, i64 0, i32 2
  %22 = load i64* %sv_flags35, align 8, !tbaa !1
  %and36 = and i64 %22, 262144
  %tobool37 = icmp eq i64 %and36, 0
  br i1 %tobool37, label %cond.false55, label %cond.true38

cond.true38:                                      ; preds = %cond.false31
  %sv_any42 = getelementptr inbounds %struct.sv* %21, i64 0, i32 0
  %23 = load i8** %sv_any42, align 8, !tbaa !7
  %24 = bitcast i8* %23 to %struct.xpv*
  store %struct.xpv* %24, %struct.xpv** @PL_Xpv, align 8, !tbaa !26
  %tobool43 = icmp eq i8* %23, null
  br i1 %tobool43, label %if.end92, label %land.lhs.true44

land.lhs.true44:                                  ; preds = %cond.true38
  %xpv_cur = getelementptr inbounds i8* %23, i64 8
  %25 = bitcast i8* %xpv_cur to i64*
  %26 = load i64* %25, align 8, !tbaa !42
  %cmp45 = icmp ugt i64 %26, 1
  br i1 %cmp45, label %if.then90, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true44
  %tobool48 = icmp eq i64 %26, 0
  br i1 %tobool48, label %if.end92, label %land.lhs.true49

land.lhs.true49:                                  ; preds = %lor.lhs.false
  %xpv_pv = bitcast i8* %23 to i8**
  %27 = load i8** %xpv_pv, align 8, !tbaa !44
  %28 = load i8* %27, align 1, !tbaa !45
  %cmp51 = icmp eq i8 %28, 48
  br i1 %cmp51, label %if.end92, label %if.then90

cond.false55:                                     ; preds = %cond.false31
  %and60 = and i64 %22, 65536
  %tobool61 = icmp eq i64 %and60, 0
  br i1 %tobool61, label %cond.false69, label %cond.true62

cond.true62:                                      ; preds = %cond.false55
  %sv_any66 = getelementptr inbounds %struct.sv* %21, i64 0, i32 0
  %29 = load i8** %sv_any66, align 8, !tbaa !7
  %xiv_iv = getelementptr inbounds i8* %29, i64 24
  %30 = bitcast i8* %xiv_iv to i64*
  %31 = load i64* %30, align 8, !tbaa !8
  %cmp67 = icmp eq i64 %31, 0
  br i1 %cmp67, label %if.end92, label %if.then90

cond.false69:                                     ; preds = %cond.false55
  %and74 = and i64 %22, 131072
  %tobool75 = icmp eq i64 %and74, 0
  br i1 %tobool75, label %cond.false83, label %cond.true76

cond.true76:                                      ; preds = %cond.false69
  %sv_any80 = getelementptr inbounds %struct.sv* %21, i64 0, i32 0
  %32 = load i8** %sv_any80, align 8, !tbaa !7
  %xnv_nv = getelementptr inbounds i8* %32, i64 32
  %33 = bitcast i8* %xnv_nv to double*
  %34 = load double* %33, align 8, !tbaa !46
  %cmp81 = fcmp une double %34, 0.000000e+00
  br i1 %cmp81, label %if.then90, label %if.end92

cond.false83:                                     ; preds = %cond.false69
  %call87 = call signext i8 @Perl_sv_2bool(%struct.sv* %21) #2
  %tobool89 = icmp eq i8 %call87, 0
  br i1 %tobool89, label %if.end92, label %if.then90

if.then90:                                        ; preds = %land.lhs.true49, %cond.true62, %cond.false83, %land.lhs.true44, %cond.true76
  store i8 0, i8* %parsing, align 1, !tbaa !34
  store i8 0, i8* %eof119, align 1, !tbaa !48
  call void (i8*, ...)* @Perl_croak(i8* null) #2
  br label %if.end92

if.end92:                                         ; preds = %land.lhs.true49, %lor.lhs.false, %cond.true38, %cond.true62, %cond.false83, %cond.end, %if.then90, %cond.true76
  %tobool93 = icmp eq %struct.sv* %cond, null
  br i1 %tobool93, label %if.else, label %land.lhs.true94

land.lhs.true94:                                  ; preds = %if.end92
  %sv_flags95 = getelementptr inbounds %struct.sv* %cond, i64 0, i32 2
  %35 = load i64* %sv_flags95, align 8, !tbaa !1
  %and96 = and i64 %35, 118423552
  %tobool97 = icmp eq i64 %and96, 0
  br i1 %tobool97, label %if.else, label %if.then98

if.then98:                                        ; preds = %land.lhs.true94
  %and100 = and i64 %35, 262144
  %cmp101 = icmp eq i64 %and100, 0
  br i1 %cmp101, label %cond.false108, label %cond.true103

cond.true103:                                     ; preds = %if.then98
  %sv_any104 = getelementptr inbounds %struct.sv* %cond, i64 0, i32 0
  %36 = load i8** %sv_any104, align 8, !tbaa !7
  %xpv_cur105 = getelementptr inbounds i8* %36, i64 8
  %37 = bitcast i8* %xpv_cur105 to i64*
  %38 = load i64* %37, align 8, !tbaa !42
  store i64 %38, i64* %len, align 8, !tbaa !27
  br label %if.end112

cond.false108:                                    ; preds = %if.then98
  %call109 = call i8* @Perl_sv_2pv_flags(%struct.sv* %cond, i64* %len, i64 2) #2
  %.pre165 = load i64* %len, align 8, !tbaa !27
  br label %if.end112

if.else:                                          ; preds = %land.lhs.true94, %if.end92
  store i64 0, i64* %len, align 8, !tbaa !27
  br label %if.end112

if.end112:                                        ; preds = %cond.true103, %cond.false108, %if.else
  %39 = phi i64 [ %38, %cond.true103 ], [ %.pre165, %cond.false108 ], [ 0, %if.else ]
  %tobool113 = icmp ne i64 %39, 0
  %cond117 = select i1 %tobool113, %struct.sv* %cond, %struct.sv* null
  call fastcc void @parse(%struct.p_state* %call, %struct.sv* %cond117, %struct.sv* %5)
  %40 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !26
  %41 = load i64* %len, align 8, !tbaa !27
  %tobool118 = icmp eq i64 %41, 0
  br i1 %tobool118, label %if.end122, label %land.rhs

land.rhs:                                         ; preds = %if.end112
  %42 = load i8* %eof119, align 1, !tbaa !48
  %lnot = icmp eq i8 %42, 0
  br i1 %lnot, label %do.body, label %if.end122

if.else121:                                       ; preds = %if.end10, %land.lhs.true
  call fastcc void @parse(%struct.p_state* %call, %struct.sv* %6, %struct.sv* %5)
  %43 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !26
  %eof124.pre = getelementptr inbounds %struct.p_state* %call, i64 0, i32 6
  br label %if.end122

if.end122:                                        ; preds = %if.end112, %land.rhs, %if.else121
  %eof124.pre-phi = phi i8* [ %eof124.pre, %if.else121 ], [ %eof119, %land.rhs ], [ %eof119, %if.end112 ]
  %sp.2 = phi %struct.sv** [ %43, %if.else121 ], [ %40, %land.rhs ], [ %40, %if.end112 ]
  store i8 0, i8* %parsing, align 1, !tbaa !34
  %44 = load i8* %eof124.pre-phi, align 1, !tbaa !48
  %tobool125 = icmp eq i8 %44, 0
  br i1 %tobool125, label %if.else130, label %if.then126

if.then126:                                       ; preds = %if.end122
  store i8 0, i8* %eof124.pre-phi, align 1, !tbaa !48
  %call128 = call %struct.sv* @Perl_sv_newmortal() #2
  %incdec.ptr129 = getelementptr inbounds %struct.sv** %sp.2, i64 1
  store %struct.sv* %call128, %struct.sv** %incdec.ptr129, align 8, !tbaa !26
  br label %if.end132

if.else130:                                       ; preds = %if.end122
  %incdec.ptr131 = getelementptr inbounds %struct.sv** %sp.2, i64 1
  store %struct.sv* %5, %struct.sv** %incdec.ptr131, align 8, !tbaa !26
  br label %if.end132

if.end132:                                        ; preds = %if.else130, %if.then126
  %sp.3 = phi %struct.sv** [ %incdec.ptr129, %if.then126 ], [ %incdec.ptr131, %if.else130 ]
  store %struct.sv** %sp.3, %struct.sv*** @PL_stack_sp, align 8, !tbaa !26
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.p_state* @get_pstate_hv(i8* %sv.0.0.val) #0 {
entry:
  %xrv_rv = bitcast i8* %sv.0.0.val to %struct.sv**
  %0 = load %struct.sv** %xrv_rv, align 8, !tbaa !28
  %tobool = icmp eq %struct.sv* %0, null
  br i1 %tobool, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %sv_flags = getelementptr inbounds %struct.sv* %0, i64 0, i32 2
  %1 = load i64* %sv_flags, align 8, !tbaa !1
  %and = and i64 %1, 255
  %cmp = icmp eq i64 %and, 11
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %lor.lhs.false, %entry
  tail call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([26 x i8]* @.str21, i64 0, i64 0)) #2
  br label %if.end

if.end:                                           ; preds = %lor.lhs.false, %if.then
  %2 = bitcast %struct.sv* %0 to %struct.hv*
  %call = tail call %struct.sv** @Perl_hv_fetch(%struct.hv* %2, i8* getelementptr inbounds ([18 x i8]* @.str23, i64 0, i64 0), i64 17, i64 0) #2
  %tobool1 = icmp eq %struct.sv** %call, null
  br i1 %tobool1, label %if.end11, label %if.then2

if.then2:                                         ; preds = %if.end
  %3 = load %struct.sv** %call, align 8, !tbaa !26
  %sv_flags3 = getelementptr inbounds %struct.sv* %3, i64 0, i32 2
  %4 = load i64* %sv_flags3, align 8, !tbaa !1
  %and4 = and i64 %4, 524288
  %tobool5 = icmp eq i64 %and4, 0
  br i1 %tobool5, label %if.else, label %if.then6

if.then6:                                         ; preds = %if.then2
  %sv_any7 = getelementptr inbounds %struct.sv* %3, i64 0, i32 0
  %5 = load i8** %sv_any7, align 8, !tbaa !7
  %xrv_rv8 = bitcast i8* %5 to %struct.sv**
  %6 = load %struct.sv** %xrv_rv8, align 8, !tbaa !28
  %sv_flags.i = getelementptr inbounds %struct.sv* %6, i64 0, i32 2
  %7 = load i64* %sv_flags.i, align 8, !tbaa !1
  %and.i = and i64 %7, 65536
  %tobool.i = icmp eq i64 %and.i, 0
  br i1 %tobool.i, label %cond.false.i, label %cond.true.i

cond.true.i:                                      ; preds = %if.then6
  %sv_any.i = getelementptr inbounds %struct.sv* %6, i64 0, i32 0
  %8 = load i8** %sv_any.i, align 8, !tbaa !7
  %xiv_iv.i = getelementptr inbounds i8* %8, i64 24
  %9 = bitcast i8* %xiv_iv.i to i64*
  %10 = load i64* %9, align 8, !tbaa !8
  br label %cond.end.i

cond.false.i:                                     ; preds = %if.then6
  %call.i = tail call i64 @Perl_sv_2iv(%struct.sv* %6) #2
  br label %cond.end.i

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i64 [ %10, %cond.true.i ], [ %call.i, %cond.false.i ]
  %11 = inttoptr i64 %cond.i to %struct.p_state*
  %signature.i = getelementptr inbounds %struct.p_state* %11, i64 0, i32 0
  %12 = load i64* %signature.i, align 8, !tbaa !10
  %cmp.i = icmp eq i64 %12, 369695076
  br i1 %cmp.i, label %return, label %if.then.i

if.then.i:                                        ; preds = %cond.end.i
  tail call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([43 x i8]* @.str106, i64 0, i64 0), %struct.p_state* %11) #2
  br label %return

if.else:                                          ; preds = %if.then2
  tail call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([45 x i8]* @.str104, i64 0, i64 0)) #2
  br label %if.end11

if.end11:                                         ; preds = %if.end, %if.else
  tail call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([60 x i8]* @.str105, i64 0, i64 0)) #2
  br label %return

return:                                           ; preds = %if.then.i, %cond.end.i, %if.end11
  %retval.0 = phi %struct.p_state* [ null, %if.end11 ], [ %11, %cond.end.i ], [ %11, %if.then.i ]
  ret %struct.p_state* %retval.0
}

declare void @Perl_markstack_grow() #1

declare i64 @Perl_call_sv(%struct.sv*, i64) #1

declare signext i8 @Perl_sv_2bool(%struct.sv*) #1

declare i8* @Perl_sv_2pv_flags(%struct.sv*, i64*, i64) #1

; Function Attrs: nounwind uwtable
define internal fastcc void @parse(%struct.p_state* %p_state, %struct.sv* %chunk, %struct.sv* %self) #0 {
entry:
  %len = alloca i64, align 8
  %empty = alloca [1 x i8], align 1
  %token = alloca %struct.token_pos, align 8
  %tobool = icmp eq %struct.sv* %chunk, null
  br i1 %tobool, label %if.then, label %if.end75

if.then:                                          ; preds = %entry
  %buf = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 1
  %0 = load %struct.sv** %buf, align 8, !tbaa !13
  %tobool1 = icmp eq %struct.sv* %0, null
  br i1 %tobool1, label %if.end55, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.then
  %sv_flags = getelementptr inbounds %struct.sv* %0, i64 0, i32 2
  %1 = load i64* %sv_flags, align 8, !tbaa !1
  %and = and i64 %1, 118423552
  %tobool3 = icmp eq i64 %and, 0
  br i1 %tobool3, label %if.end55, label %if.then4

if.then4:                                         ; preds = %land.lhs.true
  %and7 = and i64 %1, 262144
  %cmp = icmp eq i64 %and7, 0
  br i1 %cmp, label %cond.false, label %cond.true

cond.true:                                        ; preds = %if.then4
  %sv_any = getelementptr inbounds %struct.sv* %0, i64 0, i32 0
  %2 = load i8** %sv_any, align 8, !tbaa !7
  %xpv_cur = getelementptr inbounds i8* %2, i64 8
  %3 = bitcast i8* %xpv_cur to i64*
  %4 = load i64* %3, align 8, !tbaa !42
  store i64 %4, i64* %len, align 8, !tbaa !27
  %xpv_pv = bitcast i8* %2 to i8**
  %5 = load i8** %xpv_pv, align 8, !tbaa !44
  br label %cond.end

cond.false:                                       ; preds = %if.then4
  %call = call i8* @Perl_sv_2pv_flags(%struct.sv* %0, i64* %len, i64 2) #2
  %.pre = load i64* %len, align 8, !tbaa !27
  %.pre406 = load %struct.sv** %buf, align 8, !tbaa !13
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %6 = phi %struct.sv* [ %0, %cond.true ], [ %.pre406, %cond.false ]
  %7 = phi i64 [ %4, %cond.true ], [ %.pre, %cond.false ]
  %cond = phi i8* [ %5, %cond.true ], [ %call, %cond.false ]
  %add.ptr = getelementptr inbounds i8* %cond, i64 %7
  %sv_flags13 = getelementptr inbounds %struct.sv* %6, i64 0, i32 2
  %8 = load i64* %sv_flags13, align 8, !tbaa !1
  %and14 = and i64 %8, 536870912
  %cmp15398 = icmp sgt i64 %7, 0
  br i1 %cmp15398, label %while.body.lr.ph, label %while.end

while.body.lr.ph:                                 ; preds = %cond.end
  %literal_mode = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 7
  %strict_comment = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 20
  %no_dash_dash_comment_end = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 9
  %closing_plaintext = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 27
  %pending_end_tag = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 10
  br label %while.body

while.body:                                       ; preds = %while.body.lr.ph, %while.cond.backedge
  %s.0399 = phi i8* [ %cond, %while.body.lr.ph ], [ %s.0.be, %while.cond.backedge ]
  %9 = load i8** %literal_mode, align 8, !tbaa !49
  %tobool16 = icmp eq i8* %9, null
  br i1 %tobool16, label %if.end27, label %if.then17

if.then17:                                        ; preds = %while.body
  %call19 = call i32 @strcmp(i8* %9, i8* getelementptr inbounds ([10 x i8]* @.str80, i64 0, i64 0)) #2
  %tobool20 = icmp eq i32 %call19, 0
  br i1 %tobool20, label %land.lhs.true21, label %if.end

land.lhs.true21:                                  ; preds = %if.then17
  %10 = load i8* %closing_plaintext, align 1, !tbaa !50
  %tobool22 = icmp eq i8 %10, 0
  br i1 %tobool22, label %while.end, label %if.end

if.end:                                           ; preds = %land.lhs.true21, %if.then17
  store i8* %9, i8** %pending_end_tag, align 8, !tbaa !51
  store i8* null, i8** %literal_mode, align 8, !tbaa !49
  %call26 = call fastcc i8* @parse_buf(%struct.p_state* %p_state, i8* %s.0399, i8* %add.ptr, i64 %and14, %struct.sv* %self)
  br label %while.cond.backedge

while.cond.backedge:                              ; preds = %if.end, %if.then34
  %s.0.be = phi i8* [ %call26, %if.end ], [ %call36, %if.then34 ]
  %cmp15 = icmp ult i8* %s.0.be, %add.ptr
  br i1 %cmp15, label %while.body, label %while.end

if.end27:                                         ; preds = %while.body
  %11 = load i8* %strict_comment, align 1, !tbaa !52
  %tobool28 = icmp eq i8 %11, 0
  br i1 %tobool28, label %land.lhs.true29, label %while.end

land.lhs.true29:                                  ; preds = %if.end27
  %12 = load i8* %no_dash_dash_comment_end, align 1, !tbaa !53
  %tobool30 = icmp eq i8 %12, 0
  %13 = load i8* %s.0399, align 1, !tbaa !45
  %cmp32 = icmp eq i8 %13, 60
  br i1 %tobool30, label %land.lhs.true31, label %land.lhs.true40

land.lhs.true31:                                  ; preds = %land.lhs.true29
  br i1 %cmp32, label %if.then34, label %while.end

if.then34:                                        ; preds = %land.lhs.true31
  store i8 1, i8* %no_dash_dash_comment_end, align 1, !tbaa !53
  %call36 = call fastcc i8* @parse_buf(%struct.p_state* %p_state, i8* %s.0399, i8* %add.ptr, i64 %and14, %struct.sv* %self)
  br label %while.cond.backedge

land.lhs.true40:                                  ; preds = %land.lhs.true29
  br i1 %cmp32, label %while.end.thread, label %while.end

while.end.thread:                                 ; preds = %land.lhs.true40
  %add.ptr45 = getelementptr inbounds i8* %s.0399, i64 1
  %beg46 = getelementptr inbounds %struct.token_pos* %token, i64 0, i32 0
  store i8* %add.ptr45, i8** %beg46, align 8, !tbaa !54
  %end47 = getelementptr inbounds %struct.token_pos* %token, i64 0, i32 1
  store i8* %add.ptr, i8** %end47, align 8, !tbaa !56
  call fastcc void @report_event(%struct.p_state* %p_state, i32 1, i8* %s.0399, i8* %add.ptr, i64 %and14, %struct.token_pos* %token, i32 1, %struct.sv* %self)
  br label %if.end52

while.end:                                        ; preds = %land.lhs.true31, %while.cond.backedge, %land.lhs.true21, %if.end27, %cond.end, %land.lhs.true40
  %s.0396 = phi i8* [ %s.0399, %land.lhs.true40 ], [ %cond, %cond.end ], [ %s.0399, %land.lhs.true31 ], [ %s.0.be, %while.cond.backedge ], [ %s.0399, %land.lhs.true21 ], [ %s.0399, %if.end27 ]
  %cmp49 = icmp ult i8* %s.0396, %add.ptr
  br i1 %cmp49, label %if.then51, label %if.end52

if.then51:                                        ; preds = %while.end
  call fastcc void @report_event(%struct.p_state* %p_state, i32 4, i8* %s.0396, i8* %add.ptr, i64 %and14, %struct.token_pos* null, i32 0, %struct.sv* %self)
  br label %if.end52

if.end52:                                         ; preds = %while.end.thread, %if.then51, %while.end
  %14 = load %struct.sv** %buf, align 8, !tbaa !13
  call void @Perl_sv_free(%struct.sv* %14) #2
  store %struct.sv* null, %struct.sv** %buf, align 8, !tbaa !13
  br label %if.end55

if.end55:                                         ; preds = %land.lhs.true, %if.then, %if.end52
  %pend_text = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 11
  %15 = load %struct.sv** %pend_text, align 8, !tbaa !14
  %tobool56 = icmp eq %struct.sv* %15, null
  br i1 %tobool56, label %if.end63, label %land.lhs.true57

land.lhs.true57:                                  ; preds = %if.end55
  %sv_flags59 = getelementptr inbounds %struct.sv* %15, i64 0, i32 2
  %16 = load i64* %sv_flags59, align 8, !tbaa !1
  %and60 = and i64 %16, 118423552
  %tobool61 = icmp eq i64 %and60, 0
  br i1 %tobool61, label %if.end63, label %if.then62

if.then62:                                        ; preds = %land.lhs.true57
  %unbroken_text.i = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 24
  %17 = load i8* %unbroken_text.i, align 1, !tbaa !57
  %is_cdata.i = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 8
  %18 = load i8* %is_cdata.i, align 1, !tbaa !58
  %offset.i = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 2
  %19 = bitcast i64* %offset.i to <2 x i64>*
  %20 = load <2 x i64>* %19, align 8, !tbaa !27
  %column.i = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 4
  %21 = load i64* %column.i, align 8, !tbaa !59
  store i8 0, i8* %unbroken_text.i, align 1, !tbaa !57
  store %struct.sv* null, %struct.sv** %pend_text, align 8, !tbaa !14
  %pend_text_is_cdata.i = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 12
  %22 = load i8* %pend_text_is_cdata.i, align 1, !tbaa !60
  store i8 %22, i8* %is_cdata.i, align 1, !tbaa !58
  %pend_text_offset.i = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 13
  %23 = bitcast i64* %pend_text_offset.i to <2 x i64>*
  %24 = load <2 x i64>* %23, align 8, !tbaa !27
  store <2 x i64> %24, <2 x i64>* %19, align 8, !tbaa !27
  %pend_text_column.i = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 15
  %25 = load i64* %pend_text_column.i, align 8, !tbaa !61
  store i64 %25, i64* %column.i, align 8, !tbaa !59
  %sv_any.i = getelementptr inbounds %struct.sv* %15, i64 0, i32 0
  %26 = load i8** %sv_any.i, align 8, !tbaa !7
  %xpv_pv.i = bitcast i8* %26 to i8**
  %27 = load i8** %xpv_pv.i, align 8, !tbaa !44
  %xpv_cur.i = getelementptr inbounds i8* %26, i64 8
  %28 = bitcast i8* %xpv_cur.i to i64*
  %29 = load i64* %28, align 8, !tbaa !42
  %add.ptr.i = getelementptr inbounds i8* %27, i64 %29
  %30 = load i64* %sv_flags59, align 8, !tbaa !1
  %and.i = and i64 %30, 536870912
  call fastcc void @report_event(%struct.p_state* %p_state, i32 4, i8* %27, i8* %add.ptr.i, i64 %and.i, %struct.token_pos* null, i32 0, %struct.sv* %self) #2
  %31 = load i64* %sv_flags59, align 8, !tbaa !1
  %and11.i = and i64 %31, 1223753727
  store i64 %and11.i, i64* %sv_flags59, align 8, !tbaa !1
  %and13.i = and i64 %31, 2097152
  %tobool.i = icmp eq i64 %and13.i, 0
  br i1 %tobool.i, label %flush_pending_text.exit, label %land.rhs.i

land.rhs.i:                                       ; preds = %if.then62
  %call.i = call i32 @Perl_sv_backoff(%struct.sv* %15) #2
  br label %flush_pending_text.exit

flush_pending_text.exit:                          ; preds = %if.then62, %land.rhs.i
  store i8 %17, i8* %unbroken_text.i, align 1, !tbaa !57
  store %struct.sv* %15, %struct.sv** %pend_text, align 8, !tbaa !14
  store i8 %18, i8* %is_cdata.i, align 1, !tbaa !58
  store <2 x i64> %20, <2 x i64>* %19, align 8, !tbaa !27
  store i64 %21, i64* %column.i, align 8, !tbaa !59
  br label %if.end63

if.end63:                                         ; preds = %land.lhs.true57, %if.end55, %flush_pending_text.exit
  %ignoring_element = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 35
  %32 = load %struct.sv** %ignoring_element, align 8, !tbaa !24
  %tobool64 = icmp eq %struct.sv* %32, null
  br i1 %tobool64, label %if.end68, label %if.then65

if.then65:                                        ; preds = %if.end63
  call void @Perl_sv_free(%struct.sv* %32) #2
  store %struct.sv* null, %struct.sv** %ignoring_element, align 8, !tbaa !24
  br label %if.end68

if.end68:                                         ; preds = %if.end63, %if.then65
  %arraydecay = getelementptr inbounds [1 x i8]* %empty, i64 0, i64 0
  call fastcc void @report_event(%struct.p_state* %p_state, i32 7, i8* %arraydecay, i8* %arraydecay, i64 0, %struct.token_pos* null, i32 0, %struct.sv* %self)
  %offset = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 2
  store i64 0, i64* %offset, align 8, !tbaa !62
  %line = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 3
  %33 = load i64* %line, align 8, !tbaa !63
  %tobool70 = icmp eq i64 %33, 0
  br i1 %tobool70, label %if.end73, label %if.then71

if.then71:                                        ; preds = %if.end68
  store i64 1, i64* %line, align 8, !tbaa !63
  br label %if.end73

if.end73:                                         ; preds = %if.end68, %if.then71
  %column = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 4
  store i64 0, i64* %column, align 8, !tbaa !59
  %literal_mode74 = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 7
  store i8* null, i8** %literal_mode74, align 8, !tbaa !49
  %is_cdata = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 8
  store i8 0, i8* %is_cdata, align 1, !tbaa !58
  br label %return

if.end75:                                         ; preds = %entry
  %utf8_mode = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 28
  %34 = load i8* %utf8_mode, align 1, !tbaa !64
  %tobool76 = icmp eq i8 %34, 0
  br i1 %tobool76, label %if.end79, label %if.then77

if.then77:                                        ; preds = %if.end75
  %call78 = call signext i8 @Perl_sv_utf8_downgrade(%struct.sv* %chunk, i8 signext 0) #2
  br label %if.end79

if.end79:                                         ; preds = %if.end75, %if.then77
  %buf80 = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 1
  %35 = load %struct.sv** %buf80, align 8, !tbaa !13
  %tobool81 = icmp eq %struct.sv* %35, null
  br i1 %tobool81, label %if.else, label %land.lhs.true82

land.lhs.true82:                                  ; preds = %if.end79
  %sv_flags84 = getelementptr inbounds %struct.sv* %35, i64 0, i32 2
  %36 = load i64* %sv_flags84, align 8, !tbaa !1
  %and85 = and i64 %36, 118423552
  %tobool86 = icmp eq i64 %and85, 0
  br i1 %tobool86, label %if.else, label %if.then87

if.then87:                                        ; preds = %land.lhs.true82
  call void @Perl_sv_catsv_flags(%struct.sv* %35, %struct.sv* %chunk, i64 2) #2
  %37 = load %struct.sv** %buf80, align 8, !tbaa !13
  %sv_flags90 = getelementptr inbounds %struct.sv* %37, i64 0, i32 2
  %38 = load i64* %sv_flags90, align 8, !tbaa !1
  %and91 = and i64 %38, 262144
  %cmp92 = icmp eq i64 %and91, 0
  br i1 %cmp92, label %cond.false101, label %cond.true94

cond.true94:                                      ; preds = %if.then87
  %sv_any96 = getelementptr inbounds %struct.sv* %37, i64 0, i32 0
  %39 = load i8** %sv_any96, align 8, !tbaa !7
  %xpv_cur97 = getelementptr inbounds i8* %39, i64 8
  %40 = bitcast i8* %xpv_cur97 to i64*
  %41 = load i64* %40, align 8, !tbaa !42
  store i64 %41, i64* %len, align 8, !tbaa !27
  %xpv_pv100 = bitcast i8* %39 to i8**
  %42 = load i8** %xpv_pv100, align 8, !tbaa !44
  br label %cond.end104

cond.false101:                                    ; preds = %if.then87
  %call103 = call i8* @Perl_sv_2pv_flags(%struct.sv* %37, i64* %len, i64 2) #2
  %.pre409 = load %struct.sv** %buf80, align 8, !tbaa !13
  br label %cond.end104

cond.end104:                                      ; preds = %cond.false101, %cond.true94
  %43 = phi %struct.sv* [ %37, %cond.true94 ], [ %.pre409, %cond.false101 ]
  %cond105 = phi i8* [ %42, %cond.true94 ], [ %call103, %cond.false101 ]
  %sv_flags107 = getelementptr inbounds %struct.sv* %43, i64 0, i32 2
  %44 = load i64* %sv_flags107, align 8, !tbaa !1
  %and108 = and i64 %44, 536870912
  br label %if.end204thread-pre-split

if.else:                                          ; preds = %land.lhs.true82, %if.end79
  %sv_flags109 = getelementptr inbounds %struct.sv* %chunk, i64 0, i32 2
  %45 = load i64* %sv_flags109, align 8, !tbaa !1
  %and110 = and i64 %45, 262144
  %cmp111 = icmp eq i64 %and110, 0
  br i1 %cmp111, label %cond.false118, label %cond.true113

cond.true113:                                     ; preds = %if.else
  %sv_any114 = getelementptr inbounds %struct.sv* %chunk, i64 0, i32 0
  %46 = load i8** %sv_any114, align 8, !tbaa !7
  %xpv_cur115 = getelementptr inbounds i8* %46, i64 8
  %47 = bitcast i8* %xpv_cur115 to i64*
  %48 = load i64* %47, align 8, !tbaa !42
  store i64 %48, i64* %len, align 8, !tbaa !27
  %xpv_pv117 = bitcast i8* %46 to i8**
  %49 = load i8** %xpv_pv117, align 8, !tbaa !44
  br label %cond.end120

cond.false118:                                    ; preds = %if.else
  %call119 = call i8* @Perl_sv_2pv_flags(%struct.sv* %chunk, i64* %len, i64 2) #2
  %.pre407 = load i64* %sv_flags109, align 8, !tbaa !1
  br label %cond.end120

cond.end120:                                      ; preds = %cond.false118, %cond.true113
  %50 = phi i64 [ %45, %cond.true113 ], [ %.pre407, %cond.false118 ]
  %cond121 = phi i8* [ %49, %cond.true113 ], [ %call119, %cond.false118 ]
  %and123 = and i64 %50, 536870912
  %offset124 = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 2
  %51 = load i64* %offset124, align 8, !tbaa !62
  %cmp125 = icmp eq i64 %51, 0
  br i1 %cmp125, label %if.then127, label %if.end204thread-pre-split

if.then127:                                       ; preds = %cond.end120
  call fastcc void @report_event(%struct.p_state* %p_state, i32 6, i8* %cond121, i8* %cond121, i64 0, %struct.token_pos* null, i32 0, %struct.sv* %self)
  %52 = load i8* @PL_dowarn, align 1, !tbaa !45
  %and129 = and i8 %52, 1
  %tobool130 = icmp eq i8 %and129, 0
  br i1 %tobool130, label %if.end159, label %land.lhs.true131

land.lhs.true131:                                 ; preds = %if.then127
  %argspec_entity_decode = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 31
  %53 = load i8* %argspec_entity_decode, align 1, !tbaa !65
  %tobool133 = icmp eq i8 %53, 0
  br i1 %tobool133, label %if.end159, label %land.lhs.true134

land.lhs.true134:                                 ; preds = %land.lhs.true131
  %54 = load i8* %utf8_mode, align 1, !tbaa !64
  %tobool136 = icmp eq i8 %54, 0
  br i1 %tobool136, label %land.lhs.true137, label %if.end159

land.lhs.true137:                                 ; preds = %land.lhs.true134
  %tobool138 = icmp eq i64 %and123, 0
  %55 = load i64* %len, align 8
  %cmp140 = icmp ugt i64 %55, 2
  %or.cond = and i1 %tobool138, %cmp140
  br i1 %or.cond, label %land.lhs.true142, label %lor.lhs.false

land.lhs.true142:                                 ; preds = %land.lhs.true137
  %call143 = call i32 @strncmp(i8* %cond121, i8* getelementptr inbounds ([4 x i8]* @.str81, i64 0, i64 0), i64 3) #2
  %tobool144 = icmp eq i32 %call143, 0
  br i1 %tobool144, label %if.then158, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true142, %land.lhs.true137
  %tobool145 = icmp ne i64 %and123, 0
  %cmp147 = icmp ugt i64 %55, 5
  %or.cond266 = and i1 %tobool145, %cmp147
  br i1 %or.cond266, label %land.lhs.true149, label %lor.lhs.false152

land.lhs.true149:                                 ; preds = %lor.lhs.false
  %call150 = call i32 @strncmp(i8* %cond121, i8* getelementptr inbounds ([7 x i8]* @.str82, i64 0, i64 0), i64 6) #2
  %tobool151 = icmp eq i32 %call150, 0
  br i1 %tobool151, label %if.then158, label %lor.lhs.false152

lor.lhs.false152:                                 ; preds = %land.lhs.true149, %lor.lhs.false
  br i1 %tobool145, label %if.end159, label %land.lhs.true154

land.lhs.true154:                                 ; preds = %lor.lhs.false152
  %add.ptr.i388 = getelementptr inbounds i8* %cond121, i64 %55
  br label %while.cond.i

while.cond.i:                                     ; preds = %land.rhs.i389, %land.lhs.true154
  %e.0.i = phi i8* [ %add.ptr.i388, %land.lhs.true154 ], [ %add.ptr1.i, %land.rhs.i389 ]
  %cmp.i = icmp ugt i8* %e.0.i, %cond121
  br i1 %cmp.i, label %land.rhs.i389, label %if.end.i

land.rhs.i389:                                    ; preds = %while.cond.i
  %add.ptr1.i = getelementptr inbounds i8* %e.0.i, i64 -1
  %56 = load i8* %add.ptr1.i, align 1, !tbaa !45
  %cmp2.i = icmp slt i8 %56, 0
  %cmp7.i = icmp ult i8 %56, -64
  %or.cond.i = and i1 %cmp2.i, %cmp7.i
  br i1 %or.cond.i, label %while.cond.i, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %land.rhs.i389
  %.off.i = add i8 %56, 64
  %57 = icmp ult i8 %.off.i, 62
  %incdec.ptr21.e.0.i = select i1 %57, i8* %add.ptr1.i, i8* %e.0.i
  br label %if.end.i

if.end.i:                                         ; preds = %while.cond.i, %land.lhs.true.i
  %e.1.i = phi i8* [ %incdec.ptr21.e.0.i, %land.lhs.true.i ], [ %e.0.i, %while.cond.i ]
  %sub.ptr.lhs.cast.i = ptrtoint i8* %e.1.i to i64
  %sub.ptr.rhs.cast.i = ptrtoint i8* %cond121 to i64
  %sub.ptr.sub58.i = sub i64 %sub.ptr.rhs.cast.i, %sub.ptr.lhs.cast.i
  %sub.i = add i64 %sub.ptr.sub58.i, %55
  %tobool.i390 = icmp eq i64 %sub.i, 0
  br i1 %tobool.i390, label %if.end28.i, label %land.lhs.true22.i

land.lhs.true22.i:                                ; preds = %if.end.i
  %58 = load i8* %e.1.i, align 1, !tbaa !45
  %idxprom.i = zext i8 %58 to i64
  %arrayidx.i = getelementptr inbounds [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom.i
  %59 = load i8* %arrayidx.i, align 1, !tbaa !45
  %conv23.i = zext i8 %59 to i64
  %cmp24.i = icmp eq i64 %conv23.i, %sub.i
  %add.ptr.e.1.i = select i1 %cmp24.i, i8* %add.ptr.i388, i8* %e.1.i
  br label %if.end28.i

if.end28.i:                                       ; preds = %land.lhs.true22.i, %if.end.i
  %e.2.i = phi i8* [ %e.1.i, %if.end.i ], [ %add.ptr.e.1.i, %land.lhs.true22.i ]
  br label %while.cond.i.i

while.cond.i.i:                                   ; preds = %while.body.i.i, %if.end28.i
  %s.addr.0.i.i = phi i8* [ %cond121, %if.end28.i ], [ %incdec.ptr.i.i, %while.body.i.i ]
  %cmp.i.i = icmp ult i8* %s.addr.0.i.i, %e.2.i
  br i1 %cmp.i.i, label %while.body.i.i, label %if.end159

while.body.i.i:                                   ; preds = %while.cond.i.i
  %incdec.ptr.i.i = getelementptr inbounds i8* %s.addr.0.i.i, i64 1
  %60 = load i8* %s.addr.0.i.i, align 1, !tbaa !45
  %cmp1.i.i = icmp sgt i8 %60, -1
  br i1 %cmp1.i.i, label %while.cond.i.i, label %probably_utf8_chunk.exit

probably_utf8_chunk.exit:                         ; preds = %while.body.i.i
  %sub.ptr.lhs.cast32.i = ptrtoint i8* %e.2.i to i64
  %sub.ptr.sub34.i = sub i64 %sub.ptr.lhs.cast32.i, %sub.ptr.rhs.cast.i
  %call35.i = call signext i8 @Perl_is_utf8_string(i8* %cond121, i64 %sub.ptr.sub34.i) #2
  %tobool157 = icmp eq i8 %call35.i, 0
  br i1 %tobool157, label %if.end159, label %if.then158

if.then158:                                       ; preds = %land.lhs.true142, %land.lhs.true149, %probably_utf8_chunk.exit
  call void (i8*, ...)* @Perl_warn(i8* getelementptr inbounds ([68 x i8]* @.str83, i64 0, i64 0)) #2
  br label %if.end159

if.end159:                                        ; preds = %while.cond.i.i, %probably_utf8_chunk.exit, %land.lhs.true134, %land.lhs.true131, %if.then127, %if.then158, %lor.lhs.false152
  %61 = load i8* @PL_dowarn, align 1, !tbaa !45
  %and161 = and i8 %61, 1
  %tobool162 = icmp ne i8 %and161, 0
  %tobool164 = icmp ne i64 %and123, 0
  %or.cond267 = and i1 %tobool162, %tobool164
  %62 = load i64* %len, align 8
  %cmp166 = icmp ugt i64 %62, 1
  %or.cond268 = and i1 %or.cond267, %cmp166
  br i1 %or.cond268, label %land.lhs.true168, label %if.end172

land.lhs.true168:                                 ; preds = %if.end159
  %call169 = call i32 @strncmp(i8* %cond121, i8* getelementptr inbounds ([3 x i8]* @.str84, i64 0, i64 0), i64 2) #2
  %tobool170 = icmp eq i32 %call169, 0
  br i1 %tobool170, label %if.then171, label %if.end172

if.then171:                                       ; preds = %land.lhs.true168
  call void (i8*, ...)* @Perl_warn(i8* getelementptr inbounds ([44 x i8]* @.str85, i64 0, i64 0)) #2
  %.pre408 = load i8* @PL_dowarn, align 1, !tbaa !45
  br label %if.end172

if.end172:                                        ; preds = %land.lhs.true168, %if.then171, %if.end159
  %63 = phi i8 [ %61, %land.lhs.true168 ], [ %.pre408, %if.then171 ], [ %61, %if.end159 ]
  %and174 = and i8 %63, 1
  %tobool175 = icmp eq i8 %and174, 0
  br i1 %tobool175, label %if.end204thread-pre-split, label %if.then176

if.then176:                                       ; preds = %if.end172
  %tobool177 = icmp eq i64 %and123, 0
  %64 = load i64* %len, align 8
  %cmp179 = icmp ugt i64 %64, 3
  %or.cond269 = and i1 %tobool177, %cmp179
  br i1 %or.cond269, label %land.lhs.true181, label %if.else188

land.lhs.true181:                                 ; preds = %if.then176
  %strcmpload = load i8* %cond121, align 1
  %tobool183 = icmp eq i8 %strcmpload, 0
  br i1 %tobool183, label %if.then187, label %lor.lhs.false184

lor.lhs.false184:                                 ; preds = %land.lhs.true181
  %call185 = call i32 @strncmp(i8* %cond121, i8* getelementptr inbounds ([5 x i8]* @.str87, i64 0, i64 0), i64 4) #2
  %tobool186 = icmp eq i32 %call185, 0
  br i1 %tobool186, label %if.then187, label %if.else188

if.then187:                                       ; preds = %lor.lhs.false184, %land.lhs.true181
  call void (i8*, ...)* @Perl_warn(i8* getelementptr inbounds ([28 x i8]* @.str88, i64 0, i64 0)) #2
  br label %if.end204thread-pre-split

if.else188:                                       ; preds = %lor.lhs.false184, %if.then176
  %cmp191 = icmp ugt i64 %64, 1
  %or.cond270 = and i1 %tobool177, %cmp191
  br i1 %or.cond270, label %land.lhs.true193, label %if.end204

land.lhs.true193:                                 ; preds = %if.else188
  %call194 = call i32 @strncmp(i8* %cond121, i8* getelementptr inbounds ([3 x i8]* @.str89, i64 0, i64 0), i64 2) #2
  %tobool195 = icmp eq i32 %call194, 0
  br i1 %tobool195, label %if.then199, label %lor.lhs.false196

lor.lhs.false196:                                 ; preds = %land.lhs.true193
  %call197 = call i32 @strncmp(i8* %cond121, i8* getelementptr inbounds ([3 x i8]* @.str84, i64 0, i64 0), i64 2) #2
  %tobool198 = icmp eq i32 %call197, 0
  br i1 %tobool198, label %if.then199, label %if.end204thread-pre-split

if.then199:                                       ; preds = %lor.lhs.false196, %land.lhs.true193
  call void (i8*, ...)* @Perl_warn(i8* getelementptr inbounds ([28 x i8]* @.str90, i64 0, i64 0)) #2
  br label %if.end204thread-pre-split

if.end204thread-pre-split:                        ; preds = %cond.end104, %if.then199, %if.then187, %cond.end120, %if.end172, %lor.lhs.false196
  %beg.0.ph = phi i8* [ %cond121, %lor.lhs.false196 ], [ %cond121, %if.end172 ], [ %cond121, %cond.end120 ], [ %cond121, %if.then187 ], [ %cond121, %if.then199 ], [ %cond105, %cond.end104 ]
  %utf8.0.ph = phi i64 [ 0, %lor.lhs.false196 ], [ %and123, %if.end172 ], [ %and123, %cond.end120 ], [ 0, %if.then187 ], [ 0, %if.then199 ], [ %and108, %cond.end104 ]
  %.pr394 = load i64* %len, align 8
  br label %if.end204

if.end204:                                        ; preds = %if.end204thread-pre-split, %if.else188
  %65 = phi i64 [ %.pr394, %if.end204thread-pre-split ], [ %64, %if.else188 ]
  %beg.0 = phi i8* [ %beg.0.ph, %if.end204thread-pre-split ], [ %cond121, %if.else188 ]
  %utf8.0 = phi i64 [ %utf8.0.ph, %if.end204thread-pre-split ], [ %and123, %if.else188 ]
  %tobool205 = icmp eq i64 %65, 0
  br i1 %tobool205, label %return, label %if.end207

if.end207:                                        ; preds = %if.end204
  %add.ptr208 = getelementptr inbounds i8* %beg.0, i64 %65
  %call209 = call fastcc i8* @parse_buf(%struct.p_state* %p_state, i8* %beg.0, i8* %add.ptr208, i64 %utf8.0, %struct.sv* %self)
  %cmp210 = icmp eq i8* %call209, %add.ptr208
  br i1 %cmp210, label %if.then215, label %lor.lhs.false212

lor.lhs.false212:                                 ; preds = %if.end207
  %eof = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 6
  %66 = load i8* %eof, align 1, !tbaa !48
  %tobool214 = icmp eq i8 %66, 0
  br i1 %tobool214, label %if.else230, label %if.then215

if.then215:                                       ; preds = %lor.lhs.false212, %if.end207
  %67 = load %struct.sv** %buf80, align 8, !tbaa !13
  %tobool217 = icmp eq %struct.sv* %67, null
  br i1 %tobool217, label %return, label %if.then218

if.then218:                                       ; preds = %if.then215
  %sv_flags220 = getelementptr inbounds %struct.sv* %67, i64 0, i32 2
  %68 = load i64* %sv_flags220, align 8, !tbaa !1
  %and221 = and i64 %68, 1223753727
  store i64 %and221, i64* %sv_flags220, align 8, !tbaa !1
  %and224 = and i64 %68, 2097152
  %tobool225 = icmp eq i64 %and224, 0
  br i1 %tobool225, label %return, label %land.rhs

land.rhs:                                         ; preds = %if.then218
  %call227 = call i32 @Perl_sv_backoff(%struct.sv* %67) #2
  br label %return

if.else230:                                       ; preds = %lor.lhs.false212
  %69 = load %struct.sv** %buf80, align 8, !tbaa !13
  %tobool232 = icmp eq %struct.sv* %69, null
  br i1 %tobool232, label %if.else252, label %if.then233

if.then233:                                       ; preds = %if.else230
  %sv_flags235 = getelementptr inbounds %struct.sv* %69, i64 0, i32 2
  %70 = load i64* %sv_flags235, align 8, !tbaa !1
  %and236 = and i64 %70, 118423552
  %tobool237 = icmp eq i64 %and236, 0
  br i1 %tobool237, label %if.else240, label %if.then238

if.then238:                                       ; preds = %if.then233
  call void @Perl_sv_chop(%struct.sv* %69, i8* %call209) #2
  br label %return

if.else240:                                       ; preds = %if.then233
  %sub.ptr.lhs.cast = ptrtoint i8* %add.ptr208 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %call209 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  call void @Perl_sv_setpvn(%struct.sv* %69, i8* %call209, i64 %sub.ptr.sub) #2
  %tobool242 = icmp eq i64 %utf8.0, 0
  %71 = load %struct.sv** %buf80, align 8, !tbaa !13
  %sv_flags245 = getelementptr inbounds %struct.sv* %71, i64 0, i32 2
  %72 = load i64* %sv_flags245, align 8, !tbaa !1
  br i1 %tobool242, label %if.else246, label %if.then243

if.then243:                                       ; preds = %if.else240
  %or = or i64 %72, 536870912
  store i64 %or, i64* %sv_flags245, align 8, !tbaa !1
  br label %return

if.else246:                                       ; preds = %if.else240
  %and249 = and i64 %72, -536870913
  store i64 %and249, i64* %sv_flags245, align 8, !tbaa !1
  br label %return

if.else252:                                       ; preds = %if.else230
  %sub.ptr.lhs.cast253 = ptrtoint i8* %add.ptr208 to i64
  %sub.ptr.rhs.cast254 = ptrtoint i8* %call209 to i64
  %sub.ptr.sub255 = sub i64 %sub.ptr.lhs.cast253, %sub.ptr.rhs.cast254
  %call256 = call %struct.sv* @Perl_newSVpv(i8* %call209, i64 %sub.ptr.sub255) #2
  store %struct.sv* %call256, %struct.sv** %buf80, align 8, !tbaa !13
  %tobool258 = icmp eq i64 %utf8.0, 0
  br i1 %tobool258, label %return, label %if.then259

if.then259:                                       ; preds = %if.else252
  %sv_flags261 = getelementptr inbounds %struct.sv* %call256, i64 0, i32 2
  %73 = load i64* %sv_flags261, align 8, !tbaa !1
  %or262 = or i64 %73, 536870912
  store i64 %or262, i64* %sv_flags261, align 8, !tbaa !1
  br label %return

return:                                           ; preds = %land.rhs, %if.then218, %if.then215, %if.else252, %if.end204, %if.then259, %if.then238, %if.else246, %if.then243, %if.end73
  ret void
}

declare %struct.sv* @Perl_sv_newmortal() #1

; Function Attrs: nounwind uwtable
define void @XS_HTML__Parser_eof(%struct.cv* nocapture readnone %cv) #0 {
entry:
  %0 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !26
  %1 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !26
  %2 = load i64** @PL_markstack_ptr, align 8, !tbaa !26
  %incdec.ptr = getelementptr inbounds i64* %2, i64 -1
  store i64* %incdec.ptr, i64** @PL_markstack_ptr, align 8, !tbaa !26
  %3 = load i64* %2, align 8, !tbaa !27
  %add.ptr = getelementptr inbounds %struct.sv** %1, i64 %3
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %add.ptr to i64
  %add.ptr.idx = shl nuw i64 %3, 3
  %sub.ptr.div = ashr exact i64 %add.ptr.idx, 3
  %add = add nsw i64 %sub.ptr.div, 1
  %sub.ptr.lhs.cast1 = ptrtoint %struct.sv** %0 to i64
  %sub.ptr.sub3 = sub i64 %sub.ptr.lhs.cast1, %sub.ptr.lhs.cast
  %sub.ptr.div4 = ashr exact i64 %sub.ptr.sub3, 3
  %cmp = icmp eq i64 %sub.ptr.div4, 1
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([31 x i8]* @.str26, i64 0, i64 0)) #2
  %.pre = load %struct.sv*** @PL_stack_base, align 8, !tbaa !26
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %4 = phi %struct.sv** [ %1, %entry ], [ %.pre, %if.then ]
  %arrayidx = getelementptr inbounds %struct.sv** %4, i64 %add
  %5 = load %struct.sv** %arrayidx, align 8, !tbaa !26
  %.idx = getelementptr %struct.sv* %5, i64 0, i32 0
  %.idx.val = load i8** %.idx, align 8, !tbaa !7
  %call = tail call fastcc %struct.p_state* @get_pstate_hv(i8* %.idx.val)
  %parsing = getelementptr inbounds %struct.p_state* %call, i64 0, i32 5
  %6 = load i8* %parsing, align 1, !tbaa !34
  %tobool = icmp eq i8 %6, 0
  br i1 %tobool, label %if.else, label %if.then7

if.then7:                                         ; preds = %if.end
  %eof = getelementptr inbounds %struct.p_state* %call, i64 0, i32 6
  store i8 1, i8* %eof, align 1, !tbaa !48
  br label %if.end10

if.else:                                          ; preds = %if.end
  store i8 1, i8* %parsing, align 1, !tbaa !34
  tail call fastcc void @parse(%struct.p_state* %call, %struct.sv* null, %struct.sv* %5)
  store i8 0, i8* %parsing, align 1, !tbaa !34
  br label %if.end10

if.end10:                                         ; preds = %if.else, %if.then7
  %add.ptr5.sum = sub i64 1, %sub.ptr.div4
  %incdec.ptr11 = getelementptr inbounds %struct.sv** %0, i64 %add.ptr5.sum
  store %struct.sv* %5, %struct.sv** %incdec.ptr11, align 8, !tbaa !26
  store %struct.sv** %incdec.ptr11, %struct.sv*** @PL_stack_sp, align 8, !tbaa !26
  ret void
}

; Function Attrs: nounwind uwtable
define void @XS_HTML__Parser_strict_comment(%struct.cv* nocapture readonly %cv) #0 {
entry:
  %0 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !26
  %1 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !26
  %2 = load i64** @PL_markstack_ptr, align 8, !tbaa !26
  %incdec.ptr = getelementptr inbounds i64* %2, i64 -1
  store i64* %incdec.ptr, i64** @PL_markstack_ptr, align 8, !tbaa !26
  %3 = load i64* %2, align 8, !tbaa !27
  %add.ptr = getelementptr inbounds %struct.sv** %1, i64 %3
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %add.ptr to i64
  %add.ptr.idx = shl nuw i64 %3, 3
  %sub.ptr.div = ashr exact i64 %add.ptr.idx, 3
  %add = add nsw i64 %sub.ptr.div, 1
  %sub.ptr.lhs.cast1 = ptrtoint %struct.sv** %0 to i64
  %sub.ptr.sub3 = sub i64 %sub.ptr.lhs.cast1, %sub.ptr.lhs.cast
  %sv_any = getelementptr inbounds %struct.cv* %cv, i64 0, i32 0
  %4 = load %struct.xpvcv** %sv_any, align 8, !tbaa !66
  %xcv_xsubany = getelementptr inbounds %struct.xpvcv* %4, i64 0, i32 11
  %any_i32 = bitcast %union.any* %xcv_xsubany to i64*
  %5 = load i64* %any_i32, align 8, !tbaa !27
  %cmp = icmp slt i64 %sub.ptr.sub3, 8
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %xcv_gv = getelementptr inbounds %struct.xpvcv* %4, i64 0, i32 12
  %6 = load %struct.gv** %xcv_gv, align 8, !tbaa !68
  %sv_any6 = getelementptr inbounds %struct.gv* %6, i64 0, i32 0
  %7 = load %struct.xpvgv** %sv_any6, align 8, !tbaa !35
  %xgv_name = getelementptr inbounds %struct.xpvgv* %7, i64 0, i32 8
  %8 = load i8** %xgv_name, align 8, !tbaa !70
  tail call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([23 x i8]* @.str27, i64 0, i64 0), i8* %8) #2
  %.pre = load %struct.sv*** @PL_stack_base, align 8, !tbaa !26
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %9 = phi %struct.sv** [ %.pre, %if.then ], [ %1, %entry ]
  %arrayidx = getelementptr inbounds %struct.sv** %9, i64 %add
  %10 = load %struct.sv** %arrayidx, align 8, !tbaa !26
  %.idx = getelementptr %struct.sv* %10, i64 0, i32 0
  %.idx.val = load i8** %.idx, align 8, !tbaa !7
  %call = tail call fastcc %struct.p_state* @get_pstate_hv(i8* %.idx.val)
  switch i64 %5, label %sw.default [
    i64 1, label %sw.bb
    i64 2, label %sw.bb8
    i64 3, label %sw.bb9
    i64 4, label %sw.bb10
    i64 5, label %sw.bb11
    i64 6, label %sw.bb12
    i64 7, label %sw.bb13
    i64 8, label %sw.bb14
    i64 9, label %sw.bb15
    i64 10, label %sw.bb16
  ]

sw.bb:                                            ; preds = %if.end
  %strict_comment = getelementptr inbounds %struct.p_state* %call, i64 0, i32 20
  br label %sw.epilog

sw.bb8:                                           ; preds = %if.end
  %strict_names = getelementptr inbounds %struct.p_state* %call, i64 0, i32 21
  br label %sw.epilog

sw.bb9:                                           ; preds = %if.end
  %xml_mode = getelementptr inbounds %struct.p_state* %call, i64 0, i32 23
  br label %sw.epilog

sw.bb10:                                          ; preds = %if.end
  %unbroken_text = getelementptr inbounds %struct.p_state* %call, i64 0, i32 24
  br label %sw.epilog

sw.bb11:                                          ; preds = %if.end
  %marked_sections = getelementptr inbounds %struct.p_state* %call, i64 0, i32 19
  br label %sw.epilog

sw.bb12:                                          ; preds = %if.end
  %attr_encoded = getelementptr inbounds %struct.p_state* %call, i64 0, i32 25
  br label %sw.epilog

sw.bb13:                                          ; preds = %if.end
  %case_sensitive = getelementptr inbounds %struct.p_state* %call, i64 0, i32 26
  br label %sw.epilog

sw.bb14:                                          ; preds = %if.end
  %strict_end = getelementptr inbounds %struct.p_state* %call, i64 0, i32 22
  br label %sw.epilog

sw.bb15:                                          ; preds = %if.end
  %closing_plaintext = getelementptr inbounds %struct.p_state* %call, i64 0, i32 27
  br label %sw.epilog

sw.bb16:                                          ; preds = %if.end
  %utf8_mode = getelementptr inbounds %struct.p_state* %call, i64 0, i32 28
  br label %sw.epilog

sw.default:                                       ; preds = %if.end
  tail call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([31 x i8]* @.str28, i64 0, i64 0), i64 %5) #2
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb16, %sw.bb15, %sw.bb14, %sw.bb13, %sw.bb12, %sw.bb11, %sw.bb10, %sw.bb9, %sw.bb8, %sw.bb
  %attr.0 = phi i8* [ undef, %sw.default ], [ %utf8_mode, %sw.bb16 ], [ %closing_plaintext, %sw.bb15 ], [ %strict_end, %sw.bb14 ], [ %case_sensitive, %sw.bb13 ], [ %attr_encoded, %sw.bb12 ], [ %marked_sections, %sw.bb11 ], [ %unbroken_text, %sw.bb10 ], [ %xml_mode, %sw.bb9 ], [ %strict_names, %sw.bb8 ], [ %strict_comment, %sw.bb ]
  %11 = load i8* %attr.0, align 1, !tbaa !45
  %tobool = icmp ne i8 %11, 0
  %cond = select i1 %tobool, %struct.sv* @PL_sv_yes, %struct.sv* @PL_sv_no
  %cmp17 = icmp sgt i64 %sub.ptr.sub3, 8
  br i1 %cmp17, label %if.then19, label %if.end78

if.then19:                                        ; preds = %sw.epilog
  %add20 = add nsw i64 %sub.ptr.div, 2
  %12 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !26
  %arrayidx21 = getelementptr inbounds %struct.sv** %12, i64 %add20
  %13 = load %struct.sv** %arrayidx21, align 8, !tbaa !26
  %tobool22 = icmp eq %struct.sv* %13, null
  br i1 %tobool22, label %cond.end75, label %cond.false

cond.false:                                       ; preds = %if.then19
  %sv_flags = getelementptr inbounds %struct.sv* %13, i64 0, i32 2
  %14 = load i64* %sv_flags, align 8, !tbaa !1
  %and = and i64 %14, 262144
  %tobool25 = icmp eq i64 %and, 0
  br i1 %tobool25, label %cond.false41, label %cond.true26

cond.true26:                                      ; preds = %cond.false
  %sv_any29 = getelementptr inbounds %struct.sv* %13, i64 0, i32 0
  %15 = load i8** %sv_any29, align 8, !tbaa !7
  %16 = bitcast i8* %15 to %struct.xpv*
  store %struct.xpv* %16, %struct.xpv** @PL_Xpv, align 8, !tbaa !26
  %tobool30 = icmp eq i8* %15, null
  br i1 %tobool30, label %land.end39, label %land.rhs

land.rhs:                                         ; preds = %cond.true26
  %xpv_cur = getelementptr inbounds i8* %15, i64 8
  %17 = bitcast i8* %xpv_cur to i64*
  %18 = load i64* %17, align 8, !tbaa !42
  %cmp31 = icmp ugt i64 %18, 1
  br i1 %cmp31, label %land.end39, label %lor.rhs

lor.rhs:                                          ; preds = %land.rhs
  %tobool34 = icmp eq i64 %18, 0
  br i1 %tobool34, label %land.end39, label %land.rhs35

land.rhs35:                                       ; preds = %lor.rhs
  %xpv_pv = bitcast i8* %15 to i8**
  %19 = load i8** %xpv_pv, align 8, !tbaa !44
  %20 = load i8* %19, align 1, !tbaa !45
  %cmp37 = icmp ne i8 %20, 48
  br label %land.end39

land.end39:                                       ; preds = %lor.rhs, %cond.true26, %land.rhs, %land.rhs35
  %21 = phi i1 [ false, %cond.true26 ], [ true, %land.rhs ], [ false, %lor.rhs ], [ %cmp37, %land.rhs35 ]
  %cond40 = zext i1 %21 to i8
  br label %cond.end75

cond.false41:                                     ; preds = %cond.false
  %and45 = and i64 %14, 65536
  %tobool46 = icmp eq i64 %and45, 0
  br i1 %tobool46, label %cond.false53, label %cond.true47

cond.true47:                                      ; preds = %cond.false41
  %sv_any50 = getelementptr inbounds %struct.sv* %13, i64 0, i32 0
  %22 = load i8** %sv_any50, align 8, !tbaa !7
  %xiv_iv = getelementptr inbounds i8* %22, i64 24
  %23 = bitcast i8* %xiv_iv to i64*
  %24 = load i64* %23, align 8, !tbaa !8
  %cmp51 = icmp ne i64 %24, 0
  %conv52 = zext i1 %cmp51 to i8
  br label %cond.end75

cond.false53:                                     ; preds = %cond.false41
  %and57 = and i64 %14, 131072
  %tobool58 = icmp eq i64 %and57, 0
  br i1 %tobool58, label %cond.false65, label %cond.true59

cond.true59:                                      ; preds = %cond.false53
  %sv_any62 = getelementptr inbounds %struct.sv* %13, i64 0, i32 0
  %25 = load i8** %sv_any62, align 8, !tbaa !7
  %xnv_nv = getelementptr inbounds i8* %25, i64 32
  %26 = bitcast i8* %xnv_nv to double*
  %27 = load double* %26, align 8, !tbaa !46
  %cmp63 = fcmp une double %27, 0.000000e+00
  %conv64 = zext i1 %cmp63 to i8
  br label %cond.end75

cond.false65:                                     ; preds = %cond.false53
  %call68 = tail call signext i8 @Perl_sv_2bool(%struct.sv* %13) #2
  br label %cond.end75

cond.end75:                                       ; preds = %if.then19, %land.end39, %cond.true59, %cond.false65, %cond.true47
  %cond76 = phi i8 [ 0, %if.then19 ], [ %cond40, %land.end39 ], [ %conv52, %cond.true47 ], [ %conv64, %cond.true59 ], [ %call68, %cond.false65 ]
  store i8 %cond76, i8* %attr.0, align 1, !tbaa !45
  br label %if.end78

if.end78:                                         ; preds = %cond.end75, %sw.epilog
  %28 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !26
  %arrayidx80 = getelementptr inbounds %struct.sv** %28, i64 %add
  store %struct.sv* %cond, %struct.sv** %arrayidx80, align 8, !tbaa !26
  %29 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !26
  %arrayidx82 = getelementptr inbounds %struct.sv** %29, i64 %add
  %30 = load %struct.sv** %arrayidx82, align 8, !tbaa !26
  %call83 = tail call %struct.sv* @Perl_sv_2mortal(%struct.sv* %30) #2
  %31 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !26
  %add.ptr84 = getelementptr inbounds %struct.sv** %31, i64 %add
  store %struct.sv** %add.ptr84, %struct.sv*** @PL_stack_sp, align 8, !tbaa !26
  ret void
}

declare %struct.sv* @Perl_sv_2mortal(%struct.sv*) #1

; Function Attrs: nounwind uwtable
define void @XS_HTML__Parser_boolean_attribute_value(%struct.cv* nocapture readnone %cv) #0 {
entry:
  %0 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !26
  %1 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !26
  %2 = load i64** @PL_markstack_ptr, align 8, !tbaa !26
  %incdec.ptr = getelementptr inbounds i64* %2, i64 -1
  store i64* %incdec.ptr, i64** @PL_markstack_ptr, align 8, !tbaa !26
  %3 = load i64* %2, align 8, !tbaa !27
  %add.ptr = getelementptr inbounds %struct.sv** %1, i64 %3
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %add.ptr to i64
  %add.ptr.idx = shl nuw i64 %3, 3
  %sub.ptr.div = ashr exact i64 %add.ptr.idx, 3
  %add = add nsw i64 %sub.ptr.div, 1
  %sub.ptr.lhs.cast1 = ptrtoint %struct.sv** %0 to i64
  %sub.ptr.sub3 = sub i64 %sub.ptr.lhs.cast1, %sub.ptr.lhs.cast
  %cmp = icmp slt i64 %sub.ptr.sub3, 8
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([58 x i8]* @.str29, i64 0, i64 0)) #2
  %.pre = load %struct.sv*** @PL_stack_base, align 8, !tbaa !26
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %4 = phi %struct.sv** [ %.pre, %if.then ], [ %1, %entry ]
  %arrayidx = getelementptr inbounds %struct.sv** %4, i64 %add
  %5 = load %struct.sv** %arrayidx, align 8, !tbaa !26
  %.idx = getelementptr %struct.sv* %5, i64 0, i32 0
  %.idx.val = load i8** %.idx, align 8, !tbaa !7
  %call = tail call fastcc %struct.p_state* @get_pstate_hv(i8* %.idx.val)
  %bool_attr_val = getelementptr inbounds %struct.p_state* %call, i64 0, i32 29
  %6 = load %struct.sv** %bool_attr_val, align 8, !tbaa !17
  %tobool = icmp eq %struct.sv* %6, null
  br i1 %tobool, label %cond.end, label %cond.true

cond.true:                                        ; preds = %if.end
  %call7 = tail call %struct.sv* @Perl_newSVsv(%struct.sv* %6) #2
  br label %cond.end

cond.end:                                         ; preds = %if.end, %cond.true
  %cond = phi %struct.sv* [ %call7, %cond.true ], [ @PL_sv_undef, %if.end ]
  %cmp8 = icmp sgt i64 %sub.ptr.sub3, 8
  br i1 %cmp8, label %if.then9, label %if.end15

if.then9:                                         ; preds = %cond.end
  %7 = load %struct.sv** %bool_attr_val, align 8, !tbaa !17
  tail call void @Perl_sv_free(%struct.sv* %7) #2
  %add11 = add nsw i64 %sub.ptr.div, 2
  %8 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !26
  %arrayidx12 = getelementptr inbounds %struct.sv** %8, i64 %add11
  %9 = load %struct.sv** %arrayidx12, align 8, !tbaa !26
  %call13 = tail call %struct.sv* @Perl_newSVsv(%struct.sv* %9) #2
  store %struct.sv* %call13, %struct.sv** %bool_attr_val, align 8, !tbaa !17
  br label %if.end15

if.end15:                                         ; preds = %if.then9, %cond.end
  %10 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !26
  %arrayidx17 = getelementptr inbounds %struct.sv** %10, i64 %add
  store %struct.sv* %cond, %struct.sv** %arrayidx17, align 8, !tbaa !26
  %11 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !26
  %arrayidx19 = getelementptr inbounds %struct.sv** %11, i64 %add
  %12 = load %struct.sv** %arrayidx19, align 8, !tbaa !26
  %call20 = tail call %struct.sv* @Perl_sv_2mortal(%struct.sv* %12) #2
  %13 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !26
  %add.ptr21 = getelementptr inbounds %struct.sv** %13, i64 %add
  store %struct.sv** %add.ptr21, %struct.sv*** @PL_stack_sp, align 8, !tbaa !26
  ret void
}

declare %struct.sv* @Perl_newSVsv(%struct.sv*) #1

declare void @Perl_sv_free(%struct.sv*) #1

; Function Attrs: nounwind uwtable
define void @XS_HTML__Parser_ignore_tags(%struct.cv* nocapture readonly %cv) #0 {
entry:
  %0 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !26
  %1 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !26
  %2 = load i64** @PL_markstack_ptr, align 8, !tbaa !26
  %incdec.ptr = getelementptr inbounds i64* %2, i64 -1
  store i64* %incdec.ptr, i64** @PL_markstack_ptr, align 8, !tbaa !26
  %3 = load i64* %2, align 8, !tbaa !27
  %add.ptr = getelementptr inbounds %struct.sv** %1, i64 %3
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %add.ptr to i64
  %add.ptr.idx = shl nuw i64 %3, 3
  %sub.ptr.div = ashr exact i64 %add.ptr.idx, 3
  %add = add nsw i64 %sub.ptr.div, 1
  %sub.ptr.lhs.cast1 = ptrtoint %struct.sv** %0 to i64
  %sub.ptr.sub3 = sub i64 %sub.ptr.lhs.cast1, %sub.ptr.lhs.cast
  %sub.ptr.div4 = ashr exact i64 %sub.ptr.sub3, 3
  %sv_any = getelementptr inbounds %struct.cv* %cv, i64 0, i32 0
  %4 = load %struct.xpvcv** %sv_any, align 8, !tbaa !66
  %xcv_xsubany = getelementptr inbounds %struct.xpvcv* %4, i64 0, i32 11
  %any_i32 = bitcast %union.any* %xcv_xsubany to i64*
  %5 = load i64* %any_i32, align 8, !tbaa !27
  %cmp = icmp slt i64 %sub.ptr.sub3, 8
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %xcv_gv = getelementptr inbounds %struct.xpvcv* %4, i64 0, i32 12
  %6 = load %struct.gv** %xcv_gv, align 8, !tbaa !68
  %sv_any6 = getelementptr inbounds %struct.gv* %6, i64 0, i32 0
  %7 = load %struct.xpvgv** %sv_any6, align 8, !tbaa !35
  %xgv_name = getelementptr inbounds %struct.xpvgv* %7, i64 0, i32 8
  %8 = load i8** %xgv_name, align 8, !tbaa !70
  tail call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([23 x i8]* @.str27, i64 0, i64 0), i8* %8) #2
  %.pre = load %struct.sv*** @PL_stack_base, align 8, !tbaa !26
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %9 = phi %struct.sv** [ %.pre, %if.then ], [ %1, %entry ]
  %arrayidx = getelementptr inbounds %struct.sv** %9, i64 %add
  %10 = load %struct.sv** %arrayidx, align 8, !tbaa !26
  %.idx = getelementptr %struct.sv* %10, i64 0, i32 0
  %.idx.val = load i8** %.idx, align 8, !tbaa !7
  %call = tail call fastcc %struct.p_state* @get_pstate_hv(i8* %.idx.val)
  switch i64 %5, label %sw.default [
    i64 1, label %sw.bb
    i64 2, label %sw.bb8
    i64 3, label %sw.bb9
  ]

sw.bb:                                            ; preds = %if.end
  %report_tags = getelementptr inbounds %struct.p_state* %call, i64 0, i32 32
  br label %sw.epilog

sw.bb8:                                           ; preds = %if.end
  %ignore_tags = getelementptr inbounds %struct.p_state* %call, i64 0, i32 33
  br label %sw.epilog

sw.bb9:                                           ; preds = %if.end
  %ignore_elements = getelementptr inbounds %struct.p_state* %call, i64 0, i32 34
  br label %sw.epilog

sw.default:                                       ; preds = %if.end
  tail call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([32 x i8]* @.str30, i64 0, i64 0), i64 %5) #2
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb9, %sw.bb8, %sw.bb
  %attr.0 = phi %struct.hv** [ undef, %sw.default ], [ %ignore_elements, %sw.bb9 ], [ %ignore_tags, %sw.bb8 ], [ %report_tags, %sw.bb ]
  %11 = load %struct.op** @PL_op, align 8, !tbaa !26
  %op_flags = getelementptr inbounds %struct.op* %11, i64 0, i32 6
  %12 = load i8* %op_flags, align 1, !tbaa !71
  %conv = zext i8 %12 to i32
  %and = and i32 %conv, 3
  switch i32 %and, label %cond.false25 [
    i32 1, label %if.end34
    i32 2, label %if.then33
    i32 3, label %if.then33
  ]

cond.false25:                                     ; preds = %sw.epilog
  %call26 = tail call i64 @Perl_block_gimme() #2
  %phitmp = icmp eq i64 %call26, 128
  br i1 %phitmp, label %if.end34, label %if.then33

if.then33:                                        ; preds = %cond.false25, %sw.epilog, %sw.epilog
  tail call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([27 x i8]* @.str31, i64 0, i64 0)) #2
  br label %if.end34

if.end34:                                         ; preds = %cond.false25, %sw.epilog, %if.then33
  %dec = add i64 %sub.ptr.div4, -1
  %tobool = icmp eq i64 %dec, 0
  %13 = load %struct.hv** %attr.0, align 8, !tbaa !26
  %tobool36 = icmp ne %struct.hv* %13, null
  br i1 %tobool, label %if.else77, label %if.then35

if.then35:                                        ; preds = %if.end34
  br i1 %tobool36, label %if.then37, label %if.else

if.then37:                                        ; preds = %if.then35
  tail call void @Perl_hv_clear(%struct.hv* %13) #2
  br label %for.cond.preheader

if.else:                                          ; preds = %if.then35
  %call38 = tail call %struct.hv* @Perl_newHV() #2
  store %struct.hv* %call38, %struct.hv** %attr.0, align 8, !tbaa !26
  br label %for.cond.preheader

for.cond.preheader:                               ; preds = %if.else, %if.then37
  %cmp41112 = icmp sgt i64 %dec, 0
  br i1 %cmp41112, label %for.body, label %if.end81

for.body:                                         ; preds = %for.cond.preheader, %for.cond.backedge
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.cond.backedge ], [ 0, %for.cond.preheader ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %add45 = add nsw i64 %indvars.iv.next, %add
  %14 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !26
  %arrayidx46 = getelementptr inbounds %struct.sv** %14, i64 %add45
  %15 = load %struct.sv** %arrayidx46, align 8, !tbaa !26
  %sv_flags = getelementptr inbounds %struct.sv* %15, i64 0, i32 2
  %16 = load i64* %sv_flags, align 8, !tbaa !1
  %and47 = and i64 %16, 524288
  %tobool48 = icmp eq i64 %and47, 0
  br i1 %tobool48, label %if.else70, label %if.then49

if.then49:                                        ; preds = %for.body
  %sv_any50 = getelementptr inbounds %struct.sv* %15, i64 0, i32 0
  %17 = load i8** %sv_any50, align 8, !tbaa !7
  %xrv_rv = bitcast i8* %17 to %struct.sv**
  %18 = load %struct.sv** %xrv_rv, align 8, !tbaa !28
  %sv_flags51 = getelementptr inbounds %struct.sv* %18, i64 0, i32 2
  %19 = load i64* %sv_flags51, align 8, !tbaa !1
  %and52 = and i64 %19, 255
  %cmp53 = icmp eq i64 %and52, 10
  br i1 %cmp53, label %if.then55, label %if.else68

if.then55:                                        ; preds = %if.then49
  %20 = bitcast %struct.sv* %18 to %struct.av*
  %call56 = tail call i64 @Perl_av_len(%struct.av* %20) #2
  %add57 = add i64 %call56, 1
  %cmp59110 = icmp eq i64 %add57, 0
  br i1 %cmp59110, label %for.cond.backedge, label %for.body61

for.body61:                                       ; preds = %if.then55, %for.inc
  %j.0111 = phi i64 [ %inc, %for.inc ], [ 0, %if.then55 ]
  %call62 = tail call %struct.sv** @Perl_av_fetch(%struct.av* %20, i64 %j.0111, i64 0) #2
  %tobool63 = icmp eq %struct.sv** %call62, null
  br i1 %tobool63, label %for.inc, label %if.then64

if.then64:                                        ; preds = %for.body61
  %21 = load %struct.hv** %attr.0, align 8, !tbaa !26
  %22 = load %struct.sv** %call62, align 8, !tbaa !26
  %call65 = tail call %struct.sv* @Perl_newSViv(i64 0) #2
  %call66 = tail call %struct.he* @Perl_hv_store_ent(%struct.hv* %21, %struct.sv* %22, %struct.sv* %call65, i64 0) #2
  br label %for.inc

for.inc:                                          ; preds = %for.body61, %if.then64
  %inc = add i64 %j.0111, 1
  %exitcond = icmp eq i64 %inc, %add57
  br i1 %exitcond, label %for.cond.backedge, label %for.body61

if.else68:                                        ; preds = %if.then49
  tail call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([42 x i8]* @.str32, i64 0, i64 0)) #2
  br label %for.cond.backedge

if.else70:                                        ; preds = %for.body
  %23 = load %struct.hv** %attr.0, align 8, !tbaa !26
  %call71 = tail call %struct.sv* @Perl_newSViv(i64 0) #2
  %call72 = tail call %struct.he* @Perl_hv_store_ent(%struct.hv* %23, %struct.sv* %15, %struct.sv* %call71, i64 0) #2
  br label %for.cond.backedge

for.cond.backedge:                                ; preds = %for.inc, %if.then55, %if.else70, %if.else68
  %exitcond114 = icmp eq i64 %indvars.iv.next, %dec
  br i1 %exitcond114, label %if.end81, label %for.body

if.else77:                                        ; preds = %if.end34
  br i1 %tobool36, label %if.then79, label %if.end81

if.then79:                                        ; preds = %if.else77
  %24 = bitcast %struct.hv* %13 to %struct.sv*
  tail call void @Perl_sv_free(%struct.sv* %24) #2
  store %struct.hv* null, %struct.hv** %attr.0, align 8, !tbaa !26
  br label %if.end81

if.end81:                                         ; preds = %for.cond.backedge, %for.cond.preheader, %if.else77, %if.then79
  %25 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !26
  %add.ptr83 = getelementptr inbounds %struct.sv** %25, i64 %sub.ptr.div
  store %struct.sv** %add.ptr83, %struct.sv*** @PL_stack_sp, align 8, !tbaa !26
  ret void
}

declare i64 @Perl_block_gimme() #1

declare void @Perl_hv_clear(%struct.hv*) #1

declare %struct.hv* @Perl_newHV() #1

declare i64 @Perl_av_len(%struct.av*) #1

declare %struct.sv** @Perl_av_fetch(%struct.av*, i64, i64) #1

declare %struct.he* @Perl_hv_store_ent(%struct.hv*, %struct.sv*, %struct.sv*, i64) #1

; Function Attrs: nounwind uwtable
define void @XS_HTML__Parser_handler(%struct.cv* nocapture readnone %cv) #0 {
entry:
  %len.i = alloca i64, align 8
  %c.i = alloca i8, align 1
  %c83.i = alloca i8, align 1
  %buf.i = alloca [2 x i8], align 1
  %name_len = alloca i64, align 8
  %0 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !26
  %1 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !26
  %2 = load i64** @PL_markstack_ptr, align 8, !tbaa !26
  %incdec.ptr = getelementptr inbounds i64* %2, i64 -1
  store i64* %incdec.ptr, i64** @PL_markstack_ptr, align 8, !tbaa !26
  %3 = load i64* %2, align 8, !tbaa !27
  %add.ptr = getelementptr inbounds %struct.sv** %1, i64 %3
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %add.ptr to i64
  %add.ptr.idx = shl nuw i64 %3, 3
  %sub.ptr.div = ashr exact i64 %add.ptr.idx, 3
  %add = add nsw i64 %sub.ptr.div, 1
  %sub.ptr.lhs.cast1 = ptrtoint %struct.sv** %0 to i64
  %sub.ptr.sub3 = sub i64 %sub.ptr.lhs.cast1, %sub.ptr.lhs.cast
  %sub.ptr.div4 = ashr exact i64 %sub.ptr.sub3, 3
  %cmp = icmp slt i64 %sub.ptr.sub3, 16
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([53 x i8]* @.str33, i64 0, i64 0)) #2
  %.pre = load %struct.sv*** @PL_stack_base, align 8, !tbaa !26
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %4 = phi %struct.sv** [ %.pre, %if.then ], [ %1, %entry ]
  %arrayidx = getelementptr inbounds %struct.sv** %4, i64 %add
  %5 = load %struct.sv** %arrayidx, align 8, !tbaa !26
  %.idx = getelementptr %struct.sv* %5, i64 0, i32 0
  %.idx.val = load i8** %.idx, align 8, !tbaa !7
  %call = call fastcc %struct.p_state* @get_pstate_hv(i8* %.idx.val)
  %add7 = add nsw i64 %sub.ptr.div, 2
  %6 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !26
  %arrayidx8 = getelementptr inbounds %struct.sv** %6, i64 %add7
  %7 = load %struct.sv** %arrayidx8, align 8, !tbaa !26
  %sv_flags = getelementptr inbounds %struct.sv* %7, i64 0, i32 2
  %8 = load i64* %sv_flags, align 8, !tbaa !1
  %and = and i64 %8, 262144
  %cmp9 = icmp eq i64 %and, 0
  br i1 %cmp9, label %cond.false, label %cond.true

cond.true:                                        ; preds = %if.end
  %sv_any = getelementptr inbounds %struct.sv* %7, i64 0, i32 0
  %9 = load i8** %sv_any, align 8, !tbaa !7
  %xpv_cur = getelementptr inbounds i8* %9, i64 8
  %10 = bitcast i8* %xpv_cur to i64*
  %11 = load i64* %10, align 8, !tbaa !42
  store i64 %11, i64* %name_len, align 8, !tbaa !27
  %xpv_pv = bitcast i8* %9 to i8**
  %12 = load i8** %xpv_pv, align 8, !tbaa !44
  br label %cond.end

cond.false:                                       ; preds = %if.end
  %call11 = call i8* @Perl_sv_2pv_flags(%struct.sv* %7, i64* %name_len, i64 2) #2
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %12, %cond.true ], [ %call11, %cond.false ]
  br label %for.body

for.cond:                                         ; preds = %for.body
  %13 = trunc i64 %indvars.iv.next to i32
  %cmp12 = icmp slt i32 %13, 9
  br i1 %cmp12, label %for.body, label %if.then18

for.body:                                         ; preds = %cond.end, %for.cond
  %indvars.iv = phi i64 [ 0, %cond.end ], [ %indvars.iv.next, %for.cond ]
  %arrayidx13 = getelementptr inbounds [9 x i8*]* @event_id_str, i64 0, i64 %indvars.iv
  %14 = load i8** %arrayidx13, align 8, !tbaa !26
  %call14 = call i32 @strcmp(i8* %cond, i8* %14) #2
  %tobool = icmp eq i32 %call14, 0
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  br i1 %tobool, label %for.end, label %for.cond

for.end:                                          ; preds = %for.body
  %15 = trunc i64 %indvars.iv to i32
  %cmp17 = icmp slt i32 %15, 0
  br i1 %cmp17, label %if.then18, label %if.end19

if.then18:                                        ; preds = %for.cond, %for.end
  %event.096 = phi i64 [ %indvars.iv, %for.end ], [ -1, %for.cond ]
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([25 x i8]* @.str34, i64 0, i64 0), i8* %cond) #2
  br label %if.end19

if.end19:                                         ; preds = %if.then18, %for.end
  %event.095 = phi i64 [ %event.096, %if.then18 ], [ %indvars.iv, %for.end ]
  %sext = shl i64 %event.095, 32
  %idxprom20 = ashr exact i64 %sext, 32
  %cb = getelementptr inbounds %struct.p_state* %call, i64 0, i32 30, i64 %idxprom20, i32 0
  %16 = load %struct.sv** %cb, align 8, !tbaa !18
  %tobool22 = icmp eq %struct.sv* %16, null
  br i1 %tobool22, label %if.else, label %if.then23

if.then23:                                        ; preds = %if.end19
  %sv_flags25 = getelementptr inbounds %struct.sv* %16, i64 0, i32 2
  %17 = load i64* %sv_flags25, align 8, !tbaa !1
  %and26 = and i64 %17, 255
  %cmp27 = icmp eq i64 %and26, 10
  br i1 %cmp27, label %cond.true28, label %cond.false32

cond.true28:                                      ; preds = %if.then23
  %call30 = call %struct.sv* @Perl_newRV(%struct.sv* %16) #2
  %call31 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call30) #2
  br label %cond.end36

cond.false32:                                     ; preds = %if.then23
  %call34 = call %struct.sv* @Perl_newSVsv(%struct.sv* %16) #2
  %call35 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call34) #2
  br label %cond.end36

cond.end36:                                       ; preds = %cond.false32, %cond.true28
  %cond37 = phi %struct.sv* [ %call31, %cond.true28 ], [ %call35, %cond.false32 ]
  %add.ptr5.sum84 = sub i64 1, %sub.ptr.div4
  %incdec.ptr38 = getelementptr inbounds %struct.sv** %0, i64 %add.ptr5.sum84
  store %struct.sv* %cond37, %struct.sv** %incdec.ptr38, align 8, !tbaa !26
  br label %if.end40

if.else:                                          ; preds = %if.end19
  %add.ptr5.sum = sub i64 1, %sub.ptr.div4
  %incdec.ptr39 = getelementptr inbounds %struct.sv** %0, i64 %add.ptr5.sum
  store %struct.sv* @PL_sv_undef, %struct.sv** %incdec.ptr39, align 8, !tbaa !26
  br label %if.end40

if.end40:                                         ; preds = %if.else, %cond.end36
  %sp.0 = phi %struct.sv** [ %incdec.ptr38, %cond.end36 ], [ %incdec.ptr39, %if.else ]
  %cmp41 = icmp sgt i64 %sub.ptr.sub3, 24
  br i1 %cmp41, label %if.then42, label %if.end48

if.then42:                                        ; preds = %if.end40
  %argspec = getelementptr inbounds %struct.p_state* %call, i64 0, i32 30, i64 %idxprom20, i32 1
  %18 = load %struct.sv** %argspec, align 8, !tbaa !20
  call void @Perl_sv_free(%struct.sv* %18) #2
  store %struct.sv* null, %struct.sv** %argspec, align 8, !tbaa !20
  %add44 = add nsw i64 %sub.ptr.div, 4
  %19 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !26
  %arrayidx45 = getelementptr inbounds %struct.sv** %19, i64 %add44
  %20 = load %struct.sv** %arrayidx45, align 8, !tbaa !26
  %21 = bitcast i64* %len.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %21) #2
  call void @llvm.lifetime.start(i64 1, i8* %c.i) #2
  call void @llvm.lifetime.start(i64 1, i8* %c83.i) #2
  %22 = getelementptr inbounds [2 x i8]* %buf.i, i64 0, i64 0
  call void @llvm.lifetime.start(i64 2, i8* %22) #2
  %call.i = call %struct.sv* @Perl_newSVpvn(i8* getelementptr inbounds ([1 x i8]* @.str63, i64 0, i64 0), i64 0) #2
  %sv_flags.i = getelementptr inbounds %struct.sv* %20, i64 0, i32 2
  %23 = load i64* %sv_flags.i, align 8, !tbaa !1
  %and.i = and i64 %23, 262144
  %cmp.i = icmp eq i64 %and.i, 0
  br i1 %cmp.i, label %cond.false.i, label %cond.true.i

cond.true.i:                                      ; preds = %if.then42
  %sv_any.i = getelementptr inbounds %struct.sv* %20, i64 0, i32 0
  %24 = load i8** %sv_any.i, align 8, !tbaa !7
  %xpv_cur.i = getelementptr inbounds i8* %24, i64 8
  %25 = bitcast i8* %xpv_cur.i to i64*
  %26 = load i64* %25, align 8, !tbaa !42
  store i64 %26, i64* %len.i, align 8, !tbaa !27
  %xpv_pv.i = bitcast i8* %24 to i8**
  %27 = load i8** %xpv_pv.i, align 8, !tbaa !44
  br label %cond.end.i

cond.false.i:                                     ; preds = %if.then42
  %call2.i = call i8* @Perl_sv_2pv_flags(%struct.sv* %20, i64* %len.i, i64 2) #2
  %.pre.i = load i64* %len.i, align 8, !tbaa !27
  %.pre327.i = load i64* %sv_flags.i, align 8, !tbaa !1
  br label %cond.end.i

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %28 = phi i64 [ %23, %cond.true.i ], [ %.pre327.i, %cond.false.i ]
  %29 = phi i64 [ %26, %cond.true.i ], [ %.pre.i, %cond.false.i ]
  %cond.i = phi i8* [ %27, %cond.true.i ], [ %call2.i, %cond.false.i ]
  %add.ptr.i = getelementptr inbounds i8* %cond.i, i64 %29
  %and4.i = and i64 %28, 536870912
  %tobool.i = icmp eq i64 %and4.i, 0
  br i1 %tobool.i, label %while.cond.i, label %if.then.i

if.then.i:                                        ; preds = %cond.end.i
  %sv_flags5.i = getelementptr inbounds %struct.sv* %call.i, i64 0, i32 2
  %30 = load i64* %sv_flags5.i, align 8, !tbaa !1
  %or.i = or i64 %30, 536870912
  store i64 %or.i, i64* %sv_flags5.i, align 8, !tbaa !1
  br label %while.cond.i

while.cond.i:                                     ; preds = %if.then.i, %cond.end.i, %while.cond.i
  %s.0.i = phi i8* [ %incdec.ptr.i, %while.cond.i ], [ %cond.i, %cond.end.i ], [ %cond.i, %if.then.i ]
  %31 = load i8* %s.0.i, align 1, !tbaa !45
  %idxprom.i = zext i8 %31 to i64
  %arrayidx.i = getelementptr inbounds [256 x i8]* @hctype, i64 0, i64 %idxprom.i
  %32 = load i8* %arrayidx.i, align 1, !tbaa !45
  %and6.i = and i8 %32, 1
  %tobool7.i = icmp eq i8 %and6.i, 0
  %incdec.ptr.i = getelementptr inbounds i8* %s.0.i, i64 1
  br i1 %tobool7.i, label %while.end.i, label %while.cond.i

while.end.i:                                      ; preds = %while.cond.i
  %cmp9.i = icmp eq i8 %31, 64
  br i1 %cmp9.i, label %while.cond13.i, label %while.cond39.preheader.i

while.cond13.i:                                   ; preds = %while.end.i, %while.cond13.i
  %s.0.pn.i = phi i8* [ %tmp.0.i, %while.cond13.i ], [ %s.0.i, %while.end.i ]
  %tmp.0.i = getelementptr inbounds i8* %s.0.pn.i, i64 1
  %33 = load i8* %tmp.0.i, align 1, !tbaa !45
  %idxprom14.i = zext i8 %33 to i64
  %arrayidx15.i = getelementptr inbounds [256 x i8]* @hctype, i64 0, i64 %idxprom14.i
  %34 = load i8* %arrayidx15.i, align 1, !tbaa !45
  %and17.i = and i8 %34, 1
  %tobool18.i = icmp eq i8 %and17.i, 0
  br i1 %tobool18.i, label %while.end21.i, label %while.cond13.i

while.end21.i:                                    ; preds = %while.cond13.i
  %cmp23.i = icmp eq i8 %33, 123
  br i1 %cmp23.i, label %if.then25.i, label %while.cond39.preheader.i

if.then25.i:                                      ; preds = %while.end21.i
  store i8 22, i8* %c.i, align 1, !tbaa !45
  call void @Perl_sv_catpvn_flags(%struct.sv* %call.i, i8* %c.i, i64 1, i64 2) #2
  br label %while.cond28.i

while.cond28.i:                                   ; preds = %while.cond28.i, %if.then25.i
  %tmp.0.pn.i = phi i8* [ %tmp.0.i, %if.then25.i ], [ %tmp.1.i, %while.cond28.i ]
  %tmp.1.i = getelementptr inbounds i8* %tmp.0.pn.i, i64 1
  %35 = load i8* %tmp.1.i, align 1, !tbaa !45
  %idxprom29.i = zext i8 %35 to i64
  %arrayidx30.i = getelementptr inbounds [256 x i8]* @hctype, i64 0, i64 %idxprom29.i
  %36 = load i8* %arrayidx30.i, align 1, !tbaa !45
  %and32.i = and i8 %36, 1
  %tobool33.i = icmp eq i8 %and32.i, 0
  br i1 %tobool33.i, label %while.cond39.preheader.i, label %while.cond28.i

while.cond39.preheader.i:                         ; preds = %while.cond28.i, %while.end21.i, %while.end.i
  %37 = phi i8 [ %31, %while.end.i ], [ 64, %while.end21.i ], [ %35, %while.cond28.i ]
  %s.1.ph.i = phi i8* [ %s.0.i, %while.end.i ], [ %s.0.i, %while.end21.i ], [ %tmp.1.i, %while.cond28.i ]
  %cmp40320.i = icmp ult i8* %s.1.ph.i, %add.ptr.i
  br i1 %cmp40320.i, label %while.body42.lr.ph.i, label %argspec_compile.exit

while.body42.lr.ph.i:                             ; preds = %while.cond39.preheader.i
  %arrayidx163.i = getelementptr inbounds [2 x i8]* %buf.i, i64 0, i64 1
  %sv_any191.i = getelementptr inbounds %struct.sv* %call.i, i64 0, i32 0
  %line.i = getelementptr inbounds %struct.p_state* %call, i64 0, i32 3
  %skipped_text.i = getelementptr inbounds %struct.p_state* %call, i64 0, i32 16
  %argspec_entity_decode.i = getelementptr inbounds %struct.p_state* %call, i64 0, i32 31
  %idxprom43.phi.trans.insert.i = zext i8 %37 to i64
  %arrayidx44.phi.trans.insert.i = getelementptr inbounds [256 x i8]* @hctype, i64 0, i64 %idxprom43.phi.trans.insert.i
  %.pre328.i = load i8* %arrayidx44.phi.trans.insert.i, align 1, !tbaa !45
  br label %while.body42.i

while.cond39.loopexit.i:                          ; preds = %while.cond223.i
  %cmp40.i = icmp ult i8* %s.7.i, %add.ptr.i
  br i1 %cmp40.i, label %while.body42.i, label %argspec_compile.exit

while.body42.i:                                   ; preds = %while.cond39.loopexit.i, %while.body42.lr.ph.i
  %38 = phi i8 [ %.pre328.i, %while.body42.lr.ph.i ], [ %58, %while.cond39.loopexit.i ]
  %39 = phi i8 [ %37, %while.body42.lr.ph.i ], [ %57, %while.cond39.loopexit.i ]
  %s.1321.i = phi i8* [ %s.1.ph.i, %while.body42.lr.ph.i ], [ %s.7.i, %while.cond39.loopexit.i ]
  %and46.i = and i8 %38, 2
  %tobool47.i = icmp ne i8 %and46.i, 0
  %cmp49.i = icmp eq i8 %39, 64
  %or.cond.i = or i1 %tobool47.i, %cmp49.i
  br i1 %or.cond.i, label %while.cond56.i, label %if.else120.i

while.cond56.i:                                   ; preds = %while.body42.i, %while.cond56.i
  %s.1.pn311.i = phi i8* [ %s.2.i, %while.cond56.i ], [ %s.1321.i, %while.body42.i ]
  %s.2.i = getelementptr inbounds i8* %s.1.pn311.i, i64 1
  %40 = load i8* %s.2.i, align 1, !tbaa !45
  %idxprom57.i = zext i8 %40 to i64
  %arrayidx58.i = getelementptr inbounds [256 x i8]* @hctype, i64 0, i64 %idxprom57.i
  %41 = load i8* %arrayidx58.i, align 1, !tbaa !45
  %and60.i = and i8 %41, 4
  %tobool61.i = icmp eq i8 %and60.i, 0
  br i1 %tobool61.i, label %for.cond.preheader.i, label %while.cond56.i

for.cond.preheader.i:                             ; preds = %while.cond56.i
  %sub.ptr.lhs.cast.i = ptrtoint i8* %s.2.i to i64
  %sub.ptr.rhs.cast.i = ptrtoint i8* %s.1321.i to i64
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i, %for.cond.preheader.i
  %arg_name.0318.i = phi i8** [ getelementptr inbounds ([20 x i8*]* @argname, i64 0, i64 0), %for.cond.preheader.i ], [ %incdec.ptr78.i, %for.inc.i ]
  %a.0317.i = phi i32 [ 1, %for.cond.preheader.i ], [ %inc.i, %for.inc.i ]
  %42 = load i8** %arg_name.0318.i, align 8, !tbaa !26
  %call67.i = call i32 @strncmp(i8* %42, i8* %s.1321.i, i64 %sub.ptr.sub.i) #2
  %tobool68.i = icmp eq i32 %call67.i, 0
  br i1 %tobool68.i, label %land.lhs.true.i, label %for.inc.i

land.lhs.true.i:                                  ; preds = %for.body.i
  %arrayidx72.i = getelementptr inbounds i8* %42, i64 %sub.ptr.sub.i
  %43 = load i8* %arrayidx72.i, align 1, !tbaa !45
  %cmp74.i = icmp eq i8 %43, 0
  br i1 %cmp74.i, label %if.then81.i, label %for.inc.i

for.inc.i:                                        ; preds = %land.lhs.true.i, %for.body.i
  %inc.i = add nsw i32 %a.0317.i, 1
  %incdec.ptr78.i = getelementptr inbounds i8** %arg_name.0318.i, i64 1
  %cmp65.i = icmp slt i32 %inc.i, 21
  br i1 %cmp65.i, label %for.body.i, label %if.else.i

if.then81.i:                                      ; preds = %land.lhs.true.i
  %conv84.i = trunc i32 %a.0317.i to i8
  store i8 %conv84.i, i8* %c83.i, align 1, !tbaa !45
  call void @Perl_sv_catpvn_flags(%struct.sv* %call.i, i8* %c83.i, i64 1, i64 2) #2
  %a.0.off.i = add i32 %a.0317.i, -17
  %44 = icmp ult i32 %a.0.off.i, 2
  br i1 %44, label %if.then90.i, label %if.end95.i

if.then90.i:                                      ; preds = %if.then81.i
  %45 = load i64* %line.i, align 8, !tbaa !63
  %tobool91.i = icmp eq i64 %45, 0
  br i1 %tobool91.i, label %if.then92.i, label %if.end95.i

if.then92.i:                                      ; preds = %if.then90.i
  store i64 1, i64* %line.i, align 8, !tbaa !63
  br label %if.end95.i

if.end95.i:                                       ; preds = %if.then92.i, %if.then90.i, %if.then81.i
  switch i32 %a.0317.i, label %while.cond178.i [
    i32 13, label %if.then98.i
    i32 11, label %if.then113.i
    i32 8, label %if.then113.i
    i32 7, label %if.then113.i
  ]

if.then98.i:                                      ; preds = %if.end95.i
  %46 = load %struct.sv** %skipped_text.i, align 8, !tbaa !15
  %tobool99.i = icmp eq %struct.sv* %46, null
  br i1 %tobool99.i, label %if.then100.i, label %while.cond178.i

if.then100.i:                                     ; preds = %if.then98.i
  %call101.i = call %struct.sv* @Perl_newSVpvn(i8* getelementptr inbounds ([1 x i8]* @.str63, i64 0, i64 0), i64 0) #2
  store %struct.sv* %call101.i, %struct.sv** %skipped_text.i, align 8, !tbaa !15
  br label %while.cond178.i

if.then113.i:                                     ; preds = %if.end95.i, %if.end95.i, %if.end95.i
  %47 = load i8* %argspec_entity_decode.i, align 1, !tbaa !65
  %inc114.i = add i8 %47, 1
  store i8 %inc114.i, i8* %argspec_entity_decode.i, align 1, !tbaa !65
  br label %while.cond178.i

if.else.i:                                        ; preds = %for.inc.i
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([40 x i8]* @.str65, i64 0, i64 0), i64 %sub.ptr.sub.i, i8* %s.1321.i) #2
  br label %while.cond178.i

if.else120.i:                                     ; preds = %while.body42.i
  switch i8 %39, label %if.else175.i [
    i8 34, label %while.cond131.i
    i8 39, label %while.cond131.i
  ]

while.cond131.i:                                  ; preds = %if.else120.i, %if.else120.i, %land.lhs.true134.i
  %s.1.pn.i = phi i8* [ %s.3.i, %land.lhs.true134.i ], [ %s.1321.i, %if.else120.i ], [ %s.1321.i, %if.else120.i ]
  %s.3.i = getelementptr inbounds i8* %s.1.pn.i, i64 1
  %cmp132.i = icmp ult i8* %s.3.i, %add.ptr.i
  %48 = load i8* %s.3.i, align 1, !tbaa !45
  br i1 %cmp132.i, label %land.lhs.true134.i, label %while.end144.i

land.lhs.true134.i:                               ; preds = %while.cond131.i
  %cmp140.i = icmp ne i8 %48, 92
  %not.cmp137.i = icmp ne i8 %48, %39
  %.cmp140.i = and i1 %cmp140.i, %not.cmp137.i
  br i1 %.cmp140.i, label %while.cond131.i, label %while.end144.i

while.end144.i:                                   ; preds = %land.lhs.true134.i, %while.cond131.i
  %cmp147.i = icmp eq i8 %48, %39
  br i1 %cmp147.i, label %if.then149.i, label %if.else167.i

if.then149.i:                                     ; preds = %while.end144.i
  %sub.ptr.lhs.cast152.i = ptrtoint i8* %s.3.i to i64
  %sub.ptr.rhs.cast153.i = ptrtoint i8* %s.1321.i to i64
  %sub.ptr.sub154.i = sub i64 %sub.ptr.lhs.cast152.i, %sub.ptr.rhs.cast153.i
  %sub.i = add nsw i64 %sub.ptr.sub154.i, 4294967295
  %conv155.i = trunc i64 %sub.i to i32
  %cmp157.i = icmp sgt i32 %conv155.i, 255
  br i1 %cmp157.i, label %if.then159.i, label %if.end160.i

if.then159.i:                                     ; preds = %if.then149.i
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([51 x i8]* @.str66, i64 0, i64 0)) #2
  br label %if.end160.i

if.end160.i:                                      ; preds = %if.then159.i, %if.then149.i
  store i8 21, i8* %22, align 1, !tbaa !45
  %conv162.i = trunc i64 %sub.i to i8
  store i8 %conv162.i, i8* %arrayidx163.i, align 1, !tbaa !45
  call void @Perl_sv_catpvn_flags(%struct.sv* %call.i, i8* %22, i64 2, i64 2) #2
  %add.ptr164.i = getelementptr inbounds i8* %s.1321.i, i64 1
  %sext.i = shl i64 %sub.i, 32
  %conv165.i = ashr exact i64 %sext.i, 32
  call void @Perl_sv_catpvn_flags(%struct.sv* %call.i, i8* %add.ptr164.i, i64 %conv165.i, i64 2) #2
  %incdec.ptr166.i = getelementptr inbounds i8* %s.1.pn.i, i64 2
  br label %while.cond178.i

if.else167.i:                                     ; preds = %while.end144.i
  %cmp169.i = icmp eq i8 %48, 92
  br i1 %cmp169.i, label %if.then171.i, label %if.else172.i

if.then171.i:                                     ; preds = %if.else167.i
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([49 x i8]* @.str67, i64 0, i64 0)) #2
  br label %while.cond178.i

if.else172.i:                                     ; preds = %if.else167.i
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([39 x i8]* @.str68, i64 0, i64 0)) #2
  br label %while.cond178.i

if.else175.i:                                     ; preds = %if.else120.i
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([17 x i8]* @.str69, i64 0, i64 0), i8* %s.1321.i) #2
  br label %while.cond178.i

while.cond178.i:                                  ; preds = %if.else175.i, %if.else172.i, %if.then171.i, %if.end160.i, %if.else.i, %if.then113.i, %if.then100.i, %if.then98.i, %if.end95.i, %while.cond178.i
  %s.4.i = phi i8* [ %incdec.ptr185.i, %while.cond178.i ], [ %s.1321.i, %if.else175.i ], [ %s.3.i, %if.else172.i ], [ %s.3.i, %if.then171.i ], [ %incdec.ptr166.i, %if.end160.i ], [ %s.2.i, %if.else.i ], [ %s.2.i, %if.then113.i ], [ %s.2.i, %if.then100.i ], [ %s.2.i, %if.then98.i ], [ %s.2.i, %if.end95.i ]
  %49 = load i8* %s.4.i, align 1, !tbaa !45
  %idxprom179.i = zext i8 %49 to i64
  %arrayidx180.i = getelementptr inbounds [256 x i8]* @hctype, i64 0, i64 %idxprom179.i
  %50 = load i8* %arrayidx180.i, align 1, !tbaa !45
  %and182.i = and i8 %50, 1
  %tobool183.i = icmp eq i8 %and182.i, 0
  %incdec.ptr185.i = getelementptr inbounds i8* %s.4.i, i64 1
  br i1 %tobool183.i, label %while.end186.i, label %while.cond178.i

while.end186.i:                                   ; preds = %while.cond178.i
  %cmp188.i = icmp eq i8 %49, 125
  br i1 %cmp188.i, label %land.lhs.true190.i, label %if.end212.i

land.lhs.true190.i:                               ; preds = %while.end186.i
  %51 = load i8** %sv_any191.i, align 8, !tbaa !7
  %xpv_pv192.i = bitcast i8* %51 to i8**
  %52 = load i8** %xpv_pv192.i, align 8, !tbaa !44
  %53 = load i8* %52, align 1, !tbaa !45
  %cmp195.i = icmp eq i8 %53, 22
  br i1 %cmp195.i, label %while.cond199.i, label %if.end212.i

while.cond199.i:                                  ; preds = %land.lhs.true190.i, %while.cond199.i
  %s.4.pn.i = phi i8* [ %s.5.i, %while.cond199.i ], [ %s.4.i, %land.lhs.true190.i ]
  %s.5.i = getelementptr inbounds i8* %s.4.pn.i, i64 1
  %54 = load i8* %s.5.i, align 1, !tbaa !45
  %idxprom200.i = zext i8 %54 to i64
  %arrayidx201.i = getelementptr inbounds [256 x i8]* @hctype, i64 0, i64 %idxprom200.i
  %55 = load i8* %arrayidx201.i, align 1, !tbaa !45
  %and203.i = and i8 %55, 1
  %tobool204.i = icmp eq i8 %and203.i, 0
  br i1 %tobool204.i, label %while.end207.i, label %while.cond199.i

while.end207.i:                                   ; preds = %while.cond199.i
  %cmp208.i = icmp ult i8* %s.5.i, %add.ptr.i
  br i1 %cmp208.i, label %if.then210.i, label %if.end212.i

if.then210.i:                                     ; preds = %while.end207.i
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([37 x i8]* @.str70, i64 0, i64 0), i8* %s.5.i) #2
  br label %if.end212.i

if.end212.i:                                      ; preds = %if.then210.i, %while.end207.i, %land.lhs.true190.i, %while.end186.i
  %s.6.i = phi i8* [ %s.5.i, %if.then210.i ], [ %s.5.i, %while.end207.i ], [ %s.4.i, %land.lhs.true190.i ], [ %s.4.i, %while.end186.i ]
  %cmp213.i = icmp eq i8* %s.6.i, %add.ptr.i
  br i1 %cmp213.i, label %argspec_compile.exit, label %if.end216.i

if.end216.i:                                      ; preds = %if.end212.i
  %56 = load i8* %s.6.i, align 1, !tbaa !45
  %cmp218.i = icmp eq i8 %56, 44
  br i1 %cmp218.i, label %while.cond223.i, label %if.then220.i

if.then220.i:                                     ; preds = %if.end216.i
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([35 x i8]* @.str71, i64 0, i64 0)) #2
  br label %while.cond223.i

while.cond223.i:                                  ; preds = %if.then220.i, %if.end216.i, %while.cond223.i
  %s.6.pn.i = phi i8* [ %s.7.i, %while.cond223.i ], [ %s.6.i, %if.end216.i ], [ %s.6.i, %if.then220.i ]
  %s.7.i = getelementptr inbounds i8* %s.6.pn.i, i64 1
  %57 = load i8* %s.7.i, align 1, !tbaa !45
  %idxprom224.i = zext i8 %57 to i64
  %arrayidx225.i = getelementptr inbounds [256 x i8]* @hctype, i64 0, i64 %idxprom224.i
  %58 = load i8* %arrayidx225.i, align 1, !tbaa !45
  %and227.i = and i8 %58, 1
  %tobool228.i = icmp eq i8 %and227.i, 0
  br i1 %tobool228.i, label %while.cond39.loopexit.i, label %while.cond223.i

argspec_compile.exit:                             ; preds = %while.cond39.loopexit.i, %if.end212.i, %while.cond39.preheader.i
  call void @llvm.lifetime.end(i64 8, i8* %21) #2
  call void @llvm.lifetime.end(i64 1, i8* %c.i) #2
  call void @llvm.lifetime.end(i64 1, i8* %c83.i) #2
  call void @llvm.lifetime.end(i64 2, i8* %22) #2
  store %struct.sv* %call.i, %struct.sv** %argspec, align 8, !tbaa !20
  br label %if.end48

if.end48:                                         ; preds = %argspec_compile.exit, %if.end40
  %cmp49 = icmp sgt i64 %sub.ptr.sub3, 16
  br i1 %cmp49, label %if.then50, label %if.end57

if.then50:                                        ; preds = %if.end48
  %59 = load %struct.sv** %cb, align 8, !tbaa !18
  call void @Perl_sv_free(%struct.sv* %59) #2
  store %struct.sv* null, %struct.sv** %cb, align 8, !tbaa !18
  %add53 = add nsw i64 %sub.ptr.div, 3
  %60 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !26
  %arrayidx54 = getelementptr inbounds %struct.sv** %60, i64 %add53
  %61 = load %struct.sv** %arrayidx54, align 8, !tbaa !26
  %sv_flags.i85 = getelementptr inbounds %struct.sv* %61, i64 0, i32 2
  %62 = load i64* %sv_flags.i85, align 8, !tbaa !1
  %and.i86 = and i64 %62, 524288
  %tobool.i87 = icmp eq i64 %and.i86, 0
  br i1 %tobool.i87, label %if.end11.i, label %if.then.i89

if.then.i89:                                      ; preds = %if.then50
  %sv_any.i88 = getelementptr inbounds %struct.sv* %61, i64 0, i32 0
  %63 = load i8** %sv_any.i88, align 8, !tbaa !7
  %xrv_rv.i = bitcast i8* %63 to %struct.sv**
  %64 = load %struct.sv** %xrv_rv.i, align 8, !tbaa !28
  %sv_flags1.i = getelementptr inbounds %struct.sv* %64, i64 0, i32 2
  %65 = load i64* %sv_flags1.i, align 8, !tbaa !1
  %and2.i = and i64 %65, 255
  switch i64 %and2.i, label %if.end10.i [
    i64 12, label %if.then3.i
    i64 10, label %if.then7.i
  ]

if.then3.i:                                       ; preds = %if.then.i89
  %call.i90 = call %struct.sv* @Perl_newSVsv(%struct.sv* %61) #2
  br label %check_handler.exit

if.then7.i:                                       ; preds = %if.then.i89
  store %struct.sv* %64, %struct.sv** @PL_Sv, align 8, !tbaa !26
  %tobool8.i = icmp eq %struct.sv* %64, null
  br i1 %tobool8.i, label %check_handler.exit, label %land.rhs.i

land.rhs.i:                                       ; preds = %if.then7.i
  %sv_refcnt.i = getelementptr inbounds %struct.sv* %64, i64 0, i32 1
  %66 = load i64* %sv_refcnt.i, align 8, !tbaa !73
  %inc.i91 = add i64 %66, 1
  store i64 %inc.i91, i64* %sv_refcnt.i, align 8, !tbaa !73
  br label %check_handler.exit

if.end10.i:                                       ; preds = %if.then.i89
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([49 x i8]* @.str64, i64 0, i64 0)) #2
  %.pre.i92 = load i64* %sv_flags.i85, align 8, !tbaa !1
  br label %if.end11.i

if.end11.i:                                       ; preds = %if.end10.i, %if.then50
  %67 = phi i64 [ %62, %if.then50 ], [ %.pre.i92, %if.end10.i ]
  %and13.i = and i64 %67, 118423552
  %tobool14.i = icmp eq i64 %and13.i, 0
  br i1 %tobool14.i, label %check_handler.exit, label %cond.true.i93

cond.true.i93:                                    ; preds = %if.end11.i
  %call15.i = call %struct.sv* @Perl_newSVsv(%struct.sv* %61) #2
  br label %check_handler.exit

check_handler.exit:                               ; preds = %if.then3.i, %if.then7.i, %land.rhs.i, %if.end11.i, %cond.true.i93
  %retval.0.i = phi %struct.sv* [ %call.i90, %if.then3.i ], [ %call15.i, %cond.true.i93 ], [ null, %if.end11.i ], [ null, %if.then7.i ], [ %64, %land.rhs.i ]
  store %struct.sv* %retval.0.i, %struct.sv** %cb, align 8, !tbaa !18
  br label %if.end57

if.end57:                                         ; preds = %check_handler.exit, %if.end48
  store %struct.sv** %sp.0, %struct.sv*** @PL_stack_sp, align 8, !tbaa !26
  ret void
}

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) #3

declare %struct.sv* @Perl_newRV(%struct.sv*) #1

; Function Attrs: nounwind uwtable
define void @XS_HTML__Entities_decode_entities(%struct.cv* nocapture readnone %cv) #0 {
entry:
  %0 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !26
  %1 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !26
  %2 = load i64** @PL_markstack_ptr, align 8, !tbaa !26
  %incdec.ptr = getelementptr inbounds i64* %2, i64 -1
  store i64* %incdec.ptr, i64** @PL_markstack_ptr, align 8, !tbaa !26
  %3 = load i64* %2, align 8, !tbaa !27
  %add.ptr = getelementptr inbounds %struct.sv** %1, i64 %3
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %add.ptr to i64
  %add.ptr.idx = shl nuw i64 %3, 3
  %sub.ptr.div = ashr exact i64 %add.ptr.idx, 3
  %add = add nsw i64 %sub.ptr.div, 1
  %sub.ptr.lhs.cast1 = ptrtoint %struct.sv** %0 to i64
  %sub.ptr.sub3 = sub i64 %sub.ptr.lhs.cast1, %sub.ptr.lhs.cast
  %sub.ptr.div4 = ashr exact i64 %sub.ptr.sub3, 3
  %call = tail call %struct.hv* @Perl_get_hv(i8* getelementptr inbounds ([28 x i8]* @.str22, i64 0, i64 0), i64 0) #2
  %4 = load %struct.op** @PL_op, align 8, !tbaa !26
  %op_flags = getelementptr inbounds %struct.op* %4, i64 0, i32 6
  %5 = load i8* %op_flags, align 1, !tbaa !71
  %conv = zext i8 %5 to i32
  %and = and i32 %conv, 3
  %cmp = icmp eq i32 %and, 1
  br i1 %cmp, label %cond.end24, label %cond.false

cond.false:                                       ; preds = %entry
  %cmp10 = icmp eq i32 %and, 2
  br i1 %cmp10, label %cond.end24, label %cond.false13

cond.false13:                                     ; preds = %cond.false
  %cmp17 = icmp eq i32 %and, 3
  br i1 %cmp17, label %cond.end24, label %cond.false20

cond.false20:                                     ; preds = %cond.false13
  %call21 = tail call i64 @Perl_block_gimme() #2
  %phitmp = icmp eq i64 %call21, 0
  br label %cond.end24

cond.end24:                                       ; preds = %cond.false, %cond.false13, %cond.false20, %entry
  %cond25 = phi i1 [ false, %entry ], [ true, %cond.false ], [ %phitmp, %cond.false20 ], [ false, %cond.false13 ]
  %cmp28 = icmp sgt i64 %sub.ptr.sub3, 8
  %or.cond = and i1 %cond25, %cmp28
  %.sub.ptr.div4 = select i1 %or.cond, i64 1, i64 %sub.ptr.div4
  %cmp31105 = icmp sgt i64 %.sub.ptr.div4, 0
  br i1 %cmp31105, label %for.body, label %for.end

for.body:                                         ; preds = %cond.end24, %if.end77
  %indvars.iv = phi i64 [ %indvars.iv.next, %if.end77 ], [ 0, %cond.end24 ]
  %6 = load %struct.op** @PL_op, align 8, !tbaa !26
  %op_flags33 = getelementptr inbounds %struct.op* %6, i64 0, i32 6
  %7 = load i8* %op_flags33, align 1, !tbaa !71
  %conv34 = zext i8 %7 to i32
  %and35 = and i32 %conv34, 3
  %cmp36 = icmp eq i32 %and35, 1
  br i1 %cmp36, label %cond.end59.thread101, label %cond.false39

cond.end59.thread101:                             ; preds = %for.body
  %add65102 = add nsw i64 %indvars.iv, %add
  %8 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !26
  %arrayidx103 = getelementptr inbounds %struct.sv** %8, i64 %add65102
  %9 = load %struct.sv** %arrayidx103, align 8, !tbaa !26
  br label %if.else

cond.false39:                                     ; preds = %for.body
  %10 = and i32 %conv34, 2
  %switch = icmp eq i32 %10, 0
  br i1 %switch, label %cond.end59, label %cond.end59.thread

cond.end59.thread:                                ; preds = %cond.false39
  %add6597 = add nsw i64 %indvars.iv, %add
  %11 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !26
  %arrayidx98 = getelementptr inbounds %struct.sv** %11, i64 %add6597
  %12 = load %struct.sv** %arrayidx98, align 8, !tbaa !26
  br label %if.then63

cond.end59:                                       ; preds = %cond.false39
  %call54 = tail call i64 @Perl_block_gimme() #2
  %phitmp96 = icmp eq i64 %call54, 128
  %add65 = add nsw i64 %indvars.iv, %add
  %13 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !26
  %arrayidx = getelementptr inbounds %struct.sv** %13, i64 %add65
  %14 = load %struct.sv** %arrayidx, align 8, !tbaa !26
  br i1 %phitmp96, label %if.else, label %if.then63

if.then63:                                        ; preds = %cond.end59, %cond.end59.thread
  %15 = phi %struct.sv* [ %12, %cond.end59.thread ], [ %14, %cond.end59 ]
  %add6599 = phi i64 [ %add6597, %cond.end59.thread ], [ %add65, %cond.end59 ]
  %call66 = tail call %struct.sv* @Perl_newSVsv(%struct.sv* %15) #2
  %call67 = tail call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call66) #2
  %16 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !26
  %arrayidx70 = getelementptr inbounds %struct.sv** %16, i64 %add6599
  store %struct.sv* %call67, %struct.sv** %arrayidx70, align 8, !tbaa !26
  br label %if.end77

if.else:                                          ; preds = %cond.end59, %cond.end59.thread101
  %17 = phi %struct.sv* [ %9, %cond.end59.thread101 ], [ %14, %cond.end59 ]
  %add65104 = phi i64 [ %add65102, %cond.end59.thread101 ], [ %add65, %cond.end59 ]
  %sv_flags = getelementptr inbounds %struct.sv* %17, i64 0, i32 2
  %18 = load i64* %sv_flags, align 8, !tbaa !1
  %and74 = and i64 %18, 8388608
  %tobool = icmp eq i64 %and74, 0
  br i1 %tobool, label %if.end77, label %if.then75

if.then75:                                        ; preds = %if.else
  tail call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([36 x i8]* @.str35, i64 0, i64 0)) #2
  br label %if.end77

if.end77:                                         ; preds = %if.else, %if.then75, %if.then63
  %add65100 = phi i64 [ %add65104, %if.else ], [ %add65104, %if.then75 ], [ %add6599, %if.then63 ]
  %19 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !26
  %arrayidx80 = getelementptr inbounds %struct.sv** %19, i64 %add65100
  %20 = load %struct.sv** %arrayidx80, align 8, !tbaa !26
  tail call fastcc void @decode_entities(%struct.sv* %20, %struct.hv* %call, i8 signext 0)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, %.sub.ptr.div4
  br i1 %exitcond, label %for.end, label %for.body

for.end:                                          ; preds = %if.end77, %cond.end24
  %add.ptr5.sum = sub i64 %.sub.ptr.div4, %sub.ptr.div4
  %add.ptr82 = getelementptr inbounds %struct.sv** %0, i64 %add.ptr5.sum
  store %struct.sv** %add.ptr82, %struct.sv*** @PL_stack_sp, align 8, !tbaa !26
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @decode_entities(%struct.sv* %sv, %struct.hv* %entity2char, i8 signext %allow_unterminated) #0 {
entry:
  %len = alloca i64, align 8
  %repl_len = alloca i64, align 8
  %buf = alloca [13 x i8], align 1
  %before_gap_len = alloca i64, align 8
  %after_gap_len = alloca i64, align 8
  %sv_flags = getelementptr inbounds %struct.sv* %sv, i64 0, i32 2
  %0 = load i64* %sv_flags, align 8, !tbaa !1
  %and = and i64 %0, 10223616
  %cmp = icmp eq i64 %and, 262144
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %sv_any = getelementptr inbounds %struct.sv* %sv, i64 0, i32 0
  %1 = load i8** %sv_any, align 8, !tbaa !7
  %xpv_cur = getelementptr inbounds i8* %1, i64 8
  %2 = bitcast i8* %xpv_cur to i64*
  %3 = load i64* %2, align 8, !tbaa !42
  store i64 %3, i64* %len, align 8, !tbaa !27
  %xpv_pv = bitcast i8* %1 to i8**
  %4 = load i8** %xpv_pv, align 8, !tbaa !44
  br label %cond.end

cond.false:                                       ; preds = %entry
  %call = call i8* @Perl_sv_pvn_force_flags(%struct.sv* %sv, i64* %len, i64 2) #2
  %.pre = load i64* %len, align 8, !tbaa !27
  %sv_any233.pre = getelementptr inbounds %struct.sv* %sv, i64 0, i32 0
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %sv_any233.pre-phi = phi i8** [ %sv_any233.pre, %cond.false ], [ %sv_any, %cond.true ]
  %5 = phi i64 [ %.pre, %cond.false ], [ %3, %cond.true ]
  %cond = phi i8* [ %call, %cond.false ], [ %4, %cond.true ]
  %add.ptr = getelementptr inbounds i8* %cond, i64 %5
  %tobool148 = icmp ne %struct.hv* %entity2char, null
  %tobool174 = icmp eq i8 %allow_unterminated, 0
  %arrayidx = getelementptr inbounds [13 x i8]* %buf, i64 0, i64 0
  %sub.ptr.rhs.cast109 = ptrtoint [13 x i8]* %buf to i64
  br label %while.cond.outer

while.cond.outer:                                 ; preds = %while.end281, %if.then283, %cond.end
  %ss.055.ph = phi i8* [ %cond, %cond.end ], [ %ss.056, %if.then283 ], [ %ss.056, %while.end281 ]
  %t.0.43.ph = phi i8* [ %cond, %cond.end ], [ %t.0.47, %if.then283 ], [ %t.0.47, %while.end281 ]
  %add.ptr41.ph = phi i8* [ %add.ptr, %cond.end ], [ %add.ptr39, %if.then283 ], [ %add.ptr39, %while.end281 ]
  %high_surrogate.0.ph = phi i32 [ 0, %cond.end ], [ %high_surrogate.2., %if.then283 ], [ %high_surrogate.2., %while.end281 ]
  br label %while.cond.outer81

while.cond.outer81:                               ; preds = %while.cond286.preheader, %while.body289, %while.cond.outer
  %ss.055.ph82 = phi i8* [ %ss.055.ph, %while.cond.outer ], [ %ss.05059.ph, %while.body289 ], [ %ss.05059.ph, %while.cond286.preheader ]
  %t.0.43.ph83 = phi i8* [ %t.0.43.ph, %while.cond.outer ], [ %incdec.ptr3, %while.cond286.preheader ], [ %incdec.ptr291, %while.body289 ]
  %high_surrogate.0.ph84 = phi i32 [ %high_surrogate.0.ph, %while.cond.outer ], [ %high_surrogate.260.ph, %while.body289 ], [ %high_surrogate.260.ph, %while.cond286.preheader ]
  br label %while.cond

while.cond:                                       ; preds = %while.cond.outer81, %while.body
  %ss.055 = phi i8* [ %incdec.ptr, %while.body ], [ %ss.055.ph82, %while.cond.outer81 ]
  %t.0.43 = phi i8* [ %incdec.ptr3, %while.body ], [ %t.0.43.ph83, %while.cond.outer81 ]
  %cmp2 = icmp ult i8* %ss.055, %add.ptr41.ph
  br i1 %cmp2, label %while.body, label %while.end294

while.body:                                       ; preds = %while.cond
  %incdec.ptr = getelementptr inbounds i8* %ss.055, i64 1
  %6 = load i8* %ss.055, align 1, !tbaa !45
  %incdec.ptr3 = getelementptr inbounds i8* %t.0.43, i64 1
  store i8 %6, i8* %t.0.43, align 1, !tbaa !45
  %cmp4 = icmp eq i8 %6, 38
  br i1 %cmp4, label %if.end, label %while.cond

if.end:                                           ; preds = %while.body
  %7 = load i8* %incdec.ptr, align 1, !tbaa !45
  %cmp7 = icmp eq i8 %7, 35
  br i1 %cmp7, label %if.then9, label %while.cond115

if.then9:                                         ; preds = %if.end
  %incdec.ptr10 = getelementptr inbounds i8* %ss.055, i64 2
  %8 = load i8* %incdec.ptr10, align 1, !tbaa !45
  switch i8 %8, label %while.cond33.preheader [
    i8 120, label %while.cond19.preheader
    i8 88, label %while.cond19.preheader
  ]

while.cond19.preheader:                           ; preds = %if.then9, %if.then9
  %9 = load i8** @PL_hexdigit, align 8, !tbaa !26
  %sub.ptr.rhs.cast = ptrtoint i8* %9 to i64
  br label %while.cond19

while.cond33.preheader:                           ; preds = %if.then9
  %.off74100 = add i8 %8, -48
  %10 = icmp ult i8 %.off74100, 10
  br i1 %10, label %while.body40, label %while.cond286.preheader

while.cond19:                                     ; preds = %while.cond19.preheader, %if.end25
  %ss.054 = phi i8* [ %storemerge, %if.end25 ], [ %incdec.ptr10, %while.cond19.preheader ]
  %ok.0 = phi i32 [ 1, %if.end25 ], [ 0, %while.cond19.preheader ]
  %prev.0 = phi i64 [ %or, %if.end25 ], [ 0, %while.cond19.preheader ]
  %storemerge = getelementptr inbounds i8* %ss.054, i64 1
  %11 = load i8* %storemerge, align 1, !tbaa !45
  %tobool = icmp eq i8 %11, 0
  br i1 %tobool, label %if.end51, label %while.body20

while.body20:                                     ; preds = %while.cond19
  %conv21 = sext i8 %11 to i32
  %call22 = call i8* @strchr(i8* %9, i32 %conv21) #2
  %tobool23 = icmp eq i8* %call22, null
  br i1 %tobool23, label %if.end51, label %if.end25

if.end25:                                         ; preds = %while.body20
  %shl = shl i64 %prev.0, 4
  %sub.ptr.lhs.cast = ptrtoint i8* %call22 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %and26 = and i64 %sub.ptr.sub, 15
  %or = or i64 %and26, %shl
  %tobool27 = icmp eq i64 %prev.0, 0
  %cmp28 = icmp ugt i64 %or, %prev.0
  %or.cond4 = or i1 %tobool27, %cmp28
  br i1 %or.cond4, label %while.cond19, label %while.cond286.preheader

while.cond33:                                     ; preds = %while.body40
  %12 = load i8* %incdec.ptr49, align 1, !tbaa !45
  %.off74 = add i8 %12, -48
  %13 = icmp ult i8 %.off74, 10
  br i1 %13, label %while.body40, label %if.then53

while.body40:                                     ; preds = %while.cond33.preheader, %while.cond33
  %14 = phi i8 [ %12, %while.cond33 ], [ %8, %while.cond33.preheader ]
  %prev.1102 = phi i64 [ %add, %while.cond33 ], [ 0, %while.cond33.preheader ]
  %ss.053101 = phi i8* [ %incdec.ptr49, %while.cond33 ], [ %incdec.ptr10, %while.cond33.preheader ]
  %conv34 = sext i8 %14 to i64
  %mul = mul i64 %prev.1102, 10
  %sub = add i64 %mul, -48
  %add = add i64 %sub, %conv34
  %tobool43 = icmp ne i64 %prev.1102, 0
  %cmp45 = icmp ult i64 %add, %prev.1102
  %or.cond6 = and i1 %tobool43, %cmp45
  %incdec.ptr49 = getelementptr inbounds i8* %ss.053101, i64 1
  br i1 %or.cond6, label %while.cond286.preheader, label %while.cond33

while.cond286.preheader:                          ; preds = %while.cond178, %if.end25, %while.body40, %while.cond33.preheader, %if.end210, %if.end51, %if.else173, %while.end144
  %high_surrogate.260.ph = phi i32 [ 0, %while.end144 ], [ 0, %if.else173 ], [ %high_surrogate.0.ph84, %if.end51 ], [ 0, %if.end210 ], [ %high_surrogate.0.ph84, %while.cond33.preheader ], [ %high_surrogate.0.ph84, %while.body40 ], [ %high_surrogate.0.ph84, %if.end25 ], [ 0, %while.cond178 ]
  %ss.05059.ph = phi i8* [ %ss.051, %while.end144 ], [ %ss.051, %if.else173 ], [ %storemerge, %if.end51 ], [ %ss.050, %if.end210 ], [ %incdec.ptr10, %while.cond33.preheader ], [ %ss.053101, %while.body40 ], [ %storemerge, %if.end25 ], [ %ss.051, %while.cond178 ]
  %cmp287105 = icmp ult i8* %incdec.ptr, %ss.05059.ph
  br i1 %cmp287105, label %while.body289, label %while.cond.outer81

if.end51:                                         ; preds = %while.body20, %while.cond19
  %tobool52 = icmp eq i32 %ok.0, 0
  br i1 %tobool52, label %while.cond286.preheader, label %if.then53

if.then53:                                        ; preds = %if.end51, %while.cond33
  %num.2133 = phi i64 [ %add, %while.cond33 ], [ %prev.0, %if.end51 ]
  %ss.052132 = phi i8* [ %incdec.ptr49, %while.cond33 ], [ %storemerge, %if.end51 ]
  %15 = load i64* %sv_flags, align 8, !tbaa !1
  %and55 = and i64 %15, 536870912
  %tobool56 = icmp eq i64 %and55, 0
  %cmp58 = icmp ult i64 %num.2133, 256
  %or.cond = and i1 %tobool56, %cmp58
  br i1 %or.cond, label %if.then60, label %if.else62

if.then60:                                        ; preds = %if.then53
  %conv61 = trunc i64 %num.2133 to i8
  store i8 %conv61, i8* %arrayidx, align 1, !tbaa !45
  store i64 1, i64* %repl_len, align 8, !tbaa !27
  br label %if.then212

if.else62:                                        ; preds = %if.then53
  %and65 = and i64 %num.2133, 4294966272
  switch i64 %and65, label %if.else87 [
    i64 56320, label %if.then68
    i64 55296, label %if.then85
  ]

if.then68:                                        ; preds = %if.else62
  %cmp69 = icmp eq i32 %high_surrogate.0.ph84, 0
  br i1 %cmp69, label %if.end103, label %if.then71

if.then71:                                        ; preds = %if.then68
  %add.ptr72 = getelementptr inbounds i8* %t.0.43, i64 -2
  %sub73 = shl i32 %high_surrogate.0.ph84, 10
  %shl74 = add i32 %sub73, -56623104
  %conv75 = sext i32 %shl74 to i64
  %add77 = add i64 %conv75, 9216
  %add78 = add i64 %add77, %num.2133
  br label %if.end103

if.then85:                                        ; preds = %if.else62
  %conv86 = trunc i64 %num.2133 to i32
  br label %if.end103

if.else87:                                        ; preds = %if.else62
  %num.2.off = add i64 %num.2133, -64976
  %16 = icmp ult i64 %num.2.off, 32
  br i1 %16, label %if.then100, label %lor.lhs.false93

lor.lhs.false93:                                  ; preds = %if.else87
  %and94 = and i64 %num.2133, 65534
  %cmp95 = icmp eq i64 %and94, 65534
  %cmp98 = icmp ugt i64 %num.2133, 1114111
  %or.cond304 = or i1 %cmp95, %cmp98
  br i1 %or.cond304, label %if.then100, label %if.end103

if.then100:                                       ; preds = %if.else87, %lor.lhs.false93
  br label %if.end103

if.end103:                                        ; preds = %if.then68, %if.then85, %lor.lhs.false93, %if.then100, %if.then71
  %t.0.46 = phi i8* [ %add.ptr72, %if.then71 ], [ %incdec.ptr3, %if.then85 ], [ %incdec.ptr3, %if.then100 ], [ %incdec.ptr3, %lor.lhs.false93 ], [ %incdec.ptr3, %if.then68 ]
  %num.3 = phi i64 [ %add78, %if.then71 ], [ 65533, %if.then85 ], [ 65533, %if.then100 ], [ %num.2133, %lor.lhs.false93 ], [ 65533, %if.then68 ]
  %high_surrogate.1 = phi i32 [ 0, %if.then71 ], [ %conv86, %if.then85 ], [ 0, %if.then100 ], [ 0, %lor.lhs.false93 ], [ 0, %if.then68 ]
  %call105 = call i8* @Perl_uvuni_to_utf8(i8* %arrayidx, i64 %num.3) #2
  %sub.ptr.lhs.cast108 = ptrtoint i8* %call105 to i64
  %sub.ptr.sub110 = sub i64 %sub.ptr.lhs.cast108, %sub.ptr.rhs.cast109
  store i64 %sub.ptr.sub110, i64* %repl_len, align 8, !tbaa !27
  br label %if.then212

while.cond115:                                    ; preds = %if.end, %while.body142
  %17 = phi i8 [ %.pre128, %while.body142 ], [ %7, %if.end ]
  %ss.051 = phi i8* [ %incdec.ptr143, %while.body142 ], [ %incdec.ptr, %if.end ]
  %.off = add i8 %17, -65
  %18 = icmp ult i8 %.off, 26
  %.off72 = add i8 %17, -97
  %19 = icmp ult i8 %.off72, 26
  %or.cond77 = or i1 %18, %19
  br i1 %or.cond77, label %while.body142, label %lor.lhs.false131

lor.lhs.false131:                                 ; preds = %while.cond115
  %.off73 = add i8 %17, -48
  %20 = icmp ult i8 %.off73, 10
  %cmp140 = icmp eq i8 %17, 95
  %or.cond71 = or i1 %20, %cmp140
  br i1 %or.cond71, label %while.body142, label %while.end144

while.body142:                                    ; preds = %lor.lhs.false131, %while.cond115
  %incdec.ptr143 = getelementptr inbounds i8* %ss.051, i64 1
  %.pre128 = load i8* %incdec.ptr143, align 1, !tbaa !45
  br label %while.cond115

while.end144:                                     ; preds = %lor.lhs.false131
  %cmp145 = icmp ne i8* %incdec.ptr, %ss.051
  %or.cond307 = and i1 %cmp145, %tobool148
  br i1 %or.cond307, label %if.then149, label %while.cond286.preheader

if.then149:                                       ; preds = %while.end144
  %sub.ptr.lhs.cast151 = ptrtoint i8* %ss.051 to i64
  %sub.ptr.rhs.cast152 = ptrtoint i8* %incdec.ptr to i64
  %sub.ptr.sub153 = sub i64 %sub.ptr.lhs.cast151, %sub.ptr.rhs.cast152
  %call154 = call %struct.sv** @Perl_hv_fetch(%struct.hv* %entity2char, i8* %incdec.ptr, i64 %sub.ptr.sub153, i64 0) #2
  %tobool155 = icmp eq %struct.sv** %call154, null
  br i1 %tobool155, label %if.else173, label %if.then156

if.then156:                                       ; preds = %if.then149
  %21 = load %struct.sv** %call154, align 8, !tbaa !26
  %sv_flags157 = getelementptr inbounds %struct.sv* %21, i64 0, i32 2
  %22 = load i64* %sv_flags157, align 8, !tbaa !1
  %and158 = and i64 %22, 262144
  %cmp159 = icmp eq i64 %and158, 0
  br i1 %cmp159, label %cond.false166, label %cond.true161

cond.true161:                                     ; preds = %if.then156
  %sv_any162 = getelementptr inbounds %struct.sv* %21, i64 0, i32 0
  %23 = load i8** %sv_any162, align 8, !tbaa !7
  %xpv_cur163 = getelementptr inbounds i8* %23, i64 8
  %24 = bitcast i8* %xpv_cur163 to i64*
  %25 = load i64* %24, align 8, !tbaa !42
  store i64 %25, i64* %repl_len, align 8, !tbaa !27
  %xpv_pv165 = bitcast i8* %23 to i8**
  %26 = load i8** %xpv_pv165, align 8, !tbaa !44
  br label %if.end210

cond.false166:                                    ; preds = %if.then156
  %call167 = call i8* @Perl_sv_2pv_flags(%struct.sv* %21, i64* %repl_len, i64 2) #2
  br label %if.end210

if.else173:                                       ; preds = %if.then149
  br i1 %tobool174, label %while.cond286.preheader, label %while.cond178

while.cond178:                                    ; preds = %if.else173, %while.body181
  %.pn = phi i8* [ %ss.0, %while.body181 ], [ %ss.051, %if.else173 ]
  %ss.0 = getelementptr inbounds i8* %.pn, i64 -1
  %cmp179 = icmp ugt i8* %ss.0, %incdec.ptr
  br i1 %cmp179, label %while.body181, label %while.cond286.preheader

while.body181:                                    ; preds = %while.cond178
  %sub.ptr.lhs.cast182 = ptrtoint i8* %ss.0 to i64
  %sub.ptr.sub184 = sub i64 %sub.ptr.lhs.cast182, %sub.ptr.rhs.cast152
  %call185 = call %struct.sv** @Perl_hv_fetch(%struct.hv* %entity2char, i8* %incdec.ptr, i64 %sub.ptr.sub184, i64 0) #2
  %tobool186 = icmp eq %struct.sv** %call185, null
  br i1 %tobool186, label %while.cond178, label %if.then187

if.then187:                                       ; preds = %while.body181
  %27 = load %struct.sv** %call185, align 8, !tbaa !26
  %sv_flags188 = getelementptr inbounds %struct.sv* %27, i64 0, i32 2
  %28 = load i64* %sv_flags188, align 8, !tbaa !1
  %and189 = and i64 %28, 262144
  %cmp190 = icmp eq i64 %and189, 0
  br i1 %cmp190, label %cond.false197, label %cond.true192

cond.true192:                                     ; preds = %if.then187
  %sv_any193 = getelementptr inbounds %struct.sv* %27, i64 0, i32 0
  %29 = load i8** %sv_any193, align 8, !tbaa !7
  %xpv_cur194 = getelementptr inbounds i8* %29, i64 8
  %30 = bitcast i8* %xpv_cur194 to i64*
  %31 = load i64* %30, align 8, !tbaa !42
  store i64 %31, i64* %repl_len, align 8, !tbaa !27
  %xpv_pv196 = bitcast i8* %29 to i8**
  %32 = load i8** %xpv_pv196, align 8, !tbaa !44
  br label %if.end210

cond.false197:                                    ; preds = %if.then187
  %call198 = call i8* @Perl_sv_2pv_flags(%struct.sv* %27, i64* %repl_len, i64 2) #2
  br label %if.end210

if.end210:                                        ; preds = %cond.true192, %cond.false197, %cond.true161, %cond.false166
  %.pn75.in = phi %struct.sv** [ %call154, %cond.false166 ], [ %call154, %cond.true161 ], [ %call185, %cond.false197 ], [ %call185, %cond.true192 ]
  %ss.050 = phi i8* [ %ss.051, %cond.false166 ], [ %ss.051, %cond.true161 ], [ %ss.0, %cond.false197 ], [ %ss.0, %cond.true192 ]
  %repl.1 = phi i8* [ %call167, %cond.false166 ], [ %26, %cond.true161 ], [ %call198, %cond.false197 ], [ %32, %cond.true192 ]
  %tobool211 = icmp eq i8* %repl.1, null
  br i1 %tobool211, label %while.cond286.preheader, label %if.then212.loopexit

if.then212.loopexit:                              ; preds = %if.end210
  %.pn75 = load %struct.sv** %.pn75.in, align 8
  %.sink.in = getelementptr inbounds %struct.sv* %.pn75, i64 0, i32 2
  %.sink = load i64* %.sink.in, align 8
  %conv172 = and i64 %.sink, 536870912
  %phitmp = icmp ne i64 %conv172, 0
  br label %if.then212

if.then212:                                       ; preds = %if.then212.loopexit, %if.end103, %if.then60
  %repl.170 = phi i8* [ %arrayidx, %if.then60 ], [ %arrayidx, %if.end103 ], [ %repl.1, %if.then212.loopexit ]
  %repl_utf8.269 = phi i1 [ false, %if.then60 ], [ true, %if.end103 ], [ %phitmp, %if.then212.loopexit ]
  %high_surrogate.268 = phi i32 [ %high_surrogate.0.ph84, %if.then60 ], [ %high_surrogate.1, %if.end103 ], [ 0, %if.then212.loopexit ]
  %t.0.4567 = phi i8* [ %incdec.ptr3, %if.then60 ], [ %t.0.46, %if.end103 ], [ %incdec.ptr3, %if.then212.loopexit ]
  %ss.05066 = phi i8* [ %ss.052132, %if.then60 ], [ %ss.052132, %if.end103 ], [ %ss.050, %if.then212.loopexit ]
  %33 = load i8* %ss.05066, align 1, !tbaa !45
  %cmp215 = icmp eq i8 %33, 59
  %incdec.ptr218 = getelementptr inbounds i8* %ss.05066, i64 1
  %incdec.ptr218.ss.05066 = select i1 %cmp215, i8* %incdec.ptr218, i8* %ss.05066
  %incdec.ptr220 = getelementptr inbounds i8* %t.0.4567, i64 -1
  %34 = load i8* %incdec.ptr218.ss.05066, align 1, !tbaa !45
  %cmp222 = icmp eq i8 %34, 38
  %high_surrogate.2. = select i1 %cmp222, i32 %high_surrogate.268, i32 0
  %35 = load i64* %sv_flags, align 8, !tbaa !1
  %and227 = and i64 %35, 536870912
  %tobool228 = icmp eq i64 %and227, 0
  %or.cond308 = and i1 %tobool228, %repl_utf8.269
  br i1 %or.cond308, label %if.then231, label %if.else257

if.then231:                                       ; preds = %if.then212
  %36 = load i8** %sv_any233.pre-phi, align 8, !tbaa !7
  %xpv_pv234 = bitcast i8* %36 to i8**
  %37 = load i8** %xpv_pv234, align 8, !tbaa !44
  %sub.ptr.lhs.cast235 = ptrtoint i8* %incdec.ptr220 to i64
  %sub.ptr.rhs.cast236 = ptrtoint i8* %37 to i64
  %sub.ptr.sub237 = sub i64 %sub.ptr.lhs.cast235, %sub.ptr.rhs.cast236
  store i64 %sub.ptr.sub237, i64* %before_gap_len, align 8, !tbaa !27
  %call241 = call i8* @Perl_bytes_to_utf8(i8* %37, i64* %before_gap_len) #2
  %sub.ptr.lhs.cast243 = ptrtoint i8* %add.ptr41.ph to i64
  %sub.ptr.rhs.cast244 = ptrtoint i8* %incdec.ptr218.ss.05066 to i64
  %sub.ptr.sub245 = sub i64 %sub.ptr.lhs.cast243, %sub.ptr.rhs.cast244
  store i64 %sub.ptr.sub245, i64* %after_gap_len, align 8, !tbaa !27
  %call247 = call i8* @Perl_bytes_to_utf8(i8* %incdec.ptr218.ss.05066, i64* %after_gap_len) #2
  %38 = load i64* %before_gap_len, align 8, !tbaa !27
  call void @Perl_sv_setpvn(%struct.sv* %sv, i8* %call241, i64 %38) #2
  %39 = load i64* %after_gap_len, align 8, !tbaa !27
  call void @Perl_sv_catpvn_flags(%struct.sv* %sv, i8* %call247, i64 %39, i64 2) #2
  %40 = load i64* %sv_flags, align 8, !tbaa !1
  %or249 = or i64 %40, 536870912
  store i64 %or249, i64* %sv_flags, align 8, !tbaa !1
  call void @Perl_safesysfree(i8* %call241) #2
  call void @Perl_safesysfree(i8* %call247) #2
  %41 = load i8** %sv_any233.pre-phi, align 8, !tbaa !7
  %xpv_pv251 = bitcast i8* %41 to i8**
  %42 = load i8** %xpv_pv251, align 8, !tbaa !44
  %43 = load i64* %before_gap_len, align 8, !tbaa !27
  %add.ptr252 = getelementptr inbounds i8* %42, i64 %43
  %44 = load i64* %after_gap_len, align 8, !tbaa !27
  %add.ptr255.sum = add i64 %44, %43
  %add.ptr256 = getelementptr inbounds i8* %42, i64 %add.ptr255.sum
  br label %if.end266

if.else257:                                       ; preds = %if.then212
  %or.cond309 = or i1 %tobool228, %repl_utf8.269
  br i1 %or.cond309, label %if.end266, label %if.then263

if.then263:                                       ; preds = %if.else257
  %call264 = call i8* @Perl_bytes_to_utf8(i8* %repl.170, i64* %repl_len) #2
  br label %if.end266

if.end266:                                        ; preds = %if.then263, %if.else257, %if.then231
  %ss.048 = phi i8* [ %add.ptr252, %if.then231 ], [ %incdec.ptr218.ss.05066, %if.else257 ], [ %incdec.ptr218.ss.05066, %if.then263 ]
  %t.0.42 = phi i8* [ %add.ptr252, %if.then231 ], [ %incdec.ptr220, %if.else257 ], [ %incdec.ptr220, %if.then263 ]
  %add.ptr40 = phi i8* [ %add.ptr256, %if.then231 ], [ %add.ptr41.ph, %if.else257 ], [ %add.ptr41.ph, %if.then263 ]
  %repl_allocated.0 = phi i8* [ null, %if.then231 ], [ null, %if.else257 ], [ %call264, %if.then263 ]
  %repl.2 = phi i8* [ %repl.170, %if.then231 ], [ %repl.170, %if.else257 ], [ %call264, %if.then263 ]
  %45 = load i64* %repl_len, align 8, !tbaa !27
  %add.ptr267 = getelementptr inbounds i8* %t.0.42, i64 %45
  %cmp268 = icmp ugt i8* %add.ptr267, %ss.048
  br i1 %cmp268, label %if.then270, label %while.cond276

if.then270:                                       ; preds = %if.end266
  %sub.ptr.lhs.cast271 = ptrtoint i8* %ss.048 to i64
  %sub.ptr.rhs.cast272 = ptrtoint i8* %t.0.42 to i64
  %sub.ptr.sub2731 = sub i64 %sub.ptr.rhs.cast272, %sub.ptr.lhs.cast271
  %sub274 = add i64 %45, %sub.ptr.sub2731
  %46 = load i8** %sv_any233.pre-phi, align 8, !tbaa !7
  %xpv_pv.i = bitcast i8* %46 to i8**
  %47 = load i8** %xpv_pv.i, align 8, !tbaa !44
  %sub.ptr.rhs.cast.i = ptrtoint i8* %47 to i64
  %sub.ptr.sub.i = sub i64 %sub.ptr.rhs.cast272, %sub.ptr.rhs.cast.i
  %sub.ptr.sub5.i = sub i64 %sub.ptr.lhs.cast271, %sub.ptr.rhs.cast.i
  %sub.ptr.lhs.cast8.i = ptrtoint i8* %add.ptr40 to i64
  %sub.ptr.sub10.i = sub i64 %sub.ptr.lhs.cast8.i, %sub.ptr.rhs.cast.i
  %xpv_len.i = getelementptr inbounds i8* %46, i64 16
  %48 = bitcast i8* %xpv_len.i to i64*
  %49 = load i64* %48, align 8, !tbaa !74
  %add.i = add i64 %sub274, 1
  %add12.i = add i64 %add.i, %sub.ptr.sub10.i
  %cmp.i = icmp ult i64 %49, %add12.i
  br i1 %cmp.i, label %cond.true.i, label %grow_gap.exit

cond.true.i:                                      ; preds = %if.then270
  %call.i = call i8* @Perl_sv_grow(%struct.sv* %sv, i64 %add12.i) #2
  %.pre.i = load i8** %sv_any233.pre-phi, align 8, !tbaa !7
  %xpv_pv18.phi.trans.insert.i = bitcast i8* %.pre.i to i8**
  %.pre53.i = load i8** %xpv_pv18.phi.trans.insert.i, align 8, !tbaa !44
  br label %grow_gap.exit

grow_gap.exit:                                    ; preds = %if.then270, %cond.true.i
  %50 = phi i8* [ %47, %if.then270 ], [ %.pre53.i, %cond.true.i ]
  %add.ptr.i = getelementptr inbounds i8* %50, i64 %sub.ptr.sub.i
  %add.ptr21.i = getelementptr inbounds i8* %50, i64 %sub.ptr.sub5.i
  %add.ptr21.i.sum = add i64 %sub.ptr.sub5.i, %sub274
  %add.ptr25.i = getelementptr inbounds i8* %50, i64 %add.ptr21.i.sum
  %51 = sub i64 %sub.ptr.sub10.i, %sub.ptr.sub5.i
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %add.ptr25.i, i8* %add.ptr21.i, i64 %51, i32 1, i1 false) #2
  %add.ptr24.i.sum = add i64 %sub.ptr.sub10.i, %sub274
  %add.ptr30.i = getelementptr inbounds i8* %50, i64 %add.ptr24.i.sum
  br label %while.cond276thread-pre-split

while.cond276thread-pre-split:                    ; preds = %while.body278, %grow_gap.exit
  %ss.056.ph = phi i8* [ %add.ptr25.i, %grow_gap.exit ], [ %ss.056, %while.body278 ]
  %t.0.47.ph = phi i8* [ %add.ptr.i, %grow_gap.exit ], [ %incdec.ptr280, %while.body278 ]
  %add.ptr39.ph = phi i8* [ %add.ptr30.i, %grow_gap.exit ], [ %add.ptr39, %while.body278 ]
  %repl.3.ph = phi i8* [ %repl.2, %grow_gap.exit ], [ %incdec.ptr279, %while.body278 ]
  %.pr = load i64* %repl_len, align 8, !tbaa !27
  br label %while.cond276

while.cond276:                                    ; preds = %while.cond276thread-pre-split, %if.end266
  %52 = phi i64 [ %.pr, %while.cond276thread-pre-split ], [ %45, %if.end266 ]
  %ss.056 = phi i8* [ %ss.056.ph, %while.cond276thread-pre-split ], [ %ss.048, %if.end266 ]
  %t.0.47 = phi i8* [ %t.0.47.ph, %while.cond276thread-pre-split ], [ %t.0.42, %if.end266 ]
  %add.ptr39 = phi i8* [ %add.ptr39.ph, %while.cond276thread-pre-split ], [ %add.ptr40, %if.end266 ]
  %repl.3 = phi i8* [ %repl.3.ph, %while.cond276thread-pre-split ], [ %repl.2, %if.end266 ]
  %dec = add i64 %52, -1
  store i64 %dec, i64* %repl_len, align 8, !tbaa !27
  %tobool277 = icmp eq i64 %52, 0
  br i1 %tobool277, label %while.end281, label %while.body278

while.body278:                                    ; preds = %while.cond276
  %incdec.ptr279 = getelementptr inbounds i8* %repl.3, i64 1
  %53 = load i8* %repl.3, align 1, !tbaa !45
  %incdec.ptr280 = getelementptr inbounds i8* %t.0.47, i64 1
  store i8 %53, i8* %t.0.47, align 1, !tbaa !45
  br label %while.cond276thread-pre-split

while.end281:                                     ; preds = %while.cond276
  %tobool282 = icmp eq i8* %repl_allocated.0, null
  br i1 %tobool282, label %while.cond.outer, label %if.then283

if.then283:                                       ; preds = %while.end281
  call void @Perl_safesysfree(i8* %repl_allocated.0) #2
  br label %while.cond.outer

while.body289:                                    ; preds = %while.cond286.preheader, %while.body289
  %ent_start.0107 = phi i8* [ %incdec.ptr290, %while.body289 ], [ %incdec.ptr, %while.cond286.preheader ]
  %t.0.44106 = phi i8* [ %incdec.ptr291, %while.body289 ], [ %incdec.ptr3, %while.cond286.preheader ]
  %incdec.ptr290 = getelementptr inbounds i8* %ent_start.0107, i64 1
  %54 = load i8* %ent_start.0107, align 1, !tbaa !45
  %incdec.ptr291 = getelementptr inbounds i8* %t.0.44106, i64 1
  store i8 %54, i8* %t.0.44106, align 1, !tbaa !45
  %exitcond = icmp eq i8* %incdec.ptr290, %ss.05059.ph
  br i1 %exitcond, label %while.cond.outer81, label %while.body289

while.end294:                                     ; preds = %while.cond
  store i8 0, i8* %t.0.43, align 1, !tbaa !45
  %55 = load i8** %sv_any233.pre-phi, align 8, !tbaa !7
  %xpv_pv297 = bitcast i8* %55 to i8**
  %56 = load i8** %xpv_pv297, align 8, !tbaa !44
  %sub.ptr.lhs.cast298 = ptrtoint i8* %t.0.43 to i64
  %sub.ptr.rhs.cast299 = ptrtoint i8* %56 to i64
  %sub.ptr.sub300 = sub i64 %sub.ptr.lhs.cast298, %sub.ptr.rhs.cast299
  %xpv_cur302 = getelementptr inbounds i8* %55, i64 8
  %57 = bitcast i8* %xpv_cur302 to i64*
  store i64 %sub.ptr.sub300, i64* %57, align 8, !tbaa !42
  ret void
}

; Function Attrs: nounwind uwtable
define void @XS_HTML__Entities__decode_entities(%struct.cv* nocapture readnone %cv) #0 {
entry:
  %0 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !26
  %1 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !26
  %2 = load i64** @PL_markstack_ptr, align 8, !tbaa !26
  %incdec.ptr = getelementptr inbounds i64* %2, i64 -1
  store i64* %incdec.ptr, i64** @PL_markstack_ptr, align 8, !tbaa !26
  %3 = load i64* %2, align 8, !tbaa !27
  %add.ptr = getelementptr inbounds %struct.sv** %1, i64 %3
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %add.ptr to i64
  %add.ptr.idx = shl nuw i64 %3, 3
  %sub.ptr.div = ashr exact i64 %add.ptr.idx, 3
  %add = add nsw i64 %sub.ptr.div, 1
  %sub.ptr.lhs.cast1 = ptrtoint %struct.sv** %0 to i64
  %sub.ptr.sub3 = sub i64 %sub.ptr.lhs.cast1, %sub.ptr.lhs.cast
  %cmp = icmp slt i64 %sub.ptr.sub3, 16
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([63 x i8]* @.str36, i64 0, i64 0)) #2
  %.pre = load %struct.sv*** @PL_stack_base, align 8, !tbaa !26
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %4 = phi %struct.sv** [ %.pre, %if.then ], [ %1, %entry ]
  %arrayidx = getelementptr inbounds %struct.sv** %4, i64 %add
  %5 = load %struct.sv** %arrayidx, align 8, !tbaa !26
  %add6 = add nsw i64 %sub.ptr.div, 2
  %arrayidx7 = getelementptr inbounds %struct.sv** %4, i64 %add6
  %6 = load %struct.sv** %arrayidx7, align 8, !tbaa !26
  %cmp8 = icmp sgt i64 %sub.ptr.sub3, 16
  br i1 %cmp8, label %cond.true, label %cond.end62

cond.true:                                        ; preds = %if.end
  %add9 = add nsw i64 %sub.ptr.div, 3
  %arrayidx10 = getelementptr inbounds %struct.sv** %4, i64 %add9
  %7 = load %struct.sv** %arrayidx10, align 8, !tbaa !26
  %tobool = icmp eq %struct.sv* %7, null
  br i1 %tobool, label %cond.end62, label %cond.false

cond.false:                                       ; preds = %cond.true
  %sv_flags = getelementptr inbounds %struct.sv* %7, i64 0, i32 2
  %8 = load i64* %sv_flags, align 8, !tbaa !1
  %and = and i64 %8, 262144
  %tobool14 = icmp eq i64 %and, 0
  br i1 %tobool14, label %cond.false26, label %cond.true15

cond.true15:                                      ; preds = %cond.false
  %sv_any = getelementptr inbounds %struct.sv* %7, i64 0, i32 0
  %9 = load i8** %sv_any, align 8, !tbaa !7
  %10 = bitcast i8* %9 to %struct.xpv*
  store %struct.xpv* %10, %struct.xpv** @PL_Xpv, align 8, !tbaa !26
  %tobool18 = icmp eq i8* %9, null
  br i1 %tobool18, label %land.end25, label %land.rhs

land.rhs:                                         ; preds = %cond.true15
  %xpv_cur = getelementptr inbounds i8* %9, i64 8
  %11 = bitcast i8* %xpv_cur to i64*
  %12 = load i64* %11, align 8, !tbaa !42
  %cmp19 = icmp ugt i64 %12, 1
  br i1 %cmp19, label %land.end25, label %lor.rhs

lor.rhs:                                          ; preds = %land.rhs
  %tobool21 = icmp eq i64 %12, 0
  br i1 %tobool21, label %land.end25, label %land.rhs22

land.rhs22:                                       ; preds = %lor.rhs
  %xpv_pv = bitcast i8* %9 to i8**
  %13 = load i8** %xpv_pv, align 8, !tbaa !44
  %14 = load i8* %13, align 1, !tbaa !45
  %cmp23 = icmp ne i8 %14, 48
  br label %land.end25

land.end25:                                       ; preds = %lor.rhs, %cond.true15, %land.rhs, %land.rhs22
  %15 = phi i1 [ false, %cond.true15 ], [ true, %land.rhs ], [ false, %lor.rhs ], [ %cmp23, %land.rhs22 ]
  %cond = zext i1 %15 to i8
  br label %cond.end62

cond.false26:                                     ; preds = %cond.false
  %and30 = and i64 %8, 65536
  %tobool31 = icmp eq i64 %and30, 0
  br i1 %tobool31, label %cond.false38, label %cond.true32

cond.true32:                                      ; preds = %cond.false26
  %sv_any35 = getelementptr inbounds %struct.sv* %7, i64 0, i32 0
  %16 = load i8** %sv_any35, align 8, !tbaa !7
  %xiv_iv = getelementptr inbounds i8* %16, i64 24
  %17 = bitcast i8* %xiv_iv to i64*
  %18 = load i64* %17, align 8, !tbaa !8
  %cmp36 = icmp ne i64 %18, 0
  %conv37 = zext i1 %cmp36 to i8
  br label %cond.end62

cond.false38:                                     ; preds = %cond.false26
  %and42 = and i64 %8, 131072
  %tobool43 = icmp eq i64 %and42, 0
  br i1 %tobool43, label %cond.false50, label %cond.true44

cond.true44:                                      ; preds = %cond.false38
  %sv_any47 = getelementptr inbounds %struct.sv* %7, i64 0, i32 0
  %19 = load i8** %sv_any47, align 8, !tbaa !7
  %xnv_nv = getelementptr inbounds i8* %19, i64 32
  %20 = bitcast i8* %xnv_nv to double*
  %21 = load double* %20, align 8, !tbaa !46
  %cmp48 = fcmp une double %21, 0.000000e+00
  %conv49 = zext i1 %cmp48 to i8
  br label %cond.end62

cond.false50:                                     ; preds = %cond.false38
  %call = tail call signext i8 @Perl_sv_2bool(%struct.sv* %7) #2
  br label %cond.end62

cond.end62:                                       ; preds = %cond.true, %if.end, %cond.true32, %cond.false50, %cond.true44, %land.end25
  %cond63 = phi i8 [ 0, %cond.true ], [ %cond, %land.end25 ], [ %conv37, %cond.true32 ], [ %conv49, %cond.true44 ], [ %call, %cond.false50 ], [ 0, %if.end ]
  %sv_flags65 = getelementptr inbounds %struct.sv* %6, i64 0, i32 2
  %22 = load i64* %sv_flags65, align 8, !tbaa !1
  %and66 = and i64 %22, 118423552
  %tobool67 = icmp eq i64 %and66, 0
  br i1 %tobool67, label %if.end82, label %if.then68

if.then68:                                        ; preds = %cond.end62
  %and70 = and i64 %22, 524288
  %tobool71 = icmp eq i64 %and70, 0
  br i1 %tobool71, label %if.else, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.then68
  %sv_any72 = getelementptr inbounds %struct.sv* %6, i64 0, i32 0
  %23 = load i8** %sv_any72, align 8, !tbaa !7
  %xrv_rv = bitcast i8* %23 to %struct.sv**
  %24 = load %struct.sv** %xrv_rv, align 8, !tbaa !28
  %sv_flags73 = getelementptr inbounds %struct.sv* %24, i64 0, i32 2
  %25 = load i64* %sv_flags73, align 8, !tbaa !1
  %and74 = and i64 %25, 255
  %cmp75 = icmp eq i64 %and74, 11
  br i1 %cmp75, label %if.then77, label %if.else

if.then77:                                        ; preds = %land.lhs.true
  %26 = bitcast %struct.sv* %24 to %struct.hv*
  br label %if.end82

if.else:                                          ; preds = %if.then68, %land.lhs.true
  tail call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([36 x i8]* @.str37, i64 0, i64 0)) #2
  br label %if.end82

if.end82:                                         ; preds = %cond.end62, %if.then77, %if.else
  %entities_hv.0 = phi %struct.hv* [ %26, %if.then77 ], [ undef, %if.else ], [ null, %cond.end62 ]
  %sv_flags83 = getelementptr inbounds %struct.sv* %5, i64 0, i32 2
  %27 = load i64* %sv_flags83, align 8, !tbaa !1
  %and84 = and i64 %27, 8388608
  %tobool85 = icmp eq i64 %and84, 0
  br i1 %tobool85, label %if.end87, label %if.then86

if.then86:                                        ; preds = %if.end82
  tail call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([36 x i8]* @.str35, i64 0, i64 0)) #2
  br label %if.end87

if.end87:                                         ; preds = %if.end82, %if.then86
  tail call fastcc void @decode_entities(%struct.sv* %5, %struct.hv* %entities_hv.0, i8 signext %cond63)
  %28 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !26
  %add.ptr90 = getelementptr inbounds %struct.sv** %28, i64 %sub.ptr.div
  store %struct.sv** %add.ptr90, %struct.sv*** @PL_stack_sp, align 8, !tbaa !26
  ret void
}

; Function Attrs: nounwind uwtable
define void @XS_HTML__Entities__probably_utf8_chunk(%struct.cv* nocapture readnone %cv) #0 {
entry:
  %len = alloca i64, align 8
  %0 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !26
  %1 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !26
  %2 = load i64** @PL_markstack_ptr, align 8, !tbaa !26
  %incdec.ptr = getelementptr inbounds i64* %2, i64 -1
  store i64* %incdec.ptr, i64** @PL_markstack_ptr, align 8, !tbaa !26
  %3 = load i64* %2, align 8, !tbaa !27
  %add.ptr = getelementptr inbounds %struct.sv** %1, i64 %3
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %add.ptr to i64
  %add.ptr.idx = shl nuw i64 %3, 3
  %sub.ptr.div = ashr exact i64 %add.ptr.idx, 3
  %add = add nsw i64 %sub.ptr.div, 1
  %sub.ptr.lhs.cast1 = ptrtoint %struct.sv** %0 to i64
  %sub.ptr.sub3 = sub i64 %sub.ptr.lhs.cast1, %sub.ptr.lhs.cast
  %cmp = icmp eq i64 %sub.ptr.sub3, 8
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([52 x i8]* @.str38, i64 0, i64 0)) #2
  %.pre = load %struct.sv*** @PL_stack_base, align 8, !tbaa !26
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %4 = phi %struct.sv** [ %1, %entry ], [ %.pre, %if.then ]
  %arrayidx = getelementptr inbounds %struct.sv** %4, i64 %add
  %5 = load %struct.sv** %arrayidx, align 8, !tbaa !26
  %call = call signext i8 @Perl_sv_utf8_downgrade(%struct.sv* %5, i8 signext 0) #2
  %sv_flags = getelementptr inbounds %struct.sv* %5, i64 0, i32 2
  %6 = load i64* %sv_flags, align 8, !tbaa !1
  %and = and i64 %6, 262144
  %cmp6 = icmp eq i64 %and, 0
  br i1 %cmp6, label %cond.false, label %cond.true

cond.true:                                        ; preds = %if.end
  %sv_any = getelementptr inbounds %struct.sv* %5, i64 0, i32 0
  %7 = load i8** %sv_any, align 8, !tbaa !7
  %xpv_cur = getelementptr inbounds i8* %7, i64 8
  %8 = bitcast i8* %xpv_cur to i64*
  %9 = load i64* %8, align 8, !tbaa !42
  store i64 %9, i64* %len, align 8, !tbaa !27
  %xpv_pv = bitcast i8* %7 to i8**
  %10 = load i8** %xpv_pv, align 8, !tbaa !44
  br label %cond.end

cond.false:                                       ; preds = %if.end
  %call8 = call i8* @Perl_sv_2pv_flags(%struct.sv* %5, i64* %len, i64 2) #2
  %.pre28 = load i64* %len, align 8, !tbaa !27
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %11 = phi i64 [ %9, %cond.true ], [ %.pre28, %cond.false ]
  %cond = phi i8* [ %10, %cond.true ], [ %call8, %cond.false ]
  %add.ptr.i = getelementptr inbounds i8* %cond, i64 %11
  br label %while.cond.i

while.cond.i:                                     ; preds = %land.rhs.i, %cond.end
  %e.0.i = phi i8* [ %add.ptr.i, %cond.end ], [ %add.ptr1.i, %land.rhs.i ]
  %cmp.i = icmp ugt i8* %e.0.i, %cond
  br i1 %cmp.i, label %land.rhs.i, label %if.end.i

land.rhs.i:                                       ; preds = %while.cond.i
  %add.ptr1.i = getelementptr inbounds i8* %e.0.i, i64 -1
  %12 = load i8* %add.ptr1.i, align 1, !tbaa !45
  %cmp2.i = icmp slt i8 %12, 0
  %cmp7.i = icmp ult i8 %12, -64
  %or.cond.i = and i1 %cmp2.i, %cmp7.i
  br i1 %or.cond.i, label %while.cond.i, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %land.rhs.i
  %.off.i = add i8 %12, 64
  %13 = icmp ult i8 %.off.i, 62
  %incdec.ptr21.e.0.i = select i1 %13, i8* %add.ptr1.i, i8* %e.0.i
  br label %if.end.i

if.end.i:                                         ; preds = %while.cond.i, %land.lhs.true.i
  %e.1.i = phi i8* [ %incdec.ptr21.e.0.i, %land.lhs.true.i ], [ %e.0.i, %while.cond.i ]
  %sub.ptr.lhs.cast.i = ptrtoint i8* %e.1.i to i64
  %sub.ptr.rhs.cast.i = ptrtoint i8* %cond to i64
  %sub.ptr.sub58.i = sub i64 %sub.ptr.rhs.cast.i, %sub.ptr.lhs.cast.i
  %sub.i = add i64 %sub.ptr.sub58.i, %11
  %tobool.i = icmp eq i64 %sub.i, 0
  br i1 %tobool.i, label %if.end28.i, label %land.lhs.true22.i

land.lhs.true22.i:                                ; preds = %if.end.i
  %14 = load i8* %e.1.i, align 1, !tbaa !45
  %idxprom.i = zext i8 %14 to i64
  %arrayidx.i = getelementptr inbounds [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom.i
  %15 = load i8* %arrayidx.i, align 1, !tbaa !45
  %conv23.i = zext i8 %15 to i64
  %cmp24.i = icmp eq i64 %conv23.i, %sub.i
  %add.ptr.e.1.i = select i1 %cmp24.i, i8* %add.ptr.i, i8* %e.1.i
  br label %if.end28.i

if.end28.i:                                       ; preds = %land.lhs.true22.i, %if.end.i
  %e.2.i = phi i8* [ %e.1.i, %if.end.i ], [ %add.ptr.e.1.i, %land.lhs.true22.i ]
  br label %while.cond.i.i

while.cond.i.i:                                   ; preds = %while.body.i.i, %if.end28.i
  %s.addr.0.i.i = phi i8* [ %cond, %if.end28.i ], [ %incdec.ptr.i.i, %while.body.i.i ]
  %cmp.i.i = icmp ult i8* %s.addr.0.i.i, %e.2.i
  br i1 %cmp.i.i, label %while.body.i.i, label %probably_utf8_chunk.exit

while.body.i.i:                                   ; preds = %while.cond.i.i
  %incdec.ptr.i.i = getelementptr inbounds i8* %s.addr.0.i.i, i64 1
  %16 = load i8* %s.addr.0.i.i, align 1, !tbaa !45
  %cmp1.i.i = icmp sgt i8 %16, -1
  br i1 %cmp1.i.i, label %while.cond.i.i, label %if.end31.i

if.end31.i:                                       ; preds = %while.body.i.i
  %sub.ptr.lhs.cast32.i = ptrtoint i8* %e.2.i to i64
  %sub.ptr.sub34.i = sub i64 %sub.ptr.lhs.cast32.i, %sub.ptr.rhs.cast.i
  %call35.i = call signext i8 @Perl_is_utf8_string(i8* %cond, i64 %sub.ptr.sub34.i) #2
  %phitmp = icmp ne i8 %call35.i, 0
  %phitmp25 = select i1 %phitmp, %struct.sv* @PL_sv_yes, %struct.sv* @PL_sv_no
  br label %probably_utf8_chunk.exit

probably_utf8_chunk.exit:                         ; preds = %while.cond.i.i, %if.end31.i
  %retval.0.i = phi %struct.sv* [ %phitmp25, %if.end31.i ], [ @PL_sv_no, %while.cond.i.i ]
  %17 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !26
  %arrayidx12 = getelementptr inbounds %struct.sv** %17, i64 %add
  store %struct.sv* %retval.0.i, %struct.sv** %arrayidx12, align 8, !tbaa !26
  %18 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !26
  %arrayidx14 = getelementptr inbounds %struct.sv** %18, i64 %add
  %19 = load %struct.sv** %arrayidx14, align 8, !tbaa !26
  %call15 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %19) #2
  %20 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !26
  %add.ptr16 = getelementptr inbounds %struct.sv** %20, i64 %add
  store %struct.sv** %add.ptr16, %struct.sv*** @PL_stack_sp, align 8, !tbaa !26
  ret void
}

declare signext i8 @Perl_sv_utf8_downgrade(%struct.sv*, i8 signext) #1

; Function Attrs: nounwind uwtable
define void @XS_HTML__Entities_UNICODE_SUPPORT(%struct.cv* nocapture readnone %cv) #0 {
entry:
  %0 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !26
  %1 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !26
  %2 = load i64** @PL_markstack_ptr, align 8, !tbaa !26
  %incdec.ptr = getelementptr inbounds i64* %2, i64 -1
  store i64* %incdec.ptr, i64** @PL_markstack_ptr, align 8, !tbaa !26
  %3 = load i64* %2, align 8, !tbaa !27
  %add.ptr = getelementptr inbounds %struct.sv** %1, i64 %3
  %add.ptr.idx = shl nuw i64 %3, 3
  %sub.ptr.div = ashr exact i64 %add.ptr.idx, 3
  %add = add i64 %sub.ptr.div, 1
  %cmp = icmp eq %struct.sv** %0, %add.ptr
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([41 x i8]* @.str39, i64 0, i64 0)) #2
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %4 = load %struct.op** @PL_op, align 8, !tbaa !26
  %op_private = getelementptr inbounds %struct.op* %4, i64 0, i32 7
  %5 = load i8* %op_private, align 1, !tbaa !75
  %and = and i8 %5, 32
  %tobool = icmp eq i8 %and, 0
  br i1 %tobool, label %cond.false, label %cond.true

cond.true:                                        ; preds = %if.end
  %op_targ = getelementptr inbounds %struct.op* %4, i64 0, i32 3
  %6 = load i64* %op_targ, align 8, !tbaa !76
  %7 = load %struct.sv*** @PL_curpad, align 8, !tbaa !26
  %arrayidx = getelementptr inbounds %struct.sv** %7, i64 %6
  %8 = load %struct.sv** %arrayidx, align 8, !tbaa !26
  br label %cond.end

cond.false:                                       ; preds = %if.end
  %call = tail call %struct.sv* @Perl_sv_newmortal() #2
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.sv* [ %8, %cond.true ], [ %call, %cond.false ]
  %9 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !26
  tail call void @Perl_sv_setiv(%struct.sv* %cond, i64 1) #2
  %sv_flags = getelementptr inbounds %struct.sv* %cond, i64 0, i32 2
  %10 = load i64* %sv_flags, align 8, !tbaa !1
  %and8 = and i64 %10, 16384
  %tobool9 = icmp eq i64 %and8, 0
  br i1 %tobool9, label %if.end12, label %if.then10

if.then10:                                        ; preds = %cond.end
  %call11 = tail call i32 @Perl_mg_set(%struct.sv* %cond) #2
  br label %if.end12

if.end12:                                         ; preds = %cond.end, %if.then10
  %incdec.ptr13 = getelementptr inbounds %struct.sv** %9, i64 %add
  store %struct.sv* %cond, %struct.sv** %incdec.ptr13, align 8, !tbaa !26
  %11 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !26
  %add.ptr15 = getelementptr inbounds %struct.sv** %11, i64 %add
  store %struct.sv** %add.ptr15, %struct.sv*** @PL_stack_sp, align 8, !tbaa !26
  ret void
}

declare void @Perl_sv_setiv(%struct.sv*, i64) #1

declare i32 @Perl_mg_set(%struct.sv*) #1

; Function Attrs: nounwind uwtable
define void @boot_HTML__Parser(%struct.cv* nocapture readnone %cv) #0 {
entry:
  %0 = load i64** @PL_markstack_ptr, align 8, !tbaa !26
  %incdec.ptr = getelementptr inbounds i64* %0, i64 -1
  store i64* %incdec.ptr, i64** @PL_markstack_ptr, align 8, !tbaa !26
  %1 = load i64* %0, align 8, !tbaa !27
  %add.ptr.idx = shl nuw i64 %1, 3
  %sub.ptr.div = ashr exact i64 %add.ptr.idx, 3
  %add = add nsw i64 %sub.ptr.div, 1
  %call = tail call %struct.cv* @Perl_newXS(i8* getelementptr inbounds ([28 x i8]* @.str41, i64 0, i64 0), void (%struct.cv*)* @XS_HTML__Parser__alloc_pstate, i8* getelementptr inbounds ([9 x i8]* @.str40, i64 0, i64 0)) #2
  %call6 = tail call %struct.cv* @Perl_newXS(i8* getelementptr inbounds ([20 x i8]* @.str42, i64 0, i64 0), void (%struct.cv*)* @XS_HTML__Parser_parse, i8* getelementptr inbounds ([9 x i8]* @.str40, i64 0, i64 0)) #2
  %call7 = tail call %struct.cv* @Perl_newXS(i8* getelementptr inbounds ([18 x i8]* @.str43, i64 0, i64 0), void (%struct.cv*)* @XS_HTML__Parser_eof, i8* getelementptr inbounds ([9 x i8]* @.str40, i64 0, i64 0)) #2
  %call8 = tail call %struct.cv* @Perl_newXS(i8* getelementptr inbounds ([32 x i8]* @.str44, i64 0, i64 0), void (%struct.cv*)* @XS_HTML__Parser_strict_comment, i8* getelementptr inbounds ([9 x i8]* @.str40, i64 0, i64 0)) #2
  %sv_any = getelementptr inbounds %struct.cv* %call8, i64 0, i32 0
  %2 = load %struct.xpvcv** %sv_any, align 8, !tbaa !66
  %3 = getelementptr inbounds %struct.xpvcv* %2, i64 0, i32 11, i32 0
  store i8* inttoptr (i64 9 to i8*), i8** %3, align 8, !tbaa !27
  %call9 = tail call %struct.cv* @Perl_newXS(i8* getelementptr inbounds ([25 x i8]* @.str45, i64 0, i64 0), void (%struct.cv*)* @XS_HTML__Parser_strict_comment, i8* getelementptr inbounds ([9 x i8]* @.str40, i64 0, i64 0)) #2
  %sv_any10 = getelementptr inbounds %struct.cv* %call9, i64 0, i32 0
  %4 = load %struct.xpvcv** %sv_any10, align 8, !tbaa !66
  %5 = getelementptr inbounds %struct.xpvcv* %4, i64 0, i32 11, i32 0
  store i8* inttoptr (i64 8 to i8*), i8** %5, align 8, !tbaa !27
  %call13 = tail call %struct.cv* @Perl_newXS(i8* getelementptr inbounds ([30 x i8]* @.str46, i64 0, i64 0), void (%struct.cv*)* @XS_HTML__Parser_strict_comment, i8* getelementptr inbounds ([9 x i8]* @.str40, i64 0, i64 0)) #2
  %sv_any14 = getelementptr inbounds %struct.cv* %call13, i64 0, i32 0
  %6 = load %struct.xpvcv** %sv_any14, align 8, !tbaa !66
  %7 = getelementptr inbounds %struct.xpvcv* %6, i64 0, i32 11, i32 0
  store i8* inttoptr (i64 5 to i8*), i8** %7, align 8, !tbaa !27
  %call17 = tail call %struct.cv* @Perl_newXS(i8* getelementptr inbounds ([29 x i8]* @.str47, i64 0, i64 0), void (%struct.cv*)* @XS_HTML__Parser_strict_comment, i8* getelementptr inbounds ([9 x i8]* @.str40, i64 0, i64 0)) #2
  %sv_any18 = getelementptr inbounds %struct.cv* %call17, i64 0, i32 0
  %8 = load %struct.xpvcv** %sv_any18, align 8, !tbaa !66
  %9 = getelementptr inbounds %struct.xpvcv* %8, i64 0, i32 11, i32 0
  store i8* inttoptr (i64 7 to i8*), i8** %9, align 8, !tbaa !27
  %call21 = tail call %struct.cv* @Perl_newXS(i8* getelementptr inbounds ([28 x i8]* @.str48, i64 0, i64 0), void (%struct.cv*)* @XS_HTML__Parser_strict_comment, i8* getelementptr inbounds ([9 x i8]* @.str40, i64 0, i64 0)) #2
  %sv_any22 = getelementptr inbounds %struct.cv* %call21, i64 0, i32 0
  %10 = load %struct.xpvcv** %sv_any22, align 8, !tbaa !66
  %11 = getelementptr inbounds %struct.xpvcv* %10, i64 0, i32 11, i32 0
  store i8* inttoptr (i64 4 to i8*), i8** %11, align 8, !tbaa !27
  %call25 = tail call %struct.cv* @Perl_newXS(i8* getelementptr inbounds ([29 x i8]* @.str49, i64 0, i64 0), void (%struct.cv*)* @XS_HTML__Parser_strict_comment, i8* getelementptr inbounds ([9 x i8]* @.str40, i64 0, i64 0)) #2
  %sv_any26 = getelementptr inbounds %struct.cv* %call25, i64 0, i32 0
  %12 = load %struct.xpvcv** %sv_any26, align 8, !tbaa !66
  %13 = getelementptr inbounds %struct.xpvcv* %12, i64 0, i32 11, i32 0
  store i8* inttoptr (i64 1 to i8*), i8** %13, align 8, !tbaa !27
  %call29 = tail call %struct.cv* @Perl_newXS(i8* getelementptr inbounds ([23 x i8]* @.str50, i64 0, i64 0), void (%struct.cv*)* @XS_HTML__Parser_strict_comment, i8* getelementptr inbounds ([9 x i8]* @.str40, i64 0, i64 0)) #2
  %sv_any30 = getelementptr inbounds %struct.cv* %call29, i64 0, i32 0
  %14 = load %struct.xpvcv** %sv_any30, align 8, !tbaa !66
  %15 = getelementptr inbounds %struct.xpvcv* %14, i64 0, i32 11, i32 0
  store i8* inttoptr (i64 3 to i8*), i8** %15, align 8, !tbaa !27
  %call33 = tail call %struct.cv* @Perl_newXS(i8* getelementptr inbounds ([27 x i8]* @.str51, i64 0, i64 0), void (%struct.cv*)* @XS_HTML__Parser_strict_comment, i8* getelementptr inbounds ([9 x i8]* @.str40, i64 0, i64 0)) #2
  %sv_any34 = getelementptr inbounds %struct.cv* %call33, i64 0, i32 0
  %16 = load %struct.xpvcv** %sv_any34, align 8, !tbaa !66
  %17 = getelementptr inbounds %struct.xpvcv* %16, i64 0, i32 11, i32 0
  store i8* inttoptr (i64 6 to i8*), i8** %17, align 8, !tbaa !27
  %call37 = tail call %struct.cv* @Perl_newXS(i8* getelementptr inbounds ([27 x i8]* @.str52, i64 0, i64 0), void (%struct.cv*)* @XS_HTML__Parser_strict_comment, i8* getelementptr inbounds ([9 x i8]* @.str40, i64 0, i64 0)) #2
  %sv_any38 = getelementptr inbounds %struct.cv* %call37, i64 0, i32 0
  %18 = load %struct.xpvcv** %sv_any38, align 8, !tbaa !66
  %19 = getelementptr inbounds %struct.xpvcv* %18, i64 0, i32 11, i32 0
  store i8* inttoptr (i64 2 to i8*), i8** %19, align 8, !tbaa !27
  %call41 = tail call %struct.cv* @Perl_newXS(i8* getelementptr inbounds ([24 x i8]* @.str53, i64 0, i64 0), void (%struct.cv*)* @XS_HTML__Parser_strict_comment, i8* getelementptr inbounds ([9 x i8]* @.str40, i64 0, i64 0)) #2
  %sv_any42 = getelementptr inbounds %struct.cv* %call41, i64 0, i32 0
  %20 = load %struct.xpvcv** %sv_any42, align 8, !tbaa !66
  %21 = getelementptr inbounds %struct.xpvcv* %20, i64 0, i32 11, i32 0
  store i8* inttoptr (i64 10 to i8*), i8** %21, align 8, !tbaa !27
  %call45 = tail call %struct.cv* @Perl_newXS(i8* getelementptr inbounds ([38 x i8]* @.str54, i64 0, i64 0), void (%struct.cv*)* @XS_HTML__Parser_boolean_attribute_value, i8* getelementptr inbounds ([9 x i8]* @.str40, i64 0, i64 0)) #2
  %call46 = tail call %struct.cv* @Perl_newXS(i8* getelementptr inbounds ([26 x i8]* @.str55, i64 0, i64 0), void (%struct.cv*)* @XS_HTML__Parser_ignore_tags, i8* getelementptr inbounds ([9 x i8]* @.str40, i64 0, i64 0)) #2
  %sv_any47 = getelementptr inbounds %struct.cv* %call46, i64 0, i32 0
  %22 = load %struct.xpvcv** %sv_any47, align 8, !tbaa !66
  %23 = getelementptr inbounds %struct.xpvcv* %22, i64 0, i32 11, i32 0
  store i8* inttoptr (i64 2 to i8*), i8** %23, align 8, !tbaa !27
  %call50 = tail call %struct.cv* @Perl_newXS(i8* getelementptr inbounds ([30 x i8]* @.str56, i64 0, i64 0), void (%struct.cv*)* @XS_HTML__Parser_ignore_tags, i8* getelementptr inbounds ([9 x i8]* @.str40, i64 0, i64 0)) #2
  %sv_any51 = getelementptr inbounds %struct.cv* %call50, i64 0, i32 0
  %24 = load %struct.xpvcv** %sv_any51, align 8, !tbaa !66
  %25 = getelementptr inbounds %struct.xpvcv* %24, i64 0, i32 11, i32 0
  store i8* inttoptr (i64 3 to i8*), i8** %25, align 8, !tbaa !27
  %call54 = tail call %struct.cv* @Perl_newXS(i8* getelementptr inbounds ([26 x i8]* @.str57, i64 0, i64 0), void (%struct.cv*)* @XS_HTML__Parser_ignore_tags, i8* getelementptr inbounds ([9 x i8]* @.str40, i64 0, i64 0)) #2
  %sv_any55 = getelementptr inbounds %struct.cv* %call54, i64 0, i32 0
  %26 = load %struct.xpvcv** %sv_any55, align 8, !tbaa !66
  %27 = getelementptr inbounds %struct.xpvcv* %26, i64 0, i32 11, i32 0
  store i8* inttoptr (i64 1 to i8*), i8** %27, align 8, !tbaa !27
  %call58 = tail call %struct.cv* @Perl_newXS(i8* getelementptr inbounds ([22 x i8]* @.str58, i64 0, i64 0), void (%struct.cv*)* @XS_HTML__Parser_handler, i8* getelementptr inbounds ([9 x i8]* @.str40, i64 0, i64 0)) #2
  %call59 = tail call %struct.cv* @Perl_newXS(i8* getelementptr inbounds ([32 x i8]* @.str59, i64 0, i64 0), void (%struct.cv*)* @XS_HTML__Entities_decode_entities, i8* getelementptr inbounds ([9 x i8]* @.str40, i64 0, i64 0)) #2
  %call60 = tail call %struct.cv* @Perl_newXS(i8* getelementptr inbounds ([33 x i8]* @.str60, i64 0, i64 0), void (%struct.cv*)* @XS_HTML__Entities__decode_entities, i8* getelementptr inbounds ([9 x i8]* @.str40, i64 0, i64 0)) #2
  %call61 = tail call %struct.cv* @Perl_newXS(i8* getelementptr inbounds ([37 x i8]* @.str61, i64 0, i64 0), void (%struct.cv*)* @XS_HTML__Entities__probably_utf8_chunk, i8* getelementptr inbounds ([9 x i8]* @.str40, i64 0, i64 0)) #2
  %call62 = tail call %struct.cv* @Perl_newXS(i8* getelementptr inbounds ([32 x i8]* @.str62, i64 0, i64 0), void (%struct.cv*)* @XS_HTML__Entities_UNICODE_SUPPORT, i8* getelementptr inbounds ([9 x i8]* @.str40, i64 0, i64 0)) #2
  %28 = bitcast %struct.cv* %call62 to %struct.sv*
  tail call void @Perl_sv_setpv(%struct.sv* %28, i8* getelementptr inbounds ([1 x i8]* @.str63, i64 0, i64 0)) #2
  %29 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !26
  %arrayidx = getelementptr inbounds %struct.sv** %29, i64 %add
  store %struct.sv* @PL_sv_yes, %struct.sv** %arrayidx, align 8, !tbaa !26
  %30 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !26
  %add.ptr64 = getelementptr inbounds %struct.sv** %30, i64 %add
  store %struct.sv** %add.ptr64, %struct.sv*** @PL_stack_sp, align 8, !tbaa !26
  ret void
}

declare %struct.cv* @Perl_newXS(i8*, void (%struct.cv*)*, i8*) #1

declare void @Perl_sv_setpv(%struct.sv*, i8*) #1

declare signext i8 @Perl_is_utf8_string(i8*, i64) #1

declare i8* @Perl_sv_pvn_force_flags(%struct.sv*, i64*, i64) #1

; Function Attrs: nounwind readonly
declare i8* @strchr(i8*, i32) #3

declare i8* @Perl_uvuni_to_utf8(i8*, i64) #1

declare %struct.sv** @Perl_hv_fetch(%struct.hv*, i8*, i64, i64) #1

declare i8* @Perl_bytes_to_utf8(i8*, i64*) #1

declare void @Perl_sv_setpvn(%struct.sv*, i8*, i64) #1

declare void @Perl_sv_catpvn_flags(%struct.sv*, i8*, i64, i64) #1

declare void @Perl_safesysfree(i8*) #1

declare i8* @Perl_sv_grow(%struct.sv*, i64) #1

; Function Attrs: nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #2

declare %struct.sv* @Perl_newSVpvn(i8*, i64) #1

; Function Attrs: nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) #3

; Function Attrs: nounwind uwtable
define internal fastcc i8* @parse_buf(%struct.p_state* %p_state, i8* %beg, i8* %end, i64 %utf8, %struct.sv* %self) #0 {
entry:
  %token_pos.i = alloca %struct.token_pos, align 8
  %len.i.i.i = alloca i64, align 8
  %token_buf.i.i = alloca [4 x %struct.token_pos], align 16
  %token.i.i = alloca %struct.token_pos, align 8
  %token88.i.i = alloca %struct.token_pos, align 8
  %token.i498 = alloca %struct.token_pos, align 8
  %token_buf.i499 = alloca [8 x %struct.token_pos], align 16
  %token318.i = alloca %struct.token_pos, align 8
  %tagname.i = alloca %struct.token_pos, align 8
  %token.i = alloca %struct.token_pos, align 8
  %token_buf.i = alloca [16 x %struct.token_pos], align 16
  %end_token = alloca %struct.token_pos, align 8
  %eof = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 6
  %0 = load i8* %eof, align 1, !tbaa !48
  %lnot724 = icmp eq i8 %0, 0
  br i1 %lnot724, label %while.cond1.preheader.lr.ph, label %DONE

while.cond1.preheader.lr.ph:                      ; preds = %entry
  %literal_mode = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 7
  %ms = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 17
  %ms_stack = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 18
  %sub.ptr.lhs.cast = ptrtoint i8* %end to i64
  %1 = bitcast %struct.token_pos* %tagname.i to i8*
  %2 = bitcast %struct.token_pos* %token.i to i8*
  %strict_names.i480 = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 21
  %xml_mode.i482 = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 23
  %strict_comment.i = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 20
  %beg49.i = getelementptr inbounds %struct.token_pos* %token.i, i64 0, i32 0
  %end50.i = getelementptr inbounds %struct.token_pos* %token.i, i64 0, i32 1
  %beg7.i = getelementptr inbounds %struct.token_pos* %tagname.i, i64 0, i32 0
  %end16.i = getelementptr inbounds %struct.token_pos* %tagname.i, i64 0, i32 1
  %strict_end.i = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 22
  %3 = bitcast %struct.token_pos* %token.i498 to i8*
  %4 = bitcast %struct.token_pos* %token318.i to i8*
  %5 = bitcast [8 x %struct.token_pos]* %token_buf.i499 to i8*
  %arraydecay.i509 = getelementptr inbounds [8 x %struct.token_pos]* %token_buf.i499, i64 0, i64 0
  %beg94.i = getelementptr inbounds [8 x %struct.token_pos]* %token_buf.i499, i64 0, i64 0, i32 0
  %end99.i = getelementptr inbounds [8 x %struct.token_pos]* %token_buf.i499, i64 0, i64 0, i32 1
  %beg320.i = getelementptr inbounds %struct.token_pos* %token318.i, i64 0, i32 0
  %end321.i = getelementptr inbounds %struct.token_pos* %token318.i, i64 0, i32 1
  %6 = bitcast %struct.token_pos* %token.i.i to i8*
  %7 = bitcast %struct.token_pos* %token88.i.i to i8*
  %no_dash_dash_comment_end.i.i = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 9
  %beg89.i.i = getelementptr inbounds %struct.token_pos* %token88.i.i, i64 0, i32 0
  %end101218.i.i = getelementptr inbounds %struct.token_pos* %token88.i.i, i64 0, i32 1
  %beg67.i.i = getelementptr inbounds %struct.token_pos* %token.i.i, i64 0, i32 0
  %end79.c.i.i = getelementptr inbounds %struct.token_pos* %token.i.i, i64 0, i32 1
  %arraydecay.i.i = getelementptr inbounds [4 x %struct.token_pos]* %token_buf.i.i, i64 0, i64 0
  %marked_sections.i.i = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 19
  %tobool35.i.i = icmp eq i64 %utf8, 0
  %8 = bitcast i64* %len.i.i.i to i8*
  %beg36.i = getelementptr inbounds %struct.token_pos* %token.i498, i64 0, i32 0
  %end37.i = getelementptr inbounds %struct.token_pos* %token.i498, i64 0, i32 1
  %9 = bitcast %struct.token_pos* %token_pos.i to i8*
  %beg1.i = getelementptr inbounds %struct.token_pos* %token_pos.i, i64 0, i32 0
  %end4.i = getelementptr inbounds %struct.token_pos* %token_pos.i, i64 0, i32 1
  %10 = bitcast [16 x %struct.token_pos]* %token_buf.i to i8*
  %arraydecay.i = getelementptr inbounds [16 x %struct.token_pos]* %token_buf.i, i64 0, i64 0
  %beg18.i = getelementptr inbounds [16 x %struct.token_pos]* %token_buf.i, i64 0, i64 0, i32 0
  %end22.i = getelementptr inbounds [16 x %struct.token_pos]* %token_buf.i, i64 0, i64 0, i32 1
  %is_cdata338.i = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 8
  %closing_plaintext = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 27
  %beg96 = getelementptr inbounds %struct.token_pos* %end_token, i64 0, i32 0
  %end97 = getelementptr inbounds %struct.token_pos* %end_token, i64 0, i32 1
  br label %while.cond1.preheader

while.cond1.preheader:                            ; preds = %while.cond1.preheader.lr.ph, %while.cond.backedge
  %s.0726 = phi i8* [ %beg, %while.cond1.preheader.lr.ph ], [ %s.0.be, %while.cond.backedge ]
  %t.0725 = phi i8* [ %beg, %while.cond1.preheader.lr.ph ], [ %t.0.be, %while.cond.backedge ]
  %11 = load i8** %literal_mode, align 8, !tbaa !49
  %tobool2676684 = icmp eq i8* %11, null
  br i1 %tobool2676684, label %while.cond118.outer, label %while.body3

while.body3:                                      ; preds = %while.cond1.preheader, %while.cond1.backedge
  %s.1677 = phi i8* [ %s.1.be, %while.cond1.backedge ], [ %s.0726, %while.cond1.preheader ]
  %call = call i32 @strcmp(i8* %11, i8* getelementptr inbounds ([7 x i8]* @.str93, i64 0, i64 0)) #2
  %tobool5 = icmp eq i32 %call, 0
  br i1 %tobool5, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %while.body3
  %call6 = call i32 @strcmp(i8* %11, i8* getelementptr inbounds ([6 x i8]* @.str94, i64 0, i64 0)) #2
  %lnot8 = icmp eq i32 %call6, 0
  br label %lor.end

lor.end:                                          ; preds = %while.body3, %lor.rhs
  %12 = phi i1 [ true, %while.body3 ], [ %lnot8, %lor.rhs ]
  %cmp665 = icmp ult i8* %s.1677, %end
  br i1 %cmp665, label %while.body11, label %while.end

while.body11:                                     ; preds = %lor.end, %if.end57
  %s.2668 = phi i8* [ %incdec.ptr, %if.end57 ], [ %s.1677, %lor.end ]
  %escape_next.0667 = phi i8 [ %escape_next.1, %if.end57 ], [ 0, %lor.end ]
  %inside_quote.0666 = phi i8 [ %inside_quote.1, %if.end57 ], [ 0, %lor.end ]
  %13 = load i8* %s.2668, align 1, !tbaa !45
  %cmp13 = icmp ne i8 %13, 60
  %tobool15 = icmp ne i8 %inside_quote.0666, 0
  %or.cond = or i1 %cmp13, %tobool15
  br i1 %or.cond, label %if.end, label %while.end

if.end:                                           ; preds = %while.body11
  br i1 %12, label %if.then17, label %if.end57

if.then17:                                        ; preds = %if.end
  %tobool18 = icmp eq i8 %escape_next.0667, 0
  br i1 %tobool18, label %if.else, label %if.end57

if.else:                                          ; preds = %if.then17
  %cmp21 = icmp eq i8 %13, 92
  br i1 %cmp21, label %if.end57, label %if.else24

if.else24:                                        ; preds = %if.else
  %cmp30 = icmp eq i8 %13, %inside_quote.0666
  %or.cond476 = and i1 %tobool15, %cmp30
  br i1 %or.cond476, label %if.end57, label %if.else33

if.else33:                                        ; preds = %if.else24
  switch i8 %13, label %if.else41 [
    i8 13, label %if.end57
    i8 10, label %if.end57
  ]

if.else41:                                        ; preds = %if.else33
  br i1 %tobool15, label %if.end57, label %land.lhs.true43

land.lhs.true43:                                  ; preds = %if.else41
  switch i8 %13, label %if.end57 [
    i8 34, label %if.then51
    i8 39, label %if.then51
  ]

if.then51:                                        ; preds = %land.lhs.true43, %land.lhs.true43
  br label %if.end57

if.end57:                                         ; preds = %land.lhs.true43, %if.else33, %if.else33, %if.else24, %if.else, %if.then17, %if.else41, %if.then51, %if.end
  %inside_quote.1 = phi i8 [ %inside_quote.0666, %if.else41 ], [ %13, %if.then51 ], [ %inside_quote.0666, %if.end ], [ %inside_quote.0666, %if.then17 ], [ %inside_quote.0666, %if.else ], [ 0, %if.else24 ], [ 0, %if.else33 ], [ 0, %if.else33 ], [ 0, %land.lhs.true43 ]
  %escape_next.1 = phi i8 [ 0, %if.else41 ], [ 0, %if.then51 ], [ %escape_next.0667, %if.end ], [ 0, %if.then17 ], [ 1, %if.else ], [ 0, %if.else24 ], [ 0, %if.else33 ], [ 0, %if.else33 ], [ 0, %land.lhs.true43 ]
  %incdec.ptr = getelementptr inbounds i8* %s.2668, i64 1
  %cmp = icmp ult i8* %incdec.ptr, %end
  br i1 %cmp, label %while.body11, label %while.end

while.end:                                        ; preds = %if.end57, %while.body11, %lor.end
  %s.2.lcssa = phi i8* [ %s.1677, %lor.end ], [ %incdec.ptr, %if.end57 ], [ %s.2668, %while.body11 ]
  %cmp58 = icmp eq i8* %s.2.lcssa, %end
  br i1 %cmp58, label %DONE, label %if.end61

if.end61:                                         ; preds = %while.end
  %incdec.ptr62 = getelementptr inbounds i8* %s.2.lcssa, i64 1
  %14 = load i8* %incdec.ptr62, align 1, !tbaa !45
  %cmp64 = icmp eq i8 %14, 47
  br i1 %cmp64, label %if.then66, label %while.cond1.backedge

if.then66:                                        ; preds = %if.end61
  %incdec.ptr67 = getelementptr inbounds i8* %s.2.lcssa, i64 2
  %15 = load i8* %11, align 1, !tbaa !45
  %tobool70672 = icmp eq i8 %15, 0
  br i1 %tobool70672, label %land.lhs.true88, label %land.rhs

land.rhs:                                         ; preds = %if.then66, %while.body83
  %16 = phi i8 [ %19, %while.body83 ], [ %15, %if.then66 ]
  %s.3674 = phi i8* [ %incdec.ptr84, %while.body83 ], [ %incdec.ptr67, %if.then66 ]
  %l.0673 = phi i8* [ %incdec.ptr85, %while.body83 ], [ %11, %if.then66 ]
  %17 = load i8* %s.3674, align 1, !tbaa !45
  %conv71 = sext i8 %17 to i32
  %.off574 = add i8 %17, -65
  %18 = icmp ult i8 %.off574, 26
  %add = add nsw i32 %conv71, 32
  %add.conv71 = select i1 %18, i32 %add, i32 %conv71
  %conv80 = sext i8 %16 to i32
  %cmp81 = icmp eq i32 %add.conv71, %conv80
  br i1 %cmp81, label %while.body83, label %while.cond1.backedge

while.body83:                                     ; preds = %land.rhs
  %incdec.ptr84 = getelementptr inbounds i8* %s.3674, i64 1
  %incdec.ptr85 = getelementptr inbounds i8* %l.0673, i64 1
  %19 = load i8* %incdec.ptr85, align 1, !tbaa !45
  %tobool70 = icmp eq i8 %19, 0
  br i1 %tobool70, label %land.lhs.true88, label %land.rhs

land.lhs.true88:                                  ; preds = %while.body83, %if.then66
  %s.3587 = phi i8* [ %incdec.ptr67, %if.then66 ], [ %incdec.ptr84, %while.body83 ]
  %call90 = call i32 @strcmp(i8* %11, i8* getelementptr inbounds ([10 x i8]* @.str80, i64 0, i64 0)) #2
  %tobool91 = icmp eq i32 %call90, 0
  br i1 %tobool91, label %lor.lhs.false92, label %if.then95

lor.lhs.false92:                                  ; preds = %land.lhs.true88
  %20 = load i8* %closing_plaintext, align 1, !tbaa !50
  %tobool94 = icmp eq i8 %20, 0
  br i1 %tobool94, label %while.cond1.backedge, label %if.then95

if.then95:                                        ; preds = %lor.lhs.false92, %land.lhs.true88
  store i8* %incdec.ptr67, i8** %beg96, align 8, !tbaa !54
  store i8* %s.3587, i8** %end97, align 8, !tbaa !56
  br label %while.cond98

while.cond98:                                     ; preds = %while.cond98, %if.then95
  %s.4 = phi i8* [ %s.3587, %if.then95 ], [ %incdec.ptr102, %while.cond98 ]
  %21 = load i8* %s.4, align 1, !tbaa !45
  %idxprom = zext i8 %21 to i64
  %arrayidx = getelementptr inbounds [256 x i8]* @hctype, i64 0, i64 %idxprom
  %22 = load i8* %arrayidx, align 1, !tbaa !45
  %and = and i8 %22, 1
  %tobool100 = icmp eq i8 %and, 0
  %incdec.ptr102 = getelementptr inbounds i8* %s.4, i64 1
  br i1 %tobool100, label %while.end103, label %while.cond98

while.end103:                                     ; preds = %while.cond98
  %cmp105 = icmp eq i8 %21, 62
  br i1 %cmp105, label %if.then107, label %while.cond1.backedge

while.cond1.backedge:                             ; preds = %land.rhs, %while.end103, %if.end61, %lor.lhs.false92
  %s.1.be = phi i8* [ %s.4, %while.end103 ], [ %s.3587, %lor.lhs.false92 ], [ %incdec.ptr62, %if.end61 ], [ %s.3674, %land.rhs ]
  %tobool2 = icmp eq i8* %11, null
  br i1 %tobool2, label %while.cond118.outer, label %while.body3

if.then107:                                       ; preds = %while.end103
  %cmp109 = icmp eq i8* %t.0725, %s.2.lcssa
  br i1 %cmp109, label %if.end112, label %if.then111

if.then111:                                       ; preds = %if.then107
  call fastcc void @report_event(%struct.p_state* %p_state, i32 4, i8* %t.0725, i8* %s.2.lcssa, i64 %utf8, %struct.token_pos* null, i32 0, %struct.sv* %self)
  br label %if.end112

if.end112:                                        ; preds = %if.then107, %if.then111
  call fastcc void @report_event(%struct.p_state* %p_state, i32 3, i8* %s.2.lcssa, i8* %incdec.ptr102, i64 %utf8, %struct.token_pos* %end_token, i32 1, %struct.sv* %self)
  store i8* null, i8** %literal_mode, align 8, !tbaa !49
  store i8 0, i8* %is_cdata338.i, align 1, !tbaa !58
  br label %while.cond118.outer

while.cond118:                                    ; preds = %while.cond118.outer, %if.end162
  %s.5 = phi i8* [ %s.7, %if.end162 ], [ %s.5.ph, %while.cond118.outer ]
  %cmp129690 = icmp ult i8* %s.5, %end
  br i1 %switch, label %while.cond128.preheader, label %while.cond168.preheader

while.cond168.preheader:                          ; preds = %while.cond118
  br i1 %cmp129690, label %land.rhs171.lr.ph, label %while.end202

while.cond128.preheader:                          ; preds = %while.cond118
  %23 = load i8* %s.5, align 1, !tbaa !45
  %cmp133691 = icmp eq i8 %23, 93
  br i1 %cmp129690, label %land.rhs131, label %while.end138

while.cond128:                                    ; preds = %land.rhs131
  %cmp129 = icmp ult i8* %incdec.ptr137, %end
  %24 = load i8* %incdec.ptr137, align 1, !tbaa !45
  %cmp133 = icmp eq i8 %24, 93
  br i1 %cmp129, label %land.rhs131, label %while.end138

land.rhs131:                                      ; preds = %while.cond128.preheader, %while.cond128
  %cmp133693 = phi i1 [ %cmp133, %while.cond128 ], [ %cmp133691, %while.cond128.preheader ]
  %s.6692 = phi i8* [ %incdec.ptr137, %while.cond128 ], [ %s.5, %while.cond128.preheader ]
  %incdec.ptr137 = getelementptr inbounds i8* %s.6692, i64 1
  br i1 %cmp133693, label %if.then142, label %while.cond128

while.end138:                                     ; preds = %while.cond128, %while.cond128.preheader
  %cmp133.lcssa = phi i1 [ %cmp133691, %while.cond128.preheader ], [ %cmp133, %while.cond128 ]
  %s.6.lcssa = phi i8* [ %s.5, %while.cond128.preheader ], [ %incdec.ptr137, %while.cond128 ]
  br i1 %cmp133.lcssa, label %if.then142, label %if.end162

if.then142:                                       ; preds = %land.rhs131, %while.end138
  %s.6596 = phi i8* [ %s.6.lcssa, %while.end138 ], [ %s.6692, %land.rhs131 ]
  %incdec.ptr144 = getelementptr inbounds i8* %s.6596, i64 1
  %25 = load i8* %incdec.ptr144, align 1, !tbaa !45
  %cmp146 = icmp eq i8 %25, 93
  br i1 %cmp146, label %if.then148, label %if.end162

if.then148:                                       ; preds = %if.then142
  %incdec.ptr149 = getelementptr inbounds i8* %s.6596, i64 2
  %26 = load i8* %incdec.ptr149, align 1, !tbaa !45
  %cmp151 = icmp eq i8 %26, 62
  br i1 %cmp151, label %if.then153, label %if.end162

if.then153:                                       ; preds = %if.then148
  %incdec.ptr154 = getelementptr inbounds i8* %s.6596, i64 3
  %cmp155 = icmp eq i8* %t.2.ph, %s.6596
  br i1 %cmp155, label %if.end158, label %if.then157

if.then157:                                       ; preds = %if.then153
  call fastcc void @report_event(%struct.p_state* %p_state, i32 4, i8* %t.2.ph, i8* %s.6596, i64 %utf8, %struct.token_pos* null, i32 0, %struct.sv* %self)
  br label %if.end158

if.end158:                                        ; preds = %if.then153, %if.then157
  call fastcc void @report_event(%struct.p_state* %p_state, i32 10, i8* %s.6596, i8* %incdec.ptr154, i64 %utf8, %struct.token_pos* null, i32 0, %struct.sv* %self)
  %27 = load %struct.av** %ms_stack, align 8, !tbaa !16
  %call159 = call %struct.sv* @Perl_av_pop(%struct.av* %27) #2
  call void @Perl_sv_free(%struct.sv* %call159) #2
  call fastcc void @marked_section_update(%struct.p_state* %p_state)
  br label %while.cond118.outer

while.cond118.outer:                              ; preds = %if.end112, %while.cond1.preheader, %while.cond1.backedge, %if.end158
  %t.2.ph = phi i8* [ %incdec.ptr154, %if.end158 ], [ %incdec.ptr102, %if.end112 ], [ %t.0725, %while.cond1.preheader ], [ %t.0725, %while.cond1.backedge ]
  %s.5.ph = phi i8* [ %incdec.ptr154, %if.end158 ], [ %incdec.ptr102, %if.end112 ], [ %s.0726, %while.cond1.preheader ], [ %s.1.be, %while.cond1.backedge ]
  %28 = load i32* %ms, align 4, !tbaa !77
  %29 = and i32 %28, -2
  %switch = icmp eq i32 %29, 2
  br label %while.cond118

if.end162:                                        ; preds = %if.then142, %if.then148, %while.end138
  %s.7 = phi i8* [ %incdec.ptr149, %if.then148 ], [ %incdec.ptr144, %if.then142 ], [ %s.6.lcssa, %while.end138 ]
  %cmp163 = icmp eq i8* %s.7, %end
  br i1 %cmp163, label %DONE, label %while.cond118

land.rhs171:                                      ; preds = %land.rhs171.lr.ph, %if.end200
  %s.8697 = phi i8* [ %s.8.ph706, %land.rhs171.lr.ph ], [ %incdec.ptr201, %if.end200 ]
  %30 = load i8* %s.8697, align 1, !tbaa !45
  %cmp173 = icmp eq i8 %30, 60
  br i1 %cmp173, label %while.end202, label %while.body176

while.body176:                                    ; preds = %land.rhs171
  %31 = load i32* %ms, align 4, !tbaa !77
  %tobool178 = icmp ne i32 %31, 0
  %cmp181 = icmp eq i8 %30, 93
  %or.cond478 = and i1 %tobool178, %cmp181
  br i1 %or.cond478, label %if.then183, label %if.end200

if.then183:                                       ; preds = %while.body176
  %incdec.ptr185 = getelementptr inbounds i8* %s.8697, i64 1
  %32 = load i8* %incdec.ptr185, align 1, !tbaa !45
  %cmp187 = icmp eq i8 %32, 93
  br i1 %cmp187, label %if.then189, label %if.end200

if.then189:                                       ; preds = %if.then183
  %incdec.ptr190 = getelementptr inbounds i8* %s.8697, i64 2
  %33 = load i8* %incdec.ptr190, align 1, !tbaa !45
  %cmp192 = icmp eq i8 %33, 62
  br i1 %cmp192, label %if.then194, label %if.end200

if.then194:                                       ; preds = %if.then189
  %incdec.ptr195 = getelementptr inbounds i8* %s.8697, i64 3
  call fastcc void @report_event(%struct.p_state* %p_state, i32 4, i8* %t.3.ph705, i8* %s.8697, i64 %utf8, %struct.token_pos* null, i32 0, %struct.sv* %self)
  call fastcc void @report_event(%struct.p_state* %p_state, i32 10, i8* %s.8697, i8* %incdec.ptr195, i64 %utf8, %struct.token_pos* null, i32 0, %struct.sv* %self)
  %34 = load %struct.av** %ms_stack, align 8, !tbaa !16
  %call197 = call %struct.sv* @Perl_av_pop(%struct.av* %34) #2
  call void @Perl_sv_free(%struct.sv* %call197) #2
  call fastcc void @marked_section_update(%struct.p_state* %p_state)
  %cmp169696 = icmp ult i8* %incdec.ptr195, %end
  br i1 %cmp169696, label %land.rhs171.lr.ph, label %if.end266

land.rhs171.lr.ph:                                ; preds = %while.cond168.preheader, %if.then194
  %s.8.ph706 = phi i8* [ %incdec.ptr195, %if.then194 ], [ %s.5, %while.cond168.preheader ]
  %t.3.ph705 = phi i8* [ %incdec.ptr195, %if.then194 ], [ %t.2.ph, %while.cond168.preheader ]
  br label %land.rhs171

if.end200:                                        ; preds = %while.body176, %if.then183, %if.then189
  %s.9 = phi i8* [ %incdec.ptr190, %if.then189 ], [ %incdec.ptr185, %if.then183 ], [ %s.8697, %while.body176 ]
  %incdec.ptr201 = getelementptr inbounds i8* %s.9, i64 1
  %cmp169 = icmp ult i8* %incdec.ptr201, %end
  br i1 %cmp169, label %land.rhs171, label %while.end202

while.end202:                                     ; preds = %if.end200, %land.rhs171, %while.cond168.preheader
  %t.3.ph.lcssa = phi i8* [ %t.2.ph, %while.cond168.preheader ], [ %t.3.ph705, %land.rhs171 ], [ %t.3.ph705, %if.end200 ]
  %s.8.lcssa = phi i8* [ %s.5, %while.cond168.preheader ], [ %incdec.ptr201, %if.end200 ], [ %s.8697, %land.rhs171 ]
  %cmp203 = icmp eq i8* %s.8.lcssa, %t.3.ph.lcssa
  br i1 %cmp203, label %if.end266, label %if.then205

if.then205:                                       ; preds = %while.end202
  %35 = load i8* %s.8.lcssa, align 1, !tbaa !45
  %cmp207 = icmp eq i8 %35, 60
  br i1 %cmp207, label %if.then209, label %if.else210

if.then209:                                       ; preds = %if.then205
  call fastcc void @report_event(%struct.p_state* %p_state, i32 4, i8* %t.3.ph.lcssa, i8* %s.8.lcssa, i64 %utf8, %struct.token_pos* null, i32 0, %struct.sv* %self)
  br label %if.end266

if.else210:                                       ; preds = %if.then205
  %incdec.ptr211 = getelementptr inbounds i8* %s.8.lcssa, i64 -1
  %36 = load i8* %incdec.ptr211, align 1, !tbaa !45
  %idxprom212 = zext i8 %36 to i64
  %arrayidx213 = getelementptr inbounds [256 x i8]* @hctype, i64 0, i64 %idxprom212
  %37 = load i8* %arrayidx213, align 1, !tbaa !45
  %and215 = and i8 %37, 1
  %tobool216 = icmp eq i8 %and215, 0
  %cmp233657 = icmp ult i8* %incdec.ptr211, %t.3.ph.lcssa
  br i1 %tobool216, label %while.cond232.preheader, label %while.cond218.preheader

while.cond218.preheader:                          ; preds = %if.else210
  br i1 %cmp233657, label %if.end259, label %land.rhs221

while.cond232.preheader:                          ; preds = %if.else210
  br i1 %cmp233657, label %while.cond246.preheader, label %land.rhs235

while.cond218:                                    ; preds = %land.rhs221
  %cmp219 = icmp ult i8* %incdec.ptr229, %t.3.ph.lcssa
  br i1 %cmp219, label %if.end259, label %while.cond218.land.rhs221_crit_edge

while.cond218.land.rhs221_crit_edge:              ; preds = %while.cond218
  %.pre832 = load i8* %incdec.ptr229, align 1, !tbaa !45
  %idxprom222.phi.trans.insert = zext i8 %.pre832 to i64
  %arrayidx223.phi.trans.insert = getelementptr inbounds [256 x i8]* @hctype, i64 0, i64 %idxprom222.phi.trans.insert
  %.pre833 = load i8* %arrayidx223.phi.trans.insert, align 1, !tbaa !45
  br label %land.rhs221

land.rhs221:                                      ; preds = %while.cond218.preheader, %while.cond218.land.rhs221_crit_edge
  %38 = phi i8 [ %.pre833, %while.cond218.land.rhs221_crit_edge ], [ %37, %while.cond218.preheader ]
  %s.10662 = phi i8* [ %incdec.ptr229, %while.cond218.land.rhs221_crit_edge ], [ %incdec.ptr211, %while.cond218.preheader ]
  %and225 = and i8 %38, 1
  %tobool226 = icmp eq i8 %and225, 0
  %incdec.ptr229 = getelementptr inbounds i8* %s.10662, i64 -1
  br i1 %tobool226, label %if.end259, label %while.cond218

while.cond232:                                    ; preds = %land.rhs235
  %cmp233 = icmp ult i8* %incdec.ptr244, %t.3.ph.lcssa
  br i1 %cmp233, label %while.cond246.preheader, label %while.cond232.land.rhs235_crit_edge

while.cond232.land.rhs235_crit_edge:              ; preds = %while.cond232
  %.pre = load i8* %incdec.ptr244, align 1, !tbaa !45
  %idxprom236.phi.trans.insert = zext i8 %.pre to i64
  %arrayidx237.phi.trans.insert = getelementptr inbounds [256 x i8]* @hctype, i64 0, i64 %idxprom236.phi.trans.insert
  %.pre831 = load i8* %arrayidx237.phi.trans.insert, align 1, !tbaa !45
  br label %land.rhs235

while.cond246.preheader:                          ; preds = %while.cond232, %land.rhs235, %while.cond232.preheader
  %s.11.lcssa = phi i8* [ %incdec.ptr211, %while.cond232.preheader ], [ %incdec.ptr244, %while.cond232 ], [ %s.11658, %land.rhs235 ]
  %cmp247654 = icmp ult i8* %s.11.lcssa, %t.3.ph.lcssa
  br i1 %cmp247654, label %if.end259, label %land.rhs249

land.rhs235:                                      ; preds = %while.cond232.preheader, %while.cond232.land.rhs235_crit_edge
  %39 = phi i8 [ %.pre831, %while.cond232.land.rhs235_crit_edge ], [ %37, %while.cond232.preheader ]
  %s.11658 = phi i8* [ %incdec.ptr244, %while.cond232.land.rhs235_crit_edge ], [ %incdec.ptr211, %while.cond232.preheader ]
  %and239 = and i8 %39, 1
  %lnot241 = icmp eq i8 %and239, 0
  %incdec.ptr244 = getelementptr inbounds i8* %s.11658, i64 -1
  br i1 %lnot241, label %while.cond232, label %while.cond246.preheader

while.cond246:                                    ; preds = %land.rhs249
  %cmp247 = icmp ult i8* %incdec.ptr257, %t.3.ph.lcssa
  br i1 %cmp247, label %if.end259, label %land.rhs249

land.rhs249:                                      ; preds = %while.cond246.preheader, %while.cond246
  %s.12655 = phi i8* [ %incdec.ptr257, %while.cond246 ], [ %s.11.lcssa, %while.cond246.preheader ]
  %40 = load i8* %s.12655, align 1, !tbaa !45
  %idxprom250 = zext i8 %40 to i64
  %arrayidx251 = getelementptr inbounds [256 x i8]* @hctype, i64 0, i64 %idxprom250
  %41 = load i8* %arrayidx251, align 1, !tbaa !45
  %and253 = and i8 %41, 1
  %tobool254 = icmp eq i8 %and253, 0
  %incdec.ptr257 = getelementptr inbounds i8* %s.12655, i64 -1
  br i1 %tobool254, label %if.end259, label %while.cond246

if.end259:                                        ; preds = %while.cond218, %land.rhs221, %while.cond246, %land.rhs249, %while.cond218.preheader, %while.cond246.preheader
  %s.13 = phi i8* [ %s.11.lcssa, %while.cond246.preheader ], [ %incdec.ptr211, %while.cond218.preheader ], [ %incdec.ptr257, %while.cond246 ], [ %s.12655, %land.rhs249 ], [ %incdec.ptr229, %while.cond218 ], [ %s.10662, %land.rhs221 ]
  %incdec.ptr260 = getelementptr inbounds i8* %s.13, i64 1
  %cmp261 = icmp eq i8* %incdec.ptr260, %t.3.ph.lcssa
  br i1 %cmp261, label %DONE, label %if.then263

if.then263:                                       ; preds = %if.end259
  call fastcc void @report_event(%struct.p_state* %p_state, i32 4, i8* %t.3.ph.lcssa, i8* %incdec.ptr260, i64 %utf8, %struct.token_pos* null, i32 0, %struct.sv* %self)
  br label %DONE

if.end266:                                        ; preds = %if.then194, %while.end202, %if.then209
  %s.8.lcssa838 = phi i8* [ %s.8.lcssa, %if.then209 ], [ %s.8.lcssa, %while.end202 ], [ %incdec.ptr195, %if.then194 ]
  %t.4 = phi i8* [ %s.8.lcssa, %if.then209 ], [ %t.3.ph.lcssa, %while.end202 ], [ %incdec.ptr195, %if.then194 ]
  %sub.ptr.rhs.cast = ptrtoint i8* %s.8.lcssa838 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %cmp267 = icmp slt i64 %sub.ptr.sub, 3
  br i1 %cmp267, label %DONE, label %if.end270

if.end270:                                        ; preds = %if.end266
  %incdec.ptr271 = getelementptr inbounds i8* %s.8.lcssa838, i64 1
  %42 = load i8* %incdec.ptr271, align 1, !tbaa !45
  %idxprom272 = zext i8 %42 to i64
  %arrayidx273 = getelementptr inbounds [256 x i8]* @hctype, i64 0, i64 %idxprom272
  %43 = load i8* %arrayidx273, align 1, !tbaa !45
  %and275 = and i8 %43, 2
  %tobool276 = icmp eq i8 %and275, 0
  br i1 %tobool276, label %if.else279, label %if.then277

if.then277:                                       ; preds = %if.end270
  call void @llvm.lifetime.start(i64 256, i8* %10) #2
  %44 = load i8* %strict_names.i480, align 1, !tbaa !78
  %tobool.i = icmp eq i8 %44, 0
  br i1 %tobool.i, label %lor.lhs.false.i, label %if.end.i

lor.lhs.false.i:                                  ; preds = %if.then277
  %45 = load i8* %xml_mode.i482, align 1, !tbaa !79
  %tobool2.i = icmp eq i8 %45, 0
  %..i = select i1 %tobool2.i, i32 16, i32 4
  %.472.i = select i1 %tobool2.i, i32 8, i32 2
  %.473.i = select i1 %tobool2.i, i32 8, i32 4
  br label %if.end.i

if.end.i:                                         ; preds = %lor.lhs.false.i, %if.then277
  %attr_name_char.0.i = phi i32 [ 4, %if.then277 ], [ %..i, %lor.lhs.false.i ]
  %attr_name_first.0.i = phi i32 [ 2, %if.then277 ], [ %.472.i, %lor.lhs.false.i ]
  %tag_name_char.0.i = phi i32 [ 4, %if.then277 ], [ %.473.i, %lor.lhs.false.i ]
  %add.ptr.i = getelementptr inbounds i8* %t.4, i64 2
  %cmp682.i = icmp ult i8* %add.ptr.i, %end
  br i1 %cmp682.i, label %land.rhs.i, label %if.end14.i

while.cond.i:                                     ; preds = %land.rhs.i
  %cmp.i = icmp ult i8* %incdec.ptr.i, %end
  br i1 %cmp.i, label %land.rhs.i, label %if.end14.i

land.rhs.i:                                       ; preds = %if.end.i, %while.cond.i
  %s.0683.i = phi i8* [ %incdec.ptr.i, %while.cond.i ], [ %add.ptr.i, %if.end.i ]
  %46 = load i8* %s.0683.i, align 1, !tbaa !45
  %idxprom.i = zext i8 %46 to i64
  %arrayidx.i = getelementptr inbounds [256 x i8]* @hctype, i64 0, i64 %idxprom.i
  %47 = load i8* %arrayidx.i, align 1, !tbaa !45
  %conv4.i = zext i8 %47 to i32
  %and.i = and i32 %conv4.i, %tag_name_char.0.i
  %tobool6.i = icmp eq i32 %and.i, 0
  %incdec.ptr.i = getelementptr inbounds i8* %s.0683.i, i64 1
  br i1 %tobool6.i, label %if.end14.i, label %while.cond.i

if.end14.i:                                       ; preds = %land.rhs.i, %while.cond.i, %if.end.i
  %s.0.lcssa.i = phi i8* [ %add.ptr.i, %if.end.i ], [ %s.0683.i, %land.rhs.i ], [ %incdec.ptr.i, %while.cond.i ]
  %add.ptr15.i = getelementptr inbounds i8* %t.4, i64 1
  store i8* %add.ptr15.i, i8** %beg18.i, align 16, !tbaa !54
  store i8* %s.0.lcssa.i, i8** %end22.i, align 8, !tbaa !56
  br label %while.cond23.i

while.cond23.i:                                   ; preds = %while.cond23.i, %if.end14.i
  %s.1.i = phi i8* [ %s.0.lcssa.i, %if.end14.i ], [ %incdec.ptr30.i, %while.cond23.i ]
  %48 = load i8* %s.1.i, align 1, !tbaa !45
  %idxprom24.i = zext i8 %48 to i64
  %arrayidx25.i = getelementptr inbounds [256 x i8]* @hctype, i64 0, i64 %idxprom24.i
  %49 = load i8* %arrayidx25.i, align 1, !tbaa !45
  %and27.i = and i8 %49, 1
  %tobool28.i = icmp eq i8 %and27.i, 0
  %incdec.ptr30.i = getelementptr inbounds i8* %s.1.i, i64 1
  br i1 %tobool28.i, label %while.end31.i, label %while.cond23.i

while.end31.i:                                    ; preds = %while.cond23.i
  %cmp32.i = icmp eq i8* %s.1.i, %end
  br i1 %cmp32.i, label %if.end301, label %while.cond36.preheader.i

while.cond36.preheader.i:                         ; preds = %while.end31.i
  %conv39672.i = zext i8 %49 to i32
  %and41673.i = and i32 %conv39672.i, %attr_name_first.0.i
  %tobool42674.i = icmp eq i32 %and41673.i, 0
  br i1 %tobool42674.i, label %while.end261.i, label %while.cond47.preheader.i

while.cond47.preheader.i:                         ; preds = %while.cond36.preheader.i, %while.cond36.backedge.i
  %s.2678.i = phi i8* [ %s.2.be.i, %while.cond36.backedge.i ], [ %s.1.i, %while.cond36.preheader.i ]
  %num_tokens.0677.i = phi i32 [ %num_tokens.0.be.i, %while.cond36.backedge.i ], [ 1, %while.cond36.preheader.i ]
  %storemerge.i514643676.i = phi %struct.token_pos* [ %storemerge.i514643.be.i, %while.cond36.backedge.i ], [ %arraydecay.i, %while.cond36.preheader.i ]
  %token_lim.0.load647675.i = phi i32 [ %token_lim.0.load647.be.i, %while.cond36.backedge.i ], [ 16, %while.cond36.preheader.i ]
  br label %while.cond47.i

while.cond47.i:                                   ; preds = %land.rhs50.i, %while.cond47.preheader.i
  %s.2.pn.i = phi i8* [ %s.3.i, %land.rhs50.i ], [ %s.2678.i, %while.cond47.preheader.i ]
  %s.3.i = getelementptr inbounds i8* %s.2.pn.i, i64 1
  %cmp48.i = icmp ult i8* %s.3.i, %end
  br i1 %cmp48.i, label %land.rhs50.i, label %while.end60.i

land.rhs50.i:                                     ; preds = %while.cond47.i
  %50 = load i8* %s.3.i, align 1, !tbaa !45
  %idxprom51.i = zext i8 %50 to i64
  %arrayidx52.i = getelementptr inbounds [256 x i8]* @hctype, i64 0, i64 %idxprom51.i
  %51 = load i8* %arrayidx52.i, align 1, !tbaa !45
  %conv53.i = zext i8 %51 to i32
  %and55.i = and i32 %conv53.i, %attr_name_char.0.i
  %tobool56.i = icmp eq i32 %and55.i, 0
  br i1 %tobool56.i, label %while.end60.i, label %while.cond47.i

while.end60.i:                                    ; preds = %land.rhs50.i, %while.cond47.i
  %cmp61.i = icmp eq i8* %s.3.i, %end
  br i1 %cmp61.i, label %PREMATURE.i, label %if.end64.i

if.end64.i:                                       ; preds = %while.end60.i
  %inc65.i = add nsw i32 %num_tokens.0677.i, 1
  %cmp66.i = icmp eq i32 %inc65.i, %token_lim.0.load647675.i
  br i1 %cmp66.i, label %if.then68.i, label %if.end73.i

if.then68.i:                                      ; preds = %if.end64.i
  %cmp70.i = icmp eq %struct.token_pos* %storemerge.i514643676.i, %arraydecay.i
  %cmp.i474.i = icmp slt i32 %token_lim.0.load647675.i, 4
  %.op.i475.i = shl i32 %token_lim.0.load647675.i, 1
  %mul.i476.i = select i1 %cmp.i474.i, i32 8, i32 %.op.i475.i
  br i1 %cmp70.i, label %if.else.i486.i, label %if.then1.i481.i

if.then1.i481.i:                                  ; preds = %if.then68.i
  %52 = bitcast %struct.token_pos* %storemerge.i514643676.i to i8*
  %conv.i478.i = sext i32 %mul.i476.i to i64
  %mul2.i479.i = shl nsw i64 %conv.i478.i, 4
  %call.i480.i = call i8* @Perl_safesysrealloc(i8* %52, i64 %mul2.i479.i) #2
  %53 = bitcast i8* %call.i480.i to %struct.token_pos*
  br label %if.end73.i

if.else.i486.i:                                   ; preds = %if.then68.i
  %conv3.i482.i = sext i32 %mul.i476.i to i64
  %mul4.i483.i = shl nsw i64 %conv3.i482.i, 4
  %call5.i484.i = call i8* @Perl_safesysmalloc(i64 %mul4.i483.i) #2
  %54 = bitcast i8* %call5.i484.i to %struct.token_pos*
  %cmp624.i485.i = icmp sgt i32 %token_lim.0.load647675.i, 0
  br i1 %cmp624.i485.i, label %for.body.i492.i, label %if.end73.i

for.body.i492.i:                                  ; preds = %if.else.i486.i, %for.body.i492.i
  %indvars.iv.i487.i = phi i64 [ %indvars.iv.next.i490.i, %for.body.i492.i ], [ 0, %if.else.i486.i ]
  %arrayidx.i488.i = getelementptr inbounds %struct.token_pos* %54, i64 %indvars.iv.i487.i
  %arrayidx9.i489.i = getelementptr inbounds [16 x %struct.token_pos]* %token_buf.i, i64 0, i64 %indvars.iv.i487.i
  %55 = bitcast %struct.token_pos* %arrayidx.i488.i to i8*
  %56 = bitcast %struct.token_pos* %arrayidx9.i489.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %55, i8* %56, i64 16, i32 8, i1 false) #2, !tbaa.struct !80
  %indvars.iv.next.i490.i = add nuw nsw i64 %indvars.iv.i487.i, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next.i490.i to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %token_lim.0.load647675.i
  br i1 %exitcond, label %if.end73.i, label %for.body.i492.i

if.end73.i:                                       ; preds = %for.body.i492.i, %if.else.i486.i, %if.then1.i481.i, %if.end64.i
  %token_lim.0.load652.i = phi i32 [ %token_lim.0.load647675.i, %if.end64.i ], [ %mul.i476.i, %if.then1.i481.i ], [ %mul.i476.i, %if.else.i486.i ], [ %mul.i476.i, %for.body.i492.i ]
  %storemerge.i514641.i = phi %struct.token_pos* [ %storemerge.i514643676.i, %if.end64.i ], [ %53, %if.then1.i481.i ], [ %54, %if.else.i486.i ], [ %54, %for.body.i492.i ]
  %idxprom75.i = sext i32 %num_tokens.0677.i to i64
  %beg77.i = getelementptr inbounds %struct.token_pos* %storemerge.i514641.i, i64 %idxprom75.i, i32 0
  store i8* %s.2678.i, i8** %beg77.i, align 8, !tbaa !54
  %end82.i = getelementptr inbounds %struct.token_pos* %storemerge.i514641.i, i64 %idxprom75.i, i32 1
  store i8* %s.3.i, i8** %end82.i, align 8, !tbaa !56
  br label %while.cond83.i

while.cond83.i:                                   ; preds = %while.cond83.i, %if.end73.i
  %s.4.i = phi i8* [ %s.3.i, %if.end73.i ], [ %incdec.ptr90.i, %while.cond83.i ]
  %57 = load i8* %s.4.i, align 1, !tbaa !45
  %idxprom84.i = zext i8 %57 to i64
  %arrayidx85.i = getelementptr inbounds [256 x i8]* @hctype, i64 0, i64 %idxprom84.i
  %58 = load i8* %arrayidx85.i, align 1, !tbaa !45
  %and87.i = and i8 %58, 1
  %tobool88.i = icmp eq i8 %and87.i, 0
  %incdec.ptr90.i = getelementptr inbounds i8* %s.4.i, i64 1
  br i1 %tobool88.i, label %while.end91.i, label %while.cond83.i

while.end91.i:                                    ; preds = %while.cond83.i
  %cmp92.i = icmp eq i8* %s.4.i, %end
  br i1 %cmp92.i, label %PREMATURE.i, label %if.end95.i

if.end95.i:                                       ; preds = %while.end91.i
  %cmp97.i = icmp eq i8 %57, 61
  br i1 %cmp97.i, label %while.cond101.i, label %if.else241.i

while.cond101.i:                                  ; preds = %if.end95.i, %while.cond101.i
  %s.4.pn.i = phi i8* [ %s.5.i, %while.cond101.i ], [ %s.4.i, %if.end95.i ]
  %s.5.i = getelementptr inbounds i8* %s.4.pn.i, i64 1
  %59 = load i8* %s.5.i, align 1, !tbaa !45
  %idxprom102.i = zext i8 %59 to i64
  %arrayidx103.i = getelementptr inbounds [256 x i8]* @hctype, i64 0, i64 %idxprom102.i
  %60 = load i8* %arrayidx103.i, align 1, !tbaa !45
  %and105.i = and i8 %60, 1
  %tobool106.i = icmp eq i8 %and105.i, 0
  br i1 %tobool106.i, label %while.end109.i, label %while.cond101.i

while.end109.i:                                   ; preds = %while.cond101.i
  %cmp110.i = icmp eq i8* %s.5.i, %end
  br i1 %cmp110.i, label %PREMATURE.i, label %if.end113.i

if.end113.i:                                      ; preds = %while.end109.i
  switch i8 %59, label %while.cond184.preheader.i [
    i8 62, label %if.then117.i
    i8 34, label %while.cond147.i
    i8 39, label %while.cond147.i
  ]

while.cond184.preheader.i:                        ; preds = %if.end113.i
  %cmp185666.i = icmp uge i8* %s.5.i, %end
  %and191.i709 = and i8 %60, 8
  %tobool192.i710 = icmp eq i8 %and191.i709, 0
  %or.cond845 = or i1 %cmp185666.i, %tobool192.i710
  br i1 %or.cond845, label %while.end204.i, label %while.body194.i.lr.ph

while.body194.i.lr.ph:                            ; preds = %while.cond184.preheader.i
  %61 = load i8* %xml_mode.i482, align 1, !tbaa !79
  %tobool197.i = icmp ne i8 %61, 0
  br label %while.body194.i

if.then117.i:                                     ; preds = %if.end113.i
  %inc118.i = add nsw i32 %num_tokens.0677.i, 2
  %cmp119.i = icmp eq i32 %inc118.i, %token_lim.0.load652.i
  br i1 %cmp119.i, label %if.then121.i, label %if.end126.i

if.then121.i:                                     ; preds = %if.then117.i
  %cmp123.i = icmp eq %struct.token_pos* %storemerge.i514641.i, %arraydecay.i
  %cmp.i495.i = icmp slt i32 %token_lim.0.load652.i, 4
  %.op.i496.i = shl i32 %token_lim.0.load652.i, 1
  %mul.i497.i = select i1 %cmp.i495.i, i32 8, i32 %.op.i496.i
  br i1 %cmp123.i, label %if.else.i507.i, label %if.then1.i502.i

if.then1.i502.i:                                  ; preds = %if.then121.i
  %62 = bitcast %struct.token_pos* %storemerge.i514641.i to i8*
  %conv.i499.i = sext i32 %mul.i497.i to i64
  %mul2.i500.i = shl nsw i64 %conv.i499.i, 4
  %call.i501.i = call i8* @Perl_safesysrealloc(i8* %62, i64 %mul2.i500.i) #2
  %63 = bitcast i8* %call.i501.i to %struct.token_pos*
  br label %if.end126.i

if.else.i507.i:                                   ; preds = %if.then121.i
  %conv3.i503.i = sext i32 %mul.i497.i to i64
  %mul4.i504.i = shl nsw i64 %conv3.i503.i, 4
  %call5.i505.i = call i8* @Perl_safesysmalloc(i64 %mul4.i504.i) #2
  %64 = bitcast i8* %call5.i505.i to %struct.token_pos*
  %cmp624.i506.i = icmp sgt i32 %token_lim.0.load652.i, 0
  br i1 %cmp624.i506.i, label %for.body.i513.i, label %if.end126.i

for.body.i513.i:                                  ; preds = %if.else.i507.i, %for.body.i513.i
  %indvars.iv.i508.i = phi i64 [ %indvars.iv.next.i511.i, %for.body.i513.i ], [ 0, %if.else.i507.i ]
  %arrayidx.i509.i = getelementptr inbounds %struct.token_pos* %64, i64 %indvars.iv.i508.i
  %arrayidx9.i510.i = getelementptr inbounds [16 x %struct.token_pos]* %token_buf.i, i64 0, i64 %indvars.iv.i508.i
  %65 = bitcast %struct.token_pos* %arrayidx.i509.i to i8*
  %66 = bitcast %struct.token_pos* %arrayidx9.i510.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %65, i8* %66, i64 16, i32 8, i1 false) #2, !tbaa.struct !80
  %indvars.iv.next.i511.i = add nuw nsw i64 %indvars.iv.i508.i, 1
  %lftr.wideiv821 = trunc i64 %indvars.iv.next.i511.i to i32
  %exitcond822 = icmp eq i32 %lftr.wideiv821, %token_lim.0.load652.i
  br i1 %exitcond822, label %if.end126.i, label %for.body.i513.i

if.end126.i:                                      ; preds = %for.body.i513.i, %if.else.i507.i, %if.then1.i502.i, %if.then117.i
  %storemerge.i514639.i = phi %struct.token_pos* [ %storemerge.i514641.i, %if.then117.i ], [ %63, %if.then1.i502.i ], [ %64, %if.else.i507.i ], [ %64, %for.body.i513.i ]
  %idxprom128.i = sext i32 %inc65.i to i64
  %beg130.i = getelementptr inbounds %struct.token_pos* %storemerge.i514639.i, i64 %idxprom128.i, i32 0
  store i8* %s.5.i, i8** %beg130.i, align 8, !tbaa !54
  %end135.i = getelementptr inbounds %struct.token_pos* %storemerge.i514639.i, i64 %idxprom128.i, i32 1
  store i8* %s.5.i, i8** %end135.i, align 8, !tbaa !56
  br label %while.end261.i

while.cond147.i:                                  ; preds = %if.end113.i, %if.end113.i, %land.rhs150.i
  %s.5.pn.i = phi i8* [ %s.6.i, %land.rhs150.i ], [ %s.5.i, %if.end113.i ], [ %s.5.i, %if.end113.i ]
  %s.6.i = getelementptr inbounds i8* %s.5.pn.i, i64 1
  %cmp148.i = icmp ult i8* %s.6.i, %end
  br i1 %cmp148.i, label %land.rhs150.i, label %while.end158.i

land.rhs150.i:                                    ; preds = %while.cond147.i
  %67 = load i8* %s.6.i, align 1, !tbaa !45
  %cmp153.i = icmp eq i8 %67, %59
  br i1 %cmp153.i, label %while.end158.i, label %while.cond147.i

while.end158.i:                                   ; preds = %land.rhs150.i, %while.cond147.i
  %cmp159.i = icmp eq i8* %s.6.i, %end
  br i1 %cmp159.i, label %PREMATURE.i, label %if.end162.i

if.end162.i:                                      ; preds = %while.end158.i
  %incdec.ptr163.i = getelementptr inbounds i8* %s.5.pn.i, i64 2
  %inc164.i = add nsw i32 %num_tokens.0677.i, 2
  %cmp165.i = icmp eq i32 %inc164.i, %token_lim.0.load652.i
  br i1 %cmp165.i, label %if.then167.i, label %if.end172.i

if.then167.i:                                     ; preds = %if.end162.i
  %cmp169.i = icmp eq %struct.token_pos* %storemerge.i514641.i, %arraydecay.i
  %cmp.i516.i = icmp slt i32 %token_lim.0.load652.i, 4
  %.op.i517.i = shl i32 %token_lim.0.load652.i, 1
  %mul.i518.i = select i1 %cmp.i516.i, i32 8, i32 %.op.i517.i
  br i1 %cmp169.i, label %if.else.i528.i, label %if.then1.i523.i

if.then1.i523.i:                                  ; preds = %if.then167.i
  %68 = bitcast %struct.token_pos* %storemerge.i514641.i to i8*
  %conv.i520.i = sext i32 %mul.i518.i to i64
  %mul2.i521.i = shl nsw i64 %conv.i520.i, 4
  %call.i522.i = call i8* @Perl_safesysrealloc(i8* %68, i64 %mul2.i521.i) #2
  %69 = bitcast i8* %call.i522.i to %struct.token_pos*
  br label %if.end172.i

if.else.i528.i:                                   ; preds = %if.then167.i
  %conv3.i524.i = sext i32 %mul.i518.i to i64
  %mul4.i525.i = shl nsw i64 %conv3.i524.i, 4
  %call5.i526.i = call i8* @Perl_safesysmalloc(i64 %mul4.i525.i) #2
  %70 = bitcast i8* %call5.i526.i to %struct.token_pos*
  %cmp624.i527.i = icmp sgt i32 %token_lim.0.load652.i, 0
  br i1 %cmp624.i527.i, label %for.body.i534.i, label %if.end172.i

for.body.i534.i:                                  ; preds = %if.else.i528.i, %for.body.i534.i
  %indvars.iv.i529.i = phi i64 [ %indvars.iv.next.i532.i, %for.body.i534.i ], [ 0, %if.else.i528.i ]
  %arrayidx.i530.i = getelementptr inbounds %struct.token_pos* %70, i64 %indvars.iv.i529.i
  %arrayidx9.i531.i = getelementptr inbounds [16 x %struct.token_pos]* %token_buf.i, i64 0, i64 %indvars.iv.i529.i
  %71 = bitcast %struct.token_pos* %arrayidx.i530.i to i8*
  %72 = bitcast %struct.token_pos* %arrayidx9.i531.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %71, i8* %72, i64 16, i32 8, i1 false) #2, !tbaa.struct !80
  %indvars.iv.next.i532.i = add nuw nsw i64 %indvars.iv.i529.i, 1
  %lftr.wideiv817 = trunc i64 %indvars.iv.next.i532.i to i32
  %exitcond818 = icmp eq i32 %lftr.wideiv817, %token_lim.0.load652.i
  br i1 %exitcond818, label %if.end172.i, label %for.body.i534.i

if.end172.i:                                      ; preds = %for.body.i534.i, %if.else.i528.i, %if.then1.i523.i, %if.end162.i
  %token_lim.0.load650.i = phi i32 [ %token_lim.0.load652.i, %if.end162.i ], [ %mul.i518.i, %if.then1.i523.i ], [ %mul.i518.i, %if.else.i528.i ], [ %mul.i518.i, %for.body.i534.i ]
  %storemerge.i514638.i = phi %struct.token_pos* [ %storemerge.i514641.i, %if.end162.i ], [ %69, %if.then1.i523.i ], [ %70, %if.else.i528.i ], [ %70, %for.body.i534.i ]
  %idxprom174.i = sext i32 %inc65.i to i64
  %beg176.i = getelementptr inbounds %struct.token_pos* %storemerge.i514638.i, i64 %idxprom174.i, i32 0
  store i8* %s.5.i, i8** %beg176.i, align 8, !tbaa !54
  %end181.i = getelementptr inbounds %struct.token_pos* %storemerge.i514638.i, i64 %idxprom174.i, i32 1
  store i8* %incdec.ptr163.i, i8** %end181.i, align 8, !tbaa !56
  br label %while.cond228.preheader.i

while.cond184.i:                                  ; preds = %while.body194.i
  %cmp185.i = icmp ult i8* %incdec.ptr203.i, %end
  br i1 %cmp185.i, label %while.cond184.land.rhs187_crit_edge.i, label %while.end204.i

while.cond184.land.rhs187_crit_edge.i:            ; preds = %while.cond184.i
  %.pre.i = load i8* %incdec.ptr203.i, align 1, !tbaa !45
  %idxprom188.phi.trans.insert.i = zext i8 %.pre.i to i64
  %arrayidx189.phi.trans.insert.i = getelementptr inbounds [256 x i8]* @hctype, i64 0, i64 %idxprom188.phi.trans.insert.i
  %.pre706.i = load i8* %arrayidx189.phi.trans.insert.i, align 1, !tbaa !45
  %and191.i = and i8 %.pre706.i, 8
  %tobool192.i = icmp eq i8 %and191.i, 0
  br i1 %tobool192.i, label %while.end204.i, label %while.body194.i

while.body194.i:                                  ; preds = %while.body194.i.lr.ph, %while.cond184.land.rhs187_crit_edge.i
  %s.7667.i711 = phi i8* [ %s.5.i, %while.body194.i.lr.ph ], [ %incdec.ptr203.i, %while.cond184.land.rhs187_crit_edge.i ]
  %73 = phi i8 [ %59, %while.body194.i.lr.ph ], [ %.pre.i, %while.cond184.land.rhs187_crit_edge.i ]
  %cmp199.i = icmp eq i8 %73, 47
  %or.cond.i = and i1 %tobool197.i, %cmp199.i
  %incdec.ptr203.i = getelementptr inbounds i8* %s.7667.i711, i64 1
  br i1 %or.cond.i, label %while.end204.i, label %while.cond184.i

while.end204.i:                                   ; preds = %while.cond184.i, %while.cond184.land.rhs187_crit_edge.i, %while.body194.i, %while.cond184.preheader.i
  %s.7.lcssa.i = phi i8* [ %s.5.i, %while.cond184.preheader.i ], [ %incdec.ptr203.i, %while.cond184.i ], [ %incdec.ptr203.i, %while.cond184.land.rhs187_crit_edge.i ], [ %s.7667.i711, %while.body194.i ]
  %cmp205.i = icmp eq i8* %s.7.lcssa.i, %end
  br i1 %cmp205.i, label %PREMATURE.i, label %if.end208.i

if.end208.i:                                      ; preds = %while.end204.i
  %inc209.i = add nsw i32 %num_tokens.0677.i, 2
  %cmp210.i = icmp eq i32 %inc209.i, %token_lim.0.load652.i
  br i1 %cmp210.i, label %if.then212.i, label %if.end217.i

if.then212.i:                                     ; preds = %if.end208.i
  %cmp214.i = icmp eq %struct.token_pos* %storemerge.i514641.i, %arraydecay.i
  %cmp.i537.i = icmp slt i32 %token_lim.0.load652.i, 4
  %.op.i538.i = shl i32 %token_lim.0.load652.i, 1
  %mul.i539.i = select i1 %cmp.i537.i, i32 8, i32 %.op.i538.i
  br i1 %cmp214.i, label %if.else.i549.i, label %if.then1.i544.i

if.then1.i544.i:                                  ; preds = %if.then212.i
  %74 = bitcast %struct.token_pos* %storemerge.i514641.i to i8*
  %conv.i541.i = sext i32 %mul.i539.i to i64
  %mul2.i542.i = shl nsw i64 %conv.i541.i, 4
  %call.i543.i = call i8* @Perl_safesysrealloc(i8* %74, i64 %mul2.i542.i) #2
  %75 = bitcast i8* %call.i543.i to %struct.token_pos*
  br label %if.end217.i

if.else.i549.i:                                   ; preds = %if.then212.i
  %conv3.i545.i = sext i32 %mul.i539.i to i64
  %mul4.i546.i = shl nsw i64 %conv3.i545.i, 4
  %call5.i547.i = call i8* @Perl_safesysmalloc(i64 %mul4.i546.i) #2
  %76 = bitcast i8* %call5.i547.i to %struct.token_pos*
  %cmp624.i548.i = icmp sgt i32 %token_lim.0.load652.i, 0
  br i1 %cmp624.i548.i, label %for.body.i555.i, label %if.end217.i

for.body.i555.i:                                  ; preds = %if.else.i549.i, %for.body.i555.i
  %indvars.iv.i550.i = phi i64 [ %indvars.iv.next.i553.i, %for.body.i555.i ], [ 0, %if.else.i549.i ]
  %arrayidx.i551.i = getelementptr inbounds %struct.token_pos* %76, i64 %indvars.iv.i550.i
  %arrayidx9.i552.i = getelementptr inbounds [16 x %struct.token_pos]* %token_buf.i, i64 0, i64 %indvars.iv.i550.i
  %77 = bitcast %struct.token_pos* %arrayidx.i551.i to i8*
  %78 = bitcast %struct.token_pos* %arrayidx9.i552.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %77, i8* %78, i64 16, i32 8, i1 false) #2, !tbaa.struct !80
  %indvars.iv.next.i553.i = add nuw nsw i64 %indvars.iv.i550.i, 1
  %lftr.wideiv819 = trunc i64 %indvars.iv.next.i553.i to i32
  %exitcond820 = icmp eq i32 %lftr.wideiv819, %token_lim.0.load652.i
  br i1 %exitcond820, label %if.end217.i, label %for.body.i555.i

if.end217.i:                                      ; preds = %for.body.i555.i, %if.else.i549.i, %if.then1.i544.i, %if.end208.i
  %token_lim.0.load651.i = phi i32 [ %token_lim.0.load652.i, %if.end208.i ], [ %mul.i539.i, %if.then1.i544.i ], [ %mul.i539.i, %if.else.i549.i ], [ %mul.i539.i, %for.body.i555.i ]
  %storemerge.i514640.i = phi %struct.token_pos* [ %storemerge.i514641.i, %if.end208.i ], [ %75, %if.then1.i544.i ], [ %76, %if.else.i549.i ], [ %76, %for.body.i555.i ]
  %idxprom219.i = sext i32 %inc65.i to i64
  %beg221.i = getelementptr inbounds %struct.token_pos* %storemerge.i514640.i, i64 %idxprom219.i, i32 0
  store i8* %s.5.i, i8** %beg221.i, align 8, !tbaa !54
  %end226.i = getelementptr inbounds %struct.token_pos* %storemerge.i514640.i, i64 %idxprom219.i, i32 1
  store i8* %s.7.lcssa.i, i8** %end226.i, align 8, !tbaa !56
  br label %while.cond228.preheader.i

while.cond228.preheader.i:                        ; preds = %if.end217.i, %if.end172.i
  %token_lim.0.load649.ph.i = phi i32 [ %token_lim.0.load650.i, %if.end172.i ], [ %token_lim.0.load651.i, %if.end217.i ]
  %storemerge.i514637.ph.i = phi %struct.token_pos* [ %storemerge.i514638.i, %if.end172.i ], [ %storemerge.i514640.i, %if.end217.i ]
  %num_tokens.1.ph.i = phi i32 [ %inc164.i, %if.end172.i ], [ %inc209.i, %if.end217.i ]
  %s.8.ph.i = phi i8* [ %incdec.ptr163.i, %if.end172.i ], [ %s.7.lcssa.i, %if.end217.i ]
  br label %while.cond228.i

while.cond228.i:                                  ; preds = %while.cond228.i, %while.cond228.preheader.i
  %s.8.i = phi i8* [ %incdec.ptr235.i, %while.cond228.i ], [ %s.8.ph.i, %while.cond228.preheader.i ]
  %79 = load i8* %s.8.i, align 1, !tbaa !45
  %idxprom229.i = zext i8 %79 to i64
  %arrayidx230.i = getelementptr inbounds [256 x i8]* @hctype, i64 0, i64 %idxprom229.i
  %80 = load i8* %arrayidx230.i, align 1, !tbaa !45
  %and232.i = and i8 %80, 1
  %tobool233.i = icmp eq i8 %and232.i, 0
  %incdec.ptr235.i = getelementptr inbounds i8* %s.8.i, i64 1
  br i1 %tobool233.i, label %while.end236.i, label %while.cond228.i

while.end236.i:                                   ; preds = %while.cond228.i
  %cmp237.i = icmp eq i8* %s.8.i, %end
  br i1 %cmp237.i, label %PREMATURE.i, label %while.cond36.backedge.i

while.cond36.backedge.i:                          ; preds = %if.end250.i, %while.end236.i
  %81 = phi i8 [ %80, %while.end236.i ], [ %.pre708.i, %if.end250.i ]
  %token_lim.0.load647.be.i = phi i32 [ %token_lim.0.load649.ph.i, %while.end236.i ], [ %token_lim.0.load648.i, %if.end250.i ]
  %storemerge.i514643.be.i = phi %struct.token_pos* [ %storemerge.i514637.ph.i, %while.end236.i ], [ %storemerge.i514644.i, %if.end250.i ]
  %num_tokens.0.be.i = phi i32 [ %num_tokens.1.ph.i, %while.end236.i ], [ %inc242.i, %if.end250.i ]
  %s.2.be.i = phi i8* [ %s.8.i, %while.end236.i ], [ %s.4.i, %if.end250.i ]
  %conv39.i = zext i8 %81 to i32
  %and41.i = and i32 %conv39.i, %attr_name_first.0.i
  %tobool42.i = icmp eq i32 %and41.i, 0
  br i1 %tobool42.i, label %while.end261.i, label %while.cond47.preheader.i

if.else241.i:                                     ; preds = %if.end95.i
  %inc242.i = add nsw i32 %num_tokens.0677.i, 2
  %cmp243.i = icmp eq i32 %inc242.i, %token_lim.0.load652.i
  br i1 %cmp243.i, label %if.then245.i, label %if.end250.i

if.then245.i:                                     ; preds = %if.else241.i
  %cmp247.i = icmp eq %struct.token_pos* %storemerge.i514641.i, %arraydecay.i
  %cmp.i558.i = icmp slt i32 %token_lim.0.load652.i, 4
  %.op.i559.i = shl i32 %token_lim.0.load652.i, 1
  %mul.i560.i = select i1 %cmp.i558.i, i32 8, i32 %.op.i559.i
  br i1 %cmp247.i, label %if.else.i570.i, label %if.then1.i565.i

if.then1.i565.i:                                  ; preds = %if.then245.i
  %82 = bitcast %struct.token_pos* %storemerge.i514641.i to i8*
  %conv.i562.i = sext i32 %mul.i560.i to i64
  %mul2.i563.i = shl nsw i64 %conv.i562.i, 4
  %call.i564.i = call i8* @Perl_safesysrealloc(i8* %82, i64 %mul2.i563.i) #2
  %83 = bitcast i8* %call.i564.i to %struct.token_pos*
  br label %if.end250.i

if.else.i570.i:                                   ; preds = %if.then245.i
  %conv3.i566.i = sext i32 %mul.i560.i to i64
  %mul4.i567.i = shl nsw i64 %conv3.i566.i, 4
  %call5.i568.i = call i8* @Perl_safesysmalloc(i64 %mul4.i567.i) #2
  %84 = bitcast i8* %call5.i568.i to %struct.token_pos*
  %cmp624.i569.i = icmp sgt i32 %token_lim.0.load652.i, 0
  br i1 %cmp624.i569.i, label %for.body.i576.i, label %if.end250.i

for.body.i576.i:                                  ; preds = %if.else.i570.i, %for.body.i576.i
  %indvars.iv.i571.i = phi i64 [ %indvars.iv.next.i574.i, %for.body.i576.i ], [ 0, %if.else.i570.i ]
  %arrayidx.i572.i = getelementptr inbounds %struct.token_pos* %84, i64 %indvars.iv.i571.i
  %arrayidx9.i573.i = getelementptr inbounds [16 x %struct.token_pos]* %token_buf.i, i64 0, i64 %indvars.iv.i571.i
  %85 = bitcast %struct.token_pos* %arrayidx.i572.i to i8*
  %86 = bitcast %struct.token_pos* %arrayidx9.i573.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %85, i8* %86, i64 16, i32 8, i1 false) #2, !tbaa.struct !80
  %indvars.iv.next.i574.i = add nuw nsw i64 %indvars.iv.i571.i, 1
  %lftr.wideiv815 = trunc i64 %indvars.iv.next.i574.i to i32
  %exitcond816 = icmp eq i32 %lftr.wideiv815, %token_lim.0.load652.i
  br i1 %exitcond816, label %if.end250.i, label %for.body.i576.i

if.end250.i:                                      ; preds = %for.body.i576.i, %if.else.i570.i, %if.then1.i565.i, %if.else241.i
  %token_lim.0.load648.i = phi i32 [ %token_lim.0.load652.i, %if.else241.i ], [ %mul.i560.i, %if.then1.i565.i ], [ %mul.i560.i, %if.else.i570.i ], [ %mul.i560.i, %for.body.i576.i ]
  %storemerge.i514644.i = phi %struct.token_pos* [ %storemerge.i514641.i, %if.else241.i ], [ %83, %if.then1.i565.i ], [ %84, %if.else.i570.i ], [ %84, %for.body.i576.i ]
  %idxprom252.i = sext i32 %inc65.i to i64
  %beg254.i = getelementptr inbounds %struct.token_pos* %storemerge.i514644.i, i64 %idxprom252.i, i32 0
  %87 = bitcast i8** %beg254.i to i8*
  call void @llvm.memset.p0i8.i64(i8* %87, i8 0, i64 16, i32 8, i1 false) #2
  %.pre707.i = load i8* %s.4.i, align 1, !tbaa !45
  %idxprom37.phi.trans.insert.i = zext i8 %.pre707.i to i64
  %arrayidx38.phi.trans.insert.i = getelementptr inbounds [256 x i8]* @hctype, i64 0, i64 %idxprom37.phi.trans.insert.i
  %.pre708.i = load i8* %arrayidx38.phi.trans.insert.i, align 1, !tbaa !45
  br label %while.cond36.backedge.i

while.end261.i:                                   ; preds = %while.cond36.backedge.i, %if.end126.i, %while.cond36.preheader.i
  %storemerge.i514642.i = phi %struct.token_pos* [ %storemerge.i514639.i, %if.end126.i ], [ %arraydecay.i, %while.cond36.preheader.i ], [ %storemerge.i514643.be.i, %while.cond36.backedge.i ]
  %num_tokens.2.i = phi i32 [ %inc118.i, %if.end126.i ], [ 1, %while.cond36.preheader.i ], [ %num_tokens.0.be.i, %while.cond36.backedge.i ]
  %s.9.i = phi i8* [ %s.5.i, %if.end126.i ], [ %s.1.i, %while.cond36.preheader.i ], [ %s.2.be.i, %while.cond36.backedge.i ]
  %88 = load i8* %xml_mode.i482, align 1, !tbaa !79
  %tobool264.i = icmp eq i8 %88, 0
  br i1 %tobool264.i, label %if.end275.i, label %land.lhs.true265.i

land.lhs.true265.i:                               ; preds = %while.end261.i
  %89 = load i8* %s.9.i, align 1, !tbaa !45
  %cmp267.i = icmp eq i8 %89, 47
  br i1 %cmp267.i, label %if.then269.i, label %if.end275.i

if.then269.i:                                     ; preds = %land.lhs.true265.i
  %incdec.ptr270.i = getelementptr inbounds i8* %s.9.i, i64 1
  %cmp271.i = icmp eq i8* %incdec.ptr270.i, %end
  br i1 %cmp271.i, label %PREMATURE.i, label %if.end275.i

if.end275.i:                                      ; preds = %if.then269.i, %land.lhs.true265.i, %while.end261.i
  %empty_tag.0.i = phi i32 [ 0, %land.lhs.true265.i ], [ 0, %while.end261.i ], [ 1, %if.then269.i ]
  %s.10.i = phi i8* [ %s.9.i, %land.lhs.true265.i ], [ %s.9.i, %while.end261.i ], [ %incdec.ptr270.i, %if.then269.i ]
  %90 = load i8* %s.10.i, align 1, !tbaa !45
  %cmp277.i = icmp eq i8 %90, 62
  br i1 %cmp277.i, label %if.then279.i, label %if.end349.i

if.then279.i:                                     ; preds = %if.end275.i
  %incdec.ptr280.i = getelementptr inbounds i8* %s.10.i, i64 1
  call fastcc void @report_event(%struct.p_state* %p_state, i32 2, i8* %t.4, i8* %incdec.ptr280.i, i64 %utf8, %struct.token_pos* %storemerge.i514642.i, i32 %num_tokens.2.i, %struct.sv* %self) #2
  %tobool281.i = icmp eq i32 %empty_tag.0.i, 0
  br i1 %tobool281.i, label %if.end283.i, label %if.then282.i

if.then282.i:                                     ; preds = %if.then279.i
  call fastcc void @report_event(%struct.p_state* %p_state, i32 3, i8* %incdec.ptr280.i, i8* %incdec.ptr280.i, i64 %utf8, %struct.token_pos* %storemerge.i514642.i, i32 1, %struct.sv* %self) #2
  br label %if.end283.i

if.end283.i:                                      ; preds = %if.then282.i, %if.then279.i
  %91 = load i8* %xml_mode.i482, align 1, !tbaa !79
  %tobool285.i = icmp eq i8 %91, 0
  br i1 %tobool285.i, label %for.body.lr.ph.i, label %if.end343.i

for.body.lr.ph.i:                                 ; preds = %if.end283.i
  %end290.i = getelementptr inbounds %struct.token_pos* %storemerge.i514642.i, i64 0, i32 1
  %92 = load i8** %end290.i, align 8, !tbaa !56
  %beg292.i = getelementptr inbounds %struct.token_pos* %storemerge.i514642.i, i64 0, i32 0
  %93 = load i8** %beg292.i, align 8, !tbaa !54
  %sub.ptr.lhs.cast.i = ptrtoint i8* %92 to i64
  %sub.ptr.rhs.cast.i = ptrtoint i8* %93 to i64
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %conv293.i = trunc i64 %sub.ptr.sub.i to i32
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i, %for.body.lr.ph.i
  %indvars.iv.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next.i, %for.inc.i ]
  %94 = phi i32 [ 6, %for.body.lr.ph.i ], [ %100, %for.inc.i ]
  %cmp300.i = icmp eq i32 %conv293.i, %94
  br i1 %cmp300.i, label %if.then302.i, label %for.inc.i

if.then302.i:                                     ; preds = %for.body.i
  %str.i = getelementptr inbounds [7 x %struct.literal_tag]* bitcast (<{ { i32, i8*, i32, [4 x i8] }, { i32, i8*, i32, [4 x i8] }, { i32, i8*, i32, [4 x i8] }, { i32, i8*, i32, [4 x i8] }, { i32, i8*, i32, [4 x i8] }, { i32, i8*, i32, [4 x i8] }, { i32, i8*, i32, [4 x i8] } }>* @literal_mode_elem to [7 x %struct.literal_tag]*), i64 0, i64 %indvars.iv.i, i32 1
  %95 = load i8** %str.i, align 8, !tbaa !81
  br label %while.cond311.i

while.cond311.i:                                  ; preds = %if.end327.i, %if.then302.i
  %s304.0.i = phi i8* [ %add.ptr15.i, %if.then302.i ], [ %incdec.ptr328.i, %if.end327.i ]
  %t.0.i = phi i8* [ %95, %if.then302.i ], [ %incdec.ptr329.i, %if.end327.i ]
  %len310.0.i = phi i32 [ %conv293.i, %if.then302.i ], [ %dec.i, %if.end327.i ]
  %tobool312.i = icmp eq i32 %len310.0.i, 0
  br i1 %tobool312.i, label %for.inc.i, label %while.body313.i

while.body313.i:                                  ; preds = %while.cond311.i
  %96 = load i8* %s304.0.i, align 1, !tbaa !45
  %conv314.i = sext i8 %96 to i32
  %.off.i = add i8 %96, -65
  %97 = icmp ult i8 %.off.i, 26
  %add.i = add nsw i32 %conv314.i, 32
  %add.conv314.i = select i1 %97, i32 %add.i, i32 %conv314.i
  %98 = load i8* %t.0.i, align 1, !tbaa !45
  %conv323.i = sext i8 %98 to i32
  %cmp324.i = icmp eq i32 %add.conv314.i, %conv323.i
  br i1 %cmp324.i, label %if.end327.i, label %for.inc.i

if.end327.i:                                      ; preds = %while.body313.i
  %incdec.ptr328.i = getelementptr inbounds i8* %s304.0.i, i64 1
  %incdec.ptr329.i = getelementptr inbounds i8* %t.0.i, i64 1
  %dec.i = add nsw i32 %len310.0.i, -1
  %tobool330.i = icmp eq i32 %dec.i, 0
  br i1 %tobool330.i, label %if.then331.i, label %while.cond311.i

if.then331.i:                                     ; preds = %if.end327.i
  store i8* %95, i8** %literal_mode, align 8, !tbaa !49
  %is_cdata.i = getelementptr inbounds [7 x %struct.literal_tag]* bitcast (<{ { i32, i8*, i32, [4 x i8] }, { i32, i8*, i32, [4 x i8] }, { i32, i8*, i32, [4 x i8] }, { i32, i8*, i32, [4 x i8] }, { i32, i8*, i32, [4 x i8] }, { i32, i8*, i32, [4 x i8] }, { i32, i8*, i32, [4 x i8] } }>* @literal_mode_elem to [7 x %struct.literal_tag]*), i64 0, i64 %indvars.iv.i, i32 2
  %99 = load i32* %is_cdata.i, align 8, !tbaa !83
  %conv337.i = trunc i32 %99 to i8
  store i8 %conv337.i, i8* %is_cdata338.i, align 1, !tbaa !58
  br label %if.end343.i

for.inc.i:                                        ; preds = %while.body313.i, %while.cond311.i, %for.body.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %len.i = getelementptr inbounds [7 x %struct.literal_tag]* bitcast (<{ { i32, i8*, i32, [4 x i8] }, { i32, i8*, i32, [4 x i8] }, { i32, i8*, i32, [4 x i8] }, { i32, i8*, i32, [4 x i8] }, { i32, i8*, i32, [4 x i8] }, { i32, i8*, i32, [4 x i8] }, { i32, i8*, i32, [4 x i8] } }>* @literal_mode_elem to [7 x %struct.literal_tag]*), i64 0, i64 %indvars.iv.next.i, i32 0
  %100 = load i32* %len.i, align 8, !tbaa !84
  %tobool296.i = icmp eq i32 %100, 0
  br i1 %tobool296.i, label %if.end343.i, label %for.body.i

if.end343.i:                                      ; preds = %for.inc.i, %if.then331.i, %if.end283.i
  %cmp345.i = icmp eq %struct.token_pos* %storemerge.i514642.i, %arraydecay.i
  br i1 %cmp345.i, label %if.then303, label %if.then347.i

if.then347.i:                                     ; preds = %if.end343.i
  %101 = bitcast %struct.token_pos* %storemerge.i514642.i to i8*
  call void @Perl_safesysfree(i8* %101) #2
  br label %if.then303

if.end349.i:                                      ; preds = %if.end275.i
  %cmp351.i = icmp eq %struct.token_pos* %storemerge.i514642.i, %arraydecay.i
  br i1 %cmp351.i, label %while.cond.backedge, label %if.then353.i

if.then353.i:                                     ; preds = %if.end349.i
  %102 = bitcast %struct.token_pos* %storemerge.i514642.i to i8*
  call void @Perl_safesysfree(i8* %102) #2
  br label %while.cond.backedge

PREMATURE.i:                                      ; preds = %while.end236.i, %while.end204.i, %while.end158.i, %while.end109.i, %while.end91.i, %while.end60.i, %if.then269.i
  %storemerge.i514646.i = phi %struct.token_pos* [ %storemerge.i514642.i, %if.then269.i ], [ %storemerge.i514637.ph.i, %while.end236.i ], [ %storemerge.i514641.i, %while.end204.i ], [ %storemerge.i514641.i, %while.end158.i ], [ %storemerge.i514641.i, %while.end109.i ], [ %storemerge.i514641.i, %while.end91.i ], [ %storemerge.i514643676.i, %while.end60.i ]
  %cmp356.i = icmp eq %struct.token_pos* %storemerge.i514646.i, %arraydecay.i
  br i1 %cmp356.i, label %if.end301, label %if.then358.i

if.then358.i:                                     ; preds = %PREMATURE.i
  %103 = bitcast %struct.token_pos* %storemerge.i514646.i to i8*
  call void @Perl_safesysfree(i8* %103) #2
  br label %if.end301

if.else279:                                       ; preds = %if.end270
  switch i8 %42, label %while.cond.backedge [
    i8 47, label %if.then283
    i8 33, label %if.then289
    i8 63, label %if.then295
  ]

if.then283:                                       ; preds = %if.else279
  call void @llvm.lifetime.start(i64 16, i8* %1) #2
  call void @llvm.lifetime.start(i64 16, i8* %2) #2
  %add.ptr.i479 = getelementptr inbounds i8* %t.4, i64 2
  %104 = load i8* %strict_names.i480, align 1, !tbaa !78
  %tobool.i481 = icmp eq i8 %104, 0
  br i1 %tobool.i481, label %lor.lhs.false.i485, label %if.end.i489

lor.lhs.false.i485:                               ; preds = %if.then283
  %105 = load i8* %xml_mode.i482, align 1, !tbaa !79
  %tobool2.i483 = icmp eq i8 %105, 0
  %..i484 = select i1 %tobool2.i483, i32 8, i32 2
  %.89.i = select i1 %tobool2.i483, i32 8, i32 4
  br label %if.end.i489

if.end.i489:                                      ; preds = %lor.lhs.false.i485, %if.then283
  %name_first.0.i = phi i32 [ 2, %if.then283 ], [ %..i484, %lor.lhs.false.i485 ]
  %name_char.0.i = phi i32 [ 4, %if.then283 ], [ %.89.i, %lor.lhs.false.i485 ]
  %106 = load i8* %add.ptr.i479, align 1, !tbaa !45
  %idxprom.i486 = zext i8 %106 to i64
  %arrayidx.i487 = getelementptr inbounds [256 x i8]* @hctype, i64 0, i64 %idxprom.i486
  %107 = load i8* %arrayidx.i487, align 1, !tbaa !45
  %conv3.i = zext i8 %107 to i32
  %and.i488 = and i32 %conv3.i, %name_first.0.i
  %tobool5.i = icmp eq i32 %and.i488, 0
  br i1 %tobool5.i, label %if.else41.i, label %if.then6.i

if.then6.i:                                       ; preds = %if.end.i489
  store i8* %add.ptr.i479, i8** %beg7.i, align 8, !tbaa !54
  %incdec.ptr.i490 = getelementptr inbounds i8* %t.4, i64 3
  %cmp120.i = icmp ult i8* %incdec.ptr.i490, %end
  br i1 %cmp120.i, label %land.rhs.i493, label %while.end.i

while.cond.i492:                                  ; preds = %land.rhs.i493
  %cmp.i491 = icmp ult i8* %incdec.ptr15.i, %end
  br i1 %cmp.i491, label %land.rhs.i493, label %while.end.i

land.rhs.i493:                                    ; preds = %if.then6.i, %while.cond.i492
  %s.0121.i = phi i8* [ %incdec.ptr15.i, %while.cond.i492 ], [ %incdec.ptr.i490, %if.then6.i ]
  %108 = load i8* %s.0121.i, align 1, !tbaa !45
  %idxprom9.i = zext i8 %108 to i64
  %arrayidx10.i = getelementptr inbounds [256 x i8]* @hctype, i64 0, i64 %idxprom9.i
  %109 = load i8* %arrayidx10.i, align 1, !tbaa !45
  %conv11.i = zext i8 %109 to i32
  %and13.i = and i32 %conv11.i, %name_char.0.i
  %tobool14.i = icmp eq i32 %and13.i, 0
  %incdec.ptr15.i = getelementptr inbounds i8* %s.0121.i, i64 1
  br i1 %tobool14.i, label %while.end.i, label %while.cond.i492

while.end.i:                                      ; preds = %land.rhs.i493, %while.cond.i492, %if.then6.i
  %cmp.lcssa.i = phi i1 [ false, %if.then6.i ], [ true, %land.rhs.i493 ], [ false, %while.cond.i492 ]
  %s.0.lcssa.i494 = phi i8* [ %incdec.ptr.i490, %if.then6.i ], [ %s.0121.i, %land.rhs.i493 ], [ %incdec.ptr15.i, %while.cond.i492 ]
  store i8* %s.0.lcssa.i494, i8** %end16.i, align 8, !tbaa !56
  %110 = load i8* %strict_end.i, align 1, !tbaa !85
  %tobool17.i = icmp eq i8 %110, 0
  br i1 %tobool17.i, label %if.else28.i, label %while.cond19.i

while.cond19.i:                                   ; preds = %while.end.i, %while.cond19.i
  %s.1.i495 = phi i8* [ %incdec.ptr26.i, %while.cond19.i ], [ %s.0.lcssa.i494, %while.end.i ]
  %111 = load i8* %s.1.i495, align 1, !tbaa !45
  %idxprom20.i = zext i8 %111 to i64
  %arrayidx21.i = getelementptr inbounds [256 x i8]* @hctype, i64 0, i64 %idxprom20.i
  %112 = load i8* %arrayidx21.i, align 1, !tbaa !45
  %and23.i = and i8 %112, 1
  %tobool24.i = icmp eq i8 %and23.i, 0
  %incdec.ptr26.i = getelementptr inbounds i8* %s.1.i495, i64 1
  br i1 %tobool24.i, label %if.end29.i, label %while.cond19.i

if.else28.i:                                      ; preds = %while.end.i
  br i1 %cmp.lcssa.i, label %while.body.i.i, label %if.end301

while.body.i.i:                                   ; preds = %if.else28.i, %if.end27.i.i
  %prev.043.i.i = phi i32 [ %phitmp.i.i, %if.end27.i.i ], [ 32, %if.else28.i ]
  %quote.042.i.i = phi i8 [ %quote.1.i.i, %if.end27.i.i ], [ 0, %if.else28.i ]
  %s.040.i.i = phi i8* [ %incdec.ptr.i.i, %if.end27.i.i ], [ %s.0.lcssa.i494, %if.else28.i ]
  %tobool.i.i = icmp ne i8 %quote.042.i.i, 0
  %.pr.i.i = load i8* %s.040.i.i, align 1, !tbaa !45
  %tobool.not.i.i = xor i1 %tobool.i.i, true
  %cmp1.i.i = icmp eq i8 %.pr.i.i, 62
  %or.cond.i.i = and i1 %cmp1.i.i, %tobool.not.i.i
  br i1 %or.cond.i.i, label %if.end29.i, label %if.end.i.i

if.end.i.i:                                       ; preds = %while.body.i.i
  switch i8 %.pr.i.i, label %if.end27.i.i [
    i8 34, label %if.then9.i.i
    i8 39, label %if.then9.i.i
  ]

if.then9.i.i:                                     ; preds = %if.end.i.i, %if.end.i.i
  %cmp12.i.i = icmp eq i8 %.pr.i.i, %quote.042.i.i
  %brmerge.i.i = or i1 %cmp12.i.i, %tobool.i.i
  %.mux.i.i = select i1 %cmp12.i.i, i8 0, i8 %quote.042.i.i
  br i1 %brmerge.i.i, label %if.end27.i.i, label %land.lhs.true16.i.i

land.lhs.true16.i.i:                              ; preds = %if.then9.i.i
  switch i32 %prev.043.i.i, label %if.end27.i.i [
    i32 32, label %if.then24.i.i
    i32 61, label %if.then24.i.i
  ]

if.then24.i.i:                                    ; preds = %land.lhs.true16.i.i, %land.lhs.true16.i.i
  br label %if.end27.i.i

if.end27.i.i:                                     ; preds = %if.then24.i.i, %land.lhs.true16.i.i, %if.then9.i.i, %if.end.i.i
  %quote.1.i.i = phi i8 [ %.pr.i.i, %if.then24.i.i ], [ %quote.042.i.i, %if.end.i.i ], [ %.mux.i.i, %if.then9.i.i ], [ 0, %land.lhs.true16.i.i ]
  %incdec.ptr.i.i = getelementptr inbounds i8* %s.040.i.i, i64 1
  %phitmp.i.i = sext i8 %.pr.i.i to i32
  %cmp.i.i = icmp ult i8* %incdec.ptr.i.i, %end
  br i1 %cmp.i.i, label %while.body.i.i, label %if.end301

if.end29.i:                                       ; preds = %while.cond19.i, %while.body.i.i
  %113 = phi i8 [ 62, %while.body.i.i ], [ %111, %while.cond19.i ]
  %s.2.i = phi i8* [ %s.040.i.i, %while.body.i.i ], [ %s.1.i495, %while.cond19.i ]
  %cmp30.i = icmp ult i8* %s.2.i, %end
  br i1 %cmp30.i, label %if.then32.i, label %if.end301

if.then32.i:                                      ; preds = %if.end29.i
  %cmp34.i = icmp eq i8 %113, 62
  br i1 %cmp34.i, label %if.then36.i, label %while.cond.backedge

if.then36.i:                                      ; preds = %if.then32.i
  %incdec.ptr37.i = getelementptr inbounds i8* %s.2.i, i64 1
  call fastcc void @report_event(%struct.p_state* %p_state, i32 3, i8* %t.4, i8* %incdec.ptr37.i, i64 %utf8, %struct.token_pos* %tagname.i, i32 1, %struct.sv* %self) #2
  br label %if.then303

if.else41.i:                                      ; preds = %if.end.i489
  %114 = load i8* %strict_comment.i, align 1, !tbaa !52
  %tobool42.i496 = icmp eq i8 %114, 0
  br i1 %tobool42.i496, label %if.then43.i, label %while.cond.backedge

if.then43.i:                                      ; preds = %if.else41.i
  %cmp39.i90.i = icmp ult i8* %add.ptr.i479, %end
  br i1 %cmp39.i90.i, label %while.body.i99.i.preheader, label %if.end301

while.body.i99.i.preheader:                       ; preds = %if.then43.i
  %cmp1.i97.i715 = icmp eq i8 %106, 62
  br i1 %cmp1.i97.i715, label %skip_until_gt.exit113.i, label %if.end.i100.i

if.end.i100.i:                                    ; preds = %while.body.i99.i.preheader, %if.end27.i111.while.body.i99_crit_edge.i
  %tobool.i94.i722 = phi i1 [ %tobool.i94.i, %if.end27.i111.while.body.i99_crit_edge.i ], [ false, %while.body.i99.i.preheader ]
  %s.040.i93.i721 = phi i8* [ %incdec.ptr.i108.i, %if.end27.i111.while.body.i99_crit_edge.i ], [ %add.ptr.i479, %while.body.i99.i.preheader ]
  %quote.042.i92.i720 = phi i8 [ %quote.1.i107.i, %if.end27.i111.while.body.i99_crit_edge.i ], [ 0, %while.body.i99.i.preheader ]
  %prev.043.i91.i719 = phi i32 [ %phitmp.i109.i, %if.end27.i111.while.body.i99_crit_edge.i ], [ 32, %while.body.i99.i.preheader ]
  %.pr.i95.i717 = phi i8 [ %.pr.i95.pre.i, %if.end27.i111.while.body.i99_crit_edge.i ], [ %106, %while.body.i99.i.preheader ]
  switch i8 %.pr.i95.i717, label %if.end27.i111.i [
    i8 34, label %if.then9.i104.i
    i8 39, label %if.then9.i104.i
  ]

if.then9.i104.i:                                  ; preds = %if.end.i100.i, %if.end.i100.i
  %cmp12.i101.i = icmp eq i8 %.pr.i95.i717, %quote.042.i92.i720
  %brmerge.i102.i = or i1 %cmp12.i101.i, %tobool.i94.i722
  %.mux.i103.i = select i1 %cmp12.i101.i, i8 0, i8 %quote.042.i92.i720
  br i1 %brmerge.i102.i, label %if.end27.i111.i, label %land.lhs.true16.i105.i

land.lhs.true16.i105.i:                           ; preds = %if.then9.i104.i
  switch i32 %prev.043.i91.i719, label %if.end27.i111.i [
    i32 32, label %if.then24.i106.i
    i32 61, label %if.then24.i106.i
  ]

if.then24.i106.i:                                 ; preds = %land.lhs.true16.i105.i, %land.lhs.true16.i105.i
  br label %if.end27.i111.i

if.end27.i111.i:                                  ; preds = %if.then24.i106.i, %land.lhs.true16.i105.i, %if.then9.i104.i, %if.end.i100.i
  %quote.1.i107.i = phi i8 [ %.pr.i95.i717, %if.then24.i106.i ], [ %quote.042.i92.i720, %if.end.i100.i ], [ %.mux.i103.i, %if.then9.i104.i ], [ 0, %land.lhs.true16.i105.i ]
  %incdec.ptr.i108.i = getelementptr inbounds i8* %s.040.i93.i721, i64 1
  %cmp.i110.i = icmp ult i8* %incdec.ptr.i108.i, %end
  br i1 %cmp.i110.i, label %if.end27.i111.while.body.i99_crit_edge.i, label %if.end301

if.end27.i111.while.body.i99_crit_edge.i:         ; preds = %if.end27.i111.i
  %phitmp.i109.i = sext i8 %.pr.i95.i717 to i32
  %.pr.i95.pre.i = load i8* %incdec.ptr.i108.i, align 1, !tbaa !45
  %tobool.i94.i = icmp ne i8 %quote.1.i107.i, 0
  %tobool.not.i96.i = xor i1 %tobool.i94.i, true
  %cmp1.i97.i = icmp eq i8 %.pr.i95.pre.i, 62
  %or.cond.i98.i = and i1 %cmp1.i97.i, %tobool.not.i96.i
  br i1 %or.cond.i98.i, label %skip_until_gt.exit113.i, label %if.end.i100.i

skip_until_gt.exit113.i:                          ; preds = %if.end27.i111.while.body.i99_crit_edge.i, %while.body.i99.i.preheader
  %s.040.i93.i.lcssa = phi i8* [ %add.ptr.i479, %while.body.i99.i.preheader ], [ %incdec.ptr.i108.i, %if.end27.i111.while.body.i99_crit_edge.i ]
  %cmp45.i = icmp ult i8* %s.040.i93.i.lcssa, %end
  br i1 %cmp45.i, label %if.then47.i, label %if.end301

if.then47.i:                                      ; preds = %skip_until_gt.exit113.i
  store i8* %add.ptr.i479, i8** %beg49.i, align 8, !tbaa !54
  store i8* %s.040.i93.i.lcssa, i8** %end50.i, align 8, !tbaa !56
  %incdec.ptr51.i = getelementptr inbounds i8* %s.040.i93.i.lcssa, i64 1
  call fastcc void @report_event(%struct.p_state* %p_state, i32 1, i8* %t.4, i8* %incdec.ptr51.i, i64 %utf8, %struct.token_pos* %token.i, i32 1, %struct.sv* %self) #2
  br label %if.then303

if.then289:                                       ; preds = %if.else279
  call void @llvm.lifetime.start(i64 16, i8* %3) #2
  call void @llvm.lifetime.start(i64 16, i8* %4) #2
  %add.ptr.i500 = getelementptr inbounds i8* %t.4, i64 2
  %115 = load i8* %add.ptr.i500, align 1, !tbaa !45
  switch i8 %115, label %if.end39.i [
    i8 45, label %if.then.i
    i8 91, label %if.then17.i
    i8 62, label %if.then303.thread
  ]

if.then.i:                                        ; preds = %if.then289
  %incdec.ptr.i501 = getelementptr inbounds i8* %t.4, i64 3
  %cmp2.i = icmp eq i8* %incdec.ptr.i501, %end
  br i1 %cmp2.i, label %if.end301, label %if.end.i502

if.end.i502:                                      ; preds = %if.then.i
  %116 = load i8* %incdec.ptr.i501, align 1, !tbaa !45
  %cmp6.i = icmp eq i8 %116, 45
  br i1 %cmp6.i, label %if.end9.i, label %DECL_FAIL.i

if.end9.i:                                        ; preds = %if.end.i502
  %incdec.ptr10.i = getelementptr inbounds i8* %t.4, i64 4
  call void @llvm.lifetime.start(i64 16, i8* %6) #2
  call void @llvm.lifetime.start(i64 16, i8* %7) #2
  %117 = load i8* %strict_comment.i, align 1, !tbaa !52
  %tobool.i.i503 = icmp eq i8 %117, 0
  br i1 %tobool.i.i503, label %if.else63.i.i, label %while.cond1.outer.i.i

while.cond1.outer.i.i:                            ; preds = %if.end9.i, %if.end54.i.i
  %indvars.iv.i.i = phi i64 [ %indvars.iv.next.i.i, %if.end54.i.i ], [ 0, %if.end9.i ]
  %.ph.i.i = phi i32 [ %131, %if.end54.i.i ], [ 4, %if.end9.i ]
  %arraydecay216.ph.i.i = phi %struct.token_pos* [ %arraydecay215.i.i, %if.end54.i.i ], [ %arraydecay.i.i, %if.end9.i ]
  %s.0.ph.i.i = phi i8* [ %incdec.ptr44.i.i, %if.end54.i.i ], [ %incdec.ptr10.i, %if.end9.i ]
  %start_com.0.ph.i.i = phi i8* [ null, %if.end54.i.i ], [ %incdec.ptr10.i, %if.end9.i ]
  br label %while.cond1.outer222.i.i

while.cond1.outer222.i.i:                         ; preds = %if.then43.i.i, %while.cond1.outer.i.i
  %s.0.ph223.i.i = phi i8* [ %incdec.ptr44.i.i, %if.then43.i.i ], [ %s.0.ph.i.i, %while.cond1.outer.i.i ]
  %start_com.0.ph224.i.i = phi i8* [ %incdec.ptr44.i.i, %if.then43.i.i ], [ %start_com.0.ph.i.i, %while.cond1.outer.i.i ]
  %tobool21.i.i = icmp eq i8* %start_com.0.ph224.i.i, null
  br label %while.cond1.i.i

while.cond1.i.i:                                  ; preds = %if.end39.i.i, %if.then19.i.i, %while.body7.i.i, %while.cond1.outer222.i.i
  %s.0.i.i = phi i8* [ %s.0.ph223.i.i, %while.cond1.outer222.i.i ], [ %incdec.ptr.i.i505, %while.body7.i.i ], [ %incdec.ptr20.i.i, %if.then19.i.i ], [ %incdec.ptr20.i.i, %if.end39.i.i ]
  %cmp.i.i504 = icmp ult i8* %s.0.i.i, %end
  br i1 %cmp.i.i504, label %land.lhs.true.i.i, label %while.end.i.i

land.lhs.true.i.i:                                ; preds = %while.cond1.i.i
  %118 = load i8* %s.0.i.i, align 1, !tbaa !45
  switch i8 %118, label %while.body7.i.i [
    i8 62, label %while.end.i.i
    i8 45, label %while.end.i.i
  ]

while.body7.i.i:                                  ; preds = %land.lhs.true.i.i
  %incdec.ptr.i.i505 = getelementptr inbounds i8* %s.0.i.i, i64 1
  br label %while.cond1.i.i

while.end.i.i:                                    ; preds = %land.lhs.true.i.i, %land.lhs.true.i.i, %while.cond1.i.i
  %cmp8.i.i = icmp eq i8* %s.0.i.i, %end
  br i1 %cmp8.i.i, label %if.then10.i.i, label %if.end15.i.i

if.then10.i.i:                                    ; preds = %while.end.i.i
  %cmp12.i.i506 = icmp eq %struct.token_pos* %arraydecay216.ph.i.i, %arraydecay.i.i
  br i1 %cmp12.i.i506, label %parse_comment.exit.i, label %if.then14.i.i

if.then14.i.i:                                    ; preds = %if.then10.i.i
  %119 = bitcast %struct.token_pos* %arraydecay216.ph.i.i to i8*
  call void @Perl_safesysfree(i8* %119) #2
  br label %parse_comment.exit.i

if.end15.i.i:                                     ; preds = %while.end.i.i
  %120 = load i8* %s.0.i.i, align 1, !tbaa !45
  %cmp17.i.i = icmp eq i8 %120, 62
  %incdec.ptr20.i.i = getelementptr inbounds i8* %s.0.i.i, i64 1
  br i1 %cmp17.i.i, label %if.then19.i.i, label %if.end29.i.i

if.then19.i.i:                                    ; preds = %if.end15.i.i
  br i1 %tobool21.i.i, label %if.end23.i.i, label %while.cond1.i.i

if.end23.i.i:                                     ; preds = %if.then19.i.i
  %121 = trunc i64 %indvars.iv.i.i to i32
  call fastcc void @report_event(%struct.p_state* %p_state, i32 1, i8* %t.4, i8* %incdec.ptr20.i.i, i64 %utf8, %struct.token_pos* %arraydecay216.ph.i.i, i32 %121, %struct.sv* %self) #2
  %cmp25.i.i = icmp eq %struct.token_pos* %arraydecay216.ph.i.i, %arraydecay.i.i
  br i1 %cmp25.i.i, label %parse_comment.exit.i, label %if.then27.i.i

if.then27.i.i:                                    ; preds = %if.end23.i.i
  %122 = bitcast %struct.token_pos* %arraydecay216.ph.i.i to i8*
  call void @Perl_safesysfree(i8* %122) #2
  br label %parse_comment.exit.i

if.end29.i.i:                                     ; preds = %if.end15.i.i
  %cmp31.i.i = icmp eq i8* %incdec.ptr20.i.i, %end
  br i1 %cmp31.i.i, label %if.then33.i.i, label %if.end39.i.i

if.then33.i.i:                                    ; preds = %if.end29.i.i
  %cmp35.i.i = icmp eq %struct.token_pos* %arraydecay216.ph.i.i, %arraydecay.i.i
  br i1 %cmp35.i.i, label %parse_comment.exit.i, label %if.then37.i.i

if.then37.i.i:                                    ; preds = %if.then33.i.i
  %123 = bitcast %struct.token_pos* %arraydecay216.ph.i.i to i8*
  call void @Perl_safesysfree(i8* %123) #2
  br label %parse_comment.exit.i

if.end39.i.i:                                     ; preds = %if.end29.i.i
  %124 = load i8* %incdec.ptr20.i.i, align 1, !tbaa !45
  %cmp41.i.i = icmp eq i8 %124, 45
  br i1 %cmp41.i.i, label %if.then43.i.i, label %while.cond1.i.i

if.then43.i.i:                                    ; preds = %if.end39.i.i
  %incdec.ptr44.i.i = getelementptr inbounds i8* %s.0.i.i, i64 2
  br i1 %tobool21.i.i, label %while.cond1.outer222.i.i, label %if.then46.i.i

if.then46.i.i:                                    ; preds = %if.then43.i.i
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %125 = trunc i64 %indvars.iv.next.i.i to i32
  %cmp47.i.i = icmp eq i32 %125, %.ph.i.i
  br i1 %cmp47.i.i, label %if.then49.i.i, label %if.end54.i.i

if.then49.i.i:                                    ; preds = %if.then46.i.i
  %cmp51.i.i = icmp eq %struct.token_pos* %arraydecay216.ph.i.i, %arraydecay.i.i
  %cmp.i.i.i = icmp slt i32 %.ph.i.i, 4
  %.op.i.i.i = shl i32 %.ph.i.i, 1
  %mul.i.i.i = select i1 %cmp.i.i.i, i32 8, i32 %.op.i.i.i
  br i1 %cmp51.i.i, label %if.else.i.i.i, label %if.then1.i.i.i

if.then1.i.i.i:                                   ; preds = %if.then49.i.i
  %126 = bitcast %struct.token_pos* %arraydecay216.ph.i.i to i8*
  %conv.i.i.i = sext i32 %mul.i.i.i to i64
  %mul2.i.i.i = shl nsw i64 %conv.i.i.i, 4
  %call.i.i.i = call i8* @Perl_safesysrealloc(i8* %126, i64 %mul2.i.i.i) #2
  %127 = bitcast i8* %call.i.i.i to %struct.token_pos*
  br label %if.end54.i.i

if.else.i.i.i:                                    ; preds = %if.then49.i.i
  %conv3.i.i.i = sext i32 %mul.i.i.i to i64
  %mul4.i.i.i = shl nsw i64 %conv3.i.i.i, 4
  %call5.i.i.i = call i8* @Perl_safesysmalloc(i64 %mul4.i.i.i) #2
  %128 = bitcast i8* %call5.i.i.i to %struct.token_pos*
  %cmp624.i.i.i = icmp sgt i32 %.ph.i.i, 0
  br i1 %cmp624.i.i.i, label %for.body.i.i.i, label %if.end54.i.i

for.body.i.i.i:                                   ; preds = %if.else.i.i.i, %for.body.i.i.i
  %indvars.iv.i.i.i = phi i64 [ %indvars.iv.next.i.i.i, %for.body.i.i.i ], [ 0, %if.else.i.i.i ]
  %arrayidx.i.i.i = getelementptr inbounds %struct.token_pos* %128, i64 %indvars.iv.i.i.i
  %arrayidx9.i.i.i = getelementptr inbounds [4 x %struct.token_pos]* %token_buf.i.i, i64 0, i64 %indvars.iv.i.i.i
  %129 = bitcast %struct.token_pos* %arrayidx.i.i.i to i8*
  %130 = bitcast %struct.token_pos* %arrayidx9.i.i.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %129, i8* %130, i64 16, i32 8, i1 false) #2, !tbaa.struct !80
  %indvars.iv.next.i.i.i = add nuw nsw i64 %indvars.iv.i.i.i, 1
  %lftr.wideiv823 = trunc i64 %indvars.iv.next.i.i.i to i32
  %exitcond824 = icmp eq i32 %lftr.wideiv823, %.ph.i.i
  br i1 %exitcond824, label %if.end54.i.i, label %for.body.i.i.i

if.end54.i.i:                                     ; preds = %for.body.i.i.i, %if.else.i.i.i, %if.then1.i.i.i, %if.then46.i.i
  %131 = phi i32 [ %.ph.i.i, %if.then46.i.i ], [ %mul.i.i.i, %if.then1.i.i.i ], [ %mul.i.i.i, %if.else.i.i.i ], [ %mul.i.i.i, %for.body.i.i.i ]
  %arraydecay215.i.i = phi %struct.token_pos* [ %arraydecay216.ph.i.i, %if.then46.i.i ], [ %127, %if.then1.i.i.i ], [ %128, %if.else.i.i.i ], [ %128, %for.body.i.i.i ]
  %beg55.i.i = getelementptr inbounds %struct.token_pos* %arraydecay215.i.i, i64 %indvars.iv.i.i, i32 0
  store i8* %start_com.0.ph224.i.i, i8** %beg55.i.i, align 8, !tbaa !54
  %end60.i.i = getelementptr inbounds %struct.token_pos* %arraydecay215.i.i, i64 %indvars.iv.i.i, i32 1
  store i8* %s.0.i.i, i8** %end60.i.i, align 8, !tbaa !56
  br label %while.cond1.outer.i.i

if.else63.i.i:                                    ; preds = %if.end9.i
  %132 = load i8* %no_dash_dash_comment_end.i.i, align 1, !tbaa !53
  %tobool64.i.i = icmp eq i8 %132, 0
  br i1 %tobool64.i.i, label %if.else86.i.i, label %if.then65.i.i

if.then65.i.i:                                    ; preds = %if.else63.i.i
  store i8* %incdec.ptr10.i, i8** %beg67.i.i, align 8, !tbaa !54
  %cmp69242.i.i = icmp ult i8* %incdec.ptr10.i, %end
  br i1 %cmp69242.i.i, label %land.rhs71.i.i, label %if.else85.critedge.i.i

while.cond68.i.i:                                 ; preds = %land.rhs71.i.i
  %cmp69.i.i = icmp ult i8* %incdec.ptr77.i.i, %end
  br i1 %cmp69.i.i, label %land.rhs71.i.i, label %if.else85.critedge.i.i

land.rhs71.i.i:                                   ; preds = %if.then65.i.i, %while.cond68.i.i
  %s.1243.i.i = phi i8* [ %incdec.ptr77.i.i, %while.cond68.i.i ], [ %incdec.ptr10.i, %if.then65.i.i ]
  %133 = load i8* %s.1243.i.i, align 1, !tbaa !45
  %cmp73.i.i = icmp eq i8 %133, 62
  %incdec.ptr77.i.i = getelementptr inbounds i8* %s.1243.i.i, i64 1
  br i1 %cmp73.i.i, label %if.then82.i.i, label %while.cond68.i.i

if.then82.i.i:                                    ; preds = %land.rhs71.i.i
  store i8* %s.1243.i.i, i8** %end79.c.i.i, align 8, !tbaa !56
  call fastcc void @report_event(%struct.p_state* %p_state, i32 1, i8* %t.4, i8* %incdec.ptr77.i.i, i64 %utf8, %struct.token_pos* %token.i.i, i32 1, %struct.sv* %self) #2
  br label %parse_comment.exit.i

if.else85.critedge.i.i:                           ; preds = %while.cond68.i.i, %if.then65.i.i
  %s.1.lcssa.i.i = phi i8* [ %incdec.ptr10.i, %if.then65.i.i ], [ %incdec.ptr77.i.i, %while.cond68.i.i ]
  store i8* %s.1.lcssa.i.i, i8** %end79.c.i.i, align 8, !tbaa !56
  br label %parse_comment.exit.i

if.else86.i.i:                                    ; preds = %if.else63.i.i
  store i8* %incdec.ptr10.i, i8** %beg89.i.i, align 8, !tbaa !54
  %cmp91240.i.i = icmp ult i8* %incdec.ptr10.i, %end
  br i1 %cmp91240.i.i, label %land.rhs93.i.i, label %while.end100.thread220.i.i

while.end100.thread220.i.i:                       ; preds = %while.cond90.backedge.i.i, %if.else86.i.i
  %s.2.lcssa.i.i = phi i8* [ %incdec.ptr10.i, %if.else86.i.i ], [ %s.2.be.pre-phi.i.i, %while.cond90.backedge.i.i ]
  store i8* %s.2.lcssa.i.i, i8** %end101218.i.i, align 8, !tbaa !56
  br label %if.end133.i.i

land.rhs93.i.i:                                   ; preds = %if.else86.i.i, %while.cond90.backedge.i.i
  %134 = phi i8* [ %s.2.be.pre-phi.i.i, %while.cond90.backedge.i.i ], [ %incdec.ptr10.i, %if.else86.i.i ]
  %135 = load i8* %134, align 1, !tbaa !45
  %cmp95.i.i = icmp eq i8 %135, 45
  br i1 %cmp95.i.i, label %if.then104.i.i, label %while.body98.i.i

while.body98.i.i:                                 ; preds = %land.rhs93.i.i
  %s.2.be.pre.i.i = getelementptr inbounds i8* %134, i64 1
  br label %while.cond90.backedge.i.i

while.cond90.backedge.i.i:                        ; preds = %if.end126.i.i, %while.body98.i.i
  %s.2.be.pre-phi.i.i = phi i8* [ %s.2.be.pre.i.i, %while.body98.i.i ], [ %incdec.ptr105.i.i, %if.end126.i.i ]
  %cmp91.i.i = icmp ult i8* %s.2.be.pre-phi.i.i, %end
  br i1 %cmp91.i.i, label %land.rhs93.i.i, label %while.end100.thread220.i.i

if.then104.i.i:                                   ; preds = %land.rhs93.i.i
  store i8* %134, i8** %end101218.i.i, align 8, !tbaa !56
  %incdec.ptr105.i.i = getelementptr inbounds i8* %134, i64 1
  %136 = load i8* %incdec.ptr105.i.i, align 1, !tbaa !45
  %cmp107.i.i = icmp eq i8 %136, 45
  br i1 %cmp107.i.i, label %if.then109.i.i, label %if.end126.i.i

if.then109.i.i:                                   ; preds = %if.then104.i.i
  %incdec.ptr110.i.i = getelementptr inbounds i8* %134, i64 2
  br label %while.cond111.i.i

while.cond111.i.i:                                ; preds = %while.cond111.i.i, %if.then109.i.i
  %s.3.i.i = phi i8* [ %incdec.ptr110.i.i, %if.then109.i.i ], [ %incdec.ptr117.i.i, %while.cond111.i.i ]
  %137 = load i8* %s.3.i.i, align 1, !tbaa !45
  %idxprom112.i.i = zext i8 %137 to i64
  %arrayidx113.i.i = getelementptr inbounds [256 x i8]* @hctype, i64 0, i64 %idxprom112.i.i
  %138 = load i8* %arrayidx113.i.i, align 1, !tbaa !45
  %and.i.i = and i8 %138, 1
  %tobool115.i.i = icmp eq i8 %and.i.i, 0
  %incdec.ptr117.i.i = getelementptr inbounds i8* %s.3.i.i, i64 1
  br i1 %tobool115.i.i, label %while.end118.i.i, label %while.cond111.i.i

while.end118.i.i:                                 ; preds = %while.cond111.i.i
  %cmp120.i.i = icmp eq i8 %137, 62
  br i1 %cmp120.i.i, label %if.then122.i.i, label %if.end126.i.i

if.then122.i.i:                                   ; preds = %while.end118.i.i
  call fastcc void @report_event(%struct.p_state* %p_state, i32 1, i8* %t.4, i8* %incdec.ptr117.i.i, i64 %utf8, %struct.token_pos* %token88.i.i, i32 1, %struct.sv* %self) #2
  br label %parse_comment.exit.i

if.end126.i.i:                                    ; preds = %while.end118.i.i, %if.then104.i.i
  %s.4.i.i = phi i8* [ %s.3.i.i, %while.end118.i.i ], [ %incdec.ptr105.i.i, %if.then104.i.i ]
  %cmp127.i.i = icmp ult i8* %s.4.i.i, %end
  br i1 %cmp127.i.i, label %while.cond90.backedge.i.i, label %if.end133.i.i

if.end133.i.i:                                    ; preds = %if.end126.i.i, %while.end100.thread220.i.i
  %s.5.i.i = phi i8* [ %s.2.lcssa.i.i, %while.end100.thread220.i.i ], [ %s.4.i.i, %if.end126.i.i ]
  %cmp134.i.i = icmp eq i8* %s.5.i.i, %end
  %beg..i.i = select i1 %cmp134.i.i, i8* %incdec.ptr10.i, i8* null
  br label %parse_comment.exit.i

parse_comment.exit.i:                             ; preds = %if.end133.i.i, %if.then122.i.i, %if.else85.critedge.i.i, %if.then82.i.i, %if.then37.i.i, %if.then33.i.i, %if.then27.i.i, %if.end23.i.i, %if.then14.i.i, %if.then10.i.i
  %retval.1.i.i = phi i8* [ %incdec.ptr77.i.i, %if.then82.i.i ], [ %incdec.ptr117.i.i, %if.then122.i.i ], [ %incdec.ptr10.i, %if.then10.i.i ], [ %incdec.ptr10.i, %if.then14.i.i ], [ %incdec.ptr20.i.i, %if.end23.i.i ], [ %incdec.ptr20.i.i, %if.then27.i.i ], [ %incdec.ptr10.i, %if.then33.i.i ], [ %incdec.ptr10.i, %if.then37.i.i ], [ %incdec.ptr10.i, %if.else85.critedge.i.i ], [ %beg..i.i, %if.end133.i.i ]
  call void @llvm.lifetime.end(i64 16, i8* %6) #2
  call void @llvm.lifetime.end(i64 16, i8* %7) #2
  %cmp11.i = icmp eq i8* %retval.1.i.i, %incdec.ptr10.i
  %cond.i = select i1 %cmp11.i, i8* %t.4, i8* %retval.1.i.i
  br label %if.end301

if.then17.i:                                      ; preds = %if.then289
  %incdec.ptr20.i = getelementptr inbounds i8* %t.4, i64 3
  %139 = load i8* %marked_sections.i.i, align 1, !tbaa !86
  %tobool.i460.i = icmp eq i8 %139, 0
  br i1 %tobool.i460.i, label %DECL_FAIL.i, label %while.cond.outer.i.i

while.cond.outer.i.i:                             ; preds = %if.then17.i, %if.then69.i.i
  %tokens.0.ph.i.i = phi %struct.av* [ %tokens.1.lcssa.i.i, %if.then69.i.i ], [ null, %if.then17.i ]
  %s.0.ph.i461.i = phi i8* [ %incdec.ptr70.i.i, %if.then69.i.i ], [ %incdec.ptr20.i, %if.then17.i ]
  br label %while.cond.i.i

while.cond.i.i:                                   ; preds = %while.cond.i.i, %while.cond.outer.i.i
  %s.0.i462.i = phi i8* [ %incdec.ptr.i464.i, %while.cond.i.i ], [ %s.0.ph.i461.i, %while.cond.outer.i.i ]
  %140 = load i8* %s.0.i462.i, align 1, !tbaa !45
  %idxprom.i.i = zext i8 %140 to i64
  %arrayidx.i.i = getelementptr inbounds [256 x i8]* @hctype, i64 0, i64 %idxprom.i.i
  %141 = load i8* %arrayidx.i.i, align 1, !tbaa !45
  %and.i463.i = and i8 %141, 1
  %tobool1.i.i = icmp eq i8 %and.i463.i, 0
  %incdec.ptr.i464.i = getelementptr inbounds i8* %s.0.i462.i, i64 1
  br i1 %tobool1.i.i, label %while.cond2.preheader.i.i, label %while.cond.i.i

while.cond2.preheader.i.i:                        ; preds = %while.cond.i.i
  %and6141.i.i = and i8 %141, 2
  %tobool7142.i.i = icmp eq i8 %and6141.i.i, 0
  br i1 %tobool7142.i.i, label %while.end39.i.i, label %while.cond10.preheader.i.i

while.cond10.preheader.i.i:                       ; preds = %while.cond2.preheader.i.i, %sv_lower.exit.i.i
  %s.1144.i.i = phi i8* [ %s.3.i465.lcssa.i, %sv_lower.exit.i.i ], [ %s.0.i462.i, %while.cond2.preheader.i.i ]
  %tokens.1143.i.i = phi %struct.av* [ %tokens.2.i.i, %sv_lower.exit.i.i ], [ %tokens.0.ph.i.i, %while.cond2.preheader.i.i ]
  br label %while.cond10.i.i

while.cond10.i.i:                                 ; preds = %while.cond10.i.i, %while.cond10.preheader.i.i
  %s.1.pn.i.i = phi i8* [ %s.2.i.i, %while.cond10.i.i ], [ %s.1144.i.i, %while.cond10.preheader.i.i ]
  %s.2.i.i = getelementptr inbounds i8* %s.1.pn.i.i, i64 1
  %142 = load i8* %s.2.i.i, align 1, !tbaa !45
  %idxprom11.i.i = zext i8 %142 to i64
  %arrayidx12.i.i = getelementptr inbounds [256 x i8]* @hctype, i64 0, i64 %idxprom11.i.i
  %143 = load i8* %arrayidx12.i.i, align 1, !tbaa !45
  %and14.i.i = and i8 %143, 4
  %tobool15.i.i = icmp eq i8 %and14.i.i, 0
  br i1 %tobool15.i.i, label %while.cond19.i.preheader.i, label %while.cond10.i.i

while.cond19.i.preheader.i:                       ; preds = %while.cond10.i.i
  %and23.i703.i = and i8 %143, 1
  %tobool24.i704.i = icmp eq i8 %and23.i703.i, 0
  br i1 %tobool24.i704.i, label %while.end27.i.i, label %while.cond19.while.cond19_crit_edge.i.lr.ph.i

while.cond19.while.cond19_crit_edge.i.lr.ph.i:    ; preds = %while.cond19.i.preheader.i
  %incdec.ptr26.i705.i = getelementptr inbounds i8* %s.1.pn.i.i, i64 2
  br label %while.cond19.while.cond19_crit_edge.i.i

while.cond19.while.cond19_crit_edge.i.i:          ; preds = %while.cond19.while.cond19_crit_edge.i.i, %while.cond19.while.cond19_crit_edge.i.lr.ph.i
  %incdec.ptr26.i706.i = phi i8* [ %incdec.ptr26.i705.i, %while.cond19.while.cond19_crit_edge.i.lr.ph.i ], [ %incdec.ptr26.i.i, %while.cond19.while.cond19_crit_edge.i.i ]
  %.pre.i.i = load i8* %incdec.ptr26.i706.i, align 1, !tbaa !45
  %idxprom20.phi.trans.insert.i.i = zext i8 %.pre.i.i to i64
  %arrayidx21.phi.trans.insert.i.i = getelementptr inbounds [256 x i8]* @hctype, i64 0, i64 %idxprom20.phi.trans.insert.i.i
  %.pre155.i.i = load i8* %arrayidx21.phi.trans.insert.i.i, align 1, !tbaa !45
  %and23.i.i = and i8 %.pre155.i.i, 1
  %tobool24.i.i = icmp eq i8 %and23.i.i, 0
  %incdec.ptr26.i.i = getelementptr inbounds i8* %incdec.ptr26.i706.i, i64 1
  br i1 %tobool24.i.i, label %while.end27.i.i, label %while.cond19.while.cond19_crit_edge.i.i

while.end27.i.i:                                  ; preds = %while.cond19.while.cond19_crit_edge.i.i, %while.cond19.i.preheader.i
  %s.3.i465.lcssa.i = phi i8* [ %s.2.i.i, %while.cond19.i.preheader.i ], [ %incdec.ptr26.i706.i, %while.cond19.while.cond19_crit_edge.i.i ]
  %cmp.i466.i = icmp eq i8* %s.3.i465.lcssa.i, %end
  br i1 %cmp.i466.i, label %PREMATURE.i.i, label %if.end30.i.i

if.end30.i.i:                                     ; preds = %while.end27.i.i
  %tobool31.i.i = icmp eq %struct.av* %tokens.1143.i.i, null
  br i1 %tobool31.i.i, label %if.then32.i.i, label %if.end33.i.i

if.then32.i.i:                                    ; preds = %if.end30.i.i
  %call.i.i = call %struct.av* @Perl_newAV() #2
  br label %if.end33.i.i

if.end33.i.i:                                     ; preds = %if.then32.i.i, %if.end30.i.i
  %tokens.2.i.i = phi %struct.av* [ %tokens.1143.i.i, %if.end30.i.i ], [ %call.i.i, %if.then32.i.i ]
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %s.2.i.i to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %s.1144.i.i to i64
  %sub.ptr.sub.i.i = sub i64 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i.i
  %call34.i.i = call %struct.sv* @Perl_newSVpvn(i8* %s.1144.i.i, i64 %sub.ptr.sub.i.i) #2
  %sv_flags.i.phi.trans.insert.i.i = getelementptr inbounds %struct.sv* %call34.i.i, i64 0, i32 2
  %.pre156.i.i = load i64* %sv_flags.i.phi.trans.insert.i.i, align 8, !tbaa !1
  br i1 %tobool35.i.i, label %if.end37.i.i, label %if.then36.i.i

if.then36.i.i:                                    ; preds = %if.end33.i.i
  %or.i.i = or i64 %.pre156.i.i, 536870912
  store i64 %or.i.i, i64* %sv_flags.i.phi.trans.insert.i.i, align 8, !tbaa !1
  br label %if.end37.i.i

if.end37.i.i:                                     ; preds = %if.then36.i.i, %if.end33.i.i
  %144 = phi i64 [ %or.i.i, %if.then36.i.i ], [ %.pre156.i.i, %if.end33.i.i ]
  call void @llvm.lifetime.start(i64 8, i8* %8) #2
  %and.i.i.i = and i64 %144, 10223616
  %cmp.i.i467.i = icmp eq i64 %and.i.i.i, 262144
  br i1 %cmp.i.i467.i, label %cond.true.i.i.i, label %cond.false.i.i.i

cond.true.i.i.i:                                  ; preds = %if.end37.i.i
  %sv_any.i.i.i = getelementptr inbounds %struct.sv* %call34.i.i, i64 0, i32 0
  %145 = load i8** %sv_any.i.i.i, align 8, !tbaa !7
  %xpv_cur.i.i.i = getelementptr inbounds i8* %145, i64 8
  %146 = bitcast i8* %xpv_cur.i.i.i to i64*
  %147 = load i64* %146, align 8, !tbaa !42
  store i64 %147, i64* %len.i.i.i, align 8, !tbaa !27
  %xpv_pv.i.i.i = bitcast i8* %145 to i8**
  %148 = load i8** %xpv_pv.i.i.i, align 8, !tbaa !44
  br label %for.cond.i.i.i

cond.false.i.i.i:                                 ; preds = %if.end37.i.i
  %call.i.i468.i = call i8* @Perl_sv_pvn_force_flags(%struct.sv* %call34.i.i, i64* %len.i.i.i, i64 2) #2
  br label %for.condthread-pre-split.i.i.i

for.condthread-pre-split.i.i.i:                   ; preds = %for.body.i.i469.i, %cond.false.i.i.i
  %s.0.ph.i.i.i = phi i8* [ %call.i.i468.i, %cond.false.i.i.i ], [ %incdec.ptr.i.i.i, %for.body.i.i469.i ]
  %.pr.i.i.i = load i64* %len.i.i.i, align 8, !tbaa !27
  br label %for.cond.i.i.i

for.cond.i.i.i:                                   ; preds = %for.condthread-pre-split.i.i.i, %cond.true.i.i.i
  %149 = phi i64 [ %.pr.i.i.i, %for.condthread-pre-split.i.i.i ], [ %147, %cond.true.i.i.i ]
  %s.0.i.i.i = phi i8* [ %s.0.ph.i.i.i, %for.condthread-pre-split.i.i.i ], [ %148, %cond.true.i.i.i ]
  %dec.i.i.i = add i64 %149, -1
  store i64 %dec.i.i.i, i64* %len.i.i.i, align 8, !tbaa !27
  %tobool.i.i.i = icmp eq i64 %149, 0
  br i1 %tobool.i.i.i, label %sv_lower.exit.i.i, label %for.body.i.i469.i

for.body.i.i469.i:                                ; preds = %for.cond.i.i.i
  %150 = load i8* %s.0.i.i.i, align 1, !tbaa !45
  %.off.i.i.i = add i8 %150, -65
  %151 = icmp ult i8 %.off.i.i.i, 26
  %add.i.i.i = add i8 %150, 32
  %add..i.i.i = select i1 %151, i8 %add.i.i.i, i8 %150
  store i8 %add..i.i.i, i8* %s.0.i.i.i, align 1, !tbaa !45
  %incdec.ptr.i.i.i = getelementptr inbounds i8* %s.0.i.i.i, i64 1
  br label %for.condthread-pre-split.i.i.i

sv_lower.exit.i.i:                                ; preds = %for.cond.i.i.i
  call void @llvm.lifetime.end(i64 8, i8* %8) #2
  call void @Perl_av_push(%struct.av* %tokens.2.i.i, %struct.sv* %call34.i.i) #2
  %152 = load i8* %s.3.i465.lcssa.i, align 1, !tbaa !45
  %idxprom3.i.i = zext i8 %152 to i64
  %arrayidx4.i.i = getelementptr inbounds [256 x i8]* @hctype, i64 0, i64 %idxprom3.i.i
  %153 = load i8* %arrayidx4.i.i, align 1, !tbaa !45
  %and6.i.i = and i8 %153, 2
  %tobool7.i.i = icmp eq i8 %and6.i.i, 0
  br i1 %tobool7.i.i, label %while.end39.i.i, label %while.cond10.preheader.i.i

while.end39.i.i:                                  ; preds = %sv_lower.exit.i.i, %while.cond2.preheader.i.i
  %.lcssa.i.i = phi i8 [ %140, %while.cond2.preheader.i.i ], [ %152, %sv_lower.exit.i.i ]
  %s.1.lcssa.i470.i = phi i8* [ %s.0.i462.i, %while.cond2.preheader.i.i ], [ %s.3.i465.lcssa.i, %sv_lower.exit.i.i ]
  %tokens.1.lcssa.i.i = phi %struct.av* [ %tokens.0.ph.i.i, %while.cond2.preheader.i.i ], [ %tokens.2.i.i, %sv_lower.exit.i.i ]
  switch i8 %.lcssa.i.i, label %FAIL.i.i [
    i8 45, label %if.then43.i472.i
    i8 91, label %if.then76.i.i
  ]

if.then43.i472.i:                                 ; preds = %while.end39.i.i
  %incdec.ptr44.i471.i = getelementptr inbounds i8* %s.1.lcssa.i470.i, i64 1
  %154 = load i8* %incdec.ptr44.i471.i, align 1, !tbaa !45
  %cmp46.i.i = icmp eq i8 %154, 45
  br i1 %cmp46.i.i, label %if.then48.i.i, label %FAIL.i.i

if.then48.i.i:                                    ; preds = %if.then43.i472.i
  %incdec.ptr49.i.i = getelementptr inbounds i8* %s.1.lcssa.i470.i, i64 2
  br label %while.cond52.i.i

while.cond52.i.i:                                 ; preds = %if.end64.i.i, %while.body58.i.i, %if.then48.i.i
  %s.4.i473.i = phi i8* [ %incdec.ptr49.i.i, %if.then48.i.i ], [ %incdec.ptr59.i.i, %while.body58.i.i ], [ %incdec.ptr65.i.i, %if.end64.i.i ]
  %cmp53.i.i = icmp ult i8* %s.4.i473.i, %end
  br i1 %cmp53.i.i, label %land.rhs.i.i, label %while.end60.i.i

land.rhs.i.i:                                     ; preds = %while.cond52.i.i
  %155 = load i8* %s.4.i473.i, align 1, !tbaa !45
  %cmp56.i.i = icmp eq i8 %155, 45
  br i1 %cmp56.i.i, label %while.end60.i.i, label %while.body58.i.i

while.body58.i.i:                                 ; preds = %land.rhs.i.i
  %incdec.ptr59.i.i = getelementptr inbounds i8* %s.4.i473.i, i64 1
  br label %while.cond52.i.i

while.end60.i.i:                                  ; preds = %land.rhs.i.i, %while.cond52.i.i
  %cmp61.i.i = icmp eq i8* %s.4.i473.i, %end
  br i1 %cmp61.i.i, label %PREMATURE.i.i, label %if.end64.i.i

if.end64.i.i:                                     ; preds = %while.end60.i.i
  %incdec.ptr65.i.i = getelementptr inbounds i8* %s.4.i473.i, i64 1
  %156 = load i8* %incdec.ptr65.i.i, align 1, !tbaa !45
  %cmp67.i.i = icmp eq i8 %156, 45
  br i1 %cmp67.i.i, label %if.then69.i.i, label %while.cond52.i.i

if.then69.i.i:                                    ; preds = %if.end64.i.i
  %incdec.ptr70.i.i = getelementptr inbounds i8* %s.4.i473.i, i64 2
  br label %while.cond.outer.i.i

if.then76.i.i:                                    ; preds = %while.end39.i.i
  %incdec.ptr77.i474.i = getelementptr inbounds i8* %s.1.lcssa.i470.i, i64 1
  %tobool78.i.i = icmp eq %struct.av* %tokens.1.lcssa.i.i, null
  br i1 %tobool78.i.i, label %if.then79.i.i, label %if.end82.i.i

if.then79.i.i:                                    ; preds = %if.then76.i.i
  %call80.i.i = call %struct.av* @Perl_newAV() #2
  %call81.i.i = call %struct.sv* @Perl_newSVpvn(i8* getelementptr inbounds ([8 x i8]* @.str97, i64 0, i64 0), i64 7) #2
  call void @Perl_av_push(%struct.av* %call80.i.i, %struct.sv* %call81.i.i) #2
  br label %if.end82.i.i

if.end82.i.i:                                     ; preds = %if.then79.i.i, %if.then76.i.i
  %tokens.3.i.i = phi %struct.av* [ %tokens.1.lcssa.i.i, %if.then76.i.i ], [ %call80.i.i, %if.then79.i.i ]
  %157 = load %struct.av** %ms_stack, align 8, !tbaa !16
  %tobool83.i.i = icmp eq %struct.av* %157, null
  br i1 %tobool83.i.i, label %if.then84.i.i, label %if.end87.i.i

if.then84.i.i:                                    ; preds = %if.end82.i.i
  %call85.i.i = call %struct.av* @Perl_newAV() #2
  store %struct.av* %call85.i.i, %struct.av** %ms_stack, align 8, !tbaa !16
  br label %if.end87.i.i

if.end87.i.i:                                     ; preds = %if.then84.i.i, %if.end82.i.i
  %158 = phi %struct.av* [ %157, %if.end82.i.i ], [ %call85.i.i, %if.then84.i.i ]
  %159 = bitcast %struct.av* %tokens.3.i.i to %struct.sv*
  %call89.i.i = call %struct.sv* @Perl_newRV_noinc(%struct.sv* %159) #2
  call void @Perl_av_push(%struct.av* %158, %struct.sv* %call89.i.i) #2
  call fastcc void @marked_section_update(%struct.p_state* %p_state) #2
  call fastcc void @report_event(%struct.p_state* %p_state, i32 10, i8* %incdec.ptr20.i, i8* %incdec.ptr77.i474.i, i64 %utf8, %struct.token_pos* null, i32 0, %struct.sv* %self) #2
  br label %if.end23.i

FAIL.i.i:                                         ; preds = %if.then43.i472.i, %while.end39.i.i
  %160 = bitcast %struct.av* %tokens.1.lcssa.i.i to %struct.sv*
  call void @Perl_sv_free(%struct.sv* %160) #2
  br label %DECL_FAIL.i

PREMATURE.i.i:                                    ; preds = %while.end27.i.i, %while.end60.i.i
  %tokens.1131.i.i = phi %struct.av* [ %tokens.1.lcssa.i.i, %while.end60.i.i ], [ %tokens.1143.i.i, %while.end27.i.i ]
  %161 = bitcast %struct.av* %tokens.1131.i.i to %struct.sv*
  call void @Perl_sv_free(%struct.sv* %161) #2
  br label %if.end23.i

if.end23.i:                                       ; preds = %PREMATURE.i.i, %if.end87.i.i
  %retval.0.i.ph.i = phi i8* [ %incdec.ptr20.i, %PREMATURE.i.i ], [ %incdec.ptr77.i474.i, %if.end87.i.i ]
  %cmp24.i = icmp eq i8* %retval.0.i.ph.i, %incdec.ptr20.i
  %cond29.i = select i1 %cmp24.i, i8* %t.4, i8* %retval.0.i.ph.i
  br label %if.end301

if.then303.thread:                                ; preds = %if.then289
  store i8* %add.ptr.i500, i8** %beg36.i, align 8, !tbaa !54
  store i8* %add.ptr.i500, i8** %end37.i, align 8, !tbaa !56
  %incdec.ptr38.i = getelementptr inbounds i8* %t.4, i64 3
  call fastcc void @report_event(%struct.p_state* %p_state, i32 1, i8* %t.4, i8* %incdec.ptr38.i, i64 %utf8, %struct.token_pos* %token.i498, i32 1, %struct.sv* %self) #2
  br label %while.cond.backedge

if.end39.i:                                       ; preds = %if.then289
  %.off.i507 = add i8 %115, -65
  %162 = icmp ult i8 %.off.i507, 26
  %.off644.i = add i8 %115, -97
  %163 = icmp ult i8 %.off644.i, 26
  %or.cond.i508 = or i1 %162, %163
  br i1 %or.cond.i508, label %if.then53.i, label %DECL_FAIL.i

if.then53.i:                                      ; preds = %if.end39.i
  call void @llvm.lifetime.start(i64 128, i8* %5) #2
  %incdec.ptr60.i = getelementptr inbounds i8* %t.4, i64 3
  %cmp61699.i = icmp ult i8* %incdec.ptr60.i, %end
  br i1 %cmp61699.i, label %land.rhs.i515, label %while.end.i520

while.cond.i511:                                  ; preds = %land.rhs.i515
  %cmp61.i510 = icmp ult i8* %incdec.ptr65.i, %end
  br i1 %cmp61.i510, label %land.rhs.i515, label %while.end.i520

land.rhs.i515:                                    ; preds = %if.then53.i, %while.cond.i511
  %s.0700.i = phi i8* [ %incdec.ptr65.i, %while.cond.i511 ], [ %incdec.ptr60.i, %if.then53.i ]
  %164 = load i8* %s.0700.i, align 1, !tbaa !45
  %idxprom.i512 = zext i8 %164 to i64
  %arrayidx.i513 = getelementptr inbounds [256 x i8]* @hctype, i64 0, i64 %idxprom.i512
  %165 = load i8* %arrayidx.i513, align 1, !tbaa !45
  %and.i514 = and i8 %165, 4
  %tobool64.i = icmp eq i8 %and.i514, 0
  %incdec.ptr65.i = getelementptr inbounds i8* %s.0700.i, i64 1
  br i1 %tobool64.i, label %while.end.i520, label %while.cond.i511

while.end.i520:                                   ; preds = %land.rhs.i515, %while.cond.i511, %if.then53.i
  %s.0.lcssa.i516 = phi i8* [ %incdec.ptr60.i, %if.then53.i ], [ %s.0700.i, %land.rhs.i515 ], [ %incdec.ptr65.i, %while.cond.i511 ]
  %sub.ptr.lhs.cast.i517 = ptrtoint i8* %s.0.lcssa.i516 to i64
  %sub.ptr.rhs.cast.i518 = ptrtoint i8* %add.ptr.i500 to i64
  %sub.ptr.sub.i519 = sub i64 %sub.ptr.lhs.cast.i517, %sub.ptr.rhs.cast.i518
  switch i64 %sub.ptr.sub.i519, label %DECL_FAIL.i [
    i64 7, label %land.lhs.true68.i
    i64 6, label %land.lhs.true75.i
  ]

land.lhs.true68.i:                                ; preds = %while.end.i520
  %166 = load i8* %xml_mode.i482, align 1, !tbaa !79
  %lnot.i = icmp eq i8 %166, 0
  br label %while.body.i.i522

while.body.i.i522:                                ; preds = %if.end31.i.while.body.i_crit_edge.i, %land.lhs.true68.i
  %167 = phi i8 [ %115, %land.lhs.true68.i ], [ %.pre.i523, %if.end31.i.while.body.i_crit_edge.i ]
  %dec48.in.i.i = phi i64 [ 6, %land.lhs.true68.i ], [ %phitmp765.i, %if.end31.i.while.body.i_crit_edge.i ]
  %s2.addr.047.i.i = phi i8* [ getelementptr inbounds ([8 x i8]* @.str95, i64 0, i64 0), %land.lhs.true68.i ], [ %incdec.ptr32.i.i, %if.end31.i.while.body.i_crit_edge.i ]
  %s1.addr.046.i.i = phi i8* [ %add.ptr.i500, %land.lhs.true68.i ], [ %incdec.ptr.i477.i, %if.end31.i.while.body.i_crit_edge.i ]
  %conv.i.i = sext i8 %167 to i32
  br i1 %lnot.i, label %if.then.i476.i, label %if.else.i.i

if.then.i476.i:                                   ; preds = %while.body.i.i522
  %.off.i.i = add i8 %167, -65
  %168 = icmp ult i8 %.off.i.i, 26
  %add.i.i = add nsw i32 %conv.i.i, 32
  %add.conv.i.i = select i1 %168, i32 %add.i.i, i32 %conv.i.i
  %169 = load i8* %s2.addr.047.i.i, align 1, !tbaa !45
  %conv8.i.i = sext i8 %169 to i32
  %.off43.i.i = add i8 %169, -65
  %170 = icmp ult i8 %.off43.i.i, 26
  %add17.i.i = add nsw i32 %conv8.i.i, 32
  %cond21.i.i = select i1 %170, i32 %add17.i.i, i32 %conv8.i.i
  %cmp22.i.i = icmp eq i32 %add.conv.i.i, %cond21.i.i
  br i1 %cmp22.i.i, label %if.end31.i.i, label %DECL_FAIL.i

if.else.i.i:                                      ; preds = %while.body.i.i522
  %171 = load i8* %s2.addr.047.i.i, align 1, !tbaa !45
  %cmp27.i.i = icmp eq i8 %167, %171
  br i1 %cmp27.i.i, label %if.end31.i.i, label %DECL_FAIL.i

if.end31.i.i:                                     ; preds = %if.else.i.i, %if.then.i476.i
  %incdec.ptr.i477.i = getelementptr inbounds i8* %s1.addr.046.i.i, i64 1
  %tobool.i478.i = icmp eq i64 %dec48.in.i.i, 0
  br i1 %tobool.i478.i, label %if.end91.i, label %if.end31.i.while.body.i_crit_edge.i

if.end31.i.while.body.i_crit_edge.i:              ; preds = %if.end31.i.i
  %incdec.ptr32.i.i = getelementptr inbounds i8* %s2.addr.047.i.i, i64 1
  %.pre.i523 = load i8* %incdec.ptr.i477.i, align 1, !tbaa !45
  %phitmp765.i = add i64 %dec48.in.i.i, -1
  br label %while.body.i.i522

land.lhs.true75.i:                                ; preds = %while.end.i520
  %.pre763.i = load i8* %xml_mode.i482, align 1, !tbaa !79
  %lnot78.i = icmp eq i8 %.pre763.i, 0
  br label %while.body.i486.i

while.body.i486.i:                                ; preds = %if.end31.i501.while.body.i486_crit_edge.i, %land.lhs.true75.i
  %172 = phi i8 [ %115, %land.lhs.true75.i ], [ %.pre764.i, %if.end31.i501.while.body.i486_crit_edge.i ]
  %dec48.in.i481.i = phi i64 [ 5, %land.lhs.true75.i ], [ %phitmp.i, %if.end31.i501.while.body.i486_crit_edge.i ]
  %s2.addr.047.i482.i = phi i8* [ getelementptr inbounds ([7 x i8]* @.str96, i64 0, i64 0), %land.lhs.true75.i ], [ %incdec.ptr32.i499.i, %if.end31.i501.while.body.i486_crit_edge.i ]
  %s1.addr.046.i483.i = phi i8* [ %add.ptr.i500, %land.lhs.true75.i ], [ %incdec.ptr.i498.i, %if.end31.i501.while.body.i486_crit_edge.i ]
  %conv.i485.i = sext i8 %172 to i32
  br i1 %lnot78.i, label %if.then.i495.i, label %if.else.i497.i

if.then.i495.i:                                   ; preds = %while.body.i486.i
  %.off.i487.i = add i8 %172, -65
  %173 = icmp ult i8 %.off.i487.i, 26
  %add.i488.i = add nsw i32 %conv.i485.i, 32
  %add.conv.i489.i = select i1 %173, i32 %add.i488.i, i32 %conv.i485.i
  %174 = load i8* %s2.addr.047.i482.i, align 1, !tbaa !45
  %conv8.i490.i = sext i8 %174 to i32
  %.off43.i491.i = add i8 %174, -65
  %175 = icmp ult i8 %.off43.i491.i, 26
  %add17.i492.i = add nsw i32 %conv8.i490.i, 32
  %cond21.i493.i = select i1 %175, i32 %add17.i492.i, i32 %conv8.i490.i
  %cmp22.i494.i = icmp eq i32 %add.conv.i489.i, %cond21.i493.i
  br i1 %cmp22.i494.i, label %if.end31.i501.i, label %DECL_FAIL.i

if.else.i497.i:                                   ; preds = %while.body.i486.i
  %176 = load i8* %s2.addr.047.i482.i, align 1, !tbaa !45
  %cmp27.i496.i = icmp eq i8 %172, %176
  br i1 %cmp27.i496.i, label %if.end31.i501.i, label %DECL_FAIL.i

if.end31.i501.i:                                  ; preds = %if.else.i497.i, %if.then.i495.i
  %incdec.ptr.i498.i = getelementptr inbounds i8* %s1.addr.046.i483.i, i64 1
  %tobool.i500.i = icmp eq i64 %dec48.in.i481.i, 0
  br i1 %tobool.i500.i, label %if.end91.i, label %if.end31.i501.while.body.i486_crit_edge.i

if.end31.i501.while.body.i486_crit_edge.i:        ; preds = %if.end31.i501.i
  %incdec.ptr32.i499.i = getelementptr inbounds i8* %s2.addr.047.i482.i, i64 1
  %.pre764.i = load i8* %incdec.ptr.i498.i, align 1, !tbaa !45
  %phitmp.i = add i64 %dec48.in.i481.i, -1
  br label %while.body.i486.i

if.end91.i:                                       ; preds = %if.end31.i501.i, %if.end31.i.i
  store i8* %add.ptr.i500, i8** %beg94.i, align 16, !tbaa !54
  store i8* %s.0.lcssa.i516, i8** %end99.i, align 8, !tbaa !56
  %cmp101686.i = icmp ult i8* %s.0.lcssa.i516, %end
  br i1 %cmp101686.i, label %land.rhs103.i, label %while.end283.i

land.rhs103.i:                                    ; preds = %if.end91.i, %while.cond100.backedge.i
  %s.1690.i = phi i8* [ %s.1.be.i, %while.cond100.backedge.i ], [ %s.0.lcssa.i516, %if.end91.i ]
  %num_tokens.0689.i = phi i32 [ %num_tokens.0.be.i530, %while.cond100.backedge.i ], [ 1, %if.end91.i ]
  %tokens.0.621688.i = phi %struct.token_pos* [ %tokens.0.621.be.i, %while.cond100.backedge.i ], [ %arraydecay.i509, %if.end91.i ]
  %mul.i514628687.i = phi i32 [ %mul.i514628.be.i, %while.cond100.backedge.i ], [ 8, %if.end91.i ]
  %177 = load i8* %s.1690.i, align 1, !tbaa !45
  %idxprom104.i = zext i8 %177 to i64
  %arrayidx105.i = getelementptr inbounds [256 x i8]* @hctype, i64 0, i64 %idxprom104.i
  %178 = load i8* %arrayidx105.i, align 1, !tbaa !45
  %and107.i = and i8 %178, 1
  %tobool108.i = icmp eq i8 %and107.i, 0
  br i1 %tobool108.i, label %while.end283.i, label %while.cond112.i

while.cond112.i:                                  ; preds = %land.rhs103.i, %land.rhs115.i
  %s.1.pn.i = phi i8* [ %s.2.i524, %land.rhs115.i ], [ %s.1690.i, %land.rhs103.i ]
  %s.2.i524 = getelementptr inbounds i8* %s.1.pn.i, i64 1
  %cmp113.i = icmp ult i8* %s.2.i524, %end
  br i1 %cmp113.i, label %land.rhs115.i, label %while.end124.i

land.rhs115.i:                                    ; preds = %while.cond112.i
  %179 = load i8* %s.2.i524, align 1, !tbaa !45
  %idxprom116.i = zext i8 %179 to i64
  %arrayidx117.i = getelementptr inbounds [256 x i8]* @hctype, i64 0, i64 %idxprom116.i
  %180 = load i8* %arrayidx117.i, align 1, !tbaa !45
  %and119.i = and i8 %180, 1
  %tobool120.i = icmp eq i8 %and119.i, 0
  br i1 %tobool120.i, label %while.end124.i, label %while.cond112.i

while.end124.i:                                   ; preds = %land.rhs115.i, %while.cond112.i
  %cmp125.i = icmp eq i8* %s.2.i524, %end
  br i1 %cmp125.i, label %PREMATURE.i536, label %if.end128.i

if.end128.i:                                      ; preds = %while.end124.i
  %181 = load i8* %s.2.i524, align 1, !tbaa !45
  switch i8 %181, label %while.cond244.i [
    i8 34, label %while.cond139.i
    i8 39, label %while.cond139.i
    i8 45, label %if.then177.i
    i8 62, label %while.end283.i
  ]

while.cond139.i:                                  ; preds = %if.end128.i, %if.end128.i, %land.rhs142.i
  %s.2.pn458.i = phi i8* [ %s.3.i525, %land.rhs142.i ], [ %s.2.i524, %if.end128.i ], [ %s.2.i524, %if.end128.i ]
  %s.3.i525 = getelementptr inbounds i8* %s.2.pn458.i, i64 1
  %cmp140.i = icmp ult i8* %s.3.i525, %end
  br i1 %cmp140.i, label %land.rhs142.i, label %while.end150.i

land.rhs142.i:                                    ; preds = %while.cond139.i
  %182 = load i8* %s.3.i525, align 1, !tbaa !45
  %cmp145.i = icmp eq i8 %182, %181
  br i1 %cmp145.i, label %while.end150.i, label %while.cond139.i

while.end150.i:                                   ; preds = %land.rhs142.i, %while.cond139.i
  %cmp151.i = icmp eq i8* %s.3.i525, %end
  br i1 %cmp151.i, label %PREMATURE.i536, label %if.end154.i

if.end154.i:                                      ; preds = %while.end150.i
  %incdec.ptr155.i = getelementptr inbounds i8* %s.2.pn458.i, i64 2
  %inc156.i = add nsw i32 %num_tokens.0689.i, 1
  %cmp157.i = icmp eq i32 %inc156.i, %mul.i514628687.i
  br i1 %cmp157.i, label %if.then159.i, label %if.end164.i

if.then159.i:                                     ; preds = %if.end154.i
  %cmp161.i = icmp eq %struct.token_pos* %tokens.0.621688.i, %arraydecay.i509
  %cmp.i512.i = icmp slt i32 %mul.i514628687.i, 4
  %.op.i513.i = shl i32 %mul.i514628687.i, 1
  %mul.i514.i = select i1 %cmp.i512.i, i32 8, i32 %.op.i513.i
  br i1 %cmp161.i, label %if.else.i524.i, label %if.then1.i519.i

if.then1.i519.i:                                  ; preds = %if.then159.i
  %183 = bitcast %struct.token_pos* %tokens.0.621688.i to i8*
  %conv.i516.i = sext i32 %mul.i514.i to i64
  %mul2.i517.i = shl nsw i64 %conv.i516.i, 4
  %call.i518.i = call i8* @Perl_safesysrealloc(i8* %183, i64 %mul2.i517.i) #2
  %184 = bitcast i8* %call.i518.i to %struct.token_pos*
  br label %if.end164.i

if.else.i524.i:                                   ; preds = %if.then159.i
  %conv3.i520.i = sext i32 %mul.i514.i to i64
  %mul4.i521.i = shl nsw i64 %conv3.i520.i, 4
  %call5.i522.i = call i8* @Perl_safesysmalloc(i64 %mul4.i521.i) #2
  %185 = bitcast i8* %call5.i522.i to %struct.token_pos*
  %cmp624.i523.i = icmp sgt i32 %mul.i514628687.i, 0
  br i1 %cmp624.i523.i, label %for.body.i530.i, label %if.end164.i

for.body.i530.i:                                  ; preds = %if.else.i524.i, %for.body.i530.i
  %indvars.iv.i525.i = phi i64 [ %indvars.iv.next.i528.i, %for.body.i530.i ], [ 0, %if.else.i524.i ]
  %arrayidx.i526.i = getelementptr inbounds %struct.token_pos* %185, i64 %indvars.iv.i525.i
  %arrayidx9.i527.i = getelementptr inbounds [8 x %struct.token_pos]* %token_buf.i499, i64 0, i64 %indvars.iv.i525.i
  %186 = bitcast %struct.token_pos* %arrayidx.i526.i to i8*
  %187 = bitcast %struct.token_pos* %arrayidx9.i527.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %186, i8* %187, i64 16, i32 8, i1 false) #2, !tbaa.struct !80
  %indvars.iv.next.i528.i = add nuw nsw i64 %indvars.iv.i525.i, 1
  %lftr.wideiv827 = trunc i64 %indvars.iv.next.i528.i to i32
  %exitcond828 = icmp eq i32 %lftr.wideiv827, %mul.i514628687.i
  br i1 %exitcond828, label %if.end164.i, label %for.body.i530.i

if.end164.i:                                      ; preds = %for.body.i530.i, %if.else.i524.i, %if.then1.i519.i, %if.end154.i
  %mul.i514627.i = phi i32 [ %mul.i514628687.i, %if.end154.i ], [ %mul.i514.i, %if.then1.i519.i ], [ %mul.i514.i, %if.else.i524.i ], [ %mul.i514.i, %for.body.i530.i ]
  %tokens.0.620.i = phi %struct.token_pos* [ %tokens.0.621688.i, %if.end154.i ], [ %184, %if.then1.i519.i ], [ %185, %if.else.i524.i ], [ %185, %for.body.i530.i ]
  %idxprom166.i = sext i32 %num_tokens.0689.i to i64
  %beg168.i = getelementptr inbounds %struct.token_pos* %tokens.0.620.i, i64 %idxprom166.i, i32 0
  store i8* %s.2.i524, i8** %beg168.i, align 8, !tbaa !54
  %end173.i = getelementptr inbounds %struct.token_pos* %tokens.0.620.i, i64 %idxprom166.i, i32 1
  store i8* %incdec.ptr155.i, i8** %end173.i, align 8, !tbaa !56
  br label %while.cond100.backedge.i

if.then177.i:                                     ; preds = %if.end128.i
  %incdec.ptr179.i = getelementptr inbounds i8* %s.1.pn.i, i64 2
  %cmp180.i = icmp eq i8* %incdec.ptr179.i, %end
  br i1 %cmp180.i, label %PREMATURE.i536, label %if.end183.i

if.end183.i:                                      ; preds = %if.then177.i
  %188 = load i8* %incdec.ptr179.i, align 1, !tbaa !45
  %cmp185.i526 = icmp eq i8 %188, 45
  br i1 %cmp185.i526, label %if.end188.i, label %FAIL.i

if.end188.i:                                      ; preds = %if.end183.i
  %incdec.ptr189.i = getelementptr inbounds i8* %s.1.pn.i, i64 3
  br label %while.cond192.i

while.cond192.i:                                  ; preds = %if.end211.i, %while.body200.i, %if.end188.i
  %s.4.i527 = phi i8* [ %incdec.ptr189.i, %if.end188.i ], [ %incdec.ptr201.i, %while.body200.i ], [ %incdec.ptr207.i, %if.end211.i ]
  %cmp193.i = icmp ult i8* %s.4.i527, %end
  br i1 %cmp193.i, label %land.rhs195.i, label %while.end202.i

land.rhs195.i:                                    ; preds = %while.cond192.i
  %189 = load i8* %s.4.i527, align 1, !tbaa !45
  %cmp197.i = icmp eq i8 %189, 45
  br i1 %cmp197.i, label %while.end202.i, label %while.body200.i

while.body200.i:                                  ; preds = %land.rhs195.i
  %incdec.ptr201.i = getelementptr inbounds i8* %s.4.i527, i64 1
  br label %while.cond192.i

while.end202.i:                                   ; preds = %land.rhs195.i, %while.cond192.i
  %cmp203.i = icmp eq i8* %s.4.i527, %end
  br i1 %cmp203.i, label %PREMATURE.i536, label %if.end206.i

if.end206.i:                                      ; preds = %while.end202.i
  %incdec.ptr207.i = getelementptr inbounds i8* %s.4.i527, i64 1
  %cmp208.i = icmp eq i8* %incdec.ptr207.i, %end
  br i1 %cmp208.i, label %PREMATURE.i536, label %if.end211.i

if.end211.i:                                      ; preds = %if.end206.i
  %190 = load i8* %incdec.ptr207.i, align 1, !tbaa !45
  %cmp213.i = icmp eq i8 %190, 45
  br i1 %cmp213.i, label %if.then215.i, label %while.cond192.i

if.then215.i:                                     ; preds = %if.end211.i
  %incdec.ptr216.i = getelementptr inbounds i8* %s.4.i527, i64 2
  %inc217.i = add nsw i32 %num_tokens.0689.i, 1
  %cmp218.i = icmp eq i32 %inc217.i, %mul.i514628687.i
  br i1 %cmp218.i, label %if.then220.i, label %if.end225.i

if.then220.i:                                     ; preds = %if.then215.i
  %cmp222.i = icmp eq %struct.token_pos* %tokens.0.621688.i, %arraydecay.i509
  %cmp.i533.i = icmp slt i32 %mul.i514628687.i, 4
  %.op.i534.i = shl i32 %mul.i514628687.i, 1
  %mul.i535.i = select i1 %cmp.i533.i, i32 8, i32 %.op.i534.i
  br i1 %cmp222.i, label %if.else.i545.i, label %if.then1.i540.i

if.then1.i540.i:                                  ; preds = %if.then220.i
  %191 = bitcast %struct.token_pos* %tokens.0.621688.i to i8*
  %conv.i537.i = sext i32 %mul.i535.i to i64
  %mul2.i538.i = shl nsw i64 %conv.i537.i, 4
  %call.i539.i = call i8* @Perl_safesysrealloc(i8* %191, i64 %mul2.i538.i) #2
  %192 = bitcast i8* %call.i539.i to %struct.token_pos*
  br label %if.end225.i

if.else.i545.i:                                   ; preds = %if.then220.i
  %conv3.i541.i = sext i32 %mul.i535.i to i64
  %mul4.i542.i = shl nsw i64 %conv3.i541.i, 4
  %call5.i543.i = call i8* @Perl_safesysmalloc(i64 %mul4.i542.i) #2
  %193 = bitcast i8* %call5.i543.i to %struct.token_pos*
  %cmp624.i544.i = icmp sgt i32 %mul.i514628687.i, 0
  br i1 %cmp624.i544.i, label %for.body.i551.i, label %if.end225.i

for.body.i551.i:                                  ; preds = %if.else.i545.i, %for.body.i551.i
  %indvars.iv.i546.i = phi i64 [ %indvars.iv.next.i549.i, %for.body.i551.i ], [ 0, %if.else.i545.i ]
  %arrayidx.i547.i = getelementptr inbounds %struct.token_pos* %193, i64 %indvars.iv.i546.i
  %arrayidx9.i548.i = getelementptr inbounds [8 x %struct.token_pos]* %token_buf.i499, i64 0, i64 %indvars.iv.i546.i
  %194 = bitcast %struct.token_pos* %arrayidx.i547.i to i8*
  %195 = bitcast %struct.token_pos* %arrayidx9.i548.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %194, i8* %195, i64 16, i32 8, i1 false) #2, !tbaa.struct !80
  %indvars.iv.next.i549.i = add nuw nsw i64 %indvars.iv.i546.i, 1
  %lftr.wideiv825 = trunc i64 %indvars.iv.next.i549.i to i32
  %exitcond826 = icmp eq i32 %lftr.wideiv825, %mul.i514628687.i
  br i1 %exitcond826, label %if.end225.i, label %for.body.i551.i

if.end225.i:                                      ; preds = %for.body.i551.i, %if.else.i545.i, %if.then1.i540.i, %if.then215.i
  %mul.i514626.i = phi i32 [ %mul.i514628687.i, %if.then215.i ], [ %mul.i535.i, %if.then1.i540.i ], [ %mul.i535.i, %if.else.i545.i ], [ %mul.i535.i, %for.body.i551.i ]
  %tokens.0.619.i = phi %struct.token_pos* [ %tokens.0.621688.i, %if.then215.i ], [ %192, %if.then1.i540.i ], [ %193, %if.else.i545.i ], [ %193, %for.body.i551.i ]
  %idxprom227.i = sext i32 %num_tokens.0689.i to i64
  %beg229.i = getelementptr inbounds %struct.token_pos* %tokens.0.619.i, i64 %idxprom227.i, i32 0
  store i8* %s.2.i524, i8** %beg229.i, align 8, !tbaa !54
  %end234.i = getelementptr inbounds %struct.token_pos* %tokens.0.619.i, i64 %idxprom227.i, i32 1
  store i8* %incdec.ptr216.i, i8** %end234.i, align 8, !tbaa !56
  br label %while.cond100.backedge.i

while.cond100.backedge.i:                         ; preds = %if.end269.i, %if.end225.i, %if.end164.i
  %mul.i514628.be.i = phi i32 [ %mul.i514627.i, %if.end164.i ], [ %mul.i514626.i, %if.end225.i ], [ %mul.i514629.i, %if.end269.i ]
  %tokens.0.621.be.i = phi %struct.token_pos* [ %tokens.0.620.i, %if.end164.i ], [ %tokens.0.619.i, %if.end225.i ], [ %tokens.0.622.i, %if.end269.i ]
  %num_tokens.0.be.i530 = phi i32 [ %inc156.i, %if.end164.i ], [ %inc217.i, %if.end225.i ], [ %inc261.i, %if.end269.i ]
  %s.1.be.i = phi i8* [ %incdec.ptr155.i, %if.end164.i ], [ %incdec.ptr216.i, %if.end225.i ], [ %s.5.i532, %if.end269.i ]
  %cmp101.i = icmp ult i8* %s.1.be.i, %end
  br i1 %cmp101.i, label %land.rhs103.i, label %while.end283.i

while.cond244.i:                                  ; preds = %if.end128.i, %land.rhs247.i
  %s.2.pn.i531 = phi i8* [ %s.5.i532, %land.rhs247.i ], [ %s.2.i524, %if.end128.i ]
  %s.5.i532 = getelementptr inbounds i8* %s.2.pn.i531, i64 1
  %cmp245.i = icmp ult i8* %s.5.i532, %end
  br i1 %cmp245.i, label %land.rhs247.i, label %while.end256.i

land.rhs247.i:                                    ; preds = %while.cond244.i
  %196 = load i8* %s.5.i532, align 1, !tbaa !45
  %idxprom248.i = zext i8 %196 to i64
  %arrayidx249.i = getelementptr inbounds [256 x i8]* @hctype, i64 0, i64 %idxprom248.i
  %197 = load i8* %arrayidx249.i, align 1, !tbaa !45
  %and251.i = and i8 %197, 8
  %tobool252.i = icmp eq i8 %and251.i, 0
  br i1 %tobool252.i, label %while.end256.i, label %while.cond244.i

while.end256.i:                                   ; preds = %land.rhs247.i, %while.cond244.i
  %cmp257.i = icmp eq i8* %s.5.i532, %end
  br i1 %cmp257.i, label %PREMATURE.i536, label %if.end260.i

if.end260.i:                                      ; preds = %while.end256.i
  %inc261.i = add nsw i32 %num_tokens.0689.i, 1
  %cmp262.i = icmp eq i32 %inc261.i, %mul.i514628687.i
  br i1 %cmp262.i, label %if.then264.i, label %if.end269.i

if.then264.i:                                     ; preds = %if.end260.i
  %cmp266.i = icmp eq %struct.token_pos* %tokens.0.621688.i, %arraydecay.i509
  %cmp.i554.i = icmp slt i32 %mul.i514628687.i, 4
  %.op.i555.i = shl i32 %mul.i514628687.i, 1
  %mul.i556.i = select i1 %cmp.i554.i, i32 8, i32 %.op.i555.i
  br i1 %cmp266.i, label %if.else.i566.i, label %if.then1.i561.i

if.then1.i561.i:                                  ; preds = %if.then264.i
  %198 = bitcast %struct.token_pos* %tokens.0.621688.i to i8*
  %conv.i558.i = sext i32 %mul.i556.i to i64
  %mul2.i559.i = shl nsw i64 %conv.i558.i, 4
  %call.i560.i = call i8* @Perl_safesysrealloc(i8* %198, i64 %mul2.i559.i) #2
  %199 = bitcast i8* %call.i560.i to %struct.token_pos*
  br label %if.end269.i

if.else.i566.i:                                   ; preds = %if.then264.i
  %conv3.i562.i = sext i32 %mul.i556.i to i64
  %mul4.i563.i = shl nsw i64 %conv3.i562.i, 4
  %call5.i564.i = call i8* @Perl_safesysmalloc(i64 %mul4.i563.i) #2
  %200 = bitcast i8* %call5.i564.i to %struct.token_pos*
  %cmp624.i565.i = icmp sgt i32 %mul.i514628687.i, 0
  br i1 %cmp624.i565.i, label %for.body.i572.i, label %if.end269.i

for.body.i572.i:                                  ; preds = %if.else.i566.i, %for.body.i572.i
  %indvars.iv.i567.i = phi i64 [ %indvars.iv.next.i570.i, %for.body.i572.i ], [ 0, %if.else.i566.i ]
  %arrayidx.i568.i = getelementptr inbounds %struct.token_pos* %200, i64 %indvars.iv.i567.i
  %arrayidx9.i569.i = getelementptr inbounds [8 x %struct.token_pos]* %token_buf.i499, i64 0, i64 %indvars.iv.i567.i
  %201 = bitcast %struct.token_pos* %arrayidx.i568.i to i8*
  %202 = bitcast %struct.token_pos* %arrayidx9.i569.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %201, i8* %202, i64 16, i32 8, i1 false) #2, !tbaa.struct !80
  %indvars.iv.next.i570.i = add nuw nsw i64 %indvars.iv.i567.i, 1
  %lftr.wideiv829 = trunc i64 %indvars.iv.next.i570.i to i32
  %exitcond830 = icmp eq i32 %lftr.wideiv829, %mul.i514628687.i
  br i1 %exitcond830, label %if.end269.i, label %for.body.i572.i

if.end269.i:                                      ; preds = %for.body.i572.i, %if.else.i566.i, %if.then1.i561.i, %if.end260.i
  %mul.i514629.i = phi i32 [ %mul.i514628687.i, %if.end260.i ], [ %mul.i556.i, %if.then1.i561.i ], [ %mul.i556.i, %if.else.i566.i ], [ %mul.i556.i, %for.body.i572.i ]
  %tokens.0.622.i = phi %struct.token_pos* [ %tokens.0.621688.i, %if.end260.i ], [ %199, %if.then1.i561.i ], [ %200, %if.else.i566.i ], [ %200, %for.body.i572.i ]
  %idxprom271.i = sext i32 %num_tokens.0689.i to i64
  %beg273.i = getelementptr inbounds %struct.token_pos* %tokens.0.622.i, i64 %idxprom271.i, i32 0
  store i8* %s.2.i524, i8** %beg273.i, align 8, !tbaa !54
  %end278.i = getelementptr inbounds %struct.token_pos* %tokens.0.622.i, i64 %idxprom271.i, i32 1
  store i8* %s.5.i532, i8** %end278.i, align 8, !tbaa !56
  br label %while.cond100.backedge.i

while.end283.i:                                   ; preds = %while.cond100.backedge.i, %if.end128.i, %land.rhs103.i, %if.end91.i
  %num_tokens.0.lcssa.i = phi i32 [ 1, %if.end91.i ], [ %num_tokens.0.be.i530, %while.cond100.backedge.i ], [ %num_tokens.0689.i, %if.end128.i ], [ %num_tokens.0689.i, %land.rhs103.i ]
  %tokens.0.621.lcssa.i = phi %struct.token_pos* [ %arraydecay.i509, %if.end91.i ], [ %tokens.0.621.be.i, %while.cond100.backedge.i ], [ %tokens.0.621688.i, %if.end128.i ], [ %tokens.0.621688.i, %land.rhs103.i ]
  %s.6.i533 = phi i8* [ %s.0.lcssa.i516, %if.end91.i ], [ %s.1.be.i, %while.cond100.backedge.i ], [ %s.2.i524, %if.end128.i ], [ %s.1690.i, %land.rhs103.i ]
  %cmp284.i = icmp eq i8* %s.6.i533, %end
  br i1 %cmp284.i, label %PREMATURE.i536, label %if.end287.i

if.end287.i:                                      ; preds = %while.end283.i
  %203 = load i8* %s.6.i533, align 1, !tbaa !45
  %cmp289.i = icmp eq i8 %203, 62
  br i1 %cmp289.i, label %if.then291.i, label %FAIL.i

if.then291.i:                                     ; preds = %if.end287.i
  %incdec.ptr292.i = getelementptr inbounds i8* %s.6.i533, i64 1
  call fastcc void @report_event(%struct.p_state* %p_state, i32 0, i8* %t.4, i8* %incdec.ptr292.i, i64 %utf8, %struct.token_pos* %tokens.0.621.lcssa.i, i32 %num_tokens.0.lcssa.i, %struct.sv* %self) #2
  %cmp294.i = icmp eq %struct.token_pos* %tokens.0.621.lcssa.i, %arraydecay.i509
  br i1 %cmp294.i, label %if.then303, label %if.then296.i

if.then296.i:                                     ; preds = %if.then291.i
  %204 = bitcast %struct.token_pos* %tokens.0.621.lcssa.i to i8*
  call void @Perl_safesysfree(i8* %204) #2
  br label %if.then303

FAIL.i:                                           ; preds = %if.end183.i, %if.end287.i
  %tokens.0.621654.i = phi %struct.token_pos* [ %tokens.0.621.lcssa.i, %if.end287.i ], [ %tokens.0.621688.i, %if.end183.i ]
  %s.7.i = phi i8* [ %s.6.i533, %if.end287.i ], [ %incdec.ptr179.i, %if.end183.i ]
  %cmp300.i534 = icmp eq %struct.token_pos* %tokens.0.621654.i, %arraydecay.i509
  br i1 %cmp300.i534, label %DECL_FAIL.i, label %if.then302.i535

if.then302.i535:                                  ; preds = %FAIL.i
  %205 = bitcast %struct.token_pos* %tokens.0.621654.i to i8*
  call void @Perl_safesysfree(i8* %205) #2
  br label %DECL_FAIL.i

PREMATURE.i536:                                   ; preds = %while.end256.i, %if.then177.i, %while.end150.i, %while.end124.i, %if.end206.i, %while.end202.i, %while.end283.i
  %tokens.0.621655.i = phi %struct.token_pos* [ %tokens.0.621.lcssa.i, %while.end283.i ], [ %tokens.0.621688.i, %while.end202.i ], [ %tokens.0.621688.i, %if.end206.i ], [ %tokens.0.621688.i, %while.end124.i ], [ %tokens.0.621688.i, %while.end150.i ], [ %tokens.0.621688.i, %if.then177.i ], [ %tokens.0.621688.i, %while.end256.i ]
  %cmp305.i = icmp eq %struct.token_pos* %tokens.0.621655.i, %arraydecay.i509
  br i1 %cmp305.i, label %if.end301, label %if.then307.i

if.then307.i:                                     ; preds = %PREMATURE.i536
  %206 = bitcast %struct.token_pos* %tokens.0.621655.i to i8*
  call void @Perl_safesysfree(i8* %206) #2
  br label %if.end301

DECL_FAIL.i:                                      ; preds = %if.else.i497.i, %if.then.i495.i, %if.else.i.i, %if.then.i476.i, %if.then302.i535, %FAIL.i, %while.end.i520, %if.end39.i, %FAIL.i.i, %if.then17.i, %if.end.i502
  %s.10.i537 = phi i8* [ %incdec.ptr.i501, %if.end.i502 ], [ %incdec.ptr20.i, %FAIL.i.i ], [ %incdec.ptr20.i, %if.then17.i ], [ %s.7.i, %FAIL.i ], [ %s.7.i, %if.then302.i535 ], [ %s.0.lcssa.i516, %while.end.i520 ], [ %add.ptr.i500, %if.end39.i ], [ %s.0.lcssa.i516, %if.then.i476.i ], [ %s.0.lcssa.i516, %if.else.i.i ], [ %s.0.lcssa.i516, %if.then.i495.i ], [ %s.0.lcssa.i516, %if.else.i497.i ]
  %207 = load i8* %strict_comment.i, align 1, !tbaa !52
  %tobool310.i = icmp eq i8 %207, 0
  br i1 %tobool310.i, label %if.end312.i, label %while.cond.backedge

if.end312.i:                                      ; preds = %DECL_FAIL.i
  %cmp39.i.i = icmp ult i8* %s.10.i537, %end
  br i1 %cmp39.i.i, label %while.body.i576.i, label %if.end301

while.body.i576.i:                                ; preds = %if.end312.i, %if.end27.i.i554
  %prev.043.i.i539 = phi i32 [ %phitmp.i.i553, %if.end27.i.i554 ], [ 32, %if.end312.i ]
  %quote.042.i.i540 = phi i8 [ %quote.1.i.i552, %if.end27.i.i554 ], [ 0, %if.end312.i ]
  %s.040.i.i541 = phi i8* [ %incdec.ptr.i578.i, %if.end27.i.i554 ], [ %s.10.i537, %if.end312.i ]
  %tobool.i575.i = icmp ne i8 %quote.042.i.i540, 0
  %.pr.i.i542 = load i8* %s.040.i.i541, align 1, !tbaa !45
  %tobool.not.i.i543 = xor i1 %tobool.i575.i, true
  %cmp1.i.i544 = icmp eq i8 %.pr.i.i542, 62
  %or.cond.i.i545 = and i1 %cmp1.i.i544, %tobool.not.i.i543
  br i1 %or.cond.i.i545, label %skip_until_gt.exit.i, label %if.end.i.i546

if.end.i.i546:                                    ; preds = %while.body.i576.i
  switch i8 %.pr.i.i542, label %if.end27.i.i554 [
    i8 34, label %if.then9.i.i549
    i8 39, label %if.then9.i.i549
  ]

if.then9.i.i549:                                  ; preds = %if.end.i.i546, %if.end.i.i546
  %cmp12.i577.i = icmp eq i8 %.pr.i.i542, %quote.042.i.i540
  %brmerge.i.i547 = or i1 %cmp12.i577.i, %tobool.i575.i
  %.mux.i.i548 = select i1 %cmp12.i577.i, i8 0, i8 %quote.042.i.i540
  br i1 %brmerge.i.i547, label %if.end27.i.i554, label %land.lhs.true16.i.i550

land.lhs.true16.i.i550:                           ; preds = %if.then9.i.i549
  switch i32 %prev.043.i.i539, label %if.end27.i.i554 [
    i32 32, label %if.then24.i.i551
    i32 61, label %if.then24.i.i551
  ]

if.then24.i.i551:                                 ; preds = %land.lhs.true16.i.i550, %land.lhs.true16.i.i550
  br label %if.end27.i.i554

if.end27.i.i554:                                  ; preds = %if.then24.i.i551, %land.lhs.true16.i.i550, %if.then9.i.i549, %if.end.i.i546
  %quote.1.i.i552 = phi i8 [ %.pr.i.i542, %if.then24.i.i551 ], [ %quote.042.i.i540, %if.end.i.i546 ], [ %.mux.i.i548, %if.then9.i.i549 ], [ 0, %land.lhs.true16.i.i550 ]
  %incdec.ptr.i578.i = getelementptr inbounds i8* %s.040.i.i541, i64 1
  %phitmp.i.i553 = sext i8 %.pr.i.i542 to i32
  %cmp.i579.i = icmp ult i8* %incdec.ptr.i578.i, %end
  br i1 %cmp.i579.i, label %while.body.i576.i, label %if.end301

skip_until_gt.exit.i:                             ; preds = %while.body.i576.i
  %cmp314.i = icmp ult i8* %s.040.i.i541, %end
  br i1 %cmp314.i, label %if.then316.i, label %if.end301

if.then316.i:                                     ; preds = %skip_until_gt.exit.i
  store i8* %add.ptr.i500, i8** %beg320.i, align 8, !tbaa !54
  store i8* %s.040.i.i541, i8** %end321.i, align 8, !tbaa !56
  %incdec.ptr322.i = getelementptr inbounds i8* %s.040.i.i541, i64 1
  call fastcc void @report_event(%struct.p_state* %p_state, i32 1, i8* %t.4, i8* %incdec.ptr322.i, i64 %utf8, %struct.token_pos* %token318.i, i32 1, %struct.sv* %self) #2
  br label %if.then303

if.then295:                                       ; preds = %if.else279
  call void @llvm.lifetime.start(i64 16, i8* %9) #2
  %add.ptr.i555 = getelementptr inbounds i8* %t.4, i64 2
  store i8* %add.ptr.i555, i8** %beg1.i, align 8, !tbaa !54
  %cmp33.i = icmp ult i8* %add.ptr.i555, %end
  br i1 %cmp33.i, label %while.body.lr.ph.i, label %if.end301

while.body.lr.ph.i:                               ; preds = %if.then295
  %sub.ptr.rhs.cast.i557 = ptrtoint i8* %t.4 to i64
  br label %while.body.i

while.body.i:                                     ; preds = %while.cond.backedge.i, %while.body.lr.ph.i
  %s.034.i = phi i8* [ %add.ptr.i555, %while.body.lr.ph.i ], [ %s.0.be.i, %while.cond.backedge.i ]
  %208 = load i8* %s.034.i, align 1, !tbaa !45
  %cmp2.i558 = icmp eq i8 %208, 62
  br i1 %cmp2.i558, label %if.then.i561, label %if.end15.i

if.then.i561:                                     ; preds = %while.body.i
  store i8* %s.034.i, i8** %end4.i, align 8, !tbaa !56
  %incdec.ptr.i559 = getelementptr inbounds i8* %s.034.i, i64 1
  %209 = load i8* %xml_mode.i482, align 1, !tbaa !79
  %tobool.i560 = icmp eq i8 %209, 0
  br i1 %tobool.i560, label %if.end14.i568, label %if.then5.i

if.then5.i:                                       ; preds = %if.then.i561
  %sub.ptr.lhs.cast.i562 = ptrtoint i8* %incdec.ptr.i559 to i64
  %sub.ptr.sub.i563 = sub i64 %sub.ptr.lhs.cast.i562, %sub.ptr.rhs.cast.i557
  %cmp6.i564 = icmp slt i64 %sub.ptr.sub.i563, 4
  br i1 %cmp6.i564, label %while.cond.backedge.i, label %lor.lhs.false.i566

lor.lhs.false.i566:                               ; preds = %if.then5.i
  %arrayidx.i565 = getelementptr inbounds i8* %s.034.i, i64 -1
  %210 = load i8* %arrayidx.i565, align 1, !tbaa !45
  %cmp9.i = icmp eq i8 %210, 63
  br i1 %cmp9.i, label %if.end.i567, label %while.cond.backedge.i

if.end.i567:                                      ; preds = %lor.lhs.false.i566
  store i8* %arrayidx.i565, i8** %end4.i, align 8, !tbaa !56
  br label %if.end14.i568

if.end14.i568:                                    ; preds = %if.then.i561, %if.end.i567
  call fastcc void @report_event(%struct.p_state* %p_state, i32 5, i8* %t.4, i8* %incdec.ptr.i559, i64 %utf8, %struct.token_pos* %token_pos.i, i32 1, %struct.sv* %self) #2
  br label %if.then303

if.end15.i:                                       ; preds = %while.body.i
  %incdec.ptr16.i = getelementptr inbounds i8* %s.034.i, i64 1
  br label %while.cond.backedge.i

while.cond.backedge.i:                            ; preds = %if.end15.i, %lor.lhs.false.i566, %if.then5.i
  %s.0.be.i = phi i8* [ %incdec.ptr.i559, %if.then5.i ], [ %incdec.ptr.i559, %lor.lhs.false.i566 ], [ %incdec.ptr16.i, %if.end15.i ]
  %cmp.i569 = icmp ult i8* %s.0.be.i, %end
  br i1 %cmp.i569, label %while.body.i, label %if.end301

if.end301:                                        ; preds = %while.cond.backedge.i, %if.end27.i.i554, %if.end27.i.i, %if.end27.i111.i, %if.then295, %skip_until_gt.exit.i, %if.end312.i, %if.then307.i, %PREMATURE.i536, %if.end23.i, %parse_comment.exit.i, %if.then.i, %skip_until_gt.exit113.i, %if.then43.i, %if.end29.i, %if.else28.i, %if.then358.i, %PREMATURE.i, %while.end31.i
  %new_pos.0 = phi i8* [ %t.4, %PREMATURE.i ], [ %t.4, %if.then358.i ], [ %t.4, %while.end31.i ], [ %t.4, %if.end29.i ], [ %t.4, %skip_until_gt.exit113.i ], [ %t.4, %if.else28.i ], [ %t.4, %if.then43.i ], [ %cond.i, %parse_comment.exit.i ], [ %cond29.i, %if.end23.i ], [ %t.4, %if.then.i ], [ %t.4, %skip_until_gt.exit.i ], [ %t.4, %if.end312.i ], [ %t.4, %PREMATURE.i536 ], [ %t.4, %if.then307.i ], [ %t.4, %if.then295 ], [ %t.4, %if.end27.i111.i ], [ %t.4, %if.end27.i.i ], [ %t.4, %if.end27.i.i554 ], [ %t.4, %while.cond.backedge.i ]
  %tobool302 = icmp eq i8* %new_pos.0, null
  br i1 %tobool302, label %while.cond.backedge, label %if.then303

while.cond.backedge:                              ; preds = %if.then303.thread, %DECL_FAIL.i, %if.then32.i, %if.else41.i, %if.then353.i, %if.end349.i, %if.end301, %if.then303, %if.else279
  %t.0.be = phi i8* [ %t.4, %if.end301 ], [ %new_pos.0840, %if.then303 ], [ %t.4, %if.else279 ], [ %t.4, %if.end349.i ], [ %t.4, %if.then353.i ], [ %t.4, %if.else41.i ], [ %t.4, %if.then32.i ], [ %t.4, %DECL_FAIL.i ], [ %incdec.ptr38.i, %if.then303.thread ]
  %s.0.be = phi i8* [ %incdec.ptr271, %if.end301 ], [ %new_pos.0840, %if.then303 ], [ %incdec.ptr271, %if.else279 ], [ %incdec.ptr271, %if.end349.i ], [ %incdec.ptr271, %if.then353.i ], [ %incdec.ptr271, %if.else41.i ], [ %incdec.ptr271, %if.then32.i ], [ %incdec.ptr271, %DECL_FAIL.i ], [ %incdec.ptr38.i, %if.then303.thread ]
  %211 = load i8* %eof, align 1, !tbaa !48
  %lnot = icmp eq i8 %211, 0
  br i1 %lnot, label %while.cond1.preheader, label %DONE

if.then303:                                       ; preds = %if.end14.i568, %if.then296.i, %if.then291.i, %if.then316.i, %if.then47.i, %if.then36.i, %if.then347.i, %if.end343.i, %if.end301
  %new_pos.0840 = phi i8* [ %new_pos.0, %if.end301 ], [ %incdec.ptr280.i, %if.end343.i ], [ %incdec.ptr280.i, %if.then347.i ], [ %incdec.ptr37.i, %if.then36.i ], [ %incdec.ptr51.i, %if.then47.i ], [ %incdec.ptr322.i, %if.then316.i ], [ %incdec.ptr292.i, %if.then291.i ], [ %incdec.ptr292.i, %if.then296.i ], [ %incdec.ptr.i559, %if.end14.i568 ]
  %cmp304 = icmp eq i8* %new_pos.0840, %t.4
  br i1 %cmp304, label %DONE, label %while.cond.backedge

DONE:                                             ; preds = %if.end266, %while.cond.backedge, %if.then303, %while.end, %if.end162, %entry, %if.end259, %if.then263
  %s.14 = phi i8* [ %incdec.ptr260, %if.then263 ], [ %t.3.ph.lcssa, %if.end259 ], [ %beg, %entry ], [ %t.2.ph, %if.end162 ], [ %t.0725, %while.end ], [ %s.8.lcssa838, %if.end266 ], [ %s.0.be, %while.cond.backedge ], [ %t.4, %if.then303 ]
  ret i8* %s.14
}

; Function Attrs: nounwind uwtable
define internal fastcc void @report_event(%struct.p_state* %p_state, i32 %event, i8* %beg, i8* %end, i64 %utf8, %struct.token_pos* nocapture readonly %tokens, i32 %num_tokens, %struct.sv* %self) #0 {
entry:
  %len.i1415 = alloca i64, align 8
  %len.i1392 = alloca i64, align 8
  %len.i1369 = alloca i64, align 8
  %len.i = alloca i64, align 8
  %my_na = alloca i64, align 8
  %t = alloca %struct.token_pos, align 8
  %dummy = alloca i8, align 1
  %offset1 = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 2
  %0 = load i64* %offset1, align 8, !tbaa !62
  %line2 = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 3
  %1 = load i64* %line2, align 8, !tbaa !63
  %column3 = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 4
  %2 = load i64* %column3, align 8, !tbaa !59
  %pending_end_tag = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 10
  %3 = load i8** %pending_end_tag, align 8, !tbaa !51
  %tobool = icmp ne i8* %3, null
  %cmp = icmp ne i32 %event, 4
  %or.cond = and i1 %tobool, %cmp
  %cmp5 = icmp ne i32 %event, 1
  %or.cond1039 = and i1 %or.cond, %cmp5
  br i1 %or.cond1039, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %beg7 = getelementptr inbounds %struct.token_pos* %t, i64 0, i32 0
  store i8* %3, i8** %beg7, align 8, !tbaa !54
  %call = call i64 @strlen(i8* %3) #2
  %add.ptr = getelementptr inbounds i8* %3, i64 %call
  %end10 = getelementptr inbounds %struct.token_pos* %t, i64 0, i32 1
  store i8* %add.ptr, i8** %end10, align 8, !tbaa !56
  store i8* null, i8** %pending_end_tag, align 8, !tbaa !51
  call fastcc void @report_event(%struct.p_state* %p_state, i32 3, i8* %dummy, i8* %dummy, i64 0, %struct.token_pos* %t, i32 1, %struct.sv* %self)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %sp.0 = load %struct.sv*** @PL_stack_sp, align 8
  %tobool12 = icmp ne i64 %utf8, 0
  br i1 %tobool12, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end
  %call13 = call i64 @Perl_utf8_distance(i8* %end, i8* %beg) #2
  br label %cond.end

cond.false:                                       ; preds = %if.end
  %sub.ptr.lhs.cast = ptrtoint i8* %end to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %beg to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %call13, %cond.true ], [ %sub.ptr.sub, %cond.false ]
  %4 = load i64* %offset1, align 8, !tbaa !62
  %add = add i64 %4, %cond
  store i64 %add, i64* %offset1, align 8, !tbaa !62
  %tobool15 = icmp eq i64 %1, 0
  br i1 %tobool15, label %if.end48, label %while.cond.preheader

while.cond.preheader:                             ; preds = %cond.end
  %cmp181518 = icmp ult i8* %beg, %end
  br i1 %cmp181518, label %while.body, label %if.else

while.body:                                       ; preds = %while.cond.preheader, %if.end23
  %s17.01520 = phi i8* [ %incdec.ptr, %if.end23 ], [ %beg, %while.cond.preheader ]
  %nl.01519 = phi i8* [ %nl.1, %if.end23 ], [ null, %while.cond.preheader ]
  %5 = load i8* %s17.01520, align 1, !tbaa !45
  %cmp19 = icmp eq i8 %5, 10
  br i1 %cmp19, label %if.then21, label %if.end23

if.then21:                                        ; preds = %while.body
  %6 = load i64* %line2, align 8, !tbaa !63
  %inc = add i64 %6, 1
  store i64 %inc, i64* %line2, align 8, !tbaa !63
  br label %if.end23

if.end23:                                         ; preds = %if.then21, %while.body
  %nl.1 = phi i8* [ %s17.01520, %if.then21 ], [ %nl.01519, %while.body ]
  %incdec.ptr = getelementptr inbounds i8* %s17.01520, i64 1
  %exitcond1537 = icmp eq i8* %incdec.ptr, %end
  br i1 %exitcond1537, label %while.end, label %while.body

while.end:                                        ; preds = %if.end23
  %tobool24 = icmp eq i8* %nl.1, null
  br i1 %tobool24, label %if.else, label %if.then25

if.then25:                                        ; preds = %while.end
  br i1 %tobool12, label %cond.true27, label %cond.false29

cond.true27:                                      ; preds = %if.then25
  %call28 = call i64 @Perl_utf8_distance(i8* %end, i8* %nl.1) #2
  br label %cond.end33

cond.false29:                                     ; preds = %if.then25
  %sub.ptr.lhs.cast30 = ptrtoint i8* %end to i64
  %sub.ptr.rhs.cast31 = ptrtoint i8* %nl.1 to i64
  %sub.ptr.sub32 = sub i64 %sub.ptr.lhs.cast30, %sub.ptr.rhs.cast31
  br label %cond.end33

cond.end33:                                       ; preds = %cond.false29, %cond.true27
  %cond34 = phi i64 [ %call28, %cond.true27 ], [ %sub.ptr.sub32, %cond.false29 ]
  %sub = add nsw i64 %cond34, -1
  store i64 %sub, i64* %column3, align 8, !tbaa !59
  br label %if.end48

if.else:                                          ; preds = %while.cond.preheader, %while.end
  br i1 %tobool12, label %cond.true37, label %cond.false39

cond.true37:                                      ; preds = %if.else
  %call38 = call i64 @Perl_utf8_distance(i8* %end, i8* %beg) #2
  br label %cond.end43

cond.false39:                                     ; preds = %if.else
  %sub.ptr.lhs.cast40 = ptrtoint i8* %end to i64
  %sub.ptr.rhs.cast41 = ptrtoint i8* %beg to i64
  %sub.ptr.sub42 = sub i64 %sub.ptr.lhs.cast40, %sub.ptr.rhs.cast41
  br label %cond.end43

cond.end43:                                       ; preds = %cond.false39, %cond.true37
  %cond44 = phi i64 [ %call38, %cond.true37 ], [ %sub.ptr.sub42, %cond.false39 ]
  %7 = load i64* %column3, align 8, !tbaa !59
  %add46 = add i64 %7, %cond44
  store i64 %add46, i64* %column3, align 8, !tbaa !59
  br label %if.end48

if.end48:                                         ; preds = %cond.end, %cond.end33, %cond.end43
  %cmp49 = icmp eq i32 %event, 10
  br i1 %cmp49, label %IGNORE_EVENT, label %if.end52

if.end52:                                         ; preds = %if.end48
  %ms = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 17
  %8 = load i32* %ms, align 4, !tbaa !77
  %cmp53 = icmp eq i32 %8, 4
  br i1 %cmp53, label %IGNORE_EVENT, label %if.end56

if.end56:                                         ; preds = %if.end52
  %ignore_tags = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 33
  %9 = load %struct.hv** %ignore_tags, align 8, !tbaa !22
  %tobool57 = icmp eq %struct.hv* %9, null
  br i1 %tobool57, label %lor.lhs.false, label %if.then61

lor.lhs.false:                                    ; preds = %if.end56
  %report_tags = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 32
  %10 = load %struct.hv** %report_tags, align 8, !tbaa !21
  %tobool58 = icmp eq %struct.hv* %10, null
  br i1 %tobool58, label %lor.lhs.false59, label %if.then61

lor.lhs.false59:                                  ; preds = %lor.lhs.false
  %ignore_elements = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 34
  %11 = load %struct.hv** %ignore_elements, align 8, !tbaa !23
  %tobool60 = icmp eq %struct.hv* %11, null
  br i1 %tobool60, label %if.end143, label %if.then61

if.then61:                                        ; preds = %lor.lhs.false59, %lor.lhs.false, %if.end56
  %cmp62 = icmp eq i32 %event, 2
  %12 = and i32 %event, -2
  %13 = icmp eq i32 %12, 2
  br i1 %13, label %if.then67, label %if.else137

if.then67:                                        ; preds = %if.then61
  %tmp = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 38
  %14 = load %struct.sv** %tmp, align 8, !tbaa !25
  %beg68 = getelementptr inbounds %struct.token_pos* %tokens, i64 0, i32 0
  %15 = load i8** %beg68, align 8, !tbaa !54
  %end70 = getelementptr inbounds %struct.token_pos* %tokens, i64 0, i32 1
  %16 = load i8** %end70, align 8, !tbaa !56
  %sub.ptr.lhs.cast73 = ptrtoint i8* %16 to i64
  %sub.ptr.rhs.cast74 = ptrtoint i8* %15 to i64
  %sub.ptr.sub75 = sub i64 %sub.ptr.lhs.cast73, %sub.ptr.rhs.cast74
  call void @Perl_sv_setpvn(%struct.sv* %14, i8* %15, i64 %sub.ptr.sub75) #2
  %sv_flags = getelementptr inbounds %struct.sv* %14, i64 0, i32 2
  %17 = load i64* %sv_flags, align 8, !tbaa !1
  %and = and i64 %17, -536870913
  %or = or i64 %17, 536870912
  %storemerge = select i1 %tobool12, i64 %or, i64 %and
  store i64 %storemerge, i64* %sv_flags, align 8, !tbaa !1
  %xml_mode = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 23
  %18 = load i8* %xml_mode, align 1, !tbaa !79
  %tobool82 = icmp eq i8 %18, 0
  br i1 %tobool82, label %lor.lhs.false83, label %if.end88

lor.lhs.false83:                                  ; preds = %if.then67
  %case_sensitive = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 26
  %19 = load i8* %case_sensitive, align 1, !tbaa !87
  %tobool85 = icmp eq i8 %19, 0
  br i1 %tobool85, label %if.then86, label %if.end88

if.then86:                                        ; preds = %lor.lhs.false83
  %20 = bitcast i64* %len.i1369 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %20) #2
  %and.i1371 = and i64 %storemerge, 10223616
  %cmp.i1372 = icmp eq i64 %and.i1371, 262144
  br i1 %cmp.i1372, label %cond.true.i1376, label %cond.false.i1378

cond.true.i1376:                                  ; preds = %if.then86
  %sv_any.i1373 = getelementptr inbounds %struct.sv* %14, i64 0, i32 0
  %21 = load i8** %sv_any.i1373, align 8, !tbaa !7
  %xpv_cur.i1374 = getelementptr inbounds i8* %21, i64 8
  %22 = bitcast i8* %xpv_cur.i1374 to i64*
  %23 = load i64* %22, align 8, !tbaa !42
  store i64 %23, i64* %len.i1369, align 8, !tbaa !27
  %xpv_pv.i1375 = bitcast i8* %21 to i8**
  %24 = load i8** %xpv_pv.i1375, align 8, !tbaa !44
  br label %for.cond.i1385

cond.false.i1378:                                 ; preds = %if.then86
  %call.i1377 = call i8* @Perl_sv_pvn_force_flags(%struct.sv* %14, i64* %len.i1369, i64 2) #2
  br label %for.condthread-pre-split.i1381

for.condthread-pre-split.i1381:                   ; preds = %for.body.i1390, %cond.false.i1378
  %s.0.ph.i1379 = phi i8* [ %call.i1377, %cond.false.i1378 ], [ %incdec.ptr.i1389, %for.body.i1390 ]
  %.pr.i1380 = load i64* %len.i1369, align 8, !tbaa !27
  br label %for.cond.i1385

for.cond.i1385:                                   ; preds = %for.condthread-pre-split.i1381, %cond.true.i1376
  %25 = phi i64 [ %.pr.i1380, %for.condthread-pre-split.i1381 ], [ %23, %cond.true.i1376 ]
  %s.0.i1382 = phi i8* [ %s.0.ph.i1379, %for.condthread-pre-split.i1381 ], [ %24, %cond.true.i1376 ]
  %dec.i1383 = add i64 %25, -1
  store i64 %dec.i1383, i64* %len.i1369, align 8, !tbaa !27
  %tobool.i1384 = icmp eq i64 %25, 0
  br i1 %tobool.i1384, label %if.end88, label %for.body.i1390

for.body.i1390:                                   ; preds = %for.cond.i1385
  %26 = load i8* %s.0.i1382, align 1, !tbaa !45
  %.off.i1386 = add i8 %26, -65
  %27 = icmp ult i8 %.off.i1386, 26
  %add.i1387 = add i8 %26, 32
  %add..i1388 = select i1 %27, i8 %add.i1387, i8 %26
  store i8 %add..i1388, i8* %s.0.i1382, align 1, !tbaa !45
  %incdec.ptr.i1389 = getelementptr inbounds i8* %s.0.i1382, i64 1
  br label %for.condthread-pre-split.i1381

if.end88:                                         ; preds = %for.cond.i1385, %lor.lhs.false83, %if.then67
  %ignoring_element = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 35
  %28 = load %struct.sv** %ignoring_element, align 8, !tbaa !24
  %tobool89 = icmp eq %struct.sv* %28, null
  br i1 %tobool89, label %if.end109, label %if.then90

if.then90:                                        ; preds = %if.end88
  %call92 = call i64 @Perl_sv_eq(%struct.sv* %28, %struct.sv* %14) #2
  %tobool93 = icmp eq i64 %call92, 0
  br i1 %tobool93, label %IGNORE_EVENT, label %if.then94

if.then94:                                        ; preds = %if.then90
  %ignore_depth = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 36
  %29 = load i32* %ignore_depth, align 4, !tbaa !88
  br i1 %cmp62, label %if.then97, label %if.else99

if.then97:                                        ; preds = %if.then94
  %inc98 = add nsw i32 %29, 1
  store i32 %inc98, i32* %ignore_depth, align 4, !tbaa !88
  br label %IGNORE_EVENT

if.else99:                                        ; preds = %if.then94
  %dec = add nsw i32 %29, -1
  store i32 %dec, i32* %ignore_depth, align 4, !tbaa !88
  %cmp101 = icmp eq i32 %dec, 0
  br i1 %cmp101, label %if.then103, label %IGNORE_EVENT

if.then103:                                       ; preds = %if.else99
  %30 = load %struct.sv** %ignoring_element, align 8, !tbaa !24
  call void @Perl_sv_free(%struct.sv* %30) #2
  store %struct.sv* null, %struct.sv** %ignoring_element, align 8, !tbaa !24
  br label %IGNORE_EVENT

if.end109:                                        ; preds = %if.end88
  %ignore_elements110 = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 34
  %31 = load %struct.hv** %ignore_elements110, align 8, !tbaa !23
  %tobool111 = icmp eq %struct.hv* %31, null
  br i1 %tobool111, label %if.end120, label %land.lhs.true112

land.lhs.true112:                                 ; preds = %if.end109
  %call114 = call %struct.he* @Perl_hv_fetch_ent(%struct.hv* %31, %struct.sv* %14, i64 0, i64 0) #2
  %tobool115 = icmp eq %struct.he* %call114, null
  br i1 %tobool115, label %if.end120, label %if.then116

if.then116:                                       ; preds = %land.lhs.true112
  %call117 = call %struct.sv* @Perl_newSVsv(%struct.sv* %14) #2
  store %struct.sv* %call117, %struct.sv** %ignoring_element, align 8, !tbaa !24
  %ignore_depth119 = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 36
  store i32 1, i32* %ignore_depth119, align 4, !tbaa !88
  br label %IGNORE_EVENT

if.end120:                                        ; preds = %land.lhs.true112, %if.end109
  %32 = load %struct.hv** %ignore_tags, align 8, !tbaa !22
  %tobool122 = icmp eq %struct.hv* %32, null
  br i1 %tobool122, label %if.end128, label %land.lhs.true123

land.lhs.true123:                                 ; preds = %if.end120
  %call125 = call %struct.he* @Perl_hv_fetch_ent(%struct.hv* %32, %struct.sv* %14, i64 0, i64 0) #2
  %tobool126 = icmp eq %struct.he* %call125, null
  br i1 %tobool126, label %if.end128, label %IGNORE_EVENT

if.end128:                                        ; preds = %land.lhs.true123, %if.end120
  %report_tags129 = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 32
  %33 = load %struct.hv** %report_tags129, align 8, !tbaa !21
  %tobool130 = icmp eq %struct.hv* %33, null
  br i1 %tobool130, label %if.end143, label %land.lhs.true131

land.lhs.true131:                                 ; preds = %if.end128
  %call133 = call %struct.he* @Perl_hv_fetch_ent(%struct.hv* %33, %struct.sv* %14, i64 0, i64 0) #2
  %tobool134 = icmp eq %struct.he* %call133, null
  br i1 %tobool134, label %IGNORE_EVENT, label %if.end143

if.else137:                                       ; preds = %if.then61
  %ignoring_element138 = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 35
  %34 = load %struct.sv** %ignoring_element138, align 8, !tbaa !24
  %tobool139 = icmp eq %struct.sv* %34, null
  br i1 %tobool139, label %if.end143, label %IGNORE_EVENT

if.end143:                                        ; preds = %land.lhs.true131, %if.end128, %if.else137, %lor.lhs.false59
  %idxprom = zext i32 %event to i64
  %arrayidx144 = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 30, i64 %idxprom
  %cb = getelementptr inbounds %struct.p_handler* %arrayidx144, i64 0, i32 0
  %35 = load %struct.sv** %cb, align 8, !tbaa !18
  %tobool145 = icmp eq %struct.sv* %35, null
  br i1 %tobool145, label %if.then146, label %if.end153

if.then146:                                       ; preds = %if.end143
  %arrayidx148 = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 30, i64 8
  %cb149 = getelementptr inbounds %struct.p_handler* %arrayidx148, i64 0, i32 0
  %36 = load %struct.sv** %cb149, align 8, !tbaa !18
  %tobool150 = icmp eq %struct.sv* %36, null
  br i1 %tobool150, label %IGNORE_EVENT, label %if.end153

if.end153:                                        ; preds = %if.then146, %if.end143
  %37 = phi %struct.sv* [ %35, %if.end143 ], [ %36, %if.then146 ]
  %h.0 = phi %struct.p_handler* [ %arrayidx144, %if.end143 ], [ %arrayidx148, %if.then146 ]
  %cb154 = getelementptr inbounds %struct.p_handler* %h.0, i64 0, i32 0
  %sv_flags155 = getelementptr inbounds %struct.sv* %37, i64 0, i32 2
  %38 = load i64* %sv_flags155, align 8, !tbaa !1
  %and156 = and i64 %38, 255
  %cmp157 = icmp eq i64 %and156, 10
  br i1 %cmp157, label %if.end209, label %cond.false163

cond.false163:                                    ; preds = %if.end153
  %and166 = and i64 %38, 262144
  %tobool167 = icmp eq i64 %and166, 0
  br i1 %tobool167, label %cond.false183, label %cond.true168

cond.true168:                                     ; preds = %cond.false163
  %sv_any = getelementptr inbounds %struct.sv* %37, i64 0, i32 0
  %39 = load i8** %sv_any, align 8, !tbaa !7
  %40 = bitcast i8* %39 to %struct.xpv*
  store %struct.xpv* %40, %struct.xpv** @PL_Xpv, align 8, !tbaa !26
  %tobool170 = icmp eq i8* %39, null
  br i1 %tobool170, label %return, label %land.lhs.true171

land.lhs.true171:                                 ; preds = %cond.true168
  %xpv_cur = getelementptr inbounds i8* %39, i64 8
  %41 = bitcast i8* %xpv_cur to i64*
  %42 = load i64* %41, align 8, !tbaa !42
  %cmp172 = icmp ugt i64 %42, 1
  br i1 %cmp172, label %if.end209, label %lor.lhs.false174

lor.lhs.false174:                                 ; preds = %land.lhs.true171
  %tobool176 = icmp eq i64 %42, 0
  br i1 %tobool176, label %return, label %land.lhs.true177

land.lhs.true177:                                 ; preds = %lor.lhs.false174
  %xpv_pv = bitcast i8* %39 to i8**
  %43 = load i8** %xpv_pv, align 8, !tbaa !44
  %44 = load i8* %43, align 1, !tbaa !45
  %cmp179 = icmp eq i8 %44, 48
  br i1 %cmp179, label %return, label %if.end209

cond.false183:                                    ; preds = %cond.false163
  %and186 = and i64 %38, 65536
  %tobool187 = icmp eq i64 %and186, 0
  br i1 %tobool187, label %cond.false193, label %cond.true188

cond.true188:                                     ; preds = %cond.false183
  %sv_any190 = getelementptr inbounds %struct.sv* %37, i64 0, i32 0
  %45 = load i8** %sv_any190, align 8, !tbaa !7
  %xiv_iv = getelementptr inbounds i8* %45, i64 24
  %46 = bitcast i8* %xiv_iv to i64*
  %47 = load i64* %46, align 8, !tbaa !8
  %cmp191 = icmp eq i64 %47, 0
  br i1 %cmp191, label %return, label %if.end209

cond.false193:                                    ; preds = %cond.false183
  %and196 = and i64 %38, 131072
  %tobool197 = icmp eq i64 %and196, 0
  br i1 %tobool197, label %cond.false203, label %cond.true198

cond.true198:                                     ; preds = %cond.false193
  %sv_any200 = getelementptr inbounds %struct.sv* %37, i64 0, i32 0
  %48 = load i8** %sv_any200, align 8, !tbaa !7
  %xnv_nv = getelementptr inbounds i8* %48, i64 32
  %49 = bitcast i8* %xnv_nv to double*
  %50 = load double* %49, align 8, !tbaa !46
  %cmp201 = fcmp une double %50, 0.000000e+00
  br i1 %cmp201, label %if.end209, label %return

cond.false203:                                    ; preds = %cond.false193
  %call205 = call signext i8 @Perl_sv_2bool(%struct.sv* %37) #2
  %tobool207 = icmp eq i8 %call205, 0
  br i1 %tobool207, label %return, label %if.end209

if.end209:                                        ; preds = %land.lhs.true177, %cond.true188, %cond.false203, %if.end153, %land.lhs.true171, %cond.true198
  %unbroken_text = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 24
  %51 = load i8* %unbroken_text, align 1, !tbaa !57
  %tobool211 = icmp ne i8 %51, 0
  %cmp213 = icmp eq i32 %event, 4
  %or.cond1041 = and i1 %tobool211, %cmp213
  %pend_text = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 11
  %52 = load %struct.sv** %pend_text, align 8, !tbaa !14
  %tobool216 = icmp ne %struct.sv* %52, null
  br i1 %or.cond1041, label %if.then215, label %if.else274

if.then215:                                       ; preds = %if.end209
  br i1 %tobool216, label %if.end220, label %if.then217

if.then217:                                       ; preds = %if.then215
  %call218 = call %struct.sv* @Perl_newSV(i64 256) #2
  store %struct.sv* %call218, %struct.sv** %pend_text, align 8, !tbaa !14
  br label %if.end220

if.end220:                                        ; preds = %if.then217, %if.then215
  %53 = phi %struct.sv* [ %call218, %if.then217 ], [ %52, %if.then215 ]
  %sv_flags222 = getelementptr inbounds %struct.sv* %53, i64 0, i32 2
  %54 = load i64* %sv_flags222, align 8, !tbaa !1
  %and223 = and i64 %54, 118423552
  %tobool224 = icmp eq i64 %and223, 0
  %is_cdata233.phi.trans.insert = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 8
  %.pre1539 = load i8* %is_cdata233.phi.trans.insert, align 1, !tbaa !58
  br i1 %tobool224, label %if.end220.INIT_PEND_TEXT_crit_edge, label %if.then225

if.end220.INIT_PEND_TEXT_crit_edge:               ; preds = %if.end220
  %pend_text_offset.pre = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 13
  %pend_text_column.pre = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 15
  %pend_text_is_cdata234.pre = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 12
  br label %INIT_PEND_TEXT

if.then225:                                       ; preds = %if.end220
  %pend_text_is_cdata = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 12
  %55 = load i8* %pend_text_is_cdata, align 1, !tbaa !60
  %cmp228 = icmp eq i8 %.pre1539, %55
  br i1 %cmp228, label %if.end242, label %if.then230

if.then230:                                       ; preds = %if.then225
  %56 = load i8* %unbroken_text, align 1, !tbaa !57
  %57 = bitcast i64* %offset1 to <2 x i64>*
  %58 = load <2 x i64>* %57, align 8, !tbaa !27
  %59 = load i64* %column3, align 8, !tbaa !59
  store i8 0, i8* %unbroken_text, align 1, !tbaa !57
  store %struct.sv* null, %struct.sv** %pend_text, align 8, !tbaa !14
  store i8 %55, i8* %is_cdata233.phi.trans.insert, align 1, !tbaa !58
  %pend_text_offset.i1452 = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 13
  %60 = bitcast i64* %pend_text_offset.i1452 to <2 x i64>*
  %61 = load <2 x i64>* %60, align 8, !tbaa !27
  %62 = bitcast i64* %offset1 to <2 x i64>*
  store <2 x i64> %61, <2 x i64>* %62, align 8, !tbaa !27
  %pend_text_column.i1454 = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 15
  %63 = load i64* %pend_text_column.i1454, align 8, !tbaa !61
  store i64 %63, i64* %column3, align 8, !tbaa !59
  %sv_any.i1455 = getelementptr inbounds %struct.sv* %53, i64 0, i32 0
  %64 = load i8** %sv_any.i1455, align 8, !tbaa !7
  %xpv_pv.i1456 = bitcast i8* %64 to i8**
  %65 = load i8** %xpv_pv.i1456, align 8, !tbaa !44
  %xpv_cur.i1457 = getelementptr inbounds i8* %64, i64 8
  %66 = bitcast i8* %xpv_cur.i1457 to i64*
  %67 = load i64* %66, align 8, !tbaa !42
  %add.ptr.i1458 = getelementptr inbounds i8* %65, i64 %67
  %and.i1460 = and i64 %54, 536870912
  call fastcc void @report_event(%struct.p_state* %p_state, i32 4, i8* %65, i8* %add.ptr.i1458, i64 %and.i1460, %struct.token_pos* null, i32 0, %struct.sv* %self) #2
  %68 = load i64* %sv_flags222, align 8, !tbaa !1
  %and11.i1461 = and i64 %68, 1223753727
  store i64 %and11.i1461, i64* %sv_flags222, align 8, !tbaa !1
  %and13.i1462 = and i64 %68, 2097152
  %tobool.i1463 = icmp eq i64 %and13.i1462, 0
  br i1 %tobool.i1463, label %flush_pending_text.exit1466, label %land.rhs.i1465

land.rhs.i1465:                                   ; preds = %if.then230
  %call.i1464 = call i32 @Perl_sv_backoff(%struct.sv* %53) #2
  br label %flush_pending_text.exit1466

flush_pending_text.exit1466:                      ; preds = %if.then230, %land.rhs.i1465
  store i8 %56, i8* %unbroken_text, align 1, !tbaa !57
  store %struct.sv* %53, %struct.sv** %pend_text, align 8, !tbaa !14
  store i8 %.pre1539, i8* %is_cdata233.phi.trans.insert, align 1, !tbaa !58
  %69 = bitcast i64* %offset1 to <2 x i64>*
  store <2 x i64> %58, <2 x i64>* %69, align 8, !tbaa !27
  store i64 %59, i64* %column3, align 8, !tbaa !59
  br label %INIT_PEND_TEXT

INIT_PEND_TEXT:                                   ; preds = %if.end220.INIT_PEND_TEXT_crit_edge, %flush_pending_text.exit1466
  %pend_text_is_cdata234.pre-phi = phi i8* [ %pend_text_is_cdata234.pre, %if.end220.INIT_PEND_TEXT_crit_edge ], [ %pend_text_is_cdata, %flush_pending_text.exit1466 ]
  %pend_text_column.pre-phi = phi i64* [ %pend_text_column.pre, %if.end220.INIT_PEND_TEXT_crit_edge ], [ %pend_text_column.i1454, %flush_pending_text.exit1466 ]
  %pend_text_offset.pre-phi = phi i64* [ %pend_text_offset.pre, %if.end220.INIT_PEND_TEXT_crit_edge ], [ %pend_text_offset.i1452, %flush_pending_text.exit1466 ]
  %pend_text_line.pre-phi = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 14
  store i64 %0, i64* %pend_text_offset.pre-phi, align 8, !tbaa !89
  store i64 %1, i64* %pend_text_line.pre-phi, align 8, !tbaa !90
  store i64 %2, i64* %pend_text_column.pre-phi, align 8, !tbaa !61
  store i8 %.pre1539, i8* %pend_text_is_cdata234.pre-phi, align 1, !tbaa !60
  call void @Perl_sv_setpvn(%struct.sv* %53, i8* getelementptr inbounds ([1 x i8]* @.str63, i64 0, i64 0), i64 0) #2
  %.pre1540 = load %struct.sv** %pend_text, align 8, !tbaa !14
  %sv_flags246.phi.trans.insert = getelementptr inbounds %struct.sv* %.pre1540, i64 0, i32 2
  %.pre1541 = load i64* %sv_flags246.phi.trans.insert, align 8, !tbaa !1
  br i1 %tobool12, label %land.lhs.true244, label %if.end242.thread

if.end242.thread:                                 ; preds = %INIT_PEND_TEXT
  %and240 = and i64 %.pre1541, -536870913
  store i64 %and240, i64* %sv_flags246.phi.trans.insert, align 8, !tbaa !1
  br label %lor.lhs.false254

if.end242:                                        ; preds = %if.then225
  br i1 %tobool12, label %land.lhs.true244, label %lor.lhs.false254

land.lhs.true244:                                 ; preds = %INIT_PEND_TEXT, %if.end242
  %70 = phi i64 [ %54, %if.end242 ], [ %.pre1541, %INIT_PEND_TEXT ]
  %71 = phi %struct.sv* [ %53, %if.end242 ], [ %.pre1540, %INIT_PEND_TEXT ]
  %and247 = and i64 %70, 536870912
  %tobool248 = icmp eq i64 %and247, 0
  br i1 %tobool248, label %if.then249, label %if.then259

if.then249:                                       ; preds = %land.lhs.true244
  %call251 = call i64 @Perl_sv_utf8_upgrade_flags(%struct.sv* %71, i64 2) #2
  %.pre1542 = load %struct.sv** %pend_text, align 8, !tbaa !14
  br label %if.then259

lor.lhs.false254:                                 ; preds = %if.end242.thread, %if.end242
  %72 = phi i64 [ %and240, %if.end242.thread ], [ %54, %if.end242 ]
  %73 = phi %struct.sv* [ %.pre1540, %if.end242.thread ], [ %53, %if.end242 ]
  %and257 = and i64 %72, 536870912
  %tobool258 = icmp eq i64 %and257, 0
  br i1 %tobool258, label %if.then259, label %if.else264

if.then259:                                       ; preds = %if.then249, %land.lhs.true244, %lor.lhs.false254
  %74 = phi %struct.sv* [ %.pre1542, %if.then249 ], [ %71, %land.lhs.true244 ], [ %73, %lor.lhs.false254 ]
  %sub.ptr.lhs.cast261 = ptrtoint i8* %end to i64
  %sub.ptr.rhs.cast262 = ptrtoint i8* %beg to i64
  %sub.ptr.sub263 = sub i64 %sub.ptr.lhs.cast261, %sub.ptr.rhs.cast262
  call void @Perl_sv_catpvn_flags(%struct.sv* %74, i8* %beg, i64 %sub.ptr.sub263, i64 2) #2
  br label %return

if.else264:                                       ; preds = %lor.lhs.false254
  %sub.ptr.lhs.cast267 = ptrtoint i8* %end to i64
  %sub.ptr.rhs.cast268 = ptrtoint i8* %beg to i64
  %sub.ptr.sub269 = sub i64 %sub.ptr.lhs.cast267, %sub.ptr.rhs.cast268
  %call270 = call %struct.sv* @Perl_newSVpvn(i8* %beg, i64 %sub.ptr.sub269) #2
  %call271 = call i64 @Perl_sv_utf8_upgrade_flags(%struct.sv* %call270, i64 2) #2
  %75 = load %struct.sv** %pend_text, align 8, !tbaa !14
  call void @Perl_sv_catsv_flags(%struct.sv* %75, %struct.sv* %call270, i64 2) #2
  call void @Perl_sv_free(%struct.sv* %call270) #2
  br label %return

if.else274:                                       ; preds = %if.end209
  br i1 %tobool216, label %land.lhs.true277, label %if.end284

land.lhs.true277:                                 ; preds = %if.else274
  %sv_flags279 = getelementptr inbounds %struct.sv* %52, i64 0, i32 2
  %76 = load i64* %sv_flags279, align 8, !tbaa !1
  %and280 = and i64 %76, 118423552
  %tobool281 = icmp eq i64 %and280, 0
  br i1 %tobool281, label %if.end284, label %if.then282

if.then282:                                       ; preds = %land.lhs.true277
  %is_cdata.i = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 8
  %77 = load i8* %is_cdata.i, align 1, !tbaa !58
  %78 = bitcast i64* %offset1 to <2 x i64>*
  %79 = load <2 x i64>* %78, align 8, !tbaa !27
  %80 = load i64* %column3, align 8, !tbaa !59
  store i8 0, i8* %unbroken_text, align 1, !tbaa !57
  store %struct.sv* null, %struct.sv** %pend_text, align 8, !tbaa !14
  %pend_text_is_cdata.i = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 12
  %81 = load i8* %pend_text_is_cdata.i, align 1, !tbaa !60
  store i8 %81, i8* %is_cdata.i, align 1, !tbaa !58
  %pend_text_offset.i = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 13
  %82 = bitcast i64* %pend_text_offset.i to <2 x i64>*
  %83 = load <2 x i64>* %82, align 8, !tbaa !27
  %84 = bitcast i64* %offset1 to <2 x i64>*
  store <2 x i64> %83, <2 x i64>* %84, align 8, !tbaa !27
  %pend_text_column.i = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 15
  %85 = load i64* %pend_text_column.i, align 8, !tbaa !61
  store i64 %85, i64* %column3, align 8, !tbaa !59
  %sv_any.i1438 = getelementptr inbounds %struct.sv* %52, i64 0, i32 0
  %86 = load i8** %sv_any.i1438, align 8, !tbaa !7
  %xpv_pv.i1439 = bitcast i8* %86 to i8**
  %87 = load i8** %xpv_pv.i1439, align 8, !tbaa !44
  %xpv_cur.i1440 = getelementptr inbounds i8* %86, i64 8
  %88 = bitcast i8* %xpv_cur.i1440 to i64*
  %89 = load i64* %88, align 8, !tbaa !42
  %add.ptr.i = getelementptr inbounds i8* %87, i64 %89
  %and.i1442 = and i64 %76, 536870912
  call fastcc void @report_event(%struct.p_state* %p_state, i32 4, i8* %87, i8* %add.ptr.i, i64 %and.i1442, %struct.token_pos* null, i32 0, %struct.sv* %self) #2
  %90 = load i64* %sv_flags279, align 8, !tbaa !1
  %and11.i = and i64 %90, 1223753727
  store i64 %and11.i, i64* %sv_flags279, align 8, !tbaa !1
  %and13.i = and i64 %90, 2097152
  %tobool.i1443 = icmp eq i64 %and13.i, 0
  br i1 %tobool.i1443, label %flush_pending_text.exit, label %land.rhs.i

land.rhs.i:                                       ; preds = %if.then282
  %call.i1444 = call i32 @Perl_sv_backoff(%struct.sv* %52) #2
  br label %flush_pending_text.exit

flush_pending_text.exit:                          ; preds = %if.then282, %land.rhs.i
  store i8 %51, i8* %unbroken_text, align 1, !tbaa !57
  store %struct.sv* %52, %struct.sv** %pend_text, align 8, !tbaa !14
  store i8 %77, i8* %is_cdata.i, align 1, !tbaa !58
  %91 = bitcast i64* %offset1 to <2 x i64>*
  store <2 x i64> %79, <2 x i64>* %91, align 8, !tbaa !27
  store i64 %80, i64* %column3, align 8, !tbaa !59
  %92 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !26
  br label %if.end284

if.end284:                                        ; preds = %land.lhs.true277, %if.else274, %flush_pending_text.exit
  %sp.1 = phi %struct.sv** [ %92, %flush_pending_text.exit ], [ %sp.0, %land.lhs.true277 ], [ %sp.0, %if.else274 ]
  %argspec285 = getelementptr inbounds %struct.p_handler* %h.0, i64 0, i32 1
  %93 = load %struct.sv** %argspec285, align 8, !tbaa !20
  %tobool286 = icmp eq %struct.sv* %93, null
  br i1 %tobool286, label %cond.end306, label %cond.true287

cond.true287:                                     ; preds = %if.end284
  %sv_flags289 = getelementptr inbounds %struct.sv* %93, i64 0, i32 2
  %94 = load i64* %sv_flags289, align 8, !tbaa !1
  %and290 = and i64 %94, 262144
  %cmp291 = icmp eq i64 %and290, 0
  br i1 %cmp291, label %cond.false300, label %cond.true293

cond.true293:                                     ; preds = %cond.true287
  %sv_any295 = getelementptr inbounds %struct.sv* %93, i64 0, i32 0
  %95 = load i8** %sv_any295, align 8, !tbaa !7
  %xpv_cur296 = getelementptr inbounds i8* %95, i64 8
  %96 = bitcast i8* %xpv_cur296 to i64*
  %97 = load i64* %96, align 8, !tbaa !42
  store i64 %97, i64* %my_na, align 8, !tbaa !27
  %xpv_pv299 = bitcast i8* %95 to i8**
  %98 = load i8** %xpv_pv299, align 8, !tbaa !44
  br label %cond.end306

cond.false300:                                    ; preds = %cond.true287
  %call302 = call i8* @Perl_sv_2pv_flags(%struct.sv* %93, i64* %my_na, i64 2) #2
  br label %cond.end306

cond.end306:                                      ; preds = %if.end284, %cond.true293, %cond.false300
  %cond307 = phi i8* [ %98, %cond.true293 ], [ %call302, %cond.false300 ], [ getelementptr inbounds ([1 x i8]* @.str63, i64 0, i64 0), %if.end284 ]
  %99 = load %struct.sv** %cb154, align 8, !tbaa !18
  %sv_flags309 = getelementptr inbounds %struct.sv* %99, i64 0, i32 2
  %100 = load i64* %sv_flags309, align 8, !tbaa !1
  %and310 = and i64 %100, 255
  %cmp311 = icmp eq i64 %and310, 10
  %101 = load i8* %cond307, align 1, !tbaa !45
  %cmp315 = icmp eq i8 %101, 22
  br i1 %cmp311, label %if.then313, label %if.else323

if.then313:                                       ; preds = %cond.end306
  br i1 %cmp315, label %if.then317, label %if.else320

if.then317:                                       ; preds = %if.then313
  %incdec.ptr318 = getelementptr inbounds i8* %cond307, i64 1
  %102 = bitcast %struct.sv* %99 to %struct.av*
  br label %if.end339

if.else320:                                       ; preds = %if.then313
  %call321 = call %struct.av* @Perl_newAV() #2
  br label %if.end339

if.else323:                                       ; preds = %cond.end306
  %incdec.ptr328 = getelementptr inbounds i8* %cond307, i64 1
  %incdec.ptr328.cond307 = select i1 %cmp315, i8* %incdec.ptr328, i8* %cond307
  call void @Perl_push_scope() #2
  call void @Perl_save_int(i32* bitcast (i64* @PL_tmps_floor to i32*)) #2
  %103 = load i64* @PL_tmps_ix, align 8, !tbaa !27
  store i64 %103, i64* @PL_tmps_floor, align 8, !tbaa !27
  %104 = load i64** @PL_markstack_ptr, align 8, !tbaa !26
  %incdec.ptr330 = getelementptr inbounds i64* %104, i64 1
  store i64* %incdec.ptr330, i64** @PL_markstack_ptr, align 8, !tbaa !26
  %105 = load i64** @PL_markstack_max, align 8, !tbaa !26
  %cmp331 = icmp eq i64* %incdec.ptr330, %105
  br i1 %cmp331, label %if.then333, label %if.end334

if.then333:                                       ; preds = %if.else323
  call void @Perl_markstack_grow() #2
  %.pre1544 = load i64** @PL_markstack_ptr, align 8, !tbaa !26
  br label %if.end334

if.end334:                                        ; preds = %if.then333, %if.else323
  %106 = phi i64* [ %.pre1544, %if.then333 ], [ %incdec.ptr330, %if.else323 ]
  %107 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !26
  %sub.ptr.lhs.cast336 = ptrtoint %struct.sv** %sp.1 to i64
  %sub.ptr.rhs.cast337 = ptrtoint %struct.sv** %107 to i64
  %sub.ptr.sub338 = sub i64 %sub.ptr.lhs.cast336, %sub.ptr.rhs.cast337
  %sub.ptr.div = ashr exact i64 %sub.ptr.sub338, 3
  store i64 %sub.ptr.div, i64* %106, align 8, !tbaa !27
  br label %if.end339

if.end339:                                        ; preds = %if.then317, %if.else320, %if.end334
  %argspec.1 = phi i8* [ %incdec.ptr318, %if.then317 ], [ %cond307, %if.else320 ], [ %incdec.ptr328.cond307, %if.end334 ]
  %array.0 = phi %struct.av* [ %102, %if.then317 ], [ %call321, %if.else320 ], [ null, %if.end334 ]
  %108 = load i8* %argspec.1, align 1, !tbaa !45
  %tobool3401514 = icmp eq i8 %108, 0
  br i1 %tobool3401514, label %for.end867, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.end339
  %tobool846 = icmp eq %struct.av* %array.0, null
  %cmp347 = icmp sgt i32 %num_tokens, 0
  %conv354 = sext i32 %num_tokens to i64
  %bool_attr_val = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 29
  %beg401 = getelementptr inbounds %struct.token_pos* %tokens, i64 0, i32 0
  %mul = shl nsw i32 %num_tokens, 1
  %conv410 = sext i32 %mul to i64
  %sub.ptr.rhs.cast431 = ptrtoint i8* %beg to i64
  %end475 = getelementptr inbounds %struct.token_pos* %tokens, i64 0, i32 1
  %xml_mode488 = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 23
  %case_sensitive492 = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 26
  %109 = bitcast i64* %len.i1415 to i8*
  %cmp504 = icmp ne i32 %event, 2
  %arrayidx509 = getelementptr inbounds [8 x i8]* @.str91, i64 0, i64 %idxprom
  %cmp513 = icmp eq i32 %event, 2
  %cmp5281506 = icmp sgt i32 %num_tokens, 1
  %110 = bitcast i64* %len.i1392 to i8*
  %attr_encoded = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 25
  %utf8_mode = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 28
  %entity2char = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 37
  %111 = bitcast i64* %len.i to i8*
  %sub.ptr.lhs.cast722 = ptrtoint i8* %end to i64
  %sub.ptr.sub724 = sub i64 %sub.ptr.lhs.cast722, %sub.ptr.rhs.cast431
  %is_cdata746 = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 8
  %skipped_text = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 16
  %arrayidx813 = getelementptr inbounds [9 x i8*]* @event_id_str, i64 0, i64 %idxprom
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc865
  %112 = phi i8 [ %108, %for.body.lr.ph ], [ %212, %for.inc865 ]
  %sp.21516 = phi %struct.sv** [ %sp.1, %for.body.lr.ph ], [ %sp.9, %for.inc865 ]
  %s.01515 = phi i8* [ %argspec.1, %for.body.lr.ph ], [ %incdec.ptr866, %for.inc865 ]
  %conv344 = sext i8 %112 to i32
  switch i32 %conv344, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb346
    i32 3, label %sw.bb396
    i32 4, label %sw.bb468
    i32 5, label %sw.bb468
    i32 6, label %sw.bb468
    i32 7, label %sw.bb512
    i32 8, label %sw.bb512
    i32 9, label %sw.bb672
    i32 10, label %sw.bb721
    i32 11, label %sw.bb732
    i32 12, label %sw.bb764
    i32 13, label %sw.bb773
    i32 14, label %sw.bb777
    i32 15, label %sw.bb780
    i32 16, label %sw.bb793
    i32 17, label %sw.bb805
    i32 18, label %sw.bb808
    i32 19, label %sw.bb811
    i32 21, label %sw.bb816
    i32 20, label %sw.bb835
  ]

sw.bb:                                            ; preds = %for.body
  %call345 = call %struct.sv* @Perl_sv_mortalcopy(%struct.sv* %self) #2
  br label %if.then841

sw.bb346:                                         ; preds = %for.body
  br i1 %cmp347, label %for.body358.lr.ph, label %if.then843

for.body358.lr.ph:                                ; preds = %sw.bb346
  %call351 = call %struct.av* @Perl_newAV() #2
  call void @Perl_av_extend(%struct.av* %call351, i64 %conv354) #2
  br label %for.body358

for.body358:                                      ; preds = %for.inc, %for.body358.lr.ph
  %indvars.iv1527 = phi i64 [ 0, %for.body358.lr.ph ], [ %indvars.iv.next1528, %for.inc ]
  %prev_token.01513 = phi %struct.sv* [ @PL_sv_undef, %for.body358.lr.ph ], [ %prev_token.1, %for.inc ]
  %beg361 = getelementptr inbounds %struct.token_pos* %tokens, i64 %indvars.iv1527, i32 0
  %113 = load i8** %beg361, align 8, !tbaa !54
  %tobool362 = icmp eq i8* %113, null
  br i1 %tobool362, label %if.else382, label %if.then363

if.then363:                                       ; preds = %for.body358
  %end369 = getelementptr inbounds %struct.token_pos* %tokens, i64 %indvars.iv1527, i32 1
  %114 = load i8** %end369, align 8, !tbaa !56
  %sub.ptr.lhs.cast373 = ptrtoint i8* %114 to i64
  %sub.ptr.rhs.cast374 = ptrtoint i8* %113 to i64
  %sub.ptr.sub375 = sub i64 %sub.ptr.lhs.cast373, %sub.ptr.rhs.cast374
  %call376 = call %struct.sv* @Perl_newSVpvn(i8* %113, i64 %sub.ptr.sub375) #2
  br i1 %tobool12, label %if.then378, label %if.end381

if.then378:                                       ; preds = %if.then363
  %sv_flags379 = getelementptr inbounds %struct.sv* %call376, i64 0, i32 2
  %115 = load i64* %sv_flags379, align 8, !tbaa !1
  %or380 = or i64 %115, 536870912
  store i64 %or380, i64* %sv_flags379, align 8, !tbaa !1
  br label %if.end381

if.end381:                                        ; preds = %if.then378, %if.then363
  call void @Perl_av_push(%struct.av* %call351, %struct.sv* %call376) #2
  br label %for.inc

if.else382:                                       ; preds = %for.body358
  %116 = load %struct.sv** %bool_attr_val, align 8, !tbaa !17
  %tobool383 = icmp eq %struct.sv* %116, null
  br i1 %tobool383, label %cond.false387, label %cond.true384

cond.true384:                                     ; preds = %if.else382
  %call386 = call %struct.sv* @Perl_newSVsv(%struct.sv* %116) #2
  br label %cond.end389

cond.false387:                                    ; preds = %if.else382
  %call388 = call %struct.sv* @Perl_newSVsv(%struct.sv* %prev_token.01513) #2
  br label %cond.end389

cond.end389:                                      ; preds = %cond.false387, %cond.true384
  %cond390 = phi %struct.sv* [ %call386, %cond.true384 ], [ %call388, %cond.false387 ]
  call void @Perl_av_push(%struct.av* %call351, %struct.sv* %cond390) #2
  br label %for.inc

for.inc:                                          ; preds = %if.end381, %cond.end389
  %prev_token.1 = phi %struct.sv* [ %call376, %if.end381 ], [ %prev_token.01513, %cond.end389 ]
  %indvars.iv.next1528 = add nuw nsw i64 %indvars.iv1527, 1
  %lftr.wideiv1529 = trunc i64 %indvars.iv.next1528 to i32
  %exitcond1530 = icmp eq i32 %lftr.wideiv1529, %num_tokens
  br i1 %exitcond1530, label %for.end, label %for.body358

for.end:                                          ; preds = %for.inc
  %117 = bitcast %struct.av* %call351 to %struct.sv*
  %call393 = call %struct.sv* @Perl_newRV_noinc(%struct.sv* %117) #2
  %call394 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call393) #2
  br label %if.then841

sw.bb396:                                         ; preds = %for.body
  br i1 %cmp347, label %land.lhs.true399, label %if.then843

land.lhs.true399:                                 ; preds = %sw.bb396
  %118 = load i8** %beg401, align 8, !tbaa !54
  %cmp402 = icmp ult i8* %118, %beg
  br i1 %cmp402, label %if.then843, label %for.body414.lr.ph

for.body414.lr.ph:                                ; preds = %land.lhs.true399
  %call407 = call %struct.av* @Perl_newAV() #2
  call void @Perl_av_extend(%struct.av* %call407, i64 %conv410) #2
  br i1 %tobool12, label %for.body414.us, label %for.body414

for.body414.us:                                   ; preds = %for.body414.lr.ph, %for.inc462.us
  %indvars.iv1533 = phi i64 [ %indvars.iv.next1534, %for.inc462.us ], [ 0, %for.body414.lr.ph ]
  %beg417.us = getelementptr inbounds %struct.token_pos* %tokens, i64 %indvars.iv1533, i32 0
  %119 = load i8** %beg417.us, align 8, !tbaa !54
  %tobool418.us = icmp eq i8* %119, null
  br i1 %tobool418.us, label %if.else458.us, label %cond.end455.us

cond.end455.us:                                   ; preds = %for.body414.us
  %call425.us = call i64 @Perl_utf8_distance(i8* %119, i8* %beg) #2
  %call435.us = call %struct.sv* @Perl_newSViv(i64 %call425.us) #2
  call void @Perl_av_push(%struct.av* %call407, %struct.sv* %call435.us) #2
  %end440.us = getelementptr inbounds %struct.token_pos* %tokens, i64 %indvars.iv1533, i32 1
  %120 = load i8** %beg417.us, align 8, !tbaa !54
  %121 = load i8** %end440.us, align 8, !tbaa !56
  %call444.us = call i64 @Perl_utf8_distance(i8* %121, i8* %120) #2
  %call457.us = call %struct.sv* @Perl_newSViv(i64 %call444.us) #2
  call void @Perl_av_push(%struct.av* %call407, %struct.sv* %call457.us) #2
  br label %for.inc462.us

if.else458.us:                                    ; preds = %for.body414.us
  %call459.us = call %struct.sv* @Perl_newSViv(i64 0) #2
  call void @Perl_av_push(%struct.av* %call407, %struct.sv* %call459.us) #2
  %call460.us = call %struct.sv* @Perl_newSViv(i64 0) #2
  call void @Perl_av_push(%struct.av* %call407, %struct.sv* %call460.us) #2
  br label %for.inc462.us

for.inc462.us:                                    ; preds = %if.else458.us, %cond.end455.us
  %indvars.iv.next1534 = add nuw nsw i64 %indvars.iv1533, 1
  %lftr.wideiv1535 = trunc i64 %indvars.iv.next1534 to i32
  %exitcond1536 = icmp eq i32 %lftr.wideiv1535, %num_tokens
  br i1 %exitcond1536, label %for.end464, label %for.body414.us

for.body414:                                      ; preds = %for.body414.lr.ph, %for.inc462
  %indvars.iv1525 = phi i64 [ %indvars.iv.next1526, %for.inc462 ], [ 0, %for.body414.lr.ph ]
  %beg417 = getelementptr inbounds %struct.token_pos* %tokens, i64 %indvars.iv1525, i32 0
  %122 = load i8** %beg417, align 8, !tbaa !54
  %tobool418 = icmp eq i8* %122, null
  br i1 %tobool418, label %if.else458, label %cond.end455

cond.end455:                                      ; preds = %for.body414
  %sub.ptr.lhs.cast430 = ptrtoint i8* %122 to i64
  %sub.ptr.sub432 = sub i64 %sub.ptr.lhs.cast430, %sub.ptr.rhs.cast431
  %call435 = call %struct.sv* @Perl_newSViv(i64 %sub.ptr.sub432) #2
  call void @Perl_av_push(%struct.av* %call407, %struct.sv* %call435) #2
  %end440 = getelementptr inbounds %struct.token_pos* %tokens, i64 %indvars.iv1525, i32 1
  %123 = load i8** %beg417, align 8, !tbaa !54
  %124 = load i8** %end440, align 8, !tbaa !56
  %sub.ptr.lhs.cast452 = ptrtoint i8* %124 to i64
  %sub.ptr.rhs.cast453 = ptrtoint i8* %123 to i64
  %sub.ptr.sub454 = sub i64 %sub.ptr.lhs.cast452, %sub.ptr.rhs.cast453
  %call457 = call %struct.sv* @Perl_newSViv(i64 %sub.ptr.sub454) #2
  call void @Perl_av_push(%struct.av* %call407, %struct.sv* %call457) #2
  br label %for.inc462

if.else458:                                       ; preds = %for.body414
  %call459 = call %struct.sv* @Perl_newSViv(i64 0) #2
  call void @Perl_av_push(%struct.av* %call407, %struct.sv* %call459) #2
  %call460 = call %struct.sv* @Perl_newSViv(i64 0) #2
  call void @Perl_av_push(%struct.av* %call407, %struct.sv* %call460) #2
  br label %for.inc462

for.inc462:                                       ; preds = %cond.end455, %if.else458
  %indvars.iv.next1526 = add nuw nsw i64 %indvars.iv1525, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next1526 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %num_tokens
  br i1 %exitcond, label %for.end464, label %for.body414

for.end464:                                       ; preds = %for.inc462, %for.inc462.us
  %125 = bitcast %struct.av* %call407 to %struct.sv*
  %call465 = call %struct.sv* @Perl_newRV_noinc(%struct.sv* %125) #2
  %call466 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call465) #2
  br label %if.then841

sw.bb468:                                         ; preds = %for.body, %for.body, %for.body
  br i1 %cmp347, label %if.then471, label %if.then843

if.then471:                                       ; preds = %sw.bb468
  %126 = load i8** %beg401, align 8, !tbaa !54
  %127 = load i8** %end475, align 8, !tbaa !56
  %sub.ptr.lhs.cast478 = ptrtoint i8* %127 to i64
  %sub.ptr.rhs.cast479 = ptrtoint i8* %126 to i64
  %sub.ptr.sub480 = sub i64 %sub.ptr.lhs.cast478, %sub.ptr.rhs.cast479
  %call481 = call %struct.sv* @Perl_newSVpvn(i8* %126, i64 %sub.ptr.sub480) #2
  %call482 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call481) #2
  br i1 %tobool12, label %if.then484, label %if.end487

if.then484:                                       ; preds = %if.then471
  %sv_flags485 = getelementptr inbounds %struct.sv* %call482, i64 0, i32 2
  %128 = load i64* %sv_flags485, align 8, !tbaa !1
  %or486 = or i64 %128, 536870912
  store i64 %or486, i64* %sv_flags485, align 8, !tbaa !1
  br label %if.end487

if.end487:                                        ; preds = %if.then484, %if.then471
  %129 = load i8* %xml_mode488, align 1, !tbaa !79
  %tobool490 = icmp eq i8 %129, 0
  br i1 %tobool490, label %lor.lhs.false491, label %if.end500

lor.lhs.false491:                                 ; preds = %if.end487
  %130 = load i8* %case_sensitive492, align 1, !tbaa !87
  %tobool494 = icmp eq i8 %130, 0
  %cmp496 = icmp ne i8 %112, 4
  %or.cond1042 = and i1 %tobool494, %cmp496
  br i1 %or.cond1042, label %if.then498, label %if.end500

if.then498:                                       ; preds = %lor.lhs.false491
  call void @llvm.lifetime.start(i64 8, i8* %109) #2
  %sv_flags.i1416 = getelementptr inbounds %struct.sv* %call482, i64 0, i32 2
  %131 = load i64* %sv_flags.i1416, align 8, !tbaa !1
  %and.i1417 = and i64 %131, 10223616
  %cmp.i1418 = icmp eq i64 %and.i1417, 262144
  br i1 %cmp.i1418, label %cond.true.i1422, label %cond.false.i1424

cond.true.i1422:                                  ; preds = %if.then498
  %sv_any.i1419 = getelementptr inbounds %struct.sv* %call482, i64 0, i32 0
  %132 = load i8** %sv_any.i1419, align 8, !tbaa !7
  %xpv_cur.i1420 = getelementptr inbounds i8* %132, i64 8
  %133 = bitcast i8* %xpv_cur.i1420 to i64*
  %134 = load i64* %133, align 8, !tbaa !42
  store i64 %134, i64* %len.i1415, align 8, !tbaa !27
  %xpv_pv.i1421 = bitcast i8* %132 to i8**
  %135 = load i8** %xpv_pv.i1421, align 8, !tbaa !44
  br label %for.cond.i1431

cond.false.i1424:                                 ; preds = %if.then498
  %call.i1423 = call i8* @Perl_sv_pvn_force_flags(%struct.sv* %call482, i64* %len.i1415, i64 2) #2
  br label %for.condthread-pre-split.i1427

for.condthread-pre-split.i1427:                   ; preds = %for.body.i1436, %cond.false.i1424
  %s.0.ph.i1425 = phi i8* [ %call.i1423, %cond.false.i1424 ], [ %incdec.ptr.i1435, %for.body.i1436 ]
  %.pr.i1426 = load i64* %len.i1415, align 8, !tbaa !27
  br label %for.cond.i1431

for.cond.i1431:                                   ; preds = %for.condthread-pre-split.i1427, %cond.true.i1422
  %136 = phi i64 [ %.pr.i1426, %for.condthread-pre-split.i1427 ], [ %134, %cond.true.i1422 ]
  %s.0.i1428 = phi i8* [ %s.0.ph.i1425, %for.condthread-pre-split.i1427 ], [ %135, %cond.true.i1422 ]
  %dec.i1429 = add i64 %136, -1
  store i64 %dec.i1429, i64* %len.i1415, align 8, !tbaa !27
  %tobool.i1430 = icmp eq i64 %136, 0
  br i1 %tobool.i1430, label %if.end500, label %for.body.i1436

for.body.i1436:                                   ; preds = %for.cond.i1431
  %137 = load i8* %s.0.i1428, align 1, !tbaa !45
  %.off.i1432 = add i8 %137, -65
  %138 = icmp ult i8 %.off.i1432, 26
  %add.i1433 = add i8 %137, 32
  %add..i1434 = select i1 %138, i8 %add.i1433, i8 %137
  store i8 %add..i1434, i8* %s.0.i1428, align 1, !tbaa !45
  %incdec.ptr.i1435 = getelementptr inbounds i8* %s.0.i1428, i64 1
  br label %for.condthread-pre-split.i1427

if.end500:                                        ; preds = %for.cond.i1431, %if.end487, %lor.lhs.false491
  %cmp501 = icmp eq i8 %112, 6
  %or.cond1043 = and i1 %cmp501, %cmp504
  br i1 %or.cond1043, label %if.then506, label %if.then841

if.then506:                                       ; preds = %if.end500
  call void @Perl_sv_insert(%struct.sv* %call482, i64 0, i64 0, i8* %arrayidx509, i64 1) #2
  br label %if.then841

sw.bb512:                                         ; preds = %for.body, %for.body
  br i1 %cmp513, label %if.then515, label %if.else666

if.then515:                                       ; preds = %sw.bb512
  %cmp519 = icmp eq i8 %112, 7
  br i1 %cmp519, label %if.then521, label %if.end526

if.then521:                                       ; preds = %if.then515
  %call522 = call %struct.hv* @Perl_newHV() #2
  %139 = bitcast %struct.hv* %call522 to %struct.sv*
  %call523 = call %struct.sv* @Perl_newRV_noinc(%struct.sv* %139) #2
  %call524 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call523) #2
  br label %if.end526

if.end526:                                        ; preds = %if.then515, %if.then521
  %hv.0 = phi %struct.hv* [ %call522, %if.then521 ], [ null, %if.then515 ]
  %push_arg.0 = phi i32 [ 1, %if.then521 ], [ 0, %if.then515 ]
  %arg.0 = phi %struct.sv* [ %call524, %if.then521 ], [ null, %if.then515 ]
  br i1 %cmp5281506, label %for.body530, label %sw.epilog

for.body530:                                      ; preds = %if.end526, %for.inc663
  %indvars.iv1522 = phi i64 [ %indvars.iv.next1523, %for.inc663 ], [ 1, %if.end526 ]
  %sp.31508 = phi %struct.sv** [ %sp.6, %for.inc663 ], [ %sp.21516, %if.end526 ]
  %beg534 = getelementptr inbounds %struct.token_pos* %tokens, i64 %indvars.iv1522, i32 0
  %140 = load i8** %beg534, align 8, !tbaa !54
  %end537 = getelementptr inbounds %struct.token_pos* %tokens, i64 %indvars.iv1522, i32 1
  %141 = load i8** %end537, align 8, !tbaa !56
  %sub.ptr.lhs.cast541 = ptrtoint i8* %141 to i64
  %sub.ptr.rhs.cast542 = ptrtoint i8* %140 to i64
  %sub.ptr.sub543 = sub i64 %sub.ptr.lhs.cast541, %sub.ptr.rhs.cast542
  %call544 = call %struct.sv* @Perl_newSVpvn(i8* %140, i64 %sub.ptr.sub543) #2
  br i1 %tobool12, label %if.then547, label %if.end550

if.then547:                                       ; preds = %for.body530
  %sv_flags548 = getelementptr inbounds %struct.sv* %call544, i64 0, i32 2
  %142 = load i64* %sv_flags548, align 8, !tbaa !1
  %or549 = or i64 %142, 536870912
  store i64 %or549, i64* %sv_flags548, align 8, !tbaa !1
  br label %if.end550

if.end550:                                        ; preds = %if.then547, %for.body530
  %143 = add nsw i64 %indvars.iv1522, 1
  %beg554 = getelementptr inbounds %struct.token_pos* %tokens, i64 %143, i32 0
  %144 = load i8** %beg554, align 8, !tbaa !54
  %tobool555 = icmp eq i8* %144, null
  br i1 %tobool555, label %if.else602, label %if.then556

if.then556:                                       ; preds = %if.end550
  %end567 = getelementptr inbounds %struct.token_pos* %tokens, i64 %143, i32 1
  %145 = load i8** %end567, align 8, !tbaa !56
  %sub.ptr.lhs.cast568 = ptrtoint i8* %145 to i64
  %sub.ptr.rhs.cast569 = ptrtoint i8* %144 to i64
  %sub.ptr.sub570 = sub i64 %sub.ptr.lhs.cast568, %sub.ptr.rhs.cast569
  %146 = load i8* %144, align 1, !tbaa !45
  switch i8 %146, label %if.end581 [
    i8 34, label %if.then578
    i8 39, label %if.then578
  ]

if.then578:                                       ; preds = %if.then556, %if.then556
  %incdec.ptr579 = getelementptr inbounds i8* %144, i64 1
  %sub580 = add i64 %sub.ptr.sub570, -2
  br label %if.end581

if.end581:                                        ; preds = %if.then556, %if.then578
  %beg558.0 = phi i8* [ %incdec.ptr579, %if.then578 ], [ %144, %if.then556 ]
  %len.0 = phi i64 [ %sub580, %if.then578 ], [ %sub.ptr.sub570, %if.then556 ]
  %call582 = call %struct.sv* @Perl_newSVpvn(i8* %beg558.0, i64 %len.0) #2
  br i1 %tobool12, label %if.then584, label %if.end587

if.then584:                                       ; preds = %if.end581
  %sv_flags585 = getelementptr inbounds %struct.sv* %call582, i64 0, i32 2
  %147 = load i64* %sv_flags585, align 8, !tbaa !1
  %or586 = or i64 %147, 536870912
  store i64 %or586, i64* %sv_flags585, align 8, !tbaa !1
  br label %if.end587

if.end587:                                        ; preds = %if.then584, %if.end581
  %148 = load i8* %attr_encoded, align 1, !tbaa !91
  %tobool588 = icmp eq i8 %148, 0
  br i1 %tobool588, label %if.then589, label %if.end611

if.then589:                                       ; preds = %if.end587
  %149 = load i8* %utf8_mode, align 1, !tbaa !64
  %tobool590 = icmp eq i8 %149, 0
  br i1 %tobool590, label %if.end593, label %if.then591

if.then591:                                       ; preds = %if.then589
  %call592 = call signext i8 @Perl_sv_utf8_decode(%struct.sv* %call582) #2
  br label %if.end593

if.end593:                                        ; preds = %if.then589, %if.then591
  %150 = load %struct.hv** %entity2char, align 8, !tbaa !30
  call fastcc void @decode_entities(%struct.sv* %call582, %struct.hv* %150, i8 signext 0)
  %151 = load i8* %utf8_mode, align 1, !tbaa !64
  %tobool596 = icmp eq i8 %151, 0
  br i1 %tobool596, label %if.end611, label %if.then597

if.then597:                                       ; preds = %if.end593
  %sv_flags598 = getelementptr inbounds %struct.sv* %call582, i64 0, i32 2
  %152 = load i64* %sv_flags598, align 8, !tbaa !1
  %and599 = and i64 %152, -536870913
  store i64 %and599, i64* %sv_flags598, align 8, !tbaa !1
  br label %if.end611

if.else602:                                       ; preds = %if.end550
  %153 = load %struct.sv** %bool_attr_val, align 8, !tbaa !17
  %tobool604 = icmp eq %struct.sv* %153, null
  br i1 %tobool604, label %if.else608, label %if.then605

if.then605:                                       ; preds = %if.else602
  %call607 = call %struct.sv* @Perl_newSVsv(%struct.sv* %153) #2
  br label %if.end611

if.else608:                                       ; preds = %if.else602
  %call609 = call %struct.sv* @Perl_newSVsv(%struct.sv* %call544) #2
  br label %if.end611

if.end611:                                        ; preds = %if.end593, %if.end587, %if.then605, %if.else608, %if.then597
  %attrval.0 = phi %struct.sv* [ %call582, %if.end587 ], [ %call582, %if.then597 ], [ %call582, %if.end593 ], [ %call607, %if.then605 ], [ %call609, %if.else608 ]
  %154 = load i8* %xml_mode488, align 1, !tbaa !79
  %tobool614 = icmp eq i8 %154, 0
  br i1 %tobool614, label %lor.lhs.false615, label %if.end621

lor.lhs.false615:                                 ; preds = %if.end611
  %155 = load i8* %case_sensitive492, align 1, !tbaa !87
  %tobool618 = icmp eq i8 %155, 0
  br i1 %tobool618, label %if.then619, label %if.end621

if.then619:                                       ; preds = %lor.lhs.false615
  call void @llvm.lifetime.start(i64 8, i8* %110) #2
  %sv_flags.i1393 = getelementptr inbounds %struct.sv* %call544, i64 0, i32 2
  %156 = load i64* %sv_flags.i1393, align 8, !tbaa !1
  %and.i1394 = and i64 %156, 10223616
  %cmp.i1395 = icmp eq i64 %and.i1394, 262144
  br i1 %cmp.i1395, label %cond.true.i1399, label %cond.false.i1401

cond.true.i1399:                                  ; preds = %if.then619
  %sv_any.i1396 = getelementptr inbounds %struct.sv* %call544, i64 0, i32 0
  %157 = load i8** %sv_any.i1396, align 8, !tbaa !7
  %xpv_cur.i1397 = getelementptr inbounds i8* %157, i64 8
  %158 = bitcast i8* %xpv_cur.i1397 to i64*
  %159 = load i64* %158, align 8, !tbaa !42
  store i64 %159, i64* %len.i1392, align 8, !tbaa !27
  %xpv_pv.i1398 = bitcast i8* %157 to i8**
  %160 = load i8** %xpv_pv.i1398, align 8, !tbaa !44
  br label %for.cond.i1408

cond.false.i1401:                                 ; preds = %if.then619
  %call.i1400 = call i8* @Perl_sv_pvn_force_flags(%struct.sv* %call544, i64* %len.i1392, i64 2) #2
  br label %for.condthread-pre-split.i1404

for.condthread-pre-split.i1404:                   ; preds = %for.body.i1413, %cond.false.i1401
  %s.0.ph.i1402 = phi i8* [ %call.i1400, %cond.false.i1401 ], [ %incdec.ptr.i1412, %for.body.i1413 ]
  %.pr.i1403 = load i64* %len.i1392, align 8, !tbaa !27
  br label %for.cond.i1408

for.cond.i1408:                                   ; preds = %for.condthread-pre-split.i1404, %cond.true.i1399
  %161 = phi i64 [ %.pr.i1403, %for.condthread-pre-split.i1404 ], [ %159, %cond.true.i1399 ]
  %s.0.i1405 = phi i8* [ %s.0.ph.i1402, %for.condthread-pre-split.i1404 ], [ %160, %cond.true.i1399 ]
  %dec.i1406 = add i64 %161, -1
  store i64 %dec.i1406, i64* %len.i1392, align 8, !tbaa !27
  %tobool.i1407 = icmp eq i64 %161, 0
  br i1 %tobool.i1407, label %if.end621, label %for.body.i1413

for.body.i1413:                                   ; preds = %for.cond.i1408
  %162 = load i8* %s.0.i1405, align 1, !tbaa !45
  %.off.i1409 = add i8 %162, -65
  %163 = icmp ult i8 %.off.i1409, 26
  %add.i1410 = add i8 %162, 32
  %add..i1411 = select i1 %163, i8 %add.i1410, i8 %162
  store i8 %add..i1411, i8* %s.0.i1405, align 1, !tbaa !45
  %incdec.ptr.i1412 = getelementptr inbounds i8* %s.0.i1405, i64 1
  br label %for.condthread-pre-split.i1404

if.end621:                                        ; preds = %for.cond.i1408, %lor.lhs.false615, %if.end611
  br i1 %cmp519, label %if.then624, label %if.else633

if.then624:                                       ; preds = %if.end621
  %call625 = call signext i8 @Perl_hv_exists_ent(%struct.hv* %hv.0, %struct.sv* %call544, i64 0) #2
  %tobool627 = icmp eq i8 %call625, 0
  br i1 %tobool627, label %lor.lhs.false628, label %if.then631

lor.lhs.false628:                                 ; preds = %if.then624
  %call629 = call %struct.he* @Perl_hv_store_ent(%struct.hv* %hv.0, %struct.sv* %call544, %struct.sv* %attrval.0, i64 0) #2
  %tobool630 = icmp eq %struct.he* %call629, null
  br i1 %tobool630, label %if.then631, label %if.end632

if.then631:                                       ; preds = %lor.lhs.false628, %if.then624
  call void @Perl_sv_free(%struct.sv* %attrval.0) #2
  br label %if.end632

if.end632:                                        ; preds = %lor.lhs.false628, %if.then631
  call void @Perl_sv_free(%struct.sv* %call544) #2
  br label %for.inc663

if.else633:                                       ; preds = %if.end621
  br i1 %tobool846, label %if.else636, label %if.then635

if.then635:                                       ; preds = %if.else633
  call void @Perl_av_push(%struct.av* %array.0, %struct.sv* %call544) #2
  call void @Perl_av_push(%struct.av* %array.0, %struct.sv* %attrval.0) #2
  br label %for.inc663

if.else636:                                       ; preds = %if.else633
  %164 = load %struct.sv*** @PL_stack_max, align 8, !tbaa !26
  %sub.ptr.lhs.cast637 = ptrtoint %struct.sv** %164 to i64
  %sub.ptr.rhs.cast638 = ptrtoint %struct.sv** %sp.31508 to i64
  %sub.ptr.sub639 = sub i64 %sub.ptr.lhs.cast637, %sub.ptr.rhs.cast638
  %cmp641 = icmp slt i64 %sub.ptr.sub639, 8
  br i1 %cmp641, label %if.then643, label %if.end645

if.then643:                                       ; preds = %if.else636
  %call644 = call %struct.sv** @Perl_stack_grow(%struct.sv** %sp.31508, %struct.sv** %sp.31508, i32 1) #2
  br label %if.end645

if.end645:                                        ; preds = %if.then643, %if.else636
  %sp.4 = phi %struct.sv** [ %call644, %if.then643 ], [ %sp.31508, %if.else636 ]
  %call647 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call544) #2
  %incdec.ptr648 = getelementptr inbounds %struct.sv** %sp.4, i64 1
  store %struct.sv* %call647, %struct.sv** %incdec.ptr648, align 8, !tbaa !26
  %165 = load %struct.sv*** @PL_stack_max, align 8, !tbaa !26
  %sub.ptr.lhs.cast649 = ptrtoint %struct.sv** %165 to i64
  %sub.ptr.rhs.cast650 = ptrtoint %struct.sv** %incdec.ptr648 to i64
  %sub.ptr.sub651 = sub i64 %sub.ptr.lhs.cast649, %sub.ptr.rhs.cast650
  %cmp653 = icmp slt i64 %sub.ptr.sub651, 8
  br i1 %cmp653, label %if.then655, label %if.end657

if.then655:                                       ; preds = %if.end645
  %call656 = call %struct.sv** @Perl_stack_grow(%struct.sv** %incdec.ptr648, %struct.sv** %incdec.ptr648, i32 1) #2
  br label %if.end657

if.end657:                                        ; preds = %if.then655, %if.end645
  %sp.5 = phi %struct.sv** [ %call656, %if.then655 ], [ %incdec.ptr648, %if.end645 ]
  %call659 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %attrval.0) #2
  %incdec.ptr660 = getelementptr inbounds %struct.sv** %sp.5, i64 1
  store %struct.sv* %call659, %struct.sv** %incdec.ptr660, align 8, !tbaa !26
  br label %for.inc663

for.inc663:                                       ; preds = %if.end632, %if.end657, %if.then635
  %sp.6 = phi %struct.sv** [ %sp.31508, %if.end632 ], [ %sp.31508, %if.then635 ], [ %incdec.ptr660, %if.end657 ]
  %indvars.iv.next1523 = add nuw nsw i64 %indvars.iv1522, 2
  %166 = trunc i64 %indvars.iv.next1523 to i32
  %cmp528 = icmp slt i32 %166, %num_tokens
  br i1 %cmp528, label %for.body530, label %sw.epilog

if.else666:                                       ; preds = %sw.bb512
  %cmp667 = icmp eq i8 %112, 8
  br i1 %cmp667, label %for.inc865, label %if.then843

sw.bb672:                                         ; preds = %for.body
  br i1 %cmp513, label %if.then675, label %if.then843

if.then675:                                       ; preds = %sw.bb672
  %call678 = call %struct.av* @Perl_newAV() #2
  br i1 %cmp5281506, label %for.body684.lr.ph, label %for.end717

for.body684.lr.ph:                                ; preds = %if.then675
  br i1 %tobool12, label %if.end704.us, label %if.end704

if.end704.us:                                     ; preds = %for.body684.lr.ph, %if.end714.us
  %indvars.iv1531 = phi i64 [ %indvars.iv.next1532, %if.end714.us ], [ 1, %for.body684.lr.ph ]
  %beg689.us = getelementptr inbounds %struct.token_pos* %tokens, i64 %indvars.iv1531, i32 0
  %167 = load i8** %beg689.us, align 8, !tbaa !54
  %end692.us = getelementptr inbounds %struct.token_pos* %tokens, i64 %indvars.iv1531, i32 1
  %168 = load i8** %end692.us, align 8, !tbaa !56
  %sub.ptr.lhs.cast696.us = ptrtoint i8* %168 to i64
  %sub.ptr.rhs.cast697.us = ptrtoint i8* %167 to i64
  %sub.ptr.sub698.us = sub i64 %sub.ptr.lhs.cast696.us, %sub.ptr.rhs.cast697.us
  %call699.us = call %struct.sv* @Perl_newSVpvn(i8* %167, i64 %sub.ptr.sub698.us) #2
  %sv_flags702.us = getelementptr inbounds %struct.sv* %call699.us, i64 0, i32 2
  %169 = load i64* %sv_flags702.us, align 8, !tbaa !1
  %or703.us = or i64 %169, 536870912
  store i64 %or703.us, i64* %sv_flags702.us, align 8, !tbaa !1
  %170 = load i8* %xml_mode488, align 1, !tbaa !79
  %tobool707.us = icmp eq i8 %170, 0
  br i1 %tobool707.us, label %lor.lhs.false708.us, label %if.end714.us

lor.lhs.false708.us:                              ; preds = %if.end704.us
  %171 = load i8* %case_sensitive492, align 1, !tbaa !87
  %tobool711.us = icmp eq i8 %171, 0
  br i1 %tobool711.us, label %if.then712.us, label %if.end714.us

if.then712.us:                                    ; preds = %lor.lhs.false708.us
  call void @llvm.lifetime.start(i64 8, i8* %111) #2
  %sv_flags.i.us = getelementptr inbounds %struct.sv* %call699.us, i64 0, i32 2
  %172 = load i64* %sv_flags.i.us, align 8, !tbaa !1
  %and.i.us = and i64 %172, 10223616
  %cmp.i.us = icmp eq i64 %and.i.us, 262144
  br i1 %cmp.i.us, label %cond.true.i.us, label %cond.false.i.us

cond.false.i.us:                                  ; preds = %if.then712.us
  %call.i.us = call i8* @Perl_sv_pvn_force_flags(%struct.sv* %call699.us, i64* %len.i, i64 2) #2
  br label %for.condthread-pre-split.i.us

cond.true.i.us:                                   ; preds = %if.then712.us
  %sv_any.i.us = getelementptr inbounds %struct.sv* %call699.us, i64 0, i32 0
  %173 = load i8** %sv_any.i.us, align 8, !tbaa !7
  %xpv_cur.i.us = getelementptr inbounds i8* %173, i64 8
  %174 = bitcast i8* %xpv_cur.i.us to i64*
  %175 = load i64* %174, align 8, !tbaa !42
  store i64 %175, i64* %len.i, align 8, !tbaa !27
  %xpv_pv.i.us = bitcast i8* %173 to i8**
  %176 = load i8** %xpv_pv.i.us, align 8, !tbaa !44
  br label %for.cond.i.us

for.cond.i.us:                                    ; preds = %for.condthread-pre-split.i.us, %cond.true.i.us
  %177 = phi i64 [ %.pr.i.us, %for.condthread-pre-split.i.us ], [ %175, %cond.true.i.us ]
  %s.0.i.us = phi i8* [ %s.0.ph.i.us, %for.condthread-pre-split.i.us ], [ %176, %cond.true.i.us ]
  %dec.i.us = add i64 %177, -1
  store i64 %dec.i.us, i64* %len.i, align 8, !tbaa !27
  %tobool.i.us = icmp eq i64 %177, 0
  br i1 %tobool.i.us, label %if.end714.us, label %for.body.i.us

for.body.i.us:                                    ; preds = %for.cond.i.us
  %178 = load i8* %s.0.i.us, align 1, !tbaa !45
  %.off.i.us = add i8 %178, -65
  %179 = icmp ult i8 %.off.i.us, 26
  %add.i.us = add i8 %178, 32
  %add..i.us = select i1 %179, i8 %add.i.us, i8 %178
  store i8 %add..i.us, i8* %s.0.i.us, align 1, !tbaa !45
  %incdec.ptr.i.us = getelementptr inbounds i8* %s.0.i.us, i64 1
  br label %for.condthread-pre-split.i.us

for.condthread-pre-split.i.us:                    ; preds = %for.body.i.us, %cond.false.i.us
  %s.0.ph.i.us = phi i8* [ %call.i.us, %cond.false.i.us ], [ %incdec.ptr.i.us, %for.body.i.us ]
  %.pr.i.us = load i64* %len.i, align 8, !tbaa !27
  br label %for.cond.i.us

if.end714.us:                                     ; preds = %for.cond.i.us, %lor.lhs.false708.us, %if.end704.us
  call void @Perl_av_push(%struct.av* %call678, %struct.sv* %call699.us) #2
  %indvars.iv.next1532 = add nuw nsw i64 %indvars.iv1531, 2
  %180 = trunc i64 %indvars.iv.next1532 to i32
  %cmp682.us = icmp slt i32 %180, %num_tokens
  br i1 %cmp682.us, label %if.end704.us, label %for.end717

if.end704:                                        ; preds = %for.body684.lr.ph, %if.end714
  %indvars.iv = phi i64 [ %indvars.iv.next, %if.end714 ], [ 1, %for.body684.lr.ph ]
  %beg689 = getelementptr inbounds %struct.token_pos* %tokens, i64 %indvars.iv, i32 0
  %181 = load i8** %beg689, align 8, !tbaa !54
  %end692 = getelementptr inbounds %struct.token_pos* %tokens, i64 %indvars.iv, i32 1
  %182 = load i8** %end692, align 8, !tbaa !56
  %sub.ptr.lhs.cast696 = ptrtoint i8* %182 to i64
  %sub.ptr.rhs.cast697 = ptrtoint i8* %181 to i64
  %sub.ptr.sub698 = sub i64 %sub.ptr.lhs.cast696, %sub.ptr.rhs.cast697
  %call699 = call %struct.sv* @Perl_newSVpvn(i8* %181, i64 %sub.ptr.sub698) #2
  %183 = load i8* %xml_mode488, align 1, !tbaa !79
  %tobool707 = icmp eq i8 %183, 0
  br i1 %tobool707, label %lor.lhs.false708, label %if.end714

lor.lhs.false708:                                 ; preds = %if.end704
  %184 = load i8* %case_sensitive492, align 1, !tbaa !87
  %tobool711 = icmp eq i8 %184, 0
  br i1 %tobool711, label %if.then712, label %if.end714

if.then712:                                       ; preds = %lor.lhs.false708
  call void @llvm.lifetime.start(i64 8, i8* %111) #2
  %sv_flags.i = getelementptr inbounds %struct.sv* %call699, i64 0, i32 2
  %185 = load i64* %sv_flags.i, align 8, !tbaa !1
  %and.i = and i64 %185, 10223616
  %cmp.i = icmp eq i64 %and.i, 262144
  br i1 %cmp.i, label %cond.true.i, label %cond.false.i

cond.true.i:                                      ; preds = %if.then712
  %sv_any.i = getelementptr inbounds %struct.sv* %call699, i64 0, i32 0
  %186 = load i8** %sv_any.i, align 8, !tbaa !7
  %xpv_cur.i = getelementptr inbounds i8* %186, i64 8
  %187 = bitcast i8* %xpv_cur.i to i64*
  %188 = load i64* %187, align 8, !tbaa !42
  store i64 %188, i64* %len.i, align 8, !tbaa !27
  %xpv_pv.i = bitcast i8* %186 to i8**
  %189 = load i8** %xpv_pv.i, align 8, !tbaa !44
  br label %for.cond.i

cond.false.i:                                     ; preds = %if.then712
  %call.i = call i8* @Perl_sv_pvn_force_flags(%struct.sv* %call699, i64* %len.i, i64 2) #2
  br label %for.condthread-pre-split.i

for.condthread-pre-split.i:                       ; preds = %for.body.i, %cond.false.i
  %s.0.ph.i = phi i8* [ %call.i, %cond.false.i ], [ %incdec.ptr.i, %for.body.i ]
  %.pr.i = load i64* %len.i, align 8, !tbaa !27
  br label %for.cond.i

for.cond.i:                                       ; preds = %for.condthread-pre-split.i, %cond.true.i
  %190 = phi i64 [ %.pr.i, %for.condthread-pre-split.i ], [ %188, %cond.true.i ]
  %s.0.i = phi i8* [ %s.0.ph.i, %for.condthread-pre-split.i ], [ %189, %cond.true.i ]
  %dec.i = add i64 %190, -1
  store i64 %dec.i, i64* %len.i, align 8, !tbaa !27
  %tobool.i = icmp eq i64 %190, 0
  br i1 %tobool.i, label %if.end714, label %for.body.i

for.body.i:                                       ; preds = %for.cond.i
  %191 = load i8* %s.0.i, align 1, !tbaa !45
  %.off.i = add i8 %191, -65
  %192 = icmp ult i8 %.off.i, 26
  %add.i = add i8 %191, 32
  %add..i = select i1 %192, i8 %add.i, i8 %191
  store i8 %add..i, i8* %s.0.i, align 1, !tbaa !45
  %incdec.ptr.i = getelementptr inbounds i8* %s.0.i, i64 1
  br label %for.condthread-pre-split.i

if.end714:                                        ; preds = %for.cond.i, %lor.lhs.false708, %if.end704
  call void @Perl_av_push(%struct.av* %call678, %struct.sv* %call699) #2
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 2
  %193 = trunc i64 %indvars.iv.next to i32
  %cmp682 = icmp slt i32 %193, %num_tokens
  br i1 %cmp682, label %if.end704, label %for.end717

for.end717:                                       ; preds = %if.end714, %if.end714.us, %if.then675
  %194 = bitcast %struct.av* %call678 to %struct.sv*
  %call718 = call %struct.sv* @Perl_newRV_noinc(%struct.sv* %194) #2
  %call719 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call718) #2
  br label %if.then841

sw.bb721:                                         ; preds = %for.body
  %call725 = call %struct.sv* @Perl_newSVpvn(i8* %beg, i64 %sub.ptr.sub724) #2
  %call726 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call725) #2
  br i1 %tobool12, label %if.then728, label %if.then841

if.then728:                                       ; preds = %sw.bb721
  %sv_flags729 = getelementptr inbounds %struct.sv* %call726, i64 0, i32 2
  %195 = load i64* %sv_flags729, align 8, !tbaa !1
  %or730 = or i64 %195, 536870912
  store i64 %or730, i64* %sv_flags729, align 8, !tbaa !1
  br label %if.end845

sw.bb732:                                         ; preds = %for.body
  br i1 %cmp213, label %if.then735, label %if.then843

if.then735:                                       ; preds = %sw.bb732
  %call739 = call %struct.sv* @Perl_newSVpvn(i8* %beg, i64 %sub.ptr.sub724) #2
  %call740 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call739) #2
  br i1 %tobool12, label %if.then742, label %if.end745

if.then742:                                       ; preds = %if.then735
  %sv_flags743 = getelementptr inbounds %struct.sv* %call740, i64 0, i32 2
  %196 = load i64* %sv_flags743, align 8, !tbaa !1
  %or744 = or i64 %196, 536870912
  store i64 %or744, i64* %sv_flags743, align 8, !tbaa !1
  br label %if.end745

if.end745:                                        ; preds = %if.then742, %if.then735
  %197 = load i8* %is_cdata746, align 1, !tbaa !58
  %tobool747 = icmp eq i8 %197, 0
  br i1 %tobool747, label %if.then748, label %if.then841

if.then748:                                       ; preds = %if.end745
  %198 = load i8* %utf8_mode, align 1, !tbaa !64
  %tobool750 = icmp eq i8 %198, 0
  br i1 %tobool750, label %if.end753, label %if.then751

if.then751:                                       ; preds = %if.then748
  %call752 = call signext i8 @Perl_sv_utf8_decode(%struct.sv* %call740) #2
  br label %if.end753

if.end753:                                        ; preds = %if.then748, %if.then751
  %199 = load %struct.hv** %entity2char, align 8, !tbaa !30
  call fastcc void @decode_entities(%struct.sv* %call740, %struct.hv* %199, i8 signext 1)
  %200 = load i8* %utf8_mode, align 1, !tbaa !64
  %tobool757 = icmp eq i8 %200, 0
  br i1 %tobool757, label %if.then841, label %if.then758

if.then758:                                       ; preds = %if.end753
  %sv_flags759 = getelementptr inbounds %struct.sv* %call740, i64 0, i32 2
  %201 = load i64* %sv_flags759, align 8, !tbaa !1
  %and760 = and i64 %201, -536870913
  store i64 %and760, i64* %sv_flags759, align 8, !tbaa !1
  br label %if.end845

sw.bb764:                                         ; preds = %for.body
  br i1 %cmp213, label %if.then767, label %if.then843

if.then767:                                       ; preds = %sw.bb764
  %202 = load i8* %is_cdata746, align 1, !tbaa !58
  %tobool770 = icmp ne i8 %202, 0
  %cond771 = select i1 %tobool770, %struct.sv* @PL_sv_yes, %struct.sv* @PL_sv_no
  br label %if.end845

sw.bb773:                                         ; preds = %for.body
  %203 = load %struct.sv** %skipped_text, align 8, !tbaa !15
  %call774 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %203) #2
  %call775 = call %struct.sv* @Perl_newSVpvn(i8* getelementptr inbounds ([1 x i8]* @.str63, i64 0, i64 0), i64 0) #2
  store %struct.sv* %call775, %struct.sv** %skipped_text, align 8, !tbaa !15
  br label %if.then841

sw.bb777:                                         ; preds = %for.body
  %call778 = call %struct.sv* @Perl_newSViv(i64 %0) #2
  %call779 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call778) #2
  br label %if.then841

sw.bb780:                                         ; preds = %for.body
  br i1 %tobool12, label %cond.true782, label %cond.end788

cond.true782:                                     ; preds = %sw.bb780
  %call783 = call i64 @Perl_utf8_distance(i8* %end, i8* %beg) #2
  br label %cond.end788

cond.end788:                                      ; preds = %sw.bb780, %cond.true782
  %cond789 = phi i64 [ %call783, %cond.true782 ], [ %sub.ptr.sub724, %sw.bb780 ]
  %add790 = add i64 %cond789, %0
  %call791 = call %struct.sv* @Perl_newSViv(i64 %add790) #2
  %call792 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call791) #2
  br label %if.then841

sw.bb793:                                         ; preds = %for.body
  br i1 %tobool12, label %cond.true795, label %cond.end801

cond.true795:                                     ; preds = %sw.bb793
  %call796 = call i64 @Perl_utf8_distance(i8* %end, i8* %beg) #2
  br label %cond.end801

cond.end801:                                      ; preds = %sw.bb793, %cond.true795
  %cond802 = phi i64 [ %call796, %cond.true795 ], [ %sub.ptr.sub724, %sw.bb793 ]
  %call803 = call %struct.sv* @Perl_newSViv(i64 %cond802) #2
  %call804 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call803) #2
  br label %if.then841

sw.bb805:                                         ; preds = %for.body
  %call806 = call %struct.sv* @Perl_newSViv(i64 %1) #2
  %call807 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call806) #2
  br label %if.then841

sw.bb808:                                         ; preds = %for.body
  %call809 = call %struct.sv* @Perl_newSViv(i64 %2) #2
  %call810 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call809) #2
  br label %if.then841

sw.bb811:                                         ; preds = %for.body
  %204 = load i8** %arrayidx813, align 8, !tbaa !26
  %call814 = call %struct.sv* @Perl_newSVpv(i8* %204, i64 0) #2
  %call815 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call814) #2
  br label %if.then841

sw.bb816:                                         ; preds = %for.body
  %arrayidx819 = getelementptr inbounds i8* %s.01515, i64 1
  %205 = load i8* %arrayidx819, align 1, !tbaa !45
  %conv820 = zext i8 %205 to i64
  %add.ptr821 = getelementptr inbounds i8* %s.01515, i64 2
  %call823 = call %struct.sv* @Perl_newSVpvn(i8* %add.ptr821, i64 %conv820) #2
  %call824 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call823) #2
  %206 = load %struct.sv** %argspec285, align 8, !tbaa !20
  %sv_flags826 = getelementptr inbounds %struct.sv* %206, i64 0, i32 2
  %207 = load i64* %sv_flags826, align 8, !tbaa !1
  %and827 = and i64 %207, 536870912
  %tobool828 = icmp eq i64 %and827, 0
  br i1 %tobool828, label %if.end832, label %if.then829

if.then829:                                       ; preds = %sw.bb816
  %sv_flags830 = getelementptr inbounds %struct.sv* %call824, i64 0, i32 2
  %208 = load i64* %sv_flags830, align 8, !tbaa !1
  %or831 = or i64 %208, 536870912
  store i64 %or831, i64* %sv_flags830, align 8, !tbaa !1
  br label %if.end832

if.end832:                                        ; preds = %sw.bb816, %if.then829
  %add833 = add i64 %conv820, 1
  %add.ptr834 = getelementptr inbounds i8* %s.01515, i64 %add833
  br label %if.then841

sw.bb835:                                         ; preds = %for.body
  %call836 = call %struct.sv* @Perl_sv_mortalcopy(%struct.sv* @PL_sv_undef) #2
  br label %if.then841

sw.default:                                       ; preds = %for.body
  %call838 = call %struct.sv* (i8*, ...)* @Perl_newSVpvf(i8* getelementptr inbounds ([15 x i8]* @.str92, i64 0, i64 0), i32 %conv344) #2
  %call839 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call838) #2
  br label %if.then841

sw.epilog:                                        ; preds = %for.inc663, %if.end526
  %sp.3.lcssa = phi %struct.sv** [ %sp.21516, %if.end526 ], [ %sp.6, %for.inc663 ]
  %tobool840 = icmp eq i32 %push_arg.0, 0
  br i1 %tobool840, label %for.inc865, label %if.then841

if.then841:                                       ; preds = %sw.bb, %for.end, %for.end464, %if.end500, %if.then506, %for.end717, %sw.bb721, %if.end753, %if.end745, %sw.bb773, %sw.bb777, %cond.end788, %cond.end801, %sw.bb805, %sw.bb808, %sw.bb811, %if.end832, %sw.bb835, %sw.default, %sw.epilog
  %sp.71493 = phi %struct.sv** [ %sp.3.lcssa, %sw.epilog ], [ %sp.21516, %sw.default ], [ %sp.21516, %sw.bb835 ], [ %sp.21516, %if.end832 ], [ %sp.21516, %sw.bb811 ], [ %sp.21516, %sw.bb808 ], [ %sp.21516, %sw.bb805 ], [ %sp.21516, %cond.end801 ], [ %sp.21516, %cond.end788 ], [ %sp.21516, %sw.bb777 ], [ %sp.21516, %sw.bb773 ], [ %sp.21516, %if.end745 ], [ %sp.21516, %if.end753 ], [ %sp.21516, %sw.bb721 ], [ %sp.21516, %for.end717 ], [ %sp.21516, %if.then506 ], [ %sp.21516, %if.end500 ], [ %sp.21516, %for.end464 ], [ %sp.21516, %for.end ], [ %sp.21516, %sw.bb ]
  %s.11491 = phi i8* [ %s.01515, %sw.epilog ], [ %s.01515, %sw.default ], [ %s.01515, %sw.bb835 ], [ %add.ptr834, %if.end832 ], [ %s.01515, %sw.bb811 ], [ %s.01515, %sw.bb808 ], [ %s.01515, %sw.bb805 ], [ %s.01515, %cond.end801 ], [ %s.01515, %cond.end788 ], [ %s.01515, %sw.bb777 ], [ %s.01515, %sw.bb773 ], [ %s.01515, %if.end745 ], [ %s.01515, %if.end753 ], [ %s.01515, %sw.bb721 ], [ %s.01515, %for.end717 ], [ %s.01515, %if.then506 ], [ %s.01515, %if.end500 ], [ %s.01515, %for.end464 ], [ %s.01515, %for.end ], [ %s.01515, %sw.bb ]
  %arg.11490 = phi %struct.sv* [ %arg.0, %sw.epilog ], [ %call839, %sw.default ], [ %call836, %sw.bb835 ], [ %call824, %if.end832 ], [ %call815, %sw.bb811 ], [ %call810, %sw.bb808 ], [ %call807, %sw.bb805 ], [ %call804, %cond.end801 ], [ %call792, %cond.end788 ], [ %call779, %sw.bb777 ], [ %call774, %sw.bb773 ], [ %call740, %if.end745 ], [ %call740, %if.end753 ], [ %call726, %sw.bb721 ], [ %call719, %for.end717 ], [ %call482, %if.then506 ], [ %call482, %if.end500 ], [ %call466, %for.end464 ], [ %call394, %for.end ], [ %call345, %sw.bb ]
  %tobool842 = icmp eq %struct.sv* %arg.11490, null
  br i1 %tobool842, label %if.then843, label %if.end845

if.then843:                                       ; preds = %if.else666, %sw.bb346, %sw.bb396, %land.lhs.true399, %sw.bb468, %sw.bb672, %sw.bb732, %sw.bb764, %if.then841
  %s.114911500 = phi i8* [ %s.11491, %if.then841 ], [ %s.01515, %sw.bb764 ], [ %s.01515, %sw.bb732 ], [ %s.01515, %sw.bb672 ], [ %s.01515, %sw.bb468 ], [ %s.01515, %land.lhs.true399 ], [ %s.01515, %sw.bb396 ], [ %s.01515, %sw.bb346 ], [ %s.01515, %if.else666 ]
  %sp.714931498 = phi %struct.sv** [ %sp.71493, %if.then841 ], [ %sp.21516, %sw.bb764 ], [ %sp.21516, %sw.bb732 ], [ %sp.21516, %sw.bb672 ], [ %sp.21516, %sw.bb468 ], [ %sp.21516, %land.lhs.true399 ], [ %sp.21516, %sw.bb396 ], [ %sp.21516, %sw.bb346 ], [ %sp.21516, %if.else666 ]
  %call844 = call %struct.sv* @Perl_sv_mortalcopy(%struct.sv* @PL_sv_undef) #2
  br label %if.end845

if.end845:                                        ; preds = %if.then728, %if.then758, %if.then767, %if.then841, %if.then843
  %s.114911499 = phi i8* [ %s.11491, %if.then841 ], [ %s.114911500, %if.then843 ], [ %s.01515, %if.then767 ], [ %s.01515, %if.then758 ], [ %s.01515, %if.then728 ]
  %sp.714931497 = phi %struct.sv** [ %sp.71493, %if.then841 ], [ %sp.714931498, %if.then843 ], [ %sp.21516, %if.then767 ], [ %sp.21516, %if.then758 ], [ %sp.21516, %if.then728 ]
  %209 = phi %struct.sv* [ %arg.11490, %if.then841 ], [ %call844, %if.then843 ], [ %cond771, %if.then767 ], [ %call740, %if.then758 ], [ %call726, %if.then728 ]
  br i1 %tobool846, label %if.else851, label %if.then847

if.then847:                                       ; preds = %if.end845
  store %struct.sv* %209, %struct.sv** @PL_Sv, align 8, !tbaa !26
  %tobool848 = icmp eq %struct.sv* %209, null
  br i1 %tobool848, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %if.then847
  %sv_refcnt = getelementptr inbounds %struct.sv* %209, i64 0, i32 1
  %210 = load i64* %sv_refcnt, align 8, !tbaa !73
  %inc849 = add i64 %210, 1
  store i64 %inc849, i64* %sv_refcnt, align 8, !tbaa !73
  br label %land.end

land.end:                                         ; preds = %if.then847, %land.rhs
  call void @Perl_av_push(%struct.av* %array.0, %struct.sv* %209) #2
  br label %for.inc865

if.else851:                                       ; preds = %if.end845
  %211 = load %struct.sv*** @PL_stack_max, align 8, !tbaa !26
  %sub.ptr.lhs.cast852 = ptrtoint %struct.sv** %211 to i64
  %sub.ptr.rhs.cast853 = ptrtoint %struct.sv** %sp.714931497 to i64
  %sub.ptr.sub854 = sub i64 %sub.ptr.lhs.cast852, %sub.ptr.rhs.cast853
  %cmp856 = icmp slt i64 %sub.ptr.sub854, 8
  br i1 %cmp856, label %if.then858, label %if.end860

if.then858:                                       ; preds = %if.else851
  %call859 = call %struct.sv** @Perl_stack_grow(%struct.sv** %sp.714931497, %struct.sv** %sp.714931497, i32 1) #2
  br label %if.end860

if.end860:                                        ; preds = %if.then858, %if.else851
  %sp.8 = phi %struct.sv** [ %call859, %if.then858 ], [ %sp.714931497, %if.else851 ]
  %incdec.ptr862 = getelementptr inbounds %struct.sv** %sp.8, i64 1
  store %struct.sv* %209, %struct.sv** %incdec.ptr862, align 8, !tbaa !26
  br label %for.inc865

for.inc865:                                       ; preds = %if.else666, %sw.epilog, %if.end860, %land.end
  %s.11492 = phi i8* [ %s.114911499, %land.end ], [ %s.114911499, %if.end860 ], [ %s.01515, %sw.epilog ], [ %s.01515, %if.else666 ]
  %sp.9 = phi %struct.sv** [ %sp.714931497, %land.end ], [ %incdec.ptr862, %if.end860 ], [ %sp.3.lcssa, %sw.epilog ], [ %sp.21516, %if.else666 ]
  %incdec.ptr866 = getelementptr inbounds i8* %s.11492, i64 1
  %212 = load i8* %incdec.ptr866, align 1, !tbaa !45
  %tobool340 = icmp eq i8 %212, 0
  br i1 %tobool340, label %for.end867, label %for.body

for.end867:                                       ; preds = %for.inc865, %if.end339
  %sp.2.lcssa = phi %struct.sv** [ %sp.1, %if.end339 ], [ %sp.9, %for.inc865 ]
  %tobool868 = icmp eq %struct.av* %array.0, null
  br i1 %tobool868, label %if.else877, label %if.then869

if.then869:                                       ; preds = %for.end867
  %213 = load %struct.sv** %cb154, align 8, !tbaa !18
  %214 = bitcast %struct.sv* %213 to %struct.av*
  %cmp871 = icmp eq %struct.av* %array.0, %214
  br i1 %cmp871, label %if.end983, label %if.then873

if.then873:                                       ; preds = %if.then869
  %215 = bitcast %struct.av* %array.0 to %struct.sv*
  %call875 = call %struct.sv* @Perl_newRV_noinc(%struct.sv* %215) #2
  call void @Perl_av_push(%struct.av* %214, %struct.sv* %call875) #2
  br label %if.end983

if.else877:                                       ; preds = %for.end867
  store %struct.sv** %sp.2.lcssa, %struct.sv*** @PL_stack_sp, align 8, !tbaa !26
  %216 = load i8* %argspec.1, align 1, !tbaa !45
  %cmp879 = icmp eq i8 %216, 1
  %217 = load %struct.sv** %cb154, align 8, !tbaa !18
  br i1 %cmp879, label %land.lhs.true881, label %if.else906

land.lhs.true881:                                 ; preds = %if.else877
  %sv_flags883 = getelementptr inbounds %struct.sv* %217, i64 0, i32 2
  %218 = load i64* %sv_flags883, align 8, !tbaa !1
  %and884 = and i64 %218, 524288
  %tobool885 = icmp eq i64 %and884, 0
  br i1 %tobool885, label %if.then886, label %if.else906

if.then886:                                       ; preds = %land.lhs.true881
  %and890 = and i64 %218, 262144
  %cmp891 = icmp eq i64 %and890, 0
  br i1 %cmp891, label %cond.false900, label %cond.true893

cond.true893:                                     ; preds = %if.then886
  %sv_any895 = getelementptr inbounds %struct.sv* %217, i64 0, i32 0
  %219 = load i8** %sv_any895, align 8, !tbaa !7
  %xpv_cur896 = getelementptr inbounds i8* %219, i64 8
  %220 = bitcast i8* %xpv_cur896 to i64*
  %221 = load i64* %220, align 8, !tbaa !42
  store i64 %221, i64* %my_na, align 8, !tbaa !27
  %xpv_pv899 = bitcast i8* %219 to i8**
  %222 = load i8** %xpv_pv899, align 8, !tbaa !44
  br label %cond.end903

cond.false900:                                    ; preds = %if.then886
  %call902 = call i8* @Perl_sv_2pv_flags(%struct.sv* %217, i64* %my_na, i64 2) #2
  br label %cond.end903

cond.end903:                                      ; preds = %cond.false900, %cond.true893
  %cond904 = phi i8* [ %222, %cond.true893 ], [ %call902, %cond.false900 ]
  %call905 = call i64 @Perl_call_method(i8* %cond904, i64 134) #2
  br label %if.end909

if.else906:                                       ; preds = %if.else877, %land.lhs.true881
  %call908 = call i64 @Perl_call_sv(%struct.sv* %217, i64 134) #2
  br label %if.end909

if.end909:                                        ; preds = %if.else906, %cond.end903
  %223 = load %struct.gv** @PL_errgv, align 8, !tbaa !26
  %sv_any910 = getelementptr inbounds %struct.gv* %223, i64 0, i32 0
  %224 = load %struct.xpvgv** %sv_any910, align 8, !tbaa !35
  %xgv_gp = getelementptr inbounds %struct.xpvgv* %224, i64 0, i32 7
  %225 = load %struct.gp** %xgv_gp, align 8, !tbaa !37
  %gp_sv = getelementptr inbounds %struct.gp* %225, i64 0, i32 0
  %226 = load %struct.sv** %gp_sv, align 8, !tbaa !40
  %tobool911 = icmp eq %struct.sv* %226, null
  br i1 %tobool911, label %if.end978, label %cond.false913

cond.false913:                                    ; preds = %if.end909
  %sv_flags917 = getelementptr inbounds %struct.sv* %226, i64 0, i32 2
  %227 = load i64* %sv_flags917, align 8, !tbaa !1
  %and918 = and i64 %227, 262144
  %tobool919 = icmp eq i64 %and918, 0
  br i1 %tobool919, label %cond.false940, label %cond.true920

cond.true920:                                     ; preds = %cond.false913
  %sv_any924 = getelementptr inbounds %struct.sv* %226, i64 0, i32 0
  %228 = load i8** %sv_any924, align 8, !tbaa !7
  %229 = bitcast i8* %228 to %struct.xpv*
  store %struct.xpv* %229, %struct.xpv** @PL_Xpv, align 8, !tbaa !26
  %tobool925 = icmp eq i8* %228, null
  br i1 %tobool925, label %if.end978, label %land.lhs.true926

land.lhs.true926:                                 ; preds = %cond.true920
  %xpv_cur927 = getelementptr inbounds i8* %228, i64 8
  %230 = bitcast i8* %xpv_cur927 to i64*
  %231 = load i64* %230, align 8, !tbaa !42
  %cmp928 = icmp ugt i64 %231, 1
  br i1 %cmp928, label %if.then977, label %lor.lhs.false930

lor.lhs.false930:                                 ; preds = %land.lhs.true926
  %tobool932 = icmp eq i64 %231, 0
  br i1 %tobool932, label %if.end978, label %land.lhs.true933

land.lhs.true933:                                 ; preds = %lor.lhs.false930
  %xpv_pv934 = bitcast i8* %228 to i8**
  %232 = load i8** %xpv_pv934, align 8, !tbaa !44
  %233 = load i8* %232, align 1, !tbaa !45
  %cmp936 = icmp eq i8 %233, 48
  br i1 %cmp936, label %if.end978, label %if.then977

cond.false940:                                    ; preds = %cond.false913
  %and945 = and i64 %227, 65536
  %tobool946 = icmp eq i64 %and945, 0
  br i1 %tobool946, label %cond.false955, label %cond.true947

cond.true947:                                     ; preds = %cond.false940
  %sv_any951 = getelementptr inbounds %struct.sv* %226, i64 0, i32 0
  %234 = load i8** %sv_any951, align 8, !tbaa !7
  %xiv_iv952 = getelementptr inbounds i8* %234, i64 24
  %235 = bitcast i8* %xiv_iv952 to i64*
  %236 = load i64* %235, align 8, !tbaa !8
  %cmp953 = icmp eq i64 %236, 0
  br i1 %cmp953, label %if.end978, label %if.then977

cond.false955:                                    ; preds = %cond.false940
  %and960 = and i64 %227, 131072
  %tobool961 = icmp eq i64 %and960, 0
  br i1 %tobool961, label %cond.false970, label %cond.true962

cond.true962:                                     ; preds = %cond.false955
  %sv_any966 = getelementptr inbounds %struct.sv* %226, i64 0, i32 0
  %237 = load i8** %sv_any966, align 8, !tbaa !7
  %xnv_nv967 = getelementptr inbounds i8* %237, i64 32
  %238 = bitcast i8* %xnv_nv967 to double*
  %239 = load double* %238, align 8, !tbaa !46
  %cmp968 = fcmp une double %239, 0.000000e+00
  br i1 %cmp968, label %if.then977, label %if.end978

cond.false970:                                    ; preds = %cond.false955
  %call974 = call signext i8 @Perl_sv_2bool(%struct.sv* %226) #2
  %tobool976 = icmp eq i8 %call974, 0
  br i1 %tobool976, label %if.end978, label %if.then977

if.then977:                                       ; preds = %land.lhs.true933, %cond.true947, %cond.false970, %land.lhs.true926, %cond.true962
  call void (i8*, ...)* @Perl_croak(i8* null) #2
  br label %if.end978

if.end978:                                        ; preds = %land.lhs.true933, %lor.lhs.false930, %cond.true920, %cond.true947, %cond.false970, %if.end909, %if.then977, %cond.true962
  %240 = load i64* @PL_tmps_ix, align 8, !tbaa !27
  %241 = load i64* @PL_tmps_floor, align 8, !tbaa !27
  %cmp979 = icmp sgt i64 %240, %241
  br i1 %cmp979, label %if.then981, label %if.end982

if.then981:                                       ; preds = %if.end978
  call void @Perl_free_tmps() #2
  br label %if.end982

if.end982:                                        ; preds = %if.then981, %if.end978
  call void @Perl_pop_scope() #2
  br label %if.end983

if.end983:                                        ; preds = %if.then869, %if.then873, %if.end982
  %skipped_text984 = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 16
  %242 = load %struct.sv** %skipped_text984, align 8, !tbaa !15
  %tobool985 = icmp eq %struct.sv* %242, null
  br i1 %tobool985, label %return, label %if.then986

if.then986:                                       ; preds = %if.end983
  %sv_any989 = getelementptr inbounds %struct.sv* %242, i64 0, i32 0
  %243 = load i8** %sv_any989, align 8, !tbaa !7
  %xpv_cur990 = getelementptr inbounds i8* %243, i64 8
  %244 = bitcast i8* %xpv_cur990 to i64*
  store i64 0, i64* %244, align 8, !tbaa !42
  br label %return

IGNORE_EVENT:                                     ; preds = %if.then90, %land.lhs.true123, %land.lhs.true131, %if.else137, %if.then146, %if.else99, %if.then103, %if.then97, %if.end52, %if.end48, %if.then116
  %skipped_text992 = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 16
  %245 = load %struct.sv** %skipped_text992, align 8, !tbaa !15
  %tobool993 = icmp eq %struct.sv* %245, null
  br i1 %tobool993, label %return, label %if.then994

if.then994:                                       ; preds = %IGNORE_EVENT
  br i1 %cmp, label %land.lhs.true997, label %if.end1006

land.lhs.true997:                                 ; preds = %if.then994
  %pend_text998 = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 11
  %246 = load %struct.sv** %pend_text998, align 8, !tbaa !14
  %tobool999 = icmp eq %struct.sv* %246, null
  br i1 %tobool999, label %if.end1006, label %land.lhs.true1000

land.lhs.true1000:                                ; preds = %land.lhs.true997
  %sv_flags1002 = getelementptr inbounds %struct.sv* %246, i64 0, i32 2
  %247 = load i64* %sv_flags1002, align 8, !tbaa !1
  %and1003 = and i64 %247, 118423552
  %tobool1004 = icmp eq i64 %and1003, 0
  br i1 %tobool1004, label %if.end1006, label %if.then1005

if.then1005:                                      ; preds = %land.lhs.true1000
  %unbroken_text.i1467 = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 24
  %248 = load i8* %unbroken_text.i1467, align 1, !tbaa !57
  %is_cdata.i1469 = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 8
  %249 = load i8* %is_cdata.i1469, align 1, !tbaa !58
  %250 = bitcast i64* %offset1 to <2 x i64>*
  %251 = load <2 x i64>* %250, align 8, !tbaa !27
  %252 = load i64* %column3, align 8, !tbaa !59
  store i8 0, i8* %unbroken_text.i1467, align 1, !tbaa !57
  store %struct.sv* null, %struct.sv** %pend_text998, align 8, !tbaa !14
  %pend_text_is_cdata.i1473 = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 12
  %253 = load i8* %pend_text_is_cdata.i1473, align 1, !tbaa !60
  store i8 %253, i8* %is_cdata.i1469, align 1, !tbaa !58
  %pend_text_offset.i1474 = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 13
  %254 = bitcast i64* %pend_text_offset.i1474 to <2 x i64>*
  %255 = load <2 x i64>* %254, align 8, !tbaa !27
  %256 = bitcast i64* %offset1 to <2 x i64>*
  store <2 x i64> %255, <2 x i64>* %256, align 8, !tbaa !27
  %pend_text_column.i1476 = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 15
  %257 = load i64* %pend_text_column.i1476, align 8, !tbaa !61
  store i64 %257, i64* %column3, align 8, !tbaa !59
  %sv_any.i1477 = getelementptr inbounds %struct.sv* %246, i64 0, i32 0
  %258 = load i8** %sv_any.i1477, align 8, !tbaa !7
  %xpv_pv.i1478 = bitcast i8* %258 to i8**
  %259 = load i8** %xpv_pv.i1478, align 8, !tbaa !44
  %xpv_cur.i1479 = getelementptr inbounds i8* %258, i64 8
  %260 = bitcast i8* %xpv_cur.i1479 to i64*
  %261 = load i64* %260, align 8, !tbaa !42
  %add.ptr.i1480 = getelementptr inbounds i8* %259, i64 %261
  %and.i1482 = and i64 %247, 536870912
  call fastcc void @report_event(%struct.p_state* %p_state, i32 4, i8* %259, i8* %add.ptr.i1480, i64 %and.i1482, %struct.token_pos* null, i32 0, %struct.sv* %self) #2
  %262 = load i64* %sv_flags1002, align 8, !tbaa !1
  %and11.i1483 = and i64 %262, 1223753727
  store i64 %and11.i1483, i64* %sv_flags1002, align 8, !tbaa !1
  %and13.i1484 = and i64 %262, 2097152
  %tobool.i1485 = icmp eq i64 %and13.i1484, 0
  br i1 %tobool.i1485, label %flush_pending_text.exit1488, label %land.rhs.i1487

land.rhs.i1487:                                   ; preds = %if.then1005
  %call.i1486 = call i32 @Perl_sv_backoff(%struct.sv* %246) #2
  br label %flush_pending_text.exit1488

flush_pending_text.exit1488:                      ; preds = %if.then1005, %land.rhs.i1487
  store i8 %248, i8* %unbroken_text.i1467, align 1, !tbaa !57
  store %struct.sv* %246, %struct.sv** %pend_text998, align 8, !tbaa !14
  store i8 %249, i8* %is_cdata.i1469, align 1, !tbaa !58
  %263 = bitcast i64* %offset1 to <2 x i64>*
  store <2 x i64> %251, <2 x i64>* %263, align 8, !tbaa !27
  store i64 %252, i64* %column3, align 8, !tbaa !59
  %.pre = load %struct.sv** %skipped_text992, align 8, !tbaa !15
  br label %if.end1006

if.end1006:                                       ; preds = %land.lhs.true1000, %land.lhs.true997, %flush_pending_text.exit1488, %if.then994
  %264 = phi %struct.sv* [ %245, %land.lhs.true1000 ], [ %245, %land.lhs.true997 ], [ %.pre, %flush_pending_text.exit1488 ], [ %245, %if.then994 ]
  %sv_flags1010 = getelementptr inbounds %struct.sv* %264, i64 0, i32 2
  %265 = load i64* %sv_flags1010, align 8, !tbaa !1
  %and1011 = and i64 %265, 536870912
  %tobool1012 = icmp eq i64 %and1011, 0
  br i1 %tobool12, label %land.lhs.true1008, label %lor.lhs.false1018

land.lhs.true1008:                                ; preds = %if.end1006
  br i1 %tobool1012, label %if.then1013, label %if.then1023

if.then1013:                                      ; preds = %land.lhs.true1008
  %call1015 = call i64 @Perl_sv_utf8_upgrade_flags(%struct.sv* %264, i64 2) #2
  %.pre1538 = load %struct.sv** %skipped_text992, align 8, !tbaa !15
  br label %if.then1023

lor.lhs.false1018:                                ; preds = %if.end1006
  br i1 %tobool1012, label %if.then1023, label %if.else1028

if.then1023:                                      ; preds = %if.then1013, %land.lhs.true1008, %lor.lhs.false1018
  %266 = phi %struct.sv* [ %.pre1538, %if.then1013 ], [ %264, %land.lhs.true1008 ], [ %264, %lor.lhs.false1018 ]
  %sub.ptr.lhs.cast1025 = ptrtoint i8* %end to i64
  %sub.ptr.rhs.cast1026 = ptrtoint i8* %beg to i64
  %sub.ptr.sub1027 = sub i64 %sub.ptr.lhs.cast1025, %sub.ptr.rhs.cast1026
  call void @Perl_sv_catpvn_flags(%struct.sv* %266, i8* %beg, i64 %sub.ptr.sub1027, i64 2) #2
  br label %return

if.else1028:                                      ; preds = %lor.lhs.false1018
  %sub.ptr.lhs.cast1031 = ptrtoint i8* %end to i64
  %sub.ptr.rhs.cast1032 = ptrtoint i8* %beg to i64
  %sub.ptr.sub1033 = sub i64 %sub.ptr.lhs.cast1031, %sub.ptr.rhs.cast1032
  %call1034 = call %struct.sv* @Perl_newSVpvn(i8* %beg, i64 %sub.ptr.sub1033) #2
  %call1035 = call i64 @Perl_sv_utf8_upgrade_flags(%struct.sv* %call1034, i64 2) #2
  %pend_text1036 = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 11
  %267 = load %struct.sv** %pend_text1036, align 8, !tbaa !14
  call void @Perl_sv_catsv_flags(%struct.sv* %267, %struct.sv* %call1034, i64 2) #2
  call void @Perl_sv_free(%struct.sv* %call1034) #2
  br label %return

return:                                           ; preds = %land.lhs.true177, %lor.lhs.false174, %cond.true168, %cond.true188, %cond.false203, %if.end983, %IGNORE_EVENT, %if.else1028, %if.then1023, %if.then986, %if.then259, %if.else264, %cond.true198
  ret void
}

declare void @Perl_sv_catsv_flags(%struct.sv*, %struct.sv*, i64) #1

declare void @Perl_warn(i8*, ...) #1

declare i32 @Perl_sv_backoff(%struct.sv*) #1

declare void @Perl_sv_chop(%struct.sv*, i8*) #1

declare %struct.sv* @Perl_newSVpv(i8*, i64) #1

; Function Attrs: nounwind readonly
declare i64 @strlen(i8* nocapture) #3

declare i64 @Perl_utf8_distance(i8*, i8*) #1

declare i64 @Perl_sv_eq(%struct.sv*, %struct.sv*) #1

declare %struct.he* @Perl_hv_fetch_ent(%struct.hv*, %struct.sv*, i64, i64) #1

declare i64 @Perl_sv_utf8_upgrade_flags(%struct.sv*, i64) #1

declare %struct.av* @Perl_newAV() #1

declare void @Perl_push_scope() #1

declare void @Perl_save_int(i32*) #1

declare %struct.sv* @Perl_sv_mortalcopy(%struct.sv*) #1

declare void @Perl_av_extend(%struct.av*, i64) #1

declare void @Perl_av_push(%struct.av*, %struct.sv*) #1

declare void @Perl_sv_insert(%struct.sv*, i64, i64, i8*, i64) #1

declare signext i8 @Perl_sv_utf8_decode(%struct.sv*) #1

declare signext i8 @Perl_hv_exists_ent(%struct.hv*, %struct.sv*, i64) #1

declare %struct.sv** @Perl_stack_grow(%struct.sv**, %struct.sv**, i32) #1

declare %struct.sv* @Perl_newSVpvf(i8*, ...) #1

declare i64 @Perl_call_method(i8*, i64) #1

declare void @Perl_free_tmps() #1

declare void @Perl_pop_scope() #1

declare %struct.sv* @Perl_av_pop(%struct.av*) #1

; Function Attrs: nounwind uwtable
define internal fastcc void @marked_section_update(%struct.p_state* nocapture %p_state) #0 {
entry:
  %len = alloca i64, align 8
  %ms_stack1 = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 18
  %0 = load %struct.av** %ms_stack1, align 8, !tbaa !16
  %ms = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 17
  store i32 0, i32* %ms, align 4, !tbaa !77
  %tobool = icmp eq %struct.av* %0, null
  br i1 %tobool, label %if.end52, label %if.then

if.then:                                          ; preds = %entry
  %call = call i64 @Perl_av_len(%struct.av* %0) #2
  %conv = trunc i64 %call to i32
  %cmp79 = icmp slt i32 %conv, 0
  br i1 %cmp79, label %if.end52.loopexit, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.then
  %1 = add i32 %conv, 1
  br label %for.body

for.body:                                         ; preds = %for.inc49, %for.body.lr.ph
  %indvars.iv81 = phi i64 [ %indvars.iv.next82, %for.inc49 ], [ 0, %for.body.lr.ph ]
  %call4 = call %struct.sv** @Perl_av_fetch(%struct.av* %0, i64 %indvars.iv81, i64 0) #2
  %tobool5 = icmp eq %struct.sv** %call4, null
  br i1 %tobool5, label %for.inc49, label %if.then6

if.then6:                                         ; preds = %for.body
  %2 = load %struct.sv** %call4, align 8, !tbaa !26
  %sv_any = getelementptr inbounds %struct.sv* %2, i64 0, i32 0
  %3 = load i8** %sv_any, align 8, !tbaa !7
  %xrv_rv = bitcast i8* %3 to %struct.sv**
  %4 = load %struct.sv** %xrv_rv, align 8, !tbaa !28
  %5 = bitcast %struct.sv* %4 to %struct.av*
  %call7 = call i64 @Perl_av_len(%struct.av* %5) #2
  %conv8 = trunc i64 %call7 to i32
  %cmp1077 = icmp slt i32 %conv8, 0
  br i1 %cmp1077, label %for.inc49, label %for.body12.lr.ph

for.body12.lr.ph:                                 ; preds = %if.then6
  %6 = add i32 %conv8, 1
  br label %for.body12

for.body12:                                       ; preds = %for.inc, %for.body12.lr.ph
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body12.lr.ph ]
  %call15 = call %struct.sv** @Perl_av_fetch(%struct.av* %5, i64 %indvars.iv, i64 0) #2
  %tobool16 = icmp eq %struct.sv** %call15, null
  br i1 %tobool16, label %for.inc, label %if.then17

if.then17:                                        ; preds = %for.body12
  %7 = load %struct.sv** %call15, align 8, !tbaa !26
  %sv_flags = getelementptr inbounds %struct.sv* %7, i64 0, i32 2
  %8 = load i64* %sv_flags, align 8, !tbaa !1
  %and = and i64 %8, 262144
  %cmp18 = icmp eq i64 %and, 0
  br i1 %cmp18, label %cond.false, label %cond.true

cond.true:                                        ; preds = %if.then17
  %sv_any20 = getelementptr inbounds %struct.sv* %7, i64 0, i32 0
  %9 = load i8** %sv_any20, align 8, !tbaa !7
  %xpv_cur = getelementptr inbounds i8* %9, i64 8
  %10 = bitcast i8* %xpv_cur to i64*
  %11 = load i64* %10, align 8, !tbaa !42
  store i64 %11, i64* %len, align 8, !tbaa !27
  %xpv_pv = bitcast i8* %9 to i8**
  %12 = load i8** %xpv_pv, align 8, !tbaa !44
  br label %cond.end

cond.false:                                       ; preds = %if.then17
  %call22 = call i8* @Perl_sv_2pv_flags(%struct.sv* %7, i64* %len, i64 2) #2
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %12, %cond.true ], [ %call22, %cond.false ]
  %call23 = call i32 @strcmp(i8* %cond, i8* getelementptr inbounds ([8 x i8]* @.str97, i64 0, i64 0)) #2
  %tobool24 = icmp eq i32 %call23, 0
  br i1 %tobool24, label %if.end40, label %if.else

if.else:                                          ; preds = %cond.end
  %call26 = call i32 @strcmp(i8* %cond, i8* getelementptr inbounds ([7 x i8]* @.str101, i64 0, i64 0)) #2
  %tobool27 = icmp eq i32 %call26, 0
  br i1 %tobool27, label %if.end40, label %if.else29

if.else29:                                        ; preds = %if.else
  %call30 = call i32 @strcmp(i8* %cond, i8* getelementptr inbounds ([6 x i8]* @.str102, i64 0, i64 0)) #2
  %tobool31 = icmp eq i32 %call30, 0
  br i1 %tobool31, label %if.end40, label %if.else33

if.else33:                                        ; preds = %if.else29
  %call34 = call i32 @strcmp(i8* %cond, i8* getelementptr inbounds ([7 x i8]* @.str103, i64 0, i64 0)) #2
  %tobool35 = icmp eq i32 %call34, 0
  %. = select i1 %tobool35, i32 4, i32 0
  br label %if.end40

if.end40:                                         ; preds = %if.else33, %if.else29, %if.else, %cond.end
  %token.0 = phi i32 [ 1, %cond.end ], [ 2, %if.else ], [ 3, %if.else29 ], [ %., %if.else33 ]
  %13 = load i32* %ms, align 4, !tbaa !77
  %cmp42 = icmp ult i32 %13, %token.0
  br i1 %cmp42, label %if.then44, label %for.inc

if.then44:                                        ; preds = %if.end40
  store i32 %token.0, i32* %ms, align 4, !tbaa !77
  br label %for.inc

for.inc:                                          ; preds = %for.body12, %if.then44, %if.end40
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %6
  br i1 %exitcond, label %for.inc49, label %for.body12

for.inc49:                                        ; preds = %for.inc, %if.then6, %for.body
  %indvars.iv.next82 = add nuw nsw i64 %indvars.iv81, 1
  %lftr.wideiv83 = trunc i64 %indvars.iv.next82 to i32
  %exitcond84 = icmp eq i32 %lftr.wideiv83, %1
  br i1 %exitcond84, label %if.end52.loopexit, label %for.body

if.end52.loopexit:                                ; preds = %for.inc49, %if.then
  %.pre = load i32* %ms, align 4, !tbaa !77
  %phitmp = icmp eq i32 %.pre, 3
  br label %if.end52

if.end52:                                         ; preds = %if.end52.loopexit, %entry
  %14 = phi i1 [ %phitmp, %if.end52.loopexit ], [ false, %entry ]
  %conv56 = zext i1 %14 to i8
  %is_cdata = getelementptr inbounds %struct.p_state* %p_state, i64 0, i32 8
  store i8 %conv56, i8* %is_cdata, align 1, !tbaa !58
  ret void
}

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #2

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #2

declare i8* @Perl_safesysrealloc(i8*, i64) #1

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #2

declare i64 @Perl_sv_2iv(%struct.sv*) #1

attributes #0 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }
attributes #3 = { nounwind readonly "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = metadata !{metadata !"clang version 3.5 (trunk)"}
!1 = metadata !{metadata !2, metadata !6, i64 16}
!2 = metadata !{metadata !"sv", metadata !3, i64 0, metadata !6, i64 8, metadata !6, i64 16}
!3 = metadata !{metadata !"any pointer", metadata !4, i64 0}
!4 = metadata !{metadata !"omnipotent char", metadata !5, i64 0}
!5 = metadata !{metadata !"Simple C/C++ TBAA"}
!6 = metadata !{metadata !"long", metadata !4, i64 0}
!7 = metadata !{metadata !2, metadata !3, i64 0}
!8 = metadata !{metadata !9, metadata !6, i64 24}
!9 = metadata !{metadata !"xpviv", metadata !3, i64 0, metadata !6, i64 8, metadata !6, i64 16, metadata !6, i64 24}
!10 = metadata !{metadata !11, metadata !6, i64 0}
!11 = metadata !{metadata !"p_state", metadata !6, i64 0, metadata !3, i64 8, metadata !6, i64 16, metadata !6, i64 24, metadata !6, i64 32, metadata !4, i64 40, metadata !4, i64 41, metadata !3, i64 48, metadata !4, i64 56, metadata !4, i64 57, metadata !3, i64 64, metadata !3, i64 72, metadata !4, i64 80, metadata !6, i64 88, metadata !6, i64 96, metadata !6, i64 104, metadata !3, i64 112, metadata !4, i64 120, metadata !3, i64 128, metadata !4, i64 136, metadata !4, i64 137, metadata !4, i64 138, metadata !4, i64 139, metadata !4, i64 140, metadata !4, i64 141, metadata !4, i64 142, metadata !4, i64 143, metadata !4, i64 144, metadata !4, i64 145, metadata !3, i64 152, metadata !4, i64 160, metadata !4, i64 304, metadata !3, i64 312, metadata !3, i64 320, metadata !3, i64 328, metadata !3, i64 336, metadata !12, i64 344, metadata !3, i64 352, metadata !3, i64 360}
!12 = metadata !{metadata !"int", metadata !4, i64 0}
!13 = metadata !{metadata !11, metadata !3, i64 8}
!14 = metadata !{metadata !11, metadata !3, i64 72}
!15 = metadata !{metadata !11, metadata !3, i64 112}
!16 = metadata !{metadata !11, metadata !3, i64 128}
!17 = metadata !{metadata !11, metadata !3, i64 152}
!18 = metadata !{metadata !19, metadata !3, i64 0}
!19 = metadata !{metadata !"p_handler", metadata !3, i64 0, metadata !3, i64 8}
!20 = metadata !{metadata !19, metadata !3, i64 8}
!21 = metadata !{metadata !11, metadata !3, i64 312}
!22 = metadata !{metadata !11, metadata !3, i64 320}
!23 = metadata !{metadata !11, metadata !3, i64 328}
!24 = metadata !{metadata !11, metadata !3, i64 336}
!25 = metadata !{metadata !11, metadata !3, i64 360}
!26 = metadata !{metadata !3, metadata !3, i64 0}
!27 = metadata !{metadata !6, metadata !6, i64 0}
!28 = metadata !{metadata !29, metadata !3, i64 0}
!29 = metadata !{metadata !"xrv", metadata !3, i64 0}
!30 = metadata !{metadata !11, metadata !3, i64 352}
!31 = metadata !{metadata !32, metadata !3, i64 8}
!32 = metadata !{metadata !"magic", metadata !3, i64 0, metadata !3, i64 8, metadata !33, i64 16, metadata !4, i64 18, metadata !4, i64 19, metadata !3, i64 24, metadata !3, i64 32, metadata !6, i64 40}
!33 = metadata !{metadata !"short", metadata !4, i64 0}
!34 = metadata !{metadata !11, metadata !4, i64 40}
!35 = metadata !{metadata !36, metadata !3, i64 0}
!36 = metadata !{metadata !"gv", metadata !3, i64 0, metadata !6, i64 8, metadata !6, i64 16}
!37 = metadata !{metadata !38, metadata !3, i64 56}
!38 = metadata !{metadata !"xpvgv", metadata !3, i64 0, metadata !6, i64 8, metadata !6, i64 16, metadata !6, i64 24, metadata !39, i64 32, metadata !3, i64 40, metadata !3, i64 48, metadata !3, i64 56, metadata !3, i64 64, metadata !6, i64 72, metadata !3, i64 80, metadata !4, i64 88}
!39 = metadata !{metadata !"double", metadata !4, i64 0}
!40 = metadata !{metadata !41, metadata !3, i64 0}
!41 = metadata !{metadata !"gp", metadata !3, i64 0, metadata !6, i64 8, metadata !3, i64 16, metadata !3, i64 24, metadata !3, i64 32, metadata !3, i64 40, metadata !3, i64 48, metadata !3, i64 56, metadata !6, i64 64, metadata !6, i64 72, metadata !6, i64 80, metadata !3, i64 88}
!42 = metadata !{metadata !43, metadata !6, i64 8}
!43 = metadata !{metadata !"xpv", metadata !3, i64 0, metadata !6, i64 8, metadata !6, i64 16}
!44 = metadata !{metadata !43, metadata !3, i64 0}
!45 = metadata !{metadata !4, metadata !4, i64 0}
!46 = metadata !{metadata !47, metadata !39, i64 32}
!47 = metadata !{metadata !"xpvnv", metadata !3, i64 0, metadata !6, i64 8, metadata !6, i64 16, metadata !6, i64 24, metadata !39, i64 32}
!48 = metadata !{metadata !11, metadata !4, i64 41}
!49 = metadata !{metadata !11, metadata !3, i64 48}
!50 = metadata !{metadata !11, metadata !4, i64 144}
!51 = metadata !{metadata !11, metadata !3, i64 64}
!52 = metadata !{metadata !11, metadata !4, i64 137}
!53 = metadata !{metadata !11, metadata !4, i64 57}
!54 = metadata !{metadata !55, metadata !3, i64 0}
!55 = metadata !{metadata !"token_pos", metadata !3, i64 0, metadata !3, i64 8}
!56 = metadata !{metadata !55, metadata !3, i64 8}
!57 = metadata !{metadata !11, metadata !4, i64 141}
!58 = metadata !{metadata !11, metadata !4, i64 56}
!59 = metadata !{metadata !11, metadata !6, i64 32}
!60 = metadata !{metadata !11, metadata !4, i64 80}
!61 = metadata !{metadata !11, metadata !6, i64 104}
!62 = metadata !{metadata !11, metadata !6, i64 16}
!63 = metadata !{metadata !11, metadata !6, i64 24}
!64 = metadata !{metadata !11, metadata !4, i64 145}
!65 = metadata !{metadata !11, metadata !4, i64 304}
!66 = metadata !{metadata !67, metadata !3, i64 0}
!67 = metadata !{metadata !"cv", metadata !3, i64 0, metadata !6, i64 8, metadata !6, i64 16}
!68 = metadata !{metadata !69, metadata !3, i64 96}
!69 = metadata !{metadata !"xpvcv", metadata !3, i64 0, metadata !6, i64 8, metadata !6, i64 16, metadata !6, i64 24, metadata !39, i64 32, metadata !3, i64 40, metadata !3, i64 48, metadata !3, i64 56, metadata !3, i64 64, metadata !3, i64 72, metadata !3, i64 80, metadata !4, i64 88, metadata !3, i64 96, metadata !3, i64 104, metadata !6, i64 112, metadata !3, i64 120, metadata !3, i64 128, metadata !33, i64 136, metadata !6, i64 144}
!70 = metadata !{metadata !38, metadata !3, i64 64}
!71 = metadata !{metadata !72, metadata !4, i64 36}
!72 = metadata !{metadata !"op", metadata !3, i64 0, metadata !3, i64 8, metadata !3, i64 16, metadata !6, i64 24, metadata !33, i64 32, metadata !33, i64 34, metadata !4, i64 36, metadata !4, i64 37}
!73 = metadata !{metadata !2, metadata !6, i64 8}
!74 = metadata !{metadata !43, metadata !6, i64 16}
!75 = metadata !{metadata !72, metadata !4, i64 37}
!76 = metadata !{metadata !72, metadata !6, i64 24}
!77 = metadata !{metadata !11, metadata !4, i64 120}
!78 = metadata !{metadata !11, metadata !4, i64 138}
!79 = metadata !{metadata !11, metadata !4, i64 140}
!80 = metadata !{i64 0, i64 8, metadata !26, i64 8, i64 8, metadata !26}
!81 = metadata !{metadata !82, metadata !3, i64 8}
!82 = metadata !{metadata !"literal_tag", metadata !12, i64 0, metadata !3, i64 8, metadata !12, i64 16}
!83 = metadata !{metadata !82, metadata !12, i64 16}
!84 = metadata !{metadata !82, metadata !12, i64 0}
!85 = metadata !{metadata !11, metadata !4, i64 139}
!86 = metadata !{metadata !11, metadata !4, i64 136}
!87 = metadata !{metadata !11, metadata !4, i64 143}
!88 = metadata !{metadata !11, metadata !12, i64 344}
!89 = metadata !{metadata !11, metadata !6, i64 88}
!90 = metadata !{metadata !11, metadata !6, i64 96}
!91 = metadata !{metadata !11, metadata !4, i64 142}
