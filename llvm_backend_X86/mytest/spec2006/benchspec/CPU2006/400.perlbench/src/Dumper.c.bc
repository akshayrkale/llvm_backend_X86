; ModuleID = 'Dumper.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.sv = type { i8*, i64, i64 }
%struct.op = type { %struct.op*, %struct.op*, %struct.op* ()*, i64, i16, i16, i8, i8 }
%struct.xpv = type { i8*, i64, i64 }
%struct.gv = type { %struct.xpvgv*, i64, i64 }
%struct.xpvgv = type { i8*, i64, i64, i64, double, %struct.magic*, %struct.hv*, %struct.gp*, i8*, i64, %struct.hv*, i8 }
%struct.magic = type { %struct.magic*, %struct.mgvtbl*, i16, i8, i8, %struct.sv*, i8*, i64 }
%struct.mgvtbl = type { i32 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*)*, i64 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*, %struct.sv*, i8*, i32)*, i32 (%struct.magic*, %struct.clone_params*)* }
%struct.clone_params = type { %struct.av*, i64, %struct.interpreter* }
%struct.av = type { %struct.xpvav*, i64, i64 }
%struct.xpvav = type { i8*, i64, i64, i64, double, %struct.magic*, %struct.hv*, %struct.sv**, %struct.sv*, i8 }
%struct.interpreter = type { i8 }
%struct.gp = type { %struct.sv*, i64, %struct.io*, %struct.cv*, %struct.av*, %struct.hv*, %struct.gv*, %struct.cv*, i64, i64, i64, i8* }
%struct.io = type { %struct.xpvio*, i64, i64 }
%struct.xpvio = type { i8*, i64, i64, i64, double, %struct.magic*, %struct.hv*, %struct._PerlIO**, %struct._PerlIO**, %union.anon, i64, i64, i64, i64, i8*, %struct.gv*, i8*, %struct.gv*, i8*, %struct.gv*, i16, i8, i8 }
%struct._PerlIO = type opaque
%union.anon = type { %struct.__dirstream* }
%struct.__dirstream = type opaque
%struct.cv = type { %struct.xpvcv*, i64, i64 }
%struct.xpvcv = type { i8*, i64, i64, i64, double, %struct.magic*, %struct.hv*, %struct.hv*, %struct.op*, %struct.op*, {}*, %union.any, %struct.gv*, i8*, i64, %struct.av*, %struct.cv*, i16, i64 }
%union.any = type { i8* }
%struct.hv = type { %struct.xpvhv*, i64, i64 }
%struct.xpvhv = type { i8*, i64, i64, i64, double, %struct.magic*, %struct.hv*, i64, %struct.he*, %struct.pmop*, i8* }
%struct.he = type { %struct.he*, %struct.hek*, %struct.sv* }
%struct.hek = type { i64, i64, [1 x i8] }
%struct.pmop = type { %struct.op*, %struct.op*, %struct.op* ()*, i64, i16, i16, i8, i8, %struct.op*, %struct.op*, %struct.op*, %struct.op*, %struct.pmop*, %struct.regexp*, i64, i64, i8, %struct.hv* }
%struct.regexp = type { i64*, i64*, %struct.regnode*, %struct.reg_substr_data*, i8*, %struct.reg_data*, i8*, i64*, i64, i64, i64, i64, i64, i64, i64, i64, [1 x %struct.regnode] }
%struct.regnode = type { i8, i8, i16 }
%struct.reg_substr_data = type opaque
%struct.reg_data = type opaque
%struct.cop = type { %struct.op*, %struct.op*, %struct.op* ()*, i64, i16, i16, i8, i8, i8*, %struct.hv*, %struct.gv*, i64, i64, i64, %struct.sv*, %struct.sv* }

@PL_stack_sp = external global %struct.sv**
@PL_stack_base = external global %struct.sv**
@PL_markstack_ptr = external global i64*
@.str = private unnamed_addr constant [39 x i8] c"Usage: Data::Dumper::Dumpxs(href, ...)\00", align 1
@PL_op = external global %struct.op*
@.str1 = private unnamed_addr constant [66 x i8] c"Usage: Data::Dumper::Dumpxs(PACKAGE, VAL_ARY_REF, [NAME_ARY_REF])\00", align 1
@PL_tmps_floor = external global i64
@PL_tmps_ix = external global i64
@PL_markstack_max = external global i64*
@PL_stack_max = external global %struct.sv**
@.str2 = private unnamed_addr constant [4 x i8] c"new\00", align 1
@PL_sv_undef = external global %struct.sv
@.str3 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str4 = private unnamed_addr constant [5 x i8] c"seen\00", align 1
@.str5 = private unnamed_addr constant [7 x i8] c"todump\00", align 1
@.str6 = private unnamed_addr constant [6 x i8] c"names\00", align 1
@.str7 = private unnamed_addr constant [7 x i8] c"indent\00", align 1
@.str8 = private unnamed_addr constant [7 x i8] c"purity\00", align 1
@.str9 = private unnamed_addr constant [6 x i8] c"terse\00", align 1
@PL_Xpv = external global %struct.xpv*
@.str10 = private unnamed_addr constant [4 x i8] c"pad\00", align 1
@.str11 = private unnamed_addr constant [5 x i8] c"xpad\00", align 1
@.str12 = private unnamed_addr constant [5 x i8] c"apad\00", align 1
@.str13 = private unnamed_addr constant [4 x i8] c"sep\00", align 1
@.str14 = private unnamed_addr constant [5 x i8] c"pair\00", align 1
@.str15 = private unnamed_addr constant [8 x i8] c"varname\00", align 1
@.str16 = private unnamed_addr constant [8 x i8] c"freezer\00", align 1
@.str17 = private unnamed_addr constant [8 x i8] c"toaster\00", align 1
@.str18 = private unnamed_addr constant [9 x i8] c"deepcopy\00", align 1
@.str19 = private unnamed_addr constant [10 x i8] c"quotekeys\00", align 1
@.str20 = private unnamed_addr constant [6 x i8] c"bless\00", align 1
@.str21 = private unnamed_addr constant [9 x i8] c"maxdepth\00", align 1
@.str22 = private unnamed_addr constant [9 x i8] c"sortkeys\00", align 1
@PL_sv_yes = external global %struct.sv
@.str23 = private unnamed_addr constant [2 x i8] c"$\00", align 1
@.str24 = private unnamed_addr constant [4 x i8] c"%ld\00", align 1
@.str26 = private unnamed_addr constant [4 x i8] c" = \00", align 1
@.str27 = private unnamed_addr constant [2 x i8] c";\00", align 1
@.str28 = private unnamed_addr constant [47 x i8] c"Call to new() method failed to return HASH ref\00", align 1
@.str29 = private unnamed_addr constant [9 x i8] c"Dumper.c\00", align 1
@.str30 = private unnamed_addr constant [21 x i8] c"Data::Dumper::Dumpxs\00", align 1
@.str31 = private unnamed_addr constant [5 x i8] c"$;$$\00", align 1
@PL_errgv = external global %struct.gv*
@.str32 = private unnamed_addr constant [40 x i8] c"WARNING(Freezer method call failed): %_\00", align 1
@.str33 = private unnamed_addr constant [6 x i8] c"0x%lx\00", align 1
@.str34 = private unnamed_addr constant [3 x i8] c"{}\00", align 1
@.str35 = private unnamed_addr constant [3 x i8] c"[]\00", align 1
@.str36 = private unnamed_addr constant [10 x i8] c"do{my $o}\00", align 1
@.str37 = private unnamed_addr constant [2 x i8] c"{\00", align 1
@.str38 = private unnamed_addr constant [2 x i8] c"}\00", align 1
@.str39 = private unnamed_addr constant [26 x i8] c"ref name not found for %s\00", align 1
@.str40 = private unnamed_addr constant [2 x i8] c"\5C\00", align 1
@PL_Sv = external global %struct.sv*
@.str41 = private unnamed_addr constant [7 x i8] c"Regexp\00", align 1
@.str42 = private unnamed_addr constant [4 x i8] c"qr/\00", align 1
@.str43 = private unnamed_addr constant [3 x i8] c"\5C/\00", align 1
@.str44 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str45 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@.str46 = private unnamed_addr constant [3 x i8] c"( \00", align 1
@.str47 = private unnamed_addr constant [3 x i8] c"${\00", align 1
@.str48 = private unnamed_addr constant [14 x i8] c"do{\5C(my $o = \00", align 1
@.str49 = private unnamed_addr constant [3 x i8] c")}\00", align 1
@.str50 = private unnamed_addr constant [3 x i8] c"*{\00", align 1
@.str51 = private unnamed_addr constant [2 x i8] c"(\00", align 1
@.str52 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str53 = private unnamed_addr constant [9 x i8] c"{SCALAR}\00", align 1
@.str54 = private unnamed_addr constant [8 x i8] c"{ARRAY}\00", align 1
@.str55 = private unnamed_addr constant [7 x i8] c"{HASH}\00", align 1
@.str56 = private unnamed_addr constant [2 x i8] c"#\00", align 1
@.str57 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str58 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str59 = private unnamed_addr constant [2 x i8] c"]\00", align 1
@.str60 = private unnamed_addr constant [3 x i8] c"->\00", align 1
@.str61 = private unnamed_addr constant [45 x i8] c"Sortkeys subroutine did not return ARRAYREF\0A\00", align 1
@PL_curcop = external global %struct.cop*
@.str62 = private unnamed_addr constant [16 x i8] c"sub { \22DUMMY\22 }\00", align 1
@.str63 = private unnamed_addr constant [46 x i8] c"Encountered CODE ref, using dummy placeholder\00", align 1
@.str64 = private unnamed_addr constant [27 x i8] c"cannot handle ref type %ld\00", align 1
@.str65 = private unnamed_addr constant [4 x i8] c", '\00", align 1
@.str66 = private unnamed_addr constant [4 x i8] c"' )\00", align 1
@.str67 = private unnamed_addr constant [3 x i8] c"()\00", align 1
@.str68 = private unnamed_addr constant [4 x i8] c"%lu\00", align 1
@.str69 = private unnamed_addr constant [5 x i8] c"'%s'\00", align 1
@.str70 = private unnamed_addr constant [7 x i8] c"main::\00", align 1
@DD_dump.entries = internal unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([9 x i8]* @.str53, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @.str54, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str55, i32 0, i32 0)], align 16
@DD_dump.sizes = internal unnamed_addr constant [3 x i64] [i64 8, i64 7, i64 6], align 16
@.str71 = private unnamed_addr constant [6 x i8] c"undef\00", align 1
@PL_utf8skip = external constant [0 x i8]
@.str72 = private unnamed_addr constant [8 x i8] c"\5Cx{%lx}\00", align 1

; Function Attrs: nounwind uwtable
define void @XS_Data__Dumper_Dumpxs(%struct.cv* nocapture readnone %cv) #0 {
entry:
  %level = alloca i64, align 8
  %tmpbuf = alloca [1024 x i8], align 16
  %0 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !1
  %1 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !1
  %2 = load i64** @PL_markstack_ptr, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds i64* %2, i64 -1
  store i64* %incdec.ptr, i64** @PL_markstack_ptr, align 8, !tbaa !1
  %3 = load i64* %2, align 8, !tbaa !5
  %add.ptr = getelementptr inbounds %struct.sv** %1, i64 %3
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %add.ptr to i64
  %add.ptr.idx = shl nuw i64 %3, 3
  %sub.ptr.div = ashr exact i64 %add.ptr.idx, 3
  %add = add nsw i64 %sub.ptr.div, 1
  %sub.ptr.lhs.cast1 = ptrtoint %struct.sv** %0 to i64
  %sub.ptr.sub3 = sub i64 %sub.ptr.lhs.cast1, %sub.ptr.lhs.cast
  %sub.ptr.div4 = ashr exact i64 %sub.ptr.sub3, 3
  %cmp = icmp slt i64 %sub.ptr.sub3, 8
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([39 x i8]* @.str, i64 0, i64 0)) #2
  %.pre = load %struct.sv*** @PL_stack_base, align 8, !tbaa !1
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %4 = phi %struct.sv** [ %.pre, %if.then ], [ %1, %entry ]
  %idx.neg = sub i64 0, %sub.ptr.div4
  %add.ptr5 = getelementptr inbounds %struct.sv** %0, i64 %idx.neg
  %arrayidx = getelementptr inbounds %struct.sv** %4, i64 %add
  %5 = load %struct.sv** %arrayidx, align 8, !tbaa !1
  store i64 0, i64* %level, align 8, !tbaa !5
  %6 = getelementptr inbounds [1024 x i8]* %tmpbuf, i64 0, i64 0
  call void @llvm.lifetime.start(i64 1024, i8* %6) #2
  %7 = load %struct.op** @PL_op, align 8, !tbaa !1
  %op_flags = getelementptr inbounds %struct.op* %7, i64 0, i32 6
  %8 = load i8* %op_flags, align 1, !tbaa !7
  %conv = zext i8 %8 to i32
  %and = and i32 %conv, 3
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %cond.false, label %cond.true

cond.true:                                        ; preds = %if.end
  %cmp10 = icmp eq i32 %and, 3
  %conv12 = zext i1 %cmp10 to i64
  br label %cond.end

cond.false:                                       ; preds = %if.end
  %call = call i64 @Perl_dowantarray() #2
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond13 = phi i64 [ %conv12, %cond.true ], [ %call, %cond.false ]
  %sv_flags = getelementptr inbounds %struct.sv* %5, i64 0, i32 2
  %9 = load i64* %sv_flags, align 8, !tbaa !10
  %and14 = and i64 %9, 524288
  %tobool15 = icmp eq i64 %and14, 0
  br i1 %tobool15, label %if.then16, label %if.end89

if.then16:                                        ; preds = %cond.end
  %cmp17 = icmp slt i64 %sub.ptr.sub3, 16
  br i1 %cmp17, label %if.then19, label %if.end20

if.then19:                                        ; preds = %if.then16
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([66 x i8]* @.str1, i64 0, i64 0)) #2
  br label %if.end20

if.end20:                                         ; preds = %if.then19, %if.then16
  call void @Perl_push_scope() #2
  call void @Perl_save_int(i32* bitcast (i64* @PL_tmps_floor to i32*)) #2
  %10 = load i64* @PL_tmps_ix, align 8, !tbaa !5
  store i64 %10, i64* @PL_tmps_floor, align 8, !tbaa !5
  %11 = load i64** @PL_markstack_ptr, align 8, !tbaa !1
  %incdec.ptr21 = getelementptr inbounds i64* %11, i64 1
  store i64* %incdec.ptr21, i64** @PL_markstack_ptr, align 8, !tbaa !1
  %12 = load i64** @PL_markstack_max, align 8, !tbaa !1
  %cmp22 = icmp eq i64* %incdec.ptr21, %12
  br i1 %cmp22, label %if.then24, label %if.end25

if.then24:                                        ; preds = %if.end20
  call void @Perl_markstack_grow() #2
  %.pre802 = load i64** @PL_markstack_ptr, align 8, !tbaa !1
  br label %if.end25

if.end25:                                         ; preds = %if.then24, %if.end20
  %13 = phi i64* [ %.pre802, %if.then24 ], [ %incdec.ptr21, %if.end20 ]
  %14 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !1
  %sub.ptr.lhs.cast26 = ptrtoint %struct.sv** %add.ptr5 to i64
  %sub.ptr.rhs.cast27 = ptrtoint %struct.sv** %14 to i64
  %sub.ptr.sub28 = sub i64 %sub.ptr.lhs.cast26, %sub.ptr.rhs.cast27
  %sub.ptr.div29 = ashr exact i64 %sub.ptr.sub28, 3
  store i64 %sub.ptr.div29, i64* %13, align 8, !tbaa !5
  %15 = load %struct.sv*** @PL_stack_max, align 8, !tbaa !1
  %sub.ptr.lhs.cast30 = ptrtoint %struct.sv** %15 to i64
  %sub.ptr.sub32 = sub i64 %sub.ptr.lhs.cast30, %sub.ptr.lhs.cast26
  %cmp34 = icmp slt i64 %sub.ptr.sub32, 8
  br i1 %cmp34, label %if.then36, label %if.end38

if.then36:                                        ; preds = %if.end25
  %call37 = call %struct.sv** @Perl_stack_grow(%struct.sv** %add.ptr5, %struct.sv** %add.ptr5, i32 1) #2
  br label %if.end38

if.end38:                                         ; preds = %if.then36, %if.end25
  %sp.0 = phi %struct.sv** [ %call37, %if.then36 ], [ %add.ptr5, %if.end25 ]
  %incdec.ptr40 = getelementptr inbounds %struct.sv** %sp.0, i64 1
  store %struct.sv* %5, %struct.sv** %incdec.ptr40, align 8, !tbaa !1
  %16 = load %struct.sv*** @PL_stack_max, align 8, !tbaa !1
  %sub.ptr.lhs.cast41 = ptrtoint %struct.sv** %16 to i64
  %sub.ptr.rhs.cast42 = ptrtoint %struct.sv** %incdec.ptr40 to i64
  %sub.ptr.sub43 = sub i64 %sub.ptr.lhs.cast41, %sub.ptr.rhs.cast42
  %cmp45 = icmp slt i64 %sub.ptr.sub43, 8
  br i1 %cmp45, label %if.then47, label %if.end49

if.then47:                                        ; preds = %if.end38
  %call48 = call %struct.sv** @Perl_stack_grow(%struct.sv** %incdec.ptr40, %struct.sv** %incdec.ptr40, i32 1) #2
  br label %if.end49

if.end49:                                         ; preds = %if.then47, %if.end38
  %sp.1 = phi %struct.sv** [ %call48, %if.then47 ], [ %incdec.ptr40, %if.end38 ]
  %add51 = add nsw i64 %sub.ptr.div, 2
  %17 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !1
  %arrayidx52 = getelementptr inbounds %struct.sv** %17, i64 %add51
  %18 = load %struct.sv** %arrayidx52, align 8, !tbaa !1
  %call53 = call %struct.sv* @Perl_newSVsv(%struct.sv* %18) #2
  %call54 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call53) #2
  %incdec.ptr55 = getelementptr inbounds %struct.sv** %sp.1, i64 1
  store %struct.sv* %call54, %struct.sv** %incdec.ptr55, align 8, !tbaa !1
  %cmp56 = icmp sgt i64 %sub.ptr.sub3, 16
  br i1 %cmp56, label %if.then58, label %if.end74

if.then58:                                        ; preds = %if.end49
  %19 = load %struct.sv*** @PL_stack_max, align 8, !tbaa !1
  %sub.ptr.lhs.cast59 = ptrtoint %struct.sv** %19 to i64
  %sub.ptr.rhs.cast60 = ptrtoint %struct.sv** %incdec.ptr55 to i64
  %sub.ptr.sub61 = sub i64 %sub.ptr.lhs.cast59, %sub.ptr.rhs.cast60
  %cmp63 = icmp slt i64 %sub.ptr.sub61, 8
  br i1 %cmp63, label %if.then65, label %if.end67

if.then65:                                        ; preds = %if.then58
  %call66 = call %struct.sv** @Perl_stack_grow(%struct.sv** %incdec.ptr55, %struct.sv** %incdec.ptr55, i32 1) #2
  br label %if.end67

if.end67:                                         ; preds = %if.then65, %if.then58
  %sp.2 = phi %struct.sv** [ %call66, %if.then65 ], [ %incdec.ptr55, %if.then58 ]
  %add69 = add nsw i64 %sub.ptr.div, 3
  %20 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !1
  %arrayidx70 = getelementptr inbounds %struct.sv** %20, i64 %add69
  %21 = load %struct.sv** %arrayidx70, align 8, !tbaa !1
  %call71 = call %struct.sv* @Perl_newSVsv(%struct.sv* %21) #2
  %call72 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call71) #2
  %incdec.ptr73 = getelementptr inbounds %struct.sv** %sp.2, i64 1
  store %struct.sv* %call72, %struct.sv** %incdec.ptr73, align 8, !tbaa !1
  br label %if.end74

if.end74:                                         ; preds = %if.end67, %if.end49
  %sp.3 = phi %struct.sv** [ %incdec.ptr73, %if.end67 ], [ %incdec.ptr55, %if.end49 ]
  store %struct.sv** %sp.3, %struct.sv*** @PL_stack_sp, align 8, !tbaa !1
  %call75 = call i64 @Perl_call_method(i8* getelementptr inbounds ([4 x i8]* @.str2, i64 0, i64 0), i64 0) #2
  %22 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !1
  %tobool76 = icmp ne i64 %call75, 0
  br i1 %tobool76, label %if.then77, label %if.end80

if.then77:                                        ; preds = %if.end74
  %incdec.ptr78 = getelementptr inbounds %struct.sv** %22, i64 -1
  %23 = load %struct.sv** %22, align 8, !tbaa !1
  %call79 = call %struct.sv* @Perl_newSVsv(%struct.sv* %23) #2
  br label %if.end80

if.end80:                                         ; preds = %if.then77, %if.end74
  %href.0 = phi %struct.sv* [ %call79, %if.then77 ], [ %5, %if.end74 ]
  %sp.4 = phi %struct.sv** [ %incdec.ptr78, %if.then77 ], [ %22, %if.end74 ]
  store %struct.sv** %sp.4, %struct.sv*** @PL_stack_sp, align 8, !tbaa !1
  %24 = load i64* @PL_tmps_ix, align 8, !tbaa !5
  %25 = load i64* @PL_tmps_floor, align 8, !tbaa !5
  %cmp81 = icmp sgt i64 %24, %25
  br i1 %cmp81, label %if.then83, label %if.end84

if.then83:                                        ; preds = %if.end80
  call void @Perl_free_tmps() #2
  br label %if.end84

if.end84:                                         ; preds = %if.then83, %if.end80
  call void @Perl_pop_scope() #2
  br i1 %tobool76, label %if.then86, label %if.end89

if.then86:                                        ; preds = %if.end84
  %call87 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %href.0) #2
  br label %if.end89

if.end89:                                         ; preds = %cond.end, %if.end84, %if.then86
  %href.1 = phi %struct.sv* [ %5, %cond.end ], [ %href.0, %if.then86 ], [ %href.0, %if.end84 ]
  %sp.5 = phi %struct.sv** [ %add.ptr5, %cond.end ], [ %sp.4, %if.then86 ], [ %sp.4, %if.end84 ]
  %call90 = call %struct.sv* @Perl_sv_newmortal() #2
  %call91 = call %struct.sv* @Perl_newSVpvn(i8* getelementptr inbounds ([1 x i8]* @.str3, i64 0, i64 0), i64 0) #2
  %sv_flags92 = getelementptr inbounds %struct.sv* %href.1, i64 0, i32 2
  %26 = load i64* %sv_flags92, align 8, !tbaa !10
  %and93 = and i64 %26, 524288
  %tobool94 = icmp eq i64 %and93, 0
  br i1 %tobool94, label %if.else602, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end89
  %sv_any = getelementptr inbounds %struct.sv* %href.1, i64 0, i32 0
  %27 = load i8** %sv_any, align 8, !tbaa !12
  %xrv_rv = bitcast i8* %27 to %struct.sv**
  %28 = load %struct.sv** %xrv_rv, align 8, !tbaa !13
  %29 = bitcast %struct.sv* %28 to %struct.hv*
  %tobool95 = icmp eq %struct.sv* %28, null
  br i1 %tobool95, label %if.else602, label %land.lhs.true96

land.lhs.true96:                                  ; preds = %land.lhs.true
  %30 = getelementptr inbounds %struct.sv* %28, i64 0, i32 2
  %31 = load i64* %30, align 8, !tbaa !15
  %and98 = and i64 %31, 255
  %cmp99 = icmp eq i64 %and98, 11
  br i1 %cmp99, label %if.then101, label %if.else602

if.then101:                                       ; preds = %land.lhs.true96
  %call102 = call %struct.sv** @Perl_hv_fetch(%struct.hv* %29, i8* getelementptr inbounds ([5 x i8]* @.str4, i64 0, i64 0), i64 4, i64 0) #2
  %tobool103 = icmp eq %struct.sv** %call102, null
  br i1 %tobool103, label %if.end111, label %land.lhs.true104

land.lhs.true104:                                 ; preds = %if.then101
  %32 = load %struct.sv** %call102, align 8, !tbaa !1
  %sv_flags105 = getelementptr inbounds %struct.sv* %32, i64 0, i32 2
  %33 = load i64* %sv_flags105, align 8, !tbaa !10
  %and106 = and i64 %33, 524288
  %tobool107 = icmp eq i64 %and106, 0
  br i1 %tobool107, label %if.end111, label %if.then108

if.then108:                                       ; preds = %land.lhs.true104
  %sv_any109 = getelementptr inbounds %struct.sv* %32, i64 0, i32 0
  %34 = load i8** %sv_any109, align 8, !tbaa !12
  %xrv_rv110 = bitcast i8* %34 to %struct.sv**
  %35 = load %struct.sv** %xrv_rv110, align 8, !tbaa !13
  %36 = bitcast %struct.sv* %35 to %struct.hv*
  br label %if.end111

if.end111:                                        ; preds = %land.lhs.true104, %if.then101, %if.then108
  %seenhv.0 = phi %struct.hv* [ %36, %if.then108 ], [ null, %land.lhs.true104 ], [ null, %if.then101 ]
  %call112 = call %struct.sv** @Perl_hv_fetch(%struct.hv* %29, i8* getelementptr inbounds ([7 x i8]* @.str5, i64 0, i64 0), i64 6, i64 0) #2
  %tobool113 = icmp eq %struct.sv** %call112, null
  br i1 %tobool113, label %if.end121, label %land.lhs.true114

land.lhs.true114:                                 ; preds = %if.end111
  %37 = load %struct.sv** %call112, align 8, !tbaa !1
  %sv_flags115 = getelementptr inbounds %struct.sv* %37, i64 0, i32 2
  %38 = load i64* %sv_flags115, align 8, !tbaa !10
  %and116 = and i64 %38, 524288
  %tobool117 = icmp eq i64 %and116, 0
  br i1 %tobool117, label %if.end121, label %if.then118

if.then118:                                       ; preds = %land.lhs.true114
  %sv_any119 = getelementptr inbounds %struct.sv* %37, i64 0, i32 0
  %39 = load i8** %sv_any119, align 8, !tbaa !12
  %xrv_rv120 = bitcast i8* %39 to %struct.sv**
  %40 = load %struct.sv** %xrv_rv120, align 8, !tbaa !13
  %41 = bitcast %struct.sv* %40 to %struct.av*
  br label %if.end121

if.end121:                                        ; preds = %land.lhs.true114, %if.end111, %if.then118
  %todumpav.0 = phi %struct.av* [ %41, %if.then118 ], [ null, %land.lhs.true114 ], [ null, %if.end111 ]
  %call122 = call %struct.sv** @Perl_hv_fetch(%struct.hv* %29, i8* getelementptr inbounds ([6 x i8]* @.str6, i64 0, i64 0), i64 5, i64 0) #2
  %tobool123 = icmp eq %struct.sv** %call122, null
  br i1 %tobool123, label %if.end131, label %land.lhs.true124

land.lhs.true124:                                 ; preds = %if.end121
  %42 = load %struct.sv** %call122, align 8, !tbaa !1
  %sv_flags125 = getelementptr inbounds %struct.sv* %42, i64 0, i32 2
  %43 = load i64* %sv_flags125, align 8, !tbaa !10
  %and126 = and i64 %43, 524288
  %tobool127 = icmp eq i64 %and126, 0
  br i1 %tobool127, label %if.end131, label %if.then128

if.then128:                                       ; preds = %land.lhs.true124
  %sv_any129 = getelementptr inbounds %struct.sv* %42, i64 0, i32 0
  %44 = load i8** %sv_any129, align 8, !tbaa !12
  %xrv_rv130 = bitcast i8* %44 to %struct.sv**
  %45 = load %struct.sv** %xrv_rv130, align 8, !tbaa !13
  %46 = bitcast %struct.sv* %45 to %struct.av*
  br label %if.end131

if.end131:                                        ; preds = %land.lhs.true124, %if.end121, %if.then128
  %namesav.0 = phi %struct.av* [ %46, %if.then128 ], [ null, %land.lhs.true124 ], [ null, %if.end121 ]
  %call132 = call %struct.sv** @Perl_hv_fetch(%struct.hv* %29, i8* getelementptr inbounds ([7 x i8]* @.str7, i64 0, i64 0), i64 6, i64 0) #2
  %tobool133 = icmp eq %struct.sv** %call132, null
  br i1 %tobool133, label %if.end144, label %if.then134

if.then134:                                       ; preds = %if.end131
  %47 = load %struct.sv** %call132, align 8, !tbaa !1
  %sv_flags135 = getelementptr inbounds %struct.sv* %47, i64 0, i32 2
  %48 = load i64* %sv_flags135, align 8, !tbaa !10
  %and136 = and i64 %48, 65536
  %tobool137 = icmp eq i64 %and136, 0
  br i1 %tobool137, label %cond.false140, label %cond.true138

cond.true138:                                     ; preds = %if.then134
  %sv_any139 = getelementptr inbounds %struct.sv* %47, i64 0, i32 0
  %49 = load i8** %sv_any139, align 8, !tbaa !12
  %xiv_iv = getelementptr inbounds i8* %49, i64 24
  %50 = bitcast i8* %xiv_iv to i64*
  %51 = load i64* %50, align 8, !tbaa !17
  br label %if.end144

cond.false140:                                    ; preds = %if.then134
  %call141 = call i64 @Perl_sv_2iv(%struct.sv* %47) #2
  br label %if.end144

if.end144:                                        ; preds = %cond.true138, %cond.false140, %if.end131
  %indent.0 = phi i64 [ 2, %if.end131 ], [ %51, %cond.true138 ], [ %call141, %cond.false140 ]
  %call145 = call %struct.sv** @Perl_hv_fetch(%struct.hv* %29, i8* getelementptr inbounds ([7 x i8]* @.str8, i64 0, i64 0), i64 6, i64 0) #2
  %tobool146 = icmp eq %struct.sv** %call145, null
  br i1 %tobool146, label %if.end158, label %if.then147

if.then147:                                       ; preds = %if.end144
  %52 = load %struct.sv** %call145, align 8, !tbaa !1
  %sv_flags148 = getelementptr inbounds %struct.sv* %52, i64 0, i32 2
  %53 = load i64* %sv_flags148, align 8, !tbaa !10
  %and149 = and i64 %53, 65536
  %tobool150 = icmp eq i64 %and149, 0
  br i1 %tobool150, label %cond.false154, label %cond.true151

cond.true151:                                     ; preds = %if.then147
  %sv_any152 = getelementptr inbounds %struct.sv* %52, i64 0, i32 0
  %54 = load i8** %sv_any152, align 8, !tbaa !12
  %xiv_iv153 = getelementptr inbounds i8* %54, i64 24
  %55 = bitcast i8* %xiv_iv153 to i64*
  %56 = load i64* %55, align 8, !tbaa !17
  br label %if.end158

cond.false154:                                    ; preds = %if.then147
  %call155 = call i64 @Perl_sv_2iv(%struct.sv* %52) #2
  br label %if.end158

if.end158:                                        ; preds = %cond.true151, %cond.false154, %if.end144
  %purity.0 = phi i64 [ 0, %if.end144 ], [ %56, %cond.true151 ], [ %call155, %cond.false154 ]
  %call159 = call %struct.sv** @Perl_hv_fetch(%struct.hv* %29, i8* getelementptr inbounds ([6 x i8]* @.str9, i64 0, i64 0), i64 5, i64 0) #2
  %tobool160 = icmp eq %struct.sv** %call159, null
  br i1 %tobool160, label %if.end210, label %if.then161

if.then161:                                       ; preds = %if.end158
  %57 = load %struct.sv** %call159, align 8, !tbaa !1
  %tobool162 = icmp eq %struct.sv* %57, null
  br i1 %tobool162, label %cond.end207, label %cond.false164

cond.false164:                                    ; preds = %if.then161
  %sv_flags165 = getelementptr inbounds %struct.sv* %57, i64 0, i32 2
  %58 = load i64* %sv_flags165, align 8, !tbaa !10
  %and166 = and i64 %58, 262144
  %tobool167 = icmp eq i64 %and166, 0
  br i1 %tobool167, label %cond.false181, label %cond.true168

cond.true168:                                     ; preds = %cond.false164
  %sv_any169 = getelementptr inbounds %struct.sv* %57, i64 0, i32 0
  %59 = load i8** %sv_any169, align 8, !tbaa !12
  %60 = bitcast i8* %59 to %struct.xpv*
  store %struct.xpv* %60, %struct.xpv** @PL_Xpv, align 8, !tbaa !1
  %tobool170 = icmp eq i8* %59, null
  br i1 %tobool170, label %land.end179, label %land.rhs

land.rhs:                                         ; preds = %cond.true168
  %xpv_cur = getelementptr inbounds i8* %59, i64 8
  %61 = bitcast i8* %xpv_cur to i64*
  %62 = load i64* %61, align 8, !tbaa !19
  %cmp171 = icmp ugt i64 %62, 1
  br i1 %cmp171, label %land.end179, label %lor.rhs

lor.rhs:                                          ; preds = %land.rhs
  %tobool174 = icmp eq i64 %62, 0
  br i1 %tobool174, label %land.end179, label %land.rhs175

land.rhs175:                                      ; preds = %lor.rhs
  %xpv_pv = bitcast i8* %59 to i8**
  %63 = load i8** %xpv_pv, align 8, !tbaa !21
  %64 = load i8* %63, align 1, !tbaa !22
  %cmp177 = icmp ne i8 %64, 48
  br label %land.end179

land.end179:                                      ; preds = %lor.rhs, %cond.true168, %land.rhs, %land.rhs175
  %65 = phi i1 [ false, %cond.true168 ], [ true, %land.rhs ], [ false, %lor.rhs ], [ %cmp177, %land.rhs175 ]
  %cond180 = zext i1 %65 to i64
  br label %cond.end207

cond.false181:                                    ; preds = %cond.false164
  %and183 = and i64 %58, 65536
  %tobool184 = icmp eq i64 %and183, 0
  br i1 %tobool184, label %cond.false190, label %cond.true185

cond.true185:                                     ; preds = %cond.false181
  %sv_any186 = getelementptr inbounds %struct.sv* %57, i64 0, i32 0
  %66 = load i8** %sv_any186, align 8, !tbaa !12
  %xiv_iv187 = getelementptr inbounds i8* %66, i64 24
  %67 = bitcast i8* %xiv_iv187 to i64*
  %68 = load i64* %67, align 8, !tbaa !17
  %cmp188 = icmp ne i64 %68, 0
  %conv189 = zext i1 %cmp188 to i64
  br label %cond.end207

cond.false190:                                    ; preds = %cond.false181
  %and192 = and i64 %58, 131072
  %tobool193 = icmp eq i64 %and192, 0
  br i1 %tobool193, label %cond.false198, label %cond.true194

cond.true194:                                     ; preds = %cond.false190
  %sv_any195 = getelementptr inbounds %struct.sv* %57, i64 0, i32 0
  %69 = load i8** %sv_any195, align 8, !tbaa !12
  %xnv_nv = getelementptr inbounds i8* %69, i64 32
  %70 = bitcast i8* %xnv_nv to double*
  %71 = load double* %70, align 8, !tbaa !23
  %cmp196 = fcmp une double %71, 0.000000e+00
  %conv197 = zext i1 %cmp196 to i64
  br label %cond.end207

cond.false198:                                    ; preds = %cond.false190
  %call199 = call signext i8 @Perl_sv_2bool(%struct.sv* %57) #2
  %conv200 = sext i8 %call199 to i64
  br label %cond.end207

cond.end207:                                      ; preds = %if.then161, %land.end179, %cond.true194, %cond.false198, %cond.true185
  %cond208 = phi i64 [ 0, %if.then161 ], [ %cond180, %land.end179 ], [ %conv189, %cond.true185 ], [ %conv197, %cond.true194 ], [ %conv200, %cond.false198 ]
  %sext793 = shl i64 %cond208, 32
  %conv209 = ashr exact i64 %sext793, 32
  br label %if.end210

if.end210:                                        ; preds = %if.end158, %cond.end207
  %terse.0 = phi i64 [ %conv209, %cond.end207 ], [ 0, %if.end158 ]
  %call211 = call %struct.sv** @Perl_hv_fetch(%struct.hv* %29, i8* getelementptr inbounds ([4 x i8]* @.str10, i64 0, i64 0), i64 3, i64 0) #2
  %tobool212 = icmp eq %struct.sv** %call211, null
  br i1 %tobool212, label %if.end214, label %if.then213

if.then213:                                       ; preds = %if.end210
  %72 = load %struct.sv** %call211, align 8, !tbaa !1
  br label %if.end214

if.end214:                                        ; preds = %if.end210, %if.then213
  %pad.0 = phi %struct.sv* [ %72, %if.then213 ], [ @PL_sv_undef, %if.end210 ]
  %call215 = call %struct.sv** @Perl_hv_fetch(%struct.hv* %29, i8* getelementptr inbounds ([5 x i8]* @.str11, i64 0, i64 0), i64 4, i64 0) #2
  %tobool216 = icmp eq %struct.sv** %call215, null
  br i1 %tobool216, label %if.end218, label %if.then217

if.then217:                                       ; preds = %if.end214
  %73 = load %struct.sv** %call215, align 8, !tbaa !1
  br label %if.end218

if.end218:                                        ; preds = %if.end214, %if.then217
  %xpad.0 = phi %struct.sv* [ %73, %if.then217 ], [ @PL_sv_undef, %if.end214 ]
  %call219 = call %struct.sv** @Perl_hv_fetch(%struct.hv* %29, i8* getelementptr inbounds ([5 x i8]* @.str12, i64 0, i64 0), i64 4, i64 0) #2
  %tobool220 = icmp eq %struct.sv** %call219, null
  br i1 %tobool220, label %if.end222, label %if.then221

if.then221:                                       ; preds = %if.end218
  %74 = load %struct.sv** %call219, align 8, !tbaa !1
  br label %if.end222

if.end222:                                        ; preds = %if.end218, %if.then221
  %apad.0 = phi %struct.sv* [ %74, %if.then221 ], [ @PL_sv_undef, %if.end218 ]
  %call223 = call %struct.sv** @Perl_hv_fetch(%struct.hv* %29, i8* getelementptr inbounds ([4 x i8]* @.str13, i64 0, i64 0), i64 3, i64 0) #2
  %tobool224 = icmp eq %struct.sv** %call223, null
  br i1 %tobool224, label %if.end226, label %if.then225

if.then225:                                       ; preds = %if.end222
  %75 = load %struct.sv** %call223, align 8, !tbaa !1
  br label %if.end226

if.end226:                                        ; preds = %if.end222, %if.then225
  %sep.0 = phi %struct.sv* [ %75, %if.then225 ], [ @PL_sv_undef, %if.end222 ]
  %call227 = call %struct.sv** @Perl_hv_fetch(%struct.hv* %29, i8* getelementptr inbounds ([5 x i8]* @.str14, i64 0, i64 0), i64 4, i64 0) #2
  %tobool228 = icmp eq %struct.sv** %call227, null
  br i1 %tobool228, label %if.end230, label %if.then229

if.then229:                                       ; preds = %if.end226
  %76 = load %struct.sv** %call227, align 8, !tbaa !1
  br label %if.end230

if.end230:                                        ; preds = %if.end226, %if.then229
  %pair.0 = phi %struct.sv* [ %76, %if.then229 ], [ @PL_sv_undef, %if.end226 ]
  %call231 = call %struct.sv** @Perl_hv_fetch(%struct.hv* %29, i8* getelementptr inbounds ([8 x i8]* @.str15, i64 0, i64 0), i64 7, i64 0) #2
  %tobool232 = icmp eq %struct.sv** %call231, null
  br i1 %tobool232, label %if.end234, label %if.then233

if.then233:                                       ; preds = %if.end230
  %77 = load %struct.sv** %call231, align 8, !tbaa !1
  br label %if.end234

if.end234:                                        ; preds = %if.end230, %if.then233
  %varname.0 = phi %struct.sv* [ %77, %if.then233 ], [ @PL_sv_undef, %if.end230 ]
  %call235 = call %struct.sv** @Perl_hv_fetch(%struct.hv* %29, i8* getelementptr inbounds ([8 x i8]* @.str16, i64 0, i64 0), i64 7, i64 0) #2
  %tobool236 = icmp eq %struct.sv** %call235, null
  br i1 %tobool236, label %if.end238, label %if.then237

if.then237:                                       ; preds = %if.end234
  %78 = load %struct.sv** %call235, align 8, !tbaa !1
  br label %if.end238

if.end238:                                        ; preds = %if.end234, %if.then237
  %freezer.0 = phi %struct.sv* [ %78, %if.then237 ], [ @PL_sv_undef, %if.end234 ]
  %call239 = call %struct.sv** @Perl_hv_fetch(%struct.hv* %29, i8* getelementptr inbounds ([8 x i8]* @.str17, i64 0, i64 0), i64 7, i64 0) #2
  %tobool240 = icmp eq %struct.sv** %call239, null
  br i1 %tobool240, label %if.end242, label %if.then241

if.then241:                                       ; preds = %if.end238
  %79 = load %struct.sv** %call239, align 8, !tbaa !1
  br label %if.end242

if.end242:                                        ; preds = %if.end238, %if.then241
  %toaster.0 = phi %struct.sv* [ %79, %if.then241 ], [ @PL_sv_undef, %if.end238 ]
  %call243 = call %struct.sv** @Perl_hv_fetch(%struct.hv* %29, i8* getelementptr inbounds ([9 x i8]* @.str18, i64 0, i64 0), i64 8, i64 0) #2
  %tobool244 = icmp eq %struct.sv** %call243, null
  br i1 %tobool244, label %if.end301, label %if.then245

if.then245:                                       ; preds = %if.end242
  %80 = load %struct.sv** %call243, align 8, !tbaa !1
  %tobool246 = icmp eq %struct.sv* %80, null
  br i1 %tobool246, label %cond.end298, label %cond.false248

cond.false248:                                    ; preds = %if.then245
  %sv_flags249 = getelementptr inbounds %struct.sv* %80, i64 0, i32 2
  %81 = load i64* %sv_flags249, align 8, !tbaa !10
  %and250 = and i64 %81, 262144
  %tobool251 = icmp eq i64 %and250, 0
  br i1 %tobool251, label %cond.false271, label %cond.true252

cond.true252:                                     ; preds = %cond.false248
  %sv_any253 = getelementptr inbounds %struct.sv* %80, i64 0, i32 0
  %82 = load i8** %sv_any253, align 8, !tbaa !12
  %83 = bitcast i8* %82 to %struct.xpv*
  store %struct.xpv* %83, %struct.xpv** @PL_Xpv, align 8, !tbaa !1
  %tobool254 = icmp eq i8* %82, null
  br i1 %tobool254, label %land.end269, label %land.rhs255

land.rhs255:                                      ; preds = %cond.true252
  %xpv_cur256 = getelementptr inbounds i8* %82, i64 8
  %84 = bitcast i8* %xpv_cur256 to i64*
  %85 = load i64* %84, align 8, !tbaa !19
  %cmp257 = icmp ugt i64 %85, 1
  br i1 %cmp257, label %land.end269, label %lor.rhs259

lor.rhs259:                                       ; preds = %land.rhs255
  %tobool261 = icmp eq i64 %85, 0
  br i1 %tobool261, label %land.end269, label %land.rhs262

land.rhs262:                                      ; preds = %lor.rhs259
  %xpv_pv263 = bitcast i8* %82 to i8**
  %86 = load i8** %xpv_pv263, align 8, !tbaa !21
  %87 = load i8* %86, align 1, !tbaa !22
  %cmp265 = icmp ne i8 %87, 48
  br label %land.end269

land.end269:                                      ; preds = %lor.rhs259, %cond.true252, %land.rhs255, %land.rhs262
  %88 = phi i1 [ false, %cond.true252 ], [ true, %land.rhs255 ], [ false, %lor.rhs259 ], [ %cmp265, %land.rhs262 ]
  %cond270 = zext i1 %88 to i64
  br label %cond.end298

cond.false271:                                    ; preds = %cond.false248
  %and273 = and i64 %81, 65536
  %tobool274 = icmp eq i64 %and273, 0
  br i1 %tobool274, label %cond.false280, label %cond.true275

cond.true275:                                     ; preds = %cond.false271
  %sv_any276 = getelementptr inbounds %struct.sv* %80, i64 0, i32 0
  %89 = load i8** %sv_any276, align 8, !tbaa !12
  %xiv_iv277 = getelementptr inbounds i8* %89, i64 24
  %90 = bitcast i8* %xiv_iv277 to i64*
  %91 = load i64* %90, align 8, !tbaa !17
  %cmp278 = icmp ne i64 %91, 0
  %conv279 = zext i1 %cmp278 to i64
  br label %cond.end298

cond.false280:                                    ; preds = %cond.false271
  %and282 = and i64 %81, 131072
  %tobool283 = icmp eq i64 %and282, 0
  br i1 %tobool283, label %cond.false289, label %cond.true284

cond.true284:                                     ; preds = %cond.false280
  %sv_any285 = getelementptr inbounds %struct.sv* %80, i64 0, i32 0
  %92 = load i8** %sv_any285, align 8, !tbaa !12
  %xnv_nv286 = getelementptr inbounds i8* %92, i64 32
  %93 = bitcast i8* %xnv_nv286 to double*
  %94 = load double* %93, align 8, !tbaa !23
  %cmp287 = fcmp une double %94, 0.000000e+00
  %conv288 = zext i1 %cmp287 to i64
  br label %cond.end298

cond.false289:                                    ; preds = %cond.false280
  %call290 = call signext i8 @Perl_sv_2bool(%struct.sv* %80) #2
  %conv291 = sext i8 %call290 to i64
  br label %cond.end298

cond.end298:                                      ; preds = %if.then245, %land.end269, %cond.true284, %cond.false289, %cond.true275
  %cond299 = phi i64 [ 0, %if.then245 ], [ %cond270, %land.end269 ], [ %conv279, %cond.true275 ], [ %conv288, %cond.true284 ], [ %conv291, %cond.false289 ]
  %sext792 = shl i64 %cond299, 32
  %conv300 = ashr exact i64 %sext792, 32
  br label %if.end301

if.end301:                                        ; preds = %if.end242, %cond.end298
  %deepcopy.0 = phi i64 [ %conv300, %cond.end298 ], [ 0, %if.end242 ]
  %call302 = call %struct.sv** @Perl_hv_fetch(%struct.hv* %29, i8* getelementptr inbounds ([10 x i8]* @.str19, i64 0, i64 0), i64 9, i64 0) #2
  %tobool303 = icmp eq %struct.sv** %call302, null
  br i1 %tobool303, label %if.end360, label %if.then304

if.then304:                                       ; preds = %if.end301
  %95 = load %struct.sv** %call302, align 8, !tbaa !1
  %tobool305 = icmp eq %struct.sv* %95, null
  br i1 %tobool305, label %cond.end357, label %cond.false307

cond.false307:                                    ; preds = %if.then304
  %sv_flags308 = getelementptr inbounds %struct.sv* %95, i64 0, i32 2
  %96 = load i64* %sv_flags308, align 8, !tbaa !10
  %and309 = and i64 %96, 262144
  %tobool310 = icmp eq i64 %and309, 0
  br i1 %tobool310, label %cond.false330, label %cond.true311

cond.true311:                                     ; preds = %cond.false307
  %sv_any312 = getelementptr inbounds %struct.sv* %95, i64 0, i32 0
  %97 = load i8** %sv_any312, align 8, !tbaa !12
  %98 = bitcast i8* %97 to %struct.xpv*
  store %struct.xpv* %98, %struct.xpv** @PL_Xpv, align 8, !tbaa !1
  %tobool313 = icmp eq i8* %97, null
  br i1 %tobool313, label %land.end328, label %land.rhs314

land.rhs314:                                      ; preds = %cond.true311
  %xpv_cur315 = getelementptr inbounds i8* %97, i64 8
  %99 = bitcast i8* %xpv_cur315 to i64*
  %100 = load i64* %99, align 8, !tbaa !19
  %cmp316 = icmp ugt i64 %100, 1
  br i1 %cmp316, label %land.end328, label %lor.rhs318

lor.rhs318:                                       ; preds = %land.rhs314
  %tobool320 = icmp eq i64 %100, 0
  br i1 %tobool320, label %land.end328, label %land.rhs321

land.rhs321:                                      ; preds = %lor.rhs318
  %xpv_pv322 = bitcast i8* %97 to i8**
  %101 = load i8** %xpv_pv322, align 8, !tbaa !21
  %102 = load i8* %101, align 1, !tbaa !22
  %cmp324 = icmp ne i8 %102, 48
  br label %land.end328

land.end328:                                      ; preds = %lor.rhs318, %cond.true311, %land.rhs314, %land.rhs321
  %103 = phi i1 [ false, %cond.true311 ], [ true, %land.rhs314 ], [ false, %lor.rhs318 ], [ %cmp324, %land.rhs321 ]
  %cond329 = zext i1 %103 to i64
  br label %cond.end357

cond.false330:                                    ; preds = %cond.false307
  %and332 = and i64 %96, 65536
  %tobool333 = icmp eq i64 %and332, 0
  br i1 %tobool333, label %cond.false339, label %cond.true334

cond.true334:                                     ; preds = %cond.false330
  %sv_any335 = getelementptr inbounds %struct.sv* %95, i64 0, i32 0
  %104 = load i8** %sv_any335, align 8, !tbaa !12
  %xiv_iv336 = getelementptr inbounds i8* %104, i64 24
  %105 = bitcast i8* %xiv_iv336 to i64*
  %106 = load i64* %105, align 8, !tbaa !17
  %cmp337 = icmp ne i64 %106, 0
  %conv338 = zext i1 %cmp337 to i64
  br label %cond.end357

cond.false339:                                    ; preds = %cond.false330
  %and341 = and i64 %96, 131072
  %tobool342 = icmp eq i64 %and341, 0
  br i1 %tobool342, label %cond.false348, label %cond.true343

cond.true343:                                     ; preds = %cond.false339
  %sv_any344 = getelementptr inbounds %struct.sv* %95, i64 0, i32 0
  %107 = load i8** %sv_any344, align 8, !tbaa !12
  %xnv_nv345 = getelementptr inbounds i8* %107, i64 32
  %108 = bitcast i8* %xnv_nv345 to double*
  %109 = load double* %108, align 8, !tbaa !23
  %cmp346 = fcmp une double %109, 0.000000e+00
  %conv347 = zext i1 %cmp346 to i64
  br label %cond.end357

cond.false348:                                    ; preds = %cond.false339
  %call349 = call signext i8 @Perl_sv_2bool(%struct.sv* %95) #2
  %conv350 = sext i8 %call349 to i64
  br label %cond.end357

cond.end357:                                      ; preds = %if.then304, %land.end328, %cond.true343, %cond.false348, %cond.true334
  %cond358 = phi i64 [ 0, %if.then304 ], [ %cond329, %land.end328 ], [ %conv338, %cond.true334 ], [ %conv347, %cond.true343 ], [ %conv350, %cond.false348 ]
  %sext = shl i64 %cond358, 32
  %conv359 = ashr exact i64 %sext, 32
  br label %if.end360

if.end360:                                        ; preds = %if.end301, %cond.end357
  %quotekeys.0 = phi i64 [ %conv359, %cond.end357 ], [ 1, %if.end301 ]
  %call361 = call %struct.sv** @Perl_hv_fetch(%struct.hv* %29, i8* getelementptr inbounds ([6 x i8]* @.str20, i64 0, i64 0), i64 5, i64 0) #2
  %tobool362 = icmp eq %struct.sv** %call361, null
  br i1 %tobool362, label %if.end364, label %if.then363

if.then363:                                       ; preds = %if.end360
  %110 = load %struct.sv** %call361, align 8, !tbaa !1
  br label %if.end364

if.end364:                                        ; preds = %if.end360, %if.then363
  %bless.0 = phi %struct.sv* [ %110, %if.then363 ], [ @PL_sv_undef, %if.end360 ]
  %call365 = call %struct.sv** @Perl_hv_fetch(%struct.hv* %29, i8* getelementptr inbounds ([9 x i8]* @.str21, i64 0, i64 0), i64 8, i64 0) #2
  %tobool366 = icmp eq %struct.sv** %call365, null
  br i1 %tobool366, label %if.end378, label %if.then367

if.then367:                                       ; preds = %if.end364
  %111 = load %struct.sv** %call365, align 8, !tbaa !1
  %sv_flags368 = getelementptr inbounds %struct.sv* %111, i64 0, i32 2
  %112 = load i64* %sv_flags368, align 8, !tbaa !10
  %and369 = and i64 %112, 65536
  %tobool370 = icmp eq i64 %and369, 0
  br i1 %tobool370, label %cond.false374, label %cond.true371

cond.true371:                                     ; preds = %if.then367
  %sv_any372 = getelementptr inbounds %struct.sv* %111, i64 0, i32 0
  %113 = load i8** %sv_any372, align 8, !tbaa !12
  %xiv_iv373 = getelementptr inbounds i8* %113, i64 24
  %114 = bitcast i8* %xiv_iv373 to i64*
  %115 = load i64* %114, align 8, !tbaa !17
  br label %if.end378

cond.false374:                                    ; preds = %if.then367
  %call375 = call i64 @Perl_sv_2iv(%struct.sv* %111) #2
  br label %if.end378

if.end378:                                        ; preds = %cond.true371, %cond.false374, %if.end364
  %maxdepth.0 = phi i64 [ 0, %if.end364 ], [ %115, %cond.true371 ], [ %call375, %cond.false374 ]
  %call379 = call %struct.sv** @Perl_hv_fetch(%struct.hv* %29, i8* getelementptr inbounds ([9 x i8]* @.str22, i64 0, i64 0), i64 8, i64 0) #2
  %tobool380 = icmp eq %struct.sv** %call379, null
  br i1 %tobool380, label %if.end440, label %if.then381

if.then381:                                       ; preds = %if.end378
  %116 = load %struct.sv** %call379, align 8, !tbaa !1
  %tobool382 = icmp eq %struct.sv* %116, null
  br i1 %tobool382, label %if.end440, label %cond.false384

cond.false384:                                    ; preds = %if.then381
  %sv_flags385 = getelementptr inbounds %struct.sv* %116, i64 0, i32 2
  %117 = load i64* %sv_flags385, align 8, !tbaa !10
  %and386 = and i64 %117, 262144
  %tobool387 = icmp eq i64 %and386, 0
  br i1 %tobool387, label %cond.false404, label %cond.true388

cond.true388:                                     ; preds = %cond.false384
  %sv_any389 = getelementptr inbounds %struct.sv* %116, i64 0, i32 0
  %118 = load i8** %sv_any389, align 8, !tbaa !12
  %119 = bitcast i8* %118 to %struct.xpv*
  store %struct.xpv* %119, %struct.xpv** @PL_Xpv, align 8, !tbaa !1
  %tobool390 = icmp eq i8* %118, null
  br i1 %tobool390, label %if.end440, label %land.lhs.true391

land.lhs.true391:                                 ; preds = %cond.true388
  %xpv_cur392 = getelementptr inbounds i8* %118, i64 8
  %120 = bitcast i8* %xpv_cur392 to i64*
  %121 = load i64* %120, align 8, !tbaa !19
  %cmp393 = icmp ugt i64 %121, 1
  br i1 %cmp393, label %if.else, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true391
  %tobool396 = icmp eq i64 %121, 0
  br i1 %tobool396, label %if.end440, label %land.lhs.true397

land.lhs.true397:                                 ; preds = %lor.lhs.false
  %xpv_pv398 = bitcast i8* %118 to i8**
  %122 = load i8** %xpv_pv398, align 8, !tbaa !21
  %123 = load i8* %122, align 1, !tbaa !22
  %cmp400 = icmp eq i8 %123, 48
  br i1 %cmp400, label %if.end440, label %if.else

cond.false404:                                    ; preds = %cond.false384
  %and406 = and i64 %117, 65536
  %tobool407 = icmp eq i64 %and406, 0
  br i1 %tobool407, label %cond.false413, label %cond.true408

cond.true408:                                     ; preds = %cond.false404
  %sv_any409 = getelementptr inbounds %struct.sv* %116, i64 0, i32 0
  %124 = load i8** %sv_any409, align 8, !tbaa !12
  %xiv_iv410 = getelementptr inbounds i8* %124, i64 24
  %125 = bitcast i8* %xiv_iv410 to i64*
  %126 = load i64* %125, align 8, !tbaa !17
  %cmp411 = icmp eq i64 %126, 0
  br i1 %cmp411, label %if.end440, label %if.else

cond.false413:                                    ; preds = %cond.false404
  %and415 = and i64 %117, 131072
  %tobool416 = icmp eq i64 %and415, 0
  br i1 %tobool416, label %cond.false422, label %cond.true417

cond.true417:                                     ; preds = %cond.false413
  %sv_any418 = getelementptr inbounds %struct.sv* %116, i64 0, i32 0
  %127 = load i8** %sv_any418, align 8, !tbaa !12
  %xnv_nv419 = getelementptr inbounds i8* %127, i64 32
  %128 = bitcast i8* %xnv_nv419 to double*
  %129 = load double* %128, align 8, !tbaa !23
  %cmp420 = fcmp une double %129, 0.000000e+00
  br i1 %cmp420, label %if.else, label %if.end440

cond.false422:                                    ; preds = %cond.false413
  %call423 = call signext i8 @Perl_sv_2bool(%struct.sv* %116) #2
  %tobool425 = icmp eq i8 %call423, 0
  br i1 %tobool425, label %if.end440, label %cond.false422.if.else_crit_edge

cond.false422.if.else_crit_edge:                  ; preds = %cond.false422
  %.pre805 = load i64* %sv_flags385, align 8, !tbaa !10
  br label %if.else

if.else:                                          ; preds = %cond.false422.if.else_crit_edge, %land.lhs.true397, %cond.true408, %land.lhs.true391, %cond.true417
  %130 = phi i64 [ %.pre805, %cond.false422.if.else_crit_edge ], [ %117, %land.lhs.true397 ], [ %117, %cond.true408 ], [ %117, %land.lhs.true391 ], [ %117, %cond.true417 ]
  %and428 = and i64 %130, 524288
  %tobool429 = icmp eq i64 %and428, 0
  br i1 %tobool429, label %if.then437, label %land.lhs.true430

land.lhs.true430:                                 ; preds = %if.else
  %sv_any431 = getelementptr inbounds %struct.sv* %116, i64 0, i32 0
  %131 = load i8** %sv_any431, align 8, !tbaa !12
  %xrv_rv432 = bitcast i8* %131 to %struct.sv**
  %132 = load %struct.sv** %xrv_rv432, align 8, !tbaa !13
  %sv_flags433 = getelementptr inbounds %struct.sv* %132, i64 0, i32 2
  %133 = load i64* %sv_flags433, align 8, !tbaa !10
  %and434 = and i64 %133, 255
  %cmp435 = icmp eq i64 %and434, 12
  br i1 %cmp435, label %if.end440, label %if.then437

if.then437:                                       ; preds = %if.else, %land.lhs.true430
  br label %if.end440

if.end440:                                        ; preds = %cond.true417, %if.then381, %cond.false422, %cond.true408, %cond.true388, %lor.lhs.false, %land.lhs.true397, %if.end378, %if.then437, %land.lhs.true430
  %sortkeys.0 = phi %struct.sv* [ %116, %land.lhs.true430 ], [ @PL_sv_yes, %if.then437 ], [ undef, %if.end378 ], [ null, %land.lhs.true397 ], [ null, %lor.lhs.false ], [ null, %cond.true388 ], [ null, %cond.true408 ], [ null, %cond.false422 ], [ null, %if.then381 ], [ null, %cond.true417 ]
  %call441 = call %struct.av* @Perl_newAV() #2
  %tobool442 = icmp eq %struct.av* %todumpav.0, null
  br i1 %tobool442, label %if.end446.thread, label %if.end446

if.end446.thread:                                 ; preds = %if.end440
  %call447806 = call %struct.sv* @Perl_newSVpvn(i8* getelementptr inbounds ([1 x i8]* @.str3, i64 0, i64 0), i64 0) #2
  br label %for.end601

if.end446:                                        ; preds = %if.end440
  %call444 = call i64 @Perl_av_len(%struct.av* %todumpav.0) #2
  %call447 = call %struct.sv* @Perl_newSVpvn(i8* getelementptr inbounds ([1 x i8]* @.str3, i64 0, i64 0), i64 0) #2
  %cmp448796 = icmp slt i64 %call444, 0
  br i1 %cmp448796, label %for.end601, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.end446
  %sv_flags460 = getelementptr inbounds %struct.sv* %call90, i64 0, i32 2
  %cmp526 = icmp sgt i64 %indent.0, 1
  %sv_any530 = getelementptr inbounds %struct.sv* %call90, i64 0, i32 0
  %tobool550 = icmp ne i64 %terse.0, 0
  %cmp578 = icmp eq i64 %cond13, 1
  br label %for.body

for.body:                                         ; preds = %for.inc599, %for.body.lr.ph
  %sp.6799 = phi %struct.sv** [ %sp.5, %for.body.lr.ph ], [ %sp.8, %for.inc599 ]
  %retval.0798 = phi %struct.sv* [ %call91, %for.body.lr.ph ], [ %retval.1, %for.inc599 ]
  %i.0797 = phi i64 [ 0, %for.body.lr.ph ], [ %inc600, %for.inc599 ]
  call void @Perl_av_clear(%struct.av* %call441) #2
  %call451 = call %struct.sv** @Perl_av_fetch(%struct.av* %todumpav.0, i64 %i.0797, i64 0) #2
  %tobool452 = icmp eq %struct.sv** %call451, null
  br i1 %tobool452, label %if.end455, label %if.then453

if.then453:                                       ; preds = %for.body
  %134 = load %struct.sv** %call451, align 8, !tbaa !1
  br label %if.end455

if.end455:                                        ; preds = %for.body, %if.then453
  %val.0 = phi %struct.sv* [ %134, %if.then453 ], [ @PL_sv_undef, %for.body ]
  %call456 = call %struct.sv** @Perl_av_fetch(%struct.av* %namesav.0, i64 %i.0797, i64 1) #2
  %tobool457 = icmp eq %struct.sv** %call456, null
  br i1 %tobool457, label %if.else459, label %if.then458

if.then458:                                       ; preds = %if.end455
  %135 = load %struct.sv** %call456, align 8, !tbaa !1
  call void @Perl_sv_setsv_flags(%struct.sv* %call90, %struct.sv* %135, i64 2) #2
  br label %if.end469

if.else459:                                       ; preds = %if.end455
  %136 = load i64* %sv_flags460, align 8, !tbaa !10
  %and461 = and i64 %136, 1223753727
  store i64 %and461, i64* %sv_flags460, align 8, !tbaa !10
  %and463 = and i64 %136, 2097152
  %tobool464 = icmp eq i64 %and463, 0
  br i1 %tobool464, label %if.end469, label %land.rhs465

land.rhs465:                                      ; preds = %if.else459
  %call466 = call i32 @Perl_sv_backoff(%struct.sv* %call90) #2
  br label %if.end469

if.end469:                                        ; preds = %land.rhs465, %if.else459, %if.then458
  %137 = load i64* %sv_flags460, align 8, !tbaa !10
  %and471 = and i64 %137, 118423552
  %tobool472 = icmp eq i64 %and471, 0
  br i1 %tobool472, label %if.else518, label %if.then473

if.then473:                                       ; preds = %if.end469
  %138 = load i8** %sv_any530, align 8, !tbaa !12
  %xpv_pv475 = bitcast i8* %138 to i8**
  %139 = load i8** %xpv_pv475, align 8, !tbaa !21
  %140 = load i8* %139, align 1, !tbaa !22
  switch i8 %140, label %if.then515 [
    i8 42, label %if.then480
    i8 36, label %if.end525
  ]

if.then480:                                       ; preds = %if.then473
  %sv_flags481 = getelementptr inbounds %struct.sv* %val.0, i64 0, i32 2
  %141 = load i64* %sv_flags481, align 8, !tbaa !10
  %and482 = and i64 %141, 524288
  %tobool483 = icmp eq i64 %and482, 0
  br i1 %tobool483, label %if.else503, label %if.then484

if.then484:                                       ; preds = %if.then480
  %sv_any485 = getelementptr inbounds %struct.sv* %val.0, i64 0, i32 0
  %142 = load i8** %sv_any485, align 8, !tbaa !12
  %xrv_rv486 = bitcast i8* %142 to %struct.sv**
  %143 = load %struct.sv** %xrv_rv486, align 8, !tbaa !13
  %sv_flags487 = getelementptr inbounds %struct.sv* %143, i64 0, i32 2
  %144 = load i64* %sv_flags487, align 8, !tbaa !10
  %and488 = and i64 %144, 255
  switch i64 %and488, label %sw.default [
    i64 10, label %sw.bb
    i64 11, label %sw.bb492
    i64 12, label %sw.bb496
  ]

sw.bb:                                            ; preds = %if.then484
  store i8 64, i8* %139, align 1, !tbaa !22
  br label %if.end525

sw.bb492:                                         ; preds = %if.then484
  store i8 37, i8* %139, align 1, !tbaa !22
  br label %if.end525

sw.bb496:                                         ; preds = %if.then484
  store i8 42, i8* %139, align 1, !tbaa !22
  br label %if.end525

sw.default:                                       ; preds = %if.then484
  store i8 36, i8* %139, align 1, !tbaa !22
  br label %if.end525

if.else503:                                       ; preds = %if.then480
  store i8 36, i8* %139, align 1, !tbaa !22
  br label %if.end525

if.then515:                                       ; preds = %if.then473
  call void @Perl_sv_insert(%struct.sv* %call90, i64 0, i64 0, i8* getelementptr inbounds ([2 x i8]* @.str23, i64 0, i64 0), i64 1) #2
  br label %if.end525

if.else518:                                       ; preds = %if.end469
  call void @Perl_sv_setpvn(%struct.sv* %call90, i8* getelementptr inbounds ([2 x i8]* @.str23, i64 0, i64 0), i64 1) #2
  call void @Perl_sv_catsv_flags(%struct.sv* %call90, %struct.sv* %varname.0, i64 2) #2
  %add520 = add nsw i64 %i.0797, 1
  %call521 = call i32 (i8*, i8*, ...)* @sprintf(i8* %6, i8* getelementptr inbounds ([4 x i8]* @.str24, i64 0, i64 0), i64 %add520) #2
  %call523 = call i64 @strlen(i8* %6) #2
  call void @Perl_sv_catpvn_flags(%struct.sv* %call90, i8* %6, i64 %call523, i64 2) #2
  br label %if.end525

if.end525:                                        ; preds = %if.then473, %sw.bb, %sw.bb492, %sw.bb496, %sw.default, %if.else503, %if.then515, %if.else518
  br i1 %cmp526, label %if.then528, label %if.end536

if.then528:                                       ; preds = %if.end525
  %145 = load i8** %sv_any530, align 8, !tbaa !12
  %xpv_cur531 = getelementptr inbounds i8* %145, i64 8
  %146 = bitcast i8* %xpv_cur531 to i64*
  %147 = load i64* %146, align 8, !tbaa !19
  %add532 = add i64 %147, 3
  %call.i = call %struct.sv* @Perl_newSVpvn(i8* getelementptr inbounds ([1 x i8]* @.str3, i64 0, i64 0), i64 0) #2
  %cmp1.i = icmp sgt i64 %add532, 0
  br i1 %cmp1.i, label %if.then2.i, label %sv_x.exit

if.then2.i:                                       ; preds = %if.then528
  %sv_any.i = getelementptr inbounds %struct.sv* %call.i, i64 0, i32 0
  %148 = load i8** %sv_any.i, align 8, !tbaa !12
  %xpv_len.i = getelementptr inbounds i8* %148, i64 16
  %149 = bitcast i8* %xpv_len.i to i64*
  %150 = load i64* %149, align 8, !tbaa !26
  %xpv_cur.i = getelementptr inbounds i8* %148, i64 8
  %151 = bitcast i8* %xpv_cur.i to i64*
  %152 = load i64* %151, align 8, !tbaa !19
  %add.i = add i64 %147, 4
  %add4.i = add i64 %add.i, %152
  %cmp5.i = icmp ult i64 %150, %add4.i
  br i1 %cmp5.i, label %cond.true.i, label %cond.end.i

cond.true.i:                                      ; preds = %if.then2.i
  %call11.i = call i8* @Perl_sv_grow(%struct.sv* %call.i, i64 %add4.i) #2
  %.pre803 = load i8** %sv_any.i, align 8, !tbaa !12
  %xpv_cur18.i.phi.trans.insert = getelementptr inbounds i8* %.pre803, i64 8
  %.phi.trans.insert = bitcast i8* %xpv_cur18.i.phi.trans.insert to i64*
  %.pre804 = load i64* %.phi.trans.insert, align 8, !tbaa !19
  br label %cond.end.i

cond.end.i:                                       ; preds = %cond.true.i, %if.then2.i
  %153 = phi i64 [ %.pre804, %cond.true.i ], [ %152, %if.then2.i ]
  %154 = phi i8* [ %.pre803, %cond.true.i ], [ %148, %if.then2.i ]
  %xpv_pv16.i = bitcast i8* %154 to i8**
  %155 = load i8** %xpv_pv16.i, align 8, !tbaa !21
  %xpv_cur18.i = getelementptr inbounds i8* %154, i64 8
  %156 = bitcast i8* %xpv_cur18.i to i64*
  %add21.i = add i64 %153, %add532
  store i64 %add21.i, i64* %156, align 8, !tbaa !19
  %arrayidx.i = getelementptr inbounds i8* %155, i64 %add21.i
  store i8 0, i8* %arrayidx.i, align 1, !tbaa !22
  %157 = add i64 %147, 4
  %158 = sub i64 -3, %147
  %159 = icmp sgt i64 %158, -1
  %smax = select i1 %159, i64 %158, i64 -1
  %160 = add i64 %157, %smax
  %end.idx = add i64 %157, %smax
  %n.vec = and i64 %160, -4
  %cmp.zero = icmp eq i64 %n.vec, 0
  %rev.ind.end = sub i64 %add532, %n.vec
  br i1 %cmp.zero, label %middle.block, label %vector.body

vector.body:                                      ; preds = %cond.end.i, %vector.body
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %cond.end.i ]
  %reverse.idx = sub i64 %add532, %index
  %.lhs = add i64 %reverse.idx, -1
  %161 = add i64 %.lhs, %153
  %.sum = add i64 %161, -3
  %162 = getelementptr i8* %155, i64 %.sum
  %163 = bitcast i8* %162 to <4 x i8>*
  store <4 x i8> <i8 32, i8 32, i8 32, i8 32>, <4 x i8>* %163, align 1
  %index.next = add i64 %index, 4
  %164 = icmp eq i64 %index.next, %n.vec
  br i1 %164, label %middle.block, label %vector.body, !llvm.loop !27

middle.block:                                     ; preds = %vector.body, %cond.end.i
  %resume.val = phi i64 [ %add532, %cond.end.i ], [ %rev.ind.end, %vector.body ]
  %new.indc.resume.val = phi i64 [ 0, %cond.end.i ], [ %n.vec, %vector.body ]
  %cmp.n = icmp eq i64 %end.idx, %new.indc.resume.val
  br i1 %cmp.n, label %sv_x.exit, label %while.body.i

while.body.i:                                     ; preds = %middle.block, %while.body.i
  %n.addr.058.i = phi i64 [ %dec.i, %while.body.i ], [ %resume.val, %middle.block ]
  %dec.i = add nsw i64 %n.addr.058.i, -1
  %add.ptr.sum55.i = add i64 %dec.i, %153
  %arrayidx24.i = getelementptr inbounds i8* %155, i64 %add.ptr.sum55.i
  store i8 32, i8* %arrayidx24.i, align 1, !tbaa !22
  %cmp22.i = icmp sgt i64 %dec.i, 0
  br i1 %cmp22.i, label %while.body.i, label %sv_x.exit, !llvm.loop !30

sv_x.exit:                                        ; preds = %while.body.i, %middle.block, %if.then528
  %call534 = call %struct.sv* @Perl_newSVsv(%struct.sv* %apad.0) #2
  call void @Perl_sv_catsv_flags(%struct.sv* %call534, %struct.sv* %call.i, i64 2) #2
  call void @Perl_sv_free(%struct.sv* %call.i) #2
  br label %if.end536

if.end536:                                        ; preds = %if.end525, %sv_x.exit
  %newapad.0 = phi %struct.sv* [ %call534, %sv_x.exit ], [ %apad.0, %if.end525 ]
  %165 = load i8** %sv_any530, align 8, !tbaa !12
  %xpv_pv538 = bitcast i8* %165 to i8**
  %166 = load i8** %xpv_pv538, align 8, !tbaa !21
  %xpv_cur540 = getelementptr inbounds i8* %165, i64 8
  %167 = bitcast i8* %xpv_cur540 to i64*
  %168 = load i64* %167, align 8, !tbaa !19
  call fastcc void @DD_dump(%struct.sv* %val.0, i8* %166, i64 %168, %struct.sv* %call447, %struct.hv* %seenhv.0, %struct.av* %call441, i64* %level, i64 %indent.0, %struct.sv* %pad.0, %struct.sv* %xpad.0, %struct.sv* %newapad.0, %struct.sv* %sep.0, %struct.sv* %pair.0, %struct.sv* %freezer.0, %struct.sv* %toaster.0, i64 %purity.0, i64 %deepcopy.0, i64 %quotekeys.0, %struct.sv* %bless.0, i64 %maxdepth.0, %struct.sv* %sortkeys.0)
  br i1 %cmp526, label %if.then544, label %if.end545

if.then544:                                       ; preds = %if.end536
  call void @Perl_sv_free(%struct.sv* %newapad.0) #2
  br label %if.end545

if.end545:                                        ; preds = %if.then544, %if.end536
  %call546 = call i64 @Perl_av_len(%struct.av* %call441) #2
  %cmp547 = icmp slt i64 %call546, 0
  %or.cond = and i1 %cmp547, %tobool550
  br i1 %or.cond, label %if.end556, label %if.then551

if.then551:                                       ; preds = %if.end545
  call void @Perl_sv_insert(%struct.sv* %call447, i64 0, i64 0, i8* getelementptr inbounds ([4 x i8]* @.str26, i64 0, i64 0), i64 3) #2
  %169 = load i8** %sv_any530, align 8, !tbaa !12
  %xpv_pv553 = bitcast i8* %169 to i8**
  %170 = load i8** %xpv_pv553, align 8, !tbaa !21
  %xpv_cur555 = getelementptr inbounds i8* %169, i64 8
  %171 = bitcast i8* %xpv_cur555 to i64*
  %172 = load i64* %171, align 8, !tbaa !19
  call void @Perl_sv_insert(%struct.sv* %call447, i64 0, i64 0, i8* %170, i64 %172) #2
  call void @Perl_sv_catpvn_flags(%struct.sv* %call447, i8* getelementptr inbounds ([2 x i8]* @.str27, i64 0, i64 0), i64 1, i64 2) #2
  br label %if.end556

if.end556:                                        ; preds = %if.end545, %if.then551
  call void @Perl_sv_catsv_flags(%struct.sv* %retval.0798, %struct.sv* %pad.0, i64 2) #2
  call void @Perl_sv_catsv_flags(%struct.sv* %retval.0798, %struct.sv* %call447, i64 2) #2
  call void @Perl_sv_catsv_flags(%struct.sv* %retval.0798, %struct.sv* %sep.0, i64 2) #2
  %cmp557 = icmp sgt i64 %call546, -1
  br i1 %cmp557, label %for.body565.lr.ph, label %if.end577

for.body565.lr.ph:                                ; preds = %if.end556
  call void @Perl_sv_catsv_flags(%struct.sv* %retval.0798, %struct.sv* %pad.0, i64 2) #2
  br label %for.body565

for.body565:                                      ; preds = %for.inc, %for.body565.lr.ph
  %i561.0795 = phi i64 [ 0, %for.body565.lr.ph ], [ %inc, %for.inc ]
  %call567 = call %struct.sv** @Perl_av_fetch(%struct.av* %call441, i64 %i561.0795, i64 0) #2
  %tobool568 = icmp eq %struct.sv** %call567, null
  br i1 %tobool568, label %for.inc, label %land.lhs.true569

land.lhs.true569:                                 ; preds = %for.body565
  %173 = load %struct.sv** %call567, align 8, !tbaa !1
  %tobool570 = icmp eq %struct.sv* %173, null
  br i1 %tobool570, label %for.inc, label %if.then571

if.then571:                                       ; preds = %land.lhs.true569
  call void @Perl_sv_catsv_flags(%struct.sv* %retval.0798, %struct.sv* %173, i64 2) #2
  %cmp572 = icmp slt i64 %i561.0795, %call546
  br i1 %cmp572, label %if.then574, label %for.inc

if.then574:                                       ; preds = %if.then571
  call void @Perl_sv_catpvn_flags(%struct.sv* %retval.0798, i8* getelementptr inbounds ([2 x i8]* @.str27, i64 0, i64 0), i64 1, i64 2) #2
  call void @Perl_sv_catsv_flags(%struct.sv* %retval.0798, %struct.sv* %sep.0, i64 2) #2
  call void @Perl_sv_catsv_flags(%struct.sv* %retval.0798, %struct.sv* %pad.0, i64 2) #2
  br label %for.inc

for.inc:                                          ; preds = %land.lhs.true569, %for.body565, %if.then574, %if.then571
  %inc = add nsw i64 %i561.0795, 1
  %exitcond = icmp eq i64 %i561.0795, %call546
  br i1 %exitcond, label %for.end, label %for.body565

for.end:                                          ; preds = %for.inc
  call void @Perl_sv_catpvn_flags(%struct.sv* %retval.0798, i8* getelementptr inbounds ([2 x i8]* @.str27, i64 0, i64 0), i64 1, i64 2) #2
  call void @Perl_sv_catsv_flags(%struct.sv* %retval.0798, %struct.sv* %sep.0, i64 2) #2
  br label %if.end577

if.end577:                                        ; preds = %for.end, %if.end556
  call void @Perl_sv_setpvn(%struct.sv* %call447, i8* getelementptr inbounds ([1 x i8]* @.str3, i64 0, i64 0), i64 0) #2
  br i1 %cmp578, label %if.then580, label %for.inc599

if.then580:                                       ; preds = %if.end577
  %174 = load %struct.sv*** @PL_stack_max, align 8, !tbaa !1
  %sub.ptr.lhs.cast581 = ptrtoint %struct.sv** %174 to i64
  %sub.ptr.rhs.cast582 = ptrtoint %struct.sv** %sp.6799 to i64
  %sub.ptr.sub583 = sub i64 %sub.ptr.lhs.cast581, %sub.ptr.rhs.cast582
  %cmp585 = icmp slt i64 %sub.ptr.sub583, 8
  br i1 %cmp585, label %if.then587, label %if.end589

if.then587:                                       ; preds = %if.then580
  %call588 = call %struct.sv** @Perl_stack_grow(%struct.sv** %sp.6799, %struct.sv** %sp.6799, i32 1) #2
  br label %if.end589

if.end589:                                        ; preds = %if.then587, %if.then580
  %sp.7 = phi %struct.sv** [ %call588, %if.then587 ], [ %sp.6799, %if.then580 ]
  %call591 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %retval.0798) #2
  %incdec.ptr592 = getelementptr inbounds %struct.sv** %sp.7, i64 1
  store %struct.sv* %call591, %struct.sv** %incdec.ptr592, align 8, !tbaa !1
  %cmp593 = icmp slt i64 %i.0797, %call444
  br i1 %cmp593, label %if.then595, label %for.inc599

if.then595:                                       ; preds = %if.end589
  %call596 = call %struct.sv* @Perl_newSVpvn(i8* getelementptr inbounds ([1 x i8]* @.str3, i64 0, i64 0), i64 0) #2
  br label %for.inc599

for.inc599:                                       ; preds = %if.end577, %if.then595, %if.end589
  %retval.1 = phi %struct.sv* [ %call596, %if.then595 ], [ %retval.0798, %if.end589 ], [ %retval.0798, %if.end577 ]
  %sp.8 = phi %struct.sv** [ %incdec.ptr592, %if.then595 ], [ %incdec.ptr592, %if.end589 ], [ %sp.6799, %if.end577 ]
  %inc600 = add nsw i64 %i.0797, 1
  %exitcond801 = icmp eq i64 %i.0797, %call444
  br i1 %exitcond801, label %for.end601, label %for.body

for.end601:                                       ; preds = %for.inc599, %if.end446.thread, %if.end446
  %call447808 = phi %struct.sv* [ %call447, %if.end446 ], [ %call447806, %if.end446.thread ], [ %call447, %for.inc599 ]
  %sp.6.lcssa = phi %struct.sv** [ %sp.5, %if.end446 ], [ %sp.5, %if.end446.thread ], [ %sp.8, %for.inc599 ]
  %retval.0.lcssa = phi %struct.sv* [ %call91, %if.end446 ], [ %call91, %if.end446.thread ], [ %retval.1, %for.inc599 ]
  %175 = bitcast %struct.av* %call441 to %struct.sv*
  call void @Perl_sv_free(%struct.sv* %175) #2
  call void @Perl_sv_free(%struct.sv* %call447808) #2
  br label %if.end603

if.else602:                                       ; preds = %land.lhs.true, %if.end89, %land.lhs.true96
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([47 x i8]* @.str28, i64 0, i64 0)) #2
  br label %if.end603

if.end603:                                        ; preds = %if.else602, %for.end601
  %retval.2 = phi %struct.sv* [ %retval.0.lcssa, %for.end601 ], [ %call91, %if.else602 ]
  %sp.9 = phi %struct.sv** [ %sp.6.lcssa, %for.end601 ], [ %sp.5, %if.else602 ]
  %cmp604 = icmp eq i64 %cond13, 0
  br i1 %cmp604, label %if.then606, label %if.end619

if.then606:                                       ; preds = %if.end603
  %176 = load %struct.sv*** @PL_stack_max, align 8, !tbaa !1
  %sub.ptr.lhs.cast607 = ptrtoint %struct.sv** %176 to i64
  %sub.ptr.rhs.cast608 = ptrtoint %struct.sv** %sp.9 to i64
  %sub.ptr.sub609 = sub i64 %sub.ptr.lhs.cast607, %sub.ptr.rhs.cast608
  %cmp611 = icmp slt i64 %sub.ptr.sub609, 8
  br i1 %cmp611, label %if.then613, label %if.end615

if.then613:                                       ; preds = %if.then606
  %call614 = call %struct.sv** @Perl_stack_grow(%struct.sv** %sp.9, %struct.sv** %sp.9, i32 1) #2
  br label %if.end615

if.end615:                                        ; preds = %if.then613, %if.then606
  %sp.10 = phi %struct.sv** [ %call614, %if.then613 ], [ %sp.9, %if.then606 ]
  %call617 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %retval.2) #2
  %incdec.ptr618 = getelementptr inbounds %struct.sv** %sp.10, i64 1
  store %struct.sv* %call617, %struct.sv** %incdec.ptr618, align 8, !tbaa !1
  br label %if.end619

if.end619:                                        ; preds = %if.end615, %if.end603
  %sp.11 = phi %struct.sv** [ %incdec.ptr618, %if.end615 ], [ %sp.9, %if.end603 ]
  call void @llvm.lifetime.end(i64 1024, i8* %6) #2
  store %struct.sv** %sp.11, %struct.sv*** @PL_stack_sp, align 8, !tbaa !1
  ret void
}

declare void @Perl_croak(i8*, ...) #1

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #2

declare i64 @Perl_dowantarray() #1

declare void @Perl_push_scope() #1

declare void @Perl_save_int(i32*) #1

declare void @Perl_markstack_grow() #1

declare %struct.sv** @Perl_stack_grow(%struct.sv**, %struct.sv**, i32) #1

declare %struct.sv* @Perl_sv_2mortal(%struct.sv*) #1

declare %struct.sv* @Perl_newSVsv(%struct.sv*) #1

declare i64 @Perl_call_method(i8*, i64) #1

declare void @Perl_free_tmps() #1

declare void @Perl_pop_scope() #1

declare %struct.sv* @Perl_sv_newmortal() #1

declare %struct.sv* @Perl_newSVpvn(i8*, i64) #1

declare %struct.sv** @Perl_hv_fetch(%struct.hv*, i8*, i64, i64) #1

declare i64 @Perl_sv_2iv(%struct.sv*) #1

declare signext i8 @Perl_sv_2bool(%struct.sv*) #1

declare %struct.av* @Perl_newAV() #1

declare i64 @Perl_av_len(%struct.av*) #1

declare void @Perl_av_clear(%struct.av*) #1

declare %struct.sv** @Perl_av_fetch(%struct.av*, i64, i64) #1

declare void @Perl_sv_setsv_flags(%struct.sv*, %struct.sv*, i64) #1

declare i32 @Perl_sv_backoff(%struct.sv*) #1

declare void @Perl_sv_insert(%struct.sv*, i64, i64, i8*, i64) #1

declare void @Perl_sv_setpvn(%struct.sv*, i8*, i64) #1

declare void @Perl_sv_catsv_flags(%struct.sv*, %struct.sv*, i64) #1

; Function Attrs: nounwind
declare i32 @sprintf(i8* nocapture, i8* nocapture readonly, ...) #3

; Function Attrs: nounwind readonly
declare i64 @strlen(i8* nocapture) #4

declare void @Perl_sv_catpvn_flags(%struct.sv*, i8*, i64, i64) #1

declare void @Perl_sv_free(%struct.sv*) #1

; Function Attrs: nounwind uwtable
define internal fastcc void @DD_dump(%struct.sv* %val, i8* %name, i64 %namelen, %struct.sv* %retval1, %struct.hv* %seenhv, %struct.av* %postav, i64* %levelp, i64 %indent, %struct.sv* %pad, %struct.sv* readonly %xpad, %struct.sv* %apad, %struct.sv* %sep, %struct.sv* %pair, %struct.sv* readonly %freezer, %struct.sv* %toaster, i64 %purity, i64 %deepcopy, i64 %quotekeys, %struct.sv* %bless, i64 %maxdepth, %struct.sv* %sortkeys) #0 {
entry:
  %tmpbuf = alloca [128 x i8], align 16
  %id = alloca [128 x i8], align 16
  %rlen = alloca i64, align 8
  %vallen = alloca i64, align 8
  %blesslen = alloca i64, align 8
  %keylen = alloca i64, align 8
  %i909 = alloca i64, align 8
  %nlevel = alloca i64, align 8
  %0 = getelementptr inbounds [128 x i8]* %tmpbuf, i64 0, i64 0
  call void @llvm.lifetime.start(i64 128, i8* %0) #2
  %1 = getelementptr inbounds [128 x i8]* %id, i64 0, i64 0
  call void @llvm.lifetime.start(i64 128, i8* %1) #2
  %tobool = icmp eq %struct.sv* %val, null
  br i1 %tobool, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %sv_flags = getelementptr inbounds %struct.sv* %val, i64 0, i32 2
  %2 = load i64* %sv_flags, align 8, !tbaa !10
  %and = and i64 %2, 255
  %and3 = and i64 %2, 8192
  %tobool4 = icmp eq i64 %and3, 0
  br i1 %tobool4, label %if.end6, label %if.then5

if.then5:                                         ; preds = %if.end
  %call = call i32 @Perl_mg_get(%struct.sv* %val) #2
  %.pre = load i64* %sv_flags, align 8, !tbaa !10
  br label %if.end6

if.end6:                                          ; preds = %if.end, %if.then5
  %3 = phi i64 [ %2, %if.end ], [ %.pre, %if.then5 ]
  %and8 = and i64 %3, 524288
  %tobool9 = icmp eq i64 %and8, 0
  br i1 %tobool9, label %if.else907, label %if.then10

if.then10:                                        ; preds = %if.end6
  %sv_any = getelementptr inbounds %struct.sv* %val, i64 0, i32 0
  %4 = load i8** %sv_any, align 8, !tbaa !12
  %xrv_rv = bitcast i8* %4 to %struct.sv**
  %5 = load %struct.sv** %xrv_rv, align 8, !tbaa !13
  %sv_flags11 = getelementptr inbounds %struct.sv* %5, i64 0, i32 2
  %6 = load i64* %sv_flags11, align 8, !tbaa !10
  %and12 = and i64 %6, 4096
  %tobool13 = icmp ne i64 %and12, 0
  %tobool14 = icmp ne %struct.sv* %freezer, null
  %or.cond = and i1 %tobool13, %tobool14
  br i1 %or.cond, label %land.lhs.true15, label %if.end116

land.lhs.true15:                                  ; preds = %if.then10
  %sv_flags16 = getelementptr inbounds %struct.sv* %freezer, i64 0, i32 2
  %7 = load i64* %sv_flags16, align 8, !tbaa !10
  %and17 = and i64 %7, 262144
  %tobool18 = icmp eq i64 %and17, 0
  br i1 %tobool18, label %if.end116, label %land.lhs.true19

land.lhs.true19:                                  ; preds = %land.lhs.true15
  %sv_any20 = getelementptr inbounds %struct.sv* %freezer, i64 0, i32 0
  %8 = load i8** %sv_any20, align 8, !tbaa !12
  %xpv_cur = getelementptr inbounds i8* %8, i64 8
  %9 = bitcast i8* %xpv_cur to i64*
  %10 = load i64* %9, align 8, !tbaa !19
  %tobool21 = icmp eq i64 %10, 0
  br i1 %tobool21, label %if.end116, label %land.lhs.true22

land.lhs.true22:                                  ; preds = %land.lhs.true19
  %sv_any25 = getelementptr inbounds %struct.sv* %5, i64 0, i32 0
  %11 = load i8** %sv_any25, align 8, !tbaa !12
  %xmg_stash = getelementptr inbounds i8* %11, i64 48
  %12 = bitcast i8* %xmg_stash to %struct.hv**
  %13 = load %struct.hv** %12, align 8, !tbaa !31
  %xpv_pv = bitcast i8* %8 to i8**
  %14 = load i8** %xpv_pv, align 8, !tbaa !21
  %call29 = call %struct.gv* @Perl_gv_fetchmeth(%struct.hv* %13, i8* %14, i64 %10, i64 -1) #2
  %cmp = icmp eq %struct.gv* %call29, null
  br i1 %cmp, label %if.end116, label %if.then30

if.then30:                                        ; preds = %land.lhs.true22
  %15 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !1
  call void @Perl_push_scope() #2
  call void @Perl_save_int(i32* bitcast (i64* @PL_tmps_floor to i32*)) #2
  %16 = load i64* @PL_tmps_ix, align 8, !tbaa !5
  store i64 %16, i64* @PL_tmps_floor, align 8, !tbaa !5
  %17 = load i64** @PL_markstack_ptr, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds i64* %17, i64 1
  store i64* %incdec.ptr, i64** @PL_markstack_ptr, align 8, !tbaa !1
  %18 = load i64** @PL_markstack_max, align 8, !tbaa !1
  %cmp31 = icmp eq i64* %incdec.ptr, %18
  br i1 %cmp31, label %if.then32, label %if.end33

if.then32:                                        ; preds = %if.then30
  call void @Perl_markstack_grow() #2
  %.pre287 = load i64** @PL_markstack_ptr, align 8, !tbaa !1
  br label %if.end33

if.end33:                                         ; preds = %if.then32, %if.then30
  %19 = phi i64* [ %.pre287, %if.then32 ], [ %incdec.ptr, %if.then30 ]
  %20 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !1
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %15 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %20 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = ashr exact i64 %sub.ptr.sub, 3
  store i64 %sub.ptr.div, i64* %19, align 8, !tbaa !5
  %21 = load %struct.sv*** @PL_stack_max, align 8, !tbaa !1
  %sub.ptr.lhs.cast34 = ptrtoint %struct.sv** %21 to i64
  %sub.ptr.sub36 = sub i64 %sub.ptr.lhs.cast34, %sub.ptr.lhs.cast
  %cmp38 = icmp slt i64 %sub.ptr.sub36, 8
  br i1 %cmp38, label %if.then39, label %if.end41

if.then39:                                        ; preds = %if.end33
  %call40 = call %struct.sv** @Perl_stack_grow(%struct.sv** %15, %struct.sv** %15, i32 1) #2
  br label %if.end41

if.end41:                                         ; preds = %if.then39, %if.end33
  %sp.0 = phi %struct.sv** [ %call40, %if.then39 ], [ %15, %if.end33 ]
  %incdec.ptr43 = getelementptr inbounds %struct.sv** %sp.0, i64 1
  store %struct.sv* %val, %struct.sv** %incdec.ptr43, align 8, !tbaa !1
  store %struct.sv** %incdec.ptr43, %struct.sv*** @PL_stack_sp, align 8, !tbaa !1
  %22 = load i8** %sv_any20, align 8, !tbaa !12
  %xpv_pv45 = bitcast i8* %22 to i8**
  %23 = load i8** %xpv_pv45, align 8, !tbaa !21
  %call46 = call i64 @Perl_call_method(i8* %23, i64 132) #2
  %24 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !1
  %25 = load %struct.gv** @PL_errgv, align 8, !tbaa !1
  %sv_any47 = getelementptr inbounds %struct.gv* %25, i64 0, i32 0
  %26 = load %struct.xpvgv** %sv_any47, align 8, !tbaa !33
  %xgv_gp = getelementptr inbounds %struct.xpvgv* %26, i64 0, i32 7
  %27 = load %struct.gp** %xgv_gp, align 8, !tbaa !35
  %gp_sv = getelementptr inbounds %struct.gp* %27, i64 0, i32 0
  %28 = load %struct.sv** %gp_sv, align 8, !tbaa !37
  %tobool48 = icmp eq %struct.sv* %28, null
  br i1 %tobool48, label %if.end111, label %cond.false

cond.false:                                       ; preds = %if.end41
  %sv_flags52 = getelementptr inbounds %struct.sv* %28, i64 0, i32 2
  %29 = load i64* %sv_flags52, align 8, !tbaa !10
  %and53 = and i64 %29, 262144
  %tobool54 = icmp eq i64 %and53, 0
  br i1 %tobool54, label %cond.false72, label %cond.true55

cond.true55:                                      ; preds = %cond.false
  %sv_any59 = getelementptr inbounds %struct.sv* %28, i64 0, i32 0
  %30 = load i8** %sv_any59, align 8, !tbaa !12
  %31 = bitcast i8* %30 to %struct.xpv*
  store %struct.xpv* %31, %struct.xpv** @PL_Xpv, align 8, !tbaa !1
  %tobool60 = icmp eq i8* %30, null
  br i1 %tobool60, label %if.end111, label %land.lhs.true61

land.lhs.true61:                                  ; preds = %cond.true55
  %xpv_cur62 = getelementptr inbounds i8* %30, i64 8
  %32 = bitcast i8* %xpv_cur62 to i64*
  %33 = load i64* %32, align 8, !tbaa !19
  %cmp63 = icmp ugt i64 %33, 1
  br i1 %cmp63, label %if.then107, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true61
  %tobool65 = icmp eq i64 %33, 0
  br i1 %tobool65, label %if.end111, label %land.lhs.true66

land.lhs.true66:                                  ; preds = %lor.lhs.false
  %xpv_pv67 = bitcast i8* %30 to i8**
  %34 = load i8** %xpv_pv67, align 8, !tbaa !21
  %35 = load i8* %34, align 1, !tbaa !22
  %cmp68 = icmp eq i8 %35, 48
  br i1 %cmp68, label %if.end111, label %if.then107

cond.false72:                                     ; preds = %cond.false
  %and77 = and i64 %29, 65536
  %tobool78 = icmp eq i64 %and77, 0
  br i1 %tobool78, label %cond.false86, label %cond.true79

cond.true79:                                      ; preds = %cond.false72
  %sv_any83 = getelementptr inbounds %struct.sv* %28, i64 0, i32 0
  %36 = load i8** %sv_any83, align 8, !tbaa !12
  %xiv_iv = getelementptr inbounds i8* %36, i64 24
  %37 = bitcast i8* %xiv_iv to i64*
  %38 = load i64* %37, align 8, !tbaa !17
  %cmp84 = icmp eq i64 %38, 0
  br i1 %cmp84, label %if.end111, label %if.then107

cond.false86:                                     ; preds = %cond.false72
  %and91 = and i64 %29, 131072
  %tobool92 = icmp eq i64 %and91, 0
  br i1 %tobool92, label %cond.false100, label %cond.true93

cond.true93:                                      ; preds = %cond.false86
  %sv_any97 = getelementptr inbounds %struct.sv* %28, i64 0, i32 0
  %39 = load i8** %sv_any97, align 8, !tbaa !12
  %xnv_nv = getelementptr inbounds i8* %39, i64 32
  %40 = bitcast i8* %xnv_nv to double*
  %41 = load double* %40, align 8, !tbaa !23
  %cmp98 = fcmp une double %41, 0.000000e+00
  br i1 %cmp98, label %if.then107, label %if.end111

cond.false100:                                    ; preds = %cond.false86
  %call104 = call signext i8 @Perl_sv_2bool(%struct.sv* %28) #2
  %tobool106 = icmp eq i8 %call104, 0
  br i1 %tobool106, label %if.end111, label %cond.false100.if.then107_crit_edge

cond.false100.if.then107_crit_edge:               ; preds = %cond.false100
  %.pre288 = load %struct.gv** @PL_errgv, align 8, !tbaa !1
  br label %if.then107

if.then107:                                       ; preds = %cond.false100.if.then107_crit_edge, %land.lhs.true66, %cond.true79, %land.lhs.true61, %cond.true93
  %42 = phi %struct.gv* [ %.pre288, %cond.false100.if.then107_crit_edge ], [ %25, %land.lhs.true66 ], [ %25, %cond.true79 ], [ %25, %land.lhs.true61 ], [ %25, %cond.true93 ]
  %sv_any108 = getelementptr inbounds %struct.gv* %42, i64 0, i32 0
  %43 = load %struct.xpvgv** %sv_any108, align 8, !tbaa !33
  %xgv_gp109 = getelementptr inbounds %struct.xpvgv* %43, i64 0, i32 7
  %44 = load %struct.gp** %xgv_gp109, align 8, !tbaa !35
  %gp_sv110 = getelementptr inbounds %struct.gp* %44, i64 0, i32 0
  %45 = load %struct.sv** %gp_sv110, align 8, !tbaa !37
  call void (i8*, ...)* @Perl_warn(i8* getelementptr inbounds ([40 x i8]* @.str32, i64 0, i64 0), %struct.sv* %45) #2
  br label %if.end111

if.end111:                                        ; preds = %land.lhs.true66, %lor.lhs.false, %cond.true55, %cond.true79, %cond.false100, %if.end41, %if.then107, %cond.true93
  store %struct.sv** %24, %struct.sv*** @PL_stack_sp, align 8, !tbaa !1
  %46 = load i64* @PL_tmps_ix, align 8, !tbaa !5
  %47 = load i64* @PL_tmps_floor, align 8, !tbaa !5
  %cmp112 = icmp sgt i64 %46, %47
  br i1 %cmp112, label %if.then114, label %if.end115

if.then114:                                       ; preds = %if.end111
  call void @Perl_free_tmps() #2
  br label %if.end115

if.end115:                                        ; preds = %if.then114, %if.end111
  call void @Perl_pop_scope() #2
  br label %if.end116

if.end116:                                        ; preds = %land.lhs.true22, %land.lhs.true19, %land.lhs.true15, %if.end115, %if.then10
  %48 = load i8** %sv_any, align 8, !tbaa !12
  %xrv_rv118 = bitcast i8* %48 to %struct.sv**
  %49 = load %struct.sv** %xrv_rv118, align 8, !tbaa !13
  %sv_flags119 = getelementptr inbounds %struct.sv* %49, i64 0, i32 2
  %50 = load i64* %sv_flags119, align 8, !tbaa !10
  %and120 = and i64 %50, 255
  %51 = ptrtoint %struct.sv* %49 to i64
  %call121 = call i32 (i8*, i8*, ...)* @sprintf(i8* %1, i8* getelementptr inbounds ([6 x i8]* @.str33, i64 0, i64 0), i64 %51) #2
  %call123 = call i64 @strlen(i8* %1) #2
  %52 = load i64* %sv_flags119, align 8, !tbaa !10
  %and125 = and i64 %52, 4096
  %tobool126 = icmp eq i64 %and125, 0
  br i1 %tobool126, label %if.end131, label %if.then127

if.then127:                                       ; preds = %if.end116
  %sv_any128 = getelementptr inbounds %struct.sv* %49, i64 0, i32 0
  %53 = load i8** %sv_any128, align 8, !tbaa !12
  %xmg_stash129 = getelementptr inbounds i8* %53, i64 48
  %54 = bitcast i8* %xmg_stash129 to %struct.hv**
  %55 = load %struct.hv** %54, align 8, !tbaa !31
  %sv_any130 = getelementptr inbounds %struct.hv* %55, i64 0, i32 0
  %56 = load %struct.xpvhv** %sv_any130, align 8, !tbaa !39
  %xhv_name = getelementptr inbounds %struct.xpvhv* %56, i64 0, i32 10
  %57 = load i8** %xhv_name, align 8, !tbaa !40
  br label %if.end131

if.end131:                                        ; preds = %if.end116, %if.then127
  %realpack.0 = phi i8* [ %57, %if.then127 ], [ null, %if.end116 ]
  %tobool132 = icmp eq i64 %namelen, 0
  br i1 %tobool132, label %if.end247, label %if.then133

if.then133:                                       ; preds = %if.end131
  %call135 = call %struct.sv** @Perl_hv_fetch(%struct.hv* %seenhv, i8* %1, i64 %call123, i64 0) #2
  %tobool136 = icmp eq %struct.sv** %call135, null
  br i1 %tobool136, label %if.else208, label %land.lhs.true137

land.lhs.true137:                                 ; preds = %if.then133
  %58 = load %struct.sv** %call135, align 8, !tbaa !1
  %tobool138 = icmp eq %struct.sv* %58, null
  br i1 %tobool138, label %if.else208, label %land.lhs.true139

land.lhs.true139:                                 ; preds = %land.lhs.true137
  %sv_flags140 = getelementptr inbounds %struct.sv* %58, i64 0, i32 2
  %59 = load i64* %sv_flags140, align 8, !tbaa !10
  %and141 = and i64 %59, 524288
  %tobool142 = icmp eq i64 %and141, 0
  br i1 %tobool142, label %if.else208, label %land.lhs.true143

land.lhs.true143:                                 ; preds = %land.lhs.true139
  %sv_any144 = getelementptr inbounds %struct.sv* %58, i64 0, i32 0
  %60 = load i8** %sv_any144, align 8, !tbaa !12
  %xrv_rv145 = bitcast i8* %60 to %struct.sv**
  %61 = load %struct.sv** %xrv_rv145, align 8, !tbaa !13
  %tobool146 = icmp eq %struct.sv* %61, null
  br i1 %tobool146, label %if.else208, label %if.then147

if.then147:                                       ; preds = %land.lhs.true143
  %62 = bitcast %struct.sv* %61 to %struct.av*
  %call149 = call %struct.sv** @Perl_av_fetch(%struct.av* %62, i64 0, i64 0) #2
  %tobool150 = icmp eq %struct.sv** %call149, null
  br i1 %tobool150, label %if.else206, label %land.lhs.true151

land.lhs.true151:                                 ; preds = %if.then147
  %63 = load %struct.sv** %call149, align 8, !tbaa !1
  %tobool152 = icmp eq %struct.sv* %63, null
  br i1 %tobool152, label %if.else206, label %if.then153

if.then153:                                       ; preds = %land.lhs.true151
  %tobool154 = icmp eq i64 %purity, 0
  br i1 %tobool154, label %if.else171, label %land.lhs.true155

land.lhs.true155:                                 ; preds = %if.then153
  %64 = load i64* %levelp, align 8, !tbaa !5
  %cmp156 = icmp sgt i64 %64, 0
  br i1 %cmp156, label %if.then158, label %if.else171

if.then158:                                       ; preds = %land.lhs.true155
  switch i64 %and120, label %if.else167 [
    i64 11, label %if.then162
    i64 10, label %if.then166
  ]

if.then162:                                       ; preds = %if.then158
  call void @Perl_sv_catpvn_flags(%struct.sv* %retval1, i8* getelementptr inbounds ([3 x i8]* @.str34, i64 0, i64 0), i64 2, i64 2) #2
  br label %if.end169

if.then166:                                       ; preds = %if.then158
  call void @Perl_sv_catpvn_flags(%struct.sv* %retval1, i8* getelementptr inbounds ([3 x i8]* @.str35, i64 0, i64 0), i64 2, i64 2) #2
  br label %if.end169

if.else167:                                       ; preds = %if.then158
  call void @Perl_sv_catpvn_flags(%struct.sv* %retval1, i8* getelementptr inbounds ([10 x i8]* @.str36, i64 0, i64 0), i64 9, i64 2) #2
  br label %if.end169

if.end169:                                        ; preds = %if.then166, %if.else167, %if.then162
  %call170 = call %struct.sv* @Perl_newSVpvn(i8* %name, i64 %namelen) #2
  call void @Perl_sv_catpvn_flags(%struct.sv* %call170, i8* getelementptr inbounds ([4 x i8]* @.str26, i64 0, i64 0), i64 3, i64 2) #2
  call void @Perl_sv_catsv_flags(%struct.sv* %call170, %struct.sv* %63, i64 2) #2
  call void @Perl_av_push(%struct.av* %postav, %struct.sv* %call170) #2
  br label %cleanup

if.else171:                                       ; preds = %if.then153, %land.lhs.true155
  %65 = load i8* %name, align 1, !tbaa !22
  switch i8 %65, label %if.else203 [
    i8 64, label %if.then180
    i8 37, label %if.then180
  ]

if.then180:                                       ; preds = %if.else171, %if.else171
  %sv_any181 = getelementptr inbounds %struct.sv* %63, i64 0, i32 0
  %66 = load i8** %sv_any181, align 8, !tbaa !12
  %xpv_pv182 = bitcast i8* %66 to i8**
  %67 = load i8** %xpv_pv182, align 8, !tbaa !21
  %68 = load i8* %67, align 1, !tbaa !22
  %cmp185 = icmp eq i8 %68, 92
  br i1 %cmp185, label %land.lhs.true187, label %if.else201

land.lhs.true187:                                 ; preds = %if.then180
  %arrayidx190 = getelementptr inbounds i8* %67, i64 1
  %69 = load i8* %arrayidx190, align 1, !tbaa !22
  %cmp194 = icmp eq i8 %69, %65
  br i1 %cmp194, label %if.then196, label %if.else201

if.then196:                                       ; preds = %land.lhs.true187
  %xpv_cur200 = getelementptr inbounds i8* %66, i64 8
  %70 = bitcast i8* %xpv_cur200 to i64*
  %71 = load i64* %70, align 8, !tbaa !19
  %sub = add i64 %71, -1
  call void @Perl_sv_catpvn_flags(%struct.sv* %retval1, i8* %arrayidx190, i64 %sub, i64 2) #2
  br label %cleanup

if.else201:                                       ; preds = %land.lhs.true187, %if.then180
  call void @Perl_sv_catpvn_flags(%struct.sv* %retval1, i8* %name, i64 1, i64 2) #2
  call void @Perl_sv_catpvn_flags(%struct.sv* %retval1, i8* getelementptr inbounds ([2 x i8]* @.str37, i64 0, i64 0), i64 1, i64 2) #2
  call void @Perl_sv_catsv_flags(%struct.sv* %retval1, %struct.sv* %63, i64 2) #2
  call void @Perl_sv_catpvn_flags(%struct.sv* %retval1, i8* getelementptr inbounds ([2 x i8]* @.str38, i64 0, i64 0), i64 1, i64 2) #2
  br label %cleanup

if.else203:                                       ; preds = %if.else171
  call void @Perl_sv_catsv_flags(%struct.sv* %retval1, %struct.sv* %63, i64 2) #2
  br label %cleanup

if.else206:                                       ; preds = %land.lhs.true151, %if.then147
  call void (i8*, ...)* @Perl_warn(i8* getelementptr inbounds ([26 x i8]* @.str39, i64 0, i64 0), i8* %1) #2
  br label %cleanup

if.else208:                                       ; preds = %land.lhs.true143, %land.lhs.true139, %land.lhs.true137, %if.then133
  %72 = load i8* %name, align 1, !tbaa !22
  switch i8 %72, label %if.else221 [
    i8 64, label %if.then219
    i8 37, label %if.then219
  ]

if.then219:                                       ; preds = %if.else208, %if.else208
  %call220 = call %struct.sv* @Perl_newSVpvn(i8* getelementptr inbounds ([2 x i8]* @.str40, i64 0, i64 0), i64 1) #2
  call void @Perl_sv_catpvn_flags(%struct.sv* %call220, i8* %name, i64 %namelen, i64 2) #2
  br label %land.end

if.else221:                                       ; preds = %if.else208
  %cmp222 = icmp eq i64 %and120, 12
  %cmp227 = icmp eq i8 %72, 42
  %or.cond12 = and i1 %cmp222, %cmp227
  br i1 %or.cond12, label %if.then229, label %if.else234

if.then229:                                       ; preds = %if.else221
  %call230 = call %struct.sv* @Perl_newSVpvn(i8* getelementptr inbounds ([2 x i8]* @.str40, i64 0, i64 0), i64 2) #2
  call void @Perl_sv_catpvn_flags(%struct.sv* %call230, i8* %name, i64 %namelen, i64 2) #2
  %sv_any231 = getelementptr inbounds %struct.sv* %call230, i64 0, i32 0
  %73 = load i8** %sv_any231, align 8, !tbaa !12
  %xpv_pv232 = bitcast i8* %73 to i8**
  %74 = load i8** %xpv_pv232, align 8, !tbaa !21
  %arrayidx233 = getelementptr inbounds i8* %74, i64 1
  store i8 38, i8* %arrayidx233, align 1, !tbaa !22
  br label %land.end

if.else234:                                       ; preds = %if.else221
  %call235 = call %struct.sv* @Perl_newSVpvn(i8* %name, i64 %namelen) #2
  br label %land.end

land.end:                                         ; preds = %if.then229, %if.else234, %if.then219
  %namesv.0 = phi %struct.sv* [ %call220, %if.then219 ], [ %call230, %if.then229 ], [ %call235, %if.else234 ]
  %call238 = call %struct.av* @Perl_newAV() #2
  call void @Perl_av_push(%struct.av* %call238, %struct.sv* %namesv.0) #2
  store %struct.sv* %val, %struct.sv** @PL_Sv, align 8, !tbaa !1
  %sv_refcnt = getelementptr inbounds %struct.sv* %val, i64 0, i32 1
  %75 = load i64* %sv_refcnt, align 8, !tbaa !42
  %inc = add i64 %75, 1
  store i64 %inc, i64* %sv_refcnt, align 8, !tbaa !42
  call void @Perl_av_push(%struct.av* %call238, %struct.sv* %val) #2
  %call243 = call i64 @strlen(i8* %1) #2
  %76 = bitcast %struct.av* %call238 to %struct.sv*
  %call244 = call %struct.sv* @Perl_newRV(%struct.sv* %76) #2
  %call245 = call %struct.sv** @Perl_hv_store(%struct.hv* %seenhv, i8* %1, i64 %call243, %struct.sv* %call244, i64 0) #2
  call void @Perl_sv_free(%struct.sv* %76) #2
  br label %if.end247

if.end247:                                        ; preds = %if.end131, %land.end
  %seenentry.0 = phi %struct.av* [ %call238, %land.end ], [ null, %if.end131 ]
  %tobool248 = icmp ne i8* %realpack.0, null
  br i1 %tobool248, label %land.lhs.true249, label %if.end282

land.lhs.true249:                                 ; preds = %if.end247
  %77 = load i8* %realpack.0, align 1, !tbaa !22
  %cmp251 = icmp eq i8 %77, 82
  br i1 %cmp251, label %land.lhs.true253, label %if.end282

land.lhs.true253:                                 ; preds = %land.lhs.true249
  %call254 = call i32 @strcmp(i8* %realpack.0, i8* getelementptr inbounds ([7 x i8]* @.str41, i64 0, i64 0)) #2
  %tobool255 = icmp eq i32 %call254, 0
  br i1 %tobool255, label %if.then256, label %if.end282

if.then256:                                       ; preds = %land.lhs.true253
  %78 = load i64* %sv_flags, align 8, !tbaa !10
  %and260 = and i64 %78, 262144
  %cmp261 = icmp eq i64 %and260, 0
  br i1 %cmp261, label %cond.false268, label %cond.true263

cond.true263:                                     ; preds = %if.then256
  %79 = load i8** %sv_any, align 8, !tbaa !12
  %xpv_cur265 = getelementptr inbounds i8* %79, i64 8
  %80 = bitcast i8* %xpv_cur265 to i64*
  %81 = load i64* %80, align 8, !tbaa !19
  store i64 %81, i64* %rlen, align 8, !tbaa !5
  %xpv_pv267 = bitcast i8* %79 to i8**
  %82 = load i8** %xpv_pv267, align 8, !tbaa !21
  br label %cond.end

cond.false268:                                    ; preds = %if.then256
  %call269 = call i8* @Perl_sv_2pv_flags(%struct.sv* %val, i64* %rlen, i64 2) #2
  br label %cond.end

cond.end:                                         ; preds = %cond.false268, %cond.true263
  %cond = phi i8* [ %82, %cond.true263 ], [ %call269, %cond.false268 ]
  %call271 = call i8* @strchr(i8* %cond, i32 47) #2
  call void @Perl_sv_catpvn_flags(%struct.sv* %retval1, i8* getelementptr inbounds ([4 x i8]* @.str42, i64 0, i64 0), i64 3, i64 2) #2
  %tobool272262 = icmp eq i8* %call271, null
  br i1 %tobool272262, label %cond.end.while.end_crit_edge, label %while.body

cond.end.while.end_crit_edge:                     ; preds = %cond.end
  %.pre289 = load i64* %rlen, align 8, !tbaa !5
  br label %while.end

while.body:                                       ; preds = %cond.end, %while.body
  %rval.0264 = phi i8* [ %add.ptr280, %while.body ], [ %cond, %cond.end ]
  %slash.0263 = phi i8* [ %call281, %while.body ], [ %call271, %cond.end ]
  %sub.ptr.lhs.cast273 = ptrtoint i8* %slash.0263 to i64
  %sub.ptr.rhs.cast274 = ptrtoint i8* %rval.0264 to i64
  %sub.ptr.sub275 = sub i64 %sub.ptr.lhs.cast273, %sub.ptr.rhs.cast274
  call void @Perl_sv_catpvn_flags(%struct.sv* %retval1, i8* %rval.0264, i64 %sub.ptr.sub275, i64 2) #2
  call void @Perl_sv_catpvn_flags(%struct.sv* %retval1, i8* getelementptr inbounds ([3 x i8]* @.str43, i64 0, i64 0), i64 2, i64 2) #2
  %83 = load i64* %rlen, align 8, !tbaa !5
  %add.neg = xor i64 %sub.ptr.sub275, -1
  %sub279 = add i64 %83, %add.neg
  store i64 %sub279, i64* %rlen, align 8, !tbaa !5
  %add.ptr280 = getelementptr inbounds i8* %slash.0263, i64 1
  %call281 = call i8* @strchr(i8* %add.ptr280, i32 47) #2
  %tobool272 = icmp eq i8* %call281, null
  br i1 %tobool272, label %while.end, label %while.body

while.end:                                        ; preds = %while.body, %cond.end.while.end_crit_edge
  %84 = phi i64 [ %.pre289, %cond.end.while.end_crit_edge ], [ %sub279, %while.body ]
  %rval.0.lcssa = phi i8* [ %cond, %cond.end.while.end_crit_edge ], [ %add.ptr280, %while.body ]
  call void @Perl_sv_catpvn_flags(%struct.sv* %retval1, i8* %rval.0.lcssa, i64 %84, i64 2) #2
  call void @Perl_sv_catpvn_flags(%struct.sv* %retval1, i8* getelementptr inbounds ([2 x i8]* @.str44, i64 0, i64 0), i64 1, i64 2) #2
  br label %cleanup

if.end282:                                        ; preds = %land.lhs.true253, %land.lhs.true249, %if.end247
  %tobool283 = icmp eq i64 %purity, 0
  %cmp285 = icmp sgt i64 %maxdepth, 0
  %or.cond1271 = and i1 %tobool283, %cmp285
  br i1 %or.cond1271, label %land.lhs.true287, label %if.end306

land.lhs.true287:                                 ; preds = %if.end282
  %85 = load i64* %levelp, align 8, !tbaa !5
  %cmp288 = icmp slt i64 %85, %maxdepth
  br i1 %cmp288, label %if.end306, label %if.then290

if.then290:                                       ; preds = %land.lhs.true287
  %86 = load i64* %sv_flags, align 8, !tbaa !10
  %and294 = and i64 %86, 262144
  %cmp295 = icmp eq i64 %and294, 0
  br i1 %cmp295, label %cond.false302, label %cond.true297

cond.true297:                                     ; preds = %if.then290
  %87 = load i8** %sv_any, align 8, !tbaa !12
  %xpv_cur299 = getelementptr inbounds i8* %87, i64 8
  %88 = bitcast i8* %xpv_cur299 to i64*
  %89 = load i64* %88, align 8, !tbaa !19
  store i64 %89, i64* %vallen, align 8, !tbaa !5
  %xpv_pv301 = bitcast i8* %87 to i8**
  %90 = load i8** %xpv_pv301, align 8, !tbaa !21
  br label %cond.end304

cond.false302:                                    ; preds = %if.then290
  %call303 = call i8* @Perl_sv_2pv_flags(%struct.sv* %val, i64* %vallen, i64 2) #2
  br label %cond.end304

cond.end304:                                      ; preds = %cond.false302, %cond.true297
  %cond305 = phi i8* [ %90, %cond.true297 ], [ %call303, %cond.false302 ]
  call void @Perl_sv_catpvn_flags(%struct.sv* %retval1, i8* getelementptr inbounds ([2 x i8]* @.str45, i64 0, i64 0), i64 1, i64 2) #2
  %91 = load i64* %vallen, align 8, !tbaa !5
  call void @Perl_sv_catpvn_flags(%struct.sv* %retval1, i8* %cond305, i64 %91, i64 2) #2
  call void @Perl_sv_catpvn_flags(%struct.sv* %retval1, i8* getelementptr inbounds ([2 x i8]* @.str45, i64 0, i64 0), i64 1, i64 2) #2
  br label %cleanup

if.end306:                                        ; preds = %land.lhs.true287, %if.end282
  br i1 %tobool248, label %if.then308, label %if.end331

if.then308:                                       ; preds = %if.end306
  %sv_flags311 = getelementptr inbounds %struct.sv* %bless, i64 0, i32 2
  %92 = load i64* %sv_flags311, align 8, !tbaa !10
  %and312 = and i64 %92, 262144
  %cmp313 = icmp eq i64 %and312, 0
  br i1 %cmp313, label %cond.false320, label %cond.true315

cond.true315:                                     ; preds = %if.then308
  %sv_any316 = getelementptr inbounds %struct.sv* %bless, i64 0, i32 0
  %93 = load i8** %sv_any316, align 8, !tbaa !12
  %xpv_cur317 = getelementptr inbounds i8* %93, i64 8
  %94 = bitcast i8* %xpv_cur317 to i64*
  %95 = load i64* %94, align 8, !tbaa !19
  store i64 %95, i64* %blesslen, align 8, !tbaa !5
  %xpv_pv319 = bitcast i8* %93 to i8**
  %96 = load i8** %xpv_pv319, align 8, !tbaa !21
  br label %cond.end322

cond.false320:                                    ; preds = %if.then308
  %call321 = call i8* @Perl_sv_2pv_flags(%struct.sv* %bless, i64* %blesslen, i64 2) #2
  %.pre290 = load i64* %blesslen, align 8, !tbaa !5
  br label %cond.end322

cond.end322:                                      ; preds = %cond.false320, %cond.true315
  %97 = phi i64 [ %95, %cond.true315 ], [ %.pre290, %cond.false320 ]
  %cond323 = phi i8* [ %96, %cond.true315 ], [ %call321, %cond.false320 ]
  call void @Perl_sv_catpvn_flags(%struct.sv* %retval1, i8* %cond323, i64 %97, i64 2) #2
  call void @Perl_sv_catpvn_flags(%struct.sv* %retval1, i8* getelementptr inbounds ([3 x i8]* @.str46, i64 0, i64 0), i64 2, i64 2) #2
  %cmp324 = icmp sgt i64 %indent, 1
  br i1 %cmp324, label %if.then326, label %if.end331

if.then326:                                       ; preds = %cond.end322
  %call327 = call %struct.sv* @Perl_newSVsv(%struct.sv* %apad) #2
  %98 = load i64* %blesslen, align 8, !tbaa !5
  %add328 = add i64 %98, 2
  %cmp.i = icmp eq %struct.sv* %call327, null
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %if.then326
  %call.i = call %struct.sv* @Perl_newSVpvn(i8* getelementptr inbounds ([1 x i8]* @.str3, i64 0, i64 0), i64 0) #2
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %if.then326
  %sv.addr.0.i = phi %struct.sv* [ %call.i, %if.then.i ], [ %call327, %if.then326 ]
  %cmp1.i = icmp sgt i64 %add328, 0
  br i1 %cmp1.i, label %if.then2.i, label %if.end331

if.then2.i:                                       ; preds = %if.end.i
  %sv_any.i = getelementptr inbounds %struct.sv* %sv.addr.0.i, i64 0, i32 0
  %99 = load i8** %sv_any.i, align 8, !tbaa !12
  %xpv_len.i = getelementptr inbounds i8* %99, i64 16
  %100 = bitcast i8* %xpv_len.i to i64*
  %101 = load i64* %100, align 8, !tbaa !26
  %xpv_cur.i = getelementptr inbounds i8* %99, i64 8
  %102 = bitcast i8* %xpv_cur.i to i64*
  %103 = load i64* %102, align 8, !tbaa !19
  %add.i = add i64 %98, 3
  %add4.i = add i64 %add.i, %103
  %cmp5.i = icmp ult i64 %101, %add4.i
  br i1 %cmp5.i, label %cond.true.i, label %cond.end.i

cond.true.i:                                      ; preds = %if.then2.i
  %call11.i = call i8* @Perl_sv_grow(%struct.sv* %sv.addr.0.i, i64 %add4.i) #2
  %.pre291 = load i8** %sv_any.i, align 8, !tbaa !12
  %xpv_cur18.i.phi.trans.insert = getelementptr inbounds i8* %.pre291, i64 8
  %.phi.trans.insert292 = bitcast i8* %xpv_cur18.i.phi.trans.insert to i64*
  %.pre293 = load i64* %.phi.trans.insert292, align 8, !tbaa !19
  br label %cond.end.i

cond.end.i:                                       ; preds = %cond.true.i, %if.then2.i
  %104 = phi i64 [ %.pre293, %cond.true.i ], [ %103, %if.then2.i ]
  %105 = phi i8* [ %.pre291, %cond.true.i ], [ %99, %if.then2.i ]
  %xpv_pv16.i = bitcast i8* %105 to i8**
  %106 = load i8** %xpv_pv16.i, align 8, !tbaa !21
  %xpv_cur18.i = getelementptr inbounds i8* %105, i64 8
  %107 = bitcast i8* %xpv_cur18.i to i64*
  %add21.i = add i64 %104, %add328
  store i64 %add21.i, i64* %107, align 8, !tbaa !19
  %arrayidx.i = getelementptr inbounds i8* %106, i64 %add21.i
  store i8 0, i8* %arrayidx.i, align 1, !tbaa !22
  %108 = sub i64 -2, %98
  %109 = icmp sgt i64 %108, -1
  %smax = select i1 %109, i64 %108, i64 -1
  %110 = add i64 %98, %smax
  %111 = add i64 %110, 3
  %end.idx = add i64 %110, 3
  %n.vec = and i64 %111, -4
  %cmp.zero = icmp eq i64 %n.vec, 0
  %rev.ind.end = sub i64 %add328, %n.vec
  br i1 %cmp.zero, label %middle.block, label %vector.body

vector.body:                                      ; preds = %cond.end.i, %vector.body
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %cond.end.i ]
  %reverse.idx = sub i64 %add328, %index
  %.lhs = add i64 %reverse.idx, -1
  %112 = add i64 %.lhs, %104
  %.sum = add i64 %112, -3
  %113 = getelementptr i8* %106, i64 %.sum
  %114 = bitcast i8* %113 to <4 x i8>*
  store <4 x i8> <i8 32, i8 32, i8 32, i8 32>, <4 x i8>* %114, align 1
  %index.next = add i64 %index, 4
  %115 = icmp eq i64 %index.next, %n.vec
  br i1 %115, label %middle.block, label %vector.body, !llvm.loop !43

middle.block:                                     ; preds = %vector.body, %cond.end.i
  %resume.val = phi i64 [ %add328, %cond.end.i ], [ %rev.ind.end, %vector.body ]
  %new.indc.resume.val = phi i64 [ 0, %cond.end.i ], [ %n.vec, %vector.body ]
  %cmp.n = icmp eq i64 %end.idx, %new.indc.resume.val
  br i1 %cmp.n, label %if.end331, label %while.body.i

while.body.i:                                     ; preds = %middle.block, %while.body.i
  %n.addr.058.i = phi i64 [ %dec.i, %while.body.i ], [ %resume.val, %middle.block ]
  %dec.i = add nsw i64 %n.addr.058.i, -1
  %add.ptr.sum55.i = add i64 %dec.i, %104
  %arrayidx24.i = getelementptr inbounds i8* %106, i64 %add.ptr.sum55.i
  store i8 32, i8* %arrayidx24.i, align 1, !tbaa !22
  %cmp22.i = icmp sgt i64 %dec.i, 0
  br i1 %cmp22.i, label %while.body.i, label %if.end331, !llvm.loop !44

if.end331:                                        ; preds = %while.body.i, %middle.block, %if.end.i, %cond.end322, %if.end306
  %apad.addr.0 = phi %struct.sv* [ %apad, %cond.end322 ], [ %apad, %if.end306 ], [ %call327, %if.end.i ], [ %call327, %middle.block ], [ %call327, %while.body.i ]
  %116 = load i64* %levelp, align 8, !tbaa !5
  %inc332 = add nsw i64 %116, 1
  store i64 %inc332, i64* %levelp, align 8, !tbaa !5
  %sv_any333 = getelementptr inbounds %struct.sv* %xpad, i64 0, i32 0
  %117 = load i8** %sv_any333, align 8, !tbaa !12
  %xpv_pv334 = bitcast i8* %117 to i8**
  %118 = load i8** %xpv_pv334, align 8, !tbaa !21
  %xpv_cur336 = getelementptr inbounds i8* %117, i64 8
  %119 = bitcast i8* %xpv_cur336 to i64*
  %120 = load i64* %119, align 8, !tbaa !19
  %call.i14 = call %struct.sv* @Perl_newSVpvn(i8* getelementptr inbounds ([1 x i8]* @.str3, i64 0, i64 0), i64 0) #2
  %cmp1.i17 = icmp sgt i64 %116, -1
  br i1 %cmp1.i17, label %if.then2.i25, label %sv_x.exit39

if.then2.i25:                                     ; preds = %if.end331
  %sv_any.i19 = getelementptr inbounds %struct.sv* %call.i14, i64 0, i32 0
  %121 = load i8** %sv_any.i19, align 8, !tbaa !12
  %xpv_len.i20 = getelementptr inbounds i8* %121, i64 16
  %122 = bitcast i8* %xpv_len.i20 to i64*
  %123 = load i64* %122, align 8, !tbaa !26
  %mul.i = mul i64 %120, %inc332
  %xpv_cur.i21 = getelementptr inbounds i8* %121, i64 8
  %124 = bitcast i8* %xpv_cur.i21 to i64*
  %125 = load i64* %124, align 8, !tbaa !19
  %add.i22 = add i64 %mul.i, 1
  %add4.i23 = add i64 %add.i22, %125
  %cmp5.i24 = icmp ult i64 %123, %add4.i23
  br i1 %cmp5.i24, label %cond.true.i27, label %cond.end.i28

cond.true.i27:                                    ; preds = %if.then2.i25
  %call11.i26 = call i8* @Perl_sv_grow(%struct.sv* %call.i14, i64 %add4.i23) #2
  br label %cond.end.i28

cond.end.i28:                                     ; preds = %cond.true.i27, %if.then2.i25
  %cmp13.i = icmp eq i64 %120, 1
  br i1 %cmp13.i, label %while.body.lr.ph.i, label %while.body28.i

while.body.lr.ph.i:                               ; preds = %cond.end.i28
  %126 = load i8** %sv_any.i19, align 8, !tbaa !12
  %xpv_pv16.i29 = bitcast i8* %126 to i8**
  %127 = load i8** %xpv_pv16.i29, align 8, !tbaa !21
  %xpv_cur18.i30 = getelementptr inbounds i8* %126, i64 8
  %128 = bitcast i8* %xpv_cur18.i30 to i64*
  %129 = load i64* %128, align 8, !tbaa !19
  %add21.i31 = add i64 %129, %inc332
  store i64 %add21.i31, i64* %128, align 8, !tbaa !19
  %arrayidx.i32 = getelementptr inbounds i8* %127, i64 %add21.i31
  store i8 0, i8* %arrayidx.i32, align 1, !tbaa !22
  br label %while.body.i38

while.body.i38:                                   ; preds = %while.body.i38, %while.body.lr.ph.i
  %n.addr.058.i33 = phi i64 [ %inc332, %while.body.lr.ph.i ], [ %dec.i34, %while.body.i38 ]
  %130 = load i8* %118, align 1, !tbaa !22
  %dec.i34 = add nsw i64 %n.addr.058.i33, -1
  %add.ptr.sum55.i35 = add i64 %dec.i34, %129
  %arrayidx24.i36 = getelementptr inbounds i8* %127, i64 %add.ptr.sum55.i35
  store i8 %130, i8* %arrayidx24.i36, align 1, !tbaa !22
  %cmp22.i37 = icmp sgt i64 %dec.i34, 0
  br i1 %cmp22.i37, label %while.body.i38, label %sv_x.exit39

while.body28.i:                                   ; preds = %cond.end.i28, %while.body28.i
  %n.addr.160.i = phi i64 [ %dec29.i, %while.body28.i ], [ %inc332, %cond.end.i28 ]
  call void @Perl_sv_catpvn_flags(%struct.sv* %call.i14, i8* %118, i64 %120, i64 2) #2
  %dec29.i = add nsw i64 %n.addr.160.i, -1
  %cmp27.i = icmp sgt i64 %dec29.i, 0
  br i1 %cmp27.i, label %while.body28.i, label %sv_x.exit39

sv_x.exit39:                                      ; preds = %while.body28.i, %while.body.i38, %if.end331
  %cmp338 = icmp ult i64 %and120, 9
  br i1 %cmp338, label %if.then340, label %if.else358

if.then340:                                       ; preds = %sv_x.exit39
  %call343 = call %struct.sv* @Perl_newSVpvn(i8* getelementptr inbounds ([3 x i8]* @.str47, i64 0, i64 0), i64 2) #2
  call void @Perl_sv_catpvn_flags(%struct.sv* %call343, i8* %name, i64 %namelen, i64 2) #2
  call void @Perl_sv_catpvn_flags(%struct.sv* %call343, i8* getelementptr inbounds ([2 x i8]* @.str38, i64 0, i64 0), i64 1, i64 2) #2
  br i1 %tobool248, label %if.then345, label %if.else351

if.then345:                                       ; preds = %if.then340
  call void @Perl_sv_catpvn_flags(%struct.sv* %retval1, i8* getelementptr inbounds ([14 x i8]* @.str48, i64 0, i64 0), i64 13, i64 2) #2
  %sv_any346 = getelementptr inbounds %struct.sv* %call343, i64 0, i32 0
  %131 = load i8** %sv_any346, align 8, !tbaa !12
  %xpv_pv347 = bitcast i8* %131 to i8**
  %132 = load i8** %xpv_pv347, align 8, !tbaa !21
  %xpv_cur349 = getelementptr inbounds i8* %131, i64 8
  %133 = bitcast i8* %xpv_cur349 to i64*
  %134 = load i64* %133, align 8, !tbaa !19
  call fastcc void @DD_dump(%struct.sv* %49, i8* %132, i64 %134, %struct.sv* %retval1, %struct.hv* %seenhv, %struct.av* %postav, i64* %levelp, i64 %indent, %struct.sv* %pad, %struct.sv* %xpad, %struct.sv* %apad.addr.0, %struct.sv* %sep, %struct.sv* %pair, %struct.sv* %freezer, %struct.sv* %toaster, i64 %purity, i64 %deepcopy, i64 %quotekeys, %struct.sv* %bless, i64 %maxdepth, %struct.sv* %sortkeys)
  call void @Perl_sv_catpvn_flags(%struct.sv* %retval1, i8* getelementptr inbounds ([3 x i8]* @.str49, i64 0, i64 0), i64 2, i64 2) #2
  br label %if.end357

if.else351:                                       ; preds = %if.then340
  call void @Perl_sv_catpvn_flags(%struct.sv* %retval1, i8* getelementptr inbounds ([2 x i8]* @.str40, i64 0, i64 0), i64 1, i64 2) #2
  %sv_any352 = getelementptr inbounds %struct.sv* %call343, i64 0, i32 0
  %135 = load i8** %sv_any352, align 8, !tbaa !12
  %xpv_pv353 = bitcast i8* %135 to i8**
  %136 = load i8** %xpv_pv353, align 8, !tbaa !21
  %xpv_cur355 = getelementptr inbounds i8* %135, i64 8
  %137 = bitcast i8* %xpv_cur355 to i64*
  %138 = load i64* %137, align 8, !tbaa !19
  call fastcc void @DD_dump(%struct.sv* %49, i8* %136, i64 %138, %struct.sv* %retval1, %struct.hv* %seenhv, %struct.av* %postav, i64* %levelp, i64 %indent, %struct.sv* %pad, %struct.sv* %xpad, %struct.sv* %apad.addr.0, %struct.sv* %sep, %struct.sv* %pair, %struct.sv* %freezer, %struct.sv* %toaster, i64 %purity, i64 %deepcopy, i64 %quotekeys, %struct.sv* %bless, i64 %maxdepth, %struct.sv* %sortkeys)
  br label %if.end357

if.end357:                                        ; preds = %if.else351, %if.then345
  call void @Perl_sv_free(%struct.sv* %call343) #2
  br label %if.end887

if.else358:                                       ; preds = %sv_x.exit39
  switch i64 %and120, label %if.else882 [
    i64 13, label %if.then361
    i64 10, label %if.then373
    i64 11, label %if.then514
    i64 12, label %if.then878
  ]

if.then361:                                       ; preds = %if.else358
  %call364 = call %struct.sv* @Perl_newSVpvn(i8* getelementptr inbounds ([3 x i8]* @.str50, i64 0, i64 0), i64 2) #2
  call void @Perl_sv_catpvn_flags(%struct.sv* %call364, i8* %name, i64 %namelen, i64 2) #2
  call void @Perl_sv_catpvn_flags(%struct.sv* %call364, i8* getelementptr inbounds ([2 x i8]* @.str38, i64 0, i64 0), i64 1, i64 2) #2
  call void @Perl_sv_catpvn_flags(%struct.sv* %retval1, i8* getelementptr inbounds ([2 x i8]* @.str40, i64 0, i64 0), i64 1, i64 2) #2
  %sv_any365 = getelementptr inbounds %struct.sv* %call364, i64 0, i32 0
  %139 = load i8** %sv_any365, align 8, !tbaa !12
  %xpv_pv366 = bitcast i8* %139 to i8**
  %140 = load i8** %xpv_pv366, align 8, !tbaa !21
  %xpv_cur368 = getelementptr inbounds i8* %139, i64 8
  %141 = bitcast i8* %xpv_cur368 to i64*
  %142 = load i64* %141, align 8, !tbaa !19
  call fastcc void @DD_dump(%struct.sv* %49, i8* %140, i64 %142, %struct.sv* %retval1, %struct.hv* %seenhv, %struct.av* %postav, i64* %levelp, i64 %indent, %struct.sv* %pad, %struct.sv* %xpad, %struct.sv* %apad.addr.0, %struct.sv* %sep, %struct.sv* %pair, %struct.sv* %freezer, %struct.sv* %toaster, i64 %purity, i64 %deepcopy, i64 %quotekeys, %struct.sv* %bless, i64 %maxdepth, %struct.sv* %sortkeys)
  call void @Perl_sv_free(%struct.sv* %call364) #2
  br label %if.end887

if.then373:                                       ; preds = %if.else358
  %143 = bitcast %struct.sv* %49 to %struct.av*
  %call377 = call i64 @Perl_av_len(%struct.av* %143) #2
  %call379 = call %struct.sv* @Perl_newSViv(i64 0) #2
  %add380 = add i64 %namelen, 28
  %call381 = call i8* @Perl_safesysmalloc(i64 %add380) #2
  %call382 = call i8* @strcpy(i8* %call381, i8* %name) #2
  %144 = load i8* %name, align 1, !tbaa !22
  %cmp385 = icmp eq i8 %144, 64
  br i1 %cmp385, label %if.end429.thread, label %if.else389

if.end429.thread:                                 ; preds = %if.then373
  call void @Perl_sv_catpvn_flags(%struct.sv* %retval1, i8* getelementptr inbounds ([2 x i8]* @.str51, i64 0, i64 0), i64 1, i64 2) #2
  store i8 36, i8* %call381, align 1, !tbaa !22
  br label %if.end463

if.else389:                                       ; preds = %if.then373
  call void @Perl_sv_catpvn_flags(%struct.sv* %retval1, i8* getelementptr inbounds ([2 x i8]* @.str52, i64 0, i64 0), i64 1, i64 2) #2
  br i1 %tobool132, label %if.end429, label %land.lhs.true392

land.lhs.true392:                                 ; preds = %if.else389
  %sub393 = add i64 %namelen, -1
  %arrayidx394 = getelementptr inbounds i8* %name, i64 %sub393
  %145 = load i8* %arrayidx394, align 1, !tbaa !22
  switch i8 %145, label %if.then422 [
    i8 93, label %lor.lhs.false404
    i8 125, label %lor.lhs.false404
  ]

lor.lhs.false404:                                 ; preds = %land.lhs.true392, %land.lhs.true392
  %cmp405 = icmp ugt i64 %namelen, 4
  br i1 %cmp405, label %land.lhs.true407, label %if.end429

land.lhs.true407:                                 ; preds = %lor.lhs.false404
  %arrayidx408 = getelementptr inbounds i8* %name, i64 1
  %146 = load i8* %arrayidx408, align 1, !tbaa !22
  %cmp410 = icmp eq i8 %146, 123
  br i1 %cmp410, label %if.then422, label %lor.lhs.false412

lor.lhs.false412:                                 ; preds = %land.lhs.true407
  %147 = load i8* %name, align 1, !tbaa !22
  %cmp415 = icmp eq i8 %147, 92
  br i1 %cmp415, label %land.lhs.true417, label %if.end429

land.lhs.true417:                                 ; preds = %lor.lhs.false412
  %arrayidx418 = getelementptr inbounds i8* %name, i64 2
  %148 = load i8* %arrayidx418, align 1, !tbaa !22
  %cmp420 = icmp eq i8 %148, 123
  br i1 %cmp420, label %if.then422, label %if.end429

if.then422:                                       ; preds = %land.lhs.true392, %land.lhs.true417, %land.lhs.true407
  %inc423 = add i64 %namelen, 1
  %arrayidx424 = getelementptr inbounds i8* %call381, i64 %namelen
  store i8 45, i8* %arrayidx424, align 1, !tbaa !22
  %inc425 = add i64 %namelen, 2
  %arrayidx426 = getelementptr inbounds i8* %call381, i64 %inc423
  store i8 62, i8* %arrayidx426, align 1, !tbaa !22
  %arrayidx427 = getelementptr inbounds i8* %call381, i64 %inc425
  store i8 0, i8* %arrayidx427, align 1, !tbaa !22
  br label %if.end429

if.end429:                                        ; preds = %if.else389, %lor.lhs.false404, %lor.lhs.false412, %land.lhs.true417, %if.then422
  %inamelen.0.ph = phi i64 [ %namelen, %lor.lhs.false404 ], [ %namelen, %lor.lhs.false412 ], [ %namelen, %land.lhs.true417 ], [ %inc425, %if.then422 ], [ 0, %if.else389 ]
  %.pr = load i8* %call381, align 1, !tbaa !22
  %cmp432 = icmp eq i8 %.pr, 42
  br i1 %cmp432, label %land.lhs.true434, label %if.end463

land.lhs.true434:                                 ; preds = %if.end429
  %sub435 = add i64 %inamelen.0.ph, -1
  %arrayidx436 = getelementptr inbounds i8* %call381, i64 %sub435
  %149 = load i8* %arrayidx436, align 1, !tbaa !22
  %cmp438 = icmp eq i8 %149, 125
  %cmp441 = icmp ugt i64 %inamelen.0.ph, 7
  %or.cond1272 = and i1 %cmp438, %cmp441
  br i1 %or.cond1272, label %land.lhs.true443, label %if.end463

land.lhs.true443:                                 ; preds = %land.lhs.true434
  %add.ptr444 = getelementptr inbounds i8* %call381, i64 %inamelen.0.ph
  %add.ptr444.sum = add i64 %inamelen.0.ph, -8
  %add.ptr445 = getelementptr inbounds i8* %call381, i64 %add.ptr444.sum
  %call446 = call i8* @Perl_instr(i8* %add.ptr445, i8* getelementptr inbounds ([9 x i8]* @.str53, i64 0, i64 0)) #2
  %tobool447 = icmp eq i8* %call446, null
  br i1 %tobool447, label %lor.lhs.false448, label %if.then458

lor.lhs.false448:                                 ; preds = %land.lhs.true443
  %add.ptr444.sum10 = add i64 %inamelen.0.ph, -7
  %add.ptr450 = getelementptr inbounds i8* %call381, i64 %add.ptr444.sum10
  %call451 = call i8* @Perl_instr(i8* %add.ptr450, i8* getelementptr inbounds ([8 x i8]* @.str54, i64 0, i64 0)) #2
  %tobool452 = icmp eq i8* %call451, null
  br i1 %tobool452, label %lor.lhs.false453, label %if.then458

lor.lhs.false453:                                 ; preds = %lor.lhs.false448
  %add.ptr444.sum11 = add i64 %inamelen.0.ph, -6
  %add.ptr455 = getelementptr inbounds i8* %call381, i64 %add.ptr444.sum11
  %call456 = call i8* @Perl_instr(i8* %add.ptr455, i8* getelementptr inbounds ([7 x i8]* @.str55, i64 0, i64 0)) #2
  %tobool457 = icmp eq i8* %call456, null
  br i1 %tobool457, label %if.end463, label %if.then458

if.then458:                                       ; preds = %lor.lhs.false453, %lor.lhs.false448, %land.lhs.true443
  %inc459 = add i64 %inamelen.0.ph, 1
  store i8 45, i8* %add.ptr444, align 1, !tbaa !22
  %inc461 = add i64 %inamelen.0.ph, 2
  %arrayidx462 = getelementptr inbounds i8* %call381, i64 %inc459
  store i8 62, i8* %arrayidx462, align 1, !tbaa !22
  br label %if.end463

if.end463:                                        ; preds = %if.end429.thread, %lor.lhs.false453, %if.then458, %land.lhs.true434, %if.end429
  %inamelen.1 = phi i64 [ %inc461, %if.then458 ], [ %inamelen.0.ph, %lor.lhs.false453 ], [ %inamelen.0.ph, %land.lhs.true434 ], [ %inamelen.0.ph, %if.end429 ], [ %namelen, %if.end429.thread ]
  %inc464 = add i64 %inamelen.1, 1
  %arrayidx465 = getelementptr inbounds i8* %call381, i64 %inamelen.1
  store i8 91, i8* %arrayidx465, align 1, !tbaa !22
  %arrayidx466 = getelementptr inbounds i8* %call381, i64 %inc464
  store i8 0, i8* %arrayidx466, align 1, !tbaa !22
  %call467 = call %struct.sv* @Perl_newSVsv(%struct.sv* %sep) #2
  call void @Perl_sv_catsv_flags(%struct.sv* %call467, %struct.sv* %pad, i64 2) #2
  call void @Perl_sv_catsv_flags(%struct.sv* %call467, %struct.sv* %apad.addr.0, i64 2) #2
  %cmp468265 = icmp slt i64 %call377, 0
  br i1 %cmp468265, label %if.end503, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.end463
  %cmp483 = icmp sgt i64 %indent, 2
  br label %for.body

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %ix.0266 = phi i64 [ 0, %for.body.lr.ph ], [ %inc492, %for.inc ]
  %call472 = call %struct.sv** @Perl_av_fetch(%struct.av* %143, i64 %ix.0266, i64 0) #2
  %tobool473 = icmp eq %struct.sv** %call472, null
  br i1 %tobool473, label %if.end476, label %if.then474

if.then474:                                       ; preds = %for.body
  %150 = load %struct.sv** %call472, align 8, !tbaa !1
  br label %if.end476

if.end476:                                        ; preds = %for.body, %if.then474
  %elem.0 = phi %struct.sv* [ %150, %if.then474 ], [ @PL_sv_undef, %for.body ]
  call void @Perl_sv_setiv(%struct.sv* %call379, i64 %ix.0266) #2
  %call478 = call i32 (i8*, i8*, ...)* @sprintf(i8* %arrayidx466, i8* getelementptr inbounds ([4 x i8]* @.str24, i64 0, i64 0), i64 %ix.0266) #2
  %call479 = call i64 @strlen(i8* %call381) #2
  %inc480 = add i64 %call479, 1
  %arrayidx481 = getelementptr inbounds i8* %call381, i64 %call479
  store i8 93, i8* %arrayidx481, align 1, !tbaa !22
  %arrayidx482 = getelementptr inbounds i8* %call381, i64 %inc480
  store i8 0, i8* %arrayidx482, align 1, !tbaa !22
  br i1 %cmp483, label %if.then485, label %if.end486

if.then485:                                       ; preds = %if.end476
  call void @Perl_sv_catsv_flags(%struct.sv* %retval1, %struct.sv* %call467, i64 2) #2
  call void @Perl_sv_catsv_flags(%struct.sv* %retval1, %struct.sv* %call.i14, i64 2) #2
  call void @Perl_sv_catpvn_flags(%struct.sv* %retval1, i8* getelementptr inbounds ([2 x i8]* @.str56, i64 0, i64 0), i64 1, i64 2) #2
  call void @Perl_sv_catsv_flags(%struct.sv* %retval1, %struct.sv* %call379, i64 2) #2
  br label %if.end486

if.end486:                                        ; preds = %if.then485, %if.end476
  call void @Perl_sv_catsv_flags(%struct.sv* %retval1, %struct.sv* %call467, i64 2) #2
  call void @Perl_sv_catsv_flags(%struct.sv* %retval1, %struct.sv* %call.i14, i64 2) #2
  call fastcc void @DD_dump(%struct.sv* %elem.0, i8* %call381, i64 %inc480, %struct.sv* %retval1, %struct.hv* %seenhv, %struct.av* %postav, i64* %levelp, i64 %indent, %struct.sv* %pad, %struct.sv* %xpad, %struct.sv* %apad.addr.0, %struct.sv* %sep, %struct.sv* %pair, %struct.sv* %freezer, %struct.sv* %toaster, i64 %purity, i64 %deepcopy, i64 %quotekeys, %struct.sv* %bless, i64 %maxdepth, %struct.sv* %sortkeys)
  %cmp488 = icmp slt i64 %ix.0266, %call377
  br i1 %cmp488, label %if.then490, label %for.inc

if.then490:                                       ; preds = %if.end486
  call void @Perl_sv_catpvn_flags(%struct.sv* %retval1, i8* getelementptr inbounds ([2 x i8]* @.str57, i64 0, i64 0), i64 1, i64 2) #2
  br label %for.inc

for.inc:                                          ; preds = %if.end486, %if.then490
  %inc492 = add nsw i64 %ix.0266, 1
  %exitcond277 = icmp eq i64 %ix.0266, %call377
  br i1 %exitcond277, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc
  %cmp493 = icmp sgt i64 %call377, -1
  br i1 %cmp493, label %if.then495, label %if.end503

if.then495:                                       ; preds = %for.end
  %151 = load i8** %sv_any333, align 8, !tbaa !12
  %xpv_pv498 = bitcast i8* %151 to i8**
  %152 = load i8** %xpv_pv498, align 8, !tbaa !21
  %xpv_cur500 = getelementptr inbounds i8* %151, i64 8
  %153 = bitcast i8* %xpv_cur500 to i64*
  %154 = load i64* %153, align 8, !tbaa !19
  %155 = load i64* %levelp, align 8, !tbaa !5
  %sub501 = add nsw i64 %155, -1
  %call.i91 = call %struct.sv* @Perl_newSVpvn(i8* getelementptr inbounds ([1 x i8]* @.str3, i64 0, i64 0), i64 0) #2
  %cmp1.i94 = icmp sgt i64 %sub501, 0
  br i1 %cmp1.i94, label %if.then2.i103, label %sv_x.exit123

if.then2.i103:                                    ; preds = %if.then495
  %sv_any.i96 = getelementptr inbounds %struct.sv* %call.i91, i64 0, i32 0
  %156 = load i8** %sv_any.i96, align 8, !tbaa !12
  %xpv_len.i97 = getelementptr inbounds i8* %156, i64 16
  %157 = bitcast i8* %xpv_len.i97 to i64*
  %158 = load i64* %157, align 8, !tbaa !26
  %mul.i98 = mul i64 %sub501, %154
  %xpv_cur.i99 = getelementptr inbounds i8* %156, i64 8
  %159 = bitcast i8* %xpv_cur.i99 to i64*
  %160 = load i64* %159, align 8, !tbaa !19
  %add.i100 = add i64 %mul.i98, 1
  %add4.i101 = add i64 %add.i100, %160
  %cmp5.i102 = icmp ult i64 %158, %add4.i101
  br i1 %cmp5.i102, label %cond.true.i105, label %cond.end.i107

cond.true.i105:                                   ; preds = %if.then2.i103
  %call11.i104 = call i8* @Perl_sv_grow(%struct.sv* %call.i91, i64 %add4.i101) #2
  br label %cond.end.i107

cond.end.i107:                                    ; preds = %cond.true.i105, %if.then2.i103
  %cmp13.i106 = icmp eq i64 %154, 1
  br i1 %cmp13.i106, label %while.body.lr.ph.i112, label %while.body28.i122

while.body.lr.ph.i112:                            ; preds = %cond.end.i107
  %161 = load i8** %sv_any.i96, align 8, !tbaa !12
  %xpv_pv16.i108 = bitcast i8* %161 to i8**
  %162 = load i8** %xpv_pv16.i108, align 8, !tbaa !21
  %xpv_cur18.i109 = getelementptr inbounds i8* %161, i64 8
  %163 = bitcast i8* %xpv_cur18.i109 to i64*
  %164 = load i64* %163, align 8, !tbaa !19
  %add21.i110 = add i64 %164, %sub501
  store i64 %add21.i110, i64* %163, align 8, !tbaa !19
  %arrayidx.i111 = getelementptr inbounds i8* %162, i64 %add21.i110
  store i8 0, i8* %arrayidx.i111, align 1, !tbaa !22
  br label %while.body.i118

while.body.i118:                                  ; preds = %while.body.i118, %while.body.lr.ph.i112
  %n.addr.058.i113 = phi i64 [ %sub501, %while.body.lr.ph.i112 ], [ %dec.i114, %while.body.i118 ]
  %165 = load i8* %152, align 1, !tbaa !22
  %dec.i114 = add nsw i64 %n.addr.058.i113, -1
  %add.ptr.sum55.i115 = add i64 %dec.i114, %164
  %arrayidx24.i116 = getelementptr inbounds i8* %162, i64 %add.ptr.sum55.i115
  store i8 %165, i8* %arrayidx24.i116, align 1, !tbaa !22
  %cmp22.i117 = icmp sgt i64 %dec.i114, 0
  br i1 %cmp22.i117, label %while.body.i118, label %sv_x.exit123

while.body28.i122:                                ; preds = %cond.end.i107, %while.body28.i122
  %n.addr.160.i119 = phi i64 [ %dec29.i120, %while.body28.i122 ], [ %sub501, %cond.end.i107 ]
  call void @Perl_sv_catpvn_flags(%struct.sv* %call.i91, i8* %152, i64 %154, i64 2) #2
  %dec29.i120 = add nsw i64 %n.addr.160.i119, -1
  %cmp27.i121 = icmp sgt i64 %dec29.i120, 0
  br i1 %cmp27.i121, label %while.body28.i122, label %sv_x.exit123

sv_x.exit123:                                     ; preds = %while.body28.i122, %while.body.i118, %if.then495
  call void @Perl_sv_catsv_flags(%struct.sv* %retval1, %struct.sv* %call467, i64 2) #2
  call void @Perl_sv_catsv_flags(%struct.sv* %retval1, %struct.sv* %call.i91, i64 2) #2
  call void @Perl_sv_free(%struct.sv* %call.i91) #2
  br label %if.end503

if.end503:                                        ; preds = %if.end463, %sv_x.exit123, %for.end
  %166 = load i8* %name, align 1, !tbaa !22
  %cmp506 = icmp eq i8 %166, 64
  br i1 %cmp506, label %if.then508, label %if.else509

if.then508:                                       ; preds = %if.end503
  call void @Perl_sv_catpvn_flags(%struct.sv* %retval1, i8* getelementptr inbounds ([2 x i8]* @.str58, i64 0, i64 0), i64 1, i64 2) #2
  br label %if.end510

if.else509:                                       ; preds = %if.end503
  call void @Perl_sv_catpvn_flags(%struct.sv* %retval1, i8* getelementptr inbounds ([2 x i8]* @.str59, i64 0, i64 0), i64 1, i64 2) #2
  br label %if.end510

if.end510:                                        ; preds = %if.else509, %if.then508
  call void @Perl_sv_free(%struct.sv* %call379) #2
  call void @Perl_sv_free(%struct.sv* %call467) #2
  call void @Perl_safesysfree(i8* %call381) #2
  br label %if.end887

if.then514:                                       ; preds = %if.else358
  %call527 = call %struct.sv* @Perl_newSVpvn(i8* %name, i64 %namelen) #2
  %167 = load i8* %name, align 1, !tbaa !22
  %cmp530 = icmp eq i8 %167, 37
  br i1 %cmp530, label %if.then532, label %if.else536

if.then532:                                       ; preds = %if.then514
  call void @Perl_sv_catpvn_flags(%struct.sv* %retval1, i8* getelementptr inbounds ([2 x i8]* @.str51, i64 0, i64 0), i64 1, i64 2) #2
  %sv_any533 = getelementptr inbounds %struct.sv* %call527, i64 0, i32 0
  %168 = load i8** %sv_any533, align 8, !tbaa !12
  %xpv_pv534 = bitcast i8* %168 to i8**
  %169 = load i8** %xpv_pv534, align 8, !tbaa !21
  store i8 36, i8* %169, align 1, !tbaa !22
  br label %if.end571thread-pre-split

if.else536:                                       ; preds = %if.then514
  call void @Perl_sv_catpvn_flags(%struct.sv* %retval1, i8* getelementptr inbounds ([2 x i8]* @.str37, i64 0, i64 0), i64 1, i64 2) #2
  br i1 %tobool132, label %if.end571thread-pre-split, label %land.lhs.true539

land.lhs.true539:                                 ; preds = %if.else536
  %sub540 = add i64 %namelen, -1
  %arrayidx541 = getelementptr inbounds i8* %name, i64 %sub540
  %170 = load i8* %arrayidx541, align 1, !tbaa !22
  switch i8 %170, label %if.then569 [
    i8 93, label %lor.lhs.false551
    i8 125, label %lor.lhs.false551
  ]

lor.lhs.false551:                                 ; preds = %land.lhs.true539, %land.lhs.true539
  %cmp552 = icmp ugt i64 %namelen, 4
  br i1 %cmp552, label %land.lhs.true554, label %if.end571thread-pre-split

land.lhs.true554:                                 ; preds = %lor.lhs.false551
  %arrayidx555 = getelementptr inbounds i8* %name, i64 1
  %171 = load i8* %arrayidx555, align 1, !tbaa !22
  %cmp557 = icmp eq i8 %171, 123
  br i1 %cmp557, label %if.then569, label %lor.lhs.false559

lor.lhs.false559:                                 ; preds = %land.lhs.true554
  %172 = load i8* %name, align 1, !tbaa !22
  %cmp562 = icmp eq i8 %172, 92
  br i1 %cmp562, label %land.lhs.true564, label %if.end571

land.lhs.true564:                                 ; preds = %lor.lhs.false559
  %arrayidx565 = getelementptr inbounds i8* %name, i64 2
  %173 = load i8* %arrayidx565, align 1, !tbaa !22
  %cmp567 = icmp eq i8 %173, 123
  br i1 %cmp567, label %if.then569, label %if.end571thread-pre-split

if.then569:                                       ; preds = %land.lhs.true539, %land.lhs.true564, %land.lhs.true554
  call void @Perl_sv_catpvn_flags(%struct.sv* %call527, i8* getelementptr inbounds ([3 x i8]* @.str60, i64 0, i64 0), i64 2, i64 2) #2
  br label %if.end571thread-pre-split

if.end571thread-pre-split:                        ; preds = %if.else536, %if.then532, %if.then569, %land.lhs.true564, %lor.lhs.false551
  %.pr232 = load i8* %name, align 1, !tbaa !22
  br label %if.end571

if.end571:                                        ; preds = %if.end571thread-pre-split, %lor.lhs.false559
  %174 = phi i8 [ %.pr232, %if.end571thread-pre-split ], [ %172, %lor.lhs.false559 ]
  %cmp574 = icmp eq i8 %174, 42
  br i1 %cmp574, label %land.lhs.true576, label %if.end601

land.lhs.true576:                                 ; preds = %if.end571
  %sub577 = add i64 %namelen, -1
  %arrayidx578 = getelementptr inbounds i8* %name, i64 %sub577
  %175 = load i8* %arrayidx578, align 1, !tbaa !22
  %cmp580 = icmp eq i8 %175, 125
  %cmp583 = icmp ugt i64 %namelen, 7
  %or.cond1273 = and i1 %cmp580, %cmp583
  br i1 %or.cond1273, label %land.lhs.true585, label %if.end601

land.lhs.true585:                                 ; preds = %land.lhs.true576
  %add.ptr586.sum = add i64 %namelen, -8
  %add.ptr587 = getelementptr inbounds i8* %name, i64 %add.ptr586.sum
  %call588 = call i8* @Perl_instr(i8* %add.ptr587, i8* getelementptr inbounds ([9 x i8]* @.str53, i64 0, i64 0)) #2
  %tobool589 = icmp eq i8* %call588, null
  br i1 %tobool589, label %lor.lhs.false590, label %if.then600

lor.lhs.false590:                                 ; preds = %land.lhs.true585
  %add.ptr586.sum8 = add i64 %namelen, -7
  %add.ptr592 = getelementptr inbounds i8* %name, i64 %add.ptr586.sum8
  %call593 = call i8* @Perl_instr(i8* %add.ptr592, i8* getelementptr inbounds ([8 x i8]* @.str54, i64 0, i64 0)) #2
  %tobool594 = icmp eq i8* %call593, null
  br i1 %tobool594, label %lor.lhs.false595, label %if.then600

lor.lhs.false595:                                 ; preds = %lor.lhs.false590
  %add.ptr586.sum9 = add i64 %namelen, -6
  %add.ptr597 = getelementptr inbounds i8* %name, i64 %add.ptr586.sum9
  %call598 = call i8* @Perl_instr(i8* %add.ptr597, i8* getelementptr inbounds ([7 x i8]* @.str55, i64 0, i64 0)) #2
  %tobool599 = icmp eq i8* %call598, null
  br i1 %tobool599, label %if.end601, label %if.then600

if.then600:                                       ; preds = %lor.lhs.false595, %lor.lhs.false590, %land.lhs.true585
  call void @Perl_sv_catpvn_flags(%struct.sv* %call527, i8* getelementptr inbounds ([3 x i8]* @.str60, i64 0, i64 0), i64 2, i64 2) #2
  br label %if.end601

if.end601:                                        ; preds = %lor.lhs.false595, %if.then600, %land.lhs.true576, %if.end571
  call void @Perl_sv_catpvn_flags(%struct.sv* %call527, i8* getelementptr inbounds ([2 x i8]* @.str37, i64 0, i64 0), i64 1, i64 2) #2
  %call602 = call %struct.sv* @Perl_newSVsv(%struct.sv* %sep) #2
  call void @Perl_sv_catsv_flags(%struct.sv* %call602, %struct.sv* %pad, i64 2) #2
  call void @Perl_sv_catsv_flags(%struct.sv* %call602, %struct.sv* %apad.addr.0, i64 2) #2
  %tobool603 = icmp ne %struct.sv* %sortkeys, null
  br i1 %tobool603, label %if.then604, label %if.else693

if.then604:                                       ; preds = %if.end601
  %cmp605 = icmp eq %struct.sv* %sortkeys, @PL_sv_yes
  br i1 %cmp605, label %if.then607, label %if.then629

if.then607:                                       ; preds = %if.then604
  %call608 = call %struct.av* @Perl_newAV() #2
  %176 = bitcast %struct.sv* %49 to %struct.hv*
  %call609 = call i64 @Perl_hv_iterinit(%struct.hv* %176) #2
  %call611270 = call %struct.he* @Perl_hv_iternext(%struct.hv* %176) #2
  %tobool612271 = icmp eq %struct.he* %call611270, null
  br i1 %tobool612271, label %if.end626, label %while.body613

while.body613:                                    ; preds = %if.then607, %land.end620
  %call611272 = phi %struct.he* [ %call611, %land.end620 ], [ %call611270, %if.then607 ]
  %call614 = call %struct.sv* @Perl_hv_iterkeysv(%struct.he* %call611272) #2
  store %struct.sv* %call614, %struct.sv** @PL_Sv, align 8, !tbaa !1
  %tobool615 = icmp eq %struct.sv* %call614, null
  br i1 %tobool615, label %land.end620, label %land.rhs616

land.rhs616:                                      ; preds = %while.body613
  %sv_refcnt617 = getelementptr inbounds %struct.sv* %call614, i64 0, i32 1
  %177 = load i64* %sv_refcnt617, align 8, !tbaa !42
  %inc618 = add i64 %177, 1
  store i64 %inc618, i64* %sv_refcnt617, align 8, !tbaa !42
  br label %land.end620

land.end620:                                      ; preds = %while.body613, %land.rhs616
  call void @Perl_av_push(%struct.av* %call608, %struct.sv* %call614) #2
  %call611 = call %struct.he* @Perl_hv_iternext(%struct.hv* %176) #2
  %tobool612 = icmp eq %struct.he* %call611, null
  br i1 %tobool612, label %if.end626, label %while.body613

if.end626:                                        ; preds = %land.end620, %if.then607
  %sv_any623 = getelementptr inbounds %struct.av* %call608, i64 0, i32 0
  %178 = load %struct.xpvav** %sv_any623, align 8, !tbaa !45
  %xav_array = getelementptr inbounds %struct.xpvav* %178, i64 0, i32 0
  %179 = load i8** %xav_array, align 8, !tbaa !47
  %180 = bitcast i8* %179 to %struct.sv**
  %call624 = call i64 @Perl_av_len(%struct.av* %call608) #2
  %add625 = add nsw i64 %call624, 1
  call void @Perl_sortsv(%struct.sv** %180, i64 %add625, i64 (%struct.sv*, %struct.sv*)* @Perl_sv_cmp) #2
  br label %if.end688

if.then629:                                       ; preds = %if.then604
  %181 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !1
  call void @Perl_push_scope() #2
  call void @Perl_save_int(i32* bitcast (i64* @PL_tmps_floor to i32*)) #2
  %182 = load i64* @PL_tmps_ix, align 8, !tbaa !5
  store i64 %182, i64* @PL_tmps_floor, align 8, !tbaa !5
  %183 = load i64** @PL_markstack_ptr, align 8, !tbaa !1
  %incdec.ptr632 = getelementptr inbounds i64* %183, i64 1
  store i64* %incdec.ptr632, i64** @PL_markstack_ptr, align 8, !tbaa !1
  %184 = load i64** @PL_markstack_max, align 8, !tbaa !1
  %cmp633 = icmp eq i64* %incdec.ptr632, %184
  br i1 %cmp633, label %if.then635, label %if.end636

if.then635:                                       ; preds = %if.then629
  call void @Perl_markstack_grow() #2
  %.pre294 = load i64** @PL_markstack_ptr, align 8, !tbaa !1
  br label %if.end636

if.end636:                                        ; preds = %if.then635, %if.then629
  %185 = phi i64* [ %.pre294, %if.then635 ], [ %incdec.ptr632, %if.then629 ]
  %186 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !1
  %sub.ptr.lhs.cast638 = ptrtoint %struct.sv** %181 to i64
  %sub.ptr.rhs.cast639 = ptrtoint %struct.sv** %186 to i64
  %sub.ptr.sub640 = sub i64 %sub.ptr.lhs.cast638, %sub.ptr.rhs.cast639
  %sub.ptr.div641 = ashr exact i64 %sub.ptr.sub640, 3
  store i64 %sub.ptr.div641, i64* %185, align 8, !tbaa !5
  %187 = load %struct.sv*** @PL_stack_max, align 8, !tbaa !1
  %sub.ptr.lhs.cast642 = ptrtoint %struct.sv** %187 to i64
  %sub.ptr.sub644 = sub i64 %sub.ptr.lhs.cast642, %sub.ptr.lhs.cast638
  %cmp646 = icmp slt i64 %sub.ptr.sub644, 8
  br i1 %cmp646, label %if.then648, label %if.end650

if.then648:                                       ; preds = %if.end636
  %call649 = call %struct.sv** @Perl_stack_grow(%struct.sv** %181, %struct.sv** %181, i32 1) #2
  br label %if.end650

if.end650:                                        ; preds = %if.then648, %if.end636
  %sp631.0 = phi %struct.sv** [ %call649, %if.then648 ], [ %181, %if.end636 ]
  %call652 = call %struct.sv* @Perl_newRV(%struct.sv* %49) #2
  %call653 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call652) #2
  %incdec.ptr654 = getelementptr inbounds %struct.sv** %sp631.0, i64 1
  store %struct.sv* %call653, %struct.sv** %incdec.ptr654, align 8, !tbaa !1
  store %struct.sv** %incdec.ptr654, %struct.sv*** @PL_stack_sp, align 8, !tbaa !1
  %call655 = call i64 @Perl_call_sv(%struct.sv* %sortkeys, i64 4) #2
  %188 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !1
  %tobool656 = icmp eq i64 %call655, 0
  br i1 %tobool656, label %if.then682, label %if.then657

if.then657:                                       ; preds = %if.end650
  %incdec.ptr658 = getelementptr inbounds %struct.sv** %188, i64 -1
  %189 = load %struct.sv** %188, align 8, !tbaa !1
  %sv_flags659 = getelementptr inbounds %struct.sv* %189, i64 0, i32 2
  %190 = load i64* %sv_flags659, align 8, !tbaa !10
  %and660 = and i64 %190, 524288
  %tobool661 = icmp eq i64 %and660, 0
  br i1 %tobool661, label %if.then682, label %land.lhs.true662

land.lhs.true662:                                 ; preds = %if.then657
  %sv_any663 = getelementptr inbounds %struct.sv* %189, i64 0, i32 0
  %191 = load i8** %sv_any663, align 8, !tbaa !12
  %xrv_rv664 = bitcast i8* %191 to %struct.sv**
  %192 = load %struct.sv** %xrv_rv664, align 8, !tbaa !13
  %sv_flags665 = getelementptr inbounds %struct.sv* %192, i64 0, i32 2
  %193 = load i64* %sv_flags665, align 8, !tbaa !10
  %and666 = and i64 %193, 255
  %cmp667 = icmp eq i64 %and666, 10
  br i1 %cmp667, label %if.then669, label %if.then682

if.then669:                                       ; preds = %land.lhs.true662
  store %struct.sv* %192, %struct.sv** @PL_Sv, align 8, !tbaa !1
  %tobool672 = icmp eq %struct.sv* %192, null
  br i1 %tobool672, label %if.end680, label %land.rhs673

land.rhs673:                                      ; preds = %if.then669
  %sv_refcnt674 = getelementptr inbounds %struct.sv* %192, i64 0, i32 1
  %194 = load i64* %sv_refcnt674, align 8, !tbaa !42
  %inc675 = add i64 %194, 1
  store i64 %inc675, i64* %sv_refcnt674, align 8, !tbaa !42
  br label %if.end680

if.end680:                                        ; preds = %land.rhs673, %if.then669
  %195 = bitcast %struct.sv* %192 to %struct.av*
  %tobool681 = icmp eq %struct.sv* %192, null
  br i1 %tobool681, label %if.then682, label %if.end683

if.then682:                                       ; preds = %if.end650, %if.then657, %land.lhs.true662, %if.end680
  %sp631.1302 = phi %struct.sv** [ %incdec.ptr658, %if.end680 ], [ %incdec.ptr658, %land.lhs.true662 ], [ %incdec.ptr658, %if.then657 ], [ %188, %if.end650 ]
  call void (i8*, ...)* @Perl_warn(i8* getelementptr inbounds ([45 x i8]* @.str61, i64 0, i64 0)) #2
  br label %if.end683

if.end683:                                        ; preds = %if.end680, %if.then682
  %sp631.1301 = phi %struct.sv** [ %incdec.ptr658, %if.end680 ], [ %sp631.1302, %if.then682 ]
  %keys.1299 = phi %struct.av* [ %195, %if.end680 ], [ null, %if.then682 ]
  store %struct.sv** %sp631.1301, %struct.sv*** @PL_stack_sp, align 8, !tbaa !1
  %196 = load i64* @PL_tmps_ix, align 8, !tbaa !5
  %197 = load i64* @PL_tmps_floor, align 8, !tbaa !5
  %cmp684 = icmp sgt i64 %196, %197
  br i1 %cmp684, label %if.then686, label %if.end687

if.then686:                                       ; preds = %if.end683
  call void @Perl_free_tmps() #2
  br label %if.end687

if.end687:                                        ; preds = %if.then686, %if.end683
  call void @Perl_pop_scope() #2
  br label %if.end688

if.end688:                                        ; preds = %if.end626, %if.end687
  %keys.2 = phi %struct.av* [ %keys.1299, %if.end687 ], [ %call608, %if.end626 ]
  %tobool689 = icmp eq %struct.av* %keys.2, null
  br i1 %tobool689, label %if.end695, label %if.then690

if.then690:                                       ; preds = %if.end688
  %198 = bitcast %struct.av* %keys.2 to %struct.sv*
  %call691 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %198) #2
  br label %if.end695

if.else693:                                       ; preds = %if.end601
  %199 = bitcast %struct.sv* %49 to %struct.hv*
  %call694 = call i64 @Perl_hv_iterinit(%struct.hv* %199) #2
  br label %if.end695

if.end695:                                        ; preds = %if.end688, %if.then690, %if.else693
  %keys.3 = phi %struct.av* [ %keys.2, %if.then690 ], [ null, %if.end688 ], [ null, %if.else693 ]
  %tobool707 = icmp eq %struct.av* %keys.3, null
  %200 = bitcast %struct.sv* %49 to %struct.hv*
  %tobool786 = icmp eq i64 %quotekeys, 0
  %sv_any794 = getelementptr inbounds %struct.sv* %retval1, i64 0, i32 0
  %cmp824 = icmp sgt i64 %indent, 1
  br label %for.body697

for.body697:                                      ; preds = %if.end695, %for.inc854
  %i.0 = phi i64 [ 0, %if.end695 ], [ %inc855, %for.inc854 ]
  br i1 %tobool603, label %land.lhs.true706, label %lor.lhs.false712

land.lhs.true706:                                 ; preds = %for.body697
  br i1 %tobool707, label %for.end856, label %land.lhs.true708

land.lhs.true708:                                 ; preds = %land.lhs.true706
  %call709 = call i64 @Perl_av_len(%struct.av* %keys.3) #2
  %cmp710 = icmp sgt i64 %i.0, %call709
  br i1 %cmp710, label %for.end856, label %lor.lhs.false712

lor.lhs.false712:                                 ; preds = %land.lhs.true708, %for.body697
  %call713 = call %struct.he* @Perl_hv_iternext(%struct.hv* %200) #2
  %tobool714 = icmp eq %struct.he* %call713, null
  br i1 %tobool714, label %for.end856, label %if.end716

if.end716:                                        ; preds = %lor.lhs.false712
  %tobool717 = icmp eq i64 %i.0, 0
  br i1 %tobool717, label %if.end719, label %if.then718

if.then718:                                       ; preds = %if.end716
  call void @Perl_sv_catpvn_flags(%struct.sv* %retval1, i8* getelementptr inbounds ([2 x i8]* @.str57, i64 0, i64 0), i64 1, i64 2) #2
  br label %if.end719

if.end719:                                        ; preds = %if.end716, %if.then718
  br i1 %tobool603, label %if.then721, label %if.else759

if.then721:                                       ; preds = %if.end719
  %call724 = call %struct.sv** @Perl_av_fetch(%struct.av* %keys.3, i64 %i.0, i64 0) #2
  %tobool725 = icmp eq %struct.sv** %call724, null
  br i1 %tobool725, label %cond.false727, label %cond.true726

cond.true726:                                     ; preds = %if.then721
  %201 = load %struct.sv** %call724, align 8, !tbaa !1
  br label %cond.end729

cond.false727:                                    ; preds = %if.then721
  %call728 = call %struct.sv* @Perl_sv_mortalcopy(%struct.sv* @PL_sv_undef) #2
  br label %cond.end729

cond.end729:                                      ; preds = %cond.false727, %cond.true726
  %cond730 = phi %struct.sv* [ %201, %cond.true726 ], [ %call728, %cond.false727 ]
  %sv_flags731 = getelementptr inbounds %struct.sv* %cond730, i64 0, i32 2
  %202 = load i64* %sv_flags731, align 8, !tbaa !10
  %and732 = and i64 %202, 262144
  %cmp733 = icmp eq i64 %and732, 0
  br i1 %cmp733, label %cond.false740, label %cond.true735

cond.true735:                                     ; preds = %cond.end729
  %sv_any736 = getelementptr inbounds %struct.sv* %cond730, i64 0, i32 0
  %203 = load i8** %sv_any736, align 8, !tbaa !12
  %xpv_cur737 = getelementptr inbounds i8* %203, i64 8
  %204 = bitcast i8* %xpv_cur737 to i64*
  %205 = load i64* %204, align 8, !tbaa !19
  store i64 %205, i64* %keylen, align 8, !tbaa !5
  %xpv_pv739 = bitcast i8* %203 to i8**
  %206 = load i8** %xpv_pv739, align 8, !tbaa !21
  br label %cond.end742

cond.false740:                                    ; preds = %cond.end729
  %call741 = call i8* @Perl_sv_2pv_flags(%struct.sv* %cond730, i64* %keylen, i64 2) #2
  %.pre295 = load i64* %keylen, align 8, !tbaa !5
  br label %cond.end742

cond.end742:                                      ; preds = %cond.false740, %cond.true735
  %207 = phi i64 [ %205, %cond.true735 ], [ %.pre295, %cond.false740 ]
  %cond743 = phi i8* [ %206, %cond.true735 ], [ %call741, %cond.false740 ]
  %208 = load i64* %sv_flags731, align 8, !tbaa !10
  %and745 = and i64 %208, 536870912
  %tobool746 = icmp ne i64 %and745, 0
  %sub748 = sub nsw i64 0, %207
  %cond751 = select i1 %tobool746, i64 %sub748, i64 %207
  %call752 = call %struct.sv** @Perl_hv_fetch(%struct.hv* %200, i8* %cond743, i64 %cond751, i64 0) #2
  %tobool753 = icmp eq %struct.sv** %call752, null
  br i1 %tobool753, label %cond.false755, label %cond.true754

cond.true754:                                     ; preds = %cond.end742
  %209 = load %struct.sv** %call752, align 8, !tbaa !1
  br label %if.end762

cond.false755:                                    ; preds = %cond.end742
  %call756 = call %struct.sv* @Perl_sv_mortalcopy(%struct.sv* @PL_sv_undef) #2
  br label %if.end762

if.else759:                                       ; preds = %if.end719
  %call760 = call %struct.sv* @Perl_hv_iterkeysv(%struct.he* %call713) #2
  %call761 = call %struct.sv* @Perl_hv_iterval(%struct.hv* %200, %struct.he* %call713) #2
  br label %if.end762

if.end762:                                        ; preds = %cond.true754, %cond.false755, %if.else759
  %hval.0 = phi %struct.sv* [ %call761, %if.else759 ], [ %209, %cond.true754 ], [ %call756, %cond.false755 ]
  %keysv.0 = phi %struct.sv* [ %call760, %if.else759 ], [ %cond730, %cond.true754 ], [ %cond730, %cond.false755 ]
  %sv_flags763 = getelementptr inbounds %struct.sv* %keysv.0, i64 0, i32 2
  %210 = load i64* %sv_flags763, align 8, !tbaa !10
  %and764 = and i64 %210, 536870912
  %tobool765 = icmp eq i64 %and764, 0
  br i1 %tobool765, label %land.end770, label %land.rhs766

land.rhs766:                                      ; preds = %if.end762
  %211 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !1
  %op_private = getelementptr inbounds %struct.cop* %211, i64 0, i32 7
  %212 = load i8* %op_private, align 1, !tbaa !49
  %and768 = and i8 %212, 8
  %lnot = icmp eq i8 %and768, 0
  %.pre296 = load i64* %sv_flags763, align 8, !tbaa !10
  br label %land.end770

land.end770:                                      ; preds = %if.end762, %land.rhs766
  %213 = phi i64 [ %210, %if.end762 ], [ %.pre296, %land.rhs766 ]
  %214 = phi i1 [ false, %if.end762 ], [ %lnot, %land.rhs766 ]
  %and774 = and i64 %213, 262144
  %cmp775 = icmp eq i64 %and774, 0
  br i1 %cmp775, label %cond.false782, label %cond.true777

cond.true777:                                     ; preds = %land.end770
  %sv_any778 = getelementptr inbounds %struct.sv* %keysv.0, i64 0, i32 0
  %215 = load i8** %sv_any778, align 8, !tbaa !12
  %xpv_cur779 = getelementptr inbounds i8* %215, i64 8
  %216 = bitcast i8* %xpv_cur779 to i64*
  %217 = load i64* %216, align 8, !tbaa !19
  store i64 %217, i64* %keylen, align 8, !tbaa !5
  %xpv_pv781 = bitcast i8* %215 to i8**
  %218 = load i8** %xpv_pv781, align 8, !tbaa !21
  br label %cond.end784

cond.false782:                                    ; preds = %land.end770
  %call783 = call i8* @Perl_sv_2pv_flags(%struct.sv* %keysv.0, i64* %keylen, i64 2) #2
  %.pr238 = load i64* %keylen, align 8, !tbaa !5
  br label %cond.end784

cond.end784:                                      ; preds = %cond.false782, %cond.true777
  %219 = phi i64 [ %.pr238, %cond.false782 ], [ %217, %cond.true777 ]
  %cond785 = phi i8* [ %call783, %cond.false782 ], [ %218, %cond.true777 ]
  call void @Perl_sv_catsv_flags(%struct.sv* %retval1, %struct.sv* %call602, i64 2) #2
  call void @Perl_sv_catsv_flags(%struct.sv* %retval1, %struct.sv* %call.i14, i64 2) #2
  br i1 %tobool786, label %lor.lhs.false787, label %if.then790

lor.lhs.false787:                                 ; preds = %cond.end784
  %.pre.i124 = load i8* %cond785, align 1, !tbaa !22
  br label %TOP.i

TOP.i:                                            ; preds = %lor.lhs.false53.i, %lor.lhs.false787
  %220 = phi i8 [ %.pre.i124, %lor.lhs.false787 ], [ 58, %lor.lhs.false53.i ]
  %s.addr.0.i = phi i8* [ %cond785, %lor.lhs.false787 ], [ %incdec.ptr2898.i, %lor.lhs.false53.i ]
  %cmp.i125 = icmp eq i8 %220, 58
  br i1 %cmp.i125, label %if.then.i127, label %if.end9.i

if.then.i127:                                     ; preds = %TOP.i
  %incdec.ptr.i126 = getelementptr inbounds i8* %s.addr.0.i, i64 1
  %221 = load i8* %incdec.ptr.i126, align 1, !tbaa !22
  %tobool.i = icmp eq i8 %221, 0
  br i1 %tobool.i, label %if.then790, label %if.then2.i129

if.then2.i129:                                    ; preds = %if.then.i127
  %incdec.ptr3.i = getelementptr inbounds i8* %s.addr.0.i, i64 2
  %cmp5.i128 = icmp eq i8 %221, 58
  br i1 %cmp5.i128, label %if.then2.if.end9_crit_edge.i, label %if.then790

if.then2.if.end9_crit_edge.i:                     ; preds = %if.then2.i129
  %.pre103.i = load i8* %incdec.ptr3.i, align 1, !tbaa !22
  br label %if.end9.i

if.end9.i:                                        ; preds = %if.then2.if.end9_crit_edge.i, %TOP.i
  %222 = phi i8 [ %.pre103.i, %if.then2.if.end9_crit_edge.i ], [ %220, %TOP.i ]
  %s.addr.1.i = phi i8* [ %incdec.ptr3.i, %if.then2.if.end9_crit_edge.i ], [ %s.addr.0.i, %TOP.i ]
  %.off.i = add i8 %222, -65
  %223 = icmp ult i8 %.off.i, 26
  br i1 %223, label %while.cond.preheader.i, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %if.end9.i
  %.off87.i = add i8 %222, -97
  %224 = icmp ult i8 %.off87.i, 26
  %cmp25.i = icmp eq i8 %222, 95
  %or.cond86.i = or i1 %224, %cmp25.i
  br i1 %or.cond86.i, label %while.cond.preheader.i, label %if.then790

while.cond.preheader.i:                           ; preds = %lor.lhs.false.i, %if.end9.i
  %incdec.ptr2896.i = getelementptr inbounds i8* %s.addr.1.i, i64 1
  %225 = load i8* %incdec.ptr2896.i, align 1, !tbaa !22
  %tobool2997.i = icmp eq i8 %225, 0
  br i1 %tobool2997.i, label %if.else821, label %while.body.i130

while.body.i130:                                  ; preds = %while.cond.preheader.i, %while.cond.backedge.i
  %226 = phi i8 [ %230, %while.cond.backedge.i ], [ %225, %while.cond.preheader.i ]
  %incdec.ptr2898.i = phi i8* [ %incdec.ptr28.i, %while.cond.backedge.i ], [ %incdec.ptr2896.i, %while.cond.preheader.i ]
  %.off88.i = add i8 %226, -65
  %227 = icmp ult i8 %.off88.i, 26
  %.off89.i = add i8 %226, -97
  %228 = icmp ult i8 %.off89.i, 26
  %or.cond.i = or i1 %227, %228
  %.off90.i = add i8 %226, -48
  %229 = icmp ult i8 %.off90.i, 10
  %or.cond93.i = or i1 %or.cond.i, %229
  br i1 %or.cond93.i, label %while.cond.backedge.i, label %lor.lhs.false53.i

while.cond.backedge.i:                            ; preds = %lor.lhs.false53.i, %while.body.i130
  %incdec.ptr28.i = getelementptr inbounds i8* %incdec.ptr2898.i, i64 1
  %230 = load i8* %incdec.ptr28.i, align 1, !tbaa !22
  %tobool29.i = icmp eq i8 %230, 0
  br i1 %tobool29.i, label %if.else821, label %while.body.i130

lor.lhs.false53.i:                                ; preds = %while.body.i130
  switch i8 %226, label %if.then790 [
    i8 95, label %while.cond.backedge.i
    i8 58, label %TOP.i
  ]

if.then790:                                       ; preds = %lor.lhs.false.i, %if.then.i127, %if.then2.i129, %lor.lhs.false53.i, %cond.end784
  br i1 %214, label %if.then792, label %if.else800

if.then792:                                       ; preds = %if.then790
  %231 = load i8** %sv_any794, align 8, !tbaa !12
  %xpv_cur795 = getelementptr inbounds i8* %231, i64 8
  %232 = bitcast i8* %xpv_cur795 to i64*
  %233 = load i64* %232, align 8, !tbaa !19
  %call796 = call fastcc i64 @esc_q_utf8(%struct.sv* %retval1, i8* %cond785, i64 %219)
  %234 = load i8** %sv_any794, align 8, !tbaa !12
  %xpv_pv798 = bitcast i8* %234 to i8**
  %235 = load i8** %xpv_pv798, align 8, !tbaa !21
  %add.ptr799 = getelementptr inbounds i8* %235, i64 %233
  br label %if.end822

if.else800:                                       ; preds = %if.then790
  %cmp10.i131 = icmp eq i64 %219, 0
  br i1 %cmp10.i131, label %num_q.exit, label %while.body.i132

while.body.i132:                                  ; preds = %if.else800, %if.end.i139
  %ret.013.i = phi i64 [ %ret.1.i135, %if.end.i139 ], [ 0, %if.else800 ]
  %slen.addr.012.i = phi i64 [ %dec.i137, %if.end.i139 ], [ %219, %if.else800 ]
  %s.addr.011.i = phi i8* [ %incdec.ptr.i136, %if.end.i139 ], [ %cond785, %if.else800 ]
  %236 = load i8* %s.addr.011.i, align 1, !tbaa !22
  switch i8 %236, label %if.end.i139 [
    i8 39, label %if.then.i134
    i8 92, label %if.then.i134
  ]

if.then.i134:                                     ; preds = %while.body.i132, %while.body.i132
  %inc.i133 = add nsw i64 %ret.013.i, 1
  br label %if.end.i139

if.end.i139:                                      ; preds = %if.then.i134, %while.body.i132
  %ret.1.i135 = phi i64 [ %inc.i133, %if.then.i134 ], [ %ret.013.i, %while.body.i132 ]
  %incdec.ptr.i136 = getelementptr inbounds i8* %s.addr.011.i, i64 1
  %dec.i137 = add i64 %slen.addr.012.i, -1
  %cmp.i138 = icmp eq i64 %dec.i137, 0
  br i1 %cmp.i138, label %num_q.exit, label %while.body.i132

num_q.exit:                                       ; preds = %if.end.i139, %if.else800
  %ret.0.lcssa.i140 = phi i64 [ 0, %if.else800 ], [ %ret.1.i135, %if.end.i139 ]
  %add802 = add i64 %219, 3
  %add803 = add i64 %add802, %ret.0.lcssa.i140
  %call805 = call i8* @Perl_safesysmalloc(i64 %add803) #2
  store i8 39, i8* %call805, align 1, !tbaa !22
  %tobool807 = icmp eq i64 %ret.0.lcssa.i140, 0
  %add.ptr809 = getelementptr inbounds i8* %call805, i64 1
  br i1 %tobool807, label %if.else812, label %if.then808

if.then808:                                       ; preds = %num_q.exit
  br i1 %cmp10.i131, label %esc_q.exit160, label %while.body.i147

while.body.i147:                                  ; preds = %if.then808, %sw.default.i158
  %ret.014.i142 = phi i64 [ %ret.1.i153, %sw.default.i158 ], [ 0, %if.then808 ]
  %slen.addr.013.i143 = phi i64 [ %dec.i156, %sw.default.i158 ], [ %219, %if.then808 ]
  %s.addr.012.i144 = phi i8* [ %incdec.ptr2.i155, %sw.default.i158 ], [ %cond785, %if.then808 ]
  %d.addr.011.i145 = phi i8* [ %incdec.ptr1.i154, %sw.default.i158 ], [ %add.ptr809, %if.then808 ]
  %237 = load i8* %s.addr.012.i144, align 1, !tbaa !22
  %conv.i146 = sext i8 %237 to i32
  switch i32 %conv.i146, label %sw.default.i158 [
    i32 39, label %sw.bb.i151
    i32 92, label %sw.bb.i151
  ]

sw.bb.i151:                                       ; preds = %while.body.i147, %while.body.i147
  store i8 92, i8* %d.addr.011.i145, align 1, !tbaa !22
  %incdec.ptr.i148 = getelementptr inbounds i8* %d.addr.011.i145, i64 1
  %inc.i149 = add nsw i64 %ret.014.i142, 1
  %.pre.i150 = load i8* %s.addr.012.i144, align 1, !tbaa !22
  br label %sw.default.i158

sw.default.i158:                                  ; preds = %sw.bb.i151, %while.body.i147
  %238 = phi i8 [ %237, %while.body.i147 ], [ %.pre.i150, %sw.bb.i151 ]
  %d.addr.1.i152 = phi i8* [ %d.addr.011.i145, %while.body.i147 ], [ %incdec.ptr.i148, %sw.bb.i151 ]
  %ret.1.i153 = phi i64 [ %ret.014.i142, %while.body.i147 ], [ %inc.i149, %sw.bb.i151 ]
  store i8 %238, i8* %d.addr.1.i152, align 1, !tbaa !22
  %incdec.ptr1.i154 = getelementptr inbounds i8* %d.addr.1.i152, i64 1
  %incdec.ptr2.i155 = getelementptr inbounds i8* %s.addr.012.i144, i64 1
  %dec.i156 = add i64 %slen.addr.013.i143, -1
  %cmp.i157 = icmp eq i64 %dec.i156, 0
  br i1 %cmp.i157, label %esc_q.exit160, label %while.body.i147

esc_q.exit160:                                    ; preds = %sw.default.i158, %if.then808
  %ret.0.lcssa.i159 = phi i64 [ 0, %if.then808 ], [ %ret.1.i153, %sw.default.i158 ]
  %add811 = add nsw i64 %ret.0.lcssa.i159, %219
  br label %if.end815

if.else812:                                       ; preds = %num_q.exit
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr809, i8* %cond785, i64 %219, i32 1, i1 false)
  br label %if.end815

if.end815:                                        ; preds = %if.else812, %esc_q.exit160
  %klen.0 = phi i64 [ %add811, %esc_q.exit160 ], [ %219, %if.else812 ]
  %inc816 = add nsw i64 %klen.0, 1
  %arrayidx817 = getelementptr inbounds i8* %call805, i64 %inc816
  store i8 39, i8* %arrayidx817, align 1, !tbaa !22
  %inc818 = add nsw i64 %klen.0, 2
  %arrayidx819 = getelementptr inbounds i8* %call805, i64 %inc818
  store i8 0, i8* %arrayidx819, align 1, !tbaa !22
  call void @Perl_sv_catpvn_flags(%struct.sv* %retval1, i8* %call805, i64 %inc818, i64 2) #2
  br label %if.end822

if.else821:                                       ; preds = %while.cond.preheader.i, %while.cond.backedge.i
  call void @Perl_sv_catpvn_flags(%struct.sv* %retval1, i8* %cond785, i64 %219, i64 2) #2
  br label %if.end822

if.end822:                                        ; preds = %if.then792, %if.end815, %if.else821
  %klen.1 = phi i64 [ %219, %if.then792 ], [ %inc818, %if.end815 ], [ %219, %if.else821 ]
  %nkey.0 = phi i8* [ %add.ptr799, %if.then792 ], [ %call805, %if.end815 ], [ %cond785, %if.else821 ]
  %nkey_buffer.0 = phi i8* [ null, %if.then792 ], [ %call805, %if.end815 ], [ null, %if.else821 ]
  %nlen.0 = phi i64 [ %call796, %if.then792 ], [ %inc818, %if.end815 ], [ %219, %if.else821 ]
  %call823 = call %struct.sv* @Perl_newSVsv(%struct.sv* %call527) #2
  call void @Perl_sv_catpvn_flags(%struct.sv* %call823, i8* %nkey.0, i64 %nlen.0, i64 2) #2
  call void @Perl_sv_catpvn_flags(%struct.sv* %call823, i8* getelementptr inbounds ([2 x i8]* @.str38, i64 0, i64 0), i64 1, i64 2) #2
  call void @Perl_sv_catsv_flags(%struct.sv* %retval1, %struct.sv* %pair, i64 2) #2
  br i1 %cmp824, label %if.then826, label %if.end844

if.then826:                                       ; preds = %if.end822
  %call829 = call %struct.sv* @Perl_newSVsv(%struct.sv* %apad.addr.0) #2
  %add830 = add i64 %klen.1, 4
  %add831 = add nsw i64 %klen.1, 5
  %call833 = call i8* @Perl_safesysmalloc(i64 %add831) #2
  %cmp836267 = icmp sgt i64 %add830, 0
  br i1 %cmp836267, label %while.body838.lr.ph, label %while.end841

while.body838.lr.ph:                              ; preds = %if.then826
  call void @llvm.memset.p0i8.i64(i8* %call833, i8 32, i64 %add830, i32 1, i1 false)
  br label %while.end841

while.end841:                                     ; preds = %while.body838.lr.ph, %if.then826
  %elen.0.lcssa = phi i64 [ %add830, %while.body838.lr.ph ], [ 0, %if.then826 ]
  %arrayidx842 = getelementptr inbounds i8* %call833, i64 %elen.0.lcssa
  store i8 0, i8* %arrayidx842, align 1, !tbaa !22
  call void @Perl_sv_catpvn_flags(%struct.sv* %call829, i8* %call833, i64 %elen.0.lcssa, i64 2) #2
  call void @Perl_safesysfree(i8* %call833) #2
  br label %if.end844

if.end844:                                        ; preds = %if.end822, %while.end841
  %newapad.0 = phi %struct.sv* [ %call829, %while.end841 ], [ %apad.addr.0, %if.end822 ]
  %sv_any845 = getelementptr inbounds %struct.sv* %call823, i64 0, i32 0
  %239 = load i8** %sv_any845, align 8, !tbaa !12
  %xpv_pv846 = bitcast i8* %239 to i8**
  %240 = load i8** %xpv_pv846, align 8, !tbaa !21
  %xpv_cur848 = getelementptr inbounds i8* %239, i64 8
  %241 = bitcast i8* %xpv_cur848 to i64*
  %242 = load i64* %241, align 8, !tbaa !19
  call fastcc void @DD_dump(%struct.sv* %hval.0, i8* %240, i64 %242, %struct.sv* %retval1, %struct.hv* %seenhv, %struct.av* %postav, i64* %levelp, i64 %indent, %struct.sv* %pad, %struct.sv* %xpad, %struct.sv* %newapad.0, %struct.sv* %sep, %struct.sv* %pair, %struct.sv* %freezer, %struct.sv* %toaster, i64 %purity, i64 %deepcopy, i64 %quotekeys, %struct.sv* %bless, i64 %maxdepth, %struct.sv* %sortkeys)
  call void @Perl_sv_free(%struct.sv* %call823) #2
  call void @Perl_safesysfree(i8* %nkey_buffer.0) #2
  br i1 %cmp824, label %if.then852, label %for.inc854

if.then852:                                       ; preds = %if.end844
  call void @Perl_sv_free(%struct.sv* %newapad.0) #2
  br label %for.inc854

for.inc854:                                       ; preds = %if.end844, %if.then852
  %inc855 = add i64 %i.0, 1
  br label %for.body697

for.end856:                                       ; preds = %land.lhs.true708, %land.lhs.true706, %lor.lhs.false712
  %tobool857 = icmp eq i64 %i.0, 0
  br i1 %tobool857, label %if.end867, label %if.then858

if.then858:                                       ; preds = %for.end856
  %243 = load i8** %sv_any333, align 8, !tbaa !12
  %xpv_pv862 = bitcast i8* %243 to i8**
  %244 = load i8** %xpv_pv862, align 8, !tbaa !21
  %xpv_cur864 = getelementptr inbounds i8* %243, i64 8
  %245 = bitcast i8* %xpv_cur864 to i64*
  %246 = load i64* %245, align 8, !tbaa !19
  %247 = load i64* %levelp, align 8, !tbaa !5
  %sub865 = add nsw i64 %247, -1
  %call.i196 = call %struct.sv* @Perl_newSVpvn(i8* getelementptr inbounds ([1 x i8]* @.str3, i64 0, i64 0), i64 0) #2
  %cmp1.i199 = icmp sgt i64 %sub865, 0
  br i1 %cmp1.i199, label %if.then2.i208, label %sv_x.exit228

if.then2.i208:                                    ; preds = %if.then858
  %sv_any.i201 = getelementptr inbounds %struct.sv* %call.i196, i64 0, i32 0
  %248 = load i8** %sv_any.i201, align 8, !tbaa !12
  %xpv_len.i202 = getelementptr inbounds i8* %248, i64 16
  %249 = bitcast i8* %xpv_len.i202 to i64*
  %250 = load i64* %249, align 8, !tbaa !26
  %mul.i203 = mul i64 %sub865, %246
  %xpv_cur.i204 = getelementptr inbounds i8* %248, i64 8
  %251 = bitcast i8* %xpv_cur.i204 to i64*
  %252 = load i64* %251, align 8, !tbaa !19
  %add.i205 = add i64 %mul.i203, 1
  %add4.i206 = add i64 %add.i205, %252
  %cmp5.i207 = icmp ult i64 %250, %add4.i206
  br i1 %cmp5.i207, label %cond.true.i210, label %cond.end.i212

cond.true.i210:                                   ; preds = %if.then2.i208
  %call11.i209 = call i8* @Perl_sv_grow(%struct.sv* %call.i196, i64 %add4.i206) #2
  br label %cond.end.i212

cond.end.i212:                                    ; preds = %cond.true.i210, %if.then2.i208
  %cmp13.i211 = icmp eq i64 %246, 1
  br i1 %cmp13.i211, label %while.body.lr.ph.i217, label %while.body28.i227

while.body.lr.ph.i217:                            ; preds = %cond.end.i212
  %253 = load i8** %sv_any.i201, align 8, !tbaa !12
  %xpv_pv16.i213 = bitcast i8* %253 to i8**
  %254 = load i8** %xpv_pv16.i213, align 8, !tbaa !21
  %xpv_cur18.i214 = getelementptr inbounds i8* %253, i64 8
  %255 = bitcast i8* %xpv_cur18.i214 to i64*
  %256 = load i64* %255, align 8, !tbaa !19
  %add21.i215 = add i64 %256, %sub865
  store i64 %add21.i215, i64* %255, align 8, !tbaa !19
  %arrayidx.i216 = getelementptr inbounds i8* %254, i64 %add21.i215
  store i8 0, i8* %arrayidx.i216, align 1, !tbaa !22
  br label %while.body.i223

while.body.i223:                                  ; preds = %while.body.i223, %while.body.lr.ph.i217
  %n.addr.058.i218 = phi i64 [ %sub865, %while.body.lr.ph.i217 ], [ %dec.i219, %while.body.i223 ]
  %257 = load i8* %244, align 1, !tbaa !22
  %dec.i219 = add nsw i64 %n.addr.058.i218, -1
  %add.ptr.sum55.i220 = add i64 %dec.i219, %256
  %arrayidx24.i221 = getelementptr inbounds i8* %254, i64 %add.ptr.sum55.i220
  store i8 %257, i8* %arrayidx24.i221, align 1, !tbaa !22
  %cmp22.i222 = icmp sgt i64 %dec.i219, 0
  br i1 %cmp22.i222, label %while.body.i223, label %sv_x.exit228

while.body28.i227:                                ; preds = %cond.end.i212, %while.body28.i227
  %n.addr.160.i224 = phi i64 [ %dec29.i225, %while.body28.i227 ], [ %sub865, %cond.end.i212 ]
  call void @Perl_sv_catpvn_flags(%struct.sv* %call.i196, i8* %244, i64 %246, i64 2) #2
  %dec29.i225 = add nsw i64 %n.addr.160.i224, -1
  %cmp27.i226 = icmp sgt i64 %dec29.i225, 0
  br i1 %cmp27.i226, label %while.body28.i227, label %sv_x.exit228

sv_x.exit228:                                     ; preds = %while.body28.i227, %while.body.i223, %if.then858
  call void @Perl_sv_catsv_flags(%struct.sv* %retval1, %struct.sv* %call602, i64 2) #2
  call void @Perl_sv_catsv_flags(%struct.sv* %retval1, %struct.sv* %call.i196, i64 2) #2
  call void @Perl_sv_free(%struct.sv* %call.i196) #2
  br label %if.end867

if.end867:                                        ; preds = %for.end856, %sv_x.exit228
  %258 = load i8* %name, align 1, !tbaa !22
  %cmp870 = icmp eq i8 %258, 37
  br i1 %cmp870, label %if.then872, label %if.else873

if.then872:                                       ; preds = %if.end867
  call void @Perl_sv_catpvn_flags(%struct.sv* %retval1, i8* getelementptr inbounds ([2 x i8]* @.str58, i64 0, i64 0), i64 1, i64 2) #2
  br label %if.end874

if.else873:                                       ; preds = %if.end867
  call void @Perl_sv_catpvn_flags(%struct.sv* %retval1, i8* getelementptr inbounds ([2 x i8]* @.str38, i64 0, i64 0), i64 1, i64 2) #2
  br label %if.end874

if.end874:                                        ; preds = %if.else873, %if.then872
  call void @Perl_sv_free(%struct.sv* %call527) #2
  call void @Perl_sv_free(%struct.sv* %call602) #2
  br label %if.end887

if.then878:                                       ; preds = %if.else358
  call void @Perl_sv_catpvn_flags(%struct.sv* %retval1, i8* getelementptr inbounds ([16 x i8]* @.str62, i64 0, i64 0), i64 15, i64 2) #2
  br i1 %tobool283, label %if.end887, label %if.then880

if.then880:                                       ; preds = %if.then878
  call void (i8*, ...)* @Perl_warn(i8* getelementptr inbounds ([46 x i8]* @.str63, i64 0, i64 0)) #2
  br label %if.end887

if.else882:                                       ; preds = %if.else358
  call void (i8*, ...)* @Perl_warn(i8* getelementptr inbounds ([27 x i8]* @.str64, i64 0, i64 0), i64 %and120) #2
  br label %if.end887

if.end887:                                        ; preds = %if.then878, %if.then361, %if.end874, %if.then880, %if.else882, %if.end510, %if.end357
  br i1 %tobool248, label %if.then889, label %if.end906

if.then889:                                       ; preds = %if.end887
  %cmp890 = icmp sgt i64 %indent, 1
  br i1 %cmp890, label %if.then892, label %if.end893

if.then892:                                       ; preds = %if.then889
  call void @Perl_sv_free(%struct.sv* %apad.addr.0) #2
  br label %if.end893

if.end893:                                        ; preds = %if.then892, %if.then889
  call void @Perl_sv_catpvn_flags(%struct.sv* %retval1, i8* getelementptr inbounds ([4 x i8]* @.str65, i64 0, i64 0), i64 3, i64 2) #2
  %call894 = call i64 @strlen(i8* %realpack.0) #2
  call void @Perl_sv_catpvn_flags(%struct.sv* %retval1, i8* %realpack.0, i64 %call894, i64 2) #2
  call void @Perl_sv_catpvn_flags(%struct.sv* %retval1, i8* getelementptr inbounds ([4 x i8]* @.str66, i64 0, i64 0), i64 3, i64 2) #2
  %tobool895 = icmp eq %struct.sv* %toaster, null
  br i1 %tobool895, label %if.end906, label %land.lhs.true896

land.lhs.true896:                                 ; preds = %if.end893
  %sv_flags897 = getelementptr inbounds %struct.sv* %toaster, i64 0, i32 2
  %259 = load i64* %sv_flags897, align 8, !tbaa !10
  %and898 = and i64 %259, 262144
  %tobool899 = icmp eq i64 %and898, 0
  br i1 %tobool899, label %if.end906, label %land.lhs.true900

land.lhs.true900:                                 ; preds = %land.lhs.true896
  %sv_any901 = getelementptr inbounds %struct.sv* %toaster, i64 0, i32 0
  %260 = load i8** %sv_any901, align 8, !tbaa !12
  %xpv_cur902 = getelementptr inbounds i8* %260, i64 8
  %261 = bitcast i8* %xpv_cur902 to i64*
  %262 = load i64* %261, align 8, !tbaa !19
  %tobool903 = icmp eq i64 %262, 0
  br i1 %tobool903, label %if.end906, label %if.then904

if.then904:                                       ; preds = %land.lhs.true900
  call void @Perl_sv_catpvn_flags(%struct.sv* %retval1, i8* getelementptr inbounds ([3 x i8]* @.str60, i64 0, i64 0), i64 2, i64 2) #2
  call void @Perl_sv_catsv_flags(%struct.sv* %retval1, %struct.sv* %toaster, i64 2) #2
  call void @Perl_sv_catpvn_flags(%struct.sv* %retval1, i8* getelementptr inbounds ([3 x i8]* @.str67, i64 0, i64 0), i64 2, i64 2) #2
  br label %if.end906

if.end906:                                        ; preds = %land.lhs.true900, %land.lhs.true896, %if.end893, %if.then904, %if.end887
  call void @Perl_sv_free(%struct.sv* %call.i14) #2
  %263 = load i64* %levelp, align 8, !tbaa !5
  %dec = add nsw i64 %263, -1
  store i64 %dec, i64* %levelp, align 8, !tbaa !5
  br label %if.end1253

if.else907:                                       ; preds = %if.end6
  %tobool910 = icmp eq i64 %namelen, 0
  br i1 %tobool910, label %if.end972, label %if.then911

if.then911:                                       ; preds = %if.else907
  %264 = ptrtoint %struct.sv* %val to i64
  %call913 = call i32 (i8*, i8*, ...)* @sprintf(i8* %1, i8* getelementptr inbounds ([6 x i8]* @.str33, i64 0, i64 0), i64 %264) #2
  %call916 = call i64 @strlen(i8* %1) #2
  %call917 = call %struct.sv** @Perl_hv_fetch(%struct.hv* %seenhv, i8* %1, i64 %call916, i64 0) #2
  %tobool918 = icmp eq %struct.sv** %call917, null
  br i1 %tobool918, label %if.else956, label %land.lhs.true919

land.lhs.true919:                                 ; preds = %if.then911
  %265 = load %struct.sv** %call917, align 8, !tbaa !1
  %tobool920 = icmp eq %struct.sv* %265, null
  br i1 %tobool920, label %if.else956, label %land.lhs.true921

land.lhs.true921:                                 ; preds = %land.lhs.true919
  %sv_flags922 = getelementptr inbounds %struct.sv* %265, i64 0, i32 2
  %266 = load i64* %sv_flags922, align 8, !tbaa !10
  %and923 = and i64 %266, 524288
  %tobool924 = icmp eq i64 %and923, 0
  br i1 %tobool924, label %if.else956, label %land.lhs.true925

land.lhs.true925:                                 ; preds = %land.lhs.true921
  %sv_any926 = getelementptr inbounds %struct.sv* %265, i64 0, i32 0
  %267 = load i8** %sv_any926, align 8, !tbaa !12
  %xrv_rv927 = bitcast i8* %267 to %struct.sv**
  %268 = load %struct.sv** %xrv_rv927, align 8, !tbaa !13
  %269 = bitcast %struct.sv* %268 to %struct.av*
  %tobool928 = icmp eq %struct.sv* %268, null
  br i1 %tobool928, label %if.else956, label %if.then929

if.then929:                                       ; preds = %land.lhs.true925
  %call932 = call %struct.sv** @Perl_av_fetch(%struct.av* %269, i64 0, i64 0) #2
  %tobool933 = icmp eq %struct.sv** %call932, null
  br i1 %tobool933, label %if.end972, label %land.lhs.true934

land.lhs.true934:                                 ; preds = %if.then929
  %270 = load %struct.sv** %call932, align 8, !tbaa !1
  %tobool935 = icmp eq %struct.sv* %270, null
  br i1 %tobool935, label %if.end972, label %land.lhs.true936

land.lhs.true936:                                 ; preds = %land.lhs.true934
  %call937 = call %struct.sv** @Perl_av_fetch(%struct.av* %269, i64 2, i64 0) #2
  %tobool938 = icmp eq %struct.sv** %call937, null
  br i1 %tobool938, label %if.end972, label %land.lhs.true939

land.lhs.true939:                                 ; preds = %land.lhs.true936
  %271 = load %struct.sv** %call937, align 8, !tbaa !1
  %tobool940 = icmp eq %struct.sv* %271, null
  br i1 %tobool940, label %if.end972, label %land.lhs.true941

land.lhs.true941:                                 ; preds = %land.lhs.true939
  %sv_flags942 = getelementptr inbounds %struct.sv* %271, i64 0, i32 2
  %272 = load i64* %sv_flags942, align 8, !tbaa !10
  %and943 = and i64 %272, 65536
  %tobool944 = icmp eq i64 %and943, 0
  br i1 %tobool944, label %cond.false948, label %cond.true945

cond.true945:                                     ; preds = %land.lhs.true941
  %sv_any946 = getelementptr inbounds %struct.sv* %271, i64 0, i32 0
  %273 = load i8** %sv_any946, align 8, !tbaa !12
  %xiv_iv947 = getelementptr inbounds i8* %273, i64 24
  %274 = bitcast i8* %xiv_iv947 to i64*
  %275 = load i64* %274, align 8, !tbaa !17
  br label %cond.end950

cond.false948:                                    ; preds = %land.lhs.true941
  %call949 = call i64 @Perl_sv_2iv(%struct.sv* %271) #2
  br label %cond.end950

cond.end950:                                      ; preds = %cond.false948, %cond.true945
  %cond951 = phi i64 [ %275, %cond.true945 ], [ %call949, %cond.false948 ]
  %cmp952 = icmp sgt i64 %cond951, 0
  br i1 %cmp952, label %if.then954, label %if.end972

if.then954:                                       ; preds = %cond.end950
  call void @Perl_sv_catpvn_flags(%struct.sv* %retval1, i8* getelementptr inbounds ([3 x i8]* @.str47, i64 0, i64 0), i64 2, i64 2) #2
  call void @Perl_sv_catsv_flags(%struct.sv* %retval1, %struct.sv* %270, i64 2) #2
  call void @Perl_sv_catpvn_flags(%struct.sv* %retval1, i8* getelementptr inbounds ([2 x i8]* @.str38, i64 0, i64 0), i64 1, i64 2) #2
  br label %cleanup

if.else956:                                       ; preds = %land.lhs.true925, %land.lhs.true921, %land.lhs.true919, %if.then911
  %seenentry.1 = phi %struct.av* [ %269, %land.lhs.true925 ], [ null, %land.lhs.true921 ], [ null, %land.lhs.true919 ], [ null, %if.then911 ]
  %cmp957 = icmp eq %struct.sv* %val, @PL_sv_undef
  br i1 %cmp957, label %if.end972, label %if.then959

if.then959:                                       ; preds = %if.else956
  %call962 = call %struct.sv* @Perl_newSVpvn(i8* getelementptr inbounds ([2 x i8]* @.str40, i64 0, i64 0), i64 1) #2
  call void @Perl_sv_catpvn_flags(%struct.sv* %call962, i8* %name, i64 %namelen, i64 2) #2
  %call963 = call %struct.av* @Perl_newAV() #2
  call void @Perl_av_push(%struct.av* %call963, %struct.sv* %call962) #2
  %call964 = call %struct.sv* @Perl_newRV(%struct.sv* %val) #2
  call void @Perl_av_push(%struct.av* %call963, %struct.sv* %call964) #2
  %call967 = call i64 @strlen(i8* %1) #2
  %276 = bitcast %struct.av* %call963 to %struct.sv*
  %call968 = call %struct.sv* @Perl_newRV(%struct.sv* %276) #2
  %call969 = call %struct.sv** @Perl_hv_store(%struct.hv* %seenhv, i8* %1, i64 %call967, %struct.sv* %call968, i64 0) #2
  call void @Perl_sv_free(%struct.sv* %276) #2
  br label %if.end972

if.end972:                                        ; preds = %land.lhs.true939, %land.lhs.true936, %land.lhs.true934, %if.then929, %if.else956, %if.else907, %cond.end950, %if.then959
  %idlen.0 = phi i64 [ %call916, %cond.end950 ], [ %call916, %land.lhs.true939 ], [ %call916, %land.lhs.true936 ], [ %call916, %land.lhs.true934 ], [ %call916, %if.then929 ], [ %call916, %if.then959 ], [ %call916, %if.else956 ], [ 0, %if.else907 ]
  %seenentry.2 = phi %struct.av* [ %269, %cond.end950 ], [ %269, %land.lhs.true939 ], [ %269, %land.lhs.true936 ], [ %269, %land.lhs.true934 ], [ %269, %if.then929 ], [ %call963, %if.then959 ], [ %seenentry.1, %if.else956 ], [ null, %if.else907 ]
  %277 = load i64* %sv_flags, align 8, !tbaa !10
  %and974 = and i64 %277, 65536
  %tobool975 = icmp eq i64 %and974, 0
  br i1 %tobool975, label %if.else1044, label %if.then976

if.then976:                                       ; preds = %if.end972
  %and979 = and i64 %277, 2147483648
  %tobool980 = icmp eq i64 %and979, 0
  %sv_any999 = getelementptr inbounds %struct.sv* %val, i64 0, i32 0
  %278 = load i8** %sv_any999, align 8, !tbaa !12
  %xiv_iv1000 = getelementptr inbounds i8* %278, i64 24
  %279 = bitcast i8* %xiv_iv1000 to i64*
  %280 = load i64* %279, align 8, !tbaa !17
  br i1 %tobool980, label %cond.end1003, label %cond.end990

cond.end990:                                      ; preds = %if.then976
  %call992 = call i32 (i8*, i8*, ...)* @sprintf(i8* %0, i8* getelementptr inbounds ([4 x i8]* @.str68, i64 0, i64 0), i64 %280) #2
  br label %if.end1006

cond.end1003:                                     ; preds = %if.then976
  %call1005 = call i32 (i8*, i8*, ...)* @sprintf(i8* %0, i8* getelementptr inbounds ([4 x i8]* @.str24, i64 0, i64 0), i64 %280) #2
  br label %if.end1006

if.end1006:                                       ; preds = %cond.end1003, %cond.end990
  %call1008 = call i64 @strlen(i8* %0) #2
  %281 = load i64* %sv_flags, align 8, !tbaa !10
  %and1010 = and i64 %281, 262144
  %tobool1011 = icmp eq i64 %and1010, 0
  br i1 %tobool1011, label %if.end1036, label %cond.true1019

cond.true1019:                                    ; preds = %if.end1006
  %282 = load i8** %sv_any999, align 8, !tbaa !12
  %xpv_cur1021 = getelementptr inbounds i8* %282, i64 8
  %283 = bitcast i8* %xpv_cur1021 to i64*
  %284 = load i64* %283, align 8, !tbaa !19
  %cmp1028 = icmp eq i64 %284, %call1008
  br i1 %cmp1028, label %lor.lhs.false1030, label %integer_came_from_string

lor.lhs.false1030:                                ; preds = %cond.true1019
  %xpv_pv1023 = bitcast i8* %282 to i8**
  %285 = load i8** %xpv_pv1023, align 8, !tbaa !21
  %call1032 = call i32 @memcmp(i8* %285, i8* %0, i64 %call1008) #2
  %tobool1033 = icmp eq i32 %call1032, 0
  br i1 %tobool1033, label %if.end1036, label %integer_came_from_string

if.end1036:                                       ; preds = %lor.lhs.false1030, %if.end1006
  %cmp1037 = icmp ugt i64 %call1008, 10
  br i1 %cmp1037, label %if.then1039, label %if.else1041

if.then1039:                                      ; preds = %if.end1036
  call void (%struct.sv*, i8*, ...)* @Perl_sv_catpvf(%struct.sv* %retval1, i8* getelementptr inbounds ([5 x i8]* @.str69, i64 0, i64 0), i8* %0) #2
  br label %if.end1253

if.else1041:                                      ; preds = %if.end1036
  call void @Perl_sv_catpvn_flags(%struct.sv* %retval1, i8* %0, i64 %call1008, i64 2) #2
  br label %if.end1253

if.else1044:                                      ; preds = %if.end972
  %cmp1045 = icmp eq i64 %and, 13
  br i1 %cmp1045, label %if.then1047, label %if.else1190

if.then1047:                                      ; preds = %if.else1044
  %and1049 = and i64 %277, 262144
  %cmp1050 = icmp eq i64 %and1049, 0
  br i1 %cmp1050, label %cond.false1057, label %cond.true1052

cond.true1052:                                    ; preds = %if.then1047
  %sv_any1053 = getelementptr inbounds %struct.sv* %val, i64 0, i32 0
  %286 = load i8** %sv_any1053, align 8, !tbaa !12
  %xpv_cur1054 = getelementptr inbounds i8* %286, i64 8
  %287 = bitcast i8* %xpv_cur1054 to i64*
  %288 = load i64* %287, align 8, !tbaa !19
  store i64 %288, i64* %i909, align 8, !tbaa !5
  %xpv_pv1056 = bitcast i8* %286 to i8**
  %289 = load i8** %xpv_pv1056, align 8, !tbaa !21
  br label %cond.end1059

cond.false1057:                                   ; preds = %if.then1047
  %call1058 = call i8* @Perl_sv_2pv_flags(%struct.sv* %val, i64* %i909, i64 2) #2
  %.pre280 = load i64* %i909, align 8, !tbaa !5
  br label %cond.end1059

cond.end1059:                                     ; preds = %cond.false1057, %cond.true1052
  %290 = phi i64 [ %288, %cond.true1052 ], [ %.pre280, %cond.false1057 ]
  %cond1060 = phi i8* [ %289, %cond.true1052 ], [ %call1058, %cond.false1057 ]
  %incdec.ptr1061 = getelementptr inbounds i8* %cond1060, i64 1
  %dec1062 = add i64 %290, -1
  store i64 %dec1062, i64* %i909, align 8, !tbaa !5
  %cmp1063 = icmp ugt i64 %dec1062, 5
  br i1 %cmp1063, label %land.lhs.true1065, label %if.end1072

land.lhs.true1065:                                ; preds = %cond.end1059
  %call1066 = call i32 @strncmp(i8* %incdec.ptr1061, i8* getelementptr inbounds ([7 x i8]* @.str70, i64 0, i64 0), i64 6) #2
  %cmp1067 = icmp eq i32 %call1066, 0
  br i1 %cmp1067, label %if.then1069, label %if.end1072

if.then1069:                                      ; preds = %land.lhs.true1065
  %add.ptr1070 = getelementptr inbounds i8* %cond1060, i64 5
  %sub1071 = add i64 %290, -5
  store i64 %sub1071, i64* %i909, align 8, !tbaa !5
  br label %if.end1072

if.end1072:                                       ; preds = %if.then1069, %land.lhs.true1065, %cond.end1059
  %291 = phi i64 [ %sub1071, %if.then1069 ], [ %dec1062, %land.lhs.true1065 ], [ %dec1062, %cond.end1059 ]
  %c.0 = phi i8* [ %add.ptr1070, %if.then1069 ], [ %incdec.ptr1061, %land.lhs.true1065 ], [ %incdec.ptr1061, %cond.end1059 ]
  %.pre.i161 = load i8* %c.0, align 1, !tbaa !22
  br label %TOP.i164

TOP.i164:                                         ; preds = %lor.lhs.false53.i193, %if.end1072
  %292 = phi i8 [ %.pre.i161, %if.end1072 ], [ 58, %lor.lhs.false53.i193 ]
  %s.addr.0.i162 = phi i8* [ %c.0, %if.end1072 ], [ %incdec.ptr2898.i183, %lor.lhs.false53.i193 ]
  %cmp.i163 = icmp eq i8 %292, 58
  br i1 %cmp.i163, label %if.then.i167, label %if.end9.i175

if.then.i167:                                     ; preds = %TOP.i164
  %incdec.ptr.i165 = getelementptr inbounds i8* %s.addr.0.i162, i64 1
  %293 = load i8* %incdec.ptr.i165, align 1, !tbaa !22
  %tobool.i166 = icmp eq i8 %293, 0
  br i1 %tobool.i166, label %if.then1075, label %if.then2.i170

if.then2.i170:                                    ; preds = %if.then.i167
  %incdec.ptr3.i168 = getelementptr inbounds i8* %s.addr.0.i162, i64 2
  %cmp5.i169 = icmp eq i8 %293, 58
  br i1 %cmp5.i169, label %if.then2.if.end9_crit_edge.i172, label %if.then1075

if.then2.if.end9_crit_edge.i172:                  ; preds = %if.then2.i170
  %.pre103.i171 = load i8* %incdec.ptr3.i168, align 1, !tbaa !22
  br label %if.end9.i175

if.end9.i175:                                     ; preds = %if.then2.if.end9_crit_edge.i172, %TOP.i164
  %294 = phi i8 [ %.pre103.i171, %if.then2.if.end9_crit_edge.i172 ], [ %292, %TOP.i164 ]
  %s.addr.1.i173 = phi i8* [ %incdec.ptr3.i168, %if.then2.if.end9_crit_edge.i172 ], [ %s.addr.0.i162, %TOP.i164 ]
  %.off.i174 = add i8 %294, -65
  %295 = icmp ult i8 %.off.i174, 26
  br i1 %295, label %while.cond.preheader.i182, label %lor.lhs.false.i179

lor.lhs.false.i179:                               ; preds = %if.end9.i175
  %.off87.i176 = add i8 %294, -97
  %296 = icmp ult i8 %.off87.i176, 26
  %cmp25.i177 = icmp eq i8 %294, 95
  %or.cond86.i178 = or i1 %296, %cmp25.i177
  br i1 %or.cond86.i178, label %while.cond.preheader.i182, label %if.then1075

while.cond.preheader.i182:                        ; preds = %lor.lhs.false.i179, %if.end9.i175
  %incdec.ptr2896.i180 = getelementptr inbounds i8* %s.addr.1.i173, i64 1
  %297 = load i8* %incdec.ptr2896.i180, align 1, !tbaa !22
  %tobool2997.i181 = icmp eq i8 %297, 0
  br i1 %tobool2997.i181, label %if.else1099, label %while.body.i189

while.body.i189:                                  ; preds = %while.cond.preheader.i182, %while.cond.backedge.i192
  %298 = phi i8 [ %302, %while.cond.backedge.i192 ], [ %297, %while.cond.preheader.i182 ]
  %incdec.ptr2898.i183 = phi i8* [ %incdec.ptr28.i190, %while.cond.backedge.i192 ], [ %incdec.ptr2896.i180, %while.cond.preheader.i182 ]
  %.off88.i184 = add i8 %298, -65
  %299 = icmp ult i8 %.off88.i184, 26
  %.off89.i185 = add i8 %298, -97
  %300 = icmp ult i8 %.off89.i185, 26
  %or.cond.i186 = or i1 %299, %300
  %.off90.i187 = add i8 %298, -48
  %301 = icmp ult i8 %.off90.i187, 10
  %or.cond93.i188 = or i1 %or.cond.i186, %301
  br i1 %or.cond93.i188, label %while.cond.backedge.i192, label %lor.lhs.false53.i193

while.cond.backedge.i192:                         ; preds = %lor.lhs.false53.i193, %while.body.i189
  %incdec.ptr28.i190 = getelementptr inbounds i8* %incdec.ptr2898.i183, i64 1
  %302 = load i8* %incdec.ptr28.i190, align 1, !tbaa !22
  %tobool29.i191 = icmp eq i8 %302, 0
  br i1 %tobool29.i191, label %if.else1099, label %while.body.i189

lor.lhs.false53.i193:                             ; preds = %while.body.i189
  switch i8 %298, label %if.then1075 [
    i8 95, label %while.cond.backedge.i192
    i8 58, label %TOP.i164
  ]

if.then1075:                                      ; preds = %if.then2.i170, %if.then.i167, %lor.lhs.false.i179, %lor.lhs.false53.i193
  %sv_any1076240 = getelementptr inbounds %struct.sv* %retval1, i64 0, i32 0
  %303 = load i8** %sv_any1076240, align 8, !tbaa !12
  %xpv_cur1077241 = getelementptr inbounds i8* %303, i64 8
  %304 = bitcast i8* %xpv_cur1077241 to i64*
  %305 = load i64* %304, align 8, !tbaa !19
  %add1078 = add i64 %305, 6
  %mul1079 = shl i64 %291, 1
  %add1080 = add i64 %add1078, %mul1079
  %call1081 = call i8* @Perl_sv_grow(%struct.sv* %retval1, i64 %add1080) #2
  %306 = load i8** %sv_any1076240, align 8, !tbaa !12
  %xpv_pv1083 = bitcast i8* %306 to i8**
  %307 = load i8** %xpv_pv1083, align 8, !tbaa !21
  %xpv_cur1085 = getelementptr inbounds i8* %306, i64 8
  %308 = bitcast i8* %xpv_cur1085 to i64*
  %309 = load i64* %308, align 8, !tbaa !19
  %add.ptr1086 = getelementptr inbounds i8* %307, i64 %309
  store i8 42, i8* %add.ptr1086, align 1, !tbaa !22
  %add.ptr1086.sum = add i64 %309, 1
  %arrayidx1088 = getelementptr inbounds i8* %307, i64 %add.ptr1086.sum
  store i8 123, i8* %arrayidx1088, align 1, !tbaa !22
  %add.ptr1086.sum3 = add i64 %309, 2
  %arrayidx1089 = getelementptr inbounds i8* %307, i64 %add.ptr1086.sum3
  store i8 39, i8* %arrayidx1089, align 1, !tbaa !22
  %310 = load i64* %i909, align 8, !tbaa !5
  %cmp10.i71 = icmp eq i64 %310, 0
  %add1093.pre = add i64 %309, 3
  br i1 %cmp10.i71, label %esc_q.exit90, label %while.body.i77.preheader

while.body.i77.preheader:                         ; preds = %if.then1075
  %add.ptr1090 = getelementptr inbounds i8* %307, i64 %add1093.pre
  br label %while.body.i77

while.body.i77:                                   ; preds = %while.body.i77.preheader, %sw.default.i88
  %ret.014.i72 = phi i64 [ %ret.1.i83, %sw.default.i88 ], [ 0, %while.body.i77.preheader ]
  %slen.addr.013.i73 = phi i64 [ %dec.i86, %sw.default.i88 ], [ %310, %while.body.i77.preheader ]
  %s.addr.012.i74 = phi i8* [ %incdec.ptr2.i85, %sw.default.i88 ], [ %c.0, %while.body.i77.preheader ]
  %d.addr.011.i75 = phi i8* [ %incdec.ptr1.i84, %sw.default.i88 ], [ %add.ptr1090, %while.body.i77.preheader ]
  %311 = load i8* %s.addr.012.i74, align 1, !tbaa !22
  %conv.i76 = sext i8 %311 to i32
  switch i32 %conv.i76, label %sw.default.i88 [
    i32 39, label %sw.bb.i81
    i32 92, label %sw.bb.i81
  ]

sw.bb.i81:                                        ; preds = %while.body.i77, %while.body.i77
  store i8 92, i8* %d.addr.011.i75, align 1, !tbaa !22
  %incdec.ptr.i78 = getelementptr inbounds i8* %d.addr.011.i75, i64 1
  %inc.i79 = add nsw i64 %ret.014.i72, 1
  %.pre.i80 = load i8* %s.addr.012.i74, align 1, !tbaa !22
  br label %sw.default.i88

sw.default.i88:                                   ; preds = %sw.bb.i81, %while.body.i77
  %312 = phi i8 [ %311, %while.body.i77 ], [ %.pre.i80, %sw.bb.i81 ]
  %d.addr.1.i82 = phi i8* [ %d.addr.011.i75, %while.body.i77 ], [ %incdec.ptr.i78, %sw.bb.i81 ]
  %ret.1.i83 = phi i64 [ %ret.014.i72, %while.body.i77 ], [ %inc.i79, %sw.bb.i81 ]
  store i8 %312, i8* %d.addr.1.i82, align 1, !tbaa !22
  %incdec.ptr1.i84 = getelementptr inbounds i8* %d.addr.1.i82, i64 1
  %incdec.ptr2.i85 = getelementptr inbounds i8* %s.addr.012.i74, i64 1
  %dec.i86 = add i64 %slen.addr.013.i73, -1
  %cmp.i87 = icmp eq i64 %dec.i86, 0
  br i1 %cmp.i87, label %esc_q.exit90.loopexit, label %while.body.i77

esc_q.exit90.loopexit:                            ; preds = %sw.default.i88
  %.pre281 = load i64* %i909, align 8, !tbaa !5
  br label %esc_q.exit90

esc_q.exit90:                                     ; preds = %if.then1075, %esc_q.exit90.loopexit
  %313 = phi i64 [ %.pre281, %esc_q.exit90.loopexit ], [ 0, %if.then1075 ]
  %ret.0.lcssa.i89 = phi i64 [ %ret.1.i83, %esc_q.exit90.loopexit ], [ 0, %if.then1075 ]
  %add1092 = add i64 %313, %ret.0.lcssa.i89
  %inc1094 = add i64 %add1092, 4
  store i64 %inc1094, i64* %i909, align 8, !tbaa !5
  %add.ptr1086.sum5 = add i64 %add1093.pre, %add1092
  %arrayidx1095 = getelementptr inbounds i8* %307, i64 %add.ptr1086.sum5
  store i8 39, i8* %arrayidx1095, align 1, !tbaa !22
  %314 = load i64* %i909, align 8, !tbaa !5
  %inc1096 = add i64 %314, 1
  store i64 %inc1096, i64* %i909, align 8, !tbaa !5
  %add.ptr1086.sum6 = add i64 %314, %309
  %arrayidx1097 = getelementptr inbounds i8* %307, i64 %add.ptr1086.sum6
  store i8 125, i8* %arrayidx1097, align 1, !tbaa !22
  %315 = load i64* %i909, align 8, !tbaa !5
  %add.ptr1086.sum7 = add i64 %315, %309
  %arrayidx1098 = getelementptr inbounds i8* %307, i64 %add.ptr1086.sum7
  store i8 0, i8* %arrayidx1098, align 1, !tbaa !22
  %.pre282 = load i64* %i909, align 8, !tbaa !5
  br label %if.end1114

if.else1099:                                      ; preds = %while.cond.preheader.i182, %while.cond.backedge.i192
  %sv_any1076247 = getelementptr inbounds %struct.sv* %retval1, i64 0, i32 0
  %316 = load i8** %sv_any1076247, align 8, !tbaa !12
  %xpv_cur1077248 = getelementptr inbounds i8* %316, i64 8
  %317 = bitcast i8* %xpv_cur1077248 to i64*
  %318 = load i64* %317, align 8, !tbaa !19
  %add1102 = add i64 %318, 2
  %add1103 = add i64 %add1102, %291
  %call1104 = call i8* @Perl_sv_grow(%struct.sv* %retval1, i64 %add1103) #2
  %319 = load i8** %sv_any1076247, align 8, !tbaa !12
  %xpv_pv1106 = bitcast i8* %319 to i8**
  %320 = load i8** %xpv_pv1106, align 8, !tbaa !21
  %xpv_cur1108 = getelementptr inbounds i8* %319, i64 8
  %321 = bitcast i8* %xpv_cur1108 to i64*
  %322 = load i64* %321, align 8, !tbaa !19
  %add.ptr1109 = getelementptr inbounds i8* %320, i64 %322
  store i8 42, i8* %add.ptr1109, align 1, !tbaa !22
  %add.ptr1109.sum = add i64 %322, 1
  %add.ptr1111 = getelementptr inbounds i8* %320, i64 %add.ptr1109.sum
  %call1112 = call i8* @strcpy(i8* %add.ptr1111, i8* %c.0) #2
  %323 = load i64* %i909, align 8, !tbaa !5
  %inc1113 = add i64 %323, 1
  store i64 %inc1113, i64* %i909, align 8, !tbaa !5
  br label %if.end1114

if.end1114:                                       ; preds = %if.else1099, %esc_q.exit90
  %324 = phi i64 [ %.pre282, %esc_q.exit90 ], [ %inc1113, %if.else1099 ]
  %sv_any1076243 = phi i8** [ %sv_any1076240, %esc_q.exit90 ], [ %sv_any1076247, %if.else1099 ]
  %r.0 = phi i8* [ %add.ptr1086, %esc_q.exit90 ], [ %add.ptr1109, %if.else1099 ]
  %325 = load i8** %sv_any1076243, align 8, !tbaa !12
  %xpv_cur1117 = getelementptr inbounds i8* %325, i64 8
  %326 = bitcast i8* %xpv_cur1117 to i64*
  %327 = load i64* %326, align 8, !tbaa !19
  %add1118 = add i64 %324, %327
  store i64 %add1118, i64* %326, align 8, !tbaa !19
  %tobool1121 = icmp eq i64 %purity, 0
  br i1 %tobool1121, label %if.end1253, label %if.then1122

if.then1122:                                      ; preds = %if.end1114
  %call1125 = call %struct.sv* @Perl_newSVpvn(i8* getelementptr inbounds ([1 x i8]* @.str3, i64 0, i64 0), i64 0) #2
  %call1128 = call %struct.sv* @Perl_newSVpvn(i8* getelementptr inbounds ([1 x i8]* @.str3, i64 0, i64 0), i64 0) #2
  %sv_any1138 = bitcast %struct.sv* %val to %struct.xpvgv**
  %sv_any1172 = getelementptr inbounds %struct.sv* %call1128, i64 0, i32 0
  %cmp1174 = icmp sgt i64 %indent, 1
  %cmp.i43 = icmp eq %struct.sv* %call1128, null
  %sv_any1181 = getelementptr inbounds %struct.sv* %call1125, i64 0, i32 0
  br i1 %cmp1174, label %for.body1134.us, label %for.body1134

for.body1134.us:                                  ; preds = %for.inc1186.us.thread, %for.inc1186.us, %if.then1122
  %j.0261.us = phi i64 [ 0, %if.then1122 ], [ %inc1187.us, %for.inc1186.us ], [ %inc1187.us303, %for.inc1186.us.thread ]
  %cmp1135.us = icmp eq i64 %j.0261.us, 0
  br i1 %cmp1135.us, label %cond.true1137.us, label %cond.false1141.us

cond.false1141.us:                                ; preds = %for.body1134.us
  %cmp1142.us = icmp eq i64 %j.0261.us, 1
  %328 = load %struct.xpvgv** %sv_any1138, align 8, !tbaa !33
  %xgv_gp1146.us = getelementptr inbounds %struct.xpvgv* %328, i64 0, i32 7
  %329 = load %struct.gp** %xgv_gp1146.us, align 8, !tbaa !35
  br i1 %cmp1142.us, label %cond.true1144.us, label %cond.false1147.us

cond.false1147.us:                                ; preds = %cond.false1141.us
  %gp_hv.us = getelementptr inbounds %struct.gp* %329, i64 0, i32 5
  %330 = load %struct.hv** %gp_hv.us, align 8, !tbaa !51
  %331 = bitcast %struct.hv* %330 to %struct.sv*
  br label %cond.end1152.us

cond.true1144.us:                                 ; preds = %cond.false1141.us
  %gp_av.us = getelementptr inbounds %struct.gp* %329, i64 0, i32 4
  %332 = load %struct.av** %gp_av.us, align 8, !tbaa !52
  %333 = bitcast %struct.av* %332 to %struct.sv*
  br label %cond.end1152.us

cond.true1137.us:                                 ; preds = %for.body1134.us
  %334 = load %struct.xpvgv** %sv_any1138, align 8, !tbaa !33
  %xgv_gp1139.us = getelementptr inbounds %struct.xpvgv* %334, i64 0, i32 7
  %335 = load %struct.gp** %xgv_gp1139.us, align 8, !tbaa !35
  %gp_sv1140.us = getelementptr inbounds %struct.gp* %335, i64 0, i32 0
  %336 = load %struct.sv** %gp_sv1140.us, align 8, !tbaa !37
  br label %cond.end1152.us

cond.end1152.us:                                  ; preds = %cond.true1137.us, %cond.true1144.us, %cond.false1147.us
  %cond1153.us = phi %struct.sv* [ %336, %cond.true1137.us ], [ %333, %cond.true1144.us ], [ %331, %cond.false1147.us ]
  %tobool1154.us = icmp eq %struct.sv* %cond1153.us, null
  br i1 %tobool1154.us, label %for.inc1186.us, label %if.end1156.us

if.end1156.us:                                    ; preds = %cond.end1152.us
  br i1 %cmp1135.us, label %land.lhs.true1159.us, label %if.then1176.us

land.lhs.true1159.us:                             ; preds = %if.end1156.us
  %sv_flags1160.us = getelementptr inbounds %struct.sv* %cond1153.us, i64 0, i32 2
  %337 = load i64* %sv_flags1160.us, align 8, !tbaa !10
  %and1161.us = and i64 %337, 118423552
  %tobool1162.us = icmp eq i64 %and1161.us, 0
  br i1 %tobool1162.us, label %for.inc1186.us.thread, label %if.then1176.us

for.inc1186.us.thread:                            ; preds = %land.lhs.true1159.us
  %inc1187.us303 = add nsw i64 %j.0261.us, 1
  br label %for.body1134.us

if.then1176.us:                                   ; preds = %if.end1156.us, %land.lhs.true1159.us
  store i64 0, i64* %nlevel, align 8, !tbaa !5
  %338 = load i64* %i909, align 8, !tbaa !5
  %call1168.us = call %struct.sv* @Perl_newSVpvn(i8* %r.0, i64 %338) #2
  call void @Perl_sv_setsv_flags(%struct.sv* %call1125, %struct.sv* %call1168.us, i64 2) #2
  %arrayidx1169.us = getelementptr inbounds [3 x i8*]* @DD_dump.entries, i64 0, i64 %j.0261.us
  %339 = load i8** %arrayidx1169.us, align 8, !tbaa !1
  %arrayidx1170.us = getelementptr inbounds [3 x i64]* @DD_dump.sizes, i64 0, i64 %j.0261.us
  %340 = load i64* %arrayidx1170.us, align 8, !tbaa !5
  call void @Perl_sv_catpvn_flags(%struct.sv* %call1125, i8* %339, i64 %340, i64 2) #2
  call void @Perl_sv_catpvn_flags(%struct.sv* %call1168.us, i8* getelementptr inbounds ([4 x i8]* @.str26, i64 0, i64 0), i64 3, i64 2) #2
  call void @Perl_av_push(%struct.av* %postav, %struct.sv* %call1168.us) #2
  %call1171.us = call %struct.sv* @Perl_newRV(%struct.sv* %cond1153.us) #2
  %341 = load i8** %sv_any1172, align 8, !tbaa !12
  %xpv_cur1173.us = getelementptr inbounds i8* %341, i64 8
  %342 = bitcast i8* %xpv_cur1173.us to i64*
  store i64 0, i64* %342, align 8, !tbaa !19
  %sv_any1177.us = getelementptr inbounds %struct.sv* %call1168.us, i64 0, i32 0
  %343 = load i8** %sv_any1177.us, align 8, !tbaa !12
  %xpv_cur1178.us = getelementptr inbounds i8* %343, i64 8
  %344 = bitcast i8* %xpv_cur1178.us to i64*
  %345 = load i64* %344, align 8, !tbaa !19
  br i1 %cmp.i43, label %if.then.i45.us, label %if.end.i48.us

if.then.i45.us:                                   ; preds = %if.then1176.us
  %call.i44.us = call %struct.sv* @Perl_newSVpvn(i8* getelementptr inbounds ([1 x i8]* @.str3, i64 0, i64 0), i64 0) #2
  br label %if.end.i48.us

if.end.i48.us:                                    ; preds = %if.then.i45.us, %if.then1176.us
  %sv.addr.0.i46.us = phi %struct.sv* [ %call.i44.us, %if.then.i45.us ], [ %call1128, %if.then1176.us ]
  %cmp1.i47.us = icmp sgt i64 %345, 0
  br i1 %cmp1.i47.us, label %if.then2.i55.us, label %if.end1180.us

if.then2.i55.us:                                  ; preds = %if.end.i48.us
  %sv_any.i49.us = getelementptr inbounds %struct.sv* %sv.addr.0.i46.us, i64 0, i32 0
  %346 = load i8** %sv_any.i49.us, align 8, !tbaa !12
  %xpv_len.i50.us = getelementptr inbounds i8* %346, i64 16
  %347 = bitcast i8* %xpv_len.i50.us to i64*
  %348 = load i64* %347, align 8, !tbaa !26
  %xpv_cur.i51.us = getelementptr inbounds i8* %346, i64 8
  %349 = bitcast i8* %xpv_cur.i51.us to i64*
  %350 = load i64* %349, align 8, !tbaa !19
  %add.i52.us = add i64 %345, 1
  %add4.i53.us = add i64 %add.i52.us, %350
  %cmp5.i54.us = icmp ult i64 %348, %add4.i53.us
  br i1 %cmp5.i54.us, label %cond.true.i57.us, label %cond.end.i58.us

cond.true.i57.us:                                 ; preds = %if.then2.i55.us
  %call11.i56.us = call i8* @Perl_sv_grow(%struct.sv* %sv.addr.0.i46.us, i64 %add4.i53.us) #2
  %.pre283 = load i8** %sv_any.i49.us, align 8, !tbaa !12
  %xpv_cur18.i60.us.phi.trans.insert = getelementptr inbounds i8* %.pre283, i64 8
  %.phi.trans.insert = bitcast i8* %xpv_cur18.i60.us.phi.trans.insert to i64*
  %.pre284 = load i64* %.phi.trans.insert, align 8, !tbaa !19
  br label %cond.end.i58.us

cond.end.i58.us:                                  ; preds = %cond.true.i57.us, %if.then2.i55.us
  %351 = phi i64 [ %.pre284, %cond.true.i57.us ], [ %350, %if.then2.i55.us ]
  %352 = phi i8* [ %.pre283, %cond.true.i57.us ], [ %346, %if.then2.i55.us ]
  %xpv_pv16.i59.us = bitcast i8* %352 to i8**
  %353 = load i8** %xpv_pv16.i59.us, align 8, !tbaa !21
  %xpv_cur18.i60.us = getelementptr inbounds i8* %352, i64 8
  %354 = bitcast i8* %xpv_cur18.i60.us to i64*
  %add21.i61.us = add i64 %351, %345
  store i64 %add21.i61.us, i64* %354, align 8, !tbaa !19
  %arrayidx.i62.us = getelementptr inbounds i8* %353, i64 %add21.i61.us
  store i8 0, i8* %arrayidx.i62.us, align 1, !tbaa !22
  %355 = add i64 %345, 1
  %356 = sub i64 0, %345
  %357 = icmp sgt i64 %356, -1
  %smax321 = select i1 %357, i64 %356, i64 -1
  %358 = add i64 %355, %smax321
  %end.idx327 = add i64 %355, %smax321
  %n.vec329 = and i64 %358, -4
  %cmp.zero331 = icmp eq i64 %n.vec329, 0
  %rev.ind.end333 = sub i64 %345, %n.vec329
  br i1 %cmp.zero331, label %middle.block324, label %vector.body323

vector.body323:                                   ; preds = %cond.end.i58.us, %vector.body323
  %index326 = phi i64 [ %index.next336, %vector.body323 ], [ 0, %cond.end.i58.us ]
  %reverse.idx338 = sub i64 %345, %index326
  %.lhs345 = add i64 %reverse.idx338, -1
  %359 = add i64 %.lhs345, %351
  %.sum344 = add i64 %359, -3
  %360 = getelementptr i8* %353, i64 %.sum344
  %361 = bitcast i8* %360 to <4 x i8>*
  store <4 x i8> <i8 32, i8 32, i8 32, i8 32>, <4 x i8>* %361, align 1
  %index.next336 = add i64 %index326, 4
  %362 = icmp eq i64 %index.next336, %n.vec329
  br i1 %362, label %middle.block324, label %vector.body323, !llvm.loop !53

middle.block324:                                  ; preds = %vector.body323, %cond.end.i58.us
  %resume.val332 = phi i64 [ %345, %cond.end.i58.us ], [ %rev.ind.end333, %vector.body323 ]
  %new.indc.resume.val334 = phi i64 [ 0, %cond.end.i58.us ], [ %n.vec329, %vector.body323 ]
  %cmp.n335 = icmp eq i64 %end.idx327, %new.indc.resume.val334
  br i1 %cmp.n335, label %if.end1180.us, label %while.body.i69.us

while.body.i69.us:                                ; preds = %middle.block324, %while.body.i69.us
  %n.addr.058.i64.us = phi i64 [ %dec.i65.us, %while.body.i69.us ], [ %resume.val332, %middle.block324 ]
  %dec.i65.us = add nsw i64 %n.addr.058.i64.us, -1
  %add.ptr.sum55.i66.us = add i64 %dec.i65.us, %351
  %arrayidx24.i67.us = getelementptr inbounds i8* %353, i64 %add.ptr.sum55.i66.us
  store i8 32, i8* %arrayidx24.i67.us, align 1, !tbaa !22
  %cmp22.i68.us = icmp sgt i64 %dec.i65.us, 0
  br i1 %cmp22.i68.us, label %while.body.i69.us, label %if.end1180.us, !llvm.loop !54

if.end1180.us:                                    ; preds = %while.body.i69.us, %middle.block324, %if.end.i48.us
  %363 = load i8** %sv_any1181, align 8, !tbaa !12
  %xpv_pv1182.us = bitcast i8* %363 to i8**
  %364 = load i8** %xpv_pv1182.us, align 8, !tbaa !21
  %xpv_cur1184.us = getelementptr inbounds i8* %363, i64 8
  %365 = bitcast i8* %xpv_cur1184.us to i64*
  %366 = load i64* %365, align 8, !tbaa !19
  call fastcc void @DD_dump(%struct.sv* %call1171.us, i8* %364, i64 %366, %struct.sv* %call1168.us, %struct.hv* %seenhv, %struct.av* %postav, i64* %nlevel, i64 %indent, %struct.sv* %pad, %struct.sv* %xpad, %struct.sv* %call1128, %struct.sv* %sep, %struct.sv* %pair, %struct.sv* %freezer, %struct.sv* %toaster, i64 %purity, i64 %deepcopy, i64 %quotekeys, %struct.sv* %bless, i64 %maxdepth, %struct.sv* %sortkeys)
  call void @Perl_sv_free(%struct.sv* %call1171.us) #2
  br label %for.inc1186.us

for.inc1186.us:                                   ; preds = %if.end1180.us, %cond.end1152.us
  %inc1187.us = add nsw i64 %j.0261.us, 1
  %exitcond279 = icmp eq i64 %inc1187.us, 3
  br i1 %exitcond279, label %for.end1188, label %for.body1134.us

for.body1134:                                     ; preds = %for.inc1186.thread, %for.inc1186, %if.then1122
  %j.0261 = phi i64 [ 0, %if.then1122 ], [ %inc1187, %for.inc1186 ], [ %inc1187305, %for.inc1186.thread ]
  %cmp1135 = icmp eq i64 %j.0261, 0
  br i1 %cmp1135, label %cond.true1137, label %cond.false1141

cond.true1137:                                    ; preds = %for.body1134
  %367 = load %struct.xpvgv** %sv_any1138, align 8, !tbaa !33
  %xgv_gp1139 = getelementptr inbounds %struct.xpvgv* %367, i64 0, i32 7
  %368 = load %struct.gp** %xgv_gp1139, align 8, !tbaa !35
  %gp_sv1140 = getelementptr inbounds %struct.gp* %368, i64 0, i32 0
  %369 = load %struct.sv** %gp_sv1140, align 8, !tbaa !37
  br label %cond.end1152

cond.false1141:                                   ; preds = %for.body1134
  %cmp1142 = icmp eq i64 %j.0261, 1
  %370 = load %struct.xpvgv** %sv_any1138, align 8, !tbaa !33
  %xgv_gp1146 = getelementptr inbounds %struct.xpvgv* %370, i64 0, i32 7
  %371 = load %struct.gp** %xgv_gp1146, align 8, !tbaa !35
  br i1 %cmp1142, label %cond.true1144, label %cond.false1147

cond.true1144:                                    ; preds = %cond.false1141
  %gp_av = getelementptr inbounds %struct.gp* %371, i64 0, i32 4
  %372 = load %struct.av** %gp_av, align 8, !tbaa !52
  %373 = bitcast %struct.av* %372 to %struct.sv*
  br label %cond.end1152

cond.false1147:                                   ; preds = %cond.false1141
  %gp_hv = getelementptr inbounds %struct.gp* %371, i64 0, i32 5
  %374 = load %struct.hv** %gp_hv, align 8, !tbaa !51
  %375 = bitcast %struct.hv* %374 to %struct.sv*
  br label %cond.end1152

cond.end1152:                                     ; preds = %cond.true1144, %cond.false1147, %cond.true1137
  %cond1153 = phi %struct.sv* [ %369, %cond.true1137 ], [ %373, %cond.true1144 ], [ %375, %cond.false1147 ]
  %tobool1154 = icmp eq %struct.sv* %cond1153, null
  br i1 %tobool1154, label %for.inc1186, label %if.end1156

if.end1156:                                       ; preds = %cond.end1152
  br i1 %cmp1135, label %land.lhs.true1159, label %if.end1180

land.lhs.true1159:                                ; preds = %if.end1156
  %sv_flags1160 = getelementptr inbounds %struct.sv* %cond1153, i64 0, i32 2
  %376 = load i64* %sv_flags1160, align 8, !tbaa !10
  %and1161 = and i64 %376, 118423552
  %tobool1162 = icmp eq i64 %and1161, 0
  br i1 %tobool1162, label %for.inc1186.thread, label %if.end1180

for.inc1186.thread:                               ; preds = %land.lhs.true1159
  %inc1187305 = add nsw i64 %j.0261, 1
  br label %for.body1134

if.end1180:                                       ; preds = %land.lhs.true1159, %if.end1156
  store i64 0, i64* %nlevel, align 8, !tbaa !5
  %377 = load i64* %i909, align 8, !tbaa !5
  %call1168 = call %struct.sv* @Perl_newSVpvn(i8* %r.0, i64 %377) #2
  call void @Perl_sv_setsv_flags(%struct.sv* %call1125, %struct.sv* %call1168, i64 2) #2
  %arrayidx1169 = getelementptr inbounds [3 x i8*]* @DD_dump.entries, i64 0, i64 %j.0261
  %378 = load i8** %arrayidx1169, align 8, !tbaa !1
  %arrayidx1170 = getelementptr inbounds [3 x i64]* @DD_dump.sizes, i64 0, i64 %j.0261
  %379 = load i64* %arrayidx1170, align 8, !tbaa !5
  call void @Perl_sv_catpvn_flags(%struct.sv* %call1125, i8* %378, i64 %379, i64 2) #2
  call void @Perl_sv_catpvn_flags(%struct.sv* %call1168, i8* getelementptr inbounds ([4 x i8]* @.str26, i64 0, i64 0), i64 3, i64 2) #2
  call void @Perl_av_push(%struct.av* %postav, %struct.sv* %call1168) #2
  %call1171 = call %struct.sv* @Perl_newRV(%struct.sv* %cond1153) #2
  %380 = load i8** %sv_any1172, align 8, !tbaa !12
  %xpv_cur1173 = getelementptr inbounds i8* %380, i64 8
  %381 = bitcast i8* %xpv_cur1173 to i64*
  store i64 0, i64* %381, align 8, !tbaa !19
  %382 = load i8** %sv_any1181, align 8, !tbaa !12
  %xpv_pv1182 = bitcast i8* %382 to i8**
  %383 = load i8** %xpv_pv1182, align 8, !tbaa !21
  %xpv_cur1184 = getelementptr inbounds i8* %382, i64 8
  %384 = bitcast i8* %xpv_cur1184 to i64*
  %385 = load i64* %384, align 8, !tbaa !19
  call fastcc void @DD_dump(%struct.sv* %call1171, i8* %383, i64 %385, %struct.sv* %call1168, %struct.hv* %seenhv, %struct.av* %postav, i64* %nlevel, i64 %indent, %struct.sv* %pad, %struct.sv* %xpad, %struct.sv* %call1128, %struct.sv* %sep, %struct.sv* %pair, %struct.sv* %freezer, %struct.sv* %toaster, i64 %purity, i64 %deepcopy, i64 %quotekeys, %struct.sv* %bless, i64 %maxdepth, %struct.sv* %sortkeys)
  call void @Perl_sv_free(%struct.sv* %call1171) #2
  br label %for.inc1186

for.inc1186:                                      ; preds = %cond.end1152, %if.end1180
  %inc1187 = add nsw i64 %j.0261, 1
  %exitcond = icmp eq i64 %inc1187, 3
  br i1 %exitcond, label %for.end1188, label %for.body1134

for.end1188:                                      ; preds = %for.inc1186, %for.inc1186.us
  call void @Perl_sv_free(%struct.sv* %call1128) #2
  call void @Perl_sv_free(%struct.sv* %call1125) #2
  br label %if.end1253

if.else1190:                                      ; preds = %if.else1044
  %cmp1191 = icmp eq %struct.sv* %val, @PL_sv_undef
  %and1195 = and i64 %277, 118423552
  %tobool1196 = icmp eq i64 %and1195, 0
  %or.cond13 = or i1 %cmp1191, %tobool1196
  br i1 %or.cond13, label %if.then1197, label %integer_came_from_string

if.then1197:                                      ; preds = %if.else1190
  call void @Perl_sv_catpvn_flags(%struct.sv* %retval1, i8* getelementptr inbounds ([6 x i8]* @.str71, i64 0, i64 0), i64 5, i64 2) #2
  br label %if.end1253

integer_came_from_string:                         ; preds = %if.else1190, %lor.lhs.false1030, %cond.true1019
  %386 = phi i64 [ %277, %if.else1190 ], [ %281, %lor.lhs.false1030 ], [ %281, %cond.true1019 ]
  %and1200 = and i64 %386, 262144
  %cmp1201 = icmp eq i64 %and1200, 0
  br i1 %cmp1201, label %cond.false1208, label %cond.true1203

cond.true1203:                                    ; preds = %integer_came_from_string
  %sv_any1204 = getelementptr inbounds %struct.sv* %val, i64 0, i32 0
  %387 = load i8** %sv_any1204, align 8, !tbaa !12
  %xpv_cur1205 = getelementptr inbounds i8* %387, i64 8
  %388 = bitcast i8* %xpv_cur1205 to i64*
  %389 = load i64* %388, align 8, !tbaa !19
  store i64 %389, i64* %i909, align 8, !tbaa !5
  %xpv_pv1207 = bitcast i8* %387 to i8**
  %390 = load i8** %xpv_pv1207, align 8, !tbaa !21
  br label %cond.end1210

cond.false1208:                                   ; preds = %integer_came_from_string
  %call1209 = call i8* @Perl_sv_2pv_flags(%struct.sv* %val, i64* %i909, i64 2) #2
  %.pre285 = load i64* %sv_flags, align 8, !tbaa !10
  br label %cond.end1210

cond.end1210:                                     ; preds = %cond.false1208, %cond.true1203
  %391 = phi i64 [ %386, %cond.true1203 ], [ %.pre285, %cond.false1208 ]
  %cond1211 = phi i8* [ %390, %cond.true1203 ], [ %call1209, %cond.false1208 ]
  %and1213 = and i64 %391, 536870912
  %tobool1214 = icmp eq i64 %and1213, 0
  br i1 %tobool1214, label %if.else1223, label %land.lhs.true1215

land.lhs.true1215:                                ; preds = %cond.end1210
  %392 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !1
  %op_private1216 = getelementptr inbounds %struct.cop* %392, i64 0, i32 7
  %393 = load i8* %op_private1216, align 1, !tbaa !49
  %and1218 = and i8 %393, 8
  %tobool1219 = icmp eq i8 %and1218, 0
  br i1 %tobool1219, label %if.then1220, label %if.else1223

if.then1220:                                      ; preds = %land.lhs.true1215
  %394 = load i64* %i909, align 8, !tbaa !5
  %call1221 = call fastcc i64 @esc_q_utf8(%struct.sv* %retval1, i8* %cond1211, i64 %394)
  %395 = load i64* %i909, align 8, !tbaa !5
  %add1222 = add i64 %395, %call1221
  store i64 %add1222, i64* %i909, align 8, !tbaa !5
  br label %if.end1253

if.else1223:                                      ; preds = %land.lhs.true1215, %cond.end1210
  %sv_any1224 = getelementptr inbounds %struct.sv* %retval1, i64 0, i32 0
  %396 = load i8** %sv_any1224, align 8, !tbaa !12
  %xpv_cur1225 = getelementptr inbounds i8* %396, i64 8
  %397 = bitcast i8* %xpv_cur1225 to i64*
  %398 = load i64* %397, align 8, !tbaa !19
  %add1226 = add i64 %398, 3
  %399 = load i64* %i909, align 8, !tbaa !5
  %mul1227 = shl i64 %399, 1
  %add1228 = add i64 %add1226, %mul1227
  %call1229 = call i8* @Perl_sv_grow(%struct.sv* %retval1, i64 %add1228) #2
  %400 = load i8** %sv_any1224, align 8, !tbaa !12
  %xpv_pv1231 = bitcast i8* %400 to i8**
  %401 = load i8** %xpv_pv1231, align 8, !tbaa !21
  %xpv_cur1233 = getelementptr inbounds i8* %400, i64 8
  %402 = bitcast i8* %xpv_cur1233 to i64*
  %403 = load i64* %402, align 8, !tbaa !19
  %add.ptr1234 = getelementptr inbounds i8* %401, i64 %403
  store i8 39, i8* %add.ptr1234, align 1, !tbaa !22
  %404 = load i64* %i909, align 8, !tbaa !5
  %cmp10.i = icmp eq i64 %404, 0
  %inc1239.pre = add i64 %403, 1
  br i1 %cmp10.i, label %esc_q.exit, label %while.body.i40.preheader

while.body.i40.preheader:                         ; preds = %if.else1223
  %add.ptr1236 = getelementptr inbounds i8* %401, i64 %inc1239.pre
  br label %while.body.i40

while.body.i40:                                   ; preds = %while.body.i40.preheader, %sw.default.i
  %ret.014.i = phi i64 [ %ret.1.i, %sw.default.i ], [ 0, %while.body.i40.preheader ]
  %slen.addr.013.i = phi i64 [ %dec.i41, %sw.default.i ], [ %404, %while.body.i40.preheader ]
  %s.addr.012.i = phi i8* [ %incdec.ptr2.i, %sw.default.i ], [ %cond1211, %while.body.i40.preheader ]
  %d.addr.011.i = phi i8* [ %incdec.ptr1.i, %sw.default.i ], [ %add.ptr1236, %while.body.i40.preheader ]
  %405 = load i8* %s.addr.012.i, align 1, !tbaa !22
  %conv.i = sext i8 %405 to i32
  switch i32 %conv.i, label %sw.default.i [
    i32 39, label %sw.bb.i
    i32 92, label %sw.bb.i
  ]

sw.bb.i:                                          ; preds = %while.body.i40, %while.body.i40
  store i8 92, i8* %d.addr.011.i, align 1, !tbaa !22
  %incdec.ptr.i = getelementptr inbounds i8* %d.addr.011.i, i64 1
  %inc.i = add nsw i64 %ret.014.i, 1
  %.pre.i = load i8* %s.addr.012.i, align 1, !tbaa !22
  br label %sw.default.i

sw.default.i:                                     ; preds = %sw.bb.i, %while.body.i40
  %406 = phi i8 [ %405, %while.body.i40 ], [ %.pre.i, %sw.bb.i ]
  %d.addr.1.i = phi i8* [ %d.addr.011.i, %while.body.i40 ], [ %incdec.ptr.i, %sw.bb.i ]
  %ret.1.i = phi i64 [ %ret.014.i, %while.body.i40 ], [ %inc.i, %sw.bb.i ]
  store i8 %406, i8* %d.addr.1.i, align 1, !tbaa !22
  %incdec.ptr1.i = getelementptr inbounds i8* %d.addr.1.i, i64 1
  %incdec.ptr2.i = getelementptr inbounds i8* %s.addr.012.i, i64 1
  %dec.i41 = add i64 %slen.addr.013.i, -1
  %cmp.i42 = icmp eq i64 %dec.i41, 0
  br i1 %cmp.i42, label %esc_q.exit.loopexit, label %while.body.i40

esc_q.exit.loopexit:                              ; preds = %sw.default.i
  %.pre286 = load i64* %i909, align 8, !tbaa !5
  br label %esc_q.exit

esc_q.exit:                                       ; preds = %if.else1223, %esc_q.exit.loopexit
  %407 = phi i64 [ %.pre286, %esc_q.exit.loopexit ], [ 0, %if.else1223 ]
  %ret.0.lcssa.i = phi i64 [ %ret.1.i, %esc_q.exit.loopexit ], [ 0, %if.else1223 ]
  %add1238 = add i64 %407, %ret.0.lcssa.i
  %inc1240 = add i64 %add1238, 2
  store i64 %inc1240, i64* %i909, align 8, !tbaa !5
  %add.ptr1234.sum1 = add i64 %inc1239.pre, %add1238
  %arrayidx1241 = getelementptr inbounds i8* %401, i64 %add.ptr1234.sum1
  store i8 39, i8* %arrayidx1241, align 1, !tbaa !22
  %408 = load i64* %i909, align 8, !tbaa !5
  %add.ptr1234.sum2 = add i64 %408, %403
  %arrayidx1242 = getelementptr inbounds i8* %401, i64 %add.ptr1234.sum2
  store i8 0, i8* %arrayidx1242, align 1, !tbaa !22
  %409 = load i8** %sv_any1224, align 8, !tbaa !12
  %xpv_cur1245 = getelementptr inbounds i8* %409, i64 8
  %410 = bitcast i8* %xpv_cur1245 to i64*
  %411 = load i64* %410, align 8, !tbaa !19
  %412 = load i64* %i909, align 8, !tbaa !5
  %add1246 = add i64 %412, %411
  store i64 %add1246, i64* %410, align 8, !tbaa !19
  br label %if.end1253

if.end1253:                                       ; preds = %if.end1114, %if.else1041, %if.then1039, %if.then1197, %esc_q.exit, %if.then1220, %for.end1188, %if.end906
  %idlen.1 = phi i64 [ %call123, %if.end906 ], [ %idlen.0, %esc_q.exit ], [ %idlen.0, %if.then1220 ], [ %idlen.0, %if.then1039 ], [ %idlen.0, %if.else1041 ], [ %idlen.0, %for.end1188 ], [ %idlen.0, %if.end1114 ], [ %idlen.0, %if.then1197 ]
  %seenentry.3 = phi %struct.av* [ %seenentry.0, %if.end906 ], [ %seenentry.2, %esc_q.exit ], [ %seenentry.2, %if.then1220 ], [ %seenentry.2, %if.then1039 ], [ %seenentry.2, %if.else1041 ], [ %seenentry.2, %for.end1188 ], [ %seenentry.2, %if.end1114 ], [ %seenentry.2, %if.then1197 ]
  %tobool1254 = icmp eq i64 %idlen.1, 0
  br i1 %tobool1254, label %cleanup, label %if.then1255

if.then1255:                                      ; preds = %if.end1253
  %tobool1256 = icmp eq i64 %deepcopy, 0
  br i1 %tobool1256, label %if.else1260, label %if.then1257

if.then1257:                                      ; preds = %if.then1255
  %call1259 = call %struct.sv* @Perl_hv_delete(%struct.hv* %seenhv, i8* %1, i64 %idlen.1, i64 2) #2
  br label %cleanup

if.else1260:                                      ; preds = %if.then1255
  %tobool1261 = icmp ne i64 %namelen, 0
  %tobool1263 = icmp ne %struct.av* %seenentry.3, null
  %or.cond1274 = and i1 %tobool1261, %tobool1263
  br i1 %or.cond1274, label %if.then1264, label %cleanup

if.then1264:                                      ; preds = %if.else1260
  %call1266 = call %struct.sv** @Perl_av_fetch(%struct.av* %seenentry.3, i64 2, i64 1) #2
  %413 = load %struct.sv** %call1266, align 8, !tbaa !1
  call void @Perl_sv_setiv(%struct.sv* %413, i64 1) #2
  br label %cleanup

cleanup:                                          ; preds = %entry, %if.else1260, %if.then1264, %if.then1257, %if.end1253, %if.end169, %if.then196, %if.else201, %if.else203, %if.then954, %cond.end304, %while.end, %if.else206
  call void @llvm.lifetime.end(i64 128, i8* %1) #2
  call void @llvm.lifetime.end(i64 128, i8* %0) #2
  ret void
}

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #2

; Function Attrs: nounwind uwtable
define void @boot_Data__Dumper(%struct.cv* nocapture readnone %cv) #0 {
entry:
  %0 = load i64** @PL_markstack_ptr, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds i64* %0, i64 -1
  store i64* %incdec.ptr, i64** @PL_markstack_ptr, align 8, !tbaa !1
  %1 = load i64* %0, align 8, !tbaa !5
  %add.ptr.idx = shl nuw i64 %1, 3
  %sub.ptr.div = ashr exact i64 %add.ptr.idx, 3
  %add = add nsw i64 %sub.ptr.div, 1
  %call = tail call %struct.cv* @Perl_newXS(i8* getelementptr inbounds ([21 x i8]* @.str30, i64 0, i64 0), void (%struct.cv*)* @XS_Data__Dumper_Dumpxs, i8* getelementptr inbounds ([9 x i8]* @.str29, i64 0, i64 0)) #2
  %2 = bitcast %struct.cv* %call to %struct.sv*
  tail call void @Perl_sv_setpv(%struct.sv* %2, i8* getelementptr inbounds ([5 x i8]* @.str31, i64 0, i64 0)) #2
  %3 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds %struct.sv** %3, i64 %add
  store %struct.sv* @PL_sv_yes, %struct.sv** %arrayidx, align 8, !tbaa !1
  %4 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !1
  %add.ptr6 = getelementptr inbounds %struct.sv** %4, i64 %add
  store %struct.sv** %add.ptr6, %struct.sv*** @PL_stack_sp, align 8, !tbaa !1
  ret void
}

declare void @Perl_sv_setpv(%struct.sv*, i8*) #1

declare %struct.cv* @Perl_newXS(i8*, void (%struct.cv*)*, i8*) #1

declare i32 @Perl_mg_get(%struct.sv*) #1

declare %struct.gv* @Perl_gv_fetchmeth(%struct.hv*, i8*, i64, i64) #1

declare void @Perl_warn(i8*, ...) #1

declare void @Perl_av_push(%struct.av*, %struct.sv*) #1

declare %struct.sv** @Perl_hv_store(%struct.hv*, i8*, i64, %struct.sv*, i64) #1

declare %struct.sv* @Perl_newRV(%struct.sv*) #1

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) #4

declare i8* @Perl_sv_2pv_flags(%struct.sv*, i64*, i64) #1

; Function Attrs: nounwind readonly
declare i8* @strchr(i8*, i32) #4

declare %struct.sv* @Perl_newSViv(i64) #1

declare i8* @Perl_safesysmalloc(i64) #1

; Function Attrs: nounwind
declare i8* @strcpy(i8*, i8* nocapture readonly) #3

declare i8* @Perl_instr(i8*, i8*) #1

declare void @Perl_sv_setiv(%struct.sv*, i64) #1

declare void @Perl_safesysfree(i8*) #1

declare i64 @Perl_hv_iterinit(%struct.hv*) #1

declare %struct.he* @Perl_hv_iternext(%struct.hv*) #1

declare %struct.sv* @Perl_hv_iterkeysv(%struct.he*) #1

declare void @Perl_sortsv(%struct.sv**, i64, i64 (%struct.sv*, %struct.sv*)*) #1

declare i64 @Perl_sv_cmp(%struct.sv*, %struct.sv*) #1

declare i64 @Perl_call_sv(%struct.sv*, i64) #1

declare %struct.sv* @Perl_sv_mortalcopy(%struct.sv*) #1

declare %struct.sv* @Perl_hv_iterval(%struct.hv*, %struct.he*) #1

; Function Attrs: nounwind uwtable
define internal fastcc i64 @esc_q_utf8(%struct.sv* %sv, i8* %src, i64 %slen) #0 {
entry:
  %sv_any = getelementptr inbounds %struct.sv* %sv, i64 0, i32 0
  %0 = load i8** %sv_any, align 8, !tbaa !12
  %xpv_cur = getelementptr inbounds i8* %0, i64 8
  %1 = bitcast i8* %xpv_cur to i64*
  %2 = load i64* %1, align 8, !tbaa !19
  %add.ptr = getelementptr inbounds i8* %src, i64 %slen
  %cmp202 = icmp sgt i64 %slen, 0
  br i1 %cmp202, label %for.body, label %for.end.thread

for.end.thread:                                   ; preds = %entry
  %add37215 = add i64 %2, 3
  br label %if.else88

for.body:                                         ; preds = %entry, %for.inc
  %s.0208 = phi i8* [ %add.ptr35, %for.inc ], [ %src, %entry ]
  %grow.0207 = phi i64 [ %grow.1, %for.inc ], [ 0, %entry ]
  %normal.0206 = phi i64 [ %normal.1, %for.inc ], [ 0, %entry ]
  %qq_escapables.0205 = phi i64 [ %qq_escapables.1, %for.inc ], [ 0, %entry ]
  %single_quotes.0204 = phi i64 [ %single_quotes.1, %for.inc ], [ 0, %entry ]
  %backslashes.0203 = phi i64 [ %backslashes.1, %for.inc ], [ 0, %entry ]
  %call = tail call i64 @Perl_utf8_to_uvchr(i8* %s.0208, i64* null) #2
  %cmp1 = icmp ugt i64 %call, 127
  br i1 %cmp1, label %if.then, label %if.else

if.then:                                          ; preds = %for.body
  %cmp2 = icmp ult i64 %call, 256
  br i1 %cmp2, label %cond.end8, label %cond.false

cond.false:                                       ; preds = %if.then
  %cmp3 = icmp ult i64 %call, 4096
  br i1 %cmp3, label %cond.end8, label %cond.false5

cond.false5:                                      ; preds = %cond.false
  %cmp6 = icmp ult i64 %call, 65536
  %phitmp191 = select i1 %cmp6, i64 8, i64 12
  br label %cond.end8

cond.end8:                                        ; preds = %cond.false5, %cond.false, %if.then
  %cond9 = phi i64 [ 6, %if.then ], [ %phitmp191, %cond.false5 ], [ 7, %cond.false ]
  %add10 = add i64 %cond9, %grow.0207
  br label %for.inc

if.else:                                          ; preds = %for.body
  switch i64 %call, label %if.else29 [
    i64 92, label %if.then13
    i64 39, label %if.then17
    i64 64, label %if.then27
    i64 36, label %if.then27
    i64 34, label %if.then27
  ]

if.then13:                                        ; preds = %if.else
  %inc = add i64 %backslashes.0203, 1
  br label %for.inc

if.then17:                                        ; preds = %if.else
  %inc18 = add i64 %single_quotes.0204, 1
  br label %for.inc

if.then27:                                        ; preds = %if.else, %if.else, %if.else
  %inc28 = add i64 %qq_escapables.0205, 1
  br label %for.inc

if.else29:                                        ; preds = %if.else
  %inc30 = add i64 %normal.0206, 1
  br label %for.inc

for.inc:                                          ; preds = %cond.end8, %if.then17, %if.else29, %if.then27, %if.then13
  %backslashes.1 = phi i64 [ %backslashes.0203, %cond.end8 ], [ %inc, %if.then13 ], [ %backslashes.0203, %if.then17 ], [ %backslashes.0203, %if.then27 ], [ %backslashes.0203, %if.else29 ]
  %single_quotes.1 = phi i64 [ %single_quotes.0204, %cond.end8 ], [ %single_quotes.0204, %if.then13 ], [ %inc18, %if.then17 ], [ %single_quotes.0204, %if.then27 ], [ %single_quotes.0204, %if.else29 ]
  %qq_escapables.1 = phi i64 [ %qq_escapables.0205, %cond.end8 ], [ %qq_escapables.0205, %if.then13 ], [ %qq_escapables.0205, %if.then17 ], [ %inc28, %if.then27 ], [ %qq_escapables.0205, %if.else29 ]
  %normal.1 = phi i64 [ %normal.0206, %cond.end8 ], [ %normal.0206, %if.then13 ], [ %normal.0206, %if.then17 ], [ %normal.0206, %if.then27 ], [ %inc30, %if.else29 ]
  %grow.1 = phi i64 [ %add10, %cond.end8 ], [ %grow.0207, %if.then13 ], [ %grow.0207, %if.then17 ], [ %grow.0207, %if.then27 ], [ %grow.0207, %if.else29 ]
  %3 = load i8* %s.0208, align 1, !tbaa !22
  %idxprom = zext i8 %3 to i64
  %arrayidx = getelementptr inbounds [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom
  %4 = load i8* %arrayidx, align 1, !tbaa !22
  %idx.ext = zext i8 %4 to i64
  %add.ptr35 = getelementptr inbounds i8* %s.0208, i64 %idx.ext
  %cmp = icmp ult i8* %add.ptr35, %add.ptr
  br i1 %cmp, label %for.body, label %for.end

for.end:                                          ; preds = %for.inc
  %tobool = icmp eq i64 %grow.1, 0
  %add37 = add i64 %2, 3
  br i1 %tobool, label %if.else88, label %if.then36

if.then36:                                        ; preds = %for.end
  %tmp = add i64 %qq_escapables.1, %backslashes.1
  %tmp192 = shl i64 %tmp, 1
  %add39 = add i64 %single_quotes.1, %add37
  %add40 = add i64 %add39, %normal.1
  %add42 = add i64 %add40, %grow.1
  %add43 = add i64 %add42, %tmp192
  %call44 = tail call i8* @Perl_sv_grow(%struct.sv* %sv, i64 %add43) #2
  %5 = load i8** %sv_any, align 8, !tbaa !12
  %xpv_pv = bitcast i8* %5 to i8**
  %6 = load i8** %xpv_pv, align 8, !tbaa !21
  %add.ptr46 = getelementptr inbounds i8* %6, i64 %2
  %add.ptr46.sum = add i64 %2, 1
  %incdec.ptr = getelementptr inbounds i8* %6, i64 %add.ptr46.sum
  store i8 34, i8* %add.ptr46, align 1, !tbaa !22
  br i1 %cmp202, label %for.body50, label %for.end86

for.body50:                                       ; preds = %if.then36, %for.inc80
  %s.1200 = phi i8* [ %add.ptr85, %for.inc80 ], [ %src, %if.then36 ]
  %r.0199 = phi i8* [ %r.1, %for.inc80 ], [ %incdec.ptr, %if.then36 ]
  %call52 = tail call i64 @Perl_utf8_to_uvchr(i8* %s.1200, i64* null) #2
  switch i64 %call52, label %if.else68 [
    i64 92, label %if.then64
    i64 64, label %if.then64
    i64 36, label %if.then64
    i64 34, label %if.then64
  ]

if.then64:                                        ; preds = %for.body50, %for.body50, %for.body50, %for.body50
  %incdec.ptr65 = getelementptr inbounds i8* %r.0199, i64 1
  store i8 92, i8* %r.0199, align 1, !tbaa !22
  %conv66 = trunc i64 %call52 to i8
  %incdec.ptr67 = getelementptr inbounds i8* %r.0199, i64 2
  store i8 %conv66, i8* %incdec.ptr65, align 1, !tbaa !22
  br label %for.inc80

if.else68:                                        ; preds = %for.body50
  %cmp69 = icmp ult i64 %call52, 128
  br i1 %cmp69, label %if.then71, label %if.else74

if.then71:                                        ; preds = %if.else68
  %conv72 = trunc i64 %call52 to i8
  %incdec.ptr73 = getelementptr inbounds i8* %r.0199, i64 1
  store i8 %conv72, i8* %r.0199, align 1, !tbaa !22
  br label %for.inc80

if.else74:                                        ; preds = %if.else68
  %call75 = tail call i32 (i8*, i8*, ...)* @sprintf(i8* %r.0199, i8* getelementptr inbounds ([8 x i8]* @.str72, i64 0, i64 0), i64 %call52) #2
  %call76 = tail call i64 @strlen(i8* %r.0199) #2
  %add.ptr77 = getelementptr inbounds i8* %r.0199, i64 %call76
  br label %for.inc80

for.inc80:                                        ; preds = %if.then64, %if.else74, %if.then71
  %r.1 = phi i8* [ %incdec.ptr67, %if.then64 ], [ %incdec.ptr73, %if.then71 ], [ %add.ptr77, %if.else74 ]
  %7 = load i8* %s.1200, align 1, !tbaa !22
  %idxprom81 = zext i8 %7 to i64
  %arrayidx82 = getelementptr inbounds [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom81
  %8 = load i8* %arrayidx82, align 1, !tbaa !22
  %idx.ext84 = zext i8 %8 to i64
  %add.ptr85 = getelementptr inbounds i8* %s.1200, i64 %idx.ext84
  %cmp48 = icmp ult i8* %add.ptr85, %add.ptr
  br i1 %cmp48, label %for.body50, label %for.end86

for.end86:                                        ; preds = %for.inc80, %if.then36
  %r.0.lcssa = phi i8* [ %incdec.ptr, %if.then36 ], [ %r.1, %for.inc80 ]
  store i8 34, i8* %r.0.lcssa, align 1, !tbaa !22
  br label %if.end121

if.else88:                                        ; preds = %for.end.thread, %for.end
  %add37220 = phi i64 [ %add37215, %for.end.thread ], [ %add37, %for.end ]
  %backslashes.0.lcssa219 = phi i64 [ 0, %for.end.thread ], [ %backslashes.1, %for.end ]
  %single_quotes.0.lcssa218 = phi i64 [ 0, %for.end.thread ], [ %single_quotes.1, %for.end ]
  %qq_escapables.0.lcssa217 = phi i64 [ 0, %for.end.thread ], [ %qq_escapables.1, %for.end ]
  %normal.0.lcssa216 = phi i64 [ 0, %for.end.thread ], [ %normal.1, %for.end ]
  %tmp193 = add i64 %single_quotes.0.lcssa218, %backslashes.0.lcssa219
  %tmp194 = shl i64 %tmp193, 1
  %add93 = add i64 %qq_escapables.0.lcssa217, %add37220
  %add94 = add i64 %add93, %normal.0.lcssa216
  %add95 = add i64 %add94, %tmp194
  %call96 = tail call i8* @Perl_sv_grow(%struct.sv* %sv, i64 %add95) #2
  %9 = load i8** %sv_any, align 8, !tbaa !12
  %xpv_pv98 = bitcast i8* %9 to i8**
  %10 = load i8** %xpv_pv98, align 8, !tbaa !21
  %add.ptr99 = getelementptr inbounds i8* %10, i64 %2
  %add.ptr99.sum = add i64 %2, 1
  %incdec.ptr100 = getelementptr inbounds i8* %10, i64 %add.ptr99.sum
  store i8 39, i8* %add.ptr99, align 1, !tbaa !22
  br i1 %cmp202, label %for.body104, label %for.end119

for.body104:                                      ; preds = %if.else88, %if.end115
  %s.2197 = phi i8* [ %incdec.ptr118, %if.end115 ], [ %src, %if.else88 ]
  %r.2196 = phi i8* [ %incdec.ptr116, %if.end115 ], [ %incdec.ptr100, %if.else88 ]
  %11 = load i8* %s.2197, align 1, !tbaa !22
  switch i8 %11, label %if.end115 [
    i8 39, label %if.then113
    i8 92, label %if.then113
  ]

if.then113:                                       ; preds = %for.body104, %for.body104
  %incdec.ptr114 = getelementptr inbounds i8* %r.2196, i64 1
  store i8 92, i8* %r.2196, align 1, !tbaa !22
  br label %if.end115

if.end115:                                        ; preds = %for.body104, %if.then113
  %r.3 = phi i8* [ %incdec.ptr114, %if.then113 ], [ %r.2196, %for.body104 ]
  %incdec.ptr116 = getelementptr inbounds i8* %r.3, i64 1
  store i8 %11, i8* %r.3, align 1, !tbaa !22
  %incdec.ptr118 = getelementptr inbounds i8* %s.2197, i64 1
  %cmp102 = icmp ult i8* %incdec.ptr118, %add.ptr
  br i1 %cmp102, label %for.body104, label %for.end119

for.end119:                                       ; preds = %if.end115, %if.else88
  %r.2.lcssa = phi i8* [ %incdec.ptr100, %if.else88 ], [ %incdec.ptr116, %if.end115 ]
  store i8 39, i8* %r.2.lcssa, align 1, !tbaa !22
  br label %if.end121

if.end121:                                        ; preds = %for.end119, %for.end86
  %rstart.0 = phi i8* [ %add.ptr46, %for.end86 ], [ %add.ptr99, %for.end119 ]
  %r.0.pn = phi i8* [ %r.0.lcssa, %for.end86 ], [ %r.2.lcssa, %for.end119 ]
  %r.4 = getelementptr inbounds i8* %r.0.pn, i64 1
  store i8 0, i8* %r.4, align 1, !tbaa !22
  %sub.ptr.lhs.cast = ptrtoint i8* %r.4 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %rstart.0 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %add122 = add i64 %sub.ptr.sub, %2
  %12 = load i8** %sv_any, align 8, !tbaa !12
  %xpv_cur124 = getelementptr inbounds i8* %12, i64 8
  %13 = bitcast i8* %xpv_cur124 to i64*
  store i64 %add122, i64* %13, align 8, !tbaa !19
  ret i64 %sub.ptr.sub
}

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #2

; Function Attrs: nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) #4

declare void @Perl_sv_catpvf(%struct.sv*, i8*, ...) #1

; Function Attrs: nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) #4

declare i8* @Perl_sv_grow(%struct.sv*, i64) #1

declare %struct.sv* @Perl_hv_delete(%struct.hv*, i8*, i64, i64) #1

declare i64 @Perl_utf8_to_uvchr(i8*, i64*) #1

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #2

attributes #0 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }
attributes #3 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = metadata !{metadata !"clang version 3.5 (trunk)"}
!1 = metadata !{metadata !2, metadata !2, i64 0}
!2 = metadata !{metadata !"any pointer", metadata !3, i64 0}
!3 = metadata !{metadata !"omnipotent char", metadata !4, i64 0}
!4 = metadata !{metadata !"Simple C/C++ TBAA"}
!5 = metadata !{metadata !6, metadata !6, i64 0}
!6 = metadata !{metadata !"long", metadata !3, i64 0}
!7 = metadata !{metadata !8, metadata !3, i64 36}
!8 = metadata !{metadata !"op", metadata !2, i64 0, metadata !2, i64 8, metadata !2, i64 16, metadata !6, i64 24, metadata !9, i64 32, metadata !9, i64 34, metadata !3, i64 36, metadata !3, i64 37}
!9 = metadata !{metadata !"short", metadata !3, i64 0}
!10 = metadata !{metadata !11, metadata !6, i64 16}
!11 = metadata !{metadata !"sv", metadata !2, i64 0, metadata !6, i64 8, metadata !6, i64 16}
!12 = metadata !{metadata !11, metadata !2, i64 0}
!13 = metadata !{metadata !14, metadata !2, i64 0}
!14 = metadata !{metadata !"xrv", metadata !2, i64 0}
!15 = metadata !{metadata !16, metadata !6, i64 16}
!16 = metadata !{metadata !"hv", metadata !2, i64 0, metadata !6, i64 8, metadata !6, i64 16}
!17 = metadata !{metadata !18, metadata !6, i64 24}
!18 = metadata !{metadata !"xpviv", metadata !2, i64 0, metadata !6, i64 8, metadata !6, i64 16, metadata !6, i64 24}
!19 = metadata !{metadata !20, metadata !6, i64 8}
!20 = metadata !{metadata !"xpv", metadata !2, i64 0, metadata !6, i64 8, metadata !6, i64 16}
!21 = metadata !{metadata !20, metadata !2, i64 0}
!22 = metadata !{metadata !3, metadata !3, i64 0}
!23 = metadata !{metadata !24, metadata !25, i64 32}
!24 = metadata !{metadata !"xpvnv", metadata !2, i64 0, metadata !6, i64 8, metadata !6, i64 16, metadata !6, i64 24, metadata !25, i64 32}
!25 = metadata !{metadata !"double", metadata !3, i64 0}
!26 = metadata !{metadata !20, metadata !6, i64 16}
!27 = metadata !{metadata !27, metadata !28, metadata !29}
!28 = metadata !{metadata !"llvm.vectorizer.width", i32 1}
!29 = metadata !{metadata !"llvm.vectorizer.unroll", i32 1}
!30 = metadata !{metadata !30, metadata !28, metadata !29}
!31 = metadata !{metadata !32, metadata !2, i64 48}
!32 = metadata !{metadata !"xpvmg", metadata !2, i64 0, metadata !6, i64 8, metadata !6, i64 16, metadata !6, i64 24, metadata !25, i64 32, metadata !2, i64 40, metadata !2, i64 48}
!33 = metadata !{metadata !34, metadata !2, i64 0}
!34 = metadata !{metadata !"gv", metadata !2, i64 0, metadata !6, i64 8, metadata !6, i64 16}
!35 = metadata !{metadata !36, metadata !2, i64 56}
!36 = metadata !{metadata !"xpvgv", metadata !2, i64 0, metadata !6, i64 8, metadata !6, i64 16, metadata !6, i64 24, metadata !25, i64 32, metadata !2, i64 40, metadata !2, i64 48, metadata !2, i64 56, metadata !2, i64 64, metadata !6, i64 72, metadata !2, i64 80, metadata !3, i64 88}
!37 = metadata !{metadata !38, metadata !2, i64 0}
!38 = metadata !{metadata !"gp", metadata !2, i64 0, metadata !6, i64 8, metadata !2, i64 16, metadata !2, i64 24, metadata !2, i64 32, metadata !2, i64 40, metadata !2, i64 48, metadata !2, i64 56, metadata !6, i64 64, metadata !6, i64 72, metadata !6, i64 80, metadata !2, i64 88}
!39 = metadata !{metadata !16, metadata !2, i64 0}
!40 = metadata !{metadata !41, metadata !2, i64 80}
!41 = metadata !{metadata !"xpvhv", metadata !2, i64 0, metadata !6, i64 8, metadata !6, i64 16, metadata !6, i64 24, metadata !25, i64 32, metadata !2, i64 40, metadata !2, i64 48, metadata !6, i64 56, metadata !2, i64 64, metadata !2, i64 72, metadata !2, i64 80}
!42 = metadata !{metadata !11, metadata !6, i64 8}
!43 = metadata !{metadata !43, metadata !28, metadata !29}
!44 = metadata !{metadata !44, metadata !28, metadata !29}
!45 = metadata !{metadata !46, metadata !2, i64 0}
!46 = metadata !{metadata !"av", metadata !2, i64 0, metadata !6, i64 8, metadata !6, i64 16}
!47 = metadata !{metadata !48, metadata !2, i64 0}
!48 = metadata !{metadata !"xpvav", metadata !2, i64 0, metadata !6, i64 8, metadata !6, i64 16, metadata !6, i64 24, metadata !25, i64 32, metadata !2, i64 40, metadata !2, i64 48, metadata !2, i64 56, metadata !2, i64 64, metadata !3, i64 72}
!49 = metadata !{metadata !50, metadata !3, i64 37}
!50 = metadata !{metadata !"cop", metadata !2, i64 0, metadata !2, i64 8, metadata !2, i64 16, metadata !6, i64 24, metadata !9, i64 32, metadata !9, i64 34, metadata !3, i64 36, metadata !3, i64 37, metadata !2, i64 40, metadata !2, i64 48, metadata !2, i64 56, metadata !6, i64 64, metadata !6, i64 72, metadata !6, i64 80, metadata !2, i64 88, metadata !2, i64 96}
!51 = metadata !{metadata !38, metadata !2, i64 40}
!52 = metadata !{metadata !38, metadata !2, i64 32}
!53 = metadata !{metadata !53, metadata !28, metadata !29}
!54 = metadata !{metadata !54, metadata !28, metadata !29}
