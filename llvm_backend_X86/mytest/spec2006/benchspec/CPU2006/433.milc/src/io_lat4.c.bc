; ModuleID = 'io_lat4.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type opaque
%struct.site = type { i16, i16, i16, i16, i8, i32, %struct.double_prn, i32, [4 x %struct.su3_matrix], [4 x %struct.su3_matrix], [4 x %struct.su3_matrix], [4 x %struct.anti_hermitmat], [4 x double], %struct.su3_vector, %struct.su3_vector, %struct.su3_vector, %struct.su3_vector, %struct.su3_vector, %struct.su3_vector, [4 x %struct.su3_vector], [4 x %struct.su3_vector], %struct.su3_vector, %struct.su3_matrix, %struct.su3_matrix }
%struct.double_prn = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, double }
%struct.anti_hermitmat = type { %struct.complex, %struct.complex, %struct.complex, double, double, double, double }
%struct.complex = type { double, double }
%struct.su3_vector = type { [3 x %struct.complex] }
%struct.su3_matrix = type { [3 x [3 x %struct.complex]] }
%struct.QCDheader = type { i32, i8**, i8** }
%struct.gauge_header = type { i32, [64 x i8], [4 x i32], i32, i32 }
%struct.gauge_file = type { %struct._IO_FILE*, %struct.gauge_header*, i8*, i32, i32*, i32, %struct.gauge_check }
%struct.gauge_check = type { i32, i32 }
%struct.anon = type { i32, [200 x i8], i32, [2 x double] }
%struct.anon.0 = type { i16, i16, i16, i16, [4 x %struct.su3_matrix] }
%struct.anon.1 = type { i16, i16, i16, i16, [4 x %struct.su3_matrix] }

@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str1 = private unnamed_addr constant [3 x i8] c"%x\00", align 1
@.str2 = private unnamed_addr constant [4 x i8] c"%lf\00", align 1
@.str5 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str6 = private unnamed_addr constant [12 x i8] c"END_HEADER\0A\00", align 1
@.str7 = private unnamed_addr constant [31 x i8] c"%s: Node %d %s write error %d\0A\00", align 1
@this_node = external global i32
@stdout = external constant %struct._IO_FILE*
@.str8 = private unnamed_addr constant [39 x i8] c"%s: Node %d %s descrip,write error %d\0A\00", align 1
@.str9 = private unnamed_addr constant [30 x i8] c"%s: Node %d %s read error %d\0A\00", align 1
@pwrite_gauge_hdr.myname = private unnamed_addr constant [17 x i8] c"pwrite_gauge_hdr\00", align 16
@.str10 = private unnamed_addr constant [13 x i8] c"magic_number\00", align 1
@.str11 = private unnamed_addr constant [11 x i8] c"dimensions\00", align 1
@.str12 = private unnamed_addr constant [11 x i8] c"time_stamp\00", align 1
@.str13 = private unnamed_addr constant [6 x i8] c"order\00", align 1
@swrite_gauge_hdr.myname = private unnamed_addr constant [17 x i8] c"swrite_gauge_hdr\00", align 16
@gauge_info_keyword = external global [0 x i8*]
@.str14 = private unnamed_addr constant [57 x i8] c"write_gauge_info_item: WARNING: keyword %s not in table\0A\00", align 1
@.str15 = private unnamed_addr constant [5 x i8] c"%s =\00", align 1
@.str16 = private unnamed_addr constant [5 x i8] c"[%d]\00", align 1
@.str23 = private unnamed_addr constant [50 x i8] c"write_gauge_info_item: Unrecognized data type %s\0A\00", align 1
@.str25 = private unnamed_addr constant [6 x i8] c".info\00", align 1
@.str26 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str27 = private unnamed_addr constant [54 x i8] c"write_gauge_info_file: Can't open ascii info file %s\0A\00", align 1
@.str28 = private unnamed_addr constant [5 x i8] c"\22%s\22\00", align 1
@.str29 = private unnamed_addr constant [6 x i8] c"%x %x\00", align 1
@.str30 = private unnamed_addr constant [10 x i8] c"checksums\00", align 1
@.str31 = private unnamed_addr constant [3 x i8] c"nx\00", align 1
@nx = external global i32
@.str32 = private unnamed_addr constant [3 x i8] c"ny\00", align 1
@ny = external global i32
@.str33 = private unnamed_addr constant [3 x i8] c"nz\00", align 1
@nz = external global i32
@.str34 = private unnamed_addr constant [3 x i8] c"nt\00", align 1
@nt = external global i32
@.str35 = private unnamed_addr constant [20 x i8] c"Wrote info file %s\0A\00", align 1
@setup_input_gauge_file.myname = private unnamed_addr constant [23 x i8] c"setup_input_gauge_file\00", align 16
@.str36 = private unnamed_addr constant [21 x i8] c"%s: Can't malloc gf\0A\00", align 1
@.str37 = private unnamed_addr constant [21 x i8] c"%s: Can't malloc gh\0A\00", align 1
@setup_output_gauge_file.myname = private unnamed_addr constant [24 x i8] c"setup_output_gauge_file\00", align 16
@w_serial_i.myname = private unnamed_addr constant [11 x i8] c"w_serial_i\00", align 1
@.str38 = private unnamed_addr constant [3 x i8] c"wb\00", align 1
@.str39 = private unnamed_addr constant [42 x i8] c"%s: Node %d can't open file %s, error %d\0A\00", align 1
@read_checksum.myname = private unnamed_addr constant [14 x i8] c"read_checksum\00", align 1
@.str40 = private unnamed_addr constant [9 x i8] c"checksum\00", align 1
@.str41 = private unnamed_addr constant [54 x i8] c"%s: Checksum violation. Computed %x %x.  Read %x %x.\0A\00", align 1
@.str42 = private unnamed_addr constant [20 x i8] c"Checksums %x %x OK\0A\00", align 1
@write_checksum.myname = private unnamed_addr constant [15 x i8] c"write_checksum\00", align 1
@.str43 = private unnamed_addr constant [17 x i8] c"Checksums %x %x\0A\00", align 1
@.str46 = private unnamed_addr constant [55 x i8] c"w_serial: Node %d fseeko %lld failed error %d file %s\0A\00", align 1
@sites_on_node = external global i32
@lattice = external global %struct.site*
@volume = external global i32
@.str47 = private unnamed_addr constant [62 x i8] c"w_serial: Node %d gauge configuration write error %d file %s\0A\00", align 1
@.str48 = private unnamed_addr constant [54 x i8] c"Saved gauge configuration serially to binary file %s\0A\00", align 1
@.str49 = private unnamed_addr constant [15 x i8] c"Time stamp %s\0A\00", align 1
@.str52 = private unnamed_addr constant [49 x i8] c"read_site_list: Node %d site list read error %d\0A\00", align 1
@read_v3_gauge_hdr.myname = private unnamed_addr constant [18 x i8] c"read_v3_gauge_hdr\00", align 16
@.str54 = private unnamed_addr constant [13 x i8] c"magic number\00", align 1
@.str58 = private unnamed_addr constant [53 x i8] c"requires size of int32type(%d) = size of double(%d)\0A\00", align 1
@.str59 = private unnamed_addr constant [49 x i8] c"read_v3_gauge_hdr: Incorrect lattice dimensions \00", align 1
@.str60 = private unnamed_addr constant [4 x i8] c"%d \00", align 1
@.str61 = private unnamed_addr constant [3 x i8] c"c1\00", align 1
@.str62 = private unnamed_addr constant [3 x i8] c"c2\00", align 1
@.str63 = private unnamed_addr constant [40 x i8] c"Old format header parameters are %f %f\0A\00", align 1
@read_1996_gauge_hdr.myname = private unnamed_addr constant [20 x i8] c"read_1996_gauge_hdr\00", align 16
@.str67 = private unnamed_addr constant [51 x i8] c"read_1996_gauge_hdr: Incorrect lattice dimensions \00", align 1
@.str68 = private unnamed_addr constant [12 x i8] c"header size\00", align 1
@.str69 = private unnamed_addr constant [11 x i8] c"n_descript\00", align 1
@.str70 = private unnamed_addr constant [55 x i8] c"read_1996_gauge_hdr: gauge field descriptor length %d\0A\00", align 1
@.str71 = private unnamed_addr constant [29 x i8] c" exceeds allocated space %d\0A\00", align 1
@.str72 = private unnamed_addr constant [8 x i8] c"descrip\00", align 1
@.str73 = private unnamed_addr constant [26 x i8] c"gauge_field.descript: %s\0A\00", align 1
@.str74 = private unnamed_addr constant [8 x i8] c"n_param\00", align 1
@.str75 = private unnamed_addr constant [61 x i8] c"read_1996_gauge_hdr: gauge field parameter vector length %d\0A\00", align 1
@.str76 = private unnamed_addr constant [12 x i8] c"gauge param\00", align 1
@.str77 = private unnamed_addr constant [28 x i8] c"gauge_field.param[%d] = %f\0A\00", align 1
@read_gauge_hdr.myname = private unnamed_addr constant [15 x i8] c"read_gauge_hdr\00", align 1
@.str80 = private unnamed_addr constant [24 x i8] c"%s: Can't byte reverse\0A\00", align 1
@.str82 = private unnamed_addr constant [67 x i8] c"%s: Unrecognized magic number in gauge configuration file header.\0A\00", align 1
@.str83 = private unnamed_addr constant [25 x i8] c"Expected %x but read %x\0A\00", align 1
@.str84 = private unnamed_addr constant [25 x i8] c"Expected %s but read %s\0A\00", align 1
@stderr = external constant %struct._IO_FILE*
@.str85 = private unnamed_addr constant [56 x i8] c"%s: Must use reload_serial with archive files for now.\0A\00", align 1
@.str86 = private unnamed_addr constant [12 x i8] c"DIMENSION_1\00", align 1
@.str87 = private unnamed_addr constant [24 x i8] c"DIMENSION_1 not present\00", align 1
@.str88 = private unnamed_addr constant [12 x i8] c"DIMENSION_2\00", align 1
@.str89 = private unnamed_addr constant [24 x i8] c"DIMENSION_2 not present\00", align 1
@.str90 = private unnamed_addr constant [12 x i8] c"DIMENSION_3\00", align 1
@.str91 = private unnamed_addr constant [24 x i8] c"DIMENSION_3 not present\00", align 1
@.str92 = private unnamed_addr constant [12 x i8] c"DIMENSION_4\00", align 1
@.str93 = private unnamed_addr constant [24 x i8] c"DIMENSION_4 not present\00", align 1
@.str94 = private unnamed_addr constant [9 x i8] c"CHECKSUM\00", align 1
@.str95 = private unnamed_addr constant [21 x i8] c"CHECKSUM not present\00", align 1
@.str96 = private unnamed_addr constant [34 x i8] c"%s: Incorrect lattice dimensions \00", align 1
@.str97 = private unnamed_addr constant [11 x i8] c"time stamp\00", align 1
@.str98 = private unnamed_addr constant [16 x i8] c"order parameter\00", align 1
@.str99 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@.str100 = private unnamed_addr constant [50 x i8] c"r_serial_i: Node %d can't open file %s, error %d\0A\00", align 1
@r_serial.myname = private unnamed_addr constant [9 x i8] c"r_serial\00", align 1
@.str101 = private unnamed_addr constant [48 x i8] c"%s: Attempting serial read from parallel file \0A\00", align 1
@.str102 = private unnamed_addr constant [31 x i8] c"%s: Node %d can't malloc lbuf\0A\00", align 1
@.str103 = private unnamed_addr constant [48 x i8] c"%s: Node 0 fseeko %lld failed error %d file %s\0A\00", align 1
@.str104 = private unnamed_addr constant [55 x i8] c"%s: node %d gauge configuration read error %d file %s\0A\00", align 1
@.str105 = private unnamed_addr constant [59 x i8] c"Restored binary gauge configuration serially from file %s\0A\00", align 1
@r_serial_arch.myname = private unnamed_addr constant [14 x i8] c"r_serial_arch\00", align 1
@.str106 = private unnamed_addr constant [55 x i8] c"%s: Node %d can't malloc uin buffer to read timeslice\0A\00", align 1
@.str108 = private unnamed_addr constant [60 x i8] c"Restored archive gauge configuration serially from file %s\0A\00", align 1
@.str109 = private unnamed_addr constant [56 x i8] c"Archive style checksum violation: computed %x, read %x\0A\00", align 1
@.str110 = private unnamed_addr constant [32 x i8] c"Archive style checksum = %x OK\0A\00", align 1
@.str112 = private unnamed_addr constant [44 x i8] c"write_site_list: node %d can't malloc cbuf\0A\00", align 1
@.str113 = private unnamed_addr constant [53 x i8] c"write_site_list: node %d g_seek %ld failed errno %d\0A\00", align 1
@.str114 = private unnamed_addr constant [48 x i8] c"write_site_list: Node %d coords write error %d\0A\00", align 1
@.str115 = private unnamed_addr constant [53 x i8] c"parallel_open: Node %d can't open file %s, error %d\0A\00", align 1
@w_parallel_setup.myname = private unnamed_addr constant [17 x i8] c"w_parallel_setup\00", align 16
@.str116 = private unnamed_addr constant [47 x i8] c"%s: Attempting parallel write to serial file.\0A\00", align 1
@.str117 = private unnamed_addr constant [48 x i8] c"%s: Node %d g_seek %ld failed error %d file %s\0A\00", align 1
@w_parallel.myname = private unnamed_addr constant [11 x i8] c"w_parallel\00", align 1
@number_of_nodes = external global i32
@.str119 = private unnamed_addr constant [56 x i8] c"%s: Node %d gauge configuration write error %d file %s\0A\00", align 1
@.str120 = private unnamed_addr constant [61 x i8] c"%s: Node %d g_seek %ld for checksum failed error %d file %s\0A\00", align 1
@.str121 = private unnamed_addr constant [57 x i8] c"Saved gauge configuration in parallel to binary file %s\0A\00", align 1
@w_checkpoint.myname = private unnamed_addr constant [13 x i8] c"w_checkpoint\00", align 1
@.str122 = private unnamed_addr constant [46 x i8] c"Saved gauge configuration checkpoint file %s\0A\00", align 1
@.str124 = private unnamed_addr constant [52 x i8] c"r_parallel_i: Node %d can't open file %s, error %d\0A\00", align 1
@r_parallel.myname = private unnamed_addr constant [11 x i8] c"r_parallel\00", align 1
@.str125 = private unnamed_addr constant [48 x i8] c"%s: Attempting parallel read from serial file.\0A\00", align 1
@.str126 = private unnamed_addr constant [37 x i8] c"BOTCH. Node %d received %d %d %d %d\0A\00", align 1
@.str127 = private unnamed_addr constant [62 x i8] c"Restored binary gauge configuration in parallel from file %s\0A\00", align 1
@.str128 = private unnamed_addr constant [60 x i8] c"%s: Node 0 g_seek %ld for checksum failed error %d file %s\0A\00", align 1
@.str130 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str131 = private unnamed_addr constant [30 x i8] c"Can't open file %s, error %d\0A\00", align 1
@.str134 = private unnamed_addr constant [27 x i8] c"  read %d but expected %d\0A\00", align 1
@.str135 = private unnamed_addr constant [26 x i8] c"%*[ \0C\0A\0D\09\0B]%*[\22]%[^\22]%*[\22]\00", align 1
@.str137 = private unnamed_addr constant [24 x i8] c"count %d time_stamp %s\0A\00", align 1
@.str138 = private unnamed_addr constant [9 x i8] c"%d%d%d%d\00", align 1
@.str140 = private unnamed_addr constant [51 x i8] c"restore_ascii: Incorrect lattice size %d,%d,%d,%d\0A\00", align 1
@.str141 = private unnamed_addr constant [8 x i8] c"%lf%lf\0A\00", align 1
@.str143 = private unnamed_addr constant [50 x i8] c"Restored gauge configuration from ascii file  %s\0A\00", align 1
@.str144 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@.str146 = private unnamed_addr constant [6 x i8] c"\22%s\22\0A\00", align 1
@.str148 = private unnamed_addr constant [13 x i8] c"%d\09%d\09%d\09%d\0A\00", align 1
@.str150 = private unnamed_addr constant [11 x i8] c"%.7e\09%.7e\0A\00", align 1
@.str152 = private unnamed_addr constant [44 x i8] c"Saved gauge configuration to ascii file %s\0A\00", align 1
@.str153 = private unnamed_addr constant [12 x i8] c"trace = %f\0A\00", align 1
@.str154 = private unnamed_addr constant [15 x i8] c"chksum_x = %x\0A\00", align 1
@.str155 = private unnamed_addr constant [17 x i8] c"chksum_u = %12u\0A\00", align 1
@.str156 = private unnamed_addr constant [16 x i8] c"plaquette = %f\0A\00", align 1
@.str157 = private unnamed_addr constant [38 x i8] c"Writing archive format lattice to %s\0A\00", align 1
@.str158 = private unnamed_addr constant [31 x i8] c"error opening output file: %s\0A\00", align 1
@.str159 = private unnamed_addr constant [14 x i8] c"BEGIN_HEADER\0A\00", align 1
@.str160 = private unnamed_addr constant [25 x i8] c"DATATYPE = 4D_SU3_GAUGE\0A\00", align 1
@.str161 = private unnamed_addr constant [18 x i8] c"DIMENSION_1 = %d\0A\00", align 1
@.str162 = private unnamed_addr constant [18 x i8] c"DIMENSION_2 = %d\0A\00", align 1
@.str163 = private unnamed_addr constant [18 x i8] c"DIMENSION_3 = %d\0A\00", align 1
@.str164 = private unnamed_addr constant [18 x i8] c"DIMENSION_4 = %d\0A\00", align 1
@.str165 = private unnamed_addr constant [15 x i8] c"CHECKSUM = %x\0A\00", align 1
@.str166 = private unnamed_addr constant [20 x i8] c"LINK_TRACE = %.10f\0A\00", align 1
@.str167 = private unnamed_addr constant [19 x i8] c"PLAQUETTE = %.10f\0A\00", align 1
@.str168 = private unnamed_addr constant [18 x i8] c"ENSEMBLE_ID = %s\0A\00", align 1
@ensemble_id = external global [256 x i8]
@.str169 = private unnamed_addr constant [22 x i8] c"SEQUENCE_NUMBER = %d\0A\00", align 1
@sequence_number = external global i32
@.str170 = private unnamed_addr constant [33 x i8] c"MILC_INFO = -------BEGIN-------\0A\00", align 1
@.str171 = private unnamed_addr constant [33 x i8] c"MILC_INFO = --------END--------\0A\00", align 1
@.str174 = private unnamed_addr constant [29 x i8] c"Wrote archive gauge file %s\0A\00", align 1
@str = private unnamed_addr constant [24 x i8] c"reading Archive header:\00"
@str176 = private unnamed_addr constant [35 x i8] c"w_serial: Node 0 can't malloc lbuf\00"
@str177 = private unnamed_addr constant [52 x i8] c"w_serial: Attempting serial write to parallel file \00"
@str178 = private unnamed_addr constant [54 x i8] c"w_serial_f: Attempting serial close on parallel file \00"
@str179 = private unnamed_addr constant [44 x i8] c"read_site_list: Can't malloc rank2rcv table\00"
@str180 = private unnamed_addr constant [66 x i8] c"Reading as old-style gauge field configuration with byte reversal\00"
@str181 = private unnamed_addr constant [38 x i8] c"read_v3_gauge_hdr: Can't byte reverse\00"
@str182 = private unnamed_addr constant [48 x i8] c"Reading as old-style gauge field configuration.\00"
@str183 = private unnamed_addr constant [73 x i8] c"First 4 bytes were zero. Trying to interpret with 64 bit integer format.\00"
@str184 = private unnamed_addr constant [67 x i8] c"Reading as 1996-style gauge field configuration with byte reversal\00"
@str185 = private unnamed_addr constant [40 x i8] c"read_1996_gauge_hdr: Can't byte reverse\00"
@str186 = private unnamed_addr constant [49 x i8] c"Reading as 1996-style gauge field configuration.\00"
@str187 = private unnamed_addr constant [27 x i8] c"Reading with byte reversal\00"
@str188 = private unnamed_addr constant [45 x i8] c"reading as archive format with byte reversal\00"
@str189 = private unnamed_addr constant [26 x i8] c"reading as archive format\00"
@str190 = private unnamed_addr constant [40 x i8] c"recompile with smaller read buffer: uin\00"
@str191 = private unnamed_addr constant [54 x i8] c"r_serial_f: Attempting serial close on parallel file \00"
@str192 = private unnamed_addr constant [56 x i8] c"w_parallel_f: Attempting parallel close on serial file.\00"
@str193 = private unnamed_addr constant [56 x i8] c"r_parallel_f: Attempting parallel close on serial file.\00"
@str194 = private unnamed_addr constant [37 x i8] c"restore_ascii: gauge link read error\00"
@str195 = private unnamed_addr constant [43 x i8] c"restore_ascii: Error in reading dimensions\00"
@str196 = private unnamed_addr constant [40 x i8] c"restore_ascii: Error reading time stamp\00"
@str197 = private unnamed_addr constant [58 x i8] c"restore_ascii: Incorrect version number in lattice header\00"
@str198 = private unnamed_addr constant [44 x i8] c"restore_ascii: Error reading version number\00"
@str199 = private unnamed_addr constant [26 x i8] c"Write error in save_ascii\00"
@str200 = private unnamed_addr constant [28 x i8] c"Error in writing dimensions\00"
@str201 = private unnamed_addr constant [28 x i8] c"Error in writing time stamp\00"
@str202 = private unnamed_addr constant [32 x i8] c"Error in writing version number\00"
@str203 = private unnamed_addr constant [17 x i8] c"fwrite bombed...\00"
@str204 = private unnamed_addr constant [28 x i8] c"can't malloc uout timeslice\00"
@str205 = private unnamed_addr constant [48 x i8] c"Parallel archive saves are not implemented, yet\00"

; Function Attrs: nounwind uwtable
define i32 @qcdhdr_get_str(i8* nocapture readonly %s, %struct.QCDheader* nocapture readonly %hdr, i8** nocapture %q) #0 {
entry:
  %ntoken = getelementptr inbounds %struct.QCDheader* %hdr, i64 0, i32 0
  %0 = load i32* %ntoken, align 4, !tbaa !1
  %1 = trunc i32 %0 to i8
  %cmp14 = icmp sgt i8 %1, 0
  br i1 %cmp14, label %for.body.lr.ph, label %return

for.body.lr.ph:                                   ; preds = %entry
  %token = getelementptr inbounds %struct.QCDheader* %hdr, i64 0, i32 1
  %2 = load i8*** %token, align 8, !tbaa !7
  br label %for.body

for.cond:                                         ; preds = %for.body
  %sext = shl i32 %0, 24
  %conv1 = ashr exact i32 %sext, 24
  %3 = trunc i64 %indvars.iv.next to i32
  %cmp = icmp slt i32 %3, %conv1
  br i1 %cmp, label %for.body, label %return

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.cond ]
  %arrayidx = getelementptr inbounds i8** %2, i64 %indvars.iv
  %4 = load i8** %arrayidx, align 8, !tbaa !8
  %call = tail call i32 @strcmp(i8* %s, i8* %4) #5
  %cmp3 = icmp eq i32 %call, 0
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  br i1 %cmp3, label %if.then, label %for.cond

if.then:                                          ; preds = %for.body
  %value = getelementptr inbounds %struct.QCDheader* %hdr, i64 0, i32 2
  %5 = load i8*** %value, align 8, !tbaa !9
  %arrayidx6 = getelementptr inbounds i8** %5, i64 %indvars.iv
  %6 = load i8** %arrayidx6, align 8, !tbaa !8
  br label %return

return:                                           ; preds = %for.cond, %entry, %if.then
  %storemerge = phi i8* [ %6, %if.then ], [ null, %entry ], [ null, %for.cond ]
  %retval.0 = phi i32 [ 0, %if.then ], [ -1, %entry ], [ -1, %for.cond ]
  store i8* %storemerge, i8** %q, align 8, !tbaa !8
  ret i32 %retval.0
}

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) #1

; Function Attrs: nounwind uwtable
define i32 @qcdhdr_get_int(i8* nocapture readonly %s, %struct.QCDheader* nocapture readonly %hdr, i32* %q) #0 {
entry:
  %ntoken.i = getelementptr inbounds %struct.QCDheader* %hdr, i64 0, i32 0
  %0 = load i32* %ntoken.i, align 4, !tbaa !1
  %1 = trunc i32 %0 to i8
  %cmp14.i = icmp sgt i8 %1, 0
  br i1 %cmp14.i, label %for.body.lr.ph.i, label %return

for.body.lr.ph.i:                                 ; preds = %entry
  %token.i = getelementptr inbounds %struct.QCDheader* %hdr, i64 0, i32 1
  %2 = load i8*** %token.i, align 8, !tbaa !7
  %sext.i = shl i32 %0, 24
  %conv1.i = ashr exact i32 %sext.i, 24
  br label %for.body.i

for.cond.i:                                       ; preds = %for.body.i
  %3 = trunc i64 %indvars.iv.next.i to i32
  %cmp.i = icmp slt i32 %3, %conv1.i
  br i1 %cmp.i, label %for.body.i, label %return

for.body.i:                                       ; preds = %for.cond.i, %for.body.lr.ph.i
  %indvars.iv.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next.i, %for.cond.i ]
  %arrayidx.i = getelementptr inbounds i8** %2, i64 %indvars.iv.i
  %4 = load i8** %arrayidx.i, align 8, !tbaa !8
  %call.i = tail call i32 @strcmp(i8* %s, i8* %4) #5
  %cmp3.i = icmp eq i32 %call.i, 0
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  br i1 %cmp3.i, label %qcdhdr_get_str.exit, label %for.cond.i

qcdhdr_get_str.exit:                              ; preds = %for.body.i
  %value.i = getelementptr inbounds %struct.QCDheader* %hdr, i64 0, i32 2
  %5 = load i8*** %value.i, align 8, !tbaa !9
  %arrayidx6.i = getelementptr inbounds i8** %5, i64 %indvars.iv.i
  %6 = load i8** %arrayidx6.i, align 8, !tbaa !8
  %cmp = icmp eq i8* %6, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %qcdhdr_get_str.exit
  %call1 = tail call i32 (i8*, i8*, ...)* @sscanf(i8* %6, i8* getelementptr inbounds ([3 x i8]* @.str, i64 0, i64 0), i32* %q) #5
  br label %return

return:                                           ; preds = %for.cond.i, %entry, %qcdhdr_get_str.exit, %if.end
  %retval.0 = phi i32 [ 0, %if.end ], [ -1, %qcdhdr_get_str.exit ], [ -1, %entry ], [ -1, %for.cond.i ]
  ret i32 %retval.0
}

; Function Attrs: nounwind
declare i32 @sscanf(i8* nocapture readonly, i8* nocapture readonly, ...) #2

; Function Attrs: nounwind uwtable
define i32 @qcdhdr_get_int32x(i8* nocapture readonly %s, %struct.QCDheader* nocapture readonly %hdr, i32* nocapture %q) #0 {
entry:
  %r = alloca i32, align 4
  %ntoken.i = getelementptr inbounds %struct.QCDheader* %hdr, i64 0, i32 0
  %0 = load i32* %ntoken.i, align 4, !tbaa !1
  %1 = trunc i32 %0 to i8
  %cmp14.i = icmp sgt i8 %1, 0
  br i1 %cmp14.i, label %for.body.lr.ph.i, label %return

for.body.lr.ph.i:                                 ; preds = %entry
  %token.i = getelementptr inbounds %struct.QCDheader* %hdr, i64 0, i32 1
  %2 = load i8*** %token.i, align 8, !tbaa !7
  %sext.i = shl i32 %0, 24
  %conv1.i = ashr exact i32 %sext.i, 24
  br label %for.body.i

for.cond.i:                                       ; preds = %for.body.i
  %3 = trunc i64 %indvars.iv.next.i to i32
  %cmp.i = icmp slt i32 %3, %conv1.i
  br i1 %cmp.i, label %for.body.i, label %return

for.body.i:                                       ; preds = %for.cond.i, %for.body.lr.ph.i
  %indvars.iv.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next.i, %for.cond.i ]
  %arrayidx.i = getelementptr inbounds i8** %2, i64 %indvars.iv.i
  %4 = load i8** %arrayidx.i, align 8, !tbaa !8
  %call.i = call i32 @strcmp(i8* %s, i8* %4) #5
  %cmp3.i = icmp eq i32 %call.i, 0
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  br i1 %cmp3.i, label %qcdhdr_get_str.exit, label %for.cond.i

qcdhdr_get_str.exit:                              ; preds = %for.body.i
  %value.i = getelementptr inbounds %struct.QCDheader* %hdr, i64 0, i32 2
  %5 = load i8*** %value.i, align 8, !tbaa !9
  %arrayidx6.i = getelementptr inbounds i8** %5, i64 %indvars.iv.i
  %6 = load i8** %arrayidx6.i, align 8, !tbaa !8
  %cmp = icmp eq i8* %6, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %qcdhdr_get_str.exit
  %call1 = call i32 (i8*, i8*, ...)* @sscanf(i8* %6, i8* getelementptr inbounds ([3 x i8]* @.str1, i64 0, i64 0), i32* %r) #5
  %7 = load i32* %r, align 4, !tbaa !10
  store i32 %7, i32* %q, align 4, !tbaa !10
  br label %return

return:                                           ; preds = %for.cond.i, %entry, %qcdhdr_get_str.exit, %if.end
  %retval.0 = phi i32 [ 0, %if.end ], [ -1, %qcdhdr_get_str.exit ], [ -1, %entry ], [ -1, %for.cond.i ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @qcdhdr_get_double(i8* nocapture readonly %s, %struct.QCDheader* nocapture readonly %hdr, double* %q) #0 {
entry:
  %ntoken.i = getelementptr inbounds %struct.QCDheader* %hdr, i64 0, i32 0
  %0 = load i32* %ntoken.i, align 4, !tbaa !1
  %1 = trunc i32 %0 to i8
  %cmp14.i = icmp sgt i8 %1, 0
  br i1 %cmp14.i, label %for.body.lr.ph.i, label %return

for.body.lr.ph.i:                                 ; preds = %entry
  %token.i = getelementptr inbounds %struct.QCDheader* %hdr, i64 0, i32 1
  %2 = load i8*** %token.i, align 8, !tbaa !7
  %sext.i = shl i32 %0, 24
  %conv1.i = ashr exact i32 %sext.i, 24
  br label %for.body.i

for.cond.i:                                       ; preds = %for.body.i
  %3 = trunc i64 %indvars.iv.next.i to i32
  %cmp.i = icmp slt i32 %3, %conv1.i
  br i1 %cmp.i, label %for.body.i, label %return

for.body.i:                                       ; preds = %for.cond.i, %for.body.lr.ph.i
  %indvars.iv.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next.i, %for.cond.i ]
  %arrayidx.i = getelementptr inbounds i8** %2, i64 %indvars.iv.i
  %4 = load i8** %arrayidx.i, align 8, !tbaa !8
  %call.i = tail call i32 @strcmp(i8* %s, i8* %4) #5
  %cmp3.i = icmp eq i32 %call.i, 0
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  br i1 %cmp3.i, label %qcdhdr_get_str.exit, label %for.cond.i

qcdhdr_get_str.exit:                              ; preds = %for.body.i
  %value.i = getelementptr inbounds %struct.QCDheader* %hdr, i64 0, i32 2
  %5 = load i8*** %value.i, align 8, !tbaa !9
  %arrayidx6.i = getelementptr inbounds i8** %5, i64 %indvars.iv.i
  %6 = load i8** %arrayidx6.i, align 8, !tbaa !8
  %cmp = icmp eq i8* %6, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %qcdhdr_get_str.exit
  %call1 = tail call i32 (i8*, i8*, ...)* @sscanf(i8* %6, i8* getelementptr inbounds ([4 x i8]* @.str2, i64 0, i64 0), double* %q) #5
  br label %return

return:                                           ; preds = %for.cond.i, %entry, %qcdhdr_get_str.exit, %if.end
  %retval.0 = phi i32 [ 0, %if.end ], [ -1, %qcdhdr_get_str.exit ], [ -1, %entry ], [ -1, %for.cond.i ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define void @error_exit(i8* nocapture readonly %s) #0 {
entry:
  %puts = tail call i32 @puts(i8* %s)
  tail call void @terminate(i32 1) #5
  ret void
}

; Function Attrs: nounwind
declare i32 @printf(i8* nocapture readonly, ...) #2

declare void @terminate(i32) #3

; Function Attrs: nounwind uwtable
define void @complete_U(double* %u) #0 {
entry:
  %arrayidx = getelementptr inbounds double* %u, i64 2
  %0 = load double* %arrayidx, align 8, !tbaa !11
  %arrayidx1 = getelementptr inbounds double* %u, i64 10
  %1 = load double* %arrayidx1, align 8, !tbaa !11
  %mul = fmul double %0, %1
  %arrayidx2 = getelementptr inbounds double* %u, i64 4
  %2 = load double* %arrayidx2, align 8, !tbaa !11
  %arrayidx3 = getelementptr inbounds double* %u, i64 8
  %3 = load double* %arrayidx3, align 8, !tbaa !11
  %mul4 = fmul double %2, %3
  %sub = fsub double %mul, %mul4
  %arrayidx5 = getelementptr inbounds double* %u, i64 3
  %4 = load double* %arrayidx5, align 8, !tbaa !11
  %arrayidx6 = getelementptr inbounds double* %u, i64 11
  %5 = load double* %arrayidx6, align 8, !tbaa !11
  %mul7 = fmul double %4, %5
  %sub8 = fsub double %sub, %mul7
  %arrayidx9 = getelementptr inbounds double* %u, i64 5
  %6 = load double* %arrayidx9, align 8, !tbaa !11
  %arrayidx10 = getelementptr inbounds double* %u, i64 9
  %7 = load double* %arrayidx10, align 8, !tbaa !11
  %mul11 = fmul double %6, %7
  %add = fadd double %sub8, %mul11
  %arrayidx12 = getelementptr inbounds double* %u, i64 12
  store double %add, double* %arrayidx12, align 8, !tbaa !11
  %mul15 = fmul double %2, %7
  %mul18 = fmul double %0, %5
  %sub19 = fsub double %mul15, %mul18
  %mul22 = fmul double %6, %3
  %add23 = fadd double %sub19, %mul22
  %mul26 = fmul double %4, %1
  %sub27 = fsub double %add23, %mul26
  %arrayidx28 = getelementptr inbounds double* %u, i64 13
  store double %sub27, double* %arrayidx28, align 8, !tbaa !11
  %arrayidx30 = getelementptr inbounds double* %u, i64 6
  %8 = load double* %arrayidx30, align 8, !tbaa !11
  %mul31 = fmul double %2, %8
  %9 = load double* %u, align 8, !tbaa !11
  %mul34 = fmul double %9, %1
  %sub35 = fsub double %mul31, %mul34
  %arrayidx37 = getelementptr inbounds double* %u, i64 7
  %10 = load double* %arrayidx37, align 8, !tbaa !11
  %mul38 = fmul double %6, %10
  %sub39 = fsub double %sub35, %mul38
  %arrayidx40 = getelementptr inbounds double* %u, i64 1
  %11 = load double* %arrayidx40, align 8, !tbaa !11
  %mul42 = fmul double %11, %5
  %add43 = fadd double %sub39, %mul42
  %arrayidx44 = getelementptr inbounds double* %u, i64 14
  store double %add43, double* %arrayidx44, align 8, !tbaa !11
  %mul47 = fmul double %9, %5
  %mul50 = fmul double %2, %10
  %sub51 = fsub double %mul47, %mul50
  %mul54 = fmul double %11, %1
  %add55 = fadd double %sub51, %mul54
  %mul58 = fmul double %6, %8
  %sub59 = fsub double %add55, %mul58
  %arrayidx60 = getelementptr inbounds double* %u, i64 15
  store double %sub59, double* %arrayidx60, align 8, !tbaa !11
  %mul63 = fmul double %9, %3
  %mul66 = fmul double %0, %8
  %sub67 = fsub double %mul63, %mul66
  %mul70 = fmul double %11, %7
  %sub71 = fsub double %sub67, %mul70
  %mul74 = fmul double %4, %10
  %add75 = fadd double %sub71, %mul74
  %arrayidx76 = getelementptr inbounds double* %u, i64 16
  store double %add75, double* %arrayidx76, align 8, !tbaa !11
  %mul79 = fmul double %0, %10
  %mul82 = fmul double %9, %7
  %sub83 = fsub double %mul79, %mul82
  %mul86 = fmul double %4, %8
  %add87 = fadd double %sub83, %mul86
  %mul90 = fmul double %11, %3
  %sub91 = fsub double %add87, %mul90
  %arrayidx92 = getelementptr inbounds double* %u, i64 17
  store double %sub91, double* %arrayidx92, align 8, !tbaa !11
  ret void
}

; Function Attrs: nounwind readnone uwtable
define i32 @big_endian() #4 {
entry:
  ret i32 0
}

; Function Attrs: nounwind uwtable
define noalias %struct.QCDheader* @qcdhdr_get_hdr(%struct._IO_FILE* nocapture %in) #0 {
entry:
  %line = alloca [1024 x i8], align 16
  %0 = getelementptr inbounds [1024 x i8]* %line, i64 0, i64 0
  call void @llvm.lifetime.start(i64 1024, i8* %0) #5
  %call = call i8* @fgets(i8* %0, i32 1024, %struct._IO_FILE* %in) #5
  %call1 = call i8* @calloc(i64 512, i64 8) #5
  %1 = bitcast i8* %call1 to i8**
  %call2 = call i8* @calloc(i64 512, i64 8) #5
  %2 = bitcast i8* %call2 to i8**
  %call3 = call i8* @calloc(i64 1, i64 24) #5
  %3 = bitcast i8* %call3 to %struct.QCDheader*
  %token = getelementptr inbounds i8* %call3, i64 8
  %4 = bitcast i8* %token to i8***
  store i8** %1, i8*** %4, align 8, !tbaa !7
  %value = getelementptr inbounds i8* %call3, i64 16
  %5 = bitcast i8* %value to i8***
  store i8** %2, i8*** %5, align 8, !tbaa !9
  %puts = call i32 @puts(i8* getelementptr inbounds ([24 x i8]* @str, i64 0, i64 0))
  %call653 = call i8* @fgets(i8* %0, i32 1024, %struct._IO_FILE* %in) #5
  %call854 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([3 x i8]* @.str5, i64 0, i64 0), i8* %0) #5
  %call1055 = call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([12 x i8]* @.str6, i64 0, i64 0)) #5
  %cmp56 = icmp eq i32 %call1055, 0
  br i1 %cmp56, label %while.end, label %if.end.lr.ph

if.end.lr.ph:                                     ; preds = %entry
  %6 = ptrtoint [1024 x i8]* %line to i64
  %7 = trunc i64 %6 to i32
  %.neg = sub i32 0, %7
  %sub58 = or i32 %.neg, 1
  br label %if.end

if.end:                                           ; preds = %if.end.lr.ph, %if.end
  %indvars.iv = phi i64 [ 0, %if.end.lr.ph ], [ %indvars.iv.next, %if.end ]
  %call12 = call i8* @strchr(i8* %0, i32 32) #5
  store i8 0, i8* %call12, align 1, !tbaa !13
  %8 = ptrtoint i8* %call12 to i64
  %9 = trunc i64 %8 to i32
  %add = add i32 %sub58, %9
  %div = sdiv i32 %add, 8
  %add14 = add nsw i32 %div, 1
  %conv = sext i32 %add14 to i64
  %call15 = call i8* @calloc(i64 %conv, i64 8) #5
  %arrayidx = getelementptr inbounds i8** %1, i64 %indvars.iv
  store i8* %call15, i8** %arrayidx, align 8, !tbaa !8
  %call18 = call i8* @strcpy(i8* %call15, i8* %0) #5
  %incdec.ptr = getelementptr inbounds i8* %call12, i64 1
  %call19 = call i8* @strchr(i8* %incdec.ptr, i32 61) #5
  %incdec.ptr20 = getelementptr inbounds i8* %call19, i64 1
  %call21 = call i64 @strlen(i8* %incdec.ptr20) #5
  %sub23 = shl i64 %call21, 32
  %sext = add i64 %sub23, -4294967296
  %idxprom24 = ashr exact i64 %sext, 32
  %incdec.ptr20.sum = add i64 %idxprom24, 1
  %arrayidx25 = getelementptr inbounds i8* %call19, i64 %incdec.ptr20.sum
  store i8 0, i8* %arrayidx25, align 1, !tbaa !13
  %conv26 = ashr exact i64 %sub23, 32
  %call27 = call i8* @calloc(i64 %conv26, i64 1) #5
  %arrayidx30 = getelementptr inbounds i8** %2, i64 %indvars.iv
  store i8* %call27, i8** %arrayidx30, align 8, !tbaa !8
  %call31 = call i8* @strcpy(i8* %call27, i8* %incdec.ptr20) #5
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %call6 = call i8* @fgets(i8* %0, i32 1024, %struct._IO_FILE* %in) #5
  %call8 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([3 x i8]* @.str5, i64 0, i64 0), i8* %0) #5
  %call10 = call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([12 x i8]* @.str6, i64 0, i64 0)) #5
  %cmp = icmp eq i32 %call10, 0
  br i1 %cmp, label %while.body.while.end_crit_edge, label %if.end

while.body.while.end_crit_edge:                   ; preds = %if.end
  %10 = trunc i64 %indvars.iv.next to i32
  br label %while.end

while.end:                                        ; preds = %while.body.while.end_crit_edge, %entry
  %n.0.lcssa = phi i32 [ %10, %while.body.while.end_crit_edge ], [ 0, %entry ]
  %ntoken = bitcast i8* %call3 to i32*
  store i32 %n.0.lcssa, i32* %ntoken, align 4, !tbaa !1
  call void @llvm.lifetime.end(i64 1024, i8* %0) #5
  ret %struct.QCDheader* %3
}

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #5

; Function Attrs: nounwind
declare i8* @fgets(i8*, i32, %struct._IO_FILE* nocapture) #2

; Function Attrs: nounwind
declare noalias i8* @calloc(i64, i64) #2

; Function Attrs: nounwind readonly
declare i8* @strchr(i8*, i32) #1

; Function Attrs: nounwind
declare i8* @strcpy(i8*, i8* nocapture readonly) #2

; Function Attrs: nounwind readonly
declare i64 @strlen(i8* nocapture) #1

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #5

; Function Attrs: nounwind uwtable
define void @qcdhdr_destroy_hdr(%struct.QCDheader* %hdr) #0 {
entry:
  %cmp = icmp eq %struct.QCDheader* %hdr, null
  br i1 %cmp, label %return, label %for.cond.preheader

for.cond.preheader:                               ; preds = %entry
  %ntoken = getelementptr inbounds %struct.QCDheader* %hdr, i64 0, i32 0
  %0 = load i32* %ntoken, align 4, !tbaa !1
  %cmp115 = icmp sgt i32 %0, 0
  br i1 %cmp115, label %for.body.lr.ph, label %for.cond.preheader.for.end_crit_edge

for.cond.preheader.for.end_crit_edge:             ; preds = %for.cond.preheader
  %token4.pre = getelementptr inbounds %struct.QCDheader* %hdr, i64 0, i32 1
  %value5.pre = getelementptr inbounds %struct.QCDheader* %hdr, i64 0, i32 2
  br label %for.end

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %value = getelementptr inbounds %struct.QCDheader* %hdr, i64 0, i32 2
  %token = getelementptr inbounds %struct.QCDheader* %hdr, i64 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %1 = load i8*** %value, align 8, !tbaa !9
  %arrayidx = getelementptr inbounds i8** %1, i64 %indvars.iv
  %2 = load i8** %arrayidx, align 8, !tbaa !8
  tail call void @free(i8* %2)
  %3 = load i8*** %token, align 8, !tbaa !7
  %arrayidx3 = getelementptr inbounds i8** %3, i64 %indvars.iv
  %4 = load i8** %arrayidx3, align 8, !tbaa !8
  tail call void @free(i8* %4)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %5 = load i32* %ntoken, align 4, !tbaa !1
  %6 = trunc i64 %indvars.iv.next to i32
  %cmp1 = icmp slt i32 %6, %5
  br i1 %cmp1, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.cond.preheader.for.end_crit_edge
  %value5.pre-phi = phi i8*** [ %value5.pre, %for.cond.preheader.for.end_crit_edge ], [ %value, %for.body ]
  %token4.pre-phi = phi i8*** [ %token4.pre, %for.cond.preheader.for.end_crit_edge ], [ %token, %for.body ]
  %7 = load i8*** %token4.pre-phi, align 8, !tbaa !7
  %8 = bitcast i8** %7 to i8*
  tail call void @free(i8* %8)
  %9 = load i8*** %value5.pre-phi, align 8, !tbaa !9
  %10 = bitcast i8** %9 to i8*
  tail call void @free(i8* %10)
  %11 = bitcast %struct.QCDheader* %hdr to i8*
  tail call void @free(i8* %11)
  br label %return

return:                                           ; preds = %entry, %for.end
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) #2

; Function Attrs: nounwind uwtable
define void @swrite_data(%struct._IO_FILE* nocapture %fp, i8* nocapture %src, i64 %size, i8* %myname, i8* %descrip) #0 {
entry:
  %call = tail call i64 @fwrite(i8* %src, i64 %size, i64 1, %struct._IO_FILE* %fp) #5
  %cmp = icmp eq i64 %call, 1
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %0 = load i32* @this_node, align 4, !tbaa !10
  %call1 = tail call i32* @__errno_location() #7
  %1 = load i32* %call1, align 4, !tbaa !10
  %call2 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([31 x i8]* @.str7, i64 0, i64 0), i8* %myname, i32 %0, i8* %descrip, i32 %1) #5
  %2 = load %struct._IO_FILE** @stdout, align 8, !tbaa !8
  %call3 = tail call i32 @fflush(%struct._IO_FILE* %2) #5
  tail call void @terminate(i32 1) #5
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  ret void
}

; Function Attrs: nounwind
declare i64 @fwrite(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) #2

; Function Attrs: nounwind readnone
declare i32* @__errno_location() #6

; Function Attrs: nounwind
declare i32 @fflush(%struct._IO_FILE* nocapture) #2

; Function Attrs: nounwind uwtable
define void @pwrite_data(%struct._IO_FILE* %fp, i8* %src, i64 %size, i8* %myname, i8* %descrip) #0 {
entry:
  %call = tail call i64 @g_write(i8* %src, i64 %size, i64 1, %struct._IO_FILE* %fp) #5
  %cmp = icmp eq i64 %call, 1
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %0 = load i32* @this_node, align 4, !tbaa !10
  %call1 = tail call i32* @__errno_location() #7
  %1 = load i32* %call1, align 4, !tbaa !10
  %call2 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([39 x i8]* @.str8, i64 0, i64 0), i8* %myname, i32 %0, i8* %descrip, i32 %1) #5
  %2 = load %struct._IO_FILE** @stdout, align 8, !tbaa !8
  %call3 = tail call i32 @fflush(%struct._IO_FILE* %2) #5
  tail call void @terminate(i32 1) #5
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  ret void
}

declare i64 @g_write(i8*, i64, i64, %struct._IO_FILE*) #3

; Function Attrs: nounwind uwtable
define void @pswrite_data(i32 %parallel, %struct._IO_FILE* %fp, i8* %src, i64 %size, i8* %myname, i8* %descrip) #0 {
entry:
  %tobool = icmp eq i32 %parallel, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %call.i = tail call i64 @g_write(i8* %src, i64 %size, i64 1, %struct._IO_FILE* %fp) #5
  %cmp.i = icmp eq i64 %call.i, 1
  br i1 %cmp.i, label %if.end, label %if.then.i

if.then.i:                                        ; preds = %if.then
  %0 = load i32* @this_node, align 4, !tbaa !10
  %call1.i = tail call i32* @__errno_location() #7
  %1 = load i32* %call1.i, align 4, !tbaa !10
  %call2.i = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([39 x i8]* @.str8, i64 0, i64 0), i8* %myname, i32 %0, i8* %descrip, i32 %1) #5
  %2 = load %struct._IO_FILE** @stdout, align 8, !tbaa !8
  %call3.i = tail call i32 @fflush(%struct._IO_FILE* %2) #5
  tail call void @terminate(i32 1) #5
  br label %if.end

if.else:                                          ; preds = %entry
  %call.i1 = tail call i64 @fwrite(i8* %src, i64 %size, i64 1, %struct._IO_FILE* %fp) #5
  %cmp.i2 = icmp eq i64 %call.i1, 1
  br i1 %cmp.i2, label %if.end, label %if.then.i6

if.then.i6:                                       ; preds = %if.else
  %3 = load i32* @this_node, align 4, !tbaa !10
  %call1.i3 = tail call i32* @__errno_location() #7
  %4 = load i32* %call1.i3, align 4, !tbaa !10
  %call2.i4 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([31 x i8]* @.str7, i64 0, i64 0), i8* %myname, i32 %3, i8* %descrip, i32 %4) #5
  %5 = load %struct._IO_FILE** @stdout, align 8, !tbaa !8
  %call3.i5 = tail call i32 @fflush(%struct._IO_FILE* %5) #5
  tail call void @terminate(i32 1) #5
  br label %if.end

if.end:                                           ; preds = %if.then.i6, %if.else, %if.then.i, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @sread_data(%struct._IO_FILE* nocapture %fp, i8* nocapture %src, i64 %size, i8* %myname, i8* %descrip) #0 {
entry:
  %call = tail call i64 @fread(i8* %src, i64 %size, i64 1, %struct._IO_FILE* %fp) #5
  %cmp = icmp eq i64 %call, 1
  br i1 %cmp, label %return, label %if.then

if.then:                                          ; preds = %entry
  %0 = load i32* @this_node, align 4, !tbaa !10
  %call1 = tail call i32* @__errno_location() #7
  %1 = load i32* %call1, align 4, !tbaa !10
  %call2 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([30 x i8]* @.str9, i64 0, i64 0), i8* %myname, i32 %0, i8* %descrip, i32 %1) #5
  %2 = load %struct._IO_FILE** @stdout, align 8, !tbaa !8
  %call3 = tail call i32 @fflush(%struct._IO_FILE* %2) #5
  br label %return

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi i32 [ 1, %if.then ], [ 0, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind
declare i64 @fread(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) #2

; Function Attrs: nounwind uwtable
define i32 @pread_data(%struct._IO_FILE* %fp, i8* %src, i64 %size, i8* %myname, i8* %descrip) #0 {
entry:
  %call = tail call i64 @g_read(i8* %src, i64 %size, i64 1, %struct._IO_FILE* %fp) #5
  %cmp = icmp eq i64 %call, 1
  br i1 %cmp, label %return, label %if.then

if.then:                                          ; preds = %entry
  %0 = load i32* @this_node, align 4, !tbaa !10
  %call1 = tail call i32* @__errno_location() #7
  %1 = load i32* %call1, align 4, !tbaa !10
  %call2 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([30 x i8]* @.str9, i64 0, i64 0), i8* %myname, i32 %0, i8* %descrip, i32 %1) #5
  %2 = load %struct._IO_FILE** @stdout, align 8, !tbaa !8
  %call3 = tail call i32 @fflush(%struct._IO_FILE* %2) #5
  br label %return

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi i32 [ 1, %if.then ], [ 0, %entry ]
  ret i32 %retval.0
}

declare i64 @g_read(i8*, i64, i64, %struct._IO_FILE*) #3

; Function Attrs: nounwind uwtable
define i32 @pread_byteorder(i32 %byterevflag, %struct._IO_FILE* %fp, i8* %src, i64 %size, i8* %myname, i8* %descrip) #0 {
entry:
  %call.i = tail call i64 @g_read(i8* %src, i64 %size, i64 1, %struct._IO_FILE* %fp) #5
  %cmp.i = icmp eq i64 %call.i, 1
  br i1 %cmp.i, label %pread_data.exit, label %if.then.i

if.then.i:                                        ; preds = %entry
  %0 = load i32* @this_node, align 4, !tbaa !10
  %call1.i = tail call i32* @__errno_location() #7
  %1 = load i32* %call1.i, align 4, !tbaa !10
  %call2.i = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([30 x i8]* @.str9, i64 0, i64 0), i8* %myname, i32 %0, i8* %descrip, i32 %1) #5
  %2 = load %struct._IO_FILE** @stdout, align 8, !tbaa !8
  %call3.i = tail call i32 @fflush(%struct._IO_FILE* %2) #5
  br label %pread_data.exit

pread_data.exit:                                  ; preds = %entry, %if.then.i
  %retval.0.i = phi i32 [ 1, %if.then.i ], [ 0, %entry ]
  %cmp = icmp eq i32 %byterevflag, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %pread_data.exit
  %3 = bitcast i8* %src to i32*
  %div = lshr i64 %size, 2
  %conv = trunc i64 %div to i32
  tail call void @byterevn(i32* %3, i32 %conv) #5
  br label %if.end

if.end:                                           ; preds = %if.then, %pread_data.exit
  ret i32 %retval.0.i
}

declare void @byterevn(i32*, i32) #3

; Function Attrs: nounwind uwtable
define i32 @sread_byteorder(i32 %byterevflag, %struct._IO_FILE* nocapture %fp, i8* %src, i64 %size, i8* %myname, i8* %descrip) #0 {
entry:
  %call.i = tail call i64 @fread(i8* %src, i64 %size, i64 1, %struct._IO_FILE* %fp) #5
  %cmp.i = icmp eq i64 %call.i, 1
  br i1 %cmp.i, label %sread_data.exit, label %if.then.i

if.then.i:                                        ; preds = %entry
  %0 = load i32* @this_node, align 4, !tbaa !10
  %call1.i = tail call i32* @__errno_location() #7
  %1 = load i32* %call1.i, align 4, !tbaa !10
  %call2.i = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([30 x i8]* @.str9, i64 0, i64 0), i8* %myname, i32 %0, i8* %descrip, i32 %1) #5
  %2 = load %struct._IO_FILE** @stdout, align 8, !tbaa !8
  %call3.i = tail call i32 @fflush(%struct._IO_FILE* %2) #5
  br label %sread_data.exit

sread_data.exit:                                  ; preds = %entry, %if.then.i
  %retval.0.i = phi i32 [ 1, %if.then.i ], [ 0, %entry ]
  %cmp = icmp eq i32 %byterevflag, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %sread_data.exit
  %3 = bitcast i8* %src to i32*
  %div = lshr i64 %size, 2
  %conv = trunc i64 %div to i32
  tail call void @byterevn(i32* %3, i32 %conv) #5
  br label %if.end

if.end:                                           ; preds = %if.then, %sread_data.exit
  ret i32 %retval.0.i
}

; Function Attrs: nounwind uwtable
define i32 @psread_data(i32 %parallel, %struct._IO_FILE* %fp, i8* %src, i64 %size, i8* %myname, i8* %descrip) #0 {
entry:
  %tobool = icmp eq i32 %parallel, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %call.i = tail call i64 @g_read(i8* %src, i64 %size, i64 1, %struct._IO_FILE* %fp) #5
  %cmp.i = icmp eq i64 %call.i, 1
  br i1 %cmp.i, label %return, label %if.then.i

if.then.i:                                        ; preds = %if.then
  %0 = load i32* @this_node, align 4, !tbaa !10
  %call1.i = tail call i32* @__errno_location() #7
  %1 = load i32* %call1.i, align 4, !tbaa !10
  %call2.i = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([30 x i8]* @.str9, i64 0, i64 0), i8* %myname, i32 %0, i8* %descrip, i32 %1) #5
  %2 = load %struct._IO_FILE** @stdout, align 8, !tbaa !8
  %call3.i = tail call i32 @fflush(%struct._IO_FILE* %2) #5
  br label %return

if.else:                                          ; preds = %entry
  %call.i2 = tail call i64 @fread(i8* %src, i64 %size, i64 1, %struct._IO_FILE* %fp) #5
  %cmp.i3 = icmp eq i64 %call.i2, 1
  br i1 %cmp.i3, label %return, label %if.then.i7

if.then.i7:                                       ; preds = %if.else
  %3 = load i32* @this_node, align 4, !tbaa !10
  %call1.i4 = tail call i32* @__errno_location() #7
  %4 = load i32* %call1.i4, align 4, !tbaa !10
  %call2.i5 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([30 x i8]* @.str9, i64 0, i64 0), i8* %myname, i32 %3, i8* %descrip, i32 %4) #5
  %5 = load %struct._IO_FILE** @stdout, align 8, !tbaa !8
  %call3.i6 = tail call i32 @fflush(%struct._IO_FILE* %5) #5
  br label %return

return:                                           ; preds = %if.then.i7, %if.else, %if.then.i, %if.then
  %retval.0 = phi i32 [ 1, %if.then.i ], [ 0, %if.then ], [ 1, %if.then.i7 ], [ 0, %if.else ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @psread_byteorder(i32 %byterevflag, i32 %parallel, %struct._IO_FILE* %fp, i8* %src, i64 %size, i8* %myname, i8* %descrip) #0 {
entry:
  %tobool = icmp eq i32 %parallel, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %call.i.i = tail call i64 @g_read(i8* %src, i64 %size, i64 1, %struct._IO_FILE* %fp) #5
  %cmp.i.i = icmp eq i64 %call.i.i, 1
  br i1 %cmp.i.i, label %pread_data.exit.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.then
  %0 = load i32* @this_node, align 4, !tbaa !10
  %call1.i.i = tail call i32* @__errno_location() #7
  %1 = load i32* %call1.i.i, align 4, !tbaa !10
  %call2.i.i = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([30 x i8]* @.str9, i64 0, i64 0), i8* %myname, i32 %0, i8* %descrip, i32 %1) #5
  %2 = load %struct._IO_FILE** @stdout, align 8, !tbaa !8
  %call3.i.i = tail call i32 @fflush(%struct._IO_FILE* %2) #5
  br label %pread_data.exit.i

pread_data.exit.i:                                ; preds = %if.then.i.i, %if.then
  %retval.0.i.i = phi i32 [ 1, %if.then.i.i ], [ 0, %if.then ]
  %cmp.i = icmp eq i32 %byterevflag, 1
  br i1 %cmp.i, label %if.then.i, label %return

if.then.i:                                        ; preds = %pread_data.exit.i
  %3 = bitcast i8* %src to i32*
  %div.i = lshr i64 %size, 2
  %conv.i = trunc i64 %div.i to i32
  tail call void @byterevn(i32* %3, i32 %conv.i) #5
  br label %return

if.else:                                          ; preds = %entry
  %call.i.i2 = tail call i64 @fread(i8* %src, i64 %size, i64 1, %struct._IO_FILE* %fp) #5
  %cmp.i.i3 = icmp eq i64 %call.i.i2, 1
  br i1 %cmp.i.i3, label %sread_data.exit.i, label %if.then.i.i7

if.then.i.i7:                                     ; preds = %if.else
  %4 = load i32* @this_node, align 4, !tbaa !10
  %call1.i.i4 = tail call i32* @__errno_location() #7
  %5 = load i32* %call1.i.i4, align 4, !tbaa !10
  %call2.i.i5 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([30 x i8]* @.str9, i64 0, i64 0), i8* %myname, i32 %4, i8* %descrip, i32 %5) #5
  %6 = load %struct._IO_FILE** @stdout, align 8, !tbaa !8
  %call3.i.i6 = tail call i32 @fflush(%struct._IO_FILE* %6) #5
  br label %sread_data.exit.i

sread_data.exit.i:                                ; preds = %if.then.i.i7, %if.else
  %retval.0.i.i8 = phi i32 [ 1, %if.then.i.i7 ], [ 0, %if.else ]
  %cmp.i9 = icmp eq i32 %byterevflag, 1
  br i1 %cmp.i9, label %if.then.i12, label %return

if.then.i12:                                      ; preds = %sread_data.exit.i
  %7 = bitcast i8* %src to i32*
  %div.i10 = lshr i64 %size, 2
  %conv.i11 = trunc i64 %div.i10 to i32
  tail call void @byterevn(i32* %7, i32 %conv.i11) #5
  br label %return

return:                                           ; preds = %if.then.i12, %sread_data.exit.i, %if.then.i, %pread_data.exit.i
  %retval.0 = phi i32 [ %retval.0.i.i, %pread_data.exit.i ], [ %retval.0.i.i, %if.then.i ], [ %retval.0.i.i8, %sread_data.exit.i ], [ %retval.0.i.i8, %if.then.i12 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define void @pwrite_gauge_hdr(%struct._IO_FILE* %fp, %struct.gauge_header* %gh) #0 {
entry:
  %myname = alloca [17 x i8], align 16
  %0 = getelementptr inbounds [17 x i8]* %myname, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* getelementptr inbounds ([17 x i8]* @pwrite_gauge_hdr.myname, i64 0, i64 0), i64 17, i32 16, i1 false)
  %1 = bitcast %struct.gauge_header* %gh to i8*
  %call.i = call i64 @g_write(i8* %1, i64 4, i64 1, %struct._IO_FILE* %fp) #5
  %cmp.i = icmp eq i64 %call.i, 1
  br i1 %cmp.i, label %pwrite_data.exit, label %if.then.i

if.then.i:                                        ; preds = %entry
  %2 = load i32* @this_node, align 4, !tbaa !10
  %call1.i = call i32* @__errno_location() #7
  %3 = load i32* %call1.i, align 4, !tbaa !10
  %call2.i = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([39 x i8]* @.str8, i64 0, i64 0), i8* %0, i32 %2, i8* getelementptr inbounds ([13 x i8]* @.str10, i64 0, i64 0), i32 %3) #5
  %4 = load %struct._IO_FILE** @stdout, align 8, !tbaa !8
  %call3.i = call i32 @fflush(%struct._IO_FILE* %4) #5
  call void @terminate(i32 1) #5
  br label %pwrite_data.exit

pwrite_data.exit:                                 ; preds = %entry, %if.then.i
  %arraydecay1 = getelementptr inbounds %struct.gauge_header* %gh, i64 0, i32 2, i64 0
  %5 = bitcast i32* %arraydecay1 to i8*
  %call.i13 = call i64 @g_write(i8* %5, i64 16, i64 1, %struct._IO_FILE* %fp) #5
  %cmp.i14 = icmp eq i64 %call.i13, 1
  br i1 %cmp.i14, label %pwrite_data.exit19, label %if.then.i18

if.then.i18:                                      ; preds = %pwrite_data.exit
  %6 = load i32* @this_node, align 4, !tbaa !10
  %call1.i15 = call i32* @__errno_location() #7
  %7 = load i32* %call1.i15, align 4, !tbaa !10
  %call2.i16 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([39 x i8]* @.str8, i64 0, i64 0), i8* %0, i32 %6, i8* getelementptr inbounds ([11 x i8]* @.str11, i64 0, i64 0), i32 %7) #5
  %8 = load %struct._IO_FILE** @stdout, align 8, !tbaa !8
  %call3.i17 = call i32 @fflush(%struct._IO_FILE* %8) #5
  call void @terminate(i32 1) #5
  br label %pwrite_data.exit19

pwrite_data.exit19:                               ; preds = %pwrite_data.exit, %if.then.i18
  %arraydecay3 = getelementptr inbounds %struct.gauge_header* %gh, i64 0, i32 1, i64 0
  %call.i20 = call i64 @g_write(i8* %arraydecay3, i64 64, i64 1, %struct._IO_FILE* %fp) #5
  %cmp.i21 = icmp eq i64 %call.i20, 1
  br i1 %cmp.i21, label %pwrite_data.exit26, label %if.then.i25

if.then.i25:                                      ; preds = %pwrite_data.exit19
  %9 = load i32* @this_node, align 4, !tbaa !10
  %call1.i22 = call i32* @__errno_location() #7
  %10 = load i32* %call1.i22, align 4, !tbaa !10
  %call2.i23 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([39 x i8]* @.str8, i64 0, i64 0), i8* %0, i32 %9, i8* getelementptr inbounds ([11 x i8]* @.str12, i64 0, i64 0), i32 %10) #5
  %11 = load %struct._IO_FILE** @stdout, align 8, !tbaa !8
  %call3.i24 = call i32 @fflush(%struct._IO_FILE* %11) #5
  call void @terminate(i32 1) #5
  br label %pwrite_data.exit26

pwrite_data.exit26:                               ; preds = %pwrite_data.exit19, %if.then.i25
  %order = getelementptr inbounds %struct.gauge_header* %gh, i64 0, i32 4
  %12 = bitcast i32* %order to i8*
  %call.i27 = call i64 @g_write(i8* %12, i64 4, i64 1, %struct._IO_FILE* %fp) #5
  %cmp.i28 = icmp eq i64 %call.i27, 1
  br i1 %cmp.i28, label %pwrite_data.exit33, label %if.then.i32

if.then.i32:                                      ; preds = %pwrite_data.exit26
  %13 = load i32* @this_node, align 4, !tbaa !10
  %call1.i29 = call i32* @__errno_location() #7
  %14 = load i32* %call1.i29, align 4, !tbaa !10
  %call2.i30 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([39 x i8]* @.str8, i64 0, i64 0), i8* %0, i32 %13, i8* getelementptr inbounds ([6 x i8]* @.str13, i64 0, i64 0), i32 %14) #5
  %15 = load %struct._IO_FILE** @stdout, align 8, !tbaa !8
  %call3.i31 = call i32 @fflush(%struct._IO_FILE* %15) #5
  call void @terminate(i32 1) #5
  br label %pwrite_data.exit33

pwrite_data.exit33:                               ; preds = %pwrite_data.exit26, %if.then.i32
  %header_bytes = getelementptr inbounds %struct.gauge_header* %gh, i64 0, i32 3
  store i32 88, i32* %header_bytes, align 4, !tbaa !14
  ret void
}

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #5

; Function Attrs: nounwind uwtable
define void @swrite_gauge_hdr(%struct._IO_FILE* nocapture %fp, %struct.gauge_header* nocapture %gh) #0 {
entry:
  %myname = alloca [17 x i8], align 16
  %0 = getelementptr inbounds [17 x i8]* %myname, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* getelementptr inbounds ([17 x i8]* @swrite_gauge_hdr.myname, i64 0, i64 0), i64 17, i32 16, i1 false)
  %1 = bitcast %struct.gauge_header* %gh to i8*
  %call.i = call i64 @fwrite(i8* %1, i64 4, i64 1, %struct._IO_FILE* %fp) #5
  %cmp.i = icmp eq i64 %call.i, 1
  br i1 %cmp.i, label %swrite_data.exit, label %if.then.i

if.then.i:                                        ; preds = %entry
  %2 = load i32* @this_node, align 4, !tbaa !10
  %call1.i = call i32* @__errno_location() #7
  %3 = load i32* %call1.i, align 4, !tbaa !10
  %call2.i = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([31 x i8]* @.str7, i64 0, i64 0), i8* %0, i32 %2, i8* getelementptr inbounds ([13 x i8]* @.str10, i64 0, i64 0), i32 %3) #5
  %4 = load %struct._IO_FILE** @stdout, align 8, !tbaa !8
  %call3.i = call i32 @fflush(%struct._IO_FILE* %4) #5
  call void @terminate(i32 1) #5
  br label %swrite_data.exit

swrite_data.exit:                                 ; preds = %entry, %if.then.i
  %arraydecay1 = getelementptr inbounds %struct.gauge_header* %gh, i64 0, i32 2, i64 0
  %5 = bitcast i32* %arraydecay1 to i8*
  %call.i13 = call i64 @fwrite(i8* %5, i64 16, i64 1, %struct._IO_FILE* %fp) #5
  %cmp.i14 = icmp eq i64 %call.i13, 1
  br i1 %cmp.i14, label %swrite_data.exit19, label %if.then.i18

if.then.i18:                                      ; preds = %swrite_data.exit
  %6 = load i32* @this_node, align 4, !tbaa !10
  %call1.i15 = call i32* @__errno_location() #7
  %7 = load i32* %call1.i15, align 4, !tbaa !10
  %call2.i16 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([31 x i8]* @.str7, i64 0, i64 0), i8* %0, i32 %6, i8* getelementptr inbounds ([11 x i8]* @.str11, i64 0, i64 0), i32 %7) #5
  %8 = load %struct._IO_FILE** @stdout, align 8, !tbaa !8
  %call3.i17 = call i32 @fflush(%struct._IO_FILE* %8) #5
  call void @terminate(i32 1) #5
  br label %swrite_data.exit19

swrite_data.exit19:                               ; preds = %swrite_data.exit, %if.then.i18
  %arraydecay3 = getelementptr inbounds %struct.gauge_header* %gh, i64 0, i32 1, i64 0
  %call.i20 = call i64 @fwrite(i8* %arraydecay3, i64 64, i64 1, %struct._IO_FILE* %fp) #5
  %cmp.i21 = icmp eq i64 %call.i20, 1
  br i1 %cmp.i21, label %swrite_data.exit26, label %if.then.i25

if.then.i25:                                      ; preds = %swrite_data.exit19
  %9 = load i32* @this_node, align 4, !tbaa !10
  %call1.i22 = call i32* @__errno_location() #7
  %10 = load i32* %call1.i22, align 4, !tbaa !10
  %call2.i23 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([31 x i8]* @.str7, i64 0, i64 0), i8* %0, i32 %9, i8* getelementptr inbounds ([11 x i8]* @.str12, i64 0, i64 0), i32 %10) #5
  %11 = load %struct._IO_FILE** @stdout, align 8, !tbaa !8
  %call3.i24 = call i32 @fflush(%struct._IO_FILE* %11) #5
  call void @terminate(i32 1) #5
  br label %swrite_data.exit26

swrite_data.exit26:                               ; preds = %swrite_data.exit19, %if.then.i25
  %order = getelementptr inbounds %struct.gauge_header* %gh, i64 0, i32 4
  %12 = bitcast i32* %order to i8*
  %call.i27 = call i64 @fwrite(i8* %12, i64 4, i64 1, %struct._IO_FILE* %fp) #5
  %cmp.i28 = icmp eq i64 %call.i27, 1
  br i1 %cmp.i28, label %swrite_data.exit33, label %if.then.i32

if.then.i32:                                      ; preds = %swrite_data.exit26
  %13 = load i32* @this_node, align 4, !tbaa !10
  %call1.i29 = call i32* @__errno_location() #7
  %14 = load i32* %call1.i29, align 4, !tbaa !10
  %call2.i30 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([31 x i8]* @.str7, i64 0, i64 0), i8* %0, i32 %13, i8* getelementptr inbounds ([6 x i8]* @.str13, i64 0, i64 0), i32 %14) #5
  %15 = load %struct._IO_FILE** @stdout, align 8, !tbaa !8
  %call3.i31 = call i32 @fflush(%struct._IO_FILE* %15) #5
  call void @terminate(i32 1) #5
  br label %swrite_data.exit33

swrite_data.exit33:                               ; preds = %swrite_data.exit26, %if.then.i32
  %header_bytes = getelementptr inbounds %struct.gauge_header* %gh, i64 0, i32 3
  store i32 88, i32* %header_bytes, align 4, !tbaa !14
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @write_gauge_info_item(%struct._IO_FILE* nocapture %fpout, i8* %keyword, i8* %fmt, i8* %src, i32 %count, i32 %stride) #0 {
entry:
  %0 = load i8** getelementptr inbounds ([0 x i8*]* @gauge_info_keyword, i64 0, i64 0), align 8, !tbaa !8
  %strlenfirst98 = load i8* %0, align 1
  %cmp99 = icmp eq i8 %strlenfirst98, 0
  br i1 %cmp99, label %if.then, label %land.rhs

for.cond:                                         ; preds = %land.rhs
  %arrayidx = getelementptr inbounds [0 x i8*]* @gauge_info_keyword, i64 0, i64 %indvars.iv.next
  %1 = load i8** %arrayidx, align 8, !tbaa !8
  %strlenfirst = load i8* %1, align 1
  %cmp = icmp eq i8 %strlenfirst, 0
  br i1 %cmp, label %if.then, label %land.rhs

land.rhs:                                         ; preds = %entry, %for.cond
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.cond ], [ 0, %entry ]
  %2 = phi i8* [ %1, %for.cond ], [ %0, %entry ]
  %call3 = tail call i32 @strcmp(i8* %2, i8* %keyword) #5
  %cmp4 = icmp eq i32 %call3, 0
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  br i1 %cmp4, label %if.end, label %for.cond

if.then:                                          ; preds = %for.cond, %entry
  %call9 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([57 x i8]* @.str14, i64 0, i64 0), i8* %keyword) #5
  br label %if.end

if.end:                                           ; preds = %land.rhs, %if.then
  %call10 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %fpout, i8* getelementptr inbounds ([5 x i8]* @.str15, i64 0, i64 0), i8* %keyword) #5
  %cmp11 = icmp sgt i32 %count, 1
  br i1 %cmp11, label %if.then12, label %if.end14

if.then12:                                        ; preds = %if.end
  %call13 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %fpout, i8* getelementptr inbounds ([5 x i8]* @.str16, i64 0, i64 0), i32 %count) #5
  br label %if.end14

if.end14:                                         ; preds = %if.then12, %if.end
  %cmp15 = icmp eq i32 %count, 0
  %. = select i1 %cmp15, i32 1, i32 %count
  %cmp1995 = icmp sgt i32 %., 0
  br i1 %cmp1995, label %for.body20.lr.ph, label %for.end54

for.body20.lr.ph:                                 ; preds = %if.end14
  %idx.ext = sext i32 %stride to i64
  br label %for.body20

for.body20:                                       ; preds = %for.body20.lr.ph, %for.inc52
  %data.097 = phi i8* [ %src, %for.body20.lr.ph ], [ %add.ptr, %for.inc52 ]
  %k.096 = phi i32 [ 0, %for.body20.lr.ph ], [ %inc53, %for.inc52 ]
  %fputc94 = tail call i32 @fputc(i32 32, %struct._IO_FILE* %fpout)
  %strchr = tail call i8* @strchr(i8* %fmt, i32 115) #5
  %cmp23 = icmp eq i8* %strchr, null
  br i1 %cmp23, label %if.else, label %if.then24

if.then24:                                        ; preds = %for.body20
  %call25 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %fpout, i8* %fmt, i8* %data.097) #5
  br label %for.inc52

if.else:                                          ; preds = %for.body20
  %strchr88 = tail call i8* @strchr(i8* %fmt, i32 100) #5
  %cmp27 = icmp eq i8* %strchr88, null
  br i1 %cmp27, label %if.else30, label %if.then28

if.then28:                                        ; preds = %if.else
  %3 = bitcast i8* %data.097 to i32*
  %4 = load i32* %3, align 4, !tbaa !10
  %call29 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %fpout, i8* %fmt, i32 %4) #5
  br label %for.inc52

if.else30:                                        ; preds = %if.else
  %strchr89 = tail call i8* @strchr(i8* %fmt, i32 101) #5
  %cmp32 = icmp eq i8* %strchr89, null
  br i1 %cmp32, label %if.else35, label %if.then33

if.then33:                                        ; preds = %if.else30
  %5 = bitcast i8* %data.097 to double*
  %6 = load double* %5, align 8, !tbaa !11
  %call34 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %fpout, i8* %fmt, double %6) #5
  br label %for.inc52

if.else35:                                        ; preds = %if.else30
  %strchr90 = tail call i8* @strchr(i8* %fmt, i32 102) #5
  %cmp37 = icmp eq i8* %strchr90, null
  br i1 %cmp37, label %if.else40, label %if.then38

if.then38:                                        ; preds = %if.else35
  %7 = bitcast i8* %data.097 to double*
  %8 = load double* %7, align 8, !tbaa !11
  %call39 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %fpout, i8* %fmt, double %8) #5
  br label %for.inc52

if.else40:                                        ; preds = %if.else35
  %strchr91 = tail call i8* @strchr(i8* %fmt, i32 103) #5
  %cmp42 = icmp eq i8* %strchr91, null
  br i1 %cmp42, label %if.else45, label %if.then43

if.then43:                                        ; preds = %if.else40
  %9 = bitcast i8* %data.097 to double*
  %10 = load double* %9, align 8, !tbaa !11
  %call44 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %fpout, i8* %fmt, double %10) #5
  br label %for.inc52

if.else45:                                        ; preds = %if.else40
  %call46 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([50 x i8]* @.str23, i64 0, i64 0), i8* %fmt) #5
  br label %return

for.inc52:                                        ; preds = %if.then24, %if.then33, %if.then43, %if.then38, %if.then28
  %inc53 = add nsw i32 %k.096, 1
  %add.ptr = getelementptr inbounds i8* %data.097, i64 %idx.ext
  %cmp19 = icmp slt i32 %inc53, %.
  br i1 %cmp19, label %for.body20, label %for.end54

for.end54:                                        ; preds = %for.inc52, %if.end14
  %fputc = tail call i32 @fputc(i32 10, %struct._IO_FILE* %fpout)
  br label %return

return:                                           ; preds = %for.end54, %if.else45
  %retval.0 = phi i32 [ 1, %if.else45 ], [ 0, %for.end54 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind
declare i32 @fprintf(%struct._IO_FILE* nocapture, i8* nocapture readonly, ...) #2

; Function Attrs: nounwind uwtable
define void @write_gauge_info_file(%struct.gauge_file* nocapture readonly %gf) #0 {
entry:
  %info_filename = alloca [256 x i8], align 16
  %sums = alloca [20 x i8], align 16
  %0 = getelementptr inbounds [256 x i8]* %info_filename, i64 0, i64 0
  call void @llvm.lifetime.start(i64 256, i8* %0) #5
  %header = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 1
  %1 = load %struct.gauge_header** %header, align 8, !tbaa !16
  %filename = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 2
  %2 = load i8** %filename, align 8, !tbaa !19
  %call = call i8* @strcpy(i8* %0, i8* %2) #5
  %strlen = call i64 @strlen(i8* %0) #5
  %endptr = getelementptr [256 x i8]* %info_filename, i64 0, i64 %strlen
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %endptr, i8* getelementptr inbounds ([6 x i8]* @.str25, i64 0, i64 0), i64 6, i32 1, i1 false)
  %call4 = call %struct._IO_FILE* @fopen(i8* %0, i8* getelementptr inbounds ([2 x i8]* @.str26, i64 0, i64 0)) #5
  %cmp = icmp eq %struct._IO_FILE* %call4, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call6 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([54 x i8]* @.str27, i64 0, i64 0), i8* %0) #5
  br label %cleanup

if.end:                                           ; preds = %entry
  %3 = bitcast %struct.gauge_header* %1 to i8*
  %call7 = call i32 @write_gauge_info_item(%struct._IO_FILE* %call4, i8* getelementptr inbounds ([13 x i8]* @.str10, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8]* @.str, i64 0, i64 0), i8* %3, i32 0, i32 0)
  %arraydecay8 = getelementptr inbounds %struct.gauge_header* %1, i64 0, i32 1, i64 0
  %call9 = call i32 @write_gauge_info_item(%struct._IO_FILE* %call4, i8* getelementptr inbounds ([11 x i8]* @.str12, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str28, i64 0, i64 0), i8* %arraydecay8, i32 0, i32 0)
  %arraydecay10 = getelementptr inbounds [20 x i8]* %sums, i64 0, i64 0
  %sum29 = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 6, i32 1
  %4 = load i32* %sum29, align 4, !tbaa !20
  %sum31 = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 6, i32 0
  %5 = load i32* %sum31, align 4, !tbaa !21
  %call12 = call i32 (i8*, i8*, ...)* @sprintf(i8* %arraydecay10, i8* getelementptr inbounds ([6 x i8]* @.str29, i64 0, i64 0), i32 %4, i32 %5) #5
  %call14 = call i32 @write_gauge_info_item(%struct._IO_FILE* %call4, i8* getelementptr inbounds ([10 x i8]* @.str30, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str28, i64 0, i64 0), i8* %arraydecay10, i32 0, i32 0)
  %call15 = call i32 @write_gauge_info_item(%struct._IO_FILE* %call4, i8* getelementptr inbounds ([3 x i8]* @.str31, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8]* @.str, i64 0, i64 0), i8* bitcast (i32* @nx to i8*), i32 0, i32 0)
  %call16 = call i32 @write_gauge_info_item(%struct._IO_FILE* %call4, i8* getelementptr inbounds ([3 x i8]* @.str32, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8]* @.str, i64 0, i64 0), i8* bitcast (i32* @ny to i8*), i32 0, i32 0)
  %call17 = call i32 @write_gauge_info_item(%struct._IO_FILE* %call4, i8* getelementptr inbounds ([3 x i8]* @.str33, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8]* @.str, i64 0, i64 0), i8* bitcast (i32* @nz to i8*), i32 0, i32 0)
  %call18 = call i32 @write_gauge_info_item(%struct._IO_FILE* %call4, i8* getelementptr inbounds ([3 x i8]* @.str34, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8]* @.str, i64 0, i64 0), i8* bitcast (i32* @nt to i8*), i32 0, i32 0)
  call void @write_appl_gauge_info(%struct._IO_FILE* %call4) #5
  %call19 = call i32 @fclose(%struct._IO_FILE* %call4) #5
  %call21 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([20 x i8]* @.str35, i64 0, i64 0), i8* %0) #5
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end(i64 256, i8* %0) #5
  ret void
}

; Function Attrs: nounwind
declare noalias %struct._IO_FILE* @fopen(i8* nocapture readonly, i8* nocapture readonly) #2

; Function Attrs: nounwind
declare i32 @sprintf(i8* nocapture, i8* nocapture readonly, ...) #2

declare void @write_appl_gauge_info(%struct._IO_FILE*) #3

; Function Attrs: nounwind
declare i32 @fclose(%struct._IO_FILE* nocapture) #2

; Function Attrs: nounwind uwtable
define noalias %struct.gauge_file* @setup_input_gauge_file(i8* %filename) #0 {
entry:
  %myname = alloca [23 x i8], align 16
  %0 = getelementptr inbounds [23 x i8]* %myname, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* getelementptr inbounds ([23 x i8]* @setup_input_gauge_file.myname, i64 0, i64 0), i64 23, i32 16, i1 false)
  %call = call i8* @calloc(i64 1, i64 56) #5
  %1 = bitcast i8* %call to %struct.gauge_file*
  %cmp = icmp eq i8* %call, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call1 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([21 x i8]* @.str36, i64 0, i64 0), i8* %0) #5
  call void @terminate(i32 1) #5
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %filename2 = getelementptr inbounds i8* %call, i64 16
  %2 = bitcast i8* %filename2 to i8**
  store i8* %filename, i8** %2, align 8, !tbaa !19
  %call3 = call i8* @calloc(i64 1, i64 92) #5
  %3 = bitcast i8* %call3 to %struct.gauge_header*
  %cmp4 = icmp eq i8* %call3, null
  br i1 %cmp4, label %if.then5, label %if.end8

if.then5:                                         ; preds = %if.end
  %call7 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([21 x i8]* @.str37, i64 0, i64 0), i8* %0) #5
  call void @terminate(i32 1) #5
  br label %if.end8

if.end8:                                          ; preds = %if.then5, %if.end
  %header = getelementptr inbounds i8* %call, i64 8
  %4 = bitcast i8* %header to %struct.gauge_header**
  store %struct.gauge_header* %3, %struct.gauge_header** %4, align 8, !tbaa !16
  %check = getelementptr inbounds i8* %call, i64 44
  %sum29 = getelementptr inbounds i8* %call, i64 48
  %5 = bitcast i8* %sum29 to i32*
  store i32 0, i32* %5, align 4, !tbaa !20
  %sum31 = bitcast i8* %check to i32*
  store i32 0, i32* %sum31, align 4, !tbaa !21
  ret %struct.gauge_file* %1
}

; Function Attrs: nounwind uwtable
define noalias %struct.gauge_file* @setup_output_gauge_file() #0 {
entry:
  %myname = alloca [24 x i8], align 16
  %time_stamp = alloca i64, align 8
  %0 = getelementptr inbounds [24 x i8]* %myname, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* getelementptr inbounds ([24 x i8]* @setup_output_gauge_file.myname, i64 0, i64 0), i64 24, i32 16, i1 false)
  %call = call i8* @calloc(i64 1, i64 56) #5
  %1 = bitcast i8* %call to %struct.gauge_file*
  %cmp = icmp eq i8* %call, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call1 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([21 x i8]* @.str36, i64 0, i64 0), i8* %0) #5
  call void @terminate(i32 1) #5
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %call2 = call i8* @calloc(i64 1, i64 92) #5
  %2 = bitcast i8* %call2 to %struct.gauge_header*
  %cmp3 = icmp eq i8* %call2, null
  br i1 %cmp3, label %if.then4, label %if.end7

if.then4:                                         ; preds = %if.end
  %call6 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([21 x i8]* @.str37, i64 0, i64 0), i8* %0) #5
  call void @terminate(i32 1) #5
  br label %if.end7

if.end7:                                          ; preds = %if.then4, %if.end
  %header = getelementptr inbounds i8* %call, i64 8
  %3 = bitcast i8* %header to %struct.gauge_header**
  store %struct.gauge_header* %2, %struct.gauge_header** %3, align 8, !tbaa !16
  %check = getelementptr inbounds i8* %call, i64 44
  %sum29 = getelementptr inbounds i8* %call, i64 48
  %4 = bitcast i8* %sum29 to i32*
  store i32 0, i32* %4, align 4, !tbaa !20
  %sum31 = bitcast i8* %check to i32*
  store i32 0, i32* %sum31, align 4, !tbaa !21
  %magic_number = bitcast i8* %call2 to i32*
  store i32 20103, i32* %magic_number, align 4, !tbaa !22
  %5 = load i32* @nx, align 4, !tbaa !10
  %dims = getelementptr inbounds i8* %call2, i64 68
  %arrayidx = bitcast i8* %dims to i32*
  store i32 %5, i32* %arrayidx, align 4, !tbaa !10
  %6 = load i32* @ny, align 4, !tbaa !10
  %arrayidx10 = getelementptr inbounds i8* %call2, i64 72
  %7 = bitcast i8* %arrayidx10 to i32*
  store i32 %6, i32* %7, align 4, !tbaa !10
  %8 = load i32* @nz, align 4, !tbaa !10
  %arrayidx12 = getelementptr inbounds i8* %call2, i64 76
  %9 = bitcast i8* %arrayidx12 to i32*
  store i32 %8, i32* %9, align 4, !tbaa !10
  %10 = load i32* @nt, align 4, !tbaa !10
  %arrayidx14 = getelementptr inbounds i8* %call2, i64 80
  %11 = bitcast i8* %arrayidx14 to i32*
  store i32 %10, i32* %11, align 4, !tbaa !10
  %12 = load i32* @this_node, align 4, !tbaa !10
  %cmp15 = icmp eq i32 %12, 0
  br i1 %cmp15, label %if.then16, label %if.end7.if.end45_crit_edge

if.end7.if.end45_crit_edge:                       ; preds = %if.end7
  %time_stamp46.pre = getelementptr inbounds i8* %call2, i64 4
  br label %if.end45

if.then16:                                        ; preds = %if.end7
  %call17 = call i64 @time(i64* %time_stamp) #5
  %time_stamp18 = getelementptr inbounds i8* %call2, i64 4
  %call20 = call i8* @ctime(i64* %time_stamp) #5
  %call21 = call i8* @strcpy(i8* %time_stamp18, i8* %call20) #5
  %call24 = call i64 @strlen(i8* %time_stamp18) #5
  %add = add i64 %call24, 1
  %conv = trunc i64 %add to i32
  %cmp2570 = icmp slt i32 %conv, 64
  br i1 %cmp2570, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %if.then16
  %sext = shl i64 %add, 32
  %13 = ashr exact i64 %sext, 32
  %14 = add i64 %13, 4
  %scevgep = getelementptr i8* %call2, i64 %14
  %15 = sub i64 62, %call24
  %16 = and i64 %15, 4294967295
  %17 = add i64 %16, 1
  call void @llvm.memset.p0i8.i64(i8* %scevgep, i8 0, i64 %17, i32 1, i1 false)
  br label %for.end

for.end:                                          ; preds = %for.body.lr.ph, %if.then16
  %call31 = call i64 @strlen(i8* %time_stamp18) #5
  %time_stamp18.sum = add i64 %call31, 3
  %arrayidx33 = getelementptr inbounds i8* %call2, i64 %time_stamp18.sum
  %18 = load i8* %arrayidx33, align 1, !tbaa !13
  %cmp35 = icmp eq i8 %18, 10
  br i1 %cmp35, label %if.then37, label %if.end45

if.then37:                                        ; preds = %for.end
  store i8 0, i8* %arrayidx33, align 1, !tbaa !13
  br label %if.end45

if.end45:                                         ; preds = %if.end7.if.end45_crit_edge, %for.end, %if.then37
  %time_stamp46.pre-phi = phi i8* [ %time_stamp46.pre, %if.end7.if.end45_crit_edge ], [ %time_stamp18, %for.end ], [ %time_stamp18, %if.then37 ]
  call void @broadcast_bytes(i8* %time_stamp46.pre-phi, i32 64) #5
  ret %struct.gauge_file* %1
}

declare i64 @time(i64*) #3

declare i8* @ctime(i64*) #3

declare void @broadcast_bytes(i8*, i32) #3

; Function Attrs: nounwind uwtable
define noalias %struct.gauge_file* @w_serial_i(i8* %filename) #0 {
entry:
  %myname = alloca [11 x i8], align 1
  %0 = getelementptr inbounds [11 x i8]* %myname, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* getelementptr inbounds ([11 x i8]* @w_serial_i.myname, i64 0, i64 0), i64 11, i32 1, i1 false)
  %call = call %struct.gauge_file* @setup_output_gauge_file()
  %header = getelementptr inbounds %struct.gauge_file* %call, i64 0, i32 1
  %1 = load %struct.gauge_header** %header, align 8, !tbaa !16
  %order = getelementptr inbounds %struct.gauge_header* %1, i64 0, i32 4
  store i32 0, i32* %order, align 4, !tbaa !23
  %2 = load i32* @this_node, align 4, !tbaa !10
  %cmp = icmp eq i32 %2, 0
  br i1 %cmp, label %if.then, label %if.end7.thread

if.end7.thread:                                   ; preds = %entry
  %fp1027 = getelementptr inbounds %struct.gauge_file* %call, i64 0, i32 0
  br label %if.else

if.then:                                          ; preds = %entry
  %call1 = call %struct._IO_FILE* @fopen(i8* %filename, i8* getelementptr inbounds ([3 x i8]* @.str38, i64 0, i64 0)) #5
  %cmp2 = icmp eq %struct._IO_FILE* %call1, null
  br i1 %cmp2, label %if.then3, label %if.end7

if.then3:                                         ; preds = %if.then
  %3 = load i32* @this_node, align 4, !tbaa !10
  %call4 = call i32* @__errno_location() #7
  %4 = load i32* %call4, align 4, !tbaa !10
  %call5 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([42 x i8]* @.str39, i64 0, i64 0), i8* %0, i32 %3, i8* %filename, i32 %4) #5
  %5 = load %struct._IO_FILE** @stdout, align 8, !tbaa !8
  %call6 = call i32 @fflush(%struct._IO_FILE* %5) #5
  call void @terminate(i32 1) #5
  br label %if.end7

if.end7:                                          ; preds = %if.then, %if.then3
  call void @swrite_gauge_hdr(%struct._IO_FILE* %call1, %struct.gauge_header* %1)
  %.pr = load i32* @this_node, align 4, !tbaa !10
  %cmp8 = icmp eq i32 %.pr, 0
  %fp10 = getelementptr inbounds %struct.gauge_file* %call, i64 0, i32 0
  br i1 %cmp8, label %if.then9, label %if.else

if.then9:                                         ; preds = %if.end7
  store %struct._IO_FILE* %call1, %struct._IO_FILE** %fp10, align 8, !tbaa !24
  br label %if.end12

if.else:                                          ; preds = %if.end7.thread, %if.end7
  %fp1028 = phi %struct._IO_FILE** [ %fp1027, %if.end7.thread ], [ %fp10, %if.end7 ]
  store %struct._IO_FILE* null, %struct._IO_FILE** %fp1028, align 8, !tbaa !24
  br label %if.end12

if.end12:                                         ; preds = %if.else, %if.then9
  %filename13 = getelementptr inbounds %struct.gauge_file* %call, i64 0, i32 2
  store i8* %filename, i8** %filename13, align 8, !tbaa !19
  %byterevflag = getelementptr inbounds %struct.gauge_file* %call, i64 0, i32 3
  store i32 0, i32* %byterevflag, align 4, !tbaa !25
  %rank2rcv = getelementptr inbounds %struct.gauge_file* %call, i64 0, i32 4
  store i32* null, i32** %rank2rcv, align 8, !tbaa !26
  %parallel = getelementptr inbounds %struct.gauge_file* %call, i64 0, i32 5
  store i32 0, i32* %parallel, align 4, !tbaa !27
  ret %struct.gauge_file* %call
}

; Function Attrs: nounwind uwtable
define void @read_checksum(i32 %parallel, %struct.gauge_file* %gf, %struct.gauge_check* nocapture readonly %test_gc) #0 {
entry:
  %myname = alloca [14 x i8], align 1
  %0 = getelementptr inbounds [14 x i8]* %myname, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* getelementptr inbounds ([14 x i8]* @read_checksum.myname, i64 0, i64 0), i64 14, i32 1, i1 false)
  %byterevflag = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 3
  %1 = load i32* %byterevflag, align 4, !tbaa !25
  %fp = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 0
  %2 = load %struct._IO_FILE** %fp, align 8, !tbaa !24
  %sum29 = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 6, i32 1
  %3 = bitcast i32* %sum29 to i8*
  %call = call i32 @psread_byteorder(i32 %1, i32 %parallel, %struct._IO_FILE* %2, i8* %3, i64 4, i8* %0, i8* getelementptr inbounds ([9 x i8]* @.str40, i64 0, i64 0))
  %cmp = icmp eq i32 %call, 0
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void @terminate(i32 1) #5
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %4 = load i32* %byterevflag, align 4, !tbaa !25
  %5 = load %struct._IO_FILE** %fp, align 8, !tbaa !24
  %sum31 = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 6, i32 0
  %6 = bitcast i32* %sum31 to i8*
  %call5 = call i32 @psread_byteorder(i32 %4, i32 %parallel, %struct._IO_FILE* %5, i8* %6, i64 4, i8* %0, i8* getelementptr inbounds ([9 x i8]* @.str40, i64 0, i64 0))
  %cmp6 = icmp eq i32 %call5, 0
  br i1 %cmp6, label %if.end8, label %if.then7

if.then7:                                         ; preds = %if.end
  call void @terminate(i32 1) #5
  br label %if.end8

if.end8:                                          ; preds = %if.end, %if.then7
  %7 = load i32* %sum29, align 4, !tbaa !20
  %sum2911 = getelementptr inbounds %struct.gauge_check* %test_gc, i64 0, i32 1
  %8 = load i32* %sum2911, align 4, !tbaa !28
  %cmp12 = icmp eq i32 %7, %8
  br i1 %cmp12, label %lor.lhs.false, label %if.end8.if.then17_crit_edge

if.end8.if.then17_crit_edge:                      ; preds = %if.end8
  %sum3120.phi.trans.insert = getelementptr inbounds %struct.gauge_check* %test_gc, i64 0, i32 0
  %.pre = load i32* %sum3120.phi.trans.insert, align 4, !tbaa !29
  %.pre48 = load i32* %sum31, align 4, !tbaa !21
  br label %if.then17

lor.lhs.false:                                    ; preds = %if.end8
  %9 = load i32* %sum31, align 4, !tbaa !21
  %sum3115 = getelementptr inbounds %struct.gauge_check* %test_gc, i64 0, i32 0
  %10 = load i32* %sum3115, align 4, !tbaa !29
  %cmp16 = icmp eq i32 %9, %10
  br i1 %cmp16, label %if.else, label %if.then17

if.then17:                                        ; preds = %if.end8.if.then17_crit_edge, %lor.lhs.false
  %11 = phi i32 [ %.pre48, %if.end8.if.then17_crit_edge ], [ %9, %lor.lhs.false ]
  %12 = phi i32 [ %.pre, %if.end8.if.then17_crit_edge ], [ %10, %lor.lhs.false ]
  %call25 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([54 x i8]* @.str41, i64 0, i64 0), i8* %0, i32 %8, i32 %12, i32 %7, i32 %11) #5
  br label %if.end32

if.else:                                          ; preds = %lor.lhs.false
  %call30 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([20 x i8]* @.str42, i64 0, i64 0), i32 %7, i32 %9) #5
  %13 = load %struct._IO_FILE** @stdout, align 8, !tbaa !8
  %call31 = call i32 @fflush(%struct._IO_FILE* %13) #5
  br label %if.end32

if.end32:                                         ; preds = %if.else, %if.then17
  ret void
}

; Function Attrs: nounwind uwtable
define void @write_checksum(i32 %parallel, %struct.gauge_file* %gf) #0 {
entry:
  %myname = alloca [15 x i8], align 1
  %0 = getelementptr inbounds [15 x i8]* %myname, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* getelementptr inbounds ([15 x i8]* @write_checksum.myname, i64 0, i64 0), i64 15, i32 1, i1 false)
  %fp = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 0
  %1 = load %struct._IO_FILE** %fp, align 8, !tbaa !24
  %sum29 = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 6, i32 1
  %2 = bitcast i32* %sum29 to i8*
  call void @pswrite_data(i32 %parallel, %struct._IO_FILE* %1, i8* %2, i64 4, i8* %0, i8* getelementptr inbounds ([9 x i8]* @.str40, i64 0, i64 0))
  %3 = load %struct._IO_FILE** %fp, align 8, !tbaa !24
  %sum31 = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 6, i32 0
  %4 = bitcast i32* %sum31 to i8*
  call void @pswrite_data(i32 %parallel, %struct._IO_FILE* %3, i8* %4, i64 4, i8* %0, i8* getelementptr inbounds ([9 x i8]* @.str40, i64 0, i64 0))
  %5 = load i32* %sum29, align 4, !tbaa !20
  %6 = load i32* %sum31, align 4, !tbaa !21
  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([17 x i8]* @.str43, i64 0, i64 0), i32 %5, i32 %6) #5
  ret void
}

; Function Attrs: nounwind uwtable
define void @w_serial(%struct.gauge_file* nocapture %gf) #0 {
entry:
  %myname.i = alloca [15 x i8], align 1
  %tbuf = alloca [4 x %struct.su3_matrix], align 16
  %0 = bitcast [4 x %struct.su3_matrix]* %tbuf to i8*
  call void @llvm.lifetime.start(i64 576, i8* %0) #5
  %1 = load i32* @this_node, align 4, !tbaa !10
  %cmp = icmp eq i32 %1, 0
  br i1 %cmp, label %if.then, label %if.end18

if.then:                                          ; preds = %entry
  %parallel = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 5
  %2 = load i32* %parallel, align 4, !tbaa !27
  %tobool = icmp eq i32 %2, 0
  br i1 %tobool, label %if.end, label %if.then1

if.then1:                                         ; preds = %if.then
  %puts240 = call i32 @puts(i8* getelementptr inbounds ([52 x i8]* @str177, i64 0, i64 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %if.then1
  %call2 = call i8* @calloc(i64 16384, i64 144) #5
  %3 = bitcast i8* %call2 to %struct.su3_matrix*
  %cmp3 = icmp eq i8* %call2, null
  br i1 %cmp3, label %if.then4, label %if.end7

if.then4:                                         ; preds = %if.end
  %puts = call i32 @puts(i8* getelementptr inbounds ([35 x i8]* @str176, i64 0, i64 0))
  %4 = load %struct._IO_FILE** @stdout, align 8, !tbaa !8
  %call6 = call i32 @fflush(%struct._IO_FILE* %4) #5
  call void @terminate(i32 1) #5
  br label %if.end7

if.end7:                                          ; preds = %if.then4, %if.end
  %fp8 = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 0
  %5 = load %struct._IO_FILE** %fp8, align 8, !tbaa !24
  %header = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 1
  %6 = load %struct.gauge_header** %header, align 8, !tbaa !16
  %header_bytes = getelementptr inbounds %struct.gauge_header* %6, i64 0, i32 3
  %7 = load i32* %header_bytes, align 4, !tbaa !14
  %conv = sext i32 %7 to i64
  %add9 = add nsw i64 %conv, 8
  %call10 = call i32 @fseeko(%struct._IO_FILE* %5, i64 %add9, i32 0) #5
  %cmp11 = icmp slt i32 %call10, 0
  br i1 %cmp11, label %if.then13, label %if.end18

if.then13:                                        ; preds = %if.end7
  %8 = load i32* @this_node, align 4, !tbaa !10
  %call14 = call i32* @__errno_location() #7
  %9 = load i32* %call14, align 4, !tbaa !10
  %filename = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 2
  %10 = load i8** %filename, align 8, !tbaa !19
  %call15 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([55 x i8]* @.str46, i64 0, i64 0), i32 %8, i64 %add9, i32 %9, i8* %10) #5
  %11 = load %struct._IO_FILE** @stdout, align 8, !tbaa !8
  %call16 = call i32 @fflush(%struct._IO_FILE* %11) #5
  call void @terminate(i32 1) #5
  br label %if.end18

if.end18:                                         ; preds = %if.end7, %if.then13, %entry
  %lbuf.0 = phi %struct.su3_matrix* [ %3, %if.then13 ], [ %3, %if.end7 ], [ undef, %entry ]
  %offset.0 = phi i64 [ %add9, %if.then13 ], [ %add9, %if.end7 ], [ undef, %entry ]
  %checksum_offset.0 = phi i64 [ %conv, %if.then13 ], [ %conv, %if.end7 ], [ undef, %entry ]
  %gh.0 = phi %struct.gauge_header* [ %6, %if.then13 ], [ %6, %if.end7 ], [ undef, %entry ]
  %fp.0 = phi %struct._IO_FILE* [ %5, %if.then13 ], [ %5, %if.end7 ], [ undef, %entry ]
  %sum31 = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 6, i32 0
  store i32 0, i32* %sum31, align 4, !tbaa !21
  %sum29 = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 6, i32 1
  store i32 0, i32* %sum29, align 4, !tbaa !20
  %12 = load i32* @sites_on_node, align 4, !tbaa !10
  %conv20 = sext i32 %12 to i64
  %mul = mul i64 %conv20, 144
  %13 = load i32* @this_node, align 4, !tbaa !10
  %conv21 = sext i32 %13 to i64
  %mul22 = mul i64 %mul, %conv21
  call void (...)* @g_sync() #5
  %14 = load i32* @nt, align 4, !tbaa !10
  %cmp30289 = icmp sgt i32 %14, 0
  br i1 %cmp30289, label %for.cond32.preheader.lr.ph, label %for.end155

for.cond32.preheader.lr.ph:                       ; preds = %if.end18
  %rem28 = urem i64 %mul22, 31
  %rem = urem i64 %mul22, 29
  %conv29 = trunc i64 %rem28 to i32
  %conv23 = trunc i64 %rem to i32
  %15 = bitcast %struct.su3_matrix* %lbuf.0 to i8*
  %filename127 = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 2
  %16 = load %struct._IO_FILE** @stdout, align 8, !tbaa !8
  %.pre = load i32* @nz, align 4, !tbaa !10
  br label %for.cond32.preheader

for.cond32.preheader:                             ; preds = %for.cond32.preheader.lr.ph, %for.inc153
  %17 = phi i32 [ %14, %for.cond32.preheader.lr.ph ], [ %52, %for.inc153 ]
  %18 = phi i32 [ %.pre, %for.cond32.preheader.lr.ph ], [ %53, %for.inc153 ]
  %t.0295 = phi i32 [ 0, %for.cond32.preheader.lr.ph ], [ %inc154, %for.inc153 ]
  %currentnode.0294 = phi i32 [ 0, %for.cond32.preheader.lr.ph ], [ %currentnode.1.lcssa, %for.inc153 ]
  %rank29.0293 = phi i32 [ %conv23, %for.cond32.preheader.lr.ph ], [ %rank29.1.lcssa, %for.inc153 ]
  %j.0292 = phi i32 [ 0, %for.cond32.preheader.lr.ph ], [ %j.1.lcssa, %for.inc153 ]
  %buf_length.0291 = phi i32 [ 0, %for.cond32.preheader.lr.ph ], [ %buf_length.1.lcssa, %for.inc153 ]
  %rank31.0290 = phi i32 [ %conv29, %for.cond32.preheader.lr.ph ], [ %rank31.1.lcssa, %for.inc153 ]
  %cmp33277 = icmp sgt i32 %18, 0
  br i1 %cmp33277, label %for.cond36.preheader.lr.ph, label %for.inc153

for.cond36.preheader.lr.ph:                       ; preds = %for.cond32.preheader
  %.pre296 = load i32* @ny, align 4, !tbaa !10
  br label %for.cond36.preheader

for.cond36.preheader:                             ; preds = %for.cond36.preheader.lr.ph, %for.inc150
  %19 = phi i32 [ %18, %for.cond36.preheader.lr.ph ], [ %50, %for.inc150 ]
  %20 = phi i32 [ %.pre296, %for.cond36.preheader.lr.ph ], [ %51, %for.inc150 ]
  %z.0283 = phi i32 [ 0, %for.cond36.preheader.lr.ph ], [ %inc151, %for.inc150 ]
  %currentnode.1282 = phi i32 [ %currentnode.0294, %for.cond36.preheader.lr.ph ], [ %currentnode.2.lcssa, %for.inc150 ]
  %rank29.1281 = phi i32 [ %rank29.0293, %for.cond36.preheader.lr.ph ], [ %rank29.2.lcssa, %for.inc150 ]
  %j.1280 = phi i32 [ %j.0292, %for.cond36.preheader.lr.ph ], [ %j.2.lcssa, %for.inc150 ]
  %buf_length.1279 = phi i32 [ %buf_length.0291, %for.cond36.preheader.lr.ph ], [ %buf_length.2.lcssa, %for.inc150 ]
  %rank31.1278 = phi i32 [ %rank31.0290, %for.cond36.preheader.lr.ph ], [ %rank31.2.lcssa, %for.inc150 ]
  %cmp37265 = icmp sgt i32 %20, 0
  br i1 %cmp37265, label %for.cond40.preheader.lr.ph, label %for.inc150

for.cond40.preheader.lr.ph:                       ; preds = %for.cond36.preheader
  %.pre297 = load i32* @nx, align 4, !tbaa !10
  br label %for.cond40.preheader

for.cond40.preheader:                             ; preds = %for.cond40.preheader.lr.ph, %for.inc147
  %21 = phi i32 [ %20, %for.cond40.preheader.lr.ph ], [ %48, %for.inc147 ]
  %22 = phi i32 [ %.pre297, %for.cond40.preheader.lr.ph ], [ %49, %for.inc147 ]
  %y.0271 = phi i32 [ 0, %for.cond40.preheader.lr.ph ], [ %inc148, %for.inc147 ]
  %currentnode.2270 = phi i32 [ %currentnode.1282, %for.cond40.preheader.lr.ph ], [ %currentnode.3.lcssa, %for.inc147 ]
  %rank29.2269 = phi i32 [ %rank29.1281, %for.cond40.preheader.lr.ph ], [ %rank29.3.lcssa, %for.inc147 ]
  %j.2268 = phi i32 [ %j.1280, %for.cond40.preheader.lr.ph ], [ %j.3.lcssa, %for.inc147 ]
  %buf_length.2267 = phi i32 [ %buf_length.1279, %for.cond40.preheader.lr.ph ], [ %buf_length.3.lcssa, %for.inc147 ]
  %rank31.2266 = phi i32 [ %rank31.1278, %for.cond40.preheader.lr.ph ], [ %rank31.3.lcssa, %for.inc147 ]
  %cmp41253 = icmp sgt i32 %22, 0
  br i1 %cmp41253, label %for.body43, label %for.inc147

for.body43:                                       ; preds = %for.cond40.preheader, %for.inc143
  %x.0260 = phi i32 [ %inc144, %for.inc143 ], [ 0, %for.cond40.preheader ]
  %currentnode.3259 = phi i32 [ %currentnode.4, %for.inc143 ], [ %currentnode.2270, %for.cond40.preheader ]
  %rank29.3258 = phi i32 [ %rank29.5, %for.inc143 ], [ %rank29.2269, %for.cond40.preheader ]
  %j.3256 = phi i32 [ %inc145, %for.inc143 ], [ %j.2268, %for.cond40.preheader ]
  %buf_length.3255 = phi i32 [ %buf_length.4, %for.inc143 ], [ %buf_length.2267, %for.cond40.preheader ]
  %rank31.3254 = phi i32 [ %rank31.5, %for.inc143 ], [ %rank31.2266, %for.cond40.preheader ]
  %call44 = call i32 @node_number(i32 %x.0260, i32 %y.0271, i32 %z.0283, i32 %t.0295) #5
  %cmp45 = icmp eq i32 %call44, %currentnode.3259
  br i1 %cmp45, label %if.end62thread-pre-split, label %if.then47

if.then47:                                        ; preds = %for.body43
  %23 = load i32* @this_node, align 4, !tbaa !10
  %cmp48 = icmp eq i32 %23, 0
  %cmp50 = icmp ne i32 %call44, 0
  %or.cond = and i1 %cmp48, %cmp50
  br i1 %or.cond, label %if.then52, label %if.end53

if.then52:                                        ; preds = %if.then47
  call void @send_field(i8* %0, i32 4, i32 %call44) #5
  %.pre300 = load i32* @this_node, align 4, !tbaa !10
  br label %if.end53

if.end53:                                         ; preds = %if.then52, %if.then47
  %24 = phi i32 [ %.pre300, %if.then52 ], [ %23, %if.then47 ]
  %cmp54 = icmp eq i32 %24, %call44
  %or.cond173 = and i1 %cmp54, %cmp50
  br i1 %or.cond173, label %if.then59, label %if.end62

if.then59:                                        ; preds = %if.end53
  call void @get_field(i8* %0, i32 4) #5
  br label %if.end62thread-pre-split

if.end62thread-pre-split:                         ; preds = %for.body43, %if.then59
  %currentnode.4.ph = phi i32 [ %call44, %if.then59 ], [ %currentnode.3259, %for.body43 ]
  %.pr = load i32* @this_node, align 4, !tbaa !10
  br label %if.end62

if.end62:                                         ; preds = %if.end62thread-pre-split, %if.end53
  %25 = phi i32 [ %.pr, %if.end62thread-pre-split ], [ %24, %if.end53 ]
  %currentnode.4 = phi i32 [ %currentnode.4.ph, %if.end62thread-pre-split ], [ %call44, %if.end53 ]
  %cmp63 = icmp eq i32 %25, 0
  br i1 %cmp63, label %if.then65, label %if.else132

if.then65:                                        ; preds = %if.end62
  %cmp66 = icmp eq i32 %currentnode.4, 0
  br i1 %cmp66, label %if.then68, label %if.else

if.then68:                                        ; preds = %if.then65
  %call69 = call i32 @node_index(i32 %x.0260, i32 %y.0271, i32 %z.0283, i32 %t.0295) #5
  %idxprom75 = sext i32 %call69 to i64
  %26 = load %struct.site** @lattice, align 8, !tbaa !8
  %arrayidx77 = getelementptr inbounds %struct.site* %26, i64 %idxprom75, i32 8, i64 0
  %27 = bitcast [4 x %struct.su3_matrix]* %tbuf to i8*
  %28 = bitcast %struct.su3_matrix* %arrayidx77 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %27, i8* %28, i64 144, i32 8, i1 false), !tbaa.struct !30
  %arrayidx.1 = getelementptr inbounds [4 x %struct.su3_matrix]* %tbuf, i64 0, i64 1
  %arrayidx77.1 = getelementptr inbounds %struct.site* %26, i64 %idxprom75, i32 8, i64 1
  %29 = bitcast %struct.su3_matrix* %arrayidx.1 to i8*
  %30 = bitcast %struct.su3_matrix* %arrayidx77.1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %29, i8* %30, i64 144, i32 8, i1 false), !tbaa.struct !30
  %arrayidx.2 = getelementptr inbounds [4 x %struct.su3_matrix]* %tbuf, i64 0, i64 2
  %arrayidx77.2 = getelementptr inbounds %struct.site* %26, i64 %idxprom75, i32 8, i64 2
  %31 = bitcast %struct.su3_matrix* %arrayidx.2 to i8*
  %32 = bitcast %struct.su3_matrix* %arrayidx77.2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %31, i8* %32, i64 144, i32 8, i1 false), !tbaa.struct !30
  %arrayidx.3 = getelementptr inbounds [4 x %struct.su3_matrix]* %tbuf, i64 0, i64 3
  %arrayidx77.3 = getelementptr inbounds %struct.site* %26, i64 %idxprom75, i32 8, i64 3
  %33 = bitcast %struct.su3_matrix* %arrayidx.3 to i8*
  %34 = bitcast %struct.su3_matrix* %arrayidx77.3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %33, i8* %34, i64 144, i32 8, i1 false), !tbaa.struct !30
  br label %if.end79

if.else:                                          ; preds = %if.then65
  call void @get_field(i8* %0, i32 576) #5
  br label %if.end79

if.end79:                                         ; preds = %if.then68, %if.else
  %mul80 = shl nsw i32 %buf_length.3255, 2
  %idxprom81 = sext i32 %mul80 to i64
  %arrayidx82 = getelementptr inbounds %struct.su3_matrix* %lbuf.0, i64 %idxprom81
  %35 = bitcast %struct.su3_matrix* %arrayidx82 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %35, i8* %0, i64 576, i32 1, i1 false)
  %36 = bitcast %struct.su3_matrix* %arrayidx82 to i32*
  %.pre298 = load i32* %sum29, align 4, !tbaa !20
  %.pre299 = load i32* %sum31, align 4, !tbaa !21
  br label %for.body90

for.body90:                                       ; preds = %for.body90, %if.end79
  %37 = phi i32 [ %.pre299, %if.end79 ], [ %xor99, %for.body90 ]
  %38 = phi i32 [ %.pre298, %if.end79 ], [ %xor, %for.body90 ]
  %val.0252 = phi i32* [ %36, %if.end79 ], [ %incdec.ptr, %for.body90 ]
  %rank29.4251 = phi i32 [ %rank29.3258, %if.end79 ], [ %.inc100, %for.body90 ]
  %k.1250 = phi i32 [ 0, %if.end79 ], [ %inc111, %for.body90 ]
  %rank31.4249 = phi i32 [ %rank31.3254, %if.end79 ], [ %.inc105, %for.body90 ]
  %39 = load i32* %val.0252, align 4, !tbaa !10
  %shl = shl i32 %39, %rank29.4251
  %sub = sub nsw i32 32, %rank29.4251
  %shr = lshr i32 %39, %sub
  %or = or i32 %shl, %shr
  %xor = xor i32 %or, %38
  store i32 %xor, i32* %sum29, align 4, !tbaa !20
  %40 = load i32* %val.0252, align 4, !tbaa !10
  %shl93 = shl i32 %40, %rank31.4249
  %sub94 = sub nsw i32 32, %rank31.4249
  %shr95 = lshr i32 %40, %sub94
  %or96 = or i32 %shl93, %shr95
  %xor99 = xor i32 %or96, %37
  store i32 %xor99, i32* %sum31, align 4, !tbaa !21
  %inc100 = add nsw i32 %rank29.4251, 1
  %cmp101 = icmp sgt i32 %rank29.4251, 27
  %.inc100 = select i1 %cmp101, i32 0, i32 %inc100
  %inc105 = add nsw i32 %rank31.4249, 1
  %cmp106 = icmp sgt i32 %rank31.4249, 29
  %.inc105 = select i1 %cmp106, i32 0, i32 %inc105
  %inc111 = add nsw i32 %k.1250, 1
  %incdec.ptr = getelementptr inbounds i32* %val.0252, i64 1
  %exitcond = icmp eq i32 %inc111, 144
  br i1 %exitcond, label %for.end112, label %for.body90

for.end112:                                       ; preds = %for.body90
  %inc113 = add nsw i32 %buf_length.3255, 1
  %cmp114 = icmp eq i32 %inc113, 4096
  br i1 %cmp114, label %if.then119, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.end112
  %41 = load i32* @volume, align 4, !tbaa !10
  %sub116 = add nsw i32 %41, -1
  %cmp117 = icmp eq i32 %j.3256, %sub116
  br i1 %cmp117, label %if.then119, label %for.inc143

if.then119:                                       ; preds = %lor.lhs.false, %for.end112
  %conv120 = sext i32 %inc113 to i64
  %call121 = call i64 @fwrite(i8* %15, i64 576, i64 %conv120, %struct._IO_FILE* %fp.0) #5
  %conv122 = trunc i64 %call121 to i32
  %cmp123 = icmp eq i32 %conv122, %inc113
  br i1 %cmp123, label %for.inc143, label %if.then125

if.then125:                                       ; preds = %if.then119
  %42 = load i32* @this_node, align 4, !tbaa !10
  %call126 = call i32* @__errno_location() #7
  %43 = load i32* %call126, align 4, !tbaa !10
  %44 = load i8** %filename127, align 8, !tbaa !19
  %call128 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([62 x i8]* @.str47, i64 0, i64 0), i32 %42, i32 %43, i8* %44) #5
  %call129 = call i32 @fflush(%struct._IO_FILE* %16) #5
  call void @terminate(i32 1) #5
  br label %for.inc143

if.else132:                                       ; preds = %if.end62
  %cmp133 = icmp eq i32 %25, %currentnode.4
  br i1 %cmp133, label %if.then135, label %for.inc143

if.then135:                                       ; preds = %if.else132
  %call136 = call i32 @node_index(i32 %x.0260, i32 %y.0271, i32 %z.0283, i32 %t.0295) #5
  %idxprom137 = sext i32 %call136 to i64
  %45 = load %struct.site** @lattice, align 8, !tbaa !8
  %arraydecay140 = getelementptr inbounds %struct.site* %45, i64 %idxprom137, i32 8, i64 0
  %46 = bitcast %struct.su3_matrix* %arraydecay140 to i8*
  call void @send_field(i8* %46, i32 576, i32 0) #5
  br label %for.inc143

for.inc143:                                       ; preds = %if.then125, %if.then119, %lor.lhs.false, %if.then135, %if.else132
  %rank31.5 = phi i32 [ %.inc105, %lor.lhs.false ], [ %rank31.3254, %if.then135 ], [ %rank31.3254, %if.else132 ], [ %.inc105, %if.then119 ], [ %.inc105, %if.then125 ]
  %buf_length.4 = phi i32 [ %inc113, %lor.lhs.false ], [ %buf_length.3255, %if.then135 ], [ %buf_length.3255, %if.else132 ], [ 0, %if.then119 ], [ 0, %if.then125 ]
  %rank29.5 = phi i32 [ %.inc100, %lor.lhs.false ], [ %rank29.3258, %if.then135 ], [ %rank29.3258, %if.else132 ], [ %.inc100, %if.then119 ], [ %.inc100, %if.then125 ]
  %inc144 = add nsw i32 %x.0260, 1
  %inc145 = add nsw i32 %j.3256, 1
  %47 = load i32* @nx, align 4, !tbaa !10
  %cmp41 = icmp slt i32 %inc144, %47
  br i1 %cmp41, label %for.body43, label %for.cond40.for.inc147_crit_edge

for.cond40.for.inc147_crit_edge:                  ; preds = %for.inc143
  %.pre301 = load i32* @ny, align 4, !tbaa !10
  br label %for.inc147

for.inc147:                                       ; preds = %for.cond40.for.inc147_crit_edge, %for.cond40.preheader
  %48 = phi i32 [ %.pre301, %for.cond40.for.inc147_crit_edge ], [ %21, %for.cond40.preheader ]
  %49 = phi i32 [ %47, %for.cond40.for.inc147_crit_edge ], [ %22, %for.cond40.preheader ]
  %currentnode.3.lcssa = phi i32 [ %currentnode.4, %for.cond40.for.inc147_crit_edge ], [ %currentnode.2270, %for.cond40.preheader ]
  %rank29.3.lcssa = phi i32 [ %rank29.5, %for.cond40.for.inc147_crit_edge ], [ %rank29.2269, %for.cond40.preheader ]
  %j.3.lcssa = phi i32 [ %inc145, %for.cond40.for.inc147_crit_edge ], [ %j.2268, %for.cond40.preheader ]
  %buf_length.3.lcssa = phi i32 [ %buf_length.4, %for.cond40.for.inc147_crit_edge ], [ %buf_length.2267, %for.cond40.preheader ]
  %rank31.3.lcssa = phi i32 [ %rank31.5, %for.cond40.for.inc147_crit_edge ], [ %rank31.2266, %for.cond40.preheader ]
  %inc148 = add nsw i32 %y.0271, 1
  %cmp37 = icmp slt i32 %inc148, %48
  br i1 %cmp37, label %for.cond40.preheader, label %for.cond36.for.inc150_crit_edge

for.cond36.for.inc150_crit_edge:                  ; preds = %for.inc147
  %.pre302 = load i32* @nz, align 4, !tbaa !10
  br label %for.inc150

for.inc150:                                       ; preds = %for.cond36.for.inc150_crit_edge, %for.cond36.preheader
  %50 = phi i32 [ %.pre302, %for.cond36.for.inc150_crit_edge ], [ %19, %for.cond36.preheader ]
  %51 = phi i32 [ %48, %for.cond36.for.inc150_crit_edge ], [ %20, %for.cond36.preheader ]
  %currentnode.2.lcssa = phi i32 [ %currentnode.3.lcssa, %for.cond36.for.inc150_crit_edge ], [ %currentnode.1282, %for.cond36.preheader ]
  %rank29.2.lcssa = phi i32 [ %rank29.3.lcssa, %for.cond36.for.inc150_crit_edge ], [ %rank29.1281, %for.cond36.preheader ]
  %j.2.lcssa = phi i32 [ %j.3.lcssa, %for.cond36.for.inc150_crit_edge ], [ %j.1280, %for.cond36.preheader ]
  %buf_length.2.lcssa = phi i32 [ %buf_length.3.lcssa, %for.cond36.for.inc150_crit_edge ], [ %buf_length.1279, %for.cond36.preheader ]
  %rank31.2.lcssa = phi i32 [ %rank31.3.lcssa, %for.cond36.for.inc150_crit_edge ], [ %rank31.1278, %for.cond36.preheader ]
  %inc151 = add nsw i32 %z.0283, 1
  %cmp33 = icmp slt i32 %inc151, %50
  br i1 %cmp33, label %for.cond36.preheader, label %for.cond32.for.inc153_crit_edge

for.cond32.for.inc153_crit_edge:                  ; preds = %for.inc150
  %.pre303 = load i32* @nt, align 4, !tbaa !10
  br label %for.inc153

for.inc153:                                       ; preds = %for.cond32.for.inc153_crit_edge, %for.cond32.preheader
  %52 = phi i32 [ %.pre303, %for.cond32.for.inc153_crit_edge ], [ %17, %for.cond32.preheader ]
  %53 = phi i32 [ %50, %for.cond32.for.inc153_crit_edge ], [ %18, %for.cond32.preheader ]
  %currentnode.1.lcssa = phi i32 [ %currentnode.2.lcssa, %for.cond32.for.inc153_crit_edge ], [ %currentnode.0294, %for.cond32.preheader ]
  %rank29.1.lcssa = phi i32 [ %rank29.2.lcssa, %for.cond32.for.inc153_crit_edge ], [ %rank29.0293, %for.cond32.preheader ]
  %j.1.lcssa = phi i32 [ %j.2.lcssa, %for.cond32.for.inc153_crit_edge ], [ %j.0292, %for.cond32.preheader ]
  %buf_length.1.lcssa = phi i32 [ %buf_length.2.lcssa, %for.cond32.for.inc153_crit_edge ], [ %buf_length.0291, %for.cond32.preheader ]
  %rank31.1.lcssa = phi i32 [ %rank31.2.lcssa, %for.cond32.for.inc153_crit_edge ], [ %rank31.0290, %for.cond32.preheader ]
  %inc154 = add nsw i32 %t.0295, 1
  %cmp30 = icmp slt i32 %inc154, %52
  br i1 %cmp30, label %for.cond32.preheader, label %for.end155

for.end155:                                       ; preds = %for.inc153, %if.end18
  call void (...)* @g_sync() #5
  %54 = load i32* @this_node, align 4, !tbaa !10
  %cmp156 = icmp eq i32 %54, 0
  br i1 %cmp156, label %if.then158, label %if.end172

if.then158:                                       ; preds = %for.end155
  %55 = bitcast %struct.su3_matrix* %lbuf.0 to i8*
  call void @free(i8* %55)
  %filename159 = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 2
  %56 = load i8** %filename159, align 8, !tbaa !19
  %call160 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([54 x i8]* @.str48, i64 0, i64 0), i8* %56) #5
  %arraydecay161 = getelementptr inbounds %struct.gauge_header* %gh.0, i64 0, i32 1, i64 0
  %call162 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([15 x i8]* @.str49, i64 0, i64 0), i8* %arraydecay161) #5
  %call163 = call i32 @fseeko(%struct._IO_FILE* %fp.0, i64 %checksum_offset.0, i32 0) #5
  %cmp164 = icmp slt i32 %call163, 0
  br i1 %cmp164, label %if.then166, label %if.end171

if.then166:                                       ; preds = %if.then158
  %57 = load i32* @this_node, align 4, !tbaa !10
  %call167 = call i32* @__errno_location() #7
  %58 = load i32* %call167, align 4, !tbaa !10
  %59 = load i8** %filename159, align 8, !tbaa !19
  %call169 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([55 x i8]* @.str46, i64 0, i64 0), i32 %57, i64 %offset.0, i32 %58, i8* %59) #5
  %60 = load %struct._IO_FILE** @stdout, align 8, !tbaa !8
  %call170 = call i32 @fflush(%struct._IO_FILE* %60) #5
  call void @terminate(i32 1) #5
  br label %if.end171

if.end171:                                        ; preds = %if.then166, %if.then158
  %61 = getelementptr inbounds [15 x i8]* %myname.i, i64 0, i64 0
  call void @llvm.lifetime.start(i64 15, i8* %61) #5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %61, i8* getelementptr inbounds ([15 x i8]* @write_checksum.myname, i64 0, i64 0), i64 15, i32 1, i1 false) #5
  %fp.i = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 0
  %62 = load %struct._IO_FILE** %fp.i, align 8, !tbaa !24
  %63 = bitcast i32* %sum29 to i8*
  %call.i1.i = call i64 @fwrite(i8* %63, i64 4, i64 1, %struct._IO_FILE* %62) #5
  %cmp.i2.i = icmp eq i64 %call.i1.i, 1
  br i1 %cmp.i2.i, label %pswrite_data.exit, label %if.then.i6.i

if.then.i6.i:                                     ; preds = %if.end171
  %64 = load i32* @this_node, align 4, !tbaa !10
  %call1.i3.i = call i32* @__errno_location() #7
  %65 = load i32* %call1.i3.i, align 4, !tbaa !10
  %call2.i4.i = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([31 x i8]* @.str7, i64 0, i64 0), i8* %61, i32 %64, i8* getelementptr inbounds ([9 x i8]* @.str40, i64 0, i64 0), i32 %65) #5
  %66 = load %struct._IO_FILE** @stdout, align 8, !tbaa !8
  %call3.i5.i = call i32 @fflush(%struct._IO_FILE* %66) #5
  call void @terminate(i32 1) #5
  br label %pswrite_data.exit

pswrite_data.exit:                                ; preds = %if.end171, %if.then.i6.i
  %67 = load %struct._IO_FILE** %fp.i, align 8, !tbaa !24
  %68 = bitcast i32* %sum31 to i8*
  %call.i1.i241 = call i64 @fwrite(i8* %68, i64 4, i64 1, %struct._IO_FILE* %67) #5
  %cmp.i2.i242 = icmp eq i64 %call.i1.i241, 1
  br i1 %cmp.i2.i242, label %pswrite_data.exit247, label %if.then.i6.i246

if.then.i6.i246:                                  ; preds = %pswrite_data.exit
  %69 = load i32* @this_node, align 4, !tbaa !10
  %call1.i3.i243 = call i32* @__errno_location() #7
  %70 = load i32* %call1.i3.i243, align 4, !tbaa !10
  %call2.i4.i244 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([31 x i8]* @.str7, i64 0, i64 0), i8* %61, i32 %69, i8* getelementptr inbounds ([9 x i8]* @.str40, i64 0, i64 0), i32 %70) #5
  %71 = load %struct._IO_FILE** @stdout, align 8, !tbaa !8
  %call3.i5.i245 = call i32 @fflush(%struct._IO_FILE* %71) #5
  call void @terminate(i32 1) #5
  br label %pswrite_data.exit247

pswrite_data.exit247:                             ; preds = %pswrite_data.exit, %if.then.i6.i246
  %72 = load i32* %sum29, align 4, !tbaa !20
  %73 = load i32* %sum31, align 4, !tbaa !21
  %call.i = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([17 x i8]* @.str43, i64 0, i64 0), i32 %72, i32 %73) #5
  call void @llvm.lifetime.end(i64 15, i8* %61) #5
  br label %if.end172

if.end172:                                        ; preds = %pswrite_data.exit247, %for.end155
  call void @llvm.lifetime.end(i64 576, i8* %0) #5
  ret void
}

; Function Attrs: nounwind
declare i32 @fseeko(%struct._IO_FILE* nocapture, i64, i32) #2

declare void @g_sync(...) #3

declare i32 @node_number(i32, i32, i32, i32) #3

declare void @send_field(i8*, i32, i32) #3

declare void @get_field(i8*, i32) #3

declare i32 @node_index(i32, i32, i32, i32) #3

; Function Attrs: nounwind uwtable
define void @w_serial_f(%struct.gauge_file* nocapture readonly %gf) #0 {
entry:
  tail call void (...)* @g_sync() #5
  %0 = load i32* @this_node, align 4, !tbaa !10
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end6

if.then:                                          ; preds = %entry
  %parallel = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 5
  %1 = load i32* %parallel, align 4, !tbaa !27
  %tobool = icmp eq i32 %1, 0
  br i1 %tobool, label %if.end3, label %if.then1

if.then1:                                         ; preds = %if.then
  %puts = tail call i32 @puts(i8* getelementptr inbounds ([54 x i8]* @str178, i64 0, i64 0))
  br label %if.end3

if.end3:                                          ; preds = %if.then1, %if.then
  %fp = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 0
  %2 = load %struct._IO_FILE** %fp, align 8, !tbaa !24
  %call2 = tail call i32 @fclose(%struct._IO_FILE* %2) #5
  %.pr = load i32* @this_node, align 4, !tbaa !10
  %cmp4 = icmp eq i32 %.pr, 0
  br i1 %cmp4, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end3
  tail call void @write_gauge_info_file(%struct.gauge_file* %gf)
  br label %if.end6

if.end6:                                          ; preds = %entry, %if.then5, %if.end3
  ret void
}

; Function Attrs: nounwind uwtable
define void @read_site_list(i32 %parallel, %struct.gauge_file* nocapture %gf) #0 {
entry:
  %header = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 1
  %0 = load %struct.gauge_header** %header, align 8, !tbaa !16
  %order = getelementptr inbounds %struct.gauge_header* %0, i64 0, i32 4
  %1 = load i32* %order, align 4, !tbaa !23
  %cmp = icmp eq i32 %1, 0
  br i1 %cmp, label %if.else41, label %if.then

if.then:                                          ; preds = %entry
  %2 = load i32* @volume, align 4, !tbaa !10
  %conv = sext i32 %2 to i64
  %call = tail call i8* @calloc(i64 %conv, i64 4) #5
  %3 = bitcast i8* %call to i32*
  %rank2rcv = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 4
  store i32* %3, i32** %rank2rcv, align 8, !tbaa !26
  %cmp2 = icmp eq i8* %call, null
  br i1 %cmp2, label %if.then4, label %if.end

if.then4:                                         ; preds = %if.then
  %puts = tail call i32 @puts(i8* getelementptr inbounds ([44 x i8]* @str179, i64 0, i64 0))
  tail call void @terminate(i32 1) #5
  br label %if.end

if.end:                                           ; preds = %if.then4, %if.then
  %4 = load i32* @this_node, align 4, !tbaa !10
  %cmp6 = icmp eq i32 %4, 0
  br i1 %cmp6, label %if.then8, label %if.end37

if.then8:                                         ; preds = %if.end
  %tobool = icmp eq i32 %parallel, 0
  %5 = load i32** %rank2rcv, align 8, !tbaa !26
  %6 = bitcast i32* %5 to i8*
  %7 = load i32* @volume, align 4, !tbaa !10
  %conv11 = sext i32 %7 to i64
  %fp = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 0
  %8 = load %struct._IO_FILE** %fp, align 8, !tbaa !24
  br i1 %tobool, label %if.else, label %if.then9

if.then9:                                         ; preds = %if.then8
  %call12 = tail call i64 @g_read(i8* %6, i64 4, i64 %conv11, %struct._IO_FILE* %8) #5
  %conv13 = trunc i64 %call12 to i32
  %9 = load i32* @volume, align 4, !tbaa !10
  %cmp14 = icmp eq i32 %conv13, %9
  br i1 %cmp14, label %if.end31, label %if.then16

if.then16:                                        ; preds = %if.then9
  %10 = load i32* @this_node, align 4, !tbaa !10
  %call17 = tail call i32* @__errno_location() #7
  %11 = load i32* %call17, align 4, !tbaa !10
  %call18 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([49 x i8]* @.str52, i64 0, i64 0), i32 %10, i32 %11) #5
  tail call void @terminate(i32 1) #5
  br label %if.end31

if.else:                                          ; preds = %if.then8
  %call23 = tail call i64 @fread(i8* %6, i64 4, i64 %conv11, %struct._IO_FILE* %8) #5
  %conv24 = trunc i64 %call23 to i32
  %12 = load i32* @volume, align 4, !tbaa !10
  %cmp25 = icmp eq i32 %conv24, %12
  br i1 %cmp25, label %if.end31, label %if.then27

if.then27:                                        ; preds = %if.else
  %13 = load i32* @this_node, align 4, !tbaa !10
  %call28 = tail call i32* @__errno_location() #7
  %14 = load i32* %call28, align 4, !tbaa !10
  %call29 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([49 x i8]* @.str52, i64 0, i64 0), i32 %13, i32 %14) #5
  tail call void @terminate(i32 1) #5
  br label %if.end31

if.end31:                                         ; preds = %if.then9, %if.else, %if.then27, %if.then16
  %byterevflag = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 3
  %15 = load i32* %byterevflag, align 4, !tbaa !25
  %cmp32 = icmp eq i32 %15, 1
  br i1 %cmp32, label %if.then34, label %if.end37

if.then34:                                        ; preds = %if.end31
  %16 = load i32** %rank2rcv, align 8, !tbaa !26
  %17 = load i32* @volume, align 4, !tbaa !10
  tail call void @byterevn(i32* %16, i32 %17) #5
  br label %if.end37

if.end37:                                         ; preds = %if.end31, %if.then34, %if.end
  %18 = load i32** %rank2rcv, align 8, !tbaa !26
  %19 = bitcast i32* %18 to i8*
  %20 = load i32* @volume, align 4, !tbaa !10
  %mul = shl i32 %20, 2
  tail call void @broadcast_bytes(i8* %19, i32 %mul) #5
  br label %if.end43

if.else41:                                        ; preds = %entry
  %rank2rcv42 = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 4
  store i32* null, i32** %rank2rcv42, align 8, !tbaa !26
  br label %if.end43

if.end43:                                         ; preds = %if.else41, %if.end37
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @read_v3_gauge_hdr(%struct.gauge_file* nocapture readonly %gf, i32 %parallel, i32* nocapture %byterevflag) #0 {
entry:
  %c1 = alloca double, align 8
  %c2 = alloca double, align 8
  %myname = alloca [18 x i8], align 16
  %0 = getelementptr inbounds [18 x i8]* %myname, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* getelementptr inbounds ([18 x i8]* @read_v3_gauge_hdr.myname, i64 0, i64 0), i64 18, i32 16, i1 false)
  %fp6 = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 0
  %1 = load %struct._IO_FILE** %fp6, align 8, !tbaa !24
  %header = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 1
  %2 = load %struct.gauge_header** %header, align 8, !tbaa !16
  %magic_number = getelementptr inbounds %struct.gauge_header* %2, i64 0, i32 0
  %3 = load i32* %magic_number, align 4, !tbaa !22
  %cmp = icmp eq i32 %3, 0
  br i1 %cmp, label %if.then, label %if.end11

if.then:                                          ; preds = %entry
  %puts154 = call i32 @puts(i8* getelementptr inbounds ([73 x i8]* @str183, i64 0, i64 0))
  %4 = bitcast %struct.gauge_header* %2 to i8*
  %call8 = call i32 @psread_data(i32 %parallel, %struct._IO_FILE* %1, i8* %4, i64 4, i8* %0, i8* getelementptr inbounds ([13 x i8]* @.str54, i64 0, i64 0))
  %cmp9 = icmp eq i32 %call8, 0
  br i1 %cmp9, label %if.end11thread-pre-split, label %if.then10

if.then10:                                        ; preds = %if.then
  call void @terminate(i32 1) #5
  br label %if.end11thread-pre-split

if.end11thread-pre-split:                         ; preds = %if.then10, %if.then
  %.pr = load i32* %magic_number, align 4, !tbaa !22
  br label %if.end11

if.end11:                                         ; preds = %if.end11thread-pre-split, %entry
  %5 = phi i32 [ %.pr, %if.end11thread-pre-split ], [ %3, %entry ]
  %sixtyfourbits.0 = phi i32 [ 1, %if.end11thread-pre-split ], [ 0, %entry ]
  %cmp14 = icmp eq i32 %5, 59354
  br i1 %cmp14, label %if.then15, label %if.else17

if.then15:                                        ; preds = %if.end11
  %puts153 = call i32 @puts(i8* getelementptr inbounds ([48 x i8]* @str182, i64 0, i64 0))
  store i32 0, i32* %byterevflag, align 4, !tbaa !10
  br label %for.cond.preheader

for.cond.preheader:                               ; preds = %if.then21, %if.then15
  %tobool = icmp eq i32 %sixtyfourbits.0, 0
  %6 = load i32* %byterevflag, align 4, !tbaa !10
  %arrayidx.us = getelementptr inbounds %struct.gauge_header* %2, i64 0, i32 2, i64 0
  %7 = bitcast i32* %arrayidx.us to i8*
  %call31.us = call i32 @psread_byteorder(i32 %6, i32 %parallel, %struct._IO_FILE* %1, i8* %7, i64 4, i8* %0, i8* getelementptr inbounds ([11 x i8]* @.str11, i64 0, i64 0))
  %cmp32.us = icmp eq i32 %call31.us, 0
  br i1 %tobool, label %for.cond.preheader.split.us, label %for.cond.preheader.for.cond.preheader.split_crit_edge

for.cond.preheader.for.cond.preheader.split_crit_edge: ; preds = %for.cond.preheader
  br i1 %cmp32.us, label %if.then35, label %if.then33

for.cond.preheader.split.us:                      ; preds = %for.cond.preheader
  br i1 %cmp32.us, label %for.inc.us, label %if.then33.us

if.then33.us:                                     ; preds = %for.cond.preheader.split.us
  call void @terminate(i32 1) #5
  br label %for.inc.us

for.inc.us:                                       ; preds = %for.cond.preheader.split.us, %if.then33.us
  %8 = load i32* %byterevflag, align 4, !tbaa !10
  %arrayidx.us.1 = getelementptr inbounds %struct.gauge_header* %2, i64 0, i32 2, i64 1
  %9 = bitcast i32* %arrayidx.us.1 to i8*
  %call31.us.1 = call i32 @psread_byteorder(i32 %8, i32 %parallel, %struct._IO_FILE* %1, i8* %9, i64 4, i8* %0, i8* getelementptr inbounds ([11 x i8]* @.str11, i64 0, i64 0))
  %cmp32.us.1 = icmp eq i32 %call31.us.1, 0
  br i1 %cmp32.us.1, label %for.inc.us.1, label %if.then33.us.1

if.else17:                                        ; preds = %if.end11
  call void @byterevn(i32* %magic_number, i32 1) #5
  %10 = load i32* %magic_number, align 4, !tbaa !22
  %cmp20 = icmp eq i32 %10, 59354
  br i1 %cmp20, label %if.then21, label %if.else25

if.then21:                                        ; preds = %if.else17
  store i32 1, i32* %byterevflag, align 4, !tbaa !10
  %puts = call i32 @puts(i8* getelementptr inbounds ([66 x i8]* @str180, i64 0, i64 0))
  %puts152 = call i32 @puts(i8* getelementptr inbounds ([38 x i8]* @str181, i64 0, i64 0))
  %call24 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([53 x i8]* @.str58, i64 0, i64 0), i32 4, i32 8) #5
  call void @terminate(i32 1) #5
  br label %for.cond.preheader

if.else25:                                        ; preds = %if.else17
  store i32 %5, i32* %magic_number, align 4, !tbaa !22
  br label %return

if.then33:                                        ; preds = %for.cond.preheader.for.cond.preheader.split_crit_edge
  call void @terminate(i32 1) #5
  br label %if.then35

if.then35:                                        ; preds = %if.then33, %for.cond.preheader.for.cond.preheader.split_crit_edge
  %11 = load i32* %byterevflag, align 4, !tbaa !10
  %call40 = call i32 @psread_byteorder(i32 %11, i32 %parallel, %struct._IO_FILE* %1, i8* %7, i64 4, i8* %0, i8* getelementptr inbounds ([11 x i8]* @.str11, i64 0, i64 0))
  %cmp41 = icmp eq i32 %call40, 0
  br i1 %cmp41, label %for.inc, label %if.then42

if.then42:                                        ; preds = %if.then35
  call void @terminate(i32 1) #5
  br label %for.inc

for.inc:                                          ; preds = %if.then35, %if.then42
  %12 = load i32* %byterevflag, align 4, !tbaa !10
  %arrayidx.1 = getelementptr inbounds %struct.gauge_header* %2, i64 0, i32 2, i64 1
  %13 = bitcast i32* %arrayidx.1 to i8*
  %call31.1 = call i32 @psread_byteorder(i32 %12, i32 %parallel, %struct._IO_FILE* %1, i8* %13, i64 4, i8* %0, i8* getelementptr inbounds ([11 x i8]* @.str11, i64 0, i64 0))
  %cmp32.1 = icmp eq i32 %call31.1, 0
  br i1 %cmp32.1, label %if.then35.1, label %if.then33.1

for.end:                                          ; preds = %if.then33.us.3, %for.inc.us.2, %if.then35.3, %if.then42.3
  %arrayidx46 = getelementptr inbounds %struct.gauge_header* %2, i64 0, i32 2, i64 0
  %14 = load i32* %arrayidx46, align 4, !tbaa !10
  %15 = load i32* @nx, align 4, !tbaa !10
  %cmp47 = icmp eq i32 %14, %15
  br i1 %cmp47, label %lor.lhs.false, label %for.end.if.then59_crit_edge

for.end.if.then59_crit_edge:                      ; preds = %for.end
  %.pre = load i32* @ny, align 4
  br label %if.then59

lor.lhs.false:                                    ; preds = %for.end
  %arrayidx49 = getelementptr inbounds %struct.gauge_header* %2, i64 0, i32 2, i64 1
  %16 = load i32* %arrayidx49, align 4, !tbaa !10
  %17 = load i32* @ny, align 4, !tbaa !10
  %cmp50 = icmp eq i32 %16, %17
  br i1 %cmp50, label %lor.lhs.false51, label %if.then59

lor.lhs.false51:                                  ; preds = %lor.lhs.false
  %arrayidx53 = getelementptr inbounds %struct.gauge_header* %2, i64 0, i32 2, i64 2
  %18 = load i32* %arrayidx53, align 4, !tbaa !10
  %19 = load i32* @nz, align 4, !tbaa !10
  %cmp54 = icmp eq i32 %18, %19
  br i1 %cmp54, label %lor.lhs.false55, label %if.then59

lor.lhs.false55:                                  ; preds = %lor.lhs.false51
  %arrayidx57 = getelementptr inbounds %struct.gauge_header* %2, i64 0, i32 2, i64 3
  %20 = load i32* %arrayidx57, align 4, !tbaa !10
  %21 = load i32* @nt, align 4, !tbaa !10
  %cmp58 = icmp eq i32 %20, %21
  br i1 %cmp58, label %if.end93, label %if.then59

if.then59:                                        ; preds = %for.end.if.then59_crit_edge, %lor.lhs.false55, %lor.lhs.false51, %lor.lhs.false
  %22 = phi i32 [ %.pre, %for.end.if.then59_crit_edge ], [ %16, %lor.lhs.false55 ], [ %16, %lor.lhs.false51 ], [ %17, %lor.lhs.false ]
  %23 = and i32 %22, %15
  %24 = icmp ne i32 %23, -1
  %25 = load i32* @nz, align 4
  %cmp64 = icmp ne i32 %25, -1
  %or.cond110 = or i1 %24, %cmp64
  %26 = load i32* @nt, align 4
  %cmp66 = icmp ne i32 %26, -1
  %or.cond111 = or i1 %or.cond110, %cmp66
  br i1 %or.cond111, label %if.then67, label %if.else81

if.then67:                                        ; preds = %if.then59
  %call68 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([49 x i8]* @.str59, i64 0, i64 0)) #5
  %27 = load i32* %arrayidx46, align 4, !tbaa !10
  %call75 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str60, i64 0, i64 0), i32 %27) #5
  %arrayidx74.1 = getelementptr inbounds %struct.gauge_header* %2, i64 0, i32 2, i64 1
  %28 = load i32* %arrayidx74.1, align 4, !tbaa !10
  %call75.1 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str60, i64 0, i64 0), i32 %28) #5
  %arrayidx74.2 = getelementptr inbounds %struct.gauge_header* %2, i64 0, i32 2, i64 2
  %29 = load i32* %arrayidx74.2, align 4, !tbaa !10
  %call75.2 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str60, i64 0, i64 0), i32 %29) #5
  %arrayidx74.3 = getelementptr inbounds %struct.gauge_header* %2, i64 0, i32 2, i64 3
  %30 = load i32* %arrayidx74.3, align 4, !tbaa !10
  %call75.3 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str60, i64 0, i64 0), i32 %30) #5
  %putchar = call i32 @putchar(i32 10) #5
  %31 = load %struct._IO_FILE** @stdout, align 8, !tbaa !8
  %call80 = call i32 @fflush(%struct._IO_FILE* %31) #5
  call void @terminate(i32 1) #5
  br label %if.end93

if.else81:                                        ; preds = %if.then59
  store i32 %14, i32* @nx, align 4, !tbaa !10
  %arrayidx85 = getelementptr inbounds %struct.gauge_header* %2, i64 0, i32 2, i64 1
  %32 = load i32* %arrayidx85, align 4, !tbaa !10
  store i32 %32, i32* @ny, align 4, !tbaa !10
  %arrayidx87 = getelementptr inbounds %struct.gauge_header* %2, i64 0, i32 2, i64 2
  %33 = load i32* %arrayidx87, align 4, !tbaa !10
  store i32 %33, i32* @nz, align 4, !tbaa !10
  %arrayidx89 = getelementptr inbounds %struct.gauge_header* %2, i64 0, i32 2, i64 3
  %34 = load i32* %arrayidx89, align 4, !tbaa !10
  store i32 %34, i32* @nt, align 4, !tbaa !10
  %mul = mul i32 %14, %34
  %mul90 = mul i32 %mul, %32
  %mul91 = mul i32 %mul90, %33
  store i32 %mul91, i32* @volume, align 4, !tbaa !10
  br label %if.end93

if.end93:                                         ; preds = %lor.lhs.false55, %if.then67, %if.else81
  %header_bytes = getelementptr inbounds %struct.gauge_header* %2, i64 0, i32 3
  %. = select i1 %tobool, i32 28, i32 48
  store i32 %., i32* %header_bytes, align 4, !tbaa !14
  %order = getelementptr inbounds %struct.gauge_header* %2, i64 0, i32 4
  store i32 0, i32* %order, align 4, !tbaa !23
  %35 = load i32* %byterevflag, align 4, !tbaa !10
  %36 = bitcast double* %c1 to i8*
  %call100 = call i32 @psread_byteorder(i32 %35, i32 %parallel, %struct._IO_FILE* %1, i8* %36, i64 8, i8* %0, i8* getelementptr inbounds ([3 x i8]* @.str61, i64 0, i64 0))
  %cmp101 = icmp eq i32 %call100, 0
  br i1 %cmp101, label %if.end103, label %if.then102

if.then102:                                       ; preds = %if.end93
  call void @terminate(i32 1) #5
  br label %if.end103

if.end103:                                        ; preds = %if.end93, %if.then102
  %37 = load i32* %byterevflag, align 4, !tbaa !10
  %38 = bitcast double* %c2 to i8*
  %call105 = call i32 @psread_byteorder(i32 %37, i32 %parallel, %struct._IO_FILE* %1, i8* %38, i64 8, i8* %0, i8* getelementptr inbounds ([3 x i8]* @.str62, i64 0, i64 0))
  %cmp106 = icmp eq i32 %call105, 0
  br i1 %cmp106, label %if.end108, label %if.then107

if.then107:                                       ; preds = %if.end103
  call void @terminate(i32 1) #5
  br label %if.end108

if.end108:                                        ; preds = %if.end103, %if.then107
  %39 = load double* %c1, align 8, !tbaa !11
  %40 = load double* %c2, align 8, !tbaa !11
  %call109 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([40 x i8]* @.str63, i64 0, i64 0), double %39, double %40) #5
  br label %return

return:                                           ; preds = %if.end108, %if.else25
  %retval.0 = phi i32 [ 0, %if.end108 ], [ 1, %if.else25 ]
  ret i32 %retval.0

if.then33.1:                                      ; preds = %for.inc
  call void @terminate(i32 1) #5
  br label %if.then35.1

if.then35.1:                                      ; preds = %for.inc, %if.then33.1
  %41 = load i32* %byterevflag, align 4, !tbaa !10
  %call40.1 = call i32 @psread_byteorder(i32 %41, i32 %parallel, %struct._IO_FILE* %1, i8* %13, i64 4, i8* %0, i8* getelementptr inbounds ([11 x i8]* @.str11, i64 0, i64 0))
  %cmp41.1 = icmp eq i32 %call40.1, 0
  br i1 %cmp41.1, label %for.inc.1, label %if.then42.1

if.then42.1:                                      ; preds = %if.then35.1
  call void @terminate(i32 1) #5
  br label %for.inc.1

for.inc.1:                                        ; preds = %if.then42.1, %if.then35.1
  %42 = load i32* %byterevflag, align 4, !tbaa !10
  %arrayidx.2 = getelementptr inbounds %struct.gauge_header* %2, i64 0, i32 2, i64 2
  %43 = bitcast i32* %arrayidx.2 to i8*
  %call31.2 = call i32 @psread_byteorder(i32 %42, i32 %parallel, %struct._IO_FILE* %1, i8* %43, i64 4, i8* %0, i8* getelementptr inbounds ([11 x i8]* @.str11, i64 0, i64 0))
  %cmp32.2 = icmp eq i32 %call31.2, 0
  br i1 %cmp32.2, label %if.then35.2, label %if.then33.2

if.then33.2:                                      ; preds = %for.inc.1
  call void @terminate(i32 1) #5
  br label %if.then35.2

if.then35.2:                                      ; preds = %for.inc.1, %if.then33.2
  %44 = load i32* %byterevflag, align 4, !tbaa !10
  %call40.2 = call i32 @psread_byteorder(i32 %44, i32 %parallel, %struct._IO_FILE* %1, i8* %43, i64 4, i8* %0, i8* getelementptr inbounds ([11 x i8]* @.str11, i64 0, i64 0))
  %cmp41.2 = icmp eq i32 %call40.2, 0
  br i1 %cmp41.2, label %for.inc.2, label %if.then42.2

if.then42.2:                                      ; preds = %if.then35.2
  call void @terminate(i32 1) #5
  br label %for.inc.2

for.inc.2:                                        ; preds = %if.then42.2, %if.then35.2
  %45 = load i32* %byterevflag, align 4, !tbaa !10
  %arrayidx.3 = getelementptr inbounds %struct.gauge_header* %2, i64 0, i32 2, i64 3
  %46 = bitcast i32* %arrayidx.3 to i8*
  %call31.3 = call i32 @psread_byteorder(i32 %45, i32 %parallel, %struct._IO_FILE* %1, i8* %46, i64 4, i8* %0, i8* getelementptr inbounds ([11 x i8]* @.str11, i64 0, i64 0))
  %cmp32.3 = icmp eq i32 %call31.3, 0
  br i1 %cmp32.3, label %if.then35.3, label %if.then33.3

if.then33.3:                                      ; preds = %for.inc.2
  call void @terminate(i32 1) #5
  br label %if.then35.3

if.then35.3:                                      ; preds = %for.inc.2, %if.then33.3
  %47 = load i32* %byterevflag, align 4, !tbaa !10
  %call40.3 = call i32 @psread_byteorder(i32 %47, i32 %parallel, %struct._IO_FILE* %1, i8* %46, i64 4, i8* %0, i8* getelementptr inbounds ([11 x i8]* @.str11, i64 0, i64 0))
  %cmp41.3 = icmp eq i32 %call40.3, 0
  br i1 %cmp41.3, label %for.end, label %if.then42.3

if.then42.3:                                      ; preds = %if.then35.3
  call void @terminate(i32 1) #5
  br label %for.end

if.then33.us.1:                                   ; preds = %for.inc.us
  call void @terminate(i32 1) #5
  br label %for.inc.us.1

for.inc.us.1:                                     ; preds = %for.inc.us, %if.then33.us.1
  %48 = load i32* %byterevflag, align 4, !tbaa !10
  %arrayidx.us.2 = getelementptr inbounds %struct.gauge_header* %2, i64 0, i32 2, i64 2
  %49 = bitcast i32* %arrayidx.us.2 to i8*
  %call31.us.2 = call i32 @psread_byteorder(i32 %48, i32 %parallel, %struct._IO_FILE* %1, i8* %49, i64 4, i8* %0, i8* getelementptr inbounds ([11 x i8]* @.str11, i64 0, i64 0))
  %cmp32.us.2 = icmp eq i32 %call31.us.2, 0
  br i1 %cmp32.us.2, label %for.inc.us.2, label %if.then33.us.2

if.then33.us.2:                                   ; preds = %for.inc.us.1
  call void @terminate(i32 1) #5
  br label %for.inc.us.2

for.inc.us.2:                                     ; preds = %for.inc.us.1, %if.then33.us.2
  %50 = load i32* %byterevflag, align 4, !tbaa !10
  %arrayidx.us.3 = getelementptr inbounds %struct.gauge_header* %2, i64 0, i32 2, i64 3
  %51 = bitcast i32* %arrayidx.us.3 to i8*
  %call31.us.3 = call i32 @psread_byteorder(i32 %50, i32 %parallel, %struct._IO_FILE* %1, i8* %51, i64 4, i8* %0, i8* getelementptr inbounds ([11 x i8]* @.str11, i64 0, i64 0))
  %cmp32.us.3 = icmp eq i32 %call31.us.3, 0
  br i1 %cmp32.us.3, label %for.end, label %if.then33.us.3

if.then33.us.3:                                   ; preds = %for.inc.us.2
  call void @terminate(i32 1) #5
  br label %for.end
}

; Function Attrs: nounwind uwtable
define i32 @read_1996_gauge_hdr(%struct.gauge_file* nocapture readonly %gf, i32 %parallel, i32* nocapture %byterevflag) #0 {
entry:
  %gauge_field = alloca %struct.anon, align 8
  %myname = alloca [20 x i8], align 16
  %0 = bitcast %struct.anon* %gauge_field to i8*
  call void @llvm.lifetime.start(i64 224, i8* %0) #5
  %1 = getelementptr inbounds [20 x i8]* %myname, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* getelementptr inbounds ([20 x i8]* @read_1996_gauge_hdr.myname, i64 0, i64 0), i64 20, i32 16, i1 false)
  %fp4 = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 0
  %2 = load %struct._IO_FILE** %fp4, align 8, !tbaa !24
  %header = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 1
  %3 = load %struct.gauge_header** %header, align 8, !tbaa !16
  %magic_number = getelementptr inbounds %struct.gauge_header* %3, i64 0, i32 0
  %4 = load i32* %magic_number, align 4, !tbaa !22
  %cmp = icmp eq i32 %4, 53546
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %puts174 = call i32 @puts(i8* getelementptr inbounds ([49 x i8]* @str186, i64 0, i64 0))
  store i32 0, i32* %byterevflag, align 4, !tbaa !10
  br label %if.end15

if.else:                                          ; preds = %entry
  call void @byterevn(i32* %magic_number, i32 1) #5
  %5 = load i32* %magic_number, align 4, !tbaa !22
  %cmp8 = icmp eq i32 %5, 53546
  br i1 %cmp8, label %if.then9, label %if.else13

if.then9:                                         ; preds = %if.else
  store i32 1, i32* %byterevflag, align 4, !tbaa !10
  %puts = call i32 @puts(i8* getelementptr inbounds ([67 x i8]* @str184, i64 0, i64 0))
  %puts173 = call i32 @puts(i8* getelementptr inbounds ([40 x i8]* @str185, i64 0, i64 0))
  %call12 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([53 x i8]* @.str58, i64 0, i64 0), i32 4, i32 8) #5
  call void @terminate(i32 1) #5
  %.pre = load i32* %byterevflag, align 4, !tbaa !10
  br label %if.end15

if.else13:                                        ; preds = %if.else
  store i32 %4, i32* %magic_number, align 4, !tbaa !22
  br label %cleanup

if.end15:                                         ; preds = %if.then9, %if.then
  %6 = phi i32 [ %.pre, %if.then9 ], [ 0, %if.then ]
  %dims = getelementptr inbounds %struct.gauge_header* %3, i64 0, i32 2
  %7 = bitcast [4 x i32]* %dims to i8*
  %call17 = call i32 @psread_byteorder(i32 %6, i32 %parallel, %struct._IO_FILE* %2, i8* %7, i64 16, i8* %1, i8* getelementptr inbounds ([11 x i8]* @.str11, i64 0, i64 0))
  %cmp18 = icmp eq i32 %call17, 0
  br i1 %cmp18, label %if.end20, label %if.then19

if.then19:                                        ; preds = %if.end15
  call void @terminate(i32 1) #5
  br label %if.end20

if.end20:                                         ; preds = %if.end15, %if.then19
  %arrayidx = getelementptr inbounds [4 x i32]* %dims, i64 0, i64 0
  %8 = load i32* %arrayidx, align 4, !tbaa !10
  %9 = load i32* @nx, align 4, !tbaa !10
  %cmp22 = icmp eq i32 %8, %9
  br i1 %cmp22, label %lor.lhs.false, label %if.end20.if.then34_crit_edge

if.end20.if.then34_crit_edge:                     ; preds = %if.end20
  %.pre181 = load i32* @ny, align 4
  br label %if.then34

lor.lhs.false:                                    ; preds = %if.end20
  %arrayidx24 = getelementptr inbounds %struct.gauge_header* %3, i64 0, i32 2, i64 1
  %10 = load i32* %arrayidx24, align 4, !tbaa !10
  %11 = load i32* @ny, align 4, !tbaa !10
  %cmp25 = icmp eq i32 %10, %11
  br i1 %cmp25, label %lor.lhs.false26, label %if.then34

lor.lhs.false26:                                  ; preds = %lor.lhs.false
  %arrayidx28 = getelementptr inbounds %struct.gauge_header* %3, i64 0, i32 2, i64 2
  %12 = load i32* %arrayidx28, align 4, !tbaa !10
  %13 = load i32* @nz, align 4, !tbaa !10
  %cmp29 = icmp eq i32 %12, %13
  br i1 %cmp29, label %lor.lhs.false30, label %if.then34

lor.lhs.false30:                                  ; preds = %lor.lhs.false26
  %arrayidx32 = getelementptr inbounds %struct.gauge_header* %3, i64 0, i32 2, i64 3
  %14 = load i32* %arrayidx32, align 4, !tbaa !10
  %15 = load i32* @nt, align 4, !tbaa !10
  %cmp33 = icmp eq i32 %14, %15
  br i1 %cmp33, label %if.end62, label %if.then34

if.then34:                                        ; preds = %if.end20.if.then34_crit_edge, %lor.lhs.false30, %lor.lhs.false26, %lor.lhs.false
  %16 = phi i32 [ %.pre181, %if.end20.if.then34_crit_edge ], [ %10, %lor.lhs.false30 ], [ %10, %lor.lhs.false26 ], [ %11, %lor.lhs.false ]
  %17 = and i32 %16, %9
  %18 = icmp ne i32 %17, -1
  %19 = load i32* @nz, align 4
  %cmp39 = icmp ne i32 %19, -1
  %or.cond128 = or i1 %18, %cmp39
  %20 = load i32* @nt, align 4
  %cmp41 = icmp ne i32 %20, -1
  %or.cond129 = or i1 %or.cond128, %cmp41
  br i1 %or.cond129, label %if.then42, label %if.else50

if.then42:                                        ; preds = %if.then34
  %call43 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([51 x i8]* @.str67, i64 0, i64 0)) #5
  %arrayidx46 = getelementptr inbounds %struct.gauge_header* %3, i64 0, i32 2, i64 0
  %21 = load i32* %arrayidx46, align 4, !tbaa !10
  %call47 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str60, i64 0, i64 0), i32 %21) #5
  %arrayidx46.1 = getelementptr inbounds %struct.gauge_header* %3, i64 0, i32 2, i64 1
  %22 = load i32* %arrayidx46.1, align 4, !tbaa !10
  %call47.1 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str60, i64 0, i64 0), i32 %22) #5
  %arrayidx46.2 = getelementptr inbounds %struct.gauge_header* %3, i64 0, i32 2, i64 2
  %23 = load i32* %arrayidx46.2, align 4, !tbaa !10
  %call47.2 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str60, i64 0, i64 0), i32 %23) #5
  %arrayidx46.3 = getelementptr inbounds %struct.gauge_header* %3, i64 0, i32 2, i64 3
  %24 = load i32* %arrayidx46.3, align 4, !tbaa !10
  %call47.3 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str60, i64 0, i64 0), i32 %24) #5
  %putchar = call i32 @putchar(i32 10) #5
  %25 = load %struct._IO_FILE** @stdout, align 8, !tbaa !8
  %call49 = call i32 @fflush(%struct._IO_FILE* %25) #5
  call void @terminate(i32 1) #5
  br label %if.end62

if.else50:                                        ; preds = %if.then34
  store i32 %8, i32* @nx, align 4, !tbaa !10
  %arrayidx54 = getelementptr inbounds %struct.gauge_header* %3, i64 0, i32 2, i64 1
  %26 = load i32* %arrayidx54, align 4, !tbaa !10
  store i32 %26, i32* @ny, align 4, !tbaa !10
  %arrayidx56 = getelementptr inbounds %struct.gauge_header* %3, i64 0, i32 2, i64 2
  %27 = load i32* %arrayidx56, align 4, !tbaa !10
  store i32 %27, i32* @nz, align 4, !tbaa !10
  %arrayidx58 = getelementptr inbounds %struct.gauge_header* %3, i64 0, i32 2, i64 3
  %28 = load i32* %arrayidx58, align 4, !tbaa !10
  store i32 %28, i32* @nt, align 4, !tbaa !10
  %mul = mul i32 %8, %28
  %mul59 = mul i32 %mul, %26
  %mul60 = mul i32 %mul59, %27
  store i32 %mul60, i32* @volume, align 4, !tbaa !10
  br label %if.end62

if.end62:                                         ; preds = %lor.lhs.false30, %if.then42, %if.else50
  %29 = load i32* %byterevflag, align 4, !tbaa !10
  %header_bytes = getelementptr inbounds %struct.gauge_header* %3, i64 0, i32 3
  %30 = bitcast i32* %header_bytes to i8*
  %call64 = call i32 @psread_byteorder(i32 %29, i32 %parallel, %struct._IO_FILE* %2, i8* %30, i64 4, i8* %1, i8* getelementptr inbounds ([12 x i8]* @.str68, i64 0, i64 0))
  %cmp65 = icmp eq i32 %call64, 0
  br i1 %cmp65, label %if.end67, label %if.then66

if.then66:                                        ; preds = %if.end62
  call void @terminate(i32 1) #5
  br label %if.end67

if.end67:                                         ; preds = %if.end62, %if.then66
  %31 = load i32* %byterevflag, align 4, !tbaa !10
  %order = getelementptr inbounds %struct.gauge_header* %3, i64 0, i32 4
  %32 = bitcast i32* %order to i8*
  %call69 = call i32 @psread_byteorder(i32 %31, i32 %parallel, %struct._IO_FILE* %2, i8* %32, i64 4, i8* %1, i8* getelementptr inbounds ([6 x i8]* @.str13, i64 0, i64 0))
  %cmp70 = icmp eq i32 %call69, 0
  br i1 %cmp70, label %if.end72, label %if.then71

if.then71:                                        ; preds = %if.end67
  call void @terminate(i32 1) #5
  br label %if.end72

if.end72:                                         ; preds = %if.end67, %if.then71
  %33 = load i32* %byterevflag, align 4, !tbaa !10
  %n_descript = getelementptr inbounds %struct.anon* %gauge_field, i64 0, i32 0
  %call74 = call i32 @psread_byteorder(i32 %33, i32 %parallel, %struct._IO_FILE* %2, i8* %0, i64 4, i8* %1, i8* getelementptr inbounds ([11 x i8]* @.str69, i64 0, i64 0))
  %cmp75 = icmp eq i32 %call74, 0
  br i1 %cmp75, label %if.end77, label %if.then76

if.then76:                                        ; preds = %if.end72
  call void @terminate(i32 1) #5
  br label %if.end77

if.end77:                                         ; preds = %if.end72, %if.then76
  %34 = load i32* %n_descript, align 8, !tbaa !31
  %cmp79 = icmp sgt i32 %34, 200
  br i1 %cmp79, label %if.then80, label %if.end84

if.then80:                                        ; preds = %if.end77
  %call82 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([55 x i8]* @.str70, i64 0, i64 0), i32 %34) #5
  %call83 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([29 x i8]* @.str71, i64 0, i64 0), i32 200) #5
  call void @terminate(i32 1) #5
  br label %if.end84

if.end84:                                         ; preds = %if.then80, %if.end77
  %arraydecay85 = getelementptr inbounds %struct.anon* %gauge_field, i64 0, i32 1, i64 0
  %call87 = call i32 @psread_data(i32 %parallel, %struct._IO_FILE* %2, i8* %arraydecay85, i64 200, i8* %1, i8* getelementptr inbounds ([8 x i8]* @.str72, i64 0, i64 0))
  %cmp88 = icmp eq i32 %call87, 0
  br i1 %cmp88, label %if.end90, label %if.then89

if.then89:                                        ; preds = %if.end84
  call void @terminate(i32 1) #5
  br label %if.end90

if.end90:                                         ; preds = %if.end84, %if.then89
  %35 = load i32* %n_descript, align 8, !tbaa !31
  %sub = add nsw i32 %35, -1
  %idxprom92 = sext i32 %sub to i64
  %arrayidx94 = getelementptr inbounds %struct.anon* %gauge_field, i64 0, i32 1, i64 %idxprom92
  store i8 0, i8* %arrayidx94, align 1, !tbaa !13
  %call97 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([26 x i8]* @.str73, i64 0, i64 0), i8* %arraydecay85) #5
  %36 = load i32* %byterevflag, align 4, !tbaa !10
  %n_param = getelementptr inbounds %struct.anon* %gauge_field, i64 0, i32 2
  %37 = bitcast i32* %n_param to i8*
  %call99 = call i32 @psread_byteorder(i32 %36, i32 %parallel, %struct._IO_FILE* %2, i8* %37, i64 4, i8* %1, i8* getelementptr inbounds ([8 x i8]* @.str74, i64 0, i64 0))
  %cmp100 = icmp eq i32 %call99, 0
  br i1 %cmp100, label %if.end102, label %if.then101

if.then101:                                       ; preds = %if.end90
  call void @terminate(i32 1) #5
  br label %if.end102

if.end102:                                        ; preds = %if.end90, %if.then101
  %38 = load i32* %n_param, align 4, !tbaa !33
  %cmp104 = icmp sgt i32 %38, 2
  br i1 %cmp104, label %if.then105, label %for.cond110.preheader

if.then105:                                       ; preds = %if.end102
  %call107 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([61 x i8]* @.str75, i64 0, i64 0), i32 %38) #5
  %call108 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([29 x i8]* @.str71, i64 0, i64 0), i32 2) #5
  call void @terminate(i32 1) #5
  %.pre180 = load i32* %n_param, align 4, !tbaa !33
  br label %for.cond110.preheader

for.cond110.preheader:                            ; preds = %if.then105, %if.end102
  %39 = phi i32 [ %.pre180, %if.then105 ], [ %38, %if.end102 ]
  %cmp112175 = icmp sgt i32 %39, 0
  br i1 %cmp112175, label %for.body113, label %cleanup

for.body113:                                      ; preds = %for.cond110.preheader, %if.end120
  %indvars.iv = phi i64 [ %indvars.iv.next, %if.end120 ], [ 0, %for.cond110.preheader ]
  %40 = load i32* %byterevflag, align 4, !tbaa !10
  %arrayidx115 = getelementptr inbounds %struct.anon* %gauge_field, i64 0, i32 3, i64 %indvars.iv
  %41 = bitcast double* %arrayidx115 to i8*
  %call117 = call i32 @psread_byteorder(i32 %40, i32 %parallel, %struct._IO_FILE* %2, i8* %41, i64 8, i8* %1, i8* getelementptr inbounds ([12 x i8]* @.str76, i64 0, i64 0))
  %cmp118 = icmp eq i32 %call117, 0
  br i1 %cmp118, label %if.end120, label %if.then119

if.then119:                                       ; preds = %for.body113
  call void @terminate(i32 1) #5
  br label %if.end120

if.end120:                                        ; preds = %for.body113, %if.then119
  %42 = load double* %arrayidx115, align 8, !tbaa !11
  %43 = trunc i64 %indvars.iv to i32
  %call124 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([28 x i8]* @.str77, i64 0, i64 0), i32 %43, double %42) #5
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %44 = load i32* %n_param, align 4, !tbaa !33
  %45 = trunc i64 %indvars.iv.next to i32
  %cmp112 = icmp slt i32 %45, %44
  br i1 %cmp112, label %for.body113, label %cleanup

cleanup:                                          ; preds = %if.end120, %for.cond110.preheader, %if.else13
  %retval.0 = phi i32 [ 1, %if.else13 ], [ 0, %for.cond110.preheader ], [ 0, %if.end120 ]
  call void @llvm.lifetime.end(i64 224, i8* %0) #5
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @read_gauge_hdr(%struct.gauge_file* nocapture %gf, i32 %parallel) #0 {
entry:
  %r.i = alloca i32, align 4
  %btmp = alloca i32, align 4
  %byterevflag = alloca i32, align 4
  %myname = alloca [15 x i8], align 1
  %dims = alloca [4 x i32], align 16
  %0 = getelementptr inbounds [15 x i8]* %myname, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* getelementptr inbounds ([15 x i8]* @read_gauge_hdr.myname, i64 0, i64 0), i64 15, i32 1, i1 false)
  %fp10 = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 0
  %1 = load %struct._IO_FILE** %fp10, align 8, !tbaa !24
  %header = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 1
  %2 = load %struct.gauge_header** %header, align 8, !tbaa !16
  %magic_number = getelementptr inbounds %struct.gauge_header* %2, i64 0, i32 0
  %3 = bitcast %struct.gauge_header* %2 to i8*
  %call = call i32 @psread_data(i32 %parallel, %struct._IO_FILE* %1, i8* %3, i64 4, i8* %0, i8* getelementptr inbounds ([13 x i8]* @.str54, i64 0, i64 0))
  %cmp = icmp eq i32 %call, 0
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void @terminate(i32 1) #5
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %4 = load i32* %magic_number, align 4, !tbaa !22
  store i32 %4, i32* %btmp, align 4, !tbaa !10
  call void @byterevn(i32* %btmp, i32 1) #5
  %cmp13 = icmp eq i32 %4, 1111836489
  br i1 %cmp13, label %if.then14, label %if.else

if.then14:                                        ; preds = %if.end
  %puts232 = call i32 @puts(i8* getelementptr inbounds ([26 x i8]* @str189, i64 0, i64 0))
  store i32 0, i32* %byterevflag, align 4, !tbaa !10
  br label %if.then51

if.else:                                          ; preds = %if.end
  %5 = load i32* %btmp, align 4, !tbaa !10
  %cmp16 = icmp eq i32 %5, 1111836489
  br i1 %cmp16, label %if.then17, label %if.else23

if.then17:                                        ; preds = %if.else
  %puts231 = call i32 @puts(i8* getelementptr inbounds ([45 x i8]* @str188, i64 0, i64 0))
  store i32 1, i32* %byterevflag, align 4, !tbaa !10
  %6 = load i32* %btmp, align 4, !tbaa !10
  store i32 %6, i32* %magic_number, align 4, !tbaa !22
  %call21 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([24 x i8]* @.str80, i64 0, i64 0), i8* %0) #5
  %call22 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([53 x i8]* @.str58, i64 0, i64 0), i32 4, i32 8) #5
  call void @terminate(i32 1) #5
  br label %if.then51

if.else23:                                        ; preds = %if.else
  %cmp24 = icmp eq i32 %4, 20103
  br i1 %cmp24, label %if.then25, label %if.else26

if.then25:                                        ; preds = %if.else23
  store i32 0, i32* %byterevflag, align 4, !tbaa !10
  br label %if.else95

if.else26:                                        ; preds = %if.else23
  %cmp27 = icmp eq i32 %5, 20103
  br i1 %cmp27, label %if.then28, label %if.else34

if.then28:                                        ; preds = %if.else26
  store i32 1, i32* %byterevflag, align 4, !tbaa !10
  store i32 20103, i32* %magic_number, align 4, !tbaa !22
  %puts = call i32 @puts(i8* getelementptr inbounds ([27 x i8]* @str187, i64 0, i64 0))
  %call32 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([24 x i8]* @.str80, i64 0, i64 0), i8* %0) #5
  %call33 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([53 x i8]* @.str58, i64 0, i64 0), i32 4, i32 8) #5
  call void @terminate(i32 1) #5
  br label %if.else95

if.else34:                                        ; preds = %if.else26
  %call35 = call i32 @read_v3_gauge_hdr(%struct.gauge_file* %gf, i32 %parallel, i32* %byterevflag)
  %cmp36 = icmp eq i32 %call35, 0
  br i1 %cmp36, label %return, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.else34
  %call37 = call i32 @read_1996_gauge_hdr(%struct.gauge_file* %gf, i32 %parallel, i32* %byterevflag)
  %cmp38 = icmp eq i32 %call37, 0
  br i1 %cmp38, label %return, label %if.then39

if.then39:                                        ; preds = %land.lhs.true
  %call41 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([67 x i8]* @.str82, i64 0, i64 0), i8* %0) #5
  %call42 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([25 x i8]* @.str83, i64 0, i64 0), i32 20103, i32 %4) #5
  %conv = sext i32 %4 to i64
  %7 = inttoptr i64 %conv to i8*
  %call43 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([25 x i8]* @.str84, i64 0, i64 0), i8* inttoptr (i64 20103 to i8*), i8* %7) #5
  call void @terminate(i32 1) #5
  br label %return

if.then51:                                        ; preds = %if.then14, %if.then17
  %8 = phi i32 [ 0, %if.then14 ], [ 1, %if.then17 ]
  %9 = load %struct.gauge_header** %header, align 8, !tbaa !16
  %order = getelementptr inbounds %struct.gauge_header* %9, i64 0, i32 4
  store i32 0, i32* %order, align 4, !tbaa !23
  %tobool = icmp eq i32 %parallel, 0
  br i1 %tobool, label %if.end56, label %if.then53

if.then53:                                        ; preds = %if.then51
  %10 = load %struct._IO_FILE** @stderr, align 8, !tbaa !8
  %call55 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([56 x i8]* @.str85, i64 0, i64 0), i8* %0) #8
  call void @terminate(i32 1) #5
  br label %if.end56

if.end56:                                         ; preds = %if.then51, %if.then53
  %call57 = call %struct.QCDheader* @qcdhdr_get_hdr(%struct._IO_FILE* %1)
  %arraydecay58 = getelementptr inbounds [4 x i32]* %dims, i64 0, i64 0
  %ntoken.i.i = getelementptr inbounds %struct.QCDheader* %call57, i64 0, i32 0
  %11 = load i32* %ntoken.i.i, align 4, !tbaa !1
  %12 = trunc i32 %11 to i8
  %cmp14.i.i = icmp sgt i8 %12, 0
  br i1 %cmp14.i.i, label %for.body.lr.ph.i.i, label %if.then62

for.body.lr.ph.i.i:                               ; preds = %if.end56
  %token.i.i = getelementptr inbounds %struct.QCDheader* %call57, i64 0, i32 1
  %13 = load i8*** %token.i.i, align 8, !tbaa !7
  %sext.i.i = shl i32 %11, 24
  %conv1.i.i = ashr exact i32 %sext.i.i, 24
  br label %for.body.i.i

for.cond.i.i:                                     ; preds = %for.body.i.i
  %14 = trunc i64 %indvars.iv.next.i.i to i32
  %cmp.i.i = icmp slt i32 %14, %conv1.i.i
  br i1 %cmp.i.i, label %for.body.i.i, label %if.then62

for.body.i.i:                                     ; preds = %for.cond.i.i, %for.body.lr.ph.i.i
  %indvars.iv.i.i = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %indvars.iv.next.i.i, %for.cond.i.i ]
  %arrayidx.i.i = getelementptr inbounds i8** %13, i64 %indvars.iv.i.i
  %15 = load i8** %arrayidx.i.i, align 8, !tbaa !8
  %call.i.i = call i32 @strcmp(i8* getelementptr inbounds ([12 x i8]* @.str86, i64 0, i64 0), i8* %15) #5
  %cmp3.i.i = icmp eq i32 %call.i.i, 0
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  br i1 %cmp3.i.i, label %qcdhdr_get_str.exit.i, label %for.cond.i.i

qcdhdr_get_str.exit.i:                            ; preds = %for.body.i.i
  %value.i.i = getelementptr inbounds %struct.QCDheader* %call57, i64 0, i32 2
  %16 = load i8*** %value.i.i, align 8, !tbaa !9
  %arrayidx6.i.i = getelementptr inbounds i8** %16, i64 %indvars.iv.i.i
  %17 = load i8** %arrayidx6.i.i, align 8, !tbaa !8
  %cmp.i = icmp eq i8* %17, null
  br i1 %cmp.i, label %if.then62, label %qcdhdr_get_int.exit

qcdhdr_get_int.exit:                              ; preds = %qcdhdr_get_str.exit.i
  %call1.i = call i32 (i8*, i8*, ...)* @sscanf(i8* %17, i8* getelementptr inbounds ([3 x i8]* @.str, i64 0, i64 0), i32* %arraydecay58) #5
  br label %if.end63

if.then62:                                        ; preds = %for.cond.i.i, %qcdhdr_get_str.exit.i, %if.end56
  %puts.i = call i32 @puts(i8* getelementptr inbounds ([24 x i8]* @.str87, i64 0, i64 0)) #5
  call void @terminate(i32 1) #5
  br label %if.end63

if.end63:                                         ; preds = %qcdhdr_get_int.exit, %if.then62
  %add.ptr65 = getelementptr inbounds [4 x i32]* %dims, i64 0, i64 1
  %18 = load i32* %ntoken.i.i, align 4, !tbaa !1
  %19 = trunc i32 %18 to i8
  %cmp14.i.i234 = icmp sgt i8 %19, 0
  br i1 %cmp14.i.i234, label %for.body.lr.ph.i.i238, label %if.then69

for.body.lr.ph.i.i238:                            ; preds = %if.end63
  %token.i.i235 = getelementptr inbounds %struct.QCDheader* %call57, i64 0, i32 1
  %20 = load i8*** %token.i.i235, align 8, !tbaa !7
  %sext.i.i236 = shl i32 %18, 24
  %conv1.i.i237 = ashr exact i32 %sext.i.i236, 24
  br label %for.body.i.i246

for.cond.i.i240:                                  ; preds = %for.body.i.i246
  %21 = trunc i64 %indvars.iv.next.i.i245 to i32
  %cmp.i.i239 = icmp slt i32 %21, %conv1.i.i237
  br i1 %cmp.i.i239, label %for.body.i.i246, label %if.then69

for.body.i.i246:                                  ; preds = %for.cond.i.i240, %for.body.lr.ph.i.i238
  %indvars.iv.i.i241 = phi i64 [ 0, %for.body.lr.ph.i.i238 ], [ %indvars.iv.next.i.i245, %for.cond.i.i240 ]
  %arrayidx.i.i242 = getelementptr inbounds i8** %20, i64 %indvars.iv.i.i241
  %22 = load i8** %arrayidx.i.i242, align 8, !tbaa !8
  %call.i.i243 = call i32 @strcmp(i8* getelementptr inbounds ([12 x i8]* @.str88, i64 0, i64 0), i8* %22) #5
  %cmp3.i.i244 = icmp eq i32 %call.i.i243, 0
  %indvars.iv.next.i.i245 = add nuw nsw i64 %indvars.iv.i.i241, 1
  br i1 %cmp3.i.i244, label %qcdhdr_get_str.exit.i250, label %for.cond.i.i240

qcdhdr_get_str.exit.i250:                         ; preds = %for.body.i.i246
  %value.i.i247 = getelementptr inbounds %struct.QCDheader* %call57, i64 0, i32 2
  %23 = load i8*** %value.i.i247, align 8, !tbaa !9
  %arrayidx6.i.i248 = getelementptr inbounds i8** %23, i64 %indvars.iv.i.i241
  %24 = load i8** %arrayidx6.i.i248, align 8, !tbaa !8
  %cmp.i249 = icmp eq i8* %24, null
  br i1 %cmp.i249, label %if.then69, label %qcdhdr_get_int.exit254

qcdhdr_get_int.exit254:                           ; preds = %qcdhdr_get_str.exit.i250
  %call1.i251 = call i32 (i8*, i8*, ...)* @sscanf(i8* %24, i8* getelementptr inbounds ([3 x i8]* @.str, i64 0, i64 0), i32* %add.ptr65) #5
  br label %if.end70

if.then69:                                        ; preds = %for.cond.i.i240, %qcdhdr_get_str.exit.i250, %if.end63
  %puts.i255 = call i32 @puts(i8* getelementptr inbounds ([24 x i8]* @.str89, i64 0, i64 0)) #5
  call void @terminate(i32 1) #5
  br label %if.end70

if.end70:                                         ; preds = %qcdhdr_get_int.exit254, %if.then69
  %add.ptr72 = getelementptr inbounds [4 x i32]* %dims, i64 0, i64 2
  %25 = load i32* %ntoken.i.i, align 4, !tbaa !1
  %26 = trunc i32 %25 to i8
  %cmp14.i.i257 = icmp sgt i8 %26, 0
  br i1 %cmp14.i.i257, label %for.body.lr.ph.i.i261, label %if.then76

for.body.lr.ph.i.i261:                            ; preds = %if.end70
  %token.i.i258 = getelementptr inbounds %struct.QCDheader* %call57, i64 0, i32 1
  %27 = load i8*** %token.i.i258, align 8, !tbaa !7
  %sext.i.i259 = shl i32 %25, 24
  %conv1.i.i260 = ashr exact i32 %sext.i.i259, 24
  br label %for.body.i.i269

for.cond.i.i263:                                  ; preds = %for.body.i.i269
  %28 = trunc i64 %indvars.iv.next.i.i268 to i32
  %cmp.i.i262 = icmp slt i32 %28, %conv1.i.i260
  br i1 %cmp.i.i262, label %for.body.i.i269, label %if.then76

for.body.i.i269:                                  ; preds = %for.cond.i.i263, %for.body.lr.ph.i.i261
  %indvars.iv.i.i264 = phi i64 [ 0, %for.body.lr.ph.i.i261 ], [ %indvars.iv.next.i.i268, %for.cond.i.i263 ]
  %arrayidx.i.i265 = getelementptr inbounds i8** %27, i64 %indvars.iv.i.i264
  %29 = load i8** %arrayidx.i.i265, align 8, !tbaa !8
  %call.i.i266 = call i32 @strcmp(i8* getelementptr inbounds ([12 x i8]* @.str90, i64 0, i64 0), i8* %29) #5
  %cmp3.i.i267 = icmp eq i32 %call.i.i266, 0
  %indvars.iv.next.i.i268 = add nuw nsw i64 %indvars.iv.i.i264, 1
  br i1 %cmp3.i.i267, label %qcdhdr_get_str.exit.i273, label %for.cond.i.i263

qcdhdr_get_str.exit.i273:                         ; preds = %for.body.i.i269
  %value.i.i270 = getelementptr inbounds %struct.QCDheader* %call57, i64 0, i32 2
  %30 = load i8*** %value.i.i270, align 8, !tbaa !9
  %arrayidx6.i.i271 = getelementptr inbounds i8** %30, i64 %indvars.iv.i.i264
  %31 = load i8** %arrayidx6.i.i271, align 8, !tbaa !8
  %cmp.i272 = icmp eq i8* %31, null
  br i1 %cmp.i272, label %if.then76, label %qcdhdr_get_int.exit277

qcdhdr_get_int.exit277:                           ; preds = %qcdhdr_get_str.exit.i273
  %call1.i274 = call i32 (i8*, i8*, ...)* @sscanf(i8* %31, i8* getelementptr inbounds ([3 x i8]* @.str, i64 0, i64 0), i32* %add.ptr72) #5
  br label %if.end77

if.then76:                                        ; preds = %for.cond.i.i263, %qcdhdr_get_str.exit.i273, %if.end70
  %puts.i278 = call i32 @puts(i8* getelementptr inbounds ([24 x i8]* @.str91, i64 0, i64 0)) #5
  call void @terminate(i32 1) #5
  br label %if.end77

if.end77:                                         ; preds = %qcdhdr_get_int.exit277, %if.then76
  %add.ptr79 = getelementptr inbounds [4 x i32]* %dims, i64 0, i64 3
  %32 = load i32* %ntoken.i.i, align 4, !tbaa !1
  %33 = trunc i32 %32 to i8
  %cmp14.i.i280 = icmp sgt i8 %33, 0
  br i1 %cmp14.i.i280, label %for.body.lr.ph.i.i284, label %if.then83

for.body.lr.ph.i.i284:                            ; preds = %if.end77
  %token.i.i281 = getelementptr inbounds %struct.QCDheader* %call57, i64 0, i32 1
  %34 = load i8*** %token.i.i281, align 8, !tbaa !7
  %sext.i.i282 = shl i32 %32, 24
  %conv1.i.i283 = ashr exact i32 %sext.i.i282, 24
  br label %for.body.i.i292

for.cond.i.i286:                                  ; preds = %for.body.i.i292
  %35 = trunc i64 %indvars.iv.next.i.i291 to i32
  %cmp.i.i285 = icmp slt i32 %35, %conv1.i.i283
  br i1 %cmp.i.i285, label %for.body.i.i292, label %if.then83

for.body.i.i292:                                  ; preds = %for.cond.i.i286, %for.body.lr.ph.i.i284
  %indvars.iv.i.i287 = phi i64 [ 0, %for.body.lr.ph.i.i284 ], [ %indvars.iv.next.i.i291, %for.cond.i.i286 ]
  %arrayidx.i.i288 = getelementptr inbounds i8** %34, i64 %indvars.iv.i.i287
  %36 = load i8** %arrayidx.i.i288, align 8, !tbaa !8
  %call.i.i289 = call i32 @strcmp(i8* getelementptr inbounds ([12 x i8]* @.str92, i64 0, i64 0), i8* %36) #5
  %cmp3.i.i290 = icmp eq i32 %call.i.i289, 0
  %indvars.iv.next.i.i291 = add nuw nsw i64 %indvars.iv.i.i287, 1
  br i1 %cmp3.i.i290, label %qcdhdr_get_str.exit.i296, label %for.cond.i.i286

qcdhdr_get_str.exit.i296:                         ; preds = %for.body.i.i292
  %value.i.i293 = getelementptr inbounds %struct.QCDheader* %call57, i64 0, i32 2
  %37 = load i8*** %value.i.i293, align 8, !tbaa !9
  %arrayidx6.i.i294 = getelementptr inbounds i8** %37, i64 %indvars.iv.i.i287
  %38 = load i8** %arrayidx6.i.i294, align 8, !tbaa !8
  %cmp.i295 = icmp eq i8* %38, null
  br i1 %cmp.i295, label %if.then83, label %qcdhdr_get_int.exit300

qcdhdr_get_int.exit300:                           ; preds = %qcdhdr_get_str.exit.i296
  %call1.i297 = call i32 (i8*, i8*, ...)* @sscanf(i8* %38, i8* getelementptr inbounds ([3 x i8]* @.str, i64 0, i64 0), i32* %add.ptr79) #5
  br label %for.cond.preheader

if.then83:                                        ; preds = %for.cond.i.i286, %qcdhdr_get_str.exit.i296, %if.end77
  %puts.i301 = call i32 @puts(i8* getelementptr inbounds ([24 x i8]* @.str93, i64 0, i64 0)) #5
  call void @terminate(i32 1) #5
  br label %for.cond.preheader

for.cond.preheader:                               ; preds = %if.then83, %qcdhdr_get_int.exit300
  %39 = load i32* %arraydecay58, align 16, !tbaa !10
  %arrayidx89 = getelementptr inbounds %struct.gauge_header* %2, i64 0, i32 2, i64 0
  store i32 %39, i32* %arrayidx89, align 4, !tbaa !10
  %40 = load i32* %add.ptr65, align 4, !tbaa !10
  %arrayidx89.1 = getelementptr inbounds %struct.gauge_header* %2, i64 0, i32 2, i64 1
  store i32 %40, i32* %arrayidx89.1, align 4, !tbaa !10
  %41 = load i32* %add.ptr72, align 8, !tbaa !10
  %arrayidx89.2 = getelementptr inbounds %struct.gauge_header* %2, i64 0, i32 2, i64 2
  store i32 %41, i32* %arrayidx89.2, align 4, !tbaa !10
  %42 = load i32* %add.ptr79, align 4, !tbaa !10
  %arrayidx89.3 = getelementptr inbounds %struct.gauge_header* %2, i64 0, i32 2, i64 3
  store i32 %42, i32* %arrayidx89.3, align 4, !tbaa !10
  %43 = bitcast i32* %r.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %43) #5
  %44 = load i32* %ntoken.i.i, align 4, !tbaa !1
  %45 = trunc i32 %44 to i8
  %cmp14.i.i303 = icmp sgt i8 %45, 0
  br i1 %cmp14.i.i303, label %for.body.lr.ph.i.i307, label %if.then93

for.body.lr.ph.i.i307:                            ; preds = %for.cond.preheader
  %token.i.i304 = getelementptr inbounds %struct.QCDheader* %call57, i64 0, i32 1
  %46 = load i8*** %token.i.i304, align 8, !tbaa !7
  %sext.i.i305 = shl i32 %44, 24
  %conv1.i.i306 = ashr exact i32 %sext.i.i305, 24
  br label %for.body.i.i315

for.cond.i.i309:                                  ; preds = %for.body.i.i315
  %47 = trunc i64 %indvars.iv.next.i.i314 to i32
  %cmp.i.i308 = icmp slt i32 %47, %conv1.i.i306
  br i1 %cmp.i.i308, label %for.body.i.i315, label %if.then93

for.body.i.i315:                                  ; preds = %for.cond.i.i309, %for.body.lr.ph.i.i307
  %indvars.iv.i.i310 = phi i64 [ 0, %for.body.lr.ph.i.i307 ], [ %indvars.iv.next.i.i314, %for.cond.i.i309 ]
  %arrayidx.i.i311 = getelementptr inbounds i8** %46, i64 %indvars.iv.i.i310
  %48 = load i8** %arrayidx.i.i311, align 8, !tbaa !8
  %call.i.i312 = call i32 @strcmp(i8* getelementptr inbounds ([9 x i8]* @.str94, i64 0, i64 0), i8* %48) #5
  %cmp3.i.i313 = icmp eq i32 %call.i.i312, 0
  %indvars.iv.next.i.i314 = add nuw nsw i64 %indvars.iv.i.i310, 1
  br i1 %cmp3.i.i313, label %qcdhdr_get_str.exit.i319, label %for.cond.i.i309

qcdhdr_get_str.exit.i319:                         ; preds = %for.body.i.i315
  %value.i.i316 = getelementptr inbounds %struct.QCDheader* %call57, i64 0, i32 2
  %49 = load i8*** %value.i.i316, align 8, !tbaa !9
  %arrayidx6.i.i317 = getelementptr inbounds i8** %49, i64 %indvars.iv.i.i310
  %50 = load i8** %arrayidx6.i.i317, align 8, !tbaa !8
  %cmp.i318 = icmp eq i8* %50, null
  br i1 %cmp.i318, label %if.then93, label %qcdhdr_get_int32x.exit

qcdhdr_get_int32x.exit:                           ; preds = %qcdhdr_get_str.exit.i319
  %call1.i320 = call i32 (i8*, i8*, ...)* @sscanf(i8* %50, i8* getelementptr inbounds ([3 x i8]* @.str1, i64 0, i64 0), i32* %r.i) #5
  %51 = load i32* %r.i, align 4, !tbaa !10
  call void @llvm.lifetime.end(i64 4, i8* %43) #5
  br label %if.end94

if.then93:                                        ; preds = %for.cond.i.i309, %qcdhdr_get_str.exit.i319, %for.cond.preheader
  call void @llvm.lifetime.end(i64 4, i8* %43) #5
  %puts.i323 = call i32 @puts(i8* getelementptr inbounds ([21 x i8]* @.str95, i64 0, i64 0)) #5
  call void @terminate(i32 1) #5
  br label %if.end94

if.end94:                                         ; preds = %qcdhdr_get_int32x.exit, %if.then93
  %chksum.0.load325338 = phi i32 [ undef, %if.then93 ], [ %51, %qcdhdr_get_int32x.exit ]
  %sum31 = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 6, i32 0
  store i32 %chksum.0.load325338, i32* %sum31, align 4, !tbaa !21
  br label %if.end104

if.else95:                                        ; preds = %if.then25, %if.then28
  %52 = phi i32 [ 0, %if.then25 ], [ 1, %if.then28 ]
  %arraydecay97 = getelementptr inbounds %struct.gauge_header* %2, i64 0, i32 2, i64 0
  %53 = bitcast i32* %arraydecay97 to i8*
  %call99 = call i32 @psread_byteorder(i32 %52, i32 %parallel, %struct._IO_FILE* %1, i8* %53, i64 16, i8* %0, i8* getelementptr inbounds ([11 x i8]* @.str11, i64 0, i64 0))
  %cmp100 = icmp eq i32 %call99, 0
  br i1 %cmp100, label %if.end104, label %if.then102

if.then102:                                       ; preds = %if.else95
  call void @terminate(i32 1) #5
  br label %if.end104

if.end104:                                        ; preds = %if.else95, %if.then102, %if.end94
  %54 = phi i32 [ %8, %if.end94 ], [ %52, %if.then102 ], [ %52, %if.else95 ]
  %ARCHYES.0327 = phi i32 [ 1, %if.end94 ], [ 0, %if.then102 ], [ 0, %if.else95 ]
  %hdr.0 = phi %struct.QCDheader* [ %call57, %if.end94 ], [ undef, %if.then102 ], [ undef, %if.else95 ]
  %arrayidx106 = getelementptr inbounds %struct.gauge_header* %2, i64 0, i32 2, i64 0
  %55 = load i32* %arrayidx106, align 4, !tbaa !10
  %56 = load i32* @nx, align 4, !tbaa !10
  %cmp107 = icmp eq i32 %55, %56
  br i1 %cmp107, label %lor.lhs.false, label %if.end104.if.then123_crit_edge

if.end104.if.then123_crit_edge:                   ; preds = %if.end104
  %.pre = load i32* @ny, align 4
  br label %if.then123

lor.lhs.false:                                    ; preds = %if.end104
  %arrayidx110 = getelementptr inbounds %struct.gauge_header* %2, i64 0, i32 2, i64 1
  %57 = load i32* %arrayidx110, align 4, !tbaa !10
  %58 = load i32* @ny, align 4, !tbaa !10
  %cmp111 = icmp eq i32 %57, %58
  br i1 %cmp111, label %lor.lhs.false113, label %if.then123

lor.lhs.false113:                                 ; preds = %lor.lhs.false
  %arrayidx115 = getelementptr inbounds %struct.gauge_header* %2, i64 0, i32 2, i64 2
  %59 = load i32* %arrayidx115, align 4, !tbaa !10
  %60 = load i32* @nz, align 4, !tbaa !10
  %cmp116 = icmp eq i32 %59, %60
  br i1 %cmp116, label %lor.lhs.false118, label %if.then123

lor.lhs.false118:                                 ; preds = %lor.lhs.false113
  %arrayidx120 = getelementptr inbounds %struct.gauge_header* %2, i64 0, i32 2, i64 3
  %61 = load i32* %arrayidx120, align 4, !tbaa !10
  %62 = load i32* @nt, align 4, !tbaa !10
  %cmp121 = icmp eq i32 %61, %62
  br i1 %cmp121, label %if.end163, label %if.then123

if.then123:                                       ; preds = %if.end104.if.then123_crit_edge, %lor.lhs.false118, %lor.lhs.false113, %lor.lhs.false
  %63 = phi i32 [ %.pre, %if.end104.if.then123_crit_edge ], [ %57, %lor.lhs.false118 ], [ %57, %lor.lhs.false113 ], [ %58, %lor.lhs.false ]
  %64 = and i32 %63, %56
  %65 = icmp ne i32 %64, -1
  %66 = load i32* @nz, align 4
  %cmp130 = icmp ne i32 %66, -1
  %or.cond182 = or i1 %65, %cmp130
  %67 = load i32* @nt, align 4
  %cmp133 = icmp ne i32 %67, -1
  %or.cond183 = or i1 %or.cond182, %cmp133
  br i1 %or.cond183, label %if.then135, label %if.else151

if.then135:                                       ; preds = %if.then123
  %call137 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([34 x i8]* @.str96, i64 0, i64 0), i8* %0) #5
  %68 = load i32* %arrayidx106, align 4, !tbaa !10
  %call145 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str60, i64 0, i64 0), i32 %68) #5
  %arrayidx144.1 = getelementptr inbounds %struct.gauge_header* %2, i64 0, i32 2, i64 1
  %69 = load i32* %arrayidx144.1, align 4, !tbaa !10
  %call145.1 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str60, i64 0, i64 0), i32 %69) #5
  %arrayidx144.2 = getelementptr inbounds %struct.gauge_header* %2, i64 0, i32 2, i64 2
  %70 = load i32* %arrayidx144.2, align 4, !tbaa !10
  %call145.2 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str60, i64 0, i64 0), i32 %70) #5
  %arrayidx144.3 = getelementptr inbounds %struct.gauge_header* %2, i64 0, i32 2, i64 3
  %71 = load i32* %arrayidx144.3, align 4, !tbaa !10
  %call145.3 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str60, i64 0, i64 0), i32 %71) #5
  %putchar = call i32 @putchar(i32 10) #5
  %72 = load %struct._IO_FILE** @stdout, align 8, !tbaa !8
  %call150 = call i32 @fflush(%struct._IO_FILE* %72) #5
  call void @terminate(i32 1) #5
  br label %if.end163

if.else151:                                       ; preds = %if.then123
  store i32 %55, i32* @nx, align 4, !tbaa !10
  %arrayidx155 = getelementptr inbounds %struct.gauge_header* %2, i64 0, i32 2, i64 1
  %73 = load i32* %arrayidx155, align 4, !tbaa !10
  store i32 %73, i32* @ny, align 4, !tbaa !10
  %arrayidx157 = getelementptr inbounds %struct.gauge_header* %2, i64 0, i32 2, i64 2
  %74 = load i32* %arrayidx157, align 4, !tbaa !10
  store i32 %74, i32* @nz, align 4, !tbaa !10
  %arrayidx159 = getelementptr inbounds %struct.gauge_header* %2, i64 0, i32 2, i64 3
  %75 = load i32* %arrayidx159, align 4, !tbaa !10
  store i32 %75, i32* @nt, align 4, !tbaa !10
  %mul = mul i32 %55, %75
  %mul160 = mul i32 %mul, %73
  %mul161 = mul i32 %mul160, %74
  store i32 %mul161, i32* @volume, align 4, !tbaa !10
  br label %if.end163

if.end163:                                        ; preds = %lor.lhs.false118, %if.then135, %if.else151
  %tobool164 = icmp eq i32 %ARCHYES.0327, 0
  br i1 %tobool164, label %if.else166, label %if.then165

if.then165:                                       ; preds = %if.end163
  %cmp.i324 = icmp eq %struct.QCDheader* %hdr.0, null
  br i1 %cmp.i324, label %return, label %for.cond.preheader.i

for.cond.preheader.i:                             ; preds = %if.then165
  %ntoken.i = getelementptr inbounds %struct.QCDheader* %hdr.0, i64 0, i32 0
  %76 = load i32* %ntoken.i, align 4, !tbaa !1
  %cmp115.i = icmp sgt i32 %76, 0
  br i1 %cmp115.i, label %for.body.lr.ph.i, label %for.cond.preheader.for.end_crit_edge.i

for.cond.preheader.for.end_crit_edge.i:           ; preds = %for.cond.preheader.i
  %token4.pre.i = getelementptr inbounds %struct.QCDheader* %hdr.0, i64 0, i32 1
  %value5.pre.i = getelementptr inbounds %struct.QCDheader* %hdr.0, i64 0, i32 2
  br label %for.end.i

for.body.lr.ph.i:                                 ; preds = %for.cond.preheader.i
  %value.i = getelementptr inbounds %struct.QCDheader* %hdr.0, i64 0, i32 2
  %token.i = getelementptr inbounds %struct.QCDheader* %hdr.0, i64 0, i32 1
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i, %for.body.lr.ph.i
  %indvars.iv.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next.i, %for.body.i ]
  %77 = load i8*** %value.i, align 8, !tbaa !9
  %arrayidx.i = getelementptr inbounds i8** %77, i64 %indvars.iv.i
  %78 = load i8** %arrayidx.i, align 8, !tbaa !8
  call void @free(i8* %78) #5
  %79 = load i8*** %token.i, align 8, !tbaa !7
  %arrayidx3.i = getelementptr inbounds i8** %79, i64 %indvars.iv.i
  %80 = load i8** %arrayidx3.i, align 8, !tbaa !8
  call void @free(i8* %80) #5
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %81 = load i32* %ntoken.i, align 4, !tbaa !1
  %82 = trunc i64 %indvars.iv.next.i to i32
  %cmp1.i = icmp slt i32 %82, %81
  br i1 %cmp1.i, label %for.body.i, label %for.end.i

for.end.i:                                        ; preds = %for.body.i, %for.cond.preheader.for.end_crit_edge.i
  %value5.pre-phi.i = phi i8*** [ %value5.pre.i, %for.cond.preheader.for.end_crit_edge.i ], [ %value.i, %for.body.i ]
  %token4.pre-phi.i = phi i8*** [ %token4.pre.i, %for.cond.preheader.for.end_crit_edge.i ], [ %token.i, %for.body.i ]
  %83 = load i8*** %token4.pre-phi.i, align 8, !tbaa !7
  %84 = bitcast i8** %83 to i8*
  call void @free(i8* %84) #5
  %85 = load i8*** %value5.pre-phi.i, align 8, !tbaa !9
  %86 = bitcast i8** %85 to i8*
  call void @free(i8* %86) #5
  %87 = bitcast %struct.QCDheader* %hdr.0 to i8*
  call void @free(i8* %87) #5
  br label %return

if.else166:                                       ; preds = %if.end163
  %arraydecay167 = getelementptr inbounds %struct.gauge_header* %2, i64 0, i32 1, i64 0
  %call169 = call i32 @psread_data(i32 %parallel, %struct._IO_FILE* %1, i8* %arraydecay167, i64 64, i8* %0, i8* getelementptr inbounds ([11 x i8]* @.str97, i64 0, i64 0))
  %cmp170 = icmp eq i32 %call169, 0
  br i1 %cmp170, label %if.end173, label %if.then172

if.then172:                                       ; preds = %if.else166
  call void @terminate(i32 1) #5
  br label %if.end173

if.end173:                                        ; preds = %if.else166, %if.then172
  %header_bytes = getelementptr inbounds %struct.gauge_header* %2, i64 0, i32 3
  store i32 88, i32* %header_bytes, align 4, !tbaa !14
  %order174 = getelementptr inbounds %struct.gauge_header* %2, i64 0, i32 4
  %88 = bitcast i32* %order174 to i8*
  %call176 = call i32 @psread_byteorder(i32 %54, i32 %parallel, %struct._IO_FILE* %1, i8* %88, i64 4, i8* %0, i8* getelementptr inbounds ([16 x i8]* @.str98, i64 0, i64 0))
  %cmp177 = icmp eq i32 %call176, 0
  br i1 %cmp177, label %return, label %if.then179

if.then179:                                       ; preds = %if.end173
  call void @terminate(i32 1) #5
  br label %return

return:                                           ; preds = %for.end.i, %if.then165, %if.then179, %if.end173, %if.then39, %if.else34, %land.lhs.true
  %retval.0 = load i32* %byterevflag, align 4
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define noalias %struct.gauge_file* @r_serial_i(i8* %filename) #0 {
entry:
  %byterevflag = alloca i32, align 4
  %call = call %struct.gauge_file* @setup_input_gauge_file(i8* %filename)
  %header = getelementptr inbounds %struct.gauge_file* %call, i64 0, i32 1
  %0 = load %struct.gauge_header** %header, align 8, !tbaa !16
  %parallel = getelementptr inbounds %struct.gauge_file* %call, i64 0, i32 5
  store i32 0, i32* %parallel, align 4, !tbaa !27
  %1 = load i32* @this_node, align 4, !tbaa !10
  %cmp = icmp eq i32 %1, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %call1 = call %struct._IO_FILE* @fopen(i8* %filename, i8* getelementptr inbounds ([3 x i8]* @.str99, i64 0, i64 0)) #5
  %cmp2 = icmp eq %struct._IO_FILE* %call1, null
  br i1 %cmp2, label %if.then3, label %if.end

if.then3:                                         ; preds = %if.then
  %2 = load i32* @this_node, align 4, !tbaa !10
  %call4 = call i32* @__errno_location() #7
  %3 = load i32* %call4, align 4, !tbaa !10
  %call5 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([50 x i8]* @.str100, i64 0, i64 0), i32 %2, i8* %filename, i32 %3) #5
  %4 = load %struct._IO_FILE** @stdout, align 8, !tbaa !8
  %call6 = call i32 @fflush(%struct._IO_FILE* %4) #5
  call void @terminate(i32 1) #5
  br label %if.end

if.end:                                           ; preds = %if.then3, %if.then
  %fp7 = getelementptr inbounds %struct.gauge_file* %call, i64 0, i32 0
  store %struct._IO_FILE* %call1, %struct._IO_FILE** %fp7, align 8, !tbaa !24
  %call8 = call i32 @read_gauge_hdr(%struct.gauge_file* %call, i32 0)
  store i32 %call8, i32* %byterevflag, align 4, !tbaa !10
  br label %if.end10

if.else:                                          ; preds = %entry
  %fp9 = getelementptr inbounds %struct.gauge_file* %call, i64 0, i32 0
  store %struct._IO_FILE* null, %struct._IO_FILE** %fp9, align 8, !tbaa !24
  br label %if.end10

if.end10:                                         ; preds = %if.else, %if.end
  %5 = bitcast i32* %byterevflag to i8*
  call void @broadcast_bytes(i8* %5, i32 4) #5
  %6 = load i32* %byterevflag, align 4, !tbaa !10
  %byterevflag11 = getelementptr inbounds %struct.gauge_file* %call, i64 0, i32 3
  store i32 %6, i32* %byterevflag11, align 4, !tbaa !25
  %7 = bitcast %struct.gauge_header* %0 to i8*
  call void @broadcast_bytes(i8* %7, i32 92) #5
  call void @read_site_list(i32 0, %struct.gauge_file* %call)
  ret %struct.gauge_file* %call
}

; Function Attrs: nounwind uwtable
define void @r_serial(%struct.gauge_file* %gf) #0 {
entry:
  %test_gc = alloca %struct.gauge_check, align 4
  %myname = alloca [9 x i8], align 1
  %0 = getelementptr inbounds [9 x i8]* %myname, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* getelementptr inbounds ([9 x i8]* @r_serial.myname, i64 0, i64 0), i64 9, i32 1, i1 false)
  %fp1 = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 0
  %1 = load %struct._IO_FILE** %fp1, align 8, !tbaa !24
  %header = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 1
  %2 = load %struct.gauge_header** %header, align 8, !tbaa !16
  %filename2 = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 2
  %3 = load i8** %filename2, align 8, !tbaa !19
  %byterevflag3 = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 3
  %4 = load i32* %byterevflag3, align 4, !tbaa !25
  %5 = load i32* @this_node, align 4, !tbaa !10
  %cmp = icmp eq i32 %5, 0
  br i1 %cmp, label %if.then, label %if.end38

if.then:                                          ; preds = %entry
  %magic_number = getelementptr inbounds %struct.gauge_header* %2, i64 0, i32 0
  %6 = load i32* %magic_number, align 4, !tbaa !22
  switch i32 %6, label %if.else9 [
    i32 20103, label %if.end10
    i32 53546, label %if.then8
  ]

if.then8:                                         ; preds = %if.then
  br label %if.end10

if.else9:                                         ; preds = %if.then
  br label %if.end10

if.end10:                                         ; preds = %if.then, %if.then8, %if.else9
  %gauge_check_size.0 = phi i64 [ 4, %if.then8 ], [ 0, %if.else9 ], [ 8, %if.then ]
  %order = getelementptr inbounds %struct.gauge_header* %2, i64 0, i32 4
  %7 = load i32* %order, align 4, !tbaa !23
  %cmp12 = icmp eq i32 %7, 0
  br i1 %cmp12, label %if.end15, label %if.else14

if.else14:                                        ; preds = %if.end10
  %8 = load i32* @volume, align 4, !tbaa !10
  %conv = sext i32 %8 to i64
  %mul = shl nsw i64 %conv, 2
  br label %if.end15

if.end15:                                         ; preds = %if.end10, %if.else14
  %coord_list_size.0 = phi i64 [ %mul, %if.else14 ], [ 0, %if.end10 ]
  %header_bytes = getelementptr inbounds %struct.gauge_header* %2, i64 0, i32 3
  %9 = load i32* %header_bytes, align 4, !tbaa !14
  %conv17 = sext i32 %9 to i64
  %add = add nsw i64 %conv17, %coord_list_size.0
  %add18 = add nsw i64 %add, %gauge_check_size.0
  %parallel = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 5
  %10 = load i32* %parallel, align 4, !tbaa !27
  %tobool = icmp eq i32 %10, 0
  br i1 %tobool, label %if.end20, label %if.then19

if.then19:                                        ; preds = %if.end15
  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([48 x i8]* @.str101, i64 0, i64 0), i8* %0) #5
  br label %if.end20

if.end20:                                         ; preds = %if.end15, %if.then19
  %call21 = call i8* @calloc(i64 16384, i64 144) #5
  %11 = bitcast i8* %call21 to %struct.su3_matrix*
  %cmp22 = icmp eq i8* %call21, null
  br i1 %cmp22, label %if.then24, label %if.end28

if.then24:                                        ; preds = %if.end20
  %12 = load i32* @this_node, align 4, !tbaa !10
  %call26 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([31 x i8]* @.str102, i64 0, i64 0), i8* %0, i32 %12) #5
  %13 = load %struct._IO_FILE** @stdout, align 8, !tbaa !8
  %call27 = call i32 @fflush(%struct._IO_FILE* %13) #5
  call void @terminate(i32 1) #5
  br label %if.end28

if.end28:                                         ; preds = %if.then24, %if.end20
  %call29 = call i32 @fseeko(%struct._IO_FILE* %1, i64 %add18, i32 0) #5
  %cmp30 = icmp slt i32 %call29, 0
  br i1 %cmp30, label %if.then32, label %if.end38

if.then32:                                        ; preds = %if.end28
  %call34 = call i32* @__errno_location() #7
  %14 = load i32* %call34, align 4, !tbaa !10
  %call35 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([48 x i8]* @.str103, i64 0, i64 0), i8* %0, i64 %add18, i32 %14, i8* %3) #5
  %15 = load %struct._IO_FILE** @stdout, align 8, !tbaa !8
  %call36 = call i32 @fflush(%struct._IO_FILE* %15) #5
  call void @terminate(i32 1) #5
  br label %if.end38

if.end38:                                         ; preds = %if.end28, %if.then32, %entry
  %checksum_offset.0 = phi i64 [ undef, %entry ], [ %add, %if.then32 ], [ %add, %if.end28 ]
  %offset.0 = phi i64 [ undef, %entry ], [ %add18, %if.then32 ], [ %add18, %if.end28 ]
  %lbuf.0 = phi %struct.su3_matrix* [ undef, %entry ], [ %11, %if.then32 ], [ %11, %if.end28 ]
  %sum29 = getelementptr inbounds %struct.gauge_check* %test_gc, i64 0, i32 1
  store i32 0, i32* %sum29, align 4, !tbaa !28
  %sum31 = getelementptr inbounds %struct.gauge_check* %test_gc, i64 0, i32 0
  store i32 0, i32* %sum31, align 4, !tbaa !29
  call void (...)* @g_sync() #5
  %16 = load i32* @volume, align 4, !tbaa !10
  %cmp39251 = icmp sgt i32 %16, 0
  br i1 %cmp39251, label %for.body.lr.ph, label %for.end152

for.body.lr.ph:                                   ; preds = %if.end38
  %17 = bitcast %struct.su3_matrix* %lbuf.0 to i8*
  %18 = load %struct._IO_FILE** @stdout, align 8, !tbaa !8
  %cmp105 = icmp eq i32 %4, 1
  %rank2rcv = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 4
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc150
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.inc150 ]
  %where_in_buf.1255 = phi i32 [ 0, %for.body.lr.ph ], [ %where_in_buf.3, %for.inc150 ]
  %buf_length.1254 = phi i32 [ 0, %for.body.lr.ph ], [ %buf_length.3, %for.inc150 ]
  %i.0253 = phi i32 [ undef, %for.body.lr.ph ], [ %i.2, %for.inc150 ]
  %19 = phi <2 x i32> [ zeroinitializer, %for.body.lr.ph ], [ %56, %for.inc150 ]
  %20 = load %struct.gauge_header** %header, align 8, !tbaa !16
  %order42 = getelementptr inbounds %struct.gauge_header* %20, i64 0, i32 4
  %21 = load i32* %order42, align 4, !tbaa !23
  %cmp43 = icmp eq i32 %21, 0
  %22 = trunc i64 %indvars.iv to i32
  br i1 %cmp43, label %if.end47, label %if.else46

if.else46:                                        ; preds = %for.body
  %23 = load i32** %rank2rcv, align 8, !tbaa !26
  %arrayidx = getelementptr inbounds i32* %23, i64 %indvars.iv
  %24 = load i32* %arrayidx, align 4, !tbaa !10
  br label %if.end47

if.end47:                                         ; preds = %for.body, %if.else46
  %rcv_coords.0 = phi i32 [ %24, %if.else46 ], [ %22, %for.body ]
  %25 = load i32* @nx, align 4, !tbaa !10
  %rem = srem i32 %rcv_coords.0, %25
  %div = sdiv i32 %rcv_coords.0, %25
  %26 = load i32* @ny, align 4, !tbaa !10
  %rem48 = srem i32 %div, %26
  %div49 = sdiv i32 %div, %26
  %27 = load i32* @nz, align 4, !tbaa !10
  %rem50 = srem i32 %div49, %27
  %div51 = sdiv i32 %div49, %27
  %28 = load i32* @nt, align 4, !tbaa !10
  %rem52 = srem i32 %div51, %28
  %call53 = call i32 @node_number(i32 %rem, i32 %rem48, i32 %rem50, i32 %rem52) #5
  %29 = load i32* @this_node, align 4, !tbaa !10
  %cmp54 = icmp eq i32 %29, 0
  br i1 %cmp54, label %if.then56, label %if.else91

if.then56:                                        ; preds = %if.end47
  %cmp57 = icmp eq i32 %where_in_buf.1255, %buf_length.1254
  br i1 %cmp57, label %if.then59, label %if.end75

if.then59:                                        ; preds = %if.then56
  %30 = load i32* @volume, align 4, !tbaa !10
  %sub = sub nsw i32 %30, %22
  %cmp60 = icmp sgt i32 %sub, 4096
  %.sub = select i1 %cmp60, i32 4096, i32 %sub
  %conv64 = sext i32 %.sub to i64
  %call65 = call i64 @fread(i8* %17, i64 576, i64 %conv64, %struct._IO_FILE* %1) #5
  %conv66 = trunc i64 %call65 to i32
  %cmp67 = icmp eq i32 %conv66, %.sub
  br i1 %cmp67, label %if.end75, label %if.then69

if.then69:                                        ; preds = %if.then59
  %31 = load i32* @this_node, align 4, !tbaa !10
  %call71 = call i32* @__errno_location() #7
  %32 = load i32* %call71, align 4, !tbaa !10
  %call72 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([55 x i8]* @.str104, i64 0, i64 0), i8* %0, i32 %31, i32 %32, i8* %3) #5
  %call73 = call i32 @fflush(%struct._IO_FILE* %18) #5
  call void @terminate(i32 1) #5
  br label %if.end75

if.end75:                                         ; preds = %if.then69, %if.then59, %if.then56
  %buf_length.2 = phi i32 [ %buf_length.1254, %if.then56 ], [ %.sub, %if.then59 ], [ %.sub, %if.then69 ]
  %where_in_buf.2 = phi i32 [ %where_in_buf.1255, %if.then56 ], [ 0, %if.then59 ], [ 0, %if.then69 ]
  %cmp76 = icmp eq i32 %call53, 0
  br i1 %cmp76, label %if.then78, label %if.else86

if.then78:                                        ; preds = %if.end75
  %call79 = call i32 @node_index(i32 %rem, i32 %rem48, i32 %rem50, i32 %rem52) #5
  %idxprom80 = sext i32 %call79 to i64
  %33 = load %struct.site** @lattice, align 8, !tbaa !8
  %arrayidx82 = getelementptr inbounds %struct.site* %33, i64 %idxprom80, i32 8, i64 0
  %34 = bitcast %struct.su3_matrix* %arrayidx82 to i8*
  %mul83 = shl nsw i32 %where_in_buf.2, 2
  %idxprom84 = sext i32 %mul83 to i64
  %arrayidx85 = getelementptr inbounds %struct.su3_matrix* %lbuf.0, i64 %idxprom84
  %35 = bitcast %struct.su3_matrix* %arrayidx85 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %34, i8* %35, i64 576, i32 1, i1 false)
  br label %if.end90

if.else86:                                        ; preds = %if.end75
  %mul87 = shl nsw i32 %where_in_buf.2, 2
  %idxprom88 = sext i32 %mul87 to i64
  %arrayidx89 = getelementptr inbounds %struct.su3_matrix* %lbuf.0, i64 %idxprom88
  %36 = bitcast %struct.su3_matrix* %arrayidx89 to i8*
  call void @send_field(i8* %36, i32 576, i32 %call53) #5
  br label %if.end90

if.end90:                                         ; preds = %if.else86, %if.then78
  %i.1 = phi i32 [ %call79, %if.then78 ], [ %i.0253, %if.else86 ]
  %inc = add nsw i32 %where_in_buf.2, 1
  br label %if.end101

if.else91:                                        ; preds = %if.end47
  %cmp92 = icmp eq i32 %29, %call53
  br i1 %cmp92, label %if.then94, label %if.end101

if.then94:                                        ; preds = %if.else91
  %call95 = call i32 @node_index(i32 %rem, i32 %rem48, i32 %rem50, i32 %rem52) #5
  %idxprom96 = sext i32 %call95 to i64
  %37 = load %struct.site** @lattice, align 8, !tbaa !8
  %arrayidx99 = getelementptr inbounds %struct.site* %37, i64 %idxprom96, i32 8, i64 0
  %38 = bitcast %struct.su3_matrix* %arrayidx99 to i8*
  call void @get_field(i8* %38, i32 576) #5
  br label %if.end101

if.end101:                                        ; preds = %if.else91, %if.then94, %if.end90
  %i.2 = phi i32 [ %i.1, %if.end90 ], [ %call95, %if.then94 ], [ %i.0253, %if.else91 ]
  %buf_length.3 = phi i32 [ %buf_length.2, %if.end90 ], [ %buf_length.1254, %if.then94 ], [ %buf_length.1254, %if.else91 ]
  %where_in_buf.3 = phi i32 [ %inc, %if.end90 ], [ %where_in_buf.1255, %if.then94 ], [ %where_in_buf.1255, %if.else91 ]
  %39 = load i32* @this_node, align 4, !tbaa !10
  %cmp102 = icmp eq i32 %39, %call53
  br i1 %cmp102, label %if.then104, label %if.else140

if.then104:                                       ; preds = %if.end101
  %idxprom108 = sext i32 %i.2 to i64
  br i1 %cmp105, label %if.then107, label %if.end112

if.then107:                                       ; preds = %if.then104
  %40 = load %struct.site** @lattice, align 8, !tbaa !8
  %arrayidx111 = getelementptr inbounds %struct.site* %40, i64 %idxprom108, i32 8, i64 0
  %41 = bitcast %struct.su3_matrix* %arrayidx111 to i32*
  call void @byterevn(i32* %41, i32 144) #5
  br label %if.end112

if.end112:                                        ; preds = %if.then104, %if.then107
  %42 = load %struct.site** @lattice, align 8, !tbaa !8
  %arrayidx116 = getelementptr inbounds %struct.site* %42, i64 %idxprom108, i32 8, i64 0
  %43 = bitcast %struct.su3_matrix* %arrayidx116 to i32*
  %.pre = load i32* %sum29, align 4, !tbaa !28
  %.pre258 = load i32* %sum31, align 4, !tbaa !29
  br label %for.body120

for.body120:                                      ; preds = %for.body120, %if.end112
  %44 = phi i32 [ %.pre258, %if.end112 ], [ %xor128, %for.body120 ]
  %45 = phi i32 [ %.pre, %if.end112 ], [ %xor, %for.body120 ]
  %val.0248 = phi i32* [ %43, %if.end112 ], [ %incdec.ptr, %for.body120 ]
  %k.0247 = phi i32 [ 0, %if.end112 ], [ %inc139, %for.body120 ]
  %46 = phi <2 x i32> [ %19, %if.end112 ], [ %53, %for.body120 ]
  %47 = extractelement <2 x i32> %46, i32 1
  %48 = extractelement <2 x i32> %46, i32 0
  %49 = load i32* %val.0248, align 4, !tbaa !10
  %shl = shl i32 %49, %48
  %sub121 = sub nsw i32 32, %48
  %shr = lshr i32 %49, %sub121
  %or = or i32 %shl, %shr
  %xor = xor i32 %or, %45
  store i32 %xor, i32* %sum29, align 4, !tbaa !28
  %50 = load i32* %val.0248, align 4, !tbaa !10
  %shl123 = shl i32 %50, %47
  %sub124 = sub nsw i32 32, %47
  %shr125 = lshr i32 %50, %sub124
  %or126 = or i32 %shl123, %shr125
  %xor128 = xor i32 %or126, %44
  store i32 %xor128, i32* %sum31, align 4, !tbaa !29
  %51 = add <2 x i32> %46, <i32 1, i32 1>
  %52 = icmp sgt <2 x i32> %46, <i32 27, i32 29>
  %53 = select <2 x i1> %52, <2 x i32> zeroinitializer, <2 x i32> %51
  %inc139 = add nsw i32 %k.0247, 1
  %incdec.ptr = getelementptr inbounds i32* %val.0248, i64 1
  %exitcond = icmp eq i32 %inc139, 144
  br i1 %exitcond, label %for.inc150, label %for.body120

if.else140:                                       ; preds = %if.end101
  %54 = add <2 x i32> %19, <i32 144, i32 144>
  %55 = srem <2 x i32> %54, <i32 29, i32 31>
  br label %for.inc150

for.inc150:                                       ; preds = %for.body120, %if.else140
  %56 = phi <2 x i32> [ %55, %if.else140 ], [ %53, %for.body120 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %57 = load i32* @volume, align 4, !tbaa !10
  %58 = trunc i64 %indvars.iv.next to i32
  %cmp39 = icmp slt i32 %58, %57
  br i1 %cmp39, label %for.body, label %for.end152

for.end152:                                       ; preds = %for.inc150, %if.end38
  call void @g_xor32(i32* %sum29) #5
  call void @g_xor32(i32* %sum31) #5
  %59 = load i32* @this_node, align 4, !tbaa !10
  %cmp155 = icmp eq i32 %59, 0
  br i1 %cmp155, label %if.then157, label %if.end176

if.then157:                                       ; preds = %for.end152
  %call158 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([59 x i8]* @.str105, i64 0, i64 0), i8* %3) #5
  %magic_number159 = getelementptr inbounds %struct.gauge_header* %2, i64 0, i32 0
  %60 = load i32* %magic_number159, align 4, !tbaa !22
  %cmp160 = icmp eq i32 %60, 20103
  br i1 %cmp160, label %if.then162, label %if.end174

if.then162:                                       ; preds = %if.then157
  %arraydecay163 = getelementptr inbounds %struct.gauge_header* %2, i64 0, i32 1, i64 0
  %call164 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([15 x i8]* @.str49, i64 0, i64 0), i8* %arraydecay163) #5
  %call165 = call i32 @fseeko(%struct._IO_FILE* %1, i64 %checksum_offset.0, i32 0) #5
  %cmp166 = icmp slt i32 %call165, 0
  br i1 %cmp166, label %if.then168, label %if.end173

if.then168:                                       ; preds = %if.then162
  %call170 = call i32* @__errno_location() #7
  %61 = load i32* %call170, align 4, !tbaa !10
  %call171 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([48 x i8]* @.str103, i64 0, i64 0), i8* %0, i64 %offset.0, i32 %61, i8* %3) #5
  %62 = load %struct._IO_FILE** @stdout, align 8, !tbaa !8
  %call172 = call i32 @fflush(%struct._IO_FILE* %62) #5
  call void @terminate(i32 1) #5
  br label %if.end173

if.end173:                                        ; preds = %if.then168, %if.then162
  call void @read_checksum(i32 0, %struct.gauge_file* %gf, %struct.gauge_check* %test_gc)
  br label %if.end174

if.end174:                                        ; preds = %if.end173, %if.then157
  %63 = load %struct._IO_FILE** @stdout, align 8, !tbaa !8
  %call175 = call i32 @fflush(%struct._IO_FILE* %63) #5
  %64 = bitcast %struct.su3_matrix* %lbuf.0 to i8*
  call void @free(i8* %64)
  br label %if.end176

if.end176:                                        ; preds = %if.end174, %for.end152
  ret void
}

declare void @g_xor32(i32*) #3

; Function Attrs: nounwind uwtable
define void @r_serial_arch(%struct.gauge_file* nocapture %gf) #0 {
entry:
  %test_gc = alloca %struct.gauge_check, align 4
  %tmpsu3 = alloca [4 x %struct.su3_matrix], align 16
  %myname = alloca [14 x i8], align 1
  %U = alloca [4 x [18 x double]], align 16
  %0 = bitcast [4 x %struct.su3_matrix]* %tmpsu3 to i8*
  call void @llvm.lifetime.start(i64 576, i8* %0) #5
  %1 = getelementptr inbounds [14 x i8]* %myname, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* getelementptr inbounds ([14 x i8]* @r_serial_arch.myname, i64 0, i64 0), i64 14, i32 1, i1 false)
  %2 = bitcast [4 x [18 x double]]* %U to i8*
  call void @llvm.lifetime.start(i64 576, i8* %2) #5
  %fp1 = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 0
  %3 = load %struct._IO_FILE** %fp1, align 8, !tbaa !24
  %filename2 = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 2
  %4 = load i8** %filename2, align 8, !tbaa !19
  %5 = load i32* @this_node, align 4, !tbaa !10
  %cmp = icmp eq i32 %5, 0
  br i1 %cmp, label %if.then, label %if.end17

if.then:                                          ; preds = %entry
  %parallel = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 5
  %6 = load i32* %parallel, align 4, !tbaa !27
  %tobool = icmp eq i32 %6, 0
  br i1 %tobool, label %if.end, label %if.then4

if.then4:                                         ; preds = %if.then
  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([48 x i8]* @.str101, i64 0, i64 0), i8* %1) #5
  br label %if.end

if.end:                                           ; preds = %if.then, %if.then4
  %7 = load i32* @nx, align 4, !tbaa !10
  %8 = load i32* @ny, align 4, !tbaa !10
  %9 = load i32* @nz, align 4, !tbaa !10
  %mul = mul i32 %7, 48
  %mul6 = mul i32 %mul, %8
  %mul7 = mul i32 %mul6, %9
  %conv = sext i32 %mul7 to i64
  %call8 = call i8* @calloc(i64 %conv, i64 8) #5
  %10 = bitcast i8* %call8 to double*
  %cmp9 = icmp eq i8* %call8, null
  br i1 %cmp9, label %if.then11, label %if.end17

if.then11:                                        ; preds = %if.end
  %11 = load i32* @this_node, align 4, !tbaa !10
  %call13 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([55 x i8]* @.str106, i64 0, i64 0), i8* %1, i32 %11) #5
  %puts = call i32 @puts(i8* getelementptr inbounds ([40 x i8]* @str190, i64 0, i64 0))
  %12 = load %struct._IO_FILE** @stdout, align 8, !tbaa !8
  %call15 = call i32 @fflush(%struct._IO_FILE* %12) #5
  call void @terminate(i32 1) #5
  br label %if.end17

if.end17:                                         ; preds = %if.end, %if.then11, %entry
  %uin.0 = phi double* [ %10, %if.then11 ], [ %10, %if.end ], [ undef, %entry ]
  %sum29 = getelementptr inbounds %struct.gauge_check* %test_gc, i64 0, i32 1
  store i32 0, i32* %sum29, align 4, !tbaa !28
  %sum31 = getelementptr inbounds %struct.gauge_check* %test_gc, i64 0, i32 0
  store i32 0, i32* %sum31, align 4, !tbaa !29
  call void (...)* @g_sync() #5
  %13 = load i32* @volume, align 4, !tbaa !10
  %cmp18274 = icmp sgt i32 %13, 0
  br i1 %cmp18274, label %for.body.lr.ph, label %for.end164

for.body.lr.ph:                                   ; preds = %if.end17
  %14 = bitcast double* %uin.0 to i8*
  %15 = bitcast double* %uin.0 to i32*
  %16 = load %struct._IO_FILE** @stdout, align 8, !tbaa !8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc162
  %chksum.0279 = phi i32 [ 0, %for.body.lr.ph ], [ %chksum.3, %for.inc162 ]
  %rcv_rank.0276 = phi i32 [ 0, %for.body.lr.ph ], [ %inc163, %for.inc162 ]
  %i.0275 = phi i32 [ undef, %for.body.lr.ph ], [ %i.1, %for.inc162 ]
  %17 = phi <2 x i32> [ zeroinitializer, %for.body.lr.ph ], [ %90, %for.inc162 ]
  %18 = load i32* @nx, align 4, !tbaa !10
  %rem = srem i32 %rcv_rank.0276, %18
  %div = sdiv i32 %rcv_rank.0276, %18
  %19 = load i32* @ny, align 4, !tbaa !10
  %rem20 = srem i32 %div, %19
  %div21 = sdiv i32 %div, %19
  %20 = load i32* @nz, align 4, !tbaa !10
  %rem22 = srem i32 %div21, %20
  %div23 = sdiv i32 %div21, %20
  %21 = load i32* @nt, align 4, !tbaa !10
  %rem24 = srem i32 %div23, %21
  %call25 = call i32 @node_number(i32 %rem, i32 %rem20, i32 %rem22, i32 %rem24) #5
  %22 = load i32* @this_node, align 4, !tbaa !10
  %cmp26 = icmp eq i32 %22, 0
  br i1 %cmp26, label %if.then28, label %if.else109

if.then28:                                        ; preds = %for.body
  %call29 = call i64 @fread(i8* %14, i64 384, i64 1, %struct._IO_FILE* %3) #5
  %conv30 = trunc i64 %call29 to i32
  %cmp31 = icmp eq i32 %conv30, 1
  br i1 %cmp31, label %if.then40, label %if.then33

if.then33:                                        ; preds = %if.then28
  %23 = load i32* @this_node, align 4, !tbaa !10
  %call35 = call i32* @__errno_location() #7
  %24 = load i32* %call35, align 4, !tbaa !10
  %call36 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([55 x i8]* @.str104, i64 0, i64 0), i8* %1, i32 %23, i32 %24, i8* %4) #5
  %call37 = call i32 @fflush(%struct._IO_FILE* %16) #5
  call void @terminate(i32 1) #5
  br label %if.then40

if.then40:                                        ; preds = %if.then33, %if.then28
  call void @byterevn(i32* %15, i32 48) #5
  br label %for.cond46.preheader

for.cond46.preheader:                             ; preds = %for.cond46.preheader, %if.then40
  %indvars.iv = phi i64 [ 0, %if.then40 ], [ %indvars.iv.next, %for.cond46.preheader ]
  %chksum.1269 = phi i32 [ %chksum.0279, %if.then40 ], [ %add.11, %for.cond46.preheader ]
  %q.0268 = phi double* [ %uin.0, %if.then40 ], [ %scevgep, %for.cond46.preheader ]
  %25 = bitcast double* %q.0268 to i32*
  %26 = load i32* %25, align 4, !tbaa !10
  %incdec.ptr = getelementptr inbounds double* %q.0268, i64 1
  %27 = load double* %q.0268, align 8, !tbaa !11
  %arrayidx51 = getelementptr inbounds [4 x [18 x double]]* %U, i64 0, i64 %indvars.iv, i64 0
  store double %27, double* %arrayidx51, align 16, !tbaa !11
  %28 = bitcast double* %incdec.ptr to i32*
  %29 = load i32* %28, align 4, !tbaa !10
  %incdec.ptr.1 = getelementptr inbounds double* %q.0268, i64 2
  %30 = load double* %incdec.ptr, align 8, !tbaa !11
  %arrayidx51.1 = getelementptr inbounds [4 x [18 x double]]* %U, i64 0, i64 %indvars.iv, i64 1
  store double %30, double* %arrayidx51.1, align 8, !tbaa !11
  %31 = bitcast double* %incdec.ptr.1 to i32*
  %32 = load i32* %31, align 4, !tbaa !10
  %incdec.ptr.2 = getelementptr inbounds double* %q.0268, i64 3
  %33 = load double* %incdec.ptr.1, align 8, !tbaa !11
  %arrayidx51.2 = getelementptr inbounds [4 x [18 x double]]* %U, i64 0, i64 %indvars.iv, i64 2
  store double %33, double* %arrayidx51.2, align 16, !tbaa !11
  %34 = bitcast double* %incdec.ptr.2 to i32*
  %35 = load i32* %34, align 4, !tbaa !10
  %incdec.ptr.3 = getelementptr inbounds double* %q.0268, i64 4
  %36 = load double* %incdec.ptr.2, align 8, !tbaa !11
  %arrayidx51.3 = getelementptr inbounds [4 x [18 x double]]* %U, i64 0, i64 %indvars.iv, i64 3
  store double %36, double* %arrayidx51.3, align 8, !tbaa !11
  %37 = bitcast double* %incdec.ptr.3 to i32*
  %38 = load i32* %37, align 4, !tbaa !10
  %incdec.ptr.4 = getelementptr inbounds double* %q.0268, i64 5
  %39 = load double* %incdec.ptr.3, align 8, !tbaa !11
  %arrayidx51.4 = getelementptr inbounds [4 x [18 x double]]* %U, i64 0, i64 %indvars.iv, i64 4
  store double %39, double* %arrayidx51.4, align 16, !tbaa !11
  %40 = bitcast double* %incdec.ptr.4 to i32*
  %41 = load i32* %40, align 4, !tbaa !10
  %incdec.ptr.5 = getelementptr inbounds double* %q.0268, i64 6
  %42 = load double* %incdec.ptr.4, align 8, !tbaa !11
  %arrayidx51.5 = getelementptr inbounds [4 x [18 x double]]* %U, i64 0, i64 %indvars.iv, i64 5
  store double %42, double* %arrayidx51.5, align 8, !tbaa !11
  %43 = bitcast double* %incdec.ptr.5 to i32*
  %44 = load i32* %43, align 4, !tbaa !10
  %incdec.ptr.6 = getelementptr inbounds double* %q.0268, i64 7
  %45 = load double* %incdec.ptr.5, align 8, !tbaa !11
  %arrayidx51.6 = getelementptr inbounds [4 x [18 x double]]* %U, i64 0, i64 %indvars.iv, i64 6
  store double %45, double* %arrayidx51.6, align 16, !tbaa !11
  %46 = bitcast double* %incdec.ptr.6 to i32*
  %47 = load i32* %46, align 4, !tbaa !10
  %incdec.ptr.7 = getelementptr inbounds double* %q.0268, i64 8
  %48 = load double* %incdec.ptr.6, align 8, !tbaa !11
  %arrayidx51.7 = getelementptr inbounds [4 x [18 x double]]* %U, i64 0, i64 %indvars.iv, i64 7
  store double %48, double* %arrayidx51.7, align 8, !tbaa !11
  %49 = bitcast double* %incdec.ptr.7 to i32*
  %50 = load i32* %49, align 4, !tbaa !10
  %incdec.ptr.8 = getelementptr inbounds double* %q.0268, i64 9
  %51 = load double* %incdec.ptr.7, align 8, !tbaa !11
  %arrayidx51.8 = getelementptr inbounds [4 x [18 x double]]* %U, i64 0, i64 %indvars.iv, i64 8
  store double %51, double* %arrayidx51.8, align 16, !tbaa !11
  %52 = bitcast double* %incdec.ptr.8 to i32*
  %53 = load i32* %52, align 4, !tbaa !10
  %incdec.ptr.9 = getelementptr inbounds double* %q.0268, i64 10
  %54 = load double* %incdec.ptr.8, align 8, !tbaa !11
  %arrayidx51.9 = getelementptr inbounds [4 x [18 x double]]* %U, i64 0, i64 %indvars.iv, i64 9
  store double %54, double* %arrayidx51.9, align 8, !tbaa !11
  %55 = bitcast double* %incdec.ptr.9 to i32*
  %56 = load i32* %55, align 4, !tbaa !10
  %incdec.ptr.10 = getelementptr inbounds double* %q.0268, i64 11
  %57 = load double* %incdec.ptr.9, align 8, !tbaa !11
  %arrayidx51.10 = getelementptr inbounds [4 x [18 x double]]* %U, i64 0, i64 %indvars.iv, i64 10
  store double %57, double* %arrayidx51.10, align 16, !tbaa !11
  %58 = bitcast double* %incdec.ptr.10 to i32*
  %59 = load i32* %58, align 4, !tbaa !10
  %60 = load double* %incdec.ptr.10, align 8, !tbaa !11
  %arrayidx51.11 = getelementptr inbounds [4 x [18 x double]]* %U, i64 0, i64 %indvars.iv, i64 11
  store double %60, double* %arrayidx51.11, align 8, !tbaa !11
  %mul.i = fmul double %33, %57
  %mul4.i = fmul double %39, %51
  %sub.i = fsub double %mul.i, %mul4.i
  %mul7.i = fmul double %36, %60
  %sub8.i = fsub double %sub.i, %mul7.i
  %mul11.i = fmul double %42, %54
  %add.i = fadd double %sub8.i, %mul11.i
  %arrayidx12.i = getelementptr inbounds [4 x [18 x double]]* %U, i64 0, i64 %indvars.iv, i64 12
  store double %add.i, double* %arrayidx12.i, align 16, !tbaa !11
  %mul15.i = fmul double %39, %54
  %mul18.i = fmul double %33, %60
  %sub19.i = fsub double %mul15.i, %mul18.i
  %mul22.i = fmul double %51, %42
  %add23.i = fadd double %mul22.i, %sub19.i
  %mul26.i = fmul double %57, %36
  %sub27.i = fsub double %add23.i, %mul26.i
  %arrayidx28.i = getelementptr inbounds [4 x [18 x double]]* %U, i64 0, i64 %indvars.iv, i64 13
  store double %sub27.i, double* %arrayidx28.i, align 8, !tbaa !11
  %mul31.i = fmul double %39, %45
  %mul34.i = fmul double %57, %27
  %sub35.i = fsub double %mul31.i, %mul34.i
  %mul38.i = fmul double %42, %48
  %sub39.i = fsub double %sub35.i, %mul38.i
  %mul42.i = fmul double %60, %30
  %add43.i = fadd double %sub39.i, %mul42.i
  %arrayidx44.i = getelementptr inbounds [4 x [18 x double]]* %U, i64 0, i64 %indvars.iv, i64 14
  store double %add43.i, double* %arrayidx44.i, align 16, !tbaa !11
  %mul47.i = fmul double %60, %27
  %mul50.i = fmul double %39, %48
  %sub51.i = fsub double %mul47.i, %mul50.i
  %mul54.i = fmul double %57, %30
  %add55.i = fadd double %sub51.i, %mul54.i
  %mul58.i = fmul double %42, %45
  %sub59.i = fsub double %add55.i, %mul58.i
  %arrayidx60.i = getelementptr inbounds [4 x [18 x double]]* %U, i64 0, i64 %indvars.iv, i64 15
  store double %sub59.i, double* %arrayidx60.i, align 8, !tbaa !11
  %mul63.i = fmul double %51, %27
  %mul66.i = fmul double %33, %45
  %sub67.i = fsub double %mul63.i, %mul66.i
  %mul70.i = fmul double %54, %30
  %sub71.i = fsub double %sub67.i, %mul70.i
  %mul74.i = fmul double %36, %48
  %add75.i = fadd double %mul74.i, %sub71.i
  %arrayidx76.i = getelementptr inbounds [4 x [18 x double]]* %U, i64 0, i64 %indvars.iv, i64 16
  store double %add75.i, double* %arrayidx76.i, align 16, !tbaa !11
  %mul79.i = fmul double %33, %48
  %mul82.i = fmul double %54, %27
  %sub83.i = fsub double %mul79.i, %mul82.i
  %mul86.i = fmul double %36, %45
  %add87.i = fadd double %mul86.i, %sub83.i
  %mul90.i = fmul double %51, %30
  %sub91.i = fsub double %add87.i, %mul90.i
  %arrayidx92.i = getelementptr inbounds [4 x [18 x double]]* %U, i64 0, i64 %indvars.iv, i64 17
  store double %sub91.i, double* %arrayidx92.i, align 8, !tbaa !11
  %real = getelementptr inbounds [4 x %struct.su3_matrix]* %tmpsu3, i64 0, i64 %indvars.iv, i32 0, i64 0, i64 0, i32 0
  %61 = bitcast double* %arrayidx51 to <2 x double>*
  %62 = load <2 x double>* %61, align 16, !tbaa !11
  %63 = bitcast double* %real to <2 x double>*
  store <2 x double> %62, <2 x double>* %63, align 16, !tbaa !11
  %real.1 = getelementptr inbounds [4 x %struct.su3_matrix]* %tmpsu3, i64 0, i64 %indvars.iv, i32 0, i64 0, i64 1, i32 0
  %64 = bitcast double* %arrayidx51.2 to <2 x double>*
  %65 = load <2 x double>* %64, align 16, !tbaa !11
  %66 = bitcast double* %real.1 to <2 x double>*
  store <2 x double> %65, <2 x double>* %66, align 16, !tbaa !11
  %real.2 = getelementptr inbounds [4 x %struct.su3_matrix]* %tmpsu3, i64 0, i64 %indvars.iv, i32 0, i64 0, i64 2, i32 0
  %67 = bitcast double* %arrayidx51.4 to <2 x double>*
  %68 = load <2 x double>* %67, align 16, !tbaa !11
  %69 = bitcast double* %real.2 to <2 x double>*
  store <2 x double> %68, <2 x double>* %69, align 16, !tbaa !11
  %70 = load double* %arrayidx51.6, align 16, !tbaa !11
  %real.1287 = getelementptr inbounds [4 x %struct.su3_matrix]* %tmpsu3, i64 0, i64 %indvars.iv, i32 0, i64 1, i64 0, i32 0
  store double %70, double* %real.1287, align 16, !tbaa !34
  %imag.1289 = getelementptr inbounds [4 x %struct.su3_matrix]* %tmpsu3, i64 0, i64 %indvars.iv, i32 0, i64 1, i64 0, i32 1
  store double %48, double* %imag.1289, align 8, !tbaa !36
  %real.1.1 = getelementptr inbounds [4 x %struct.su3_matrix]* %tmpsu3, i64 0, i64 %indvars.iv, i32 0, i64 1, i64 1, i32 0
  store double %51, double* %real.1.1, align 16, !tbaa !34
  %imag.1.1 = getelementptr inbounds [4 x %struct.su3_matrix]* %tmpsu3, i64 0, i64 %indvars.iv, i32 0, i64 1, i64 1, i32 1
  store double %54, double* %imag.1.1, align 8, !tbaa !36
  %real.2.1 = getelementptr inbounds [4 x %struct.su3_matrix]* %tmpsu3, i64 0, i64 %indvars.iv, i32 0, i64 1, i64 2, i32 0
  store double %57, double* %real.2.1, align 16, !tbaa !34
  %imag.2.1 = getelementptr inbounds [4 x %struct.su3_matrix]* %tmpsu3, i64 0, i64 %indvars.iv, i32 0, i64 1, i64 2, i32 1
  store double %60, double* %imag.2.1, align 8, !tbaa !36
  %real.2291 = getelementptr inbounds [4 x %struct.su3_matrix]* %tmpsu3, i64 0, i64 %indvars.iv, i32 0, i64 2, i64 0, i32 0
  store double %add.i, double* %real.2291, align 16, !tbaa !34
  %imag.2293 = getelementptr inbounds [4 x %struct.su3_matrix]* %tmpsu3, i64 0, i64 %indvars.iv, i32 0, i64 2, i64 0, i32 1
  store double %sub27.i, double* %imag.2293, align 8, !tbaa !36
  %real.1.2 = getelementptr inbounds [4 x %struct.su3_matrix]* %tmpsu3, i64 0, i64 %indvars.iv, i32 0, i64 2, i64 1, i32 0
  store double %add43.i, double* %real.1.2, align 16, !tbaa !34
  %imag.1.2 = getelementptr inbounds [4 x %struct.su3_matrix]* %tmpsu3, i64 0, i64 %indvars.iv, i32 0, i64 2, i64 1, i32 1
  store double %sub59.i, double* %imag.1.2, align 8, !tbaa !36
  %real.2.2 = getelementptr inbounds [4 x %struct.su3_matrix]* %tmpsu3, i64 0, i64 %indvars.iv, i32 0, i64 2, i64 2, i32 0
  store double %add75.i, double* %real.2.2, align 16, !tbaa !34
  %imag.2.2 = getelementptr inbounds [4 x %struct.su3_matrix]* %tmpsu3, i64 0, i64 %indvars.iv, i32 0, i64 2, i64 2, i32 1
  store double %sub91.i, double* %imag.2.2, align 8, !tbaa !36
  %add = add i32 %26, %chksum.1269
  %add.1 = add i32 %29, %add
  %add.2 = add i32 %32, %add.1
  %add.3 = add i32 %35, %add.2
  %add.4 = add i32 %38, %add.3
  %add.5 = add i32 %41, %add.4
  %add.6 = add i32 %44, %add.5
  %add.7 = add i32 %47, %add.6
  %add.8 = add i32 %50, %add.7
  %add.9 = add i32 %53, %add.8
  %add.10 = add i32 %56, %add.9
  %add.11 = add i32 %59, %add.10
  %scevgep = getelementptr double* %q.0268, i64 12
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 4
  br i1 %exitcond, label %for.end99, label %for.cond46.preheader

for.end99:                                        ; preds = %for.cond46.preheader
  %cmp100 = icmp eq i32 %call25, 0
  br i1 %cmp100, label %if.then102, label %if.else

if.then102:                                       ; preds = %for.end99
  %call103 = call i32 @node_index(i32 %rem, i32 %rem20, i32 %rem22, i32 %rem24) #5
  %idxprom104 = sext i32 %call103 to i64
  %71 = load %struct.site** @lattice, align 8, !tbaa !8
  %arrayidx106 = getelementptr inbounds %struct.site* %71, i64 %idxprom104, i32 8, i64 0
  %72 = bitcast %struct.su3_matrix* %arrayidx106 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %72, i8* %0, i64 576, i32 1, i1 false)
  br label %if.end119

if.else:                                          ; preds = %for.end99
  call void @send_field(i8* %0, i32 576, i32 %call25) #5
  br label %if.end119

if.else109:                                       ; preds = %for.body
  %cmp110 = icmp eq i32 %22, %call25
  br i1 %cmp110, label %if.then112, label %if.end119

if.then112:                                       ; preds = %if.else109
  %call113 = call i32 @node_index(i32 %rem, i32 %rem20, i32 %rem22, i32 %rem24) #5
  %idxprom114 = sext i32 %call113 to i64
  %73 = load %struct.site** @lattice, align 8, !tbaa !8
  %arrayidx117 = getelementptr inbounds %struct.site* %73, i64 %idxprom114, i32 8, i64 0
  %74 = bitcast %struct.su3_matrix* %arrayidx117 to i8*
  call void @get_field(i8* %74, i32 576) #5
  br label %if.end119

if.end119:                                        ; preds = %if.else109, %if.then112, %if.then102, %if.else
  %i.1 = phi i32 [ %call103, %if.then102 ], [ %i.0275, %if.else ], [ %call113, %if.then112 ], [ %i.0275, %if.else109 ]
  %chksum.3 = phi i32 [ %add.11, %if.then102 ], [ %add.11, %if.else ], [ %chksum.0279, %if.then112 ], [ %chksum.0279, %if.else109 ]
  %75 = load i32* @this_node, align 4, !tbaa !10
  %cmp120 = icmp eq i32 %75, %call25
  br i1 %cmp120, label %if.then122, label %if.else152

if.then122:                                       ; preds = %if.end119
  %idxprom123 = sext i32 %i.1 to i64
  %76 = load %struct.site** @lattice, align 8, !tbaa !8
  %arrayidx126 = getelementptr inbounds %struct.site* %76, i64 %idxprom123, i32 8, i64 0
  %77 = bitcast %struct.su3_matrix* %arrayidx126 to i32*
  %.pre = load i32* %sum29, align 4, !tbaa !28
  %.pre295 = load i32* %sum31, align 4, !tbaa !29
  br label %for.body130

for.body130:                                      ; preds = %for.body130, %if.then122
  %78 = phi i32 [ %.pre295, %if.then122 ], [ %xor137, %for.body130 ]
  %79 = phi i32 [ %.pre, %if.then122 ], [ %xor, %for.body130 ]
  %val.0271 = phi i32* [ %77, %if.then122 ], [ %incdec.ptr150, %for.body130 ]
  %k.0270 = phi i32 [ 0, %if.then122 ], [ %inc149, %for.body130 ]
  %80 = phi <2 x i32> [ %17, %if.then122 ], [ %87, %for.body130 ]
  %81 = extractelement <2 x i32> %80, i32 1
  %82 = extractelement <2 x i32> %80, i32 0
  %83 = load i32* %val.0271, align 4, !tbaa !10
  %shl = shl i32 %83, %82
  %sub = sub nsw i32 32, %82
  %shr = lshr i32 %83, %sub
  %or = or i32 %shl, %shr
  %xor = xor i32 %or, %79
  store i32 %xor, i32* %sum29, align 4, !tbaa !28
  %84 = load i32* %val.0271, align 4, !tbaa !10
  %shl132 = shl i32 %84, %81
  %sub133 = sub nsw i32 32, %81
  %shr134 = lshr i32 %84, %sub133
  %or135 = or i32 %shl132, %shr134
  %xor137 = xor i32 %or135, %78
  store i32 %xor137, i32* %sum31, align 4, !tbaa !29
  %85 = add <2 x i32> %80, <i32 1, i32 1>
  %86 = icmp sgt <2 x i32> %80, <i32 27, i32 29>
  %87 = select <2 x i1> %86, <2 x i32> zeroinitializer, <2 x i32> %85
  %inc149 = add nsw i32 %k.0270, 1
  %incdec.ptr150 = getelementptr inbounds i32* %val.0271, i64 1
  %exitcond294 = icmp eq i32 %inc149, 144
  br i1 %exitcond294, label %for.inc162, label %for.body130

if.else152:                                       ; preds = %if.end119
  %88 = add <2 x i32> %17, <i32 144, i32 144>
  %89 = srem <2 x i32> %88, <i32 29, i32 31>
  br label %for.inc162

for.inc162:                                       ; preds = %for.body130, %if.else152
  %90 = phi <2 x i32> [ %89, %if.else152 ], [ %87, %for.body130 ]
  %inc163 = add nsw i32 %rcv_rank.0276, 1
  %91 = load i32* @volume, align 4, !tbaa !10
  %cmp18 = icmp slt i32 %inc163, %91
  br i1 %cmp18, label %for.body, label %for.end164

for.end164:                                       ; preds = %for.inc162, %if.end17
  %chksum.0.lcssa = phi i32 [ 0, %if.end17 ], [ %chksum.3, %for.inc162 ]
  call void @g_xor32(i32* %sum29) #5
  call void @g_xor32(i32* %sum31) #5
  %92 = load i32* @this_node, align 4, !tbaa !10
  %cmp167 = icmp eq i32 %92, 0
  br i1 %cmp167, label %if.then169, label %if.end188

if.then169:                                       ; preds = %for.end164
  %call170 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([60 x i8]* @.str108, i64 0, i64 0), i8* %4) #5
  %sum31171 = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 6, i32 0
  %93 = load i32* %sum31171, align 4, !tbaa !21
  %cmp172 = icmp eq i32 %chksum.0.lcssa, %93
  br i1 %cmp172, label %if.else178, label %if.then174

if.then174:                                       ; preds = %if.then169
  %call177 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([56 x i8]* @.str109, i64 0, i64 0), i32 %chksum.0.lcssa, i32 %93) #5
  br label %if.end180

if.else178:                                       ; preds = %if.then169
  %call179 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([32 x i8]* @.str110, i64 0, i64 0), i32 %chksum.0.lcssa) #5
  br label %if.end180

if.end180:                                        ; preds = %if.else178, %if.then174
  %94 = load %struct._IO_FILE** @stdout, align 8, !tbaa !8
  %call181 = call i32 @fflush(%struct._IO_FILE* %94) #5
  %95 = bitcast double* %uin.0 to i8*
  call void @free(i8* %95)
  %96 = load i32* %sum29, align 4, !tbaa !28
  %sum29184 = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 6, i32 1
  store i32 %96, i32* %sum29184, align 4, !tbaa !20
  %97 = load i32* %sum31, align 4, !tbaa !29
  store i32 %97, i32* %sum31171, align 4, !tbaa !21
  br label %if.end188

if.end188:                                        ; preds = %if.end180, %for.end164
  call void @llvm.lifetime.end(i64 576, i8* %2) #5
  call void @llvm.lifetime.end(i64 576, i8* %0) #5
  ret void
}

; Function Attrs: nounwind uwtable
define void @r_serial_f(%struct.gauge_file* nocapture readonly %gf) #0 {
entry:
  tail call void (...)* @g_sync() #5
  %0 = load i32* @this_node, align 4, !tbaa !10
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end3

if.then:                                          ; preds = %entry
  %parallel = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 5
  %1 = load i32* %parallel, align 4, !tbaa !27
  %tobool = icmp eq i32 %1, 0
  br i1 %tobool, label %if.end, label %if.then1

if.then1:                                         ; preds = %if.then
  %puts = tail call i32 @puts(i8* getelementptr inbounds ([54 x i8]* @str191, i64 0, i64 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %if.then1
  %fp = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 0
  %2 = load %struct._IO_FILE** %fp, align 8, !tbaa !24
  %call2 = tail call i32 @fclose(%struct._IO_FILE* %2) #5
  br label %if.end3

if.end3:                                          ; preds = %if.end, %entry
  %rank2rcv = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 4
  %3 = load i32** %rank2rcv, align 8, !tbaa !26
  %cmp4 = icmp eq i32* %3, null
  br i1 %cmp4, label %if.end7, label %if.then5

if.then5:                                         ; preds = %if.end3
  %4 = bitcast i32* %3 to i8*
  tail call void @free(i8* %4)
  br label %if.end7

if.end7:                                          ; preds = %if.end3, %if.then5
  ret void
}

; Function Attrs: nounwind uwtable
define void @write_site_list(%struct._IO_FILE* %fp, %struct.gauge_header* nocapture readonly %gh) #0 {
entry:
  %header_bytes = getelementptr inbounds %struct.gauge_header* %gh, i64 0, i32 3
  %0 = load i32* %header_bytes, align 4, !tbaa !14
  %conv = sext i32 %0 to i64
  %1 = load i32* @sites_on_node, align 4, !tbaa !10
  %conv1 = sext i32 %1 to i64
  %mul = shl nsw i64 %conv1, 2
  %2 = load i32* @this_node, align 4, !tbaa !10
  %conv2 = sext i32 %2 to i64
  %mul3 = mul i64 %mul, %conv2
  %add = add i64 %mul3, %conv
  %call = tail call i8* @calloc(i64 %conv1, i64 4) #5
  %3 = bitcast i8* %call to i32*
  %cmp = icmp eq i8* %call, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call6 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([44 x i8]* @.str112, i64 0, i64 0), i32 %2) #5
  %4 = load %struct._IO_FILE** @stdout, align 8, !tbaa !8
  %call7 = tail call i32 @fflush(%struct._IO_FILE* %4) #5
  tail call void @terminate(i32 1) #5
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %call8 = tail call i32 @g_seek(%struct._IO_FILE* %fp, i64 %add, i32 0) #5
  %cmp9 = icmp slt i32 %call8, 0
  br i1 %cmp9, label %if.then11, label %if.end15

if.then11:                                        ; preds = %if.end
  %5 = load i32* @this_node, align 4, !tbaa !10
  %call12 = tail call i32* @__errno_location() #7
  %6 = load i32* %call12, align 4, !tbaa !10
  %call13 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([53 x i8]* @.str113, i64 0, i64 0), i32 %5, i64 %add, i32 %6) #5
  %7 = load %struct._IO_FILE** @stdout, align 8, !tbaa !8
  %call14 = tail call i32 @fflush(%struct._IO_FILE* %7) #5
  tail call void @terminate(i32 1) #5
  br label %if.end15

if.end15:                                         ; preds = %if.then11, %if.end
  %8 = load i32* @sites_on_node, align 4, !tbaa !10
  %cmp1650 = icmp sgt i32 %8, 0
  br i1 %cmp1650, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %if.end15
  %9 = load %struct.site** @lattice, align 8, !tbaa !8
  %10 = load i32* @nx, align 4, !tbaa !10
  %11 = load i32* @ny, align 4, !tbaa !10
  %12 = load i32* @nz, align 4, !tbaa !10
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %i.053 = phi i32 [ 0, %for.body.lr.ph ], [ %inc28, %for.body ]
  %s.051 = phi %struct.site* [ %9, %for.body.lr.ph ], [ %incdec.ptr, %for.body ]
  %t = getelementptr inbounds %struct.site* %s.051, i64 0, i32 3
  %13 = load i16* %t, align 2, !tbaa !37
  %conv18 = sext i16 %13 to i32
  %mul19 = mul nsw i32 %conv18, %12
  %z = getelementptr inbounds %struct.site* %s.051, i64 0, i32 2
  %14 = load i16* %z, align 2, !tbaa !43
  %conv20 = sext i16 %14 to i32
  %add21 = add nsw i32 %mul19, %conv20
  %mul22 = mul nsw i32 %add21, %11
  %y = getelementptr inbounds %struct.site* %s.051, i64 0, i32 1
  %15 = load i16* %y, align 2, !tbaa !44
  %conv23 = sext i16 %15 to i32
  %add24 = add nsw i32 %mul22, %conv23
  %mul25 = mul nsw i32 %add24, %10
  %x = getelementptr inbounds %struct.site* %s.051, i64 0, i32 0
  %16 = load i16* %x, align 2, !tbaa !45
  %conv26 = sext i16 %16 to i32
  %add27 = add nsw i32 %mul25, %conv26
  %arrayidx = getelementptr inbounds i32* %3, i64 %indvars.iv
  store i32 %add27, i32* %arrayidx, align 4, !tbaa !10
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %inc28 = add nsw i32 %i.053, 1
  %incdec.ptr = getelementptr inbounds %struct.site* %s.051, i64 1
  %cmp16 = icmp slt i32 %inc28, %8
  br i1 %cmp16, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %if.end15
  %conv29 = sext i32 %8 to i64
  %call30 = tail call i64 @g_write(i8* %call, i64 4, i64 %conv29, %struct._IO_FILE* %fp) #5
  %conv31 = trunc i64 %call30 to i32
  %17 = load i32* @sites_on_node, align 4, !tbaa !10
  %cmp32 = icmp eq i32 %conv31, %17
  br i1 %cmp32, label %if.end38, label %if.then34

if.then34:                                        ; preds = %for.end
  %18 = load i32* @this_node, align 4, !tbaa !10
  %call35 = tail call i32* @__errno_location() #7
  %19 = load i32* %call35, align 4, !tbaa !10
  %call36 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([48 x i8]* @.str114, i64 0, i64 0), i32 %18, i32 %19) #5
  %20 = load %struct._IO_FILE** @stdout, align 8, !tbaa !8
  %call37 = tail call i32 @fflush(%struct._IO_FILE* %20) #5
  tail call void @terminate(i32 1) #5
  br label %if.end38

if.end38:                                         ; preds = %for.end, %if.then34
  tail call void @free(i8* %call)
  ret void
}

declare i32 @g_seek(%struct._IO_FILE*, i64, i32) #3

; Function Attrs: nounwind uwtable
define noalias %struct.gauge_file* @parallel_open(i32 %order, i8* %filename) #0 {
entry:
  %call = tail call %struct.gauge_file* @setup_output_gauge_file()
  %header = getelementptr inbounds %struct.gauge_file* %call, i64 0, i32 1
  %0 = load %struct.gauge_header** %header, align 8, !tbaa !16
  %order1 = getelementptr inbounds %struct.gauge_header* %0, i64 0, i32 4
  store i32 %order, i32* %order1, align 4, !tbaa !23
  %call2 = tail call %struct._IO_FILE* @g_open(i8* %filename, i8* getelementptr inbounds ([3 x i8]* @.str38, i64 0, i64 0)) #5
  %cmp = icmp eq %struct._IO_FILE* %call2, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i32* @this_node, align 4, !tbaa !10
  %call3 = tail call i32* @__errno_location() #7
  %2 = load i32* %call3, align 4, !tbaa !10
  %call4 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([53 x i8]* @.str115, i64 0, i64 0), i32 %1, i8* %filename, i32 %2) #5
  %3 = load %struct._IO_FILE** @stdout, align 8, !tbaa !8
  %call5 = tail call i32 @fflush(%struct._IO_FILE* %3) #5
  tail call void @terminate(i32 1) #5
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %4 = load i32* @this_node, align 4, !tbaa !10
  %cmp6 = icmp eq i32 %4, 0
  br i1 %cmp6, label %if.then7, label %if.end8

if.then7:                                         ; preds = %if.end
  tail call void @pwrite_gauge_hdr(%struct._IO_FILE* %call2, %struct.gauge_header* %0)
  br label %if.end8

if.end8:                                          ; preds = %if.then7, %if.end
  %header_bytes = getelementptr inbounds %struct.gauge_header* %0, i64 0, i32 3
  %5 = bitcast i32* %header_bytes to i8*
  tail call void @broadcast_bytes(i8* %5, i32 4) #5
  %cmp9 = icmp eq i32 %order, 0
  br i1 %cmp9, label %if.end11, label %if.then10

if.then10:                                        ; preds = %if.end8
  tail call void @write_site_list(%struct._IO_FILE* %call2, %struct.gauge_header* %0)
  br label %if.end11

if.end11:                                         ; preds = %if.end8, %if.then10
  %fp12 = getelementptr inbounds %struct.gauge_file* %call, i64 0, i32 0
  store %struct._IO_FILE* %call2, %struct._IO_FILE** %fp12, align 8, !tbaa !24
  %filename13 = getelementptr inbounds %struct.gauge_file* %call, i64 0, i32 2
  store i8* %filename, i8** %filename13, align 8, !tbaa !19
  %byterevflag = getelementptr inbounds %struct.gauge_file* %call, i64 0, i32 3
  store i32 0, i32* %byterevflag, align 4, !tbaa !25
  %parallel = getelementptr inbounds %struct.gauge_file* %call, i64 0, i32 5
  store i32 1, i32* %parallel, align 4, !tbaa !27
  ret %struct.gauge_file* %call
}

declare %struct._IO_FILE* @g_open(i8*, i8*) #3

; Function Attrs: nounwind uwtable
define noalias %struct.gauge_file* @w_parallel_i(i8* %filename) #0 {
entry:
  %call = tail call %struct.gauge_file* @parallel_open(i32 0, i8* %filename)
  ret %struct.gauge_file* %call
}

; Function Attrs: nounwind uwtable
define noalias %struct.gauge_file* @w_checkpoint_i(i8* %filename) #0 {
entry:
  %call = tail call %struct.gauge_file* @parallel_open(i32 1, i8* %filename)
  ret %struct.gauge_file* %call
}

; Function Attrs: nounwind uwtable
define noalias %struct.su3_matrix* @w_parallel_setup(%struct.gauge_file* nocapture readonly %gf, i64* nocapture %checksum_offset) #0 {
entry:
  %myname = alloca [17 x i8], align 16
  %0 = getelementptr inbounds [17 x i8]* %myname, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* getelementptr inbounds ([17 x i8]* @w_parallel_setup.myname, i64 0, i64 0), i64 17, i32 16, i1 false)
  %parallel = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 5
  %1 = load i32* %parallel, align 4, !tbaa !27
  %tobool = icmp eq i32 %1, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([47 x i8]* @.str116, i64 0, i64 0), i8* %0) #5
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %call1 = call i8* @calloc(i64 16384, i64 144) #5
  %2 = bitcast i8* %call1 to %struct.su3_matrix*
  %cmp = icmp eq i8* %call1, null
  br i1 %cmp, label %if.then2, label %if.end6

if.then2:                                         ; preds = %if.end
  %3 = load i32* @this_node, align 4, !tbaa !10
  %call4 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([31 x i8]* @.str102, i64 0, i64 0), i8* %0, i32 %3) #5
  %4 = load %struct._IO_FILE** @stdout, align 8, !tbaa !8
  %call5 = call i32 @fflush(%struct._IO_FILE* %4) #5
  call void @terminate(i32 1) #5
  br label %if.end6

if.end6:                                          ; preds = %if.then2, %if.end
  %fp7 = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 0
  %5 = load %struct._IO_FILE** %fp7, align 8, !tbaa !24
  %header = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 1
  %6 = load i32* @sites_on_node, align 4, !tbaa !10
  %mul = shl nsw i32 %6, 2
  %conv = sext i32 %mul to i64
  %mul8 = mul i64 %conv, 144
  %7 = load %struct.gauge_header** %header, align 8, !tbaa !16
  %order = getelementptr inbounds %struct.gauge_header* %7, i64 0, i32 4
  %8 = load i32* %order, align 4, !tbaa !23
  %cmp10 = icmp eq i32 %8, 0
  br i1 %cmp10, label %if.end15, label %if.else

if.else:                                          ; preds = %if.end6
  %9 = load i32* @volume, align 4, !tbaa !10
  %conv13 = sext i32 %9 to i64
  %mul14 = shl nsw i64 %conv13, 2
  br label %if.end15

if.end15:                                         ; preds = %if.end6, %if.else
  %coord_list_size.0 = phi i64 [ %mul14, %if.else ], [ 0, %if.end6 ]
  %header_bytes = getelementptr inbounds %struct.gauge_header* %7, i64 0, i32 3
  %10 = load i32* %header_bytes, align 4, !tbaa !14
  %conv17 = sext i32 %10 to i64
  %add = add nsw i64 %conv17, %coord_list_size.0
  store i64 %add, i64* %checksum_offset, align 8, !tbaa !46
  %add18 = add nsw i64 %add, 8
  %11 = load i32* @this_node, align 4, !tbaa !10
  %conv19 = sext i32 %11 to i64
  %mul20 = mul nsw i64 %mul8, %conv19
  %add21 = add nsw i64 %add18, %mul20
  %call22 = call i32 @g_seek(%struct._IO_FILE* %5, i64 %add21, i32 0) #5
  %cmp23 = icmp slt i32 %call22, 0
  br i1 %cmp23, label %if.then25, label %if.end30

if.then25:                                        ; preds = %if.end15
  %12 = load i32* @this_node, align 4, !tbaa !10
  %call27 = call i32* @__errno_location() #7
  %13 = load i32* %call27, align 4, !tbaa !10
  %filename = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 2
  %14 = load i8** %filename, align 8, !tbaa !19
  %call28 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([48 x i8]* @.str117, i64 0, i64 0), i8* %0, i32 %12, i64 %add21, i32 %13, i8* %14) #5
  %15 = load %struct._IO_FILE** @stdout, align 8, !tbaa !8
  %call29 = call i32 @fflush(%struct._IO_FILE* %15) #5
  call void @terminate(i32 1) #5
  br label %if.end30

if.end30:                                         ; preds = %if.then25, %if.end15
  ret %struct.su3_matrix* %2
}

; Function Attrs: nounwind uwtable
define void @w_parallel(%struct.gauge_file* %gf) #0 {
entry:
  %myname.i = alloca [15 x i8], align 1
  %checksum_offset = alloca i64, align 8
  %msg = alloca %struct.anon.0, align 8
  %myname = alloca [11 x i8], align 1
  %0 = bitcast %struct.anon.0* %msg to i8*
  call void @llvm.lifetime.start(i64 584, i8* %0) #5
  %1 = getelementptr inbounds [11 x i8]* %myname, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* getelementptr inbounds ([11 x i8]* @w_parallel.myname, i64 0, i64 0), i64 11, i32 1, i1 false)
  %fp1 = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 0
  %2 = load %struct._IO_FILE** %fp1, align 8, !tbaa !24
  %call = call %struct.su3_matrix* @w_parallel_setup(%struct.gauge_file* %gf, i64* %checksum_offset)
  %sum31 = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 6, i32 0
  store i32 0, i32* %sum31, align 4, !tbaa !21
  %sum29 = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 6, i32 1
  store i32 0, i32* %sum29, align 4, !tbaa !20
  call void (...)* @g_sync() #5
  br label %for.cond3.preheader

for.cond3.preheader:                              ; preds = %for.cond3.preheader, %entry
  %indvars.iv376 = phi i64 [ 0, %entry ], [ %indvars.iv.next377, %for.cond3.preheader ]
  %real = getelementptr inbounds %struct.su3_matrix* %call, i64 %indvars.iv376, i32 0, i64 0, i64 0, i32 0
  %indvars.iv.next377 = add nuw nsw i64 %indvars.iv376, 1
  %exitcond378 = icmp eq i64 %indvars.iv.next377, 4096
  %3 = bitcast double* %real to i8*
  call void @llvm.memset.p0i8.i64(i8* %3, i8 0, i64 144, i32 8, i1 false)
  br i1 %exitcond378, label %for.cond29.preheader, label %for.cond3.preheader

for.cond29.preheader:                             ; preds = %for.cond3.preheader
  %4 = load i32* @sites_on_node, align 4, !tbaa !10
  %cmp30352 = icmp sgt i32 %4, 0
  %5 = bitcast %struct.su3_matrix* %call to i8*
  br i1 %cmp30352, label %for.cond32.preheader.lr.ph, label %for.end203

for.cond32.preheader.lr.ph:                       ; preds = %for.cond29.preheader
  %filename = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 2
  %6 = load %struct._IO_FILE** @stdout, align 8, !tbaa !8
  %x81 = getelementptr inbounds %struct.anon.0* %msg, i64 0, i32 0
  %y83 = getelementptr inbounds %struct.anon.0* %msg, i64 0, i32 1
  %z85 = getelementptr inbounds %struct.anon.0* %msg, i64 0, i32 2
  %t87 = getelementptr inbounds %struct.anon.0* %msg, i64 0, i32 3
  %arraydecay101 = getelementptr inbounds %struct.anon.0* %msg, i64 0, i32 4, i64 0
  %7 = bitcast %struct.su3_matrix* %arraydecay101 to i8*
  br label %for.cond32.preheader

for.cond32.preheader:                             ; preds = %for.cond32.preheader.lr.ph, %for.end200
  %8 = phi i32 [ %4, %for.cond32.preheader.lr.ph ], [ %48, %for.end200 ]
  %buf_length.0355 = phi i32 [ 0, %for.cond32.preheader.lr.ph ], [ %buf_length.1.lcssa, %for.end200 ]
  %ksite.0353 = phi i32 [ 0, %for.cond32.preheader.lr.ph ], [ %add202, %for.end200 ]
  %9 = load i32* @number_of_nodes, align 4, !tbaa !10
  %cmp33347 = icmp sgt i32 %9, 0
  br i1 %cmp33347, label %for.cond35.preheader, label %for.end200

for.cond35.preheader:                             ; preds = %for.cond32.preheader, %for.inc198
  %10 = phi i32 [ %46, %for.inc198 ], [ %9, %for.cond32.preheader ]
  %11 = phi i32 [ %47, %for.inc198 ], [ %8, %for.cond32.preheader ]
  %buf_length.1350 = phi i32 [ %buf_length.2.lcssa, %for.inc198 ], [ %buf_length.0355, %for.cond32.preheader ]
  %destnode.0348 = phi i32 [ %inc199, %for.inc198 ], [ 0, %for.cond32.preheader ]
  %cmp36342 = icmp slt i32 %ksite.0353, %11
  br i1 %cmp36342, label %for.body38, label %for.inc198

for.body38:                                       ; preds = %for.cond35.preheader, %for.inc195
  %12 = phi i32 [ %44, %for.inc195 ], [ %11, %for.cond35.preheader ]
  %buf_length.2346 = phi i32 [ %buf_length.3, %for.inc195 ], [ %buf_length.1350, %for.cond35.preheader ]
  %isite.0344 = phi i32 [ %inc196, %for.inc195 ], [ %ksite.0353, %for.cond35.preheader ]
  %mul = mul nsw i32 %12, %destnode.0348
  %add39 = add nsw i32 %mul, %isite.0344
  %13 = load i32* @nx, align 4, !tbaa !10
  %rem40 = srem i32 %add39, %13
  %div = sdiv i32 %add39, %13
  %14 = load i32* @ny, align 4, !tbaa !10
  %rem41 = srem i32 %div, %14
  %div42 = sdiv i32 %div, %14
  %15 = load i32* @nz, align 4, !tbaa !10
  %rem43 = srem i32 %div42, %15
  %div44 = sdiv i32 %div42, %15
  %16 = load i32* @nt, align 4, !tbaa !10
  %rem45 = srem i32 %div44, %16
  %call46 = call i32 @node_number(i32 %rem40, i32 %rem41, i32 %rem43, i32 %rem45) #5
  %17 = load i32* @this_node, align 4, !tbaa !10
  %cmp47 = icmp ne i32 %17, %call46
  %cmp48 = icmp eq i32 %destnode.0348, %call46
  %or.cond327 = or i1 %cmp47, %cmp48
  br i1 %or.cond327, label %if.else, label %if.then49

if.then49:                                        ; preds = %for.body38
  %conv = trunc i32 %rem40 to i16
  store i16 %conv, i16* %x81, align 8, !tbaa !47
  %conv51 = trunc i32 %rem41 to i16
  store i16 %conv51, i16* %y83, align 2, !tbaa !49
  %conv53 = trunc i32 %rem43 to i16
  store i16 %conv53, i16* %z85, align 4, !tbaa !50
  %conv55 = trunc i32 %rem45 to i16
  store i16 %conv55, i16* %t87, align 2, !tbaa !51
  %call57 = call i32 @node_index(i32 %rem40, i32 %rem41, i32 %rem43, i32 %rem45) #5
  %idxprom59 = sext i32 %call57 to i64
  %18 = load %struct.site** @lattice, align 8, !tbaa !8
  %arraydecay62 = getelementptr inbounds %struct.site* %18, i64 %idxprom59, i32 8, i64 0
  %19 = bitcast %struct.su3_matrix* %arraydecay62 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %7, i8* %19, i64 576, i32 1, i1 false)
  call void @send_field(i8* %0, i32 584, i32 %destnode.0348) #5
  br label %for.inc195

if.else:                                          ; preds = %for.body38
  %cmp63 = icmp eq i32 %17, %destnode.0348
  br i1 %cmp63, label %if.then65, label %for.inc195

if.then65:                                        ; preds = %if.else
  br i1 %cmp48, label %if.then68, label %if.else80

if.then68:                                        ; preds = %if.then65
  %call69 = call i32 @node_index(i32 %rem40, i32 %rem41, i32 %rem43, i32 %rem45) #5
  %mul70 = shl nsw i32 %buf_length.2346, 2
  %idxprom71 = sext i32 %mul70 to i64
  %arrayidx72 = getelementptr inbounds %struct.su3_matrix* %call, i64 %idxprom71
  %20 = bitcast %struct.su3_matrix* %arrayidx72 to i8*
  %idxprom73 = sext i32 %call69 to i64
  %21 = load %struct.site** @lattice, align 8, !tbaa !8
  %arraydecay76 = getelementptr inbounds %struct.site* %21, i64 %idxprom73, i32 8, i64 0
  %22 = bitcast %struct.su3_matrix* %arraydecay76 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %22, i64 576, i32 1, i1 false)
  br label %if.end105

if.else80:                                        ; preds = %if.then65
  call void @get_field(i8* %0, i32 584) #5
  %23 = bitcast %struct.anon.0* %msg to i64*
  %24 = load i64* %23, align 8
  %25 = trunc i64 %24 to i32
  %26 = trunc i64 %24 to i32
  %sext = shl i32 %26, 16
  %conv82 = ashr exact i32 %sext, 16
  %27 = load i32* @nx, align 4, !tbaa !10
  %conv84 = ashr i32 %25, 16
  %28 = load i32* @ny, align 4, !tbaa !10
  %29 = lshr i64 %24, 32
  %sext383384 = shl nuw nsw i64 %29, 16
  %sext383 = trunc i64 %sext383384 to i32
  %conv86 = ashr exact i32 %sext383, 16
  %30 = load i32* @nz, align 4, !tbaa !10
  %31 = lshr i64 %24, 48
  %sext385386 = shl nuw nsw i64 %31, 16
  %sext385 = trunc i64 %sext385386 to i32
  %conv88 = ashr exact i32 %sext385, 16
  %mul89 = mul nsw i32 %conv88, %30
  %add90 = add nsw i32 %mul89, %conv86
  %mul91 = mul nsw i32 %add90, %28
  %add92 = add nsw i32 %mul91, %conv84
  %mul93 = mul nsw i32 %add92, %27
  %add94 = add nsw i32 %mul93, %conv82
  %32 = load i32* @sites_on_node, align 4, !tbaa !10
  %rem95 = srem i32 %add94, %32
  %rem96 = srem i32 %rem95, 4096
  %mul97 = shl nsw i32 %rem96, 2
  %idxprom98 = sext i32 %mul97 to i64
  %arrayidx99 = getelementptr inbounds %struct.su3_matrix* %call, i64 %idxprom98
  %33 = bitcast %struct.su3_matrix* %arrayidx99 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %33, i8* %7, i64 576, i32 1, i1 false)
  br label %if.end105

if.end105:                                        ; preds = %if.else80, %if.then68
  %add39.sink = phi i32 [ %add39, %if.then68 ], [ %add94, %if.else80 ]
  %where_in_buf.0 = phi i32 [ %buf_length.2346, %if.then68 ], [ %rem96, %if.else80 ]
  %mul78 = mul i32 %add39.sink, 144
  %rem106 = srem i32 %mul78, 29
  %rem107 = srem i32 %mul78, 31
  %mul108 = shl nsw i32 %where_in_buf.0, 2
  %idxprom109 = sext i32 %mul108 to i64
  %arrayidx110 = getelementptr inbounds %struct.su3_matrix* %call, i64 %idxprom109
  %34 = bitcast %struct.su3_matrix* %arrayidx110 to i32*
  %.pre = load i32* %sum29, align 4, !tbaa !20
  %.pre379 = load i32* %sum31, align 4, !tbaa !21
  br label %for.body114

for.body114:                                      ; preds = %for.body114, %if.end105
  %35 = phi i32 [ %.pre379, %if.end105 ], [ %xor123, %for.body114 ]
  %36 = phi i32 [ %.pre, %if.end105 ], [ %xor, %for.body114 ]
  %val.0338 = phi i32* [ %34, %if.end105 ], [ %incdec.ptr, %for.body114 ]
  %rank29.1337 = phi i32 [ %rem106, %if.end105 ], [ %.inc124, %for.body114 ]
  %rank31.1336 = phi i32 [ %rem107, %if.end105 ], [ %.inc129, %for.body114 ]
  %k.1335 = phi i32 [ 0, %if.end105 ], [ %inc135, %for.body114 ]
  %37 = load i32* %val.0338, align 4, !tbaa !10
  %shl = shl i32 %37, %rank29.1337
  %sub = sub nsw i32 32, %rank29.1337
  %shr = lshr i32 %37, %sub
  %or = or i32 %shl, %shr
  %xor = xor i32 %or, %36
  store i32 %xor, i32* %sum29, align 4, !tbaa !20
  %38 = load i32* %val.0338, align 4, !tbaa !10
  %shl117 = shl i32 %38, %rank31.1336
  %sub118 = sub nsw i32 32, %rank31.1336
  %shr119 = lshr i32 %38, %sub118
  %or120 = or i32 %shl117, %shr119
  %xor123 = xor i32 %or120, %35
  store i32 %xor123, i32* %sum31, align 4, !tbaa !21
  %inc124 = add nsw i32 %rank29.1337, 1
  %cmp125 = icmp sgt i32 %rank29.1337, 27
  %.inc124 = select i1 %cmp125, i32 0, i32 %inc124
  %inc129 = add nsw i32 %rank31.1336, 1
  %cmp130 = icmp sgt i32 %rank31.1336, 29
  %.inc129 = select i1 %cmp130, i32 0, i32 %inc129
  %inc135 = add nsw i32 %k.1335, 1
  %incdec.ptr = getelementptr inbounds i32* %val.0338, i64 1
  %exitcond = icmp eq i32 %inc135, 144
  br i1 %exitcond, label %for.end136, label %for.body114

for.end136:                                       ; preds = %for.body114
  %inc137 = add nsw i32 %buf_length.2346, 1
  %cmp138 = icmp eq i32 %inc137, 4096
  br i1 %cmp138, label %if.then143, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.end136
  %39 = load i32* @sites_on_node, align 4, !tbaa !10
  %sub140 = add nsw i32 %39, -1
  %cmp141 = icmp eq i32 %isite.0344, %sub140
  br i1 %cmp141, label %if.then143, label %for.inc195

if.then143:                                       ; preds = %lor.lhs.false, %for.end136
  %conv144 = sext i32 %inc137 to i64
  %call145 = call i64 @g_write(i8* %5, i64 576, i64 %conv144, %struct._IO_FILE* %2) #5
  %conv146 = trunc i64 %call145 to i32
  %cmp147 = icmp eq i32 %conv146, %inc137
  br i1 %cmp147, label %for.cond159.preheader, label %if.then149

if.then149:                                       ; preds = %if.then143
  %40 = load i32* @this_node, align 4, !tbaa !10
  %call151 = call i32* @__errno_location() #7
  %41 = load i32* %call151, align 4, !tbaa !10
  %42 = load i8** %filename, align 8, !tbaa !19
  %call152 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([56 x i8]* @.str119, i64 0, i64 0), i8* %1, i32 %40, i32 %41, i8* %42) #5
  %call153 = call i32 @fflush(%struct._IO_FILE* %6) #5
  call void @terminate(i32 1) #5
  br label %for.cond159.preheader

for.cond159.preheader:                            ; preds = %if.then149, %if.then143, %for.cond159.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.cond159.preheader ], [ 0, %if.then143 ], [ 0, %if.then149 ]
  %real182 = getelementptr inbounds %struct.su3_matrix* %call, i64 %indvars.iv, i32 0, i64 0, i64 0, i32 0
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond365 = icmp eq i64 %indvars.iv.next, 4096
  %43 = bitcast double* %real182 to i8*
  call void @llvm.memset.p0i8.i64(i8* %43, i8 0, i64 144, i32 8, i1 false)
  br i1 %exitcond365, label %for.inc195, label %for.cond159.preheader

for.inc195:                                       ; preds = %for.cond159.preheader, %if.then49, %lor.lhs.false, %if.else
  %buf_length.3 = phi i32 [ %buf_length.2346, %if.then49 ], [ %inc137, %lor.lhs.false ], [ %buf_length.2346, %if.else ], [ 0, %for.cond159.preheader ]
  %inc196 = add nsw i32 %isite.0344, 1
  %44 = load i32* @sites_on_node, align 4, !tbaa !10
  %cmp36 = icmp slt i32 %inc196, %44
  %45 = or i32 %ksite.0353, 4095
  %cmp37 = icmp slt i32 %isite.0344, %45
  %or.cond = and i1 %cmp36, %cmp37
  br i1 %or.cond, label %for.body38, label %for.cond35.for.inc198_crit_edge

for.cond35.for.inc198_crit_edge:                  ; preds = %for.inc195
  %.pre380 = load i32* @number_of_nodes, align 4, !tbaa !10
  br label %for.inc198

for.inc198:                                       ; preds = %for.cond35.for.inc198_crit_edge, %for.cond35.preheader
  %46 = phi i32 [ %.pre380, %for.cond35.for.inc198_crit_edge ], [ %10, %for.cond35.preheader ]
  %47 = phi i32 [ %44, %for.cond35.for.inc198_crit_edge ], [ %11, %for.cond35.preheader ]
  %buf_length.2.lcssa = phi i32 [ %buf_length.3, %for.cond35.for.inc198_crit_edge ], [ %buf_length.1350, %for.cond35.preheader ]
  %inc199 = add nsw i32 %destnode.0348, 1
  %cmp33 = icmp slt i32 %inc199, %46
  br i1 %cmp33, label %for.cond35.preheader, label %for.end200

for.end200:                                       ; preds = %for.inc198, %for.cond32.preheader
  %buf_length.1.lcssa = phi i32 [ %buf_length.0355, %for.cond32.preheader ], [ %buf_length.2.lcssa, %for.inc198 ]
  call void (...)* @g_sync() #5
  %add202 = add nsw i32 %ksite.0353, 4096
  %48 = load i32* @sites_on_node, align 4, !tbaa !10
  %cmp30 = icmp slt i32 %add202, %48
  br i1 %cmp30, label %for.cond32.preheader, label %for.end203

for.end203:                                       ; preds = %for.end200, %for.cond29.preheader
  call void @free(i8* %5)
  call void @g_xor32(i32* %sum29) #5
  call void @g_xor32(i32* %sum31) #5
  %49 = load i32* @this_node, align 4, !tbaa !10
  %cmp208 = icmp eq i32 %49, 0
  br i1 %cmp208, label %if.then210, label %if.end225

if.then210:                                       ; preds = %for.end203
  %50 = load i64* %checksum_offset, align 8, !tbaa !46
  %call211 = call i32 @g_seek(%struct._IO_FILE* %2, i64 %50, i32 0) #5
  %cmp212 = icmp slt i32 %call211, 0
  br i1 %cmp212, label %if.then214, label %if.end220

if.then214:                                       ; preds = %if.then210
  %51 = load i32* @this_node, align 4, !tbaa !10
  %call216 = call i32* @__errno_location() #7
  %52 = load i32* %call216, align 4, !tbaa !10
  %filename217 = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 2
  %53 = load i8** %filename217, align 8, !tbaa !19
  %call218 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([61 x i8]* @.str120, i64 0, i64 0), i8* %1, i32 %51, i64 %50, i32 %52, i8* %53) #5
  %54 = load %struct._IO_FILE** @stdout, align 8, !tbaa !8
  %call219 = call i32 @fflush(%struct._IO_FILE* %54) #5
  call void @terminate(i32 1) #5
  br label %if.end220

if.end220:                                        ; preds = %if.then214, %if.then210
  %55 = getelementptr inbounds [15 x i8]* %myname.i, i64 0, i64 0
  call void @llvm.lifetime.start(i64 15, i8* %55) #5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %55, i8* getelementptr inbounds ([15 x i8]* @write_checksum.myname, i64 0, i64 0), i64 15, i32 1, i1 false) #5
  %56 = load %struct._IO_FILE** %fp1, align 8, !tbaa !24
  %57 = bitcast i32* %sum29 to i8*
  %call.i.i = call i64 @g_write(i8* %57, i64 4, i64 1, %struct._IO_FILE* %56) #5
  %cmp.i.i = icmp eq i64 %call.i.i, 1
  br i1 %cmp.i.i, label %pswrite_data.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.end220
  %58 = load i32* @this_node, align 4, !tbaa !10
  %call1.i.i = call i32* @__errno_location() #7
  %59 = load i32* %call1.i.i, align 4, !tbaa !10
  %call2.i.i = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([39 x i8]* @.str8, i64 0, i64 0), i8* %55, i32 %58, i8* getelementptr inbounds ([9 x i8]* @.str40, i64 0, i64 0), i32 %59) #5
  %60 = load %struct._IO_FILE** @stdout, align 8, !tbaa !8
  %call3.i.i = call i32 @fflush(%struct._IO_FILE* %60) #5
  call void @terminate(i32 1) #5
  br label %pswrite_data.exit

pswrite_data.exit:                                ; preds = %if.end220, %if.then.i.i
  %61 = load %struct._IO_FILE** %fp1, align 8, !tbaa !24
  %62 = bitcast i32* %sum31 to i8*
  %call.i.i328 = call i64 @g_write(i8* %62, i64 4, i64 1, %struct._IO_FILE* %61) #5
  %cmp.i.i329 = icmp eq i64 %call.i.i328, 1
  br i1 %cmp.i.i329, label %pswrite_data.exit334, label %if.then.i.i333

if.then.i.i333:                                   ; preds = %pswrite_data.exit
  %63 = load i32* @this_node, align 4, !tbaa !10
  %call1.i.i330 = call i32* @__errno_location() #7
  %64 = load i32* %call1.i.i330, align 4, !tbaa !10
  %call2.i.i331 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([39 x i8]* @.str8, i64 0, i64 0), i8* %55, i32 %63, i8* getelementptr inbounds ([9 x i8]* @.str40, i64 0, i64 0), i32 %64) #5
  %65 = load %struct._IO_FILE** @stdout, align 8, !tbaa !8
  %call3.i.i332 = call i32 @fflush(%struct._IO_FILE* %65) #5
  call void @terminate(i32 1) #5
  br label %pswrite_data.exit334

pswrite_data.exit334:                             ; preds = %pswrite_data.exit, %if.then.i.i333
  %66 = load i32* %sum29, align 4, !tbaa !20
  %67 = load i32* %sum31, align 4, !tbaa !21
  %call.i = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([17 x i8]* @.str43, i64 0, i64 0), i32 %66, i32 %67) #5
  call void @llvm.lifetime.end(i64 15, i8* %55) #5
  %filename221 = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 2
  %68 = load i8** %filename221, align 8, !tbaa !19
  %call222 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([57 x i8]* @.str121, i64 0, i64 0), i8* %68) #5
  %header = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 1
  %69 = load %struct.gauge_header** %header, align 8, !tbaa !16
  %arraydecay223 = getelementptr inbounds %struct.gauge_header* %69, i64 0, i32 1, i64 0
  %call224 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([15 x i8]* @.str49, i64 0, i64 0), i8* %arraydecay223) #5
  br label %if.end225

if.end225:                                        ; preds = %pswrite_data.exit334, %for.end203
  call void @llvm.lifetime.end(i64 584, i8* %0) #5
  ret void
}

; Function Attrs: nounwind uwtable
define void @w_checkpoint(%struct.gauge_file* %gf) #0 {
entry:
  %myname.i = alloca [15 x i8], align 1
  %checksum_offset = alloca i64, align 8
  %myname = alloca [13 x i8], align 1
  %0 = getelementptr inbounds [13 x i8]* %myname, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* getelementptr inbounds ([13 x i8]* @w_checkpoint.myname, i64 0, i64 0), i64 13, i32 1, i1 false)
  %fp1 = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 0
  %1 = load %struct._IO_FILE** %fp1, align 8, !tbaa !24
  %call = call %struct.su3_matrix* @w_parallel_setup(%struct.gauge_file* %gf, i64* %checksum_offset)
  %sum31 = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 6, i32 0
  store i32 0, i32* %sum31, align 4, !tbaa !21
  %sum29 = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 6, i32 1
  store i32 0, i32* %sum29, align 4, !tbaa !20
  %2 = load i32* @sites_on_node, align 4, !tbaa !10
  %conv = sext i32 %2 to i64
  %mul = mul i64 %conv, 144
  %3 = load i32* @this_node, align 4, !tbaa !10
  %conv3 = sext i32 %3 to i64
  %mul4 = mul i64 %mul, %conv3
  %cmp132 = icmp sgt i32 %2, 0
  br i1 %cmp132, label %for.body.lr.ph, label %entry.for.end63_crit_edge

entry.for.end63_crit_edge:                        ; preds = %entry
  %.pre140 = bitcast %struct.su3_matrix* %call to i8*
  br label %for.end63

for.body.lr.ph:                                   ; preds = %entry
  %rem10 = urem i64 %mul4, 31
  %rem = urem i64 %mul4, 29
  %conv11 = trunc i64 %rem10 to i32
  %conv5 = trunc i64 %rem to i32
  %4 = load %struct._IO_FILE** @stdout, align 8, !tbaa !8
  %5 = bitcast %struct.su3_matrix* %call to i8*
  %filename = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 2
  br label %for.body

for.body:                                         ; preds = %for.inc60.for.body_crit_edge, %for.body.lr.ph
  %.pre137 = phi i32 [ 0, %for.body.lr.ph ], [ %.pre137.pre, %for.inc60.for.body_crit_edge ]
  %.pre = phi i32 [ 0, %for.body.lr.ph ], [ %.pre.pre, %for.inc60.for.body_crit_edge ]
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.inc60.for.body_crit_edge ]
  %buf_length.0135 = phi i32 [ 0, %for.body.lr.ph ], [ %buf_length.1, %for.inc60.for.body_crit_edge ]
  %rank31.0134 = phi i32 [ %conv11, %for.body.lr.ph ], [ %.inc34, %for.inc60.for.body_crit_edge ]
  %rank29.0133 = phi i32 [ %conv5, %for.body.lr.ph ], [ %.inc, %for.inc60.for.body_crit_edge ]
  %mul13 = shl nsw i32 %buf_length.0135, 2
  %idxprom = sext i32 %mul13 to i64
  %arrayidx = getelementptr inbounds %struct.su3_matrix* %call, i64 %idxprom
  %6 = bitcast %struct.su3_matrix* %arrayidx to i8*
  %7 = load %struct.site** @lattice, align 8, !tbaa !8
  %arraydecay = getelementptr inbounds %struct.site* %7, i64 %indvars.iv, i32 8, i64 0
  %8 = bitcast %struct.su3_matrix* %arraydecay to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6, i8* %8, i64 576, i32 1, i1 false)
  %9 = bitcast %struct.su3_matrix* %arrayidx to i32*
  br label %for.body22

for.body22:                                       ; preds = %for.body22, %for.body
  %10 = phi i32 [ %.pre137, %for.body ], [ %xor31, %for.body22 ]
  %11 = phi i32 [ %.pre, %for.body ], [ %xor, %for.body22 ]
  %rank31.1131 = phi i32 [ %rank31.0134, %for.body ], [ %.inc34, %for.body22 ]
  %rank29.1130 = phi i32 [ %rank29.0133, %for.body ], [ %.inc, %for.body22 ]
  %k.0129 = phi i32 [ 0, %for.body ], [ %inc39, %for.body22 ]
  %val.0128 = phi i32* [ %9, %for.body ], [ %incdec.ptr, %for.body22 ]
  %12 = load i32* %val.0128, align 4, !tbaa !10
  %shl = shl i32 %12, %rank29.1130
  %sub = sub nsw i32 32, %rank29.1130
  %shr = lshr i32 %12, %sub
  %or = or i32 %shl, %shr
  %xor = xor i32 %or, %11
  store i32 %xor, i32* %sum29, align 4, !tbaa !20
  %13 = load i32* %val.0128, align 4, !tbaa !10
  %shl25 = shl i32 %13, %rank31.1131
  %sub26 = sub nsw i32 32, %rank31.1131
  %shr27 = lshr i32 %13, %sub26
  %or28 = or i32 %shl25, %shr27
  %xor31 = xor i32 %or28, %10
  store i32 %xor31, i32* %sum31, align 4, !tbaa !21
  %inc = add nsw i32 %rank29.1130, 1
  %cmp32 = icmp sgt i32 %rank29.1130, 27
  %.inc = select i1 %cmp32, i32 0, i32 %inc
  %inc34 = add nsw i32 %rank31.1131, 1
  %cmp35 = icmp sgt i32 %rank31.1131, 29
  %.inc34 = select i1 %cmp35, i32 0, i32 %inc34
  %inc39 = add nsw i32 %k.0129, 1
  %incdec.ptr = getelementptr inbounds i32* %val.0128, i64 1
  %exitcond = icmp eq i32 %inc39, 144
  br i1 %exitcond, label %for.end, label %for.body22

for.end:                                          ; preds = %for.body22
  %inc40 = add nsw i32 %buf_length.0135, 1
  %cmp41 = icmp eq i32 %inc40, 4096
  br i1 %cmp41, label %if.then46, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.end
  %14 = load i32* @sites_on_node, align 4, !tbaa !10
  %sub43 = add nsw i32 %14, -1
  %15 = trunc i64 %indvars.iv to i32
  %cmp44 = icmp eq i32 %15, %sub43
  br i1 %cmp44, label %if.then46, label %for.inc60

if.then46:                                        ; preds = %lor.lhs.false, %for.end
  %call47 = call i32 @fflush(%struct._IO_FILE* %4) #5
  %conv48 = sext i32 %inc40 to i64
  %call49 = call i64 @g_write(i8* %5, i64 576, i64 %conv48, %struct._IO_FILE* %1) #5
  %conv50 = trunc i64 %call49 to i32
  %cmp51 = icmp eq i32 %conv50, %inc40
  br i1 %cmp51, label %for.inc60, label %if.then53

if.then53:                                        ; preds = %if.then46
  %16 = load i32* @this_node, align 4, !tbaa !10
  %call55 = call i32* @__errno_location() #7
  %17 = load i32* %call55, align 4, !tbaa !10
  %18 = load i8** %filename, align 8, !tbaa !19
  %call56 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([56 x i8]* @.str119, i64 0, i64 0), i8* %0, i32 %16, i32 %17, i8* %18) #5
  %call57 = call i32 @fflush(%struct._IO_FILE* %4) #5
  call void @terminate(i32 1) #5
  br label %for.inc60

for.inc60:                                        ; preds = %if.then53, %if.then46, %lor.lhs.false
  %buf_length.1 = phi i32 [ %inc40, %lor.lhs.false ], [ 0, %if.then46 ], [ 0, %if.then53 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %19 = load i32* @sites_on_node, align 4, !tbaa !10
  %20 = trunc i64 %indvars.iv.next to i32
  %cmp = icmp slt i32 %20, %19
  br i1 %cmp, label %for.inc60.for.body_crit_edge, label %for.end63

for.inc60.for.body_crit_edge:                     ; preds = %for.inc60
  %.pre.pre = load i32* %sum29, align 4, !tbaa !20
  %.pre137.pre = load i32* %sum31, align 4, !tbaa !21
  br label %for.body

for.end63:                                        ; preds = %for.inc60, %entry.for.end63_crit_edge
  %.pre-phi = phi i8* [ %.pre140, %entry.for.end63_crit_edge ], [ %5, %for.inc60 ]
  call void @free(i8* %.pre-phi)
  call void @g_xor32(i32* %sum29) #5
  call void @g_xor32(i32* %sum31) #5
  %21 = load i32* @this_node, align 4, !tbaa !10
  %cmp68 = icmp eq i32 %21, 0
  br i1 %cmp68, label %if.then70, label %if.end85

if.then70:                                        ; preds = %for.end63
  %22 = load i64* %checksum_offset, align 8, !tbaa !46
  %call71 = call i32 @g_seek(%struct._IO_FILE* %1, i64 %22, i32 0) #5
  %cmp72 = icmp slt i32 %call71, 0
  br i1 %cmp72, label %if.then74, label %if.end80

if.then74:                                        ; preds = %if.then70
  %23 = load i32* @this_node, align 4, !tbaa !10
  %call76 = call i32* @__errno_location() #7
  %24 = load i32* %call76, align 4, !tbaa !10
  %filename77 = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 2
  %25 = load i8** %filename77, align 8, !tbaa !19
  %call78 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([61 x i8]* @.str120, i64 0, i64 0), i8* %0, i32 %23, i64 %22, i32 %24, i8* %25) #5
  %26 = load %struct._IO_FILE** @stdout, align 8, !tbaa !8
  %call79 = call i32 @fflush(%struct._IO_FILE* %26) #5
  call void @terminate(i32 1) #5
  br label %if.end80

if.end80:                                         ; preds = %if.then74, %if.then70
  %27 = getelementptr inbounds [15 x i8]* %myname.i, i64 0, i64 0
  call void @llvm.lifetime.start(i64 15, i8* %27) #5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %27, i8* getelementptr inbounds ([15 x i8]* @write_checksum.myname, i64 0, i64 0), i64 15, i32 1, i1 false) #5
  %28 = load %struct._IO_FILE** %fp1, align 8, !tbaa !24
  %29 = bitcast i32* %sum29 to i8*
  %call.i.i = call i64 @g_write(i8* %29, i64 4, i64 1, %struct._IO_FILE* %28) #5
  %cmp.i.i = icmp eq i64 %call.i.i, 1
  br i1 %cmp.i.i, label %pswrite_data.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.end80
  %30 = load i32* @this_node, align 4, !tbaa !10
  %call1.i.i = call i32* @__errno_location() #7
  %31 = load i32* %call1.i.i, align 4, !tbaa !10
  %call2.i.i = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([39 x i8]* @.str8, i64 0, i64 0), i8* %27, i32 %30, i8* getelementptr inbounds ([9 x i8]* @.str40, i64 0, i64 0), i32 %31) #5
  %32 = load %struct._IO_FILE** @stdout, align 8, !tbaa !8
  %call3.i.i = call i32 @fflush(%struct._IO_FILE* %32) #5
  call void @terminate(i32 1) #5
  br label %pswrite_data.exit

pswrite_data.exit:                                ; preds = %if.end80, %if.then.i.i
  %33 = load %struct._IO_FILE** %fp1, align 8, !tbaa !24
  %34 = bitcast i32* %sum31 to i8*
  %call.i.i121 = call i64 @g_write(i8* %34, i64 4, i64 1, %struct._IO_FILE* %33) #5
  %cmp.i.i122 = icmp eq i64 %call.i.i121, 1
  br i1 %cmp.i.i122, label %pswrite_data.exit127, label %if.then.i.i126

if.then.i.i126:                                   ; preds = %pswrite_data.exit
  %35 = load i32* @this_node, align 4, !tbaa !10
  %call1.i.i123 = call i32* @__errno_location() #7
  %36 = load i32* %call1.i.i123, align 4, !tbaa !10
  %call2.i.i124 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([39 x i8]* @.str8, i64 0, i64 0), i8* %27, i32 %35, i8* getelementptr inbounds ([9 x i8]* @.str40, i64 0, i64 0), i32 %36) #5
  %37 = load %struct._IO_FILE** @stdout, align 8, !tbaa !8
  %call3.i.i125 = call i32 @fflush(%struct._IO_FILE* %37) #5
  call void @terminate(i32 1) #5
  br label %pswrite_data.exit127

pswrite_data.exit127:                             ; preds = %pswrite_data.exit, %if.then.i.i126
  %38 = load i32* %sum29, align 4, !tbaa !20
  %39 = load i32* %sum31, align 4, !tbaa !21
  %call.i = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([17 x i8]* @.str43, i64 0, i64 0), i32 %38, i32 %39) #5
  call void @llvm.lifetime.end(i64 15, i8* %27) #5
  %filename81 = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 2
  %40 = load i8** %filename81, align 8, !tbaa !19
  %call82 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([46 x i8]* @.str122, i64 0, i64 0), i8* %40) #5
  %header = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 1
  %41 = load %struct.gauge_header** %header, align 8, !tbaa !16
  %arraydecay83 = getelementptr inbounds %struct.gauge_header* %41, i64 0, i32 1, i64 0
  %call84 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([15 x i8]* @.str49, i64 0, i64 0), i8* %arraydecay83) #5
  br label %if.end85

if.end85:                                         ; preds = %pswrite_data.exit127, %for.end63
  ret void
}

; Function Attrs: nounwind uwtable
define void @w_parallel_f(%struct.gauge_file* nocapture %gf) #0 {
entry:
  tail call void (...)* @g_sync() #5
  %fp = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 0
  %0 = load %struct._IO_FILE** %fp, align 8, !tbaa !24
  %cmp = icmp eq %struct._IO_FILE* %0, null
  br i1 %cmp, label %if.end5, label %if.then

if.then:                                          ; preds = %entry
  %parallel = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 5
  %1 = load i32* %parallel, align 4, !tbaa !27
  %tobool = icmp eq i32 %1, 0
  br i1 %tobool, label %if.then1, label %if.end

if.then1:                                         ; preds = %if.then
  %puts = tail call i32 @puts(i8* getelementptr inbounds ([56 x i8]* @str192, i64 0, i64 0))
  %.pre = load %struct._IO_FILE** %fp, align 8, !tbaa !24
  br label %if.end

if.end:                                           ; preds = %if.then, %if.then1
  %2 = phi %struct._IO_FILE* [ %0, %if.then ], [ %.pre, %if.then1 ]
  %call3 = tail call i32 @g_close(%struct._IO_FILE* %2) #5
  store %struct._IO_FILE* null, %struct._IO_FILE** %fp, align 8, !tbaa !24
  br label %if.end5

if.end5:                                          ; preds = %entry, %if.end
  %3 = load i32* @this_node, align 4, !tbaa !10
  %cmp6 = icmp eq i32 %3, 0
  br i1 %cmp6, label %if.then7, label %if.end8

if.then7:                                         ; preds = %if.end5
  tail call void @write_gauge_info_file(%struct.gauge_file* %gf)
  br label %if.end8

if.end8:                                          ; preds = %if.then7, %if.end5
  ret void
}

declare i32 @g_close(%struct._IO_FILE*) #3

; Function Attrs: nounwind uwtable
define noalias %struct.gauge_file* @r_parallel_i(i8* %filename) #0 {
entry:
  %byterevflag = alloca i32, align 4
  %call = call %struct.gauge_file* @setup_input_gauge_file(i8* %filename)
  %header = getelementptr inbounds %struct.gauge_file* %call, i64 0, i32 1
  %0 = load %struct.gauge_header** %header, align 8, !tbaa !16
  %parallel = getelementptr inbounds %struct.gauge_file* %call, i64 0, i32 5
  store i32 1, i32* %parallel, align 4, !tbaa !27
  %call1 = call %struct._IO_FILE* @g_open(i8* %filename, i8* getelementptr inbounds ([3 x i8]* @.str99, i64 0, i64 0)) #5
  %cmp = icmp eq %struct._IO_FILE* %call1, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i32* @this_node, align 4, !tbaa !10
  %call2 = call i32* @__errno_location() #7
  %2 = load i32* %call2, align 4, !tbaa !10
  %call3 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([52 x i8]* @.str124, i64 0, i64 0), i32 %1, i8* %filename, i32 %2) #5
  %3 = load %struct._IO_FILE** @stdout, align 8, !tbaa !8
  %call4 = call i32 @fflush(%struct._IO_FILE* %3) #5
  call void @terminate(i32 1) #5
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %fp5 = getelementptr inbounds %struct.gauge_file* %call, i64 0, i32 0
  store %struct._IO_FILE* %call1, %struct._IO_FILE** %fp5, align 8, !tbaa !24
  %4 = load i32* @this_node, align 4, !tbaa !10
  %cmp6 = icmp eq i32 %4, 0
  br i1 %cmp6, label %if.then7, label %if.end9

if.then7:                                         ; preds = %if.end
  %call8 = call i32 @read_gauge_hdr(%struct.gauge_file* %call, i32 1)
  store i32 %call8, i32* %byterevflag, align 4, !tbaa !10
  br label %if.end9

if.end9:                                          ; preds = %if.then7, %if.end
  %5 = bitcast i32* %byterevflag to i8*
  call void @broadcast_bytes(i8* %5, i32 4) #5
  %6 = load i32* %byterevflag, align 4, !tbaa !10
  %byterevflag10 = getelementptr inbounds %struct.gauge_file* %call, i64 0, i32 3
  store i32 %6, i32* %byterevflag10, align 4, !tbaa !25
  %7 = bitcast %struct.gauge_header* %0 to i8*
  call void @broadcast_bytes(i8* %7, i32 92) #5
  call void @read_site_list(i32 1, %struct.gauge_file* %call)
  ret %struct.gauge_file* %call
}

; Function Attrs: nounwind uwtable
define void @r_parallel(%struct.gauge_file* %gf) #0 {
entry:
  %msg = alloca %struct.anon.1, align 8
  %test_gc = alloca %struct.gauge_check, align 4
  %myname = alloca [11 x i8], align 1
  %0 = bitcast %struct.anon.1* %msg to i8*
  call void @llvm.lifetime.start(i64 584, i8* %0) #5
  %1 = getelementptr inbounds [11 x i8]* %myname, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* getelementptr inbounds ([11 x i8]* @r_parallel.myname, i64 0, i64 0), i64 11, i32 1, i1 false)
  %fp1 = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 0
  %2 = load %struct._IO_FILE** %fp1, align 8, !tbaa !24
  %header = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 1
  %3 = load %struct.gauge_header** %header, align 8, !tbaa !16
  %filename2 = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 2
  %4 = load i8** %filename2, align 8, !tbaa !19
  %byterevflag3 = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 3
  %parallel = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 5
  %5 = load i32* %parallel, align 4, !tbaa !27
  %tobool = icmp eq i32 %5, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([48 x i8]* @.str125, i64 0, i64 0), i8* %1) #5
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %call4 = call i8* @calloc(i64 16384, i64 144) #5
  %6 = bitcast i8* %call4 to %struct.su3_matrix*
  %cmp = icmp eq i8* %call4, null
  br i1 %cmp, label %if.then5, label %if.end9

if.then5:                                         ; preds = %if.end
  %7 = load i32* @this_node, align 4, !tbaa !10
  %call7 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([31 x i8]* @.str102, i64 0, i64 0), i8* %1, i32 %7) #5
  %8 = load %struct._IO_FILE** @stdout, align 8, !tbaa !8
  %call8 = call i32 @fflush(%struct._IO_FILE* %8) #5
  call void @terminate(i32 1) #5
  br label %if.end9

if.end9:                                          ; preds = %if.then5, %if.end
  %9 = load i32* @sites_on_node, align 4, !tbaa !10
  %mul = shl nsw i32 %9, 2
  %conv = sext i32 %mul to i64
  %mul10 = mul i64 %conv, 144
  %magic_number = getelementptr inbounds %struct.gauge_header* %3, i64 0, i32 0
  %10 = load i32* %magic_number, align 4, !tbaa !22
  switch i32 %10, label %if.else18 [
    i32 20103, label %if.end20
    i32 53546, label %if.then17
  ]

if.then17:                                        ; preds = %if.end9
  br label %if.end20

if.else18:                                        ; preds = %if.end9
  br label %if.end20

if.end20:                                         ; preds = %if.end9, %if.then17, %if.else18
  %gauge_check_size.0 = phi i64 [ 4, %if.then17 ], [ 0, %if.else18 ], [ 8, %if.end9 ]
  %11 = load %struct.gauge_header** %header, align 8, !tbaa !16
  %order = getelementptr inbounds %struct.gauge_header* %11, i64 0, i32 4
  %12 = load i32* %order, align 4, !tbaa !23
  %cmp22 = icmp eq i32 %12, 0
  br i1 %cmp22, label %if.end28, label %if.else25

if.else25:                                        ; preds = %if.end20
  %13 = load i32* @volume, align 4, !tbaa !10
  %conv26 = sext i32 %13 to i64
  %mul27 = shl nsw i64 %conv26, 2
  br label %if.end28

if.end28:                                         ; preds = %if.end20, %if.else25
  %coord_list_size.0 = phi i64 [ %mul27, %if.else25 ], [ 0, %if.end20 ]
  %header_bytes = getelementptr inbounds %struct.gauge_header* %11, i64 0, i32 3
  %14 = load i32* %header_bytes, align 4, !tbaa !14
  %conv30 = sext i32 %14 to i64
  %add = add nsw i64 %conv30, %coord_list_size.0
  %add31 = add nsw i64 %add, %gauge_check_size.0
  %15 = load i32* @this_node, align 4, !tbaa !10
  %conv32 = sext i32 %15 to i64
  %mul33 = mul nsw i64 %mul10, %conv32
  %add34 = add nsw i64 %add31, %mul33
  %call35 = call i32 @g_seek(%struct._IO_FILE* %2, i64 %add34, i32 0) #5
  %cmp36 = icmp slt i32 %call35, 0
  br i1 %cmp36, label %if.then38, label %if.end43

if.then38:                                        ; preds = %if.end28
  %16 = load i32* @this_node, align 4, !tbaa !10
  %call40 = call i32* @__errno_location() #7
  %17 = load i32* %call40, align 4, !tbaa !10
  %call41 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([48 x i8]* @.str117, i64 0, i64 0), i8* %1, i32 %16, i64 %add34, i32 %17, i8* %4) #5
  %18 = load %struct._IO_FILE** @stdout, align 8, !tbaa !8
  %call42 = call i32 @fflush(%struct._IO_FILE* %18) #5
  call void @terminate(i32 1) #5
  br label %if.end43

if.end43:                                         ; preds = %if.then38, %if.end28
  %sum29 = getelementptr inbounds %struct.gauge_check* %test_gc, i64 0, i32 1
  store i32 0, i32* %sum29, align 4, !tbaa !28
  %sum31 = getelementptr inbounds %struct.gauge_check* %test_gc, i64 0, i32 0
  store i32 0, i32* %sum31, align 4, !tbaa !29
  %19 = load i32* @sites_on_node, align 4, !tbaa !10
  %conv44 = sext i32 %19 to i64
  %mul45 = mul i64 %conv44, 144
  %20 = load i32* @this_node, align 4, !tbaa !10
  %conv46 = sext i32 %20 to i64
  %mul47 = mul i64 %mul45, %conv46
  call void (...)* @g_sync() #5
  %21 = load i32* @sites_on_node, align 4, !tbaa !10
  %cmp55342 = icmp sgt i32 %21, 0
  br i1 %cmp55342, label %for.cond57.preheader.lr.ph, label %for.end218

for.cond57.preheader.lr.ph:                       ; preds = %if.end43
  %rem53 = urem i64 %mul47, 31
  %rem = urem i64 %mul47, 29
  %conv54 = trunc i64 %rem53 to i32
  %conv48 = trunc i64 %rem to i32
  %22 = load %struct._IO_FILE** @stdout, align 8, !tbaa !8
  %x152 = getelementptr inbounds %struct.anon.1* %msg, i64 0, i32 0
  %y154 = getelementptr inbounds %struct.anon.1* %msg, i64 0, i32 1
  %z156 = getelementptr inbounds %struct.anon.1* %msg, i64 0, i32 2
  %t158 = getelementptr inbounds %struct.anon.1* %msg, i64 0, i32 3
  %arraydecay160 = getelementptr inbounds %struct.anon.1* %msg, i64 0, i32 4, i64 0
  %23 = bitcast %struct.su3_matrix* %arraydecay160 to i8*
  %rank2rcv = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 4
  br label %for.cond57.preheader

for.cond57.preheader:                             ; preds = %for.cond57.preheader.lr.ph, %for.end215
  %24 = phi i32 [ %21, %for.cond57.preheader.lr.ph ], [ %75, %for.end215 ]
  %buf_length.0348 = phi i32 [ 0, %for.cond57.preheader.lr.ph ], [ %buf_length.1.lcssa, %for.end215 ]
  %where_in_buf.0347 = phi i32 [ 0, %for.cond57.preheader.lr.ph ], [ %where_in_buf.1.lcssa, %for.end215 ]
  %rank29.0346 = phi i32 [ %conv48, %for.cond57.preheader.lr.ph ], [ %rank29.1.lcssa, %for.end215 ]
  %rank31.0345 = phi i32 [ %conv54, %for.cond57.preheader.lr.ph ], [ %rank31.1.lcssa, %for.end215 ]
  %ksite.0343 = phi i32 [ 0, %for.cond57.preheader.lr.ph ], [ %add217, %for.end215 ]
  %25 = load i32* @number_of_nodes, align 4, !tbaa !10
  %cmp58331 = icmp sgt i32 %25, 0
  br i1 %cmp58331, label %for.cond61.preheader, label %for.end215

for.cond61.preheader:                             ; preds = %for.cond57.preheader, %for.inc213
  %26 = phi i32 [ %73, %for.inc213 ], [ %25, %for.cond57.preheader ]
  %27 = phi i32 [ %74, %for.inc213 ], [ %24, %for.cond57.preheader ]
  %buf_length.1337 = phi i32 [ %buf_length.2.lcssa, %for.inc213 ], [ %buf_length.0348, %for.cond57.preheader ]
  %where_in_buf.1336 = phi i32 [ %where_in_buf.2.lcssa, %for.inc213 ], [ %where_in_buf.0347, %for.cond57.preheader ]
  %rank29.1335 = phi i32 [ %rank29.2.lcssa, %for.inc213 ], [ %rank29.0346, %for.cond57.preheader ]
  %rank31.1334 = phi i32 [ %rank31.2.lcssa, %for.inc213 ], [ %rank31.0345, %for.cond57.preheader ]
  %sendnode.0332 = phi i32 [ %inc214, %for.inc213 ], [ 0, %for.cond57.preheader ]
  %cmp62321 = icmp slt i32 %ksite.0343, %27
  br i1 %cmp62321, label %for.body67, label %for.inc213

for.body67:                                       ; preds = %for.cond61.preheader, %for.inc210
  %28 = phi i32 [ %71, %for.inc210 ], [ %27, %for.cond61.preheader ]
  %buf_length.2327 = phi i32 [ %buf_length.4, %for.inc210 ], [ %buf_length.1337, %for.cond61.preheader ]
  %where_in_buf.2326 = phi i32 [ %where_in_buf.4, %for.inc210 ], [ %where_in_buf.1336, %for.cond61.preheader ]
  %rank29.2325 = phi i32 [ %rank29.4, %for.inc210 ], [ %rank29.1335, %for.cond61.preheader ]
  %rank31.2324 = phi i32 [ %rank31.4, %for.inc210 ], [ %rank31.1334, %for.cond61.preheader ]
  %isite.0323 = phi i32 [ %inc211, %for.inc210 ], [ %ksite.0343, %for.cond61.preheader ]
  %mul68 = mul nsw i32 %28, %sendnode.0332
  %add69 = add nsw i32 %mul68, %isite.0323
  %29 = load %struct.gauge_header** %header, align 8, !tbaa !16
  %order71 = getelementptr inbounds %struct.gauge_header* %29, i64 0, i32 4
  %30 = load i32* %order71, align 4, !tbaa !23
  %cmp72 = icmp eq i32 %30, 0
  br i1 %cmp72, label %if.end76, label %if.else75

if.else75:                                        ; preds = %for.body67
  %idxprom = sext i32 %add69 to i64
  %31 = load i32** %rank2rcv, align 8, !tbaa !26
  %arrayidx = getelementptr inbounds i32* %31, i64 %idxprom
  %32 = load i32* %arrayidx, align 4, !tbaa !10
  br label %if.end76

if.end76:                                         ; preds = %for.body67, %if.else75
  %rcv_coords.0 = phi i32 [ %32, %if.else75 ], [ %add69, %for.body67 ]
  %33 = load i32* @nx, align 4, !tbaa !10
  %rem77 = srem i32 %rcv_coords.0, %33
  %div = sdiv i32 %rcv_coords.0, %33
  %34 = load i32* @ny, align 4, !tbaa !10
  %rem78 = srem i32 %div, %34
  %div79 = sdiv i32 %div, %34
  %35 = load i32* @nz, align 4, !tbaa !10
  %rem80 = srem i32 %div79, %35
  %div81 = sdiv i32 %div79, %35
  %36 = load i32* @nt, align 4, !tbaa !10
  %rem82 = srem i32 %div81, %36
  %call83 = call i32 @node_number(i32 %rem77, i32 %rem78, i32 %rem80, i32 %rem82) #5
  %37 = load i32* @this_node, align 4, !tbaa !10
  %cmp84 = icmp eq i32 %37, %sendnode.0332
  br i1 %cmp84, label %if.then86, label %if.else166

if.then86:                                        ; preds = %if.end76
  %cmp87 = icmp eq i32 %where_in_buf.2326, %buf_length.2327
  br i1 %cmp87, label %if.then89, label %if.end106

if.then89:                                        ; preds = %if.then86
  %38 = load i32* @sites_on_node, align 4, !tbaa !10
  %sub = sub nsw i32 %38, %isite.0323
  %cmp90 = icmp sgt i32 %sub, 4096
  %.sub = select i1 %cmp90, i32 4096, i32 %sub
  %mul94 = shl nsw i32 %.sub, 2
  %conv95 = sext i32 %mul94 to i64
  %mul96 = mul i64 %conv95, 144
  %call97 = call i64 @g_read(i8* %call4, i64 %mul96, i64 1, %struct._IO_FILE* %2) #5
  %cmp98 = icmp eq i64 %call97, 1
  br i1 %cmp98, label %if.end106, label %if.then100

if.then100:                                       ; preds = %if.then89
  %39 = load i32* @this_node, align 4, !tbaa !10
  %call102 = call i32* @__errno_location() #7
  %40 = load i32* %call102, align 4, !tbaa !10
  %call103 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([55 x i8]* @.str104, i64 0, i64 0), i8* %1, i32 %39, i32 %40, i8* %4) #5
  %call104 = call i32 @fflush(%struct._IO_FILE* %22) #5
  call void @terminate(i32 1) #5
  br label %if.end106

if.end106:                                        ; preds = %if.then100, %if.then89, %if.then86
  %where_in_buf.3 = phi i32 [ %where_in_buf.2326, %if.then86 ], [ 0, %if.then89 ], [ 0, %if.then100 ]
  %buf_length.3 = phi i32 [ %buf_length.2327, %if.then86 ], [ %.sub, %if.then89 ], [ %.sub, %if.then100 ]
  %41 = load i32* %byterevflag3, align 4, !tbaa !25
  %cmp108 = icmp eq i32 %41, 1
  %mul111 = shl nsw i32 %where_in_buf.3, 2
  %idxprom112 = sext i32 %mul111 to i64
  %arrayidx113 = getelementptr inbounds %struct.su3_matrix* %6, i64 %idxprom112
  %42 = bitcast %struct.su3_matrix* %arrayidx113 to i32*
  br i1 %cmp108, label %if.then110, label %if.end114

if.then110:                                       ; preds = %if.end106
  call void @byterevn(i32* %42, i32 144) #5
  br label %if.end114

if.end114:                                        ; preds = %if.end106, %if.then110
  %.pre349 = load i32* %sum29, align 4, !tbaa !28
  %.pre350 = load i32* %sum31, align 4, !tbaa !29
  br label %for.body121

for.body121:                                      ; preds = %for.body121, %if.end114
  %43 = phi i32 [ %.pre350, %if.end114 ], [ %xor129, %for.body121 ]
  %44 = phi i32 [ %.pre349, %if.end114 ], [ %xor, %for.body121 ]
  %val.0320 = phi i32* [ %42, %if.end114 ], [ %incdec.ptr, %for.body121 ]
  %k.0319 = phi i32 [ 0, %if.end114 ], [ %inc139, %for.body121 ]
  %rank29.3318 = phi i32 [ %rank29.2325, %if.end114 ], [ %.inc, %for.body121 ]
  %rank31.3317 = phi i32 [ %rank31.2324, %if.end114 ], [ %.inc134, %for.body121 ]
  %45 = load i32* %val.0320, align 4, !tbaa !10
  %shl = shl i32 %45, %rank29.3318
  %sub122 = sub nsw i32 32, %rank29.3318
  %shr = lshr i32 %45, %sub122
  %or = or i32 %shl, %shr
  %xor = xor i32 %or, %44
  store i32 %xor, i32* %sum29, align 4, !tbaa !28
  %46 = load i32* %val.0320, align 4, !tbaa !10
  %shl124 = shl i32 %46, %rank31.3317
  %sub125 = sub nsw i32 32, %rank31.3317
  %shr126 = lshr i32 %46, %sub125
  %or127 = or i32 %shl124, %shr126
  %xor129 = xor i32 %or127, %43
  store i32 %xor129, i32* %sum31, align 4, !tbaa !29
  %inc = add nsw i32 %rank29.3318, 1
  %cmp130 = icmp sgt i32 %rank29.3318, 27
  %.inc = select i1 %cmp130, i32 0, i32 %inc
  %inc134 = add nsw i32 %rank31.3317, 1
  %cmp135 = icmp sgt i32 %rank31.3317, 29
  %.inc134 = select i1 %cmp135, i32 0, i32 %inc134
  %inc139 = add nsw i32 %k.0319, 1
  %incdec.ptr = getelementptr inbounds i32* %val.0320, i64 1
  %exitcond = icmp eq i32 %inc139, 144
  br i1 %exitcond, label %for.end, label %for.body121

for.end:                                          ; preds = %for.body121
  %cmp140 = icmp eq i32 %call83, %sendnode.0332
  br i1 %cmp140, label %if.then142, label %if.else150

if.then142:                                       ; preds = %for.end
  %call143 = call i32 @node_index(i32 %rem77, i32 %rem78, i32 %rem80, i32 %rem82) #5
  %idxprom144 = sext i32 %call143 to i64
  %47 = load %struct.site** @lattice, align 8, !tbaa !8
  %arraydecay146 = getelementptr inbounds %struct.site* %47, i64 %idxprom144, i32 8, i64 0
  %48 = bitcast %struct.su3_matrix* %arraydecay146 to i8*
  %49 = bitcast %struct.su3_matrix* %arrayidx113 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %48, i8* %49, i64 576, i32 1, i1 false)
  br label %if.end164

if.else150:                                       ; preds = %for.end
  %conv151 = trunc i32 %rem77 to i16
  store i16 %conv151, i16* %x152, align 8, !tbaa !47
  %conv153 = trunc i32 %rem78 to i16
  store i16 %conv153, i16* %y154, align 2, !tbaa !49
  %conv155 = trunc i32 %rem80 to i16
  store i16 %conv155, i16* %z156, align 4, !tbaa !50
  %conv157 = trunc i32 %rem82 to i16
  store i16 %conv157, i16* %t158, align 2, !tbaa !51
  %50 = bitcast %struct.su3_matrix* %arrayidx113 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %23, i8* %50, i64 576, i32 1, i1 false)
  call void @send_field(i8* %0, i32 584, i32 %call83) #5
  br label %if.end164

if.end164:                                        ; preds = %if.else150, %if.then142
  %inc165 = add nsw i32 %where_in_buf.3, 1
  br label %for.inc210

if.else166:                                       ; preds = %if.end76
  %cmp167 = icmp eq i32 %37, %call83
  br i1 %cmp167, label %if.then169, label %for.inc210

if.then169:                                       ; preds = %if.else166
  call void @get_field(i8* %0, i32 584) #5
  %51 = bitcast %struct.anon.1* %msg to i64*
  %52 = load i64* %51, align 8
  %53 = trunc i64 %52 to i32
  %54 = trunc i64 %52 to i32
  %sext = shl i32 %54, 16
  %conv171 = ashr exact i32 %sext, 16
  %conv173 = ashr i32 %53, 16
  %55 = lshr i64 %52, 32
  %sext353354 = shl nuw nsw i64 %55, 16
  %sext353 = trunc i64 %sext353354 to i32
  %conv175 = ashr exact i32 %sext353, 16
  %56 = lshr i64 %52, 48
  %sext355356 = shl nuw nsw i64 %56, 16
  %sext355 = trunc i64 %sext355356 to i32
  %conv177 = ashr exact i32 %sext355, 16
  %call178 = call i32 @node_index(i32 %conv171, i32 %conv173, i32 %conv175, i32 %conv177) #5
  %57 = load i32* @this_node, align 4, !tbaa !10
  %58 = load i64* %51, align 8
  %59 = trunc i64 %58 to i32
  %60 = trunc i64 %58 to i32
  %sext357 = shl i32 %60, 16
  %conv180 = ashr exact i32 %sext357, 16
  %conv182 = ashr i32 %59, 16
  %61 = lshr i64 %58, 32
  %sext359360 = shl nuw nsw i64 %61, 16
  %sext359 = trunc i64 %sext359360 to i32
  %conv184 = ashr exact i32 %sext359, 16
  %62 = lshr i64 %58, 48
  %sext361362 = shl nuw nsw i64 %62, 16
  %sext361 = trunc i64 %sext361362 to i32
  %conv186 = ashr exact i32 %sext361, 16
  %call187 = call i32 @node_number(i32 %conv180, i32 %conv182, i32 %conv184, i32 %conv186) #5
  %cmp188 = icmp eq i32 %57, %call187
  br i1 %cmp188, label %if.end201, label %if.then190

if.then190:                                       ; preds = %if.then169
  %63 = load i32* @this_node, align 4, !tbaa !10
  %64 = load i64* %51, align 8
  %65 = trunc i64 %64 to i32
  %66 = trunc i64 %64 to i32
  %sext363 = shl i32 %66, 16
  %conv192 = ashr exact i32 %sext363, 16
  %conv194 = ashr i32 %65, 16
  %67 = lshr i64 %64, 32
  %sext365366 = shl nuw nsw i64 %67, 16
  %sext365 = trunc i64 %sext365366 to i32
  %conv196 = ashr exact i32 %sext365, 16
  %68 = lshr i64 %64, 48
  %sext367368 = shl nuw nsw i64 %68, 16
  %sext367 = trunc i64 %sext367368 to i32
  %conv198 = ashr exact i32 %sext367, 16
  %call199 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([37 x i8]* @.str126, i64 0, i64 0), i32 %63, i32 %conv192, i32 %conv194, i32 %conv196, i32 %conv198) #5
  %call200 = call i32 @fflush(%struct._IO_FILE* %22) #5
  call void @terminate(i32 1) #5
  br label %if.end201

if.end201:                                        ; preds = %if.then169, %if.then190
  %idxprom202 = sext i32 %call178 to i64
  %69 = load %struct.site** @lattice, align 8, !tbaa !8
  %arraydecay205 = getelementptr inbounds %struct.site* %69, i64 %idxprom202, i32 8, i64 0
  %70 = bitcast %struct.su3_matrix* %arraydecay205 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %70, i8* %23, i64 576, i32 1, i1 false)
  br label %for.inc210

for.inc210:                                       ; preds = %if.end164, %if.end201, %if.else166
  %rank31.4 = phi i32 [ %.inc134, %if.end164 ], [ %rank31.2324, %if.end201 ], [ %rank31.2324, %if.else166 ]
  %rank29.4 = phi i32 [ %.inc, %if.end164 ], [ %rank29.2325, %if.end201 ], [ %rank29.2325, %if.else166 ]
  %where_in_buf.4 = phi i32 [ %inc165, %if.end164 ], [ %where_in_buf.2326, %if.end201 ], [ %where_in_buf.2326, %if.else166 ]
  %buf_length.4 = phi i32 [ %buf_length.3, %if.end164 ], [ %buf_length.2327, %if.end201 ], [ %buf_length.2327, %if.else166 ]
  %inc211 = add nsw i32 %isite.0323, 1
  %71 = load i32* @sites_on_node, align 4, !tbaa !10
  %cmp62 = icmp slt i32 %inc211, %71
  %72 = or i32 %ksite.0343, 3
  %cmp65 = icmp slt i32 %isite.0323, %72
  %or.cond = and i1 %cmp62, %cmp65
  br i1 %or.cond, label %for.body67, label %for.cond61.for.inc213_crit_edge

for.cond61.for.inc213_crit_edge:                  ; preds = %for.inc210
  %.pre = load i32* @number_of_nodes, align 4, !tbaa !10
  br label %for.inc213

for.inc213:                                       ; preds = %for.cond61.for.inc213_crit_edge, %for.cond61.preheader
  %73 = phi i32 [ %.pre, %for.cond61.for.inc213_crit_edge ], [ %26, %for.cond61.preheader ]
  %74 = phi i32 [ %71, %for.cond61.for.inc213_crit_edge ], [ %27, %for.cond61.preheader ]
  %buf_length.2.lcssa = phi i32 [ %buf_length.4, %for.cond61.for.inc213_crit_edge ], [ %buf_length.1337, %for.cond61.preheader ]
  %where_in_buf.2.lcssa = phi i32 [ %where_in_buf.4, %for.cond61.for.inc213_crit_edge ], [ %where_in_buf.1336, %for.cond61.preheader ]
  %rank29.2.lcssa = phi i32 [ %rank29.4, %for.cond61.for.inc213_crit_edge ], [ %rank29.1335, %for.cond61.preheader ]
  %rank31.2.lcssa = phi i32 [ %rank31.4, %for.cond61.for.inc213_crit_edge ], [ %rank31.1334, %for.cond61.preheader ]
  %inc214 = add nsw i32 %sendnode.0332, 1
  %cmp58 = icmp slt i32 %inc214, %73
  br i1 %cmp58, label %for.cond61.preheader, label %for.end215

for.end215:                                       ; preds = %for.inc213, %for.cond57.preheader
  %buf_length.1.lcssa = phi i32 [ %buf_length.0348, %for.cond57.preheader ], [ %buf_length.2.lcssa, %for.inc213 ]
  %where_in_buf.1.lcssa = phi i32 [ %where_in_buf.0347, %for.cond57.preheader ], [ %where_in_buf.2.lcssa, %for.inc213 ]
  %rank29.1.lcssa = phi i32 [ %rank29.0346, %for.cond57.preheader ], [ %rank29.2.lcssa, %for.inc213 ]
  %rank31.1.lcssa = phi i32 [ %rank31.0345, %for.cond57.preheader ], [ %rank31.2.lcssa, %for.inc213 ]
  call void (...)* @g_sync() #5
  %add217 = add nsw i32 %ksite.0343, 4
  %75 = load i32* @sites_on_node, align 4, !tbaa !10
  %cmp55 = icmp slt i32 %add217, %75
  br i1 %cmp55, label %for.cond57.preheader, label %for.end218

for.end218:                                       ; preds = %for.end215, %if.end43
  call void @free(i8* %call4)
  call void @g_xor32(i32* %sum29) #5
  call void @g_xor32(i32* %sum31) #5
  %76 = load i32* @this_node, align 4, !tbaa !10
  %cmp221 = icmp eq i32 %76, 0
  br i1 %cmp221, label %if.then223, label %if.end242

if.then223:                                       ; preds = %for.end218
  %call224 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([62 x i8]* @.str127, i64 0, i64 0), i8* %4) #5
  %77 = load i32* %magic_number, align 4, !tbaa !22
  %cmp226 = icmp eq i32 %77, 20103
  br i1 %cmp226, label %if.then228, label %if.end240

if.then228:                                       ; preds = %if.then223
  %arraydecay229 = getelementptr inbounds %struct.gauge_header* %3, i64 0, i32 1, i64 0
  %call230 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([15 x i8]* @.str49, i64 0, i64 0), i8* %arraydecay229) #5
  %call231 = call i32 @g_seek(%struct._IO_FILE* %2, i64 %add, i32 0) #5
  %cmp232 = icmp slt i32 %call231, 0
  br i1 %cmp232, label %if.then234, label %if.end239

if.then234:                                       ; preds = %if.then228
  %call236 = call i32* @__errno_location() #7
  %78 = load i32* %call236, align 4, !tbaa !10
  %call237 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([60 x i8]* @.str128, i64 0, i64 0), i8* %1, i64 %add34, i32 %78, i8* %4) #5
  %79 = load %struct._IO_FILE** @stdout, align 8, !tbaa !8
  %call238 = call i32 @fflush(%struct._IO_FILE* %79) #5
  call void @terminate(i32 1) #5
  br label %if.end239

if.end239:                                        ; preds = %if.then234, %if.then228
  call void @read_checksum(i32 1, %struct.gauge_file* %gf, %struct.gauge_check* %test_gc)
  br label %if.end240

if.end240:                                        ; preds = %if.end239, %if.then223
  %80 = load %struct._IO_FILE** @stdout, align 8, !tbaa !8
  %call241 = call i32 @fflush(%struct._IO_FILE* %80) #5
  br label %if.end242

if.end242:                                        ; preds = %if.end240, %for.end218
  call void @llvm.lifetime.end(i64 584, i8* %0) #5
  ret void
}

; Function Attrs: nounwind uwtable
define void @r_parallel_f(%struct.gauge_file* nocapture %gf) #0 {
entry:
  tail call void (...)* @g_sync() #5
  %fp = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 0
  %0 = load %struct._IO_FILE** %fp, align 8, !tbaa !24
  %cmp = icmp eq %struct._IO_FILE* %0, null
  br i1 %cmp, label %if.end5, label %if.then

if.then:                                          ; preds = %entry
  %parallel = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 5
  %1 = load i32* %parallel, align 4, !tbaa !27
  %tobool = icmp eq i32 %1, 0
  br i1 %tobool, label %if.then1, label %if.end

if.then1:                                         ; preds = %if.then
  %puts = tail call i32 @puts(i8* getelementptr inbounds ([56 x i8]* @str193, i64 0, i64 0))
  %.pre = load %struct._IO_FILE** %fp, align 8, !tbaa !24
  br label %if.end

if.end:                                           ; preds = %if.then, %if.then1
  %2 = phi %struct._IO_FILE* [ %0, %if.then ], [ %.pre, %if.then1 ]
  %call3 = tail call i32 @g_close(%struct._IO_FILE* %2) #5
  store %struct._IO_FILE* null, %struct._IO_FILE** %fp, align 8, !tbaa !24
  br label %if.end5

if.end5:                                          ; preds = %entry, %if.end
  ret void
}

; Function Attrs: nounwind uwtable
define noalias %struct.gauge_file* @restore_ascii(i8* %filename) #0 {
entry:
  %version_number = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %z = alloca i32, align 4
  %t = alloca i32, align 4
  %lbuf = alloca [4 x %struct.su3_matrix], align 16
  %0 = bitcast [4 x %struct.su3_matrix]* %lbuf to i8*
  call void @llvm.lifetime.start(i64 576, i8* %0) #5
  %call = call %struct.gauge_file* @setup_input_gauge_file(i8* %filename)
  %header = getelementptr inbounds %struct.gauge_file* %call, i64 0, i32 1
  %1 = load %struct.gauge_header** %header, align 8, !tbaa !16
  %parallel = getelementptr inbounds %struct.gauge_file* %call, i64 0, i32 5
  store i32 0, i32* %parallel, align 4, !tbaa !27
  %2 = load i32* @this_node, align 4, !tbaa !10
  %cmp = icmp eq i32 %2, 0
  br i1 %cmp, label %if.then, label %if.else82

if.then:                                          ; preds = %entry
  %call1 = call %struct._IO_FILE* @fopen(i8* %filename, i8* getelementptr inbounds ([2 x i8]* @.str130, i64 0, i64 0)) #5
  %cmp2 = icmp eq %struct._IO_FILE* %call1, null
  br i1 %cmp2, label %if.then3, label %if.end

if.then3:                                         ; preds = %if.then
  %call4 = call i32* @__errno_location() #7
  %3 = load i32* %call4, align 4, !tbaa !10
  %call5 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([30 x i8]* @.str131, i64 0, i64 0), i8* %filename, i32 %3) #5
  call void @terminate(i32 1) #5
  br label %if.end

if.end:                                           ; preds = %if.then3, %if.then
  %fp6 = getelementptr inbounds %struct.gauge_file* %call, i64 0, i32 0
  store %struct._IO_FILE* %call1, %struct._IO_FILE** %fp6, align 8, !tbaa !24
  %call7 = call i32 (%struct._IO_FILE*, i8*, ...)* @fscanf(%struct._IO_FILE* %call1, i8* getelementptr inbounds ([3 x i8]* @.str, i64 0, i64 0), i32* %version_number) #5
  %cmp8 = icmp eq i32 %call7, 1
  br i1 %cmp8, label %if.end11, label %if.then9

if.then9:                                         ; preds = %if.end
  %puts257 = call i32 @puts(i8* getelementptr inbounds ([44 x i8]* @str198, i64 0, i64 0))
  call void @terminate(i32 1) #5
  br label %if.end11

if.end11:                                         ; preds = %if.end, %if.then9
  %4 = load i32* %version_number, align 4, !tbaa !10
  %magic_number = getelementptr inbounds %struct.gauge_header* %1, i64 0, i32 0
  store i32 %4, i32* %magic_number, align 4, !tbaa !22
  %cmp13 = icmp eq i32 %4, 20103
  br i1 %cmp13, label %if.end18, label %if.then14

if.then14:                                        ; preds = %if.end11
  %puts256 = call i32 @puts(i8* getelementptr inbounds ([58 x i8]* @str197, i64 0, i64 0))
  %5 = load i32* %magic_number, align 4, !tbaa !22
  %call17 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([27 x i8]* @.str134, i64 0, i64 0), i32 %5, i32 20103) #5
  call void @terminate(i32 1) #5
  br label %if.end18

if.end18:                                         ; preds = %if.end11, %if.then14
  %arraydecay = getelementptr inbounds %struct.gauge_header* %1, i64 0, i32 1, i64 0
  %call19 = call i32 (%struct._IO_FILE*, i8*, ...)* @fscanf(%struct._IO_FILE* %call1, i8* getelementptr inbounds ([26 x i8]* @.str135, i64 0, i64 0), i8* %arraydecay) #5
  %cmp20 = icmp eq i32 %call19, 1
  br i1 %cmp20, label %if.end26, label %if.then21

if.then21:                                        ; preds = %if.end18
  %puts255 = call i32 @puts(i8* getelementptr inbounds ([40 x i8]* @str196, i64 0, i64 0))
  %call25 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([24 x i8]* @.str137, i64 0, i64 0), i32 %call19, i8* %arraydecay) #5
  call void @terminate(i32 1) #5
  br label %if.end26

if.end26:                                         ; preds = %if.end18, %if.then21
  %call27 = call i32 (%struct._IO_FILE*, i8*, ...)* @fscanf(%struct._IO_FILE* %call1, i8* getelementptr inbounds ([9 x i8]* @.str138, i64 0, i64 0), i32* %x, i32* %y, i32* %z, i32* %t) #5
  %cmp28 = icmp eq i32 %call27, 4
  br i1 %cmp28, label %if.end31, label %if.then29

if.then29:                                        ; preds = %if.end26
  %puts254 = call i32 @puts(i8* getelementptr inbounds ([43 x i8]* @str195, i64 0, i64 0))
  call void @terminate(i32 1) #5
  br label %if.end31

if.end31:                                         ; preds = %if.end26, %if.then29
  %6 = load i32* %x, align 4, !tbaa !10
  %arrayidx = getelementptr inbounds %struct.gauge_header* %1, i64 0, i32 2, i64 0
  store i32 %6, i32* %arrayidx, align 4, !tbaa !10
  %7 = load i32* %y, align 4, !tbaa !10
  %arrayidx33 = getelementptr inbounds %struct.gauge_header* %1, i64 0, i32 2, i64 1
  store i32 %7, i32* %arrayidx33, align 4, !tbaa !10
  %8 = load i32* %z, align 4, !tbaa !10
  %arrayidx35 = getelementptr inbounds %struct.gauge_header* %1, i64 0, i32 2, i64 2
  store i32 %8, i32* %arrayidx35, align 4, !tbaa !10
  %9 = load i32* %t, align 4, !tbaa !10
  %arrayidx37 = getelementptr inbounds %struct.gauge_header* %1, i64 0, i32 2, i64 3
  store i32 %9, i32* %arrayidx37, align 4, !tbaa !10
  %10 = load i32* @nx, align 4, !tbaa !10
  %cmp40 = icmp eq i32 %6, %10
  %11 = load i32* @ny, align 4, !tbaa !10
  %cmp43 = icmp eq i32 %7, %11
  %or.cond295 = and i1 %cmp40, %cmp43
  br i1 %or.cond295, label %lor.lhs.false44, label %if.then52

lor.lhs.false44:                                  ; preds = %if.end31
  %12 = load i32* @nz, align 4, !tbaa !10
  %cmp47 = icmp eq i32 %8, %12
  %13 = load i32* @nt, align 4
  %cmp51 = icmp eq i32 %9, %13
  %or.cond = and i1 %cmp47, %cmp51
  br i1 %or.cond, label %if.end81, label %if.then52

if.then52:                                        ; preds = %if.end31, %lor.lhs.false44
  %14 = phi i32 [ %7, %lor.lhs.false44 ], [ %11, %if.end31 ]
  %15 = and i32 %14, %10
  %16 = icmp ne i32 %15, -1
  %17 = load i32* @nz, align 4
  %cmp57 = icmp ne i32 %17, -1
  %or.cond190 = or i1 %16, %cmp57
  %18 = load i32* @nt, align 4
  %cmp59 = icmp ne i32 %18, -1
  %or.cond191 = or i1 %or.cond190, %cmp59
  br i1 %or.cond191, label %if.then60, label %if.else

if.then60:                                        ; preds = %if.then52
  %call69 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([51 x i8]* @.str140, i64 0, i64 0), i32 %6, i32 %7, i32 %8, i32 %9) #5
  call void @terminate(i32 1) #5
  br label %if.end81

if.else:                                          ; preds = %if.then52
  store i32 %6, i32* @nx, align 4, !tbaa !10
  %19 = load i32* %arrayidx33, align 4, !tbaa !10
  store i32 %19, i32* @ny, align 4, !tbaa !10
  %20 = load i32* %arrayidx35, align 4, !tbaa !10
  store i32 %20, i32* @nz, align 4, !tbaa !10
  %21 = load i32* %arrayidx37, align 4, !tbaa !10
  store i32 %21, i32* @nt, align 4, !tbaa !10
  %mul = mul i32 %20, %19
  %mul78 = mul i32 %mul, %21
  %mul79 = mul i32 %mul78, %6
  store i32 %mul79, i32* @volume, align 4, !tbaa !10
  br label %if.end81

if.end81:                                         ; preds = %lor.lhs.false44, %if.then60, %if.else
  %order = getelementptr inbounds %struct.gauge_header* %1, i64 0, i32 4
  store i32 0, i32* %order, align 4, !tbaa !23
  br label %if.end84

if.else82:                                        ; preds = %entry
  %fp83 = getelementptr inbounds %struct.gauge_file* %call, i64 0, i32 0
  store %struct._IO_FILE* null, %struct._IO_FILE** %fp83, align 8, !tbaa !24
  br label %if.end84

if.end84:                                         ; preds = %if.else82, %if.end81
  %fp.0 = phi %struct._IO_FILE* [ %call1, %if.end81 ], [ undef, %if.else82 ]
  %byterevflag = getelementptr inbounds %struct.gauge_file* %call, i64 0, i32 3
  store i32 0, i32* %byterevflag, align 4, !tbaa !25
  %22 = bitcast %struct.gauge_header* %1 to i8*
  call void @broadcast_bytes(i8* %22, i32 92) #5
  call void (...)* @g_sync() #5
  store i32 0, i32* %t, align 4, !tbaa !10
  %23 = load i32* @nt, align 4, !tbaa !10
  %cmp85268 = icmp sgt i32 %23, 0
  br i1 %cmp85268, label %for.cond86.preheader.lr.ph, label %for.end179

for.cond86.preheader.lr.ph:                       ; preds = %if.end84
  %.pre287 = load i32* @nz, align 4, !tbaa !10
  br label %for.cond86.preheader

for.cond86.preheader:                             ; preds = %for.cond86.preheader.lr.ph, %for.inc177
  %24 = phi i32 [ %23, %for.cond86.preheader.lr.ph ], [ %77, %for.inc177 ]
  %25 = phi i32 [ 0, %for.cond86.preheader.lr.ph ], [ %inc178, %for.inc177 ]
  %26 = phi i32 [ %.pre287, %for.cond86.preheader.lr.ph ], [ %79, %for.inc177 ]
  store i32 0, i32* %z, align 4, !tbaa !10
  %cmp87267 = icmp sgt i32 %26, 0
  br i1 %cmp87267, label %for.cond89.preheader.lr.ph, label %for.inc177

for.cond89.preheader.lr.ph:                       ; preds = %for.cond86.preheader
  %.pre288 = load i32* @ny, align 4, !tbaa !10
  br label %for.cond89.preheader

for.cond89.preheader:                             ; preds = %for.cond89.preheader.lr.ph, %for.inc174
  %27 = phi i32 [ %26, %for.cond89.preheader.lr.ph ], [ %74, %for.inc174 ]
  %28 = phi i32 [ 0, %for.cond89.preheader.lr.ph ], [ %inc175, %for.inc174 ]
  %29 = phi i32 [ %.pre288, %for.cond89.preheader.lr.ph ], [ %76, %for.inc174 ]
  store i32 0, i32* %y, align 4, !tbaa !10
  %cmp90266 = icmp sgt i32 %29, 0
  br i1 %cmp90266, label %for.cond92.preheader.lr.ph, label %for.inc174

for.cond92.preheader.lr.ph:                       ; preds = %for.cond89.preheader
  %.pre289 = load i32* @nx, align 4, !tbaa !10
  br label %for.cond92.preheader

for.cond92.preheader:                             ; preds = %for.cond92.preheader.lr.ph, %for.inc171
  %30 = phi i32 [ %29, %for.cond92.preheader.lr.ph ], [ %72, %for.inc171 ]
  %31 = phi i32 [ 0, %for.cond92.preheader.lr.ph ], [ %inc172, %for.inc171 ]
  %32 = phi i32 [ %.pre289, %for.cond92.preheader.lr.ph ], [ %73, %for.inc171 ]
  store i32 0, i32* %x, align 4, !tbaa !10
  %cmp93264 = icmp sgt i32 %32, 0
  br i1 %cmp93264, label %for.body94, label %for.inc171

for.body94:                                       ; preds = %for.cond92.preheader, %for.inc168
  %33 = phi i32 [ %71, %for.inc168 ], [ %31, %for.cond92.preheader ]
  %storemerge253265 = phi i32 [ %inc169, %for.inc168 ], [ 0, %for.cond92.preheader ]
  %34 = load i32* %z, align 4, !tbaa !10
  %35 = load i32* %t, align 4, !tbaa !10
  %call95 = call i32 @node_number(i32 %storemerge253265, i32 %33, i32 %34, i32 %35) #5
  %36 = load i32* @this_node, align 4, !tbaa !10
  %cmp96 = icmp eq i32 %36, 0
  br i1 %cmp96, label %for.cond101.preheader, label %if.else148

for.cond101.preheader:                            ; preds = %for.body94, %for.inc.2.2
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc.2.2 ], [ 0, %for.body94 ]
  %real = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i64 0, i64 %indvars.iv, i32 0, i64 0, i64 0, i32 0
  %imag = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i64 0, i64 %indvars.iv, i32 0, i64 0, i64 0, i32 1
  %call119 = call i32 (%struct._IO_FILE*, i8*, ...)* @fscanf(%struct._IO_FILE* %fp.0, i8* getelementptr inbounds ([8 x i8]* @.str141, i64 0, i64 0), double* %real, double* %imag) #5
  %cmp120 = icmp eq i32 %call119, 2
  br i1 %cmp120, label %for.inc, label %if.then121

if.then121:                                       ; preds = %for.cond101.preheader
  %puts = call i32 @puts(i8* getelementptr inbounds ([37 x i8]* @str194, i64 0, i64 0))
  call void @terminate(i32 1) #5
  br label %for.inc

for.inc:                                          ; preds = %for.cond101.preheader, %if.then121
  %real.1 = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i64 0, i64 %indvars.iv, i32 0, i64 0, i64 1, i32 0
  %imag.1 = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i64 0, i64 %indvars.iv, i32 0, i64 0, i64 1, i32 1
  %call119.1 = call i32 (%struct._IO_FILE*, i8*, ...)* @fscanf(%struct._IO_FILE* %fp.0, i8* getelementptr inbounds ([8 x i8]* @.str141, i64 0, i64 0), double* %real.1, double* %imag.1) #5
  %cmp120.1 = icmp eq i32 %call119.1, 2
  br i1 %cmp120.1, label %for.inc.1, label %if.then121.1

for.end129:                                       ; preds = %for.inc.2.2
  %cmp130 = icmp eq i32 %call95, 0
  br i1 %cmp130, label %if.then131, label %if.else145

if.then131:                                       ; preds = %for.end129
  %37 = load i32* %x, align 4, !tbaa !10
  %38 = load i32* %y, align 4, !tbaa !10
  %39 = load i32* %z, align 4, !tbaa !10
  %40 = load i32* %t, align 4, !tbaa !10
  %call132 = call i32 @node_index(i32 %37, i32 %38, i32 %39, i32 %40) #5
  %idxprom137 = sext i32 %call132 to i64
  %41 = load %struct.site** @lattice, align 8, !tbaa !8
  %arrayidx139 = getelementptr inbounds %struct.site* %41, i64 %idxprom137, i32 8, i64 0
  %42 = bitcast %struct.su3_matrix* %arrayidx139 to i8*
  %43 = bitcast [4 x %struct.su3_matrix]* %lbuf to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %42, i8* %43, i64 144, i32 8, i1 false), !tbaa.struct !30
  %44 = load %struct.site** @lattice, align 8, !tbaa !8
  %arrayidx139.1 = getelementptr inbounds %struct.site* %44, i64 %idxprom137, i32 8, i64 1
  %arrayidx141.1 = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i64 0, i64 1
  %45 = bitcast %struct.su3_matrix* %arrayidx139.1 to i8*
  %46 = bitcast %struct.su3_matrix* %arrayidx141.1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %45, i8* %46, i64 144, i32 8, i1 false), !tbaa.struct !30
  %47 = load %struct.site** @lattice, align 8, !tbaa !8
  %arrayidx139.2 = getelementptr inbounds %struct.site* %47, i64 %idxprom137, i32 8, i64 2
  %arrayidx141.2 = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i64 0, i64 2
  %48 = bitcast %struct.su3_matrix* %arrayidx139.2 to i8*
  %49 = bitcast %struct.su3_matrix* %arrayidx141.2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %48, i8* %49, i64 144, i32 8, i1 false), !tbaa.struct !30
  %50 = load %struct.site** @lattice, align 8, !tbaa !8
  %arrayidx139.3 = getelementptr inbounds %struct.site* %50, i64 %idxprom137, i32 8, i64 3
  %arrayidx141.3 = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i64 0, i64 3
  %51 = bitcast %struct.su3_matrix* %arrayidx139.3 to i8*
  %52 = bitcast %struct.su3_matrix* %arrayidx141.3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %51, i8* %52, i64 144, i32 8, i1 false), !tbaa.struct !30
  br label %for.inc168

if.else145:                                       ; preds = %for.end129
  call void @send_field(i8* %0, i32 576, i32 %call95) #5
  br label %for.inc168

if.else148:                                       ; preds = %for.body94
  %cmp149 = icmp eq i32 %36, %call95
  br i1 %cmp149, label %if.then150, label %for.inc168

if.then150:                                       ; preds = %if.else148
  call void @get_field(i8* %0, i32 576) #5
  %53 = load i32* %x, align 4, !tbaa !10
  %54 = load i32* %y, align 4, !tbaa !10
  %55 = load i32* %z, align 4, !tbaa !10
  %56 = load i32* %t, align 4, !tbaa !10
  %call152 = call i32 @node_index(i32 %53, i32 %54, i32 %55, i32 %56) #5
  %idxprom157 = sext i32 %call152 to i64
  %57 = load %struct.site** @lattice, align 8, !tbaa !8
  %arrayidx160 = getelementptr inbounds %struct.site* %57, i64 %idxprom157, i32 8, i64 0
  %58 = bitcast %struct.su3_matrix* %arrayidx160 to i8*
  %59 = bitcast [4 x %struct.su3_matrix]* %lbuf to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %58, i8* %59, i64 144, i32 8, i1 false), !tbaa.struct !30
  %60 = load %struct.site** @lattice, align 8, !tbaa !8
  %arrayidx160.1 = getelementptr inbounds %struct.site* %60, i64 %idxprom157, i32 8, i64 1
  %arrayidx162.1 = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i64 0, i64 1
  %61 = bitcast %struct.su3_matrix* %arrayidx160.1 to i8*
  %62 = bitcast %struct.su3_matrix* %arrayidx162.1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %61, i8* %62, i64 144, i32 8, i1 false), !tbaa.struct !30
  %63 = load %struct.site** @lattice, align 8, !tbaa !8
  %arrayidx160.2 = getelementptr inbounds %struct.site* %63, i64 %idxprom157, i32 8, i64 2
  %arrayidx162.2 = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i64 0, i64 2
  %64 = bitcast %struct.su3_matrix* %arrayidx160.2 to i8*
  %65 = bitcast %struct.su3_matrix* %arrayidx162.2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %64, i8* %65, i64 144, i32 8, i1 false), !tbaa.struct !30
  %66 = load %struct.site** @lattice, align 8, !tbaa !8
  %arrayidx160.3 = getelementptr inbounds %struct.site* %66, i64 %idxprom157, i32 8, i64 3
  %arrayidx162.3 = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i64 0, i64 3
  %67 = bitcast %struct.su3_matrix* %arrayidx160.3 to i8*
  %68 = bitcast %struct.su3_matrix* %arrayidx162.3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %67, i8* %68, i64 144, i32 8, i1 false), !tbaa.struct !30
  br label %for.inc168

for.inc168:                                       ; preds = %if.then150, %if.then131, %if.else145, %if.else148
  %69 = load i32* %x, align 4, !tbaa !10
  %inc169 = add nsw i32 %69, 1
  store i32 %inc169, i32* %x, align 4, !tbaa !10
  %70 = load i32* @nx, align 4, !tbaa !10
  %cmp93 = icmp slt i32 %inc169, %70
  %71 = load i32* %y, align 4, !tbaa !10
  br i1 %cmp93, label %for.body94, label %for.cond92.for.inc171_crit_edge

for.cond92.for.inc171_crit_edge:                  ; preds = %for.inc168
  %.pre290 = load i32* @ny, align 4, !tbaa !10
  br label %for.inc171

for.inc171:                                       ; preds = %for.cond92.for.inc171_crit_edge, %for.cond92.preheader
  %72 = phi i32 [ %.pre290, %for.cond92.for.inc171_crit_edge ], [ %30, %for.cond92.preheader ]
  %73 = phi i32 [ %70, %for.cond92.for.inc171_crit_edge ], [ %32, %for.cond92.preheader ]
  %.lcssa = phi i32 [ %71, %for.cond92.for.inc171_crit_edge ], [ %31, %for.cond92.preheader ]
  %inc172 = add nsw i32 %.lcssa, 1
  store i32 %inc172, i32* %y, align 4, !tbaa !10
  %cmp90 = icmp slt i32 %inc172, %72
  br i1 %cmp90, label %for.cond92.preheader, label %for.cond89.for.inc174_crit_edge

for.cond89.for.inc174_crit_edge:                  ; preds = %for.inc171
  %.pre291 = load i32* %z, align 4, !tbaa !10
  %.pre292 = load i32* @nz, align 4, !tbaa !10
  br label %for.inc174

for.inc174:                                       ; preds = %for.cond89.for.inc174_crit_edge, %for.cond89.preheader
  %74 = phi i32 [ %.pre292, %for.cond89.for.inc174_crit_edge ], [ %27, %for.cond89.preheader ]
  %75 = phi i32 [ %.pre291, %for.cond89.for.inc174_crit_edge ], [ %28, %for.cond89.preheader ]
  %76 = phi i32 [ %72, %for.cond89.for.inc174_crit_edge ], [ %29, %for.cond89.preheader ]
  %inc175 = add nsw i32 %75, 1
  store i32 %inc175, i32* %z, align 4, !tbaa !10
  %cmp87 = icmp slt i32 %inc175, %74
  br i1 %cmp87, label %for.cond89.preheader, label %for.cond86.for.inc177_crit_edge

for.cond86.for.inc177_crit_edge:                  ; preds = %for.inc174
  %.pre293 = load i32* %t, align 4, !tbaa !10
  %.pre294 = load i32* @nt, align 4, !tbaa !10
  br label %for.inc177

for.inc177:                                       ; preds = %for.cond86.for.inc177_crit_edge, %for.cond86.preheader
  %77 = phi i32 [ %.pre294, %for.cond86.for.inc177_crit_edge ], [ %24, %for.cond86.preheader ]
  %78 = phi i32 [ %.pre293, %for.cond86.for.inc177_crit_edge ], [ %25, %for.cond86.preheader ]
  %79 = phi i32 [ %74, %for.cond86.for.inc177_crit_edge ], [ %26, %for.cond86.preheader ]
  %inc178 = add nsw i32 %78, 1
  store i32 %inc178, i32* %t, align 4, !tbaa !10
  %cmp85 = icmp slt i32 %inc178, %77
  br i1 %cmp85, label %for.cond86.preheader, label %for.end179

for.end179:                                       ; preds = %for.inc177, %if.end84
  call void (...)* @g_sync() #5
  %80 = load i32* @this_node, align 4, !tbaa !10
  %cmp180 = icmp eq i32 %80, 0
  br i1 %cmp180, label %if.then181, label %if.end189

if.then181:                                       ; preds = %for.end179
  %call182 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([50 x i8]* @.str143, i64 0, i64 0), i8* %filename) #5
  %arraydecay184 = getelementptr inbounds %struct.gauge_header* %1, i64 0, i32 1, i64 0
  %call185 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([15 x i8]* @.str49, i64 0, i64 0), i8* %arraydecay184) #5
  %call186 = call i32 @fclose(%struct._IO_FILE* %fp.0) #5
  %fp187 = getelementptr inbounds %struct.gauge_file* %call, i64 0, i32 0
  store %struct._IO_FILE* null, %struct._IO_FILE** %fp187, align 8, !tbaa !24
  %81 = load %struct._IO_FILE** @stdout, align 8, !tbaa !8
  %call188 = call i32 @fflush(%struct._IO_FILE* %81) #5
  br label %if.end189

if.end189:                                        ; preds = %if.then181, %for.end179
  call void @llvm.lifetime.end(i64 576, i8* %0) #5
  ret %struct.gauge_file* %call

if.then121.1:                                     ; preds = %for.inc
  %puts.1 = call i32 @puts(i8* getelementptr inbounds ([37 x i8]* @str194, i64 0, i64 0))
  call void @terminate(i32 1) #5
  br label %for.inc.1

for.inc.1:                                        ; preds = %if.then121.1, %for.inc
  %real.2 = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i64 0, i64 %indvars.iv, i32 0, i64 0, i64 2, i32 0
  %imag.2 = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i64 0, i64 %indvars.iv, i32 0, i64 0, i64 2, i32 1
  %call119.2 = call i32 (%struct._IO_FILE*, i8*, ...)* @fscanf(%struct._IO_FILE* %fp.0, i8* getelementptr inbounds ([8 x i8]* @.str141, i64 0, i64 0), double* %real.2, double* %imag.2) #5
  %cmp120.2 = icmp eq i32 %call119.2, 2
  br i1 %cmp120.2, label %for.inc.2, label %if.then121.2

if.then121.2:                                     ; preds = %for.inc.1
  %puts.2 = call i32 @puts(i8* getelementptr inbounds ([37 x i8]* @str194, i64 0, i64 0))
  call void @terminate(i32 1) #5
  br label %for.inc.2

for.inc.2:                                        ; preds = %if.then121.2, %for.inc.1
  %real.1270 = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i64 0, i64 %indvars.iv, i32 0, i64 1, i64 0, i32 0
  %imag.1271 = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i64 0, i64 %indvars.iv, i32 0, i64 1, i64 0, i32 1
  %call119.1272 = call i32 (%struct._IO_FILE*, i8*, ...)* @fscanf(%struct._IO_FILE* %fp.0, i8* getelementptr inbounds ([8 x i8]* @.str141, i64 0, i64 0), double* %real.1270, double* %imag.1271) #5
  %cmp120.1273 = icmp eq i32 %call119.1272, 2
  br i1 %cmp120.1273, label %for.inc.1276, label %if.then121.1275

if.then121.1275:                                  ; preds = %for.inc.2
  %puts.1274 = call i32 @puts(i8* getelementptr inbounds ([37 x i8]* @str194, i64 0, i64 0))
  call void @terminate(i32 1) #5
  br label %for.inc.1276

for.inc.1276:                                     ; preds = %if.then121.1275, %for.inc.2
  %real.1.1 = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i64 0, i64 %indvars.iv, i32 0, i64 1, i64 1, i32 0
  %imag.1.1 = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i64 0, i64 %indvars.iv, i32 0, i64 1, i64 1, i32 1
  %call119.1.1 = call i32 (%struct._IO_FILE*, i8*, ...)* @fscanf(%struct._IO_FILE* %fp.0, i8* getelementptr inbounds ([8 x i8]* @.str141, i64 0, i64 0), double* %real.1.1, double* %imag.1.1) #5
  %cmp120.1.1 = icmp eq i32 %call119.1.1, 2
  br i1 %cmp120.1.1, label %for.inc.1.1, label %if.then121.1.1

if.then121.1.1:                                   ; preds = %for.inc.1276
  %puts.1.1 = call i32 @puts(i8* getelementptr inbounds ([37 x i8]* @str194, i64 0, i64 0))
  call void @terminate(i32 1) #5
  br label %for.inc.1.1

for.inc.1.1:                                      ; preds = %if.then121.1.1, %for.inc.1276
  %real.2.1 = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i64 0, i64 %indvars.iv, i32 0, i64 1, i64 2, i32 0
  %imag.2.1 = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i64 0, i64 %indvars.iv, i32 0, i64 1, i64 2, i32 1
  %call119.2.1 = call i32 (%struct._IO_FILE*, i8*, ...)* @fscanf(%struct._IO_FILE* %fp.0, i8* getelementptr inbounds ([8 x i8]* @.str141, i64 0, i64 0), double* %real.2.1, double* %imag.2.1) #5
  %cmp120.2.1 = icmp eq i32 %call119.2.1, 2
  br i1 %cmp120.2.1, label %for.inc.2.1, label %if.then121.2.1

if.then121.2.1:                                   ; preds = %for.inc.1.1
  %puts.2.1 = call i32 @puts(i8* getelementptr inbounds ([37 x i8]* @str194, i64 0, i64 0))
  call void @terminate(i32 1) #5
  br label %for.inc.2.1

for.inc.2.1:                                      ; preds = %if.then121.2.1, %for.inc.1.1
  %real.2277 = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i64 0, i64 %indvars.iv, i32 0, i64 2, i64 0, i32 0
  %imag.2278 = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i64 0, i64 %indvars.iv, i32 0, i64 2, i64 0, i32 1
  %call119.2279 = call i32 (%struct._IO_FILE*, i8*, ...)* @fscanf(%struct._IO_FILE* %fp.0, i8* getelementptr inbounds ([8 x i8]* @.str141, i64 0, i64 0), double* %real.2277, double* %imag.2278) #5
  %cmp120.2280 = icmp eq i32 %call119.2279, 2
  br i1 %cmp120.2280, label %for.inc.2283, label %if.then121.2282

if.then121.2282:                                  ; preds = %for.inc.2.1
  %puts.2281 = call i32 @puts(i8* getelementptr inbounds ([37 x i8]* @str194, i64 0, i64 0))
  call void @terminate(i32 1) #5
  br label %for.inc.2283

for.inc.2283:                                     ; preds = %if.then121.2282, %for.inc.2.1
  %real.1.2 = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i64 0, i64 %indvars.iv, i32 0, i64 2, i64 1, i32 0
  %imag.1.2 = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i64 0, i64 %indvars.iv, i32 0, i64 2, i64 1, i32 1
  %call119.1.2 = call i32 (%struct._IO_FILE*, i8*, ...)* @fscanf(%struct._IO_FILE* %fp.0, i8* getelementptr inbounds ([8 x i8]* @.str141, i64 0, i64 0), double* %real.1.2, double* %imag.1.2) #5
  %cmp120.1.2 = icmp eq i32 %call119.1.2, 2
  br i1 %cmp120.1.2, label %for.inc.1.2, label %if.then121.1.2

if.then121.1.2:                                   ; preds = %for.inc.2283
  %puts.1.2 = call i32 @puts(i8* getelementptr inbounds ([37 x i8]* @str194, i64 0, i64 0))
  call void @terminate(i32 1) #5
  br label %for.inc.1.2

for.inc.1.2:                                      ; preds = %if.then121.1.2, %for.inc.2283
  %real.2.2 = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i64 0, i64 %indvars.iv, i32 0, i64 2, i64 2, i32 0
  %imag.2.2 = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i64 0, i64 %indvars.iv, i32 0, i64 2, i64 2, i32 1
  %call119.2.2 = call i32 (%struct._IO_FILE*, i8*, ...)* @fscanf(%struct._IO_FILE* %fp.0, i8* getelementptr inbounds ([8 x i8]* @.str141, i64 0, i64 0), double* %real.2.2, double* %imag.2.2) #5
  %cmp120.2.2 = icmp eq i32 %call119.2.2, 2
  br i1 %cmp120.2.2, label %for.inc.2.2, label %if.then121.2.2

if.then121.2.2:                                   ; preds = %for.inc.1.2
  %puts.2.2 = call i32 @puts(i8* getelementptr inbounds ([37 x i8]* @str194, i64 0, i64 0))
  call void @terminate(i32 1) #5
  br label %for.inc.2.2

for.inc.2.2:                                      ; preds = %if.then121.2.2, %for.inc.1.2
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 4
  br i1 %exitcond, label %for.end129, label %for.cond101.preheader
}

; Function Attrs: nounwind
declare i32 @fscanf(%struct._IO_FILE* nocapture, i8* nocapture readonly, ...) #2

; Function Attrs: nounwind uwtable
define noalias %struct.gauge_file* @save_ascii(i8* %filename) #0 {
entry:
  %lbuf = alloca [4 x %struct.su3_matrix], align 16
  %0 = bitcast [4 x %struct.su3_matrix]* %lbuf to i8*
  call void @llvm.lifetime.start(i64 576, i8* %0) #5
  %call = call %struct.gauge_file* @setup_output_gauge_file()
  %header = getelementptr inbounds %struct.gauge_file* %call, i64 0, i32 1
  %1 = load %struct.gauge_header** %header, align 8, !tbaa !16
  %2 = load i32* @this_node, align 4, !tbaa !10
  %cmp = icmp eq i32 %2, 0
  br i1 %cmp, label %if.then, label %if.end23

if.then:                                          ; preds = %entry
  %call1 = call %struct._IO_FILE* @fopen(i8* %filename, i8* getelementptr inbounds ([2 x i8]* @.str26, i64 0, i64 0)) #5
  %cmp2 = icmp eq %struct._IO_FILE* %call1, null
  br i1 %cmp2, label %if.then3, label %if.end

if.then3:                                         ; preds = %if.then
  %call4 = call i32* @__errno_location() #7
  %3 = load i32* %call4, align 4, !tbaa !10
  %call5 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([30 x i8]* @.str131, i64 0, i64 0), i8* %filename, i32 %3) #5
  call void @terminate(i32 1) #5
  br label %if.end

if.end:                                           ; preds = %if.then3, %if.then
  %fp6 = getelementptr inbounds %struct.gauge_file* %call, i64 0, i32 0
  store %struct._IO_FILE* %call1, %struct._IO_FILE** %fp6, align 8, !tbaa !24
  %parallel = getelementptr inbounds %struct.gauge_file* %call, i64 0, i32 5
  store i32 0, i32* %parallel, align 4, !tbaa !27
  %filename7 = getelementptr inbounds %struct.gauge_file* %call, i64 0, i32 2
  store i8* %filename, i8** %filename7, align 8, !tbaa !19
  %byterevflag = getelementptr inbounds %struct.gauge_file* %call, i64 0, i32 3
  store i32 0, i32* %byterevflag, align 4, !tbaa !25
  %call8 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %call1, i8* getelementptr inbounds ([4 x i8]* @.str144, i64 0, i64 0), i32 20103) #5
  %cmp9 = icmp eq i32 %call8, 0
  br i1 %cmp9, label %if.then10, label %if.end12

if.then10:                                        ; preds = %if.end
  %puts204 = call i32 @puts(i8* getelementptr inbounds ([32 x i8]* @str202, i64 0, i64 0))
  call void @terminate(i32 1) #5
  br label %if.end12

if.end12:                                         ; preds = %if.then10, %if.end
  %arraydecay = getelementptr inbounds %struct.gauge_header* %1, i64 0, i32 1, i64 0
  %call13 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %call1, i8* getelementptr inbounds ([6 x i8]* @.str146, i64 0, i64 0), i8* %arraydecay) #5
  %cmp14 = icmp eq i32 %call13, 0
  br i1 %cmp14, label %if.then15, label %if.end17

if.then15:                                        ; preds = %if.end12
  %puts203 = call i32 @puts(i8* getelementptr inbounds ([28 x i8]* @str201, i64 0, i64 0))
  call void @terminate(i32 1) #5
  br label %if.end17

if.end17:                                         ; preds = %if.then15, %if.end12
  %4 = load i32* @nx, align 4, !tbaa !10
  %5 = load i32* @ny, align 4, !tbaa !10
  %6 = load i32* @nz, align 4, !tbaa !10
  %7 = load i32* @nt, align 4, !tbaa !10
  %call18 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %call1, i8* getelementptr inbounds ([13 x i8]* @.str148, i64 0, i64 0), i32 %4, i32 %5, i32 %6, i32 %7) #5
  %cmp19 = icmp eq i32 %call18, 0
  br i1 %cmp19, label %if.then20, label %if.end22

if.then20:                                        ; preds = %if.end17
  %puts202 = call i32 @puts(i8* getelementptr inbounds ([28 x i8]* @str200, i64 0, i64 0))
  call void @terminate(i32 1) #5
  br label %if.end22

if.end22:                                         ; preds = %if.then20, %if.end17
  call void @write_gauge_info_file(%struct.gauge_file* %call)
  br label %if.end23

if.end23:                                         ; preds = %if.end22, %entry
  %fp.0 = phi %struct._IO_FILE* [ %call1, %if.end22 ], [ undef, %entry ]
  call void (...)* @g_sync() #5
  %8 = load i32* @nt, align 4, !tbaa !10
  %cmp24221 = icmp sgt i32 %8, 0
  br i1 %cmp24221, label %for.cond25.preheader.lr.ph, label %for.end130

for.cond25.preheader.lr.ph:                       ; preds = %if.end23
  %.pre = load i32* @nz, align 4, !tbaa !10
  br label %for.cond25.preheader

for.cond25.preheader:                             ; preds = %for.cond25.preheader.lr.ph, %for.inc128
  %9 = phi i32 [ %8, %for.cond25.preheader.lr.ph ], [ %45, %for.inc128 ]
  %10 = phi i32 [ %.pre, %for.cond25.preheader.lr.ph ], [ %46, %for.inc128 ]
  %currentnode.0223 = phi i32 [ 0, %for.cond25.preheader.lr.ph ], [ %currentnode.1.lcssa, %for.inc128 ]
  %t.0222 = phi i32 [ 0, %for.cond25.preheader.lr.ph ], [ %inc129, %for.inc128 ]
  %cmp26217 = icmp sgt i32 %10, 0
  br i1 %cmp26217, label %for.cond28.preheader.lr.ph, label %for.inc128

for.cond28.preheader.lr.ph:                       ; preds = %for.cond25.preheader
  %.pre227 = load i32* @ny, align 4, !tbaa !10
  br label %for.cond28.preheader

for.cond28.preheader:                             ; preds = %for.cond28.preheader.lr.ph, %for.inc125
  %11 = phi i32 [ %10, %for.cond28.preheader.lr.ph ], [ %43, %for.inc125 ]
  %12 = phi i32 [ %.pre227, %for.cond28.preheader.lr.ph ], [ %44, %for.inc125 ]
  %currentnode.1219 = phi i32 [ %currentnode.0223, %for.cond28.preheader.lr.ph ], [ %currentnode.2.lcssa, %for.inc125 ]
  %z.0218 = phi i32 [ 0, %for.cond28.preheader.lr.ph ], [ %inc126, %for.inc125 ]
  %cmp29213 = icmp sgt i32 %12, 0
  br i1 %cmp29213, label %for.cond31.preheader.lr.ph, label %for.inc125

for.cond31.preheader.lr.ph:                       ; preds = %for.cond28.preheader
  %.pre228 = load i32* @nx, align 4, !tbaa !10
  br label %for.cond31.preheader

for.cond31.preheader:                             ; preds = %for.cond31.preheader.lr.ph, %for.inc122
  %13 = phi i32 [ %12, %for.cond31.preheader.lr.ph ], [ %41, %for.inc122 ]
  %14 = phi i32 [ %.pre228, %for.cond31.preheader.lr.ph ], [ %42, %for.inc122 ]
  %currentnode.2215 = phi i32 [ %currentnode.1219, %for.cond31.preheader.lr.ph ], [ %currentnode.3.lcssa, %for.inc122 ]
  %y.0214 = phi i32 [ 0, %for.cond31.preheader.lr.ph ], [ %inc123, %for.inc122 ]
  %cmp32210 = icmp sgt i32 %14, 0
  br i1 %cmp32210, label %for.body33, label %for.inc122

for.body33:                                       ; preds = %for.cond31.preheader, %for.inc119
  %currentnode.3212 = phi i32 [ %currentnode.4, %for.inc119 ], [ %currentnode.2215, %for.cond31.preheader ]
  %x.0211 = phi i32 [ %inc120, %for.inc119 ], [ 0, %for.cond31.preheader ]
  %call34 = call i32 @node_number(i32 %x.0211, i32 %y.0214, i32 %z.0218, i32 %t.0222) #5
  %cmp35 = icmp eq i32 %call34, %currentnode.3212
  br i1 %cmp35, label %if.end48thread-pre-split, label %if.then36

if.then36:                                        ; preds = %for.body33
  %15 = load i32* @this_node, align 4, !tbaa !10
  %cmp37 = icmp eq i32 %15, 0
  %cmp38 = icmp ne i32 %call34, 0
  %or.cond = and i1 %cmp37, %cmp38
  br i1 %or.cond, label %if.then39, label %if.end41

if.then39:                                        ; preds = %if.then36
  call void @send_field(i8* %0, i32 4, i32 %call34) #5
  %.pre229 = load i32* @this_node, align 4, !tbaa !10
  br label %if.end41

if.end41:                                         ; preds = %if.then39, %if.then36
  %16 = phi i32 [ %.pre229, %if.then39 ], [ %15, %if.then36 ]
  %cmp42 = icmp eq i32 %16, %call34
  %or.cond142 = and i1 %cmp42, %cmp38
  br i1 %or.cond142, label %if.then45, label %if.end48

if.then45:                                        ; preds = %if.end41
  call void @get_field(i8* %0, i32 4) #5
  br label %if.end48thread-pre-split

if.end48thread-pre-split:                         ; preds = %for.body33, %if.then45
  %currentnode.4.ph = phi i32 [ %call34, %if.then45 ], [ %currentnode.3212, %for.body33 ]
  %.pr = load i32* @this_node, align 4, !tbaa !10
  br label %if.end48

if.end48:                                         ; preds = %if.end48thread-pre-split, %if.end41
  %17 = phi i32 [ %.pr, %if.end48thread-pre-split ], [ %16, %if.end41 ]
  %currentnode.4 = phi i32 [ %currentnode.4.ph, %if.end48thread-pre-split ], [ %call34, %if.end41 ]
  %cmp49 = icmp eq i32 %17, 0
  br i1 %cmp49, label %if.then50, label %if.else99

if.then50:                                        ; preds = %if.end48
  %cmp51 = icmp eq i32 %currentnode.4, 0
  br i1 %cmp51, label %if.then52, label %if.else

if.then52:                                        ; preds = %if.then50
  %call53 = call i32 @node_index(i32 %x.0211, i32 %y.0214, i32 %z.0218, i32 %t.0222) #5
  %idxprom58 = sext i32 %call53 to i64
  %18 = load %struct.site** @lattice, align 8, !tbaa !8
  %arrayidx60 = getelementptr inbounds %struct.site* %18, i64 %idxprom58, i32 8, i64 0
  %19 = bitcast [4 x %struct.su3_matrix]* %lbuf to i8*
  %20 = bitcast %struct.su3_matrix* %arrayidx60 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %19, i8* %20, i64 144, i32 8, i1 false), !tbaa.struct !30
  %arrayidx.1 = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i64 0, i64 1
  %arrayidx60.1 = getelementptr inbounds %struct.site* %18, i64 %idxprom58, i32 8, i64 1
  %21 = bitcast %struct.su3_matrix* %arrayidx.1 to i8*
  %22 = bitcast %struct.su3_matrix* %arrayidx60.1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %21, i8* %22, i64 144, i32 8, i1 false), !tbaa.struct !30
  %arrayidx.2 = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i64 0, i64 2
  %arrayidx60.2 = getelementptr inbounds %struct.site* %18, i64 %idxprom58, i32 8, i64 2
  %23 = bitcast %struct.su3_matrix* %arrayidx.2 to i8*
  %24 = bitcast %struct.su3_matrix* %arrayidx60.2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %23, i8* %24, i64 144, i32 8, i1 false), !tbaa.struct !30
  %arrayidx.3 = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i64 0, i64 3
  %arrayidx60.3 = getelementptr inbounds %struct.site* %18, i64 %idxprom58, i32 8, i64 3
  %25 = bitcast %struct.su3_matrix* %arrayidx.3 to i8*
  %26 = bitcast %struct.su3_matrix* %arrayidx60.3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %25, i8* %26, i64 144, i32 8, i1 false), !tbaa.struct !30
  br label %for.cond66.preheader

if.else:                                          ; preds = %if.then50
  call void @get_field(i8* %0, i32 576) #5
  br label %for.cond66.preheader

for.cond66.preheader:                             ; preds = %if.else, %if.then52, %for.inc96
  %indvars.iv224 = phi i64 [ %indvars.iv.next225, %for.inc96 ], [ 0, %if.then52 ], [ 0, %if.else ]
  br label %for.cond69.preheader

for.cond69.preheader:                             ; preds = %for.inc90.2, %for.cond66.preheader
  %indvars.iv = phi i64 [ 0, %for.cond66.preheader ], [ %indvars.iv.next, %for.inc90.2 ]
  %real = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i64 0, i64 %indvars.iv224, i32 0, i64 %indvars.iv, i64 0, i32 0
  %27 = load double* %real, align 16, !tbaa !34
  %imag = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i64 0, i64 %indvars.iv224, i32 0, i64 %indvars.iv, i64 0, i32 1
  %28 = load double* %imag, align 8, !tbaa !36
  %call85 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %fp.0, i8* getelementptr inbounds ([11 x i8]* @.str150, i64 0, i64 0), double %27, double %28) #5
  %cmp86 = icmp eq i32 %call85, -1
  br i1 %cmp86, label %if.then87, label %for.inc90

if.then87:                                        ; preds = %for.cond69.preheader
  %puts = call i32 @puts(i8* getelementptr inbounds ([26 x i8]* @str199, i64 0, i64 0))
  call void @terminate(i32 1) #5
  br label %for.inc90

for.inc90:                                        ; preds = %for.cond69.preheader, %if.then87
  %real.1 = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i64 0, i64 %indvars.iv224, i32 0, i64 %indvars.iv, i64 1, i32 0
  %29 = load double* %real.1, align 16, !tbaa !34
  %imag.1 = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i64 0, i64 %indvars.iv224, i32 0, i64 %indvars.iv, i64 1, i32 1
  %30 = load double* %imag.1, align 8, !tbaa !36
  %call85.1 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %fp.0, i8* getelementptr inbounds ([11 x i8]* @.str150, i64 0, i64 0), double %29, double %30) #5
  %cmp86.1 = icmp eq i32 %call85.1, -1
  br i1 %cmp86.1, label %if.then87.1, label %for.inc90.1

for.inc96:                                        ; preds = %for.inc90.2
  %indvars.iv.next225 = add nuw nsw i64 %indvars.iv224, 1
  %exitcond226 = icmp eq i64 %indvars.iv.next225, 4
  br i1 %exitcond226, label %for.inc119, label %for.cond66.preheader

if.else99:                                        ; preds = %if.end48
  %cmp100 = icmp eq i32 %17, %currentnode.4
  br i1 %cmp100, label %if.then101, label %for.inc119

if.then101:                                       ; preds = %if.else99
  %call102 = call i32 @node_index(i32 %x.0211, i32 %y.0214, i32 %z.0218, i32 %t.0222) #5
  %idxprom109 = sext i32 %call102 to i64
  %31 = load %struct.site** @lattice, align 8, !tbaa !8
  %arrayidx112 = getelementptr inbounds %struct.site* %31, i64 %idxprom109, i32 8, i64 0
  %32 = bitcast [4 x %struct.su3_matrix]* %lbuf to i8*
  %33 = bitcast %struct.su3_matrix* %arrayidx112 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %32, i8* %33, i64 144, i32 8, i1 false), !tbaa.struct !30
  %arrayidx107.1 = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i64 0, i64 1
  %arrayidx112.1 = getelementptr inbounds %struct.site* %31, i64 %idxprom109, i32 8, i64 1
  %34 = bitcast %struct.su3_matrix* %arrayidx107.1 to i8*
  %35 = bitcast %struct.su3_matrix* %arrayidx112.1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %34, i8* %35, i64 144, i32 8, i1 false), !tbaa.struct !30
  %arrayidx107.2 = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i64 0, i64 2
  %arrayidx112.2 = getelementptr inbounds %struct.site* %31, i64 %idxprom109, i32 8, i64 2
  %36 = bitcast %struct.su3_matrix* %arrayidx107.2 to i8*
  %37 = bitcast %struct.su3_matrix* %arrayidx112.2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %36, i8* %37, i64 144, i32 8, i1 false), !tbaa.struct !30
  %arrayidx107.3 = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i64 0, i64 3
  %arrayidx112.3 = getelementptr inbounds %struct.site* %31, i64 %idxprom109, i32 8, i64 3
  %38 = bitcast %struct.su3_matrix* %arrayidx107.3 to i8*
  %39 = bitcast %struct.su3_matrix* %arrayidx112.3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %38, i8* %39, i64 144, i32 8, i1 false), !tbaa.struct !30
  call void @send_field(i8* %0, i32 576, i32 0) #5
  br label %for.inc119

for.inc119:                                       ; preds = %for.inc96, %if.then101, %if.else99
  %inc120 = add nsw i32 %x.0211, 1
  %40 = load i32* @nx, align 4, !tbaa !10
  %cmp32 = icmp slt i32 %inc120, %40
  br i1 %cmp32, label %for.body33, label %for.cond31.for.inc122_crit_edge

for.cond31.for.inc122_crit_edge:                  ; preds = %for.inc119
  %.pre230 = load i32* @ny, align 4, !tbaa !10
  br label %for.inc122

for.inc122:                                       ; preds = %for.cond31.for.inc122_crit_edge, %for.cond31.preheader
  %41 = phi i32 [ %.pre230, %for.cond31.for.inc122_crit_edge ], [ %13, %for.cond31.preheader ]
  %42 = phi i32 [ %40, %for.cond31.for.inc122_crit_edge ], [ %14, %for.cond31.preheader ]
  %currentnode.3.lcssa = phi i32 [ %currentnode.4, %for.cond31.for.inc122_crit_edge ], [ %currentnode.2215, %for.cond31.preheader ]
  %inc123 = add nsw i32 %y.0214, 1
  %cmp29 = icmp slt i32 %inc123, %41
  br i1 %cmp29, label %for.cond31.preheader, label %for.cond28.for.inc125_crit_edge

for.cond28.for.inc125_crit_edge:                  ; preds = %for.inc122
  %.pre231 = load i32* @nz, align 4, !tbaa !10
  br label %for.inc125

for.inc125:                                       ; preds = %for.cond28.for.inc125_crit_edge, %for.cond28.preheader
  %43 = phi i32 [ %.pre231, %for.cond28.for.inc125_crit_edge ], [ %11, %for.cond28.preheader ]
  %44 = phi i32 [ %41, %for.cond28.for.inc125_crit_edge ], [ %12, %for.cond28.preheader ]
  %currentnode.2.lcssa = phi i32 [ %currentnode.3.lcssa, %for.cond28.for.inc125_crit_edge ], [ %currentnode.1219, %for.cond28.preheader ]
  %inc126 = add nsw i32 %z.0218, 1
  %cmp26 = icmp slt i32 %inc126, %43
  br i1 %cmp26, label %for.cond28.preheader, label %for.cond25.for.inc128_crit_edge

for.cond25.for.inc128_crit_edge:                  ; preds = %for.inc125
  %.pre232 = load i32* @nt, align 4, !tbaa !10
  br label %for.inc128

for.inc128:                                       ; preds = %for.cond25.for.inc128_crit_edge, %for.cond25.preheader
  %45 = phi i32 [ %.pre232, %for.cond25.for.inc128_crit_edge ], [ %9, %for.cond25.preheader ]
  %46 = phi i32 [ %43, %for.cond25.for.inc128_crit_edge ], [ %10, %for.cond25.preheader ]
  %currentnode.1.lcssa = phi i32 [ %currentnode.2.lcssa, %for.cond25.for.inc128_crit_edge ], [ %currentnode.0223, %for.cond25.preheader ]
  %inc129 = add nsw i32 %t.0222, 1
  %cmp24 = icmp slt i32 %inc129, %45
  br i1 %cmp24, label %for.cond25.preheader, label %for.end130

for.end130:                                       ; preds = %for.inc128, %if.end23
  call void (...)* @g_sync() #5
  %47 = load i32* @this_node, align 4, !tbaa !10
  %cmp131 = icmp eq i32 %47, 0
  br i1 %cmp131, label %if.then132, label %if.end141

if.then132:                                       ; preds = %for.end130
  %call133 = call i32 @fflush(%struct._IO_FILE* %fp.0) #5
  %filename134 = getelementptr inbounds %struct.gauge_file* %call, i64 0, i32 2
  %48 = load i8** %filename134, align 8, !tbaa !19
  %call135 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([44 x i8]* @.str152, i64 0, i64 0), i8* %48) #5
  %arraydecay137 = getelementptr inbounds %struct.gauge_header* %1, i64 0, i32 1, i64 0
  %call138 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([15 x i8]* @.str49, i64 0, i64 0), i8* %arraydecay137) #5
  %call139 = call i32 @fclose(%struct._IO_FILE* %fp.0) #5
  %49 = load %struct._IO_FILE** @stdout, align 8, !tbaa !8
  %call140 = call i32 @fflush(%struct._IO_FILE* %49) #5
  br label %if.end141

if.end141:                                        ; preds = %if.then132, %for.end130
  call void @llvm.lifetime.end(i64 576, i8* %0) #5
  ret %struct.gauge_file* %call

if.then87.1:                                      ; preds = %for.inc90
  %puts.1 = call i32 @puts(i8* getelementptr inbounds ([26 x i8]* @str199, i64 0, i64 0))
  call void @terminate(i32 1) #5
  br label %for.inc90.1

for.inc90.1:                                      ; preds = %if.then87.1, %for.inc90
  %real.2 = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i64 0, i64 %indvars.iv224, i32 0, i64 %indvars.iv, i64 2, i32 0
  %50 = load double* %real.2, align 16, !tbaa !34
  %imag.2 = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i64 0, i64 %indvars.iv224, i32 0, i64 %indvars.iv, i64 2, i32 1
  %51 = load double* %imag.2, align 8, !tbaa !36
  %call85.2 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %fp.0, i8* getelementptr inbounds ([11 x i8]* @.str150, i64 0, i64 0), double %50, double %51) #5
  %cmp86.2 = icmp eq i32 %call85.2, -1
  br i1 %cmp86.2, label %if.then87.2, label %for.inc90.2

if.then87.2:                                      ; preds = %for.inc90.1
  %puts.2 = call i32 @puts(i8* getelementptr inbounds ([26 x i8]* @str199, i64 0, i64 0))
  call void @terminate(i32 1) #5
  br label %for.inc90.2

for.inc90.2:                                      ; preds = %if.then87.2, %for.inc90.1
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 3
  br i1 %exitcond, label %for.inc96, label %for.cond69.preheader
}

; Function Attrs: nounwind uwtable
define %struct.gauge_file* @restore_serial(i8* %filename) #0 {
entry:
  %call = tail call %struct.gauge_file* @r_serial_i(i8* %filename)
  %header = getelementptr inbounds %struct.gauge_file* %call, i64 0, i32 1
  %0 = load %struct.gauge_header** %header, align 8, !tbaa !16
  %magic_number = getelementptr inbounds %struct.gauge_header* %0, i64 0, i32 0
  %1 = load i32* %magic_number, align 4, !tbaa !22
  %cmp = icmp eq i32 %1, 1111836489
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  tail call void @r_serial_arch(%struct.gauge_file* %call)
  br label %if.end

if.else:                                          ; preds = %entry
  tail call void @r_serial(%struct.gauge_file* %call)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  tail call void (...)* @g_sync() #5
  %2 = load i32* @this_node, align 4, !tbaa !10
  %cmp.i = icmp eq i32 %2, 0
  br i1 %cmp.i, label %if.then.i, label %if.end3.i

if.then.i:                                        ; preds = %if.end
  %parallel.i = getelementptr inbounds %struct.gauge_file* %call, i64 0, i32 5
  %3 = load i32* %parallel.i, align 4, !tbaa !27
  %tobool.i = icmp eq i32 %3, 0
  br i1 %tobool.i, label %if.end.i, label %if.then1.i

if.then1.i:                                       ; preds = %if.then.i
  %puts.i = tail call i32 @puts(i8* getelementptr inbounds ([54 x i8]* @str191, i64 0, i64 0)) #5
  br label %if.end.i

if.end.i:                                         ; preds = %if.then1.i, %if.then.i
  %fp.i = getelementptr inbounds %struct.gauge_file* %call, i64 0, i32 0
  %4 = load %struct._IO_FILE** %fp.i, align 8, !tbaa !24
  %call2.i = tail call i32 @fclose(%struct._IO_FILE* %4) #5
  br label %if.end3.i

if.end3.i:                                        ; preds = %if.end.i, %if.end
  %rank2rcv.i = getelementptr inbounds %struct.gauge_file* %call, i64 0, i32 4
  %5 = load i32** %rank2rcv.i, align 8, !tbaa !26
  %cmp4.i = icmp eq i32* %5, null
  br i1 %cmp4.i, label %r_serial_f.exit, label %if.then5.i

if.then5.i:                                       ; preds = %if.end3.i
  %6 = bitcast i32* %5 to i8*
  tail call void @free(i8* %6) #5
  br label %r_serial_f.exit

r_serial_f.exit:                                  ; preds = %if.end3.i, %if.then5.i
  ret %struct.gauge_file* %call
}

; Function Attrs: nounwind uwtable
define %struct.gauge_file* @restore_parallel(i8* %filename) #0 {
entry:
  %call = tail call %struct.gauge_file* @r_parallel_i(i8* %filename)
  tail call void @r_parallel(%struct.gauge_file* %call)
  tail call void (...)* @g_sync() #5
  %fp.i = getelementptr inbounds %struct.gauge_file* %call, i64 0, i32 0
  %0 = load %struct._IO_FILE** %fp.i, align 8, !tbaa !24
  %cmp.i = icmp eq %struct._IO_FILE* %0, null
  br i1 %cmp.i, label %r_parallel_f.exit, label %if.then.i

if.then.i:                                        ; preds = %entry
  %parallel.i = getelementptr inbounds %struct.gauge_file* %call, i64 0, i32 5
  %1 = load i32* %parallel.i, align 4, !tbaa !27
  %tobool.i = icmp eq i32 %1, 0
  br i1 %tobool.i, label %if.then1.i, label %if.end.i

if.then1.i:                                       ; preds = %if.then.i
  %puts.i = tail call i32 @puts(i8* getelementptr inbounds ([56 x i8]* @str193, i64 0, i64 0)) #5
  %.pre.i = load %struct._IO_FILE** %fp.i, align 8, !tbaa !24
  br label %if.end.i

if.end.i:                                         ; preds = %if.then1.i, %if.then.i
  %2 = phi %struct._IO_FILE* [ %0, %if.then.i ], [ %.pre.i, %if.then1.i ]
  %call3.i = tail call i32 @g_close(%struct._IO_FILE* %2) #5
  store %struct._IO_FILE* null, %struct._IO_FILE** %fp.i, align 8, !tbaa !24
  br label %r_parallel_f.exit

r_parallel_f.exit:                                ; preds = %entry, %if.end.i
  ret %struct.gauge_file* %call
}

; Function Attrs: nounwind uwtable
define noalias %struct.gauge_file* @save_serial(i8* %filename) #0 {
entry:
  %call = tail call %struct.gauge_file* @w_serial_i(i8* %filename)
  tail call void @w_serial(%struct.gauge_file* %call)
  tail call void (...)* @g_sync() #5
  %0 = load i32* @this_node, align 4, !tbaa !10
  %cmp.i = icmp eq i32 %0, 0
  br i1 %cmp.i, label %if.then.i, label %w_serial_f.exit

if.then.i:                                        ; preds = %entry
  %parallel.i = getelementptr inbounds %struct.gauge_file* %call, i64 0, i32 5
  %1 = load i32* %parallel.i, align 4, !tbaa !27
  %tobool.i = icmp eq i32 %1, 0
  br i1 %tobool.i, label %if.end3.i, label %if.then1.i

if.then1.i:                                       ; preds = %if.then.i
  %puts.i = tail call i32 @puts(i8* getelementptr inbounds ([54 x i8]* @str178, i64 0, i64 0)) #5
  br label %if.end3.i

if.end3.i:                                        ; preds = %if.then1.i, %if.then.i
  %fp.i = getelementptr inbounds %struct.gauge_file* %call, i64 0, i32 0
  %2 = load %struct._IO_FILE** %fp.i, align 8, !tbaa !24
  %call2.i = tail call i32 @fclose(%struct._IO_FILE* %2) #5
  %.pr.i = load i32* @this_node, align 4, !tbaa !10
  %cmp4.i = icmp eq i32 %.pr.i, 0
  br i1 %cmp4.i, label %if.then5.i, label %w_serial_f.exit

if.then5.i:                                       ; preds = %if.end3.i
  tail call void @write_gauge_info_file(%struct.gauge_file* %call) #5
  br label %w_serial_f.exit

w_serial_f.exit:                                  ; preds = %entry, %if.end3.i, %if.then5.i
  ret %struct.gauge_file* %call
}

; Function Attrs: nounwind uwtable
define %struct.gauge_file* @save_parallel(i8* %filename) #0 {
entry:
  %call.i = tail call %struct.gauge_file* @parallel_open(i32 0, i8* %filename) #5
  tail call void @w_parallel(%struct.gauge_file* %call.i)
  tail call void (...)* @g_sync() #5
  %fp.i = getelementptr inbounds %struct.gauge_file* %call.i, i64 0, i32 0
  %0 = load %struct._IO_FILE** %fp.i, align 8, !tbaa !24
  %cmp.i = icmp eq %struct._IO_FILE* %0, null
  br i1 %cmp.i, label %if.end5.i, label %if.then.i

if.then.i:                                        ; preds = %entry
  %parallel.i = getelementptr inbounds %struct.gauge_file* %call.i, i64 0, i32 5
  %1 = load i32* %parallel.i, align 4, !tbaa !27
  %tobool.i = icmp eq i32 %1, 0
  br i1 %tobool.i, label %if.then1.i, label %if.end.i

if.then1.i:                                       ; preds = %if.then.i
  %puts.i = tail call i32 @puts(i8* getelementptr inbounds ([56 x i8]* @str192, i64 0, i64 0)) #5
  %.pre.i = load %struct._IO_FILE** %fp.i, align 8, !tbaa !24
  br label %if.end.i

if.end.i:                                         ; preds = %if.then1.i, %if.then.i
  %2 = phi %struct._IO_FILE* [ %0, %if.then.i ], [ %.pre.i, %if.then1.i ]
  %call3.i = tail call i32 @g_close(%struct._IO_FILE* %2) #5
  store %struct._IO_FILE* null, %struct._IO_FILE** %fp.i, align 8, !tbaa !24
  br label %if.end5.i

if.end5.i:                                        ; preds = %if.end.i, %entry
  %3 = load i32* @this_node, align 4, !tbaa !10
  %cmp6.i = icmp eq i32 %3, 0
  br i1 %cmp6.i, label %if.then7.i, label %w_parallel_f.exit

if.then7.i:                                       ; preds = %if.end5.i
  tail call void @write_gauge_info_file(%struct.gauge_file* %call.i) #5
  br label %w_parallel_f.exit

w_parallel_f.exit:                                ; preds = %if.end5.i, %if.then7.i
  ret %struct.gauge_file* %call.i
}

; Function Attrs: nounwind uwtable
define %struct.gauge_file* @save_checkpoint(i8* %filename) #0 {
entry:
  %call.i = tail call %struct.gauge_file* @parallel_open(i32 1, i8* %filename) #5
  tail call void @w_checkpoint(%struct.gauge_file* %call.i)
  tail call void (...)* @g_sync() #5
  %fp.i = getelementptr inbounds %struct.gauge_file* %call.i, i64 0, i32 0
  %0 = load %struct._IO_FILE** %fp.i, align 8, !tbaa !24
  %cmp.i = icmp eq %struct._IO_FILE* %0, null
  br i1 %cmp.i, label %if.end5.i, label %if.then.i

if.then.i:                                        ; preds = %entry
  %parallel.i = getelementptr inbounds %struct.gauge_file* %call.i, i64 0, i32 5
  %1 = load i32* %parallel.i, align 4, !tbaa !27
  %tobool.i = icmp eq i32 %1, 0
  br i1 %tobool.i, label %if.then1.i, label %if.end.i

if.then1.i:                                       ; preds = %if.then.i
  %puts.i = tail call i32 @puts(i8* getelementptr inbounds ([56 x i8]* @str192, i64 0, i64 0)) #5
  %.pre.i = load %struct._IO_FILE** %fp.i, align 8, !tbaa !24
  br label %if.end.i

if.end.i:                                         ; preds = %if.then1.i, %if.then.i
  %2 = phi %struct._IO_FILE* [ %0, %if.then.i ], [ %.pre.i, %if.then1.i ]
  %call3.i = tail call i32 @g_close(%struct._IO_FILE* %2) #5
  store %struct._IO_FILE* null, %struct._IO_FILE** %fp.i, align 8, !tbaa !24
  br label %if.end5.i

if.end5.i:                                        ; preds = %if.end.i, %entry
  %3 = load i32* @this_node, align 4, !tbaa !10
  %cmp6.i = icmp eq i32 %3, 0
  br i1 %cmp6.i, label %if.then7.i, label %w_parallel_f.exit

if.then7.i:                                       ; preds = %if.end5.i
  tail call void @write_gauge_info_file(%struct.gauge_file* %call.i) #5
  br label %w_parallel_f.exit

w_parallel_f.exit:                                ; preds = %if.end5.i, %if.then7.i
  ret %struct.gauge_file* %call.i
}

; Function Attrs: nounwind uwtable
define noalias %struct.gauge_file* @save_serial_archive(i8* %filename) #0 {
entry:
  %lbuf = alloca [4 x %struct.su3_matrix], align 16
  %chksum = alloca i32, align 4
  %utmp = alloca i32, align 4
  %sums = alloca [30 x i8], align 16
  %ssplaq = alloca double, align 8
  %stplaq = alloca double, align 8
  %trace = alloca double, align 8
  %0 = bitcast [4 x %struct.su3_matrix]* %lbuf to i8*
  call void @llvm.lifetime.start(i64 576, i8* %0) #5
  %call1 = call %struct.gauge_file* @setup_output_gauge_file()
  %header = getelementptr inbounds %struct.gauge_file* %call1, i64 0, i32 1
  %1 = load %struct.gauge_header** %header, align 8, !tbaa !16
  call void @d_plaquette(double* %ssplaq, double* %stplaq) #5
  %2 = load double* %ssplaq, align 8, !tbaa !11
  %3 = load double* %stplaq, align 8, !tbaa !11
  %add = fadd double %2, %3
  %div = fdiv double %add, 6.000000e+00
  store double 0.000000e+00, double* %trace, align 8, !tbaa !11
  store i32 0, i32* %chksum, align 4, !tbaa !10
  %4 = load i32* @sites_on_node, align 4, !tbaa !10
  %cmp505 = icmp sgt i32 %4, 0
  br i1 %cmp505, label %for.cond2.preheader.lr.ph, label %for.end39

for.cond2.preheader.lr.ph:                        ; preds = %entry
  %5 = load %struct.site** @lattice, align 8, !tbaa !8
  br label %for.cond2.preheader

for.cond2.preheader:                              ; preds = %for.cond2.preheader.lr.ph, %for.inc37
  %i.0507 = phi i32 [ 0, %for.cond2.preheader.lr.ph ], [ %inc38, %for.inc37 ]
  %s.0506 = phi %struct.site* [ %5, %for.cond2.preheader.lr.ph ], [ %incdec.ptr, %for.inc37 ]
  br label %for.body4

for.body4:                                        ; preds = %for.body4, %for.cond2.preheader
  %indvars.iv556 = phi i64 [ 0, %for.cond2.preheader ], [ %indvars.iv.next557, %for.body4 ]
  %arrayidx = getelementptr inbounds %struct.site* %s.0506, i64 0, i32 8, i64 %indvars.iv556
  %call5 = call { double, double } @trace_su3(%struct.su3_matrix* %arrayidx) #5
  %6 = extractvalue { double, double } %call5, 0
  %7 = load double* %trace, align 8, !tbaa !11
  %add6 = fadd double %7, %6
  store double %add6, double* %trace, align 8, !tbaa !11
  %chksum.promoted502 = load i32* %chksum, align 4, !tbaa !10
  %real20 = getelementptr inbounds %struct.site* %s.0506, i64 0, i32 8, i64 %indvars.iv556, i32 0, i64 0, i64 0, i32 0
  %8 = load double* %real20, align 8, !tbaa !34
  %9 = bitcast double %8 to i64
  %tmpflt.0.extract.trunc = trunc i64 %9 to i32
  %add21 = add i32 %tmpflt.0.extract.trunc, %chksum.promoted502
  %imag = getelementptr inbounds %struct.site* %s.0506, i64 0, i32 8, i64 %indvars.iv556, i32 0, i64 0, i64 0, i32 1
  %10 = load double* %imag, align 8, !tbaa !36
  %11 = bitcast double %10 to i64
  %tmpflt.0.extract.trunc461 = trunc i64 %11 to i32
  %add30 = add i32 %tmpflt.0.extract.trunc461, %add21
  %real20.1 = getelementptr inbounds %struct.site* %s.0506, i64 0, i32 8, i64 %indvars.iv556, i32 0, i64 0, i64 1, i32 0
  %12 = load double* %real20.1, align 8, !tbaa !34
  %13 = bitcast double %12 to i64
  %tmpflt.0.extract.trunc.1 = trunc i64 %13 to i32
  %add21.1 = add i32 %tmpflt.0.extract.trunc.1, %add30
  %imag.1 = getelementptr inbounds %struct.site* %s.0506, i64 0, i32 8, i64 %indvars.iv556, i32 0, i64 0, i64 1, i32 1
  %14 = load double* %imag.1, align 8, !tbaa !36
  %15 = bitcast double %14 to i64
  %tmpflt.0.extract.trunc461.1 = trunc i64 %15 to i32
  %add30.1 = add i32 %tmpflt.0.extract.trunc461.1, %add21.1
  %real20.2 = getelementptr inbounds %struct.site* %s.0506, i64 0, i32 8, i64 %indvars.iv556, i32 0, i64 0, i64 2, i32 0
  %16 = load double* %real20.2, align 8, !tbaa !34
  %17 = bitcast double %16 to i64
  %tmpflt.0.extract.trunc.2 = trunc i64 %17 to i32
  %add21.2 = add i32 %tmpflt.0.extract.trunc.2, %add30.1
  %imag.2 = getelementptr inbounds %struct.site* %s.0506, i64 0, i32 8, i64 %indvars.iv556, i32 0, i64 0, i64 2, i32 1
  %18 = load double* %imag.2, align 8, !tbaa !36
  %19 = bitcast double %18 to i64
  %tmpflt.0.extract.trunc461.2 = trunc i64 %19 to i32
  %add30.2 = add i32 %tmpflt.0.extract.trunc461.2, %add21.2
  %real20.1550 = getelementptr inbounds %struct.site* %s.0506, i64 0, i32 8, i64 %indvars.iv556, i32 0, i64 1, i64 0, i32 0
  %20 = load double* %real20.1550, align 8, !tbaa !34
  %21 = bitcast double %20 to i64
  %tmpflt.0.extract.trunc.1551 = trunc i64 %21 to i32
  %add21.1552 = add i32 %tmpflt.0.extract.trunc.1551, %add30.2
  %imag.1553 = getelementptr inbounds %struct.site* %s.0506, i64 0, i32 8, i64 %indvars.iv556, i32 0, i64 1, i64 0, i32 1
  %22 = load double* %imag.1553, align 8, !tbaa !36
  %23 = bitcast double %22 to i64
  %tmpflt.0.extract.trunc461.1554 = trunc i64 %23 to i32
  %add30.1555 = add i32 %tmpflt.0.extract.trunc461.1554, %add21.1552
  %real20.1.1 = getelementptr inbounds %struct.site* %s.0506, i64 0, i32 8, i64 %indvars.iv556, i32 0, i64 1, i64 1, i32 0
  %24 = load double* %real20.1.1, align 8, !tbaa !34
  %25 = bitcast double %24 to i64
  %tmpflt.0.extract.trunc.1.1 = trunc i64 %25 to i32
  %add21.1.1 = add i32 %tmpflt.0.extract.trunc.1.1, %add30.1555
  %imag.1.1 = getelementptr inbounds %struct.site* %s.0506, i64 0, i32 8, i64 %indvars.iv556, i32 0, i64 1, i64 1, i32 1
  %26 = load double* %imag.1.1, align 8, !tbaa !36
  %27 = bitcast double %26 to i64
  %tmpflt.0.extract.trunc461.1.1 = trunc i64 %27 to i32
  %add30.1.1 = add i32 %tmpflt.0.extract.trunc461.1.1, %add21.1.1
  %real20.2.1 = getelementptr inbounds %struct.site* %s.0506, i64 0, i32 8, i64 %indvars.iv556, i32 0, i64 1, i64 2, i32 0
  %28 = load double* %real20.2.1, align 8, !tbaa !34
  %29 = bitcast double %28 to i64
  %tmpflt.0.extract.trunc.2.1 = trunc i64 %29 to i32
  %add21.2.1 = add i32 %tmpflt.0.extract.trunc.2.1, %add30.1.1
  %imag.2.1 = getelementptr inbounds %struct.site* %s.0506, i64 0, i32 8, i64 %indvars.iv556, i32 0, i64 1, i64 2, i32 1
  %30 = load double* %imag.2.1, align 8, !tbaa !36
  %31 = bitcast double %30 to i64
  %tmpflt.0.extract.trunc461.2.1 = trunc i64 %31 to i32
  %add30.2.1 = add i32 %tmpflt.0.extract.trunc461.2.1, %add21.2.1
  store i32 %add30.2.1, i32* %chksum, align 4, !tbaa !10
  %indvars.iv.next557 = add nuw nsw i64 %indvars.iv556, 1
  %exitcond558 = icmp eq i64 %indvars.iv.next557, 4
  br i1 %exitcond558, label %for.inc37, label %for.body4

for.inc37:                                        ; preds = %for.body4
  %inc38 = add nsw i32 %i.0507, 1
  %incdec.ptr = getelementptr inbounds %struct.site* %s.0506, i64 1
  %32 = load i32* @sites_on_node, align 4, !tbaa !10
  %cmp = icmp slt i32 %inc38, %32
  br i1 %cmp, label %for.cond2.preheader, label %for.end39

for.end39:                                        ; preds = %for.inc37, %entry
  call void @g_doublesum(double* %trace) #5
  %33 = load double* %trace, align 8, !tbaa !11
  %34 = load i32* @volume, align 4, !tbaa !10
  %mul = mul nsw i32 %34, 12
  %conv = sitofp i32 %mul to double
  %div40 = fdiv double %33, %conv
  %call42493 = call i32 (...)* @numnodes() #5
  %cmp43494 = icmp sgt i32 %call42493, 1
  %35 = load i32* @this_node, align 4, !tbaa !10
  %cmp46495 = icmp eq i32 %35, 0
  br i1 %cmp43494, label %for.body45, label %for.end60

for.body45:                                       ; preds = %for.end39, %for.inc58
  %36 = phi i32 [ %41, %for.inc58 ], [ %35, %for.end39 ]
  %cmp46497 = phi i1 [ %cmp46, %for.inc58 ], [ %cmp46495, %for.end39 ]
  %j.0496 = phi i32 [ %inc59, %for.inc58 ], [ 1, %for.end39 ]
  br i1 %cmp46497, label %if.then, label %if.end

if.then:                                          ; preds = %for.body45
  call void @send_field(i8* %0, i32 4, i32 %j.0496) #5
  %.pre = load i32* @this_node, align 4, !tbaa !10
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body45
  %37 = phi i32 [ %.pre, %if.then ], [ %36, %for.body45 ]
  %cmp48 = icmp eq i32 %37, %j.0496
  br i1 %cmp48, label %if.then50, label %if.end52

if.then50:                                        ; preds = %if.end
  call void @get_field(i8* %0, i32 4) #5
  call void @send_integer(i32 0, i32* %chksum) #5
  %.pr = load i32* @this_node, align 4, !tbaa !10
  br label %if.end52

if.end52:                                         ; preds = %if.then50, %if.end
  %38 = phi i32 [ %.pr, %if.then50 ], [ %37, %if.end ]
  %cmp53 = icmp eq i32 %38, 0
  br i1 %cmp53, label %if.then55, label %for.inc58

if.then55:                                        ; preds = %if.end52
  call void @receive_integer(i32* %utmp) #5
  %39 = load i32* %utmp, align 4, !tbaa !10
  %40 = load i32* %chksum, align 4, !tbaa !10
  %add56 = add i32 %40, %39
  store i32 %add56, i32* %chksum, align 4, !tbaa !10
  br label %for.inc58

for.inc58:                                        ; preds = %if.end52, %if.then55
  %inc59 = add nsw i32 %j.0496, 1
  %call42 = call i32 (...)* @numnodes() #5
  %cmp43 = icmp slt i32 %inc59, %call42
  %41 = load i32* @this_node, align 4, !tbaa !10
  %cmp46 = icmp eq i32 %41, 0
  br i1 %cmp43, label %for.body45, label %for.end60

for.end60:                                        ; preds = %for.inc58, %for.end39
  %cmp46.lcssa = phi i1 [ %cmp46495, %for.end39 ], [ %cmp46, %for.inc58 ]
  br i1 %cmp46.lcssa, label %if.then63, label %if.end110

if.then63:                                        ; preds = %for.end60
  %call64 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([12 x i8]* @.str153, i64 0, i64 0), double %div40) #5
  %42 = load i32* %chksum, align 4, !tbaa !10
  %call65 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([15 x i8]* @.str154, i64 0, i64 0), i32 %42) #5
  %43 = load i32* %chksum, align 4, !tbaa !10
  %call66 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([17 x i8]* @.str155, i64 0, i64 0), i32 %43) #5
  %call67 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([16 x i8]* @.str156, i64 0, i64 0), double %div) #5
  %call68 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([38 x i8]* @.str157, i64 0, i64 0), i8* %filename) #5
  %call69 = call %struct._IO_FILE* @fopen(i8* %filename, i8* getelementptr inbounds ([2 x i8]* @.str26, i64 0, i64 0)) #5
  %cmp70 = icmp eq %struct._IO_FILE* %call69, null
  br i1 %cmp70, label %if.then72, label %if.end74

if.then72:                                        ; preds = %if.then63
  %call73 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([31 x i8]* @.str158, i64 0, i64 0), i8* %filename) #5
  call void @terminate(i32 1) #5
  br label %if.end74

if.end74:                                         ; preds = %if.then72, %if.then63
  %44 = call i64 @fwrite(i8* getelementptr inbounds ([14 x i8]* @.str159, i64 0, i64 0), i64 13, i64 1, %struct._IO_FILE* %call69) #5
  %45 = call i64 @fwrite(i8* getelementptr inbounds ([25 x i8]* @.str160, i64 0, i64 0), i64 24, i64 1, %struct._IO_FILE* %call69) #5
  %46 = load i32* @nx, align 4, !tbaa !10
  %call77 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %call69, i8* getelementptr inbounds ([18 x i8]* @.str161, i64 0, i64 0), i32 %46) #5
  %47 = load i32* @ny, align 4, !tbaa !10
  %call78 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %call69, i8* getelementptr inbounds ([18 x i8]* @.str162, i64 0, i64 0), i32 %47) #5
  %48 = load i32* @nz, align 4, !tbaa !10
  %call79 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %call69, i8* getelementptr inbounds ([18 x i8]* @.str163, i64 0, i64 0), i32 %48) #5
  %49 = load i32* @nt, align 4, !tbaa !10
  %call80 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %call69, i8* getelementptr inbounds ([18 x i8]* @.str164, i64 0, i64 0), i32 %49) #5
  %50 = load i32* %chksum, align 4, !tbaa !10
  %call81 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %call69, i8* getelementptr inbounds ([15 x i8]* @.str165, i64 0, i64 0), i32 %50) #5
  %call82 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %call69, i8* getelementptr inbounds ([20 x i8]* @.str166, i64 0, i64 0), double %div40) #5
  %call83 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %call69, i8* getelementptr inbounds ([19 x i8]* @.str167, i64 0, i64 0), double %div) #5
  %call84 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %call69, i8* getelementptr inbounds ([18 x i8]* @.str168, i64 0, i64 0), i8* getelementptr inbounds ([256 x i8]* @ensemble_id, i64 0, i64 0)) #5
  %51 = load i32* @sequence_number, align 4, !tbaa !10
  %call85 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %call69, i8* getelementptr inbounds ([22 x i8]* @.str169, i64 0, i64 0), i32 %51) #5
  %52 = call i64 @fwrite(i8* getelementptr inbounds ([33 x i8]* @.str170, i64 0, i64 0), i64 32, i64 1, %struct._IO_FILE* %call69) #5
  %arraydecay87 = getelementptr inbounds %struct.gauge_header* %1, i64 0, i32 1, i64 0
  %call88 = call i32 @write_gauge_info_item(%struct._IO_FILE* %call69, i8* getelementptr inbounds ([11 x i8]* @.str12, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str28, i64 0, i64 0), i8* %arraydecay87, i32 0, i32 0)
  %arraydecay89 = getelementptr inbounds [30 x i8]* %sums, i64 0, i64 0
  %sum29 = getelementptr inbounds %struct.gauge_file* %call1, i64 0, i32 6, i32 1
  %53 = load i32* %sum29, align 4, !tbaa !20
  %sum31 = getelementptr inbounds %struct.gauge_file* %call1, i64 0, i32 6, i32 0
  %54 = load i32* %sum31, align 4, !tbaa !21
  %call91 = call i32 (i8*, i8*, ...)* @sprintf(i8* %arraydecay89, i8* getelementptr inbounds ([6 x i8]* @.str29, i64 0, i64 0), i32 %53, i32 %54) #5
  %call93 = call i32 @write_gauge_info_item(%struct._IO_FILE* %call69, i8* getelementptr inbounds ([10 x i8]* @.str30, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str28, i64 0, i64 0), i8* %arraydecay89, i32 0, i32 0)
  %call94 = call i32 @write_gauge_info_item(%struct._IO_FILE* %call69, i8* getelementptr inbounds ([3 x i8]* @.str31, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8]* @.str, i64 0, i64 0), i8* bitcast (i32* @nx to i8*), i32 0, i32 0)
  %call95 = call i32 @write_gauge_info_item(%struct._IO_FILE* %call69, i8* getelementptr inbounds ([3 x i8]* @.str32, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8]* @.str, i64 0, i64 0), i8* bitcast (i32* @ny to i8*), i32 0, i32 0)
  %call96 = call i32 @write_gauge_info_item(%struct._IO_FILE* %call69, i8* getelementptr inbounds ([3 x i8]* @.str33, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8]* @.str, i64 0, i64 0), i8* bitcast (i32* @nz to i8*), i32 0, i32 0)
  %call97 = call i32 @write_gauge_info_item(%struct._IO_FILE* %call69, i8* getelementptr inbounds ([3 x i8]* @.str34, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8]* @.str, i64 0, i64 0), i8* bitcast (i32* @nt to i8*), i32 0, i32 0)
  call void @write_appl_gauge_info(%struct._IO_FILE* %call69) #5
  %55 = call i64 @fwrite(i8* getelementptr inbounds ([33 x i8]* @.str171, i64 0, i64 0), i64 32, i64 1, %struct._IO_FILE* %call69) #5
  %56 = call i64 @fwrite(i8* getelementptr inbounds ([12 x i8]* @.str6, i64 0, i64 0), i64 11, i64 1, %struct._IO_FILE* %call69) #5
  %57 = load i32* @nx, align 4, !tbaa !10
  %58 = load i32* @ny, align 4, !tbaa !10
  %mul100 = mul nsw i32 %58, %57
  %59 = load i32* @nz, align 4, !tbaa !10
  %mul101 = mul nsw i32 %mul100, %59
  %mul102 = mul nsw i32 %mul101, 48
  %conv103 = sext i32 %mul102 to i64
  %call104 = call i8* @calloc(i64 %conv103, i64 8) #5
  %60 = bitcast i8* %call104 to double*
  %cmp105 = icmp eq i8* %call104, null
  br i1 %cmp105, label %if.then107, label %if.end110

if.then107:                                       ; preds = %if.end74
  %puts464 = call i32 @puts(i8* getelementptr inbounds ([28 x i8]* @str204, i64 0, i64 0))
  call void @terminate(i32 1) #5
  br label %if.end110

if.end110:                                        ; preds = %if.end74, %if.then107, %for.end60
  %outfile.0 = phi %struct._IO_FILE* [ %call69, %if.then107 ], [ %call69, %if.end74 ], [ undef, %for.end60 ]
  %uout.0 = phi double* [ %60, %if.then107 ], [ %60, %if.end74 ], [ undef, %for.end60 ]
  %vol3.0 = phi i32 [ %mul101, %if.then107 ], [ %mul101, %if.end74 ], [ undef, %for.end60 ]
  call void (...)* @g_sync() #5
  %61 = load i32* @nt, align 4, !tbaa !10
  %cmp112490 = icmp sgt i32 %61, 0
  br i1 %cmp112490, label %for.cond115.preheader.lr.ph, label %for.end323

for.cond115.preheader.lr.ph:                      ; preds = %if.end110
  %62 = bitcast double* %uout.0 to i32*
  %mul308 = mul nsw i32 %vol3.0, 48
  %63 = bitcast double* %uout.0 to i8*
  %conv311 = sext i32 %mul308 to i64
  %mul312 = shl nsw i64 %conv311, 3
  br label %for.cond115.preheader

for.cond115.preheader:                            ; preds = %for.cond115.preheader.lr.ph, %for.inc321
  %currentnode.0492 = phi i32 [ 0, %for.cond115.preheader.lr.ph ], [ %currentnode.1.lcssa, %for.inc321 ]
  %tslice.0491 = phi i32 [ 0, %for.cond115.preheader.lr.ph ], [ %inc322, %for.inc321 ]
  %64 = load i32* @nz, align 4, !tbaa !10
  %cmp116485 = icmp sgt i32 %64, 0
  br i1 %cmp116485, label %for.cond119.preheader.lr.ph, label %for.end303

for.cond119.preheader.lr.ph:                      ; preds = %for.cond115.preheader
  %.pre559 = load i32* @ny, align 4, !tbaa !10
  br label %for.cond119.preheader

for.cond119.preheader:                            ; preds = %for.cond119.preheader.lr.ph, %for.inc301
  %65 = phi i32 [ %64, %for.cond119.preheader.lr.ph ], [ %113, %for.inc301 ]
  %66 = phi i32 [ %.pre559, %for.cond119.preheader.lr.ph ], [ %114, %for.inc301 ]
  %currentnode.1488 = phi i32 [ %currentnode.0492, %for.cond119.preheader.lr.ph ], [ %currentnode.2.lcssa, %for.inc301 ]
  %j.1487 = phi i32 [ 0, %for.cond119.preheader.lr.ph ], [ %j.2.lcssa, %for.inc301 ]
  %z.0486 = phi i32 [ 0, %for.cond119.preheader.lr.ph ], [ %inc302, %for.inc301 ]
  %cmp120479 = icmp sgt i32 %66, 0
  br i1 %cmp120479, label %for.cond123.preheader.lr.ph, label %for.inc301

for.cond123.preheader.lr.ph:                      ; preds = %for.cond119.preheader
  %.pre560 = load i32* @nx, align 4, !tbaa !10
  br label %for.cond123.preheader

for.cond123.preheader:                            ; preds = %for.cond123.preheader.lr.ph, %for.inc298
  %67 = phi i32 [ %66, %for.cond123.preheader.lr.ph ], [ %111, %for.inc298 ]
  %68 = phi i32 [ %.pre560, %for.cond123.preheader.lr.ph ], [ %112, %for.inc298 ]
  %currentnode.2482 = phi i32 [ %currentnode.1488, %for.cond123.preheader.lr.ph ], [ %currentnode.3.lcssa, %for.inc298 ]
  %j.2481 = phi i32 [ %j.1487, %for.cond123.preheader.lr.ph ], [ %j.3.lcssa, %for.inc298 ]
  %y.0480 = phi i32 [ 0, %for.cond123.preheader.lr.ph ], [ %inc299, %for.inc298 ]
  %cmp124474 = icmp sgt i32 %68, 0
  br i1 %cmp124474, label %for.body126, label %for.inc298

for.body126:                                      ; preds = %for.cond123.preheader, %for.inc295
  %currentnode.3477 = phi i32 [ %currentnode.4, %for.inc295 ], [ %currentnode.2482, %for.cond123.preheader ]
  %j.3476 = phi i32 [ %j.4, %for.inc295 ], [ %j.2481, %for.cond123.preheader ]
  %x.0475 = phi i32 [ %inc296, %for.inc295 ], [ 0, %for.cond123.preheader ]
  %call127 = call i32 @node_number(i32 %x.0475, i32 %y.0480, i32 %z.0486, i32 %tslice.0491) #5
  %cmp128 = icmp eq i32 %call127, %currentnode.3477
  br i1 %cmp128, label %if.end146thread-pre-split, label %if.then130

if.then130:                                       ; preds = %for.body126
  %69 = load i32* @this_node, align 4, !tbaa !10
  %cmp131 = icmp eq i32 %69, 0
  %cmp133 = icmp ne i32 %call127, 0
  %or.cond = and i1 %cmp131, %cmp133
  br i1 %or.cond, label %if.then135, label %if.end137

if.then135:                                       ; preds = %if.then130
  call void @send_field(i8* %0, i32 4, i32 %call127) #5
  %.pre561 = load i32* @this_node, align 4, !tbaa !10
  br label %if.end137

if.end137:                                        ; preds = %if.then135, %if.then130
  %70 = phi i32 [ %.pre561, %if.then135 ], [ %69, %if.then130 ]
  %cmp138 = icmp eq i32 %70, %call127
  %or.cond330 = and i1 %cmp138, %cmp133
  br i1 %or.cond330, label %if.then143, label %if.end146

if.then143:                                       ; preds = %if.end137
  call void @get_field(i8* %0, i32 4) #5
  br label %if.end146thread-pre-split

if.end146thread-pre-split:                        ; preds = %for.body126, %if.then143
  %currentnode.4.ph = phi i32 [ %call127, %if.then143 ], [ %currentnode.3477, %for.body126 ]
  %.pr465 = load i32* @this_node, align 4, !tbaa !10
  br label %if.end146

if.end146:                                        ; preds = %if.end146thread-pre-split, %if.end137
  %71 = phi i32 [ %.pr465, %if.end146thread-pre-split ], [ %70, %if.end137 ]
  %currentnode.4 = phi i32 [ %currentnode.4.ph, %if.end146thread-pre-split ], [ %call127, %if.end137 ]
  %cmp147 = icmp eq i32 %71, 0
  br i1 %cmp147, label %if.then149, label %if.else273

if.then149:                                       ; preds = %if.end146
  %cmp150 = icmp eq i32 %currentnode.4, 0
  br i1 %cmp150, label %if.then152, label %if.else

if.then152:                                       ; preds = %if.then149
  %call153 = call i32 @node_index(i32 %x.0475, i32 %y.0480, i32 %z.0486, i32 %tslice.0491) #5
  %idxprom154 = sext i32 %call153 to i64
  %72 = load %struct.site** @lattice, align 8, !tbaa !8
  %mul182 = mul nsw i32 %j.3476, 48
  br label %for.cond160.preheader

for.cond160.preheader:                            ; preds = %for.cond160.preheader, %if.then152
  %indvars.iv540 = phi i64 [ 0, %if.then152 ], [ %indvars.iv.next541, %for.cond160.preheader ]
  %73 = mul nsw i64 %indvars.iv540, 12
  %74 = trunc i64 %73 to i32
  %add181 = add i32 %74, %mul182
  %real176 = getelementptr inbounds %struct.site* %72, i64 %idxprom154, i32 8, i64 %indvars.iv540, i32 0, i64 0, i64 0, i32 0
  %75 = load double* %real176, align 8, !tbaa !34
  %idxprom184 = sext i32 %add181 to i64
  %arrayidx185 = getelementptr inbounds double* %uout.0, i64 %idxprom184
  store double %75, double* %arrayidx185, align 8, !tbaa !11
  %imag194 = getelementptr inbounds %struct.site* %72, i64 %idxprom154, i32 8, i64 %indvars.iv540, i32 0, i64 0, i64 0, i32 1
  %76 = load double* %imag194, align 8, !tbaa !36
  %add202567 = or i32 %add181, 1
  %idxprom203 = sext i32 %add202567 to i64
  %arrayidx204 = getelementptr inbounds double* %uout.0, i64 %idxprom203
  store double %76, double* %arrayidx204, align 8, !tbaa !11
  %real176.1 = getelementptr inbounds %struct.site* %72, i64 %idxprom154, i32 8, i64 %indvars.iv540, i32 0, i64 0, i64 1, i32 0
  %77 = load double* %real176.1, align 8, !tbaa !34
  %add183.1568 = or i32 %add181, 2
  %idxprom184.1 = sext i32 %add183.1568 to i64
  %arrayidx185.1 = getelementptr inbounds double* %uout.0, i64 %idxprom184.1
  store double %77, double* %arrayidx185.1, align 8, !tbaa !11
  %imag194.1 = getelementptr inbounds %struct.site* %72, i64 %idxprom154, i32 8, i64 %indvars.iv540, i32 0, i64 0, i64 1, i32 1
  %78 = load double* %imag194.1, align 8, !tbaa !36
  %add202.1569 = or i32 %add181, 3
  %idxprom203.1 = sext i32 %add202.1569 to i64
  %arrayidx204.1 = getelementptr inbounds double* %uout.0, i64 %idxprom203.1
  store double %78, double* %arrayidx204.1, align 8, !tbaa !11
  %real176.2 = getelementptr inbounds %struct.site* %72, i64 %idxprom154, i32 8, i64 %indvars.iv540, i32 0, i64 0, i64 2, i32 0
  %79 = load double* %real176.2, align 8, !tbaa !34
  %add183.2 = add i32 %add181, 4
  %idxprom184.2 = sext i32 %add183.2 to i64
  %arrayidx185.2 = getelementptr inbounds double* %uout.0, i64 %idxprom184.2
  store double %79, double* %arrayidx185.2, align 8, !tbaa !11
  %imag194.2 = getelementptr inbounds %struct.site* %72, i64 %idxprom154, i32 8, i64 %indvars.iv540, i32 0, i64 0, i64 2, i32 1
  %80 = load double* %imag194.2, align 8, !tbaa !36
  %add202.2 = add i32 %add181, 5
  %idxprom203.2 = sext i32 %add202.2 to i64
  %arrayidx204.2 = getelementptr inbounds double* %uout.0, i64 %idxprom203.2
  store double %80, double* %arrayidx204.2, align 8, !tbaa !11
  %real176.1532 = getelementptr inbounds %struct.site* %72, i64 %idxprom154, i32 8, i64 %indvars.iv540, i32 0, i64 1, i64 0, i32 0
  %81 = load double* %real176.1532, align 8, !tbaa !34
  %add183.1533 = add i32 %add181, 6
  %idxprom184.1534 = sext i32 %add183.1533 to i64
  %arrayidx185.1535 = getelementptr inbounds double* %uout.0, i64 %idxprom184.1534
  store double %81, double* %arrayidx185.1535, align 8, !tbaa !11
  %imag194.1536 = getelementptr inbounds %struct.site* %72, i64 %idxprom154, i32 8, i64 %indvars.iv540, i32 0, i64 1, i64 0, i32 1
  %82 = load double* %imag194.1536, align 8, !tbaa !36
  %add202.1537 = add i32 %add181, 7
  %idxprom203.1538 = sext i32 %add202.1537 to i64
  %arrayidx204.1539 = getelementptr inbounds double* %uout.0, i64 %idxprom203.1538
  store double %82, double* %arrayidx204.1539, align 8, !tbaa !11
  %real176.1.1 = getelementptr inbounds %struct.site* %72, i64 %idxprom154, i32 8, i64 %indvars.iv540, i32 0, i64 1, i64 1, i32 0
  %83 = load double* %real176.1.1, align 8, !tbaa !34
  %add183.1.1 = add i32 %add181, 8
  %idxprom184.1.1 = sext i32 %add183.1.1 to i64
  %arrayidx185.1.1 = getelementptr inbounds double* %uout.0, i64 %idxprom184.1.1
  store double %83, double* %arrayidx185.1.1, align 8, !tbaa !11
  %imag194.1.1 = getelementptr inbounds %struct.site* %72, i64 %idxprom154, i32 8, i64 %indvars.iv540, i32 0, i64 1, i64 1, i32 1
  %84 = load double* %imag194.1.1, align 8, !tbaa !36
  %add202.1.1 = add i32 %add181, 9
  %idxprom203.1.1 = sext i32 %add202.1.1 to i64
  %arrayidx204.1.1 = getelementptr inbounds double* %uout.0, i64 %idxprom203.1.1
  store double %84, double* %arrayidx204.1.1, align 8, !tbaa !11
  %real176.2.1 = getelementptr inbounds %struct.site* %72, i64 %idxprom154, i32 8, i64 %indvars.iv540, i32 0, i64 1, i64 2, i32 0
  %85 = load double* %real176.2.1, align 8, !tbaa !34
  %add183.2.1 = add i32 %add181, 10
  %idxprom184.2.1 = sext i32 %add183.2.1 to i64
  %arrayidx185.2.1 = getelementptr inbounds double* %uout.0, i64 %idxprom184.2.1
  store double %85, double* %arrayidx185.2.1, align 8, !tbaa !11
  %imag194.2.1 = getelementptr inbounds %struct.site* %72, i64 %idxprom154, i32 8, i64 %indvars.iv540, i32 0, i64 1, i64 2, i32 1
  %86 = load double* %imag194.2.1, align 8, !tbaa !36
  %add202.2.1 = add i32 %add181, 11
  %idxprom203.2.1 = sext i32 %add202.2.1 to i64
  %arrayidx204.2.1 = getelementptr inbounds double* %uout.0, i64 %idxprom203.2.1
  store double %86, double* %arrayidx204.2.1, align 8, !tbaa !11
  %indvars.iv.next541 = add nuw nsw i64 %indvars.iv540, 1
  %exitcond543 = icmp eq i64 %indvars.iv.next541, 4
  br i1 %exitcond543, label %if.end271, label %for.cond160.preheader

if.else:                                          ; preds = %if.then149
  call void @get_field(i8* %0, i32 576) #5
  %mul240 = mul nsw i32 %j.3476, 48
  br label %for.cond219.preheader

for.cond219.preheader:                            ; preds = %for.cond219.preheader, %if.else
  %indvars.iv = phi i64 [ 0, %if.else ], [ %indvars.iv.next, %for.cond219.preheader ]
  %87 = mul nsw i64 %indvars.iv, 12
  %88 = trunc i64 %87 to i32
  %add239 = add i32 %88, %mul240
  %real234 = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i64 0, i64 %indvars.iv, i32 0, i64 0, i64 0, i32 0
  %89 = load double* %real234, align 16, !tbaa !34
  %idxprom242 = sext i32 %add239 to i64
  %arrayidx243 = getelementptr inbounds double* %uout.0, i64 %idxprom242
  store double %89, double* %arrayidx243, align 8, !tbaa !11
  %imag251 = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i64 0, i64 %indvars.iv, i32 0, i64 0, i64 0, i32 1
  %90 = load double* %imag251, align 8, !tbaa !36
  %add259564 = or i32 %add239, 1
  %idxprom260 = sext i32 %add259564 to i64
  %arrayidx261 = getelementptr inbounds double* %uout.0, i64 %idxprom260
  store double %90, double* %arrayidx261, align 8, !tbaa !11
  %real234.1 = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i64 0, i64 %indvars.iv, i32 0, i64 0, i64 1, i32 0
  %91 = load double* %real234.1, align 16, !tbaa !34
  %add241.1565 = or i32 %add239, 2
  %idxprom242.1 = sext i32 %add241.1565 to i64
  %arrayidx243.1 = getelementptr inbounds double* %uout.0, i64 %idxprom242.1
  store double %91, double* %arrayidx243.1, align 8, !tbaa !11
  %imag251.1 = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i64 0, i64 %indvars.iv, i32 0, i64 0, i64 1, i32 1
  %92 = load double* %imag251.1, align 8, !tbaa !36
  %add259.1566 = or i32 %add239, 3
  %idxprom260.1 = sext i32 %add259.1566 to i64
  %arrayidx261.1 = getelementptr inbounds double* %uout.0, i64 %idxprom260.1
  store double %92, double* %arrayidx261.1, align 8, !tbaa !11
  %real234.2 = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i64 0, i64 %indvars.iv, i32 0, i64 0, i64 2, i32 0
  %93 = load double* %real234.2, align 16, !tbaa !34
  %add241.2 = add i32 %add239, 4
  %idxprom242.2 = sext i32 %add241.2 to i64
  %arrayidx243.2 = getelementptr inbounds double* %uout.0, i64 %idxprom242.2
  store double %93, double* %arrayidx243.2, align 8, !tbaa !11
  %imag251.2 = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i64 0, i64 %indvars.iv, i32 0, i64 0, i64 2, i32 1
  %94 = load double* %imag251.2, align 8, !tbaa !36
  %add259.2 = add i32 %add239, 5
  %idxprom260.2 = sext i32 %add259.2 to i64
  %arrayidx261.2 = getelementptr inbounds double* %uout.0, i64 %idxprom260.2
  store double %94, double* %arrayidx261.2, align 8, !tbaa !11
  %real234.1513 = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i64 0, i64 %indvars.iv, i32 0, i64 1, i64 0, i32 0
  %95 = load double* %real234.1513, align 16, !tbaa !34
  %add241.1514 = add i32 %add239, 6
  %idxprom242.1515 = sext i32 %add241.1514 to i64
  %arrayidx243.1516 = getelementptr inbounds double* %uout.0, i64 %idxprom242.1515
  store double %95, double* %arrayidx243.1516, align 8, !tbaa !11
  %imag251.1517 = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i64 0, i64 %indvars.iv, i32 0, i64 1, i64 0, i32 1
  %96 = load double* %imag251.1517, align 8, !tbaa !36
  %add259.1518 = add i32 %add239, 7
  %idxprom260.1519 = sext i32 %add259.1518 to i64
  %arrayidx261.1520 = getelementptr inbounds double* %uout.0, i64 %idxprom260.1519
  store double %96, double* %arrayidx261.1520, align 8, !tbaa !11
  %real234.1.1 = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i64 0, i64 %indvars.iv, i32 0, i64 1, i64 1, i32 0
  %97 = load double* %real234.1.1, align 16, !tbaa !34
  %add241.1.1 = add i32 %add239, 8
  %idxprom242.1.1 = sext i32 %add241.1.1 to i64
  %arrayidx243.1.1 = getelementptr inbounds double* %uout.0, i64 %idxprom242.1.1
  store double %97, double* %arrayidx243.1.1, align 8, !tbaa !11
  %imag251.1.1 = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i64 0, i64 %indvars.iv, i32 0, i64 1, i64 1, i32 1
  %98 = load double* %imag251.1.1, align 8, !tbaa !36
  %add259.1.1 = add i32 %add239, 9
  %idxprom260.1.1 = sext i32 %add259.1.1 to i64
  %arrayidx261.1.1 = getelementptr inbounds double* %uout.0, i64 %idxprom260.1.1
  store double %98, double* %arrayidx261.1.1, align 8, !tbaa !11
  %real234.2.1 = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i64 0, i64 %indvars.iv, i32 0, i64 1, i64 2, i32 0
  %99 = load double* %real234.2.1, align 16, !tbaa !34
  %add241.2.1 = add i32 %add239, 10
  %idxprom242.2.1 = sext i32 %add241.2.1 to i64
  %arrayidx243.2.1 = getelementptr inbounds double* %uout.0, i64 %idxprom242.2.1
  store double %99, double* %arrayidx243.2.1, align 8, !tbaa !11
  %imag251.2.1 = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i64 0, i64 %indvars.iv, i32 0, i64 1, i64 2, i32 1
  %100 = load double* %imag251.2.1, align 8, !tbaa !36
  %add259.2.1 = add i32 %add239, 11
  %idxprom260.2.1 = sext i32 %add259.2.1 to i64
  %arrayidx261.2.1 = getelementptr inbounds double* %uout.0, i64 %idxprom260.2.1
  store double %100, double* %arrayidx261.2.1, align 8, !tbaa !11
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 4
  br i1 %exitcond, label %if.end271, label %for.cond219.preheader

if.end271:                                        ; preds = %for.cond219.preheader, %for.cond160.preheader
  %inc272 = add nsw i32 %j.3476, 1
  br label %for.inc295

if.else273:                                       ; preds = %if.end146
  %cmp274 = icmp eq i32 %71, %currentnode.4
  br i1 %cmp274, label %if.then276, label %for.inc295

if.then276:                                       ; preds = %if.else273
  %call277 = call i32 @node_index(i32 %x.0475, i32 %y.0480, i32 %z.0486, i32 %tslice.0491) #5
  %idxprom285 = sext i32 %call277 to i64
  %101 = load %struct.site** @lattice, align 8, !tbaa !8
  %arrayidx288 = getelementptr inbounds %struct.site* %101, i64 %idxprom285, i32 8, i64 0
  %102 = bitcast [4 x %struct.su3_matrix]* %lbuf to i8*
  %103 = bitcast %struct.su3_matrix* %arrayidx288 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %102, i8* %103, i64 144, i32 8, i1 false), !tbaa.struct !30
  %arrayidx283.1 = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i64 0, i64 1
  %arrayidx288.1 = getelementptr inbounds %struct.site* %101, i64 %idxprom285, i32 8, i64 1
  %104 = bitcast %struct.su3_matrix* %arrayidx283.1 to i8*
  %105 = bitcast %struct.su3_matrix* %arrayidx288.1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %104, i8* %105, i64 144, i32 8, i1 false), !tbaa.struct !30
  %arrayidx283.2 = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i64 0, i64 2
  %arrayidx288.2 = getelementptr inbounds %struct.site* %101, i64 %idxprom285, i32 8, i64 2
  %106 = bitcast %struct.su3_matrix* %arrayidx283.2 to i8*
  %107 = bitcast %struct.su3_matrix* %arrayidx288.2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %106, i8* %107, i64 144, i32 8, i1 false), !tbaa.struct !30
  %arrayidx283.3 = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i64 0, i64 3
  %arrayidx288.3 = getelementptr inbounds %struct.site* %101, i64 %idxprom285, i32 8, i64 3
  %108 = bitcast %struct.su3_matrix* %arrayidx283.3 to i8*
  %109 = bitcast %struct.su3_matrix* %arrayidx288.3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %108, i8* %109, i64 144, i32 8, i1 false), !tbaa.struct !30
  call void @send_field(i8* %0, i32 576, i32 0) #5
  br label %for.inc295

for.inc295:                                       ; preds = %if.end271, %if.then276, %if.else273
  %j.4 = phi i32 [ %inc272, %if.end271 ], [ %j.3476, %if.then276 ], [ %j.3476, %if.else273 ]
  %inc296 = add nsw i32 %x.0475, 1
  %110 = load i32* @nx, align 4, !tbaa !10
  %cmp124 = icmp slt i32 %inc296, %110
  br i1 %cmp124, label %for.body126, label %for.cond123.for.inc298_crit_edge

for.cond123.for.inc298_crit_edge:                 ; preds = %for.inc295
  %.pre562 = load i32* @ny, align 4, !tbaa !10
  br label %for.inc298

for.inc298:                                       ; preds = %for.cond123.for.inc298_crit_edge, %for.cond123.preheader
  %111 = phi i32 [ %.pre562, %for.cond123.for.inc298_crit_edge ], [ %67, %for.cond123.preheader ]
  %112 = phi i32 [ %110, %for.cond123.for.inc298_crit_edge ], [ %68, %for.cond123.preheader ]
  %currentnode.3.lcssa = phi i32 [ %currentnode.4, %for.cond123.for.inc298_crit_edge ], [ %currentnode.2482, %for.cond123.preheader ]
  %j.3.lcssa = phi i32 [ %j.4, %for.cond123.for.inc298_crit_edge ], [ %j.2481, %for.cond123.preheader ]
  %inc299 = add nsw i32 %y.0480, 1
  %cmp120 = icmp slt i32 %inc299, %111
  br i1 %cmp120, label %for.cond123.preheader, label %for.cond119.for.inc301_crit_edge

for.cond119.for.inc301_crit_edge:                 ; preds = %for.inc298
  %.pre563 = load i32* @nz, align 4, !tbaa !10
  br label %for.inc301

for.inc301:                                       ; preds = %for.cond119.for.inc301_crit_edge, %for.cond119.preheader
  %113 = phi i32 [ %.pre563, %for.cond119.for.inc301_crit_edge ], [ %65, %for.cond119.preheader ]
  %114 = phi i32 [ %111, %for.cond119.for.inc301_crit_edge ], [ %66, %for.cond119.preheader ]
  %currentnode.2.lcssa = phi i32 [ %currentnode.3.lcssa, %for.cond119.for.inc301_crit_edge ], [ %currentnode.1488, %for.cond119.preheader ]
  %j.2.lcssa = phi i32 [ %j.3.lcssa, %for.cond119.for.inc301_crit_edge ], [ %j.1487, %for.cond119.preheader ]
  %inc302 = add nsw i32 %z.0486, 1
  %cmp116 = icmp slt i32 %inc302, %113
  br i1 %cmp116, label %for.cond119.preheader, label %for.end303

for.end303:                                       ; preds = %for.inc301, %for.cond115.preheader
  %currentnode.1.lcssa = phi i32 [ %currentnode.0492, %for.cond115.preheader ], [ %currentnode.2.lcssa, %for.inc301 ]
  %115 = load i32* @this_node, align 4, !tbaa !10
  %cmp304 = icmp eq i32 %115, 0
  br i1 %cmp304, label %if.then307, label %for.inc321

if.then307:                                       ; preds = %for.end303
  call void @byterevn(i32* %62, i32 %mul308) #5
  %call313 = call i64 @fwrite(i8* %63, i64 %mul312, i64 1, %struct._IO_FILE* %outfile.0) #5
  %cmp314 = icmp eq i64 %call313, 1
  br i1 %cmp314, label %if.end318, label %if.then316

if.then316:                                       ; preds = %if.then307
  %puts = call i32 @puts(i8* getelementptr inbounds ([17 x i8]* @str203, i64 0, i64 0))
  br label %if.end318

if.end318:                                        ; preds = %if.then307, %if.then316
  %call319 = call i32 @fflush(%struct._IO_FILE* %outfile.0) #5
  br label %for.inc321

for.inc321:                                       ; preds = %for.end303, %if.end318
  %inc322 = add nsw i32 %tslice.0491, 1
  %116 = load i32* @nt, align 4, !tbaa !10
  %cmp112 = icmp slt i32 %inc322, %116
  br i1 %cmp112, label %for.cond115.preheader, label %for.end323

for.end323:                                       ; preds = %for.inc321, %if.end110
  %117 = load i32* @this_node, align 4, !tbaa !10
  %cmp324 = icmp eq i32 %117, 0
  br i1 %cmp324, label %if.then326, label %if.end329

if.then326:                                       ; preds = %for.end323
  %call327 = call i32 @fclose(%struct._IO_FILE* %outfile.0) #5
  %call328 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([29 x i8]* @.str174, i64 0, i64 0), i8* %filename) #5
  %118 = bitcast double* %uout.0 to i8*
  call void @free(i8* %118)
  br label %if.end329

if.end329:                                        ; preds = %if.then326, %for.end323
  call void (...)* @g_sync() #5
  call void @llvm.lifetime.end(i64 576, i8* %0) #5
  ret %struct.gauge_file* %call1
}

declare void @d_plaquette(double*, double*) #3

declare { double, double } @trace_su3(%struct.su3_matrix*) #3

declare void @g_doublesum(double*) #3

declare i32 @numnodes(...) #3

declare void @send_integer(i32, i32*) #3

declare void @receive_integer(i32*) #3

; Function Attrs: nounwind uwtable
define noalias %struct.gauge_file* @save_parallel_archive(i8* nocapture readnone %filename) #0 {
entry:
  %puts = tail call i32 @puts(i8* getelementptr inbounds ([48 x i8]* @str205, i64 0, i64 0))
  ret %struct.gauge_file* null
}

; Function Attrs: nounwind
declare i32 @puts(i8* nocapture readonly) #5

; Function Attrs: nounwind
declare i32 @fputc(i32, %struct._IO_FILE* nocapture) #5

; Function Attrs: nounwind
declare i32 @putchar(i32) #5

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #5

attributes #0 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readonly "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { nounwind readnone "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone }
attributes #8 = { cold nounwind }

!llvm.ident = !{!0}

!0 = metadata !{metadata !"clang version 3.5 (trunk)"}
!1 = metadata !{metadata !2, metadata !3, i64 0}
!2 = metadata !{metadata !"", metadata !3, i64 0, metadata !6, i64 8, metadata !6, i64 16}
!3 = metadata !{metadata !"int", metadata !4, i64 0}
!4 = metadata !{metadata !"omnipotent char", metadata !5, i64 0}
!5 = metadata !{metadata !"Simple C/C++ TBAA"}
!6 = metadata !{metadata !"any pointer", metadata !4, i64 0}
!7 = metadata !{metadata !2, metadata !6, i64 8}
!8 = metadata !{metadata !6, metadata !6, i64 0}
!9 = metadata !{metadata !2, metadata !6, i64 16}
!10 = metadata !{metadata !3, metadata !3, i64 0}
!11 = metadata !{metadata !12, metadata !12, i64 0}
!12 = metadata !{metadata !"double", metadata !4, i64 0}
!13 = metadata !{metadata !4, metadata !4, i64 0}
!14 = metadata !{metadata !15, metadata !3, i64 84}
!15 = metadata !{metadata !"", metadata !3, i64 0, metadata !4, i64 4, metadata !4, i64 68, metadata !3, i64 84, metadata !3, i64 88}
!16 = metadata !{metadata !17, metadata !6, i64 8}
!17 = metadata !{metadata !"", metadata !6, i64 0, metadata !6, i64 8, metadata !6, i64 16, metadata !3, i64 24, metadata !6, i64 32, metadata !3, i64 40, metadata !18, i64 44}
!18 = metadata !{metadata !"", metadata !3, i64 0, metadata !3, i64 4}
!19 = metadata !{metadata !17, metadata !6, i64 16}
!20 = metadata !{metadata !17, metadata !3, i64 48}
!21 = metadata !{metadata !17, metadata !3, i64 44}
!22 = metadata !{metadata !15, metadata !3, i64 0}
!23 = metadata !{metadata !15, metadata !3, i64 88}
!24 = metadata !{metadata !17, metadata !6, i64 0}
!25 = metadata !{metadata !17, metadata !3, i64 24}
!26 = metadata !{metadata !17, metadata !6, i64 32}
!27 = metadata !{metadata !17, metadata !3, i64 40}
!28 = metadata !{metadata !18, metadata !3, i64 4}
!29 = metadata !{metadata !18, metadata !3, i64 0}
!30 = metadata !{i64 0, i64 144, metadata !13}
!31 = metadata !{metadata !32, metadata !3, i64 0}
!32 = metadata !{metadata !"", metadata !3, i64 0, metadata !4, i64 4, metadata !3, i64 204, metadata !4, i64 208}
!33 = metadata !{metadata !32, metadata !3, i64 204}
!34 = metadata !{metadata !35, metadata !12, i64 0}
!35 = metadata !{metadata !"", metadata !12, i64 0, metadata !12, i64 8}
!36 = metadata !{metadata !35, metadata !12, i64 8}
!37 = metadata !{metadata !38, metadata !39, i64 6}
!38 = metadata !{metadata !"", metadata !39, i64 0, metadata !39, i64 2, metadata !39, i64 4, metadata !39, i64 6, metadata !4, i64 8, metadata !3, i64 12, metadata !40, i64 16, metadata !3, i64 104, metadata !4, i64 112, metadata !4, i64 688, metadata !4, i64 1264, metadata !4, i64 1840, metadata !4, i64 2160, metadata !42, i64 2192, metadata !42, i64 2240, metadata !42, i64 2288, metadata !42, i64 2336, metadata !42, i64 2384, metadata !42, i64 2432, metadata !4, i64 2480, metadata !4, i64 2672, metadata !42, i64 2864, metadata !42, i64 2912, metadata !42, i64 3056}
!39 = metadata !{metadata !"short", metadata !4, i64 0}
!40 = metadata !{metadata !"", metadata !41, i64 0, metadata !41, i64 8, metadata !41, i64 16, metadata !41, i64 24, metadata !41, i64 32, metadata !41, i64 40, metadata !41, i64 48, metadata !41, i64 56, metadata !41, i64 64, metadata !41, i64 72, metadata !12, i64 80}
!41 = metadata !{metadata !"long", metadata !4, i64 0}
!42 = metadata !{metadata !"", metadata !4, i64 0}
!43 = metadata !{metadata !38, metadata !39, i64 4}
!44 = metadata !{metadata !38, metadata !39, i64 2}
!45 = metadata !{metadata !38, metadata !39, i64 0}
!46 = metadata !{metadata !41, metadata !41, i64 0}
!47 = metadata !{metadata !48, metadata !39, i64 0}
!48 = metadata !{metadata !"", metadata !39, i64 0, metadata !39, i64 2, metadata !39, i64 4, metadata !39, i64 6, metadata !4, i64 8}
!49 = metadata !{metadata !48, metadata !39, i64 2}
!50 = metadata !{metadata !48, metadata !39, i64 4}
!51 = metadata !{metadata !48, metadata !39, i64 6}
