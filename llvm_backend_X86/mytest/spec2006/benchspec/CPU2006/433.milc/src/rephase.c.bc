; ModuleID = 'rephase.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.site = type { i16, i16, i16, i16, i8, i32, %struct.double_prn, i32, [4 x %struct.su3_matrix], [4 x %struct.su3_matrix], [4 x %struct.su3_matrix], [4 x %struct.anti_hermitmat], [4 x double], %struct.su3_vector, %struct.su3_vector, %struct.su3_vector, %struct.su3_vector, %struct.su3_vector, %struct.su3_vector, [4 x %struct.su3_vector], [4 x %struct.su3_vector], %struct.su3_vector, %struct.su3_matrix, %struct.su3_matrix }
%struct.double_prn = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, double }
%struct.anti_hermitmat = type { %struct.complex, %struct.complex, %struct.complex, double, double, double, double }
%struct.complex = type { double, double }
%struct.su3_vector = type { [3 x %struct.complex] }
%struct.su3_matrix = type { [3 x [3 x %struct.complex]] }

@lattice = external global %struct.site*
@sites_on_node = external global i32
@nt = external global i32
@phases_in = external global i32
@this_node = external global i32
@str = private unnamed_addr constant [32 x i8] c"DUMMY: you fouled up the phases\00"

; Function Attrs: nounwind uwtable
define void @phaseset() #0 {
entry:
  %0 = load i32* @sites_on_node, align 4, !tbaa !1
  %cmp65 = icmp sgt i32 %0, 0
  br i1 %cmp65, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %1 = load %struct.site** @lattice, align 8, !tbaa !5
  %2 = load i32* @nt, align 4, !tbaa !1
  %sub40 = add nsw i32 %2, -1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %i.067 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc ]
  %sit.066 = phi %struct.site* [ %1, %for.body.lr.ph ], [ %incdec.ptr, %for.inc ]
  %arrayidx = getelementptr inbounds %struct.site* %sit.066, i64 0, i32 12, i64 3
  store double 1.000000e+00, double* %arrayidx, align 8, !tbaa !7
  %t = getelementptr inbounds %struct.site* %sit.066, i64 0, i32 3
  %3 = load i16* %t, align 2, !tbaa !9
  %conv = sext i16 %3 to i32
  %rem = srem i32 %conv, 2
  %cmp1 = icmp eq i32 %rem, 1
  %arrayidx4 = getelementptr inbounds %struct.site* %sit.066, i64 0, i32 12, i64 0
  %. = select i1 %cmp1, double -1.000000e+00, double 1.000000e+00
  store double %., double* %arrayidx4, align 8, !tbaa !7
  %x = getelementptr inbounds %struct.site* %sit.066, i64 0, i32 0
  %4 = load i16* %x, align 2, !tbaa !15
  %conv7 = sext i16 %4 to i32
  %rem8 = srem i32 %conv7, 2
  %cmp9 = icmp eq i32 %rem8, 1
  br i1 %cmp9, label %if.then11, label %if.else16

if.then11:                                        ; preds = %for.body
  %sub = fsub double -0.000000e+00, %.
  %arrayidx15 = getelementptr inbounds %struct.site* %sit.066, i64 0, i32 12, i64 1
  store double %sub, double* %arrayidx15, align 8, !tbaa !7
  br label %if.end21

if.else16:                                        ; preds = %for.body
  %arrayidx20 = getelementptr inbounds %struct.site* %sit.066, i64 0, i32 12, i64 1
  store double %., double* %arrayidx20, align 8, !tbaa !7
  br label %if.end21

if.end21:                                         ; preds = %if.else16, %if.then11
  %5 = phi double [ %., %if.else16 ], [ %sub, %if.then11 ]
  %y = getelementptr inbounds %struct.site* %sit.066, i64 0, i32 1
  %6 = load i16* %y, align 2, !tbaa !16
  %conv22 = sext i16 %6 to i32
  %rem23 = srem i32 %conv22, 2
  %cmp24 = icmp eq i32 %rem23, 1
  br i1 %cmp24, label %if.then26, label %if.else32

if.then26:                                        ; preds = %if.end21
  %sub29 = fsub double -0.000000e+00, %5
  %arrayidx31 = getelementptr inbounds %struct.site* %sit.066, i64 0, i32 12, i64 2
  store double %sub29, double* %arrayidx31, align 8, !tbaa !7
  br label %if.end37

if.else32:                                        ; preds = %if.end21
  %arrayidx36 = getelementptr inbounds %struct.site* %sit.066, i64 0, i32 12, i64 2
  store double %5, double* %arrayidx36, align 8, !tbaa !7
  br label %if.end37

if.end37:                                         ; preds = %if.else32, %if.then26
  %cmp41 = icmp eq i32 %conv, %sub40
  br i1 %cmp41, label %if.then43, label %for.inc

if.then43:                                        ; preds = %if.end37
  store double -1.000000e+00, double* %arrayidx, align 8, !tbaa !7
  br label %for.inc

for.inc:                                          ; preds = %if.end37, %if.then43
  %inc = add nsw i32 %i.067, 1
  %incdec.ptr = getelementptr inbounds %struct.site* %sit.066, i64 1
  %cmp = icmp slt i32 %inc, %0
  br i1 %cmp, label %for.body, label %for.end

for.end:                                          ; preds = %for.inc, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define void @rephase(i32 %flag) #0 {
entry:
  %cmp = icmp eq i32 %flag, 1
  %0 = load i32* @phases_in, align 4
  %cmp1 = icmp eq i32 %0, 0
  %or.cond = and i1 %cmp, %cmp1
  br i1 %or.cond, label %if.end7, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %cmp2 = icmp eq i32 %flag, 0
  %cmp4 = icmp eq i32 %0, 1
  %or.cond45 = and i1 %cmp2, %cmp4
  br i1 %or.cond45, label %if.end7, label %if.then

if.then:                                          ; preds = %lor.lhs.false
  %1 = load i32* @this_node, align 4, !tbaa !1
  %cmp5 = icmp eq i32 %1, 0
  br i1 %cmp5, label %if.then6, label %if.end

if.then6:                                         ; preds = %if.then
  %puts = tail call i32 @puts(i8* getelementptr inbounds ([32 x i8]* @str, i64 0, i64 0))
  br label %if.end

if.end:                                           ; preds = %if.then6, %if.then
  tail call void @terminate(i32 1) #2
  br label %if.end7

if.end7:                                          ; preds = %lor.lhs.false, %entry, %if.end
  %2 = load i32* @sites_on_node, align 4, !tbaa !1
  %cmp867 = icmp sgt i32 %2, 0
  br i1 %cmp867, label %for.cond9.preheader.lr.ph, label %for.end44

for.cond9.preheader.lr.ph:                        ; preds = %if.end7
  %3 = load %struct.site** @lattice, align 8, !tbaa !5
  br label %for.cond9.preheader

for.cond9.preheader:                              ; preds = %for.cond9.preheader.lr.ph, %for.inc42
  %s.069 = phi %struct.site* [ %3, %for.cond9.preheader.lr.ph ], [ %incdec.ptr, %for.inc42 ]
  %i.068 = phi i32 [ 0, %for.cond9.preheader.lr.ph ], [ %inc43, %for.inc42 ]
  br label %for.cond12.preheader

for.cond12.preheader:                             ; preds = %for.cond12.preheader, %for.cond9.preheader
  %indvars.iv = phi i64 [ 0, %for.cond9.preheader ], [ %indvars.iv.next, %for.cond12.preheader ]
  %arrayidx = getelementptr inbounds %struct.site* %s.069, i64 0, i32 12, i64 %indvars.iv
  %4 = load double* %arrayidx, align 8, !tbaa !7
  %real = getelementptr inbounds %struct.site* %s.069, i64 0, i32 8, i64 %indvars.iv, i32 0, i64 0, i64 0, i32 0
  %5 = load double* %real, align 8, !tbaa !17
  %mul = fmul double %4, %5
  store double %mul, double* %real, align 8, !tbaa !17
  %6 = load double* %arrayidx, align 8, !tbaa !7
  %imag = getelementptr inbounds %struct.site* %s.069, i64 0, i32 8, i64 %indvars.iv, i32 0, i64 0, i64 0, i32 1
  %7 = load double* %imag, align 8, !tbaa !19
  %mul35 = fmul double %6, %7
  store double %mul35, double* %imag, align 8, !tbaa !19
  %8 = load double* %arrayidx, align 8, !tbaa !7
  %real.1 = getelementptr inbounds %struct.site* %s.069, i64 0, i32 8, i64 %indvars.iv, i32 0, i64 0, i64 1, i32 0
  %9 = load double* %real.1, align 8, !tbaa !17
  %mul.1 = fmul double %8, %9
  store double %mul.1, double* %real.1, align 8, !tbaa !17
  %10 = load double* %arrayidx, align 8, !tbaa !7
  %imag.1 = getelementptr inbounds %struct.site* %s.069, i64 0, i32 8, i64 %indvars.iv, i32 0, i64 0, i64 1, i32 1
  %11 = load double* %imag.1, align 8, !tbaa !19
  %mul35.1 = fmul double %10, %11
  store double %mul35.1, double* %imag.1, align 8, !tbaa !19
  %12 = load double* %arrayidx, align 8, !tbaa !7
  %real.2 = getelementptr inbounds %struct.site* %s.069, i64 0, i32 8, i64 %indvars.iv, i32 0, i64 0, i64 2, i32 0
  %13 = load double* %real.2, align 8, !tbaa !17
  %mul.2 = fmul double %12, %13
  store double %mul.2, double* %real.2, align 8, !tbaa !17
  %14 = load double* %arrayidx, align 8, !tbaa !7
  %imag.2 = getelementptr inbounds %struct.site* %s.069, i64 0, i32 8, i64 %indvars.iv, i32 0, i64 0, i64 2, i32 1
  %15 = load double* %imag.2, align 8, !tbaa !19
  %mul35.2 = fmul double %14, %15
  store double %mul35.2, double* %imag.2, align 8, !tbaa !19
  %16 = load double* %arrayidx, align 8, !tbaa !7
  %real.170 = getelementptr inbounds %struct.site* %s.069, i64 0, i32 8, i64 %indvars.iv, i32 0, i64 1, i64 0, i32 0
  %17 = load double* %real.170, align 8, !tbaa !17
  %mul.171 = fmul double %16, %17
  store double %mul.171, double* %real.170, align 8, !tbaa !17
  %18 = load double* %arrayidx, align 8, !tbaa !7
  %imag.172 = getelementptr inbounds %struct.site* %s.069, i64 0, i32 8, i64 %indvars.iv, i32 0, i64 1, i64 0, i32 1
  %19 = load double* %imag.172, align 8, !tbaa !19
  %mul35.173 = fmul double %18, %19
  store double %mul35.173, double* %imag.172, align 8, !tbaa !19
  %20 = load double* %arrayidx, align 8, !tbaa !7
  %real.1.1 = getelementptr inbounds %struct.site* %s.069, i64 0, i32 8, i64 %indvars.iv, i32 0, i64 1, i64 1, i32 0
  %21 = load double* %real.1.1, align 8, !tbaa !17
  %mul.1.1 = fmul double %20, %21
  store double %mul.1.1, double* %real.1.1, align 8, !tbaa !17
  %22 = load double* %arrayidx, align 8, !tbaa !7
  %imag.1.1 = getelementptr inbounds %struct.site* %s.069, i64 0, i32 8, i64 %indvars.iv, i32 0, i64 1, i64 1, i32 1
  %23 = load double* %imag.1.1, align 8, !tbaa !19
  %mul35.1.1 = fmul double %22, %23
  store double %mul35.1.1, double* %imag.1.1, align 8, !tbaa !19
  %24 = load double* %arrayidx, align 8, !tbaa !7
  %real.2.1 = getelementptr inbounds %struct.site* %s.069, i64 0, i32 8, i64 %indvars.iv, i32 0, i64 1, i64 2, i32 0
  %25 = load double* %real.2.1, align 8, !tbaa !17
  %mul.2.1 = fmul double %24, %25
  store double %mul.2.1, double* %real.2.1, align 8, !tbaa !17
  %26 = load double* %arrayidx, align 8, !tbaa !7
  %imag.2.1 = getelementptr inbounds %struct.site* %s.069, i64 0, i32 8, i64 %indvars.iv, i32 0, i64 1, i64 2, i32 1
  %27 = load double* %imag.2.1, align 8, !tbaa !19
  %mul35.2.1 = fmul double %26, %27
  store double %mul35.2.1, double* %imag.2.1, align 8, !tbaa !19
  %28 = load double* %arrayidx, align 8, !tbaa !7
  %real.274 = getelementptr inbounds %struct.site* %s.069, i64 0, i32 8, i64 %indvars.iv, i32 0, i64 2, i64 0, i32 0
  %29 = load double* %real.274, align 8, !tbaa !17
  %mul.275 = fmul double %28, %29
  store double %mul.275, double* %real.274, align 8, !tbaa !17
  %30 = load double* %arrayidx, align 8, !tbaa !7
  %imag.276 = getelementptr inbounds %struct.site* %s.069, i64 0, i32 8, i64 %indvars.iv, i32 0, i64 2, i64 0, i32 1
  %31 = load double* %imag.276, align 8, !tbaa !19
  %mul35.277 = fmul double %30, %31
  store double %mul35.277, double* %imag.276, align 8, !tbaa !19
  %32 = load double* %arrayidx, align 8, !tbaa !7
  %real.1.2 = getelementptr inbounds %struct.site* %s.069, i64 0, i32 8, i64 %indvars.iv, i32 0, i64 2, i64 1, i32 0
  %33 = load double* %real.1.2, align 8, !tbaa !17
  %mul.1.2 = fmul double %32, %33
  store double %mul.1.2, double* %real.1.2, align 8, !tbaa !17
  %34 = load double* %arrayidx, align 8, !tbaa !7
  %imag.1.2 = getelementptr inbounds %struct.site* %s.069, i64 0, i32 8, i64 %indvars.iv, i32 0, i64 2, i64 1, i32 1
  %35 = load double* %imag.1.2, align 8, !tbaa !19
  %mul35.1.2 = fmul double %34, %35
  store double %mul35.1.2, double* %imag.1.2, align 8, !tbaa !19
  %36 = load double* %arrayidx, align 8, !tbaa !7
  %real.2.2 = getelementptr inbounds %struct.site* %s.069, i64 0, i32 8, i64 %indvars.iv, i32 0, i64 2, i64 2, i32 0
  %37 = load double* %real.2.2, align 8, !tbaa !17
  %mul.2.2 = fmul double %36, %37
  store double %mul.2.2, double* %real.2.2, align 8, !tbaa !17
  %38 = load double* %arrayidx, align 8, !tbaa !7
  %imag.2.2 = getelementptr inbounds %struct.site* %s.069, i64 0, i32 8, i64 %indvars.iv, i32 0, i64 2, i64 2, i32 1
  %39 = load double* %imag.2.2, align 8, !tbaa !19
  %mul35.2.2 = fmul double %38, %39
  store double %mul35.2.2, double* %imag.2.2, align 8, !tbaa !19
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 4
  br i1 %exitcond, label %for.inc42, label %for.cond12.preheader

for.inc42:                                        ; preds = %for.cond12.preheader
  %inc43 = add nsw i32 %i.068, 1
  %incdec.ptr = getelementptr inbounds %struct.site* %s.069, i64 1
  %cmp8 = icmp slt i32 %inc43, %2
  br i1 %cmp8, label %for.cond9.preheader, label %for.end44

for.end44:                                        ; preds = %for.inc42, %if.end7
  store i32 %flag, i32* @phases_in, align 4, !tbaa !1
  ret void
}

declare void @terminate(i32) #1

; Function Attrs: nounwind
declare i32 @puts(i8* nocapture readonly) #2

attributes #0 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.ident = !{!0}

!0 = metadata !{metadata !"clang version 3.5 (trunk)"}
!1 = metadata !{metadata !2, metadata !2, i64 0}
!2 = metadata !{metadata !"int", metadata !3, i64 0}
!3 = metadata !{metadata !"omnipotent char", metadata !4, i64 0}
!4 = metadata !{metadata !"Simple C/C++ TBAA"}
!5 = metadata !{metadata !6, metadata !6, i64 0}
!6 = metadata !{metadata !"any pointer", metadata !3, i64 0}
!7 = metadata !{metadata !8, metadata !8, i64 0}
!8 = metadata !{metadata !"double", metadata !3, i64 0}
!9 = metadata !{metadata !10, metadata !11, i64 6}
!10 = metadata !{metadata !"", metadata !11, i64 0, metadata !11, i64 2, metadata !11, i64 4, metadata !11, i64 6, metadata !3, i64 8, metadata !2, i64 12, metadata !12, i64 16, metadata !2, i64 104, metadata !3, i64 112, metadata !3, i64 688, metadata !3, i64 1264, metadata !3, i64 1840, metadata !3, i64 2160, metadata !14, i64 2192, metadata !14, i64 2240, metadata !14, i64 2288, metadata !14, i64 2336, metadata !14, i64 2384, metadata !14, i64 2432, metadata !3, i64 2480, metadata !3, i64 2672, metadata !14, i64 2864, metadata !14, i64 2912, metadata !14, i64 3056}
!11 = metadata !{metadata !"short", metadata !3, i64 0}
!12 = metadata !{metadata !"", metadata !13, i64 0, metadata !13, i64 8, metadata !13, i64 16, metadata !13, i64 24, metadata !13, i64 32, metadata !13, i64 40, metadata !13, i64 48, metadata !13, i64 56, metadata !13, i64 64, metadata !13, i64 72, metadata !8, i64 80}
!13 = metadata !{metadata !"long", metadata !3, i64 0}
!14 = metadata !{metadata !"", metadata !3, i64 0}
!15 = metadata !{metadata !10, metadata !11, i64 0}
!16 = metadata !{metadata !10, metadata !11, i64 2}
!17 = metadata !{metadata !18, metadata !8, i64 0}
!18 = metadata !{metadata !"", metadata !8, i64 0, metadata !8, i64 8}
!19 = metadata !{metadata !18, metadata !8, i64 8}
