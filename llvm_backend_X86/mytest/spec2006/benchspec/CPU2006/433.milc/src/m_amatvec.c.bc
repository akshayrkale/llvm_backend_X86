; ModuleID = 'm_amatvec.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.su3_matrix = type { [3 x [3 x %struct.complex]] }
%struct.complex = type { double, double }
%struct.su3_vector = type { [3 x %struct.complex] }

; Function Attrs: nounwind uwtable
define void @mult_adj_su3_mat_vec(%struct.su3_matrix* nocapture readonly %a, %struct.su3_vector* nocapture readonly %b, %struct.su3_vector* nocapture %c) #0 {
entry:
  br label %for.cond1.preheader

for.cond1.preheader:                              ; preds = %for.cond1.preheader, %entry
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next, %for.cond1.preheader ]
  %real6 = getelementptr inbounds %struct.su3_matrix* %a, i64 0, i32 0, i64 0, i64 %indvars.iv, i32 0
  %0 = load double* %real6, align 8, !tbaa !1
  %imag13 = getelementptr inbounds %struct.su3_matrix* %a, i64 0, i32 0, i64 0, i64 %indvars.iv, i32 1
  %1 = load double* %imag13, align 8, !tbaa !6
  %sub = fsub double -0.000000e+00, %1
  %real19 = getelementptr inbounds %struct.su3_vector* %b, i64 0, i32 0, i64 0, i32 0
  %2 = load double* %real19, align 8, !tbaa !1
  %mul = fmul double %0, %2
  %imag24 = getelementptr inbounds %struct.su3_vector* %b, i64 0, i32 0, i64 0, i32 1
  %3 = load double* %imag24, align 8, !tbaa !6
  %mul25 = fmul double %3, %sub
  %sub26 = fsub double %mul, %mul25
  %mul33 = fmul double %0, %3
  %mul39 = fmul double %2, %sub
  %add = fadd double %mul39, %mul33
  %add43 = fadd double %sub26, 0.000000e+00
  %add46 = fadd double %add, 0.000000e+00
  %real6.1 = getelementptr inbounds %struct.su3_matrix* %a, i64 0, i32 0, i64 1, i64 %indvars.iv, i32 0
  %4 = load double* %real6.1, align 8, !tbaa !1
  %imag13.1 = getelementptr inbounds %struct.su3_matrix* %a, i64 0, i32 0, i64 1, i64 %indvars.iv, i32 1
  %5 = load double* %imag13.1, align 8, !tbaa !6
  %sub.1 = fsub double -0.000000e+00, %5
  %real19.1 = getelementptr inbounds %struct.su3_vector* %b, i64 0, i32 0, i64 1, i32 0
  %6 = load double* %real19.1, align 8, !tbaa !1
  %mul.1 = fmul double %4, %6
  %imag24.1 = getelementptr inbounds %struct.su3_vector* %b, i64 0, i32 0, i64 1, i32 1
  %7 = load double* %imag24.1, align 8, !tbaa !6
  %mul25.1 = fmul double %7, %sub.1
  %sub26.1 = fsub double %mul.1, %mul25.1
  %mul33.1 = fmul double %4, %7
  %mul39.1 = fmul double %6, %sub.1
  %add.1 = fadd double %mul39.1, %mul33.1
  %add43.1 = fadd double %add43, %sub26.1
  %add46.1 = fadd double %add46, %add.1
  %real6.2 = getelementptr inbounds %struct.su3_matrix* %a, i64 0, i32 0, i64 2, i64 %indvars.iv, i32 0
  %8 = load double* %real6.2, align 8, !tbaa !1
  %imag13.2 = getelementptr inbounds %struct.su3_matrix* %a, i64 0, i32 0, i64 2, i64 %indvars.iv, i32 1
  %9 = load double* %imag13.2, align 8, !tbaa !6
  %sub.2 = fsub double -0.000000e+00, %9
  %real19.2 = getelementptr inbounds %struct.su3_vector* %b, i64 0, i32 0, i64 2, i32 0
  %10 = load double* %real19.2, align 8, !tbaa !1
  %mul.2 = fmul double %8, %10
  %imag24.2 = getelementptr inbounds %struct.su3_vector* %b, i64 0, i32 0, i64 2, i32 1
  %11 = load double* %imag24.2, align 8, !tbaa !6
  %mul25.2 = fmul double %11, %sub.2
  %sub26.2 = fsub double %mul.2, %mul25.2
  %mul33.2 = fmul double %8, %11
  %mul39.2 = fmul double %10, %sub.2
  %add.2 = fadd double %mul39.2, %mul33.2
  %add43.2 = fadd double %add43.1, %sub26.2
  %add46.2 = fadd double %add46.1, %add.2
  %x.sroa.0.0..sroa_idx = getelementptr inbounds %struct.su3_vector* %c, i64 0, i32 0, i64 %indvars.iv, i32 0
  store double %add43.2, double* %x.sroa.0.0..sroa_idx, align 8
  %x.sroa.4.0..sroa_idx55 = getelementptr inbounds %struct.su3_vector* %c, i64 0, i32 0, i64 %indvars.iv, i32 1
  store double %add46.2, double* %x.sroa.4.0..sroa_idx55, align 8
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 3
  br i1 %exitcond, label %for.end52, label %for.cond1.preheader

for.end52:                                        ; preds = %for.cond1.preheader
  ret void
}

attributes #0 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = metadata !{metadata !"clang version 3.5 (trunk)"}
!1 = metadata !{metadata !2, metadata !3, i64 0}
!2 = metadata !{metadata !"", metadata !3, i64 0, metadata !3, i64 8}
!3 = metadata !{metadata !"double", metadata !4, i64 0}
!4 = metadata !{metadata !"omnipotent char", metadata !5, i64 0}
!5 = metadata !{metadata !"Simple C/C++ TBAA"}
!6 = metadata !{metadata !2, metadata !3, i64 8}
