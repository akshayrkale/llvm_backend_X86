; ModuleID = 'com_vanilla.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.site = type { i16, i16, i16, i16, i8, i32, %struct.double_prn, i32, [4 x %struct.su3_matrix], [4 x %struct.anti_hermitmat], [4 x double], %struct.su3_vector, %struct.su3_vector, %struct.su3_vector, %struct.su3_vector, %struct.su3_vector, %struct.su3_vector, [4 x %struct.su3_vector], %struct.su3_matrix, %struct.su3_matrix }
%struct.double_prn = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, double }
%struct.anti_hermitmat = type { %struct.complex, %struct.complex, %struct.complex, double, double, double, double }
%struct.complex = type { double, double }
%struct.su3_vector = type { [3 x %struct.complex] }
%struct.su3_matrix = type { [3 x [3 x %struct.complex]] }
%struct._IO_FILE = type opaque
%struct.msg_tag = type { i32, i32, i8*, i32 }
%struct.double_complex = type { double, double }
%struct.wilson_vector = type { [4 x %struct.su3_vector] }

@neighbor = common global i32** null, align 8
@n_gathers = common global i32 0, align 4
@nx = external global i32
@ny = external global i32
@nz = external global i32
@nt = external global i32
@this_node = external global i32
@sites_on_node = external global i32
@.str2 = private unnamed_addr constant [38 x i8] c"NODE %d: no room for neighbor vector\0A\00", align 1
@lattice = external global %struct.site*
@.str4 = private unnamed_addr constant [38 x i8] c"It mapped %d %d %d %d to %d %d %d %d\0A\00", align 1
@.str7 = private unnamed_addr constant [47 x i8] c"It's square mapped %d %d %d %d to %d %d %d %d\0A\00", align 1
@even_sites_on_node = external global i32
@g_gather_flag = global i32 0, align 4
@stderr = external constant %struct._IO_FILE*
@.str8 = private unnamed_addr constant [48 x i8] c"ERROR: node %d, two general_gathers() at once!\0A\00", align 1
@name = internal global [17 x i8] c"Scalar processor\00", align 16
@.str10 = private unnamed_addr constant [8 x i8] c"%s: %s\0A\00", align 1
@.str11 = private unnamed_addr constant [12 x i8] c"termination\00", align 1
@.str12 = private unnamed_addr constant [26 x i8] c"Termination: status = %d\0A\00", align 1
@stdout = external constant %struct._IO_FILE*
@str = private unnamed_addr constant [50 x i8] c"DUMMY! Your gather mapping is not its own inverse\00"
@str13 = private unnamed_addr constant [56 x i8] c"DUMMY! Your gather mapping does not obey claimed parity\00"
@str14 = private unnamed_addr constant [52 x i8] c"DUMMY! Your gather mapping does not stay in lattice\00"
@str15 = private unnamed_addr constant [37 x i8] c"Too many gathers! change MAX_GATHERS\00"
@str17 = private unnamed_addr constant [21 x i8] c"BOTCH: bad direction\00"
@str21 = private unnamed_addr constant [26 x i8] c"BOTCH: this never happens\00"

; Function Attrs: nounwind readnone uwtable
define void @initialize_machine(i32 %argc, i8** nocapture %argv) #0 {
entry:
  ret void
}

; Function Attrs: nounwind uwtable
define void @make_nn_gathers() #1 {
entry:
  %i = alloca i32, align 4
  %call = call i8* @calloc(i64 8, i64 8) #3
  %0 = bitcast i8* %call to i32**
  store i32** %0, i32*** @neighbor, align 8, !tbaa !1
  store i32 0, i32* @n_gathers, align 4, !tbaa !5
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.body

for.body:                                         ; preds = %entry, %for.body
  %call1 = call i32 @make_gather(void (i32, i32, i32, i32, i32*, i32, i32*, i32*, i32*, i32*)* @neighbor_coords_special, i32* %i, i32 1, i32 undef, i32 1)
  %1 = load i32* %i, align 4, !tbaa !5
  %inc = add nsw i32 %1, 1
  store i32 %inc, i32* %i, align 4, !tbaa !5
  %cmp = icmp slt i32 %inc, 4
  br i1 %cmp, label %for.body, label %for.end

for.end:                                          ; preds = %for.body
  %2 = load i32*** @neighbor, align 8, !tbaa !1
  %tt.i.sroa.4.0.pt35.i.sroa_idx316 = getelementptr inbounds i32** %2, i64 1
  %tt.i.sroa.4.0.pt35.i.sroa_idx317 = load i32** %tt.i.sroa.4.0.pt35.i.sroa_idx316, align 8
  %tt.i.sroa.5.0.pt35.i.sroa_idx518 = getelementptr inbounds i32** %2, i64 2
  %tt.i.sroa.5.0.pt35.i.sroa_idx519 = load i32** %tt.i.sroa.5.0.pt35.i.sroa_idx518, align 8
  %tt.i.sroa.6.0.pt35.i.sroa_idx720 = getelementptr inbounds i32** %2, i64 3
  %tt.i.sroa.6.0.pt35.i.sroa_idx721 = load i32** %tt.i.sroa.6.0.pt35.i.sroa_idx720, align 8
  %tt.i.sroa.7.0.pt35.i.sroa_idx922 = getelementptr inbounds i32** %2, i64 4
  %tt.i.sroa.7.0.pt35.i.sroa_idx923 = load i32** %tt.i.sroa.7.0.pt35.i.sroa_idx922, align 8
  %tt.i.sroa.9.0.pt35.i.sroa_idx26 = getelementptr inbounds i32** %2, i64 6
  %tt.i.sroa.9.0.pt35.i.sroa_cast = bitcast i32** %tt.i.sroa.9.0.pt35.i.sroa_idx26 to <2 x i8*>*
  %tt.i.sroa.9.0.copyload = load <2 x i8*>* %tt.i.sroa.9.0.pt35.i.sroa_cast, align 8
  %arrayidx14.i27 = getelementptr inbounds i32** %2, i64 7
  store i32* %tt.i.sroa.4.0.pt35.i.sroa_idx317, i32** %arrayidx14.i27, align 8, !tbaa !1
  store i32* %tt.i.sroa.5.0.pt35.i.sroa_idx519, i32** %tt.i.sroa.4.0.pt35.i.sroa_idx316, align 8, !tbaa !1
  store i32* %tt.i.sroa.6.0.pt35.i.sroa_idx721, i32** %tt.i.sroa.9.0.pt35.i.sroa_idx26, align 8, !tbaa !1
  store i32* %tt.i.sroa.7.0.pt35.i.sroa_idx923, i32** %tt.i.sroa.5.0.pt35.i.sroa_idx518, align 8, !tbaa !1
  %3 = bitcast i32** %tt.i.sroa.6.0.pt35.i.sroa_idx720 to <2 x i8*>*
  store <2 x i8*> %tt.i.sroa.9.0.copyload, <2 x i8*>* %3, align 8, !tbaa !1
  ret void
}

; Function Attrs: nounwind
declare noalias i8* @calloc(i64, i64) #2

; Function Attrs: nounwind uwtable
define i32 @make_gather(void (i32, i32, i32, i32, i32*, i32, i32*, i32*, i32*, i32*)* nocapture %func, i32* %args, i32 %inverse, i32 %want_even_odd, i32 %parity_conserve) #1 {
entry:
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %z = alloca i32, align 4
  %t = alloca i32, align 4
  %x2 = alloca i32, align 4
  %y2 = alloca i32, align 4
  %z2 = alloca i32, align 4
  %t2 = alloca i32, align 4
  %cmp = icmp eq i32 %inverse, 1
  %0 = load i32* @n_gathers, align 4, !tbaa !5
  %storemerge.v = select i1 %cmp, i32 2, i32 1
  %storemerge = add i32 %0, %storemerge.v
  store i32 %storemerge, i32* @n_gathers, align 4, !tbaa !5
  %cmp2 = icmp sgt i32 %storemerge, 32
  br i1 %cmp2, label %if.then3, label %if.end7

if.then3:                                         ; preds = %entry
  %1 = load i32* @this_node, align 4, !tbaa !5
  %cmp4 = icmp eq i32 %1, 0
  br i1 %cmp4, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.then3
  %puts290 = call i32 @puts(i8* getelementptr inbounds ([37 x i8]* @str15, i64 0, i64 0))
  br label %if.end6

if.end6:                                          ; preds = %if.then5, %if.then3
  call void @exit(i32 1) #8
  unreachable

if.end7:                                          ; preds = %entry
  %2 = load i32*** @neighbor, align 8, !tbaa !1
  %3 = bitcast i32** %2 to i8*
  %conv = sext i32 %storemerge to i64
  %mul = shl nsw i64 %conv, 3
  %call8 = call i8* @realloc(i8* %3, i64 %mul) #3
  %4 = bitcast i8* %call8 to i32**
  store i32** %4, i32*** @neighbor, align 8, !tbaa !1
  %5 = load i32* @sites_on_node, align 4, !tbaa !5
  %conv12 = sext i32 %5 to i64
  %call13 = call i8* @calloc(i64 %conv12, i64 4) #3
  %6 = bitcast i8* %call13 to i32*
  %7 = load i32* @n_gathers, align 4, !tbaa !5
  br i1 %cmp, label %if.then11, label %if.else36

if.then11:                                        ; preds = %if.end7
  %sub = add nsw i32 %7, -2
  %idxprom = sext i32 %sub to i64
  %arrayidx = getelementptr inbounds i32** %4, i64 %idxprom
  store i32* %6, i32** %arrayidx, align 8, !tbaa !1
  %cmp17 = icmp eq i8* %call13, null
  br i1 %cmp17, label %if.then19, label %if.end21

if.then19:                                        ; preds = %if.then11
  %8 = load i32* @this_node, align 4, !tbaa !5
  %call20 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([38 x i8]* @.str2, i64 0, i64 0), i32 %8) #3
  call void @terminate(i32 1)
  unreachable

if.end21:                                         ; preds = %if.then11
  %call23 = call i8* @calloc(i64 %conv12, i64 4) #3
  %9 = bitcast i8* %call23 to i32*
  %sub24 = add nsw i32 %7, -1
  %idxprom25 = sext i32 %sub24 to i64
  %arrayidx26 = getelementptr inbounds i32** %4, i64 %idxprom25
  store i32* %9, i32** %arrayidx26, align 8, !tbaa !1
  %cmp30 = icmp eq i8* %call23, null
  br i1 %cmp30, label %if.then32, label %if.end51

if.then32:                                        ; preds = %if.end21
  %10 = load i32* @this_node, align 4, !tbaa !5
  %call33 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([38 x i8]* @.str2, i64 0, i64 0), i32 %10) #3
  call void @terminate(i32 1)
  unreachable

if.else36:                                        ; preds = %if.end7
  %sub39 = add nsw i32 %7, -1
  %idxprom40 = sext i32 %sub39 to i64
  %arrayidx41 = getelementptr inbounds i32** %4, i64 %idxprom40
  store i32* %6, i32** %arrayidx41, align 8, !tbaa !1
  %cmp45 = icmp eq i8* %call13, null
  br i1 %cmp45, label %if.then47, label %if.end51

if.then47:                                        ; preds = %if.else36
  %11 = load i32* @this_node, align 4, !tbaa !5
  %call48 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([38 x i8]* @.str2, i64 0, i64 0), i32 %11) #3
  call void @terminate(i32 1)
  unreachable

if.end51:                                         ; preds = %if.end21, %if.else36
  %dir.0 = phi i32 [ %sub39, %if.else36 ], [ %sub, %if.end21 ]
  %12 = load %struct.site** @lattice, align 8, !tbaa !1
  %cmp52309 = icmp sgt i32 %5, 0
  br i1 %cmp52309, label %for.body.lr.ph, label %for.end201

for.body.lr.ph:                                   ; preds = %if.end51
  %cmp146 = icmp eq i32 %inverse, 0
  %cmp116 = icmp eq i32 %parity_conserve, 1
  %13 = icmp eq i32 %parity_conserve, 0
  br i1 %13, label %for.body.us, label %for.body

for.body.us:                                      ; preds = %for.body.lr.ph, %for.inc.us
  %s.0311.us = phi %struct.site* [ %incdec.ptr.us, %for.inc.us ], [ %12, %for.body.lr.ph ]
  %i.0310.us = phi i32 [ %inc.us, %for.inc.us ], [ 0, %for.body.lr.ph ]
  %x54.us = getelementptr inbounds %struct.site* %s.0311.us, i64 0, i32 0
  %14 = load i16* %x54.us, align 2, !tbaa !7
  %conv55.us = sext i16 %14 to i32
  %y56.us = getelementptr inbounds %struct.site* %s.0311.us, i64 0, i32 1
  %15 = load i16* %y56.us, align 2, !tbaa !14
  %conv57.us = sext i16 %15 to i32
  %z58.us = getelementptr inbounds %struct.site* %s.0311.us, i64 0, i32 2
  %16 = load i16* %z58.us, align 2, !tbaa !15
  %conv59.us = sext i16 %16 to i32
  %t60.us = getelementptr inbounds %struct.site* %s.0311.us, i64 0, i32 3
  %17 = load i16* %t60.us, align 2, !tbaa !16
  %conv61.us = sext i16 %17 to i32
  call void %func(i32 %conv55.us, i32 %conv57.us, i32 %conv59.us, i32 %conv61.us, i32* %args, i32 1, i32* %x, i32* %y, i32* %z, i32* %t) #3
  %18 = load i32* %x, align 4, !tbaa !5
  %19 = load i32* %y, align 4, !tbaa !5
  %add62.us = add nsw i32 %19, %18
  %20 = load i32* %z, align 4, !tbaa !5
  %add63.us = add nsw i32 %add62.us, %20
  %21 = load i32* %t, align 4, !tbaa !5
  %add64.us = add nsw i32 %add63.us, %21
  %rem.us = srem i32 %add64.us, 2
  %22 = or i32 %19, %18
  %23 = or i32 %22, %20
  %24 = or i32 %23, %21
  %25 = icmp sgt i32 %24, -1
  %26 = load i32* @nx, align 4
  %cmp76.us = icmp slt i32 %18, %26
  %or.cond.us = and i1 %25, %cmp76.us
  %27 = load i32* @ny, align 4
  %cmp79.us = icmp slt i32 %19, %27
  %or.cond291.us = and i1 %or.cond.us, %cmp79.us
  %28 = load i32* @nz, align 4
  %cmp82.us = icmp slt i32 %20, %28
  %or.cond292.us = and i1 %or.cond291.us, %cmp82.us
  %29 = load i32* @nt, align 4
  %cmp85.us = icmp slt i32 %21, %29
  %or.cond293.us = and i1 %or.cond292.us, %cmp85.us
  br i1 %or.cond293.us, label %land.lhs.true.us, label %if.then87

land.lhs.true.us:                                 ; preds = %for.body.us
  switch i32 %rem.us, label %if.end145.us [
    i32 0, label %land.lhs.true103.us
    i32 1, label %land.lhs.true110.us
  ]

land.lhs.true110.us:                              ; preds = %land.lhs.true.us
  %parity111.us = getelementptr inbounds %struct.site* %s.0311.us, i64 0, i32 4
  %30 = load i8* %parity111.us, align 1, !tbaa !17
  %cmp113.us = icmp eq i8 %30, 2
  br i1 %cmp113.us, label %if.then134, label %lor.lhs.false115.us

land.lhs.true103.us:                              ; preds = %land.lhs.true.us
  %parity.us = getelementptr inbounds %struct.site* %s.0311.us, i64 0, i32 4
  %31 = load i8* %parity.us, align 1, !tbaa !17
  %cmp105.us = icmp eq i8 %31, 1
  br i1 %cmp105.us, label %if.then134, label %lor.lhs.false115.us

lor.lhs.false115.us:                              ; preds = %land.lhs.true103.us, %land.lhs.true110.us
  br i1 %cmp116, label %land.lhs.true118.us, label %if.end145.us

land.lhs.true118.us:                              ; preds = %lor.lhs.false115.us
  switch i32 %rem.us, label %if.end145.us [
    i32 0, label %land.lhs.true121.us
    i32 1, label %land.lhs.true129.us
  ]

land.lhs.true129.us:                              ; preds = %land.lhs.true118.us
  %parity130.us = getelementptr inbounds %struct.site* %s.0311.us, i64 0, i32 4
  %32 = load i8* %parity130.us, align 1, !tbaa !17
  %cmp132.us = icmp eq i8 %32, 1
  br i1 %cmp132.us, label %if.then134, label %if.end145.us

land.lhs.true121.us:                              ; preds = %land.lhs.true118.us
  %parity122.us = getelementptr inbounds %struct.site* %s.0311.us, i64 0, i32 4
  %33 = load i8* %parity122.us, align 1, !tbaa !17
  %cmp124.us = icmp eq i8 %33, 2
  br i1 %cmp124.us, label %if.then134, label %if.end145.us

if.end145.us:                                     ; preds = %land.lhs.true121.us, %land.lhs.true129.us, %land.lhs.true118.us, %lor.lhs.false115.us, %land.lhs.true.us
  br i1 %cmp146, label %if.then148.us, label %for.inc.us

if.then148.us:                                    ; preds = %if.end145.us
  call void %func(i32 %18, i32 %19, i32 %20, i32 %21, i32* %args, i32 1, i32* %x2, i32* %y2, i32* %z2, i32* %t2) #3
  %34 = load i16* %x54.us, align 2, !tbaa !7
  %conv150.us = sext i16 %34 to i32
  %35 = load i32* %x2, align 4, !tbaa !5
  %cmp151.us = icmp eq i32 %conv150.us, %35
  br i1 %cmp151.us, label %lor.lhs.false153.us, label %if.then168

lor.lhs.false153.us:                              ; preds = %if.then148.us
  %36 = load i16* %y56.us, align 2, !tbaa !14
  %conv155.us = sext i16 %36 to i32
  %37 = load i32* %y2, align 4, !tbaa !5
  %cmp156.us = icmp eq i32 %conv155.us, %37
  br i1 %cmp156.us, label %lor.lhs.false158.us, label %if.then168

lor.lhs.false158.us:                              ; preds = %lor.lhs.false153.us
  %38 = load i16* %z58.us, align 2, !tbaa !15
  %conv160.us = sext i16 %38 to i32
  %39 = load i32* %z2, align 4, !tbaa !5
  %cmp161.us = icmp eq i32 %conv160.us, %39
  br i1 %cmp161.us, label %lor.lhs.false163.us, label %if.then168

lor.lhs.false163.us:                              ; preds = %lor.lhs.false158.us
  %40 = load i16* %t60.us, align 2, !tbaa !16
  %conv165.us = sext i16 %40 to i32
  %41 = load i32* %t2, align 4, !tbaa !5
  %cmp166.us = icmp eq i32 %conv165.us, %41
  br i1 %cmp166.us, label %for.inc.us, label %if.then168

for.inc.us:                                       ; preds = %lor.lhs.false163.us, %if.end145.us
  %inc.us = add nsw i32 %i.0310.us, 1
  %incdec.ptr.us = getelementptr inbounds %struct.site* %s.0311.us, i64 1
  %42 = load i32* @sites_on_node, align 4, !tbaa !5
  %cmp52.us = icmp slt i32 %inc.us, %42
  br i1 %cmp52.us, label %for.body.us, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %s.0311 = phi %struct.site* [ %incdec.ptr, %for.inc ], [ %12, %for.body.lr.ph ]
  %i.0310 = phi i32 [ %inc, %for.inc ], [ 0, %for.body.lr.ph ]
  %x54 = getelementptr inbounds %struct.site* %s.0311, i64 0, i32 0
  %43 = load i16* %x54, align 2, !tbaa !7
  %conv55 = sext i16 %43 to i32
  %y56 = getelementptr inbounds %struct.site* %s.0311, i64 0, i32 1
  %44 = load i16* %y56, align 2, !tbaa !14
  %conv57 = sext i16 %44 to i32
  %z58 = getelementptr inbounds %struct.site* %s.0311, i64 0, i32 2
  %45 = load i16* %z58, align 2, !tbaa !15
  %conv59 = sext i16 %45 to i32
  %t60 = getelementptr inbounds %struct.site* %s.0311, i64 0, i32 3
  %46 = load i16* %t60, align 2, !tbaa !16
  %conv61 = sext i16 %46 to i32
  call void %func(i32 %conv55, i32 %conv57, i32 %conv59, i32 %conv61, i32* %args, i32 1, i32* %x, i32* %y, i32* %z, i32* %t) #3
  %47 = load i32* %x, align 4, !tbaa !5
  %48 = load i32* %y, align 4, !tbaa !5
  %add62 = add nsw i32 %48, %47
  %49 = load i32* %z, align 4, !tbaa !5
  %add63 = add nsw i32 %add62, %49
  %50 = load i32* %t, align 4, !tbaa !5
  %add64 = add nsw i32 %add63, %50
  %rem = srem i32 %add64, 2
  %51 = or i32 %48, %47
  %52 = or i32 %51, %49
  %53 = or i32 %52, %50
  %54 = icmp sgt i32 %53, -1
  %55 = load i32* @nx, align 4
  %cmp76 = icmp slt i32 %47, %55
  %or.cond = and i1 %54, %cmp76
  %56 = load i32* @ny, align 4
  %cmp79 = icmp slt i32 %48, %56
  %or.cond291 = and i1 %or.cond, %cmp79
  %57 = load i32* @nz, align 4
  %cmp82 = icmp slt i32 %49, %57
  %or.cond292 = and i1 %or.cond291, %cmp82
  %58 = load i32* @nt, align 4
  %cmp85 = icmp slt i32 %50, %58
  %or.cond293 = and i1 %or.cond292, %cmp85
  br i1 %or.cond293, label %if.end98, label %if.then87

if.then87:                                        ; preds = %for.body, %for.body.us
  %t60.lcssa = phi i16* [ %t60.us, %for.body.us ], [ %t60, %for.body ]
  %z58.lcssa = phi i16* [ %z58.us, %for.body.us ], [ %z58, %for.body ]
  %y56.lcssa = phi i16* [ %y56.us, %for.body.us ], [ %y56, %for.body ]
  %x54.lcssa = phi i16* [ %x54.us, %for.body.us ], [ %x54, %for.body ]
  %puts289 = call i32 @puts(i8* getelementptr inbounds ([52 x i8]* @str14, i64 0, i64 0))
  %59 = load i16* %x54.lcssa, align 2, !tbaa !7
  %conv90 = sext i16 %59 to i32
  %60 = load i16* %y56.lcssa, align 2, !tbaa !14
  %conv92 = sext i16 %60 to i32
  %61 = load i16* %z58.lcssa, align 2, !tbaa !15
  %conv94 = sext i16 %61 to i32
  %62 = load i16* %t60.lcssa, align 2, !tbaa !16
  %conv96 = sext i16 %62 to i32
  %63 = load i32* %x, align 4, !tbaa !5
  %64 = load i32* %y, align 4, !tbaa !5
  %65 = load i32* %z, align 4, !tbaa !5
  %66 = load i32* %t, align 4, !tbaa !5
  %call97 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([38 x i8]* @.str4, i64 0, i64 0), i32 %conv90, i32 %conv92, i32 %conv94, i32 %conv96, i32 %63, i32 %64, i32 %65, i32 %66) #3
  call void @terminate(i32 1)
  unreachable

if.end98:                                         ; preds = %for.body
  %cond = icmp eq i32 %parity_conserve, 1
  br i1 %cond, label %land.lhs.true118, label %if.end145

land.lhs.true118:                                 ; preds = %if.end98
  switch i32 %rem, label %if.end145 [
    i32 0, label %land.lhs.true121
    i32 1, label %land.lhs.true129
  ]

land.lhs.true121:                                 ; preds = %land.lhs.true118
  %parity122 = getelementptr inbounds %struct.site* %s.0311, i64 0, i32 4
  %67 = load i8* %parity122, align 1, !tbaa !17
  %cmp124 = icmp eq i8 %67, 2
  br i1 %cmp124, label %if.then134, label %if.end145

land.lhs.true129:                                 ; preds = %land.lhs.true118
  %parity130 = getelementptr inbounds %struct.site* %s.0311, i64 0, i32 4
  %68 = load i8* %parity130, align 1, !tbaa !17
  %cmp132 = icmp eq i8 %68, 1
  br i1 %cmp132, label %if.then134, label %if.end145

if.then134:                                       ; preds = %land.lhs.true129, %land.lhs.true121, %land.lhs.true110.us, %land.lhs.true103.us, %land.lhs.true129.us, %land.lhs.true121.us
  %t60.lcssa301 = phi i16* [ %t60.us, %land.lhs.true121.us ], [ %t60.us, %land.lhs.true129.us ], [ %t60.us, %land.lhs.true103.us ], [ %t60.us, %land.lhs.true110.us ], [ %t60, %land.lhs.true121 ], [ %t60, %land.lhs.true129 ]
  %z58.lcssa299 = phi i16* [ %z58.us, %land.lhs.true121.us ], [ %z58.us, %land.lhs.true129.us ], [ %z58.us, %land.lhs.true103.us ], [ %z58.us, %land.lhs.true110.us ], [ %z58, %land.lhs.true121 ], [ %z58, %land.lhs.true129 ]
  %y56.lcssa297 = phi i16* [ %y56.us, %land.lhs.true121.us ], [ %y56.us, %land.lhs.true129.us ], [ %y56.us, %land.lhs.true103.us ], [ %y56.us, %land.lhs.true110.us ], [ %y56, %land.lhs.true121 ], [ %y56, %land.lhs.true129 ]
  %x54.lcssa295 = phi i16* [ %x54.us, %land.lhs.true121.us ], [ %x54.us, %land.lhs.true129.us ], [ %x54.us, %land.lhs.true103.us ], [ %x54.us, %land.lhs.true110.us ], [ %x54, %land.lhs.true121 ], [ %x54, %land.lhs.true129 ]
  %puts288 = call i32 @puts(i8* getelementptr inbounds ([56 x i8]* @str13, i64 0, i64 0))
  %69 = load i16* %x54.lcssa295, align 2, !tbaa !7
  %conv137 = sext i16 %69 to i32
  %70 = load i16* %y56.lcssa297, align 2, !tbaa !14
  %conv139 = sext i16 %70 to i32
  %71 = load i16* %z58.lcssa299, align 2, !tbaa !15
  %conv141 = sext i16 %71 to i32
  %72 = load i16* %t60.lcssa301, align 2, !tbaa !16
  %conv143 = sext i16 %72 to i32
  %73 = load i32* %x, align 4, !tbaa !5
  %74 = load i32* %y, align 4, !tbaa !5
  %75 = load i32* %z, align 4, !tbaa !5
  %76 = load i32* %t, align 4, !tbaa !5
  %call144 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([38 x i8]* @.str4, i64 0, i64 0), i32 %conv137, i32 %conv139, i32 %conv141, i32 %conv143, i32 %73, i32 %74, i32 %75, i32 %76) #3
  call void @terminate(i32 1)
  unreachable

if.end145:                                        ; preds = %if.end98, %land.lhs.true121, %land.lhs.true118, %land.lhs.true129
  br i1 %cmp146, label %if.then148, label %for.inc

if.then148:                                       ; preds = %if.end145
  call void %func(i32 %47, i32 %48, i32 %49, i32 %50, i32* %args, i32 1, i32* %x2, i32* %y2, i32* %z2, i32* %t2) #3
  %77 = load i16* %x54, align 2, !tbaa !7
  %conv150 = sext i16 %77 to i32
  %78 = load i32* %x2, align 4, !tbaa !5
  %cmp151 = icmp eq i32 %conv150, %78
  br i1 %cmp151, label %lor.lhs.false153, label %if.then168

lor.lhs.false153:                                 ; preds = %if.then148
  %79 = load i16* %y56, align 2, !tbaa !14
  %conv155 = sext i16 %79 to i32
  %80 = load i32* %y2, align 4, !tbaa !5
  %cmp156 = icmp eq i32 %conv155, %80
  br i1 %cmp156, label %lor.lhs.false158, label %if.then168

lor.lhs.false158:                                 ; preds = %lor.lhs.false153
  %81 = load i16* %z58, align 2, !tbaa !15
  %conv160 = sext i16 %81 to i32
  %82 = load i32* %z2, align 4, !tbaa !5
  %cmp161 = icmp eq i32 %conv160, %82
  br i1 %cmp161, label %lor.lhs.false163, label %if.then168

lor.lhs.false163:                                 ; preds = %lor.lhs.false158
  %83 = load i16* %t60, align 2, !tbaa !16
  %conv165 = sext i16 %83 to i32
  %84 = load i32* %t2, align 4, !tbaa !5
  %cmp166 = icmp eq i32 %conv165, %84
  br i1 %cmp166, label %for.inc, label %if.then168

if.then168:                                       ; preds = %lor.lhs.false163, %lor.lhs.false158, %lor.lhs.false153, %if.then148, %if.then148.us, %lor.lhs.false153.us, %lor.lhs.false158.us, %lor.lhs.false163.us
  %t60.lcssa302 = phi i16* [ %t60.us, %lor.lhs.false163.us ], [ %t60.us, %lor.lhs.false158.us ], [ %t60.us, %lor.lhs.false153.us ], [ %t60.us, %if.then148.us ], [ %t60, %if.then148 ], [ %t60, %lor.lhs.false153 ], [ %t60, %lor.lhs.false158 ], [ %t60, %lor.lhs.false163 ]
  %z58.lcssa300 = phi i16* [ %z58.us, %lor.lhs.false163.us ], [ %z58.us, %lor.lhs.false158.us ], [ %z58.us, %lor.lhs.false153.us ], [ %z58.us, %if.then148.us ], [ %z58, %if.then148 ], [ %z58, %lor.lhs.false153 ], [ %z58, %lor.lhs.false158 ], [ %z58, %lor.lhs.false163 ]
  %y56.lcssa298 = phi i16* [ %y56.us, %lor.lhs.false163.us ], [ %y56.us, %lor.lhs.false158.us ], [ %y56.us, %lor.lhs.false153.us ], [ %y56.us, %if.then148.us ], [ %y56, %if.then148 ], [ %y56, %lor.lhs.false153 ], [ %y56, %lor.lhs.false158 ], [ %y56, %lor.lhs.false163 ]
  %x54.lcssa296 = phi i16* [ %x54.us, %lor.lhs.false163.us ], [ %x54.us, %lor.lhs.false158.us ], [ %x54.us, %lor.lhs.false153.us ], [ %x54.us, %if.then148.us ], [ %x54, %if.then148 ], [ %x54, %lor.lhs.false153 ], [ %x54, %lor.lhs.false158 ], [ %x54, %lor.lhs.false163 ]
  %puts = call i32 @puts(i8* getelementptr inbounds ([50 x i8]* @str, i64 0, i64 0))
  %85 = load i16* %x54.lcssa296, align 2, !tbaa !7
  %conv171 = sext i16 %85 to i32
  %86 = load i16* %y56.lcssa298, align 2, !tbaa !14
  %conv173 = sext i16 %86 to i32
  %87 = load i16* %z58.lcssa300, align 2, !tbaa !15
  %conv175 = sext i16 %87 to i32
  %88 = load i16* %t60.lcssa302, align 2, !tbaa !16
  %conv177 = sext i16 %88 to i32
  %89 = load i32* %x2, align 4, !tbaa !5
  %90 = load i32* %y2, align 4, !tbaa !5
  %91 = load i32* %z2, align 4, !tbaa !5
  %92 = load i32* %t2, align 4, !tbaa !5
  %call178 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([47 x i8]* @.str7, i64 0, i64 0), i32 %conv171, i32 %conv173, i32 %conv175, i32 %conv177, i32 %89, i32 %90, i32 %91, i32 %92) #3
  call void @terminate(i32 1)
  unreachable

for.inc:                                          ; preds = %lor.lhs.false163, %if.end145
  %inc = add nsw i32 %i.0310, 1
  %incdec.ptr = getelementptr inbounds %struct.site* %s.0311, i64 1
  %93 = load i32* @sites_on_node, align 4, !tbaa !5
  %cmp52 = icmp slt i32 %inc, %93
  br i1 %cmp52, label %for.body, label %for.end

for.end:                                          ; preds = %for.inc, %for.inc.us
  %94 = phi i32 [ %42, %for.inc.us ], [ %93, %for.inc ]
  %cmp182306 = icmp sgt i32 %94, 0
  br i1 %cmp182306, label %for.body184.lr.ph, label %for.end201

for.body184.lr.ph:                                ; preds = %for.end
  %95 = load %struct.site** @lattice, align 8, !tbaa !1
  %idxprom195 = sext i32 %dir.0 to i64
  br label %for.body184

for.body184:                                      ; preds = %for.body184.lr.ph, %for.body184
  %indvars.iv345 = phi i64 [ 0, %for.body184.lr.ph ], [ %indvars.iv.next346, %for.body184 ]
  %s.1308 = phi %struct.site* [ %95, %for.body184.lr.ph ], [ %incdec.ptr200, %for.body184 ]
  %x185 = getelementptr inbounds %struct.site* %s.1308, i64 0, i32 0
  %96 = load i16* %x185, align 2, !tbaa !7
  %conv186 = sext i16 %96 to i32
  %y187 = getelementptr inbounds %struct.site* %s.1308, i64 0, i32 1
  %97 = load i16* %y187, align 2, !tbaa !14
  %conv188 = sext i16 %97 to i32
  %z189 = getelementptr inbounds %struct.site* %s.1308, i64 0, i32 2
  %98 = load i16* %z189, align 2, !tbaa !15
  %conv190 = sext i16 %98 to i32
  %t191 = getelementptr inbounds %struct.site* %s.1308, i64 0, i32 3
  %99 = load i16* %t191, align 2, !tbaa !16
  %conv192 = sext i16 %99 to i32
  call void %func(i32 %conv186, i32 %conv188, i32 %conv190, i32 %conv192, i32* %args, i32 1, i32* %x, i32* %y, i32* %z, i32* %t) #3
  %100 = load i32* %x, align 4, !tbaa !5
  %101 = load i32* %y, align 4, !tbaa !5
  %102 = load i32* %z, align 4, !tbaa !5
  %103 = load i32* %t, align 4, !tbaa !5
  %call193 = call i32 @node_index(i32 %100, i32 %101, i32 %102, i32 %103) #3
  %104 = load i32*** @neighbor, align 8, !tbaa !1
  %arrayidx196 = getelementptr inbounds i32** %104, i64 %idxprom195
  %105 = load i32** %arrayidx196, align 8, !tbaa !1
  %arrayidx197 = getelementptr inbounds i32* %105, i64 %indvars.iv345
  store i32 %call193, i32* %arrayidx197, align 4, !tbaa !5
  %indvars.iv.next346 = add nuw nsw i64 %indvars.iv345, 1
  %incdec.ptr200 = getelementptr inbounds %struct.site* %s.1308, i64 1
  %106 = load i32* @sites_on_node, align 4, !tbaa !5
  %107 = trunc i64 %indvars.iv.next346 to i32
  %cmp182 = icmp slt i32 %107, %106
  br i1 %cmp182, label %for.body184, label %for.end201

for.end201:                                       ; preds = %for.body184, %if.end51, %for.end
  %108 = phi i32 [ %94, %for.end ], [ %5, %if.end51 ], [ %106, %for.body184 ]
  %cmp208303 = icmp sgt i32 %108, 0
  %or.cond348 = and i1 %cmp, %cmp208303
  br i1 %or.cond348, label %for.body210.lr.ph, label %return

for.body210.lr.ph:                                ; preds = %for.end201
  %109 = load %struct.site** @lattice, align 8, !tbaa !1
  %inc206 = add nsw i32 %dir.0, 1
  %idxprom221 = sext i32 %inc206 to i64
  br label %for.body210

for.body210:                                      ; preds = %for.body210.lr.ph, %for.body210
  %indvars.iv = phi i64 [ 0, %for.body210.lr.ph ], [ %indvars.iv.next, %for.body210 ]
  %s.2305 = phi %struct.site* [ %109, %for.body210.lr.ph ], [ %incdec.ptr226, %for.body210 ]
  %x211 = getelementptr inbounds %struct.site* %s.2305, i64 0, i32 0
  %110 = load i16* %x211, align 2, !tbaa !7
  %conv212 = sext i16 %110 to i32
  %y213 = getelementptr inbounds %struct.site* %s.2305, i64 0, i32 1
  %111 = load i16* %y213, align 2, !tbaa !14
  %conv214 = sext i16 %111 to i32
  %z215 = getelementptr inbounds %struct.site* %s.2305, i64 0, i32 2
  %112 = load i16* %z215, align 2, !tbaa !15
  %conv216 = sext i16 %112 to i32
  %t217 = getelementptr inbounds %struct.site* %s.2305, i64 0, i32 3
  %113 = load i16* %t217, align 2, !tbaa !16
  %conv218 = sext i16 %113 to i32
  call void %func(i32 %conv212, i32 %conv214, i32 %conv216, i32 %conv218, i32* %args, i32 -1, i32* %x, i32* %y, i32* %z, i32* %t) #3
  %114 = load i32* %x, align 4, !tbaa !5
  %115 = load i32* %y, align 4, !tbaa !5
  %116 = load i32* %z, align 4, !tbaa !5
  %117 = load i32* %t, align 4, !tbaa !5
  %call219 = call i32 @node_index(i32 %114, i32 %115, i32 %116, i32 %117) #3
  %118 = load i32*** @neighbor, align 8, !tbaa !1
  %arrayidx222 = getelementptr inbounds i32** %118, i64 %idxprom221
  %119 = load i32** %arrayidx222, align 8, !tbaa !1
  %arrayidx223 = getelementptr inbounds i32* %119, i64 %indvars.iv
  store i32 %call219, i32* %arrayidx223, align 4, !tbaa !5
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %incdec.ptr226 = getelementptr inbounds %struct.site* %s.2305, i64 1
  %120 = load i32* @sites_on_node, align 4, !tbaa !5
  %121 = trunc i64 %indvars.iv.next to i32
  %cmp208 = icmp slt i32 %121, %120
  br i1 %cmp208, label %for.body210, label %return

return:                                           ; preds = %for.body210, %for.end201
  ret i32 %dir.0
}

; Function Attrs: nounwind uwtable
define void @neighbor_coords_special(i32 %x, i32 %y, i32 %z, i32 %t, i32* nocapture readonly %dirpt, i32 %fb, i32* nocapture %x2p, i32* nocapture %y2p, i32* nocapture %z2p, i32* nocapture %t2p) #1 {
entry:
  %cmp = icmp eq i32 %fb, 1
  %0 = load i32* %dirpt, align 4, !tbaa !5
  %sub = sub nsw i32 7, %0
  %cond = select i1 %cmp, i32 %0, i32 %sub
  store i32 %x, i32* %x2p, align 4, !tbaa !5
  store i32 %y, i32* %y2p, align 4, !tbaa !5
  store i32 %z, i32* %z2p, align 4, !tbaa !5
  store i32 %t, i32* %t2p, align 4, !tbaa !5
  switch i32 %cond, label %sw.default [
    i32 0, label %sw.bb
    i32 7, label %sw.bb1
    i32 1, label %sw.bb5
    i32 6, label %sw.bb8
    i32 2, label %sw.bb12
    i32 5, label %sw.bb15
    i32 3, label %sw.bb19
    i32 4, label %sw.bb22
  ]

sw.bb:                                            ; preds = %entry
  %add = add nsw i32 %x, 1
  %1 = load i32* @nx, align 4, !tbaa !5
  %rem = srem i32 %add, %1
  store i32 %rem, i32* %x2p, align 4, !tbaa !5
  br label %sw.epilog

sw.bb1:                                           ; preds = %entry
  %2 = load i32* @nx, align 4, !tbaa !5
  %add2 = add i32 %x, -1
  %sub3 = add i32 %add2, %2
  %rem4 = srem i32 %sub3, %2
  store i32 %rem4, i32* %x2p, align 4, !tbaa !5
  br label %sw.epilog

sw.bb5:                                           ; preds = %entry
  %add6 = add nsw i32 %y, 1
  %3 = load i32* @ny, align 4, !tbaa !5
  %rem7 = srem i32 %add6, %3
  store i32 %rem7, i32* %y2p, align 4, !tbaa !5
  br label %sw.epilog

sw.bb8:                                           ; preds = %entry
  %4 = load i32* @ny, align 4, !tbaa !5
  %add9 = add i32 %y, -1
  %sub10 = add i32 %add9, %4
  %rem11 = srem i32 %sub10, %4
  store i32 %rem11, i32* %y2p, align 4, !tbaa !5
  br label %sw.epilog

sw.bb12:                                          ; preds = %entry
  %add13 = add nsw i32 %z, 1
  %5 = load i32* @nz, align 4, !tbaa !5
  %rem14 = srem i32 %add13, %5
  store i32 %rem14, i32* %z2p, align 4, !tbaa !5
  br label %sw.epilog

sw.bb15:                                          ; preds = %entry
  %6 = load i32* @nz, align 4, !tbaa !5
  %add16 = add i32 %z, -1
  %sub17 = add i32 %add16, %6
  %rem18 = srem i32 %sub17, %6
  store i32 %rem18, i32* %z2p, align 4, !tbaa !5
  br label %sw.epilog

sw.bb19:                                          ; preds = %entry
  %add20 = add nsw i32 %t, 1
  %7 = load i32* @nt, align 4, !tbaa !5
  %rem21 = srem i32 %add20, %7
  store i32 %rem21, i32* %t2p, align 4, !tbaa !5
  br label %sw.epilog

sw.bb22:                                          ; preds = %entry
  %8 = load i32* @nt, align 4, !tbaa !5
  %add23 = add i32 %t, -1
  %sub24 = add i32 %add23, %8
  %rem25 = srem i32 %sub24, %8
  store i32 %rem25, i32* %t2p, align 4, !tbaa !5
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  %puts = tail call i32 @puts(i8* getelementptr inbounds ([21 x i8]* @str17, i64 0, i64 0))
  tail call void @exit(i32 1) #8
  unreachable

sw.epilog:                                        ; preds = %sw.bb22, %sw.bb19, %sw.bb15, %sw.bb12, %sw.bb8, %sw.bb5, %sw.bb1, %sw.bb
  ret void
}

; Function Attrs: nounwind uwtable
define void @sort_eight_special(i8** nocapture %pt) #1 {
entry:
  %pt35 = bitcast i8** %pt to i8*
  %tt = alloca [8 x i8*], align 16
  %0 = bitcast [8 x i8*]* %tt to i8*
  call void @llvm.lifetime.start(i64 64, i8* %0) #3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %pt35, i64 64, i32 8, i1 false)
  %arrayidx7 = getelementptr inbounds [8 x i8*]* %tt, i64 0, i64 0
  %1 = load i8** %arrayidx7, align 16, !tbaa !1
  store i8* %1, i8** %pt, align 8, !tbaa !1
  %arrayidx12 = getelementptr inbounds [8 x i8*]* %tt, i64 0, i64 1
  %2 = load i8** %arrayidx12, align 8, !tbaa !1
  %arrayidx14 = getelementptr inbounds i8** %pt, i64 7
  store i8* %2, i8** %arrayidx14, align 8, !tbaa !1
  %arrayidx7.1 = getelementptr inbounds [8 x i8*]* %tt, i64 0, i64 2
  %3 = load i8** %arrayidx7.1, align 16, !tbaa !1
  %arrayidx9.1 = getelementptr inbounds i8** %pt, i64 1
  store i8* %3, i8** %arrayidx9.1, align 8, !tbaa !1
  %arrayidx12.1 = getelementptr inbounds [8 x i8*]* %tt, i64 0, i64 3
  %4 = load i8** %arrayidx12.1, align 8, !tbaa !1
  %arrayidx14.1 = getelementptr inbounds i8** %pt, i64 6
  store i8* %4, i8** %arrayidx14.1, align 8, !tbaa !1
  %arrayidx7.2 = getelementptr inbounds [8 x i8*]* %tt, i64 0, i64 4
  %5 = load i8** %arrayidx7.2, align 16, !tbaa !1
  %arrayidx9.2 = getelementptr inbounds i8** %pt, i64 2
  store i8* %5, i8** %arrayidx9.2, align 8, !tbaa !1
  %arrayidx12.2 = getelementptr inbounds [8 x i8*]* %tt, i64 0, i64 5
  %6 = load i8** %arrayidx12.2, align 8, !tbaa !1
  %arrayidx14.2 = getelementptr inbounds i8** %pt, i64 5
  store i8* %6, i8** %arrayidx14.2, align 8, !tbaa !1
  %arrayidx7.3 = getelementptr inbounds [8 x i8*]* %tt, i64 0, i64 6
  %arrayidx9.3 = getelementptr inbounds i8** %pt, i64 3
  %7 = bitcast i8** %arrayidx7.3 to <2 x i8*>*
  %8 = load <2 x i8*>* %7, align 16, !tbaa !1
  %9 = bitcast i8** %arrayidx9.3 to <2 x i8*>*
  store <2 x i8*> %8, <2 x i8*>* %9, align 8, !tbaa !1
  call void @llvm.lifetime.end(i64 64, i8* %0) #3
  ret void
}

; Function Attrs: nounwind uwtable
define void @sort_eight_neighborlists(i32 %index) #1 {
entry:
  %idxprom = sext i32 %index to i64
  %0 = load i32*** @neighbor, align 8, !tbaa !1
  %arrayidx.sum = add i64 %idxprom, 1
  %tt.i.sroa.4.0.pt35.i.sroa_idx215 = getelementptr inbounds i32** %0, i64 %arrayidx.sum
  %tt.i.sroa.4.0.pt35.i.sroa_idx216 = load i32** %tt.i.sroa.4.0.pt35.i.sroa_idx215, align 8
  %arrayidx.sum18 = add i64 %idxprom, 2
  %tt.i.sroa.5.0.pt35.i.sroa_idx417 = getelementptr inbounds i32** %0, i64 %arrayidx.sum18
  %tt.i.sroa.5.0.pt35.i.sroa_idx419 = load i32** %tt.i.sroa.5.0.pt35.i.sroa_idx417, align 8
  %arrayidx.sum21 = add i64 %idxprom, 3
  %tt.i.sroa.6.0.pt35.i.sroa_idx620 = getelementptr inbounds i32** %0, i64 %arrayidx.sum21
  %tt.i.sroa.6.0.pt35.i.sroa_idx622 = load i32** %tt.i.sroa.6.0.pt35.i.sroa_idx620, align 8
  %arrayidx.sum24 = add i64 %idxprom, 4
  %tt.i.sroa.7.0.pt35.i.sroa_idx823 = getelementptr inbounds i32** %0, i64 %arrayidx.sum24
  %tt.i.sroa.7.0.pt35.i.sroa_idx825 = load i32** %tt.i.sroa.7.0.pt35.i.sroa_idx823, align 8
  %arrayidx.sum30 = add i64 %idxprom, 6
  %tt.i.sroa.9.0.pt35.i.sroa_idx29 = getelementptr inbounds i32** %0, i64 %arrayidx.sum30
  %tt.i.sroa.9.0.pt35.i.sroa_cast = bitcast i32** %tt.i.sroa.9.0.pt35.i.sroa_idx29 to <2 x i8*>*
  %tt.i.sroa.9.0.copyload = load <2 x i8*>* %tt.i.sroa.9.0.pt35.i.sroa_cast, align 8
  %arrayidx.sum32 = add i64 %idxprom, 7
  %arrayidx14.i31 = getelementptr inbounds i32** %0, i64 %arrayidx.sum32
  store i32* %tt.i.sroa.4.0.pt35.i.sroa_idx216, i32** %arrayidx14.i31, align 8, !tbaa !1
  store i32* %tt.i.sroa.5.0.pt35.i.sroa_idx419, i32** %tt.i.sroa.4.0.pt35.i.sroa_idx215, align 8, !tbaa !1
  store i32* %tt.i.sroa.6.0.pt35.i.sroa_idx622, i32** %tt.i.sroa.9.0.pt35.i.sroa_idx29, align 8, !tbaa !1
  store i32* %tt.i.sroa.7.0.pt35.i.sroa_idx825, i32** %tt.i.sroa.5.0.pt35.i.sroa_idx417, align 8, !tbaa !1
  %1 = bitcast i32** %tt.i.sroa.6.0.pt35.i.sroa_idx620 to <2 x i8*>*
  store <2 x i8*> %tt.i.sroa.9.0.copyload, <2 x i8*>* %1, align 8, !tbaa !1
  ret void
}

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #3

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #3

; Function Attrs: nounwind
declare i32 @printf(i8* nocapture readonly, ...) #2

; Function Attrs: noreturn
declare void @exit(i32) #4

; Function Attrs: nounwind
declare noalias i8* @realloc(i8* nocapture, i64) #2

; Function Attrs: noreturn nounwind uwtable
define void @terminate(i32 %status) #5 {
entry:
  %time_stamp.i = alloca i64, align 8
  %0 = bitcast i64* %time_stamp.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #3
  %call1.i = call i64 @time(i64* %time_stamp.i) #3
  %call2.i = call i8* @ctime(i64* %time_stamp.i) #3
  %call3.i = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([8 x i8]* @.str10, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8]* @.str11, i64 0, i64 0), i8* %call2.i) #3
  call void @llvm.lifetime.end(i64 8, i8* %0) #3
  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([26 x i8]* @.str12, i64 0, i64 0), i32 %status) #3
  %1 = load %struct._IO_FILE** @stdout, align 8, !tbaa !1
  %call1 = call i32 @fflush(%struct._IO_FILE* %1) #3
  %2 = load %struct._IO_FILE** @stderr, align 8, !tbaa !1
  %call2 = call i32 @fflush(%struct._IO_FILE* %2) #3
  call void @exit(i32 %status) #8
  unreachable
}

declare i32 @node_index(i32, i32, i32, i32) #6

; Function Attrs: nounwind uwtable
define void @neighbor_coords(i32 %x, i32 %y, i32 %z, i32 %t, i32 %dir, i32* nocapture %x2p, i32* nocapture %y2p, i32* nocapture %z2p, i32* nocapture %t2p) #1 {
entry:
  store i32 %x, i32* %x2p, align 4, !tbaa !5
  store i32 %y, i32* %y2p, align 4, !tbaa !5
  store i32 %z, i32* %z2p, align 4, !tbaa !5
  store i32 %t, i32* %t2p, align 4, !tbaa !5
  switch i32 %dir, label %sw.default [
    i32 0, label %sw.bb
    i32 7, label %sw.bb1
    i32 1, label %sw.bb4
    i32 6, label %sw.bb7
    i32 2, label %sw.bb11
    i32 5, label %sw.bb14
    i32 3, label %sw.bb18
    i32 4, label %sw.bb21
  ]

sw.bb:                                            ; preds = %entry
  %add = add nsw i32 %x, 1
  %0 = load i32* @nx, align 4, !tbaa !5
  %rem = srem i32 %add, %0
  store i32 %rem, i32* %x2p, align 4, !tbaa !5
  br label %sw.epilog

sw.bb1:                                           ; preds = %entry
  %1 = load i32* @nx, align 4, !tbaa !5
  %add2 = add i32 %x, -1
  %sub = add i32 %add2, %1
  %rem3 = srem i32 %sub, %1
  store i32 %rem3, i32* %x2p, align 4, !tbaa !5
  br label %sw.epilog

sw.bb4:                                           ; preds = %entry
  %add5 = add nsw i32 %y, 1
  %2 = load i32* @ny, align 4, !tbaa !5
  %rem6 = srem i32 %add5, %2
  store i32 %rem6, i32* %y2p, align 4, !tbaa !5
  br label %sw.epilog

sw.bb7:                                           ; preds = %entry
  %3 = load i32* @ny, align 4, !tbaa !5
  %add8 = add i32 %y, -1
  %sub9 = add i32 %add8, %3
  %rem10 = srem i32 %sub9, %3
  store i32 %rem10, i32* %y2p, align 4, !tbaa !5
  br label %sw.epilog

sw.bb11:                                          ; preds = %entry
  %add12 = add nsw i32 %z, 1
  %4 = load i32* @nz, align 4, !tbaa !5
  %rem13 = srem i32 %add12, %4
  store i32 %rem13, i32* %z2p, align 4, !tbaa !5
  br label %sw.epilog

sw.bb14:                                          ; preds = %entry
  %5 = load i32* @nz, align 4, !tbaa !5
  %add15 = add i32 %z, -1
  %sub16 = add i32 %add15, %5
  %rem17 = srem i32 %sub16, %5
  store i32 %rem17, i32* %z2p, align 4, !tbaa !5
  br label %sw.epilog

sw.bb18:                                          ; preds = %entry
  %add19 = add nsw i32 %t, 1
  %6 = load i32* @nt, align 4, !tbaa !5
  %rem20 = srem i32 %add19, %6
  store i32 %rem20, i32* %t2p, align 4, !tbaa !5
  br label %sw.epilog

sw.bb21:                                          ; preds = %entry
  %7 = load i32* @nt, align 4, !tbaa !5
  %add22 = add i32 %t, -1
  %sub23 = add i32 %add22, %7
  %rem24 = srem i32 %sub23, %7
  store i32 %rem24, i32* %t2p, align 4, !tbaa !5
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  %puts = tail call i32 @puts(i8* getelementptr inbounds ([21 x i8]* @str17, i64 0, i64 0))
  tail call void @exit(i32 1) #8
  unreachable

sw.epilog:                                        ; preds = %sw.bb21, %sw.bb18, %sw.bb14, %sw.bb11, %sw.bb7, %sw.bb4, %sw.bb1, %sw.bb
  ret void
}

; Function Attrs: nounwind readnone uwtable
define void @start_handlers() #0 {
entry:
  ret void
}

; Function Attrs: nounwind uwtable
define noalias %struct.msg_tag* @start_gather(i32 %field, i32 %size, i32 %index, i32 %parity, i8** nocapture %dest) #1 {
entry:
  switch i32 %parity, label %sw.epilog [
    i32 2, label %for.cond.preheader
    i32 1, label %sw.bb7
    i32 3, label %for.cond28.preheader
  ]

for.cond28.preheader:                             ; preds = %entry
  %0 = load i32* @sites_on_node, align 4, !tbaa !5
  %cmp2971 = icmp sgt i32 %0, 0
  br i1 %cmp2971, label %for.body30.lr.ph, label %sw.epilog

for.body30.lr.ph:                                 ; preds = %for.cond28.preheader
  %idxprom32 = sext i32 %index to i64
  %idx.ext37 = sext i32 %field to i64
  br label %for.body30

for.cond.preheader:                               ; preds = %entry
  %1 = load i32* @even_sites_on_node, align 4, !tbaa !5
  %cmp67 = icmp sgt i32 %1, 0
  br i1 %cmp67, label %for.body.lr.ph, label %sw.epilog

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %idxprom1 = sext i32 %index to i64
  %idx.ext3 = sext i32 %field to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %2 = load %struct.site** @lattice, align 8, !tbaa !1
  %3 = load i32*** @neighbor, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds i32** %3, i64 %idxprom1
  %4 = load i32** %arrayidx, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds i32* %4, i64 %indvars.iv
  %5 = load i32* %arrayidx2, align 4, !tbaa !5
  %idx.ext = sext i32 %5 to i64
  %add.ptr = getelementptr inbounds %struct.site* %2, i64 %idx.ext
  %6 = bitcast %struct.site* %add.ptr to i8*
  %add.ptr4 = getelementptr inbounds i8* %6, i64 %idx.ext3
  %arrayidx6 = getelementptr inbounds i8** %dest, i64 %indvars.iv
  store i8* %add.ptr4, i8** %arrayidx6, align 8, !tbaa !1
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %7 = trunc i64 %indvars.iv.next to i32
  %cmp = icmp slt i32 %7, %1
  br i1 %cmp, label %for.body, label %sw.epilog

sw.bb7:                                           ; preds = %entry
  %8 = load i32* @even_sites_on_node, align 4, !tbaa !5
  %9 = load i32* @sites_on_node, align 4, !tbaa !5
  %cmp1169 = icmp slt i32 %8, %9
  br i1 %cmp1169, label %for.body12.lr.ph, label %sw.epilog

for.body12.lr.ph:                                 ; preds = %sw.bb7
  %idxprom14 = sext i32 %index to i64
  %idx.ext19 = sext i32 %field to i64
  %10 = sext i32 %8 to i64
  br label %for.body12

for.body12:                                       ; preds = %for.body12.lr.ph, %for.body12
  %indvars.iv73 = phi i64 [ %10, %for.body12.lr.ph ], [ %indvars.iv.next74, %for.body12 ]
  %11 = load %struct.site** @lattice, align 8, !tbaa !1
  %12 = load i32*** @neighbor, align 8, !tbaa !1
  %arrayidx15 = getelementptr inbounds i32** %12, i64 %idxprom14
  %13 = load i32** %arrayidx15, align 8, !tbaa !1
  %arrayidx16 = getelementptr inbounds i32* %13, i64 %indvars.iv73
  %14 = load i32* %arrayidx16, align 4, !tbaa !5
  %idx.ext17 = sext i32 %14 to i64
  %add.ptr18 = getelementptr inbounds %struct.site* %11, i64 %idx.ext17
  %15 = bitcast %struct.site* %add.ptr18 to i8*
  %add.ptr20 = getelementptr inbounds i8* %15, i64 %idx.ext19
  %arrayidx22 = getelementptr inbounds i8** %dest, i64 %indvars.iv73
  store i8* %add.ptr20, i8** %arrayidx22, align 8, !tbaa !1
  %indvars.iv.next74 = add nsw i64 %indvars.iv73, 1
  %16 = trunc i64 %indvars.iv.next74 to i32
  %cmp11 = icmp slt i32 %16, %9
  br i1 %cmp11, label %for.body12, label %sw.epilog

for.body30:                                       ; preds = %for.body30.lr.ph, %for.body30
  %indvars.iv75 = phi i64 [ 0, %for.body30.lr.ph ], [ %indvars.iv.next76, %for.body30 ]
  %17 = load %struct.site** @lattice, align 8, !tbaa !1
  %18 = load i32*** @neighbor, align 8, !tbaa !1
  %arrayidx33 = getelementptr inbounds i32** %18, i64 %idxprom32
  %19 = load i32** %arrayidx33, align 8, !tbaa !1
  %arrayidx34 = getelementptr inbounds i32* %19, i64 %indvars.iv75
  %20 = load i32* %arrayidx34, align 4, !tbaa !5
  %idx.ext35 = sext i32 %20 to i64
  %add.ptr36 = getelementptr inbounds %struct.site* %17, i64 %idx.ext35
  %21 = bitcast %struct.site* %add.ptr36 to i8*
  %add.ptr38 = getelementptr inbounds i8* %21, i64 %idx.ext37
  %arrayidx40 = getelementptr inbounds i8** %dest, i64 %indvars.iv75
  store i8* %add.ptr38, i8** %arrayidx40, align 8, !tbaa !1
  %indvars.iv.next76 = add nuw nsw i64 %indvars.iv75, 1
  %22 = trunc i64 %indvars.iv.next76 to i32
  %cmp29 = icmp slt i32 %22, %0
  br i1 %cmp29, label %for.body30, label %sw.epilog

sw.epilog:                                        ; preds = %for.body30, %for.body12, %for.body, %for.cond28.preheader, %sw.bb7, %for.cond.preheader, %entry
  ret %struct.msg_tag* null
}

; Function Attrs: nounwind readnone uwtable
define void @restart_gather(i32 %field, i32 %size, i32 %index, i32 %parity, i8** nocapture %dest, %struct.msg_tag* nocapture %mbuf) #0 {
entry:
  ret void
}

; Function Attrs: nounwind uwtable
define noalias %struct.msg_tag* @start_gather_from_temp(i8* %field, i32 %size, i32 %index, i32 %parity, i8** nocapture %dest) #1 {
entry:
  switch i32 %parity, label %sw.epilog [
    i32 2, label %for.cond.preheader
    i32 1, label %sw.bb5
    i32 3, label %for.cond25.preheader
  ]

for.cond25.preheader:                             ; preds = %entry
  %0 = load i32* @sites_on_node, align 4, !tbaa !5
  %cmp2669 = icmp sgt i32 %0, 0
  br i1 %cmp2669, label %for.body27.lr.ph, label %sw.epilog

for.body27.lr.ph:                                 ; preds = %for.cond25.preheader
  %idxprom29 = sext i32 %index to i64
  br label %for.body27

for.cond.preheader:                               ; preds = %entry
  %1 = load i32* @even_sites_on_node, align 4, !tbaa !5
  %cmp65 = icmp sgt i32 %1, 0
  br i1 %cmp65, label %for.body.lr.ph, label %sw.epilog

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %idxprom1 = sext i32 %index to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %2 = load i32*** @neighbor, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds i32** %2, i64 %idxprom1
  %3 = load i32** %arrayidx, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds i32* %3, i64 %indvars.iv
  %4 = load i32* %arrayidx2, align 4, !tbaa !5
  %mul = mul nsw i32 %4, %size
  %idx.ext = sext i32 %mul to i64
  %add.ptr = getelementptr inbounds i8* %field, i64 %idx.ext
  %arrayidx4 = getelementptr inbounds i8** %dest, i64 %indvars.iv
  store i8* %add.ptr, i8** %arrayidx4, align 8, !tbaa !1
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %5 = trunc i64 %indvars.iv.next to i32
  %cmp = icmp slt i32 %5, %1
  br i1 %cmp, label %for.body, label %sw.epilog

sw.bb5:                                           ; preds = %entry
  %6 = load i32* @even_sites_on_node, align 4, !tbaa !5
  %7 = load i32* @sites_on_node, align 4, !tbaa !5
  %cmp967 = icmp slt i32 %6, %7
  br i1 %cmp967, label %for.body10.lr.ph, label %sw.epilog

for.body10.lr.ph:                                 ; preds = %sw.bb5
  %idxprom12 = sext i32 %index to i64
  %8 = sext i32 %6 to i64
  br label %for.body10

for.body10:                                       ; preds = %for.body10.lr.ph, %for.body10
  %indvars.iv71 = phi i64 [ %8, %for.body10.lr.ph ], [ %indvars.iv.next72, %for.body10 ]
  %9 = load i32*** @neighbor, align 8, !tbaa !1
  %arrayidx13 = getelementptr inbounds i32** %9, i64 %idxprom12
  %10 = load i32** %arrayidx13, align 8, !tbaa !1
  %arrayidx14 = getelementptr inbounds i32* %10, i64 %indvars.iv71
  %11 = load i32* %arrayidx14, align 4, !tbaa !5
  %mul15 = mul nsw i32 %11, %size
  %idx.ext16 = sext i32 %mul15 to i64
  %add.ptr17 = getelementptr inbounds i8* %field, i64 %idx.ext16
  %arrayidx19 = getelementptr inbounds i8** %dest, i64 %indvars.iv71
  store i8* %add.ptr17, i8** %arrayidx19, align 8, !tbaa !1
  %indvars.iv.next72 = add nsw i64 %indvars.iv71, 1
  %12 = trunc i64 %indvars.iv.next72 to i32
  %cmp9 = icmp slt i32 %12, %7
  br i1 %cmp9, label %for.body10, label %sw.epilog

for.body27:                                       ; preds = %for.body27.lr.ph, %for.body27
  %indvars.iv73 = phi i64 [ 0, %for.body27.lr.ph ], [ %indvars.iv.next74, %for.body27 ]
  %13 = load i32*** @neighbor, align 8, !tbaa !1
  %arrayidx30 = getelementptr inbounds i32** %13, i64 %idxprom29
  %14 = load i32** %arrayidx30, align 8, !tbaa !1
  %arrayidx31 = getelementptr inbounds i32* %14, i64 %indvars.iv73
  %15 = load i32* %arrayidx31, align 4, !tbaa !5
  %mul32 = mul nsw i32 %15, %size
  %idx.ext33 = sext i32 %mul32 to i64
  %add.ptr34 = getelementptr inbounds i8* %field, i64 %idx.ext33
  %arrayidx36 = getelementptr inbounds i8** %dest, i64 %indvars.iv73
  store i8* %add.ptr34, i8** %arrayidx36, align 8, !tbaa !1
  %indvars.iv.next74 = add nuw nsw i64 %indvars.iv73, 1
  %16 = trunc i64 %indvars.iv.next74 to i32
  %cmp26 = icmp slt i32 %16, %0
  br i1 %cmp26, label %for.body27, label %sw.epilog

sw.epilog:                                        ; preds = %for.body27, %for.body10, %for.body, %for.cond25.preheader, %sw.bb5, %for.cond.preheader, %entry
  ret %struct.msg_tag* null
}

; Function Attrs: nounwind readnone uwtable
define void @restart_gather_from_temp(i8* nocapture %field, i32 %size, i32 %index, i32 %parity, i8** nocapture %dest, %struct.msg_tag* nocapture %mbuf) #0 {
entry:
  ret void
}

; Function Attrs: nounwind readnone uwtable
define void @wait_gather(%struct.msg_tag* nocapture %mbuf) #0 {
entry:
  ret void
}

; Function Attrs: nounwind readnone uwtable
define void @cleanup_gather(%struct.msg_tag* nocapture %mbuf) #0 {
entry:
  ret void
}

; Function Attrs: nounwind uwtable
define noalias %struct.msg_tag* @start_general_gather(i32 %field, i32 %size, i32* nocapture readonly %displacement, i32 %parity, i8** nocapture %dest) #1 {
entry:
  %0 = load i32* @g_gather_flag, align 4, !tbaa !5
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE** @stderr, align 8, !tbaa !1
  %call1 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([48 x i8]* @.str8, i64 0, i64 0), i32 0) #9
  tail call void @exit(i32 1) #8
  unreachable

if.end:                                           ; preds = %entry
  %cmp2 = icmp eq i32 %parity, 1
  %2 = load i32* @even_sites_on_node, align 4, !tbaa !5
  %cond = select i1 %cmp2, i32 %2, i32 0
  %cmp3 = icmp eq i32 %parity, 2
  %3 = load i32* @sites_on_node, align 4, !tbaa !5
  %cond776 = select i1 %cmp3, i32 %2, i32 %3
  %cmp877 = icmp slt i32 %cond, %cond776
  br i1 %cmp877, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %if.end
  %4 = load %struct.site** @lattice, align 8, !tbaa !1
  %idxprom = sext i32 %cond to i64
  %arrayidx = getelementptr inbounds %struct.site* %4, i64 %idxprom
  %arrayidx17 = getelementptr inbounds i32* %displacement, i64 1
  %arrayidx30 = getelementptr inbounds i32* %displacement, i64 2
  %arrayidx43 = getelementptr inbounds i32* %displacement, i64 3
  %idx.ext = sext i32 %field to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %if.end55
  %indvars.iv = phi i64 [ %idxprom, %for.body.lr.ph ], [ %indvars.iv.next, %if.end55 ]
  %s.079 = phi %struct.site* [ %arrayidx, %for.body.lr.ph ], [ %incdec.ptr, %if.end55 ]
  %5 = load i32* %displacement, align 4, !tbaa !5
  %cmp10 = icmp eq i32 %5, 0
  %x = getelementptr inbounds %struct.site* %s.079, i64 0, i32 0
  %6 = load i16* %x, align 2, !tbaa !7
  %conv = sext i16 %6 to i32
  br i1 %cmp10, label %if.end16, label %if.then11

if.then11:                                        ; preds = %for.body
  %add = add nsw i32 %conv, %5
  %7 = load i32* @nx, align 4, !tbaa !5
  %add13 = add nsw i32 %add, %7
  %rem = srem i32 %add13, %7
  br label %if.end16

if.end16:                                         ; preds = %for.body, %if.then11
  %tx.0 = phi i32 [ %rem, %if.then11 ], [ %conv, %for.body ]
  %8 = load i32* %arrayidx17, align 4, !tbaa !5
  %cmp18 = icmp eq i32 %8, 0
  %y = getelementptr inbounds %struct.site* %s.079, i64 0, i32 1
  %9 = load i16* %y, align 2, !tbaa !14
  %conv21 = sext i16 %9 to i32
  br i1 %cmp18, label %if.end29, label %if.then20

if.then20:                                        ; preds = %if.end16
  %add23 = add nsw i32 %conv21, %8
  %10 = load i32* @ny, align 4, !tbaa !5
  %add24 = add nsw i32 %add23, %10
  %rem25 = srem i32 %add24, %10
  br label %if.end29

if.end29:                                         ; preds = %if.end16, %if.then20
  %ty.0 = phi i32 [ %rem25, %if.then20 ], [ %conv21, %if.end16 ]
  %11 = load i32* %arrayidx30, align 4, !tbaa !5
  %cmp31 = icmp eq i32 %11, 0
  %z = getelementptr inbounds %struct.site* %s.079, i64 0, i32 2
  %12 = load i16* %z, align 2, !tbaa !15
  %conv34 = sext i16 %12 to i32
  br i1 %cmp31, label %if.end42, label %if.then33

if.then33:                                        ; preds = %if.end29
  %add36 = add nsw i32 %conv34, %11
  %13 = load i32* @nz, align 4, !tbaa !5
  %add37 = add nsw i32 %add36, %13
  %rem38 = srem i32 %add37, %13
  br label %if.end42

if.end42:                                         ; preds = %if.end29, %if.then33
  %tz.0 = phi i32 [ %rem38, %if.then33 ], [ %conv34, %if.end29 ]
  %14 = load i32* %arrayidx43, align 4, !tbaa !5
  %cmp44 = icmp eq i32 %14, 0
  %t = getelementptr inbounds %struct.site* %s.079, i64 0, i32 3
  %15 = load i16* %t, align 2, !tbaa !16
  %conv47 = sext i16 %15 to i32
  br i1 %cmp44, label %if.end55, label %if.then46

if.then46:                                        ; preds = %if.end42
  %add49 = add nsw i32 %conv47, %14
  %16 = load i32* @nt, align 4, !tbaa !5
  %add50 = add nsw i32 %add49, %16
  %rem51 = srem i32 %add50, %16
  br label %if.end55

if.end55:                                         ; preds = %if.end42, %if.then46
  %tt.0 = phi i32 [ %rem51, %if.then46 ], [ %conv47, %if.end42 ]
  %call56 = tail call i32 @node_index(i32 %tx.0, i32 %ty.0, i32 %tz.0, i32 %tt.0) #3
  %idxprom57 = sext i32 %call56 to i64
  %17 = load %struct.site** @lattice, align 8, !tbaa !1
  %arrayidx58 = getelementptr inbounds %struct.site* %17, i64 %idxprom57
  %18 = bitcast %struct.site* %arrayidx58 to i8*
  %add.ptr = getelementptr inbounds i8* %18, i64 %idx.ext
  %arrayidx60 = getelementptr inbounds i8** %dest, i64 %indvars.iv
  store i8* %add.ptr, i8** %arrayidx60, align 8, !tbaa !1
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %incdec.ptr = getelementptr inbounds %struct.site* %s.079, i64 1
  %19 = load i32* @even_sites_on_node, align 4, !tbaa !5
  %20 = load i32* @sites_on_node, align 4, !tbaa !5
  %cond7 = select i1 %cmp3, i32 %19, i32 %20
  %21 = trunc i64 %indvars.iv.next to i32
  %cmp8 = icmp slt i32 %21, %cond7
  br i1 %cmp8, label %for.body, label %for.end

for.end:                                          ; preds = %if.end55, %if.end
  store i32 1, i32* @g_gather_flag, align 4, !tbaa !5
  ret %struct.msg_tag* null
}

; Function Attrs: nounwind
declare i32 @fprintf(%struct._IO_FILE* nocapture, i8* nocapture readonly, ...) #2

; Function Attrs: nounwind uwtable
define void @wait_general_gather(%struct.msg_tag* nocapture readnone %mbuf) #1 {
entry:
  store i32 0, i32* @g_gather_flag, align 4, !tbaa !5
  ret void
}

; Function Attrs: nounwind readnone uwtable
define void @cleanup_general_gather(%struct.msg_tag* nocapture %mbuf) #0 {
entry:
  ret void
}

; Function Attrs: nounwind uwtable
define i8* @field_pointer_at_coordinates(i32 %field, i32 %size, i32 %x, i32 %y, i32 %z, i32 %t) #1 {
entry:
  %call = tail call i32 @node_index(i32 %x, i32 %y, i32 %z, i32 %t) #3
  %idxprom = sext i32 %call to i64
  %0 = load %struct.site** @lattice, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds %struct.site* %0, i64 %idxprom
  %1 = bitcast %struct.site* %arrayidx to i8*
  %idx.ext = sext i32 %field to i64
  %add.ptr = getelementptr inbounds i8* %1, i64 %idx.ext
  ret i8* %add.ptr
}

; Function Attrs: nounwind readonly uwtable
define i8* @field_pointer_at_direction(i32 %field, i32 %size, %struct.site* %s, i32 %direction) #7 {
entry:
  %0 = load %struct.site** @lattice, align 8, !tbaa !1
  %sub.ptr.lhs.cast = ptrtoint %struct.site* %s to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.site* %0 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 1808
  %idxprom = sext i32 %direction to i64
  %1 = load i32*** @neighbor, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds i32** %1, i64 %idxprom
  %2 = load i32** %arrayidx, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds i32* %2, i64 %sub.ptr.div
  %3 = load i32* %arrayidx1, align 4, !tbaa !5
  %conv = sext i32 %3 to i64
  %4 = inttoptr i64 %conv to i8*
  %idx.ext = sext i32 %field to i64
  %add.ptr = getelementptr inbounds i8* %4, i64 %idx.ext
  ret i8* %add.ptr
}

; Function Attrs: nounwind readnone uwtable
define void @cleanup_field_pointer(i8* nocapture %buf) #0 {
entry:
  ret void
}

; Function Attrs: nounwind uwtable
define void @send_field(i8* nocapture readnone %buf, i32 %size, i32 %tonode) #1 {
entry:
  %puts = tail call i32 @puts(i8* getelementptr inbounds ([26 x i8]* @str21, i64 0, i64 0))
  ret void
}

; Function Attrs: nounwind uwtable
define void @get_field(i8* nocapture readnone %buf, i32 %size) #1 {
entry:
  %puts = tail call i32 @puts(i8* getelementptr inbounds ([26 x i8]* @str21, i64 0, i64 0))
  ret void
}

; Function Attrs: nounwind readnone uwtable
define i8* @machine_type() #0 {
entry:
  ret i8* getelementptr inbounds ([17 x i8]* @name, i64 0, i64 0)
}

; Function Attrs: nounwind readnone uwtable
define i32 @mynode() #0 {
entry:
  ret i32 0
}

; Function Attrs: nounwind readnone uwtable
define i32 @numnodes() #0 {
entry:
  ret i32 1
}

; Function Attrs: nounwind readnone uwtable
define void @g_sync() #0 {
entry:
  ret void
}

; Function Attrs: nounwind readnone uwtable
define void @g_floatsum(float* nocapture %fpt) #0 {
entry:
  ret void
}

; Function Attrs: nounwind readnone uwtable
define void @g_doublesum(double* nocapture %dpt) #0 {
entry:
  ret void
}

; Function Attrs: nounwind readnone uwtable
define void @g_vecdoublesum(double* nocapture %dpt, i32 %ndoubles) #0 {
entry:
  ret void
}

; Function Attrs: nounwind readnone uwtable
define void @g_complexsum(%struct.complex* nocapture %cpt) #0 {
entry:
  ret void
}

; Function Attrs: nounwind readnone uwtable
define void @g_dcomplexsum(%struct.double_complex* nocapture %cpt) #0 {
entry:
  ret void
}

; Function Attrs: nounwind readnone uwtable
define void @g_veccomplexsum(%struct.complex* nocapture %cpt, i32 %ncomplex) #0 {
entry:
  ret void
}

; Function Attrs: nounwind readnone uwtable
define void @g_wvectorsum(%struct.wilson_vector* nocapture %wvpt) #0 {
entry:
  ret void
}

; Function Attrs: nounwind readnone uwtable
define void @g_xor32(i32* nocapture %pt) #0 {
entry:
  ret void
}

; Function Attrs: nounwind readnone uwtable
define void @g_floatmax(float* nocapture %fpt) #0 {
entry:
  ret void
}

; Function Attrs: nounwind readnone uwtable
define void @g_doublemax(double* nocapture %dpt) #0 {
entry:
  ret void
}

; Function Attrs: nounwind readnone uwtable
define void @broadcast_float(float* nocapture %fpt) #0 {
entry:
  ret void
}

; Function Attrs: nounwind readnone uwtable
define void @broadcast_double(double* nocapture %dpt) #0 {
entry:
  ret void
}

; Function Attrs: nounwind readnone uwtable
define void @broadcast_complex(%struct.complex* nocapture %cpt) #0 {
entry:
  ret void
}

; Function Attrs: nounwind readnone uwtable
define void @broadcast_dcomplex(%struct.double_complex* nocapture %cpt) #0 {
entry:
  ret void
}

; Function Attrs: nounwind readnone uwtable
define void @broadcast_bytes(i8* nocapture %buf, i32 %size) #0 {
entry:
  ret void
}

; Function Attrs: nounwind uwtable
define void @send_integer(i32 %tonode, i32* nocapture readnone %address) #1 {
entry:
  %puts = tail call i32 @puts(i8* getelementptr inbounds ([26 x i8]* @str21, i64 0, i64 0))
  ret void
}

; Function Attrs: nounwind uwtable
define void @receive_integer(i32* nocapture readnone %address) #1 {
entry:
  %puts = tail call i32 @puts(i8* getelementptr inbounds ([26 x i8]* @str21, i64 0, i64 0))
  ret void
}

; Function Attrs: nounwind readnone uwtable
define double @dclock() #0 {
entry:
  ret double 0.000000e+00
}

; Function Attrs: nounwind uwtable
define void @time_stamp(i8* %msg) #1 {
entry:
  %time_stamp = alloca i64, align 8
  %call1 = call i64 @time(i64* %time_stamp) #3
  %call2 = call i8* @ctime(i64* %time_stamp) #3
  %call3 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([8 x i8]* @.str10, i64 0, i64 0), i8* %msg, i8* %call2) #3
  ret void
}

declare i64 @time(i64*) #6

declare i8* @ctime(i64*) #6

; Function Attrs: nounwind
declare i32 @fflush(%struct._IO_FILE* nocapture) #2

; Function Attrs: noreturn nounwind uwtable
define void @normal_exit(i32 %status) #5 {
entry:
  tail call void @exit(i32 %status) #8
  unreachable
}

; Function Attrs: nounwind
declare i32 @puts(i8* nocapture readonly) #3

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #3

attributes #0 = { nounwind readnone uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { noreturn "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readonly uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind }
attributes #9 = { cold nounwind }

!llvm.ident = !{!0}

!0 = metadata !{metadata !"clang version 3.5 (trunk)"}
!1 = metadata !{metadata !2, metadata !2, i64 0}
!2 = metadata !{metadata !"any pointer", metadata !3, i64 0}
!3 = metadata !{metadata !"omnipotent char", metadata !4, i64 0}
!4 = metadata !{metadata !"Simple C/C++ TBAA"}
!5 = metadata !{metadata !6, metadata !6, i64 0}
!6 = metadata !{metadata !"int", metadata !3, i64 0}
!7 = metadata !{metadata !8, metadata !9, i64 0}
!8 = metadata !{metadata !"", metadata !9, i64 0, metadata !9, i64 2, metadata !9, i64 4, metadata !9, i64 6, metadata !3, i64 8, metadata !6, i64 12, metadata !10, i64 16, metadata !6, i64 104, metadata !3, i64 112, metadata !3, i64 688, metadata !3, i64 1008, metadata !13, i64 1040, metadata !13, i64 1088, metadata !13, i64 1136, metadata !13, i64 1184, metadata !13, i64 1232, metadata !13, i64 1280, metadata !3, i64 1328, metadata !13, i64 1520, metadata !13, i64 1664}
!9 = metadata !{metadata !"short", metadata !3, i64 0}
!10 = metadata !{metadata !"", metadata !11, i64 0, metadata !11, i64 8, metadata !11, i64 16, metadata !11, i64 24, metadata !11, i64 32, metadata !11, i64 40, metadata !11, i64 48, metadata !11, i64 56, metadata !11, i64 64, metadata !11, i64 72, metadata !12, i64 80}
!11 = metadata !{metadata !"long", metadata !3, i64 0}
!12 = metadata !{metadata !"double", metadata !3, i64 0}
!13 = metadata !{metadata !"", metadata !3, i64 0}
!14 = metadata !{metadata !8, metadata !9, i64 2}
!15 = metadata !{metadata !8, metadata !9, i64 4}
!16 = metadata !{metadata !8, metadata !9, i64 6}
!17 = metadata !{metadata !8, metadata !3, i64 8}
