; ModuleID = 'ploop3.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.site = type { i16, i16, i16, i16, i8, i32, %struct.double_prn, i32, [4 x %struct.su3_matrix], [4 x %struct.su3_matrix], [4 x %struct.su3_matrix], [4 x %struct.anti_hermitmat], [4 x double], %struct.su3_vector, %struct.su3_vector, %struct.su3_vector, %struct.su3_vector, %struct.su3_vector, %struct.su3_vector, [4 x %struct.su3_vector], [4 x %struct.su3_vector], %struct.su3_vector, %struct.su3_matrix, %struct.su3_matrix }
%struct.double_prn = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, double }
%struct.anti_hermitmat = type { %struct.complex, %struct.complex, %struct.complex, double, double, double, double }
%struct.complex = type { double, double }
%struct.su3_vector = type { [3 x %struct.complex] }
%struct.su3_matrix = type { [3 x [3 x %struct.complex]] }
%struct.msg_tag = type { i32, i32, i8*, i32 }

@lattice = external global %struct.site*
@gen_pt = external global [16 x i8**]
@even_sites_on_node = external global i32
@nt = external global i32
@nx = external global i32
@ny = external global i32
@nz = external global i32

; Function Attrs: nounwind uwtable
define { double, double } @ploop() #0 {
entry:
  %sum = alloca <2 x double>, align 16
  %tmpcast = bitcast <2 x double>* %sum to %struct.complex*
  %tmat = alloca %struct.su3_matrix, align 8
  %d = alloca [4 x i32], align 16
  %0 = bitcast %struct.su3_matrix* %tmat to i8*
  call void @llvm.lifetime.start(i64 144, i8* %0) #1
  %call = call { double, double } @cmplx(double 0.000000e+00, double 0.000000e+00) #1
  %1 = extractvalue { double, double } %call, 0
  %2 = extractvalue { double, double } %call, 1
  %coerce.sroa.0.0..sroa_idx = getelementptr inbounds <2 x double>* %sum, i64 0, i64 0
  store double %1, double* %coerce.sroa.0.0..sroa_idx, align 16
  %coerce.sroa.2.0..sroa_idx76 = getelementptr inbounds %struct.complex* %tmpcast, i64 0, i32 1
  store double %2, double* %coerce.sroa.2.0..sroa_idx76, align 8
  %arrayidx = getelementptr inbounds [4 x i32]* %d, i64 0, i64 2
  store i32 0, i32* %arrayidx, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds [4 x i32]* %d, i64 0, i64 1
  store i32 0, i32* %arrayidx1, align 4, !tbaa !1
  %arrayidx2 = getelementptr inbounds [4 x i32]* %d, i64 0, i64 0
  store i32 0, i32* %arrayidx2, align 16, !tbaa !1
  %3 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i64 0, i64 0), align 8, !tbaa !5
  %call6 = call %struct.msg_tag* @start_gather(i32 544, i32 144, i32 3, i32 2, i8** %3) #1
  call void @wait_gather(%struct.msg_tag* %call6) #1
  %4 = load i32* @even_sites_on_node, align 4, !tbaa !1
  %cmp107 = icmp sgt i32 %4, 0
  br i1 %cmp107, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %5 = load %struct.site** @lattice, align 8, !tbaa !5
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv110 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next111, %for.body ]
  %st.0108 = phi %struct.site* [ %5, %for.body.lr.ph ], [ %incdec.ptr, %for.body ]
  %arrayidx9 = getelementptr inbounds %struct.site* %st.0108, i64 0, i32 8, i64 3
  %6 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i64 0, i64 0), align 8, !tbaa !5
  %arrayidx10 = getelementptr inbounds i8** %6, i64 %indvars.iv110
  %7 = load i8** %arrayidx10, align 8, !tbaa !5
  %8 = bitcast i8* %7 to %struct.su3_matrix*
  %tempmat1 = getelementptr inbounds %struct.site* %st.0108, i64 0, i32 22
  call void @mult_su3_nn(%struct.su3_matrix* %arrayidx9, %struct.su3_matrix* %8, %struct.su3_matrix* %tempmat1) #1
  %indvars.iv.next111 = add nuw nsw i64 %indvars.iv110, 1
  %incdec.ptr = getelementptr inbounds %struct.site* %st.0108, i64 1
  %9 = load i32* @even_sites_on_node, align 4, !tbaa !1
  %10 = trunc i64 %indvars.iv.next111 to i32
  %cmp = icmp slt i32 %10, %9
  br i1 %cmp, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %entry
  call void @cleanup_gather(%struct.msg_tag* %call6) #1
  %11 = load i32* @nt, align 4, !tbaa !1
  %cmp12105 = icmp sgt i32 %11, 2
  br i1 %cmp12105, label %for.body14.lr.ph, label %for.end43

for.body14.lr.ph:                                 ; preds = %for.end
  %arrayidx15 = getelementptr inbounds [4 x i32]* %d, i64 0, i64 3
  br label %for.body14

for.body14:                                       ; preds = %for.body14.lr.ph, %for.end41
  %t.0106 = phi i32 [ 2, %for.body14.lr.ph ], [ %add, %for.end41 ]
  store i32 %t.0106, i32* %arrayidx15, align 4, !tbaa !1
  %12 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i64 0, i64 0), align 8, !tbaa !5
  %call23 = call %struct.msg_tag* @start_general_gather(i32 2912, i32 144, i32* %arrayidx2, i32 2, i8** %12) #1
  call void @wait_general_gather(%struct.msg_tag* %call23) #1
  %13 = load i32* @even_sites_on_node, align 4, !tbaa !1
  %cmp25102 = icmp sgt i32 %13, 0
  br i1 %cmp25102, label %for.body27.lr.ph, label %for.end41

for.body27.lr.ph:                                 ; preds = %for.body14
  %14 = load %struct.site** @lattice, align 8, !tbaa !5
  br label %for.body27

for.body27:                                       ; preds = %for.body27.lr.ph, %for.inc38
  %15 = phi i32 [ %13, %for.body27.lr.ph ], [ %22, %for.inc38 ]
  %indvars.iv = phi i64 [ 0, %for.body27.lr.ph ], [ %indvars.iv.next, %for.inc38 ]
  %st.1103 = phi %struct.site* [ %14, %for.body27.lr.ph ], [ %incdec.ptr40, %for.inc38 ]
  %t28 = getelementptr inbounds %struct.site* %st.1103, i64 0, i32 3
  %16 = load i16* %t28, align 2, !tbaa !7
  %cmp30 = icmp sgt i16 %16, 1
  br i1 %cmp30, label %for.inc38, label %if.end

if.end:                                           ; preds = %for.body27
  %tempmat132 = getelementptr inbounds %struct.site* %st.1103, i64 0, i32 22
  %17 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i64 0, i64 0), align 8, !tbaa !5
  %arrayidx34 = getelementptr inbounds i8** %17, i64 %indvars.iv
  %18 = load i8** %arrayidx34, align 8, !tbaa !5
  %19 = bitcast i8* %18 to %struct.su3_matrix*
  call void @mult_su3_nn(%struct.su3_matrix* %tempmat132, %struct.su3_matrix* %19, %struct.su3_matrix* %tmat) #1
  %20 = load %struct.site** @lattice, align 8, !tbaa !5
  %tempmat137 = getelementptr inbounds %struct.site* %20, i64 %indvars.iv, i32 22
  %21 = bitcast %struct.su3_matrix* %tempmat137 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %21, i8* %0, i64 144, i32 8, i1 false), !tbaa.struct !14
  %.pre112 = load i32* @even_sites_on_node, align 4, !tbaa !1
  br label %for.inc38

for.inc38:                                        ; preds = %for.body27, %if.end
  %22 = phi i32 [ %15, %for.body27 ], [ %.pre112, %if.end ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %incdec.ptr40 = getelementptr inbounds %struct.site* %st.1103, i64 1
  %23 = trunc i64 %indvars.iv.next to i32
  %cmp25 = icmp slt i32 %23, %22
  br i1 %cmp25, label %for.body27, label %for.end41

for.end41:                                        ; preds = %for.inc38, %for.body14
  call void @cleanup_general_gather(%struct.msg_tag* %call23) #1
  %add = add nsw i32 %t.0106, 2
  %24 = load i32* @nt, align 4, !tbaa !1
  %cmp12 = icmp slt i32 %add, %24
  br i1 %cmp12, label %for.body14, label %for.end43

for.end43:                                        ; preds = %for.end41, %for.end
  %25 = load i32* @even_sites_on_node, align 4, !tbaa !1
  %cmp4599 = icmp sgt i32 %25, 0
  br i1 %cmp4599, label %for.body47.lr.ph, label %for.end64

for.body47.lr.ph:                                 ; preds = %for.end43
  %26 = load %struct.site** @lattice, align 8, !tbaa !5
  br label %for.body47

for.body47:                                       ; preds = %for.body47.lr.ph, %for.inc61
  %27 = phi i32 [ %25, %for.body47.lr.ph ], [ %35, %for.inc61 ]
  %i.2101 = phi i32 [ 0, %for.body47.lr.ph ], [ %inc62, %for.inc61 ]
  %st.2100 = phi %struct.site* [ %26, %for.body47.lr.ph ], [ %incdec.ptr63, %for.inc61 ]
  %t48 = getelementptr inbounds %struct.site* %st.2100, i64 0, i32 3
  %28 = load i16* %t48, align 2, !tbaa !7
  %cmp50 = icmp sgt i16 %28, 1
  br i1 %cmp50, label %for.inc61, label %if.end53

if.end53:                                         ; preds = %for.body47
  %tempmat154 = getelementptr inbounds %struct.site* %st.2100, i64 0, i32 22
  %call55 = call { double, double } @trace_su3(%struct.su3_matrix* %tempmat154) #1
  %29 = extractvalue { double, double } %call55, 0
  %30 = extractvalue { double, double } %call55, 1
  %31 = load <2 x double>* %sum, align 16, !tbaa !16
  %32 = insertelement <2 x double> undef, double %29, i32 0
  %33 = insertelement <2 x double> %32, double %30, i32 1
  %34 = fadd <2 x double> %31, %33
  store <2 x double> %34, <2 x double>* %sum, align 16, !tbaa !16
  %.pre = load i32* @even_sites_on_node, align 4, !tbaa !1
  br label %for.inc61

for.inc61:                                        ; preds = %for.body47, %if.end53
  %35 = phi i32 [ %27, %for.body47 ], [ %.pre, %if.end53 ]
  %inc62 = add nsw i32 %i.2101, 1
  %incdec.ptr63 = getelementptr inbounds %struct.site* %st.2100, i64 1
  %cmp45 = icmp slt i32 %inc62, %35
  br i1 %cmp45, label %for.body47, label %for.end64

for.end64:                                        ; preds = %for.inc61, %for.end43
  call void @g_complexsum(%struct.complex* %tmpcast) #1
  %36 = load double* %coerce.sroa.0.0..sroa_idx, align 16, !tbaa !17
  %37 = load i32* @nx, align 4, !tbaa !1
  %38 = load i32* @ny, align 4, !tbaa !1
  %mul = mul nsw i32 %38, %37
  %39 = load i32* @nz, align 4, !tbaa !1
  %mul66 = mul nsw i32 %mul, %39
  %conv67 = sitofp i32 %mul66 to double
  %div = fdiv double %36, %conv67
  %40 = load double* %coerce.sroa.2.0..sroa_idx76, align 8, !tbaa !19
  %div73 = fdiv double %40, %conv67
  call void @llvm.lifetime.end(i64 144, i8* %0) #1
  %.fca.0.insert = insertvalue { double, double } undef, double %div, 0
  %.fca.1.insert = insertvalue { double, double } %.fca.0.insert, double %div73, 1
  ret { double, double } %.fca.1.insert
}

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #1

declare { double, double } @cmplx(double, double) #2

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #1

declare %struct.msg_tag* @start_gather(i32, i32, i32, i32, i8**) #2

declare void @wait_gather(%struct.msg_tag*) #2

declare void @mult_su3_nn(%struct.su3_matrix*, %struct.su3_matrix*, %struct.su3_matrix*) #2

declare void @cleanup_gather(%struct.msg_tag*) #2

declare %struct.msg_tag* @start_general_gather(i32, i32, i32*, i32, i8**) #2

declare void @wait_general_gather(%struct.msg_tag*) #2

declare void @cleanup_general_gather(%struct.msg_tag*) #2

declare { double, double } @trace_su3(%struct.su3_matrix*) #2

declare void @g_complexsum(%struct.complex*) #2

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #1

attributes #0 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }
attributes #2 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = metadata !{metadata !"clang version 3.5 (trunk)"}
!1 = metadata !{metadata !2, metadata !2, i64 0}
!2 = metadata !{metadata !"int", metadata !3, i64 0}
!3 = metadata !{metadata !"omnipotent char", metadata !4, i64 0}
!4 = metadata !{metadata !"Simple C/C++ TBAA"}
!5 = metadata !{metadata !6, metadata !6, i64 0}
!6 = metadata !{metadata !"any pointer", metadata !3, i64 0}
!7 = metadata !{metadata !8, metadata !9, i64 6}
!8 = metadata !{metadata !"", metadata !9, i64 0, metadata !9, i64 2, metadata !9, i64 4, metadata !9, i64 6, metadata !3, i64 8, metadata !2, i64 12, metadata !10, i64 16, metadata !2, i64 104, metadata !3, i64 112, metadata !3, i64 688, metadata !3, i64 1264, metadata !3, i64 1840, metadata !3, i64 2160, metadata !13, i64 2192, metadata !13, i64 2240, metadata !13, i64 2288, metadata !13, i64 2336, metadata !13, i64 2384, metadata !13, i64 2432, metadata !3, i64 2480, metadata !3, i64 2672, metadata !13, i64 2864, metadata !13, i64 2912, metadata !13, i64 3056}
!9 = metadata !{metadata !"short", metadata !3, i64 0}
!10 = metadata !{metadata !"", metadata !11, i64 0, metadata !11, i64 8, metadata !11, i64 16, metadata !11, i64 24, metadata !11, i64 32, metadata !11, i64 40, metadata !11, i64 48, metadata !11, i64 56, metadata !11, i64 64, metadata !11, i64 72, metadata !12, i64 80}
!11 = metadata !{metadata !"long", metadata !3, i64 0}
!12 = metadata !{metadata !"double", metadata !3, i64 0}
!13 = metadata !{metadata !"", metadata !3, i64 0}
!14 = metadata !{i64 0, i64 144, metadata !15}
!15 = metadata !{metadata !3, metadata !3, i64 0}
!16 = metadata !{metadata !12, metadata !12, i64 0}
!17 = metadata !{metadata !18, metadata !12, i64 0}
!18 = metadata !{metadata !"", metadata !12, i64 0, metadata !12, i64 8}
!19 = metadata !{metadata !18, metadata !12, i64 8}
